00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000021C6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000021D0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
000021F8 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
000021FE <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002226 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002250 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000226E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
00002298 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002308 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002332 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002350 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000237A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
0000239A <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000023C6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000023D0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
000023EA <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002414 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000024C2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000024D8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
000024E2 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002514 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000251A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002520 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002526 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002538 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002542 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000255C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
0000259A <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000025A2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002650 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002664 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000026A6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000026C6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000026D0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
000026EC <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002726 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000272E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000027DC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002812 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002832 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002850 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002874 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000287E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
0000289A <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000028D4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002982 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
000029DA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
000029E0 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002A00 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002A0A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002A24 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002A3C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002A46 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002A62 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002A8C <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002A9A <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002B60 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002B8A <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002BB2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002BDC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002C06 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002C24 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002C4E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002CBA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002CE2 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002CF0 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002D24 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002D32 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002D54 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002D62 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002D86 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002DB0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002DF8 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002E22 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002E7A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002EA4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002EC2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002ED8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002EDE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00002EE8 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00002EF2 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00002F10 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00002F16 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
00002F1C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
00002F2C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00002F32 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
00002F3A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00002F62 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
00002F6C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00002F76 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
00002F8A <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
00002FA0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
00002FA6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
00002FCA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
00002FEE <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003018 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003044 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003046 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003074 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
0000309E <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003122 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
000031EA <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
000031F4 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000323E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
0000328A <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000032C2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000032D4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
000032EA <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
000032F0 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003306 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000333A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003340 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000334A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003364 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000033AE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
000033E4 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003408 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003412 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000343A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
00003482 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003558 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
00003582 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000035DC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
000035E2 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
000035E8 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
000035F0 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003626 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003634 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000363E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000366A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
00003682 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000036B0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000372E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
00003780 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
00003792 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003800 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003806 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003852 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003A00 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003A6C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003A72 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003A8E <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003A9C <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003AA2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003AB4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003ACA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003AD4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003AF0 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003B1A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003B2E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003B6C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003C52 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003C58 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003CA8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003CD2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003CF0 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003D1A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003D2E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003D6C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003E52 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003E58 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003ECA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00003EF4 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00003F12 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
00003F4C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
00003F84 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00003FDC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004040 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000406A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
0000408A <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000040B4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000040BA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000040D0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000040DA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
000040E0 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
000040F0 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
000040FA <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004114 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004142 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004164 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000416C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000417A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
00004194 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000041C2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000041D6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000420A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004224 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000422C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000423A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004254 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000427E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
0000428A <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000042AA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000042D0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
000042FC <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004314 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004322 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004328 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004334 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000433A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004346 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004356 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000435C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004368 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004372 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
0000438C <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
0000438C <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
0000439A <AmiBlitz3.ab3@81> If dos_FromCLI{}
000043A0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000043AC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000043AC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000043D4 <common.ab3@40> XINCLUDE "/Shared/common.ab3"
000043DA <common.ab3@252> XINCLUDE "/Shared/common.ab3"
000043DC <common.ab3@253> XINCLUDE "/Shared/common.ab3"
0000456C <common.ab3@254> XINCLUDE "/Shared/common.ab3"
00004570 <common.ab3@255> XINCLUDE "/Shared/common.ab3"
00004574 <common.ab3@257> XINCLUDE "/Shared/common.ab3"
00004578 <common.ab3@258> XINCLUDE "/Shared/common.ab3"
0000457C <common.ab3@260> XINCLUDE "/Shared/common.ab3"
00004580 <common.ab3@261> XINCLUDE "/Shared/common.ab3"
00004584 <common.ab3@262> XINCLUDE "/Shared/common.ab3"
00004588 <common.ab3@263> XINCLUDE "/Shared/common.ab3"
0000458C <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004590 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
00004594 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004598 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000459C <common.ab3@268> XINCLUDE "/Shared/common.ab3"
000045A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000045A4 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000045A8 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000045AC <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000045B0 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000045B4 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000045B8 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000045BC <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000045C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000045C4 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000045C8 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000045D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000045D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000045D6 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000045DA <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000045DC <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000045E0 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000045E4 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000045E8 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000045EC <common.ab3@292> XINCLUDE "/Shared/common.ab3"
000045F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000045F8 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
00004600 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
00004604 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
00004608 <common.ab3@297> XINCLUDE "/Shared/common.ab3"
0000460C <common.ab3@298> XINCLUDE "/Shared/common.ab3"
0000460E <common.ab3@300> XINCLUDE "/Shared/common.ab3"
000046CE <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004716 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
0000471A <common.ab3@304> XINCLUDE "/Shared/common.ab3"
0000471C <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004722 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@308> XINCLUDE "/Shared/common.ab3"
00004726 <common.ab3@309> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@310> XINCLUDE "/Shared/common.ab3"
0000472A <common.ab3@312> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000472D <common.ab3@317> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@319> XINCLUDE "/Shared/common.ab3"
00004730 <common.ab3@320> XINCLUDE "/Shared/common.ab3"
00004732 <common.ab3@321> XINCLUDE "/Shared/common.ab3"
00004734 <common.ab3@323> XINCLUDE "/Shared/common.ab3"
00004736 <common.ab3@326> XINCLUDE "/Shared/common.ab3"
00004738 <common.ab3@328> XINCLUDE "/Shared/common.ab3"
0000473A <common.ab3@330> XINCLUDE "/Shared/common.ab3"
0000473E <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004740 <common.ab3@334> XINCLUDE "/Shared/common.ab3"
00004742 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004744 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
00004748 <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000474A <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000474C <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004750 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004752 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00004754 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004756 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004758 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000475A <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000475E <common.ab3@352> XINCLUDE "/Shared/common.ab3"
00004760 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004762 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004764 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
00004766 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000476A <common.ab3@360> XINCLUDE "/Shared/common.ab3"
0000476C <common.ab3@366> XINCLUDE "/Shared/common.ab3"
0000476E <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004770 <common.ab3@370> XINCLUDE "/Shared/common.ab3"
00004772 <common.ab3@371> XINCLUDE "/Shared/common.ab3"
00004774 <common.ab3@372> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@373> XINCLUDE "/Shared/common.ab3"
0000477A <common.ab3@374> XINCLUDE "/Shared/common.ab3"
0000477C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000477E <common.ab3@376> XINCLUDE "/Shared/common.ab3"
00004780 <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004782 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004784 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004786 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000478A <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000478C <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000047BA <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000047C4 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000047C8 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000047CA <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000047CC <common.ab3@391> XINCLUDE "/Shared/common.ab3"
000047D0 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000047D4 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000047DD <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000047E0 <common.ab3@395> XINCLUDE "/Shared/common.ab3"
0000480D <common.ab3@396> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@397> XINCLUDE "/Shared/common.ab3"
00004859 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
000048A9 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048B5 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004905 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004A01 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004A03 <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004AC3 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004B03 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004B05 <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004B06 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004B0A <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B0E <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004B12 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004B16 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004B1A <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004B1E <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004B22 <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004B26 <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004B2A <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004B2E <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004B32 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004B36 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004B3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004B3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004B42 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004B46 <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004B4A <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004B4E <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004B58 <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004B5C <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004B60 <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00004B62 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004B64 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004B82 <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004B86 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004B88 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004B8C <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004BC0 <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004BC4 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004BD2 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004BE4 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004BE6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004BFA <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004C10 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004C3C <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004C54 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004C76 <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004C7A <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004C7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004C96 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004C9E <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004CAA <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004CAE <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004CB6 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004CBA <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004CC6 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004CC8 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004CCC <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004CCE <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004CD2 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004CDA <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004CDE <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004CE6 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004CEA <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004CEC <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004D00 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004D14 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004D28 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004D2A <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004D2E <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004D32 <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004D47 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004D48 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004D49 <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004D4C <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004D50 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004D54 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004D58 <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004D60 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004D64 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004D65 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004D68 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004D6C <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004D70 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004D78 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004D7C <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004D80 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004D84 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004D88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004D8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004D90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004D94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004D98 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004D9C <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004DA0 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004DA2 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004DA3 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004DA7 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004DAB <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004DAF <common.ab3@556> XINCLUDE "/Shared/common.ab3"
00004DB3 <common.ab3@557> XINCLUDE "/Shared/common.ab3"
00004DB4 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004DC0 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004DC9 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004DD2 <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004DDE <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004DEA <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@584> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004DF6 <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004E02 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004E0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004E12 <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004E16 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004E1A <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004E1E <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004E22 <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004E26 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004E26 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004E26 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E26 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E44 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E4C <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E7A <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EAA <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EBA <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EC4 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004ECA <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EEC <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F0A <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F1C <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F44 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F4A <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F7C <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F8E <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9C <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD0 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDE <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE8 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FFA <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005034 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005044 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000504A <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000505A <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005078 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005088 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AC <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B8 <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C6 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000050D4 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000050E2 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005126 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005134 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005144 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000514C <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005150 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005184 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000519E <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000051BE <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E8 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000521A <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005232 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525A <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005268 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005276 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A0 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AA <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B0 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F6 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005314 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005328 <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005340 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005368 <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00005380 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000538E <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000539C <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000053AA <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BE <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005412 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543C <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005480 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
000054E4 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000553C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005582 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00005588 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00005590 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000055DC <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005616 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005626 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000562C <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000563C <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005642 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005648 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005660 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569E <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000056BC <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EE <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005702 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005716 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572E <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005756 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005760 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576E <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005786 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000578C <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00005794 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DA <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
000057E4 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000057F2 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000057FC <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005828 <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583C <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005850 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00005886 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FC <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005916 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005928 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005932 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
0000594E <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005978 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005996 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
000059BA <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A02 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A64 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A72 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A86 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD8 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B28 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B2E <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B62 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA4 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB4 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BBE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BCE <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD4 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE0 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C14 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C44 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C7A <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C8E <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CA6 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCE <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CFE <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1A <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D28 <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D3C <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D90 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DBA <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DFE <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E24 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E66 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E84 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E8A <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDE <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F06 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2A <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F80 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD2 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006028 <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006038 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608A <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000060B2 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000060D8 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
000060FA <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006122 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006150 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006178 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006180 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000061A4 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D8 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F4 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061FE <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006232 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000624E <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625C <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000626A <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006288 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C6 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006322 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639A <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
000063F6 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000063FC <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006406 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000640C <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000643A <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006440 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006460 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646A <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000647C <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
0000648C <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00006496 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000064B0 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000064CA <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D2 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D8 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000064E2 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000064EA <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006568 <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658E <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D8 <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006628 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000663E <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006652 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000665C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006680 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000066B8 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BE <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000066CA <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DE <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E8 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006710 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006738 <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000674A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006776 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000067AA <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D6 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006822 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006832 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006838 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006844 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006872 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006874 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687A <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00006884 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068AE <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B8 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000068BE <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000068E8 <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F0 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006910 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000691A <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006990 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E4 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A02 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A26 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A40 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A74 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A8E <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE2 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFC <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B0C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B16 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B24 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B96 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BA0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BBC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BCA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C00 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C22 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C40 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C6E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C74 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C84 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C88 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9E <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CF2 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D08 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D18 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D34 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D50 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF8 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E14 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E30 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E68 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E84 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EBC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ED8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF4 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F10 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F2C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F48 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F64 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F80 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9C <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF0 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007028 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007044 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007060 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007098 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EC <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007108 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007124 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007140 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007178 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007194 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E8 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007204 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007220 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007258 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007274 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007290 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E4 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007300 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007338 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007354 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007370 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738C <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E0 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FC <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007418 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007434 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007450 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00007488 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F8 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007514 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007530 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007568 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00007584 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F4 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007610 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007648 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007664 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007680 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769C <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F0 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007728 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007744 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007760 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007798 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EC <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007808 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007824 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007840 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007878 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007894 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E8 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007904 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007920 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007958 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007974 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007990 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E4 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A00 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A38 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A54 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A70 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A8C <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE0 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFC <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B18 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B2A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B34 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B68 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B84 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE2 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BEC <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF6 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C48 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C64 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C72 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CCE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D40 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D4E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D54 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D5C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D62 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D7E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEA <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DFE <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E28 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E56 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E92 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E98 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE6 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F04 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F12 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F20 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F34 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F3E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F4C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F66 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F74 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F7A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FFA <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008008 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008018 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008062 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008076 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F0 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008112 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008142 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008170 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000081CC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F2 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008214 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000825C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000827E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00008284 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00008292 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000082AE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E0 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F0 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008306 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000831E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008344 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008360 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008372 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000083DC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F2 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F8 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008420 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E0 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008516 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008526 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008534 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000853A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000854A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008574 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000857A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000085B6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E4 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000085F2 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008628 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008660 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008670 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
0000868E <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869C <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008700 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008720 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000872E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008734 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000873A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008756 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008776 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008784 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878A <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879A <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000087B8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008828 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008842 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008866 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000887C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008894 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008904 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008940 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008950 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008964 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008974 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899E <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E0 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F0 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A0E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A1C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A52 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A76 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A8A <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9A <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AB8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AEA <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B14 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B24 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B4C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B54 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B8A <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BA6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE2 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BFE <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C26 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C62 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C90 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CF2 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D26 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D30 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D72 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D7C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DAA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DCA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DE2 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E40 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E6C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E7E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EA6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EE6 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF0 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF6 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F00 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00008F12 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00008F36 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00008F3E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
00008F6C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
00008F9A <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000900A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009018 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009068 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009068 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009068 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009068 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000908C <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
000090B4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000090D8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009106 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
00009324 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
00009352 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
0000937E <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
000093BA <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000093E6 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009412 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000943E <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000946A <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
00009496 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000094C2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000094EE <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000951A <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
000095A4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
0000962E <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
000096CC <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009716 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009756 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
0000975C <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
000097A6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
000097E6 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009810 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009816 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009840 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000986A <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
00009894 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
0000989E <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000098BC <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000098DE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
0000990C <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
0000993A <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009968 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
000099AE <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
000099F4 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009A3A <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009A72 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009B70 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009B8E <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009B98 <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009BBE <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009BD0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009BFE <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009C26 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009C38 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009C8E <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009CC4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009CD4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009CDA <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009CEC <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009CF6 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009D30 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009D36 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009D8E <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009DAC <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
00009DB2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
00009DC2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
00009DD2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009DE2 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009DF2 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009E02 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
00009E0C <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
00009E20 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009E36 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
00009E5E <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
00009E68 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009E7A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009EB4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009EBE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009EE8 <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
00009F00 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
00009F52 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
00009F80 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A012 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A058 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A0EA <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A104 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A104 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A11A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A130 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A146 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A15C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A168 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A174 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A180 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A18C <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A1B4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A1DC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A204 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A228 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A24C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A266 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A276 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A278 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A27A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A27C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A27E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A280 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A284 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A288 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A28C <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A28E <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A290 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A292 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A294 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A296 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A298 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A29A <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A2A4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A2AA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A2C4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A2E2 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A2E8 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A302 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A31E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A344 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A364 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A36E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A3D6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A3DC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A416 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A434 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A43A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A458 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A45E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A480 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A4A0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A4D8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A4F4 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A4FA <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A500 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A506 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A50C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A528 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A574 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A57A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A5B4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A5C0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A5DC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A5E2 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A61C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A626 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A62C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A64A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A678 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A67E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A694 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A69C <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A6F8 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A706 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A70C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A73E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A748 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A74E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A768 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A77A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A7D8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A812 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A84C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A86A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A888 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A89E <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A8BA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A8D4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000A952 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000A964 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000A97A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000A9A4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000A9AE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000A9BE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000A9C2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000A9F0 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AA0A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AA1C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AA3C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AA52 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000AA8A <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000AAB4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AADE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AAF6 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AB0C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AB54 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AB74 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AB7C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ABBA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ABC6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ABD0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000ABE2 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000ABE8 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000ABF6 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AC1E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AC32 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AC5A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AC6E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000AC96 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ACAA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ACD2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ACD4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000ACF8 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AD30 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000ADBA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000ADE2 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AE12 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AE4A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AEA2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000AEFA <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000AF7A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000AFAE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000AFE2 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000AFE8 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000AFF6 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B02A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B052 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B10A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B18A <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B1BE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B1DE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B1E4 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B1EA <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B2BA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B2CE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B386 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B406 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B4F6 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B500 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B534 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B554 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B55A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B560 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B630 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B644 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B678 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B6A0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B758 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B7D8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B80C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B82C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B832 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B838 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000B908 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000B91C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000B9D4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BA54 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BA88 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BAA8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BAAE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BAB4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BB84 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BB8A <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BBC4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BBC6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BBCC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BC64 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BC76 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BC8C <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BCF6 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BD60 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BD7A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BD96 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BDB4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BDCE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BDD8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BDF4 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BE16 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BE1C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BE42 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BE5E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BE70 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BECE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000BF06 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000BF0C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000BF54 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000BF6E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000BF7C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000BF82 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000BF88 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000BF9A <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C086 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C08C <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C0D2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C0DE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C144 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C18A <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C1D2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C23A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C240 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C27A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C280 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C2E2 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C2EC <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C300 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C31A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C320 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C346 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C362 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C3C0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C3C4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C3E6 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C3EC <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C408 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C428 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C466 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C4B4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C4EA <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C4F0 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C4F6 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C526 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C52C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C532 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C544 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C5A2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C5DA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C5E0 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C628 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C642 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C650 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C656 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C65C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C66E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C674 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C67A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C6D8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C720 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C72A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C730 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C74A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C750 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C798 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C7D6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C7E0 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C7E6 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C80C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C812 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C838 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C898 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C8B2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C8BC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C8D6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000C8E0 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000C8F8 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000C928 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000C944 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000C952 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000C958 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000C992 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000C99C <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000C9A2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000C9C0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000C9C6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000C9D8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000C9E6 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CA04 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CA3A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CA4C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CA96 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CB80 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CB9E <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CBC4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CBE0 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CC0C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CC16 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CC44 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CC5E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CC7A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CC80 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CCBA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CCC0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CCC6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CCCC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CD6C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CD72 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CE14 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CE1A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CE54 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CE5E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CE64 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CE7E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CE9C <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CEA2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CEBC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CEDC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000CF90 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000CF96 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000CF9C <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000CFC6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000CFD2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000CFD8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000CFF2 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000CFFA <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D002 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D018 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D030 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D042 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D04E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D054 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D05C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D094 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D0A6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D0CA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D0DC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D0E8 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D0EE <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D0FE <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D12E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D17A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D180 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D1AA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D1C2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D1F0 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D204 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D21A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D23A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D250 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D25A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D274 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D296 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D2AE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D2D0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D2D6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D308 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D31C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D334 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D34C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D36C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D39C <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D3CC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D3DE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D3E6 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D410 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D41A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D434 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D44E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D48C <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D4D6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D4F0 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D502 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D538 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D54A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D552 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D57A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D580 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D5A8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D5B8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D5CC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D5E2 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D5F2 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D5F6 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D60C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D636 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D63E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D63E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D6DC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D6E8 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D6EE <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D728 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D75A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D768 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D798 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DB08 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DB16 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DB1C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DDAE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DDC8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DE02 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DE54 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DE62 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DEB8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DEBE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000DF38 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000DFAC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000DFC6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000DFC6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000DFD2 <AmiBlitz3.ab3@90> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
0000DFD2 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFD2 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFD2 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFD2 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFFA <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E014 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E01E <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E030 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E054 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E062 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E06E <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E072 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E090 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E0AA <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E0CA <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E0D4 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E0E2 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E0EE <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E0FC <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E108 <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E114 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E126 <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E136 <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E140 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E146 <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E160 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E16A <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E174 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E184 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E18E <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E1A0 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E1B6 <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E1C0 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E1C6 <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E1CA <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E1E0 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E1E6 <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E1F0 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E226 <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E230 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E234 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E262 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E262 <prefixtree.include.ab3@128> XINCLUDE "translation.include.ab3"
0000E27C <prefixtree.include.ab3@193> XINCLUDE "translation.include.ab3"
0000E286 <prefixtree.include.ab3@195> XINCLUDE "translation.include.ab3"
0000E2AE <prefixtree.include.ab3@196> XINCLUDE "translation.include.ab3"
0000E2D0 <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E2EC <prefixtree.include.ab3@198> XINCLUDE "translation.include.ab3"
0000E2FC <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E300 <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E31A <prefixtree.include.ab3@255> XINCLUDE "translation.include.ab3"
0000E33A <prefixtree.include.ab3@256> XINCLUDE "translation.include.ab3"
0000E344 <prefixtree.include.ab3@257> XINCLUDE "translation.include.ab3"
0000E35E <prefixtree.include.ab3@258> XINCLUDE "translation.include.ab3"
0000E36C <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E37A <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E388 <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E396 <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E3A2 <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E3B0 <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E3BE <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E3CC <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E3DA <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E3F4 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E402 <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E412 <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E422 <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E432 <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E440 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E44A <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E450 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E46E <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E474 <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E47E <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E49E <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E4CC <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E4EA <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E4F4 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E506 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E532 <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E548 <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E560 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E56C <prefixtree.include.ab3@308> XINCLUDE "translation.include.ab3"
0000E572 <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E5AA <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E5B0 <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E5B6 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E5C0 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E5C6 <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E5F8 <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E612 <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E62A <prefixtree.include.ab3@339> XINCLUDE "translation.include.ab3"
0000E63E <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E68E <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6AE <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E6C2 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6D0 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E6DC <prefixtree.include.ab3@346> XINCLUDE "translation.include.ab3"
0000E6E4 <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E6EC <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E6F4 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E6FC <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E702 <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E710 <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E732 <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E75E <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E770 <prefixtree.include.ab3@357> XINCLUDE "translation.include.ab3"
0000E776 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E79E <prefixtree.include.ab3@360> XINCLUDE "translation.include.ab3"
0000E7C2 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E7EA <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000E81E <prefixtree.include.ab3@363> XINCLUDE "translation.include.ab3"
0000E82E <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000E838 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E846 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E85A <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E860 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E880 <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E886 <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000E88E <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E8C8 <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E8EE <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E906 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E93A <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E942 <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E950 <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E956 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E96E <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000E97A <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E994 <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E9A0 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E9A6 <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E9B4 <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E9C2 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E9FC <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000EA22 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000EA3A <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000EA46 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA52 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA5E <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA76 <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA80 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000EAA2 <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EAE0 <prefixtree.include.ab3@457> XINCLUDE "translation.include.ab3"
0000EAE6 <prefixtree.include.ab3@458> XINCLUDE "translation.include.ab3"
0000EB4C <prefixtree.include.ab3@459> XINCLUDE "translation.include.ab3"
0000EB8C <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000EBE2 <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EC54 <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000EC60 <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000EC6E <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000ECB4 <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000ECFE <prefixtree.include.ab3@468> XINCLUDE "translation.include.ab3"
0000ED36 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000ED8A <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000ED90 <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000ED96 <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000EDA4 <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000EDAC <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000EDE6 <prefixtree.include.ab3@477> XINCLUDE "translation.include.ab3"
0000EE0C <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000EE24 <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000EE5A <prefixtree.include.ab3@480> XINCLUDE "translation.include.ab3"
0000EE70 <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000EE7E <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000EE96 <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000EECE <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EEF4 <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EF3C <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EF42 <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000EF5C <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000EF68 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000EF6E <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000EF9A <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000EFAE <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EFBC <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EFC4 <prefixtree.include.ab3@501> XINCLUDE "translation.include.ab3"
0000EFFE <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000F024 <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000F03C <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000F076 <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000F0A0 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F0B8 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F0E8 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F114 <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F130 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F13E <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F14C <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F18A <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F1C6 <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F232 <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F28E <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F2D6 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F2F0 <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F338 <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F356 <prefixtree.include.ab3@525> XINCLUDE "translation.include.ab3"
0000F374 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F38E <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F39A <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F3A0 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F3CC <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F3E4 <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F3EA <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F3FE <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F40C <prefixtree.include.ab3@540> XINCLUDE "translation.include.ab3"
0000F41A <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F428 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F430 <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F45C <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F484 <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F4AC <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F518 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F528 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F554 <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F5AA <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F5B8 <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F5C6 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F5CC <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F620 <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F740 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F790 <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F7E6 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F852 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000F85A <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000F894 <prefixtree.include.ab3@567> XINCLUDE "translation.include.ab3"
0000F8BA <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F8D2 <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F90C <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F936 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F94E <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F972 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F9C6 <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F9CE <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F9D4 <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000FA36 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000FA62 <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000FA7E <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FA8C <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000FA9A <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000FAA8 <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000FAB6 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FAFA <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FB66 <prefixtree.include.ab3@590> XINCLUDE "translation.include.ab3"
0000FB94 <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FBA8 <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FBDA <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FC24 <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FC34 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FC68 <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FC8A <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FC9A <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FCA2 <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FCE6 <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FD52 <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FD80 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FDA4 <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FDE8 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FE54 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0000FE82 <prefixtree.include.ab3@609> XINCLUDE "translation.include.ab3"
0000FEB0 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FEB8 <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
0000FEE6 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FF58 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FF5E <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0000FF8C <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FFFE <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0001001C <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
00010040 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
00010058 <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0001005E <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
00010064 <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
00010066 <prefixtree.include.ab3@627> XINCLUDE "translation.include.ab3"
00010070 <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0001009C <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
000100BE <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
000100C6 <prefixtree.include.ab3@651> XINCLUDE "translation.include.ab3"
000100CC <prefixtree.include.ab3@652> XINCLUDE "translation.include.ab3"
000100DA <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
00010114 <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
0001013A <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
00010152 <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
0001018C <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
000101B6 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101CE <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
000101E6 <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
0001021E <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
00010226 <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
00010260 <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
00010272 <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
00010298 <prefixtree.include.ab3@670> XINCLUDE "translation.include.ab3"
000102AE <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
000102D4 <prefixtree.include.ab3@672> XINCLUDE "translation.include.ab3"
000102E8 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
00010300 <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
00010312 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
0001031C <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010330 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
0001034A <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
00010368 <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
0001037A <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
00010398 <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
000103D4 <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
000103F0 <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
00010410 <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
0001041A <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
00010420 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
0001042A <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
00010436 <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
0001043C <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
0001046A <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
00010492 <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
000104D2 <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
000104EA <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
00010530 <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
0001055A <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010588 <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
000105A2 <prefixtree.include.ab3@938> XINCLUDE "translation.include.ab3"
000105AA <prefixtree.include.ab3@939> XINCLUDE "translation.include.ab3"
000105C2 <prefixtree.include.ab3@940> XINCLUDE "translation.include.ab3"
000105CC <prefixtree.include.ab3@941> XINCLUDE "translation.include.ab3"
000105DE <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
00010616 <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
00010624 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
00010630 <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
0001064C <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
0001066E <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
00010690 <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
000106B2 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
000106D4 <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
000106F0 <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
0001070E <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
00010722 <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
00010728 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
0001072A <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
00010730 <prefixtree.include.ab3@958> XINCLUDE "translation.include.ab3"
0001073A <prefixtree.include.ab3@960> XINCLUDE "translation.include.ab3"
00010740 <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
0001075E <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
00010764 <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
00010788 <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
000107A6 <prefixtree.include.ab3@982> XINCLUDE "translation.include.ab3"
000107D4 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010802 <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
00010830 <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
0001085E <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
00010892 <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
000108A2 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
000108AC <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
000108B2 <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
000108B2 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
000108FC <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
0001091C <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010926 <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
0001093A <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010980 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
000109C6 <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010A0C <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010A16 <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010A32 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010A5C <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010ADA <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010B58 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010BD6 <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010C54 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010CD2 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010D50 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010DCE <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010E4C <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010ECA <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00010F48 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
00010FCC <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00010FFC <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011058 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011084 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
0001114E <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
0001115C <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
0001119A <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
0001121E <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011248 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
00011266 <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011280 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001128A <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
00011296 <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000112A6 <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000112B6 <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000112C6 <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000112D6 <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000112DA <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011318 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011370 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000113CC <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
00011456 <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000114D4 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000114EE <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
0001151C <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011558 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
00011626 <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
000116F4 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011740 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000117BE <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
0001183C <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
0001189A <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011930 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011968 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
000119C6 <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011A4E <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011A56 <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011AC0 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011B2C <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011B6A <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011BF2 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011C1E <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011C7A <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011D42 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011DA6 <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011DAC <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011DE0 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011EAE <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00011F7C <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
00011FA6 <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
00011FC4 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00011FF2 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
0001202E <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
0001209E <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000120A6 <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
000120F8 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012120 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012138 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000121EC <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
000121FA <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012250 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000122AE <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000122B4 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012338 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000123BC <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012440 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000124BE <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
0001253C <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000125BA <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012638 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000126B6 <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012734 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000127B2 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000127DC <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
000127FA <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012828 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
0001286C <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012872 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
0001288C <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000128A8 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000128DC <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012900 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012928 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012994 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
000129F2 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012A50 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012A9C <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012AF6 <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012AFC <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012B02 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012B0C <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012B16 <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012B30 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012B5E <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012B64 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012BA8 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012BC2 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012BD2 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012BDC <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012BE8 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012BF2 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012C16 <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012C5E <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012CA6 <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012CEE <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012D04 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012D18 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012D22 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012D2C <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012D46 <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012D70 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012DB4 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012DCE <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012E2C <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012E46 <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012E5E <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012E68 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012E84 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012E92 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012E9E <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012EEA <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00012F3C <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
00012F8E <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
00012FA2 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
00012FB2 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
00012FB8 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
00012FBA <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
00012FC0 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
00012FCA <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
00012FD4 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00012FEE <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013018 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
0001302E <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013038 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000130B0 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000130EC <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
000130FC <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
0001311C <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
0001313C <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
0001315C <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
00013192 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000131BA <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
000131F2 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
00013256 <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
00013276 <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
000132F2 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001332A <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000133A0 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000133C0 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
0001343C <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013474 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000134EA <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001350A <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
00013586 <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000135B2 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000135BA <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013600 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013620 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001362A <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013642 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013652 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001368A <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000136BC <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000136CE <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013750 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001375A <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
0001378C <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000137BE <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000137EA <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
00013816 <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013838 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013842 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
0001385C <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
0001385C <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013872 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
0001388E <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
00013890 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000138BE <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000138BE <AmiBlitz3.ab3@93> XINCLUDE "translation.include.ab3"
000138BE <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000138D8 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000138E2 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013904 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
0001391C <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013936 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013968 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013972 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013978 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
0001398A <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
000139FE <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013A04 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013A3E <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013A48 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013A4E <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013A64 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013A6E <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013A86 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013A88 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013AB6 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013AD0 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013AE6 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013B1A <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013B1E <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013B38 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013B4E <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013B82 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013B86 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013BA0 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013BB6 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013BEA <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013BEE <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013C08 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013C1E <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013C52 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013C56 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013C70 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013C86 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013CBA <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013CBE <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013CBE <AmiBlitz3.ab3@94> XINCLUDE "/Shared/ted.include.ab3"
00013CBE <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013CD4 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013CEA <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013CF8 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013D06 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013D10 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013D22 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013D34 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013D3A <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013D74 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013D78 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013D8E <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013DA4 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013DB0 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013DBC <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013DC4 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013DCC <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013DD0 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013DFA <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013E26 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013E38 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013E50 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013E66 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013E6C <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013EA2 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013EDA <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013F12 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013F4A <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013F82 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013FBA <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013FF2 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001402A <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014062 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
0001409A <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000140D2 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001410A <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014142 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
0001414C <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00014156 <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00014160 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001418A <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
00014194 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
00014198 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000141CC <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000141D2 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
0001420C <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00014212 <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
00014228 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014232 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014238 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001424E <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
00014254 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
00014292 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
00014296 <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
000142A0 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
000142A2 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000142D6 <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000142E6 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000142F0 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000142F6 <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
0001430C <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001434A <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
0001434E <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
00014356 <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
00014394 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
00014396 <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
0001439A <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000143D8 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000143DC <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
0001441A <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
0001441E <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
00014448 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014452 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00014466 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
00014492 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
000144A6 <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000144DE <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000144E2 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
0001450C <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
0001453C <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
00014542 <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00014560 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
00014568 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
0001456E <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
0001459A <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000145C8 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000145CC <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014624 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014634 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001463A <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001467A <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014684 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
0001469E <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000146BC <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
000146CA <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
000146D0 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
000146F2 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
0001470A <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014730 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001475A <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014768 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
0001476E <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014782 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
0001479A <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
000147A8 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000147BC <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
000147F2 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
00014800 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
00014830 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0001483E <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014844 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014852 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014858 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0001485E <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
0001486C <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0001486E <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014874 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001488A <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014894 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001489A <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000148C4 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014902 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
00014906 <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014944 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014948 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014986 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0001498A <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014992 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
0001499A <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
000149DE <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000149F0 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000149FE <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
00014A32 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014A56 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014A60 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014A7A <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014A8E <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
00014AE6 <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014B86 <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014B8E <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014BC6 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014BCC <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014BDC <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014C04 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014C2C <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014C34 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014C3A <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014C42 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014C4A <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014C72 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014C7A <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014C82 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014C88 <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014C8E <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014C94 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014C9A <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014CA0 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014CA6 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014CAC <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014CB2 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014CBA <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014CC2 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014CEA <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014CF0 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014CF6 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014CFE <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014D1E <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014D2E <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014D3E <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014D4E <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014D5E <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014D6E <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014D7E <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014D8E <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014D9E <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014DAE <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014DBE <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014DCE <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014DDE <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014DEE <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014DFE <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014E0E <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014E1E <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014E30 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014E42 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014E54 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014E66 <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014E78 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014E8A <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014EA8 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014EAE <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00014EB4 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014EDE <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014EF0 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00014F24 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014F3C <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014F88 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014F9A <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014FF0 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00015062 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
00015068 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
0001509C <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
000150C4 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000150EC <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
00015126 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
0001513E <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000151C2 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
000151DC <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
0001522A <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
0001523A <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00015242 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00015256 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
0001529C <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000152A2 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000152EC <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00015356 <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000153BC <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000153F0 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
0001541C <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001546A <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0001548E <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00015494 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000154A2 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
00015500 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
0001555E <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
00015588 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00015592 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001559A <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000155D8 <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
00015624 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
00015636 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
0001568C <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
00015704 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001570A <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
0001573E <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
00015766 <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
0001579C <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000157AA <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000157B8 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
0001582C <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015832 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
0001587C <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000158C6 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000158F6 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00015926 <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015950 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
000159A2 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000159F8 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015A48 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00015AAE <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
00015B1A <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015B46 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00015B76 <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015BF2 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015C22 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015C52 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015C82 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015CB2 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015CE2 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015D12 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015D42 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015D72 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015DA2 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015DD2 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015E4E <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015E80 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015EB2 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015EE2 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015EE8 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015F5C <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015FC8 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015FDA <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00016008 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00016030 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00016044 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0001606E <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
000160B2 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
000160C2 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
000160D2 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
000160D8 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000160E8 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
000160F6 <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
00016100 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
00016138 <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00016170 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
000161A8 <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
000161B8 <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00016220 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00016258 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
00016268 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00016278 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000162E0 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00016348 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000163B0 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00016418 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016480 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000164E8 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016550 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
000165B8 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000165C8 <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
00016600 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0001663A <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
00016674 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000166AC <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
000166C8 <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016700 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
00016726 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
0001672E <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
00016736 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
0001673E <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
00016746 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
0001675A <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00016788 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
000167A2 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
000167B0 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001681C <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016842 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
0001685E <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
00016868 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00016872 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
0001687E <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
0001688C <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00016898 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000168D4 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000168EE <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
000168FC <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
0001691C <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
0001692A <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016938 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
0001693E <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
0001694E <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00016952 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
00016986 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
000169BA <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000169BE <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000169F2 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
000169F6 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00016A2A <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00016A30 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00016A66 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016A9C <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00016AD2 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00016B0A <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016B42 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016BE2 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016C22 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016C58 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016C8E <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016CC6 <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016CE4 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016CE8 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016CEE <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016CF4 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00016CF8 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016D22 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016D36 <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00016D74 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016DA8 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00016DDE <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016E36 <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00016E64 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016E68 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016E9E <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016ECC <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00016EFA <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00016EFE <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016F34 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00016F62 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00016F66 <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
00016FCA <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00016FD0 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
0001700A <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00017014 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
0001701E <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00017038 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00017062 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00017068 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00017088 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00017092 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00017096 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00017098 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
000170B6 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
000170B8 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000170BE <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
000170C4 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
000170EE <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
000170F0 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
0001711E <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00017122 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00017150 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00017154 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001717A <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001718A <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00017190 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00017196 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
000171D0 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
000171DA <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
000171F4 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
0001720E <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00017238 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
00017266 <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
000172F6 <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
00017300 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
00017314 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017350 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
0001738C <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000173C8 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00017404 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00017440 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00017446 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00017480 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
0001748C <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000174A6 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000174A8 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
000174C6 <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
000174CC <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
000174F6 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000174F8 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00017502 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00017508 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
0001751A <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
0001754C <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
00017556 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
000175C0 <CLIModeSupport.ab3@591> XINCLUDE "CLIModeSupport.ab3"
0001762A <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
0001769A <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00017704 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
0001770E <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
00017778 <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
000177AE <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
000177B4 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0001781E <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
00017854 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
0001785C <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001788A <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
0001788E <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
000178B6 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
000178BC <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000178C2 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
000178C8 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
000178CE <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
000178D4 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
000178DE <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
000178E8 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
00017916 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
00017942 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
0001794A <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
0001797E <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00017990 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
000179F6 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00017A5C <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00017A62 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00017A6A <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00017A6C <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
00017A8A <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
00017AC8 <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00017B06 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
00017B0C <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00017B12 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00017B18 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00017B22 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017B28 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00017B2E <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017B34 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017B3A <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00017B3E <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
00017B48 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00017B4C <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00017B76 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017B78 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00017B7E <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017B82 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017B88 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017B8C <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00017B9C <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
00017BF6 <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
00017C08 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017C72 <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
00017C78 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00017CC2 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017CD4 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017D00 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00017DA6 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00017DC4 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017DCA <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00017DF4 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
00017DFE <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00017E30 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
00017E4A <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
00017E5E <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00017E6A <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00017E84 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00017E8E <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00017EA8 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00017ED2 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00017EF6 <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00017F34 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00017F38 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00017F76 <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00017F7A <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00017FB8 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00017FF6 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00017FF8 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
0001802C <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00018032 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00018076 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00018088 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00018090 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
00018096 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
000180A0 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
000180AE <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
000180B4 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
000180DC <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
000180F6 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00018100 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00018106 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00018124 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
0001812E <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00018134 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
0001813A <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00018144 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00018152 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00018158 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00018168 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00018194 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
000181AA <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
000181B4 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
000181BA <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
00018212 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00018280 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00018298 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
0001829E <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
000182D6 <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00018304 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
0001832E <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
00018338 <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00018360 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
0001838A <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
0001842C <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
0001843A <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
0001848A <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
0001849A <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00018562 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
00018596 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
000185CA <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000185FE <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
00018632 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00018666 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
0001869A <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000186CE <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
00018702 <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
00018704 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00018742 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00018746 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00018784 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000187C2 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
000187C4 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
000187CA <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
000187CE <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
000187D0 <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
0001880E <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
0001884C <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
0001884E <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
00018850 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00018852 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00018858 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
0001885C <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
0001886C <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00018884 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
0001889C <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
000188B4 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
000188DE <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00018908 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00018936 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
0001893A <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00018962 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018964 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
000189A2 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
000189A6 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
000189E4 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
000189E8 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00018A26 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00018A2A <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018A68 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018A6C <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00018A92 <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
00018AB8 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00018ADE <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00018B04 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00018B2A <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00018B80 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018BD6 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00018C24 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018C7A <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00018CA0 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00018CC6 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00018CEC <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00018D42 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00018D90 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00018DDE <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00018E98 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00018EEE <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00018F14 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00018F3A <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00018F60 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00018FB6 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
0001900C <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
0001905A <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
000190A8 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
000190F6 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00019144 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00019192 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
000191E0 <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
0001922E <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00019254 <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
0001927A <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
000192A0 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
000192EE <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
0001933C <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
00019392 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
000193E0 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
0001942E <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
0001947C <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
000194A2 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
000194C8 <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
000194EE <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00019526 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
0001954E <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
00019562 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
000195D6 <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
0001961C <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
000196CA <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00019736 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00019746 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
0001976C <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
00019776 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
000197A0 <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
000197A6 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
000197B6 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
00019856 <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
00019896 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
0001989C <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
000198FE <CLIModeSupport.ab3@879> XINCLUDE "CLIModeSupport.ab3"
00019908 <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
00019912 <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
0001992C <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
0001994E <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00019970 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
000199CA <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
000199EC <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00019A46 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00019A88 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019A8E <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
00019A9C <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
00019AA2 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
00019AB6 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
00019AC0 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
00019B3A <CLIModeSupport.ab3@953> XINCLUDE "CLIModeSupport.ab3"
00019B44 <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
00019B4A <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
00019B5E <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00019B68 <CLIModeSupport.ab3@959> XINCLUDE "CLIModeSupport.ab3"
00019BE8 <CLIModeSupport.ab3@960> XINCLUDE "CLIModeSupport.ab3"
00019BF2 <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00019BF8 <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
00019C0C <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
00019C16 <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00019C5E <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00019C68 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00019C6E <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00019C82 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
00019C8C <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00019CD4 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00019CDE <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00019CE4 <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00019CF8 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00019D1E <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00019D32 <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00019D58 <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00019D6C <CLIModeSupport.ab3@988> XINCLUDE "CLIModeSupport.ab3"
00019D92 <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00019DA6 <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
00019DB0 <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
00019DDE <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00019E2E <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00019E4E <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
00019E66 <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
00019F4A <CLIModeSupport.ab3@998> XINCLUDE "CLIModeSupport.ab3"
00019F54 <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
00019F5A <CLIModeSupport.ab3@1000> XINCLUDE "CLIModeSupport.ab3"
00019F5C <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00019F70 <CLIModeSupport.ab3@1003> XINCLUDE "CLIModeSupport.ab3"
00019FA2 <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
00019FA8 <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
00019FEC <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
00019FFE <CLIModeSupport.ab3@1009> XINCLUDE "CLIModeSupport.ab3"
0001A010 <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
0001A01A <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
0001A020 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
0001A02A <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
0001A044 <CLIModeSupport.ab3@1015> XINCLUDE "CLIModeSupport.ab3"
0001A044 <AmiBlitz3.ab3@95> XINCLUDE "CLIModeSupport.ab3"
0001A0C4 <AmiBlitz3.ab3@100> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001A0FC <AmiBlitz3.ab3@101> If dynassign <> ""
0001A112 <AmiBlitz3.ab3@102>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001A11C <AmiBlitz3.ab3@103>     If *AssignSema
0001A12C <AmiBlitz3.ab3@104>       ObtainSemaphoreShared_ *AssignSema
0001A132 <AmiBlitz3.ab3@105>     Else                                                        ; no, create one...
0001A152 <AmiBlitz3.ab3@106>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001A15C <AmiBlitz3.ab3@107>       If *AssignSema
0001A16C <AmiBlitz3.ab3@108>         InitSemaphore_ *AssignSema
0001A1A0 <AmiBlitz3.ab3@110>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001A1B2 <AmiBlitz3.ab3@111>         If *AssignSema\ss_Link\ln_Name
0001A1EE <AmiBlitz3.ab3@112>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001A1FA <AmiBlitz3.ab3@114>         *AssignSema\ss_Link\ln_Pri  = 1
0001A206 <AmiBlitz3.ab3@115>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001A216 <AmiBlitz3.ab3@117>         AddSemaphore_ *AssignSema
0001A226 <AmiBlitz3.ab3@118>         ObtainSemaphoreShared_ *AssignSema
0001A272 <AmiBlitz3.ab3@124>   mydir.s = dos_GetProgDir{"Sys:"}
0001A2D2 <AmiBlitz3.ab3@125>   If dos_SetAssign{dynassign,mydir,False}
0001A366 <AmiBlitz3.ab3@126>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001A39E <AmiBlitz3.ab3@129>   Poke$ ?str_blitz3assign,dynassign
0001A420 <AmiBlitz3.ab3@130>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001A4A2 <AmiBlitz3.ab3@133>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001A524 <AmiBlitz3.ab3@134>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001A5A6 <AmiBlitz3.ab3@135>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001A628 <AmiBlitz3.ab3@136>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001A69C <AmiBlitz3.ab3@137>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001A710 <AmiBlitz3.ab3@138>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001A784 <AmiBlitz3.ab3@139>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001A7B2 <AmiBlitz3.ab3@140>   dos_CreateDir{my_blitzlibsdir$}
0001A7D6 <AmiBlitz3.ab3@141>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001A804 <AmiBlitz3.ab3@142>   dos_CreateDir{my_residentsdir$}
0001A832 <AmiBlitz3.ab3@143>   dos_CreateDir{my_systemdir$}
0001A8FC <AmiBlitz3.ab3@149> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001A934 <AmiBlitz3.ab3@150> Poke.s ?str_pedfile,pedfile$
0001A972 <AmiBlitz3.ab3@152> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001A982 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,1
0001A988 <AmiBlitz3.ab3@154> Else
0001A998 <AmiBlitz3.ab3@155>   Poke.b ?start_without_libs,0
0001A9BE <AmiBlitz3.ab3@158> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001A9CA <AmiBlitz3.ab3@162> dbg_fid.l = -1 ; no debug file id yet!
0001A9D4 <AmiBlitz3.ab3@164> If CLIMode
0001A9DA <AmiBlitz3.ab3@167>   err.l      = False                                       ; indicate that an error has occured
0001A9E0 <AmiBlitz3.ab3@168>   showhelp.l = False                                       ; show the CLI tool's help
0001AA38 <AmiBlitz3.ab3@171>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0001AA60 <AmiBlitz3.ab3@172>   cli_sourcefile.s   = ""
0001AA88 <AmiBlitz3.ab3@173>   cli_exefile.s      = ""
0001AAB0 <AmiBlitz3.ab3@174>   cli_savefile.s     = ""
0001AAD8 <AmiBlitz3.ab3@175>   cli_dumpfile.s     = ""
0001AB00 <AmiBlitz3.ab3@176>   cli_includepath.s  = ""
0001AB28 <AmiBlitz3.ab3@177>   cli_blitzlibpath.s = ""
0001AB2E <AmiBlitz3.ab3@178>   cli_debuginfo.l    = False
0001AB34 <AmiBlitz3.ab3@179>   cli_run.l          = False
0001AB3C <AmiBlitz3.ab3@180>   cli_dumpflags.l    = $FFFFFFFF
0001AB64 <AmiBlitz3.ab3@181>   cli_info.s         = ""
0001AB6A <AmiBlitz3.ab3@182>   cli_release.l      = False
0001AB74 <AmiBlitz3.ab3@183>   cli_numargs.l      = dos_GetNumArgs{}
0001AB7A <AmiBlitz3.ab3@184>   cli_gui.l          = False
0001AB82 <AmiBlitz3.ab3@185>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
0001AB8A <AmiBlitz3.ab3@186>   cli_verbose.l      = 1
0001ABA2 <AmiBlitz3.ab3@187>   If cli_numargs=0 Then showhelp=True
0001ABD2 <AmiBlitz3.ab3@191>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001AC1E <AmiBlitz3.ab3@192>     larg.s = LCase$(arg)                                   ; lower case the option string
0001ACE6 <AmiBlitz3.ab3@193>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001AD1C <AmiBlitz3.ab3@194>     Select larg
0001AD68 <AmiBlitz3.ab3@195>       Case "s" : larg="source"
0001ADBA <AmiBlitz3.ab3@196>       Case "e" : larg="exe"
0001AE0C <AmiBlitz3.ab3@197>       Case "d" : larg="debug"
0001AE5E <AmiBlitz3.ab3@198>       Case "r" : larg="release"
0001AEB0 <AmiBlitz3.ab3@199>       Case "h" : larg="help"
0001AF02 <AmiBlitz3.ab3@200>       Case "v" : larg="verbose"
0001AF10 <AmiBlitz3.ab3@201>     End Select
0001AF46 <AmiBlitz3.ab3@203>     Select larg
0001AF9A <AmiBlitz3.ab3@204>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001AFF4 <AmiBlitz3.ab3@205>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001B04E <AmiBlitz3.ab3@206>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001B07E <AmiBlitz3.ab3@207>       Case "debug"    : cli_debuginfo   = True
0001B0AE <AmiBlitz3.ab3@208>       Case "run"      : cli_run         = True
0001B0DE <AmiBlitz3.ab3@209>       Case "release"  : cli_release     = True
0001B10E <AmiBlitz3.ab3@210>       Case "ped"      : cli_gui         = True
0001B168 <AmiBlitz3.ab3@211>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001B1DA <AmiBlitz3.ab3@212>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001B20A <AmiBlitz3.ab3@213>                         cli_dumpfile    = dos_GetNextArg{}
0001B212 <AmiBlitz3.ab3@214>                         cli_dumpflags   = $0
0001B272 <AmiBlitz3.ab3@215>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001B2D2 <AmiBlitz3.ab3@216>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001B332 <AmiBlitz3.ab3@217>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001B392 <AmiBlitz3.ab3@218>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001B3F2 <AmiBlitz3.ab3@219>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001B452 <AmiBlitz3.ab3@220>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001B4B2 <AmiBlitz3.ab3@221>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001B512 <AmiBlitz3.ab3@222>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001B572 <AmiBlitz3.ab3@223>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001B584 <AmiBlitz3.ab3@224>                         If cli_dumpflags = $0
0001B58A <AmiBlitz3.ab3@225>                          err=True
0001B61E <AmiBlitz3.ab3@226>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001B678 <AmiBlitz3.ab3@228>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001B6A8 <AmiBlitz3.ab3@229>       Case "h"        : showhelp        = True             ; show the help and quit
0001B6AE <AmiBlitz3.ab3@230>       Default
0001B6E6 <AmiBlitz3.ab3@231>         If arg><""
0001B77A <AmiBlitz3.ab3@232>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001B780 <AmiBlitz3.ab3@233>           err = True
0001B78E <AmiBlitz3.ab3@235>     End Select
0001B7DA <AmiBlitz3.ab3@236>   Until arg = "" OR err=True          ; until we processed all arguments
0001B7FC <AmiBlitz3.ab3@239>   If err><False OR showhelp = True
0001B806 <AmiBlitz3.ab3@240>     If showhelp
0001B868 <AmiBlitz3.ab3@241>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001B8A0 <AmiBlitz3.ab3@242>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001B8D8 <AmiBlitz3.ab3@243>     NPrint "\\nOptions:"
0001B910 <AmiBlitz3.ab3@244>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001B948 <AmiBlitz3.ab3@245>     NPrint "  -(e)xe <file>       : output executable filename"
0001B980 <AmiBlitz3.ab3@246>     NPrint "  -(d)ebug            : compile with debug info"
0001B9B8 <AmiBlitz3.ab3@247>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001B9F0 <AmiBlitz3.ab3@248>     NPrint "  -run                : run compiled program"
0001BA28 <AmiBlitz3.ab3@249>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001BA60 <AmiBlitz3.ab3@250>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001BA98 <AmiBlitz3.ab3@251>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001BAD0 <AmiBlitz3.ab3@252>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001BB08 <AmiBlitz3.ab3@253>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001BB40 <AmiBlitz3.ab3@254>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001BB78 <AmiBlitz3.ab3@255>     NPrint "  -(h)elp             : show this help"
0001BBB0 <AmiBlitz3.ab3@256>     NPrint "\\nExample:"
0001BBE8 <AmiBlitz3.ab3@257>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001BC20 <AmiBlitz3.ab3@258>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001BC26 <AmiBlitz3.ab3@261>     Goto abnormal_exit
0001BC42 <AmiBlitz3.ab3@264>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001BCA6 <AmiBlitz3.ab3@265>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001BCB6 <AmiBlitz3.ab3@268> Poke.l ?CLIMode,CLIMode
0001BCDA <AmiBlitz3.ab3@299>   Dim incdim.s (#maxincludes)
0001BCFE <AmiBlitz3.ab3@300>   Dim incline.l(#maxincludes)
0001BD18 <AmiBlitz3.ab3@568> Function.s Get_Libinfo{addr_libnum.l}
0001BD24 <AmiBlitz3.ab3@570>   lib_ab2.b = False : lib_os.b = False
0001BD2A <AmiBlitz3.ab3@571>   addr_counter.l = addr_libnum
0001BD32 <AmiBlitz3.ab3@572>   skip.l = 0
0001BD44 <AmiBlitz3.ab3@573>   If addr_counter=0
0001BD7E <AmiBlitz3.ab3@574>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001BD9C <AmiBlitz3.ab3@575>     Function Return ""
0001BDAA <AmiBlitz3.ab3@580>     mem.l = Peek.l(addr_counter)
0001BDB8 <AmiBlitz3.ab3@585>     addr_counter + 2
0001BDD8 <AmiBlitz3.ab3@586>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001BDF2 <AmiBlitz3.ab3@587>     If (mem LSR 16) = $ffe2
0001BDF8 <AmiBlitz3.ab3@589>       lib_os = True
0001BE00 <AmiBlitz3.ab3@590>       skip = 10
0001BE46 <AmiBlitz3.ab3@591>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001BE8A <AmiBlitz3.ab3@593>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001BEA0 <AmiBlitz3.ab3@595>   If (addr_counter>addr_libnum + $400)
0001BEBE <AmiBlitz3.ab3@597>     Function Return ""
0001BEC4 <AmiBlitz3.ab3@598>   Else
0001BEE8 <AmiBlitz3.ab3@599>     Function Return Peek$(addr_counter + skip)
0001BEF2 <AmiBlitz3.ab3@601> End Function
0001BF10 <AmiBlitz3.ab3@641>   !asm
0001BF16 <AmiBlitz3.ab3@642>   MOVEA.l _execbase,A6
0001BF1A <AmiBlitz3.ab3@643>   MOVEM.l d0/a0,-(a7)
0001BF1C <AmiBlitz3.ab3@645>   MOVEQ #127,d0
0001BF22 <AmiBlitz3.ab3@646>   LEA chartab,a0
0001BF28 <AmiBlitz3.ab3@649>     MOVE.b #1,128(a0)
0001BF2A <AmiBlitz3.ab3@650>     CLR.b (a0)+
0001BF2E <AmiBlitz3.ab3@651>   DBF d0,'l12
0001BF34 <AmiBlitz3.ab3@653>   LEA chartab,a0
0001BF38 <AmiBlitz3.ab3@654>   MOVE.b #1,(a0)
0001BF3E <AmiBlitz3.ab3@655>   MOVE.b #1,","(a0)
0001BF44 <AmiBlitz3.ab3@656>   MOVE.b #1,";"(a0)
0001BF4A <AmiBlitz3.ab3@657>   MOVE.b #1,":"(a0)
0001BF50 <AmiBlitz3.ab3@658>   MOVE.b #1,"("(a0)
0001BF56 <AmiBlitz3.ab3@659>   MOVE.b #1,")"(a0)
0001BF5C <AmiBlitz3.ab3@660>   MOVE.b #1,"="(a0)
0001BF62 <AmiBlitz3.ab3@661>   MOVE.b #1,"+"(a0)
0001BF68 <AmiBlitz3.ab3@662>   MOVE.b #1,"-"(a0)
0001BF6E <AmiBlitz3.ab3@663>   MOVE.b #1,"*"(a0)
0001BF74 <AmiBlitz3.ab3@664>   MOVE.b #1,"/"(a0)
0001BF7A <AmiBlitz3.ab3@665>   MOVE.b #1,"$"(a0)
0001BF80 <AmiBlitz3.ab3@666>   MOVE.b #1,"%"(a0)
0001BF86 <AmiBlitz3.ab3@667>   MOVE.b #1,"."(a0)
0001BF8C <AmiBlitz3.ab3@668>   MOVE.b #1,"["(a0)
0001BF92 <AmiBlitz3.ab3@669>   MOVE.b #1,"]"(a0)
0001BF98 <AmiBlitz3.ab3@670>   MOVE.b #1,"{"(a0)
0001BF9E <AmiBlitz3.ab3@671>   MOVE.b #1,"}"(a0)
0001BFA4 <AmiBlitz3.ab3@672>   MOVE.b #1,"\"(a0)
0001BFAA <AmiBlitz3.ab3@673>   MOVE.b #1,">"(a0)
0001BFB0 <AmiBlitz3.ab3@674>   MOVE.b #1,"<"(a0)
0001BFB6 <AmiBlitz3.ab3@675>   MOVE.b #1,"&"(a0)
0001BFBC <AmiBlitz3.ab3@676>   MOVE.b #1,"|"(a0)
0001BFC2 <AmiBlitz3.ab3@677>   MOVE.b #1,"^"(a0)
0001BFC8 <AmiBlitz3.ab3@678>   MOVE.b #1,$7e(a0)
0001BFCE <AmiBlitz3.ab3@679>   MOVE.w #$0101,1(a0)
0001BFD4 <AmiBlitz3.ab3@681>   LEA instrtab,a0
0001BFDA <AmiBlitz3.ab3@682>   MOVE.l #labelhash-instrtab,d0
0001BFDC <AmiBlitz3.ab3@683>   ASR.l #2,d0
0001BFDE <AmiBlitz3.ab3@684>   SUBQ.l #1,d0
0001BFE0 <AmiBlitz3.ab3@687>    CLR.l (a0)+
0001BFE2 <AmiBlitz3.ab3@688>    SUBQ.l #1,d0
0001BFE6 <AmiBlitz3.ab3@689>   BNE 'l10
0001BFEC <AmiBlitz3.ab3@691>   LEA allowtab,a0
0001BFF2 <AmiBlitz3.ab3@692>   MOVE.l #255,d0
0001BFF4 <AmiBlitz3.ab3@695>     CLR.b (a0)+
0001BFF8 <AmiBlitz3.ab3@696>   DBF d0,'la1
0001BFFE <AmiBlitz3.ab3@698>   LEA allowtab,a0
0001C004 <AmiBlitz3.ab3@699>   MOVE.b #1,$7d(a0)
0001C00A <AmiBlitz3.ab3@700>   MOVE.b #1,$7c(a0)
0001C010 <AmiBlitz3.ab3@701>   MOVE.b #1,$44(a0)
0001C016 <AmiBlitz3.ab3@702>   MOVE.b #1,$45(a0)
0001C01C <AmiBlitz3.ab3@703>   MOVE.b #1,$b9(a0)
0001C022 <AmiBlitz3.ab3@704>   MOVE.b #1,$89(a0)
0001C028 <AmiBlitz3.ab3@705>   MOVE.b #1,$ce(a0)
0001C02E <AmiBlitz3.ab3@706>   MOVE.b #1,$cf(a0)
0001C034 <AmiBlitz3.ab3@707>   MOVE.b #1,$d0(a0)
0001C03A <AmiBlitz3.ab3@708>   MOVE.b #1,$cd(a0)
0001C03C <AmiBlitz3.ab3@709>   MOVEQ #0,d0
0001C042 <AmiBlitz3.ab3@711>   MOVEA.l _execbase,a6
0001C048 <AmiBlitz3.ab3@716>   MOVE.l #$10000,d0
0001C04E <AmiBlitz3.ab3@717>   MOVE.l #80000,d1
0001C050 <AmiBlitz3.ab3@718>   MOVE.l d1,d2
0001C054 <AmiBlitz3.ab3@719>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001C05A <AmiBlitz3.ab3@720>   MOVE.l d0,mempool
0001C05E <AmiBlitz3.ab3@721>   MOVEM.l (a7)+,d0/a0
0001C064 <AmiBlitz3.ab3@722>   TST.l mempool
0001C068 <AmiBlitz3.ab3@723>   BEQ shutdown_compiler
0001C06C <AmiBlitz3.ab3@725>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001C072 <AmiBlitz3.ab3@726>   MOVE.l A4,ptr_ThisTask
0001C076 <AmiBlitz3.ab3@728>   BSR.w open_doslibrary
0001C07A <AmiBlitz3.ab3@729>   BEQ.w shutdown_compiler
0001C080 <AmiBlitz3.ab3@731>   MOVE.l D2,stacksize
0001C082 <AmiBlitz3.ab3@735>   MOVEQ.l #$00,D0
0001C088 <AmiBlitz3.ab3@736>   LEA tokens,A0
0001C08A <AmiBlitz3.ab3@739>     ADDQ.w #1,D0
0001C08C <AmiBlitz3.ab3@740>     MOVE.l (A0),D1
0001C090 <AmiBlitz3.ab3@741>     BEQ.w JL_0_2D1C
0001C092 <AmiBlitz3.ab3@742>     MOVEA.l D1,A0
0001C096 <AmiBlitz3.ab3@743> BRA.w JL_0_2D0E
0001C09C <AmiBlitz3.ab3@746>   MOVE.l A0,end_of_tokenlist
0001C0A0 <AmiBlitz3.ab3@748>   BSR.w makeasmtable
0001C0A8 <AmiBlitz3.ab3@749>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001C0AC <AmiBlitz3.ab3@751>   BSR.w open_mathlibrary
0001C0B0 <AmiBlitz3.ab3@752>   BEQ.w freemem_and_quit4
0001C0B6 <AmiBlitz3.ab3@754>   MOVE.l constmaxpc,D0
0001C0B8 <AmiBlitz3.ab3@755>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001C0BE <AmiBlitz3.ab3@756>   MOVEA.l _execbase,A6
0001C0C2 <AmiBlitz3.ab3@757>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001C0C8 <AmiBlitz3.ab3@758>   MOVE.l D0,constpcat
0001C0CC <AmiBlitz3.ab3@759>   BEQ.w freemem_and_quit3
0001C0D2 <AmiBlitz3.ab3@760>   ADD.l constmaxpc,D0
0001C0D8 <AmiBlitz3.ab3@761>   MOVE.l D0,constlibat
0001C0DE <AmiBlitz3.ab3@763>   MOVE.l macrobuffer_size,D0
0001C0E4 <AmiBlitz3.ab3@764>   CMP.l #40000,d0
0001C0E8 <AmiBlitz3.ab3@765>   BGE 'ok
0001C0EE <AmiBlitz3.ab3@766>     MOVE.l #40000,d0
0001C0F4 <AmiBlitz3.ab3@767>     MOVE.l d0,macrobuffer_size
0001C0F6 <AmiBlitz3.ab3@770>   ADDQ.l #4,d0
0001C0F8 <AmiBlitz3.ab3@771>   MOVEQ.l #$01,D1
0001C0FE <AmiBlitz3.ab3@772>   MOVEA.l _execbase,A6
0001C102 <AmiBlitz3.ab3@773>   JSR _AllocMem(A6)                                        ;macro mem
0001C104 <AmiBlitz3.ab3@774>   MOVE.l d0,a0
0001C10A <AmiBlitz3.ab3@775>   MOVE.l macrobuffer_size,(a0)+
0001C10C <AmiBlitz3.ab3@776>   MOVE.l a0,d0
0001C112 <AmiBlitz3.ab3@777>   MOVE.l D0,ptr_macrobuffer_begin
0001C116 <AmiBlitz3.ab3@778>   BEQ.w freemem_and_quit2
0001C11C <AmiBlitz3.ab3@779>   ADD.l macrobuffer_size,D0
0001C122 <AmiBlitz3.ab3@780>   MOVE.l D0,ptr_macrobuffer_end
0001C128 <AmiBlitz3.ab3@782>   TST.l CLIMode
0001C12C <AmiBlitz3.ab3@783>   BEQ load_ped
0001C156 <AmiBlitz3.ab3@786>   !basic
0001C160 <AmiBlitz3.ab3@787>   succ.l = InitEmulatedPED{}
0001C164 <AmiBlitz3.ab3@788>   GetD0 succ
0001C182 <AmiBlitz3.ab3@789>   !asm
0001C184 <AmiBlitz3.ab3@790>   TST.l d0
0001C188 <AmiBlitz3.ab3@791>   BEQ freemem_and_quit
0001C18E <AmiBlitz3.ab3@792> JMP skip_ped
0001C194 <AmiBlitz3.ab3@797>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001C19A <AmiBlitz3.ab3@798>   MOVEA.l _dosbase,A6
0001C19E <AmiBlitz3.ab3@799>   JSR _LoadSeg(A6)
0001C1A4 <AmiBlitz3.ab3@800>   MOVE.l D0,ptr_seg_ped
0001C1A8 <AmiBlitz3.ab3@802>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001C1AA <AmiBlitz3.ab3@806>   MOVEA.l D0,A2
0001C1AC <AmiBlitz3.ab3@807>   ADDA.l A2,A2
0001C1AE <AmiBlitz3.ab3@808>   ADDA.l A2,A2
0001C1B4 <AmiBlitz3.ab3@810>   LEA teddata,a1                                           ;lea edstruct,A1
0001C1BA <AmiBlitz3.ab3@811>   MOVE.l #"TEDY",d1
0001C1BE <AmiBlitz3.ab3@812>   JSR 4(A2)                                                ; Run PED
0001C1C4 <AmiBlitz3.ab3@814>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001C1CA <AmiBlitz3.ab3@815>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001C208 <AmiBlitz3.ab3@817>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001C20C <AmiBlitz3.ab3@818>   BEQ.w unload_ped
0001C210 <AmiBlitz3.ab3@819> 
0001C214 <AmiBlitz3.ab3@820>   BNE old_version_of_PED                                   ; no, than exit
0001C252 <AmiBlitz3.ab3@826>   !ComData_GetL{comData_Magic,D0}
0001C258 <AmiBlitz3.ab3@827>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001C25C <AmiBlitz3.ab3@828>   BNE unload_ped
0001C294 <AmiBlitz3.ab3@831>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001C2CC <AmiBlitz3.ab3@832>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001C304 <AmiBlitz3.ab3@833>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001C33C <AmiBlitz3.ab3@834>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001C374 <AmiBlitz3.ab3@835>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001C3AC <AmiBlitz3.ab3@836>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001C3E4 <AmiBlitz3.ab3@837>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001C41C <AmiBlitz3.ab3@838>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001C454 <AmiBlitz3.ab3@839>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001C48C <AmiBlitz3.ab3@840>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001C4C4 <AmiBlitz3.ab3@841>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001C4FC <AmiBlitz3.ab3@842>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001C534 <AmiBlitz3.ab3@845>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001C56C <AmiBlitz3.ab3@846>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001C5A4 <AmiBlitz3.ab3@849>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001C5DC <AmiBlitz3.ab3@850>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001C614 <AmiBlitz3.ab3@852>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001C64C <AmiBlitz3.ab3@853>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001C684 <AmiBlitz3.ab3@855>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001C6BC <AmiBlitz3.ab3@856>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001C6F4 <AmiBlitz3.ab3@858>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001C72C <AmiBlitz3.ab3@859>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001C764 <AmiBlitz3.ab3@860>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001C79C <AmiBlitz3.ab3@861>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001C7D4 <AmiBlitz3.ab3@862>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001C80C <AmiBlitz3.ab3@863>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001C844 <AmiBlitz3.ab3@864>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001C87C <AmiBlitz3.ab3@865>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001C8B4 <AmiBlitz3.ab3@866>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001C8EC <AmiBlitz3.ab3@867>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001C924 <AmiBlitz3.ab3@868>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001C95C <AmiBlitz3.ab3@869>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001C994 <AmiBlitz3.ab3@870>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001C9CC <AmiBlitz3.ab3@871>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001CA04 <AmiBlitz3.ab3@874>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001CA0A <AmiBlitz3.ab3@876>   CLR.w returncode_org
0001CA34 <AmiBlitz3.ab3@878>   !basic
0001CA3E <AmiBlitz3.ab3@879>   If CLIMode
0001CAB0 <AmiBlitz3.ab3@880>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001CACE <AmiBlitz3.ab3@882>   !asm
0001CAD4 <AmiBlitz3.ab3@886>   TST.b start_without_libs
0001CAD8 <AmiBlitz3.ab3@887>   BNE skip_loading_libs
0001CADC <AmiBlitz3.ab3@888>     BSR.w call_setpointerbusy
0001CAE6 <AmiBlitz3.ab3@889>     MOVE.l #$FFFFffff,linenumat
0001CAEA <AmiBlitz3.ab3@890>     BSR.w get_libraries
0001CAF0 <AmiBlitz3.ab3@891>     JSR init_libraries
0001CAF4 <AmiBlitz3.ab3@892>     BSR.w init_buffers
0001CAF8 <AmiBlitz3.ab3@893>     BSR.w call_setpointernormal
0001CAFA <AmiBlitz3.ab3@898>   MOVEQ.l #-$01,D0
0001CB00 <AmiBlitz3.ab3@899>   MOVEA.l _execbase,A6
0001CB04 <AmiBlitz3.ab3@900>   JSR _AllocSignal(A6)
0001CB0A <AmiBlitz3.ab3@901>   MOVE.l D0,signalNum
0001CB0C <AmiBlitz3.ab3@902>   MOVEQ.l #$00,D1
0001CB0E <AmiBlitz3.ab3@903>   BSET D0,D1
0001CB14 <AmiBlitz3.ab3@904>   MOVE.l D1,signals
0001CB1A <AmiBlitz3.ab3@908>   MOVE.l #str_defaultdbug,D1
0001CB1E <AmiBlitz3.ab3@909>   MOVEA.l _dosbase(PC),A6
0001CB22 <AmiBlitz3.ab3@910>   JSR _LoadSeg(A6)
0001CB28 <AmiBlitz3.ab3@911>   MOVE.l D0,ptr_seg_debugger
0001CB2A <AmiBlitz3.ab3@912>   TST.l d0
0001CB2E <AmiBlitz3.ab3@913>   BNE ok_12
0001CB58 <AmiBlitz3.ab3@914>     !basic
0001CBBA <AmiBlitz3.ab3@915>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001CBD8 <AmiBlitz3.ab3@916>     !asm
0001CBDE <AmiBlitz3.ab3@919>   TST.l CLIMode
0001CBE2 <AmiBlitz3.ab3@920>   BEQ run_ped
0001CC0C <AmiBlitz3.ab3@926>   !basic
0001CC12 <AmiBlitz3.ab3@927>   err.l = False
0001CC3E <AmiBlitz3.ab3@935>   If cli_sourcefile
0001CC5E <AmiBlitz3.ab3@936>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001CC68 <AmiBlitz3.ab3@937>     If lock
0001CC8C <AmiBlitz3.ab3@938>       NameFromLock_ lock,&cli_tempstr,1024
0001CCB6 <AmiBlitz3.ab3@939>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001CCC6 <AmiBlitz3.ab3@940>       UnLock_ lock
0001CCF2 <AmiBlitz3.ab3@943>     If cli_exefile
0001CD44 <AmiBlitz3.ab3@944>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001CD9C <AmiBlitz3.ab3@945>       path.s = dos_PathPart{cli_exefile}
0001CDBC <AmiBlitz3.ab3@946>       lock.l = Lock_(&path,#ACCESS_READ)
0001CDC6 <AmiBlitz3.ab3@947>       If lock
0001CDEA <AmiBlitz3.ab3@948>         NameFromLock_ lock,&cli_tempstr,1024
0001CE14 <AmiBlitz3.ab3@949>         path.s = Peek.s(&cli_tempstr)
0001CEC2 <AmiBlitz3.ab3@950>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001CED2 <AmiBlitz3.ab3@951>         UnLock_ lock
0001CF1C <AmiBlitz3.ab3@962>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001CF90 <AmiBlitz3.ab3@963> 
0001CF9A <AmiBlitz3.ab3@964>   *PreProcessor.preprocessor = preproc_Create{}
0001CFAA <AmiBlitz3.ab3@965>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001CFDC <AmiBlitz3.ab3@966>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001CFF0 <AmiBlitz3.ab3@967>   If *PreProcessor\tokens=#NULL
0001D06A <AmiBlitz3.ab3@968>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001D074 <AmiBlitz3.ab3@969>     preproc_QueryTokens{*PreProcessor}
0001D0A6 <AmiBlitz3.ab3@970>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001D0F2 <AmiBlitz3.ab3@978>   If cli_sourcefile><"" AND err=False
0001D198 <AmiBlitz3.ab3@979>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001D1CA <AmiBlitz3.ab3@980>     succ=LoadSource{cli_sourcefile}
0001D1D4 <AmiBlitz3.ab3@981>     If succ
0001D20C <AmiBlitz3.ab3@982> 
0001D286 <AmiBlitz3.ab3@983>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001D2C0 <AmiBlitz3.ab3@984>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
0001D2CA <AmiBlitz3.ab3@986>         If comerr
0001D2D0 <AmiBlitz3.ab3@988>         Else
0001D2D6 <AmiBlitz3.ab3@992>     Else
0001D326 <AmiBlitz3.ab3@993>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001D372 <AmiBlitz3.ab3@997>   If cli_savefile><"" AND err=False
0001D3EC <AmiBlitz3.ab3@998>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001D41A <AmiBlitz3.ab3@999>     SaveSource{cli_savefile}
0001D466 <AmiBlitz3.ab3@1002>   If cli_dumpfile><"" AND err=False
0001D4B0 <AmiBlitz3.ab3@1003>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001D4E6 <AmiBlitz3.ab3@1004>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001D4F0 <AmiBlitz3.ab3@1007>   If cli_run
0001D504 <AmiBlitz3.ab3@1008>     If comerr=False
0001D530 <AmiBlitz3.ab3@1009>       If cli_exefile
0001D5AA <AmiBlitz3.ab3@1010>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001D5D8 <AmiBlitz3.ab3@1011>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0001D622 <AmiBlitz3.ab3@1013>       If cli_verbose>=1 Then NPrint "Running program..."
0001D62C <AmiBlitz3.ab3@1014> 
0001D62E <AmiBlitz3.ab3@1016>         CLR.l d0
0001D66C <AmiBlitz3.ab3@1017>         !ComData_GetB{comByte_RunningFlag,D0}
0001D670 <AmiBlitz3.ab3@1018>         running.l = PutD0
0001D68C <AmiBlitz3.ab3@1019>         If running Then Delay_ 50
0001D6A0 <AmiBlitz3.ab3@1021>       Until running=False
0001D6B4 <AmiBlitz3.ab3@1022>       If Peek.l(?_runerror)
0001D704 <AmiBlitz3.ab3@1023>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001D716 <AmiBlitz3.ab3@1034>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001D760 <AmiBlitz3.ab3@1035>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001D766 <AmiBlitz3.ab3@1036>   DeinitEmulatedPED{}
0001D784 <AmiBlitz3.ab3@1038>   !asm
0001D78A <AmiBlitz3.ab3@1039> JMP terminate_ab3
0001D790 <AmiBlitz3.ab3@1044>   MOVEA.l ped_startup_addr,A1
0001D796 <AmiBlitz3.ab3@1045>   LEA str_tempfilename,A0
0001D798 <AmiBlitz3.ab3@1046>   JSR (A1)
0001D79E <AmiBlitz3.ab3@1053>   MOVE.l signalNum,D0
0001D7A4 <AmiBlitz3.ab3@1054>   MOVEA.l _execbase,A6
0001D7A8 <AmiBlitz3.ab3@1055>   JSR _FreeSignal(A6)
0001D7AE <AmiBlitz3.ab3@1057>   MOVE.l ptr_seg_debugger,D1
0001D7B2 <AmiBlitz3.ab3@1058>   BEQ.b skip_unload_debugger
0001D7B6 <AmiBlitz3.ab3@1059>     MOVEA.l _dosbase(PC),A6
0001D7BA <AmiBlitz3.ab3@1060>     JSR _UnLoadSeg(A6)
0001D7BE <AmiBlitz3.ab3@1063>   BSR.w Aclearallvars
0001D7C2 <AmiBlitz3.ab3@1064>   BSR.w free_residents
0001D7C8 <AmiBlitz3.ab3@1065>   JSR free_blitzlibs
0001D7CE <AmiBlitz3.ab3@1068>   MOVE.l ptr_seg_ped,D1
0001D7D2 <AmiBlitz3.ab3@1069>   BEQ freemem_and_quit
0001D7D6 <AmiBlitz3.ab3@1070>   MOVEA.l _dosbase(PC),A6
0001D7DA <AmiBlitz3.ab3@1071>   JSR _UnLoadSeg(A6)
0001D7DE <AmiBlitz3.ab3@1072>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001D808 <AmiBlitz3.ab3@1075>   !basic
0001D8CC <AmiBlitz3.ab3@1076> 
0001D8EA <AmiBlitz3.ab3@1077>   !asm
0001D8EE <AmiBlitz3.ab3@1078>   BRA freemem_and_quit
0001D918 <AmiBlitz3.ab3@1081>   !basic
0001D9DC <AmiBlitz3.ab3@1082>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001D9FA <AmiBlitz3.ab3@1083>   !asm
0001D9FE <AmiBlitz3.ab3@1087>   BSR.w freeallox
0001DA04 <AmiBlitz3.ab3@1088>   MOVEA.l ptr_macrobuffer_begin,A1
0001DA06 <AmiBlitz3.ab3@1089>   MOVE.l -(a1),D0
0001DA08 <AmiBlitz3.ab3@1090>   ADDQ.l #4,d0
0001DA0E <AmiBlitz3.ab3@1091>   MOVEA.l _execbase,A6
0001DA12 <AmiBlitz3.ab3@1092>   JSR _FreeMem(A6)
0001DA18 <AmiBlitz3.ab3@1095>   MOVEA.l _dosbase,A1
0001DA1E <AmiBlitz3.ab3@1096>   MOVEA.l _execbase,A6
0001DA22 <AmiBlitz3.ab3@1097>   JSR _CloseLibrary(A6)
0001DA28 <AmiBlitz3.ab3@1099>   MOVEA.l constpcat,A1
0001DA2E <AmiBlitz3.ab3@1100>   MOVE.l constmaxpc,D0
0001DA34 <AmiBlitz3.ab3@1101>   MOVEA.l _execbase,A6
0001DA38 <AmiBlitz3.ab3@1102>   JSR _FreeMem(A6)
0001DA3E <AmiBlitz3.ab3@1105>   MOVEA.l _mathffpbase,A1
0001DA44 <AmiBlitz3.ab3@1106>   MOVEA.l _execbase,A6
0001DA48 <AmiBlitz3.ab3@1107>   JSR _CloseLibrary(A6)
0001DA4E <AmiBlitz3.ab3@1117>     MOVEA.l _execbase,A6
0001DA54 <AmiBlitz3.ab3@1118>     MOVE.l mempool,a0
0001DA58 <AmiBlitz3.ab3@1119>     JSR _DeletePool(a6)
0001DA5E <AmiBlitz3.ab3@1120>     CLR.l pushat
0001DA64 <AmiBlitz3.ab3@1127>   JSR free_unusedfunctions
0001DA66 <AmiBlitz3.ab3@1128>   MOVEQ #0,d0
0001DA74 <AmiBlitz3.ab3@1131>   !exitasm
0001DAAC <AmiBlitz3.ab3@1132>   If dynassign<>""
0001DAB6 <AmiBlitz3.ab3@1133>     If *AssignSema
0001DAC6 <AmiBlitz3.ab3@1134>       ReleaseSemaphore_ *AssignSema
0001DADE <AmiBlitz3.ab3@1135>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001DB72 <AmiBlitz3.ab3@1136>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001DBAC <AmiBlitz3.ab3@1137>         dos_RemAssign{dynassign}
0001DBBC <AmiBlitz3.ab3@1138>         RemSemaphore_ *AssignSema
0001DBCC <AmiBlitz3.ab3@1139>         ReleaseSemaphore_ *AssignSema
0001DC02 <AmiBlitz3.ab3@1140>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001DC12 <AmiBlitz3.ab3@1141>         FreeVec_ *AssignSema
0001DC1A <AmiBlitz3.ab3@1142>         *AssignSema = #NULL
0001DC48 <AmiBlitz3.ab3@1146>   SetCurrentDir{cli_path}
0001DC6A <AmiBlitz3.ab3@1147>   !coutclose
0001DC70 <AmiBlitz3.ab3@1148> End
0001DC7C <AmiBlitz3.ab3@1153> str_doslibrary:     Dc.b "dos.library",0 : Even
0001DC80 <AmiBlitz3.ab3@1154> _dosbase:           Ds.l 1
0001DC86 <AmiBlitz3.ab3@1158>   MOVEA.l _execbase,A6
0001DC8C <AmiBlitz3.ab3@1159>   LEA str_doslibrary,A1
0001DC90 <AmiBlitz3.ab3@1160>   JSR _OldOpenLibrary(A6)
0001DC96 <AmiBlitz3.ab3@1161>   MOVE.l D0,_dosbase
0001DC98 <AmiBlitz3.ab3@1162> RTS
0001DC9E <AmiBlitz3.ab3@1166>   MOVEA.l #str_mathffpname,A1
0001DCA4 <AmiBlitz3.ab3@1167>   MOVEA.l _execbase,A6
0001DCA8 <AmiBlitz3.ab3@1168>   JSR _OldOpenLibrary(A6)
0001DCAE <AmiBlitz3.ab3@1169>   MOVE.l D0,_mathffpbase
0001DCB0 <AmiBlitz3.ab3@1170> RTS
0001DCE2 <AmiBlitz3.ab3@1178> !ComData_JMP{comFunc_SetNormalPointer}
0001DD14 <AmiBlitz3.ab3@1186> !ComData_JMP{comFunc_SetBusyPointer}
0001DD3E <AmiBlitz3.ab3@1190>   !basic
0001DD42 <AmiBlitz3.ab3@1191>   ab3save_filenameP.l = PutD0
0001DD4C <AmiBlitz3.ab3@1192>   If ab3save_filenameP
0001DD74 <AmiBlitz3.ab3@1193>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DDA2 <AmiBlitz3.ab3@1195>     SaveSource{ab3save_filename}
0001DDA8 <AmiBlitz3.ab3@1196>   Else
0001DDE2 <AmiBlitz3.ab3@1197>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001DE00 <AmiBlitz3.ab3@1199>   !asm
0001DE02 <AmiBlitz3.ab3@1200>   RTS
0001DE2C <AmiBlitz3.ab3@1203>   !basic
0001DE30 <AmiBlitz3.ab3@1204>   ab3save_filenameP.l = PutD0
0001DE3A <AmiBlitz3.ab3@1205>   If ab3save_filenameP
0001DE62 <AmiBlitz3.ab3@1206>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DE90 <AmiBlitz3.ab3@1207>     LoadSource{ab3save_filename}
0001DE96 <AmiBlitz3.ab3@1208>   Else
0001DED0 <AmiBlitz3.ab3@1209>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001DEEE <AmiBlitz3.ab3@1211>   !asm
0001DEF0 <AmiBlitz3.ab3@1212>   RTS
0001DF1A <AmiBlitz3.ab3@1215>   !basic
0001DF20 <AmiBlitz3.ab3@1216>   ClearSource{}
0001DF3E <AmiBlitz3.ab3@1217>   !asm
0001DF40 <AmiBlitz3.ab3@1218>   RTS
0001DF6A <AmiBlitz3.ab3@1221>   !basic
0001DF70 <AmiBlitz3.ab3@1222>   OpenConsoleFake{}
0001DF8E <AmiBlitz3.ab3@1223>   !asm
0001DF90 <AmiBlitz3.ab3@1224>   RTS
0001DFBA <AmiBlitz3.ab3@1228>   !basic
0001DFC0 <AmiBlitz3.ab3@1229>   CloseConsoleFake{}
0001DFDE <AmiBlitz3.ab3@1230>   !asm
0001DFE0 <AmiBlitz3.ab3@1231>   RTS
0001DFE6 <AmiBlitz3.ab3@1235>   MOVE.w d6,menuitemdebug
0001E010 <AmiBlitz3.ab3@1236>   !basic
0001E022 <AmiBlitz3.ab3@1237>   menuitemx.l = Peek.w(?menuitemdebug)
0001E048 <AmiBlitz3.ab3@1238>   If menuitemx>16 OR  menuitemx<0
0001E0BC <AmiBlitz3.ab3@1239>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001E0C4 <AmiBlitz3.ab3@1240>     menuitemx=0
0001E0D4 <AmiBlitz3.ab3@1242>   Poke.w ?menuitemdebug,menuitemx
0001E0F2 <AmiBlitz3.ab3@1243>   !asm
0001E0F8 <AmiBlitz3.ab3@1244>   MOVE.w menuitemdebug,d6
0001E0FE <AmiBlitz3.ab3@1247>   MOVE.l A5,firstitem_
0001E104 <AmiBlitz3.ab3@1248>   MOVE.w D7,numlines_org
0001E10A <AmiBlitz3.ab3@1249>   MOVE.l d7,numlines
0001E10C <AmiBlitz3.ab3@1250>   LSL.w #2,D6
0001E112 <AmiBlitz3.ab3@1251>   LEA menu_items,A0
0001E116 <AmiBlitz3.ab3@1252>   MOVEA.l $0(A0,D6.W),A0
0001E120 <AmiBlitz3.ab3@1253>   MOVE.l #$FFFFffff,linenumat
0001E12A <AmiBlitz3.ab3@1254>   MOVE.l #$FFFFffff,compilelinecounter
0001E12C <AmiBlitz3.ab3@1257>   JSR (A0)                              ; jsr to the function for the menuitem
0001E132 <AmiBlitz3.ab3@1258>   MOVE.l compilelinecounter,D0
0001E134 <AmiBlitz3.ab3@1259> RTS
0001E138 <AmiBlitz3.ab3@1261> menuitemdebug: Dc.l 0
0001E13C <AmiBlitz3.ab3@1263> mempool                Dc.l 0
0001E152 <AmiBlitz3.ab3@1264> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001E158 <AmiBlitz3.ab3@1265> dloaderr:             JSR handle_compileerror
0001E174 <AmiBlitz3.ab3@1266>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001E1B2 <AmiBlitz3.ab3@1274>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E1B8 <AmiBlitz3.ab3@1275>   LEA str_loaddebugmessage,A2
0001E1BE <AmiBlitz3.ab3@1276>   LEA str_blitz3assign,A0
0001E1C4 <AmiBlitz3.ab3@1277>   LEA str_temp_debugmodulename,A1
0001E1C6 <AmiBlitz3.ab3@1279>   JSR (A3)                                                  ;open ped filerequest
0001E1CA <AmiBlitz3.ab3@1281>   BEQ.w menu_loaddebugmodule_noload
0001E1D0 <AmiBlitz3.ab3@1282>   MOVE.l D0,ptr_temp_debugmodule
0001E1D4 <AmiBlitz3.ab3@1283>   BSR.w call_setpointerbusy
0001E1DA <AmiBlitz3.ab3@1284> 
0001E1E0 <AmiBlitz3.ab3@1285>   MOVE.l A7,errstack
0001E1EA <AmiBlitz3.ab3@1286>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001E1F0 <AmiBlitz3.ab3@1287>   MOVE.l ptr_temp_debugmodule,D1
0001E1F4 <AmiBlitz3.ab3@1289>   MOVEA.l _dosbase(PC),A6
0001E1F8 <AmiBlitz3.ab3@1290>   JSR _LoadSeg(A6)
0001E1FA <AmiBlitz3.ab3@1291>   MOVE.l D0,D7
0001E1FE <AmiBlitz3.ab3@1292>   BEQ.w dloaderr
0001E204 <AmiBlitz3.ab3@1293>   MOVE.l ptr_seg_debugger,D1
0001E208 <AmiBlitz3.ab3@1294>   BEQ.b menu_loaddebugmodule_ndseg
0001E20C <AmiBlitz3.ab3@1295>   MOVEA.l _dosbase(PC),A6
0001E210 <AmiBlitz3.ab3@1296>   JSR _UnLoadSeg(A6)
0001E214 <AmiBlitz3.ab3@1297>   BSR.w call_setpointernormal
0001E21A <AmiBlitz3.ab3@1300>   MOVE.l D7,ptr_seg_debugger
0001E21C <AmiBlitz3.ab3@1303> RTS
0001E23A <AmiBlitz3.ab3@1306> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001E2FA <AmiBlitz3.ab3@1307> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001E3BA <AmiBlitz3.ab3@1308> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001E3BE <AmiBlitz3.ab3@1309> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001E3E8 <AmiBlitz3.ab3@1313>   !basic
0001E412 <AmiBlitz3.ab3@1314>   exepath.s = Peek.s(?exepath)
0001E43C <AmiBlitz3.ab3@1315>   exefile.s = Peek.s(?exefilename)
0001E4BC <AmiBlitz3.ab3@1316>   exefile.s = dos_AddPart{exepath,exefile}
0001E4F4 <AmiBlitz3.ab3@1317>   Poke.s ?tempspace,exefile
0001E512 <AmiBlitz3.ab3@1318>   !asm
0001E518 <AmiBlitz3.ab3@1339>   LEA tempspace,a0
0001E51A <AmiBlitz3.ab3@1340>   MOVE.l a0,d0
0001E51E <AmiBlitz3.ab3@1341> BRA newcreate2
0001E548 <AmiBlitz3.ab3@1347>   !basic
0001E572 <AmiBlitz3.ab3@1348>   request_exename.s = Peek.s(?str_request_exename )
0001E5CE <AmiBlitz3.ab3@1349>   request_exename   = !TRANS{request_exename}
0001E5D4 <AmiBlitz3.ab3@1350>   GetD0 &request_exename
0001E5F2 <AmiBlitz3.ab3@1351>   !asm
0001E5F4 <AmiBlitz3.ab3@1352>   MOVE.l D0,A2
0001E632 <AmiBlitz3.ab3@1355>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E638 <AmiBlitz3.ab3@1357>   LEA exepath,A0
0001E63E <AmiBlitz3.ab3@1358>   LEA exefilename,A1
0001E640 <AmiBlitz3.ab3@1360>   JSR (A3)                                                 ;open ped filerequest
0001E644 <AmiBlitz3.ab3@1362>   BEQ.w cancel_createexe
0001E64E <AmiBlitz3.ab3@1365>   ADD.l #1,number_of_builds
0001E654 <AmiBlitz3.ab3@1368>   MOVE.l D0,ptr_newexefilename
0001E65C <AmiBlitz3.ab3@1369>   MOVE.w #-1,debugversion
0001E662 <AmiBlitz3.ab3@1370>   MOVE.w set_make_smallestcode,-(A7)
0001E66A <AmiBlitz3.ab3@1374>     MOVE.w #1,makeexec
0001E670 <AmiBlitz3.ab3@1375>     JSR ab3_OpenDebugFile
0001E674 <AmiBlitz3.ab3@1376>     BSR.w startcompile
0001E67A <AmiBlitz3.ab3@1377>     JSR ab3_CloseDebugFile
0001E684 <AmiBlitz3.ab3@1378>     CMP.l #"NORE",reqmode
0001E688 <AmiBlitz3.ab3@1379>   BEQ 'l1
0001E68E <AmiBlitz3.ab3@1381>   TST.w anyerrs
0001E692 <AmiBlitz3.ab3@1382>   BNE.b menu_createexecutable__skip
0001E696 <AmiBlitz3.ab3@1383>   BSR.w savefile
0001E69C <AmiBlitz3.ab3@1386>   MOVE.w (A7)+,set_make_smallestcode
0001E69E <AmiBlitz3.ab3@1389> RTS
0001E6A6 <AmiBlitz3.ab3@1393>   MOVE.w #-1,flag_noPED
0001E6A8 <AmiBlitz3.ab3@1394> RTS
0001E6B0 <AmiBlitz3.ab3@1398>   MOVE.w #-1,flag_noCLI
0001E6B2 <AmiBlitz3.ab3@1399> RTS
0001E6DC <AmiBlitz3.ab3@1402>   !basic
0001E704 <AmiBlitz3.ab3@1403>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001E714 <AmiBlitz3.ab3@1404>     Poke.w ?word_WriteDebugFileNow,0
0001E732 <AmiBlitz3.ab3@1405>   !asm
0001E734 <AmiBlitz3.ab3@1406> RTS
0001E75E <AmiBlitz3.ab3@1409>   !basic
0001E76E <AmiBlitz3.ab3@1410>   Poke.w ?word_WriteDebugFileNow,0
0001E780 <AmiBlitz3.ab3@1411>   If dbg_fid>=0
0001E796 <AmiBlitz3.ab3@1412>     file_Close{dbg_fid} : dbg_fid = -1
0001E7A8 <AmiBlitz3.ab3@1414>   If dbg_fid.l<0
0001E7AA <AmiBlitz3.ab3@1415>     CLR.l d0
0001E7E8 <AmiBlitz3.ab3@1416>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001E7EC <AmiBlitz3.ab3@1417>     dbg_Create.l = PutD0
0001E7F6 <AmiBlitz3.ab3@1418>     If (dbg_Create) ; only when set!
0001E806 <AmiBlitz3.ab3@1419>       exefileP.l = Peek.l (?ptr_newexefilename)
0001E82E <AmiBlitz3.ab3@1420>       exefile.s = ""
0001E860 <AmiBlitz3.ab3@1421>       If exefileP Then exefile.s = Peek.s(exefileP)
0001E898 <AmiBlitz3.ab3@1422>       If exefile><""
0001E8EE <AmiBlitz3.ab3@1423>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001E900 <AmiBlitz3.ab3@1424>         If dbg_fid>=0
0001E912 <AmiBlitz3.ab3@1425>           Poke.w ?word_WriteDebugFileNow,-1
0001E91E <AmiBlitz3.ab3@1428>       oldhunkoffset.l = -1
0001E946 <AmiBlitz3.ab3@1429>       oldfile.s       = ""
0001E964 <AmiBlitz3.ab3@1432>   !asm
0001E966 <AmiBlitz3.ab3@1433> RTS
0001E96C <AmiBlitz3.ab3@1436> TST.w word_WriteDebugFileNow
0001E970 <AmiBlitz3.ab3@1437> BEQ 'skipdebugfile
0001E99A <AmiBlitz3.ab3@1438> !basic
0001E9AC <AmiBlitz3.ab3@1439>   If dbg_fid>=0
0001E9BE <AmiBlitz3.ab3@1440>     pass.l          = Peek.w(?pass)
0001E9D0 <AmiBlitz3.ab3@1441>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001E9F4 <AmiBlitz3.ab3@1442> 
0001E9FA <AmiBlitz3.ab3@1443>       oldhunkoffset.l = hunkoffset.l
0001EA2E <AmiBlitz3.ab3@1444>       oldfile.s       = codefile.s
0001EA4A <AmiBlitz3.ab3@1445>       If Peek.w (?ininclude)>0
0001EA5A <AmiBlitz3.ab3@1446>         codeline.l = Peek.l(?includeline);-1
0001EACA <AmiBlitz3.ab3@1447>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001EAD0 <AmiBlitz3.ab3@1448>       Else
0001EAFE <AmiBlitz3.ab3@1449>         !ComData_LEA{comStr_SourceName,A0}
0001EB00 <AmiBlitz3.ab3@1450>         MOVE.l A0,D0
0001EB04 <AmiBlitz3.ab3@1451>         sourceP.l = PutD0
0001EB2C <AmiBlitz3.ab3@1452>         codefile.s = Peek.s(sourceP)
0001EB3C <AmiBlitz3.ab3@1453>         codeline.l = Peek.l(?linenumat)
0001EB64 <AmiBlitz3.ab3@1455>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001EBB8 <AmiBlitz3.ab3@1456>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001EBC8 <AmiBlitz3.ab3@1463>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001EBD2 <AmiBlitz3.ab3@1464>         If *sourceLine
0001EBE8 <AmiBlitz3.ab3@1465>           MaxLen detokenline.s = 65536
0001EC2A <AmiBlitz3.ab3@1466>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001EC3A <AmiBlitz3.ab3@1467>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001EC66 <AmiBlitz3.ab3@1468>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001EC94 <AmiBlitz3.ab3@1469>           If written>0 Then Poke.b &detokenline+written-1,0
0001ECBE <AmiBlitz3.ab3@1470>           sourceLineText.s = Peek.s(&detokenline)
0001ECC4 <AmiBlitz3.ab3@1471>         Else
0001ECEC <AmiBlitz3.ab3@1472>           sourceLineText = "NULL"
0001EDB4 <AmiBlitz3.ab3@1475>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001EDD2 <AmiBlitz3.ab3@1481> !asm
0001EDD4 <AmiBlitz3.ab3@1483> RTS
0001EDD6 <AmiBlitz3.ab3@1485> word_WriteDebugFileNow: Dc.w 0
0001EDD8 <AmiBlitz3.ab3@1487> flag_noPED:  Ds.w 1                                        ;closeed org source
0001EDDA <AmiBlitz3.ab3@1488> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001EDDE <AmiBlitz3.ab3@1492>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001EDE4 <AmiBlitz3.ab3@1493>   MOVEA.l _execbase,A6
0001EDE8 <AmiBlitz3.ab3@1494>   JSR _CacheClearU(A6)
0001EDEC <AmiBlitz3.ab3@1495>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001EDEE <AmiBlitz3.ab3@1496> RTS
0001EDF2 <AmiBlitz3.ab3@1499>   MOVEM.l A2-A3,-(A7)
0001EDF8 <AmiBlitz3.ab3@1500>   CLR.b doublepeek
0001EDFE <AmiBlitz3.ab3@1501>   MOVE.l A5,lastsourcepos
0001EE04 <AmiBlitz3.ab3@1502>    JSR getchar
0001EE08 <AmiBlitz3.ab3@1503>   CMP.w #$2E,D0
0001EE0C <AmiBlitz3.ab3@1504>    BEQ.w JL_0_49B4b
0001EE12 <AmiBlitz3.ab3@1505>   MOVEA.l defaulttype,A2
0001EE16 <AmiBlitz3.ab3@1506>   CMP.w #$24,D0
0001EE1A <AmiBlitz3.ab3@1507>    BNE.w JL_0_49CAb
0001EE1C <AmiBlitz3.ab3@1508>   MOVEQ.l #$07,D1
0001EE20 <AmiBlitz3.ab3@1509> BRA.w JL_0_49DEb
0001EE26 <AmiBlitz3.ab3@1512>   JSR getparameter2
0001EE2A <AmiBlitz3.ab3@1513>   BEQ.w syntaxerrb
0001EE30 <AmiBlitz3.ab3@1514>   LEA newtypebase,A2
0001EE36 <AmiBlitz3.ab3@1515>   JSR findtype
0001EE3A <AmiBlitz3.ab3@1516>   BNE.w notypeerrb
0001EE44 <AmiBlitz3.ab3@1521>   MOVE.w oldqflag,instringon
0001EE4A <AmiBlitz3.ab3@1522>   MOVEA.l lastsourcepos,A5
0001EE50 <AmiBlitz3.ab3@1524>   MOVE.l a2,functionreturntype
0001EE58 <AmiBlitz3.ab3@1525>   CMPI.l #$100,$4(A2)
0001EE5C <AmiBlitz3.ab3@1526>   BLE.w 'isvar
0001EE5E <AmiBlitz3.ab3@1530>   MOVEQ #3,d1
0001EE62 <AmiBlitz3.ab3@1531>   BRA JL_0_49DEb
0001EE66 <AmiBlitz3.ab3@1538>   MOVE.w $6(A2),D1
0001EE6C <AmiBlitz3.ab3@1539>   CMP.w #8,8(a2)
0001EE70 <AmiBlitz3.ab3@1540>   BNE 'l1
0001EE78 <AmiBlitz3.ab3@1541>   MOVE.b #1,doublepeek
0001EE7E <AmiBlitz3.ab3@1545>   MOVE.w D1,convsize
0001EE82 <AmiBlitz3.ab3@1546>   MOVEM.l (A7)+,A2-A3
0001EE84 <AmiBlitz3.ab3@1547> RTS
0001EE8A <AmiBlitz3.ab3@1549> notypeerrb JMP notypeerr
0001EE90 <AmiBlitz3.ab3@1550> illtypeerrb JMP illtypeerr
0001EE96 <AmiBlitz3.ab3@1551> syntaxerrb JMP syntaxerr
0001EEA0 <AmiBlitz3.ab3@1596>   ADD.l #1,number_of_builds
0001EEA6 <AmiBlitz3.ab3@1598>   CLR.w debugversion
0001EEAC <AmiBlitz3.ab3@1599>   CLR.w flag_noPED
0001EEB2 <AmiBlitz3.ab3@1600>   CLR.w flag_noCLI
0001EEBA <AmiBlitz3.ab3@1603>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0001EEBE <AmiBlitz3.ab3@1604>     BSR.w startcompile
0001EEC8 <AmiBlitz3.ab3@1605>     CMP.l #"NORE",reqmode
0001EECC <AmiBlitz3.ab3@1606>   BEQ 'l1
0001EED2 <AmiBlitz3.ab3@1609>   TST.w anyerrs
0001EED6 <AmiBlitz3.ab3@1610>    BNE.w JL_0_3482
0001EEDA <AmiBlitz3.ab3@1612>   MOVE.w flag_noPED(PC),D1
0001EEDE <AmiBlitz3.ab3@1613>    BEQ.w skip_closingGUI
0001EF10 <AmiBlitz3.ab3@1618>   !ComData_JSR{comFunc_CloseGUI}
0001EF14 <AmiBlitz3.ab3@1619> BRA.b runprogram
0001EF18 <AmiBlitz3.ab3@1623>   BSR.w compilerequester
0001EF1E <AmiBlitz3.ab3@1626>   MOVEA.l _dosbase,A6
0001EF24 <AmiBlitz3.ab3@1627>   LEA exepath,a0
0001EF26 <AmiBlitz3.ab3@1628>   MOVE.l a0,d1
0001EF28 <AmiBlitz3.ab3@1629>   MOVEQ #-2,d2
0001EF2C <AmiBlitz3.ab3@1630>   JSR _Lock(a6)                                            ;lock
0001EF32 <AmiBlitz3.ab3@1631>   MOVE.l d0,exelock
0001EF38 <AmiBlitz3.ab3@1632>   MOVE.l #0,d1
0001EF3C <AmiBlitz3.ab3@1633>   JSR _CurrentDir(A6)
0001EF42 <AmiBlitz3.ab3@1634>   MOVE.l D0,lock_currentdir
0001EF44 <AmiBlitz3.ab3@1635>   MOVE.l D0,D1
0001EF48 <AmiBlitz3.ab3@1636>   JSR _CurrentDir(A6)
0001EF4E <AmiBlitz3.ab3@1637>   CLR.l ptr_exetask
0001EF54 <AmiBlitz3.ab3@1646>   MOVE.l #str_process_name,D1
0001EF56 <AmiBlitz3.ab3@1647>   MOVEQ.l #$00,D2
0001EF5C <AmiBlitz3.ab3@1648>   MOVE.l #proc_seglist,D3
0001EF5E <AmiBlitz3.ab3@1649>   LSR.l #2,D3
0001EF64 <AmiBlitz3.ab3@1650>   MOVE.l stacksize,D4
0001EF6A <AmiBlitz3.ab3@1651>   MOVEA.l _dosbase,A6
0001EF6E <AmiBlitz3.ab3@1652>   JSR _CreateProc(A6)                                      ;runtask
0001EF70 <AmiBlitz3.ab3@1653>   TST.l D0
0001EF74 <AmiBlitz3.ab3@1654>    BEQ ErrorRunningProg
0001EFAA <AmiBlitz3.ab3@1656>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0001EFB0 <AmiBlitz3.ab3@1658>   TST.w flag_noPED
0001EFB4 <AmiBlitz3.ab3@1659>    BNE.b JL_0_344E
0001EFB8 <AmiBlitz3.ab3@1660>   BSR.w close_compilewin
0001EFBE <AmiBlitz3.ab3@1663>   CLR.l firstlocal
0001EFC4 <AmiBlitz3.ab3@1664>   CLR.l firstglob
0001EFC8 <AmiBlitz3.ab3@1665>   MOVE.w flag_noPED(PC),D1
0001EFCC <AmiBlitz3.ab3@1666>   BEQ.w skip_openGUI
0001EFFE <AmiBlitz3.ab3@1670>   !ComData_JSR{comFunc_CreateGUI}
0001F000 <AmiBlitz3.ab3@1680> RTS
0001F00A <AmiBlitz3.ab3@1683> MOVE.l #1,_runerror
0001F00E <AmiBlitz3.ab3@1684> BRA JL_0_344E
0001F012 <AmiBlitz3.ab3@1686> _runerror: Dc.l 0
0001F016 <AmiBlitz3.ab3@1687> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0001F01A <AmiBlitz3.ab3@1688> ptr_exetask:        Ds.l 1                                          ;panictask org source
0001F01E <AmiBlitz3.ab3@1689> signalNum:          Ds.l 1                                          ;panicbit org source
0001F022 <AmiBlitz3.ab3@1690> signals:            Ds.l 1                                          ;panicmask org source
0001F038 <AmiBlitz3.ab3@1692> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0001F03D <AmiBlitz3.ab3@1693>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0001F040 <AmiBlitz3.ab3@1694> Even4
0001F044 <AmiBlitz3.ab3@1696> ptr_ThisTask:       Ds.l 1                                          ;length
0001F048 <AmiBlitz3.ab3@1697> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0001F04E <AmiBlitz3.ab3@1701>   MOVEA.l $4,A0
0001F056 <AmiBlitz3.ab3@1702>   MOVE.l  $114(A0),ptr_exetask
0001F05C <AmiBlitz3.ab3@1704>   MOVEA.l _dosbase,A6
0001F062 <AmiBlitz3.ab3@1705>   MOVE.l exelock,D1
0001F066 <AmiBlitz3.ab3@1706>   JSR _CurrentDir(A6)
0001F09C <AmiBlitz3.ab3@1711>   !ComData_SetB{comByte_RunningFlag,#1}
0001F0A0 <AmiBlitz3.ab3@1717>   MOVE.w flag_noCLI(PC),D1
0001F0A4 <AmiBlitz3.ab3@1718>    BNE.b skip_openconsole
0001F0D6 <AmiBlitz3.ab3@1722>   !ComData_JSR{comFunc_OpenConsole}
0001F0DA <AmiBlitz3.ab3@1725>   BSR.w calcvbr
0001F0E0 <AmiBlitz3.ab3@1726>   MOVEA.l vbr,A0
0001F0E6 <AmiBlitz3.ab3@1731>   CLR.w dirmode
0001F0EC <AmiBlitz3.ab3@1732>   CLR.l firstglob
0001F0F2 <AmiBlitz3.ab3@1733>   CLR.l firstlocal
0001F0F8 <AmiBlitz3.ab3@1735>   MOVE.l stacksize,D2
0001F0FE <AmiBlitz3.ab3@1736>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0001F104 <AmiBlitz3.ab3@1737>   LEA str_cliarguments,A0                                   ;cli arguement
0001F10A <AmiBlitz3.ab3@1738>   MOVEA.l destbufferstart,A1
0001F10E <AmiBlitz3.ab3@1739>   BSR.w Aclearcache
0001F110 <AmiBlitz3.ab3@1742>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0001F116 <AmiBlitz3.ab3@1744>   MOVEA.l vbr,A0
0001F11C <AmiBlitz3.ab3@1746>   CLR.l firstglob
0001F122 <AmiBlitz3.ab3@1747>   CLR.l firstlocal
0001F128 <AmiBlitz3.ab3@1748>   MOVEA.l _dosbase,A6
0001F12E <AmiBlitz3.ab3@1749>   MOVE.l exelock,d1
0001F132 <AmiBlitz3.ab3@1750>   BEQ 'nolock
0001F136 <AmiBlitz3.ab3@1751>   JSR _UnLock(a6)
0001F16C <AmiBlitz3.ab3@1756>   !ComData_SetB{comByte_RunningFlag,#0}
0001F170 <AmiBlitz3.ab3@1759>   MOVE.w flag_noCLI(PC),D1
0001F174 <AmiBlitz3.ab3@1760>    BNE.b skip_closeconsole
0001F1A6 <AmiBlitz3.ab3@1764>   !ComData_JSR{comFunc_CloseConsole}
0001F1AE <AmiBlitz3.ab3@1767>   MOVE.w #$0001,stopit
0001F1B2 <AmiBlitz3.ab3@1768>   MOVE.l signals(PC),D0
0001F1B8 <AmiBlitz3.ab3@1769>   MOVEA.l ptr_ThisTask,A1
0001F1BE <AmiBlitz3.ab3@1770>   MOVEA.l _execbase,A6
0001F1C2 <AmiBlitz3.ab3@1771>   JSR _Signal(A6)
0001F1C4 <AmiBlitz3.ab3@1772> RTS
0001F1CA <AmiBlitz3.ab3@1776>   MOVEA.l _execbase,A6
0001F1CE <AmiBlitz3.ab3@1777>   MOVE.w $128(A6),D0
0001F1D0 <AmiBlitz3.ab3@1778>   MOVEQ.l #$00,D1
0001F1D4 <AmiBlitz3.ab3@1779>   ANDI.w #$F,D0
0001F1D8 <AmiBlitz3.ab3@1782>     BEQ.b calcvbr__skip
0001F1DA <AmiBlitz3.ab3@1783>     ADDQ.w #1,D1
0001F1DC <AmiBlitz3.ab3@1784>     LSR.w #1,D0
0001F1E0 <AmiBlitz3.ab3@1785> BRA.b calcvbr_loop
0001F1E2 <AmiBlitz3.ab3@1788>   MOVEQ.l #$00,D2
0001F1E6 <AmiBlitz3.ab3@1789>   CMP.w #$2,D1
0001F1EA <AmiBlitz3.ab3@1790>    BCS.b calcvbr__skip2
0001F1F0 <AmiBlitz3.ab3@1791>   MOVEA.l _execbase,A6
0001F1F4 <AmiBlitz3.ab3@1792>   JSR _SuperState(A6)
0001F1F8 <AmiBlitz3.ab3@1793>   Dc.l $4E7A2801                                           ;movec vbr,D2
0001F1FC <AmiBlitz3.ab3@1794>   JSR _UserState(A6)
0001F202 <AmiBlitz3.ab3@1797>   MOVE.l D2,vbr
0001F204 <AmiBlitz3.ab3@1798> RTS
0001F20A <AmiBlitz3.ab3@1802>   LEA instrtab,a0
0001F210 <AmiBlitz3.ab3@1803>   MOVE.l #labelhash-instrtab,d0
0001F212 <AmiBlitz3.ab3@1804>   ASR.l #2,d0
0001F214 <AmiBlitz3.ab3@1805>   SUBQ.l #1,d0
0001F216 <AmiBlitz3.ab3@1808>   CLR.l (a0)+
0001F218 <AmiBlitz3.ab3@1809>   SUBQ.l #1,d0
0001F21C <AmiBlitz3.ab3@1810>   BNE 'l10
0001F220 <AmiBlitz3.ab3@1811>   BSR.w call_setpointerbusy
0001F224 <AmiBlitz3.ab3@1812>   BSR.w free_userlibs
0001F228 <AmiBlitz3.ab3@1813>   BSR.w scan_for_userlibs
0001F22C <AmiBlitz3.ab3@1814>   BSR.w JL_0_7082
0001F230 <AmiBlitz3.ab3@1815> BRA.w call_setpointernormal
0001F25A <AmiBlitz3.ab3@1821>   !basic
0001F294 <AmiBlitz3.ab3@1822>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
0001F2A4 <AmiBlitz3.ab3@1824>   deflibNameP.l = Peek.l(?deflib)
0001F2AE <AmiBlitz3.ab3@1825>   If deflibNameP
0001F2E0 <AmiBlitz3.ab3@1826>     If Peek.s(deflibNameP)<>""
0001F32A <AmiBlitz3.ab3@1827>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
0001F330 <AmiBlitz3.ab3@1828>     Else
0001F36A <AmiBlitz3.ab3@1829>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001F370 <AmiBlitz3.ab3@1831>   Else
0001F3AA <AmiBlitz3.ab3@1832>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001F3E4 <AmiBlitz3.ab3@1833>     error{"INTERNAL: Invalid deflib name pointer!"}
0001F402 <AmiBlitz3.ab3@1835>   !asm
0001F408 <AmiBlitz3.ab3@1840>   MOVE.l #str_path_userlibs,D1
0001F40A <AmiBlitz3.ab3@1841>   MOVEQ.l #-$02,D2
0001F410 <AmiBlitz3.ab3@1842>   MOVEA.l _dosbase,A6
0001F414 <AmiBlitz3.ab3@1843>   JSR _Lock(A6)
0001F416 <AmiBlitz3.ab3@1844>   MOVE.l D0,D7
0001F41A <AmiBlitz3.ab3@1845>    BEQ.w exit_get_libraries
0001F41C <AmiBlitz3.ab3@1846>   MOVE.l D7,D1
0001F422 <AmiBlitz3.ab3@1847>   MOVE.l #ptr_parameterstore,D2
0001F426 <AmiBlitz3.ab3@1848>   JSR _Examine(A6)
0001F428 <AmiBlitz3.ab3@1849>   TST.l D0
0001F42C <AmiBlitz3.ab3@1850>   BEQ.w unlock_and_exit_get_libraries
0001F432 <AmiBlitz3.ab3@1851>   MOVE.l fib_DirEntryType,D0
0001F436 <AmiBlitz3.ab3@1852>   BMI.w unlock_and_exit_get_libraries
0001F438 <AmiBlitz3.ab3@1857>     MOVE.l D7,D1
0001F43E <AmiBlitz3.ab3@1858>     MOVE.l #ptr_parameterstore,D2
0001F444 <AmiBlitz3.ab3@1859>     MOVEA.l _dosbase,A6
0001F448 <AmiBlitz3.ab3@1860>     JSR _ExNext(A6)
0001F44A <AmiBlitz3.ab3@1861>     TST.l D0
0001F44E <AmiBlitz3.ab3@1862>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
0001F454 <AmiBlitz3.ab3@1864>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
0001F458 <AmiBlitz3.ab3@1865>     BPL.w scan_libsdrawer                                  ; skip directories
0001F45E <AmiBlitz3.ab3@1867>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0001F462 <AmiBlitz3.ab3@1868>     BSR.w check_for_infoextention
0001F466 <AmiBlitz3.ab3@1869>     BEQ.w scan_libsdrawer
0001F46C <AmiBlitz3.ab3@1871>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0001F46E <AmiBlitz3.ab3@1872>     MOVEQ.l #$26,D0
0001F470 <AmiBlitz3.ab3@1873>     MOVEQ.l #$01,D1
0001F476 <AmiBlitz3.ab3@1874>     MOVE.l mempool,a0
0001F47A <AmiBlitz3.ab3@1875>     JSR _AllocPooled(a6)
0001F480 <AmiBlitz3.ab3@1877>     MOVEA.l _dosbase,A6
0001F482 <AmiBlitz3.ab3@1878>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0001F488 <AmiBlitz3.ab3@1881>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0001F48A <AmiBlitz3.ab3@1884>     MOVE.l (A0),D5
0001F48E <AmiBlitz3.ab3@1885>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0001F490 <AmiBlitz3.ab3@1886>     MOVEA.l D5,A2
0001F492 <AmiBlitz3.ab3@1887>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0001F498 <AmiBlitz3.ab3@1890>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0001F49A <AmiBlitz3.ab3@1893>       MOVEQ.l #$00,D0
0001F49C <AmiBlitz3.ab3@1894>       MOVE.b (A1)+,D0
0001F4A0 <AmiBlitz3.ab3@1895>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0001F4A2 <AmiBlitz3.ab3@1896>       MOVEQ.l #$00,D1
0001F4A4 <AmiBlitz3.ab3@1897>       MOVE.b (A2)+,D1
0001F4A8 <AmiBlitz3.ab3@1898>        BEQ.w JL_0_371C
0001F4CA <AmiBlitz3.ab3@1899>       !compare1                                            ;bsr.w tstalpha
0001F4CE <AmiBlitz3.ab3@1900>       BNE.w JL_0_3702
0001F4D2 <AmiBlitz3.ab3@1901>       ANDI.w #$DF,D0
0001F4D4 <AmiBlitz3.ab3@1904>       EXG.l D0,D1
0001F4F6 <AmiBlitz3.ab3@1905>       !compare1                                            ;bsr.w tstalpha
0001F4FA <AmiBlitz3.ab3@1906>       BNE.w JL_0_3710
0001F4FE <AmiBlitz3.ab3@1907>       ANDI.w #$DF,D0
0001F500 <AmiBlitz3.ab3@1910>       EXG.l D0,D1
0001F502 <AmiBlitz3.ab3@1911>       CMP.b D1,D0
0001F506 <AmiBlitz3.ab3@1912>     BEQ.w JL_0_36E6
0001F50A <AmiBlitz3.ab3@1913>     BCS.w JL_0_3722
0001F50C <AmiBlitz3.ab3@1916>     MOVEA.l D5,A0
0001F510 <AmiBlitz3.ab3@1917> BRA.w JL_0_36D6
0001F512 <AmiBlitz3.ab3@1920>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
0001F514 <AmiBlitz3.ab3@1921>     MOVE.l (A0),(A1)
0001F516 <AmiBlitz3.ab3@1922>     MOVE.l A1,(A0)
0001F518 <AmiBlitz3.ab3@1923>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
0001F51C <AmiBlitz3.ab3@1924>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0001F522 <AmiBlitz3.ab3@1925>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
0001F524 <AmiBlitz3.ab3@1928>       MOVE.b (A0)+,(A1)+
0001F528 <AmiBlitz3.ab3@1929>     BNE.w JL_0_3734
0001F52C <AmiBlitz3.ab3@1930> BRA.w scan_libsdrawer
0001F52E <AmiBlitz3.ab3@1933>   MOVE.l D7,D1
0001F534 <AmiBlitz3.ab3@1934>   MOVEA.l _dosbase,A6
0001F538 <AmiBlitz3.ab3@1935>   JSR _UnLock(A6)
0001F53A <AmiBlitz3.ab3@1936>   MOVEQ.l #-$01,D0
0001F53C <AmiBlitz3.ab3@1939> RTS
0001F53E <AmiBlitz3.ab3@1942>   MOVE.l D7,D1
0001F544 <AmiBlitz3.ab3@1943>   MOVEA.l _dosbase,A6
0001F548 <AmiBlitz3.ab3@1944>   JSR _UnLock(A6)
0001F54A <AmiBlitz3.ab3@1945>   MOVEQ.l #$00,D0
0001F54C <AmiBlitz3.ab3@1946> RTS
0001F552 <AmiBlitz3.ab3@1950>   MOVEA.l _execbase,A6
0001F558 <AmiBlitz3.ab3@1951>   MOVEA.l ptr_userlibs_list,A2
0001F55E <AmiBlitz3.ab3@1952>   CLR.l ptr_userlibs_list
0001F562 <AmiBlitz3.ab3@1955>     CMPA.w #$0,A2
0001F566 <AmiBlitz3.ab3@1956>     BEQ.w exit_free_userlib
0001F568 <AmiBlitz3.ab3@1957>       MOVEA.l A2,A1
0001F56A <AmiBlitz3.ab3@1958>       MOVEQ.l #$26,D0
0001F56C <AmiBlitz3.ab3@1959>       MOVEA.l (A2),A2
0001F572 <AmiBlitz3.ab3@1960>       MOVE.l mempool,a0
0001F578 <AmiBlitz3.ab3@1961>       MOVEA.l _execbase,A6
0001F57C <AmiBlitz3.ab3@1962>       JSR _FreePooled(A6)
0001F580 <AmiBlitz3.ab3@1963> BRA.w loop_free_userlib
0001F582 <AmiBlitz3.ab3@1966> RTS
0001F584 <AmiBlitz3.ab3@1969> pass:  Dc.w 0                                             ; smallpass org source
0001F586 <AmiBlitz3.ab3@1970> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
0001F58C <AmiBlitz3.ab3@1974>   MOVE.l A7,errstack                                      ;startcompile
0001F592 <AmiBlitz3.ab3@1983>   CLR.l reqmode
0001F59C <AmiBlitz3.ab3@1985>   MOVE.l #Aclearallvars,errcont
0001F5A6 <AmiBlitz3.ab3@1986>   MOVE.l #concomstack,concomsp
0001F5AA <AmiBlitz3.ab3@1994>   MOVE.w #1450,D0
0001F5AC <AmiBlitz3.ab3@1995>   LSR.w #3,D0
0001F5AE <AmiBlitz3.ab3@1996>   SUBQ.w #7,D0                                             ; 173
0001F5B4 <AmiBlitz3.ab3@1997>   MOVE.w D0,progressbar_width
0001F5B6 <AmiBlitz3.ab3@1998>   SWAP D0
0001F5B8 <AmiBlitz3.ab3@1999>   CLR.w D0
0001F5BE <AmiBlitz3.ab3@2000>   MOVE.l numlines,d1
0001F5C2 <AmiBlitz3.ab3@2001>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0001F5C4 <AmiBlitz3.ab3@2003>   TST.w D0
0001F5C8 <AmiBlitz3.ab3@2004>   BNE.w JL_0_37C0
0001F5CA <AmiBlitz3.ab3@2005>   MOVEQ.l #-$01,D0
0001F5D0 <AmiBlitz3.ab3@2008>   MOVE.w D0,progress_per_line
0001F5D8 <AmiBlitz3.ab3@2017>   BTST #$7,use_debugger
0001F5DC <AmiBlitz3.ab3@2019>   BNE 'debugon
0001F5E2 <AmiBlitz3.ab3@2020>   CLR.w debugmode
0001F5E6 <AmiBlitz3.ab3@2021> BRA.b 'debugoff
0001F5EC <AmiBlitz3.ab3@2024>   SNE debugmode
0001F624 <AmiBlitz3.ab3@2032>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F62A <AmiBlitz3.ab3@2035>   CLR.w dirmode                                            ;direct mode flag
0001F630 <AmiBlitz3.ab3@2036>   CLR.w ezerr                                              ;quiet error
0001F636 <AmiBlitz3.ab3@2037>   CLR.l currentfunction
0001F63C <AmiBlitz3.ab3@2038>   CLR.w connest
0001F642 <AmiBlitz3.ab3@2039>   CLR.w varmode
0001F648 <AmiBlitz3.ab3@2040>   CLR.w proceduremode
0001F64E <AmiBlitz3.ab3@2041>   CLR.w ininclude
0001F654 <AmiBlitz3.ab3@2042>   CLR.w intstring
0001F65A <AmiBlitz3.ab3@2043>   CLR.w pass
0001F662 <AmiBlitz3.ab3@2044>   MOVE.w #0,compiler_job
0001F668 <AmiBlitz3.ab3@2045>   CLR.l funcscanon
0001F66E <AmiBlitz3.ab3@2054>   CLR.l funcscanon
0001F672 <AmiBlitz3.ab3@2055>   BSR.w compileall
0001F678 <AmiBlitz3.ab3@2056> 
0001F67E <AmiBlitz3.ab3@2057>   TST.l errorcounter
0001F682 <AmiBlitz3.ab3@2058>   BEQ _skiperrorstop
0001F684 <AmiBlitz3.ab3@2059>   RTS
0001F68A <AmiBlitz3.ab3@2062>   MOVE.w dontwrite,d0
0001F68E <AmiBlitz3.ab3@2063>   CMP.w #1,d0
0001F692 <AmiBlitz3.ab3@2064>   BNE 'l3
0001F698 <AmiBlitz3.ab3@2065>   TST.l errorcounter
0001F69C <AmiBlitz3.ab3@2066>   BNE 'l3
0001F6A2 <AmiBlitz3.ab3@2067>   CLR.w dontwrite
0001F6A6 <AmiBlitz3.ab3@2068>   BSR compileall                                           ;if a function is not found
0001F6AC <AmiBlitz3.ab3@2069>   ADDQ.w #1,pass
0001F6EA <AmiBlitz3.ab3@2074>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
0001F6EE <AmiBlitz3.ab3@2075>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
0001F6F4 <AmiBlitz3.ab3@2076>   LEA firstproc,a0
0001F6FA <AmiBlitz3.ab3@2077>   CLR.l savefuncspace
0001F6FC <AmiBlitz3.ab3@2078>   MOVE.l (a0),d0
0001F6FE <AmiBlitz3.ab3@2082>     MOVE.l d0,a0
0001F702 <AmiBlitz3.ab3@2083>     BEQ 'out
0001F706 <AmiBlitz3.ab3@2084>     TST.b isfunc(a0)
0001F70A <AmiBlitz3.ab3@2085>     BNE 'nex
0001F70E <AmiBlitz3.ab3@2086>     MOVEM.l d2/a6/a0,-(a7)
0001F710 <AmiBlitz3.ab3@2088>     MOVEQ #0,d0
0001F714 <AmiBlitz3.ab3@2089>     MOVE.b $21+#funcentry_extend-1(a0),d0
0001F718 <AmiBlitz3.ab3@2090>     SUB.w #$21+#funcentry_extend,d0
0001F71C <AmiBlitz3.ab3@2091>     ADD.w #16,d0
0001F722 <AmiBlitz3.ab3@2092>     MOVE.l #$10000,d1
0001F724 <AmiBlitz3.ab3@2093>     MOVE.l d0,d2
0001F72A <AmiBlitz3.ab3@2094>     MOVEA.l _execbase,A6
0001F72E <AmiBlitz3.ab3@2095>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0001F730 <AmiBlitz3.ab3@2096>     MOVE.l d0,a1
0001F734 <AmiBlitz3.ab3@2097>     MOVE.l d2,4(a1)
0001F73A <AmiBlitz3.ab3@2098>     MOVE.l unusedfunc,(a1)
0001F740 <AmiBlitz3.ab3@2099>     MOVE.l d0,unusedfunc
0001F744 <AmiBlitz3.ab3@2100>     MOVEM.l (a7)+,a6/a0/d2
0001F748 <AmiBlitz3.ab3@2101>     MOVE.l isfunc+1(a0),d0
0001F74A <AmiBlitz3.ab3@2102>     ADDQ.l #6,d0
0001F750 <AmiBlitz3.ab3@2103>     ADD.l d0,savefuncspace
0001F754 <AmiBlitz3.ab3@2106>     MOVE.l d0,8(a1)
0001F758 <AmiBlitz3.ab3@2107>     LEA 12(a1),a1
0001F75A <AmiBlitz3.ab3@2108>     MOVE.l a0,-(a7)
0001F75E <AmiBlitz3.ab3@2109>     LEA $21+#funcentry_extend(a0),a0
0001F760 <AmiBlitz3.ab3@2112>       MOVE.b (a0)+,(a1)+
0001F764 <AmiBlitz3.ab3@2113>     BNE 'l1
0001F766 <AmiBlitz3.ab3@2114>     MOVE.l (a7)+,a0
0001F768 <AmiBlitz3.ab3@2117>     MOVE.l (a0),d0
0001F76C <AmiBlitz3.ab3@2118> BRA 'lr1
0001F774 <AmiBlitz3.ab3@2121>   BTST #$7,make_smallestcode
0001F778 <AmiBlitz3.ab3@2122>   BEQ.b JL_0_3844                                           ;optimize for executable
0001F77E <AmiBlitz3.ab3@2123>   CLR.l morememadd
0001F782 <AmiBlitz3.ab3@2125>   BSR.w alloxadj
0001F786 <AmiBlitz3.ab3@2126>   BEQ.w JL_0_388A
0001F78A <AmiBlitz3.ab3@2129>   BSR.w compileall
0001F790 <AmiBlitz3.ab3@2130>   ADDQ.w #1,pass
0001F796 <AmiBlitz3.ab3@2133>   MOVE.w dontwrite,D1
0001F79A <AmiBlitz3.ab3@2134>   BEQ.w JL_0_38A2
0001F79E <AmiBlitz3.ab3@2154> BRA.w JL_0_3896
0001F7A6 <AmiBlitz3.ab3@2165>   MOVE.w #$FFFF,anyerrs
0001F7AA <AmiBlitz3.ab3@2166> BRA.w JL_0_38A2
0001F7AE <AmiBlitz3.ab3@2169>   BSR.w alloxinc                                          ;increase all by 50%
0001F7B2 <AmiBlitz3.ab3@2170>   BEQ.w Aclearallvars
0001F7B6 <AmiBlitz3.ab3@2171> BRA.w JL_0_3824
0001F7BA <AmiBlitz3.ab3@2183> BRA.w JL_0_38A6                                            ;???????
0001F7C0 <AmiBlitz3.ab3@2187>   JSR freereps
0001F7C6 <AmiBlitz3.ab3@2188>   JSR freesels
0001F7CC <AmiBlitz3.ab3@2189>   JSR AJL_0_6DF2
0001F7D2 <AmiBlitz3.ab3@2190>   JSR freepends
0001F7D8 <AmiBlitz3.ab3@2191>   JSR freeifs
0001F7DE <AmiBlitz3.ab3@2192>   JSR AJL_0_C188
0001F7E4 <AmiBlitz3.ab3@2193>   JSR AJL_0_C15C
0001F7EA <AmiBlitz3.ab3@2194>   JSR AJL_0_D9BC
0001F7F0 <AmiBlitz3.ab3@2197> JMP cleartemplabel
0001F7F4 <AmiBlitz3.ab3@2200> mempool2:  Dc.l 0
0001F7FA <AmiBlitz3.ab3@2204>   JSR Aclearcache
0001F802 <AmiBlitz3.ab3@2206>   BTST #$7,use_debugger
0001F806 <AmiBlitz3.ab3@2208>   BNE 'debugon
0001F80C <AmiBlitz3.ab3@2209>   CLR.w debugmode
0001F810 <AmiBlitz3.ab3@2210> BRA.b 'debugoff
0001F816 <AmiBlitz3.ab3@2213>   SNE debugmode
0001F84E <AmiBlitz3.ab3@2218>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F854 <AmiBlitz3.ab3@2220>   LEA regtable,a0
0001F856 <AmiBlitz3.ab3@2221>   MOVEQ #10,d0
0001F858 <AmiBlitz3.ab3@2224>     CLR.l (a0)+
0001F85C <AmiBlitz3.ab3@2225>   DBF d0,'l1
0001F862 <AmiBlitz3.ab3@2227>   LEA includetemp2,a0
0001F864 <AmiBlitz3.ab3@2228>   CLR.b (a0)
0001F86E <AmiBlitz3.ab3@2229>   MOVE.l #7,maxregs
0001F874 <AmiBlitz3.ab3@2230>   CLR.w debugnest
0001F87A <AmiBlitz3.ab3@2231>   CLR.b funcparloop
0001F880 <AmiBlitz3.ab3@2232>   CLR.b nostringopt
0001F886 <AmiBlitz3.ab3@2233>   CLR.b firsttime
0001F88C <AmiBlitz3.ab3@2234>   CLR.l lastdestpointer
0001F892 <AmiBlitz3.ab3@2235>   CLR.l lastwritedat
0001F898 <AmiBlitz3.ab3@2236>   CLR.l prevwritedat
0001F89E <AmiBlitz3.ab3@2237>   CLR.l includeline
0001F8A4 <AmiBlitz3.ab3@2238>   CLR.b incnif
0001F8AA <AmiBlitz3.ab3@2239>   CLR.b formode
0001F8B0 <AmiBlitz3.ab3@2240>   CLR.b funccall
0001F8B6 <AmiBlitz3.ab3@2241>   CLR.w objectcount
0001F8BC <AmiBlitz3.ab3@2242>   CLR.b resdisable
0001F8C2 <AmiBlitz3.ab3@2243>   CLR.b developobject
0001F8C8 <AmiBlitz3.ab3@2244>   CLR.b optistring
0001F8CE <AmiBlitz3.ab3@2245>   CLR.b optistring2
0001F8D4 <AmiBlitz3.ab3@2246>   CLR.b optiarray
0001F8DA <AmiBlitz3.ab3@2247>   CLR.b quickadd
0001F8E0 <AmiBlitz3.ab3@2248>   CLR.w newmode
0001F8E6 <AmiBlitz3.ab3@2249>   CLR.w mode
0001F8EC <AmiBlitz3.ab3@2250>   CLR.w string1
0001F8F2 <AmiBlitz3.ab3@2251>   CLR.b fastfunc
0001F8F8 <AmiBlitz3.ab3@2252>   CLR.w load_var_size
0001F8FE <AmiBlitz3.ab3@2253>   CLR.w load_var_reg
0001F904 <AmiBlitz3.ab3@2254>   CLR.l load_var_addr
0001F90A <AmiBlitz3.ab3@2255>   CLR.w imm_size
0001F910 <AmiBlitz3.ab3@2256>   CLR.w imm_reg
0001F916 <AmiBlitz3.ab3@2257>   CLR.l imm_addr
0001F91C <AmiBlitz3.ab3@2258>   CLR.b _dcb
0001F922 <AmiBlitz3.ab3@2259>   CLR.l nohunkoffset
0001F928 <AmiBlitz3.ab3@2260>   CLR.b peekaddrsize
0001F92E <AmiBlitz3.ab3@2261>   CLR.b typecheck
0001F934 <AmiBlitz3.ab3@2262>   CLR.b declare2
0001F93A <AmiBlitz3.ab3@2263>   CLR.b declare
0001F940 <AmiBlitz3.ab3@2264>   CLR.l myoline                                          ;check
0001F946 <AmiBlitz3.ab3@2265>   CLR.l myline                                          ;check
0001F94C <AmiBlitz3.ab3@2266>   CLR.b newvariable
0001F952 <AmiBlitz3.ab3@2267>   CLR.b saved0
0001F958 <AmiBlitz3.ab3@2268>   CLR.l bsssize
0001F95E <AmiBlitz3.ab3@2269>   CLR.l chipsize
0001F964 <AmiBlitz3.ab3@2270>   CLR.b infunctioncode
0001F96A <AmiBlitz3.ab3@2271>   CLR.l errorcounter
0001F974 <AmiBlitz3.ab3@2272>   MOVE.l #-1,bssstart
0001F97E <AmiBlitz3.ab3@2273>   MOVE.l #-1,bssend
0001F988 <AmiBlitz3.ab3@2274>   MOVE.l #-1,chipstart
0001F992 <AmiBlitz3.ab3@2275>   MOVE.l #-1,chipend
0001F99A <AmiBlitz3.ab3@2276>   MOVE.w #0,bssmode
0001F9A0 <AmiBlitz3.ab3@2277>   CLR.w a2offset
0001F9A6 <AmiBlitz3.ab3@2278>   CLR.w fast
0001F9AC <AmiBlitz3.ab3@2279>   CLR.w fpu
0001F9B2 <AmiBlitz3.ab3@2280>   CLR.b iee
0001F9B8 <AmiBlitz3.ab3@2281>   CLR.w newsyntax
0001F9BC <AmiBlitz3.ab3@2282>   BSR.w JL_0_38A6
0001F9C2 <AmiBlitz3.ab3@2283>   JSR AJL_0_7962
0001F9C8 <AmiBlitz3.ab3@2284>   JSR frallvars
0001F9CE <AmiBlitz3.ab3@2285>   JSR fralltypes
0001F9D4 <AmiBlitz3.ab3@2286>   JSR freemacs
0001F9DA <AmiBlitz3.ab3@2287>   JSR clearfunctionlist
0001F9E0 <AmiBlitz3.ab3@2288>   TST.w pass
0001F9E6 <AmiBlitz3.ab3@2290>   JSR clearlabels
0001F9EC <AmiBlitz3.ab3@2291>   JSR clearhash
0001F9F2 <AmiBlitz3.ab3@2294>   LEA devo,a0
0001F9F6 <AmiBlitz3.ab3@2295>   MOVEM.l a0-a6/d0-d7,-(a7)
0001F9FC <AmiBlitz3.ab3@2296>   LEA ptr_parameterstore,a1
0001F9FE <AmiBlitz3.ab3@2299>     MOVE.b (a0)+,(a1)+
0001FA02 <AmiBlitz3.ab3@2300>   BNE 'l1b
0001FA04 <AmiBlitz3.ab3@2301>   MOVEQ #13,d2
0001FA0A <AmiBlitz3.ab3@2302>   JSR findlabel2
0001FA0E <AmiBlitz3.ab3@2303>   BNE 'd
0001FA12 <AmiBlitz3.ab3@2304>   CLR.l 8(a2)
0001FA16 <AmiBlitz3.ab3@2307>   MOVEM.l (a7)+,a0-a6/d0-d7
0001FA40 <AmiBlitz3.ab3@2308>   !basic
0001FAB4 <AmiBlitz3.ab3@2309>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0001FAD2 <AmiBlitz3.ab3@2310>   !asm
0001FAD8 <AmiBlitz3.ab3@2311>   CLR.b returncode
0001FADE <AmiBlitz3.ab3@2312> JMP freeprocvs
0001FAE4 <AmiBlitz3.ab3@2316>   MOVE.l #bssstore-labelhash,d0
0001FAE6 <AmiBlitz3.ab3@2317>   ASR.l #2,d0
0001FAEC <AmiBlitz3.ab3@2318>   LEA labelhash,a0
0001FAEE <AmiBlitz3.ab3@2321>     CLR.l (a0)+
0001FAF0 <AmiBlitz3.ab3@2322>     SUBQ.l #1,d0
0001FAF4 <AmiBlitz3.ab3@2323>   BNE.s 'l10
0001FAFA <AmiBlitz3.ab3@2325>   LEA labelbase,a1
0001FAFC <AmiBlitz3.ab3@2326>   MOVE.l (a1),d0
0001FB00 <AmiBlitz3.ab3@2327>   BEQ 'l11
0001FB02 <AmiBlitz3.ab3@2330>     MOVE.l d0,a1
0001FB06 <AmiBlitz3.ab3@2331>     TST.l 4(a1)
0001FB0A <AmiBlitz3.ab3@2332>     BEQ 'l29
0001FB0E <AmiBlitz3.ab3@2333>     LEA $13(a1),a0
0001FB10 <AmiBlitz3.ab3@2334>     MOVEQ #0,d0
0001FB12 <AmiBlitz3.ab3@2335>     MOVEQ #0,d1
0001FB14 <AmiBlitz3.ab3@2338>       MOVE.b (a0)+,d1
0001FB18 <AmiBlitz3.ab3@2339>       BEQ 'l12
0001FB1E <AmiBlitz3.ab3@2340>       !hashalgo
0001FB22 <AmiBlitz3.ab3@2341> BRA 'l13
0001FB28 <AmiBlitz3.ab3@2344>     LEA labelhash,a0
0001FB2E <AmiBlitz3.ab3@2345>     AND.l #hashsize,d0
0001FB30 <AmiBlitz3.ab3@2346>      ASL.l #2,d0
0001FB34 <AmiBlitz3.ab3@2347>     MOVE.l 0(a0,d0),d1                                     ;*4
0001FB38 <AmiBlitz3.ab3@2348>     MOVE.l d1,$c(a1)
0001FB3C <AmiBlitz3.ab3@2349>     MOVE.l a1,0(a0,d0)
0001FB3E <AmiBlitz3.ab3@2352>     MOVE.l (a1),d0
0001FB42 <AmiBlitz3.ab3@2353>   BNE 'l21
0001FB44 <AmiBlitz3.ab3@2356> RTS
0001FB4A <AmiBlitz3.ab3@2360>   MOVEA.l lastrestype,A0
0001FB4C <AmiBlitz3.ab3@2361>   MOVEA.l (A0),A2
0001FB4E <AmiBlitz3.ab3@2362>   CLR.l (A0)
0001FB54 <AmiBlitz3.ab3@2363> JMP freetypes
0001FB5A <AmiBlitz3.ab3@2367>   MOVEA.l varbase,A3
0001FB60 <AmiBlitz3.ab3@2368>   CLR.l varbase
0001FB64 <AmiBlitz3.ab3@2371>   CMPA.w #$0,A3
0001FB68 <AmiBlitz3.ab3@2372>   BEQ.w 'l20
0001FB6A <AmiBlitz3.ab3@2373>   MOVEA.l A3,A1
0001FB6C <AmiBlitz3.ab3@2374>   MOVEA.l (A3),A3
0001FB6E <AmiBlitz3.ab3@2375>   MOVEQ.l #$00,D0
0001FB72 <AmiBlitz3.ab3@2376>   MOVE.b $E+4(A1),D0
0001FB78 <AmiBlitz3.ab3@2377>   MOVEA.l _execbase,A6
0001FB7E <AmiBlitz3.ab3@2378>   MOVE.l mempool2,a0
0001FB82 <AmiBlitz3.ab3@2379>   JSR _FreePooled(A6)
0001FB86 <AmiBlitz3.ab3@2380> BRA.w 'l10
0001FB88 <AmiBlitz3.ab3@2383> RTS
0001FB8E <AmiBlitz3.ab3@2388>   LEA firstiff,A2
0001FB90 <AmiBlitz3.ab3@2389>   MOVEQ.l #$0E,D2
0001FB96 <AmiBlitz3.ab3@2390> JMP freeslist
0001FB98 <AmiBlitz3.ab3@2396> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0001FB9A <AmiBlitz3.ab3@2397> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0001FBA0 <AmiBlitz3.ab3@2401>   CLR.w inmacro
0001FBA6 <AmiBlitz3.ab3@2402>   ADDQ.l #1,globallinecount
0001FBAC <AmiBlitz3.ab3@2403>   CLR.b nostringopt
0001FBB0 <AmiBlitz3.ab3@2404>   BSR.w JL_0_3CA4
0001FBB6 <AmiBlitz3.ab3@2405>   CLR.w instringon
0001FBBC <AmiBlitz3.ab3@2408>   TST.w ininclude
0001FBC0 <AmiBlitz3.ab3@2409>   BEQ.w JL_0_39B0
0001FBC6 <AmiBlitz3.ab3@2410>   ADDQ.l #1,includeline
0001FBCC <AmiBlitz3.ab3@2411>     JSR ab3_WriteDebugFile
0001FBD2 <AmiBlitz3.ab3@2412>   JSR AJL_0_C09E
0001FBD6 <AmiBlitz3.ab3@2413>   BEQ.w JL_0_39B0
0001FBDC <AmiBlitz3.ab3@2414>   MOVE.w ininclude,D0
0001FBE0 <AmiBlitz3.ab3@2415>   CMP.w #$4,D0
0001FBE4 <AmiBlitz3.ab3@2416>   BCC.w JL_0_39AC
0001FBE6 <AmiBlitz3.ab3@2417>   ADD.w D0,D0
0001FBEC <AmiBlitz3.ab3@2418>   LEA progress_per_line,A0
0001FBF0 <AmiBlitz3.ab3@2419>   MOVE.w $0(A0,D0.W),D2
0001FBF4 <AmiBlitz3.ab3@2420>   CMP.w progressbar_width(PC),D2
0001FBF8 <AmiBlitz3.ab3@2421>   BCC.w JL_0_39AC
0001FBFC <AmiBlitz3.ab3@2422>   ADDQ.w #1,$0(A0,D0.W)
0001FBFE <AmiBlitz3.ab3@2423>   LSR.w #1,D0
0001FC00 <AmiBlitz3.ab3@2424>   MOVE.l d0,d1
0001FC02 <AmiBlitz3.ab3@2425>   EXT.l d1
0001FC04 <AmiBlitz3.ab3@2426>   MOVE.l d2,d0
0001FC06 <AmiBlitz3.ab3@2427>   EXT.l d0                                                 ;d0=x,d1=y
0001FC0C <AmiBlitz3.ab3@2429>   JSR update_progressbar
0001FC0E <AmiBlitz3.ab3@2432>   MOVEQ.l #-$01,D0
0001FC10 <AmiBlitz3.ab3@2433> RTS
0001FC16 <AmiBlitz3.ab3@2437>   MOVE.l titleat,D0
0001FC18 <AmiBlitz3.ab3@2438>   MOVEQ.l #$00,D1
0001FC1E <AmiBlitz3.ab3@2439>   MOVE.w progress_per_line,D1
0001FC20 <AmiBlitz3.ab3@2440>   ADD.l D1,D0
0001FC22 <AmiBlitz3.ab3@2441>   MOVE.l D0,D1
0001FC24 <AmiBlitz3.ab3@2442>   SWAP D0
0001FC2A <AmiBlitz3.ab3@2443>   CMP.w titleat,D0
0001FC2E <AmiBlitz3.ab3@2444>    BEQ.w JL_0_39E4
0001FC30 <AmiBlitz3.ab3@2448>   EXT.l d0
0001FC32 <AmiBlitz3.ab3@2449>   MOVE.l d1,-(a7)
0001FC3A <AmiBlitz3.ab3@2452>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
0001FC40 <AmiBlitz3.ab3@2453>   JSR update_progressbar
0001FC48 <AmiBlitz3.ab3@2454>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0001FC4A <AmiBlitz3.ab3@2458>   MOVE.l (a7)+,d1
0001FC50 <AmiBlitz3.ab3@2461>   MOVE.l D1,titleat
0001FC56 <AmiBlitz3.ab3@2462>   ADDQ.l #1,linenumat
0001FC5C <AmiBlitz3.ab3@2463>   CLR.w linedone
0001FC62 <AmiBlitz3.ab3@2464>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0001FC68 <AmiBlitz3.ab3@2466>   SUBQ.l #1,numlines2
0001FC6C <AmiBlitz3.ab3@2467>    BEQ.w JL_0_3A12
0001FC72 <AmiBlitz3.ab3@2468>   MOVEA.l sourceline,A0
0001FC74 <AmiBlitz3.ab3@2469>   MOVEA.l (A0),A0
0001FC7A <AmiBlitz3.ab3@2470>   MOVE.l A0,sourceline
0001FC7E <AmiBlitz3.ab3@2471>   LEA $9(A0),A5
0001FC80 <AmiBlitz3.ab3@2474> RTS
0001FC82 <AmiBlitz3.ab3@2478>   MOVE.w D0,-(A7)
0001FC84 <AmiBlitz3.ab3@2479>   MOVEQ.l #$03,D0
0001FC86 <AmiBlitz3.ab3@2482>     MOVE.w D1,D2
0001FC8A <AmiBlitz3.ab3@2483>     ANDI.w #$F,D2
0001FC8E <AmiBlitz3.ab3@2484>     ADDI.w #$30,D2
0001FC92 <AmiBlitz3.ab3@2485>     CMP.w #$3A,D2
0001FC96 <AmiBlitz3.ab3@2486>      BCS.w JL_0_3A2C
0001FC98 <AmiBlitz3.ab3@2487>     ADDQ.w #7,D2
0001FC9C <AmiBlitz3.ab3@2490>     MOVE.b D2,$0(A0,D0.W)
0001FC9E <AmiBlitz3.ab3@2491>     LSR.w #4,D1
0001FCA2 <AmiBlitz3.ab3@2492>   DBF D0,JL_0_3A18
0001FCA4 <AmiBlitz3.ab3@2494>   MOVE.w (A7)+,D0
0001FCA6 <AmiBlitz3.ab3@2495> RTS
0001FCAC <AmiBlitz3.ab3@2505>   MOVE.w skipcode,D1
0001FCB0 <AmiBlitz3.ab3@2506>   BNE.w JL_0_3A46
0001FCB2 <AmiBlitz3.ab3@2507> RTS
0001FCB4 <AmiBlitz3.ab3@2510>   MOVE.l A5,-(A7)
0001FCB6 <AmiBlitz3.ab3@2511>   MOVEQ.l #$3A,D1                                          ;':'
0001FCB8 <AmiBlitz3.ab3@2512>   MOVEQ.l #$21,D2                                          ;'!'
0001FCBA <AmiBlitz3.ab3@2513>   MOVEQ.l #$3B,D3                                          ;';'
0001FCBC <AmiBlitz3.ab3@2514>   MOVEQ.l #$22,D4                                          ;'"'
0001FCBE <AmiBlitz3.ab3@2517>   MOVE.b (A5)+,D0
0001FCC2 <AmiBlitz3.ab3@2518>    BEQ.w JL_0_3CA0
0001FCC6 <AmiBlitz3.ab3@2519>    BPL.w JL_0_3A60
0001FCC8 <AmiBlitz3.ab3@2520>   MOVE.b (A5)+,D0
0001FCCC <AmiBlitz3.ab3@2521> BRA.w JL_0_3A50
0001FCCE <AmiBlitz3.ab3@2524>   CMP.b D4,D0
0001FCD2 <AmiBlitz3.ab3@2525>    BNE.w JL_0_3A82
0001FCD4 <AmiBlitz3.ab3@2528>   MOVE.b (A5)+,D0
0001FCD8 <AmiBlitz3.ab3@2529>    BEQ.w notqerr
0001FCDC <AmiBlitz3.ab3@2535>   CMP.b #$22,D0
0001FCE0 <AmiBlitz3.ab3@2536>    BNE.w JL_0_3A66
0001FCE4 <AmiBlitz3.ab3@2537> BRA.w JL_0_3A50
0001FCE6 <AmiBlitz3.ab3@2540>   CMP.b D1,D0
0001FCEA <AmiBlitz3.ab3@2541>    BEQ.w JL_0_3CA0
0001FCEC <AmiBlitz3.ab3@2542>   CMP.b D3,D0
0001FCF0 <AmiBlitz3.ab3@2543>    BEQ.w JL_0_3CA0
0001FCF2 <AmiBlitz3.ab3@2546>   CMP.b D2,D0
0001FCF6 <AmiBlitz3.ab3@2547>    BNE.w JL_0_3A50
0001FCFE <AmiBlitz3.ab3@2548>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
0001FD00 <AmiBlitz3.ab3@2549>   MOVEA.l A5,A3
0001FD06 <AmiBlitz3.ab3@2550>    JSR getparameter2
0001FD0A <AmiBlitz3.ab3@2551>    BNE.w JL_0_3AAC
0001FD10 <AmiBlitz3.ab3@2552> JMP syntaxerr
0001FD1A <AmiBlitz3.ab3@2557>    MOVE.w oldqflag,instringon
0001FD20 <AmiBlitz3.ab3@2558>   MOVEA.l lastsourcepos,A5
0001FD26 <AmiBlitz3.ab3@2559>    JSR findmac                                             ;find macro
0001FD2A <AmiBlitz3.ab3@2560>    BEQ.w JL_0_3ABE
0001FD30 <AmiBlitz3.ab3@2561> JMP nomacerr
0001FD36 <AmiBlitz3.ab3@2564>   TST.b debugmode
0001FD3A <AmiBlitz3.ab3@2565>   BEQ 'sk1
0001FD3E <AmiBlitz3.ab3@2566>   MOVE.w #$4e71,d1
0001FD44 <AmiBlitz3.ab3@2567>   JSR writeword
0001FD46 <AmiBlitz3.ab3@2568>   MOVE.l a5,-(a7)
0001FD48 <AmiBlitz3.ab3@2569>   MOVE.l a3,a5
0001FD4A <AmiBlitz3.ab3@2570>   SUBQ.l #1,a5
0001FD52 <AmiBlitz3.ab3@2571>   MOVE.w #$0,inmacro
0001FD56 <AmiBlitz3.ab3@2572>   BSR debugstuffa
0001FD5E <AmiBlitz3.ab3@2573>   MOVE.w #$FFFF,inmacro
0001FD60 <AmiBlitz3.ab3@2574>   MOVE.l (a7)+,a5
0001FD64 <AmiBlitz3.ab3@2575>   MOVE.w #$4e71,d1
0001FD6A <AmiBlitz3.ab3@2576>   JSR writeword
0001FD6C <AmiBlitz3.ab3@2579>   MOVEA.l A5,A4
0001FD70 <AmiBlitz3.ab3@2582>    CMP.b #" ",(a4)+
0001FD74 <AmiBlitz3.ab3@2583>     BEQ 'l5a
0001FD76 <AmiBlitz3.ab3@2584>      SUBQ.l#1,a4
0001FD7A <AmiBlitz3.ab3@2585>      CMP.b #",",(a4)
0001FD7E <AmiBlitz3.ab3@2586>     BEQ JL_0_3AEA
0001FD80 <AmiBlitz3.ab3@2589>   MOVEQ.l #$00,D4
0001FD86 <AmiBlitz3.ab3@2590>   TST.b newsyntax
0001FD8A <AmiBlitz3.ab3@2591>   BEQ 'l10b
0001FD8E <AmiBlitz3.ab3@2592>   MOVEM.l a0/d0,-(a7)
0001FD92 <AmiBlitz3.ab3@2593>   MOVE.l 4(a2),a0
0001FD96 <AmiBlitz3.ab3@2594>   MOVE.w 8(a2),d0
0001FD9A <AmiBlitz3.ab3@2597>   CMP.b #"`",(a0)+
0001FD9E <AmiBlitz3.ab3@2598>   BEQ 'x1
0001FDA0 <AmiBlitz3.ab3@2599>   SUBQ.w #1,d0
0001FDA4 <AmiBlitz3.ab3@2600>   BNE 'x2
0001FDA8 <AmiBlitz3.ab3@2601> BRA 'x3
0001FDAC <AmiBlitz3.ab3@2604>   MOVEM.l (a7)+,a0/d0
0001FDB0 <AmiBlitz3.ab3@2605> BRA 'l10
0001FDB4 <AmiBlitz3.ab3@2608>   MOVEM.l (a7)+,a0/d0
0001FDB8 <AmiBlitz3.ab3@2609> BRA JL_0_3AEA
0001FDBC <AmiBlitz3.ab3@2612>   CMPI.b #"{",(A4)
0001FDC0 <AmiBlitz3.ab3@2613>    BNE.w JL_0_3AEA
0001FDC2 <AmiBlitz3.ab3@2617>   ADDQ.l #1,a4
0001FDC6 <AmiBlitz3.ab3@2620>     CMP.b #" ",(a4)
0001FDCA <AmiBlitz3.ab3@2621>     BEQ 'l5
0001FDCE <AmiBlitz3.ab3@2622>     MOVEM.l a0/d0,-(a7)
0001FDD4 <AmiBlitz3.ab3@2623>     CLR.b exmac
0001FDDA <AmiBlitz3.ab3@2624>     LEA chartab,a0
0001FDDC <AmiBlitz3.ab3@2625>     MOVEQ #0,d0
0001FDDE <AmiBlitz3.ab3@2626>     MOVE.b (a4),d0
0001FDE2 <AmiBlitz3.ab3@2627>     BMI 'm1
0001FDE6 <AmiBlitz3.ab3@2628>     TST.b 0(a0,d0)
0001FDEA <AmiBlitz3.ab3@2629>     BEQ 'm1
0001FDF0 <AmiBlitz3.ab3@2630>     TST.b newsyntax
0001FDF4 <AmiBlitz3.ab3@2631>     BEQ 'ns1
0001FDF8 <AmiBlitz3.ab3@2632>     CMP.b #"#",d0
0001FDFC <AmiBlitz3.ab3@2633>     BEQ 'm1
0001FE00 <AmiBlitz3.ab3@2634>     CMP.b #"$",d0
0001FE04 <AmiBlitz3.ab3@2635>     BEQ 'm1
0001FE08 <AmiBlitz3.ab3@2636>     CMP.b #"-",d0
0001FE0C <AmiBlitz3.ab3@2637>     BEQ 'm1
0001FE10 <AmiBlitz3.ab3@2640>   CMP.b #",",d0
0001FE14 <AmiBlitz3.ab3@2641>     BEQ 'm1
0001FE18 <AmiBlitz3.ab3@2642>     CMP.b #"{",d0
0001FE1C <AmiBlitz3.ab3@2643>     BNE 'm1b
0001FE1E <AmiBlitz3.ab3@2644>     ADDQ.l #1,a4
0001FE22 <AmiBlitz3.ab3@2645> BRA 'm1
0001FE28 <AmiBlitz3.ab3@2648>   TST.b newsyntax
0001FE2C <AmiBlitz3.ab3@2649>     BEQ 'm1
0001FE34 <AmiBlitz3.ab3@2650>     MOVE.b #1,exmac
0001FE38 <AmiBlitz3.ab3@2653>   MOVEM.l (a7)+,a0/d0
0001FE3E <AmiBlitz3.ab3@2654>     TST.b exmac
0001FE42 <AmiBlitz3.ab3@2655>     BNE JL_0_3AEA
0001FE44 <AmiBlitz3.ab3@2662>   TST.b (a4)
0001FE48 <AmiBlitz3.ab3@2663>   BEQ JL_0_3AEA
0001FE4E <AmiBlitz3.ab3@2666>   MOVEA.l ptr_macrobuffer_begin,A0
0001FE50 <AmiBlitz3.ab3@2669>   ADDQ.w #1,D4
0001FE52 <AmiBlitz3.ab3@2670>   MOVE.l A4,(A0)
0001FE56 <AmiBlitz3.ab3@2671>   CLR.w 4(a0)
0001FE5A <AmiBlitz3.ab3@2672>    BSR.w JL_0_3CC6
0001FE5C <AmiBlitz3.ab3@2674>   ADDQ.l #4,a0
0001FE5E <AmiBlitz3.ab3@2678>   SUBQ.w #1,(a0)+
0001FE62 <AmiBlitz3.ab3@2679>   CMP.b #$7D,D0
0001FE66 <AmiBlitz3.ab3@2680>   BEQ 'l10
0001FE68 <AmiBlitz3.ab3@2681>   TST.b d0
0001FE6C <AmiBlitz3.ab3@2682>   BEQ 'l10
0001FE70 <AmiBlitz3.ab3@2683> BRA JL_0_3AD0
0001FE76 <AmiBlitz3.ab3@2687>   CLR.l sourceline3
0001FE78 <AmiBlitz3.ab3@2688>   MOVEA.l A4,A5
0001FE7E <AmiBlitz3.ab3@2691>   MOVE.w D4,numarg
0001FE84 <AmiBlitz3.ab3@2698>   MOVE.l #$01,D1
0001FE8A <AmiBlitz3.ab3@2699>   MOVEA.l _execbase,A6
0001FE90 <AmiBlitz3.ab3@2700>   MOVE.l mempool,a0
0001FE96 <AmiBlitz3.ab3@2701>   MOVE.l macrobuffer_size,D0
0001FE9C <AmiBlitz3.ab3@2702>   CMP.l #40000,d0
0001FEA0 <AmiBlitz3.ab3@2703>   BGE 'l1m
0001FEA6 <AmiBlitz3.ab3@2704>   MOVE.l #40000,d0
0001FEAC <AmiBlitz3.ab3@2705>   MOVE.l d0,macrobuffer_size
0001FEB0 <AmiBlitz3.ab3@2708>   JSR _AllocPooled(a6)
0001FEBA <AmiBlitz3.ab3@2710>   MOVE.l myline,myoline
0001FEBC <AmiBlitz3.ab3@2713>   ADDQ.l #1,d0
0001FEC2 <AmiBlitz3.ab3@2714>   MOVE.l D0,myline
0001FEC4 <AmiBlitz3.ab3@2715>   MOVEA.l D0,A1
0001FECA <AmiBlitz3.ab3@2716>   MOVE.b #":",-1(a1)
0001FECC <AmiBlitz3.ab3@2717>   MOVEA.l A1,A6
0001FED2 <AmiBlitz3.ab3@2718>   ADDA.l macrobuffer_size,A6
0001FED4 <AmiBlitz3.ab3@2719>   MOVEA.l (A7)+,A0
0001FED6 <AmiBlitz3.ab3@2722>   CMPA.l A6,A1
0001FEDA <AmiBlitz3.ab3@2723>    BCC.w mbovererr
0001FEDC <AmiBlitz3.ab3@2724>   MOVE.b (A0)+,(a1)+
0001FEDE <AmiBlitz3.ab3@2725>   CMPA.l A3,A0
0001FEE2 <AmiBlitz3.ab3@2726>    BCS.w JL_0_3B1E
0001FEE4 <AmiBlitz3.ab3@2727>   SUBQ.w #1,A1
0001FEE8 <AmiBlitz3.ab3@2728>   MOVE.w $8(A2),D1
0001FEEC <AmiBlitz3.ab3@2729>    BEQ.w JL_0_3C70
0001FEF4 <AmiBlitz3.ab3@2730>   MOVE.w $A(A2),macnum
0001FEF8 <AmiBlitz3.ab3@2731>   ADDQ.w #1,$A(A2)
0001FEFC <AmiBlitz3.ab3@2732>   MOVEA.l $4(A2),A2
0001FEFE <AmiBlitz3.ab3@2733>   SUBQ.w #1,D1
0001FF04 <AmiBlitz3.ab3@2734>   CLR.b firstmline
0001FF06 <AmiBlitz3.ab3@2737>     MOVEQ.l #$00,D0
0001FF08 <AmiBlitz3.ab3@2738>     MOVE.b (A2)+,D0
0001FF0E <AmiBlitz3.ab3@2739>     TST.b firstmline
0001FF12 <AmiBlitz3.ab3@2740>     BNE 'c1
0001FF16 <AmiBlitz3.ab3@2741>     CMP.b #$22,d0
0001FF1A <AmiBlitz3.ab3@2742>     BNE 's1
0001FF22 <AmiBlitz3.ab3@2743>     MOVE.b #1,firstmline
0001FF26 <AmiBlitz3.ab3@2746>     CMP.b #":",d0
0001FF2A <AmiBlitz3.ab3@2747>     BNE 'm1
0001FF32 <AmiBlitz3.ab3@2748>     MOVE.b #1,firstmline
0001FF36 <AmiBlitz3.ab3@2751>     CMP.b #";",d0
0001FF3A <AmiBlitz3.ab3@2752>     BNE 'c1
0001FF3C <AmiBlitz3.ab3@2755>     SUBQ.w #1,d1                                           ;filter out comment
0001FF3E <AmiBlitz3.ab3@2756>     MOVE.b (a2)+,d0
0001FF44 <AmiBlitz3.ab3@2757>     CMP.w #":@",-1(a2)
0001FF48 <AmiBlitz3.ab3@2758>     BEQ 'c2
0001FF4A <AmiBlitz3.ab3@2759>     TST.w d1
0001FF4E <AmiBlitz3.ab3@2760>     BNE 'l1
0001FF52 <AmiBlitz3.ab3@2761>   BRA JL_0_3C6C
0001FF58 <AmiBlitz3.ab3@2764>     CMP.b #":",1(a2)
0001FF5C <AmiBlitz3.ab3@2765>       BNE 'l1
0001FF5E <AmiBlitz3.ab3@2766>       ADDQ #2,a2
0001FF60 <AmiBlitz3.ab3@2767>       SUBQ #3,d1
0001FF62 <AmiBlitz3.ab3@2768>       MOVE.b (a2)+,d0
0001FF6A <AmiBlitz3.ab3@2769>       MOVE.b #1,firstmline
0001FF6E <AmiBlitz3.ab3@2772>     CMP.b #"`",D0
0001FF72 <AmiBlitz3.ab3@2773>      BNE.w JL_0_3C56
0001FF74 <AmiBlitz3.ab3@2774>     SUBQ.w #1,D1
0001FF76 <AmiBlitz3.ab3@2775>     MOVE.b (A2)+,D0
0001FF7A <AmiBlitz3.ab3@2776>     CMP.w #$7B,D0
0001FF7E <AmiBlitz3.ab3@2777>      BEQ.w JL_0_3BB6
0001FF82 <AmiBlitz3.ab3@2778>     CMP.w #$40,D0
0001FF86 <AmiBlitz3.ab3@2779>      BNE.w JL_0_3B82
0001FF88 <AmiBlitz3.ab3@2780>     MOVEQ.l #$00,D2
0001FF8E <AmiBlitz3.ab3@2781>     MOVE.w macnum,D2
0001FF90 <AmiBlitz3.ab3@2782>     MOVEA.l A1,A0
0001FF92 <AmiBlitz3.ab3@2783>     MOVE.w D1,-(A7)
0001FF98 <AmiBlitz3.ab3@2784>      JSR makelong
0001FF9A <AmiBlitz3.ab3@2785>     MOVEA.l A0,A1
0001FF9C <AmiBlitz3.ab3@2786>     MOVE.w (A7)+,D1
0001FFA0 <AmiBlitz3.ab3@2787>   BRA.w JL_0_3C6C
0001FFA4 <AmiBlitz3.ab3@2790>     ORI.w #$20,D0
0001FFA8 <AmiBlitz3.ab3@2791>     CMP.w #$7A,D0
0001FFAC <AmiBlitz3.ab3@2792>      BCS.w JL_0_3B94
0001FFB2 <AmiBlitz3.ab3@2793>   JMP ilconsterr
0001FFB6 <AmiBlitz3.ab3@2796>     SUBI.w #$30,D0
0001FFBA <AmiBlitz3.ab3@2797>     CMP.w #$A,D0
0001FFBE <AmiBlitz3.ab3@2798>      BCS.w JL_0_3BF2
0001FFC2 <AmiBlitz3.ab3@2799>     SUBI.w #$27,D0
0001FFC6 <AmiBlitz3.ab3@2800>     CMP.w #$A,D0
0001FFCA <AmiBlitz3.ab3@2801>      BCC.w JL_0_3BB2
0001FFD0 <AmiBlitz3.ab3@2802>   JMP ilconsterr
0001FFD4 <AmiBlitz3.ab3@2805>   BRA.w JL_0_3BF2
0001FFD6 <AmiBlitz3.ab3@2808>     MOVE.l A5,-(A7)
0001FFDA <AmiBlitz3.ab3@2809>     MOVEM.l D1/A1-A2/A6,-(A7)
0001FFDC <AmiBlitz3.ab3@2810>     MOVEA.l A2,A5
0001FFE2 <AmiBlitz3.ab3@2811>      JSR AJL_0_BF6E
0001FFE6 <AmiBlitz3.ab3@2812>     CMP.w #$7D,D0
0001FFEA <AmiBlitz3.ab3@2813>      BEQ.w JL_0_3BD2
0001FFF0 <AmiBlitz3.ab3@2814>   JMP syntaxerr
0001FFF4 <AmiBlitz3.ab3@2817>     MOVEM.l (A7)+,D1/A1-A2/A6
0001FFF6 <AmiBlitz3.ab3@2818>     MOVE.l A5,D2
0001FFF8 <AmiBlitz3.ab3@2819>     SUB.l A2,D2
0001FFFA <AmiBlitz3.ab3@2820>     SUB.w D2,D1
0001FFFC <AmiBlitz3.ab3@2821>     MOVEA.l A5,A2
00020002 <AmiBlitz3.ab3@2822>     CLR.w instringon
00020004 <AmiBlitz3.ab3@2823>     MOVEA.l (A7)+,A5
00020006 <AmiBlitz3.ab3@2824>     MOVE.l D3,D0
0002000A <AmiBlitz3.ab3@2825>     BPL.w JL_0_3BF2
00020010 <AmiBlitz3.ab3@2826>   JMP ilconsterr
00020012 <AmiBlitz3.ab3@2829>     SUBQ.w #1,D0
00020016 <AmiBlitz3.ab3@2830>      BPL.w JL_0_3C20
0002001C <AmiBlitz3.ab3@2834>     MOVE.w numarg,D0
00020020 <AmiBlitz3.ab3@2835>     DIVU #$A,D0
00020024 <AmiBlitz3.ab3@2836>     ADDI.w #$30,D0
00020026 <AmiBlitz3.ab3@2837>     CMPA.l A6,A1
0002002A <AmiBlitz3.ab3@2838>      BCC.w mbovererr
0002002C <AmiBlitz3.ab3@2839>     MOVE.b D0,(A1)+
0002002E <AmiBlitz3.ab3@2840>     SWAP D0
00020032 <AmiBlitz3.ab3@2841>     ADDI.w #$30,D0
00020034 <AmiBlitz3.ab3@2842>     CMPA.l A6,A1
00020038 <AmiBlitz3.ab3@2843>      BCC.w mbovererr
0002003A <AmiBlitz3.ab3@2844>     MOVE.b D0,(A1)+
0002003E <AmiBlitz3.ab3@2845>   BRA.w JL_0_3C6C
00020044 <AmiBlitz3.ab3@2851>     CMP.w numarg,D0
00020048 <AmiBlitz3.ab3@2852>      BCC.w JL_0_3C6C
0002004A <AmiBlitz3.ab3@2853>     LSL.w #1,D0
0002004C <AmiBlitz3.ab3@2854>     MOVE.w D0,D4
0002004E <AmiBlitz3.ab3@2855>     LSL.w #1,D0
00020050 <AmiBlitz3.ab3@2856>     ADD.w D4,D0
00020056 <AmiBlitz3.ab3@2857>     MOVEA.l ptr_macrobuffer_begin,A0
00020058 <AmiBlitz3.ab3@2858>     ADDA.w D0,A0
0002005C <AmiBlitz3.ab3@2859>     MOVE.w $4(A0),D4
00020060 <AmiBlitz3.ab3@2860>      BEQ.w JL_0_3C6C
00020062 <AmiBlitz3.ab3@2861>     MOVEA.l (A0),A0
00020064 <AmiBlitz3.ab3@2862>     SUBQ.w #1,D4
00020066 <AmiBlitz3.ab3@2865>       CMPA.l A6,A1
0002006A <AmiBlitz3.ab3@2866>        BCC.w mbovererr
0002006E <AmiBlitz3.ab3@2867>       CMP.w #"@@",(a0)
00020072 <AmiBlitz3.ab3@2868>        BNE 'l10
00020078 <AmiBlitz3.ab3@2869>       TST.w ininclude
0002007C <AmiBlitz3.ab3@2870>        BNE errorjoin
00020082 <AmiBlitz3.ab3@2873>       MOVE.l sourceline,a0
00020084 <AmiBlitz3.ab3@2874>       MOVE.l (a0),a0
0002008A <AmiBlitz3.ab3@2875>       CMP.l #0,a0
0002008E <AmiBlitz3.ab3@2876>       BNE 'l11
00020090 <AmiBlitz3.ab3@2877>       MOVEQ #0,d0
00020096 <AmiBlitz3.ab3@2878>       JSR error
0002009C <AmiBlitz3.ab3@2881>       MOVE.l a0,sourceline
000200A2 <AmiBlitz3.ab3@2882>       ADDQ.l #1,linenumat
000200A6 <AmiBlitz3.ab3@2883>       LEA 9(a0),a0
000200A8 <AmiBlitz3.ab3@2884>       MOVE.l a0,-(a7)
000200AC <AmiBlitz3.ab3@2887>       CMP.b #" ",(a0)+
000200B0 <AmiBlitz3.ab3@2888>        BEQ 'l110
000200B6 <AmiBlitz3.ab3@2889>       CMP.b #";",-1(a0)
000200B8 <AmiBlitz3.ab3@2890>       MOVE.l (a7)+,a0
000200BC <AmiBlitz3.ab3@2891>        BEQ 'l111
000200BE <AmiBlitz3.ab3@2892>       SUBQ.l #1,d4
000200C0 <AmiBlitz3.ab3@2895>       MOVE.b (A0)+,(A1)+
000200C4 <AmiBlitz3.ab3@2896>     DBF D4,JL_0_3C46
000200C8 <AmiBlitz3.ab3@2898>   BRA.w JL_0_3C6C
000200CA <AmiBlitz3.ab3@2901>     CMPA.l A6,A1
000200CE <AmiBlitz3.ab3@2902>      BCC.w mbovererr
000200D0 <AmiBlitz3.ab3@2903>     MOVE.b D0,(A1)+
000200D4 <AmiBlitz3.ab3@2904>      BPL.w JL_0_3C6C
000200D6 <AmiBlitz3.ab3@2905>     CMPA.l A6,A1
000200DA <AmiBlitz3.ab3@2906>      BCC.w mbovererr
000200DC <AmiBlitz3.ab3@2907>     MOVE.b (A2)+,(A1)+
000200DE <AmiBlitz3.ab3@2908>     SUBQ.w #1,D1
000200E2 <AmiBlitz3.ab3@2911>   DBF D1,JL_0_3B48
000200E4 <AmiBlitz3.ab3@2921>   CMPA.l A6,A1
000200E8 <AmiBlitz3.ab3@2922>    BCC.w mbovererr
000200EA <AmiBlitz3.ab3@2923>   MOVE.b (A5)+,(A1)+
000200EE <AmiBlitz3.ab3@2924>    BNE.w JL_0_3C70
000200F4 <AmiBlitz3.ab3@2925>   MOVEA.l myline,A5
000200FA <AmiBlitz3.ab3@2926>   MOVE.l myoline,D0
000200FE <AmiBlitz3.ab3@2927>    BEQ.w JL_0_3C9C
00020100 <AmiBlitz3.ab3@2928>   SUBQ.l #1,d0
00020102 <AmiBlitz3.ab3@2929>   MOVEA.l D0,A1
00020108 <AmiBlitz3.ab3@2930>   MOVE.l macrobuffer_size,D0
0002010E <AmiBlitz3.ab3@2931>   MOVEA.l _execbase,A6
00020114 <AmiBlitz3.ab3@2932>   MOVE.l mempool,a0
00020118 <AmiBlitz3.ab3@2933>   JSR _FreePooled(A6)
0002011C <AmiBlitz3.ab3@2936> BRA.w JL_0_3A46
0002011E <AmiBlitz3.ab3@2939>   MOVEA.l (A7)+,A5
00020120 <AmiBlitz3.ab3@2940> RTS
00020126 <AmiBlitz3.ab3@2944>   MOVE.l myline,D0
0002012A <AmiBlitz3.ab3@2945>   BEQ.w JL_0_3CC4
0002012C <AmiBlitz3.ab3@2946>   SUBQ.l #1,d0
00020132 <AmiBlitz3.ab3@2947>   CLR.l myline
00020134 <AmiBlitz3.ab3@2948>   MOVEA.l D0,A1
0002013A <AmiBlitz3.ab3@2949>   MOVE.l macrobuffer_size,D0
00020140 <AmiBlitz3.ab3@2950>   MOVEA.l _execbase,A6
00020146 <AmiBlitz3.ab3@2951>   MOVE.l mempool,a0
0002014A <AmiBlitz3.ab3@2952> JMP _FreePooled(A6)
0002014C <AmiBlitz3.ab3@2955> RTS
0002014E <AmiBlitz3.ab3@2959>   MOVEQ.l #$00,D2
00020152 <AmiBlitz3.ab3@2962>   ADDQ.w #1,4(a0)
00020154 <AmiBlitz3.ab3@2963>    MOVE.b (A4)+,D0
00020158 <AmiBlitz3.ab3@2965>    BEQ exit1
0002015C <AmiBlitz3.ab3@2966>    BPL.w JL_0_3CD8
00020160 <AmiBlitz3.ab3@2967>   ADDQ.w #1,4(a0)
00020162 <AmiBlitz3.ab3@2968>   ADDQ.w #1,A4
00020166 <AmiBlitz3.ab3@2969> BRA.w JL_0_3CC8
0002016C <AmiBlitz3.ab3@2972>    TST.w instringon
00020170 <AmiBlitz3.ab3@2973>    BNE 'lnom
00020174 <AmiBlitz3.ab3@2974>    CMP.b #";",d0
00020178 <AmiBlitz3.ab3@2975>    BEQ exit2
0002017C <AmiBlitz3.ab3@2976>    CMP.b #":",d0
00020180 <AmiBlitz3.ab3@2977>    BEQ exit2
00020184 <AmiBlitz3.ab3@2980>   CMP.b #$22,D0
00020188 <AmiBlitz3.ab3@2981>    BNE.w JL_0_3CEA
0002018E <AmiBlitz3.ab3@2982>   NOT.w instringon
00020192 <AmiBlitz3.ab3@2983> BRA.w JL_0_3CC8
00020198 <AmiBlitz3.ab3@2987>   TST.w instringon
0002019C <AmiBlitz3.ab3@2988>    BNE.w JL_0_3CC8
000201A0 <AmiBlitz3.ab3@2989>    CMP.b #"@",d0
000201A4 <AmiBlitz3.ab3@2990>    BNE 'l10
000201A8 <AmiBlitz3.ab3@2991>    CMP.b #"@",(a4)
000201AC <AmiBlitz3.ab3@2992>    BNE 'l10
000201B2 <AmiBlitz3.ab3@2993>    TST.w ininclude
000201B6 <AmiBlitz3.ab3@2994>    BNE errorjoin
000201BC <AmiBlitz3.ab3@2995>    MOVE.l sourceline3,a4
000201C2 <AmiBlitz3.ab3@2996>    CMP.l #0,a4
000201C6 <AmiBlitz3.ab3@2997>    BNE 'l11
000201CC <AmiBlitz3.ab3@2998>    MOVE.l sourceline,a4
000201CE <AmiBlitz3.ab3@3001>   MOVE.l (a4),a4
000201D4 <AmiBlitz3.ab3@3002>       CMP.l #0,a4
000201D8 <AmiBlitz3.ab3@3003>       BNE 'l12
000201DA <AmiBlitz3.ab3@3004>       MOVEQ #0,d0
000201E0 <AmiBlitz3.ab3@3005>       JSR error
000201E6 <AmiBlitz3.ab3@3008>    MOVE.l a4,sourceline3
000201EA <AmiBlitz3.ab3@3009>    LEA 9(a4),a4
000201EC <AmiBlitz3.ab3@3010>    MOVEQ #",",d0
000201F0 <AmiBlitz3.ab3@3013>   CMP.b #$2C,D0
000201F4 <AmiBlitz3.ab3@3014>    BNE.w JL_0_3D06
000201F6 <AmiBlitz3.ab3@3015>   TST.w D2
000201FA <AmiBlitz3.ab3@3016>    BEQ.w JL_0_3D30
000201FE <AmiBlitz3.ab3@3017> BRA.w JL_0_3CC8
00020202 <AmiBlitz3.ab3@3021>    CMP.b #$7B,D0                                           ;"{"
00020206 <AmiBlitz3.ab3@3022>    BEQ.w 'l10
0002020A <AmiBlitz3.ab3@3023>   CMP.b #$28,D0                                            ;"("
0002020E <AmiBlitz3.ab3@3026>    BNE.w JL_0_3D14
00020210 <AmiBlitz3.ab3@3027>   ADDQ.w #1,D2
00020214 <AmiBlitz3.ab3@3028> BRA.w JL_0_3CC8
00020218 <AmiBlitz3.ab3@3031>   CMP.b #$7D,D0                                           ;"}"
0002021C <AmiBlitz3.ab3@3032>    BNE.w JL_0_3D22
0002021E <AmiBlitz3.ab3@3033>  TST.w D2
00020222 <AmiBlitz3.ab3@3034>    BEQ.w JL_0_3D30
00020226 <AmiBlitz3.ab3@3038>    CMP.b #$7D,D0                                           ;"}"
0002022A <AmiBlitz3.ab3@3039>    BEQ.w 'l10
0002022E <AmiBlitz3.ab3@3040>   CMP.b #$29,D0                                            ;")"
00020232 <AmiBlitz3.ab3@3043>    BNE.w JL_0_3CC8
00020234 <AmiBlitz3.ab3@3044>   SUBQ.w #1,D2
00020238 <AmiBlitz3.ab3@3045> BRA.w JL_0_3CC8
0002023A <AmiBlitz3.ab3@3048> RTS
0002023C <AmiBlitz3.ab3@3052>       SUBQ.l #1,a4
00020242 <AmiBlitz3.ab3@3053>       CLR.l sourceline3
00020244 <AmiBlitz3.ab3@3054> RTS
00020246 <AmiBlitz3.ab3@3058>       MOVEQ #0,d0
00020248 <AmiBlitz3.ab3@3059>       SUBQ.l #1,a4
0002024E <AmiBlitz3.ab3@3060>       CLR.l sourceline3
00020250 <AmiBlitz3.ab3@3061> RTS
00020254 <AmiBlitz3.ab3@3065>   CMP.b #$7B,D0                                            ;"{"
00020258 <AmiBlitz3.ab3@3066>   BEQ.w JL_0_3D3E
0002025C <AmiBlitz3.ab3@3067>   CMP.b #$28,D0                                            ;"("
0002025E <AmiBlitz3.ab3@3070> RTS
00020262 <AmiBlitz3.ab3@3074>   CMP.b #$7D,D0                                            ;"}"
00020266 <AmiBlitz3.ab3@3075>   BEQ.w JL_0_3D4C
0002026A <AmiBlitz3.ab3@3076>   CMP.b #$29,D0                                            ;")"
0002026C <AmiBlitz3.ab3@3079> RTS
0002026E <AmiBlitz3.ab3@3083> stopit:     Ds.w 1
00020270 <AmiBlitz3.ab3@3084> clrreq:     Ds.w 1
00020274 <AmiBlitz3.ab3@3105>   MOVE.w clrreq(PC),D0
00020278 <AmiBlitz3.ab3@3106>    BEQ.w close_compilewin__skip
000202AA <AmiBlitz3.ab3@3108> 
000202B0 <AmiBlitz3.ab3@3110>   LEA clrreq,a0
000202B2 <AmiBlitz3.ab3@3111>   NOT.w (a0)                                               ;reass
000202B8 <AmiBlitz3.ab3@3112>   MOVEA.l ptr_ThisTask,A0
000202BC <AmiBlitz3.ab3@3113>   CLR.l $1E(A0)
000202C0 <AmiBlitz3.ab3@3114>   CLR.l $2A(A0)
000202C2 <AmiBlitz3.ab3@3117> RTS
000202C4 <AmiBlitz3.ab3@3120> intsused:  Ds.w 1
000202CC <AmiBlitz3.ab3@3124>   MOVE.w #-1,blitzoff
000202D2 <AmiBlitz3.ab3@3125>   CLR.w intsused
000202D8 <AmiBlitz3.ab3@3126>   CLR.w anyerrs
000202DE <AmiBlitz3.ab3@3127>   CLR.w blitzmode
000202E4 <AmiBlitz3.ab3@3128>   CLR.w dontwrite                                              ;nomemleft
000202EA <AmiBlitz3.ab3@3129>   CLR.w constmode
000202F0 <AmiBlitz3.ab3@3130>   CLR.w cmake
000202F6 <AmiBlitz3.ab3@3131>   CLR.w cfetchmode
000202FC <AmiBlitz3.ab3@3132>   CLR.l intdata1
00020302 <AmiBlitz3.ab3@3133>   CLR.w fuckpos
00020308 <AmiBlitz3.ab3@3134>   CLR.w procnum
0002030E <AmiBlitz3.ab3@3135>   CLR.w procnum2
00020314 <AmiBlitz3.ab3@3136>   CLR.w dfetch
0002031A <AmiBlitz3.ab3@3137>   CLR.l titleat
00020320 <AmiBlitz3.ab3@3138>   CLR.b usedpath
00020326 <AmiBlitz3.ab3@3139>   CLR.b path2
0002032C <AmiBlitz3.ab3@3140>   CLR.w inerr
00020332 <AmiBlitz3.ab3@3141>   CLR.w intlevel
00020338 <AmiBlitz3.ab3@3142>   CLR.l cont_pc
0002033E <AmiBlitz3.ab3@3143>   CLR.l cont_pc2
00020344 <AmiBlitz3.ab3@3144>   CLR.l lastcontlink
0002034E <AmiBlitz3.ab3@3145>   MOVE.l destbufferstart,destpointer
00020358 <AmiBlitz3.ab3@3146>   MOVE.l destbufferstart,bigpc
00020362 <AmiBlitz3.ab3@3147>   MOVE.l destbufferend,libend
0002036C <AmiBlitz3.ab3@3148>   MOVE.l data1start,data1
00020376 <AmiBlitz3.ab3@3149>   MOVE.l data2at,data2
0002037E <AmiBlitz3.ab3@3150>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00020386 <AmiBlitz3.ab3@3151>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
0002038C <AmiBlitz3.ab3@3152>   CLR.w oldvcodelen
00020392 <AmiBlitz3.ab3@3153>   CLR.b lastgloballabel                                    ;lastbiglab org source
00020394 <AmiBlitz3.ab3@3154> RTS
00020396 <AmiBlitz3.ab3@3157> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
0002039C <AmiBlitz3.ab3@3161>   LEA  clrreq,a1
000203A0 <AmiBlitz3.ab3@3162>   MOVE.w #2000,(a1)
000203CA <AmiBlitz3.ab3@3163>   !basic
000203E0 <AmiBlitz3.ab3@3164> 
00020430 <AmiBlitz3.ab3@3165>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00020438 <AmiBlitz3.ab3@3166>   calcpro.l      = 0
00020440 <AmiBlitz3.ab3@3167>   calcpro_old.l  = 0
0002044C <AmiBlitz3.ab3@3168>   typ_old.l      = -1
00020458 <AmiBlitz3.ab3@3169>   pass_old.l     = -1
0002045E <AmiBlitz3.ab3@3170>   update_comstatus_gui.b = True ; for the first
00020498 <AmiBlitz3.ab3@3172>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
000204D2 <AmiBlitz3.ab3@3173>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
000204F0 <AmiBlitz3.ab3@3174>   !asm
00020522 <AmiBlitz3.ab3@3175> 
00020528 <AmiBlitz3.ab3@3177>   CLR.w stopit
0002052A <AmiBlitz3.ab3@3178> RTS
00020530 <AmiBlitz3.ab3@3182>   CLR.w storedebugmode
00020536 <AmiBlitz3.ab3@3183>   CLR.b iserror
0002053A <AmiBlitz3.ab3@3184>   BSR.w compilerequester
00020544 <AmiBlitz3.ab3@3186>   MOVE.l #0,globallinecount
0002054A <AmiBlitz3.ab3@3187>   JSR check_of_same_source
0002054E <AmiBlitz3.ab3@3188>   BSR.w call_setpointerbusy
00020552 <AmiBlitz3.ab3@3189>   BSR.w setcvars
0002055A <AmiBlitz3.ab3@3190>   MOVE.w #$8000,globalvarpointer
00020564 <AmiBlitz3.ab3@3191>   MOVE.l #newtype_quick,defaulttype
0002056A <AmiBlitz3.ab3@3192>   MOVE.l A7,passstack
00020574 <AmiBlitz3.ab3@3193>   MOVE.l #firstitem_,sourceline
0002057E <AmiBlitz3.ab3@3194>   MOVE.w numlines_org,linesleft
00020588 <AmiBlitz3.ab3@3195>   MOVE.l numlines,numlines2
0002058E <AmiBlitz3.ab3@3196>   ADDQ.w #1,linesleft
00020594 <AmiBlitz3.ab3@3197>   ADDQ.l #1,numlines2
0002059E <AmiBlitz3.ab3@3198>   MOVE.l #-1,linenumat
000205A2 <AmiBlitz3.ab3@3199>   BSR.w resetlibs
000205A6 <AmiBlitz3.ab3@3200>   BSR.w Aclearallvars
000205AC <AmiBlitz3.ab3@3201>   LEA progress_per_line+2,A0
000205AE <AmiBlitz3.ab3@3202>   MOVEQ.l #$03,D0
000205B0 <AmiBlitz3.ab3@3205>     CLR.w (A0)+
000205B4 <AmiBlitz3.ab3@3206>   DBF D0,JL_0_40EC
000205BA <AmiBlitz3.ab3@3209>   LEA _include,a0
000205BE <AmiBlitz3.ab3@3210>   MOVEM.l a0-a6/d0-d7,-(a7)
000205C4 <AmiBlitz3.ab3@3211>   LEA ptr_parameterstore,a1
000205C6 <AmiBlitz3.ab3@3214>     MOVE.b (a0)+,(a1)+
000205CA <AmiBlitz3.ab3@3215>   BNE 'l1b
000205CC <AmiBlitz3.ab3@3217>   MOVEQ #9,d2
000205D2 <AmiBlitz3.ab3@3218>   JSR findlabel2
000205D6 <AmiBlitz3.ab3@3219>   BNE 'd
000205DE <AmiBlitz3.ab3@3220>   MOVE.l #0,8(a2)
000205E2 <AmiBlitz3.ab3@3221>   MOVEM.l (a7)+,a0-a6/d0-d7
000205E6 <AmiBlitz3.ab3@3222> BRA 'd2
000205EC <AmiBlitz3.ab3@3225>   JSR addlabelhash
000205F4 <AmiBlitz3.ab3@3226>   MOVE.l #$1,$4(A2)
000205FC <AmiBlitz3.ab3@3227>   MOVE.l #0,8(a2)
00020600 <AmiBlitz3.ab3@3228>   MOVEM.l (a7)+,a0-a6/d0-d7
00020606 <AmiBlitz3.ab3@3231>   LEA _debug,a0
0002060A <AmiBlitz3.ab3@3232>   MOVEM.l a0-a6/d0-d7,-(a7)
00020610 <AmiBlitz3.ab3@3233>   LEA ptr_parameterstore,a1
00020612 <AmiBlitz3.ab3@3236>     MOVE.b (a0)+,(a1)+
00020616 <AmiBlitz3.ab3@3237>   BNE 'l9b
00020618 <AmiBlitz3.ab3@3239>   MOVEQ #7,d2
0002061E <AmiBlitz3.ab3@3240>   JSR findlabel2
00020622 <AmiBlitz3.ab3@3241>   BNE 'd9
00020626 <AmiBlitz3.ab3@3242>   MOVE.b debugmode(PC),D0
00020628 <AmiBlitz3.ab3@3243>   EXT.w d0
0002062A <AmiBlitz3.ab3@3244>   EXT.l d0
0002062E <AmiBlitz3.ab3@3245>   MOVE.l d0,8(a2)
00020632 <AmiBlitz3.ab3@3246>   MOVEM.l (a7)+,a0-a6/d0-d7
00020636 <AmiBlitz3.ab3@3247> BRA 'd9b
0002063C <AmiBlitz3.ab3@3250>   JSR addlabelhash
00020644 <AmiBlitz3.ab3@3251>   MOVE.l #$1,$4(A2)
00020648 <AmiBlitz3.ab3@3252>   MOVE.b debugmode(PC),D0
0002064A <AmiBlitz3.ab3@3253>   EXT.w d0
0002064C <AmiBlitz3.ab3@3254>   EXT.l d0
00020650 <AmiBlitz3.ab3@3255>   MOVE.l d0,8(a2)
00020654 <AmiBlitz3.ab3@3256>   MOVEM.l (a7)+,a0-a6/d0-d7
0002065A <AmiBlitz3.ab3@3259>   MOVE.l #firstitem_,a0
0002065C <AmiBlitz3.ab3@3260>   MOVE.l (a0),a0
00020660 <AmiBlitz3.ab3@3261>   LEA 9(a0),a0
00020668 <AmiBlitz3.ab3@3262>   MOVE.w #0,exdebug
0002066E <AmiBlitz3.ab3@3263>   TST.b debugmode
00020672 <AmiBlitz3.ab3@3264>    BEQ 'l10
00020674 <AmiBlitz3.ab3@3267>   MOVE.b (a0)+,d0
00020678 <AmiBlitz3.ab3@3268>    BEQ 'l10
0002067C <AmiBlitz3.ab3@3269>   CMP.b #$20,d0
00020680 <AmiBlitz3.ab3@3270>    BEQ 'l2
00020682 <AmiBlitz3.ab3@3271>   SUBQ.l #1,a0
00020688 <AmiBlitz3.ab3@3272>   CMP.l #"DEBU",(a0)
0002068C <AmiBlitz3.ab3@3273>    BNE 'l10
00020692 <AmiBlitz3.ab3@3274>   CMP.b #"G",4(a0)
00020696 <AmiBlitz3.ab3@3275>    BNE 'l10
0002069E <AmiBlitz3.ab3@3276>   MOVE.w #$0,debugversion
000206A6 <AmiBlitz3.ab3@3277>   MOVE.b #1,exdebug
000206AC <AmiBlitz3.ab3@3280>   LEA nops4,A0
000206B2 <AmiBlitz3.ab3@3281>   LEA dataget,A1
000206B8 <AmiBlitz3.ab3@3282>   JSR pokecode2                                            ;write intro nops
000206BE <AmiBlitz3.ab3@3283>   MOVE.l #$01010101,d1
000206C4 <AmiBlitz3.ab3@3284>   JSR writedatalong                                        ;for the 4 tempregs
000206CA <AmiBlitz3.ab3@3285>   JSR writedatalong
000206D0 <AmiBlitz3.ab3@3286>   JSR writedatalong
000206D6 <AmiBlitz3.ab3@3287>   JSR writedatalong
000206DC <AmiBlitz3.ab3@3288>   TST.b saved0
000206E0 <AmiBlitz3.ab3@3289>    BEQ 'l1
000206E6 <AmiBlitz3.ab3@3290>   MOVE.l #$4e714e71,d1
000206EC <AmiBlitz3.ab3@3291>   JSR writelong                                            ;add 2 nops
000206F2 <AmiBlitz3.ab3@3292>   MOVE.l #$4e714e71,d1
000206F8 <AmiBlitz3.ab3@3293>   JSR writelong                                            ;add 2 nops
000206FE <AmiBlitz3.ab3@3294>   MOVE.l #$4e714e71,d1
00020704 <AmiBlitz3.ab3@3295>   JSR writelong                                            ;add 2 nops
0002070A <AmiBlitz3.ab3@3296>    MOVE.l #$4e714e71,d1
00020710 <AmiBlitz3.ab3@3297>   JSR writelong                                            ;add 2 nops
00020714 <AmiBlitz3.ab3@3300>   MOVE.b debugmode(PC),D1
00020718 <AmiBlitz3.ab3@3301>    BEQ.b JL_0_4132
00020722 <AmiBlitz3.ab3@3302>   MOVE.b debugmode,storedebugmode
00020726 <AmiBlitz3.ab3@3303>   MOVE.w #$FFDC,D1
0002072A <AmiBlitz3.ab3@3304>    BSR.w uselib
00020730 <AmiBlitz3.ab3@3305>   TST.w debugversion                                       ;make a version for debugger
00020734 <AmiBlitz3.ab3@3306>    BNE.b JL_0_412A
00020738 <AmiBlitz3.ab3@3310>   MOVE.w #$FA3C,D1
0002073C <AmiBlitz3.ab3@3311>    BSR.w uselib
00020740 <AmiBlitz3.ab3@3312>   MOVE.w #$0001,D1
00020744 <AmiBlitz3.ab3@3313>    BSR.w uselib
00020748 <AmiBlitz3.ab3@3314> BRA.b JL_0_4132
0002074C <AmiBlitz3.ab3@3317>   MOVE.w #$FA32,D1
00020750 <AmiBlitz3.ab3@3318>   BSR.w uselib
00020754 <AmiBlitz3.ab3@3321>   BSR.w nextline
0002075A <AmiBlitz3.ab3@3322>   CLR.l linenum
00020760 <AmiBlitz3.ab3@3323>   CLR.l stacktrack
00020766 <AmiBlitz3.ab3@3326>   ADDQ.l #1,linenum
00020770 <AmiBlitz3.ab3@3327>   MOVE.l destpointer,destpointer2
00020776 <AmiBlitz3.ab3@3328>   MOVE.l a5,sourceline2
0002077A <AmiBlitz3.ab3@3329>   BSR.w compile_line                                        ;compile pass
0002077E <AmiBlitz3.ab3@3332>   BSR.w nextline
00020782 <AmiBlitz3.ab3@3333>    BNE.w JL_0_4136
00020786 <AmiBlitz3.ab3@3334>   BSR.w JUMP_do_runerrson
0002078A <AmiBlitz3.ab3@3335>   BSR.w pointchk
00020790 <AmiBlitz3.ab3@3336>   TST.b objectcount
00020794 <AmiBlitz3.ab3@3337>    BNE macenderr
0002079A <AmiBlitz3.ab3@3338>   CLR.l linenumat
0002079E <AmiBlitz3.ab3@3339>   BSR.w errchx2
000207A8 <AmiBlitz3.ab3@3340>   CMP.l #-1,bssend
000207AC <AmiBlitz3.ab3@3341>    BNE 'l30
000207B6 <AmiBlitz3.ab3@3342>   MOVE.l destpointer,bssend                                ;compile end
000207BC <AmiBlitz3.ab3@3345>   MOVE.l destpointer,d0
000207C6 <AmiBlitz3.ab3@3346>   CMP.l #-1,bssstart
000207CA <AmiBlitz3.ab3@3347>   BNE 'lnf6
000207D4 <AmiBlitz3.ab3@3348>   CMP.l #-1,chipstart
000207D8 <AmiBlitz3.ab3@3349>   BNE 'lnf6
000207DC <AmiBlitz3.ab3@3350> BRA 'leven4
000207E2 <AmiBlitz3.ab3@3353>   MOVE.l destpointer,d1
000207E4 <AmiBlitz3.ab3@3354>   ADDQ.l #3,d1
000207EA <AmiBlitz3.ab3@3355>   AND.l #$fffffffc,d1                                      ;bug ?
000207F0 <AmiBlitz3.ab3@3356>   MOVE.l d1,destpointer
000207FA <AmiBlitz3.ab3@3359>   MOVE.l destpointer,codeend
00020804 <AmiBlitz3.ab3@3360>   CMP.l #-1,chipend
00020808 <AmiBlitz3.ab3@3361>   BNE 'l31
00020812 <AmiBlitz3.ab3@3362>   MOVE.l destpointer,chipend
00020818 <AmiBlitz3.ab3@3365>   MOVE.l destpointer,d1
0002081A <AmiBlitz3.ab3@3366>   ADDQ.l #1,d1
00020820 <AmiBlitz3.ab3@3367>   AND.l #$fffffffe,d1                                     ;new evenexit
00020826 <AmiBlitz3.ab3@3368>   MOVE.l d1,destpointer
0002082A <AmiBlitz3.ab3@3369>   MOVE.b debugmode(PC),D1
0002082E <AmiBlitz3.ab3@3370>    BEQ.b JL_0_4180
00020832 <AmiBlitz3.ab3@3371>    BSR.w debugstuff
00020836 <AmiBlitz3.ab3@3372>   MOVE.w #$C300,D1
0002083C <AmiBlitz3.ab3@3373>    JSR Atokejsr
00020840 <AmiBlitz3.ab3@3374>    BSR.w debugstuff
00020844 <AmiBlitz3.ab3@3375>   MOVE.l eopcode(PC),D1
0002084A <AmiBlitz3.ab3@3376>    JSR writelong
0002084E <AmiBlitz3.ab3@3377>   MOVE.l lastcontlink(PC),D1
00020852 <AmiBlitz3.ab3@3378>    BEQ.b JL_0_4180
00020854 <AmiBlitz3.ab3@3379>   MOVEA.l D1,A0
00020858 <AmiBlitz3.ab3@3380>   CLR.w $6(A0)
00020862 <AmiBlitz3.ab3@3386>   MOVE.l destpointer,endop                                ;where end goes...
00020868 <AmiBlitz3.ab3@3388>   TST.w blitzmode
0002086C <AmiBlitz3.ab3@3389>   BEQ.w JL_0_4198
00020870 <AmiBlitz3.ab3@3390>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00020876 <AmiBlitz3.ab3@3393>   TST.w intsused
0002087A <AmiBlitz3.ab3@3394>   BEQ.b JL_0_41AA
0002087E <AmiBlitz3.ab3@3395>   MOVE.w #$C105,D1                                        ;interupts off!
00020884 <AmiBlitz3.ab3@3396>   JSR tokejsr2
00020888 <AmiBlitz3.ab3@3399>   BSR.w calcstatic
0002088E <AmiBlitz3.ab3@3400>   MOVE.w D4,numstatic
00020894 <AmiBlitz3.ab3@3401>   MOVE.l D3,staticdata
00020898 <AmiBlitz3.ab3@3402>    BSR.w calcmaxs
0002089E <AmiBlitz3.ab3@3404>   TST.l tokeslist
000208A2 <AmiBlitz3.ab3@3405>    BEQ.b JL_0_41F8
000208A8 <AmiBlitz3.ab3@3406>   MOVE.w gotocode,D1                                       ;jmp!
000208AE <AmiBlitz3.ab3@3407>    JSR writeword
000208B8 <AmiBlitz3.ab3@3408>   MOVE.l destpointer,endjmpat
000208BC <AmiBlitz3.ab3@3409>    BSR.w addoff
000208C2 <AmiBlitz3.ab3@3410>    JSR writelong                                           
000208C6 <AmiBlitz3.ab3@3412>    BSR.w JL_0_6C76                                         ;has to be done before finits!
000208CC <AmiBlitz3.ab3@3416>   TST.w dontwrite
000208D0 <AmiBlitz3.ab3@3417>    BNE.b JL_0_41F8
000208D4 <AmiBlitz3.ab3@3418>   MOVEA.l endjmpat(PC),A4
000208DA <AmiBlitz3.ab3@3419>   MOVE.l destpointer,(A4)
000208E0 <AmiBlitz3.ab3@3422>   TST.b returncode
000208E4 <AmiBlitz3.ab3@3423>   BEQ 'l2
000208E8 <AmiBlitz3.ab3@3424>   MOVE.w #$2e80,d1
000208EE <AmiBlitz3.ab3@3425>   JSR writeword
000208F4 <AmiBlitz3.ab3@3428>   JSR JL_0_B98A
000208FA <AmiBlitz3.ab3@3429>   TST.b returncode
000208FE <AmiBlitz3.ab3@3430>   BEQ 'l3
00020902 <AmiBlitz3.ab3@3431>   MOVE.w #$4e75,d1
00020908 <AmiBlitz3.ab3@3432>   JSR writeword
0002090C <AmiBlitz3.ab3@3433> BRA 'l1
00020912 <AmiBlitz3.ab3@3436>   MOVE.l #$70004E75,D1
00020918 <AmiBlitz3.ab3@3437>   JSR writelong                                            ;write moveq #0,d0:rts
0002091E <AmiBlitz3.ab3@3440>   JSR JL_0_B73E
00020922 <AmiBlitz3.ab3@3441>   BSR.w asmfixer
00020926 <AmiBlitz3.ab3@3442>   BSR.w close_compilewin
0002092A <AmiBlitz3.ab3@3443> BRA.w call_setpointernormal
00020930 <AmiBlitz3.ab3@3447> JMP do_runerrson
00020932 <AmiBlitz3.ab3@3451> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00020934 <AmiBlitz3.ab3@3452>             Dc.b $4E,$40                                   ;TRAP  #00
00020938 <AmiBlitz3.ab3@3454> endjmpat:   Ds.l 1
0002093E <AmiBlitz3.ab3@3458>   MOVEA.l newtype_string,A2
00020944 <AmiBlitz3.ab3@3459>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00020948 <AmiBlitz3.ab3@3462>     CMPA.w #$0,A2
0002094C <AmiBlitz3.ab3@3463>      BEQ.w pointchk_done
00020950 <AmiBlitz3.ab3@3464>     CMP.l $4(A2),D0
00020954 <AmiBlitz3.ab3@3465>      BNE.w pointchk_next
0002095C <AmiBlitz3.ab3@3466>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00020960 <AmiBlitz3.ab3@3467> BRA.w notypeerr
00020962 <AmiBlitz3.ab3@3470>     MOVEA.l (A2),A2
00020966 <AmiBlitz3.ab3@3471> BRA.w pointchk_loop
00020968 <AmiBlitz3.ab3@3474> RTS
0002096E <AmiBlitz3.ab3@3478>   LEA labelbase,A2
00020970 <AmiBlitz3.ab3@3482>   MOVE.l (A2),D0                                           ;testlabels
00020974 <AmiBlitz3.ab3@3483>    BEQ.w errchx2_done
00020976 <AmiBlitz3.ab3@3484>   MOVEA.l D0,A2
0002097A <AmiBlitz3.ab3@3485>   MOVE.l $4(A2),D0
0002097E <AmiBlitz3.ab3@3486>   BTST #$0,D0
00020982 <AmiBlitz3.ab3@3487>    BNE.w errchx2_loop
00020986 <AmiBlitz3.ab3@3488>   MOVE.l $8(A2),D0
0002098A <AmiBlitz3.ab3@3489>    BNE.w errchx2_loop
00020992 <AmiBlitz3.ab3@3490>   MOVE.w $10(A2),linenumat+2
00020994 <AmiBlitz3.ab3@3491>   MOVEQ #0,d0
00020998 <AmiBlitz3.ab3@3492>   MOVE.b $12(a2),d0
000209A0 <AmiBlitz3.ab3@3493>   MOVE.w 0(a2,d0),linenumat
000209A6 <AmiBlitz3.ab3@3494> JMP nolaberr                                               ;label not found
000209AC <AmiBlitz3.ab3@3497>   MOVE.l concomsp,D0
000209B2 <AmiBlitz3.ab3@3498>   CMP.l #concomstack,D0
000209B6 <AmiBlitz3.ab3@3499>    BNE.w chxerr4
000209BC <AmiBlitz3.ab3@3500>   MOVE.w connest,D1
000209C0 <AmiBlitz3.ab3@3501>    BNE.w chxerr4
000209C2 <AmiBlitz3.ab3@3504>   MOVE.l D1,-(A7)
000209C8 <AmiBlitz3.ab3@3505>   MOVE.l firstsel,D1
000209CC <AmiBlitz3.ab3@3506>    BNE.w errchx_err1
000209D2 <AmiBlitz3.ab3@3507>   MOVE.l firstrep,D1
000209D6 <AmiBlitz3.ab3@3508>    BNE.w errchx_err2
000209DC <AmiBlitz3.ab3@3509>   MOVE.w intstring,D1
000209E0 <AmiBlitz3.ab3@3510>    BNE.w errchx_err3
000209E4 <AmiBlitz3.ab3@3511>   MOVE.l 4(a7),d1
000209EA <AmiBlitz3.ab3@3512>   MOVE.w proceduremode,D1
000209EE <AmiBlitz3.ab3@3513>    BNE.w errchx_err6
000209F4 <AmiBlitz3.ab3@3514>   MOVE.l firstiff,d1
000209F8 <AmiBlitz3.ab3@3515>    BNE errchx_err5
000209FE <AmiBlitz3.ab3@3516>   MOVE.l firstfor,D1
00020A02 <AmiBlitz3.ab3@3517>    BNE.w errchx_err7
00020A04 <AmiBlitz3.ab3@3518>   MOVE.l (A7)+,D1
00020A06 <AmiBlitz3.ab3@3519> RTS
00020A10 <AmiBlitz3.ab3@3523>   MOVE.l sellineat,linenumat
00020A16 <AmiBlitz3.ab3@3524> JMP selerrz
00020A20 <AmiBlitz3.ab3@3527>   MOVE.l replineat,linenumat
00020A26 <AmiBlitz3.ab3@3528> JMP unterr3
00020A30 <AmiBlitz3.ab3@3531>   MOVE.l intlineat,linenumat
00020A36 <AmiBlitz3.ab3@3532> JMP interr2
00020A40 <AmiBlitz3.ab3@3535>   MOVE.l iflineat,linenumat
00020A46 <AmiBlitz3.ab3@3536> JMP noenderr
00020A50 <AmiBlitz3.ab3@3539>   MOVE.l prolineat,linenumat
00020A56 <AmiBlitz3.ab3@3540> JMP nopenderr
00020A60 <AmiBlitz3.ab3@3543>   MOVE.l forlineat,linenumat
00020A66 <AmiBlitz3.ab3@3544> JMP nonexterr
00020A70 <AmiBlitz3.ab3@3547>   MOVE.l ciflineat,linenumat
00020A76 <AmiBlitz3.ab3@3548> JMP nocenderr
00020A80 <AmiBlitz3.ab3@3552>   MOVE.l data1,maxsat
00020A82 <AmiBlitz3.ab3@3553>   MOVEQ.l #$00,D4
00020A88 <AmiBlitz3.ab3@3554>   MOVEA.l libpointer,A2
00020A8C <AmiBlitz3.ab3@3557>     CMPA.w #$0,A2
00020A90 <AmiBlitz3.ab3@3558>      BEQ.w calcmaxs_done
00020A94 <AmiBlitz3.ab3@3559>     TST.w $C(A2)
00020A98 <AmiBlitz3.ab3@3560>      BPL.w calcmaxs_next
00020A9C <AmiBlitz3.ab3@3561>     MOVE.l $12(A2),D0
00020AA0 <AmiBlitz3.ab3@3562>     TST.w -$2(A2,D0.L)
00020AA4 <AmiBlitz3.ab3@3563>      BEQ.w calcmaxs_next
00020AA6 <AmiBlitz3.ab3@3564>     ADDQ.w #1,D4
00020AAA <AmiBlitz3.ab3@3565>     MOVE.w -$6(A2,D0.L),D1
00020AAE <AmiBlitz3.ab3@3566>     BSR.w pokedata1
00020AB0 <AmiBlitz3.ab3@3567>     MOVEQ.l #$01,D1
00020AB4 <AmiBlitz3.ab3@3568>     MOVE.w -$2(A2,D0.L),D2
00020AB6 <AmiBlitz3.ab3@3569>     LSL.w D2,D1
00020ABA <AmiBlitz3.ab3@3570>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00020ABE <AmiBlitz3.ab3@3571>     BSR.w writedatalong
00020AC0 <AmiBlitz3.ab3@3574>     MOVEA.l (A2),A2
00020AC4 <AmiBlitz3.ab3@3575> BRA.w calcmaxs_loop
00020ACA <AmiBlitz3.ab3@3578>   MOVE.w D4,maxsused
00020ACE <AmiBlitz3.ab3@3579>    BEQ.w calcmaxs_done2
00020AD2 <AmiBlitz3.ab3@3580>   MOVE.w #$FFFA,D1                                         ;;use memlib
00020AD6 <AmiBlitz3.ab3@3581> BRA.w uselib
00020AD8 <AmiBlitz3.ab3@3584> RTS
00020ADE <AmiBlitz3.ab3@3588>    MOVE.l a7,stackaddr
00020AE2 <AmiBlitz3.ab3@3589>    BSR.w compile_term
00020AE6 <AmiBlitz3.ab3@3590>    BSR.w reget
00020AEA <AmiBlitz3.ab3@3591>    BNE.w illeolerr
00020AF0 <AmiBlitz3.ab3@3592>    TST.w dontwrite
00020AF4 <AmiBlitz3.ab3@3593>    BNE 'l1
00020AFA <AmiBlitz3.ab3@3594>    TST.l stacktrack
00020AFE <AmiBlitz3.ab3@3595>    BNE errormsg_stack
00020B02 <AmiBlitz3.ab3@3598>    CMP.w #-$7FDE,D0
00020B06 <AmiBlitz3.ab3@3599>    BNE.w compile_line_notelse
00020B0C <AmiBlitz3.ab3@3600>    JSR do_else2
00020B10 <AmiBlitz3.ab3@3601> BRA.w compile_line
00020B12 <AmiBlitz3.ab3@3604>   TST.w D0
00020B16 <AmiBlitz3.ab3@3605>   BNE.w compile_line
00020B1C <AmiBlitz3.ab3@3610>   MOVE.l firstiff,D0
00020B20 <AmiBlitz3.ab3@3611>    BEQ.w compile_line_done
00020B22 <AmiBlitz3.ab3@3612>   MOVEA.l D0,A0
00020B26 <AmiBlitz3.ab3@3613>   MOVE.w $C(A0),D1
00020B2A <AmiBlitz3.ab3@3614>    BPL.w compile_line_done
00020B2E <AmiBlitz3.ab3@3618>   BCLR #$F,D1
00020B34 <AmiBlitz3.ab3@3619>    JSR AJL_0_D7B8
00020B3A <AmiBlitz3.ab3@3620>    JSR AJL_0_D81C
00020B3E <AmiBlitz3.ab3@3621> BRA.w compile_line_unthen
00020B40 <AmiBlitz3.ab3@3624> RTS
00020B46 <AmiBlitz3.ab3@3628>   LEA lastgloballabel,A0
00020B48 <AmiBlitz3.ab3@3629>   TST.b (A0)
00020B4C <AmiBlitz3.ab3@3630>   BEQ.w nolocerr
00020B52 <AmiBlitz3.ab3@3631>   LEA ptr_parameterstore,A1
00020B54 <AmiBlitz3.ab3@3632>   MOVEQ.l #$00,D2
00020B56 <AmiBlitz3.ab3@3635>   ADDQ.w #1,D2
00020B58 <AmiBlitz3.ab3@3636>   MOVE.b (A0)+,(A1)+
00020B5C <AmiBlitz3.ab3@3637>    BNE.w createlab_loop
00020B62 <AmiBlitz3.ab3@3638>   MOVE.b #$27,-$1(A1)
00020B64 <AmiBlitz3.ab3@3639>   MOVE.w D2,-(A7)
00020B6A <AmiBlitz3.ab3@3640>    JSR makename4
00020B6C <AmiBlitz3.ab3@3641>   CMP.w (A7)+,D2
00020B70 <AmiBlitz3.ab3@3642>    BEQ.w syntaxerr
00020B72 <AmiBlitz3.ab3@3643>    TST.w d0
00020B76 <AmiBlitz3.ab3@3644>    BPL createlab_done
00020B7E <AmiBlitz3.ab3@3645>    MOVE.w #$3a,lastchar
00020B80 <AmiBlitz3.ab3@3646>    SUBQ.l #2,a5
00020B82 <AmiBlitz3.ab3@3649> RTS
00020B8C <AmiBlitz3.ab3@3653>   MOVE.l #forthstack,forthsp
00020B96 <AmiBlitz3.ab3@3654>   MOVE.l #precstack,precsp
00020B98 <AmiBlitz3.ab3@3655> RTS
00020B9A <AmiBlitz3.ab3@3662>   MOVEQ.l #$00,D4
00020BC4 <AmiBlitz3.ab3@3665>   !basic
00020C06 <AmiBlitz3.ab3@3666> 
00020C16 <AmiBlitz3.ab3@3668>   If (c_abort = 1)           ; check if set
00020C18 <AmiBlitz3.ab3@3669>     MOVEQ.l #-$01,d4
00020C1E <AmiBlitz3.ab3@3670>     MOVE.w D4,stopit
00020C3C <AmiBlitz3.ab3@3671>     !asm
00020C40 <AmiBlitz3.ab3@3672>     BRA chkrealstop__skip
00020C5E <AmiBlitz3.ab3@3674>   !asm
00020C60 <AmiBlitz3.ab3@3675>   MOVEQ.l #$00,D6
00020C62 <AmiBlitz3.ab3@3676>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00020C64 <AmiBlitz3.ab3@3680> RTS
00020C68 <AmiBlitz3.ab3@3684>   MOVE.w stopit(PC),D0
00020C6C <AmiBlitz3.ab3@3685>   BEQ chkstop__chk
00020C72 <AmiBlitz3.ab3@3686>   SUBQ.w #1,stopit
00020C74 <AmiBlitz3.ab3@3690> RTS
00020C7C <AmiBlitz3.ab3@3693>   MOVE.w #2000,stopit
00020C80 <AmiBlitz3.ab3@3694>   BSR.w chkrealstop
00020C84 <AmiBlitz3.ab3@3695>   BEQ.b chkstop__rts
00020C88 <AmiBlitz3.ab3@3697>   BSR.w close_compilewin
00020C8C <AmiBlitz3.ab3@3698>   BSR.w call_setpointernormal
00020C92 <AmiBlitz3.ab3@3700>   MOVEA.l errstack,A7
00020C98 <AmiBlitz3.ab3@3701>   MOVEA.l errcont,A0
00020CA0 <AmiBlitz3.ab3@3702>   MOVE.w #-1,anyerrs
00020CA2 <AmiBlitz3.ab3@3703> JMP (A0)
00020CA6 <AmiBlitz3.ab3@3706> d_pc:           Ds.l 1
00020CAA <AmiBlitz3.ab3@3707> d_bigpc:        Ds.l 1
00020CAC <AmiBlitz3.ab3@3708> d_nomemleft:    Ds.w 1
00020CB0 <AmiBlitz3.ab3@3709> cont_pc:        Ds.l 1
00020CB4 <AmiBlitz3.ab3@3710> cont_pc2:       Ds.l 1
00020CB8 <AmiBlitz3.ab3@3711> lastcontlink:   Ds.l 1
00020CBC <AmiBlitz3.ab3@3715>   ORI.w #$4E40,D1
00020CC0 <AmiBlitz3.ab3@3716> BRA.w JUMP_writeword
00020CC6 <AmiBlitz3.ab3@3720>   TST.b debugmode
00020CCA <AmiBlitz3.ab3@3721>   BEQ.w debugstuff__rts
00020CD0 <AmiBlitz3.ab3@3728>   TST.w dirmode                                            ;or while in direct mode...
00020CD4 <AmiBlitz3.ab3@3729>    BNE debugstuff__rts
00020CDE <AmiBlitz3.ab3@3730>   MOVE.l destpointer,d_pc
00020CE8 <AmiBlitz3.ab3@3731>   MOVE.l bigpc,d_bigpc
00020CF2 <AmiBlitz3.ab3@3732>   MOVE.w dontwrite,d_nomemleft
00020CF6 <AmiBlitz3.ab3@3733>   MOVEM.l D0-D1,-(A7)
00020CF8 <AmiBlitz3.ab3@3734>   MOVEQ.l #$01,D1
00020CFC <AmiBlitz3.ab3@3735>    BSR.w writetrap                                         ;write the adress to sourceline
00020D02 <AmiBlitz3.ab3@3739>    MOVE.l destpointer,D0
00020D08 <AmiBlitz3.ab3@3740>   MOVE.l cont_pc,D1
00020D0E <AmiBlitz3.ab3@3741>   MOVE.l D0,cont_pc
00020D14 <AmiBlitz3.ab3@3742>   MOVE.l D1,cont_pc2
00020D18 <AmiBlitz3.ab3@3743>    BEQ.b debugstuff__skip
00020D1E <AmiBlitz3.ab3@3744>   TST.w dontwrite
00020D22 <AmiBlitz3.ab3@3745>    BNE.b debugstuff__skip
00020D24 <AmiBlitz3.ab3@3746>   MOVEA.l D1,A4
00020D26 <AmiBlitz3.ab3@3747>   SUB.l A4,D0
00020D2A <AmiBlitz3.ab3@3748>   MOVE.w D0,$6(A4)
00020D30 <AmiBlitz3.ab3@3749>   MOVE.l A4,lastcontlink
00020D36 <AmiBlitz3.ab3@3752>   TST.w ininclude
00020D3C <AmiBlitz3.ab3@3754>   TST.w makeexec
00020D40 <AmiBlitz3.ab3@3755>   BEQ 'l1
00020D46 <AmiBlitz3.ab3@3756>   TST.w exdebug
00020D4A <AmiBlitz3.ab3@3757>   BEQ 'noinc
00020D4E <AmiBlitz3.ab3@3760>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00020D54 <AmiBlitz3.ab3@3761>   MOVE.l data1,d1
00020D5A <AmiBlitz3.ab3@3762>   TST.b firsttime
00020D5E <AmiBlitz3.ab3@3763>   BNE 'nofirst
00020D66 <AmiBlitz3.ab3@3764>   MOVE.b #1,firsttime
00020D6C <AmiBlitz3.ab3@3765>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00020D72 <AmiBlitz3.ab3@3766>   JSR writedatalong
00020D78 <AmiBlitz3.ab3@3767>   MOVE.l #"AmiB",d1
00020D7E <AmiBlitz3.ab3@3768>   JSR writedatalong
00020D84 <AmiBlitz3.ab3@3769>   MOVE.l destbufferstart,d1
00020D8A <AmiBlitz3.ab3@3770>   JSR writedatalong
00020D90 <AmiBlitz3.ab3@3771>   TST.w dontwrite
00020D94 <AmiBlitz3.ab3@3772>   BNE 'nohunk
00020D9A <AmiBlitz3.ab3@3773>   MOVE.l data1,d1
00020D9C <AmiBlitz3.ab3@3774>   SUBQ.l #4,d1
00020DA2 <AmiBlitz3.ab3@3775>   SUB.l destbufferstart,d1
00020DA4 <AmiBlitz3.ab3@3776>   MOVE.l d1,d2
00020DAA <AmiBlitz3.ab3@3777>   JSR addhunkoffset
00020DB0 <AmiBlitz3.ab3@3780>   MOVE.l destpointer,d2
00020DB6 <AmiBlitz3.ab3@3781>   MOVE.l data1,d1
00020DBC <AmiBlitz3.ab3@3784>   MOVE.l destpointer,d2
00020DBE <AmiBlitz3.ab3@3785>   MOVE.l d1,d3
00020DC4 <AmiBlitz3.ab3@3786>   SUB.l destbufferstart,d1
00020DCA <AmiBlitz3.ab3@3787>   OR.l #$80000000,d1
00020DD0 <AmiBlitz3.ab3@3788>   JSR writelong
00020DD6 <AmiBlitz3.ab3@3789>   TST.w inmacro
00020DDA <AmiBlitz3.ab3@3790>   BEQ 'sc1
00020DE0 <AmiBlitz3.ab3@3791>   MOVE.l myline,a0
00020DE4 <AmiBlitz3.ab3@3793> BRA 'inc2
00020DEA <AmiBlitz3.ab3@3795>  'sc1  TST.w ininclude
00020DEE <AmiBlitz3.ab3@3796>   BEQ 'inc
00020DF4 <AmiBlitz3.ab3@3797>   MOVE.l includesourceline,a0
00020DF8 <AmiBlitz3.ab3@3798> BRA 'inc2
00020DFE <AmiBlitz3.ab3@3801>   MOVE.l sourceline,a0
00020E02 <AmiBlitz3.ab3@3802>   LEA 9(a0),a0
00020E04 <AmiBlitz3.ab3@3805>   MOVE.l d1,d2
00020E06 <AmiBlitz3.ab3@3806>   MOVE.l A5,D1
00020E08 <AmiBlitz3.ab3@3807>   SUB.l a0,D1
00020E0E <AmiBlitz3.ab3@3808>   ADD.l #9,d1
00020E12 <AmiBlitz3.ab3@3809>   BSR.w JUMP_writeword
00020E18 <AmiBlitz3.ab3@3810>   CMP.l #9,d1
00020E1C <AmiBlitz3.ab3@3811>   BEQ 'pos1
00020E22 <AmiBlitz3.ab3@3812>   TST.w dontwrite
00020E26 <AmiBlitz3.ab3@3813>   BNE 'nopad
00020E2C <AmiBlitz3.ab3@3814>   MOVE.l lastsourceline,d1
00020E30 <AmiBlitz3.ab3@3815>   MOVE.l d1,-6(a4)
00020E34 <AmiBlitz3.ab3@3816> BRA 'nopad
00020E3A <AmiBlitz3.ab3@3819>   MOVE.l d2,lastsourceline
00020E44 <AmiBlitz3.ab3@3820>    MOVE.l destpointer,lastdestpointer
00020E46 <AmiBlitz3.ab3@3821>    MOVEQ #0,d1
00020E4C <AmiBlitz3.ab3@3822>   MOVE.l data1,d2
00020E52 <AmiBlitz3.ab3@3823>   SUB.l destbufferstart,d2
00020E58 <AmiBlitz3.ab3@3824>   JSR writedatalong
00020E5E <AmiBlitz3.ab3@3825>   TST.w dontwrite
00020E62 <AmiBlitz3.ab3@3826>   BNE 'no2
00020E68 <AmiBlitz3.ab3@3827>   JSR addhunkoffset
00020E6E <AmiBlitz3.ab3@3830>   MOVE.l data1,d2
00020E74 <AmiBlitz3.ab3@3831>   SUB.l destbufferstart,d2
00020E7A <AmiBlitz3.ab3@3832>   JSR writedatalong
00020E80 <AmiBlitz3.ab3@3833>   TST.w dontwrite
00020E84 <AmiBlitz3.ab3@3834>   BNE 'no
00020E8A <AmiBlitz3.ab3@3835>   JSR addhunkoffset
00020E90 <AmiBlitz3.ab3@3836>   MOVE.l lastwritedat,a1
00020E96 <AmiBlitz3.ab3@3837>   CMP.l #0,a1
00020E9A <AmiBlitz3.ab3@3838>   BEQ 'no
00020E9C <AmiBlitz3.ab3@3839>   MOVE.l d3,(a1)
00020EA4 <AmiBlitz3.ab3@3840>   MOVE.l prevwritedat,4(a1)
00020EAE <AmiBlitz3.ab3@3841>   MOVE.l lastwritedat,prevwritedat
00020EB4 <AmiBlitz3.ab3@3844>   MOVE.l d3,lastwritedat
00020EB6 <AmiBlitz3.ab3@3845>   MOVEQ #4,d1
00020EBA <AmiBlitz3.ab3@3846>   BSR pokedata1b
00020EBC <AmiBlitz3.ab3@3849>   MOVE.b (a0)+,d1
00020EC0 <AmiBlitz3.ab3@3850>   BEQ 'done
00020EC4 <AmiBlitz3.ab3@3851>   BSR pokedata1b
00020EC8 <AmiBlitz3.ab3@3852> BRA 'loop
00020ECA <AmiBlitz3.ab3@3855>   MOVEQ #0,d1
00020ECE <AmiBlitz3.ab3@3856>   BSR pokedata1b
00020ED4 <AmiBlitz3.ab3@3857>   MOVE.l data1,d1
00020ED8 <AmiBlitz3.ab3@3858>   BTST #0,d1
00020EDC <AmiBlitz3.ab3@3859>   BEQ 'nopad
00020EDE <AmiBlitz3.ab3@3860>   MOVEQ #0,d1
00020EE2 <AmiBlitz3.ab3@3861>   BSR pokedata1b
00020EE6 <AmiBlitz3.ab3@3864>   MOVEM.l (a7)+,a0-a1/d2/d3
00020EEA <AmiBlitz3.ab3@3865> BRA 'noinc2
00020EF0 <AmiBlitz3.ab3@3868>   MOVE.l sourceline,D1
00020EF6 <AmiBlitz3.ab3@3870>   JSR writelong
00020EF8 <AmiBlitz3.ab3@3871>   MOVE.l A5,D1
00020EFE <AmiBlitz3.ab3@3872>   SUB.l sourceline,D1
00020F04 <AmiBlitz3.ab3@3874>   JSR writeword
00020F06 <AmiBlitz3.ab3@3877>   MOVEQ.l #$00,D1
00020F0C <AmiBlitz3.ab3@3878>   JSR writeword                                            ; was: BSR.w writeword
00020F10 <AmiBlitz3.ab3@3879>   MOVEM.l (A7)+,D0-D1
00020F12 <AmiBlitz3.ab3@3882> RTS
00020F18 <AmiBlitz3.ab3@3886>   TST.b debugmode                                          ;extern debug
00020F1C <AmiBlitz3.ab3@3887>    BEQ.b undodebug__rts
00020F22 <AmiBlitz3.ab3@3888>   TST.b dirmode
00020F26 <AmiBlitz3.ab3@3889>   BNE undodebug__rts
00020F30 <AmiBlitz3.ab3@3894>   MOVE.w d_nomemleft,dontwrite
00020F3A <AmiBlitz3.ab3@3895>   MOVE.l d_bigpc,bigpc
00020F44 <AmiBlitz3.ab3@3896>   MOVE.l d_pc,destpointer
00020F4E <AmiBlitz3.ab3@3897>   MOVE.l cont_pc2,cont_pc
00020F50 <AmiBlitz3.ab3@3900> RTS
00020F5A <AmiBlitz3.ab3@3904>   MOVE.l #forthstack,forthsp
00020F64 <AmiBlitz3.ab3@3905>   MOVE.l #precstack,precsp
00020F6A <AmiBlitz3.ab3@3906>   CLR.w regnum
00020F70 <AmiBlitz3.ab3@3907>   CLR.w nonew
00020F76 <AmiBlitz3.ab3@3908>   CLR.w sbasegot
00020F80 <AmiBlitz3.ab3@3909>   MOVE.w varcodelen,oldvcodelen
00020F86 <AmiBlitz3.ab3@3910>   CLR.w varcodelen
00020F8E <AmiBlitz3.ab3@3911>   MOVE.w #-1,lasta6
00020F90 <AmiBlitz3.ab3@3912> RTS
00020F96 <AmiBlitz3.ab3@3916>   TST.w linemode
00020F9A <AmiBlitz3.ab3@3917>   BMI.b smode__skip
00020F9E <AmiBlitz3.ab3@3918>   BSR.w undodebug
00020FA4 <AmiBlitz3.ab3@3919>   MOVE.w linemode,D1
00020FA6 <AmiBlitz3.ab3@3920>   ADDQ.w #4,A7
00020FA8 <AmiBlitz3.ab3@3921>   LSL.w #2,D1
00020FAE <AmiBlitz3.ab3@3922>   LEA modetable,A0
00020FB2 <AmiBlitz3.ab3@3923>   MOVEA.l $0(A0,D1.W),A0
00020FB6 <AmiBlitz3.ab3@3924>   BSR.w reget
00020FB8 <AmiBlitz3.ab3@3927> JMP (A0)                                                   ;jumptokenroutine
00020FBA <AmiBlitz3.ab3@3930> RTS
00020FC2 <AmiBlitz3.ab3@3935>   MOVE.w #0,leaa0a0+2
00020FC8 <AmiBlitz3.ab3@3936>   CLR.b nowdeclare
00020FCE <AmiBlitz3.ab3@3937>   CLR.b notypecheck
00020FD4 <AmiBlitz3.ab3@3938>   CLR.l lasttoken
00020FDA <AmiBlitz3.ab3@3939>   CLR.b doimmediate
00020FE0 <AmiBlitz3.ab3@3940>   CLR.w vartype
00020FE6 <AmiBlitz3.ab3@3941>   CLR.w regnumfunc
00020FEC <AmiBlitz3.ab3@3942>   CLR.b optistring
00020FF2 <AmiBlitz3.ab3@3943>   CLR.b iniffcommand
00020FF8 <AmiBlitz3.ab3@3944>   CLR.w instringon  ; new
00020FFE <AmiBlitz3.ab3@3945>   CLR.b funccall
00021004 <AmiBlitz3.ab3@3946>   CLR.l currentfunccall
0002100A <AmiBlitz3.ab3@3947>   CLR.l leftsidetype
00021010 <AmiBlitz3.ab3@3948>   CLR.l rightsidetype
00021016 <AmiBlitz3.ab3@3949>   CLR.b peekaddrsize
0002101C <AmiBlitz3.ab3@3950>   CLR.b blitzparloop
00021022 <AmiBlitz3.ab3@3951>   CLR.b funcparloop
00021028 <AmiBlitz3.ab3@3952>   TST.b debugmode
0002102C <AmiBlitz3.ab3@3953>    BEQ 'fpu
00021036 <AmiBlitz3.ab3@3959>   MOVE.b fpu,iee
0002103A <AmiBlitz3.ab3@3960>   MOVE.w stopit(PC),D0
0002103E <AmiBlitz3.ab3@3961>   BNE chkstop_chkb
00021042 <AmiBlitz3.ab3@3962>   BSR.w chkstop                                          ; message here
00021048 <AmiBlitz3.ab3@3965>   SUBQ.w #1,stopit
0002104C <AmiBlitz3.ab3@3968>   BSR.w findmacro                                          ;macro
00021052 <AmiBlitz3.ab3@4022>   TST.b debugmode
00021056 <AmiBlitz3.ab3@4023>    BEQ.s 'l10
0002105C <AmiBlitz3.ab3@4024>   TST.b exdebug
00021060 <AmiBlitz3.ab3@4025>   BEQ 'l10a
00021062 <AmiBlitz3.ab3@4026>   MOVE.w (a5),d0
00021066 <AmiBlitz3.ab3@4027>   CMP.w #$8025,d0
0002106A <AmiBlitz3.ab3@4028>    BEQ 'l10
0002106E <AmiBlitz3.ab3@4031>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00021072 <AmiBlitz3.ab3@4035>   BSR.w get1bytemain                                       ;gettokenmain
00021076 <AmiBlitz3.ab3@4036>    BEQ.w undodebug
0002107A <AmiBlitz3.ab3@4037>   CMP.w #$002b,d0                                            ;check for + cast sign
0002107E <AmiBlitz3.ab3@4038>     BNE 'lb2
00021082 <AmiBlitz3.ab3@4039>     BSR.w get1bytemain
0002108A <AmiBlitz3.ab3@4040>     MOVE.b #1,notypecheck
00021094 <AmiBlitz3.ab3@4048>   MOVE.l #forthstack,forthsp
0002109E <AmiBlitz3.ab3@4049>   MOVE.l #precstack,precsp
000210A4 <AmiBlitz3.ab3@4050>   CLR.w regnum
000210AA <AmiBlitz3.ab3@4051>   CLR.w nonew
000210B0 <AmiBlitz3.ab3@4052>   CLR.w sbasegot
000210BA <AmiBlitz3.ab3@4053>   MOVE.w varcodelen,oldvcodelen
000210C0 <AmiBlitz3.ab3@4055>   CLR.w varcodelen
000210C8 <AmiBlitz3.ab3@4056>   MOVE.w #$FFFF,lasta6
000210CC <AmiBlitz3.ab3@4058>   BSR.w smode
000210CE <AmiBlitz3.ab3@4059>   TST.w D0
000210D2 <AmiBlitz3.ab3@4060>   BMI.w get_tokencode
000210D6 <AmiBlitz3.ab3@4061>   CMP.w #$2E,D0
000210DA <AmiBlitz3.ab3@4062>    BEQ.w JL_0_4644                                         ;shortlist
000210DE <AmiBlitz3.ab3@4063>   CMP.w #"#",D0
000210E2 <AmiBlitz3.ab3@4064>    BEQ.w JL_0_4718                                         ;constant found
000210E6 <AmiBlitz3.ab3@4065>   CMP.w #$27,D0
000210EA <AmiBlitz3.ab3@4066>    BEQ.w JL_0_4638                                         ;local label
000210F0 <AmiBlitz3.ab3@4067>   MOVE.l A5,letstart
000210F6 <AmiBlitz3.ab3@4068>   JSR getparameter
000210FA <AmiBlitz3.ab3@4069>   BSR.w reget
000210FE <AmiBlitz3.ab3@4070>    BEQ.w JL_0_4658                                         ;label found
00021102 <AmiBlitz3.ab3@4071>   CMP.w #$7B,D0
00021106 <AmiBlitz3.ab3@4072>    BEQ.w JL_0_475C
00021108 <AmiBlitz3.ab3@4073>   TST.w d0
0002110C <AmiBlitz3.ab3@4074>    BPL 'll1
00021112 <AmiBlitz3.ab3@4075>   TST.b newsyntax
00021116 <AmiBlitz3.ab3@4076>    BEQ 'll1
0002111C <AmiBlitz3.ab3@4077>   LEA allowtab,a0
0002111E <AmiBlitz3.ab3@4078>   MOVEQ #0,d1
00021120 <AmiBlitz3.ab3@4079>   MOVE.b d0,d1
00021124 <AmiBlitz3.ab3@4080>   TST.b 0(a0,d1.w)
00021128 <AmiBlitz3.ab3@4081>    BNE 'll1
0002112A <AmiBlitz3.ab3@4082>   SUBQ.l #2,a5
00021132 <AmiBlitz3.ab3@4083>   MOVE.w #":",lastchar                                     ;no doublepoint
00021136 <AmiBlitz3.ab3@4084> BRA JL_0_4658
0002113E <AmiBlitz3.ab3@4087>   CMP.l #"equ ",-1(a5)
00021142 <AmiBlitz3.ab3@4088>    BEQ 'll4
0002114A <AmiBlitz3.ab3@4089>   CMP.l #"EQU ",-1(a5)
0002114E <AmiBlitz3.ab3@4090>    BNE 'll2
00021150 <AmiBlitz3.ab3@4093>   ADDQ.l #2,a5
00021154 <AmiBlitz3.ab3@4094>   BSR.w findlabel2
00021158 <AmiBlitz3.ab3@4095>   BEQ.w 'lf1
0002115C <AmiBlitz3.ab3@4096>   BSR.w addlabelhash
00021164 <AmiBlitz3.ab3@4097>   MOVE.l #$1,$4(A2)
0002116C <AmiBlitz3.ab3@4100>   CMPI.l #$1,$4(A2)
00021170 <AmiBlitz3.ab3@4101>    BNE.w illconerr
00021174 <AmiBlitz3.ab3@4102>   BSR get1bytemain
00021176 <AmiBlitz3.ab3@4103>   MOVE.l A2,-(A7)
00021178 <AmiBlitz3.ab3@4114>   SUBQ.l #1,a5
0002117A <AmiBlitz3.ab3@4117>   SUBQ.l #1,a5
00021180 <AmiBlitz3.ab3@4118>   JSR AJL_0_BF6E
00021182 <AmiBlitz3.ab3@4119>   MOVEA.l (A7)+,A2
00021186 <AmiBlitz3.ab3@4120>   MOVE.l D3,$8(A2)
00021188 <AmiBlitz3.ab3@4121>   RTS
0002118C <AmiBlitz3.ab3@4122>   BSR get1bytemain
00021194 <AmiBlitz3.ab3@4125>   CMP.l #"SET ",-1(a5)
00021198 <AmiBlitz3.ab3@4126>   BNE 'll3
0002119C <AmiBlitz3.ab3@4127> BRA 'll4
000211A2 <AmiBlitz3.ab3@4130> JMP AJL_0_DEA6
000211A6 <AmiBlitz3.ab3@4133>   CMP.w #-$7FDE,D0
000211AA <AmiBlitz3.ab3@4134>   BEQ.w get_tokencode
000211AE <AmiBlitz3.ab3@4135> BRA.w undodebug
000211B2 <AmiBlitz3.ab3@4138>   BSR.w undodebug
000211B6 <AmiBlitz3.ab3@4139>   BSR.w createlab
000211BA <AmiBlitz3.ab3@4140> BRA.w JL_0_466E
000211BE <AmiBlitz3.ab3@4143>   BSR.w get1bytemain
000211C2 <AmiBlitz3.ab3@4144>    BEQ.w JL_0_462C
000211C6 <AmiBlitz3.ab3@4145>   CMP.w #"'",D0
000211CA <AmiBlitz3.ab3@4146>    BEQ.w JL_0_4638
000211CE <AmiBlitz3.ab3@4147>    BSR.w makename2
000211D0 <AmiBlitz3.ab3@4148>    TST.w d0
000211D4 <AmiBlitz3.ab3@4149>    BPL 'll1
000211D6 <AmiBlitz3.ab3@4150>    SUBQ.l #2,a5
000211DE <AmiBlitz3.ab3@4151>    MOVE.w #":",lastchar
000211E2 <AmiBlitz3.ab3@4152> BRA JL_0_4658                                              ;????
000211E6 <AmiBlitz3.ab3@4156>   BSR.w undodebug
000211EC <AmiBlitz3.ab3@4157>   LEA ptr_parameterstore,A0
000211F2 <AmiBlitz3.ab3@4158>   LEA lastgloballabel,A1
000211F4 <AmiBlitz3.ab3@4161>   MOVE.b (A0)+,(A1)+
000211F8 <AmiBlitz3.ab3@4162>    BNE.w JL_0_4668
000211FC <AmiBlitz3.ab3@4165>   BSR.w findlabel2
00021200 <AmiBlitz3.ab3@4166>    BEQ.w JL_0_4698
00021204 <AmiBlitz3.ab3@4167>    BSR.w addlabelhash
00021208 <AmiBlitz3.ab3@4170>   CLR.l $4(A2)
00021210 <AmiBlitz3.ab3@4171>   MOVE.l destpointer,$8(A2)
00021218 <AmiBlitz3.ab3@4174>   MOVE.w procnum,$10(A2)
0002121A <AmiBlitz3.ab3@4175> RTS
0002121E <AmiBlitz3.ab3@4179>   MOVE.l $4(A2),D0
00021222 <AmiBlitz3.ab3@4180>   BTST #$0,D0
00021226 <AmiBlitz3.ab3@4181>    BNE.w illlaberr
0002122C <AmiBlitz3.ab3@4182>   TST.w pass
00021230 <AmiBlitz3.ab3@4184>   MOVE.l $8(A2),D0
00021234 <AmiBlitz3.ab3@4185>    BNE.w duplaberr
0002123C <AmiBlitz3.ab3@4186>   MOVE.w procnum,$10(A2)
00021240 <AmiBlitz3.ab3@4187>   MOVEA.l $4(A2),A3
00021246 <AmiBlitz3.ab3@4188>   MOVEA.l _execbase,A6
0002124A <AmiBlitz3.ab3@4191>   CMPA.w #$0,A3
0002124E <AmiBlitz3.ab3@4192>    BEQ.w JL_0_467A
00021252 <AmiBlitz3.ab3@4193>     MOVE.l $4(A2),D1
00021256 <AmiBlitz3.ab3@4194>     BTST #$0,D1
0002125A <AmiBlitz3.ab3@4195>     BNE.w illlaberr
0002125E <AmiBlitz3.ab3@4196>   MOVE.w $8(A3),D1
00021262 <AmiBlitz3.ab3@4197>   CMP.w $10(A2),D1
00021266 <AmiBlitz3.ab3@4198>    BEQ.w JL_0_46DC
0002126C <AmiBlitz3.ab3@4199>    TST.b newsyntax
00021270 <AmiBlitz3.ab3@4200>    BEQ 'l1
00021274 <AmiBlitz3.ab3@4201> BRA.w JL_0_46DC                                            ;label context out of range fix
0002127C <AmiBlitz3.ab3@4206>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00021280 <AmiBlitz3.ab3@4207> BRA.w referr
00021286 <AmiBlitz3.ab3@4210>   MOVE.w dontwrite,D1
0002128A <AmiBlitz3.ab3@4211>    BNE.w JL_0_4706
0002128E <AmiBlitz3.ab3@4212>   MOVEA.l $4(A3),A1
00021294 <AmiBlitz3.ab3@4213>   BTST #$0,$7(A3)
00021298 <AmiBlitz3.ab3@4214>    BEQ.w JL_0_4700
0002129A <AmiBlitz3.ab3@4215>   SUBQ.w #1,A1
000212A0 <AmiBlitz3.ab3@4216>   MOVE.l data2,(A1)
000212A4 <AmiBlitz3.ab3@4217> BRA.w JL_0_4706
000212AA <AmiBlitz3.ab3@4220>   MOVE.l destpointer,(A1)
000212AC <AmiBlitz3.ab3@4223>   MOVEA.l A3,A1
000212AE <AmiBlitz3.ab3@4224>   MOVEA.l (A3),A3
000212B2 <AmiBlitz3.ab3@4225>   MOVE.l A3,$4(A2)
000212B4 <AmiBlitz3.ab3@4226>   MOVEQ.l #$0C+2,D0
000212BA <AmiBlitz3.ab3@4227>   MOVE.l mempool,a0
000212C0 <AmiBlitz3.ab3@4228>   MOVEA.l _execbase,A6
000212C4 <AmiBlitz3.ab3@4229>   JSR _FreePooled(A6)
000212C8 <AmiBlitz3.ab3@4230> BRA.w JL_0_46BC
000212D2 <AmiBlitz3.ab3@4235>    MOVE.l #forthstack,forthsp
000212DC <AmiBlitz3.ab3@4236>   MOVE.l #precstack,precsp
000212E0 <AmiBlitz3.ab3@4237>    BSR.w getparameter2
000212E4 <AmiBlitz3.ab3@4240>   BSR.w findlabel2
000212E8 <AmiBlitz3.ab3@4241>    BEQ.w JL_0_4738
000212EC <AmiBlitz3.ab3@4242>    BSR.w addlabelhash
000212F4 <AmiBlitz3.ab3@4243>   MOVE.l #$1,$4(A2)
000212F8 <AmiBlitz3.ab3@4244> BRA.w JL_0_4744
00021300 <AmiBlitz3.ab3@4247>   CMPI.l #$1,$4(A2)
00021304 <AmiBlitz3.ab3@4248>    BNE.w illconerr
00021308 <AmiBlitz3.ab3@4257>   CMP.w #$3D,D0
0002130C <AmiBlitz3.ab3@4258>   BEQ.w JL_0_474E
0002130E <AmiBlitz3.ab3@4259> RTS
00021310 <AmiBlitz3.ab3@4263>   MOVE.l A2,-(A7)
00021316 <AmiBlitz3.ab3@4264>   JSR AJL_0_BF6E
00021318 <AmiBlitz3.ab3@4265>   MOVEA.l (A7)+,A2
0002131C <AmiBlitz3.ab3@4266>   MOVE.l D3,$8(A2)                                         ;store constant
00021324 <AmiBlitz3.ab3@4267>   CMP.w #$0a,lastchar
00021328 <AmiBlitz3.ab3@4268>   BNE 'l1
00021330 <AmiBlitz3.ab3@4269>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00021332 <AmiBlitz3.ab3@4272> RTS
00021336 <AmiBlitz3.ab3@4275>   BSR.w findproc                                           ;write statement call
0002133A <AmiBlitz3.ab3@4276>   BEQ _state
00021340 <AmiBlitz3.ab3@4277>   TST.l unusedfunc
00021344 <AmiBlitz3.ab3@4278>   BEQ noprocerr
0002134A <AmiBlitz3.ab3@4280>   JSR gotoendsource
0002134E <AmiBlitz3.ab3@4283>   TST.b $5(A2)
00021354 <AmiBlitz3.ab3@4285>   MOVE.l a2,currentfunccall
0002135C <AmiBlitz3.ab3@4286>   MOVE.b #1,funccall
00021362 <AmiBlitz3.ab3@4287>   MOVE.b #1,isfunc(a2)
00021366 <AmiBlitz3.ab3@4288>   MOVE.l $E(A2),-(A7)
00021368 <AmiBlitz3.ab3@4289>   MOVEQ.l #$00,D0
0002136C <AmiBlitz3.ab3@4290>   MOVE.b $4(A2),D0
00021372 <AmiBlitz3.ab3@4291>   MOVE.l d0,parnumtemp
00021376 <AmiBlitz3.ab3@4292>   BEQ.w JL_0_4786
0002137A <AmiBlitz3.ab3@4293>   TST.b $20(a2)                                            ;increase if morepar
0002137E <AmiBlitz3.ab3@4294>   BNE 'no0par
00021380 <AmiBlitz3.ab3@4295>   MOVE.l a5,a4
00021384 <AmiBlitz3.ab3@4298>   CMP.b #$20,(a4)+
00021388 <AmiBlitz3.ab3@4299>   BEQ 'l1
0002138E <AmiBlitz3.ab3@4300>   CMP.b #"}",-1(a4)
00021392 <AmiBlitz3.ab3@4301>   BNE  'no0par                                             ;statementcall pars
00021394 <AmiBlitz3.ab3@4302>   MOVEQ #0,d0
00021398 <AmiBlitz3.ab3@4305>   LEA $16(A2),A1
0002139A <AmiBlitz3.ab3@4308>   MOVE.l d1,-(a7)
0002139C <AmiBlitz3.ab3@4309>   MOVE.b (a1),d2
0002139E <AmiBlitz3.ab3@4310>   MOVE.l d0,d1
000213A2 <AmiBlitz3.ab3@4311>   CMP.w #4,d2
000213A6 <AmiBlitz3.ab3@4312>   BNE 'l1b
000213AC <AmiBlitz3.ab3@4313>   ADD.l #$203c,d1
000213B2 <AmiBlitz3.ab3@4315>   JSR writeword
000213B8 <AmiBlitz3.ab3@4316>   MOVE.l #$ffff0000,d1
000213BE <AmiBlitz3.ab3@4318>   JSR writelong
000213C2 <AmiBlitz3.ab3@4319> BRA 'l2b
000213C8 <AmiBlitz3.ab3@4322>   TST.b fpu
000213CC <AmiBlitz3.ab3@4323>   BNE 'l1c
000213D0 <AmiBlitz3.ab3@4324>   CMP.w #5,d2
000213D4 <AmiBlitz3.ab3@4325>   BNE 'l1c
000213DA <AmiBlitz3.ab3@4326>   ADD.l #$203c,d1
000213E0 <AmiBlitz3.ab3@4328>   JSR writeword
000213E6 <AmiBlitz3.ab3@4329>   MOVE.l #$800000c1,d1
000213EC <AmiBlitz3.ab3@4331>   JSR writelong
000213F0 <AmiBlitz3.ab3@4332> BRA 'l2b
000213F6 <AmiBlitz3.ab3@4335>   ADD.l #$70ff,d1
000213FC <AmiBlitz3.ab3@4337>   JSR writeword
00021402 <AmiBlitz3.ab3@4338>   MOVE.l #$f23c5000,d1
00021404 <AmiBlitz3.ab3@4339>   MOVE.l d0,d2
00021406 <AmiBlitz3.ab3@4340>   ASR.l #2,d2
00021408 <AmiBlitz3.ab3@4341>   ADD.l d2,d1
0002140E <AmiBlitz3.ab3@4343>   JSR writelong
00021412 <AmiBlitz3.ab3@4344>   MOVE.w #$ffff,d1
00021418 <AmiBlitz3.ab3@4346>   JSR writeword
0002141A <AmiBlitz3.ab3@4349>   MOVE.l (a7)+,d1
0002141C <AmiBlitz3.ab3@4350>   ADDQ.l #1,a1
00021422 <AmiBlitz3.ab3@4351>   ADD.l #$0200,d0
00021428 <AmiBlitz3.ab3@4352>   CMP.l #$0e00,d0
0002142C <AmiBlitz3.ab3@4353>    BEQ syntaxerr
0002142E <AmiBlitz3.ab3@4354>   TST.b (a1)
00021432 <AmiBlitz3.ab3@4355>    BNE 'again
00021436 <AmiBlitz3.ab3@4356> BRA JL_0_4786
00021440 <AmiBlitz3.ab3@4359>   MOVE.w a2offset,a2offset2
00021444 <AmiBlitz3.ab3@4360>   LEA $16(A2),A2
0002144A <AmiBlitz3.ab3@4361>   MOVE.b funcparloop,-(a7)
00021452 <AmiBlitz3.ab3@4362>   MOVE.b #1,funcparloop
00021458 <AmiBlitz3.ab3@4363>   MOVE.b blitzparloop,-(a7)
0002145E <AmiBlitz3.ab3@4364>   CLR.b blitzparloop
00021462 <AmiBlitz3.ab3@4365>   BSR.w fetchpees2
00021468 <AmiBlitz3.ab3@4366>   MOVE.b (a7)+,blitzparloop
0002146E <AmiBlitz3.ab3@4367>   MOVE.b (a7)+,funcparloop
00021472 <AmiBlitz3.ab3@4368> BRA.w JL_0_478A
00021476 <AmiBlitz3.ab3@4371>   BSR.w get1bytemain
0002147A <AmiBlitz3.ab3@4374>   CMP.w #$7D,D0
0002147E <AmiBlitz3.ab3@4375>    BNE.w morepar_                                          ;syntax error morepar
00021484 <AmiBlitz3.ab3@4376>    JSR chkstak
00021486 <AmiBlitz3.ab3@4377>   MOVE.l (A7)+,D1
0002148C <AmiBlitz3.ab3@4393>    JSR JL_0_AFCA
00021492 <AmiBlitz3.ab3@4415>   CLR.b funccall
00021496 <AmiBlitz3.ab3@4416> BRA.w get1bytemain
0002149C <AmiBlitz3.ab3@4420>   MOVE.l d0,lasttoken
000214A0 <AmiBlitz3.ab3@4421>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
000214A4 <AmiBlitz3.ab3@4422>   BNE 'l2
000214A8 <AmiBlitz3.ab3@4423>    MOVE.w #$dd05,d0
000214AC <AmiBlitz3.ab3@4426>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
000214B0 <AmiBlitz3.ab3@4427>   BNE 'l3
000214B4 <AmiBlitz3.ab3@4428>    MOVE.w #$dd06,d0
000214B8 <AmiBlitz3.ab3@4431>   CMP.w #-$7FC4,D0
000214BC <AmiBlitz3.ab3@4432>   BCS.w JL_0_47C4
000214C0 <AmiBlitz3.ab3@4433>     CMP.w #-$7F4D,D0
000214C4 <AmiBlitz3.ab3@4434>     BCC.w JL_0_47C4
000214CC <AmiBlitz3.ab3@4435>       BTST #$7,assemblercheck                              ;inline Assembler checking
000214D0 <AmiBlitz3.ab3@4436>       BNE.b JL_0_47C0
000214D6 <AmiBlitz3.ab3@4437>         TST.b debugmode
000214DA <AmiBlitz3.ab3@4438>         BEQ.b 'l10
000214E4 <AmiBlitz3.ab3@4443>           MOVE.w d_nomemleft,dontwrite
000214EE <AmiBlitz3.ab3@4444>           MOVE.l d_bigpc,bigpc
000214F8 <AmiBlitz3.ab3@4445>           MOVE.l d_pc,destpointer
00021502 <AmiBlitz3.ab3@4446>           MOVE.l cont_pc2,cont_pc
00021506 <AmiBlitz3.ab3@4452> BRA.w JL_0_612C
0002150A <AmiBlitz3.ab3@4455>   BCLR #$F,D0
0002150C <AmiBlitz3.ab3@4456>   MOVE.w D0,D1
00021510 <AmiBlitz3.ab3@4457>   ANDI.w #$7F00,D1
00021514 <AmiBlitz3.ab3@4458>   BNE.w JL_0_4856
00021518 <AmiBlitz3.ab3@4459>     CMP.w #$B3,D0                                          ;intern Instructions
0002151C <AmiBlitz3.ab3@4460>     BCS.w JL_0_47F2
00021520 <AmiBlitz3.ab3@4461>       SUBI.w #$77,D0
00021524 <AmiBlitz3.ab3@4462>       CMP.w #$4B,D0
00021528 <AmiBlitz3.ab3@4463>       BEQ.w JL_0_4830
0002152C <AmiBlitz3.ab3@4464>         CMP.w #$46,D0
00021530 <AmiBlitz3.ab3@4465>         BEQ.w JL_0_4830
00021534 <AmiBlitz3.ab3@4466> BRA.w JL_0_4834                                            ; change tokennum
00021538 <AmiBlitz3.ab3@4469>     CMP.w #$38,D0
0002153C <AmiBlitz3.ab3@4470>      BEQ.w JL_0_4830
00021540 <AmiBlitz3.ab3@4471>     CMP.w #$39,D0
00021544 <AmiBlitz3.ab3@4472>      BEQ.w JL_0_4830
00021548 <AmiBlitz3.ab3@4473>     CMP.w #$D,D0
0002154C <AmiBlitz3.ab3@4474>      BEQ.w JL_0_4830
00021550 <AmiBlitz3.ab3@4475>     CMP.w #$12,D0
00021554 <AmiBlitz3.ab3@4476>      BEQ.w JL_0_4830
00021558 <AmiBlitz3.ab3@4477>     CMP.w #$13,D0
0002155C <AmiBlitz3.ab3@4478>      BEQ.w JL_0_4830
00021560 <AmiBlitz3.ab3@4479>     CMP.w #$1A,D0
00021564 <AmiBlitz3.ab3@4480>      BEQ.w JL_0_4830
00021568 <AmiBlitz3.ab3@4481>     CMP.w #$2A,D0
0002156C <AmiBlitz3.ab3@4482>      BHI.w JL_0_4834
00021570 <AmiBlitz3.ab3@4483>     CMP.w #$23,D0
00021574 <AmiBlitz3.ab3@4484>      BCS.b JL_0_4834
00021578 <AmiBlitz3.ab3@4487>   BSR.w undodebug
0002157A <AmiBlitz3.ab3@4490>   SUBQ.w #1,D0
0002157C <AmiBlitz3.ab3@4491>   LSL.w #2,D0
00021582 <AmiBlitz3.ab3@4498>   LEA instructionbase,A0
00021586 <AmiBlitz3.ab3@4499>   MOVEA.l $0(A0,D0.W),A0
00021588 <AmiBlitz3.ab3@4500>   MOVE.l A0,-(A7)
0002158C <AmiBlitz3.ab3@4501> BRA.w get1bytemain
0002158E <AmiBlitz3.ab3@4507>   MOVE.w D0,D1
00021592 <AmiBlitz3.ab3@4508>    BSR.w searchinstr
00021598 <AmiBlitz3.ab3@4509>    TST.b newmode
0002159C <AmiBlitz3.ab3@4510>    BNE compile_term
000215A2 <AmiBlitz3.ab3@4511>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
000215A6 <AmiBlitz3.ab3@4512>    BNE.w stamigalib
000215AC <AmiBlitz3.ab3@4513>   BTST #$0,$1(A3)
000215B0 <AmiBlitz3.ab3@4514>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
000215B4 <AmiBlitz3.ab3@4515>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
000215B8 <AmiBlitz3.ab3@4516>    BSR.w JL_0_66F6
000215BE <AmiBlitz3.ab3@4522>   MOVE.w numreps,-(A7)
000215C4 <AmiBlitz3.ab3@4523>   MOVE.w userp,-(A7)
000215CA <AmiBlitz3.ab3@4524>   MOVE.w a2offset,-(A7)
000215CC <AmiBlitz3.ab3@4525>   MOVE.l A2,-(A7)                                          ;recurs.
000215D6 <AmiBlitz3.ab3@4526>   MOVE.w convsize,userp
000215DA <AmiBlitz3.ab3@4527>   LEA $6(A3),A1
000215DC <AmiBlitz3.ab3@4531>    MOVE.w (A1),D2
000215E0 <AmiBlitz3.ab3@4532>    BMI.w SERR                                              ;statement syntax error
000215E4 <AmiBlitz3.ab3@4533>   ANDI.w #$FF,D2
000215E6 <AmiBlitz3.ab3@4534>   CMP.w D2,D1
000215EA <AmiBlitz3.ab3@4535>    BEQ.w JL_0_48E0
000215EE <AmiBlitz3.ab3@4536>    BCS.w JL_0_48CC
000215F0 <AmiBlitz3.ab3@4537>   MOVE.b (A1),D3
000215F4 <AmiBlitz3.ab3@4538>   ANDI.w #$7,D3
000215F8 <AmiBlitz3.ab3@4539>    BEQ.w JL_0_48CC
000215FA <AmiBlitz3.ab3@4540>   MOVE.w D2,D4
000215FC <AmiBlitz3.ab3@4541>   SUB.w D3,D4
000215FE <AmiBlitz3.ab3@4542>   MOVEQ.l #$00,D5
00021600 <AmiBlitz3.ab3@4543>   MOVE.w D1,D5
00021602 <AmiBlitz3.ab3@4544>   SUB.w D4,D5
00021604 <AmiBlitz3.ab3@4545>   DIVU D3,D5
00021606 <AmiBlitz3.ab3@4546>   SWAP D5
00021608 <AmiBlitz3.ab3@4547>   TST.w D5
0002160C <AmiBlitz3.ab3@4548>    BEQ.w JL_0_48E0
0002160E <AmiBlitz3.ab3@4551>   ADDQ.w #2,A1
00021610 <AmiBlitz3.ab3@4552>   ADDA.w D2,A1
00021614 <AmiBlitz3.ab3@4553>    BSR.w aligna1
00021618 <AmiBlitz3.ab3@4554>    BSR.w skiplibreg
0002161C <AmiBlitz3.ab3@4555>   LEA $C(A1),A1
00021620 <AmiBlitz3.ab3@4556> BRA.w JL_0_489A
00021622 <AmiBlitz3.ab3@4559>   MOVE.w (a3),d2
00021626 <AmiBlitz3.ab3@4560>   BTST #1,d2
0002162A <AmiBlitz3.ab3@4561>   BEQ statement_
0002162E <AmiBlitz3.ab3@4562>   CMP.w #1,d1
00021632 <AmiBlitz3.ab3@4563>   BEQ statement_
00021636 <AmiBlitz3.ab3@4566>   CMP.b #$20,(a5)+
0002163A <AmiBlitz3.ab3@4567>   BEQ 'l2
00021640 <AmiBlitz3.ab3@4568>   CMP.b #"(",-2(a5)
00021644 <AmiBlitz3.ab3@4569>   BNE 'l1
00021648 <AmiBlitz3.ab3@4570> BRA parameter_
0002164C <AmiBlitz3.ab3@4573> BRA inbrackets_
0002164E <AmiBlitz3.ab3@4576>   MOVE.b (A1),D2
00021650 <AmiBlitz3.ab3@4577>   LSL.w #8,D2
00021652 <AmiBlitz3.ab3@4578>   OR.w D2,D1
00021654 <AmiBlitz3.ab3@4579>   MOVE.l A1,-(A7)
0002165A <AmiBlitz3.ab3@4580>   CLR.w a2offset
0002165C <AmiBlitz3.ab3@4581>   TST.w D1
00021660 <AmiBlitz3.ab3@4582>    BEQ.w JL_0_4900
00021664 <AmiBlitz3.ab3@4583>   LEA $2(A1),A2
0002166A <AmiBlitz3.ab3@4585>   MOVE.l lasttoken,-(a7)
00021670 <AmiBlitz3.ab3@4586>   CLR.l lasttoken
00021674 <AmiBlitz3.ab3@4587>   BSR.w fetchlibps
0002167A <AmiBlitz3.ab3@4588>   MOVE.l (a7)+,lasttoken
0002167E <AmiBlitz3.ab3@4589> BRA.w JL_0_4904
00021682 <AmiBlitz3.ab3@4592>   BSR.w get1bytemain
00021684 <AmiBlitz3.ab3@4595>   MOVEA.l (A7)+,A1
00021686 <AmiBlitz3.ab3@4596>   MOVEA.l (A7)+,A2
0002168C <AmiBlitz3.ab3@4597>   MOVE.w a2offset,D1
00021690 <AmiBlitz3.ab3@4598>    BEQ.w JL_0_493A
00021696 <AmiBlitz3.ab3@4599>   MOVE.w D1,preplibst+2
0002169C <AmiBlitz3.ab3@4600>   MOVE.l preplibst,D1
000216A2 <AmiBlitz3.ab3@4601>    JSR writelong                                           ;write array offset stack correct
000216AC <AmiBlitz3.ab3@4602>   MOVE.w numreps,movenumrep+2
000216B0 <AmiBlitz3.ab3@4603>    BEQ.w JL_0_493A
000216B6 <AmiBlitz3.ab3@4604>   MOVE.l movenumrep,D1
000216BC <AmiBlitz3.ab3@4605>    JSR writelong
000216C2 <AmiBlitz3.ab3@4609>   JSR userjsr
000216C8 <AmiBlitz3.ab3@4612>   MOVE.w a2offset,D1
000216CC <AmiBlitz3.ab3@4613>    BEQ.w JL_0_4974
000216D0 <AmiBlitz3.ab3@4614>   CMP.w #$8,D1
000216D4 <AmiBlitz3.ab3@4615>    BHI.w JL_0_4964
000216D8 <AmiBlitz3.ab3@4616>   ANDI.w #$7,D1
000216DA <AmiBlitz3.ab3@4617>   LSL.w #8,D1
000216DC <AmiBlitz3.ab3@4618>   LSL.w #1,D1
000216E0 <AmiBlitz3.ab3@4619>   ORI.w #$504F,D1
000216E6 <AmiBlitz3.ab3@4621>   JSR writeword
000216EA <AmiBlitz3.ab3@4622> BRA.w JL_0_4974
000216F0 <AmiBlitz3.ab3@4625>   MOVE.w D1,fixlibst+2
000216F6 <AmiBlitz3.ab3@4626>   MOVE.l fixlibst,D1
000216FC <AmiBlitz3.ab3@4627>   JSR writelong
00021702 <AmiBlitz3.ab3@4630>   MOVE.w (A7)+,a2offset
00021708 <AmiBlitz3.ab3@4631>   MOVE.w (A7)+,userp
0002170E <AmiBlitz3.ab3@4632>   MOVE.w (A7)+,numreps
00021712 <AmiBlitz3.ab3@4633> BRA.w reget
00021716 <AmiBlitz3.ab3@4637>   MOVEM.l A2-A3,-(A7)
0002171C <AmiBlitz3.ab3@4638>   CLR.b doublepeek
00021722 <AmiBlitz3.ab3@4639>   MOVE.l A5,lastsourcepos
00021726 <AmiBlitz3.ab3@4640>    BSR.w getchar
0002172A <AmiBlitz3.ab3@4641>   CMP.w #$2E,D0
0002172E <AmiBlitz3.ab3@4642>    BEQ.w JL_0_49B4
00021734 <AmiBlitz3.ab3@4643>   MOVEA.l defaulttype,A2
00021738 <AmiBlitz3.ab3@4644>   CMP.w #$24,D0
0002173C <AmiBlitz3.ab3@4645>    BNE.w JL_0_49CA
0002173E <AmiBlitz3.ab3@4646>   MOVEQ.l #$07,D1
00021742 <AmiBlitz3.ab3@4647> BRA.w JL_0_49DE
00021746 <AmiBlitz3.ab3@4650>   BSR.w getparameter2
0002174A <AmiBlitz3.ab3@4651>   BEQ.w syntaxerr
00021750 <AmiBlitz3.ab3@4652>   LEA newtypebase,A2
00021754 <AmiBlitz3.ab3@4653>   BSR.w findtype
00021758 <AmiBlitz3.ab3@4654>   BNE.w notypeerr
00021762 <AmiBlitz3.ab3@4658>   MOVE.w oldqflag,instringon
00021768 <AmiBlitz3.ab3@4659>   MOVEA.l lastsourcepos,A5
0002176C <AmiBlitz3.ab3@4664>   MOVE.w $6(A2),D1
00021772 <AmiBlitz3.ab3@4665>   CMP.w #8,8(a2)
00021776 <AmiBlitz3.ab3@4666>   BNE 'l1
0002177E <AmiBlitz3.ab3@4667>   MOVE.b #1,doublepeek
00021784 <AmiBlitz3.ab3@4671>   MOVE.w D1,convsize
00021788 <AmiBlitz3.ab3@4672>   MOVEM.l (A7)+,A2-A3
0002178A <AmiBlitz3.ab3@4673> RTS
00021790 <AmiBlitz3.ab3@4678>   BTST #$3,$1(A3)
00021794 <AmiBlitz3.ab3@4679>   BEQ.w JL_0_4A06
00021798 <AmiBlitz3.ab3@4680>   BSR.w AJL_0_498A                                         ;read peek/poke size
0002179C <AmiBlitz3.ab3@4682>   ORI.w #$7000,D1
000217A2 <AmiBlitz3.ab3@4683>   JSR writeword
000217A8 <AmiBlitz3.ab3@4684>   ADDQ.w #1,regnum
000217AA <AmiBlitz3.ab3@4687> RTS
000217AC <AmiBlitz3.ab3@4693>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
000217AE <AmiBlitz3.ab3@4694>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
000217B0 <AmiBlitz3.ab3@4695>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
000217B2 <AmiBlitz3.ab3@4699> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
000217B4 <AmiBlitz3.ab3@4700>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
000217B6 <AmiBlitz3.ab3@4701>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
000217B8 <AmiBlitz3.ab3@4705> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
000217BA <AmiBlitz3.ab3@4706>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
000217BC <AmiBlitz3.ab3@4707>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
000217BE <AmiBlitz3.ab3@4711> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
000217C0 <AmiBlitz3.ab3@4714> srctype:    Ds.w 1
000217C4 <AmiBlitz3.ab3@4719>   BSR.w excget
000217C8 <AmiBlitz3.ab3@4720>   CMP.w #$2C,D0
000217CC <AmiBlitz3.ab3@4721>    BNE.w syntaxerr
000217D2 <AmiBlitz3.ab3@4722>   MOVE.b D2,srctype
000217D8 <AmiBlitz3.ab3@4723>   MOVE.w pusha2,D1
000217DE <AmiBlitz3.ab3@4724>   JSR writeword
000217E2 <AmiBlitz3.ab3@4725>   BSR.w get1bytemain
000217E6 <AmiBlitz3.ab3@4726>   BSR.w excget
000217EC <AmiBlitz3.ab3@4727>   CMP.b srctype,D2
000217F0 <AmiBlitz3.ab3@4728>    BNE.w excerr2
000217F6 <AmiBlitz3.ab3@4729>   MOVE.w pulla1,D1
000217FC <AmiBlitz3.ab3@4730>    JSR writeword
00021800 <AmiBlitz3.ab3@4731>   CMP.b #$2,D2
00021804 <AmiBlitz3.ab3@4732>    BCS.w JL_0_4B2A
00021808 <AmiBlitz3.ab3@4733>    BEQ.w JL_0_4B1E
0002180C <AmiBlitz3.ab3@4734>   LEA swapl(PC),A0
00021810 <AmiBlitz3.ab3@4735>   LEA swaplf(PC),A1
00021816 <AmiBlitz3.ab3@4736> JMP pokecode
0002181A <AmiBlitz3.ab3@4739>   LEA swapw(PC),A0
0002181E <AmiBlitz3.ab3@4740>   LEA swapwf(PC),A1
00021824 <AmiBlitz3.ab3@4741> JMP pokecode
00021828 <AmiBlitz3.ab3@4744>   LEA swapb(PC),A0
0002182C <AmiBlitz3.ab3@4745>   LEA swapbf(PC),A1
00021832 <AmiBlitz3.ab3@4746> JMP pokecode
00021838 <AmiBlitz3.ab3@4750>   JSR getparameter
0002183C <AmiBlitz3.ab3@4751>   BSR.w JL_0_8E3C
00021840 <AmiBlitz3.ab3@4752>   BSR.w calcvar
00021844 <AmiBlitz3.ab3@4753>   BTST #$E,D2
00021848 <AmiBlitz3.ab3@4754>    BEQ.w JL_0_4B4E
0002184C <AmiBlitz3.ab3@4755>   MOVE.b #$4,D2
0002184E <AmiBlitz3.ab3@4758>   TST.b D2
00021852 <AmiBlitz3.ab3@4759>    BEQ.w excerr
00021856 <AmiBlitz3.ab3@4760>   BTST #$F,D2
0002185A <AmiBlitz3.ab3@4761>    BNE.w JL_0_4B6A
00021860 <AmiBlitz3.ab3@4762>   MOVE.w leaamp,D1
00021866 <AmiBlitz3.ab3@4763>    JSR pokewda5s
00021868 <AmiBlitz3.ab3@4764>   MOVE.w D3,D1
0002186E <AmiBlitz3.ab3@4765> JMP writeword
00021870 <AmiBlitz3.ab3@4768> RTS
00021876 <AmiBlitz3.ab3@4778>   MOVE.l mempool,a0
0002187C <AmiBlitz3.ab3@4779>   MOVEA.l _execbase,A6
00021880 <AmiBlitz3.ab3@4780> JMP _AllocPooled(a6)
00021884 <AmiBlitz3.ab3@4784>   MOVE.w #$BF00,D1
0002188A <AmiBlitz3.ab3@4785> JMP Atokejsr
0002188E <AmiBlitz3.ab3@4789>   CMP.w #-$7FFA,D0
00021892 <AmiBlitz3.ab3@4790>    BEQ.w popreturn
00021896 <AmiBlitz3.ab3@4791>   CMP.w #-$7FEA,D0
0002189A <AmiBlitz3.ab3@4792>    BEQ.w popnext2
0002189E <AmiBlitz3.ab3@4793>   CMP.w #-$7FF2,D0
000218A2 <AmiBlitz3.ab3@4794>    BEQ.w popselect2
000218A6 <AmiBlitz3.ab3@4795>   CMP.w #-$7FF5,D0
000218AA <AmiBlitz3.ab3@4796>    BEQ.w get1bytemain
000218AE <AmiBlitz3.ab3@4797>   CMP.w #-$7FF4,D0
000218B2 <AmiBlitz3.ab3@4798>    BEQ.w get1bytemain
000218B6 <AmiBlitz3.ab3@4799>   CMP.w #-$7FEC,D0
000218BA <AmiBlitz3.ab3@4800>    BEQ.w get1bytemain
000218BE <AmiBlitz3.ab3@4801>   CMP.w #-$7F45,D0
000218C2 <AmiBlitz3.ab3@4802>    BEQ.w get1bytemain
000218C6 <AmiBlitz3.ab3@4803> BRA.w syntaxerr
000218CC <AmiBlitz3.ab3@4806>   TST.b debugmode
000218D0 <AmiBlitz3.ab3@4807>    BEQ.w popreturn__norerr
000218D4 <AmiBlitz3.ab3@4808>   LEA popreturn__rfix(PC),A0
000218D8 <AmiBlitz3.ab3@4809>   LEA popreturn__rfixf(PC),A1
000218DE <AmiBlitz3.ab3@4810>    JSR pokecode
000218E2 <AmiBlitz3.ab3@4811>   MOVE.w #$C305,D1
000218E8 <AmiBlitz3.ab3@4812>    JSR Atokejsr
000218EC <AmiBlitz3.ab3@4813>   MOVE.w popreturn__rfix2(PC),D1
000218F2 <AmiBlitz3.ab3@4815>    JSR writeword
000218F6 <AmiBlitz3.ab3@4816> BRA.w get1bytemain
000218FC <AmiBlitz3.ab3@4820>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00021900 <AmiBlitz3.ab3@4821>   BEQ.w popreturn__rfix2
00021906 <AmiBlitz3.ab3@4824>   JSR $20000                                               ;reass
00021908 <AmiBlitz3.ab3@4827>   ADDQ.w #6,A7
0002190C <AmiBlitz3.ab3@4831>   MOVE.w popreturn__sfix(PC),D1
00021912 <AmiBlitz3.ab3@4832>   JSR writeword
00021916 <AmiBlitz3.ab3@4833> BRA.w get1bytemain
00021918 <AmiBlitz3.ab3@4838>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0002191E <AmiBlitz3.ab3@4843>   MOVE.l firstfor,D0
00021922 <AmiBlitz3.ab3@4844>    BEQ.w noforerr
00021924 <AmiBlitz3.ab3@4845>   MOVEA.l D0,A2
00021928 <AmiBlitz3.ab3@4846>    BSR.w get1bytemain
0002192C <AmiBlitz3.ab3@4847>   BSR.w popnext
00021932 <AmiBlitz3.ab3@4850>   TST.b debugmode
00021936 <AmiBlitz3.ab3@4851>    BEQ.w popnext3__ner
0002193C <AmiBlitz3.ab3@4852>   MOVE.l nextfixw2,D1
00021942 <AmiBlitz3.ab3@4853>   CMPI.w #$3,$C(A2)
00021946 <AmiBlitz3.ab3@4854>    BCS.w writelong2
0002194C <AmiBlitz3.ab3@4855>   MOVE.l nextfixl2,D1
00021952 <AmiBlitz3.ab3@4856> writelong2 JMP  writelong
00021958 <AmiBlitz3.ab3@4859>   CMPI.w #$3,$C(A2)
0002195C <AmiBlitz3.ab3@4860>    BCS.w popnext3__skip2
00021962 <AmiBlitz3.ab3@4861>   MOVE.l nextfixl,D1
00021968 <AmiBlitz3.ab3@4862>   JMP writelong
0002196E <AmiBlitz3.ab3@4865>   MOVE.w nextfixw,D1
00021974 <AmiBlitz3.ab3@4866> JMP writeword
00021978 <AmiBlitz3.ab3@4870>   MOVE.w $C(A2),D0
0002197E <AmiBlitz3.ab3@4871>   TST.b debugmode
00021982 <AmiBlitz3.ab3@4872>    BEQ.w popnext__norunerr
00021986 <AmiBlitz3.ab3@4873>   MOVE.w #$C306,D1
0002198A <AmiBlitz3.ab3@4874>   CMP.w #$3,D0
0002198E <AmiBlitz3.ab3@4875>    BCS.w popnext__oktc
00021990 <AmiBlitz3.ab3@4876>   ADDQ.w #1,D1
00021992 <AmiBlitz3.ab3@4879>   MOVE.l A2,-(A7)
00021998 <AmiBlitz3.ab3@4880>   JSR Atokejsr
0002199A <AmiBlitz3.ab3@4881>   MOVEA.l (A7)+,A2
0002199C <AmiBlitz3.ab3@4884> RTS
000219A2 <AmiBlitz3.ab3@4888>   MOVE.l firstsel,D0
000219A6 <AmiBlitz3.ab3@4889>    BEQ.w eselerr
000219A8 <AmiBlitz3.ab3@4890>   MOVEA.l D0,A2
000219AC <AmiBlitz3.ab3@4891>    BSR.w get1bytemain
000219B0 <AmiBlitz3.ab3@4894>   MOVE.w $C(A2),D2
000219B6 <AmiBlitz3.ab3@4895>   TST.b debugmode
000219BA <AmiBlitz3.ab3@4896>    BEQ.w popselect__norerr
000219BE <AmiBlitz3.ab3@4897>   MOVE.w #$C313,D1
000219C2 <AmiBlitz3.ab3@4898>   CMP.w #$3,D2
000219C6 <AmiBlitz3.ab3@4899>    BCS.w popselect__chkit
000219C8 <AmiBlitz3.ab3@4900>   ADDQ.w #1,D1
000219CE <AmiBlitz3.ab3@4903>   JSR Atokejsr                                             ;make sure next thing on stack
000219D0 <AmiBlitz3.ab3@4907>   MOVEQ.l #$02,D1
000219D4 <AmiBlitz3.ab3@4908>   CMP.w #$3,D2
000219D8 <AmiBlitz3.ab3@4909>    BCS.w popselect__doit
000219DA <AmiBlitz3.ab3@4910>   MOVEQ.l #$04,D1
000219DE <AmiBlitz3.ab3@4911>   CMP.w #$7,D2
000219E2 <AmiBlitz3.ab3@4912>    BCS.w popselect__doit
000219E8 <AmiBlitz3.ab3@4913>   LEA endselstr,A0
000219EE <AmiBlitz3.ab3@4914>   LEA endselstrf,A1
000219F4 <AmiBlitz3.ab3@4915>   TST.b debugmode
000219F8 <AmiBlitz3.ab3@4916>    BEQ.w popselect__norerr3
000219FE <AmiBlitz3.ab3@4917>   LEA endselstrf2,A1
00021A04 <AmiBlitz3.ab3@4920>   JSR pokecode
00021A08 <AmiBlitz3.ab3@4921>   MOVE.w #$C003,D1                                         ;global freemem
00021A0E <AmiBlitz3.ab3@4922> JMP Atokejsr
00021A14 <AmiBlitz3.ab3@4925>   TST.b debugmode
00021A18 <AmiBlitz3.ab3@4926>    BEQ.w popselect__norerr2
00021A1A <AmiBlitz3.ab3@4927>   ADDQ.w #2,D1                                             ;for the "sE"
00021A1C <AmiBlitz3.ab3@4930>   LSL.w #8,D1
00021A1E <AmiBlitz3.ab3@4931>   LSL.w #1,D1
00021A24 <AmiBlitz3.ab3@4932>   OR.w endsel,D1
00021A2A <AmiBlitz3.ab3@4933> JMP writeword
00021A2E <AmiBlitz3.ab3@4936> firstrep:    Ds.l 1
00021A32 <AmiBlitz3.ab3@4937> replineat:   Ds.l 1
00021A38 <AmiBlitz3.ab3@4946>   CLR.l fp0addr
00021A42 <AmiBlitz3.ab3@4947>   MOVE.l linenumat,replineat
00021A44 <AmiBlitz3.ab3@4948>   MOVEQ.l #$08,D0
00021A4A <AmiBlitz3.ab3@4949>   MOVEA.l _execbase,A6
00021A50 <AmiBlitz3.ab3@4950>   MOVE.l mempool,a0
00021A54 <AmiBlitz3.ab3@4951>   JSR _AllocPooled(a6)
00021A56 <AmiBlitz3.ab3@4953>   MOVEA.l D0,A0
00021A5A <AmiBlitz3.ab3@4954>   MOVE.l firstrep(PC),(A0)
00021A60 <AmiBlitz3.ab3@4955>   MOVE.l A0,firstrep
00021A68 <AmiBlitz3.ab3@4956>   MOVE.l destpointer,$4(A0)
00021A6A <AmiBlitz3.ab3@4957> RTS
00021A70 <AmiBlitz3.ab3@4960> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00021A74 <AmiBlitz3.ab3@4963>   LEA str_temp(PC),A1
00021A76 <AmiBlitz3.ab3@4964>   CLR.w (A1)
00021A7A <AmiBlitz3.ab3@4965>   CLR.l $2(A1)
00021A7C <AmiBlitz3.ab3@4968>   MOVEQ.l #$04,D0
00021A80 <AmiBlitz3.ab3@4971>     MOVE.b $1(A1),(A1)+
00021A84 <AmiBlitz3.ab3@4972>   DBF D0,check_for_infoextention__loop
00021A88 <AmiBlitz3.ab3@4977>   LEA str_temp(PC),A1
00021A8A <AmiBlitz3.ab3@4978>   MOVE.b (A0),D0
00021A8E <AmiBlitz3.ab3@4979>   ORI.b #$20,D0
00021A92 <AmiBlitz3.ab3@4980>   MOVE.b D0,$5(A1)
00021A94 <AmiBlitz3.ab3@4981>   TST.b (A0)+
00021A98 <AmiBlitz3.ab3@4982>    BNE.w check_for_infoextention__loop2
00021A9C <AmiBlitz3.ab3@4983>   CMPI.w #$2E69,(A1)+                                      ;".i"
00021AA0 <AmiBlitz3.ab3@4984>    BNE.w check_for_infoextention__no
00021AA6 <AmiBlitz3.ab3@4985>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00021AA8 <AmiBlitz3.ab3@4988> RTS
00021AAC <AmiBlitz3.ab3@4992>   BPL.w gettokeps__evaltoke
00021AAE <AmiBlitz3.ab3@4993>   MOVE.w D0,D1
00021AB2 <AmiBlitz3.ab3@4994>   ANDI.w #$7F80,D1
00021AB6 <AmiBlitz3.ab3@4995>    BEQ.w tokeerr
00021ABA <AmiBlitz3.ab3@4996>   BCLR #$F,D0
00021ABC <AmiBlitz3.ab3@4997>   MOVE.w D0,D4                                             ;got toke number
00021AC0 <AmiBlitz3.ab3@4998>   BSR.w get1bytemain
00021AC4 <AmiBlitz3.ab3@4999> BRA.w gettokeps__gotnum
00021ACA <AmiBlitz3.ab3@5002>   JSR JL_0_BF6A
00021AD0 <AmiBlitz3.ab3@5003>   CMP.l #MaxWord,D3
00021AD4 <AmiBlitz3.ab3@5004>    BHI.w tokeerr
00021AD6 <AmiBlitz3.ab3@5005>   TST.w D6
00021ADA <AmiBlitz3.ab3@5006>    BNE.w tokeerr
00021ADC <AmiBlitz3.ab3@5007>   MOVE.w D3,D4
00021ADE <AmiBlitz3.ab3@5010>   MOVEQ.l #$00,D5
00021AE2 <AmiBlitz3.ab3@5011>   CMP.w #$2C,D0
00021AE6 <AmiBlitz3.ab3@5012>    BNE.w gettokeps__gotfrom
00021AE8 <AmiBlitz3.ab3@5013>   MOVE.w D4,-(A7)
00021AEE <AmiBlitz3.ab3@5014>    JSR AJL_0_BF6E
00021AF4 <AmiBlitz3.ab3@5015>   CMP.l #MaxWord,D3
00021AF8 <AmiBlitz3.ab3@5016>    BHI.w tokeerr
00021AFA <AmiBlitz3.ab3@5017>   TST.w D6
00021AFE <AmiBlitz3.ab3@5018>    BNE.w tokeerr
00021B00 <AmiBlitz3.ab3@5019>   MOVE.w D3,D5
00021B02 <AmiBlitz3.ab3@5020>   MOVE.w (A7)+,D4
00021B04 <AmiBlitz3.ab3@5023> RTS                                                        ;d4=toke, d5=form
00021B06 <AmiBlitz3.ab3@5027>   TST.w D0
00021B0A <AmiBlitz3.ab3@5028>    BSR.w gettokeps
00021B0E <AmiBlitz3.ab3@5029>   MOVE.w #$4EB9,D1
00021B14 <AmiBlitz3.ab3@5030>   JSR writeword
00021B18 <AmiBlitz3.ab3@5031>   BSR.w addoff
00021B1A <AmiBlitz3.ab3@5032>   MOVE.w D5,D1
00021B1E <AmiBlitz3.ab3@5033>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00021B20 <AmiBlitz3.ab3@5034>   SWAP D1
00021B22 <AmiBlitz3.ab3@5035>   MOVE.w D4,D1
00021B28 <AmiBlitz3.ab3@5036> JMP writelong
00021B2A <AmiBlitz3.ab3@5040>   TST.w D0
00021B2E <AmiBlitz3.ab3@5041>    BSR.w gettokeps
00021B32 <AmiBlitz3.ab3@5042>   MOVE.w #$4EB9,D1
00021B38 <AmiBlitz3.ab3@5043>   JSR writeword
00021B3C <AmiBlitz3.ab3@5044>   BSR.w addoff
00021B3E <AmiBlitz3.ab3@5045>   MOVE.w D5,D1
00021B42 <AmiBlitz3.ab3@5046>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00021B44 <AmiBlitz3.ab3@5047>   SWAP D1
00021B46 <AmiBlitz3.ab3@5048>   MOVE.w D4,D1
00021B4C <AmiBlitz3.ab3@5049>   JMP writelong
00021B52 <AmiBlitz3.ab3@5053>   JSR JL_0_BF6A
00021B58 <AmiBlitz3.ab3@5054>   CMP.l #$10000,D3
00021B5C <AmiBlitz3.ab3@5055>    BCC.w tokeerr
00021B5E <AmiBlitz3.ab3@5056>   MOVE.w D3,D1
00021B64 <AmiBlitz3.ab3@5057> JMP Atokejsr
00021B68 <AmiBlitz3.ab3@5061>   BSR.w gettokeps
00021B6C <AmiBlitz3.ab3@5062>   MOVE.w #$4EB9,D1
00021B72 <AmiBlitz3.ab3@5063>   JSR writeword
00021B78 <AmiBlitz3.ab3@5064>   MOVE.l destpointer,D3
00021B80 <AmiBlitz3.ab3@5065>   BTST #$7,blitzmode
00021B84 <AmiBlitz3.ab3@5066>    BEQ.w do_TokeJsr__inamiga
00021B88 <AmiBlitz3.ab3@5067>   BSET #$E,D5
00021B8C <AmiBlitz3.ab3@5070>   BSR.w JL_0_6E86
00021B90 <AmiBlitz3.ab3@5071>   BSR.w addoff
00021B96 <AmiBlitz3.ab3@5072>   JMP writelong
00021B9A <AmiBlitz3.ab3@5076>   BEQ.w do_VWait__zero
00021B9C <AmiBlitz3.ab3@5077>   MOVEQ.l #$02,D2                                          ;get a word
00021BA2 <AmiBlitz3.ab3@5079>   JSR bakeval
00021BA6 <AmiBlitz3.ab3@5080>   MOVE.w fvwait(PC),D1
00021BAA <AmiBlitz3.ab3@5081> BRA.w do_VWait__vcont
00021BAE <AmiBlitz3.ab3@5084>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00021BB4 <AmiBlitz3.ab3@5087>   JSR writeword
00021BB8 <AmiBlitz3.ab3@5088>   MOVE.w #$C104,D1
00021BBE <AmiBlitz3.ab3@5089> JMP Atokejsr
00021BC0 <AmiBlitz3.ab3@5093>   SUBQ.w #1,D0
00021BC6 <AmiBlitz3.ab3@5096>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00021BCA <AmiBlitz3.ab3@5099>   Dc.l $426d0001                                           ;clr.w $0(A5)
00021BCE <AmiBlitz3.ab3@5103>   MOVE.b debugmode(PC),D1
00021BD2 <AmiBlitz3.ab3@5104>   BEQ.b debugmode_codelabel__skip
00021BD6 <AmiBlitz3.ab3@5105>   MOVE.w #$D500,D1
00021BDC <AmiBlitz3.ab3@5106> JMP Atokejsr
00021BDE <AmiBlitz3.ab3@5109> RTS
00021BE6 <AmiBlitz3.ab3@5113>   BSET #$0,blitzmode
00021BEE <AmiBlitz3.ab3@5114>   BSET #$7,blitzmode
00021BF2 <AmiBlitz3.ab3@5115>   MOVE.w #$C200,D1
00021BF8 <AmiBlitz3.ab3@5116>   JSR Atokejsr
00021BFE <AmiBlitz3.ab3@5117>   TST.b debugmode
00021C02 <AmiBlitz3.ab3@5118>    BEQ.w do_BLITZ__done
00021C06 <AmiBlitz3.ab3@5119>   MOVE.w cgoblitz(PC),D1
00021C0C <AmiBlitz3.ab3@5120>   JSR writeword
00021C0E <AmiBlitz3.ab3@5121>   MOVEQ.l #-$01,D1
00021C14 <AmiBlitz3.ab3@5122>   JSR writeword
00021C1A <AmiBlitz3.ab3@5123>   JSR getbbase
00021C20 <AmiBlitz3.ab3@5124>   JSR writeword
00021C24 <AmiBlitz3.ab3@5127> BRA.w debugmode_codelabel
00021C28 <AmiBlitz3.ab3@5131>   MOVE.w #$C201,D1
00021C2C <AmiBlitz3.ab3@5132> BRA.w do_AMIGA__toamode
00021C30 <AmiBlitz3.ab3@5136>   MOVE.W  #$C202,D1
00021C38 <AmiBlitz3.ab3@5139>   BSET #$0,blitzmode
00021C40 <AmiBlitz3.ab3@5140>   BCLR #$7,blitzmode
00021C46 <AmiBlitz3.ab3@5141>   JSR Atokejsr
00021C4C <AmiBlitz3.ab3@5142>   TST.b debugmode
00021C50 <AmiBlitz3.ab3@5143>    BEQ.w do_AMIGA__done
00021C54 <AmiBlitz3.ab3@5144>   MOVE.w cgoamiga(PC),D1
00021C5A <AmiBlitz3.ab3@5145>   JSR writeword
00021C60 <AmiBlitz3.ab3@5146>   JSR getbbase
00021C66 <AmiBlitz3.ab3@5147>   JSR writeword
00021C6A <AmiBlitz3.ab3@5150> BRA.w debugmode_codelabel
00021C6E <AmiBlitz3.ab3@5154>   MOVEM.l D2-D7/A2-A4,-(A7)
00021C72 <AmiBlitz3.ab3@5157>   MOVEM.l (A7)+,D2-D7/A2-A4
00021C78 <AmiBlitz3.ab3@5161>   JSR JL_0_BF6A
00021C7E <AmiBlitz3.ab3@5162>   CMP.l #$E,D3
00021C82 <AmiBlitz3.ab3@5163>    BCC.w interr4
00021C86 <AmiBlitz3.ab3@5164>   MOVE.w #$7000,D1
00021C88 <AmiBlitz3.ab3@5165>   OR.w D3,D1
00021C8E <AmiBlitz3.ab3@5166>   JSR writeword
00021C92 <AmiBlitz3.ab3@5167>   MOVE.w #$C101,D1
00021C98 <AmiBlitz3.ab3@5168> JMP Atokejsr                                               ;clear the interupt
00021C9A <AmiBlitz3.ab3@5171> inerr:       Ds.w 1                                        ;flag - in error trap mode
00021C9E <AmiBlitz3.ab3@5172> errjmp:      Ds.l 1                                        ;where err jump is
00021CA2 <AmiBlitz3.ab3@5173> errcode:     Ds.l 1
00021CA6 <AmiBlitz3.ab3@5177>   MOVE.W  #$D202,D1
00021CAC <AmiBlitz3.ab3@5178> JMP Atokejsr                                               ;BRA.W Atokejsr
00021CB0 <AmiBlitz3.ab3@5182>   MOVE.w inerr(PC),D1
00021CB4 <AmiBlitz3.ab3@5183>    BEQ.w errerr3
00021CBA <AmiBlitz3.ab3@5184>   CLR.w inerr
00021CC0 <AmiBlitz3.ab3@5185>   MOVE.w dontwrite,D1
00021CC4 <AmiBlitz3.ab3@5186>    BNE.w doendseterr__skip
00021CC8 <AmiBlitz3.ab3@5187>   MOVEA.l errjmp(PC),A0
00021CCE <AmiBlitz3.ab3@5188>   MOVE.l destpointer,(A0)
00021CD2 <AmiBlitz3.ab3@5191> BRA.w get1bytemain
00021CD6 <AmiBlitz3.ab3@5195>   MOVE.w #$D205,D1
00021CDC <AmiBlitz3.ab3@5196> JMP Atokejsr
00021CE2 <AmiBlitz3.ab3@5200>   MOVE.w proceduremode,D1
00021CE6 <AmiBlitz3.ab3@5201>    BNE.w errerr1
00021CEA <AmiBlitz3.ab3@5202>   MOVE.w inerr(PC),D1
00021CEE <AmiBlitz3.ab3@5203>    BNE.w errerr2
00021CF4 <AmiBlitz3.ab3@5204>   LEA inerr,a0
00021CF6 <AmiBlitz3.ab3@5205>   NOT.w (a0)                                               ;reass
00021CFA <AmiBlitz3.ab3@5206>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00021D00 <AmiBlitz3.ab3@5207>   JSR writeword
00021D0A <AmiBlitz3.ab3@5208>   MOVE.l destpointer,errcode
00021D0E <AmiBlitz3.ab3@5209>   BSR.w addoff
00021D12 <AmiBlitz3.ab3@5210>   BSR.w writelong
00021D16 <AmiBlitz3.ab3@5211>   MOVE.w #$D201,D1
00021D1C <AmiBlitz3.ab3@5212>   JSR Atokejsr
00021D20 <AmiBlitz3.ab3@5213>   MOVE.w #$4EF9,D1                                         ;JMP
00021D24 <AmiBlitz3.ab3@5214>   BSR.w writeword
00021D2E <AmiBlitz3.ab3@5215>   MOVE.l destpointer,errjmp
00021D32 <AmiBlitz3.ab3@5216>   BSR.w addoff
00021D36 <AmiBlitz3.ab3@5217>   BSR.w writelong
00021D3C <AmiBlitz3.ab3@5218>   MOVE.w dontwrite,D1
00021D40 <AmiBlitz3.ab3@5219>    BNE.w do_SetErr__skip
00021D44 <AmiBlitz3.ab3@5220>   MOVEA.l errcode(PC),A0
00021D4A <AmiBlitz3.ab3@5221>   MOVE.l destpointer,(A0)
00021D4C <AmiBlitz3.ab3@5224> RTS
00021D50 <AmiBlitz3.ab3@5227> intlineat:  Ds.l 1
00021D52 <AmiBlitz3.ab3@5231>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00021D56 <AmiBlitz3.ab3@5232>   BSR.w errchx
00021D5C <AmiBlitz3.ab3@5233>   MOVE.w D1,intstring
00021D66 <AmiBlitz3.ab3@5234>   MOVE.l linenumat,intlineat
00021D6C <AmiBlitz3.ab3@5235>   JSR JL_0_BF6A                                           ;get constant - int level
00021D72 <AmiBlitz3.ab3@5236>   CMP.l #$E,D3
00021D76 <AmiBlitz3.ab3@5237>    BCC.w interr4
00021D7C <AmiBlitz3.ab3@5238>   ST intsused
00021D82 <AmiBlitz3.ab3@5239>   MOVE.w D3,intlevel
00021D86 <AmiBlitz3.ab3@5240>   MOVE.w #$7000,D1
00021D88 <AmiBlitz3.ab3@5241>   OR.w D3,D1                                              
00021D8C <AmiBlitz3.ab3@5242>   BSR.w writeword                                         ;moveq #x,d0
00021D90 <AmiBlitz3.ab3@5243>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00021D94 <AmiBlitz3.ab3@5244>   BSR.w writeword
00021D98 <AmiBlitz3.ab3@5245>   BSR.w addoff
00021D9E <AmiBlitz3.ab3@5246>   MOVE.l destpointer,-(A7)
00021DA2 <AmiBlitz3.ab3@5247>   BSR.w writelong
00021DA6 <AmiBlitz3.ab3@5248>   MOVE.w #$C100,D1
00021DAC <AmiBlitz3.ab3@5249>   JSR Atokejsr
00021DB0 <AmiBlitz3.ab3@5250>   MOVE.w #$4EF9,D1                                        ;jmp
00021DB4 <AmiBlitz3.ab3@5251>   BSR.w writeword
00021DB8 <AmiBlitz3.ab3@5252>   BSR.w addoff
00021DC2 <AmiBlitz3.ab3@5253>   MOVE.l destpointer,intjmpat
00021DC6 <AmiBlitz3.ab3@5254>   BSR.w writelong
00021DC8 <AmiBlitz3.ab3@5255>   MOVEA.l (A7)+,A0
00021DCE <AmiBlitz3.ab3@5256>   MOVE.w dontwrite,D1
00021DD2 <AmiBlitz3.ab3@5257>   BNE.w do_SetInt__dontpoke
00021DD8 <AmiBlitz3.ab3@5258>   MOVE.l destpointer,(A0)
00021DDC <AmiBlitz3.ab3@5261>   MOVE.l intstart0(PC),D1
00021DE0 <AmiBlitz3.ab3@5262>   BSR.w writelong
00021DE6 <AmiBlitz3.ab3@5263>   TST.b debugmode
00021DEA <AmiBlitz3.ab3@5264>    BEQ.w do_SetInt__norerr
00021DEC <AmiBlitz3.ab3@5268>   MOVEQ.l #$02,D1
00021DF0 <AmiBlitz3.ab3@5269>   BSR.w writetrap
00021DF4 <AmiBlitz3.ab3@5270>   BSR.w addoff
00021DFE <AmiBlitz3.ab3@5271>   MOVE.l destpointer,intcleanat
00021E02 <AmiBlitz3.ab3@5272>   BSR.w writelong
00021E08 <AmiBlitz3.ab3@5273>   MOVE.w intlevel,D1
00021E0C <AmiBlitz3.ab3@5274>   BSR.w writeword
00021E10 <AmiBlitz3.ab3@5275>   MOVE.w #$C30B,D1                                         ;disable stack checks
00021E16 <AmiBlitz3.ab3@5276>   JSR Atokejsr
00021E1A <AmiBlitz3.ab3@5279>   MOVE.w #$FED3,D1
00021E1E <AmiBlitz3.ab3@5280>   BSR.w uselib
00021E22 <AmiBlitz3.ab3@5281>   MOVE.w #$C102,D1
00021E28 <AmiBlitz3.ab3@5282>   JSR Atokejsr
00021E30 <AmiBlitz3.ab3@5283>   MOVE.w #-1,lasta6
00021E3A <AmiBlitz3.ab3@5284>   MOVE.l linenumat,intline
00021E3C <AmiBlitz3.ab3@5285> RTS
00021E3E <AmiBlitz3.ab3@5289>             Ds.w 1                                         ;??looks like obsolved data??
00021E42 <AmiBlitz3.ab3@5291> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00021E46 <AmiBlitz3.ab3@5293> intjmpat:   Ds.l 1
00021E4A <AmiBlitz3.ab3@5294> intline:    Ds.l 1
00021E4C <AmiBlitz3.ab3@5295> intstring:  Ds.w 1                                         ;flag 0 = no setint
00021E4E <AmiBlitz3.ab3@5298> intlevel:   Ds.w 1
00021E52 <AmiBlitz3.ab3@5299> intcleanat: Ds.l 1
00021E56 <AmiBlitz3.ab3@5300> ret15add:   Ds.l 1
00021E58 <AmiBlitz3.ab3@5301> ret15cc:    Ds.w 1
00021E60 <AmiBlitz3.ab3@5305>   ADDI.l #$12,$2(A7)
00021E68 <AmiBlitz3.ab3@5306>   MOVE.l $2(A7),ret15add
00021E6E <AmiBlitz3.ab3@5307>   MOVE.w (A7),ret15cc
00021E76 <AmiBlitz3.ab3@5308>   MOVE.l #directdo,$2(A7)
00021E78 <AmiBlitz3.ab3@5309> RTE
00021E7C <AmiBlitz3.ab3@5318>   MOVE.l ret15add(PC),-(A7)
00021E80 <AmiBlitz3.ab3@5319>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00021E84 <AmiBlitz3.ab3@5320>   MOVEM.l D0-D7/A0-A6,-(A7)
00021E8E <AmiBlitz3.ab3@5321>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00021E98 <AmiBlitz3.ab3@5322>   MOVE.l destbufferstart,trap15temp2
00021EA2 <AmiBlitz3.ab3@5323>   MOVE.l libend,templibend
00021EAC <AmiBlitz3.ab3@5324>   MOVE.l data1start,tempdata1start
00021EB2 <AmiBlitz3.ab3@5325>   CLR.l hunkoffsetcounter
00021EB8 <AmiBlitz3.ab3@5327>   MOVE.l directbuffer,a0
00021EBE <AmiBlitz3.ab3@5331>   MOVE.l a0,destbufferstart
00021EC4 <AmiBlitz3.ab3@5332>   ADD.l #3900,a0
00021ECA <AmiBlitz3.ab3@5333>   MOVE.l a0,destbufferend
00021ED0 <AmiBlitz3.ab3@5334>   TST.b exdebug
00021ED4 <AmiBlitz3.ab3@5335>   BEQ 'l1
00021EDA <AmiBlitz3.ab3@5336>   MOVE.l a0,libend
00021EE0 <AmiBlitz3.ab3@5337>   ADD.l #4000,a0
00021EE6 <AmiBlitz3.ab3@5338>   MOVE.l a0,data1start
00021EF0 <AmiBlitz3.ab3@5341>   MOVE.l #dircont,errcont
00021EF6 <AmiBlitz3.ab3@5342> 
00021EFC <AmiBlitz3.ab3@5343>   MOVE.l A7,errstack
00021F04 <AmiBlitz3.ab3@5344>   MOVE.w #$FFFF,dirmode
00021F08 <AmiBlitz3.ab3@5346>     MOVEA.l ret15add(PC),A1
00021F0E <AmiBlitz3.ab3@5347>     MOVE.w -(A1),blitzmode
00021F10 <AmiBlitz3.ab3@5348>     CLR.l -(A1)
00021F16 <AmiBlitz3.ab3@5349>     MOVE.l -(A1),firstglob
00021F1C <AmiBlitz3.ab3@5350>     MOVE.l -(A1),firstlocal
00021F22 <AmiBlitz3.ab3@5352>   CLR.w proceduremode
00021F28 <AmiBlitz3.ab3@5353>   MOVE.l firstglob,D0
00021F2E <AmiBlitz3.ab3@5354>   OR.l firstlocal,D0
00021F32 <AmiBlitz3.ab3@5355>   BEQ.b directdo__skip
00021F38 <AmiBlitz3.ab3@5356>   NOT.w proceduremode
00021F3A <AmiBlitz3.ab3@5359>   MOVEA.l -(A1),A0                                         ;address of string
00021F3C <AmiBlitz3.ab3@5363>   MOVE.l A0,-(A7)
00021F7A <AmiBlitz3.ab3@5366>   !ComData_GetL{comFunc_DebugTrap,A1}
00021F7C <AmiBlitz3.ab3@5368>   JSR (A1)                                                 ;tokenise line.....
00021F7E <AmiBlitz3.ab3@5370>   MOVEA.l (A7)+,A5
00021F88 <AmiBlitz3.ab3@5371>   MOVE.l directbuffer,destpointer
00021F8E <AmiBlitz3.ab3@5372>   TST.b exdebug
00021F92 <AmiBlitz3.ab3@5373>   BEQ 'noexdebug
00021F94 <AmiBlitz3.ab3@5374>   MOVE.l a5,a0
00021F9A <AmiBlitz3.ab3@5375>   MOVE.l #200,d0
00021FA0 <AmiBlitz3.ab3@5378>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00021FA4 <AmiBlitz3.ab3@5379>   DBF d0,'l1
00021FAA <AmiBlitz3.ab3@5384>   MOVE.l destpointer,a0
00021FAE <AmiBlitz3.ab3@5385>   MOVE.w #$207c,(a0)+
00021FB0 <AmiBlitz3.ab3@5386>   MOVE.l a5,d0
00021FB6 <AmiBlitz3.ab3@5387>   ADD.l #$206,d0                                           ;constant from debuglib
00021FB8 <AmiBlitz3.ab3@5388>   MOVE.l d0,(a0)+
00021FBE <AmiBlitz3.ab3@5389>   MOVE.l a0,destpointer
00021FC0 <AmiBlitz3.ab3@5390>   MOVE.l a5,a0
00021FC4 <AmiBlitz3.ab3@5391>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00021FCA <AmiBlitz3.ab3@5392>   MOVE.l #"$520",(a0)+
00021FCE <AmiBlitz3.ab3@5393>   MOVE.w #"4:",(a0)+
00021FD4 <AmiBlitz3.ab3@5396>   CLR.w dontwrite
00021FDC <AmiBlitz3.ab3@5397>   MOVE.w #$FFFF,lasta6
00021FE0 <AmiBlitz3.ab3@5398>   BSR.w compile_line                                        ;.....compile it
00021FE6 <AmiBlitz3.ab3@5399>   TST.b exdebug
00021FEA <AmiBlitz3.ab3@5400>   BEQ 'noexdebug2
00021FF0 <AmiBlitz3.ab3@5401>   JSR JL_0_6C76
00021FF6 <AmiBlitz3.ab3@5404>   CLR.w proceduremode
00021FFA <AmiBlitz3.ab3@5405>   BSR.w errchx
00021FFE <AmiBlitz3.ab3@5406>   MOVE.w #$4EF9,D1
00022002 <AmiBlitz3.ab3@5407>   BSR.w writeword                                          ;JMP
00022006 <AmiBlitz3.ab3@5408>   MOVE.l ret15add(PC),D1
0002200A <AmiBlitz3.ab3@5409>   BSR.w writelong                                          ;jmp to done
00022010 <AmiBlitz3.ab3@5410>   MOVE.w dontwrite,D0
00022014 <AmiBlitz3.ab3@5411>    BNE.w nodirmem
0002201C <AmiBlitz3.ab3@5412>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00022022 <AmiBlitz3.ab3@5415>   CLR.w dirmode
00022028 <AmiBlitz3.ab3@5416>   MOVE.w ret15cc(PC),$3C(A7)
00022032 <AmiBlitz3.ab3@5417>   MOVE.l trap15temp,destbufferend
0002203C <AmiBlitz3.ab3@5418>   MOVE.l trap15temp2,destbufferstart
00022046 <AmiBlitz3.ab3@5419>   MOVE.l tempdata1start,data1start
00022050 <AmiBlitz3.ab3@5420>   MOVE.l templibend,libend
00022054 <AmiBlitz3.ab3@5421>   MOVEM.l (A7)+,D0-D7/A0-A6
00022058 <AmiBlitz3.ab3@5422>   BSR.w Aclearcache                                        ;selden used
0002205A <AmiBlitz3.ab3@5423> RTR
0002205E <AmiBlitz3.ab3@5426>   MOVEA.l ret15add(PC),A0
00022060 <AmiBlitz3.ab3@5427>   SUBQ.w #2,A0
00022062 <AmiBlitz3.ab3@5428>   MOVE.l D0,-(A0)
00022066 <AmiBlitz3.ab3@5429> BRA.w direxit
0002206A <AmiBlitz3.ab3@5433>   MOVE.w $6(A3),D1
0002206E <AmiBlitz3.ab3@5434>   BSR.w uselib                                             ;get lib for base address
00022072 <AmiBlitz3.ab3@5435>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00022074 <AmiBlitz3.ab3@5436>   ADDQ.w #8,A3
00022076 <AmiBlitz3.ab3@5437>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00022078 <AmiBlitz3.ab3@5438>   MOVE.l A3,-(A7)
0002207A <AmiBlitz3.ab3@5442>   MOVEQ.l #$00,D3
00022080 <AmiBlitz3.ab3@5443>   JSR checka4a5
00022082 <AmiBlitz3.ab3@5445>   MOVE.b (A3)+,D1
00022086 <AmiBlitz3.ab3@5446>    BMI.w stamigalib__done
00022088 <AmiBlitz3.ab3@5447>   MOVEQ.l #$03,D2
0002208A <AmiBlitz3.ab3@5448>   ADDQ.w #1,D3
0002208E <AmiBlitz3.ab3@5449>   MOVEM.l D3/A3,-(A7)
00022094 <AmiBlitz3.ab3@5450>   MOVE.b funcparloop,-(a7)
0002209C <AmiBlitz3.ab3@5451>   MOVE.b #0,funcparloop
000220A2 <AmiBlitz3.ab3@5452>   MOVE.l leftsidetype,-(a7)
000220A8 <AmiBlitz3.ab3@5453>   MOVE.l rightsidetype,-(a7)
000220AE <AmiBlitz3.ab3@5454>   CLR.l leftsidetype
000220B4 <AmiBlitz3.ab3@5455>   CLR.l rightsidetype
000220BA <AmiBlitz3.ab3@5456>   MOVE.b blitzparloop,-(a7)
000220C2 <AmiBlitz3.ab3@5457>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
000220C8 <AmiBlitz3.ab3@5458>   JSR peval
000220CE <AmiBlitz3.ab3@5459>   MOVE.b (a7)+,blitzparloop
000220D4 <AmiBlitz3.ab3@5460>   MOVE.l (a7)+,rightsidetype
000220DA <AmiBlitz3.ab3@5461>   MOVE.l (a7)+,leftsidetype
000220E0 <AmiBlitz3.ab3@5462>   MOVE.b (a7)+,funcparloop
000220E4 <AmiBlitz3.ab3@5463>   MOVEM.l (A7)+,D3/A3
000220E8 <AmiBlitz3.ab3@5464>   CMP.w #$2C,D0
000220EC <AmiBlitz3.ab3@5465>    BEQ.w stamigalib__loop
000220EE <AmiBlitz3.ab3@5466>   TST.b (A3)
000220F2 <AmiBlitz3.ab3@5467>    BPL.w syntaxerr
000220F4 <AmiBlitz3.ab3@5470>   MOVEA.l (A7)+,A3
000220F6 <AmiBlitz3.ab3@5471>   SUBQ.w #1,D3
000220FA <AmiBlitz3.ab3@5472>    BPL.w stamigalib__toend
000220FE <AmiBlitz3.ab3@5473>    BSR.w get1bytemain                                      ;no pars - get :
00022102 <AmiBlitz3.ab3@5474> BRA.w stamigalib__nopars
00022104 <AmiBlitz3.ab3@5477>   TST.b (A3)+                                              ;go to end of params
00022108 <AmiBlitz3.ab3@5478>    BPL.w stamigalib__toend
0002210A <AmiBlitz3.ab3@5479>   SUBQ.w #1,A3
0002210C <AmiBlitz3.ab3@5482>    MOVEQ.l #$00,D1
0002210E <AmiBlitz3.ab3@5483>    MOVE.b -(A3),D1
00022112 <AmiBlitz3.ab3@5484>    BTST #$4,D1
00022116 <AmiBlitz3.ab3@5485>     BNE.w stamigalib__addreg
00022118 <AmiBlitz3.ab3@5486>    LSL.w #8,D1
0002211A <AmiBlitz3.ab3@5487>    LSL.w #1,D1
0002211E <AmiBlitz3.ab3@5488>    ORI.w #$201F,D1
00022122 <AmiBlitz3.ab3@5489>  BRA.w stamigalib__gotit
00022126 <AmiBlitz3.ab3@5492>    ANDI.w #$7,D1
00022128 <AmiBlitz3.ab3@5493>    LSL.w #8,D1
0002212A <AmiBlitz3.ab3@5494>    LSL.w #1,D1
0002212E <AmiBlitz3.ab3@5495>    ORI.w #$205F,D1
00022132 <AmiBlitz3.ab3@5498>     BSR.w writeword
00022136 <AmiBlitz3.ab3@5499>   DBF D3,stamigalib__loop2
0002213C <AmiBlitz3.ab3@5502>   MOVE.w (A7)+,libjsr+2
00022142 <AmiBlitz3.ab3@5503>   MOVE.w (A7)+,libbase+2
00022148 <AmiBlitz3.ab3@5504>   MOVE.l libbase,D1
0002214C <AmiBlitz3.ab3@5505>    BSR.w writelong
00022152 <AmiBlitz3.ab3@5506>   MOVE.l libjsr,D1
00022158 <AmiBlitz3.ab3@5507>   JSR writelong
0002215E <AmiBlitz3.ab3@5508>   JSR restorea4a5
00022160 <AmiBlitz3.ab3@5509>   RTS
00022166 <AmiBlitz3.ab3@5512>   MOVE.l data1,D4
0002216C <AmiBlitz3.ab3@5513>   SUB.l data1start,D4
00022172 <AmiBlitz3.ab3@5514>   ADD.l #10000,d4
00022178 <AmiBlitz3.ab3@5515>   MOVE.l libend,D3
0002217E <AmiBlitz3.ab3@5516>   SUB.l destbufferend,D3
00022184 <AmiBlitz3.ab3@5517>   ADD.l #40000,d3
0002218A <AmiBlitz3.ab3@5518>   MOVE.l bigpc,D2
00022190 <AmiBlitz3.ab3@5519>   SUB.l destbufferstart,D2
00022196 <AmiBlitz3.ab3@5520>   ADD.l #20000,d2
0002219C <AmiBlitz3.ab3@5521>   MOVE.l databuffer,D5
000221A2 <AmiBlitz3.ab3@5522>   ADD.l #10000,D5
000221A6 <AmiBlitz3.ab3@5523> BRA newallox
000221AC <AmiBlitz3.ab3@5527>   MOVE.l objectbuffer,D2
000221AE <AmiBlitz3.ab3@5528>   LSR.l #1,D2
000221B4 <AmiBlitz3.ab3@5529>   ADD.l objectbuffer,D2
000221BA <AmiBlitz3.ab3@5530>   MOVE.l libsbuffer,D3
000221BC <AmiBlitz3.ab3@5531>   LSR.l #1,D3
000221C2 <AmiBlitz3.ab3@5532>   ADD.l libsbuffer,D3
000221C8 <AmiBlitz3.ab3@5533>   MOVE.l systembuffer,D4
000221CA <AmiBlitz3.ab3@5534>   LSR.l #1,D4
000221D0 <AmiBlitz3.ab3@5535>   ADD.l systembuffer,D4
000221D6 <AmiBlitz3.ab3@5536>   MOVE.l databuffer,D5
000221D8 <AmiBlitz3.ab3@5537>   LSR.l #1,D5
000221DE <AmiBlitz3.ab3@5538>   ADD.l databuffer,D5
000221E2 <AmiBlitz3.ab3@5539> BRA.w newallox
000221E8 <AmiBlitz3.ab3@5543>   MOVE.l bigpc,D2
000221EE <AmiBlitz3.ab3@5544>   SUB.l destbufferstart,D2                                     ;size of object buffer
000221F4 <AmiBlitz3.ab3@5545>   SUB.l savefuncspace,d2
000221FA <AmiBlitz3.ab3@5547>   TST.w debugversion
000221FE <AmiBlitz3.ab3@5548>    BNE.b alloxadj__skip
00022204 <AmiBlitz3.ab3@5549>   ADDI.l #$800,D2
0002220A <AmiBlitz3.ab3@5552>   MOVE.l libend,D3
00022210 <AmiBlitz3.ab3@5553>   SUB.l destbufferend,D3
00022216 <AmiBlitz3.ab3@5555>   MOVE.l data1,D4
0002221C <AmiBlitz3.ab3@5556>   SUB.l data1start,D4
00022222 <AmiBlitz3.ab3@5558>   MOVE.l data2,D5
00022228 <AmiBlitz3.ab3@5559>   SUB.l data2at,D5
0002222E <AmiBlitz3.ab3@5561>   CLR.l morememadd
00022232 <AmiBlitz3.ab3@5564>   BSR.w makeallox
00022236 <AmiBlitz3.ab3@5565>   BNE.w newallox__done
0002223A <AmiBlitz3.ab3@5566> BRA.w init_buffers
0002223C <AmiBlitz3.ab3@5569> RTS
00022242 <AmiBlitz3.ab3@5573>   MOVEA.l _execbase,A6
00022248 <AmiBlitz3.ab3@5574>   MOVE.l objlen,D0
0002224C <AmiBlitz3.ab3@5575>   BEQ.w freeallox__skip
00022252 <AmiBlitz3.ab3@5576>   CLR.l objlen
00022258 <AmiBlitz3.ab3@5577>   MOVEA.l destbufferstart,A1
0002225E <AmiBlitz3.ab3@5578>   MOVE.l mempool,a0
00022262 <AmiBlitz3.ab3@5579> JMP _FreeVec(A6)
00022264 <AmiBlitz3.ab3@5582> RTS
0002226A <AmiBlitz3.ab3@5586>   MOVE.l objectbuffer,D2
00022270 <AmiBlitz3.ab3@5587>   MOVE.l libsbuffer,D3
00022276 <AmiBlitz3.ab3@5588>   MOVE.l systembuffer,D4
0002227C <AmiBlitz3.ab3@5589>   MOVE.l databuffer,D5
00022284 <AmiBlitz3.ab3@5592>   MOVE.w #$FFFF,anyerrs
00022288 <AmiBlitz3.ab3@5593>   BSR.w freeallox
0002228A <AmiBlitz3.ab3@5597>   ADDQ.l #1,D2
0002228E <AmiBlitz3.ab3@5598>   BCLR #$0,D2
00022290 <AmiBlitz3.ab3@5599>   ADDQ.l #1,D3
00022294 <AmiBlitz3.ab3@5600>   BCLR #$0,D3
00022296 <AmiBlitz3.ab3@5601>   ADDQ.l #1,D4
0002229A <AmiBlitz3.ab3@5602>   BCLR #$0,D4
0002229C <AmiBlitz3.ab3@5603>   TST.l d5
000222A0 <AmiBlitz3.ab3@5604>   BNE 'l1
000222A2 <AmiBlitz3.ab3@5607>   ADDQ.l #1,D5
000222A6 <AmiBlitz3.ab3@5608>   BCLR #$0,D5
000222A8 <AmiBlitz3.ab3@5609>   MOVE.l D2,D0
000222AA <AmiBlitz3.ab3@5610>   ADD.l D3,D0
000222AC <AmiBlitz3.ab3@5611>   ADD.l D4,D0
000222AE <AmiBlitz3.ab3@5612>   ADD.l D5,D0
000222B4 <AmiBlitz3.ab3@5613>   ADD.l #moremem,d0
000222B6 <AmiBlitz3.ab3@5614>   MOVE.l D0,D6
000222BC <AmiBlitz3.ab3@5615>   MOVE.l #MemfPublic_MemfClear,D1
000222C2 <AmiBlitz3.ab3@5616>   MOVE.l mempool,a0
000222C8 <AmiBlitz3.ab3@5617>   MOVEA.l _execbase,A6
000222CC <AmiBlitz3.ab3@5618>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
000222CE <AmiBlitz3.ab3@5620>   TST.l D0
000222D2 <AmiBlitz3.ab3@5621>   BEQ.w exit_initbuffers
000222D8 <AmiBlitz3.ab3@5622>   MOVE.l D6,objlen
000222DE <AmiBlitz3.ab3@5623>   MOVE.l D2,objectbuffer
000222E4 <AmiBlitz3.ab3@5624>   MOVE.l D3,libsbuffer
000222EA <AmiBlitz3.ab3@5625>   MOVE.l D4,systembuffer
000222F0 <AmiBlitz3.ab3@5626>   MOVE.l D5,databuffer
000222F6 <AmiBlitz3.ab3@5627>   MOVE.l D0,destbufferstart
0002232A <AmiBlitz3.ab3@5630>   !ComData_SetL{comPtr_DestBufferStart,D0}
0002232C <AmiBlitz3.ab3@5631>   ADD.l D2,D0
00022332 <AmiBlitz3.ab3@5632>   MOVE.l D0,destbufferend
00022334 <AmiBlitz3.ab3@5633>   ADD.l D3,D0
0002233A <AmiBlitz3.ab3@5634>   MOVE.l D0,data1start
0002233C <AmiBlitz3.ab3@5635>   ADD.l D4,D0
00022342 <AmiBlitz3.ab3@5636>   MOVE.l D0,data2at
00022344 <AmiBlitz3.ab3@5637>   ADD.l D5,D0
0002234A <AmiBlitz3.ab3@5638>   MOVE.l D0,allat
0002234C <AmiBlitz3.ab3@5641> RTS
00022350 <AmiBlitz3.ab3@5645>   Dc.b $00,$00,$00,$01                                     ;         1
00022354 <AmiBlitz3.ab3@5646>   Dc.b $00,$00,$00,$0A                                     ;        10
00022358 <AmiBlitz3.ab3@5647>   Dc.b $00,$00,$00,$64                                     ;       100
0002235C <AmiBlitz3.ab3@5648>   Dc.b $00,$00,$03,$E8                                     ;      1000
00022360 <AmiBlitz3.ab3@5649>   Dc.b $00,$00,$27,$10                                     ;     10000
00022364 <AmiBlitz3.ab3@5650>   Dc.b $00,$01,$86,$A0                                     ;    100000
00022368 <AmiBlitz3.ab3@5651>   Dc.b $00,$0F,$42,$40                                     ;   1000000
0002236C <AmiBlitz3.ab3@5652>   Dc.b $00,$98,$96,$80                                     ;  10000000
00022370 <AmiBlitz3.ab3@5653>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00022374 <AmiBlitz3.ab3@5654>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00022376 <AmiBlitz3.ab3@5658>   MOVEQ.l #$00,D1                                          ;no zero printed
00022378 <AmiBlitz3.ab3@5659>   MOVEQ.l #$24,D3                                          ; "$"
0002237A <AmiBlitz3.ab3@5662>   MOVEQ.l #$30,D4                                          ; "0"
0002237E <AmiBlitz3.ab3@5665>     CMP.l divisors(PC,D3.W),D2
00022382 <AmiBlitz3.ab3@5666>     BCS.w makelong__skip
00022386 <AmiBlitz3.ab3@5667>     SUB.l divisors(PC,D3.W),D2
00022388 <AmiBlitz3.ab3@5668>     ADDQ.w #1,D4
0002238C <AmiBlitz3.ab3@5669> BRA.w makelong__loop2
00022390 <AmiBlitz3.ab3@5672>   CMP.b #"0",D4
00022394 <AmiBlitz3.ab3@5673>   BNE.w makelong__doit
00022396 <AmiBlitz3.ab3@5674>   TST.w D1
0002239A <AmiBlitz3.ab3@5675>   BEQ.w makelong__skip2
0002239C <AmiBlitz3.ab3@5678>   MOVE.b D4,(A0)+
0002239E <AmiBlitz3.ab3@5679>   MOVEQ.l #$01,D1
000223A0 <AmiBlitz3.ab3@5682>   SUBQ.w #4,D3
000223A4 <AmiBlitz3.ab3@5683>   BPL.w makelong__loop
000223A6 <AmiBlitz3.ab3@5684>   TST.w D1
000223AA <AmiBlitz3.ab3@5685>   BNE.w makelong__skip3
000223AE <AmiBlitz3.ab3@5686>   MOVE.b #"0",(A0)+
000223B0 <AmiBlitz3.ab3@5689>   CLR.b (A0)
000223B2 <AmiBlitz3.ab3@5690> RTS
000223D2 <AmiBlitz3.ab3@5693> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00022492 <AmiBlitz3.ab3@5694> str_residentpath:       Ds.l 48                                                ;respath org source
00022552 <AmiBlitz3.ab3@5695> str_residentname:       Ds.l 48                                                ;resname org source
00022558 <AmiBlitz3.ab3@5699>   MOVE.l macrobase,D0
0002255C <AmiBlitz3.ab3@5700>    BNE.w create_residentfile
00022562 <AmiBlitz3.ab3@5701>   MOVE.l newtype_string,D0
00022566 <AmiBlitz3.ab3@5702>    BNE.w create_residentfile
0002256C <AmiBlitz3.ab3@5703>   MOVEA.l labelbase,A2
00022570 <AmiBlitz3.ab3@5706>     CMPA.w #$0,A2
00022574 <AmiBlitz3.ab3@5707>      BEQ.w menu_createresidentfile__err
0002257C <AmiBlitz3.ab3@5708>     CMPI.l #$1,$4(A2)
00022580 <AmiBlitz3.ab3@5709>      BEQ.w create_residentfile
00022582 <AmiBlitz3.ab3@5710>     MOVEA.l (A2),A2
00022586 <AmiBlitz3.ab3@5711> BRA.w menu_createresidentfile__loop
000225B0 <AmiBlitz3.ab3@5714>   !basic
00022612 <AmiBlitz3.ab3@5715> 
00022630 <AmiBlitz3.ab3@5716>   !asm
00022632 <AmiBlitz3.ab3@5717> RTS
00022670 <AmiBlitz3.ab3@5723>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00022676 <AmiBlitz3.ab3@5724>   LEA str_residentrequester,A2
0002267C <AmiBlitz3.ab3@5725>   LEA str_residentpath,A0
00022682 <AmiBlitz3.ab3@5726>   LEA str_residentname,A1
000226AC <AmiBlitz3.ab3@5727>   !basic
000226E4 <AmiBlitz3.ab3@5728>     Poke$ ?str_residentpath,my_residentsdir$
00022710 <AmiBlitz3.ab3@5729>     Poke$ ?str_residentname,".res"
0002272E <AmiBlitz3.ab3@5730>   !asm
00022730 <AmiBlitz3.ab3@5732>   JSR (A3)                                                 ;open ped filerequest
00022734 <AmiBlitz3.ab3@5734>   BEQ.w menu_createresidentfile__err
00022736 <AmiBlitz3.ab3@5737>   MOVE.l D0,D1
0002273C <AmiBlitz3.ab3@5738>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00022740 <AmiBlitz3.ab3@5739>   MOVEA.l _dosbase(PC),A6
00022744 <AmiBlitz3.ab3@5740>   JSR _Open(A6)
00022746 <AmiBlitz3.ab3@5741>   MOVE.l D0,D7                                             ;handle
0002274A <AmiBlitz3.ab3@5742>   BEQ.w menu_createresidentfile__err
0002274E <AmiBlitz3.ab3@5743>   MOVEM.l d2-d7/a0-a6,-(a7)
00022754 <AmiBlitz3.ab3@5744>   LEA devo,a0
0002275A <AmiBlitz3.ab3@5745>   LEA ptr_parameterstore,a1
0002275C <AmiBlitz3.ab3@5748>     MOVE.b (a0)+,(a1)+
00022760 <AmiBlitz3.ab3@5749>   BNE 'l1
00022762 <AmiBlitz3.ab3@5750>   MOVEQ #13,d2
00022768 <AmiBlitz3.ab3@5751>   JSR findlabel2
0002276C <AmiBlitz3.ab3@5752>   BNE 'd
00022770 <AmiBlitz3.ab3@5753>   TST.l 8(a2)
00022774 <AmiBlitz3.ab3@5754>   BEQ 'd2
0002279E <AmiBlitz3.ab3@5755>   !basic
00022800 <AmiBlitz3.ab3@5756>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
0002281E <AmiBlitz3.ab3@5757>   !asm
00022822 <AmiBlitz3.ab3@5758>   MOVEM.l (a7)+,d2-d7/a0-a6
00022826 <AmiBlitz3.ab3@5759>   MOVEA.l _dosbase(PC),A6
00022828 <AmiBlitz3.ab3@5760>   MOVE.l d7,d1
0002282C <AmiBlitz3.ab3@5761>   JSR _Close(a6)
00022830 <AmiBlitz3.ab3@5762> BRA menu_createresidentfile__err
00022834 <AmiBlitz3.ab3@5766>   MOVEM.l (a7)+,d2-d7/a0-a6
00022838 <AmiBlitz3.ab3@5767>   BSR.w call_setpointerbusy
0002283C <AmiBlitz3.ab3@5769>   BSR.w AJL_0_7962
0002283E <AmiBlitz3.ab3@5770>   MOVE.l D7,D1
00022844 <AmiBlitz3.ab3@5771>   MOVE.l #tsthead,D2                                       ;header
00022846 <AmiBlitz3.ab3@5772>   MOVEQ.l #$20,D3
0002284A <AmiBlitz3.ab3@5773>   MOVEA.l _dosbase(PC),A6
0002284E <AmiBlitz3.ab3@5774>   JSR _Write(A6)
00022850 <AmiBlitz3.ab3@5775>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00022854 <AmiBlitz3.ab3@5776>   BSR.w restypes
00022858 <AmiBlitz3.ab3@5777>   BSR.w resmacs
0002285C <AmiBlitz3.ab3@5778>   BSR.w resconsts
0002285E <AmiBlitz3.ab3@5779>   MOVE.l D6,D3
00022860 <AmiBlitz3.ab3@5780>   ADDQ.l #3,D3
00022866 <AmiBlitz3.ab3@5781>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00022868 <AmiBlitz3.ab3@5782>   MOVE.l D3,-(A7)
0002286A <AmiBlitz3.ab3@5783>   SUB.l D6,D3
0002286E <AmiBlitz3.ab3@5784>   BEQ.w menu_createresidentfile__noalign
00022874 <AmiBlitz3.ab3@5785>   MOVE.l #writelist,D2
00022876 <AmiBlitz3.ab3@5786>   MOVE.l D7,D1
0002287C <AmiBlitz3.ab3@5787>   MOVEA.l _dosbase,A6
00022880 <AmiBlitz3.ab3@5788>   JSR _Write(A6)
0002288A <AmiBlitz3.ab3@5791>    MOVE.l hunkoffsetcounter,tstsize3
0002288E <AmiBlitz3.ab3@5792>    BEQ.w menu_createresidentfile__skip2a
00022890 <AmiBlitz3.ab3@5793>   MOVE.l D7,D1
00022896 <AmiBlitz3.ab3@5794>   MOVE.l #tstend,D2
00022898 <AmiBlitz3.ab3@5795>   MOVEQ.l #$0C,D3
0002289E <AmiBlitz3.ab3@5796>   MOVEA.l _dosbase,A6
000228A2 <AmiBlitz3.ab3@5797>    JSR _Write(A6)
000228A8 <AmiBlitz3.ab3@5801>   MOVEA.l hunkoffsetbase,A2
000228AC <AmiBlitz3.ab3@5804>   CMPA.w #$0,A2
000228B0 <AmiBlitz3.ab3@5805>    BEQ.w menu_createresidentfile__skip2
000228B4 <AmiBlitz3.ab3@5806>   LEA $4(A2),A1
000228B6 <AmiBlitz3.ab3@5807>   MOVE.l D7,D1
000228B8 <AmiBlitz3.ab3@5808>   MOVE.l A1,D2
000228BA <AmiBlitz3.ab3@5809>   MOVEQ.l #$04,D3
000228C0 <AmiBlitz3.ab3@5810>   MOVEA.l _dosbase,A6
000228C4 <AmiBlitz3.ab3@5811>    JSR _Write(A6)
000228C6 <AmiBlitz3.ab3@5812>   MOVEA.l (A2),A2
000228CA <AmiBlitz3.ab3@5813> BRA.w menu_createresidentfile__oloop
000228CC <AmiBlitz3.ab3@5816>   MOVE.l D7,D1
000228D2 <AmiBlitz3.ab3@5817>   MOVE.l #zero,D2
000228D4 <AmiBlitz3.ab3@5818>   MOVEQ.l #$04,D3
000228DA <AmiBlitz3.ab3@5819>   MOVEA.l _dosbase,A6
000228DE <AmiBlitz3.ab3@5820>   JSR _Write(A6)
000228E0 <AmiBlitz3.ab3@5823>   MOVE.l D7,D1
000228E6 <AmiBlitz3.ab3@5824>   MOVE.l #tstdone,D2
000228E8 <AmiBlitz3.ab3@5825>   MOVEQ.l #$04,D3
000228EE <AmiBlitz3.ab3@5826>   MOVEA.l _dosbase,A6
000228F2 <AmiBlitz3.ab3@5827>    JSR _Write(A6)
000228F4 <AmiBlitz3.ab3@5828>   MOVE.l (A7)+,D0
000228F6 <AmiBlitz3.ab3@5829>   LSR.l #2,D0
000228FC <AmiBlitz3.ab3@5830>   MOVE.l D0,temp1
000228FE <AmiBlitz3.ab3@5831>   MOVE.l D7,D1
00022900 <AmiBlitz3.ab3@5832>   MOVEQ.l #$14,D2
00022902 <AmiBlitz3.ab3@5833>   MOVEQ.l #-$01,D3
00022906 <AmiBlitz3.ab3@5834>   JSR _Seek(A6)
00022908 <AmiBlitz3.ab3@5835>   MOVE.l D7,D1
0002290E <AmiBlitz3.ab3@5836>   MOVE.l #temp1,D2
00022910 <AmiBlitz3.ab3@5837>   MOVEQ.l #$04,D3
00022914 <AmiBlitz3.ab3@5838>    JSR _Write(A6)
00022916 <AmiBlitz3.ab3@5839>   MOVE.l D7,D1
00022918 <AmiBlitz3.ab3@5840>   MOVEQ.l #$1C,D2
0002291A <AmiBlitz3.ab3@5841>   MOVEQ.l #-$01,D3
0002291E <AmiBlitz3.ab3@5842>    JSR _Seek(A6)
00022920 <AmiBlitz3.ab3@5843>   MOVE.l D7,D1
00022926 <AmiBlitz3.ab3@5844>   MOVE.l #temp1,D2
00022928 <AmiBlitz3.ab3@5845>   MOVEQ.l #$04,D3
0002292C <AmiBlitz3.ab3@5846>    JSR _Write(A6)
0002292E <AmiBlitz3.ab3@5847>   MOVE.l D7,D1
00022932 <AmiBlitz3.ab3@5848>    JSR _Close(A6)
00022936 <AmiBlitz3.ab3@5849> BRA.w call_setpointernormal
00022938 <AmiBlitz3.ab3@5853>   ADDQ.w #5,D1
0002293A <AmiBlitz3.ab3@5854>   ADDQ.b #8,D0
0002293E <AmiBlitz3.ab3@5857>     CMPA.w #$0,A2
00022942 <AmiBlitz3.ab3@5858>     BEQ.w writelist__done
00022946 <AmiBlitz3.ab3@5859>      BSR.w writeitem
00022948 <AmiBlitz3.ab3@5860>     MOVEA.l (A2),A2
0002294C <AmiBlitz3.ab3@5861> BRA.w writelist__loop
0002294E <AmiBlitz3.ab3@5864> RTS
00022950 <AmiBlitz3.ab3@5867>   MOVEQ.l #$00,D3
00022954 <AmiBlitz3.ab3@5868>   MOVE.b $0(A2,D5.W),D3
00022956 <AmiBlitz3.ab3@5869>   ADDQ.w #1,D3
0002295A <AmiBlitz3.ab3@5870>   BCLR #$0,D3                                              ;word align
0002295C <AmiBlitz3.ab3@5871>   MOVE.l (A2),-(A7)
00022960 <AmiBlitz3.ab3@5872>    BEQ.w writeitem__skip
00022964 <AmiBlitz3.ab3@5873>    BSR.w resoff
00022966 <AmiBlitz3.ab3@5874>   ADD.l D3,D6
00022968 <AmiBlitz3.ab3@5875>   MOVE.l D6,(A2)
0002296A <AmiBlitz3.ab3@5876>   SUB.l D3,D6
0002296C <AmiBlitz3.ab3@5879>    ADD.l D3,D6
0002296E <AmiBlitz3.ab3@5880>   MOVE.l A2,D2
00022970 <AmiBlitz3.ab3@5881>   MOVE.l D7,D1
00022976 <AmiBlitz3.ab3@5882>   MOVEA.l _dosbase,A6
0002297A <AmiBlitz3.ab3@5883>    JSR _Write(A6)
0002297C <AmiBlitz3.ab3@5884>   MOVE.l (A7)+,(A2)
0002297E <AmiBlitz3.ab3@5885> RTS
00022980 <AmiBlitz3.ab3@5888>   MOVE.l D6,D2
00022984 <AmiBlitz3.ab3@5889> BRA.w addhunkoffset
00022988 <AmiBlitz3.ab3@5893>     CMPA.w #$0,A2
0002298C <AmiBlitz3.ab3@5894>      BEQ.w writeoffs__done
00022992 <AmiBlitz3.ab3@5895>     MOVEA.l newtypebase,A1
00022994 <AmiBlitz3.ab3@5896>     MOVEQ.l #$00,D1
00022998 <AmiBlitz3.ab3@5899>       CMPA.w #$0,A1
0002299C <AmiBlitz3.ab3@5900>       BEQ.w writeoffs__found
000229A0 <AmiBlitz3.ab3@5901>       CMPA.l $A(A2),A1
000229A4 <AmiBlitz3.ab3@5902>        BEQ.w writeoffs__found
000229A6 <AmiBlitz3.ab3@5903>       ADDQ.w #1,D1
000229A8 <AmiBlitz3.ab3@5904>       MOVEA.l (A1),A1
000229AC <AmiBlitz3.ab3@5905> BRA.w writeoffs__loop2
000229B0 <AmiBlitz3.ab3@5908>     MOVE.w $A(A2),-(A7)
000229B4 <AmiBlitz3.ab3@5909>     MOVE.w D1,$A(A2)
000229B8 <AmiBlitz3.ab3@5910>      BSR.w writeitem
000229BC <AmiBlitz3.ab3@5911>     MOVE.w (A7)+,$A(A2)
000229BE <AmiBlitz3.ab3@5912>     MOVEA.l (A2),A2
000229C2 <AmiBlitz3.ab3@5913> BRA.w writeoffs
000229C4 <AmiBlitz3.ab3@5916> RTS
000229C6 <AmiBlitz3.ab3@5920>   MOVEQ.l #$00,D0
000229CA <AmiBlitz3.ab3@5923>   CMPA.w #$0,A2
000229CE <AmiBlitz3.ab3@5924>    BEQ.w countem__done
000229D0 <AmiBlitz3.ab3@5925>   ADDQ.w #1,D0
000229D2 <AmiBlitz3.ab3@5926>   MOVEA.l (A2),A2
000229D6 <AmiBlitz3.ab3@5927> BRA.w countem__loop
000229DC <AmiBlitz3.ab3@5930>   MOVE.w D0,temp1
000229DE <AmiBlitz3.ab3@5931>   MOVE.l D7,D1
000229E4 <AmiBlitz3.ab3@5932>   MOVE.l #temp1,D2
000229E6 <AmiBlitz3.ab3@5933>   MOVEQ.l #$02,D3
000229E8 <AmiBlitz3.ab3@5934>   ADDQ.l #2,D6
000229EE <AmiBlitz3.ab3@5935>   MOVEA.l _dosbase,A6
000229F2 <AmiBlitz3.ab3@5936> JMP _Write(A6)
000229F8 <AmiBlitz3.ab3@5940>    TST.b resdisable
000229FC <AmiBlitz3.ab3@5941>    BEQ resmacs__l1
00022A02 <AmiBlitz3.ab3@5942>    MOVE.l currentmacroaddr,a3
00022A08 <AmiBlitz3.ab3@5943>    CMP.l #0,a3
00022A0C <AmiBlitz3.ab3@5944>    BEQ resmacs__l1
00022A0E <AmiBlitz3.ab3@5945>    MOVE.l (a3),a3
00022A12 <AmiBlitz3.ab3@5946> BRA resmacs__l2
00022A18 <AmiBlitz3.ab3@5949>   MOVEA.l macrobase,A3                                     ;??begin org code??
00022A1A <AmiBlitz3.ab3@5952>   MOVEA.l A3,A2
00022A1E <AmiBlitz3.ab3@5953>   BSR.w countem
00022A22 <AmiBlitz3.ab3@5956>    CMPA.w #$0,A3
00022A26 <AmiBlitz3.ab3@5957>    BEQ.w resmacs__done
00022A28 <AmiBlitz3.ab3@5958>   MOVE.l D6,D5
00022A2A <AmiBlitz3.ab3@5959>   MOVE.l (A3),-(A7)
00022A2E <AmiBlitz3.ab3@5960>   MOVE.l $4(A3),-(A7)
00022A30 <AmiBlitz3.ab3@5961>   MOVEQ.l #$00,D3
00022A34 <AmiBlitz3.ab3@5962>   MOVE.b $C(A3),D3
00022A36 <AmiBlitz3.ab3@5963>   ADDQ.w #1,D3
00022A3A <AmiBlitz3.ab3@5964>   BCLR #$0,D3
00022A3C <AmiBlitz3.ab3@5965>   ADD.l D3,D6                                              ;add len of struct
00022A40 <AmiBlitz3.ab3@5966>   TST.w $8(A3)
00022A44 <AmiBlitz3.ab3@5967>    BEQ.w resmacs__notext
00022A48 <AmiBlitz3.ab3@5968>   MOVE.l D6,$4(A3)
00022A4A <AmiBlitz3.ab3@5969>   MOVE.l D5,D2
00022A4C <AmiBlitz3.ab3@5970>   ADDQ.l #4,D2
00022A50 <AmiBlitz3.ab3@5971>    BSR.w addhunkoffset
00022A52 <AmiBlitz3.ab3@5974>   MOVEQ.l #$00,D4
00022A56 <AmiBlitz3.ab3@5975>   MOVE.w $8(A3),D4
00022A58 <AmiBlitz3.ab3@5976>   ADDQ.w #1,D4
00022A5C <AmiBlitz3.ab3@5977>   BCLR #$0,D4
00022A5E <AmiBlitz3.ab3@5978>   ADD.l D4,D6
00022A60 <AmiBlitz3.ab3@5979>   TST.l (A3)
00022A64 <AmiBlitz3.ab3@5980>    BEQ.w resmacs__nomore
00022A66 <AmiBlitz3.ab3@5981>   MOVE.l D6,(A3)
00022A68 <AmiBlitz3.ab3@5982>   MOVE.l D5,D2
00022A6C <AmiBlitz3.ab3@5983>    BSR.w addhunkoffset
00022A6E <AmiBlitz3.ab3@5986>   MOVE.l A3,D2
00022A70 <AmiBlitz3.ab3@5987>   MOVE.l D7,D1
00022A76 <AmiBlitz3.ab3@5989>    MOVEA.l _dosbase,A6
00022A7A <AmiBlitz3.ab3@5990>    JSR _Write(a6)
00022A7C <AmiBlitz3.ab3@5991>   TST.l D4
00022A80 <AmiBlitz3.ab3@5992>    BEQ.w resmacs__skip
00022A82 <AmiBlitz3.ab3@5993>   MOVE.l (A7),D2
00022A84 <AmiBlitz3.ab3@5994>   MOVE.l D4,D3
00022A86 <AmiBlitz3.ab3@5995>   MOVE.l D7,D1
00022A8C <AmiBlitz3.ab3@5997>     MOVEA.l _dosbase,A6
00022A90 <AmiBlitz3.ab3@5998>    JSR _Write(A6)
00022A94 <AmiBlitz3.ab3@6001>   MOVE.l (A7)+,$4(A3)
00022A96 <AmiBlitz3.ab3@6002>   MOVE.l (A7)+,(A3)
00022A98 <AmiBlitz3.ab3@6003>   MOVEA.l (A3),A3
00022A9C <AmiBlitz3.ab3@6004> BRA.w resmacs__loop
00022A9E <AmiBlitz3.ab3@6007> RTS
00022AA4 <AmiBlitz3.ab3@6011>   TST.b resdisable
00022AA8 <AmiBlitz3.ab3@6012>   BEQ restypes__l1
00022AAE <AmiBlitz3.ab3@6013>   MOVE.l lastrestype,a3
00022AB4 <AmiBlitz3.ab3@6014>   CMP.l #0,a3
00022AB8 <AmiBlitz3.ab3@6015>   BEQ restypes__l1
00022ABA <AmiBlitz3.ab3@6016>   MOVE.l (a3),a3
00022ABE <AmiBlitz3.ab3@6017> BRA restypes__l2
00022AC4 <AmiBlitz3.ab3@6020>   MOVEA.l newtype_string,A3
00022AC6 <AmiBlitz3.ab3@6023>   MOVEA.l A3,A2
00022ACA <AmiBlitz3.ab3@6024>    BSR.w countem
00022ACE <AmiBlitz3.ab3@6027>    CMPA.w #$0,A3
00022AD2 <AmiBlitz3.ab3@6028>    BEQ.w restypes__done
00022AD4 <AmiBlitz3.ab3@6029>   MOVE.l D6,-(A7)
00022AD8 <AmiBlitz3.ab3@6030>   MOVEA.l $4(A3),A2
00022ADA <AmiBlitz3.ab3@6031>   MOVEQ.l #$0E,D5
00022ADE <AmiBlitz3.ab3@6032>    BSR.w writeoffs
00022AE0 <AmiBlitz3.ab3@6033>   MOVE.l (A7)+,D0
00022AE4 <AmiBlitz3.ab3@6034>   MOVE.l $4(A3),-(A7)
00022AE8 <AmiBlitz3.ab3@6035>   MOVE.l D0,$4(A3)
00022AEA <AmiBlitz3.ab3@6036>   MOVE.l D6,D2
00022AEC <AmiBlitz3.ab3@6037>   ADDQ.l #4,D2
00022AF0 <AmiBlitz3.ab3@6038>    BSR.w addhunkoffset
00022AF2 <AmiBlitz3.ab3@6039>   MOVEQ.l #$00,D3
00022AF6 <AmiBlitz3.ab3@6040>   MOVE.b $A(A3),D3
00022AF8 <AmiBlitz3.ab3@6041>   ADDQ.w #1,D3
00022AFC <AmiBlitz3.ab3@6042>   BCLR #$0,D3
00022AFE <AmiBlitz3.ab3@6043>   ADD.l D3,D6
00022B00 <AmiBlitz3.ab3@6044>   MOVE.l A3,D2
00022B02 <AmiBlitz3.ab3@6045>   MOVE.l D7,D1
00022B08 <AmiBlitz3.ab3@6047>     MOVEA.l _dosbase,A6
00022B0C <AmiBlitz3.ab3@6048>     JSR _Write(A6)
00022B10 <AmiBlitz3.ab3@6049>   MOVE.l (A7)+,$4(A3)
00022B12 <AmiBlitz3.ab3@6050>   MOVEA.l (A3),A3
00022B16 <AmiBlitz3.ab3@6051> BRA.w restypes__loop
00022B18 <AmiBlitz3.ab3@6054> RTS
00022B1E <AmiBlitz3.ab3@6058>    TST.b resdisable
00022B22 <AmiBlitz3.ab3@6059>    BEQ resconsts__l1
00022B28 <AmiBlitz3.ab3@6060>    MOVE.l currentlabeladdr,a2
00022B2E <AmiBlitz3.ab3@6061>    CMP.l #0,a2
00022B32 <AmiBlitz3.ab3@6062>    BEQ resconsts__l1
00022B34 <AmiBlitz3.ab3@6063>    MOVE.l (a2),a2
00022B38 <AmiBlitz3.ab3@6064> BRA resconsts__l2
00022B3E <AmiBlitz3.ab3@6067>    MOVEA.l labelbase,A2
00022B40 <AmiBlitz3.ab3@6070>    MOVEQ.l #$00,D0
00022B44 <AmiBlitz3.ab3@6073>    CMPA.w #$0,A2
00022B48 <AmiBlitz3.ab3@6074>    BEQ.w resconsts__done
00022B50 <AmiBlitz3.ab3@6075>   CMPI.l #$1,$4(A2)
00022B54 <AmiBlitz3.ab3@6076>    BNE.w resconsts__next
00022B56 <AmiBlitz3.ab3@6077>   ADDQ.w #1,D0
00022B58 <AmiBlitz3.ab3@6080>   MOVEA.l (A2),A2
00022B5C <AmiBlitz3.ab3@6081> BRA.w resconsts__loop
00022B62 <AmiBlitz3.ab3@6084>   MOVE.w D0,temp1
00022B64 <AmiBlitz3.ab3@6085>   MOVE.l D7,D1
00022B6A <AmiBlitz3.ab3@6086>   MOVE.l #temp1,D2
00022B6C <AmiBlitz3.ab3@6087>   MOVEQ.l #$02,D3
00022B6E <AmiBlitz3.ab3@6088>   ADDQ.l #2,D6
00022B74 <AmiBlitz3.ab3@6090>     MOVEA.l _dosbase,A6
00022B78 <AmiBlitz3.ab3@6091>     JSR _Write(A6)
00022B7E <AmiBlitz3.ab3@6092>    TST.b resdisable
00022B82 <AmiBlitz3.ab3@6093>    BEQ resconsts__done_l1
00022B88 <AmiBlitz3.ab3@6094>    MOVE.l currentlabeladdr,a2
00022B8E <AmiBlitz3.ab3@6095>    CMP.l #0,a2
00022B92 <AmiBlitz3.ab3@6096>    BEQ resconsts__done_l1
00022B94 <AmiBlitz3.ab3@6097>    MOVE.l (a2),a2
00022B98 <AmiBlitz3.ab3@6098> BRA resconsts__loop2
00022B9E <AmiBlitz3.ab3@6101>    MOVEA.l labelbase,A2                                    ;write resident labels
00022BA2 <AmiBlitz3.ab3@6104>    CMPA.w #$0,A2
00022BA6 <AmiBlitz3.ab3@6105>    BEQ.w resconsts__done2
00022BAE <AmiBlitz3.ab3@6106>   CMPI.l #$1,$4(A2)
00022BB2 <AmiBlitz3.ab3@6107>    BNE.w resconsts__next2
00022BB4 <AmiBlitz3.ab3@6108>    MOVEQ.l #$00,D3
00022BB8 <AmiBlitz3.ab3@6109>   MOVE.b $12(A2),D3                                        ;length
00022BBA <AmiBlitz3.ab3@6110>   ADDQ.w #1,D3
00022BBE <AmiBlitz3.ab3@6111>   BCLR #$0,D3
00022BC0 <AmiBlitz3.ab3@6112>   MOVE.l D6,D2
00022BC2 <AmiBlitz3.ab3@6113>   ADD.l D3,D6
00022BC4 <AmiBlitz3.ab3@6116>   MOVE.l (A2),-(A7)
00022BC6 <AmiBlitz3.ab3@6117>   TST.l (A2)
00022BCA <AmiBlitz3.ab3@6118>    BEQ.w resconsts__nonext
00022BCC <AmiBlitz3.ab3@6119>   MOVE.l D6,(A2)
00022BD0 <AmiBlitz3.ab3@6120>    BSR.w addhunkoffset
00022BD2 <AmiBlitz3.ab3@6123>   MOVE.l A2,D2
00022BD4 <AmiBlitz3.ab3@6124>   MOVE.l D7,D1
00022BDA <AmiBlitz3.ab3@6126>     MOVEA.l _dosbase,A6
00022BDE <AmiBlitz3.ab3@6127>     JSR _Write(A6)
00022BE0 <AmiBlitz3.ab3@6128>   MOVE.l (A7)+,(A2)
00022BE2 <AmiBlitz3.ab3@6131>   MOVEA.l (A2),A2
00022BE6 <AmiBlitz3.ab3@6132> BRA.w resconsts__loop2
00022BE8 <AmiBlitz3.ab3@6135> RTS
00022C12 <AmiBlitz3.ab3@6139>    !basic
00022C18 <AmiBlitz3.ab3@6140>     MOVE.l ptr_resfile,d0
00022C28 <AmiBlitz3.ab3@6141>     resfileP.l = Peek.l(?ptr_resfile)
00022C32 <AmiBlitz3.ab3@6142>     If resfileP
00022C5A <AmiBlitz3.ab3@6143>       resfile$ = Peek.s(resfileP)
00022CA6 <AmiBlitz3.ab3@6144>       tests.b = Instr(resfile$,"/")
00022CF2 <AmiBlitz3.ab3@6145>       testc.b = Instr(resfile$,":")
00022D14 <AmiBlitz3.ab3@6146>       If tests=0 AND testc=0
00022D94 <AmiBlitz3.ab3@6147>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00022DA6 <AmiBlitz3.ab3@6148>         Poke.l ?ptr_resfile,&resfile$
00022DAC <AmiBlitz3.ab3@6150>     Else
00022DE6 <AmiBlitz3.ab3@6151>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00022E04 <AmiBlitz3.ab3@6153>    !asm
00022E06 <AmiBlitz3.ab3@6154> RTS
00022E0C <AmiBlitz3.ab3@6158> 
00022E12 <AmiBlitz3.ab3@6159>   MOVE.l A7,errstack
00022E1C <AmiBlitz3.ab3@6162>   MOVE.l #next_resentry,errcont
00022E24 <AmiBlitz3.ab3@6163>   MOVE.w #$FFFF,ezerr
00022E28 <AmiBlitz3.ab3@6164>   BSR.w Aclearallvars
00022E2C <AmiBlitz3.ab3@6165>   BSR.w free_residents
00022E32 <AmiBlitz3.ab3@6167>   LEA residents_table,A5
00022E34 <AmiBlitz3.ab3@6168>   MOVEQ.l #$07,D6
00022E36 <AmiBlitz3.ab3@6171>     TST.b (A5)
00022E3A <AmiBlitz3.ab3@6172>     BEQ.w next_resentry
00022E40 <AmiBlitz3.ab3@6173>     MOVE.l A5,ptr_resfile
00022E44 <AmiBlitz3.ab3@6174>     BSR check_residentpath
00022E4A <AmiBlitz3.ab3@6175>     MOVE.l ptr_resfile,d1
00022E50 <AmiBlitz3.ab3@6176>     MOVEA.l _dosbase,A6
00022E54 <AmiBlitz3.ab3@6177>     JSR _LoadSeg(A6)
00022E58 <AmiBlitz3.ab3@6178>     MOVE.l D0,$40(A5)
00022E5C <AmiBlitz3.ab3@6179>     BNE.w reloadresident__yeah
00022E60 <AmiBlitz3.ab3@6180>     BSR.w reserr
00022E62 <AmiBlitz3.ab3@6183>     MOVEA.l D0,A3
00022E64 <AmiBlitz3.ab3@6184>     ADDA.l A3,A3
00022E66 <AmiBlitz3.ab3@6185>     ADDA.l A3,A3
00022E68 <AmiBlitz3.ab3@6186>     ADDQ.w #4,A3                                           ;start of res
00022E6C <AmiBlitz3.ab3@6187>     BSR.w JL_0_5A9E
00022E70 <AmiBlitz3.ab3@6188>     BSR.w JL_0_5A62                                        ;add macros to list
00022E74 <AmiBlitz3.ab3@6189>     BSR.w JL_0_5A32                                        ;read labels
00022E78 <AmiBlitz3.ab3@6192>     LEA ResidentEntryStep(A5),A5       ;$44
00022E7C <AmiBlitz3.ab3@6193>   DBF D6,reloadresident__loop
00022E86 <AmiBlitz3.ab3@6198>   MOVE.l #free_residents,errcont
00022E8C <AmiBlitz3.ab3@6200>   MOVEA.l newtype_string,A3
00022E8E <AmiBlitz3.ab3@6201>   MOVEQ.l #$0B,D7
00022E92 <AmiBlitz3.ab3@6202>   BSR.w checkclash
00022E98 <AmiBlitz3.ab3@6204>   MOVEA.l macrobase,A3
00022E9A <AmiBlitz3.ab3@6205>   MOVEQ.l #$d,D7
00022E9E <AmiBlitz3.ab3@6206>   BSR.w checkclash
00022EA4 <AmiBlitz3.ab3@6208>   MOVEA.l firstconst,A3
00022EA6 <AmiBlitz3.ab3@6209>   MOVEQ.l #$19,D7
00022EAA <AmiBlitz3.ab3@6210>   BSR.w checkclash
00022EAC <AmiBlitz3.ab3@6213> RTS
00022EAE <AmiBlitz3.ab3@6217>   MOVEA.l A3,A4
00022EB2 <AmiBlitz3.ab3@6220>     CMPA.w #$0,A4
00022EB6 <AmiBlitz3.ab3@6221>     BEQ.w checkclash__done
00022EBC <AmiBlitz3.ab3@6223>     LEA ptr_parameterstore,A0
00022EC0 <AmiBlitz3.ab3@6224>     LEA $0(A4,D7.W),A1
00022EC2 <AmiBlitz3.ab3@6225>     MOVEQ.l #-$01,D2
00022EC4 <AmiBlitz3.ab3@6228>       ADDQ.w #1,D2
00022EC6 <AmiBlitz3.ab3@6229>       MOVE.b (A1)+,(A0)+
00022ECA <AmiBlitz3.ab3@6230>     BNE.w checkclash__loop2
00022ECC <AmiBlitz3.ab3@6231>     MOVEA.l A3,A2
00022ED0 <AmiBlitz3.ab3@6234>     BSR.w findlab
00022ED4 <AmiBlitz3.ab3@6235>     BNE.w checkclash__next                                  ;not found
00022ED6 <AmiBlitz3.ab3@6236>     CMPA.l A2,A4
00022EDA <AmiBlitz3.ab3@6237>     BEQ.w checkclash__l1
00022EDC <AmiBlitz3.ab3@6238>     MOVE.l a1,a5
00022EE0 <AmiBlitz3.ab3@6239> BRA clasherr
00022EE4 <AmiBlitz3.ab3@6242> BRA.w checkclash__more
00022EE6 <AmiBlitz3.ab3@6245>     MOVEA.l (A4),A4
00022EEA <AmiBlitz3.ab3@6246> BRA.w checkclash__loop
00022EEC <AmiBlitz3.ab3@6249> RTS
00022EF2 <AmiBlitz3.ab3@6253>   MOVEA.l _dosbase,A6
00022EF8 <AmiBlitz3.ab3@6255>   LEA newtype_string,A0
00022EFE <AmiBlitz3.ab3@6256>   MOVE.l A0,lastrestype
00022F00 <AmiBlitz3.ab3@6257>   CLR.l (A0)
00022F06 <AmiBlitz3.ab3@6259>   LEA macrobase,A0
00022F0C <AmiBlitz3.ab3@6260>   MOVE.l A0,currentmacroaddr
00022F0E <AmiBlitz3.ab3@6261>   CLR.l (A0)
00022F14 <AmiBlitz3.ab3@6263>   LEA labelbase,A0
00022F1A <AmiBlitz3.ab3@6264>   MOVE.l A0,currentlabeladdr
00022F1C <AmiBlitz3.ab3@6265>   CLR.l (A0)
00022F22 <AmiBlitz3.ab3@6266>   CLR.w rescnt
00022F5A <AmiBlitz3.ab3@6270>   !ComData_SetB{comByte_DebugMode,debugmode}
00022F60 <AmiBlitz3.ab3@6273>   LEA residents_table,A2
00022F62 <AmiBlitz3.ab3@6274>   MOVEQ.l #$07,D2
00022F66 <AmiBlitz3.ab3@6277>      MOVE.l $40(A2),D1
00022F6A <AmiBlitz3.ab3@6278>      BEQ.w free_residents__next
00022F6E <AmiBlitz3.ab3@6279>       CLR.l $40(A2)
00022F74 <AmiBlitz3.ab3@6280>       MOVEA.l _dosbase,A6
00022F78 <AmiBlitz3.ab3@6281>       JSR _UnLoadSeg(A6)
00022F7C <AmiBlitz3.ab3@6284>      LEA ResidentEntryStep(A2),A2   ; $44
00022F80 <AmiBlitz3.ab3@6285>    DBF D2,free_residents__loop
00022F82 <AmiBlitz3.ab3@6287> RTS
00022F84 <AmiBlitz3.ab3@6291>   MOVE.w (A3)+,D1
00022F88 <AmiBlitz3.ab3@6292>   BEQ.w JL_0_5A60
00022F8E <AmiBlitz3.ab3@6293>   MOVEA.l currentlabeladdr,A2
00022F90 <AmiBlitz3.ab3@6294>   MOVE.l A3,(A2)
00022F92 <AmiBlitz3.ab3@6295>   SUBQ.w #1,D1
00022F94 <AmiBlitz3.ab3@6298>     MOVEA.l A3,A2
00022F96 <AmiBlitz3.ab3@6299>     MOVEA.l (A3),A3
00022F9A <AmiBlitz3.ab3@6300>   DBF D1,JL_0_5A42
00022F9C <AmiBlitz3.ab3@6302>   CLR.l (a2)                                               ;bugfix for object
00022FA2 <AmiBlitz3.ab3@6303>   MOVE.l A2,currentlabeladdr
00022FA4 <AmiBlitz3.ab3@6304>   MOVEA.l A2,A3
00022FA6 <AmiBlitz3.ab3@6305>   MOVEQ.l #$00,D0
00022FAA <AmiBlitz3.ab3@6306>   MOVE.b $12(A3),D0
00022FAC <AmiBlitz3.ab3@6307>   ADDQ.w #1,D0
00022FB0 <AmiBlitz3.ab3@6308>   BCLR #$0,D0
00022FB2 <AmiBlitz3.ab3@6309>   ADDA.w D0,A3
00022FB4 <AmiBlitz3.ab3@6312> RTS
00022FB6 <AmiBlitz3.ab3@6316>   MOVE.w (A3)+,D1
00022FBA <AmiBlitz3.ab3@6317>   BEQ.w JL_0_5A9C
00022FC0 <AmiBlitz3.ab3@6319>   MOVEA.l currentmacroaddr,A2
00022FC2 <AmiBlitz3.ab3@6320>   MOVE.l A3,(A2)
00022FC4 <AmiBlitz3.ab3@6321>   SUBQ.w #1,D1
00022FC6 <AmiBlitz3.ab3@6324>     MOVEA.l A3,A2
00022FC8 <AmiBlitz3.ab3@6325>     MOVEA.l (A3),A3
00022FCC <AmiBlitz3.ab3@6326>   DBF D1,JL_0_5A72
00022FD2 <AmiBlitz3.ab3@6328>   MOVE.l A2,currentmacroaddr
00022FD4 <AmiBlitz3.ab3@6329>   MOVEA.l A2,A3
00022FD6 <AmiBlitz3.ab3@6330>   MOVEQ.l #$00,D0
00022FDA <AmiBlitz3.ab3@6331>   MOVE.b $C(A3),D0
00022FDC <AmiBlitz3.ab3@6332>   ADDQ.w #1,D0
00022FE0 <AmiBlitz3.ab3@6333>   BCLR #$0,D0
00022FE4 <AmiBlitz3.ab3@6334>   MOVE.w $8(A3),D1
00022FE6 <AmiBlitz3.ab3@6335>   ADDQ.w #1,D1
00022FEA <AmiBlitz3.ab3@6336>   BCLR #$0,D1
00022FEC <AmiBlitz3.ab3@6337>   ADDA.w D0,A3
00022FEE <AmiBlitz3.ab3@6338>   ADDA.w D1,A3
00022FF0 <AmiBlitz3.ab3@6341> RTS
00022FF2 <AmiBlitz3.ab3@6345>   MOVE.w (A3)+,D1
00022FF6 <AmiBlitz3.ab3@6346>   BEQ.w JL_0_5B38
00022FF8 <AmiBlitz3.ab3@6347>   MOVE.w D1,-(A7)
00022FFA <AmiBlitz3.ab3@6348>   SUBQ.w #1,D1
00023000 <AmiBlitz3.ab3@6349>   MOVEA.l lastrestype,A2
00023002 <AmiBlitz3.ab3@6350>   MOVE.l A2,-(A7)
00023004 <AmiBlitz3.ab3@6353>       MOVE.l (A3),D0
00023008 <AmiBlitz3.ab3@6354>       BEQ.w JL_0_5ABC
0002300A <AmiBlitz3.ab3@6355>       MOVEA.l D0,A3
0002300E <AmiBlitz3.ab3@6356> BRA.w JL_0_5AB0
00023012 <AmiBlitz3.ab3@6359>       MOVE.b $E(A3),D0
00023014 <AmiBlitz3.ab3@6360>       ADDQ.w #1,D0
00023018 <AmiBlitz3.ab3@6361>       BCLR #$0,D0
0002301A <AmiBlitz3.ab3@6362>       ADDA.w D0,A3
0002301C <AmiBlitz3.ab3@6363>       MOVE.l A3,(A2)
0002301E <AmiBlitz3.ab3@6364>       MOVEA.l A3,A2
00023020 <AmiBlitz3.ab3@6365>       MOVEQ.l #$00,D0
00023024 <AmiBlitz3.ab3@6366>       MOVE.b $A(A3),D0
00023026 <AmiBlitz3.ab3@6367>       ADDQ.w #1,D0
0002302A <AmiBlitz3.ab3@6368>       BCLR #$0,D0
0002302C <AmiBlitz3.ab3@6369>       ADDA.w D0,A3
00023030 <AmiBlitz3.ab3@6370>   DBF D1,JL_0_5AB0
00023032 <AmiBlitz3.ab3@6372>   MOVEA.l (A7)+,A0
00023034 <AmiBlitz3.ab3@6373>   MOVEA.l (A0),A0
00023038 <AmiBlitz3.ab3@6376>     CMPA.w #$0,A0
0002303C <AmiBlitz3.ab3@6377>     BEQ.w JL_0_5B2A
00023040 <AmiBlitz3.ab3@6378>     MOVEA.l $4(A0),A1
00023044 <AmiBlitz3.ab3@6381>     CMPA.w #$0,A1
00023048 <AmiBlitz3.ab3@6382>     BEQ.w JL_0_5B24
0002304C <AmiBlitz3.ab3@6383>     MOVE.w $A(A1),D0
00023052 <AmiBlitz3.ab3@6384>     MOVEA.l newtypebase,A4
00023056 <AmiBlitz3.ab3@6385>     CMP.w #$7,D0
0002305A <AmiBlitz3.ab3@6386>     BCS.w JL_0_5B0E
00023060 <AmiBlitz3.ab3@6387>     SUB.w rescnt,D0
00023062 <AmiBlitz3.ab3@6390>     SUBQ.w #1,D0
00023066 <AmiBlitz3.ab3@6391>     BMI.w JL_0_5B1A
00023068 <AmiBlitz3.ab3@6394>        MOVEA.l (A4),A4
0002306C <AmiBlitz3.ab3@6395>   DBF D0,JL_0_5B14
00023070 <AmiBlitz3.ab3@6398>     MOVE.l A4,$A(A1)
00023072 <AmiBlitz3.ab3@6399>     MOVEA.l (A1),A1
00023076 <AmiBlitz3.ab3@6400> BRA.w JL_0_5AEE
00023078 <AmiBlitz3.ab3@6403>     MOVEA.l (A0),A0
0002307C <AmiBlitz3.ab3@6404> BRA.w JL_0_5AE2
0002307E <AmiBlitz3.ab3@6407>   MOVE.w (A7)+,D0
00023084 <AmiBlitz3.ab3@6408>   ADD.w D0,rescnt
0002308A <AmiBlitz3.ab3@6409>   MOVE.l A2,lastrestype
0002308C <AmiBlitz3.ab3@6412> RTS
00023092 <AmiBlitz3.ab3@6416>   LEA tokens,A0
00023096 <AmiBlitz3.ab3@6417>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00023098 <AmiBlitz3.ab3@6420>     MOVEA.l (A0),A0
0002309C <AmiBlitz3.ab3@6421>   DBF D0,JL_0_5BD0
000230A2 <AmiBlitz3.ab3@6423>   MOVEA.l #asmpnts,A1                                      ;create tokentab
000230A6 <AmiBlitz3.ab3@6424>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
000230AA <AmiBlitz3.ab3@6427>       LEA $6(A0),A2
000230AC <AmiBlitz3.ab3@6430>         TST.b (A2)+
000230B0 <AmiBlitz3.ab3@6431>       BNE.w JL_0_5BE4
000230B2 <AmiBlitz3.ab3@6434>         TST.b (A2)+
000230B6 <AmiBlitz3.ab3@6435>       BNE.w JL_0_5BEA
000230B8 <AmiBlitz3.ab3@6437>       ADDQ.w #1,A2
000230BA <AmiBlitz3.ab3@6438>       EXG.l D1,A2
000230BE <AmiBlitz3.ab3@6439>       BCLR #$0,D1
000230C0 <AmiBlitz3.ab3@6440>       EXG.l D1,A2
000230C2 <AmiBlitz3.ab3@6441>       MOVE.l A2,(A1)+
000230C4 <AmiBlitz3.ab3@6442>       MOVEA.l (A0),A0
000230C8 <AmiBlitz3.ab3@6443>   DBF D0,JL_0_5BE0
000230CA <AmiBlitz3.ab3@6444> RTS
000230CE <AmiBlitz3.ab3@6448>   BSR.w asmconst
000230D0 <AmiBlitz3.ab3@6449>   MOVEQ.l #$0B,D5
000230D2 <AmiBlitz3.ab3@6450> RTS
000230D4 <AmiBlitz3.ab3@6453> unmove:  Ds.w 1
000230D8 <AmiBlitz3.ab3@6457>   MOVE.w #$48E7,D1
000230DC <AmiBlitz3.ab3@6458>   BSR.w writeword                                          ;movem.l -(a7)
000230E0 <AmiBlitz3.ab3@6459>   MOVE.w #$000F,D2
000230E2 <AmiBlitz3.ab3@6460>   SUB.w D4,D2
000230E4 <AmiBlitz3.ab3@6461>   MOVEQ.l #-$01,D1
000230E6 <AmiBlitz3.ab3@6462>   BCLR D2,D1
000230EA <AmiBlitz3.ab3@6463>   BSR.w writeword
000230EC <AmiBlitz3.ab3@6464>   MOVEQ.l #-$01,D1
000230EE <AmiBlitz3.ab3@6465>   BCLR D4,D1
000230F4 <AmiBlitz3.ab3@6466>   MOVE.w D1,unmove
000230F6 <AmiBlitz3.ab3@6467> RTS
000230FA <AmiBlitz3.ab3@6471>   MOVE.w #$4CDF,D1
000230FE <AmiBlitz3.ab3@6472>   BSR.w writeword
00023102 <AmiBlitz3.ab3@6473>   MOVE.w unmove(PC),D1
00023106 <AmiBlitz3.ab3@6474> BRA.w writeword
0002310A <AmiBlitz3.ab3@6487>   BSR.w JL_0_5D22
0002310E <AmiBlitz3.ab3@6488>   CMP.w #$2C,D0                                            ;#','
00023112 <AmiBlitz3.ab3@6489>    BNE.w syntaxerr
00023118 <AmiBlitz3.ab3@6490>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
0002311C <AmiBlitz3.ab3@6491>    BSR.w writelong
0002311E <AmiBlitz3.ab3@6492>   MOVE.w D4,D1
00023122 <AmiBlitz3.ab3@6493>   ORI.w #$2F00,D1
00023126 <AmiBlitz3.ab3@6494>    BSR.w writeword
0002312A <AmiBlitz3.ab3@6495>    BSR.w get1bytemain
0002312E <AmiBlitz3.ab3@6496>    BSR.w getparameter
00023132 <AmiBlitz3.ab3@6497>    BSR.w JL_0_8E3C
00023136 <AmiBlitz3.ab3@6498>    BSR.w calcvar
0002313A <AmiBlitz3.ab3@6499>    BTST #$E,D2
0002313E <AmiBlitz3.ab3@6500>    BEQ.w JL_0_5C80
00023142 <AmiBlitz3.ab3@6503>    MOVE.b #$3,D2
00023146 <AmiBlitz3.ab3@6504> BRA.w JL_0_5C8E
00023148 <AmiBlitz3.ab3@6507>   TST.b D2
0002314C <AmiBlitz3.ab3@6508>    BEQ.w JL_0_5C78
00023150 <AmiBlitz3.ab3@6509>   CMP.b #$7,D2
00023154 <AmiBlitz3.ab3@6510>    BEQ.w JL_0_5C78
00023158 <AmiBlitz3.ab3@6513>   BTST #$F,D2
0002315C <AmiBlitz3.ab3@6514>    BNE.w JL_0_5CA4
00023160 <AmiBlitz3.ab3@6515>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00023164 <AmiBlitz3.ab3@6516>    BSR.w writeword
00023166 <AmiBlitz3.ab3@6517>   MOVE.w D3,D1
0002316A <AmiBlitz3.ab3@6518>    BSR.w writeword
0002316E <AmiBlitz3.ab3@6521>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00023172 <AmiBlitz3.ab3@6522>    BSR.w writeword
00023176 <AmiBlitz3.ab3@6523>   MOVE.w #$1480,D1
0002317A <AmiBlitz3.ab3@6524>   CMP.b #$1,D2
0002317E <AmiBlitz3.ab3@6525>    BEQ.w JL_0_5CC8
00023182 <AmiBlitz3.ab3@6526>   EORI.w #$3000,D1
00023186 <AmiBlitz3.ab3@6527>   CMP.b #$2,D2
0002318A <AmiBlitz3.ab3@6528>    BNE.w JL_0_5CC8
0002318E <AmiBlitz3.ab3@6529>   ORI.w #$1000,D1
00023192 <AmiBlitz3.ab3@6532>   BSR.w writeword
00023198 <AmiBlitz3.ab3@6533>   MOVE.l #$4CDF7FFF,D1
0002319C <AmiBlitz3.ab3@6534> BRA.w writelong
000231A0 <AmiBlitz3.ab3@6538>   BSR.w JL_0_5D22
000231A4 <AmiBlitz3.ab3@6539>   CMP.w #$2C,D0
000231A8 <AmiBlitz3.ab3@6540>    BNE.w syntaxerr
000231AC <AmiBlitz3.ab3@6541>    BSR.w regmovems
000231AE <AmiBlitz3.ab3@6542>   MOVE.w D4,-(A7)
000231B0 <AmiBlitz3.ab3@6543>   MOVEQ.l #$03,D2
000231B4 <AmiBlitz3.ab3@6544>    BSR.w eval
000231B6 <AmiBlitz3.ab3@6545>   MOVE.w (A7)+,D1
000231BA <AmiBlitz3.ab3@6546>    BEQ.w JL_0_5D1A
000231BE <AmiBlitz3.ab3@6547>   CMP.w #$8,D1
000231C2 <AmiBlitz3.ab3@6548>    BCC.w JL_0_5D0C
000231C4 <AmiBlitz3.ab3@6549>   LSL.w #8,D1
000231C6 <AmiBlitz3.ab3@6550>   LSL.w #1,D1
000231CA <AmiBlitz3.ab3@6551>   ORI.w #$2000,D1
000231CE <AmiBlitz3.ab3@6552>    BSR.w writeword
000231D2 <AmiBlitz3.ab3@6553> BRA.w JL_0_5D1A
000231D4 <AmiBlitz3.ab3@6556>   SUBQ.w #8,D1
000231D6 <AmiBlitz3.ab3@6557>   LSL.w #8,D1
000231D8 <AmiBlitz3.ab3@6558>   LSL.w #1,D1
000231DC <AmiBlitz3.ab3@6559>   ORI.w #$2040,D1
000231E0 <AmiBlitz3.ab3@6560>   BSR.w writeword
000231E4 <AmiBlitz3.ab3@6563> BRA.w dounmove
000231E8 <AmiBlitz3.ab3@6567>   BSR.w get1bytemain
000231EC <AmiBlitz3.ab3@6570>   ORI.w #$20,D0
000231F0 <AmiBlitz3.ab3@6571>   CMP.w #$64,D0
000231F4 <AmiBlitz3.ab3@6572>    BEQ.w JL_0_5D4E
000231F8 <AmiBlitz3.ab3@6573>   CMP.w #$61,D0
000231FC <AmiBlitz3.ab3@6574>    BNE.w syntaxerr
00023200 <AmiBlitz3.ab3@6575>    BSR.w JL_0_5D4E
00023202 <AmiBlitz3.ab3@6576>   ADDQ.w #8,D4
00023204 <AmiBlitz3.ab3@6577> RTS
00023230 <AmiBlitz3.ab3@6581>   !fget                                                   ;bsr.w get1bytemain
00023234 <AmiBlitz3.ab3@6583>   ORI.w #$20,D0
00023238 <AmiBlitz3.ab3@6586>   CMP.w #$61,D0
0002323C <AmiBlitz3.ab3@6587>   BNE.w syntaxerr
00023268 <AmiBlitz3.ab3@6590>   !fget                                                    ;bsr.w get1bytemain
0002326C <AmiBlitz3.ab3@6591>   SUBI.w #$30,D0
00023270 <AmiBlitz3.ab3@6592>    BMI.w syntaxerr
00023274 <AmiBlitz3.ab3@6593>   CMP.w #$7,D0
00023278 <AmiBlitz3.ab3@6594>    BHI.w syntaxerr
0002327A <AmiBlitz3.ab3@6595>   MOVE.w D0,D4
000232A6 <AmiBlitz3.ab3@6596>   !fget
000232A8 <AmiBlitz3.ab3@6597> RTS                                                        ;bra.w get1bytemain
000232AA <AmiBlitz3.ab3@6601>   ADDQ.w #8,D4
000232AC <AmiBlitz3.ab3@6604>   MOVEQ.l #$00,D5
000232B0 <AmiBlitz3.ab3@6605>   SUBI.w #$30,D4
000232B4 <AmiBlitz3.ab3@6608>   CMP.w #$2D,D0
000232B8 <AmiBlitz3.ab3@6609>    BEQ.w JL_0_5D9E
000232BC <AmiBlitz3.ab3@6610>   CMP.w #$2F,D0
000232C0 <AmiBlitz3.ab3@6611>    BEQ.w JL_0_5D8C
000232C4 <AmiBlitz3.ab3@6612> BRA.w syntaxerr
000232C6 <AmiBlitz3.ab3@6615>   BSET D4,D5
000232C8 <AmiBlitz3.ab3@6618>   MOVE.w D5,D4
000232CA <AmiBlitz3.ab3@6619>   MOVEQ.l #$0F,D5
000232CC <AmiBlitz3.ab3@6620> RTS
000232CE <AmiBlitz3.ab3@6623>   BSET D4,D5
000232D2 <AmiBlitz3.ab3@6624>   BSR.w JL_0_5D1E
000232E4 <AmiBlitz3.ab3@6625>   !compare3                                                ;bsr.w JL_0_5FC0
000232E8 <AmiBlitz3.ab3@6626>   BNE.w JL_0_5D70
000232EC <AmiBlitz3.ab3@6627> BRA.w JL_0_5D84
000232EE <AmiBlitz3.ab3@6630>   MOVE.w D4,D1
000232F2 <AmiBlitz3.ab3@6631>    BSR.w JL_0_5D1E
000232F4 <AmiBlitz3.ab3@6632>   CMP.w D4,D1
000232F8 <AmiBlitz3.ab3@6633>    BLS.w JL_0_5DAC
000232FA <AmiBlitz3.ab3@6634>   EXG.l D4,D1
000232FC <AmiBlitz3.ab3@6637>   BSET D1,D5
000232FE <AmiBlitz3.ab3@6638>   ADDQ.w #1,D1
00023300 <AmiBlitz3.ab3@6639>   CMP.w D4,D1
00023304 <AmiBlitz3.ab3@6640>    BLS.w JL_0_5DAC
00023316 <AmiBlitz3.ab3@6641>   !compare3                                                ;bsr.w JL_0_5FC0
0002331A <AmiBlitz3.ab3@6642>   BNE.w JL_0_5D70
0002331E <AmiBlitz3.ab3@6643> BRA.w JL_0_5D86
00023320 <AmiBlitz3.ab3@6646>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
0002334C <AmiBlitz3.ab3@6647>    !fget
00023350 <AmiBlitz3.ab3@6648>   CMP.w #$23,D0
00023354 <AmiBlitz3.ab3@6649>    BEQ.w getimm
00023358 <AmiBlitz3.ab3@6650>   CMP.w #$28,D0
0002335C <AmiBlitz3.ab3@6651>    BEQ.w JL_0_5DFE
00023360 <AmiBlitz3.ab3@6652>   CMP.w #$2D,D0
00023364 <AmiBlitz3.ab3@6653>    BNE.w JL_0_5E20
00023390 <AmiBlitz3.ab3@6654>    !fget                                                   ;bsr.w get1bytemain       -(
00023394 <AmiBlitz3.ab3@6655>   CMP.w #$28,D0
00023398 <AmiBlitz3.ab3@6656>    BNE.w JL_0_5F4E
0002339C <AmiBlitz3.ab3@6657>    BSR.w JL_0_5D3E
000233A0 <AmiBlitz3.ab3@6658>   CMP.w #$29,D0
000233A4 <AmiBlitz3.ab3@6659>    BNE.w syntaxerr
000233A6 <AmiBlitz3.ab3@6660>   MOVEQ.l #$04,D5
000233D2 <AmiBlitz3.ab3@6661>   !fget                                                    ;bsr.w get1bytemain
000233D4 <AmiBlitz3.ab3@6662> RTS
000233D8 <AmiBlitz3.ab3@6666>   BSR.w JL_0_5D3E
000233DC <AmiBlitz3.ab3@6667>   CMP.w #$29,D0
000233E0 <AmiBlitz3.ab3@6668>    BNE.w syntaxerr
0002340C <AmiBlitz3.ab3@6669>   !fget                                                    ;bsr.w get1bytemain
00023410 <AmiBlitz3.ab3@6670>   CMP.w #$2B,D0
00023414 <AmiBlitz3.ab3@6671>    BEQ.w JL_0_5E1A
00023416 <AmiBlitz3.ab3@6672>   MOVEQ.l #$02,D5
00023418 <AmiBlitz3.ab3@6673> RTS
0002341A <AmiBlitz3.ab3@6677>   MOVEQ.l #$03,D5
00023446 <AmiBlitz3.ab3@6678>   !fget                                                    ;bra.w get1bytemain
00023448 <AmiBlitz3.ab3@6679> RTS
0002344C <AmiBlitz3.ab3@6683>   ORI.w #$20,D0
0002344E <AmiBlitz3.ab3@6684>   MOVE.w D0,D1                                            
0002347A <AmiBlitz3.ab3@6685>    !fget                                                   ;bsr.w get1bytemain
0002347E <AmiBlitz3.ab3@6686>   CMP.w #$64,D1
00023482 <AmiBlitz3.ab3@6687>    BNE.w JL_0_5E6C
00023486 <AmiBlitz3.ab3@6688>   CMP.w #$30,D0
0002348A <AmiBlitz3.ab3@6689>    BCS.w JL_0_5EAE
0002348E <AmiBlitz3.ab3@6690>   CMP.w #$37,D0
00023492 <AmiBlitz3.ab3@6691>    BHI.w JL_0_5EAE
00023494 <AmiBlitz3.ab3@6692>   MOVE.w D0,D4
000234C0 <AmiBlitz3.ab3@6693>    !fget                                                   ;bsr.w get1bytemain
000234D2 <AmiBlitz3.ab3@6694>    !compare3                                               ;bsr.w JL_0_5FC0
000234D6 <AmiBlitz3.ab3@6695>    BEQ.w JL_0_5E64
000234DA <AmiBlitz3.ab3@6696>   CMP.w #$2D,D0
000234DE <AmiBlitz3.ab3@6697>    BEQ.w JL_0_5D6A
000234E2 <AmiBlitz3.ab3@6698>   CMP.w #$2F,D0
000234E6 <AmiBlitz3.ab3@6699>    BEQ.w JL_0_5D6A
000234EA <AmiBlitz3.ab3@6700> BRA.w JL_0_5EB8
000234EC <AmiBlitz3.ab3@6703>   MOVEQ.l #$00,D5
000234F0 <AmiBlitz3.ab3@6704>   SUBI.w #$30,D4
000234F2 <AmiBlitz3.ab3@6705> RTS
000234F6 <AmiBlitz3.ab3@6708>    CMP.w #$61,D1
000234FA <AmiBlitz3.ab3@6709>    BNE.w JL_0_5EAE
000234FE <AmiBlitz3.ab3@6710>   CMP.w #$30,D0
00023502 <AmiBlitz3.ab3@6711>    BCS.w JL_0_5EAE
00023506 <AmiBlitz3.ab3@6712>   CMP.w #$37,D0
0002350A <AmiBlitz3.ab3@6713>    BHI.w JL_0_5EAE
0002350C <AmiBlitz3.ab3@6714>   MOVE.w D0,D4
00023538 <AmiBlitz3.ab3@6715>    !fget                                                   ;bsr.w get1bytemain
0002354A <AmiBlitz3.ab3@6716>    !compare3                                               ;bsr.w JL_0_5FC0
0002354E <AmiBlitz3.ab3@6717>    BEQ.w JL_0_5EA6
00023552 <AmiBlitz3.ab3@6718>   CMP.w #$2D,D0
00023556 <AmiBlitz3.ab3@6719>    BEQ.w JL_0_5D68                                         ;movem
0002355A <AmiBlitz3.ab3@6720>   CMP.w #$2F,D0
0002355E <AmiBlitz3.ab3@6721>    BEQ.w JL_0_5D68
00023562 <AmiBlitz3.ab3@6722> BRA.w JL_0_5EB8
00023564 <AmiBlitz3.ab3@6725>   MOVEQ.l #1,d5
00023568 <AmiBlitz3.ab3@6726>   SUBI.w #$30,D4
0002356C <AmiBlitz3.ab3@6728> BRA 'l10
0002356E <AmiBlitz3.ab3@6729>   ADDQ.w #8,d4
00023570 <AmiBlitz3.ab3@6730>   MOVEQ #0,d5
00023572 <AmiBlitz3.ab3@6731>   BSET d4,d5
00023574 <AmiBlitz3.ab3@6732>   MOVE.w d5,d4
00023576 <AmiBlitz3.ab3@6733>   MOVEQ.l #$0f,D5                                          ;01
00023578 <AmiBlitz3.ab3@6736> RTS
0002357C <AmiBlitz3.ab3@6740>   ORI.w #$20,D0
0002357E <AmiBlitz3.ab3@6741>   MOVE.w D0,D4
000235AA <AmiBlitz3.ab3@6742>    !fget                                                   ;bsr.w get1bytemain
000235BC <AmiBlitz3.ab3@6745>   !compare3                                                ;bsr.w JL_0_5FC0
000235C0 <AmiBlitz3.ab3@6746>    BNE.w JL_0_5EF2
000235C4 <AmiBlitz3.ab3@6747>   CMP.w #$73,D1
000235C8 <AmiBlitz3.ab3@6748>    BNE.w JL_0_5EF2
000235CC <AmiBlitz3.ab3@6749>   CMP.w #$70,D4
000235D0 <AmiBlitz3.ab3@6750>    BNE.w JL_0_5EDE
000235E2 <AmiBlitz3.ab3@6751>    !compare3                                               ;bsr.w JL_0_5FC0
000235E6 <AmiBlitz3.ab3@6752>    BNE.w JL_0_5F4E
000235E8 <AmiBlitz3.ab3@6753>   MOVEQ.l #$07,D4
000235EA <AmiBlitz3.ab3@6754>   MOVEQ.l #$01,D5
000235EC <AmiBlitz3.ab3@6755> RTS
000235F0 <AmiBlitz3.ab3@6759>   CMP.w #$72,D4
000235F4 <AmiBlitz3.ab3@6760>    BNE.w JL_0_5F4E
00023606 <AmiBlitz3.ab3@6761>    !compare3                                               ;bsr.w JL_0_5FC0
0002360A <AmiBlitz3.ab3@6762>    BNE.w JL_0_5F4E
0002360C <AmiBlitz3.ab3@6763>   MOVEQ.l #$0D,D5
0002360E <AmiBlitz3.ab3@6764> RTS
00023612 <AmiBlitz3.ab3@6768>   ORI.w #$20,D0
00023616 <AmiBlitz3.ab3@6769>   CMP.w #$63,D1
0002361A <AmiBlitz3.ab3@6770>    BNE.w JL_0_5F22
0002361E <AmiBlitz3.ab3@6771>   CMP.w #$63,D4
00023622 <AmiBlitz3.ab3@6772>    BNE.w JL_0_5F4E
00023626 <AmiBlitz3.ab3@6773>   CMP.w #$72,D0
0002362A <AmiBlitz3.ab3@6774>    BNE.w JL_0_5F4E
0002362E <AmiBlitz3.ab3@6775>    BSR.w get1bytemain                                      ;??wy not !fget
00023632 <AmiBlitz3.ab3@6776>    BEQ.w JL_0_5F1E
00023636 <AmiBlitz3.ab3@6777>   CMP.w #$2C,D0
0002363A <AmiBlitz3.ab3@6778>    BNE.w JL_0_5F4E
0002363C <AmiBlitz3.ab3@6781>   MOVEQ.l #$0C,D5
0002363E <AmiBlitz3.ab3@6782> RTS
00023642 <AmiBlitz3.ab3@6786>   CMP.w #$75,D1
00023646 <AmiBlitz3.ab3@6787>    BNE.w JL_0_5F4E
0002364A <AmiBlitz3.ab3@6788>   CMP.w #$73,D4
0002364E <AmiBlitz3.ab3@6789>    BNE.w JL_0_5F4E
00023652 <AmiBlitz3.ab3@6790>   CMP.w #$70,D0
00023656 <AmiBlitz3.ab3@6791>    BNE.w JL_0_5F4E
0002365A <AmiBlitz3.ab3@6792>    BSR.w get1bytemain                                      ;??wy not !fget
0002365E <AmiBlitz3.ab3@6793>    BEQ.w JL_0_5F4A
00023662 <AmiBlitz3.ab3@6794>   CMP.w #$2C,D0
00023666 <AmiBlitz3.ab3@6795>    BNE.w JL_0_5F4E
00023668 <AmiBlitz3.ab3@6798>   MOVEQ.l #$0E,D5
0002366A <AmiBlitz3.ab3@6799> RTS
0002366C <AmiBlitz3.ab3@6803>   MOVEA.l A4,A5
00023670 <AmiBlitz3.ab3@6804>    BSR.w asmconst
00023682 <AmiBlitz3.ab3@6805>    !compare3                                               ;bsr.w JL_0_5FC0
00023686 <AmiBlitz3.ab3@6806>    BEQ.w JL_0_5FB8
0002368A <AmiBlitz3.ab3@6807>   CMP.w #$2E,D0
0002368E <AmiBlitz3.ab3@6808>    BEQ.w JL_0_5FA0
00023692 <AmiBlitz3.ab3@6809>   CMP.w #$28,D0
00023696 <AmiBlitz3.ab3@6810>    BNE.w syntaxerr
0002369A <AmiBlitz3.ab3@6811>    BSR.w get1bytemain                                      ;??wy not !fget
0002369E <AmiBlitz3.ab3@6812>   ORI.w #$20,D0
000236A2 <AmiBlitz3.ab3@6813>   CMP.w #$70,D0
000236A6 <AmiBlitz3.ab3@6814>    BNE.w JL_0_5F98
000236AA <AmiBlitz3.ab3@6815>    BSR.w get1bytemain                                      ;??wy not !fget
000236AE <AmiBlitz3.ab3@6816>   ORI.w #$20,D0
000236B2 <AmiBlitz3.ab3@6817>   CMP.w #$63,D0
000236B6 <AmiBlitz3.ab3@6818>    BNE.w syntaxerr
000236BA <AmiBlitz3.ab3@6819>    BSR.w get1bytemain                                      ;??wy not !fget
000236BE <AmiBlitz3.ab3@6820>    BSR.w JL_0_5FD4
000236C0 <AmiBlitz3.ab3@6821>   ADDQ.w #4,D5
000236C2 <AmiBlitz3.ab3@6822> RTS
000236C6 <AmiBlitz3.ab3@6826>   BSR.w JL_0_5D46
000236CA <AmiBlitz3.ab3@6827> BRA.w JL_0_5FD4
000236CE <AmiBlitz3.ab3@6831>    BSR.w get1bytemain                                     ;??wy not !fget
000236D2 <AmiBlitz3.ab3@6832>   ORI.w #$20,D0
000236D6 <AmiBlitz3.ab3@6833>   CMP.w #$77,D0
000236DA <AmiBlitz3.ab3@6834>    BEQ.w JL_0_5FBC
000236DE <AmiBlitz3.ab3@6835>   CMP.w #$6C,D0
000236E2 <AmiBlitz3.ab3@6836>    BNE.w syntaxerr
000236E4 <AmiBlitz3.ab3@6839>   MOVEQ.l #$08,D5
000236E6 <AmiBlitz3.ab3@6840> RTS
000236E8 <AmiBlitz3.ab3@6844>   MOVEQ.l #$07,D5
000236EA <AmiBlitz3.ab3@6845> RTS
000236EC <AmiBlitz3.ab3@6849>   TST.w D0
000236F0 <AmiBlitz3.ab3@6850>    BEQ.w JL_0_5FD2
000236F4 <AmiBlitz3.ab3@6851>   CMP.w #$3A,D0
000236F8 <AmiBlitz3.ab3@6852>    BEQ.w JL_0_5FD2
000236FC <AmiBlitz3.ab3@6853>   CMP.w #$2C,D0
000236FE <AmiBlitz3.ab3@6856> RTS
00023702 <AmiBlitz3.ab3@6860>   CMP.w #$2C,D0
00023706 <AmiBlitz3.ab3@6861>    BNE.w JL_0_6054
0002370A <AmiBlitz3.ab3@6862>    BSR.w get1bytemain                                      ;??wy not !fget
0002370E <AmiBlitz3.ab3@6863>   ORI.w #$20,D0
00023710 <AmiBlitz3.ab3@6864>   MOVEQ.l #$00,D1
00023714 <AmiBlitz3.ab3@6865>   CMP.w #$64,D0
00023718 <AmiBlitz3.ab3@6866>    BEQ.w JL_0_5FFA
0002371C <AmiBlitz3.ab3@6867>   CMP.w #$61,D0
00023720 <AmiBlitz3.ab3@6868>    BNE.w syntaxerr
00023724 <AmiBlitz3.ab3@6869>   BSET #$F,D1
00023728 <AmiBlitz3.ab3@6872>    BSR.w get1bytemain                                      ;??wy not !fget
0002372C <AmiBlitz3.ab3@6873>   SUBI.w #$30,D0
00023730 <AmiBlitz3.ab3@6874>    BMI.w syntaxerr
00023734 <AmiBlitz3.ab3@6875>   CMP.w #$7,D0
00023738 <AmiBlitz3.ab3@6876>    BHI.w syntaxerr
0002373A <AmiBlitz3.ab3@6877>   LSL.w #8,D0
0002373C <AmiBlitz3.ab3@6878>   LSL.w #4,D0
0002373E <AmiBlitz3.ab3@6879>   OR.w D0,D1
00023742 <AmiBlitz3.ab3@6880>    BSR.w get1bytemain                                      ;??wy not !fget
00023746 <AmiBlitz3.ab3@6881>   CMP.w #$2E,D0
0002374A <AmiBlitz3.ab3@6882>    BNE.w JL_0_6040
0002374E <AmiBlitz3.ab3@6883>    BSR.w get1bytemain                                      ;??wy not !fget
00023752 <AmiBlitz3.ab3@6884>   ORI.w #$20,D0
00023756 <AmiBlitz3.ab3@6885>   CMP.w #$77,D0
0002375A <AmiBlitz3.ab3@6886>    BEQ.w JL_0_603C
0002375E <AmiBlitz3.ab3@6887>   CMP.w #$6C,D0
00023762 <AmiBlitz3.ab3@6888>    BNE.w syntaxerr
00023766 <AmiBlitz3.ab3@6889>   BSET #$B,D1
0002376A <AmiBlitz3.ab3@6892>    BSR.w get1bytemain                                      ;??wy not !fget
0002376E <AmiBlitz3.ab3@6895>    CMP.b #"*",d0                                           ;020 * Mode
00023772 <AmiBlitz3.ab3@6896>             BNE 'l1
00023776 <AmiBlitz3.ab3@6897>             BSR.w get1bytemain                             ;??wy not !fget
0002377A <AmiBlitz3.ab3@6898>             CMP.b #"2",d0
0002377E <AmiBlitz3.ab3@6899>             BNE 'l2
00023782 <AmiBlitz3.ab3@6900>             OR.w #$200,d1
00023786 <AmiBlitz3.ab3@6901> BRA 'l1b
0002378A <AmiBlitz3.ab3@6904>             CMP.b #"4",d0
0002378E <AmiBlitz3.ab3@6905>             BNE 'l3
00023792 <AmiBlitz3.ab3@6906>             OR.w #$400,d1
00023796 <AmiBlitz3.ab3@6907> BRA 'l1b
0002379A <AmiBlitz3.ab3@6910>             CMP.b #"8",d0
0002379E <AmiBlitz3.ab3@6911>             BNE syntaxerr
000237A2 <AmiBlitz3.ab3@6912>             OR.w #$600,d1
000237A6 <AmiBlitz3.ab3@6915>         BSR.w get1bytemain                                 ;??wy not !fget
000237AA <AmiBlitz3.ab3@6918>   CMP.w #$29,D0
000237AE <AmiBlitz3.ab3@6919>    BNE.w syntaxerr
000237B4 <AmiBlitz3.ab3@6920>   MOVE.w D1,extraword
000237B6 <AmiBlitz3.ab3@6921>   MOVEQ.l #$06,D5
000237BA <AmiBlitz3.ab3@6922> BRA.w get1bytemain                                         ;??wy not !fget
000237BE <AmiBlitz3.ab3@6926>   CMP.w #")",D0                                            ;")"
000237C2 <AmiBlitz3.ab3@6927>    BNE.w errorbracketmiss                                  ; was syntax error
000237C4 <AmiBlitz3.ab3@6928>   MOVEQ.l #$05,D5
000237C8 <AmiBlitz3.ab3@6929> BRA.w get1bytemain                                         ;??wy not !fget
000237CE <AmiBlitz3.ab3@6936>   MOVEA.l asmbuff,A0
000237D4 <AmiBlitz3.ab3@6937>   MOVE.w ininclude,D1
000237DA <AmiBlitz3.ab3@6938>   OR.w inmacro,D1
000237DC <AmiBlitz3.ab3@6939>   MOVE.w D1,(A0)+                                          ;flag!
000237E0 <AmiBlitz3.ab3@6940>    BNE.w copyconst
000237E2 <AmiBlitz3.ab3@6941>   MOVE.l A5,-(A7)
000237E6 <AmiBlitz3.ab3@6942>    BSR.w copyconst
000237EC <AmiBlitz3.ab3@6943>   MOVEA.l asmbuff,A0
000237F0 <AmiBlitz3.ab3@6944>   CMP.w #$4,D1
000237F4 <AmiBlitz3.ab3@6945>    BLS.w asmconst__leave
000237FA <AmiBlitz3.ab3@6946>   TST.w lc
000237FE <AmiBlitz3.ab3@6947>    BNE.w asmconst__leave
00023800 <AmiBlitz3.ab3@6948>   ADDQ.w #2,A0
00023802 <AmiBlitz3.ab3@6949>   MOVE.l (A7)+,(A0)+
00023804 <AmiBlitz3.ab3@6950>   CLR.b (A0)
0002380C <AmiBlitz3.ab3@6951>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
0002380E <AmiBlitz3.ab3@6952> RTS
00023810 <AmiBlitz3.ab3@6956>   NOT.w (A0)
00023812 <AmiBlitz3.ab3@6957>   ADDQ.w #4,A7
00023814 <AmiBlitz3.ab3@6958> RTS
00023816 <AmiBlitz3.ab3@6961> lc:  Ds.w 1
0002381C <AmiBlitz3.ab3@6965>   CLR.w lc
0002381E <AmiBlitz3.ab3@6966>   MOVEQ.l #$00,D1
00023820 <AmiBlitz3.ab3@6969>    ADDQ.w #1,D1                                            ;label name
0002384C <AmiBlitz3.ab3@6970>    !fget                                                   ;bsr.w get1bytemain
00023850 <AmiBlitz3.ab3@6971>    BEQ.w copyconst__done
00023854 <AmiBlitz3.ab3@6972>    CMP.w #$22,d0
00023858 <AmiBlitz3.ab3@6973>    BNE.s copyconst__loop_l10
0002385E <AmiBlitz3.ab3@6974>    NOT.w instringon
00023862 <AmiBlitz3.ab3@6977>    CMP.w #":",d0
00023866 <AmiBlitz3.ab3@6978>    BNE.s copyconst__loop_l11
0002386C <AmiBlitz3.ab3@6979>    TST.w instringon
00023870 <AmiBlitz3.ab3@6980>    BEQ copyconst__done
00023872 <AmiBlitz3.ab3@6983>   TST.w D0
00023876 <AmiBlitz3.ab3@6984>   BPL.w copyconst__notmi
00023878 <AmiBlitz3.ab3@6985>   MOVE.w D0,-(A7)
0002387A <AmiBlitz3.ab3@6986>   LSR.w #8,D0
0002387C <AmiBlitz3.ab3@6987>   MOVE.b D0,(A0)+
0002387E <AmiBlitz3.ab3@6988>   MOVE.w (A7)+,D0
00023880 <AmiBlitz3.ab3@6989>   MOVE.b D0,(A0)+
00023882 <AmiBlitz3.ab3@6990>   ADDQ.w #1,D1
00023886 <AmiBlitz3.ab3@6991> BRA.s copyconst__loop
0002388C <AmiBlitz3.ab3@6994>    TST.w instringon
00023890 <AmiBlitz3.ab3@6995>    BNE.w copyconst__putbyte
00023896 <AmiBlitz3.ab3@6996>    TST.b _dcb
0002389A <AmiBlitz3.ab3@6997>    BNE copyconst__notmi_l10
0002389E <AmiBlitz3.ab3@6998>    CMP.w #$28,D0
000238A2 <AmiBlitz3.ab3@6999>    BEQ.w copyconst__done
000238A6 <AmiBlitz3.ab3@7002>    CMP.w #$2C,D0
000238AA <AmiBlitz3.ab3@7003>    BEQ.w copyconst__done
000238AE <AmiBlitz3.ab3@7004>    CMP.b #"'",D0
000238B2 <AmiBlitz3.ab3@7005>    BNE.w copyconst__putbyte
000238B8 <AmiBlitz3.ab3@7006>    MOVE.w D0,lc                                     ;locallabels
000238BA <AmiBlitz3.ab3@7007>    MOVE.l A1,-(A7)
000238C0 <AmiBlitz3.ab3@7008>    LEA lastgloballabel,A1
000238C2 <AmiBlitz3.ab3@7009>    TST.b (A1)
000238C6 <AmiBlitz3.ab3@7010>    BEQ.w nolocerr
000238C8 <AmiBlitz3.ab3@7013>   ADDQ.w #1,D1
000238CA <AmiBlitz3.ab3@7014>   MOVE.b (A1)+,(A0)+
000238CE <AmiBlitz3.ab3@7015>    BNE.w copyconst__cloop
000238D0 <AmiBlitz3.ab3@7016>   SUBQ.w #1,D1
000238D2 <AmiBlitz3.ab3@7017>   SUBQ.w #1,A0
000238D4 <AmiBlitz3.ab3@7018>   MOVEA.l (A7)+,A1
000238D6 <AmiBlitz3.ab3@7021>   MOVE.b D0,(A0)+
000238DA <AmiBlitz3.ab3@7022> BRA.w copyconst__loop
000238DC <AmiBlitz3.ab3@7025>   CLR.b (A0)
000238E2 <AmiBlitz3.ab3@7026>   MOVE.w D1,asmlen2
000238E4 <AmiBlitz3.ab3@7027> RTS
000238EA <AmiBlitz3.ab3@7032>   CMP.l #$80ad,d0
000238EE <AmiBlitz3.ab3@7033>   BNE.s 'l12
000238F4 <AmiBlitz3.ab3@7034> JMP bssseg
000238FA <AmiBlitz3.ab3@7037>   CMP.l #$807f,d0
000238FE <AmiBlitz3.ab3@7038>     BNE.s 'l13
00023904 <AmiBlitz3.ab3@7039> JMP chipseg
0002390A <AmiBlitz3.ab3@7042>   ADDQ.l #1,destpointer                                    ;even
00023912 <AmiBlitz3.ab3@7043>   BCLR #$0,destpointer+3
00023916 <AmiBlitz3.ab3@7044>   SUBI.w #$803C,D0
00023918 <AmiBlitz3.ab3@7045>   LSL.w #2,D0
0002391E <AmiBlitz3.ab3@7046>   MOVEA.l #asmpnts,A0
00023922 <AmiBlitz3.ab3@7047>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00023928 <AmiBlitz3.ab3@7048>   MOVE.w D0,temp1
0002392A <AmiBlitz3.ab3@7049>   MOVE.l A0,-(A7)
0002392C <AmiBlitz3.ab3@7050>   MOVEQ.l #$01,D1
00023958 <AmiBlitz3.ab3@7051>    !fget                                                   ;bsr.w get1bytemain
0002395C <AmiBlitz3.ab3@7052>   CMP.w #$2E,D0
00023960 <AmiBlitz3.ab3@7053>    BNE.w JL_0_6184
0002398C <AmiBlitz3.ab3@7054>   !fget                                                    ;bsr.w get1bytemain
00023990 <AmiBlitz3.ab3@7055>   ORI.w #$20,D0
00023994 <AmiBlitz3.ab3@7056>   CMP.w #$77,D0                                            ;long
00023998 <AmiBlitz3.ab3@7057>    BEQ.w JL_0_618A
0002399C <AmiBlitz3.ab3@7058>   CMP.w #$62,D0                                            ;byte
000239A0 <AmiBlitz3.ab3@7059>    BEQ.w JL_0_617A
000239A4 <AmiBlitz3.ab3@7060>   CMP.w #$6C,D0                                            ;word
000239A8 <AmiBlitz3.ab3@7061>    BEQ.w JL_0_6196
000239AC <AmiBlitz3.ab3@7062>   CMP.w #"s",d0
000239B0 <AmiBlitz3.ab3@7063>   BNE syntaxerr
000239B4 <AmiBlitz3.ab3@7064> BRA.w JL_0_617A
000239B6 <AmiBlitz3.ab3@7067>   MOVEQ.l #$00,D1
000239BA <AmiBlitz3.ab3@7068>   MOVE.w $8(A0),D0
000239BE <AmiBlitz3.ab3@7069> BRA.w JL_0_619E
000239C0 <AmiBlitz3.ab3@7072>   MOVEQ.l #$04,D1
000239C4 <AmiBlitz3.ab3@7073> BRA.w JL_0_61AE
000239C6 <AmiBlitz3.ab3@7076>   MOVEQ.l #$04,D1
000239CA <AmiBlitz3.ab3@7077>   MOVE.w $8(A0),D0
000239CC <AmiBlitz3.ab3@7078>   LSR.w #4,D0
000239D0 <AmiBlitz3.ab3@7079> BRA.w JL_0_619E
000239D2 <AmiBlitz3.ab3@7082>   MOVEQ.l #$08,D1
000239D6 <AmiBlitz3.ab3@7083>   MOVE.w $8(A0),D0
000239D8 <AmiBlitz3.ab3@7084>   LSR.w #8,D0
000239DC <AmiBlitz3.ab3@7087>    ANDI.w #$F,D0
000239E0 <AmiBlitz3.ab3@7088>   CMP.w #$F,D0
000239E4 <AmiBlitz3.ab3@7089>    BNE.w 'cl60
000239EC <AmiBlitz3.ab3@7092>    CMP.l #"MULS",-6(a0)
000239F0 <AmiBlitz3.ab3@7093>    BNE 'c20
000239F6 <AmiBlitz3.ab3@7094>    MOVE.l #$4c000800,d1
000239FC <AmiBlitz3.ab3@7095> JMP do32
00023A04 <AmiBlitz3.ab3@7098>    CMP.l #"MULU",-6(a0)
00023A08 <AmiBlitz3.ab3@7099>    BNE 'c30
00023A0E <AmiBlitz3.ab3@7100>    MOVE.l #$4c000000,d1
00023A14 <AmiBlitz3.ab3@7101> JMP do32
00023A1C <AmiBlitz3.ab3@7104>    CMP.l #"DIVS",-6(a0)
00023A20 <AmiBlitz3.ab3@7105>    BNE 'c40
00023A26 <AmiBlitz3.ab3@7106>    MOVE.l #$4c400800,d1
00023A2C <AmiBlitz3.ab3@7107> JMP do32
00023A34 <AmiBlitz3.ab3@7110>    CMP.l #"DIVU",-6(a0)
00023A38 <AmiBlitz3.ab3@7111>    BNE 'c50
00023A3E <AmiBlitz3.ab3@7112>    MOVE.l #$4c400000,d1
00023A44 <AmiBlitz3.ab3@7113> JMP do32
00023A48 <AmiBlitz3.ab3@7116> BRA illsizeerr
00023A74 <AmiBlitz3.ab3@7119>   !fget                                                    ;bsr.w get1bytemain
00023A7A <AmiBlitz3.ab3@7122>   MOVE.w D1,asmsize
00023A7C <AmiBlitz3.ab3@7123>   MOVEQ.l #-$01,D3
00023A80 <AmiBlitz3.ab3@7124>    BSR.w reget
00023A84 <AmiBlitz3.ab3@7125>    BEQ.w JL_0_6200
00023A8E <AmiBlitz3.ab3@7126>   MOVE.l #ptr_parameterstore,asmbuff
00023A98 <AmiBlitz3.ab3@7128>    MOVE.w oldqflag,instringon
00023A9E <AmiBlitz3.ab3@7129>   MOVEA.l lastsourcepos,A5
00023AA2 <AmiBlitz3.ab3@7130>    BSR.w JL_0_5DC2
00023AA4 <AmiBlitz3.ab3@7131>   MOVE.l D4,D2                                             ;to src
00023AA6 <AmiBlitz3.ab3@7132>   MOVE.l D5,D3
00023AB0 <AmiBlitz3.ab3@7133>   MOVE.w asmlen2,asmlen
00023AB2 <AmiBlitz3.ab3@7134>   MOVEQ.l #-$01,D5
00023ABC <AmiBlitz3.ab3@7135>   MOVE.w extraword,extraword2
00023AC0 <AmiBlitz3.ab3@7136>   CMP.w #$2C,D0                                            ;','
00023AC4 <AmiBlitz3.ab3@7137>    BNE.w JL_0_6200
00023ACE <AmiBlitz3.ab3@7138>   MOVE.l #namebuff2,asmbuff
00023AD2 <AmiBlitz3.ab3@7139>    BSR.w JL_0_5DC2                                         ;dest
00023AD4 <AmiBlitz3.ab3@7142>   MOVEA.l (A7)+,A0
00023ADA <AmiBlitz3.ab3@7143>   MOVEA.l destpointer,A1
00023ADC <AmiBlitz3.ab3@7144>   MOVEA.l A1,A4
00023ADE <AmiBlitz3.ab3@7145>   ADDQ.w #2,A1
00023AE0 <AmiBlitz3.ab3@7146>   MOVE.w (A0),D1
00023AE2 <AmiBlitz3.ab3@7147>   TST.w D3
00023AE6 <AmiBlitz3.ab3@7148>    BMI.w JL_0_639E
00023AEA <AmiBlitz3.ab3@7149>   MOVE.w $E(A0),D0
00023AEE <AmiBlitz3.ab3@7150>    BPL.w JL_0_6264
00023AF2 <AmiBlitz3.ab3@7151>   BTST #$0,D0
00023AF6 <AmiBlitz3.ab3@7152>    BEQ.w JL_0_6240
00023AFA <AmiBlitz3.ab3@7153>   CMP.w #$1,D5
00023AFE <AmiBlitz3.ab3@7154>    BNE.w JL_0_6240
00023B02 <AmiBlitz3.ab3@7155>   CMP.w #$E,D3
00023B06 <AmiBlitz3.ab3@7156>    BEQ.w JL_0_6264
00023B0C <AmiBlitz3.ab3@7157>   MOVE.w temp1,D0
00023B0E <AmiBlitz3.ab3@7158>   ADDQ.w #4,D0
00023B12 <AmiBlitz3.ab3@7159> BRA.w JL_0_6256
00023B16 <AmiBlitz3.ab3@7162>   BTST #$1,D0
00023B1A <AmiBlitz3.ab3@7163>    BEQ.w JL_0_6264
00023B1E <AmiBlitz3.ab3@7164>   CMP.w #$B,D3
00023B22 <AmiBlitz3.ab3@7165>    BNE.w JL_0_6264
00023B28 <AmiBlitz3.ab3@7166>   MOVE.w temp1,D0
00023B2A <AmiBlitz3.ab3@7169>   ADDQ.w #4,D0
00023B30 <AmiBlitz3.ab3@7170>   MOVEA.l #asmpnts,A0
00023B34 <AmiBlitz3.ab3@7171>   MOVEA.l $0(A0,D0.W),A0
00023B36 <AmiBlitz3.ab3@7172>   MOVE.w (A0),D1
00023B40 <AmiBlitz3.ab3@7175>   MOVE.l #ptr_parameterstore,buff1
00023B4A <AmiBlitz3.ab3@7176>   MOVE.l #namebuff2,buff2
00023B4E <AmiBlitz3.ab3@7177>   MOVE.l $A(A0),D0
00023B52 <AmiBlitz3.ab3@7178>    BEQ.w JL_0_62DC
00023B54 <AmiBlitz3.ab3@7179>   MOVEA.l D0,A3
00023B5A <AmiBlitz3.ab3@7180>   MOVE.w asmsize,D6
00023B5C <AmiBlitz3.ab3@7183>    JSR (A3)
00023B60 <AmiBlitz3.ab3@7184>    BPL.w JL_0_629A
00023B64 <AmiBlitz3.ab3@7185>   CMP.w #-$2,D0
00023B68 <AmiBlitz3.ab3@7186>    BEQ.w illsizeerr
00023B6C <AmiBlitz3.ab3@7187> BRA.w illeaerr
00023B70 <AmiBlitz3.ab3@7190>   BEQ.w JL_0_62DC
00023B72 <AmiBlitz3.ab3@7191>   EXG.l D2,D4
00023B74 <AmiBlitz3.ab3@7192>   EXG.l D3,D5
00023B7A <AmiBlitz3.ab3@7193>   MOVE.l extraword,D6
00023B7C <AmiBlitz3.ab3@7194>   SWAP D6
00023B82 <AmiBlitz3.ab3@7195>   MOVE.l D6,extraword
00023B8C <AmiBlitz3.ab3@7196>   MOVE.l #namebuff2,buff1
00023B96 <AmiBlitz3.ab3@7197>   MOVE.l #ptr_parameterstore,buff2
00023B9C <AmiBlitz3.ab3@7198>   MOVE.w asmlen,D6
00023BA2 <AmiBlitz3.ab3@7199>   MOVE.w asmlen2,D7
00023BA8 <AmiBlitz3.ab3@7200>   MOVE.w D6,asmlen2
00023BAE <AmiBlitz3.ab3@7201>   MOVE.w D7,asmlen
00023BB8 <AmiBlitz3.ab3@7204>   MOVE.l buff1,asmbuff
00023BBC <AmiBlitz3.ab3@7205>   MOVE.w $E(A0),D0
00023BC0 <AmiBlitz3.ab3@7206>    BEQ.w JL_0_6348
00023BC4 <AmiBlitz3.ab3@7207>    BMI.w JL_0_6348
00023BC8 <AmiBlitz3.ab3@7208>    CMP.w #$7000,d1
00023BCC <AmiBlitz3.ab3@7209>    BNE 'skip
00023BD0 <AmiBlitz3.ab3@7210>    CMP.w #$b,d3
00023BD4 <AmiBlitz3.ab3@7211>    BNE illeaerr
00023BD8 <AmiBlitz3.ab3@7214>    CMP.w #$1,D0
00023BDC <AmiBlitz3.ab3@7215>    BNE.w JL_0_630E
00023BE0 <AmiBlitz3.ab3@7216>    CMP.w #$B,D3
00023BE4 <AmiBlitz3.ab3@7217>    BNE.w JL_0_6348
00023BE8 <AmiBlitz3.ab3@7220>    BSR.w insasm
00023BEA <AmiBlitz3.ab3@7221>   MOVE.w D4,D2
00023BEC <AmiBlitz3.ab3@7222>   MOVE.w D5,D3
00023BF0 <AmiBlitz3.ab3@7223> BRA.w JL_0_6364
00023BF4 <AmiBlitz3.ab3@7226>    CMP.w #$2,D0
00023BF8 <AmiBlitz3.ab3@7227>    BNE.w JL_0_6324
00023BFC <AmiBlitz3.ab3@7228>   CMP.w #$8,D3
00023C00 <AmiBlitz3.ab3@7229>    BNE.w illeaerr
00023C02 <AmiBlitz3.ab3@7230>   MOVEQ.l #$09,D3
00023C06 <AmiBlitz3.ab3@7231> BRA.w JL_0_6348
00023C0A <AmiBlitz3.ab3@7234>    CMP.w #$3,D0
00023C0E <AmiBlitz3.ab3@7235>    BEQ.w JL_0_6302
00023C12 <AmiBlitz3.ab3@7236>   CMP.w #$4,D0
00023C16 <AmiBlitz3.ab3@7237>    BEQ.w JL_0_6302
00023C1A <AmiBlitz3.ab3@7238>   CMP.w #$5,D0
00023C1E <AmiBlitz3.ab3@7239>    BNE.w JL_0_6348
00023C22 <AmiBlitz3.ab3@7240>   CMP.w #$8,D5
00023C26 <AmiBlitz3.ab3@7241>    BNE.w illeaerr
00023C28 <AmiBlitz3.ab3@7242>   OR.w D2,D1
00023C2A <AmiBlitz3.ab3@7243>   MOVEQ.l #$09,D5
00023C2E <AmiBlitz3.ab3@7246>   MOVE.w $2(A0),D6
00023C32 <AmiBlitz3.ab3@7247>   MOVE.b $6(A0),D7
00023C36 <AmiBlitz3.ab3@7248>   MOVEM.l D4-D5,-(A7)
00023C3C <AmiBlitz3.ab3@7249>   MOVE.w extraword2,D4
00023C40 <AmiBlitz3.ab3@7250>    BSR.w doea
00023C44 <AmiBlitz3.ab3@7251>   MOVEM.l (A7)+,D2-D3
00023C46 <AmiBlitz3.ab3@7252>   TST.w D3
00023C4A <AmiBlitz3.ab3@7255>     BMI.w JL_0_6392
00023C50 <AmiBlitz3.ab3@7256>   MOVE.w extraword,D4
00023C54 <AmiBlitz3.ab3@7257>   MOVE.w $4(A0),D6
00023C58 <AmiBlitz3.ab3@7258>   MOVE.b $7(A0),D7
00023C62 <AmiBlitz3.ab3@7259>   MOVE.l buff2,asmbuff
00023C6C <AmiBlitz3.ab3@7260>   MOVE.w asmlen2,asmlen
00023C70 <AmiBlitz3.ab3@7261>    BSR.w doea
00023C74 <AmiBlitz3.ab3@7262> BRA.w JL_0_63AA
00023C78 <AmiBlitz3.ab3@7265>   MOVE.w $4(A0),D0
00023C7C <AmiBlitz3.ab3@7266>    BNE.w illeaerr
00023C80 <AmiBlitz3.ab3@7267> BRA.w JL_0_63AA
00023C84 <AmiBlitz3.ab3@7271>   MOVE.w $2(A0),D0
00023C88 <AmiBlitz3.ab3@7272>   OR.w $4(A0),D0
00023C8C <AmiBlitz3.ab3@7273>    BNE.w illeaerr
00023C90 <AmiBlitz3.ab3@7276>   MOVE.w $8(A0),D0
00023C94 <AmiBlitz3.ab3@7277>   ANDI.w #$F000,D0
00023C98 <AmiBlitz3.ab3@7278>   CMP.w #-$1000,D0
00023C9C <AmiBlitz3.ab3@7279>    BEQ.w JL_0_63D2
00023C9E <AmiBlitz3.ab3@7280>   LSR.w #8,D0
00023CA0 <AmiBlitz3.ab3@7281>   LSR.w #4,D0
00023CA4 <AmiBlitz3.ab3@7282>   MOVE.w $8(A0),D2
00023CAA <AmiBlitz3.ab3@7283>   MOVE.w asmsize,D3
00023CAC <AmiBlitz3.ab3@7284>   LSR.w D3,D2
00023CB0 <AmiBlitz3.ab3@7285>   ANDI.w #$F,D2
00023CB2 <AmiBlitz3.ab3@7286>   LSL.w D0,D2
00023CB4 <AmiBlitz3.ab3@7287>   OR.w D2,D1
00023CBA <AmiBlitz3.ab3@7290>   CMPA.l destbufferend,A4
00023CBE <AmiBlitz3.ab3@7291>    BCS.w JL_0_63E8
00023CC6 <AmiBlitz3.ab3@7293>   MOVE.w #$FFFF,dontwrite
00023CCA <AmiBlitz3.ab3@7294> BRA.w JL_0_63EA
00023CCC <AmiBlitz3.ab3@7297>   MOVE.w D1,(A4)
00023CD2 <AmiBlitz3.ab3@7300>   MOVE.l A1,destpointer
00023CD4 <AmiBlitz3.ab3@7301> RTS
00023CDA <AmiBlitz3.ab3@7305>   MOVE.l destpointer,-(A7)
00023CE0 <AmiBlitz3.ab3@7306>   MOVE.l A1,destpointer
00023CE4 <AmiBlitz3.ab3@7307>    BSR.w addoff
00023CEA <AmiBlitz3.ab3@7308>   MOVEA.l destpointer,A1
00023CF0 <AmiBlitz3.ab3@7309>   MOVE.l (A7)+,destpointer
00023CF2 <AmiBlitz3.ab3@7310> RTS
00023CF6 <AmiBlitz3.ab3@7314>   MOVEM.l d2-d6,-(a7)
00023CFC <AmiBlitz3.ab3@7315>   JSR stripspaces
00023D00 <AmiBlitz3.ab3@7316>   CMP.b #"d",(a5)+
00023D04 <AmiBlitz3.ab3@7317>   BNE noreg
00023D06 <AmiBlitz3.ab3@7318>   MOVE.b (a5)+,d0
00023D0A <AmiBlitz3.ab3@7319>   CMP.b #$30,d0
00023D0E <AmiBlitz3.ab3@7320>   BLT noreg
00023D12 <AmiBlitz3.ab3@7321>   CMP.b #$37,d0
00023D16 <AmiBlitz3.ab3@7322>   BGT noreg
00023D1A <AmiBlitz3.ab3@7323>   SUB.b #$30,d0
00023D1C <AmiBlitz3.ab3@7324>   MOVEQ #0,d3
00023D1E <AmiBlitz3.ab3@7325>   MOVE.b d0,d3                                             ;reg1
00023D20 <AmiBlitz3.ab3@7326>   ASL.l #8,d3
00023D22 <AmiBlitz3.ab3@7327>   ASL.l #8,d3
00023D28 <AmiBlitz3.ab3@7328>   JSR stripspaces
00023D2C <AmiBlitz3.ab3@7329>   CMP.b #",",(a5)+
00023D30 <AmiBlitz3.ab3@7330>   BNE noreg
00023D36 <AmiBlitz3.ab3@7331>   JSR stripspaces
00023D3A <AmiBlitz3.ab3@7332>   CMP.b #"d",(a5)+
00023D3E <AmiBlitz3.ab3@7333>   BNE noreg
00023D40 <AmiBlitz3.ab3@7334>   MOVE.b (a5)+,d0
00023D44 <AmiBlitz3.ab3@7335>   CMP.b #$30,d0
00023D48 <AmiBlitz3.ab3@7336>   BLT noreg
00023D4C <AmiBlitz3.ab3@7337>   CMP.b #$37,d0
00023D50 <AmiBlitz3.ab3@7338>   BGT noreg
00023D54 <AmiBlitz3.ab3@7339>   SUB.b #$30,d0
00023D56 <AmiBlitz3.ab3@7340>   MOVEQ #0,d4
00023D58 <AmiBlitz3.ab3@7341>   MOVE.b d0,d4                                             ;reg2
00023D5A <AmiBlitz3.ab3@7342>   ASL.l #8,d4
00023D5C <AmiBlitz3.ab3@7343>   ASL.l #4,d4
00023D5E <AmiBlitz3.ab3@7344>   OR.b d0,d1
00023D60 <AmiBlitz3.ab3@7345>   OR.l d3,d1
00023D62 <AmiBlitz3.ab3@7346>   OR.l d4,d1
00023D68 <AmiBlitz3.ab3@7347>   JSR writelong
00023D6C <AmiBlitz3.ab3@7348>   MOVEM.l (a7)+,d2-d6
00023D70 <AmiBlitz3.ab3@7349>   MOVEM.l d1/a1-a3,-(a7)
00023D74 <AmiBlitz3.ab3@7350> BRA exit
00023D78 <AmiBlitz3.ab3@7354>   MOVEM.l (a7)+,d2-d6
00023D7E <AmiBlitz3.ab3@7355>   LEA errtext,a0
00023D80 <AmiBlitz3.ab3@7356>   MOVE.l a0,-(a7)
00023D86 <AmiBlitz3.ab3@7357> JMP handle_compileerror
00023D8C <AmiBlitz3.ab3@7366>   MOVE.w dontwrite,D1
00023D90 <AmiBlitz3.ab3@7367>    BNE.w asmfixer__done
00023D98 <AmiBlitz3.ab3@7368>   BTST #$7,make_smallestcode
00023D9C <AmiBlitz3.ab3@7369>    BEQ.w asmfixer__go
00023DA0 <AmiBlitz3.ab3@7370>   MOVE.w pass(PC),D1
00023DA4 <AmiBlitz3.ab3@7371>    BEQ.w asmfixer__done
00023DAA <AmiBlitz3.ab3@7374>   MOVEA.l templabel,A2                                     ;insert labels in Code
00023DB2 <AmiBlitz3.ab3@7375>   MOVE.b #1,curtemplabel
00023DBA <AmiBlitz3.ab3@7376>   MOVE.w #$FFFF,constmode
00023DC0 <AmiBlitz3.ab3@7377>   CLR.w regnum
00023DCA <AmiBlitz3.ab3@7378>           MOVE.l #forthstack,forthsp
00023DD4 <AmiBlitz3.ab3@7379>           MOVE.l #precstack,precsp
00023DD8 <AmiBlitz3.ab3@7380>    BSR.w prepstack
00023DDA <AmiBlitz3.ab3@7383>   MOVE.l A2,-(A7)
00023DDE <AmiBlitz3.ab3@7384>    BSR.w chkstop
00023DE0 <AmiBlitz3.ab3@7385>   MOVEA.l (A7)+,A2
00023DE4 <AmiBlitz3.ab3@7386>   CMPA.w #$0,A2
00023DE8 <AmiBlitz3.ab3@7387>    BEQ.w asmfixer__done2
00023DEE <AmiBlitz3.ab3@7388>    CLR.b iee
00023DF4 <AmiBlitz3.ab3@7389>   MOVE.l A2,asmbuff
00023DF8 <AmiBlitz3.ab3@7390>   LEA $10(A2),A5
00023DFC <AmiBlitz3.ab3@7391>   TST.b $F(A2)
00023E00 <AmiBlitz3.ab3@7392>    BNE.w asmfixer__skipo
00023E02 <AmiBlitz3.ab3@7393>   MOVEA.l (A5),A5                                          ;pointer to real text
00023E08 <AmiBlitz3.ab3@7396>    CLR.w asmtype
00023E0C <AmiBlitz3.ab3@7397>    CMP.b #".",(a5)
00023E10 <AmiBlitz3.ab3@7398>    BNE.s asmfixer__skipo_l10
00023E12 <AmiBlitz3.ab3@7399>    MOVE.l a2,-(a7)
00023E14 <AmiBlitz3.ab3@7400>    ADDQ.l #1,a5
00023E1A <AmiBlitz3.ab3@7401>    LEA newtypebase,a2
00023E1E <AmiBlitz3.ab3@7402>    BSR getparameter2
00023E22 <AmiBlitz3.ab3@7403>    BEQ.w syntaxerr
00023E26 <AmiBlitz3.ab3@7404>    BSR findtype
00023E2A <AmiBlitz3.ab3@7405>    BNE.w notypeerr
00023E2E <AmiBlitz3.ab3@7406>    LEA $4(a2),a2
00023E32 <AmiBlitz3.ab3@7407>    BSR getparameter2
00023E36 <AmiBlitz3.ab3@7408>    BEQ.w syntaxerr
00023E3A <AmiBlitz3.ab3@7409>    BSR.w findvariable2
00023E3E <AmiBlitz3.ab3@7410>    BNE.w notypeerr
00023E42 <AmiBlitz3.ab3@7411>    MOVE.w $4(a2),d3
00023E44 <AmiBlitz3.ab3@7412>    EXT.l d3
00023E48 <AmiBlitz3.ab3@7413> BRA asmfixer__skipo_l30b
00023E4C <AmiBlitz3.ab3@7416>   CMP.b #"\",(a5)
00023E50 <AmiBlitz3.ab3@7417>     BNE asmfixer__skipo_l20
00023E52 <AmiBlitz3.ab3@7418>     ADDQ.l #1,a5
00023E54 <AmiBlitz3.ab3@7419>    MOVE.l a2,-(a7)
00023E56 <AmiBlitz3.ab3@7420>    MOVE.l a5,a4
00023E5C <AmiBlitz3.ab3@7421>    LEA usedpath,a5
00023E60 <AmiBlitz3.ab3@7422>    CMP.b #"*",(a5)
00023E64 <AmiBlitz3.ab3@7423>    BNE asmfixer__skipo_lm1
00023E66 <AmiBlitz3.ab3@7424>    ADDQ.l #1,a5
00023E6A <AmiBlitz3.ab3@7427>    BSR.w getparameter2
00023E6E <AmiBlitz3.ab3@7428>    BEQ.w syntaxerr
00023E74 <AmiBlitz3.ab3@7429>    LEA varbase,A2
00023E7C <AmiBlitz3.ab3@7430>    MOVE.b #1,newvariable
00023E80 <AmiBlitz3.ab3@7431>    BSR.w findvariable
00023E86 <AmiBlitz3.ab3@7432>    CLR.b newvariable
00023E8C <AmiBlitz3.ab3@7433>    CMP.l #-1,d0
00023E90 <AmiBlitz3.ab3@7434>    BEQ.w notypeerr
00023E92 <AmiBlitz3.ab3@7435>    MOVE.l a4,a5
00023E96 <AmiBlitz3.ab3@7436>    MOVE.l $a(a2),a2
00023E9A <AmiBlitz3.ab3@7437>    LEA $4(a2),a2
00023E9E <AmiBlitz3.ab3@7438>    BSR getparameter2
00023EA2 <AmiBlitz3.ab3@7439>    BEQ.w syntaxerr
00023EA6 <AmiBlitz3.ab3@7440>    BSR.w findvariable2
00023EAA <AmiBlitz3.ab3@7441>    BNE.w notypeerr
00023EAE <AmiBlitz3.ab3@7442>   MOVE.w $4(A2),D3
00023EB0 <AmiBlitz3.ab3@7443>   EXT.l D3
00023EB6 <AmiBlitz3.ab3@7446>    CMP.b #"[",-1(a5)
00023EBA <AmiBlitz3.ab3@7447>    BNE asmfixer__skipo_l30c
00023EBC <AmiBlitz3.ab3@7448>    MOVEQ #0,d0
00023EBE <AmiBlitz3.ab3@7449>    MOVE.b (a5)+,d0
00023EC0 <AmiBlitz3.ab3@7450>    MOVE.l d3,-(a7)
00023EC2 <AmiBlitz3.ab3@7451>    MOVEQ #0,d3
00023EC8 <AmiBlitz3.ab3@7452>    JSR atoi
00023ECA <AmiBlitz3.ab3@7453>    MOVE.l (a7)+,d1
00023ECE <AmiBlitz3.ab3@7454>    MOVE.l $a(a2),a2
00023ED2 <AmiBlitz3.ab3@7455>    MOVE.w 8(a2),d0
00023ED4 <AmiBlitz3.ab3@7456>    MULS d0,d3
00023ED6 <AmiBlitz3.ab3@7457>    ADD.l d1,d3
00023ED8 <AmiBlitz3.ab3@7460>   MOVE.l (a7)+,a2
00023EDC <AmiBlitz3.ab3@7461> BRA asmfixer__oko
00023EE2 <AmiBlitz3.ab3@7464>   CMP.w #$c,$8(a2)
00023EE6 <AmiBlitz3.ab3@7465>      BEQ asmfixer__skipo_lf1
00023EEC <AmiBlitz3.ab3@7466>      CMP.w #$d,$8(a2)
00023EF0 <AmiBlitz3.ab3@7467>      BEQ asmfixer__skipo_lf1
00023EF6 <AmiBlitz3.ab3@7470>   JSR AJL_0_BF6E
00023EFC <AmiBlitz3.ab3@7473>   MOVEA.l asmbuff,A2
00023F00 <AmiBlitz3.ab3@7474>    BEQ.w asmfixer__oko
00023F04 <AmiBlitz3.ab3@7475>   CMP.w #$28,D0
00023F08 <AmiBlitz3.ab3@7476>    BEQ.w asmfixer__oko
00023F0C <AmiBlitz3.ab3@7477>   CMP.w #$2C,D0
00023F10 <AmiBlitz3.ab3@7478>    BEQ.w asmfixer__oko
00023F14 <AmiBlitz3.ab3@7479> BRA.w syntaxerr
00023F1C <AmiBlitz3.ab3@7482>   MOVE.b #1,iee
00023F20 <AmiBlitz3.ab3@7483> BRA asmfixer__skipo_lf2
00023F24 <AmiBlitz3.ab3@7486>   MOVEA.l $4(A2),A1
00023F28 <AmiBlitz3.ab3@7488>   MOVE.w $8(A2),D1                                         ;labelmode
00023F2C <AmiBlitz3.ab3@7489>   CMP.w #$5,D1
00023F30 <AmiBlitz3.ab3@7490>    BNE.w asmfixer__notdan
00023F34 <AmiBlitz3.ab3@7493>    BSR.w chkword                                         ;word
00023F36 <AmiBlitz3.ab3@7496>   MOVE.w D3,(A1)
00023F3A <AmiBlitz3.ab3@7497> BRA.w asmfixer__next
00023F3E <AmiBlitz3.ab3@7500>   CMP.w #$6,D1
00023F42 <AmiBlitz3.ab3@7501>    BNE.w asmfixer__notdanxi
00023F46 <AmiBlitz3.ab3@7504>    BSR.w chkbyte                                         ;byte
00023F4A <AmiBlitz3.ab3@7507>   MOVE.b D3,$1(A1)
00023F4E <AmiBlitz3.ab3@7508> BRA.w asmfixer__next
00023F52 <AmiBlitz3.ab3@7511>    CMP.w #$11,D1                                           ;byte
00023F56 <AmiBlitz3.ab3@7512>    BEQ.w asmfixer__isbyte2
00023F5A <AmiBlitz3.ab3@7513>    CMP.w #$c,d1
00023F5E <AmiBlitz3.ab3@7514>    BEQ asmfixer__single1
00023F62 <AmiBlitz3.ab3@7515>    CMP.w #$d,d1
00023F66 <AmiBlitz3.ab3@7516>    BEQ asmfixer__double1
00023F6A <AmiBlitz3.ab3@7517>   CMP.w #$7,D1
00023F6E <AmiBlitz3.ab3@7518>    BEQ.w asmfixer__word                                    ;word
00023F72 <AmiBlitz3.ab3@7519>   CMP.w #$8,D1
00023F76 <AmiBlitz3.ab3@7520>    BNE.w asmfixer__notabsl
00023F7C <AmiBlitz3.ab3@7523>   MOVE.w asmtype,D1                                        ;long
00023F80 <AmiBlitz3.ab3@7524>    BEQ.w asmfixer__notpcrel
00023F84 <AmiBlitz3.ab3@7525>      BSR.w asmoff
00023F86 <AmiBlitz3.ab3@7528>   MOVE.l D3,(A1)
00023F8A <AmiBlitz3.ab3@7529> BRA.w asmfixer__next
00023F90 <AmiBlitz3.ab3@7533>   fmove.s fp0,0(a1)
00023F94 <AmiBlitz3.ab3@7534> BRA.w asmfixer__next
00023F9A <AmiBlitz3.ab3@7538>   fmove.d fp0,0(a1)
00023F9E <AmiBlitz3.ab3@7539> BRA.w asmfixer__next
00023FA2 <AmiBlitz3.ab3@7543>   CMP.w #$9,D1
00023FA6 <AmiBlitz3.ab3@7544>    BNE.w asmfixer__notdpc
00023FA8 <AmiBlitz3.ab3@7545>   SUB.l A1,D3                                              ;branchword
00023FAC <AmiBlitz3.ab3@7546>    BSR.w chkword
00023FAE <AmiBlitz3.ab3@7547>   MOVE.w D3,(A1)
00023FB2 <AmiBlitz3.ab3@7548> BRA.w asmfixer__next
00023FB6 <AmiBlitz3.ab3@7552>   CMP.w #$A,D1
00023FBA <AmiBlitz3.ab3@7553>    BNE.w asmfixer__imm
00023FBC <AmiBlitz3.ab3@7554>   SUB.l A1,D3                                              ;branchbyte
00023FC0 <AmiBlitz3.ab3@7555> BRA.w asmfixer__isbyte
00023FC4 <AmiBlitz3.ab3@7559>   CMP.w #$11,d1
00023FC8 <AmiBlitz3.ab3@7560>   BLE asmfixer__imm_org
00023FCA <AmiBlitz3.ab3@7561>   MOVE.l a3,-(a7)
00023FD0 <AmiBlitz3.ab3@7562>   LEA pluginbase,a3
00023FD4 <AmiBlitz3.ab3@7563>   MOVE.l 8(a2),a0
00023FD6 <AmiBlitz3.ab3@7564>   JSR (a0)                                                 ;hook
00023FD8 <AmiBlitz3.ab3@7565>   MOVE.l (a7)+,a3
00023FDC <AmiBlitz3.ab3@7566> BRA asmfixer__next
00023FE0 <AmiBlitz3.ab3@7569>   MOVE.w $A(A2),D0
00023FE4 <AmiBlitz3.ab3@7570>    BEQ.w asmfixer__noflag
00023FE8 <AmiBlitz3.ab3@7571>   CMP.w #$1,D0
00023FEC <AmiBlitz3.ab3@7572>    BEQ.w asmfixer__tocount
00023FF0 <AmiBlitz3.ab3@7573>   CMP.w #$3,D0
00023FF4 <AmiBlitz3.ab3@7574>    BEQ.w asmfixer__tomoveq
00023FF8 <AmiBlitz3.ab3@7575>   CMP.w #$4,D0
00023FFC <AmiBlitz3.ab3@7576>    BEQ.w asmfixer__totrap
00024000 <AmiBlitz3.ab3@7579>   CMP.w #$B,D1                                             ;long
00024004 <AmiBlitz3.ab3@7580>    BEQ.w asmfixer__isabsl
00024008 <AmiBlitz3.ab3@7581> BRA asmfixer__word2                                              ;word
0002400E <AmiBlitz3.ab3@7584>   CMP.l #$F,D3
00024012 <AmiBlitz3.ab3@7585>    BHI.w illtraperr
00024014 <AmiBlitz3.ab3@7586>   OR.b D3,-(A1)
00024018 <AmiBlitz3.ab3@7587> BRA.w asmfixer__next
0002401E <AmiBlitz3.ab3@7590>   CMP.l #$8,D3
00024022 <AmiBlitz3.ab3@7591>    BHI.w illimmerr
00024024 <AmiBlitz3.ab3@7592>   TST.l D3
00024028 <AmiBlitz3.ab3@7593>    BEQ.w illimmerr
0002402C <AmiBlitz3.ab3@7594>   ANDI.w #$7,D3
0002402E <AmiBlitz3.ab3@7595>   LSL.w #8,D3
00024030 <AmiBlitz3.ab3@7596>   LSL.w #1,D3
00024032 <AmiBlitz3.ab3@7597>   OR.w D3,-(A1)
00024036 <AmiBlitz3.ab3@7598> BRA.w asmfixer__next
0002403A <AmiBlitz3.ab3@7601>    BSR.w chkbyte
0002403C <AmiBlitz3.ab3@7602>   MOVE.b D3,-(A1)
0002403E <AmiBlitz3.ab3@7605>   MOVEA.l (A2),A2
00024042 <AmiBlitz3.ab3@7606> BRA.w asmfixer__loop
00024048 <AmiBlitz3.ab3@7609>   CLR.w constmode
0002404E <AmiBlitz3.ab3@7612>   CLR.b curtemplabel
00024050 <AmiBlitz3.ab3@7613> RTS
00024052 <AmiBlitz3.ab3@7622>   BTST D3,D6
00024056 <AmiBlitz3.ab3@7623>    BEQ.w illeaerr
0002405A <AmiBlitz3.ab3@7624>    BSR.w makemode
0002405E <AmiBlitz3.ab3@7625>   CMP.w #$7,D3
00024062 <AmiBlitz3.ab3@7626>    BCS.w doea__skip
00024064 <AmiBlitz3.ab3@7627>   MOVE.w D3,D2
00024066 <AmiBlitz3.ab3@7628>   SUBQ.w #7,D2
0002406A <AmiBlitz3.ab3@7629>   CMP.w #$5,D2
0002406E <AmiBlitz3.ab3@7630>    BCS.w doea__skip0
00024070 <AmiBlitz3.ab3@7631>   MOVEQ.l #$04,D2
00024072 <AmiBlitz3.ab3@7634>   MOVEQ.l #$07,D3
00024074 <AmiBlitz3.ab3@7637>   MOVE.b D7,D0
00024078 <AmiBlitz3.ab3@7638>   ANDI.w #$F,D0
0002407C <AmiBlitz3.ab3@7639>   CMP.w #$F,D0
00024080 <AmiBlitz3.ab3@7640>    BEQ.w doea__skip2
00024082 <AmiBlitz3.ab3@7641>   LSL.w D0,D3
00024084 <AmiBlitz3.ab3@7642>   OR.w D3,D1
00024086 <AmiBlitz3.ab3@7645>   LSR.w #4,D7
0002408A <AmiBlitz3.ab3@7646>   ANDI.w #$F,D7
0002408E <AmiBlitz3.ab3@7647>   CMP.w #$F,D7
00024092 <AmiBlitz3.ab3@7648>    BEQ.w doea__skip3
00024094 <AmiBlitz3.ab3@7649>   LSL.w D7,D2
00024096 <AmiBlitz3.ab3@7650>   OR.w D2,D1
00024098 <AmiBlitz3.ab3@7653> RTS
0002409E <AmiBlitz3.ab3@7657>   CMP.l #$7F,D3
000240A2 <AmiBlitz3.ab3@7658>    BGT.w illdiserr
000240A8 <AmiBlitz3.ab3@7659>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
000240AC <AmiBlitz3.ab3@7660>    BLT.w illdiserr
000240AE <AmiBlitz3.ab3@7661> RTS
000240B4 <AmiBlitz3.ab3@7665>   CMP.l #$7fff,D3
000240B8 <AmiBlitz3.ab3@7666>    BGT.w illdiserr
000240BE <AmiBlitz3.ab3@7667>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
000240C2 <AmiBlitz3.ab3@7668>    BLT.w illdiserr
000240C4 <AmiBlitz3.ab3@7669> RTS
000240C6 <AmiBlitz3.ab3@7674>   MOVE.b (a5)+,d0
000240C8 <AmiBlitz3.ab3@7675>   CMP.b d1,d0
000240CC <AmiBlitz3.ab3@7676>   BEQ 'll10
000240CE <AmiBlitz3.ab3@7677>   TST.b d0
000240D2 <AmiBlitz3.ab3@7678>   BNE 'll20
000240D4 <AmiBlitz3.ab3@7681>   SUBQ #1,a5
000240D6 <AmiBlitz3.ab3@7682> RTS
000240D8 <AmiBlitz3.ab3@7687>   MOVE.b (a5)+,d0
000240DC <AmiBlitz3.ab3@7688>   CMP.b #",",d0
000240E0 <AmiBlitz3.ab3@7689>   BEQ 'll10
000240E4 <AmiBlitz3.ab3@7690>   CMP.b #";",d0
000240E8 <AmiBlitz3.ab3@7691>   BEQ 'll10
000240EC <AmiBlitz3.ab3@7692>  CMP.b #":",d0
000240F0 <AmiBlitz3.ab3@7693>   BEQ 'll10
000240F2 <AmiBlitz3.ab3@7696>   TST.b d0
000240F6 <AmiBlitz3.ab3@7697>   BNE 'll20
000240F8 <AmiBlitz3.ab3@7700>   SUBQ #1,a5
000240FA <AmiBlitz3.ab3@7701> RTS
000240FC <AmiBlitz3.ab3@7705>   ADD.l a2,d1
00024102 <AmiBlitz3.ab3@7706>   LEA tempspace,a1
00024104 <AmiBlitz3.ab3@7707>   MOVE.l d1,a0
00024106 <AmiBlitz3.ab3@7710>   MOVE.b (a0)+,(a1)+
0002410A <AmiBlitz3.ab3@7711>   BNE.s 'l10
0002410C <AmiBlitz3.ab3@7712>   SUBQ.l #1,a0
0002410E <AmiBlitz3.ab3@7713>   SUBQ.l #1,a1
00024110 <AmiBlitz3.ab3@7716>   MOVE.b (a5)+,(a1)+
00024114 <AmiBlitz3.ab3@7717>   BNE.s 'l20
00024116 <AmiBlitz3.ab3@7718>   CLR.b (a1)
0002411C <AmiBlitz3.ab3@7719>   LEA tempspace,a5
0002411E <AmiBlitz3.ab3@7720> RTS
00024122 <AmiBlitz3.ab3@7724>   MOVEM.l D1-D2/A0,-(A7)
00024124 <AmiBlitz3.ab3@7725>   MOVE.l d0,d2
00024126 <AmiBlitz3.ab3@7726>   MOVEQ #0,d1
00024128 <AmiBlitz3.ab3@7727>   MOVE.l a5,a4
0002412A <AmiBlitz3.ab3@7730>   ADDQ.l #1,d1
0002412C <AmiBlitz3.ab3@7731>   MOVE.b (a5)+,d0
00024130 <AmiBlitz3.ab3@7732>   CMP.b #",",d0
00024134 <AmiBlitz3.ab3@7733>   BEQ 'll10
00024138 <AmiBlitz3.ab3@7734>   CMP.b #";",d0
0002413C <AmiBlitz3.ab3@7735>   BEQ 'll10
00024140 <AmiBlitz3.ab3@7736>   CMP.b #":",d0
00024144 <AmiBlitz3.ab3@7737>   BEQ 'll10
00024148 <AmiBlitz3.ab3@7738>   CMP.b #"(",d0
0002414C <AmiBlitz3.ab3@7739>   BEQ 'll10
0002414E <AmiBlitz3.ab3@7740>   TST.b d0
00024152 <AmiBlitz3.ab3@7741>   BNE 'll20
00024154 <AmiBlitz3.ab3@7744>   SUBQ #1,a5
00024158 <AmiBlitz3.ab3@7745>   CMP.b #"'",(a4)
0002415C <AmiBlitz3.ab3@7746>   BEQ 'llocal
00024162 <AmiBlitz3.ab3@7747>   TST.w inmacro
00024166 <AmiBlitz3.ab3@7748>   BNE 'lmacro
00024168 <AmiBlitz3.ab3@7749>   MOVEQ.l #$14+4,D0
0002416A <AmiBlitz3.ab3@7750>   ADD.l d1,d0
0002416C <AmiBlitz3.ab3@7751>   MOVE.l d1,-(a7)
0002416E <AmiBlitz3.ab3@7752>   MOVEQ.l #$01,D1
00024174 <AmiBlitz3.ab3@7753>   MOVEA.l _execbase,A6
0002417A <AmiBlitz3.ab3@7754>   MOVE.l mempool2,a0
0002417E <AmiBlitz3.ab3@7755>   JSR _AllocPooled(a6)
00024180 <AmiBlitz3.ab3@7757>   MOVE.l (a7)+,d1
00024182 <AmiBlitz3.ab3@7758>   TST.l d0
00024186 <AmiBlitz3.ab3@7759>   BEQ nomemory
00024188 <AmiBlitz3.ab3@7760>   MOVEA.l D0,A0
00024190 <AmiBlitz3.ab3@7762>   MOVE.w linenumat+2,$A(A0)
00024196 <AmiBlitz3.ab3@7764>   MOVE.l templabel,(A0)
0002419C <AmiBlitz3.ab3@7765>   MOVE.l A0,templabel
000241A4 <AmiBlitz3.ab3@7766>   MOVE.l destpointer,$4(A0)
000241A8 <AmiBlitz3.ab3@7767>   MOVE.l d2,$8(A0)
000241AC <AmiBlitz3.ab3@7768>   LEA $E(A0),A0
000241B0 <AmiBlitz3.ab3@7769>   MOVE.b #$14,(A0)+
000241B2 <AmiBlitz3.ab3@7770>   CLR.b (a0)+
000241B4 <AmiBlitz3.ab3@7772>   MOVE.l a0,d2
000241B6 <AmiBlitz3.ab3@7773>   ADDQ.l #4,d2
000241B8 <AmiBlitz3.ab3@7774>   MOVE.l d2,(a0)+
000241BA <AmiBlitz3.ab3@7777>   MOVE.b (a4)+,(a0)+
000241BC <AmiBlitz3.ab3@7778>   SUBQ.l #1,d1
000241C0 <AmiBlitz3.ab3@7779>   BNE 'lc1
000241C2 <AmiBlitz3.ab3@7780>   CLR.b (a0)+
000241C8 <AmiBlitz3.ab3@7781>   MOVE.w linenumat,(a0)
000241CC <AmiBlitz3.ab3@7782>   MOVEM.l (A7)+,D1-D2/A0
000241CE <AmiBlitz3.ab3@7783> RTS
000241D0 <AmiBlitz3.ab3@7786>   MOVEQ.l #$10+2,D0
000241D2 <AmiBlitz3.ab3@7787>   ADD.l d1,d0
000241D6 <AmiBlitz3.ab3@7788>   MOVEM.l a4/d3,-(a7)
000241D8 <AmiBlitz3.ab3@7789>   MOVE.l d1,d3
000241DA <AmiBlitz3.ab3@7790>   MOVEQ.l #$01,D1
000241E0 <AmiBlitz3.ab3@7791>   MOVEA.l _execbase,A6
000241E6 <AmiBlitz3.ab3@7792>   MOVE.l mempool2,a0
000241EA <AmiBlitz3.ab3@7793>   JSR _AllocPooled(a6)
000241EC <AmiBlitz3.ab3@7795>   TST.l d0
000241F0 <AmiBlitz3.ab3@7796>   BEQ nomemory
000241F2 <AmiBlitz3.ab3@7797>   MOVEA.l D0,A0
000241FA <AmiBlitz3.ab3@7800>   MOVE.w linenumat+2,$C(A0)
00024200 <AmiBlitz3.ab3@7801>   MOVE.l templabel,(A0)
00024206 <AmiBlitz3.ab3@7802>   MOVE.l A0,templabel
0002420E <AmiBlitz3.ab3@7803>   MOVE.l destpointer,$4(A0)
00024212 <AmiBlitz3.ab3@7804>   MOVE.l d2,$8(A0)
00024216 <AmiBlitz3.ab3@7805>   LEA $E(A0),A0
00024218 <AmiBlitz3.ab3@7806>   MOVE.b d3,(A0)+
0002421E <AmiBlitz3.ab3@7807>   ADD.b #$10,-1(a0)
00024222 <AmiBlitz3.ab3@7808>   MOVE.b #$1,(a0)+
00024224 <AmiBlitz3.ab3@7809>   SUBQ.w #1,d3
00024226 <AmiBlitz3.ab3@7812>   MOVE.b (a4)+,(a0)+
00024228 <AmiBlitz3.ab3@7813>   SUBQ.l #1,d3
0002422C <AmiBlitz3.ab3@7814>   BNE.s 'lm2
0002422E <AmiBlitz3.ab3@7815>   CLR.b (a0)+
00024234 <AmiBlitz3.ab3@7816>   MOVE.w linenumat,(a0)
00024238 <AmiBlitz3.ab3@7817>   MOVEM.l (a7)+,d3/a4
0002423C <AmiBlitz3.ab3@7818>   MOVEM.l (A7)+,D1-D2/A0
0002423E <AmiBlitz3.ab3@7819> RTS
00024244 <AmiBlitz3.ab3@7822>   LEA lastgloballabel,a1
00024246 <AmiBlitz3.ab3@7825>   ADDQ.l #1,d1
00024248 <AmiBlitz3.ab3@7826>   TST.b (a1)+
0002424C <AmiBlitz3.ab3@7827>   BNE.s 'll11
0002424E <AmiBlitz3.ab3@7828>   MOVEQ.l #$10+2,D0
00024250 <AmiBlitz3.ab3@7829>   ADD.l d1,d0
00024254 <AmiBlitz3.ab3@7830>   MOVEM.l a4/d3,-(a7)
00024256 <AmiBlitz3.ab3@7831>   MOVE.l d1,d3
00024258 <AmiBlitz3.ab3@7832>   MOVEQ.l #$01,D1
0002425E <AmiBlitz3.ab3@7833>   MOVEA.l _execbase,A6
00024264 <AmiBlitz3.ab3@7834>   MOVE.l mempool2,a0
00024268 <AmiBlitz3.ab3@7835>   JSR _AllocPooled(a6)
0002426A <AmiBlitz3.ab3@7837>   TST.l d0
0002426E <AmiBlitz3.ab3@7838>   BEQ nomemory
00024270 <AmiBlitz3.ab3@7839>   MOVEA.l D0,A0
00024278 <AmiBlitz3.ab3@7842>   MOVE.w linenumat+2,$C(A0)
0002427E <AmiBlitz3.ab3@7843>   MOVE.l templabel,(A0)
00024284 <AmiBlitz3.ab3@7844>   MOVE.l A0,templabel
0002428C <AmiBlitz3.ab3@7845>   MOVE.l destpointer,$4(A0)
00024290 <AmiBlitz3.ab3@7846>   MOVE.l d2,$8(A0)
00024294 <AmiBlitz3.ab3@7847>   LEA $E(A0),A0
00024296 <AmiBlitz3.ab3@7848>   MOVE.b d3,(A0)+
0002429C <AmiBlitz3.ab3@7849>   ADD.b #$10,-1(a0)
000242A0 <AmiBlitz3.ab3@7850>   MOVE.b #$1,(a0)+
000242A2 <AmiBlitz3.ab3@7851>   SUBQ.w #1,d3
000242A8 <AmiBlitz3.ab3@7852>   LEA lastgloballabel,a1
000242AA <AmiBlitz3.ab3@7855>   SUBQ.l #1,d3
000242AC <AmiBlitz3.ab3@7856>   MOVE.b (a1)+,(a0)+
000242B0 <AmiBlitz3.ab3@7857>   BNE.s 'lm3
000242B2 <AmiBlitz3.ab3@7858>   SUBQ.l #1,a0
000242B4 <AmiBlitz3.ab3@7861>   MOVE.b (a4)+,(a0)+
000242B6 <AmiBlitz3.ab3@7862>   SUBQ.l #1,d3
000242BA <AmiBlitz3.ab3@7863>   BNE.s 'lm1
000242BC <AmiBlitz3.ab3@7864>   CLR.b (a0)+
000242C2 <AmiBlitz3.ab3@7865>   MOVE.w linenumat,(a0)
000242C6 <AmiBlitz3.ab3@7866>   MOVEM.l (a7)+,d3/a4
000242CA <AmiBlitz3.ab3@7867>   MOVEM.l (A7)+,D1-D2/A0
000242CC <AmiBlitz3.ab3@7868> RTS
000242F6 <AmiBlitz3.ab3@7872>   !basic
00024358 <AmiBlitz3.ab3@7873>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
0002436A <AmiBlitz3.ab3@7874>   loop Delay_ 1
00024370 <AmiBlitz3.ab3@7875> Goto loop
00024374 <AmiBlitz3.ab3@7879>   MOVEM.l D0-D2/A0,-(A7)
00024378 <AmiBlitz3.ab3@7880>   MOVE.w $E(A0),-(A7)
0002437C <AmiBlitz3.ab3@7881>    BPL.w insasm__ok
0002437E <AmiBlitz3.ab3@7882>   CLR.w (A7)
00024380 <AmiBlitz3.ab3@7885>   MOVE.l A1,-(A7)
00024382 <AmiBlitz3.ab3@7886>   MOVEQ.l #$10+2,D0
00024388 <AmiBlitz3.ab3@7887>   ADD.w asmlen,D0
0002438A <AmiBlitz3.ab3@7888>   MOVE.w D0,D2
0002438C <AmiBlitz3.ab3@7889>   MOVEQ.l #$01,D1
00024392 <AmiBlitz3.ab3@7890>   MOVEA.l _execbase,A6
00024398 <AmiBlitz3.ab3@7891>   MOVE.l mempool2,a0
0002439C <AmiBlitz3.ab3@7892>   JSR _AllocPooled(a6)
0002439E <AmiBlitz3.ab3@7894>   MOVEA.l D0,A0
000243A6 <AmiBlitz3.ab3@7897>   MOVE.w linenumat+2,$C(A0)
000243AC <AmiBlitz3.ab3@7898>   MOVE.l templabel,(A0)
000243B2 <AmiBlitz3.ab3@7899>   MOVE.l A0,templabel
000243B6 <AmiBlitz3.ab3@7900>   MOVE.l (A7),$4(A0)
000243BA <AmiBlitz3.ab3@7901>   MOVE.w d3,$8(A0)
000243C0 <AmiBlitz3.ab3@7902>   MOVE.w $4(A7),$A(A0)
000243C4 <AmiBlitz3.ab3@7903>   LEA $E(A0),A0
000243C6 <AmiBlitz3.ab3@7904>   MOVE.b D2,(A0)+                                           ;length
000243CC <AmiBlitz3.ab3@7905>   MOVEA.l asmbuff,A1
000243CE <AmiBlitz3.ab3@7906>   ADDQ.w #1,A1
000243D0 <AmiBlitz3.ab3@7907>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
000243D4 <AmiBlitz3.ab3@7908>    BNE.w insasm__loop
000243D6 <AmiBlitz3.ab3@7909>   MOVE.l (A1)+,(A0)+
000243DC <AmiBlitz3.ab3@7910>   MOVE.w linenumat,(a0)
000243E0 <AmiBlitz3.ab3@7911> BRA.w insasm__loopdone
000243E2 <AmiBlitz3.ab3@7914>    MOVE.b (A1)+,(A0)+
000243E6 <AmiBlitz3.ab3@7915>    BNE.w insasm__loop
000243EC <AmiBlitz3.ab3@7916>    MOVE.w linenumat,(a0)
000243EE <AmiBlitz3.ab3@7919>   MOVEA.l (A7)+,A1
000243F0 <AmiBlitz3.ab3@7920>   ADDQ.w #2,A7
000243F4 <AmiBlitz3.ab3@7921>   MOVEM.l (A7)+,D0-D2/A0
000243F6 <AmiBlitz3.ab3@7922> RTS
000243FA <AmiBlitz3.ab3@7926>   CMP.w #$5,D3
000243FE <AmiBlitz3.ab3@7927>    BCS.w makemode__done
00024402 <AmiBlitz3.ab3@7928>   CMP.w #$B,D3
00024406 <AmiBlitz3.ab3@7929>    BHI.w makemode__done2
0002440A <AmiBlitz3.ab3@7930>    BEQ.w makemode__imm
0002440E <AmiBlitz3.ab3@7931>    BSR.w insasm
00024412 <AmiBlitz3.ab3@7932>   CMP.w #$5,D3
00024416 <AmiBlitz3.ab3@7933>    BEQ.w makemode__word
0002441A <AmiBlitz3.ab3@7934>   CMP.w #$6,D3
0002441E <AmiBlitz3.ab3@7935>    BEQ.w makemode__dxi
00024422 <AmiBlitz3.ab3@7936>   CMP.w #$7,D3
00024426 <AmiBlitz3.ab3@7937>    BEQ.w makemode__word
0002442A <AmiBlitz3.ab3@7938>   CMP.w #$8,D3
0002442E <AmiBlitz3.ab3@7939>    BEQ.w makemode__long
00024432 <AmiBlitz3.ab3@7940>   CMP.w #$9,D3
00024436 <AmiBlitz3.ab3@7941>    BEQ.w makemode__word
0002443C <AmiBlitz3.ab3@7945>   CMPA.l destbufferend,A1
00024440 <AmiBlitz3.ab3@7946>    BCS.w makemode__ok7
00024442 <AmiBlitz3.ab3@7947>   ADDQ.w #2,A1
00024444 <AmiBlitz3.ab3@7948> RTS
00024446 <AmiBlitz3.ab3@7951>   MOVE.w D4,(A1)+
00024448 <AmiBlitz3.ab3@7952> RTS
00024450 <AmiBlitz3.ab3@7955>   CMPI.w #$8,asmsize
00024454 <AmiBlitz3.ab3@7956>    BCC.w makemode__immlong
00024456 <AmiBlitz3.ab3@7957>   MOVEQ.l #$10,D3
0002445A <AmiBlitz3.ab3@7958>    BSR.w insasm
0002445C <AmiBlitz3.ab3@7959>   MOVEQ.l #$0B,D3
00024460 <AmiBlitz3.ab3@7960> BRA.w makemode__word
00024464 <AmiBlitz3.ab3@7963>   BSR.w insasm
00024466 <AmiBlitz3.ab3@7966>   ADDQ.w #2,A1
00024468 <AmiBlitz3.ab3@7969>   ADDQ.w #2,A1
0002446A <AmiBlitz3.ab3@7970> RTS
0002446E <AmiBlitz3.ab3@7973>   CMP.w #$F,D3
00024472 <AmiBlitz3.ab3@7974>    BNE.w makemode__done
00024478 <AmiBlitz3.ab3@7975>   CMPA.l destbufferend,A1
0002447C <AmiBlitz3.ab3@7976>    BCS.w makemode__ok3
0002447E <AmiBlitz3.ab3@7977>   ADDQ.w #2,A1
00024480 <AmiBlitz3.ab3@7978>   ADDQ.w #4,A7
00024482 <AmiBlitz3.ab3@7979> RTS
00024484 <AmiBlitz3.ab3@7982>   MOVE.w D2,(A1)+
00024486 <AmiBlitz3.ab3@7983>   ADDQ.w #4,A7
00024488 <AmiBlitz3.ab3@7986> RTS
0002448C <AmiBlitz3.ab3@7990>   BSR.w storeloc
00024496 <AmiBlitz3.ab3@7991>   MOVE.l linenumat,oldline
00024498 <AmiBlitz3.ab3@7992>   MOVEQ.l #$00,D1
0002449C <AmiBlitz3.ab3@7993>    BSR.w get1bytemain
000244A0 <AmiBlitz3.ab3@7994>    BEQ.w JL_0_676E
000244A2 <AmiBlitz3.ab3@7995>   MOVEQ.l #$00,D3
000244A6 <AmiBlitz3.ab3@7996> BRA.w JL_0_6726
000244AA <AmiBlitz3.ab3@7999>    BSR.w get1bytemain
000244AE <AmiBlitz3.ab3@8000>    BNE.w JL_0_671C
000244B0 <AmiBlitz3.ab3@8003>   TST.w D3
000244B4 <AmiBlitz3.ab3@8004>    BNE.w brackets_                                         ;syntax error brackets
000244B8 <AmiBlitz3.ab3@8005> BRA.w JL_0_676C
000244BE <AmiBlitz3.ab3@8008>    MOVE.w instringon,D4
000244C2 <AmiBlitz3.ab3@8010>      BEQ JL_0_6726
000244C4 <AmiBlitz3.ab3@8013>     MOVEQ #0,d0
000244C6 <AmiBlitz3.ab3@8014>      MOVE.b (a5)+,d0                                       ;fix "ue"
000244CC <AmiBlitz3.ab3@8015>      MOVE.w d0,lastchar
000244D0 <AmiBlitz3.ab3@8016>      BEQ ready
000244D4 <AmiBlitz3.ab3@8017>      CMP.b #$22,d0
000244D8 <AmiBlitz3.ab3@8018>      BNE 'l1
000244DE <AmiBlitz3.ab3@8019>      NOT.w instringon
000244E2 <AmiBlitz3.ab3@8020> BRA JL_0_670A
000244E6 <AmiBlitz3.ab3@8023>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
000244EA <AmiBlitz3.ab3@8024>            BNE 'l10
000244EE <AmiBlitz3.ab3@8025>            CMP.b #"@",(a5)
000244F2 <AmiBlitz3.ab3@8026>            BNE 'l10
000244F8 <AmiBlitz3.ab3@8029>            TST.w ininclude
000244FC <AmiBlitz3.ab3@8030>            BNE 'inc
00024502 <AmiBlitz3.ab3@8031>            MOVE.l sourceline3,a5
00024508 <AmiBlitz3.ab3@8032>            CMP.l #0,a5
0002450C <AmiBlitz3.ab3@8033>            BNE 'l11t
00024512 <AmiBlitz3.ab3@8034>            MOVEA.l sourceline,A5
00024514 <AmiBlitz3.ab3@8037>            MOVEA.l (A5),A5
0002451A <AmiBlitz3.ab3@8038>            CMP.l #0,a5
0002451E <AmiBlitz3.ab3@8039>            BEQ JL_0_676C
00024524 <AmiBlitz3.ab3@8040>            MOVE.l a5,sourceline3
00024528 <AmiBlitz3.ab3@8041>            LEA $9(A5),A5
0002452C <AmiBlitz3.ab3@8042> BRA 'l11
0002452E <AmiBlitz3.ab3@8045>            ADDQ.l #1,a5
00024530 <AmiBlitz3.ab3@8046>            TST.b (a5)
00024534 <AmiBlitz3.ab3@8047>            BNE 'inc
00024536 <AmiBlitz3.ab3@8051>            ADDQ.l #1,a5
00024538 <AmiBlitz3.ab3@8052>            TST.b (a5)
0002453C <AmiBlitz3.ab3@8053>            BEQ illeolerr
0002453E <AmiBlitz3.ab3@8054>            MOVE.l a5,-(a7)
00024542 <AmiBlitz3.ab3@8057>       CMP.b #" ",(a5)+
00024546 <AmiBlitz3.ab3@8058>       BEQ 'l110
0002454C <AmiBlitz3.ab3@8059>        CMP.b #";",-1(a5)
0002454E <AmiBlitz3.ab3@8060>        MOVE.l (a7)+,a5
00024552 <AmiBlitz3.ab3@8061>        BEQ 'l111
00024556 <AmiBlitz3.ab3@8062> BRA JL_0_670A
0002455A <AmiBlitz3.ab3@8065>    CMP.w #$29,D0
0002455E <AmiBlitz3.ab3@8066>    BNE.w JL_0_673A
00024560 <AmiBlitz3.ab3@8067>   TST.w D3
00024564 <AmiBlitz3.ab3@8068>    BEQ.w JL_0_676C
00024566 <AmiBlitz3.ab3@8071>   SUBQ.w #1,D3
0002456A <AmiBlitz3.ab3@8072> BRA.w JL_0_670A
0002456E <AmiBlitz3.ab3@8075>    CMP.w #$7D,D0
00024572 <AmiBlitz3.ab3@8076>    BEQ.w JL_0_6734
00024576 <AmiBlitz3.ab3@8077>   CMP.w #$28,D0
0002457A <AmiBlitz3.ab3@8078>    BNE.w JL_0_6750
0002457C <AmiBlitz3.ab3@8081>    ADDQ.w #1,D3
00024580 <AmiBlitz3.ab3@8082> BRA.w JL_0_670A
00024584 <AmiBlitz3.ab3@8085>   CMP.w #$7B,D0
00024588 <AmiBlitz3.ab3@8086>    BEQ.w JL_0_674A
0002458C <AmiBlitz3.ab3@8087>   CMP.w #$2C,D0
00024590 <AmiBlitz3.ab3@8088>    BNE.w JL_0_670A
00024592 <AmiBlitz3.ab3@8089>   TST.w D3
00024596 <AmiBlitz3.ab3@8090>    BNE.w JL_0_670A
00024598 <AmiBlitz3.ab3@8091>   ADDQ.w #1,D1
0002459C <AmiBlitz3.ab3@8092> BRA.w JL_0_670A
0002459E <AmiBlitz3.ab3@8095>   ADDQ.w #1,D1
000245A4 <AmiBlitz3.ab3@8098>   CLR.l sourceline3
000245AE <AmiBlitz3.ab3@8099>   MOVE.l oldline,linenumat
000245B2 <AmiBlitz3.ab3@8100> BRA.w resloc
000245B8 <AmiBlitz3.ab3@8104>    CLR.w numreps
000245BA <AmiBlitz3.ab3@8105>   MOVE.w D1,D0
000245BE <AmiBlitz3.ab3@8106>   ANDI.w #$FF00,D0
000245C2 <AmiBlitz3.ab3@8107>    BEQ.w fetchlibps__noreps
000245C4 <AmiBlitz3.ab3@8108>   LSR.w #8,D0
000245C6 <AmiBlitz3.ab3@8109>   LSR.w #4,D0
000245CA <AmiBlitz3.ab3@8110>    BEQ.w fetchlibps__skip
000245CC <AmiBlitz3.ab3@8111>   SUB.b D0,D1
000245D6 <AmiBlitz3.ab3@8112>    MOVE.w regnum,regnumfunc
000245DC <AmiBlitz3.ab3@8113>    MOVE.b funcparloop,-(a7)
000245E4 <AmiBlitz3.ab3@8114>    MOVE.b #0,funcparloop
000245EA <AmiBlitz3.ab3@8115>    MOVE.l leftsidetype,-(a7)
000245F0 <AmiBlitz3.ab3@8116>    MOVE.l rightsidetype,-(a7)
000245F6 <AmiBlitz3.ab3@8117>    CLR.l leftsidetype
000245FC <AmiBlitz3.ab3@8118>    CLR.l rightsidetype
00024602 <AmiBlitz3.ab3@8119>    MOVE.b blitzparloop,-(a7)
0002460A <AmiBlitz3.ab3@8120>    MOVE.b #1,blitzparloop
0002460E <AmiBlitz3.ab3@8121>    BSR.w fetchpees2
00024614 <AmiBlitz3.ab3@8122>    MOVE.b (a7)+,blitzparloop
0002461A <AmiBlitz3.ab3@8123>    MOVE.l (a7)+,rightsidetype
00024620 <AmiBlitz3.ab3@8124>    MOVE.l (a7)+,leftsidetype
00024626 <AmiBlitz3.ab3@8125>    MOVE.b (a7)+,funcparloop
0002462A <AmiBlitz3.ab3@8126>   CMP.w #$2C,D0
0002462E <AmiBlitz3.ab3@8127>    BNE.w syntaxerr
00024630 <AmiBlitz3.ab3@8130>   MOVE.w D1,D2
00024632 <AmiBlitz3.ab3@8131>   LSR.w #8,D2
00024636 <AmiBlitz3.ab3@8132>   ANDI.w #$7,D2
00024638 <AmiBlitz3.ab3@8135>    CMP.b D2,D1
0002463C <AmiBlitz3.ab3@8136>    BCS.w fetchlibps__repsdone
0002463E <AmiBlitz3.ab3@8137>   SUB.b D2,D1
00024642 <AmiBlitz3.ab3@8138>   MOVEM.l D2/A2,-(A7)
00024644 <AmiBlitz3.ab3@8139>   MOVE.w D2,D0
0002464A <AmiBlitz3.ab3@8140>   MOVE.b funcparloop,-(a7)
00024652 <AmiBlitz3.ab3@8141>   MOVE.b #0,funcparloop
00024658 <AmiBlitz3.ab3@8142>   MOVE.l leftsidetype,-(a7)
0002465E <AmiBlitz3.ab3@8143>   MOVE.l rightsidetype,-(a7)
00024664 <AmiBlitz3.ab3@8144>   CLR.l leftsidetype
0002466A <AmiBlitz3.ab3@8145>   CLR.l rightsidetype
00024670 <AmiBlitz3.ab3@8146>   MOVE.b blitzparloop,-(a7)
00024678 <AmiBlitz3.ab3@8147>   MOVE.b #1,blitzparloop
0002467C <AmiBlitz3.ab3@8148>   BSR.w fetchpees4
00024682 <AmiBlitz3.ab3@8149>   MOVE.b (a7)+,blitzparloop
00024688 <AmiBlitz3.ab3@8150>   MOVE.l (a7)+,rightsidetype
0002468E <AmiBlitz3.ab3@8151>   MOVE.l (a7)+,leftsidetype
00024694 <AmiBlitz3.ab3@8152>   MOVE.b (a7)+,funcparloop
00024698 <AmiBlitz3.ab3@8153>   MOVEM.l (A7)+,D2/A2
0002469E <AmiBlitz3.ab3@8154>   ADDQ.w #1,numreps
000246A2 <AmiBlitz3.ab3@8155> BRA.w fetchlibps__rloop
000246A8 <AmiBlitz3.ab3@8158>    MOVE.w numreps,D3
000246AC <AmiBlitz3.ab3@8159>    BEQ.w syntaxerr
000246AE <AmiBlitz3.ab3@8160>   ADDA.w D2,A2
000246B2 <AmiBlitz3.ab3@8161>   ANDI.w #$FF,D1
000246B6 <AmiBlitz3.ab3@8162>    BEQ.w fetchlibps__done
000246BA <AmiBlitz3.ab3@8163>   CMP.w #$2C,D0
000246BE <AmiBlitz3.ab3@8164>    BNE.w syntaxerr
000246C0 <AmiBlitz3.ab3@8167>    MOVE.w D1,D0
000246C4 <AmiBlitz3.ab3@8168>    BNE.w fetchpees2b
000246C6 <AmiBlitz3.ab3@8171> RTS
000246CC <AmiBlitz3.ab3@8174>   MOVE.b funcparloop,-(a7)
000246D2 <AmiBlitz3.ab3@8175>   MOVE.l leftsidetype,-(a7)
000246D8 <AmiBlitz3.ab3@8176>   MOVE.l rightsidetype,-(a7)
000246DE <AmiBlitz3.ab3@8177>   CLR.l leftsidetype
000246E4 <AmiBlitz3.ab3@8178>   CLR.l rightsidetype
000246EC <AmiBlitz3.ab3@8179>   MOVE.b #0,funcparloop
000246F2 <AmiBlitz3.ab3@8180>   MOVE.b blitzparloop,-(a7)
000246FA <AmiBlitz3.ab3@8181>   MOVE.b #1,blitzparloop
000246FE <AmiBlitz3.ab3@8182>   BSR.w fetchpees2
00024704 <AmiBlitz3.ab3@8183>   MOVE.b (a7)+,blitzparloop
0002470A <AmiBlitz3.ab3@8184>   MOVE.l (a7)+,rightsidetype
00024710 <AmiBlitz3.ab3@8185>   MOVE.l (a7)+,leftsidetype
00024716 <AmiBlitz3.ab3@8186>   MOVE.b (a7)+,funcparloop
00024718 <AmiBlitz3.ab3@8187> RTS
0002471C <AmiBlitz3.ab3@8191> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
0002471E <AmiBlitz3.ab3@8194> partostack:  Ds.w 1                                        ;pmode org source
00024720 <AmiBlitz3.ab3@8198>   MOVEQ.l #$01,D2
00024724 <AmiBlitz3.ab3@8199> BRA.w fetchpees3
00024726 <AmiBlitz3.ab3@8202>   MOVEQ.l #$00,D2
0002472A <AmiBlitz3.ab3@8205>   ANDI.w #$F,D0
00024730 <AmiBlitz3.ab3@8213>   CLR.w parnum
00024732 <AmiBlitz3.ab3@8214>   MOVE.w D1,-(A7)
00024736 <AmiBlitz3.ab3@8215>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
0002473C <AmiBlitz3.ab3@8216>   MOVE.w D2,partostack
0002473E <AmiBlitz3.ab3@8217>   MOVE.w D0,-(A7)
00024742 <AmiBlitz3.ab3@8218>   CMP.w #"@@",(a5)                                         ;was l15
00024746 <AmiBlitz3.ab3@8219>   BNE fetchpees__loop
0002474C <AmiBlitz3.ab3@8220>   TST.w ininclude                                          ;merge macrolines
00024750 <AmiBlitz3.ab3@8221>   BNE errorjoin
00024756 <AmiBlitz3.ab3@8222>        MOVEA.l sourceline,A5
00024758 <AmiBlitz3.ab3@8225>            MOVEA.l (A5),A5
0002475E <AmiBlitz3.ab3@8226>            MOVE.l a5,sourceline
00024762 <AmiBlitz3.ab3@8227>            LEA $9(A5),A5
00024768 <AmiBlitz3.ab3@8228>            ADDQ.l #1,linenumat
0002476A <AmiBlitz3.ab3@8232>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
0002476E <AmiBlitz3.ab3@8233>    BNE.w fetchpees__skip0
00024774 <AmiBlitz3.ab3@8234>   MOVE.w userp,D2                                          ;user selected type
00024776 <AmiBlitz3.ab3@8236>    MOVE.l A2,-(A7)
0002477C <AmiBlitz3.ab3@8237>    ADDQ.w #1,parnum
00024782 <AmiBlitz3.ab3@8238>    TST.b funccall
00024786 <AmiBlitz3.ab3@8239>    BEQ fetchpees__skip0_l1
0002478E <AmiBlitz3.ab3@8240>    CMP.w #6,parnum
00024792 <AmiBlitz3.ab3@8241>    BLE fetchpees__skip0_l1
00024796 <AmiBlitz3.ab3@8242>    CMP.w #7,d2
0002479C <AmiBlitz3.ab3@8248>    TST.b fpu
000247A0 <AmiBlitz3.ab3@8249>    BEQ fetchpees__skip0_old
000247A6 <AmiBlitz3.ab3@8250>    TST.w regnumfunc
000247AA <AmiBlitz3.ab3@8251>    BEQ fetchpees__skip0_old
000247B0 <AmiBlitz3.ab3@8252>    CMP.w #$48e7,-4(a4)
000247B4 <AmiBlitz3.ab3@8253>    BNE fetchpees__skip0_old
000247B6 <AmiBlitz3.ab3@8254>    MOVEQ #0,d1
000247BC <AmiBlitz3.ab3@8255>    MOVE.w regnum,d1
000247C2 <AmiBlitz3.ab3@8256>    CMP regnumfunc,d1                                       ;fpu reg function save
000247C6 <AmiBlitz3.ab3@8257>    BGE fetchpees__skip0_old
000247C8 <AmiBlitz3.ab3@8258>    ASL.w #7,d1
000247CA <AmiBlitz3.ab3@8259>    MOVE.l d0,-(a7)
000247D0 <AmiBlitz3.ab3@8260>    MOVE.w regnumfunc,d0
000247D6 <AmiBlitz3.ab3@8261>    CLR.w regmask
000247DC <AmiBlitz3.ab3@8263>    BSET d0,regmask
000247DE <AmiBlitz3.ab3@8264>    SUBQ #1,d0
000247E2 <AmiBlitz3.ab3@8265>    BNE fetchpees__skip0_loop
000247E4 <AmiBlitz3.ab3@8266>     MOVEQ #0,d0
000247EA <AmiBlitz3.ab3@8269>       BTST d0,regmask
000247EE <AmiBlitz3.ab3@8270>       BEQ fetchpees__skip0_noa7
000247F0 <AmiBlitz3.ab3@8271>       MOVEQ #0,d1
000247F2 <AmiBlitz3.ab3@8272>       MOVE.w d0,d1
000247F4 <AmiBlitz3.ab3@8273>       SUBQ.w #1,d1
000247F6 <AmiBlitz3.ab3@8274>       ASL #7,d1
000247FC <AmiBlitz3.ab3@8275>       OR.l #$f2277400,d1                                   ;fmove.d
00024800 <AmiBlitz3.ab3@8277>       BSR writelong
00024806 <AmiBlitz3.ab3@8279>       ADDQ.l #2,stacktrack
0002480C <AmiBlitz3.ab3@8280>       MOVE.l stacktrack,d1
00024812 <AmiBlitz3.ab3@8281>       CMP.l #180,d1
00024816 <AmiBlitz3.ab3@8282>       BGT conmemerr                                        ;formel too complex
00024818 <AmiBlitz3.ab3@8283>       MOVE.l a0,-(a7)
0002481E <AmiBlitz3.ab3@8284>       LEA fpustackbase,a0
00024826 <AmiBlitz3.ab3@8285>       MOVE.w regmask,0(a0,d1)
00024828 <AmiBlitz3.ab3@8286>       MOVE.l (a7)+,a0
0002482A <AmiBlitz3.ab3@8289>       ADDQ.w #1,d0
00024830 <AmiBlitz3.ab3@8290>       CMP.w regnumfunc,d0
00024834 <AmiBlitz3.ab3@8291>       BLE fetchpees__skip0_loop2
00024836 <AmiBlitz3.ab3@8294>       MOVE.l (a7)+,d0
0002483C <AmiBlitz3.ab3@8297>      MOVE.l currentfunccall,-(a7)
00024842 <AmiBlitz3.ab3@8298>      MOVE.w parnum,-(a7)
00024848 <AmiBlitz3.ab3@8299>      TST.l rightsidetype
0002484C <AmiBlitz3.ab3@8300>      BSR.w JL_0_6836
00024852 <AmiBlitz3.ab3@8301>      MOVE.w (a7)+,parnum
00024858 <AmiBlitz3.ab3@8303>    MOVE.l (a7)+,currentfunccall
0002485E <AmiBlitz3.ab3@8305>    TST.b typecheck                            ;typecheck for function call
00024862 <AmiBlitz3.ab3@8306>    BEQ 'notypecheck
00024868 <AmiBlitz3.ab3@8307>    TST.b notypecheck
0002486C <AmiBlitz3.ab3@8308>    BNE 'notypecheck
00024872 <AmiBlitz3.ab3@8309>    TST.b blitzparloop
00024876 <AmiBlitz3.ab3@8310>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00024880 <AmiBlitz3.ab3@8311>    CMP.l #0,currentfunccall
00024884 <AmiBlitz3.ab3@8312>    BEQ 'isblitzlibcall
00024888 <AmiBlitz3.ab3@8313>    MOVEM.l a0/a1,-(a7)
0002488E <AmiBlitz3.ab3@8314>    MOVE.l currentfunccall,a0
00024894 <AmiBlitz3.ab3@8315>    MOVE.w parnum,d1
0002489A <AmiBlitz3.ab3@8316>    TST.b isconstantvalue
0002489E <AmiBlitz3.ab3@8317>    BEQ 'noconstant
000248A8 <AmiBlitz3.ab3@8318>    CMP.l #0,lastconstantvalue
000248AC <AmiBlitz3.ab3@8319>    BEQ 'isnull
000248B0 <AmiBlitz3.ab3@8321>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000248B6 <AmiBlitz3.ab3@8322>    CMP.l #0,a0
000248BA <AmiBlitz3.ab3@8323>    BEQ 'notype
000248C2 <AmiBlitz3.ab3@8324>    CMP.l #$100,4(a0)
000248C6 <AmiBlitz3.ab3@8325>    BLE 'notype
000248CC <AmiBlitz3.ab3@8326>    MOVE.l lasttoken,d1
000248D0 <AmiBlitz3.ab3@8327>    CMP.w #$b581,d1                   ; ok, when token for null
000248D4 <AmiBlitz3.ab3@8328>    BEQ 'isnull
000248DA <AmiBlitz3.ab3@8329>    TST.l typetocast
000248DE <AmiBlitz3.ab3@8330>    BEQ 'nocast
000248E4 <AmiBlitz3.ab3@8331>    MOVE.l typetocast,a1
000248E8 <AmiBlitz3.ab3@8332>    BRA 'typecheck
000248EE <AmiBlitz3.ab3@8334>    MOVE.l rightsidetype,a1
000248F4 <AmiBlitz3.ab3@8335>    CMP.l #0,a1
000248F8 <AmiBlitz3.ab3@8336>    BEQ 'notype
00024900 <AmiBlitz3.ab3@8337> 'typecheck   CMP.l #$100,4(a1)
00024902 <AmiBlitz3.ab3@8339>    CMP.l a0,a1
00024906 <AmiBlitz3.ab3@8340>    BEQ 'ok
0002490E <AmiBlitz3.ab3@8342>    CMP.l #$100,4(a1)                 ; is a type here
00024912 <AmiBlitz3.ab3@8343>    BLE 'error
00024916 <AmiBlitz3.ab3@8344>    MOVE.l 4(a1),a1                   ; load the address of type.
0002491A <AmiBlitz3.ab3@8345>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0002491E <AmiBlitz3.ab3@8346>    BEQ 'ok
00024924 <AmiBlitz3.ab3@8347> 'error: JMP   error_convert_types    ; for syntax 4
0002492A <AmiBlitz3.ab3@8351>    CLR.l typetocast
0002492E <AmiBlitz3.ab3@8352>    MOVEM.l (a7)+,a0/a1
00024934 <AmiBlitz3.ab3@8356>    CLR.l lastfunction
0002493A <AmiBlitz3.ab3@8357>    TST.b fpu
0002493E <AmiBlitz3.ab3@8358>    BEQ fetchpees__skip0_noprint
00024940 <AmiBlitz3.ab3@8359>   MOVE.l (a7),a2
00024942 <AmiBlitz3.ab3@8360>   ADDQ.l #1,a2
00024946 <AmiBlitz3.ab3@8361>    CMP.b #5,d2
0002494A <AmiBlitz3.ab3@8362>   BNE fetchpees__skip0_noprint
00024950 <AmiBlitz3.ab3@8363>   CMP.b #$5d,24(a2)
00024954 <AmiBlitz3.ab3@8364>   BNE fetchpees__skip0_noprint
0002495A <AmiBlitz3.ab3@8365>   CMP.b #$81,25(a2)
0002495E <AmiBlitz3.ab3@8366>   BLT fetchpees__skip0_noprint
00024964 <AmiBlitz3.ab3@8367>   CMP.b #$86,25(a2)
00024968 <AmiBlitz3.ab3@8368>   BEQ fetchpees__skip0_ok
0002496E <AmiBlitz3.ab3@8369>   CMP.b #$87,25(a2)
00024972 <AmiBlitz3.ab3@8370>   BEQ fetchpees__skip0_ok
00024978 <AmiBlitz3.ab3@8371>   CMP.b #$88,25(a2)
0002497C <AmiBlitz3.ab3@8372>   BEQ fetchpees__skip0_ok
00024982 <AmiBlitz3.ab3@8373>   CMP.b #$83,25(a2)
00024986 <AmiBlitz3.ab3@8374>   BGT fetchpees__skip0_noprint
0002498C <AmiBlitz3.ab3@8377>   MOVE.l destpointer,a4
00024992 <AmiBlitz3.ab3@8378>   CMP.w #$2f00,-2(a4)
00024996 <AmiBlitz3.ab3@8379>   BNE fetchpees__skip0_noprint
0002499C <AmiBlitz3.ab3@8380>   SUBQ.l #2,destpointer
000249A2 <AmiBlitz3.ab3@8382>   MOVE.l #$f2277400,d1
000249A6 <AmiBlitz3.ab3@8383>   BSR writelong                                            ;fmove.d fp0,-(a7)
000249AC <AmiBlitz3.ab3@8384>   ADDQ #4,a2offset
000249B2 <AmiBlitz3.ab3@8402>   CLR.b optistring
000249B4 <AmiBlitz3.ab3@8403>   MOVEA.l (A7)+,A2
000249B8 <AmiBlitz3.ab3@8404>    CMP.w #"@",d0
000249BC <AmiBlitz3.ab3@8405>   BNE fetchpees__skip0_l10
000249C0 <AmiBlitz3.ab3@8406>    CMP.b #"@",(a5)
000249C4 <AmiBlitz3.ab3@8407>   BNE fetchpees__skip0_l10
000249CA <AmiBlitz3.ab3@8408>   TST.w ininclude
000249CE <AmiBlitz3.ab3@8409>   BNE errorjoin
000249D4 <AmiBlitz3.ab3@8410>   MOVEA.l sourceline,A5
000249D6 <AmiBlitz3.ab3@8411>            MOVEA.l (A5),A5
000249DC <AmiBlitz3.ab3@8412>            MOVE.l a5,sourceline
000249E2 <AmiBlitz3.ab3@8413>            ADDQ.l #1,linenumat
000249E6 <AmiBlitz3.ab3@8414>            LEA $9(A5),A5
000249E8 <AmiBlitz3.ab3@8415>            MOVEQ #0,d0
000249EC <AmiBlitz3.ab3@8416>            BSR get1bytemain
000249F0 <AmiBlitz3.ab3@8419>    CMP.b #32,(a5)+ ;for space after a ,
000249F4 <AmiBlitz3.ab3@8420>    BEQ fetchpees__skip0_l10:
000249F6 <AmiBlitz3.ab3@8421>    SUBQ.l #1,a5
000249FA <AmiBlitz3.ab3@8423>    CMP.w #"@@",(a5)                                        ;if merge
000249FE <AmiBlitz3.ab3@8424>    BNE fetchpees__skip0_l15
00024A02 <AmiBlitz3.ab3@8425>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00024A08 <AmiBlitz3.ab3@8426>    JSR mergeline
00024A0C <AmiBlitz3.ab3@8427>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00024A0E <AmiBlitz3.ab3@8447>       SUBQ.w #1,(A7)
00024A12 <AmiBlitz3.ab3@8448>    BEQ.w fetchpees__done
00024A16 <AmiBlitz3.ab3@8450>     CMP.w #$2C,D0
00024A1A <AmiBlitz3.ab3@8452>    BNE overloadfunc
00024A1E <AmiBlitz3.ab3@8453> BRA.w fetchpees__loop
00024A20 <AmiBlitz3.ab3@8456>   ADDQ.w #2,A7
00024A26 <AmiBlitz3.ab3@8457>   MOVE.w (A7)+,partostack
00024A28 <AmiBlitz3.ab3@8458>   MOVE.w (A7)+,D1
00024A2E <AmiBlitz3.ab3@8459>   CLR.b isconstantvalue
00024A38 <AmiBlitz3.ab3@8460>   MOVE.l currentfunccall,lastfunction
00024A3E <AmiBlitz3.ab3@8461>   CLR.b funccall
00024A44 <AmiBlitz3.ab3@8462>   CLR.l currentfunccall
00024A46 <AmiBlitz3.ab3@8463> RTS
00024A4C <AmiBlitz3.ab3@8467>   CLR.b funccall
00024A52 <AmiBlitz3.ab3@8468>   MOVE.w regnum,d1
00024A58 <AmiBlitz3.ab3@8469>   MOVE.l currentfunccall,a4
00024A5C <AmiBlitz3.ab3@8470>   CMP.b $20(a4),d1                                         ;increase if more pars
00024A60 <AmiBlitz3.ab3@8471>   BLT notparerr
00024A62 <AmiBlitz3.ab3@8474>   MOVE.b (a2)+,d2
00024A6A <AmiBlitz3.ab3@8475>   ADD.w #1,parnum
00024A70 <AmiBlitz3.ab3@8476>   TST.b fpu
00024A74 <AmiBlitz3.ab3@8477>   BEQ 'nofpu
00024A78 <AmiBlitz3.ab3@8478>   CMP.b #5,d2
00024A7C <AmiBlitz3.ab3@8479>   BNE 'nofpu
00024A7E <AmiBlitz3.ab3@8480>   MOVEQ #0,d1
00024A84 <AmiBlitz3.ab3@8481>   MOVE.w regnum,d1
00024A8C <AmiBlitz3.ab3@8482>   CMP.w #6,regnum
00024A90 <AmiBlitz3.ab3@8483>   BLT 'nostack2
00024A94 <AmiBlitz3.ab3@8488>   MOVE.w #$2c3c,d1
00024A98 <AmiBlitz3.ab3@8489>   BSR writeword
00024A9E <AmiBlitz3.ab3@8490>   MOVE.l #$bf800000,d1
00024AA2 <AmiBlitz3.ab3@8491>   BSR writelong
00024AA6 <AmiBlitz3.ab3@8492>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00024AAC <AmiBlitz3.ab3@8493>   ADD.w parnum,d1
00024AB2 <AmiBlitz3.ab3@8494>   JSR Atokejsr
00024AB8 <AmiBlitz3.ab3@8495>   TST.w dontwrite
00024ABC <AmiBlitz3.ab3@8496>   BNE 'l1
00024AC2 <AmiBlitz3.ab3@8497>   MOVE.l data1start,d1
00024AC8 <AmiBlitz3.ab3@8498>   MOVE.l destpointer,a4
00024ACC <AmiBlitz3.ab3@8499>   ADD.l d1,-4(a4)
00024AD2 <AmiBlitz3.ab3@8500>   MOVE.l destpointer,d1
00024AD4 <AmiBlitz3.ab3@8501>   SUBQ.l #4,d1
00024ADA <AmiBlitz3.ab3@8502>   SUB.l destbufferstart,d1
00024ADC <AmiBlitz3.ab3@8503>   MOVE.l d2,-(a7)
00024ADE <AmiBlitz3.ab3@8504>   MOVE.l d1,d2
00024AE4 <AmiBlitz3.ab3@8505>   JSR addhunkoffset
00024AE6 <AmiBlitz3.ab3@8506>   MOVE.l (a7)+,d2
00024AEA <AmiBlitz3.ab3@8507> BRA 'l1
00024AEC <AmiBlitz3.ab3@8510>   ASL.l #7,d1
00024AF2 <AmiBlitz3.ab3@8511>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00024AF6 <AmiBlitz3.ab3@8512>   BSR writelong
00024AF8 <AmiBlitz3.ab3@8513>   MOVEQ #-1,d1                                             ;-1
00024AFC <AmiBlitz3.ab3@8514>   BSR writeword
00024B00 <AmiBlitz3.ab3@8515> BRA 'l1
00024B06 <AmiBlitz3.ab3@8518>   MOVE.w regnum,d1
00024B0E <AmiBlitz3.ab3@8519>   CMP.w #6,regnum
00024B12 <AmiBlitz3.ab3@8520>   BLT 'nostack
00024B16 <AmiBlitz3.ab3@8525>   CMP.b #2,d2
00024B1A <AmiBlitz3.ab3@8526>   BGT 'nw
00024B1E <AmiBlitz3.ab3@8527> BRA 'nos
00024B22 <AmiBlitz3.ab3@8536>   CMP.w #7,d2
00024B26 <AmiBlitz3.ab3@8537>   BNE 'nos
00024B2C <AmiBlitz3.ab3@8538>   ADDQ #4,a2offset
00024B32 <AmiBlitz3.ab3@8540>     MOVE.l #$48780000,d1
00024B36 <AmiBlitz3.ab3@8541>     BSR writelong
00024B3C <AmiBlitz3.ab3@8542>     ADDQ.w #4,a2offset
00024B40 <AmiBlitz3.ab3@8543>     MOVE.w #$2f3c,d1
00024B44 <AmiBlitz3.ab3@8544>     BSR writeword
00024B4A <AmiBlitz3.ab3@8545>     MOVE.l #-1,d1
00024B4E <AmiBlitz3.ab3@8546>     BSR writelong
00024B52 <AmiBlitz3.ab3@8547>   BRA 'l1
00024B56 <AmiBlitz3.ab3@8551>   CMP.b #4,d2
00024B5A <AmiBlitz3.ab3@8552>       BNE 'noq
00024B5E <AmiBlitz3.ab3@8553>       MOVE.w #$2c3c,d1
00024B62 <AmiBlitz3.ab3@8554>       BSR writeword
00024B68 <AmiBlitz3.ab3@8555>       MOVE.l #$ffff0000,d1
00024B6C <AmiBlitz3.ab3@8556>       BSR writelong
00024B70 <AmiBlitz3.ab3@8557> BRA 'noq2
00024B74 <AmiBlitz3.ab3@8560>      CMP.b #5,d2
00024B78 <AmiBlitz3.ab3@8561>      BNE 'nof
00024B7C <AmiBlitz3.ab3@8562>       MOVE.w #$2c3c,d1
00024B80 <AmiBlitz3.ab3@8563>       BSR writeword
00024B86 <AmiBlitz3.ab3@8564>       MOVE.l #$800000c1,d1
00024B8A <AmiBlitz3.ab3@8565>       BSR writelong
00024B8E <AmiBlitz3.ab3@8566> BRA 'noq2
00024B92 <AmiBlitz3.ab3@8569>   MOVE.w #$7cff,d1
00024B96 <AmiBlitz3.ab3@8570>   BSR writeword
00024B9A <AmiBlitz3.ab3@8573>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00024BA0 <AmiBlitz3.ab3@8574>   ADD.w parnum,d1
00024BA6 <AmiBlitz3.ab3@8575>   JSR Atokejsr
00024BAC <AmiBlitz3.ab3@8576>    TST.w dontwrite
00024BB0 <AmiBlitz3.ab3@8577>    BNE 'l1
00024BB6 <AmiBlitz3.ab3@8578>    MOVE.l data1start,d1
00024BBC <AmiBlitz3.ab3@8579>    MOVE.l destpointer,a4
00024BC0 <AmiBlitz3.ab3@8580>    ADD.l d1,-4(a4)
00024BC6 <AmiBlitz3.ab3@8581>    MOVE.l destpointer,d1
00024BC8 <AmiBlitz3.ab3@8582>    SUBQ.l #4,d1
00024BCE <AmiBlitz3.ab3@8583>    SUB.l destbufferstart,d1
00024BD0 <AmiBlitz3.ab3@8584>    MOVE.l d2,-(a7)
00024BD2 <AmiBlitz3.ab3@8585>    MOVE.l d1,d2
00024BD8 <AmiBlitz3.ab3@8586>    JSR addhunkoffset
00024BDA <AmiBlitz3.ab3@8587>    MOVE.l (a7)+,d2
00024BDE <AmiBlitz3.ab3@8588> BRA 'l1
00024BE0 <AmiBlitz3.ab3@8591>   ASL.l #8,d1
00024BE2 <AmiBlitz3.ab3@8592>   ASL.l #1,d1
00024BE8 <AmiBlitz3.ab3@8593>   OR.l #$203c,d1                                           ;-1
00024BEC <AmiBlitz3.ab3@8594>   BSR writeword
00024BF2 <AmiBlitz3.ab3@8595>   MOVE.l #-1,d1
00024BF6 <AmiBlitz3.ab3@8596>   CMP.b #4,d2
00024BFA <AmiBlitz3.ab3@8597>   BNE 'nq1
00024C00 <AmiBlitz3.ab3@8598>   MOVE.l #$ffff0000,d1
00024C04 <AmiBlitz3.ab3@8601>   CMP.b #5,d2
00024C08 <AmiBlitz3.ab3@8602>   BNE 'nof2
00024C0E <AmiBlitz3.ab3@8603>   TST.b fpu
00024C12 <AmiBlitz3.ab3@8604>   BNE 'nof2
00024C18 <AmiBlitz3.ab3@8605>   MOVE.l #$800000c1,d1
00024C1C <AmiBlitz3.ab3@8608>    BSR writelong
00024C20 <AmiBlitz3.ab3@8609>    CMP.b #7,d2
00024C24 <AmiBlitz3.ab3@8610>    BNE 'l1
00024C2A <AmiBlitz3.ab3@8612>      MOVE.l #$48780000,d1
00024C2E <AmiBlitz3.ab3@8613>      BSR writelong
00024C34 <AmiBlitz3.ab3@8615>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00024C3A <AmiBlitz3.ab3@8616>    MOVE.l #$594f,d1                                        ; subq #4,a7
00024C3E <AmiBlitz3.ab3@8617>    BSR writeword
00024C40 <AmiBlitz3.ab3@8620>    SUBQ.w #1,(A7)
00024C44 <AmiBlitz3.ab3@8621>    BEQ.w fetchpees__done
00024C4A <AmiBlitz3.ab3@8622>    ADDQ.w #1,regnum
00024C4E <AmiBlitz3.ab3@8623> BRA 'ol2
00024C50 <AmiBlitz3.ab3@8626>    MOVE.w D2,D1
00024C54 <AmiBlitz3.ab3@8627>    ANDI.w #$40,D1
00024C5A <AmiBlitz3.ab3@8628>    MOVE.b D1,partostack
00024C5C <AmiBlitz3.ab3@8629>    TST.b D2
00024C60 <AmiBlitz3.ab3@8630>     BMI.w handlevara
00024C64 <AmiBlitz3.ab3@8631>    BTST #$5,D2
00024C68 <AmiBlitz3.ab3@8632>     BNE.w handlearr
00024C6E <AmiBlitz3.ab3@8633>     MOVE.w regnumstore,-(a7)
00024C74 <AmiBlitz3.ab3@8634>     MOVE.w tempregnum,-(a7)
00024C7A <AmiBlitz3.ab3@8635>     MOVE.w parnum,-(a7)
00024C7E <AmiBlitz3.ab3@8636>     BSR.w getap                                        ;recursive entry
00024C84 <AmiBlitz3.ab3@8637>     MOVE.w (a7)+,parnum
00024C8A <AmiBlitz3.ab3@8638>     MOVE.w (a7)+,tempregnum
00024C90 <AmiBlitz3.ab3@8639>     MOVE.w (a7)+,regnumstore
00024C94 <AmiBlitz3.ab3@8642>     MOVE.w partostack(PC),D1
00024C98 <AmiBlitz3.ab3@8643>     BEQ.w JL_0_6886
00024C9E <AmiBlitz3.ab3@8646>    ADDQ.w #4,a2offset
00024CA4 <AmiBlitz3.ab3@8649>    MOVE.w pushdn,D1
00024CAA <AmiBlitz3.ab3@8650>    OR.w regnum,D1
00024CAE <AmiBlitz3.ab3@8651>    CMP.w #$3,D2
00024CB2 <AmiBlitz3.ab3@8652>     BCC.w JL_0_6880
00024CB8 <AmiBlitz3.ab3@8653>    SUBQ.w #2,a2offset
00024CBC <AmiBlitz3.ab3@8654>    ORI.w #$1000,D1
00024CC0 <AmiBlitz3.ab3@8655>    BSR.w writeword
00024CC2 <AmiBlitz3.ab3@8656> RTS
00024CC6 <AmiBlitz3.ab3@8659>   CMP.b #7,d2
00024CCA <AmiBlitz3.ab3@8660>    BNE 'l10
00024CD2 <AmiBlitz3.ab3@8661>    CMP.b #2,optistring
00024CD8 <AmiBlitz3.ab3@8665>   TST.b iee
00024CDC <AmiBlitz3.ab3@8666>   BEQ 'old
00024CE0 <AmiBlitz3.ab3@8667>   CMP.b #5,d2
00024CE4 <AmiBlitz3.ab3@8668>   BNE 'old
00024CE8 <AmiBlitz3.ab3@8671>   BSR.w writeword                                          ;write val to stack
00024CEA <AmiBlitz3.ab3@8672> RTS
00024CF0 <AmiBlitz3.ab3@8675>   SUBQ.w #4,a2offset
00024CF2 <AmiBlitz3.ab3@8676> RTS
00024CF8 <AmiBlitz3.ab3@8679>   ADDQ.w #1,regnum
00024CFA <AmiBlitz3.ab3@8680> RTS
00024CFC <AmiBlitz3.ab3@8684>   MOVEQ.l #$03,D2
00024D00 <AmiBlitz3.ab3@8685> BRA.w JL_0_6854
00024D04 <AmiBlitz3.ab3@8689>   ANDI.w #$7,D2
00024D06 <AmiBlitz3.ab3@8690>   MOVE.w D2,-(A7)
00024D0A <AmiBlitz3.ab3@8691>    BSR.w JL_0_A916
00024D0E <AmiBlitz3.ab3@8692>   CMP.b #$7,D2                                             ;ignore pnt to $
00024D12 <AmiBlitz3.ab3@8693>    BEQ.w JL_0_68C0
00024D16 <AmiBlitz3.ab3@8694>   BTST #$E,D2
00024D1A <AmiBlitz3.ab3@8695>    BEQ.w JL_0_68B6
00024D1E <AmiBlitz3.ab3@8696>   MOVE.b #$3,D2                                            ;pointer to long
00024D22 <AmiBlitz3.ab3@8697> BRA.w JL_0_68C0
00024D24 <AmiBlitz3.ab3@8700>    TST.b D2
00024D28 <AmiBlitz3.ab3@8701>    BNE.w JL_0_68C0
00024D2C <AmiBlitz3.ab3@8702>   MOVE.b #$3,D2
00024D2E <AmiBlitz3.ab3@8705>   MOVE.w (A7)+,D3
00024D30 <AmiBlitz3.ab3@8706>   TST.b D3
00024D34 <AmiBlitz3.ab3@8707>    BEQ.w JL_0_68D2
00024D36 <AmiBlitz3.ab3@8708>   CMP.b D2,D3
00024D3A <AmiBlitz3.ab3@8709>    BEQ.w putalp
00024D3E <AmiBlitz3.ab3@8710> BRA.w mismatcherr
00024D44 <AmiBlitz3.ab3@8713>   ADDQ.w #2,a2offset
00024D48 <AmiBlitz3.ab3@8714>   MOVE.w ptype(PC),D1
00024D4C <AmiBlitz3.ab3@8715>    BSR.w writeword
00024D4E <AmiBlitz3.ab3@8716>   MOVEQ.l #$00,D1
00024D50 <AmiBlitz3.ab3@8717>   MOVE.b D2,D1
00024D54 <AmiBlitz3.ab3@8718>    BSR.w writeword
00024D58 <AmiBlitz3.ab3@8719> BRA.w putalp
00024D5A <AmiBlitz3.ab3@8722>    MOVE.w D2,-(A7)
00024D5E <AmiBlitz3.ab3@8723>    BSR.w JL_0_694E
00024D64 <AmiBlitz3.ab3@8724>   BTST #$4,$1(A7)
00024D68 <AmiBlitz3.ab3@8725>    BEQ.w JL_0_6900
00024D6C <AmiBlitz3.ab3@8726>    BSR.w JL_0_699A
00024D72 <AmiBlitz3.ab3@8729>    BTST #$3,$1(A7)
00024D76 <AmiBlitz3.ab3@8730>    BEQ.w JL_0_690E
00024D7A <AmiBlitz3.ab3@8731>    BSR.w sendtype
00024D7C <AmiBlitz3.ab3@8734>    MOVE.w (A7)+,D2
00024D80 <AmiBlitz3.ab3@8735> BRA.w get1bytemain
00024D86 <AmiBlitz3.ab3@8738>   MOVE.w regnum,D1
00024D88 <AmiBlitz3.ab3@8739>   LSL.w #8,D1
00024D8A <AmiBlitz3.ab3@8740>   LSL.w #1,D1
00024D8E <AmiBlitz3.ab3@8741>   ORI.w #$7000,D1
00024D94 <AmiBlitz3.ab3@8742>   BTST #$0,$7(A3)
00024D98 <AmiBlitz3.ab3@8743>    BNE.w JL_0_6946                                         ;A Pointer
00024DA0 <AmiBlitz3.ab3@8744>   CMPI.l #$100,$4(A2)
00024DA4 <AmiBlitz3.ab3@8745>    BCC.w arrerr1                                           ;illegal type to send
00024DA8 <AmiBlitz3.ab3@8746>   MOVE.b $7(A2),D1
00024DAC <AmiBlitz3.ab3@8749>   BSR.w writeword                                          ;moveq #type,d regat
00024DAE <AmiBlitz3.ab3@8750>   MOVEQ.l #$02,D2                                          ;just a word.
00024DB2 <AmiBlitz3.ab3@8751> BRA.w JL_0_685C
00024DB6 <AmiBlitz3.ab3@8754>   MOVE.b #$3,D1
00024DBA <AmiBlitz3.ab3@8755> BRA.w JL_0_693C
00024DBE <AmiBlitz3.ab3@8759>    BSR.w get1bytemain                                      ;write array paramter code
00024DC2 <AmiBlitz3.ab3@8760>    BSR.w getparameter
00024DCA <AmiBlitz3.ab3@8761>   BTST #$1,flagmask+1
00024DCE <AmiBlitz3.ab3@8762>    BEQ.w syntaxerr
00024DD2 <AmiBlitz3.ab3@8763>    BSR.w JL_0_8E3C
00024DD6 <AmiBlitz3.ab3@8764>    BSR.w get1bytemain
00024DDA <AmiBlitz3.ab3@8765>   CMP.w #$29,D0                                            ;we just want a() or whatever
00024DDE <AmiBlitz3.ab3@8766>    BNE.w syntaxerr
00024DE4 <AmiBlitz3.ab3@8767>   MOVE.w notshared,D1
00024DE8 <AmiBlitz3.ab3@8768>    BNE.w noarrayerr
00024DEE <AmiBlitz3.ab3@8769>   MOVE.w regnum,D1
00024DF0 <AmiBlitz3.ab3@8770>   LSL.w #8,D1
00024DF2 <AmiBlitz3.ab3@8771>   LSL.w #1,D1
00024DF6 <AmiBlitz3.ab3@8772>   OR.w fbase(PC),D1
00024DFC <AmiBlitz3.ab3@8773>    TST.b varmode
00024E00 <AmiBlitz3.ab3@8774>    BEQ 'l1
00024E04 <AmiBlitz3.ab3@8775>    BCLR #0,d1
00024E08 <AmiBlitz3.ab3@8778>    BSR.w writeword
00024E0C <AmiBlitz3.ab3@8779>   MOVE.w $4(A3),D1
00024E10 <AmiBlitz3.ab3@8780>    BSR.w writeword
00024E14 <AmiBlitz3.ab3@8781> BRA.w putalp
00024E1A <AmiBlitz3.ab3@8785>   MOVE.w regnum,D1
00024E1C <AmiBlitz3.ab3@8786>   LSL.w #8,D1
00024E1E <AmiBlitz3.ab3@8787>   LSL.w #1,D1
00024E22 <AmiBlitz3.ab3@8788>   OR.w fbase(PC),D1
00024E28 <AmiBlitz3.ab3@8789>    TST.b varmode
00024E2C <AmiBlitz3.ab3@8790>    BEQ 'l1
00024E30 <AmiBlitz3.ab3@8791>    BCLR #0,d1
00024E34 <AmiBlitz3.ab3@8794>    BSR.w writeword
00024E38 <AmiBlitz3.ab3@8795>   MOVE.w $8(A3),D1
00024E3A <AmiBlitz3.ab3@8796>   LSL.w #2,D1
00024E40 <AmiBlitz3.ab3@8797>   MOVE.w varmode,D2
00024E44 <AmiBlitz3.ab3@8798>    BEQ.w JL_0_69BE
00024E46 <AmiBlitz3.ab3@8799>   NEG.w D1
00024E4A <AmiBlitz3.ab3@8802>    ADD.w $4(A3),D1
00024E4E <AmiBlitz3.ab3@8803>    BSR.w writeword
00024E54 <AmiBlitz3.ab3@8804>   MOVE.w regnum,D1
00024E56 <AmiBlitz3.ab3@8805>   LSL.w #8,D1
00024E58 <AmiBlitz3.ab3@8806>   LSL.w #1,D1
00024E5C <AmiBlitz3.ab3@8807>   MOVE.w partostack(PC),D2
00024E60 <AmiBlitz3.ab3@8808>    BNE.w JL_0_69F4
00024E68 <AmiBlitz3.ab3@8809>   CMPI.w #$7,regnum
00024E6C <AmiBlitz3.ab3@8810>    BCC.w JL_0_69F4
00024E70 <AmiBlitz3.ab3@8811>   OR.w pushlast(PC),D1
00024E76 <AmiBlitz3.ab3@8812>   MOVE.w regnum,D2
00024E78 <AmiBlitz3.ab3@8813>   SUBQ.w #1,D2
00024E7A <AmiBlitz3.ab3@8814>   OR.w D2,D1
00024E7E <AmiBlitz3.ab3@8815> BRA.w JL_0_69F8
00024E82 <AmiBlitz3.ab3@8818>   OR.w pushadd(PC),D1
00024E86 <AmiBlitz3.ab3@8821>   BSR.w writeword
00024E8E <AmiBlitz3.ab3@8822>   MOVE.b #$1,partostack
00024E92 <AmiBlitz3.ab3@8823> BRA.w putalp
00024E96 <AmiBlitz3.ab3@8827> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00024E98 <AmiBlitz3.ab3@8828> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00024E9A <AmiBlitz3.ab3@8829> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00024E9E <AmiBlitz3.ab3@8834>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00024EA2 <AmiBlitz3.ab3@8835>    BEQ.w evalu2
00024EA6 <AmiBlitz3.ab3@8836> BRA.w eval
00024EAC <AmiBlitz3.ab3@8840>   MOVEA.l libpointer,A1
00024EB0 <AmiBlitz3.ab3@8843>    CMPA.w #$0,A1
00024EB4 <AmiBlitz3.ab3@8844>    BEQ.w resetlibs__done
00024EBA <AmiBlitz3.ab3@8845>   MOVE.w #-1,$A(A1)
00024EC0 <AmiBlitz3.ab3@8846>   BCLR #$7,$C(A1)
00024EC2 <AmiBlitz3.ab3@8847>   MOVEA.l (A1),A1
00024EC6 <AmiBlitz3.ab3@8848> BRA.w resetlibs__loop
00024EC8 <AmiBlitz3.ab3@8851> RTS
00024ECC <AmiBlitz3.ab3@8855>   MOVE.w #$FFFE,D1
00024ED0 <AmiBlitz3.ab3@8858>    BSR.w JL_0_6F38
00024ED6 <AmiBlitz3.ab3@8861>   TST.w cfetchmode
00024EDA <AmiBlitz3.ab3@8862>    BEQ.w uselib3__noconst
00024EE0 <AmiBlitz3.ab3@8863>   BTST #$6,$C(A1)
00024EE4 <AmiBlitz3.ab3@8864>    BNE.w uselib3__constok
00024EE8 <AmiBlitz3.ab3@8865> BRA.w badconerr                                            ;Can't use this Library!
00024EEA <AmiBlitz3.ab3@8868> RTS
00024EF0 <AmiBlitz3.ab3@8871>    BSET #$7,$C(A1)
00024EF4 <AmiBlitz3.ab3@8872>    BNE.w JL_0_6C74                                         ;already done....
00024EFA <AmiBlitz3.ab3@8873>    CMPI.w #-1,$A(A1)
00024EFE <AmiBlitz3.ab3@8874>    BNE.w JL_0_6C74                                         ;something already here
00024F04 <AmiBlitz3.ab3@8878>    TST.w dirmode
00024F08 <AmiBlitz3.ab3@8879>    BEQ.b JL_0_6A86
00024F0E <AmiBlitz3.ab3@8880>    TST.b exdebug
00024F12 <AmiBlitz3.ab3@8881>    BEQ 'l1
00024F16 <AmiBlitz3.ab3@8882> BRA.b JL_0_6A86
00024F1C <AmiBlitz3.ab3@8885>   BCLR #$7,$C(A1)
00024F20 <AmiBlitz3.ab3@8886> BRA.w dirliberr
00024F26 <AmiBlitz3.ab3@8889>   MOVE.b debugmode,-(a7)
00024F2A <AmiBlitz3.ab3@8890>   MOVEM.l D1/A0/A2,-(A7)
00024F32 <AmiBlitz3.ab3@8896>   BTST #$7,use_debugger
00024F36 <AmiBlitz3.ab3@8897>   BNE 'debugon
00024F38 <AmiBlitz3.ab3@8898>   CLR.w D1
00024F3C <AmiBlitz3.ab3@8899> BRA.b 'debugoff
00024F3E <AmiBlitz3.ab3@8902>   SNE D1
00024F44 <AmiBlitz3.ab3@8905>   MOVE.b d1,debugmode
00024F46 <AmiBlitz3.ab3@8909>   MOVEA.l A1,A0
00024F4A <AmiBlitz3.ab3@8910>   ADDA.l $12(A1),A0
00024F4E <AmiBlitz3.ab3@8911>   TST.w -$2(A0)
00024F52 <AmiBlitz3.ab3@8912>    BEQ.w JL_0_6AD2
00024F56 <AmiBlitz3.ab3@8913>   MOVEM.l A0-A1,-(A7)
00024F5A <AmiBlitz3.ab3@8914>   MOVE.w #$FB4F,D1
00024F5E <AmiBlitz3.ab3@8915>    BSR.w uselib
00024F62 <AmiBlitz3.ab3@8916>   MOVEM.l (A7)+,A0-A1
00024F68 <AmiBlitz3.ab3@8917>   ADDQ.w #1,globalvarpointer
00024F70 <AmiBlitz3.ab3@8918>   BCLR #$0,globalvarpointer+1
00024F78 <AmiBlitz3.ab3@8919>   MOVE.w globalvarpointer,-$6(A0)
00024F7E <AmiBlitz3.ab3@8920>   ADDQ.w #4,globalvarpointer
00024F82 <AmiBlitz3.ab3@8921>   TST.l -$E(A0)
00024F86 <AmiBlitz3.ab3@8922>    BEQ.w JL_0_6AD2
00024F8C <AmiBlitz3.ab3@8923>   ADDQ.w #4,globalvarpointer
00024F94 <AmiBlitz3.ab3@8926>   MOVE.l libend,$28(A1)
00024F96 <AmiBlitz3.ab3@8927>   MOVEA.l A1,A0
00024F9A <AmiBlitz3.ab3@8928>   ADDA.l $12(A1),A0
00024F9C <AmiBlitz3.ab3@8929>   MOVE.l A1,D1
00024FA0 <AmiBlitz3.ab3@8930>   ADD.l $6(A1),D1
00024FA4 <AmiBlitz3.ab3@8931>   TST.l $2C(A1)
00024FA8 <AmiBlitz3.ab3@8932>    BEQ.w JL_0_6AFE
00024FAE <AmiBlitz3.ab3@8934>   TST.b debugmode
00024FB2 <AmiBlitz3.ab3@8935>    BNE.w JL_0_6AFE
00024FB4 <AmiBlitz3.ab3@8936>   MOVE.l A1,D1
00024FB8 <AmiBlitz3.ab3@8937>   ADD.l $2C(A1),D1
00024FBE <AmiBlitz3.ab3@8940>   MOVEA.l libend,A2
00024FC4 <AmiBlitz3.ab3@8943>   CMPA.l data1start,A2
00024FC8 <AmiBlitz3.ab3@8944>    BCS.w JL_0_6B24
00024FD0 <AmiBlitz3.ab3@8945>   MOVE.w #$FFFF,dontwrite
00024FD2 <AmiBlitz3.ab3@8948>   ADDQ.w #2,A0
00024FD4 <AmiBlitz3.ab3@8949>   ADDQ.w #2,A2
00024FD6 <AmiBlitz3.ab3@8950>   CMPA.l D1,A0
00024FDA <AmiBlitz3.ab3@8951>    BCS.w JL_0_6B16
00024FDE <AmiBlitz3.ab3@8952> BRA.w JL_0_6B2C
00024FE0 <AmiBlitz3.ab3@8955>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00024FE2 <AmiBlitz3.ab3@8956>   CMPA.l D1,A0
00024FE6 <AmiBlitz3.ab3@8957>    BCS.w JL_0_6B04
00024FEC <AmiBlitz3.ab3@8960>   MOVE.l A2,libend
00024FF0 <AmiBlitz3.ab3@8961>   MOVE.l $20(A1),D1
00024FF4 <AmiBlitz3.ab3@8962>    BEQ.w JL_0_6BB8
00024FF8 <AmiBlitz3.ab3@8963>   MOVEM.l D0/D2-D3,-(A7)
00024FFC <AmiBlitz3.ab3@8964>   MOVEA.l $24(A1),A0
00024FFE <AmiBlitz3.ab3@8965>   MOVEQ.l #$00,D3
00025000 <AmiBlitz3.ab3@8968>   MOVE.l (A0)+,D2
00025004 <AmiBlitz3.ab3@8969>   TST.l $2C(A1)
00025008 <AmiBlitz3.ab3@8970>    BEQ.w JL_0_6B60
0002500E <AmiBlitz3.ab3@8971>   TST.b debugmode
00025012 <AmiBlitz3.ab3@8972>    BNE.w JL_0_6B60
00025016 <AmiBlitz3.ab3@8973>   CMP.l $2C(A1),D2
0002501A <AmiBlitz3.ab3@8974>    BCC.w JL_0_6BA0
0002501E <AmiBlitz3.ab3@8977>   TST.w $0(A1,D2.L)
00025022 <AmiBlitz3.ab3@8978>    BPL.w JL_0_6B72
00025024 <AmiBlitz3.ab3@8979>   TST.l D3
00025028 <AmiBlitz3.ab3@8980>    BNE.w JL_0_6B72
0002502A <AmiBlitz3.ab3@8981>   MOVE.l A0,D0
0002502C <AmiBlitz3.ab3@8982>   MOVE.l D1,D3
00025030 <AmiBlitz3.ab3@8985>   SUB.l $12(A1),D2
00025034 <AmiBlitz3.ab3@8986>    BMI.w JL_0_6BA0
00025038 <AmiBlitz3.ab3@8987>   ADD.l $28(A1),D2
0002503A <AmiBlitz3.ab3@8988>   MOVE.l D2,-(A7)
00025040 <AmiBlitz3.ab3@8989>   SUB.l destbufferstart,D2
00025044 <AmiBlitz3.ab3@8990>    BSR.w addhunkoffset
00025046 <AmiBlitz3.ab3@8991>   MOVEA.l (A7)+,A2
0002504C <AmiBlitz3.ab3@8992>   TST.w dontwrite
00025050 <AmiBlitz3.ab3@8993>    BNE.w JL_0_6BA0
00025054 <AmiBlitz3.ab3@8994>   MOVE.l $28(A1),D2
00025058 <AmiBlitz3.ab3@8995>   SUB.l $12(A1),D2
0002505A <AmiBlitz3.ab3@8996>   ADD.l D2,(A2)
0002505C <AmiBlitz3.ab3@8999>    SUBQ.l #1,D1
00025060 <AmiBlitz3.ab3@9000>    BNE.w JL_0_6B44
00025062 <AmiBlitz3.ab3@9001>   MOVE.l D3,D2
00025066 <AmiBlitz3.ab3@9002>    BEQ.w JL_0_6BB4
00025068 <AmiBlitz3.ab3@9003>   MOVEA.l D0,A2
0002506A <AmiBlitz3.ab3@9004>   SUBQ.w #4,A2
0002506E <AmiBlitz3.ab3@9005>    BSR.w JL_0_6E34
00025072 <AmiBlitz3.ab3@9008>    MOVEM.l (A7)+,D0/D2-D3
00025076 <AmiBlitz3.ab3@9011>    MOVEM.l (A7)+,D1/A0/A2
0002507A <AmiBlitz3.ab3@9012>   MOVEM.l D1-D2,-(A7)
0002507E <AmiBlitz3.ab3@9013>   TST.w $1A(A1)
00025082 <AmiBlitz3.ab3@9014>    BNE.w JL_0_6BD0
00025086 <AmiBlitz3.ab3@9015>   CLR.w $A(A1)
0002508A <AmiBlitz3.ab3@9016> BRA.w JL_0_6C5E
00025090 <AmiBlitz3.ab3@9019>   ADDQ.w #1,globalvarpointer
00025098 <AmiBlitz3.ab3@9020>   BCLR #$0,globalvarpointer+1
000250A0 <AmiBlitz3.ab3@9021>   MOVE.w globalvarpointer,$A(A1)
000250A4 <AmiBlitz3.ab3@9022>   CMP.w #-$12D,D1
000250A8 <AmiBlitz3.ab3@9023>    BNE.w JL_0_6C16
000250B0 <AmiBlitz3.ab3@9024>   MOVE.w $A(A1),movestdn+2
000250B8 <AmiBlitz3.ab3@9025>   MOVE.w $A(A1),pusha3+2
000250C0 <AmiBlitz3.ab3@9026>   MOVE.w $A(A1),pusha32+2
000250C8 <AmiBlitz3.ab3@9027>   MOVE.w $A(A1),pulla3+2
000250D0 <AmiBlitz3.ab3@9028>   MOVE.w $A(A1),geta3+2
000250D4 <AmiBlitz3.ab3@9031>    CMP.w #-$3E9,D1
000250D8 <AmiBlitz3.ab3@9032>    BNE.w JL_0_6C3E
000250E0 <AmiBlitz3.ab3@9033>   MOVE.w $A(A1),dataget+2
000250E8 <AmiBlitz3.ab3@9034>   MOVE.w $A(A1),dataput+2
000250F0 <AmiBlitz3.ab3@9035>   MOVE.w $A(A1),rescode+6
000250F8 <AmiBlitz3.ab3@9036>   MOVE.w $A(A1),rescode2+2
000250FE <AmiBlitz3.ab3@9039>   ADDQ.w #2,globalvarpointer
00025102 <AmiBlitz3.ab3@9040>   TST.w $1A(A1)
00025106 <AmiBlitz3.ab3@9041>    BMI.w JL_0_6C52
0002510C <AmiBlitz3.ab3@9042>   ADDQ.w #2,globalvarpointer
00025110 <AmiBlitz3.ab3@9045>   MOVEM.l D1/A1,-(A7)
00025114 <AmiBlitz3.ab3@9046>   BSR.w uselib2
00025118 <AmiBlitz3.ab3@9047>   MOVEM.l (A7)+,D1/A1
0002511A <AmiBlitz3.ab3@9050>   MOVE.w D1,D2
0002511E <AmiBlitz3.ab3@9051>   MOVE.l $16(A1),D1
00025122 <AmiBlitz3.ab3@9052>    BSR.w uselib2_org
00025126 <AmiBlitz3.ab3@9053>   MOVE.l $1C(A1),D1
0002512A <AmiBlitz3.ab3@9054>    BSR.w uselib2_org
0002512E <AmiBlitz3.ab3@9055>   MOVEM.l (A7)+,D1-D2
00025134 <AmiBlitz3.ab3@9057>   MOVE.b (a7)+,debugmode
00025136 <AmiBlitz3.ab3@9060> RTS
00025138 <AmiBlitz3.ab3@9064>   MOVEQ.l #$00,D2
0002513E <AmiBlitz3.ab3@9067>   MOVEA.l tokeslist,A2
00025140 <AmiBlitz3.ab3@9068>   CMPA.l D2,A2
00025144 <AmiBlitz3.ab3@9069>    BEQ.w JL_0_6CE0
00025146 <AmiBlitz3.ab3@9070>   MOVE.l A2,-(A7)
00025148 <AmiBlitz3.ab3@9073>   MOVEQ.l #$00,D3
0002514C <AmiBlitz3.ab3@9076>   MOVEA.l $8(A2),A3
0002514E <AmiBlitz3.ab3@9077>   CMPA.l D3,A3
00025152 <AmiBlitz3.ab3@9078>    BEQ.w JL_0_6CD2
00025154 <AmiBlitz3.ab3@9079>   MOVE.l A3,-(A7)
00025158 <AmiBlitz3.ab3@9080>   MOVEM.l D2-D3/A2-A3,-(A7)
0002515C <AmiBlitz3.ab3@9081>   MOVE.w $4(A2),D1
00025160 <AmiBlitz3.ab3@9082>   MOVE.w $6(A2),D2
00025164 <AmiBlitz3.ab3@9083>    BSR.w JL_0_6CE2
00025168 <AmiBlitz3.ab3@9084>   MOVEM.l (A7)+,D2-D3/A2-A3
0002516E <AmiBlitz3.ab3@9085>   MOVE.w dontwrite,D0
00025172 <AmiBlitz3.ab3@9086>    BEQ.w JL_0_6CBE
00025174 <AmiBlitz3.ab3@9089>   MOVEA.l (A3),A3
00025176 <AmiBlitz3.ab3@9090>   CMPA.l D3,A3
0002517A <AmiBlitz3.ab3@9091>    BNE.w JL_0_6CB2
0002517E <AmiBlitz3.ab3@9092> BRA.w JL_0_6CCC
00025182 <AmiBlitz3.ab3@9095>   MOVEA.l $4(A3),A0
00025184 <AmiBlitz3.ab3@9096>   MOVE.l D7,(A0)
00025186 <AmiBlitz3.ab3@9097>   MOVEA.l (A3),A3
00025188 <AmiBlitz3.ab3@9098>   CMPA.l D3,A3
0002518C <AmiBlitz3.ab3@9099>    BNE.w JL_0_6CBE
0002518E <AmiBlitz3.ab3@9102>   MOVE.l (A7)+,D3
00025192 <AmiBlitz3.ab3@9103> BRA.w JL_0_6C88
00025194 <AmiBlitz3.ab3@9106>    MOVEA.l (A2),A2
00025196 <AmiBlitz3.ab3@9107>   CMPA.l D2,A2
0002519A <AmiBlitz3.ab3@9108>    BNE.w JL_0_6C86
0002519C <AmiBlitz3.ab3@9109>   MOVE.l (A7)+,D2
000251A0 <AmiBlitz3.ab3@9110> BRA.w JL_0_6C78
000251A2 <AmiBlitz3.ab3@9113> RTS
000251A4 <AmiBlitz3.ab3@9117>   MOVE.w D2,-(A7)
000251A8 <AmiBlitz3.ab3@9118>    BSR.w searchinstr
000251AA <AmiBlitz3.ab3@9119>   MOVE.w (A7)+,D2
000251B2 <AmiBlitz3.ab3@9120>   BCLR #$7,blitzmode
000251B6 <AmiBlitz3.ab3@9121>   BCLR #$E,D2
000251BA <AmiBlitz3.ab3@9122>    BEQ.w JL_0_6D02
000251C2 <AmiBlitz3.ab3@9123>   BSET #$7,blitzmode
000251C4 <AmiBlitz3.ab3@9126>   TST.w (A3)
000251C8 <AmiBlitz3.ab3@9127>    BEQ.w JL_0_6DAC
000251CE <AmiBlitz3.ab3@9128>   BTST #$2,$1(A3)
000251D2 <AmiBlitz3.ab3@9129>    BNE.w tokeerr
000251D8 <AmiBlitz3.ab3@9130>   BTST #$3,$1(A3)
000251DC <AmiBlitz3.ab3@9131>    BNE.w tokeerr
000251E0 <AmiBlitz3.ab3@9132>   LEA $6(A3),A3
000251E2 <AmiBlitz3.ab3@9135>   MOVE.w (A3)+,D0
000251E6 <AmiBlitz3.ab3@9136>    BMI.w tokeerr
000251EA <AmiBlitz3.ab3@9137>   ANDI.w #$FF,D0
000251EC <AmiBlitz3.ab3@9138>   ADDA.w D0,A3
000251EE <AmiBlitz3.ab3@9139>   ADDQ.w #1,A3
000251F0 <AmiBlitz3.ab3@9140>   EXG.l D0,A3
000251F4 <AmiBlitz3.ab3@9141>   BCLR #$0,D0
000251F6 <AmiBlitz3.ab3@9142>   EXG.l D0,A3
000251F8 <AmiBlitz3.ab3@9143>   SUBQ.w #1,D2
000251FC <AmiBlitz3.ab3@9144>    BPL.w JL_0_6D98
000251FE <AmiBlitz3.ab3@9145>   TST.w (A3)
00025202 <AmiBlitz3.ab3@9146>    BNE.w JL_0_6D76
00025206 <AmiBlitz3.ab3@9147>   MOVE.l $2(A3),D0
0002520A <AmiBlitz3.ab3@9148>   OR.l $A(A3),D0
0002520E <AmiBlitz3.ab3@9149>    BNE.w JL_0_6D76
00025214 <AmiBlitz3.ab3@9150>   BTST #$0,$9(A3)
00025218 <AmiBlitz3.ab3@9151>    BNE.w JL_0_6D76
0002521C <AmiBlitz3.ab3@9152>   MOVE.l $6(A3),D7
00025220 <AmiBlitz3.ab3@9153>   MOVE.w $0(A2,D7.L),D0
00025224 <AmiBlitz3.ab3@9154>   ANDI.w #$F000,D0
00025228 <AmiBlitz3.ab3@9155>   CMP.w #-$6000,D0
0002522C <AmiBlitz3.ab3@9156>    BEQ.w JL_0_6D76
00025230 <AmiBlitz3.ab3@9159>   SUB.l $12(A2),D7
00025234 <AmiBlitz3.ab3@9160>   ADD.l $28(A2),D7
00025236 <AmiBlitz3.ab3@9161> RTS
0002523C <AmiBlitz3.ab3@9165>   LEA cutejsr,A0
00025242 <AmiBlitz3.ab3@9168>   MOVE.l destpointer,-(A7)
0002524A <AmiBlitz3.ab3@9169>   MOVE.w #$FFFF,lasta6
0002524C <AmiBlitz3.ab3@9172>    JSR (A0)
00025250 <AmiBlitz3.ab3@9173>   MOVE.w #$4E75,D1
00025254 <AmiBlitz3.ab3@9174>    BSR.w writeword
00025256 <AmiBlitz3.ab3@9175>   MOVE.l (A7)+,D7
00025258 <AmiBlitz3.ab3@9176> RTS
0002525A <AmiBlitz3.ab3@9180>   TST.w (A3)+
0002525E <AmiBlitz3.ab3@9181>    BEQ.w JL_0_6DA4
00025260 <AmiBlitz3.ab3@9182>   ADDQ.w #2,A3
00025264 <AmiBlitz3.ab3@9183> BRA.w JL_0_6D98
00025268 <AmiBlitz3.ab3@9186>   LEA $C(A3),A3
0002526C <AmiBlitz3.ab3@9187> BRA.w JL_0_6D20
0002526E <AmiBlitz3.ab3@9191>   TST.w D2
00025272 <AmiBlitz3.ab3@9192>    BNE.w tokeerr
00025276 <AmiBlitz3.ab3@9193>   TST.w $6(A3)
0002527A <AmiBlitz3.ab3@9194>    BNE.w JL_0_6DE4
0002527E <AmiBlitz3.ab3@9195>   MOVE.l $8(A3),D0
00025282 <AmiBlitz3.ab3@9196>   OR.l $10(A3),D0
00025286 <AmiBlitz3.ab3@9197>    BNE.w JL_0_6DE4
0002528C <AmiBlitz3.ab3@9198>   BTST #$0,$F(A3)
00025290 <AmiBlitz3.ab3@9199>    BNE.w JL_0_6DE4
00025294 <AmiBlitz3.ab3@9200>   MOVE.l $C(A3),D7
00025298 <AmiBlitz3.ab3@9201>   MOVE.w $0(A2,D7.L),D0
0002529C <AmiBlitz3.ab3@9202>   ANDI.w #$F000,D0
000252A0 <AmiBlitz3.ab3@9203>   CMP.w #-$6000,D0
000252A4 <AmiBlitz3.ab3@9204>    BNE.w JL_0_6D6C
000252A6 <AmiBlitz3.ab3@9207>   MOVE.l A3,D1
000252A8 <AmiBlitz3.ab3@9208>   SUB.l A2,D1
000252AE <AmiBlitz3.ab3@9209>   LEA Amakelibsub,A0
000252B2 <AmiBlitz3.ab3@9210> BRA.w JL_0_6D7C
000252B8 <AmiBlitz3.ab3@9214>   MOVEA.l _execbase,A6
000252BE <AmiBlitz3.ab3@9215>   MOVEA.l tokeslist,A2
000252C4 <AmiBlitz3.ab3@9216>   CLR.l tokeslist
000252C8 <AmiBlitz3.ab3@9219>     CMPA.w #$0,A2
000252CC <AmiBlitz3.ab3@9220>      BEQ.w JL_0_6E32
000252D0 <AmiBlitz3.ab3@9221>     MOVEA.l $8(A2),A3
000252D4 <AmiBlitz3.ab3@9224>       CMPA.w #$0,A3
000252D8 <AmiBlitz3.ab3@9225>        BEQ.w JL_0_6E24
000252DA <AmiBlitz3.ab3@9226>       MOVEA.l A3,A1
000252DC <AmiBlitz3.ab3@9227>       MOVEA.l (A3),A3
000252DE <AmiBlitz3.ab3@9228>       MOVEQ.l #$08,D0
000252E4 <AmiBlitz3.ab3@9229>       MOVE.l mempool,a0
000252EA <AmiBlitz3.ab3@9230>       MOVEA.l _execbase,A6
000252EE <AmiBlitz3.ab3@9231>       JSR _FreePooled(A6)
000252F2 <AmiBlitz3.ab3@9232> BRA.w JL_0_6E0E
000252F4 <AmiBlitz3.ab3@9235>     MOVEA.l A2,A1
000252F6 <AmiBlitz3.ab3@9236>     MOVEA.l (A2),A2
000252F8 <AmiBlitz3.ab3@9237>     MOVEQ.l #$0C,D0
000252FE <AmiBlitz3.ab3@9238>     MOVE.l mempool,a0
00025304 <AmiBlitz3.ab3@9239>     MOVEA.l _execbase,A6
00025308 <AmiBlitz3.ab3@9240>     JSR _FreePooled(A6)
0002530C <AmiBlitz3.ab3@9241> BRA.w JL_0_6E02
0002530E <AmiBlitz3.ab3@9244> RTS
00025312 <AmiBlitz3.ab3@9248>   MOVEM.l D3-D5/A1-A6,-(A7)
00025314 <AmiBlitz3.ab3@9249>   MOVEA.l A1,A4
00025316 <AmiBlitz3.ab3@9252>   MOVE.l (A2)+,D3
0002531A <AmiBlitz3.ab3@9253>   MOVE.w $0(A4,D3.L),D5
0002531E <AmiBlitz3.ab3@9254>    BPL.w JL_0_6E7A
00025322 <AmiBlitz3.ab3@9255>   TST.l $2C(A4)
00025326 <AmiBlitz3.ab3@9256>    BEQ.w JL_0_6E5E
0002532C <AmiBlitz3.ab3@9257>   TST.b debugmode
00025330 <AmiBlitz3.ab3@9258>    BNE.w JL_0_6E5E
00025334 <AmiBlitz3.ab3@9259>   CMP.l $2C(A4),D3
00025338 <AmiBlitz3.ab3@9260>    BCC.w JL_0_6E7A
0002533C <AmiBlitz3.ab3@9263>   BCLR #$F,D5
00025340 <AmiBlitz3.ab3@9264>   MOVE.w $2(A4,D3.L),D4
00025344 <AmiBlitz3.ab3@9265>   SUB.l $12(A4),D3
00025348 <AmiBlitz3.ab3@9266>   ADD.l $28(A4),D3
0002534C <AmiBlitz3.ab3@9267>   MOVEM.l D2/A2/A4,-(A7)
00025350 <AmiBlitz3.ab3@9268>    BSR.w JL_0_6E86
00025354 <AmiBlitz3.ab3@9269>   MOVEM.l (A7)+,D2/A2/A4
00025356 <AmiBlitz3.ab3@9272>   SUBQ.l #1,D2
0002535A <AmiBlitz3.ab3@9273>    BNE.w JL_0_6E3A
0002535E <AmiBlitz3.ab3@9274>   MOVEM.l (A7)+,D3-D5/A1-A6
00025360 <AmiBlitz3.ab3@9275> RTS
00025366 <AmiBlitz3.ab3@9279>   LEA tokeslist,A3
0002536C <AmiBlitz3.ab3@9280>   MOVEA.l _execbase,A6
0002536E <AmiBlitz3.ab3@9283>   MOVE.l (A3),D0
00025372 <AmiBlitz3.ab3@9284>    BEQ.w JL_0_6EAC
00025374 <AmiBlitz3.ab3@9285>   MOVEA.l D0,A3
00025378 <AmiBlitz3.ab3@9286>   CMP.w $4(A3),D4
0002537C <AmiBlitz3.ab3@9287>    BNE.w JL_0_6E90
00025380 <AmiBlitz3.ab3@9288>   CMP.w $6(A3),D5
00025384 <AmiBlitz3.ab3@9289>    BNE.w JL_0_6E90
00025388 <AmiBlitz3.ab3@9290> BRA.w JL_0_6ED0
0002538A <AmiBlitz3.ab3@9293>   MOVEQ.l #$0C,D0
0002538C <AmiBlitz3.ab3@9294>   MOVEQ.l #$01,D1
00025392 <AmiBlitz3.ab3@9295>   MOVE.l mempool,a0
00025396 <AmiBlitz3.ab3@9296>   JSR _AllocPooled(a6)
00025398 <AmiBlitz3.ab3@9298>   MOVEA.l D0,A3
0002539E <AmiBlitz3.ab3@9299>   MOVE.l tokeslist,(A3)
000253A4 <AmiBlitz3.ab3@9300>   MOVE.l A3,tokeslist
000253A8 <AmiBlitz3.ab3@9301>   MOVE.w D4,$4(A3)
000253AC <AmiBlitz3.ab3@9302>   MOVE.w D5,$6(A3)
000253B0 <AmiBlitz3.ab3@9303>   CLR.l $8(A3)
000253B2 <AmiBlitz3.ab3@9306>   MOVEQ.l #$08,D0
000253B4 <AmiBlitz3.ab3@9307>   MOVEQ.l #$01,D1
000253BA <AmiBlitz3.ab3@9308>   MOVE.l mempool,a0
000253BE <AmiBlitz3.ab3@9309>   JSR _AllocPooled(a6)
000253C0 <AmiBlitz3.ab3@9311>   MOVEA.l D0,A0
000253C4 <AmiBlitz3.ab3@9312>   MOVE.l D3,$4(A0)
000253C8 <AmiBlitz3.ab3@9313>   MOVE.l $8(A3),(A0)
000253CC <AmiBlitz3.ab3@9314>   MOVE.l A0,$8(A3)
000253CE <AmiBlitz3.ab3@9315>   MOVE.w D4,D1
000253D2 <AmiBlitz3.ab3@9316> BRA.w searchinstr
000253D6 <AmiBlitz3.ab3@9319> tokeslist: Ds.l 1
000253DA <AmiBlitz3.ab3@9332>   BEQ.w uselib2_org__skip
000253DC <AmiBlitz3.ab3@9333>   MOVE.l A1,-(A7)
000253DE <AmiBlitz3.ab3@9334>   ADDA.l D1,A1
000253E0 <AmiBlitz3.ab3@9335>   ADDQ.w #6,A1
000253E2 <AmiBlitz3.ab3@9338>     MOVE.w (A1)+,D1
000253E6 <AmiBlitz3.ab3@9339>     BEQ.w uselib2_org__done
000253E8 <AmiBlitz3.ab3@9340>     CMP.w D2,D1
000253EC <AmiBlitz3.ab3@9341>     BEQ.w uselib2_org__skip2
000253EE <AmiBlitz3.ab3@9342>     MOVE.l A1,-(A7)
000253F2 <AmiBlitz3.ab3@9343>     BSR.w uselib
000253F4 <AmiBlitz3.ab3@9344>     MOVEA.l (A7)+,A1
000253F6 <AmiBlitz3.ab3@9347>     ADDQ.w #2,A1
000253FA <AmiBlitz3.ab3@9348> BRA.w uselib2_org__loop
000253FC <AmiBlitz3.ab3@9351>   MOVEA.l (A7)+,A1
000253FE <AmiBlitz3.ab3@9354> RTS
00025404 <AmiBlitz3.ab3@9358>   MOVEA.l libpointer,A1
00025408 <AmiBlitz3.ab3@9361>   CMPA.w #$0,A1
0002540C <AmiBlitz3.ab3@9362>    BEQ.b JL_0_6F36
00025410 <AmiBlitz3.ab3@9363>   CMP.w $4(A1),D1
00025414 <AmiBlitz3.ab3@9364>    BEQ.w JL_0_6F34
00025416 <AmiBlitz3.ab3@9365>   MOVEA.l (A1),A1
0002541A <AmiBlitz3.ab3@9366> BRA.w JL_0_6F20
0002541C <AmiBlitz3.ab3@9369>   MOVEQ.l #-$01,D1
0002541E <AmiBlitz3.ab3@9372> RTS
00025422 <AmiBlitz3.ab3@9376>   MOVEM.l d0/a2,-(a7)
00025424 <AmiBlitz3.ab3@9377>   MOVEQ #0,d0
0002542A <AmiBlitz3.ab3@9378>   LEA instrtab+4,a2
0002542C <AmiBlitz3.ab3@9379>   MOVE.w d1,d0
0002542E <AmiBlitz3.ab3@9380>   ASL.l #3,d0
00025432 <AmiBlitz3.ab3@9381>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00025438 <AmiBlitz3.ab3@9382>   CMP.l #0,a1
0002543C <AmiBlitz3.ab3@9383>   BNE JL_0_6F54b
00025442 <AmiBlitz3.ab3@9385>   MOVEA.l libpointer,A1
00025446 <AmiBlitz3.ab3@9388>     CMPA.w #$0,A1
0002544A <AmiBlitz3.ab3@9389>     BEQ.w noliberr
0002544E <AmiBlitz3.ab3@9390>     CMP.w $4(A1),D1
00025452 <AmiBlitz3.ab3@9391>     BEQ.w JL_0_6F54
00025454 <AmiBlitz3.ab3@9392>    MOVEA.l (A1),A1
00025458 <AmiBlitz3.ab3@9393> BRA.w JL_0_6F3E
0002545C <AmiBlitz3.ab3@9396>   MOVE.l a1,0(a2,d0.l)
00025460 <AmiBlitz3.ab3@9399>   MOVEM.l (a7)+,d0/a2
00025462 <AmiBlitz3.ab3@9400> RTS
00025466 <AmiBlitz3.ab3@9403>   MOVEM.l d0-d1/a1,-(a7)
00025468 <AmiBlitz3.ab3@9404>   MOVEQ #0,d0
0002546E <AmiBlitz3.ab3@9405>   LEA instrtab,a1
00025470 <AmiBlitz3.ab3@9406>   MOVE.w d1,d0
00025472 <AmiBlitz3.ab3@9407>   ASL.l #3,d0
00025476 <AmiBlitz3.ab3@9408>   MOVE.l 0(a1,d0.l),a3
0002547A <AmiBlitz3.ab3@9409>   MOVE.l 4(a1,d0.l),a2
00025480 <AmiBlitz3.ab3@9410>   CMP.l #0,a3
00025484 <AmiBlitz3.ab3@9411>   BNE JL_0_6F92b
0002548A <AmiBlitz3.ab3@9413>   MOVEA.l libpointer,A2
0002548E <AmiBlitz3.ab3@9416>   CMPA.w #$0,A2
00025492 <AmiBlitz3.ab3@9417>   BEQ.w notokerr
00025496 <AmiBlitz3.ab3@9418>   CMP.w $E(A2),D1
0002549A <AmiBlitz3.ab3@9419>   BCS.w JL_0_6FB8
0002549E <AmiBlitz3.ab3@9420>   CMP.w $10(A2),D1
000254A2 <AmiBlitz3.ab3@9421>   BCC.w JL_0_6FB8
000254A6 <AmiBlitz3.ab3@9422>   LEA $30(A2),A3
000254AA <AmiBlitz3.ab3@9423>   TST.w $4(A2)
000254AE <AmiBlitz3.ab3@9424>   BPL.w JL_0_6FA6
000254B2 <AmiBlitz3.ab3@9427>     CMP.w $E(A2),D1
000254B6 <AmiBlitz3.ab3@9428>     BEQ.w JL_0_6F92
000254B8 <AmiBlitz3.ab3@9429>     SUBQ.w #1,D1
000254BC <AmiBlitz3.ab3@9430>     MOVEA.l $2(A3),A3
000254C0 <AmiBlitz3.ab3@9431> BRA.w JL_0_6F80
000254C4 <AmiBlitz3.ab3@9434>   MOVE.l a3,0(a1,d0.l)
000254C8 <AmiBlitz3.ab3@9435>   MOVE.l a2,4(a1,d0.l)
000254CC <AmiBlitz3.ab3@9438>   MOVEM.l (a7)+,d0-d1/a1
000254D0 <AmiBlitz3.ab3@9439>   MOVEM.l D1/A1-a3,-(A7)
000254D4 <AmiBlitz3.ab3@9440>   CMP.w #1,(a3)
000254D8 <AmiBlitz3.ab3@9441>   BNE.s ex10
000254E0 <AmiBlitz3.ab3@9442>   CMP.l #$12345678,$e(a3)
000254E4 <AmiBlitz3.ab3@9443>   BNE.s ex10
000254EA <AmiBlitz3.ab3@9444>   CMP.w #$ffff,$16(a3)
000254EE <AmiBlitz3.ab3@9445>   BNE.s ex10
000254F2 <AmiBlitz3.ab3@9446>   MOVE.l $12(a3),d1
000254F6 <AmiBlitz3.ab3@9447>   BEQ.s ex10
000254FC <AmiBlitz3.ab3@9448>   LEA pluginbase,a3
00025500 <AmiBlitz3.ab3@9450> JMP 0(a2,d1.l)                                             ;plugin
00025504 <AmiBlitz3.ab3@9453>   MOVEM.l (A7)+,D1/A1-a3
0002550A <AmiBlitz3.ab3@9454>   JSR stripspaces
0002550C <AmiBlitz3.ab3@9455>   MOVEQ #0,d0
0002550E <AmiBlitz3.ab3@9456>   MOVE.b (a5)+,d0
00025514 <AmiBlitz3.ab3@9457>   MOVE.w d0,lastchar
00025516 <AmiBlitz3.ab3@9458>   ADDQ.l #4,a7
00025518 <AmiBlitz3.ab3@9459> RTS
0002551A <AmiBlitz3.ab3@9463>   MOVEA.l A2,A1
00025520 <AmiBlitz3.ab3@9464>   CLR.b newmode
00025524 <AmiBlitz3.ab3@9465>   MOVE.w $4(A1),D1
00025528 <AmiBlitz3.ab3@9468>   BSR.w uselib3
0002552C <AmiBlitz3.ab3@9469>   MOVEM.l (A7)+,D1/A1-a3
0002552E <AmiBlitz3.ab3@9470> RTS
00025534 <AmiBlitz3.ab3@9473>   MOVE.w globalvarpointer,-(a7)
0002553C <AmiBlitz3.ab3@9474>   MOVE.w #$8004,globalvarpointer
00025540 <AmiBlitz3.ab3@9475>   BSR.w uselib3
00025546 <AmiBlitz3.ab3@9476>   MOVE.w (a7)+,globalvarpointer
0002554A <AmiBlitz3.ab3@9477>   MOVEM.l (A7)+,D1/A1-a3
0002554C <AmiBlitz3.ab3@9478> RTS
00025550 <AmiBlitz3.ab3@9481>     CMP.w $E(A2),D1
00025554 <AmiBlitz3.ab3@9482>     BEQ.w JL_0_6F92
00025556 <AmiBlitz3.ab3@9483>     SUBQ.w #1,D1
0002555A <AmiBlitz3.ab3@9484>     MOVEA.l $2(A3),A3
0002555E <AmiBlitz3.ab3@9485> BRA.w JL_0_6FA6
00025560 <AmiBlitz3.ab3@9488>   MOVEA.l (A2),A2
00025564 <AmiBlitz3.ab3@9489> BRA.w JL_0_6F5C
0002556A <AmiBlitz3.ab3@9492> JMP writeword
0002556E <AmiBlitz3.ab3@9495> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00025572 <AmiBlitz3.ab3@9496> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00025576 <AmiBlitz3.ab3@9497> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00025578 <AmiBlitz3.ab3@9503>   TST.l D0
0002557C <AmiBlitz3.ab3@9504>   BEQ.w exit_loadlibsfile
0002557E <AmiBlitz3.ab3@9505>     MOVE.l D0,D6                                           ;d6=len
00025584 <AmiBlitz3.ab3@9506>     MOVEA.l _dosbase,A6
0002558A <AmiBlitz3.ab3@9507>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002558E <AmiBlitz3.ab3@9508>     JSR _Open(A6)
00025590 <AmiBlitz3.ab3@9509>     MOVE.l D0,D7
00025594 <AmiBlitz3.ab3@9510>     BEQ.w exit_loadlibsfile
00025596 <AmiBlitz3.ab3@9511>       MOVE.l D6,D0
00025598 <AmiBlitz3.ab3@9512>       MOVEQ.l #$01,D1
0002559E <AmiBlitz3.ab3@9513>       MOVEA.l _execbase,A6
000255A4 <AmiBlitz3.ab3@9514>       MOVE.l mempool,a0
000255A8 <AmiBlitz3.ab3@9515>       JSR _AllocPooled(a6)
000255AA <AmiBlitz3.ab3@9516>       MOVE.l D0,D5                                         ;start address
000255AC <AmiBlitz3.ab3@9518>       MOVE.l D7,D1                                         ; handle
000255AE <AmiBlitz3.ab3@9519>       MOVE.l D5,D2                                         ; buffer addr
000255B0 <AmiBlitz3.ab3@9520>       MOVE.l D6,D3                                         ; size
000255B6 <AmiBlitz3.ab3@9521>       MOVEA.l _dosbase,A6
000255BA <AmiBlitz3.ab3@9522>       JSR _Read(A6)
000255BC <AmiBlitz3.ab3@9523>       MOVE.l D7,D1
000255C0 <AmiBlitz3.ab3@9524>       JSR _Close(A6)
000255C2 <AmiBlitz3.ab3@9526>       MOVEA.l D5,A0                                        ; buffer addr
000255C4 <AmiBlitz3.ab3@9532>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
000255C8 <AmiBlitz3.ab3@9533>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
000255CC <AmiBlitz3.ab3@9534>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
000255CE <AmiBlitz3.ab3@9535>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
000255D0 <AmiBlitz3.ab3@9536>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
000255D2 <AmiBlitz3.ab3@9537>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
000255D6 <AmiBlitz3.ab3@9538>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
000255D8 <AmiBlitz3.ab3@9539>           ADD.l D0,D0                                      ;   verdoppele D0
000255DA <AmiBlitz3.ab3@9540>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
000255DE <AmiBlitz3.ab3@9541>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
000255E2 <AmiBlitz3.ab3@9542>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
000255E6 <AmiBlitz3.ab3@9543>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
000255E8 <AmiBlitz3.ab3@9544>           CMPA.l A0,A2
000255EC <AmiBlitz3.ab3@9545>           BCC.b JL_0_7010                                  ; wenn A0=>A2
000255F2 <AmiBlitz3.ab3@9546>             MOVE.l -$8(A2),$20(A1)                         ;
000255F6 <AmiBlitz3.ab3@9547>             MOVE.l A2,$24(A1)                              ;
000255FA <AmiBlitz3.ab3@9548> BRA.w JL_0_7010
000255FC <AmiBlitz3.ab3@9551>       MOVE.l D5,D0
000255FE <AmiBlitz3.ab3@9554> RTS
00025628 <AmiBlitz3.ab3@9558>   !basic
0002569C <AmiBlitz3.ab3@9559>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
000256D0 <AmiBlitz3.ab3@9560>    dos_Delete{tempmapping$}
00025714 <AmiBlitz3.ab3@9561>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00025732 <AmiBlitz3.ab3@9562>   !asm
00025738 <AmiBlitz3.ab3@9564>   LEA libpointer,A3
0002573E <AmiBlitz3.ab3@9568>   MOVE.l size_deflibs,D0
00025744 <AmiBlitz3.ab3@9569>   MOVE.l deflib,d1
00025748 <AmiBlitz3.ab3@9570>   BEQ 'l1
0002574C <AmiBlitz3.ab3@9571> BRA 'l2
00025752 <AmiBlitz3.ab3@9574>   MOVE.l #str_path_deflibs,D1
00025756 <AmiBlitz3.ab3@9577>   BSR.w load_libsfile
0002575C <AmiBlitz3.ab3@9578>   MOVE.l D0,ptr_deflibs
00025762 <AmiBlitz3.ab3@9581>   MOVE.l size_acidlibs,D0
00025768 <AmiBlitz3.ab3@9582>   MOVE.l #str_path_acidlibs,D1
0002576C <AmiBlitz3.ab3@9583>   BSR.w load_libsfile
00025772 <AmiBlitz3.ab3@9584>   MOVE.l D0,ptr_acidlibs
00025774 <AmiBlitz3.ab3@9588>   CLR.l (A3)
0002577A <AmiBlitz3.ab3@9589>   MOVE.l A3,ptr_userlibs
00025780 <AmiBlitz3.ab3@9594>   LEA str_libfilename,A0
00025786 <AmiBlitz3.ab3@9595>   LEA str_path_userlibs,A1
00025788 <AmiBlitz3.ab3@9598>     MOVE.b (A1)+,(A0)+
0002578C <AmiBlitz3.ab3@9599>   BNE.b JL_0_708E
0002578E <AmiBlitz3.ab3@9601>   SUBQ.w #1,A0
00025792 <AmiBlitz3.ab3@9602>   MOVE.b #$2F,(A0)+
00025794 <AmiBlitz3.ab3@9605>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
0002579A <AmiBlitz3.ab3@9607>   LEA ptr_userlibs_list,A2
000257A0 <AmiBlitz3.ab3@9608>   MOVEA.l ptr_userlibs,A3
000257A6 <AmiBlitz3.ab3@9609>   MOVEA.l _dosbase,A6
000257A8 <AmiBlitz3.ab3@9614>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
000257AC <AmiBlitz3.ab3@9615>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
000257AE <AmiBlitz3.ab3@9617>       CLR.l (A3)
000257B0 <AmiBlitz3.ab3@9618>       ADDQ.w #4,A7
000257DA <AmiBlitz3.ab3@9619>       !basic
000257EE <AmiBlitz3.ab3@9620>       If fid<>-1
000257F8 <AmiBlitz3.ab3@9621>         file_Close{fid}
00025804 <AmiBlitz3.ab3@9622>         fid = -1
00025822 <AmiBlitz3.ab3@9624>       !asm
00025826 <AmiBlitz3.ab3@9625> BRA.w process_libraries
00025828 <AmiBlitz3.ab3@9628>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
0002582C <AmiBlitz3.ab3@9629>       TST.w $4(A2)                                         ; naechste addresse pruefen
00025830 <AmiBlitz3.ab3@9630>     BEQ.b JL_0_70BA
00025834 <AmiBlitz3.ab3@9632>     LEA $6(A2),A1
00025836 <AmiBlitz3.ab3@9633>     MOVEA.l (A7),A0
00025838 <AmiBlitz3.ab3@9636>       MOVE.b (A1)+,(A0)+
0002583C <AmiBlitz3.ab3@9637>     BNE.w JL_0_70D4
0002583E <AmiBlitz3.ab3@9641>     MOVE.l A0,-(A7)
00025844 <AmiBlitz3.ab3@9642>     MOVE.l #str_libfilename,D1
00025846 <AmiBlitz3.ab3@9643>     MOVEQ.l #-$02,D2
0002584C <AmiBlitz3.ab3@9644>     MOVEA.l _dosbase,A6
00025850 <AmiBlitz3.ab3@9645>      JSR _Lock(A6)
00025852 <AmiBlitz3.ab3@9646>     MOVE.l D0,D1
00025856 <AmiBlitz3.ab3@9647>      BEQ.w JL_0_7156
00025858 <AmiBlitz3.ab3@9648>     MOVEA.l (A7),A0
0002585E <AmiBlitz3.ab3@9649>     MOVE.b #$2F,-$1(A0)
00025860 <AmiBlitz3.ab3@9652>     MOVE.l D1,-(A7)
00025866 <AmiBlitz3.ab3@9653>     MOVE.l #ptr_parameterstore,D2
0002586C <AmiBlitz3.ab3@9654>     MOVEA.l _dosbase,A6
00025870 <AmiBlitz3.ab3@9655>     JSR _Examine(A6)
00025872 <AmiBlitz3.ab3@9656>     TST.l D0
00025876 <AmiBlitz3.ab3@9657>      BEQ.w JL_0_7150
0002587C <AmiBlitz3.ab3@9660>     LEA fib_FileName,A0
00025880 <AmiBlitz3.ab3@9661>     BSR.w check_for_infoextention
00025884 <AmiBlitz3.ab3@9662>     BEQ.w JL_0_7150
000258AE <AmiBlitz3.ab3@9665>     !basic
00025932 <AmiBlitz3.ab3@9666>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00025950 <AmiBlitz3.ab3@9667>     !asm
00025956 <AmiBlitz3.ab3@9668>     MOVE.l #str_libfilename,D1
0002595A <AmiBlitz3.ab3@9669>     BSR.w open_userlibfile
0002595C <AmiBlitz3.ab3@9672>     MOVE.l (A7)+,D1
00025962 <AmiBlitz3.ab3@9673>     MOVEA.l _dosbase,A6
00025966 <AmiBlitz3.ab3@9674>     JSR _UnLock(A6)
00025968 <AmiBlitz3.ab3@9677>     ADDQ.w #4,A7
0002596C <AmiBlitz3.ab3@9678> BRA.w JL_0_70BA
00025972 <AmiBlitz3.ab3@9681>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00025978 <AmiBlitz3.ab3@9682>   MOVEA.l _dosbase,A6
0002597C <AmiBlitz3.ab3@9683>    JSR _Open(A6)
0002597E <AmiBlitz3.ab3@9684>   MOVE.l D0,D7
00025982 <AmiBlitz3.ab3@9685>    BEQ.w exit_userlibfile
00025984 <AmiBlitz3.ab3@9688>   MOVE.l D7,D1                                             ; filehandle
0002598A <AmiBlitz3.ab3@9689>   MOVE.l #optstuff,D2                                     ; buffer
00025990 <AmiBlitz3.ab3@9690>   MOVEA.l _dosbase,A6
00025992 <AmiBlitz3.ab3@9691>   MOVEQ.l #$20,D3                                          ; size
00025996 <AmiBlitz3.ab3@9692>   JSR _Read(A6)
0002599C <AmiBlitz3.ab3@9695>   MOVE.l optstuff+28,D6
0002599E <AmiBlitz3.ab3@9696>   LSL.l #2,D6
000259A0 <AmiBlitz3.ab3@9697>   MOVE.l D6,D0
000259A2 <AmiBlitz3.ab3@9698>   MOVEQ.l #$01,D1
000259A8 <AmiBlitz3.ab3@9699>   MOVEA.l _execbase,A6
000259AE <AmiBlitz3.ab3@9700>   MOVE.l mempool,a0
000259B2 <AmiBlitz3.ab3@9701>   JSR _AllocPooled(a6)
000259B4 <AmiBlitz3.ab3@9702>   MOVEA.l D0,A5
000259BA <AmiBlitz3.ab3@9705>   MOVEA.l _dosbase,A6
000259BC <AmiBlitz3.ab3@9706>   MOVE.l D7,D1                                             ; filehandle
000259BE <AmiBlitz3.ab3@9707>   MOVE.l A5,D2                                             ; buffer
000259C0 <AmiBlitz3.ab3@9708>   MOVE.l D6,D3                                             ; size
000259C4 <AmiBlitz3.ab3@9709>    JSR _Read(A6)
000259C6 <AmiBlitz3.ab3@9710>   MOVE.l A5,(A3)
000259C8 <AmiBlitz3.ab3@9712>   MOVE.l A5,d0
000259CA <AmiBlitz3.ab3@9714>   MOVEA.l A5,A3
000259CE <AmiBlitz3.ab3@9715>   MOVE.l D6,$6(A5)
000259D2 <AmiBlitz3.ab3@9716>   CLR.l $20(A5)
000259FC <AmiBlitz3.ab3@9718>   !basic
00025A06 <AmiBlitz3.ab3@9720>   addr_libnum.l = PutD0 + 4
00025A1A <AmiBlitz3.ab3@9721>   If fid<>-1
00025ABA <AmiBlitz3.ab3@9722>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00025AEC <AmiBlitz3.ab3@9723>     file_WriteLine{fid,currentlib$}
00025B0A <AmiBlitz3.ab3@9725>   !asm
00025B0C <AmiBlitz3.ab3@9728>   MOVE.l D7,D1                                             ; filehandle
00025B12 <AmiBlitz3.ab3@9729>   MOVE.l #optstuff,D2                                     ; buffer
00025B14 <AmiBlitz3.ab3@9730>   MOVEQ.l #$0C,D3                                          ; size
00025B1A <AmiBlitz3.ab3@9731>   MOVEA.l _dosbase,A6
00025B1E <AmiBlitz3.ab3@9732>    JSR _Read(A6)
00025B24 <AmiBlitz3.ab3@9734>   CMP.l #$C,D0
00025B28 <AmiBlitz3.ab3@9735>    BCS.w close_and_exit_userlibfile
00025B2E <AmiBlitz3.ab3@9738>   MOVE.l optstuff+4,D0
00025B32 <AmiBlitz3.ab3@9739>   MOVE.l D0,$20(A5)
00025B34 <AmiBlitz3.ab3@9740>   LSL.l #2,D0
00025B36 <AmiBlitz3.ab3@9741>   MOVE.l D0,D5
00025B38 <AmiBlitz3.ab3@9742>   MOVEQ.l #$01,D1
00025B3E <AmiBlitz3.ab3@9743>   MOVEA.l _execbase,A6
00025B44 <AmiBlitz3.ab3@9744>   MOVE.l mempool,a0
00025B48 <AmiBlitz3.ab3@9745>   JSR _AllocPooled(a6)
00025B4E <AmiBlitz3.ab3@9747>   MOVEA.l _dosbase,A6
00025B52 <AmiBlitz3.ab3@9748>   MOVE.l D0,$24(A5)
00025B54 <AmiBlitz3.ab3@9749>   MOVE.l D7,D1
00025B56 <AmiBlitz3.ab3@9750>   MOVE.l D0,D2
00025B58 <AmiBlitz3.ab3@9751>   MOVE.l D5,D3
00025B5C <AmiBlitz3.ab3@9752>   JSR _Read(A6)
00025B5E <AmiBlitz3.ab3@9755>   MOVE.l D7,D1
00025B64 <AmiBlitz3.ab3@9756>   MOVEA.l _dosbase,A6
00025B68 <AmiBlitz3.ab3@9757> JMP _Close(A6)
00025B6A <AmiBlitz3.ab3@9760> RTS
00025B70 <AmiBlitz3.ab3@9766>   CLR.w number_of_objects
00025B76 <AmiBlitz3.ab3@9767>   MOVEA.l end_of_tokenlist,A3
00025B7C <AmiBlitz3.ab3@9768>   MOVEA.l libpointer,A2
00025B80 <AmiBlitz3.ab3@9771>     CMPA.w #$0,A2
00025B84 <AmiBlitz3.ab3@9772>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00025B88 <AmiBlitz3.ab3@9774>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00025B8C <AmiBlitz3.ab3@9775>     BMI.w JL_0_7226
00025B8E <AmiBlitz3.ab3@9776>       LSL.w #7,D7
00025B90 <AmiBlitz3.ab3@9777>       ADDQ.w #1,D7
00025B94 <AmiBlitz3.ab3@9778>       MOVE.w D7,$E(A2)
00025B98 <AmiBlitz3.ab3@9781>     LEA $30(A2),A1
00025B9E <AmiBlitz3.ab3@9782>     LEA temp1,A4
00025BA0 <AmiBlitz3.ab3@9785>       MOVE.w (A1),D0
00025BA4 <AmiBlitz3.ab3@9786>       BMI.w JL_0_72AE
00025BA6 <AmiBlitz3.ab3@9787>       MOVE.l A1,(A4)
00025BA8 <AmiBlitz3.ab3@9788>       MOVEA.l A1,A4
00025BAA <AmiBlitz3.ab3@9789>       ADDQ.w #2,A4
00025BAC <AmiBlitz3.ab3@9790>       ADDQ.w #6,A1
00025BB0 <AmiBlitz3.ab3@9791>       CMP.w #$8,D0
00025BB4 <AmiBlitz3.ab3@9792>       BEQ.w JL_0_7290
00025BB8 <AmiBlitz3.ab3@9793>         ANDI.w #$F,D0
00025BBC <AmiBlitz3.ab3@9794>         BNE.w JL_0_725C
00025BC0 <AmiBlitz3.ab3@9795>           BSR.w skiplibreg
00025BC4 <AmiBlitz3.ab3@9796>           LEA $C(A1),A1
00025BC6 <AmiBlitz3.ab3@9797>           ADDQ.w #1,D7
00025BCA <AmiBlitz3.ab3@9798> BRA.w JL_0_7230
00025BCE <AmiBlitz3.ab3@9801>     BTST #$2,D0
00025BD2 <AmiBlitz3.ab3@9802>     BEQ.w JL_0_7274
00025BD4 <AmiBlitz3.ab3@9803>       ADDQ.w #4,A1
00025BD6 <AmiBlitz3.ab3@9806>         TST.b (A1)+
00025BDA <AmiBlitz3.ab3@9807>       BPL.w JL_0_7266
00025BDE <AmiBlitz3.ab3@9808>       BSR.w aligna1
00025BE2 <AmiBlitz3.ab3@9809> BRA.w JL_0_7290
00025BE4 <AmiBlitz3.ab3@9812>       MOVE.w (A1)+,D0
00025BE8 <AmiBlitz3.ab3@9813>       BMI.w JL_0_7290
00025BEC <AmiBlitz3.ab3@9814>       ANDI.w #$FF,D0
00025BEE <AmiBlitz3.ab3@9815>       ADDA.w D0,A1
00025BF2 <AmiBlitz3.ab3@9816>       BSR.w aligna1
00025BF6 <AmiBlitz3.ab3@9817>       BSR.w skiplibreg
00025BFA <AmiBlitz3.ab3@9818>       LEA $C(A1),A1
00025BFE <AmiBlitz3.ab3@9819> BRA.w JL_0_7274
00025C00 <AmiBlitz3.ab3@9822>     MOVE.l A1,(A3)
00025C02 <AmiBlitz3.ab3@9823>     MOVEA.l A1,A3
00025C04 <AmiBlitz3.ab3@9824>     ADDQ.w #4,A1
00025C06 <AmiBlitz3.ab3@9825>     MOVE.w D7,(A1)+
00025C08 <AmiBlitz3.ab3@9828>       TST.b (A1)+
00025C0C <AmiBlitz3.ab3@9829>     BNE.w JL_0_7298
00025C0E <AmiBlitz3.ab3@9832>       TST.b (A1)+
00025C12 <AmiBlitz3.ab3@9833>     BNE.w JL_0_729E
00025C16 <AmiBlitz3.ab3@9835>     BSR.w aligna1
00025C18 <AmiBlitz3.ab3@9836>     ADDQ.w #1,D7
00025C1C <AmiBlitz3.ab3@9837> BRA.w JL_0_7230
00025C20 <AmiBlitz3.ab3@9840>     TST.w $4(A2)
00025C24 <AmiBlitz3.ab3@9841>      BMI.w JL_0_72BA
00025C28 <AmiBlitz3.ab3@9842>     MOVE.w D7,$10(A2)
00025C2A <AmiBlitz3.ab3@9845>     ADDQ.w #2,A1
00025C2C <AmiBlitz3.ab3@9846>     TST.l (A1)+
00025C30 <AmiBlitz3.ab3@9847>      BEQ.w JL_0_72CC
00025C36 <AmiBlitz3.ab3@9848>     ADDQ.w #1,number_of_objects
00025C3A <AmiBlitz3.ab3@9849>     LEA $16(A1),A1
00025C3C <AmiBlitz3.ab3@9852>     SUBA.l A2,A1
00025C40 <AmiBlitz3.ab3@9853>     MOVE.l A1,$12(A2)
00025C42 <AmiBlitz3.ab3@9854>     MOVEA.l (A2),A2
00025C46 <AmiBlitz3.ab3@9855> BRA.w JL_0_720E
00025C48 <AmiBlitz3.ab3@9858>   CLR.l (A3)
00025C4E <AmiBlitz3.ab3@9859> 
00025C54 <AmiBlitz3.ab3@9860>   MOVE.l A7,errstack
00025C5E <AmiBlitz3.ab3@9861>   MOVE.l #AL_0_730E,errcont
00025C66 <AmiBlitz3.ab3@9862>   MOVE.w #$FFFF,ezerr
00025C6A <AmiBlitz3.ab3@9863>   MOVE.w #$FFFA,D1
00025C6E <AmiBlitz3.ab3@9864>    BSR.w JL_0_6F38
00025C74 <AmiBlitz3.ab3@9865>   MOVE.l A1,tempvm
00025C78 <AmiBlitz3.ab3@9866>   MOVE.w #$FDA7,D1
00025C7C <AmiBlitz3.ab3@9867>    BSR.w JL_0_6F38
00025C82 <AmiBlitz3.ab3@9868>   MOVE.l A1,ffplib
00025C84 <AmiBlitz3.ab3@9871> RTS
00025C88 <AmiBlitz3.ab3@9874> ffplib:  Ds.l 1
00025C8A <AmiBlitz3.ab3@9878>     TST.w (A1)+
00025C8E <AmiBlitz3.ab3@9879>     BEQ.w JL_0_7320
00025C90 <AmiBlitz3.ab3@9880>     ADDQ.w #2,A1
00025C94 <AmiBlitz3.ab3@9881> BRA.w skiplibreg
00025C96 <AmiBlitz3.ab3@9884> RTS
00025C98 <AmiBlitz3.ab3@9888>   EXG.l A1,A0
00025C9C <AmiBlitz3.ab3@9889>   BSR.w aligna1
00025C9E <AmiBlitz3.ab3@9890>   EXG.l A1,A0
00025CA0 <AmiBlitz3.ab3@9891> RTS
00025CA2 <AmiBlitz3.ab3@9894>   EXG.l D0,A1
00025CA4 <AmiBlitz3.ab3@9895>   ADDQ.l #1,D0
00025CA8 <AmiBlitz3.ab3@9896>   BCLR #$0,D0
00025CAA <AmiBlitz3.ab3@9897>   EXG.l D0,A1
00025CAC <AmiBlitz3.ab3@9898> RTS
00025CB2 <AmiBlitz3.ab3@9902>   MOVEA.l _execbase,A6
00025CB8 <AmiBlitz3.ab3@9903>   MOVEA.l ptr_userlibs,A2
00025CBA <AmiBlitz3.ab3@9904>   MOVE.l (A2),D0
00025CBC <AmiBlitz3.ab3@9905>   CLR.l (A2)
00025CBE <AmiBlitz3.ab3@9906>   MOVEA.l D0,A2
00025CC2 <AmiBlitz3.ab3@9909>     CMPA.w #$0,A2
00025CC6 <AmiBlitz3.ab3@9910>     BEQ.w free_userlib
00025CCA <AmiBlitz3.ab3@9912>     MOVE.l $20(A2),D0
00025CCE <AmiBlitz3.ab3@9913>     BEQ.b JL_0_7360
00025CD0 <AmiBlitz3.ab3@9914>       LSL.l #2,D0
00025CD6 <AmiBlitz3.ab3@9915>       MOVE.l mempool,a0
00025CDA <AmiBlitz3.ab3@9916>       MOVEA.l $24(A2),A1
00025CDE <AmiBlitz3.ab3@9917>       JSR _FreePooled(A6)
00025CE0 <AmiBlitz3.ab3@9920>     MOVEA.l A2,A1
00025CE4 <AmiBlitz3.ab3@9921>     MOVE.l $6(A1),D0
00025CEA <AmiBlitz3.ab3@9922>     MOVE.l mempool,a0
00025CEC <AmiBlitz3.ab3@9923>     MOVEA.l (A2),A2
00025CF2 <AmiBlitz3.ab3@9924>     MOVEA.l _execbase,A6
00025CF6 <AmiBlitz3.ab3@9925>     JSR _FreePooled(A6)
00025CFA <AmiBlitz3.ab3@9926> BRA.w JL_0_7348
00025CFE <AmiBlitz3.ab3@9930>   BSR.w free_userlibs
00025D04 <AmiBlitz3.ab3@9931>   MOVEA.l _execbase,A6
00025D0A <AmiBlitz3.ab3@9932>   CLR.l libpointer
00025D10 <AmiBlitz3.ab3@9933>   MOVEA.l end_of_tokenlist,A0
00025D12 <AmiBlitz3.ab3@9934>   CLR.l (A0)
00025D18 <AmiBlitz3.ab3@9936>   MOVE.l size_acidlibs,D0
00025D1C <AmiBlitz3.ab3@9937>   BEQ.b JL_0_73A2
00025D22 <AmiBlitz3.ab3@9938>     MOVE.l ptr_acidlibs,D1
00025D26 <AmiBlitz3.ab3@9939>     BEQ.b JL_0_73A2
00025D2C <AmiBlitz3.ab3@9940>       CLR.l ptr_acidlibs
00025D2E <AmiBlitz3.ab3@9941>       MOVEA.l D1,A1
00025D34 <AmiBlitz3.ab3@9942>       MOVE.l mempool,a0
00025D3A <AmiBlitz3.ab3@9943>       MOVEA.l _execbase,A6
00025D3E <AmiBlitz3.ab3@9944>       JSR _FreePooled(A6)                                 ; free acidlibs
00025D44 <AmiBlitz3.ab3@9947>   MOVE.l size_deflibs,D0
00025D48 <AmiBlitz3.ab3@9948>   BEQ.b JL_0_73BE
00025D4E <AmiBlitz3.ab3@9949>     MOVE.l ptr_deflibs,D1
00025D52 <AmiBlitz3.ab3@9950>     BEQ.b JL_0_73BE
00025D58 <AmiBlitz3.ab3@9951>       CLR.l ptr_deflibs                                    ; d0: memorySize
00025D5A <AmiBlitz3.ab3@9952>       MOVEA.l D1,A1                                        ; a1: memory
00025D60 <AmiBlitz3.ab3@9953>       MOVE.l mempool,a0                                    ; a0: poolHeader
00025D66 <AmiBlitz3.ab3@9954>       MOVEA.l _execbase,A6
00025D6A <AmiBlitz3.ab3@9955>       JSR _FreePooled(A6)                                  ; free deflibs
00025D6C <AmiBlitz3.ab3@9958> RTS
00025D72 <AmiBlitz3.ab3@9962>   MOVEA.l currentmacroaddr,A0
00025D74 <AmiBlitz3.ab3@9963>   MOVEA.l (A0),A2
00025D76 <AmiBlitz3.ab3@9964>   CLR.l (A0)
00025D7C <AmiBlitz3.ab3@9965>   MOVEA.l _execbase,A6
00025D80 <AmiBlitz3.ab3@9968>     CMPA.w #$0,A2
00025D84 <AmiBlitz3.ab3@9969>     BEQ.w JL_0_73FA
00025D86 <AmiBlitz3.ab3@9970>     MOVEQ.l #$00,D0
00025D8A <AmiBlitz3.ab3@9971>     MOVE.w $8(A2),D0
00025D8E <AmiBlitz3.ab3@9972>     BEQ.w JL_0_73E8
00025D92 <AmiBlitz3.ab3@9973>     MOVEA.l $4(A2),A1
00025D98 <AmiBlitz3.ab3@9974>     MOVE.l mempool,a0
00025D9C <AmiBlitz3.ab3@9975>     JSR _FreePooled(A6)
00025D9E <AmiBlitz3.ab3@9978>     MOVEA.l A2,A1
00025DA0 <AmiBlitz3.ab3@9979>     MOVEA.l (A2),A2
00025DA2 <AmiBlitz3.ab3@9980>     MOVEQ.l #$00,D0
00025DA6 <AmiBlitz3.ab3@9981>     MOVE.b $C(A1),D0
00025DAC <AmiBlitz3.ab3@9982>     MOVE.l mempool2,a0
00025DB0 <AmiBlitz3.ab3@9983>     JSR _FreePooled(A6)
00025DB4 <AmiBlitz3.ab3@9984> BRA.w JL_0_73CE
00025DB6 <AmiBlitz3.ab3@9987> RTS
00025DBC <AmiBlitz3.ab3@9991>   MOVEA.l templabel,A2
00025DC2 <AmiBlitz3.ab3@9992>   CLR.l templabel
00025DC4 <AmiBlitz3.ab3@9993> RTS
00025DCA <AmiBlitz3.ab3@9996>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00025DCE <AmiBlitz3.ab3@9999>     CMPA.w #$0,A2
00025DD2 <AmiBlitz3.ab3@10000>     BEQ.w JL_0_7426
00025DD4 <AmiBlitz3.ab3@10001>     MOVEQ.l #$00,D0
00025DD8 <AmiBlitz3.ab3@10002>     MOVE.b $E(A2),D0                                       ;labeltemp
00025DDA <AmiBlitz3.ab3@10003>     MOVEA.l A2,A1
00025DDC <AmiBlitz3.ab3@10004>     MOVEA.l (A2),A2
00025DE2 <AmiBlitz3.ab3@10005>     MOVE.l mempool2,a0
00025DE6 <AmiBlitz3.ab3@10007> BRA.w JL_0_740C
00025DE8 <AmiBlitz3.ab3@10010> RTS
00025DEE <AmiBlitz3.ab3@10014>   MOVEA.l data1,A4
00025DF4 <AmiBlitz3.ab3@10015>   CMPA.l data2at,A4
00025DF8 <AmiBlitz3.ab3@10016>   BCC.w JL_0_7442
00025DFA <AmiBlitz3.ab3@10017>     MOVE.b D1,(A4)+
00025E00 <AmiBlitz3.ab3@10018>     MOVE.l A4,data1
00025E02 <AmiBlitz3.ab3@10019> RTS
00025E0A <AmiBlitz3.ab3@10022>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00025E10 <AmiBlitz3.ab3@10023>   ADDQ.l #1,data1
00025E12 <AmiBlitz3.ab3@10024> RTS
00025E14 <AmiBlitz3.ab3@10028>   SWAP D1
00025E18 <AmiBlitz3.ab3@10029>   BSR.w pokedata1
00025E1A <AmiBlitz3.ab3@10030>   SWAP D1
00025E20 <AmiBlitz3.ab3@10033>   MOVEA.l data1,A4
00025E26 <AmiBlitz3.ab3@10034>   CMPA.l data2at,A4
00025E2A <AmiBlitz3.ab3@10035>    BCC.w JL_0_7474
00025E2C <AmiBlitz3.ab3@10036>   MOVE.w D1,(A4)+
00025E32 <AmiBlitz3.ab3@10037>   MOVE.l A4,data1
00025E34 <AmiBlitz3.ab3@10038> RTS
00025E3C <AmiBlitz3.ab3@10041>   MOVE.w #$FFFF,dontwrite
00025E42 <AmiBlitz3.ab3@10042>   ADDQ.l #2,data1
00025E44 <AmiBlitz3.ab3@10043> RTS
00025E4A <AmiBlitz3.ab3@10047>   MOVE.l data1,D3                                      ;write local string/type allocs
00025E4C <AmiBlitz3.ab3@10048>   MOVEQ.l #$00,D4
00025E50 <AmiBlitz3.ab3@10051>   CMPA.w #$0,A2
00025E54 <AmiBlitz3.ab3@10052>    BEQ.w JL_0_74CAc
00025E58 <AmiBlitz3.ab3@10053>   TST.w $6(A2)
00025E5C <AmiBlitz3.ab3@10054>    BNE.w JL_0_74C4c
00025E60 <AmiBlitz3.ab3@10055>   MOVEA.l $A(A2),A3
00025E68 <AmiBlitz3.ab3@10056>   CMPI.l #$100,$4(A3)
00025E6C <AmiBlitz3.ab3@10057>    BCS.w JL_0_74C4c
00025E70 <AmiBlitz3.ab3@10058>   MOVE.w $4(A2),D1
00025E74 <AmiBlitz3.ab3@10059>    BSR.w pokedata1
00025E78 <AmiBlitz3.ab3@10060>   MOVE.w $8(A3),D1
00025E7C <AmiBlitz3.ab3@10061>    BSR.w pokedata1
00025E7E <AmiBlitz3.ab3@10062>   ADDQ.w #1,D4
00025E80 <AmiBlitz3.ab3@10065>    MOVEA.l (A2),A2
00025E84 <AmiBlitz3.ab3@10066> BRA.w JL_0_7492c
00025E86 <AmiBlitz3.ab3@10069>    TST.w D4
00025E8A <AmiBlitz3.ab3@10070>    BEQ.w JL_0_74E0
00025E8E <AmiBlitz3.ab3@10071>   MOVE.w #$FF37,D1
00025E92 <AmiBlitz3.ab3@10072>    BSR.w uselib
00025E96 <AmiBlitz3.ab3@10073>   MOVE.w #$FFFA,D1
00025E9A <AmiBlitz3.ab3@10074> BRA.w uselib
00025EA0 <AmiBlitz3.ab3@10082>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00025EA6 <AmiBlitz3.ab3@10085>   MOVE.l data1,D3
00025EA8 <AmiBlitz3.ab3@10086>   MOVEQ.l #$00,D4
00025EAE <AmiBlitz3.ab3@10087>   TST.b iserror
00025EB2 <AmiBlitz3.ab3@10088>   BEQ JL_0_7492
00025EB4 <AmiBlitz3.ab3@10089>   RTS
00025EB8 <AmiBlitz3.ab3@10091>    CMPA.w #$0,A2
00025EBC <AmiBlitz3.ab3@10092>    BEQ.w JL_0_74CA
00025EC0 <AmiBlitz3.ab3@10093>   TST.w $6(A2)
00025EC4 <AmiBlitz3.ab3@10094>    BNE.w JL_0_74C4
00025EC8 <AmiBlitz3.ab3@10095>   MOVEA.l $A(A2),A3
00025ED0 <AmiBlitz3.ab3@10096>   CMPI.l #$100,$4(A3)
00025ED4 <AmiBlitz3.ab3@10097>    BCS.w JL_0_74C4
00025ED8 <AmiBlitz3.ab3@10098>   MOVE.w $4(A2),D1
00025EDC <AmiBlitz3.ab3@10099>    BSR.w pokedata1
00025EE0 <AmiBlitz3.ab3@10100>   MOVE.w $8(A3),D1
00025EE4 <AmiBlitz3.ab3@10101>    BSR.w pokedata1
00025EE6 <AmiBlitz3.ab3@10102>   ADDQ.w #1,D4
00025EE8 <AmiBlitz3.ab3@10105>   MOVEA.l (A2),A2
00025EEC <AmiBlitz3.ab3@10106> BRA.w JL_0_7492
00025EF2 <AmiBlitz3.ab3@10110>   MOVEA.l sharebase,A2
00025EF6 <AmiBlitz3.ab3@10113>   CMPA.w #$0,A2
00025EFA <AmiBlitz3.ab3@10114>    BEQ.w JL_0_74CAb
00025EFE <AmiBlitz3.ab3@10116>   TST.w $6(A2)
00025F02 <AmiBlitz3.ab3@10117>    BNE.w JL_0_74C4b
00025F06 <AmiBlitz3.ab3@10118>   MOVEA.l $A(A2),A3
00025F0E <AmiBlitz3.ab3@10119>   CMPI.l #$100,$4(A3)
00025F12 <AmiBlitz3.ab3@10120>    BCS.w JL_0_74C4b
00025F16 <AmiBlitz3.ab3@10121>   MOVE.w $4(A2),D1
00025F1A <AmiBlitz3.ab3@10122>    BSR.w pokedata1
00025F1E <AmiBlitz3.ab3@10123>   MOVE.w $8(A3),D1
00025F22 <AmiBlitz3.ab3@10124>    BSR.w pokedata1
00025F24 <AmiBlitz3.ab3@10125>   ADDQ.w #1,D4
00025F26 <AmiBlitz3.ab3@10128>   MOVEA.l (A2),A2
00025F2A <AmiBlitz3.ab3@10129> BRA.w JL_0_7492b
00025F2C <AmiBlitz3.ab3@10132>    TST.w D4
00025F30 <AmiBlitz3.ab3@10133>    BEQ.w JL_0_74E0
00025F34 <AmiBlitz3.ab3@10134>   MOVE.w #$FF37,D1
00025F38 <AmiBlitz3.ab3@10135>    BSR.w uselib                                            ;use statics lib
00025F3C <AmiBlitz3.ab3@10136>   MOVE.w #$FFFA,D1                                         ;use memlib
00025F40 <AmiBlitz3.ab3@10137> BRA.w uselib
00025F42 <AmiBlitz3.ab3@10140> RTS
00025F48 <AmiBlitz3.ab3@10144>   MOVE.w numtoa2,D1
00025F4C <AmiBlitz3.ab3@10145>    BSR.w writeword
00025F50 <AmiBlitz3.ab3@10146>    BSR.w addoff
00025F52 <AmiBlitz3.ab3@10147>   MOVE.l D3,D1
00025F56 <AmiBlitz3.ab3@10148>    BSR.w writelong
00025F58 <AmiBlitz3.ab3@10149>   SUBQ.w #1,D4
00025F5E <AmiBlitz3.ab3@10150>   MOVE.w D4,endarray+2
00025F64 <AmiBlitz3.ab3@10151>   MOVE.l endarray,D1
00025F68 <AmiBlitz3.ab3@10152> BRA.w writelong
00025F6A <AmiBlitz3.ab3@10156>   MOVE.l D3,-(A7)
00025F70 <AmiBlitz3.ab3@10159>   MOVEA.l _dosbase,A6
00025F74 <AmiBlitz3.ab3@10160>   JSR _Write(a6)
00025F76 <AmiBlitz3.ab3@10162>   CMP.l (A7)+,D0
00025F7A <AmiBlitz3.ab3@10163>    BNE.w JL_0_7516
00025F7C <AmiBlitz3.ab3@10164> RTS
00025F7E <AmiBlitz3.ab3@10167>   MOVE.l D7,D1
00025F84 <AmiBlitz3.ab3@10169>   MOVEA.l _dosbase,A6
00025F88 <AmiBlitz3.ab3@10170>   JSR _Close(a6)
00025F8E <AmiBlitz3.ab3@10173> JMP error_create_exe
00025F94 <AmiBlitz3.ab3@10182> 
00025F9A <AmiBlitz3.ab3@10183>   MOVE.l A7,errstack
00025F9E <AmiBlitz3.ab3@10184>   MOVEM.l d2-d7/a2-a6,-(a7)
00025FA8 <AmiBlitz3.ab3@10185>   MOVE.l #AL_0_7790,errcont
00025FAE <AmiBlitz3.ab3@10186>    JSR call_setpointerbusy
00025FB6 <AmiBlitz3.ab3@10187>   MOVE.w #$FFFF,anyerrs
00025FC0 <AmiBlitz3.ab3@10188>   CMP.l #-1,chipstart
00025FC4 <AmiBlitz3.ab3@10189>   BEQ 'l01
00025FCA <AmiBlitz3.ab3@10190>   MOVE.l chipend,d1
00025FCC <AmiBlitz3.ab3@10191>   ADDQ.l #3,d1
00025FD2 <AmiBlitz3.ab3@10192>   AND.l #$fffffffc,d1                                      ;bug
00025FD8 <AmiBlitz3.ab3@10193>   MOVE.l d1,chipend
00025FDA <AmiBlitz3.ab3@10194>   MOVE.l d1,a1
00025FE0 <AmiBlitz3.ab3@10195>   MOVE.l chipstart,a0
00025FE2 <AmiBlitz3.ab3@10196>   MOVE.l a1,d1
00025FE4 <AmiBlitz3.ab3@10197>   SUB.l a0,d1
00025FEA <AmiBlitz3.ab3@10198>   MOVE.l d1,chipsize
00025FF4 <AmiBlitz3.ab3@10201>   CMP.l #-1,bssstart
00025FF8 <AmiBlitz3.ab3@10202>   BEQ 'l11
00025FFE <AmiBlitz3.ab3@10203>   MOVE.l realbssend,a1
00026004 <AmiBlitz3.ab3@10204>   MOVE.l bssstart,a0
00026006 <AmiBlitz3.ab3@10205>   MOVE.l a1,d1
00026008 <AmiBlitz3.ab3@10206>   SUB.l a0,d1
0002600E <AmiBlitz3.ab3@10207>   MOVE.l d1,bsssize
00026012 <AmiBlitz3.ab3@10208>   BEQ 'l11
00026014 <AmiBlitz3.ab3@10211>   TST.b (a0)+
00026018 <AmiBlitz3.ab3@10212>   BEQ 'l31
0002601E <AmiBlitz3.ab3@10213>   TST.b debugmode
00026022 <AmiBlitz3.ab3@10214>   BEQ 'l1
00026028 <AmiBlitz3.ab3@10215>   TST.b exdebug
0002602C <AmiBlitz3.ab3@10216>   BNE 'l31
00026032 <AmiBlitz3.ab3@10219>   MOVE.l #nodata,-(a7)
00026038 <AmiBlitz3.ab3@10220> JMP handle_compileerror
0002603A <AmiBlitz3.ab3@10223>   CMP.l a0,a1
0002603E <AmiBlitz3.ab3@10224>   BGT 'l32
00026044 <AmiBlitz3.ab3@10225>   MOVE.l bssend,d1
00026046 <AmiBlitz3.ab3@10226>   ADDQ.l #3,d1
0002604C <AmiBlitz3.ab3@10227>   AND.l #$fffffffc,d1                                      ;bug
00026052 <AmiBlitz3.ab3@10228>   MOVE.l d1,bssend
00026054 <AmiBlitz3.ab3@10229>   MOVE.l d1,a1
0002605A <AmiBlitz3.ab3@10230>   MOVE.l bssstart,a0
0002605C <AmiBlitz3.ab3@10231>   MOVE.l a1,d1
0002605E <AmiBlitz3.ab3@10232>   SUB.l a0,d1
00026064 <AmiBlitz3.ab3@10233>   MOVE.l d1,bsssize
00026068 <AmiBlitz3.ab3@10236>   MOVEM.l d5-d7/d3,-(a7)
0002606E <AmiBlitz3.ab3@10237>   MOVE.w dontwrite,D1
00026072 <AmiBlitz3.ab3@10238>   BNE.w JL_0_757C
00026078 <AmiBlitz3.ab3@10239>   MOVE.l chipsize,d5
0002607E <AmiBlitz3.ab3@10240>   MOVE.l bsssize,d3
00026084 <AmiBlitz3.ab3@10241>   MOVE.l chipstart,d7
0002608A <AmiBlitz3.ab3@10242>   MOVE.l bssstart,d6
00026090 <AmiBlitz3.ab3@10243>   MOVEA.l hunkoffsetbase,A2
00026096 <AmiBlitz3.ab3@10244>   MOVEA.l destbufferstart,A1
00026098 <AmiBlitz3.ab3@10245>   MOVE.l A1,D2
0002609E <AmiBlitz3.ab3@10246>   ADD.l noinits,D2
000260A4 <AmiBlitz3.ab3@10247>   CLR.l hunkoffsetnum
000260A8 <AmiBlitz3.ab3@10250>   CMPA.w #$0,A2
000260AC <AmiBlitz3.ab3@10251>    BEQ.w JL_0_757C
000260B0 <AmiBlitz3.ab3@10252>   MOVE.l $4(A2),D0
000260B4 <AmiBlitz3.ab3@10253>    LEA $0(a1,d0.l),a0
000260B6 <AmiBlitz3.ab3@10254>    MOVE.l (a0),d1
000260B8 <AmiBlitz3.ab3@10255>   TST.l d1
000260BC <AmiBlitz3.ab3@10256>    BMI.w 'lm1
000260C4 <AmiBlitz3.ab3@10257>   MOVE.b #0,newhunk
000260CE <AmiBlitz3.ab3@10258>   CMP.l #-1,chipstart
000260D2 <AmiBlitz3.ab3@10259>   BEQ 'l10
000260D8 <AmiBlitz3.ab3@10260>   CMP.l chipstart,d1
000260DC <AmiBlitz3.ab3@10261>   BLT 'l10
000260E4 <AmiBlitz3.ab3@10262>   MOVE.b #1,newhunk
000260EA <AmiBlitz3.ab3@10263>   CMP.l chipend,d1
000260EE <AmiBlitz3.ab3@10264>   BGE 'l110
000260F0 <AmiBlitz3.ab3@10265>   SUB.l d7,(a0)
000260F8 <AmiBlitz3.ab3@10266>   ADD.l #$80000000,4(a2)
000260FC <AmiBlitz3.ab3@10267> BRA JL_0_7576
00026100 <AmiBlitz3.ab3@10270>   SUB.l d5,0(a0)
0002610A <AmiBlitz3.ab3@10273>   CMP.l #-1,bssstart
0002610E <AmiBlitz3.ab3@10274>     BEQ 'l11
00026114 <AmiBlitz3.ab3@10275>   CMP.l bssstart,d1
00026118 <AmiBlitz3.ab3@10276>   BLT 'l11
0002611E <AmiBlitz3.ab3@10277>   CMP.l bssend,d1
00026122 <AmiBlitz3.ab3@10278>   BGE 'l111
00026128 <AmiBlitz3.ab3@10279>   TST.b newhunk
0002612C <AmiBlitz3.ab3@10280>   BEQ 'ln1
0002612E <AmiBlitz3.ab3@10281>   ADD.l d5,(a0)
00026130 <AmiBlitz3.ab3@10284>   SUB.l d6,(a0)
00026138 <AmiBlitz3.ab3@10285>   ADD.l #$40000000,4(a2)
0002613C <AmiBlitz3.ab3@10286> BRA JL_0_7576
00026140 <AmiBlitz3.ab3@10289>   SUB.l d3,0(a0)
00026142 <AmiBlitz3.ab3@10292>   SUB.l D2,(A0)
00026148 <AmiBlitz3.ab3@10295>   ADDQ.l #1,hunkoffsetnum
0002614A <AmiBlitz3.ab3@10298>    MOVEA.l (A2),A2
0002614E <AmiBlitz3.ab3@10299> BRA.w JL_0_755E
00026152 <AmiBlitz3.ab3@10303>   MOVEM.l (a7)+,d5-d7/d3
00026158 <AmiBlitz3.ab3@10304>   MOVE.l ptr_newexefilename,D1
0002615E <AmiBlitz3.ab3@10305>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00026164 <AmiBlitz3.ab3@10306>   MOVEA.l _dosbase,A6
00026168 <AmiBlitz3.ab3@10307>    JSR _Open(A6)
0002616A <AmiBlitz3.ab3@10308>   MOVE.l D0,D7
0002616E <AmiBlitz3.ab3@10309>    BEQ.w execerr
00026174 <AmiBlitz3.ab3@10310>   MOVE.l objlen,D0
0002617A <AmiBlitz3.ab3@10311>   SUB.l #moremem,d0
00026180 <AmiBlitz3.ab3@10312>   SUB.l noinits,D0
0002618A <AmiBlitz3.ab3@10313>   CMP.l #-1,bssstart
0002618E <AmiBlitz3.ab3@10314>   BEQ 'l60
00026194 <AmiBlitz3.ab3@10315>   SUB.l bsssize,d0
0002619A <AmiBlitz3.ab3@10316>   SUB.l chipsize,d0
0002619E <AmiBlitz3.ab3@10317> BRA.s 'l61
000261A8 <AmiBlitz3.ab3@10320>   CMP.l #-1,chipstart
000261AC <AmiBlitz3.ab3@10321>   BEQ 'l61
000261B2 <AmiBlitz3.ab3@10322>   SUB.l bsssize,d0
000261B8 <AmiBlitz3.ab3@10323>   SUB.l chipsize,d0
000261BA <AmiBlitz3.ab3@10326>   ADDQ.l #3,D0
000261BC <AmiBlitz3.ab3@10327>   LSR.l #2,D0
000261C2 <AmiBlitz3.ab3@10328>   MOVE.l D0,tstsize1
000261C8 <AmiBlitz3.ab3@10329>   MOVE.l D0,tstsize2
000261CA <AmiBlitz3.ab3@10330>   MOVE.l D7,D1
000261D0 <AmiBlitz3.ab3@10331>   MOVE.l #tsthead,D2                                      ;hunkbegin
000261D2 <AmiBlitz3.ab3@10332>   MOVEQ.l #$20,D3
000261DC <AmiBlitz3.ab3@10333>   CMP.l #-1,bssstart
000261E0 <AmiBlitz3.ab3@10334>   BEQ 'lb1
000261EA <AmiBlitz3.ab3@10335>   CMP.l #-1,chipstart
000261EE <AmiBlitz3.ab3@10336>   BEQ 'lb1
000261F8 <AmiBlitz3.ab3@10337>   MOVE.l #1,bssnum
00026202 <AmiBlitz3.ab3@10338>   MOVE.l #2,chipnum
00026204 <AmiBlitz3.ab3@10339>   MOVEQ.l #$28,D3
0002620A <AmiBlitz3.ab3@10340>   MOVE.l bsssize,d2
0002620C <AmiBlitz3.ab3@10341>   ADDQ.l #3,d2
0002620E <AmiBlitz3.ab3@10342>   ASR.l #2,d2
00026214 <AmiBlitz3.ab3@10343>   MOVE.l d2,hunkend+8
0002621A <AmiBlitz3.ab3@10344>   MOVE.l d2,bsssize3
00026220 <AmiBlitz3.ab3@10345>   MOVE.l chipsize,d2
00026222 <AmiBlitz3.ab3@10346>   ADDQ.l #3,d2
00026224 <AmiBlitz3.ab3@10347>   ASR.l #2,d2
0002622A <AmiBlitz3.ab3@10348>   MOVE.l d2,chipsize2
00026234 <AmiBlitz3.ab3@10349>   ADD.l #$40000000,chipsize2
0002623A <AmiBlitz3.ab3@10350>   MOVE.l d2,hunkend2+8
00026240 <AmiBlitz3.ab3@10351>   MOVE.l D0,tstsize1c
00026246 <AmiBlitz3.ab3@10352>   MOVE.l D0,tstsize2c
0002624C <AmiBlitz3.ab3@10353>   MOVE.l #hunkbegin2,d2
00026250 <AmiBlitz3.ab3@10354> BRA 'l100
0002625A <AmiBlitz3.ab3@10357>   CMP.l #-1,bssstart
0002625E <AmiBlitz3.ab3@10358>   BEQ 'l10
00026268 <AmiBlitz3.ab3@10359>   MOVE.l #1,bssnum
0002626A <AmiBlitz3.ab3@10360>   MOVEQ.l #$24,D3
00026270 <AmiBlitz3.ab3@10361>   MOVE.l bsssize,d2
00026272 <AmiBlitz3.ab3@10362>   ADDQ.l #3,d2
00026274 <AmiBlitz3.ab3@10363>   ASR.l #2,d2
0002627A <AmiBlitz3.ab3@10364>   MOVE.l d2,hunkend+8
00026280 <AmiBlitz3.ab3@10365>   MOVE.l d2,bsssize2
00026286 <AmiBlitz3.ab3@10366>   MOVE.l D0,tstsize1b
0002628C <AmiBlitz3.ab3@10367>   MOVE.l D0,tstsize2b
00026292 <AmiBlitz3.ab3@10368>   MOVE.l #hunkbegin,d2
0002629C <AmiBlitz3.ab3@10371>   CMP.l #-1,chipstart
000262A0 <AmiBlitz3.ab3@10372>   BEQ 'l100
000262AA <AmiBlitz3.ab3@10373>   MOVE.l #1,chipnum
000262AC <AmiBlitz3.ab3@10374>   MOVEQ.l #$24,D3
000262B2 <AmiBlitz3.ab3@10375>   MOVE.l chipsize,d2
000262B4 <AmiBlitz3.ab3@10376>   ADDQ.l #3,d2
000262B6 <AmiBlitz3.ab3@10377>   ASR.l #2,d2
000262BC <AmiBlitz3.ab3@10378>   MOVE.l d2,hunkend2+8
000262C2 <AmiBlitz3.ab3@10379>   MOVE.l d2,bsssize2
000262CC <AmiBlitz3.ab3@10380>   ADD.l #$40000000,bsssize2
000262D2 <AmiBlitz3.ab3@10381>   MOVE.l D0,tstsize1b
000262D8 <AmiBlitz3.ab3@10382>   MOVE.l D0,tstsize2b
000262DE <AmiBlitz3.ab3@10383>   MOVE.l #hunkbegin,d2
000262E2 <AmiBlitz3.ab3@10386>    BSR.w mywrite
000262E8 <AmiBlitz3.ab3@10387>   MOVE.l destbufferstart,D2
000262EE <AmiBlitz3.ab3@10388>   ADD.l noinits,D2
000262F4 <AmiBlitz3.ab3@10389>   MOVE.l objlen,D3
000262FA <AmiBlitz3.ab3@10390>   SUB.l #moremem,d3
00026300 <AmiBlitz3.ab3@10391>   SUB.l noinits,D3
0002630A <AmiBlitz3.ab3@10392>   CMP.l #-1,bssstart
0002630E <AmiBlitz3.ab3@10393>   BNE 'l40
00026318 <AmiBlitz3.ab3@10394>   CMP.l #-1,chipstart
0002631C <AmiBlitz3.ab3@10395>   BNE 'l40
00026320 <AmiBlitz3.ab3@10396> BRA 'l41
00026326 <AmiBlitz3.ab3@10399>   MOVE.l codeend,d1
00026328 <AmiBlitz3.ab3@10400>     SUB.l d2,d1
0002632A <AmiBlitz3.ab3@10401>     MOVE.l d1,d3
00026330 <AmiBlitz3.ab3@10402>   SUB.l bsssize,d3
00026336 <AmiBlitz3.ab3@10403>   SUB.l chipsize,d3
00026338 <AmiBlitz3.ab3@10404>   MOVE.l D7,D1
0002633C <AmiBlitz3.ab3@10405>   BSR.w mywrite
00026342 <AmiBlitz3.ab3@10406>   MOVE.l objlen,D3
00026348 <AmiBlitz3.ab3@10407>   SUB.l #moremem,d3
0002634E <AmiBlitz3.ab3@10408>   SUB.l noinits,D3
00026350 <AmiBlitz3.ab3@10409>   MOVE.l d3,d1
00026356 <AmiBlitz3.ab3@10410>   MOVE.l destbufferstart,D2
0002635C <AmiBlitz3.ab3@10411>   ADD.l noinits,D2
0002635E <AmiBlitz3.ab3@10412>   ADD.l d2,d1
00026364 <AmiBlitz3.ab3@10413>   SUB.l codeend,d1
00026366 <AmiBlitz3.ab3@10414>   MOVE.l d1,d3
0002636C <AmiBlitz3.ab3@10415>   MOVE.l codeend,d2
0002636E <AmiBlitz3.ab3@10418>   MOVE.l d2,d1
00026370 <AmiBlitz3.ab3@10419>   ADD.l d3,d1
00026372 <AmiBlitz3.ab3@10420>   ADDQ.l #3,D1
00026378 <AmiBlitz3.ab3@10421>   ANDI.l #$FFFFFFFC,D1
0002637A <AmiBlitz3.ab3@10422>   SUB.l d2,d1
0002637C <AmiBlitz3.ab3@10423>   MOVE.l d1,d3
0002637E <AmiBlitz3.ab3@10424>   MOVE.l D7,D1
00026382 <AmiBlitz3.ab3@10425>    BSR.w mywrite
0002638C <AmiBlitz3.ab3@10426>   MOVE.l hunkoffsetcounter,tstsize3
00026390 <AmiBlitz3.ab3@10427>    BEQ.w JL_0_7646
00026392 <AmiBlitz3.ab3@10428>   MOVE.l D7,D1
00026398 <AmiBlitz3.ab3@10429>   MOVE.l #tstend,D2
0002639A <AmiBlitz3.ab3@10430>   MOVEQ.l #$04,D3
0002639E <AmiBlitz3.ab3@10431>    BSR.w mywrite
000263A4 <AmiBlitz3.ab3@10432>    MOVEA.l _execbase,A6
000263AA <AmiBlitz3.ab3@10433>    MOVE.l hunkoffsetcounter,d0
000263AC <AmiBlitz3.ab3@10434>    ASL.l #2,d0
000263B2 <AmiBlitz3.ab3@10435>    ADD.l #12,d0
000263B4 <AmiBlitz3.ab3@10436>    MOVEQ #0,d1
000263B8 <AmiBlitz3.ab3@10437>    JSR _AllocMem(a6)
000263BA <AmiBlitz3.ab3@10438>    TST.l d0
000263BE <AmiBlitz3.ab3@10439>    BEQ nomem
000263C4 <AmiBlitz3.ab3@10440>    MOVE.l noinits,D4
000263C6 <AmiBlitz3.ab3@10441>    MOVE.l d5,-(a7)
000263C8 <AmiBlitz3.ab3@10442>    MOVE.l d0,d5
000263CA <AmiBlitz3.ab3@10443>    MOVE.l d0,a1
000263D0 <AmiBlitz3.ab3@10444>    MOVEA.l hunkoffsetbase,A2
000263D8 <AmiBlitz3.ab3@10445>    MOVE.b #0,newhunk
000263DC <AmiBlitz3.ab3@10448>   CMPA.w #$0,A2
000263E0 <AmiBlitz3.ab3@10449>    BEQ.w savehunk
000263E6 <AmiBlitz3.ab3@10450>   MOVE.l destbufferstart,D2
000263EC <AmiBlitz3.ab3@10451>   ADD.l noinits,D2
000263F0 <AmiBlitz3.ab3@10452>   MOVE.l  $4(A2),d1
000263F4 <AmiBlitz3.ab3@10453>   BTST #31,d1
000263F8 <AmiBlitz3.ab3@10454>   BEQ 'lh1
00026400 <AmiBlitz3.ab3@10455>   MOVE.b #1,newhunk
00026404 <AmiBlitz3.ab3@10456> BRA 'lh3
00026408 <AmiBlitz3.ab3@10459>   BTST #30,d1
0002640C <AmiBlitz3.ab3@10460>   BEQ 'lh2
00026414 <AmiBlitz3.ab3@10461>   MOVE.b #1,newhunk
00026418 <AmiBlitz3.ab3@10462> BRA 'lh3
0002641A <AmiBlitz3.ab3@10465>   ADD.l d1,d2
00026420 <AmiBlitz3.ab3@10466>   CMP.l chipend,d2
00026424 <AmiBlitz3.ab3@10467>   BLT 'l100
0002642A <AmiBlitz3.ab3@10468>   SUB.l chipsize,d1
00026430 <AmiBlitz3.ab3@10471>   CMP.l bssend,d2
00026434 <AmiBlitz3.ab3@10472>   BLT 'l101
0002643A <AmiBlitz3.ab3@10473>   SUB.l bsssize,d1
0002643C <AmiBlitz3.ab3@10476>   MOVE.l d1,(a1)
0002643E <AmiBlitz3.ab3@10477>   SUB.l D4,(A1)+
00026440 <AmiBlitz3.ab3@10480>   MOVEA.l (A2),A2
00026444 <AmiBlitz3.ab3@10481> BRA.w menu_createresidentfile__oloopb
00026446 <AmiBlitz3.ab3@10485>   MOVE.l D7,D1
0002644C <AmiBlitz3.ab3@10486>   MOVEA.l _dosbase,A6
00026456 <AmiBlitz3.ab3@10487>   MOVE.l hunkoffsetnum,tstsize3
0002645A <AmiBlitz3.ab3@10488>   BEQ 'ln1
00026460 <AmiBlitz3.ab3@10489>   MOVE.l #tstend+4,d2
00026462 <AmiBlitz3.ab3@10490>     MOVEQ #8,d3
00026466 <AmiBlitz3.ab3@10491>    JSR _Write(A6)
00026468 <AmiBlitz3.ab3@10492>   MOVE.l d7,d1
0002646E <AmiBlitz3.ab3@10493>   MOVE.l hunkoffsetnum,d3
00026470 <AmiBlitz3.ab3@10494>   ASL.l #2,d3
00026472 <AmiBlitz3.ab3@10495>   MOVE.l d5,D2
00026476 <AmiBlitz3.ab3@10496>   JSR _Write(a6)
0002647C <AmiBlitz3.ab3@10499>   TST.b newhunk
00026480 <AmiBlitz3.ab3@10500>   BEQ 'l10
00026486 <AmiBlitz3.ab3@10501>   MOVEA.l hunkoffsetbase,A2
00026488 <AmiBlitz3.ab3@10502>   MOVE.l d5,a0
0002648A <AmiBlitz3.ab3@10503>   ADDQ #8,a0
00026492 <AmiBlitz3.ab3@10504>   MOVE.l bssnum,-4(a0)
00026494 <AmiBlitz3.ab3@10505>   MOVEQ #0,d6
00026498 <AmiBlitz3.ab3@10508>   CMPA.w #$0,A2
0002649C <AmiBlitz3.ab3@10509>    BEQ.w 'lh3
000264A2 <AmiBlitz3.ab3@10510>   MOVE.l destbufferstart,D2
000264A8 <AmiBlitz3.ab3@10511>   ADD.l noinits,D2
000264AC <AmiBlitz3.ab3@10512>   MOVE.l  $4(A2),d1
000264B0 <AmiBlitz3.ab3@10513>   BTST #30,d1
000264B4 <AmiBlitz3.ab3@10514>   BEQ 'lh1
000264B8 <AmiBlitz3.ab3@10515>   BCLR #30,d1
000264BA <AmiBlitz3.ab3@10516>   MOVE.l d1,(a0)
000264BC <AmiBlitz3.ab3@10517>   SUB.l D4,(A0)+
000264BE <AmiBlitz3.ab3@10518>   ADDQ.l #1,d6
000264C0 <AmiBlitz3.ab3@10521>   MOVE.l (a2),a2
000264C4 <AmiBlitz3.ab3@10522> BRA 'lh2
000264C6 <AmiBlitz3.ab3@10525>   TST.l d6
000264CA <AmiBlitz3.ab3@10526>     BEQ 'lh10
000264CC <AmiBlitz3.ab3@10527>     MOVE.l d5,a0
000264CE <AmiBlitz3.ab3@10528>     MOVE.l d6,(a0)
000264D0 <AmiBlitz3.ab3@10529>     MOVE.l d7,d1
000264D2 <AmiBlitz3.ab3@10530>     MOVE.l d5,d2
000264D4 <AmiBlitz3.ab3@10531>     MOVE.l d6,d3
000264D6 <AmiBlitz3.ab3@10532>     ASL.l #2,d3
000264D8 <AmiBlitz3.ab3@10533>     ADDQ.l #8,d3
000264DC <AmiBlitz3.ab3@10534>     BSR.w mywrite
000264E2 <AmiBlitz3.ab3@10537>   MOVEA.l hunkoffsetbase,A2
000264E4 <AmiBlitz3.ab3@10538>   MOVE.l d5,a0
000264E6 <AmiBlitz3.ab3@10539>   ADDQ #8,a0
000264EE <AmiBlitz3.ab3@10540>   MOVE.l chipnum,-4(a0)
000264F0 <AmiBlitz3.ab3@10541>   MOVEQ #0,d6
000264F4 <AmiBlitz3.ab3@10544>   CMPA.w #$0,A2
000264F8 <AmiBlitz3.ab3@10545>    BEQ.w 'lh30
000264FE <AmiBlitz3.ab3@10546>   MOVE.l destbufferstart,D2
00026504 <AmiBlitz3.ab3@10547>   ADD.l noinits,D2
00026508 <AmiBlitz3.ab3@10548>   MOVE.l  $4(A2),d1
0002650C <AmiBlitz3.ab3@10549>   BTST #31,d1
00026510 <AmiBlitz3.ab3@10550>   BEQ 'lh11
00026514 <AmiBlitz3.ab3@10551>   BCLR #31,d1
00026516 <AmiBlitz3.ab3@10552>   MOVE.l d1,(a0)
00026518 <AmiBlitz3.ab3@10553>   SUB.l D4,(A0)+
0002651A <AmiBlitz3.ab3@10554>   ADDQ.l #1,d6
0002651C <AmiBlitz3.ab3@10557>   MOVE.l (a2),a2
00026520 <AmiBlitz3.ab3@10558> BRA 'lh20
00026522 <AmiBlitz3.ab3@10561>   TST.l d6
00026526 <AmiBlitz3.ab3@10562>     BEQ 'l10
00026528 <AmiBlitz3.ab3@10563>     MOVE.l d5,a0
0002652A <AmiBlitz3.ab3@10564>     MOVE.l d6,(a0)
0002652C <AmiBlitz3.ab3@10565>     MOVE.l d7,d1
0002652E <AmiBlitz3.ab3@10566>     MOVE.l d5,d2
00026530 <AmiBlitz3.ab3@10567>     MOVE.l d6,d3
00026532 <AmiBlitz3.ab3@10568>     ASL.l #2,d3
00026534 <AmiBlitz3.ab3@10569>     ADDQ.l #8,d3
00026538 <AmiBlitz3.ab3@10570>     BSR.w mywrite
0002653E <AmiBlitz3.ab3@10574>    MOVEA.l _execbase,A6
00026544 <AmiBlitz3.ab3@10575>    MOVE.l hunkoffsetcounter,d0
00026546 <AmiBlitz3.ab3@10576>    ASL.l #2,d0
0002654C <AmiBlitz3.ab3@10577>    ADD.l #12,d0
0002654E <AmiBlitz3.ab3@10578>    MOVE.l d5,a1
00026552 <AmiBlitz3.ab3@10579>    JSR _FreeMem(a6)
00026558 <AmiBlitz3.ab3@10580>    MOVEA.l _dosbase,A6
0002655A <AmiBlitz3.ab3@10581>    MOVE.l (a7)+,d5
0002655E <AmiBlitz3.ab3@10582> BRA JL_0_7632
00026564 <AmiBlitz3.ab3@10586>   MOVEA.l hunkoffsetbase,A2
0002656A <AmiBlitz3.ab3@10587>   MOVE.l noinits,D4
0002656E <AmiBlitz3.ab3@10590>   CMPA.w #$0,A2                                            ;write hunkoffsets
00026572 <AmiBlitz3.ab3@10591>   BEQ.w JL_0_7632
00026576 <AmiBlitz3.ab3@10592>   LEA $4(A2),A1
00026578 <AmiBlitz3.ab3@10593>   SUB.l D4,(A1)
0002657A <AmiBlitz3.ab3@10594>   MOVE.l D7,D1
0002657C <AmiBlitz3.ab3@10595>   MOVE.l A1,D2
0002657E <AmiBlitz3.ab3@10596>   MOVEQ.l #$04,D3
00026582 <AmiBlitz3.ab3@10597>   BSR.w mywrite
00026586 <AmiBlitz3.ab3@10598>   ADD.l D4,$4(A2)
00026588 <AmiBlitz3.ab3@10599>   MOVEA.l (A2),A2
0002658C <AmiBlitz3.ab3@10600> BRA.w JL_0_7610
00026592 <AmiBlitz3.ab3@10603>   CLR.l tstsize3
00026594 <AmiBlitz3.ab3@10604>   MOVE.l D7,D1
0002659A <AmiBlitz3.ab3@10605>   MOVE.l #tstsize3,D2
0002659C <AmiBlitz3.ab3@10606>   MOVEQ.l #$04,D3
000265A0 <AmiBlitz3.ab3@10607>    BSR.w mywrite
000265A8 <AmiBlitz3.ab3@10610>   BTST #$7,link_debuginfo
000265AC <AmiBlitz3.ab3@10611>    BEQ.w JL_0_7706
000265B2 <AmiBlitz3.ab3@10612>   MOVE.l #sysdebug,D2                                      ;debughunks
000265B4 <AmiBlitz3.ab3@10613>   MOVEQ.l #$04,D3
000265B6 <AmiBlitz3.ab3@10614>   MOVE.l D7,D1
000265BA <AmiBlitz3.ab3@10615>    BSR.w mywrite
000265C0 <AmiBlitz3.ab3@10616>   MOVEA.l labelbase,A2
000265C4 <AmiBlitz3.ab3@10619>   CMPA.w #$0,A2
000265C8 <AmiBlitz3.ab3@10620>    BEQ.w JL_0_76F8
000265CE <AmiBlitz3.ab3@10621>   BTST #$0,$7(A2)
000265D2 <AmiBlitz3.ab3@10622>    BEQ.w JL_0_7682
000265DA <AmiBlitz3.ab3@10623>   CMPI.l #$1,$4(A2)
000265DE <AmiBlitz3.ab3@10625>   BRA.w JL_0_76F2                                            ;only addr labels
000265E0 <AmiBlitz3.ab3@10627>   MOVEQ.l #$00,D4
000265E4 <AmiBlitz3.ab3@10628>   MOVE.b $12(A2),D4
000265E8 <AmiBlitz3.ab3@10629>   SUBI.w #$13,D4
000265EA <AmiBlitz3.ab3@10630>   ADDQ.w #2,D4
000265EE <AmiBlitz3.ab3@10631>   ANDI.w #$FFFC,D4
000265F0 <AmiBlitz3.ab3@10632>   MOVE.l D4,D5
000265F2 <AmiBlitz3.ab3@10633>   LSR.w #2,D5
000265F8 <AmiBlitz3.ab3@10634>   MOVE.l D5,temp1
000265FA <AmiBlitz3.ab3@10635>   LSL.w #2,D5
00026600 <AmiBlitz3.ab3@10636>   MOVE.l #temp1,a1
00026606 <AmiBlitz3.ab3@10638>   LEA debugstore,a0
00026608 <AmiBlitz3.ab3@10639>   MOVE.l (a1),(a0)+
0002660A <AmiBlitz3.ab3@10640>   MOVEQ.l #$04,D3
0002660E <AmiBlitz3.ab3@10643>   LEA $13(A2),A1
00026610 <AmiBlitz3.ab3@10644>   MOVE.l d4,d1
00026612 <AmiBlitz3.ab3@10645>   SUBQ.l #1,d1
00026614 <AmiBlitz3.ab3@10648>     MOVE.b (a1)+,d0
00026618 <AmiBlitz3.ab3@10649>     BEQ 'l21
0002661C <AmiBlitz3.ab3@10650>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00026620 <AmiBlitz3.ab3@10651>     BNE 'ok
00026624 <AmiBlitz3.ab3@10652>     MOVE.b #"_",d0
00026626 <AmiBlitz3.ab3@10653> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
0002662A <AmiBlitz3.ab3@10654>   DBF d1,'l10
0002662E <AmiBlitz3.ab3@10656> BRA 'l22
00026630 <AmiBlitz3.ab3@10659>       CLR.b (a0)+
00026634 <AmiBlitz3.ab3@10660>   DBF d1,'l21
00026636 <AmiBlitz3.ab3@10663>   ADD.l d4,d3
00026638 <AmiBlitz3.ab3@10668>   SUB.l D4,D5
0002663C <AmiBlitz3.ab3@10669>    BEQ.w JL_0_76CE
00026642 <AmiBlitz3.ab3@10670>   MOVE.l #zero,a1
00026644 <AmiBlitz3.ab3@10672>   MOVE.l (a1),(a0)+
00026646 <AmiBlitz3.ab3@10674>   ADD.l d5,d3
0002664A <AmiBlitz3.ab3@10679>   MOVE.l $8(A2),D2
00026650 <AmiBlitz3.ab3@10680>   SUB.l destbufferstart,D2
00026656 <AmiBlitz3.ab3@10681>   SUB.l noinits,D2
0002665C <AmiBlitz3.ab3@10682>   MOVE.l D2,temp1
00026662 <AmiBlitz3.ab3@10683>   MOVE.l #temp1,a1
00026664 <AmiBlitz3.ab3@10685>   MOVE.l (a1),(a0)+
0002666A <AmiBlitz3.ab3@10686>   ADD.l #4,d3
00026670 <AmiBlitz3.ab3@10687>   LEA debugstore,a0
00026672 <AmiBlitz3.ab3@10688>   MOVE.l a0,d2
00026674 <AmiBlitz3.ab3@10690>   MOVE.l D7,D1
00026678 <AmiBlitz3.ab3@10691>   BSR.w mywrite
0002667A <AmiBlitz3.ab3@10694>   MOVEA.l (A2),A2
0002667E <AmiBlitz3.ab3@10695> BRA.w JL_0_7664
00026684 <AmiBlitz3.ab3@10699>   MOVE.l #zero,D2
00026686 <AmiBlitz3.ab3@10700>   MOVEQ.l #$04,D3
00026688 <AmiBlitz3.ab3@10701>   MOVE.l D7,D1
0002668C <AmiBlitz3.ab3@10702>   BSR.w mywrite
0002668E <AmiBlitz3.ab3@10705>   MOVE.l D7,D1
00026694 <AmiBlitz3.ab3@10706>   MOVE.l #tstdone,D2                                      ;hunkend
00026696 <AmiBlitz3.ab3@10707>   MOVEQ.l #$04,D3
000266A0 <AmiBlitz3.ab3@10708>   CMPI.l #-1,bssstart
000266A4 <AmiBlitz3.ab3@10709>   BEQ 'l10
000266A6 <AmiBlitz3.ab3@10710>   MOVEQ #16,d3
000266AC <AmiBlitz3.ab3@10711>   MOVE.l #hunkend,d2
000266B6 <AmiBlitz3.ab3@10712>   CMPI.l #-1,chipstart
000266BA <AmiBlitz3.ab3@10713>   BEQ 'l10
000266BC <AmiBlitz3.ab3@10714>   MOVE.l d7,d1
000266BE <AmiBlitz3.ab3@10715>   MOVEQ #12,d3
000266C2 <AmiBlitz3.ab3@10716>   BSR.w mywrite
000266CC <AmiBlitz3.ab3@10719>   CMPI.l #-1,chipstart
000266D0 <AmiBlitz3.ab3@10720>   BEQ 'l11
000266D2 <AmiBlitz3.ab3@10721>   MOVEQ #12,d3
000266D8 <AmiBlitz3.ab3@10722>   MOVE.l #hunkend2,d2
000266DA <AmiBlitz3.ab3@10723>   MOVE.l d7,d1
000266DE <AmiBlitz3.ab3@10724>   BSR.w mywrite
000266E0 <AmiBlitz3.ab3@10725>   MOVE.l d7,d1
000266E6 <AmiBlitz3.ab3@10726>   MOVE.l chipstart,d2
000266EC <AmiBlitz3.ab3@10727>   MOVE.l chipsize,d3
000266F0 <AmiBlitz3.ab3@10728>   BSR.w mywrite
000266F2 <AmiBlitz3.ab3@10729>   MOVEQ #4,d3
000266F8 <AmiBlitz3.ab3@10730>   MOVE.l #hunkend,d2
000266FA <AmiBlitz3.ab3@10731>   MOVE.l d7,d1
000266FE <AmiBlitz3.ab3@10734>   BSR.w mywrite
00026700 <AmiBlitz3.ab3@10735>   MOVE.l D7,D1
00026706 <AmiBlitz3.ab3@10736>   MOVEA.l _dosbase,A6
0002670A <AmiBlitz3.ab3@10737>   JSR _Close(A6)
00026712 <AmiBlitz3.ab3@10742>   BTST #$7,create_iconfile
00026716 <AmiBlitz3.ab3@10743>    BEQ.w skip_createicon
0002671C <AmiBlitz3.ab3@10745>   MOVEA.l ptr_newexefilename,A0
0002671E <AmiBlitz3.ab3@10748>     TST.b (A0)+
00026722 <AmiBlitz3.ab3@10749>   BNE.w JL_0_772C
00026724 <AmiBlitz3.ab3@10750>   SUBQ.w #1,A0
00026726 <AmiBlitz3.ab3@10751>   MOVE.l A0,-(A7)
0002672C <AmiBlitz3.ab3@10752>   LEA str_infoextention2,A1
0002672E <AmiBlitz3.ab3@10755>     MOVE.b (A1)+,(A0)+
00026732 <AmiBlitz3.ab3@10756>   BNE.w JL_0_773A
00026738 <AmiBlitz3.ab3@10758>   MOVE.l ptr_newexefilename,D1
0002673A <AmiBlitz3.ab3@10759>   MOVEQ.l #-$02,D2
00026740 <AmiBlitz3.ab3@10760>   MOVEA.l _dosbase,A6
00026744 <AmiBlitz3.ab3@10761>   JSR _Lock(A6)
00026746 <AmiBlitz3.ab3@10762>   MOVE.l D0,D1
0002674A <AmiBlitz3.ab3@10763>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
0002674E <AmiBlitz3.ab3@10764>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00026752 <AmiBlitz3.ab3@10765> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00026758 <AmiBlitz3.ab3@10768>   MOVE.l ptr_newexefilename,D1
0002675E <AmiBlitz3.ab3@10769>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00026764 <AmiBlitz3.ab3@10770>   MOVEA.l _dosbase,A6
00026768 <AmiBlitz3.ab3@10771>    JSR _Open(A6)
0002676A <AmiBlitz3.ab3@10772>   MOVE.l D0,D7
0002676E <AmiBlitz3.ab3@10773>    BEQ.w JL_0_7788
00026774 <AmiBlitz3.ab3@10774>   MOVE.l #icongfx_data,D2                                  ; icon graphics
0002677A <AmiBlitz3.ab3@10775>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
0002677C <AmiBlitz3.ab3@10776>   MOVE.l D7,D1
00026782 <AmiBlitz3.ab3@10777>   MOVEA.l _dosbase,A6
00026786 <AmiBlitz3.ab3@10778>   JSR _Write(A6)
00026788 <AmiBlitz3.ab3@10779>   MOVE.l D7,D1
0002678C <AmiBlitz3.ab3@10780>   JSR _Close(A6)
0002678E <AmiBlitz3.ab3@10783>   MOVEA.l (A7)+,A0
00026790 <AmiBlitz3.ab3@10784>   CLR.b (A0)
00026796 <AmiBlitz3.ab3@10789>   TST.b exdebug
0002679A <AmiBlitz3.ab3@10790>    BEQ JL_0_757Cb
000267A0 <AmiBlitz3.ab3@10791>   MOVE.w dontwrite,D1
000267A4 <AmiBlitz3.ab3@10792>   BNE.w JL_0_757Cb
000267AA <AmiBlitz3.ab3@10793>   MOVE.l chipsize,d5
000267B0 <AmiBlitz3.ab3@10794>   MOVE.l bsssize,d3
000267B6 <AmiBlitz3.ab3@10795>   MOVE.l chipstart,d7
000267BC <AmiBlitz3.ab3@10796>   MOVE.l bssstart,d6
000267C2 <AmiBlitz3.ab3@10797>   MOVEA.l hunkoffsetbase,A2
000267C8 <AmiBlitz3.ab3@10798>   MOVEA.l destbufferstart,A1
000267CA <AmiBlitz3.ab3@10799>   MOVE.l A1,D2
000267D0 <AmiBlitz3.ab3@10800>   ADD.l noinits,D2
000267D6 <AmiBlitz3.ab3@10801>   CLR.l hunkoffsetnum
000267DA <AmiBlitz3.ab3@10804>   CMPA.w #$0,A2
000267DE <AmiBlitz3.ab3@10805>    BEQ.w JL_0_757Cb
000267E2 <AmiBlitz3.ab3@10806>   MOVE.l $4(A2),D0
000267E6 <AmiBlitz3.ab3@10807>    LEA $0(a1,d0.l),a0
000267E8 <AmiBlitz3.ab3@10808>    MOVE.l (a0),d1
000267EA <AmiBlitz3.ab3@10809>   TST.l d1
000267EE <AmiBlitz3.ab3@10810>    BMI.w 'lm1
000267F6 <AmiBlitz3.ab3@10811>   MOVE.b #0,newhunk
00026800 <AmiBlitz3.ab3@10812>   CMP.l #-1,chipstart
00026804 <AmiBlitz3.ab3@10813>   BEQ 'l10
0002680A <AmiBlitz3.ab3@10814>   CMP.l chipstart,d1
0002680E <AmiBlitz3.ab3@10815>   BLT 'l10
00026816 <AmiBlitz3.ab3@10816>   MOVE.b #1,newhunk
0002681C <AmiBlitz3.ab3@10817>   CMP.l chipend,d1
00026820 <AmiBlitz3.ab3@10818>   BGE 'l110
00026822 <AmiBlitz3.ab3@10819>   ADD.l d7,(a0)
0002682A <AmiBlitz3.ab3@10820>   ADD.l #$80000000,4(a2)
0002682E <AmiBlitz3.ab3@10821> BRA JL_0_7576b
00026832 <AmiBlitz3.ab3@10824>   ADD.l d5,0(a0)
0002683C <AmiBlitz3.ab3@10827>   CMP.l #-1,bssstart
00026840 <AmiBlitz3.ab3@10828>     BEQ 'l11
00026846 <AmiBlitz3.ab3@10829>   CMP.l bssstart,d1
0002684A <AmiBlitz3.ab3@10830>   BLT 'l11
00026850 <AmiBlitz3.ab3@10831>   CMP.l bssend,d1
00026854 <AmiBlitz3.ab3@10832>   BGE 'l111
0002685A <AmiBlitz3.ab3@10833>   TST.b newhunk
0002685E <AmiBlitz3.ab3@10834>   BEQ 'ln1
00026860 <AmiBlitz3.ab3@10835>   ADD.l d5,(a0)
00026862 <AmiBlitz3.ab3@10838>   ADD.l d6,(a0)
0002686A <AmiBlitz3.ab3@10839>   ADD.l #$40000000,4(a2)
0002686E <AmiBlitz3.ab3@10840> BRA JL_0_7576b
00026872 <AmiBlitz3.ab3@10843>   ADD.l d3,0(a0)
00026874 <AmiBlitz3.ab3@10846>   ADD.l D2,(A0)                                            ;only normal code offsets restore
0002687A <AmiBlitz3.ab3@10849>   ADDQ.l #1,hunkoffsetnum
0002687C <AmiBlitz3.ab3@10852>   MOVEA.l (A2),A2
00026880 <AmiBlitz3.ab3@10853> BRA.w JL_0_755Eb
00026886 <AmiBlitz3.ab3@10856>   JSR call_setpointernormal
0002688A <AmiBlitz3.ab3@10857>   MOVEM.l (a7)+,d2-d7/a2-a6
0002688C <AmiBlitz3.ab3@10859> RTS
0002688E <AmiBlitz3.ab3@10863>   MOVE.l D2,-(A7)
00026894 <AmiBlitz3.ab3@10864>   MOVE.l destpointer,D2
0002689A <AmiBlitz3.ab3@10865>   SUB.l destbufferstart,D2
0002689E <AmiBlitz3.ab3@10866>   BSR.w addhunkoffset
000268A0 <AmiBlitz3.ab3@10867>   MOVE.l (A7)+,D2
000268A2 <AmiBlitz3.ab3@10868> RTS
000268A6 <AmiBlitz3.ab3@10872>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000268AC <AmiBlitz3.ab3@10873>   TST.b nohunkoffset
000268B0 <AmiBlitz3.ab3@10874>   BNE 'l10
000268B2 <AmiBlitz3.ab3@10875>   MOVEQ.l #$8,D0
000268B4 <AmiBlitz3.ab3@10876>   MOVEQ.l #$01,D1
000268BA <AmiBlitz3.ab3@10877>   MOVEA.l _execbase,A6
000268C0 <AmiBlitz3.ab3@10878>   MOVE.l mempool2,a0
000268C4 <AmiBlitz3.ab3@10879>   JSR _AllocPooled(a6)
000268CA <AmiBlitz3.ab3@10881>   ADDQ.l #1,hunkoffsetcounter
000268CC <AmiBlitz3.ab3@10882>   MOVEA.l D0,A0
000268D2 <AmiBlitz3.ab3@10883>   MOVE.l hunkoffsetbase,(A0)
000268D8 <AmiBlitz3.ab3@10884>   MOVE.l A0,hunkoffsetbase
000268DC <AmiBlitz3.ab3@10885>   MOVE.l D2,$4(A0)
000268E0 <AmiBlitz3.ab3@10888>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000268E2 <AmiBlitz3.ab3@10889> RTS
000268E8 <AmiBlitz3.ab3@10893>   CLR.l hunkoffsetbase
000268EE <AmiBlitz3.ab3@10894>   MOVEA.l _execbase,A6
000268F4 <AmiBlitz3.ab3@10895>   MOVEA.l hunkoffsetbase,A2
000268F8 <AmiBlitz3.ab3@10898>     CMPA.w #$0,A2
000268FC <AmiBlitz3.ab3@10899>      BEQ.w JL_0_7988
000268FE <AmiBlitz3.ab3@10900>     MOVEA.l A2,A1
00026900 <AmiBlitz3.ab3@10901>     MOVEQ.l #$08,D0
00026902 <AmiBlitz3.ab3@10902>     MOVEA.l (A2),A2
00026908 <AmiBlitz3.ab3@10903>     MOVE.l mempool2,a0
0002690C <AmiBlitz3.ab3@10904>     JSR _FreePooled(A6)
00026910 <AmiBlitz3.ab3@10905> BRA.w JL_0_7972
00026916 <AmiBlitz3.ab3@10908>   CLR.l hunkoffsetcounter
00026918 <AmiBlitz3.ab3@10909> RTS
00026930 <AmiBlitz3.ab3@10912> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00026934 <AmiBlitz3.ab3@10913> cmakea5:    Ds.l 1
00026936 <AmiBlitz3.ab3@10914> cmake:      Ds.w 1
000269B6 <AmiBlitz3.ab3@10915> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000269BC <AmiBlitz3.ab3@10919>   MOVE.l A5,lastsourcepos
000269C6 <AmiBlitz3.ab3@10920>   MOVE.w instringon,oldqflag
000269C8 <AmiBlitz3.ab3@10924>   MOVEQ.l #$00,D0
000269CA <AmiBlitz3.ab3@10925>   MOVE.b (A5)+,D0
000269CE <AmiBlitz3.ab3@10926>    BEQ getcharb__donea
000269D2 <AmiBlitz3.ab3@10927>   BPL getcharb__stuffa
000269D4 <AmiBlitz3.ab3@10928>   LSL.l #8,D0
000269D6 <AmiBlitz3.ab3@10929>   MOVE.b (A5)+,D0
000269D8 <AmiBlitz3.ab3@10930>   MOVE.l a1,-(a7)
000269DE <AmiBlitz3.ab3@10931>   LEA replacedat,a1
000269E2 <AmiBlitz3.ab3@10932>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
000269E6 <AmiBlitz3.ab3@10933>   BEQ getchar__l10
000269EA <AmiBlitz3.ab3@10934>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
000269EC <AmiBlitz3.ab3@10938>   MOVE.l (a7)+,a1
000269F0 <AmiBlitz3.ab3@10939> BRA getchar__weiter
000269F4 <AmiBlitz3.ab3@10942>   CMP.w #$22,D0
000269F8 <AmiBlitz3.ab3@10943>    BEQ.b swapquotea
000269FC <AmiBlitz3.ab3@10944>   CMP.w #$3B,D0
00026A00 <AmiBlitz3.ab3@10945>    BNE.b getcharb__donea
00026A06 <AmiBlitz3.ab3@10946>   TST.w instringon
00026A0A <AmiBlitz3.ab3@10947>    BNE.b getcharb__donea
00026A0C <AmiBlitz3.ab3@10950>   MOVE.b (A5)+,D0
00026A10 <AmiBlitz3.ab3@10951>              BEQ getchar__l1
00026A14 <AmiBlitz3.ab3@10952>              CMP.b #":",d0
00026A18 <AmiBlitz3.ab3@10953>              BNE getcharb__loopa                                ;:@
00026A1C <AmiBlitz3.ab3@10954>              CMP.b #"@",(a5)
00026A20 <AmiBlitz3.ab3@10955>              BNE getcharb__loopa
00026A22 <AmiBlitz3.ab3@10956>              ADDQ #1,a5
00026A28 <AmiBlitz3.ab3@10959>   MOVE.w D0,lastchar
00026A2C <AmiBlitz3.ab3@10962> BRA.s getchar__weiter
00026A32 <AmiBlitz3.ab3@10965>   NOT.w instringon
00026A38 <AmiBlitz3.ab3@10968>    MOVE.w D0,lastchar
00026A3C <AmiBlitz3.ab3@10969>    BEQ.w getchar__done
00026A40 <AmiBlitz3.ab3@10970>    BPL.w getchar__done2
00026A44 <AmiBlitz3.ab3@10971>   CMP.w #-$7FE4,D0                                         ;cnif
00026A48 <AmiBlitz3.ab3@10972>    BEQ.w getchar__cnif
00026A4C <AmiBlitz3.ab3@10973>   CMP.w #-$7FE3,D0                                         ;csif
00026A50 <AmiBlitz3.ab3@10974>    BEQ.w getchar__csif
00026A54 <AmiBlitz3.ab3@10975>   CMP.w #-$7FE2,D0                                         ;celse
00026A58 <AmiBlitz3.ab3@10976>    BEQ.w getchar__celse
00026A5C <AmiBlitz3.ab3@10977>   CMP.w #-$7FE1,D0                                         ;cend
00026A60 <AmiBlitz3.ab3@10978>    BEQ.w getchar__cend
00026A66 <AmiBlitz3.ab3@10981>   TST.w skipcode
00026A6A <AmiBlitz3.ab3@10982>    BEQ.w getchar
00026A6E <AmiBlitz3.ab3@10983>   CMP.w #$7E,D0
00026A72 <AmiBlitz3.ab3@10984>    BEQ.w getchar__cmake                                         ;tilde
00026A76 <AmiBlitz3.ab3@10985>   CMP.w #$2,D0
00026A7A <AmiBlitz3.ab3@10986>    BNE.w getchar__notunpath
00026A80 <AmiBlitz3.ab3@10987>   MOVEA.l usedfrom,A5
00026A86 <AmiBlitz3.ab3@10988>   CLR.l usedfrom
00026A8A <AmiBlitz3.ab3@10989> BRA.w getchar
00026A8E <AmiBlitz3.ab3@10992>   CMP.w #$1,D0
00026A92 <AmiBlitz3.ab3@10993>    BNE.w getchar__done
00026A96 <AmiBlitz3.ab3@10997>   MOVEA.l cmakea5(PC),A5
00026A9A <AmiBlitz3.ab3@10998> BRA.w getchar
00026AA0 <AmiBlitz3.ab3@11001>   TST.w cmake
00026AA4 <AmiBlitz3.ab3@11002>    BNE.w getchar__done
00026AA8 <AmiBlitz3.ab3@11004>   MOVEM.l D0-D7/A0-A6,-(A7)
00026AAE <AmiBlitz3.ab3@11005>   LEA cmake,a0                                         ;reass
00026AB0 <AmiBlitz3.ab3@11006>   NOT.w (a0)
00026AB4 <AmiBlitz3.ab3@11007>   LEA cmakebak(PC),A0
00026ABA <AmiBlitz3.ab3@11008>   LEA ptr_parameterstore,A1
00026ABC <AmiBlitz3.ab3@11009>   MOVEQ.l #$1F,D0
00026ABE <AmiBlitz3.ab3@11012>     MOVE.l (A1)+,(A0)+
00026AC2 <AmiBlitz3.ab3@11013>   DBF D0,getchar__cmloop
00026AC8 <AmiBlitz3.ab3@11016>    JSR AJL_0_BF6E
00026ACC <AmiBlitz3.ab3@11017>   CMP.w #$7E,D0
00026AD0 <AmiBlitz3.ab3@11018>    BNE.w syntaxerr
00026AD6 <AmiBlitz3.ab3@11019>   MOVE.l A5,cmakea5                                      ;tilde
00026ADA <AmiBlitz3.ab3@11020>   LEA cmakebuff(PC),A0
00026ADC <AmiBlitz3.ab3@11021>   MOVE.l D3,D2
00026AE0 <AmiBlitz3.ab3@11022>   BSR.w makelong
00026AE2 <AmiBlitz3.ab3@11023>   ADDQ.b #1,(A0)
00026AE8 <AmiBlitz3.ab3@11024>   LEA cmake,a0
00026AEA <AmiBlitz3.ab3@11025>   NOT.w (a0)                                               ;reass
00026AEE <AmiBlitz3.ab3@11026>   LEA cmakebak(PC),A0
00026AF4 <AmiBlitz3.ab3@11027>   LEA ptr_parameterstore,A1
00026AF6 <AmiBlitz3.ab3@11028>   MOVEQ.l #$1F,D0
00026AF8 <AmiBlitz3.ab3@11031>     MOVE.l (A0)+,(A1)+
00026AFC <AmiBlitz3.ab3@11032>   DBF D0,getchar__cmloop2
00026B00 <AmiBlitz3.ab3@11034>   MOVEM.l (A7)+,D0-D7/A0-A6
00026B04 <AmiBlitz3.ab3@11035>   LEA cmakebuff(PC),A5
00026B08 <AmiBlitz3.ab3@11036> BRA.w getchar
00026B0A <AmiBlitz3.ab3@11039> RTS
00026B14 <AmiBlitz3.ab3@11043>   MOVE.l linenumat,ciflineat                               ;csif
00026B1A <AmiBlitz3.ab3@11044>   TST.w skipcode
00026B1E <AmiBlitz3.ab3@11045>    BEQ.w getchar__incnest
00026B22 <AmiBlitz3.ab3@11046>    BSR.w get1bytemain
00026B24 <AmiBlitz3.ab3@11047>    MOVE.l a1,-(a7)
00026B2A <AmiBlitz3.ab3@11048>    JSR JL_0_C492
00026B2C <AmiBlitz3.ab3@11049>    MOVE.l (a7)+,a1
00026B30 <AmiBlitz3.ab3@11050> BRA.w getchar
00026B3A <AmiBlitz3.ab3@11053>   MOVE.l linenumat,ciflineat                               ;cnif
00026B40 <AmiBlitz3.ab3@11054>   TST.w skipcode
00026B44 <AmiBlitz3.ab3@11055>    BEQ.w getchar__incnest
00026B48 <AmiBlitz3.ab3@11056>    BSR.w get1bytemain
00026B4C <AmiBlitz3.ab3@11057>    CMP.b #"@",d0
00026B50 <AmiBlitz3.ab3@11058>    BNE getchar__cnif_ok2
00026B54 <AmiBlitz3.ab3@11059>    BSR.w get1bytemain
00026B5C <AmiBlitz3.ab3@11060>    MOVE.b #1,incnif
00026B62 <AmiBlitz3.ab3@11061>    JSR findconstant2
00026B66 <AmiBlitz3.ab3@11062>    BEQ getchar__cnif_ok2
00026B6C <AmiBlitz3.ab3@11065>    MOVE.w fast,-(a7)
00026B72 <AmiBlitz3.ab3@11066>    CLR.b fast
00026B74 <AmiBlitz3.ab3@11067>    MOVE.l a1,-(a7)
00026B7A <AmiBlitz3.ab3@11068>    JSR JL_0_C47E
00026B80 <AmiBlitz3.ab3@11069>    CLR.b incnif
00026B82 <AmiBlitz3.ab3@11070>    MOVE.l (a7)+,a1
00026B88 <AmiBlitz3.ab3@11071>    MOVE.w (a7)+,fast
00026B8C <AmiBlitz3.ab3@11072> BRA.w getchar
00026B92 <AmiBlitz3.ab3@11075>   ADDQ.w #1,connest
00026B96 <AmiBlitz3.ab3@11076> BRA.w getchar
00026B9C <AmiBlitz3.ab3@11079>   MOVE.w connest,D0                                      ;celse
00026BA0 <AmiBlitz3.ab3@11080>    BNE.w getchar
00026BA6 <AmiBlitz3.ab3@11081>   NOT.w skipcode
00026BAA <AmiBlitz3.ab3@11082> BRA.w getchar
00026BB0 <AmiBlitz3.ab3@11085>   SUBQ.w #1,connest                                      ;cend
00026BB4 <AmiBlitz3.ab3@11086>    BPL.w getchar
00026BBA <AmiBlitz3.ab3@11087>   ADDQ.w #1,connest
00026BC0 <AmiBlitz3.ab3@11088>   MOVEA.l concomsp,A0
00026BC6 <AmiBlitz3.ab3@11089>   CMPA.l #concomstack,A0
00026BCA <AmiBlitz3.ab3@11090>    BEQ.w nociferr
00026BCC <AmiBlitz3.ab3@11091>   SUBQ.w #2,A0
00026BD2 <AmiBlitz3.ab3@11092>   MOVE.l A0,concomsp
00026BD8 <AmiBlitz3.ab3@11093>   MOVE.w (A0),skipcode
00026BDC <AmiBlitz3.ab3@11094> BRA.w getchar
00026BE0 <AmiBlitz3.ab3@11097> ciflineat:   Ds.l 1
00026BE2 <AmiBlitz3.ab3@11105>   MOVEQ.l #$00,D0
00026BE4 <AmiBlitz3.ab3@11106>   MOVE.b (A5)+,D0
00026BE8 <AmiBlitz3.ab3@11107>    BEQ.b getcharb__done
00026BEC <AmiBlitz3.ab3@11108>    BPL.b getcharb__stuff
00026BEE <AmiBlitz3.ab3@11109>   LSL.w #8,D0
00026BF0 <AmiBlitz3.ab3@11110>   MOVE.b (A5)+,D0
00026BF2 <AmiBlitz3.ab3@11111> RTS
00026BF6 <AmiBlitz3.ab3@11114>   CMP.w #$22,D0
00026BFA <AmiBlitz3.ab3@11115>    BEQ.b swapquote
00026BFE <AmiBlitz3.ab3@11116>   CMP.w #$3B,D0
00026C02 <AmiBlitz3.ab3@11117>    BNE.b getcharb__done
00026C08 <AmiBlitz3.ab3@11118>   TST.w instringon
00026C0C <AmiBlitz3.ab3@11119>    BNE.b getcharb__done
00026C0E <AmiBlitz3.ab3@11122>   MOVE.b (A5)+,D0
00026C12 <AmiBlitz3.ab3@11123>             BEQ getcharb__loop_l1
00026C16 <AmiBlitz3.ab3@11124>             CMP.b #":",d0
00026C1A <AmiBlitz3.ab3@11125>             BNE getcharb__loop
00026C1E <AmiBlitz3.ab3@11126>             CMP.b #"@",(a5)
00026C22 <AmiBlitz3.ab3@11127>             BNE getcharb__loop
00026C28 <AmiBlitz3.ab3@11130>   MOVE.w D0,lastchar
00026C2A <AmiBlitz3.ab3@11133> RTS
00026C30 <AmiBlitz3.ab3@11136>   NOT.w instringon
00026C32 <AmiBlitz3.ab3@11137> RTS
00026C36 <AmiBlitz3.ab3@11141>   BSR.w getchar
00026C3C <AmiBlitz3.ab3@11142>   TST.w instringon
00026C40 <AmiBlitz3.ab3@11143>    BNE.w get1byte__skip
00026C44 <AmiBlitz3.ab3@11144>   CMP.w #$20,D0
00026C48 <AmiBlitz3.ab3@11145>    BEQ.w get1byte_
00026C4A <AmiBlitz3.ab3@11148> RTS
00026C64 <AmiBlitz3.ab3@11151> gs:        Ds.w 13                                         ;ds.b 26  org source
00026C68 <AmiBlitz3.ab3@11152>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00026C6A <AmiBlitz3.ab3@11153>            Dc.b $C4,$DC
00026C6E <AmiBlitz3.ab3@11159>   BSR.w getchar
00026C74 <AmiBlitz3.ab3@11160>   TST.w instringon
00026C78 <AmiBlitz3.ab3@11161>    BNE.w gchar2
00026C7C <AmiBlitz3.ab3@11162>   CMP.w #$20,D0
00026C80 <AmiBlitz3.ab3@11163>    BEQ.w get1bytemain
00026C82 <AmiBlitz3.ab3@11165>   TST.w D0
00026C86 <AmiBlitz3.ab3@11168>   BEQ.b get1bytemain__zero
00026C8C <AmiBlitz3.ab3@11169>   TST.w instringon
00026C90 <AmiBlitz3.ab3@11170>    BEQ.b get1bytemain__noqoute
00026C94 <AmiBlitz3.ab3@11171>   CMP.b #$20,D0
00026C98 <AmiBlitz3.ab3@11172>    BCC.b get1bytemain__skip
00026C9C <AmiBlitz3.ab3@11173>   MOVE.b gs(PC,D0.W),D0
00026C9E <AmiBlitz3.ab3@11174> RTS
00026CA2 <AmiBlitz3.ab3@11177>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00026CA6 <AmiBlitz3.ab3@11178>    BEQ.b get1bytemain__zero
00026CAA <AmiBlitz3.ab3@11179>   CMP.w #$3A,D0
00026CAE <AmiBlitz3.ab3@11180>    BEQ.b get1bytemain__zero
00026CB0 <AmiBlitz3.ab3@11183>   TST.w D0
00026CB2 <AmiBlitz3.ab3@11186> RTS
00026CB8 <AmiBlitz3.ab3@11190>   MOVE.w lastchar,D0
00026CBC <AmiBlitz3.ab3@11191> BRA.w gchar2
00026CC6 <AmiBlitz3.ab3@11195>   MOVE.w oldqflag,instringon
00026CCC <AmiBlitz3.ab3@11196>   MOVEA.l lastsourcepos,A5
00026CCE <AmiBlitz3.ab3@11197> RTS
00026CD4 <AmiBlitz3.ab3@11201>   MOVE.w D0,locchar
00026CDA <AmiBlitz3.ab3@11202>   MOVE.l A5,locloc
00026CDC <AmiBlitz3.ab3@11203> RTS
00026CE2 <AmiBlitz3.ab3@11207>   MOVEA.l locloc,A5
00026CE8 <AmiBlitz3.ab3@11208>   MOVE.w locchar,D0
00026CEE <AmiBlitz3.ab3@11209>   MOVE.w D0,lastchar
00026CF0 <AmiBlitz3.ab3@11210> RTS
00026CF0 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00026D38 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00026D8A <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00026DC8 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00026E06 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00026E30 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00026E60 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00026EAA <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00026F30 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00026F92 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00026FDA <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
0002702C <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
0002708E <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
000270DC <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00027112 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00027140 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
0002715A <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00027178 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
000271F6 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00027220 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00027246 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00027266 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00027284 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
000272A4 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
000272CC <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
000272F6 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
000272F8 <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
00027314 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
0002733A <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00027352 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
000273B0 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
000273D2 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
000273F8 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00027420 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
00027440 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00027464 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
000274AA <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
000274CE <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
000274F2 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
00027512 <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
00027536 <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
00027558 <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00027584 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
000275AA <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
000275B4 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
000275DA <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
0002762C <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00027696 <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
000276F4 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00027762 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
0002779E <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
000277BC <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
000277E2 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00027812 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
00027836 <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
00027864 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
00027888 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
0002789E <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
000278B4 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
000278BA <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
000278C2 <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
000278C4 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
000278C8 <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
000278D0 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
000278D2 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
0002790C <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
00027938 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
00027968 <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
000279A0 <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
000279FA <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
000279FC <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00027A00 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00027A04 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00027A08 <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00027A0C <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00027A10 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00027A14 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
00027A18 <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00027A1C <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00027A20 <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
00027A24 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
00027A62 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
00027A94 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00027AB2 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00027ADC <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00027AF8 <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00027B12 <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
00027B30 <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
00027B54 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
00027B56 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00027BA8 <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00027BD0 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00027BF8 <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00027C14 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00027C34 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00027C4C <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00027C90 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00027CD8 <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00027D02 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00027D2C <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
00027D46 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00027D70 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00027DC4 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00027E10 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00027E48 <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
00027E4E <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
00027E5C <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
00027E8C <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00027EC0 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00027F26 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00027F44 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00027FBE <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00027FE6 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00027FFC <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00028010 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00028012 <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
00028013 <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
00028014 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00028034 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
0002803A <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
0002804C <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00028080 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00028098 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
000280B4 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
000280CC <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
000280EC <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
0002810C <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00028132 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00028148 <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00028164 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
0002818E <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
000281A6 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
000281C2 <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
000281E2 <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
000281FA <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
000281FE <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00028204 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
0002820A <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
0002821F <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00028225 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
00028226 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
0002822A <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00028230 <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
00028236 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00028249 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
0002824F <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00028250 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
0002826E <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00028286 <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
000282A2 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
000282CC <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
000282E6 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00028306 <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
00028324 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
00028352 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
0002835C <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
0002838E <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
000283AC <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
000283CA <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
000283EA <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
00028410 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
00028436 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
0002845E <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
0002847C <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
0002849C <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
000284B6 <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
000284D8 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
000284F6 <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
00028518 <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
0002853C <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
00028542 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
0002855E <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
0002857A <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00028598 <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
000285B6 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
00028604 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
00028622 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
00028640 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
0002865A <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
000286A6 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
000286CC <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
000286EC <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
0002870E <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
0002872A <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
00028750 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
0002876C <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002878A <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
000287B2 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
000287CE <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
000287DE <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
00028800 <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
00028804 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
00028806 <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
00028820 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
00028844 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
00028864 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
00028896 <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
000288F4 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002892C <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002896A <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
000289A0 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
000289D2 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
000289F6 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
00028A1A <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
00028A64 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
00028A8C <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
00028AD6 <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
00028B16 <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
00028B16 <AmiBlitz3.ab3@11214> XINCLUDE "internal_errormsg.ab3"
00028B18 <AmiBlitz3.ab3@11218> ezerr:   Ds.w 1                                            ;for simple errors
00028B1E <AmiBlitz3.ab3@11224>    MOVE.l myline,d0
00028B22 <AmiBlitz3.ab3@11225>   BNE handle_compileerror__l2
00028B28 <AmiBlitz3.ab3@11227>     MOVE.l a5,lastsourcepos
00028B2A <AmiBlitz3.ab3@11229>     SUBA.l a5,a5
00028B30 <AmiBlitz3.ab3@11231>   TST.l usedfrom
00028B34 <AmiBlitz3.ab3@11232>   BEQ handle_compileerror__org
00028B3A <AmiBlitz3.ab3@11233>     MOVEA.l usedfrom,a5
00028B40 <AmiBlitz3.ab3@11236>   TST.w dirmode
00028B44 <AmiBlitz3.ab3@11237>   BNE.b handle_compileerror__quiet
00028B4A <AmiBlitz3.ab3@11238>     JSR call_setpointernormal
00028B4E <AmiBlitz3.ab3@11239>     MOVE.w ezerr(PC),D0
00028B52 <AmiBlitz3.ab3@11240>     BNE.w handle_compileerror__skip
00028B58 <AmiBlitz3.ab3@11241>       MOVE.w cfetchmode,D0
00028B5C <AmiBlitz3.ab3@11242>       BEQ.w handle_compileerror__skip2
00028B66 <AmiBlitz3.ab3@11243>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00028B6C <AmiBlitz3.ab3@11246>   MOVE.w constmode,D0
00028B70 <AmiBlitz3.ab3@11247>   BEQ.b handle_compileerror__skip3
00028B74 <AmiBlitz3.ab3@11248>     BSR.w asmerr2
00028B7A <AmiBlitz3.ab3@11251>   MOVE.l firstlocal,D1
00028B80 <AmiBlitz3.ab3@11252>   OR.l firstglob,D1
00028B84 <AmiBlitz3.ab3@11253>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00028B8A <AmiBlitz3.ab3@11254>     JSR JL_0_DB5C
00028B92 <AmiBlitz3.ab3@11257>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00028B9C <AmiBlitz3.ab3@11258>   CMP.l #"NORE",reqmode                                    ;for used functions
00028BA0 <AmiBlitz3.ab3@11259>   BEQ handle_compileerror__notproc_l1
00028BAA <AmiBlitz3.ab3@11260>     MOVE.l linenumat,compilelinecounter
00028BB0 <AmiBlitz3.ab3@11263>   JSR close_compilewin
00028BB2 <AmiBlitz3.ab3@11266>   MOVEA.l (A7)+,A0
00028BBC <AmiBlitz3.ab3@11267>   CMP.l #maxerrorcount,errorcounter
00028BC0 <AmiBlitz3.ab3@11268>   BLT 'lesserror
00028BC6 <AmiBlitz3.ab3@11269>   LEA errorlimit_text,a0
00028BCC <AmiBlitz3.ab3@11272>   ADDQ.l #1,errorcounter
00028BD2 <AmiBlitz3.ab3@11273>   JSR errorstringparse
00028BDC <AmiBlitz3.ab3@11274>   CMP.l #"NORE",reqmode                                    ;for used functions
00028BE0 <AmiBlitz3.ab3@11275>   BEQ handle_compileerror__skip_Lxx2
00028BE6 <AmiBlitz3.ab3@11276>   TST.l CLIMode
00028BEA <AmiBlitz3.ab3@11277>   BNE 'climode_output
00028BF0 <AmiBlitz3.ab3@11280>     JSR save_errorfile
00028BF4 <AmiBlitz3.ab3@11281>     BRA 'end_output
00028BFA <AmiBlitz3.ab3@11284>     JSR stdout_error
00028C04 <AmiBlitz3.ab3@11286>      CMP.l #maxerrorcount,errorcounter
00028C08 <AmiBlitz3.ab3@11287>      BGT 'end_output
00028C0E <AmiBlitz3.ab3@11288>     MOVE.l lastsourcepos,a5
00028C10 <AmiBlitz3.ab3@11290>  'loop TST.b (a5)
00028C14 <AmiBlitz3.ab3@11291>       BEQ 'ok2
00028C16 <AmiBlitz3.ab3@11292>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00028C1A <AmiBlitz3.ab3@11293>     BEQ 'ok
00028C1E <AmiBlitz3.ab3@11294>     CMP.b #":",d0
00028C22 <AmiBlitz3.ab3@11295>     BEQ 'ok
00028C26 <AmiBlitz3.ab3@11296>     BRA 'loop
00028C28 <AmiBlitz3.ab3@11298>  'ok SUBQ.l #1,a5
00028C30 <AmiBlitz3.ab3@11300>  'ok2 MOVE.w #0,lastchar
00028C38 <AmiBlitz3.ab3@11301>     MOVE.b #1,iserror
00028C3E <AmiBlitz3.ab3@11302>     MOVE.l stackaddr,a7
00028C40 <AmiBlitz3.ab3@11303>     RTS
00028C42 <AmiBlitz3.ab3@11309>   MOVE.l A0,-(a7)
00028C80 <AmiBlitz3.ab3@11310>   !ComData_GetL{comFunc_ErrorRequest,A1}
00028C82 <AmiBlitz3.ab3@11311>   MOVE.l (a7)+,A0
00028C86 <AmiBlitz3.ab3@11313>   MOVEM.l d6/D7/A6,-(A7)
00028C8C <AmiBlitz3.ab3@11314>   MOVE.l includeline,d7
00028C92 <AmiBlitz3.ab3@11315>   MOVE.l #"INLN",a6
00028C9C <AmiBlitz3.ab3@11316>   MOVE.l errstack,tempa7
00028C9E <AmiBlitz3.ab3@11317>   JSR (A1)                                                  ;open ped errorrequest
00028CA2 <AmiBlitz3.ab3@11319>   MOVEM.l (A7)+,D7/d6/A6
00028CA8 <AmiBlitz3.ab3@11322>   MOVE.l tempa7,a7
00028CAE <AmiBlitz3.ab3@11323>   MOVEA.l errcont,A0
00028CB0 <AmiBlitz3.ab3@11325> RTS
00028CB6 <AmiBlitz3.ab3@11328>   MOVEA.l errstack,A7
00028CBC <AmiBlitz3.ab3@11329>   MOVEA.l errcont,A0
00028CBE <AmiBlitz3.ab3@11331> RTS
00028CC0 <AmiBlitz3.ab3@11334>   MOVE.l (A7),D0
00028CC6 <AmiBlitz3.ab3@11335>   MOVEA.l errstack,A7
00028CCC <AmiBlitz3.ab3@11336>   MOVEA.l errcont,A0
00028CCE <AmiBlitz3.ab3@11337> JMP (A0)
00028CD2 <AmiBlitz3.ab3@11343>   CMP.w #$7A,D0                                            ;'z'
00028CD6 <AmiBlitz3.ab3@11344>    BHI.w tstalpha__no
00028CDA <AmiBlitz3.ab3@11345>   CMP.w #$41,D0                                            ;'A'
00028CDE <AmiBlitz3.ab3@11346>    BCS.w tstalpha__no
00028CE2 <AmiBlitz3.ab3@11347>   CMP.w #$61,D0                                            ;'a'
00028CE6 <AmiBlitz3.ab3@11348>    BCC.w tstalpha__yes
00028CEA <AmiBlitz3.ab3@11349>   CMP.w #$5A,D0                                            ;'Z'
00028CEE <AmiBlitz3.ab3@11350>    BHI.w tstalpha__no
00028CF0 <AmiBlitz3.ab3@11353>   CMP.w D0,D0
00028CF2 <AmiBlitz3.ab3@11356> RTS
00028CF6 <AmiBlitz3.ab3@11364>   CMP.w #$30,D0                                            ;'0'
00028CFA <AmiBlitz3.ab3@11365>    BCS.w tstnum__skip
00028CFE <AmiBlitz3.ab3@11366>   CMP.w #$39,D0                                            ;'9'
00028D02 <AmiBlitz3.ab3@11367>    BHI.w tstnum__skip                                     
00028D04 <AmiBlitz3.ab3@11368>   CMP.w D0,D0
00028D06 <AmiBlitz3.ab3@11371> RTS
00028D28 <AmiBlitz3.ab3@11377>   !compare1                                                ;bsr.w tstalpha
00028D2C <AmiBlitz3.ab3@11378>    BEQ.w tstlab__skip
00028D3E <AmiBlitz3.ab3@11379>   !compare2                                                ;bsr.w tstnum2
00028D42 <AmiBlitz3.ab3@11380>    BEQ.w tstlab__skip
00028D46 <AmiBlitz3.ab3@11381>   CMP.w #$5F,D0                                            ;'_'
00028D4A <AmiBlitz3.ab3@11382>    BEQ.w tstlab__skip
00028D4E <AmiBlitz3.ab3@11383>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028D50 <AmiBlitz3.ab3@11386> RTS
00028D5A <AmiBlitz3.ab3@11391>   MOVE.w oldqflag,instringon
00028D60 <AmiBlitz3.ab3@11392>   MOVEA.l lastsourcepos,A5
00028D66 <AmiBlitz3.ab3@11395>   MOVE.l a5,beforeparameterfetch
00028D6C <AmiBlitz3.ab3@11396>   LEA ptr_parameterstore,A1
00028D6E <AmiBlitz3.ab3@11399>   MOVEQ.l #$00,D2
00028D74 <AmiBlitz3.ab3@11402>   LEA chartab,a0
00028D76 <AmiBlitz3.ab3@11403>   MOVEQ #0,d0
00028D7C <AmiBlitz3.ab3@11404>   MOVE.l A5,lastsourcepos
00028D86 <AmiBlitz3.ab3@11405>   MOVE.w instringon,oldqflag
00028D88 <AmiBlitz3.ab3@11408>     MOVE.b (a5)+,d0
00028D8C <AmiBlitz3.ab3@11409>   CMP.b #$20,d0                                            ;space deftype
00028D90 <AmiBlitz3.ab3@11410>   BEQ makename4__retry
00028D96 <AmiBlitz3.ab3@11412>   MOVE.w d0,lastchar
00028D9A <AmiBlitz3.ab3@11413>   TST.b 0(a0,d0.w)
00028D9E <AmiBlitz3.ab3@11414>   BNE makename__done
00028DA0 <AmiBlitz3.ab3@11423>   MOVE.b D0,(A1)+
00028DA2 <AmiBlitz3.ab3@11424>   ADDQ.l #1,D2
00028DA8 <AmiBlitz3.ab3@11425>   MOVE.l A5,lastsourcepos
00028DAA <AmiBlitz3.ab3@11428>   MOVE.b (a5)+,d0
00028DB0 <AmiBlitz3.ab3@11429>   MOVE.b d0,lastchar+1
00028DB4 <AmiBlitz3.ab3@11430>   CMP.b #$20,d0
00028DB8 <AmiBlitz3.ab3@11431>   BEQ makename__loop_l20
00028DBC <AmiBlitz3.ab3@11433>   TST.b 0(a0,d0)
00028DC0 <AmiBlitz3.ab3@11434>   BEQ makename__loop
00028DC4 <AmiBlitz3.ab3@11435>   CMP.b #2,d0
00028DC8 <AmiBlitz3.ab3@11436>   BNE makename__loop_lf1
00028DCE <AmiBlitz3.ab3@11437>   MOVEA.l usedfrom,A5
00028DD4 <AmiBlitz3.ab3@11438>   CLR.l usedfrom
00028DD8 <AmiBlitz3.ab3@11439> BRA makename__loop_ln1
00028DDC <AmiBlitz3.ab3@11442>   CMP.b #1,d0
00028DE0 <AmiBlitz3.ab3@11443>   BNE makename__loop_l20
00028DE4 <AmiBlitz3.ab3@11444>   MOVEA.l cmakea5(PC),A5
00028DE8 <AmiBlitz3.ab3@11445> BRA makename__loop_ln1
00028DEC <AmiBlitz3.ab3@11448>   CMP.b #$7e,d0
00028DF0 <AmiBlitz3.ab3@11449>             BNE makename__loop_lt
00028DF6 <AmiBlitz3.ab3@11450>             TST.w cmake
00028DFA <AmiBlitz3.ab3@11451>             BNE.w makename__loop_a1
00028DFC <AmiBlitz3.ab3@11452>             SUBQ.l #1,a5
00028E00 <AmiBlitz3.ab3@11453>             BSR.w get1bytemain
00028E04 <AmiBlitz3.ab3@11454> BRA makename__loop
00028E08 <AmiBlitz3.ab3@11458> BRA makename__loop_gpex
00028E0C <AmiBlitz3.ab3@11462>   BSR.w getchar
00028E2E <AmiBlitz3.ab3@11463>    !compare1                                               ;bsr.w tstalpha
00028E32 <AmiBlitz3.ab3@11464>    BEQ.w makename__loop_getp1
00028E44 <AmiBlitz3.ab3@11465>    !compare2                                               ;bsr.w tstnum
00028E48 <AmiBlitz3.ab3@11466>    BEQ.w makename__loop_getp1
00028E4C <AmiBlitz3.ab3@11467>   CMP.w #$5F,D0                                            ;'_'
00028E50 <AmiBlitz3.ab3@11468>    BEQ.w makename__loop_getp1
00028E54 <AmiBlitz3.ab3@11469>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028E58 <AmiBlitz3.ab3@11473>       BNE makename__loop_gpex
00028E5C <AmiBlitz3.ab3@11474>       CMP.b #$20,d0
00028E60 <AmiBlitz3.ab3@11475>       BNE.w makename__loop
00028E62 <AmiBlitz3.ab3@11478>      TST.b d0
00028E66 <AmiBlitz3.ab3@11479>      BPL makename__loop_l10
00028E68 <AmiBlitz3.ab3@11480>      SUBQ.l #1,a5
00028E6C <AmiBlitz3.ab3@11481>      BSR get1byte_
00028E70 <AmiBlitz3.ab3@11484>    CMP.w #$20,D0
00028E74 <AmiBlitz3.ab3@11485>    BNE.w makename__done
00028E76 <AmiBlitz3.ab3@11486>    MOVEQ #0,d0
00028E7C <AmiBlitz3.ab3@11487>   MOVE.l a5,lastsourcepos
00028E7E <AmiBlitz3.ab3@11490>   MOVE.b (a5)+,d0                                          ;neuneu
00028E82 <AmiBlitz3.ab3@11491>   BPL makename__loop_l101:
00028E84 <AmiBlitz3.ab3@11492>   ASL.w #8,d0
00028E86 <AmiBlitz3.ab3@11493>   MOVE.b (a5)+,d0
00028E8C <AmiBlitz3.ab3@11496>   TST.w instringon
00028E90 <AmiBlitz3.ab3@11497>   BNE makename__loop_l102
00028E94 <AmiBlitz3.ab3@11498>   CMP.b #$20,d0
00028E98 <AmiBlitz3.ab3@11499>   BEQ makename__loop_l103
00028E9C <AmiBlitz3.ab3@11500>   CMP.b #";",d0
00028EA0 <AmiBlitz3.ab3@11501>   BNE makename__loop_l102
00028EA2 <AmiBlitz3.ab3@11504>   MOVE.b (A5)+,D0
00028EA6 <AmiBlitz3.ab3@11505>              BEQ makename__loop_l1
00028EAA <AmiBlitz3.ab3@11506>              CMP.b #":",d0
00028EAE <AmiBlitz3.ab3@11507>              BNE makename__loop_lr                         ;:@
00028EB2 <AmiBlitz3.ab3@11508>              CMP.b #"@",(a5)
00028EB6 <AmiBlitz3.ab3@11509>              BNE makename__loop_lr
00028EB8 <AmiBlitz3.ab3@11510>              ADDQ #1,a5
00028EBE <AmiBlitz3.ab3@11514>   MOVE.w d0,lastchar
00028EC2 <AmiBlitz3.ab3@11518>   CMP.b #";",d0
00028EC6 <AmiBlitz3.ab3@11519>   BEQ makename__done_l11
00028EC8 <AmiBlitz3.ab3@11520>   CLR.b (A1)
00028ECA <AmiBlitz3.ab3@11522>   TST.w D2
00028ECC <AmiBlitz3.ab3@11523> RTS
00028ECE <AmiBlitz3.ab3@11526>   CLR.b (a1)
00028ED0 <AmiBlitz3.ab3@11527>   MOVEQ #0,d0
00028ED6 <AmiBlitz3.ab3@11528>   MOVE.w d0,lastchar
00028ED8 <AmiBlitz3.ab3@11530>   TST.w D2
00028EDA <AmiBlitz3.ab3@11531> RTS
00028EDC <AmiBlitz3.ab3@11537>   MOVE.l (A2),D0
00028EE0 <AmiBlitz3.ab3@11540>   BEQ.w findlast__here
00028EE2 <AmiBlitz3.ab3@11541>   MOVEA.l D0,A2
00028EE6 <AmiBlitz3.ab3@11542> BRA.w findlast__loop
00028EEA <AmiBlitz3.ab3@11545> BRA.w reget
00028EEC <AmiBlitz3.ab3@11551>   MOVE.l (A2),-(A7)
00028EF0 <AmiBlitz3.ab3@11552>   BSR.w addlabel
00028EF2 <AmiBlitz3.ab3@11553>   MOVE.l (A7)+,(A2)
00028EF4 <AmiBlitz3.ab3@11554> RTS
00028EFA <AmiBlitz3.ab3@11559>   CLR.l fp0addr
00028F00 <AmiBlitz3.ab3@11560>   TST.w dirmode
00028F04 <AmiBlitz3.ab3@11561>    BNE.w illdirerr
00028F06 <AmiBlitz3.ab3@11562>   MOVEQ.l #$00,D0
00028F08 <AmiBlitz3.ab3@11563>   MOVE.w D7,D0
00028F0A <AmiBlitz3.ab3@11564>   ADD.w D2,D0
00028F0C <AmiBlitz3.ab3@11565>   ADDQ.w #1,D0
00028F0E <AmiBlitz3.ab3@11566>   MOVE.w D0,D2
00028F10 <AmiBlitz3.ab3@11567>   ADDQ.l #2,d0
00028F12 <AmiBlitz3.ab3@11568>   MOVEQ.l #$01,D1
00028F18 <AmiBlitz3.ab3@11569>   MOVEA.l _execbase,A6
00028F1E <AmiBlitz3.ab3@11570>   MOVE.l mempool2,a0
00028F22 <AmiBlitz3.ab3@11571>   JSR _AllocPooled(a6)
00028F28 <AmiBlitz3.ab3@11573>   MOVE.l lastlabel,a2
00028F2A <AmiBlitz3.ab3@11574>   MOVE.l D0,(A2)
00028F2C <AmiBlitz3.ab3@11575>   MOVE.l d0,a0
00028F2E <AmiBlitz3.ab3@11576>   CLR.l (a0)
00028F34 <AmiBlitz3.ab3@11577>   MOVE.l a0,lastlabel
00028F36 <AmiBlitz3.ab3@11578>   MOVE.l d0,A2
00028F3A <AmiBlitz3.ab3@11579>   LEA -$1(A0,D7.W),A0
00028F3C <AmiBlitz3.ab3@11580>   MOVE.b D2,(A0)+
00028F42 <AmiBlitz3.ab3@11581>   LEA ptr_parameterstore,A1
00028F44 <AmiBlitz3.ab3@11582>   MOVEQ #0,d0
00028F46 <AmiBlitz3.ab3@11583>   MOVEQ #0,d1
00028F48 <AmiBlitz3.ab3@11586>   MOVE.b (A1)+,d1
00028F4C <AmiBlitz3.ab3@11587>    BEQ 'l1
00028F52 <AmiBlitz3.ab3@11588>    !hashalgo
00028F54 <AmiBlitz3.ab3@11589>    MOVE.b d1,(A0)+
00028F58 <AmiBlitz3.ab3@11590> BRA addlabel_loop2a
00028F5A <AmiBlitz3.ab3@11593>    CLR.b (a0)+
00028F60 <AmiBlitz3.ab3@11594>    LEA labelhash,a0
00028F66 <AmiBlitz3.ab3@11595>    AND.l #hashsize,d0
00028F68 <AmiBlitz3.ab3@11596>    ASL.l #2,d0
00028F6C <AmiBlitz3.ab3@11597>    MOVE.l 0(a0,d0),d1
00028F70 <AmiBlitz3.ab3@11598>    MOVE.l d1,$c(a2)
00028F74 <AmiBlitz3.ab3@11599>    MOVE.l a2,0(a0,d0)
00028F76 <AmiBlitz3.ab3@11600>    MOVEQ #0,d0
00028F7A <AmiBlitz3.ab3@11601> BRA.w reget
00028F80 <AmiBlitz3.ab3@11605>    TST.b newvariable
00028F84 <AmiBlitz3.ab3@11606>    BNE addlabel
00028F8A <AmiBlitz3.ab3@11609>   TST.w dirmode
00028F8E <AmiBlitz3.ab3@11610>    BNE.w illdirerr
00028F90 <AmiBlitz3.ab3@11611>   MOVEQ.l #$00,D0
00028F92 <AmiBlitz3.ab3@11612>   MOVE.w D7,D0
00028F94 <AmiBlitz3.ab3@11613>   ADD.w D2,D0
00028F96 <AmiBlitz3.ab3@11614>   ADDQ.w #1,D0
00028F98 <AmiBlitz3.ab3@11615>   MOVE.w D0,D2
00028F9A <AmiBlitz3.ab3@11616>   MOVEQ.l #$01,D1
00028FA0 <AmiBlitz3.ab3@11617>   MOVEA.l _execbase,A6
00028FA6 <AmiBlitz3.ab3@11618>   MOVE.l mempool2,a0
00028FAA <AmiBlitz3.ab3@11619>   JSR _AllocPooled(a6)
00028FAC <AmiBlitz3.ab3@11620>   MOVEA.l D0,A0
00028FB2 <AmiBlitz3.ab3@11622>   LEA varbase,a2
00028FB4 <AmiBlitz3.ab3@11623>   MOVE.l (a2),(a0)
00028FB6 <AmiBlitz3.ab3@11624>   MOVE.l A0,(A2)
00028FB8 <AmiBlitz3.ab3@11625>   MOVEA.l A0,A2
00028FBC <AmiBlitz3.ab3@11626>   LEA -$1(A0,D7.W),A0
00028FBE <AmiBlitz3.ab3@11627>   MOVE.b D2,(A0)+
00028FC4 <AmiBlitz3.ab3@11628>   LEA ptr_parameterstore,A1
00028FC6 <AmiBlitz3.ab3@11629>   MOVEQ #0,d0
00028FC8 <AmiBlitz3.ab3@11630>   MOVEQ #0,d1
00028FCA <AmiBlitz3.ab3@11633>   MOVE.b (A1)+,d1
00028FCE <AmiBlitz3.ab3@11634>    BEQ 'l12
00028FD4 <AmiBlitz3.ab3@11635>    !hashalgo
00028FD6 <AmiBlitz3.ab3@11636>    MOVE.b d1,(A0)+
00028FDA <AmiBlitz3.ab3@11637> BRA 'l11
00028FDC <AmiBlitz3.ab3@11640>   CLR.b (a0)+
00028FE2 <AmiBlitz3.ab3@11641>   LEA variablehash,a0
00028FE8 <AmiBlitz3.ab3@11642>    AND.l #hashsize,d0
00028FEA <AmiBlitz3.ab3@11643>    ASL.l #2,d0
00028FEE <AmiBlitz3.ab3@11644>    MOVE.l 0(a0,d0),d1
00028FF2 <AmiBlitz3.ab3@11645>    MOVE.l d1,$e(a2)
00028FF6 <AmiBlitz3.ab3@11646>    MOVE.l a2,0(a0,d0)
00028FF8 <AmiBlitz3.ab3@11647>    MOVEQ #0,d0
00028FFC <AmiBlitz3.ab3@11648> BRA.w reget
00029002 <AmiBlitz3.ab3@11652>   TST.w dirmode
00029006 <AmiBlitz3.ab3@11653>    BNE.w illdirerr
00029008 <AmiBlitz3.ab3@11660>   MOVEQ.l #$00,D0
0002900A <AmiBlitz3.ab3@11661>   MOVE.w D7,D0
0002900C <AmiBlitz3.ab3@11662>   ADD.w D2,D0
0002900E <AmiBlitz3.ab3@11663>   ADDQ.w #1,D0
00029010 <AmiBlitz3.ab3@11664>   MOVE.w D0,D2
00029012 <AmiBlitz3.ab3@11665>   MOVEQ.l #$01,D1
00029018 <AmiBlitz3.ab3@11666>   MOVEA.l _execbase,A6
0002901E <AmiBlitz3.ab3@11667>   MOVE.l mempool2,a0
00029022 <AmiBlitz3.ab3@11668>   JSR _AllocPooled(a6)
00029024 <AmiBlitz3.ab3@11670>   MOVEA.l D0,A0
00029026 <AmiBlitz3.ab3@11671>   MOVE.l A0,(A2)
00029028 <AmiBlitz3.ab3@11672>   CLR.l (a0)
0002902C <AmiBlitz3.ab3@11673>   CLR.l 8(a0)                                              ;clear next
0002902E <AmiBlitz3.ab3@11674>   MOVEA.l A0,A2
00029032 <AmiBlitz3.ab3@11675>   LEA -$1(A0,D7.W),A0
00029034 <AmiBlitz3.ab3@11676>   MOVE.b D2,(A0)+                                          ;put in struct length
0002903A <AmiBlitz3.ab3@11677>   LEA ptr_parameterstore,A1
0002903C <AmiBlitz3.ab3@11678>   MOVEQ #0,d0
0002903E <AmiBlitz3.ab3@11679>   MOVEQ #0,d1
00029040 <AmiBlitz3.ab3@11682>   MOVE.b (A1)+,d1
00029042 <AmiBlitz3.ab3@11685>   MOVE.b d1,(A0)+
00029046 <AmiBlitz3.ab3@11686>   BNE.w addlabel_loop2
0002904A <AmiBlitz3.ab3@11687> BRA.w reget
0002904C <AmiBlitz3.ab3@11691>   MOVEQ.l #$13,D7
00029052 <AmiBlitz3.ab3@11692>   LEA constantbase,A2
00029056 <AmiBlitz3.ab3@11693> BRA.w findlab
00029058 <AmiBlitz3.ab3@11697>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002905E <AmiBlitz3.ab3@11698>   LEA xinclude_base,A2
00029062 <AmiBlitz3.ab3@11699> BRA.w findlab
00029064 <AmiBlitz3.ab3@11703>   MOVEQ.l #$09,D7
0002906A <AmiBlitz3.ab3@11704>   LEA firstconst,A2
0002906E <AmiBlitz3.ab3@11705> BRA.w findlab
00029070 <AmiBlitz3.ab3@11709>   MOVEQ.l #$0d,D7                                          ;find macro
00029076 <AmiBlitz3.ab3@11710>   LEA macrobase,A2
0002907A <AmiBlitz3.ab3@11711> BRA.w findlab
00029080 <AmiBlitz3.ab3@11715>   LEA labelhash,A2
00029082 <AmiBlitz3.ab3@11716>   MOVEQ.l #$13,D7
00029084 <AmiBlitz3.ab3@11717>   EXT.l d2
0002908A <AmiBlitz3.ab3@11718>   LEA ptr_parameterstore,A0
0002908C <AmiBlitz3.ab3@11719>   MOVEQ #0,d0
0002908E <AmiBlitz3.ab3@11720>   MOVEQ #0,d1
00029090 <AmiBlitz3.ab3@11723>     MOVE.b (a0)+,d1
00029094 <AmiBlitz3.ab3@11724>     BEQ 'l15
0002909A <AmiBlitz3.ab3@11725>     !hashalgo
0002909E <AmiBlitz3.ab3@11726> BRA 'l20
000290A4 <AmiBlitz3.ab3@11729>   AND.l #hashsize,d0
000290A6 <AmiBlitz3.ab3@11730>   ASL.l #2,d0
000290AA <AmiBlitz3.ab3@11731>   MOVE.l 0(a2,d0),d0
000290AE <AmiBlitz3.ab3@11732> BRA 'l11
000290B2 <AmiBlitz3.ab3@11735>   MOVE.l $c(A2),D0                                         ;find label
000290B6 <AmiBlitz3.ab3@11738>   BEQ findlab__no
000290B8 <AmiBlitz3.ab3@11739>   MOVEA.l D0,A2
000290BA <AmiBlitz3.ab3@11740>   MOVEQ.l #$00,D0
000290BE <AmiBlitz3.ab3@11741>   MOVE.b -$1(A2,D7.l),D0
000290C4 <AmiBlitz3.ab3@11742>   LEA ptr_parameterstore,A0
000290C6 <AmiBlitz3.ab3@11743>   SUB.l D7,D0
000290C8 <AmiBlitz3.ab3@11744>   SUBQ.l #1,D0
000290CA <AmiBlitz3.ab3@11745>   CMP.l D0,D2
000290CE <AmiBlitz3.ab3@11746>    BNE.b 'l10
000290D2 <AmiBlitz3.ab3@11747>   LEA $0(A2,D7.W),A1
000290D4 <AmiBlitz3.ab3@11748>   SUBQ.l #1,D0
000290D6 <AmiBlitz3.ab3@11751>     MOVE.b (a1)+,d1
000290D8 <AmiBlitz3.ab3@11752>     CMP.b (a0)+,d1
000290DC <AmiBlitz3.ab3@11754>     BNE.b 'l10
000290E0 <AmiBlitz3.ab3@11755>   DBF D0,'l201
000290E4 <AmiBlitz3.ab3@11757>   BSR.w reget
000290E6 <AmiBlitz3.ab3@11758>   CMP.w D0,D0
000290E8 <AmiBlitz3.ab3@11759> RTS
000290EA <AmiBlitz3.ab3@11763>   MOVEQ.l #$0B,D7
000290EE <AmiBlitz3.ab3@11764> BRA.w findlab
000290F4 <AmiBlitz3.ab3@11768>   LEA firstproc,A2
000290FA <AmiBlitz3.ab3@11769>   MOVE.l #$21+#funcentry_extend,D7
000290FE <AmiBlitz3.ab3@11770> BRA findlab
00029104 <AmiBlitz3.ab3@11774>   LEA firstfor,A2
00029106 <AmiBlitz3.ab3@11775>   MOVEQ.l #$11,D7
0002910A <AmiBlitz3.ab3@11776> BRA.w findlab
0002910C <AmiBlitz3.ab3@11780>   MOVEQ.l #$0F,D7
00029110 <AmiBlitz3.ab3@11781> BRA.w findlab
00029112 <AmiBlitz3.ab3@11785>   MOVEQ.l #$0F+4,D7
00029118 <AmiBlitz3.ab3@11786>   TST.b newvariable
0002911C <AmiBlitz3.ab3@11787>    BNE.w findlab
00029122 <AmiBlitz3.ab3@11788>   LEA variablehash,A2
00029128 <AmiBlitz3.ab3@11789>   LEA ptr_parameterstore,A0
0002912A <AmiBlitz3.ab3@11790>   MOVEQ #0,d0
0002912C <AmiBlitz3.ab3@11791>   MOVEQ #0,d1
0002912E <AmiBlitz3.ab3@11794>     MOVE.b (a0)+,d1
00029132 <AmiBlitz3.ab3@11795>     BEQ 'l15
00029138 <AmiBlitz3.ab3@11796>     !hashalgo
0002913C <AmiBlitz3.ab3@11797> BRA 'l20
00029142 <AmiBlitz3.ab3@11800>   AND.l #hashsize,d0
00029144 <AmiBlitz3.ab3@11801>   ASL.l #2,d0
00029148 <AmiBlitz3.ab3@11802>   MOVE.l 0(a2,d0),d0
0002914C <AmiBlitz3.ab3@11803> BRA 'l11
00029150 <AmiBlitz3.ab3@11806>   MOVE.l $e(A2),D0                                         ;find label
00029154 <AmiBlitz3.ab3@11809>   BEQ findlab__no
00029156 <AmiBlitz3.ab3@11810>   MOVEA.l D0,A2
00029158 <AmiBlitz3.ab3@11811>   MOVEQ.l #$00,D0
0002915C <AmiBlitz3.ab3@11812>   MOVE.b -$1(A2,D7.W),D0
00029162 <AmiBlitz3.ab3@11813>   LEA ptr_parameterstore,A0
00029164 <AmiBlitz3.ab3@11814>   SUB.w D7,D0
00029166 <AmiBlitz3.ab3@11815>   SUBQ.l #1,D0
00029168 <AmiBlitz3.ab3@11816>   CMP.w D0,D2
0002916C <AmiBlitz3.ab3@11817>    BNE.b 'l10
00029170 <AmiBlitz3.ab3@11818>   LEA $0(A2,D7.W),A1
00029172 <AmiBlitz3.ab3@11819>   SUBQ.l #1,D0
00029174 <AmiBlitz3.ab3@11822>     MOVE.b (a1)+,d1
00029176 <AmiBlitz3.ab3@11823>     CMP.b (a0)+,d1
0002917A <AmiBlitz3.ab3@11825>     BNE.b 'l10
0002917E <AmiBlitz3.ab3@11826>   DBF D0,'l201
00029182 <AmiBlitz3.ab3@11828>   BSR.w reget
00029184 <AmiBlitz3.ab3@11829>   CMP.w D0,D0
00029186 <AmiBlitz3.ab3@11830> RTS
00029188 <AmiBlitz3.ab3@11843>     MOVE.l (A2),D0                                         ;find label
0002918C <AmiBlitz3.ab3@11844>      BEQ.b findlab__no
0002918E <AmiBlitz3.ab3@11845>     MOVEA.l D0,A2
00029190 <AmiBlitz3.ab3@11846>     MOVEQ.l #$00,D0
00029194 <AmiBlitz3.ab3@11847>     MOVE.b -$1(A2,D7.W),D0
00029196 <AmiBlitz3.ab3@11848>     SUB.l D7,D0
00029198 <AmiBlitz3.ab3@11849>     SUBQ.l #1,D0
0002919A <AmiBlitz3.ab3@11850>   CMP.w D0,D2
0002919E <AmiBlitz3.ab3@11851>   BNE.b findlab__loop
000291A2 <AmiBlitz3.ab3@11853>   LEA $0(A2,D7.W),A1
000291A8 <AmiBlitz3.ab3@11854>   LEA ptr_parameterstore,A0
000291AA <AmiBlitz3.ab3@11855>   SUBQ.l #1,D0
000291AC <AmiBlitz3.ab3@11858>     MOVE.b (a1)+,d1
000291AE <AmiBlitz3.ab3@11859>     CMP.b (a0)+,d1
000291B2 <AmiBlitz3.ab3@11861>     BNE.b findlab__loop
000291B6 <AmiBlitz3.ab3@11862>   DBF D0,findlab__loop2
000291BA <AmiBlitz3.ab3@11864>   BSR.w reget
000291BC <AmiBlitz3.ab3@11865>   CMP.w D0,D0
000291BE <AmiBlitz3.ab3@11866> RTS
000291C2 <AmiBlitz3.ab3@11869>   BSR.w reget
000291C4 <AmiBlitz3.ab3@11870>   MOVEQ.l #-$01,D1
000291C6 <AmiBlitz3.ab3@11871> RTS
000291CC <AmiBlitz3.ab3@11875>   MOVEA.l alllocals,A4
000291D2 <AmiBlitz3.ab3@11876>   CLR.l alllocals
000291D6 <AmiBlitz3.ab3@11880>     CMPA.w #$0,A4
000291DA <AmiBlitz3.ab3@11881>      BEQ.b freeprocvs__done
000291DE <AmiBlitz3.ab3@11882>     MOVEA.l $4(A4),A3
000291E2 <AmiBlitz3.ab3@11884>     MOVEA.l $8(A4),A3
000291E4 <AmiBlitz3.ab3@11886>     MOVEA.l A4,A1
000291E6 <AmiBlitz3.ab3@11887>     MOVEA.l (A4),A4
000291E8 <AmiBlitz3.ab3@11888>     MOVEQ.l #$0C,D0
000291EE <AmiBlitz3.ab3@11889>     MOVEA.l _execbase,A6
000291F4 <AmiBlitz3.ab3@11890>     MOVE.l mempool,a0
000291F8 <AmiBlitz3.ab3@11891>     JSR _FreePooled(A6)
000291FC <AmiBlitz3.ab3@11892> BRA.b freeprocvs__loop
00029202 <AmiBlitz3.ab3@11895>   CLR.l firstglob                                          ;fix 2*aclearallvar called
00029208 <AmiBlitz3.ab3@11896>   CLR.l firstlocal
0002920E <AmiBlitz3.ab3@11897>   CLR.l sharebase
00029214 <AmiBlitz3.ab3@11898>   TST.l mempool2
00029218 <AmiBlitz3.ab3@11899>   BEQ freeprocvs__done_l10
0002921E <AmiBlitz3.ab3@11901>   MOVEA.l _execbase,A6
00029224 <AmiBlitz3.ab3@11902>   MOVE.l mempool2,a0
0002922A <AmiBlitz3.ab3@11903>   CLR.l mempool2
0002922E <AmiBlitz3.ab3@11904>   JSR _DeletePool(a6)
00029234 <AmiBlitz3.ab3@11907>   MOVE.l _execbase,a6
0002923A <AmiBlitz3.ab3@11908>   MOVE.l #$10000,d0
00029240 <AmiBlitz3.ab3@11909>   MOVE.l #80000,d1
00029242 <AmiBlitz3.ab3@11910>   MOVE.l d1,d2
00029246 <AmiBlitz3.ab3@11911>   JSR _CreatePool(a6)
0002924C <AmiBlitz3.ab3@11912>   MOVE.l d0,mempool2
0002924E <AmiBlitz3.ab3@11913> RTS
00029252 <AmiBlitz3.ab3@11917>   CMPA.w #$0,A3
00029256 <AmiBlitz3.ab3@11918>    BEQ.w freevars__done
00029258 <AmiBlitz3.ab3@11919>   MOVEA.l A3,A1
0002925A <AmiBlitz3.ab3@11920>   MOVEA.l (A3),A3
0002925C <AmiBlitz3.ab3@11921>   MOVEQ.l #$00,D0
00029260 <AmiBlitz3.ab3@11922>   MOVE.b $E(A1),D0
00029266 <AmiBlitz3.ab3@11923>   MOVEA.l _execbase,A6
0002926C <AmiBlitz3.ab3@11924>   MOVE.l mempool2,a0
00029270 <AmiBlitz3.ab3@11925>   JSR _FreePooled(A6)
00029274 <AmiBlitz3.ab3@11926> BRA.w freevars
00029278 <AmiBlitz3.ab3@11929>     CMPA.w #$0,A3
0002927C <AmiBlitz3.ab3@11930>      BEQ.w freevars__done
0002927E <AmiBlitz3.ab3@11931>     MOVEA.l A3,A1
00029280 <AmiBlitz3.ab3@11932>     MOVEA.l (A3),A3
00029282 <AmiBlitz3.ab3@11933>     MOVEQ.l #$00,D0
00029286 <AmiBlitz3.ab3@11934>     MOVE.b $E+4(A1),D0
0002928C <AmiBlitz3.ab3@11935>     MOVEA.l _execbase,A6
00029292 <AmiBlitz3.ab3@11936>     MOVE.l mempool2,a0
00029296 <AmiBlitz3.ab3@11937>     JSR _FreePooled(A6)
0002929A <AmiBlitz3.ab3@11938> BRA.w freevarsb
0002929C <AmiBlitz3.ab3@11941> RTS
000292A2 <AmiBlitz3.ab3@11945>   MOVEA.l currentlabeladdr,A0
000292A8 <AmiBlitz3.ab3@11946>   MOVE.l a0,lastlabel
000292AA <AmiBlitz3.ab3@11947>   MOVEA.l (A0),A2
000292AC <AmiBlitz3.ab3@11948>   CLR.l (A0)
000292B2 <AmiBlitz3.ab3@11949>   MOVEA.l _execbase,A6
000292B6 <AmiBlitz3.ab3@11952>   CMPA.w #$0,A2
000292BA <AmiBlitz3.ab3@11953>    BEQ.w clearlabels__done
000292BE <AmiBlitz3.ab3@11954>   MOVE.l $4(A2),D0
000292C2 <AmiBlitz3.ab3@11955>   BTST #$0,D0
000292C6 <AmiBlitz3.ab3@11956>    BNE.w clearlabels__skip
000292C8 <AmiBlitz3.ab3@11957>   MOVEA.l D0,A3
000292CC <AmiBlitz3.ab3@11960>     CMPA.w #$0,A3
000292D0 <AmiBlitz3.ab3@11961>      BEQ.w clearlabels__skip
000292D2 <AmiBlitz3.ab3@11962>     MOVEA.l A3,A1
000292D4 <AmiBlitz3.ab3@11963>     MOVEA.l (A3),A3
000292D6 <AmiBlitz3.ab3@11964>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
000292DC <AmiBlitz3.ab3@11965>     MOVE.l mempool,a0
000292E0 <AmiBlitz3.ab3@11966>     JSR _FreePooled(A6)
000292E4 <AmiBlitz3.ab3@11967> BRA.w clearlabels__loop2
000292E6 <AmiBlitz3.ab3@11970>   MOVEQ.l #$00,D0
000292EA <AmiBlitz3.ab3@11971>   MOVE.b $12(A2),D0
000292EC <AmiBlitz3.ab3@11972>   MOVEA.l A2,A1
000292EE <AmiBlitz3.ab3@11973>   MOVEA.l (A2),A2
000292F4 <AmiBlitz3.ab3@11974>   MOVE.l mempool2,a0
000292F8 <AmiBlitz3.ab3@11976> BRA.w clearlabels__loop
000292FA <AmiBlitz3.ab3@11979> RTS
00029300 <AmiBlitz3.ab3@11983>   MOVEA.l firstpend,A3
00029306 <AmiBlitz3.ab3@11984>   CLR.l firstpend
0002930C <AmiBlitz3.ab3@11985>   MOVEA.l _execbase,A6
00029310 <AmiBlitz3.ab3@11988>     CMPA.w #$0,A3
00029314 <AmiBlitz3.ab3@11989>      BEQ.w freepends__done
00029316 <AmiBlitz3.ab3@11990>     MOVEA.l A3,A1
00029318 <AmiBlitz3.ab3@11991>     MOVEQ.l #$08,D0
0002931A <AmiBlitz3.ab3@11992>     MOVEA.l (A3),A3
00029320 <AmiBlitz3.ab3@11993>     MOVE.l mempool,a0
00029324 <AmiBlitz3.ab3@11994>     JSR _FreePooled(A6)
00029328 <AmiBlitz3.ab3@11995> BRA.w fpnd2
0002932A <AmiBlitz3.ab3@11998> RTS
00029330 <AmiBlitz3.ab3@12002>   MOVEA.l firstproc,A2
00029336 <AmiBlitz3.ab3@12003>   CLR.l firstproc
0002933C <AmiBlitz3.ab3@12004>   MOVEA.l _execbase,A6
00029340 <AmiBlitz3.ab3@12007>     CMPA.w #$0,A2
00029344 <AmiBlitz3.ab3@12008>      BEQ.w clearfunctionlist__done
00029346 <AmiBlitz3.ab3@12009>     MOVEA.l A2,A1
00029348 <AmiBlitz3.ab3@12010>     MOVEA.l (A2),A2
0002934A <AmiBlitz3.ab3@12011>     MOVEQ.l #$00,D0
0002934E <AmiBlitz3.ab3@12012>     MOVE.b $20+#funcentry_extend(A1),D0
00029354 <AmiBlitz3.ab3@12013>     MOVE.l mempool2,a0
00029358 <AmiBlitz3.ab3@12014>     JSR _FreePooled(A6)
0002935C <AmiBlitz3.ab3@12015> BRA.w clearfunctionlist__loop
0002935E <AmiBlitz3.ab3@12018> RTS
00029362 <AmiBlitz3.ab3@12022>   CMPA.w #$0,A2
00029366 <AmiBlitz3.ab3@12023>    BEQ.w freetypes__done
0002936A <AmiBlitz3.ab3@12024>   MOVEA.l $4(A2),A3
0002936E <AmiBlitz3.ab3@12025>   CMPA.w #$FF,A3
00029372 <AmiBlitz3.ab3@12026>    BEQ.w freetypes__noway
00029376 <AmiBlitz3.ab3@12030>    BSR.w freevars
00029378 <AmiBlitz3.ab3@12033>     MOVEA.l A2,A1
0002937A <AmiBlitz3.ab3@12034>     MOVEA.l (A2),A2
0002937C <AmiBlitz3.ab3@12035>     MOVEQ.l #$00,D0
00029380 <AmiBlitz3.ab3@12036>     MOVE.b $A(A1),D0
00029386 <AmiBlitz3.ab3@12037>     MOVEA.l _execbase,A6
0002938C <AmiBlitz3.ab3@12038>     MOVE.l mempool2,a0
00029390 <AmiBlitz3.ab3@12039>     JSR _FreePooled(A6)
00029394 <AmiBlitz3.ab3@12040> BRA.w freetypes
00029396 <AmiBlitz3.ab3@12043> RTS
0002939C <AmiBlitz3.ab3@12047>   JSR uselib2
000293A2 <AmiBlitz3.ab3@12049>   CLR.w notshared
000293A8 <AmiBlitz3.ab3@12050>   CLR.w varmode
000293AE <AmiBlitz3.ab3@12051>   MOVE.w proceduremode,D1
000293B2 <AmiBlitz3.ab3@12052>    BNE.w JL_0_8F4E
000293B8 <AmiBlitz3.ab3@12053>   LEA varbase,A2
000293BE <AmiBlitz3.ab3@12054>   LEA ptr_parameterstore,a0
000293C2 <AmiBlitz3.ab3@12055>   CMP.b #$22,(a0)
000293C6 <AmiBlitz3.ab3@12056>   BNE JL_0_8E5E
000293C8 <AmiBlitz3.ab3@12057>   MOVEQ #0,d0
000293CE <AmiBlitz3.ab3@12058> JMP error
000293D2 <AmiBlitz3.ab3@12061>   BSR.w findvariable
000293D6 <AmiBlitz3.ab3@12064>   BNE.w JL_0_8E7E
000293DC <AmiBlitz3.ab3@12067>   MOVE.b flagmask+1,D1
000293E0 <AmiBlitz3.ab3@12068>   MOVE.b $7(A2),D3
000293E2 <AmiBlitz3.ab3@12069>   EOR.b D3,D1
000293E6 <AmiBlitz3.ab3@12070>   BNE 'l2
000293EE <AmiBlitz3.ab3@12071>   CMP.b #2,nowdeclare
000293F2 <AmiBlitz3.ab3@12072>   BEQ errormsg_declaredtwice
000293F6 <AmiBlitz3.ab3@12073> BRA.w JL_0_8FA8
000293FA <AmiBlitz3.ab3@12076>   BSR.w findlab
000293FE <AmiBlitz3.ab3@12077>   BNE 'l1
00029406 <AmiBlitz3.ab3@12078>   CMP.b #2,nowdeclare
0002940A <AmiBlitz3.ab3@12079>   BEQ errormsg_declaredtwice
0002940C <AmiBlitz3.ab3@12080>   CMP.w d0,d0
00029410 <AmiBlitz3.ab3@12083> BRA.w JL_0_8E62
00029412 <AmiBlitz3.ab3@12086>    MOVE.l a2,-(a7)
00029418 <AmiBlitz3.ab3@12087>    LEA sharebase,a2
0002941A <AmiBlitz3.ab3@12088>    MOVEQ #$f+4,d7
0002941E <AmiBlitz3.ab3@12089>    BSR.w findlab
00029422 <AmiBlitz3.ab3@12090>    BEQ 'l2x
00029424 <AmiBlitz3.ab3@12091>    MOVE.l (a7)+,a2
00029428 <AmiBlitz3.ab3@12092> BRA 'cont
0002942A <AmiBlitz3.ab3@12095>   ADDQ.l #4,a7
00029430 <AmiBlitz3.ab3@12096>   CLR.w varmode
00029436 <AmiBlitz3.ab3@12097>   MOVE.b flagmask+1,D1
0002943A <AmiBlitz3.ab3@12098>   MOVE.b $7(A2),D3
0002943C <AmiBlitz3.ab3@12099>   EOR.b D3,D1
00029440 <AmiBlitz3.ab3@12100>   BNE vardeclareerr
00029444 <AmiBlitz3.ab3@12101> BRA JL_0_8FA8
0002944A <AmiBlitz3.ab3@12104>    MOVE.w nonew,D1
0002944E <AmiBlitz3.ab3@12105>    BNE.w nonewerr
00029454 <AmiBlitz3.ab3@12106>    TST.b nowdeclare
00029458 <AmiBlitz3.ab3@12107>    BNE 'l2
0002945E <AmiBlitz3.ab3@12108>    TST.b declare2
00029462 <AmiBlitz3.ab3@12109>    BEQ 'l1
00029466 <AmiBlitz3.ab3@12110>    CMP.b #$2e,d0
0002946A <AmiBlitz3.ab3@12111>    BEQ 'l2
0002946E <AmiBlitz3.ab3@12112>    CMP.b #"$",d0
00029472 <AmiBlitz3.ab3@12113>    BEQ 'l2
00029476 <AmiBlitz3.ab3@12114> BRA vardeclareerr
0002947C <AmiBlitz3.ab3@12117>   TST.b declare
00029480 <AmiBlitz3.ab3@12118>    BNE vardeclareerr
00029484 <AmiBlitz3.ab3@12121>   BSR.w addvariable
0002948A <AmiBlitz3.ab3@12122>   NOT.w notshared
0002948C <AmiBlitz3.ab3@12123>   MOVEA.l A2,A3
00029492 <AmiBlitz3.ab3@12124>   MOVEA.l defaulttype,A2
00029496 <AmiBlitz3.ab3@12125>   CMP.w #$2E,D0
0002949A <AmiBlitz3.ab3@12126>    BEQ.w JL_0_8EB8
0002949E <AmiBlitz3.ab3@12127>   CMP.w #$24,D0
000294A2 <AmiBlitz3.ab3@12128>    BNE.w JL_0_8ECA
000294A8 <AmiBlitz3.ab3@12129>   LEA newtype_string,A2
000294AC <AmiBlitz3.ab3@12130>    BSR.w get1bytemain
000294B0 <AmiBlitz3.ab3@12131> BRA.w JL_0_8ECA
000294B6 <AmiBlitz3.ab3@12134> JMP JUMP_notypeerr
000294BA <AmiBlitz3.ab3@12137>    BSR.w getparameter2
000294C0 <AmiBlitz3.ab3@12138>   LEA newtypebase,A2
000294C4 <AmiBlitz3.ab3@12139>    BSR.w findtype
000294C8 <AmiBlitz3.ab3@12140>    BNE.w notypeerr3
000294CE <AmiBlitz3.ab3@12143>   CMPA.l #newtype_byte,A2
000294D2 <AmiBlitz3.ab3@12144>    BEQ.w JL_0_8EECb
000294D8 <AmiBlitz3.ab3@12145>   MOVE.w varmode,D1
000294DC <AmiBlitz3.ab3@12146>    BNE.w JL_0_8EE4b
000294E2 <AmiBlitz3.ab3@12147>   ADDQ.w #1,globalvarpointer
000294EA <AmiBlitz3.ab3@12150>   BCLR #$0,globalvarpointer+1
000294EE <AmiBlitz3.ab3@12153>   MOVE.l A2,$A(A3)
000294F6 <AmiBlitz3.ab3@12154>   MOVE.w flagmask,$6(A3)                                  ;??????????
000294F8 <AmiBlitz3.ab3@12156>   MOVEQ.l #$04,D1
00029500 <AmiBlitz3.ab3@12157>   BTST #$0,flagmask+1
00029504 <AmiBlitz3.ab3@12158>    BNE.w JL_0_8F22b
0002950C <AmiBlitz3.ab3@12159>   BTST #$1,flagmask+1
00029510 <AmiBlitz3.ab3@12160>    BNE.w JL_0_8F22b
00029518 <AmiBlitz3.ab3@12161>   CMPI.l #$100,$4(A2)
0002951C <AmiBlitz3.ab3@12162>    BCC.w JL_0_8F22b
00029520 <AmiBlitz3.ab3@12163>   MOVE.w $8(A2),D1
00029526 <AmiBlitz3.ab3@12166>   TST.w varmode
0002952A <AmiBlitz3.ab3@12167> BRA.w JL_0_8F3E
0002952E <AmiBlitz3.ab3@12176>   BSR.w getparameter2
00029534 <AmiBlitz3.ab3@12177>   LEA newtypebase,A2
00029538 <AmiBlitz3.ab3@12178>    BSR.w findtype
0002953C <AmiBlitz3.ab3@12179>    BNE.w notypeerr
00029542 <AmiBlitz3.ab3@12182>   CMPA.l #newtype_byte,A2
00029546 <AmiBlitz3.ab3@12183>    BEQ.w JL_0_8EEC
0002954C <AmiBlitz3.ab3@12184>   MOVE.w varmode,D1
00029550 <AmiBlitz3.ab3@12185>    BNE.w JL_0_8EE4
00029556 <AmiBlitz3.ab3@12186>   ADDQ.w #1,globalvarpointer
0002955E <AmiBlitz3.ab3@12189>   BCLR #$0,globalvarpointer+1
00029562 <AmiBlitz3.ab3@12192>   MOVE.l A2,$A(A3)
0002956A <AmiBlitz3.ab3@12193>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002956C <AmiBlitz3.ab3@12194>   MOVEQ.l #$04,D1
00029574 <AmiBlitz3.ab3@12195>   BTST #$0,flagmask+1
00029578 <AmiBlitz3.ab3@12196>    BNE.w JL_0_8F22
00029580 <AmiBlitz3.ab3@12197>   BTST #$1,flagmask+1
00029584 <AmiBlitz3.ab3@12198>    BNE.w JL_0_8F22
0002958C <AmiBlitz3.ab3@12199>   CMPI.l #$100,$4(A2)
00029590 <AmiBlitz3.ab3@12200>    BCC.w JL_0_8F22
00029594 <AmiBlitz3.ab3@12201>   MOVE.w $8(A2),D1
0002959A <AmiBlitz3.ab3@12204>   TST.w varmode
0002959E <AmiBlitz3.ab3@12205>    BEQ.w JL_0_8F3E
000295A0 <AmiBlitz3.ab3@12206>   NEG.w D1
000295A6 <AmiBlitz3.ab3@12207>   ADD.w D1,globalvarpointer
000295AE <AmiBlitz3.ab3@12208>   MOVE.w globalvarpointer,$4(A3)
000295B0 <AmiBlitz3.ab3@12209> RTS
000295B8 <AmiBlitz3.ab3@12212>   MOVE.w globalvarpointer,$4(A3)
000295BE <AmiBlitz3.ab3@12213>   ADD.w D1,globalvarpointer
000295C0 <AmiBlitz3.ab3@12214> RTS
000295C6 <AmiBlitz3.ab3@12218>   LEA firstglob,A2
000295CA <AmiBlitz3.ab3@12219>    BSR.w findvariable2
000295CE <AmiBlitz3.ab3@12222>   BNE.w JL_0_8F74
000295D4 <AmiBlitz3.ab3@12223>   MOVE.b flagmask+1,D1
000295D8 <AmiBlitz3.ab3@12224>   MOVE.b $7(A2),D3
000295DA <AmiBlitz3.ab3@12225>   EOR.b D3,D1
000295DE <AmiBlitz3.ab3@12226>    BEQ.w JL_0_8FA8
000295E2 <AmiBlitz3.ab3@12227>    BSR.w findlab
000295E6 <AmiBlitz3.ab3@12228> BRA.w JL_0_8F58
000295EE <AmiBlitz3.ab3@12231>   MOVE.w #$FFFF,varmode
000295F4 <AmiBlitz3.ab3@12232>   MOVE.w globalvarpointer,-(A7)
000295FE <AmiBlitz3.ab3@12233>   MOVE.w locvaroff,globalvarpointer
00029604 <AmiBlitz3.ab3@12234>   LEA firstlocal,A2
0002960C <AmiBlitz3.ab3@12235>   MOVE.b #1,newvariable
00029610 <AmiBlitz3.ab3@12236>    BSR.w JL_0_8E5E
00029616 <AmiBlitz3.ab3@12237>   CLR.b newvariable
00029620 <AmiBlitz3.ab3@12238>   MOVE.w globalvarpointer,locvaroff
00029626 <AmiBlitz3.ab3@12239>   MOVE.w (A7)+,globalvarpointer
00029628 <AmiBlitz3.ab3@12240> RTS
0002962A <AmiBlitz3.ab3@12243>   MOVEA.l A2,A3
0002962E <AmiBlitz3.ab3@12244>   CMP.w #$2E,D0
00029632 <AmiBlitz3.ab3@12245>    BEQ.w JL_0_8FCE
00029636 <AmiBlitz3.ab3@12246>   CMP.w #$24,D0
0002963A <AmiBlitz3.ab3@12247>    BNE.w JL_0_8FE8
00029642 <AmiBlitz3.ab3@12248>   CMPI.l #newtype_string,$A(A3)
00029646 <AmiBlitz3.ab3@12249>    BNE.w rongtypeerr
0002964A <AmiBlitz3.ab3@12250>    BSR.w get1bytemain
0002964E <AmiBlitz3.ab3@12251> BRA.w JL_0_8FE8
00029652 <AmiBlitz3.ab3@12254>    BSR.w getparameter2
00029658 <AmiBlitz3.ab3@12255>   LEA newtypebase,A2
0002965C <AmiBlitz3.ab3@12256>    BSR.w findtype
00029660 <AmiBlitz3.ab3@12257>    BNE.w notypeerr
00029664 <AmiBlitz3.ab3@12258>   CMPA.l $A(A3),A2
00029668 <AmiBlitz3.ab3@12259>    BNE.w rongtypeerr
00029670 <AmiBlitz3.ab3@12261>   BTST #$0,flagmask+1
00029674 <AmiBlitz3.ab3@12262>    BEQ.w JL_0_8FFE
0002967A <AmiBlitz3.ab3@12263>   BTST #$0,$7(A3)
0002967E <AmiBlitz3.ab3@12264>    BEQ.w pointerr
00029682 <AmiBlitz3.ab3@12267>   MOVEA.l $A(A3),A2
00029684 <AmiBlitz3.ab3@12268> RTS
00029686 <AmiBlitz3.ab3@12272>    TST.l D3                                                ;newtype >32kb  .w to .l
0002968A <AmiBlitz3.ab3@12273>    BEQ.w JL_0_9042
00029694 <AmiBlitz3.ab3@12274>    MOVE.l destpointer,loada
00029698 <AmiBlitz3.ab3@12277> BRA JL_0_9032
0002969C <AmiBlitz3.ab3@12279>   CMP.w #$9,D3                                             ;_addq_arrays
000296A0 <AmiBlitz3.ab3@12280>    BCC.w JL_0_9032
000296A6 <AmiBlitz3.ab3@12281>   MOVE.w d3,arrayoffset
000296AA <AmiBlitz3.ab3@12282>   ANDI.w #$7,D3
000296AC <AmiBlitz3.ab3@12283>   LSL.w #8,D3
000296AE <AmiBlitz3.ab3@12284>   LSL.w #1,D3
000296B6 <AmiBlitz3.ab3@12285>   ANDI.w #$F1FF,addqa0
000296BC <AmiBlitz3.ab3@12286>   OR.w D3,addqa0
000296C2 <AmiBlitz3.ab3@12287>   MOVE.w addqa0,D1
000296C6 <AmiBlitz3.ab3@12288> BRA.w writeword
000296CC <AmiBlitz3.ab3@12291>   CMP.l #$7fff,d3                                          ;>32kb newtypes
000296D0 <AmiBlitz3.ab3@12292>   BGT longoffset
000296D6 <AmiBlitz3.ab3@12293>   MOVE.w D3,leaa0a0+2
000296DC <AmiBlitz3.ab3@12294>   MOVE.w d3,arrayoffset
000296E2 <AmiBlitz3.ab3@12295>   MOVE.l leaa0a0,D1
000296E6 <AmiBlitz3.ab3@12296>   BSR.w writelong
000296E8 <AmiBlitz3.ab3@12299> RTS
000296EC <AmiBlitz3.ab3@12302>    MOVE.w #$d5fc,d1
000296F0 <AmiBlitz3.ab3@12303>    BSR writeword
000296F2 <AmiBlitz3.ab3@12304>    MOVE.l d3,d1
000296F6 <AmiBlitz3.ab3@12305>    BSR.w writelong
000296F8 <AmiBlitz3.ab3@12306> RTS
000296FC <AmiBlitz3.ab3@12310>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
00029700 <AmiBlitz3.ab3@12313>    BCS.w arrchk3                                           
00029706 <AmiBlitz3.ab3@12314>    JSR $20000                                              ;jsr 0
0002970C <AmiBlitz3.ab3@12320>   TST.b fast
00029710 <AmiBlitz3.ab3@12321>   BEQ 'l1
00029712 <AmiBlitz3.ab3@12322>    MOVEQ #0,d1                                             ;faster arrays
00029718 <AmiBlitz3.ab3@12323>    MOVE.w regnum,d2
0002971A <AmiBlitz3.ab3@12324>    MOVE.w d2,d1
0002971C <AmiBlitz3.ab3@12325>    LSL.w #8,d1
0002971E <AmiBlitz3.ab3@12326>    LSL.w #4,d1
00029720 <AmiBlitz3.ab3@12327>    ADD.w d2,d1
00029726 <AmiBlitz3.ab3@12328>    OR.l #$4c2d0000,d1
0002972C <AmiBlitz3.ab3@12329>    TST.w varmode
00029730 <AmiBlitz3.ab3@12330>    BEQ 'l1a
00029734 <AmiBlitz3.ab3@12331>    BCLR #16,d1
00029738 <AmiBlitz3.ab3@12334>    BSR writelong
0002973C <AmiBlitz3.ab3@12335>    MOVE.w $4(A7),D1
00029740 <AmiBlitz3.ab3@12336>    BSR.w writeword
00029746 <AmiBlitz3.ab3@12337>    MOVE.w regnum,D1
00029748 <AmiBlitz3.ab3@12338>   SUBQ.w #1,D1
0002974A <AmiBlitz3.ab3@12339>   LSL.w #8,D1
0002974C <AmiBlitz3.ab3@12340>   LSL.w #1,D1
00029750 <AmiBlitz3.ab3@12341>   ORI.w #$D080,D1
00029756 <AmiBlitz3.ab3@12342>   OR.w regnum,D1
0002975A <AmiBlitz3.ab3@12343>    BSR.w writeword
0002975C <AmiBlitz3.ab3@12344> RTS
00029762 <AmiBlitz3.ab3@12347>   MOVE.w regnum,D2
00029766 <AmiBlitz3.ab3@12348>   MOVE.w arrmul1(PC),D1
00029768 <AmiBlitz3.ab3@12349>   OR.w D2,D1
0002976A <AmiBlitz3.ab3@12350>   SUBQ.w #1,D1
0002976E <AmiBlitz3.ab3@12351>    BSR.w writeword
00029772 <AmiBlitz3.ab3@12352>   MOVE.w arrmul2(PC),D1
00029774 <AmiBlitz3.ab3@12353>   OR.w D2,D1
00029776 <AmiBlitz3.ab3@12354>   MOVE.w D2,D3
00029778 <AmiBlitz3.ab3@12355>   SUBQ.w #1,D3
0002977A <AmiBlitz3.ab3@12356>   LSL.w #8,D3
0002977C <AmiBlitz3.ab3@12357>   LSL.w #1,D3
0002977E <AmiBlitz3.ab3@12358>   OR.w D3,D1
00029782 <AmiBlitz3.ab3@12359>    BSR.w writeword
00029786 <AmiBlitz3.ab3@12360>   MOVE.w arrmul3(PC),D1
00029788 <AmiBlitz3.ab3@12361>   MOVE.w D2,D3
0002978A <AmiBlitz3.ab3@12362>   LSL.w #8,D3
0002978C <AmiBlitz3.ab3@12363>   LSL.w #1,D3
0002978E <AmiBlitz3.ab3@12364>   OR.w D3,D1
00029792 <AmiBlitz3.ab3@12365>    BSR.w pokewda5s
00029796 <AmiBlitz3.ab3@12366>   MOVE.w $4(A7),D1
00029798 <AmiBlitz3.ab3@12367>   ADDQ.w #2,D1
0002979C <AmiBlitz3.ab3@12368>    BSR.w writeword
000297A0 <AmiBlitz3.ab3@12369>   MOVE.w arrmul4(PC),D1
000297A2 <AmiBlitz3.ab3@12370>   MOVE.w D2,D3
000297A4 <AmiBlitz3.ab3@12371>   SUBQ.w #1,D3
000297A6 <AmiBlitz3.ab3@12372>   LSL.w #8,D3
000297A8 <AmiBlitz3.ab3@12373>   LSL.w #1,D3
000297AA <AmiBlitz3.ab3@12374>   OR.w D3,D1
000297AE <AmiBlitz3.ab3@12375>    BSR.w pokewda5s
000297B2 <AmiBlitz3.ab3@12376>   MOVE.w $4(A7),D1
000297B6 <AmiBlitz3.ab3@12377>    BSR.w writeword
000297BA <AmiBlitz3.ab3@12378>   MOVE.w arrmul5(PC),D1
000297BC <AmiBlitz3.ab3@12379>   OR.w D2,D1
000297BE <AmiBlitz3.ab3@12380>   SUBQ.w #1,D1
000297C2 <AmiBlitz3.ab3@12381>    BSR.w writeword
000297C6 <AmiBlitz3.ab3@12382>   MOVE.w arrmul6(PC),D1
000297C8 <AmiBlitz3.ab3@12383>   OR.w D2,D1
000297CA <AmiBlitz3.ab3@12384>   SUBQ.w #1,D1
000297CE <AmiBlitz3.ab3@12385>    BSR.w writeword
000297D2 <AmiBlitz3.ab3@12386>   MOVE.w arrmul7(PC),D1
000297D4 <AmiBlitz3.ab3@12387>   OR.w D2,D1
000297D6 <AmiBlitz3.ab3@12388>   SUBQ.w #1,D1
000297D8 <AmiBlitz3.ab3@12389>   MOVE.w D2,D3
000297DA <AmiBlitz3.ab3@12390>   LSL.w #8,D3
000297DC <AmiBlitz3.ab3@12391>   LSL.w #1,D3
000297DE <AmiBlitz3.ab3@12392>   OR.w D3,D1
000297E2 <AmiBlitz3.ab3@12393>    BSR.w writeword
000297E6 <AmiBlitz3.ab3@12394>   MOVE.w arrmul8(PC),D1
000297E8 <AmiBlitz3.ab3@12395>   MOVE.w D2,D3
000297EA <AmiBlitz3.ab3@12396>   SUBQ.w #1,D3
000297EC <AmiBlitz3.ab3@12397>   LSL.w #8,D3
000297EE <AmiBlitz3.ab3@12398>   LSL.w #1,D3
000297F0 <AmiBlitz3.ab3@12399>   OR.w D3,D1
000297F4 <AmiBlitz3.ab3@12400>    BSR.w writeword
000297FA <AmiBlitz3.ab3@12401>   MOVE.w regnum,D1
000297FC <AmiBlitz3.ab3@12402>   SUBQ.w #1,D1
000297FE <AmiBlitz3.ab3@12403>   LSL.w #8,D1
00029800 <AmiBlitz3.ab3@12404>   LSL.w #1,D1
00029804 <AmiBlitz3.ab3@12405>   ORI.w #$D080,D1
0002980A <AmiBlitz3.ab3@12406>   OR.w regnum,D1
0002980E <AmiBlitz3.ab3@12407> BRA.w writeword
00029810 <AmiBlitz3.ab3@12415> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
00029812 <AmiBlitz3.ab3@12416> arrmul2:   MOVE  d0,d0
00029816 <AmiBlitz3.ab3@12417> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002981A <AmiBlitz3.ab3@12418> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002981C <AmiBlitz3.ab3@12420> arrmul5:   SWAP d0
0002981E <AmiBlitz3.ab3@12421> arrmul6:   CLR d0
00029820 <AmiBlitz3.ab3@12422> arrmul7:   ADD.l d0,d0
00029822 <AmiBlitz3.ab3@12423> arrmul8:   MOVE.l (a7)+,d0
00029826 <AmiBlitz3.ab3@12428> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002982A <AmiBlitz3.ab3@12429> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002982C <AmiBlitz3.ab3@12430> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
00029832 <AmiBlitz3.ab3@12448>   CLR.l lastoffset_org
00029838 <AmiBlitz3.ab3@12449>   BTST #$1,$7(A3)
0002983C <AmiBlitz3.ab3@12450>    BEQ.w calcvar__notarr
00029842 <AmiBlitz3.ab3@12451>   MOVE.w notshared,D1
00029846 <AmiBlitz3.ab3@12452>    BNE.w noarrerr
0002984A <AmiBlitz3.ab3@12453>    BSR.w get1bytemain
0002984E <AmiBlitz3.ab3@12454>   CMP.w #$29,D0
00029852 <AmiBlitz3.ab3@12455>    BNE.w calcvar__notalist
00029858 <AmiBlitz3.ab3@12456>   BTST #$0,$6(A3)
0002985C <AmiBlitz3.ab3@12457>    BEQ.w nolisterr
00029864 <AmiBlitz3.ab3@12458>   MOVE.w $4(A3),listcode1+2
00029868 <AmiBlitz3.ab3@12459>   MOVE.l listcode1(PC),D1
0002986C <AmiBlitz3.ab3@12460>    BSR.w pokela5s
00029870 <AmiBlitz3.ab3@12461>   MOVE.l listcode2(PC),D1
00029874 <AmiBlitz3.ab3@12462>    BSR.w writelong
0002987A <AmiBlitz3.ab3@12463>   TST.b debugmode
0002987E <AmiBlitz3.ab3@12464>    BEQ.w calcvar__nolrerr
00029880 <AmiBlitz3.ab3@12468>   MOVE.l A2,-(A7)
00029884 <AmiBlitz3.ab3@12469>   MOVE.w #$C315,D1
00029888 <AmiBlitz3.ab3@12470>    BSR.w Atokejsr
0002988A <AmiBlitz3.ab3@12471>   MOVEA.l (A7)+,A2
0002988E <AmiBlitz3.ab3@12474>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
00029892 <AmiBlitz3.ab3@12476>    BSR.w writeword
00029896 <AmiBlitz3.ab3@12477> BRA.w calcvar__normalar
00029898 <AmiBlitz3.ab3@12480> calcvar__listoff:   Ds.w 1
0002989E <AmiBlitz3.ab3@12484>   CLR.w calcvar__listoff
000298A4 <AmiBlitz3.ab3@12485>   BTST #$0,$6(A3)
000298A8 <AmiBlitz3.ab3@12486>    BEQ.w calcvar__knop
000298B0 <AmiBlitz3.ab3@12487>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
000298B4 <AmiBlitz3.ab3@12490>   MOVEM.l A2-A3,-(A7)
000298BA <AmiBlitz3.ab3@12491>   MOVE.w varmode,-(A7)
000298BE <AmiBlitz3.ab3@12492>   MOVE.w $8(A3),-(A7)                                       ;number of dims
000298C2 <AmiBlitz3.ab3@12493>   MOVE.w $4(A3),-(A7)                                       ;varoff
000298C4 <AmiBlitz3.ab3@12494>   MOVE.l A2,-(A7)
000298CA <AmiBlitz3.ab3@12495>   MOVE.w flagmask,-(A7)
000298D4 <AmiBlitz3.ab3@12497>   MOVE.w oldqflag,instringon
000298DA <AmiBlitz3.ab3@12498>   MOVEA.l lastsourcepos,A5
000298DE <AmiBlitz3.ab3@12499>    BSR.w arreval
000298E4 <AmiBlitz3.ab3@12500>   MOVE.w (A7)+,flagmask
000298EC <AmiBlitz3.ab3@12501>   MOVE.w $8(A7),varmode
000298F2 <AmiBlitz3.ab3@12502>   TST.b debugmode
000298F6 <AmiBlitz3.ab3@12503>    BEQ.w calcvar__noszchk
000298F8 <AmiBlitz3.ab3@12507>   MOVEA.l (A7)+,A2
000298FA <AmiBlitz3.ab3@12508>   MOVEQ.l #$04,D1
00029902 <AmiBlitz3.ab3@12509>   BTST #$0,flagmask+1                                      ;pointer?
00029906 <AmiBlitz3.ab3@12510>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002990A <AmiBlitz3.ab3@12511>   MOVE.w $8(A2),D1
0002990E <AmiBlitz3.ab3@12514>   ADD.w calcvar__listoff(PC),D1
00029912 <AmiBlitz3.ab3@12515>   BSR.w JL_0_B6DE
00029918 <AmiBlitz3.ab3@12516>   ADDQ.w #1,regnum
0002991A <AmiBlitz3.ab3@12519>   ADDQ.w #4,(A7)
0002991E <AmiBlitz3.ab3@12520>   TST.w $4(A7)
00029922 <AmiBlitz3.ab3@12521>    BEQ.w calcvar__isglob
00029924 <AmiBlitz3.ab3@12522>   SUBQ.w #8,(A7)                                           ;range check local array
0002992A <AmiBlitz3.ab3@12525>   TST.b debugmode
0002992E <AmiBlitz3.ab3@12526>    BEQ.w calcvar__noer1
00029934 <AmiBlitz3.ab3@12527>   MOVE.w regnum,D1
00029936 <AmiBlitz3.ab3@12528>   SUBQ.w #1,D1
00029938 <AmiBlitz3.ab3@12529>   LSL.w #8,D1
0002993A <AmiBlitz3.ab3@12530>   LSL.w #1,D1
0002993E <AmiBlitz3.ab3@12531>   OR.w zarrchk(PC),D1
00029942 <AmiBlitz3.ab3@12532>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
00029944 <AmiBlitz3.ab3@12533>   MOVE.w (A7),D1
00029948 <AmiBlitz3.ab3@12534>    BSR.w writeword
0002994C <AmiBlitz3.ab3@12535>   MOVE.l arrchk2(PC),D1
00029950 <AmiBlitz3.ab3@12536>    BSR.w writelong
00029954 <AmiBlitz3.ab3@12537>   MOVE.w #$C309,D1
00029958 <AmiBlitz3.ab3@12538>    BSR.w Atokejsr
0002995C <AmiBlitz3.ab3@12541>   SUBQ.w #1,$2(A7)
00029960 <AmiBlitz3.ab3@12542>    BEQ.w calcvar__ardone
00029964 <AmiBlitz3.ab3@12543>   CMP.w #$2C,D0
00029968 <AmiBlitz3.ab3@12544>    BNE.w syntaxerr
0002996E <AmiBlitz3.ab3@12545>    TST.b fast
00029972 <AmiBlitz3.ab3@12546>    BNE 'l1
00029976 <AmiBlitz3.ab3@12547>    BSR.w arrevalchk
0002997A <AmiBlitz3.ab3@12548> BRA 'l2
0002997E <AmiBlitz3.ab3@12551>   BSR arreval
00029986 <AmiBlitz3.ab3@12554>   MOVE.w $4(A7),varmode
0002998A <AmiBlitz3.ab3@12555>   BSR.w JL_0_9052
0002998E <AmiBlitz3.ab3@12556> BRA.w calcvar__arloop
00029992 <AmiBlitz3.ab3@12560>   CMP.w #$29,D0
00029996 <AmiBlitz3.ab3@12561>    BNE.w syntaxerr
0002999C <AmiBlitz3.ab3@12562>   SUBQ.w #1,regnum
0002999E <AmiBlitz3.ab3@12563>   ADDQ.w #6,A7
000299A2 <AmiBlitz3.ab3@12564>   MOVEM.l (A7)+,A2-A3
000299AA <AmiBlitz3.ab3@12565>   MOVE.w $4(A3),movea5a0+2
000299B0 <AmiBlitz3.ab3@12566>   MOVE.l movea5a0,D1
000299B4 <AmiBlitz3.ab3@12567>    BSR.w pokela5s
000299BA <AmiBlitz3.ab3@12568>   MOVE.w regnum,D1
000299BE <AmiBlitz3.ab3@12569>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
000299C2 <AmiBlitz3.ab3@12570>    BSR.w writeword
000299C8 <AmiBlitz3.ab3@12571>   BTST #$0,$6(A3)
000299CC <AmiBlitz3.ab3@12572>    BEQ.w calcvar__normalar
000299D0 <AmiBlitz3.ab3@12576>   MOVE.w listarfix(PC),D1
000299D4 <AmiBlitz3.ab3@12577>    BSR.w writeword
000299D8 <AmiBlitz3.ab3@12580>   BSR.w get1bytemain
000299DE <AmiBlitz3.ab3@12584>   BTST #$0,$7(A3)
000299E2 <AmiBlitz3.ab3@12585>    BEQ.w calcvar__noppnt
000299E6 <AmiBlitz3.ab3@12586>   CMP.w #$5C,D0
000299EA <AmiBlitz3.ab3@12587>    BNE.w calcvar__pmskip
000299EE <AmiBlitz3.ab3@12588>   MOVE.w calcvar__pfix(PC),D1
000299F2 <AmiBlitz3.ab3@12589>    BSR.w writeword
000299F6 <AmiBlitz3.ab3@12592>   MOVE.w #$8000,D2
000299FA <AmiBlitz3.ab3@12593> BRA.w calcvar__loopml
000299FE <AmiBlitz3.ab3@12596>   MOVE.w #$C000,D2
00029A02 <AmiBlitz3.ab3@12597> BRA.w calcvar__loopml
00029A04 <AmiBlitz3.ab3@12601> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
00029A08 <AmiBlitz3.ab3@12606>   CMP.w #$28,D0
00029A0C <AmiBlitz3.ab3@12607>    BEQ.w noarrerr
00029A14 <AmiBlitz3.ab3@12608>   CMPI.l #$100,$4(A2)
00029A18 <AmiBlitz3.ab3@12609>    BCS.w calcvar__simpvar
00029A1E <AmiBlitz3.ab3@12610>   BTST #$0,$7(A3)
00029A22 <AmiBlitz3.ab3@12611>    BEQ.w calcvar__notap
00029A26 <AmiBlitz3.ab3@12615>   CMP.w #$5C,D0
00029A2A <AmiBlitz3.ab3@12616>    BEQ.w calcvar__notap
00029A2C <AmiBlitz3.ab3@12617>   MOVEQ.l #$00,D2
00029A30 <AmiBlitz3.ab3@12618> BRA.w calcvar__simpvar2
00029A34 <AmiBlitz3.ab3@12621>   MOVE.w #$8000,D2
00029A3C <AmiBlitz3.ab3@12622>   MOVE.w $4(A3),movea5a0+2
00029A42 <AmiBlitz3.ab3@12623>   MOVE.l movea5a0,D1
00029A46 <AmiBlitz3.ab3@12624>    BSR.w pokela5s                                         ;move.l x(a5),a2
00029A4C <AmiBlitz3.ab3@12626>    TST.b debugmode
00029A50 <AmiBlitz3.ab3@12627>    BEQ.w 'skip
00029A54 <AmiBlitz3.ab3@12628>    MOVE.w #$c320,D1
00029A5A <AmiBlitz3.ab3@12629>    JSR Atokejsr
00029A5C <AmiBlitz3.ab3@12633>   MOVEQ.l #$00,D3
00029A60 <AmiBlitz3.ab3@12636>   CMP.w #$5C,D0
00029A64 <AmiBlitz3.ab3@12637>    BNE.w calcvar__done
00029A6C <AmiBlitz3.ab3@12638>   CMPI.l #$100,$4(A2)
00029A70 <AmiBlitz3.ab3@12639>    BCS.w rongtypeerr
00029A72 <AmiBlitz3.ab3@12640>   MOVE.w D2,-(A7)
00029A76 <AmiBlitz3.ab3@12641>    BSR.w getparameter2
00029A7A <AmiBlitz3.ab3@12642>    BEQ.w syntaxerr
00029A7C <AmiBlitz3.ab3@12643>   ADDQ.w #4,A2
00029A80 <AmiBlitz3.ab3@12644>    BSR.w findvariable2
00029A84 <AmiBlitz3.ab3@12645>    BNE.w noofferr
00029A86 <AmiBlitz3.ab3@12646>   MOVE.w (A7)+,D2
00029A88 <AmiBlitz3.ab3@12647>   MOVEA.l A2,A3                                             ;pointer to offset
00029A8C <AmiBlitz3.ab3@12648>   MOVEA.l $A(A3),A2                                         ;pointer to type
00029A8E <AmiBlitz3.ab3@12649>   MOVEQ #0,d1
00029A92 <AmiBlitz3.ab3@12650>   MOVE.w 4(a3),d1
00029A94 <AmiBlitz3.ab3@12651>   ADD.l d1,d3
00029A9A <AmiBlitz3.ab3@12653>   MOVE.l A3,lastoffset_org
00029A9E <AmiBlitz3.ab3@12654>   CMP.w #$5B,D0
00029AA2 <AmiBlitz3.ab3@12655>    BNE.w calcvar__realdone
00029AA8 <AmiBlitz3.ab3@12656>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
00029AAC <AmiBlitz3.ab3@12657>    BEQ.w rongtypeerr
00029AB0 <AmiBlitz3.ab3@12658>    BSR.w JL_0_9004
00029AB4 <AmiBlitz3.ab3@12659>   MOVEM.l A2-A3,-(A7)
00029ABA <AmiBlitz3.ab3@12660>   MOVE.w varmode,-(A7)
00029AC0 <AmiBlitz3.ab3@12661>   MOVE.l lastoffset_org,-(A7)
00029AC6 <AmiBlitz3.ab3@12662>   MOVE.w pusha2,D1
00029ACA <AmiBlitz3.ab3@12663>    BSR.w writeword
00029ACC <AmiBlitz3.ab3@12664>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
00029AD6 <AmiBlitz3.ab3@12665>   MOVE.l destpointer,deststore
00029ADC <AmiBlitz3.ab3@12666>    MOVE.l rightsidetype,-(a7)
00029AE2 <AmiBlitz3.ab3@12667>    MOVE.l leftsidetype,-(a7)
00029AE8 <AmiBlitz3.ab3@12668>    CLR.l rightsidetype
00029AEE <AmiBlitz3.ab3@12669>    CLR.l leftsidetype
00029AF2 <AmiBlitz3.ab3@12670>    BSR.w eval
00029AF8 <AmiBlitz3.ab3@12671>    MOVE.l (a7)+,rightsidetype
00029AFE <AmiBlitz3.ab3@12672>    MOVE.l (a7)+,leftsidetype
00029B02 <AmiBlitz3.ab3@12673>   CMP.w #$5D,D0
00029B06 <AmiBlitz3.ab3@12674>    BNE.w syntaxerr
00029B0C <AmiBlitz3.ab3@12675>   TST.b fast                                               ;a2,-(a7) array
00029B10 <AmiBlitz3.ab3@12676>   BEQ calcvar__loop0_l10
00029B16 <AmiBlitz3.ab3@12680>   MOVE.l destpointer,d1
00029B1C <AmiBlitz3.ab3@12681>   SUB.l deststore,d1
00029B22 <AmiBlitz3.ab3@12682>   CMP.l #4,d1
00029B26 <AmiBlitz3.ab3@12683>   BNE calcvar__loop0_l10
00029B2C <AmiBlitz3.ab3@12684>   MOVE.l destpointer,a4
00029B32 <AmiBlitz3.ab3@12685>   MOVE.l -4(a4),-6(a4)
00029B38 <AmiBlitz3.ab3@12686>   SUBQ.l #2,destpointer
00029B3E <AmiBlitz3.ab3@12687>   CLR.l imm_addr
00029B44 <AmiBlitz3.ab3@12688>   CLR.l load_var_addr
00029B48 <AmiBlitz3.ab3@12689> BRA calcvar__loop0_l20
00029B4E <AmiBlitz3.ab3@12692>   MOVE.w pulla2,D1
00029B52 <AmiBlitz3.ab3@12693>    BSR.w writeword
00029B58 <AmiBlitz3.ab3@12696>   MOVE.l (A7)+,lastoffset_org
00029B5E <AmiBlitz3.ab3@12697>   MOVE.w (A7)+,varmode
00029B62 <AmiBlitz3.ab3@12698>   MOVEM.l (A7)+,A2-A3
00029B68 <AmiBlitz3.ab3@12704>   TST.w debugmode
00029B6C <AmiBlitz3.ab3@12705>    BEQ.b calcvar__nobchk
00029B70 <AmiBlitz3.ab3@12706>   MOVE.w $8(A3),D1
00029B74 <AmiBlitz3.ab3@12707>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
00029B7A <AmiBlitz3.ab3@12711>   MOVE.w D1,brchkcode+2
00029B80 <AmiBlitz3.ab3@12712>   MOVE.w regnum,D1
00029B82 <AmiBlitz3.ab3@12713>   LSL.w #8,D1
00029B84 <AmiBlitz3.ab3@12714>   LSL.w #1,D1
00029B88 <AmiBlitz3.ab3@12715>   OR.w brchkcode0(PC),D1
00029B8E <AmiBlitz3.ab3@12716>   MOVE.w D1,brchkcode
00029B92 <AmiBlitz3.ab3@12717>   MOVE.l brchkcode(PC),D1
00029B96 <AmiBlitz3.ab3@12718>    BSR.w writelong
00029B9A <AmiBlitz3.ab3@12719>   MOVE.l brchkcode+4(PC),D1
00029B9E <AmiBlitz3.ab3@12720>    BSR.w writelong
00029BA2 <AmiBlitz3.ab3@12721>   MOVE.w brchkcode+8(PC),D1
00029BA6 <AmiBlitz3.ab3@12722>    BSR.w writeword
00029BA8 <AmiBlitz3.ab3@12725>   MOVEQ.l #$04,D1
00029BAE <AmiBlitz3.ab3@12726>   BTST #$0,$7(A3)
00029BB2 <AmiBlitz3.ab3@12727>    BNE.w calcvar__dothemul
00029BB6 <AmiBlitz3.ab3@12728>   MOVE.w $8(A2),D1
00029BBA <AmiBlitz3.ab3@12731>   BSR.w JL_0_B6DE
00029BC0 <AmiBlitz3.ab3@12732>   MOVE.w addrega2,D1
00029BC6 <AmiBlitz3.ab3@12733>   OR.w regnum,D1
00029BCA <AmiBlitz3.ab3@12734>    OR.w #$100,d1                                           ;>32kb types
00029BCE <AmiBlitz3.ab3@12735>    BSR.w writeword
00029BD2 <AmiBlitz3.ab3@12736>    BSR.w get1bytemain
00029BD4 <AmiBlitz3.ab3@12737>   MOVEQ.l #$00,D3
00029BD8 <AmiBlitz3.ab3@12738>   MOVE.w #$8000,D2
00029BDE <AmiBlitz3.ab3@12741>   BTST #$0,$7(A3)
00029BE2 <AmiBlitz3.ab3@12742>    BNE.w calcvar__pointer
00029BE6 <AmiBlitz3.ab3@12743> BRA.w calcvar__loop0
00029BEA <AmiBlitz3.ab3@12747>  CMP.w #$5C,D0
00029BEE <AmiBlitz3.ab3@12748>    BNE.w calcvar__done3
00029BF0 <AmiBlitz3.ab3@12749>   TST.w D3
00029BF4 <AmiBlitz3.ab3@12750>    BNE.w calcvar__pskip
00029BFA <AmiBlitz3.ab3@12751>   MOVE.w movea0,D1
00029BFE <AmiBlitz3.ab3@12752>    BSR.w writeword
00029C02 <AmiBlitz3.ab3@12753> BRA.w calcvar__pmore
00029C08 <AmiBlitz3.ab3@12756>   MOVE.w D3,movea0a0+2
00029C0E <AmiBlitz3.ab3@12757>   MOVE.l movea0a0,D1
00029C12 <AmiBlitz3.ab3@12758>    BSR.w writelong
00029C18 <AmiBlitz3.ab3@12761>   BTST #$2,$7(A3)
00029C1C <AmiBlitz3.ab3@12762>    BEQ.w calcvar__loopml
00029C22 <AmiBlitz3.ab3@12763>   MOVE.l adda0a0,D1
00029C26 <AmiBlitz3.ab3@12764>    BSR.w writelong
00029C2A <AmiBlitz3.ab3@12765> BRA.w calcvar__loopml
00029C2E <AmiBlitz3.ab3@12768>   BSET #$E,D2
00029C34 <AmiBlitz3.ab3@12769>   BTST #$2,$7(A3)
00029C38 <AmiBlitz3.ab3@12770>    BNE.w calcvar__done
00029C3C <AmiBlitz3.ab3@12771>   BSET #$D,D2
00029C44 <AmiBlitz3.ab3@12774>   CMPI.l #$100,$4(A2)
00029C48 <AmiBlitz3.ab3@12775>    BCC.w calcvar__done2
00029C4C <AmiBlitz3.ab3@12776>   MOVE.b $7(A2),D2
00029C50 <AmiBlitz3.ab3@12779> BRA.w JL_0_9004
00029C54 <AmiBlitz3.ab3@12782>   MOVE.w $6(A2),D2
00029C58 <AmiBlitz3.ab3@12785>   MOVE.w $4(A3),D3
00029C5E <AmiBlitz3.ab3@12786>   BTST #$0,$7(A3)
00029C62 <AmiBlitz3.ab3@12787>    BEQ.w calcvar__nopoint
00029C66 <AmiBlitz3.ab3@12788>   BSET #$E,D2
00029C68 <AmiBlitz3.ab3@12791> RTS
00029C6C <AmiBlitz3.ab3@12795> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
00029C70 <AmiBlitz3.ab3@12796> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
00029C72 <AmiBlitz3.ab3@12797>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
00029C74 <AmiBlitz3.ab3@12798>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
00029C76 <AmiBlitz3.ab3@12799>              Dc.b $4E,$40                                  ;TRAP    #00
00029C7C <AmiBlitz3.ab3@12807>   TST.w varmode
00029C80 <AmiBlitz3.ab3@12808>    BEQ.w writeword
00029C84 <AmiBlitz3.ab3@12809>   BCLR #$0,D1
00029C88 <AmiBlitz3.ab3@12810> BRA.w writeword
00029C8E <AmiBlitz3.ab3@12813>   TST.w varmode
00029C92 <AmiBlitz3.ab3@12814>    BEQ.w writeword
00029C96 <AmiBlitz3.ab3@12815>   BCLR #$9,D1
00029C9A <AmiBlitz3.ab3@12816> BRA.w writeword
00029CA0 <AmiBlitz3.ab3@12819>   TST.w proceduremode
00029CA4 <AmiBlitz3.ab3@12820>    BEQ.w writelong
00029CA8 <AmiBlitz3.ab3@12821>   BCLR #$19,D1
00029CAC <AmiBlitz3.ab3@12822> BRA.w writelong
00029CB2 <AmiBlitz3.ab3@12825>   TST.w varmode
00029CB6 <AmiBlitz3.ab3@12826>   BEQ.w writelong
00029CBA <AmiBlitz3.ab3@12827>   BCLR #$10,D1
00029CC0 <AmiBlitz3.ab3@12830>   ADDQ.l #1,destpointer
00029CC8 <AmiBlitz3.ab3@12831>   BCLR #$0,destpointer+3
00029CCE <AmiBlitz3.ab3@12832>   MOVEA.l destpointer,A4
00029CD4 <AmiBlitz3.ab3@12833>   CMPA.l destbufferend,A4
00029CD8 <AmiBlitz3.ab3@12834>    BCC.w writeword__overa
00029CDA <AmiBlitz3.ab3@12835>   MOVE.l D1,(A4)+
00029CE0 <AmiBlitz3.ab3@12838>   MOVE.l A4,destpointer
00029CE4 <AmiBlitz3.ab3@12839>   CMPA.l bigpc(PC),A4
00029CE8 <AmiBlitz3.ab3@12840>    BHI.w writeword__nbp
00029CEA <AmiBlitz3.ab3@12841> RTS
00029CF2 <AmiBlitz3.ab3@12844>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029CF8 <AmiBlitz3.ab3@12845>   CLR.b fast
00029CFE <AmiBlitz3.ab3@12846>   CLR.b fpu
00029D04 <AmiBlitz3.ab3@12847>   CLR.b iee
00029D06 <AmiBlitz3.ab3@12848>   ADDQ.w #4,A4
00029D0A <AmiBlitz3.ab3@12849> BRA.w writeword__msa
00029D10 <AmiBlitz3.ab3@12855>   ADDQ.l #1,destpointer
00029D18 <AmiBlitz3.ab3@12856>   BCLR #$0,destpointer+3
00029D1E <AmiBlitz3.ab3@12857>   MOVEA.l destpointer,A4
00029D24 <AmiBlitz3.ab3@12858>   CMPA.l destbufferend,A4
00029D28 <AmiBlitz3.ab3@12859>    BCC.w writeword__over
00029D2A <AmiBlitz3.ab3@12860>   MOVE.w D1,(A4)+
00029D30 <AmiBlitz3.ab3@12863>   MOVE.l A4,destpointer
00029D34 <AmiBlitz3.ab3@12864>   CMPA.l bigpc(PC),A4
00029D38 <AmiBlitz3.ab3@12865>    BHI.w writeword__nbp
00029D3A <AmiBlitz3.ab3@12866> RTS
00029D40 <AmiBlitz3.ab3@12869>   ADDQ.l #1,destpointer
00029D48 <AmiBlitz3.ab3@12870>   BCLR #$0,destpointer+3
00029D4E <AmiBlitz3.ab3@12871>   MOVEA.l destpointer,A4
00029D54 <AmiBlitz3.ab3@12872>   CMPA.l destbufferend,A4
00029D58 <AmiBlitz3.ab3@12873>    BCC.w writeword__over
00029D5A <AmiBlitz3.ab3@12874>   MOVE.w D1,(A4)+
00029D60 <AmiBlitz3.ab3@12875>   MOVE.l A4,destpointer
00029D64 <AmiBlitz3.ab3@12876>   CMPA.l bigpc(PC),A4
00029D68 <AmiBlitz3.ab3@12877>    BHI.w writeword__nbp
00029D6A <AmiBlitz3.ab3@12878> RTS
00029D70 <AmiBlitz3.ab3@12881>   TST.w cfetchmode
00029D74 <AmiBlitz3.ab3@12882>   BNE.w writeword__nbp2
00029D7A <AmiBlitz3.ab3@12883>   MOVE.l A4,bigpc
00029D7C <AmiBlitz3.ab3@12886> RTS
00029D84 <AmiBlitz3.ab3@12889>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029D86 <AmiBlitz3.ab3@12890>   ADDQ.w #2,A4
00029D8C <AmiBlitz3.ab3@12891>   CLR.b fast
00029D92 <AmiBlitz3.ab3@12892>   CLR.b fpu
00029D98 <AmiBlitz3.ab3@12893>   CLR.b iee
00029D9C <AmiBlitz3.ab3@12894> BRA.w writeword__ms
00029DA2 <AmiBlitz3.ab3@12898>   MOVEA.l destpointer,A4
00029DA8 <AmiBlitz3.ab3@12899>   CMPA.l destbufferend,A4
00029DAC <AmiBlitz3.ab3@12900>    BCC.w writebyte__over
00029DAE <AmiBlitz3.ab3@12901>   MOVE.b D1,(A4)+
00029DB4 <AmiBlitz3.ab3@12904>   MOVE.l A4,destpointer
00029DB8 <AmiBlitz3.ab3@12905>   CMPA.l bigpc(PC),A4
00029DBC <AmiBlitz3.ab3@12906>    BHI.w writebyte__nbp
00029DBE <AmiBlitz3.ab3@12907> RTS
00029DC4 <AmiBlitz3.ab3@12910>   TST.w cfetchmode
00029DC8 <AmiBlitz3.ab3@12911>    BNE.w writebyte__nbp2
00029DCE <AmiBlitz3.ab3@12912>   MOVE.l A4,bigpc
00029DD0 <AmiBlitz3.ab3@12915> RTS
00029DD8 <AmiBlitz3.ab3@12918>   MOVE.w #-1,dontwrite
00029DDA <AmiBlitz3.ab3@12919>   ADDQ.w #1,A4
00029DE0 <AmiBlitz3.ab3@12920>   CLR.b fast
00029DE6 <AmiBlitz3.ab3@12921>   CLR.b fpu
00029DEC <AmiBlitz3.ab3@12922>   CLR.b iee
00029DF0 <AmiBlitz3.ab3@12923> BRA.w writebyte__ms
00029DF4 <AmiBlitz3.ab3@12926> bigpc:   Ds.l 1
00029DF6 <AmiBlitz3.ab3@12930>   MOVE.w (A0)+,D1
00029DFA <AmiBlitz3.ab3@12931>   BSR.w writeword
00029DFC <AmiBlitz3.ab3@12934>     CMPA.l A1,A0
00029E00 <AmiBlitz3.ab3@12935>     BCC.w pokecode__done
00029E02 <AmiBlitz3.ab3@12936>       MOVE.w (A0)+,D1
00029E06 <AmiBlitz3.ab3@12937>       BSR.w writeword
00029E0A <AmiBlitz3.ab3@12938> BRA.w pokecode__loop
00029E0C <AmiBlitz3.ab3@12941> RTS
00029E0E <AmiBlitz3.ab3@12944>   MOVE.w (A0)+,D1
00029E12 <AmiBlitz3.ab3@12945>   BSR.w writeword
00029E14 <AmiBlitz3.ab3@12946>   CMPA.l A1,A0
00029E18 <AmiBlitz3.ab3@12947>   BCS.w pokecode2
00029E1A <AmiBlitz3.ab3@12948> RTS
00029E20 <AmiBlitz3.ab3@12954>   TST.b iniffcommand
00029E24 <AmiBlitz3.ab3@12955>   BEQ 'l1
00029E28 <AmiBlitz3.ab3@12956>     MOVE.w #$4880,D1
00029E2E <AmiBlitz3.ab3@12957>     OR.w regnum,D1
00029E32 <AmiBlitz3.ab3@12958>     BSR writeword
00029E34 <AmiBlitz3.ab3@12961> RTS
00029E38 <AmiBlitz3.ab3@12964>   BSR.w convert_byte_to_word
00029E3E <AmiBlitz3.ab3@12967>   TST.b iee
00029E42 <AmiBlitz3.ab3@12968>   BEQ 'old
00029E46 <AmiBlitz3.ab3@12969>   CMP.b #5,d2
00029E4A <AmiBlitz3.ab3@12970>   BEQ wtof
00029E4E <AmiBlitz3.ab3@12973>   MOVE.w #$48C0,D1
00029E54 <AmiBlitz3.ab3@12974>   OR.w regnum,D1
00029E58 <AmiBlitz3.ab3@12975> BRA.w writeword
00029E5A <AmiBlitz3.ab3@12978>   MOVEQ #0,d0
00029E60 <AmiBlitz3.ab3@12979>   MOVE.w regnum,d0
00029E62 <AmiBlitz3.ab3@12980>   ASL.l #7,d0
00029E68 <AmiBlitz3.ab3@12981>   MOVE.l #$f2005000,d1
00029E6A <AmiBlitz3.ab3@12982>   OR.l d0,d1
00029E6C <AmiBlitz3.ab3@12983>   ASL.l #1,d0
00029E6E <AmiBlitz3.ab3@12984>   ASL.l #8,d0
00029E70 <AmiBlitz3.ab3@12985>   OR.l d0,d1
00029E74 <AmiBlitz3.ab3@12986> BRA writelong
00029E78 <AmiBlitz3.ab3@12990>   BSR.w convert_byte_to_word
00029E7C <AmiBlitz3.ab3@12993>   MOVE.w #$4840,D1
00029E82 <AmiBlitz3.ab3@12994>   OR.w regnum,D1
00029E86 <AmiBlitz3.ab3@12995>    BSR.w writeword
00029E8A <AmiBlitz3.ab3@12996>   MOVE.w #$4240,D1
00029E90 <AmiBlitz3.ab3@12997>   OR.w regnum,D1
00029E94 <AmiBlitz3.ab3@12998> BRA.w writeword
00029E98 <AmiBlitz3.ab3@13002>   CMP.w #$ffdc,d1
00029E9C <AmiBlitz3.ab3@13003>   BNE 'negfpu
00029E9E <AmiBlitz3.ab3@13004>   MOVEQ #0,d0
00029EA4 <AmiBlitz3.ab3@13005>   MOVE.w regnum,d0
00029EA6 <AmiBlitz3.ab3@13006>   ASL.l #7,d0
00029EAC <AmiBlitz3.ab3@13007>   MOVE.l #$f2004000,d1
00029EAE <AmiBlitz3.ab3@13008>   OR.l d0,d1
00029EB0 <AmiBlitz3.ab3@13009>   ASL.l #1,d0
00029EB2 <AmiBlitz3.ab3@13010>   ASL.l #8,d0
00029EB4 <AmiBlitz3.ab3@13011>   OR.l d0,d1
00029EB8 <AmiBlitz3.ab3@13012> BRA writelong
00029EBA <AmiBlitz3.ab3@13016>   MOVEQ #0,d1
00029EC0 <AmiBlitz3.ab3@13017>   MOVE.w regnum,d1                                         ;fpu neg
00029EC2 <AmiBlitz3.ab3@13018>   ASL.l #7,d1
00029EC8 <AmiBlitz3.ab3@13019>   OR.l #$f200001a,d1
00029ECA <AmiBlitz3.ab3@13020>   MOVE.l d0,-(a7)
00029ECC <AmiBlitz3.ab3@13021>   MOVEQ #0,d0
00029ED2 <AmiBlitz3.ab3@13022>   MOVE.w regnum,d0
00029ED4 <AmiBlitz3.ab3@13023>   ASL.l #8,d0
00029ED6 <AmiBlitz3.ab3@13024>   ASL.l #2,d0
00029ED8 <AmiBlitz3.ab3@13025>   OR.l d0,d1
00029EDA <AmiBlitz3.ab3@13026>   MOVE.l (a7)+,d0
00029EDE <AmiBlitz3.ab3@13027> BRA writelong
00029EE4 <AmiBlitz3.ab3@13030>    TST.b iee
00029EE8 <AmiBlitz3.ab3@13031>    BNE wtof
00029EEC <AmiBlitz3.ab3@13032>    BSR.w convert_byte_to_long
00029EF0 <AmiBlitz3.ab3@13035>    MOVE.w #$FFDC,D1
00029EF6 <AmiBlitz3.ab3@13038>    TST.b iee
00029EFA <AmiBlitz3.ab3@13039>    BNE ltof
00029F00 <AmiBlitz3.ab3@13040>    MOVE.w D1,libjsr+2
00029F04 <AmiBlitz3.ab3@13041>    BSR.w JL_0_AD40
00029F06 <AmiBlitz3.ab3@13042>   MOVE.l D4,D1
00029F0A <AmiBlitz3.ab3@13043>    BSR.w JL_0_AD38
00029F0E <AmiBlitz3.ab3@13044>   MOVE.w #$C900,D1
00029F12 <AmiBlitz3.ab3@13045>    BSR.w Atokejsr
00029F16 <AmiBlitz3.ab3@13046>    BSR.w JL_0_A352
00029F1C <AmiBlitz3.ab3@13047>   MOVE.l libjsr,D1
00029F20 <AmiBlitz3.ab3@13048>    BSR.w writelong
00029F24 <AmiBlitz3.ab3@13049>    BSR.w JL_0_A36E
00029F26 <AmiBlitz3.ab3@13050>   MOVE.l D5,D1
00029F2A <AmiBlitz3.ab3@13051> BRA.w JL_0_AD38
00029F2C <AmiBlitz3.ab3@13054> RTS
00029F30 <AmiBlitz3.ab3@13057>   MOVE.w #$C317,D1
00029F36 <AmiBlitz3.ab3@13058>   TST.b typecheck
00029F3A <AmiBlitz3.ab3@13059>   BEQ 'l1
00029F40 <AmiBlitz3.ab3@13060>    TST.b notypecheck
00029F44 <AmiBlitz3.ab3@13061>    BNE 'l1
00029F4A <AmiBlitz3.ab3@13062>    TST.l lasttoken
00029F50 <AmiBlitz3.ab3@13069>   TST.b debugmode
00029F54 <AmiBlitz3.ab3@13070>    BEQ.w JL_0_9696
00029F5C <AmiBlitz3.ab3@13071>   BTST #$7,overflowcheck
00029F60 <AmiBlitz3.ab3@13072>    BEQ.w JL_0_9696
00029F66 <AmiBlitz3.ab3@13073>   TST.w cfetchmode
00029F6A <AmiBlitz3.ab3@13074>    BNE.w JL_0_9696
00029F70 <AmiBlitz3.ab3@13075>   TST.w regnum
00029F74 <AmiBlitz3.ab3@13076>    BEQ.w JL_0_968A
00029F76 <AmiBlitz3.ab3@13077>   MOVE.w D1,-(A7)
00029F7A <AmiBlitz3.ab3@13078>   MOVE.w JL_0_9698(PC),D1
00029F7E <AmiBlitz3.ab3@13079>    BSR.w writeword
00029F84 <AmiBlitz3.ab3@13080>   MOVE.w regnum,D1
00029F88 <AmiBlitz3.ab3@13081>   OR.w L_0_969C(PC),D1
00029F8C <AmiBlitz3.ab3@13082>    BSR.w writeword
00029F8E <AmiBlitz3.ab3@13083>   MOVE.w (A7)+,D1
00029F92 <AmiBlitz3.ab3@13084>    BSR.w JL_0_968A
00029F96 <AmiBlitz3.ab3@13085>   MOVE.w L_0_969A(PC),D1
00029F9A <AmiBlitz3.ab3@13086> BRA.w writeword
00029F9E <AmiBlitz3.ab3@13090>   MOVEM.l D0-D7/A0-A6,-(A7)
00029FA2 <AmiBlitz3.ab3@13091>    BSR.w Atokejsr
00029FA6 <AmiBlitz3.ab3@13092>   MOVEM.l (A7)+,D0-D7/A0-A6
00029FA8 <AmiBlitz3.ab3@13095> RTS
00029FAA <AmiBlitz3.ab3@13098>   MOVE.l D0,-(A7)
00029FAC <AmiBlitz3.ab3@13101>   MOVE.l (A7)+,D0
00029FAE <AmiBlitz3.ab3@13104>   MOVE.l D0,D0
00029FB2 <AmiBlitz3.ab3@13107>   BSR.w convert_word_to_long
00029FB8 <AmiBlitz3.ab3@13108>   TST.b iee
00029FBC <AmiBlitz3.ab3@13109>   BEQ 'old
00029FC0 <AmiBlitz3.ab3@13110>   CMP.b #5,d2
00029FC4 <AmiBlitz3.ab3@13111>   BNE 'old
00029FC6 <AmiBlitz3.ab3@13112> RTS
00029FCA <AmiBlitz3.ab3@13115> BRA.w JL_0_9600
00029FCE <AmiBlitz3.ab3@13119>   MOVE.w #$C316,D1
00029FD4 <AmiBlitz3.ab3@13120>   TST.b typecheck
00029FD8 <AmiBlitz3.ab3@13121>   BEQ 'l1
00029FDE <AmiBlitz3.ab3@13122>   TST.b peekaddrsize
00029FE2 <AmiBlitz3.ab3@13123>   BNE 'l1
00029FE8 <AmiBlitz3.ab3@13124>   TST.b notypecheck
00029FEC <AmiBlitz3.ab3@13125>   BNE 'l1
00029FF2 <AmiBlitz3.ab3@13126>   TST.l lasttoken
00029FF6 <AmiBlitz3.ab3@13132> BRA.w JL_0_963A
00029FFA <AmiBlitz3.ab3@13136>   MOVE.w #$C318,D1
0002A000 <AmiBlitz3.ab3@13137>   TST.b typecheck
0002A004 <AmiBlitz3.ab3@13138>   BEQ 'l1
0002A00A <AmiBlitz3.ab3@13139>   TST.b peekaddrsize
0002A00E <AmiBlitz3.ab3@13140>   BNE 'l1
0002A014 <AmiBlitz3.ab3@13141>   TST.b notypecheck
0002A018 <AmiBlitz3.ab3@13142>   BNE 'l1
0002A01E <AmiBlitz3.ab3@13143>   TST.l lasttoken
0002A022 <AmiBlitz3.ab3@13149> BRA.w JL_0_963A
0002A026 <AmiBlitz3.ab3@13153>   MOVE.w #$C318,D1
0002A02C <AmiBlitz3.ab3@13154>   TST.b typecheck
0002A030 <AmiBlitz3.ab3@13155>   BEQ 'l1
0002A036 <AmiBlitz3.ab3@13156>   TST.b notypecheck
0002A03A <AmiBlitz3.ab3@13157>   BNE 'l1
0002A040 <AmiBlitz3.ab3@13158>   TST.l lasttoken
0002A044 <AmiBlitz3.ab3@13164>   BSR.w JL_0_963A
0002A048 <AmiBlitz3.ab3@13165> BRA.w convert_word_to_quick
0002A04C <AmiBlitz3.ab3@13169> BRA.w JL_0_9600
0002A04E <AmiBlitz3.ab3@13173> RTS
0002A052 <AmiBlitz3.ab3@13177>   MOVE.w #$C319,D1
0002A058 <AmiBlitz3.ab3@13178>   TST.b typecheck
0002A05C <AmiBlitz3.ab3@13179>   BEQ 'l1
0002A062 <AmiBlitz3.ab3@13180>   TST.b notypecheck
0002A066 <AmiBlitz3.ab3@13181>   BNE 'l1
0002A06C <AmiBlitz3.ab3@13182>   TST.l lasttoken
0002A070 <AmiBlitz3.ab3@13189>   BSR.w JL_0_963A
0002A074 <AmiBlitz3.ab3@13192>   MOVE.w #$4240,D1
0002A07A <AmiBlitz3.ab3@13193>   OR.w regnum,D1
0002A07E <AmiBlitz3.ab3@13194>   BSR.w writeword
0002A082 <AmiBlitz3.ab3@13195>   MOVE.w #$4840,D1
0002A088 <AmiBlitz3.ab3@13196>   OR.w regnum,D1
0002A08C <AmiBlitz3.ab3@13197> BRA.w writeword
0002A090 <AmiBlitz3.ab3@13201> BRA.w JL_0_96D0
0002A094 <AmiBlitz3.ab3@13205>   BSR.w JL_0_96D0
0002A098 <AmiBlitz3.ab3@13206> BRA.w convert_word_to_long
0002A09A <AmiBlitz3.ab3@13211>   MOVEQ #0,d0
0002A0A0 <AmiBlitz3.ab3@13212>   MOVE.w regnum,d0
0002A0A2 <AmiBlitz3.ab3@13213>   ASL.l #7,d0
0002A0A8 <AmiBlitz3.ab3@13214>   MOVE.l #$f2004000,d1
0002A0AA <AmiBlitz3.ab3@13215>   OR.l d0,d1
0002A0AC <AmiBlitz3.ab3@13216>   ASL.l #1,d0
0002A0AE <AmiBlitz3.ab3@13217>   ASL.l #8,d0
0002A0B0 <AmiBlitz3.ab3@13218>   OR.l d0,d1
0002A0B4 <AmiBlitz3.ab3@13219>   BSR writelong
0002A0BA <AmiBlitz3.ab3@13220>   MOVE.w regnum,d0
0002A0BC <AmiBlitz3.ab3@13221>   ASL.l #7,d0
0002A0C2 <AmiBlitz3.ab3@13222>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002A0C4 <AmiBlitz3.ab3@13223>   OR.w d0,d1
0002A0C8 <AmiBlitz3.ab3@13224>   BSR writelong
0002A0CE <AmiBlitz3.ab3@13225>   MOVE.l #$37800000,d1
0002A0D2 <AmiBlitz3.ab3@13226>   BSR writelong
0002A0D4 <AmiBlitz3.ab3@13227> RTS
0002A0DA <AmiBlitz3.ab3@13231>   TST.b iee
0002A0DE <AmiBlitz3.ab3@13232>   BNE qtof
0002A0E2 <AmiBlitz3.ab3@13233>   MOVE.w #$D300,D1
0002A0E4 <AmiBlitz3.ab3@13236>   MOVE.w D1,-(A7)
0002A0E8 <AmiBlitz3.ab3@13237>    BSR.w JL_0_AD40
0002A0EA <AmiBlitz3.ab3@13238>   MOVE.l D4,D1
0002A0EE <AmiBlitz3.ab3@13239>    BSR.w JL_0_AD38
0002A0F2 <AmiBlitz3.ab3@13240>    BSR.w JL_0_A352
0002A0F4 <AmiBlitz3.ab3@13241>   MOVE.w (A7)+,D1
0002A0F8 <AmiBlitz3.ab3@13242>    BSR.w Atokejsr
0002A0FC <AmiBlitz3.ab3@13243>    BSR.w JL_0_A36E
0002A0FE <AmiBlitz3.ab3@13244>   MOVE.l D5,D1
0002A102 <AmiBlitz3.ab3@13245> BRA.w JL_0_AD38
0002A104 <AmiBlitz3.ab3@13249> RTS
0002A10A <AmiBlitz3.ab3@13252>   TST.b typecheck
0002A10E <AmiBlitz3.ab3@13253>   BEQ 'l1
0002A114 <AmiBlitz3.ab3@13254>   TST.b notypecheck
0002A118 <AmiBlitz3.ab3@13255>   BNE 'l1
0002A11E <AmiBlitz3.ab3@13256>   TST.l lasttoken
0002A124 <AmiBlitz3.ab3@13261>   TST.b iee
0002A128 <AmiBlitz3.ab3@13262>   BNE ftol
0002A12C <AmiBlitz3.ab3@13263>   MOVE.w #$C31A,D1
0002A130 <AmiBlitz3.ab3@13264>   BSR.w JL_0_963A
0002A134 <AmiBlitz3.ab3@13265>   BSR.w JL_0_974A
0002A138 <AmiBlitz3.ab3@13266> BRA.w convert_long_to_byte
0002A13A <AmiBlitz3.ab3@13270> RTS
0002A140 <AmiBlitz3.ab3@13273>   TST.b typecheck
0002A144 <AmiBlitz3.ab3@13274>   BEQ 'l1
0002A14A <AmiBlitz3.ab3@13275>   TST.b notypecheck
0002A14E <AmiBlitz3.ab3@13276>   BNE 'l1
0002A154 <AmiBlitz3.ab3@13277>   TST.l lasttoken
0002A15A <AmiBlitz3.ab3@13282>   TST.b iee
0002A15E <AmiBlitz3.ab3@13283>   BNE ftol
0002A162 <AmiBlitz3.ab3@13284>   MOVE.w #$C31B,D1
0002A166 <AmiBlitz3.ab3@13285>   BSR.w JL_0_963A
0002A16A <AmiBlitz3.ab3@13286>   BSR.w JL_0_974A
0002A16E <AmiBlitz3.ab3@13287> BRA.w convert_long_to_word
0002A170 <AmiBlitz3.ab3@13291> RTS
0002A176 <AmiBlitz3.ab3@13294>   TST.b iee
0002A17A <AmiBlitz3.ab3@13295>   BNE ftol
0002A17E <AmiBlitz3.ab3@13296>   MOVE.w #$C31C,D1
0002A182 <AmiBlitz3.ab3@13297>   BSR.w JL_0_963A
0002A186 <AmiBlitz3.ab3@13300>   MOVE.w #$FFE2,D1
0002A18A <AmiBlitz3.ab3@13301> BRA.w JL_0_9604
0002A18C <AmiBlitz3.ab3@13304>   MOVE.l d0,-(a7)
0002A18E <AmiBlitz3.ab3@13305>   MOVEQ #0,d0
0002A194 <AmiBlitz3.ab3@13306>   MOVE.w regnum,d0
0002A196 <AmiBlitz3.ab3@13307>   ASL.l #7,d0
0002A19C <AmiBlitz3.ab3@13308>   MOVE.l #$f2006000,d1
0002A19E <AmiBlitz3.ab3@13309>   OR.l d0,d1
0002A1A0 <AmiBlitz3.ab3@13310>   ASL.l #1,d0
0002A1A2 <AmiBlitz3.ab3@13311>   ASL.l #8,d0
0002A1A4 <AmiBlitz3.ab3@13312>   OR.l d0,d1
0002A1A6 <AmiBlitz3.ab3@13313>   MOVE.l (a7)+,d0
0002A1AA <AmiBlitz3.ab3@13314> BRA writelong
0002A1AC <AmiBlitz3.ab3@13318>   MOVE.l d0,-(a7)
0002A1AE <AmiBlitz3.ab3@13319>   MOVEQ #0,d0
0002A1B4 <AmiBlitz3.ab3@13320>   MOVE.l #$f23c4023,d1
0002A1BA <AmiBlitz3.ab3@13321>   MOVE.w regnum,d0
0002A1BC <AmiBlitz3.ab3@13322>   ASL.l #7,d0
0002A1BE <AmiBlitz3.ab3@13323>   OR.l d0,d1
0002A1C2 <AmiBlitz3.ab3@13324>   BSR writelong
0002A1C8 <AmiBlitz3.ab3@13325>   MOVE.l #$00010000,d1
0002A1CC <AmiBlitz3.ab3@13326>   BSR writelong
0002A1D2 <AmiBlitz3.ab3@13327>   MOVE.w regnum,d0
0002A1D4 <AmiBlitz3.ab3@13328>   ASL.l #7,d0
0002A1DA <AmiBlitz3.ab3@13329>   MOVE.l #$f2006000,d1
0002A1DC <AmiBlitz3.ab3@13330>   OR.l d0,d1
0002A1DE <AmiBlitz3.ab3@13331>   ASL.l #1,d0
0002A1E0 <AmiBlitz3.ab3@13332>   ASL.l #8,d0
0002A1E2 <AmiBlitz3.ab3@13333>   OR.l d0,d1
0002A1E6 <AmiBlitz3.ab3@13334>   BSR writelong
0002A1E8 <AmiBlitz3.ab3@13335>   MOVE.l (a7)+,d0
0002A1EA <AmiBlitz3.ab3@13336> RTS
0002A1EC <AmiBlitz3.ab3@13340> RTS
0002A1F2 <AmiBlitz3.ab3@13344>   TST.b iee
0002A1F6 <AmiBlitz3.ab3@13345>   BNE ftoq
0002A1FA <AmiBlitz3.ab3@13346>   MOVE.w #$C31B,D1
0002A1FE <AmiBlitz3.ab3@13347>   BSR.w JL_0_963A
0002A202 <AmiBlitz3.ab3@13348>   MOVE.w #$D301,D1
0002A206 <AmiBlitz3.ab3@13349> BRA.w JL_0_96FC
0002A20C <AmiBlitz3.ab3@13355>    TST.b blitzparloop
0002A210 <AmiBlitz3.ab3@13356>    BNE 'l1
0002A216 <AmiBlitz3.ab3@13357>    TST.b funcparloop
0002A21A <AmiBlitz3.ab3@13358>    BNE 'l1
0002A21E <AmiBlitz3.ab3@13359>    BRA error_convert_types
0002A226 <AmiBlitz3.ab3@13362>   CMP.b #2,optistring
0002A22A <AmiBlitz3.ab3@13363>   BEQ JLrts
0002A230 <AmiBlitz3.ab3@13364>   MOVE.w stol,D1
0002A234 <AmiBlitz3.ab3@13365>   BSR.w writeword
0002A23C <AmiBlitz3.ab3@13366>   CMPI.w #$2,sbgot
0002A240 <AmiBlitz3.ab3@13367>   BCS.w sbtolong
0002A244 <AmiBlitz3.ab3@13368>   MOVE.w ceos(PC),D1
0002A248 <AmiBlitz3.ab3@13369>   BSR.w writeword
0002A24E <AmiBlitz3.ab3@13372>   MOVE.w regnum,D1
0002A250 <AmiBlitz3.ab3@13373>   LSL.w #8,D1
0002A252 <AmiBlitz3.ab3@13374>   LSL.w #1,D1
0002A25A <AmiBlitz3.ab3@13375>   CMPI.w #$2,sbgot
0002A25E <AmiBlitz3.ab3@13376>   BCS.w JL_0_98E8
0002A264 <AmiBlitz3.ab3@13377>   MOVE.w a2offset,D3
0002A26A <AmiBlitz3.ab3@13378>   SUB.w thisstuse,D3
0002A26E <AmiBlitz3.ab3@13379>   CMP.w #$6,D3
0002A272 <AmiBlitz3.ab3@13380>   BNE.w JL_0_98D4b
0002A278 <AmiBlitz3.ab3@13381>   OR.w movestst2,D1
0002A27C <AmiBlitz3.ab3@13382>   BSR.w writeword
0002A282 <AmiBlitz3.ab3@13383>   LEA movestst2+2,A0
0002A288 <AmiBlitz3.ab3@13384>   LEA movestst2f,A1
0002A28C <AmiBlitz3.ab3@13385> BRA.w pokecode2
0002A292 <AmiBlitz3.ab3@13389>   OR.w movea7dn,D1
0002A296 <AmiBlitz3.ab3@13390>   BSR.w writeword
0002A29C <AmiBlitz3.ab3@13391>   MOVE.l #0,D1
0002A2A0 <AmiBlitz3.ab3@13392> BRA.w writeword
0002A2A6 <AmiBlitz3.ab3@13396>   ADDQ.w #1,fuckpos
0002A2AA <AmiBlitz3.ab3@13397>   BSR.w writeconvertcode
0002A2B0 <AmiBlitz3.ab3@13398>   SUBQ.w #1,fuckpos
0002A2B2 <AmiBlitz3.ab3@13400> RTS
0002A2B4 <AmiBlitz3.ab3@13404>   MOVE.w D3,D1
0002A2B8 <AmiBlitz3.ab3@13405>   CMP.w #7,d1
0002A2BC <AmiBlitz3.ab3@13406>   BLE 'ok
0002A2C2 <AmiBlitz3.ab3@13407>   JMP errorinternalconvert
0002A2C4 <AmiBlitz3.ab3@13408> 'ok  SUBQ.w #1,D1
0002A2C8 <AmiBlitz3.ab3@13409>   MULU #$7,D1
0002A2CA <AmiBlitz3.ab3@13410>   ADD.w D2,D1
0002A2CC <AmiBlitz3.ab3@13411>   SUBQ.w #1,D1
0002A2CE <AmiBlitz3.ab3@13412>   LSL.w #2,D1
0002A2D4 <AmiBlitz3.ab3@13413>   LEA convtable,A0
0002A2D8 <AmiBlitz3.ab3@13414>   MOVE.l $0(A0,D1.W),D1
0002A2DC <AmiBlitz3.ab3@13415>   BEQ.w JL_0_97A2
0002A2DE <AmiBlitz3.ab3@13416>     MOVEA.l D1,A0
0002A2E2 <AmiBlitz3.ab3@13417>     CMP.b #$ff,d3
0002A2E6 <AmiBlitz3.ab3@13418>     BEQ JL_0_97A2
0002A2E8 <AmiBlitz3.ab3@13419> JMP (A0)
0002A2EA <AmiBlitz3.ab3@13422> RTS
0002A2EE <AmiBlitz3.ab3@13425> usedfrom:  Ds.l 1
0002A2F2 <AmiBlitz3.ab3@13432>   CMP.w #"\",D0
0002A2F6 <AmiBlitz3.ab3@13433>   BNE.w JL_0_97C2
0002A2FA <AmiBlitz3.ab3@13434>     CMP.b #"\",(a5)
0002A2FE <AmiBlitz3.ab3@13435>     BNE 'first
0002A304 <AmiBlitz3.ab3@13436>       MOVE.l A5,usedfrom
0002A30A <AmiBlitz3.ab3@13437>       LEA path2,A5
0002A30E <AmiBlitz3.ab3@13438> BRA 'g1
0002A310 <AmiBlitz3.ab3@13441>     SUBQ.w #1,A5
0002A316 <AmiBlitz3.ab3@13442>   MOVE.l A5,usedfrom
0002A31C <AmiBlitz3.ab3@13443>   LEA usedpath,A5                                          ;read path
0002A320 <AmiBlitz3.ab3@13446>   BSR.w get1bytemain
0002A326 <AmiBlitz3.ab3@13449>   CLR.w flagmask
0002A32A <AmiBlitz3.ab3@13450>   CMP.w #$2A,D0
0002A32E <AmiBlitz3.ab3@13451>    BNE.w JL_0_983A
0002A336 <AmiBlitz3.ab3@13452>   MOVE.w #$0001,flagmask
0002A33A <AmiBlitz3.ab3@13454>    BSR.w getparameter2
0002A33E <AmiBlitz3.ab3@13457>    BEQ.w syntaxerr
0002A342 <AmiBlitz3.ab3@13458>   CMP.w #$28,D0
0002A346 <AmiBlitz3.ab3@13459>    BEQ.w JL_0_9830
0002A34A <AmiBlitz3.ab3@13460>   CMP.w #$2E,D0
0002A34E <AmiBlitz3.ab3@13461>    BEQ.w JL_0_980C
0002A352 <AmiBlitz3.ab3@13462>   CMP.w #$24,D0
0002A356 <AmiBlitz3.ab3@13463>    BNE.w JL_0_9838
0002A35E <AmiBlitz3.ab3@13464>   ORI.w #$8,flagmask
0002A362 <AmiBlitz3.ab3@13465>    BSR.w storeloc
0002A366 <AmiBlitz3.ab3@13466>    BSR.w get1bytemain
0002A36A <AmiBlitz3.ab3@13467> BRA.w JL_0_9822
0002A36E <AmiBlitz3.ab3@13471>   BSR.w storeloc
0002A370 <AmiBlitz3.ab3@13472>   MOVE.w D2,-(A7)
0002A376 <AmiBlitz3.ab3@13473>   LEA namebuff2,A1
0002A37A <AmiBlitz3.ab3@13474>    BSR.w makename3
0002A37E <AmiBlitz3.ab3@13475>    BEQ.w syntaxerr
0002A380 <AmiBlitz3.ab3@13476>   MOVE.w (A7)+,D2
0002A382 <AmiBlitz3.ab3@13479>    MOVE.w D0,D1
0002A386 <AmiBlitz3.ab3@13480>    BSR.w resloc
0002A38A <AmiBlitz3.ab3@13481>    CMP.w #$28,D1
0002A38E <AmiBlitz3.ab3@13482>    BNE.w JL_0_9838
0002A396 <AmiBlitz3.ab3@13485>   ORI.w #$2,flagmask
0002A398 <AmiBlitz3.ab3@13488> RTS
0002A39C <AmiBlitz3.ab3@13492>   CMP.w #$40,D0
0002A3A0 <AmiBlitz3.ab3@13493>    BNE.w JL_0_984E
0002A3A8 <AmiBlitz3.ab3@13494>   MOVE.w #$0005,flagmask
0002A3AC <AmiBlitz3.ab3@13495> BRA.w JL_0_97D8
0002A3B0 <AmiBlitz3.ab3@13499>   BSR.w makename2
0002A3B4 <AmiBlitz3.ab3@13500> BRA.w JL_0_97DC
0002A3B8 <AmiBlitz3.ab3@13504>   MOVE.w #$FED3,D1
0002A3BC <AmiBlitz3.ab3@13505>    BSR.w uselib
0002A3C2 <AmiBlitz3.ab3@13506>   LEA pusha3,A0
0002A3C8 <AmiBlitz3.ab3@13507>   LEA pusha3f,A1
0002A3CC <AmiBlitz3.ab3@13508> BRA.w pokecode
0002A3D0 <AmiBlitz3.ab3@13512>   MOVE.w #$FED3,D1
0002A3D4 <AmiBlitz3.ab3@13513>    BSR.w uselib
0002A3DA <AmiBlitz3.ab3@13514>   LEA pulla3,A0
0002A3E0 <AmiBlitz3.ab3@13515>   LEA pulla3f,A1
0002A3E4 <AmiBlitz3.ab3@13516> BRA.w pokecode
0002A3E6 <AmiBlitz3.ab3@13520> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002A3EE <AmiBlitz3.ab3@13525>     CMP.b #2,optistring
0002A3F2 <AmiBlitz3.ab3@13526>    BEQ 'l10
0002A3F6 <AmiBlitz3.ab3@13527>    MOVE.w ceos(PC),D1
0002A3FA <AmiBlitz3.ab3@13528>    BSR.w writeword                                         ;clr.b (a3)
0002A400 <AmiBlitz3.ab3@13531>   MOVE.w regnum,D1
0002A402 <AmiBlitz3.ab3@13532>   LSL.w #8,D1
0002A404 <AmiBlitz3.ab3@13533>   LSL.w #1,D1
0002A40C <AmiBlitz3.ab3@13534>   CMPI.w #$2,sbgot
0002A410 <AmiBlitz3.ab3@13535>    BCS.w JL_0_98E8
0002A416 <AmiBlitz3.ab3@13536>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002A41C <AmiBlitz3.ab3@13537>   SUB.w thisstuse,D3
0002A420 <AmiBlitz3.ab3@13538>   CMP.w #$6,D3
0002A424 <AmiBlitz3.ab3@13539>    BNE.w JL_0_98D4
0002A42A <AmiBlitz3.ab3@13540>   OR.w movestst2,D1
0002A42E <AmiBlitz3.ab3@13541>    BSR.w writeword
0002A434 <AmiBlitz3.ab3@13542>   LEA movestst2+2,A0
0002A43A <AmiBlitz3.ab3@13543>   LEA movestst2f,A1
0002A43E <AmiBlitz3.ab3@13544> BRA.w pokecode2
0002A444 <AmiBlitz3.ab3@13548>    OR.w movea7dn,D1
0002A448 <AmiBlitz3.ab3@13549>    BSR.w writeword
0002A44E <AmiBlitz3.ab3@13550>   MOVE.l movea7dn+2,D1
0002A452 <AmiBlitz3.ab3@13562>   BSR writelong
0002A45A <AmiBlitz3.ab3@13565>    CMP.w #6,regnum
0002A45E <AmiBlitz3.ab3@13566>    BEQ 'l1
0002A464 <AmiBlitz3.ab3@13567>    TST.w stackpar
0002A468 <AmiBlitz3.ab3@13568>    BNE 'l1
0002A46E <AmiBlitz3.ab3@13569>    TST.b funcparloop
0002A472 <AmiBlitz3.ab3@13570>    BEQ 'l1
0002A478 <AmiBlitz3.ab3@13571>    MOVE.l #$48780000,d1
0002A47C <AmiBlitz3.ab3@13572>    BSR writelong
0002A47E <AmiBlitz3.ab3@13576> RTS
0002A480 <AmiBlitz3.ab3@13581>      MOVE.l d1,-(a7)
0002A488 <AmiBlitz3.ab3@13582>      CMP.w #6,regnum
0002A48C <AmiBlitz3.ab3@13583>      BEQ 'l1
0002A492 <AmiBlitz3.ab3@13584>      TST.w stackpar
0002A496 <AmiBlitz3.ab3@13585>      BNE 'l1
0002A49C <AmiBlitz3.ab3@13586>      TST.b funcparloop
0002A4A0 <AmiBlitz3.ab3@13587>      BEQ 'l1
0002A4A6 <AmiBlitz3.ab3@13588>      MOVE.l #$48780000,d1
0002A4AA <AmiBlitz3.ab3@13589>      BSR writelong
0002A4AC <AmiBlitz3.ab3@13592>      MOVE.l (a7)+,d1
0002A4B2 <AmiBlitz3.ab3@13594>    OR.w movestdn,D1
0002A4B6 <AmiBlitz3.ab3@13595>    BSR.w writeword
0002A4BA <AmiBlitz3.ab3@13596>   MOVE.w #$FED3,D1
0002A4BE <AmiBlitz3.ab3@13597>    BSR.w uselib
0002A4C2 <AmiBlitz3.ab3@13598>   MOVE.w $A(A1),D1
0002A4C6 <AmiBlitz3.ab3@13599> BRA.w writeword
0002A4C8 <AmiBlitz3.ab3@13602> unknown:    Ds.w 1
0002A4CE <AmiBlitz3.ab3@13605> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002A4D2 <AmiBlitz3.ab3@13606> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002A4D8 <AmiBlitz3.ab3@13607>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002A4DE <AmiBlitz3.ab3@13613>   TST.b debugmode
0002A4E2 <AmiBlitz3.ab3@13614>   BEQ.w sharreval
0002A4E6 <AmiBlitz3.ab3@13615>  BSR.w arreval
0002A4EA <AmiBlitz3.ab3@13618>   MOVE.w somecode(PC),D1
0002A4F0 <AmiBlitz3.ab3@13619>   OR.w regnum,D1
0002A4F4 <AmiBlitz3.ab3@13620>    BSR.w writeword
0002A4F6 <AmiBlitz3.ab3@13621>   MOVEQ.l #$01,D1
0002A4F8 <AmiBlitz3.ab3@13622>   SWAP D1
0002A4FC <AmiBlitz3.ab3@13623>    BSR.w writelong
0002A500 <AmiBlitz3.ab3@13624>   MOVE.l somecode2(PC),D1
0002A504 <AmiBlitz3.ab3@13625>    BSR.w writelong
0002A508 <AmiBlitz3.ab3@13626>   MOVE.w #$C309,D1
0002A50C <AmiBlitz3.ab3@13627> BRA.w Atokejsr
0002A50E <AmiBlitz3.ab3@13631>   MOVEQ.l #$02,D2
0002A510 <AmiBlitz3.ab3@13632>   MOVEQ.l #$00,D1
0002A512 <AmiBlitz3.ab3@13633>   MOVEQ.l #$00,D3
0002A516 <AmiBlitz3.ab3@13634> BRA.w maineval2
0002A518 <AmiBlitz3.ab3@13638>   MOVEQ.l #$03,D2
0002A51A <AmiBlitz3.ab3@13639>   MOVEQ.l #$00,D1
0002A51C <AmiBlitz3.ab3@13640>   MOVEQ.l #$00,D3
0002A522 <AmiBlitz3.ab3@13641>   MOVE.b notypecheck,-(a7)
0002A52A <AmiBlitz3.ab3@13642>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002A530 <AmiBlitz3.ab3@13643>   JSR maineval2
0002A536 <AmiBlitz3.ab3@13644>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002A538 <AmiBlitz3.ab3@13645>   RTS
0002A542 <AmiBlitz3.ab3@13649>   MOVE.w oldqflag,instringon
0002A548 <AmiBlitz3.ab3@13650>   MOVEA.l lastsourcepos,A5
0002A54A <AmiBlitz3.ab3@13651>   MOVEQ.l #-$01,D1
0002A54C <AmiBlitz3.ab3@13652>   MOVEQ.l #-$01,D3
0002A550 <AmiBlitz3.ab3@13653> BRA.w peval
0002A55A <AmiBlitz3.ab3@13658>   MOVE.w oldqflag,instringon
0002A560 <AmiBlitz3.ab3@13659>   MOVEA.l lastsourcepos,A5
0002A562 <AmiBlitz3.ab3@13662>   MOVEQ.l #-$01,D1
0002A564 <AmiBlitz3.ab3@13663>   MOVEQ.l #$00,D3
0002A56A <AmiBlitz3.ab3@13664>   MOVE.l leftsidetype,-(a7)
0002A570 <AmiBlitz3.ab3@13665>   MOVE.l rightsidetype,-(a7)
0002A576 <AmiBlitz3.ab3@13666>   CLR.l leftsidetype
0002A57C <AmiBlitz3.ab3@13667>   CLR.l rightsidetype
0002A582 <AmiBlitz3.ab3@13668>   JSR maineval
0002A588 <AmiBlitz3.ab3@13669>   MOVE.l (a7)+,rightsidetype
0002A58E <AmiBlitz3.ab3@13670>   MOVE.l (a7)+,leftsidetype
0002A590 <AmiBlitz3.ab3@13671>   RTS
0002A59A <AmiBlitz3.ab3@13675>   MOVE.w oldqflag,instringon
0002A5A0 <AmiBlitz3.ab3@13676>   MOVEA.l lastsourcepos,A5
0002A5A2 <AmiBlitz3.ab3@13677>   MOVEQ.l #$00,D1
0002A5A4 <AmiBlitz3.ab3@13678>   MOVEQ.l #-$01,D3
0002A5A8 <AmiBlitz3.ab3@13679> BRA.w maineval
0002A5AA <AmiBlitz3.ab3@13683>   MOVEQ.l #$01,D1
0002A5AC <AmiBlitz3.ab3@13684>   MOVEQ.l #-$01,D3
0002A5B0 <AmiBlitz3.ab3@13685> BRA.w maineval
0002A5BA <AmiBlitz3.ab3@13690>   MOVE.w oldqflag,instringon
0002A5C0 <AmiBlitz3.ab3@13691>   MOVEA.l lastsourcepos,A5
0002A5C2 <AmiBlitz3.ab3@13694>   MOVEQ.l #$00,D1                                        ;no push
0002A5C4 <AmiBlitz3.ab3@13695>   MOVEQ.l #$00,D3
0002A5CC <AmiBlitz3.ab3@13716>    CMPI.w #$6,regnum
0002A5D0 <AmiBlitz3.ab3@13717>    BCS.w maineval2
0002A5D2 <AmiBlitz3.ab3@13718>    MOVEQ #0,d1
0002A5D8 <AmiBlitz3.ab3@13719>    MOVE.l destpointer,a4
0002A5DE <AmiBlitz3.ab3@13721>    CMPA.l destbufferend,A4
0002A5E2 <AmiBlitz3.ab3@13722>    BCC.w maineval__l2
0002A5E8 <AmiBlitz3.ab3@13724>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002A5EC <AmiBlitz3.ab3@13726>    BNE maineval__l2
0002A5F0 <AmiBlitz3.ab3@13730> BRA maineval__l1
0002A5F2 <AmiBlitz3.ab3@13733>   MOVEQ.l #-$01,D1
0002A5FA <AmiBlitz3.ab3@13736>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002A600 <AmiBlitz3.ab3@13739>   MOVE.w thisstuse,-(A7)
0002A60A <AmiBlitz3.ab3@13740>   MOVE.w a2offset,thisstuse
0002A610 <AmiBlitz3.ab3@13741>   MOVE.w stackpar,-(A7)
0002A616 <AmiBlitz3.ab3@13742>   MOVE.w D1,stackpar
0002A61C <AmiBlitz3.ab3@13743>   MOVE.w sbgot,-(A7)
0002A622 <AmiBlitz3.ab3@13744>   CLR.w sbgot
0002A626 <AmiBlitz3.ab3@13745>   MOVE.w unknown(PC),-(A7)
0002A62C <AmiBlitz3.ab3@13746>   MOVE.w D3,unknown
0002A62E <AmiBlitz3.ab3@13747>   MOVE.w D2,-(a7)
0002A634 <AmiBlitz3.ab3@13748>   MOVE.w d2,mode
0002A638 <AmiBlitz3.ab3@13749>    BSR.w eval3
0002A63A <AmiBlitz3.ab3@13750>   MOVE.w (a7)+,d3
0002A63E <AmiBlitz3.ab3@13751>    BEQ.w maineval__noconv
0002A642 <AmiBlitz3.ab3@13752>   MOVE.w unknown(PC),D1
0002A646 <AmiBlitz3.ab3@13753>    BNE.w maineval__noconv
0002A648 <AmiBlitz3.ab3@13754>   EXG.l D2,D3
0002A64A <AmiBlitz3.ab3@13755>    MOVE.l a2,-(a7)
0002A650 <AmiBlitz3.ab3@13756>    TST.b curtemplabel
0002A654 <AmiBlitz3.ab3@13757>    BEQ maineval2__l10
0002A65A <AmiBlitz3.ab3@13758>    MOVE.l asmbuff,a2
0002A660 <AmiBlitz3.ab3@13759>    CMP.w #$c,$8(a2)
0002A664 <AmiBlitz3.ab3@13760>    BEQ maineval2__l20
0002A66A <AmiBlitz3.ab3@13761>    CMP.w #$d,$8(a2)
0002A66E <AmiBlitz3.ab3@13762>    BEQ maineval2__l20
0002A670 <AmiBlitz3.ab3@13765>   CMP.w d2,d3
0002A674 <AmiBlitz3.ab3@13766>   BEQ maineval2__l20
0002A678 <AmiBlitz3.ab3@13767>   BSR.w writeconvertcode
0002A67E <AmiBlitz3.ab3@13768>   CLR.b doimmediate
0002A680 <AmiBlitz3.ab3@13771>   MOVE.l (a7)+,a2
0002A686 <AmiBlitz3.ab3@13774>   MOVE.w (A7)+,unknown
0002A68C <AmiBlitz3.ab3@13775>   MOVE.w stackpar,D1
0002A690 <AmiBlitz3.ab3@13776>    BEQ.w maineval__skipme
0002A694 <AmiBlitz3.ab3@13777>    BMI.w maineval__skipme
0002A69A <AmiBlitz3.ab3@13781>   MOVE.w regnum,D1
0002A69C <AmiBlitz3.ab3@13782>   LSL.w #8,D1
0002A69E <AmiBlitz3.ab3@13783>   LSL.w #1,D1
0002A6A2 <AmiBlitz3.ab3@13784>   CMP.w #$7,D2
0002A6A6 <AmiBlitz3.ab3@13785>    BNE.w maineval__hi1
0002A6AE <AmiBlitz3.ab3@13786>    CMP.b #2,optistring
0002A6B2 <AmiBlitz3.ab3@13787>    BEQ maineval__hi1a
0002A6B4 <AmiBlitz3.ab3@13788>   MOVE.w D1,-(A7)
0002A6BA <AmiBlitz3.ab3@13789>   OR.w getstlen,D1
0002A6BE <AmiBlitz3.ab3@13790>    BSR.w writeword
0002A6C0 <AmiBlitz3.ab3@13791>   MOVE.w (A7)+,D1
0002A6C6 <AmiBlitz3.ab3@13794>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002A6CA <AmiBlitz3.ab3@13798>   MOVE.w #$3f3c,d1
0002A6CE <AmiBlitz3.ab3@13799>    BSR.w writeword
0002A6D0 <AmiBlitz3.ab3@13803>   MOVE.w d2,d1
0002A6D6 <AmiBlitz3.ab3@13804>   MOVE.w d1,libmode
0002A6DA <AmiBlitz3.ab3@13805>    BSR.w writeword
0002A6DE <AmiBlitz3.ab3@13806>   CMP.w #$7,D2
0002A6E2 <AmiBlitz3.ab3@13807>    BNE.w maineval__skipme
0002A6E8 <AmiBlitz3.ab3@13808>   MOVE.w putstlen,D1
0002A6EE <AmiBlitz3.ab3@13809>   OR.w regnum,D1
0002A6F2 <AmiBlitz3.ab3@13810>    BSR.w writeword
0002A6F6 <AmiBlitz3.ab3@13813>    CMP.w #$7,D2
0002A6FA <AmiBlitz3.ab3@13814>    BNE.w maineval__notst
0002A702 <AmiBlitz3.ab3@13825>    CMP.b #2,optistring
0002A706 <AmiBlitz3.ab3@13826>    BEQ maineval__skipme_l10
0002A70C <AmiBlitz3.ab3@13827>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002A710 <AmiBlitz3.ab3@13828>    BSR.w sbtolong
0002A714 <AmiBlitz3.ab3@13829> BRA.w maineval__notst2
0002A71C <AmiBlitz3.ab3@13833>     CMP.w #6,regnum
0002A720 <AmiBlitz3.ab3@13834>     BEQ maineval__skipme_l10_l1
0002A726 <AmiBlitz3.ab3@13835>     TST.b funcparloop
0002A72A <AmiBlitz3.ab3@13836>     BEQ maineval__skipme_l10_l1
0002A730 <AmiBlitz3.ab3@13837>     MOVE.l #$48780000,d1
0002A734 <AmiBlitz3.ab3@13838>     BSR writelong
0002A738 <AmiBlitz3.ab3@13841> BRA.w maineval__notst2
0002A73E <AmiBlitz3.ab3@13844>   ADDQ.w #2,a2offset
0002A742 <AmiBlitz3.ab3@13845> BRA maineval__skipme
0002A74A <AmiBlitz3.ab3@13848>   CMPI.w #$2,sbgot
0002A74E <AmiBlitz3.ab3@13849>    BCS.w maineval__notst2                                         ;correct stack
0002A752 <AmiBlitz3.ab3@13850>   MOVE.w ststfix(PC),D1
0002A756 <AmiBlitz3.ab3@13851>    BSR.w writeword
0002A75C <AmiBlitz3.ab3@13854>   MOVE.w (A7)+,sbgot
0002A762 <AmiBlitz3.ab3@13855>   MOVE.w stackpar,D1
0002A766 <AmiBlitz3.ab3@13856>    BPL.w maineval__skip
0002A76A <AmiBlitz3.ab3@13857>    CMP.b #7,d2
0002A76E <AmiBlitz3.ab3@13858>    BEQ maineval__notst2_l1
0002A774 <AmiBlitz3.ab3@13859>   TST.b funcparloop
0002A778 <AmiBlitz3.ab3@13860>   BEQ maineval__notst2_l1
0002A77C <AmiBlitz3.ab3@13861>   CMP.b #5,d2
0002A780 <AmiBlitz3.ab3@13862>   BNE maineval__notst2_skip
0002A786 <AmiBlitz3.ab3@13863>   TST.b fpu
0002A78A <AmiBlitz3.ab3@13864>   BEQ maineval__notst2_skip
0002A790 <AmiBlitz3.ab3@13865>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002A796 <AmiBlitz3.ab3@13866>   JSR writelong
0002A79A <AmiBlitz3.ab3@13869>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002A7A0 <AmiBlitz3.ab3@13870>   ADD.w parnum,d1
0002A7A6 <AmiBlitz3.ab3@13871>   JSR Atokejsr
0002A7AC <AmiBlitz3.ab3@13872>    TST.w dontwrite
0002A7B0 <AmiBlitz3.ab3@13873>    BNE maineval__notst2_l1
0002A7B6 <AmiBlitz3.ab3@13874>    MOVE.l data1start,d1
0002A7BC <AmiBlitz3.ab3@13875>    MOVE.l destpointer,a4
0002A7C0 <AmiBlitz3.ab3@13876>    ADD.l d1,-4(a4)
0002A7C6 <AmiBlitz3.ab3@13877>    MOVE.l destpointer,d1
0002A7C8 <AmiBlitz3.ab3@13878>    SUBQ.l #4,d1
0002A7CE <AmiBlitz3.ab3@13879>    SUB.l destbufferstart,d1
0002A7D0 <AmiBlitz3.ab3@13880>    MOVE.l d2,-(a7)
0002A7D2 <AmiBlitz3.ab3@13881>    MOVE.l d1,d2
0002A7D8 <AmiBlitz3.ab3@13882>    JSR addhunkoffset
0002A7DA <AmiBlitz3.ab3@13883>    MOVE.l (a7)+,d2
0002A7DE <AmiBlitz3.ab3@13884> BRA maineval__skip
0002A7E4 <AmiBlitz3.ab3@13887>   ADDQ.w #2,a2offset
0002A7EA <AmiBlitz3.ab3@13888>   MOVE.w pushd0wd,D1
0002A7EE <AmiBlitz3.ab3@13889>   CMP.w #$3,D2                                             ;write parameter to stack
0002A7F2 <AmiBlitz3.ab3@13890>    BCS.w maineval__ok
0002A7F8 <AmiBlitz3.ab3@13891>   ADDQ.w #2,a2offset
0002A7FE <AmiBlitz3.ab3@13892>   TST.b fpu
0002A802 <AmiBlitz3.ab3@13893>   BEQ maineval__notst2_nofpu
0002A806 <AmiBlitz3.ab3@13894>   CMP.w #5,d2
0002A80A <AmiBlitz3.ab3@13895>   BNE maineval__notst2_nofpu
0002A80C <AmiBlitz3.ab3@13896>   MOVEQ #0,d1
0002A812 <AmiBlitz3.ab3@13897>   MOVE.w regnum,d1
0002A814 <AmiBlitz3.ab3@13898>   ASL.l #7,d1
0002A81A <AmiBlitz3.ab3@13899>   OR.l #$f2276400,d1
0002A81E <AmiBlitz3.ab3@13900>   BSR writelong
0002A822 <AmiBlitz3.ab3@13901> BRA maineval__skip
0002A828 <AmiBlitz3.ab3@13904>   MOVE.w pushd0l,D1
0002A82E <AmiBlitz3.ab3@13907>    OR.w regnum,D1
0002A832 <AmiBlitz3.ab3@13908>    BSR.w writeword                                         ;nat
0002A838 <AmiBlitz3.ab3@13911>   MOVE.w (A7)+,stackpar
0002A83E <AmiBlitz3.ab3@13912>   MOVE.w (A7)+,thisstuse
0002A840 <AmiBlitz3.ab3@13913> RTS
0002A842 <AmiBlitz3.ab3@13916> thisstuse: Ds.w 1
0002A844 <AmiBlitz3.ab3@13919> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002A846 <AmiBlitz3.ab3@13920> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002A84A <AmiBlitz3.ab3@13925>   BSR.w eval4
0002A854 <AmiBlitz3.ab3@13926>   SUBI.l #$12,forthsp
0002A856 <AmiBlitz3.ab3@13927> RTS
0002A858 <AmiBlitz3.ab3@13931>   MOVEQ.l #$01,D1
0002A85C <AmiBlitz3.ab3@13933>       MOVEA.l precsp(PC),A1
0002A85E <AmiBlitz3.ab3@13934>       MOVE.l A0,(A1)+
0002A860 <AmiBlitz3.ab3@13935>       MOVE.w D1,(A1)+
0002A866 <AmiBlitz3.ab3@13936>       MOVE.l A1,precsp
0002A86A <AmiBlitz3.ab3@13937>    BSR.w calcloop
0002A86C <AmiBlitz3.ab3@13938>   TST.w D1
0002A870 <AmiBlitz3.ab3@13939>    BNE.w syntaxerr
0002A876 <AmiBlitz3.ab3@13940>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002A878 <AmiBlitz3.ab3@13941> RTS
0002A87C <AmiBlitz3.ab3@13946>   BSR.w JL_0_9C24
0002A880 <AmiBlitz3.ab3@13949>   MOVEA.l precsp(PC),A1
0002A882 <AmiBlitz3.ab3@13950>   CMP.w -(A1),D1
0002A886 <AmiBlitz3.ab3@13951>    BHI.w JL_0_9B0A
0002A888 <AmiBlitz3.ab3@13952> RTS
0002A88C <AmiBlitz3.ab3@13957>   MOVEA.l precsp(PC),A1
0002A88E <AmiBlitz3.ab3@13958>   MOVE.l A0,(A1)+
0002A890 <AmiBlitz3.ab3@13959>   MOVE.w D1,(A1)+
0002A896 <AmiBlitz3.ab3@13960>   MOVE.l A1,precsp
0002A898 <AmiBlitz3.ab3@13961>   MOVE.w D2,-(A7)
0002A89E <AmiBlitz3.ab3@13962>   ADDQ.w #1,regnum
0002A8A2 <AmiBlitz3.ab3@13963>    BSR.w calcloop               ;constant optimizer
0002A8A8 <AmiBlitz3.ab3@13964>   SUBQ.w #1,regnum
0002A8AA <AmiBlitz3.ab3@13965>   MOVE.w (A7)+,D3
0002A8AE <AmiBlitz3.ab3@13966>   MOVEM.l D1/A0,-(A7)
0002A8B2 <AmiBlitz3.ab3@13967>    BEQ.w JL_0_9B2E
0002A8B6 <AmiBlitz3.ab3@13968>    BSR.w JL_0_9770
0002A8BA <AmiBlitz3.ab3@13971>   BSR.w popprec
0002A8BE <AmiBlitz3.ab3@13972>   BSR.w writecode
0002A8C2 <AmiBlitz3.ab3@13973>   MOVEA.l forthsp(PC),A0
0002A8C6 <AmiBlitz3.ab3@13974>   MOVE.w -$2(A0),D1
0002A8CA <AmiBlitz3.ab3@13975>   OR.w -$14(A0),D1
0002A8CE <AmiBlitz3.ab3@13976>   MOVE.w D1,-$14(A0)
0002A8D2 <AmiBlitz3.ab3@13977>    BNE.w JL_0_9C0E
0002A8D8 <AmiBlitz3.ab3@13978>   MOVE.w dontwrite,D1
0002A8DC <AmiBlitz3.ab3@13979>    BNE.w JL_0_9C0E
0002A8E0 <AmiBlitz3.ab3@13980>    MOVEA.l -$24(A0),A0
0002AA1C <AmiBlitz3.ab3@13982>  !newcalc
0002AA20 <AmiBlitz3.ab3@13983>    BEQ 'l10
0002AA24 <AmiBlitz3.ab3@13984>    MOVEA.l forthsp(PC),A0
0002AA2C <AmiBlitz3.ab3@13985>    MOVE.w -$18(A0),lasta6
0002AA34 <AmiBlitz3.ab3@13986>    MOVE.l -$1C(A0),lasta6
0002AA38 <AmiBlitz3.ab3@13987>    MOVEA.l -$24(A0),A0
0002AA3E <AmiBlitz3.ab3@13988>    MOVE.l A0,destpointer
0002AA44 <AmiBlitz3.ab3@13989>    MOVEA.l _mathffpbase,A6
0002AA4A <AmiBlitz3.ab3@13990>    MOVEA.l ffplib,A1
0002AA4E <AmiBlitz3.ab3@13991> BRA cont1
0002AA52 <AmiBlitz3.ab3@13994>   MOVE.w #$2000,D1
0002AA58 <AmiBlitz3.ab3@13995>   OR.w regnum,D1
0002AA5C <AmiBlitz3.ab3@13996>    BSR.w writeword
0002AA5E <AmiBlitz3.ab3@13997>     MOVEQ #0,d1
0002AA64 <AmiBlitz3.ab3@13998>     MOVE.w regnum,D1
0002AA66 <AmiBlitz3.ab3@13999>     ASL.l #8,d1
0002AA68 <AmiBlitz3.ab3@14000>     ASL.l #2,d1
0002AA6E <AmiBlitz3.ab3@14001>     OR.l #$f2000000,d1
0002AA72 <AmiBlitz3.ab3@14002>     BSR writelong
0002AA76 <AmiBlitz3.ab3@14003>   MOVE.w #$4E75,D1
0002AA7A <AmiBlitz3.ab3@14004>    BSR.w writeword
0002AA82 <AmiBlitz3.ab3@14005>   MOVE.w -$18(A0),lasta6
0002AA8A <AmiBlitz3.ab3@14006>   MOVE.l -$1C(A0),lasta6
0002AA8E <AmiBlitz3.ab3@14007>   MOVEA.l -$24(A0),A0
0002AA94 <AmiBlitz3.ab3@14008>   MOVE.l A0,destpointer
0002AA98 <AmiBlitz3.ab3@14009>   MOVEM.l D2/A5,-(A7)
0002AA9E <AmiBlitz3.ab3@14010>   MOVEA.l _mathffpbase,A6
0002AAA4 <AmiBlitz3.ab3@14011>   MOVEA.l ffplib,A1
0002AAA8 <AmiBlitz3.ab3@14012>   MOVE.w $A(A1),D0
0002AAAE <AmiBlitz3.ab3@14013>   LEA _mathffpbase,A5
0002AAB0 <AmiBlitz3.ab3@14014>   SUBA.w D0,A5
0002AAB6 <AmiBlitz3.ab3@14015>   JSR Aclearcache                                          ;neg +
0002AABC <AmiBlitz3.ab3@14016>   CLR.l load_var_addr
0002AAC2 <AmiBlitz3.ab3@14017>   CLR.l imm_addr
0002AAC8 <AmiBlitz3.ab3@14018>   TST.w dontwrite
0002AACC <AmiBlitz3.ab3@14019>   BNE '1
0002AACE <AmiBlitz3.ab3@14020>   JSR (A0)                                                 ;calc constant inline expression
0002AAD2 <AmiBlitz3.ab3@14023>   MOVEM.l (A7)+,D2/A5
0002AAD8 <AmiBlitz3.ab3@14026>   MOVE.b d2,isconstantvalue
0002AADE <AmiBlitz3.ab3@14027>   MOVE.l d0,lastconstantvalue
0002AAE4 <AmiBlitz3.ab3@14028>   MOVE.w regnum,D1
0002AAE6 <AmiBlitz3.ab3@14029>   LSL.w #8,D1
0002AAE8 <AmiBlitz3.ab3@14030>   LSL.w #1,D1
0002AAEC <AmiBlitz3.ab3@14031>   ORI.w #$203C,D1
0002AAF0 <AmiBlitz3.ab3@14032>   CMP.w #$3,D2
0002AAF4 <AmiBlitz3.ab3@14033>    BCC.w JL_0_9BCE
0002AAF8 <AmiBlitz3.ab3@14034>   ORI.w #$1000,D1
0002AAFC <AmiBlitz3.ab3@14035>    BSR.w writeword
0002AAFE <AmiBlitz3.ab3@14036>   MOVE.w D0,D1
0002AB02 <AmiBlitz3.ab3@14037>    BSR.w writeword
0002AB06 <AmiBlitz3.ab3@14038> BRA.w JL_0_9BD8
0002AB0C <AmiBlitz3.ab3@14042>   TST.b iee                                                ;fpu constant
0002AB10 <AmiBlitz3.ab3@14043>   BEQ 'l10
0002AB14 <AmiBlitz3.ab3@14044>   CMP.b #5,d2
0002AB18 <AmiBlitz3.ab3@14045>   BNE 'l10
0002AB1A <AmiBlitz3.ab3@14046>   MOVEQ #0,d1
0002AB20 <AmiBlitz3.ab3@14047>   MOVE.w regnum,D1
0002AB22 <AmiBlitz3.ab3@14048>   ASL.l #7,d1
0002AB28 <AmiBlitz3.ab3@14049>   OR.l #$f23c5400,d1
0002AB2C <AmiBlitz3.ab3@14050>   BSR writelong
0002AB2E <AmiBlitz3.ab3@14051>   SUBQ.l #8,a7
0002AB34 <AmiBlitz3.ab3@14052>   fmove.d fp0,0(a7)
0002AB36 <AmiBlitz3.ab3@14053>   MOVE.l (a7)+,d1
0002AB3A <AmiBlitz3.ab3@14054>   BSR writelong
0002AB3C <AmiBlitz3.ab3@14055>   MOVE.l (a7)+,d1
0002AB40 <AmiBlitz3.ab3@14056>   BSR writelong
0002AB44 <AmiBlitz3.ab3@14057> BRA JL_0_9BD8
0002AB48 <AmiBlitz3.ab3@14060>   BSR.w writeword
0002AB4A <AmiBlitz3.ab3@14061>   MOVE.l D0,D1
0002AB4E <AmiBlitz3.ab3@14062>   BSR.w writelong
0002AB52 <AmiBlitz3.ab3@14065>   MOVEA.l forthsp(PC),A0
0002AB56 <AmiBlitz3.ab3@14066>   MOVEA.l -$20(A0),A3
0002AB5C <AmiBlitz3.ab3@14067>   MOVEA.l hunkoffsetbase,A2
0002AB62 <AmiBlitz3.ab3@14068>   MOVE.l A3,hunkoffsetbase
0002AB68 <AmiBlitz3.ab3@14069>   MOVEA.l _execbase,A6
0002AB6A <AmiBlitz3.ab3@14072>   CMPA.l A3,A2
0002AB6E <AmiBlitz3.ab3@14073>   BEQ.w JL_0_9C0A
0002AB74 <AmiBlitz3.ab3@14074>   SUBQ.l #1,hunkoffsetcounter
0002AB76 <AmiBlitz3.ab3@14075>   MOVEA.l A2,A1
0002AB78 <AmiBlitz3.ab3@14076>   MOVEA.l (A2),A2
0002AB7A <AmiBlitz3.ab3@14077>   MOVEQ.l #$8,D0
0002AB80 <AmiBlitz3.ab3@14078>   MOVE.l mempool2,a0
0002AB84 <AmiBlitz3.ab3@14079>    JSR _FreePooled(A6)
0002AB88 <AmiBlitz3.ab3@14080> BRA.w JL_0_9BF0
0002AB8C <AmiBlitz3.ab3@14084>   MOVEA.l forthsp(PC),A0
0002AB90 <AmiBlitz3.ab3@14087>   LEA -$12(A0),A0
0002AB96 <AmiBlitz3.ab3@14088>   MOVE.l A0,forthsp
0002AB9A <AmiBlitz3.ab3@14089>   MOVEM.l (A7)+,D1/A0
0002AB9E <AmiBlitz3.ab3@14090>   BSR.w reget
0002ABA2 <AmiBlitz3.ab3@14091> BRA.w JL_0_9AFE
0002ABA6 <AmiBlitz3.ab3@14095>   BSR.w JL_0_A386
0002ABA8 <AmiBlitz3.ab3@14096>   TST.w d0
0002ABAC <AmiBlitz3.ab3@14097>   BEQ JL_0_9C42
0002ABB0 <AmiBlitz3.ab3@14098>   CMP.b #",",d0
0002ABB4 <AmiBlitz3.ab3@14099>   BEQ JL_0_9C42
0002ABB8 <AmiBlitz3.ab3@14100>   CMP.b #"@",d0                                            ;expandline @@
0002ABBC <AmiBlitz3.ab3@14101>   BEQ JL_0_9C42
0002ABC2 <AmiBlitz3.ab3@14102>   LEA operators,A0
0002ABC4 <AmiBlitz3.ab3@14105>    TST.w (A0)
0002ABC8 <AmiBlitz3.ab3@14106>    BEQ.w JL_0_9C42
0002ABCA <AmiBlitz3.ab3@14107>   CMP.w (A0),D0
0002ABCE <AmiBlitz3.ab3@14108>    BEQ.w JL_0_9C46a
0002ABD2 <AmiBlitz3.ab3@14109>   LEA $20(A0),A0
0002ABD6 <AmiBlitz3.ab3@14110> BRA.w JL_0_9C2E
0002ABD8 <AmiBlitz3.ab3@14114>   MOVEQ.l #$00,D1
0002ABDA <AmiBlitz3.ab3@14115> RTS
0002ABDE <AmiBlitz3.ab3@14119>   CMP.w #$3C,D0
0002ABE2 <AmiBlitz3.ab3@14120>    BNE.w JL_0_9C70
0002ABE6 <AmiBlitz3.ab3@14121>    BSR.w get1bytemain
0002ABEA <AmiBlitz3.ab3@14122>   CMP.w #$3D,D0
0002ABEE <AmiBlitz3.ab3@14123>    BNE.w JL_0_9C64
0002ABF4 <AmiBlitz3.ab3@14124>   LEA ople,A0
0002ABF8 <AmiBlitz3.ab3@14125> BRA.w JL_0_9CCA
0002ABFC <AmiBlitz3.ab3@14129>   CMP.w #$3E,D0
0002AC00 <AmiBlitz3.ab3@14130>    BNE.w JL_0_9C96
0002AC04 <AmiBlitz3.ab3@14131> BRA.w JL_0_9CC4
0002AC08 <AmiBlitz3.ab3@14135>   CMP.w #$3E,D0
0002AC0C <AmiBlitz3.ab3@14136>    BNE.w JL_0_9C9E
0002AC10 <AmiBlitz3.ab3@14137>    BSR.w get1bytemain
0002AC14 <AmiBlitz3.ab3@14138>   CMP.w #$3D,D0
0002AC18 <AmiBlitz3.ab3@14139>    BNE.w JL_0_9C8E
0002AC1E <AmiBlitz3.ab3@14140>   LEA opge,A0
0002AC22 <AmiBlitz3.ab3@14141> BRA.w JL_0_9CCA
0002AC26 <AmiBlitz3.ab3@14145>   CMP.w #$3C,D0
0002AC2A <AmiBlitz3.ab3@14146>    BEQ.w JL_0_9CC4
0002AC34 <AmiBlitz3.ab3@14150>     MOVE.w oldqflag,instringon
0002AC3A <AmiBlitz3.ab3@14151>     MOVEA.l lastsourcepos,A5
0002AC3E <AmiBlitz3.ab3@14152> BRA.w JL_0_9CCA
0002AC42 <AmiBlitz3.ab3@14156>   CMP.w #$3D,D0
0002AC46 <AmiBlitz3.ab3@14157>    BNE.w JL_0_9CCA
0002AC4A <AmiBlitz3.ab3@14158>    BSR.w get1bytemain
0002AC4E <AmiBlitz3.ab3@14159>   CMP.w #$3E,D0
0002AC52 <AmiBlitz3.ab3@14160>    BNE.w JL_0_9CBC
0002AC58 <AmiBlitz3.ab3@14161>   LEA opge,A0
0002AC5C <AmiBlitz3.ab3@14162> BRA.w JL_0_9CCA
0002AC60 <AmiBlitz3.ab3@14166>   CMP.w #$3C,D0
0002AC64 <AmiBlitz3.ab3@14167>   BNE.w JL_0_9C96
0002AC6A <AmiBlitz3.ab3@14170>   LEA opne,A0
0002AC6E <AmiBlitz3.ab3@14173>   MOVE.w $1E(A0),D1
0002AC70 <AmiBlitz3.ab3@14174> RTS
0002AC72 <AmiBlitz3.ab3@14181>   MOVE.w d2,d1
0002AC74 <AmiBlitz3.ab3@14182>   SUBQ.w #1,D1
0002AC78 <AmiBlitz3.ab3@14183>    BMI.w illoperr
0002AC7A <AmiBlitz3.ab3@14184>   LSL.w #2,D1
0002AC7E <AmiBlitz3.ab3@14185>   MOVE.l $2(A0,D1.W),D1
0002AC82 <AmiBlitz3.ab3@14186>    BEQ.w illoperr
0002AC84 <AmiBlitz3.ab3@14187>   MOVEA.l D1,A0
0002AC86 <AmiBlitz3.ab3@14190> JMP (A0)
0002AC8A <AmiBlitz3.ab3@14206>   MOVEA.l precsp(PC),A1
0002AC90 <AmiBlitz3.ab3@14207>   CMPA.l #precstackf,A1
0002AC94 <AmiBlitz3.ab3@14208>    BCC.w pserr
0002AC96 <AmiBlitz3.ab3@14209>   MOVE.w -(A1),D1
0002AC98 <AmiBlitz3.ab3@14210>   MOVEA.l -(A1),A0
0002AC9E <AmiBlitz3.ab3@14211>   MOVE.l A1,precsp
0002ACA0 <AmiBlitz3.ab3@14212> RTS
0002ACA4 <AmiBlitz3.ab3@14215> precsp:      Dc.l precstack
0002ADA0 <AmiBlitz3.ab3@14216> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002AE24 <AmiBlitz3.ab3@14217>              Ds.l 33
0002AE26 <AmiBlitz3.ab3@14223> mseq:  SEQ D0
0002AE28 <AmiBlitz3.ab3@14224> msne:    SNE D0
0002AE2A <AmiBlitz3.ab3@14225> mslt:    SLT D0
0002AE2C <AmiBlitz3.ab3@14226> msle:    SLE D0
0002AE2E <AmiBlitz3.ab3@14227> msgt:    SGT D0
0002AE30 <AmiBlitz3.ab3@14228> msge:    SGE D0
0002AE32 <AmiBlitz3.ab3@14230> cmp0:    CMP.b D0,D0
0002AE34 <AmiBlitz3.ab3@14231> cmp1:    CMP.w D0,D0
0002AE36 <AmiBlitz3.ab3@14232> cmp2:    CMP.l D0,D0
0002AE3A <AmiBlitz3.ab3@14236>   MOVE.w cmp0(PC),D1
0002AE3E <AmiBlitz3.ab3@14237> BRA.w doeqcmp2                                            ;writecompare
0002AE42 <AmiBlitz3.ab3@14241>   MOVE.w cmp0(PC),D1
0002AE46 <AmiBlitz3.ab3@14242> BRA.w donecmp2
0002AE4A <AmiBlitz3.ab3@14246>   MOVE.w cmp0(PC),D1
0002AE4E <AmiBlitz3.ab3@14247> BRA.w doltcmp2
0002AE52 <AmiBlitz3.ab3@14251>   MOVE.w cmp0(PC),D1
0002AE56 <AmiBlitz3.ab3@14252> BRA.w dolecmp2
0002AE5A <AmiBlitz3.ab3@14256>   MOVE.w cmp0(PC),D1
0002AE5E <AmiBlitz3.ab3@14257> BRA.w dogtcmp2
0002AE62 <AmiBlitz3.ab3@14262>   MOVE.w cmp0(PC),D1
0002AE66 <AmiBlitz3.ab3@14263> BRA.w dogecmp2
0002AE6A <AmiBlitz3.ab3@14267>   MOVE.w cmp1(PC),D1
0002AE6E <AmiBlitz3.ab3@14268> BRA.w doeqcmp2
0002AE72 <AmiBlitz3.ab3@14272>   MOVE.w cmp1(PC),D1
0002AE76 <AmiBlitz3.ab3@14273> BRA.w donecmp2
0002AE7A <AmiBlitz3.ab3@14277>   MOVE.w cmp1(PC),D1
0002AE7E <AmiBlitz3.ab3@14278> BRA.w doltcmp2
0002AE82 <AmiBlitz3.ab3@14282>   MOVE.w cmp1(PC),D1
0002AE86 <AmiBlitz3.ab3@14283> BRA.w dolecmp2
0002AE8A <AmiBlitz3.ab3@14287>   MOVE.w cmp1(PC),D1
0002AE8E <AmiBlitz3.ab3@14288> BRA.w dogtcmp2
0002AE92 <AmiBlitz3.ab3@14293>   MOVE.w cmp1(PC),D1
0002AE96 <AmiBlitz3.ab3@14294> BRA.w dogecmp2
0002AE9A <AmiBlitz3.ab3@14298>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002AE9E <AmiBlitz3.ab3@14299> BRA doeqcmp2
0002AEA2 <AmiBlitz3.ab3@14302>   MOVE.w cmp2(PC),D1
0002AEA6 <AmiBlitz3.ab3@14303> BRA donecmp2
0002AEAA <AmiBlitz3.ab3@14307>   MOVE.w cmp2(PC),D1
0002AEAE <AmiBlitz3.ab3@14308> BRA.w doltcmp2
0002AEB2 <AmiBlitz3.ab3@14312>   MOVE.w cmp2(PC),D1
0002AEB6 <AmiBlitz3.ab3@14313> BRA.w dolecmp2
0002AEBA <AmiBlitz3.ab3@14317>   MOVE.w cmp2(PC),D1
0002AEBE <AmiBlitz3.ab3@14318> BRA.w dogtcmp2
0002AEC2 <AmiBlitz3.ab3@14322>   MOVE.w cmp2(PC),D1
0002AEC6 <AmiBlitz3.ab3@14323> BRA.w dogecmp2
0002AEC8 <AmiBlitz3.ab3@14326> cfregat:  Ds.w 1
0002AECE <AmiBlitz3.ab3@14330>   MOVE.w D1,libjsr+2
0002AED2 <AmiBlitz3.ab3@14331>    BSR.w JL_0_AD40
0002AED4 <AmiBlitz3.ab3@14332>   MOVE.l D4,D1
0002AED8 <AmiBlitz3.ab3@14333>    BSR.w JL_0_AD38
0002AEDC <AmiBlitz3.ab3@14334>   MOVE.w #$C900,D1
0002AEE0 <AmiBlitz3.ab3@14335>    BSR.w Atokejsr
0002AEE4 <AmiBlitz3.ab3@14336>    BSR.w JL_0_A352
0002AEEA <AmiBlitz3.ab3@14337>   MOVE.l libjsr,D1
0002AEEE <AmiBlitz3.ab3@14338>    BSR.w writelong
0002AEF8 <AmiBlitz3.ab3@14339>   MOVE.w regnum,cfregat
0002AEFE <AmiBlitz3.ab3@14340>   CLR.w regnum
0002AF00 <AmiBlitz3.ab3@14341> RTS
0002AF0A <AmiBlitz3.ab3@14345>   MOVE.w cfregat,regnum
0002AF0E <AmiBlitz3.ab3@14346>    BSR.w JL_0_A36E
0002AF10 <AmiBlitz3.ab3@14347>   MOVE.l D5,D1
0002AF14 <AmiBlitz3.ab3@14348> BRA.w JL_0_AD38
0002AF16 <AmiBlitz3.ab3@14352>    MOVEQ.l #-$2A,D1
0002AF1C <AmiBlitz3.ab3@14353>    TST.b fpu
0002AF20 <AmiBlitz3.ab3@14354>    BEQ do_equal_float__nofpu
0002AF22 <AmiBlitz3.ab3@14355>    MOVEQ #0,d1
0002AF28 <AmiBlitz3.ab3@14356>    MOVE.w regnum,d1
0002AF2A <AmiBlitz3.ab3@14357>    MOVE.l d1,d2
0002AF2C <AmiBlitz3.ab3@14358>    ASL.l #7,d1
0002AF2E <AmiBlitz3.ab3@14359>    ADDQ  #1,d2
0002AF30 <AmiBlitz3.ab3@14360>    ASL.l #8,d2
0002AF32 <AmiBlitz3.ab3@14361>    ASL.l #2,d2
0002AF34 <AmiBlitz3.ab3@14362>    OR.l d2,d1
0002AF3A <AmiBlitz3.ab3@14363>    OR.l #$f2000038,d1
0002AF40 <AmiBlitz3.ab3@14364>    JSR writelong
0002AF44 <AmiBlitz3.ab3@14365>    MOVE.w #$f240,d1
0002AF4A <AmiBlitz3.ab3@14366>    OR.w regnum,d1
0002AF4E <AmiBlitz3.ab3@14367>    BSR writeword
0002AF50 <AmiBlitz3.ab3@14368>    MOVEQ.l #1,d2
0002AF54 <AmiBlitz3.ab3@14369>    MOVE.w #1,d1                                            ;fpu comp fseq
0002AF58 <AmiBlitz3.ab3@14370>    BSR writeword
0002AF5A <AmiBlitz3.ab3@14371> RTS
0002AF5E <AmiBlitz3.ab3@14374>    BSR.w docflib
0002AF62 <AmiBlitz3.ab3@14375>    BSR.w doeqcmp
0002AF66 <AmiBlitz3.ab3@14376> BRA.w docflib2
0002AF68 <AmiBlitz3.ab3@14380>   MOVEQ.l #-$2A,D1
0002AF6E <AmiBlitz3.ab3@14381>   TST.b fpu
0002AF72 <AmiBlitz3.ab3@14382>    BEQ do_not_equal_float__nofpu
0002AF74 <AmiBlitz3.ab3@14383>    MOVEQ #0,d1
0002AF7A <AmiBlitz3.ab3@14384>    MOVE.w regnum,d1
0002AF7C <AmiBlitz3.ab3@14385>    MOVE.l d1,d2
0002AF7E <AmiBlitz3.ab3@14386>    ASL.l #7,d1
0002AF80 <AmiBlitz3.ab3@14387>    ADDQ  #1,d2
0002AF82 <AmiBlitz3.ab3@14388>    ASL.l #8,d2
0002AF84 <AmiBlitz3.ab3@14389>    ASL.l #2,d2
0002AF86 <AmiBlitz3.ab3@14390>    OR.l d2,d1
0002AF8C <AmiBlitz3.ab3@14391>    OR.l #$f2000038,d1
0002AF92 <AmiBlitz3.ab3@14392>    JSR writelong
0002AF96 <AmiBlitz3.ab3@14393>    MOVE.w #$f240,d1
0002AF9C <AmiBlitz3.ab3@14394>    OR.w regnum,d1
0002AFA0 <AmiBlitz3.ab3@14395>    BSR writeword
0002AFA6 <AmiBlitz3.ab3@14396>    MOVE.l #1,d2
0002AFAA <AmiBlitz3.ab3@14397>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002AFAE <AmiBlitz3.ab3@14398>    BSR writeword
0002AFB0 <AmiBlitz3.ab3@14399> RTS
0002AFB4 <AmiBlitz3.ab3@14402>    BSR.w docflib
0002AFB8 <AmiBlitz3.ab3@14403>    BSR.w donecmp
0002AFBC <AmiBlitz3.ab3@14404> BRA.w docflib2
0002AFBE <AmiBlitz3.ab3@14408>   MOVEQ.l #-$2A,D1
0002AFC4 <AmiBlitz3.ab3@14409>     TST.b fpu
0002AFC8 <AmiBlitz3.ab3@14410>    BEQ do_littler_float__nofpu
0002AFCA <AmiBlitz3.ab3@14411>    MOVEQ #0,d1
0002AFD0 <AmiBlitz3.ab3@14412>    MOVE.w regnum,d1
0002AFD2 <AmiBlitz3.ab3@14413>    MOVE.l d1,d2
0002AFD4 <AmiBlitz3.ab3@14414>    ASL.l #7,d1
0002AFD6 <AmiBlitz3.ab3@14415>    ADDQ  #1,d2
0002AFD8 <AmiBlitz3.ab3@14416>    ASL.l #8,d2
0002AFDA <AmiBlitz3.ab3@14417>    ASL.l #2,d2
0002AFDC <AmiBlitz3.ab3@14418>    OR.l d2,d1
0002AFE2 <AmiBlitz3.ab3@14419>    OR.l #$f2000038,d1
0002AFE8 <AmiBlitz3.ab3@14420>    JSR writelong
0002AFEC <AmiBlitz3.ab3@14421>    MOVE.w #$f240,d1
0002AFF2 <AmiBlitz3.ab3@14422>    OR.w regnum,d1
0002AFF6 <AmiBlitz3.ab3@14423>    BSR writeword
0002AFFC <AmiBlitz3.ab3@14424>    MOVE.l #$1,d2
0002B000 <AmiBlitz3.ab3@14425>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002B004 <AmiBlitz3.ab3@14426>    BSR writeword
0002B006 <AmiBlitz3.ab3@14427> RTS
0002B00A <AmiBlitz3.ab3@14430>    BSR.w docflib
0002B00E <AmiBlitz3.ab3@14431>    BSR.w doltcmp
0002B012 <AmiBlitz3.ab3@14432> BRA.w docflib2
0002B014 <AmiBlitz3.ab3@14436>   MOVEQ.l #-$2A,D1
0002B01A <AmiBlitz3.ab3@14437>   TST.b fpu
0002B01E <AmiBlitz3.ab3@14438>    BEQ do_littler_equal_float__nofpu
0002B020 <AmiBlitz3.ab3@14439>    MOVEQ #0,d1
0002B026 <AmiBlitz3.ab3@14440>    MOVE.w regnum,d1
0002B028 <AmiBlitz3.ab3@14441>    MOVE.l d1,d2
0002B02A <AmiBlitz3.ab3@14442>    ASL.l #7,d1
0002B02C <AmiBlitz3.ab3@14443>    ADDQ  #1,d2
0002B02E <AmiBlitz3.ab3@14444>    ASL.l #8,d2
0002B030 <AmiBlitz3.ab3@14445>    ASL.l #2,d2
0002B032 <AmiBlitz3.ab3@14446>    OR.l d2,d1
0002B038 <AmiBlitz3.ab3@14447>    OR.l #$f2000038,d1
0002B03E <AmiBlitz3.ab3@14448>    JSR writelong
0002B042 <AmiBlitz3.ab3@14449>    MOVE.w #$f240,d1
0002B048 <AmiBlitz3.ab3@14450>    OR.w regnum,d1
0002B04C <AmiBlitz3.ab3@14451>    BSR writeword
0002B052 <AmiBlitz3.ab3@14452>    MOVE.l #1,d2
0002B056 <AmiBlitz3.ab3@14453>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002B05A <AmiBlitz3.ab3@14454>    BSR writeword
0002B05C <AmiBlitz3.ab3@14455> RTS
0002B060 <AmiBlitz3.ab3@14458>    BSR.w docflib
0002B064 <AmiBlitz3.ab3@14459>    BSR.w dolecmp
0002B068 <AmiBlitz3.ab3@14460> BRA.w docflib2
0002B06A <AmiBlitz3.ab3@14464>   MOVEQ.l #-$2A,D1
0002B070 <AmiBlitz3.ab3@14465>    TST.b fpu
0002B074 <AmiBlitz3.ab3@14466>    BEQ do_greater_float__nofpu
0002B076 <AmiBlitz3.ab3@14467>     MOVEQ #0,d1
0002B07C <AmiBlitz3.ab3@14468>    MOVE.w regnum,d1
0002B07E <AmiBlitz3.ab3@14469>    MOVE.l d1,d2
0002B080 <AmiBlitz3.ab3@14470>    ASL.l #7,d1
0002B082 <AmiBlitz3.ab3@14471>    ADDQ  #1,d2
0002B084 <AmiBlitz3.ab3@14472>    ASL.l #8,d2
0002B086 <AmiBlitz3.ab3@14473>    ASL.l #2,d2
0002B088 <AmiBlitz3.ab3@14474>    OR.l d2,d1
0002B08E <AmiBlitz3.ab3@14475>    OR.l #$f2000038,d1
0002B094 <AmiBlitz3.ab3@14476>    JSR writelong
0002B098 <AmiBlitz3.ab3@14477>    MOVE.w #$f240,d1
0002B09E <AmiBlitz3.ab3@14478>    OR.w regnum,d1
0002B0A2 <AmiBlitz3.ab3@14479>    BSR writeword
0002B0A8 <AmiBlitz3.ab3@14480>    MOVE.l #1,d2
0002B0AC <AmiBlitz3.ab3@14481>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002B0B0 <AmiBlitz3.ab3@14482>    BSR writeword
0002B0B2 <AmiBlitz3.ab3@14483> RTS
0002B0B6 <AmiBlitz3.ab3@14486>    BSR.w docflib
0002B0BA <AmiBlitz3.ab3@14487>    BSR.w dogtcmp
0002B0BE <AmiBlitz3.ab3@14488> BRA.w docflib2
0002B0C0 <AmiBlitz3.ab3@14492>   MOVEQ.l #-$2A,D1
0002B0C6 <AmiBlitz3.ab3@14493>  TST.b fpu
0002B0CA <AmiBlitz3.ab3@14494>    BEQ do_greater_equal_float__nofpu
0002B0CC <AmiBlitz3.ab3@14495>    MOVEQ #0,d1
0002B0D2 <AmiBlitz3.ab3@14496>    MOVE.w regnum,d1
0002B0D4 <AmiBlitz3.ab3@14497>    MOVE.l d1,d2
0002B0D6 <AmiBlitz3.ab3@14498>    ASL.l #7,d1
0002B0D8 <AmiBlitz3.ab3@14499>    ADDQ  #1,d2
0002B0DA <AmiBlitz3.ab3@14500>    ASL.l #8,d2
0002B0DC <AmiBlitz3.ab3@14501>    ASL.l #2,d2
0002B0DE <AmiBlitz3.ab3@14502>    OR.l d2,d1
0002B0E4 <AmiBlitz3.ab3@14503>    OR.l #$f2000038,d1
0002B0EA <AmiBlitz3.ab3@14504>    JSR writelong
0002B0EE <AmiBlitz3.ab3@14505>    MOVE.w #$f240,d1
0002B0F4 <AmiBlitz3.ab3@14506>    OR.w regnum,d1
0002B0F8 <AmiBlitz3.ab3@14507>    BSR writeword
0002B0FE <AmiBlitz3.ab3@14508>    MOVE.l #1,d2
0002B102 <AmiBlitz3.ab3@14509>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002B106 <AmiBlitz3.ab3@14510>    BSR writeword
0002B108 <AmiBlitz3.ab3@14511> RTS
0002B10C <AmiBlitz3.ab3@14514>    BSR.w docflib
0002B110 <AmiBlitz3.ab3@14515>    BSR.w dogecmp
0002B114 <AmiBlitz3.ab3@14516> BRA.w docflib2
0002B11A <AmiBlitz3.ab3@14521>   MOVE.l #$CE00,D1
0002B120 <AmiBlitz3.ab3@14522>    MOVE.l d1,lastinstruction
0002B124 <AmiBlitz3.ab3@14523>    BSR.w Atokejsr
0002B128 <AmiBlitz3.ab3@14524> BRA.w doeqcmp
0002B12E <AmiBlitz3.ab3@14528>   MOVE.l #$CE00,D1
0002B134 <AmiBlitz3.ab3@14529>    MOVE.l d1,lastinstruction
0002B138 <AmiBlitz3.ab3@14530>    BSR.w Atokejsr
0002B13C <AmiBlitz3.ab3@14531> BRA.w donecmp
0002B142 <AmiBlitz3.ab3@14535>   MOVE.l #$CE00,D1
0002B148 <AmiBlitz3.ab3@14536>    MOVE.l d1,lastinstruction
0002B14C <AmiBlitz3.ab3@14537>    BSR.w Atokejsr
0002B150 <AmiBlitz3.ab3@14538> BRA.w doltcmp
0002B156 <AmiBlitz3.ab3@14542>   MOVE.l #$CE00,D1
0002B15C <AmiBlitz3.ab3@14543>    MOVE.l d1,lastinstruction
0002B160 <AmiBlitz3.ab3@14544>    BSR.w Atokejsr
0002B164 <AmiBlitz3.ab3@14545> BRA.w dolecmp
0002B16A <AmiBlitz3.ab3@14549>   MOVE.l #$CE00,D1
0002B170 <AmiBlitz3.ab3@14550>    MOVE.l d1,lastinstruction
0002B174 <AmiBlitz3.ab3@14551>    BSR.w Atokejsr
0002B178 <AmiBlitz3.ab3@14552> BRA.w dogtcmp
0002B17E <AmiBlitz3.ab3@14556>   MOVE.l #$CE00,D1
0002B184 <AmiBlitz3.ab3@14557>    MOVE.l d1,lastinstruction
0002B188 <AmiBlitz3.ab3@14558>    BSR.w Atokejsr
0002B18C <AmiBlitz3.ab3@14559> BRA.w dogecmp
0002B192 <AmiBlitz3.ab3@14564>   TST.b fast                                               ;compare
0002B196 <AmiBlitz3.ab3@14565>   BEQ cmpit__org
0002B19C <AmiBlitz3.ab3@14569>   MOVE.l destpointer,a0
0002B1A2 <AmiBlitz3.ab3@14570>   SUB.l imm_addr,a0
0002B1A8 <AmiBlitz3.ab3@14571>   CMP.l #6,a0
0002B1AC <AmiBlitz3.ab3@14572>   BNE cmpit__l11
0002B1B2 <AmiBlitz3.ab3@14573>   MOVE.l imm_addr,a0
0002B1BA <AmiBlitz3.ab3@14574>   CMP.w #$223c,imm_addr
0002B1BE <AmiBlitz3.ab3@14575>   BNE cmpit__org
0002B1C4 <AmiBlitz3.ab3@14576>   ADD.w #$8e80,-6(a4)
0002B1CA <AmiBlitz3.ab3@14579>   CLR.l imm_addr
0002B1CC <AmiBlitz3.ab3@14580> RTS
0002B1D2 <AmiBlitz3.ab3@14583>   CMP.l #4,a0
0002B1D6 <AmiBlitz3.ab3@14584>   BNE cmpit__l10
0002B1DA <AmiBlitz3.ab3@14585>   CMP.b #2,d3
0002B1DE <AmiBlitz3.ab3@14586>   BNE cmpit__l11b
0002B1E4 <AmiBlitz3.ab3@14587>   ADD.w #$7e40,-4(a4)
0002B1E6 <AmiBlitz3.ab3@14588> RTS
0002B1EC <AmiBlitz3.ab3@14591>  ADD.w #$7e00,-4(a4)
0002B1EE <AmiBlitz3.ab3@14592> RTS
0002B1F4 <AmiBlitz3.ab3@14595>    MOVE.l destpointer,a0
0002B1FA <AmiBlitz3.ab3@14596>    SUB.l load_var_addr,a0
0002B1FE <AmiBlitz3.ab3@14597>    CMP.w #4,a0
0002B202 <AmiBlitz3.ab3@14598>    BNE cmpit__org
0002B206 <AmiBlitz3.ab3@14599>    CMP.b #3,d3
0002B20A <AmiBlitz3.ab3@14600>    BCS cmpit__lv1
0002B210 <AmiBlitz3.ab3@14601>    CLR.l load_var_addr
0002B216 <AmiBlitz3.ab3@14602>    ADD.w #$9080-$200,-4(a4)
0002B218 <AmiBlitz3.ab3@14603> RTS
0002B21C <AmiBlitz3.ab3@14606>   CMP.b #2,d3
0002B220 <AmiBlitz3.ab3@14607>    BNE cmpit__org
0002B226 <AmiBlitz3.ab3@14608>    CLR.l load_var_addr
0002B22C <AmiBlitz3.ab3@14609>    ADD.w #$8040-$200,-4(a4)
0002B22E <AmiBlitz3.ab3@14610> RTS
0002B234 <AmiBlitz3.ab3@14613>   MOVE.w regnum,D3
0002B236 <AmiBlitz3.ab3@14614>   OR.w D3,D1
0002B238 <AmiBlitz3.ab3@14615>   LSL.w #8,D3
0002B23A <AmiBlitz3.ab3@14616>   LSL.w #1,D3
0002B23C <AmiBlitz3.ab3@14617>   OR.w D3,D1
0002B23E <AmiBlitz3.ab3@14618>   ADDQ.w #1,D1
0002B242 <AmiBlitz3.ab3@14619> BRA.w writeword
0002B246 <AmiBlitz3.ab3@14623>    BSR.w cmpit
0002B24A <AmiBlitz3.ab3@14626>    MOVE.w mseq(PC),D1
0002B24E <AmiBlitz3.ab3@14627> BRA.w cpoke
0002B252 <AmiBlitz3.ab3@14631>   BSR.w cmpit
0002B256 <AmiBlitz3.ab3@14634>   MOVE.w msne(PC),D1
0002B25A <AmiBlitz3.ab3@14635> BRA.w cpoke
0002B25E <AmiBlitz3.ab3@14639>   BSR.w cmpit
0002B262 <AmiBlitz3.ab3@14642>    MOVE.w mslt(PC),D1
0002B266 <AmiBlitz3.ab3@14643> BRA.w cpoke
0002B26A <AmiBlitz3.ab3@14647>    BSR.w cmpit
0002B26E <AmiBlitz3.ab3@14650>    MOVE.w msle(PC),D1
0002B272 <AmiBlitz3.ab3@14651> BRA.w cpoke
0002B276 <AmiBlitz3.ab3@14655>    BSR.w cmpit
0002B27A <AmiBlitz3.ab3@14658>    MOVE.w msgt(PC),D1
0002B27E <AmiBlitz3.ab3@14659> BRA.w cpoke
0002B282 <AmiBlitz3.ab3@14663>   BSR.w cmpit
0002B286 <AmiBlitz3.ab3@14666>    MOVE.w msge(PC),D1
0002B28C <AmiBlitz3.ab3@14669>    OR.w regnum,D1
0002B290 <AmiBlitz3.ab3@14670>    CMP.w #5,d2
0002B294 <AmiBlitz3.ab3@14671>    BNE cpoke__nod0
0002B298 <AmiBlitz3.ab3@14672>    CMP.w #5,d3
0002B29C <AmiBlitz3.ab3@14673>    BNE cpoke__nod0
0002B29E <AmiBlitz3.ab3@14674>    MOVE.l d1,-(a7)
0002B2A4 <AmiBlitz3.ab3@14675>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002B2A8 <AmiBlitz3.ab3@14676>    BSR writelong
0002B2AA <AmiBlitz3.ab3@14677>    MOVE.l (a7)+,d1
0002B2AE <AmiBlitz3.ab3@14680>    BSR.w writeword                                         ;writeseq
0002B2B0 <AmiBlitz3.ab3@14681>    MOVEQ.l #1,d2
0002B2B6 <AmiBlitz3.ab3@14682>    MOVE.l lasttoken,d1
0002B2BC <AmiBlitz3.ab3@14683>     TST.b fast
0002B2C0 <AmiBlitz3.ab3@14684>     BEQ.s cpoke__l11
0002B2C6 <AmiBlitz3.ab3@14685>    CMP.l #$800b,d1
0002B2CA <AmiBlitz3.ab3@14686>    BEQ cpoke__l10
0002B2CE <AmiBlitz3.ab3@14689>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002B2D4 <AmiBlitz3.ab3@14690>   OR.w regnum,D1
0002B2D8 <AmiBlitz3.ab3@14691>    BSR.w writeword                                         ;writeext.w
0002B2DA <AmiBlitz3.ab3@14692>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002B2DC <AmiBlitz3.ab3@14695> RTS
0002B2E0 <AmiBlitz3.ab3@14700>   MOVE.w #$D040,D1
0002B2E2 <AmiBlitz3.ab3@14701>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002B2E6 <AmiBlitz3.ab3@14702> BRA.w doplus2
0002B2EA <AmiBlitz3.ab3@14706>   MOVE.w #$D040,D1
0002B2EC <AmiBlitz3.ab3@14707>   MOVEQ.l #$03,D2                                          ;now a long
0002B2F0 <AmiBlitz3.ab3@14708>    BSR.w doplus2
0002B2F4 <AmiBlitz3.ab3@14709> BRA.w convert_word_to_long
0002B2F8 <AmiBlitz3.ab3@14713>   MOVE.w #$D080,D1                                         ;writeaddlong
0002B2FA <AmiBlitz3.ab3@14716>   MOVE.w d1,a1
0002B300 <AmiBlitz3.ab3@14717>   TST.b fast
0002B304 <AmiBlitz3.ab3@14718>   BEQ doplus2__l10
0002B306 <AmiBlitz3.ab3@14722>   ASR.w #8,d1
0002B30A <AmiBlitz3.ab3@14723>   CMP.b #$90,d1
0002B30E <AmiBlitz3.ab3@14724>   BEQ doplus2__sub1
0002B312 <AmiBlitz3.ab3@14725>   CMP.b #$d0,d1
0002B316 <AmiBlitz3.ab3@14726>   BNE doplus2__l10
0002B31A <AmiBlitz3.ab3@14727>   CMP.b #3,d3
0002B31E <AmiBlitz3.ab3@14728>   BCS doplus2__lq10
0002B324 <AmiBlitz3.ab3@14729>   TST.b quickadd
0002B32A <AmiBlitz3.ab3@14733>    MOVE.l destpointer,a0
0002B330 <AmiBlitz3.ab3@14734>    CLR.b quickadd
0002B336 <AmiBlitz3.ab3@14735>    CLR.l load_var_addr
0002B33C <AmiBlitz3.ab3@14736>    SUB.l imm_addr,a0
0002B340 <AmiBlitz3.ab3@14737>    CMP.w #6,a0
0002B344 <AmiBlitz3.ab3@14738>    BEQ doplus2__li10
0002B348 <AmiBlitz3.ab3@14739>    CMP.w #4,a0
0002B34C <AmiBlitz3.ab3@14740>    BNE.s doplus2__li1
0002B352 <AmiBlitz3.ab3@14741>    CLR.l imm_addr
0002B358 <AmiBlitz3.ab3@14742>    ADD.w #$a040-$200,-4(a4)
0002B35A <AmiBlitz3.ab3@14743> RTS
0002B35C <AmiBlitz3.ab3@14746>    MOVE.l a4,a0
0002B362 <AmiBlitz3.ab3@14747>    SUB.l load_var_addr,a0
0002B368 <AmiBlitz3.ab3@14748>    CMP.l #$a,a0
0002B36C <AmiBlitz3.ab3@14749>    BNE doplus2__l10e
0002B372 <AmiBlitz3.ab3@14750>    CLR.l load_var_addr
0002B376 <AmiBlitz3.ab3@14751>    MOVE.w -$8(a4),d1
0002B37C <AmiBlitz3.ab3@14752>    MOVE.l -$4(a4),-$8(a4)
0002B380 <AmiBlitz3.ab3@14753>    MOVE.w d1,-$4(a4)
0002B386 <AmiBlitz3.ab3@14754>    SUB.w #$1980,-$a(a4)
0002B38C <AmiBlitz3.ab3@14755>    SUBQ.l #2,destpointer
0002B38E <AmiBlitz3.ab3@14756> RTS
0002B394 <AmiBlitz3.ab3@14759>   CLR.b quickadd
0002B398 <AmiBlitz3.ab3@14760> BRA doplus2__l10
0002B39E <AmiBlitz3.ab3@14763>    CLR.l imm_addr
0002B3A2 <AmiBlitz3.ab3@14764>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002B3A6 <AmiBlitz3.ab3@14765>    BNE doplus2__doit
0002B3AC <AmiBlitz3.ab3@14766>    SUBQ.l #6,destpointer
0002B3AE <AmiBlitz3.ab3@14767> RTS
0002B3B4 <AmiBlitz3.ab3@14770>    ADD.w #$b080-$200,-6(a4)
0002B3B6 <AmiBlitz3.ab3@14771> RTS
0002B3BC <AmiBlitz3.ab3@14774>    MOVE.l destpointer,a0
0002B3C2 <AmiBlitz3.ab3@14775>    SUB.l load_var_addr,a0
0002B3C6 <AmiBlitz3.ab3@14776>    CMP.w #4,a0
0002B3CA <AmiBlitz3.ab3@14777>    BNE doplus2__l10
0002B3CE <AmiBlitz3.ab3@14778>    CMP.b #3,d3
0002B3D2 <AmiBlitz3.ab3@14779>    BNE doplus2__lv1
0002B3D8 <AmiBlitz3.ab3@14780>    CLR.l load_var_addr
0002B3DE <AmiBlitz3.ab3@14781>    ADD.w #$b080-$200,-4(a4)
0002B3E0 <AmiBlitz3.ab3@14782> RTS
0002B3E4 <AmiBlitz3.ab3@14785>   CMP.b #2,d3
0002B3E8 <AmiBlitz3.ab3@14786>   BNE doplus2__l10
0002B3EE <AmiBlitz3.ab3@14787>   CLR.l load_var_addr
0002B3F4 <AmiBlitz3.ab3@14788>   ADD.w #$a040-$200,-4(a4)
0002B3F6 <AmiBlitz3.ab3@14789> RTS
0002B3FC <AmiBlitz3.ab3@14792>   MOVE.w regnum,D3
0002B3FE <AmiBlitz3.ab3@14793>   MOVE.w a1,d1
0002B400 <AmiBlitz3.ab3@14794>   OR.w D3,D1
0002B402 <AmiBlitz3.ab3@14795>   ADDQ.w #1,D1
0002B404 <AmiBlitz3.ab3@14796>   LSL.w #8,D3
0002B406 <AmiBlitz3.ab3@14797>   LSL.w #1,D3
0002B408 <AmiBlitz3.ab3@14798>   OR.w D3,D1
0002B40C <AmiBlitz3.ab3@14799> BRA.w writeword
0002B410 <AmiBlitz3.ab3@14802>    CMP.b #3,d3
0002B414 <AmiBlitz3.ab3@14803>    BCS doplus2__sub1_lq10
0002B41A <AmiBlitz3.ab3@14804>    TST.b quickadd
0002B420 <AmiBlitz3.ab3@14808>    MOVE.l destpointer,a0
0002B426 <AmiBlitz3.ab3@14809>    CLR.b quickadd
0002B42C <AmiBlitz3.ab3@14810>    CLR.l load_var_addr
0002B432 <AmiBlitz3.ab3@14811>    SUB.l imm_addr,a0
0002B436 <AmiBlitz3.ab3@14812>    CMP.w #6,a0
0002B43A <AmiBlitz3.ab3@14813>    BEQ doplus2__sub1_li10
0002B43E <AmiBlitz3.ab3@14814>    CMP.w #4,a0
0002B442 <AmiBlitz3.ab3@14815>    BNE.s doplus2__sub1_li1
0002B448 <AmiBlitz3.ab3@14816>    CLR.l imm_addr
0002B44E <AmiBlitz3.ab3@14817>    ADD.w #$6040-$200,-4(a4)
0002B450 <AmiBlitz3.ab3@14818> RTS
0002B452 <AmiBlitz3.ab3@14821>    MOVE.l a4,a0
0002B458 <AmiBlitz3.ab3@14822>     SUB.l load_var_addr,a0
0002B45E <AmiBlitz3.ab3@14823>     CMP.l #$a,a0
0002B462 <AmiBlitz3.ab3@14824>     BNE doplus2__sub1_l10e
0002B468 <AmiBlitz3.ab3@14825>    CLR.l load_var_addr
0002B46C <AmiBlitz3.ab3@14826>    MOVE.w -$8(a4),d1
0002B472 <AmiBlitz3.ab3@14827>    MOVE.l -$4(a4),-$8(a4)
0002B476 <AmiBlitz3.ab3@14828>    MOVE.w d1,-$4(a4)
0002B47C <AmiBlitz3.ab3@14829>    SUB.w #$1b80,-$a(a4)
0002B482 <AmiBlitz3.ab3@14830>    SUBQ.l #2,destpointer
0002B484 <AmiBlitz3.ab3@14831> RTS
0002B48A <AmiBlitz3.ab3@14834>   CLR.b quickadd
0002B48E <AmiBlitz3.ab3@14835> BRA doplus2__sub1_l10
0002B494 <AmiBlitz3.ab3@14838>    CLR.l imm_addr
0002B49A <AmiBlitz3.ab3@14839>    ADD.w #$7080-$200,-6(a4)
0002B49C <AmiBlitz3.ab3@14840> RTS
0002B4A2 <AmiBlitz3.ab3@14843>    MOVE.l destpointer,a0
0002B4A8 <AmiBlitz3.ab3@14844>    SUB.l load_var_addr,a0
0002B4AC <AmiBlitz3.ab3@14845>    CMP.w #4,a0
0002B4B0 <AmiBlitz3.ab3@14846>    BNE doplus2__sub1_l10
0002B4B4 <AmiBlitz3.ab3@14847>    CMP.b #3,d3
0002B4B8 <AmiBlitz3.ab3@14848>    BNE doplus2__sub1_lv1
0002B4BE <AmiBlitz3.ab3@14849>    CLR.l load_var_addr
0002B4C4 <AmiBlitz3.ab3@14850>    ADD.w #$7080-$200,-4(a4)
0002B4C6 <AmiBlitz3.ab3@14851> RTS
0002B4CA <AmiBlitz3.ab3@14854>    CMP.b #2,d3
0002B4CE <AmiBlitz3.ab3@14855>    BNE doplus2__sub1_l10
0002B4D4 <AmiBlitz3.ab3@14856>    CLR.l load_var_addr
0002B4DA <AmiBlitz3.ab3@14857>    ADD.w #$6040-$200,-4(a4)
0002B4DC <AmiBlitz3.ab3@14858> RTS
0002B4E2 <AmiBlitz3.ab3@14861>   MOVE.w regnum,D3
0002B4E4 <AmiBlitz3.ab3@14862>   MOVE.w a1,d1
0002B4E6 <AmiBlitz3.ab3@14863>   OR.w D3,D1
0002B4E8 <AmiBlitz3.ab3@14864>   ADDQ.w #1,D1
0002B4EA <AmiBlitz3.ab3@14865>   LSL.w #8,D3
0002B4EC <AmiBlitz3.ab3@14866>   LSL.w #1,D3
0002B4EE <AmiBlitz3.ab3@14867>   OR.w D3,D1
0002B4F2 <AmiBlitz3.ab3@14868> BRA.w writeword
0002B4F4 <AmiBlitz3.ab3@14872>   MOVEQ #0,d0
0002B4FA <AmiBlitz3.ab3@14873>   MOVE.w regnum,d0
0002B4FC <AmiBlitz3.ab3@14874>   ADDQ #1,d0
0002B4FE <AmiBlitz3.ab3@14875>   ASL.w #8,d0
0002B500 <AmiBlitz3.ab3@14876>   ASL.w #2,d0
0002B506 <AmiBlitz3.ab3@14877>   MOVE.l #$f2000022,d1                                     ;fpu add
0002B508 <AmiBlitz3.ab3@14878>   OR.l d0,d1
0002B50E <AmiBlitz3.ab3@14879>   MOVE.w regnum,d0
0002B510 <AmiBlitz3.ab3@14880>   ASL.w #7,d0
0002B512 <AmiBlitz3.ab3@14881>   OR.l d0,d1
0002B516 <AmiBlitz3.ab3@14882> BRA.w writelong
0002B51C <AmiBlitz3.ab3@14888>   TST.b iee
0002B520 <AmiBlitz3.ab3@14889>   BNE do_plus_float__fadd1
0002B524 <AmiBlitz3.ab3@14890>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002B52A <AmiBlitz3.ab3@14893>    MOVE.w D1,libjsr+2
0002B52E <AmiBlitz3.ab3@14894>    BSR.w JL_0_AD40
0002B530 <AmiBlitz3.ab3@14895>   MOVE.l D4,D1
0002B534 <AmiBlitz3.ab3@14896>    BSR.w JL_0_AD38
0002B538 <AmiBlitz3.ab3@14897>   MOVE.w #$C900,D1
0002B53C <AmiBlitz3.ab3@14898>    BSR.w Atokejsr
0002B540 <AmiBlitz3.ab3@14899>    BSR.w JL_0_A352
0002B546 <AmiBlitz3.ab3@14900>   MOVE.l libjsr,D1
0002B54A <AmiBlitz3.ab3@14901>    BSR.w writelong
0002B54E <AmiBlitz3.ab3@14902>    BSR.w JL_0_A36E
0002B550 <AmiBlitz3.ab3@14903>   MOVE.l D5,D1
0002B554 <AmiBlitz3.ab3@14904> BRA.w JL_0_AD38
0002B55A <AmiBlitz3.ab3@14908>   MOVE.w regnum,D1
0002B55C <AmiBlitz3.ab3@14909>   LSL.w #8,D1
0002B55E <AmiBlitz3.ab3@14910>   LSL.w #1,D1
0002B560 <AmiBlitz3.ab3@14911>   MOVE.w D1,-(A7)
0002B564 <AmiBlitz3.ab3@14912>   CMP.w #3072,d1
0002B568 <AmiBlitz3.ab3@14913>   BEQ 'l1
0002B56E <AmiBlitz3.ab3@14914>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002B572 <AmiBlitz3.ab3@14915> BRA 'l2
0002B576 <AmiBlitz3.ab3@14918>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002B57A <AmiBlitz3.ab3@14921>    BSR.w writeword
0002B57C <AmiBlitz3.ab3@14922>   MOVE.w (A7)+,D1
0002B582 <AmiBlitz3.ab3@14923>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002B586 <AmiBlitz3.ab3@14924> BRA.w writeword
0002B58A <AmiBlitz3.ab3@14930>   MOVE.w #$9040,D1
0002B58E <AmiBlitz3.ab3@14931> BRA.w doplus2
0002B592 <AmiBlitz3.ab3@14935>   MOVE.w #$9040,D1
0002B596 <AmiBlitz3.ab3@14936> BRA.w doplus2
0002B59A <AmiBlitz3.ab3@14940>   MOVE.w #$9080,D1
0002B59E <AmiBlitz3.ab3@14941> BRA.w doplus2
0002B5A4 <AmiBlitz3.ab3@14945>    TST.b iee
0002B5A8 <AmiBlitz3.ab3@14946>     BNE do_minus_float__fs1
0002B5AC <AmiBlitz3.ab3@14947>   MOVE.w #$FFB8,D1                                         ;floatsub
0002B5B0 <AmiBlitz3.ab3@14948> BRA.w doflib
0002B5B2 <AmiBlitz3.ab3@14951>   MOVEQ #0,d0
0002B5B8 <AmiBlitz3.ab3@14952>   MOVE.w regnum,d0
0002B5BA <AmiBlitz3.ab3@14953>   ADDQ #1,d0
0002B5BC <AmiBlitz3.ab3@14954>   ASL.w #8,d0
0002B5BE <AmiBlitz3.ab3@14955>   ASL.w #2,d0
0002B5C4 <AmiBlitz3.ab3@14956>   MOVE.l #$f2000028,d1
0002B5C6 <AmiBlitz3.ab3@14957>   OR.l d0,d1
0002B5CC <AmiBlitz3.ab3@14958>   MOVE.w regnum,d0
0002B5CE <AmiBlitz3.ab3@14959>   ASL.w #7,d0
0002B5D0 <AmiBlitz3.ab3@14960>   OR.l d0,d1
0002B5D4 <AmiBlitz3.ab3@14961> BRA.w writelong
0002B5D8 <AmiBlitz3.ab3@14967>   MOVE.w #$C1C0,D1
0002B5DA <AmiBlitz3.ab3@14968>   MOVEQ.l #$02,D2                                          ;now a word
0002B5DE <AmiBlitz3.ab3@14969> BRA.w doplus2
0002B5E2 <AmiBlitz3.ab3@14973>   MOVE.w #$C1C0,D1
0002B5E4 <AmiBlitz3.ab3@14974>   MOVEQ.l #$03,D2                                          ;now a long.
0002B5E8 <AmiBlitz3.ab3@14975> BRA.w doplus2
0002B5EC <AmiBlitz3.ab3@14979>   MOVE.w #$CA00,D1                                         ;quickmul
0002B5F0 <AmiBlitz3.ab3@14980> BRA.w domylib
0002B5F6 <AmiBlitz3.ab3@14984>   TST.b fast
0002B5FA <AmiBlitz3.ab3@14985>   BNE.s 'l10
0002B5FE <AmiBlitz3.ab3@14986>   MOVE.w #$CA01,D1                                         ;writelongmul
0002B602 <AmiBlitz3.ab3@14987> BRA.w domylib
0002B608 <AmiBlitz3.ab3@14996>    MOVE.l destpointer,a0
0002B60E <AmiBlitz3.ab3@14997>    SUB.l imm_addr,a0
0002B612 <AmiBlitz3.ab3@14998>    CMP.w #6,a0
0002B616 <AmiBlitz3.ab3@14999>    BNE 'li1
0002B618 <AmiBlitz3.ab3@15000>    MOVEQ.l #2,d1
0002B61A <AmiBlitz3.ab3@15001>    MOVEQ #1,d3
0002B61E <AmiBlitz3.ab3@15004>   CMP.l -4(a4),d1
0002B622 <AmiBlitz3.ab3@15005>    BEQ 'oklsl
0002B624 <AmiBlitz3.ab3@15006>     LSL.l #1,d1
0002B62A <AmiBlitz3.ab3@15007>     ADD.l #1,d3
0002B630 <AmiBlitz3.ab3@15008>     CMP.l #9,d3
0002B634 <AmiBlitz3.ab3@15009>     BNE 'ag
0002B638 <AmiBlitz3.ab3@15010>    MOVE.w -2(a4),d1
0002B63C <AmiBlitz3.ab3@15011>    BSR writeword
0002B642 <AmiBlitz3.ab3@15012>    MOVE.w -6(a4),-4(a4)
0002B64A <AmiBlitz3.ab3@15013>    MOVE.l #$4c3c0800,-8(a4)
0002B650 <AmiBlitz3.ab3@15014>    MOVE.w regnum,D3
0002B654 <AmiBlitz3.ab3@15015>    MULS #$1000,D3
0002B658 <AmiBlitz3.ab3@15016>    OR.w D3,-6(a4)
0002B65E <AmiBlitz3.ab3@15017>    CLR.l load_var_addr
0002B664 <AmiBlitz3.ab3@15018>    CLR.l imm_addr
0002B668 <AmiBlitz3.ab3@15019> BRA 'li3
0002B66C <AmiBlitz3.ab3@15022>    CMP.w #8,d3
0002B670 <AmiBlitz3.ab3@15023>    BEQ 'ok
0002B672 <AmiBlitz3.ab3@15024>    ASL.l #1,d3
0002B674 <AmiBlitz3.ab3@15025>    ASL.l #8,d3
0002B678 <AmiBlitz3.ab3@15026>    MOVE.w #$e188,d1
0002B67A <AmiBlitz3.ab3@15027>    OR.w d3,d1
0002B67E <AmiBlitz3.ab3@15028>    MOVE.w d1,-6(a4)
0002B682 <AmiBlitz3.ab3@15029> BRA 'okls
0002B688 <AmiBlitz3.ab3@15032>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002B68E <AmiBlitz3.ab3@15035>   MOVE.w regnum,d3
0002B692 <AmiBlitz3.ab3@15036>    OR.b d3,-5(a4)
0002B698 <AmiBlitz3.ab3@15037>    SUBQ.l #4,destpointer
0002B69E <AmiBlitz3.ab3@15038>    CLR.l load_var_addr
0002B6A4 <AmiBlitz3.ab3@15039>    CLR.l imm_addr
0002B6A8 <AmiBlitz3.ab3@15040> BRA 'li3
0002B6AE <AmiBlitz3.ab3@15043>    MOVE.l destpointer,a0
0002B6B4 <AmiBlitz3.ab3@15044>    SUB.l load_var_addr,a0
0002B6B8 <AmiBlitz3.ab3@15045>    CMP.w #4,a0
0002B6BC <AmiBlitz3.ab3@15046>    BNE 'li2
0002B6C0 <AmiBlitz3.ab3@15047>    MOVE.w -2(a4),d1
0002B6C4 <AmiBlitz3.ab3@15048>    BSR writeword
0002B6CA <AmiBlitz3.ab3@15049>    MOVE.b #$4c,-6(a4)
0002B6D0 <AmiBlitz3.ab3@15050>    MOVE.w #$0800,-4(a4)
0002B6D6 <AmiBlitz3.ab3@15051>    MOVE.w regnum,D3
0002B6DA <AmiBlitz3.ab3@15052>    MULS #$1000,d3
0002B6DE <AmiBlitz3.ab3@15053>    OR.w D3,-4(a4)
0002B6E2 <AmiBlitz3.ab3@15054> BRA 'li3
0002B6E8 <AmiBlitz3.ab3@15057>    MOVE.l #$4c010800,d1
0002B6EE <AmiBlitz3.ab3@15058>    MOVE.w regnum,D3
0002B6F0 <AmiBlitz3.ab3@15059>    EXT.l d3
0002B6F4 <AmiBlitz3.ab3@15060>    MULS #$1000,d3
0002B6F6 <AmiBlitz3.ab3@15061>    OR.w D3,d1
0002B6FA <AmiBlitz3.ab3@15062>    MULS #$10,d3
0002B6FC <AmiBlitz3.ab3@15063>    ADD.l d3,d1
0002B700 <AmiBlitz3.ab3@15064>    BSR writelong
0002B702 <AmiBlitz3.ab3@15069> RTS
0002B704 <AmiBlitz3.ab3@15073>   MOVE.w D1,-(A7)
0002B708 <AmiBlitz3.ab3@15074>    BSR.w JL_0_AD40
0002B70A <AmiBlitz3.ab3@15075>   MOVE.l D4,D1
0002B70E <AmiBlitz3.ab3@15076>    BSR.w JL_0_AD38
0002B712 <AmiBlitz3.ab3@15077>    BSR.w JL_0_A352
0002B714 <AmiBlitz3.ab3@15078>   MOVEQ #0,d1
0002B716 <AmiBlitz3.ab3@15079>   MOVE.w (A7)+,D1
0002B71C <AmiBlitz3.ab3@15080>   MOVE.l d1,lastinstruction
0002B720 <AmiBlitz3.ab3@15081>    BSR.w Atokejsr
0002B724 <AmiBlitz3.ab3@15082>    BSR.w JL_0_A36E
0002B726 <AmiBlitz3.ab3@15083>   MOVE.l D5,D1
0002B72A <AmiBlitz3.ab3@15084> BRA.w JL_0_AD38
0002B730 <AmiBlitz3.ab3@15088>    TST.b iee
0002B734 <AmiBlitz3.ab3@15089>     BNE fm1
0002B738 <AmiBlitz3.ab3@15090>  MOVE.w #$FFB2,D1                                          ;floatmul
0002B73C <AmiBlitz3.ab3@15091> BRA.w doflib
0002B73E <AmiBlitz3.ab3@15094>   MOVEQ #0,d0
0002B744 <AmiBlitz3.ab3@15095>  MOVE.w regnum,d0
0002B746 <AmiBlitz3.ab3@15096>  ADDQ #1,d0
0002B748 <AmiBlitz3.ab3@15097>  ASL.w #8,d0
0002B74A <AmiBlitz3.ab3@15098>  ASL.w #2,d0
0002B750 <AmiBlitz3.ab3@15099>  MOVE.l #$f2000023,d1
0002B752 <AmiBlitz3.ab3@15100>  OR.l d0,d1
0002B758 <AmiBlitz3.ab3@15101>  MOVE.w regnum,d0
0002B75A <AmiBlitz3.ab3@15102>  ASL.w #7,d0
0002B75C <AmiBlitz3.ab3@15103>  OR.l d0,d1
0002B760 <AmiBlitz3.ab3@15104> BRA.w writelong
0002B762 <AmiBlitz3.ab3@15108>   MOVE.w D2,-(A7)                                          ;dopow
0002B764 <AmiBlitz3.ab3@15109>   MOVE.w D2,D3
0002B766 <AmiBlitz3.ab3@15110>   MOVEQ.l #$05,D2
0002B76A <AmiBlitz3.ab3@15111>    BSR.w JL_0_9770
0002B770 <AmiBlitz3.ab3@15112>   ADDQ.w #1,regnum
0002B772 <AmiBlitz3.ab3@15113>   MOVE.w (A7)+,D3
0002B774 <AmiBlitz3.ab3@15114>   MOVEQ.l #$05,D2
0002B778 <AmiBlitz3.ab3@15115>    BSR.w writeconvertcode
0002B77E <AmiBlitz3.ab3@15116>   SUBQ.w #1,regnum
0002B782 <AmiBlitz3.ab3@15117>    BSR.w nocando
0002B788 <AmiBlitz3.ab3@15118>    TST.b fpu
0002B78C <AmiBlitz3.ab3@15119>    BEQ 'old
0002B78E <AmiBlitz3.ab3@15120>    MOVEQ #0,d1
0002B794 <AmiBlitz3.ab3@15121>    MOVE.w regnum,d1
0002B796 <AmiBlitz3.ab3@15122>   MOVE.l d1,d0
0002B798 <AmiBlitz3.ab3@15123>   ASL.w #7,d1
0002B79A <AmiBlitz3.ab3@15124>   ASL.w #8,d0
0002B79C <AmiBlitz3.ab3@15125>   ASL.w #2,d0
0002B79E <AmiBlitz3.ab3@15126>   OR.w d0,d1
0002B7A0 <AmiBlitz3.ab3@15127>   MOVE.l d1,-(a7)
0002B7A6 <AmiBlitz3.ab3@15129>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002B7AA <AmiBlitz3.ab3@15130>    BSR writelong
0002B7B0 <AmiBlitz3.ab3@15131>    MOVE.w regnum,d0
0002B7B2 <AmiBlitz3.ab3@15132>  ADDQ #1,d0
0002B7B4 <AmiBlitz3.ab3@15133>  ASL.w #8,d0
0002B7B6 <AmiBlitz3.ab3@15134>  ASL.w #2,d0
0002B7BC <AmiBlitz3.ab3@15135>  MOVE.l #$f2000023,d1
0002B7BE <AmiBlitz3.ab3@15136>  OR.l d0,d1
0002B7C4 <AmiBlitz3.ab3@15137>  MOVE.w regnum,d0
0002B7C6 <AmiBlitz3.ab3@15138>  ASL.w #7,d0
0002B7C8 <AmiBlitz3.ab3@15139>  OR.l d0,d1
0002B7CE <AmiBlitz3.ab3@15140>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002B7D2 <AmiBlitz3.ab3@15141>    BSR writelong
0002B7D4 <AmiBlitz3.ab3@15142>    MOVE.l (a7)+,d1
0002B7DA <AmiBlitz3.ab3@15144>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002B7DE <AmiBlitz3.ab3@15145>    BSR writelong
0002B7E0 <AmiBlitz3.ab3@15146> RTS
0002B7E4 <AmiBlitz3.ab3@15149>   MOVE.w #$6001,D1
0002B7E8 <AmiBlitz3.ab3@15150> BRA.w domylib
0002B7EC <AmiBlitz3.ab3@15156>   MOVEA.l forthsp(PC),A0
0002B7F0 <AmiBlitz3.ab3@15157>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002B7F2 <AmiBlitz3.ab3@15158> RTS
0002B7F6 <AmiBlitz3.ab3@15164>   MOVE.w #$D400,D1
0002B7FA <AmiBlitz3.ab3@15165> BRA.w domylib
0002B7FE <AmiBlitz3.ab3@15169>   MOVE.w #$D401,D1
0002B802 <AmiBlitz3.ab3@15170> BRA.w domylib
0002B806 <AmiBlitz3.ab3@15174>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002B80A <AmiBlitz3.ab3@15175>   MOVE.w #$D402,D1
0002B80E <AmiBlitz3.ab3@15176> BRA.w domylib
0002B812 <AmiBlitz3.ab3@15180>   MOVE.w #$D403,D1
0002B814 <AmiBlitz3.ab3@15181>   MOVEQ.l #$02,D2                                          ;now a word.
0002B818 <AmiBlitz3.ab3@15182> BRA.w domylib
0002B81C <AmiBlitz3.ab3@15186>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002B822 <AmiBlitz3.ab3@15187>   TST.b fpu
0002B826 <AmiBlitz3.ab3@15188>   BEQ 'old
0002B828 <AmiBlitz3.ab3@15189>   MOVEQ #0,d1
0002B82E <AmiBlitz3.ab3@15190>   MOVE.w regnum,d1                                         ;fpu mod
0002B830 <AmiBlitz3.ab3@15191>   MOVE.l d1,d0
0002B832 <AmiBlitz3.ab3@15192>   ADDQ.l #1,d1
0002B834 <AmiBlitz3.ab3@15193>   ASL.l #7,d0
0002B836 <AmiBlitz3.ab3@15194>   ASL.l #8,d1
0002B838 <AmiBlitz3.ab3@15195>   ASL.l #2,d1
0002B83A <AmiBlitz3.ab3@15196>   OR.l d0,d1
0002B83C <AmiBlitz3.ab3@15197>   MOVE.l d0,-(a7)
0002B842 <AmiBlitz3.ab3@15198>   OR.l #$f2000021,d1
0002B846 <AmiBlitz3.ab3@15199>   BSR writelong
0002B848 <AmiBlitz3.ab3@15200>   MOVE.l (a7)+,d0
0002B84A <AmiBlitz3.ab3@15201>  RTS
0002B84E <AmiBlitz3.ab3@15204>   MOVE.w #$D404,D1
0002B850 <AmiBlitz3.ab3@15205>   MOVEQ.l #$03,D2                                          ;now a long
0002B854 <AmiBlitz3.ab3@15206> BRA.w domylib
0002B858 <AmiBlitz3.ab3@15214>   MOVE.w #$48C0,D1
0002B85E <AmiBlitz3.ab3@15215>   OR.w regnum,D1
0002B862 <AmiBlitz3.ab3@15216>    BSR.w writeword
0002B864 <AmiBlitz3.ab3@15217>   ADDQ.w #1,D1
0002B868 <AmiBlitz3.ab3@15218>    BSR.w writeword
0002B86C <AmiBlitz3.ab3@15221>    MOVE.w #$48C0,D1
0002B872 <AmiBlitz3.ab3@15222>   OR.w regnum,D1
0002B876 <AmiBlitz3.ab3@15223>    BSR.w writeword
0002B87A <AmiBlitz3.ab3@15224>   MOVE.w #$81C0,D1
0002B87E <AmiBlitz3.ab3@15225> BRA.w doplus2
0002B884 <AmiBlitz3.ab3@15229>   TST.b fast
0002B888 <AmiBlitz3.ab3@15230>   BNE.s 'l10
0002B88C <AmiBlitz3.ab3@15231>   MOVE.w #$CB01,D1
0002B890 <AmiBlitz3.ab3@15232> BRA.w domylib
0002B894 <AmiBlitz3.ab3@15238>   BSR.w JL_0_AD40
0002B896 <AmiBlitz3.ab3@15239>   MOVE.l D4,D1
0002B89A <AmiBlitz3.ab3@15240>    BSR.w JL_0_AD38
0002B89E <AmiBlitz3.ab3@15241>    BSR.w JL_0_A352
0002B8A4 <AmiBlitz3.ab3@15255>    MOVE.l #$4c410800,d1
0002B8A8 <AmiBlitz3.ab3@15256>    BSR writelong
0002B8AC <AmiBlitz3.ab3@15259>   MOVE.w #$4e71,d1
0002B8B0 <AmiBlitz3.ab3@15261>    BSR.w JL_0_A36E
0002B8B2 <AmiBlitz3.ab3@15262>   MOVE.l D5,D1
0002B8B6 <AmiBlitz3.ab3@15263> BRA.w JL_0_AD38
0002B8BA <AmiBlitz3.ab3@15266>     CMP.w #8,d3
0002B8BE <AmiBlitz3.ab3@15267>     BEQ 'ok
0002B8C0 <AmiBlitz3.ab3@15268>     ASL.l #1,d3
0002B8C2 <AmiBlitz3.ab3@15269>     ASL.l #8,d3
0002B8C6 <AmiBlitz3.ab3@15270>     MOVE.w #$e080,d1
0002B8C8 <AmiBlitz3.ab3@15271>     OR.w d3,d1
0002B8CC <AmiBlitz3.ab3@15272> BRA 'oklsr2
0002B8D0 <AmiBlitz3.ab3@15275>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002B8D6 <AmiBlitz3.ab3@15278>      SUBQ.l #6,destpointer
0002B8DA <AmiBlitz3.ab3@15279>      BSR writeword
0002B8DC <AmiBlitz3.ab3@15280>      MOVE.l (a7)+,d3
0002B8DE <AmiBlitz3.ab3@15281>      MOVEQ #0,d1
0002B8E4 <AmiBlitz3.ab3@15282>      CLR.l load_var_addr
0002B8EA <AmiBlitz3.ab3@15283>      CLR.l imm_addr
0002B8EE <AmiBlitz3.ab3@15284> BRA JL_0_AD38
0002B8F2 <AmiBlitz3.ab3@15288>   MOVE.w #$CB00,D1                                         ;quickdiv
0002B8F6 <AmiBlitz3.ab3@15289> BRA.w domylib
0002B8FC <AmiBlitz3.ab3@15293>    TST.b iee
0002B900 <AmiBlitz3.ab3@15294>    BNE fdiv1
0002B904 <AmiBlitz3.ab3@15295>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002B908 <AmiBlitz3.ab3@15296> BRA.w doflib
0002B90A <AmiBlitz3.ab3@15300>   MOVEQ #0,d0
0002B910 <AmiBlitz3.ab3@15301>   MOVE.w regnum,d0
0002B912 <AmiBlitz3.ab3@15302>   ADDQ #1,d0
0002B914 <AmiBlitz3.ab3@15303>   ASL.w #8,d0
0002B916 <AmiBlitz3.ab3@15304>   ASL.w #2,d0
0002B91C <AmiBlitz3.ab3@15305>   MOVE.l #$f2000020,d1                                     ;fpu div
0002B91E <AmiBlitz3.ab3@15306>   OR.l d0,d1
0002B924 <AmiBlitz3.ab3@15307>   MOVE.w regnum,d0
0002B926 <AmiBlitz3.ab3@15308>   ASL.w #7,d0
0002B928 <AmiBlitz3.ab3@15309>   OR.l d0,d1
0002B92C <AmiBlitz3.ab3@15310> BRA.w writelong
0002B930 <AmiBlitz3.ab3@15314>   MOVE.w #$C000,D1
0002B934 <AmiBlitz3.ab3@15315> BRA.w doplus2
0002B938 <AmiBlitz3.ab3@15319>   MOVE.w #$C040,D1
0002B93C <AmiBlitz3.ab3@15320> BRA.w doplus2
0002B940 <AmiBlitz3.ab3@15324>   MOVE.w #$C080,D1
0002B944 <AmiBlitz3.ab3@15325> BRA.w doplus2
0002B948 <AmiBlitz3.ab3@15329>   MOVE.w #$8000,D1
0002B94C <AmiBlitz3.ab3@15330> BRA.w doplus2
0002B950 <AmiBlitz3.ab3@15334>   MOVE.w #$8040,D1
0002B954 <AmiBlitz3.ab3@15335> BRA.w doplus2
0002B958 <AmiBlitz3.ab3@15339>   MOVE.w #$8080,D1
0002B95C <AmiBlitz3.ab3@15340> BRA.w doplus2
0002B960 <AmiBlitz3.ab3@15344>   MOVE.w #$B100,D1
0002B966 <AmiBlitz3.ab3@15347>    MOVE.w regnum,D3
0002B968 <AmiBlitz3.ab3@15348>   OR.w D3,D1
0002B96A <AmiBlitz3.ab3@15349>   ADDQ.w #1,D3
0002B96C <AmiBlitz3.ab3@15350>   LSL.w #8,D3
0002B96E <AmiBlitz3.ab3@15351>   LSL.w #1,D3
0002B970 <AmiBlitz3.ab3@15352>   OR.w D3,D1
0002B974 <AmiBlitz3.ab3@15353> BRA.w writeword
0002B978 <AmiBlitz3.ab3@15357>   MOVE.w #$B140,D1
0002B97C <AmiBlitz3.ab3@15358> BRA.w JL_0_A25C
0002B980 <AmiBlitz3.ab3@15362>   MOVE.w #$B180,D1
0002B984 <AmiBlitz3.ab3@15363> BRA.w JL_0_A25C
0002B988 <AmiBlitz3.ab3@15367>   MOVE.w #$E1A8,D1
0002B98C <AmiBlitz3.ab3@15368> BRA.w JL_0_A298
0002B990 <AmiBlitz3.ab3@15372>   MOVE.w #$E0A8,D1
0002B994 <AmiBlitz3.ab3@15373> BRA.w JL_0_A298
0002B998 <AmiBlitz3.ab3@15377>   MOVE.w #$E0A0,D1
0002B99C <AmiBlitz3.ab3@15378> BRA.w JL_0_A298
0002B99E <AmiBlitz3.ab3@15382>   MOVE.w D1,-(A7)
0002B9A4 <AmiBlitz3.ab3@15383>   ADDQ.w #1,regnum
0002B9A6 <AmiBlitz3.ab3@15384>   MOVE.w D2,-(A7)
0002B9A8 <AmiBlitz3.ab3@15385>   MOVE.w D2,D3
0002B9AA <AmiBlitz3.ab3@15386>   MOVEQ.l #$02,D2
0002B9AE <AmiBlitz3.ab3@15391>    BSR.w writeconvertcode
0002B9B0 <AmiBlitz3.ab3@15393>   MOVE.w (A7)+,D2
0002B9B6 <AmiBlitz3.ab3@15394>   SUBQ.w #1,regnum
0002B9BA <AmiBlitz3.ab3@15395>   CMP.w #$4,D2
0002B9BE <AmiBlitz3.ab3@15396>    BEQ.w JL_0_A2C2
0002B9C0 <AmiBlitz3.ab3@15397>   MOVE.w D2,D3
0002B9C2 <AmiBlitz3.ab3@15398>   MOVEQ.l #$03,D2
0002B9C6 <AmiBlitz3.ab3@15399>    BSR.w JL_0_9770
0002B9C8 <AmiBlitz3.ab3@15402>    MOVE.w (A7)+,D1
0002B9CE <AmiBlitz3.ab3@15403>   MOVE.w regnum,D3
0002B9D0 <AmiBlitz3.ab3@15404>   OR.w D3,D1
0002B9D2 <AmiBlitz3.ab3@15405>   ADDQ.w #1,D3
0002B9D4 <AmiBlitz3.ab3@15406>   LSL.w #8,D3
0002B9D6 <AmiBlitz3.ab3@15407>   LSL.w #1,D3
0002B9D8 <AmiBlitz3.ab3@15408>   OR.w D3,D1
0002B9DC <AmiBlitz3.ab3@15409> BRA.w writeword
0002B9E0 <AmiBlitz3.ab3@15413>   MOVE.w #$0100,D1
0002B9E4 <AmiBlitz3.ab3@15414>    BSR.w JL_0_A31C
0002B9EA <AmiBlitz3.ab3@15415>   MOVE.w regnum,D1
0002B9EE <AmiBlitz3.ab3@15416>   ORI.w #$56C0,D1
0002B9F2 <AmiBlitz3.ab3@15417>    BSR.w writeword
0002B9F8 <AmiBlitz3.ab3@15418>   MOVE.w regnum,D1
0002B9FC <AmiBlitz3.ab3@15419>   ORI.w #$4880,D1
0002BA00 <AmiBlitz3.ab3@15420>    BSR.w writeword
0002BA02 <AmiBlitz3.ab3@15421>   MOVEQ.l #$02,D2
0002BA04 <AmiBlitz3.ab3@15422> RTS
0002BA08 <AmiBlitz3.ab3@15426>   MOVE.w #$01C0,D1
0002BA0C <AmiBlitz3.ab3@15429>    BSR.w JL_0_A31C
0002BA0E <AmiBlitz3.ab3@15430>   MOVEQ.l #$03,D2
0002BA10 <AmiBlitz3.ab3@15431> RTS
0002BA14 <AmiBlitz3.ab3@15435>   MOVE.w #$0180,D1
0002BA18 <AmiBlitz3.ab3@15436> BRA.w JL_0_A304
0002BA1C <AmiBlitz3.ab3@15440>   MOVE.w #$0140,D1
0002BA20 <AmiBlitz3.ab3@15441> BRA.w JL_0_A304
0002BA22 <AmiBlitz3.ab3@15445>   MOVE.w D1,-(A7)
0002BA24 <AmiBlitz3.ab3@15446>   MOVE.w D2,-(A7)
0002BA26 <AmiBlitz3.ab3@15447>   MOVE.w D2,D3
0002BA28 <AmiBlitz3.ab3@15448>   MOVEQ.l #$03,D2
0002BA2C <AmiBlitz3.ab3@15449>    BSR.w JL_0_9770
0002BA2E <AmiBlitz3.ab3@15450>   MOVE.w (A7)+,D3
0002BA30 <AmiBlitz3.ab3@15451>   MOVEQ.l #$01,D2
0002BA36 <AmiBlitz3.ab3@15452>   ADDQ.w #1,regnum
0002BA3A <AmiBlitz3.ab3@15453>    BSR.w writeconvertcode
0002BA40 <AmiBlitz3.ab3@15454>   SUBQ.w #1,regnum
0002BA46 <AmiBlitz3.ab3@15455>   MOVE.w regnum,D1
0002BA48 <AmiBlitz3.ab3@15456>   MOVE.w D1,D2
0002BA4A <AmiBlitz3.ab3@15457>   ADDQ.w #1,D2
0002BA4C <AmiBlitz3.ab3@15458>   LSL.w #8,D2
0002BA4E <AmiBlitz3.ab3@15459>   LSL.w #1,D2
0002BA50 <AmiBlitz3.ab3@15460>   OR.w (A7)+,D1
0002BA52 <AmiBlitz3.ab3@15461>   OR.w D2,D1
0002BA56 <AmiBlitz3.ab3@15462> BRA.w writeword
0002BA5C <AmiBlitz3.ab3@15466>   MOVE.w regnum,D1
0002BA60 <AmiBlitz3.ab3@15467>    BEQ.w JL_0_A36C
0002BA64 <AmiBlitz3.ab3@15468>   ORI.w #$2000,D1
0002BA68 <AmiBlitz3.ab3@15469>    BSR.w writeword
0002BA6C <AmiBlitz3.ab3@15470>   ADDI.w #$201,D1
0002BA70 <AmiBlitz3.ab3@15471>    BSR.w writeword
0002BA72 <AmiBlitz3.ab3@15474> RTS
0002BA78 <AmiBlitz3.ab3@15478>   MOVE.w regnum,D1
0002BA7C <AmiBlitz3.ab3@15479>    BEQ.w JL_0_A384
0002BA7E <AmiBlitz3.ab3@15480>   LSL.w #8,D1
0002BA80 <AmiBlitz3.ab3@15481>   LSL.w #1,D1
0002BA84 <AmiBlitz3.ab3@15482>   ORI.w #$2000,D1
0002BA88 <AmiBlitz3.ab3@15483>    BSR.w writeword
0002BA8A <AmiBlitz3.ab3@15486> RTS
0002BA90 <AmiBlitz3.ab3@15490>    CLR.b isconstantvalue
0002BA96 <AmiBlitz3.ab3@15491>    CLR.l lastconstantvalue
0002BA9E <AmiBlitz3.ab3@15492>    CMPI.w #$7,regnum
0002BAA2 <AmiBlitz3.ab3@15493>    BCS.w JL_0_A6B4
0002BAA8 <AmiBlitz3.ab3@15494>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002BAAC <AmiBlitz3.ab3@15495>   BSR writelong
0002BAB0 <AmiBlitz3.ab3@15496>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002BAB4 <AmiBlitz3.ab3@15498>   CMP.w #$3,D2
0002BAB8 <AmiBlitz3.ab3@15499>    BCS.w JL_0_A3A2
0002BABC <AmiBlitz3.ab3@15500>   MOVE.w #$2F06,D1
0002BAC0 <AmiBlitz3.ab3@15503>   BSR.w writeword
0002BAC2 <AmiBlitz3.ab3@15504>   MOVE.w D1,-(A7)
0002BAC8 <AmiBlitz3.ab3@15505>   SUBQ.w #1,regnum
0002BACC <AmiBlitz3.ab3@15506>    BSR.w JL_0_A6B4
0002BAD2 <AmiBlitz3.ab3@15507>   ADDQ.w #1,regnum
0002BAD8 <AmiBlitz3.ab3@15508>   MOVE.l #$f2001b80,d1
0002BADC <AmiBlitz3.ab3@15509>   BSR writelong
0002BAE0 <AmiBlitz3.ab3@15510>   MOVE.w #$3E06,D1
0002BAE4 <AmiBlitz3.ab3@15511>   CMP.w #$3,D2
0002BAE8 <AmiBlitz3.ab3@15512>    BCS.w JL_0_A3C8
0002BAEC <AmiBlitz3.ab3@15513>   MOVE.w #$2E06,D1
0002BAF0 <AmiBlitz3.ab3@15516>   BSR.w writeword
0002BAF2 <AmiBlitz3.ab3@15517>   MOVE.w (A7)+,D1
0002BAF6 <AmiBlitz3.ab3@15518>   ANDI.w #$F000,D1
0002BAFA <AmiBlitz3.ab3@15519>   ORI.w #$C1F,D1
0002BB00 <AmiBlitz3.ab3@15520>   JSR writeword
0002BB06 <AmiBlitz3.ab3@15521>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002BB0A <AmiBlitz3.ab3@15522> BRA writelong
0002BB0E <AmiBlitz3.ab3@15526>   BSR.w JL_0_A6B4
0002BB12 <AmiBlitz3.ab3@15527>   MOVE.w #$4440,D1
0002BB16 <AmiBlitz3.ab3@15528>   CMP.w #$3,D2
0002BB1A <AmiBlitz3.ab3@15529>    BCS.w JL_0_A406
0002BB1E <AmiBlitz3.ab3@15530>   MOVE.w #$4480,D1
0002BB22 <AmiBlitz3.ab3@15531>   CMP.w #$5,D2
0002BB26 <AmiBlitz3.ab3@15532>    BCS.w JL_0_A406
0002BB2A <AmiBlitz3.ab3@15533>   CMP.w #$6,D2
0002BB2E <AmiBlitz3.ab3@15534>    BCC.w illoperr
0002BB32 <AmiBlitz3.ab3@15535>   MOVE.w #$FFC4,D1
0002BB36 <AmiBlitz3.ab3@15536> BRA.w JL_0_9604
0002BB3C <AmiBlitz3.ab3@15539>   OR.w regnum,D1                                           ;negate
0002BB42 <AmiBlitz3.ab3@15540>   CLR.l imm_addr
0002BB46 <AmiBlitz3.ab3@15541> BRA.w writeword
0002BB4A <AmiBlitz3.ab3@15545>    BSR.w eval4
0002BB4E <AmiBlitz3.ab3@15546>   CMP.w #")",D0
0002BB52 <AmiBlitz3.ab3@15547>    BEQ.w JL_0_A424
0002BB56 <AmiBlitz3.ab3@15548>   CMP.w #"}",D0
0002BB5A <AmiBlitz3.ab3@15549>    BNE.w brackets_                                         ;syntax error brackets
0002BB5E <AmiBlitz3.ab3@15552> BRA.w get1bytemain
0002BB62 <AmiBlitz3.ab3@15556>    BSR.w eval4
0002BB66 <AmiBlitz3.ab3@15557>   CMP.w #$5,D2
0002BB6A <AmiBlitz3.ab3@15558>    BCC.w illoperr
0002BB70 <AmiBlitz3.ab3@15559>   MOVE.w regnum,D1
0002BB74 <AmiBlitz3.ab3@15560>   ORI.w #$4640,D1
0002BB78 <AmiBlitz3.ab3@15561>   CMP.w #$3,D2
0002BB7C <AmiBlitz3.ab3@15562>    BCS.w writeword
0002BB80 <AmiBlitz3.ab3@15563>   EORI.w #$C0,D1
0002BB84 <AmiBlitz3.ab3@15564> BRA.w writeword
0002BB86 <AmiBlitz3.ab3@15568>   MOVEQ.l #$05,D2                                          ;fpu pi
0002BB8C <AmiBlitz3.ab3@15569>    TST.b fpu
0002BB90 <AmiBlitz3.ab3@15570>   BEQ 'old
0002BB96 <AmiBlitz3.ab3@15571> JMP fpupi
0002BB9C <AmiBlitz3.ab3@15574>   MOVE.w regnum,D1
0002BB9E <AmiBlitz3.ab3@15575>   LSL.w #8,D1
0002BBA0 <AmiBlitz3.ab3@15576>   LSL.w #1,D1
0002BBA4 <AmiBlitz3.ab3@15577>   ORI.w #$203C,D1
0002BBA8 <AmiBlitz3.ab3@15578>    BSR.w writeword
0002BBAE <AmiBlitz3.ab3@15579>   MOVE.l #$C90FDA42,D1
0002BBB2 <AmiBlitz3.ab3@15580>    BSR.w writelong
0002BBB6 <AmiBlitz3.ab3@15581> BRA.w get1bytemain
0002BCB2 <AmiBlitz3.ab3@15589> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002BDAE <AmiBlitz3.ab3@15590>              Ds.l 63
0002BDF6 <AmiBlitz3.ab3@15591>              Ds.l 18
0002BDFA <AmiBlitz3.ab3@15592> forthsp:     Dc.l forthstack
0002BE26 <AmiBlitz3.ab3@15597>    !fget
0002BE2A <AmiBlitz3.ab3@15598>    CMP.b #$7e,d0
0002BE2E <AmiBlitz3.ab3@15599>    BNE 'noc
0002BE30 <AmiBlitz3.ab3@15600>    SUBQ.l #1,a5
0002BE34 <AmiBlitz3.ab3@15601>    BSR get1bytemain
0002BE38 <AmiBlitz3.ab3@15604>    CMP.b #"#",d0
0002BE3C <AmiBlitz3.ab3@15605>    BNE 'ld1
0002BE40 <AmiBlitz3.ab3@15606>    CMP.b #$22,(a5)
0002BE44 <AmiBlitz3.ab3@15607>    BNE 'ld1
0002BE4A <AmiBlitz3.ab3@15608>    JSR addimmi
0002BE4E <AmiBlitz3.ab3@15611>    CMP.b #$22,d0
0002BE52 <AmiBlitz3.ab3@15612>    BNE 'l11
0002BE58 <AmiBlitz3.ab3@15622>    NOT.w instringon
0002BE5A <AmiBlitz3.ab3@15625>    TST.b d0
0002BE5E <AmiBlitz3.ab3@15626>    BPL 'l10
0002BE60 <AmiBlitz3.ab3@15627>    LSL.w #8,d0
0002BE62 <AmiBlitz3.ab3@15628>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002BE68 <AmiBlitz3.ab3@15629>    MOVE.l d0,lasttoken
0002BE6E <AmiBlitz3.ab3@15630>    MOVE.w d0,lastchar
0002BE74 <AmiBlitz3.ab3@15631>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002BE78 <AmiBlitz3.ab3@15633>   CMP.w #"(",D0
0002BE7C <AmiBlitz3.ab3@15634>    BEQ.w checkcast2
0002BE80 <AmiBlitz3.ab3@15635> nocast CMP.w #"{",D0
0002BE84 <AmiBlitz3.ab3@15636>    BEQ.w JL_0_A410
0002BE88 <AmiBlitz3.ab3@15637>   CMP.w #$2D,D0
0002BE8C <AmiBlitz3.ab3@15638>    BEQ.w JL_0_A3DA
0002BE90 <AmiBlitz3.ab3@15639>   CMP.w #-$7F77,D0
0002BE94 <AmiBlitz3.ab3@15640>    BEQ.w JL_0_A428
0002BE98 <AmiBlitz3.ab3@15641>   MOVEA.l forthsp(PC),A1
0002BE9E <AmiBlitz3.ab3@15642>   CMPA.l #forthsp,A1
0002BEA2 <AmiBlitz3.ab3@15643>    BCC.w conmemerr
0002BEA8 <AmiBlitz3.ab3@15644>   MOVE.l destpointer,(A1)+
0002BEAE <AmiBlitz3.ab3@15645>   MOVE.l hunkoffsetbase,(A1)+
0002BEB4 <AmiBlitz3.ab3@15646>   MOVE.l lasta6,(A1)+
0002BEBA <AmiBlitz3.ab3@15647>   MOVE.w lasta6,(A1)+
0002BEBC <AmiBlitz3.ab3@15648>   CLR.w (A1)+
0002BEBE <AmiBlitz3.ab3@15649>   CLR.w (A1)+
0002BEC4 <AmiBlitz3.ab3@15650>   MOVE.l A1,forthsp
0002BED6 <AmiBlitz3.ab3@15652>    !compare2
0002BEDA <AmiBlitz3.ab3@15653>    BEQ.w JL_0_B224
0002BEDE <AmiBlitz3.ab3@15654>   CMP.w #".",D0
0002BEE2 <AmiBlitz3.ab3@15655>    BEQ.w JL_0_B21E
0002BEE6 <AmiBlitz3.ab3@15656>   CMP.w #"#",D0
0002BEEA <AmiBlitz3.ab3@15657>    BEQ.w get_constant
0002BEEE <AmiBlitz3.ab3@15658>   CMP.w #"$",D0
0002BEF2 <AmiBlitz3.ab3@15659>    BEQ.w get_hexconstant
0002BEF6 <AmiBlitz3.ab3@15660>   CMP.w #"%",D0
0002BEFA <AmiBlitz3.ab3@15661>    BEQ.w JL_0_A8C0
0002BEFE <AmiBlitz3.ab3@15662>   CMP.w #-$7FD1,D0
0002BF02 <AmiBlitz3.ab3@15663>    BEQ.w _SizeOf
0002BF06 <AmiBlitz3.ab3@15664>   CMP.w #-$7F46,D0
0002BF0A <AmiBlitz3.ab3@15665>    BEQ.w JL_0_A44E
0002BF0E <AmiBlitz3.ab3@15666>   CMP.w #-$7F3B,D0
0002BF12 <AmiBlitz3.ab3@15667>    BEQ.w JL_0_A83C
0002BF16 <AmiBlitz3.ab3@15668>   CMP.w #-$7F3A,D0
0002BF1A <AmiBlitz3.ab3@15669>    BEQ.w JL_0_A846
0002BF20 <AmiBlitz3.ab3@15670>   MOVE.w constmode,D1
0002BF24 <AmiBlitz3.ab3@15671>    BEQ.w JL_0_A776
0002BF46 <AmiBlitz3.ab3@15672>    !compare1                                               ;bsr.w tstalpha
0002BF4A <AmiBlitz3.ab3@15673>    BEQ.w JL_0_AF22
0002BF4E <AmiBlitz3.ab3@15674>   CMP.w #$5F,D0
0002BF52 <AmiBlitz3.ab3@15675>    BEQ.w JL_0_AF22
0002BF56 <AmiBlitz3.ab3@15676>   CMP.w #$22,D0
0002BF5A <AmiBlitz3.ab3@15677>    BEQ.w JL_0_AF00
0002BF5E <AmiBlitz3.ab3@15678> BRA.w syntaxerr
0002BF64 <AmiBlitz3.ab3@15680> checkcast2 JMP checkcast
0002BF6A <AmiBlitz3.ab3@15683>   MOVE.w cfetchmode,D1
0002BF6E <AmiBlitz3.ab3@15684>   BEQ.w JL_0_A784
0002BF72 <AmiBlitz3.ab3@15685> BRA.w badconerr
0002BF78 <AmiBlitz3.ab3@15688> JMP syntaxerropt4
0002BF7A <AmiBlitz3.ab3@15692>   NOT.w -(A1)
0002BF9C <AmiBlitz3.ab3@15693>   !compare1                                                ;bsr.w tstalpha
0002BFA0 <AmiBlitz3.ab3@15694>    BEQ.w JL_0_AF4C
0002BFA4 <AmiBlitz3.ab3@15695>   CMP.w #$2A,D0
0002BFA8 <AmiBlitz3.ab3@15696>    BEQ.w JL_0_AF4C
0002BFAC <AmiBlitz3.ab3@15697>   CMP.w #$5C,D0
0002BFB0 <AmiBlitz3.ab3@15698>    BEQ.w JL_0_AF4C
0002BFB4 <AmiBlitz3.ab3@15699>   CMP.w #$22,D0
0002BFB8 <AmiBlitz3.ab3@15700>    BEQ.w JL_0_ADC0
0002BFBC <AmiBlitz3.ab3@15701>   BTST #$F,D0
0002BFC0 <AmiBlitz3.ab3@15702>    BNE.w JL_0_AAF2
0002BFC4 <AmiBlitz3.ab3@15703>   CMP.w #"&",D0
0002BFC8 <AmiBlitz3.ab3@15704>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002BFCC <AmiBlitz3.ab3@15705>   CMP.w #"?",D0
0002BFD0 <AmiBlitz3.ab3@15706>    BEQ.w JL_0_AED4
0002BFD4 <AmiBlitz3.ab3@15709>   CMP.b #"@",d0
0002BFD8 <AmiBlitz3.ab3@15710>    BNE syntaxerr
0002BFDE <AmiBlitz3.ab3@15711>   TST.b newsyntax
0002BFE2 <AmiBlitz3.ab3@15712>    BEQ JUMP_syntaxerropt4
0002BFE8 <AmiBlitz3.ab3@15713>   MOVE.w regnum,D1
0002BFEA <AmiBlitz3.ab3@15714>   LSL.w #8,D1
0002BFEC <AmiBlitz3.ab3@15715>   LSL.w #1,D1
0002BFF0 <AmiBlitz3.ab3@15716>   ORI.w #$203C,D1
0002BFF4 <AmiBlitz3.ab3@15717>   BSR.w writeword
0002BFF8 <AmiBlitz3.ab3@15718>   CMP.b #$22,(a5)
0002BFFC <AmiBlitz3.ab3@15719>    BNE syntaxerr
0002BFFE <AmiBlitz3.ab3@15720>   ADDQ #1,a5
0002C000 <AmiBlitz3.ab3@15721>   MOVEQ #0,d0
0002C004 <AmiBlitz3.ab3@15722>   CMP.b #1,d2
0002C008 <AmiBlitz3.ab3@15723>    BEQ 'l3b
0002C00C <AmiBlitz3.ab3@15724>   CMP.b #2,d2
0002C010 <AmiBlitz3.ab3@15725>    BEQ 'l2b
0002C014 <AmiBlitz3.ab3@15726>   CMP.b #4,d2
0002C018 <AmiBlitz3.ab3@15727>    BEQ error_convert_types
0002C01A <AmiBlitz3.ab3@15728>   MOVE.b (a5)+,d0
0002C01E <AmiBlitz3.ab3@15729>   BEQ syntaxerr
0002C022 <AmiBlitz3.ab3@15730>   CMP.b #$22,d0
0002C026 <AmiBlitz3.ab3@15731>   BNE 'l1
0002C02A <AmiBlitz3.ab3@15732>     MOVE.b #0,d0
0002C02E <AmiBlitz3.ab3@15733> BRA 'do
0002C030 <AmiBlitz3.ab3@15736>   ASL.l #8,d0
0002C032 <AmiBlitz3.ab3@15737>   MOVE.b (a5)+,d0
0002C036 <AmiBlitz3.ab3@15738>   BEQ syntaxerr
0002C03A <AmiBlitz3.ab3@15739>   CMP.b #$22,d0
0002C03E <AmiBlitz3.ab3@15740>   BNE 'l2
0002C042 <AmiBlitz3.ab3@15741>     MOVE.b #0,d0
0002C044 <AmiBlitz3.ab3@15742>     ASR.l #8,d0
0002C048 <AmiBlitz3.ab3@15743> BRA 'do
0002C04A <AmiBlitz3.ab3@15746>   ASL.l #8,d0
0002C04C <AmiBlitz3.ab3@15749>   MOVE.b (a5)+,d0
0002C050 <AmiBlitz3.ab3@15750>    BEQ syntaxerr
0002C054 <AmiBlitz3.ab3@15751>    CMP.b #$22,d0
0002C058 <AmiBlitz3.ab3@15752>    BNE 'l3
0002C05C <AmiBlitz3.ab3@15753>    MOVE.b #0,d0
0002C05E <AmiBlitz3.ab3@15754>    ASR.l #8,d0
0002C062 <AmiBlitz3.ab3@15755> BRA 'do
0002C064 <AmiBlitz3.ab3@15758>   ASL.l #8,d0
0002C066 <AmiBlitz3.ab3@15761>   MOVE.b (a5)+,d0
0002C06A <AmiBlitz3.ab3@15762>    BEQ syntaxerr
0002C06E <AmiBlitz3.ab3@15763>    CMP.b #$22,d0
0002C072 <AmiBlitz3.ab3@15764>    BNE 'l4
0002C076 <AmiBlitz3.ab3@15765>    MOVE.b #0,d0
0002C078 <AmiBlitz3.ab3@15766>    ASR.l #8,d0
0002C07C <AmiBlitz3.ab3@15767> BRA 'do
0002C080 <AmiBlitz3.ab3@15770>    CMP.b #$22,(a5)+
0002C084 <AmiBlitz3.ab3@15771>    BNE JUMP_error4char
0002C086 <AmiBlitz3.ab3@15774>   MOVE.l d0,d1
0002C08A <AmiBlitz3.ab3@15775>     BSR writelong
0002C08E <AmiBlitz3.ab3@15776>     BSR get1bytemain
0002C090 <AmiBlitz3.ab3@15777> RTS
0002C094 <AmiBlitz3.ab3@15781>   BSR.w get1bytemain
0002C098 <AmiBlitz3.ab3@15782>   CMP.w #$2E,D0
0002C09C <AmiBlitz3.ab3@15783>    BEQ.b JL_0_A7F4
0002C0A6 <AmiBlitz3.ab3@15785>   MOVE.w oldqflag,instringon
0002C0AC <AmiBlitz3.ab3@15786>   MOVEA.l lastsourcepos,A5
0002C0AE <AmiBlitz3.ab3@15787>   MOVE.w D2,-(A7)
0002C0B2 <AmiBlitz3.ab3@15788>    BSR.w getparameter2
0002C0B6 <AmiBlitz3.ab3@15789>    BEQ.w syntaxerr
0002C0BC <AmiBlitz3.ab3@15790>   LEA varbase,A2
0002C0C0 <AmiBlitz3.ab3@15791>    BSR.w findvariable
0002C0C4 <AmiBlitz3.ab3@15792>    BNE.w notypeerr
0002C0C8 <AmiBlitz3.ab3@15793>   MOVE.w $4(A2),D3
0002C0CA <AmiBlitz3.ab3@15794>   EXT.l D3
0002C0CC <AmiBlitz3.ab3@15795>   MOVE.w (A7)+,D2
0002C0D0 <AmiBlitz3.ab3@15796> BRA.w JL_0_B46E
0002C0D2 <AmiBlitz3.ab3@15800>   MOVE.w D2,-(A7)
0002C0D6 <AmiBlitz3.ab3@15801>    BSR.w getparameter2
0002C0DA <AmiBlitz3.ab3@15802>    BEQ.w syntaxerr
0002C0E0 <AmiBlitz3.ab3@15803>   LEA newtypebase,A2
0002C0E4 <AmiBlitz3.ab3@15804>    BSR.w findtype
0002C0E8 <AmiBlitz3.ab3@15805>    BNE.w notypeerr
0002C0EA <AmiBlitz3.ab3@15806>   MOVEQ.l #$00,D3
0002C0EE <AmiBlitz3.ab3@15807>   CMP.w #$5C,D0
0002C0F2 <AmiBlitz3.ab3@15808>    BNE.w JL_0_A832
0002C0F6 <AmiBlitz3.ab3@15809>    BSR.w getparameter2
0002C0FA <AmiBlitz3.ab3@15810>    BEQ.w syntaxerr
0002C0FE <AmiBlitz3.ab3@15811>   LEA $4(A2),A2
0002C102 <AmiBlitz3.ab3@15812>    BSR.w findvariable2
0002C106 <AmiBlitz3.ab3@15813>    BNE.w noofferr
0002C10A <AmiBlitz3.ab3@15814>   MOVE.w $4(A2),D3
0002C10E <AmiBlitz3.ab3@15815> BRA.w JL_0_A836
0002C112 <AmiBlitz3.ab3@15819>   MOVE.w $8(A2),D3
0002C114 <AmiBlitz3.ab3@15822>   MOVE.w (A7)+,D2
0002C118 <AmiBlitz3.ab3@15823> BRA.w JL_0_B46E
0002C11A <AmiBlitz3.ab3@15827>   MOVEQ.l #-$01,D3
0002C11E <AmiBlitz3.ab3@15828>    BSR.w get1bytemain
0002C122 <AmiBlitz3.ab3@15829> BRA.w JL_0_B46E
0002C124 <AmiBlitz3.ab3@15833>   MOVEQ.l #$00,D3
0002C128 <AmiBlitz3.ab3@15834>    BSR.w get1bytemain
0002C12C <AmiBlitz3.ab3@15835> BRA.w JL_0_B46E
0002C130 <AmiBlitz3.ab3@15839>   CMP.w #$30,D0
0002C134 <AmiBlitz3.ab3@15840>    BCS.w JL_0_A876
0002C138 <AmiBlitz3.ab3@15841>   CMP.w #$39,D0
0002C13C <AmiBlitz3.ab3@15842>    BLS.w JL_0_A874
0002C140 <AmiBlitz3.ab3@15843>   ANDI.w #$FFDF,D0
0002C144 <AmiBlitz3.ab3@15844>   CMP.w #$46,D0
0002C148 <AmiBlitz3.ab3@15845>    BHI.w JL_0_A876
0002C14C <AmiBlitz3.ab3@15846>   CMP.w #$41,D0
0002C150 <AmiBlitz3.ab3@15847>    BCS.w JL_0_A876
0002C152 <AmiBlitz3.ab3@15850>    CMP.w D0,D0
0002C154 <AmiBlitz3.ab3@15853> RTS
0002C158 <AmiBlitz3.ab3@15857>   CMP.w #$31,D0
0002C15C <AmiBlitz3.ab3@15858>    BEQ.w JL_0_A884
0002C160 <AmiBlitz3.ab3@15859>   CMP.w #$30,D0
0002C162 <AmiBlitz3.ab3@15862> RTS
0002C164 <AmiBlitz3.ab3@15866>    MOVEQ #0,d0
0002C166 <AmiBlitz3.ab3@15867>    MOVE.b (a5)+,d0
0002C168 <AmiBlitz3.ab3@15868>    MOVE.b (a5)+,d0
0002C16C <AmiBlitz3.ab3@15869>    BSR ishex
0002C170 <AmiBlitz3.ab3@15870>    BNE syntaxerr
0002C174 <AmiBlitz3.ab3@15871>    SUBI.w #$30,D0
0002C178 <AmiBlitz3.ab3@15872>    CMP.w #$9,D0
0002C17C <AmiBlitz3.ab3@15873>    BLS.w 'l1
0002C17E <AmiBlitz3.ab3@15874>    SUBQ.w #7,D0
0002C180 <AmiBlitz3.ab3@15877>    MOVE.l d0,d1
0002C182 <AmiBlitz3.ab3@15878>    MOVE.b (a5)+,d0
0002C186 <AmiBlitz3.ab3@15879>      BSR ishex
0002C18A <AmiBlitz3.ab3@15880>     BNE syntaxerr
0002C18C <AmiBlitz3.ab3@15881>     LSL.l #4,d1
0002C190 <AmiBlitz3.ab3@15882>     SUBI.w #$30,D0
0002C194 <AmiBlitz3.ab3@15883>    CMP.w #$9,D0
0002C198 <AmiBlitz3.ab3@15884>    BLS.w 'l2
0002C19A <AmiBlitz3.ab3@15885>    SUBQ.w #7,D0
0002C19C <AmiBlitz3.ab3@15888>   ADD.l d1,d0
0002C19E <AmiBlitz3.ab3@15889> RTS
0002C1A2 <AmiBlitz3.ab3@15893>    BSR.w get1bytemain
0002C1A6 <AmiBlitz3.ab3@15894>    BSR.w ishex
0002C1AA <AmiBlitz3.ab3@15895>    BNE.w syntaxerr
0002C1AC <AmiBlitz3.ab3@15896>   MOVEQ.l #$00,D3
0002C1B0 <AmiBlitz3.ab3@15897>   CMP.w #5,d2
0002C1B4 <AmiBlitz3.ab3@15898>   BNE JL_0_A894
0002C1BA <AmiBlitz3.ab3@15899>   CMP.l #newtype_double,a2
0002C1BE <AmiBlitz3.ab3@15900>   BEQ 'doit
0002C1C4 <AmiBlitz3.ab3@15901>   CMP.l #newtype_float,a2
0002C1C8 <AmiBlitz3.ab3@15902>   BNE JL_0_A894
0002C1D0 <AmiBlitz3.ab3@15905>    fmove.s #0,fp0
0002C1D6 <AmiBlitz3.ab3@15907>   TST.b fpu
0002C1DA <AmiBlitz3.ab3@15908>   BEQ JL_0_A894
0002C1E0 <AmiBlitz3.ab3@15909>   fmove.w #16,fp1
0002C1E4 <AmiBlitz3.ab3@15910>   fmul.x fp1,fp0
0002C1E8 <AmiBlitz3.ab3@15911>   SUBI.w #$30,D0
0002C1EC <AmiBlitz3.ab3@15912>   CMP.w #$9,D0
0002C1F0 <AmiBlitz3.ab3@15913>    BLS.w JL_0_A8AEa
0002C1F2 <AmiBlitz3.ab3@15914>   SUBQ.w #7,D0
0002C1F6 <AmiBlitz3.ab3@15917>    fmove.w d0,fp1
0002C1FA <AmiBlitz3.ab3@15918>    fadd.x fp1,fp0
0002C1FE <AmiBlitz3.ab3@15919>    BSR.w get1bytemain
0002C202 <AmiBlitz3.ab3@15920>    BSR.w ishex
0002C206 <AmiBlitz3.ab3@15921>    BEQ.w JL_0_A894a
0002C20A <AmiBlitz3.ab3@15922> BRA.w nofpregload
0002C210 <AmiBlitz3.ab3@15926>   CMP.l #$10000000,D3
0002C214 <AmiBlitz3.ab3@15927>    BCC.w overerr
0002C216 <AmiBlitz3.ab3@15928>   LSL.l #4,D3
0002C21A <AmiBlitz3.ab3@15929>   SUBI.w #$30,D0
0002C21E <AmiBlitz3.ab3@15930>   CMP.w #$9,D0
0002C222 <AmiBlitz3.ab3@15931>    BLS.w JL_0_A8AE
0002C224 <AmiBlitz3.ab3@15932>   SUBQ.w #7,D0
0002C226 <AmiBlitz3.ab3@15935>   OR.w D0,D3
0002C22A <AmiBlitz3.ab3@15936>    BSR.w get1bytemain
0002C22E <AmiBlitz3.ab3@15937>    BSR.w ishex
0002C232 <AmiBlitz3.ab3@15938>    BEQ.w JL_0_A894
0002C236 <AmiBlitz3.ab3@15939> BRA.w JL_0_B46E
0002C23A <AmiBlitz3.ab3@15943>    BSR.w get1bytemain
0002C23E <AmiBlitz3.ab3@15944>    BSR.w JL_0_A878
0002C242 <AmiBlitz3.ab3@15945>    BNE.w syntaxerr
0002C244 <AmiBlitz3.ab3@15946>    MOVEQ.l #$00,D3
0002C246 <AmiBlitz3.ab3@15949>    LSL.l #1,D3
0002C24A <AmiBlitz3.ab3@15950>    BCS.w overerr
0002C24E <AmiBlitz3.ab3@15951>   SUBI.w #$30,D0
0002C250 <AmiBlitz3.ab3@15952>   OR.w D0,D3
0002C254 <AmiBlitz3.ab3@15953>    BSR.w get1bytemain
0002C258 <AmiBlitz3.ab3@15954>    BSR.w JL_0_A878
0002C25C <AmiBlitz3.ab3@15955>    BEQ.w JL_0_A8CE
0002C260 <AmiBlitz3.ab3@15956> BRA.w JL_0_B46E
0002C262 <AmiBlitz3.ab3@15960>    MOVE.w d2,-(A7)
0002C26A <AmiBlitz3.ab3@15961>    MOVE.b #0,automode
0002C26E <AmiBlitz3.ab3@15962>    CMP.b #"@",(a5)
0002C272 <AmiBlitz3.ab3@15963>    BNE 'l1
0002C274 <AmiBlitz3.ab3@15964>    ADDQ.l #1,a5
0002C27C <AmiBlitz3.ab3@15965>    MOVE.b #1,automode
0002C280 <AmiBlitz3.ab3@15966>    BSR getparameter2
0002C284 <AmiBlitz3.ab3@15967>    BSR findlabel2
0002C288 <AmiBlitz3.ab3@15968>    BNE 'addit
0002C28C <AmiBlitz3.ab3@15969> BRA errormsg_autocount
0002C290 <AmiBlitz3.ab3@15972>   BSR.w addlabelhash
0002C298 <AmiBlitz3.ab3@15973>   MOVE.l #$1,$4(A2)
0002C29C <AmiBlitz3.ab3@15974>   MOVEM.l a2/a5,-(a7)
0002C2A2 <AmiBlitz3.ab3@15975>   MOVE.w lastchar,-(a7)
0002C2A8 <AmiBlitz3.ab3@15976>   LEA autostorename,a5
0002C2AC <AmiBlitz3.ab3@15977>   BSR getparameter2
0002C2B0 <AmiBlitz3.ab3@15978>   BSR findlabel2
0002C2B4 <AmiBlitz3.ab3@15979>   BEQ 'found
0002C2B8 <AmiBlitz3.ab3@15980>   BSR.w addlabelhash
0002C2C0 <AmiBlitz3.ab3@15981>   MOVE.l #$1,$4(A2)
0002C2C8 <AmiBlitz3.ab3@15982>   MOVE.l #0,8(a2)
0002C2CA <AmiBlitz3.ab3@15985>    MOVE.w (a7)+,d0
0002C2D0 <AmiBlitz3.ab3@15986>    MOVE.w d0,lastchar
0002C2D4 <AmiBlitz3.ab3@15987>   MOVE.l 8(a2),d3
0002C2DC <AmiBlitz3.ab3@15988>   ADD.l #1,8(a2)
0002C2E0 <AmiBlitz3.ab3@15989>   MOVEM.l (a7)+,a2/a5
0002C2E4 <AmiBlitz3.ab3@15990>   MOVE.l d3,8(a2)
0002C2E8 <AmiBlitz3.ab3@15991>   MOVE.l $8(A2),D3
0002C2EC <AmiBlitz3.ab3@15992> BRA.l 'l3
0002C2F0 <AmiBlitz3.ab3@15995>   BSR.w getparameter2
0002C2F6 <AmiBlitz3.ab3@15996>     TST.b incnif
0002C2FA <AmiBlitz3.ab3@15997>     BEQ 'lc1
0002C2FE <AmiBlitz3.ab3@15998>     BSR.w findlabel2
0002C302 <AmiBlitz3.ab3@15999>     BNE 'l5
0002C304 <AmiBlitz3.ab3@16000>     MOVEQ #1,d3
0002C306 <AmiBlitz3.ab3@16001>     MOVE.w (A7)+,D2
0002C30A <AmiBlitz3.ab3@16002> BRA JL_0_B46E
0002C30C <AmiBlitz3.ab3@16005>   MOVEQ #0,d3
0002C30E <AmiBlitz3.ab3@16006>     MOVE.w (A7)+,D2
0002C312 <AmiBlitz3.ab3@16007> BRA JL_0_B46E
0002C316 <AmiBlitz3.ab3@16010>    BSR.w findlabel2
0002C31A <AmiBlitz3.ab3@16011>    BNE.w cnferr
0002C322 <AmiBlitz3.ab3@16014>    CMPI.l #$1,$4(A2)
0002C326 <AmiBlitz3.ab3@16015>    BNE.w cnferr
0002C32A <AmiBlitz3.ab3@16017>    MOVE.l $8(A2),D3
0002C32C <AmiBlitz3.ab3@16018>    MOVE.w (A7)+,D2
0002C330 <AmiBlitz3.ab3@16019> BRA.w JL_0_B46E
0002C336 <AmiBlitz3.ab3@16023>   CLR.w vartype
0002C33E <AmiBlitz3.ab3@16024>   MOVE.b #3,peekaddrsize
0002C342 <AmiBlitz3.ab3@16025>   BSR.w JL_0_A916
0002C348 <AmiBlitz3.ab3@16026>   MOVE.l a2,rightsidetype
0002C34A <AmiBlitz3.ab3@16027>   MOVEQ.l #$03,D2
0002C34C <AmiBlitz3.ab3@16028> RTS
0002C350 <AmiBlitz3.ab3@16032>    BSR.w get1bytemain
0002C362 <AmiBlitz3.ab3@16033>    !compare2
0002C366 <AmiBlitz3.ab3@16034>    BEQ andop2
0002C36A <AmiBlitz3.ab3@16035>    BSR.w getparameter
0002C36E <AmiBlitz3.ab3@16036>    BSR.w JL_0_8E3C
0002C372 <AmiBlitz3.ab3@16037>    BSR.w calcvar
0002C376 <AmiBlitz3.ab3@16038>   CMP.b #$7,D2
0002C37A <AmiBlitz3.ab3@16039>    BNE.w JL_0_A960
0002C37E <AmiBlitz3.ab3@16040>   BTST #$F,D2
0002C382 <AmiBlitz3.ab3@16041>    BNE.w JL_0_A94A
0002C388 <AmiBlitz3.ab3@16042>   MOVE.w D3,stamp2+2
0002C38E <AmiBlitz3.ab3@16043>   MOVE.l stamp2,D1
0002C392 <AmiBlitz3.ab3@16044>    BSR.w pokela5s
0002C396 <AmiBlitz3.ab3@16045> BRA.w JL_0_A978
0002C39C <AmiBlitz3.ab3@16049>   MOVE.w regnum,D1
0002C39E <AmiBlitz3.ab3@16050>   LSL.w #8,D1
0002C3A0 <AmiBlitz3.ab3@16051>   LSL.w #1,D1
0002C3A6 <AmiBlitz3.ab3@16052>   OR.w stamp,D1
0002C3AA <AmiBlitz3.ab3@16053>    BSR.w writeword
0002C3AC <AmiBlitz3.ab3@16054> RTS
0002C3B0 <AmiBlitz3.ab3@16058>   BTST #$F,D2
0002C3B4 <AmiBlitz3.ab3@16059>    BNE.w JL_0_A978
0002C3BA <AmiBlitz3.ab3@16060>   MOVE.w D3,leaamp+2
0002C3C0 <AmiBlitz3.ab3@16061>   MOVE.l leaamp,D1
0002C3C4 <AmiBlitz3.ab3@16062>    BSR.w pokela5s
0002C3CA <AmiBlitz3.ab3@16065>   MOVE.w regnum,D1
0002C3CC <AmiBlitz3.ab3@16066>   LSL.w #8,D1
0002C3CE <AmiBlitz3.ab3@16067>   LSL.w #1,D1
0002C3D4 <AmiBlitz3.ab3@16068>   OR.w leaamp2,D1
0002C3D8 <AmiBlitz3.ab3@16069> BRA.w writeword
0002C3DC <AmiBlitz3.ab3@16073>   MOVE.w #$D200,D1
0002C3E0 <AmiBlitz3.ab3@16074>    BSR.w Atokejsr
0002C3E2 <AmiBlitz3.ab3@16075>   MOVEQ.l #$03,D2
0002C3E4 <AmiBlitz3.ab3@16076> RTS
0002C3E8 <AmiBlitz3.ab3@16080> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002C3EA <AmiBlitz3.ab3@16081>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002C3EC <AmiBlitz3.ab3@16082>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002C3F0 <AmiBlitz3.ab3@16088>    BSR.w get1bytemain
0002C3F2 <AmiBlitz3.ab3@16089>   MOVE.w D0,D1
0002C3F6 <AmiBlitz3.ab3@16090>    BPL.w syntaxerr
0002C3F8 <AmiBlitz3.ab3@16091>   MOVE.w D2,-(A7)
0002C3FC <AmiBlitz3.ab3@16092>   BCLR #$F,D1
0002C400 <AmiBlitz3.ab3@16093>    BSR.w searchinstr
0002C404 <AmiBlitz3.ab3@16094>   MOVE.l $12(A2),D0
0002C408 <AmiBlitz3.ab3@16095>   TST.w -$2(A2,D0.L)
0002C40C <AmiBlitz3.ab3@16096>    BEQ.w freeerr
0002C40E <AmiBlitz3.ab3@16097>   MOVE.w (A7)+,D2
0002C410 <AmiBlitz3.ab3@16098> RTS
0002C414 <AmiBlitz3.ab3@16102>   MOVE.l $0(A5),D0
0002C418 <AmiBlitz3.ab3@16103>    BNE.b ucodeskip
0002C41A <AmiBlitz3.ab3@16104>   MOVEQ.l #-$01,D0
0002C41E <AmiBlitz3.ab3@16105> BRA.b usedcodef
0002C422 <AmiBlitz3.ab3@16108>   SUB.l $0(A5),D0
0002C424 <AmiBlitz3.ab3@16111>   LSR.w #8,D0
0002C428 <AmiBlitz3.ab3@16116>    MOVE.l $0(A5),D0
0002C42C <AmiBlitz3.ab3@16117>    BNE.b ucodeskip2
0002C42E <AmiBlitz3.ab3@16118>   MOVEQ.l #-$01,D0
0002C432 <AmiBlitz3.ab3@16119> BRA.b usedcode2f
0002C436 <AmiBlitz3.ab3@16122>   SUB.l $0(A5),D0                                          ;usedcode2
0002C438 <AmiBlitz3.ab3@16123>   LSR.w #8,D0
0002C43A <AmiBlitz3.ab3@16126>   LSR.w #8,D0
0002C43C <AmiBlitz3.ab3@16131>   MOVE.l D0,-(A7)
0002C43E <AmiBlitz3.ab3@16134>   MOVE.l (A7)+,D0
0002C440 <AmiBlitz3.ab3@16137>   MOVE.l D0,D0
0002C444 <AmiBlitz3.ab3@16143>   BSR.w JL_0_A9A0
0002C448 <AmiBlitz3.ab3@16145>   MOVE.w -$2(A2,D0.L),D3
0002C44C <AmiBlitz3.ab3@16146>   CMP.w #$9,D3
0002C450 <AmiBlitz3.ab3@16147>    BCC.w doused__skip
0002C454 <AmiBlitz3.ab3@16151>   LEA usedcode(PC),A0
0002C458 <AmiBlitz3.ab3@16152>   LEA usedcodef(PC),A1
0002C45E <AmiBlitz3.ab3@16154>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002C462 <AmiBlitz3.ab3@16155>   ANDI.w #$7,D3
0002C464 <AmiBlitz3.ab3@16156>   LSL.w #8,D3
0002C466 <AmiBlitz3.ab3@16157>   LSL.w #1,D3
0002C46A <AmiBlitz3.ab3@16158>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002C46E <AmiBlitz3.ab3@16159> BRA.w doused__skip2
0002C472 <AmiBlitz3.ab3@16164>   LEA usedcode2(PC),A0
0002C476 <AmiBlitz3.ab3@16165>   LEA usedcode2f(PC),A1
0002C47C <AmiBlitz3.ab3@16167>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002C47E <AmiBlitz3.ab3@16168>   SUBQ.w #8,D3
0002C480 <AmiBlitz3.ab3@16169>   LSL.w #8,D3
0002C482 <AmiBlitz3.ab3@16170>   LSL.w #1,D3
0002C486 <AmiBlitz3.ab3@16171>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002C48A <AmiBlitz3.ab3@16174>   MOVE.w -$6(A2,D0.L),D3
0002C48E <AmiBlitz3.ab3@16175>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002C490 <AmiBlitz3.ab3@16176>   ADDQ.w #4,D3
0002C494 <AmiBlitz3.ab3@16177>   MOVE.w D3,$2(A0)
0002C49A <AmiBlitz3.ab3@16178>   MOVE.w regnum,D1
0002C49E <AmiBlitz3.ab3@16179>    BEQ.w doused__skip3
0002C4A2 <AmiBlitz3.ab3@16180>   MOVE.w usedprep(PC),D1
0002C4A6 <AmiBlitz3.ab3@16181>    BSR.w writeword
0002C4AA <AmiBlitz3.ab3@16184>   BSR.w pokecode
0002C4B0 <AmiBlitz3.ab3@16185>   MOVE.w regnum,D1
0002C4B4 <AmiBlitz3.ab3@16186>    BEQ.w doused__skip4
0002C4B6 <AmiBlitz3.ab3@16187>   LSL.w #8,D1
0002C4B8 <AmiBlitz3.ab3@16188>   LSL.w #1,D1
0002C4BC <AmiBlitz3.ab3@16189>   OR.w usedfix(PC),D1
0002C4C0 <AmiBlitz3.ab3@16190>    BSR.w writeword
0002C4C4 <AmiBlitz3.ab3@16191>   MOVE.w useddone(PC),D1
0002C4C8 <AmiBlitz3.ab3@16192>    BSR.w writeword
0002C4CA <AmiBlitz3.ab3@16195>    MOVEQ.l #$02,D2
0002C4CE <AmiBlitz3.ab3@16196> BRA.w get1bytemain
0002C4D2 <AmiBlitz3.ab3@16204>    BSR.w JL_0_A9A0
0002C4D4 <AmiBlitz3.ab3@16206>   MOVEQ.l #$00,D3
0002C4D8 <AmiBlitz3.ab3@16207>   MOVE.w -$4(A2,D0.L),D3
0002C4DC <AmiBlitz3.ab3@16208>    BSR.w get1bytemain
0002C4E0 <AmiBlitz3.ab3@16209> BRA.w JL_0_B46E
0002C4E4 <AmiBlitz3.ab3@16216>    BSR.w get1bytemain
0002C4E6 <AmiBlitz3.ab3@16217>   MOVE.w D0,-(A7)
0002C4EA <AmiBlitz3.ab3@16218>    BSR.w get1bytemain
0002C4EE <AmiBlitz3.ab3@16219>   CMP.w #$28,D0
0002C4F2 <AmiBlitz3.ab3@16220>    BNE.w syntaxerr
0002C4F4 <AmiBlitz3.ab3@16221>   MOVE.w (A7)+,D0
0002C4F8 <AmiBlitz3.ab3@16222>    BSR.w JL_0_C340
0002C4FC <AmiBlitz3.ab3@16223>    BSR.w reget
0002C500 <AmiBlitz3.ab3@16224>   CMP.w #$29,D0
0002C504 <AmiBlitz3.ab3@16225>    BNE.w syntaxerr
0002C508 <AmiBlitz3.ab3@16229>   LEA addrcode(PC),A0
0002C50C <AmiBlitz3.ab3@16230>   LEA addrcodef(PC),A1
0002C512 <AmiBlitz3.ab3@16231>   MOVE.w -$6(A2),$2(A0)
0002C516 <AmiBlitz3.ab3@16232>   MOVE.w $4(A0),D1
0002C51A <AmiBlitz3.ab3@16233>   ANDI.w #$FFF8,D1
0002C520 <AmiBlitz3.ab3@16234>   OR.w regnum,D1
0002C524 <AmiBlitz3.ab3@16235>   MOVE.w D1,$4(A0)
0002C528 <AmiBlitz3.ab3@16236>   MOVE.w $6(A0),D1
0002C52C <AmiBlitz3.ab3@16237>   ANDI.w #$F1FF,D1
0002C532 <AmiBlitz3.ab3@16238>   MOVE.w regnum,D0
0002C534 <AmiBlitz3.ab3@16239>   LSL.w #8,D0
0002C536 <AmiBlitz3.ab3@16240>   LSL.w #1,D0
0002C538 <AmiBlitz3.ab3@16241>   OR.w D0,D1
0002C53C <AmiBlitz3.ab3@16242>   MOVE.w D1,$6(A0)
0002C540 <AmiBlitz3.ab3@16243>    BSR.w pokecode
0002C542 <AmiBlitz3.ab3@16244>   MOVEQ.l #$03,D2
0002C546 <AmiBlitz3.ab3@16245> BRA.w get1bytemain
0002C54A <AmiBlitz3.ab3@16249>   CMP.w #-$7F4D,D0
0002C54E <AmiBlitz3.ab3@16250>    BHI.w JL_0_AAFE
0002C552 <AmiBlitz3.ab3@16251> BRA.w syntaxerr
0002C556 <AmiBlitz3.ab3@16258> .do_null   CMP.w #$b581,d0
0002C55A <AmiBlitz3.ab3@16259>    BNE 'nonull
0002C560 <AmiBlitz3.ab3@16260>    MOVE.l d0,lastinstruction
0002C564 <AmiBlitz3.ab3@16261>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002C56A <AmiBlitz3.ab3@16262>    MOVE.w regnum,d0
0002C56C <AmiBlitz3.ab3@16263>    ASL.l #7,d0
0002C56E <AmiBlitz3.ab3@16264>    ASL.l #2,d0
0002C570 <AmiBlitz3.ab3@16265>    OR.l d0,d1
0002C574 <AmiBlitz3.ab3@16266>    BSR writeword
0002C57A <AmiBlitz3.ab3@16267>    JSR get1bytemain
0002C57C <AmiBlitz3.ab3@16268>    RTS
0002C580 <AmiBlitz3.ab3@16270> 'nonull CMP.w #$c982,d0
0002C584 <AmiBlitz3.ab3@16271>        BNE nonew_
0002C586 <AmiBlitz3.ab3@16273>   MOVE.l a5,-(a7)
0002C58C <AmiBlitz3.ab3@16274>   MOVE.w lastchar,-(a7)
0002C592 <AmiBlitz3.ab3@16275>   JSR get1bytemain
0002C596 <AmiBlitz3.ab3@16276>   CMP.w #"(",d0                                             ; use oldcode
0002C59A <AmiBlitz3.ab3@16277>   BNE 'newcode
0002C5A0 <AmiBlitz3.ab3@16278>   JSR get1bytemain
0002C5A4 <AmiBlitz3.ab3@16279>   CMP.w #")",d0
0002C5A8 <AmiBlitz3.ab3@16280>   BEQ 'newcode
0002C5AE <AmiBlitz3.ab3@16281>   MOVE.w (a7)+,lastchar
0002C5B0 <AmiBlitz3.ab3@16282>   MOVE.l (a7)+,a5
0002C5B6 <AmiBlitz3.ab3@16283>   MOVE.w lastchar,d0
0002C5BA <AmiBlitz3.ab3@16284>   BRA nonew_
0002C5BC <AmiBlitz3.ab3@16285> 'newcode  MOVE.l a0,-(a7)
0002C5C2 <AmiBlitz3.ab3@16286>   TST.b blitzparloop
0002C5C6 <AmiBlitz3.ab3@16287>   BNE 'err
0002C5CC <AmiBlitz3.ab3@16288>   TST.b funcparloop
0002C5D0 <AmiBlitz3.ab3@16289>   BNE 'err
0002C5D4 <AmiBlitz3.ab3@16290>   BRA 'ok
0002C5DA <AmiBlitz3.ab3@16291> 'err JMP errornewnotincalls
0002C5E0 <AmiBlitz3.ab3@16292> 'ok  MOVE.l #$203c0000,d1
0002C5E4 <AmiBlitz3.ab3@16293>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002C5E6 <AmiBlitz3.ab3@16294>   MOVEQ #0,d1
0002C5EA <AmiBlitz3.ab3@16295>   MOVE.w 8(a0),d1
0002C5EE <AmiBlitz3.ab3@16296>   BSR writeword
0002C5F2 <AmiBlitz3.ab3@16297>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002C5F6 <AmiBlitz3.ab3@16298>   BSR writeword
0002C5FA <AmiBlitz3.ab3@16299>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002C5FE <AmiBlitz3.ab3@16300>   BSR.w tokejsr2
0002C600 <AmiBlitz3.ab3@16301>   MOVE.l (a7)+,a0
0002C602 <AmiBlitz3.ab3@16302>   ADDQ.l #6,a7                      ; a5 need not restore
0002C606 <AmiBlitz3.ab3@16303>   CMP.w #")",d0
0002C60A <AmiBlitz3.ab3@16304>   BNE 'nobracket
0002C610 <AmiBlitz3.ab3@16305>   JSR get1bytemain
0002C612 <AmiBlitz3.ab3@16306> 'nobracket  RTS
0002C616 <AmiBlitz3.ab3@16308> nonew_  CMP.w #-$7F4A,D0
0002C61A <AmiBlitz3.ab3@16309>    BEQ.w JL_0_A98C
0002C61E <AmiBlitz3.ab3@16310>   CMP.w #-$7F48,D0
0002C622 <AmiBlitz3.ab3@16311>    BEQ.w doaddr
0002C626 <AmiBlitz3.ab3@16312>   CMP.w #-$7F3C,D0
0002C62A <AmiBlitz3.ab3@16313>    BEQ.w domaximum
0002C62E <AmiBlitz3.ab3@16314>   CMP.w #-$7F2F,D0
0002C632 <AmiBlitz3.ab3@16315>    BEQ.w doused
0002C634 <AmiBlitz3.ab3@16316>   MOVE.w D2,-(A7)
0002C636 <AmiBlitz3.ab3@16317>   MOVE.w D0,D1
0002C63A <AmiBlitz3.ab3@16318>   BCLR #$F,D1
0002C63E <AmiBlitz3.ab3@16320>    BSR.w searchinstr
0002C640 <AmiBlitz3.ab3@16321>   MOVE.w (A3),D1
0002C644 <AmiBlitz3.ab3@16322>   BTST #$1,D1
0002C648 <AmiBlitz3.ab3@16323>    BEQ.w noreturn_                                         ;syntax error noreturn
0002C64C <AmiBlitz3.ab3@16324>   BTST #$2,D1
0002C650 <AmiBlitz3.ab3@16325>    BNE.w JL_0_AC1A
0002C652 <AmiBlitz3.ab3@16326>   LSR.w #8,D1
0002C658 <AmiBlitz3.ab3@16327>   BTST #$3,$1(A3)
0002C65C <AmiBlitz3.ab3@16328>    BEQ.w JL_0_AB4C
0002C662 <AmiBlitz3.ab3@16329>    JSR AJL_0_498A
0002C668 <AmiBlitz3.ab3@16332>    CLR.l rightsidetype
0002C66A <AmiBlitz3.ab3@16333>    MOVE.w D1,-(A7)                                         ;is library instruction
0002C66E <AmiBlitz3.ab3@16334>   CMP.w #$7,D1
0002C672 <AmiBlitz3.ab3@16335>    BNE.w JL_0_AB5E
0002C674 <AmiBlitz3.ab3@16336>   MOVE.l A2,-(A7)
0002C678 <AmiBlitz3.ab3@16337>    BSR.w makesbase
0002C67A <AmiBlitz3.ab3@16338>   MOVEA.l (A7)+,A2
0002C67E <AmiBlitz3.ab3@16341>     BSR.w JL_0_AFA2
0002C680 <AmiBlitz3.ab3@16342>   MOVE.w D3,-(A7)
0002C684 <AmiBlitz3.ab3@16343>    BSR.w get1bytemain
0002C686 <AmiBlitz3.ab3@16344>   MOVEQ.l #$00,D1
0002C68A <AmiBlitz3.ab3@16345>   CMP.w #$28,D0
0002C68E <AmiBlitz3.ab3@16346>    BNE.w JL_0_AB80
0002C694 <AmiBlitz3.ab3@16347>    JSR JL_0_66F6
0002C696 <AmiBlitz3.ab3@16348>   TST.w D1
0002C69A <AmiBlitz3.ab3@16349>    BEQ.w syntaxerr
0002C69E <AmiBlitz3.ab3@16350> BRA.w JL_0_AB84
0002C6A8 <AmiBlitz3.ab3@16355>   MOVE.w oldqflag,instringon
0002C6AE <AmiBlitz3.ab3@16356>   MOVEA.l lastsourcepos,A5
0002C6B4 <AmiBlitz3.ab3@16359>    MOVE.w regnum,-(A7)
0002C6BE <AmiBlitz3.ab3@16360>    MOVE.w regnum,regnumstore
0002C6C4 <AmiBlitz3.ab3@16361>    TST.b fpu
0002C6C8 <AmiBlitz3.ab3@16362>             BEQ 'nofloat
0002C6CE <AmiBlitz3.ab3@16363>             CMP.w #$ffff,28(a3)
0002C6D2 <AmiBlitz3.ab3@16364>             BNE 'nofloat
0002C6D8 <AmiBlitz3.ab3@16365>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002C6DC <AmiBlitz3.ab3@16366>             BEQ 'nofloat
0002C6E2 <AmiBlitz3.ab3@16367>             CMP.w #$3c02,34(a3)                            ;int skip
0002C6E6 <AmiBlitz3.ab3@16368>             BEQ 'quick
0002C6EA <AmiBlitz3.ab3@16369>             CMP.b #5,(a3)
0002C6EE <AmiBlitz3.ab3@16370>             BNE 'nofloat
0002C6F4 <AmiBlitz3.ab3@16373>             CLR.l load_var_addr
0002C6F8 <AmiBlitz3.ab3@16374> BRA 'isfpu
0002C6FE <AmiBlitz3.ab3@16377>    CLR.w regnum
0002C700 <AmiBlitz3.ab3@16380>    MOVE.w D1,-(A7)
0002C706 <AmiBlitz3.ab3@16381>   BTST #$3,$1(A3)
0002C70A <AmiBlitz3.ab3@16382>    BEQ.w JL_0_ABB0
0002C70E <AmiBlitz3.ab3@16401>   MOVE.w $6(A7),D1
0002C714 <AmiBlitz3.ab3@16402>   MOVE.w d1,peeksize
0002C718 <AmiBlitz3.ab3@16412>   ORI.w #$7000,D1
0002C71C <AmiBlitz3.ab3@16413>   BSR.w writeword                                          ;write peekmode
0002C722 <AmiBlitz3.ab3@16416>   ADDQ.w #1,regnum
0002C724 <AmiBlitz3.ab3@16417>   MOVE.w (A7),D1
0002C72C <AmiBlitz3.ab3@16420>   MOVE.w 2(a7),tempregnum
0002C732 <AmiBlitz3.ab3@16421>   JSR JL_0_4878
0002C734 <AmiBlitz3.ab3@16422>   TST.w (A7)+
0002C738 <AmiBlitz3.ab3@16423>   BEQ.w JL_0_ABC6
0002C73C <AmiBlitz3.ab3@16424>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002C740 <AmiBlitz3.ab3@16425>   BNE.w errorbracketmiss                                    ; was syntax error
0002C746 <AmiBlitz3.ab3@16426>   CLR.l lasttoken
0002C74A <AmiBlitz3.ab3@16427>   BSR.w get1bytemain
0002C74C <AmiBlitz3.ab3@16430>    MOVE.w (A7)+,D1
0002C752 <AmiBlitz3.ab3@16431>   MOVE.w D1,regnum
0002C756 <AmiBlitz3.ab3@16432>    BEQ.w JL_0_ABDE
0002C75C <AmiBlitz3.ab3@16433>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002C760 <AmiBlitz3.ab3@16434>    BNE 'noval
0002C766 <AmiBlitz3.ab3@16435>    TST.b fpu
0002C76A <AmiBlitz3.ab3@16436>    BEQ 'noval
0002C770 <AmiBlitz3.ab3@16437>    CLR.l load_var_addr
0002C772 <AmiBlitz3.ab3@16438>    MOVEQ #0,d1
0002C778 <AmiBlitz3.ab3@16439>    MOVE.w regnum,d1
0002C77A <AmiBlitz3.ab3@16440>    LSL.l #7,d1
0002C780 <AmiBlitz3.ab3@16441>    OR.l #$f2000000,d1
0002C784 <AmiBlitz3.ab3@16442>    BSR writelong
0002C788 <AmiBlitz3.ab3@16443> BRA JL_0_ABDE
0002C78E <AmiBlitz3.ab3@16447>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002C792 <AmiBlitz3.ab3@16448>    BEQ 'quick
0002C796 <AmiBlitz3.ab3@16449>    CMP.b #5,d2
0002C79A <AmiBlitz3.ab3@16450>    BNE 'nofpu
0002C7A0 <AmiBlitz3.ab3@16451>    TST.b fpu
0002C7A4 <AmiBlitz3.ab3@16452>    BEQ 'nofpu
0002C7AA <AmiBlitz3.ab3@16457>    CLR.l load_var_addr
0002C7AE <AmiBlitz3.ab3@16458> BRA JL_0_ABDE
0002C7B0 <AmiBlitz3.ab3@16461>   LSL.w #8,D1
0002C7B2 <AmiBlitz3.ab3@16462>   LSL.w #1,D1
0002C7B6 <AmiBlitz3.ab3@16463>   ORI.w #$2000,D1
0002C7BA <AmiBlitz3.ab3@16464>   BSR.w writeword                                          ;write move.l d0,dx
0002C7C0 <AmiBlitz3.ab3@16465>   TST.b fpu
0002C7C4 <AmiBlitz3.ab3@16466>   BEQ JL_0_ABDE
0002C7C6 <AmiBlitz3.ab3@16467>   MOVEQ #0,d1
0002C7CC <AmiBlitz3.ab3@16468>   MOVE.w regnum,d1
0002C7CE <AmiBlitz3.ab3@16469>   LSL.l #7,d1
0002C7D4 <AmiBlitz3.ab3@16470>   OR.l #$f2000000,d1
0002C7D6 <AmiBlitz3.ab3@16474>        MOVE.w (A7)+,D3
0002C7DA <AmiBlitz3.ab3@16475>        BEQ.w JL_0_ABFC
0002C7E0 <AmiBlitz3.ab3@16476>        TST.b fpu
0002C7E4 <AmiBlitz3.ab3@16477>        BEQ 'nofpu
0002C7E6 <AmiBlitz3.ab3@16478>       MOVE.l d0,-(a7)
0002C7E8 <AmiBlitz3.ab3@16479>        MOVE.l a0,-(a7)
0002C7EE <AmiBlitz3.ab3@16480>        MOVE.l stacktrack,d1
0002C7F4 <AmiBlitz3.ab3@16481>        LEA fpustackbase,a0
0002C7FC <AmiBlitz3.ab3@16482>        MOVE.w 0(a0,d1),regmask
0002C7FE <AmiBlitz3.ab3@16483>        MOVE.l (a7)+,a0
0002C802 <AmiBlitz3.ab3@16484>       MOVE.w #8,d0
0002C806 <AmiBlitz3.ab3@16487>       BEQ 'ready
0002C80C <AmiBlitz3.ab3@16488>       BTST d0,regmask
0002C810 <AmiBlitz3.ab3@16489>       BEQ 'noa7
0002C812 <AmiBlitz3.ab3@16490>       MOVEQ #0,d1
0002C814 <AmiBlitz3.ab3@16491>       MOVE.w d0,d1
0002C816 <AmiBlitz3.ab3@16492>       SUBQ.w #1,d1
0002C818 <AmiBlitz3.ab3@16493>       ASL #7,d1
0002C81E <AmiBlitz3.ab3@16495>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002C822 <AmiBlitz3.ab3@16496>       BSR writelong
0002C828 <AmiBlitz3.ab3@16497>       SUBQ.l #2,stacktrack
0002C82A <AmiBlitz3.ab3@16500>       SUBQ.w #1,d0
0002C82E <AmiBlitz3.ab3@16501>       BNE 'loop
0002C830 <AmiBlitz3.ab3@16504>       MOVE.l (a7)+,d0
0002C836 <AmiBlitz3.ab3@16505>       SUBQ.l #2,stacktrack                                 ;int track
0002C83A <AmiBlitz3.ab3@16508>    MOVE.w #$4CDF,D1
0002C83E <AmiBlitz3.ab3@16509>    BSR.w writeword                                         ;write movem.l (a7)+,
0002C840 <AmiBlitz3.ab3@16510>   MOVEQ.l #$00,D1
0002C842 <AmiBlitz3.ab3@16511>   MOVEQ.l #$0F,D4
0002C844 <AmiBlitz3.ab3@16514>     LSL.w #1,D3
0002C846 <AmiBlitz3.ab3@16515>     ROXR.w #1,D1
0002C84A <AmiBlitz3.ab3@16516>   DBF D4,JL_0_ABF0
0002C84E <AmiBlitz3.ab3@16518>    BSR.w writeword
0002C854 <AmiBlitz3.ab3@16519>    TST.b fast
0002C858 <AmiBlitz3.ab3@16520>    BEQ JL_0_ABFC
0002C85E <AmiBlitz3.ab3@16521>    TST.w regnum
0002C862 <AmiBlitz3.ab3@16522>    BEQ JL_0_ABFC
0002C868 <AmiBlitz3.ab3@16523>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002C86C <AmiBlitz3.ab3@16524>    BNE 'l1
0002C872 <AmiBlitz3.ab3@16525>    MOVE.w regnum,d1
0002C874 <AmiBlitz3.ab3@16526>    ASL.l #8,d1
0002C876 <AmiBlitz3.ab3@16527>    ASL.l #1,d1
0002C87A <AmiBlitz3.ab3@16528>    OR.w #$70ff,d1
0002C884 <AmiBlitz3.ab3@16529>    SUB.l #12,destpointer
0002C888 <AmiBlitz3.ab3@16530>    BSR writeword
0002C88E <AmiBlitz3.ab3@16533>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002C892 <AmiBlitz3.ab3@16534>    BNE 'l2
0002C898 <AmiBlitz3.ab3@16535>     MOVE.w regnum,d1
0002C89A <AmiBlitz3.ab3@16536>     ASL.l #8,d1
0002C89C <AmiBlitz3.ab3@16537>     ASL.l #1,d1
0002C8A0 <AmiBlitz3.ab3@16538>     OR.w #$7000,d1
0002C8AA <AmiBlitz3.ab3@16539>     SUB.l #12,destpointer
0002C8AE <AmiBlitz3.ab3@16540>     BSR writeword
0002C8B0 <AmiBlitz3.ab3@16544>    MOVE.w (A7)+,D2
0002C8B4 <AmiBlitz3.ab3@16545>   CMP.w #$7,D2                                             ;destination var type
0002C8B8 <AmiBlitz3.ab3@16546>    BNE.w JL_0_AC16
0002C8BE <AmiBlitz3.ab3@16547>   MOVE.w putstlen,D1
0002C8C4 <AmiBlitz3.ab3@16548>   OR.w regnum,D1
0002C8C8 <AmiBlitz3.ab3@16549>    BSR.w writeword
0002C8CC <AmiBlitz3.ab3@16552> BRA.w JL_0_AF66
0002C8D0 <AmiBlitz3.ab3@16557>   MOVE.w $6(A3),D1
0002C8D4 <AmiBlitz3.ab3@16558>    BSR.w uselib
0002C8D8 <AmiBlitz3.ab3@16559>    BSR.w JL_0_AD40
0002C8DA <AmiBlitz3.ab3@16560>   MOVE.l D4,D1
0002C8DC <AmiBlitz3.ab3@16561>   MOVE.l D5,-(A7)
0002C8E0 <AmiBlitz3.ab3@16562>    BSR.w JL_0_AD38
0002C8E4 <AmiBlitz3.ab3@16563>   MOVE.w $A(A1),-(A7)
0002C8E6 <AmiBlitz3.ab3@16564>   ADDQ.w #8,A3
0002C8E8 <AmiBlitz3.ab3@16565>   MOVE.w (A3)+,-(A7)
0002C8EA <AmiBlitz3.ab3@16566>   MOVE.l A3,-(A7)
0002C8EE <AmiBlitz3.ab3@16567>    BSR.w get1bytemain
0002C8F0 <AmiBlitz3.ab3@16568>   MOVE.w D0,-(A7)
0002C8F2 <AmiBlitz3.ab3@16569>   MOVEQ.l #$00,D3
0002C8F8 <AmiBlitz3.ab3@16570>   JSR checka4a5
0002C8FA <AmiBlitz3.ab3@16572>   MOVE.b (A3)+,D1
0002C8FE <AmiBlitz3.ab3@16573>    BMI.w JL_0_AC6A
0002C900 <AmiBlitz3.ab3@16574>   MOVEQ.l #$03,D2
0002C902 <AmiBlitz3.ab3@16575>   ADDQ.w #1,D3
0002C906 <AmiBlitz3.ab3@16576>   MOVEM.l D3/A3,-(A7)
0002C90C <AmiBlitz3.ab3@16577>   MOVE.b funcparloop,-(a7)
0002C912 <AmiBlitz3.ab3@16578>   CLR.b funcparloop
0002C918 <AmiBlitz3.ab3@16579>   MOVE.b blitzparloop,-(a7)
0002C920 <AmiBlitz3.ab3@16580>   MOVE.b #1,blitzparloop
0002C926 <AmiBlitz3.ab3@16581>   MOVE.l lasttoken,-(a7)
0002C92C <AmiBlitz3.ab3@16582>   MOVE.l leftsidetype,-(a7)
0002C932 <AmiBlitz3.ab3@16583>   MOVE.l rightsidetype,-(a7)
0002C936 <AmiBlitz3.ab3@16584>   BSR.w peval
0002C93C <AmiBlitz3.ab3@16585>   MOVE.l (a7)+,rightsidetype
0002C942 <AmiBlitz3.ab3@16586>   MOVE.l (a7)+,leftsidetype
0002C948 <AmiBlitz3.ab3@16587>   MOVE.l (a7)+,lasttoken
0002C94E <AmiBlitz3.ab3@16588>   MOVE.b (a7)+,blitzparloop
0002C954 <AmiBlitz3.ab3@16589>   MOVE.b (a7)+,funcparloop
0002C95A <AmiBlitz3.ab3@16590>   SUBQ.w #4,a2offset
0002C95E <AmiBlitz3.ab3@16591>   MOVEM.l (A7)+,D3/A3
0002C962 <AmiBlitz3.ab3@16592>   CMP.w #$2C,D0
0002C966 <AmiBlitz3.ab3@16593>    BEQ.w JL_0_AC40
0002C968 <AmiBlitz3.ab3@16594>   TST.b (A3)
0002C96C <AmiBlitz3.ab3@16595>    BPL.w syntaxerr
0002C96E <AmiBlitz3.ab3@16598>   MOVE.w (A7)+,D1
0002C972 <AmiBlitz3.ab3@16599>    BSR.w JL_0_AD04
0002C974 <AmiBlitz3.ab3@16600>   MOVEA.l (A7)+,A3
0002C976 <AmiBlitz3.ab3@16601>   SUBQ.w #1,D3
0002C97A <AmiBlitz3.ab3@16602>    BMI.w JL_0_ACBE
0002C97C <AmiBlitz3.ab3@16605>   TST.b (A3)+
0002C980 <AmiBlitz3.ab3@16606>    BPL.w JL_0_AC78
0002C982 <AmiBlitz3.ab3@16607>   SUBQ.w #1,A3
0002C984 <AmiBlitz3.ab3@16610>     MOVEQ.l #$00,D1
0002C986 <AmiBlitz3.ab3@16611>     MOVE.b -(A3),D1
0002C98A <AmiBlitz3.ab3@16612>     BTST #$4,D1
0002C98E <AmiBlitz3.ab3@16613>      BNE.w JL_0_ACAA
0002C994 <AmiBlitz3.ab3@16614>     CMP.w regnum,D1
0002C998 <AmiBlitz3.ab3@16615>      BCC.w JL_0_AC9E
0002C99A <AmiBlitz3.ab3@16616>     BSET D1,D5
0002C99C <AmiBlitz3.ab3@16617>     MOVEQ.l #$0F,D0
0002C99E <AmiBlitz3.ab3@16618>     SUB.w D1,D0
0002C9A0 <AmiBlitz3.ab3@16619>     BSET D0,D4
0002C9A2 <AmiBlitz3.ab3@16622>     LSL.w #8,D1
0002C9A4 <AmiBlitz3.ab3@16623>     LSL.w #1,D1
0002C9A8 <AmiBlitz3.ab3@16624>     ORI.w #$201F,D1
0002C9AC <AmiBlitz3.ab3@16625>   BRA.w JL_0_ACB6
0002C9B0 <AmiBlitz3.ab3@16628>     ANDI.w #$7,D1
0002C9B2 <AmiBlitz3.ab3@16629>     LSL.w #8,D1
0002C9B4 <AmiBlitz3.ab3@16630>     LSL.w #1,D1
0002C9B8 <AmiBlitz3.ab3@16631>     ORI.w #$205F,D1
0002C9BC <AmiBlitz3.ab3@16634>      BSR.w writeword
0002C9C0 <AmiBlitz3.ab3@16635>   DBF D3,JL_0_AC80
0002C9C6 <AmiBlitz3.ab3@16638>   MOVE.w (A7)+,libjsr+2
0002C9CC <AmiBlitz3.ab3@16639>   MOVE.w (A7)+,libbase+2
0002C9D2 <AmiBlitz3.ab3@16640>   MOVE.l libbase,D1
0002C9D6 <AmiBlitz3.ab3@16641>    BSR.w writelong
0002C9DC <AmiBlitz3.ab3@16642>   MOVE.l libjsr,D1
0002C9E0 <AmiBlitz3.ab3@16643>    BSR.w writelong
0002C9E6 <AmiBlitz3.ab3@16644>   MOVE.w regnum,D1
0002C9EA <AmiBlitz3.ab3@16645>    BEQ.w JL_0_ACF4
0002C9EC <AmiBlitz3.ab3@16646>   LSL.w #8,D1
0002C9EE <AmiBlitz3.ab3@16647>   LSL.w #1,D1
0002C9F2 <AmiBlitz3.ab3@16648>   ORI.w #$2000,D1
0002C9F6 <AmiBlitz3.ab3@16649>    BSR.w writeword
0002C9F8 <AmiBlitz3.ab3@16652>   MOVE.l (A7)+,D1
0002C9FC <AmiBlitz3.ab3@16653>    BSR.w JL_0_AD38
0002CA02 <AmiBlitz3.ab3@16654>    JSR restorea4a5
0002CA04 <AmiBlitz3.ab3@16655>   MOVEQ.l #$03,D2
0002CA08 <AmiBlitz3.ab3@16656>    BSR.w reget
0002CA0C <AmiBlitz3.ab3@16657> BRA.w JL_0_AF66
0002CA0E <AmiBlitz3.ab3@16660>   TST.w D3
0002CA12 <AmiBlitz3.ab3@16661>    BEQ.w JL_0_AD1E
0002CA16 <AmiBlitz3.ab3@16662>   CMP.w #$28,D1
0002CA1A <AmiBlitz3.ab3@16663>    BNE.w syntaxerr
0002CA1E <AmiBlitz3.ab3@16664>   CMP.w #$29,D0
0002CA22 <AmiBlitz3.ab3@16665>    BNE.w syntaxerr
0002CA26 <AmiBlitz3.ab3@16666> BRA.w get1bytemain
0002CA2A <AmiBlitz3.ab3@16669>   CMP.w #$28,D1
0002CA2E <AmiBlitz3.ab3@16670>    BNE.w JL_0_AD36
0002CA32 <AmiBlitz3.ab3@16671>    BSR.w get1bytemain
0002CA36 <AmiBlitz3.ab3@16672>   CMP.w #$29,D0
0002CA3A <AmiBlitz3.ab3@16673>    BNE.w syntaxerr
0002CA3E <AmiBlitz3.ab3@16674> BRA.w get1bytemain
0002CA40 <AmiBlitz3.ab3@16677> RTS
0002CA42 <AmiBlitz3.ab3@16680>   TST.w D1
0002CA46 <AmiBlitz3.ab3@16681>    BNE.w writelong
0002CA48 <AmiBlitz3.ab3@16682> RTS
0002CA4C <AmiBlitz3.ab3@16686>   MOVE.w #$48E7,D4
0002CA4E <AmiBlitz3.ab3@16687>   SWAP D4
0002CA50 <AmiBlitz3.ab3@16688>   CLR.w D4
0002CA54 <AmiBlitz3.ab3@16689>   MOVE.w #$4CDF,D5
0002CA56 <AmiBlitz3.ab3@16690>   SWAP D5
0002CA58 <AmiBlitz3.ab3@16691>   CLR.w D5
0002CA5E <AmiBlitz3.ab3@16692>   MOVE.w regnum,D1
0002CA62 <AmiBlitz3.ab3@16693>    BEQ.w JL_0_AD74
0002CA66 <AmiBlitz3.ab3@16694>   BSET #$F,D4
0002CA6A <AmiBlitz3.ab3@16695>   BSET #$0,D5
0002CA6E <AmiBlitz3.ab3@16696>   CMP.w #$2,D1
0002CA72 <AmiBlitz3.ab3@16697>    BCS.w JL_0_AD72
0002CA76 <AmiBlitz3.ab3@16700>   BSET #$E,D4
0002CA7A <AmiBlitz3.ab3@16701>   BSET #$1,D5
0002CA7C <AmiBlitz3.ab3@16704> RTS
0002CA82 <AmiBlitz3.ab3@16707>   TST.w fuckpos
0002CA86 <AmiBlitz3.ab3@16708>   BNE.w JL_0_AD6A
0002CA88 <AmiBlitz3.ab3@16709> RTS
0002CA8A <AmiBlitz3.ab3@16712> fuckpos:  Ds.w 1
0002CA90 <AmiBlitz3.ab3@16716>   MOVE.w sbasegot,D1
0002CA94 <AmiBlitz3.ab3@16717>    BEQ.w makesbase__skip
0002CA98 <AmiBlitz3.ab3@16721>   MOVE.w sbgot(PC),D1
0002CA9C <AmiBlitz3.ab3@16722>    BNE.w makesbase__skip2
0002CAA4 <AmiBlitz3.ab3@16726>   MOVE.w #$0002,sbgot
0002CAAA <AmiBlitz3.ab3@16727>   MOVE.w movea3a7,D1
0002CAAE <AmiBlitz3.ab3@16728> BRA.w writeword
0002CAB0 <AmiBlitz3.ab3@16731> RTS
0002CAB8 <AmiBlitz3.ab3@16736>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002CABE <AmiBlitz3.ab3@16739>   MOVE.l #$C601,D1
0002CAC6 <AmiBlitz3.ab3@16740>   MOVE.w #-1,sbasegot
0002CACC <AmiBlitz3.ab3@16741>   MOVE.l d1,lastinstruction
0002CAD0 <AmiBlitz3.ab3@16742>   BSR.w Atokejsr
0002CAD2 <AmiBlitz3.ab3@16743> RTS
0002CADC <AmiBlitz3.ab3@16748>   MOVE.l data1,litdata1
0002CAE2 <AmiBlitz3.ab3@16749>   TST.b fast
0002CAE6 <AmiBlitz3.ab3@16750>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002CAEA <AmiBlitz3.ab3@16754> BRA 'l50                                                   ;to deactivate
0002CAF0 <AmiBlitz3.ab3@16760>   TST.b optistring
0002CAF4 <AmiBlitz3.ab3@16761>   BNE.s 'l21
0002CAFA <AmiBlitz3.ab3@16762>   CLR.b string1
0002CB02 <AmiBlitz3.ab3@16763>   MOVE.b #1,optistring
0002CB08 <AmiBlitz3.ab3@16764>   TST.b nostringopt
0002CB0C <AmiBlitz3.ab3@16765>   BNE 'l21
0002CB0E <AmiBlitz3.ab3@16766>   MOVE.l a5,a4
0002CB10 <AmiBlitz3.ab3@16767>   SUBQ.l #1,a4
0002CB12 <AmiBlitz3.ab3@16770>     TST.b (a4)
0002CB16 <AmiBlitz3.ab3@16771>     BMI 'l19a
0002CB1A <AmiBlitz3.ab3@16772>     BEQ.s 'l20
0002CB1E <AmiBlitz3.ab3@16773>     CMP.b #$22,(a4)
0002CB22 <AmiBlitz3.ab3@16774>     BEQ.s 'l19
0002CB28 <AmiBlitz3.ab3@16777>     TST.w string1
0002CB2C <AmiBlitz3.ab3@16778>     BNE 'l11
0002CB30 <AmiBlitz3.ab3@16779>     CMP.b #":",(a4)
0002CB34 <AmiBlitz3.ab3@16780>     BEQ.s 'l20
0002CB38 <AmiBlitz3.ab3@16781>     CMP.b #";",(a4)
0002CB3C <AmiBlitz3.ab3@16782>     BEQ.s 'l20
0002CB40 <AmiBlitz3.ab3@16783>     CMP.b #"+",(a4)
0002CB44 <AmiBlitz3.ab3@16784>     BEQ.s 'l21
0002CB48 <AmiBlitz3.ab3@16785>     CMP.b #",",(a4)
0002CB4C <AmiBlitz3.ab3@16786>     BEQ.s 'l20                                             ;was l21
0002CB50 <AmiBlitz3.ab3@16787>     CMP.b #")",(a4)
0002CB54 <AmiBlitz3.ab3@16788>     BEQ.s 'l20                                             ;was l21
0002CB56 <AmiBlitz3.ab3@16791>     ADDQ.l #1,a4
0002CB5A <AmiBlitz3.ab3@16792> BRA.s 'l10
0002CB62 <AmiBlitz3.ab3@16795>   BCHG #0,string1
0002CB66 <AmiBlitz3.ab3@16796> BRA 'l18
0002CB68 <AmiBlitz3.ab3@16799>   ADDQ.l #1,a4
0002CB6A <AmiBlitz3.ab3@16800>   TST.b (a4)
0002CB6E <AmiBlitz3.ab3@16801>   BEQ 'l21
0002CB72 <AmiBlitz3.ab3@16802> BRA 'l11
0002CB74 <AmiBlitz3.ab3@16805>   MOVE.l a5,a4
0002CB76 <AmiBlitz3.ab3@16806>   SUBQ.l #1,a4
0002CB7A <AmiBlitz3.ab3@16809>   CMP.b #$20,-(a4)
0002CB7E <AmiBlitz3.ab3@16810>   BEQ 'll1
0002CB82 <AmiBlitz3.ab3@16811>   CMP.b #"+",(a4)
0002CB86 <AmiBlitz3.ab3@16812>   BEQ 'l21
0002CB8E <AmiBlitz3.ab3@16827>   MOVE.b #2,optistring
0002CB96 <AmiBlitz3.ab3@16830>   CMP.b #2,optistring
0002CB9A <AmiBlitz3.ab3@16831>   BEQ.s 'l100
0002CB9E <AmiBlitz3.ab3@16834>   BSR.w makesbase
0002CBA2 <AmiBlitz3.ab3@16835>   BSR.w pokedata1                                          ;writestringsizespace
0002CBA6 <AmiBlitz3.ab3@16836>   BSR.w pokedata1
0002CBA8 <AmiBlitz3.ab3@16839>   MOVEQ.l #$00,D2
0002CBAE <AmiBlitz3.ab3@16842>     MOVE.l a5,lastsourcepos
0002CBB0 <AmiBlitz3.ab3@16843>     MOVEQ #0,d0
0002CBB2 <AmiBlitz3.ab3@16844>     MOVE.b (a5)+,d0
0002CBB4 <AmiBlitz3.ab3@16845>     TST.w D0
0002CBB8 <AmiBlitz3.ab3@16846>      BEQ.w notqerr
0002CBBC <AmiBlitz3.ab3@16847>     CMP.w #$22,D0                                          ; --- " ---
0002CBC0 <AmiBlitz3.ab3@16848>      BEQ.w JL_0_ADF6
0002CBC4 <AmiBlitz3.ab3@16849>     CMP.b #"\",d0
0002CBC8 <AmiBlitz3.ab3@16850>      BNE 'l1
0002CBCC <AmiBlitz3.ab3@16851>     CMP.b #"\",(a5)
0002CBD0 <AmiBlitz3.ab3@16852>      BNE 'l1
0002CBD6 <AmiBlitz3.ab3@16853>     TST.b newsyntax
0002CBDA <AmiBlitz3.ab3@16854>      BEQ 'l1
0002CBE0 <AmiBlitz3.ab3@16855>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002CBE4 <AmiBlitz3.ab3@16856>     BNE 'l2
0002CBE6 <AmiBlitz3.ab3@16857>     ADDQ #2,a5
0002CBE8 <AmiBlitz3.ab3@16860>     ADDQ.w #1,D2
0002CBEA <AmiBlitz3.ab3@16861>     MOVE.w D0,D1
0002CBEE <AmiBlitz3.ab3@16862>     BSR.w pokedata1b                                        ;writestring
0002CBF2 <AmiBlitz3.ab3@16863> BRA.w writestring
0002CBF8 <AmiBlitz3.ab3@16866>     JSR check_newconstants
0002CBFC <AmiBlitz3.ab3@16867> BRA writestring
0002CC02 <AmiBlitz3.ab3@16870>   NOT instringon
0002CC08 <AmiBlitz3.ab3@16871>   MOVE.w dontwrite,D1
0002CC0C <AmiBlitz3.ab3@16872>   BNE.w JL_0_AE0A
0002CC14 <AmiBlitz3.ab3@16873>   CMP.b #2,optistring
0002CC18 <AmiBlitz3.ab3@16874>   BEQ 'l10
0002CC1E <AmiBlitz3.ab3@16875>     MOVEA.l litdata1,A0
0002CC20 <AmiBlitz3.ab3@16876>     CLR.w (A0)+                                            ;writesize
0002CC22 <AmiBlitz3.ab3@16877>     MOVE.w D2,(A0)
0002CC26 <AmiBlitz3.ab3@16881>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002CC2C <AmiBlitz3.ab3@16882>   ADDQ.l #1,data1
0002CC34 <AmiBlitz3.ab3@16883>   BCLR #$0,data1+3
0002CC36 <AmiBlitz3.ab3@16884>   MOVEQ.l #$07,D2
0002CC3A <AmiBlitz3.ab3@16885> BRA.w get1bytemain
0002CC3E <AmiBlitz3.ab3@16889>   BSR.w makename2
0002CC42 <AmiBlitz3.ab3@16890>   BSR.w findlabel2
0002CC46 <AmiBlitz3.ab3@16891>   BEQ.w JL_0_AE4A
0002CC4A <AmiBlitz3.ab3@16892>   BSR.w addlabelhash
0002CC4E <AmiBlitz3.ab3@16893>   CLR.l $4(A2)
0002CC52 <AmiBlitz3.ab3@16894>   CLR.l $8(A2)
0002CC5A <AmiBlitz3.ab3@16896>   MOVE.w linenumat+2,$10(A2)
0002CC60 <AmiBlitz3.ab3@16897>   MOVE.w linenumat,d0
0002CC62 <AmiBlitz3.ab3@16898>   MOVEQ #0,d1
0002CC66 <AmiBlitz3.ab3@16899>   MOVE.b -1(a2,d7),d1
0002CC6A <AmiBlitz3.ab3@16900>   MOVE.w d0,0(a2,d1)
0002CC6E <AmiBlitz3.ab3@16901> BRA.w JL_0_AE52
0002CC72 <AmiBlitz3.ab3@16904>   TST.l $8(A2)
0002CC76 <AmiBlitz3.ab3@16905>   BNE.w JL_0_AE88
0002CC7C <AmiBlitz3.ab3@16908>   MOVEA.l _execbase,A6
0002CC7E <AmiBlitz3.ab3@16909>   MOVEQ.l #$0C+2,D0
0002CC80 <AmiBlitz3.ab3@16910>   MOVEQ.l #$01,D1
0002CC86 <AmiBlitz3.ab3@16911>   MOVE.l mempool,a0
0002CC8A <AmiBlitz3.ab3@16912>   JSR _AllocPooled(a6)
0002CC8C <AmiBlitz3.ab3@16914>   MOVEA.l D0,A0
0002CC90 <AmiBlitz3.ab3@16915>   MOVE.l $4(A2),(A0)
0002CC94 <AmiBlitz3.ab3@16916>   MOVE.l A0,$4(A2)
0002CC9C <AmiBlitz3.ab3@16917>   MOVE.l destpointer,$4(A0)
0002CCA0 <AmiBlitz3.ab3@16918>   ADDQ.l #2,$4(A0)
0002CCA8 <AmiBlitz3.ab3@16919>   MOVE.w procnum,$8(A0)
0002CCB0 <AmiBlitz3.ab3@16920>   MOVE.w linenumat+2,$A(A0)
0002CCB8 <AmiBlitz3.ab3@16921>   MOVE.w linenumat,$c(a0)
0002CCBA <AmiBlitz3.ab3@16922> RTS
0002CCBE <AmiBlitz3.ab3@16925>   MOVE.l $4(A2),D1
0002CCC2 <AmiBlitz3.ab3@16926>   BTST #$0,D1
0002CCC6 <AmiBlitz3.ab3@16927>    BNE.w illlaberr
0002CCCC <AmiBlitz3.ab3@16928>   MOVE.w procnum,D1
0002CCD0 <AmiBlitz3.ab3@16929>   CMP.w $10(A2),D1
0002CCD4 <AmiBlitz3.ab3@16930>    BNE.w referr
0002CCD6 <AmiBlitz3.ab3@16931> RTS
0002CCD8 <AmiBlitz3.ab3@16935>   MOVE.w D0,-(A7)
0002CCE0 <AmiBlitz3.ab3@16936>   CMP.b #2,optistring
0002CCE4 <AmiBlitz3.ab3@16937>   BEQ 'l10
0002CCEA <AmiBlitz3.ab3@16940>   MOVE.w numtoa0,D1
0002CCEE <AmiBlitz3.ab3@16941>    BSR.w writeword
0002CCF2 <AmiBlitz3.ab3@16942>    BSR.w addoff
0002CCF8 <AmiBlitz3.ab3@16943>   MOVE.l litdata1,D1
0002CCFC <AmiBlitz3.ab3@16944>    BSR.w writelong
0002CD02 <AmiBlitz3.ab3@16945>   MOVE.w pushlen,D1
0002CD06 <AmiBlitz3.ab3@16946>    BSR.w writeword
0002CD0A <AmiBlitz3.ab3@16947>   MOVE.w #$C600,D1
0002CD0E <AmiBlitz3.ab3@16948>    BSR.w Atokejsr
0002CD10 <AmiBlitz3.ab3@16949>   MOVE.w (A7)+,D0
0002CD12 <AmiBlitz3.ab3@16950> RTS
0002CD14 <AmiBlitz3.ab3@16953>   MOVEQ #0,d1
0002CD18 <AmiBlitz3.ab3@16954>   BSR.w pokedata1b
0002CD1E <AmiBlitz3.ab3@16955>   MOVE.l destpointer,a4
0002CD22 <AmiBlitz3.ab3@16956>   MOVE.w #$203c,d1
0002CD28 <AmiBlitz3.ab3@16957>   TST.w mode
0002CD2C <AmiBlitz3.ab3@16958>   BNE 'lm10
0002CD32 <AmiBlitz3.ab3@16959>    ADDQ.w #4,a2offset
0002CD36 <AmiBlitz3.ab3@16960>   MOVE.w #$2f3c,d1
0002CD3C <AmiBlitz3.ab3@16963>   TST.w mode
0002CD40 <AmiBlitz3.ab3@16964>   BEQ 'lm3
0002CD46 <AmiBlitz3.ab3@16965>   MOVE.w regnum,D0
0002CD48 <AmiBlitz3.ab3@16966>   LSL.w #8,D0
0002CD4A <AmiBlitz3.ab3@16967>   LSL.w #1,D0
0002CD4C <AmiBlitz3.ab3@16968>   OR.w d0,d1
0002CD50 <AmiBlitz3.ab3@16969>   BSR writeword
0002CD54 <AmiBlitz3.ab3@16970>   BSR.w addoff
0002CD5A <AmiBlitz3.ab3@16971>   MOVE.l litdata1,D1
0002CD5E <AmiBlitz3.ab3@16972>   BSR.w writelong
0002CD66 <AmiBlitz3.ab3@16973>   CMP.w #3,mode
0002CD6A <AmiBlitz3.ab3@16974>   BEQ 'l30
0002CD70 <AmiBlitz3.ab3@16975>    ADDQ.w #4,a2offset
0002CD74 <AmiBlitz3.ab3@16976>   MOVE.w #$4878,D1
0002CD78 <AmiBlitz3.ab3@16977>   BSR.w writeword
0002CD7A <AmiBlitz3.ab3@16978>   MOVE.l d2,d1
0002CD7E <AmiBlitz3.ab3@16979>   BSR writeword
0002CD80 <AmiBlitz3.ab3@16982>   MOVE.w (A7)+,D0
0002CD82 <AmiBlitz3.ab3@16983> RTS
0002CD88 <AmiBlitz3.ab3@16986>   MOVE.l #$3f3c0007,d1
0002CD8C <AmiBlitz3.ab3@16987>   BSR writelong
0002CD92 <AmiBlitz3.ab3@16988>   MOVE.w regnum,D1
0002CD94 <AmiBlitz3.ab3@16989>   LSL.w #8,D1
0002CD96 <AmiBlitz3.ab3@16990>   LSL.w #1,D1
0002CD9A <AmiBlitz3.ab3@16991>   ORI.w #$2f3c,d1
0002CD9E <AmiBlitz3.ab3@16992>   BSR writeword
0002CDA4 <AmiBlitz3.ab3@16993>    ADDQ.w #4,a2offset
0002CDA6 <AmiBlitz3.ab3@16994>   MOVE.l d2,d1
0002CDAA <AmiBlitz3.ab3@16995>   BSR writelong
0002CDAE <AmiBlitz3.ab3@16996>   MOVE.w #$2f3c,d1
0002CDB2 <AmiBlitz3.ab3@16997>   BSR writeword
0002CDB6 <AmiBlitz3.ab3@16998>   BSR.w addoff
0002CDBC <AmiBlitz3.ab3@16999>   MOVE.l litdata1,D1
0002CDC0 <AmiBlitz3.ab3@17000>   BSR.w writelong
0002CDC2 <AmiBlitz3.ab3@17001>   MOVE.w (A7)+,D0
0002CDC4 <AmiBlitz3.ab3@17002> RTS
0002CDC8 <AmiBlitz3.ab3@17006>   BSR.w get1bytemain
0002CDCC <AmiBlitz3.ab3@17007>    BSR.w JL_0_AE22
0002CDD2 <AmiBlitz3.ab3@17008>   MOVE.w regnum,D1
0002CDD4 <AmiBlitz3.ab3@17009>   LSL.w #8,D1
0002CDD6 <AmiBlitz3.ab3@17010>   LSL.w #1,D1
0002CDDA <AmiBlitz3.ab3@17011>   ORI.w #$203C,D1
0002CDDE <AmiBlitz3.ab3@17012>    BSR.w writeword
0002CDE2 <AmiBlitz3.ab3@17013>    BSR.w addoff
0002CDE6 <AmiBlitz3.ab3@17014>   MOVE.l $8(A2),D1
0002CDEA <AmiBlitz3.ab3@17015>    BSR.w writelong
0002CDEC <AmiBlitz3.ab3@17016>   MOVEQ.l #$03,D2
0002CDF2 <AmiBlitz3.ab3@17017>   CLR.b peekaddrsize
0002CDF6 <AmiBlitz3.ab3@17018> BRA.w reget
0002CDF8 <AmiBlitz3.ab3@17021>   MOVEQ.l #$00,D3
0002CDFC <AmiBlitz3.ab3@17024>   BSR.w get1bytemain
0002CE00 <AmiBlitz3.ab3@17025>    BEQ.w syntaxerr
0002CE04 <AmiBlitz3.ab3@17026>   CMP.w #$22,D0
0002CE08 <AmiBlitz3.ab3@17027>    BEQ.w JL_0_AF1A
0002CE0A <AmiBlitz3.ab3@17028>   LSL.l #8,D3
0002CE0C <AmiBlitz3.ab3@17029>   MOVE.b D0,D3
0002CE10 <AmiBlitz3.ab3@17030> BRA.w JL_0_AF02
0002CE14 <AmiBlitz3.ab3@17033>   BSR.w get1bytemain
0002CE18 <AmiBlitz3.ab3@17034> BRA.w JL_0_B46E
0002CE1A <AmiBlitz3.ab3@17037>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002CE1E <AmiBlitz3.ab3@17038>    BSR.w makename2
0002CE22 <AmiBlitz3.ab3@17039>    BSR.w findlabel2
0002CE26 <AmiBlitz3.ab3@17040>    BEQ.w 'l10
0002CE2C <AmiBlitz3.ab3@17041>    LEA ptr_parameterstore,a0
0002CE32 <AmiBlitz3.ab3@17042>    CMP.b #"@",-1(a0,d2.w)
0002CE36 <AmiBlitz3.ab3@17043>    BNE cnferr
0002CE3A <AmiBlitz3.ab3@17044>    CLR.b -1(a0,d2.w)
0002CE3C <AmiBlitz3.ab3@17045>    SUBQ.l #1,d2
0002CE42 <AmiBlitz3.ab3@17046>    LEA varbase,a2
0002CE46 <AmiBlitz3.ab3@17047>    BSR findvariable
0002CE4A <AmiBlitz3.ab3@17048>    BNE cnferr
0002CE4E <AmiBlitz3.ab3@17049>    CMP.b #"\",d0
0002CE52 <AmiBlitz3.ab3@17050>    BNE 'l6
0002CE58 <AmiBlitz3.ab3@17051>    ADDQ #1,lastsourcepos
0002CE5C <AmiBlitz3.ab3@17052>    MOVE.l $a(a2),a2
0002CE5E <AmiBlitz3.ab3@17053>    ADDQ.l #4,a2
0002CE62 <AmiBlitz3.ab3@17054>    BSR.w makename2
0002CE66 <AmiBlitz3.ab3@17055>    BSR findvariable2
0002CE6A <AmiBlitz3.ab3@17056>    BNE cnferr
0002CE6E <AmiBlitz3.ab3@17057> BRA.s 'l6                                                  ;???
0002CE72 <AmiBlitz3.ab3@17060>    MOVE.w $4(a2),d3
0002CE74 <AmiBlitz3.ab3@17061>    EXT.l d3
0002CE78 <AmiBlitz3.ab3@17062> BRA JL_0_AF46
0002CE7C <AmiBlitz3.ab3@17065>   MOVE.l $8(A2),D3
0002CE84 <AmiBlitz3.ab3@17066>   CMPI.l #$1,$4(A2)
0002CE88 <AmiBlitz3.ab3@17067>    BEQ.w JL_0_AF46
0002CE8E <AmiBlitz3.ab3@17068>   NOT.w asmtype
0002CE90 <AmiBlitz3.ab3@17071>   MOVE.w (A7)+,D2
0002CE94 <AmiBlitz3.ab3@17072> BRA.w JL_0_B46E
0002CE96 <AmiBlitz3.ab3@17076>   MOVE.w D2,-(A7)
0002CE9A <AmiBlitz3.ab3@17077>    BSR.w getparameter
0002CE9E <AmiBlitz3.ab3@17078>   CMP.w #"{",D0                                          ;test if var = function{}
0002CEA2 <AmiBlitz3.ab3@17079>    BEQ.w isfunction
0002CEA6 <AmiBlitz3.ab3@17080>    BSR.w JL_0_8E3C
0002CEAA <AmiBlitz3.ab3@17082>    BSR.w calcvar                                         ;getvaroffset+type
0002CEAE <AmiBlitz3.ab3@17083>    BSR.w JL_0_B150
0002CEB4 <AmiBlitz3.ab3@17084>    MOVE.l a2,rightsidetype
0002CEBA <AmiBlitz3.ab3@17095>    TST.b typecheck
0002CEBE <AmiBlitz3.ab3@17096>    BEQ JL_0_AF66
0002CEC8 <AmiBlitz3.ab3@17097>    CMP.l #$da01,lasttoken                                  ;poke
0002CECC <AmiBlitz3.ab3@17098>    BEQ 'l1
0002CED6 <AmiBlitz3.ab3@17099>    CMP.l #$da02,lasttoken                                  ;peek
0002CEDA <AmiBlitz3.ab3@17100>    BNE 'l2
0002CEE2 <AmiBlitz3.ab3@17103>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002CEE6 <AmiBlitz3.ab3@17104>    BNE JL_0_AF66
0002CEEC <AmiBlitz3.ab3@17105>    MOVE.b d2,peekaddrsize
0002CEF0 <AmiBlitz3.ab3@17106>    BRA JL_0_AF66
0002CEF6 <AmiBlitz3.ab3@17109>   CLR.b peekaddrsize
0002CEFA <AmiBlitz3.ab3@17112>   CMP.w #$1,D2
0002CEFE <AmiBlitz3.ab3@17113>    BNE.w JL_0_AF7C
0002CF04 <AmiBlitz3.ab3@17114>   MOVE.w regnum,D1
0002CF08 <AmiBlitz3.ab3@17115>   ORI.w #$4880,D1
0002CF0C <AmiBlitz3.ab3@17116>    BSR.w writeword
0002CF0E <AmiBlitz3.ab3@17119>   MOVE.w (A7)+,D3
0002CF12 <AmiBlitz3.ab3@17120>    BEQ.w JL_0_AF9E
0002CF18 <AmiBlitz3.ab3@17121>    MOVE.l lastinstructionaddr,a0
0002CF1C <AmiBlitz3.ab3@17122>   CMP.w #$3,D3
0002CF20 <AmiBlitz3.ab3@17123>    BNE.w JL_0_AF92
0002CF24 <AmiBlitz3.ab3@17124>   CMP.w #$4,D2
0002CF28 <AmiBlitz3.ab3@17125>    BEQ.w JL_0_AF98
0002CF2A <AmiBlitz3.ab3@17128>   CMP.w D2,D3
0002CF2E <AmiBlitz3.ab3@17129>    BLS.w JL_0_AF9E
0002CF30 <AmiBlitz3.ab3@17132>   EXG.l D2,D3
0002CF32 <AmiBlitz3.ab3@17133>   MOVE.l a0,-(a7)
0002CF38 <AmiBlitz3.ab3@17134>   TST.b typecheck
0002CF3C <AmiBlitz3.ab3@17135>   BEQ 'ok
0002CF42 <AmiBlitz3.ab3@17136>   TST.b notypecheck
0002CF46 <AmiBlitz3.ab3@17137>   BNE 'ok
0002CF4C <AmiBlitz3.ab3@17138>   MOVE.l leftsidetype,a0
0002CF56 <AmiBlitz3.ab3@17139>   CMP.l #0,leftsidetype
0002CF5A <AmiBlitz3.ab3@17140>   BEQ 'ok
0002CF62 <AmiBlitz3.ab3@17141>   CMP.l #$100,4(a0)
0002CF66 <AmiBlitz3.ab3@17142>   BLE 'ok
0002CF6A <AmiBlitz3.ab3@17143>   CMP.b #3,d3
0002CF6E <AmiBlitz3.ab3@17144>   BEQ 'ok
0002CF72 <AmiBlitz3.ab3@17145>   CMP.b #7,d3
0002CF76 <AmiBlitz3.ab3@17146>   BEQ 'ok
0002CF7C <AmiBlitz3.ab3@17147>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002CF7E <AmiBlitz3.ab3@17149>   MOVE.l (a7)+,a0
0002CF82 <AmiBlitz3.ab3@17150>   BSR.w writeconvertcode         ;called from var assign
0002CF86 <AmiBlitz3.ab3@17153> BRA.w reget
0002CF88 <AmiBlitz3.ab3@17156>   MOVEQ.l #$00,D3
0002CF8E <AmiBlitz3.ab3@17157>   MOVE.w regnum,D1
0002CF92 <AmiBlitz3.ab3@17158>    BEQ.w JL_0_AFC8
0002CF94 <AmiBlitz3.ab3@17159>   SUBQ.w #1,D1
0002CF96 <AmiBlitz3.ab3@17162>      LSR.l #1,D3
0002CF9A <AmiBlitz3.ab3@17163>      BSET #$F,D3
0002CF9E <AmiBlitz3.ab3@17164>   DBF D1,JL_0_AFB0b
0002CFA4 <AmiBlitz3.ab3@17166>    TST.b fpu
0002CFA8 <AmiBlitz3.ab3@17167>    BEQ 'l1
0002CFAE <AmiBlitz3.ab3@17168>    ADDQ.l #2,stacktrack                                    ;intern command
0002CFB0 <AmiBlitz3.ab3@17169>     MOVE.l a0,-(a7)
0002CFB6 <AmiBlitz3.ab3@17170>     MOVE.l stacktrack,d1
0002CFBC <AmiBlitz3.ab3@17171>     LEA fpustackbase,a0
0002CFC0 <AmiBlitz3.ab3@17172>     CLR.w 0(a0,d1)
0002CFC6 <AmiBlitz3.ab3@17173>     CLR.w regmask
0002CFC8 <AmiBlitz3.ab3@17174>     MOVE.l (a7)+,a0
0002CFCC <AmiBlitz3.ab3@17177>   MOVE.w #$48E7,D1
0002CFD0 <AmiBlitz3.ab3@17178>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CFD2 <AmiBlitz3.ab3@17179>   MOVE.w D3,D1
0002CFD6 <AmiBlitz3.ab3@17180> BRA.w writeword
0002CFD8 <AmiBlitz3.ab3@17185>   MOVEQ.l #$00,D3
0002CFDE <AmiBlitz3.ab3@17186>   MOVE.w regnum,D1
0002CFE2 <AmiBlitz3.ab3@17187>    BEQ.w JL_0_AFC8
0002CFE4 <AmiBlitz3.ab3@17188>   SUBQ.w #1,D1
0002CFE6 <AmiBlitz3.ab3@17191>     LSR.l #1,D3
0002CFEA <AmiBlitz3.ab3@17192>     BSET #$F,D3
0002CFEE <AmiBlitz3.ab3@17193>   DBF D1,JL_0_AFB0
0002CFF4 <AmiBlitz3.ab3@17195>    TST.b fpu
0002CFF8 <AmiBlitz3.ab3@17196>    BEQ 'l1
0002CFFE <AmiBlitz3.ab3@17197>    ADDQ.l #2,stacktrack                                    ;intern command
0002D000 <AmiBlitz3.ab3@17198>     MOVE.l a0,-(a7)
0002D006 <AmiBlitz3.ab3@17199>     MOVE.l stacktrack,d1
0002D00C <AmiBlitz3.ab3@17200>     LEA fpustackbase,a0
0002D010 <AmiBlitz3.ab3@17201>     CLR.w 0(a0,d1)
0002D014 <AmiBlitz3.ab3@17202>    CMP.b #5,(a3)                                           ;result float ?
0002D018 <AmiBlitz3.ab3@17203>     BNE 'nofpu
0002D022 <AmiBlitz3.ab3@17205>     MOVE.w regnum,regnumfunc
0002D028 <AmiBlitz3.ab3@17208>   CLR.w regmask
0002D02A <AmiBlitz3.ab3@17209>     MOVE.l (a7)+,a0
0002D02E <AmiBlitz3.ab3@17212>   MOVE.w #$48E7,D1
0002D032 <AmiBlitz3.ab3@17213>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002D034 <AmiBlitz3.ab3@17214>   MOVE.w D3,D1
0002D038 <AmiBlitz3.ab3@17215> BRA.w writeword
0002D03A <AmiBlitz3.ab3@17218> RTS
0002D03C <AmiBlitz3.ab3@17222>   MOVE.l D1,-(A7)
0002D040 <AmiBlitz3.ab3@17223>   MOVE.w #$4EB9,D1
0002D044 <AmiBlitz3.ab3@17224>    BSR.w writeword
0002D048 <AmiBlitz3.ab3@17225>    BSR.w addoff
0002D04A <AmiBlitz3.ab3@17226>   MOVE.l (A7)+,D1
0002D04E <AmiBlitz3.ab3@17227> BRA.w writelong
0002D052 <AmiBlitz3.ab3@17231>    BSR.w findproc                                          ;write function call
0002D056 <AmiBlitz3.ab3@17232>    BEQ 'l1
0002D05C <AmiBlitz3.ab3@17233>    TST.l unusedfunc
0002D060 <AmiBlitz3.ab3@17234>    BEQ noprocerr
0002D066 <AmiBlitz3.ab3@17236>    JSR gotoendsource
0002D06E <AmiBlitz3.ab3@17239>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002D074 <AmiBlitz3.ab3@17240>   TST.l typetocast
0002D078 <AmiBlitz3.ab3@17241>   BEQ 'nocast
0002D082 <AmiBlitz3.ab3@17242>   MOVE.l typetocast,rightsidetype
0002D088 <AmiBlitz3.ab3@17243>   CLR.l typetocast
0002D08A <AmiBlitz3.ab3@17244>   MOVE.l a1,-(a7)
0002D090 <AmiBlitz3.ab3@17245>   MOVE.l rightsidetype,a1
0002D096 <AmiBlitz3.ab3@17246>   CMP.l leftsidetype,a1
0002D09A <AmiBlitz3.ab3@17247>   BEQ 'ok
0002D0A0 <AmiBlitz3.ab3@17248>   JMP errorconvertreturntype2
0002D0A2 <AmiBlitz3.ab3@17249> 'ok  MOVE.l (a7)+,a1
0002D0A4 <AmiBlitz3.ab3@17251>   MOVEQ.l #$00,D1
0002D0A8 <AmiBlitz3.ab3@17252>   MOVE.b $5(A2),D1
0002D0AE <AmiBlitz3.ab3@17253>   MOVE.b d1,retmode
0002D0B2 <AmiBlitz3.ab3@17254>    BMI.w illprocerr
0002D0B8 <AmiBlitz3.ab3@17255>    MOVE.b #1,isfunc(a2)
0002D0BA <AmiBlitz3.ab3@17256>   MOVE.w D1,-(A7)
0002D0BC <AmiBlitz3.ab3@17257>   MOVEQ.l #$00,D1
0002D0C0 <AmiBlitz3.ab3@17258>   MOVE.b $4(A2),D1
0002D0C2 <AmiBlitz3.ab3@17259>   LSR.w #4,D1
0002D0C6 <AmiBlitz3.ab3@17260>    BEQ.w JL_0_B006
0002D0C8 <AmiBlitz3.ab3@17261>   LSL.w #2,D1
0002D0CE <AmiBlitz3.ab3@17262>   SUB.w D1,a2offset
0002D0D2 <AmiBlitz3.ab3@17265>   CMPI.w #$7,(A7)
0002D0D6 <AmiBlitz3.ab3@17266>    BNE.b JL_0_B014
0002D0D8 <AmiBlitz3.ab3@17267>   MOVE.l A2,-(A7)
0002D0DC <AmiBlitz3.ab3@17268>    BSR.w makesbase
0002D0DE <AmiBlitz3.ab3@17269>   MOVEA.l (A7)+,A2
0002D0E4 <AmiBlitz3.ab3@17272>   MOVE.w sbasegot,-(A7)
0002D0E8 <AmiBlitz3.ab3@17273>    BEQ.b JL_0_B020
0002D0EC <AmiBlitz3.ab3@17274>    BSR.w dopusha3
0002D0F0 <AmiBlitz3.ab3@17277>   BSR.w JL_0_AFA2func
0002D0F2 <AmiBlitz3.ab3@17278>   MOVE.w D3,-(A7)
0002D0F6 <AmiBlitz3.ab3@17279>   MOVE.l $E(A2),D1
0002D0FA <AmiBlitz3.ab3@17280>   TST.b $20(a2)                                            ;increase if morepar
0002D0FE <AmiBlitz3.ab3@17281>   BNE 'no0par
0002D100 <AmiBlitz3.ab3@17282>   MOVE.l a5,a4
0002D104 <AmiBlitz3.ab3@17285>   CMP.b #$20,(a4)+
0002D108 <AmiBlitz3.ab3@17286>   BEQ 'l1
0002D10E <AmiBlitz3.ab3@17287>   CMP.b #"}",-1(a4)
0002D112 <AmiBlitz3.ab3@17288>   BNE  'no0par
0002D114 <AmiBlitz3.ab3@17289>   MOVEQ #0,d0
0002D118 <AmiBlitz3.ab3@17292>   LEA $16(A2),A1
0002D11A <AmiBlitz3.ab3@17295>   MOVE.l d1,-(a7)
0002D11C <AmiBlitz3.ab3@17296>   MOVE.b (a1),d2
0002D11E <AmiBlitz3.ab3@17297>   MOVE.l d0,d1
0002D122 <AmiBlitz3.ab3@17298>   CMP.w #4,d2
0002D126 <AmiBlitz3.ab3@17299>   BNE 'l1b
0002D12C <AmiBlitz3.ab3@17300>   ADD.l #$203c,d1
0002D130 <AmiBlitz3.ab3@17301>   BSR writeword
0002D136 <AmiBlitz3.ab3@17302>   MOVE.l #$ffff0000,d1
0002D13A <AmiBlitz3.ab3@17303>   BSR writelong
0002D13E <AmiBlitz3.ab3@17304> BRA 'l2b
0002D144 <AmiBlitz3.ab3@17307>    TST.b fpu
0002D148 <AmiBlitz3.ab3@17308>    BNE 'l1c
0002D14C <AmiBlitz3.ab3@17309>    CMP.w #5,d2
0002D150 <AmiBlitz3.ab3@17310>    BNE 'l1c
0002D156 <AmiBlitz3.ab3@17311>    ADD.l #$203c,d1
0002D15A <AmiBlitz3.ab3@17312>    BSR writeword
0002D160 <AmiBlitz3.ab3@17313>    MOVE.l #$800000c1,d1
0002D164 <AmiBlitz3.ab3@17314>    BSR writelong
0002D168 <AmiBlitz3.ab3@17315> BRA 'l2b
0002D16E <AmiBlitz3.ab3@17318>   ADD.l #$70ff,d1
0002D172 <AmiBlitz3.ab3@17319>   BSR writeword
0002D176 <AmiBlitz3.ab3@17320>   CMP.w #7,d2
0002D17A <AmiBlitz3.ab3@17321>   BNE 'l1d
0002D180 <AmiBlitz3.ab3@17322>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002D184 <AmiBlitz3.ab3@17323>   BSR writelong
0002D186 <AmiBlitz3.ab3@17324>   MOVEQ #0,d1
0002D18A <AmiBlitz3.ab3@17325>   BSR writeword
0002D190 <AmiBlitz3.ab3@17326>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002D194 <AmiBlitz3.ab3@17327>   BSR writelong
0002D196 <AmiBlitz3.ab3@17328>   MOVEQ #0,d1
0002D19A <AmiBlitz3.ab3@17329>   BSR writeword
0002D1A0 <AmiBlitz3.ab3@17331> 'l1d  MOVE.l #$f23c5000,d1
0002D1A2 <AmiBlitz3.ab3@17332>   MOVE.l d0,d2
0002D1A4 <AmiBlitz3.ab3@17333>   ASR.l #2,d2
0002D1A6 <AmiBlitz3.ab3@17334>   ADD.l d2,d1
0002D1AA <AmiBlitz3.ab3@17335>   BSR writelong
0002D1AE <AmiBlitz3.ab3@17336>   MOVE.w #$ffff,d1
0002D1B2 <AmiBlitz3.ab3@17337>   BSR writeword
0002D1B4 <AmiBlitz3.ab3@17341>   MOVE.l (a7)+,d1
0002D1B6 <AmiBlitz3.ab3@17342>      ADDQ.l #1,a1
0002D1BC <AmiBlitz3.ab3@17343>      ADD.l #$0200,d0
0002D1C2 <AmiBlitz3.ab3@17344>      CMP.l #$0e00,d0
0002D1C6 <AmiBlitz3.ab3@17345>      BEQ syntaxerr
0002D1C8 <AmiBlitz3.ab3@17346>      TST.b (a1)
0002D1CC <AmiBlitz3.ab3@17347>      BNE 'again
0002D1D0 <AmiBlitz3.ab3@17348> BRA 'p1
0002D1D4 <AmiBlitz3.ab3@17351>   TST.b $4(A2)
0002D1D8 <AmiBlitz3.ab3@17352>    BNE.w JL_0_B03E
0002D1DC <AmiBlitz3.ab3@17355>   BSR.w JL_0_AFCA
0002D1E0 <AmiBlitz3.ab3@17356>    BSR.w get1bytemain
0002D1E4 <AmiBlitz3.ab3@17357> BRA.w JL_0_B06C
0002D1EA <AmiBlitz3.ab3@17361>   MOVE.w regnum,-(A7)
0002D1F4 <AmiBlitz3.ab3@17362>   MOVE.w regnum,regnumfunc
0002D1F6 <AmiBlitz3.ab3@17365>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002D1FE <AmiBlitz3.ab3@17366>   MOVE.b #1,funccall
0002D200 <AmiBlitz3.ab3@17367>   MOVEQ.l #$00,D0
0002D204 <AmiBlitz3.ab3@17368>   MOVE.b $4(A2),D0
0002D20E <AmiBlitz3.ab3@17369>   MOVE.w a2offset,a2offset2
0002D216 <AmiBlitz3.ab3@17370>   MOVE.b 5(a2),retmode
0002D21C <AmiBlitz3.ab3@17371>   MOVE.l a2,currentfunccall
0002D220 <AmiBlitz3.ab3@17372>   LEA $16(A2),A2
0002D226 <AmiBlitz3.ab3@17373>   CLR.w regnum
0002D22C <AmiBlitz3.ab3@17374>   CLR.w regmask
0002D232 <AmiBlitz3.ab3@17375>   MOVE.b isconstantvalue,-(a7)
0002D238 <AmiBlitz3.ab3@17376>   MOVE.b funcparloop,-(a7)
0002D240 <AmiBlitz3.ab3@17377>   MOVE.b #1,funcparloop
0002D246 <AmiBlitz3.ab3@17378>   MOVE.l rightsidetype,-(a7)
0002D24C <AmiBlitz3.ab3@17379>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002D252 <AmiBlitz3.ab3@17380>   MOVE.b blitzparloop,-(a7)
0002D258 <AmiBlitz3.ab3@17381>   CLR.b blitzparloop
0002D25E <AmiBlitz3.ab3@17382>   JSR fetchpees2
0002D264 <AmiBlitz3.ab3@17383>   MOVE.b (a7)+,blitzparloop
0002D26A <AmiBlitz3.ab3@17384>   MOVE.l (a7)+,leftsidetype
0002D270 <AmiBlitz3.ab3@17385>   MOVE.l (a7)+,rightsidetype
0002D276 <AmiBlitz3.ab3@17386>   MOVE.b (a7)+,funcparloop
0002D27C <AmiBlitz3.ab3@17387>   MOVE.b (a7)+,isconstantvalue
0002D282 <AmiBlitz3.ab3@17388>   JSR chkstak
0002D284 <AmiBlitz3.ab3@17389>   MOVE.l (A7)+,D1
0002D288 <AmiBlitz3.ab3@17405>    BTST #0,d1
0002D28C <AmiBlitz3.ab3@17406>    BNE intern1
0002D290 <AmiBlitz3.ab3@17407>    BSR.w JL_0_AFCA
0002D296 <AmiBlitz3.ab3@17429>   MOVE.w (A7)+,regnum
0002D29A <AmiBlitz3.ab3@17432>   CMP.w #"}",D0
0002D29E <AmiBlitz3.ab3@17433>    BNE.w errorbracketmiss2
0002D2A0 <AmiBlitz3.ab3@17434>    MOVEQ #0,d1                                            ; end of function call pars
0002D2A6 <AmiBlitz3.ab3@17435>   MOVE.w regnum,D1
0002D2AA <AmiBlitz3.ab3@17436>    BEQ.w JL_0_B08A
0002D2B0 <AmiBlitz3.ab3@17437>    TST.b fpu
0002D2B4 <AmiBlitz3.ab3@17438>    BEQ 'old
0002D2BC <AmiBlitz3.ab3@17439>    CMP.b #5,retmode
0002D2C0 <AmiBlitz3.ab3@17440>    BNE 'old
0002D2C2 <AmiBlitz3.ab3@17441>    ASL.l #7,d1
0002D2C8 <AmiBlitz3.ab3@17442>    OR.l #$f2000000,d1
0002D2CC <AmiBlitz3.ab3@17443>    BSR writelong
0002D2D0 <AmiBlitz3.ab3@17444> BRA JL_0_B08A
0002D2D2 <AmiBlitz3.ab3@17446>  'old  LSL.w #8,D1
0002D2D4 <AmiBlitz3.ab3@17447>   LSL.w #1,D1
0002D2D8 <AmiBlitz3.ab3@17448>   ORI.w #$2000,D1
0002D2DC <AmiBlitz3.ab3@17449>    BSR.w writeword
0002D2DE <AmiBlitz3.ab3@17452>    MOVE.w (A7)+,D3
0002D2E2 <AmiBlitz3.ab3@17453>    BEQ.w JL_0_B0A8
0002D2E8 <AmiBlitz3.ab3@17454>    TST.b fpu
0002D2EC <AmiBlitz3.ab3@17455>    BEQ 'old
0002D2EE <AmiBlitz3.ab3@17456>    MOVE.l d0,-(a7)
0002D2F2 <AmiBlitz3.ab3@17457>    MOVE.w #8,d0
0002D2F4 <AmiBlitz3.ab3@17458>    MOVE.l a0,-(a7)
0002D2FA <AmiBlitz3.ab3@17459>    MOVE.l stacktrack,d1
0002D300 <AmiBlitz3.ab3@17460>    LEA fpustackbase,a0
0002D308 <AmiBlitz3.ab3@17461>    MOVE.w 0(a0,d1),regmask
0002D30A <AmiBlitz3.ab3@17462>    MOVE.l (a7)+,a0
0002D30E <AmiBlitz3.ab3@17465>   BEQ 'ready
0002D314 <AmiBlitz3.ab3@17466>    BTST d0,regmask
0002D318 <AmiBlitz3.ab3@17467>    BEQ 'noa7
0002D31A <AmiBlitz3.ab3@17468>    MOVEQ #0,d1
0002D31C <AmiBlitz3.ab3@17469>    MOVE.w d0,d1
0002D31E <AmiBlitz3.ab3@17470>    SUBQ.w #1,d1
0002D320 <AmiBlitz3.ab3@17471>    ASL #7,d1
0002D326 <AmiBlitz3.ab3@17473>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002D32A <AmiBlitz3.ab3@17474>    BSR writelong
0002D330 <AmiBlitz3.ab3@17475>    SUBQ.l #2,stacktrack
0002D332 <AmiBlitz3.ab3@17478>    SUBQ.w #1,d0
0002D336 <AmiBlitz3.ab3@17479>    BNE 'loop
0002D33C <AmiBlitz3.ab3@17482>   SUBQ.l #2,stacktrack                                     ;integer sub
0002D33E <AmiBlitz3.ab3@17483>   MOVE.l (a7)+,d0
0002D342 <AmiBlitz3.ab3@17486>   MOVE.w #$4CDF,D1
0002D346 <AmiBlitz3.ab3@17487>    BSR.w writeword
0002D348 <AmiBlitz3.ab3@17488>   MOVEQ.l #$00,D1
0002D34A <AmiBlitz3.ab3@17489>   MOVEQ.l #$0F,D4
0002D34C <AmiBlitz3.ab3@17492>     LSL.w #1,D3
0002D34E <AmiBlitz3.ab3@17493>     ROXR.w #1,D1
0002D352 <AmiBlitz3.ab3@17494>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002D356 <AmiBlitz3.ab3@17496>     BSR.w writeword
0002D35C <AmiBlitz3.ab3@17497>    CLR.w regnumfunc
0002D35E <AmiBlitz3.ab3@17500>   MOVE.w (A7)+,D1
0002D362 <AmiBlitz3.ab3@17501>    BEQ.b JL_0_B0D2
0002D366 <AmiBlitz3.ab3@17502>   CMPI.w #$7,(A7)
0002D36A <AmiBlitz3.ab3@17503>    BEQ.b JL_0_B0C4
0002D370 <AmiBlitz3.ab3@17504>   LEA geta3,A0
0002D376 <AmiBlitz3.ab3@17505>   LEA numtoa0,A1
0002D37A <AmiBlitz3.ab3@17506>    BSR.w pokecode
0002D37E <AmiBlitz3.ab3@17507> BRA.b JL_0_B0CE
0002D384 <AmiBlitz3.ab3@17510>   MOVE.w deca3,D1
0002D388 <AmiBlitz3.ab3@17511>    BSR.w writeword
0002D38C <AmiBlitz3.ab3@17514>   BSR.w dopulla3                                           ;fix up string base
0002D38E <AmiBlitz3.ab3@17517>   MOVE.w (A7)+,D2                                          ;what it returns!
0002D392 <AmiBlitz3.ab3@17518>   CMP.w #$7,D2
0002D396 <AmiBlitz3.ab3@17519>    BNE.w JL_0_B0EC
0002D39C <AmiBlitz3.ab3@17520>   MOVE.w putstlen,D1
0002D3A2 <AmiBlitz3.ab3@17521>   OR.w regnum,D1
0002D3A6 <AmiBlitz3.ab3@17522>    BSR.w writeword
0002D3AA <AmiBlitz3.ab3@17525>   BSR.w get1bytemain
0002D3AE <AmiBlitz3.ab3@17526> BRA.w JL_0_AF66
0002D3B0 <AmiBlitz3.ab3@17530> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002D3B8 <AmiBlitz3.ab3@17535>   CMP.b #2,optistring
0002D3BC <AmiBlitz3.ab3@17536>   BEQ fs2
0002D3C0 <AmiBlitz3.ab3@17537>   BSR.w makesbase                                          ;writestringvariable
0002D3C4 <AmiBlitz3.ab3@17538>   BTST #$F,D2
0002D3C8 <AmiBlitz3.ab3@17539>    BNE.w JL_0_B112
0002D3CE <AmiBlitz3.ab3@17540>   MOVE.w D3,leaa5d3a2+2
0002D3D4 <AmiBlitz3.ab3@17541>   MOVE.l leaa5d3a2,D1
0002D3D8 <AmiBlitz3.ab3@17542>    BSR.w pokela5s
0002D3DE <AmiBlitz3.ab3@17545>   MOVE.w regnum,D1
0002D3E0 <AmiBlitz3.ab3@17546>   LSL.w #8,D1
0002D3E2 <AmiBlitz3.ab3@17547>   LSL.w #1,D1
0002D3E6 <AmiBlitz3.ab3@17548>   ORI.w #$7000,D1
0002D3EC <AmiBlitz3.ab3@17549>   LEA stvarget2,A0
0002D3EE <AmiBlitz3.ab3@17550>   MOVE.w D1,(A0)
0002D3F4 <AmiBlitz3.ab3@17551>   MOVE.w regnum,D1
0002D3FA <AmiBlitz3.ab3@17552>   ANDI.w #$FFF8,$2(A0)
0002D3FE <AmiBlitz3.ab3@17553>   OR.w D1,$2(A0)
0002D404 <AmiBlitz3.ab3@17554>   LEA stvarget2f,A1
0002D408 <AmiBlitz3.ab3@17555>    BSR.w pokecode
0002D40C <AmiBlitz3.ab3@17556>   MOVE.w #$C600,D1
0002D410 <AmiBlitz3.ab3@17557>    BSR.w Atokejsr
0002D412 <AmiBlitz3.ab3@17558>   MOVEQ.l #$07,D2
0002D416 <AmiBlitz3.ab3@17559> BRA.w reget
0002D41C <AmiBlitz3.ab3@17562>      TST.w stackpar
0002D420 <AmiBlitz3.ab3@17563>      BMI 'l10
0002D426 <AmiBlitz3.ab3@17564>      MOVE.l #$3f3c0007,d1
0002D42C <AmiBlitz3.ab3@17565>      ADDQ.w #2,a2offset
0002D430 <AmiBlitz3.ab3@17566>      BSR writelong
0002D434 <AmiBlitz3.ab3@17569>   MOVE.w #$4878,d1
0002D43A <AmiBlitz3.ab3@17570>      CLR.w stackpar
0002D43E <AmiBlitz3.ab3@17571>      BSR writeword
0002D442 <AmiBlitz3.ab3@17572>      MOVE.w #$0,d1
0002D446 <AmiBlitz3.ab3@17573>      BSR writeword
0002D44A <AmiBlitz3.ab3@17574>      MOVE.w #$246d,d1
0002D44E <AmiBlitz3.ab3@17575>      BSR writeword
0002D450 <AmiBlitz3.ab3@17576>      MOVE.w d3,d1
0002D454 <AmiBlitz3.ab3@17577>      BSR writeword
0002D45A <AmiBlitz3.ab3@17578>      MOVE.l #$4a926704,d1
0002D45E <AmiBlitz3.ab3@17579>      BSR writelong
0002D464 <AmiBlitz3.ab3@17580>      MOVE.l #$2eaafffc,d1
0002D468 <AmiBlitz3.ab3@17581>      BSR writelong
0002D46C <AmiBlitz3.ab3@17582>      MOVE.w #$2f0a,d1
0002D472 <AmiBlitz3.ab3@17583>      ADDQ.w #8,a2offset
0002D476 <AmiBlitz3.ab3@17584>      BSR writeword
0002D47A <AmiBlitz3.ab3@17585> BRA.w reget
0002D47E <AmiBlitz3.ab3@17588>   CMP.b #$7,D2                                             ;load basic var
0002D482 <AmiBlitz3.ab3@17589>    BEQ.w JL_0_B0F6
0002D488 <AmiBlitz3.ab3@17591>    TST.b iee
0002D48C <AmiBlitz3.ab3@17592>    BEQ 'noiee
0002D490 <AmiBlitz3.ab3@17593>    CMP.b #5,d2
0002D494 <AmiBlitz3.ab3@17594>    BNE 'noiee
0002D496 <AmiBlitz3.ab3@17595>    MOVE.l d0,-(a7)                                         ;fpu load var
0002D49A <AmiBlitz3.ab3@17596>    BTST #15,d2
0002D49E <AmiBlitz3.ab3@17597>    BEQ 'var
0002D4A4 <AmiBlitz3.ab3@17598>    CMP.l #$7fff,d3
0002D4A8 <AmiBlitz3.ab3@17599>    BGT 'longoffset
0002D4AE <AmiBlitz3.ab3@17600>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002D4B0 <AmiBlitz3.ab3@17601>    TST.w d3                                                ;offset =0
0002D4B4 <AmiBlitz3.ab3@17602>    BNE 'offset
0002D4BA <AmiBlitz3.ab3@17605>   MOVE.l #$f2124400,d1
0002D4BC <AmiBlitz3.ab3@17606>    MOVEQ #0,d3
0002D4C0 <AmiBlitz3.ab3@17607> BRA 'glob
0002D4C6 <AmiBlitz3.ab3@17610>   SUBQ.l #4,destpointer
0002D4CA <AmiBlitz3.ab3@17611> BRA 'glob
0002D4D0 <AmiBlitz3.ab3@17614>   TST.b fast
0002D4D4 <AmiBlitz3.ab3@17615>    BEQ 'nofastload
0002D4DA <AmiBlitz3.ab3@17616>    TST.w regnum
0002D4DE <AmiBlitz3.ab3@17617>    BNE 'nofastload
0002D4E4 <AmiBlitz3.ab3@17618>    CMP.l fp0addr,a4
0002D4E8 <AmiBlitz3.ab3@17619>    BNE 'nofastload
0002D4EE <AmiBlitz3.ab3@17620>    MOVE.l fp0iff,d1
0002D4F4 <AmiBlitz3.ab3@17621>    CMP.l firstiff,d1
0002D4F8 <AmiBlitz3.ab3@17622>    BNE 'nofastload
0002D4FE <AmiBlitz3.ab3@17623>    MOVE.w varmode,d1
0002D504 <AmiBlitz3.ab3@17624>    CMP.w fp0mode,d1
0002D508 <AmiBlitz3.ab3@17625>    BNE 'nofastload
0002D50E <AmiBlitz3.ab3@17626>    CMP.w fp0var,d3
0002D512 <AmiBlitz3.ab3@17627>    BNE 'nofastload
0002D516 <AmiBlitz3.ab3@17628>    BCLR #16,d2
0002D518 <AmiBlitz3.ab3@17629>    MOVE.l (a7)+,d0
0002D51A <AmiBlitz3.ab3@17630> RTS
0002D51C <AmiBlitz3.ab3@17633>    MOVEQ #0,d0
0002D522 <AmiBlitz3.ab3@17634>    MOVE.w regnum,d0
0002D528 <AmiBlitz3.ab3@17635>    CMP.l maxregs,d0
0002D52C <AmiBlitz3.ab3@17636>    BLE 'ok
0002D532 <AmiBlitz3.ab3@17637>    LEA cmplxerr,a0
0002D534 <AmiBlitz3.ab3@17638>   MOVE.l a0,-(a7)
0002D53A <AmiBlitz3.ab3@17639> JMP handle_compileerror
0002D540 <AmiBlitz3.ab3@17642>    LEA regtable,a4
0002D542 <AmiBlitz3.ab3@17643>    TST.l (a4)
0002D546 <AmiBlitz3.ab3@17644>    BEQ 'noreg
0002D54A <AmiBlitz3.ab3@17645>    CMP.w 0+4(a4),d3
0002D54E <AmiBlitz3.ab3@17646>    BNE 'doreg1
0002D554 <AmiBlitz3.ab3@17647>    MOVE.l #$f2001c00,d1
0002D55A <AmiBlitz3.ab3@17648>    MOVE.w regnum,d0
0002D55C <AmiBlitz3.ab3@17649>    ASL.w #7,d0
0002D55E <AmiBlitz3.ab3@17650>    OR.w d0,d1
0002D562 <AmiBlitz3.ab3@17651>    BSR writelong
0002D564 <AmiBlitz3.ab3@17652>    MOVE.l (a7)+,d0
0002D566 <AmiBlitz3.ab3@17653> RTS
0002D56A <AmiBlitz3.ab3@17656>   CMP.w 8+4(a4),d3
0002D56E <AmiBlitz3.ab3@17657>    BNE 'doreg2
0002D574 <AmiBlitz3.ab3@17658>    MOVE.l #$f2001800,d1
0002D57A <AmiBlitz3.ab3@17659>    MOVE.w regnum,d0
0002D57C <AmiBlitz3.ab3@17660>    ASL.w #7,d0
0002D57E <AmiBlitz3.ab3@17661>    OR.w d0,d1
0002D582 <AmiBlitz3.ab3@17662>    BSR writelong
0002D584 <AmiBlitz3.ab3@17663>    MOVE.l (a7)+,d0
0002D586 <AmiBlitz3.ab3@17664> RTS
0002D58A <AmiBlitz3.ab3@17667>   CMP.w 16+4(a4),d3
0002D58E <AmiBlitz3.ab3@17668>    BNE 'doreg3
0002D594 <AmiBlitz3.ab3@17669>    MOVE.l #$f2001400,d1
0002D59A <AmiBlitz3.ab3@17670>    MOVE.w regnum,d0
0002D59C <AmiBlitz3.ab3@17671>    ASL.w #7,d0
0002D59E <AmiBlitz3.ab3@17672>    OR.w d0,d1
0002D5A2 <AmiBlitz3.ab3@17673>    BSR  writelong
0002D5A4 <AmiBlitz3.ab3@17674>    MOVE.l (a7)+,d0
0002D5A6 <AmiBlitz3.ab3@17675> RTS
0002D5AA <AmiBlitz3.ab3@17678>   CMP.w 24+4(a4),d3
0002D5AE <AmiBlitz3.ab3@17679>    BNE 'doreg4
0002D5B4 <AmiBlitz3.ab3@17680>    MOVE.l #$f2001000,d1
0002D5BA <AmiBlitz3.ab3@17681>    MOVE.w regnum,d0
0002D5BC <AmiBlitz3.ab3@17682>    ASL.w #7,d0
0002D5BE <AmiBlitz3.ab3@17683>    OR.w d0,d1
0002D5C2 <AmiBlitz3.ab3@17684>    BSR writelong
0002D5C4 <AmiBlitz3.ab3@17685>    MOVE.l (a7)+,d0
0002D5C6 <AmiBlitz3.ab3@17686> RTS
0002D5CA <AmiBlitz3.ab3@17689>    CMP.w 32+4(a4),d3
0002D5CE <AmiBlitz3.ab3@17690>    BNE 'noreg
0002D5D4 <AmiBlitz3.ab3@17691>    MOVE.l #$f2000c00,d1
0002D5DA <AmiBlitz3.ab3@17692>    MOVE.w regnum,d0
0002D5DC <AmiBlitz3.ab3@17693>    ASL.w #7,d0
0002D5DE <AmiBlitz3.ab3@17694>    OR.w d0,d1
0002D5E2 <AmiBlitz3.ab3@17695>    BSR writelong
0002D5E4 <AmiBlitz3.ab3@17696>    MOVE.l (a7)+,d0
0002D5E6 <AmiBlitz3.ab3@17697> RTS
0002D5EC <AmiBlitz3.ab3@17700>    MOVE.l #$f22d4400,d1                                    ;var
0002D5F2 <AmiBlitz3.ab3@17701>    TST.w varmode
0002D5F6 <AmiBlitz3.ab3@17702>   BEQ 'glob
0002D5FA <AmiBlitz3.ab3@17703>   BCLR #16,d1                                              ;local
0002D5FC <AmiBlitz3.ab3@17706>    MOVEQ #0,d0
0002D602 <AmiBlitz3.ab3@17707>    MOVE.w regnum,d0
0002D606 <AmiBlitz3.ab3@17708>    CMP.w #7,d0
0002D60A <AmiBlitz3.ab3@17709>    BLE 'ok2
0002D610 <AmiBlitz3.ab3@17710>    LEA cmplxerr,a0
0002D612 <AmiBlitz3.ab3@17711>   MOVE.l a0,-(a7)
0002D618 <AmiBlitz3.ab3@17712> JMP handle_compileerror
0002D61A <AmiBlitz3.ab3@17715>      ASL.w #7,d0
0002D61C <AmiBlitz3.ab3@17716>    OR.l d0,d1
0002D624 <AmiBlitz3.ab3@17717>    CMP.l #doublecheck,8(a2)
0002D628 <AmiBlitz3.ab3@17718>    BNE 'dbl
0002D62E <AmiBlitz3.ab3@17719>    OR.l #$00001000,d1
0002D632 <AmiBlitz3.ab3@17722>   BSR writelong
0002D634 <AmiBlitz3.ab3@17723>    MOVE.l (a7)+,d0
0002D638 <AmiBlitz3.ab3@17724>    AND.w #$ff,d2
0002D63A <AmiBlitz3.ab3@17725>    MOVE.w d3,d1
0002D63E <AmiBlitz3.ab3@17726>    BEQ 'nooffs
0002D642 <AmiBlitz3.ab3@17727> BRA writeword
0002D644 <AmiBlitz3.ab3@17732> RTS
0002D64A <AmiBlitz3.ab3@17735>   MOVE.w regnum,D1
0002D650 <AmiBlitz3.ab3@17736>   MOVE.w d1,load_var_reg
0002D652 <AmiBlitz3.ab3@17737>   LSL.w #8,D1
0002D65C <AmiBlitz3.ab3@17738>   MOVE.l destpointer,load_var_addr
0002D662 <AmiBlitz3.ab3@17739>   MOVE.w d2,load_var_size
0002D664 <AmiBlitz3.ab3@17740>   LSL.w #1,D1
0002D668 <AmiBlitz3.ab3@17741>   BTST #$E,D2
0002D66C <AmiBlitz3.ab3@17742>    BNE.w JL_0_B17A
0002D66E <AmiBlitz3.ab3@17743>   TST.b D2
0002D672 <AmiBlitz3.ab3@17744>    BNE.w JL_0_B17E
0002D674 <AmiBlitz3.ab3@17745>   MOVEQ.l #$03,D2
0002D678 <AmiBlitz3.ab3@17746>   ORI.w #$200A,D1
0002D67C <AmiBlitz3.ab3@17747> BRA.w writeword
0002D680 <AmiBlitz3.ab3@17750>   MOVE.b #$3,D2
0002D684 <AmiBlitz3.ab3@17753>   BTST #$F,D2
0002D688 <AmiBlitz3.ab3@17754>    BEQ.w JL_0_B19A                                         ;loadarray
0002D68E <AmiBlitz3.ab3@17755>    TST.b fast                                              ;lea->move xx(a2)
0002D692 <AmiBlitz3.ab3@17756>    BEQ 'la10
0002D698 <AmiBlitz3.ab3@17761>    CLR.l load_var_addr
0002D69C <AmiBlitz3.ab3@17762> BRA 'la10
0002D6A4 <AmiBlitz3.ab3@17764>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002D6A8 <AmiBlitz3.ab3@17765>    BNE 'la10
0002D6AE <AmiBlitz3.ab3@17766>    TST.b optiarray
0002D6B2 <AmiBlitz3.ab3@17767>    BNE 'la10
0002D6B8 <AmiBlitz3.ab3@17768>    MOVE.l destpointer,a4
0002D6BE <AmiBlitz3.ab3@17769>    SUB.l loada,a4
0002D6C2 <AmiBlitz3.ab3@17770>    CMP.w #4,a4
0002D6C6 <AmiBlitz3.ab3@17771>    BEQ 'la100
0002D6CA <AmiBlitz3.ab3@17772>    CMP.w #2,a4
0002D6CE <AmiBlitz3.ab3@17773>    BNE 'la10
0002D6D4 <AmiBlitz3.ab3@17774>    MOVE.l destpointer,a4
0002D6D8 <AmiBlitz3.ab3@17775>    CMP.b #3,d2
0002D6DC <AmiBlitz3.ab3@17776>    BCS 'la110
0002D6E2 <AmiBlitz3.ab3@17777>    MOVE.w #$202a,-2(a4)
0002D6E6 <AmiBlitz3.ab3@17778>    OR.w d1,-2(a4)
0002D6EC <AmiBlitz3.ab3@17779>    MOVE.w arrayoffset,d1
0002D6F0 <AmiBlitz3.ab3@17780>    BSR writeword
0002D6F4 <AmiBlitz3.ab3@17781> BRA JL_0_B194
0002D6F8 <AmiBlitz3.ab3@17784>    CMP.b #2,d2
0002D6FC <AmiBlitz3.ab3@17785>    BNE 'la120
0002D702 <AmiBlitz3.ab3@17786>     MOVE.w #$302a,-2(a4)
0002D706 <AmiBlitz3.ab3@17787>    OR.w d1,-2(a4)
0002D70C <AmiBlitz3.ab3@17789>    MOVE.w arrayoffset,d1
0002D710 <AmiBlitz3.ab3@17790>    BSR writeword
0002D714 <AmiBlitz3.ab3@17791> BRA JL_0_B194
0002D718 <AmiBlitz3.ab3@17794>   CMP.b #1,d2
0002D71C <AmiBlitz3.ab3@17795>    BNE.s 'la10
0002D722 <AmiBlitz3.ab3@17796>     MOVE.w #$102a,-2(a4)
0002D726 <AmiBlitz3.ab3@17797>    OR.w d1,-2(a4)
0002D72C <AmiBlitz3.ab3@17798>    MOVE.w arrayoffset,d1
0002D730 <AmiBlitz3.ab3@17799>    BSR writeword
0002D734 <AmiBlitz3.ab3@17800> BRA JL_0_B194
0002D73A <AmiBlitz3.ab3@17803>   MOVE.l destpointer,a4
0002D740 <AmiBlitz3.ab3@17804>    CMP.w #$45ea,-2(a4)
0002D744 <AmiBlitz3.ab3@17805>    BNE 'la10
0002D748 <AmiBlitz3.ab3@17806>    CMP.b #3,d2
0002D74C <AmiBlitz3.ab3@17807>    BCS 'la11
0002D752 <AmiBlitz3.ab3@17808>    MOVE.w #$202a,-4(a4)
0002D756 <AmiBlitz3.ab3@17809>    OR.w d1,-4(a4)
0002D75A <AmiBlitz3.ab3@17810> BRA JL_0_B194
0002D75E <AmiBlitz3.ab3@17813>    CMP.b #2,d2
0002D762 <AmiBlitz3.ab3@17814>    BNE 'la12
0002D768 <AmiBlitz3.ab3@17815>     MOVE.w #$302a,-4(a4)
0002D76C <AmiBlitz3.ab3@17816>    OR.w d1,-4(a4)
0002D770 <AmiBlitz3.ab3@17817> BRA JL_0_B194
0002D774 <AmiBlitz3.ab3@17820>   CMP.b #1,d2
0002D778 <AmiBlitz3.ab3@17821>    BNE.s 'la10
0002D77E <AmiBlitz3.ab3@17822>     MOVE.w #$102a,-4(a4)
0002D782 <AmiBlitz3.ab3@17823>    OR.w d1,-4(a4)
0002D786 <AmiBlitz3.ab3@17824> BRA JL_0_B194
0002D78C <AmiBlitz3.ab3@17827>    OR.w movea2dn,D1
0002D790 <AmiBlitz3.ab3@17828>    BSR.w JL_0_B1B2
0002D794 <AmiBlitz3.ab3@17829>    BSR.w writeword
0002D798 <AmiBlitz3.ab3@17832>   ANDI.w #$FF,D2
0002D79A <AmiBlitz3.ab3@17833> RTS
0002D7A0 <AmiBlitz3.ab3@17837>    MOVE.l destpointer,a4
0002D7A8 <AmiBlitz3.ab3@17838>    MOVE.l #$f22a4400,-4(a4)
0002D7AE <AmiBlitz3.ab3@17839>    MOVE.w arrayoffset,d1
0002D7B2 <AmiBlitz3.ab3@17840> BRA writeword
0002D7B8 <AmiBlitz3.ab3@17844>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002D7BC <AmiBlitz3.ab3@17845>    BSR.w JL_0_B1B2
0002D7C0 <AmiBlitz3.ab3@17846>    BSR.w pokewda5s
0002D7C2 <AmiBlitz3.ab3@17847>   MOVE.w D3,D1
0002D7C6 <AmiBlitz3.ab3@17848>    BSR.w writeword
0002D7CA <AmiBlitz3.ab3@17849> BRA.w JL_0_B194
0002D7CE <AmiBlitz3.ab3@17852>   BTST #$E,D2
0002D7D2 <AmiBlitz3.ab3@17853>    BNE.w JL_0_B1CA
0002D7D6 <AmiBlitz3.ab3@17854>   CMP.b #$1,D2
0002D7DA <AmiBlitz3.ab3@17855>    BEQ.w JL_0_B1CC
0002D7DE <AmiBlitz3.ab3@17856>   CMP.b #$2,D2
0002D7E2 <AmiBlitz3.ab3@17857>    BEQ.w JL_0_B1D2
0002D7E4 <AmiBlitz3.ab3@17860> RTS
0002D7E8 <AmiBlitz3.ab3@17863>   EORI.w #$3000,D1
0002D7EA <AmiBlitz3.ab3@17864> RTS
0002D7EE <AmiBlitz3.ab3@17867>   ORI.w #$1000,D1
0002D7F0 <AmiBlitz3.ab3@17868> RTS
0002D7F8 <AmiBlitz3.ab3@17872>   MOVE.w #$FFFF,dfetch
0002D7FC <AmiBlitz3.ab3@17873>   BSR.w get1bytemain
0002D800 <AmiBlitz3.ab3@17874>   CMP.w #$2D,D0
0002D804 <AmiBlitz3.ab3@17875>    BNE.w JL_0_B206
0002D808 <AmiBlitz3.ab3@17876>   BSR.w get1bytemain
0002D80C <AmiBlitz3.ab3@17877>   BSR.w JL_0_B206
0002D810 <AmiBlitz3.ab3@17878>   CMP.w #$5,D2
0002D814 <AmiBlitz3.ab3@17879>    BCC.w JL_0_B200
0002D816 <AmiBlitz3.ab3@17880>   NEG.l D0
0002D818 <AmiBlitz3.ab3@17881> RTS
0002D81E <AmiBlitz3.ab3@17884>   TST.b fpu
0002D822 <AmiBlitz3.ab3@17885>   BEQ 'noneg
0002D826 <AmiBlitz3.ab3@17886>   fneg.x fp0
0002D828 <AmiBlitz3.ab3@17887> RTS
0002D82C <AmiBlitz3.ab3@17890>   BCHG #$7,D0
0002D82E <AmiBlitz3.ab3@17891> RTS
0002D832 <AmiBlitz3.ab3@17894>   CMP.w #$24,D0
0002D836 <AmiBlitz3.ab3@17895>    BEQ.w get_hexconstant
0002D83A <AmiBlitz3.ab3@17896>   CMP.w #$25,D0
0002D83E <AmiBlitz3.ab3@17897>    BEQ.w JL_0_A8C0
0002D842 <AmiBlitz3.ab3@17898>   CMP.w #$2E,D0
0002D846 <AmiBlitz3.ab3@17899>    BNE.w JL_0_B224
0002D848 <AmiBlitz3.ab3@17902>   MOVEQ.l #$00,D3
0002D84C <AmiBlitz3.ab3@17903> BRA.w JL_0_B272
0002D84E <AmiBlitz3.ab3@17906>   MOVEQ.l #$00,D3                                          ;number
0002D852 <AmiBlitz3.ab3@17907>    BSR.w atoi
0002D856 <AmiBlitz3.ab3@17908>   CMP.w #$2E,D0
0002D85A <AmiBlitz3.ab3@17909>    BEQ.w JL_0_B268
0002D85E <AmiBlitz3.ab3@17910>   ORI.w #$20,D0
0002D862 <AmiBlitz3.ab3@17911>   CMP.w #$65,D0
0002D866 <AmiBlitz3.ab3@17912>    BNE.w JL_0_B46E
0002D86C <AmiBlitz3.ab3@17913>   CMP.l #$800000,D3
0002D870 <AmiBlitz3.ab3@17914>    BCC.w overerr
0002D872 <AmiBlitz3.ab3@17915>   MOVEQ.l #-$01,D6
0002D876 <AmiBlitz3.ab3@17916>   fmove.l d3,fp0
0002D878 <AmiBlitz3.ab3@17917>   MOVE.l D3,D0
0002D87E <AmiBlitz3.ab3@17918>   MOVEA.l _mathffpbase,A6
0002D882 <AmiBlitz3.ab3@17919>    JSR -$24(A6)
0002D884 <AmiBlitz3.ab3@17920>   MOVE.l D0,D3
0002D888 <AmiBlitz3.ab3@17921>    BSR.w JL_0_B2E6
0002D88C <AmiBlitz3.ab3@17922>    BSR.w reget
0002D890 <AmiBlitz3.ab3@17923>    BSR.w JL_0_B480
0002D894 <AmiBlitz3.ab3@17924> BRA.w JL_0_B3DC
0002D898 <AmiBlitz3.ab3@17927>   CMP.b #4,d2
0002D89C <AmiBlitz3.ab3@17928>   BEQ 'l4
0002D8A0 <AmiBlitz3.ab3@17929>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002D8A6 <AmiBlitz3.ab3@17932>    TST.b fpu
0002D8AA <AmiBlitz3.ab3@17933>    BNE 'l1
0002D8B0 <AmiBlitz3.ab3@17934>    CMP.l #$800000,D3
0002D8B4 <AmiBlitz3.ab3@17935>    BCC.w overerr
0002D8B8 <AmiBlitz3.ab3@17936> BRA JL_0_B272
0002D8BE <AmiBlitz3.ab3@17939>   CMP.l #$7fffffff,d3
0002D8C2 <AmiBlitz3.ab3@17940>     BCC.w overerr
0002D8C4 <AmiBlitz3.ab3@17943>   MOVEQ.l #-$01,D6
0002D8C6 <AmiBlitz3.ab3@17944>   MOVE.l D3,D0
0002D8CA <AmiBlitz3.ab3@17945>   fmove.l d3,fp0
0002D8D0 <AmiBlitz3.ab3@17946>   MOVEA.l _mathffpbase,A6
0002D8D4 <AmiBlitz3.ab3@17947>    JSR -$24(A6)                                            ;integer to ffp
0002D8D6 <AmiBlitz3.ab3@17948>   MOVE.l D0,-(A7)
0002D8DA <AmiBlitz3.ab3@17949>    BSR.w get1bytemain
0002D8DE <AmiBlitz3.ab3@17950>    BSR.w tstnum
0002D8E2 <AmiBlitz3.ab3@17951>    BNE.w syntaxerr
0002D8E4 <AmiBlitz3.ab3@17952>   MOVEQ.l #$00,D3
0002D8E8 <AmiBlitz3.ab3@17953>    BSR.w atoi
0002D8EA <AmiBlitz3.ab3@17954>   TST.l D3
0002D8EE <AmiBlitz3.ab3@17955>    BEQ.w JL_0_B2E0
0002D8F4 <AmiBlitz3.ab3@17956>   TST.b fpu
0002D8F8 <AmiBlitz3.ab3@17957>   BNE 'l1
0002D8FE <AmiBlitz3.ab3@17958>   CMP.l #$800000,D3
0002D902 <AmiBlitz3.ab3@17959>    BCC.w overerr
0002D906 <AmiBlitz3.ab3@17960> BRA 'l2
0002D90C <AmiBlitz3.ab3@17963>   CMP.l #$7fffffff,d3
0002D910 <AmiBlitz3.ab3@17964>   BCC overerr
0002D914 <AmiBlitz3.ab3@17967>   fmove.l d5,fp1
0002D916 <AmiBlitz3.ab3@17968>   MOVE.l D5,D0
0002D91A <AmiBlitz3.ab3@17969>    JSR -$24(A6)
0002D91C <AmiBlitz3.ab3@17970>   MOVE.l D0,D5
0002D920 <AmiBlitz3.ab3@17971>   fmove.l d3,fp2
0002D922 <AmiBlitz3.ab3@17972>   MOVE.l D3,D0
0002D926 <AmiBlitz3.ab3@17973>    JSR -$24(A6)
0002D92A <AmiBlitz3.ab3@17974>   fdiv.x fp1,fp2
0002D92C <AmiBlitz3.ab3@17975>   MOVE.l D5,D1
0002D930 <AmiBlitz3.ab3@17976>    JSR -$54(A6)
0002D934 <AmiBlitz3.ab3@17977>   fadd.x fp2,fp0
0002D936 <AmiBlitz3.ab3@17978>   MOVE.l (A7)+,D1
0002D93A <AmiBlitz3.ab3@17979>    JSR -$42(A6)
0002D93C <AmiBlitz3.ab3@17980>   MOVE.l D0,D3
0002D940 <AmiBlitz3.ab3@17981>    BSR.w reget
0002D944 <AmiBlitz3.ab3@17982>   ORI.w #$20,D0
0002D948 <AmiBlitz3.ab3@17983>   CMP.w #$65,D0
0002D94C <AmiBlitz3.ab3@17984>    BNE.w JL_0_B2D4
0002D950 <AmiBlitz3.ab3@17985>    BSR.w JL_0_B2E6
0002D954 <AmiBlitz3.ab3@17988>    BSR.w reget
0002D958 <AmiBlitz3.ab3@17989>    BSR.w JL_0_B480
0002D95C <AmiBlitz3.ab3@17990> BRA.w JL_0_B3DC
0002D95E <AmiBlitz3.ab3@17993>   MOVE.l (A7)+,D3
0002D962 <AmiBlitz3.ab3@17994> BRA.w JL_0_B2D4
0002D966 <AmiBlitz3.ab3@17997>   BSR.w get1bytemain
0002D96A <AmiBlitz3.ab3@17998>   CMP.w #$2B,D0
0002D96E <AmiBlitz3.ab3@17999>    BEQ.w JL_0_B30E
0002D972 <AmiBlitz3.ab3@18000>   CMP.w #$2D,D0
0002D976 <AmiBlitz3.ab3@18001>    BNE.w JL_0_B312
0002D97A <AmiBlitz3.ab3@18002>    BSR.w get1bytemain
0002D97E <AmiBlitz3.ab3@18003>    BSR.w getsign
0002D980 <AmiBlitz3.ab3@18004>   MOVE.l D3,D0
0002D984 <AmiBlitz3.ab3@18005>   fdiv.x fp1,fp0
0002D986 <AmiBlitz3.ab3@18006>   MOVE.l D4,D1
0002D98A <AmiBlitz3.ab3@18007>    JSR -$54(A6)
0002D98C <AmiBlitz3.ab3@18008>   MOVE.l D0,D3
0002D98E <AmiBlitz3.ab3@18009> RTS
0002D992 <AmiBlitz3.ab3@18012>   BSR.w get1bytemain
0002D996 <AmiBlitz3.ab3@18015>   BSR.w getsign
0002D99A <AmiBlitz3.ab3@18016>   fmul.x fp1,fp0
0002D99C <AmiBlitz3.ab3@18017>   MOVE.l D3,D0
0002D99E <AmiBlitz3.ab3@18018>   MOVE.l D4,D1
0002D9A2 <AmiBlitz3.ab3@18019>    JSR -$4E(A6)
0002D9A4 <AmiBlitz3.ab3@18020>   MOVE.l D0,D3
0002D9A6 <AmiBlitz3.ab3@18021> RTS
0002D9AA <AmiBlitz3.ab3@18024>   BSR.w tstnum
0002D9AE <AmiBlitz3.ab3@18025>    BNE.w syntaxerr
0002D9B0 <AmiBlitz3.ab3@18026>   MOVE.w D0,D4
0002D9B4 <AmiBlitz3.ab3@18027>   SUBI.w #$30,D4
0002D9B8 <AmiBlitz3.ab3@18028>    BSR.w get1bytemain
0002D9BC <AmiBlitz3.ab3@18029>    BSR.w tstnum
0002D9C0 <AmiBlitz3.ab3@18030>    BNE.w getsign__skip
0002D9C4 <AmiBlitz3.ab3@18031>   MULU #$A,D4
0002D9C8 <AmiBlitz3.ab3@18032>   SUBI.w #$30,D0
0002D9CA <AmiBlitz3.ab3@18033>   ADD.w D0,D4
0002D9CE <AmiBlitz3.ab3@18034>    BSR.w get1bytemain
0002D9D2 <AmiBlitz3.ab3@18037>   CMP.w #$12,D4
0002D9D6 <AmiBlitz3.ab3@18038>    BHI.w overerr
0002D9D8 <AmiBlitz3.ab3@18039>   LSL.w #3,D4
0002D9DE <AmiBlitz3.ab3@18040>   LEA fputab,a0
0002D9E0 <AmiBlitz3.ab3@18041>   ADD.l d4,a0
0002D9E6 <AmiBlitz3.ab3@18042>   fmove.d 0(a0),fp1
0002D9E8 <AmiBlitz3.ab3@18043>   LSR.w #1,d4
0002D9EC <AmiBlitz3.ab3@18044>   MOVE.l facts(PC,D4.W),D4
0002D9EE <AmiBlitz3.ab3@18045> RTS
0002DA36 <AmiBlitz3.ab3@18049>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002DA3A <AmiBlitz3.ab3@18054>   Dc.l $80000041
0002DA3E <AmiBlitz3.ab3@18055>   Dc.l $A0000044
0002DA42 <AmiBlitz3.ab3@18056>   Dc.l $C8000047
0002DA46 <AmiBlitz3.ab3@18057>   Dc.l $FA00004A
0002DA4A <AmiBlitz3.ab3@18058>   Dc.l $9C40004E
0002DA4E <AmiBlitz3.ab3@18059>   Dc.l $C3500051
0002DA52 <AmiBlitz3.ab3@18060>   Dc.l $F4240054
0002DA56 <AmiBlitz3.ab3@18061>   Dc.l $98968058
0002DA5A <AmiBlitz3.ab3@18062>   Dc.l $BEBC205B
0002DA5E <AmiBlitz3.ab3@18063>   Dc.l $EE6B285E
0002DA62 <AmiBlitz3.ab3@18064>   Dc.l $9502F962
0002DA66 <AmiBlitz3.ab3@18065>   Dc.l $BA43B765
0002DA6A <AmiBlitz3.ab3@18066>   Dc.l $E8D4A568
0002DA6E <AmiBlitz3.ab3@18067>   Dc.l $9184E76C
0002DA72 <AmiBlitz3.ab3@18068>   Dc.l $B5E6A96F
0002DA76 <AmiBlitz3.ab3@18069>   Dc.l $E35F2972
0002DA7A <AmiBlitz3.ab3@18070>   Dc.l $8E1BCA76
0002DA7E <AmiBlitz3.ab3@18071>   Dc.l $B1A2BD79
0002DA82 <AmiBlitz3.ab3@18072>   Dc.l $DE0B6C7C
0002DA84 <AmiBlitz3.ab3@18076>   MOVEQ.l #$01,D5
0002DA86 <AmiBlitz3.ab3@18079>   LSL.l #1,D5
0002DA88 <AmiBlitz3.ab3@18080>   MOVE.l D5,D1
0002DA8A <AmiBlitz3.ab3@18081>   LSL.l #2,D5
0002DA8C <AmiBlitz3.ab3@18082>   ADD.l D1,D5                                              ;divisor for frac convert!
0002DA8E <AmiBlitz3.ab3@18083>   LSL.l #1,D3
0002DA92 <AmiBlitz3.ab3@18084>    BCS.w overerr
0002DA94 <AmiBlitz3.ab3@18085>   MOVE.l D3,D1
0002DA96 <AmiBlitz3.ab3@18086>   LSL.l #1,D3
0002DA9A <AmiBlitz3.ab3@18087>    BCS.w overerr
0002DA9C <AmiBlitz3.ab3@18088>   LSL.l #1,D3
0002DAA0 <AmiBlitz3.ab3@18089>    BCS.w overerr
0002DAA2 <AmiBlitz3.ab3@18090>   ADD.l D1,D3
0002DAA6 <AmiBlitz3.ab3@18091>   SUBI.w #$30,D0
0002DAA8 <AmiBlitz3.ab3@18092>   ADD.l D0,D3
0002DAD4 <AmiBlitz3.ab3@18093>    !fget                                                   ;bsr.w get1bytemain
0002DAD8 <AmiBlitz3.ab3@18094>    CMP.b #1,d0
0002DADC <AmiBlitz3.ab3@18095>    BNE 'cm1
0002DADE <AmiBlitz3.ab3@18096>    SUBQ.l #1,a5
0002DAE2 <AmiBlitz3.ab3@18097>    BSR get1bytemain                                        ;??wy not !fget
0002DAE6 <AmiBlitz3.ab3@18100>   CMP.b #$7e,d0
0002DAEA <AmiBlitz3.ab3@18101>    BNE 'cm2
0002DAEC <AmiBlitz3.ab3@18102>    SUBQ.l #1,a5
0002DAF0 <AmiBlitz3.ab3@18103>    BSR get1bytemain
0002DAF2 <AmiBlitz3.ab3@18106>   TST.b d0
0002DAF6 <AmiBlitz3.ab3@18107>    BPL 'l10
0002DAF8 <AmiBlitz3.ab3@18108>    LSL.w #8,d0
0002DAFA <AmiBlitz3.ab3@18109>    MOVE.b (a5)+,d0
0002DB00 <AmiBlitz3.ab3@18110>    MOVE.w d0,lastchar
0002DB12 <AmiBlitz3.ab3@18113>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002DB16 <AmiBlitz3.ab3@18114>    BEQ.w atoi__loop
0002DB18 <AmiBlitz3.ab3@18115> RTS
0002DB1A <AmiBlitz3.ab3@18118> dfetch:  Ds.w 1                                            ;fetching data?
0002DB1E <AmiBlitz3.ab3@18122>   MOVE.w dfetch(PC),D1
0002DB22 <AmiBlitz3.ab3@18123>    BEQ.w JL_0_B3EC
0002DB28 <AmiBlitz3.ab3@18124>   CLR.w dfetch
0002DB2A <AmiBlitz3.ab3@18125> RTS
0002DB30 <AmiBlitz3.ab3@18128>   MOVE.b d2,isconstantvalue
0002DB36 <AmiBlitz3.ab3@18129>   MOVE.l d0,lastconstantvalue
0002DB3C <AmiBlitz3.ab3@18130>   MOVE.w d2,imm_size
0002DB46 <AmiBlitz3.ab3@18131>   MOVE.w regnum,imm_reg
0002DB50 <AmiBlitz3.ab3@18132>   MOVE.l destpointer,imm_addr                           ; long
0002DB54 <AmiBlitz3.ab3@18133>   CMP.w #$3,D2
0002DB58 <AmiBlitz3.ab3@18134>   BEQ.w JL_0_B434
0002DB5C <AmiBlitz3.ab3@18135>   CMP.w #$5,D2                                          ;float
0002DB60 <AmiBlitz3.ab3@18136>   BEQ.w JL_0_B434
0002DB64 <AmiBlitz3.ab3@18137>   CMP.w #$1,D2
0002DB68 <AmiBlitz3.ab3@18138>   BEQ.w JL_0_B418
0002DB6C <AmiBlitz3.ab3@18139>   CMP.w #$2,D2
0002DB70 <AmiBlitz3.ab3@18140>   BEQ.w JL_0_B418
0002DB74 <AmiBlitz3.ab3@18141>   CMP.w #$4,D2
0002DB78 <AmiBlitz3.ab3@18142>   BEQ.w JL_0_B434
0002DB7C <AmiBlitz3.ab3@18144> BRA.w mismatcherr
0002DB82 <AmiBlitz3.ab3@18147>   MOVE.w regnum,D1
0002DB84 <AmiBlitz3.ab3@18148>   LSL.w #8,D1
0002DB86 <AmiBlitz3.ab3@18149>   LSL.w #1,D1
0002DB8A <AmiBlitz3.ab3@18150>   ORI.w #$303C,D1
0002DB8E <AmiBlitz3.ab3@18151>    BSR.w writeword
0002DB90 <AmiBlitz3.ab3@18152>   MOVE.w D0,D1
0002DB94 <AmiBlitz3.ab3@18153>    BSR.w writeword
0002DB98 <AmiBlitz3.ab3@18154> BRA.w reget
0002DB9A <AmiBlitz3.ab3@18157>   MOVEQ #0,d1
0002DBA0 <AmiBlitz3.ab3@18158>   MOVE.w regnum,D1
0002DBA6 <AmiBlitz3.ab3@18159>   TST.b fpu
0002DBAA <AmiBlitz3.ab3@18160>   BEQ 'f1
0002DBAE <AmiBlitz3.ab3@18161>   CMP.w #5,d2
0002DBB2 <AmiBlitz3.ab3@18162>   BEQ 'l10
0002DBB6 <AmiBlitz3.ab3@18163> BRA 'f2
0002DBBC <AmiBlitz3.ab3@18166>   TST.b iee
0002DBC0 <AmiBlitz3.ab3@18167>   BNE 'l10
0002DBC2 <AmiBlitz3.ab3@18170>   LSL.w #8,D1
0002DBC4 <AmiBlitz3.ab3@18171>   LSL.w #1,D1
0002DBC8 <AmiBlitz3.ab3@18172>   ORI.w #$203C,D1
0002DBCC <AmiBlitz3.ab3@18173>    BSR.w writeword
0002DBCE <AmiBlitz3.ab3@18174>   MOVE.l D0,D1
0002DBD2 <AmiBlitz3.ab3@18175>    BSR.w writelong
0002DBD6 <AmiBlitz3.ab3@18176> BRA.w reget
0002DBD8 <AmiBlitz3.ab3@18179>   MOVEQ #5,d2
0002DBDA <AmiBlitz3.ab3@18180>   ASL.l #7,d1
0002DBDC <AmiBlitz3.ab3@18181>   SUBQ.l #8,a7
0002DBE2 <AmiBlitz3.ab3@18186>       OR.l #$f23c4400,d1                                   ;fmove.s
0002DBE8 <AmiBlitz3.ab3@18187>        fmove.s fp0,0(a7)
0002DBEC <AmiBlitz3.ab3@18189>   BSR writelong
0002DBEE <AmiBlitz3.ab3@18190>   MOVE.l (a7)+,d1
0002DBF2 <AmiBlitz3.ab3@18191>   BSR writelong
0002DBF4 <AmiBlitz3.ab3@18192>   MOVE.l (a7)+,d1
0002DBF8 <AmiBlitz3.ab3@18196> BRA.w reget
0002DBFA <AmiBlitz3.ab3@18202>  MOVE.l D3,D0
0002DBFC <AmiBlitz3.ab3@18203>   TST.w D6
0002DC00 <AmiBlitz3.ab3@18204>    BEQ.w JL_0_B46C
0002DC06 <AmiBlitz3.ab3@18205>   MOVEA.l _mathffpbase,A6
0002DC0A <AmiBlitz3.ab3@18206>    JSR -$1E(A6)
0002DC0E <AmiBlitz3.ab3@18207>    BVC.w JL_0_B46C
0002DC10 <AmiBlitz3.ab3@18208>   ADDQ.w #4,A7
0002DC14 <AmiBlitz3.ab3@18209> BRA.w JL_0_B5A0
0002DC16 <AmiBlitz3.ab3@18212> RTS
0002DC18 <AmiBlitz3.ab3@18216>   MOVEQ.l #$00,D6
0002DC1C <AmiBlitz3.ab3@18217>    fmove.l d3,fp0
0002DC20 <AmiBlitz3.ab3@18220>   BSR.w JL_0_B480
0002DC24 <AmiBlitz3.ab3@18221> BRA.w JL_0_B3DC
0002DC26 <AmiBlitz3.ab3@18224>   MOVE.w D2,-(A7)
0002DC2A <AmiBlitz3.ab3@18225>    BSR.w JL_0_BF6A
0002DC2C <AmiBlitz3.ab3@18226>   MOVE.w (A7)+,D2
0002DC2E <AmiBlitz3.ab3@18229>   TST.w D2
0002DC32 <AmiBlitz3.ab3@18230>    BNE.w JL_0_B498
0002DC34 <AmiBlitz3.ab3@18231>   TST.w D6
0002DC38 <AmiBlitz3.ab3@18232>    BEQ.w JL_0_B492
0002DC3A <AmiBlitz3.ab3@18233>   MOVEQ.l #$04,D2
0002DC3E <AmiBlitz3.ab3@18234> BRA.w JL_0_B510
0002DC40 <AmiBlitz3.ab3@18237>   MOVEQ.l #$02,D2
0002DC44 <AmiBlitz3.ab3@18238> BRA.w JL_0_B4C4
0002DC48 <AmiBlitz3.ab3@18241>   CMP.w #$1,D2
0002DC4C <AmiBlitz3.ab3@18242>    BEQ.w JL_0_B4C4
0002DC50 <AmiBlitz3.ab3@18243>   CMP.w #$2,D2
0002DC54 <AmiBlitz3.ab3@18244>    BEQ.w JL_0_B4F8
0002DC58 <AmiBlitz3.ab3@18245>   CMP.w #$3,D2
0002DC5C <AmiBlitz3.ab3@18246>    BEQ.w JL_0_B57A
0002DC60 <AmiBlitz3.ab3@18247>   CMP.w #$4,D2
0002DC64 <AmiBlitz3.ab3@18248>    BEQ.w JL_0_B506
0002DC68 <AmiBlitz3.ab3@18249>   CMP.w #$5,D2
0002DC6C <AmiBlitz3.ab3@18250>    BEQ.w JL_0_B586
0002DC70 <AmiBlitz3.ab3@18251> BRA.w mismatcherr
0002DC74 <AmiBlitz3.ab3@18254>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002DC7A <AmiBlitz3.ab3@18255>   CMP.l #$7f,D0
0002DC7E <AmiBlitz3.ab3@18256>    BGT.w JL_0_B4DC
0002DC84 <AmiBlitz3.ab3@18257>   CMP.l #$FFFFFF80,D0
0002DC88 <AmiBlitz3.ab3@18258>    BGE.w JL_0_B59E
0002DC8A <AmiBlitz3.ab3@18261>   MOVEQ.l #$02,D2                                          ;was 2 before
0002DC90 <AmiBlitz3.ab3@18262>   CMP.l #$7fff,D0
0002DC94 <AmiBlitz3.ab3@18263>    BGT.w JL_0_B4F2
0002DC9A <AmiBlitz3.ab3@18264>   CMP.l #$FFFF8000,D0
0002DC9E <AmiBlitz3.ab3@18265>    BGE.w JL_0_B59E
0002DCA0 <AmiBlitz3.ab3@18268>   MOVEQ.l #$03,D2
0002DCA4 <AmiBlitz3.ab3@18269> BRA.w JL_0_B59E
0002DCA6 <AmiBlitz3.ab3@18295>   TST.w D6
0002DCAA <AmiBlitz3.ab3@18296>    BNE.w JL_0_B510
0002DCAE <AmiBlitz3.ab3@18297>    BSR.w JL_0_B450
0002DCB2 <AmiBlitz3.ab3@18298> BRA.w JL_0_B4DC
0002DCB6 <AmiBlitz3.ab3@18301>   BSR.w JL_0_B450
0002DCB8 <AmiBlitz3.ab3@18302>   TST.w D6
0002DCBC <AmiBlitz3.ab3@18303>   BEQ.w JL_0_B560
0002DCC2 <AmiBlitz3.ab3@18306>   CMP.l #MaxWordSgnd,D0
0002DCC6 <AmiBlitz3.ab3@18307>    BGT.w JL_0_B5A0
0002DCCC <AmiBlitz3.ab3@18308>   CMP.l #$FFFF8000,D0
0002DCD0 <AmiBlitz3.ab3@18309>    BLT.w JL_0_B5A0
0002DCD2 <AmiBlitz3.ab3@18310>   MOVE.w D0,-(A7)
0002DCD6 <AmiBlitz3.ab3@18311>    JSR -$24(A6)
0002DCD8 <AmiBlitz3.ab3@18312>   MOVE.l D0,D1
0002DCDA <AmiBlitz3.ab3@18313>   MOVE.l D3,D0
0002DCDE <AmiBlitz3.ab3@18314>    JSR -$48(A6)
0002DCE4 <AmiBlitz3.ab3@18315>   MOVE.l #$80000051,D1
0002DCE8 <AmiBlitz3.ab3@18316>    JSR -$4E(A6)
0002DCEC <AmiBlitz3.ab3@18317>    JSR -$1E(A6)
0002DCF0 <AmiBlitz3.ab3@18318>    BEQ.w JL_0_B55A
0002DCF6 <AmiBlitz3.ab3@18319>   CMP.l #$10000,D0
0002DCFA <AmiBlitz3.ab3@18320>    BCC.w JL_0_B55A
0002DCFC <AmiBlitz3.ab3@18321>   MOVE.w D0,D1
0002DCFE <AmiBlitz3.ab3@18322>   MOVE.w (A7)+,D0
0002DD00 <AmiBlitz3.ab3@18323>   SWAP D0
0002DD02 <AmiBlitz3.ab3@18324>   MOVE.w D1,D0
0002DD06 <AmiBlitz3.ab3@18325> BRA.w JL_0_B59E
0002DD08 <AmiBlitz3.ab3@18328>   ADDQ.w #2,A7
0002DD0C <AmiBlitz3.ab3@18329> BRA.w JL_0_B5A0
0002DD12 <AmiBlitz3.ab3@18332>   CMP.l #MaxWordSgnd,D0
0002DD16 <AmiBlitz3.ab3@18333>    BGT.w JL_0_B4F2
0002DD1C <AmiBlitz3.ab3@18334>   CMP.l #$FFFF8000,D0
0002DD20 <AmiBlitz3.ab3@18335>    BLT.w JL_0_B4F2
0002DD22 <AmiBlitz3.ab3@18336>   SWAP D0
0002DD26 <AmiBlitz3.ab3@18337> BRA.w JL_0_B59E
0002DD28 <AmiBlitz3.ab3@18340>   TST.w D6
0002DD2C <AmiBlitz3.ab3@18341>   BNE.w JL_0_B5A0
0002DD2E <AmiBlitz3.ab3@18342>   MOVE.l D3,D0
0002DD32 <AmiBlitz3.ab3@18343> BRA.w JL_0_B59E
0002DD34 <AmiBlitz3.ab3@18346>   TST.w D6
0002DD38 <AmiBlitz3.ab3@18347>   BNE.w JL_0_B5A0
0002DD3A <AmiBlitz3.ab3@18348>   MOVE.l D3,D0
0002DD40 <AmiBlitz3.ab3@18349>   MOVEA.l _mathffpbase,A6
0002DD44 <AmiBlitz3.ab3@18350>   JSR -$24(A6)
0002DD46 <AmiBlitz3.ab3@18351>   MOVE.l D0,D3
0002DD4A <AmiBlitz3.ab3@18352> BRA.w JL_0_B5A0
0002DD4C <AmiBlitz3.ab3@18355> RTS
0002DD4E <AmiBlitz3.ab3@18358>   MOVEQ.l #$05,D2
0002DD50 <AmiBlitz3.ab3@18359>   MOVE.l D3,D0
0002DD52 <AmiBlitz3.ab3@18360> RTS
0002DD56 <AmiBlitz3.ab3@18364>             Ds.l 1                                         ;??Looks like unused data??
0002DD5A <AmiBlitz3.ab3@18365> pushpc:     Ds.l 1
0002DD5E <AmiBlitz3.ab3@18366> pushoff:    Ds.l 1
0002DD62 <AmiBlitz3.ab3@18367> pushdooff:  Ds.l 1
0002DD64 <AmiBlitz3.ab3@18368> pushclen:   Ds.w 1
0002DD68 <AmiBlitz3.ab3@18369> pushat:     Ds.l 1
0002DD72 <AmiBlitz3.ab3@18373>   MOVE.l destpointer,pushpc
0002DD7C <AmiBlitz3.ab3@18374>   MOVE.l hunkoffsetbase,pushoff
0002DD7E <AmiBlitz3.ab3@18375> RTS
0002DD82 <AmiBlitz3.ab3@18379>   MOVEM.l D0-D1/A0-A1,-(A7)
0002DD88 <AmiBlitz3.ab3@18380>   MOVE.l destpointer,D0
0002DD8C <AmiBlitz3.ab3@18381>   MOVE.l pushpc(PC),D1
0002DD92 <AmiBlitz3.ab3@18382>   MOVE.l D1,destpointer
0002DD94 <AmiBlitz3.ab3@18383>   SUB.l D1,D0
0002DD9A <AmiBlitz3.ab3@18384>   MOVE.w D0,pushclen
0002DD9E <AmiBlitz3.ab3@18385>    BEQ.w JL_0_B636
0002DDA4 <AmiBlitz3.ab3@18386>   MOVE.w dontwrite,D1
0002DDA8 <AmiBlitz3.ab3@18387>    BNE.w JL_0_B636
0002DDB0 <AmiBlitz3.ab3@18388>    CMP.w #1000,pushclen
0002DDB4 <AmiBlitz3.ab3@18389>    BGE conmemerr
0002DDBA <AmiBlitz3.ab3@18390>    MOVE.l pushat,d0
0002DDBE <AmiBlitz3.ab3@18391>    BNE 'nomem
0002DDC4 <AmiBlitz3.ab3@18392>    MOVE.l #1024,d0
0002DDC6 <AmiBlitz3.ab3@18393>   MOVEQ.l #$01,D1
0002DDCC <AmiBlitz3.ab3@18394>   MOVEA.l _execbase,A6
0002DDD2 <AmiBlitz3.ab3@18395>   MOVE.l mempool,a0
0002DDD6 <AmiBlitz3.ab3@18396>   JSR _AllocPooled(a6)
0002DDDC <AmiBlitz3.ab3@18398>   MOVE.l D0,pushat
0002DDDE <AmiBlitz3.ab3@18401>   MOVEA.l D0,A0
0002DDE4 <AmiBlitz3.ab3@18402>   MOVEA.l pushpc,A1
0002DDEA <AmiBlitz3.ab3@18403>   MOVE.l A1,destpointer
0002DDF0 <AmiBlitz3.ab3@18404>   MOVE.w pushclen,D0
0002DDF2 <AmiBlitz3.ab3@18405>   LSR.w #1,D0
0002DDF4 <AmiBlitz3.ab3@18406>   SUBQ.w #1,D0
0002DDF6 <AmiBlitz3.ab3@18409>     MOVE.w (A1)+,(A0)+
0002DDFA <AmiBlitz3.ab3@18410>   DBF D0,JL_0_B626
0002DE04 <AmiBlitz3.ab3@18412>    MOVE.l hunkoffsetbase,pushdooff
0002DE08 <AmiBlitz3.ab3@18415>   MOVEM.l (A7)+,D0-D1/A0-A1
0002DE0A <AmiBlitz3.ab3@18416> RTS
0002DE0E <AmiBlitz3.ab3@18420>   MOVEM.l D0-D1/A0-A1,-(A7)
0002DE10 <AmiBlitz3.ab3@18421>   MOVEQ.l #$00,D0
0002DE16 <AmiBlitz3.ab3@18422>   MOVE.w pushclen,D0
0002DE1A <AmiBlitz3.ab3@18423>    BEQ.w JL_0_B6D8
0002DE20 <AmiBlitz3.ab3@18424>   MOVE.l destpointer,D1
0002DE26 <AmiBlitz3.ab3@18425>   ADD.l D0,destpointer
0002DE2C <AmiBlitz3.ab3@18426>   TST.w dontwrite
0002DE30 <AmiBlitz3.ab3@18427>    BNE.w JL_0_B6D8
0002DE32 <AmiBlitz3.ab3@18428>   LSR.w #1,D0
0002DE34 <AmiBlitz3.ab3@18429>   SUBQ.w #1,D0
0002DE36 <AmiBlitz3.ab3@18430>   MOVEA.l D1,A1
0002DE3C <AmiBlitz3.ab3@18431>   MOVEA.l pushat,A0
0002DE42 <AmiBlitz3.ab3@18434>     CMPA.l destbufferend,A1
0002DE46 <AmiBlitz3.ab3@18435>     BCS.w JL_0_B684
0002DE4E <AmiBlitz3.ab3@18437>     MOVE.w #$FFFF,dontwrite
0002DE52 <AmiBlitz3.ab3@18438>   BRA.w JL_0_B6D8
0002DE54 <AmiBlitz3.ab3@18441>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002DE58 <AmiBlitz3.ab3@18442>   DBF D0,JL_0_B66E
0002DE5E <AmiBlitz3.ab3@18444>   SUB.l pushpc,D1
0002DE62 <AmiBlitz3.ab3@18445>   BEQ.w JL_0_B6C2
0002DE68 <AmiBlitz3.ab3@18446>   MOVEA.l pushdooff,A0
0002DE6E <AmiBlitz3.ab3@18449>   CMPA.l pushoff,A0
0002DE72 <AmiBlitz3.ab3@18450>   BEQ.w JL_0_B6C2
0002DE76 <AmiBlitz3.ab3@18451>   MOVEA.l $4(A0),A1
0002DE7C <AmiBlitz3.ab3@18452>   ADDA.l destbufferstart,A1
0002DE82 <AmiBlitz3.ab3@18453>   CMPA.l destbufferend,A1
0002DE86 <AmiBlitz3.ab3@18454>   BCC.w JL_0_B6BC
0002DE8A <AmiBlitz3.ab3@18455>   ADD.l D1,$4(A0)
0002DE8C <AmiBlitz3.ab3@18458>   MOVEA.l (A0),A0
0002DE90 <AmiBlitz3.ab3@18459> BRA.w JL_0_B69A
0002DE96 <AmiBlitz3.ab3@18462>   MOVEA.l pushat,A1
0002DE98 <AmiBlitz3.ab3@18463>   MOVEQ.l #$00,D0
0002DE9E <AmiBlitz3.ab3@18464>   MOVE.w pushclen,D0
0002DEA4 <AmiBlitz3.ab3@18465>   MOVEA.l _execbase,A6
0002DEAA <AmiBlitz3.ab3@18466>   MOVE.l mempool,a0
0002DEAE <AmiBlitz3.ab3@18470>   MOVEM.l (A7)+,D0-D1/A0-A1
0002DEB0 <AmiBlitz3.ab3@18471> RTS
0002DEB2 <AmiBlitz3.ab3@18474>   MOVE.l D1,-(A7)                                          ;array mul
0002DEB4 <AmiBlitz3.ab3@18475>   MOVEQ.l #$00,D2
0002DEB6 <AmiBlitz3.ab3@18476>   MOVEQ.l #$0F,D3
0002DEB8 <AmiBlitz3.ab3@18479>     LSL.w #1,D1
0002DEBC <AmiBlitz3.ab3@18480>     BCC.w JL_0_B6EE
0002DEBE <AmiBlitz3.ab3@18481>     ADDQ.w #1,D2
0002DEC0 <AmiBlitz3.ab3@18482>     MOVE.w D3,D4
0002DEC4 <AmiBlitz3.ab3@18485>   DBF D3,JL_0_B6E4
0002DEC6 <AmiBlitz3.ab3@18487>   SUBQ.w #1,D2
0002DECA <AmiBlitz3.ab3@18488>    BNE.w JL_0_B726
0002DECC <AmiBlitz3.ab3@18489>   ADDQ.w #4,A7
0002DECE <AmiBlitz3.ab3@18490>   MOVE.w D4,D1
0002DED2 <AmiBlitz3.ab3@18491>    BEQ.w JL_0_B724
0002DED6 <AmiBlitz3.ab3@18492>   CMP.w #$8,D1
0002DEDA <AmiBlitz3.ab3@18493>    BCS.w JL_0_B712
0002DEDE <AmiBlitz3.ab3@18494>   SUBI.w #$8,D1
0002DEE2 <AmiBlitz3.ab3@18495>    BSR.w JL_0_B712
0002DEE4 <AmiBlitz3.ab3@18496>   MOVEQ.l #$00,D1
0002DEE6 <AmiBlitz3.ab3@18499>   LSL.w #8,D1
0002DEE8 <AmiBlitz3.ab3@18500>   LSL.w #1,D1
0002DEEC <AmiBlitz3.ab3@18501>   ORI.w #$E188,D1
0002DEF2 <AmiBlitz3.ab3@18502>   OR.w regnum,D1
0002DEF6 <AmiBlitz3.ab3@18503> BRA.w writeword
0002DEF8 <AmiBlitz3.ab3@18506> RTS
0002DEFA <AmiBlitz3.ab3@18509>   MOVEQ #0,d1
0002DF00 <AmiBlitz3.ab3@18510>   MOVE.w regnum,D1
0002DF02 <AmiBlitz3.ab3@18511>   LSL.l #8,D1
0002DF04 <AmiBlitz3.ab3@18513>   LSL.l #4,d1
0002DF0A <AmiBlitz3.ab3@18515>   OR.l #$4c3c0000,d1
0002DF10 <AmiBlitz3.ab3@18516>   OR.w regnum,d1
0002DF14 <AmiBlitz3.ab3@18517>   BSR.w writelong
0002DF16 <AmiBlitz3.ab3@18518>   MOVE.l (A7)+,D1
0002DF1A <AmiBlitz3.ab3@18520> BRA writelong
0002DF20 <AmiBlitz3.ab3@18523>   MOVE.l destpointer,-(A7)
0002DF22 <AmiBlitz3.ab3@18524>   MOVEQ.l #-$01,D7
0002DF26 <AmiBlitz3.ab3@18527>     BSR.w findhilib
0002DF2A <AmiBlitz3.ab3@18528>      BEQ.w JL_0_B8A4
0002DF2E <AmiBlitz3.ab3@18529>     TST.w $C(A2)
0002DF32 <AmiBlitz3.ab3@18530>      BPL.w JL_0_B746
0002DF36 <AmiBlitz3.ab3@18532>     MOVE.l $16(A2),D1
0002DF3A <AmiBlitz3.ab3@18533>     BEQ.w JL_0_B746
0002DF3E <AmiBlitz3.ab3@18535>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002DF42 <AmiBlitz3.ab3@18536>     CMP.w #-$2,D1
0002DF46 <AmiBlitz3.ab3@18537>      BNE.w JL_0_B772
0002DF4A <AmiBlitz3.ab3@18538>     BSR.w makevsize
0002DF4E <AmiBlitz3.ab3@18539> BRA.w JL_0_B7FE
0002DF52 <AmiBlitz3.ab3@18542>     CMP.w #-$5C4,D1
0002DF56 <AmiBlitz3.ab3@18543>      BNE.w JL_0_B790
0002DF5A <AmiBlitz3.ab3@18544>     MOVE.w #$7000,D1
0002DF62 <AmiBlitz3.ab3@18545>     BTST #$7,autorun
0002DF64 <AmiBlitz3.ab3@18546>     SNE D1
0002DF68 <AmiBlitz3.ab3@18547>     BSR.w writeword
0002DF6C <AmiBlitz3.ab3@18548> BRA.w JL_0_B7FE
0002DF70 <AmiBlitz3.ab3@18551>     CMP.w #-$12D,D1
0002DF74 <AmiBlitz3.ab3@18552>      BNE.w JL_0_B7A0
0002DF78 <AmiBlitz3.ab3@18553>     BSR.w makessize
0002DF7C <AmiBlitz3.ab3@18554> BRA.w JL_0_B7FE
0002DF80 <AmiBlitz3.ab3@18557>     CMP.w #-$1F5,D1
0002DF84 <AmiBlitz3.ab3@18558>      BNE.w JL_0_B7C2
0002DF88 <AmiBlitz3.ab3@18559>     MOVE.w #$203C,D1
0002DF8C <AmiBlitz3.ab3@18560>     BSR.w writeword
0002DF90 <AmiBlitz3.ab3@18561>     BSR.w addoff
0002DF96 <AmiBlitz3.ab3@18562>     MOVE.l endop,D1
0002DF9A <AmiBlitz3.ab3@18563>     BSR.w writelong
0002DF9E <AmiBlitz3.ab3@18564> BRA.w JL_0_B7FE
0002DFA2 <AmiBlitz3.ab3@18567>     CMP.w #-$3E9,D1
0002DFA6 <AmiBlitz3.ab3@18568>      BNE.w JL_0_B7E4
0002DFAA <AmiBlitz3.ab3@18569>     MOVE.w #$203C,D1
0002DFAE <AmiBlitz3.ab3@18570>     BSR.w writeword
0002DFB2 <AmiBlitz3.ab3@18571>     BSR.w addoff
0002DFB8 <AmiBlitz3.ab3@18572>     MOVE.l data2at,D1
0002DFBC <AmiBlitz3.ab3@18573>     BSR.w writelong
0002DFC0 <AmiBlitz3.ab3@18574> BRA.w JL_0_B7FE
0002DFC4 <AmiBlitz3.ab3@18577>     CMP.w #$1,D1
0002DFC8 <AmiBlitz3.ab3@18578>      BNE.w JL_0_B7FE
0002DFCC <AmiBlitz3.ab3@18579>     MOVE.w #$203C,D1
0002DFD0 <AmiBlitz3.ab3@18580>     BSR.w writeword
0002DFD6 <AmiBlitz3.ab3@18581>     MOVE.l ptr_seg_debugger,D1
0002DFDA <AmiBlitz3.ab3@18582>     BSR.w writelong
0002DFDE <AmiBlitz3.ab3@18585>     MOVE.l $16(A2),D1
0002DFE6 <AmiBlitz3.ab3@18586>     MOVE.w #$FFFF,lasta6
0002DFEA <AmiBlitz3.ab3@18587>     BSR.w Amakelibsub
0002DFF0 <AmiBlitz3.ab3@18588>     CMPI.w #$FFFE,$4(A2)
0002DFF4 <AmiBlitz3.ab3@18589>      BNE.w JL_0_B83A
0002DFFA <AmiBlitz3.ab3@18590>     MOVE.l intdata1,D1
0002DFFE <AmiBlitz3.ab3@18591>      BEQ.w JL_0_B83A
0002E004 <AmiBlitz3.ab3@18592>     MOVE.w putidata1,D1
0002E008 <AmiBlitz3.ab3@18593>     BSR.w writeword
0002E00C <AmiBlitz3.ab3@18594>     BSR.w addoff
0002E012 <AmiBlitz3.ab3@18595>     MOVE.l intdata1,D1
0002E016 <AmiBlitz3.ab3@18596>     BSR.w writelong
0002E01A <AmiBlitz3.ab3@18599>     MOVE.w #$2B40,D1
0002E01E <AmiBlitz3.ab3@18600>     TST.w $1A(A2)
0002E022 <AmiBlitz3.ab3@18601>      BEQ.w JL_0_B746
0002E026 <AmiBlitz3.ab3@18602>      BPL.w JL_0_B84E
0002E02A <AmiBlitz3.ab3@18603>     MOVE.w #$3B40,D1
0002E02E <AmiBlitz3.ab3@18606>     BSR.w writeword
0002E032 <AmiBlitz3.ab3@18607>     MOVE.w $A(A2),D1
0002E036 <AmiBlitz3.ab3@18608>      BSR.w writeword
0002E03C <AmiBlitz3.ab3@18609>     CMPI.w #$FFFA,$4(A2)
0002E040 <AmiBlitz3.ab3@18610>      BNE.w JL_0_B746
0002E042 <AmiBlitz3.ab3@18611>     MOVE.w D7,-(A7)
0002E048 <AmiBlitz3.ab3@18612>     MOVE.w numstatic,D4
0002E04C <AmiBlitz3.ab3@18613>      BEQ.w JL_0_B882
0002E052 <AmiBlitz3.ab3@18614>     MOVE.l staticdata,D3
0002E058 <AmiBlitz3.ab3@18615>      JSR datastart
0002E05C <AmiBlitz3.ab3@18616>     MOVE.w #$C500,D1
0002E060 <AmiBlitz3.ab3@18617>      BSR.w tokejsr2
0002E066 <AmiBlitz3.ab3@18620>     MOVE.w maxsused,D4
0002E06A <AmiBlitz3.ab3@18621>      BEQ.w JL_0_B89E
0002E070 <AmiBlitz3.ab3@18622>     MOVE.l maxsat,D3
0002E076 <AmiBlitz3.ab3@18623>      JSR datastart
0002E07A <AmiBlitz3.ab3@18624>     MOVE.w #$CF00,D1
0002E07E <AmiBlitz3.ab3@18625>      BSR.w tokejsr2
0002E080 <AmiBlitz3.ab3@18628>     MOVE.w (A7)+,D7
0002E084 <AmiBlitz3.ab3@18629> BRA.w JL_0_B746
0002E08A <AmiBlitz3.ab3@18632>   MOVE.l destpointer,D1
0002E08C <AmiBlitz3.ab3@18633>   CMP.l (A7),D1
0002E090 <AmiBlitz3.ab3@18634>    BNE.w JL_0_B8BC
0002E098 <AmiBlitz3.ab3@18635>   MOVE.w #$0008,noinits+2
0002E09C <AmiBlitz3.ab3@18636> BRA.w JL_0_B8E6
0002E0A2 <AmiBlitz3.ab3@18639>   CLR.w noinits+2
0002E0A8 <AmiBlitz3.ab3@18640>   MOVE.w dontwrite,D1
0002E0AC <AmiBlitz3.ab3@18641>    BNE.w JL_0_B8DE
0002E0B2 <AmiBlitz3.ab3@18642>   TST.l newinitaddr
0002E0B6 <AmiBlitz3.ab3@18643>    BEQ 'l10
0002E0BC <AmiBlitz3.ab3@18644>   MOVE.l newinitaddr,D2
0002E0C2 <AmiBlitz3.ab3@18645>   SUB.l destbufferstart,D2
0002E0C4 <AmiBlitz3.ab3@18646>   ADDQ.l #2,d2
0002E0CA <AmiBlitz3.ab3@18647>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002E0CE <AmiBlitz3.ab3@18649>   MOVE.w #$4EB9,(A0)+
0002E0D0 <AmiBlitz3.ab3@18650>   MOVE.l (A7),(A0)+
0002E0D4 <AmiBlitz3.ab3@18652> BRA 'l20
0002E0DA <AmiBlitz3.ab3@18655>   MOVEA.l destbufferstart,A0                               ;write initcode
0002E0E0 <AmiBlitz3.ab3@18656>   TST.b saved0
0002E0E4 <AmiBlitz3.ab3@18657>   BEQ 'l1
0002E0E8 <AmiBlitz3.ab3@18658>   MOVE.w #$23c0,(a0)+
0002E0EA <AmiBlitz3.ab3@18659>   MOVE.l a0,a1
0002E0EC <AmiBlitz3.ab3@18660>   ADDQ.l #6,a1
0002E0EE <AmiBlitz3.ab3@18661>   MOVE.l a1,(a0)+
0002E0F0 <AmiBlitz3.ab3@18662>   MOVEQ.l #$02,D2
0002E0F4 <AmiBlitz3.ab3@18663>   BSR.w addhunkoffset
0002E0F8 <AmiBlitz3.ab3@18664>   MOVE.w #$6004,(a0)+
0002E0FE <AmiBlitz3.ab3@18665>   MOVE.l #$4e714e71,(a0)+
0002E102 <AmiBlitz3.ab3@18668>   MOVE.w #$4EB9,(A0)+
0002E104 <AmiBlitz3.ab3@18669>   MOVE.l (A7),(A0)+
0002E106 <AmiBlitz3.ab3@18670>   MOVEQ #2,d2
0002E10C <AmiBlitz3.ab3@18671>   TST.b saved0
0002E110 <AmiBlitz3.ab3@18672>   BEQ 'l20
0002E112 <AmiBlitz3.ab3@18673>   MOVEQ.l #14,D2
0002E116 <AmiBlitz3.ab3@18676>   BSR.w addhunkoffset
0002E11A <AmiBlitz3.ab3@18677>   MOVE.w #$2039,(a0)+
0002E11C <AmiBlitz3.ab3@18678>   MOVE.l a1,(a0)+
0002E11E <AmiBlitz3.ab3@18679>   MOVEQ.l #20,d2
0002E122 <AmiBlitz3.ab3@18682>   BSR.w addhunkoffset
0002E126 <AmiBlitz3.ab3@18685>   MOVE.w #$4E75,D1
0002E12A <AmiBlitz3.ab3@18686>   BSR.w writeword
0002E12C <AmiBlitz3.ab3@18689>   ADDQ.w #4,A7
0002E12E <AmiBlitz3.ab3@18690> RTS
0002E132 <AmiBlitz3.ab3@18695>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002E138 <AmiBlitz3.ab3@18697>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002E13E <AmiBlitz3.ab3@18699>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002E144 <AmiBlitz3.ab3@18704>   MOVE.l stringbuffer,D1
0002E148 <AmiBlitz3.ab3@18705> BRA.w makesize
0002E14A <AmiBlitz3.ab3@18708>   MOVEQ.l #$00,D1
0002E150 <AmiBlitz3.ab3@18709>   MOVE.w globalvarpointer,D1
0002E154 <AmiBlitz3.ab3@18710>   SUBI.w #$8000,D1
0002E158 <AmiBlitz3.ab3@18711>   BNE.w makesize
0002E15A <AmiBlitz3.ab3@18712>     MOVEQ.l #$08,D1
0002E15C <AmiBlitz3.ab3@18715>   MOVE.l D1,-(A7)
0002E160 <AmiBlitz3.ab3@18716>   MOVE.w #$203C,D1
0002E164 <AmiBlitz3.ab3@18717>   BSR.w writeword
0002E166 <AmiBlitz3.ab3@18718>   MOVE.l (A7)+,D1
0002E16A <AmiBlitz3.ab3@18719> BRA.w writelong
0002E16C <AmiBlitz3.ab3@18727>   MOVEQ.l #$00,D1
0002E172 <AmiBlitz3.ab3@18728>   MOVEA.l libpointer,A1
0002E176 <AmiBlitz3.ab3@18731>     CMPA.w #$0,A1
0002E17A <AmiBlitz3.ab3@18732>     BEQ.w findhilib__done
0002E17E <AmiBlitz3.ab3@18733>       CMP.w $4(A1),D7
0002E182 <AmiBlitz3.ab3@18734>       BLS.w findhilib__next
0002E186 <AmiBlitz3.ab3@18735>         CMP.w $4(A1),D1
0002E18A <AmiBlitz3.ab3@18736>         BCC.w findhilib__next
0002E18E <AmiBlitz3.ab3@18737>           MOVE.w $4(A1),D1
0002E190 <AmiBlitz3.ab3@18738>           MOVEA.l A1,A2
0002E192 <AmiBlitz3.ab3@18741>     MOVEA.l (A1),A1
0002E196 <AmiBlitz3.ab3@18742> BRA.w findhilib__loop
0002E198 <AmiBlitz3.ab3@18745>   MOVE.w D1,D7
0002E19A <AmiBlitz3.ab3@18746> RTS
0002E19C <AmiBlitz3.ab3@18754>   MOVEQ.l #-$01,D1
0002E1A2 <AmiBlitz3.ab3@18755>   MOVEA.l libpointer,A1
0002E1A6 <AmiBlitz3.ab3@18758>     CMPA.w #$0,A1
0002E1AA <AmiBlitz3.ab3@18759>      BEQ.w findlolib__done
0002E1AE <AmiBlitz3.ab3@18760>     CMP.w $4(A1),D7
0002E1B2 <AmiBlitz3.ab3@18761>      BCC.w findlolib__next
0002E1B6 <AmiBlitz3.ab3@18762>     CMP.w $4(A1),D1
0002E1BA <AmiBlitz3.ab3@18763>      BLS.w findlolib__next
0002E1BE <AmiBlitz3.ab3@18764>     MOVE.w $4(A1),D1
0002E1C0 <AmiBlitz3.ab3@18765>     MOVEA.l A1,A2
0002E1C2 <AmiBlitz3.ab3@18768>     MOVEA.l (A1),A1
0002E1C6 <AmiBlitz3.ab3@18769> BRA.w findlolib__loop
0002E1C8 <AmiBlitz3.ab3@18772>   MOVE.w D1,D7
0002E1CC <AmiBlitz3.ab3@18773>   CMP.w #-$1,D1
0002E1CE <AmiBlitz3.ab3@18774> RTS
0002E1D4 <AmiBlitz3.ab3@18778>   ADDQ.w #1,globalvarpointer
0002E1DC <AmiBlitz3.ab3@18779>   BCLR #$0,globalvarpointer+1
0002E1DE <AmiBlitz3.ab3@18780>   MOVEQ.l #$00,D7
0002E1E2 <AmiBlitz3.ab3@18783>     BSR.w findlolib
0002E1E6 <AmiBlitz3.ab3@18784>     BEQ.w JL_0_BA74
0002E1EA <AmiBlitz3.ab3@18785>     TST.w $C(A2)
0002E1EE <AmiBlitz3.ab3@18786>     BPL.w JL_0_B99A
0002E1F0 <AmiBlitz3.ab3@18787>     MOVEA.l A2,A1
0002E1F4 <AmiBlitz3.ab3@18788>     ADDA.l $12(A1),A1
0002E1F8 <AmiBlitz3.ab3@18789>     TST.w -$2(A1)
0002E1FC <AmiBlitz3.ab3@18790>     BEQ.w JL_0_BA34
0002E200 <AmiBlitz3.ab3@18791>     MOVE.l -$A(A1),D1
0002E204 <AmiBlitz3.ab3@18792>     LEA $6(A2,D1.L),A3
0002E206 <AmiBlitz3.ab3@18795>       TST.w (A3)+
0002E20A <AmiBlitz3.ab3@18796>       BEQ.w JL_0_B9CC
0002E20C <AmiBlitz3.ab3@18797>         ADDQ.w #2,A3
0002E210 <AmiBlitz3.ab3@18798> BRA.w JL_0_B9C0
0002E214 <AmiBlitz3.ab3@18801>     TST.l $4(A3)
0002E218 <AmiBlitz3.ab3@18802>     BEQ.w JL_0_BA34
0002E21C <AmiBlitz3.ab3@18803>       MOVE.w freemax(PC),D1
0002E220 <AmiBlitz3.ab3@18804>       BSR.w writeword
0002E224 <AmiBlitz3.ab3@18805>       MOVE.w -$4(A1),D1
0002E228 <AmiBlitz3.ab3@18806>       BSR.w writeword
0002E22E <AmiBlitz3.ab3@18807>       MOVE.l free,D1
0002E232 <AmiBlitz3.ab3@18808>       MOVE.w -$6(A1),D1
0002E236 <AmiBlitz3.ab3@18809>       BSR.w writelong
0002E23C <AmiBlitz3.ab3@18810>       MOVE.l destpointer,-(A7)
0002E23E <AmiBlitz3.ab3@18811>       MOVEQ.l #$01,D1
0002E242 <AmiBlitz3.ab3@18812>       MOVE.w -$2(A1),D2
0002E244 <AmiBlitz3.ab3@18813>       LSL.w D2,D1
0002E246 <AmiBlitz3.ab3@18814>       MOVE.w D1,-(A7)
0002E24A <AmiBlitz3.ab3@18815>       MOVE.l -$A(A1),D1
0002E24E <AmiBlitz3.ab3@18816>       BSR.w Amakelibsub
0002E252 <AmiBlitz3.ab3@18817>       MOVE.w freemax3(PC),D1
0002E256 <AmiBlitz3.ab3@18818>       BSR.w writeword
0002E258 <AmiBlitz3.ab3@18819>       MOVE.w (A7)+,D1
0002E25C <AmiBlitz3.ab3@18820>       BSR.w writeword
0002E260 <AmiBlitz3.ab3@18821>       MOVE.l freemax2(PC),D1
0002E264 <AmiBlitz3.ab3@18822>       BSR.w writelong
0002E266 <AmiBlitz3.ab3@18823>       MOVE.l (A7)+,D1
0002E26C <AmiBlitz3.ab3@18824>       SUB.l destpointer,D1
0002E270 <AmiBlitz3.ab3@18825>       BSR.w writeword
0002E274 <AmiBlitz3.ab3@18826>       MOVE.w freemax4(PC),D1
0002E278 <AmiBlitz3.ab3@18827>       BSR.w writeword
0002E27C <AmiBlitz3.ab3@18830>     MOVE.l $1C(A2),D1
0002E280 <AmiBlitz3.ab3@18831>     BEQ.w JL_0_B99A
0002E284 <AmiBlitz3.ab3@18833>     MOVE.w $4(A2),D1
0002E288 <AmiBlitz3.ab3@18834>     CMP.w #-$2,D1
0002E28C <AmiBlitz3.ab3@18835>     BNE.w JL_0_BA50
0002E290 <AmiBlitz3.ab3@18836>       BSR.w makevsize
0002E294 <AmiBlitz3.ab3@18837> BRA.w JL_0_BA60
0002E298 <AmiBlitz3.ab3@18840>     CMP.w #-$12D,D1
0002E29C <AmiBlitz3.ab3@18841>     BNE.w JL_0_BA60
0002E2A0 <AmiBlitz3.ab3@18842>       BSR.w makessize
0002E2A4 <AmiBlitz3.ab3@18843> BRA.w JL_0_BA60
0002E2A8 <AmiBlitz3.ab3@18846>     MOVE.l $1C(A2),D1
0002E2B0 <AmiBlitz3.ab3@18847>     MOVE.w #$FFFF,lasta6
0002E2B4 <AmiBlitz3.ab3@18848>     BSR.w Amakelibsub
0002E2B8 <AmiBlitz3.ab3@18849> BRA.w JL_0_B99A
0002E2BA <AmiBlitz3.ab3@18852> RTS
0002E2BE <AmiBlitz3.ab3@18856> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002E2C0 <AmiBlitz3.ab3@18858> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002E2C4 <AmiBlitz3.ab3@18859>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002E2C6 <AmiBlitz3.ab3@18860> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002E2CA <AmiBlitz3.ab3@18861> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002E2D0 <AmiBlitz3.ab3@18866>   TST.b debugmode
0002E2D4 <AmiBlitz3.ab3@18867>    BEQ.b chkstak__skip
0002E2DA <AmiBlitz3.ab3@18868>   TST.w debugversion
0002E2DE <AmiBlitz3.ab3@18869>    BNE.b chkstak__skip
0002E2E2 <AmiBlitz3.ab3@18870>   MOVE.w #$C308,D1
0002E2E6 <AmiBlitz3.ab3@18871> BRA.w Atokejsr
0002E2E8 <AmiBlitz3.ab3@18874> RTS
0002E2F0 <AmiBlitz3.ab3@18878>   MOVE.w #$FFFF,lasta6
0002E2F4 <AmiBlitz3.ab3@18883>   MOVEM.l D0-d7/A0-a6,-(A7)
0002E2FC <AmiBlitz3.ab3@18884>   MOVE.b #1,nostringopt
0002E302 <AmiBlitz3.ab3@18885>   JSR searchinstr
0002E304 <AmiBlitz3.ab3@18886>   MOVE.l A3,D1
0002E306 <AmiBlitz3.ab3@18887>   SUB.l A2,D1
0002E30A <AmiBlitz3.ab3@18888>   BSR.w Amakelibsub
0002E30E <AmiBlitz3.ab3@18889>   MOVEM.l (A7)+,d0-d7/a0-a6
0002E310 <AmiBlitz3.ab3@18890> RTS
0002E316 <AmiBlitz3.ab3@18897>   MOVE.l libisat,-(A7)                                   ;library write
0002E31C <AmiBlitz3.ab3@18898>   MOVE.l A2,libisat
0002E31E <AmiBlitz3.ab3@18900>   MOVEA.l A1,A2
0002E320 <AmiBlitz3.ab3@18901>   MOVE.w (A2)+,D1
0002E326 <AmiBlitz3.ab3@18902>   MOVE.l a2,lastinstructionaddr
0002E32A <AmiBlitz3.ab3@18903>   ANDI.w #$FF,D1
0002E32C <AmiBlitz3.ab3@18904>   ADDA.w D1,A2
0002E32E <AmiBlitz3.ab3@18905>   EXG.l D0,A2
0002E330 <AmiBlitz3.ab3@18906>   ADDQ.l #1,D0
0002E334 <AmiBlitz3.ab3@18907>   BCLR #$0,D0
0002E336 <AmiBlitz3.ab3@18908>   EXG.l D0,A2
0002E33A <AmiBlitz3.ab3@18909> BRA.w JL_0_BB08
0002E340 <AmiBlitz3.ab3@18913>   MOVE.l libisat,-(A7)
0002E346 <AmiBlitz3.ab3@18914>   MOVE.l A2,libisat
0002E348 <AmiBlitz3.ab3@18915>   MOVEA.l A3,A2
0002E34C <AmiBlitz3.ab3@18916> BRA.w JL_0_BB08
0002E34E <AmiBlitz3.ab3@18920>   MOVE.l a1,-(a7)
0002E350 <AmiBlitz3.ab3@18923>   MOVE.l d0,a0
0002E354 <AmiBlitz3.ab3@18924>   MOVE.l $a(a0),d0
0002E356 <AmiBlitz3.ab3@18925>   MOVE.l d0,a1
0002E35E <AmiBlitz3.ab3@18926>   CMP.l #8,4(a1)
0002E362 <AmiBlitz3.ab3@18927>   BLE 'norec
0002E364 <AmiBlitz3.ab3@18928>   MOVE.l a0,-(a7)
0002E36A <AmiBlitz3.ab3@18929>   MOVE.l typebase,-(a7)
0002E36C <AmiBlitz3.ab3@18930>   MOVEQ #0,d0
0002E370 <AmiBlitz3.ab3@18931>   MOVE.w 4(a0),d0
0002E376 <AmiBlitz3.ab3@18932>   ADD.l d0,typebase
0002E37A <AmiBlitz3.ab3@18933>   MOVE.l $4(a1),d0
0002E37E <AmiBlitz3.ab3@18934>   BSR scantype
0002E384 <AmiBlitz3.ab3@18935>   MOVE.l (a7)+,typebase
0002E386 <AmiBlitz3.ab3@18936>   MOVE.l (a7)+,a0
0002E38C <AmiBlitz3.ab3@18939>   CMP.l #newtype_string,d0
0002E390 <AmiBlitz3.ab3@18940>   BNE 'nostring
0002E396 <AmiBlitz3.ab3@18941>   ADDQ #2,a2offset
0002E39C <AmiBlitz3.ab3@18942>   MOVE.l #$3f3c0000,d1
0002E39E <AmiBlitz3.ab3@18943>   MOVEQ #0,d0
0002E3A2 <AmiBlitz3.ab3@18944>   MOVE.w 4(a0),d0
0002E3A8 <AmiBlitz3.ab3@18945>   ADD.l typebase,d0
0002E3AA <AmiBlitz3.ab3@18946>   MOVE.w d0,d1
0002E3AE <AmiBlitz3.ab3@18947>   BSR writelong
0002E3B4 <AmiBlitz3.ab3@18948>   TST.b debugmode
0002E3B8 <AmiBlitz3.ab3@18949>   BEQ 'l1a
0002E3BA <AmiBlitz3.ab3@18950>   MOVE.l d1,-(a7)
0002E3C0 <AmiBlitz3.ab3@18951>   MOVE.l #$c308,d1
0002E3C6 <AmiBlitz3.ab3@18952>   JSR Atokejsr
0002E3C8 <AmiBlitz3.ab3@18953>   MOVE.l (a7)+,d1
0002E3CC <AmiBlitz3.ab3@18956>   TST.w 8(a0)
0002E3D0 <AmiBlitz3.ab3@18957>   BEQ 'nostring
0002E3D4 <AmiBlitz3.ab3@18958>   MOVEM.l d2/d3,-(a7)
0002E3D6 <AmiBlitz3.ab3@18959>   MOVE.l d1,d2
0002E3D8 <AmiBlitz3.ab3@18960>   MOVEQ #0,d3
0002E3DC <AmiBlitz3.ab3@18961>   MOVE.w 8(a0),d3
0002E3DE <AmiBlitz3.ab3@18962>   SUBQ.l #1,d3
0002E3E2 <AmiBlitz3.ab3@18963>   BEQ 'nostring2
0002E3E4 <AmiBlitz3.ab3@18966>   ADDQ.l #4,d2
0002E3E6 <AmiBlitz3.ab3@18967>   MOVE.l d2,d1
0002E3EA <AmiBlitz3.ab3@18968>   BSR writelong
0002E3F0 <AmiBlitz3.ab3@18969>   TST.b debugmode
0002E3F4 <AmiBlitz3.ab3@18970>   BEQ 'l1
0002E3FA <AmiBlitz3.ab3@18971>   MOVE.l #$c308,d1
0002E400 <AmiBlitz3.ab3@18972>   JSR Atokejsr
0002E406 <AmiBlitz3.ab3@18975>   ADDQ #2,a2offset
0002E408 <AmiBlitz3.ab3@18976>   SUBQ.l #1,d3
0002E40C <AmiBlitz3.ab3@18977>   BNE 'loop
0002E410 <AmiBlitz3.ab3@18980>   MOVEM.l (a7)+,d2/d3
0002E412 <AmiBlitz3.ab3@18983>   MOVE.l (a0),d0
0002E416 <AmiBlitz3.ab3@18984>   BNE 'more
0002E418 <AmiBlitz3.ab3@18985>   MOVE.l (a7)+,a1
0002E41A <AmiBlitz3.ab3@18986> RTS
0002E41E <AmiBlitz3.ab3@18989> libisat:   Ds.l 1
0002E424 <AmiBlitz3.ab3@18995>   MOVE.l libisat,-(A7)                                   
0002E42A <AmiBlitz3.ab3@18996>   MOVE.l A2,libisat
0002E42E <AmiBlitz3.ab3@18997>   LEA $6(A2,D1.L),A2
0002E436 <AmiBlitz3.ab3@19001>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002E43A <AmiBlitz3.ab3@19002>   BEQ 'dowritevar
0002E442 <AmiBlitz3.ab3@19003>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002E446 <AmiBlitz3.ab3@19004>   BEQ 'dowritevar
0002E44E <AmiBlitz3.ab3@19005>   CMP.l #$3e175265,$1c(a2)
0002E452 <AmiBlitz3.ab3@19006>   BEQ 'dowritevar
0002E45A <AmiBlitz3.ab3@19007>   CMP.l #$3e165772,$1c(a2)
0002E45E <AmiBlitz3.ab3@19008>   BNE 'nowritef
0002E462 <AmiBlitz3.ab3@19011>   MOVEM.l a0-a2/d2,-(a7)
0002E464 <AmiBlitz3.ab3@19012>   MOVEQ #0,d1
0002E46E <AmiBlitz3.ab3@19013>   MOVE.l #0,typebase
0002E472 <AmiBlitz3.ab3@19014>   MOVE.l $a(a3),a0
0002E476 <AmiBlitz3.ab3@19015>   MOVE.l $4(a0),d0
0002E47C <AmiBlitz3.ab3@19016>   CMP.l #8,d0
0002E480 <AmiBlitz3.ab3@19017>   BLE 'notype
0002E484 <AmiBlitz3.ab3@19018>   BSR scantype
0002E48A <AmiBlitz3.ab3@19021>   MOVE.l #$3f3c0000,d1
0002E490 <AmiBlitz3.ab3@19022>   MOVE.w a2offset,d1
0002E494 <AmiBlitz3.ab3@19023>   BSR writelong
0002E49A <AmiBlitz3.ab3@19024>   MOVE.l #$3f3c0000,d1
0002E49E <AmiBlitz3.ab3@19025>   MOVE.l $a(a3),a0
0002E4A2 <AmiBlitz3.ab3@19026>   MOVE.w 8(a0),d1
0002E4A6 <AmiBlitz3.ab3@19027>   BSR writelong
0002E4AC <AmiBlitz3.ab3@19028>   MOVE.l #$3f3cab12,d1
0002E4B0 <AmiBlitz3.ab3@19029>   BSR writelong
0002E4B6 <AmiBlitz3.ab3@19030>   ADDQ.w #6,a2offset
0002E4BA <AmiBlitz3.ab3@19031>   MOVEM.l (a7)+,a0-a2/d2
0002E4C0 <AmiBlitz3.ab3@19034>   TST.b fpu
0002E4C4 <AmiBlitz3.ab3@19035>   BEQ 'nofpu2
0002E4CC <AmiBlitz3.ab3@19036>   CMP.l #$496e7400,$1a(a2)
0002E4D0 <AmiBlitz3.ab3@19037>   BNE 'noint
0002E4D2 <AmiBlitz3.ab3@19038>   MOVEQ #0,d1
0002E4D8 <AmiBlitz3.ab3@19039>   SUBQ.l #8,destpointer                                    ;fpu int
0002E4DE <AmiBlitz3.ab3@19040>   CLR.w a2offset
0002E4E2 <AmiBlitz3.ab3@19041>   CMP.b #2,d2
0002E4E6 <AmiBlitz3.ab3@19042>   BGT 'noword
0002E4EA <AmiBlitz3.ab3@19043>   MOVE.w #$48c0,d1
0002E4F0 <AmiBlitz3.ab3@19044>   OR.w regnumstore,d1
0002E4F4 <AmiBlitz3.ab3@19045>   BSR writeword
0002E4F8 <AmiBlitz3.ab3@19046> BRA 'exit2
0002E4FC <AmiBlitz3.ab3@19049>    CMP.b #3,d2
0002E500 <AmiBlitz3.ab3@19050>         BNE 'nolong
0002E504 <AmiBlitz3.ab3@19051> BRA 'exit2
0002E508 <AmiBlitz3.ab3@19054>    CMP.b #4,d2
0002E50C <AmiBlitz3.ab3@19055>         BNE 'noquick
0002E510 <AmiBlitz3.ab3@19056>         MOVE.w #$e080,d1
0002E516 <AmiBlitz3.ab3@19057>         OR.w regnumstore,d1
0002E51A <AmiBlitz3.ab3@19058>         BSR writeword
0002E51E <AmiBlitz3.ab3@19059>         MOVE.w #$e080,d1
0002E524 <AmiBlitz3.ab3@19060>         OR.w regnumstore,d1
0002E528 <AmiBlitz3.ab3@19061>         BSR writeword
0002E52C <AmiBlitz3.ab3@19062> BRA 'exit2
0002E52E <AmiBlitz3.ab3@19065>         MOVEQ #0,d0
0002E530 <AmiBlitz3.ab3@19066>         MOVEQ #0,d1
0002E536 <AmiBlitz3.ab3@19067>         MOVE.w regnumstore,d0
0002E538 <AmiBlitz3.ab3@19068>         ASL.l #7,d0
0002E53E <AmiBlitz3.ab3@19069>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002E540 <AmiBlitz3.ab3@19070>         OR.l d0,d1
0002E546 <AmiBlitz3.ab3@19072>         MOVE.l #$3f000000,d1
0002E548 <AmiBlitz3.ab3@19074>         MOVEQ #0,d0
0002E54A <AmiBlitz3.ab3@19075>         MOVEQ #0,d1
0002E550 <AmiBlitz3.ab3@19076>         MOVE.w regnumstore,d0
0002E552 <AmiBlitz3.ab3@19077>         ASL.l #7,d0
0002E554 <AmiBlitz3.ab3@19078>         MOVE.l d0,d1
0002E55A <AmiBlitz3.ab3@19079>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002E55C <AmiBlitz3.ab3@19080>         ASL.l #3,d0
0002E55E <AmiBlitz3.ab3@19081>         OR.l d0,d1
0002E562 <AmiBlitz3.ab3@19082>         BSR writelong
0002E564 <AmiBlitz3.ab3@19083>         MOVEQ #0,d0
0002E56A <AmiBlitz3.ab3@19084>         MOVE.w regnumstore,d0
0002E56C <AmiBlitz3.ab3@19085>         ASL.l #7,d0
0002E572 <AmiBlitz3.ab3@19086>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002E574 <AmiBlitz3.ab3@19087>         OR.l d0,d1
0002E576 <AmiBlitz3.ab3@19088>         ASL.l #1,d0
0002E578 <AmiBlitz3.ab3@19089>         ASL.l #8,d0
0002E57A <AmiBlitz3.ab3@19090>         OR.l d0,d1
0002E57E <AmiBlitz3.ab3@19091> BRA 'exit
0002E584 <AmiBlitz3.ab3@19094>   CMP.w #$3c01,24(a2)
0002E588 <AmiBlitz3.ab3@19095>   BNE 'noval
0002E58A <AmiBlitz3.ab3@19096>   MOVE.l a2,-(a7)
0002E58E <AmiBlitz3.ab3@19097>   BSR.w JL_0_BB14
0002E590 <AmiBlitz3.ab3@19098>   MOVE.l (a7)+,a2
0002E594 <AmiBlitz3.ab3@19099> BRA 'exit2
0002E59C <AmiBlitz3.ab3@19116>   CMP.l #$41627300,$1a(a2)
0002E5A0 <AmiBlitz3.ab3@19117>   BNE 'noabs
0002E5A2 <AmiBlitz3.ab3@19118>   MOVEQ #0,d1
0002E5A8 <AmiBlitz3.ab3@19119>   MOVE.w regnumstore,d1
0002E5AA <AmiBlitz3.ab3@19120>   MOVE.w d1,d0
0002E5AC <AmiBlitz3.ab3@19121>   ASL.w #7,d1
0002E5AE <AmiBlitz3.ab3@19122>   ASL.w #8,d0
0002E5B0 <AmiBlitz3.ab3@19123>   ASL.w #2,d0
0002E5B2 <AmiBlitz3.ab3@19124>   OR.w d0,d1
0002E5B8 <AmiBlitz3.ab3@19125>   SUBQ.l #8,destpointer                                    ;fpu abs
0002E5BC <AmiBlitz3.ab3@19126>   MOVEM.l d3/d1,-(a7)
0002E5C0 <AmiBlitz3.ab3@19127>   MOVE.w #5,d3
0002E5C2 <AmiBlitz3.ab3@19128>   EXG d2,d3
0002E5C8 <AmiBlitz3.ab3@19129>   MOVE.w regnum,-(a7)
0002E5D2 <AmiBlitz3.ab3@19130>   MOVE.w regnumstore,regnum
0002E5D6 <AmiBlitz3.ab3@19131>   BSR writeconvertcode
0002E5DC <AmiBlitz3.ab3@19132>   MOVE.w (a7)+,regnum
0002E5DE <AmiBlitz3.ab3@19133>   EXG d2,d3
0002E5E2 <AmiBlitz3.ab3@19134>   MOVEM.l (a7)+,d3/d1
0002E5E8 <AmiBlitz3.ab3@19135>   OR.l #$f2000018,d1
0002E5EE <AmiBlitz3.ab3@19136>   CLR.w a2offset
0002E5F2 <AmiBlitz3.ab3@19137> BRA 'exit
0002E5F6 <AmiBlitz3.ab3@19140>   CMP.b #5,d2
0002E5FA <AmiBlitz3.ab3@19141>   BNE 'nofpu2
0002E5FE <AmiBlitz3.ab3@19142>   MOVE.b 24(a2),d0
0002E602 <AmiBlitz3.ab3@19143>   CMP.b #$60,d0                                            ;nolib $edxx
0002E606 <AmiBlitz3.ab3@19144>   BNE 'nofpu
0002E608 <AmiBlitz3.ab3@19145>   MOVEQ #0,d1
0002E60E <AmiBlitz3.ab3@19146>   MOVE.w regnumstore,d1
0002E610 <AmiBlitz3.ab3@19147>   MOVE.w d1,d0
0002E612 <AmiBlitz3.ab3@19148>   ASL.w #7,d1
0002E614 <AmiBlitz3.ab3@19149>   ASL.w #8,d0
0002E616 <AmiBlitz3.ab3@19150>   ASL.w #2,d0
0002E618 <AmiBlitz3.ab3@19151>   OR.w d0,d1
0002E61C <AmiBlitz3.ab3@19152>   MOVE.b 25(a2),d0
0002E620 <AmiBlitz3.ab3@19153>   CMP.b #5,d0
0002E624 <AmiBlitz3.ab3@19154>   BNE 'nocos
0002E62A <AmiBlitz3.ab3@19155>   OR.l #$f200001d,d1                                       ;fpu cos
0002E62E <AmiBlitz3.ab3@19156> BRA 'exit
0002E632 <AmiBlitz3.ab3@19159>   CMP.b #$c,d0
0002E636 <AmiBlitz3.ab3@19160>   BNE 'nosqr
0002E63C <AmiBlitz3.ab3@19161>   OR.l #$f2000004,d1                                       ;fpu sqr
0002E640 <AmiBlitz3.ab3@19162> BRA 'exit
0002E644 <AmiBlitz3.ab3@19165>   CMP.b #$d,d0
0002E648 <AmiBlitz3.ab3@19166>   BNE 'notan
0002E64E <AmiBlitz3.ab3@19167>   OR.l #$f200000f,d1                                       ;fpu tan
0002E652 <AmiBlitz3.ab3@19168> BRA 'exit
0002E656 <AmiBlitz3.ab3@19171>   CMP.b #$a,d0
0002E65A <AmiBlitz3.ab3@19172>   BNE 'nosin
0002E660 <AmiBlitz3.ab3@19173>   OR.l #$f200000e,d1                                       ;fpu sin
0002E664 <AmiBlitz3.ab3@19174> BRA 'exit
0002E668 <AmiBlitz3.ab3@19177>   CMP.b #$3,d0
0002E66C <AmiBlitz3.ab3@19178>   BNE 'noasin
0002E672 <AmiBlitz3.ab3@19179>   OR.l #$f200000c,d1                                       ;fpu asin
0002E676 <AmiBlitz3.ab3@19180> BRA 'exit
0002E67A <AmiBlitz3.ab3@19183>   CMP.b #$2,d0
0002E67E <AmiBlitz3.ab3@19184>   BNE 'noacos
0002E684 <AmiBlitz3.ab3@19185>   OR.l #$f200001c,d1                                       ;fpu acos
0002E688 <AmiBlitz3.ab3@19186> BRA 'exit
0002E68C <AmiBlitz3.ab3@19189>   CMP.b #$4,d0
0002E690 <AmiBlitz3.ab3@19190>   BNE 'noatan
0002E696 <AmiBlitz3.ab3@19191>   OR.l #$f200000a,d1                                       ;fpu atan
0002E69A <AmiBlitz3.ab3@19192> BRA 'exit
0002E69E <AmiBlitz3.ab3@19195>   CMP.b #$e,d0
0002E6A2 <AmiBlitz3.ab3@19196>   BNE 'nohtan
0002E6A8 <AmiBlitz3.ab3@19197>   OR.l #$f2000009,d1                                       ;fpu htan
0002E6AC <AmiBlitz3.ab3@19198> BRA 'exit
0002E6B0 <AmiBlitz3.ab3@19201>   CMP.b #$6,d0
0002E6B4 <AmiBlitz3.ab3@19202>   BNE 'nohcos
0002E6BA <AmiBlitz3.ab3@19203>   OR.l #$f2000019,d1                                       ;fpu hcos
0002E6BE <AmiBlitz3.ab3@19204> BRA 'exit
0002E6C2 <AmiBlitz3.ab3@19207>   CMP.b #$b,d0
0002E6C6 <AmiBlitz3.ab3@19208>   BNE 'nohsin
0002E6CC <AmiBlitz3.ab3@19209>   OR.l #$f2000002,d1                                       ;fpu hsin
0002E6D0 <AmiBlitz3.ab3@19210> BRA 'exit
0002E6D4 <AmiBlitz3.ab3@19213>   CMP.b #$9,d0
0002E6D8 <AmiBlitz3.ab3@19214>   BNE 'nolog
0002E6DE <AmiBlitz3.ab3@19215>   OR.l #$f2000014,d1                                       ;fpu log
0002E6E2 <AmiBlitz3.ab3@19216> BRA 'exit
0002E6E6 <AmiBlitz3.ab3@19219>   CMP.b #$8,d0
0002E6EA <AmiBlitz3.ab3@19220>   BNE 'nolog10
0002E6F0 <AmiBlitz3.ab3@19221>   OR.l #$f2000015,d1                                       ;fpu log10
0002E6F4 <AmiBlitz3.ab3@19222> BRA 'exit
0002E6F8 <AmiBlitz3.ab3@19225>   CMP.b #$7,d0
0002E6FC <AmiBlitz3.ab3@19226>   BNE 'noexp
0002E702 <AmiBlitz3.ab3@19227>   OR.l #$f2000010,d1                                       ;fpu exp
0002E706 <AmiBlitz3.ab3@19228> BRA 'exit
0002E70C <AmiBlitz3.ab3@19231>   LEA fpuerr,a0
0002E70E <AmiBlitz3.ab3@19232>   MOVE.l a0,-(a7)
0002E714 <AmiBlitz3.ab3@19233> JMP handle_compileerror
0002E718 <AmiBlitz3.ab3@19237>   CMP.b #$3c,d0
0002E71C <AmiBlitz3.ab3@19238>   BNE 'nofpu2
0002E71E <AmiBlitz3.ab3@19239>   MOVEQ #0,d1
0002E724 <AmiBlitz3.ab3@19240>       MOVE.w regnumstore,d1
0002E726 <AmiBlitz3.ab3@19241>       MOVE.w d1,d0
0002E728 <AmiBlitz3.ab3@19242>       ASL.w #7,d1
0002E72A <AmiBlitz3.ab3@19243>       ASL.w #8,d0
0002E72C <AmiBlitz3.ab3@19244>       ASL.w #2,d0
0002E72E <AmiBlitz3.ab3@19245>       OR.w d0,d1
0002E734 <AmiBlitz3.ab3@19246>       CMP.b #$03,25(a2)
0002E738 <AmiBlitz3.ab3@19247>       BNE 'nosgn
0002E73E <AmiBlitz3.ab3@19250>       SUBQ.l #8,destpointer                                ;fpu sgn
0002E744 <AmiBlitz3.ab3@19251>         OR.l #$f200003a,d1
0002E748 <AmiBlitz3.ab3@19252>         BSR writelong
0002E74E <AmiBlitz3.ab3@19253>         CLR.w a2offset
0002E754 <AmiBlitz3.ab3@19254>          MOVE.l #$F28E0006,d1
0002E758 <AmiBlitz3.ab3@19255>          BSR writelong
0002E75E <AmiBlitz3.ab3@19256>   MOVE.l #$7000600a,d1
0002E762 <AmiBlitz3.ab3@19257>   BSR writelong
0002E768 <AmiBlitz3.ab3@19258>   MOVE.l #$70014840,d1
0002E76C <AmiBlitz3.ab3@19259>   BSR writelong
0002E772 <AmiBlitz3.ab3@19260>   MOVE.l #$F292,d1
0002E776 <AmiBlitz3.ab3@19261>   BSR writeword
0002E77C <AmiBlitz3.ab3@19262>   MOVE.l #$000470FF,d1
0002E780 <AmiBlitz3.ab3@19263> BRA 'exit
0002E788 <AmiBlitz3.ab3@19266>   CMP.l #"Frac",$1a(a2)
0002E78C <AmiBlitz3.ab3@19267>   BNE 'nofrac
0002E792 <AmiBlitz3.ab3@19268> JMP notwork
0002E796 <AmiBlitz3.ab3@19309> BRA 'exit
0002E79A <AmiBlitz3.ab3@19313>   BSR.w JL_0_BB14                                          ;write lib code
0002E7A0 <AmiBlitz3.ab3@19314>   MOVE.l (A7)+,libisat
0002E7A2 <AmiBlitz3.ab3@19315> RTS
0002E7A6 <AmiBlitz3.ab3@19318>   BSR writelong
0002E7AC <AmiBlitz3.ab3@19321>   MOVE.l (A7)+,libisat
0002E7AE <AmiBlitz3.ab3@19322> RTS
0002E7B2 <AmiBlitz3.ab3@19326>   BSR.w fetchregs
0002E7B8 <AmiBlitz3.ab3@19327>   TST.b debugmode
0002E7BC <AmiBlitz3.ab3@19328>    BEQ.w JL_0_BB76
0002E7BE <AmiBlitz3.ab3@19329>   MOVE.l (A2),D1
0002E7C2 <AmiBlitz3.ab3@19330>   OR.l $8(A2),D1
0002E7C6 <AmiBlitz3.ab3@19331>   BCLR #$0,D1
0002E7C8 <AmiBlitz3.ab3@19332>   TST.l D1
0002E7CC <AmiBlitz3.ab3@19333>    BEQ.w JL_0_BB76
0002E7CE <AmiBlitz3.ab3@19334>   MOVE.l (A2)+,D1
0002E7D2 <AmiBlitz3.ab3@19335>   BTST #$0,D1
0002E7D6 <AmiBlitz3.ab3@19336>    BEQ.w JL_0_BB60
0002E7DC <AmiBlitz3.ab3@19337>   TST.w blitzmode
0002E7E0 <AmiBlitz3.ab3@19338>    BPL.w blitzerr
0002E7E6 <AmiBlitz3.ab3@19339>   TST.b debugmode
0002E7EA <AmiBlitz3.ab3@19340>    BEQ.w JL_0_BB5C
0002E7EC <AmiBlitz3.ab3@19341>   MOVE.l D1,-(A7)
0002E7F0 <AmiBlitz3.ab3@19342>   MOVE.w #$C311,D1
0002E7F4 <AmiBlitz3.ab3@19343>    BSR.w makebtst
0002E7F6 <AmiBlitz3.ab3@19344>   MOVE.l (A7)+,D1
0002E7FA <AmiBlitz3.ab3@19347>   BCLR #$0,D1
0002E7FC <AmiBlitz3.ab3@19350>   TST.l D1
0002E800 <AmiBlitz3.ab3@19351>    BSR.w JL_0_BBC6
0002E802 <AmiBlitz3.ab3@19352>   MOVE.l (A2)+,D1
0002E806 <AmiBlitz3.ab3@19353>    BSR.w JL_0_BB98
0002E808 <AmiBlitz3.ab3@19354>   MOVE.l (A2)+,D1
0002E80C <AmiBlitz3.ab3@19355>    BSR.w JL_0_BBC6
0002E810 <AmiBlitz3.ab3@19356> BRA.w JL_0_BB90
0002E816 <AmiBlitz3.ab3@19359>   BTST #$0,$3(A2)
0002E81A <AmiBlitz3.ab3@19360>    BEQ.w JL_0_BB88
0002E81E <AmiBlitz3.ab3@19361>   MOVE.w blitzmode(PC),D1
0002E822 <AmiBlitz3.ab3@19362>    BPL.w blitzerr
0002E826 <AmiBlitz3.ab3@19365>   MOVE.l $4(A2),D1
0002E82A <AmiBlitz3.ab3@19366>    BSR.w JL_0_BB98
0002E830 <AmiBlitz3.ab3@19369>   MOVEA.l libisat,A2
0002E832 <AmiBlitz3.ab3@19370> RTS
0002E836 <AmiBlitz3.ab3@19373>   BTST #$0,D1
0002E83A <AmiBlitz3.ab3@19374>    BEQ.w JL_0_BBC4
0002E840 <AmiBlitz3.ab3@19375>   TST.w blitzmode
0002E844 <AmiBlitz3.ab3@19376>    BMI.w amigaerr
0002E84A <AmiBlitz3.ab3@19377>   TST.b debugmode
0002E84E <AmiBlitz3.ab3@19378>    BEQ.w JL_0_BBC0
0002E850 <AmiBlitz3.ab3@19379>   MOVE.l D1,-(A7)
0002E854 <AmiBlitz3.ab3@19380>   MOVE.w #$C312,D1
0002E858 <AmiBlitz3.ab3@19381>    BSR.w makebtst
0002E85A <AmiBlitz3.ab3@19382>   MOVE.l (A7)+,D1
0002E85E <AmiBlitz3.ab3@19385>   BCLR #$0,D1
0002E860 <AmiBlitz3.ab3@19388>   TST.l D1
0002E864 <AmiBlitz3.ab3@19391>    BEQ.w JL_0_BBD2
0002E866 <AmiBlitz3.ab3@19392>   MOVE.l A1,-(A7)
0002E86A <AmiBlitz3.ab3@19393>    BSR.w JL_0_BBD4
0002E86C <AmiBlitz3.ab3@19394>   MOVEA.l (A7)+,A1
0002E86E <AmiBlitz3.ab3@19397> RTS
0002E874 <AmiBlitz3.ab3@19400>   MOVEA.l libisat,A0
0002E87A <AmiBlitz3.ab3@19401>   TST.w cfetchmode
0002E87E <AmiBlitz3.ab3@19402>    BEQ.w JL_0_BBF6
0002E880 <AmiBlitz3.ab3@19403>   ADD.l A0,D1
0002E882 <AmiBlitz3.ab3@19404>   MOVE.l D1,-(A7)
0002E886 <AmiBlitz3.ab3@19405>   MOVE.w #$4EB9,D1
0002E88A <AmiBlitz3.ab3@19406>    BSR.w writeword
0002E88C <AmiBlitz3.ab3@19407>   MOVE.l (A7)+,D1
0002E890 <AmiBlitz3.ab3@19408> BRA.w writelong
0002E894 <AmiBlitz3.ab3@19411>   LEA $0(A0,D1.L),A1
0002E89A <AmiBlitz3.ab3@19412>   CLR.w inline
0002E89E <AmiBlitz3.ab3@19415>   CMPI.b #$A0,(A1)+
0002E8A2 <AmiBlitz3.ab3@19416>    BNE.w JL_0_BC68
0002E8A4 <AmiBlitz3.ab3@19417>   TST.b (A1)+
0002E8A8 <AmiBlitz3.ab3@19418>    BEQ.w JL_0_BC18
0002E8AE <AmiBlitz3.ab3@19419>   CMPI.b #$1,-$1(A1)
0002E8B2 <AmiBlitz3.ab3@19420>    BEQ.w JL_0_BC24
0002E8B8 <AmiBlitz3.ab3@19423>   MOVE.w (A1)+,inline
0002E8BA <AmiBlitz3.ab3@19424>   ADDQ.l #4,D1
0002E8BE <AmiBlitz3.ab3@19425> BRA.w JL_0_BC00
0002E8C4 <AmiBlitz3.ab3@19428>   TST.w blitzmode
0002E8C8 <AmiBlitz3.ab3@19429>    BPL.w JL_0_BC4A
0002E8CE <AmiBlitz3.ab3@19430>   TST.b debugmode
0002E8D2 <AmiBlitz3.ab3@19431>    BEQ.w JL_0_BC40
0002E8D6 <AmiBlitz3.ab3@19432>   MOVE.w #$C311,D1
0002E8DA <AmiBlitz3.ab3@19433>    BSR.w makebtst
0002E8DC <AmiBlitz3.ab3@19436>   MOVE.l (A1)+,D1
0002E8E0 <AmiBlitz3.ab3@19437>   LEA $0(A0,D1.L),A1
0002E8E4 <AmiBlitz3.ab3@19438> BRA.w JL_0_BC00
0002E8EA <AmiBlitz3.ab3@19441>   TST.b debugmode
0002E8EE <AmiBlitz3.ab3@19442>    BEQ.w JL_0_BC60
0002E8F0 <AmiBlitz3.ab3@19443>   MOVE.l D1,-(A7)
0002E8F4 <AmiBlitz3.ab3@19444>   MOVE.w #$C312,D1
0002E8F8 <AmiBlitz3.ab3@19445>    BSR.w makebtst
0002E8FA <AmiBlitz3.ab3@19446>   MOVE.l (A7)+,D1
0002E8FC <AmiBlitz3.ab3@19449>   ADDQ.w #4,A1
0002E8FE <AmiBlitz3.ab3@19450>   ADDQ.l #6,D1
0002E902 <AmiBlitz3.ab3@19451> BRA.w JL_0_BC00
0002E908 <AmiBlitz3.ab3@19454>   TST.w inline
0002E90C <AmiBlitz3.ab3@19455>    BEQ.w JL_0_BC7E
0002E90E <AmiBlitz3.ab3@19456>   SUBQ.w #1,A1
0002E910 <AmiBlitz3.ab3@19457>   MOVEA.l A1,A0
0002E914 <AmiBlitz3.ab3@19458>   ADDA.w inline(PC),A1
0002E918 <AmiBlitz3.ab3@19459> BRA.w pokecode2
0002E91C <AmiBlitz3.ab3@19462>   MOVEM.l a0/D1,-(A7)
0002E922 <AmiBlitz3.ab3@19463>   TST.w debugversion
0002E926 <AmiBlitz3.ab3@19464>   BEQ 'l11
0002E92E <AmiBlitz3.ab3@19465>   BTST #$7,link_debuginfo
0002E932 <AmiBlitz3.ab3@19466>   BEQ.w 'l11
0002E938 <AmiBlitz3.ab3@19467>   MOVE.l lastinstruction,d1
0002E93C <AmiBlitz3.ab3@19468>   BEQ 'l11
0002E942 <AmiBlitz3.ab3@19469>   CLR.l lastinstruction
0002E948 <AmiBlitz3.ab3@19470>   CMP.l #$e000,d1
0002E94C <AmiBlitz3.ab3@19471>   BGE 'ln99
0002E952 <AmiBlitz3.ab3@19472>   LEA notf,a0
0002E958 <AmiBlitz3.ab3@19473>   CMP.l #$c601,d1
0002E95C <AmiBlitz3.ab3@19474>   BNE 'ln1
0002E962 <AmiBlitz3.ab3@19475>   LEA strcpy,a0
0002E966 <AmiBlitz3.ab3@19476> BRA 'ln3
0002E96C <AmiBlitz3.ab3@19479>   CMP.l #$c700,d1
0002E970 <AmiBlitz3.ab3@19480>   BNE 'ln2
0002E976 <AmiBlitz3.ab3@19481>   LEA strvar,a0
0002E97A <AmiBlitz3.ab3@19482> BRA 'ln3
0002E980 <AmiBlitz3.ab3@19485>   CMP.l #$ce00,d1
0002E984 <AmiBlitz3.ab3@19486>   BNE 'ln4
0002E98A <AmiBlitz3.ab3@19487>   LEA strcmp,a0
0002E98E <AmiBlitz3.ab3@19488> BRA 'ln3
0002E994 <AmiBlitz3.ab3@19491>   CMP.l #$ca00,d1
0002E998 <AmiBlitz3.ab3@19492>   BNE 'ln5
0002E99E <AmiBlitz3.ab3@19493>   LEA qmul,a0
0002E9A2 <AmiBlitz3.ab3@19494> BRA 'ln3
0002E9A8 <AmiBlitz3.ab3@19497>   CMP.l #$d000,d1
0002E9AC <AmiBlitz3.ab3@19498>      BNE 'ln6
0002E9B2 <AmiBlitz3.ab3@19499>      LEA _MaxLen,a0
0002E9B6 <AmiBlitz3.ab3@19500> BRA 'ln3
0002E9BC <AmiBlitz3.ab3@19503>   CMP.l #$cb00,d1
0002E9C0 <AmiBlitz3.ab3@19504>   BNE 'ln3
0002E9C6 <AmiBlitz3.ab3@19505>   LEA qdiv,a0
0002E9CA <AmiBlitz3.ab3@19506> BRA 'ln3
0002E9CC <AmiBlitz3.ab3@19509>   MOVE.l d1,a0
0002E9D0 <AmiBlitz3.ab3@19510>   LEA $8(a0),a0
0002E9D4 <AmiBlitz3.ab3@19513>   CMP.w #$ffff,(a0)+
0002E9D8 <AmiBlitz3.ab3@19514>   BNE 'l1
0002E9DC <AmiBlitz3.ab3@19515>   LEA 6(a0),a0
0002E9E0 <AmiBlitz3.ab3@19518>   MOVEM.l a1/a2/d7/d2,-(a7)
0002E9E2 <AmiBlitz3.ab3@19519>   MOVEQ #0,d2
0002E9E8 <AmiBlitz3.ab3@19520>   LEA ptr_parameterstore,a1
0002E9EA <AmiBlitz3.ab3@19523>   ADDQ.l #1,d2
0002E9EC <AmiBlitz3.ab3@19524>   MOVE.b (a0)+,d0
0002E9F0 <AmiBlitz3.ab3@19525> 
0002E9F4 <AmiBlitz3.ab3@19526>   BNE 'nodollar
0002E9F8 <AmiBlitz3.ab3@19527>   MOVE.b #"S",d0
0002E9FC <AmiBlitz3.ab3@19529>   CMP.b #"?",d0
0002EA00 <AmiBlitz3.ab3@19530>   BEQ 'nolabelwrite
0002EA02 <AmiBlitz3.ab3@19531>   MOVE.b d0,(a1)+
0002EA06 <AmiBlitz3.ab3@19532>   BNE 'l2
0002EA0C <AmiBlitz3.ab3@19533>   MOVE.w #"__",-1(a1)
0002EA0E <AmiBlitz3.ab3@19534>   ADDQ.l #2,d2
0002EA12 <AmiBlitz3.ab3@19535>   CLR.b 1(a1)
0002EA18 <AmiBlitz3.ab3@19536>   JSR findlabel2
0002EA1C <AmiBlitz3.ab3@19537>   BEQ 'l3
0002EA22 <AmiBlitz3.ab3@19538>   JSR addlabelhash
0002EA26 <AmiBlitz3.ab3@19541>   CLR.l 4(a2)
0002EA2A <AmiBlitz3.ab3@19542>   MOVE.l $14(a7),a0
0002EA2E <AmiBlitz3.ab3@19543>   MOVE.l $10(a7),d1
0002EA32 <AmiBlitz3.ab3@19544>   SUB.l $12(a0),d1
0002EA36 <AmiBlitz3.ab3@19545>   ADD.l $28(a0),d1
0002EA3A <AmiBlitz3.ab3@19546>   MOVE.l d1,8(a2)
0002EA3E <AmiBlitz3.ab3@19547> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002EA44 <AmiBlitz3.ab3@19550>   TST.b typecheck
0002EA48 <AmiBlitz3.ab3@19551>   BEQ 'p1
0002EA4E <AmiBlitz3.ab3@19552>   MOVE.l lasttoken,d1
0002EA54 <AmiBlitz3.ab3@19553>   CMP.l #$da01,d1                                          ;poke
0002EA58 <AmiBlitz3.ab3@19554>   BEQ 'lp1
0002EA5E <AmiBlitz3.ab3@19555>   CMP.l #$da02,d1                                          ;peek
0002EA62 <AmiBlitz3.ab3@19556>   BNE 'p1
0002EA68 <AmiBlitz3.ab3@19559>   TST.b peekaddrsize
0002EA6C <AmiBlitz3.ab3@19560>   BEQ 'p1
0002EA74 <AmiBlitz3.ab3@19561>   CMP.b #3,peekaddrsize
0002EA78 <AmiBlitz3.ab3@19562>   BNE errormsg_onlylong
0002EA7E <AmiBlitz3.ab3@19563>   CLR.b peekaddrsize
0002EA84 <AmiBlitz3.ab3@19571>    TST.b fpu
0002EA88 <AmiBlitz3.ab3@19572>   BNE 'optf
0002EA8E <AmiBlitz3.ab3@19573>   TST.b fast
0002EA92 <AmiBlitz3.ab3@19574>   BEQ JL11a2
0002EA9A <AmiBlitz3.ab3@19581>   CMP.l #"Poke",20(a2)                                     ;poke
0002EA9E <AmiBlitz3.ab3@19582>   BNE peekopt
0002EAA2 <AmiBlitz3.ab3@19583>   TST.b 24(a2)
0002EAA6 <AmiBlitz3.ab3@19584>   BNE peekopt
0002EAAA <AmiBlitz3.ab3@19585>   CMP.b #3,d2
0002EAAE <AmiBlitz3.ab3@19586>   BNE 'lw1
0002EAB4 <AmiBlitz3.ab3@19589>   MOVE.l #$21821990,d1
0002EAB8 <AmiBlitz3.ab3@19590> BRA.s 'lpx
0002EABC <AmiBlitz3.ab3@19593>   CMP.b #2,d2
0002EAC0 <AmiBlitz3.ab3@19594>   BNE 'lb1
0002EAC6 <AmiBlitz3.ab3@19595>   MOVE.l #$31821990,d1
0002EACA <AmiBlitz3.ab3@19596> BRA.s 'lpx
0002EACE <AmiBlitz3.ab3@19599>   CMP.b #1,d2
0002EAD2 <AmiBlitz3.ab3@19600>   BNE 'lp3
0002EAD8 <AmiBlitz3.ab3@19601>   MOVE.l #$11821990,d1
0002EADC <AmiBlitz3.ab3@19602> BRA.s 'lpx
0002EAE0 <AmiBlitz3.ab3@19605>   CMP.b #5,d2
0002EAE4 <AmiBlitz3.ab3@19606>     BNE JL11a2
0002EAEA <AmiBlitz3.ab3@19607>     TST.b fpu
0002EAEE <AmiBlitz3.ab3@19608>     BEQ 'll1
0002EAF4 <AmiBlitz3.ab3@19609>      MOVE.l destpointer,a4
0002EAFC <AmiBlitz3.ab3@19610>     CMP.l #$f22d4500,-6(a4)
0002EB00 <AmiBlitz3.ab3@19611>     BNE 'noglob
0002EB06 <AmiBlitz3.ab3@19612>     TST.b doublepeek
0002EB0A <AmiBlitz3.ab3@19613>     BNE 'noglob
0002EB10 <AmiBlitz3.ab3@19614>     MOVE.w -2(a4),-4(a4)
0002EB16 <AmiBlitz3.ab3@19615>     MOVE.w #$21ad,-6(a4)
0002EB1C <AmiBlitz3.ab3@19616>     MOVE.w #$1990,-2(a4)
0002EB24 <AmiBlitz3.ab3@19617>     MOVE.w #9,peeksize
0002EB26 <AmiBlitz3.ab3@19618>     ADDQ #8,a7
0002EB28 <AmiBlitz3.ab3@19619> RTS
0002EB30 <AmiBlitz3.ab3@19622>     CMP.l #$f22c4500,-6(a4)
0002EB34 <AmiBlitz3.ab3@19623>     BNE 'nolocal
0002EB3A <AmiBlitz3.ab3@19624>     MOVE.w -2(a4),-4(a4)
0002EB40 <AmiBlitz3.ab3@19625>     TST.b doublepeek                                       ;dont move longfix on double floats
0002EB44 <AmiBlitz3.ab3@19626>     BNE 'nolocal
0002EB4A <AmiBlitz3.ab3@19627>     MOVE.w #$21ac,-6(a4)
0002EB50 <AmiBlitz3.ab3@19628>     MOVE.w #$1990,-2(a4)
0002EB58 <AmiBlitz3.ab3@19629>     MOVE.w #9,peeksize
0002EB5A <AmiBlitz3.ab3@19630>     ADDQ #8,a7
0002EB5C <AmiBlitz3.ab3@19631> RTS
0002EB60 <AmiBlitz3.ab3@19634>     MOVE.w #$f230,d1
0002EB64 <AmiBlitz3.ab3@19635>     BSR writeword
0002EB6A <AmiBlitz3.ab3@19636>   MOVE.l #$65001990,d1
0002EB70 <AmiBlitz3.ab3@19637>   TST.b doublepeek
0002EB74 <AmiBlitz3.ab3@19638>   BEQ 'lpx
0002EB7A <AmiBlitz3.ab3@19639>   OR.l   #$10000000,d1
0002EB7C <AmiBlitz3.ab3@19643>   ADDQ #8,a7
0002EB84 <AmiBlitz3.ab3@19644>   MOVE.w #9,peeksize
0002EB88 <AmiBlitz3.ab3@19645> BRA writelong
0002EB90 <AmiBlitz3.ab3@19648>   CMP.l #"Peek",20(a2)
0002EB94 <AmiBlitz3.ab3@19649>   BNE 'l10
0002EB98 <AmiBlitz3.ab3@19650>   TST.b 24(a2)
0002EB9C <AmiBlitz3.ab3@19651>   BNE 'l10
0002EBA4 <AmiBlitz3.ab3@19652>   CMP.w #7,peeksize
0002EBA8 <AmiBlitz3.ab3@19653>   BEQ 'l10
0002EBB0 <AmiBlitz3.ab3@19654>    CMP.w #3,peeksize
0002EBB4 <AmiBlitz3.ab3@19655>    BNE.s 'lw1
0002EBBA <AmiBlitz3.ab3@19658>   MOVE.l #$20301990,d1
0002EBBE <AmiBlitz3.ab3@19659> BRA exitjsr
0002EBC6 <AmiBlitz3.ab3@19662>   CMP.w #2,peeksize
0002EBCA <AmiBlitz3.ab3@19663>    BNE.s 'lb1
0002EBD0 <AmiBlitz3.ab3@19664>    MOVE.l #$30301990,d1
0002EBD4 <AmiBlitz3.ab3@19665> BRA exitjsr
0002EBDC <AmiBlitz3.ab3@19668>   CMP.w #1,peeksize
0002EBE0 <AmiBlitz3.ab3@19669>    BNE.s 'lf1
0002EBE6 <AmiBlitz3.ab3@19670>    MOVE.l #$10301990,d1
0002EBEA <AmiBlitz3.ab3@19671> BRA exitjsr
0002EBF2 <AmiBlitz3.ab3@19674>   CMP.w #5,peeksize
0002EBF6 <AmiBlitz3.ab3@19675>    BNE 'l10
0002EBFC <AmiBlitz3.ab3@19676>    TST.b fpu
0002EC00 <AmiBlitz3.ab3@19677>    BEQ 'll1
0002EC04 <AmiBlitz3.ab3@19678>    MOVE.w #$f230,d1
0002EC08 <AmiBlitz3.ab3@19679>    BSR writeword
0002EC0A <AmiBlitz3.ab3@19680>    MOVEQ #0,d1
0002EC10 <AmiBlitz3.ab3@19681>    MOVE.w tempregnum,d1
0002EC12 <AmiBlitz3.ab3@19682>    ASL.l #7,d1
0002EC14 <AmiBlitz3.ab3@19683>    ASL.l #8,d1
0002EC16 <AmiBlitz3.ab3@19684>    ASL.l #8,d1
0002EC1C <AmiBlitz3.ab3@19685>    ADD.l #$44001990,d1
0002EC22 <AmiBlitz3.ab3@19686>     TST.b doublepeek
0002EC26 <AmiBlitz3.ab3@19687>     BEQ 'lpx2
0002EC2C <AmiBlitz3.ab3@19688>     OR.l   #$10000000,d1
0002EC30 <AmiBlitz3.ab3@19690> BRA exitjsr
0002EC34 <AmiBlitz3.ab3@19694>   MOVE.w #$4EB9,D1
0002EC38 <AmiBlitz3.ab3@19695>    BSR.w writeword                                         ;writesysjsr
0002EC3C <AmiBlitz3.ab3@19696>   MOVEM.l (A7)+,a0/D1
0002EC42 <AmiBlitz3.ab3@19697>    JSR addoff
0002EC46 <AmiBlitz3.ab3@19698>   SUB.l $12(A0),D1
0002EC4A <AmiBlitz3.ab3@19699>   ADD.l $28(A0),D1
0002EC4E <AmiBlitz3.ab3@19700> BRA.w writelong
0002EC50 <AmiBlitz3.ab3@19705>   MOVE.w D1,-(A7)
0002EC54 <AmiBlitz3.ab3@19706>   MOVE.w tstmode(PC),D1
0002EC58 <AmiBlitz3.ab3@19707>    BSR.w writeword
0002EC5C <AmiBlitz3.ab3@19708>    BSR.w getbbase
0002EC60 <AmiBlitz3.ab3@19709>    BSR.w writeword
0002EC62 <AmiBlitz3.ab3@19710>   MOVE.w (A7)+,D1
0002EC66 <AmiBlitz3.ab3@19711>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002EC6A <AmiBlitz3.ab3@19712>    BSR.w Atokejsr
0002EC6E <AmiBlitz3.ab3@19713>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002EC70 <AmiBlitz3.ab3@19714> RTS
0002EC74 <AmiBlitz3.ab3@19722>   MOVE.w blitzoff(PC),D1
0002EC78 <AmiBlitz3.ab3@19723>   CMP.w #-$1,D1
0002EC7C <AmiBlitz3.ab3@19724>    BNE.w getbbase__done
0002EC82 <AmiBlitz3.ab3@19725>   ADDQ.w #1,globalvarpointer
0002EC8A <AmiBlitz3.ab3@19726>   BCLR #$0,globalvarpointer+1
0002EC90 <AmiBlitz3.ab3@19727>   MOVE.w globalvarpointer,D1
0002EC96 <AmiBlitz3.ab3@19728>   MOVE.w D1,blitzoff
0002EC9C <AmiBlitz3.ab3@19729>   ADDQ.w #2,globalvarpointer
0002EC9E <AmiBlitz3.ab3@19732> RTS
0002ECA2 <AmiBlitz3.ab3@19736> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002ECA4 <AmiBlitz3.ab3@19739> inline:     Ds.w 1
0002ECA6 <AmiBlitz3.ab3@19740> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002ECA8 <AmiBlitz3.ab3@19741> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002ECAA <AmiBlitz3.ab3@19745>   MOVE.w (A2)+,D1
0002ECAE <AmiBlitz3.ab3@19746>    BEQ.w fetchregs__done
0002ECB0 <AmiBlitz3.ab3@19747>   MOVE.w (A2)+,D2
0002ECB4 <AmiBlitz3.ab3@19748>    BSR.w toreg
0002ECB8 <AmiBlitz3.ab3@19749> BRA.w fetchregs
0002ECBA <AmiBlitz3.ab3@19752> RTS
0002ECBE <AmiBlitz3.ab3@19757>   CMP.w #-$100,D2
0002ECC2 <AmiBlitz3.ab3@19758>    BCC.w toreg__yeah
0002ECC6 <AmiBlitz3.ab3@19760>   BCLR #$F,D2
0002ECCA <AmiBlitz3.ab3@19761>    BEQ.w toreg__nobm
0002ECD0 <AmiBlitz3.ab3@19763>   TST.w blitzmode
0002ECD4 <AmiBlitz3.ab3@19764>    BMI.w toreg__yeah
0002ECD6 <AmiBlitz3.ab3@19765> RTS
0002ECDA <AmiBlitz3.ab3@19768>   BCLR #$E,D2
0002ECDE <AmiBlitz3.ab3@19769>    BEQ.w toreg__yeah
0002ECE4 <AmiBlitz3.ab3@19771>   TST.w blitzmode
0002ECE8 <AmiBlitz3.ab3@19772>    BPL.w toreg__yeah
0002ECEA <AmiBlitz3.ab3@19773> RTS
0002ECF0 <AmiBlitz3.ab3@19776>   JSR uselib
0002ECF2 <AmiBlitz3.ab3@19777>   TST.b D2
0002ECF6 <AmiBlitz3.ab3@19778>    BEQ.w toreg__norm
0002ECFA <AmiBlitz3.ab3@19779>   CMP.b #$4,D2
0002ECFE <AmiBlitz3.ab3@19780>    BNE.w toreg__suv
0002ED02 <AmiBlitz3.ab3@19781>   MOVE.w #$0004,-(A7)
0002ED08 <AmiBlitz3.ab3@19782>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002ED0C <AmiBlitz3.ab3@19783> BRA.w toreg__sendmd
0002ED10 <AmiBlitz3.ab3@19786>   CMP.b #$3,D2
0002ED14 <AmiBlitz3.ab3@19787>    BNE.w toreg__notnmax
0002ED16 <AmiBlitz3.ab3@19788>   CLR.w -(A7)
0002ED1C <AmiBlitz3.ab3@19789>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002ED1E <AmiBlitz3.ab3@19795>   LSR.w #8,D2
0002ED22 <AmiBlitz3.ab3@19796>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002ED26 <AmiBlitz3.ab3@19797>   BTST #$7,D2
0002ED2A <AmiBlitz3.ab3@19798>    BEQ.w toreg__skipad
0002ED2E <AmiBlitz3.ab3@19799>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002ED32 <AmiBlitz3.ab3@19800>   CMP.w #$16,D2
0002ED36 <AmiBlitz3.ab3@19801>    BNE.w toreg__skipad
0002ED3E <AmiBlitz3.ab3@19802>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002ED42 <AmiBlitz3.ab3@19805>   ANDI.w #$7,D2
0002ED44 <AmiBlitz3.ab3@19806>   LSL.w #8,D2
0002ED46 <AmiBlitz3.ab3@19807>   LSL.w #1,D2
0002ED48 <AmiBlitz3.ab3@19808>   OR.w D2,D1
0002ED4C <AmiBlitz3.ab3@19809>    BSR.w writeword
0002ED50 <AmiBlitz3.ab3@19810>   MOVE.l $12(A1),D1
0002ED52 <AmiBlitz3.ab3@19811>   ADD.l (A7)+,D1
0002ED56 <AmiBlitz3.ab3@19812>   MOVE.w $0(A1,D1.L),D1
0002ED58 <AmiBlitz3.ab3@19813>   ADD.w (A7)+,D1
0002ED5C <AmiBlitz3.ab3@19814> BRA.w writeword
0002ED5E <AmiBlitz3.ab3@19817>   MOVE.w D2,-(A7)
0002ED60 <AmiBlitz3.ab3@19818>   LSR.w #8,D2
0002ED64 <AmiBlitz3.ab3@19819>   CMP.w #$16,D2
0002ED68 <AmiBlitz3.ab3@19820>    BNE.w toreg__isnta6
0002ED70 <AmiBlitz3.ab3@19821>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002ED74 <AmiBlitz3.ab3@19824>   MOVE.l $12(A1),D1                                        ;objectspace
0002ED78 <AmiBlitz3.ab3@19825>   MOVE.w -$6(A1,D1.L),-(A7)
0002ED7C <AmiBlitz3.ab3@19826>    BSR.w makeregop
0002ED80 <AmiBlitz3.ab3@19827>    BSR.w writeword
0002ED82 <AmiBlitz3.ab3@19828>   MOVE.w (A7)+,D1
0002ED84 <AmiBlitz3.ab3@19829>   MOVE.w (A7)+,D2
0002ED86 <AmiBlitz3.ab3@19830>   TST.b D2
0002ED8A <AmiBlitz3.ab3@19831>    BPL.w toreg__skippy1
0002ED8E <AmiBlitz3.ab3@19836>    BSR.w writeword                                         ;move.l x(a5),dn
0002ED90 <AmiBlitz3.ab3@19837>   MOVE.w D2,-(A7)                                          ;store reg used
0002ED94 <AmiBlitz3.ab3@19839>   ADDA.l $12(A1),A1
0002ED96 <AmiBlitz3.ab3@19840>   MOVE.b D2,D1
0002ED9A <AmiBlitz3.ab3@19841>   ANDI.w #$7,D1
0002EDA0 <AmiBlitz3.ab3@19843>   TST.b debugmode
0002EDA4 <AmiBlitz3.ab3@19844>    BEQ.w toreg__norerr
0002EDA6 <AmiBlitz3.ab3@19846>   MOVE.w D1,-(A7)
0002EDA8 <AmiBlitz3.ab3@19847>   LSL.w #8,D1
0002EDAA <AmiBlitz3.ab3@19848>   LSL.w #1,D1
0002EDAE <AmiBlitz3.ab3@19849>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002EDB2 <AmiBlitz3.ab3@19850>    BSR.w writeword
0002EDB6 <AmiBlitz3.ab3@19851>   MOVE.w -$4(A1),D1
0002EDBA <AmiBlitz3.ab3@19852>    BSR.w writeword
0002EDBE <AmiBlitz3.ab3@19853>   MOVE.l maxchk(PC),D1                                  ;bcs
0002EDC2 <AmiBlitz3.ab3@19854>    BSR.w writelong
0002EDC4 <AmiBlitz3.ab3@19855>   MOVE.l A2,-(A7)
0002EDC8 <AmiBlitz3.ab3@19856>   MOVE.w #$C30A,D1
0002EDCC <AmiBlitz3.ab3@19857>    BSR.w Atokejsr
0002EDCE <AmiBlitz3.ab3@19858>   MOVEA.l (A7)+,A2
0002EDD0 <AmiBlitz3.ab3@19859>   MOVE.w (A7)+,D1
0002EDD4 <AmiBlitz3.ab3@19862>   MOVE.w -$2(A1),D2                                        ;shift amount
0002EDD8 <AmiBlitz3.ab3@19865>   CMP.w #$9,D2
0002EDDC <AmiBlitz3.ab3@19866>    BCS.w toreg__simp
0002EDE0 <AmiBlitz3.ab3@19867>   MOVEM.w D1-D2,-(A7)
0002EDE2 <AmiBlitz3.ab3@19869>   MOVEQ.l #$00,D2                                          ;!!!!!
0002EDE4 <AmiBlitz3.ab3@19871>   LSL.w #8,D2
0002EDE6 <AmiBlitz3.ab3@19872>   LSL.w #1,D2
0002EDE8 <AmiBlitz3.ab3@19873>   OR.w D2,D1
0002EDEC <AmiBlitz3.ab3@19874>   OR.w lsldn(PC),D1
0002EDF0 <AmiBlitz3.ab3@19875>    BSR.w writeword
0002EDF4 <AmiBlitz3.ab3@19876>   MOVEM.w (A7)+,D1-D2
0002EDF6 <AmiBlitz3.ab3@19877>   SUBQ.w #8,D2
0002EDFA <AmiBlitz3.ab3@19878> BRA.w toreg__shloop
0002EDFC <AmiBlitz3.ab3@19881>   MOVE.w D1,-(A7)
0002EE00 <AmiBlitz3.ab3@19882>   OR.w #$48c0,d1
0002EE04 <AmiBlitz3.ab3@19883>   BSR writeword
0002EE06 <AmiBlitz3.ab3@19884>   MOVE.w (a7),d1
0002EE08 <AmiBlitz3.ab3@19885>   TST.w D2
0002EE0C <AmiBlitz3.ab3@19886>   BEQ.w toreg__simp2
0002EE10 <AmiBlitz3.ab3@19888>   ANDI.w #$7,D2                                            ;?????
0002EE12 <AmiBlitz3.ab3@19890>   LSL.w #8,D2
0002EE14 <AmiBlitz3.ab3@19891>   LSL.w #1,D2
0002EE16 <AmiBlitz3.ab3@19892>   OR.w D2,D1
0002EE1A <AmiBlitz3.ab3@19893>   OR.w lsldn(PC),D1
0002EE1E <AmiBlitz3.ab3@19894>    BSR.w writeword
0002EE20 <AmiBlitz3.ab3@19900>   MOVE.w (A7)+,D1
0002EE24 <AmiBlitz3.ab3@19901>   ANDI.w #$7,D1
0002EE28 <AmiBlitz3.ab3@19902>   OR.w maxdo(PC),D1
0002EE2A <AmiBlitz3.ab3@19903>   MOVE.w (A7)+,D2
0002EE2C <AmiBlitz3.ab3@19904>   LSL.w #1,D2
0002EE30 <AmiBlitz3.ab3@19905>   ANDI.w #$E00,D2
0002EE32 <AmiBlitz3.ab3@19906>   OR.w D2,D1
0002EE36 <AmiBlitz3.ab3@19907> BRA.w writeword
0002EE3A <AmiBlitz3.ab3@19910>   CMP.b #$1,D2
0002EE3E <AmiBlitz3.ab3@19911>    BEQ.w toreg__skippy
0002EE40 <AmiBlitz3.ab3@19915>   ADDQ.w #4,D1
0002EE46 <AmiBlitz3.ab3@19917>   TST.b debugmode
0002EE4A <AmiBlitz3.ab3@19918>    BEQ.w toreg__skippy
0002EE4E <AmiBlitz3.ab3@19920>    BSR.w writeword
0002EE50 <AmiBlitz3.ab3@19921>   SWAP D1
0002EE54 <AmiBlitz3.ab3@19922>   MOVE.w toreg__theretest(PC),D1
0002EE56 <AmiBlitz3.ab3@19923>   SWAP D1
0002EE5A <AmiBlitz3.ab3@19924>    BSR.w writelong
0002EE5E <AmiBlitz3.ab3@19925>   MOVE.l toreg__theretest+4(PC),D1
0002EE62 <AmiBlitz3.ab3@19926>    BSR.w writelong
0002EE66 <AmiBlitz3.ab3@19927>   MOVE.l toreg__theretest+8(PC),D1
0002EE6A <AmiBlitz3.ab3@19928> BRA.w writelong
0002EE6E <AmiBlitz3.ab3@19931> BRA.w writeword
0002EE72 <AmiBlitz3.ab3@19936>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0002EE76 <AmiBlitz3.ab3@19937>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0002EE78 <AmiBlitz3.ab3@19938>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0002EE7A <AmiBlitz3.ab3@19939>             Dc.b $4E,$40                                   ;TRAP   #00
0002EE7C <AmiBlitz3.ab3@19944>   LSR.w #8,D2
0002EE80 <AmiBlitz3.ab3@19945>   CMP.b #$16,D2
0002EE84 <AmiBlitz3.ab3@19946>    BNE.w toreg__nota6
0002EE88 <AmiBlitz3.ab3@19947>   MOVE.w $A(A1),D1
0002EE8E <AmiBlitz3.ab3@19948>   CMP.w lasta6,D1
0002EE92 <AmiBlitz3.ab3@19949>    BEQ.w toreg__sk
0002EE98 <AmiBlitz3.ab3@19950>   MOVE.w D1,lasta6
0002EE9C <AmiBlitz3.ab3@19953>    BSR.w makeregop
0002EEA0 <AmiBlitz3.ab3@19954>   TST.w $1A(A1)
0002EEA4 <AmiBlitz3.ab3@19955>    BPL.w toreg__long
0002EEA8 <AmiBlitz3.ab3@19956>   CMP.w stackop(PC),D1
0002EEAC <AmiBlitz3.ab3@19957>    BNE.w toreg__notst
0002EEB2 <AmiBlitz3.ab3@19958>   SUBQ.w #2,a2offset
0002EEB6 <AmiBlitz3.ab3@19961>    ORI.w #$1000,D1
0002EEBA <AmiBlitz3.ab3@19964>    BSR.w writeword
0002EEBE <AmiBlitz3.ab3@19965>   MOVE.w $A(A1),D1
0002EEC2 <AmiBlitz3.ab3@19966>    BSR.w writeword
0002EEC4 <AmiBlitz3.ab3@19969> RTS
0002EEC6 <AmiBlitz3.ab3@19973> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0002EECA <AmiBlitz3.ab3@19974> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0002EED0 <AmiBlitz3.ab3@19975>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0002EED2 <AmiBlitz3.ab3@19978> 
0002EED4 <AmiBlitz3.ab3@19981>             Dc.b $00,$00
0002EED8 <AmiBlitz3.ab3@19982> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0002EEDC <AmiBlitz3.ab3@19989>   CMP.b #$FF,D2
0002EEE0 <AmiBlitz3.ab3@19990>    BNE.w makeregop__notst
0002EEE4 <AmiBlitz3.ab3@19991>   MOVE.w stackop(PC),D1
0002EEEA <AmiBlitz3.ab3@19992>   ADDQ.w #4,a2offset
0002EEEC <AmiBlitz3.ab3@19993> RTS
0002EEEE <AmiBlitz3.ab3@19996>   MOVE.l A3,-(A7)
0002EEF4 <AmiBlitz3.ab3@19997>   LEA regtransd,A3
0002EEF8 <AmiBlitz3.ab3@19998>   BTST #$4,D2
0002EEFC <AmiBlitz3.ab3@19999>    BEQ.w makeregop__skip
0002EF02 <AmiBlitz3.ab3@20000>   LEA regtransa,A3
0002EF06 <AmiBlitz3.ab3@20003>   ANDI.w #$7,D2
0002EF08 <AmiBlitz3.ab3@20004>   MOVE.w D2,D1
0002EF0A <AmiBlitz3.ab3@20005>   LSL.w #8,D1
0002EF0C <AmiBlitz3.ab3@20006>   LSL.w #1,D1
0002EF0E <AmiBlitz3.ab3@20007>   OR.w (A3),D1
0002EF10 <AmiBlitz3.ab3@20008>   MOVEA.l (A7)+,A3
0002EF12 <AmiBlitz3.ab3@20009> RTS
0002EF16 <AmiBlitz3.ab3@20015>   CMP.w #$3C,D0
0002EF1A <AmiBlitz3.ab3@20016>    BCS.w ifchar__no
0002EF1E <AmiBlitz3.ab3@20017>   CMP.w #$3E,D0
0002EF22 <AmiBlitz3.ab3@20018>    BHI.w ifchar__no
0002EF26 <AmiBlitz3.ab3@20019>   SUBI.w #$3C,D0
0002EF28 <AmiBlitz3.ab3@20020>   CMP.w D0,D0
0002EF2A <AmiBlitz3.ab3@20023> RTS
0002EF34 <AmiBlitz3.ab3@20028>   MOVE.w oldqflag,instringon
0002EF3A <AmiBlitz3.ab3@20029>   MOVEA.l lastsourcepos,A5
0002EF40 <AmiBlitz3.ab3@20034>   MOVE.w regnum,-(A7)
0002EF46 <AmiBlitz3.ab3@20035>   CLR.w regnum
0002EF4C <AmiBlitz3.ab3@20036>   MOVE.l destpointer,-(A7)
0002EF52 <AmiBlitz3.ab3@20037>   MOVE.l destbufferend,-(A7)
0002EF58 <AmiBlitz3.ab3@20038>   MOVE.w dontwrite,-(A7)
0002EF5E <AmiBlitz3.ab3@20039>   MOVE.w lasta6,-(A7)
0002EF64 <AmiBlitz3.ab3@20040>   MOVE.w cfetchmode,-(A7)
0002EF68 <AmiBlitz3.ab3@20041>    BNE.w JL_0_BFB6
0002EF72 <AmiBlitz3.ab3@20042>   MOVE.l destbufferend,oldlibat
0002EF78 <AmiBlitz3.ab3@20043>   MOVEA.l constpcat,A0
0002EF7E <AmiBlitz3.ab3@20044>   MOVE.l A0,destpointer
0002EF82 <AmiBlitz3.ab3@20045> BRA.w JL_0_BFBC
0002EF88 <AmiBlitz3.ab3@20048>   MOVEA.l destpointer,A0
0002EF8A <AmiBlitz3.ab3@20051>   MOVE.l A0,-(A7)
0002EF94 <AmiBlitz3.ab3@20052>   MOVE.l constlibat,destbufferend
0002EF9A <AmiBlitz3.ab3@20053>   CLR.w dontwrite
0002EFA2 <AmiBlitz3.ab3@20055>   MOVE.w #$FFFF,lasta6
0002EFAA <AmiBlitz3.ab3@20056>   MOVE.w #$FFFF,cfetchmode
0002EFAE <AmiBlitz3.ab3@20058>     BSR.w arreval
0002EFB0 <AmiBlitz3.ab3@20059>    MOVE.l (a7),a0
0002F0EC <AmiBlitz3.ab3@20061>  !newcalc
0002F0F0 <AmiBlitz3.ab3@20062>    BEQ 'l10
0002F0F2 <AmiBlitz3.ab3@20063>    MOVE.l d0,d3
0002F0F4 <AmiBlitz3.ab3@20064>    MOVEA.l (A7)+,A0
0002F0F8 <AmiBlitz3.ab3@20065> BRA bc1
0002F0FC <AmiBlitz3.ab3@20068>    MOVE.w #$2600,D1
0002F102 <AmiBlitz3.ab3@20069>   OR.w regnum,D1
0002F106 <AmiBlitz3.ab3@20070>    BSR.w writeword
0002F10A <AmiBlitz3.ab3@20071>   MOVE.w #$4E75,D1
0002F10E <AmiBlitz3.ab3@20072>    BSR.w writeword
0002F114 <AmiBlitz3.ab3@20073>   MOVE.w dontwrite,D1
0002F118 <AmiBlitz3.ab3@20074>    BNE.w conmemerr
0002F11A <AmiBlitz3.ab3@20075>   MOVEA.l (A7)+,A0
0002F11C <AmiBlitz3.ab3@20076>   NOP
0002F122 <AmiBlitz3.ab3@20077>    JSR Aclearcache                                         ;simple expression
0002F124 <AmiBlitz3.ab3@20080>    JSR (A0)                                                ;writeresult
0002F12A <AmiBlitz3.ab3@20083>   MOVE.w (A7)+,cfetchmode
0002F130 <AmiBlitz3.ab3@20084>   MOVE.w (A7)+,lasta6
0002F136 <AmiBlitz3.ab3@20085>   MOVE.w (A7)+,dontwrite
0002F13C <AmiBlitz3.ab3@20086>   MOVE.l (A7)+,destbufferend
0002F142 <AmiBlitz3.ab3@20087>   MOVE.l (A7)+,destpointer
0002F148 <AmiBlitz3.ab3@20088>   MOVE.w (A7)+,regnum
0002F14E <AmiBlitz3.ab3@20091> JMP reget
0002F152 <AmiBlitz3.ab3@20094> oldlibat:   Ds.l 1
0002F158 <AmiBlitz3.ab3@20098>   LEA incdir,A0
0002F15C <AmiBlitz3.ab3@20101>   CMP.w #$22,D0
0002F160 <AmiBlitz3.ab3@20102>    BEQ.w JL_0_C052
0002F162 <AmiBlitz3.ab3@20103>   MOVE.b D0,(A0)+
0002F164 <AmiBlitz3.ab3@20104>   TST.w D0
0002F168 <AmiBlitz3.ab3@20105>    BEQ.w JL_0_C05A
0002F16C <AmiBlitz3.ab3@20106>    BMI.w syntaxerr
0002F172 <AmiBlitz3.ab3@20109>   JSR get1bytemain                                         ;_long
0002F176 <AmiBlitz3.ab3@20110> BRA.w JL_0_C03E
0002F178 <AmiBlitz3.ab3@20113> RTS
0002F17E <AmiBlitz3.ab3@20117>   LEA ptr_parameterstore,A1                                ;getparameter
0002F184 <AmiBlitz3.ab3@20118>   LEA incdir,A0
0002F186 <AmiBlitz3.ab3@20119>   MOVEQ.l #-$01,D2
0002F188 <AmiBlitz3.ab3@20122>     ADDQ.w #1,D2
0002F18A <AmiBlitz3.ab3@20123>     MOVE.b (A0)+,(A1)+
0002F18E <AmiBlitz3.ab3@20124>   BNE.w JL_0_C06A
0002F190 <AmiBlitz3.ab3@20125>   SUBQ.w #1,A1
0002F19A <AmiBlitz3.ab3@20127>   MOVE.w oldqflag,instringon
0002F1A0 <AmiBlitz3.ab3@20128>   MOVEA.l lastsourcepos,A5
0002F1A6 <AmiBlitz3.ab3@20132>   JSR get1bytemain
0002F1A8 <AmiBlitz3.ab3@20133>   TST.w D0
0002F1AC <AmiBlitz3.ab3@20134>    BMI.w syntaxerr
0002F1B0 <AmiBlitz3.ab3@20135>   CMP.b #$22,D0
0002F1B4 <AmiBlitz3.ab3@20136>    BEQ.w JL_0_C078
0002F1B6 <AmiBlitz3.ab3@20137>   MOVE.b D0,(A1)+
0002F1BA <AmiBlitz3.ab3@20138>    BEQ.w JL_0_C096
0002F1BC <AmiBlitz3.ab3@20139>   ADDQ.w #1,D2
0002F1C0 <AmiBlitz3.ab3@20140> BRA.w JL_0_C078
0002F1C2 <AmiBlitz3.ab3@20143>   TST.w D2
0002F1C6 <AmiBlitz3.ab3@20144>    BEQ.w syntaxerr
0002F1C8 <AmiBlitz3.ab3@20145> RTS
0002F1CE <AmiBlitz3.ab3@20149>   MOVEA.l constantbase,A2
0002F1D2 <AmiBlitz3.ab3@20150>   MOVEA.l $E(A2),A5
0002F1D8 <AmiBlitz3.ab3@20151>   MOVE.l a5,includesourceline
0002F1DE <AmiBlitz3.ab3@20152>   LEA inctab,a0
0002F1E4 <AmiBlitz3.ab3@20153>   MOVE.w ininclude,d0
0002F1E8 <AmiBlitz3.ab3@20154>   MOVE.l $0(a0,d0*4),d0
0002F1EC <AmiBlitz3.ab3@20155>   MOVEA.l $4(A2),A0
0002F1F0 <AmiBlitz3.ab3@20157>   LEA $0(A0,D0.l),A0
0002F1F2 <AmiBlitz3.ab3@20158>   MOVEA.l A5,A1
0002F1F4 <AmiBlitz3.ab3@20161>     CMPA.l A0,A1
0002F1F8 <AmiBlitz3.ab3@20162>      BCC.w JL_0_C0C6
0002F1FA <AmiBlitz3.ab3@20163>   TST.b (A1)+
0002F1FE <AmiBlitz3.ab3@20164>   BNE.w JL_0_C0B6
0002F202 <AmiBlitz3.ab3@20165> BRA.w JL_0_C112
0002F206 <AmiBlitz3.ab3@20168>   MOVEA.l $4(A2),A1
0002F208 <AmiBlitz3.ab3@20171>   CMPA.l A0,A5
0002F20C <AmiBlitz3.ab3@20172>   BCC.w JL_0_C0D6
0002F20E <AmiBlitz3.ab3@20173>   MOVE.b (A5)+,(A1)+
0002F212 <AmiBlitz3.ab3@20174> BRA.w JL_0_C0CA
0002F214 <AmiBlitz3.ab3@20177>   MOVE.l A1,D0
0002F218 <AmiBlitz3.ab3@20178>   SUB.l $4(A2),D0
0002F21E <AmiBlitz3.ab3@20179>   LEA inctab,a0
0002F220 <AmiBlitz3.ab3@20180>   MOVEQ #0,d1
0002F226 <AmiBlitz3.ab3@20181>   MOVE.w ininclude,d1
0002F22A <AmiBlitz3.ab3@20182>   MOVE.l d0,0(a0,d1*4)
0002F230 <AmiBlitz3.ab3@20184>   MOVEA.l _dosbase,A6
0002F234 <AmiBlitz3.ab3@20185>   MOVE.l $8(A2),D1
0002F236 <AmiBlitz3.ab3@20186>   MOVE.l A1,D2
0002F23C <AmiBlitz3.ab3@20187>   MOVE.l D2,include_base
0002F242 <AmiBlitz3.ab3@20189>   MOVE.l #$10000000,d3                                     ;load whole file
0002F244 <AmiBlitz3.ab3@20190>   SUB.l D0,D3
0002F248 <AmiBlitz3.ab3@20191>    JSR _Read(A6)
0002F24A <AmiBlitz3.ab3@20192>   TST.l D0
0002F24E <AmiBlitz3.ab3@20193>    BMI.w error_reading_file
0002F252 <AmiBlitz3.ab3@20194>    BEQ.w JL_0_C120
0002F258 <AmiBlitz3.ab3@20195>    MOVE.l D0,include_length
0002F29A <AmiBlitz3.ab3@20196>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002F2C4 <AmiBlitz3.ab3@20197>    !basic
0002F2D4 <AmiBlitz3.ab3@20198>    ilen.l  = Peek.l(?include_length)
0002F2E4 <AmiBlitz3.ab3@20199>    ibase.l = Peek.l(?include_base)
0002F2F4 <AmiBlitz3.ab3@20200>    ido.l   = Peek.l(?include_process)
0002F304 <AmiBlitz3.ab3@20201>    *tn.preprocessor = Peek.l(?include_preprocessor)
0002F30E <AmiBlitz3.ab3@20202>    If ido
0002F320 <AmiBlitz3.ab3@20203>      ioffset.l = SkipXtraHeader{ibase,ilen}
0002F346 <AmiBlitz3.ab3@20204>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0002F358 <AmiBlitz3.ab3@20205>      If nilen>0
0002F368 <AmiBlitz3.ab3@20209>        Poke.l ?include_length,nilen
0002F386 <AmiBlitz3.ab3@20212>    !asm
0002F390 <AmiBlitz3.ab3@20213>    MOVE.l #0,include_process
0002F396 <AmiBlitz3.ab3@20214>    MOVE.l include_length,D0
0002F39C <AmiBlitz3.ab3@20215>    LEA inctab,a0
0002F39E <AmiBlitz3.ab3@20216>    MOVEQ #0,d1
0002F3A4 <AmiBlitz3.ab3@20217>    MOVE.w ininclude,d1
0002F3A8 <AmiBlitz3.ab3@20218>    ADD.l d0,0(a0,d1*4)
0002F3AC <AmiBlitz3.ab3@20220>   MOVEA.l $4(A2),A5
0002F3B0 <AmiBlitz3.ab3@20222>    MOVE.l 0(a0,d1*4),d0
0002F3B4 <AmiBlitz3.ab3@20223>   CLR.b $0(A5,D0.l)
0002F3B6 <AmiBlitz3.ab3@20226>   MOVEA.l A5,A0
0002F3B8 <AmiBlitz3.ab3@20229>     TST.b (A0)+
0002F3BC <AmiBlitz3.ab3@20230>   BNE.w JL_0_C114
0002F3C0 <AmiBlitz3.ab3@20231>   MOVE.l A0,$E(A2)
0002F3C2 <AmiBlitz3.ab3@20232> RTS
0002F3C6 <AmiBlitz3.ab3@20235> include_length:        Dc.l 0                              ; for tokenizer!
0002F3CA <AmiBlitz3.ab3@20236> include_base:          Dc.l 0
0002F3CE <AmiBlitz3.ab3@20237> include_process:       Dc.l 0
0002F3D2 <AmiBlitz3.ab3@20238> include_preprocessor:  Dc.l 0
0002F3D6 <AmiBlitz3.ab3@20242>   MOVE.l $8(A2),D1
0002F3DC <AmiBlitz3.ab3@20244>   MOVEA.l _dosbase,A6
0002F3E0 <AmiBlitz3.ab3@20245>   JSR _Close(a6)
0002F3E6 <AmiBlitz3.ab3@20246>   MOVEA.l _execbase,A6
0002F3EA <AmiBlitz3.ab3@20247>   MOVEA.l $4(A2),A1
0002F3F0 <AmiBlitz3.ab3@20248>   MOVE.l #$400*8,D0                                        ;exit include
0002F3F4 <AmiBlitz3.ab3@20250>   JSR _FreeVec(a6)
0002F3FA <AmiBlitz3.ab3@20253>   MOVE.l (A2),constantbase
0002F3FC <AmiBlitz3.ab3@20254>   MOVEA.l A2,A1
0002F3FE <AmiBlitz3.ab3@20255>   MOVEQ.l #$00,D0
0002F402 <AmiBlitz3.ab3@20256>   MOVE.b $12(A2),D0
0002F408 <AmiBlitz3.ab3@20257>   MOVEA.l _execbase,A6
0002F40E <AmiBlitz3.ab3@20258>   MOVE.l mempool2,a0
0002F412 <AmiBlitz3.ab3@20259>   JSR _FreePooled(A6)
0002F418 <AmiBlitz3.ab3@20260>   JSR zero_includename
0002F41E <AmiBlitz3.ab3@20261>   SUBQ.w #1,ininclude
0002F422 <AmiBlitz3.ab3@20262>   BNE.w AJL_0_C09E
0002F428 <AmiBlitz3.ab3@20265>   LEA _include,a0
0002F42C <AmiBlitz3.ab3@20266>   MOVEM.l a0-a6/d0-d7,-(a7)
0002F432 <AmiBlitz3.ab3@20267>   LEA ptr_parameterstore,a1
0002F434 <AmiBlitz3.ab3@20270>     MOVE.b (a0)+,(a1)+
0002F438 <AmiBlitz3.ab3@20271>   BNE 'l1b
0002F43A <AmiBlitz3.ab3@20272>   MOVEQ #9,d2
0002F440 <AmiBlitz3.ab3@20273>   JSR findlabel2
0002F444 <AmiBlitz3.ab3@20274>   BNE 'd
0002F448 <AmiBlitz3.ab3@20275>   CLR.l 8(a2)
0002F44C <AmiBlitz3.ab3@20278>   MOVEM.l (a7)+,a0-a6/d0-d7
0002F44E <AmiBlitz3.ab3@20279> RTS
0002F454 <AmiBlitz3.ab3@20283>   MOVE.l unusedfunc,d0
0002F458 <AmiBlitz3.ab3@20284>   BEQ 'noclear
0002F45C <AmiBlitz3.ab3@20285>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0002F45E <AmiBlitz3.ab3@20288>     MOVE.l d0,a1
0002F462 <AmiBlitz3.ab3@20289>     MOVE.l 4(a1),d0
0002F464 <AmiBlitz3.ab3@20290>     MOVE.l (a1),d2
0002F46A <AmiBlitz3.ab3@20291>     MOVE.l _execbase,a6
0002F46E <AmiBlitz3.ab3@20292>     JSR _FreeMem(a6)
0002F470 <AmiBlitz3.ab3@20293>     MOVE.l d2,d0
0002F474 <AmiBlitz3.ab3@20294>   BNE 'f1
0002F47A <AmiBlitz3.ab3@20295>   CLR.l unusedfunc
0002F47E <AmiBlitz3.ab3@20296>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0002F480 <AmiBlitz3.ab3@20299> RTS
0002F486 <AmiBlitz3.ab3@20303>   MOVEA.l xinclude_base,A2
0002F48C <AmiBlitz3.ab3@20304>   CLR.l xinclude_base
0002F490 <AmiBlitz3.ab3@20307>     CMPA.w #$0,A2
0002F494 <AmiBlitz3.ab3@20308>      BEQ.w JL_0_C186
0002F496 <AmiBlitz3.ab3@20309>     MOVEQ.l #$00,D0
0002F49A <AmiBlitz3.ab3@20310>     MOVE.b 4+8(A2),D0
0002F49C <AmiBlitz3.ab3@20311>     MOVEA.l A2,A1
0002F49E <AmiBlitz3.ab3@20312>     MOVEA.l (A2),A2
0002F4A4 <AmiBlitz3.ab3@20313>     MOVEA.l _execbase,A6
0002F4AA <AmiBlitz3.ab3@20314>     MOVE.l mempool2,a0
0002F4AE <AmiBlitz3.ab3@20315>     JSR _FreePooled(A6)
0002F4B2 <AmiBlitz3.ab3@20316> BRA.w JL_0_C168
0002F4B4 <AmiBlitz3.ab3@20319> RTS
0002F4BA <AmiBlitz3.ab3@20323>   MOVEA.l constantbase,A2
0002F4C0 <AmiBlitz3.ab3@20324>   CLR.l constantbase
0002F4C4 <AmiBlitz3.ab3@20327>     CMPA.w #$0,A2
0002F4C8 <AmiBlitz3.ab3@20328>      BEQ.w JL_0_C1DC
0002F4CC <AmiBlitz3.ab3@20329>     MOVE.l $8(A2),D1
0002F4D0 <AmiBlitz3.ab3@20330>      BEQ.w JL_0_C1AE
0002F4D6 <AmiBlitz3.ab3@20331>     MOVEA.l _dosbase,A6
0002F4DA <AmiBlitz3.ab3@20332>      JSR _Close(A6)
0002F4DE <AmiBlitz3.ab3@20335>     MOVE.l $4(A2),D0
0002F4E2 <AmiBlitz3.ab3@20336>      BEQ.w JL_0_C1C6
0002F4E4 <AmiBlitz3.ab3@20337>     MOVEA.l D0,A1
0002F4EA <AmiBlitz3.ab3@20338>     MOVE.l #$400*8,D0
0002F4F0 <AmiBlitz3.ab3@20339>     MOVEA.l _execbase,A6
0002F4F6 <AmiBlitz3.ab3@20340>     MOVE.l mempool,a0
0002F4FA <AmiBlitz3.ab3@20341>     JSR _FreeVec(a6)
0002F4FC <AmiBlitz3.ab3@20344>     MOVEQ.l #$00,D0
0002F500 <AmiBlitz3.ab3@20345>     MOVE.b $12(A2),D0
0002F502 <AmiBlitz3.ab3@20346>     MOVEA.l A2,A1
0002F504 <AmiBlitz3.ab3@20347>     MOVEA.l (A2),A2
0002F50A <AmiBlitz3.ab3@20348>     MOVEA.l _execbase,A6
0002F510 <AmiBlitz3.ab3@20349>     MOVE.l mempool2,a0
0002F514 <AmiBlitz3.ab3@20350>     JSR _FreePooled(A6)
0002F518 <AmiBlitz3.ab3@20351> BRA.w JL_0_C194
0002F51A <AmiBlitz3.ab3@20354> RTS
0002F51C <AmiBlitz3.ab3@20358>   SWAP D0
0002F520 <AmiBlitz3.ab3@20359>    BSR.w JL_0_C1E6
0002F522 <AmiBlitz3.ab3@20360>   SWAP D0
0002F528 <AmiBlitz3.ab3@20363>   MOVEA.l data2,A4
0002F52E <AmiBlitz3.ab3@20364>   CMPA.l allat,A4
0002F532 <AmiBlitz3.ab3@20365>    BCC.w JL_0_C200
0002F534 <AmiBlitz3.ab3@20366>   MOVE.w D0,(A4)+
0002F53A <AmiBlitz3.ab3@20367>   MOVE.l A4,data2
0002F53C <AmiBlitz3.ab3@20368> RTS
0002F544 <AmiBlitz3.ab3@20371>   MOVE.w #$FFFF,dontwrite
0002F54A <AmiBlitz3.ab3@20372>   ADDQ.l #2,data2
0002F54C <AmiBlitz3.ab3@20373> RTS
0002F552 <AmiBlitz3.ab3@20377>   MOVEA.l data2,A4
0002F558 <AmiBlitz3.ab3@20378>   CMPA.l allat,A4
0002F55C <AmiBlitz3.ab3@20379>    BCC.w JL_0_C22A
0002F55E <AmiBlitz3.ab3@20380>   MOVE.b D0,(A4)+
0002F564 <AmiBlitz3.ab3@20381>   MOVE.l A4,data2
0002F566 <AmiBlitz3.ab3@20382> RTS
0002F56E <AmiBlitz3.ab3@20385>   MOVE.w #$FFFF,dontwrite
0002F574 <AmiBlitz3.ab3@20386>   ADDQ.l #1,data2
0002F576 <AmiBlitz3.ab3@20387> RTS
0002F57A <AmiBlitz3.ab3@20391>   CMP.w #$22,D0
0002F57E <AmiBlitz3.ab3@20392>    BNE.w syntaxerr
0002F584 <AmiBlitz3.ab3@20396>   JSR get1bytemain
0002F588 <AmiBlitz3.ab3@20397>   CMP.b #$22,D0
0002F58C <AmiBlitz3.ab3@20398>    BEQ.w JL_0_C25A
0002F58E <AmiBlitz3.ab3@20399>   TST.w D0
0002F592 <AmiBlitz3.ab3@20400>    BEQ.w syntaxerr
0002F594 <AmiBlitz3.ab3@20401>   MOVE.b D0,(A0)+
0002F598 <AmiBlitz3.ab3@20402> BRA.w JL_0_C242
0002F59A <AmiBlitz3.ab3@20405>   CLR.b (A0)
0002F59C <AmiBlitz3.ab3@20406> RTS
0002F59E <AmiBlitz3.ab3@20409>   TST.l D3
0002F5A0 <AmiBlitz3.ab3@20410> RTS
0002F5A6 <AmiBlitz3.ab3@20413>   LEA ptr_parameterstore,A0
0002F5AC <AmiBlitz3.ab3@20414>   LEA namebuff2,A1
0002F5AE <AmiBlitz3.ab3@20417>     MOVE.b (A0)+,D0
0002F5B2 <AmiBlitz3.ab3@20418>     BEQ.w JL_0_C27C
0002F5B4 <AmiBlitz3.ab3@20419>   CMP.b (A1)+,D0
0002F5B8 <AmiBlitz3.ab3@20420>   BEQ.w JL_0_C26E
0002F5BA <AmiBlitz3.ab3@20421> RTS
0002F5BC <AmiBlitz3.ab3@20424>   TST.b (A1)
0002F5C0 <AmiBlitz3.ab3@20425>   BNE.w JL_0_C284
0002F5C2 <AmiBlitz3.ab3@20426> RTS
0002F5C6 <AmiBlitz3.ab3@20429>   CMP.w #$1,D0
0002F5C8 <AmiBlitz3.ab3@20430> RTS
0002F5CC <AmiBlitz3.ab3@20434>   CMP.w #$2E,D0                                            ;dodeftype
0002F5D0 <AmiBlitz3.ab3@20435>    BNE.w syntaxerr
0002F5D4 <AmiBlitz3.ab3@20436>   BSR.w getparameter2
0002F5DA <AmiBlitz3.ab3@20437>   LEA newtypebase,A2
0002F5DE <AmiBlitz3.ab3@20438>   BSR.w findtype
0002F5E2 <AmiBlitz3.ab3@20439>    BNE.w notypeerr
0002F5E8 <AmiBlitz3.ab3@20440>   TST.b declare
0002F5EC <AmiBlitz3.ab3@20441>    BNE 'l1
0002F5F2 <AmiBlitz3.ab3@20442>   TST.b declare2
0002F5F6 <AmiBlitz3.ab3@20443>    BEQ 'l2
0002F5FE <AmiBlitz3.ab3@20446>   MOVE.b #2,nowdeclare
0002F604 <AmiBlitz3.ab3@20450>   JSR reget
0002F608 <AmiBlitz3.ab3@20451>    BNE.w JL_0_C2B4
0002F60E <AmiBlitz3.ab3@20452>   MOVE.l A2,defaulttype
0002F610 <AmiBlitz3.ab3@20453> RTS
0002F616 <AmiBlitz3.ab3@20456>   MOVE.l defaulttype,-(A7)
0002F61C <AmiBlitz3.ab3@20457>   MOVE.l A2,defaulttype
0002F620 <AmiBlitz3.ab3@20460>   BSR.w getparameter
0002F624 <AmiBlitz3.ab3@20461>    BSR.w JL_0_8E3C
0002F628 <AmiBlitz3.ab3@20462>   CMP.w #$2C,D0
0002F62C <AmiBlitz3.ab3@20463>    BNE.w JL_0_C2D8
0002F632 <AmiBlitz3.ab3@20464>    JSR get1bytemain                                        ; was BSR.w
0002F636 <AmiBlitz3.ab3@20465> BRA.w JL_0_C2C0
0002F63C <AmiBlitz3.ab3@20468>   MOVE.l (A7)+,defaulttype
0002F63E <AmiBlitz3.ab3@20469> RTS
0002F642 <AmiBlitz3.ab3@20473>   LEA $4(A5),A2                                            ;fehler function
0002F644 <AmiBlitz3.ab3@20476>   MOVE.l A2,D0
0002F648 <AmiBlitz3.ab3@20479>   BSR.w getparameter
0002F64C <AmiBlitz3.ab3@20480>   BSR.w JL_0_8E3C
0002F650 <AmiBlitz3.ab3@20481>   BSR.w calcvar
0002F654 <AmiBlitz3.ab3@20482>   CMP.b #$7,D2
0002F658 <AmiBlitz3.ab3@20483>    BNE.w mismatcherr
0002F65C <AmiBlitz3.ab3@20484>   MOVE.w varmode(PC),-(A7)
0002F660 <AmiBlitz3.ab3@20485>   CMP.w #$3D,D0
0002F664 <AmiBlitz3.ab3@20486>    BNE.w syntaxerr
0002F668 <AmiBlitz3.ab3@20487>   BTST #$F,D2
0002F66C <AmiBlitz3.ab3@20488>    BNE.w JL_0_C31C
0002F670 <AmiBlitz3.ab3@20489>   MOVE.w JL_0_C2E0(PC),D1
0002F674 <AmiBlitz3.ab3@20490>   BSR.w pokewda5s
0002F676 <AmiBlitz3.ab3@20491>   MOVE.w D3,D1
0002F67A <AmiBlitz3.ab3@20492>   BSR.w writeword
0002F67E <AmiBlitz3.ab3@20495>   MOVE.w L_0_C2E4(PC),D1
0002F682 <AmiBlitz3.ab3@20496>   BSR.w writeword
0002F688 <AmiBlitz3.ab3@20497>   ADDQ.w #1,regnum
0002F68A <AmiBlitz3.ab3@20498>   MOVEQ.l #$03,D2
0002F68E <AmiBlitz3.ab3@20499>   BSR.w eval
0002F694 <AmiBlitz3.ab3@20500>   MOVE.l #$D000,D1
0002F69A <AmiBlitz3.ab3@20501>   MOVE.l d1,lastinstruction
0002F69C <AmiBlitz3.ab3@20502>   TST.w (A7)+
0002F6A0 <AmiBlitz3.ab3@20503>    BEQ.w Atokejsr
0002F6A2 <AmiBlitz3.ab3@20504>   ADDQ.w #1,D1
0002F6A6 <AmiBlitz3.ab3@20505> BRA.w Atokejsr
0002F6A8 <AmiBlitz3.ab3@20509>   MOVE.w D0,D1
0002F6AC <AmiBlitz3.ab3@20510>    BPL.w syntaxerr
0002F6B0 <AmiBlitz3.ab3@20511>   BCLR #$F,D1
0002F6B6 <AmiBlitz3.ab3@20512>    JSR searchinstr
0002F6BA <AmiBlitz3.ab3@20513>   MOVE.l $12(A2),D0
0002F6BE <AmiBlitz3.ab3@20514>   TST.w -$2(A2,D0.L)
0002F6C2 <AmiBlitz3.ab3@20515>    BEQ.w freeerr
0002F6C4 <AmiBlitz3.ab3@20516>   MOVEQ.l #$02,D2
0002F6C6 <AmiBlitz3.ab3@20517>   MOVE.l A2,-(A7)
0002F6CA <AmiBlitz3.ab3@20518>    BSR.w eval
0002F6CC <AmiBlitz3.ab3@20519>   MOVEA.l (A7)+,A2
0002F6D2 <AmiBlitz3.ab3@20520>   MOVE.l A2,mymaxlib
0002F6D6 <AmiBlitz3.ab3@20521>   ADDA.l $12(A2),A2
0002F6DC <AmiBlitz3.ab3@20522>   TST.b debugmode
0002F6E0 <AmiBlitz3.ab3@20523>    BEQ.w JL_0_C3A8
0002F6E6 <AmiBlitz3.ab3@20524>   MOVE.w regnum,D1
0002F6E8 <AmiBlitz3.ab3@20525>   LSL.w #8,D1
0002F6EA <AmiBlitz3.ab3@20526>   LSL.w #1,D1
0002F6EE <AmiBlitz3.ab3@20527>   ORI.w #$B07C,D1
0002F6F2 <AmiBlitz3.ab3@20528>    BSR.w writeword
0002F6F6 <AmiBlitz3.ab3@20529>   MOVE.w -$4(A2),D1
0002F6FA <AmiBlitz3.ab3@20530>    BSR.w writeword
0002F700 <AmiBlitz3.ab3@20531>   MOVE.l maxchk,D1
0002F704 <AmiBlitz3.ab3@20532>    BSR.w writelong
0002F706 <AmiBlitz3.ab3@20533>   MOVE.l A2,-(A7)
0002F70A <AmiBlitz3.ab3@20534>   MOVE.w #$C30A,D1
0002F70E <AmiBlitz3.ab3@20535>    BSR.w Atokejsr
0002F710 <AmiBlitz3.ab3@20536>   MOVEA.l (A7)+,A2
0002F714 <AmiBlitz3.ab3@20539>   MOVE.w -$2(A2),D2
0002F71A <AmiBlitz3.ab3@20542>   MOVE.w regnum,D1
0002F720 <AmiBlitz3.ab3@20543>   OR.w lslimm,D1
0002F724 <AmiBlitz3.ab3@20544>   CMP.w #$8,D2
0002F728 <AmiBlitz3.ab3@20545>    BCS.w JL_0_C3CE
0002F72C <AmiBlitz3.ab3@20546>    BSR.w writeword
0002F72E <AmiBlitz3.ab3@20547>   SUBQ.w #8,D2
0002F732 <AmiBlitz3.ab3@20548>    BNE.w JL_0_C3AC
0002F736 <AmiBlitz3.ab3@20549> BRA.w JL_0_C3DA
0002F738 <AmiBlitz3.ab3@20552>   MOVE.w D2,D0
0002F73A <AmiBlitz3.ab3@20553>   LSL.w #8,D0
0002F73C <AmiBlitz3.ab3@20554>   LSL.w #1,D0
0002F73E <AmiBlitz3.ab3@20555>   OR.w D0,D1
0002F742 <AmiBlitz3.ab3@20556>   BSR.w writeword
0002F744 <AmiBlitz3.ab3@20559> RTS
0002F748 <AmiBlitz3.ab3@20564>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0002F74A <AmiBlitz3.ab3@20565>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0002F74E <AmiBlitz3.ab3@20569> mymaxlib:  Ds.l 1
0002F752 <AmiBlitz3.ab3@20573>   BSR.w JL_0_C340
0002F756 <AmiBlitz3.ab3@20574>   LEA free(PC),A0
0002F75A <AmiBlitz3.ab3@20575>   LEA freef(PC),A1
0002F760 <AmiBlitz3.ab3@20576>   MOVE.w -$6(A2),$2(A0)
0002F764 <AmiBlitz3.ab3@20577>   BSR.w pokecode
0002F768 <AmiBlitz3.ab3@20578>   MOVE.l -$A(A2),D1
0002F76C <AmiBlitz3.ab3@20581>   BEQ.w nosuperr
0002F770 <AmiBlitz3.ab3@20582>   MOVEA.l mymaxlib(PC),A2
0002F774 <AmiBlitz3.ab3@20583> BRA.w Amakelibsub
0002F778 <AmiBlitz3.ab3@20588>   BSR.w JL_0_C340
0002F77E <AmiBlitz3.ab3@20589>   LEA use,A0
0002F784 <AmiBlitz3.ab3@20590>   LEA usef,A1
0002F78A <AmiBlitz3.ab3@20591>   MOVE.w -$6(A2),$2(A0)
0002F790 <AmiBlitz3.ab3@20592>   MOVE.w -$6(A2),-$2(A1)
0002F794 <AmiBlitz3.ab3@20593>   ADDQ.w #4,-$2(A1)
0002F798 <AmiBlitz3.ab3@20594>   BSR.w pokecode
0002F79C <AmiBlitz3.ab3@20595>   MOVE.l -$E(A2),D1
0002F7A0 <AmiBlitz3.ab3@20596> BRA.w maxjsr
0002F7A6 <AmiBlitz3.ab3@20600>   JSR get1bytemain
0002F7AC <AmiBlitz3.ab3@20604>   MOVE.l firstiff,D0
0002F7B0 <AmiBlitz3.ab3@20605>    BEQ.w noiferr
0002F7B2 <AmiBlitz3.ab3@20606>   MOVEA.l D0,A0
0002F7B8 <AmiBlitz3.ab3@20607>   CMPI.b #$1,$D(A0)
0002F7BC <AmiBlitz3.ab3@20608>    BEQ.w illelseerr
0002F7C0 <AmiBlitz3.ab3@20609>   MOVE.w #$6000,D1
0002F7C6 <AmiBlitz3.ab3@20611>     TST.b fast
0002F7CA <AmiBlitz3.ab3@20612>     BEQ 'l1
0002F7D0 <AmiBlitz3.ab3@20613>     OR.l #$ff,d1
0002F7D4 <AmiBlitz3.ab3@20614>     BSR writeword
0002F7D6 <AmiBlitz3.ab3@20618>   SWAP D1
0002F7DA <AmiBlitz3.ab3@20619>   BSR.w writelong
0002F7DC <AmiBlitz3.ab3@20620>   MOVEQ.l #$00,D1
0002F7E0 <AmiBlitz3.ab3@20621>   BSR.w AJL_0_D7B8
0002F7E8 <AmiBlitz3.ab3@20622>   MOVE.l destpointer,$8(A0)
0002F7EC <AmiBlitz3.ab3@20623> BRA.w do_then
0002F7F2 <AmiBlitz3.ab3@20627>   LEA ptr_parameterstore,A0
0002F7F4 <AmiBlitz3.ab3@20628>   MOVE.l A0,-(A7)
0002F7F8 <AmiBlitz3.ab3@20629>   BSR.w JL_0_C23A
0002F7FC <AmiBlitz3.ab3@20630> BRA.w handle_compileerror
0002F800 <AmiBlitz3.ab3@20634>   BSR.w JL_0_BF6A
0002F802 <AmiBlitz3.ab3@20635>   MOVEQ.l #$05,D1
0002F80C <AmiBlitz3.ab3@20637>   MOVE.w oldqflag,instringon
0002F812 <AmiBlitz3.ab3@20638>   MOVEA.l lastsourcepos,A5
0002F818 <AmiBlitz3.ab3@20639>   LEA AJL_0_C25E,A0
0002F81C <AmiBlitz3.ab3@20640> BRA.w JL_0_C4B4
0002F822 <AmiBlitz3.ab3@20644>   LEA ptr_parameterstore,A0
0002F826 <AmiBlitz3.ab3@20645>   BSR.w JL_0_C23A
0002F82C <AmiBlitz3.ab3@20646>   JSR get1bytemain
0002F830 <AmiBlitz3.ab3@20647>   BSR.w JL_0_CCA8
0002F836 <AmiBlitz3.ab3@20648>   LEA namebuff2,A0
0002F83A <AmiBlitz3.ab3@20649>   BSR.w JL_0_C23A
0002F840 <AmiBlitz3.ab3@20650>   LEA AJL_0_C262,A0
0002F842 <AmiBlitz3.ab3@20653>   LSL.w #2,D1
0002F848 <AmiBlitz3.ab3@20654>   LEA CIF_branches,A1
0002F84C <AmiBlitz3.ab3@20655>   MOVE.l $0(A1,D1.W),-(A7)
0002F84E <AmiBlitz3.ab3@20656>   MOVEQ.l #-$01,D1
0002F850 <AmiBlitz3.ab3@20659>   JSR (A0)
0002F852 <AmiBlitz3.ab3@20661>   MOVEA.l (A7)+,A1
0002F854 <AmiBlitz3.ab3@20663> JMP (A1)
0002F858 <AmiBlitz3.ab3@20667>   BEQ.w JL_0_C4F6
0002F85C <AmiBlitz3.ab3@20668> BRA.w JL_0_C4F4
0002F860 <AmiBlitz3.ab3@20672>   BNE.w JL_0_C4F6
0002F864 <AmiBlitz3.ab3@20673> BRA.w JL_0_C4F4
0002F868 <AmiBlitz3.ab3@20677>   BLT.w JL_0_C4F6
0002F86C <AmiBlitz3.ab3@20678> BRA.w JL_0_C4F4
0002F870 <AmiBlitz3.ab3@20682>   BLE.w JL_0_C4F6
0002F874 <AmiBlitz3.ab3@20683> BRA.w JL_0_C4F4
0002F878 <AmiBlitz3.ab3@20687>   BGT.w JL_0_C4F6
0002F87C <AmiBlitz3.ab3@20688> BRA.w JL_0_C4F4
0002F880 <AmiBlitz3.ab3@20692>   BGE.w JL_0_C4F6
0002F882 <AmiBlitz3.ab3@20695>   MOVEQ.l #$00,D1
0002F888 <AmiBlitz3.ab3@20698>   MOVEA.l concomsp,A0
0002F88E <AmiBlitz3.ab3@20699>   MOVE.w skipcode,(A0)+
0002F894 <AmiBlitz3.ab3@20700>   MOVE.l A0,concomsp
0002F89A <AmiBlitz3.ab3@20701>   MOVE.w D1,skipcode
0002F8A0 <AmiBlitz3.ab3@20702>   JSR get1bytemain
0002F8A4 <AmiBlitz3.ab3@20703>    BNE.w syntaxerr
0002F8AA <AmiBlitz3.ab3@20704> JMP bakup
0002F8B2 <AmiBlitz3.ab3@20708> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0002F8B6 <AmiBlitz3.ab3@20709> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0002F8BA <AmiBlitz3.ab3@20716>   MOVE.w #$FC17,D1
0002F8C0 <AmiBlitz3.ab3@20717>   JSR uselib
0002F8C6 <AmiBlitz3.ab3@20719>   JSR reget
0002F8CA <AmiBlitz3.ab3@20720>    BEQ.w do_Restore__resbeg
0002F8CE <AmiBlitz3.ab3@20721>   BSR.w JL_0_AE22                                          ;get label name!
0002F8D2 <AmiBlitz3.ab3@20722>   MOVE.w rescode(PC),D1
0002F8D6 <AmiBlitz3.ab3@20723>   BSR.w writeword
0002F8DC <AmiBlitz3.ab3@20724>   JSR addoff                                               ;add offset
0002F8E0 <AmiBlitz3.ab3@20725>   MOVE.l $C(A2),D1
0002F8E4 <AmiBlitz3.ab3@20726>   BSR.w writelong
0002F8E8 <AmiBlitz3.ab3@20727>   MOVE.w rescode+6(PC),D1
0002F8EC <AmiBlitz3.ab3@20728>   BSR.w writeword
0002F8F0 <AmiBlitz3.ab3@20729>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0002F8F4 <AmiBlitz3.ab3@20730>   BEQ.w do_Restore__no
0002F8F6 <AmiBlitz3.ab3@20732>   MOVEA.l D1,A1
0002F8FA <AmiBlitz3.ab3@20733>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0002F8FC <AmiBlitz3.ab3@20734> RTS
0002F8FE <AmiBlitz3.ab3@20739> RTS
0002F902 <AmiBlitz3.ab3@20742>   MOVE.w #$CD00,D1
0002F908 <AmiBlitz3.ab3@20743>   JSR Atokejsr
0002F90C <AmiBlitz3.ab3@20744>   MOVE.l rescode2(PC),D1
0002F912 <AmiBlitz3.ab3@20745> JMP writelong
0002F916 <AmiBlitz3.ab3@20749>   MOVE.w #$FC17,D1
0002F91C <AmiBlitz3.ab3@20750>   JSR uselib
0002F922 <AmiBlitz3.ab3@20753>   MOVE.l dataget,D1
0002F926 <AmiBlitz3.ab3@20754>   BSR.w writelong
0002F92A <AmiBlitz3.ab3@20755>   BSR.w getparameter
0002F92E <AmiBlitz3.ab3@20756>   BSR.w JL_0_8E3C
0002F932 <AmiBlitz3.ab3@20757>   BSR.w calcvar
0002F936 <AmiBlitz3.ab3@20758>   BTST #$E,D2
0002F93A <AmiBlitz3.ab3@20759>    BEQ.w JL_0_C5A6
0002F93E <AmiBlitz3.ab3@20760>   MOVE.b #$6,D2
0002F940 <AmiBlitz3.ab3@20763>   TST.b D2
0002F944 <AmiBlitz3.ab3@20764>    BEQ.w noleterr
0002F94A <AmiBlitz3.ab3@20765>   TST.b debugmode
0002F94E <AmiBlitz3.ab3@20766>    BEQ.w JL_0_C5D0
0002F952 <AmiBlitz3.ab3@20767>   MOVE.w #$7000,D1
0002F954 <AmiBlitz3.ab3@20768>   MOVE.b D2,D1
0002F958 <AmiBlitz3.ab3@20769>   ANDI.b #$F,D1
0002F95C <AmiBlitz3.ab3@20770>   BSR.w writeword
0002F960 <AmiBlitz3.ab3@20771>   MOVE.w #$C310,D1
0002F962 <AmiBlitz3.ab3@20772>   MOVE.w D2,-(A7)
0002F966 <AmiBlitz3.ab3@20773>   BSR.w Atokejsr
0002F968 <AmiBlitz3.ab3@20774>   MOVE.w (A7)+,D2
0002F96C <AmiBlitz3.ab3@20777>   CMP.b #$7,D2
0002F970 <AmiBlitz3.ab3@20778>    BEQ.w JL_0_C684
0002F974 <AmiBlitz3.ab3@20779>   CMP.b #$1,D2
0002F978 <AmiBlitz3.ab3@20780>    BNE.w JL_0_C62A
0002F97E <AmiBlitz3.ab3@20781>   LEA dataletb2,A0
0002F984 <AmiBlitz3.ab3@20782>   LEA dataletb2f,A1
0002F988 <AmiBlitz3.ab3@20783>   BTST #$F,D2
0002F98C <AmiBlitz3.ab3@20784>    BEQ.w JL_0_C5FC
0002F990 <AmiBlitz3.ab3@20785>   BSR.w pokecode
0002F994 <AmiBlitz3.ab3@20786> BRA.w JL_0_C668
0002F99A <AmiBlitz3.ab3@20789>   LEA dataletb,A0
0002F9A0 <AmiBlitz3.ab3@20790>   LEA dataletbf,A1
0002F9A6 <AmiBlitz3.ab3@20791>   TST.w varmode
0002F9AA <AmiBlitz3.ab3@20792>    BEQ.w JL_0_C61E
0002F9B0 <AmiBlitz3.ab3@20793>   LEA dataletbl,A0
0002F9B6 <AmiBlitz3.ab3@20794>   LEA dataletblf,A1
0002F9BA <AmiBlitz3.ab3@20797>   MOVE.w D3,$4(A0)
0002F9BE <AmiBlitz3.ab3@20798>   BSR.w pokecode
0002F9C2 <AmiBlitz3.ab3@20799> BRA.w JL_0_C668
0002F9C8 <AmiBlitz3.ab3@20802>   LEA dataletw,A0
0002F9CC <AmiBlitz3.ab3@20803>   CMP.b #$3,D2
0002F9D0 <AmiBlitz3.ab3@20804>    BCS.w JL_0_C63E
0002F9D6 <AmiBlitz3.ab3@20805>   LEA dataletl,A0
0002F9DA <AmiBlitz3.ab3@20808>   BTST #$F,D2
0002F9DE <AmiBlitz3.ab3@20809>    BEQ.w JL_0_C652
0002F9E2 <AmiBlitz3.ab3@20810>   MOVE.w $4(A0),D1
0002F9E6 <AmiBlitz3.ab3@20811>    BSR.w writeword
0002F9EA <AmiBlitz3.ab3@20812> BRA.w JL_0_C668
0002F9F0 <AmiBlitz3.ab3@20815>   TST.w varmode
0002F9F4 <AmiBlitz3.ab3@20816>    BEQ.w JL_0_C65E
0002F9F6 <AmiBlitz3.ab3@20817>   ADDQ.w #6,A0
0002F9FA <AmiBlitz3.ab3@20820>   MOVE.w D3,$2(A0)
0002F9FC <AmiBlitz3.ab3@20821>   MOVE.l (A0),D1
0002FA00 <AmiBlitz3.ab3@20822>   BSR.w writelong
0002FA06 <AmiBlitz3.ab3@20825>   MOVE.l dataput,D1
0002FA0A <AmiBlitz3.ab3@20826>    BSR.w writelong
0002FA0E <AmiBlitz3.ab3@20827>   CMP.w #$2C,D0
0002FA12 <AmiBlitz3.ab3@20828>    BEQ.w JL_0_C67C
0002FA14 <AmiBlitz3.ab3@20829> RTS
0002FA1A <AmiBlitz3.ab3@20832>   JSR get1bytemain
0002FA1E <AmiBlitz3.ab3@20833> BRA.w JL_0_C584
0002FA24 <AmiBlitz3.ab3@20837>   MOVE.w stlenget,D1
0002FA28 <AmiBlitz3.ab3@20838>    BSR.w writeword
0002FA2C <AmiBlitz3.ab3@20839>   BTST #$F,D2
0002FA30 <AmiBlitz3.ab3@20840>    BNE.w JL_0_C6C0
0002FA36 <AmiBlitz3.ab3@20841>   TST.w varmode
0002FA3A <AmiBlitz3.ab3@20842>    BEQ.w JL_0_C6B0
0002FA40 <AmiBlitz3.ab3@20843>   MOVE.w D3,leaampl+2
0002FA46 <AmiBlitz3.ab3@20844>   MOVE.l leaampl,D1
0002FA4A <AmiBlitz3.ab3@20845> BRA.w JL_0_C6BC
0002FA50 <AmiBlitz3.ab3@20848>   MOVE.w D3,leaamp+2
0002FA56 <AmiBlitz3.ab3@20849>   MOVE.l leaamp,D1
0002FA5A <AmiBlitz3.ab3@20852>   BSR.w writelong
0002FA5E <AmiBlitz3.ab3@20855>   MOVE.w #$C701,D1
0002FA64 <AmiBlitz3.ab3@20856>   MOVE.w varmode,D2
0002FA68 <AmiBlitz3.ab3@20857>    BEQ.w JL_0_C6D0
0002FA6A <AmiBlitz3.ab3@20858>   SUBQ.w #1,D1
0002FA6E <AmiBlitz3.ab3@20861>   BSR.w Atokejsr
0002FA76 <AmiBlitz3.ab3@20862>   MOVE.w #$FFFF,lasta6
0002FA7C <AmiBlitz3.ab3@20863>   LEA stalign,A0
0002FA82 <AmiBlitz3.ab3@20864>   LEA stalignf,A1
0002FA86 <AmiBlitz3.ab3@20865>   BSR.w pokecode
0002FA8A <AmiBlitz3.ab3@20866> BRA.w JL_0_C668
0002FA8E <AmiBlitz3.ab3@20870>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0002FA92 <AmiBlitz3.ab3@20871>    BNE.w JL_0_C720
0002FA98 <AmiBlitz3.ab3@20872>   JSR get1bytemain
0002FA9C <AmiBlitz3.ab3@20873>   CMP.w #$77,D0
0002FAA0 <AmiBlitz3.ab3@20874>    BEQ.w JL_0_C71C
0002FAA4 <AmiBlitz3.ab3@20875>   CMP.w #$62,D0
0002FAA8 <AmiBlitz3.ab3@20876>    BEQ.w JL_0_C718
0002FAAC <AmiBlitz3.ab3@20877>   CMP.w #"s",d0
0002FAB0 <AmiBlitz3.ab3@20878>   BEQ single3
0002FAB4 <AmiBlitz3.ab3@20879>   CMP.w #"d",d0
0002FAB8 <AmiBlitz3.ab3@20880>   BEQ double3
0002FABC <AmiBlitz3.ab3@20881>   CMP.w #$6C,D0
0002FAC0 <AmiBlitz3.ab3@20882>    BNE.w syntaxerr
0002FAC2 <AmiBlitz3.ab3@20883>   MOVEQ.l #$02,D1
0002FAC4 <AmiBlitz3.ab3@20884> RTS
0002FACC <AmiBlitz3.ab3@20888>   MOVE.b #1,iee
0002FACE <AmiBlitz3.ab3@20889>   MOVEQ.l #$3,d1
0002FAD0 <AmiBlitz3.ab3@20890> RTS
0002FAD8 <AmiBlitz3.ab3@20894>   MOVE.b #1,iee
0002FADA <AmiBlitz3.ab3@20895>   MOVEQ.l #$4,d1
0002FADC <AmiBlitz3.ab3@20896> RTS
0002FADE <AmiBlitz3.ab3@20900>   MOVEQ.l #$00,D1
0002FAE0 <AmiBlitz3.ab3@20901> RTS
0002FAE2 <AmiBlitz3.ab3@20905>   MOVEQ.l #$01,D1
0002FAE4 <AmiBlitz3.ab3@20906> RTS
0002FAE6 <AmiBlitz3.ab3@20910>   MOVEQ.l #$01,D1
0002FAEC <AmiBlitz3.ab3@20911> JMP bakup
0002FAF0 <AmiBlitz3.ab3@20915>   BSR.w JL_0_C6F0
0002FAF2 <AmiBlitz3.ab3@20917>   MOVE.w D1,-(A7)
0002FAF6 <AmiBlitz3.ab3@20918>    BSR.w AJL_0_BF6E
0002FAFA <AmiBlitz3.ab3@20919>   CMP.w #$2C,D0
0002FAFE <AmiBlitz3.ab3@20920>    BNE.w syntaxerr
0002FB00 <AmiBlitz3.ab3@20921>   MOVE.l D3,-(A7)
0002FB04 <AmiBlitz3.ab3@20922>    BSR.w AJL_0_BF6E
0002FB06 <AmiBlitz3.ab3@20923>   MOVE.l D3,D1
0002FB08 <AmiBlitz3.ab3@20924>   MOVE.l (A7)+,D3
0002FB0A <AmiBlitz3.ab3@20925>   MOVE.w (A7)+,D2
0002FB0E <AmiBlitz3.ab3@20926>    BEQ.w JL_0_C774
0002FB12 <AmiBlitz3.ab3@20930>   CMP.w #$1,D2
0002FB16 <AmiBlitz3.ab3@20931>    BEQ.w JL_0_C768
0002FB18 <AmiBlitz3.ab3@20934>   SWAP D1
0002FB1C <AmiBlitz3.ab3@20935>    BSR.w writeword
0002FB1E <AmiBlitz3.ab3@20936>   SWAP D1
0002FB22 <AmiBlitz3.ab3@20937>    BSR.w writeword
0002FB24 <AmiBlitz3.ab3@20938>   SUBQ.l #1,D3
0002FB28 <AmiBlitz3.ab3@20939>    BNE.w JL_0_C754
0002FB2A <AmiBlitz3.ab3@20940> RTS
0002FB2E <AmiBlitz3.ab3@20943>    BSR.w writeword
0002FB30 <AmiBlitz3.ab3@20944>   SUBQ.l #1,D3
0002FB34 <AmiBlitz3.ab3@20945>    BNE.w JL_0_C768
0002FB36 <AmiBlitz3.ab3@20946> RTS
0002FB3A <AmiBlitz3.ab3@20949>    BSR.w writebyte
0002FB3C <AmiBlitz3.ab3@20950>   SUBQ.l #1,D3
0002FB40 <AmiBlitz3.ab3@20951>    BNE.w JL_0_C774
0002FB42 <AmiBlitz3.ab3@20952> RTS
0002FB46 <AmiBlitz3.ab3@20956>   BSR.w JL_0_C6F0                                          ;definestorage
0002FB48 <AmiBlitz3.ab3@20957>   MOVE.w D1,-(A7)
0002FB4C <AmiBlitz3.ab3@20958>   BSR.w AJL_0_BF6E
0002FB4E <AmiBlitz3.ab3@20959>   MOVE.w (A7)+,D1
0002FB50 <AmiBlitz3.ab3@20960>   LSL.l D1,D3
0002FB52 <AmiBlitz3.ab3@20961>   MOVE.l d3,d0
0002FB56 <AmiBlitz3.ab3@20962>   BEQ 'll5
0002FB58 <AmiBlitz3.ab3@20963>   MOVEQ #0,d1
0002FB5E <AmiBlitz3.ab3@20966>     JSR writebyte
0002FB60 <AmiBlitz3.ab3@20967>     SUBQ.l #1,d3
0002FB64 <AmiBlitz3.ab3@20968>   BNE.s 'll10
0002FB66 <AmiBlitz3.ab3@20971> RTS
0002FB68 <AmiBlitz3.ab3@20975>   MOVE.w D0,-(A7)
0002FB6E <AmiBlitz3.ab3@20976>   LEA dummyasm,A0
0002FB74 <AmiBlitz3.ab3@20977>   MOVEA.l destpointer,A1
0002FB7E <AmiBlitz3.ab3@20978>   MOVE.w asmlen2,asmlen
0002FB84 <AmiBlitz3.ab3@20979>   JSR insasm
0002FB86 <AmiBlitz3.ab3@20980>   MOVE.w (A7)+,D0
0002FB88 <AmiBlitz3.ab3@20981> RTS
0002FB8C <AmiBlitz3.ab3@20985>   BSR.w JL_0_C6F0
0002FB96 <AmiBlitz3.ab3@20987>   MOVE.l #ptr_parameterstore,asmbuff
0002FB98 <AmiBlitz3.ab3@20988>   TST.w D1
0002FB9C <AmiBlitz3.ab3@20989>    BEQ.w JL_0_C7EE
0002FBA0 <AmiBlitz3.ab3@20990>   CMP.w #$1,D1
0002FBA4 <AmiBlitz3.ab3@20991>    BEQ.w JL_0_C844
0002FBA8 <AmiBlitz3.ab3@20992>   CMP.w #$2,d1
0002FBAC <AmiBlitz3.ab3@20993>    BEQ long
0002FBB0 <AmiBlitz3.ab3@20994>   CMP.w #$3,d1
0002FBB4 <AmiBlitz3.ab3@20995>    BEQ single
0002FBB6 <AmiBlitz3.ab3@20996>    MOVEQ.l #$0d,D3
0002FBBC <AmiBlitz3.ab3@21002>    JSR asmconst
0002FBC0 <AmiBlitz3.ab3@21003>    BSR.w JL_0_C796
0002FBC4 <AmiBlitz3.ab3@21004>    BSR.w writelong
0002FBC8 <AmiBlitz3.ab3@21005>    BSR   writelong
0002FBCC <AmiBlitz3.ab3@21006>   CMP.w #$2C,D0
0002FBD0 <AmiBlitz3.ab3@21007>    BEQ.w JL_0_C7D8b
0002FBD2 <AmiBlitz3.ab3@21008> RTS
0002FBD4 <AmiBlitz3.ab3@21012>   MOVEQ.l #$0B,D3
0002FBDC <AmiBlitz3.ab3@21016>   MOVE.b #1,_dcb
0002FBE2 <AmiBlitz3.ab3@21019>   JSR asmconst
0002FBE8 <AmiBlitz3.ab3@21020>   CLR.b _dcb
0002FBEC <AmiBlitz3.ab3@21021>   BSR.w JL_0_C796
0002FBF0 <AmiBlitz3.ab3@21022>   BSR writebyte
0002FBF4 <AmiBlitz3.ab3@21023>   BSR writebyte
0002FBF8 <AmiBlitz3.ab3@21024>   BSR writebyte                                            ;long
0002FBFC <AmiBlitz3.ab3@21025>   BSR writebyte
0002FC00 <AmiBlitz3.ab3@21026>   CMP.w #$2C,D0
0002FC04 <AmiBlitz3.ab3@21027>    BEQ.w JL_0_C7D8
0002FC06 <AmiBlitz3.ab3@21028> RTS
0002FC08 <AmiBlitz3.ab3@21032>   MOVEQ.l #$0c,D3
0002FC10 <AmiBlitz3.ab3@21036>   MOVE.b #1,_dcb
0002FC16 <AmiBlitz3.ab3@21039>   JSR asmconst
0002FC1C <AmiBlitz3.ab3@21040>   CLR.b _dcb
0002FC20 <AmiBlitz3.ab3@21041>   BSR.w JL_0_C796
0002FC24 <AmiBlitz3.ab3@21042>   BSR.w writebyte
0002FC28 <AmiBlitz3.ab3@21043>   BSR.w writebyte
0002FC2C <AmiBlitz3.ab3@21044>   BSR.w writebyte
0002FC30 <AmiBlitz3.ab3@21045>   BSR.w writebyte
0002FC34 <AmiBlitz3.ab3@21046>   CMP.w #$2C,D0
0002FC38 <AmiBlitz3.ab3@21047>    BEQ.w JL_0_C7D8a
0002FC3A <AmiBlitz3.ab3@21048> RTS
0002FC3C <AmiBlitz3.ab3@21053>   MOVEQ.l #$11,D3
0002FC42 <AmiBlitz3.ab3@21056>   JSR get1bytemain
0002FC46 <AmiBlitz3.ab3@21057>   CMP.w #$22,D0
0002FC4A <AmiBlitz3.ab3@21058>    BNE.w JL_0_C81E
0002FC4C <AmiBlitz3.ab3@21061>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0002FC50 <AmiBlitz3.ab3@21062>    BEQ.w syntaxerr
0002FC54 <AmiBlitz3.ab3@21063>   CMP.w #$22,D0
0002FC58 <AmiBlitz3.ab3@21064>    BEQ.w JL_0_C816
0002FC5C <AmiBlitz3.ab3@21065>   CMP.b #"\",d0
0002FC60 <AmiBlitz3.ab3@21066>    BNE 'n1
0002FC64 <AmiBlitz3.ab3@21067>   CMP.b #"\",(a5)
0002FC68 <AmiBlitz3.ab3@21068>    BEQ 'do1
0002FC6A <AmiBlitz3.ab3@21071>   MOVE.w D0,D1
0002FC6E <AmiBlitz3.ab3@21072>   BSR.w writebyte
0002FC72 <AmiBlitz3.ab3@21073> BRA.w JL_0_C7FC
0002FC7A <AmiBlitz3.ab3@21076>   CMP.l #"__DA",1(a5)
0002FC7E <AmiBlitz3.ab3@21077>    BNE 'nodate1
0002FC86 <AmiBlitz3.ab3@21078>   CMP.l #"TE__",5(a5)
0002FC8A <AmiBlitz3.ab3@21079>    BEQ 'c1
0002FC92 <AmiBlitz3.ab3@21080>   CMP.l #"TE_G",5(a5)
0002FC96 <AmiBlitz3.ab3@21081>    BNE 'nodate1
0002FC9E <AmiBlitz3.ab3@21082>   CMP.l #"ER__",9(a5)
0002FCA2 <AmiBlitz3.ab3@21083>    BNE 'nodate1
0002FCA8 <AmiBlitz3.ab3@21084>   JSR compiledatedc_ger
0002FCAC <AmiBlitz3.ab3@21085> BRA 'n1
0002FCB2 <AmiBlitz3.ab3@21088>   JSR compiledatedc
0002FCB6 <AmiBlitz3.ab3@21089> BRA 'n1
0002FCBE <AmiBlitz3.ab3@21092>   CMP.l #"__VE",1(a5)
0002FCC2 <AmiBlitz3.ab3@21093>    BNE 'n1
0002FCC8 <AmiBlitz3.ab3@21094>   CMP.w #"R_",5(a5)
0002FCCC <AmiBlitz3.ab3@21095>    BNE 'n1
0002FCD2 <AmiBlitz3.ab3@21096>   JSR version_string_dc
0002FCD6 <AmiBlitz3.ab3@21097> BRA.w JL_0_C7FC
0002FCDC <AmiBlitz3.ab3@21101>   CLR.w instringon
0002FCE2 <AmiBlitz3.ab3@21102>   JSR get1bytemain
0002FCE6 <AmiBlitz3.ab3@21103> BRA.w JL_0_C83A
0002FCF0 <AmiBlitz3.ab3@21108>    MOVE.w oldqflag,instringon
0002FCF6 <AmiBlitz3.ab3@21109>   MOVEA.l lastsourcepos,A5
0002FCFC <AmiBlitz3.ab3@21110>    JSR asmconst
0002FD02 <AmiBlitz3.ab3@21111>   SUBQ.l #1,destpointer
0002FD06 <AmiBlitz3.ab3@21112>    BSR.w JL_0_C796
0002FD0C <AmiBlitz3.ab3@21113>   ADDQ.l #1,destpointer
0002FD10 <AmiBlitz3.ab3@21114>    BSR.w writebyte
0002FD14 <AmiBlitz3.ab3@21117>   CMP.w #$2C,D0
0002FD18 <AmiBlitz3.ab3@21118>    BEQ.w JL_0_C7F0
0002FD1A <AmiBlitz3.ab3@21119> RTS
0002FD1C <AmiBlitz3.ab3@21123>   MOVEQ.l #$10,D3
0002FD24 <AmiBlitz3.ab3@21129>   MOVE.b #1,_dcb
0002FD2A <AmiBlitz3.ab3@21130>   JSR asmconst
0002FD30 <AmiBlitz3.ab3@21131>   CLR.b _dcb
0002FD34 <AmiBlitz3.ab3@21132>   BSR.w JL_0_C796
0002FD38 <AmiBlitz3.ab3@21133>   BSR.w writebyte
0002FD3C <AmiBlitz3.ab3@21134>   BSR.w writebyte
0002FD40 <AmiBlitz3.ab3@21135>   CMP.w #$2C,D0
0002FD44 <AmiBlitz3.ab3@21136>    BEQ.w JL_0_C84A
0002FD46 <AmiBlitz3.ab3@21137> RTS
0002FD4C <AmiBlitz3.ab3@21141>   ADDQ.l #3,destpointer
0002FD54 <AmiBlitz3.ab3@21142>   ANDI.w #$FFFC,destpointer+2
0002FD56 <AmiBlitz3.ab3@21143> RTS
0002FD5C <AmiBlitz3.ab3@21147>   ADDQ.l #7,destpointer
0002FD64 <AmiBlitz3.ab3@21148>   ANDI.w #$FFF8,destpointer+2
0002FD66 <AmiBlitz3.ab3@21149> RTS
0002FD6C <AmiBlitz3.ab3@21153>   ADDQ.l #1,destpointer                                    ;even
0002FD74 <AmiBlitz3.ab3@21154>   BCLR #$0,destpointer+3
0002FD76 <AmiBlitz3.ab3@21155> RTS
0002FD78 <AmiBlitz3.ab3@21158> datasize: Ds.w 1
0002FD7E <AmiBlitz3.ab3@21168>   TST.b debugmode
0002FD82 <AmiBlitz3.ab3@21169>   BEQ.w pdt__skip
0002FD86 <AmiBlitz3.ab3@21170>   MOVE.w #$4420,D0                                         ;'D '
0002FD8A <AmiBlitz3.ab3@21171>   MOVE.b datasize+1(PC),D0
0002FD8E <AmiBlitz3.ab3@21172> BRA.w JL_0_C1E6
0002FD90 <AmiBlitz3.ab3@21175> RTS
0002FD94 <AmiBlitz3.ab3@21179>   MOVE.w #$FC17,D1
0002FD9A <AmiBlitz3.ab3@21180>    JSR uselib
0002FDA4 <AmiBlitz3.ab3@21182>    MOVE.w oldqflag,instringon
0002FDAA <AmiBlitz3.ab3@21183>   MOVEA.l lastsourcepos,A5
0002FDB0 <AmiBlitz3.ab3@21184>    JSR AJL_0_498A
0002FDB6 <AmiBlitz3.ab3@21185>   MOVE.w D1,datasize
0002FDBA <AmiBlitz3.ab3@21186>   CMP.w #$7,D1
0002FDBE <AmiBlitz3.ab3@21187>    BEQ.w JL_0_C944
0002FDC0 <AmiBlitz3.ab3@21188>   MOVE.w D1,-(A7)
0002FDC4 <AmiBlitz3.ab3@21191>   BSR.w pdt
0002FDC6 <AmiBlitz3.ab3@21192>   MOVE.w (A7),D2
0002FDCA <AmiBlitz3.ab3@21193>    BSR.w JL_0_B1D8
0002FDCC <AmiBlitz3.ab3@21194>   CMP.w (A7),D2                                            ;datamode
0002FDD0 <AmiBlitz3.ab3@21195>    BEQ.w JL_0_C920
0002FDD2 <AmiBlitz3.ab3@21196>   MOVE.w D2,D1
0002FDD4 <AmiBlitz3.ab3@21197>   MOVE.w (A7),D2
0002FDD8 <AmiBlitz3.ab3@21198>   CMP.w #$2,D2
0002FDDC <AmiBlitz3.ab3@21199>    BNE.w JL_0_C8FE
0002FDE0 <AmiBlitz3.ab3@21200>   CMP.w #$3,D1
0002FDE4 <AmiBlitz3.ab3@21201>    BNE.w baddaterr
0002FDEA <AmiBlitz3.ab3@21202>   CMP.l #$10000,D3
0002FDEE <AmiBlitz3.ab3@21203>    BCC.w baddaterr
0002FDF2 <AmiBlitz3.ab3@21204> BRA.w JL_0_C920
0002FDF6 <AmiBlitz3.ab3@21207>   CMP.w #$1,D2
0002FDFA <AmiBlitz3.ab3@21208>    BNE.w JL_0_C91C
0002FDFE <AmiBlitz3.ab3@21209>   CMP.w #$2,D1
0002FE02 <AmiBlitz3.ab3@21210>    BNE.w baddaterr
0002FE08 <AmiBlitz3.ab3@21211>   CMP.l #$100,D3
0002FE0C <AmiBlitz3.ab3@21212>    BCC.w baddaterr
0002FE10 <AmiBlitz3.ab3@21213> BRA.w JL_0_C920
0002FE14 <AmiBlitz3.ab3@21216> BRA.w baddaterr
0002FE18 <AmiBlitz3.ab3@21219>   CMP.w #$3,D2
0002FE1C <AmiBlitz3.ab3@21220>   BCC.w JL_0_C930
0002FE20 <AmiBlitz3.ab3@21221>   BSR.w JL_0_C1E6
0002FE24 <AmiBlitz3.ab3@21222> BRA.w JL_0_C934
0002FE2A <AmiBlitz3.ab3@21225>   TST.b iee
0002FE2E <AmiBlitz3.ab3@21226>   BEQ 'old
0002FE32 <AmiBlitz3.ab3@21227>   CMP.b #5,d2
0002FE36 <AmiBlitz3.ab3@21228>   BNE 'old
0002FE3A <AmiBlitz3.ab3@21229>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
0002FE3E <AmiBlitz3.ab3@21233>   BSR.w JL_0_C1DE                                          ;write data >3
0002FE44 <AmiBlitz3.ab3@21236>   JSR reget
0002FE48 <AmiBlitz3.ab3@21237>   CMP.w #$2C,D0
0002FE4C <AmiBlitz3.ab3@21238>    BEQ.w JL_0_C8CC
0002FE4E <AmiBlitz3.ab3@21239>   ADDQ.w #2,A7
0002FE50 <AmiBlitz3.ab3@21240> RTS
0002FE54 <AmiBlitz3.ab3@21243>    BSR.w pdt
0002FE5A <AmiBlitz3.ab3@21244>   MOVE.l data2,-(A7)
0002FE5E <AmiBlitz3.ab3@21245>    BSR.w JL_0_C1DE
0002FE60 <AmiBlitz3.ab3@21246>   MOVEQ.l #$00,D1
0002FE66 <AmiBlitz3.ab3@21247>    JSR get1bytemain
0002FE6A <AmiBlitz3.ab3@21248>    BEQ.w JL_0_C9A6
0002FE6E <AmiBlitz3.ab3@21249>   CMP.w #$22,D0
0002FE72 <AmiBlitz3.ab3@21250>    BEQ.w JL_0_C988
0002FE76 <AmiBlitz3.ab3@21251>   CMP.w #$2C,D0
0002FE7A <AmiBlitz3.ab3@21252>    BEQ.w JL_0_C9A6
0002FE7E <AmiBlitz3.ab3@21255>    BSR.w JL_0_C210
0002FE80 <AmiBlitz3.ab3@21256>   ADDQ.w #1,D1
0002FE86 <AmiBlitz3.ab3@21257>    JSR getchar
0002FE88 <AmiBlitz3.ab3@21258>   TST.w D0
0002FE8C <AmiBlitz3.ab3@21259>    BEQ.w JL_0_C9A6
0002FE90 <AmiBlitz3.ab3@21260>   CMP.w #$2C,D0
0002FE94 <AmiBlitz3.ab3@21261>    BEQ.w JL_0_C9A6
0002FE98 <AmiBlitz3.ab3@21262> BRA.w JL_0_C96C
0002FE9A <AmiBlitz3.ab3@21266>    MOVEQ #0,d0
0002FE9C <AmiBlitz3.ab3@21267>    MOVE.b (a5)+,d0
0002FEA0 <AmiBlitz3.ab3@21268>    BEQ.w notqerr2
0002FEA4 <AmiBlitz3.ab3@21269>   CMP.w #$22,D0
0002FEA8 <AmiBlitz3.ab3@21270>    BEQ.w JL_0_C9A2
0002FEAC <AmiBlitz3.ab3@21271>    BSR.w JL_0_C210
0002FEAE <AmiBlitz3.ab3@21272>   ADDQ.w #1,D1
0002FEB2 <AmiBlitz3.ab3@21273> BRA.w JL_0_C988
0002FEB8 <AmiBlitz3.ab3@21274> notqerr2 JMP notqerr
0002FEBE <AmiBlitz3.ab3@21276>   CLR.w instringon
0002FEC4 <AmiBlitz3.ab3@21277>   JSR get1bytemain
0002FEC6 <AmiBlitz3.ab3@21280>   MOVEA.l (A7)+,A0
0002FECC <AmiBlitz3.ab3@21281>   MOVE.w dontwrite,D2
0002FED0 <AmiBlitz3.ab3@21282>    BNE.w JL_0_C9B4
0002FED2 <AmiBlitz3.ab3@21283>   MOVE.l D1,(A0)
0002FED8 <AmiBlitz3.ab3@21286>   ADDQ.l #1,data2
0002FEE0 <AmiBlitz3.ab3@21287>   BCLR #$0,data2+3
0002FEE4 <AmiBlitz3.ab3@21288>   CMP.w #$2C,D0
0002FEE8 <AmiBlitz3.ab3@21289>    BEQ.w JL_0_C944
0002FEEA <AmiBlitz3.ab3@21290> RTS
0002FEF0 <AmiBlitz3.ab3@21294> JMP vardeclareerr
0002FEF6 <AmiBlitz3.ab3@21297>   MOVE.w proceduremode,D1                                  ;doshared
0002FEFA <AmiBlitz3.ab3@21299>   BNE.w 'l1
0002FEFC <AmiBlitz3.ab3@21300>   MOVE.w D1,-(A7)
0002FF02 <AmiBlitz3.ab3@21301>   CLR.w proceduremode
0002FF08 <AmiBlitz3.ab3@21304>   LEA varbase,a2
0002FF0C <AmiBlitz3.ab3@21305>   BSR.w getparameter
0002FF0E <AmiBlitz3.ab3@21306>   MOVE.w d2,-(a7)
0002FF14 <AmiBlitz3.ab3@21307>    JSR findvariable
0002FF18 <AmiBlitz3.ab3@21308>    BEQ 'checkdim
0002FF1E <AmiBlitz3.ab3@21309>    LEA sharebase,a2
0002FF20 <AmiBlitz3.ab3@21310>    MOVEQ #$f+4,d7
0002FF24 <AmiBlitz3.ab3@21311>    BSR.w findlab                                         ;find var
0002FF28 <AmiBlitz3.ab3@21312>    BEQ.b dupsherr
0002FF2C <AmiBlitz3.ab3@21313>    BSR addlabel
0002FF30 <AmiBlitz3.ab3@21314>    CMP.b #".",d0
0002FF34 <AmiBlitz3.ab3@21315>    BNE JUMP_vardeclareerr
0002FF36 <AmiBlitz3.ab3@21316>    MOVE.l a2,a3
0002FF3C <AmiBlitz3.ab3@21317>    JSR JL_0_8EB8b
0002FF3E <AmiBlitz3.ab3@21348>   MOVE.w (a7)+,d2
0002FF42 <AmiBlitz3.ab3@21349>    CMP.b #",",d0
0002FF46 <AmiBlitz3.ab3@21350>    BNE 'ret
0002FF4C <AmiBlitz3.ab3@21351>    JSR get1bytemain
0002FF50 <AmiBlitz3.ab3@21352> BRA 'again2
0002FF56 <AmiBlitz3.ab3@21355>   MOVE.w (A7)+,proceduremode
0002FF58 <AmiBlitz3.ab3@21356> RTS
0002FF5E <AmiBlitz3.ab3@21363>    CMP.w #2,6(a2)
0002FF62 <AmiBlitz3.ab3@21364>    BEQ 'do
0002FF68 <AmiBlitz3.ab3@21365>    CMP.w #$102,6(a2)
0002FF6C <AmiBlitz3.ab3@21366>    BEQ 'do
0002FF72 <AmiBlitz3.ab3@21367> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0002FF78 <AmiBlitz3.ab3@21370>   LEA varbase,a0
0002FF7A <AmiBlitz3.ab3@21373>   MOVE.l (A0),D0                                           ;find label
0002FF7E <AmiBlitz3.ab3@21374>    BEQ.b 'z1
0002FF80 <AmiBlitz3.ab3@21375>    CMP.l d0,a2
0002FF84 <AmiBlitz3.ab3@21376>    BEQ 'z1
0002FF86 <AmiBlitz3.ab3@21377>    MOVE.l d0,a0
0002FF8A <AmiBlitz3.ab3@21378> BRA 'm1
0002FF8C <AmiBlitz3.ab3@21381>   MOVE.l (a2),d1
0002FF8E <AmiBlitz3.ab3@21382>     MOVE.l d1,(a0)
0002FF90 <AmiBlitz3.ab3@21383>     CLR.l (a2)
0002FF96 <AmiBlitz3.ab3@21384>     LEA sharebase,a0
0002FF98 <AmiBlitz3.ab3@21385>     MOVE.l (a0),(a2)
0002FF9A <AmiBlitz3.ab3@21386>     MOVE.l a2,(a0)
0002FFA0 <AmiBlitz3.ab3@21387>     JSR get1bytemain
0002FFA6 <AmiBlitz3.ab3@21388>     JSR get1bytemain
0002FFAA <AmiBlitz3.ab3@21389> BRA 'domore
0002FFB2 <AmiBlitz3.ab3@21392>   MOVE.b #1,nowdeclare
0002FFB4 <AmiBlitz3.ab3@21393>   MOVE.w D1,-(A7)
0002FFBA <AmiBlitz3.ab3@21394>   CLR.w proceduremode
0002FFBE <AmiBlitz3.ab3@21397>    BSR.w getparameter
0002FFC0 <AmiBlitz3.ab3@21398>   MOVE.w D2,-(A7)
0002FFC6 <AmiBlitz3.ab3@21399>   LEA firstglob,A2
0002FFCA <AmiBlitz3.ab3@21400>    BSR.w findvariable2
0002FFCE <AmiBlitz3.ab3@21401>    BNE.b JL_0_CA06
0002FFD4 <AmiBlitz3.ab3@21404>   MOVE.b flagmask+1,D1
0002FFD8 <AmiBlitz3.ab3@21405>   MOVE.b $7(A2),D3
0002FFDA <AmiBlitz3.ab3@21406>   EOR.b D3,D1
0002FFDE <AmiBlitz3.ab3@21407>    BEQ.w dupsherr
0002FFE2 <AmiBlitz3.ab3@21408>    BSR.w findlab
0002FFE6 <AmiBlitz3.ab3@21409>    BEQ.b JL_0_C9F0
0002FFEA <AmiBlitz3.ab3@21412>    BSR.w addlabel
0002FFEC <AmiBlitz3.ab3@21413>   MOVE.w (A7)+,D2
0002FFEE <AmiBlitz3.ab3@21414>   MOVE.l A2,-(A7)
0002FFF2 <AmiBlitz3.ab3@21415>    BSR.w JL_0_8E3C
0002FFF4 <AmiBlitz3.ab3@21416>   MOVEA.l (A7)+,A2
0002FFF6 <AmiBlitz3.ab3@21417>   MOVEQ.l #$04,D1
0002FFF8 <AmiBlitz3.ab3@21418>   ADDQ.w #4,A2
0002FFFA <AmiBlitz3.ab3@21419>   ADDQ.w #4,A3
0002FFFC <AmiBlitz3.ab3@21422>     MOVE.w (A3)+,(A2)+
00030000 <AmiBlitz3.ab3@21423>   DBF D1,JL_0_CA1A
00030008 <AmiBlitz3.ab3@21425>   BTST #$1,flagmask+1
0003000C <AmiBlitz3.ab3@21426>    BEQ.w JL_0_CA3C
00030012 <AmiBlitz3.ab3@21427>    JSR get1bytemain
00030016 <AmiBlitz3.ab3@21428>   CMP.w #$29,D0
0003001A <AmiBlitz3.ab3@21429>    BNE.w syntaxerrc
00030020 <AmiBlitz3.ab3@21430>    JSR get1bytemain
00030024 <AmiBlitz3.ab3@21433>    CMP.w #$2C,D0
00030028 <AmiBlitz3.ab3@21434>    BNE.w JL_0_CA4C
0003002E <AmiBlitz3.ab3@21435>    JSR get1bytemain
00030032 <AmiBlitz3.ab3@21436> BRA.w JL_0_C9DE
00030038 <AmiBlitz3.ab3@21439>   MOVE.w (A7)+,proceduremode
0003003A <AmiBlitz3.ab3@21440> RTS
00030040 <AmiBlitz3.ab3@21442> syntaxerrc JMP syntaxerr
00030044 <AmiBlitz3.ab3@21445>    BSR.w JL_0_C05C
0003004A <AmiBlitz3.ab3@21446>    JSR check_incdir                                        ; ergebnis in d2
00030050 <AmiBlitz3.ab3@21448>    LEA ptr_parameterstore,a1
00030052 <AmiBlitz3.ab3@21449>    MOVE.l d2,-(a7)
00030058 <AmiBlitz3.ab3@21450>    LEA includetemp,a0                                      ; filename in includetemp packen
0003005A <AmiBlitz3.ab3@21453>      MOVE.b (a1)+,(a0)+
0003005E <AmiBlitz3.ab3@21454>    BNE 'l4
00030064 <AmiBlitz3.ab3@21456>    LEA ptr_parameterstore,a1
00030066 <AmiBlitz3.ab3@21457>    MOVE.l a1,a0
00030068 <AmiBlitz3.ab3@21460>     TST.b (a0)+
0003006C <AmiBlitz3.ab3@21461>    BNE 'l1
0003006E <AmiBlitz3.ab3@21464>      MOVE.b -(a0),d0
00030072 <AmiBlitz3.ab3@21465>      CMP.b #":",d0
00030076 <AmiBlitz3.ab3@21466>       BEQ 'out
0003007A <AmiBlitz3.ab3@21467>      CMP.b #"/",d0
0003007E <AmiBlitz3.ab3@21468>       BEQ 'out
00030080 <AmiBlitz3.ab3@21469>      CMP.l a1,a0
00030084 <AmiBlitz3.ab3@21470>       BEQ 'out2
00030088 <AmiBlitz3.ab3@21471> BRA 'l2
0003008A <AmiBlitz3.ab3@21474>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0003008C <AmiBlitz3.ab3@21477>    MOVEQ.l #-$01,D2
0003008E <AmiBlitz3.ab3@21480>      ADDQ.w #1,D2
00030090 <AmiBlitz3.ab3@21481>      MOVE.b (a0)+,(a1)+
00030094 <AmiBlitz3.ab3@21482>    BNE 'l3
00030096 <AmiBlitz3.ab3@21483>    CLR.b (a1)+
0003009C <AmiBlitz3.ab3@21485>    LEA ptr_parameterstore,a1
000300A0 <AmiBlitz3.ab3@21486>    BSR.w findxinc                                         ;find include
000300A4 <AmiBlitz3.ab3@21487>     BEQ.w 'outb
000300A6 <AmiBlitz3.ab3@21489>    MOVE.w D2,-(A7)
000300AA <AmiBlitz3.ab3@21490>    BSR.w addlabel
000300AC <AmiBlitz3.ab3@21491>    MOVE.w (A7)+,D2
000300B2 <AmiBlitz3.ab3@21493>    LEA ptr_parameterstore,a1
000300B8 <AmiBlitz3.ab3@21494>    LEA includetemp,a0                                      ; namen in includetemp schreiben
000300BA <AmiBlitz3.ab3@21497>     MOVE.b (a0)+,(a1)+
000300BE <AmiBlitz3.ab3@21498>    BNE 'l4b
000300C0 <AmiBlitz3.ab3@21500>    MOVE.l (a7)+,d2
000300C6 <AmiBlitz3.ab3@21501>    LEA ptr_parameterstore,a1
000300CA <AmiBlitz3.ab3@21502> BRA.w JL_0_CB18
000300D0 <AmiBlitz3.ab3@21505>    LEA ptr_parameterstore,a1
000300D6 <AmiBlitz3.ab3@21506>    LEA includetemp,a0
000300D8 <AmiBlitz3.ab3@21509>     MOVE.b (a0)+,(a1)+
000300DC <AmiBlitz3.ab3@21510>    BNE 'l4b2
000300DE <AmiBlitz3.ab3@21512>    MOVE.l (a7)+,d2
000300E4 <AmiBlitz3.ab3@21513>    LEA ptr_parameterstore,a1
000300E6 <AmiBlitz3.ab3@21516> RTS
000300EA <AmiBlitz3.ab3@21520>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
000300F0 <AmiBlitz3.ab3@21522>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
000300F6 <AmiBlitz3.ab3@21524>   MOVEA.l _dosbase,A6
000300F8 <AmiBlitz3.ab3@21525>   MOVE.l D0,D7                                                 ; store Lockpointer
000300FC <AmiBlitz3.ab3@21526>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
000300FE <AmiBlitz3.ab3@21527>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00030104 <AmiBlitz3.ab3@21528>   MOVE.l ptr_macrobuffer_begin,D2
00030108 <AmiBlitz3.ab3@21529>    JSR _Examine(A6)
0003010E <AmiBlitz3.ab3@21530>   MOVEA.l ptr_macrobuffer_begin,A0
00030112 <AmiBlitz3.ab3@21531>   MOVE.l $4(A0),D0
00030116 <AmiBlitz3.ab3@21532>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
0003011A <AmiBlitz3.ab3@21533>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
0003011C <AmiBlitz3.ab3@21534>   MOVE.l D7,D1                                                 ; begin unlock the file
00030120 <AmiBlitz3.ab3@21535>    JSR _UnLock(A6)
00030126 <AmiBlitz3.ab3@21537>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
0003012C <AmiBlitz3.ab3@21538>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00030130 <AmiBlitz3.ab3@21539>    JSR _Open(A6)
00030132 <AmiBlitz3.ab3@21540>   MOVE.l D0,D7
00030136 <AmiBlitz3.ab3@21541>    BEQ.w error_cant_open_include
0003013C <AmiBlitz3.ab3@21542>   MOVE.l destpointer,D0
0003013E <AmiBlitz3.ab3@21543>   ADD.l D3,D0
00030144 <AmiBlitz3.ab3@21544>   CMP.l destbufferend,D0
00030148 <AmiBlitz3.ab3@21545>    BHI.w JL_0_CAF6
0003014E <AmiBlitz3.ab3@21546>   MOVE.l destpointer,D2
00030150 <AmiBlitz3.ab3@21547>   MOVE.l D7,D1
00030154 <AmiBlitz3.ab3@21548>    JSR _Read(A6)
0003015A <AmiBlitz3.ab3@21549>   CMP.l #$FFFFFFFF,D0
0003015E <AmiBlitz3.ab3@21550>    BEQ.w error_reading_file
00030164 <AmiBlitz3.ab3@21551>   ADD.l D0,destpointer
00030168 <AmiBlitz3.ab3@21552> BRA.w JL_0_CB04
00030170 <AmiBlitz3.ab3@21555>   MOVE.w #$FFFF,dontwrite
00030176 <AmiBlitz3.ab3@21556>   MOVE.l D0,destpointer
00030178 <AmiBlitz3.ab3@21559>   MOVE.l D7,D1
0003017C <AmiBlitz3.ab3@21560> JMP _Close(A6)
00030182 <AmiBlitz3.ab3@21564> JMP illdirerr
00030188 <AmiBlitz3.ab3@21567>   TST.w dirmode                                            ;include  open
0003018C <AmiBlitz3.ab3@21568>    BNE.w JUMP_illdirerr
00030190 <AmiBlitz3.ab3@21569>   BSR.w JL_0_C05C
00030196 <AmiBlitz3.ab3@21570>   JSR check_incdir
0003019A <AmiBlitz3.ab3@21573>   BSR.w findconstant
0003019E <AmiBlitz3.ab3@21574>    BEQ.w alincerr
000301A4 <AmiBlitz3.ab3@21576>   LEA constantbase,A2
000301A8 <AmiBlitz3.ab3@21577>   BSR.w addhere2
000301AC <AmiBlitz3.ab3@21578>   CLR.w $C(A2)
000301B0 <AmiBlitz3.ab3@21579>   CLR.l $4(A2)
000301B6 <AmiBlitz3.ab3@21581>   MOVE.l #ptr_parameterstore,D1
000301B8 <AmiBlitz3.ab3@21582>   MOVE.l d1,a0
000301BE <AmiBlitz3.ab3@21583>   LEA includetemp2,a1
000301C0 <AmiBlitz3.ab3@21586>     MOVE.b (a0)+,(a1)+
000301C4 <AmiBlitz3.ab3@21587>   BNE 'l1
000301CA <AmiBlitz3.ab3@21588>   JSR save_includename
000301D4 <AmiBlitz3.ab3@21589>   MOVE.l #0,include_process
000301DC <AmiBlitz3.ab3@21591>   CMP.l #$62623200,-4(a0)                                  ;.bb2
000301E0 <AmiBlitz3.ab3@21592>   BEQ 'ok
000301E8 <AmiBlitz3.ab3@21593>   CMP.l #$61623300,-4(a0)                                  ;.ab3
000301EC <AmiBlitz3.ab3@21594>   BEQ 'ok_tokenize
000301F4 <AmiBlitz3.ab3@21595>   CMP.l #$61623200,-4(a0)                                  ;.ab2
000301F8 <AmiBlitz3.ab3@21596>   BEQ 'ok_tokenize
00030200 <AmiBlitz3.ab3@21597>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00030204 <AmiBlitz3.ab3@21598>   BEQ 'ok
0003020A <AmiBlitz3.ab3@21599> JMP errortoken                                             ;can only include
00030214 <AmiBlitz3.ab3@21602>    MOVE.l #-1,include_process                              ; must tokenize the include
0003021A <AmiBlitz3.ab3@21605>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00030220 <AmiBlitz3.ab3@21606>   MOVEA.l _dosbase,A6
00030224 <AmiBlitz3.ab3@21607>   JSR _Open(A6)
00030228 <AmiBlitz3.ab3@21608>   MOVE.l D0,$8(A2)
0003022C <AmiBlitz3.ab3@21609>   BEQ.w error_cant_open_include
00030232 <AmiBlitz3.ab3@21610>   CLR.l includeline
00030236 <AmiBlitz3.ab3@21611>   MOVE.l 8(a2),d1
00030238 <AmiBlitz3.ab3@21612>   MOVE.l d3,-(a7)
0003023A <AmiBlitz3.ab3@21613>   MOVEQ #0,d2
0003023C <AmiBlitz3.ab3@21614>   MOVEQ #1,d3
00030240 <AmiBlitz3.ab3@21615>   JSR _Seek(a6)                                            ; -66
00030244 <AmiBlitz3.ab3@21616>   MOVE.l 8(a2),d1
00030246 <AmiBlitz3.ab3@21617>   MOVEQ #0,d2
00030248 <AmiBlitz3.ab3@21618>   MOVEQ #-1,d3
0003024C <AmiBlitz3.ab3@21619>   JSR _Seek(a6)                                            ; -66
0003024E <AmiBlitz3.ab3@21620>   MOVE.l (a7)+,d3
00030250 <AmiBlitz3.ab3@21621>   ADDQ.l #4,d0
00030256 <AmiBlitz3.ab3@21623>   MOVE.l #$10000,D1
0003025C <AmiBlitz3.ab3@21624>   MOVEA.l _execbase,A6
00030260 <AmiBlitz3.ab3@21627>   JSR _AllocVec(a6)
00030264 <AmiBlitz3.ab3@21629>   MOVE.l D0,$4(A2)
00030268 <AmiBlitz3.ab3@21630>   MOVE.l D0,$E(A2)
0003026A <AmiBlitz3.ab3@21631>   MOVEA.l D0,A5
00030270 <AmiBlitz3.ab3@21638>   ADDQ.w #1,ininclude                                      ;enter include
00030276 <AmiBlitz3.ab3@21641>   LEA _include,a0
0003027A <AmiBlitz3.ab3@21642>   MOVEM.l a0-a6/d0-d7,-(a7)
00030280 <AmiBlitz3.ab3@21643>   LEA ptr_parameterstore,a1
00030282 <AmiBlitz3.ab3@21646>     MOVE.b (a0)+,(a1)+
00030286 <AmiBlitz3.ab3@21647>   BNE 'l1b
00030288 <AmiBlitz3.ab3@21649>   MOVEQ #9,d2
0003028E <AmiBlitz3.ab3@21650>   JSR findlabel2
00030292 <AmiBlitz3.ab3@21651>   BNE 'd
0003029A <AmiBlitz3.ab3@21652>   MOVE.l #1,8(a2)
0003029E <AmiBlitz3.ab3@21653>   MOVEM.l (a7)+,a0-a6/d0-d7
000302A2 <AmiBlitz3.ab3@21654> BRA 'd2
000302A8 <AmiBlitz3.ab3@21657>   JSR addlabelhash
000302B0 <AmiBlitz3.ab3@21658>   MOVE.l #$1,$4(A2)
000302B8 <AmiBlitz3.ab3@21659>   MOVE.l #1,8(a2)
000302BC <AmiBlitz3.ab3@21660>   MOVEM.l (a7)+,a0-a6/d0-d7
000302C2 <AmiBlitz3.ab3@21663>   LEA inctab,a0
000302C4 <AmiBlitz3.ab3@21664>   MOVEQ #0,d1
000302CA <AmiBlitz3.ab3@21665>   MOVE.w ininclude,d1
000302CE <AmiBlitz3.ab3@21666>   CLR.l $0(a0,d1*4)
000302D4 <AmiBlitz3.ab3@21667>   MOVEA.l passstack,A7
000302DA <AmiBlitz3.ab3@21668> JMP AJL_0_413A
000302E0 <AmiBlitz3.ab3@21670> JUMP_dupmacerr JMP dupmacerr
000302E2 <AmiBlitz3.ab3@21672> coolnest:   Ds.w 1
000302E6 <AmiBlitz3.ab3@21673> macline:    Ds.l 1
000302F0 <AmiBlitz3.ab3@21677>   MOVE.l linenumat,macline
000302F4 <AmiBlitz3.ab3@21678>    BSR.w makename2
000302F8 <AmiBlitz3.ab3@21679>    BEQ.w JUMP_syntaxerr
000302FE <AmiBlitz3.ab3@21681>    CLR.b thenmode
00030308 <AmiBlitz3.ab3@21683>    MOVE.w oldqflag,instringon
0003030E <AmiBlitz3.ab3@21684>   MOVEA.l lastsourcepos,A5
00030312 <AmiBlitz3.ab3@21685>    BSR.w findmac
00030316 <AmiBlitz3.ab3@21686>    BEQ.w JUMP_dupmacerr
0003031A <AmiBlitz3.ab3@21687>    BSR.w addlabel
0003031E <AmiBlitz3.ab3@21688>   CLR.w $A(A2)
00030324 <AmiBlitz3.ab3@21689>   MOVEA.l ptr_macrobuffer_begin,A0
00030326 <AmiBlitz3.ab3@21690>   MOVEQ.l #$00,D2
0003032C <AmiBlitz3.ab3@21691>   CLR.w coolnest
0003032E <AmiBlitz3.ab3@21694>   MOVE.b (a5),d0
00030332 <AmiBlitz3.ab3@21695>      BEQ 'l3
00030336 <AmiBlitz3.ab3@21696>      CMP.b #" ",d0
0003033A <AmiBlitz3.ab3@21697>       BNE 'l2                                              ;space macro
0003033C <AmiBlitz3.ab3@21698>       ADDQ.l #1,a5
00030340 <AmiBlitz3.ab3@21699> BRA 'l1
00030344 <AmiBlitz3.ab3@21702>    CMP.b #";",d0
00030348 <AmiBlitz3.ab3@21703>       BNE 'l3
0003034A <AmiBlitz3.ab3@21706>    MOVE.b (a5),d0
0003034E <AmiBlitz3.ab3@21707>       BEQ 'l5
00030352 <AmiBlitz3.ab3@21708>       BSR.w JL_0_CC98                                      ;add comment
00030354 <AmiBlitz3.ab3@21709>       ADDQ.l #1,a5
00030358 <AmiBlitz3.ab3@21710> BRA 'l4
0003035C <AmiBlitz3.ab3@21713>    MOVE.b #":",d0
00030360 <AmiBlitz3.ab3@21714>       BSR.w JL_0_CC98
00030364 <AmiBlitz3.ab3@21715>       MOVE.b #"@",d0
00030368 <AmiBlitz3.ab3@21716>       BSR.w JL_0_CC98
00030370 <AmiBlitz3.ab3@21719>    MOVE.b #0,temp
00030378 <AmiBlitz3.ab3@21720>       MOVE.b #0,thenmode
0003037E <AmiBlitz3.ab3@21723>   JSR getcharb
00030380 <AmiBlitz3.ab3@21724>   TST.w D0
00030384 <AmiBlitz3.ab3@21725>    BNE.w JL_0_CBDE
00030388 <AmiBlitz3.ab3@21726>   MOVEM.l D2/A0/A2,-(A7)
0003038E <AmiBlitz3.ab3@21727>   CMP.w #"@@",-3(a5)
00030392 <AmiBlitz3.ab3@21728>   BNE 'l2a
00030398 <AmiBlitz3.ab3@21729>   JSR nextline
0003039C <AmiBlitz3.ab3@21730>   BEQ.w JUMP_macenderr
000303A0 <AmiBlitz3.ab3@21731>   MOVEM.l (A7)+,D2/A0/A2
000303A4 <AmiBlitz3.ab3@21732> BRA.w JL_0_CBB6
000303AA <AmiBlitz3.ab3@21735>    JSR nextline
000303AE <AmiBlitz3.ab3@21736>    BEQ.w JUMP_macenderr
000303B2 <AmiBlitz3.ab3@21737>   MOVEM.l (A7)+,D2/A0/A2
000303B4 <AmiBlitz3.ab3@21738>   TST.w D2
000303B8 <AmiBlitz3.ab3@21739>    BEQ.w JL_0_CBB6
000303BA <AmiBlitz3.ab3@21742>   MOVE.b (a5),d0
000303BE <AmiBlitz3.ab3@21743>       CMP.b #" ",d0
000303C2 <AmiBlitz3.ab3@21744>       BNE 'l1
000303C4 <AmiBlitz3.ab3@21745>       ADDQ.w #1,a5
000303C8 <AmiBlitz3.ab3@21746> BRA 'l2
000303CE <AmiBlitz3.ab3@21749>   TST.b thenmode
000303D2 <AmiBlitz3.ab3@21750>      BEQ 'l3
000303D4 <AmiBlitz3.ab3@21751>      MOVEQ #":",d0
000303D8 <AmiBlitz3.ab3@21752>      BSR.w JL_0_CC98
000303DC <AmiBlitz3.ab3@21753>      MOVE.w #-$7FFE,D0                                     ;write end if
000303E0 <AmiBlitz3.ab3@21754>      BSR macputw
000303E4 <AmiBlitz3.ab3@21755>      MOVE.w #$800b,d0
000303E8 <AmiBlitz3.ab3@21756>      BSR.w macputw
000303EE <AmiBlitz3.ab3@21757>      CLR.b thenmode
000303F0 <AmiBlitz3.ab3@21760>    MOVEQ.l #$3A,D0
000303F8 <AmiBlitz3.ab3@21761>      MOVE.b #1,temp
000303FC <AmiBlitz3.ab3@21763> BRA.w JL_0_CC2A
00030400 <AmiBlitz3.ab3@21767>   BPL.w JL_0_CC2A
00030404 <AmiBlitz3.ab3@21768>   CMP.w #-$7FF3,D0                                         ;macro ?
00030408 <AmiBlitz3.ab3@21769>    BNE.w JL_0_CBF4
0003040E <AmiBlitz3.ab3@21770>   ADDQ.w #1,coolnest
00030412 <AmiBlitz3.ab3@21771> BRA.w JL_0_CC22
00030418 <AmiBlitz3.ab3@21773> JUMP_macnesterr JMP macnesterr
0003041C <AmiBlitz3.ab3@21776>   CMP.w #$80d7,d0                                          ;object ?
00030420 <AmiBlitz3.ab3@21777>     BNE 'l1x
00030426 <AmiBlitz3.ab3@21778>     TST.b objectcount
0003042A <AmiBlitz3.ab3@21779>     BNE JUMP_macnesterr
0003042E <AmiBlitz3.ab3@21782>   CMP.w #$8021,d0
00030432 <AmiBlitz3.ab3@21783>     BNE 'nothen
0003043A <AmiBlitz3.ab3@21784>     MOVE.b #1,thenmode
00030440 <AmiBlitz3.ab3@21787>   TST.b thenmode
00030444 <AmiBlitz3.ab3@21788>         BEQ 'l1
00030448 <AmiBlitz3.ab3@21789>    CMP.w #$8002,d0                                         ;end if
0003044C <AmiBlitz3.ab3@21790>    BNE 'l1
00030450 <AmiBlitz3.ab3@21791>    MOVEM.l d0/a5,-(a7)
00030456 <AmiBlitz3.ab3@21792>    JSR get1bytemain
00030458 <AmiBlitz3.ab3@21793>    MOVE.w d0,d1
0003045C <AmiBlitz3.ab3@21794>    MOVEM.l (a7)+,a5/d0
00030460 <AmiBlitz3.ab3@21795>    CMP.w #$800b,d1
00030464 <AmiBlitz3.ab3@21796>    BNE 'l1
0003046A <AmiBlitz3.ab3@21797>    CLR.b thenmode
0003046E <AmiBlitz3.ab3@21800>    CMP.w #-$7FFE,D0                                        ;end ?
00030472 <AmiBlitz3.ab3@21801>    BNE.w JL_0_CC22
00030474 <AmiBlitz3.ab3@21802>    MOVE.l a5,-(a7)
0003047A <AmiBlitz3.ab3@21803>    JSR get1bytemain
0003047C <AmiBlitz3.ab3@21804>    MOVE.l (a7)+,a5
0003047E <AmiBlitz3.ab3@21805>    TST.w d0
00030482 <AmiBlitz3.ab3@21806>    BEQ 'doend
00030486 <AmiBlitz3.ab3@21807>    CMP.w #":",d0
0003048A <AmiBlitz3.ab3@21808>    BEQ 'doend
0003048E <AmiBlitz3.ab3@21809>    CMP.w #";",d0
00030492 <AmiBlitz3.ab3@21810>    BEQ 'doend
00030494 <AmiBlitz3.ab3@21811>    MOVE.l a5,-(a7)
0003049A <AmiBlitz3.ab3@21812>    JSR get1bytemain
0003049E <AmiBlitz3.ab3@21813>    MOVE.l -1(a5),d0
000304A0 <AmiBlitz3.ab3@21814>    MOVE.l (a7)+,a5
000304A6 <AmiBlitz3.ab3@21815>    CMP.l #"noa7",d0
000304AA <AmiBlitz3.ab3@21816>    BEQ 'doend
000304AE <AmiBlitz3.ab3@21817> BRA 'morechar
000304B2 <AmiBlitz3.ab3@21820>   MOVE.w #$8002,D0
000304B6 <AmiBlitz3.ab3@21821>    BSR.w macputw
000304BA <AmiBlitz3.ab3@21822> BRA JL_0_CBB6
000304C0 <AmiBlitz3.ab3@21825>   JSR get1bytemain
000304C4 <AmiBlitz3.ab3@21826>    CMP.w #-$7FF3,D0                                        ;end macro
000304C8 <AmiBlitz3.ab3@21827>    BEQ.w 'lo1
000304CC <AmiBlitz3.ab3@21828>   CMP.w #$80d7,d0                                          ;end object
000304D0 <AmiBlitz3.ab3@21829>   BNE JL_0_CC12
000304D6 <AmiBlitz3.ab3@21830>   SUBQ.b #1,objectcount
000304DC <AmiBlitz3.ab3@21831>   TST.b developobject
000304E0 <AmiBlitz3.ab3@21832>   BEQ 'lo1
000304E4 <AmiBlitz3.ab3@21833>   BSR skiprest
000304E6 <AmiBlitz3.ab3@21834> RTS
000304EC <AmiBlitz3.ab3@21837>   SUBQ.w #1,coolnest
000304F0 <AmiBlitz3.ab3@21838>    BMI.w JL_0_CC32
000304F2 <AmiBlitz3.ab3@21841>   MOVE.w D0,-(A7)
000304F6 <AmiBlitz3.ab3@21842>   MOVE.w #$8002,D0
000304FA <AmiBlitz3.ab3@21843>    BSR.w macputw
000304FC <AmiBlitz3.ab3@21844>   MOVE.w (A7)+,D0
00030500 <AmiBlitz3.ab3@21845> BRA.w JL_0_CC22
00030504 <AmiBlitz3.ab3@21848>   BSR.w macputw
00030508 <AmiBlitz3.ab3@21849> BRA.w JL_0_CBB6
0003050E <AmiBlitz3.ab3@21851> JUMP_macenderr JMP macenderr
00030514 <AmiBlitz3.ab3@21854>     CMP.w #"@@",-1(a5)                                     ;merge lines
00030518 <AmiBlitz3.ab3@21855>     BNE 'no
0003051C <AmiBlitz3.ab3@21856>      MOVEM.l D2/A0/A2,-(A7)
00030522 <AmiBlitz3.ab3@21857>    JSR nextline
00030526 <AmiBlitz3.ab3@21858>    BEQ.w JUMP_macenderr
0003052A <AmiBlitz3.ab3@21859>   MOVEM.l (A7)+,D2/A0/A2
0003052C <AmiBlitz3.ab3@21860>     TST.w D2
00030530 <AmiBlitz3.ab3@21861>    BEQ.w JL_0_CBB6
00030534 <AmiBlitz3.ab3@21862> BRA JL_0_CBB6
00030538 <AmiBlitz3.ab3@21866>   BSR.w JL_0_CC98
0003053C <AmiBlitz3.ab3@21867> BRA.w JL_0_CBB6
0003053E <AmiBlitz3.ab3@21870>   ADDQ.w #4,A7
00030540 <AmiBlitz3.ab3@21871>   MOVE.l A0,D0
00030546 <AmiBlitz3.ab3@21872>   SUB.l ptr_macrobuffer_begin,D0
0003054A <AmiBlitz3.ab3@21875>    BEQ.w JL_0_CC5E
0003054E <AmiBlitz3.ab3@21876>   CMPI.b #":",-(A0)
00030552 <AmiBlitz3.ab3@21877>    BNE.w JL_0_CC5E
00030556 <AmiBlitz3.ab3@21878>   CMP.w #$1,D0
0003055A <AmiBlitz3.ab3@21879>    BEQ.w JL_0_CC58
0003055E <AmiBlitz3.ab3@21880>   TST.b -$1(A0)
00030562 <AmiBlitz3.ab3@21881>    BMI.w JL_0_CC5E
00030564 <AmiBlitz3.ab3@21884>   SUBQ.w #1,D0
00030568 <AmiBlitz3.ab3@21885> BRA.w JL_0_CC3C
0003056C <AmiBlitz3.ab3@21888>   MOVE.w D0,$8(A2)
00030570 <AmiBlitz3.ab3@21889>    BEQ.w JL_0_CC8E
00030572 <AmiBlitz3.ab3@21890>   MOVEQ.l #$01,D1
00030578 <AmiBlitz3.ab3@21891>   MOVEA.l _execbase,A6
0003057E <AmiBlitz3.ab3@21892>   MOVE.l mempool,a0
00030582 <AmiBlitz3.ab3@21893>   JSR _AllocPooled(a6)
00030584 <AmiBlitz3.ab3@21895>   MOVEA.l D0,A0
00030588 <AmiBlitz3.ab3@21896>   MOVE.l A0,$4(A2)
0003058C <AmiBlitz3.ab3@21897>   MOVE.w $8(A2),D1
00030590 <AmiBlitz3.ab3@21898>    BEQ.w JL_0_CC8E
00030592 <AmiBlitz3.ab3@21899>   SUBQ.w #1,D1
00030598 <AmiBlitz3.ab3@21900>   MOVEA.l ptr_macrobuffer_begin,A1
0003059A <AmiBlitz3.ab3@21903>     MOVE.b (A1)+,(A0)+
0003059E <AmiBlitz3.ab3@21904>   DBF D1,JL_0_CC88
000305A4 <AmiBlitz3.ab3@21907> JMP get1bytemain
000305A6 <AmiBlitz3.ab3@21911>   MOVE.w D0,D1
000305A8 <AmiBlitz3.ab3@21912>   LSR.w #8,D1
000305AA <AmiBlitz3.ab3@21913>   MOVE.b D1,(A0)+
000305AC <AmiBlitz3.ab3@21916>   MOVEQ.l #-$01,D2
000305AE <AmiBlitz3.ab3@21917>   MOVE.b D0,(A0)+
000305B4 <AmiBlitz3.ab3@21918>   CMPA.l ptr_macrobuffer_end,A0
000305B8 <AmiBlitz3.ab3@21919>    BCC.w macbigerr2
000305BA <AmiBlitz3.ab3@21920> RTS
000305C0 <AmiBlitz3.ab3@21921> macbigerr2 JMP macbigerr
000305C2 <AmiBlitz3.ab3@21924>   MOVE.l d0,-(a7)
000305C4 <AmiBlitz3.ab3@21925>   MOVEQ #0,d0
000305CA <AmiBlitz3.ab3@21926>   CLR.b skiptoggle
000305CC <AmiBlitz3.ab3@21929>     MOVE.b (a5),d0
000305D0 <AmiBlitz3.ab3@21930>     BEQ 'l3
000305D4 <AmiBlitz3.ab3@21931>     CMP.b #";",d0
000305D8 <AmiBlitz3.ab3@21932>     BNE 'l2
000305E0 <AmiBlitz3.ab3@21933>     MOVE.b #1,skiptoggle
000305E6 <AmiBlitz3.ab3@21936>     TST.b skiptoggle
000305EA <AmiBlitz3.ab3@21937>     BNE 'l4
000305EE <AmiBlitz3.ab3@21938>     CMP.b #":",d0
000305F2 <AmiBlitz3.ab3@21939>     BEQ 'l3
000305F4 <AmiBlitz3.ab3@21942>     ADDQ #1,a5
000305F8 <AmiBlitz3.ab3@21943> BRA 'loop
000305FE <AmiBlitz3.ab3@21946>   MOVE.w d0,lastchar
00030600 <AmiBlitz3.ab3@21947>   MOVE.l (a7)+,d0
00030602 <AmiBlitz3.ab3@21948> RTS
00030606 <AmiBlitz3.ab3@21952>   BSR.w ifchar
0003060A <AmiBlitz3.ab3@21953>    BNE.w JUMP_syntaxerr
0003060C <AmiBlitz3.ab3@21954>   MOVE.w D0,D1
00030612 <AmiBlitz3.ab3@21955>   JSR get1bytemain
00030616 <AmiBlitz3.ab3@21956>   BSR.w ifchar
0003061A <AmiBlitz3.ab3@21957>    BNE.w JL_0_CCDA
0003061C <AmiBlitz3.ab3@21958>   ADDQ.w #1,D0
0003061E <AmiBlitz3.ab3@21959>   MOVE.w D0,D2
00030620 <AmiBlitz3.ab3@21960>   ADD.w D0,D0
00030622 <AmiBlitz3.ab3@21961>   ADD.w D2,D0
00030624 <AmiBlitz3.ab3@21962>   ADD.w D0,D1
00030626 <AmiBlitz3.ab3@21963>   MOVE.w D1,D0
0003062A <AmiBlitz3.ab3@21964>   ANDI.w #$3,D0
0003062E <AmiBlitz3.ab3@21965>   CMP.w #$3,D0
00030632 <AmiBlitz3.ab3@21966>    BEQ.w JUMP_syntaxerr
00030638 <AmiBlitz3.ab3@21968>   JSR get1bytemain
0003063A <AmiBlitz3.ab3@21971> RTS
0003063C <AmiBlitz3.ab3@21977> thetst1:  TST.b D0
0003063E <AmiBlitz3.ab3@21978> thetst2:  TST.w D0
00030640 <AmiBlitz3.ab3@21979> thetst3:  TST.l D0
00030642 <AmiBlitz3.ab3@21980> thetst4:  TST.l (A7)+                                      ;Any Length?
00030646 <AmiBlitz3.ab3@21981> thetst5:  JSR _Reschedule(A6)
0003064A <AmiBlitz3.ab3@21983> posbr:    BEQ.w posbr
0003064E <AmiBlitz3.ab3@21984> negbr:    BNE.w negbr
00030650 <AmiBlitz3.ab3@21988>   MOVEQ.l #-$01,D2
00030654 <AmiBlitz3.ab3@21989> BRA.w JL_0_D04C
0003065A <AmiBlitz3.ab3@21993>   CLR.l fp0addr
0003065C <AmiBlitz3.ab3@21994>   MOVEQ.l #$01,D1                                          ;while flag
0003065E <AmiBlitz3.ab3@21995>   MOVEQ.l #$00,D2                                          ;negate flag
00030662 <AmiBlitz3.ab3@21996> BRA.w JL_0_D04E
00030668 <AmiBlitz3.ab3@22000>   LEA firstrep,A2
0003066A <AmiBlitz3.ab3@22001>   MOVEQ.l #$08,D2
0003066E <AmiBlitz3.ab3@22002> BRA.w freeslist
00030672 <AmiBlitz3.ab3@22006>   LEA firstsel(PC),A2
00030674 <AmiBlitz3.ab3@22007>   MOVEQ.l #$0E,D2
00030676 <AmiBlitz3.ab3@22012>   MOVEQ.l #$00,D3
00030678 <AmiBlitz3.ab3@22020>   MOVE.l (A2),D0
0003067A <AmiBlitz3.ab3@22021>   CLR.l (A2)
0003067C <AmiBlitz3.ab3@22022>   MOVEA.l D0,A2
00030682 <AmiBlitz3.ab3@22023>   MOVEA.l _execbase,A6
00030686 <AmiBlitz3.ab3@22026>     CMPA.w #$0,A2
0003068A <AmiBlitz3.ab3@22027>      BEQ.w freelist__done
0003068C <AmiBlitz3.ab3@22028>     TST.w D3
00030690 <AmiBlitz3.ab3@22029>      BEQ.w freelist__skip
00030694 <AmiBlitz3.ab3@22030>     MOVEM.l D2-D3/A2,-(A7)
00030696 <AmiBlitz3.ab3@22031>     ADDA.w D3,A2
00030698 <AmiBlitz3.ab3@22032>     MOVE.l D4,D2
0003069C <AmiBlitz3.ab3@22033>     BSR.w freeslist
000306A0 <AmiBlitz3.ab3@22034>     MOVEM.l (A7)+,D2-D3/A2
000306A2 <AmiBlitz3.ab3@22037>     MOVEA.l A2,A1
000306A4 <AmiBlitz3.ab3@22038>     MOVE.l D2,D0
000306A6 <AmiBlitz3.ab3@22039>     MOVEA.l (A2),A2
000306AC <AmiBlitz3.ab3@22040>     MOVE.l mempool,a0
000306B0 <AmiBlitz3.ab3@22041>     JSR _FreePooled(A6)
000306B4 <AmiBlitz3.ab3@22042> BRA.w freelist__loop
000306B6 <AmiBlitz3.ab3@22045> RTS
000306BC <AmiBlitz3.ab3@22048> JMP eselerr
000306C0 <AmiBlitz3.ab3@22051> firstsel:  Ds.l 1
000306C4 <AmiBlitz3.ab3@22054> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
000306C6 <AmiBlitz3.ab3@22057> selpushw:   MOVE.w D0,-(A7)
000306C8 <AmiBlitz3.ab3@22059> selpushl:   MOVE.l D0,-(A7)
000306CC <AmiBlitz3.ab3@22061> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
000306D0 <AmiBlitz3.ab3@22064> selcomb:    ANDI.w #$FF,D0
000306D2 <AmiBlitz3.ab3@22065> selcomw:    CMP.w (A7),D0
000306D4 <AmiBlitz3.ab3@22067> selcoml:    CMP.l (A7),D0
000306D8 <AmiBlitz3.ab3@22069> selbne:     BNE.w selbne
000306DA <AmiBlitz3.ab3@22071> endsel:     ADDQ.w #8,A7
000306DE <AmiBlitz3.ab3@22077>   MOVE.l firstsel(PC),D0                                  
000306E2 <AmiBlitz3.ab3@22078>    BEQ.w JUMP_eselerr
000306E4 <AmiBlitz3.ab3@22079>   MOVEA.l D0,A2
000306E8 <AmiBlitz3.ab3@22080>    BSR.w JL_0_CDFC
000306EE <AmiBlitz3.ab3@22083>   MOVEA.l _execbase,A6
000306F2 <AmiBlitz3.ab3@22086>   MOVE.l $4(A2),D0
000306F6 <AmiBlitz3.ab3@22087>    BEQ.w doendsel__done
000306F8 <AmiBlitz3.ab3@22088>   MOVEA.l D0,A3
000306FC <AmiBlitz3.ab3@22089>   MOVEA.l $4(A3),A0
00030702 <AmiBlitz3.ab3@22090>   MOVE.l destpointer,D1
00030704 <AmiBlitz3.ab3@22091>   SUB.l A0,D1
0003070A <AmiBlitz3.ab3@22093>     TST.b fast
0003070E <AmiBlitz3.ab3@22094>     BEQ doendsel__loop_l1
00030714 <AmiBlitz3.ab3@22095>     MOVE.w dontwrite,D0
00030718 <AmiBlitz3.ab3@22096>     BNE.w doendsel__skip
0003071A <AmiBlitz3.ab3@22097>     ADDQ.l #2,d1
0003071E <AmiBlitz3.ab3@22098>     MOVE.l d1,-2(a0)
00030722 <AmiBlitz3.ab3@22099>   BRA doendsel__skip
00030728 <AmiBlitz3.ab3@22103>   TST.w dontwrite
0003072C <AmiBlitz3.ab3@22104>      BNE.w doendsel__skip
00030732 <AmiBlitz3.ab3@22105>   CMP.l #MaxWordSgnd,D1
00030736 <AmiBlitz3.ab3@22106>    BHI.w JUMP_cbraerr
00030738 <AmiBlitz3.ab3@22107>   MOVE.w D1,(A0)
0003073C <AmiBlitz3.ab3@22110>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
0003073E <AmiBlitz3.ab3@22111>   MOVEA.l A3,A1
00030740 <AmiBlitz3.ab3@22112>   MOVEQ.l #$08,D0
00030746 <AmiBlitz3.ab3@22113>   MOVE.l mempool,a0
0003074A <AmiBlitz3.ab3@22114>    JSR _FreePooled(A6)
0003074E <AmiBlitz3.ab3@22115> BRA.w doendsel__loop
00030754 <AmiBlitz3.ab3@22118>   JSR popselect                                            ;fix stack on select
00030758 <AmiBlitz3.ab3@22119>   MOVEA.l firstsel(PC),A1
0003075E <AmiBlitz3.ab3@22120>   MOVE.l (A1),firstsel
00030760 <AmiBlitz3.ab3@22121>   MOVEQ.l #$0E,D0
00030766 <AmiBlitz3.ab3@22122>   MOVEA.l _execbase,A6
0003076C <AmiBlitz3.ab3@22123>   MOVE.l mempool,a0
00030770 <AmiBlitz3.ab3@22124>   JSR _FreePooled(A6)
00030776 <AmiBlitz3.ab3@22125> JMP get1bytemain
00030778 <AmiBlitz3.ab3@22129>   MOVEA.l (A7)+,A1
0003077A <AmiBlitz3.ab3@22130>   SUBQ.w #8,A1
0003077C <AmiBlitz3.ab3@22131>   MOVEQ.l #$09,D0
0003077E <AmiBlitz3.ab3@22132>   ADD.l (A1),D0
00030780 <AmiBlitz3.ab3@22135>   ADDQ.w #2,A7                                             ;for runtime errs!
00030784 <AmiBlitz3.ab3@22140>   MOVE.l firstsel(PC),D0
00030788 <AmiBlitz3.ab3@22141>    BEQ.w JUMP_defaerr
0003078A <AmiBlitz3.ab3@22142>   MOVEA.l D0,A2
0003078E <AmiBlitz3.ab3@22143>   BSR.w JL_0_CE26
00030792 <AmiBlitz3.ab3@22144>   BSR.w JL_0_CDFC
00030796 <AmiBlitz3.ab3@22145>   CLR.l $8(A2)
0003079A <AmiBlitz3.ab3@22146>   MOVE.w $C(A2),D2
0003079E <AmiBlitz3.ab3@22147> BRA.w JL_0_CE5E
000307A4 <AmiBlitz3.ab3@22150> JMP defaerr
000307A8 <AmiBlitz3.ab3@22153>   MOVE.l $8(A2),D0
000307AC <AmiBlitz3.ab3@22154>    BEQ.w JL_0_CE24
000307AE <AmiBlitz3.ab3@22155>   MOVEA.l D0,A0
000307B4 <AmiBlitz3.ab3@22156>   MOVE.l destpointer,D1
000307B6 <AmiBlitz3.ab3@22157>   SUB.l A0,D1
000307BC <AmiBlitz3.ab3@22159>     TST.b fast
000307C0 <AmiBlitz3.ab3@22160>     BEQ 'l1
000307C6 <AmiBlitz3.ab3@22161>     TST.w dontwrite
000307CA <AmiBlitz3.ab3@22162>     BNE.w JL_0_CE24
000307CC <AmiBlitz3.ab3@22163>     ADDQ.l #2,d1
000307D0 <AmiBlitz3.ab3@22164>     MOVE.l D1,-2(A0)
000307D4 <AmiBlitz3.ab3@22165>   BRA JL_0_CE24
000307DA <AmiBlitz3.ab3@22169>   TST.w dontwrite
000307DE <AmiBlitz3.ab3@22170>      BNE.w JL_0_CE24
000307E4 <AmiBlitz3.ab3@22171>    CMP.l #MaxWordSgnd,D1
000307E8 <AmiBlitz3.ab3@22172>    BHI.w JUMP_cbraerr
000307EA <AmiBlitz3.ab3@22173>   MOVE.w D1,(A0)
000307EC <AmiBlitz3.ab3@22176> RTS
000307F2 <AmiBlitz3.ab3@22179> JMP cbraerr
000307F6 <AmiBlitz3.ab3@22183>   MOVE.l $8(A2),D0
000307FA <AmiBlitz3.ab3@22184>    BEQ.w JL_0_CE5C
000307FC <AmiBlitz3.ab3@22185>   MOVEA.l D0,A3
00030800 <AmiBlitz3.ab3@22186>   MOVE.w #$6000,D1
00030806 <AmiBlitz3.ab3@22188>    TST.b fast
0003080A <AmiBlitz3.ab3@22189>    BEQ 'l1
00030810 <AmiBlitz3.ab3@22190>    OR.l #$ff,d1
00030814 <AmiBlitz3.ab3@22191>    BSR writeword
00030818 <AmiBlitz3.ab3@22195>   BSR.w writeword
0003081A <AmiBlitz3.ab3@22196>   MOVEQ.l #$08,D0
0003081C <AmiBlitz3.ab3@22197>   MOVEQ.l #$01,D1
00030822 <AmiBlitz3.ab3@22198>   MOVEA.l _execbase,A6
00030828 <AmiBlitz3.ab3@22199>   MOVE.l mempool,a0
0003082C <AmiBlitz3.ab3@22200>   JSR _AllocPooled(a6)
0003082E <AmiBlitz3.ab3@22202>   MOVEA.l D0,A0
00030832 <AmiBlitz3.ab3@22203>   MOVE.l $4(A2),(A0)
00030836 <AmiBlitz3.ab3@22204>   MOVE.l A0,$4(A2)
0003083E <AmiBlitz3.ab3@22205>   MOVE.l destpointer,$4(A0)
00030842 <AmiBlitz3.ab3@22206> BRA.w writeword
00030844 <AmiBlitz3.ab3@22209> RTS
0003084A <AmiBlitz3.ab3@22213>   TST.b debugmode
0003084E <AmiBlitz3.ab3@22214>    BEQ.w JL_0_CE7A
00030852 <AmiBlitz3.ab3@22215>   MOVE.w #$C313,D1
00030856 <AmiBlitz3.ab3@22216>   CMP.w #$3,D2
0003085A <AmiBlitz3.ab3@22217>    BCS.w JL_0_CE76
0003085C <AmiBlitz3.ab3@22218>   ADDQ.w #1,D1
00030860 <AmiBlitz3.ab3@22221> BRA.w Atokejsr
00030862 <AmiBlitz3.ab3@22224> RTS
00030868 <AmiBlitz3.ab3@22228> JMP caseerr
0003086C <AmiBlitz3.ab3@22231>   MOVE.l firstsel(PC),D0
00030870 <AmiBlitz3.ab3@22232>    BEQ.w JUMP_caseerr
00030872 <AmiBlitz3.ab3@22233>   MOVEA.l D0,A2
00030876 <AmiBlitz3.ab3@22234>    BSR.w JL_0_CE26
0003087A <AmiBlitz3.ab3@22235>    BSR.w JL_0_CDFC
0003087E <AmiBlitz3.ab3@22236>   MOVE.w $C(A2),D2
00030880 <AmiBlitz3.ab3@22237>   MOVE.w D2,-(A7)
00030884 <AmiBlitz3.ab3@22238>    BSR.w JL_0_CE5E
00030886 <AmiBlitz3.ab3@22239>   MOVE.w (A7),D2
0003088A <AmiBlitz3.ab3@22240>    BSR.w bakeval
0003088C <AmiBlitz3.ab3@22241>   MOVE.w (A7)+,D2
00030890 <AmiBlitz3.ab3@22242>   LEA selcomb(PC),A0
00030894 <AmiBlitz3.ab3@22243>   LEA selcombf(PC),A1
00030898 <AmiBlitz3.ab3@22244>   CMP.w #$1,D2
0003089C <AmiBlitz3.ab3@22245>    BEQ.w JL_0_CED8
000308A0 <AmiBlitz3.ab3@22246>   LEA selcomw(PC),A0
000308A4 <AmiBlitz3.ab3@22247>   CMP.w #$2,D2
000308A8 <AmiBlitz3.ab3@22248>    BEQ.w JL_0_CED8
000308AC <AmiBlitz3.ab3@22249>   LEA selcoml(PC),A0
000308B0 <AmiBlitz3.ab3@22250>   LEA selcomlf(PC),A1
000308B4 <AmiBlitz3.ab3@22251>   CMP.w #$7,D2
000308B8 <AmiBlitz3.ab3@22252>    BCS.w JL_0_CED8
000308BC <AmiBlitz3.ab3@22254>   MOVE.w #$CE01,D1
000308C0 <AmiBlitz3.ab3@22255>    BSR.w Atokejsr
000308C4 <AmiBlitz3.ab3@22256> BRA.w JL_0_CEDC
000308C8 <AmiBlitz3.ab3@22259>   BSR.w pokecode
000308CC <AmiBlitz3.ab3@22262>   MOVE.w selbne(PC),D1
000308D2 <AmiBlitz3.ab3@22264>     TST.b fast
000308D6 <AmiBlitz3.ab3@22265>     BEQ 'l1
000308DC <AmiBlitz3.ab3@22266>     ORI.l #$ff,d1
000308E0 <AmiBlitz3.ab3@22267>     BSR writeword
000308E4 <AmiBlitz3.ab3@22270>   BSR.w writeword
000308E8 <AmiBlitz3.ab3@22271>   MOVEA.l firstsel(PC),A0
000308F0 <AmiBlitz3.ab3@22272>   MOVE.l destpointer,$8(A0)
000308F4 <AmiBlitz3.ab3@22273> BRA.w writeword
000308F8 <AmiBlitz3.ab3@22277> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
000308FA <AmiBlitz3.ab3@22278> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
000308FE <AmiBlitz3.ab3@22281> sellineat:  Ds.l 1
00030904 <AmiBlitz3.ab3@22287>   TST.b debugmode
00030908 <AmiBlitz3.ab3@22288>    BEQ.w JL_0_CF0E
0003090C <AmiBlitz3.ab3@22289>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00030910 <AmiBlitz3.ab3@22290>    BSR.w writelong
0003091A <AmiBlitz3.ab3@22293>   MOVE.l linenumat,sellineat
00030924 <AmiBlitz3.ab3@22295>    MOVE.l destpointer,pushpc
0003092E <AmiBlitz3.ab3@22296>   MOVE.l hunkoffsetbase,pushoff
00030930 <AmiBlitz3.ab3@22297>   MOVEQ.l #$00,D2
00030934 <AmiBlitz3.ab3@22298>    BSR.w bakevalu                                          ;Evaluate
00030938 <AmiBlitz3.ab3@22299>    BSR.w JL_0_B5D2
0003093C <AmiBlitz3.ab3@22300>   CMP.w #$7,D2
00030940 <AmiBlitz3.ab3@22301>    BNE.w JL_0_CF36
00030944 <AmiBlitz3.ab3@22302>   MOVE.w clrst(PC),D1
00030948 <AmiBlitz3.ab3@22303>    BSR.w writeword
0003094C <AmiBlitz3.ab3@22306>    BSR.w JL_0_B63C
00030950 <AmiBlitz3.ab3@22307>   LEA selpushb(PC),A0
00030954 <AmiBlitz3.ab3@22308>   LEA selpushbf(PC),A1
00030958 <AmiBlitz3.ab3@22309>   CMP.w #$1,D2
0003095C <AmiBlitz3.ab3@22310>    BEQ.w JL_0_CF88
00030960 <AmiBlitz3.ab3@22311>   LEA selpushw(PC),A0
00030964 <AmiBlitz3.ab3@22312>   CMP.w #$2,D2
00030968 <AmiBlitz3.ab3@22313>    BEQ.w JL_0_CF88
0003096C <AmiBlitz3.ab3@22314>   LEA selpushl(PC),A0
00030970 <AmiBlitz3.ab3@22315>   LEA selpushlf(PC),A1
00030974 <AmiBlitz3.ab3@22316>   CMP.w #$7,D2
00030978 <AmiBlitz3.ab3@22317>    BCS.w JL_0_CF88
0003097E <AmiBlitz3.ab3@22319>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00030982 <AmiBlitz3.ab3@22320>    BSR.w writeword
00030986 <AmiBlitz3.ab3@22321>   LEA selpushs(PC),A0
0003098A <AmiBlitz3.ab3@22322>   LEA selpushsf(PC),A1
0003098E <AmiBlitz3.ab3@22323>    BSR.w pokecode
00030992 <AmiBlitz3.ab3@22324>   MOVE.w #$C701,D1
00030996 <AmiBlitz3.ab3@22325>    BSR.w Atokejsr
0003099A <AmiBlitz3.ab3@22326> BRA.w JL_0_CF8C
0003099E <AmiBlitz3.ab3@22329>   BSR.w pokecode
000309A0 <AmiBlitz3.ab3@22332>   MOVEQ.l #$0E,D0
000309A2 <AmiBlitz3.ab3@22333>   MOVEQ.l #$01,D1
000309A8 <AmiBlitz3.ab3@22334>   MOVEA.l _execbase,A6
000309AE <AmiBlitz3.ab3@22336>   MOVE.l mempool,a0
000309B2 <AmiBlitz3.ab3@22337>   JSR _AllocPooled(a6)
000309B4 <AmiBlitz3.ab3@22338>   MOVEA.l D0,A0
000309B8 <AmiBlitz3.ab3@22339>   MOVE.l firstsel(PC),(A0)
000309BE <AmiBlitz3.ab3@22340>   MOVE.l A0,firstsel
000309C2 <AmiBlitz3.ab3@22341>   CLR.l $4(A0)
000309C6 <AmiBlitz3.ab3@22342>   CLR.l $8(A0)
000309CA <AmiBlitz3.ab3@22343>   MOVE.w D2,$C(A0)
000309CC <AmiBlitz3.ab3@22344> RTS
000309D2 <AmiBlitz3.ab3@22348>   MOVE.l firstrep,D0
000309D6 <AmiBlitz3.ab3@22349>    BEQ.w JUMP_unterr1
000309DA <AmiBlitz3.ab3@22350>   MOVE.w #$6000,D1
000309DE <AmiBlitz3.ab3@22351>   BSR.w writeword
000309E0 <AmiBlitz3.ab3@22352>   MOVEA.l D0,A0
000309E4 <AmiBlitz3.ab3@22353>   MOVE.l $4(A0),D1
000309EA <AmiBlitz3.ab3@22354>   SUB.l destpointer,D1
000309EC <AmiBlitz3.ab3@22355>   TST.w D1
000309F0 <AmiBlitz3.ab3@22356>    BPL.w JUMP_unterr2
000309F4 <AmiBlitz3.ab3@22357>   BSR.w writeword
000309FA <AmiBlitz3.ab3@22358>   MOVEA.l _execbase,A6
000309FE <AmiBlitz3.ab3@22359> BRA.w JL_0_D036
00030A04 <AmiBlitz3.ab3@22362> JMP unterr2
00030A0A <AmiBlitz3.ab3@22365> JMP unterr1
00030A10 <AmiBlitz3.ab3@22369>   MOVE.l firstrep,D0
00030A14 <AmiBlitz3.ab3@22370>    BEQ.w JUMP_unterr1
00030A18 <AmiBlitz3.ab3@22371>   BSR.w do_if
00030A1E <AmiBlitz3.ab3@22372>   JSR reget
00030A22 <AmiBlitz3.ab3@22373>    BNE.w JUMP_syntaxerr
00030A28 <AmiBlitz3.ab3@22374>   MOVE.w dontwrite,D1
00030A2C <AmiBlitz3.ab3@22375>    BNE.w JL_0_D020
00030A32 <AmiBlitz3.ab3@22376>   MOVEA.l firstrep,A0
00030A38 <AmiBlitz3.ab3@22377>   MOVEA.l destpointer,A1
00030A3E <AmiBlitz3.ab3@22379>     TST.b fast
00030A42 <AmiBlitz3.ab3@22380>     BEQ 'l1
00030A44 <AmiBlitz3.ab3@22381>     SUBQ.w #4,a1
00030A48 <AmiBlitz3.ab3@22382>     MOVE.l $4(A0),D2
00030A4A <AmiBlitz3.ab3@22383>     SUB.l A1,D2
00030A4C <AmiBlitz3.ab3@22384>     MOVE.l d2,(a1)
00030A50 <AmiBlitz3.ab3@22385>   BRA JL_0_D020
00030A52 <AmiBlitz3.ab3@22389>   SUBQ.w #2,A1
00030A56 <AmiBlitz3.ab3@22390>   MOVE.l $4(A0),D2
00030A58 <AmiBlitz3.ab3@22391>   SUB.l A1,D2
00030A5A <AmiBlitz3.ab3@22392>   TST.w D2
00030A5E <AmiBlitz3.ab3@22393>    BPL.w JUMP_unterr2
00030A60 <AmiBlitz3.ab3@22394>   MOVE.w D2,(A1)
00030A66 <AmiBlitz3.ab3@22397>   MOVEA.l firstiff,A1
00030A6C <AmiBlitz3.ab3@22398>   MOVE.l (A1),firstiff
00030A6E <AmiBlitz3.ab3@22399>   MOVEQ.l #$0E,D0
00030A74 <AmiBlitz3.ab3@22400>   MOVEA.l _execbase,A6
00030A7A <AmiBlitz3.ab3@22401>   MOVE.l mempool,a0
00030A7E <AmiBlitz3.ab3@22402>   JSR _FreePooled(A6)
00030A84 <AmiBlitz3.ab3@22405>   MOVEA.l firstrep,A1
00030A8A <AmiBlitz3.ab3@22406>   MOVE.l (A1),firstrep
00030A8C <AmiBlitz3.ab3@22407>   MOVEQ.l #$08,D0
00030A92 <AmiBlitz3.ab3@22408>   MOVE.l mempool,a0
00030A96 <AmiBlitz3.ab3@22409> JMP _FreePooled(A6)
00030A9A <AmiBlitz3.ab3@22412> iflineat:   Ds.l 1
00030A9C <AmiBlitz3.ab3@22416>   MOVEQ.l #$00,D2
00030AA2 <AmiBlitz3.ab3@22417>   TST.b fast
00030AA6 <AmiBlitz3.ab3@22418>   BEQ 'l1
00030AAE <AmiBlitz3.ab3@22419>   MOVE.b #1,nostringopt
00030AB6 <AmiBlitz3.ab3@22420>   MOVE.b #1,iniffcommand
00030AB8 <AmiBlitz3.ab3@22424>   MOVEQ.l #$00,D1
00030ABA <AmiBlitz3.ab3@22427>   MOVE.w D1,-(A7)
00030AC0 <AmiBlitz3.ab3@22428>   MOVE.l destpointer,-(A7)
00030AC2 <AmiBlitz3.ab3@22429>   MOVE.w D2,-(A7)
00030ACC <AmiBlitz3.ab3@22430>   MOVE.l linenumat,iflineat
00030ACE <AmiBlitz3.ab3@22431>   MOVEQ.l #$00,D2
00030AD8 <AmiBlitz3.ab3@22432>   MOVE.b optistring,optistring2
00030AE0 <AmiBlitz3.ab3@22433>   MOVE.b #1,optistring
00030AE4 <AmiBlitz3.ab3@22434>   BSR.w bakevalu
00030AEE <AmiBlitz3.ab3@22435>   MOVE.b optistring2,optistring
00030AF2 <AmiBlitz3.ab3@22436>   CMP.w #$5,D2
00030AF6 <AmiBlitz3.ab3@22437>    BEQ.w JL_0_D09C
00030AFA <AmiBlitz3.ab3@22438>   MOVE.w thetst1(PC),D1
00030AFE <AmiBlitz3.ab3@22439>   CMP.w #$1,D2
00030B02 <AmiBlitz3.ab3@22440>    BEQ.w writebranchcode
00030B06 <AmiBlitz3.ab3@22441>   MOVE.w thetst2(PC),D1
00030B0A <AmiBlitz3.ab3@22442>   CMP.w #$2,D2
00030B0E <AmiBlitz3.ab3@22443>    BEQ.w writebranchcode
00030B12 <AmiBlitz3.ab3@22444>   MOVE.w thetst4(PC),D1
00030B16 <AmiBlitz3.ab3@22445>   CMP.w #$7,D2
00030B1A <AmiBlitz3.ab3@22446>    BEQ.w writebranchcode
00030B1E <AmiBlitz3.ab3@22447>   MOVE.w thetst3(PC),D1
00030B22 <AmiBlitz3.ab3@22448> BRA.w writebranchcode
00030B28 <AmiBlitz3.ab3@22451>   TST.b fpu
00030B2C <AmiBlitz3.ab3@22452>   BEQ 'dofpu
00030B32 <AmiBlitz3.ab3@22453>   MOVE.l #$f200003a,d1
00030B36 <AmiBlitz3.ab3@22454>   BSR writelong
00030B3A <AmiBlitz3.ab3@22455>   MOVE.w #$f2c1,d1
00030B3E <AmiBlitz3.ab3@22456>   BSR writeword
00030B42 <AmiBlitz3.ab3@22457>   BSR writelong
00030B44 <AmiBlitz3.ab3@22458>   ADDQ.l #2,a7
00030B48 <AmiBlitz3.ab3@22459> BRA.w br2
00030B4C <AmiBlitz3.ab3@22462>    MOVE.w #$C900,D1
00030B50 <AmiBlitz3.ab3@22463>    BSR.w Atokejsr
00030B54 <AmiBlitz3.ab3@22464>   MOVE.l thetst5(PC),D1
00030B58 <AmiBlitz3.ab3@22465>    BSR.w writelong
00030B5C <AmiBlitz3.ab3@22466> BRA.w JL_0_D0B4
00030B62 <AmiBlitz3.ab3@22470>          CLR.b iniffcommand
00030B68 <AmiBlitz3.ab3@22471>          TST.b fast                                        ;branchcode
00030B6C <AmiBlitz3.ab3@22472>          BEQ b6
00030B72 <AmiBlitz3.ab3@22473>          TST.b fpu
00030B76 <AmiBlitz3.ab3@22474>          BEQ 'nofpu
00030B7C <AmiBlitz3.ab3@22478>           MOVE.l destpointer,a0
00030B82 <AmiBlitz3.ab3@22479>          SUB.l load_var_addr,a0
00030B88 <AmiBlitz3.ab3@22480>          CMP.l #4,a0
00030B8C <AmiBlitz3.ab3@22481>          BEQ 'nofpu
00030B94 <AmiBlitz3.ab3@22482>          CMP.l #$f2400014,-4(a4)                           ;<
00030B98 <AmiBlitz3.ab3@22483>          BNE 'nolt
00030B9E <AmiBlitz3.ab3@22484>          SUBQ.l #2,destpointer
00030BA4 <AmiBlitz3.ab3@22485>          MOVE.w #$f293,-4(a4)                              ;
00030BA8 <AmiBlitz3.ab3@22486> BRA 'brf
00030BB0 <AmiBlitz3.ab3@22489>   CMP.l #$f2400015,-4(a4)                                  ;<=
00030BB4 <AmiBlitz3.ab3@22490>          BNE 'nole
00030BBA <AmiBlitz3.ab3@22491>          SUBQ.l #2,destpointer
00030BC0 <AmiBlitz3.ab3@22492>          MOVE.w #$f292,-4(a4)
00030BC4 <AmiBlitz3.ab3@22493> BRA 'brf
00030BCC <AmiBlitz3.ab3@22496>   CMP.l #$f2400013,-4(a4)                                  ;=>
00030BD0 <AmiBlitz3.ab3@22497>          BNE 'noge
00030BD6 <AmiBlitz3.ab3@22498>          SUBQ.l #2,destpointer
00030BDC <AmiBlitz3.ab3@22499>          MOVE.w #$f294,-4(a4)
00030BE0 <AmiBlitz3.ab3@22500> BRA 'brf
00030BE8 <AmiBlitz3.ab3@22503>   CMP.l #$f2400012,-4(a4)                                  ;>
00030BEC <AmiBlitz3.ab3@22504>          BNE 'nogt
00030BF2 <AmiBlitz3.ab3@22505>          SUBQ.l #2,destpointer
00030BF8 <AmiBlitz3.ab3@22506>          MOVE.w #$f295,-4(a4)
00030BFC <AmiBlitz3.ab3@22507> BRA 'brf
00030C04 <AmiBlitz3.ab3@22510>   CMP.l #$f2400001,-4(a4)                                  ;=
00030C08 <AmiBlitz3.ab3@22511>          BNE 'noeq
00030C0E <AmiBlitz3.ab3@22512>          SUBQ.l #2,destpointer
00030C14 <AmiBlitz3.ab3@22513>          MOVE.w #$f28e,-4(a4)
00030C18 <AmiBlitz3.ab3@22514> BRA 'brf
00030C20 <AmiBlitz3.ab3@22517>   CMP.l #$f240000e,-4(a4)                                  ;<>
00030C24 <AmiBlitz3.ab3@22518>          BNE 'none
00030C2A <AmiBlitz3.ab3@22519>          SUBQ.l #2,destpointer
00030C30 <AmiBlitz3.ab3@22520>          MOVE.w #$f281,-4(a4)
00030C32 <AmiBlitz3.ab3@22523>   ADDQ.l #2,a7
00030C38 <AmiBlitz3.ab3@22525>     TST.b fast
00030C3C <AmiBlitz3.ab3@22526>     BEQ 'l1
00030C42 <AmiBlitz3.ab3@22527>     OR.b #$40,-3(a4)
00030C46 <AmiBlitz3.ab3@22528>     BSR writeword
00030C4A <AmiBlitz3.ab3@22532>  BSR writeword
00030C4E <AmiBlitz3.ab3@22533> BRA.s br2
00030C54 <AmiBlitz3.ab3@22537>   MOVE.l destpointer,a0
00030C5A <AmiBlitz3.ab3@22538>          SUB.l load_var_addr,a0
00030C60 <AmiBlitz3.ab3@22539>          CMP.l #4,a0
00030C64 <AmiBlitz3.ab3@22540>          BEQ JL_0_D0B4
00030C6A <AmiBlitz3.ab3@22541>          CMP.w #$4eb9,-6(a4)
00030C6E <AmiBlitz3.ab3@22542>          BEQ b6
00030C74 <AmiBlitz3.ab3@22543>          CMP.w #$5ec0,-2(a4)                               ;>
00030C78 <AmiBlitz3.ab3@22544>      BNE.s 'lb1
00030C7E <AmiBlitz3.ab3@22545>          MOVE.w #$6f00,-2(a4)                              ;ble
00030C82 <AmiBlitz3.ab3@22546> BRA.s br
00030C88 <AmiBlitz3.ab3@22549>  CMP.w #$5dc0,-2(a4)                                       ;<
00030C8C <AmiBlitz3.ab3@22550>   BNE.s 'lb2
00030C92 <AmiBlitz3.ab3@22551>          MOVE.w #$6c00,-2(a4)                              ;bge
00030C96 <AmiBlitz3.ab3@22552> BRA.s br
00030C9C <AmiBlitz3.ab3@22555>   CMP.w #$57c0,-2(a4)                                      ;=
00030CA0 <AmiBlitz3.ab3@22556>   BNE.s 'lb3
00030CA6 <AmiBlitz3.ab3@22557>          MOVE.w #$6600,-2(a4)                              ;bne
00030CAA <AmiBlitz3.ab3@22558> BRA.s br
00030CB0 <AmiBlitz3.ab3@22561>   CMP.w #$56c0,-2(a4)                                      ;<>
00030CB4 <AmiBlitz3.ab3@22562>   BNE.s 'lb4
00030CBA <AmiBlitz3.ab3@22563>          MOVE.w #$6700,-2(a4)                              ;beq
00030CBE <AmiBlitz3.ab3@22564> BRA.s br
00030CC4 <AmiBlitz3.ab3@22567>   CMP.w #$5cc0,-2(a4)                                      ;>=
00030CC8 <AmiBlitz3.ab3@22568>   BNE.s 'lb5
00030CCE <AmiBlitz3.ab3@22569>          MOVE.w #$6d00,-2(a4)                              ;blt
00030CD2 <AmiBlitz3.ab3@22570> BRA.s br
00030CD8 <AmiBlitz3.ab3@22573>   CMP.w #$5fc0,-2(a4)                                      ;<=
00030CDC <AmiBlitz3.ab3@22574>         BNE.s b6
00030CE2 <AmiBlitz3.ab3@22575>          MOVE.w #$6e00,-2(a4)                              ;bgt
00030CE4 <AmiBlitz3.ab3@22578>   TST.w (a7)+
00030CEA <AmiBlitz3.ab3@22580>         TST.b fast
00030CEE <AmiBlitz3.ab3@22581>         BEQ 'l1
00030CF4 <AmiBlitz3.ab3@22582>         OR.b #$ff,-1(a4)                                   ;long branches
00030CF8 <AmiBlitz3.ab3@22583>         BSR writeword
00030CFC <AmiBlitz3.ab3@22587>         BSR writeword
00030D00 <AmiBlitz3.ab3@22588> BRA.s br2
00030D04 <AmiBlitz3.ab3@22591>   BSR.w writeword
00030D08 <AmiBlitz3.ab3@22594>   MOVE.l posbr(PC),D1
00030D0A <AmiBlitz3.ab3@22595>   TST.w (A7)+
00030D0E <AmiBlitz3.ab3@22596>    BEQ.w JL_0_D0C2
00030D12 <AmiBlitz3.ab3@22597>   MOVE.l negbr(PC),D1
00030D18 <AmiBlitz3.ab3@22600>   TST.b fast
00030D1C <AmiBlitz3.ab3@22601>            BEQ 'l1
00030D22 <AmiBlitz3.ab3@22602>            OR.l #$00ff0000,d1
00030D26 <AmiBlitz3.ab3@22603>            BSR writelong
00030D2A <AmiBlitz3.ab3@22604>            BSR writeword
00030D2E <AmiBlitz3.ab3@22605> BRA br2
00030D32 <AmiBlitz3.ab3@22608>   BSR.w writelong
00030D34 <AmiBlitz3.ab3@22611>  MOVEQ.l #$0E,D0
00030D36 <AmiBlitz3.ab3@22612>   MOVEQ.l #$01,D1
00030D3C <AmiBlitz3.ab3@22613>   MOVEA.l _execbase,A6
00030D42 <AmiBlitz3.ab3@22615>   MOVE.l mempool,a0
00030D46 <AmiBlitz3.ab3@22616>   JSR _AllocPooled(a6)
00030D48 <AmiBlitz3.ab3@22617>   MOVEA.l D0,A0
00030D4E <AmiBlitz3.ab3@22618>   MOVE.l firstiff,(A0)
00030D54 <AmiBlitz3.ab3@22619>   MOVE.l A0,firstiff
00030D58 <AmiBlitz3.ab3@22620>   MOVE.l (A7)+,$4(A0)
00030D60 <AmiBlitz3.ab3@22621>   MOVE.l destpointer,$8(A0)
00030D64 <AmiBlitz3.ab3@22622>   MOVE.w (A7)+,$C(A0)
00030D6A <AmiBlitz3.ab3@22623>    JSR reget
00030D6E <AmiBlitz3.ab3@22624>    BEQ.w JL_0_D10C
00030D74 <AmiBlitz3.ab3@22625>   BSET #$7,$C(A0)
00030D7E <AmiBlitz3.ab3@22629>   MOVE.w oldqflag,instringon
00030D84 <AmiBlitz3.ab3@22630>   MOVEA.l lastsourcepos,A5
00030D8C <AmiBlitz3.ab3@22631>   MOVE.w #$003A,lastchar
00030D8E <AmiBlitz3.ab3@22634> RTS
00030D92 <AmiBlitz3.ab3@22638>   CMP.w #$1,D0
00030D96 <AmiBlitz3.ab3@22639>    BLT.w JL_0_D128
00030D9A <AmiBlitz3.ab3@22640>   CMP.w #$0,D0
00030D9E <AmiBlitz3.ab3@22641>    BGT.w JL_0_D128
00030DA0 <AmiBlitz3.ab3@22642>   ADD.w D0,D0
00030DA2 <AmiBlitz3.ab3@22643>   ADD.w D0,D0
00030DA6 <AmiBlitz3.ab3@22644>   MOVEA.l JL_0_D128(PC,D0.W),A0
00030DA8 <AmiBlitz3.ab3@22647> JMP (A0)
00030DAC <AmiBlitz3.ab3@22650> BRA.w JL_0_D128
00030DB0 <AmiBlitz3.ab3@22654>   CMP.w #$1,D0
00030DB4 <AmiBlitz3.ab3@22655>    BLT.w JL_0_D146
00030DB8 <AmiBlitz3.ab3@22656>   CMP.w #$0,D0
00030DBC <AmiBlitz3.ab3@22657>    BGT.w JL_0_D146
00030DBE <AmiBlitz3.ab3@22658>   ADD.w D0,D0
00030DC0 <AmiBlitz3.ab3@22659>   ADD.w D0,D0
00030DC4 <AmiBlitz3.ab3@22660>   MOVEA.l JL_0_D146(PC,D0.W),A0
00030DC6 <AmiBlitz3.ab3@22663>   JSR (A0)
00030DCA <AmiBlitz3.ab3@22666> BRA.w JL_0_D146
00030DCE <AmiBlitz3.ab3@22670>   CMP.w #$1,D0
00030DD2 <AmiBlitz3.ab3@22671>    BLT.w JL_0_D168
00030DD6 <AmiBlitz3.ab3@22672>   CMP.w #$0,D0
00030DDA <AmiBlitz3.ab3@22673>    BGT.w JL_0_D168
00030DDC <AmiBlitz3.ab3@22674>   ADD.w D0,D0
00030DDE <AmiBlitz3.ab3@22675>   ADD.w D0,D0
00030DE2 <AmiBlitz3.ab3@22676>   MOVEA.l JL_0_D168(PC,D0.W),A0
00030DE6 <AmiBlitz3.ab3@22679>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00030DE8 <AmiBlitz3.ab3@22682>    JSR (A0)
00030DEC <AmiBlitz3.ab3@22685> BRA.w JL_0_D168
00030DEE <AmiBlitz3.ab3@22688> labcnt:   Ds.w 1
00030DF0 <AmiBlitz3.ab3@22695>   MOVEQ.l #$02,D2
00030DF4 <AmiBlitz3.ab3@22696>    BSR.w bakeval
00030DF8 <AmiBlitz3.ab3@22697>   LEA JL_0_D10E(PC),A0
00030DFC <AmiBlitz3.ab3@22698>   LEA JL_0_D12C(PC),A1
00030E00 <AmiBlitz3.ab3@22699>   MOVE.w #$001A,D1
00030E04 <AmiBlitz3.ab3@22700>   CMP.w #-$7FFB,D0
00030E08 <AmiBlitz3.ab3@22701>    BEQ.w JL_0_D1B6
00030E0C <AmiBlitz3.ab3@22702>   CMP.w #-$7FFA,D0
00030E10 <AmiBlitz3.ab3@22703>    BNE.w JUMP_syntaxerr
00030E14 <AmiBlitz3.ab3@22704>   LEA JL_0_D12C(PC),A0
00030E18 <AmiBlitz3.ab3@22705>   LEA JL_0_D14A(PC),A1
00030E1C <AmiBlitz3.ab3@22706>   MOVE.w #$001A,D1
00030E22 <AmiBlitz3.ab3@22707>   TST.b debugmode
00030E26 <AmiBlitz3.ab3@22708>    BEQ.b JL_0_D1B6
00030E2C <AmiBlitz3.ab3@22709>    JSR chkstak
00030E30 <AmiBlitz3.ab3@22710>   LEA JL_0_D14A(PC),A0
00030E34 <AmiBlitz3.ab3@22711>   LEA labcnt(PC),A1
00030E38 <AmiBlitz3.ab3@22712>   MOVE.w #$001E,D1
00030E3A <AmiBlitz3.ab3@22715>   MOVE.w D1,-(A7)
00030E40 <AmiBlitz3.ab3@22716>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00030E44 <AmiBlitz3.ab3@22717>    BSR.w pokecode
00030E4A <AmiBlitz3.ab3@22718>   CLR.w labcnt
00030E50 <AmiBlitz3.ab3@22723>    JSR get1bytemain
00030E56 <AmiBlitz3.ab3@22724>   SUBQ.l #2,destpointer                                    ;for makealab!
00030E5A <AmiBlitz3.ab3@22725>    BSR.w JL_0_AE22
00030E60 <AmiBlitz3.ab3@22726>   ADDQ.l #2,destpointer
00030E66 <AmiBlitz3.ab3@22727>    JSR addoff
00030E6A <AmiBlitz3.ab3@22728>   MOVE.l $8(A2),D1
00030E6E <AmiBlitz3.ab3@22729>    BSR.w writelong
00030E74 <AmiBlitz3.ab3@22730>   ADDQ.w #1,labcnt
00030E7A <AmiBlitz3.ab3@22731>    JSR reget
00030E7E <AmiBlitz3.ab3@22732>   CMP.w #$2C,D0
00030E82 <AmiBlitz3.ab3@22733>    BEQ.w JL_0_D1C8
00030E84 <AmiBlitz3.ab3@22734>   MOVEA.l (A7)+,A0
00030E86 <AmiBlitz3.ab3@22735>   MOVE.w (A7)+,D2
00030E8C <AmiBlitz3.ab3@22736>   MOVE.w dontwrite,D1
00030E90 <AmiBlitz3.ab3@22737>    BNE.w JL_0_D21A
00030E94 <AmiBlitz3.ab3@22738>   MOVE.w labcnt(PC),D1
00030E98 <AmiBlitz3.ab3@22739>   MOVE.w D1,$A(A0)
00030E9A <AmiBlitz3.ab3@22740>   ADD.w D1,D1
00030E9C <AmiBlitz3.ab3@22741>   ADD.w D1,D1
00030E9E <AmiBlitz3.ab3@22742>   ADDQ.w #2,D1
00030EA2 <AmiBlitz3.ab3@22743>   MOVE.w D1,$2(A0,D2.W)
00030EA4 <AmiBlitz3.ab3@22746> RTS
00030EAA <AmiBlitz3.ab3@22750>   TST.b debugmode
00030EAE <AmiBlitz3.ab3@22751>    BEQ.w JL_0_D236
00030EB4 <AmiBlitz3.ab3@22752>    JSR chkstak
00030EBA <AmiBlitz3.ab3@22753>   MOVE.l AL_0_D162,D1
00030EBE <AmiBlitz3.ab3@22754>    BSR.w writelong
00030EC4 <AmiBlitz3.ab3@22756>   MOVE.w gosubcode,D1
00030EC8 <AmiBlitz3.ab3@22757> BRA.w JL_0_D246
00030ECE <AmiBlitz3.ab3@22761>   MOVE.w gotocode,D1
00030ED0 <AmiBlitz3.ab3@22764>   MOVE.w D1,-(A7)
00030ED4 <AmiBlitz3.ab3@22765>    BSR.w JL_0_AE22
00030ED6 <AmiBlitz3.ab3@22766>   MOVE.w (A7)+,D1
00030EDA <AmiBlitz3.ab3@22767>    BSR.w writeword
00030EE0 <AmiBlitz3.ab3@22768>    JSR addoff
00030EE4 <AmiBlitz3.ab3@22769>   MOVE.l $8(A2),D1
00030EE8 <AmiBlitz3.ab3@22770> BRA.w writelong
00030EEE <AmiBlitz3.ab3@22774>   MOVE.w proceduremode,D1
00030EF2 <AmiBlitz3.ab3@22775>    BEQ.w JUMP_badpenderr
00030EF6 <AmiBlitz3.ab3@22776>   MOVE.w #$4EF9,D1
00030EFA <AmiBlitz3.ab3@22777>    BSR.w writeword
00030F00 <AmiBlitz3.ab3@22778>    JSR addoff
00030F06 <AmiBlitz3.ab3@22779>   MOVEA.l _execbase,A6
00030F08 <AmiBlitz3.ab3@22780>   MOVEQ.l #$08,D0
00030F0A <AmiBlitz3.ab3@22781>   MOVEQ.l #$01,D1
00030F10 <AmiBlitz3.ab3@22783>   MOVE.l mempool,a0
00030F14 <AmiBlitz3.ab3@22784>   JSR _AllocPooled(a6)
00030F16 <AmiBlitz3.ab3@22785>   MOVEA.l D0,A0
00030F1C <AmiBlitz3.ab3@22786>   MOVE.l firstpend,(A0)
00030F22 <AmiBlitz3.ab3@22787>   MOVE.l A0,firstpend
00030F2A <AmiBlitz3.ab3@22788>   MOVE.l destpointer,$4(A0)
00030F2E <AmiBlitz3.ab3@22789> BRA.w writelong
00030F32 <AmiBlitz3.ab3@22793>   BSR.w do_AsmExit
00030F38 <AmiBlitz3.ab3@22794> JMP get1bytemain
00030F40 <AmiBlitz3.ab3@22798>   MOVE.b #1,nostringopt
00030F44 <AmiBlitz3.ab3@22799>   MOVEM.l a0/a1/d1,-(a7)
00030F4A <AmiBlitz3.ab3@22800>   MOVEA.l currentfunction,A0
00030F50 <AmiBlitz3.ab3@22801>     CMP.l #0,a0
00030F54 <AmiBlitz3.ab3@22802>     BNE 'l1
00030F5A <AmiBlitz3.ab3@22803>     JMP errorasmexit
00030F5C <AmiBlitz3.ab3@22804> 'l1 MOVEQ.l #$00,D2
00030F60 <AmiBlitz3.ab3@22805>   MOVE.b $5(A0),D2
00030F64 <AmiBlitz3.ab3@22806>   BSR.w eval
00030F6A <AmiBlitz3.ab3@22808>   MOVEA.l currentfunction,A0
00030F6E <AmiBlitz3.ab3@22809>   MOVE.l funcstruct_returntype(a0),a0
00030F74 <AmiBlitz3.ab3@22810>   CMP.l #0,a0
00030F78 <AmiBlitz3.ab3@22811>   BEQ 'isstatement
00030F80 <AmiBlitz3.ab3@22812>   CMP.l #$100,4(a0)
00030F84 <AmiBlitz3.ab3@22813>   BLT.w 'isvar
00030F86 <AmiBlitz3.ab3@22814>   MOVE.l a2,a1
00030F8C <AmiBlitz3.ab3@22815>   TST.l typetocast
00030F90 <AmiBlitz3.ab3@22816>   BEQ 'nocast
00030F96 <AmiBlitz3.ab3@22817>   MOVE.l typetocast,a1
00030F98 <AmiBlitz3.ab3@22818> 'nocast  CMP.l a0,a1
00030F9C <AmiBlitz3.ab3@22819>   BEQ 'ok
00030FA2 <AmiBlitz3.ab3@22820>   CLR.l typetocast
00030FA8 <AmiBlitz3.ab3@22821>   MOVE.l lasttoken,d1
00030FAC <AmiBlitz3.ab3@22822>   CMP.w #$b581,d1                   ; ok, when token for null
00030FB0 <AmiBlitz3.ab3@22823>   BEQ 'isnull
00030FB6 <AmiBlitz3.ab3@22824> 'error  JMP errorconvertreturntype
00030FBA <AmiBlitz3.ab3@22831>   MOVEM.l (a7)+,a0/a1/d1
00030FBE <AmiBlitz3.ab3@22832> BRA.w do_AsmExit
00030FC4 <AmiBlitz3.ab3@22834> error_convert_types2 JMP error_convert_types
00030FCA <AmiBlitz3.ab3@22847>   TST.b debugmode
00030FCE <AmiBlitz3.ab3@22848>    BEQ.w JL_0_D2CA
00030FD2 <AmiBlitz3.ab3@22849>   MOVE.w #$C305,D1
00030FD6 <AmiBlitz3.ab3@22850> BRA.w Atokejsr
00030FDA <AmiBlitz3.ab3@22853>   MOVE.w #$4E75,D1
00030FDE <AmiBlitz3.ab3@22854> BRA.w writeword
00030FE2 <AmiBlitz3.ab3@22857> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00030FE6 <AmiBlitz3.ab3@22858> proclocals:  Ds.l 1                                        ;for debugga!
00030FE8 <AmiBlitz3.ab3@22859> procnum:     Ds.w 1
00030FEA <AmiBlitz3.ab3@22860> procnum2:    Ds.w 1
00030FEE <AmiBlitz3.ab3@22861> prolineat:   Ds.l 1
00030FF4 <AmiBlitz3.ab3@22865>    TST.w proceduremode
00030FF8 <AmiBlitz3.ab3@22866>    BGT JUMP_sreterr
00030FFC <AmiBlitz3.ab3@22867>    CMP.w #-$7FF9,D0
00031000 <AmiBlitz3.ab3@22868>    BEQ.w JL_0_D29C
00031002 <AmiBlitz3.ab3@22869>    MOVEQ.l #-$01,D1
00031006 <AmiBlitz3.ab3@22870> BRA.w do_function2
0003100C <AmiBlitz3.ab3@22873> JMP sreterr
00031012 <AmiBlitz3.ab3@22877>   CLR.b skipfunc
00031018 <AmiBlitz3.ab3@22878>   TST.l unusedfunc
0003101C <AmiBlitz3.ab3@22879>   BEQ 'ex
00031020 <AmiBlitz3.ab3@22880>   MOVEM.l d0-d7/a0-a6,-(a7)
00031026 <AmiBlitz3.ab3@22881>   MOVE.l unusedfunc,d1
0003102C <AmiBlitz3.ab3@22882>   LEA ptr_parameterstore,a5
0003102E <AmiBlitz3.ab3@22885>   MOVE.l d1,a0
00031032 <AmiBlitz3.ab3@22886>   LEA 12(a0),a2
00031034 <AmiBlitz3.ab3@22887>   MOVE.l a5,a1
00031036 <AmiBlitz3.ab3@22889>   CMPM.b (a1)+,(a2)+
0003103A <AmiBlitz3.ab3@22890>   BNE 'neq
0003103C <AmiBlitz3.ab3@22891>   TST.b (a2)
00031040 <AmiBlitz3.ab3@22892>   BNE 'ch
00031042 <AmiBlitz3.ab3@22893>   TST.b (a1)
00031046 <AmiBlitz3.ab3@22894>   BNE 'neq
0003104E <AmiBlitz3.ab3@22895>   MOVE.b #1,skipfunc
00031052 <AmiBlitz3.ab3@22896> BRA 'out
00031054 <AmiBlitz3.ab3@22899>   MOVE.l (a0),d1
00031058 <AmiBlitz3.ab3@22900>   BNE 'ag
0003105C <AmiBlitz3.ab3@22903>   MOVEM.l (a7)+,d0-d7/a0-a6
0003105E <AmiBlitz3.ab3@22906> RTS
00031064 <AmiBlitz3.ab3@22910> JMP dupprocerr
0003106A <AmiBlitz3.ab3@22913> JMP illprocperr
00031072 <AmiBlitz3.ab3@22920>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00031076 <AmiBlitz3.ab3@22921>    BEQ JUMP_sreterr
0003107A <AmiBlitz3.ab3@22922>   CMP.w #-$7FF9,D0
0003107E <AmiBlitz3.ab3@22923>    BEQ.w do_function_return
00031088 <AmiBlitz3.ab3@22926>   MOVE.w oldqflag,instringon
0003108E <AmiBlitz3.ab3@22927>   MOVEA.l lastsourcepos,A5
00031094 <AmiBlitz3.ab3@22928>   JSR getfunctionreturntype
0003109A <AmiBlitz3.ab3@22929>   JSR get1bytemain
000310A0 <AmiBlitz3.ab3@22932>   TST.b declare
000310A4 <AmiBlitz3.ab3@22933>   BEQ 'l1
000310AC <AmiBlitz3.ab3@22934>   MOVE.b #1,nowdeclare
000310B2 <AmiBlitz3.ab3@22937>   JSR errchx                                           ;writejumpoverfunction
000310B8 <AmiBlitz3.ab3@22940>   CLR.b fastfunc
000310C2 <AmiBlitz3.ab3@22941>   MOVE.l firstiff,firstiffstore
000310CA <AmiBlitz3.ab3@22942>   CMP.l #"FAST",-1(a5)
000310CE <AmiBlitz3.ab3@22943>   BNE 'nofast
000310D4 <AmiBlitz3.ab3@22944>   CMP.b #" ",3(a5)
000310D8 <AmiBlitz3.ab3@22945>   BNE 'nofast
000310DA <AmiBlitz3.ab3@22946>   ADDQ.l #3,a5
000310DE <AmiBlitz3.ab3@22949>     CMP.b #" ",(a5)
000310E2 <AmiBlitz3.ab3@22950>      BNE 'x1
000310E4 <AmiBlitz3.ab3@22951>     ADDQ #1,a5
000310E8 <AmiBlitz3.ab3@22952> BRA 'x2
000310EE <AmiBlitz3.ab3@22955>   MOVE.l a5,lastsourcepos
000310F6 <AmiBlitz3.ab3@22956>   MOVE.b #1,fastfunc
000310FE <AmiBlitz3.ab3@22959>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00031102 <AmiBlitz3.ab3@22960> BRA 'noopt
00031108 <AmiBlitz3.ab3@22962>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
0003110C <AmiBlitz3.ab3@22963>   BNE 'noopt
0003110E <AmiBlitz3.ab3@22964>   ADDQ.l #4,a5
00031112 <AmiBlitz3.ab3@22967>     CMP.b #" ",(a5)
00031116 <AmiBlitz3.ab3@22968>      BNE 'x1b
00031118 <AmiBlitz3.ab3@22969>     ADDQ #1,a5
0003111C <AmiBlitz3.ab3@22970> BRA 'x2b
00031122 <AmiBlitz3.ab3@22973>   MOVE.l a5,lastsourcepos
00031128 <AmiBlitz3.ab3@22975>   JSR makename2
0003112C <AmiBlitz3.ab3@22976> BRA 'l1
00031132 <AmiBlitz3.ab3@22980>   JSR makename2
00031138 <AmiBlitz3.ab3@22981>   JSR checkused
0003113E <AmiBlitz3.ab3@22982>   TST.b skipfunc
00031142 <AmiBlitz3.ab3@22983>    BEQ 'l1
00031148 <AmiBlitz3.ab3@22984>   JSR skipme
0003114E <AmiBlitz3.ab3@22985>   CLR.b fastfunc
00031150 <AmiBlitz3.ab3@22986> RTS
0003115A <AmiBlitz3.ab3@22989>   MOVE.l linenumat,prolineat
00031160 <AmiBlitz3.ab3@22990>   ADDQ.w #1,procnum2
00031168 <AmiBlitz3.ab3@22991>   MOVE.w procnum2(PC),procnum
0003116E <AmiBlitz3.ab3@22992>   MOVE.w D1,proceduremode
00031174 <AmiBlitz3.ab3@22993>   CLR.w locvaroff
00031178 <AmiBlitz3.ab3@22994>   CMP.w #$7B,D0
0003117C <AmiBlitz3.ab3@22995>    BNE.w JUMP_syntaxerr
00031184 <AmiBlitz3.ab3@22996>    MOVE.b #1,infunctioncode
0003118A <AmiBlitz3.ab3@22997>   MOVEA.l tempvm,A0
00031192 <AmiBlitz3.ab3@22998>   MOVE.w $C(A0),memlibstat
00031198 <AmiBlitz3.ab3@22999>   BCLR #$7,$C(A0)                                          ;Bit out of range
0003119C <AmiBlitz3.ab3@23000>   MOVE.w #$4EF9,D1
000311A0 <AmiBlitz3.ab3@23001>    BSR.w writeword
000311A6 <AmiBlitz3.ab3@23002>    JSR addoff
000311AA <AmiBlitz3.ab3@23003>    BSR.w writelong
000311B0 <AmiBlitz3.ab3@23004>    JSR findproc                                          ;findproc function
000311B4 <AmiBlitz3.ab3@23005>    BEQ.w JUMP_dupprocerr
000311BA <AmiBlitz3.ab3@23006>    JSR addlabel
000311C0 <AmiBlitz3.ab3@23007>    MOVE.b #31,$20(a2)                                      ;increase if more pars
000311C6 <AmiBlitz3.ab3@23008>    MOVE.b #0,isfunc(a2)
000311CE <AmiBlitz3.ab3@23009>    MOVE.l functionreturntype,funcstruct_returntype(a2)
000311D6 <AmiBlitz3.ab3@23010>   MOVE.l destpointer,$E(A2)
000311DC <AmiBlitz3.ab3@23011>   MOVE.l A2,currentfunction
000311E2 <AmiBlitz3.ab3@23012>   LEA nops8,A0
000311E8 <AmiBlitz3.ab3@23013>   LEA dataget,A1
000311EC <AmiBlitz3.ab3@23014>    BSR.w pokecode2
000311F2 <AmiBlitz3.ab3@23015>   TST.b debugmode
000311F6 <AmiBlitz3.ab3@23016>    BEQ.b JL_0_D3AA
000311F8 <AmiBlitz3.ab3@23017>   MOVEQ.l #$04,D1
000311FE <AmiBlitz3.ab3@23018>    JSR writetrap
00031208 <AmiBlitz3.ab3@23019>   MOVE.l destpointer,proclocals
0003120C <AmiBlitz3.ab3@23020>    BSR.w writelong
00031210 <AmiBlitz3.ab3@23021>    BSR.w writelong
00031214 <AmiBlitz3.ab3@23024>    LEA $16(A2),A4
0003121C <AmiBlitz3.ab3@23025>   MOVE.b proceduremode+1,$5(A2)
0003121E <AmiBlitz3.ab3@23026>   MOVEQ.l #$00,D6
00031220 <AmiBlitz3.ab3@23027>   MOVEQ.l #$00,D5
00031226 <AmiBlitz3.ab3@23028>    JSR get1bytemain
0003122A <AmiBlitz3.ab3@23029>   CMP.w #$7D,D0
0003122E <AmiBlitz3.ab3@23030>    BEQ.w JL_0_D466
00031232 <AmiBlitz3.ab3@23033>    CMP.b #"@",d0
00031236 <AmiBlitz3.ab3@23034>    BNE 'l2
00031238 <AmiBlitz3.ab3@23035>    MOVE.l a0,-(a7)
0003123E <AmiBlitz3.ab3@23036>    MOVE.l currentfunction,a0
00031244 <AmiBlitz3.ab3@23037>    CMP.b #31,$20(a0)                                       ;increase if morepars
00031248 <AmiBlitz3.ab3@23038>    BNE 'l1
0003124C <AmiBlitz3.ab3@23039>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00031252 <AmiBlitz3.ab3@23042>    JSR get1bytemain
00031254 <AmiBlitz3.ab3@23043>    MOVE.l (a7)+,a0
00031258 <AmiBlitz3.ab3@23046>    BSR.w getparameter
0003125C <AmiBlitz3.ab3@23047>    BSR.w JL_0_8E3C
00031264 <AmiBlitz3.ab3@23048>   CMPI.l #$7,$4(A2)
00031268 <AmiBlitz3.ab3@23049>    BNE.w JL_0_D3F6
0003126E <AmiBlitz3.ab3@23050>   LEA stbuff,A0
00031270 <AmiBlitz3.ab3@23051>   MOVE.w D5,D1
00031272 <AmiBlitz3.ab3@23052>   LSL.w #2,D1
00031276 <AmiBlitz3.ab3@23053>   MOVE.w D6,$0(A0,D1.W)
0003127C <AmiBlitz3.ab3@23054>   MOVE.w $4(A3),$2(A0,D1.W)
0003127E <AmiBlitz3.ab3@23055>   ADDQ.w #1,D5
00031280 <AmiBlitz3.ab3@23056>   MOVEQ.l #$07,D2
00031284 <AmiBlitz3.ab3@23057> BRA.w JL_0_D442
0003128A <AmiBlitz3.ab3@23060> JMP toovarerr
0003128E <AmiBlitz3.ab3@23063>   MOVE.w #$2940,D1
00031290 <AmiBlitz3.ab3@23064>   MOVEQ.l #$03,D2
00031298 <AmiBlitz3.ab3@23065>   BTST #$0,flagmask+1
0003129C <AmiBlitz3.ab3@23066>    BNE.w JL_0_D430
000312A4 <AmiBlitz3.ab3@23067>   CMPI.l #$100,$4(A2)
000312A8 <AmiBlitz3.ab3@23068>    BCC.w JUMP_illprocperr
000312AC <AmiBlitz3.ab3@23069>   MOVE.w $6(A2),D2
000312B0 <AmiBlitz3.ab3@23070>   CMP.w #$2,D2
000312B4 <AmiBlitz3.ab3@23071>    BHI.w JL_0_D430
000312B8 <AmiBlitz3.ab3@23072>    BEQ.w JL_0_D42C
000312BC <AmiBlitz3.ab3@23073>   EORI.w #$3000,D1
000312C0 <AmiBlitz3.ab3@23074> BRA.w JL_0_D430
000312C6 <AmiBlitz3.ab3@23077> JMP more6pard
000312CA <AmiBlitz3.ab3@23080>   ORI.w #$1000,D1
000312CC <AmiBlitz3.ab3@23083>   OR.w D6,D1
000312D2 <AmiBlitz3.ab3@23084>   TST.b fpu
000312D6 <AmiBlitz3.ab3@23085>   BEQ 'nofpu
000312DA <AmiBlitz3.ab3@23086>   CMP.b #5,d2
000312DE <AmiBlitz3.ab3@23087>   BNE 'nofpu
000312E2 <AmiBlitz3.ab3@23088>   CMP.w #6,d6
000312E6 <AmiBlitz3.ab3@23089>   BLT 'l10a
000312EC <AmiBlitz3.ab3@23090>   CMP.l #newtype_double,a2
000312F0 <AmiBlitz3.ab3@23091>   BEQ JUMP_more6pard
000312F4 <AmiBlitz3.ab3@23092> BRA 'nofpu
000312FA <AmiBlitz3.ab3@23095>   MOVE.l #$f22c6400,d1
000312FE <AmiBlitz3.ab3@23096>   MOVEM.l d0/a4,-(a7)
00031300 <AmiBlitz3.ab3@23097>   MOVE.l d6,d0
00031302 <AmiBlitz3.ab3@23098>   ASL.l #7,d0
00031304 <AmiBlitz3.ab3@23099>   OR.w d0,d1
0003130A <AmiBlitz3.ab3@23100>   CMP.l #newtype_double,a2
0003130E <AmiBlitz3.ab3@23101>   BNE 'l1
00031314 <AmiBlitz3.ab3@23102>   OR.l #$1000,d1
00031318 <AmiBlitz3.ab3@23105>   BSR writelong
0003131C <AmiBlitz3.ab3@23106>   MOVE.w 4(a3),d1
00031320 <AmiBlitz3.ab3@23107>   BSR writeword
00031324 <AmiBlitz3.ab3@23108>   MOVEM.l (a7)+,a4/d0
00031328 <AmiBlitz3.ab3@23109> BRA JL_0_D442
0003132A <AmiBlitz3.ab3@23112>   MOVE.l A4,-(A7)
0003132E <AmiBlitz3.ab3@23113>    CMP.w #6,d6
00031332 <AmiBlitz3.ab3@23114>    BLT 'l10
00031336 <AmiBlitz3.ab3@23115>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00031338 <AmiBlitz3.ab3@23116>    ADD.w d6,d1
0003133E <AmiBlitz3.ab3@23117>    JSR Atokejsr
00031344 <AmiBlitz3.ab3@23118>    TST.w dontwrite
00031348 <AmiBlitz3.ab3@23119>    BNE 'l10
0003134E <AmiBlitz3.ab3@23120>    MOVE.l data1start,d1
00031354 <AmiBlitz3.ab3@23121>    MOVE.l destpointer,a4
00031358 <AmiBlitz3.ab3@23122>    ADD.l d1,-6(a4)
0003135E <AmiBlitz3.ab3@23123>    MOVE.l destpointer,d1
00031360 <AmiBlitz3.ab3@23124>    SUBQ.l #6,d1
00031366 <AmiBlitz3.ab3@23125>    SUB.l destbufferstart,d1
00031368 <AmiBlitz3.ab3@23127>    MOVE.l d2,-(a7)
0003136A <AmiBlitz3.ab3@23128>    MOVE.l d1,d2
00031370 <AmiBlitz3.ab3@23129>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00031372 <AmiBlitz3.ab3@23130>    MOVE.l (a7)+,d2
00031378 <AmiBlitz3.ab3@23131>    MOVE.l destpointer,a4
0003137C <AmiBlitz3.ab3@23132>    CMP.w #2,d2
00031380 <AmiBlitz3.ab3@23133>    BNE 'nw1
00031386 <AmiBlitz3.ab3@23135>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
0003138E <AmiBlitz3.ab3@23136>    ADD.l #2,-6(a4)
00031392 <AmiBlitz3.ab3@23139>    CMP.w #1,d2
00031396 <AmiBlitz3.ab3@23140>    BNE 'nb
0003139C <AmiBlitz3.ab3@23141>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000313A4 <AmiBlitz3.ab3@23142>    ADD.l #3,-6(a4)
000313AA <AmiBlitz3.ab3@23145>    MOVE.w $4(a3),-2(a4)
000313AE <AmiBlitz3.ab3@23146> BRA 'ne1
000313B2 <AmiBlitz3.ab3@23149>   BSR.w writeword                                          ;write storeparameter
000313B6 <AmiBlitz3.ab3@23152>   MOVE.w $4(A3),D1
000313BA <AmiBlitz3.ab3@23153>    BSR.w writeword
000313BC <AmiBlitz3.ab3@23156>   MOVEA.l (A7)+,A4
000313C2 <AmiBlitz3.ab3@23159>   CLR.l functionreturntype
000313C4 <AmiBlitz3.ab3@23160>   ADDQ.w #1,D6
000313C8 <AmiBlitz3.ab3@23161>   CMP.w #11,D6                                             ;max function parameters
000313CC <AmiBlitz3.ab3@23162>    BCC.w JUMP_toovarerr
000313D2 <AmiBlitz3.ab3@23163>   MOVE.l currentfunction,a0
000313D6 <AmiBlitz3.ab3@23164>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
000313D8 <AmiBlitz3.ab3@23165>   MOVE.b D2,(A4)+
000313DC <AmiBlitz3.ab3@23166>   CMP.w #$2C,D0
000313E0 <AmiBlitz3.ab3@23167>    BNE.w JL_0_D45E
000313E6 <AmiBlitz3.ab3@23168>    JSR get1bytemain
000313EA <AmiBlitz3.ab3@23180> BRA.w JL_0_D3C6
000313EE <AmiBlitz3.ab3@23183>   CMP.w #$7D,D0
000313F2 <AmiBlitz3.ab3@23184>    BNE.w JUMP_syntaxerr
000313F8 <AmiBlitz3.ab3@23187>   MOVEA.l currentfunction,A2
000313FA <AmiBlitz3.ab3@23188>   LSL.w #4,D5
000313FC <AmiBlitz3.ab3@23189>   OR.w D5,D6
00031400 <AmiBlitz3.ab3@23190>   MOVE.b D6,$4(A2)
00031402 <AmiBlitz3.ab3@23191>   LSR.w #4,D6
00031406 <AmiBlitz3.ab3@23192>    BEQ.w JL_0_D4C4
0003140C <AmiBlitz3.ab3@23193>   LEA stbuff,A0
0003140E <AmiBlitz3.ab3@23194>   SUBQ.w #1,D6
00031410 <AmiBlitz3.ab3@23197>     MOVE.w D6,D1                                           ;function stringpars
00031412 <AmiBlitz3.ab3@23198>     LSL.w #2,D1                                            ;stringsize was 2
00031414 <AmiBlitz3.ab3@23200>       LSL.w #1,d1
00031416 <AmiBlitz3.ab3@23201>       ADDQ.w #4,d1
00031418 <AmiBlitz3.ab3@23203>     ADDQ.w #8,D1
0003141E <AmiBlitz3.ab3@23204>     MOVE.w D1,funcst+2
00031424 <AmiBlitz3.ab3@23205>     MOVE.l funcst,D1
00031428 <AmiBlitz3.ab3@23206>     BSR.w writelong
0003142A <AmiBlitz3.ab3@23207>     MOVE.w (A0)+,D1
0003142E <AmiBlitz3.ab3@23208>     CMP.b #5,d1
00031432 <AmiBlitz3.ab3@23209>     BLE 's1
00031436 <AmiBlitz3.ab3@23210>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
0003143A <AmiBlitz3.ab3@23211>     BSR writeinstruction
0003143C <AmiBlitz3.ab3@23212>     MOVE.w D6,D1                                           ;function stringpars
0003143E <AmiBlitz3.ab3@23213>     LSL.w #2,D1                                            ;stringsize was 2
00031440 <AmiBlitz3.ab3@23215>       LSL.w #1,d1
00031442 <AmiBlitz3.ab3@23217>     ADDQ.w #8,D1
00031446 <AmiBlitz3.ab3@23218>     BSR writeword
0003144A <AmiBlitz3.ab3@23219>   BRA 's2
00031450 <AmiBlitz3.ab3@23222>     OR.w movedna3,D1
00031454 <AmiBlitz3.ab3@23223>      BSR.w writeword
0003145A <AmiBlitz3.ab3@23226>     MOVE.w (A0)+,least+2
00031460 <AmiBlitz3.ab3@23227>     MOVE.l least,D1
00031464 <AmiBlitz3.ab3@23228>      BSR.w writelong
00031466 <AmiBlitz3.ab3@23229>     MOVE.l A0,-(A7)
0003146A <AmiBlitz3.ab3@23230>     MOVE.w #$C700,D1
0003146E <AmiBlitz3.ab3@23231>      BSR.w Atokejsr
00031470 <AmiBlitz3.ab3@23232>     MOVEA.l (A7)+,A0
00031474 <AmiBlitz3.ab3@23233>   DBF D6,JL_0_D482
0003147A <AmiBlitz3.ab3@23236> JMP get1bytemain
00031480 <AmiBlitz3.ab3@23240>   MOVE.w dontwrite,D1
00031484 <AmiBlitz3.ab3@23241>    BNE.w JL_0_D4F6
0003148A <AmiBlitz3.ab3@23242>   MOVE.l destpointer,-(A7)
00031490 <AmiBlitz3.ab3@23243>   MOVE.l A0,destpointer
00031496 <AmiBlitz3.ab3@23244>   MOVE.l linksize,D1
0003149A <AmiBlitz3.ab3@23245>    BSR.w writelong                                         ;writefunctions jumppos
000314A0 <AmiBlitz3.ab3@23246>    TST.b fastfunc
000314A4 <AmiBlitz3.ab3@23247>    BNE 'skip
000314A8 <AmiBlitz3.ab3@23248>   MOVE.w #$CC00,D1
000314AC <AmiBlitz3.ab3@23249>    BSR.w tokejsr2                                          ;write clearvars
000314B2 <AmiBlitz3.ab3@23252>   MOVE.l (A7)+,destpointer
000314B4 <AmiBlitz3.ab3@23255> RTS
000314BA <AmiBlitz3.ab3@23259>   MOVEA.l currentfunction,A2
000314BE <AmiBlitz3.ab3@23260>   MOVEA.l $E(A2),A0
000314C2 <AmiBlitz3.ab3@23261>   MOVE.w $6(A2),D1
000314C6 <AmiBlitz3.ab3@23262>    BEQ.w JL_0_D538
000314CC <AmiBlitz3.ab3@23263>   MOVE.w D1,linksize+2
000314D0 <AmiBlitz3.ab3@23264>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
000314D4 <AmiBlitz3.ab3@23265>    BNE.w JL_0_D522
000314D6 <AmiBlitz3.ab3@23266>   ADDQ.w #6,A0
000314DA <AmiBlitz3.ab3@23267>   MOVE.l A0,$E(A2)
000314DE <AmiBlitz3.ab3@23268> BRA.w JL_0_D4C8
000314E0 <AmiBlitz3.ab3@23271>   MOVE.l A0,-(A7)
000314E4 <AmiBlitz3.ab3@23272>    BSR.w JL_0_D4C8
000314E6 <AmiBlitz3.ab3@23273>   MOVEA.l (A7)+,A0
000314EA <AmiBlitz3.ab3@23274>   LEA $A(A0),A0
000314F0 <AmiBlitz3.ab3@23275>   MOVEA.l currentfunction,A2
000314F4 <AmiBlitz3.ab3@23276> BRA.w JL_0_D54A
000314F8 <AmiBlitz3.ab3@23279>   MOVE.w $8(A2),D1
000314FC <AmiBlitz3.ab3@23280>    BNE.w JL_0_D54A
00031500 <AmiBlitz3.ab3@23281>   LEA $10(A0),A0
00031504 <AmiBlitz3.ab3@23282>   MOVE.l A0,$E(A2)
00031506 <AmiBlitz3.ab3@23283> RTS
0003150C <AmiBlitz3.ab3@23287> JMP errormsg_nofast
00031512 <AmiBlitz3.ab3@23290>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00031516 <AmiBlitz3.ab3@23291>    BNE.w JL_0_D580
0003151C <AmiBlitz3.ab3@23292>    TST.b fastfunc
00031520 <AmiBlitz3.ab3@23293>    BNE JUMP_errormsg_nofast
00031526 <AmiBlitz3.ab3@23294>   MOVE.l destpointer,-(A7)
0003152C <AmiBlitz3.ab3@23295>   MOVE.l A0,destpointer
00031530 <AmiBlitz3.ab3@23296>   MOVE.w #$4EB9,D1
00031534 <AmiBlitz3.ab3@23297>    BSR.w writeword
0003153A <AmiBlitz3.ab3@23298>    JSR addoff
0003153E <AmiBlitz3.ab3@23299>    BSR.w writelong
00031540 <AmiBlitz3.ab3@23300>   MOVEA.l (A7)+,A0
00031546 <AmiBlitz3.ab3@23301>   MOVEA.l destpointer,A1
00031548 <AmiBlitz3.ab3@23302>   MOVE.l A0,-(A1)
0003154E <AmiBlitz3.ab3@23303>   MOVE.l A0,destpointer
00031552 <AmiBlitz3.ab3@23306>   MOVE.w $8(A2),D4
00031556 <AmiBlitz3.ab3@23307>    BPL.w JL_0_D59E
0003155A <AmiBlitz3.ab3@23308>   MOVE.w #$C004,D1
0003155E <AmiBlitz3.ab3@23309>    BSR.w tokejsr2
00031564 <AmiBlitz3.ab3@23310>   MOVEA.l currentfunction,A2
00031568 <AmiBlitz3.ab3@23311>   MOVE.w $8(A2),D4
0003156C <AmiBlitz3.ab3@23312>   ANDI.w #$7FFF,D4
00031570 <AmiBlitz3.ab3@23315>    BEQ.w JL_0_D5E0
00031574 <AmiBlitz3.ab3@23316>   MOVE.b $4(A2),D1
00031578 <AmiBlitz3.ab3@23317>   ANDI.w #$F,D1
0003157A <AmiBlitz3.ab3@23318>   MOVE.w D1,-(A7)
0003157E <AmiBlitz3.ab3@23319>   CMP.w #$5,D1
00031582 <AmiBlitz3.ab3@23320>    BCS.w JL_0_D5BC
00031586 <AmiBlitz3.ab3@23321>   MOVE.w #$2F04,D1
0003158A <AmiBlitz3.ab3@23322>    BSR.w writeword
00031590 <AmiBlitz3.ab3@23325>   MOVE.l locdatast,D3
00031596 <AmiBlitz3.ab3@23326>    JSR datastart
0003159A <AmiBlitz3.ab3@23327>   MOVE.w #$C501,D1
0003159E <AmiBlitz3.ab3@23328>    BSR.w tokejsr2
000315A0 <AmiBlitz3.ab3@23329>   MOVE.w (A7)+,D1
000315A4 <AmiBlitz3.ab3@23330>   CMP.w #$5,D1
000315A8 <AmiBlitz3.ab3@23331>    BCS.w JL_0_D5E0
000315AC <AmiBlitz3.ab3@23332>   MOVE.w #$281F,D1
000315B0 <AmiBlitz3.ab3@23333>    BSR.w writeword
000315B4 <AmiBlitz3.ab3@23335>   MOVE.w #$4E75,D1
000315B8 <AmiBlitz3.ab3@23336> BRA.w writeword
000315BE <AmiBlitz3.ab3@23340>   LEA mwait,A0
000315C4 <AmiBlitz3.ab3@23341>   LEA mwaitf,A1
000315C8 <AmiBlitz3.ab3@23342> BRA.w pokecode
000315CE <AmiBlitz3.ab3@23346> JMP laberr
000315D2 <AmiBlitz3.ab3@23349>   CMP.w #$2E,D0
000315D6 <AmiBlitz3.ab3@23350>   BNE.w JUMP_syntaxerr
000315DC <AmiBlitz3.ab3@23351>   JSR getparameter2
000315E0 <AmiBlitz3.ab3@23352>   BEQ.w JUMP_laberr
000315E6 <AmiBlitz3.ab3@23353>   LEA newtypebase,A2
000315EC <AmiBlitz3.ab3@23354>   JSR findtype
000315F0 <AmiBlitz3.ab3@23355>   BNE.w JL_0_D626
000315F8 <AmiBlitz3.ab3@23356>   CMPI.l #MaxByte,$4(A2)
000315FC <AmiBlitz3.ab3@23357>   BNE.w JUMP_typeerr
00031600 <AmiBlitz3.ab3@23358> BRA.w JL_0_D62A
00031606 <AmiBlitz3.ab3@23361> JMP typeerr
0003160C <AmiBlitz3.ab3@23364>   JSR addlabel
00031610 <AmiBlitz3.ab3@23367>   CLR.l $4(A2)
00031616 <AmiBlitz3.ab3@23368>   MOVE.l A2,thistype
0003161C <AmiBlitz3.ab3@23369>   CLR.l prevtype
00031622 <AmiBlitz3.ab3@23370>   CLR.w typelen
00031628 <AmiBlitz3.ab3@23371>   CLR.w linemode
0003162E <AmiBlitz3.ab3@23372>   JSR reget
00031632 <AmiBlitz3.ab3@23373>   BNE.w typemode
00031634 <AmiBlitz3.ab3@23374> RTS
00031638 <AmiBlitz3.ab3@23377>   CMP.w #-$7FFE,D0
0003163C <AmiBlitz3.ab3@23378>   BEQ.w JL_0_D82E
00031646 <AmiBlitz3.ab3@23380>   MOVE.w oldqflag,instringon
0003164C <AmiBlitz3.ab3@23381>   MOVEA.l lastsourcepos,A5
0003164E <AmiBlitz3.ab3@23382>   MOVEQ.l #$00,D6
00031652 <AmiBlitz3.ab3@23383>   CMP.w #$2A,D0
00031656 <AmiBlitz3.ab3@23384>   BNE.w JL_0_D670
00031658 <AmiBlitz3.ab3@23385>   MOVEQ.l #$01,D6
0003165E <AmiBlitz3.ab3@23386>   JSR get1bytemain
00031662 <AmiBlitz3.ab3@23387> BRA.w JL_0_D67E
00031666 <AmiBlitz3.ab3@23390>   CMP.w #$40,D0
0003166A <AmiBlitz3.ab3@23391>   BNE.w JL_0_D67E
0003166C <AmiBlitz3.ab3@23392>   MOVEQ.l #$05,D6
00031672 <AmiBlitz3.ab3@23393>   JSR get1bytemain
00031678 <AmiBlitz3.ab3@23396>   MOVE.w D6,flagmask
0003167E <AmiBlitz3.ab3@23397>   JSR getparameter2
00031682 <AmiBlitz3.ab3@23398>   BEQ.w JUMP_syntaxerr
00031688 <AmiBlitz3.ab3@23399>   MOVEA.l thistype,A2
0003168A <AmiBlitz3.ab3@23400>   ADDQ.w #4,A2
00031690 <AmiBlitz3.ab3@23401>   JSR findvariable2
00031694 <AmiBlitz3.ab3@23402>   BEQ.w JUMP_dupofferr
0003169A <AmiBlitz3.ab3@23403>   JSR addlabel
0003169C <AmiBlitz3.ab3@23404>   MOVE.l A2,-(A7)
000316A0 <AmiBlitz3.ab3@23405>   CMP.w #$2E,D0
000316A4 <AmiBlitz3.ab3@23406>    BEQ.w JL_0_D6CE
000316A8 <AmiBlitz3.ab3@23407>   CMP.w #$24,D0
000316AC <AmiBlitz3.ab3@23408>    BNE.w JL_0_D6C0
000316B2 <AmiBlitz3.ab3@23409>   MOVE.l #newtype_string,D2
000316B8 <AmiBlitz3.ab3@23410>    JSR get1bytemain
000316BC <AmiBlitz3.ab3@23411> BRA.w JL_0_D710
000316C2 <AmiBlitz3.ab3@23414> JMP dupofferr
000316C8 <AmiBlitz3.ab3@23417>   MOVE.l prevtype,D2
000316CC <AmiBlitz3.ab3@23418>   BEQ.w JUMP_notypeerr
000316D0 <AmiBlitz3.ab3@23419> BRA.w JL_0_D706
000316D6 <AmiBlitz3.ab3@23422> JMP notypeerr
000316DC <AmiBlitz3.ab3@23425>   JSR getparameter2
000316E0 <AmiBlitz3.ab3@23426>    BEQ.w JUMP_syntaxerr
000316E6 <AmiBlitz3.ab3@23427>   LEA newtypebase,A2
000316EC <AmiBlitz3.ab3@23428>    JSR findtype
000316F0 <AmiBlitz3.ab3@23429>    BEQ.w JL_0_D704
000316F8 <AmiBlitz3.ab3@23430>   BTST #$0,flagmask+1
000316FC <AmiBlitz3.ab3@23431>    BEQ.w JUMP_notypeerr
00031702 <AmiBlitz3.ab3@23432>   JSR addlabel
0003170A <AmiBlitz3.ab3@23435>   MOVE.w linenumat+2,$8(A2)
00031712 <AmiBlitz3.ab3@23436>   MOVE.l #MaxByte,$4(A2)
00031714 <AmiBlitz3.ab3@23439>   MOVE.l A2,D2
0003171A <AmiBlitz3.ab3@23442>   CMP.l #newtype_byte,D2
0003171E <AmiBlitz3.ab3@23443>    BEQ.w JL_0_D71E
00031724 <AmiBlitz3.ab3@23446>   ADDQ.w #1,typelen
0003172C <AmiBlitz3.ab3@23447>   BCLR #$0,typelen+1
0003172E <AmiBlitz3.ab3@23450>   MOVEQ.l #$00,D3
00031730 <AmiBlitz3.ab3@23451>   MOVEA.l D2,A2
00031736 <AmiBlitz3.ab3@23452>   MOVE.l A2,prevtype
0003173A <AmiBlitz3.ab3@23453>   MOVE.w $8(A2),D3
0003173C <AmiBlitz3.ab3@23454>   MOVEA.l (A7)+,A2
00031740 <AmiBlitz3.ab3@23455>   MOVE.l D2,$A(A2)
00031742 <AmiBlitz3.ab3@23456>   MOVEQ.l #$00,D4
00031748 <AmiBlitz3.ab3@23457>   MOVE.w typelen,D4
0003174C <AmiBlitz3.ab3@23458>   MOVE.w D4,$4(A2)
00031754 <AmiBlitz3.ab3@23459>   BTST #$0,flagmask+1
00031758 <AmiBlitz3.ab3@23460>    BEQ.w JL_0_D74C
0003175A <AmiBlitz3.ab3@23461>   MOVEQ.l #$04,D3
0003175E <AmiBlitz3.ab3@23464>   CMP.w #$5B,D0
00031762 <AmiBlitz3.ab3@23465>    BNE.w JL_0_D782
00031766 <AmiBlitz3.ab3@23466>   MOVEM.l D3-D4/A2,-(A7)
0003176A <AmiBlitz3.ab3@23467>    BSR.w AJL_0_BF6E
0003176E <AmiBlitz3.ab3@23468>   CMP.w #$5D,D0
00031772 <AmiBlitz3.ab3@23469>    BNE.w JUMP_syntaxerr
00031774 <AmiBlitz3.ab3@23470>   TST.w D6
00031778 <AmiBlitz3.ab3@23471>    BNE.w JUMP_fpconerr
0003177A <AmiBlitz3.ab3@23472>   MOVE.l D3,D1
0003177E <AmiBlitz3.ab3@23473>   MOVEM.l (A7)+,D3-D4/A2
00031784 <AmiBlitz3.ab3@23474>    JSR get1bytemain
00031788 <AmiBlitz3.ab3@23475>   MOVE.w D1,$8(A2)
0003178C <AmiBlitz3.ab3@23476>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00031794 <AmiBlitz3.ab3@23477>   ORI.w #$2,flagmask
00031796 <AmiBlitz3.ab3@23480>   ADD.l D3,D4
0003179C <AmiBlitz3.ab3@23483>     CMP.l #65532,d4
000317A0 <AmiBlitz3.ab3@23488>   BCC JUMP_toolongerr
000317A8 <AmiBlitz3.ab3@23489>   MOVE.w flagmask,$6(A2)
000317AE <AmiBlitz3.ab3@23490>   MOVE.w D4,typelen
000317B0 <AmiBlitz3.ab3@23491> RTS
000317B6 <AmiBlitz3.ab3@23494> JMP badenderr
000317BC <AmiBlitz3.ab3@23497> JMP noiferr
000317C2 <AmiBlitz3.ab3@23500> JMP toolongerr
000317C8 <AmiBlitz3.ab3@23503> JMP fpconerr
000317CE <AmiBlitz3.ab3@23506>   MOVE.l firstiff,D0
000317D2 <AmiBlitz3.ab3@23507>    BEQ.w JUMP_noiferr
000317D4 <AmiBlitz3.ab3@23508>   MOVEA.l D0,A0
000317D8 <AmiBlitz3.ab3@23509>   MOVE.w $C(A0),D0
000317DC <AmiBlitz3.ab3@23510>   ANDI.w #$FF,D0
000317DE <AmiBlitz3.ab3@23511>   CMP.w D0,D1
000317E2 <AmiBlitz3.ab3@23512>    BNE.w JUMP_badenderr
000317E6 <AmiBlitz3.ab3@23515>   CMP.w #$1,D1
000317EA <AmiBlitz3.ab3@23516>   BNE.w JL_0_D7D8
000317EE <AmiBlitz3.ab3@23517>   MOVE.w #$6000,D1
000317F4 <AmiBlitz3.ab3@23520>     TST.b fast
000317F8 <AmiBlitz3.ab3@23521>     BEQ 'l1
000317FE <AmiBlitz3.ab3@23522>     OR.l #$ff,d1
00031802 <AmiBlitz3.ab3@23526>   BSR.w writeword
00031808 <AmiBlitz3.ab3@23527>   MOVEA.l destpointer,A1
0003180C <AmiBlitz3.ab3@23528>   MOVE.l $4(A0),D1
0003180E <AmiBlitz3.ab3@23529>   SUB.l A1,D1
00031814 <AmiBlitz3.ab3@23532>     TST.b fast
00031818 <AmiBlitz3.ab3@23533>     BEQ 'l2
0003181C <AmiBlitz3.ab3@23534>     BSR writelong
00031820 <AmiBlitz3.ab3@23535>   BRA JL_0_D7D8
00031824 <AmiBlitz3.ab3@23539>   BSR.w writeword
00031828 <AmiBlitz3.ab3@23542>   MOVEA.l $8(A0),A1                                        ;write if branch destination
0003182E <AmiBlitz3.ab3@23543>   MOVE.l destpointer,D1
00031830 <AmiBlitz3.ab3@23544>   SUB.l A1,D1
00031836 <AmiBlitz3.ab3@23547>     TST.b fast
0003183A <AmiBlitz3.ab3@23548>     BEQ 'l1
0003183C <AmiBlitz3.ab3@23549>     ADDQ.l #4,D1
00031842 <AmiBlitz3.ab3@23550>     MOVE.w dontwrite,D0
00031846 <AmiBlitz3.ab3@23551>     BNE.w JL_0_D7FE
0003184A <AmiBlitz3.ab3@23552>     MOVE.l d1,-$4(a1)
0003184E <AmiBlitz3.ab3@23553>   BRA JL_0_D7FE
00031850 <AmiBlitz3.ab3@23557>   ADDQ.l #2,d1
00031856 <AmiBlitz3.ab3@23558>   TST.w dontwrite
0003185A <AmiBlitz3.ab3@23559>   BNE JL_0_D7FE
00031860 <AmiBlitz3.ab3@23560>   CMP.l #MinWordSgnd,D1
00031864 <AmiBlitz3.ab3@23561>   BCC.w JUMP_bigiferr
00031868 <AmiBlitz3.ab3@23562>   MOVE.w D1,-$2(A1)
0003186A <AmiBlitz3.ab3@23565> RTS
00031870 <AmiBlitz3.ab3@23568> JMP bigiferr
0003187A <AmiBlitz3.ab3@23573>   MOVE.w oldqflag,instringon
00031880 <AmiBlitz3.ab3@23574>   MOVEA.l lastsourcepos,A5
00031882 <AmiBlitz3.ab3@23577>   MOVEQ.l #$01,D1
00031886 <AmiBlitz3.ab3@23578> BRA.w JL_0_D810
00031890 <AmiBlitz3.ab3@23582>   MOVE.w oldqflag,instringon
00031896 <AmiBlitz3.ab3@23583>   MOVEA.l lastsourcepos,A5
00031898 <AmiBlitz3.ab3@23586>   MOVEQ.l #$00,D1
0003189C <AmiBlitz3.ab3@23589>   BSR.w JL_0_D79E
000318A0 <AmiBlitz3.ab3@23590>   BSR.w AJL_0_D81C
000318A6 <AmiBlitz3.ab3@23591> JMP get1bytemain
000318AC <AmiBlitz3.ab3@23594>   MOVE.l (A0),firstiff
000318AE <AmiBlitz3.ab3@23595>   MOVEA.l A0,A1
000318B0 <AmiBlitz3.ab3@23596>   MOVEQ.l #$0E,D0
000318B6 <AmiBlitz3.ab3@23597>   MOVEA.l _execbase,A6
000318BC <AmiBlitz3.ab3@23598>   MOVE.l mempool,a0
000318C0 <AmiBlitz3.ab3@23599> JMP _FreePooled(A6)
000318C6 <AmiBlitz3.ab3@23603>   JSR get1bytemain
000318CA <AmiBlitz3.ab3@23606>   BEQ.w JL_0_D980
000318D2 <AmiBlitz3.ab3@23607>   CMP.l #"noa7",-1(a5)
000318D6 <AmiBlitz3.ab3@23608>   BNE 'l1
000318DC <AmiBlitz3.ab3@23609>   JSR get1bytemain
000318E2 <AmiBlitz3.ab3@23610>   JSR get1bytemain
000318E8 <AmiBlitz3.ab3@23611>   JSR get1bytemain
000318F0 <AmiBlitz3.ab3@23612>   MOVE.w #$3a,lastchar
000318F4 <AmiBlitz3.ab3@23613> BRA JL_0_D980
000318FA <AmiBlitz3.ab3@23616>   CMP.w #"d0",-1(a5)
000318FE <AmiBlitz3.ab3@23617>   BNE 'l2
00031906 <AmiBlitz3.ab3@23618>   MOVE.b #1,returncode
0003190C <AmiBlitz3.ab3@23619>   CLR.w lastchar
00031910 <AmiBlitz3.ab3@23620> BRA JL_0_D980
00031914 <AmiBlitz3.ab3@23623>   CMP.w #$80d7,d0
00031918 <AmiBlitz3.ab3@23624>   BNE JL_0_D836
0003191E <AmiBlitz3.ab3@23625>   JSR skiprest
00031920 <AmiBlitz3.ab3@23626> RTS
00031924 <AmiBlitz3.ab3@23629>   BSR.w JL_0_D844
0003192A <AmiBlitz3.ab3@23630>   JSR reget
0003192E <AmiBlitz3.ab3@23631>   BNE.w JL_0_D836
00031930 <AmiBlitz3.ab3@23632> RTS
00031934 <AmiBlitz3.ab3@23635>   CMP.w #-$7FFF,D0
00031938 <AmiBlitz3.ab3@23636>    BNE.w JL_0_D87E
0003193E <AmiBlitz3.ab3@23637>   MOVE.w linemode,D1
00031942 <AmiBlitz3.ab3@23638>    BNE.w JUMP_modeerr
00031948 <AmiBlitz3.ab3@23639>   ADDQ.w #1,typelen
00031950 <AmiBlitz3.ab3@23640>   BCLR #$0,typelen+1
00031956 <AmiBlitz3.ab3@23641>   MOVEA.l thistype,A0
0003195E <AmiBlitz3.ab3@23642>   MOVE.w typelen,$8(A0)
00031966 <AmiBlitz3.ab3@23643>   MOVE.w #$FFFF,linemode
0003196C <AmiBlitz3.ab3@23644> JMP get1bytemain
00031972 <AmiBlitz3.ab3@23647> JMP modeerr
00031976 <AmiBlitz3.ab3@23650>   CMP.w #-$7FF5,D0
0003197A <AmiBlitz3.ab3@23651>    BEQ.w JL_0_D80E
0003197E <AmiBlitz3.ab3@23652>   CMP.w #-$7FF4,D0
00031982 <AmiBlitz3.ab3@23653>    BEQ.w JL_0_D804
00031986 <AmiBlitz3.ab3@23654>   CMP.w #-$7FF8,D0
0003198A <AmiBlitz3.ab3@23655>    BNE.w JL_0_D89A
0003198E <AmiBlitz3.ab3@23658> BRA.w JL_0_D9E8
00031994 <AmiBlitz3.ab3@23661> JMP interr3
00031998 <AmiBlitz3.ab3@23664>   CMP.w #-$7FF7,D0
0003199C <AmiBlitz3.ab3@23665>    BNE.w JL_0_D8C8
000319A2 <AmiBlitz3.ab3@23666>    TST.b fpu
000319A6 <AmiBlitz3.ab3@23667>    BEQ 'nof
000319AC <AmiBlitz3.ab3@23668>    MOVEA.l currentfunction,A0
000319B2 <AmiBlitz3.ab3@23669>    CMP.l #0,a0
000319B6 <AmiBlitz3.ab3@23670>    BEQ 'nof
000319BC <AmiBlitz3.ab3@23671>    CMP.b #5,$5(a0)
000319C0 <AmiBlitz3.ab3@23672>     BNE 'nof
000319C6 <AmiBlitz3.ab3@23673>    MOVE.l #$f23c5000,d1
000319CA <AmiBlitz3.ab3@23674>    BSR writelong
000319CE <AmiBlitz3.ab3@23675>    MOVE.w #0,d1
000319D2 <AmiBlitz3.ab3@23676>    BSR writeword
000319D6 <AmiBlitz3.ab3@23679>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
000319DA <AmiBlitz3.ab3@23680>    BSR.w writeword
000319E0 <AmiBlitz3.ab3@23681>   MOVEA.l currentfunction,A0
000319E6 <AmiBlitz3.ab3@23682>   CMP.l #0,a0
000319EA <AmiBlitz3.ab3@23683>   BEQ JL_0_D896
000319F0 <AmiBlitz3.ab3@23684>   MOVE.l destpointer,d1
000319F4 <AmiBlitz3.ab3@23685>   SUB.l $e(a0),d1
000319F8 <AmiBlitz3.ab3@23686>   MOVE.l d1,isfunc+1(a0)
000319FE <AmiBlitz3.ab3@23687>   CMPI.b #$7,$5(A0)
00031A02 <AmiBlitz3.ab3@23688>    BNE.w JL_0_D896
00031A08 <AmiBlitz3.ab3@23689>   MOVE.w putstlen,D1
00031A0C <AmiBlitz3.ab3@23690>    BSR.w writeword
00031A10 <AmiBlitz3.ab3@23691> BRA.w JL_0_D896
00031A16 <AmiBlitz3.ab3@23694> JMP interr
00031A1A <AmiBlitz3.ab3@23697>  CMP.w #-$7FD0,D0
00031A1E <AmiBlitz3.ab3@23698>    BNE.w JL_0_D966
00031A24 <AmiBlitz3.ab3@23699>   MOVE.w proceduremode,D1
00031A28 <AmiBlitz3.ab3@23700>    BNE.w JUMP_interr3
00031A2E <AmiBlitz3.ab3@23701>   TST.b debugmode
00031A32 <AmiBlitz3.ab3@23702>    BEQ.w JL_0_D90A
00031A34 <AmiBlitz3.ab3@23703>   MOVEQ.l #$03,D1
00031A3A <AmiBlitz3.ab3@23704>    JSR writetrap
00031A40 <AmiBlitz3.ab3@23705>   MOVE.w dontwrite,D1
00031A44 <AmiBlitz3.ab3@23706>    BNE.w JL_0_D90A
00031A4A <AmiBlitz3.ab3@23707>   MOVEA.l intcleanat,A0
00031A50 <AmiBlitz3.ab3@23708>   MOVE.l destpointer,(A0)
00031A54 <AmiBlitz3.ab3@23709>   MOVE.w #$C30C,D1
00031A58 <AmiBlitz3.ab3@23710>    BSR.w Atokejsr
00031A5E <AmiBlitz3.ab3@23713>   MOVE.w intstring,D1
00031A62 <AmiBlitz3.ab3@23714>    BEQ.w JUMP_interr
00031A66 <AmiBlitz3.ab3@23715>    BPL.w JL_0_D934
00031A6C <AmiBlitz3.ab3@23716>   MOVE.w intlevel,D1
00031A70 <AmiBlitz3.ab3@23717>   ORI.w #$7200,D1
00031A74 <AmiBlitz3.ab3@23718>    BSR.w writeword
00031A78 <AmiBlitz3.ab3@23719>   MOVE.w #$C103,D1
00031A7C <AmiBlitz3.ab3@23720>    BSR.w Atokejsr
00031A82 <AmiBlitz3.ab3@23721>   CLR.w intlevel
00031A88 <AmiBlitz3.ab3@23724>  CLR.w intstring
00031A8E <AmiBlitz3.ab3@23725>   MOVE.l intfin,D1
00031A92 <AmiBlitz3.ab3@23726>    BSR.w writelong
00031A98 <AmiBlitz3.ab3@23727>   MOVE.l #$70004E75,D1
00031A9C <AmiBlitz3.ab3@23728>    BSR.w writelong
00031AA2 <AmiBlitz3.ab3@23729>   MOVE.w dontwrite,D1
00031AA6 <AmiBlitz3.ab3@23730>    BNE.w JL_0_D962
00031AAC <AmiBlitz3.ab3@23731>   MOVEA.l intjmpat,A0
00031AB0 <AmiBlitz3.ab3@23732>   MOVE.l destpointer(PC),(A0)
00031AB6 <AmiBlitz3.ab3@23735> JMP get1bytemain
00031ABA <AmiBlitz3.ab3@23739>   CMP.w #-$7FF2,D0
00031ABE <AmiBlitz3.ab3@23740>    BEQ.w doendsel
00031AC2 <AmiBlitz3.ab3@23741>   CMP.w #-$7F4C,D0
00031AC6 <AmiBlitz3.ab3@23742>    BNE.w JL_0_D97C
00031ACC <AmiBlitz3.ab3@23743> JMP doendseterr
00031AD2 <AmiBlitz3.ab3@23747> JMP syntaxerr
00031AD8 <AmiBlitz3.ab3@23751>   TST.w dirmode
00031ADC <AmiBlitz3.ab3@23752>   BNE.w JUMP_baddirerr
00031AE0 <AmiBlitz3.ab3@23753>   MOVE.w #$C800,D1
00031AE6 <AmiBlitz3.ab3@23754>   JSR Atokejsr                                            ;end
00031AEE <AmiBlitz3.ab3@23755>   CMP.l #"noa7",-4(a5)
00031AF2 <AmiBlitz3.ab3@23756>   BNE 'l10
00031AF8 <AmiBlitz3.ab3@23757>   TST.w dontwrite
00031AFC <AmiBlitz3.ab3@23758>   BNE 'l10
00031B02 <AmiBlitz3.ab3@23759>   MOVE.l destpointer,d1
00031B04 <AmiBlitz3.ab3@23760>   SUBQ.l #4,d1
00031B06 <AmiBlitz3.ab3@23761>   MOVE.l a0,-(a7)
00031B08 <AmiBlitz3.ab3@23762>   MOVE.l d1,a0
00031B0A <AmiBlitz3.ab3@23763>   MOVE.l (a0),a0
00031B10 <AmiBlitz3.ab3@23764>   MOVE.l #$60000002,(a0)+
00031B14 <AmiBlitz3.ab3@23765>   MOVE.w #$588f,(a0)
00031B16 <AmiBlitz3.ab3@23766>   MOVE.l (a7)+,a0
00031B18 <AmiBlitz3.ab3@23769> RTS
00031B1E <AmiBlitz3.ab3@23773>   TST.w dirmode                                            ;stop
00031B22 <AmiBlitz3.ab3@23774>   BNE.w JUMP_baddirerr
00031B24 <AmiBlitz3.ab3@23775>   MOVE.w d0,d1
00031B28 <AmiBlitz3.ab3@23776>   BEQ 'l10
00031B2C <AmiBlitz3.ab3@23777>   CMP.b #$3a,d0
00031B30 <AmiBlitz3.ab3@23778>   BEQ 'l10
00031B36 <AmiBlitz3.ab3@23779>   JSR get1bytemain
00031B3C <AmiBlitz3.ab3@23782>   TST.b debugmode
00031B40 <AmiBlitz3.ab3@23783>   BEQ.w newstop
00031B44 <AmiBlitz3.ab3@23784>   MOVE.w #$D501,D1
00031B48 <AmiBlitz3.ab3@23785> BRA.w Atokejsr
00031B4A <AmiBlitz3.ab3@23789>     RTS
00031B4C <AmiBlitz3.ab3@23791>   MOVE.w d1,d0
00031B50 <AmiBlitz3.ab3@23792>   BEQ 'l10
00031B54 <AmiBlitz3.ab3@23793>   CMP.b #$3a,d0
00031B58 <AmiBlitz3.ab3@23794>   BEQ 'l10
00031B5C <AmiBlitz3.ab3@23795>   SUB.b #$30,d0
00031B60 <AmiBlitz3.ab3@23796>   MOVE.w #$4e40,d1
00031B64 <AmiBlitz3.ab3@23797> BRA 'l11
00031B68 <AmiBlitz3.ab3@23800>   MOVE.w #$4e4a,d1
00031B6C <AmiBlitz3.ab3@23801> BRA writeword
00031B6E <AmiBlitz3.ab3@23804>   ADD.b d0,d1
00031B72 <AmiBlitz3.ab3@23805> BRA writeword
00031B78 <AmiBlitz3.ab3@23809> JMP badconterr
00031B7C <AmiBlitz3.ab3@23812>   MOVE.w #$4E71,D1
00031B80 <AmiBlitz3.ab3@23813> BRA.w writeword
00031B86 <AmiBlitz3.ab3@23816>   MOVEA.l firstfor,A2
00031B8C <AmiBlitz3.ab3@23817>   CLR.l firstfor
00031B92 <AmiBlitz3.ab3@23818>   MOVEA.l _execbase,A6
00031B96 <AmiBlitz3.ab3@23821>   CMPA.w #$0,A2
00031B9A <AmiBlitz3.ab3@23822>   BEQ.w JL_0_D9E6
00031B9C <AmiBlitz3.ab3@23823>   MOVEA.l A2,A1
00031B9E <AmiBlitz3.ab3@23824>   MOVEA.l (A1),A2
00031BA0 <AmiBlitz3.ab3@23825>   MOVEQ.l #$00,D0
00031BA6 <AmiBlitz3.ab3@23826>   MOVE.l mempool2,a0
00031BAA <AmiBlitz3.ab3@23827>   MOVE.b $10(A1),D0
00031BAE <AmiBlitz3.ab3@23828>   JSR _FreePooled(A6)                                      ;freememfor_error
00031BB2 <AmiBlitz3.ab3@23829> BRA.w JL_0_D9CC
00031BB4 <AmiBlitz3.ab3@23832> RTS
00031BBA <AmiBlitz3.ab3@23836> JMP badpenderr
00031BC0 <AmiBlitz3.ab3@23842>   MOVE.w proceduremode,D1
00031BC4 <AmiBlitz3.ab3@23843>    BEQ.w JUMP_badpenderr
00031BCA <AmiBlitz3.ab3@23845>   MOVE.w dontwrite,D1
00031BCE <AmiBlitz3.ab3@23846>    BNE.w JL_0_DA1A
00031BD4 <AmiBlitz3.ab3@23847>   MOVEA.l firstpend,A2
00031BD8 <AmiBlitz3.ab3@23850>   CMPA.w #$0,A2
00031BDC <AmiBlitz3.ab3@23851>    BEQ.w JL_0_DA1A
00031BE0 <AmiBlitz3.ab3@23852>   MOVEA.l $4(A2),A0
00031BE6 <AmiBlitz3.ab3@23853>   MOVE.l destpointer,(A0)
00031BE8 <AmiBlitz3.ab3@23854>   MOVEA.l (A2),A2
00031BEC <AmiBlitz3.ab3@23855> BRA.w JL_0_DA02
00031BF2 <AmiBlitz3.ab3@23858>   TST.b debugmode
00031BF6 <AmiBlitz3.ab3@23859>    BEQ.b JL_0_DA2A
00031BF8 <AmiBlitz3.ab3@23860>   MOVEQ.l #$05,D1
00031BFE <AmiBlitz3.ab3@23861>   JSR writetrap
00031C04 <AmiBlitz3.ab3@23864>   MOVEA.l firstlocal,A2                                    ;firstlocal
00031C0A <AmiBlitz3.ab3@23865>   JSR calcstatic2b                                           ;calcstatic
00031C10 <AmiBlitz3.ab3@23866>   MOVEA.l currentfunction,A0
00031C16 <AmiBlitz3.ab3@23867>   MOVE.l destpointer,d1
00031C1A <AmiBlitz3.ab3@23868>   SUB.l $e(a0),d1
00031C1E <AmiBlitz3.ab3@23869>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00031C22 <AmiBlitz3.ab3@23870>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00031C28 <AmiBlitz3.ab3@23871>   MOVE.l D3,locdatast
00031C2E <AmiBlitz3.ab3@23872>   MOVEA.l tempvm,A1
00031C34 <AmiBlitz3.ab3@23873>  CLR.b infunctioncode
00031C3A <AmiBlitz3.ab3@23874>   MOVE.l firstiffstore,d1
00031C40 <AmiBlitz3.ab3@23875>   CMP.l firstiff,d1
00031C44 <AmiBlitz3.ab3@23876>   BNE JUMP_noenderr
00031C48 <AmiBlitz3.ab3@23877>   TST.w $C(A1)                                             ;dim
00031C4C <AmiBlitz3.ab3@23878>    BPL.w JL_0_DA64
00031C52 <AmiBlitz3.ab3@23879>  BSET #$7,$8(A0)
00031C56 <AmiBlitz3.ab3@23880>   MOVE.w #$C005,D1
00031C5A <AmiBlitz3.ab3@23881>    BSR.w tokejsr2                                          ;writefreememstatement
00031C5E <AmiBlitz3.ab3@23882> BRA.w JL_0_DA6C
00031C64 <AmiBlitz3.ab3@23885> JMP noenderr
00031C6C <AmiBlitz3.ab3@23888>   MOVE.w memlibstat,$C(A1)
00031C72 <AmiBlitz3.ab3@23891>   MOVEA.l currentfunction,A0
00031C76 <AmiBlitz3.ab3@23892>   MOVE.l $E(A0),-(A7)
00031C7E <AmiBlitz3.ab3@23893>   MOVE.w locvaroff,$6(A0)
00031C84 <AmiBlitz3.ab3@23894>   BCLR #$1,$7(A0)
00031C8A <AmiBlitz3.ab3@23895>   BCLR #$0,$7(A0)
00031C90 <AmiBlitz3.ab3@23896>   CMPI.b #$7,$5(A0)
00031C94 <AmiBlitz3.ab3@23897>    BNE.w JL_0_DA9E
00031C9A <AmiBlitz3.ab3@23898>   MOVE.w getstlen,D1
00031C9E <AmiBlitz3.ab3@23899>    BSR.w writeword
00031CA2 <AmiBlitz3.ab3@23902>   TST.w $6(A0)
00031CA6 <AmiBlitz3.ab3@23903>    BEQ.w JL_0_DAB8
00031CAA <AmiBlitz3.ab3@23904>   MOVE.w #$FC7B,D1
00031CB0 <AmiBlitz3.ab3@23905>    JSR uselib
00031CB6 <AmiBlitz3.ab3@23906>   MOVE.w unlinka4,D1
00031CBA <AmiBlitz3.ab3@23907>    BSR.w writeword
00031CC0 <AmiBlitz3.ab3@23910>   MOVEA.l currentfunction,A0
00031CC2 <AmiBlitz3.ab3@23911>   MOVEQ.l #$00,D1
00031CC6 <AmiBlitz3.ab3@23912>   MOVE.b $4(A0),D1
00031CC8 <AmiBlitz3.ab3@23913>   LSR.w #4,D1
00031CCC <AmiBlitz3.ab3@23914>    BEQ.w JL_0_DB24
00031CCE <AmiBlitz3.ab3@23916>      LSL.w #1,d1
00031CD2 <AmiBlitz3.ab3@23918>   CMP.w #$1,D1
00031CD6 <AmiBlitz3.ab3@23919>    BNE.w JL_0_DAE0
00031CDC <AmiBlitz3.ab3@23920>   MOVE.w fix1,D1
00031CE0 <AmiBlitz3.ab3@23921>    BSR.w writeword
00031CE4 <AmiBlitz3.ab3@23922> BRA.w JL_0_DB24
00031CE6 <AmiBlitz3.ab3@23925>   LSL.w #2,D1
00031CE8 <AmiBlitz3.ab3@23926>   MOVE.w D1,-(A7)
00031CEE <AmiBlitz3.ab3@23927>   MOVE.w D1,moverts+2
00031CF4 <AmiBlitz3.ab3@23928>   MOVE.l moverts,D1
00031CFA <AmiBlitz3.ab3@23929>    JSR writelong
00031CFC <AmiBlitz3.ab3@23930>   MOVE.w (A7)+,D1
00031D00 <AmiBlitz3.ab3@23931>   CMP.w #$8,D1
00031D04 <AmiBlitz3.ab3@23932>    BHI.w JL_0_DB14
00031D08 <AmiBlitz3.ab3@23933>   ANDI.w #$7,D1
00031D0A <AmiBlitz3.ab3@23934>   LSL.w #8,D1
00031D0C <AmiBlitz3.ab3@23935>   LSL.w #1,D1
00031D12 <AmiBlitz3.ab3@23936>   OR.w fixq,D1
00031D18 <AmiBlitz3.ab3@23937>    JSR writeword
00031D1C <AmiBlitz3.ab3@23938> BRA.w JL_0_DB24
00031D22 <AmiBlitz3.ab3@23942>    MOVE.w D1,fixstack+2
00031D28 <AmiBlitz3.ab3@23943>   MOVE.l fixstack,D1
00031D2E <AmiBlitz3.ab3@23944>    JSR writelong
00031D32 <AmiBlitz3.ab3@23947>    BSR.w JL_0_D2CA
00031D36 <AmiBlitz3.ab3@23948>    BSR.w JL_0_D4F8
00031D38 <AmiBlitz3.ab3@23949>   MOVEA.l (A7)+,A0
00031D3E <AmiBlitz3.ab3@23950>   MOVE.w dontwrite,D1
00031D42 <AmiBlitz3.ab3@23951>    BNE.w JL_0_DB3E
00031D48 <AmiBlitz3.ab3@23952>   MOVE.l destpointer,-(A0)
00031D4E <AmiBlitz3.ab3@23955>   CLR.w proceduremode
00031D54 <AmiBlitz3.ab3@23956>   CLR.l currentfunction
00031D5A <AmiBlitz3.ab3@23957>   CLR.w procnum
00031D5E <AmiBlitz3.ab3@23958>    BSR.w JL_0_DB5C
00031D64 <AmiBlitz3.ab3@23959>    JSR freepends
00031D6A <AmiBlitz3.ab3@23960> JMP get1bytemain
00031D6C <AmiBlitz3.ab3@23963>   MOVEQ.l #$0C,D0
00031D6E <AmiBlitz3.ab3@23964>   MOVEQ.l #$01,D1
00031D74 <AmiBlitz3.ab3@23965>   MOVEA.l _execbase,A6
00031D7A <AmiBlitz3.ab3@23967>   MOVE.l mempool,a0
00031D7E <AmiBlitz3.ab3@23968>   JSR _AllocPooled(a6)
00031D80 <AmiBlitz3.ab3@23969>   MOVEA.l D0,A0
00031D86 <AmiBlitz3.ab3@23970>   MOVE.l alllocals,(A0)
00031D8C <AmiBlitz3.ab3@23971>   MOVE.l A0,alllocals
00031D92 <AmiBlitz3.ab3@23972>   MOVE.l firstlocal,D0
00031D98 <AmiBlitz3.ab3@23973>   CLR.l firstlocal
00031D9C <AmiBlitz3.ab3@23974>   MOVE.l D0,$4(A0)
00031DA2 <AmiBlitz3.ab3@23975>   MOVE.l firstglob,D1
00031DA8 <AmiBlitz3.ab3@23976>   CLR.l firstglob
00031DAC <AmiBlitz3.ab3@23977>   MOVE.l D1,$8(A0)
00031DB2 <AmiBlitz3.ab3@23978>   TST.b debugmode
00031DB6 <AmiBlitz3.ab3@23979>    BEQ.b JL_0_DBB0
00031DBC <AmiBlitz3.ab3@23980>   TST.w dontwrite
00031DC0 <AmiBlitz3.ab3@23981>    BNE.b JL_0_DBB0
00031DC4 <AmiBlitz3.ab3@23982>   MOVEA.l proclocals(PC),A0
00031DC6 <AmiBlitz3.ab3@23983>   MOVE.l D0,(A0)+
00031DC8 <AmiBlitz3.ab3@23984>   MOVE.l D1,(A0)
00031DCA <AmiBlitz3.ab3@23987> RTS
00031DD0 <AmiBlitz3.ab3@23990> JMP baddirerr
00031DD6 <AmiBlitz3.ab3@23994>   TST.w dirmode
00031DDA <AmiBlitz3.ab3@23995>    BNE.w JUMP_baddirerr
00031DE0 <AmiBlitz3.ab3@23996>   MOVE.l firstfor,D1
00031DE4 <AmiBlitz3.ab3@23997>    BEQ.w JUMP_noforerr
00031DEA <AmiBlitz3.ab3@23998>   JSR reget
00031DEE <AmiBlitz3.ab3@23999>    BEQ.w JL_0_DC18
00031DF2 <AmiBlitz3.ab3@24002>   BSR.w getparameter
00031DF6 <AmiBlitz3.ab3@24003>   MOVEA.l firstfor(PC),A2
00031DF8 <AmiBlitz3.ab3@24004>   MOVEQ.l #$00,D1
00031DFC <AmiBlitz3.ab3@24005>   MOVE.b $10(A2),D1
00031E00 <AmiBlitz3.ab3@24006>   SUBI.w #$12,D1
00031E02 <AmiBlitz3.ab3@24007>   CMP.w D1,D2
00031E06 <AmiBlitz3.ab3@24008>    BNE.w JUMP_noforerr
00031E0A <AmiBlitz3.ab3@24009>   LEA ptr_parameterstore(PC),A0
00031E0E <AmiBlitz3.ab3@24010>   LEA $11(A2),A1
00031E10 <AmiBlitz3.ab3@24011>   SUBQ.w #1,D2
00031E12 <AmiBlitz3.ab3@24014>     CMPM.b (A0)+,(A1)+
00031E16 <AmiBlitz3.ab3@24015>     BNE.w JUMP_noforerr
00031E1A <AmiBlitz3.ab3@24016>   DBF D2,JL_0_DBF0
00031E1E <AmiBlitz3.ab3@24018>    BSR.w JL_0_DC1A
00031E24 <AmiBlitz3.ab3@24019>    JSR reget
00031E28 <AmiBlitz3.ab3@24020>    BEQ.w JL_0_DC16
00031E2C <AmiBlitz3.ab3@24021>   CMP.w #$2C,D0
00031E30 <AmiBlitz3.ab3@24022>    BNE.w JUMP_syntaxerr
00031E36 <AmiBlitz3.ab3@24023>    JSR get1bytemain
00031E3A <AmiBlitz3.ab3@24024> BRA.w JL_0_DBCE
00031E40 <AmiBlitz3.ab3@24027> JMP noforerr
00031E42 <AmiBlitz3.ab3@24030> RTS
00031E46 <AmiBlitz3.ab3@24034>   MOVE.l 8(a7),a2
00031E4A <AmiBlitz3.ab3@24035>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00031E4E <AmiBlitz3.ab3@24036>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00031E52 <AmiBlitz3.ab3@24037>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00031E54 <AmiBlitz3.ab3@24041>   MOVEA.l D1,A2
00031E5A <AmiBlitz3.ab3@24044>   JSR popnext                                           ;error checking for next.
00031E5E <AmiBlitz3.ab3@24045>   MOVE.w $C(A2),D0
00031E64 <AmiBlitz3.ab3@24046>   LEA nextb,A0
00031E6A <AmiBlitz3.ab3@24047>   LEA nextbf,A1
00031E6E <AmiBlitz3.ab3@24048>   CMP.w #$1,D0
00031E72 <AmiBlitz3.ab3@24049>    BEQ.w JL_0_DC74
00031E78 <AmiBlitz3.ab3@24050>   LEA nextw,A0
00031E7E <AmiBlitz3.ab3@24051>   LEA nextwf,A1
00031E82 <AmiBlitz3.ab3@24052>   CMP.w #$2,D0
00031E86 <AmiBlitz3.ab3@24053>    BEQ.w JL_0_DC74
00031E8C <AmiBlitz3.ab3@24054>   LEA nextl,A0
00031E92 <AmiBlitz3.ab3@24055>   LEA nextlf,A1
00031E96 <AmiBlitz3.ab3@24056>   CMP.w #$5,D0
00031E9A <AmiBlitz3.ab3@24057>    BNE.w JL_0_DC74
00031EA0 <AmiBlitz3.ab3@24058>    TST.b fpu
00031EA4 <AmiBlitz3.ab3@24059>    BEQ 'old
00031EAA <AmiBlitz3.ab3@24060>    LEA fpu2dats,a0                                         ;fpu next code
00031EB0 <AmiBlitz3.ab3@24061>    LEA fpu2date,a1
00031EB4 <AmiBlitz3.ab3@24062> BRA JL_0_DC74
00031EB8 <AmiBlitz3.ab3@24065>   MOVE.w #$C900,D1
00031EBC <AmiBlitz3.ab3@24066>    BSR.w Atokejsr
00031EC2 <AmiBlitz3.ab3@24067>   LEA nextf,A0
00031EC8 <AmiBlitz3.ab3@24068>   LEA nextff,A1
00031ECE <AmiBlitz3.ab3@24071>   JSR pokecode
00031ED4 <AmiBlitz3.ab3@24072>     TST.b fast                                             ;fast for next deactivate
00031ED8 <AmiBlitz3.ab3@24073> BRA 'l1
00031EDE <AmiBlitz3.ab3@24075>     TST.b onestep
00031EE2 <AmiBlitz3.ab3@24076>     BEQ 'l1
00031EE8 <AmiBlitz3.ab3@24077>     CLR.b onestep
00031EEE <AmiBlitz3.ab3@24078>     SUBQ.l #4,destpointer
00031EF2 <AmiBlitz3.ab3@24079>     MOVE.w #$5292,d1
00031EF8 <AmiBlitz3.ab3@24080>     JSR writeword
00031EFC <AmiBlitz3.ab3@24083>   MOVE.l JL_0_DCF4(PC),D1
00031F02 <AmiBlitz3.ab3@24084>    JSR writelong
00031F08 <AmiBlitz3.ab3@24085>   MOVEA.l firstfor,A2
00031F0E <AmiBlitz3.ab3@24086>   MOVE.l (A2),firstfor
00031F12 <AmiBlitz3.ab3@24087>   MOVEA.l $8(A2),A0
00031F18 <AmiBlitz3.ab3@24088>   MOVEA.l destpointer,A1
00031F1A <AmiBlitz3.ab3@24089>   MOVE.l A1,D1
00031F1C <AmiBlitz3.ab3@24090>   SUB.l A0,D1
00031F1E <AmiBlitz3.ab3@24091>   ADDQ.l #2,D1
00031F24 <AmiBlitz3.ab3@24092>   CMP.l #MinWordSgnd,D1
00031F28 <AmiBlitz3.ab3@24093>    BCC.w JUMP_bigforerr
00031F2E <AmiBlitz3.ab3@24094>   TST.w dontwrite
00031F32 <AmiBlitz3.ab3@24095>    BNE.w JL_0_DCB4
00031F36 <AmiBlitz3.ab3@24096>   MOVE.w D1,-$2(A0)
00031F38 <AmiBlitz3.ab3@24099>   MOVE.l A1,D1
00031F3C <AmiBlitz3.ab3@24100>   SUB.l $4(A2),D1
00031F3E <AmiBlitz3.ab3@24101>   SUBQ.l #6,D1
00031F44 <AmiBlitz3.ab3@24102>   CMP.l #MinWordSgnd,D1
00031F48 <AmiBlitz3.ab3@24103>    BCC.w JUMP_bigforerr
00031F4E <AmiBlitz3.ab3@24104>   TST.w dontwrite
00031F52 <AmiBlitz3.ab3@24105>    BNE.w JL_0_DCD6
00031F54 <AmiBlitz3.ab3@24106>   NEG.w D1
00031F58 <AmiBlitz3.ab3@24107>   MOVE.w D1,-$2(A1)
00031F5E <AmiBlitz3.ab3@24110>   JSR popnext3
00031F64 <AmiBlitz3.ab3@24111>   MOVEA.l _execbase,A6
00031F66 <AmiBlitz3.ab3@24112>   MOVEA.l A2,A1
00031F68 <AmiBlitz3.ab3@24113>   MOVEQ.l #$00,D0
00031F6C <AmiBlitz3.ab3@24114>   MOVE.b $10(A1),D0
00031F72 <AmiBlitz3.ab3@24115>   MOVE.l mempool2,a0
00031F76 <AmiBlitz3.ab3@24116>   JSR _FreePooled(A6)
00031F7C <AmiBlitz3.ab3@24117> JMP reget
00031F82 <AmiBlitz3.ab3@24120> JMP notallowd
00031F88 <AmiBlitz3.ab3@24123> JMP bigforerr
00031F8C <AmiBlitz3.ab3@24130>   MOVE.w #$664F,-(A7)
00031F90 <AmiBlitz3.ab3@24133> BRA.w JL_0_DCF4
00031F96 <AmiBlitz3.ab3@24136> JMP error_dublicate_for
00031F9A <AmiBlitz3.ab3@24139> forlineat:   Ds.l 1
00031F9C <AmiBlitz3.ab3@24140> fortemp:     Ds.w 1
00031FA2 <AmiBlitz3.ab3@24147>   CLR.l fp0addr
00031FA8 <AmiBlitz3.ab3@24148>   TST.w dirmode
00031FAC <AmiBlitz3.ab3@24149>    BNE.w JUMP_baddirerr
00031FB6 <AmiBlitz3.ab3@24150>   MOVE.l linenumat,forlineat
00031FBC <AmiBlitz3.ab3@24154>   MOVE.l A5,letstart
00031FC0 <AmiBlitz3.ab3@24155>   BSR.w getparameter
00031FC6 <AmiBlitz3.ab3@24156>   MOVE.w D2,fortemp
00031FCC <AmiBlitz3.ab3@24157>   JSR findfor
00031FD0 <AmiBlitz3.ab3@24158>    BEQ.w JUMP_error_dublicate_for
00031FD6 <AmiBlitz3.ab3@24159>   LEA firstfor,A2
00031FDC <AmiBlitz3.ab3@24160>   JSR addhere2
00031FDE <AmiBlitz3.ab3@24161>   MOVE.l A2,-(A7)
00031FE4 <AmiBlitz3.ab3@24162>   TST.b debugmode
00031FE8 <AmiBlitz3.ab3@24163>    BEQ.b JL_0_DD4C
00031FEE <AmiBlitz3.ab3@24164>   JSR chkstak
00031FF4 <AmiBlitz3.ab3@24165>   MOVE.l AJL_0_DCF0,D1
00031FFA <AmiBlitz3.ab3@24166>   JSR  writelong
00031FFE <AmiBlitz3.ab3@24169>   MOVE.w fortemp(PC),D2
00032006 <AmiBlitz3.ab3@24170>   MOVE.b #1,formode
0003200A <AmiBlitz3.ab3@24171>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00032010 <AmiBlitz3.ab3@24172>   CLR.b formode
00032014 <AmiBlitz3.ab3@24173>   CMP.w #-$7FE8,D0
00032018 <AmiBlitz3.ab3@24174>    BNE.w JUMP_syntaxerr
0003201E <AmiBlitz3.ab3@24175>   MOVE.w commode,D1
00032022 <AmiBlitz3.ab3@24176>    BNE.w JUMP_syntaxerr
00032026 <AmiBlitz3.ab3@24177>   CMP.b #$6,D2
0003202A <AmiBlitz3.ab3@24178>    BCC.w JUMP_badforerr
0003202E <AmiBlitz3.ab3@24179>   BTST #$F,D2
00032032 <AmiBlitz3.ab3@24180>    BNE.w JL_0_DD86
00032038 <AmiBlitz3.ab3@24181>   MOVE.w leaamp,D1
0003203E <AmiBlitz3.ab3@24182>   JSR pokewda5s
00032040 <AmiBlitz3.ab3@24183>   MOVE.w D3,D1
00032046 <AmiBlitz3.ab3@24184>   JSR  writeword
0003204C <AmiBlitz3.ab3@24187>   MOVE.w pushindex,D1
00032052 <AmiBlitz3.ab3@24188>   JSR  writeword
00032056 <AmiBlitz3.ab3@24189>   ANDI.w #$FF,D2
00032058 <AmiBlitz3.ab3@24191>   MOVEA.l (A7),A1
0003205C <AmiBlitz3.ab3@24192>   MOVE.w D2,$C(A1)
0003205E <AmiBlitz3.ab3@24193>   MOVE.w D2,-(A7)
00032062 <AmiBlitz3.ab3@24194>    BSR.w eval
00032068 <AmiBlitz3.ab3@24195>    CLR.b onestep
0003206C <AmiBlitz3.ab3@24196>    CMP.w #$8019,d0
00032070 <AmiBlitz3.ab3@24197>    BEQ 'l1
00032078 <AmiBlitz3.ab3@24198>    MOVE.b #1,onestep
0003207A <AmiBlitz3.ab3@24201>   MOVE.w (A7),D2
00032080 <AmiBlitz3.ab3@24202>   MOVE.w pushd0l,D1
00032084 <AmiBlitz3.ab3@24203>   CMP.w #$3,D2
00032088 <AmiBlitz3.ab3@24204>    BCC.w JL_0_DDB6
0003208E <AmiBlitz3.ab3@24205>   MOVE.w pushd0wd,D1
00032090 <AmiBlitz3.ab3@24208>    MOVE.w D1,-(A7)
00032096 <AmiBlitz3.ab3@24209>    TST.b fpu
0003209A <AmiBlitz3.ab3@24210>    BEQ 'old
0003209E <AmiBlitz3.ab3@24211>    CMP.b #5,d2
000320A2 <AmiBlitz3.ab3@24212>    BNE 'old
000320A8 <AmiBlitz3.ab3@24213>    MOVE.l #$f2276400,d1
000320AE <AmiBlitz3.ab3@24215>    JSR writelong
000320B2 <AmiBlitz3.ab3@24216> BRA 'weit
000320B8 <AmiBlitz3.ab3@24219>    JSR  writeword                                          ;fpu for end value
000320BC <AmiBlitz3.ab3@24222>   CMP.w #-$7FE7,D0
000320C0 <AmiBlitz3.ab3@24223>    BNE.w JL_0_DDCC
000320C4 <AmiBlitz3.ab3@24224>    BSR.w eval
000320CA <AmiBlitz3.ab3@24225>    TST.b fpu
000320CE <AmiBlitz3.ab3@24226>    BEQ JL_0_DE0C
000320D2 <AmiBlitz3.ab3@24227>    CMP.b #5,d2
000320D6 <AmiBlitz3.ab3@24228>    BNE JL_0_DE0C
000320DC <AmiBlitz3.ab3@24229>    MOVE.l #$f2276400,d1                                    ;write step <> 1
000320E2 <AmiBlitz3.ab3@24231>   JSR writelong
000320E4 <AmiBlitz3.ab3@24234>    MOVE.w (a7)+,d1
000320E8 <AmiBlitz3.ab3@24235> BRA fpur
000320EC <AmiBlitz3.ab3@24238>   CMP.w #$4,D2
000320F0 <AmiBlitz3.ab3@24239>    BCC.w JL_0_DDE0
000320F4 <AmiBlitz3.ab3@24240>   MOVE.w #$7001,D1
000320FA <AmiBlitz3.ab3@24241>   JSR writeword
000320FE <AmiBlitz3.ab3@24242> BRA.w JL_0_DE0C
00032104 <AmiBlitz3.ab3@24245> JMP badforerr
00032108 <AmiBlitz3.ab3@24248>   BNE.w JL_0_DDFA
0003210C <AmiBlitz3.ab3@24249>   MOVE.w #$7001,D1
00032112 <AmiBlitz3.ab3@24250>   JSR writeword
00032118 <AmiBlitz3.ab3@24251>   MOVE.w swapd0,D1
0003211E <AmiBlitz3.ab3@24252>   JSR writeword
00032122 <AmiBlitz3.ab3@24253> BRA.w JL_0_DE0C
00032128 <AmiBlitz3.ab3@24256>   TST.b fpu
0003212C <AmiBlitz3.ab3@24257>    BEQ 'old
00032130 <AmiBlitz3.ab3@24258>   CMP.b #5,d2
00032134 <AmiBlitz3.ab3@24259>    BNE 'old
0003213A <AmiBlitz3.ab3@24260>   MOVE.l #$f23c5000,d1
00032140 <AmiBlitz3.ab3@24261>   JSR writelong
00032144 <AmiBlitz3.ab3@24262>   MOVE.w #$1,d1
0003214A <AmiBlitz3.ab3@24263>   JSR writeword
00032150 <AmiBlitz3.ab3@24264>   MOVE.l #$f2276400,d1
00032156 <AmiBlitz3.ab3@24265>   JSR writelong
00032158 <AmiBlitz3.ab3@24266>   MOVE.w (a7)+,d1
0003215C <AmiBlitz3.ab3@24267> BRA fpur
00032160 <AmiBlitz3.ab3@24270>   MOVE.w #$203C,D1                                         ;write step 1
00032166 <AmiBlitz3.ab3@24271>   JSR writeword
0003216C <AmiBlitz3.ab3@24272>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
00032172 <AmiBlitz3.ab3@24273>   JSR writelong
00032174 <AmiBlitz3.ab3@24276>   MOVE.w (A7)+,D1
0003217A <AmiBlitz3.ab3@24277>   JSR writeword                                            ;push step on stack
0003217C <AmiBlitz3.ab3@24280>   MOVE.w (A7)+,D2
0003217E <AmiBlitz3.ab3@24281>   MOVEA.l (A7),A1
00032186 <AmiBlitz3.ab3@24282>   MOVE.l destpointer,$4(A1)
0003218C <AmiBlitz3.ab3@24283>   LEA forcompb,A0
00032192 <AmiBlitz3.ab3@24284>   LEA forcompbf,A1
00032196 <AmiBlitz3.ab3@24285>   CMP.w #$1,D2
0003219A <AmiBlitz3.ab3@24286>    BEQ.w JL_0_DE7E
000321A0 <AmiBlitz3.ab3@24287>   LEA forcompw,A0
000321A6 <AmiBlitz3.ab3@24288>   LEA forcompwf,A1
000321AA <AmiBlitz3.ab3@24289>   CMP.w #$2,D2
000321AE <AmiBlitz3.ab3@24290>    BEQ.w JL_0_DE7E
000321B4 <AmiBlitz3.ab3@24291>   LEA forcompl,A0
000321BA <AmiBlitz3.ab3@24292>   LEA forcomplf,A1
000321BE <AmiBlitz3.ab3@24293>   CMP.w #$5,D2
000321C2 <AmiBlitz3.ab3@24294>    BNE.w JL_0_DE7E
000321C8 <AmiBlitz3.ab3@24295>   TST.b fpu
000321CC <AmiBlitz3.ab3@24296>    BEQ 'old
000321D2 <AmiBlitz3.ab3@24297>   LEA fpu_start,a0
000321D8 <AmiBlitz3.ab3@24298>   LEA fpu_end,a1
000321DE <AmiBlitz3.ab3@24299>   JSR pokecode
000321E2 <AmiBlitz3.ab3@24300> BRA fpu3
000321E8 <AmiBlitz3.ab3@24303>   LEA forcompf,A0                                         ;
000321EE <AmiBlitz3.ab3@24304>   LEA forcompff,A1
000321F4 <AmiBlitz3.ab3@24305>   JSR pokecode
000321F8 <AmiBlitz3.ab3@24306>   MOVE.w #$C900,D1
000321FC <AmiBlitz3.ab3@24307>   BSR.w Atokejsr
00032202 <AmiBlitz3.ab3@24308>   LEA forcompf2,A0
00032208 <AmiBlitz3.ab3@24309>   LEA forcompf2f,A1
0003220E <AmiBlitz3.ab3@24312>   JSR pokecode
00032214 <AmiBlitz3.ab3@24313>   TST.b fast                                               ;fast for next
00032218 <AmiBlitz3.ab3@24314>    BEQ 's1
0003221C <AmiBlitz3.ab3@24315>   CMP.w #3,d2
00032220 <AmiBlitz3.ab3@24316>    BNE 's1
00032226 <AmiBlitz3.ab3@24317>   TST.b onestep
0003222A <AmiBlitz3.ab3@24318>    BEQ 's1
00032234 <AmiBlitz3.ab3@24319>   SUB.l #10,destpointer
00032238 <AmiBlitz3.ab3@24320>   MOVE.w #$b081,d1
0003223E <AmiBlitz3.ab3@24321>   JSR writeword
00032242 <AmiBlitz3.ab3@24325>   MOVE.l thebgt(PC),D1
00032248 <AmiBlitz3.ab3@24326>   JSR writelong
0003224A <AmiBlitz3.ab3@24329>   MOVEA.l (A7)+,A1
00032252 <AmiBlitz3.ab3@24330>   MOVE.l destpointer,$8(A1)
00032258 <AmiBlitz3.ab3@24331> JMP reget
0003225C <AmiBlitz3.ab3@24334>   MOVEA.l 8(a7),a2
00032260 <AmiBlitz3.ab3@24335>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00032266 <AmiBlitz3.ab3@24336>   fmove.s 4(a7),fp1
0003226A <AmiBlitz3.ab3@24337>   BTST.b #7,(a7)
0003226E <AmiBlitz3.ab3@24338>   BNE 'negi
00032272 <AmiBlitz3.ab3@24339>   fcmp.x fp1,fp0
00032276 <AmiBlitz3.ab3@24340> BRA 'negi2
0003227A <AmiBlitz3.ab3@24343>   fcmp.x fp0,fp1
0003227E <AmiBlitz3.ab3@24346>   Dc.l $f2920000                                           ;fbgt.w
00032282 <AmiBlitz3.ab3@24350>   BGT.w thebgt
00032288 <AmiBlitz3.ab3@24353>   MOVE.l A5,letstart
0003228C <AmiBlitz3.ab3@24354>   BSR.w getparameter
00032296 <AmiBlitz3.ab3@24360>   MOVE.l destpointer,pushpc
000322A0 <AmiBlitz3.ab3@24361>   MOVE.l hunkoffsetbase,pushoff
000322A6 <AmiBlitz3.ab3@24362>   CLR.l rightsidetype
000322AE <AmiBlitz3.ab3@24363>   MOVE.w #$0001,regnum
000322B4 <AmiBlitz3.ab3@24364>   JSR JL_0_8E3C
000322BA <AmiBlitz3.ab3@24365>   JSR calcvar
000322C0 <AmiBlitz3.ab3@24366>   TST.b formode
000322C4 <AmiBlitz3.ab3@24367>   BEQ 'lf1
000322CA <AmiBlitz3.ab3@24368>   CMP.l #newtype_double,A2
000322CE <AmiBlitz3.ab3@24369>   BEQ JUMP_notallowd
000322D4 <AmiBlitz3.ab3@24370>   MOVE.l a2,currtype
000322DA <AmiBlitz3.ab3@24373>   CLR.w startoffsetmore
000322DE <AmiBlitz3.ab3@24374>   CMP.w #$3d,d0
000322E2 <AmiBlitz3.ab3@24375>   BNE 'l1a
000322E6 <AmiBlitz3.ab3@24376>   BTST #15,d2
000322EA <AmiBlitz3.ab3@24377>   BEQ 'l1a
000322EE <AmiBlitz3.ab3@24378>   CMP.b #1,d2
000322F2 <AmiBlitz3.ab3@24379>   BNE 'l1a
000322FC <AmiBlitz3.ab3@24380>   MOVE.w leaa0a0+2,startoffsetmore
00032302 <AmiBlitz3.ab3@24383>   CLR.w regnum
00032306 <AmiBlitz3.ab3@24384>   BSR.w JL_0_B5D2
0003230C <AmiBlitz3.ab3@24385>   CLR.w commode
00032312 <AmiBlitz3.ab3@24386>   CLR.w stackcorrect
00032318 <AmiBlitz3.ab3@24387>   CLR.w pcodd
0003231E <AmiBlitz3.ab3@24388>   MOVE.w startoffsetmore,d1
00032322 <AmiBlitz3.ab3@24389>   BTST #0,d1
00032326 <AmiBlitz3.ab3@24390>   BEQ 'l2a
0003232E <AmiBlitz3.ab3@24391>   MOVE.w #1,pcodd
00032332 <AmiBlitz3.ab3@24394>   CMP.w #$3D,D0                                            ;=
00032336 <AmiBlitz3.ab3@24395>   BEQ.w JL_0_DEE0
00032338 <AmiBlitz3.ab3@24398>   MOVE.b (a5)+,d1
0003233C <AmiBlitz3.ab3@24399>   BEQ 'l10
00032340 <AmiBlitz3.ab3@24400>   CMP.b #":",d1
00032344 <AmiBlitz3.ab3@24401>   BEQ 'l10
00032348 <AmiBlitz3.ab3@24402>   CMP.b #";",d1
0003234C <AmiBlitz3.ab3@24403>   BEQ 'l10
00032350 <AmiBlitz3.ab3@24404>   CMP.b #"0",d1
00032354 <AmiBlitz3.ab3@24405>   BLT 'l11
00032358 <AmiBlitz3.ab3@24406>   CMP.b #"9",d1
0003235C <AmiBlitz3.ab3@24407>   BGT 'l11
00032360 <AmiBlitz3.ab3@24408> BRA.s 'l1
00032368 <AmiBlitz3.ab3@24411>   MOVE.b #1,quickadd
0003236E <AmiBlitz3.ab3@24414>   MOVEA.l letstart,A5
00032370 <AmiBlitz3.ab3@24415>   SUBQ.w #1,A5
00032374 <AmiBlitz3.ab3@24418>   CMP.b #$7,D2
00032378 <AmiBlitz3.ab3@24419>    BNE.w JL_0_DF8A
0003237C <AmiBlitz3.ab3@24425>   MOVEM.w D2-D3,-(A7)
00032382 <AmiBlitz3.ab3@24426>   MOVE.l lastoffset_org,-(A7)
00032388 <AmiBlitz3.ab3@24427>   MOVE.w varmode,-(A7)
00032392 <AmiBlitz3.ab3@24429>    MOVE.l #forthstack,forthsp
0003239C <AmiBlitz3.ab3@24430>    MOVE.l #precstack,precsp
000323A2 <AmiBlitz3.ab3@24431>    CLR.w regnum
000323A8 <AmiBlitz3.ab3@24432>    CLR.w nonew
000323AE <AmiBlitz3.ab3@24433>    CLR.w sbasegot
000323B8 <AmiBlitz3.ab3@24434>    MOVE.w varcodelen,oldvcodelen
000323BE <AmiBlitz3.ab3@24435>    CLR.w varcodelen
000323C6 <AmiBlitz3.ab3@24436>    MOVE.w #$FFFF,lasta6
000323C8 <AmiBlitz3.ab3@24439>   MOVEQ.l #$07,D2
000323CC <AmiBlitz3.ab3@24440>    BSR.w eval
000323D2 <AmiBlitz3.ab3@24441>   MOVE.w (A7)+,varmode
000323D8 <AmiBlitz3.ab3@24442>   MOVE.l (A7)+,lastoffset_org
000323DE <AmiBlitz3.ab3@24443>   MOVE.w moved0a3,D1
000323E4 <AmiBlitz3.ab3@24444>    JSR writeword
000323EA <AmiBlitz3.ab3@24445>   MOVE.w commode,D1
000323EE <AmiBlitz3.ab3@24446>    BEQ.w JL_0_DF38
000323F4 <AmiBlitz3.ab3@24447>   LEA pulla2st,A0
000323FA <AmiBlitz3.ab3@24448>   LEA pulla2stf,A1
00032400 <AmiBlitz3.ab3@24449>    JSR pokecode
00032404 <AmiBlitz3.ab3@24450> BRA.w JL_0_DF3C
00032408 <AmiBlitz3.ab3@24453>   BSR.w JL_0_B63C
0003240C <AmiBlitz3.ab3@24456>   MOVEM.w (A7)+,D2-D3
00032410 <AmiBlitz3.ab3@24457>   BTST #$F,D2
00032414 <AmiBlitz3.ab3@24458>   BNE.w JL_0_DF58
0003241A <AmiBlitz3.ab3@24459>     MOVE.w D3,leaa5d3a2+2
00032420 <AmiBlitz3.ab3@24460>     MOVE.l leaa5d3a2,D1
00032426 <AmiBlitz3.ab3@24461>     JSR pokela5s
0003242A <AmiBlitz3.ab3@24464>   MOVE.w #$FE6F,D1
00032430 <AmiBlitz3.ab3@24465>   JSR uselib
00032436 <AmiBlitz3.ab3@24466>   MOVE.l #$C700,D1
0003243C <AmiBlitz3.ab3@24467>   MOVE.l d1,lastinstruction
00032442 <AmiBlitz3.ab3@24468>   MOVE.w varmode,D2
00032446 <AmiBlitz3.ab3@24469>   BNE.w JL_0_DF70
00032448 <AmiBlitz3.ab3@24470>     ADDQ.w #1,D1
0003244C <AmiBlitz3.ab3@24473>   BSR.w Atokejsr
00032450 <AmiBlitz3.ab3@24474>   CMP.w #$2C,D0
00032454 <AmiBlitz3.ab3@24475>   BNE.w JL_0_E0C6
0003245A <AmiBlitz3.ab3@24477>   MOVE.w addq4a2,D1
00032460 <AmiBlitz3.ab3@24478>   JSR writeword
00032464 <AmiBlitz3.ab3@24479> BRA.w JL_0_E018
0003246A <AmiBlitz3.ab3@24482> JMP error4char
00032470 <AmiBlitz3.ab3@24485> JMP error_convert_types
00032474 <AmiBlitz3.ab3@24489>    BTST #$E,D2
00032478 <AmiBlitz3.ab3@24490>    BNE.w JL_0_DF9C
0003247A <AmiBlitz3.ab3@24491>   TST.b D2
0003247E <AmiBlitz3.ab3@24492>    BEQ.w JUMP_noleterr
00032484 <AmiBlitz3.ab3@24493>    TST.b newsyntax
00032488 <AmiBlitz3.ab3@24494>    BEQ JL_0_DFA0
0003248C <AmiBlitz3.ab3@24497>    CMP.w #$4022,(a5)
00032490 <AmiBlitz3.ab3@24498>    BNE JL_0_DFA0
00032496 <AmiBlitz3.ab3@24499>    CMP.l #3,d2
0003249A <AmiBlitz3.ab3@24500>    BNE  JUMP_error_convert_types
0003249C <AmiBlitz3.ab3@24501>    ADDQ #2,a5
0003249E <AmiBlitz3.ab3@24502>    MOVEQ #0,d0
000324A0 <AmiBlitz3.ab3@24503>    MOVE.b (a5)+,d0
000324A4 <AmiBlitz3.ab3@24504>    BEQ JL_0_DFA0
000324A8 <AmiBlitz3.ab3@24505>    CMP.b #$22,d0
000324AC <AmiBlitz3.ab3@24506>    BNE 'l1
000324B0 <AmiBlitz3.ab3@24507>    MOVE.b #0,d0
000324B4 <AmiBlitz3.ab3@24508> BRA 'do
000324B6 <AmiBlitz3.ab3@24511>   ASL.l #8,d0
000324B8 <AmiBlitz3.ab3@24512>    MOVE.b (a5)+,d0
000324BC <AmiBlitz3.ab3@24513>    BEQ JL_0_DFA0
000324C0 <AmiBlitz3.ab3@24514>    CMP.b #$22,d0
000324C4 <AmiBlitz3.ab3@24515>    BNE 'l2
000324C8 <AmiBlitz3.ab3@24516>    MOVE.b #0,d0
000324CA <AmiBlitz3.ab3@24517>    ASR.l #8,d0
000324CE <AmiBlitz3.ab3@24518> BRA 'do
000324D0 <AmiBlitz3.ab3@24521>   ASL.l #8,d0
000324D2 <AmiBlitz3.ab3@24522>     MOVE.b (a5)+,d0
000324D6 <AmiBlitz3.ab3@24523>    BEQ JL_0_DFA0
000324DA <AmiBlitz3.ab3@24524>    CMP.b #$22,d0
000324DE <AmiBlitz3.ab3@24525>    BNE 'l3
000324E2 <AmiBlitz3.ab3@24526>    MOVE.b #0,d0
000324E4 <AmiBlitz3.ab3@24527>    ASR.l #8,d0
000324E8 <AmiBlitz3.ab3@24528> BRA 'do
000324EA <AmiBlitz3.ab3@24531>   ASL.l #8,d0
000324EC <AmiBlitz3.ab3@24532>     MOVE.b (a5)+,d0
000324F0 <AmiBlitz3.ab3@24533>    BEQ JL_0_DFA0
000324F4 <AmiBlitz3.ab3@24534>    CMP.b #$22,d0
000324F8 <AmiBlitz3.ab3@24535>    BNE 'l4
000324FC <AmiBlitz3.ab3@24536>    MOVE.b #0,d0
000324FE <AmiBlitz3.ab3@24537>    ASR.l #8,d0
00032502 <AmiBlitz3.ab3@24538> BRA 'do
00032506 <AmiBlitz3.ab3@24541>    CMP.b #$22,(a5)+
0003250A <AmiBlitz3.ab3@24542>    BNE JUMP_error4char
0003250E <AmiBlitz3.ab3@24545>   MOVE.w #$2b7c,d1
00032514 <AmiBlitz3.ab3@24546>    TST.w varmode
00032518 <AmiBlitz3.ab3@24547>    BEQ 'g3
0003251C <AmiBlitz3.ab3@24548>    BCLR #9,d1
00032522 <AmiBlitz3.ab3@24551>     JSR writeword
00032524 <AmiBlitz3.ab3@24552>     MOVE.l d0,d1
0003252A <AmiBlitz3.ab3@24553>     JSR writelong
0003252C <AmiBlitz3.ab3@24554>     MOVE.w d3,d1
00032532 <AmiBlitz3.ab3@24555>     JSR writeword
00032538 <AmiBlitz3.ab3@24556>     JSR get1bytemain
0003253A <AmiBlitz3.ab3@24557> RTS
00032540 <AmiBlitz3.ab3@24563> JMP noleterr
00032546 <AmiBlitz3.ab3@24567>   MOVE.w d2,vartype
0003254A <AmiBlitz3.ab3@24568>   MOVE.b #$3,D2
0003254E <AmiBlitz3.ab3@24571>   CMP.b #5,d2
00032552 <AmiBlitz3.ab3@24572>   BNE 'l1
00032558 <AmiBlitz3.ab3@24573>   MOVE.l a2,currtype
0003255C <AmiBlitz3.ab3@24577>   MOVEM.w D2-D3,-(A7)
00032562 <AmiBlitz3.ab3@24578>   MOVE.w varmode,-(A7)
00032568 <AmiBlitz3.ab3@24579>   MOVE.l a2,leftsidetype
0003256C <AmiBlitz3.ab3@24580>   BTST #$f,d2
00032570 <AmiBlitz3.ab3@24581>   BEQ 'nomultiassign
00032576 <AmiBlitz3.ab3@24582>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
0003257A <AmiBlitz3.ab3@24583> 'nomultiassign  ANDI.w #$FF,D2
00032580 <AmiBlitz3.ab3@24584>   MOVE.l lastoffset_org,-(A7)
00032584 <AmiBlitz3.ab3@24585>   BSR.w eval                                ; calc right side of var assign
00032588 <AmiBlitz3.ab3@24587>   MOVEM.l a0/a1,-(a7)
0003258E <AmiBlitz3.ab3@24588>   MOVE.l leftsidetype,a0
00032594 <AmiBlitz3.ab3@24589>   CMP.l #0,a0
00032598 <AmiBlitz3.ab3@24590>   BEQ 'nocheck
000325A0 <AmiBlitz3.ab3@24591>   CMP.l #$100,4(a0)
000325A4 <AmiBlitz3.ab3@24592>   BLE 'nocheck
000325AA <AmiBlitz3.ab3@24593>   TST.l typetocast
000325AE <AmiBlitz3.ab3@24594>   BEQ 'nocast
000325B4 <AmiBlitz3.ab3@24595>   MOVE.l typetocast,a1
000325B8 <AmiBlitz3.ab3@24596>   BRA 'typecheck
000325BE <AmiBlitz3.ab3@24597> 'nocast  TST.l rightsidetype
000325C2 <AmiBlitz3.ab3@24598>   BEQ 'nocheck
000325C8 <AmiBlitz3.ab3@24599>   MOVE.l rightsidetype,a1
000325D0 <AmiBlitz3.ab3@24600>   CMP.l #$100,4(a1)
000325D4 <AmiBlitz3.ab3@24601>   BGE 'typecheck
000325DC <AmiBlitz3.ab3@24602>   CMP.l #$3,4(a1)
000325E0 <AmiBlitz3.ab3@24603>   BEQ 'ok                              ;long assign is allow with this codelines
000325E4 <AmiBlitz3.ab3@24604>   BRA 'error
000325EA <AmiBlitz3.ab3@24606>   TST.b typecheck
000325EE <AmiBlitz3.ab3@24607>   BEQ 'nocheck
000325F4 <AmiBlitz3.ab3@24608>   TST.b notypecheck
000325F8 <AmiBlitz3.ab3@24609>   BNE 'ok
000325FA <AmiBlitz3.ab3@24610>   CMP.l a0,a1
000325FE <AmiBlitz3.ab3@24611>   BEQ 'ok
00032602 <AmiBlitz3.ab3@24613>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00032606 <AmiBlitz3.ab3@24614>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0003260A <AmiBlitz3.ab3@24615>   BEQ 'ok
00032610 <AmiBlitz3.ab3@24617>  JMP   error_convert_types     ;for syntax 4  = typecheck
00032616 <AmiBlitz3.ab3@24620>    CLR.l typetocast
0003261A <AmiBlitz3.ab3@24621>    MOVEM.l (a7)+, a0/a1
00032620 <AmiBlitz3.ab3@24622>   MOVE.l (A7)+,lastoffset_org
00032626 <AmiBlitz3.ab3@24623>   MOVE.w commode,D1
0003262A <AmiBlitz3.ab3@24624>    BNE.w JL_0_DFCC
0003262E <AmiBlitz3.ab3@24625>    BSR.w JL_0_B63C
00032634 <AmiBlitz3.ab3@24628>   MOVE.w (A7)+,varmode
00032638 <AmiBlitz3.ab3@24629>   MOVEM.w (A7)+,D2-D3
0003263C <AmiBlitz3.ab3@24631>   MOVE.w #$2B40,D1
00032642 <AmiBlitz3.ab3@24632>   MOVE.w varmode,D4
00032646 <AmiBlitz3.ab3@24633>    BEQ.w JL_0_DFE8
0003264A <AmiBlitz3.ab3@24634>   BCLR #$9,D1
0003264E <AmiBlitz3.ab3@24637>   BTST #$F,D2
00032652 <AmiBlitz3.ab3@24638>    BEQ.w JL_0_E090
00032658 <AmiBlitz3.ab3@24639>    TST.b stackcorrect
0003265C <AmiBlitz3.ab3@24640>    BNE 'st1
00032662 <AmiBlitz3.ab3@24641>   MOVE.w commode,D1
00032666 <AmiBlitz3.ab3@24642>    BEQ.w JL_0_E004
0003266C <AmiBlitz3.ab3@24645>   MOVE.w pulla2,D1
00032672 <AmiBlitz3.ab3@24646>    JSR writeword
00032676 <AmiBlitz3.ab3@24649>   MOVE.w #$2480,D1
0003267A <AmiBlitz3.ab3@24650>    MOVEM.l a0/d0,-(a7)
00032680 <AmiBlitz3.ab3@24651>    MOVEA.l lastoffset_org,A0
00032682 <AmiBlitz3.ab3@24652>    MOVE.l A0,D0
00032686 <AmiBlitz3.ab3@24653>    BEQ.w 'skip
00032688 <AmiBlitz3.ab3@24654>    MOVEA.l D0,A0
00032690 <AmiBlitz3.ab3@24655>    MOVE.l $A(A0),currtype
00032694 <AmiBlitz3.ab3@24658>   MOVEM.l (a7)+,a0/d0
00032698 <AmiBlitz3.ab3@24659>   CMP.w #$2C,D0
0003269C <AmiBlitz3.ab3@24660>    BNE.w JL_0_E090
000326A0 <AmiBlitz3.ab3@24661>     MOVE.w #$24C0,D1
000326A4 <AmiBlitz3.ab3@24662>    BSR.w JL_0_E090                                         ;write store
000326AA <AmiBlitz3.ab3@24665>    MOVE.l lastoffset_org,D0
000326B2 <AmiBlitz3.ab3@24669>   MOVE.w #$FFFF,commode
000326B8 <AmiBlitz3.ab3@24670>   CLR.w varcodelen
000326C0 <AmiBlitz3.ab3@24671>   MOVE.b #1,optiarray
000326C6 <AmiBlitz3.ab3@24672>   MOVE.w pusha2,D1
000326CC <AmiBlitz3.ab3@24673>    JSR writeword
000326D2 <AmiBlitz3.ab3@24674>   TST.l lastoffset_org
000326D6 <AmiBlitz3.ab3@24675>   BEQ dimmore
000326DC <AmiBlitz3.ab3@24676>   MOVEA.l lastoffset_org,A0
000326DE <AmiBlitz3.ab3@24677>   MOVE.l (A0),D0
000326E2 <AmiBlitz3.ab3@24678>    BEQ.w JUMP_comerr
000326E4 <AmiBlitz3.ab3@24679>   MOVEA.l D0,A0
000326EA <AmiBlitz3.ab3@24680>   MOVE.l A0,lastoffset_org
000326F0 <AmiBlitz3.ab3@24681>   BTST #$1,$7(A0)
000326F4 <AmiBlitz3.ab3@24682>    BNE.w JUMP_nocomerr
000326F8 <AmiBlitz3.ab3@24683>   MOVEA.l $A(A0),A1
000326FC <AmiBlitz3.ab3@24684>   MOVE.l $4(A1),D2
00032702 <AmiBlitz3.ab3@24687>   BTST #$0,$7(A0)
00032706 <AmiBlitz3.ab3@24688>    BNE.w JL_0_E078
0003270C <AmiBlitz3.ab3@24689>   CMP.l #$100,D2
00032710 <AmiBlitz3.ab3@24690>    BCC.l JUMP_nocomerr
00032714 <AmiBlitz3.ab3@24691> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
0003271A <AmiBlitz3.ab3@24694>         CLR.b optiarray
0003271E <AmiBlitz3.ab3@24695>         CMP.w #"@@",(a5)
00032722 <AmiBlitz3.ab3@24696>         BEQ 'n1
00032726 <AmiBlitz3.ab3@24697> BRA 'd1
0003272C <AmiBlitz3.ab3@24700>   JSR nextline
0003272E <AmiBlitz3.ab3@24701>         MOVE.l a5,-(a7)
00032730 <AmiBlitz3.ab3@24704>   MOVE.b (a5)+,d0
00032734 <AmiBlitz3.ab3@24705>         CMP.b #$20,d0
00032738 <AmiBlitz3.ab3@24706>         BEQ 'l2
0003273A <AmiBlitz3.ab3@24707>         MOVE.l (a7)+,a5
0003273E <AmiBlitz3.ab3@24708>         CMP.b #";",d0
00032742 <AmiBlitz3.ab3@24709>         BEQ 'n1
00032748 <AmiBlitz3.ab3@24712>         TST.w debugmode
0003274C <AmiBlitz3.ab3@24713>         BEQ JL_0_DEE0
0003274E <AmiBlitz3.ab3@24714>         MOVE.l a0,-(a7)
00032754 <AmiBlitz3.ab3@24715>         MOVE.l pushat,a0
0003275A <AmiBlitz3.ab3@24716>         CMP.l #0,a0
0003275E <AmiBlitz3.ab3@24717>         BNE 'o1
00032762 <AmiBlitz3.ab3@24718> BRA 'skip
0003276A <AmiBlitz3.ab3@24721>         ADD.l #1,2(a0)
00032770 <AmiBlitz3.ab3@24724>   CLR.w commode
00032778 <AmiBlitz3.ab3@24725>         MOVE.b #1,stackcorrect
0003277A <AmiBlitz3.ab3@24726>         MOVE.l (a7)+,a0
00032780 <AmiBlitz3.ab3@24727> JMP JL_0_DEE0
00032786 <AmiBlitz3.ab3@24730> JMP nocomerr
0003278C <AmiBlitz3.ab3@24733>   CMP.l #$100,D2
00032790 <AmiBlitz3.ab3@24734>    BCS.w JL_0_E084
00032792 <AmiBlitz3.ab3@24735>   MOVEQ.l #$00,D2
00032796 <AmiBlitz3.ab3@24738>   BSET #$E,D2
0003279A <AmiBlitz3.ab3@24741>   BSET #$F,D2
0003279E <AmiBlitz3.ab3@24742> BRA.w JL_0_DEE0
000327A4 <AmiBlitz3.ab3@24745>    MOVE.l destpointer,a4
000327AC <AmiBlitz3.ab3@24746>    MOVE.l #$f22a6400,-4(a4)
000327B2 <AmiBlitz3.ab3@24747>    MOVE.w arrayoffset,d1
000327B8 <AmiBlitz3.ab3@24748> JMP writeword
000327BE <AmiBlitz3.ab3@24751> JMP comerr
000327C4 <AmiBlitz3.ab3@24754>    TST.b fpu
000327C8 <AmiBlitz3.ab3@24755>    BEQ 'nofloat
000327CC <AmiBlitz3.ab3@24756>    CMP.b #5,d2
000327D0 <AmiBlitz3.ab3@24757>    BNE 'nofloat
000327D6 <AmiBlitz3.ab3@24758>    CLR.w fp0var
000327DC <AmiBlitz3.ab3@24759>    LEA regtable,a4
000327DE <AmiBlitz3.ab3@24760>    TST.l (a4)
000327E2 <AmiBlitz3.ab3@24761>    BEQ 'noreg
000327E6 <AmiBlitz3.ab3@24762>    BTST #15,d2                                             ;regvars
000327EA <AmiBlitz3.ab3@24763>    BNE 'noreg
000327EE <AmiBlitz3.ab3@24764>    CMP.w 0+4(a4),d3
000327F2 <AmiBlitz3.ab3@24765>    BNE 'doreg1
000327F8 <AmiBlitz3.ab3@24766>    MOVE.l #$f2000380,d1
000327FE <AmiBlitz3.ab3@24767>    MOVE.w regnum,d0
00032802 <AmiBlitz3.ab3@24768>    BNE 'noopt
00032808 <AmiBlitz3.ab3@24774>    MOVE.l destpointer,a4
00032810 <AmiBlitz3.ab3@24775>    CMP.l #$f2001c80,-8(a4)
00032814 <AmiBlitz3.ab3@24776>    BNE 'noopt
0003281C <AmiBlitz3.ab3@24777>    CMP.l #$f2000422,-4(a4)
00032820 <AmiBlitz3.ab3@24778>    BNE 'noopt
00032826 <AmiBlitz3.ab3@24779>    MOVE.l #$f20003a2,d1
00032830 <AmiBlitz3.ab3@24780>    SUB.l #8,destpointer
00032832 <AmiBlitz3.ab3@24783>    ASL.w #7,d0
00032834 <AmiBlitz3.ab3@24784>    OR.w d0,d1
0003283A <AmiBlitz3.ab3@24785>    JSR writelong
0003283C <AmiBlitz3.ab3@24786> RTS
00032840 <AmiBlitz3.ab3@24789>   CMP.w 8+4(a4),d3
00032844 <AmiBlitz3.ab3@24790>    BNE 'doreg2
0003284A <AmiBlitz3.ab3@24791>    MOVE.l #$f2000300,d1
00032850 <AmiBlitz3.ab3@24792>    MOVE.w regnum,d0
00032852 <AmiBlitz3.ab3@24793>    ASL.w #7,d0
00032854 <AmiBlitz3.ab3@24794>    OR.w d0,d1
0003285A <AmiBlitz3.ab3@24795>    JSR writelong
0003285C <AmiBlitz3.ab3@24796> RTS
00032860 <AmiBlitz3.ab3@24799>   CMP.w 16+4(a4),d3
00032864 <AmiBlitz3.ab3@24800>    BNE 'doreg3
0003286A <AmiBlitz3.ab3@24801>    MOVE.l #$f2000280,d1
00032870 <AmiBlitz3.ab3@24802>    MOVE.w regnum,d0
00032872 <AmiBlitz3.ab3@24803>    ASL.w #7,d0
00032874 <AmiBlitz3.ab3@24804>    OR.w d0,d1
0003287A <AmiBlitz3.ab3@24805>    JSR  writelong
0003287C <AmiBlitz3.ab3@24806>  RTS
00032880 <AmiBlitz3.ab3@24809>   CMP.w 24+4(a4),d3
00032884 <AmiBlitz3.ab3@24810>    BNE 'doreg4
0003288A <AmiBlitz3.ab3@24811>    MOVE.l #$f2000200,d1
00032890 <AmiBlitz3.ab3@24812>    MOVE.w regnum,d0
00032892 <AmiBlitz3.ab3@24813>    ASL.w #7,d0
00032894 <AmiBlitz3.ab3@24814>    OR.w d0,d1
0003289A <AmiBlitz3.ab3@24815>    JSR writelong
0003289C <AmiBlitz3.ab3@24816> RTS
000328A0 <AmiBlitz3.ab3@24819>   CMP.w 32+4(a4),d3
000328A4 <AmiBlitz3.ab3@24820>    BNE 'noreg
000328AA <AmiBlitz3.ab3@24821>    MOVE.l #$f2000180,d1
000328B0 <AmiBlitz3.ab3@24822>    MOVE.w regnum,d0
000328B2 <AmiBlitz3.ab3@24823>    ASL.w #7,d0
000328B4 <AmiBlitz3.ab3@24824>    OR.w d0,d1
000328BA <AmiBlitz3.ab3@24825>    JSR writelong
000328BC <AmiBlitz3.ab3@24826> RTS
000328C2 <AmiBlitz3.ab3@24829>    TST.w regnum
000328C6 <AmiBlitz3.ab3@24830>    BNE 'nofp0
000328CC <AmiBlitz3.ab3@24831>    MOVE.l destpointer ,a4
000328D4 <AmiBlitz3.ab3@24832>    CMP.l #$f2304400,-6(a4)
000328D8 <AmiBlitz3.ab3@24833>    BNE 'do
000328DE <AmiBlitz3.ab3@24834>    CMP.w #$1990,-2(a4)
000328E2 <AmiBlitz3.ab3@24835>    BNE 'do
000328E6 <AmiBlitz3.ab3@24836>    BTST #15,d2                                             ;types ?
000328EA <AmiBlitz3.ab3@24837>    BNE 'do
000328F0 <AmiBlitz3.ab3@24838>   MOVE.l #$2b701990,d1                                     ;var
000328F6 <AmiBlitz3.ab3@24839>   TST.w varmode
000328FA <AmiBlitz3.ab3@24840>   BEQ 'glob1
000328FE <AmiBlitz3.ab3@24841>   BCLR #25,d1
00032902 <AmiBlitz3.ab3@24844>   MOVE.l d1,-6(a4)
00032906 <AmiBlitz3.ab3@24845>   MOVE.w d3,-2(a4)
0003290C <AmiBlitz3.ab3@24846>   CLR.w fp0var
00032914 <AmiBlitz3.ab3@24847>   MOVE.w #$ffff,fp0mode
00032916 <AmiBlitz3.ab3@24848> RTS
0003291E <AmiBlitz3.ab3@24851>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00032922 <AmiBlitz3.ab3@24852>    BNE 'do3
0003292C <AmiBlitz3.ab3@24853>    CMP.l #newtype_double,currtype
00032930 <AmiBlitz3.ab3@24854>    BEQ 'do4
00032934 <AmiBlitz3.ab3@24857>   MOVE.w #$2b6d,d1
0003293A <AmiBlitz3.ab3@24858>    TST.w varmode
0003293E <AmiBlitz3.ab3@24859>    BEQ 'g2
00032942 <AmiBlitz3.ab3@24860>     BCLR #9,d1
00032946 <AmiBlitz3.ab3@24863>     CMP.w #$2b6d,d1
0003294A <AmiBlitz3.ab3@24864>     BNE 'd1
0003294E <AmiBlitz3.ab3@24865>     CMP.w -2(a4),d3
00032952 <AmiBlitz3.ab3@24866>     BNE 'd1
00032958 <AmiBlitz3.ab3@24867>     SUBQ.l #6,destpointer
0003295C <AmiBlitz3.ab3@24868> BRA 'd12
00032960 <AmiBlitz3.ab3@24871>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00032966 <AmiBlitz3.ab3@24872>     MOVE.w -2(a4),-4(a4)
0003296A <AmiBlitz3.ab3@24873>     MOVE.w d3,-2(a4)
00032970 <AmiBlitz3.ab3@24876>   CLR.w fp0var
00032978 <AmiBlitz3.ab3@24877>     MOVE.w #$ffff,fp0mode
0003297A <AmiBlitz3.ab3@24878> RTS
00032982 <AmiBlitz3.ab3@24881>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00032986 <AmiBlitz3.ab3@24882>    BNE 'do4
0003298A <AmiBlitz3.ab3@24883>    MOVE.w #$2b6c,d1
00032990 <AmiBlitz3.ab3@24884>       TST.w varmode
00032994 <AmiBlitz3.ab3@24885>    BEQ 'g3
00032998 <AmiBlitz3.ab3@24886>    BCLR #9,d1
0003299C <AmiBlitz3.ab3@24889>   MOVE.w d1,-6(a4)
000329A2 <AmiBlitz3.ab3@24890>     MOVE.w -2(a4),-4(a4)
000329A6 <AmiBlitz3.ab3@24891>     MOVE.w d3,-2(a4)
000329AC <AmiBlitz3.ab3@24892>     CLR.w fp0var
000329B4 <AmiBlitz3.ab3@24893>     MOVE.w #$ffff,fp0mode
000329B6 <AmiBlitz3.ab3@24894> RTS
000329BC <AmiBlitz3.ab3@24897>   MOVE.w d3,fp0var
000329C6 <AmiBlitz3.ab3@24898>    MOVE.w varmode,fp0mode
000329C8 <AmiBlitz3.ab3@24899>    ADDQ.l #6,a4
000329CE <AmiBlitz3.ab3@24900>    MOVE.l a4,fp0addr
000329D8 <AmiBlitz3.ab3@24901>    MOVE.l firstiff,fp0iff
000329DC <AmiBlitz3.ab3@24904>   MOVEM.l d0/d4,-(a7)
000329DE <AmiBlitz3.ab3@24905>    MOVEQ #0,d0
000329E4 <AmiBlitz3.ab3@24906>     MOVE.w regnum,d0
000329E6 <AmiBlitz3.ab3@24907>    ASL.w #7,d0                                             ;fpu store var
000329EA <AmiBlitz3.ab3@24908>   BTST #15,d2
000329EE <AmiBlitz3.ab3@24909>    BEQ 'var
000329F0 <AmiBlitz3.ab3@24910>    MOVE.w d1,d4
000329F4 <AmiBlitz3.ab3@24911>    CMP.w #$24c0,d4
000329F8 <AmiBlitz3.ab3@24912>    BNE 'nopl
000329FE <AmiBlitz3.ab3@24913>    MOVE.l #$f21a6400,d1
00032A00 <AmiBlitz3.ab3@24914>    MOVEQ #0,d3
00032A04 <AmiBlitz3.ab3@24915> BRA 'glob
00032A0A <AmiBlitz3.ab3@24919>   MOVE.l #$f2126400,d1
00032A0C <AmiBlitz3.ab3@24920>    TST.w d3                                                ;offset =0
00032A10 <AmiBlitz3.ab3@24921>    BNE 'offset
00032A16 <AmiBlitz3.ab3@24922>    MOVE.l #$f2126400,d1
00032A18 <AmiBlitz3.ab3@24930>    MOVEQ #0,d3
00032A1C <AmiBlitz3.ab3@24931> BRA 'glob
00032A22 <AmiBlitz3.ab3@24934>   MOVE.l #$f22d6400,d1                                     ;var
00032A28 <AmiBlitz3.ab3@24935>   TST.w varmode
00032A2C <AmiBlitz3.ab3@24936>   BEQ 'glob
00032A30 <AmiBlitz3.ab3@24937>   BCLR #16,d1
00032A32 <AmiBlitz3.ab3@24938>  'glob OR.l d0,d1
00032A3C <AmiBlitz3.ab3@24941>   CMP.l #newtype_double,currtype
00032A40 <AmiBlitz3.ab3@24942>   BNE 'dbl1
00032A46 <AmiBlitz3.ab3@24943>   OR.l #$00001000,d1
00032A4C <AmiBlitz3.ab3@24946>   JSR writelong
00032A52 <AmiBlitz3.ab3@24947>   CLR.l currtype
00032A56 <AmiBlitz3.ab3@24948>   MOVEM.l (a7)+,d0/d4
00032A58 <AmiBlitz3.ab3@24949>   MOVE.l d3,d1
00032A5C <AmiBlitz3.ab3@24950>   BEQ 'nooffs
00032A62 <AmiBlitz3.ab3@24951> JMP writeword
00032A64 <AmiBlitz3.ab3@24954> RTS
00032A6A <AmiBlitz3.ab3@24968>     TST.b fast                                             ;write lea->xx(a2)
00032A6E <AmiBlitz3.ab3@24969>    BEQ 'la10
00032A74 <AmiBlitz3.ab3@24973>    TST.b quickadd
00032A7A <AmiBlitz3.ab3@24975>      CLR.b quickadd
00032A7E <AmiBlitz3.ab3@24976>    CMP.w #$2480,d1
00032A82 <AmiBlitz3.ab3@24977>    BNE 'la10
00032A88 <AmiBlitz3.ab3@24978>    TST.b optiarray
00032A8C <AmiBlitz3.ab3@24979>    BNE 'la10
00032A92 <AmiBlitz3.ab3@24980>    MOVE.l destpointer,a4
00032A98 <AmiBlitz3.ab3@24981>    CMP.w #$45ea,-4(a4)
00032A9C <AmiBlitz3.ab3@24982>    BNE 'la10
00032AA4 <AmiBlitz3.ab3@24983>    CMP.w #8,pushclen
00032AA8 <AmiBlitz3.ab3@24984>    BEQ 'la100
00032AB0 <AmiBlitz3.ab3@24985>    CMP.w #6,pushclen
00032AB4 <AmiBlitz3.ab3@24986>    BNE 'la10
00032AB8 <AmiBlitz3.ab3@24987>    CMP.b #3,d2
00032ABC <AmiBlitz3.ab3@24988>    BCS 'la110
00032AC2 <AmiBlitz3.ab3@24990>    MOVE.w #$2540,-2(a4)
00032AC8 <AmiBlitz3.ab3@24991>    MOVE.w arrayoffset,d1
00032ACE <AmiBlitz3.ab3@24992> JMP writeword
00032AD4 <AmiBlitz3.ab3@24995>    CLR.b quickadd
00032AD6 <AmiBlitz3.ab3@24996> RTS
00032ADA <AmiBlitz3.ab3@24999>    CMP.b #2,d2
00032ADE <AmiBlitz3.ab3@25000>    BNE 'la120
00032AE4 <AmiBlitz3.ab3@25001>     MOVE.w #$3540,-2(a4)
00032AEA <AmiBlitz3.ab3@25002>    MOVE.w arrayoffset,d1
00032AF0 <AmiBlitz3.ab3@25003> JMP writeword
00032AF4 <AmiBlitz3.ab3@25006>   CMP.b #1,d2
00032AF8 <AmiBlitz3.ab3@25007>    BNE.s 'la10
00032AFE <AmiBlitz3.ab3@25008>     MOVE.w #$1540,-2(a4)
00032B04 <AmiBlitz3.ab3@25009>    MOVE.w arrayoffset,d1
00032B0A <AmiBlitz3.ab3@25010> JMP writeword
00032B0E <AmiBlitz3.ab3@25013>    CMP.b #3,d2
00032B12 <AmiBlitz3.ab3@25014>    BCS 'la11
00032B18 <AmiBlitz3.ab3@25015>    MOVE.w #$2540,-4(a4)
00032B1A <AmiBlitz3.ab3@25016> RTS
00032B1E <AmiBlitz3.ab3@25019>    CMP.b #2,d2
00032B22 <AmiBlitz3.ab3@25020>    BNE 'la12
00032B28 <AmiBlitz3.ab3@25021>     MOVE.w #$3540,-4(a4)
00032B2A <AmiBlitz3.ab3@25022> RTS
00032B2E <AmiBlitz3.ab3@25024>  'la12 CMP.b #1,d2
00032B32 <AmiBlitz3.ab3@25025>    BNE.s 'la10
00032B38 <AmiBlitz3.ab3@25026>     MOVE.w #$1540,-4(a4)
00032B3A <AmiBlitz3.ab3@25027> RTS
00032B40 <AmiBlitz3.ab3@25030>   CLR.b optiarray
00032B44 <AmiBlitz3.ab3@25031>    CMP.b #$1,D2
00032B48 <AmiBlitz3.ab3@25032>    BEQ.w JL_0_E0AC
00032B4C <AmiBlitz3.ab3@25033>    BSR.w varalign
00032B50 <AmiBlitz3.ab3@25034>    CMP.b #$3,D2
00032B54 <AmiBlitz3.ab3@25035>    BCC.w writevarlong
00032B5A <AmiBlitz3.ab3@25036>    TST.b fast                                              ;optiimmi
00032B5E <AmiBlitz3.ab3@25037>    BEQ 'l10b
00032B64 <AmiBlitz3.ab3@25042>    MOVE.l destpointer,a0
00032B6A <AmiBlitz3.ab3@25043>    SUB.l imm_addr,a0
00032B70 <AmiBlitz3.ab3@25044>    CMP.l #4,a0
00032B74 <AmiBlitz3.ab3@25045>    BNE 'l10
00032B7A <AmiBlitz3.ab3@25046>    CLR.l imm_addr
00032B80 <AmiBlitz3.ab3@25047>    MOVE.l destpointer,a4
00032B84 <AmiBlitz3.ab3@25048>    OR.w #$107c,d1
00032B88 <AmiBlitz3.ab3@25049>    MOVE.w d1,-4(a4)
00032B8A <AmiBlitz3.ab3@25050>     MOVE.w D3,D1
00032B90 <AmiBlitz3.ab3@25051> JMP writeword
00032B96 <AmiBlitz3.ab3@25054>   MOVE.l destpointer,a0
00032B9C <AmiBlitz3.ab3@25055>   SUB.l load_var_addr,a0
00032BA2 <AmiBlitz3.ab3@25056>   CMP.l #4,a0
00032BA6 <AmiBlitz3.ab3@25057>   BNE 'l10b
00032BAC <AmiBlitz3.ab3@25058>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00032BB0 <AmiBlitz3.ab3@25059>   BNE 'l10b
00032BB6 <AmiBlitz3.ab3@25061>   CLR.l load_var_addr
00032BBC <AmiBlitz3.ab3@25062>   MOVE.l destpointer,a4
00032BC0 <AmiBlitz3.ab3@25063>   OR.w #$102d,d1
00032BC4 <AmiBlitz3.ab3@25064>   MOVE.w d1,-4(a4)
00032BC6 <AmiBlitz3.ab3@25065>   MOVE.w d3,d1
00032BCC <AmiBlitz3.ab3@25066> JMP writeword
00032BD0 <AmiBlitz3.ab3@25069>   ORI.w #$1000,D1                                          ;word
00032BD4 <AmiBlitz3.ab3@25070> BRA.w writestorevar
00032BDA <AmiBlitz3.ab3@25074>    TST.b fast                                              ;optiimmi
00032BDE <AmiBlitz3.ab3@25075>    BEQ 'l10b
00032BE4 <AmiBlitz3.ab3@25080>    MOVE.l destpointer,a0
00032BEA <AmiBlitz3.ab3@25081>    SUB.l imm_addr,a0
00032BF0 <AmiBlitz3.ab3@25082>    CMP.l #4,a0
00032BF4 <AmiBlitz3.ab3@25083>    BNE 'l10
00032BFA <AmiBlitz3.ab3@25084>    CLR.l imm_addr
00032C00 <AmiBlitz3.ab3@25085>    MOVE.l destpointer,a4
00032C04 <AmiBlitz3.ab3@25086>    OR.w #$7c,d1
00032C08 <AmiBlitz3.ab3@25087>    EORI #$3000,d1
00032C0C <AmiBlitz3.ab3@25088>    MOVE.w d1,-4(a4)
00032C0E <AmiBlitz3.ab3@25089>       MOVE.w D3,D1
00032C14 <AmiBlitz3.ab3@25090> JMP writeword
00032C1A <AmiBlitz3.ab3@25093>   MOVE.l destpointer,a0
00032C20 <AmiBlitz3.ab3@25094>   SUB.l load_var_addr,a0
00032C26 <AmiBlitz3.ab3@25095>   CMP.l #4,a0
00032C2A <AmiBlitz3.ab3@25096>   BNE 'l10b
00032C30 <AmiBlitz3.ab3@25097>   CLR.l load_var_addr
00032C36 <AmiBlitz3.ab3@25098>   MOVE.l destpointer,a4
00032C3C <AmiBlitz3.ab3@25099>    CMP.w #$1b6d,-4(a4)
00032C40 <AmiBlitz3.ab3@25100>    BNE 'l10b
00032C44 <AmiBlitz3.ab3@25101>    OR.w #$2d,d1
00032C48 <AmiBlitz3.ab3@25102>    EORI #$3000,d1
00032C4C <AmiBlitz3.ab3@25103>    MOVE.w d1,-4(a4)
00032C4E <AmiBlitz3.ab3@25104>   MOVE.w d3,d1
00032C54 <AmiBlitz3.ab3@25105> JMP writeword
00032C5A <AmiBlitz3.ab3@25108>   ADDQ.w #1,pcodd                                          ;byte
00032C5E <AmiBlitz3.ab3@25109>   EORI.w #$3000,D1
00032C64 <AmiBlitz3.ab3@25112>   JSR writeword
00032C68 <AmiBlitz3.ab3@25113>   BTST #$7,D1
00032C6C <AmiBlitz3.ab3@25114>    BNE JL_0_E0C6
00032C6E <AmiBlitz3.ab3@25115>   MOVE.w D3,D1
00032C74 <AmiBlitz3.ab3@25116> JMP writeword
00032C7A <AmiBlitz3.ab3@25119>    TST.b fast                                              ;optiimmi
00032C7E <AmiBlitz3.ab3@25120>    BEQ 'l10b
00032C84 <AmiBlitz3.ab3@25124>    MOVE.l destpointer,a0
00032C8A <AmiBlitz3.ab3@25125>    SUB.l imm_addr,a0
00032C90 <AmiBlitz3.ab3@25126>    CMP.l #6,a0
00032C94 <AmiBlitz3.ab3@25127>    BNE 'l10
00032C9A <AmiBlitz3.ab3@25128>    CLR.l imm_addr
00032CA0 <AmiBlitz3.ab3@25129>    MOVE.l destpointer,a4
00032CA4 <AmiBlitz3.ab3@25130>    OR.w #$7c,d1
00032CA8 <AmiBlitz3.ab3@25131>    MOVE.w d1,-6(a4)
00032CAA <AmiBlitz3.ab3@25132>     MOVE.w D3,D1
00032CB0 <AmiBlitz3.ab3@25133> JMP writeword
00032CB6 <AmiBlitz3.ab3@25136>   MOVE.l destpointer,a0
00032CBC <AmiBlitz3.ab3@25137>   SUB.l load_var_addr,a0
00032CC2 <AmiBlitz3.ab3@25138>   CMP.l #4,a0
00032CC6 <AmiBlitz3.ab3@25139>   BNE 'l10b
00032CCC <AmiBlitz3.ab3@25140>   CLR.l load_var_addr
00032CD2 <AmiBlitz3.ab3@25141>   MOVE.l destpointer,a4
00032CD8 <AmiBlitz3.ab3@25142>   CMP.w #$245f,-2(a4)
00032CDC <AmiBlitz3.ab3@25143>   BEQ 'l10b
00032CE0 <AmiBlitz3.ab3@25144>   OR.w #$28,d1
00032CE4 <AmiBlitz3.ab3@25145>   OR.w d1,-4(a4)
00032CEA <AmiBlitz3.ab3@25146>   CMP.w #$2b6d,-4(a4)
00032CEE <AmiBlitz3.ab3@25147>   BNE 'd1
00032CF2 <AmiBlitz3.ab3@25148>   CMP.w -2(a4),d3
00032CF6 <AmiBlitz3.ab3@25149>   BNE 'd1
00032CFC <AmiBlitz3.ab3@25150>   SUBQ.l #4,destpointer
00032CFE <AmiBlitz3.ab3@25151> RTS
00032D00 <AmiBlitz3.ab3@25154>   MOVE.w d3,d1
00032D06 <AmiBlitz3.ab3@25155> JMP writeword
00032D0C <AmiBlitz3.ab3@25158>   JSR writeword
00032D10 <AmiBlitz3.ab3@25159>   BTST #$7,D1
00032D14 <AmiBlitz3.ab3@25160>    BNE.b JL_0_E0C6
00032D16 <AmiBlitz3.ab3@25161>   MOVE.w D3,D1
00032D1C <AmiBlitz3.ab3@25162> JMP writeword
00032D1E <AmiBlitz3.ab3@25165> RTS
00032D20 <AmiBlitz3.ab3@25169>   MOVE.w D1,-(A7)
00032D24 <AmiBlitz3.ab3@25170>   MOVE.w pcodd(PC),D1
00032D26 <AmiBlitz3.ab3@25171>   LSR.w #1,D1
00032D2A <AmiBlitz3.ab3@25172>    BCC.b JL_0_E0E2
00032D30 <AmiBlitz3.ab3@25173>   CLR.w pcodd
00032D36 <AmiBlitz3.ab3@25174>   MOVE.w add1a2,D1
00032D3C <AmiBlitz3.ab3@25175>    JSR writeword
00032D3E <AmiBlitz3.ab3@25178>   MOVE.w (A7)+,D1
00032D40 <AmiBlitz3.ab3@25179> RTS
00032D42 <AmiBlitz3.ab3@25183> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00032D44 <AmiBlitz3.ab3@25186> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00032D46 <AmiBlitz3.ab3@25187> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00032D48 <AmiBlitz3.ab3@25188> listsize:  Ds.w 1
00032D4E <AmiBlitz3.ab3@25192>   ADDQ.w #1,regnum
00032D56 <AmiBlitz3.ab3@25193>   MOVE.b #1,nowdeclare
00032D5C <AmiBlitz3.ab3@25194>   CLR.b dimkeep
00032D64 <AmiBlitz3.ab3@25195>    CMP.l #"KEEP",-1(a5)
00032D68 <AmiBlitz3.ab3@25196>   BNE 'nokeep
00032D6E <AmiBlitz3.ab3@25197>   CMP.b #" ",3(a5)
00032D72 <AmiBlitz3.ab3@25198>   BNE 'nokeep
00032D74 <AmiBlitz3.ab3@25199>   ADDQ.l #3,a5
00032D78 <AmiBlitz3.ab3@25202>     CMP.b #" ",(a5)
00032D7C <AmiBlitz3.ab3@25203>     BNE '1
00032D7E <AmiBlitz3.ab3@25204>    ADDQ #1,a5
00032D82 <AmiBlitz3.ab3@25205> BRA '2
00032D88 <AmiBlitz3.ab3@25208>   MOVE.l a5,lastsourcepos
00032D90 <AmiBlitz3.ab3@25209>   MOVE.b #1,dimkeep
00032D94 <AmiBlitz3.ab3@25217>   MOVE.w #$FF9A,D1
00032D9A <AmiBlitz3.ab3@25218>   JSR uselib
00032DA0 <AmiBlitz3.ab3@25221>   CLR.w listadd
00032DA4 <AmiBlitz3.ab3@25222>   CMP.w #-$7F4D,D0
00032DA8 <AmiBlitz3.ab3@25223>    BNE.w JL_0_E11E
00032DB0 <AmiBlitz3.ab3@25224>   MOVE.w #$0008,listadd
00032DB4 <AmiBlitz3.ab3@25225>   MOVE.w #$FFFA,D1
00032DBA <AmiBlitz3.ab3@25226>    JSR uselib
00032DC0 <AmiBlitz3.ab3@25227>    JSR get1bytemain
00032DC6 <AmiBlitz3.ab3@25230>   CLR.w nonew
00032DCC <AmiBlitz3.ab3@25231>    JSR getparameter
00032DD4 <AmiBlitz3.ab3@25232>   BTST #$1,flagmask+1
00032DD8 <AmiBlitz3.ab3@25233>    BEQ.w JUMP_syntaxerr
00032DDE <AmiBlitz3.ab3@25234>    JSR JL_0_8E3C
00032DE4 <AmiBlitz3.ab3@25235>   MOVE.w notshared,D1
00032DE8 <AmiBlitz3.ab3@25236>    BNE.w JL_0_E198
00032DF0 <AmiBlitz3.ab3@25237>   MOVE.w $8(A3),temp1
00032DF6 <AmiBlitz3.ab3@25238>   MOVE.w proceduremode,D2
00032DFA <AmiBlitz3.ab3@25239>    BNE.w JL_0_E176
00032E00 <AmiBlitz3.ab3@25240>   MOVE.w globalvarpointer,-(A7)
00032E08 <AmiBlitz3.ab3@25241>   MOVE.w $4(A3),globalvarpointer
00032E0E <AmiBlitz3.ab3@25242>   ADDQ.w #4,globalvarpointer
00032E12 <AmiBlitz3.ab3@25243>    BSR.w write_dim_code
00032E18 <AmiBlitz3.ab3@25244>   MOVE.w (A7)+,globalvarpointer
00032E1C <AmiBlitz3.ab3@25245> BRA.w JL_0_E1BA
00032E22 <AmiBlitz3.ab3@25256>   MOVE.w globalvarpointer,-(A7)
00032E28 <AmiBlitz3.ab3@25257>             MOVE.w proceduremode,-(a7)
00032E2E <AmiBlitz3.ab3@25258>             CLR.w proceduremode
00032E36 <AmiBlitz3.ab3@25259>   MOVE.w $4(A3),globalvarpointer
00032E3C <AmiBlitz3.ab3@25260>   ADDQ.w #4,globalvarpointer
00032E40 <AmiBlitz3.ab3@25261>    BSR.w write_dim_code
00032E46 <AmiBlitz3.ab3@25262>    MOVE.w (a7)+,proceduremode
00032E4C <AmiBlitz3.ab3@25263>   MOVE.w (A7)+,globalvarpointer
00032E50 <AmiBlitz3.ab3@25264> BRA.w JL_0_E1BA
00032E58 <AmiBlitz3.ab3@25267>   MOVE.w #$FFFF,temp1
00032E5C <AmiBlitz3.ab3@25268>   MOVE.w listadd(PC),D1
00032E60 <AmiBlitz3.ab3@25269>    BEQ.w JL_0_E1B6
00032E68 <AmiBlitz3.ab3@25270>   MOVE.w #$4000,temp1
00032E6E <AmiBlitz3.ab3@25271>   BSET #$0,$6(A3)
00032E74 <AmiBlitz3.ab3@25274>         TST.w proceduremode
00032E78 <AmiBlitz3.ab3@25275>        BNE 'l1
00032E7E <AmiBlitz3.ab3@25276>        MOVE.w locvaroff,-(a7)
00032E82 <AmiBlitz3.ab3@25279>   BSR.w write_dim_code
00032E88 <AmiBlitz3.ab3@25280>         TST.w proceduremode
00032E8C <AmiBlitz3.ab3@25281>         BNE JL_0_E1BA
00032E92 <AmiBlitz3.ab3@25282>        MOVE.w (A7)+,locvaroff
00032E98 <AmiBlitz3.ab3@25285>   JSR get1bytemain
00032E9C <AmiBlitz3.ab3@25286>   CMP.w #$2C,D0
00032EA0 <AmiBlitz3.ab3@25287>    BNE.w JL_0_E1CE
00032EA6 <AmiBlitz3.ab3@25288>    JSR get1bytemain
00032EAA <AmiBlitz3.ab3@25289> BRA.w JL_0_E0FC
00032EAC <AmiBlitz3.ab3@25292> RTS
00032EB4 <AmiBlitz3.ab3@25295>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00032EBA <AmiBlitz3.ab3@25296>   MOVE.w beginarr,D1
00032EC0 <AmiBlitz3.ab3@25297>    JSR writeword
00032EC2 <AmiBlitz3.ab3@25298>   MOVEQ.l #$00,D1
00032EC8 <AmiBlitz3.ab3@25299>    JSR writeword
00032ECA <AmiBlitz3.ab3@25300>   MOVEQ.l #$04,D1
00032ED2 <AmiBlitz3.ab3@25301>   BTST #$0,flagmask+1
00032ED6 <AmiBlitz3.ab3@25302>    BNE.w write_dim_code__pointer
00032EDA <AmiBlitz3.ab3@25303>   MOVE.w $8(A2),D1
00032EDE <AmiBlitz3.ab3@25306>   ADD.w listadd(PC),D1                                     ;size of one element.
00032EE4 <AmiBlitz3.ab3@25307>   MOVE.w D1,listsize
00032EEA <AmiBlitz3.ab3@25308>    JSR writeword
00032EF0 <AmiBlitz3.ab3@25309>   CLR.w temp2                                              ;# dim's got
00032EF2 <AmiBlitz3.ab3@25310>   MOVE.l A3,-(A7)
00032EF8 <AmiBlitz3.ab3@25313>   ADDQ.w #1,temp2
00032EFA <AmiBlitz3.ab3@25314>   MOVEQ.l #$03,D2                                          ;get word
00032F00 <AmiBlitz3.ab3@25315>   MOVE.w notshared,-(a7)
00032F06 <AmiBlitz3.ab3@25316>    JSR eval
00032F0C <AmiBlitz3.ab3@25317>   MOVE.w (a7)+,notshared
00032F12 <AmiBlitz3.ab3@25318>   TST.b debugmode
00032F16 <AmiBlitz3.ab3@25319>    BEQ.w write_dim_code__norerr0
00032F1A <AmiBlitz3.ab3@25320>   MOVE.w #$C30F,D1
00032F1E <AmiBlitz3.ab3@25326>       MOVE.w #$5281,d1
00032F24 <AmiBlitz3.ab3@25327>       JSR writeword
00032F2A <AmiBlitz3.ab3@25328>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00032F30 <AmiBlitz3.ab3@25329>       JSR writelong
00032F36 <AmiBlitz3.ab3@25330>   MOVE.w proceduremode,D2
00032F3A <AmiBlitz3.ab3@25331>    BEQ.w write_dim_code__global
00032F40 <AmiBlitz3.ab3@25332>   SUBQ.w #4,locvaroff
00032F4A <AmiBlitz3.ab3@25333>   MOVE.w locvaroff,putarr+2
00032F4E <AmiBlitz3.ab3@25334> BRA.w write_dim_code__doit
00032F54 <AmiBlitz3.ab3@25337> JMP syntaxerr
00032F5E <AmiBlitz3.ab3@25340>   MOVE.w globalvarpointer,putarr+2
00032F64 <AmiBlitz3.ab3@25341>   ADDQ.w #4,globalvarpointer
00032F6A <AmiBlitz3.ab3@25344>   TST.b dimkeep
00032F6E <AmiBlitz3.ab3@25345>            BEQ write_dim_code__doit_l1
00032F70 <AmiBlitz3.ab3@25346>       MOVEQ #0,d1
00032F76 <AmiBlitz3.ab3@25347>       MOVE.w putarr+2,d1
00032F7C <AmiBlitz3.ab3@25348>       OR.l  #$222d0000,d1
00032F82 <AmiBlitz3.ab3@25349>       MOVE.w proceduremode,D2
00032F86 <AmiBlitz3.ab3@25350>       BEQ write_dim_code__doit_l2
00032F8C <AmiBlitz3.ab3@25351>       TST.w notshared
00032F90 <AmiBlitz3.ab3@25352>       BEQ write_dim_code__doit_l2
00032F96 <AmiBlitz3.ab3@25353>       SUB.l #$00010000,d1
00032F9C <AmiBlitz3.ab3@25356>   JSR writelong
00032FA2 <AmiBlitz3.ab3@25359>   MOVE.l putarr,D1
00032FA8 <AmiBlitz3.ab3@25360>       TST.w notshared
00032FAC <AmiBlitz3.ab3@25361>       BNE write_dim_code__doit_l1a
00032FB2 <AmiBlitz3.ab3@25362>       JSR writelong
00032FB6 <AmiBlitz3.ab3@25363> BRA write_dim_code__doit_l4
00032FBC <AmiBlitz3.ab3@25366>   JSR pokela5d
00032FC0 <AmiBlitz3.ab3@25369>   CMP.w #$2C,D0
00032FC4 <AmiBlitz3.ab3@25370>    BEQ.w write_dim_code__loop
00032FC8 <AmiBlitz3.ab3@25371>   CMP.w #$29,D0
00032FCC <AmiBlitz3.ab3@25372>    BNE.w JUMP_syntaxerr
00032FCE <AmiBlitz3.ab3@25373>   MOVEA.l (A7)+,A3
00032FD4 <AmiBlitz3.ab3@25374>   MOVE.w temp1,D1
00032FD8 <AmiBlitz3.ab3@25375>    BMI.w write_dim_code__nocare
00032FDC <AmiBlitz3.ab3@25379>   BTST #$E,D1
00032FE0 <AmiBlitz3.ab3@25380>    BEQ.w write_dim_code__notl
00032FE8 <AmiBlitz3.ab3@25381>   CMPI.w #$1,temp2
00032FEC <AmiBlitz3.ab3@25382>    BNE.w JUMP_redimerr
00032FF0 <AmiBlitz3.ab3@25383> BRA.w write_dim_code__nocare
00032FF6 <AmiBlitz3.ab3@25386> JMP redimerr
00032FFC <AmiBlitz3.ab3@25389>   CMP.w temp2,D1
00033000 <AmiBlitz3.ab3@25390>    BNE.w JUMP_redimerr                                      ;range too long
00033006 <AmiBlitz3.ab3@25393>   LEA globalvarpointer,A0
0003300C <AmiBlitz3.ab3@25394>   MOVE.w proceduremode,D1
00033010 <AmiBlitz3.ab3@25395>   BEQ.w write_dim_code__gskip
00033016 <AmiBlitz3.ab3@25396>   LEA locvaroff,A0
0003301C <AmiBlitz3.ab3@25399>   MOVE.W  extraword,(A0)
00033020 <AmiBlitz3.ab3@25400>   BRA.W   write_dim_code__care
00033028 <AmiBlitz3.ab3@25403>   MOVE.w temp2,$8(A3)                                      ;set # dim's
0003302E <AmiBlitz3.ab3@25406>   LEA doarr,A0
00033034 <AmiBlitz3.ab3@25407>   MOVE.w $4(A3),$2(A0)
0003303C <AmiBlitz3.ab3@25408>   MOVE.w putarr+2,$6(A0)
0003303E <AmiBlitz3.ab3@25409>   MOVE.l (A0)+,D1
00033044 <AmiBlitz3.ab3@25410>    JSR writelong
00033046 <AmiBlitz3.ab3@25411>   MOVE.l (A0),D1
0003304C <AmiBlitz3.ab3@25412>    JSR writelong
00033052 <AmiBlitz3.ab3@25413>    TST.b dimkeep
00033056 <AmiBlitz3.ab3@25414>   BNE write_dim_code__care_l3
0003305A <AmiBlitz3.ab3@25417>   MOVE.w #$C400,D1
0003305E <AmiBlitz3.ab3@25418> BRA write_dim_code__care_l2
00033062 <AmiBlitz3.ab3@25421>   MOVE.w #$C405,d1
00033068 <AmiBlitz3.ab3@25424>   MOVE.w proceduremode,D2
0003306C <AmiBlitz3.ab3@25425>    BEQ.w write_dim_code__isg
00033072 <AmiBlitz3.ab3@25426>    TST.w notshared
00033076 <AmiBlitz3.ab3@25427>    BEQ write_dim_code__isg
00033078 <AmiBlitz3.ab3@25428>   ADDQ.w #1,D1
0003307C <AmiBlitz3.ab3@25431>   MOVE.w listadd(PC),D2
00033080 <AmiBlitz3.ab3@25432>    BEQ.w write_dim_code__isrg
00033082 <AmiBlitz3.ab3@25433>   MOVE.w D1,-(A7)
00033086 <AmiBlitz3.ab3@25434>   MOVE.w setles(PC),D1
0003308C <AmiBlitz3.ab3@25435>    JSR writeword
00033090 <AmiBlitz3.ab3@25436>   MOVE.w listsize(PC),D1
00033096 <AmiBlitz3.ab3@25437>    JSR writeword
00033098 <AmiBlitz3.ab3@25438>   MOVE.w (A7)+,D1
0003309A <AmiBlitz3.ab3@25439>   ADDQ.w #3,D1
0003309E <AmiBlitz3.ab3@25442> BRA.w Atokejsr
000330A4 <AmiBlitz3.ab3@25449>     MOVE.l #$f23c4400,d1
000330AA <AmiBlitz3.ab3@25451>   MOVE.w regnum,d0
000330AC <AmiBlitz3.ab3@25452>   ASL.w #7,d0
000330AE <AmiBlitz3.ab3@25453>   OR.w d0,d1
000330B4 <AmiBlitz3.ab3@25454>   JSR writelong
000330BA <AmiBlitz3.ab3@25460>     MOVE.l #$40490fd9,d1
000330C0 <AmiBlitz3.ab3@25462>   JSR writelong
000330C6 <AmiBlitz3.ab3@25463> JMP get1bytemain
000330CA <AmiBlitz3.ab3@25467> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
000330CE <AmiBlitz3.ab3@25474> vbr:                Ds.l 1
000330D0 <AmiBlitz3.ab3@25475> cfetchmode:         Ds.w 1                               ;1=fetching a constant
000330D6 <AmiBlitz3.ab3@25477> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
000330DA <AmiBlitz3.ab3@25481> constpcat:          Ds.l 1
000330DE <AmiBlitz3.ab3@25482> constlibat:         Ds.l 1
000330E2 <AmiBlitz3.ab3@25483> constmaxpc:         Dc.l $400
000330E6 <AmiBlitz3.ab3@25485> stacksize:          Dc.l 32768                           ;stackfuck org source
000330EA <AmiBlitz3.ab3@25486> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
000330EE <AmiBlitz3.ab3@25487> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
000330F2 <AmiBlitz3.ab3@25488> lastrestype:        Dc.l newtype_string
000330F4 <AmiBlitz3.ab3@25489> rescnt:             Ds.w 1                               ;# resident
000330F6 <AmiBlitz3.ab3@25490> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
000330FA <AmiBlitz3.ab3@25491> resat:              Dc.l residents_table                 ;??looks like not used anymore??
000330FC <AmiBlitz3.ab3@25492> linedone:           Ds.w 1
00033112 <AmiBlitz3.ab3@25493> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00033116 <AmiBlitz3.ab3@25502>   Dc.l 0                                        ; bytetobyte
0003311A <AmiBlitz3.ab3@25503>   Dc.l convert_byte_to_word                     ; bytetoword
0003311E <AmiBlitz3.ab3@25504>   Dc.l convert_byte_to_long                     ; bytetolong
00033122 <AmiBlitz3.ab3@25505>   Dc.l convert_byte_to_quick                    ; bytetoquick
00033126 <AmiBlitz3.ab3@25506>   Dc.l convert_byte_to_float                    ; bytetofloat
0003312A <AmiBlitz3.ab3@25507>   Dc.l convert_byte_to_long                     ; bytetolong
0003312E <AmiBlitz3.ab3@25508>   Dc.l error_convert_types                      ; noconerr
00033132 <AmiBlitz3.ab3@25511>   Dc.l convert_word_to_byte                     ; wordtobyte
00033136 <AmiBlitz3.ab3@25512>   Dc.l 0                                        ; wordtoword
0003313A <AmiBlitz3.ab3@25513>   Dc.l convert_word_to_long                     ; wordtolong
0003313E <AmiBlitz3.ab3@25514>   Dc.l convert_word_to_quick                    ; wordtoquick
00033142 <AmiBlitz3.ab3@25515>   Dc.l convert_word_to_float                    ; wordtofloat
00033146 <AmiBlitz3.ab3@25516>   Dc.l convert_word_to_long                     ; wordtolong
0003314A <AmiBlitz3.ab3@25517>   Dc.l error_convert_types                      ; noconerr
0003314E <AmiBlitz3.ab3@25520>   Dc.l convert_long_to_byte                     ; longtobyte
00033152 <AmiBlitz3.ab3@25521>   Dc.l convert_long_to_word                     ; longtoword
00033156 <AmiBlitz3.ab3@25522>   Dc.l 0                                        ; longtolong
0003315A <AmiBlitz3.ab3@25523>   Dc.l convert_long_to_quick                    ; longtoquick
0003315E <AmiBlitz3.ab3@25524>   Dc.l convert_long_to_float                    ; longtofloat
00033162 <AmiBlitz3.ab3@25525>   Dc.l 0                                        ; longtolong
00033166 <AmiBlitz3.ab3@25526>   Dc.l error_convert_types                      ; noconerr
0003316A <AmiBlitz3.ab3@25529>   Dc.l convert_quick_to_byte                    ; quicktobyte
0003316E <AmiBlitz3.ab3@25530>   Dc.l convert_quick_to_word                    ; quicktoword
00033172 <AmiBlitz3.ab3@25531>   Dc.l convert_quick_to_long                    ; quicktolong
00033176 <AmiBlitz3.ab3@25532>   Dc.l 0                                        ; quicktoquick
0003317A <AmiBlitz3.ab3@25533>   Dc.l convert_quick_to_float                   ; quicktofloat
0003317E <AmiBlitz3.ab3@25534>   Dc.l convert_quick_to_long                    ; quicktolong
00033182 <AmiBlitz3.ab3@25535>   Dc.l error_convert_types                      ; noconerr
00033186 <AmiBlitz3.ab3@25538>   Dc.l convert_float_to_byte                    ; floattobyte
0003318A <AmiBlitz3.ab3@25539>   Dc.l convert_float_to_word                    ; floattoword
0003318E <AmiBlitz3.ab3@25540>   Dc.l convert_float_to_long                    ; floattolong
00033192 <AmiBlitz3.ab3@25541>   Dc.l convert_float_to_quick                   ; floattoquick
00033196 <AmiBlitz3.ab3@25542>   Dc.l 0                                        ; floattofloat
0003319A <AmiBlitz3.ab3@25543>   Dc.l convert_float_to_long                    ; floattolong
0003319E <AmiBlitz3.ab3@25544>   Dc.l error_convert_types                      ; noconerr
000331A2 <AmiBlitz3.ab3@25547>   Dc.l convert_long_to_byte                     ; longtobyte
000331A6 <AmiBlitz3.ab3@25548>   Dc.l convert_long_to_word                     ; longtoword
000331AA <AmiBlitz3.ab3@25549>   Dc.l 0                                        ; longtolong
000331AE <AmiBlitz3.ab3@25550>   Dc.l convert_long_to_quick                    ; longtoquick
000331B2 <AmiBlitz3.ab3@25551>   Dc.l convert_long_to_float                    ; longtofloat
000331B6 <AmiBlitz3.ab3@25552>   Dc.l 0                                        ; longtolong
000331BA <AmiBlitz3.ab3@25553>   Dc.l error_convert_types                      ; noconerr
000331BE <AmiBlitz3.ab3@25556>   Dc.l error_convert_types                      ; noconerr
000331C2 <AmiBlitz3.ab3@25557>   Dc.l error_convert_types                      ; noconerr
000331C6 <AmiBlitz3.ab3@25558>   Dc.l string_to_long                           ; stringtolong
000331CA <AmiBlitz3.ab3@25559>   Dc.l error_convert_types                      ; noconerr
000331CE <AmiBlitz3.ab3@25560>   Dc.l error_convert_types                      ; noconerr
000331D2 <AmiBlitz3.ab3@25561>   Dc.l string_to_long                           ; stringtolong
000331D6 <AmiBlitz3.ab3@25562>   Ds.l 1
000331D8 <AmiBlitz3.ab3@25568>   Dc.b $00,$2B                                  ;+ ; add
000331DC <AmiBlitz3.ab3@25569>   Dc.l do_plus_byte                             ;doplusb
000331E0 <AmiBlitz3.ab3@25570>   Dc.l do_plus_word                             ;doplusw
000331E4 <AmiBlitz3.ab3@25571>   Dc.l do_plus_long                             ;doplusl
000331E8 <AmiBlitz3.ab3@25572>   Dc.l do_plus_long                             ;doplusl
000331EC <AmiBlitz3.ab3@25573>   Dc.l do_plus_float                            ;doplusf
000331F0 <AmiBlitz3.ab3@25574>   Ds.l 1
000331F4 <AmiBlitz3.ab3@25575>   Dc.l add_strings                              ;addstrings
000331F6 <AmiBlitz3.ab3@25576>   Dc.b $0B,$B8
000331F8 <AmiBlitz3.ab3@25578>   Dc.b $00,$2D                                  ;- ; sub
000331FC <AmiBlitz3.ab3@25579>   Dc.l do_minus_byte                            ;dominusb
00033200 <AmiBlitz3.ab3@25580>   Dc.l do_minus_word                            ;dominusw
00033204 <AmiBlitz3.ab3@25581>   Dc.l do_minus_long                            ;dominusl
00033208 <AmiBlitz3.ab3@25582>   Dc.l do_minus_long                            ;dominusl
0003320C <AmiBlitz3.ab3@25583>   Dc.l do_minus_float                           ;dominusf
00033214 <AmiBlitz3.ab3@25584>   Ds.l 2
00033216 <AmiBlitz3.ab3@25585>   Dc.b $0B,$B8
00033218 <AmiBlitz3.ab3@25587>   Dc.b $00,$2A                                  ;* ; mul
0003321C <AmiBlitz3.ab3@25588>   Dc.l do_times_byte                            ;dotimesb
00033220 <AmiBlitz3.ab3@25589>   Dc.l do_times_word                            ;dotimesw
00033224 <AmiBlitz3.ab3@25590>   Dc.l do_times_long                            ;dotimesl
00033228 <AmiBlitz3.ab3@25591>   Dc.l do_times_quick                           ;dotimesq
0003322C <AmiBlitz3.ab3@25592>   Dc.l do_times_float                           ;dotimesf
00033234 <AmiBlitz3.ab3@25593>   Ds.l 2
00033236 <AmiBlitz3.ab3@25594>   Dc.b $0F,$A0
00033238 <AmiBlitz3.ab3@25596>   Dc.b $00,$2F                                  ;/ ; div
0003323C <AmiBlitz3.ab3@25597>   Dc.l do_Div_byte                              ;dodivb
00033240 <AmiBlitz3.ab3@25598>   Dc.l do_Div_word                              ;dodivb
00033244 <AmiBlitz3.ab3@25599>   Dc.l do_Div_long                              ;dodivl
00033248 <AmiBlitz3.ab3@25600>   Dc.l do_Div_quick                             ;dodivq
0003324C <AmiBlitz3.ab3@25601>   Dc.l do_Div_float                             ;dodivf
00033254 <AmiBlitz3.ab3@25602>   Ds.l 2
00033256 <AmiBlitz3.ab3@25603>   Dc.b $0F,$A0
00033258 <AmiBlitz3.ab3@25605>   Dc.b $00,$26                                  ;& ; & int
0003325C <AmiBlitz3.ab3@25606>   Dc.l do_AND_byte                              ;doandb
00033260 <AmiBlitz3.ab3@25607>   Dc.l do_AND_word                              ;doandw
00033264 <AmiBlitz3.ab3@25608>   Dc.l do_AND_long                              ;doandl
00033268 <AmiBlitz3.ab3@25609>   Dc.l do_AND_long                              ;doandl
00033274 <AmiBlitz3.ab3@25610>   Ds.l 3
00033276 <AmiBlitz3.ab3@25611>   Dc.b $13,$88
00033278 <AmiBlitz3.ab3@25613>   Dc.b $00,$7C                                  ;| ;or int ;
0003327C <AmiBlitz3.ab3@25614>   Dc.l do_OR_byte                               ;doorb
00033280 <AmiBlitz3.ab3@25615>   Dc.l do_OR_word                               ;doorw
00033284 <AmiBlitz3.ab3@25616>   Dc.l do_OR_long                               ;doorl
00033288 <AmiBlitz3.ab3@25617>   Dc.l do_OR_long                               ;doorl
00033294 <AmiBlitz3.ab3@25618>   Ds.l 3
00033296 <AmiBlitz3.ab3@25619>   Dc.b $13,$88
00033298 <AmiBlitz3.ab3@25621>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
0003329C <AmiBlitz3.ab3@25622>   Dc.l do_AND_byte                              ;doandb
000332A0 <AmiBlitz3.ab3@25623>   Dc.l do_AND_word                              ;doandw
000332A4 <AmiBlitz3.ab3@25624>   Dc.l do_AND_long                              ;doandl
000332A8 <AmiBlitz3.ab3@25625>   Dc.l do_AND_long                              ;doandl
000332B4 <AmiBlitz3.ab3@25626>   Ds.l 3
000332B6 <AmiBlitz3.ab3@25627>   Dc.b $03,$E8
000332B8 <AmiBlitz3.ab3@25629>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
000332BC <AmiBlitz3.ab3@25630>   Dc.l do_OR_byte                               ;doorb
000332C0 <AmiBlitz3.ab3@25631>   Dc.l do_OR_word                               ;doorw
000332C4 <AmiBlitz3.ab3@25632>   Dc.l do_OR_long                               ;doorl
000332C8 <AmiBlitz3.ab3@25633>   Dc.l do_OR_long                               ;doorl
000332D4 <AmiBlitz3.ab3@25634>   Ds.l 3
000332D6 <AmiBlitz3.ab3@25635>   Dc.b $03,$E8
000332D8 <AmiBlitz3.ab3@25637>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
000332DC <AmiBlitz3.ab3@25638>   Dc.l do_EOR_byte                              ;doeorb
000332E0 <AmiBlitz3.ab3@25639>   Dc.l do_EOR_word                              ;doeorw
000332E4 <AmiBlitz3.ab3@25640>   Dc.l do_EOR_long                              ;doeorl
000332E8 <AmiBlitz3.ab3@25641>   Dc.l do_EOR_long                              ;doeorl
000332F4 <AmiBlitz3.ab3@25642>   Ds.l 3
000332F6 <AmiBlitz3.ab3@25643>   Dc.b $03,$E8
000332F8 <AmiBlitz3.ab3@25645>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
000332FC <AmiBlitz3.ab3@25646>   Dc.l do_LSL                                   ;dolslb
00033300 <AmiBlitz3.ab3@25647>   Dc.l do_LSL                                   ;dolslw
00033304 <AmiBlitz3.ab3@25648>   Dc.l do_LSL                                   ;dolsll
00033308 <AmiBlitz3.ab3@25649>   Dc.l do_LSL                                   ;dolsll
00033314 <AmiBlitz3.ab3@25650>   Ds.l 3
00033316 <AmiBlitz3.ab3@25651>   Dc.b $17,$70
00033318 <AmiBlitz3.ab3@25653>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
0003331C <AmiBlitz3.ab3@25654>   Dc.l do_LSL                                   ;dolslb
00033320 <AmiBlitz3.ab3@25655>   Dc.l do_LSL                                   ;dolslw
00033324 <AmiBlitz3.ab3@25656>   Dc.l do_LSL                                   ;dolsll
00033328 <AmiBlitz3.ab3@25657>   Dc.l do_LSL                                   ;dolsll
00033334 <AmiBlitz3.ab3@25658>   Ds.l 3
00033336 <AmiBlitz3.ab3@25659>   Dc.b $17,$70
00033338 <AmiBlitz3.ab3@25661>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
0003333C <AmiBlitz3.ab3@25662>   Dc.l do_LSR                                   ;dolsrb
00033340 <AmiBlitz3.ab3@25663>   Dc.l do_LSR                                   ;dolsrw
00033344 <AmiBlitz3.ab3@25664>   Dc.l do_LSR                                   ;dolsrl
00033348 <AmiBlitz3.ab3@25665>   Dc.l do_LSR                                   ;dolsrl
00033354 <AmiBlitz3.ab3@25666>   Ds.l 3
00033356 <AmiBlitz3.ab3@25667>   Dc.b $17,$70
00033358 <AmiBlitz3.ab3@25669>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
0003335C <AmiBlitz3.ab3@25670>   Dc.l do_ASR                                   ;doasrb
00033360 <AmiBlitz3.ab3@25671>   Dc.l do_ASR                                   ;doasrw
00033364 <AmiBlitz3.ab3@25672>   Dc.l do_ASR                                   ;doasrl
00033368 <AmiBlitz3.ab3@25673>   Dc.l do_ASR                                   ;doasrl
00033374 <AmiBlitz3.ab3@25674>   Ds.l 3
00033376 <AmiBlitz3.ab3@25675>   Dc.b $17,$70
00033378 <AmiBlitz3.ab3@25677>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
0003337C <AmiBlitz3.ab3@25678>   Dc.l do_mod_byte                              ;domodb
00033380 <AmiBlitz3.ab3@25679>   Dc.l do_mod_word                              ;domodw
00033384 <AmiBlitz3.ab3@25680>   Dc.l do_mod_long                              ;domodl
00033388 <AmiBlitz3.ab3@25681>   Dc.l do_mod_quick                             ;domodq
0003338C <AmiBlitz3.ab3@25682>   Dc.l do_mod_float                             ;domodf
00033394 <AmiBlitz3.ab3@25683>   Ds.l 2
00033396 <AmiBlitz3.ab3@25684>   Dc.b $13,$88
00033398 <AmiBlitz3.ab3@25687>   Dc.b $00,$5E                                  ;^
0003339C <AmiBlitz3.ab3@25688>   Dc.l do_pow                                   ;dopow
000333A0 <AmiBlitz3.ab3@25689>   Dc.l do_pow                                   ;dopow
000333A4 <AmiBlitz3.ab3@25690>   Dc.l do_pow                                   ;dopow
000333A8 <AmiBlitz3.ab3@25691>   Dc.l do_pow                                   ;dopow
000333AC <AmiBlitz3.ab3@25692>   Dc.l do_pow                                   ;dopow
000333B4 <AmiBlitz3.ab3@25693>   Ds.l 2
000333B6 <AmiBlitz3.ab3@25694>   Dc.b $1B,$58                                  ;7000
000333B8 <AmiBlitz3.ab3@25697>   Dc.b $00,$3D                                  ;=
000333BC <AmiBlitz3.ab3@25698>   Dc.l do_equal_byte                            ;doeqb
000333C0 <AmiBlitz3.ab3@25699>   Dc.l do_equal_word                            ;doeqw
000333C4 <AmiBlitz3.ab3@25700>   Dc.l do_equal_long                            ;doeql
000333C8 <AmiBlitz3.ab3@25701>   Dc.l do_equal_long                            ;doeql
000333CC <AmiBlitz3.ab3@25702>   Dc.l do_equal_float                           ;doeqf
000333D0 <AmiBlitz3.ab3@25703>   Dc.l do_equal_long                            ;doeql
000333D4 <AmiBlitz3.ab3@25704>   Dc.l do_equal_string                          ;doeqs
000333D6 <AmiBlitz3.ab3@25705>   Dc.b $07,$D0                                  ;2000
000333D8 <AmiBlitz3.ab3@25708>   Dc.b $3C,$3E                                  ;<>
000333DC <AmiBlitz3.ab3@25709>   Dc.l do_not_equal_byte                        ;doneb
000333E0 <AmiBlitz3.ab3@25710>   Dc.l do_not_equal_word                        ;donew
000333E4 <AmiBlitz3.ab3@25711>   Dc.l do_not_equal_long                        ;donel
000333E8 <AmiBlitz3.ab3@25712>   Dc.l do_not_equal_long                        ;donel
000333EC <AmiBlitz3.ab3@25713>   Dc.l do_not_equal_float                       ;donef
000333F0 <AmiBlitz3.ab3@25714>   Dc.l do_not_equal_long                        ;donel
000333F4 <AmiBlitz3.ab3@25715>   Dc.l do_not_equal_string                      ;dones
000333F6 <AmiBlitz3.ab3@25716>   Dc.b $07,$D0                                  ;2000
000333F8 <AmiBlitz3.ab3@25719>   Dc.b $00,$3C                                  ;<
000333FC <AmiBlitz3.ab3@25720>   Dc.l do_littler_byte                          ;doltb
00033400 <AmiBlitz3.ab3@25721>   Dc.l do_littler_word                          ;doltw
00033404 <AmiBlitz3.ab3@25722>   Dc.l do_littler_long                          ;doltl
00033408 <AmiBlitz3.ab3@25723>   Dc.l do_littler_long                          ;doltl
0003340C <AmiBlitz3.ab3@25724>   Dc.l do_littler_float                         ;doltf
00033410 <AmiBlitz3.ab3@25725>   Dc.l do_littler_long                          ;doltl
00033414 <AmiBlitz3.ab3@25726>   Dc.l do_littler_string                        ;dolts
00033416 <AmiBlitz3.ab3@25727>   Dc.b $07,$D0                                  ;2000
00033418 <AmiBlitz3.ab3@25730>   Dc.b $3C,$3D                                  ;<=
0003341C <AmiBlitz3.ab3@25731>   Dc.l do_littler_equal_byte                    ;doleb
00033420 <AmiBlitz3.ab3@25732>   Dc.l do_littler_equal_word                    ;doleb
00033424 <AmiBlitz3.ab3@25733>   Dc.l do_littler_equal_long                    ;dolel
00033428 <AmiBlitz3.ab3@25734>   Dc.l do_littler_equal_long                    ;dolel
0003342C <AmiBlitz3.ab3@25735>   Dc.l do_littler_equal_float                   ;dolef
00033430 <AmiBlitz3.ab3@25736>   Dc.l do_littler_equal_long                    ;dolel
00033434 <AmiBlitz3.ab3@25737>   Dc.l do_littler_equal_string                  ;doles
00033436 <AmiBlitz3.ab3@25738>   Dc.b $07,$D0                                  ;2000
00033438 <AmiBlitz3.ab3@25741>   Dc.b $00,$3E                                  ;>
0003343C <AmiBlitz3.ab3@25742>   Dc.l do_greater_byte                          ;dogtb
00033440 <AmiBlitz3.ab3@25743>   Dc.l do_greater_word                          ;dogtw
00033444 <AmiBlitz3.ab3@25744>   Dc.l do_greater_long                          ;dogtl
00033448 <AmiBlitz3.ab3@25745>   Dc.l do_greater_long                          ;dogtl
0003344C <AmiBlitz3.ab3@25746>   Dc.l do_greater_float                         ;dogtf
00033450 <AmiBlitz3.ab3@25747>   Dc.l do_greater_long                          ;dogtl
00033454 <AmiBlitz3.ab3@25748>   Dc.l do_greater_string                        ;dogts
00033456 <AmiBlitz3.ab3@25749>   Dc.b $07,$D0                                  ;2000
00033458 <AmiBlitz3.ab3@25752>   Dc.b $3E,$3D                                  ;>=
0003345C <AmiBlitz3.ab3@25753>   Dc.l do_greater_equal_byte                    ;dogeb
00033460 <AmiBlitz3.ab3@25754>   Dc.l do_greater_equal_word                    ;dogew
00033464 <AmiBlitz3.ab3@25755>   Dc.l do_greater_equal_long                    ;dogel
00033468 <AmiBlitz3.ab3@25756>   Dc.l do_greater_equal_long                    ;dogel
0003346C <AmiBlitz3.ab3@25757>   Dc.l do_greater_equal_float                   ;dogef
00033470 <AmiBlitz3.ab3@25758>   Dc.l do_greater_equal_long                    ;dogel
00033474 <AmiBlitz3.ab3@25759>   Dc.l do_greater_equal_string                  ;doges
00033476 <AmiBlitz3.ab3@25760>   Dc.b $07,$D0                                  ;2000
00033478 <AmiBlitz3.ab3@25762>   Dc.b $80,$CD                                  ;$8000+26+tnum
0003347C <AmiBlitz3.ab3@25763>   Dc.l _BitTst
00033480 <AmiBlitz3.ab3@25764>   Dc.l _BitTst
00033484 <AmiBlitz3.ab3@25765>   Dc.l _BitTst
00033488 <AmiBlitz3.ab3@25766>   Dc.l _BitTst
00033494 <AmiBlitz3.ab3@25767>   Ds.l 3
00033496 <AmiBlitz3.ab3@25768>   Dc.b $1F,$40                                  ;8000
00033498 <AmiBlitz3.ab3@25770>   Dc.b $80,$CE                                  ;$8000+27+tnum
0003349C <AmiBlitz3.ab3@25771>   Dc.l _BitSet
000334A0 <AmiBlitz3.ab3@25772>   Dc.l _BitSet
000334A4 <AmiBlitz3.ab3@25773>   Dc.l _BitSet
000334A8 <AmiBlitz3.ab3@25774>   Dc.l _BitSet
000334B4 <AmiBlitz3.ab3@25775>   Ds.l 3
000334B6 <AmiBlitz3.ab3@25776>   Dc.b $1F,$40                                  ;8000
000334B8 <AmiBlitz3.ab3@25778>   Dc.b $80,$CF                                  ;$8000+28+tnum
000334BC <AmiBlitz3.ab3@25779>   Dc.l _BitClr
000334C0 <AmiBlitz3.ab3@25780>   Dc.l _BitClr
000334C4 <AmiBlitz3.ab3@25781>   Dc.l _BitClr
000334C8 <AmiBlitz3.ab3@25782>   Dc.l _BitClr
000334D4 <AmiBlitz3.ab3@25783>   Ds.l 3
000334D6 <AmiBlitz3.ab3@25784>   Dc.b $1F,$40                                  ;8000
000334D8 <AmiBlitz3.ab3@25786>   Dc.b $80,$D0                                  ;$8000+29+tnum
000334DC <AmiBlitz3.ab3@25787>   Dc.l _BitChg
000334E0 <AmiBlitz3.ab3@25788>   Dc.l _BitChg
000334E4 <AmiBlitz3.ab3@25789>   Dc.l _BitChg
000334E8 <AmiBlitz3.ab3@25790>   Dc.l _BitChg
000334F4 <AmiBlitz3.ab3@25791>   Ds.l 3
000334F6 <AmiBlitz3.ab3@25792>   Dc.b $1F,$40                                  ;8000
000334F8 <AmiBlitz3.ab3@25794>   Dc.b $00,$00
000334FC <AmiBlitz3.ab3@25799> modetable:   Dc.l typemode
00033500 <AmiBlitz3.ab3@25802> newtypebase: Dc.l newtype_byte
00033508 <AmiBlitz3.ab3@25805>   Dc.l newtype_word,$01                                    
0003350A <AmiBlitz3.ab3@25806>   Dc.w $0001
0003350E <AmiBlitz3.ab3@25807>   Dc.b 13,"b",0,0
00033516 <AmiBlitz3.ab3@25810>   Dc.l newtype_long,$02
00033518 <AmiBlitz3.ab3@25811>   Dc.w $0002
0003351C <AmiBlitz3.ab3@25812>   Dc.b 13,"w",0,0
00033524 <AmiBlitz3.ab3@25815>   Dc.l newtype_quick,$03                                   
00033526 <AmiBlitz3.ab3@25816>   Dc.w $0004
0003352A <AmiBlitz3.ab3@25817>   Dc.b 13,"l",0,0
00033532 <AmiBlitz3.ab3@25820>   Dc.l newtype_float,$04                                   
00033534 <AmiBlitz3.ab3@25821>   Dc.w $0004
00033538 <AmiBlitz3.ab3@25822>   Dc.b 13,"q",0,0
00033540 <AmiBlitz3.ab3@25826>   Dc.l newtype_double,$05                                  ;make problems on old residents
00033542 <AmiBlitz3.ab3@25827>   Dc.w $0004
00033546 <AmiBlitz3.ab3@25828>   Dc.b 13,"f",0,0
0003354E <AmiBlitz3.ab3@25831>   Dc.l newtype_double,$06
00033550 <AmiBlitz3.ab3@25832>   Dc.w $0004
00033554 <AmiBlitz3.ab3@25833>   Dc.b 13,"a",0,0
0003355C <AmiBlitz3.ab3@25836>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
0003355E <AmiBlitz3.ab3@25837>   Dc.w $0008
00033562 <AmiBlitz3.ab3@25838>   Dc.b 13,"d",0,0
0003356A <AmiBlitz3.ab3@25842>   Dc.l $0000000,$07                                        ;stringtype
0003356C <AmiBlitz3.ab3@25843>   Dc.w $0004
00033570 <AmiBlitz3.ab3@25844>   Dc.b 13,"s",0,0
00033578 <AmiBlitz3.ab3@25847>   Dc.l $00,$00
0003357A <AmiBlitz3.ab3@25848>   Dc.w $0000
0003357E <AmiBlitz3.ab3@25849>   Dc.b $01,$00,$00,$00
000335DE <AmiBlitz3.ab3@25852> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
000335E0 <AmiBlitz3.ab3@25856> dirmode:              Ds.w 1                               ;shows if directmode is on
000335E4 <AmiBlitz3.ab3@25858>                       Ds.l 1                               ;int org source ;intuition!
000335E6 <AmiBlitz3.ab3@25859> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
000335EA <AmiBlitz3.ab3@25860> maxsat:               Ds.l 1                               ;data1 info pos
000335EC <AmiBlitz3.ab3@25861> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
000335EE <AmiBlitz3.ab3@25863> maxsused:             Ds.w 1                               ;maximums used in prog
000335F0 <AmiBlitz3.ab3@25867> dark:                 Ds.w 1                               ;dark compile?
000335F2 <AmiBlitz3.ab3@25868> qlab:                 Ds.w 1                               ;quick lab allocate
000335F6 <AmiBlitz3.ab3@25869> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
000335F8 <AmiBlitz3.ab3@25874> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
000335FA <AmiBlitz3.ab3@25875> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
000335FE <AmiBlitz3.ab3@25876> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00033602 <AmiBlitz3.ab3@25878> letstart:             Ds.l 1
00033604 <AmiBlitz3.ab3@25879> dontwrite:            Ds.w 1                               ;nomemleft org source
00033684 <AmiBlitz3.ab3@25880> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00033688 <AmiBlitz3.ab3@25882> locdatast:            Ds.l 1
0003368C <AmiBlitz3.ab3@25883> firstpend:            Ds.l 1
00033690 <AmiBlitz3.ab3@25887> data2at:              Ds.l 1
00033694 <AmiBlitz3.ab3@25888> data2:                Ds.l 1
00033698 <AmiBlitz3.ab3@25889> data1start:           Ds.l 1                               ;data1at org source
0003369C <AmiBlitz3.ab3@25890> data1:                Ds.l 1                               ;pc for initialized data!
000336A0 <AmiBlitz3.ab3@25891> destbufferstart:      Ds.l 1                               ;pcat org source
000336A4 <AmiBlitz3.ab3@25895> destbufferend:        Ds.l 1                               ;libat org source
000336A8 <AmiBlitz3.ab3@25896> libend:               Ds.l 1                               ;lib org source
000336AC <AmiBlitz3.ab3@25897> allat:                Ds.l 1                               ;highest allocmemd location for code
000336B6 <AmiBlitz3.ab3@25898> dummyasm:             Dc.w 0,0,0,0,0
000336BA <AmiBlitz3.ab3@25899>                       Dc.l 0
000336BC <AmiBlitz3.ab3@25900>                       Dc.w 0
000336C0 <AmiBlitz3.ab3@25904> buff1:                Ds.l 1                               ;buffer for text get
000336C4 <AmiBlitz3.ab3@25905> buff2:                Ds.l 1                               ;ditto for dest
000336C6 <AmiBlitz3.ab3@25906> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
000336C8 <AmiBlitz3.ab3@25907> asmtype:              Ds.w 1                               ;0=contains no prog reference
000336CA <AmiBlitz3.ab3@25908> extraword:            Ds.w 1                               ;the extension word for assembler
000336CC <AmiBlitz3.ab3@25909> extraword2:           Ds.w 1                               ;ditto
000336CE <AmiBlitz3.ab3@25910> asmsize:              Ds.w 1
000336D2 <AmiBlitz3.ab3@25911> asmbuff:              Ds.l 1
000336D4 <AmiBlitz3.ab3@25912> asmlen:               Ds.w 1                               ;first (src) text len
000336D6 <AmiBlitz3.ab3@25913> asmlen2:              Ds.w 1                               ;second (dest)
000336DA <AmiBlitz3.ab3@25914> templabel:            Ds.l 1                               ;linked list of expressions to resolve
000336DC <AmiBlitz3.ab3@25917> macnum:               Ds.w 1
000336E0 <AmiBlitz3.ab3@25919>                       Dc.l 0                               ;address of next 0 in include fil
000336E4 <AmiBlitz3.ab3@25920> titleat:              Ds.l 1                               ;5 longs for compile streaks
000336EE <AmiBlitz3.ab3@25921> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
000336F0 <AmiBlitz3.ab3@25922> connest:              Ds.w 1                               ;conditional nest level
000336F4 <AmiBlitz3.ab3@25923> firstconst:           Ds.l 1                               ;first constant (#a)
000336F6 <AmiBlitz3.ab3@25924> numarg:               Ds.w 1                               ;number of macro arguements
000336FA <AmiBlitz3.ab3@25925> myoline:              Ds.l 1                               ;macro done yet?
000336FE <AmiBlitz3.ab3@25926> myline:               Ds.l 1                               ;pointer to some memory to create
00033702 <AmiBlitz3.ab3@25929>                       Ds.l 1
00033742 <AmiBlitz3.ab3@25930> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00033746 <AmiBlitz3.ab3@25931> concomsp:             Dc.l concomstack                     ;stack pointer
00033748 <AmiBlitz3.ab3@25932> oldqflag:             Ds.w 1
0003374C <AmiBlitz3.ab3@25935>                       Ds.l 1
0003374E <AmiBlitz3.ab3@25937>                       Ds.w 1
00033752 <AmiBlitz3.ab3@25938> firstfor:             Ds.l 1                               ;first for
00033754 <AmiBlitz3.ab3@25939> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00033756 <AmiBlitz3.ab3@25940> sbgot:                Ds.w 1                               ;flag for string got 2
00033758 <AmiBlitz3.ab3@25941> convsize:             Ds.w 1                               ;usertype org source
0003375A <AmiBlitz3.ab3@25942> userp:                Ds.w 1
0003375E <AmiBlitz3.ab3@25947> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00033760 <AmiBlitz3.ab3@25948> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00033762 <AmiBlitz3.ab3@25949> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00033766 <AmiBlitz3.ab3@25951> locloc:               Ds.l 1
00033768 <AmiBlitz3.ab3@25952> locchar:              Ds.w 1
000337E8 <AmiBlitz3.ab3@25953> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
000337EA <AmiBlitz3.ab3@25954> commode:              Ds.w 1                               ;in comma mode...
000337EE <AmiBlitz3.ab3@25955> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
000337F2 <AmiBlitz3.ab3@25956> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
000337F6 <AmiBlitz3.ab3@25957> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
000337F8 <AmiBlitz3.ab3@25959>                       Ds.w 1                               ;opt reset offset
000338F8 <AmiBlitz3.ab3@25961>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
000339F8 <AmiBlitz3.ab3@25963>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
000339FA <AmiBlitz3.ab3@25964> varcodelen:           Ds.w 1                               ;and length
000339FC <AmiBlitz3.ab3@25966>                       Ds.w 1
00033A02 <AmiBlitz3.ab3@25967> oldvcodelen:          Ds.w 3                               ;old varcodelen
00033A04 <AmiBlitz3.ab3@25970> Even4
00033A08 <AmiBlitz3.ab3@25971> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00033A0A <AmiBlitz3.ab3@25972> memlibstat:           Ds.w 1                               ;status of memory library during
00033A0C <AmiBlitz3.ab3@25975>                       Dc.w 0
00033A0E <AmiBlitz3.ab3@25977>                       Dc.w 0
00033A10 <AmiBlitz3.ab3@25979> varmode:              Ds.w 1                               ;0 a5 pointer to global
00033A14 <AmiBlitz3.ab3@25981> currentfunction:      Ds.l 1                               ;thisproc org source
00033A18 <AmiBlitz3.ab3@25982> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00033A1A <AmiBlitz3.ab3@25983> 
00033A1C <AmiBlitz3.ab3@25985> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00033A20 <AmiBlitz3.ab3@25986> passstack:            Ds.l 1
00033A24 <AmiBlitz3.ab3@25987> zero:                 Ds.l 1                               ;ZERO!
00033A26 <AmiBlitz3.ab3@25988> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00033A2A <AmiBlitz3.ab3@25990> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00033A2E <AmiBlitz3.ab3@25991> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00033A30 <AmiBlitz3.ab3@25992> lasta6:               Dc.w $FFFF                           ;-1 org source
00033A32 <AmiBlitz3.ab3@25993> instringon:           Ds.w 1                               ;quoteflag org source
00033A36 <AmiBlitz3.ab3@25994> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00033A3A <AmiBlitz3.ab3@25995> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00033A3E <AmiBlitz3.ab3@25996> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00033A42 <AmiBlitz3.ab3@25997> endop:                Ds.l 1                               ;end of program pc - before finishups!
00033A46 <AmiBlitz3.ab3@25998> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00033A4A <AmiBlitz3.ab3@25999> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00033A4C <AmiBlitz3.ab3@26000> numstatic:            Ds.w 1                               ;number of static structs
00033A50 <AmiBlitz3.ab3@26001> staticdata:           Ds.l 1                               ;data1 val for statics
00033A54 <AmiBlitz3.ab3@26002> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00033A56 <AmiBlitz3.ab3@26003> sbasegot:             Ds.w 1                               ;string base got?
00033A5A <AmiBlitz3.ab3@26004> litdata1:             Ds.l 1
00033A5E <AmiBlitz3.ab3@26008> objlen:               Ds.l 1
00033A62 <AmiBlitz3.ab3@26009> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00033A66 <AmiBlitz3.ab3@26010> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00033A68 <AmiBlitz3.ab3@26012> flagmask:             Ds.w 1                               ;mask for flag of variable when
00033A6A <AmiBlitz3.ab3@26014> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00033A6C <AmiBlitz3.ab3@26015> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00033A70 <AmiBlitz3.ab3@26016> temp1:                Ds.l 1
00033A74 <AmiBlitz3.ab3@26017> temp2:                Ds.l 1
00033A78 <AmiBlitz3.ab3@26019> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00033A7C <AmiBlitz3.ab3@26020> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00033AF0 <AmiBlitz3.ab3@26021> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00033AF4 <AmiBlitz3.ab3@26022> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00033B74 <AmiBlitz3.ab3@26024> namebuff2:            Ds.b 128
00033B7C <AmiBlitz3.ab3@26025>                       Ds.b 8                               ;for fileinfoblock
00033BBC <AmiBlitz3.ab3@26028> optstuff:             Ds.b 64                              ;temp opt make buffer
00033BBE <AmiBlitz3.ab3@26045>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00033BC2 <AmiBlitz3.ab3@26046>   Dc.l xtra_versionnumber                                  ; vers org source
00033BC6 <AmiBlitz3.ab3@26047>   Dc.l create_iconfile                                     ; create icon for executable
00033BCA <AmiBlitz3.ab3@26048>   Ds.l 1
00033BCC <AmiBlitz3.ab3@26050>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00033BD0 <AmiBlitz3.ab3@26053>   Dc.l set_use_debugger
00033BD4 <AmiBlitz3.ab3@26054>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00033BD8 <AmiBlitz3.ab3@26055>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00033BDC <AmiBlitz3.ab3@26056>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00033BE0 <AmiBlitz3.ab3@26057>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00033BE4 <AmiBlitz3.ab3@26058>   Dc.l set_make_smallestcode
00033BE8 <AmiBlitz3.ab3@26059>   Dc.l set_link_debuginfo
00033BEC <AmiBlitz3.ab3@26060>   Dc.l set_autorun
00033BF0 <AmiBlitz3.ab3@26061>   Dc.l set_interruptcheck
00033BF4 <AmiBlitz3.ab3@26062>   Dc.l set_assemblercheck
00033BF8 <AmiBlitz3.ab3@26064>   Dc.l set_overflowcheck
00033BFC <AmiBlitz3.ab3@26065>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00033C00 <AmiBlitz3.ab3@26066>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00033C04 <AmiBlitz3.ab3@26067>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00033C08 <AmiBlitz3.ab3@26070>   Ds.l 1
00033C0A <AmiBlitz3.ab3@26072>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00033C0E <AmiBlitz3.ab3@26079>   Dc.l objectbuffer
00033C12 <AmiBlitz3.ab3@26080>   Dc.l libsbuffer
00033C16 <AmiBlitz3.ab3@26081>   Dc.l systembuffer
00033C1A <AmiBlitz3.ab3@26082>   Dc.l databuffer
00033C1E <AmiBlitz3.ab3@26083>   Dc.l macrobuffer_size
00033C22 <AmiBlitz3.ab3@26084>   Dc.l stringbuffer
00033C26 <AmiBlitz3.ab3@26087>   Ds.l 1
00033C28 <AmiBlitz3.ab3@26091>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00033C30 <AmiBlitz3.ab3@26092>   Dc.l residents_table,0
00033C32 <AmiBlitz3.ab3@26096>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00033C3A <AmiBlitz3.ab3@26097>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00033C3C <AmiBlitz3.ab3@26098>   Ds.w 1
00033D38 <AmiBlitz3.ab3@26102>   Ds.l 63
00033E34 <AmiBlitz3.ab3@26103>   Ds.l 63
00033F30 <AmiBlitz3.ab3@26104>   Ds.l 63
00034012 <AmiBlitz3.ab3@26105>   Ds.w 113
00034014 <AmiBlitz3.ab3@26108> comsettings_message:  Ds.w 1                               ;allchg org source
00034016 <AmiBlitz3.ab3@26109> xtra_versionnumber:   Ds.w 1                               ;vers org source
0003401C <AmiBlitz3.ab3@26113>   CLR.b exefilename
0003401E <AmiBlitz3.ab3@26114>   TST.l d0
00034022 <AmiBlitz3.ab3@26115>   BNE read_xtrafile__l10
00034024 <AmiBlitz3.ab3@26116> RTS
0003402A <AmiBlitz3.ab3@26119>   JSR free_residents                                       ;jsr freeres2 org source
00034030 <AmiBlitz3.ab3@26120> 
00034036 <AmiBlitz3.ab3@26121>   LEA ptr_xtradata,A2
00034038 <AmiBlitz3.ab3@26122>   MOVEQ.l #$00,D4
0003403A <AmiBlitz3.ab3@26125>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
0003403E <AmiBlitz3.ab3@26126>     BEQ.b read_xtrafile__done
00034040 <AmiBlitz3.ab3@26129>     MOVE.l (A2)+,D2
00034044 <AmiBlitz3.ab3@26130>   BEQ.b read_xtrafile__loop
00034046 <AmiBlitz3.ab3@26132>   MOVE.l D4,D3
00034048 <AmiBlitz3.ab3@26133>   MOVE.l D7,D1
0003404C <AmiBlitz3.ab3@26134>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003404E <AmiBlitz3.ab3@26135>   TST.l D0
00034052 <AmiBlitz3.ab3@26136>   BNE.b read_xtrafile__loop2
00034056 <AmiBlitz3.ab3@26137> BRA.w read_xtrafile__done2
0003405C <AmiBlitz3.ab3@26140>   TST.b xtra_versionnumber
00034060 <AmiBlitz3.ab3@26141>    BNE.b read_xtrafile__nover0
00034068 <AmiBlitz3.ab3@26142>   MOVE.w #$0080,set_autorun                                ;auto run on
00034072 <AmiBlitz3.ab3@26143>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00034078 <AmiBlitz3.ab3@26144>   CLR.w set_assemblercheck                                 ;assembler checking off
00034082 <AmiBlitz3.ab3@26145>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00034086 <AmiBlitz3.ab3@26146> BRA.b read_xtrafile__ver0
00034088 <AmiBlitz3.ab3@26149>   MOVE.l D7,D1                                             ;load cli arg!
0003408E <AmiBlitz3.ab3@26150>   MOVE.l #str_cliarguments,D2
00034094 <AmiBlitz3.ab3@26151>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00034098 <AmiBlitz3.ab3@26152>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003409E <AmiBlitz3.ab3@26153>   MOVE.l #str_cliarguments,A0
000340A4 <AmiBlitz3.ab3@26154>   ADDA.l #115,A0
000340AA <AmiBlitz3.ab3@26155>   MOVE.l #0,(a0) ; terminate it!
000340AC <AmiBlitz3.ab3@26157>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
000340B2 <AmiBlitz3.ab3@26158>   MOVE.l #stacksize,D2
000340B8 <AmiBlitz3.ab3@26159>   MOVE.l #4,D3
000340BC <AmiBlitz3.ab3@26160>   JSR _Read(A6)
000340C6 <AmiBlitz3.ab3@26161>   CMP.l ##MIN_STACKSIZE,stacksize
000340CA <AmiBlitz3.ab3@26162>   BGE 'stackok
000340D4 <AmiBlitz3.ab3@26163>   MOVE.l ##MIN_STACKSIZE,stacksize
000340D6 <AmiBlitz3.ab3@26166>   MOVE.l D7,D1
000340DC <AmiBlitz3.ab3@26167>   MOVE.l #versioninformation,D2
000340E2 <AmiBlitz3.ab3@26168>   MOVE.l #4,D3
000340E6 <AmiBlitz3.ab3@26169>   JSR _Read(A6)
000340E8 <AmiBlitz3.ab3@26171>   MOVE.l D7,D1
000340EE <AmiBlitz3.ab3@26172>   MOVE.l #number_of_builds,D2
000340F4 <AmiBlitz3.ab3@26173>   MOVE.l #4,D3
000340F8 <AmiBlitz3.ab3@26174>   JSR _Read(A6)
000340FE <AmiBlitz3.ab3@26180> 
00034104 <AmiBlitz3.ab3@26181>   MOVE.l A7,errstack
0003410E <AmiBlitz3.ab3@26182>   MOVE.l #read_xtrafile__done2,errcont
00034116 <AmiBlitz3.ab3@26183>   MOVE.w #$FFFF,ezerr
0003411C <AmiBlitz3.ab3@26186>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
0003411E <AmiBlitz3.ab3@26187>     MOVEQ.l #$04,D3
00034120 <AmiBlitz3.ab3@26188>     MOVE.l D7,D1
00034124 <AmiBlitz3.ab3@26189>     JSR _Read(A6)
00034126 <AmiBlitz3.ab3@26190>     TST.l D0
0003412A <AmiBlitz3.ab3@26191>     BEQ.b read_xtrafile__done2
00034130 <AmiBlitz3.ab3@26192>     MOVE.w temp1,D1
00034132 <AmiBlitz3.ab3@26193>     TST.w d1                                               ;new
00034136 <AmiBlitz3.ab3@26194>     BEQ read_xtrafile__done2                                         ;new
0003413C <AmiBlitz3.ab3@26195>      JSR AJL_0_6F1A
00034142 <AmiBlitz3.ab3@26197>     CMP.l #0,a1
00034146 <AmiBlitz3.ab3@26198>     BEQ read_xtrafile__dloop
0003414A <AmiBlitz3.ab3@26199>     MOVE.l $12(A1),D0
00034152 <AmiBlitz3.ab3@26200>     MOVE.w temp1+2,-$4(A1,D0.L)
00034156 <AmiBlitz3.ab3@26201> BRA.b read_xtrafile__dloop
0003415A <AmiBlitz3.ab3@26207>   LEA residents_table(PC),A0
0003415C <AmiBlitz3.ab3@26208>   MOVEQ.l #$07,D0
00034160 <AmiBlitz3.ab3@26211>     CLR.l $40(A0)
00034164 <AmiBlitz3.ab3@26212>     LEA ResidentEntryStep(A0),A0   ; $44
00034168 <AmiBlitz3.ab3@26213>   DBF D0,read_xtrafile__loop3
0003416C <AmiBlitz3.ab3@26215>   MOVEM.l D7/A6,-(A7)
00034172 <AmiBlitz3.ab3@26216>   JSR init_buffers
00034178 <AmiBlitz3.ab3@26217>   JSR reloadresident
0003417C <AmiBlitz3.ab3@26218>   MOVEM.l (A7)+,D7/A6
0003417E <AmiBlitz3.ab3@26219> RTS
00034186 <AmiBlitz3.ab3@26223>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
0003418C <AmiBlitz3.ab3@26232>   LEA ptr_xtradata,A2
0003418E <AmiBlitz3.ab3@26233>   MOVEQ.l #$00,D4
00034190 <AmiBlitz3.ab3@26237>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00034194 <AmiBlitz3.ab3@26238>   BEQ.b write_xtrafile__done
00034196 <AmiBlitz3.ab3@26241>    MOVE.l (A2)+,D2
0003419A <AmiBlitz3.ab3@26242>    BEQ.b write_xtrafile__loop
0003419C <AmiBlitz3.ab3@26244>    MOVE.l D4,D3
0003419E <AmiBlitz3.ab3@26245>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
000341A2 <AmiBlitz3.ab3@26246>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
000341A6 <AmiBlitz3.ab3@26247> BRA.b write_xtrafile__loop2
000341A8 <AmiBlitz3.ab3@26250>   MOVE.l D7,D1
000341AE <AmiBlitz3.ab3@26251>   MOVE.l #str_cliarguments,D2
000341B4 <AmiBlitz3.ab3@26252>   MOVE.l #116,D3
000341B8 <AmiBlitz3.ab3@26253>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
000341BA <AmiBlitz3.ab3@26255>   MOVE.l D7,D1
000341C0 <AmiBlitz3.ab3@26256>   MOVE.l #stacksize,D2
000341C6 <AmiBlitz3.ab3@26257>   MOVE.l #4,D3
000341CA <AmiBlitz3.ab3@26258>   JSR _Write(A6)
000341CC <AmiBlitz3.ab3@26260>   MOVE.l D7,D1
000341D2 <AmiBlitz3.ab3@26261>   MOVE.l #versioninformation,D2
000341D8 <AmiBlitz3.ab3@26262>   MOVE.l #4,D3
000341DC <AmiBlitz3.ab3@26263>   JSR _Write(A6)
000341DE <AmiBlitz3.ab3@26265>   MOVE.l D7,D1
000341E4 <AmiBlitz3.ab3@26266>   MOVE.l #number_of_builds,D2
000341EA <AmiBlitz3.ab3@26267>   MOVE.l #4,D3
000341EE <AmiBlitz3.ab3@26268>   JSR _Write(A6)
000341F4 <AmiBlitz3.ab3@26274>   LEA libpointer,A2
000341F6 <AmiBlitz3.ab3@26277>     MOVE.l (A2),D0
000341FA <AmiBlitz3.ab3@26278>     BEQ.w write_xtrafile__done2
000341FC <AmiBlitz3.ab3@26279>     MOVEA.l D0,A2
00034200 <AmiBlitz3.ab3@26280>     MOVE.l $12(A2),D4
00034204 <AmiBlitz3.ab3@26281>     TST.w -$2(A2,D4.L)
00034208 <AmiBlitz3.ab3@26282>     BEQ.w write_xtrafile__loop3
0003420C <AmiBlitz3.ab3@26284>     LEA $4(A2),A0
0003420E <AmiBlitz3.ab3@26285>     MOVE.l A0,D2
00034210 <AmiBlitz3.ab3@26286>     MOVEQ.l #$02,D3
00034212 <AmiBlitz3.ab3@26287>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00034216 <AmiBlitz3.ab3@26288>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003421A <AmiBlitz3.ab3@26290>     LEA -$4(A2,D4.L),A0
0003421C <AmiBlitz3.ab3@26291>     MOVE.l A0,D2
0003421E <AmiBlitz3.ab3@26292>     MOVEQ.l #$02,D3
00034220 <AmiBlitz3.ab3@26293>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00034224 <AmiBlitz3.ab3@26294>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00034228 <AmiBlitz3.ab3@26295> BRA.w write_xtrafile__loop3
0003422E <AmiBlitz3.ab3@26300>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00034230 <AmiBlitz3.ab3@26301>   MOVE.l A2,D2           ; move the address to d2
00034236 <AmiBlitz3.ab3@26302>   MOVE.l #4,D3           ; we only need 4 bytes to save
00034238 <AmiBlitz3.ab3@26303>   MOVE.l D7,D1           ; we set the file handle
0003423C <AmiBlitz3.ab3@26304>   JSR _Write(A6)         ; and we write it.
0003423E <AmiBlitz3.ab3@26306> RTS
00034244 <AmiBlitz3.ab3@26311>   LEA optssave,A0                      ; backup address
0003424A <AmiBlitz3.ab3@26312>   LEA ptr_xtradata,A1                  ; source address
0003424C <AmiBlitz3.ab3@26315>   MOVE.w (A1)+,D0                                          ;length of data move
00034250 <AmiBlitz3.ab3@26316>   BEQ.b 'backupdone
00034252 <AmiBlitz3.ab3@26317>   SUBQ.w #1,D0
00034254 <AmiBlitz3.ab3@26320>     MOVE.l (A1)+,D1
00034258 <AmiBlitz3.ab3@26321>     BEQ.b 'backuploop
0003425A <AmiBlitz3.ab3@26322>     MOVEA.l D1,A2
0003425C <AmiBlitz3.ab3@26323>     MOVE.w D0,D1
0003425E <AmiBlitz3.ab3@26326>       MOVE.b (A2)+,(A0)+
00034262 <AmiBlitz3.ab3@26327>   DBF D1,'backuploop3
00034266 <AmiBlitz3.ab3@26329> BRA.w 'backuploop2
0003426C <AmiBlitz3.ab3@26333>   LEA bufferlist,A1
0003426E <AmiBlitz3.ab3@26336>     MOVE.l (A1)+,D2
00034272 <AmiBlitz3.ab3@26337>     BEQ.b 'loop4done
00034274 <AmiBlitz3.ab3@26339>     MOVEA.l D2,A0
00034276 <AmiBlitz3.ab3@26340>     MOVE.l (A0),D2
00034278 <AmiBlitz3.ab3@26341>     ADDQ.w #8,A0
0003427E <AmiBlitz3.ab3@26342>     JSR makelong
00034282 <AmiBlitz3.ab3@26343> BRA.b 'loop4
00034288 <AmiBlitz3.ab3@26346>   CLR.w state_of_residents                                 ;resident change
0003428E <AmiBlitz3.ab3@26347>   CLR.w comsettings_message                                ;alloc change
00034294 <AmiBlitz3.ab3@26348>   CLR.w maxobject_pos
00034296 <AmiBlitz3.ab3@26349> RTS   ; new tomsmart1
0003429C <AmiBlitz3.ab3@26353>   LEA optssave,A0
000342A2 <AmiBlitz3.ab3@26354>   LEA ptr_xtradata,A1
000342A4 <AmiBlitz3.ab3@26357>   MOVE.w (A1)+,D0
000342A8 <AmiBlitz3.ab3@26358>   BEQ.b 'restoredone
000342AA <AmiBlitz3.ab3@26359>   SUBQ.w #1,D0
000342AC <AmiBlitz3.ab3@26362>     MOVE.l (A1)+,D1
000342B0 <AmiBlitz3.ab3@26363>     BEQ.b 'restoreloop1
000342B2 <AmiBlitz3.ab3@26364>     MOVEA.l D1,A2
000342B4 <AmiBlitz3.ab3@26365>     MOVE.w D0,D1
000342B6 <AmiBlitz3.ab3@26368>       MOVE.b (A0)+,(A2)+
000342BA <AmiBlitz3.ab3@26369>   DBF D1,'restoreloop3
000342BE <AmiBlitz3.ab3@26371> BRA.b 'restoreloop2
000342C0 <AmiBlitz3.ab3@26374> RTS
000342C6 <AmiBlitz3.ab3@26378>   JSR free_residents                    ; first free the allready loaded residents
000342CC <AmiBlitz3.ab3@26379>   JSR Clear_Residents_table             ; second clear the complete resident table
000342CE <AmiBlitz3.ab3@26380> RTS
000342D6 <AmiBlitz3.ab3@26384>   MOVE.w #$FFFF,state_of_residents
000342DC <AmiBlitz3.ab3@26385>   MOVE.w state_of_residents,D0
000342E2 <AmiBlitz3.ab3@26386>   JSR reloadresident
000342E4 <AmiBlitz3.ab3@26387> RTS
000342E6 <AmiBlitz3.ab3@26392>   MOVE.l d0,a1
000342EC <AmiBlitz3.ab3@26393>   MOVEA.l libpointer,A2
000342F0 <AmiBlitz3.ab3@26396>     MOVE.l $12(A2),D0
000342F4 <AmiBlitz3.ab3@26397>     TST.w -$2(A2,D0.L)
000342F8 <AmiBlitz3.ab3@26398>      BEQ.w JL_0_102AAa
000342FA <AmiBlitz3.ab3@26399>     SUBQ.w #1,D1
000342FE <AmiBlitz3.ab3@26400>      BPL.w JL_0_102AAa
00034302 <AmiBlitz3.ab3@26401>     MOVEA.l -$1A(A2,D0.L),A3
00034304 <AmiBlitz3.ab3@26402>     ADDA.l A2,A3
00034306 <AmiBlitz3.ab3@26405>       MOVE.b (A3)+,(A1)+
0003430A <AmiBlitz3.ab3@26406>     BNE.w JL_0_10294a
0003430C <AmiBlitz3.ab3@26408>     CLR.b -(A1)
00034310 <AmiBlitz3.ab3@26409>     MOVE.w -$4(A2,D0.L),D0
00034316 <AmiBlitz3.ab3@26410>     AND.l #$ffff,d0
00034318 <AmiBlitz3.ab3@26411> RTS
0003431A <AmiBlitz3.ab3@26414>     MOVEA.l (A2),A2
0003431E <AmiBlitz3.ab3@26415> BRA.w JL_0_1027Ca
0003432E <AmiBlitz3.ab3@26420> str_maxobjects_name:   Dc.b "              ",0 : Even
0003433E <AmiBlitz3.ab3@26421> str_maxobjects_name2:  Dc.b "              ",0 : Even
00034342 <AmiBlitz3.ab3@26422> objectbuffer:          Dc.l $00004000
00034346 <AmiBlitz3.ab3@26423>                        Dc.l $00000000
00034352 <AmiBlitz3.ab3@26424> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00034356 <AmiBlitz3.ab3@26426> libsbuffer:            Dc.l $00008000
0003435A <AmiBlitz3.ab3@26427>                        Dc.l $00000000
00034366 <AmiBlitz3.ab3@26428> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
0003436A <AmiBlitz3.ab3@26430> systembuffer:          Dc.l $00001000                      ; systen buffer
0003436E <AmiBlitz3.ab3@26431>                        Dc.l $00000000
0003437A <AmiBlitz3.ab3@26432> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003437E <AmiBlitz3.ab3@26434> databuffer:            Dc.l $00001000                      ; data buffer
00034382 <AmiBlitz3.ab3@26435>                        Dc.l $00000000
0003438E <AmiBlitz3.ab3@26436> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00034392 <AmiBlitz3.ab3@26438> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
00034396 <AmiBlitz3.ab3@26439>                        Dc.l $00000000
000343A2 <AmiBlitz3.ab3@26440> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
000343A6 <AmiBlitz3.ab3@26442> stringbuffer:          Dc.l $00002800                      ; string buffer
000343AA <AmiBlitz3.ab3@26443>                        Dc.l $00000000
000343B6 <AmiBlitz3.ab3@26444> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
000343B8 <AmiBlitz3.ab3@26446> maxobjects_value:      Dc.w $0064
000343BC <AmiBlitz3.ab3@26447>                        Dc.l $00000000
000343C8 <AmiBlitz3.ab3@26448> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
000343CA <AmiBlitz3.ab3@26450> maxobjects_value2:     Dc.w $0014
000343CC <AmiBlitz3.ab3@26451>                        Dc.w $0000
000343D8 <AmiBlitz3.ab3@26453> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
000343D9 <AmiBlitz3.ab3@26457> set_create_iconfile:   Dc.b $00
000343DC <AmiBlitz3.ab3@26458> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
000343DE <AmiBlitz3.ab3@26459>                        Dc.b $00,$01
000343DF <AmiBlitz3.ab3@26461> set_use_debugger:      Dc.b $00                            ; Flags.w
000343E2 <AmiBlitz3.ab3@26462> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
000343E4 <AmiBlitz3.ab3@26463>                        Dc.b $00,$01                        ; GadgetType.w
000343E8 <AmiBlitz3.ab3@26464> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
000343EC <AmiBlitz3.ab3@26465> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
000343F0 <AmiBlitz3.ab3@26466> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
000343F2 <AmiBlitz3.ab3@26467> AL_0_11094:            Ds.w 1
000343F3 <AmiBlitz3.ab3@26469> set_make_smallestcode: Ds.b 1
000343F6 <AmiBlitz3.ab3@26470> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
000343F8 <AmiBlitz3.ab3@26471>                        Dc.b $00,$01
000343F9 <AmiBlitz3.ab3@26472> set_link_debuginfo:    Ds.b 1
000343FC <AmiBlitz3.ab3@26473> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
000343FE <AmiBlitz3.ab3@26474>                        Dc.b $00,$01
0003461E <AmiBlitz3.ab3@26479>   Ds.l 136         ;resident files STEP $44 piece 8
0003469E <AmiBlitz3.ab3@26484> str_calcexpression:        Ds.l 32
000346A2 <AmiBlitz3.ab3@26485> destbufferend_backup_calc: Ds.l 1
000346AC <AmiBlitz3.ab3@26490>   MOVE.l destbufferend,destbufferend_backup_calc
000346B2 <AmiBlitz3.ab3@26491> 
000346B8 <AmiBlitz3.ab3@26492>   MOVE.l A7,errstack
000346C2 <AmiBlitz3.ab3@26493>   MOVE.l #Calc_Error_Exit,errcont
000346EC <AmiBlitz3.ab3@26500>   !basic         ; get the flage for the conversion form the editor
00034730 <AmiBlitz3.ab3@26501>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00034774 <AmiBlitz3.ab3@26502>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00034792 <AmiBlitz3.ab3@26503>   !asm
00034798 <AmiBlitz3.ab3@26505>   LEA str_calcexpression,A0
0003479E <AmiBlitz3.ab3@26514>   JSR setcvars
000347A4 <AmiBlitz3.ab3@26515>   JSR setsvars
000347AA <AmiBlitz3.ab3@26516>   CLR.w connest
000347B0 <AmiBlitz3.ab3@26517>   LEA str_calcexpression,A5
000347B6 <AmiBlitz3.ab3@26518>   JSR AJL_0_BF6E
000347BC <AmiBlitz3.ab3@26519>   LEA str_calcexpression,A0
000347BE <AmiBlitz3.ab3@26520>   TST.l D3
000347C2 <AmiBlitz3.ab3@26521>    BPL.w JL_0_11AE8
000347C6 <AmiBlitz3.ab3@26522>   MOVE.b #$2D,(A0)+
000347C8 <AmiBlitz3.ab3@26523>   NEG.l D3
000347D0 <AmiBlitz3.ab3@26526>   CMPI.w #$80,CalculatorButtonDecFlag
000347D4 <AmiBlitz3.ab3@26527>    BEQ.w JL_0_11B74
000347D6 <AmiBlitz3.ab3@26528>   MOVEQ.l #$00,D1
000347DE <AmiBlitz3.ab3@26529>   CMPI.w #$80,CalculatorButtonBinFlag
000347E2 <AmiBlitz3.ab3@26530>    BNE.w JL_0_11B36
000347E4 <AmiBlitz3.ab3@26531>   MOVEQ.l #$1F,D0
000347E8 <AmiBlitz3.ab3@26532>   MOVE.b #$25,(A0)+
000347EA <AmiBlitz3.ab3@26535>       LSL.l #1,D3
000347EE <AmiBlitz3.ab3@26536>        BCC.w JL_0_11B18
000347F2 <AmiBlitz3.ab3@26537>       MOVE.b #"1",(A0)+
000347F4 <AmiBlitz3.ab3@26538>       MOVEQ.l #-$01,D1
000347F8 <AmiBlitz3.ab3@26539>   BRA.w JL_0_11B22
000347FA <AmiBlitz3.ab3@26542>       TST.w D1
000347FE <AmiBlitz3.ab3@26543>       BEQ.w JL_0_11B22
00034802 <AmiBlitz3.ab3@26544>       MOVE.b #"0",(A0)+
00034806 <AmiBlitz3.ab3@26547>  DBF D0,JL_0_11B08
00034808 <AmiBlitz3.ab3@26550>   TST.w D1
0003480C <AmiBlitz3.ab3@26551>   BNE.w JL_0_11B30
00034810 <AmiBlitz3.ab3@26552>   MOVE.b #"0",(A0)+
00034812 <AmiBlitz3.ab3@26555>   CLR.b (A0)
00034816 <AmiBlitz3.ab3@26556> BRA.w JL_0_11B7C
00034818 <AmiBlitz3.ab3@26559>   MOVEQ.l #$07,D0
0003481C <AmiBlitz3.ab3@26560>   MOVE.b #$24,(A0)+
0003481E <AmiBlitz3.ab3@26563>     MOVE.l D3,D2
00034820 <AmiBlitz3.ab3@26564>     SWAP D2
00034822 <AmiBlitz3.ab3@26565>     LSR.w #8,D2
00034824 <AmiBlitz3.ab3@26566>     LSR.w #4,D2
00034828 <AmiBlitz3.ab3@26567>     ADDI.w #$30,D2
0003482C <AmiBlitz3.ab3@26568>     CMP.w #$3A,D2
00034830 <AmiBlitz3.ab3@26569>      BCS.w JL_0_11B52
00034832 <AmiBlitz3.ab3@26570>     ADDQ.w #7,D2
00034836 <AmiBlitz3.ab3@26573>     CMP.w #$30,D2
0003483A <AmiBlitz3.ab3@26574>     BEQ.w JL_0_11B62
0003483C <AmiBlitz3.ab3@26575>     MOVE.b D2,(A0)+
0003483E <AmiBlitz3.ab3@26576>     MOVEQ.l #-$01,D1
00034842 <AmiBlitz3.ab3@26577>   BRA.w JL_0_11B6A
00034844 <AmiBlitz3.ab3@26580>     TST.w D1
00034848 <AmiBlitz3.ab3@26581>      BEQ.w JL_0_11B6A
0003484A <AmiBlitz3.ab3@26582>     MOVE.b D2,(A0)+
0003484C <AmiBlitz3.ab3@26585>     LSL.l #4,D3
00034850 <AmiBlitz3.ab3@26586>  DBF D0,JL_0_11B3C
00034854 <AmiBlitz3.ab3@26588> BRA.w JL_0_11B26
00034856 <AmiBlitz3.ab3@26591>   MOVE.l D3,D2
0003485C <AmiBlitz3.ab3@26592>   JSR makelong
00034866 <AmiBlitz3.ab3@26599>   MOVE.l destbufferend_backup_calc,destbufferend
00034868 <AmiBlitz3.ab3@26601> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00034967 <AmiBlitz3.ab3@26605> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00034968 <AmiBlitz3.ab3@26607> Even
0003496A <AmiBlitz3.ab3@26621>     MOVE.b (a5)+,d0
0003496E <AmiBlitz3.ab3@26622>     BEQ 'l2
00034972 <AmiBlitz3.ab3@26623>     CMP.b #$80,d0
00034976 <AmiBlitz3.ab3@26624>     BNE 'l1
00034978 <AmiBlitz3.ab3@26625>     MOVE.b (a5)+,d0
0003497C <AmiBlitz3.ab3@26626>     BEQ 'l2
00034980 <AmiBlitz3.ab3@26627>     CMP.b #$02,d0
00034984 <AmiBlitz3.ab3@26628>   BNE 'l1
00034988 <AmiBlitz3.ab3@26631>     CMP.b #$20,(a5)+
0003498C <AmiBlitz3.ab3@26632>   BEQ 'l3
0003498E <AmiBlitz3.ab3@26633>   SUBQ.l #1,a5
00034990 <AmiBlitz3.ab3@26634>   TST.b (a5)
00034994 <AmiBlitz3.ab3@26635>   BEQ 'l2
00034998 <AmiBlitz3.ab3@26636>   CMP.w #$8008,(a5)
0003499C <AmiBlitz3.ab3@26637>   BEQ 'l4
000349A0 <AmiBlitz3.ab3@26638>   CMP.w #$8009,(a5)
000349A4 <AmiBlitz3.ab3@26639>   BEQ 'l4
000349A8 <AmiBlitz3.ab3@26640> BRA 'l1
000349AA <AmiBlitz3.ab3@26643>   ADDQ.l #2,a5
000349B0 <AmiBlitz3.ab3@26644>   JSR skiprest
000349B2 <AmiBlitz3.ab3@26645> RTS
000349B8 <AmiBlitz3.ab3@26648>   JSR nextline
000349BC <AmiBlitz3.ab3@26649>   BNE 'l1
000349BE <AmiBlitz3.ab3@26650> RTS
000349E8 <AmiBlitz3.ab3@26654>   !basic
000349F2 <AmiBlitz3.ab3@26655>   DateFormat 1
00034A00 <AmiBlitz3.ab3@26656>   i.l=SystemDate
00034A26 <AmiBlitz3.ab3@26657>   a$=Date$ (i)
00034AA4 <AmiBlitz3.ab3@26658>   a$=Replace$(a$,"/",".")
00034AAA <AmiBlitz3.ab3@26659>   GetD0 &a$
00034AAC <AmiBlitz3.ab3@26660>   MOVEQ #8,d2
00034AAE <AmiBlitz3.ab3@26661>   MOVE.l d0,a0
00034AB0 <AmiBlitz3.ab3@26664>     MOVE.b (a0)+,d1
00034AB6 <AmiBlitz3.ab3@26665>     JSR pokedata1b
00034ABA <AmiBlitz3.ab3@26666>  DBF d2,'l1
00034ABC <AmiBlitz3.ab3@26668>   MOVEQ #0,d0
00034ABE <AmiBlitz3.ab3@26669>   MOVE.b (a0)+,d0
00034ADC <AmiBlitz3.ab3@26670>   !asm
00034AE2 <AmiBlitz3.ab3@26671>   ADD.l #9,d2
00034AE8 <AmiBlitz3.ab3@26672>   ADD.l #9,a5
00034AEA <AmiBlitz3.ab3@26673> RTS
00034B14 <AmiBlitz3.ab3@26677>   !basic
00034B1E <AmiBlitz3.ab3@26678>   DateFormat 0
00034B2C <AmiBlitz3.ab3@26679>   i.l=SystemDate
00034B52 <AmiBlitz3.ab3@26680>   a$=Date$ (i)
00034BD0 <AmiBlitz3.ab3@26681>   a$=Replace$(a$,"/",".")
00034BD6 <AmiBlitz3.ab3@26682>   GetD0 &a$
00034BD8 <AmiBlitz3.ab3@26683>   MOVEQ #8,d2
00034BDA <AmiBlitz3.ab3@26684>   MOVE.l d0,a0
00034BDC <AmiBlitz3.ab3@26687>     MOVE.b (a0)+,d1
00034BE2 <AmiBlitz3.ab3@26688>     JSR pokedata1b
00034BE6 <AmiBlitz3.ab3@26689>  DBF d2,'l1
00034BE8 <AmiBlitz3.ab3@26691>   MOVEQ #0,d0
00034BEA <AmiBlitz3.ab3@26692>   MOVE.b (a0)+,d0
00034C08 <AmiBlitz3.ab3@26693>   !asm
00034C0E <AmiBlitz3.ab3@26694>   ADD.l #9,d2
00034C14 <AmiBlitz3.ab3@26695>   ADD.l #13,a5
00034C16 <AmiBlitz3.ab3@26696> RTS
00034C40 <AmiBlitz3.ab3@26700>   !basic
00034C4A <AmiBlitz3.ab3@26701>   DateFormat 1
00034C58 <AmiBlitz3.ab3@26702>   i.l = SystemDate
00034C7E <AmiBlitz3.ab3@26703>   a$ = Date$ (i)
00034CFC <AmiBlitz3.ab3@26704>   a$ = Replace$(a$,"/",".")
00034D02 <AmiBlitz3.ab3@26705>   GetD0 &a$
00034D04 <AmiBlitz3.ab3@26706>   MOVEQ #8,d2
00034D06 <AmiBlitz3.ab3@26707>   MOVE.l d0,a0
00034D08 <AmiBlitz3.ab3@26710>     MOVE.b (a0)+,d1
00034D0E <AmiBlitz3.ab3@26711>     JSR writebyte
00034D12 <AmiBlitz3.ab3@26712>  DBF d2,'l1
00034D14 <AmiBlitz3.ab3@26714>   MOVEQ #0,d0
00034D16 <AmiBlitz3.ab3@26715>   MOVE.b (a0)+,d0
00034D34 <AmiBlitz3.ab3@26716>   !asm
00034D3A <AmiBlitz3.ab3@26717>   ADD.l #9,a5
00034D3C <AmiBlitz3.ab3@26718> RTS
00034D66 <AmiBlitz3.ab3@26722>   !basic
00034D70 <AmiBlitz3.ab3@26723>   DateFormat 0
00034D7E <AmiBlitz3.ab3@26724>   i.l=SystemDate
00034DA4 <AmiBlitz3.ab3@26725>   a$=Date$ (i)
00034E22 <AmiBlitz3.ab3@26726>   a$=Replace$(a$,"/",".")
00034E28 <AmiBlitz3.ab3@26727>   GetD0 &a$
00034E2A <AmiBlitz3.ab3@26728>   MOVEQ #8,d2
00034E2C <AmiBlitz3.ab3@26729>   MOVE.l d0,a0
00034E2E <AmiBlitz3.ab3@26732>     MOVE.b (a0)+,d1
00034E34 <AmiBlitz3.ab3@26733>     JSR writebyte
00034E38 <AmiBlitz3.ab3@26734>  DBF d2,'l1
00034E3A <AmiBlitz3.ab3@26736>   MOVEQ #0,d0
00034E3C <AmiBlitz3.ab3@26737>   MOVE.b (a0)+,d0
00034E5A <AmiBlitz3.ab3@26738>   !asm
00034E60 <AmiBlitz3.ab3@26739>   ADD.l #13,a5
00034E62 <AmiBlitz3.ab3@26740> RTS
00034E64 <AmiBlitz3.ab3@26744>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00034E66 <AmiBlitz3.ab3@26745>   MOVE.l a5,d0
00034E90 <AmiBlitz3.ab3@26746>   !basic
00034E94 <AmiBlitz3.ab3@26747>   _myD0.l = PutD0
00034E9E <AmiBlitz3.ab3@26748>   If _myD0
00034EE4 <AmiBlitz3.ab3@26749>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034F36 <AmiBlitz3.ab3@26750>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00034F3C <AmiBlitz3.ab3@26751>   Else
00034F76 <AmiBlitz3.ab3@26752>     error{"INTERNAL: Invalid pointer in version_string!"}
00034F86 <AmiBlitz3.ab3@26757>   actual_version.l = Peek.l(?versioninformation)
00034F96 <AmiBlitz3.ab3@26758>   actual_build.l   = Peek.l(?number_of_builds)
00034FBA <AmiBlitz3.ab3@26760>   Format "00"
00034FF0 <AmiBlitz3.ab3@26761>   Select verstring$
00035014 <AmiBlitz3.ab3@26763>     Case "VER_MAJOR"
00035050 <AmiBlitz3.ab3@26764>      put_versionstr$ = Str$(actual_version LSR 24)
0003507A <AmiBlitz3.ab3@26766>     Case "VER_MINOR"
000350BE <AmiBlitz3.ab3@26767>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000350E8 <AmiBlitz3.ab3@26769>     Case "VER_PATCH"
0003512C <AmiBlitz3.ab3@26770>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00035156 <AmiBlitz3.ab3@26772>     Case "VER_BUILD"
0003517A <AmiBlitz3.ab3@26773>      Format ""
000351AE <AmiBlitz3.ab3@26774>      put_versionstr$ = Str$(actual_build)
000351B4 <AmiBlitz3.ab3@26776>     Default
000351DC <AmiBlitz3.ab3@26777>      put_versionstr$ = "{unknown compilerconstant}"
000351EA <AmiBlitz3.ab3@26780>   End Select
0003520E <AmiBlitz3.ab3@26781>   Format ""
0003521E <AmiBlitz3.ab3@26783>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00035220 <AmiBlitz3.ab3@26784>   MOVE.l d0,d2
00035222 <AmiBlitz3.ab3@26785>   MOVE.l d2,-(a7)
00035226 <AmiBlitz3.ab3@26786>   SUB #1,d2
0003522C <AmiBlitz3.ab3@26788>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0003522E <AmiBlitz3.ab3@26789>   MOVE.l d0,a0
00035230 <AmiBlitz3.ab3@26792>     MOVE.b (a0)+,d1
00035236 <AmiBlitz3.ab3@26793>     JSR pokedata1b
0003523A <AmiBlitz3.ab3@26794>  DBF d2,'l1
0003523C <AmiBlitz3.ab3@26796>   MOVEQ #0,d0
0003525A <AmiBlitz3.ab3@26797>   !asm
0003525C <AmiBlitz3.ab3@26798>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003525E <AmiBlitz3.ab3@26799>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00035260 <AmiBlitz3.ab3@26800>   ADD.l d0,d2
00035266 <AmiBlitz3.ab3@26801>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00035268 <AmiBlitz3.ab3@26802>   MOVEQ #0,d0
0003526A <AmiBlitz3.ab3@26803> RTS
0003526C <AmiBlitz3.ab3@26807>   MOVE.l a5,d0
00035296 <AmiBlitz3.ab3@26808>   !basic
0003529A <AmiBlitz3.ab3@26809>   _myD0.l = PutD0
000352A4 <AmiBlitz3.ab3@26810>   If _myD0
000352EA <AmiBlitz3.ab3@26811>     verstring$ = Left$(Peek.s(_myD0),9+3)
0003533C <AmiBlitz3.ab3@26812>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00035342 <AmiBlitz3.ab3@26813>   Else
0003537C <AmiBlitz3.ab3@26814>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
0003538C <AmiBlitz3.ab3@26819>   actual_version.l = Peek.l(?versioninformation)
0003539C <AmiBlitz3.ab3@26820>   actual_build.l   = Peek.l(?number_of_builds)
000353C0 <AmiBlitz3.ab3@26822>   Format ""
000353F6 <AmiBlitz3.ab3@26823>   Select verstring$
0003541A <AmiBlitz3.ab3@26825>     Case "VER_MAJOR"
00035456 <AmiBlitz3.ab3@26826>      put_versionstr$ = Str$(actual_version LSR 24)
00035480 <AmiBlitz3.ab3@26828>     Case "VER_MINOR"
000354C4 <AmiBlitz3.ab3@26829>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000354EE <AmiBlitz3.ab3@26831>     Case "VER_PATCH"
00035532 <AmiBlitz3.ab3@26832>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003555C <AmiBlitz3.ab3@26834>     Case "VER_BUILD"
00035580 <AmiBlitz3.ab3@26835>      Format ""
000355B4 <AmiBlitz3.ab3@26836>      put_versionstr$ = Str$(actual_build)
000355BA <AmiBlitz3.ab3@26838>     Default
000355E2 <AmiBlitz3.ab3@26839>      put_versionstr$ = "{unknown compilerconstant}"
000355F0 <AmiBlitz3.ab3@26841>   End Select
00035614 <AmiBlitz3.ab3@26842>   Format ""
0003562A <AmiBlitz3.ab3@26844>   GetD0 FLen(put_versionstr$)-1
0003562C <AmiBlitz3.ab3@26845>   MOVE.l d0,d2
00035632 <AmiBlitz3.ab3@26847>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00035634 <AmiBlitz3.ab3@26848>   MOVE.l d0,a0
00035636 <AmiBlitz3.ab3@26851>     MOVE.b (a0)+,d1
0003563C <AmiBlitz3.ab3@26852>     JSR writebyte
00035640 <AmiBlitz3.ab3@26853>  DBF d2,'l1
00035642 <AmiBlitz3.ab3@26855>   MOVEQ #0,d0
00035644 <AmiBlitz3.ab3@26856>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00035662 <AmiBlitz3.ab3@26857>   !asm
00035668 <AmiBlitz3.ab3@26858>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003566A <AmiBlitz3.ab3@26859> RTS
0003566C <AmiBlitz3.ab3@26961>  MOVE.l a5,-(a7)
00035698 <AmiBlitz3.ab3@26962>  !fget
0003569C <AmiBlitz3.ab3@26963>  CMP.w #".",d0
000356A0 <AmiBlitz3.ab3@26964>  BNE 'skip
000356A4 <AmiBlitz3.ab3@26965>  MOVEM.l a2/d2,-(a7)
000356AA <AmiBlitz3.ab3@26966>  LEA newtypebase,a2
000356B0 <AmiBlitz3.ab3@26967>  JSR getparameter2
000356B4 <AmiBlitz3.ab3@26968>  BEQ.w JUMP_syntaxerr
000356BA <AmiBlitz3.ab3@26969>  JSR findtype
000356BE <AmiBlitz3.ab3@26970>  BNE.w JUMP_notypeerr
000356C4 <AmiBlitz3.ab3@26971>  MOVE.l a2,typetocast
000356C8 <AmiBlitz3.ab3@26972>  MOVEM.l (a7)+,a2/d2
000356CC <AmiBlitz3.ab3@26973>  CMP.w #")",d0
000356D0 <AmiBlitz3.ab3@26974>  BNE JUMP_errorbracketmiss
000356D2 <AmiBlitz3.ab3@26975>  ADDQ.l #4,a7
000356FE <AmiBlitz3.ab3@26976>  !fget
00035704 <AmiBlitz3.ab3@26977>  JMP nocast
00035706 <AmiBlitz3.ab3@26979> 'skip MOVE.l (a7)+,a5
0003570C <AmiBlitz3.ab3@26980>  JMP JL_0_A410
00035712 <AmiBlitz3.ab3@26982> JUMP_errorbracketmiss JMP errorbracketmiss
0003573C <AmiBlitz3.ab3@26984> Function.l ab3_GetIncludeLock{filename.s}
0003575C <AmiBlitz3.ab3@26985>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000357B4 <AmiBlitz3.ab3@26986>   ex.s       = dos_GetExt{filename}
000357C8 <AmiBlitz3.ab3@26988>   If incLock = False
0003583C <AmiBlitz3.ab3@26989>     filename = dos_SetExt{filename,"ab3"}
0003585C <AmiBlitz3.ab3@26990>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00035870 <AmiBlitz3.ab3@26993>   If incLock = False
000358E4 <AmiBlitz3.ab3@26994>     filename = dos_SetExt{filename,"ab2"}
00035904 <AmiBlitz3.ab3@26995>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00035918 <AmiBlitz3.ab3@26998>   If incLock = False
0003598C <AmiBlitz3.ab3@26999>     filename = dos_SetExt{filename,"bb2"}
000359AC <AmiBlitz3.ab3@27000>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000359C0 <AmiBlitz3.ab3@27003>   If incLock = False
00035A52 <AmiBlitz3.ab3@27004>     filename = dos_SetExt{filename,ex+".ab3"}
00035A72 <AmiBlitz3.ab3@27005>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00035A86 <AmiBlitz3.ab3@27008>   If incLock = False
00035AFA <AmiBlitz3.ab3@27009>     filename = dos_SetExt{filename,"ab2"}
00035B1A <AmiBlitz3.ab3@27010>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00035B2E <AmiBlitz3.ab3@27013>   If incLock = False
00035BA2 <AmiBlitz3.ab3@27014>     filename = dos_SetExt{filename,"bb2"}
00035BC2 <AmiBlitz3.ab3@27015>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00035BCC <AmiBlitz3.ab3@27018>  Function Return incLock
00035BE6 <AmiBlitz3.ab3@27019> End Function
00035C10 <AmiBlitz3.ab3@27023>   !basic
00035C3A <AmiBlitz3.ab3@27024>   incString.s = Peek$(?ptr_parameterstore)
00035C68 <AmiBlitz3.ab3@27026>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00035C6C <AmiBlitz3.ab3@27027>   incDirP.l   = PutD0                                       ;    "
00035C94 <AmiBlitz3.ab3@27028>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00035D14 <AmiBlitz3.ab3@27029>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00035D46 <AmiBlitz3.ab3@27030>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00035D5A <AmiBlitz3.ab3@27032>   If incLock = False ; not found => check default Include Directory
00035D6A <AmiBlitz3.ab3@27033>     incDirP.l = Peek.l(?incd)
00035D74 <AmiBlitz3.ab3@27034>     If incDirP
00035D9C <AmiBlitz3.ab3@27035>       incDir_.s = Peek.s(incDirP)
00035DA2 <AmiBlitz3.ab3@27036>     Else
00035E0C <AmiBlitz3.ab3@27037>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035E8C <AmiBlitz3.ab3@27039>     incFile.s = dos_AddPart{incDir_,incString}
00035EBE <AmiBlitz3.ab3@27040>     incLock.l = ab3_GetIncludeLock{incFile}
00035ED2 <AmiBlitz3.ab3@27043>   If incLock = False ; not found => check relative to current source
00035EEA <AmiBlitz3.ab3@27044>     incDepth.l = Peek.w(?ininclude)-1
00035F10 <AmiBlitz3.ab3@27045>     If incDepth >= 0 AND incDepth < #maxincludes
00035F70 <AmiBlitz3.ab3@27046>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00035FF0 <AmiBlitz3.ab3@27047>       incFile.s = dos_AddPart{incDir_,incString}
00036022 <AmiBlitz3.ab3@27048>       incLock.l = ab3_GetIncludeLock{incFile}
00036036 <AmiBlitz3.ab3@27052>   If incLock = False ; still not found => check default Include Directory and name only
00036046 <AmiBlitz3.ab3@27053>     incDirP.l = Peek.l(?incd)
00036050 <AmiBlitz3.ab3@27054>     If incDirP
00036078 <AmiBlitz3.ab3@27055>       incDir_.s = Peek.s(incDirP)
0003607E <AmiBlitz3.ab3@27056>     Else
000360E8 <AmiBlitz3.ab3@27057>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00036196 <AmiBlitz3.ab3@27059>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
000361C8 <AmiBlitz3.ab3@27060>     incLock.l = ab3_GetIncludeLock{incFile}
000361D2 <AmiBlitz3.ab3@27063>   If incLock
000361E8 <AmiBlitz3.ab3@27064>     MaxLen incFile = 1024
0003620C <AmiBlitz3.ab3@27065>     NameFromLock_ incLock,&incFile,1024
00036236 <AmiBlitz3.ab3@27066>     incFile = Peek.s(&incFile)
0003626E <AmiBlitz3.ab3@27067>     Poke$ ?ptr_parameterstore,incFile
00036282 <AmiBlitz3.ab3@27068>     i = FLen(incFile)
0003628E <AmiBlitz3.ab3@27069>     GetReg d0,i
00036294 <AmiBlitz3.ab3@27070>     MOVE.l d0,tempstore
000362A4 <AmiBlitz3.ab3@27071>     UnLock_ incLock
000362C2 <AmiBlitz3.ab3@27074>   !asm
000362C8 <AmiBlitz3.ab3@27075>   TST.l tempstore
000362CC <AmiBlitz3.ab3@27076>    BEQ 'l1
000362D2 <AmiBlitz3.ab3@27077>   MOVE.l tempstore,d2
000362D4 <AmiBlitz3.ab3@27080> RTS
000362FE <AmiBlitz3.ab3@27084>   !basic
00036328 <AmiBlitz3.ab3@27085>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00036356 <AmiBlitz3.ab3@27086>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003635A <AmiBlitz3.ab3@27087>   incDirP.l   = PutD0                                       ;    "
00036382 <AmiBlitz3.ab3@27088>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00036402 <AmiBlitz3.ab3@27089>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00036422 <AmiBlitz3.ab3@27090>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00036436 <AmiBlitz3.ab3@27092>   If incLock = False                                        ; not found => try orignal string only to find
00036456 <AmiBlitz3.ab3@27093>     incLock.l = Lock_(&incString,#ACCESS_READ)
00036460 <AmiBlitz3.ab3@27096>   If incLock                                                ; found => store full path
00036476 <AmiBlitz3.ab3@27097>     MaxLen incFile = 1024
0003649A <AmiBlitz3.ab3@27098>     NameFromLock_ incLock,&incFile,1024
000364C4 <AmiBlitz3.ab3@27099>     incFile = Peek.s(&incFile)
000364FC <AmiBlitz3.ab3@27100>     Poke$ ?ptr_parameterstore,incFile
00036508 <AmiBlitz3.ab3@27103> 
00036526 <AmiBlitz3.ab3@27104>   !asm
00036528 <AmiBlitz3.ab3@27105> RTS
0003652E <AmiBlitz3.ab3@27116>   JSR Aclearallvars
00036534 <AmiBlitz3.ab3@27117>   JSR free_unusedfunctions
0003653E <AmiBlitz3.ab3@27132>   MOVE.l #"NORE",reqmode
00036544 <AmiBlitz3.ab3@27133> JSR handle_compileerror
00036546 <AmiBlitz3.ab3@27136>   MOVE.l d0,-(a7)
00036548 <AmiBlitz3.ab3@27137>   MOVE.l a5,d0
00036552 <AmiBlitz3.ab3@27138>   !basica7
00036556 <AmiBlitz3.ab3@27139>   i.l = PutD0
00036560 <AmiBlitz3.ab3@27140>   If i
00036588 <AmiBlitz3.ab3@27141>     a$ = Peek$(i)
000365BA <AmiBlitz3.ab3@27142>     b$ = Peeks$(i-7,7)
000366F2 <AmiBlitz3.ab3@27144> 
000366F8 <AmiBlitz3.ab3@27145>     MOVE.l d0,result
000366FC <AmiBlitz3.ab3@27147>   !asma7
000366FE <AmiBlitz3.ab3@27148>   MOVE.l (a7)+,d0
00036700 <AmiBlitz3.ab3@27149> RTS
0003672A <AmiBlitz3.ab3@27153>   !basic
00036758 <AmiBlitz3.ab3@27154>   !ComData_LEA{comStr_CurrentDir,D0}
0003675C <AmiBlitz3.ab3@27155>   currentDirP.l = PutD0
0003678A <AmiBlitz3.ab3@27157>   !ComData_LEA{comStr_SourceName,D0}
0003678E <AmiBlitz3.ab3@27158>   fileNameP.l = PutD0
000367B6 <AmiBlitz3.ab3@27160>   check_dirname$  = Peek$(currentDirP)
000367DE <AmiBlitz3.ab3@27161>   check_filename$ = Peek$(fileNameP)
00036864 <AmiBlitz3.ab3@27162>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
0003686A <AmiBlitz3.ab3@27163>     JSR free_unusedfunctions
000368B4 <AmiBlitz3.ab3@27165>   olddirname$ = Peek$(check_dirname$)
000368FE <AmiBlitz3.ab3@27166>   oldfilename$ = Peek$(check_filename$)
00036928 <AmiBlitz3.ab3@27167>   For i = 0 To #maxincludes-1
0003693C <AmiBlitz3.ab3@27168>     incline(i) = 0
0003694C <AmiBlitz3.ab3@27169>   Next
0003696A <AmiBlitz3.ab3@27170>   !asm
0003696C <AmiBlitz3.ab3@27171> RTS
0003696E <AmiBlitz3.ab3@27175>   MOVEQ #0,d1
00036970 <AmiBlitz3.ab3@27178>   MOVE.b (a5)+,d0
00036974 <AmiBlitz3.ab3@27179>   BEQ 'er1
00036978 <AmiBlitz3.ab3@27180>   CMP.b #$20,d0
0003697C <AmiBlitz3.ab3@27181>   BEQ 'l1
0003697E <AmiBlitz3.ab3@27182>   ADDQ #1,d1
00036982 <AmiBlitz3.ab3@27183>   CMP.b #$22,d0
00036986 <AmiBlitz3.ab3@27184>   BNE 'l1
00036988 <AmiBlitz3.ab3@27185> RTS
0003698E <AmiBlitz3.ab3@27188> JMP syntaxerr
000369B2 <AmiBlitz3.ab3@27199> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
000369D0 <AmiBlitz3.ab3@27200> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
000369D6 <AmiBlitz3.ab3@27205>   TST.b exdebug
000369DA <AmiBlitz3.ab3@27206>   BNE 'l10
000369E0 <AmiBlitz3.ab3@27207>   MOVE.l #$4e71,d1
000369E6 <AmiBlitz3.ab3@27208>   JSR writeword
000369EC <AmiBlitz3.ab3@27209>   MOVE.l destpointer,d0
000369EE <AmiBlitz3.ab3@27210>   MOVE.l d0,d1
000369F0 <AmiBlitz3.ab3@27211>   ADDQ.l #3,d1
000369F6 <AmiBlitz3.ab3@27212>   AND.l #$fffffffc,d1
000369FC <AmiBlitz3.ab3@27213>   MOVE.l d1,destpointer
00036A02 <AmiBlitz3.ab3@27214>   SUB.l destpointer,d0
00036A06 <AmiBlitz3.ab3@27215>   BEQ 'lnf1
00036A10 <AmiBlitz3.ab3@27216>   CMP.l #-1,bssstart
00036A14 <AmiBlitz3.ab3@27217>   BNE 'lnf1
00036A1E <AmiBlitz3.ab3@27218>   CMP.l #-1,chipstart
00036A22 <AmiBlitz3.ab3@27219>   BNE 'lnf1
00036A28 <AmiBlitz3.ab3@27220>   MOVE.l destpointer,a4
00036A2E <AmiBlitz3.ab3@27221>   TST.w dontwrite
00036A32 <AmiBlitz3.ab3@27222>   BNE 'lnf1
00036A38 <AmiBlitz3.ab3@27223>   MOVE.w #$4e71,-2(a4)
00036A42 <AmiBlitz3.ab3@27226>   CMP.l #-1,bssstart
00036A46 <AmiBlitz3.ab3@27227>   BEQ 'l11
00036A4C <AmiBlitz3.ab3@27228>   MOVE.l #erro1t,-(a7)
00036A52 <AmiBlitz3.ab3@27229> JMP handle_compileerror
00036A5C <AmiBlitz3.ab3@27232>   MOVE.l destpointer,bssstart
00036A64 <AmiBlitz3.ab3@27233>   MOVE.b #1,bssmode
00036A6A <AmiBlitz3.ab3@27236>   TST.b chipmode
00036A6E <AmiBlitz3.ab3@27237>   BEQ 'l10
00036A78 <AmiBlitz3.ab3@27238>   MOVE.l destpointer,chipend
00036A7E <AmiBlitz3.ab3@27239>   CLR.b chipmode
00036A84 <AmiBlitz3.ab3@27242>   JSR get1bytemain
00036A86 <AmiBlitz3.ab3@27243> RTS
00036A8C <AmiBlitz3.ab3@27247>    TST.b exdebug
00036A90 <AmiBlitz3.ab3@27248>   BNE 'x1
00036A96 <AmiBlitz3.ab3@27249>   MOVE.l destpointer,d0
00036A9C <AmiBlitz3.ab3@27250>   MOVE.l d0,realbssend
00036AA2 <AmiBlitz3.ab3@27251>   MOVE.l #$4e71,d1
00036AA8 <AmiBlitz3.ab3@27252>   JSR writeword
00036AAE <AmiBlitz3.ab3@27253>   MOVE.l destpointer,d0
00036AB0 <AmiBlitz3.ab3@27254>   MOVE.l d0,d1
00036AB2 <AmiBlitz3.ab3@27255>   ADDQ.l #3,d1
00036AB8 <AmiBlitz3.ab3@27256>   AND.l #$fffffffc,d1
00036ABE <AmiBlitz3.ab3@27257>   MOVE.l d1,destpointer
00036AC4 <AmiBlitz3.ab3@27258>   SUB.l destpointer,d0
00036AC8 <AmiBlitz3.ab3@27259>   BEQ 'lnf1
00036ACE <AmiBlitz3.ab3@27260>   MOVE.l destpointer,a4
00036AD8 <AmiBlitz3.ab3@27261>   CMP.l #-1,bssstart
00036ADC <AmiBlitz3.ab3@27262>   BNE 'lnf1
00036AE6 <AmiBlitz3.ab3@27263>   CMP.l #-1,chipstart
00036AEA <AmiBlitz3.ab3@27264>   BNE 'lnf1
00036AF0 <AmiBlitz3.ab3@27265>   TST.w dontwrite
00036AF4 <AmiBlitz3.ab3@27266>   BNE 'lnf1
00036AFA <AmiBlitz3.ab3@27267>   MOVE.w #$4e71,-2(a4)
00036B00 <AmiBlitz3.ab3@27270>   TST.b bssmode
00036B04 <AmiBlitz3.ab3@27271>   BEQ 'l10
00036B0E <AmiBlitz3.ab3@27272>   MOVE.l destpointer,bssend
00036B14 <AmiBlitz3.ab3@27273>   CLR.b bssmode
00036B1E <AmiBlitz3.ab3@27278>   CMP.l #-1,chipstart
00036B22 <AmiBlitz3.ab3@27279>   BEQ 'l11
00036B28 <AmiBlitz3.ab3@27280>   MOVE.l #erro1t,-(a7)
00036B2E <AmiBlitz3.ab3@27281> JMP handle_compileerror
00036B38 <AmiBlitz3.ab3@27284>   MOVE.l destpointer,chipstart
00036B40 <AmiBlitz3.ab3@27285>   MOVE.b #1,chipmode
00036B46 <AmiBlitz3.ab3@27288>   JSR get1bytemain
00036B48 <AmiBlitz3.ab3@27289> RTS
00036B72 <AmiBlitz3.ab3@27293>   !basic
00036B84 <AmiBlitz3.ab3@27303>   i.l = Peek.w(?ininclude)
00036BAA <AmiBlitz3.ab3@27304>   If i>=0 AND i<#maxincludes
00036BDC <AmiBlitz3.ab3@27305>     incdim (i) = Peek.s(?includetemp2)
00036BF6 <AmiBlitz3.ab3@27306>     incline(i) = Peek.l(?includeline)
00036C00 <AmiBlitz3.ab3@27308>     If CLIMode
00036CAE <AmiBlitz3.ab3@27309>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00036CCC <AmiBlitz3.ab3@27313>   !asm
00036CCE <AmiBlitz3.ab3@27314> RTS
00036CF8 <AmiBlitz3.ab3@27318>   !basic
00036D0A <AmiBlitz3.ab3@27319>   i.l = Peek.w(?ininclude)
00036D30 <AmiBlitz3.ab3@27320>   If i>=0 AND i<#maxincludes
00036D60 <AmiBlitz3.ab3@27321>     incdim (i) = ""
00036D74 <AmiBlitz3.ab3@27322>     incline(i) = 0
00036DAC <AmiBlitz3.ab3@27323>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00036DCA <AmiBlitz3.ab3@27325>   !asm
00036DCC <AmiBlitz3.ab3@27326> RTS
00036DD2 <AmiBlitz3.ab3@27330>   LEA replacedat,a0
00036DD6 <AmiBlitz3.ab3@27331>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00036DD8 <AmiBlitz3.ab3@27332> RTS
00036DDE <AmiBlitz3.ab3@27336>   TST.b fpu
00036DE2 <AmiBlitz3.ab3@27337>   BEQ 'l1
00036DEC <AmiBlitz3.ab3@27340>   MOVE.l destpointer,newinitaddr
00036DF2 <AmiBlitz3.ab3@27341>   JSR writeword
00036DF8 <AmiBlitz3.ab3@27342>   JSR writelong
00036DFA <AmiBlitz3.ab3@27343> RTS
00036DFC <AmiBlitz3.ab3@27348>   TST.b (a5)
00036E00 <AmiBlitz3.ab3@27349>    BEQ.s 'll20
00036E04 <AmiBlitz3.ab3@27350>   CMP.b #$20,(a5)
00036E08 <AmiBlitz3.ab3@27351>    BNE.s 'll10
00036E0A <AmiBlitz3.ab3@27352>   ADDQ.l #1,a5
00036E0E <AmiBlitz3.ab3@27353> BRA.s 'll21
00036E12 <AmiBlitz3.ab3@27356>   CMP.b #";",(a5)
00036E16 <AmiBlitz3.ab3@27357>   BNE.s 'll20
00036E18 <AmiBlitz3.ab3@27360>   TST.b (a5)+
00036E1C <AmiBlitz3.ab3@27361>   BEQ.s 'll23
00036E20 <AmiBlitz3.ab3@27362> BRA.s 'll25
00036E22 <AmiBlitz3.ab3@27365>   SUBQ.l #1,a5
00036E24 <AmiBlitz3.ab3@27368> RTS
00036E28 <AmiBlitz3.ab3@27372>   MOVEM.l a2/d2,-(a7)
00036E2A <AmiBlitz3.ab3@27373>   MOVEQ #0,d2
00036E30 <AmiBlitz3.ab3@27374>   LEA ptr_parameterstore,a0
00036E36 <AmiBlitz3.ab3@27375>   LEA chartab,a2
00036E38 <AmiBlitz3.ab3@27378>   MOVE.b (a5),d0
00036E3C <AmiBlitz3.ab3@27379>   TST.b 0(a2,d0)
00036E40 <AmiBlitz3.ab3@27380>   BNE 'l10
00036E42 <AmiBlitz3.ab3@27381>   ADDQ.l #1,a5
00036E44 <AmiBlitz3.ab3@27382>   MOVE.b d0,(a0)+
00036E46 <AmiBlitz3.ab3@27383>   ADDQ.l #1,d2
00036E4A <AmiBlitz3.ab3@27384> BRA fc2
00036E4C <AmiBlitz3.ab3@27387>   CLR.b (a0)+
00036E52 <AmiBlitz3.ab3@27388>   JSR findlabel2
00036E54 <AmiBlitz3.ab3@27389>   MOVE.l a2,a0
00036E58 <AmiBlitz3.ab3@27390>   MOVEM.l (a7)+,a2/d2
00036E5A <AmiBlitz3.ab3@27391> RTS
00036E5C <AmiBlitz3.ab3@27395>   TST.l d0
00036E60 <AmiBlitz3.ab3@27396>   BNE 'l10
00036E66 <AmiBlitz3.ab3@27397>     MOVE.l #syntax_,-(a7)
00036E6C <AmiBlitz3.ab3@27398> JMP handle_compileerror
00036E72 <AmiBlitz3.ab3@27401>   CMP.l #1,d0
00036E76 <AmiBlitz3.ab3@27402>   BNE 'l20
00036E7C <AmiBlitz3.ab3@27403>     MOVE.l #overflow,-(a7)
00036E82 <AmiBlitz3.ab3@27404> JMP handle_compileerror
00036E84 <AmiBlitz3.ab3@27407>   ADD.l a2,d0
00036E86 <AmiBlitz3.ab3@27408>   MOVE.l d0,-(a7)
00036E8C <AmiBlitz3.ab3@27409> JMP handle_compileerror
00036E92 <AmiBlitz3.ab3@27413>   JMP _return
00036E98 <AmiBlitz3.ab3@27414>   JMP _return
00036E9E <AmiBlitz3.ab3@27415>   JMP _return
00036EA4 <AmiBlitz3.ab3@27416>   JMP _return
00036EAA <AmiBlitz3.ab3@27417>   JMP _return
00036EB0 <AmiBlitz3.ab3@27418>   JMP _return
00036EB6 <AmiBlitz3.ab3@27419>   JMP _return
00036EBC <AmiBlitz3.ab3@27420>   JMP _return
00036EC2 <AmiBlitz3.ab3@27421>   JMP _return
00036EC8 <AmiBlitz3.ab3@27422>   JMP _return
00036ECE <AmiBlitz3.ab3@27423>   JMP Atokejsr
00036ED4 <AmiBlitz3.ab3@27424>   JMP writeinit
00036EDA <AmiBlitz3.ab3@27425>   JMP macroexecute
00036EE0 <AmiBlitz3.ab3@27426>   JMP findnext
00036EE6 <AmiBlitz3.ab3@27427>   JMP replacelib
00036EEC <AmiBlitz3.ab3@27428>   JMP findconstant2
00036EF2 <AmiBlitz3.ab3@27429>   JMP findchar                                             ;char in d1
00036EF8 <AmiBlitz3.ab3@27430>   JMP stripspaces
00036EFE <AmiBlitz3.ab3@27431>   JMP calc                                                 ;d0 varmode
00036F04 <AmiBlitz3.ab3@27432>   JMP error
00036F0A <AmiBlitz3.ab3@27433>   JMP writelong                                            ;d1 value
00036F10 <AmiBlitz3.ab3@27434>   JMP writeword                                            ;d1 value
00036F16 <AmiBlitz3.ab3@27435>   JMP writebyte                                            ;d1 value
00036F1C <AmiBlitz3.ab3@27436> JMP exit
00036F20 <AmiBlitz3.ab3@27440>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00036F22 <AmiBlitz3.ab3@27443>   fast            Dc.w 0
00036F24 <AmiBlitz3.ab3@27444>   fpu             Dc.w 0
00036F26 <AmiBlitz3.ab3@27445>   newsyntax       Dc.w 0
00036F27 <AmiBlitz3.ab3@27447>   optistring      Dc.b 0
00036F28 <AmiBlitz3.ab3@27448>   optistring2     Dc.b 0
00036F29 <AmiBlitz3.ab3@27449>   optiarray       Dc.b 0
00036F2A <AmiBlitz3.ab3@27450>   quickadd        Dc.b 0
00036F2C <AmiBlitz3.ab3@27451>   newmode         Dc.w 0
00036F2E <AmiBlitz3.ab3@27452>   mode            Dc.w 0
00036F30 <AmiBlitz3.ab3@27453>   string1         Dc.w 0
00036F32 <AmiBlitz3.ab3@27454>   load_var_size   Dc.w 0
00036F34 <AmiBlitz3.ab3@27455>   load_var_reg    Dc.w 0
00036F38 <AmiBlitz3.ab3@27456>   load_var_addr   Dc.l 0
00036F3A <AmiBlitz3.ab3@27457>   imm_size        Dc.w 0
00036F3C <AmiBlitz3.ab3@27458>   imm_reg         Dc.w 0
00036F40 <AmiBlitz3.ab3@27459>   imm_addr        Dc.l 0
00036F41 <AmiBlitz3.ab3@27460>   iee             Dc.b 0
00036F42 <AmiBlitz3.ab3@27461>   _dcb            Dc.b 0
00036F46 <AmiBlitz3.ab3@27462>   nohunkoffset    Dc.l 0
00036F4A <AmiBlitz3.ab3@27465> teddata:        Dc.l tokens
00036F4E <AmiBlitz3.ab3@27466>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00036F52 <AmiBlitz3.ab3@27467>                 Dc.l read_xtrafile
00036F56 <AmiBlitz3.ab3@27468>                 Dc.l write_xtrafile
00036F5A <AmiBlitz3.ab3@27469>                 Dc.l call_menuentry                        ; compile AND RUN ?
00036F5E <AmiBlitz3.ab3@27470>                 Dc.l 0
00036F62 <AmiBlitz3.ab3@27471>                 Dc.b ":",34,".;"
00036F66 <AmiBlitz3.ab3@27472>                 Dc.l "NEW1"
00036F6A <AmiBlitz3.ab3@27473>                 Dc.l newtypebase
00036F6E <AmiBlitz3.ab3@27474> realconstbase:  Dc.l labelbase
00036F72 <AmiBlitz3.ab3@27475> deflib          Dc.l 0
00036F76 <AmiBlitz3.ab3@27476> incd            Dc.l 0
00036F7A <AmiBlitz3.ab3@27477>                 Dc.l 0
00036F7E <AmiBlitz3.ab3@27478>                 Dc.l 0
00036F82 <AmiBlitz3.ab3@27479>                 Dc.l 0
00036F84 <AmiBlitz3.ab3@27480> _return         RTS
00036F85 <AmiBlitz3.ab3@27481>                 Dc.b 0
00037385 <AmiBlitz3.ab3@27482> chartab2        Ds.l 256
00037389 <AmiBlitz3.ab3@27483> codeend         Dc.l 0
0003738D <AmiBlitz3.ab3@27484> hunkoffsetnum   Dc.l 0
00037391 <AmiBlitz3.ab3@27485> chipsize        Dc.l 0
00037395 <AmiBlitz3.ab3@27486> bsssize         Dc.l 0
00037399 <AmiBlitz3.ab3@27487> bssstart        Dc.l -1
0003739D <AmiBlitz3.ab3@27488> bssend          Dc.l -1
000373A1 <AmiBlitz3.ab3@27489> chipstart       Dc.l -1
000373A5 <AmiBlitz3.ab3@27490> chipend         Dc.l -1
000373A6 <AmiBlitz3.ab3@27491> bssmode         Dc.b 0
000373A7 <AmiBlitz3.ab3@27492> chipmode        Dc.b 0
000373A8 <AmiBlitz3.ab3@27493> newhunk         Dc.b 0
000373AC <AmiBlitz3.ab3@27494> bssnum          Dc.l 0
000373B0 <AmiBlitz3.ab3@27495> chipnum         Dc.l 0
000373B4 <AmiBlitz3.ab3@27496> lastinstruction Dc.l 0
000373B8 <AmiBlitz3.ab3@27497> lastinstructionaddr Dc.l 0
000373CC <AmiBlitz3.ab3@27498> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
000373D0 <AmiBlitz3.ab3@27499> tstsize1b:      Ds.l 1
000373D4 <AmiBlitz3.ab3@27500> bsssize2        Dc.l 1
000373D8 <AmiBlitz3.ab3@27501>                 Dc.l $03E9
000373DC <AmiBlitz3.ab3@27502> tstsize2b:      Dc.l $100
000373F0 <AmiBlitz3.ab3@27503> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
000373F4 <AmiBlitz3.ab3@27504> tstsize1c:      Ds.l 1
000373F8 <AmiBlitz3.ab3@27505> bsssize3        Dc.l 1
000373FC <AmiBlitz3.ab3@27506> chipsize2       Dc.l 1
00037400 <AmiBlitz3.ab3@27507>                 Dc.l $3e9
00037404 <AmiBlitz3.ab3@27508> tstsize2c       Dc.l 0
00037414 <AmiBlitz3.ab3@27509> hunkend         Dc.l $3f2,$3eb,0,$3f2
00037424 <AmiBlitz3.ab3@27510> hunkend2        Dc.l $3f2,$3ea,0,$3f2
0003742B <AmiBlitz3.ab3@27511> strcpy          Dc.b "strcpy",0
00037432 <AmiBlitz3.ab3@27512> strcmp          Dc.b "strcmp",0
00037439 <AmiBlitz3.ab3@27513> strvar          Dc.b "strvar",0
0003743E <AmiBlitz3.ab3@27514> qmul            Dc.b "qmul",0
00037443 <AmiBlitz3.ab3@27515> qdiv            Dc.b "qdiv",0
0003744A <AmiBlitz3.ab3@27516> _MaxLen         Dc.b "maxlen",0
0003744F <AmiBlitz3.ab3@27517> notf            Dc.b "????",0
00037472 <AmiBlitz3.ab3@27519> errtext         Dc.b "only reg addressing Mode supported",0
0003749C <AmiBlitz3.ab3@27520> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
000374DE <AmiBlitz3.ab3@27521> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
000374E0 <AmiBlitz3.ab3@27522> peeksize        Dc.w 0
000374E4 <AmiBlitz3.ab3@27524> mainstart       Dc.l 0
000374E5 <AmiBlitz3.ab3@27526> infunctioncode  Dc.b 0
000374E7 <AmiBlitz3.ab3@27527> regnumstore     Dc.w 0
00037514 <AmiBlitz3.ab3@27528>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003751C <AmiBlitz3.ab3@27529> testcode        Dc.b "print i",0
00037580 <AmiBlitz3.ab3@27530>                 Ds.b 100
0003758E <AmiBlitz3.ab3@27531> devo            Dc.b "developobject",0 : Even
000375A0 <AmiBlitz3.ab3@27532> autostorename   Dc.b "__autoconstantnum",0
000375AA <AmiBlitz3.ab3@27533> _include        Dc.b "__include",0
000375B2 <AmiBlitz3.ab3@27534> _debug          Dc.b "__debug",0
000375B6 <AmiBlitz3.ab3@27535> unusedfunc      Dc.l 0
000375B8 <AmiBlitz3.ab3@27539>   MOVE.l a0,d0
000375E2 <AmiBlitz3.ab3@27540>   !basic
000375E6 <AmiBlitz3.ab3@27541>   *olderror.l= PutD0
00037640 <AmiBlitz3.ab3@27542> 
00037674 <AmiBlitz3.ab3@27543>   error_type$ = error$
00037710 <AmiBlitz3.ab3@27544> 
00037724 <AmiBlitz3.ab3@27545>   If Peek.l (?beforeparameterfetch)
0003773A <AmiBlitz3.ab3@27546>     MaxLen detokenline.s = 65536
0003777C <AmiBlitz3.ab3@27547>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003778C <AmiBlitz3.ab3@27548>    *tn.preprocessor = Peek.l(?include_preprocessor)
000377B6 <AmiBlitz3.ab3@27549>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
000377DE <AmiBlitz3.ab3@27550>     If written>0 Then Poke.b &detokenline+written,0
00037808 <AmiBlitz3.ab3@27551>     sourceLineText.s = Peek.s(&detokenline)
0003780E <AmiBlitz3.ab3@27552>   Else
00037836 <AmiBlitz3.ab3@27553>     sourceLineText = "NULL"
0003786A <AmiBlitz3.ab3@27555>   error_source$ = sourceLineText
000378BC <AmiBlitz3.ab3@27556>   error$=error$+sourceLineText
000378C2 <AmiBlitz3.ab3@27557>   GetD0 &error$
000378E0 <AmiBlitz3.ab3@27558>   !asm
000378E2 <AmiBlitz3.ab3@27559>   MOVE.l d0,a0
000378E4 <AmiBlitz3.ab3@27560> RTS
000378E6 <AmiBlitz3.ab3@27564>   MOVE.l a0,-(a7)
000378E8 <AmiBlitz3.ab3@27565>   MOVE.l a0,d0
000378EA <AmiBlitz3.ab3@27566>   MOVE.l a5,a0                                             ;macro title
00037914 <AmiBlitz3.ab3@27567>   !basic
00037918 <AmiBlitz3.ab3@27568>   i = PutD0
0003791A <AmiBlitz3.ab3@27569>   MOVEQ #20,d0
0003791C <AmiBlitz3.ab3@27572>     MOVE.b -(a0),d1
00037920 <AmiBlitz3.ab3@27573>     BEQ 'l1
00037924 <AmiBlitz3.ab3@27574>     CMP.b #":",d1
00037928 <AmiBlitz3.ab3@27575>     BEQ 'l1
0003792A <AmiBlitz3.ab3@27576>     SUBQ.l #1,d0
0003792E <AmiBlitz3.ab3@27577>     BNE 'l2
00037930 <AmiBlitz3.ab3@27580>   ADDQ #1,a0
00037932 <AmiBlitz3.ab3@27581>   MOVE.l a0,d0
00037936 <AmiBlitz3.ab3@27582>   i2.l = PutD0
00037952 <AmiBlitz3.ab3@27583>   If Peek.w (?ininclude)>0
000379AC <AmiBlitz3.ab3@27584>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000379BC <AmiBlitz3.ab3@27585>     errorline.l = Peek.l(?includeline);-1
000379E4 <AmiBlitz3.ab3@27586>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00037A0E <AmiBlitz3.ab3@27587>     errorfile.s = Peek.s(?includetemp2)
00037A14 <AmiBlitz3.ab3@27588>   Else
00037A4C <AmiBlitz3.ab3@27589>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00037A62 <AmiBlitz3.ab3@27590>     errorline.l = Peek.l(?compilelinecounter) + 1
00037A96 <AmiBlitz3.ab3@27591>     errorfile.s = cli_sourcefile
00037AA0 <AmiBlitz3.ab3@27594>   If i
00037B44 <AmiBlitz3.ab3@27595>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00037BC2 <AmiBlitz3.ab3@27596>     errortext.s = Replace$(errortext,"\n","\\0a")
00037BC8 <AmiBlitz3.ab3@27597>   Else
00037BF0 <AmiBlitz3.ab3@27598>     errortext.s = "???"
00037D68 <AmiBlitz3.ab3@27601>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00037E30 <AmiBlitz3.ab3@27602>   NPrint "  ",error_type$,"\\n  ",error_source$
00037E4E <AmiBlitz3.ab3@27606>   !asm
00037E50 <AmiBlitz3.ab3@27607>   MOVE.l (a7)+,a0
00037E52 <AmiBlitz3.ab3@27608> RTS
00037E54 <AmiBlitz3.ab3@27612>   MOVE.l a0,-(a7)
00037E56 <AmiBlitz3.ab3@27613>   MOVE.l a0,d0
00037E58 <AmiBlitz3.ab3@27614>   MOVE.l a5,a0                                             ;macro title
00037E82 <AmiBlitz3.ab3@27615>   !basic
00037E86 <AmiBlitz3.ab3@27616>   i = PutD0
00037E88 <AmiBlitz3.ab3@27617>   MOVEQ #20,d0
00037E8A <AmiBlitz3.ab3@27620>     MOVE.b -(a0),d1
00037E8E <AmiBlitz3.ab3@27621>     BEQ 'l1
00037E92 <AmiBlitz3.ab3@27622>     CMP.b #":",d1
00037E96 <AmiBlitz3.ab3@27623>     BEQ 'l1
00037E98 <AmiBlitz3.ab3@27624>     SUBQ.l #1,d0
00037E9C <AmiBlitz3.ab3@27625>     BNE 'l2
00037E9E <AmiBlitz3.ab3@27628>   ADDQ #1,a0
00037EA0 <AmiBlitz3.ab3@27629>   MOVE.l a0,d0
00037EA4 <AmiBlitz3.ab3@27630>   i2.l = PutD0
00037F28 <AmiBlitz3.ab3@27631>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00037F3C <AmiBlitz3.ab3@27632>   If fid <> -1
00037F58 <AmiBlitz3.ab3@27633>     If Peek.w (?ininclude)>0
00037FB2 <AmiBlitz3.ab3@27634>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00037FB8 <AmiBlitz3.ab3@27635>     Else
00037FE4 <AmiBlitz3.ab3@27636>       Poke$(?includetemp2),""
0003800E <AmiBlitz3.ab3@27638>     a$ = Peek$(?includetemp2)
00038080 <AmiBlitz3.ab3@27639>     x$ = Replace$(Peek$(i),"\\0a","\n")
000380B2 <AmiBlitz3.ab3@27640>     file_WriteLine{fid,x$}
000380FC <AmiBlitz3.ab3@27641>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00038128 <AmiBlitz3.ab3@27642>     If a$
0003815A <AmiBlitz3.ab3@27643>       file_WriteLine{fid,a$}
000381A4 <AmiBlitz3.ab3@27644>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
000381CC <AmiBlitz3.ab3@27645>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000381D2 <AmiBlitz3.ab3@27646>     Else
000381F8 <AmiBlitz3.ab3@27647>       file_WriteLine{fid,"none"}
00038228 <AmiBlitz3.ab3@27649>     file_WriteLine{fid,Peek$(i2)}
0003827E <AmiBlitz3.ab3@27650>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
000382C8 <AmiBlitz3.ab3@27651>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
000382D2 <AmiBlitz3.ab3@27652>     file_Close{fid}
000382F0 <AmiBlitz3.ab3@27654>   !asm
000382F2 <AmiBlitz3.ab3@27655>   MOVE.l (a7)+,a0
000382F4 <AmiBlitz3.ab3@27656> RTS
0003831E <AmiBlitz3.ab3@27660>   !basic
00038322 <AmiBlitz3.ab3@27661>   progress.l     = PutD0
00038334 <AmiBlitz3.ab3@27662>   total.l        = Peek.w(?progressbar_width)
00038352 <AmiBlitz3.ab3@27663>   calcpro        = (progress * 100) / total +1
00038364 <AmiBlitz3.ab3@27664>   pass.l         = Peek.w(?pass)
00038376 <AmiBlitz3.ab3@27665>   typ.l          = Peek.w(?compiler_job)
00038394 <AmiBlitz3.ab3@27668> If (pass><pass_old OR typ><typ_old)
000383A2 <AmiBlitz3.ab3@27670>     If pass_old><pass
0003843E <AmiBlitz3.ab3@27671>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00038494 <AmiBlitz3.ab3@27672>       If cli_verbose>=2 Then NPrint passtatusstr
0003849A <AmiBlitz3.ab3@27675>     pass_old = pass
000384A0 <AmiBlitz3.ab3@27676>     typ_old  = typ
000384A6 <AmiBlitz3.ab3@27677>     update_comstatus_gui = True
000384B8 <AmiBlitz3.ab3@27678>     If typ=0
00038598 <AmiBlitz3.ab3@27679>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
000385A0 <AmiBlitz3.ab3@27680>       calcpro = 0  ; set gauge to 0
000385B2 <AmiBlitz3.ab3@27682>     If typ=1
00038692 <AmiBlitz3.ab3@27683>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003869A <AmiBlitz3.ab3@27684>       calcpro = 0  ; set gauge to 0
000386F0 <AmiBlitz3.ab3@27687>     If cli_verbose>=3 Then NPrint comstatusstr
000386FE <AmiBlitz3.ab3@27690>   If (calcpro >< calcpro_old)
00038752 <AmiBlitz3.ab3@27691>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
00038758 <AmiBlitz3.ab3@27692>     calcpro_old = calcpro
0003875E <AmiBlitz3.ab3@27693>     update_comstatus_gui = True
00038778 <AmiBlitz3.ab3@27696>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00038796 <AmiBlitz3.ab3@27697>     !asm
000387C8 <AmiBlitz3.ab3@27698> 
000387F2 <AmiBlitz3.ab3@27699>     !basic
000387F8 <AmiBlitz3.ab3@27700>     update_comstatus_gui  = False ; because we update the gui
00038816 <AmiBlitz3.ab3@27702>   !asm
00038818 <AmiBlitz3.ab3@27703> RTS
0003881E <AmiBlitz3.ab3@27708>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00038824 <AmiBlitz3.ab3@27709>   LEA maxobjects_value,A3                                  ;current value
0003882A <AmiBlitz3.ab3@27710>   MOVEA.l libpointer,A2
0003882E <AmiBlitz3.ab3@27713>   CMPA.w #$0,A2
00038832 <AmiBlitz3.ab3@27714>   BEQ.w menu4c__igotb
00038834 <AmiBlitz3.ab3@27715>   MOVEA.l A2,A1
00038838 <AmiBlitz3.ab3@27716>   ADDA.l $12(A1),A1
0003883C <AmiBlitz3.ab3@27717>   TST.w -$2(A1)
00038840 <AmiBlitz3.ab3@27718>   BEQ.w JL_0_FFF6b
00038842 <AmiBlitz3.ab3@27719>   SUBQ.w #1,D5
00038846 <AmiBlitz3.ab3@27720>   BMI.w JL_0_FFFCb
00038848 <AmiBlitz3.ab3@27723>   MOVEA.l (A2),A2
0003884C <AmiBlitz3.ab3@27724> BRA.w JL_0_FFDAb
00038850 <AmiBlitz3.ab3@27727>   MOVE.w (A3),-$4(A1)
00038852 <AmiBlitz3.ab3@27730> RTS
00038858 <AmiBlitz3.ab3@27734>   MOVE.w debugnest,d0
0003885E <AmiBlitz3.ab3@27735>   LEA storedebugmode, a0
00038866 <AmiBlitz3.ab3@27736>   MOVE.b 0(a0,d0.w),debugmode
0003886C <AmiBlitz3.ab3@27737>   TST.w debugnest
00038870 <AmiBlitz3.ab3@27738>   BEQ JUMP_unpairrunerrs
00038876 <AmiBlitz3.ab3@27739>   SUBQ.w #1,debugnest
00038878 <AmiBlitz3.ab3@27740> RTS
0003887E <AmiBlitz3.ab3@27743> JMP runerrsoverflow
00038884 <AmiBlitz3.ab3@27746> JMP unpairrunerrs
0003888C <AmiBlitz3.ab3@27750>   BCHG #$7,use_debugger
00038894 <AmiBlitz3.ab3@27752>   BTST #$7,use_debugger
00038898 <AmiBlitz3.ab3@27753>   BNE 'debugon
0003889E <AmiBlitz3.ab3@27754>   CLR.w debugmode
000388A2 <AmiBlitz3.ab3@27755> BRA.b 'debugoff
000388A8 <AmiBlitz3.ab3@27758>   SNE debugmode
000388AA <AmiBlitz3.ab3@27761>   MOVE.l a0,-(a7)
000388E2 <AmiBlitz3.ab3@27764>   !ComData_SetB{comByte_DebugMode,debugmode}
000388E4 <AmiBlitz3.ab3@27769>   MOVE.l (a7)+,a0
000388E6 <AmiBlitz3.ab3@27770> RTS
000388EE <AmiBlitz3.ab3@27775>   BTST #$7,use_debugger
000388F2 <AmiBlitz3.ab3@27776>   BNE 'debugon
000388F8 <AmiBlitz3.ab3@27777>   CLR.w debugmode
000388FC <AmiBlitz3.ab3@27778> BRA.b 'debugoff
00038902 <AmiBlitz3.ab3@27781>   SNE debugmode
00038904 <AmiBlitz3.ab3@27784> RTS
0003890A <AmiBlitz3.ab3@27788>   ADDQ.w #1,debugnest
00038910 <AmiBlitz3.ab3@27789>   MOVE.w debugnest,d0
00038914 <AmiBlitz3.ab3@27790>   CMP.w #18,d0
00038918 <AmiBlitz3.ab3@27791>    BGE JUMP_runerrsoverflow
0003891E <AmiBlitz3.ab3@27792>   LEA storedebugmode, a0
00038926 <AmiBlitz3.ab3@27793>   MOVE.b debugmode,0( a0,d0.w)
0003892C <AmiBlitz3.ab3@27796>   SF debugmode
0003892E <AmiBlitz3.ab3@27797> RTS
000389AE <AmiBlitz3.ab3@27800> usedpath:  Ds.l 32
000389B2 <AmiBlitz3.ab3@27804>   BEQ.w JUMP_syntaxerr
000389B8 <AmiBlitz3.ab3@27805>   LEA lastpath,A0
000389BC <AmiBlitz3.ab3@27806>   MOVEM.l a0-a1/d0,-(a7)
000389C2 <AmiBlitz3.ab3@27807>   LEA lastpath2,a1
000389C4 <AmiBlitz3.ab3@27810>     MOVE.b (a0)+,(a1)+
000389C8 <AmiBlitz3.ab3@27811>   BNE 'l2
000389CC <AmiBlitz3.ab3@27812>   MOVEM.l (a7)+,a0-a1/d0
000389D0 <AmiBlitz3.ab3@27813>   LEA usedpath(PC),A0
000389D4 <AmiBlitz3.ab3@27814>   MOVEM.l a0-a1/d0,-(a7)
000389DA <AmiBlitz3.ab3@27815>   LEA lastpath,a1
000389DC <AmiBlitz3.ab3@27818>     MOVE.b (a0)+,(a1)+
000389E0 <AmiBlitz3.ab3@27819>   BNE 'l1
000389E4 <AmiBlitz3.ab3@27820>   MOVEM.l (a7)+,a0-a1/d0
000389E6 <AmiBlitz3.ab3@27823>   TST.w D0
000389EA <AmiBlitz3.ab3@27824>    BMI.w JUMP_syntaxerr
000389EC <AmiBlitz3.ab3@27825>   MOVE.b D0,(A0)+
000389F0 <AmiBlitz3.ab3@27826>   BSR.w JUMP_get1bytemain
000389F4 <AmiBlitz3.ab3@27827>    BNE.w JL_0_4AA8
000389F8 <AmiBlitz3.ab3@27828>   MOVE.b #$2,(A0)
000389FA <AmiBlitz3.ab3@27829> RTS
000389FE <AmiBlitz3.ab3@27833>   BEQ.w JUMP_syntaxerr
00038A04 <AmiBlitz3.ab3@27834>   LEA path2,A0
00038A06 <AmiBlitz3.ab3@27844>   TST.w D0
00038A0A <AmiBlitz3.ab3@27845>    BMI.w JUMP_syntaxerr
00038A0C <AmiBlitz3.ab3@27846>   MOVE.b D0,(A0)+
00038A10 <AmiBlitz3.ab3@27847>   BSR.w JUMP_get1bytemain
00038A14 <AmiBlitz3.ab3@27848>    BNE.w JL_0_4AA8b
00038A18 <AmiBlitz3.ab3@27849>   MOVE.b #$2,(A0)
00038A1A <AmiBlitz3.ab3@27850> RTS
00038A20 <AmiBlitz3.ab3@27859> JMP errormsg_reg
00038A2A <AmiBlitz3.ab3@27863>   MOVE.l #$f22d6780,fpucodeglobal
00038A34 <AmiBlitz3.ab3@27864>   MOVE.l #$f22c6780,fpucodelocal
00038A3A <AmiBlitz3.ab3@27865>   LEA regtable,a0
00038A44 <AmiBlitz3.ab3@27866>   MOVE.l #7,maxregs
00038A46 <AmiBlitz3.ab3@27869>   MOVE.l (a0),d0
00038A4A <AmiBlitz3.ab3@27870>   BEQ 'e1
00038A4C <AmiBlitz3.ab3@27871>   CLR.l (a0)
00038A50 <AmiBlitz3.ab3@27872>   MOVE.w 4(a0),d0
00038A5A <AmiBlitz3.ab3@27873>   MOVE.l fpucodeglobal,fpucode
00038A5E <AmiBlitz3.ab3@27874>   TST.w 6(a0)
00038A62 <AmiBlitz3.ab3@27875>   BEQ 'glob
00038A6C <AmiBlitz3.ab3@27876>   MOVE.l fpucodelocal,fpucode
00038A72 <AmiBlitz3.ab3@27879>   MOVE.l fpucode,d1
00038A78 <AmiBlitz3.ab3@27880>   JSR writelong
00038A82 <AmiBlitz3.ab3@27881>   SUB.l #$80,fpucodelocal
00038A8C <AmiBlitz3.ab3@27882>   SUB.l #$80,fpucodeglobal
00038A8E <AmiBlitz3.ab3@27883>   MOVE.w d0,d1
00038A94 <AmiBlitz3.ab3@27884>   JSR writeword
00038A96 <AmiBlitz3.ab3@27885>   ADDQ #8,a0
00038A9A <AmiBlitz3.ab3@27886> BRA 'again
00038A9C <AmiBlitz3.ab3@27889> RTS
00038AA2 <AmiBlitz3.ab3@27896> JMP notypeerr
00038AA8 <AmiBlitz3.ab3@27899> JMP illtypeerr
00038AB2 <AmiBlitz3.ab3@27902>   MOVE.l #$f22d4780,fpucodeglobal
00038ABC <AmiBlitz3.ab3@27903>   MOVE.l #$f22c4780,fpucodelocal
00038AC2 <AmiBlitz3.ab3@27904>   LEA regtable,a0
00038AC4 <AmiBlitz3.ab3@27905>   TST.l (a0)
00038AC8 <AmiBlitz3.ab3@27906>    BNE JUMP_errormsg_reg
00038ACA <AmiBlitz3.ab3@27907>   MOVE.l d7,-(a7)
00038ACC <AmiBlitz3.ab3@27908>   SUBQ.l #1,a5
00038AD2 <AmiBlitz3.ab3@27911>   JSR getparameter2
00038AD6 <AmiBlitz3.ab3@27912>   BEQ.w 'nopar
00038ADC <AmiBlitz3.ab3@27913>   MOVE.w d0,lastchar
00038AE2 <AmiBlitz3.ab3@27914>   JSR findvariable
00038AE6 <AmiBlitz3.ab3@27915>   BNE 'islocal
00038AF0 <AmiBlitz3.ab3@27916>   MOVE.l fpucodeglobal,fpucode
00038AFA <AmiBlitz3.ab3@27917>   MOVE.l #3,maxregs
00038AFC <AmiBlitz3.ab3@27918>   MOVEQ #0,d7
00038B04 <AmiBlitz3.ab3@27921>   CMP.l #newtype_float,$a(a2)                              ;is float type
00038B08 <AmiBlitz3.ab3@27922>    BEQ 'doit
00038B10 <AmiBlitz3.ab3@27923>   CMP.l #newtype_double,$a(a2)
00038B14 <AmiBlitz3.ab3@27924>    BNE JUMP_illtypeerr
00038B1A <AmiBlitz3.ab3@27927>   LEA regtable,a0
00038B1C <AmiBlitz3.ab3@27928>   MOVEQ #0,d0
00038B1E <AmiBlitz3.ab3@27931>   TST.l (a0)
00038B22 <AmiBlitz3.ab3@27932>    BEQ 'store
00038B24 <AmiBlitz3.ab3@27933>   ADDQ.l #4,d0
00038B26 <AmiBlitz3.ab3@27934>   ADDQ.l #8,a0
00038B2C <AmiBlitz3.ab3@27935>   CMP.l #16,d0
00038B30 <AmiBlitz3.ab3@27936>    BCS 'loop
00038B3A <AmiBlitz3.ab3@27937>   MOVE.l #2,maxregs
00038B40 <AmiBlitz3.ab3@27938>   CMP.l #20,d0
00038B44 <AmiBlitz3.ab3@27939>    BCS 'loop
00038B4E <AmiBlitz3.ab3@27940>   MOVE.l #1,maxregs
00038B54 <AmiBlitz3.ab3@27941>   CMP.l #24,d0
00038B58 <AmiBlitz3.ab3@27942>    BCS 'loop
00038B5E <AmiBlitz3.ab3@27943> JMP toovarerr
00038B64 <AmiBlitz3.ab3@27946>   TST.b fpu
00038B68 <AmiBlitz3.ab3@27947>    BEQ 'nofpu
00038B6A <AmiBlitz3.ab3@27948>   MOVE.l a2,(a0)
00038B70 <AmiBlitz3.ab3@27949>   MOVE.w 4(a2),4(a0)
00038B74 <AmiBlitz3.ab3@27950>   MOVE.w d7,6(a0)
00038B7A <AmiBlitz3.ab3@27951>   MOVE.l fpucode,d1
00038B84 <AmiBlitz3.ab3@27952>   SUB.l #$80,fpucodeglobal
00038B8E <AmiBlitz3.ab3@27953>   SUB.l #$80,fpucodelocal
00038B94 <AmiBlitz3.ab3@27954>   JSR writelong
00038B98 <AmiBlitz3.ab3@27955>   MOVE.w 4(a2),d1
00038B9E <AmiBlitz3.ab3@27956>   JSR writeword
00038BA4 <AmiBlitz3.ab3@27959>   MOVE.w lastchar,d0
00038BA8 <AmiBlitz3.ab3@27960>   CMP.w #":",d0
00038BAC <AmiBlitz3.ab3@27961>    BEQ 'nopar
00038BAE <AmiBlitz3.ab3@27962>   TST.w d0
00038BB2 <AmiBlitz3.ab3@27963>    BEQ 'nopar
00038BB6 <AmiBlitz3.ab3@27964>   CMP.w #",",d0
00038BBA <AmiBlitz3.ab3@27965>   BNE JUMP_syntaxerr
00038BBE <AmiBlitz3.ab3@27966> BRA 'l2
00038BC0 <AmiBlitz3.ab3@27969>    MOVE.l (a7)+,d7
00038BC2 <AmiBlitz3.ab3@27970> RTS
00038BC4 <AmiBlitz3.ab3@27973>   MOVEQ #1,d7
00038BCC <AmiBlitz3.ab3@27974>   MOVE.b #1,newvariable
00038BD2 <AmiBlitz3.ab3@27975>   LEA firstlocal,a2
00038BD8 <AmiBlitz3.ab3@27976>   JSR findvariable
00038BDE <AmiBlitz3.ab3@27977>   CLR.b newvariable
00038BE4 <AmiBlitz3.ab3@27978>   CMP.l #-1,d0
00038BE8 <AmiBlitz3.ab3@27979>   BEQ.w JUMP_notypeerr2
00038BF2 <AmiBlitz3.ab3@27980>   MOVE.l fpucodelocal,fpucode
00038BF6 <AmiBlitz3.ab3@27981> BRA 'go
00038BFA <AmiBlitz3.ab3@27984>   CMP.b #".",d0
00038BFE <AmiBlitz3.ab3@27985>    BNE 'l1
00038C02 <AmiBlitz3.ab3@27986>   BSR JUMP_get1bytemain
00038C06 <AmiBlitz3.ab3@27987>   BSR JUMP_get1bytemain
00038C0A <AmiBlitz3.ab3@27990>   ORI .b #$20,d0
00038C0E <AmiBlitz3.ab3@27991>   CMP.b #"d",d0
00038C12 <AmiBlitz3.ab3@27992>    BNE JUMP_illeaerr
00038C16 <AmiBlitz3.ab3@27993>   BSR JUMP_get1bytemain
00038C1A <AmiBlitz3.ab3@27994>   SUB.b #$30,d0
00038C1E <AmiBlitz3.ab3@27995>   CMP.b #$7,d0
00038C22 <AmiBlitz3.ab3@27996>    BGT JUMP_syntaxerr
00038C26 <AmiBlitz3.ab3@27997>   MOVE.w #$49c0,d1
00038C28 <AmiBlitz3.ab3@27998>   ADD.b d0,d1
00038C2E <AmiBlitz3.ab3@27999>   JSR writeword
00038C32 <AmiBlitz3.ab3@28000>   BSR JUMP_get1bytemain
00038C34 <AmiBlitz3.ab3@28001> RTS
00038C3A <AmiBlitz3.ab3@28005>   LEA lastpath,a0
00038C3E <AmiBlitz3.ab3@28006>   LEA usedpath(PC),A1
00038C40 <AmiBlitz3.ab3@28009>     MOVE.b (a0)+,(a1)+
00038C44 <AmiBlitz3.ab3@28010>   BNE 'l1
00038C4A <AmiBlitz3.ab3@28012>   LEA lastpath2,a0
00038C50 <AmiBlitz3.ab3@28013>   LEA lastpath,A1
00038C52 <AmiBlitz3.ab3@28016>     MOVE.b (a0)+,(a1)+
00038C56 <AmiBlitz3.ab3@28017>   BNE 'l2
00038C58 <AmiBlitz3.ab3@28018> RTS
00038C5E <AmiBlitz3.ab3@28022>   TST.b objectcount
00038C62 <AmiBlitz3.ab3@28023>   BEQ 'l2a
00038C68 <AmiBlitz3.ab3@28024> JMP macnesterr
00038C6E <AmiBlitz3.ab3@28027>   LEA devo,a0
00038C74 <AmiBlitz3.ab3@28028>   ADDQ.b #1,objectcount
00038C78 <AmiBlitz3.ab3@28029>   MOVEM.l a1/d2,-(a7)
00038C7E <AmiBlitz3.ab3@28030>   LEA ptr_parameterstore,a1
00038C80 <AmiBlitz3.ab3@28033>     MOVE.b (a0)+,(a1)+
00038C84 <AmiBlitz3.ab3@28034>   BNE 'l1
00038C86 <AmiBlitz3.ab3@28036>   MOVEQ #13,d2
00038C8C <AmiBlitz3.ab3@28037>   JSR findlabel2
00038C90 <AmiBlitz3.ab3@28038>   BNE 'd
00038C94 <AmiBlitz3.ab3@28039>   TST.l 8(a2)
00038C98 <AmiBlitz3.ab3@28040>   BEQ 'd
00038C9E <AmiBlitz3.ab3@28041>   SUBQ.b #1,objectcount
00038CA2 <AmiBlitz3.ab3@28042>   MOVEM.l (a7)+,a1/d2
00038CA8 <AmiBlitz3.ab3@28043>   JSR skiprest
00038CB0 <AmiBlitz3.ab3@28044>   MOVE.b #1,developobject
00038CB2 <AmiBlitz3.ab3@28045> RTS
00038CB6 <AmiBlitz3.ab3@28048>   MOVEM.l (a7)+,a1/d2
00038CBE <AmiBlitz3.ab3@28049>   MOVE.b #1,resdisable
00038CC4 <AmiBlitz3.ab3@28052>   CLR.b developobject
00038CCA <AmiBlitz3.ab3@28053> JMP do_Macro
00038CD0 <AmiBlitz3.ab3@28057> JMP illeaerr
00038CD6 <AmiBlitz3.ab3@28061>   CLR.b typecheck
00038CDC <AmiBlitz3.ab3@28062>   CLR.b declare
00038CE2 <AmiBlitz3.ab3@28063>   CLR.b declare2
00038CE6 <AmiBlitz3.ab3@28064>   SUB.b #$30,d0
00038CEA <AmiBlitz3.ab3@28065>   BTST #0,d0
00038CEE <AmiBlitz3.ab3@28066>   BEQ 'l1
00038CF6 <AmiBlitz3.ab3@28067>   MOVE.b #1,declare
00038CFA <AmiBlitz3.ab3@28070>   BTST #1,d0
00038CFE <AmiBlitz3.ab3@28071>   BEQ 'l2
00038D06 <AmiBlitz3.ab3@28072>   MOVE.b #1,declare2
00038D0A <AmiBlitz3.ab3@28075>   BTST #2,d0
00038D0E <AmiBlitz3.ab3@28076>   BEQ 'l3
00038D16 <AmiBlitz3.ab3@28077>   MOVE.b #1,typecheck
00038D1A <AmiBlitz3.ab3@28079>   BSR.w JUMP_get1bytemain
00038D1C <AmiBlitz3.ab3@28080> RTS
00038D22 <AmiBlitz3.ab3@28083> JMP get1bytemain
00038D4C <AmiBlitz3.ab3@28087>   !basic
00038D6C <AmiBlitz3.ab3@28089>   FillMem ?residents_table,?residents_table_end-?residents_table,0
00038D8A <AmiBlitz3.ab3@28090>   !asm
00038D8C <AmiBlitz3.ab3@28091> Return
00038D8E <AmiBlitz3.ab3@28096>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00038D90 <AmiBlitz3.ab3@28097>   ADDQ #1,a5
00038D92 <AmiBlitz3.ab3@28098>   MOVE.l a5,-(a7)
00038DBC <AmiBlitz3.ab3@28099>   !basic
00038DC2 <AmiBlitz3.ab3@28100>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
00038DCC <AmiBlitz3.ab3@28101>   If _myD0
00038E0C <AmiBlitz3.ab3@28102>     newconst$ = UCase$(Peek.s(_myD0))
00038E12 <AmiBlitz3.ab3@28103>   Else
00038E4C <AmiBlitz3.ab3@28104>     error{"INTERNAL: invalid pointer in check_newconstants!"}
00038E74 <AmiBlitz3.ab3@28105>     nwconst$="xxx"
00038E9C <AmiBlitz3.ab3@28107>   condata$ =""
00038EAC <AmiBlitz3.ab3@28108>   Poke.b ?skip_bytes,0
00038F08 <AmiBlitz3.ab3@28109>   If Left$(newconst$,2) = "__"
00038F62 <AmiBlitz3.ab3@28110>     Select Mid$(newconst$,3,4)
00038F86 <AmiBlitz3.ab3@28112>      Case "DATE"
00038FE0 <AmiBlitz3.ab3@28113>       Select Mid$(newconst$,3,6)
0003901E <AmiBlitz3.ab3@28114>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00039062 <AmiBlitz3.ab3@28115>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
00039070 <AmiBlitz3.ab3@28116>       End Select
0003907E <AmiBlitz3.ab3@28117>       i.l=SystemDate
000390A4 <AmiBlitz3.ab3@28118>       condata$ = Date$ (i)
00039122 <AmiBlitz3.ab3@28119>       condata$ = Replace$(condata$,"/",".")
0003914C <AmiBlitz3.ab3@28121>      Case "VER_"
0003915C <AmiBlitz3.ab3@28124>       actual_version.l = Peek.l(?versioninformation)
0003916C <AmiBlitz3.ab3@28125>       actual_build.l   = Peek.l(?number_of_builds)
00039190 <AmiBlitz3.ab3@28127>       Format ""
000391EA <AmiBlitz3.ab3@28128>       Select Mid$(newconst$,3,9)
0003920E <AmiBlitz3.ab3@28130>        Case "VER_MAJOR"
0003924A <AmiBlitz3.ab3@28131>         condata$ = Str$(actual_version LSR 24)
00039274 <AmiBlitz3.ab3@28133>        Case "VER_MINOR"
000392B8 <AmiBlitz3.ab3@28134>         condata$ = Str$((actual_version LSL 8) LSR 24)
000392E2 <AmiBlitz3.ab3@28136>        Case "VER_PATCH"
00039326 <AmiBlitz3.ab3@28137>         condata$ = Str$((actual_version LSL 16) LSR 24 )
00039350 <AmiBlitz3.ab3@28139>        Case "VER_BUILD"
00039374 <AmiBlitz3.ab3@28140>         Format ""
000393A8 <AmiBlitz3.ab3@28141>         condata$ = Str$(actual_build)
000393AE <AmiBlitz3.ab3@28143>        Default
000393D6 <AmiBlitz3.ab3@28144>         condata$ = "{unknown compiler constant}"
000393E4 <AmiBlitz3.ab3@28146>       End Select
00039408 <AmiBlitz3.ab3@28147>       Format ""
00039418 <AmiBlitz3.ab3@28148>       Poke.b ?skip_bytes,11
00039442 <AmiBlitz3.ab3@28150>      Case "THIS"
0003949C <AmiBlitz3.ab3@28151>       Select Mid$(newconst$,3,9)
000394C0 <AmiBlitz3.ab3@28153>        Case "THIS_FUNC"
000394D0 <AmiBlitz3.ab3@28154>         Poke.b ?skip_bytes,15
000394F0 <AmiBlitz3.ab3@28155>         If Peek.l(?currentfunction)<>0
0003953C <AmiBlitz3.ab3@28156>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
00039542 <AmiBlitz3.ab3@28157>         Else
0003956A <AmiBlitz3.ab3@28158>           condata$ = "GLOBAL"
00039594 <AmiBlitz3.ab3@28161>        Case "THIS_INCL"
000395A4 <AmiBlitz3.ab3@28162>         Poke.b ?skip_bytes,14
000395C4 <AmiBlitz3.ab3@28163>         If Peek.l(?includetemp2)<>0
00039612 <AmiBlitz3.ab3@28164>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003963C <AmiBlitz3.ab3@28167>        Case "THIS_POIN"
0003964C <AmiBlitz3.ab3@28168>         Poke.b ?skip_bytes,14
0003966C <AmiBlitz3.ab3@28169>         If Peek.l(?currentfunction)<>0
0003969A <AmiBlitz3.ab3@28170>           condata$ = Hex$(Peek.l(?currentfunction))
000396A8 <AmiBlitz3.ab3@28173>       End Select
000396D2 <AmiBlitz3.ab3@28175>      Case "CODE"
000396E2 <AmiBlitz3.ab3@28176>       Poke.b ?skip_bytes,10
00039744 <AmiBlitz3.ab3@28177>       If Mid$(newconst$,3,8) = "CODELINE"
00039780 <AmiBlitz3.ab3@28178>         condata$ = Str$(Peek.l(?globallinecount))
0003978E <AmiBlitz3.ab3@28181>     End Select
00039794 <AmiBlitz3.ab3@28183>   Else
000397E8 <AmiBlitz3.ab3@28184>     Select Left$(newconst$,1)
0003980C <AmiBlitz3.ab3@28186>      Case "R"
0003981C <AmiBlitz3.ab3@28187>       Poke.b ?skip_bytes,3
00039894 <AmiBlitz3.ab3@28188>       For i = 1 To Vallong(Mid$(newconst$,2,2))
00039914 <AmiBlitz3.ab3@28189>         condata$ = condata$ + Mid$(newconst$,4,1)
00039924 <AmiBlitz3.ab3@28190>       Next
0003994E <AmiBlitz3.ab3@28192>      Case "N"
0003995E <AmiBlitz3.ab3@28193>       Poke.b ?skip_bytes,1
00039982 <AmiBlitz3.ab3@28194>       condata$ = Chr$(10)
00039988 <AmiBlitz3.ab3@28196>      Default
0003999A <AmiBlitz3.ab3@28197>       char1.b = Peek.b(&newconst$)
000399B2 <AmiBlitz3.ab3@28198>       char2.b = Peek.b(&newconst$+1)
000399BE <AmiBlitz3.ab3@28199>       nibble1.l = -1
000399CA <AmiBlitz3.ab3@28200>       nibble2.l = -1
00039A08 <AmiBlitz3.ab3@28202>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
00039A46 <AmiBlitz3.ab3@28203>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
00039A8A <AmiBlitz3.ab3@28205>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
00039ACE <AmiBlitz3.ab3@28206>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
00039B12 <AmiBlitz3.ab3@28208>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
00039B56 <AmiBlitz3.ab3@28209>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
00039B7C <AmiBlitz3.ab3@28211>       If nibble1>=0 AND nibble2>=0
00039B92 <AmiBlitz3.ab3@28212>         newchar.l = (nibble1 LSL 4) + (nibble2)
00039BB6 <AmiBlitz3.ab3@28213>         condata$ = Chr$(newchar)
00039BC6 <AmiBlitz3.ab3@28214>         Poke.b ?skip_bytes,2
00039BD4 <AmiBlitz3.ab3@28217>     End Select
00039C34 <AmiBlitz3.ab3@28219>   If condata$ = "" AND Peek.b(?skip_bytes)=0
00039D5A <AmiBlitz3.ab3@28220>     !cout{"detected unknown const: " + newconst$}
00039D8E <AmiBlitz3.ab3@28221>     condata$ = newconst$
00039DA4 <AmiBlitz3.ab3@28224>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
00039DA6 <AmiBlitz3.ab3@28225>   MOVE.l d0,d2
00039DA8 <AmiBlitz3.ab3@28226>   MOVE.l d2,-(a7)
00039DAE <AmiBlitz3.ab3@28228>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
00039DB0 <AmiBlitz3.ab3@28229>   MOVE.l d0,a0
00039DB2 <AmiBlitz3.ab3@28232>     MOVE.b (a0)+,d1
00039DB8 <AmiBlitz3.ab3@28233>     JSR pokedata1b
00039DBC <AmiBlitz3.ab3@28234>  DBF d2,'l1
00039DDA <AmiBlitz3.ab3@28236>   !asm
00039DDC <AmiBlitz3.ab3@28237>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00039DDE <AmiBlitz3.ab3@28238>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00039DE0 <AmiBlitz3.ab3@28239>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
00039DE6 <AmiBlitz3.ab3@28240>   ADD.l #1,d2
00039DEC <AmiBlitz3.ab3@28242>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
00039DF2 <AmiBlitz3.ab3@28243>   MOVE.b skip_bytes,D0
00039DF4 <AmiBlitz3.ab3@28244>   ADD.l D0,a5
00039DF6 <AmiBlitz3.ab3@28245> RTS
00039DFA <AmiBlitz3.ab3@28320> MOVEM.l a3/d1,-(a7)
00039E00 <AmiBlitz3.ab3@28322> CLR.b a4a5store
00039E02 <AmiBlitz3.ab3@28323> 'continue: MOVE.b (a3)+,d1
00039E06 <AmiBlitz3.ab3@28324> CMP.b #$15,d1
00039E0A <AmiBlitz3.ab3@28325> BEQ 'find
00039E0E <AmiBlitz3.ab3@28326> CMP.b #$14,d1
00039E12 <AmiBlitz3.ab3@28327> BEQ 'find
00039E16 <AmiBlitz3.ab3@28328> CMP.b #$ff,d1
00039E1A <AmiBlitz3.ab3@28329> BNE 'continue
00039E1E <AmiBlitz3.ab3@28330> BRA 'notfind
00039E24 <AmiBlitz3.ab3@28332> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
00039E2A <AmiBlitz3.ab3@28333> JSR writelong
00039E32 <AmiBlitz3.ab3@28334> MOVE.b #1,a4a5store
00039E36 <AmiBlitz3.ab3@28335> 'notfind: MOVEM.l (a7)+,a3/d1
00039E38 <AmiBlitz3.ab3@28336> RTS
00039E3E <AmiBlitz3.ab3@28339> TST.b a4a5store
00039E42 <AmiBlitz3.ab3@28340> BEQ 'no
00039E48 <AmiBlitz3.ab3@28341> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
00039E4E <AmiBlitz3.ab3@28342> JSR writelong
00039E54 <AmiBlitz3.ab3@28343> CLR.b a4a5store
00039E56 <AmiBlitz3.ab3@28344> 'no RTS
00039E56 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
00039E5A <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
00039E5C <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
00039E64 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
00039E70 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
00039E74 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
00039E76 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
00039E7A <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
00039EC3 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
00039EC4 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
00039EC8 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
00039ECA <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
00039ECE <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
00039EEA <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
00039EEE <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
00039EF0 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
00039EF4 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
00039F51 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
00039F52 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
00039F56 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
00039F58 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
00039F5D <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
00039F6D <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
00039F6E <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
00039F72 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
00039F74 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
00039F7A <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
00039F8A <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
00039F8E <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
00039F90 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
00039F97 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
00039F98 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
00039F9C <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
00039F9E <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
00039FA8 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
00039FDB <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
00039FDC <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
00039FE0 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
00039FE2 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
00039FEB <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003A026 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003A02A <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003A02C <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003A036 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003A037 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003A038 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003A03C <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003A03E <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003A041 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003A058 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003A05C <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003A05E <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003A064 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003A071 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003A072 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003A076 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003A078 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003A07E <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003A08A <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003A08E <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003A090 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003A097 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003A0A4 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003A0A8 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003A0AA <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003A0AF <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003A0BC <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003A0C0 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003A0C2 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003A0CA <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003A0CB <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003A0CC <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003A0D0 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003A0D2 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003A0DA <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003A0DB <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003A0DC <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003A0E0 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003A0E2 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003A0EB <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003A0F6 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003A0FA <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003A0FC <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003A104 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003A10F <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003A110 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003A114 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003A116 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003A11D <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003A17F <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003A180 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003A184 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003A186 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003A18D <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003A19C <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003A1A0 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003A1A2 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003A1A6 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003A1DC <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003A1E0 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003A1E2 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003A1E7 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003A1F6 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003A1FA <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003A1FC <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003A1FF <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003A220 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003A224 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003A226 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003A22B <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003A237 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003A238 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003A23C <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003A23E <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003A243 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003A25A <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003A25E <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003A260 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003A265 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003A274 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003A278 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003A27A <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003A27F <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003A29E <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003A2A2 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003A2A4 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003A2A9 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003A2C8 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003A2CC <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003A2CE <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003A2D4 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003A2D5 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003A2D6 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003A2DA <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003A2DC <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003A2E1 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003A2E2 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003A2E6 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003A2E8 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003A2ED <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003A2FA <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003A2FE <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003A300 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003A305 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003A314 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003A318 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003A31A <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003A31F <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003A32E <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003A332 <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003A334 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003A33A <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003A357 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003A358 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003A35C <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003A35E <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003A364 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003A381 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003A382 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003A386 <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003A388 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003A38B <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003A3A2 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003A3A6 <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003A3A8 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003A3AB <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003A3BA <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003A3BE <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003A3C0 <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003A3C5 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003A3C6 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003A3CA <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003A3CC <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003A3D0 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003A3E5 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003A3E6 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003A3EA <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003A3EC <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003A3F3 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003A40C <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003A410 <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003A412 <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003A419 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003A424 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003A428 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003A42A <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003A42F <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003A446 <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003A44A <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003A44C <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003A450 <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003A467 <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003A468 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003A46C <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003A46E <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003A473 <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003A474 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003A478 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003A47A <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003A47F <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003A483 <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003A484 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003A488 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003A48A <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003A491 <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003A4A9 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003A4AA <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003A4AE <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003A4B0 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003A4B7 <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003A4BC <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003A4C0 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003A4C2 <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003A4C9 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003A4CE <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003A4D2 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003A4D4 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003A4DB <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003A4F6 <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003A4FA <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003A4FC <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003A504 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003A51D <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003A51E <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003A522 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003A524 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003A52A <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003A52B <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003A52C <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003A530 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003A532 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003A538 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003A539 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003A53A <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003A53E <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003A540 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003A547 <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003A548 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003A54C <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003A54E <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003A554 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003A55D <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003A55E <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003A562 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003A564 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003A56C <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003A579 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003A57A <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003A57E <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003A580 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003A588 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003A595 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003A596 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003A59A <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003A59C <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003A5A4 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003A5B1 <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003A5B2 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003A5B6 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003A5B8 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003A5BD <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003A5BE <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003A5C2 <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003A5C4 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003A5C9 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003A5CA <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003A5CC <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003A5D0 <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003A5D2 <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003A5D4 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003A5D8 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003A5DA <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003A5DE <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003A5E0 <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003A5E4 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003A5E5 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003A5E6 <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003A5E8 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003A5EC <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003A5EE <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003A5F0 <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003A5F4 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003A5F6 <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003A5FA <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003A5FC <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003A601 <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003A602 <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003A604 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003A608 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003A60A <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003A60C <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003A610 <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003A612 <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003A616 <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003A618 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003A61D <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003A61E <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003A620 <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003A624 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003A626 <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003A628 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003A62C <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003A62E <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003A632 <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003A634 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003A639 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003A63A <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003A63C <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003A640 <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003A642 <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003A644 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003A648 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003A64A <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003A64E <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003A650 <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003A655 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003A656 <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003A658 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003A65C <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003A65E <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003A660 <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003A664 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003A666 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003A66A <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003A66C <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003A670 <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003A671 <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003A672 <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003A674 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003A678 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003A67A <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003A67C <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003A680 <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003A682 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003A686 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003A688 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003A68D <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003A68E <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003A690 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003A694 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003A696 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003A698 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003A69C <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003A69E <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003A6A2 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003A6A4 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003A6A8 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003A6A9 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003A6AA <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003A6AC <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003A6B0 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003A6B2 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003A6B4 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003A6B8 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003A6BA <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003A6BE <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003A6C0 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003A6C4 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003A6C5 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003A6C6 <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003A6C8 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003A6CC <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003A6CE <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003A6D0 <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003A6D4 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003A6D6 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003A6DA <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003A6DC <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003A6E0 <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003A6E1 <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003A6E2 <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003A6E4 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003A6E8 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003A6EA <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003A6EC <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003A6F0 <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003A6F2 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003A6F6 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003A6F8 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003A6FC <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003A6FD <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003A6FE <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003A700 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003A704 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003A706 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003A708 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003A70C <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003A70E <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003A712 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003A714 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003A718 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003A719 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003A71A <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003A71C <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003A720 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003A722 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003A724 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003A728 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003A72A <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003A72E <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003A730 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003A734 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003A735 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003A736 <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003A738 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003A73C <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003A73E <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003A740 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003A744 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003A746 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003A74A <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003A74C <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003A750 <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003A751 <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003A752 <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003A754 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003A758 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003A75A <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003A75C <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003A760 <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003A762 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003A766 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003A768 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003A76C <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003A76D <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003A76E <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003A770 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003A774 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003A776 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003A778 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003A77C <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003A77E <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003A782 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003A784 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003A788 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003A789 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003A78A <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003A78C <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003A790 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003A792 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003A794 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003A798 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003A79A <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003A79E <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003A7A0 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003A7A4 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003A7A5 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003A7A6 <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003A7A8 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003A7AC <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003A7AE <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003A7B0 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003A7B4 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003A7B6 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003A7BA <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003A7BC <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003A7C0 <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003A7C1 <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003A7C2 <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003A7C4 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003A7C8 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003A7CA <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003A7CC <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003A7D0 <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003A7D2 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003A7D6 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003A7D8 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003A7DC <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003A7DD <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003A7DE <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003A7E0 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003A7E4 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003A7E6 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003A7E8 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003A7EC <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003A7EE <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003A7F2 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003A7F4 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003A7F8 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003A7F9 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003A7FA <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003A7FC <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003A800 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003A802 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003A804 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003A808 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003A80A <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003A80E <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003A810 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003A814 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003A815 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003A816 <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003A818 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003A81C <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003A81E <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003A820 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003A824 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003A826 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003A82A <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003A82C <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003A830 <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003A831 <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003A832 <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003A834 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003A838 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003A83A <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003A83C <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003A840 <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003A842 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003A846 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003A848 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003A84C <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003A84D <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003A84E <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003A850 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003A854 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003A856 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003A858 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003A85C <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003A85E <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003A862 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003A864 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003A869 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003A86A <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003A86C <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003A870 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003A872 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003A874 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003A878 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003A87A <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003A87E <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003A880 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003A885 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003A886 <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003A888 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003A88C <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003A88E <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003A890 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003A894 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003A896 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003A89A <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003A89C <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003A8A1 <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003A8A2 <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003A8A4 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003A8A8 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003A8AA <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003A8AC <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003A8B0 <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003A8B2 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003A8B6 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003A8B8 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003A8BD <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003A8BE <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003A8C0 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003A8C4 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003A8C6 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003A8C8 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003A8CC <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003A8CE <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003A8D2 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003A8D4 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003A8D8 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003A8D9 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003A8DA <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003A8DC <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003A8E0 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003A8E2 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003A8E4 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003A8E8 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003A8EA <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003A8EE <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003A8F0 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003A8F4 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003A8F5 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003A8F6 <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003A8F8 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003A8FC <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003A8FE <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003A900 <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003A904 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003A906 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003A90A <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003A90C <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003A910 <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003A911 <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003A912 <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003A914 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003A918 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003A91A <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003A91C <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003A920 <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003A922 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003A926 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003A928 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003A92C <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003A92D <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003A92E <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003A930 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003A934 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003A936 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003A938 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003A93C <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003A93E <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003A942 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003A944 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003A948 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003A949 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003A94A <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003A94C <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003A950 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003A952 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003A954 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003A958 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003A95A <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003A95E <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003A960 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003A965 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003A966 <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003A968 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003A96C <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003A96E <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003A970 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003A974 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003A976 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003A97A <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003A97C <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003A981 <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003A982 <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003A984 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003A988 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003A98A <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003A98C <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003A990 <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003A992 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003A996 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003A998 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003A99D <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003A99E <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003A9A0 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003A9A4 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003A9A6 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003A9A8 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003A9AC <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003A9AE <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003A9B2 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003A9B4 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003A9B9 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003A9BA <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003A9BC <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003A9C0 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003A9C2 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003A9C4 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003A9C8 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003A9CA <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003A9CE <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003A9D0 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003A9D5 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003A9D6 <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003A9D8 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003A9DC <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003A9DE <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003A9E0 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003A9E4 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003A9E6 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003A9EA <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003A9EC <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003A9F1 <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003A9F2 <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003A9F4 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003A9F8 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003A9FA <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003A9FC <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003AA00 <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003AA02 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003AA06 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003AA08 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003AA0D <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003AA0E <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003AA10 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003AA14 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003AA16 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003AA18 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003AA1C <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003AA1E <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003AA22 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003AA24 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003AA29 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003AA2A <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003AA2C <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003AA30 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003AA32 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003AA34 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003AA38 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003AA3A <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003AA3E <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003AA40 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003AA45 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003AA46 <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003AA48 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003AA4C <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003AA4E <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003AA50 <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003AA54 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003AA56 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003AA5A <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003AA5C <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003AA61 <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003AA62 <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003AA64 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003AA68 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003AA6A <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003AA6C <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003AA70 <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003AA72 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003AA76 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003AA78 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003AA7D <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003AA7E <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003AA80 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003AA84 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003AA86 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003AA88 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003AA8C <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003AA8E <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003AA92 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003AA94 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003AA99 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003AA9A <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003AA9C <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003AAA0 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003AAA2 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003AAA4 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003AAA8 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003AAAA <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003AAAE <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003AAB0 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003AAB5 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003AAB6 <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003AAB8 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003AABC <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003AABE <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003AAC0 <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003AAC4 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003AAC6 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003AACA <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003AACC <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003AAD1 <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003AAD2 <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003AAD4 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003AAD8 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003AADA <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003AADC <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003AAE0 <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003AAE2 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003AAE6 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003AAE8 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003AAED <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003AAEE <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003AAF0 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003AAF4 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003AAF6 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003AAF8 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003AAFC <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003AAFE <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003AB02 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003AB04 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003AB09 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003AB0A <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003AB0C <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003AB10 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003AB12 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003AB14 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003AB18 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003AB1A <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003AB1E <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003AB20 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003AB25 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003AB26 <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003AB28 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003AB2C <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003AB2E <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003AB30 <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003AB34 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003AB36 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003AB3A <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003AB3C <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003AB40 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003AB41 <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003AB42 <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003AB44 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003AB48 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003AB4A <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003AB4C <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003AB50 <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003AB52 <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003AB56 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003AB58 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003AB5D <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003AB5E <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003AB60 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003AB64 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003AB66 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003AB68 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003AB6C <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003AB6E <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003AB72 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003AB74 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003AB78 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003AB79 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003AB7A <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003AB7C <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003AB80 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003AB82 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003AB84 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003AB88 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003AB8A <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003AB8E <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003AB90 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003AB95 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003AB96 <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003AB98 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003AB9C <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003AB9E <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003ABA0 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003ABA4 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003ABA6 <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003ABAA <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003ABAC <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003ABB1 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003ABB2 <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003ABB4 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003ABB8 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003ABBA <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003ABBC <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003ABC0 <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003ABC2 <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003ABC6 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003ABC8 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003ABCC <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003ABCD <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003ABCE <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003ABD0 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003ABD4 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003ABD6 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003ABD8 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003ABDC <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003ABDE <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003ABE2 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003ABE4 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003ABE9 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003ABEA <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003ABEC <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003ABF0 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003ABF2 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003ABF4 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003ABF8 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003ABFA <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003ABFE <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003AC00 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003AC04 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003AC05 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003AC06 <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003AC08 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003AC0C <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003AC0E <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003AC10 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003AC14 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003AC16 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003AC1A <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003AC1C <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003AC20 <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003AC21 <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003AC22 <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003AC24 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003AC28 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003AC2A <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003AC2C <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003AC30 <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003AC32 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003AC36 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003AC38 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003AC40 <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003AC41 <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003AC42 <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003AC44 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003AC48 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003AC4A <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003AC4C <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003AC50 <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003AC52 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003AC56 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003AC58 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003AC5C <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003AC5D <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003AC5E <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003AC60 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003AC64 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003AC66 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003AC68 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003AC6C <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003AC6E <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003AC72 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003AC74 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003AC78 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003AC79 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003AC7A <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003AC7C <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003AC80 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003AC82 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003AC84 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003AC88 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003AC8A <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003AC8E <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003AC90 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003AC94 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003AC95 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003AC96 <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003AC98 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003AC9C <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003AC9E <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003ACA0 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003ACA4 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003ACA6 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003ACAA <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003ACAC <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003ACB1 <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003ACB2 <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003ACB4 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003ACB8 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003ACBA <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003ACBC <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003ACC0 <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003ACC2 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003ACC6 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003ACC8 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003ACCC <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003ACCD <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003ACCE <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003ACD0 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003ACD4 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003ACD6 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003ACD8 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003ACDC <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003ACDE <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003ACE2 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003ACE4 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003ACE8 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003ACE9 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003ACEA <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003ACEC <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003ACF0 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003ACF2 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003ACF4 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003ACF8 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003ACFA <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003ACFE <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003AD00 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003AD05 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003AD06 <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003AD08 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003AD0C <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003AD0E <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003AD10 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003AD14 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003AD16 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003AD1A <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003AD1C <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003AD21 <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003AD22 <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003AD24 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003AD28 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003AD2A <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003AD2C <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003AD30 <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003AD32 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003AD36 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003AD38 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003AD3E <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003AD3F <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003AD40 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003AD42 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003AD46 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003AD48 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003AD4A <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003AD4E <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003AD50 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003AD54 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003AD56 <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003AD5C <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003AD5D <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003AD5E <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003AD60 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003AD64 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003AD66 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003AD68 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003AD6C <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003AD6E <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003AD72 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003AD74 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003AD7A <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003AD7B <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003AD7C <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003AD7E <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003AD82 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003AD84 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003AD86 <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003AD8A <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003AD8C <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003AD90 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003AD92 <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003AD97 <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003AD98 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003AD9A <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003AD9E <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003ADA0 <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003ADA2 <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003ADA6 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003ADA8 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003ADAC <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003ADAE <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003ADB3 <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003ADB4 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003ADB6 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003ADBA <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003ADBC <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003ADBE <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003ADC2 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003ADC4 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003ADC8 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003ADCA <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003ADCF <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003ADD0 <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003ADD2 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003ADD6 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003ADD8 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003ADDA <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003ADDE <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003ADE0 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003ADE4 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003ADE6 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003ADEA <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003ADEB <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003ADEC <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003ADEE <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003ADF2 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003ADF4 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003ADF6 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003ADFA <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003ADFC <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003AE00 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003AE02 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003AE07 <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003AE08 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003AE0A <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003AE0E <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003AE10 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003AE12 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003AE16 <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003AE18 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003AE1C <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003AE1E <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003AE22 <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003AE23 <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003AE24 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003AE26 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003AE2A <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003AE2C <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003AE2E <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003AE32 <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003AE34 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003AE38 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003AE3A <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003AE3E <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003AE3F <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003AE40 <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003AE42 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003AE46 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003AE48 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003AE4A <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003AE4E <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003AE50 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003AE54 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003AE56 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003AE59 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003AE5A <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003AE5C <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003AE60 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003AE62 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003AE64 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003AE68 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003AE6A <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003AE6E <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003AE70 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003AE74 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003AE75 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003AE76 <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003AE78 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003AE7C <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003AE7E <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003AE80 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003AE84 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003AE86 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003AE8A <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003AE8C <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003AE90 <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003AE91 <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003AE92 <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003AE94 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003AE98 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003AE9A <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003AE9C <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003AEA0 <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003AEA2 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003AEA6 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003AEA8 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003AEAE <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003AEAF <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003AEB0 <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003AEB2 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003AEB6 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003AEB8 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003AEBA <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003AEBE <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003AEC0 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003AEC4 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003AEC6 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003AECA <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003AECB <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003AECC <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003AECE <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003AED2 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003AED4 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003AED6 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003AEDA <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003AEDC <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003AEE0 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003AEE2 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003AEE6 <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003AEE7 <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003AEE8 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003AEEA <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003AEEE <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003AEF0 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003AEF2 <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003AEF6 <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003AEF8 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003AEFC <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003AEFE <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003AF03 <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003AF04 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003AF06 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003AF0A <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003AF0C <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003AF0E <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003AF12 <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003AF14 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003AF18 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003AF1A <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003AF1F <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003AF20 <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003AF22 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003AF26 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003AF28 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003AF2A <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003AF2E <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003AF30 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003AF34 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003AF36 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003AF3A <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003AF3B <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003AF3C <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003AF3E <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003AF42 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003AF44 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003AF46 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003AF4A <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003AF4C <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003AF50 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003AF52 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003AF56 <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003AF57 <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003AF58 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003AF5A <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003AF5E <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003AF60 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003AF62 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003AF66 <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003AF68 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003AF6C <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003AF6E <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003AF72 <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003AF73 <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003AF74 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003AF76 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003AF7A <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003AF7C <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003AF7E <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003AF82 <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003AF84 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003AF88 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003AF8A <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003AF8F <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003AF90 <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003AF92 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003AF96 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003AF98 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003AF9A <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003AF9E <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003AFA0 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003AFA4 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003AFA6 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003AFAA <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003AFAB <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003AFAC <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003AFAE <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003AFB2 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003AFB4 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003AFB6 <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003AFBA <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003AFBC <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003AFC0 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003AFC2 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003AFC6 <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003AFC7 <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003AFC8 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003AFCA <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003AFCE <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003AFD0 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003AFD2 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003AFD6 <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003AFD8 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003AFDC <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003AFDE <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003AFE2 <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003AFE3 <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003AFE4 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003AFE6 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003AFEA <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003AFEC <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003AFEE <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003AFF2 <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003AFF4 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003AFF8 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003AFFA <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003AFFE <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003AFFF <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003B000 <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003B002 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003B006 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003B008 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003B00A <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003B00E <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003B010 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003B014 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003B016 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003B01A <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003B01B <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003B01C <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003B01E <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003B022 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003B024 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003B026 <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003B02A <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003B02C <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003B030 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003B032 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003B036 <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003B037 <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003B038 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003B03A <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003B03E <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003B040 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003B042 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003B046 <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003B048 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003B04C <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003B04E <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003B052 <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003B053 <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003B054 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003B056 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003B05A <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003B05C <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003B05E <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003B062 <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003B064 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003B068 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003B06A <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003B06E <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003B06F <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003B070 <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003B072 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003B076 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003B078 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003B07A <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003B07E <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003B080 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003B084 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003B086 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003B08A <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003B08B <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003B08C <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003B08E <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003B092 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003B094 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003B096 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003B09A <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003B09C <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003B0A0 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003B0A2 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003B0A6 <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003B0A7 <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003B0A8 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003B0AA <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003B0AE <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003B0B0 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003B0B2 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003B0B6 <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003B0B8 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003B0BC <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003B0BE <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003B0C2 <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003B0C3 <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003B0C4 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003B0C6 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003B0CA <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003B0CC <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003B0CE <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003B0D2 <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003B0D4 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003B0D8 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003B0DA <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003B0DE <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003B0DF <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003B0E0 <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003B0E2 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003B0E6 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003B0E8 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003B0EA <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003B0EE <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003B0F0 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003B0F4 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003B0F6 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003B0FA <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003B0FB <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003B0FC <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003B0FE <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003B102 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003B104 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003B106 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003B10A <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003B10C <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003B110 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003B112 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003B116 <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003B117 <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003B118 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003B11A <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003B11E <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003B120 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003B122 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003B126 <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003B128 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003B12C <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003B12E <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003B131 <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003B132 <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003B134 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003B138 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003B13A <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003B13C <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003B140 <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003B142 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003B146 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003B148 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003B14B <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003B14C <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003B14E <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003B152 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003B154 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003B156 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003B15A <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003B15C <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003B160 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003B162 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003B167 <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003B168 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003B16A <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003B16E <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003B170 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003B172 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003B176 <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003B178 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003B17C <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003B17E <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003B182 <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003B183 <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003B184 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003B186 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003B18A <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003B18C <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003B18E <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003B192 <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003B194 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003B198 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003B19A <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003B19F <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003B1A0 <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003B1A2 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003B1A6 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003B1A8 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003B1AA <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003B1AE <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003B1B0 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003B1B4 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003B1B6 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003B1BB <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003B1BC <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003B1BE <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003B1C2 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003B1C4 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003B1C6 <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003B1CA <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003B1CC <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003B1D0 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003B1D2 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003B1D7 <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003B1D8 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003B1DA <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003B1DE <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003B1E0 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003B1E2 <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003B1E6 <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003B1E8 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003B1EC <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003B1EE <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003B1F3 <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003B1F4 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003B1F6 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003B1FA <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003B1FC <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003B1FE <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003B202 <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003B204 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003B208 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003B20A <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003B20F <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003B210 <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003B212 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003B216 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003B218 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003B21A <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003B21E <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003B220 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003B224 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003B226 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003B22A <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003B22B <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003B22C <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003B22E <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003B232 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003B234 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003B236 <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003B23A <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003B23C <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003B240 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003B242 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003B247 <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003B248 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003B24A <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003B24E <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003B250 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003B252 <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003B256 <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003B258 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003B25C <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003B25E <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003B264 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003B265 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003B266 <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003B268 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003B26C <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003B26E <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003B270 <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003B274 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003B276 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003B27A <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003B27C <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003B280 <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003B281 <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003B282 <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003B284 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003B288 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003B28A <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003B28C <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003B290 <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003B292 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003B296 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003B298 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003B29D <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003B29E <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003B2A0 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003B2A4 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003B2A6 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003B2A8 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003B2AC <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003B2AE <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003B2B2 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003B2B4 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003B2BB <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003B2BC <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003B2BE <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003B2C0 <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003B2C2 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003B2C4 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003B2C6 <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003B2C8 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003B2CA <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003B2CC <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003B2CE <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003B2D2 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003B2D4 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003B2D6 <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003B2D8 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003B2DA <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003B2DE <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003B2E4 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003B2E8 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003B2EA <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003B2EC <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003B2EE <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003B2F0 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003B2F2 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003B2F4 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003B2F8 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003B2FC <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003B300 <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003B304 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003B308 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003B30A <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003B30C <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003B310 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003B314 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003B318 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003B31C <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003B31E <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003B320 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003B324 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003B328 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003B32C <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003B330 <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003B332 <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003B334 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003B336 <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003B33A <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003B33C <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003B340 <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003B342 <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003B346 <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003B348 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003B34C <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003B350 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003B354 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003B358 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003B35C <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003B360 <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003B364 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003B368 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003B36C <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003B370 <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003B374 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003B378 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003B37C <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003B380 <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003B384 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003B388 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003B38C <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003B390 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003B394 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003B398 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003B39C <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003B3A0 <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003B3A4 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003B3A8 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003B3AC <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003B3B0 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003B3B2 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003B3B6 <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003B3BA <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003B3BE <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003B3C2 <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003B3C6 <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003B3CA <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003B3CE <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003B3D2 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003B3D6 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003B3D8 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003B3DA <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003B3DC <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003B3DE <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003B3E0 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003B3E4 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003B3E8 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003B3EC <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003B3F0 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003B3F2 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003B3F6 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003B3FA <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003B3FE <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003B402 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003B404 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003B406 <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003B40A <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003B40E <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003B412 <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003B416 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003B41A <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003B41E <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003B420 <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003B422 <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003B426 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003B42A <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003B42E <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003B430 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003B434 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003B438 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003B43A <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003B43E <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003B442 <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003B444 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003B448 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003B44C <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003B450 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003B454 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003B458 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003B45A <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003B45E <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003B460 <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003B462 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003B464 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003B468 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003B46C <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003B470 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003B474 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003B478 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003B47C <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003B480 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003B484 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003B488 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003B48C <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003B490 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003B494 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003B496 <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003B49A <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003B49E <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003B4A0 <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003B4A2 <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003B4A4 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003B4A8 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003B4AC <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003B4AE <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003B4B2 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003B4B4 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003B4B6 <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003B4B8 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003B4BC <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003B4C0 <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003B4C2 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003B4C4 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003B4C8 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003B4CC <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003B4D0 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003B4D4 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003B4D6 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003B4DA <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003B4DE <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003B4E2 <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003B4E4 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003B4E6 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003B4E8 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003B4EA <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003B4EC <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003B4EE <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003B4F2 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003B4F6 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003B4F8 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003B4FC <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003B4FE <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003B502 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003B506 <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003B508 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003B50A <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003B50C <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003B510 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003B512 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003B516 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003B51A <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003B51E <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003B520 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003B524 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003B528 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003B52A <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003B52E <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003B532 <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003B536 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003B53A <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003B53E <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003B542 <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003B546 <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003B54A <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003B54C <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003B551 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003B552 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003B556 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003B558 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003B55F <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003B560 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003B564 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003B566 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003B56D <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003B56E <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003B572 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003B574 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003B57C <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003B57D <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003B57E <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003B582 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003B584 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003B589 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003B59D <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003B59E <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003B5A2 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003B5A4 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003B5A8 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003B5A9 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003B5AA <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003B5AE <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003B5B0 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003B5B3 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003B5B4 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003B5B8 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003B5BA <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003B5C1 <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003B5C2 <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003B5C6 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003B5C8 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003B5CE <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003B5DB <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003B5DC <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003B5E0 <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003B5E2 <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003B5E9 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003B601 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003B602 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003B606 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003B608 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003B60C <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003B62F <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003B630 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003B634 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003B636 <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003B63D <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003B648 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003B64C <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003B64E <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003B654 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003B655 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003B656 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003B65A <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003B65C <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003B661 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003B662 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003B666 <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003B668 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003B66F <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003B681 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003B682 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003B686 <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003B688 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003B692 <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003B693 <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003B694 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003B698 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003B69A <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003B6A2 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003B6AF <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003B6B0 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003B6B4 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003B6B6 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003B6B9 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003B6F4 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003B6F8 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003B6FA <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003B6FE <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003B6FF <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003B700 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003B704 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003B706 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003B70E <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003B70F <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003B710 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003B714 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003B716 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003B71E <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003B72E <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003B732 <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003B734 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003B73D <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003B745 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003B746 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003B74A <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003B74C <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003B754 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003B75D <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003B75E <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003B762 <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003B764 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003B76C <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003B76D <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003B76E <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003B772 <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003B774 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003B77A <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003B77B <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003B77C <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003B780 <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003B782 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003B789 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003B78A <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003B78E <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003B790 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003B797 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003B798 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003B79C <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003B79E <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003B7A5 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003B7A6 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003B7AA <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003B7AC <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003B7B3 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003B7B4 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003B7B8 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003B7BA <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003B7BF <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003B7D5 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003B7D6 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003B7DA <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003B7DC <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003B7E6 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003B7E7 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003B7E8 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003B7EC <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003B7EE <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003B7F9 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003B7FA <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003B7FE <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003B800 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003B80C <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003B839 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003B83A <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003B83E <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003B840 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003B848 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003B87F <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003B880 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003B884 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003B886 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003B88E <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003B8AD <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003B8AE <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003B8B2 <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003B8B4 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003B8BB <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003B8F1 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003B8F2 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003B8F6 <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003B8F8 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003B901 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003B936 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003B93A <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003B93C <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003B94C <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003B983 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003B984 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003B984 <AmiBlitz3.ab3@28348> INCLUDE "internal_commands.ab3"
0003B988 <AmiBlitz3.ab3@28353>            Dc.l cif_lt                                     ;ciflt
0003B98C <AmiBlitz3.ab3@28354>            Dc.l cif_eq                                     ;cifeq
0003B990 <AmiBlitz3.ab3@28355>            Dc.l cif_gt                                     ;cifgt
0003B994 <AmiBlitz3.ab3@28356>            Ds.l 1                                          ;0
0003B998 <AmiBlitz3.ab3@28357>            Dc.l cif_le                                     ;cifle
0003B99C <AmiBlitz3.ab3@28358>            Dc.l cif_ne                                     ;cifne
0003B9A0 <AmiBlitz3.ab3@28359>            Dc.l cif_le                                     ;cifge
0003B9A4 <AmiBlitz3.ab3@28360>            Ds.l 1                                          ;0
0003B9A8 <AmiBlitz3.ab3@28361>            Dc.l cif_ge                                     ;cifge
0003B9AC <AmiBlitz3.ab3@28362>            Dc.l cif_ne                                     ;cifne
0003B9B0 <AmiBlitz3.ab3@28363>            Dc.l cif_ge                                     ;cifge
0003B9B4 <AmiBlitz3.ab3@28364>            Ds.l 1                                          ;0
0003B9B8 <AmiBlitz3.ab3@28367>            Dc.l do_newtype                                 ;donewtype
0003B9BC <AmiBlitz3.ab3@28368>            Dc.l do_end                                     ;doend
0003B9C0 <AmiBlitz3.ab3@28369>            Dc.l do_let                                     ;dolet
0003B9C4 <AmiBlitz3.ab3@28370>            Dc.l do_dim                                     ;dodim
0003B9C8 <AmiBlitz3.ab3@28371>            Dc.l do_goto                                    ;dogoto
0003B9CC <AmiBlitz3.ab3@28372>            Dc.l do_gosub                                   ;dogosub
0003B9D0 <AmiBlitz3.ab3@28373>            Dc.l do_return                                  ;doreturn
0003B9D4 <AmiBlitz3.ab3@28374>            Dc.l do_statement                               ;dostatement
0003B9D8 <AmiBlitz3.ab3@28375>            Dc.l do_function                                ;dofunc
0003B9DC <AmiBlitz3.ab3@28376>            Dc.l do_mousewait                               ;domwait
0003B9E0 <AmiBlitz3.ab3@28377>            Dc.l do_if                                      ;doif
0003B9E4 <AmiBlitz3.ab3@28378>            Dc.l do_while                                   ;dowhile
0003B9E8 <AmiBlitz3.ab3@28379>            Dc.l do_Macro                                   ;domacro
0003B9EC <AmiBlitz3.ab3@28380>            Dc.l do_select                                  ;doselect
0003B9F0 <AmiBlitz3.ab3@28381>            Dc.l do_case                                    ;docase
0003B9F4 <AmiBlitz3.ab3@28382>            Dc.l do_default                                 ;dodefault
0003B9F8 <AmiBlitz3.ab3@28383>            Dc.l do_AsmExit                                 ;doasmexit
0003B9FC <AmiBlitz3.ab3@28384>            Dc.l do_xinclude                                ;doxinclude
0003BA00 <AmiBlitz3.ab3@28385>            Dc.l do_INCLUDE                                 ;doinclude
0003BA04 <AmiBlitz3.ab3@28386>            Dc.l do_syntax                                  ;syntaxerr
0003BA08 <AmiBlitz3.ab3@28387>            Dc.l do_shared                                  ;doshared
0003BA0C <AmiBlitz3.ab3@28388>            Dc.l do_for                                     ;dofor
0003BA10 <AmiBlitz3.ab3@28389>            Dc.l do_next                                    ;donext
0003BA14 <AmiBlitz3.ab3@28390>            Dc.l syntaxerr                                  ; To
0003BA18 <AmiBlitz3.ab3@28391>            Dc.l syntaxerr                                  ; Step
0003BA1C <AmiBlitz3.ab3@28392>            Dc.l do_data                                    ;dodata
0003BA20 <AmiBlitz3.ab3@28393>            Dc.l do_read                                    ;doread
0003BA24 <AmiBlitz3.ab3@28397>            Dc.l syntaxerr                                  ; CNIF
0003BA28 <AmiBlitz3.ab3@28398>            Dc.l syntaxerr                                  ; CSIF
0003BA2C <AmiBlitz3.ab3@28399>            Dc.l syntaxerr                                  ; CELSE
0003BA30 <AmiBlitz3.ab3@28400>            Dc.l syntaxerr                                  ; CEND
0003BA34 <AmiBlitz3.ab3@28401>            Dc.l do_cerr                                    ;docerr
0003BA38 <AmiBlitz3.ab3@28402>            Dc.l do_then                                    ;dothen
0003BA3C <AmiBlitz3.ab3@28403>            Dc.l do_else                                    ;doelse
0003BA40 <AmiBlitz3.ab3@28404>            Dc.l do_even4                                   ;doeven4
0003BA44 <AmiBlitz3.ab3@28405>            Dc.l do_even8                                   ;doeven8
0003BA48 <AmiBlitz3.ab3@28407>            Dc.l do_dc                                      ;dodc
0003BA4C <AmiBlitz3.ab3@28408>            Dc.l do_ds                                      ;dods
0003BA50 <AmiBlitz3.ab3@28409>            Dc.l do_even                                    ;doeven
0003BA54 <AmiBlitz3.ab3@28410>            Dc.l do_dcb                                     ;dodcb
0003BA58 <AmiBlitz3.ab3@28411>            Dc.l do_setreg                                  ;dosetreg
0003BA5C <AmiBlitz3.ab3@28412>            Dc.l do_IncBin                                  ;doincbin
0003BA60 <AmiBlitz3.ab3@28413>            Dc.l do_free                                    ;dofree
0003BA64 <AmiBlitz3.ab3@28414>            Dc.l do_use                                     ;douse
0003BA68 <AmiBlitz3.ab3@28415>            Dc.l do_Stop                                    ;dostop
0003BA6C <AmiBlitz3.ab3@28416>            Dc.l do_Cont                                    ;docont
0003BA70 <AmiBlitz3.ab3@28417>            Dc.l syntaxerr                                  ;syntaxeer
0003BA74 <AmiBlitz3.ab3@28418>            Dc.l do_SetInt                                  ;dosetint
0003BA78 <AmiBlitz3.ab3@28419>            Dc.l do_ClrInt                                  ;doclrint
0003BA7C <AmiBlitz3.ab3@28420>            Dc.l do_MaxLen                                  ;domaxlen
0003BA80 <AmiBlitz3.ab3@28421>            Dc.l do_DEFTYPE                                 ;dodeftype
0003BA84 <AmiBlitz3.ab3@28422>            Dc.l do_BLITZ                                   ;doblitz
0003BA88 <AmiBlitz3.ab3@28423>            Dc.l do_AMIGA                                   ;doamiga
0003BA8C <AmiBlitz3.ab3@28424>            Dc.l do_QAMIGA                                  ;doqamiga
0003BA90 <AmiBlitz3.ab3@28425>            Dc.l do_VWait                                   ;dovwait
0003BA94 <AmiBlitz3.ab3@28426>            Dc.l do_LibJsr                                  ;dolibjsr
0003BA98 <AmiBlitz3.ab3@28427>            Dc.l do_TokeJsr                                 ;dotokejsr
0003BA9C <AmiBlitz3.ab3@28428>            Dc.l do_BLibJsr                                 ;doblibjsr
0003BAA0 <AmiBlitz3.ab3@28429>            Dc.l _extb                                      ;syntaxerr
0003BAA4 <AmiBlitz3.ab3@28433>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003BAA8 <AmiBlitz3.ab3@28434>            Dc.l do_SetErr                                  ;doseterr
0003BAAC <AmiBlitz3.ab3@28435>            Dc.l do_ClrErr                                  ;doclrerr
0003BAB0 <AmiBlitz3.ab3@28436>            Dc.l syntaxerr                                  ;syntaxerr
0003BAB4 <AmiBlitz3.ab3@28437>            Dc.l do_ErrFail                                 ;doerrfail
0003BAB8 <AmiBlitz3.ab3@28438>            Dc.l syntaxerr
0003BABC <AmiBlitz3.ab3@28439>            Dc.l syntaxerr                                  ;mod
0003BAC0 <AmiBlitz3.ab3@28440>            Dc.l syntaxerr                                  ;Pi
0003BAC4 <AmiBlitz3.ab3@28441>            Dc.l do_Repeat                                  ;dorepeat
0003BAC8 <AmiBlitz3.ab3@28442>            Dc.l do_Until                                   ;dountil
0003BACC <AmiBlitz3.ab3@28443>            Dc.l do_PutReg                                  ;doputreg
0003BAD0 <AmiBlitz3.ab3@28444>            Dc.l do_Pop                                     ;dopop
0003BAD4 <AmiBlitz3.ab3@28445>            Dc.l do_INCDIR                                  ;doincdir
0003BAD8 <AmiBlitz3.ab3@28446>            Dc.l mydo_Endif2                                ;mydoendif2
0003BADC <AmiBlitz3.ab3@28447>            Dc.l do_Wend                                    ;dowend
0003BAE0 <AmiBlitz3.ab3@28448>            Dc.l do_SysJsr                                  ;dosysjsr
0003BAE4 <AmiBlitz3.ab3@28449>            Dc.l do_WBStartup                               ;dowbstartup
0003BAE8 <AmiBlitz3.ab3@28450>            Dc.l syntaxerr
0003BAEC <AmiBlitz3.ab3@28451>            Dc.l do_Ongo                                    ;doongo
0003BAF0 <AmiBlitz3.ab3@28452>            Dc.l syntaxerr
0003BAF4 <AmiBlitz3.ab3@28453>            Dc.l do_Forever                                 ;doforever
0003BAF8 <AmiBlitz3.ab3@28454>            Dc.l do_Restore                                 ;dorestore
0003BAFC <AmiBlitz3.ab3@28455>            Dc.l do_Exchange                                ;doexchange
0003BB00 <AmiBlitz3.ab3@28456>            Dc.l do_USEPATH                                 ;dousepath
0003BB04 <AmiBlitz3.ab3@28457>            Dc.l do_CloseEd                                 ;doclosed
0003BB08 <AmiBlitz3.ab3@28458>            Dc.l do_NoCli                                   ;donocli
0003BB0C <AmiBlitz3.ab3@28459>            Dc.l syntaxerr                                  ;syntaxerr
0003BB10 <AmiBlitz3.ab3@28460>            Dc.l syntaxerr                                  ;syntaxerr
0003BB14 <AmiBlitz3.ab3@28461>            Dc.l syntaxerr                                  ;syntaxerr
0003BB18 <AmiBlitz3.ab3@28462>            Dc.l syntaxerr                                  ;syntaxerr
0003BB1C <AmiBlitz3.ab3@28463>            Dc.l syntaxerr                                  ;syntaxerr
0003BB20 <AmiBlitz3.ab3@28464>            Dc.l do_runerrson                               ;dorunerrson
0003BB24 <AmiBlitz3.ab3@28465>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003BB28 <AmiBlitz3.ab3@28466>            Dc.l do_uselastpath
0003BB2C <AmiBlitz3.ab3@28467>            Dc.l do_regload
0003BB30 <AmiBlitz3.ab3@28468>            Dc.l do_regsave
0003BB34 <AmiBlitz3.ab3@28469>            Dc.l do_Object
0003BB38 <AmiBlitz3.ab3@28470>            Dc.l do_usepath2
0003BB3C <AmiBlitz3.ab3@28471>            Dc.l do_LastRunErrsMode
0003BB40 <AmiBlitz3.ab3@28494> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003BB44 <AmiBlitz3.ab3@28495>            Dc.l menu_run
0003BB48 <AmiBlitz3.ab3@28496>            Dc.l menu_createexecutable
0003BB4C <AmiBlitz3.ab3@28497>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003BB50 <AmiBlitz3.ab3@28498>            Dc.l menu_createresidentfile
0003BB54 <AmiBlitz3.ab3@28499> 
0003BB58 <AmiBlitz3.ab3@28500> 
0003BB5C <AmiBlitz3.ab3@28501>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003BB60 <AmiBlitz3.ab3@28502>            Dc.l menu_reloadlibs
0003BB64 <AmiBlitz3.ab3@28503>            Dc.l menu_loaddebugmodule
0003BB68 <AmiBlitz3.ab3@28504>            Dc.l menu_dummyfunc
0003BB6C <AmiBlitz3.ab3@28505>            Dc.l menu_newcreate
0003BB70 <AmiBlitz3.ab3@28506>            Dc.l menu_dummyfunc
0003BB74 <AmiBlitz3.ab3@28507>            Dc.l menu_toggledebug
0003BB78 <AmiBlitz3.ab3@28508>            Dc.l menu_dummyfunc
0003BB7C <AmiBlitz3.ab3@28509>            Dc.l menu_dummyfunc
0003BBA6 <AmiBlitz3.ab3@28514>   !basic
0003BC08 <AmiBlitz3.ab3@28515>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003BC26 <AmiBlitz3.ab3@28516>   !asm
0003BC28 <AmiBlitz3.ab3@28517> RTS
0003BC29 <AmiBlitz3.ab3@28523> set_autorun:               Dc.b $00
0003BC2E <AmiBlitz3.ab3@28524> autorun:                   Dc.b $80,$01,$01,$00,$01
0003BC2F <AmiBlitz3.ab3@28526> set_interruptcheck:        Dc.b $00
0003BC34 <AmiBlitz3.ab3@28527> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003BC35 <AmiBlitz3.ab3@28529> set_assemblercheck:        Ds.b 1
0003BC3A <AmiBlitz3.ab3@28530> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003BC3B <AmiBlitz3.ab3@28532> set_overflowcheck:         Ds.b 1
0003BC40 <AmiBlitz3.ab3@28533> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003BC46 <AmiBlitz3.ab3@28535> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003BC4C <AmiBlitz3.ab3@28536> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003BC52 <AmiBlitz3.ab3@28537> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003BC54 <AmiBlitz3.ab3@28538> Even4
0003BC60 <AmiBlitz3.ab3@28541> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003BC68 <AmiBlitz3.ab3@28542>                            Dc.l $00000000,$00000000
0003BC70 <AmiBlitz3.ab3@28543> tstsize1:                  Dc.l $00000100,$000003E9
0003BC74 <AmiBlitz3.ab3@28544> tstsize2:                  Dc.l $00000100
0003BC78 <AmiBlitz3.ab3@28545> tstend:                    Dc.l $000003EC
0003BC80 <AmiBlitz3.ab3@28546> tstsize3:                  Ds.l 2
0003BC84 <AmiBlitz3.ab3@28547> tstdone:                   Dc.l $000003F2
0003BC88 <AmiBlitz3.ab3@28550> edstruct:                  Dc.l tokens                     ;data for ted
0003BC8C <AmiBlitz3.ab3@28554>                            Dc.l 0
0003BC90 <AmiBlitz3.ab3@28556>                            Dc.l read_xtrafile              ;load .xtra routine
0003BC94 <AmiBlitz3.ab3@28557>                            Dc.l write_xtrafile             ;save .xtra routine
0003BC98 <AmiBlitz3.ab3@28558>                            Dc.l call_menuentry             ;Menu Routine
0003BC9C <AmiBlitz3.ab3@28559>                            Ds.l 1                          ;cleanup (?)
0003BCA0 <AmiBlitz3.ab3@28560>                            Dc.b ":",34,".;"
0003BD9C <AmiBlitz3.ab3@28563> 
0003BE7C <AmiBlitz3.ab3@28564>                            Ds.l 56
0003BE7E <AmiBlitz3.ab3@28569> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003BE82 <AmiBlitz3.ab3@28572> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003BE84 <AmiBlitz3.ab3@28573>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003BE88 <AmiBlitz3.ab3@28574>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BE8E <AmiBlitz3.ab3@28578> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003BE90 <AmiBlitz3.ab3@28582>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003BE94 <AmiBlitz3.ab3@28585> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003BE98 <AmiBlitz3.ab3@28588> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003BE9C <AmiBlitz3.ab3@28589>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003BE9E <AmiBlitz3.ab3@28595>                            Dc.b $4A,$40                                             ;TST.W   D0
0003BEA0 <AmiBlitz3.ab3@28599>                            Dc.b $4A,$80                                             ;TST.L   D0
0003BEA2 <AmiBlitz3.ab3@28602> nops8:                     Dc.b $4E,$71                                             ;NOP
0003BEA4 <AmiBlitz3.ab3@28603>                            Dc.b $4E,$71                                             ;NOP
0003BEA6 <AmiBlitz3.ab3@28604>                            Dc.b $4E,$71                                             ;NOP
0003BEA8 <AmiBlitz3.ab3@28605>                            Dc.b $4E,$71                                             ;NOP
0003BEAA <AmiBlitz3.ab3@28606> nops4:                     Dc.b $4E,$71                                             ;NOP
0003BEAC <AmiBlitz3.ab3@28608>                            Dc.b $4E,$71                                             ;NOP
0003BEAE <AmiBlitz3.ab3@28609>                            Dc.b $4E,$71                                             ;NOP
0003BEB0 <AmiBlitz3.ab3@28610>                            Dc.b $4E,$71                                             ;NOP
0003BEB4 <AmiBlitz3.ab3@28614> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003BEB8 <AmiBlitz3.ab3@28617> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003BEBA <AmiBlitz3.ab3@28620> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003BEBC <AmiBlitz3.ab3@28623> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BEBE <AmiBlitz3.ab3@28624>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003BEC2 <AmiBlitz3.ab3@28625>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003BEC4 <AmiBlitz3.ab3@28626>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003BEC6 <AmiBlitz3.ab3@28632> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BECA <AmiBlitz3.ab3@28633>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003BECC <AmiBlitz3.ab3@28638> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BED0 <AmiBlitz3.ab3@28639>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003BED2 <AmiBlitz3.ab3@28643> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BED4 <AmiBlitz3.ab3@28644>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003BED8 <AmiBlitz3.ab3@28650> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003BEDA <AmiBlitz3.ab3@28651>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003BEDE <AmiBlitz3.ab3@28652>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003BEE2 <AmiBlitz3.ab3@28656> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003BEE4 <AmiBlitz3.ab3@28657>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003BEE8 <AmiBlitz3.ab3@28658>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003BEEA <AmiBlitz3.ab3@28661> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003BEEE <AmiBlitz3.ab3@28664> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003BEF2 <AmiBlitz3.ab3@28667> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003BEF6 <AmiBlitz3.ab3@28670> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003BEFA <AmiBlitz3.ab3@28674>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BEFC <AmiBlitz3.ab3@28675>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003BEFE <AmiBlitz3.ab3@28676>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003BF02 <AmiBlitz3.ab3@28681>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BF04 <AmiBlitz3.ab3@28682>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003BF06 <AmiBlitz3.ab3@28683>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003BF0A <AmiBlitz3.ab3@28688>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BF0C <AmiBlitz3.ab3@28689>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003BF0E <AmiBlitz3.ab3@28690>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003BF12 <AmiBlitz3.ab3@28695>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BF14 <AmiBlitz3.ab3@28696>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BF16 <AmiBlitz3.ab3@28697>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003BF1A <AmiBlitz3.ab3@28698>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003BF1C <AmiBlitz3.ab3@28699>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003BF20 <AmiBlitz3.ab3@28704>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BF22 <AmiBlitz3.ab3@28705>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003BF26 <AmiBlitz3.ab3@28706>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003BF28 <AmiBlitz3.ab3@28707>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BF2C <AmiBlitz3.ab3@28708>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003BF2E <AmiBlitz3.ab3@28709>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BF30 <AmiBlitz3.ab3@28712>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003BF34 <AmiBlitz3.ab3@28717>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BF36 <AmiBlitz3.ab3@28718>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003BF3A <AmiBlitz3.ab3@28719>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003BF3C <AmiBlitz3.ab3@28720>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BF40 <AmiBlitz3.ab3@28721>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003BF42 <AmiBlitz3.ab3@28722>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BF44 <AmiBlitz3.ab3@28725>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003BF48 <AmiBlitz3.ab3@28730>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BF4A <AmiBlitz3.ab3@28731>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BF4E <AmiBlitz3.ab3@28732>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003BF50 <AmiBlitz3.ab3@28733>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BF54 <AmiBlitz3.ab3@28734>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003BF56 <AmiBlitz3.ab3@28735>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BF58 <AmiBlitz3.ab3@28738>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003BF5C <AmiBlitz3.ab3@28743>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BF5E <AmiBlitz3.ab3@28744>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BF62 <AmiBlitz3.ab3@28745>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003BF68 <AmiBlitz3.ab3@28746>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003BF6C <AmiBlitz3.ab3@28747>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003BF6E <AmiBlitz3.ab3@28748>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BF72 <AmiBlitz3.ab3@28755>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003BF74 <AmiBlitz3.ab3@28759> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003BF76 <AmiBlitz3.ab3@28762> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BF7A <AmiBlitz3.ab3@28765> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003BF7C <AmiBlitz3.ab3@28766> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003BF80 <AmiBlitz3.ab3@28769> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003BF82 <AmiBlitz3.ab3@28772> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BF86 <AmiBlitz3.ab3@28775> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003BF88 <AmiBlitz3.ab3@28779>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003BF8A <AmiBlitz3.ab3@28782> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003BF8C <AmiBlitz3.ab3@28785> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BF90 <AmiBlitz3.ab3@28788> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003BF94 <AmiBlitz3.ab3@28791> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003BF98 <AmiBlitz3.ab3@28794> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003BF9A <AmiBlitz3.ab3@28797> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BF9C <AmiBlitz3.ab3@28800> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003BFA0 <AmiBlitz3.ab3@28803> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003BFA6 <AmiBlitz3.ab3@28804>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003BFA8 <AmiBlitz3.ab3@28805>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BFAC <AmiBlitz3.ab3@28809> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003BFAE <AmiBlitz3.ab3@28810>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BFB0 <AmiBlitz3.ab3@28814> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003BFB4 <AmiBlitz3.ab3@28817> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003BFB6 <AmiBlitz3.ab3@28821>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003BFB8 <AmiBlitz3.ab3@28825>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BFBA <AmiBlitz3.ab3@28829>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003BFBE <AmiBlitz3.ab3@28832> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003BFC2 <AmiBlitz3.ab3@28835> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003BFC4 <AmiBlitz3.ab3@28838> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003BFC6 <AmiBlitz3.ab3@28841> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BFC8 <AmiBlitz3.ab3@28844> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003BFCC <AmiBlitz3.ab3@28847> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003BFD0 <AmiBlitz3.ab3@28850> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003BFD2 <AmiBlitz3.ab3@28853> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003BFD4 <AmiBlitz3.ab3@28857>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003BFD8 <AmiBlitz3.ab3@28860>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BFDA <AmiBlitz3.ab3@28866>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003BFDE <AmiBlitz3.ab3@28869>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BFE0 <AmiBlitz3.ab3@28875>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003BFE4 <AmiBlitz3.ab3@28879> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003BFE6 <AmiBlitz3.ab3@28882> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003BFE8 <AmiBlitz3.ab3@28886>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BFEA <AmiBlitz3.ab3@28890>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003BFF0 <AmiBlitz3.ab3@28893> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003BFF6 <AmiBlitz3.ab3@28896> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003BFFE <AmiBlitz3.ab3@28900> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003C002 <AmiBlitz3.ab3@28901>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003C004 <AmiBlitz3.ab3@28905> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003C008 <AmiBlitz3.ab3@28908> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003C00C <AmiBlitz3.ab3@28911> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003C010 <AmiBlitz3.ab3@28914> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003C014 <AmiBlitz3.ab3@28915> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003C018 <AmiBlitz3.ab3@28919>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003C01C <AmiBlitz3.ab3@28921>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003C01E <AmiBlitz3.ab3@28924> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003C022 <AmiBlitz3.ab3@28927> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003C024 <AmiBlitz3.ab3@28930> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003C026 <AmiBlitz3.ab3@28931>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003C028 <AmiBlitz3.ab3@28932>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003C02C <AmiBlitz3.ab3@28933> 
0003C02E <AmiBlitz3.ab3@28934>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003C030 <AmiBlitz3.ab3@28935>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003C032 <AmiBlitz3.ab3@28936>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003C038 <AmiBlitz3.ab3@28938>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003C03A <AmiBlitz3.ab3@28943> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003C03C <AmiBlitz3.ab3@28944>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003C03E <AmiBlitz3.ab3@28948> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003C042 <AmiBlitz3.ab3@28951> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003C044 <AmiBlitz3.ab3@28954> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003C046 <AmiBlitz3.ab3@28958>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003C048 <AmiBlitz3.ab3@28961> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003C04C <AmiBlitz3.ab3@28964> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003C04E <AmiBlitz3.ab3@28965>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003C052 <AmiBlitz3.ab3@28969> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003C056 <AmiBlitz3.ab3@28970> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003C05A <AmiBlitz3.ab3@28974> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003C05E <AmiBlitz3.ab3@28978> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003C064 <AmiBlitz3.ab3@28982> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003C06A <AmiBlitz3.ab3@28985> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003C06E <AmiBlitz3.ab3@28989> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003C072 <AmiBlitz3.ab3@28993>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003C076 <AmiBlitz3.ab3@28994>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003C07C <AmiBlitz3.ab3@28999>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003C080 <AmiBlitz3.ab3@29004>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003C082 <AmiBlitz3.ab3@29009>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003C086 <AmiBlitz3.ab3@29013>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003C088 <AmiBlitz3.ab3@29017> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003C08A <AmiBlitz3.ab3@29020> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003C08C <AmiBlitz3.ab3@29021>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003C090 <AmiBlitz3.ab3@29025>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003C094 <AmiBlitz3.ab3@29029> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003C098 <AmiBlitz3.ab3@29032> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003C09A <AmiBlitz3.ab3@29035> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003C09E <AmiBlitz3.ab3@29038> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003C0A0 <AmiBlitz3.ab3@29041> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003C0A9 <AmiBlitz3.ab3@29045>                            Dc.b "ram:test",0
0003C0AA <AmiBlitz3.ab3@29046> Even
0003C0AE <AmiBlitz3.ab3@29050>                            Dc.l  0                          ;was  Ds.w 3 org source
0003C0B0 <AmiBlitz3.ab3@29052>                            Dc.w  0
0003C0B4 <AmiBlitz3.ab3@29055> _mathffpbase:              Ds.l 1                           ;maths org source
0003C0B6 <AmiBlitz3.ab3@29056> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003C0B8 <AmiBlitz3.ab3@29057> typelen:                   Ds.w 1
0003C0BC <AmiBlitz3.ab3@29058> prevtype:                  Ds.l 1
0003C0C0 <AmiBlitz3.ab3@29059> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003C0C2 <AmiBlitz3.ab3@29060> lastchar:                  Ds.w 1
0003C0C6 <AmiBlitz3.ab3@29061> thistype:                  Ds.l 1
0003C0CA <AmiBlitz3.ab3@29062> errstack:                  Ds.l 1
0003C0CE <AmiBlitz3.ab3@29063> errcont:                   Ds.l 1
0003C0D0 <AmiBlitz3.ab3@29064> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003C0D2 <AmiBlitz3.ab3@29065> linesleft:                 Ds.w 1
0003C0D6 <AmiBlitz3.ab3@29066> sourceline:                Ds.l 1                          ;thisitem org source
0003C0DA <AmiBlitz3.ab3@29067> varbase:                   Ds.l 1                          ;firstvar org source
0003C0DE <AmiBlitz3.ab3@29068> alllocals:                 Ds.l 1
0003C0E2 <AmiBlitz3.ab3@29069> firstlocal:                Ds.l 1
0003C0E6 <AmiBlitz3.ab3@29070> firstglob:                 Ds.l 1
0003C0E8 <AmiBlitz3.ab3@29071> globalvarpointer:          Ds.w 1                          ;varoff org source
0003C0EA <AmiBlitz3.ab3@29072> locvaroff:                 Ds.w 1
0003C0EE <AmiBlitz3.ab3@29073> firstitem_:                 Ds.l 1
0003C0F0 <AmiBlitz3.ab3@29074> numlines_org:              Ds.w 1                          ;numlines org source
0003C0F2 <AmiBlitz3.ab3@29075> returncode_org:            Ds.w 1                          ;returncode org source
0003C0F6 <AmiBlitz3.ab3@29076> firstiff:                  Ds.l 1                          ;firstif org source
0003C0FA <AmiBlitz3.ab3@29077> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003C2FA <AmiBlitz3.ab3@29078> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003C30A <AmiBlitz3.ab3@29079> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003C50A <AmiBlitz3.ab3@29080> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003C70A <AmiBlitz3.ab3@29081> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003C90A <AmiBlitz3.ab3@29082> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003C90E <AmiBlitz3.ab3@29084> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003CB0E <AmiBlitz3.ab3@29085> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003CD0E <AmiBlitz3.ab3@29087> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003CD12 <AmiBlitz3.ab3@29088> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003CF12 <AmiBlitz3.ab3@29089> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003CF16 <AmiBlitz3.ab3@29090> size_deflibs:              Ds.l 1                          ;deflibs org source
0003D116 <AmiBlitz3.ab3@29091> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003D316 <AmiBlitz3.ab3@29093> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003D31A <AmiBlitz3.ab3@29094> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003D51A <AmiBlitz3.ab3@29096> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003D51E <AmiBlitz3.ab3@29102>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003D522 <AmiBlitz3.ab3@29103>   Dc.b $00,$00,$00,$00
0003D526 <AmiBlitz3.ab3@29104>   Dc.b $00,$19,$00,$11
0003D52A <AmiBlitz3.ab3@29105>   Dc.b $00,$2E,$00,$18
0003D52E <AmiBlitz3.ab3@29106>   Dc.b $00,$04,$00,$03
0003D532 <AmiBlitz3.ab3@29107>   Dc.b $00,$01,$00,$22
0003D536 <AmiBlitz3.ab3@29108>   Dc.b $73,$68,$00,$00
0003D53A <AmiBlitz3.ab3@29109>   Dc.b $00,$00,$00,$00
0003D53E <AmiBlitz3.ab3@29110>   Dc.b $00,$00,$00,$00
0003D542 <AmiBlitz3.ab3@29111>   Dc.b $00,$00,$00,$00
0003D546 <AmiBlitz3.ab3@29112>   Dc.b $00,$00,$00,$00
0003D54A <AmiBlitz3.ab3@29113>   Dc.b $00,$00,$00,$00
0003D54E <AmiBlitz3.ab3@29114>   Dc.b $03,$22,$00,$21
0003D552 <AmiBlitz3.ab3@29115>   Dc.b $3C,$28,$00,$22
0003D556 <AmiBlitz3.ab3@29116>   Dc.b $6E,$C0,$00,$00
0003D55A <AmiBlitz3.ab3@29117>   Dc.b $00,$12,$00,$00
0003D55E <AmiBlitz3.ab3@29118>   Dc.b $00,$0E,$00,$00
0003D562 <AmiBlitz3.ab3@29119>   Dc.b $00,$00,$00,$00
0003D566 <AmiBlitz3.ab3@29120>   Dc.b $00,$00,$00,$00
0003D56A <AmiBlitz3.ab3@29121>   Dc.b $00,$00,$00,$00
0003D56E <AmiBlitz3.ab3@29122>   Dc.b $00,$00,$00,$2E
0003D572 <AmiBlitz3.ab3@29123>   Dc.b $00,$17,$00,$02
0003D576 <AmiBlitz3.ab3@29124>   Dc.b $00,$01,$8E,$80
0003D57A <AmiBlitz3.ab3@29125>   Dc.b $03,$00,$00,$00
0003D57E <AmiBlitz3.ab3@29126>   Dc.b $00,$00,$FF,$FF
0003D582 <AmiBlitz3.ab3@29127>   Dc.b $FF,$FF,$FF,$FC
0003D586 <AmiBlitz3.ab3@29128>   Dc.b $80,$00,$00,$00
0003D58A <AmiBlitz3.ab3@29129>   Dc.b $00,$00,$80,$00
0003D58E <AmiBlitz3.ab3@29130>   Dc.b $00,$3F,$BB,$40
0003D592 <AmiBlitz3.ab3@29131>   Dc.b $80,$1F,$C0,$00
0003D596 <AmiBlitz3.ab3@29132>   Dc.b $00,$00,$80,$3F
0003D59A <AmiBlitz3.ab3@29133>   Dc.b $C0,$0F,$BB,$40
0003D59E <AmiBlitz3.ab3@29134>   Dc.b $80,$1F,$C0,$00
0003D5A2 <AmiBlitz3.ab3@29135>   Dc.b $00,$00,$8E,$00
0003D5A6 <AmiBlitz3.ab3@29136>   Dc.b $F8,$00,$00,$00
0003D5AA <AmiBlitz3.ab3@29137>   Dc.b $8F,$01,$FF,$00
0003D5AE <AmiBlitz3.ab3@29138>   Dc.b $3B,$40,$81,$E3
0003D5B2 <AmiBlitz3.ab3@29139>   Dc.b $F7,$C0,$00,$00
0003D5B6 <AmiBlitz3.ab3@29140>   Dc.b $80,$7F,$F8,$70
0003D5BA <AmiBlitz3.ab3@29141>   Dc.b $3B,$40,$80,$0F
0003D5BE <AmiBlitz3.ab3@29142>   Dc.b $7C,$E0,$00,$00
0003D5C2 <AmiBlitz3.ab3@29143>   Dc.b $80,$00,$FD,$80
0003D5C6 <AmiBlitz3.ab3@29144>   Dc.b $00,$00,$80,$01
0003D5CA <AmiBlitz3.ab3@29145>   Dc.b $F6,$00,$FB,$40
0003D5CE <AmiBlitz3.ab3@29146>   Dc.b $80,$03,$EF,$00
0003D5D2 <AmiBlitz3.ab3@29147>   Dc.b $00,$00,$80,$07
0003D5D6 <AmiBlitz3.ab3@29148>   Dc.b $87,$80,$3B,$40
0003D5DA <AmiBlitz3.ab3@29149>   Dc.b $80,$0F,$01,$C0
0003D5DE <AmiBlitz3.ab3@29150>   Dc.b $00,$00,$80,$03
0003D5E2 <AmiBlitz3.ab3@29151>   Dc.b $F0,$70,$1D,$40
0003D5E6 <AmiBlitz3.ab3@29152>   Dc.b $80,$00,$18,$1C
0003D5EA <AmiBlitz3.ab3@29153>   Dc.b $00,$00,$80,$00
0003D5EE <AmiBlitz3.ab3@29154>   Dc.b $10,$06,$03,$40
0003D5F2 <AmiBlitz3.ab3@29155>   Dc.b $80,$00,$20,$1F
0003D5F6 <AmiBlitz3.ab3@29156>   Dc.b $00,$00,$80,$00
0003D5FA <AmiBlitz3.ab3@29157>   Dc.b $00,$00,$01,$40
0003D5FE <AmiBlitz3.ab3@29158>   Dc.b $80,$00,$00,$00
0003D602 <AmiBlitz3.ab3@29159>   Dc.b $00,$00,$80,$00
0003D606 <AmiBlitz3.ab3@29160>   Dc.b $00,$00,$00,$00
0003D60A <AmiBlitz3.ab3@29161>   Dc.b $00,$00,$00,$00
0003D60E <AmiBlitz3.ab3@29162>   Dc.b $00,$00,$00,$00
0003D612 <AmiBlitz3.ab3@29163>   Dc.b $00,$00,$00,$04
0003D616 <AmiBlitz3.ab3@29164>   Dc.b $00,$3F,$FC,$01
0003D61A <AmiBlitz3.ab3@29165>   Dc.b $BB,$44,$00,$60
0003D61E <AmiBlitz3.ab3@29166>   Dc.b $FE,$00,$00,$04
0003D622 <AmiBlitz3.ab3@29167>   Dc.b $00,$CF,$FF,$01
0003D626 <AmiBlitz3.ab3@29168>   Dc.b $BB,$44,$1F,$EF
0003D62A <AmiBlitz3.ab3@29169>   Dc.b $FF,$00,$00,$04
0003D62E <AmiBlitz3.ab3@29170>   Dc.b $33,$FF,$FF,$E0
0003D632 <AmiBlitz3.ab3@29171>   Dc.b $00,$04,$37,$FE
0003D636 <AmiBlitz3.ab3@29172>   Dc.b $7F,$FC,$1B,$44
0003D63A <AmiBlitz3.ab3@29173>   Dc.b $0F,$9C,$FF,$FF
0003D63E <AmiBlitz3.ab3@29174>   Dc.b $00,$04,$03,$E3
0003D642 <AmiBlitz3.ab3@29175>   Dc.b $FF,$FF,$DB,$44
0003D646 <AmiBlitz3.ab3@29176>   Dc.b $00,$7F,$BF,$FF
0003D64A <AmiBlitz3.ab3@29177>   Dc.b $80,$04,$00,$0F
0003D64E <AmiBlitz3.ab3@29178>   Dc.b $3F,$FE,$00,$04
0003D652 <AmiBlitz3.ab3@29179>   Dc.b $00,$06,$7F,$F8
0003D656 <AmiBlitz3.ab3@29180>   Dc.b $1B,$44,$00,$0C
0003D65A <AmiBlitz3.ab3@29181>   Dc.b $F7,$FC,$00,$04
0003D65E <AmiBlitz3.ab3@29182>   Dc.b $00,$19,$F9,$FE
0003D662 <AmiBlitz3.ab3@29183>   Dc.b $1B,$44,$00,$33
0003D666 <AmiBlitz3.ab3@29184>   Dc.b $FE,$7F,$00,$04
0003D66A <AmiBlitz3.ab3@29185>   Dc.b $00,$0F,$FF,$BF
0003D66E <AmiBlitz3.ab3@29186>   Dc.b $CD,$44,$00,$03
0003D672 <AmiBlitz3.ab3@29187>   Dc.b $EF,$EF,$F0,$04
0003D676 <AmiBlitz3.ab3@29188>   Dc.b $00,$00,$7F,$DF
0003D67A <AmiBlitz3.ab3@29189>   Dc.b $FB,$44,$00,$00
0003D67E <AmiBlitz3.ab3@29190>   Dc.b $FF,$A7,$FC,$04
0003D682 <AmiBlitz3.ab3@29191>   Dc.b $00,$00,$7E,$3F
0003D686 <AmiBlitz3.ab3@29192>   Dc.b $FD,$44,$00,$00
0003D68A <AmiBlitz3.ab3@29193>   Dc.b $00,$00,$00,$04
0003D68E <AmiBlitz3.ab3@29194>   Dc.b $7F,$FF,$FF,$FF
0003D692 <AmiBlitz3.ab3@29195>   Dc.b $FF,$FC,$00,$00
0003D696 <AmiBlitz3.ab3@29196>   Dc.b $00,$01,$00,$00
0003D699 <AmiBlitz3.ab3@29197>   Dc.b $00,$00,$04
0003D69F <AmiBlitz3.ab3@29200> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003D6F7 <AmiBlitz3.ab3@29201> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003D6F8 <AmiBlitz3.ab3@29202> Even
0003D6FC <AmiBlitz3.ab3@29204> sysdebug:            Dc.l $3F0
0003D700 <AmiBlitz3.ab3@29208> exelock              Ds.l 1
0003D704 <AmiBlitz3.ab3@29212> includesourceline    Dc.l 0
0003D708 <AmiBlitz3.ab3@29213> linenum              Ds.l 1
0003D70C <AmiBlitz3.ab3@29214> globallinecount      Ds.l 1
0003D728 <AmiBlitz3.ab3@29215> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003D72C <AmiBlitz3.ab3@29216> calc_option          Dc.l 1
0003D730 <AmiBlitz3.ab3@29217> versioninformation   Dc.l $00
0003D734 <AmiBlitz3.ab3@29218> number_of_builds     Dc.l $00
0003D738 <AmiBlitz3.ab3@29221> BSS
0003D73A <AmiBlitz3.ab3@29222> debugnest            Ds.w 1
0003D73E <AmiBlitz3.ab3@29223> instringf            Ds.l 1
0003D742 <AmiBlitz3.ab3@29224> funcscanon           Ds.l 1
0003D756 <AmiBlitz3.ab3@29225> storedebugmode       Ds.b 20
0003D75A <AmiBlitz3.ab3@29226> firsttimepref        Ds.l 1
0003D75B <AmiBlitz3.ab3@29227> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003D75C <AmiBlitz3.ab3@29228> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003D75E <AmiBlitz3.ab3@29229> nostringopt          Ds.w 1
0003D7DE <AmiBlitz3.ab3@29230> path2:               Ds.l 32
0003D7E2 <AmiBlitz3.ab3@29231> typebase             Dc.l 0
0003D7E4 <AmiBlitz3.ab3@29232> doublepeek           Dc.w 0
0003D7E8 <AmiBlitz3.ab3@29233> lastoffset           Dc.l 0
0003D7EA <AmiBlitz3.ab3@29234> firsttime            Dc.w 0
0003D7EE <AmiBlitz3.ab3@29235> lastdestpointer      Dc.l 0
0003D7F2 <AmiBlitz3.ab3@29236> prevwritedat         Dc.l 0
0003D7F6 <AmiBlitz3.ab3@29237> lastsourceline       Dc.l 0
0003D7FA <AmiBlitz3.ab3@29238> lastwritedat         Dc.l 0
0003D7FC <AmiBlitz3.ab3@29239> makeexec             Dc.w 0
0003D7FE <AmiBlitz3.ab3@29240> makeexec_remember    Dc.w 0
0003D802 <AmiBlitz3.ab3@29241> sharebase            Ds.l 1
0003D806 <AmiBlitz3.ab3@29242> tempa7               Ds.l 1
0003D808 <AmiBlitz3.ab3@29243> incnif               Ds.w 1
0003D80C <AmiBlitz3.ab3@29244> tempstore            Ds.l 1
0003D810 <AmiBlitz3.ab3@29245> result               Ds.l 1
0003D812 <AmiBlitz3.ab3@29246> automode             Ds.w 1
0003D814 <AmiBlitz3.ab3@29247> stackcorrect         Ds.w 1
0003D816 <AmiBlitz3.ab3@29248> formode              Ds.w 1
0003D81A <AmiBlitz3.ab3@29249> limitregs            Ds.l 1
0003D81C <AmiBlitz3.ab3@29250> onestep              Ds.w 1
0003D820 <AmiBlitz3.ab3@29251> reqmode              Ds.l 1
0003D8C0 <AmiBlitz3.ab3@29252> inctab               Ds.l 40
0003D8C2 <AmiBlitz3.ab3@29253> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003D8C6 <AmiBlitz3.ab3@29254> includeline          Ds.l 1
0003D8CA <AmiBlitz3.ab3@29255> morememadd           Ds.l 1
0003D8CC <AmiBlitz3.ab3@29256> objectcount          Ds.w 1
0003D8D0 <AmiBlitz3.ab3@29257> savefuncspace        Ds.l 1
0003D8D4 <AmiBlitz3.ab3@29258> lasttrap1            Ds.l 1
0003D8D8 <AmiBlitz3.ab3@29259> currentfunccall      Ds.l 1
0003D8D9 <AmiBlitz3.ab3@29260> skipfunc             Ds.b 1
0003D8DA <AmiBlitz3.ab3@29261> resdisable           Ds.b 1
0003D8DB <AmiBlitz3.ab3@29262> skiptoggle           Ds.b 1
0003D8DC <AmiBlitz3.ab3@29263> developobject        Ds.b 1
0003D8DE <AmiBlitz3.ab3@29264> iniffcommand         Ds.w 1
0003D8E0 <AmiBlitz3.ab3@29265> startoffsetmore      Ds.w 1
0003D8E2 <AmiBlitz3.ab3@29266> olddebugmode         Ds.w 1
0003D8E6 <AmiBlitz3.ab3@29267> fpucodeglobal        Ds.l 1
0003D8EA <AmiBlitz3.ab3@29268> fpucodelocal         Ds.l 1
0003D8EE <AmiBlitz3.ab3@29269> maxregs              Ds.l 1
0003D8F2 <AmiBlitz3.ab3@29270> fpucode              Ds.l 1
0003D8F4 <AmiBlitz3.ab3@29271> firstmline           Ds.w 1
0003D934 <AmiBlitz3.ab3@29272> regtable             Ds.l 16
0003D936 <AmiBlitz3.ab3@29273> exdebug              Ds.w 1
0003D938 <AmiBlitz3.ab3@29274> a2offset2            Ds.w 1
0003D93C <AmiBlitz3.ab3@29275> parnumtemp           Ds.l 1
0003D93D <AmiBlitz3.ab3@29276> doimmediate          Ds.b 1
0003D93E <AmiBlitz3.ab3@29277> notypecheck          Ds.b 1
0003D940 <AmiBlitz3.ab3@29278> vartype              Ds.w 1
0003D941 <AmiBlitz3.ab3@29279> peekaddrsize         Ds.b 1
0003D942 <AmiBlitz3.ab3@29280> declare2             Ds.b 1
0003D944 <AmiBlitz3.ab3@29281> parameternum         Ds.w 1
0003D948 <AmiBlitz3.ab3@29282> lasttoken            Ds.l 1
0003D94A <AmiBlitz3.ab3@29283> newvariable          Ds.w 1
0003D94B <AmiBlitz3.ab3@29284> declare              Ds.b 1
0003D94C <AmiBlitz3.ab3@29285> typecheck            Ds.b 1
0003D94D <AmiBlitz3.ab3@29286> nowdeclare           Ds.b 1
0003D94E <AmiBlitz3.ab3@29287> dimkeep              Ds.b 1
0003D94F <AmiBlitz3.ab3@29288> a4a5store            Ds.b 1
0003D950 <AmiBlitz3.ab3@29289> ___freetouse         Ds.b 1
0003D954 <AmiBlitz3.ab3@29290> firstiffstore        Ds.l 1
0003D958 <AmiBlitz3.ab3@29291> destpointer2         Ds.l 1
0003D95C <AmiBlitz3.ab3@29292> stackaddr            Ds.l 1
0003DA60 <AmiBlitz3.ab3@29293> allowtab             Ds.b 260
0003DB60 <AmiBlitz3.ab3@29294> templine             Ds.b 256
0003DB62 <AmiBlitz3.ab3@29295> thenmode             Ds.w 1
0003DB64 <AmiBlitz3.ab3@29296> temp                 Ds.w 1
0003DB66 <AmiBlitz3.ab3@29297> tempregnum           Ds.w 1
0003DB6A <AmiBlitz3.ab3@29299> numlines2            Ds.l 1
0003DB6E <AmiBlitz3.ab3@29300> numlines             Ds.l 1
0003DB70 <AmiBlitz3.ab3@29301> exmac                Ds.w 1
0003DB72 <AmiBlitz3.ab3@29302> returncode           Ds.w 1
0003DB76 <AmiBlitz3.ab3@29303> fp0iff               Ds.l 1
0003DB7A <AmiBlitz3.ab3@29304> fp0addr              Ds.l 1
0003DB7C <AmiBlitz3.ab3@29305> fp0mode              Ds.w 1
0003DB7E <AmiBlitz3.ab3@29306> fp0var               Ds.w 1
0003DB80 <AmiBlitz3.ab3@29307> fastfunc             Ds.w 1
0003DB82 <AmiBlitz3.ab3@29308> retmode              Ds.w 1
0003DB84 <AmiBlitz3.ab3@29309> parnum               Ds.w 1
0003DB86 <AmiBlitz3.ab3@29310> regmask              Ds.w 1
0003DB88 <AmiBlitz3.ab3@29311> regnumfunc           Ds.w 1
0003DB8A <AmiBlitz3.ab3@29312> libmode              Ds.w 1
0003DB8E <AmiBlitz3.ab3@29313> oldline              Ds.l 1
0003DB92 <AmiBlitz3.ab3@29314> sourceline3          Ds.l 1
0003DC5A <AmiBlitz3.ab3@29315> debugstore           Ds.b 200
0003DC5E <AmiBlitz3.ab3@29316> deststore            Ds.l 1
0003DC62 <AmiBlitz3.ab3@29318> loada                Ds.l 1
0003DC66 <AmiBlitz3.ab3@29320> currtype             Ds.l 1
0003DC6A <AmiBlitz3.ab3@29321> arrayoffset          Ds.l 1
0003DC6E <AmiBlitz3.ab3@29322> lastlabel            Ds.l 1
0003DC72 <AmiBlitz3.ab3@29323> curtemplabel         Ds.l 1
0003DC76 <AmiBlitz3.ab3@29324> sourceline2          Ds.l 1
0003DD76 <AmiBlitz3.ab3@29325> chartab              Ds.b 256
0003DDEE <AmiBlitz3.ab3@29326> tempspace            Ds.b 120
000BDDFE <AmiBlitz3.ab3@29327> instrtab             Ds.l 65538*2
000C5DFE <AmiBlitz3.ab3@29329> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E5E02 <AmiBlitz3.ab3@29330> replacedat           Ds.w 65538
000EDE02 <AmiBlitz3.ab3@29331> variablehash         Ds.l 8192
000EDE06 <AmiBlitz3.ab3@29332> newinitaddr          Ds.l 1
000EDE0A <AmiBlitz3.ab3@29333> realbssend           Ds.l 1
000EDE0C <AmiBlitz3.ab3@29334> saved0               Ds.w 1
000EDE8C <AmiBlitz3.ab3@29335> lastpath             Ds.b 128
000EDF0C <AmiBlitz3.ab3@29336> lastpath2            Ds.b 128
000EDFD4 <AmiBlitz3.ab3@29337> fpustackbase         Ds.w 100
000EDFD8 <AmiBlitz3.ab3@29338> 
000EDFDA <AmiBlitz3.ab3@29339> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EDFDE <AmiBlitz3.ab3@29340> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EDFE2 <AmiBlitz3.ab3@29341> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EDFE6 <AmiBlitz3.ab3@29342> rightsidetype        Dc.l 0  ; same as above but right side
000EDFEA <AmiBlitz3.ab3@29345> trap15temp           Ds.l 1
000EDFEE <AmiBlitz3.ab3@29346> trap15temp2          Ds.l 1
000EDFF2 <AmiBlitz3.ab3@29347> templibend           Ds.l 1
000EDFF6 <AmiBlitz3.ab3@29348> tempdata1start       Ds.l 1
000EDFFA <AmiBlitz3.ab3@29349> stacktrack           Ds.l 1
000EDFFE <AmiBlitz3.ab3@29350> pad                  Ds.l 1
000EE0FE <AmiBlitz3.ab3@29351> includetemp          Ds.b 256
000EEAFE <AmiBlitz3.ab3@29352> includetemp2         Ds.b 256*10
000EEB00 <AmiBlitz3.ab3@29353> funccall             Ds.w 1
000EEB04 <AmiBlitz3.ab3@29356> ptr_resfile          Ds.l 1
000EEB06 <AmiBlitz3.ab3@29357> CalculatorButtonBinFlag:    Ds.w 1
000EEB08 <AmiBlitz3.ab3@29358> CalculatorButtonDecFlag:    Ds.w 1
000EEB0C <AmiBlitz3.ab3@29359> ped_startup_addr:    Ds.l 1
000EEB0D <AmiBlitz3.ab3@29360> start_without_libs:  Ds.b 1
000EEB0E <AmiBlitz3.ab3@29361> skip_bytes:          Ds.b 1
000EEB12 <AmiBlitz3.ab3@29362> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EEB16 <AmiBlitz3.ab3@29363> beforeparameterfetch Ds.l 1
000EEB1A <AmiBlitz3.ab3@29364> typetocast           Ds.l 1
000EEB1E <AmiBlitz3.ab3@29365> errorcounter         Ds.l 1
000EEB1F <AmiBlitz3.ab3@29366> iserror              Ds.b 1
000EEB20 <AmiBlitz3.ab3@29367> Even
000EEB24 <AmiBlitz3.ab3@29369> CLIMode:             Dc.l 0
000EEB28 <AmiBlitz3.ab3@29370> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
