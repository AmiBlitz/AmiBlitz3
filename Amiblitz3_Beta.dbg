00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000021C6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000021D0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
000021F8 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
000021FE <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002226 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002250 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000226E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
00002298 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002308 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002332 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002350 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000237A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
0000239A <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000023C6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000023D0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
000023EA <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002414 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000024C2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000024D8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
000024E2 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002514 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000251A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002520 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002526 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002538 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002542 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000255C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
0000259A <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000025A2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002650 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002664 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000026A6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000026C6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000026D0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
000026EC <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002726 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000272E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000027DC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002812 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002832 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002850 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002874 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000287E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
0000289A <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000028D4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002982 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
000029DA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
000029E0 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002A00 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002A0A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002A24 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002A3C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002A46 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002A62 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002A8C <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002A9A <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002B60 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002B8A <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002BB2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002BDC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002C06 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002C24 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002C4E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002CBA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002CE2 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002CF0 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002D24 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002D32 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002D54 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002D62 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002D86 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002DB0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002DF8 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002E22 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002E7A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002EA4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002EC2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002ED8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002EDE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00002EE8 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00002EF2 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00002F10 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00002F16 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
00002F1C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
00002F2C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00002F32 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
00002F3A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00002F62 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
00002F6C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00002F76 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
00002F8A <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
00002FA0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
00002FA6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
00002FCA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
00002FEE <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003018 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003044 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003046 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003074 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
0000309E <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003122 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
000031EA <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
000031F4 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000323E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
0000328A <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000032C2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000032D4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
000032EA <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
000032F0 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003306 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000333A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003340 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000334A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003364 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000033AE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
000033E4 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003408 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003412 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000343A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
00003482 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003558 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
00003582 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000035DC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
000035E2 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
000035E8 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
000035F0 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003626 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003634 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000363E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000366A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
00003682 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000036B0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000372E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
00003780 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
00003792 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003800 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003806 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003852 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003A00 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003A6C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003A72 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003A8E <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003A9C <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003AA2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003AB4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003ACA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003AD4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003AF0 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003B1A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003B2E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003B6C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003C52 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003C58 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003CA8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003CD2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003CF0 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003D1A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003D2E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003D6C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003E52 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003E58 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003ECA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00003EF4 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00003F12 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
00003F4C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
00003F84 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00003FDC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004040 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000406A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
0000408A <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000040B4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000040BA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000040D0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000040DA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
000040E0 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
000040F0 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
000040FA <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004114 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004142 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004164 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000416C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000417A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
00004194 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000041C2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000041D6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000420A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004224 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000422C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000423A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004254 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000427E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
0000428A <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000042AA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000042D0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
000042FC <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004314 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004322 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004328 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004334 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000433A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004346 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004356 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000435C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004368 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004372 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
0000438C <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
0000438C <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
0000439A <AmiBlitz3.ab3@81> If dos_FromCLI{}
000043A0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000043AC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000043AC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000043D4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000043DA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000043DC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000456C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004570 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004574 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004578 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000457C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
00004580 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
00004584 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
00004588 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
0000458C <common.ab3@273> XINCLUDE "/Shared/common.ab3"
00004590 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
00004594 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
00004598 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
0000459C <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000045A0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000045A4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000045A8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000045AC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000045B0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000045B4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000045B8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000045BC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000045C0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000045C4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000045C8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000045D0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000045D4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000045D6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000045DA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000045DC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
000045E0 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
000045E4 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
000045E8 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
000045EC <common.ab3@301> XINCLUDE "/Shared/common.ab3"
000045F0 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
000045F8 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004600 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004604 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004608 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000460C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000460E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000046CE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004716 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000471A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000471C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004722 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004726 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000472A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000472D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004730 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004732 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004734 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004736 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004738 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000473A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000473E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004740 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004742 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004744 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004748 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000474A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000474C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004750 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004752 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004754 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004756 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004758 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000475A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000475E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004760 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004762 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004764 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004766 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000476A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000476C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000476E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004770 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004772 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004774 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000477A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000477C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000477E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
00004780 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
00004782 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
00004784 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
00004786 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
0000478A <common.ab3@393> XINCLUDE "/Shared/common.ab3"
0000478C <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000047BA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000047C4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000047C8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000047CA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000047CC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000047D0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000047D4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000047DD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
000047E0 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000480D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004859 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000048A9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000048B5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004905 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004A01 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004A03 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004AC3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004B03 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004B05 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004B06 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004B0A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004B0E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004B12 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004B16 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004B1A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004B1E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004B22 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004B26 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004B2A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004B2E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004B32 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004B36 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004B3A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004B3E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004B42 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004B46 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004B4A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004B4E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004B58 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004B5C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004B60 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004B62 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004B64 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004B82 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004B86 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004B88 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004B8C <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004BC0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004BC4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004BD2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004BE4 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004BE6 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004BFA <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004C10 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004C3C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004C54 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004C76 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004C7A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004C7E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004C96 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004C9E <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004CAA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004CAE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004CB6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004CBA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004CC6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004CC8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004CCC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004CCE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004CD2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004CDA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004CDE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004CE6 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004CEA <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004CEC <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004D00 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004D14 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004D28 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004D2A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004D2E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004D32 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004D47 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004D48 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004D49 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004D4C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004D50 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004D54 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004D58 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004D60 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004D64 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004D65 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004D68 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004D6C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004D70 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004D78 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004D7C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004D80 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004D84 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004D88 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004D8C <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004D90 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004D94 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004D98 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004D9C <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004DA0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004DA2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004DA3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004DA7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004DAB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004DAF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004DB3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004DB4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004DC0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004DC9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004DD2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004DDE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004DEA <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004DF6 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004E02 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004E0E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004E12 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004E16 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004E1A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004E1E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004E22 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004E26 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004E26 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004E26 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E26 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E44 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E4C <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E7A <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EAA <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EBA <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EC4 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004ECA <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EEC <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F0A <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F1C <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F44 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F4A <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F7C <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F8E <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9C <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD0 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDE <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE8 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FFA <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005034 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005044 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000504A <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000505A <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005078 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005088 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AC <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B8 <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C6 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000050D4 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000050E2 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005126 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005134 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005144 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000514C <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005150 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005184 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000519E <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000051BE <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E8 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000521A <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005232 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525A <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005268 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005276 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A0 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AA <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B0 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F6 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005314 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005328 <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005340 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005368 <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00005380 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000538E <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000539C <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000053AA <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BE <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005412 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543C <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005480 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
000054E4 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000553C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005582 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00005588 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00005590 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000055DC <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005616 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005626 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000562C <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000563C <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005642 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005648 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005660 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569E <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000056BC <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EE <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005702 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005716 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572E <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005756 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005760 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576E <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005786 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000578C <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00005794 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DA <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
000057E4 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000057F2 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000057FC <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005828 <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583C <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005850 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00005886 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FC <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005916 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005928 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005932 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
0000594E <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005978 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005996 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
000059BA <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A02 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A64 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A72 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A86 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD8 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B28 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B2E <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B62 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA4 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB4 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BBE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BCE <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD4 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE0 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C14 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C44 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C7A <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C8E <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CA6 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCE <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CFE <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1A <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D28 <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D3C <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D90 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DBA <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DFE <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E24 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E66 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E84 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E8A <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDE <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F06 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2A <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F80 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD2 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006028 <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006038 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608A <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000060B2 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000060D8 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
000060FA <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006122 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006150 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006178 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006180 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000061A4 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D8 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F4 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061FE <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006232 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000624E <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625C <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000626A <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006288 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C6 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006322 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639A <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
000063F6 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000063FC <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006406 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000640C <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000643A <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006440 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006460 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646A <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000647C <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
0000648C <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00006496 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000064B0 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000064CA <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D2 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D8 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000064E2 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000064EA <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006568 <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658E <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D8 <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006628 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000663E <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006652 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000665C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006680 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000066B8 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BE <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000066CA <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DE <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E8 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006710 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006738 <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000674A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006776 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000067AA <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D6 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006822 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006832 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006838 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006844 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006872 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006874 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687A <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00006884 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068AE <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B8 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000068BE <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000068E8 <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F0 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006910 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000691A <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006990 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E4 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A02 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A26 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A40 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A74 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A8E <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE2 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFC <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B0C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B16 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B24 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B96 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BA0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BBC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BCA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C00 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C22 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C40 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C6E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C74 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C84 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C88 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9E <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CF2 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D08 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D18 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D34 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D50 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF8 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E14 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E30 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E68 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E84 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EBC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ED8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF4 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F10 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F2C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F48 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F64 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F80 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9C <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF0 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007028 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007044 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007060 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007098 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EC <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007108 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007124 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007140 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007178 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007194 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E8 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007204 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007220 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007258 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007274 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007290 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E4 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007300 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007338 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007354 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007370 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738C <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E0 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FC <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007418 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007434 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007450 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00007488 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F8 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007514 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007530 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007568 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00007584 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F4 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007610 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007648 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007664 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007680 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769C <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F0 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007728 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007744 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007760 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007798 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EC <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007808 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007824 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007840 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007878 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007894 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E8 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007904 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007920 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007958 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007974 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007990 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E4 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A00 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A38 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A54 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A70 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A8C <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE0 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFC <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B18 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B2A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B34 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B68 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B84 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE2 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BEC <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF6 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C48 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C64 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C72 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CCE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D40 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D4E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D54 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D5C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D62 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D7E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEA <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DFE <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E28 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E56 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E92 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E98 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE6 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F04 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F12 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F20 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F34 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F3E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F4C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F66 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F74 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F7A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FFA <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008008 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008018 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008062 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008076 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F0 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008112 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008142 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008170 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000081CC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F2 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008214 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000825C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000827E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00008284 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00008292 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000082AE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E0 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F0 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008306 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000831E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008344 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008360 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008372 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000083DC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F2 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F8 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008420 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E0 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008516 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008526 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008534 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000853A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000854A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008574 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000857A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000085B6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E4 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000085F2 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008628 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008660 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008670 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
0000868E <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869C <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008700 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008720 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000872E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008734 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000873A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008756 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008776 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008784 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878A <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879A <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000087B8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008828 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008842 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008866 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000887C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008894 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008904 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008940 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008950 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008964 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008974 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899E <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E0 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F0 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A0E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A1C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A52 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A76 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A8A <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9A <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AB8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AEA <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B14 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B24 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B4C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B54 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B8A <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BA6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE2 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BFE <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C26 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C62 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C90 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CF2 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D26 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D30 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D72 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D7C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DAA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DCA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DE2 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E40 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E6C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E7E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EA6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EE6 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF0 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF6 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F00 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00008F12 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00008F36 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00008F3E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
00008F6C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
00008F9A <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000900A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009018 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009068 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009068 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009068 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009068 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000908C <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
000090B4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000090D8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009106 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
00009324 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
00009352 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
0000937E <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
000093BA <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000093E6 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009412 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000943E <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000946A <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
00009496 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000094C2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000094EE <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000951A <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
000095A4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
0000962E <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
000096CC <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009716 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009756 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
0000975C <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
000097A6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
000097E6 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009810 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009816 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009840 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000986A <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
00009894 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
0000989E <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000098BC <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000098DE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
0000990C <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
0000993A <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009968 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
000099AE <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
000099F4 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009A3A <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009A72 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009B70 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009B8E <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009B98 <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009BBE <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009BD0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009BFE <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009C26 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009C38 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009C8E <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009CC4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009CD4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009CDA <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009CEC <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009CF6 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009D30 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009D36 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009D8E <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009DAC <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
00009DB2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
00009DC2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
00009DD2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009DE2 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009DF2 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009E02 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
00009E0C <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
00009E20 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009E36 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
00009E5E <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
00009E68 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009E7A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009EB4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009EBE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009EE8 <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
00009F00 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
00009F52 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
00009F80 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A012 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A058 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A0EA <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A104 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A104 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A11A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A130 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A146 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A15C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A168 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A174 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A180 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A18C <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A1B4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A1DC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A204 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A228 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A24C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A266 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A276 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A278 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A27A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A27C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A27E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A280 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A284 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A288 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A28C <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A28E <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A290 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A292 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A294 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A296 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A298 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A29A <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A2A4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A2AA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A2C4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A2E2 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A2E8 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A302 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A31E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A344 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A364 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A36E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A3D6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A3DC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A416 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A434 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A43A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A458 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A45E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A480 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A4A0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A4D8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A4F4 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A4FA <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A500 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A506 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A50C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A528 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A574 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A57A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A5B4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A5C0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A5DC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A5E2 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A61C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A626 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A62C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A64A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A678 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A67E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A694 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A69C <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A6F8 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A706 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A70C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A73E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A748 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A74E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A768 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A77A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A7D8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A812 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A84C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A86A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A888 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A89E <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A8BA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A8D4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000A952 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000A964 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000A97A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000A9A4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000A9AE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000A9BE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000A9C2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000A9F0 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AA0A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AA1C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AA3C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AA52 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000AA8A <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000AAB4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AADE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AAF6 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AB0C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AB54 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AB74 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AB7C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ABBA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ABC6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ABD0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000ABE2 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000ABE8 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000ABF6 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AC1E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AC32 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AC5A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AC6E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000AC96 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ACAA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ACD2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ACD4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000ACF8 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AD30 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000ADBA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000ADE2 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AE12 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AE4A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AEA2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000AEFA <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000AF7A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000AFAE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000AFE2 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000AFE8 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000AFF6 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B02A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B052 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B10A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B18A <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B1BE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B1DE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B1E4 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B1EA <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B2BA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B2CE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B386 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B406 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B4F6 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B500 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B534 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B554 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B55A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B560 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B630 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B644 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B678 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B6A0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B758 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B7D8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B80C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B82C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B832 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B838 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000B908 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000B91C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000B9D4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BA54 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BA88 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BAA8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BAAE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BAB4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BB84 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BB8A <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BBC4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BBC6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BBCC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BC64 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BC76 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BC8C <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BCF6 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BD60 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BD7A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BD96 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BDB4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BDCE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BDD8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BDF4 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BE16 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BE1C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BE42 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BE5E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BE70 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BECE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000BF06 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000BF0C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000BF54 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000BF6E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000BF7C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000BF82 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000BF88 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000BF9A <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C086 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C08C <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C0D2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C0DE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C144 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C18A <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C1D2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C23A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C240 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C27A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C280 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C2E2 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C2EC <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C300 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C31A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C320 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C346 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C362 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C3C0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C3C4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C3E6 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C3EC <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C408 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C428 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C466 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C4B4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C4EA <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C4F0 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C4F6 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C526 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C52C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C532 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C544 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C5A2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C5DA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C5E0 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C628 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C642 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C650 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C656 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C65C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C66E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C674 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C67A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C6D8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C720 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C72A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C730 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C74A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C750 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C798 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C7D6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C7E0 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C7E6 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C80C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C812 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C838 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C898 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C8B2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C8BC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C8D6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000C8E0 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000C8F8 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000C928 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000C944 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000C952 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000C958 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000C992 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000C99C <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000C9A2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000C9C0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000C9C6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000C9D8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000C9E6 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CA04 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CA3A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CA4C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CA96 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CB80 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CB9E <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CBC4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CBE0 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CC0C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CC16 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CC44 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CC5E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CC7A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CC80 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CCBA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CCC0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CCC6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CCCC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CD6C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CD72 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CE14 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CE1A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CE54 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CE5E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CE64 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CE7E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CE9C <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CEA2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CEBC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CEDC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000CF90 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000CF96 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000CF9C <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000CFC6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000CFD2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000CFD8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000CFF2 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000CFFA <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D002 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D018 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D030 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D042 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D04E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D054 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D05C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D094 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D0A6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D0CA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D0DC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D0E8 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D0EE <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D0FE <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D12E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D17A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D180 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D1AA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D1C2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D1F0 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D204 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D21A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D23A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D250 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D25A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D274 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D296 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D2AE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D2D0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D2D6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D308 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D31C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D334 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D34C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D36C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D39C <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D3CC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D3DE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D3E6 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D410 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D41A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D434 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D44E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D48C <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D4D6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D4F0 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D502 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D538 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D54A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D552 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D57A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D580 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D5A8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D5B8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D5CC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D5E2 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D5F2 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D5F6 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D60C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D636 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D63E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D63E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D6DC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D6E8 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D6EE <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D728 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D75A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D768 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D798 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DB08 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DB16 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DB1C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DDAE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DDC8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DE02 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DE54 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DE62 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DEB8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DEBE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000DF38 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000DFAC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000DFC6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000DFC6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000DFC6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFC6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFC6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFC6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFEE <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E008 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E012 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E024 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E048 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E056 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E062 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E066 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E084 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E09E <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E0BE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E0C8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E0D6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E0E2 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E0F0 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E0FC <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E108 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E11A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E12A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E134 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E13A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E154 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E15E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E168 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E178 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E182 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E194 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E1AA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E1B4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E1BA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E1D4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E1DA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E1E4 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E21A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E224 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E228 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E256 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E256 <prefixtree.include.ab3@132> XINCLUDE "translation.include.ab3"
0000E270 <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E27A <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E2A2 <prefixtree.include.ab3@200> XINCLUDE "translation.include.ab3"
0000E2C4 <prefixtree.include.ab3@201> XINCLUDE "translation.include.ab3"
0000E2E0 <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E2F0 <prefixtree.include.ab3@203> XINCLUDE "translation.include.ab3"
0000E2F4 <prefixtree.include.ab3@206> XINCLUDE "translation.include.ab3"
0000E30E <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E32E <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E338 <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E352 <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E360 <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E36E <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E37C <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E38A <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E396 <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E3A4 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E3B2 <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E3C0 <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E3CE <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E3E8 <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E3F6 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E406 <prefixtree.include.ab3@274> XINCLUDE "translation.include.ab3"
0000E416 <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E426 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E434 <prefixtree.include.ab3@277> XINCLUDE "translation.include.ab3"
0000E43E <prefixtree.include.ab3@279> XINCLUDE "translation.include.ab3"
0000E444 <prefixtree.include.ab3@280> XINCLUDE "translation.include.ab3"
0000E462 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E468 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E472 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E492 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E4C0 <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E4DE <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E4E8 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E4FA <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E53C <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E548 <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E55A <prefixtree.include.ab3@311> XINCLUDE "translation.include.ab3"
0000E560 <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E59E <prefixtree.include.ab3@314> XINCLUDE "translation.include.ab3"
0000E5A4 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E5AA <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E5B4 <prefixtree.include.ab3@320> XINCLUDE "translation.include.ab3"
0000E5BA <prefixtree.include.ab3@321> XINCLUDE "translation.include.ab3"
0000E5EC <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E606 <prefixtree.include.ab3@342> XINCLUDE "translation.include.ab3"
0000E61E <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E632 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E682 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E6A2 <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E6B6 <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E6D0 <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E6D8 <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E6E0 <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E6E8 <prefixtree.include.ab3@353> XINCLUDE "translation.include.ab3"
0000E6F0 <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E6F6 <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E704 <prefixtree.include.ab3@356> XINCLUDE "translation.include.ab3"
0000E726 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E752 <prefixtree.include.ab3@359> XINCLUDE "translation.include.ab3"
0000E764 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E76A <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000E792 <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000E7B6 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E7DE <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E812 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E822 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E82C <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E83A <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000E84E <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E854 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E874 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E87A <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E882 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E8BC <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E8E2 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E8FA <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E92E <prefixtree.include.ab3@381> XINCLUDE "translation.include.ab3"
0000E936 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E944 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000E94A <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E962 <prefixtree.include.ab3@387> XINCLUDE "translation.include.ab3"
0000E968 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E96E <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E988 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E98E <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E994 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E9A8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E9B6 <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000E9F0 <prefixtree.include.ab3@401> XINCLUDE "translation.include.ab3"
0000EA16 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA2E <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA3A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA46 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000EA52 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA5E <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA74 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA7C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EA96 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EAD4 <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000EADA <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EB40 <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000EB80 <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000EBD6 <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000EC48 <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000EC54 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000EC62 <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000ECA8 <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000ECF2 <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000ED2A <prefixtree.include.ab3@473> XINCLUDE "translation.include.ab3"
0000ED7E <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000ED84 <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000ED8A <prefixtree.include.ab3@476> XINCLUDE "translation.include.ab3"
0000ED98 <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000EDA0 <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000EDDA <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000EE00 <prefixtree.include.ab3@482> XINCLUDE "translation.include.ab3"
0000EE18 <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000EE4E <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000EE64 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EE72 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EE8A <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000EEC2 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000EEE8 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000EF30 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000EF36 <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000EF50 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EF5C <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EF62 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EF8E <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EFA2 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EFB0 <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000EFB8 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EFF2 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F018 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F030 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F06A <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F094 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F0AC <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000F0DC <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F108 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F124 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F132 <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F140 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F17E <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F1BA <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F226 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F254 <prefixtree.include.ab3@522> XINCLUDE "translation.include.ab3"
0000F282 <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F2CA <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F2E4 <prefixtree.include.ab3@527> XINCLUDE "translation.include.ab3"
0000F32C <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F34A <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F368 <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F382 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F38E <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F394 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F3C0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F3D8 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F3DE <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F3F2 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F400 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F40E <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F41C <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F424 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F450 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F478 <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F4A0 <prefixtree.include.ab3@550> XINCLUDE "translation.include.ab3"
0000F50C <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F51C <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F548 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F59E <prefixtree.include.ab3@555> XINCLUDE "translation.include.ab3"
0000F5AC <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F5BA <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F5C0 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F614 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F734 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000F784 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F7DA <prefixtree.include.ab3@564> XINCLUDE "translation.include.ab3"
0000F846 <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000F84E <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F888 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F8AE <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F8C6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F900 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F92A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F942 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F966 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000F9BA <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F9C2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F9C8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000FA2A <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FA56 <prefixtree.include.ab3@583> XINCLUDE "translation.include.ab3"
0000FA72 <prefixtree.include.ab3@586> XINCLUDE "translation.include.ab3"
0000FA80 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FA8E <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FA9C <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FAAA <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FAEE <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FB5A <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FB88 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FB9C <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FBCE <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FC18 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FC28 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FC5C <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FC7E <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FC8E <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FC96 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FCDA <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FD46 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FD74 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0000FD98 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FDDC <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
0000FE48 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FE76 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FEA4 <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0000FEAC <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FEDA <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FF4C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FF52 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FF80 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FFF2 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
00010010 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
00010034 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0001004C <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
00010052 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
00010058 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0001005A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
00010064 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
00010090 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
000100B2 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
000100BA <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
000100C0 <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
000100CE <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
00010108 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
0001012E <prefixtree.include.ab3@660> XINCLUDE "translation.include.ab3"
00010146 <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
00010180 <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
000101AA <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
000101C2 <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
000101DA <prefixtree.include.ab3@666> XINCLUDE "translation.include.ab3"
00010212 <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
0001021A <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
00010254 <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
00010266 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
0001028C <prefixtree.include.ab3@674> XINCLUDE "translation.include.ab3"
000102A2 <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
000102C8 <prefixtree.include.ab3@676> XINCLUDE "translation.include.ab3"
000102DC <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000102F4 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010306 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010310 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010324 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
0001033E <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
0001035C <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
0001036E <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
0001038C <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
000103C8 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
000103E4 <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
00010404 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001040E <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@711> XINCLUDE "translation.include.ab3"
0001041E <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
0001042A <prefixtree.include.ab3@714> XINCLUDE "translation.include.ab3"
00010430 <prefixtree.include.ab3@716> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010486 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
000104C6 <prefixtree.include.ab3@737> XINCLUDE "translation.include.ab3"
000104DE <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010524 <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
0001054E <prefixtree.include.ab3@742> XINCLUDE "translation.include.ab3"
0001057C <prefixtree.include.ab3@743> XINCLUDE "translation.include.ab3"
00010596 <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
0001059E <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
000105B6 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
000105C0 <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
000105D2 <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
0001060A <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
00010618 <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
00010624 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
00010640 <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
00010662 <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
00010684 <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
000106A6 <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
000106C8 <prefixtree.include.ab3@954> XINCLUDE "translation.include.ab3"
000106E4 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
00010702 <prefixtree.include.ab3@956> XINCLUDE "translation.include.ab3"
00010716 <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
0001071C <prefixtree.include.ab3@959> XINCLUDE "translation.include.ab3"
0001071E <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
00010724 <prefixtree.include.ab3@962> XINCLUDE "translation.include.ab3"
0001072E <prefixtree.include.ab3@964> XINCLUDE "translation.include.ab3"
00010734 <prefixtree.include.ab3@965> XINCLUDE "translation.include.ab3"
00010752 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010758 <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
0001077C <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
0001079A <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
000107C8 <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
000107F6 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010824 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010852 <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
00010886 <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
00010896 <prefixtree.include.ab3@992> XINCLUDE "translation.include.ab3"
000108A0 <prefixtree.include.ab3@994> XINCLUDE "translation.include.ab3"
000108A6 <prefixtree.include.ab3@995> XINCLUDE "translation.include.ab3"
000108A6 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
000108F0 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010910 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
0001091A <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
0001092E <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010974 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
000109BA <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010A00 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010A0A <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010A26 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010A50 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010ACE <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010B4C <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010BCA <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010C48 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010CC6 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010D44 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010DC2 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010E40 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010EBE <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00010F3C <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
00010FC0 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00010FF0 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
0001104C <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011078 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011142 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011150 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
0001118E <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011212 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
0001123C <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001125A <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011274 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001127E <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
0001128A <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
0001129A <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000112AA <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000112BA <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000112CA <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000112CE <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
0001130C <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011364 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000113C0 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001144A <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000114C8 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000114E2 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011510 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
0001154C <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001161A <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
000116E8 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011734 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000117B2 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011830 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
0001188E <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011924 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
0001195C <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
000119BA <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011A42 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011A4A <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011AB4 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011B20 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011B5E <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011BE6 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011C12 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011C6E <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011D36 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011D9A <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011DA0 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011DD4 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011EA2 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00011F70 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
00011F9A <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
00011FB8 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00011FE6 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012022 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
00012092 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
0001209A <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
000120EC <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012114 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
0001212C <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000121E0 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
000121EE <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012244 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000122A2 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000122A8 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
0001232C <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000123B0 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012434 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000124B2 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012530 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000125AE <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
0001262C <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000126AA <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012728 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000127A6 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000127D0 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
000127EE <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
0001281C <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012860 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012866 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
00012880 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
0001289C <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000128D0 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
000128F4 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
0001291C <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012988 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
000129E6 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012A44 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012A90 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012AEA <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012AF0 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012AF6 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012B00 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012B0A <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012B24 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012B52 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012B58 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012B9C <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012BB6 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012BC6 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012BD0 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012BDC <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012BE6 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012C0A <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012C52 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012C9A <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012CE2 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012CF8 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012D0C <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012D16 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012D20 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012D3A <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012D64 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012DA8 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012DC2 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012E20 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012E3A <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012E52 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012E5C <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012E78 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012E86 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012E92 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012EDE <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00012F30 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
00012F82 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
00012F96 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
00012FA6 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
00012FAC <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
00012FAE <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
00012FB4 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
00012FBE <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
00012FC8 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00012FE2 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
0001300C <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013022 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
0001302C <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000130A4 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000130E0 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
000130F0 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013110 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013130 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013150 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
00013186 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000131AE <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
000131E6 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001324A <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001326A <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
000132E6 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001331E <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
00013394 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000133B4 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013430 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013468 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000134DE <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
000134FE <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001357A <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000135A6 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000135AE <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
000135F4 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013614 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001361E <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013636 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013646 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001367E <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000136B0 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000136C2 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013744 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001374E <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
00013780 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000137B2 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000137DE <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001380A <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
0001382C <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013836 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013850 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013850 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013866 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
00013882 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
00013884 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000138B2 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000138B2 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000138B2 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000138CC <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000138D6 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
000138F8 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013910 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
0001392A <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
0001395C <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013966 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
0001396C <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
0001397E <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
000139F2 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
000139F8 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013A32 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013A3C <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013A42 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013A58 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013A62 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013A7A <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013A7C <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013AAA <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013AC4 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013ADA <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013B0E <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013B12 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013B2C <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013B42 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013B76 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013B7A <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013B94 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013BAA <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013BDE <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013BE2 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013BFC <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013C12 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013C46 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013C4A <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013C64 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013C7A <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013CAE <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013CB2 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013CB2 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013CB2 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013CC8 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013CDE <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013CEC <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013CFA <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013D04 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013D16 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013D28 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013D2E <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013D68 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013D6C <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013D82 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013D98 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013DA4 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013DB0 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013DB8 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013DC0 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013DC4 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013DEE <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013E1A <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013E2C <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013E44 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013E5A <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013E60 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013E96 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013ECE <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013F06 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013F3E <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013F76 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013FAE <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013FE6 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001401E <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014056 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
0001408E <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000140C6 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
000140FE <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014136 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014140 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001414A <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00014154 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001417E <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
00014188 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
0001418C <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000141C0 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000141C6 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014200 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00014206 <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
0001421C <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014226 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001422C <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014242 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
00014248 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
00014286 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
0001428A <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
00014294 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
00014296 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000142CA <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000142DA <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000142E4 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000142EA <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00014300 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001433E <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
00014342 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
0001434A <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
00014388 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
0001438A <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
0001438E <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000143CC <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000143D0 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
0001440E <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
00014412 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
0001443C <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014446 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001445A <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
00014486 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
0001449A <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
00014500 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
00014506 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00014530 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
00014534 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
00014536 <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00014554 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000145BC <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000145C0 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
00014634 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001466E <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014678 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
00014692 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000146B0 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
000146B8 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
000146BE <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
000146E6 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
000146FE <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014724 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001474E <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001475C <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014762 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014776 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
0001479C <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000147B0 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
000147E6 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
000147F4 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
00014824 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014832 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014838 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014846 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001484C <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014852 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014860 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014862 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014868 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001487E <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014888 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001488E <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000148B8 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
000148F6 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
000148FA <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014938 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
0001493C <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
0001497A <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0001497E <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014986 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
0001498E <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
000149D2 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000149E4 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
00014A26 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014A4A <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014A54 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014A6E <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014A82 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014B7A <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014B82 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014BBA <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014BC0 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014BD0 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014BF8 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014C20 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014C28 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014C2E <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014C36 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014C3E <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014C66 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014C6E <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014C76 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014C7C <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014C82 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014C88 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014C8E <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014C94 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014C9A <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014CA0 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014CA6 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014CAE <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014CB6 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014CDE <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014CE4 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014CEA <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014CF2 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014D12 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014D22 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014D32 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014D42 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014D52 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014D62 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014D72 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014D82 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014D92 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014DA2 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014DB2 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014DC2 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014DD2 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014DE2 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014DF2 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014E02 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014E12 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014E24 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014E36 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014E48 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014E5A <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014E6C <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014E7E <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014E9C <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014EA2 <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00014EA8 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014ED2 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014EE4 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00014F18 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014F30 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014F7C <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014F8E <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014FE4 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00015056 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
0001505C <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00015090 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
000150B8 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000150E0 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
0001511A <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00015132 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000151B6 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
000151D0 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
0001521E <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
0001522E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00015236 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0001524A <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
00015290 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
00015296 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000152E0 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0001534A <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000153B0 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000153E4 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
00015410 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001545E <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00015482 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00015488 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
00015496 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
000154F4 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00015552 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
0001557C <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00015586 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001558E <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000155CC <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
00015618 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001562A <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00015680 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000156F8 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000156FE <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00015732 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001575A <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
00015790 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
0001579E <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000157AC <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00015820 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015826 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015870 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000158BA <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000158EA <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
0001591A <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015944 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
00015996 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000159EC <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015A3C <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00015AA2 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
00015B0E <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015B3A <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00015B6A <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015BE6 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015C16 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015C46 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015C76 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015CA6 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015CD6 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015D06 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015D36 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015D66 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015D96 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015DC6 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015E42 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015E74 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015EA6 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015ED6 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015EDC <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015F50 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015FBC <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015FCE <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00015FFC <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00016024 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00016038 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00016062 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
000160A6 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
000160B6 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
000160C6 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
000160CC <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000160DC <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
000160EA <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
000160F4 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
0001612C <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00016164 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
0001619C <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
000161AC <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00016214 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
0001624C <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001625C <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001626C <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000162D4 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001633C <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000163A4 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001640C <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016474 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000164DC <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016544 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
000165AC <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000165BC <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
000165F4 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0001662E <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
00016668 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000166A0 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
000166BC <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
000166F4 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001671A <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00016722 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
0001672A <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00016732 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
0001673A <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
0001674E <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0001677C <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00016796 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
000167A4 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00016810 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016836 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00016852 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001685C <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00016866 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00016872 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00016880 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
0001688C <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000168C8 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000168E2 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
000168F0 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00016910 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
0001691E <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
0001692C <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00016932 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00016942 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00016946 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
0001697A <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
000169AE <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000169B2 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000169E6 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
000169EA <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00016A1E <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00016A24 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00016A5A <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016A90 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00016AC6 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00016AFE <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016B36 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016BD6 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016C16 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016C4C <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016C82 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016CBA <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016CD8 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016CDC <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016CE2 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016CE8 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00016CEC <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016D16 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016D2A <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00016D68 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016D9C <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00016DD2 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016E2A <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00016E58 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016E5C <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016E92 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016EC0 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00016EEE <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00016EF2 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016F28 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00016F56 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00016F5A <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
00016FBE <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00016FC4 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
00016FFE <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00017008 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00017012 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
0001702C <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00017056 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
0001705C <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
0001707C <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00017086 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
0001708A <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
0001708C <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
000170AA <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
000170AC <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000170B2 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
000170B8 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
000170E2 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
000170E4 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00017112 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00017116 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00017144 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00017148 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001716E <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001717E <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00017184 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
0001718A <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
000171C4 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
000171CE <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
000171E8 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00017206 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00017230 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
0001725E <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
000172EE <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000172F8 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0001730C <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017348 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00017384 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000173C0 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
000173FC <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00017438 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0001743E <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00017478 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
0001748A <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
0001749A <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000174A6 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
000174C0 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000174C2 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
000174E0 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
000174E6 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00017510 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
00017512 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
0001751C <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00017522 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
00017534 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
0001756E <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
00017588 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
0001759C <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
0001760C <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
00017676 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
0001768A <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000176F4 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001772A <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00017730 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001779A <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
000177AE <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
000177E4 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
000177EA <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00017820 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
00017834 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
0001789E <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000178A4 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
0001790E <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00017922 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00017958 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
0001795E <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00017994 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
000179AE <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
000179C2 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00017A2C <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00017A32 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00017A9C <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00017AB0 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017B1A <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00017B20 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017B8A <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017B9E <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00017C08 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00017C0E <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017C78 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017C8C <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017CF6 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017CFC <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00017D66 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017D78 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017D88 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017D92 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017DFC <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00017E02 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00017E6C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017E76 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017EE0 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00017F16 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
00017F1C <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00017F86 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
00017FBC <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
00017FC4 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00017FF2 <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00017FF6 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
0001801E <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00018024 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
0001802A <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00018030 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00018036 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
0001803C <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00018046 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00018050 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
0001807E <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
000180AA <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
000180B2 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
000180E6 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
000180F8 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
0001815E <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
000181C4 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
000181CA <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
000181D2 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
000181D4 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
000181F2 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00018230 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
0001826E <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00018274 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
0001827A <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00018280 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
0001828A <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00018290 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00018296 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
0001829C <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000182A2 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
000182A6 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
000182B0 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
000182B4 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
000182DE <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
000182E0 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
000182E6 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000182EA <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000182F0 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
000182F4 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00018304 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
0001835E <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00018370 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
000183DA <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
000183E0 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001842A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
0001843C <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
00018468 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
0001850E <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
0001852C <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00018532 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
0001855C <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00018566 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00018598 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000185B2 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000185C6 <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000185D2 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
000185EC <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
000185F6 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00018610 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
0001863A <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
0001865E <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
0001869C <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
000186A0 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
000186DE <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
000186E2 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00018720 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
0001875E <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00018760 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00018794 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
0001879A <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
000187DE <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
000187F0 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000187F8 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
000187FE <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00018808 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018816 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
0001881C <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018844 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
0001885E <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00018868 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
0001886E <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
0001888C <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018896 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
0001889C <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
000188A2 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
000188AC <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
000188BA <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
000188C0 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
000188D0 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
000188FC <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018912 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
0001891C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018922 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
0001897A <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
000189E8 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00018A00 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00018A06 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00018A3E <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00018A6C <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00018A96 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00018AA0 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00018AC8 <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
00018AF2 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00018B94 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00018BA2 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00018BF2 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00018C02 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00018CCA <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00018CFE <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00018D32 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00018D66 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00018D9A <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
00018DCE <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
00018E02 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00018E36 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00018E6A <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00018E6C <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00018EAA <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00018EAE <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00018EEC <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
00018F2A <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
00018F2C <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
00018F32 <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00018F36 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00018F38 <CLIModeSupport.ab3@866> XINCLUDE "CLIModeSupport.ab3"
00018F76 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
00018FB4 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00018FB6 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00018FB8 <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
00018FBA <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
00018FC0 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
00018FC4 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
00018FD4 <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
00018FEC <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00019004 <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
0001901C <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
00019046 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
00019070 <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
0001909E <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
000190A2 <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
000190CA <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
000190CC <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
0001910A <CLIModeSupport.ab3@887> XINCLUDE "CLIModeSupport.ab3"
0001910E <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
0001914C <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
00019150 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
0001918E <CLIModeSupport.ab3@891> XINCLUDE "CLIModeSupport.ab3"
00019192 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
000191D0 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
000191D4 <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
000191FA <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00019220 <CLIModeSupport.ab3@898> XINCLUDE "CLIModeSupport.ab3"
00019246 <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
0001926C <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
00019292 <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
000192E8 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
0001933E <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
0001938C <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
000193E2 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00019408 <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
0001942E <CLIModeSupport.ab3@907> XINCLUDE "CLIModeSupport.ab3"
00019454 <CLIModeSupport.ab3@908> XINCLUDE "CLIModeSupport.ab3"
000194AA <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
000194F8 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00019546 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
00019600 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00019656 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
0001967C <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
000196A2 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
000196C8 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
0001971E <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00019774 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
000197C2 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
00019810 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
0001985E <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000198AC <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000198FA <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00019948 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00019996 <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
000199BC <CLIModeSupport.ab3@926> XINCLUDE "CLIModeSupport.ab3"
000199E2 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00019A08 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00019A56 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00019AA4 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00019AFA <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00019B48 <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00019B96 <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
00019BE4 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00019C0A <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00019C30 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00019C56 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00019C8E <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00019CB6 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019CCA <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00019D3E <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00019D84 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019E32 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00019E9E <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00019EAE <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019ED4 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
00019EDE <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
00019F08 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
00019F0E <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
00019F1E <CLIModeSupport.ab3@953> XINCLUDE "CLIModeSupport.ab3"
00019FBE <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
00019FFE <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
0001A004 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
0001A066 <CLIModeSupport.ab3@959> XINCLUDE "CLIModeSupport.ab3"
0001A070 <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
0001A07A <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
0001A094 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
0001A0B6 <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
0001A0D8 <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
0001A132 <CLIModeSupport.ab3@1042> XINCLUDE "CLIModeSupport.ab3"
0001A154 <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
0001A176 <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
0001A1D0 <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
0001A212 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
0001A218 <CLIModeSupport.ab3@1048> XINCLUDE "CLIModeSupport.ab3"
0001A226 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
0001A22C <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
0001A240 <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
0001A24A <CLIModeSupport.ab3@1053> XINCLUDE "CLIModeSupport.ab3"
0001A2C4 <CLIModeSupport.ab3@1054> XINCLUDE "CLIModeSupport.ab3"
0001A2CE <CLIModeSupport.ab3@1055> XINCLUDE "CLIModeSupport.ab3"
0001A2D4 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
0001A2E8 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
0001A2F2 <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
0001A372 <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
0001A37C <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
0001A382 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
0001A396 <CLIModeSupport.ab3@1066> XINCLUDE "CLIModeSupport.ab3"
0001A3A0 <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
0001A3E8 <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
0001A3F6 <CLIModeSupport.ab3@1069> XINCLUDE "CLIModeSupport.ab3"
0001A41C <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
0001A426 <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
0001A490 <CLIModeSupport.ab3@1072> XINCLUDE "CLIModeSupport.ab3"
0001A562 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
0001A56C <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
0001A572 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001A57C <CLIModeSupport.ab3@1077> XINCLUDE "CLIModeSupport.ab3"
0001A582 <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
0001A596 <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
0001A5A0 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001A5E8 <CLIModeSupport.ab3@1083> XINCLUDE "CLIModeSupport.ab3"
0001A5F2 <CLIModeSupport.ab3@1084> XINCLUDE "CLIModeSupport.ab3"
0001A5F8 <CLIModeSupport.ab3@1085> XINCLUDE "CLIModeSupport.ab3"
0001A60C <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
0001A632 <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
0001A646 <CLIModeSupport.ab3@1092> XINCLUDE "CLIModeSupport.ab3"
0001A66C <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
0001A680 <CLIModeSupport.ab3@1096> XINCLUDE "CLIModeSupport.ab3"
0001A6A6 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
0001A6BA <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
0001A6C4 <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
0001A6F2 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
0001A742 <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
0001A762 <CLIModeSupport.ab3@1104> XINCLUDE "CLIModeSupport.ab3"
0001A77A <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
0001A85E <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
0001A868 <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
0001A86E <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
0001A870 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
0001A884 <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
0001A8B6 <CLIModeSupport.ab3@1114> XINCLUDE "CLIModeSupport.ab3"
0001A8BC <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
0001A900 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
0001A912 <CLIModeSupport.ab3@1117> XINCLUDE "CLIModeSupport.ab3"
0001A924 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
0001A92E <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
0001A934 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
0001A93E <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
0001A958 <CLIModeSupport.ab3@1123> XINCLUDE "CLIModeSupport.ab3"
0001A958 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001A9D8 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001AA10 <AmiBlitz3.ab3@99> If dynassign <> ""
0001AA26 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001AA30 <AmiBlitz3.ab3@101>     If *AssignSema
0001AA40 <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001AA46 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001AA66 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001AA70 <AmiBlitz3.ab3@105>       If *AssignSema
0001AA80 <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001AAB4 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001AAC6 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001AB02 <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001AB0E <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001AB1A <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001AB2A <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001AB3A <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001AB86 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001ABE6 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001AC7A <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001ACB2 <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001AD34 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001ADB6 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001AE38 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001AEBA <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001AF3C <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001AFB0 <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B024 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B098 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B0C6 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B0EA <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B118 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B146 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B210 <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B248 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B286 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B296 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B29C <AmiBlitz3.ab3@152> Else
0001B2AC <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B2D2 <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B2DE <AmiBlitz3.ab3@160> dbg_fid.l = -1 ; no debug file id yet!
0001B2F0 <AmiBlitz3.ab3@163> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B2FA <AmiBlitz3.ab3@165> If CLIMode
0001B300 <AmiBlitz3.ab3@168>   err.l      = False                                       ; indicate that an error has occured
0001B306 <AmiBlitz3.ab3@169>   showhelp.l = False                                       ; show the CLI tool's help
0001B35E <AmiBlitz3.ab3@172>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001B386 <AmiBlitz3.ab3@173>   cli_sourcefile.s    = ""
0001B3AE <AmiBlitz3.ab3@174>   cli_exefile.s       = ""
0001B3D6 <AmiBlitz3.ab3@175>   cli_savefile.s      = ""
0001B3FE <AmiBlitz3.ab3@176>   cli_dumpfile.s      = ""
0001B426 <AmiBlitz3.ab3@177>   cli_includepath.s   = ""
0001B44E <AmiBlitz3.ab3@178>   cli_blitzlibpath.s  = ""
0001B454 <AmiBlitz3.ab3@179>   cli_debuginfo.l     = False
0001B45A <AmiBlitz3.ab3@180>   cli_run.l           = False
0001B462 <AmiBlitz3.ab3@181>   cli_dumpflags.l     = $FFFFFFFF
0001B48A <AmiBlitz3.ab3@182>   cli_info.s          = ""
0001B490 <AmiBlitz3.ab3@183>   cli_release.l       = False
0001B49A <AmiBlitz3.ab3@184>   cli_numargs.l       = dos_GetNumArgs{}
0001B4A0 <AmiBlitz3.ab3@185>   cli_gui.l           = False
0001B4A8 <AmiBlitz3.ab3@186>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001B4B0 <AmiBlitz3.ab3@187>   cli_verbose.l       = 1
0001B4B8 <AmiBlitz3.ab3@188>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001B4C0 <AmiBlitz3.ab3@189>   cli_comstrbufsize.l = 0
0001B4C8 <AmiBlitz3.ab3@190>   cli_exestacksize.l  = 0
0001B4D0 <AmiBlitz3.ab3@191>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001B4E8 <AmiBlitz3.ab3@192>   If cli_numargs=0 Then showhelp=True
0001B518 <AmiBlitz3.ab3@196>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001B564 <AmiBlitz3.ab3@197>     larg.s = LCase$(arg)                                   ; lower case the option string
0001B62C <AmiBlitz3.ab3@198>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001B662 <AmiBlitz3.ab3@199>     Select larg
0001B6AE <AmiBlitz3.ab3@200>       Case "s" : larg="source"
0001B700 <AmiBlitz3.ab3@201>       Case "e" : larg="exe"
0001B752 <AmiBlitz3.ab3@202>       Case "d" : larg="debug"
0001B7A4 <AmiBlitz3.ab3@203>       Case "r" : larg="release"
0001B7F6 <AmiBlitz3.ab3@204>       Case "h" : larg="help"
0001B848 <AmiBlitz3.ab3@205>       Case "v" : larg="verbose"
0001B856 <AmiBlitz3.ab3@206>     End Select
0001B88C <AmiBlitz3.ab3@208>     Select larg
0001B8E0 <AmiBlitz3.ab3@209>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001B93A <AmiBlitz3.ab3@210>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001B994 <AmiBlitz3.ab3@211>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001B9C4 <AmiBlitz3.ab3@212>       Case "debug"    : cli_debuginfo   = True
0001B9F4 <AmiBlitz3.ab3@213>       Case "run"      : cli_run         = True
0001BA24 <AmiBlitz3.ab3@214>       Case "release"  : cli_release     = True
0001BA54 <AmiBlitz3.ab3@215>       Case "ped"      : cli_gui         = True
0001BAAE <AmiBlitz3.ab3@216>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001BB20 <AmiBlitz3.ab3@217>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001BB50 <AmiBlitz3.ab3@218>                         cli_dumpfile    = dos_GetNextArg{}
0001BB58 <AmiBlitz3.ab3@219>                         cli_dumpflags   = $0
0001BBB8 <AmiBlitz3.ab3@220>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001BC18 <AmiBlitz3.ab3@221>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001BC78 <AmiBlitz3.ab3@222>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001BCD8 <AmiBlitz3.ab3@223>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001BD38 <AmiBlitz3.ab3@224>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001BD98 <AmiBlitz3.ab3@225>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001BDF8 <AmiBlitz3.ab3@226>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001BE58 <AmiBlitz3.ab3@227>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001BEB8 <AmiBlitz3.ab3@228>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001BECA <AmiBlitz3.ab3@229>                         If cli_dumpflags = $0
0001BED0 <AmiBlitz3.ab3@230>                          err=True
0001BF64 <AmiBlitz3.ab3@231>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001BFD6 <AmiBlitz3.ab3@234>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001BFDE <AmiBlitz3.ab3@235>                         cli_comflags.l  = $0
0001C03E <AmiBlitz3.ab3@236>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C09E <AmiBlitz3.ab3@237>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C0FE <AmiBlitz3.ab3@238>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C15E <AmiBlitz3.ab3@239> 
0001C1BE <AmiBlitz3.ab3@240>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C1D8 <AmiBlitz3.ab3@241>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C1DE <AmiBlitz3.ab3@242>                           err=True                                                                ; no
0001C272 <AmiBlitz3.ab3@243>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C278 <AmiBlitz3.ab3@244>                         Else
0001C286 <AmiBlitz3.ab3@245>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C2F8 <AmiBlitz3.ab3@248>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C300 <AmiBlitz3.ab3@249>                         cli_dbgflags.l  = $0
0001C360 <AmiBlitz3.ab3@250>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C3C0 <AmiBlitz3.ab3@251>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001C420 <AmiBlitz3.ab3@252>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001C480 <AmiBlitz3.ab3@253>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001C49A <AmiBlitz3.ab3@254>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001C4A0 <AmiBlitz3.ab3@255>                           err=True                                                                ; no
0001C534 <AmiBlitz3.ab3@256>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001C53A <AmiBlitz3.ab3@257>                         Else
0001C548 <AmiBlitz3.ab3@258>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001C5A2 <AmiBlitz3.ab3@260>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001C5FC <AmiBlitz3.ab3@261>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001C656 <AmiBlitz3.ab3@262> 
0001C67C <AmiBlitz3.ab3@263>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001C68C <AmiBlitz3.ab3@264>                           Poke.l ?maxerrorcount,cli_maxerrors
0001C6E6 <AmiBlitz3.ab3@267>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001C716 <AmiBlitz3.ab3@268>       Case "h"        : showhelp        = True             ; show the help and quit
0001C71C <AmiBlitz3.ab3@269>       Default
0001C754 <AmiBlitz3.ab3@270>         If arg><""
0001C7E8 <AmiBlitz3.ab3@271>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001C7EE <AmiBlitz3.ab3@272>           err = True
0001C7FC <AmiBlitz3.ab3@274>     End Select
0001C848 <AmiBlitz3.ab3@275>   Until arg = "" OR err=True          ; until we processed all arguments
0001C86A <AmiBlitz3.ab3@278>   If err><False OR showhelp = True
0001C874 <AmiBlitz3.ab3@279>     If showhelp
0001C8D6 <AmiBlitz3.ab3@280>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001C90E <AmiBlitz3.ab3@281>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001C946 <AmiBlitz3.ab3@282>     NPrint "\\nOptions:"
0001C97E <AmiBlitz3.ab3@283>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001C9B6 <AmiBlitz3.ab3@284>     NPrint "  -(e)xe <file>       : output executable filename"
0001C9EE <AmiBlitz3.ab3@285>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001CA26 <AmiBlitz3.ab3@286>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001CA5E <AmiBlitz3.ab3@287>     NPrint "  -run                : run compiled program"
0001CA96 <AmiBlitz3.ab3@288>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001CACE <AmiBlitz3.ab3@289>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001CB06 <AmiBlitz3.ab3@290>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001CB3E <AmiBlitz3.ab3@291>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001CB76 <AmiBlitz3.ab3@292>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001CBAE <AmiBlitz3.ab3@293>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001CBE6 <AmiBlitz3.ab3@294>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001CC1E <AmiBlitz3.ab3@295>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001CC56 <AmiBlitz3.ab3@296>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001CC8E <AmiBlitz3.ab3@297>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001CCC6 <AmiBlitz3.ab3@298>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001CCFE <AmiBlitz3.ab3@299>     NPrint "  -(h)elp             : show this help"
0001CD36 <AmiBlitz3.ab3@300>     NPrint "\\nExample:"
0001CD6E <AmiBlitz3.ab3@301>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001CDA6 <AmiBlitz3.ab3@302>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001CDAC <AmiBlitz3.ab3@305>     Goto abnormal_exit
0001CDC8 <AmiBlitz3.ab3@308>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001CE2C <AmiBlitz3.ab3@309>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001CE3C <AmiBlitz3.ab3@312> Poke.l ?CLIMode,CLIMode
0001CE60 <AmiBlitz3.ab3@342>   Dim incdim.s (#maxincludes)
0001CE84 <AmiBlitz3.ab3@343>   Dim incline.l(#maxincludes)
0001CE9E <AmiBlitz3.ab3@611> Function.s Get_Libinfo{addr_libnum.l}
0001CEAA <AmiBlitz3.ab3@613>   lib_ab2.b = False : lib_os.b = False
0001CEB0 <AmiBlitz3.ab3@614>   addr_counter.l = addr_libnum
0001CEB8 <AmiBlitz3.ab3@615>   skip.l = 0
0001CECA <AmiBlitz3.ab3@616>   If addr_counter=0
0001CF04 <AmiBlitz3.ab3@617>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001CF22 <AmiBlitz3.ab3@618>     Function Return ""
0001CF30 <AmiBlitz3.ab3@623>     mem.l = Peek.l(addr_counter)
0001CF3E <AmiBlitz3.ab3@628>     addr_counter + 2
0001CF5E <AmiBlitz3.ab3@629>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001CF78 <AmiBlitz3.ab3@630>     If (mem LSR 16) = $ffe2
0001CF7E <AmiBlitz3.ab3@632>       lib_os = True
0001CF86 <AmiBlitz3.ab3@633>       skip = 10
0001CFCC <AmiBlitz3.ab3@634>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D010 <AmiBlitz3.ab3@636>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D026 <AmiBlitz3.ab3@638>   If (addr_counter>addr_libnum + $400)
0001D044 <AmiBlitz3.ab3@640>     Function Return ""
0001D04A <AmiBlitz3.ab3@641>   Else
0001D06E <AmiBlitz3.ab3@642>     Function Return Peek$(addr_counter + skip)
0001D078 <AmiBlitz3.ab3@644> End Function
0001D096 <AmiBlitz3.ab3@684>   !asm
0001D09C <AmiBlitz3.ab3@685>   MOVEA.l _execbase,A6
0001D0A0 <AmiBlitz3.ab3@686>   MOVEM.l d0/a0,-(a7)
0001D0A2 <AmiBlitz3.ab3@688>   MOVEQ #127,d0
0001D0A8 <AmiBlitz3.ab3@689>   LEA chartab,a0
0001D0AE <AmiBlitz3.ab3@692>     MOVE.b #1,128(a0)
0001D0B0 <AmiBlitz3.ab3@693>     CLR.b (a0)+
0001D0B4 <AmiBlitz3.ab3@694>   DBF d0,'l12
0001D0BA <AmiBlitz3.ab3@696>   LEA chartab,a0
0001D0BE <AmiBlitz3.ab3@697>   MOVE.b #1,(a0)
0001D0C4 <AmiBlitz3.ab3@698>   MOVE.b #1,","(a0)
0001D0CA <AmiBlitz3.ab3@699>   MOVE.b #1,";"(a0)
0001D0D0 <AmiBlitz3.ab3@700>   MOVE.b #1,":"(a0)
0001D0D6 <AmiBlitz3.ab3@701>   MOVE.b #1,"("(a0)
0001D0DC <AmiBlitz3.ab3@702>   MOVE.b #1,")"(a0)
0001D0E2 <AmiBlitz3.ab3@703>   MOVE.b #1,"="(a0)
0001D0E8 <AmiBlitz3.ab3@704>   MOVE.b #1,"+"(a0)
0001D0EE <AmiBlitz3.ab3@705>   MOVE.b #1,"-"(a0)
0001D0F4 <AmiBlitz3.ab3@706>   MOVE.b #1,"*"(a0)
0001D0FA <AmiBlitz3.ab3@707>   MOVE.b #1,"/"(a0)
0001D100 <AmiBlitz3.ab3@708>   MOVE.b #1,"$"(a0)
0001D106 <AmiBlitz3.ab3@709>   MOVE.b #1,"%"(a0)
0001D10C <AmiBlitz3.ab3@710>   MOVE.b #1,"."(a0)
0001D112 <AmiBlitz3.ab3@711>   MOVE.b #1,"["(a0)
0001D118 <AmiBlitz3.ab3@712>   MOVE.b #1,"]"(a0)
0001D11E <AmiBlitz3.ab3@713>   MOVE.b #1,"{"(a0)
0001D124 <AmiBlitz3.ab3@714>   MOVE.b #1,"}"(a0)
0001D12A <AmiBlitz3.ab3@715>   MOVE.b #1,"\"(a0)
0001D130 <AmiBlitz3.ab3@716>   MOVE.b #1,">"(a0)
0001D136 <AmiBlitz3.ab3@717>   MOVE.b #1,"<"(a0)
0001D13C <AmiBlitz3.ab3@718>   MOVE.b #1,"&"(a0)
0001D142 <AmiBlitz3.ab3@719>   MOVE.b #1,"|"(a0)
0001D148 <AmiBlitz3.ab3@720>   MOVE.b #1,"^"(a0)
0001D14E <AmiBlitz3.ab3@721>   MOVE.b #1,$7e(a0)
0001D154 <AmiBlitz3.ab3@722>   MOVE.w #$0101,1(a0)
0001D15A <AmiBlitz3.ab3@724>   LEA instrtab,a0
0001D160 <AmiBlitz3.ab3@725>   MOVE.l #labelhash-instrtab,d0
0001D162 <AmiBlitz3.ab3@726>   ASR.l #2,d0
0001D164 <AmiBlitz3.ab3@727>   SUBQ.l #1,d0
0001D166 <AmiBlitz3.ab3@730>    CLR.l (a0)+
0001D168 <AmiBlitz3.ab3@731>    SUBQ.l #1,d0
0001D16C <AmiBlitz3.ab3@732>   BNE 'l10
0001D172 <AmiBlitz3.ab3@734>   LEA allowtab,a0
0001D178 <AmiBlitz3.ab3@735>   MOVE.l #255,d0
0001D17A <AmiBlitz3.ab3@738>     CLR.b (a0)+
0001D17E <AmiBlitz3.ab3@739>   DBF d0,'la1
0001D184 <AmiBlitz3.ab3@741>   LEA allowtab,a0
0001D18A <AmiBlitz3.ab3@742>   MOVE.b #1,$7d(a0)
0001D190 <AmiBlitz3.ab3@743>   MOVE.b #1,$7c(a0)
0001D196 <AmiBlitz3.ab3@744>   MOVE.b #1,$44(a0)
0001D19C <AmiBlitz3.ab3@745>   MOVE.b #1,$45(a0)
0001D1A2 <AmiBlitz3.ab3@746>   MOVE.b #1,$b9(a0)
0001D1A8 <AmiBlitz3.ab3@747>   MOVE.b #1,$89(a0)
0001D1AE <AmiBlitz3.ab3@748>   MOVE.b #1,$ce(a0)
0001D1B4 <AmiBlitz3.ab3@749>   MOVE.b #1,$cf(a0)
0001D1BA <AmiBlitz3.ab3@750>   MOVE.b #1,$d0(a0)
0001D1C0 <AmiBlitz3.ab3@751>   MOVE.b #1,$cd(a0)
0001D1C2 <AmiBlitz3.ab3@752>   MOVEQ #0,d0
0001D1C8 <AmiBlitz3.ab3@754>   MOVEA.l _execbase,a6
0001D1CE <AmiBlitz3.ab3@759>   MOVE.l #$10000,d0
0001D1D4 <AmiBlitz3.ab3@760>   MOVE.l #80000,d1
0001D1D6 <AmiBlitz3.ab3@761>   MOVE.l d1,d2
0001D1DA <AmiBlitz3.ab3@762>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D1E0 <AmiBlitz3.ab3@763>   MOVE.l d0,mempool
0001D1E4 <AmiBlitz3.ab3@764>   MOVEM.l (a7)+,d0/a0
0001D1EA <AmiBlitz3.ab3@765>   TST.l mempool
0001D1EE <AmiBlitz3.ab3@766>   BEQ shutdown_compiler
0001D1F2 <AmiBlitz3.ab3@768>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D1F8 <AmiBlitz3.ab3@769>   MOVE.l A4,ptr_ThisTask
0001D1FC <AmiBlitz3.ab3@771>   BSR.w open_doslibrary
0001D200 <AmiBlitz3.ab3@772>   BEQ.w shutdown_compiler
0001D206 <AmiBlitz3.ab3@774>   MOVE.l D2,stacksize
0001D208 <AmiBlitz3.ab3@778>   MOVEQ.l #$00,D0
0001D20E <AmiBlitz3.ab3@779>   LEA tokens,A0
0001D210 <AmiBlitz3.ab3@782>     ADDQ.w #1,D0
0001D212 <AmiBlitz3.ab3@783>     MOVE.l (A0),D1
0001D216 <AmiBlitz3.ab3@784>     BEQ.w JL_0_2D1C
0001D218 <AmiBlitz3.ab3@785>     MOVEA.l D1,A0
0001D21C <AmiBlitz3.ab3@786> BRA.w JL_0_2D0E
0001D222 <AmiBlitz3.ab3@789>   MOVE.l A0,end_of_tokenlist
0001D226 <AmiBlitz3.ab3@791>   BSR.w makeasmtable
0001D22E <AmiBlitz3.ab3@792>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D232 <AmiBlitz3.ab3@794>   BSR.w open_mathlibrary
0001D236 <AmiBlitz3.ab3@795>   BEQ.w freemem_and_quit4
0001D23C <AmiBlitz3.ab3@797>   MOVE.l constmaxpc,D0
0001D23E <AmiBlitz3.ab3@798>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D244 <AmiBlitz3.ab3@799>   MOVEA.l _execbase,A6
0001D248 <AmiBlitz3.ab3@800>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D24E <AmiBlitz3.ab3@801>   MOVE.l D0,constpcat
0001D252 <AmiBlitz3.ab3@802>   BEQ.w freemem_and_quit3
0001D258 <AmiBlitz3.ab3@803>   ADD.l constmaxpc,D0
0001D25E <AmiBlitz3.ab3@804>   MOVE.l D0,constlibat
0001D264 <AmiBlitz3.ab3@806>   MOVE.l macrobuffer_size,D0
0001D26A <AmiBlitz3.ab3@807>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D26E <AmiBlitz3.ab3@808>   BGE 'ok
0001D274 <AmiBlitz3.ab3@809>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D27A <AmiBlitz3.ab3@810>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D27C <AmiBlitz3.ab3@813>   ADDQ.l #4,d0
0001D27E <AmiBlitz3.ab3@814>   MOVEQ.l #$01,D1
0001D284 <AmiBlitz3.ab3@815>   MOVEA.l _execbase,A6
0001D288 <AmiBlitz3.ab3@816>   JSR _AllocMem(A6)                                        ;macro mem
0001D28A <AmiBlitz3.ab3@817>   MOVE.l d0,a0
0001D290 <AmiBlitz3.ab3@818>   MOVE.l macrobuffer_size,(a0)+
0001D292 <AmiBlitz3.ab3@819>   MOVE.l a0,d0
0001D298 <AmiBlitz3.ab3@820>   MOVE.l D0,ptr_macrobuffer_begin
0001D29C <AmiBlitz3.ab3@821>   BEQ.w freemem_and_quit2
0001D2A2 <AmiBlitz3.ab3@822>   ADD.l macrobuffer_size,D0
0001D2A8 <AmiBlitz3.ab3@823>   MOVE.l D0,ptr_macrobuffer_end
0001D2AE <AmiBlitz3.ab3@825>   TST.l CLIMode
0001D2B2 <AmiBlitz3.ab3@826>   BEQ load_ped
0001D2DC <AmiBlitz3.ab3@829>   !basic
0001D2E6 <AmiBlitz3.ab3@830>   succ.l = InitEmulatedPED{}
0001D2EA <AmiBlitz3.ab3@831>   GetD0 succ
0001D308 <AmiBlitz3.ab3@832>   !asm
0001D30A <AmiBlitz3.ab3@833>   TST.l d0
0001D30E <AmiBlitz3.ab3@834>   BEQ freemem_and_quit
0001D314 <AmiBlitz3.ab3@835> JMP skip_ped
0001D31A <AmiBlitz3.ab3@840>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D320 <AmiBlitz3.ab3@841>   MOVEA.l _dosbase,A6
0001D324 <AmiBlitz3.ab3@842>   JSR _LoadSeg(A6)
0001D32A <AmiBlitz3.ab3@843>   MOVE.l D0,ptr_seg_ped
0001D32E <AmiBlitz3.ab3@845>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D330 <AmiBlitz3.ab3@849>   MOVEA.l D0,A2
0001D332 <AmiBlitz3.ab3@850>   ADDA.l A2,A2
0001D334 <AmiBlitz3.ab3@851>   ADDA.l A2,A2
0001D33A <AmiBlitz3.ab3@853>   LEA teddata,a1                                           ;lea edstruct,A1
0001D340 <AmiBlitz3.ab3@854>   MOVE.l #"TEDY",d1
0001D344 <AmiBlitz3.ab3@855>   JSR 4(A2)                                                ; Run PED
0001D34A <AmiBlitz3.ab3@857>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D350 <AmiBlitz3.ab3@858>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D38E <AmiBlitz3.ab3@860>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D392 <AmiBlitz3.ab3@861>   BEQ.w unload_ped
0001D396 <AmiBlitz3.ab3@862> 
0001D39A <AmiBlitz3.ab3@863>   BNE old_version_of_PED                                   ; no, than exit
0001D3D8 <AmiBlitz3.ab3@869>   !ComData_GetL{comData_Magic,D0}
0001D3DE <AmiBlitz3.ab3@870>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D3E2 <AmiBlitz3.ab3@871>   BNE unload_ped
0001D41A <AmiBlitz3.ab3@874>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001D452 <AmiBlitz3.ab3@875>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001D48A <AmiBlitz3.ab3@876>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001D4C2 <AmiBlitz3.ab3@877>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001D4FA <AmiBlitz3.ab3@878>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001D532 <AmiBlitz3.ab3@879>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001D56A <AmiBlitz3.ab3@880>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001D5A2 <AmiBlitz3.ab3@881>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001D5DA <AmiBlitz3.ab3@882>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001D612 <AmiBlitz3.ab3@883>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001D64A <AmiBlitz3.ab3@884>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001D682 <AmiBlitz3.ab3@885>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001D6BA <AmiBlitz3.ab3@888>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001D6F2 <AmiBlitz3.ab3@889>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001D72A <AmiBlitz3.ab3@892>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001D762 <AmiBlitz3.ab3@893>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001D79A <AmiBlitz3.ab3@895>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001D7D2 <AmiBlitz3.ab3@896>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001D80A <AmiBlitz3.ab3@898>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001D842 <AmiBlitz3.ab3@899>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001D87A <AmiBlitz3.ab3@901>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001D8B2 <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001D8EA <AmiBlitz3.ab3@903>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001D922 <AmiBlitz3.ab3@904>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001D95A <AmiBlitz3.ab3@905>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001D992 <AmiBlitz3.ab3@906>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001D9CA <AmiBlitz3.ab3@907>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001DA02 <AmiBlitz3.ab3@908>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001DA3A <AmiBlitz3.ab3@909>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001DA72 <AmiBlitz3.ab3@910>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001DAAA <AmiBlitz3.ab3@911>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001DAE2 <AmiBlitz3.ab3@912>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001DB1A <AmiBlitz3.ab3@913>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001DB52 <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001DB8A <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001DB90 <AmiBlitz3.ab3@919>   CLR.w returncode_org
0001DBBA <AmiBlitz3.ab3@921>   !basic
0001DBC4 <AmiBlitz3.ab3@922>   If CLIMode
0001DC36 <AmiBlitz3.ab3@923>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001DC54 <AmiBlitz3.ab3@925>   !asm
0001DC5A <AmiBlitz3.ab3@929>   TST.b start_without_libs
0001DC5E <AmiBlitz3.ab3@930>   BNE skip_loading_libs
0001DC62 <AmiBlitz3.ab3@931>     BSR.w call_setpointerbusy
0001DC6C <AmiBlitz3.ab3@932>     MOVE.l #$FFFFffff,linenumat
0001DC70 <AmiBlitz3.ab3@933>     BSR.w get_libraries
0001DC76 <AmiBlitz3.ab3@934>     JSR init_libraries
0001DC7A <AmiBlitz3.ab3@935>     BSR.w init_buffers
0001DC7E <AmiBlitz3.ab3@936>     BSR.w call_setpointernormal
0001DC80 <AmiBlitz3.ab3@941>   MOVEQ.l #-$01,D0
0001DC86 <AmiBlitz3.ab3@942>   MOVEA.l _execbase,A6
0001DC8A <AmiBlitz3.ab3@943>   JSR _AllocSignal(A6)
0001DC90 <AmiBlitz3.ab3@944>   MOVE.l D0,signalNum
0001DC92 <AmiBlitz3.ab3@945>   MOVEQ.l #$00,D1
0001DC94 <AmiBlitz3.ab3@946>   BSET D0,D1
0001DC9A <AmiBlitz3.ab3@947>   MOVE.l D1,signals
0001DCA0 <AmiBlitz3.ab3@951>   MOVE.l #str_defaultdbug,D1
0001DCA4 <AmiBlitz3.ab3@952>   MOVEA.l _dosbase(PC),A6
0001DCA8 <AmiBlitz3.ab3@953>   JSR _LoadSeg(A6)
0001DCAE <AmiBlitz3.ab3@954>   MOVE.l D0,ptr_seg_debugger
0001DCB0 <AmiBlitz3.ab3@955>   TST.l d0
0001DCB4 <AmiBlitz3.ab3@956>   BNE ok_12
0001DCDE <AmiBlitz3.ab3@957>     !basic
0001DD40 <AmiBlitz3.ab3@958>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001DD5E <AmiBlitz3.ab3@959>     !asm
0001DD64 <AmiBlitz3.ab3@962>   TST.l CLIMode
0001DD68 <AmiBlitz3.ab3@963>   BEQ run_ped
0001DD92 <AmiBlitz3.ab3@969>   !basic
0001DD98 <AmiBlitz3.ab3@970>   err.l = False
0001DDC4 <AmiBlitz3.ab3@978>   If cli_sourcefile
0001DDE4 <AmiBlitz3.ab3@979>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001DDEE <AmiBlitz3.ab3@980>     If lock
0001DE12 <AmiBlitz3.ab3@981>       NameFromLock_ lock,&cli_tempstr,1024
0001DE3C <AmiBlitz3.ab3@982>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001DE4C <AmiBlitz3.ab3@983>       UnLock_ lock
0001DE78 <AmiBlitz3.ab3@986>     If cli_exefile
0001DECA <AmiBlitz3.ab3@987>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001DF22 <AmiBlitz3.ab3@988>       path.s = dos_PathPart{cli_exefile}
0001DF42 <AmiBlitz3.ab3@989>       lock.l = Lock_(&path,#ACCESS_READ)
0001DF4C <AmiBlitz3.ab3@990>       If lock
0001DF70 <AmiBlitz3.ab3@991>         NameFromLock_ lock,&cli_tempstr,1024
0001DF9A <AmiBlitz3.ab3@992>         path.s = Peek.s(&cli_tempstr)
0001E048 <AmiBlitz3.ab3@993>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E058 <AmiBlitz3.ab3@994>         UnLock_ lock
0001E0A2 <AmiBlitz3.ab3@1005>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E116 <AmiBlitz3.ab3@1006> 
0001E120 <AmiBlitz3.ab3@1007>   *PreProcessor.preprocessor = preproc_Create{}
0001E130 <AmiBlitz3.ab3@1008>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E162 <AmiBlitz3.ab3@1009>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E176 <AmiBlitz3.ab3@1010>   If *PreProcessor\tokens=#NULL
0001E1F0 <AmiBlitz3.ab3@1011>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E1FA <AmiBlitz3.ab3@1012>     preproc_QueryTokens{*PreProcessor}
0001E22C <AmiBlitz3.ab3@1013>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E278 <AmiBlitz3.ab3@1021>   If cli_sourcefile><"" AND err=False
0001E31E <AmiBlitz3.ab3@1022>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E350 <AmiBlitz3.ab3@1023>     succ=LoadSource{cli_sourcefile}
0001E35A <AmiBlitz3.ab3@1024>     If succ
0001E392 <AmiBlitz3.ab3@1025> 
0001E40C <AmiBlitz3.ab3@1026>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001E44E <AmiBlitz3.ab3@1027> 
0001E458 <AmiBlitz3.ab3@1029>         If comerr
0001E45E <AmiBlitz3.ab3@1031>         Else
0001E464 <AmiBlitz3.ab3@1035>     Else
0001E4B4 <AmiBlitz3.ab3@1036>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001E500 <AmiBlitz3.ab3@1040>   If cli_savefile><"" AND err=False
0001E57A <AmiBlitz3.ab3@1041>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001E5A8 <AmiBlitz3.ab3@1042>     SaveSource{cli_savefile}
0001E5F4 <AmiBlitz3.ab3@1045>   If cli_dumpfile><"" AND err=False
0001E63E <AmiBlitz3.ab3@1046>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001E674 <AmiBlitz3.ab3@1047>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001E67E <AmiBlitz3.ab3@1050>   If cli_run
0001E692 <AmiBlitz3.ab3@1051>     If comerr=False
0001E6BE <AmiBlitz3.ab3@1052>       If cli_exefile
0001E738 <AmiBlitz3.ab3@1053>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001E76E <AmiBlitz3.ab3@1054> 
0001E7B8 <AmiBlitz3.ab3@1056>       If cli_verbose>=1 Then NPrint "Running program..."
0001E7C6 <AmiBlitz3.ab3@1057> 
0001E7C8 <AmiBlitz3.ab3@1059>         CLR.l d0
0001E806 <AmiBlitz3.ab3@1060>         !ComData_GetB{comByte_RunningFlag,D0}
0001E80A <AmiBlitz3.ab3@1061>         running.l = PutD0
0001E826 <AmiBlitz3.ab3@1062>         If running Then Delay_ 50
0001E83A <AmiBlitz3.ab3@1064>       Until running=False
0001E84E <AmiBlitz3.ab3@1065>       If Peek.l(?_runerror)
0001E89E <AmiBlitz3.ab3@1066>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001E8B0 <AmiBlitz3.ab3@1077>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001E8FA <AmiBlitz3.ab3@1078>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001E900 <AmiBlitz3.ab3@1079>   DeinitEmulatedPED{}
0001E91E <AmiBlitz3.ab3@1081>   !asm
0001E924 <AmiBlitz3.ab3@1082> JMP terminate_ab3
0001E92A <AmiBlitz3.ab3@1087>   MOVEA.l ped_startup_addr,A1
0001E930 <AmiBlitz3.ab3@1088>   LEA str_tempfilename,A0
0001E932 <AmiBlitz3.ab3@1089>   JSR (A1)
0001E938 <AmiBlitz3.ab3@1096>   MOVE.l signalNum,D0
0001E93E <AmiBlitz3.ab3@1097>   MOVEA.l _execbase,A6
0001E942 <AmiBlitz3.ab3@1098>   JSR _FreeSignal(A6)
0001E948 <AmiBlitz3.ab3@1100>   MOVE.l ptr_seg_debugger,D1
0001E94C <AmiBlitz3.ab3@1101>   BEQ.b skip_unload_debugger
0001E950 <AmiBlitz3.ab3@1102>     MOVEA.l _dosbase(PC),A6
0001E954 <AmiBlitz3.ab3@1103>     JSR _UnLoadSeg(A6)
0001E958 <AmiBlitz3.ab3@1106>   BSR.w Aclearallvars
0001E95C <AmiBlitz3.ab3@1107>   BSR.w free_residents
0001E962 <AmiBlitz3.ab3@1108>   JSR free_blitzlibs
0001E968 <AmiBlitz3.ab3@1111>   MOVE.l ptr_seg_ped,D1
0001E96C <AmiBlitz3.ab3@1112>   BEQ freemem_and_quit
0001E970 <AmiBlitz3.ab3@1113>   MOVEA.l _dosbase(PC),A6
0001E974 <AmiBlitz3.ab3@1114>   JSR _UnLoadSeg(A6)
0001E978 <AmiBlitz3.ab3@1115>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001E9A2 <AmiBlitz3.ab3@1118>   !basic
0001EA66 <AmiBlitz3.ab3@1119> 
0001EA84 <AmiBlitz3.ab3@1120>   !asm
0001EA88 <AmiBlitz3.ab3@1121>   BRA freemem_and_quit
0001EAB2 <AmiBlitz3.ab3@1124>   !basic
0001EB76 <AmiBlitz3.ab3@1125>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001EB94 <AmiBlitz3.ab3@1126>   !asm
0001EB98 <AmiBlitz3.ab3@1130>   BSR.w freeallox
0001EB9E <AmiBlitz3.ab3@1131>   MOVEA.l ptr_macrobuffer_begin,A1
0001EBA0 <AmiBlitz3.ab3@1132>   MOVE.l -(a1),D0
0001EBA2 <AmiBlitz3.ab3@1133>   ADDQ.l #4,d0
0001EBA8 <AmiBlitz3.ab3@1134>   MOVEA.l _execbase,A6
0001EBAC <AmiBlitz3.ab3@1135>   JSR _FreeMem(A6)
0001EBB2 <AmiBlitz3.ab3@1138>   MOVEA.l _dosbase,A1
0001EBB8 <AmiBlitz3.ab3@1139>   MOVEA.l _execbase,A6
0001EBBC <AmiBlitz3.ab3@1140>   JSR _CloseLibrary(A6)
0001EBC2 <AmiBlitz3.ab3@1142>   MOVEA.l constpcat,A1
0001EBC8 <AmiBlitz3.ab3@1143>   MOVE.l constmaxpc,D0
0001EBCE <AmiBlitz3.ab3@1144>   MOVEA.l _execbase,A6
0001EBD2 <AmiBlitz3.ab3@1145>   JSR _FreeMem(A6)
0001EBD8 <AmiBlitz3.ab3@1148>   MOVEA.l _mathffpbase,A1
0001EBDE <AmiBlitz3.ab3@1149>   MOVEA.l _execbase,A6
0001EBE2 <AmiBlitz3.ab3@1150>   JSR _CloseLibrary(A6)
0001EBE8 <AmiBlitz3.ab3@1160>     MOVEA.l _execbase,A6
0001EBEE <AmiBlitz3.ab3@1161>     MOVE.l mempool,a0
0001EBF2 <AmiBlitz3.ab3@1162>     JSR _DeletePool(a6)
0001EBF8 <AmiBlitz3.ab3@1163>     CLR.l pushat
0001EBFE <AmiBlitz3.ab3@1170>   JSR free_unusedfunctions
0001EC00 <AmiBlitz3.ab3@1171>   MOVEQ #0,d0
0001EC0E <AmiBlitz3.ab3@1174>   !exitasm
0001EC46 <AmiBlitz3.ab3@1175>   If dynassign<>""
0001EC50 <AmiBlitz3.ab3@1176>     If *AssignSema
0001EC60 <AmiBlitz3.ab3@1177>       ReleaseSemaphore_ *AssignSema
0001EC78 <AmiBlitz3.ab3@1178>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001ED0C <AmiBlitz3.ab3@1179>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001ED46 <AmiBlitz3.ab3@1180>         dos_RemAssign{dynassign}
0001ED56 <AmiBlitz3.ab3@1181>         RemSemaphore_ *AssignSema
0001ED66 <AmiBlitz3.ab3@1182>         ReleaseSemaphore_ *AssignSema
0001ED9C <AmiBlitz3.ab3@1183>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001EDAC <AmiBlitz3.ab3@1184>         FreeVec_ *AssignSema
0001EDB4 <AmiBlitz3.ab3@1185>         *AssignSema = #NULL
0001EDE2 <AmiBlitz3.ab3@1189>   SetCurrentDir{cli_path}
0001EE04 <AmiBlitz3.ab3@1190>   !coutclose
0001EE0A <AmiBlitz3.ab3@1191> End
0001EE16 <AmiBlitz3.ab3@1196> str_doslibrary:     Dc.b "dos.library",0 : Even
0001EE1A <AmiBlitz3.ab3@1197> _dosbase:           Ds.l 1
0001EE20 <AmiBlitz3.ab3@1201>   MOVEA.l _execbase,A6
0001EE26 <AmiBlitz3.ab3@1202>   LEA str_doslibrary,A1
0001EE2A <AmiBlitz3.ab3@1203>   JSR _OldOpenLibrary(A6)
0001EE30 <AmiBlitz3.ab3@1204>   MOVE.l D0,_dosbase
0001EE32 <AmiBlitz3.ab3@1205> RTS
0001EE38 <AmiBlitz3.ab3@1209>   MOVEA.l #str_mathffpname,A1
0001EE3E <AmiBlitz3.ab3@1210>   MOVEA.l _execbase,A6
0001EE42 <AmiBlitz3.ab3@1211>   JSR _OldOpenLibrary(A6)
0001EE48 <AmiBlitz3.ab3@1212>   MOVE.l D0,_mathffpbase
0001EE4A <AmiBlitz3.ab3@1213> RTS
0001EE7C <AmiBlitz3.ab3@1221> !ComData_JMP{comFunc_SetNormalPointer}
0001EEAE <AmiBlitz3.ab3@1229> !ComData_JMP{comFunc_SetBusyPointer}
0001EED8 <AmiBlitz3.ab3@1233>   !basic
0001EEDC <AmiBlitz3.ab3@1234>   ab3save_filenameP.l = PutD0
0001EEE6 <AmiBlitz3.ab3@1235>   If ab3save_filenameP
0001EF0E <AmiBlitz3.ab3@1236>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001EF3C <AmiBlitz3.ab3@1238>     SaveSource{ab3save_filename}
0001EF42 <AmiBlitz3.ab3@1239>   Else
0001EF7C <AmiBlitz3.ab3@1240>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001EF9A <AmiBlitz3.ab3@1242>   !asm
0001EF9C <AmiBlitz3.ab3@1243>   RTS
0001EFC6 <AmiBlitz3.ab3@1246>   !basic
0001EFCA <AmiBlitz3.ab3@1247>   ab3save_filenameP.l = PutD0
0001EFD4 <AmiBlitz3.ab3@1248>   If ab3save_filenameP
0001EFFC <AmiBlitz3.ab3@1249>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F02A <AmiBlitz3.ab3@1250>     LoadSource{ab3save_filename}
0001F030 <AmiBlitz3.ab3@1251>   Else
0001F06A <AmiBlitz3.ab3@1252>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F088 <AmiBlitz3.ab3@1254>   !asm
0001F08A <AmiBlitz3.ab3@1255>   RTS
0001F0B4 <AmiBlitz3.ab3@1258>   !basic
0001F0BA <AmiBlitz3.ab3@1259>   ClearSource{}
0001F0D8 <AmiBlitz3.ab3@1260>   !asm
0001F0DA <AmiBlitz3.ab3@1261>   RTS
0001F104 <AmiBlitz3.ab3@1264>   !basic
0001F10A <AmiBlitz3.ab3@1265>   OpenConsoleFake{}
0001F128 <AmiBlitz3.ab3@1266>   !asm
0001F12A <AmiBlitz3.ab3@1267>   RTS
0001F154 <AmiBlitz3.ab3@1271>   !basic
0001F15A <AmiBlitz3.ab3@1272>   CloseConsoleFake{}
0001F178 <AmiBlitz3.ab3@1273>   !asm
0001F17A <AmiBlitz3.ab3@1274>   RTS
0001F180 <AmiBlitz3.ab3@1278>   MOVE.w d6,menuitemdebug
0001F1AA <AmiBlitz3.ab3@1279>   !basic
0001F1BC <AmiBlitz3.ab3@1280>   menuitemx.l = Peek.w(?menuitemdebug)
0001F1E2 <AmiBlitz3.ab3@1281>   If menuitemx>16 OR  menuitemx<0
0001F256 <AmiBlitz3.ab3@1282>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F25E <AmiBlitz3.ab3@1283>     menuitemx=0
0001F26E <AmiBlitz3.ab3@1285>   Poke.w ?menuitemdebug,menuitemx
0001F28C <AmiBlitz3.ab3@1286>   !asm
0001F292 <AmiBlitz3.ab3@1287>   MOVE.w menuitemdebug,d6
0001F298 <AmiBlitz3.ab3@1290>   MOVE.l A5,firstitem_
0001F29E <AmiBlitz3.ab3@1291>   MOVE.w D7,numlines_org
0001F2A4 <AmiBlitz3.ab3@1292>   MOVE.l d7,numlines
0001F2A6 <AmiBlitz3.ab3@1293>   LSL.w #2,D6
0001F2AC <AmiBlitz3.ab3@1294>   LEA menu_items,A0
0001F2B0 <AmiBlitz3.ab3@1295>   MOVEA.l $0(A0,D6.W),A0
0001F2BA <AmiBlitz3.ab3@1296>   MOVE.l #$FFFFffff,linenumat
0001F2C4 <AmiBlitz3.ab3@1297>   MOVE.l #$FFFFffff,compilelinecounter
0001F2C6 <AmiBlitz3.ab3@1300>   JSR (A0)                              ; jsr to the function for the menuitem
0001F2CC <AmiBlitz3.ab3@1301>   MOVE.l compilelinecounter,D0
0001F2CE <AmiBlitz3.ab3@1302> RTS
0001F2D2 <AmiBlitz3.ab3@1304> menuitemdebug: Dc.l 0
0001F2D6 <AmiBlitz3.ab3@1306> mempool                Dc.l 0
0001F2EC <AmiBlitz3.ab3@1307> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F2F2 <AmiBlitz3.ab3@1308> dloaderr:             JSR handle_compileerror
0001F30E <AmiBlitz3.ab3@1309>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F34C <AmiBlitz3.ab3@1317>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F352 <AmiBlitz3.ab3@1318>   LEA str_loaddebugmessage,A2
0001F358 <AmiBlitz3.ab3@1319>   LEA str_blitz3assign,A0
0001F35E <AmiBlitz3.ab3@1320>   LEA str_temp_debugmodulename,A1
0001F360 <AmiBlitz3.ab3@1322>   JSR (A3)                                                  ;open ped filerequest
0001F364 <AmiBlitz3.ab3@1324>   BEQ.w menu_loaddebugmodule_noload
0001F36A <AmiBlitz3.ab3@1325>   MOVE.l D0,ptr_temp_debugmodule
0001F36E <AmiBlitz3.ab3@1326>   BSR.w call_setpointerbusy
0001F374 <AmiBlitz3.ab3@1327> 
0001F37A <AmiBlitz3.ab3@1328>   MOVE.l A7,errstack
0001F384 <AmiBlitz3.ab3@1329>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F38A <AmiBlitz3.ab3@1330>   MOVE.l ptr_temp_debugmodule,D1
0001F38E <AmiBlitz3.ab3@1332>   MOVEA.l _dosbase(PC),A6
0001F392 <AmiBlitz3.ab3@1333>   JSR _LoadSeg(A6)
0001F394 <AmiBlitz3.ab3@1334>   MOVE.l D0,D7
0001F398 <AmiBlitz3.ab3@1335>   BEQ.w dloaderr
0001F39E <AmiBlitz3.ab3@1336>   MOVE.l ptr_seg_debugger,D1
0001F3A2 <AmiBlitz3.ab3@1337>   BEQ.b menu_loaddebugmodule_ndseg
0001F3A6 <AmiBlitz3.ab3@1338>   MOVEA.l _dosbase(PC),A6
0001F3AA <AmiBlitz3.ab3@1339>   JSR _UnLoadSeg(A6)
0001F3AE <AmiBlitz3.ab3@1340>   BSR.w call_setpointernormal
0001F3B4 <AmiBlitz3.ab3@1343>   MOVE.l D7,ptr_seg_debugger
0001F3B6 <AmiBlitz3.ab3@1346> RTS
0001F3D4 <AmiBlitz3.ab3@1349> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001F494 <AmiBlitz3.ab3@1350> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001F554 <AmiBlitz3.ab3@1351> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001F558 <AmiBlitz3.ab3@1352> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001F582 <AmiBlitz3.ab3@1356>   !basic
0001F5AC <AmiBlitz3.ab3@1357>   exepath.s = Peek.s(?exepath)
0001F5D6 <AmiBlitz3.ab3@1358>   exefile.s = Peek.s(?exefilename)
0001F656 <AmiBlitz3.ab3@1359>   exefile.s = dos_AddPart{exepath,exefile}
0001F68E <AmiBlitz3.ab3@1360>   Poke.s ?tempspace,exefile
0001F6AC <AmiBlitz3.ab3@1361>   !asm
0001F6B2 <AmiBlitz3.ab3@1382>   LEA tempspace,a0
0001F6B4 <AmiBlitz3.ab3@1383>   MOVE.l a0,d0
0001F6B8 <AmiBlitz3.ab3@1384> BRA newcreate2
0001F6E2 <AmiBlitz3.ab3@1390>   !basic
0001F70C <AmiBlitz3.ab3@1391>   request_exename.s = Peek.s(?str_request_exename )
0001F768 <AmiBlitz3.ab3@1392>   request_exename   = !TRANS{request_exename}
0001F76E <AmiBlitz3.ab3@1393>   GetD0 &request_exename
0001F78C <AmiBlitz3.ab3@1394>   !asm
0001F78E <AmiBlitz3.ab3@1395>   MOVE.l D0,A2
0001F7CC <AmiBlitz3.ab3@1398>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F7D2 <AmiBlitz3.ab3@1400>   LEA exepath,A0
0001F7D8 <AmiBlitz3.ab3@1401>   LEA exefilename,A1
0001F7DA <AmiBlitz3.ab3@1403>   JSR (A3)                                                 ;open ped filerequest
0001F7DE <AmiBlitz3.ab3@1405>   BEQ.w cancel_createexe
0001F7E8 <AmiBlitz3.ab3@1408>   ADD.l #1,number_of_builds
0001F7EE <AmiBlitz3.ab3@1411>   MOVE.l D0,ptr_newexefilename
0001F7F6 <AmiBlitz3.ab3@1412>   MOVE.w #-1,debugversion
0001F7FC <AmiBlitz3.ab3@1413>   MOVE.w set_make_smallestcode,-(A7)
0001F804 <AmiBlitz3.ab3@1417>     MOVE.w #1,makeexec
0001F80A <AmiBlitz3.ab3@1418>     JSR ab3_OpenDebugFile
0001F80E <AmiBlitz3.ab3@1419>     BSR.w startcompile
0001F814 <AmiBlitz3.ab3@1420>     JSR ab3_CloseDebugFile
0001F81E <AmiBlitz3.ab3@1421>     CMP.l #"NORE",reqmode
0001F822 <AmiBlitz3.ab3@1422>   BEQ 'l1
0001F828 <AmiBlitz3.ab3@1424>   TST.w anyerrs
0001F82C <AmiBlitz3.ab3@1425>   BNE.b menu_createexecutable__skip
0001F830 <AmiBlitz3.ab3@1426>   BSR.w savefile
0001F836 <AmiBlitz3.ab3@1429>   MOVE.w (A7)+,set_make_smallestcode
0001F838 <AmiBlitz3.ab3@1432> RTS
0001F840 <AmiBlitz3.ab3@1436>   MOVE.w #-1,flag_noPED
0001F842 <AmiBlitz3.ab3@1437> RTS
0001F84A <AmiBlitz3.ab3@1441>   MOVE.w #-1,flag_noCLI
0001F84C <AmiBlitz3.ab3@1442> RTS
0001F876 <AmiBlitz3.ab3@1445>   !basic
0001F89E <AmiBlitz3.ab3@1446>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001F8AE <AmiBlitz3.ab3@1447>     Poke.w ?word_WriteDebugFileNow,0
0001F8CC <AmiBlitz3.ab3@1448>   !asm
0001F8CE <AmiBlitz3.ab3@1449> RTS
0001F8F8 <AmiBlitz3.ab3@1452>   !basic
0001F908 <AmiBlitz3.ab3@1453>   Poke.w ?word_WriteDebugFileNow,0
0001F91A <AmiBlitz3.ab3@1454>   If dbg_fid>=0
0001F930 <AmiBlitz3.ab3@1455>     file_Close{dbg_fid} : dbg_fid = -1
0001F942 <AmiBlitz3.ab3@1457>   If dbg_fid.l<0
0001F944 <AmiBlitz3.ab3@1458>     CLR.l d0
0001F982 <AmiBlitz3.ab3@1459>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001F986 <AmiBlitz3.ab3@1460>     dbg_Create.l = PutD0
0001F990 <AmiBlitz3.ab3@1461>     If (dbg_Create) ; only when set!
0001F9A0 <AmiBlitz3.ab3@1462>       exefileP.l = Peek.l (?ptr_newexefilename)
0001F9C8 <AmiBlitz3.ab3@1463>       exefile.s = ""
0001F9FA <AmiBlitz3.ab3@1464>       If exefileP Then exefile.s = Peek.s(exefileP)
0001FA32 <AmiBlitz3.ab3@1465>       If exefile><""
0001FA88 <AmiBlitz3.ab3@1466>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001FA9A <AmiBlitz3.ab3@1467>         If dbg_fid>=0
0001FAAC <AmiBlitz3.ab3@1468>           Poke.w ?word_WriteDebugFileNow,-1
0001FAB8 <AmiBlitz3.ab3@1471>       oldhunkoffset.l = -1
0001FAE0 <AmiBlitz3.ab3@1472>       oldfile.s       = ""
0001FAFE <AmiBlitz3.ab3@1475>   !asm
0001FB00 <AmiBlitz3.ab3@1476> RTS
0001FB06 <AmiBlitz3.ab3@1479> TST.w word_WriteDebugFileNow
0001FB0A <AmiBlitz3.ab3@1480> BEQ 'skipdebugfile
0001FB34 <AmiBlitz3.ab3@1481> !basic
0001FB46 <AmiBlitz3.ab3@1482>   If dbg_fid>=0
0001FB58 <AmiBlitz3.ab3@1483>     pass.l          = Peek.w(?pass)
0001FB6A <AmiBlitz3.ab3@1484>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001FB8E <AmiBlitz3.ab3@1485> 
0001FB94 <AmiBlitz3.ab3@1486>       oldhunkoffset.l = hunkoffset.l
0001FBC8 <AmiBlitz3.ab3@1487>       oldfile.s       = codefile.s
0001FBE4 <AmiBlitz3.ab3@1488>       If Peek.w (?ininclude)>0
0001FBF4 <AmiBlitz3.ab3@1489>         codeline.l = Peek.l(?includeline);-1
0001FC64 <AmiBlitz3.ab3@1490>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001FC6A <AmiBlitz3.ab3@1491>       Else
0001FC98 <AmiBlitz3.ab3@1492>         !ComData_LEA{comStr_SourceName,A0}
0001FC9A <AmiBlitz3.ab3@1493>         MOVE.l A0,D0
0001FC9E <AmiBlitz3.ab3@1494>         sourceP.l = PutD0
0001FCC6 <AmiBlitz3.ab3@1495>         codefile.s = Peek.s(sourceP)
0001FCD6 <AmiBlitz3.ab3@1496>         codeline.l = Peek.l(?linenumat)
0001FCFE <AmiBlitz3.ab3@1498>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001FD52 <AmiBlitz3.ab3@1499>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001FD62 <AmiBlitz3.ab3@1506>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001FD6C <AmiBlitz3.ab3@1507>         If *sourceLine
0001FD82 <AmiBlitz3.ab3@1508>           MaxLen detokenline.s = 65536
0001FDC4 <AmiBlitz3.ab3@1509>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001FDD4 <AmiBlitz3.ab3@1510>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001FE00 <AmiBlitz3.ab3@1511>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001FE2E <AmiBlitz3.ab3@1512>           If written>0 Then Poke.b &detokenline+written-1,0
0001FE58 <AmiBlitz3.ab3@1513>           sourceLineText.s = Peek.s(&detokenline)
0001FE5E <AmiBlitz3.ab3@1514>         Else
0001FE86 <AmiBlitz3.ab3@1515>           sourceLineText = "NULL"
0001FF4E <AmiBlitz3.ab3@1518>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001FF6C <AmiBlitz3.ab3@1524> !asm
0001FF6E <AmiBlitz3.ab3@1526> RTS
0001FF70 <AmiBlitz3.ab3@1528> word_WriteDebugFileNow: Dc.w 0
0001FF72 <AmiBlitz3.ab3@1530> flag_noPED:  Ds.w 1                                        ;closeed org source
0001FF74 <AmiBlitz3.ab3@1531> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001FF78 <AmiBlitz3.ab3@1535>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001FF7E <AmiBlitz3.ab3@1536>   MOVEA.l _execbase,A6
0001FF82 <AmiBlitz3.ab3@1537>   JSR _CacheClearU(A6)
0001FF86 <AmiBlitz3.ab3@1538>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001FF88 <AmiBlitz3.ab3@1539> RTS
0001FF8C <AmiBlitz3.ab3@1542>   MOVEM.l A2-A3,-(A7)
0001FF92 <AmiBlitz3.ab3@1543>   CLR.b doublepeek
0001FF98 <AmiBlitz3.ab3@1544>   MOVE.l A5,lastsourcepos
0001FF9E <AmiBlitz3.ab3@1545>    JSR getchar
0001FFA2 <AmiBlitz3.ab3@1546>   CMP.w #$2E,D0
0001FFA6 <AmiBlitz3.ab3@1547>    BEQ.w JL_0_49B4b
0001FFAC <AmiBlitz3.ab3@1548>   MOVEA.l defaulttype,A2
0001FFB0 <AmiBlitz3.ab3@1549>   CMP.w #$24,D0
0001FFB4 <AmiBlitz3.ab3@1550>    BNE.w JL_0_49CAb
0001FFB6 <AmiBlitz3.ab3@1551>   MOVEQ.l #$07,D1
0001FFBA <AmiBlitz3.ab3@1552> BRA.w JL_0_49DEb
0001FFC0 <AmiBlitz3.ab3@1555>   JSR getparameter2
0001FFC4 <AmiBlitz3.ab3@1556>   BEQ.w syntaxerrb
0001FFCA <AmiBlitz3.ab3@1557>   LEA newtypebase,A2
0001FFD0 <AmiBlitz3.ab3@1558>   JSR findtype
0001FFD4 <AmiBlitz3.ab3@1559>   BNE.w notypeerrb
0001FFDE <AmiBlitz3.ab3@1564>   MOVE.w oldqflag,instringon
0001FFE4 <AmiBlitz3.ab3@1565>   MOVEA.l lastsourcepos,A5
0001FFEA <AmiBlitz3.ab3@1567>   MOVE.l a2,functionreturntype
0001FFF2 <AmiBlitz3.ab3@1568>   CMPI.l #$100,$4(A2)
0001FFF6 <AmiBlitz3.ab3@1569>   BLE.w 'isvar
0001FFF8 <AmiBlitz3.ab3@1573>   MOVEQ #3,d1
0001FFFC <AmiBlitz3.ab3@1574>   BRA JL_0_49DEb
00020000 <AmiBlitz3.ab3@1581>   MOVE.w $6(A2),D1
00020006 <AmiBlitz3.ab3@1582>   CMP.w #8,8(a2)
0002000A <AmiBlitz3.ab3@1583>   BNE 'l1
00020012 <AmiBlitz3.ab3@1584>   MOVE.b #1,doublepeek
00020018 <AmiBlitz3.ab3@1588>   MOVE.w D1,convsize
0002001C <AmiBlitz3.ab3@1589>   MOVEM.l (A7)+,A2-A3
0002001E <AmiBlitz3.ab3@1590> RTS
00020024 <AmiBlitz3.ab3@1592> notypeerrb JMP notypeerr
0002002A <AmiBlitz3.ab3@1593> illtypeerrb JMP illtypeerr
00020030 <AmiBlitz3.ab3@1594> syntaxerrb JMP syntaxerr
0002003A <AmiBlitz3.ab3@1639>   ADD.l #1,number_of_builds
00020040 <AmiBlitz3.ab3@1641>   CLR.w debugversion
00020046 <AmiBlitz3.ab3@1642>   CLR.w flag_noPED
0002004C <AmiBlitz3.ab3@1643>   CLR.w flag_noCLI
00020054 <AmiBlitz3.ab3@1646>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020058 <AmiBlitz3.ab3@1647>     BSR.w startcompile
00020062 <AmiBlitz3.ab3@1648>     CMP.l #"NORE",reqmode
00020066 <AmiBlitz3.ab3@1649>   BEQ 'l1
0002006C <AmiBlitz3.ab3@1652>   TST.w anyerrs
00020070 <AmiBlitz3.ab3@1653>    BNE.w JL_0_3482
00020074 <AmiBlitz3.ab3@1655>   MOVE.w flag_noPED(PC),D1
00020078 <AmiBlitz3.ab3@1656>    BEQ.w skip_closingGUI
000200AA <AmiBlitz3.ab3@1661>   !ComData_JSR{comFunc_CloseGUI}
000200AE <AmiBlitz3.ab3@1662> BRA.b runprogram
000200B2 <AmiBlitz3.ab3@1666>   BSR.w compilerequester
000200B8 <AmiBlitz3.ab3@1669>   MOVEA.l _dosbase,A6
000200BE <AmiBlitz3.ab3@1670>   LEA exepath,a0
000200C0 <AmiBlitz3.ab3@1671>   MOVE.l a0,d1
000200C2 <AmiBlitz3.ab3@1672>   MOVEQ #-2,d2
000200C6 <AmiBlitz3.ab3@1673>   JSR _Lock(a6)                                            ;lock
000200CC <AmiBlitz3.ab3@1674>   MOVE.l d0,exelock
000200D2 <AmiBlitz3.ab3@1675>   MOVE.l #0,d1
000200D6 <AmiBlitz3.ab3@1676>   JSR _CurrentDir(A6)
000200DC <AmiBlitz3.ab3@1677>   MOVE.l D0,lock_currentdir
000200DE <AmiBlitz3.ab3@1678>   MOVE.l D0,D1
000200E2 <AmiBlitz3.ab3@1679>   JSR _CurrentDir(A6)
000200E8 <AmiBlitz3.ab3@1680>   CLR.l ptr_exetask
000200EE <AmiBlitz3.ab3@1689>   MOVE.l #str_process_name,D1
000200F0 <AmiBlitz3.ab3@1690>   MOVEQ.l #$00,D2
000200F6 <AmiBlitz3.ab3@1691>   MOVE.l #proc_seglist,D3
000200F8 <AmiBlitz3.ab3@1692>   LSR.l #2,D3
000200FE <AmiBlitz3.ab3@1693>   MOVE.l stacksize,D4
00020104 <AmiBlitz3.ab3@1694>   MOVEA.l _dosbase,A6
00020108 <AmiBlitz3.ab3@1695>   JSR _CreateProc(A6)                                      ;runtask
0002010A <AmiBlitz3.ab3@1696>   TST.l D0
0002010E <AmiBlitz3.ab3@1697>    BEQ ErrorRunningProg
00020144 <AmiBlitz3.ab3@1699>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0002014A <AmiBlitz3.ab3@1701>   TST.w flag_noPED
0002014E <AmiBlitz3.ab3@1702>    BNE.b JL_0_344E
00020152 <AmiBlitz3.ab3@1703>   BSR.w close_compilewin
00020158 <AmiBlitz3.ab3@1706>   CLR.l firstlocal
0002015E <AmiBlitz3.ab3@1707>   CLR.l firstglob
00020162 <AmiBlitz3.ab3@1708>   MOVE.w flag_noPED(PC),D1
00020166 <AmiBlitz3.ab3@1709>   BEQ.w skip_openGUI
00020198 <AmiBlitz3.ab3@1713>   !ComData_JSR{comFunc_CreateGUI}
0002019A <AmiBlitz3.ab3@1723> RTS
000201A4 <AmiBlitz3.ab3@1726> MOVE.l #1,_runerror
000201A8 <AmiBlitz3.ab3@1727> BRA JL_0_344E
000201AC <AmiBlitz3.ab3@1729> _runerror: Dc.l 0
000201B0 <AmiBlitz3.ab3@1730> lock_currentdir:    Ds.l 1                                          ;tasklock org source
000201B4 <AmiBlitz3.ab3@1731> ptr_exetask:        Ds.l 1                                          ;panictask org source
000201B8 <AmiBlitz3.ab3@1732> signalNum:          Ds.l 1                                          ;panicbit org source
000201BC <AmiBlitz3.ab3@1733> signals:            Ds.l 1                                          ;panicmask org source
000201D2 <AmiBlitz3.ab3@1735> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
000201D7 <AmiBlitz3.ab3@1736>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
000201D8 <AmiBlitz3.ab3@1737> Even4
000201DC <AmiBlitz3.ab3@1739> ptr_ThisTask:       Ds.l 1                                          ;length
000201E0 <AmiBlitz3.ab3@1740> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
000201E6 <AmiBlitz3.ab3@1744>   MOVEA.l $4,A0
000201EE <AmiBlitz3.ab3@1745>   MOVE.l  $114(A0),ptr_exetask
000201F4 <AmiBlitz3.ab3@1747>   MOVEA.l _dosbase,A6
000201FA <AmiBlitz3.ab3@1748>   MOVE.l exelock,D1
000201FE <AmiBlitz3.ab3@1749>   JSR _CurrentDir(A6)
00020234 <AmiBlitz3.ab3@1754>   !ComData_SetB{comByte_RunningFlag,#1}
00020238 <AmiBlitz3.ab3@1760>   MOVE.w flag_noCLI(PC),D1
0002023C <AmiBlitz3.ab3@1761>    BNE.b skip_openconsole
0002026E <AmiBlitz3.ab3@1765>   !ComData_JSR{comFunc_OpenConsole}
00020272 <AmiBlitz3.ab3@1768>   BSR.w calcvbr
00020278 <AmiBlitz3.ab3@1769>   MOVEA.l vbr,A0
0002027E <AmiBlitz3.ab3@1774>   CLR.w dirmode
00020284 <AmiBlitz3.ab3@1775>   CLR.l firstglob
0002028A <AmiBlitz3.ab3@1776>   CLR.l firstlocal
00020290 <AmiBlitz3.ab3@1778>   MOVE.l stacksize,D2
00020296 <AmiBlitz3.ab3@1779>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0002029C <AmiBlitz3.ab3@1780>   LEA str_cliarguments,A0                                   ;cli arguement
000202A2 <AmiBlitz3.ab3@1781>   MOVEA.l destbufferstart,A1
000202A6 <AmiBlitz3.ab3@1782>   BSR.w Aclearcache
000202A8 <AmiBlitz3.ab3@1785>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
000202AE <AmiBlitz3.ab3@1787>   MOVEA.l vbr,A0
000202B4 <AmiBlitz3.ab3@1789>   CLR.l firstglob
000202BA <AmiBlitz3.ab3@1790>   CLR.l firstlocal
000202C0 <AmiBlitz3.ab3@1791>   MOVEA.l _dosbase,A6
000202C6 <AmiBlitz3.ab3@1792>   MOVE.l exelock,d1
000202CA <AmiBlitz3.ab3@1793>   BEQ 'nolock
000202CE <AmiBlitz3.ab3@1794>   JSR _UnLock(a6)
00020304 <AmiBlitz3.ab3@1799>   !ComData_SetB{comByte_RunningFlag,#0}
00020308 <AmiBlitz3.ab3@1802>   MOVE.w flag_noCLI(PC),D1
0002030C <AmiBlitz3.ab3@1803>    BNE.b skip_closeconsole
0002033E <AmiBlitz3.ab3@1807>   !ComData_JSR{comFunc_CloseConsole}
00020346 <AmiBlitz3.ab3@1810>   MOVE.w #$0001,stopit
0002034A <AmiBlitz3.ab3@1811>   MOVE.l signals(PC),D0
00020350 <AmiBlitz3.ab3@1812>   MOVEA.l ptr_ThisTask,A1
00020356 <AmiBlitz3.ab3@1813>   MOVEA.l _execbase,A6
0002035A <AmiBlitz3.ab3@1814>   JSR _Signal(A6)
0002035C <AmiBlitz3.ab3@1815> RTS
00020362 <AmiBlitz3.ab3@1819>   MOVEA.l _execbase,A6
00020366 <AmiBlitz3.ab3@1820>   MOVE.w $128(A6),D0
00020368 <AmiBlitz3.ab3@1821>   MOVEQ.l #$00,D1
0002036C <AmiBlitz3.ab3@1822>   ANDI.w #$F,D0
00020370 <AmiBlitz3.ab3@1825>     BEQ.b calcvbr__skip
00020372 <AmiBlitz3.ab3@1826>     ADDQ.w #1,D1
00020374 <AmiBlitz3.ab3@1827>     LSR.w #1,D0
00020378 <AmiBlitz3.ab3@1828> BRA.b calcvbr_loop
0002037A <AmiBlitz3.ab3@1831>   MOVEQ.l #$00,D2
0002037E <AmiBlitz3.ab3@1832>   CMP.w #$2,D1
00020382 <AmiBlitz3.ab3@1833>    BCS.b calcvbr__skip2
00020388 <AmiBlitz3.ab3@1834>   MOVEA.l _execbase,A6
0002038C <AmiBlitz3.ab3@1835>   JSR _SuperState(A6)
00020390 <AmiBlitz3.ab3@1836>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020394 <AmiBlitz3.ab3@1837>   JSR _UserState(A6)
0002039A <AmiBlitz3.ab3@1840>   MOVE.l D2,vbr
0002039C <AmiBlitz3.ab3@1841> RTS
000203A2 <AmiBlitz3.ab3@1845>   LEA instrtab,a0
000203A8 <AmiBlitz3.ab3@1846>   MOVE.l #labelhash-instrtab,d0
000203AA <AmiBlitz3.ab3@1847>   ASR.l #2,d0
000203AC <AmiBlitz3.ab3@1848>   SUBQ.l #1,d0
000203AE <AmiBlitz3.ab3@1851>   CLR.l (a0)+
000203B0 <AmiBlitz3.ab3@1852>   SUBQ.l #1,d0
000203B4 <AmiBlitz3.ab3@1853>   BNE 'l10
000203B8 <AmiBlitz3.ab3@1854>   BSR.w call_setpointerbusy
000203BC <AmiBlitz3.ab3@1855>   BSR.w free_userlibs
000203C0 <AmiBlitz3.ab3@1856>   BSR.w scan_for_userlibs
000203C4 <AmiBlitz3.ab3@1857>   BSR.w JL_0_7082
000203C8 <AmiBlitz3.ab3@1858> BRA.w call_setpointernormal
000203F2 <AmiBlitz3.ab3@1864>   !basic
0002042C <AmiBlitz3.ab3@1865>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
0002043C <AmiBlitz3.ab3@1867>   deflibNameP.l = Peek.l(?deflib)
00020446 <AmiBlitz3.ab3@1868>   If deflibNameP
00020478 <AmiBlitz3.ab3@1869>     If Peek.s(deflibNameP)<>""
000204C2 <AmiBlitz3.ab3@1870>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
000204C8 <AmiBlitz3.ab3@1871>     Else
00020502 <AmiBlitz3.ab3@1872>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020508 <AmiBlitz3.ab3@1874>   Else
00020542 <AmiBlitz3.ab3@1875>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0002057C <AmiBlitz3.ab3@1876>     error{"INTERNAL: Invalid deflib name pointer!"}
0002059A <AmiBlitz3.ab3@1878>   !asm
000205A0 <AmiBlitz3.ab3@1883>   MOVE.l #str_path_userlibs,D1
000205A2 <AmiBlitz3.ab3@1884>   MOVEQ.l #-$02,D2
000205A8 <AmiBlitz3.ab3@1885>   MOVEA.l _dosbase,A6
000205AC <AmiBlitz3.ab3@1886>   JSR _Lock(A6)
000205AE <AmiBlitz3.ab3@1887>   MOVE.l D0,D7
000205B2 <AmiBlitz3.ab3@1888>    BEQ.w exit_get_libraries
000205B4 <AmiBlitz3.ab3@1889>   MOVE.l D7,D1
000205BA <AmiBlitz3.ab3@1890>   MOVE.l #ptr_parameterstore,D2
000205BE <AmiBlitz3.ab3@1891>   JSR _Examine(A6)
000205C0 <AmiBlitz3.ab3@1892>   TST.l D0
000205C4 <AmiBlitz3.ab3@1893>   BEQ.w unlock_and_exit_get_libraries
000205CA <AmiBlitz3.ab3@1894>   MOVE.l fib_DirEntryType,D0
000205CE <AmiBlitz3.ab3@1895>   BMI.w unlock_and_exit_get_libraries
000205D0 <AmiBlitz3.ab3@1900>     MOVE.l D7,D1
000205D6 <AmiBlitz3.ab3@1901>     MOVE.l #ptr_parameterstore,D2
000205DC <AmiBlitz3.ab3@1902>     MOVEA.l _dosbase,A6
000205E0 <AmiBlitz3.ab3@1903>     JSR _ExNext(A6)
000205E2 <AmiBlitz3.ab3@1904>     TST.l D0
000205E6 <AmiBlitz3.ab3@1905>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
000205EC <AmiBlitz3.ab3@1907>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
000205F0 <AmiBlitz3.ab3@1908>     BPL.w scan_libsdrawer                                  ; skip directories
000205F6 <AmiBlitz3.ab3@1910>     LEA fib_FileName,A0                                    ; pruefen ob infofile
000205FA <AmiBlitz3.ab3@1911>     BSR.w check_for_infoextention
000205FE <AmiBlitz3.ab3@1912>     BEQ.w scan_libsdrawer
00020604 <AmiBlitz3.ab3@1914>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020606 <AmiBlitz3.ab3@1915>     MOVEQ.l #$26,D0
00020608 <AmiBlitz3.ab3@1916>     MOVEQ.l #$01,D1
0002060E <AmiBlitz3.ab3@1917>     MOVE.l mempool,a0
00020612 <AmiBlitz3.ab3@1918>     JSR _AllocPooled(a6)
00020618 <AmiBlitz3.ab3@1920>     MOVEA.l _dosbase,A6
0002061A <AmiBlitz3.ab3@1921>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020620 <AmiBlitz3.ab3@1924>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020622 <AmiBlitz3.ab3@1927>     MOVE.l (A0),D5
00020626 <AmiBlitz3.ab3@1928>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020628 <AmiBlitz3.ab3@1929>     MOVEA.l D5,A2
0002062A <AmiBlitz3.ab3@1930>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
00020630 <AmiBlitz3.ab3@1933>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
00020632 <AmiBlitz3.ab3@1936>       MOVEQ.l #$00,D0
00020634 <AmiBlitz3.ab3@1937>       MOVE.b (A1)+,D0
00020638 <AmiBlitz3.ab3@1938>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0002063A <AmiBlitz3.ab3@1939>       MOVEQ.l #$00,D1
0002063C <AmiBlitz3.ab3@1940>       MOVE.b (A2)+,D1
00020640 <AmiBlitz3.ab3@1941>        BEQ.w JL_0_371C
00020662 <AmiBlitz3.ab3@1942>       !compare1                                            ;bsr.w tstalpha
00020666 <AmiBlitz3.ab3@1943>       BNE.w JL_0_3702
0002066A <AmiBlitz3.ab3@1944>       ANDI.w #$DF,D0
0002066C <AmiBlitz3.ab3@1947>       EXG.l D0,D1
0002068E <AmiBlitz3.ab3@1948>       !compare1                                            ;bsr.w tstalpha
00020692 <AmiBlitz3.ab3@1949>       BNE.w JL_0_3710
00020696 <AmiBlitz3.ab3@1950>       ANDI.w #$DF,D0
00020698 <AmiBlitz3.ab3@1953>       EXG.l D0,D1
0002069A <AmiBlitz3.ab3@1954>       CMP.b D1,D0
0002069E <AmiBlitz3.ab3@1955>     BEQ.w JL_0_36E6
000206A2 <AmiBlitz3.ab3@1956>     BCS.w JL_0_3722
000206A4 <AmiBlitz3.ab3@1959>     MOVEA.l D5,A0
000206A8 <AmiBlitz3.ab3@1960> BRA.w JL_0_36D6
000206AA <AmiBlitz3.ab3@1963>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
000206AC <AmiBlitz3.ab3@1964>     MOVE.l (A0),(A1)
000206AE <AmiBlitz3.ab3@1965>     MOVE.l A1,(A0)
000206B0 <AmiBlitz3.ab3@1966>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
000206B4 <AmiBlitz3.ab3@1967>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
000206BA <AmiBlitz3.ab3@1968>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
000206BC <AmiBlitz3.ab3@1971>       MOVE.b (A0)+,(A1)+
000206C0 <AmiBlitz3.ab3@1972>     BNE.w JL_0_3734
000206C4 <AmiBlitz3.ab3@1973> BRA.w scan_libsdrawer
000206C6 <AmiBlitz3.ab3@1976>   MOVE.l D7,D1
000206CC <AmiBlitz3.ab3@1977>   MOVEA.l _dosbase,A6
000206D0 <AmiBlitz3.ab3@1978>   JSR _UnLock(A6)
000206D2 <AmiBlitz3.ab3@1979>   MOVEQ.l #-$01,D0
000206D4 <AmiBlitz3.ab3@1982> RTS
000206D6 <AmiBlitz3.ab3@1985>   MOVE.l D7,D1
000206DC <AmiBlitz3.ab3@1986>   MOVEA.l _dosbase,A6
000206E0 <AmiBlitz3.ab3@1987>   JSR _UnLock(A6)
000206E2 <AmiBlitz3.ab3@1988>   MOVEQ.l #$00,D0
000206E4 <AmiBlitz3.ab3@1989> RTS
000206EA <AmiBlitz3.ab3@1993>   MOVEA.l _execbase,A6
000206F0 <AmiBlitz3.ab3@1994>   MOVEA.l ptr_userlibs_list,A2
000206F6 <AmiBlitz3.ab3@1995>   CLR.l ptr_userlibs_list
000206FA <AmiBlitz3.ab3@1998>     CMPA.w #$0,A2
000206FE <AmiBlitz3.ab3@1999>     BEQ.w exit_free_userlib
00020700 <AmiBlitz3.ab3@2000>       MOVEA.l A2,A1
00020702 <AmiBlitz3.ab3@2001>       MOVEQ.l #$26,D0
00020704 <AmiBlitz3.ab3@2002>       MOVEA.l (A2),A2
0002070A <AmiBlitz3.ab3@2003>       MOVE.l mempool,a0
00020710 <AmiBlitz3.ab3@2004>       MOVEA.l _execbase,A6
00020714 <AmiBlitz3.ab3@2005>       JSR _FreePooled(A6)
00020718 <AmiBlitz3.ab3@2006> BRA.w loop_free_userlib
0002071A <AmiBlitz3.ab3@2009> RTS
0002071C <AmiBlitz3.ab3@2012> pass:  Dc.w 0                                             ; smallpass org source
0002071E <AmiBlitz3.ab3@2013> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020724 <AmiBlitz3.ab3@2017>   MOVE.l A7,errstack                                      ;startcompile
0002072A <AmiBlitz3.ab3@2026>   CLR.l reqmode
00020734 <AmiBlitz3.ab3@2028>   MOVE.l #Aclearallvars,errcont
0002073E <AmiBlitz3.ab3@2029>   MOVE.l #concomstack,concomsp
00020742 <AmiBlitz3.ab3@2037>   MOVE.w #1450,D0
00020744 <AmiBlitz3.ab3@2038>   LSR.w #3,D0
00020746 <AmiBlitz3.ab3@2039>   SUBQ.w #7,D0                                             ; 173
0002074C <AmiBlitz3.ab3@2040>   MOVE.w D0,progressbar_width
0002074E <AmiBlitz3.ab3@2041>   SWAP D0
00020750 <AmiBlitz3.ab3@2042>   CLR.w D0
00020756 <AmiBlitz3.ab3@2043>   MOVE.l numlines,d1
0002075A <AmiBlitz3.ab3@2044>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0002075C <AmiBlitz3.ab3@2046>   TST.w D0
00020760 <AmiBlitz3.ab3@2047>   BNE.w JL_0_37C0
00020762 <AmiBlitz3.ab3@2048>   MOVEQ.l #-$01,D0
00020768 <AmiBlitz3.ab3@2051>   MOVE.w D0,progress_per_line
00020770 <AmiBlitz3.ab3@2060>   BTST #$7,use_debugger
00020774 <AmiBlitz3.ab3@2062>   BNE 'debugon
0002077A <AmiBlitz3.ab3@2063>   CLR.w debugmode
0002077E <AmiBlitz3.ab3@2064> BRA.b 'debugoff
00020784 <AmiBlitz3.ab3@2067>   SNE debugmode
000207BC <AmiBlitz3.ab3@2075>   !ComData_SetB{comByte_DebugMode,debugmode}
000207C2 <AmiBlitz3.ab3@2078>   CLR.w dirmode                                            ;direct mode flag
000207C8 <AmiBlitz3.ab3@2079>   CLR.w ezerr                                              ;quiet error
000207CE <AmiBlitz3.ab3@2080>   CLR.l currentfunction
000207D4 <AmiBlitz3.ab3@2081>   CLR.w connest
000207DA <AmiBlitz3.ab3@2082>   CLR.w varmode
000207E0 <AmiBlitz3.ab3@2083>   CLR.w proceduremode
000207E6 <AmiBlitz3.ab3@2084>   CLR.w ininclude
000207EC <AmiBlitz3.ab3@2085>   CLR.w intstring
000207F2 <AmiBlitz3.ab3@2086>   CLR.w pass
000207FA <AmiBlitz3.ab3@2087>   MOVE.w #0,compiler_job
00020800 <AmiBlitz3.ab3@2088>   CLR.l funcscanon
00020806 <AmiBlitz3.ab3@2097>   CLR.l funcscanon
0002080A <AmiBlitz3.ab3@2098>   BSR.w compileall
00020810 <AmiBlitz3.ab3@2099> 
00020816 <AmiBlitz3.ab3@2100>   TST.l errorcounter
0002081A <AmiBlitz3.ab3@2101>   BEQ _skiperrorstop
0002081C <AmiBlitz3.ab3@2102>   RTS
00020822 <AmiBlitz3.ab3@2105>   MOVE.w dontwrite,d0
00020826 <AmiBlitz3.ab3@2106>   CMP.w #1,d0
0002082A <AmiBlitz3.ab3@2107>   BNE 'l3
00020830 <AmiBlitz3.ab3@2108>   TST.l errorcounter
00020834 <AmiBlitz3.ab3@2109>   BNE 'l3
0002083A <AmiBlitz3.ab3@2110>   CLR.w dontwrite
0002083E <AmiBlitz3.ab3@2111>   BSR compileall                                           ;if a function is not found
00020844 <AmiBlitz3.ab3@2112>   ADDQ.w #1,pass
00020882 <AmiBlitz3.ab3@2117>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020886 <AmiBlitz3.ab3@2118>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
0002088C <AmiBlitz3.ab3@2119>   LEA firstproc,a0
00020892 <AmiBlitz3.ab3@2120>   CLR.l savefuncspace
00020894 <AmiBlitz3.ab3@2121>   MOVE.l (a0),d0
00020896 <AmiBlitz3.ab3@2125>     MOVE.l d0,a0
0002089A <AmiBlitz3.ab3@2126>     BEQ 'out
0002089E <AmiBlitz3.ab3@2127>     TST.b isfunc(a0)
000208A2 <AmiBlitz3.ab3@2128>     BNE 'nex
000208A6 <AmiBlitz3.ab3@2129>     MOVEM.l d2/a6/a0,-(a7)
000208A8 <AmiBlitz3.ab3@2131>     MOVEQ #0,d0
000208AC <AmiBlitz3.ab3@2132>     MOVE.b $21+#funcentry_extend-1(a0),d0
000208B0 <AmiBlitz3.ab3@2133>     SUB.w #$21+#funcentry_extend,d0
000208B4 <AmiBlitz3.ab3@2134>     ADD.w #16,d0
000208BA <AmiBlitz3.ab3@2135>     MOVE.l #$10000,d1
000208BC <AmiBlitz3.ab3@2136>     MOVE.l d0,d2
000208C2 <AmiBlitz3.ab3@2137>     MOVEA.l _execbase,A6
000208C6 <AmiBlitz3.ab3@2138>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
000208C8 <AmiBlitz3.ab3@2139>     MOVE.l d0,a1
000208CC <AmiBlitz3.ab3@2140>     MOVE.l d2,4(a1)
000208D2 <AmiBlitz3.ab3@2141>     MOVE.l unusedfunc,(a1)
000208D8 <AmiBlitz3.ab3@2142>     MOVE.l d0,unusedfunc
000208DC <AmiBlitz3.ab3@2143>     MOVEM.l (a7)+,a6/a0/d2
000208E0 <AmiBlitz3.ab3@2144>     MOVE.l isfunc+1(a0),d0
000208E2 <AmiBlitz3.ab3@2145>     ADDQ.l #6,d0
000208E8 <AmiBlitz3.ab3@2146>     ADD.l d0,savefuncspace
000208EC <AmiBlitz3.ab3@2149>     MOVE.l d0,8(a1)
000208F0 <AmiBlitz3.ab3@2150>     LEA 12(a1),a1
000208F2 <AmiBlitz3.ab3@2151>     MOVE.l a0,-(a7)
000208F6 <AmiBlitz3.ab3@2152>     LEA $21+#funcentry_extend(a0),a0
000208F8 <AmiBlitz3.ab3@2155>       MOVE.b (a0)+,(a1)+
000208FC <AmiBlitz3.ab3@2156>     BNE 'l1
000208FE <AmiBlitz3.ab3@2157>     MOVE.l (a7)+,a0
00020900 <AmiBlitz3.ab3@2160>     MOVE.l (a0),d0
00020904 <AmiBlitz3.ab3@2161> BRA 'lr1
0002090C <AmiBlitz3.ab3@2164>   BTST #$7,make_smallestcode
00020910 <AmiBlitz3.ab3@2165>   BEQ.b JL_0_3844                                           ;optimize for executable
00020916 <AmiBlitz3.ab3@2166>   CLR.l morememadd
0002091A <AmiBlitz3.ab3@2168>   BSR.w alloxadj
0002091E <AmiBlitz3.ab3@2169>   BEQ.w JL_0_388A
00020922 <AmiBlitz3.ab3@2172>   BSR.w compileall
00020928 <AmiBlitz3.ab3@2173>   ADDQ.w #1,pass
0002092E <AmiBlitz3.ab3@2176>   MOVE.w dontwrite,D1
00020932 <AmiBlitz3.ab3@2177>   BEQ.w JL_0_38A2
00020936 <AmiBlitz3.ab3@2197> BRA.w JL_0_3896
0002093E <AmiBlitz3.ab3@2208>   MOVE.w #$FFFF,anyerrs
00020942 <AmiBlitz3.ab3@2209> BRA.w JL_0_38A2
00020946 <AmiBlitz3.ab3@2212>   BSR.w alloxinc                                          ;increase all by 50%
0002094A <AmiBlitz3.ab3@2213>   BEQ.w Aclearallvars
0002094E <AmiBlitz3.ab3@2214> BRA.w JL_0_3824
00020952 <AmiBlitz3.ab3@2226> BRA.w JL_0_38A6                                            ;???????
00020958 <AmiBlitz3.ab3@2230>   JSR freereps
0002095E <AmiBlitz3.ab3@2231>   JSR freesels
00020964 <AmiBlitz3.ab3@2232>   JSR AJL_0_6DF2
0002096A <AmiBlitz3.ab3@2233>   JSR freepends
00020970 <AmiBlitz3.ab3@2234>   JSR freeifs
00020976 <AmiBlitz3.ab3@2235>   JSR AJL_0_C188
0002097C <AmiBlitz3.ab3@2236>   JSR AJL_0_C15C
00020982 <AmiBlitz3.ab3@2237>   JSR AJL_0_D9BC
00020988 <AmiBlitz3.ab3@2240> JMP cleartemplabel
0002098C <AmiBlitz3.ab3@2243> mempool2:  Dc.l 0
00020992 <AmiBlitz3.ab3@2247>   JSR Aclearcache
0002099A <AmiBlitz3.ab3@2249>   BTST #$7,use_debugger
0002099E <AmiBlitz3.ab3@2251>   BNE 'debugon
000209A4 <AmiBlitz3.ab3@2252>   CLR.w debugmode
000209A8 <AmiBlitz3.ab3@2253> BRA.b 'debugoff
000209AE <AmiBlitz3.ab3@2256>   SNE debugmode
000209E6 <AmiBlitz3.ab3@2261>   !ComData_SetB{comByte_DebugMode,debugmode}
000209EC <AmiBlitz3.ab3@2263>   LEA regtable,a0
000209EE <AmiBlitz3.ab3@2264>   MOVEQ #10,d0
000209F0 <AmiBlitz3.ab3@2267>     CLR.l (a0)+
000209F4 <AmiBlitz3.ab3@2268>   DBF d0,'l1
000209FA <AmiBlitz3.ab3@2270>   LEA includetemp2,a0
000209FC <AmiBlitz3.ab3@2271>   CLR.b (a0)
00020A06 <AmiBlitz3.ab3@2272>   MOVE.l #7,maxregs
00020A0C <AmiBlitz3.ab3@2273>   CLR.w debugnest
00020A12 <AmiBlitz3.ab3@2274>   CLR.b funcparloop
00020A18 <AmiBlitz3.ab3@2275>   CLR.b nostringopt
00020A1E <AmiBlitz3.ab3@2276>   CLR.b firsttime
00020A24 <AmiBlitz3.ab3@2277>   CLR.l lastdestpointer
00020A2A <AmiBlitz3.ab3@2278>   CLR.l lastwritedat
00020A30 <AmiBlitz3.ab3@2279>   CLR.l prevwritedat
00020A36 <AmiBlitz3.ab3@2280>   CLR.l includeline
00020A3C <AmiBlitz3.ab3@2281>   CLR.b incnif
00020A42 <AmiBlitz3.ab3@2282>   CLR.b formode
00020A48 <AmiBlitz3.ab3@2283>   CLR.b funccall
00020A4E <AmiBlitz3.ab3@2284>   CLR.w objectcount
00020A54 <AmiBlitz3.ab3@2285>   CLR.b resdisable
00020A5A <AmiBlitz3.ab3@2286>   CLR.b developobject
00020A60 <AmiBlitz3.ab3@2287>   CLR.b optistring
00020A66 <AmiBlitz3.ab3@2288>   CLR.b optistring2
00020A6C <AmiBlitz3.ab3@2289>   CLR.b optiarray
00020A72 <AmiBlitz3.ab3@2290>   CLR.b quickadd
00020A78 <AmiBlitz3.ab3@2291>   CLR.w newmode
00020A7E <AmiBlitz3.ab3@2292>   CLR.w mode
00020A84 <AmiBlitz3.ab3@2293>   CLR.w string1
00020A8A <AmiBlitz3.ab3@2294>   CLR.b fastfunc
00020A90 <AmiBlitz3.ab3@2295>   CLR.w load_var_size
00020A96 <AmiBlitz3.ab3@2296>   CLR.w load_var_reg
00020A9C <AmiBlitz3.ab3@2297>   CLR.l load_var_addr
00020AA2 <AmiBlitz3.ab3@2298>   CLR.w imm_size
00020AA8 <AmiBlitz3.ab3@2299>   CLR.w imm_reg
00020AAE <AmiBlitz3.ab3@2300>   CLR.l imm_addr
00020AB4 <AmiBlitz3.ab3@2301>   CLR.b _dcb
00020ABA <AmiBlitz3.ab3@2302>   CLR.l nohunkoffset
00020AC0 <AmiBlitz3.ab3@2303>   CLR.b peekaddrsize
00020AC6 <AmiBlitz3.ab3@2304>   CLR.b typecheck
00020ACC <AmiBlitz3.ab3@2305>   CLR.b declare2
00020AD2 <AmiBlitz3.ab3@2306>   CLR.b declare
00020AD8 <AmiBlitz3.ab3@2307>   CLR.l myoline                                          ;check
00020ADE <AmiBlitz3.ab3@2308>   CLR.l myline                                          ;check
00020AE4 <AmiBlitz3.ab3@2309>   CLR.b newvariable
00020AEA <AmiBlitz3.ab3@2310>   CLR.b saved0
00020AF0 <AmiBlitz3.ab3@2311>   CLR.l bsssize
00020AF6 <AmiBlitz3.ab3@2312>   CLR.l chipsize
00020AFC <AmiBlitz3.ab3@2313>   CLR.b infunctioncode
00020B02 <AmiBlitz3.ab3@2314>   CLR.l errorcounter
00020B0C <AmiBlitz3.ab3@2315>   MOVE.l #-1,bssstart
00020B16 <AmiBlitz3.ab3@2316>   MOVE.l #-1,bssend
00020B20 <AmiBlitz3.ab3@2317>   MOVE.l #-1,chipstart
00020B2A <AmiBlitz3.ab3@2318>   MOVE.l #-1,chipend
00020B32 <AmiBlitz3.ab3@2319>   MOVE.w #0,bssmode
00020B38 <AmiBlitz3.ab3@2320>   CLR.w a2offset
00020B3E <AmiBlitz3.ab3@2321>   CLR.w fast
00020B44 <AmiBlitz3.ab3@2322>   CLR.w fpu
00020B4A <AmiBlitz3.ab3@2323>   CLR.b iee
00020B50 <AmiBlitz3.ab3@2324>   CLR.w newsyntax
00020B54 <AmiBlitz3.ab3@2325>   BSR.w JL_0_38A6
00020B5A <AmiBlitz3.ab3@2326>   JSR AJL_0_7962
00020B60 <AmiBlitz3.ab3@2327>   JSR frallvars
00020B66 <AmiBlitz3.ab3@2328>   JSR fralltypes
00020B6C <AmiBlitz3.ab3@2329>   JSR freemacs
00020B72 <AmiBlitz3.ab3@2330>   JSR clearfunctionlist
00020B78 <AmiBlitz3.ab3@2331>   TST.w pass
00020B7E <AmiBlitz3.ab3@2333>   JSR clearlabels
00020B84 <AmiBlitz3.ab3@2334>   JSR clearhash
00020B8A <AmiBlitz3.ab3@2337>   LEA devo,a0
00020B8E <AmiBlitz3.ab3@2338>   MOVEM.l a0-a6/d0-d7,-(a7)
00020B94 <AmiBlitz3.ab3@2339>   LEA ptr_parameterstore,a1
00020B96 <AmiBlitz3.ab3@2342>     MOVE.b (a0)+,(a1)+
00020B9A <AmiBlitz3.ab3@2343>   BNE 'l1b
00020B9C <AmiBlitz3.ab3@2344>   MOVEQ #13,d2
00020BA2 <AmiBlitz3.ab3@2345>   JSR findlabel2
00020BA6 <AmiBlitz3.ab3@2346>   BNE 'd
00020BAA <AmiBlitz3.ab3@2347>   CLR.l 8(a2)
00020BAE <AmiBlitz3.ab3@2350>   MOVEM.l (a7)+,a0-a6/d0-d7
00020BD8 <AmiBlitz3.ab3@2351>   !basic
00020C4C <AmiBlitz3.ab3@2352>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
00020C6A <AmiBlitz3.ab3@2353>   !asm
00020C70 <AmiBlitz3.ab3@2354>   CLR.b returncode
00020C76 <AmiBlitz3.ab3@2355> JMP freeprocvs
00020C7C <AmiBlitz3.ab3@2359>   MOVE.l #bssstore-labelhash,d0
00020C7E <AmiBlitz3.ab3@2360>   ASR.l #2,d0
00020C84 <AmiBlitz3.ab3@2361>   LEA labelhash,a0
00020C86 <AmiBlitz3.ab3@2364>     CLR.l (a0)+
00020C88 <AmiBlitz3.ab3@2365>     SUBQ.l #1,d0
00020C8C <AmiBlitz3.ab3@2366>   BNE.s 'l10
00020C92 <AmiBlitz3.ab3@2368>   LEA labelbase,a1
00020C94 <AmiBlitz3.ab3@2369>   MOVE.l (a1),d0
00020C98 <AmiBlitz3.ab3@2370>   BEQ 'l11
00020C9A <AmiBlitz3.ab3@2373>     MOVE.l d0,a1
00020C9E <AmiBlitz3.ab3@2374>     TST.l 4(a1)
00020CA2 <AmiBlitz3.ab3@2375>     BEQ 'l29
00020CA6 <AmiBlitz3.ab3@2376>     LEA $13(a1),a0
00020CA8 <AmiBlitz3.ab3@2377>     MOVEQ #0,d0
00020CAA <AmiBlitz3.ab3@2378>     MOVEQ #0,d1
00020CAC <AmiBlitz3.ab3@2381>       MOVE.b (a0)+,d1
00020CB0 <AmiBlitz3.ab3@2382>       BEQ 'l12
00020CB6 <AmiBlitz3.ab3@2383>       !hashalgo
00020CBA <AmiBlitz3.ab3@2384> BRA 'l13
00020CC0 <AmiBlitz3.ab3@2387>     LEA labelhash,a0
00020CC6 <AmiBlitz3.ab3@2388>     AND.l #hashsize,d0
00020CC8 <AmiBlitz3.ab3@2389>      ASL.l #2,d0
00020CCC <AmiBlitz3.ab3@2390>     MOVE.l 0(a0,d0),d1                                     ;*4
00020CD0 <AmiBlitz3.ab3@2391>     MOVE.l d1,$c(a1)
00020CD4 <AmiBlitz3.ab3@2392>     MOVE.l a1,0(a0,d0)
00020CD6 <AmiBlitz3.ab3@2395>     MOVE.l (a1),d0
00020CDA <AmiBlitz3.ab3@2396>   BNE 'l21
00020CDC <AmiBlitz3.ab3@2399> RTS
00020CE2 <AmiBlitz3.ab3@2403>   MOVEA.l lastrestype,A0
00020CE4 <AmiBlitz3.ab3@2404>   MOVEA.l (A0),A2
00020CE6 <AmiBlitz3.ab3@2405>   CLR.l (A0)
00020CEC <AmiBlitz3.ab3@2406> JMP freetypes
00020CF2 <AmiBlitz3.ab3@2410>   MOVEA.l varbase,A3
00020CF8 <AmiBlitz3.ab3@2411>   CLR.l varbase
00020CFC <AmiBlitz3.ab3@2414>   CMPA.w #$0,A3
00020D00 <AmiBlitz3.ab3@2415>   BEQ.w 'l20
00020D02 <AmiBlitz3.ab3@2416>   MOVEA.l A3,A1
00020D04 <AmiBlitz3.ab3@2417>   MOVEA.l (A3),A3
00020D06 <AmiBlitz3.ab3@2418>   MOVEQ.l #$00,D0
00020D0A <AmiBlitz3.ab3@2419>   MOVE.b $E+4(A1),D0
00020D10 <AmiBlitz3.ab3@2420>   MOVEA.l _execbase,A6
00020D16 <AmiBlitz3.ab3@2421>   MOVE.l mempool2,a0
00020D1A <AmiBlitz3.ab3@2422>   JSR _FreePooled(A6)
00020D1E <AmiBlitz3.ab3@2423> BRA.w 'l10
00020D20 <AmiBlitz3.ab3@2426> RTS
00020D26 <AmiBlitz3.ab3@2431>   LEA firstiff,A2
00020D28 <AmiBlitz3.ab3@2432>   MOVEQ.l #$0E,D2
00020D2E <AmiBlitz3.ab3@2433> JMP freeslist
00020D30 <AmiBlitz3.ab3@2439> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00020D32 <AmiBlitz3.ab3@2440> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00020D38 <AmiBlitz3.ab3@2444>   CLR.w inmacro
00020D3E <AmiBlitz3.ab3@2445>   ADDQ.l #1,globallinecount
00020D44 <AmiBlitz3.ab3@2446>   CLR.b nostringopt
00020D48 <AmiBlitz3.ab3@2447>   BSR.w JL_0_3CA4
00020D4E <AmiBlitz3.ab3@2448>   CLR.w instringon
00020D54 <AmiBlitz3.ab3@2451>   TST.w ininclude
00020D58 <AmiBlitz3.ab3@2452>   BEQ.w JL_0_39B0
00020D5E <AmiBlitz3.ab3@2453>   ADDQ.l #1,includeline
00020D64 <AmiBlitz3.ab3@2454>     JSR ab3_WriteDebugFile
00020D6A <AmiBlitz3.ab3@2455>   JSR AJL_0_C09E
00020D6E <AmiBlitz3.ab3@2456>   BEQ.w JL_0_39B0
00020D74 <AmiBlitz3.ab3@2457>   MOVE.w ininclude,D0
00020D78 <AmiBlitz3.ab3@2458>   CMP.w #$4,D0
00020D7C <AmiBlitz3.ab3@2459>   BCC.w JL_0_39AC
00020D7E <AmiBlitz3.ab3@2460>   ADD.w D0,D0
00020D84 <AmiBlitz3.ab3@2461>   LEA progress_per_line,A0
00020D88 <AmiBlitz3.ab3@2462>   MOVE.w $0(A0,D0.W),D2
00020D8C <AmiBlitz3.ab3@2463>   CMP.w progressbar_width(PC),D2
00020D90 <AmiBlitz3.ab3@2464>   BCC.w JL_0_39AC
00020D94 <AmiBlitz3.ab3@2465>   ADDQ.w #1,$0(A0,D0.W)
00020D96 <AmiBlitz3.ab3@2466>   LSR.w #1,D0
00020D98 <AmiBlitz3.ab3@2467>   MOVE.l d0,d1
00020D9A <AmiBlitz3.ab3@2468>   EXT.l d1
00020D9C <AmiBlitz3.ab3@2469>   MOVE.l d2,d0
00020D9E <AmiBlitz3.ab3@2470>   EXT.l d0                                                 ;d0=x,d1=y
00020DA4 <AmiBlitz3.ab3@2472>   JSR update_progressbar
00020DA6 <AmiBlitz3.ab3@2475>   MOVEQ.l #-$01,D0
00020DA8 <AmiBlitz3.ab3@2476> RTS
00020DAE <AmiBlitz3.ab3@2480>   MOVE.l titleat,D0
00020DB0 <AmiBlitz3.ab3@2481>   MOVEQ.l #$00,D1
00020DB6 <AmiBlitz3.ab3@2482>   MOVE.w progress_per_line,D1
00020DB8 <AmiBlitz3.ab3@2483>   ADD.l D1,D0
00020DBA <AmiBlitz3.ab3@2484>   MOVE.l D0,D1
00020DBC <AmiBlitz3.ab3@2485>   SWAP D0
00020DC2 <AmiBlitz3.ab3@2486>   CMP.w titleat,D0
00020DC6 <AmiBlitz3.ab3@2487>    BEQ.w JL_0_39E4
00020DC8 <AmiBlitz3.ab3@2491>   EXT.l d0
00020DCA <AmiBlitz3.ab3@2492>   MOVE.l d1,-(a7)
00020DD2 <AmiBlitz3.ab3@2495>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00020DD8 <AmiBlitz3.ab3@2496>   JSR update_progressbar
00020DE0 <AmiBlitz3.ab3@2497>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00020DE2 <AmiBlitz3.ab3@2501>   MOVE.l (a7)+,d1
00020DE8 <AmiBlitz3.ab3@2504>   MOVE.l D1,titleat
00020DEE <AmiBlitz3.ab3@2505>   ADDQ.l #1,linenumat
00020DF4 <AmiBlitz3.ab3@2506>   CLR.w linedone
00020DFA <AmiBlitz3.ab3@2507>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
00020E00 <AmiBlitz3.ab3@2509>   SUBQ.l #1,numlines2
00020E04 <AmiBlitz3.ab3@2510>    BEQ.w JL_0_3A12
00020E0A <AmiBlitz3.ab3@2511>   MOVEA.l sourceline,A0
00020E0C <AmiBlitz3.ab3@2512>   MOVEA.l (A0),A0
00020E12 <AmiBlitz3.ab3@2513>   MOVE.l A0,sourceline
00020E16 <AmiBlitz3.ab3@2514>   LEA $9(A0),A5
00020E18 <AmiBlitz3.ab3@2517> RTS
00020E1A <AmiBlitz3.ab3@2521>   MOVE.w D0,-(A7)
00020E1C <AmiBlitz3.ab3@2522>   MOVEQ.l #$03,D0
00020E1E <AmiBlitz3.ab3@2525>     MOVE.w D1,D2
00020E22 <AmiBlitz3.ab3@2526>     ANDI.w #$F,D2
00020E26 <AmiBlitz3.ab3@2527>     ADDI.w #$30,D2
00020E2A <AmiBlitz3.ab3@2528>     CMP.w #$3A,D2
00020E2E <AmiBlitz3.ab3@2529>      BCS.w JL_0_3A2C
00020E30 <AmiBlitz3.ab3@2530>     ADDQ.w #7,D2
00020E34 <AmiBlitz3.ab3@2533>     MOVE.b D2,$0(A0,D0.W)
00020E36 <AmiBlitz3.ab3@2534>     LSR.w #4,D1
00020E3A <AmiBlitz3.ab3@2535>   DBF D0,JL_0_3A18
00020E3C <AmiBlitz3.ab3@2537>   MOVE.w (A7)+,D0
00020E3E <AmiBlitz3.ab3@2538> RTS
00020E44 <AmiBlitz3.ab3@2548>   MOVE.w skipcode,D1
00020E48 <AmiBlitz3.ab3@2549>   BNE.w JL_0_3A46
00020E4A <AmiBlitz3.ab3@2550> RTS
00020E4C <AmiBlitz3.ab3@2553>   MOVE.l A5,-(A7)
00020E4E <AmiBlitz3.ab3@2554>   MOVEQ.l #$3A,D1                                          ;':'
00020E50 <AmiBlitz3.ab3@2555>   MOVEQ.l #$21,D2                                          ;'!'
00020E52 <AmiBlitz3.ab3@2556>   MOVEQ.l #$3B,D3                                          ;';'
00020E54 <AmiBlitz3.ab3@2557>   MOVEQ.l #$22,D4                                          ;'"'
00020E56 <AmiBlitz3.ab3@2560>   MOVE.b (A5)+,D0
00020E5A <AmiBlitz3.ab3@2561>    BEQ.w JL_0_3CA0
00020E5E <AmiBlitz3.ab3@2562>    BPL.w JL_0_3A60
00020E60 <AmiBlitz3.ab3@2563>   MOVE.b (A5)+,D0
00020E64 <AmiBlitz3.ab3@2564> BRA.w JL_0_3A50
00020E66 <AmiBlitz3.ab3@2567>   CMP.b D4,D0
00020E6A <AmiBlitz3.ab3@2568>    BNE.w JL_0_3A82
00020E6C <AmiBlitz3.ab3@2571>   MOVE.b (A5)+,D0
00020E70 <AmiBlitz3.ab3@2572>    BEQ.w notqerr
00020E74 <AmiBlitz3.ab3@2578>   CMP.b #$22,D0
00020E78 <AmiBlitz3.ab3@2579>    BNE.w JL_0_3A66
00020E7C <AmiBlitz3.ab3@2580> BRA.w JL_0_3A50
00020E7E <AmiBlitz3.ab3@2583>   CMP.b D1,D0
00020E82 <AmiBlitz3.ab3@2584>    BEQ.w JL_0_3CA0
00020E84 <AmiBlitz3.ab3@2585>   CMP.b D3,D0
00020E88 <AmiBlitz3.ab3@2586>    BEQ.w JL_0_3CA0
00020E8A <AmiBlitz3.ab3@2589>   CMP.b D2,D0
00020E8E <AmiBlitz3.ab3@2590>    BNE.w JL_0_3A50
00020E96 <AmiBlitz3.ab3@2591>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
00020E98 <AmiBlitz3.ab3@2592>   MOVEA.l A5,A3
00020E9E <AmiBlitz3.ab3@2593>    JSR getparameter2
00020EA2 <AmiBlitz3.ab3@2594>    BNE.w JL_0_3AAC
00020EA8 <AmiBlitz3.ab3@2595> JMP syntaxerr
00020EB2 <AmiBlitz3.ab3@2600>    MOVE.w oldqflag,instringon
00020EB8 <AmiBlitz3.ab3@2601>   MOVEA.l lastsourcepos,A5
00020EBE <AmiBlitz3.ab3@2602>    JSR findmac                                             ;find macro
00020EC2 <AmiBlitz3.ab3@2603>    BEQ.w JL_0_3ABE
00020EC8 <AmiBlitz3.ab3@2604> JMP nomacerr
00020ECE <AmiBlitz3.ab3@2607>   TST.b debugmode
00020ED2 <AmiBlitz3.ab3@2608>   BEQ 'sk1
00020ED6 <AmiBlitz3.ab3@2609>   MOVE.w #$4e71,d1
00020EDC <AmiBlitz3.ab3@2610>   JSR writeword
00020EDE <AmiBlitz3.ab3@2611>   MOVE.l a5,-(a7)
00020EE0 <AmiBlitz3.ab3@2612>   MOVE.l a3,a5
00020EE2 <AmiBlitz3.ab3@2613>   SUBQ.l #1,a5
00020EEA <AmiBlitz3.ab3@2614>   MOVE.w #$0,inmacro
00020EEE <AmiBlitz3.ab3@2615>   BSR debugstuffa
00020EF6 <AmiBlitz3.ab3@2616>   MOVE.w #$FFFF,inmacro
00020EF8 <AmiBlitz3.ab3@2617>   MOVE.l (a7)+,a5
00020EFC <AmiBlitz3.ab3@2618>   MOVE.w #$4e71,d1
00020F02 <AmiBlitz3.ab3@2619>   JSR writeword
00020F04 <AmiBlitz3.ab3@2622>   MOVEA.l A5,A4
00020F08 <AmiBlitz3.ab3@2625>    CMP.b #" ",(a4)+
00020F0C <AmiBlitz3.ab3@2626>     BEQ 'l5a
00020F0E <AmiBlitz3.ab3@2627>      SUBQ.l#1,a4
00020F12 <AmiBlitz3.ab3@2628>      CMP.b #",",(a4)
00020F16 <AmiBlitz3.ab3@2629>     BEQ JL_0_3AEA
00020F18 <AmiBlitz3.ab3@2632>   MOVEQ.l #$00,D4
00020F1E <AmiBlitz3.ab3@2633>   TST.b newsyntax
00020F22 <AmiBlitz3.ab3@2634>   BEQ 'l10b
00020F26 <AmiBlitz3.ab3@2635>   MOVEM.l a0/d0,-(a7)
00020F2A <AmiBlitz3.ab3@2636>   MOVE.l 4(a2),a0
00020F2E <AmiBlitz3.ab3@2637>   MOVE.w 8(a2),d0
00020F32 <AmiBlitz3.ab3@2640>   CMP.b #"`",(a0)+
00020F36 <AmiBlitz3.ab3@2641>   BEQ 'x1
00020F38 <AmiBlitz3.ab3@2642>   SUBQ.w #1,d0
00020F3C <AmiBlitz3.ab3@2643>   BNE 'x2
00020F40 <AmiBlitz3.ab3@2644> BRA 'x3
00020F44 <AmiBlitz3.ab3@2647>   MOVEM.l (a7)+,a0/d0
00020F48 <AmiBlitz3.ab3@2648> BRA 'l10
00020F4C <AmiBlitz3.ab3@2651>   MOVEM.l (a7)+,a0/d0
00020F50 <AmiBlitz3.ab3@2652> BRA JL_0_3AEA
00020F54 <AmiBlitz3.ab3@2655>   CMPI.b #"{",(A4)
00020F58 <AmiBlitz3.ab3@2656>    BNE.w JL_0_3AEA
00020F5A <AmiBlitz3.ab3@2660>   ADDQ.l #1,a4
00020F5E <AmiBlitz3.ab3@2663>     CMP.b #" ",(a4)
00020F62 <AmiBlitz3.ab3@2664>     BEQ 'l5
00020F66 <AmiBlitz3.ab3@2665>     MOVEM.l a0/d0,-(a7)
00020F6C <AmiBlitz3.ab3@2666>     CLR.b exmac
00020F72 <AmiBlitz3.ab3@2667>     LEA chartab,a0
00020F74 <AmiBlitz3.ab3@2668>     MOVEQ #0,d0
00020F76 <AmiBlitz3.ab3@2669>     MOVE.b (a4),d0
00020F7A <AmiBlitz3.ab3@2670>     BMI 'm1
00020F7E <AmiBlitz3.ab3@2671>     TST.b 0(a0,d0)
00020F82 <AmiBlitz3.ab3@2672>     BEQ 'm1
00020F88 <AmiBlitz3.ab3@2673>     TST.b newsyntax
00020F8C <AmiBlitz3.ab3@2674>     BEQ 'ns1
00020F90 <AmiBlitz3.ab3@2675>     CMP.b #"#",d0
00020F94 <AmiBlitz3.ab3@2676>     BEQ 'm1
00020F98 <AmiBlitz3.ab3@2677>     CMP.b #"$",d0
00020F9C <AmiBlitz3.ab3@2678>     BEQ 'm1
00020FA0 <AmiBlitz3.ab3@2679>     CMP.b #"-",d0
00020FA4 <AmiBlitz3.ab3@2680>     BEQ 'm1
00020FA8 <AmiBlitz3.ab3@2683>   CMP.b #",",d0
00020FAC <AmiBlitz3.ab3@2684>     BEQ 'm1
00020FB0 <AmiBlitz3.ab3@2685>     CMP.b #"{",d0
00020FB4 <AmiBlitz3.ab3@2686>     BNE 'm1b
00020FB6 <AmiBlitz3.ab3@2687>     ADDQ.l #1,a4
00020FBA <AmiBlitz3.ab3@2688> BRA 'm1
00020FC0 <AmiBlitz3.ab3@2691>   TST.b newsyntax
00020FC4 <AmiBlitz3.ab3@2692>     BEQ 'm1
00020FCC <AmiBlitz3.ab3@2693>     MOVE.b #1,exmac
00020FD0 <AmiBlitz3.ab3@2696>   MOVEM.l (a7)+,a0/d0
00020FD6 <AmiBlitz3.ab3@2697>     TST.b exmac
00020FDA <AmiBlitz3.ab3@2698>     BNE JL_0_3AEA
00020FDC <AmiBlitz3.ab3@2705>   TST.b (a4)
00020FE0 <AmiBlitz3.ab3@2706>   BEQ JL_0_3AEA
00020FE6 <AmiBlitz3.ab3@2709>   MOVEA.l ptr_macrobuffer_begin,A0
00020FE8 <AmiBlitz3.ab3@2712>   ADDQ.w #1,D4
00020FEA <AmiBlitz3.ab3@2713>   MOVE.l A4,(A0)
00020FEE <AmiBlitz3.ab3@2714>   CLR.w 4(a0)
00020FF2 <AmiBlitz3.ab3@2715>    BSR.w JL_0_3CC6
00020FF4 <AmiBlitz3.ab3@2717>   ADDQ.l #4,a0
00020FF6 <AmiBlitz3.ab3@2721>   SUBQ.w #1,(a0)+
00020FFA <AmiBlitz3.ab3@2722>   CMP.b #$7D,D0
00020FFE <AmiBlitz3.ab3@2723>   BEQ 'l10
00021000 <AmiBlitz3.ab3@2724>   TST.b d0
00021004 <AmiBlitz3.ab3@2725>   BEQ 'l10
00021008 <AmiBlitz3.ab3@2726> BRA JL_0_3AD0
0002100E <AmiBlitz3.ab3@2730>   CLR.l sourceline3
00021010 <AmiBlitz3.ab3@2731>   MOVEA.l A4,A5
00021016 <AmiBlitz3.ab3@2734>   MOVE.w D4,numarg
0002101C <AmiBlitz3.ab3@2741>   MOVE.l #$01,D1
00021022 <AmiBlitz3.ab3@2742>   MOVEA.l _execbase,A6
00021028 <AmiBlitz3.ab3@2743>   MOVE.l mempool,a0
0002102E <AmiBlitz3.ab3@2744>   MOVE.l macrobuffer_size,D0
00021034 <AmiBlitz3.ab3@2745>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021038 <AmiBlitz3.ab3@2746>   BGE 'l1m
0002103E <AmiBlitz3.ab3@2747>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021044 <AmiBlitz3.ab3@2748>   MOVE.l d0,macrobuffer_size
00021048 <AmiBlitz3.ab3@2751>   JSR _AllocPooled(a6)
00021052 <AmiBlitz3.ab3@2753>   MOVE.l myline,myoline
00021054 <AmiBlitz3.ab3@2756>   ADDQ.l #1,d0
0002105A <AmiBlitz3.ab3@2757>   MOVE.l D0,myline
0002105C <AmiBlitz3.ab3@2758>   MOVEA.l D0,A1
00021062 <AmiBlitz3.ab3@2759>   MOVE.b #":",-1(a1)
00021064 <AmiBlitz3.ab3@2760>   MOVEA.l A1,A6
0002106A <AmiBlitz3.ab3@2761>   ADDA.l macrobuffer_size,A6
0002106C <AmiBlitz3.ab3@2762>   MOVEA.l (A7)+,A0
0002106E <AmiBlitz3.ab3@2765>   CMPA.l A6,A1
00021072 <AmiBlitz3.ab3@2766>    BCC.w mbovererr
00021074 <AmiBlitz3.ab3@2767>   MOVE.b (A0)+,(a1)+
00021076 <AmiBlitz3.ab3@2768>   CMPA.l A3,A0
0002107A <AmiBlitz3.ab3@2769>    BCS.w JL_0_3B1E
0002107C <AmiBlitz3.ab3@2770>   SUBQ.w #1,A1
00021080 <AmiBlitz3.ab3@2771>   MOVE.w $8(A2),D1
00021084 <AmiBlitz3.ab3@2772>    BEQ.w JL_0_3C70
0002108C <AmiBlitz3.ab3@2773>   MOVE.w $A(A2),macnum
00021090 <AmiBlitz3.ab3@2774>   ADDQ.w #1,$A(A2)
00021094 <AmiBlitz3.ab3@2775>   MOVEA.l $4(A2),A2
00021096 <AmiBlitz3.ab3@2776>   SUBQ.w #1,D1
0002109C <AmiBlitz3.ab3@2777>   CLR.b firstmline
0002109E <AmiBlitz3.ab3@2780>     MOVEQ.l #$00,D0
000210A0 <AmiBlitz3.ab3@2781>     MOVE.b (A2)+,D0
000210A6 <AmiBlitz3.ab3@2782>     TST.b firstmline
000210AA <AmiBlitz3.ab3@2783>     BNE 'c1
000210AE <AmiBlitz3.ab3@2784>     CMP.b #$22,d0
000210B2 <AmiBlitz3.ab3@2785>     BNE 's1
000210BA <AmiBlitz3.ab3@2786>     MOVE.b #1,firstmline
000210BE <AmiBlitz3.ab3@2789>     CMP.b #":",d0
000210C2 <AmiBlitz3.ab3@2790>     BNE 'm1
000210CA <AmiBlitz3.ab3@2791>     MOVE.b #1,firstmline
000210CE <AmiBlitz3.ab3@2794>     CMP.b #";",d0
000210D2 <AmiBlitz3.ab3@2795>     BNE 'c1
000210D4 <AmiBlitz3.ab3@2798>     SUBQ.w #1,d1                                           ;filter out comment
000210D6 <AmiBlitz3.ab3@2799>     MOVE.b (a2)+,d0
000210DC <AmiBlitz3.ab3@2800>     CMP.w #":@",-1(a2)
000210E0 <AmiBlitz3.ab3@2801>     BEQ 'c2
000210E2 <AmiBlitz3.ab3@2802>     TST.w d1
000210E6 <AmiBlitz3.ab3@2803>     BNE 'l1
000210EA <AmiBlitz3.ab3@2804>   BRA JL_0_3C6C
000210F0 <AmiBlitz3.ab3@2807>     CMP.b #":",1(a2)
000210F4 <AmiBlitz3.ab3@2808>       BNE 'l1
000210F6 <AmiBlitz3.ab3@2809>       ADDQ #2,a2
000210F8 <AmiBlitz3.ab3@2810>       SUBQ #3,d1
000210FA <AmiBlitz3.ab3@2811>       MOVE.b (a2)+,d0
00021102 <AmiBlitz3.ab3@2812>       MOVE.b #1,firstmline
00021106 <AmiBlitz3.ab3@2815>     CMP.b #"`",D0
0002110A <AmiBlitz3.ab3@2816>      BNE.w JL_0_3C56
0002110C <AmiBlitz3.ab3@2817>     SUBQ.w #1,D1
0002110E <AmiBlitz3.ab3@2818>     MOVE.b (A2)+,D0
00021112 <AmiBlitz3.ab3@2819>     CMP.w #$7B,D0
00021116 <AmiBlitz3.ab3@2820>      BEQ.w JL_0_3BB6
0002111A <AmiBlitz3.ab3@2821>     CMP.w #$40,D0
0002111E <AmiBlitz3.ab3@2822>      BNE.w JL_0_3B82
00021120 <AmiBlitz3.ab3@2823>     MOVEQ.l #$00,D2
00021126 <AmiBlitz3.ab3@2824>     MOVE.w macnum,D2
00021128 <AmiBlitz3.ab3@2825>     MOVEA.l A1,A0
0002112A <AmiBlitz3.ab3@2826>     MOVE.w D1,-(A7)
00021130 <AmiBlitz3.ab3@2827>      JSR makelong
00021132 <AmiBlitz3.ab3@2828>     MOVEA.l A0,A1
00021134 <AmiBlitz3.ab3@2829>     MOVE.w (A7)+,D1
00021138 <AmiBlitz3.ab3@2830>   BRA.w JL_0_3C6C
0002113C <AmiBlitz3.ab3@2833>     ORI.w #$20,D0
00021140 <AmiBlitz3.ab3@2834>     CMP.w #$7A,D0
00021144 <AmiBlitz3.ab3@2835>      BCS.w JL_0_3B94
0002114A <AmiBlitz3.ab3@2836>   JMP ilconsterr
0002114E <AmiBlitz3.ab3@2839>     SUBI.w #$30,D0
00021152 <AmiBlitz3.ab3@2840>     CMP.w #$A,D0
00021156 <AmiBlitz3.ab3@2841>      BCS.w JL_0_3BF2
0002115A <AmiBlitz3.ab3@2842>     SUBI.w #$27,D0
0002115E <AmiBlitz3.ab3@2843>     CMP.w #$A,D0
00021162 <AmiBlitz3.ab3@2844>      BCC.w JL_0_3BB2
00021168 <AmiBlitz3.ab3@2845>   JMP ilconsterr
0002116C <AmiBlitz3.ab3@2848>   BRA.w JL_0_3BF2
0002116E <AmiBlitz3.ab3@2851>     MOVE.l A5,-(A7)
00021172 <AmiBlitz3.ab3@2852>     MOVEM.l D1/A1-A2/A6,-(A7)
00021174 <AmiBlitz3.ab3@2853>     MOVEA.l A2,A5
0002117A <AmiBlitz3.ab3@2854>      JSR AJL_0_BF6E
0002117E <AmiBlitz3.ab3@2855>     CMP.w #$7D,D0
00021182 <AmiBlitz3.ab3@2856>      BEQ.w JL_0_3BD2
00021188 <AmiBlitz3.ab3@2857>   JMP syntaxerr
0002118C <AmiBlitz3.ab3@2860>     MOVEM.l (A7)+,D1/A1-A2/A6
0002118E <AmiBlitz3.ab3@2861>     MOVE.l A5,D2
00021190 <AmiBlitz3.ab3@2862>     SUB.l A2,D2
00021192 <AmiBlitz3.ab3@2863>     SUB.w D2,D1
00021194 <AmiBlitz3.ab3@2864>     MOVEA.l A5,A2
0002119A <AmiBlitz3.ab3@2865>     CLR.w instringon
0002119C <AmiBlitz3.ab3@2866>     MOVEA.l (A7)+,A5
0002119E <AmiBlitz3.ab3@2867>     MOVE.l D3,D0
000211A2 <AmiBlitz3.ab3@2868>     BPL.w JL_0_3BF2
000211A8 <AmiBlitz3.ab3@2869>   JMP ilconsterr
000211AA <AmiBlitz3.ab3@2872>     SUBQ.w #1,D0
000211AE <AmiBlitz3.ab3@2873>      BPL.w JL_0_3C20
000211B4 <AmiBlitz3.ab3@2877>     MOVE.w numarg,D0
000211B8 <AmiBlitz3.ab3@2878>     DIVU #$A,D0
000211BC <AmiBlitz3.ab3@2879>     ADDI.w #$30,D0
000211BE <AmiBlitz3.ab3@2880>     CMPA.l A6,A1
000211C2 <AmiBlitz3.ab3@2881>      BCC.w mbovererr
000211C4 <AmiBlitz3.ab3@2882>     MOVE.b D0,(A1)+
000211C6 <AmiBlitz3.ab3@2883>     SWAP D0
000211CA <AmiBlitz3.ab3@2884>     ADDI.w #$30,D0
000211CC <AmiBlitz3.ab3@2885>     CMPA.l A6,A1
000211D0 <AmiBlitz3.ab3@2886>      BCC.w mbovererr
000211D2 <AmiBlitz3.ab3@2887>     MOVE.b D0,(A1)+
000211D6 <AmiBlitz3.ab3@2888>   BRA.w JL_0_3C6C
000211DC <AmiBlitz3.ab3@2894>     CMP.w numarg,D0
000211E0 <AmiBlitz3.ab3@2895>      BCC.w JL_0_3C6C
000211E2 <AmiBlitz3.ab3@2896>     LSL.w #1,D0
000211E4 <AmiBlitz3.ab3@2897>     MOVE.w D0,D4
000211E6 <AmiBlitz3.ab3@2898>     LSL.w #1,D0
000211E8 <AmiBlitz3.ab3@2899>     ADD.w D4,D0
000211EE <AmiBlitz3.ab3@2900>     MOVEA.l ptr_macrobuffer_begin,A0
000211F0 <AmiBlitz3.ab3@2901>     ADDA.w D0,A0
000211F4 <AmiBlitz3.ab3@2902>     MOVE.w $4(A0),D4
000211F8 <AmiBlitz3.ab3@2903>      BEQ.w JL_0_3C6C
000211FA <AmiBlitz3.ab3@2904>     MOVEA.l (A0),A0
000211FC <AmiBlitz3.ab3@2905>     SUBQ.w #1,D4
000211FE <AmiBlitz3.ab3@2908>       CMPA.l A6,A1
00021202 <AmiBlitz3.ab3@2909>        BCC.w mbovererr
00021206 <AmiBlitz3.ab3@2910>       CMP.w #"@@",(a0)
0002120A <AmiBlitz3.ab3@2911>        BNE 'l10
00021210 <AmiBlitz3.ab3@2912>       TST.w ininclude
00021214 <AmiBlitz3.ab3@2913>        BNE errorjoin
0002121A <AmiBlitz3.ab3@2916>       MOVE.l sourceline,a0
0002121C <AmiBlitz3.ab3@2917>       MOVE.l (a0),a0
00021222 <AmiBlitz3.ab3@2918>       CMP.l #0,a0
00021226 <AmiBlitz3.ab3@2919>       BNE 'l11
00021228 <AmiBlitz3.ab3@2920>       MOVEQ #0,d0
0002122E <AmiBlitz3.ab3@2921>       JSR error
00021234 <AmiBlitz3.ab3@2924>       MOVE.l a0,sourceline
0002123A <AmiBlitz3.ab3@2925>       ADDQ.l #1,linenumat
0002123E <AmiBlitz3.ab3@2926>       LEA 9(a0),a0
00021240 <AmiBlitz3.ab3@2927>       MOVE.l a0,-(a7)
00021244 <AmiBlitz3.ab3@2930>       CMP.b #" ",(a0)+
00021248 <AmiBlitz3.ab3@2931>        BEQ 'l110
0002124E <AmiBlitz3.ab3@2932>       CMP.b #";",-1(a0)
00021250 <AmiBlitz3.ab3@2933>       MOVE.l (a7)+,a0
00021254 <AmiBlitz3.ab3@2934>        BEQ 'l111
00021256 <AmiBlitz3.ab3@2935>       SUBQ.l #1,d4
00021258 <AmiBlitz3.ab3@2938>       MOVE.b (A0)+,(A1)+
0002125C <AmiBlitz3.ab3@2939>     DBF D4,JL_0_3C46
00021260 <AmiBlitz3.ab3@2941>   BRA.w JL_0_3C6C
00021262 <AmiBlitz3.ab3@2944>     CMPA.l A6,A1
00021266 <AmiBlitz3.ab3@2945>      BCC.w mbovererr
00021268 <AmiBlitz3.ab3@2946>     MOVE.b D0,(A1)+
0002126C <AmiBlitz3.ab3@2947>      BPL.w JL_0_3C6C
0002126E <AmiBlitz3.ab3@2948>     CMPA.l A6,A1
00021272 <AmiBlitz3.ab3@2949>      BCC.w mbovererr
00021274 <AmiBlitz3.ab3@2950>     MOVE.b (A2)+,(A1)+
00021276 <AmiBlitz3.ab3@2951>     SUBQ.w #1,D1
0002127A <AmiBlitz3.ab3@2954>   DBF D1,JL_0_3B48
0002127C <AmiBlitz3.ab3@2964>   CMPA.l A6,A1
00021280 <AmiBlitz3.ab3@2965>    BCC.w mbovererr
00021282 <AmiBlitz3.ab3@2966>   MOVE.b (A5)+,(A1)+
00021286 <AmiBlitz3.ab3@2967>    BNE.w JL_0_3C70
0002128C <AmiBlitz3.ab3@2968>   MOVEA.l myline,A5
00021292 <AmiBlitz3.ab3@2969>   MOVE.l myoline,D0
00021296 <AmiBlitz3.ab3@2970>    BEQ.w JL_0_3C9C
00021298 <AmiBlitz3.ab3@2971>   SUBQ.l #1,d0
0002129A <AmiBlitz3.ab3@2972>   MOVEA.l D0,A1
000212A0 <AmiBlitz3.ab3@2973>   MOVE.l macrobuffer_size,D0
000212A6 <AmiBlitz3.ab3@2974>   MOVEA.l _execbase,A6
000212AC <AmiBlitz3.ab3@2975>   MOVE.l mempool,a0
000212B0 <AmiBlitz3.ab3@2976>   JSR _FreePooled(A6)
000212B4 <AmiBlitz3.ab3@2979> BRA.w JL_0_3A46
000212B6 <AmiBlitz3.ab3@2982>   MOVEA.l (A7)+,A5
000212B8 <AmiBlitz3.ab3@2983> RTS
000212BE <AmiBlitz3.ab3@2987>   MOVE.l myline,D0
000212C2 <AmiBlitz3.ab3@2988>   BEQ.w JL_0_3CC4
000212C4 <AmiBlitz3.ab3@2989>   SUBQ.l #1,d0
000212CA <AmiBlitz3.ab3@2990>   CLR.l myline
000212CC <AmiBlitz3.ab3@2991>   MOVEA.l D0,A1
000212D2 <AmiBlitz3.ab3@2992>   MOVE.l macrobuffer_size,D0
000212D8 <AmiBlitz3.ab3@2993>   MOVEA.l _execbase,A6
000212DE <AmiBlitz3.ab3@2994>   MOVE.l mempool,a0
000212E2 <AmiBlitz3.ab3@2995> JMP _FreePooled(A6)
000212E4 <AmiBlitz3.ab3@2998> RTS
000212E6 <AmiBlitz3.ab3@3002>   MOVEQ.l #$00,D2
000212EA <AmiBlitz3.ab3@3005>   ADDQ.w #1,4(a0)
000212EC <AmiBlitz3.ab3@3006>    MOVE.b (A4)+,D0
000212F0 <AmiBlitz3.ab3@3008>    BEQ exit1
000212F4 <AmiBlitz3.ab3@3009>    BPL.w JL_0_3CD8
000212F8 <AmiBlitz3.ab3@3010>   ADDQ.w #1,4(a0)
000212FA <AmiBlitz3.ab3@3011>   ADDQ.w #1,A4
000212FE <AmiBlitz3.ab3@3012> BRA.w JL_0_3CC8
00021304 <AmiBlitz3.ab3@3015>    TST.w instringon
00021308 <AmiBlitz3.ab3@3016>    BNE 'lnom
0002130C <AmiBlitz3.ab3@3017>    CMP.b #";",d0
00021310 <AmiBlitz3.ab3@3018>    BEQ exit2
00021314 <AmiBlitz3.ab3@3019>    CMP.b #":",d0
00021318 <AmiBlitz3.ab3@3020>    BEQ exit2
0002131C <AmiBlitz3.ab3@3023>   CMP.b #$22,D0
00021320 <AmiBlitz3.ab3@3024>    BNE.w JL_0_3CEA
00021326 <AmiBlitz3.ab3@3025>   NOT.w instringon
0002132A <AmiBlitz3.ab3@3026> BRA.w JL_0_3CC8
00021330 <AmiBlitz3.ab3@3030>   TST.w instringon
00021334 <AmiBlitz3.ab3@3031>    BNE.w JL_0_3CC8
00021338 <AmiBlitz3.ab3@3032>    CMP.b #"@",d0
0002133C <AmiBlitz3.ab3@3033>    BNE 'l10
00021340 <AmiBlitz3.ab3@3034>    CMP.b #"@",(a4)
00021344 <AmiBlitz3.ab3@3035>    BNE 'l10
0002134A <AmiBlitz3.ab3@3036>    TST.w ininclude
0002134E <AmiBlitz3.ab3@3037>    BNE errorjoin
00021354 <AmiBlitz3.ab3@3038>    MOVE.l sourceline3,a4
0002135A <AmiBlitz3.ab3@3039>    CMP.l #0,a4
0002135E <AmiBlitz3.ab3@3040>    BNE 'l11
00021364 <AmiBlitz3.ab3@3041>    MOVE.l sourceline,a4
00021366 <AmiBlitz3.ab3@3044>   MOVE.l (a4),a4
0002136C <AmiBlitz3.ab3@3045>       CMP.l #0,a4
00021370 <AmiBlitz3.ab3@3046>       BNE 'l12
00021372 <AmiBlitz3.ab3@3047>       MOVEQ #0,d0
00021378 <AmiBlitz3.ab3@3048>       JSR error
0002137E <AmiBlitz3.ab3@3051>    MOVE.l a4,sourceline3
00021382 <AmiBlitz3.ab3@3052>    LEA 9(a4),a4
00021384 <AmiBlitz3.ab3@3053>    MOVEQ #",",d0
00021388 <AmiBlitz3.ab3@3056>   CMP.b #$2C,D0
0002138C <AmiBlitz3.ab3@3057>    BNE.w JL_0_3D06
0002138E <AmiBlitz3.ab3@3058>   TST.w D2
00021392 <AmiBlitz3.ab3@3059>    BEQ.w JL_0_3D30
00021396 <AmiBlitz3.ab3@3060> BRA.w JL_0_3CC8
0002139A <AmiBlitz3.ab3@3064>    CMP.b #$7B,D0                                           ;"{"
0002139E <AmiBlitz3.ab3@3065>    BEQ.w 'l10
000213A2 <AmiBlitz3.ab3@3066>   CMP.b #$28,D0                                            ;"("
000213A6 <AmiBlitz3.ab3@3069>    BNE.w JL_0_3D14
000213A8 <AmiBlitz3.ab3@3070>   ADDQ.w #1,D2
000213AC <AmiBlitz3.ab3@3071> BRA.w JL_0_3CC8
000213B0 <AmiBlitz3.ab3@3074>   CMP.b #$7D,D0                                           ;"}"
000213B4 <AmiBlitz3.ab3@3075>    BNE.w JL_0_3D22
000213B6 <AmiBlitz3.ab3@3076>  TST.w D2
000213BA <AmiBlitz3.ab3@3077>    BEQ.w JL_0_3D30
000213BE <AmiBlitz3.ab3@3081>    CMP.b #$7D,D0                                           ;"}"
000213C2 <AmiBlitz3.ab3@3082>    BEQ.w 'l10
000213C6 <AmiBlitz3.ab3@3083>   CMP.b #$29,D0                                            ;")"
000213CA <AmiBlitz3.ab3@3086>    BNE.w JL_0_3CC8
000213CC <AmiBlitz3.ab3@3087>   SUBQ.w #1,D2
000213D0 <AmiBlitz3.ab3@3088> BRA.w JL_0_3CC8
000213D2 <AmiBlitz3.ab3@3091> RTS
000213D4 <AmiBlitz3.ab3@3095>       SUBQ.l #1,a4
000213DA <AmiBlitz3.ab3@3096>       CLR.l sourceline3
000213DC <AmiBlitz3.ab3@3097> RTS
000213DE <AmiBlitz3.ab3@3101>       MOVEQ #0,d0
000213E0 <AmiBlitz3.ab3@3102>       SUBQ.l #1,a4
000213E6 <AmiBlitz3.ab3@3103>       CLR.l sourceline3
000213E8 <AmiBlitz3.ab3@3104> RTS
000213EC <AmiBlitz3.ab3@3108>   CMP.b #$7B,D0                                            ;"{"
000213F0 <AmiBlitz3.ab3@3109>   BEQ.w JL_0_3D3E
000213F4 <AmiBlitz3.ab3@3110>   CMP.b #$28,D0                                            ;"("
000213F6 <AmiBlitz3.ab3@3113> RTS
000213FA <AmiBlitz3.ab3@3117>   CMP.b #$7D,D0                                            ;"}"
000213FE <AmiBlitz3.ab3@3118>   BEQ.w JL_0_3D4C
00021402 <AmiBlitz3.ab3@3119>   CMP.b #$29,D0                                            ;")"
00021404 <AmiBlitz3.ab3@3122> RTS
00021406 <AmiBlitz3.ab3@3126> stopit:     Ds.w 1
00021408 <AmiBlitz3.ab3@3127> clrreq:     Ds.w 1
0002140C <AmiBlitz3.ab3@3148>   MOVE.w clrreq(PC),D0
00021410 <AmiBlitz3.ab3@3149>    BEQ.w close_compilewin__skip
00021442 <AmiBlitz3.ab3@3151> 
00021448 <AmiBlitz3.ab3@3153>   LEA clrreq,a0
0002144A <AmiBlitz3.ab3@3154>   NOT.w (a0)                                               ;reass
00021450 <AmiBlitz3.ab3@3155>   MOVEA.l ptr_ThisTask,A0
00021454 <AmiBlitz3.ab3@3156>   CLR.l $1E(A0)
00021458 <AmiBlitz3.ab3@3157>   CLR.l $2A(A0)
0002145A <AmiBlitz3.ab3@3160> RTS
0002145C <AmiBlitz3.ab3@3163> intsused:  Ds.w 1
00021464 <AmiBlitz3.ab3@3167>   MOVE.w #-1,blitzoff
0002146A <AmiBlitz3.ab3@3168>   CLR.w intsused
00021470 <AmiBlitz3.ab3@3169>   CLR.w anyerrs
00021476 <AmiBlitz3.ab3@3170>   CLR.w blitzmode
0002147C <AmiBlitz3.ab3@3171>   CLR.w dontwrite                                              ;nomemleft
00021482 <AmiBlitz3.ab3@3172>   CLR.w constmode
00021488 <AmiBlitz3.ab3@3173>   CLR.w cmake
0002148E <AmiBlitz3.ab3@3174>   CLR.w cfetchmode
00021494 <AmiBlitz3.ab3@3175>   CLR.l intdata1
0002149A <AmiBlitz3.ab3@3176>   CLR.w fuckpos
000214A0 <AmiBlitz3.ab3@3177>   CLR.w procnum
000214A6 <AmiBlitz3.ab3@3178>   CLR.w procnum2
000214AC <AmiBlitz3.ab3@3179>   CLR.w dfetch
000214B2 <AmiBlitz3.ab3@3180>   CLR.l titleat
000214B8 <AmiBlitz3.ab3@3181>   CLR.b usedpath
000214BE <AmiBlitz3.ab3@3182>   CLR.b path2
000214C4 <AmiBlitz3.ab3@3183>   CLR.w inerr
000214CA <AmiBlitz3.ab3@3184>   CLR.w intlevel
000214D0 <AmiBlitz3.ab3@3185>   CLR.l cont_pc
000214D6 <AmiBlitz3.ab3@3186>   CLR.l cont_pc2
000214DC <AmiBlitz3.ab3@3187>   CLR.l lastcontlink
000214E6 <AmiBlitz3.ab3@3188>   MOVE.l destbufferstart,destpointer
000214F0 <AmiBlitz3.ab3@3189>   MOVE.l destbufferstart,bigpc
000214FA <AmiBlitz3.ab3@3190>   MOVE.l destbufferend,libend
00021504 <AmiBlitz3.ab3@3191>   MOVE.l data1start,data1
0002150E <AmiBlitz3.ab3@3192>   MOVE.l data2at,data2
00021516 <AmiBlitz3.ab3@3193>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
0002151E <AmiBlitz3.ab3@3194>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021524 <AmiBlitz3.ab3@3195>   CLR.w oldvcodelen
0002152A <AmiBlitz3.ab3@3196>   CLR.b lastgloballabel                                    ;lastbiglab org source
0002152C <AmiBlitz3.ab3@3197> RTS
0002152E <AmiBlitz3.ab3@3200> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021534 <AmiBlitz3.ab3@3204>   LEA  clrreq,a1
00021538 <AmiBlitz3.ab3@3205>   MOVE.w #2000,(a1)
00021562 <AmiBlitz3.ab3@3206>   !basic
00021578 <AmiBlitz3.ab3@3207> 
000215C8 <AmiBlitz3.ab3@3208>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
000215D0 <AmiBlitz3.ab3@3209>   calcpro.l      = 0
000215D8 <AmiBlitz3.ab3@3210>   calcpro_old.l  = 0
000215E4 <AmiBlitz3.ab3@3211>   typ_old.l      = -1
000215F0 <AmiBlitz3.ab3@3212>   pass_old.l     = -1
000215F6 <AmiBlitz3.ab3@3213>   update_comstatus_gui.b = True ; for the first
00021630 <AmiBlitz3.ab3@3215>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
0002166A <AmiBlitz3.ab3@3216>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021688 <AmiBlitz3.ab3@3217>   !asm
000216BA <AmiBlitz3.ab3@3218> 
000216C0 <AmiBlitz3.ab3@3220>   CLR.w stopit
000216C2 <AmiBlitz3.ab3@3221> RTS
000216C8 <AmiBlitz3.ab3@3225>   CLR.w storedebugmode
000216CE <AmiBlitz3.ab3@3226>   CLR.b iserror
000216D2 <AmiBlitz3.ab3@3227>   BSR.w compilerequester
000216DC <AmiBlitz3.ab3@3229>   MOVE.l #0,globallinecount
000216E2 <AmiBlitz3.ab3@3230>   JSR check_of_same_source
000216E6 <AmiBlitz3.ab3@3231>   BSR.w call_setpointerbusy
000216EA <AmiBlitz3.ab3@3232>   BSR.w setcvars
000216F2 <AmiBlitz3.ab3@3233>   MOVE.w #$8000,globalvarpointer
000216FC <AmiBlitz3.ab3@3234>   MOVE.l #newtype_quick,defaulttype
00021702 <AmiBlitz3.ab3@3235>   MOVE.l A7,passstack
0002170C <AmiBlitz3.ab3@3236>   MOVE.l #firstitem_,sourceline
00021716 <AmiBlitz3.ab3@3237>   MOVE.w numlines_org,linesleft
00021720 <AmiBlitz3.ab3@3238>   MOVE.l numlines,numlines2
00021726 <AmiBlitz3.ab3@3239>   ADDQ.w #1,linesleft
0002172C <AmiBlitz3.ab3@3240>   ADDQ.l #1,numlines2
00021736 <AmiBlitz3.ab3@3241>   MOVE.l #-1,linenumat
0002173A <AmiBlitz3.ab3@3242>   BSR.w resetlibs
0002173E <AmiBlitz3.ab3@3243>   BSR.w Aclearallvars
00021744 <AmiBlitz3.ab3@3244>   LEA progress_per_line+2,A0
00021746 <AmiBlitz3.ab3@3245>   MOVEQ.l #$03,D0
00021748 <AmiBlitz3.ab3@3248>     CLR.w (A0)+
0002174C <AmiBlitz3.ab3@3249>   DBF D0,JL_0_40EC
00021752 <AmiBlitz3.ab3@3252>   LEA _include,a0
00021756 <AmiBlitz3.ab3@3253>   MOVEM.l a0-a6/d0-d7,-(a7)
0002175C <AmiBlitz3.ab3@3254>   LEA ptr_parameterstore,a1
0002175E <AmiBlitz3.ab3@3257>     MOVE.b (a0)+,(a1)+
00021762 <AmiBlitz3.ab3@3258>   BNE 'l1b
00021764 <AmiBlitz3.ab3@3260>   MOVEQ #9,d2
0002176A <AmiBlitz3.ab3@3261>   JSR findlabel2
0002176E <AmiBlitz3.ab3@3262>   BNE 'd
00021776 <AmiBlitz3.ab3@3263>   MOVE.l #0,8(a2)
0002177A <AmiBlitz3.ab3@3264>   MOVEM.l (a7)+,a0-a6/d0-d7
0002177E <AmiBlitz3.ab3@3265> BRA 'd2
00021784 <AmiBlitz3.ab3@3268>   JSR addlabelhash
0002178C <AmiBlitz3.ab3@3269>   MOVE.l #$1,$4(A2)
00021794 <AmiBlitz3.ab3@3270>   MOVE.l #0,8(a2)
00021798 <AmiBlitz3.ab3@3271>   MOVEM.l (a7)+,a0-a6/d0-d7
0002179E <AmiBlitz3.ab3@3274>   LEA _debug,a0
000217A2 <AmiBlitz3.ab3@3275>   MOVEM.l a0-a6/d0-d7,-(a7)
000217A8 <AmiBlitz3.ab3@3276>   LEA ptr_parameterstore,a1
000217AA <AmiBlitz3.ab3@3279>     MOVE.b (a0)+,(a1)+
000217AE <AmiBlitz3.ab3@3280>   BNE 'l9b
000217B0 <AmiBlitz3.ab3@3282>   MOVEQ #7,d2
000217B6 <AmiBlitz3.ab3@3283>   JSR findlabel2
000217BA <AmiBlitz3.ab3@3284>   BNE 'd9
000217BE <AmiBlitz3.ab3@3285>   MOVE.b debugmode(PC),D0
000217C0 <AmiBlitz3.ab3@3286>   EXT.w d0
000217C2 <AmiBlitz3.ab3@3287>   EXT.l d0
000217C6 <AmiBlitz3.ab3@3288>   MOVE.l d0,8(a2)
000217CA <AmiBlitz3.ab3@3289>   MOVEM.l (a7)+,a0-a6/d0-d7
000217CE <AmiBlitz3.ab3@3290> BRA 'd9b
000217D4 <AmiBlitz3.ab3@3293>   JSR addlabelhash
000217DC <AmiBlitz3.ab3@3294>   MOVE.l #$1,$4(A2)
000217E0 <AmiBlitz3.ab3@3295>   MOVE.b debugmode(PC),D0
000217E2 <AmiBlitz3.ab3@3296>   EXT.w d0
000217E4 <AmiBlitz3.ab3@3297>   EXT.l d0
000217E8 <AmiBlitz3.ab3@3298>   MOVE.l d0,8(a2)
000217EC <AmiBlitz3.ab3@3299>   MOVEM.l (a7)+,a0-a6/d0-d7
000217F2 <AmiBlitz3.ab3@3302>   MOVE.l #firstitem_,a0
000217F4 <AmiBlitz3.ab3@3303>   MOVE.l (a0),a0
000217F8 <AmiBlitz3.ab3@3304>   LEA 9(a0),a0
00021800 <AmiBlitz3.ab3@3305>   MOVE.w #0,exdebug
00021806 <AmiBlitz3.ab3@3306>   TST.b debugmode
0002180A <AmiBlitz3.ab3@3307>    BEQ 'l10
0002180C <AmiBlitz3.ab3@3310>   MOVE.b (a0)+,d0
00021810 <AmiBlitz3.ab3@3311>    BEQ 'l10
00021814 <AmiBlitz3.ab3@3312>   CMP.b #$20,d0
00021818 <AmiBlitz3.ab3@3313>    BEQ 'l2
0002181A <AmiBlitz3.ab3@3314>   SUBQ.l #1,a0
00021820 <AmiBlitz3.ab3@3315>   CMP.l #"DEBU",(a0)
00021824 <AmiBlitz3.ab3@3316>    BNE 'l10
0002182A <AmiBlitz3.ab3@3317>   CMP.b #"G",4(a0)
0002182E <AmiBlitz3.ab3@3318>    BNE 'l10
00021836 <AmiBlitz3.ab3@3319>   MOVE.w #$0,debugversion
0002183E <AmiBlitz3.ab3@3320>   MOVE.b #1,exdebug
00021844 <AmiBlitz3.ab3@3323>   LEA nops4,A0
0002184A <AmiBlitz3.ab3@3324>   LEA dataget,A1
00021850 <AmiBlitz3.ab3@3325>   JSR pokecode2                                            ;write intro nops
00021856 <AmiBlitz3.ab3@3326>   MOVE.l #$01010101,d1
0002185C <AmiBlitz3.ab3@3327>   JSR writedatalong                                        ;for the 4 tempregs
00021862 <AmiBlitz3.ab3@3328>   JSR writedatalong
00021868 <AmiBlitz3.ab3@3329>   JSR writedatalong
0002186E <AmiBlitz3.ab3@3330>   JSR writedatalong
00021874 <AmiBlitz3.ab3@3331>   TST.b saved0
00021878 <AmiBlitz3.ab3@3332>    BEQ 'l1
0002187E <AmiBlitz3.ab3@3333>   MOVE.l #$4e714e71,d1
00021884 <AmiBlitz3.ab3@3334>   JSR writelong                                            ;add 2 nops
0002188A <AmiBlitz3.ab3@3335>   MOVE.l #$4e714e71,d1
00021890 <AmiBlitz3.ab3@3336>   JSR writelong                                            ;add 2 nops
00021896 <AmiBlitz3.ab3@3337>   MOVE.l #$4e714e71,d1
0002189C <AmiBlitz3.ab3@3338>   JSR writelong                                            ;add 2 nops
000218A2 <AmiBlitz3.ab3@3339>    MOVE.l #$4e714e71,d1
000218A8 <AmiBlitz3.ab3@3340>   JSR writelong                                            ;add 2 nops
000218AC <AmiBlitz3.ab3@3343>   MOVE.b debugmode(PC),D1
000218B0 <AmiBlitz3.ab3@3344>    BEQ.b JL_0_4132
000218BA <AmiBlitz3.ab3@3345>   MOVE.b debugmode,storedebugmode
000218BE <AmiBlitz3.ab3@3346>   MOVE.w #$FFDC,D1
000218C2 <AmiBlitz3.ab3@3347>    BSR.w uselib
000218C8 <AmiBlitz3.ab3@3348>   TST.w debugversion                                       ;make a version for debugger
000218CC <AmiBlitz3.ab3@3349>    BNE.b JL_0_412A
000218D0 <AmiBlitz3.ab3@3353>   MOVE.w #$FA3C,D1
000218D4 <AmiBlitz3.ab3@3354>    BSR.w uselib
000218D8 <AmiBlitz3.ab3@3355>   MOVE.w #$0001,D1
000218DC <AmiBlitz3.ab3@3356>    BSR.w uselib
000218E0 <AmiBlitz3.ab3@3357> BRA.b JL_0_4132
000218E4 <AmiBlitz3.ab3@3360>   MOVE.w #$FA32,D1
000218E8 <AmiBlitz3.ab3@3361>   BSR.w uselib
000218EC <AmiBlitz3.ab3@3364>   BSR.w nextline
000218F2 <AmiBlitz3.ab3@3365>   CLR.l linenum
000218F8 <AmiBlitz3.ab3@3366>   CLR.l stacktrack
000218FE <AmiBlitz3.ab3@3369>   ADDQ.l #1,linenum
00021908 <AmiBlitz3.ab3@3370>   MOVE.l destpointer,destpointer2
0002190E <AmiBlitz3.ab3@3371>   MOVE.l a5,sourceline2
00021912 <AmiBlitz3.ab3@3372>   BSR.w compile_line                                        ;compile pass
00021916 <AmiBlitz3.ab3@3375>   BSR.w nextline
0002191A <AmiBlitz3.ab3@3376>    BNE.w JL_0_4136
0002191E <AmiBlitz3.ab3@3377>   BSR.w JUMP_do_runerrson
00021922 <AmiBlitz3.ab3@3378>   BSR.w pointchk
00021928 <AmiBlitz3.ab3@3379>   TST.b objectcount
0002192C <AmiBlitz3.ab3@3380>    BNE macenderr
00021932 <AmiBlitz3.ab3@3381>   CLR.l linenumat
00021936 <AmiBlitz3.ab3@3382>   BSR.w errchx2
00021940 <AmiBlitz3.ab3@3383>   CMP.l #-1,bssend
00021944 <AmiBlitz3.ab3@3384>    BNE 'l30
0002194E <AmiBlitz3.ab3@3385>   MOVE.l destpointer,bssend                                ;compile end
00021954 <AmiBlitz3.ab3@3388>   MOVE.l destpointer,d0
0002195E <AmiBlitz3.ab3@3389>   CMP.l #-1,bssstart
00021962 <AmiBlitz3.ab3@3390>   BNE 'lnf6
0002196C <AmiBlitz3.ab3@3391>   CMP.l #-1,chipstart
00021970 <AmiBlitz3.ab3@3392>   BNE 'lnf6
00021974 <AmiBlitz3.ab3@3393> BRA 'leven4
0002197A <AmiBlitz3.ab3@3396>   MOVE.l destpointer,d1
0002197C <AmiBlitz3.ab3@3397>   ADDQ.l #3,d1
00021982 <AmiBlitz3.ab3@3398>   AND.l #$fffffffc,d1                                      ;bug ?
00021988 <AmiBlitz3.ab3@3399>   MOVE.l d1,destpointer
00021992 <AmiBlitz3.ab3@3402>   MOVE.l destpointer,codeend
0002199C <AmiBlitz3.ab3@3403>   CMP.l #-1,chipend
000219A0 <AmiBlitz3.ab3@3404>   BNE 'l31
000219AA <AmiBlitz3.ab3@3405>   MOVE.l destpointer,chipend
000219B0 <AmiBlitz3.ab3@3408>   MOVE.l destpointer,d1
000219B2 <AmiBlitz3.ab3@3409>   ADDQ.l #1,d1
000219B8 <AmiBlitz3.ab3@3410>   AND.l #$fffffffe,d1                                     ;new evenexit
000219BE <AmiBlitz3.ab3@3411>   MOVE.l d1,destpointer
000219C2 <AmiBlitz3.ab3@3412>   MOVE.b debugmode(PC),D1
000219C6 <AmiBlitz3.ab3@3413>    BEQ.b JL_0_4180
000219CA <AmiBlitz3.ab3@3414>    BSR.w debugstuff
000219CE <AmiBlitz3.ab3@3415>   MOVE.w #$C300,D1
000219D4 <AmiBlitz3.ab3@3416>    JSR Atokejsr
000219D8 <AmiBlitz3.ab3@3417>    BSR.w debugstuff
000219DC <AmiBlitz3.ab3@3418>   MOVE.l eopcode(PC),D1
000219E2 <AmiBlitz3.ab3@3419>    JSR writelong
000219E6 <AmiBlitz3.ab3@3420>   MOVE.l lastcontlink(PC),D1
000219EA <AmiBlitz3.ab3@3421>    BEQ.b JL_0_4180
000219EC <AmiBlitz3.ab3@3422>   MOVEA.l D1,A0
000219F0 <AmiBlitz3.ab3@3423>   CLR.w $6(A0)
000219FA <AmiBlitz3.ab3@3429>   MOVE.l destpointer,endop                                ;where end goes...
00021A00 <AmiBlitz3.ab3@3431>   TST.w blitzmode
00021A04 <AmiBlitz3.ab3@3432>   BEQ.w JL_0_4198
00021A08 <AmiBlitz3.ab3@3433>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00021A0E <AmiBlitz3.ab3@3436>   TST.w intsused
00021A12 <AmiBlitz3.ab3@3437>   BEQ.b JL_0_41AA
00021A16 <AmiBlitz3.ab3@3438>   MOVE.w #$C105,D1                                        ;interupts off!
00021A1C <AmiBlitz3.ab3@3439>   JSR tokejsr2
00021A20 <AmiBlitz3.ab3@3442>   BSR.w calcstatic
00021A26 <AmiBlitz3.ab3@3443>   MOVE.w D4,numstatic
00021A2C <AmiBlitz3.ab3@3444>   MOVE.l D3,staticdata
00021A30 <AmiBlitz3.ab3@3445>    BSR.w calcmaxs
00021A36 <AmiBlitz3.ab3@3447>   TST.l tokeslist
00021A3A <AmiBlitz3.ab3@3448>    BEQ.b JL_0_41F8
00021A40 <AmiBlitz3.ab3@3449>   MOVE.w gotocode,D1                                       ;jmp!
00021A46 <AmiBlitz3.ab3@3450>    JSR writeword
00021A50 <AmiBlitz3.ab3@3451>   MOVE.l destpointer,endjmpat
00021A54 <AmiBlitz3.ab3@3452>    BSR.w addoff
00021A5A <AmiBlitz3.ab3@3453>    JSR writelong                                           
00021A5E <AmiBlitz3.ab3@3455>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00021A64 <AmiBlitz3.ab3@3459>   TST.w dontwrite
00021A68 <AmiBlitz3.ab3@3460>    BNE.b JL_0_41F8
00021A6C <AmiBlitz3.ab3@3461>   MOVEA.l endjmpat(PC),A4
00021A72 <AmiBlitz3.ab3@3462>   MOVE.l destpointer,(A4)
00021A78 <AmiBlitz3.ab3@3465>   TST.b returncode
00021A7C <AmiBlitz3.ab3@3466>   BEQ 'l2
00021A80 <AmiBlitz3.ab3@3467>   MOVE.w #$2e80,d1
00021A86 <AmiBlitz3.ab3@3468>   JSR writeword
00021A8C <AmiBlitz3.ab3@3471>   JSR JL_0_B98A
00021A92 <AmiBlitz3.ab3@3472>   TST.b returncode
00021A96 <AmiBlitz3.ab3@3473>   BEQ 'l3
00021A9A <AmiBlitz3.ab3@3474>   MOVE.w #$4e75,d1
00021AA0 <AmiBlitz3.ab3@3475>   JSR writeword
00021AA4 <AmiBlitz3.ab3@3476> BRA 'l1
00021AAA <AmiBlitz3.ab3@3479>   MOVE.l #$70004E75,D1
00021AB0 <AmiBlitz3.ab3@3480>   JSR writelong                                            ;write moveq #0,d0:rts
00021AB6 <AmiBlitz3.ab3@3483>   JSR JL_0_B73E
00021ABA <AmiBlitz3.ab3@3484>   BSR.w asmfixer
00021ABE <AmiBlitz3.ab3@3485>   BSR.w close_compilewin
00021AC2 <AmiBlitz3.ab3@3486> BRA.w call_setpointernormal
00021AC8 <AmiBlitz3.ab3@3490> JMP do_runerrson
00021ACA <AmiBlitz3.ab3@3494> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00021ACC <AmiBlitz3.ab3@3495>             Dc.b $4E,$40                                   ;TRAP  #00
00021AD0 <AmiBlitz3.ab3@3497> endjmpat:   Ds.l 1
00021AD6 <AmiBlitz3.ab3@3501>   MOVEA.l newtype_string,A2
00021ADC <AmiBlitz3.ab3@3502>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00021AE0 <AmiBlitz3.ab3@3505>     CMPA.w #$0,A2
00021AE4 <AmiBlitz3.ab3@3506>      BEQ.w pointchk_done
00021AE8 <AmiBlitz3.ab3@3507>     CMP.l $4(A2),D0
00021AEC <AmiBlitz3.ab3@3508>      BNE.w pointchk_next
00021AF4 <AmiBlitz3.ab3@3509>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00021AF8 <AmiBlitz3.ab3@3510> BRA.w notypeerr
00021AFA <AmiBlitz3.ab3@3513>     MOVEA.l (A2),A2
00021AFE <AmiBlitz3.ab3@3514> BRA.w pointchk_loop
00021B00 <AmiBlitz3.ab3@3517> RTS
00021B06 <AmiBlitz3.ab3@3521>   LEA labelbase,A2
00021B08 <AmiBlitz3.ab3@3525>   MOVE.l (A2),D0                                           ;testlabels
00021B0C <AmiBlitz3.ab3@3526>    BEQ.w errchx2_done
00021B0E <AmiBlitz3.ab3@3527>   MOVEA.l D0,A2
00021B12 <AmiBlitz3.ab3@3528>   MOVE.l $4(A2),D0
00021B16 <AmiBlitz3.ab3@3529>   BTST #$0,D0
00021B1A <AmiBlitz3.ab3@3530>    BNE.w errchx2_loop
00021B1E <AmiBlitz3.ab3@3531>   MOVE.l $8(A2),D0
00021B22 <AmiBlitz3.ab3@3532>    BNE.w errchx2_loop
00021B2A <AmiBlitz3.ab3@3533>   MOVE.w $10(A2),linenumat+2
00021B2C <AmiBlitz3.ab3@3534>   MOVEQ #0,d0
00021B30 <AmiBlitz3.ab3@3535>   MOVE.b $12(a2),d0
00021B38 <AmiBlitz3.ab3@3536>   MOVE.w 0(a2,d0),linenumat
00021B3E <AmiBlitz3.ab3@3537> JMP nolaberr                                               ;label not found
00021B44 <AmiBlitz3.ab3@3540>   MOVE.l concomsp,D0
00021B4A <AmiBlitz3.ab3@3541>   CMP.l #concomstack,D0
00021B4E <AmiBlitz3.ab3@3542>    BNE.w chxerr4
00021B54 <AmiBlitz3.ab3@3543>   MOVE.w connest,D1
00021B58 <AmiBlitz3.ab3@3544>    BNE.w chxerr4
00021B5A <AmiBlitz3.ab3@3547>   MOVE.l D1,-(A7)
00021B60 <AmiBlitz3.ab3@3548>   MOVE.l firstsel,D1
00021B64 <AmiBlitz3.ab3@3549>    BNE.w errchx_err1
00021B6A <AmiBlitz3.ab3@3550>   MOVE.l firstrep,D1
00021B6E <AmiBlitz3.ab3@3551>    BNE.w errchx_err2
00021B74 <AmiBlitz3.ab3@3552>   MOVE.w intstring,D1
00021B78 <AmiBlitz3.ab3@3553>    BNE.w errchx_err3
00021B7C <AmiBlitz3.ab3@3554>   MOVE.l 4(a7),d1
00021B82 <AmiBlitz3.ab3@3555>   MOVE.w proceduremode,D1
00021B86 <AmiBlitz3.ab3@3556>    BNE.w errchx_err6
00021B8C <AmiBlitz3.ab3@3557>   MOVE.l firstiff,d1
00021B90 <AmiBlitz3.ab3@3558>    BNE errchx_err5
00021B96 <AmiBlitz3.ab3@3559>   MOVE.l firstfor,D1
00021B9A <AmiBlitz3.ab3@3560>    BNE.w errchx_err7
00021B9C <AmiBlitz3.ab3@3561>   MOVE.l (A7)+,D1
00021B9E <AmiBlitz3.ab3@3562> RTS
00021BA8 <AmiBlitz3.ab3@3566>   MOVE.l sellineat,linenumat
00021BAE <AmiBlitz3.ab3@3567> JMP selerrz
00021BB8 <AmiBlitz3.ab3@3570>   MOVE.l replineat,linenumat
00021BBE <AmiBlitz3.ab3@3571> JMP unterr3
00021BC8 <AmiBlitz3.ab3@3574>   MOVE.l intlineat,linenumat
00021BCE <AmiBlitz3.ab3@3575> JMP interr2
00021BD8 <AmiBlitz3.ab3@3578>   MOVE.l iflineat,linenumat
00021BDE <AmiBlitz3.ab3@3579> JMP noenderr
00021BE8 <AmiBlitz3.ab3@3582>   MOVE.l prolineat,linenumat
00021BEE <AmiBlitz3.ab3@3583> JMP nopenderr
00021BF8 <AmiBlitz3.ab3@3586>   MOVE.l forlineat,linenumat
00021BFE <AmiBlitz3.ab3@3587> JMP nonexterr
00021C08 <AmiBlitz3.ab3@3590>   MOVE.l ciflineat,linenumat
00021C0E <AmiBlitz3.ab3@3591> JMP nocenderr
00021C18 <AmiBlitz3.ab3@3595>   MOVE.l data1,maxsat
00021C1A <AmiBlitz3.ab3@3596>   MOVEQ.l #$00,D4
00021C20 <AmiBlitz3.ab3@3597>   MOVEA.l libpointer,A2
00021C24 <AmiBlitz3.ab3@3600>     CMPA.w #$0,A2
00021C28 <AmiBlitz3.ab3@3601>      BEQ.w calcmaxs_done
00021C2C <AmiBlitz3.ab3@3602>     TST.w $C(A2)
00021C30 <AmiBlitz3.ab3@3603>      BPL.w calcmaxs_next
00021C34 <AmiBlitz3.ab3@3604>     MOVE.l $12(A2),D0
00021C38 <AmiBlitz3.ab3@3605>     TST.w -$2(A2,D0.L)
00021C3C <AmiBlitz3.ab3@3606>      BEQ.w calcmaxs_next
00021C3E <AmiBlitz3.ab3@3607>     ADDQ.w #1,D4
00021C42 <AmiBlitz3.ab3@3608>     MOVE.w -$6(A2,D0.L),D1
00021C46 <AmiBlitz3.ab3@3609>     BSR.w pokedata1
00021C48 <AmiBlitz3.ab3@3610>     MOVEQ.l #$01,D1
00021C4C <AmiBlitz3.ab3@3611>     MOVE.w -$2(A2,D0.L),D2
00021C4E <AmiBlitz3.ab3@3612>     LSL.w D2,D1
00021C52 <AmiBlitz3.ab3@3613>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00021C56 <AmiBlitz3.ab3@3614>     BSR.w writedatalong
00021C58 <AmiBlitz3.ab3@3617>     MOVEA.l (A2),A2
00021C5C <AmiBlitz3.ab3@3618> BRA.w calcmaxs_loop
00021C62 <AmiBlitz3.ab3@3621>   MOVE.w D4,maxsused
00021C66 <AmiBlitz3.ab3@3622>    BEQ.w calcmaxs_done2
00021C6A <AmiBlitz3.ab3@3623>   MOVE.w #$FFFA,D1                                         ;;use memlib
00021C6E <AmiBlitz3.ab3@3624> BRA.w uselib
00021C70 <AmiBlitz3.ab3@3627> RTS
00021C76 <AmiBlitz3.ab3@3631>    MOVE.l a7,stackaddr
00021C7A <AmiBlitz3.ab3@3632>    BSR.w compile_term
00021C7E <AmiBlitz3.ab3@3633>    BSR.w reget
00021C82 <AmiBlitz3.ab3@3634>    BNE.w illeolerr
00021C88 <AmiBlitz3.ab3@3635>    TST.w dontwrite
00021C8C <AmiBlitz3.ab3@3636>    BNE 'l1
00021C92 <AmiBlitz3.ab3@3637>    TST.l stacktrack
00021C96 <AmiBlitz3.ab3@3638>    BNE errormsg_stack
00021C9A <AmiBlitz3.ab3@3641>    CMP.w #-$7FDE,D0
00021C9E <AmiBlitz3.ab3@3642>    BNE.w compile_line_notelse
00021CA4 <AmiBlitz3.ab3@3643>    JSR do_else2
00021CA8 <AmiBlitz3.ab3@3644> BRA.w compile_line
00021CAA <AmiBlitz3.ab3@3647>   TST.w D0
00021CAE <AmiBlitz3.ab3@3648>   BNE.w compile_line
00021CB4 <AmiBlitz3.ab3@3653>   MOVE.l firstiff,D0
00021CB8 <AmiBlitz3.ab3@3654>    BEQ.w compile_line_done
00021CBA <AmiBlitz3.ab3@3655>   MOVEA.l D0,A0
00021CBE <AmiBlitz3.ab3@3656>   MOVE.w $C(A0),D1
00021CC2 <AmiBlitz3.ab3@3657>    BPL.w compile_line_done
00021CC6 <AmiBlitz3.ab3@3661>   BCLR #$F,D1
00021CCC <AmiBlitz3.ab3@3662>    JSR AJL_0_D7B8
00021CD2 <AmiBlitz3.ab3@3663>    JSR AJL_0_D81C
00021CD6 <AmiBlitz3.ab3@3664> BRA.w compile_line_unthen
00021CD8 <AmiBlitz3.ab3@3667> RTS
00021CDE <AmiBlitz3.ab3@3671>   LEA lastgloballabel,A0
00021CE0 <AmiBlitz3.ab3@3672>   TST.b (A0)
00021CE4 <AmiBlitz3.ab3@3673>   BEQ.w nolocerr
00021CEA <AmiBlitz3.ab3@3674>   LEA ptr_parameterstore,A1
00021CEC <AmiBlitz3.ab3@3675>   MOVEQ.l #$00,D2
00021CEE <AmiBlitz3.ab3@3678>   ADDQ.w #1,D2
00021CF0 <AmiBlitz3.ab3@3679>   MOVE.b (A0)+,(A1)+
00021CF4 <AmiBlitz3.ab3@3680>    BNE.w createlab_loop
00021CFA <AmiBlitz3.ab3@3681>   MOVE.b #$27,-$1(A1)
00021CFC <AmiBlitz3.ab3@3682>   MOVE.w D2,-(A7)
00021D02 <AmiBlitz3.ab3@3683>    JSR makename4
00021D04 <AmiBlitz3.ab3@3684>   CMP.w (A7)+,D2
00021D08 <AmiBlitz3.ab3@3685>    BEQ.w syntaxerr
00021D0A <AmiBlitz3.ab3@3686>    TST.w d0
00021D0E <AmiBlitz3.ab3@3687>    BPL createlab_done
00021D16 <AmiBlitz3.ab3@3688>    MOVE.w #$3a,lastchar
00021D18 <AmiBlitz3.ab3@3689>    SUBQ.l #2,a5
00021D1A <AmiBlitz3.ab3@3692> RTS
00021D24 <AmiBlitz3.ab3@3696>   MOVE.l #forthstack,forthsp
00021D2E <AmiBlitz3.ab3@3697>   MOVE.l #precstack,precsp
00021D30 <AmiBlitz3.ab3@3698> RTS
00021D32 <AmiBlitz3.ab3@3705>   MOVEQ.l #$00,D4
00021D5C <AmiBlitz3.ab3@3708>   !basic
00021D9E <AmiBlitz3.ab3@3709> 
00021DAE <AmiBlitz3.ab3@3711>   If (c_abort = 1)           ; check if set
00021DB0 <AmiBlitz3.ab3@3712>     MOVEQ.l #-$01,d4
00021DB6 <AmiBlitz3.ab3@3713>     MOVE.w D4,stopit
00021DD4 <AmiBlitz3.ab3@3714>     !asm
00021DD8 <AmiBlitz3.ab3@3715>     BRA chkrealstop__skip
00021DF6 <AmiBlitz3.ab3@3717>   !asm
00021DF8 <AmiBlitz3.ab3@3718>   MOVEQ.l #$00,D6
00021DFA <AmiBlitz3.ab3@3719>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00021DFC <AmiBlitz3.ab3@3723> RTS
00021E00 <AmiBlitz3.ab3@3727>   MOVE.w stopit(PC),D0
00021E04 <AmiBlitz3.ab3@3728>   BEQ chkstop__chk
00021E0A <AmiBlitz3.ab3@3729>   SUBQ.w #1,stopit
00021E0C <AmiBlitz3.ab3@3733> RTS
00021E14 <AmiBlitz3.ab3@3736>   MOVE.w #2000,stopit
00021E18 <AmiBlitz3.ab3@3737>   BSR.w chkrealstop
00021E1C <AmiBlitz3.ab3@3738>   BEQ.b chkstop__rts
00021E20 <AmiBlitz3.ab3@3740>   BSR.w close_compilewin
00021E24 <AmiBlitz3.ab3@3741>   BSR.w call_setpointernormal
00021E2A <AmiBlitz3.ab3@3743>   MOVEA.l errstack,A7
00021E30 <AmiBlitz3.ab3@3744>   MOVEA.l errcont,A0
00021E38 <AmiBlitz3.ab3@3745>   MOVE.w #-1,anyerrs
00021E3A <AmiBlitz3.ab3@3746> JMP (A0)
00021E3E <AmiBlitz3.ab3@3749> d_pc:           Ds.l 1
00021E42 <AmiBlitz3.ab3@3750> d_bigpc:        Ds.l 1
00021E44 <AmiBlitz3.ab3@3751> d_nomemleft:    Ds.w 1
00021E48 <AmiBlitz3.ab3@3752> cont_pc:        Ds.l 1
00021E4C <AmiBlitz3.ab3@3753> cont_pc2:       Ds.l 1
00021E50 <AmiBlitz3.ab3@3754> lastcontlink:   Ds.l 1
00021E54 <AmiBlitz3.ab3@3758>   ORI.w #$4E40,D1
00021E58 <AmiBlitz3.ab3@3759> BRA.w JUMP_writeword
00021E5E <AmiBlitz3.ab3@3763>   TST.b debugmode
00021E62 <AmiBlitz3.ab3@3764>   BEQ.w debugstuff__rts
00021E68 <AmiBlitz3.ab3@3771>   TST.w dirmode                                            ;or while in direct mode...
00021E6C <AmiBlitz3.ab3@3772>    BNE debugstuff__rts
00021E76 <AmiBlitz3.ab3@3773>   MOVE.l destpointer,d_pc
00021E80 <AmiBlitz3.ab3@3774>   MOVE.l bigpc,d_bigpc
00021E8A <AmiBlitz3.ab3@3775>   MOVE.w dontwrite,d_nomemleft
00021E8E <AmiBlitz3.ab3@3776>   MOVEM.l D0-D1,-(A7)
00021E90 <AmiBlitz3.ab3@3777>   MOVEQ.l #$01,D1
00021E94 <AmiBlitz3.ab3@3778>    BSR.w writetrap                                         ;write the adress to sourceline
00021E9A <AmiBlitz3.ab3@3782>    MOVE.l destpointer,D0
00021EA0 <AmiBlitz3.ab3@3783>   MOVE.l cont_pc,D1
00021EA6 <AmiBlitz3.ab3@3784>   MOVE.l D0,cont_pc
00021EAC <AmiBlitz3.ab3@3785>   MOVE.l D1,cont_pc2
00021EB0 <AmiBlitz3.ab3@3786>    BEQ.b debugstuff__skip
00021EB6 <AmiBlitz3.ab3@3787>   TST.w dontwrite
00021EBA <AmiBlitz3.ab3@3788>    BNE.b debugstuff__skip
00021EBC <AmiBlitz3.ab3@3789>   MOVEA.l D1,A4
00021EBE <AmiBlitz3.ab3@3790>   SUB.l A4,D0
00021EC2 <AmiBlitz3.ab3@3791>   MOVE.w D0,$6(A4)
00021EC8 <AmiBlitz3.ab3@3792>   MOVE.l A4,lastcontlink
00021ECE <AmiBlitz3.ab3@3795>   TST.w ininclude
00021ED4 <AmiBlitz3.ab3@3797>   TST.w makeexec
00021ED8 <AmiBlitz3.ab3@3798>   BEQ 'l1
00021EDE <AmiBlitz3.ab3@3799>   TST.w exdebug
00021EE2 <AmiBlitz3.ab3@3800>   BEQ 'noinc
00021EE6 <AmiBlitz3.ab3@3803>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00021EEC <AmiBlitz3.ab3@3804>   MOVE.l data1,d1
00021EF2 <AmiBlitz3.ab3@3805>   TST.b firsttime
00021EF6 <AmiBlitz3.ab3@3806>   BNE 'nofirst
00021EFE <AmiBlitz3.ab3@3807>   MOVE.b #1,firsttime
00021F04 <AmiBlitz3.ab3@3808>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00021F0A <AmiBlitz3.ab3@3809>   JSR writedatalong
00021F10 <AmiBlitz3.ab3@3810>   MOVE.l #"AmiB",d1
00021F16 <AmiBlitz3.ab3@3811>   JSR writedatalong
00021F1C <AmiBlitz3.ab3@3812>   MOVE.l destbufferstart,d1
00021F22 <AmiBlitz3.ab3@3813>   JSR writedatalong
00021F28 <AmiBlitz3.ab3@3814>   TST.w dontwrite
00021F2C <AmiBlitz3.ab3@3815>   BNE 'nohunk
00021F32 <AmiBlitz3.ab3@3816>   MOVE.l data1,d1
00021F34 <AmiBlitz3.ab3@3817>   SUBQ.l #4,d1
00021F3A <AmiBlitz3.ab3@3818>   SUB.l destbufferstart,d1
00021F3C <AmiBlitz3.ab3@3819>   MOVE.l d1,d2
00021F42 <AmiBlitz3.ab3@3820>   JSR addhunkoffset
00021F48 <AmiBlitz3.ab3@3823>   MOVE.l destpointer,d2
00021F4E <AmiBlitz3.ab3@3824>   MOVE.l data1,d1
00021F54 <AmiBlitz3.ab3@3827>   MOVE.l destpointer,d2
00021F56 <AmiBlitz3.ab3@3828>   MOVE.l d1,d3
00021F5C <AmiBlitz3.ab3@3829>   SUB.l destbufferstart,d1
00021F62 <AmiBlitz3.ab3@3830>   OR.l #$80000000,d1
00021F68 <AmiBlitz3.ab3@3831>   JSR writelong
00021F6E <AmiBlitz3.ab3@3832>   TST.w inmacro
00021F72 <AmiBlitz3.ab3@3833>   BEQ 'sc1
00021F78 <AmiBlitz3.ab3@3834>   MOVE.l myline,a0
00021F7C <AmiBlitz3.ab3@3836> BRA 'inc2
00021F82 <AmiBlitz3.ab3@3838>  'sc1  TST.w ininclude
00021F86 <AmiBlitz3.ab3@3839>   BEQ 'inc
00021F8C <AmiBlitz3.ab3@3840>   MOVE.l includesourceline,a0
00021F90 <AmiBlitz3.ab3@3841> BRA 'inc2
00021F96 <AmiBlitz3.ab3@3844>   MOVE.l sourceline,a0
00021F9A <AmiBlitz3.ab3@3845>   LEA 9(a0),a0
00021F9C <AmiBlitz3.ab3@3848>   MOVE.l d1,d2
00021F9E <AmiBlitz3.ab3@3849>   MOVE.l A5,D1
00021FA0 <AmiBlitz3.ab3@3850>   SUB.l a0,D1
00021FA6 <AmiBlitz3.ab3@3851>   ADD.l #9,d1
00021FAA <AmiBlitz3.ab3@3852>   BSR.w JUMP_writeword
00021FB0 <AmiBlitz3.ab3@3853>   CMP.l #9,d1
00021FB4 <AmiBlitz3.ab3@3854>   BEQ 'pos1
00021FBA <AmiBlitz3.ab3@3855>   TST.w dontwrite
00021FBE <AmiBlitz3.ab3@3856>   BNE 'nopad
00021FC4 <AmiBlitz3.ab3@3857>   MOVE.l lastsourceline,d1
00021FC8 <AmiBlitz3.ab3@3858>   MOVE.l d1,-6(a4)
00021FCC <AmiBlitz3.ab3@3859> BRA 'nopad
00021FD2 <AmiBlitz3.ab3@3862>   MOVE.l d2,lastsourceline
00021FDC <AmiBlitz3.ab3@3863>    MOVE.l destpointer,lastdestpointer
00021FDE <AmiBlitz3.ab3@3864>    MOVEQ #0,d1
00021FE4 <AmiBlitz3.ab3@3865>   MOVE.l data1,d2
00021FEA <AmiBlitz3.ab3@3866>   SUB.l destbufferstart,d2
00021FF0 <AmiBlitz3.ab3@3867>   JSR writedatalong
00021FF6 <AmiBlitz3.ab3@3868>   TST.w dontwrite
00021FFA <AmiBlitz3.ab3@3869>   BNE 'no2
00022000 <AmiBlitz3.ab3@3870>   JSR addhunkoffset
00022006 <AmiBlitz3.ab3@3873>   MOVE.l data1,d2
0002200C <AmiBlitz3.ab3@3874>   SUB.l destbufferstart,d2
00022012 <AmiBlitz3.ab3@3875>   JSR writedatalong
00022018 <AmiBlitz3.ab3@3876>   TST.w dontwrite
0002201C <AmiBlitz3.ab3@3877>   BNE 'no
00022022 <AmiBlitz3.ab3@3878>   JSR addhunkoffset
00022028 <AmiBlitz3.ab3@3879>   MOVE.l lastwritedat,a1
0002202E <AmiBlitz3.ab3@3880>   CMP.l #0,a1
00022032 <AmiBlitz3.ab3@3881>   BEQ 'no
00022034 <AmiBlitz3.ab3@3882>   MOVE.l d3,(a1)
0002203C <AmiBlitz3.ab3@3883>   MOVE.l prevwritedat,4(a1)
00022046 <AmiBlitz3.ab3@3884>   MOVE.l lastwritedat,prevwritedat
0002204C <AmiBlitz3.ab3@3887>   MOVE.l d3,lastwritedat
0002204E <AmiBlitz3.ab3@3888>   MOVEQ #4,d1
00022052 <AmiBlitz3.ab3@3889>   BSR pokedata1b
00022054 <AmiBlitz3.ab3@3892>   MOVE.b (a0)+,d1
00022058 <AmiBlitz3.ab3@3893>   BEQ 'done
0002205C <AmiBlitz3.ab3@3894>   BSR pokedata1b
00022060 <AmiBlitz3.ab3@3895> BRA 'loop
00022062 <AmiBlitz3.ab3@3898>   MOVEQ #0,d1
00022066 <AmiBlitz3.ab3@3899>   BSR pokedata1b
0002206C <AmiBlitz3.ab3@3900>   MOVE.l data1,d1
00022070 <AmiBlitz3.ab3@3901>   BTST #0,d1
00022074 <AmiBlitz3.ab3@3902>   BEQ 'nopad
00022076 <AmiBlitz3.ab3@3903>   MOVEQ #0,d1
0002207A <AmiBlitz3.ab3@3904>   BSR pokedata1b
0002207E <AmiBlitz3.ab3@3907>   MOVEM.l (a7)+,a0-a1/d2/d3
00022082 <AmiBlitz3.ab3@3908> BRA 'noinc2
00022088 <AmiBlitz3.ab3@3911>   MOVE.l sourceline,D1
0002208E <AmiBlitz3.ab3@3913>   JSR writelong
00022090 <AmiBlitz3.ab3@3914>   MOVE.l A5,D1
00022096 <AmiBlitz3.ab3@3915>   SUB.l sourceline,D1
0002209C <AmiBlitz3.ab3@3917>   JSR writeword
0002209E <AmiBlitz3.ab3@3920>   MOVEQ.l #$00,D1
000220A4 <AmiBlitz3.ab3@3921>   JSR writeword                                            ; was: BSR.w writeword
000220A8 <AmiBlitz3.ab3@3922>   MOVEM.l (A7)+,D0-D1
000220AA <AmiBlitz3.ab3@3925> RTS
000220B0 <AmiBlitz3.ab3@3929>   TST.b debugmode                                          ;extern debug
000220B4 <AmiBlitz3.ab3@3930>    BEQ.b undodebug__rts
000220BA <AmiBlitz3.ab3@3931>   TST.b dirmode
000220BE <AmiBlitz3.ab3@3932>   BNE undodebug__rts
000220C8 <AmiBlitz3.ab3@3937>   MOVE.w d_nomemleft,dontwrite
000220D2 <AmiBlitz3.ab3@3938>   MOVE.l d_bigpc,bigpc
000220DC <AmiBlitz3.ab3@3939>   MOVE.l d_pc,destpointer
000220E6 <AmiBlitz3.ab3@3940>   MOVE.l cont_pc2,cont_pc
000220E8 <AmiBlitz3.ab3@3943> RTS
000220F2 <AmiBlitz3.ab3@3947>   MOVE.l #forthstack,forthsp
000220FC <AmiBlitz3.ab3@3948>   MOVE.l #precstack,precsp
00022102 <AmiBlitz3.ab3@3949>   CLR.w regnum
00022108 <AmiBlitz3.ab3@3950>   CLR.w nonew
0002210E <AmiBlitz3.ab3@3951>   CLR.w sbasegot
00022118 <AmiBlitz3.ab3@3952>   MOVE.w varcodelen,oldvcodelen
0002211E <AmiBlitz3.ab3@3953>   CLR.w varcodelen
00022126 <AmiBlitz3.ab3@3954>   MOVE.w #-1,lasta6
00022128 <AmiBlitz3.ab3@3955> RTS
0002212E <AmiBlitz3.ab3@3959>   TST.w linemode
00022132 <AmiBlitz3.ab3@3960>   BMI.b smode__skip
00022136 <AmiBlitz3.ab3@3961>   BSR.w undodebug
0002213C <AmiBlitz3.ab3@3962>   MOVE.w linemode,D1
0002213E <AmiBlitz3.ab3@3963>   ADDQ.w #4,A7
00022140 <AmiBlitz3.ab3@3964>   LSL.w #2,D1
00022146 <AmiBlitz3.ab3@3965>   LEA modetable,A0
0002214A <AmiBlitz3.ab3@3966>   MOVEA.l $0(A0,D1.W),A0
0002214E <AmiBlitz3.ab3@3967>   BSR.w reget
00022150 <AmiBlitz3.ab3@3970> JMP (A0)                                                   ;jumptokenroutine
00022152 <AmiBlitz3.ab3@3973> RTS
0002215A <AmiBlitz3.ab3@3978>   MOVE.w #0,leaa0a0+2
00022160 <AmiBlitz3.ab3@3979>   CLR.b nowdeclare
00022166 <AmiBlitz3.ab3@3980>   CLR.b notypecheck
0002216C <AmiBlitz3.ab3@3981>   CLR.l lasttoken
00022172 <AmiBlitz3.ab3@3982>   CLR.b doimmediate
00022178 <AmiBlitz3.ab3@3983>   CLR.w vartype
0002217E <AmiBlitz3.ab3@3984>   CLR.w regnumfunc
00022184 <AmiBlitz3.ab3@3985>   CLR.b optistring
0002218A <AmiBlitz3.ab3@3986>   CLR.b iniffcommand
00022190 <AmiBlitz3.ab3@3987>   CLR.w instringon  ; new
00022196 <AmiBlitz3.ab3@3988>   CLR.b funccall
0002219C <AmiBlitz3.ab3@3989>   CLR.l currentfunccall
000221A2 <AmiBlitz3.ab3@3990>   CLR.l leftsidetype
000221A8 <AmiBlitz3.ab3@3991>   CLR.l rightsidetype
000221AE <AmiBlitz3.ab3@3992>   CLR.b peekaddrsize
000221B4 <AmiBlitz3.ab3@3993>   CLR.b blitzparloop
000221BA <AmiBlitz3.ab3@3994>   CLR.b funcparloop
000221C0 <AmiBlitz3.ab3@3995>   TST.b debugmode
000221C4 <AmiBlitz3.ab3@3996>    BEQ 'fpu
000221CE <AmiBlitz3.ab3@4002>   MOVE.b fpu,iee
000221D2 <AmiBlitz3.ab3@4003>   MOVE.w stopit(PC),D0
000221D6 <AmiBlitz3.ab3@4004>   BNE chkstop_chkb
000221DA <AmiBlitz3.ab3@4005>   BSR.w chkstop                                          ; message here
000221E0 <AmiBlitz3.ab3@4008>   SUBQ.w #1,stopit
000221E4 <AmiBlitz3.ab3@4011>   BSR.w findmacro                                          ;macro
000221EA <AmiBlitz3.ab3@4065>   TST.b debugmode
000221EE <AmiBlitz3.ab3@4066>    BEQ.s 'l10
000221F4 <AmiBlitz3.ab3@4067>   TST.b exdebug
000221F8 <AmiBlitz3.ab3@4068>   BEQ 'l10a
000221FA <AmiBlitz3.ab3@4069>   MOVE.w (a5),d0
000221FE <AmiBlitz3.ab3@4070>   CMP.w #$8025,d0
00022202 <AmiBlitz3.ab3@4071>    BEQ 'l10
00022206 <AmiBlitz3.ab3@4074>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
0002220A <AmiBlitz3.ab3@4078>   BSR.w get1bytemain                                       ;gettokenmain
0002220E <AmiBlitz3.ab3@4079>    BEQ.w undodebug
00022212 <AmiBlitz3.ab3@4080>   CMP.w #$002b,d0                                            ;check for + cast sign
00022216 <AmiBlitz3.ab3@4081>     BNE 'lb2
0002221A <AmiBlitz3.ab3@4082>     BSR.w get1bytemain
00022222 <AmiBlitz3.ab3@4083>     MOVE.b #1,notypecheck
0002222C <AmiBlitz3.ab3@4091>   MOVE.l #forthstack,forthsp
00022236 <AmiBlitz3.ab3@4092>   MOVE.l #precstack,precsp
0002223C <AmiBlitz3.ab3@4093>   CLR.w regnum
00022242 <AmiBlitz3.ab3@4094>   CLR.w nonew
00022248 <AmiBlitz3.ab3@4095>   CLR.w sbasegot
00022252 <AmiBlitz3.ab3@4096>   MOVE.w varcodelen,oldvcodelen
00022258 <AmiBlitz3.ab3@4098>   CLR.w varcodelen
00022260 <AmiBlitz3.ab3@4099>   MOVE.w #$FFFF,lasta6
00022264 <AmiBlitz3.ab3@4101>   BSR.w smode
00022266 <AmiBlitz3.ab3@4102>   TST.w D0
0002226A <AmiBlitz3.ab3@4103>   BMI.w get_tokencode
0002226E <AmiBlitz3.ab3@4104>   CMP.w #$2E,D0
00022272 <AmiBlitz3.ab3@4105>    BEQ.w JL_0_4644                                         ;shortlist
00022276 <AmiBlitz3.ab3@4106>   CMP.w #"#",D0
0002227A <AmiBlitz3.ab3@4107>    BEQ.w JL_0_4718                                         ;constant found
0002227E <AmiBlitz3.ab3@4108>   CMP.w #$27,D0
00022282 <AmiBlitz3.ab3@4109>    BEQ.w JL_0_4638                                         ;local label
00022288 <AmiBlitz3.ab3@4110>   MOVE.l A5,letstart
0002228E <AmiBlitz3.ab3@4111>   JSR getparameter
00022292 <AmiBlitz3.ab3@4112>   BSR.w reget
00022296 <AmiBlitz3.ab3@4113>    BEQ.w JL_0_4658                                         ;label found
0002229A <AmiBlitz3.ab3@4114>   CMP.w #$7B,D0
0002229E <AmiBlitz3.ab3@4115>    BEQ.w JL_0_475C
000222A0 <AmiBlitz3.ab3@4116>   TST.w d0
000222A4 <AmiBlitz3.ab3@4117>    BPL 'll1
000222AA <AmiBlitz3.ab3@4118>   TST.b newsyntax
000222AE <AmiBlitz3.ab3@4119>    BEQ 'll1
000222B4 <AmiBlitz3.ab3@4120>   LEA allowtab,a0
000222B6 <AmiBlitz3.ab3@4121>   MOVEQ #0,d1
000222B8 <AmiBlitz3.ab3@4122>   MOVE.b d0,d1
000222BC <AmiBlitz3.ab3@4123>   TST.b 0(a0,d1.w)
000222C0 <AmiBlitz3.ab3@4124>    BNE 'll1
000222C2 <AmiBlitz3.ab3@4125>   SUBQ.l #2,a5
000222CA <AmiBlitz3.ab3@4126>   MOVE.w #":",lastchar                                     ;no doublepoint
000222CE <AmiBlitz3.ab3@4127> BRA JL_0_4658
000222D6 <AmiBlitz3.ab3@4130>   CMP.l #"equ ",-1(a5)
000222DA <AmiBlitz3.ab3@4131>    BEQ 'll4
000222E2 <AmiBlitz3.ab3@4132>   CMP.l #"EQU ",-1(a5)
000222E6 <AmiBlitz3.ab3@4133>    BNE 'll2
000222E8 <AmiBlitz3.ab3@4136>   ADDQ.l #2,a5
000222EC <AmiBlitz3.ab3@4137>   BSR.w findlabel2
000222F0 <AmiBlitz3.ab3@4138>   BEQ.w 'lf1
000222F4 <AmiBlitz3.ab3@4139>   BSR.w addlabelhash
000222FC <AmiBlitz3.ab3@4140>   MOVE.l #$1,$4(A2)
00022304 <AmiBlitz3.ab3@4143>   CMPI.l #$1,$4(A2)
00022308 <AmiBlitz3.ab3@4144>    BNE.w illconerr
0002230C <AmiBlitz3.ab3@4145>   BSR get1bytemain
0002230E <AmiBlitz3.ab3@4146>   MOVE.l A2,-(A7)
00022310 <AmiBlitz3.ab3@4157>   SUBQ.l #1,a5
00022312 <AmiBlitz3.ab3@4160>   SUBQ.l #1,a5
00022318 <AmiBlitz3.ab3@4161>   JSR AJL_0_BF6E
0002231A <AmiBlitz3.ab3@4162>   MOVEA.l (A7)+,A2
0002231E <AmiBlitz3.ab3@4163>   MOVE.l D3,$8(A2)
00022320 <AmiBlitz3.ab3@4164>   RTS
00022324 <AmiBlitz3.ab3@4165>   BSR get1bytemain
0002232C <AmiBlitz3.ab3@4168>   CMP.l #"SET ",-1(a5)
00022330 <AmiBlitz3.ab3@4169>   BNE 'll3
00022334 <AmiBlitz3.ab3@4170> BRA 'll4
0002233A <AmiBlitz3.ab3@4173> JMP AJL_0_DEA6
0002233E <AmiBlitz3.ab3@4176>   CMP.w #-$7FDE,D0
00022342 <AmiBlitz3.ab3@4177>   BEQ.w get_tokencode
00022346 <AmiBlitz3.ab3@4178> BRA.w undodebug
0002234A <AmiBlitz3.ab3@4181>   BSR.w undodebug
0002234E <AmiBlitz3.ab3@4182>   BSR.w createlab
00022352 <AmiBlitz3.ab3@4183> BRA.w JL_0_466E
00022356 <AmiBlitz3.ab3@4186>   BSR.w get1bytemain
0002235A <AmiBlitz3.ab3@4187>    BEQ.w JL_0_462C
0002235E <AmiBlitz3.ab3@4188>   CMP.w #"'",D0
00022362 <AmiBlitz3.ab3@4189>    BEQ.w JL_0_4638
00022366 <AmiBlitz3.ab3@4190>    BSR.w makename2
00022368 <AmiBlitz3.ab3@4191>    TST.w d0
0002236C <AmiBlitz3.ab3@4192>    BPL 'll1
0002236E <AmiBlitz3.ab3@4193>    SUBQ.l #2,a5
00022376 <AmiBlitz3.ab3@4194>    MOVE.w #":",lastchar
0002237A <AmiBlitz3.ab3@4195> BRA JL_0_4658                                              ;????
0002237E <AmiBlitz3.ab3@4199>   BSR.w undodebug
00022384 <AmiBlitz3.ab3@4200>   LEA ptr_parameterstore,A0
0002238A <AmiBlitz3.ab3@4201>   LEA lastgloballabel,A1
0002238C <AmiBlitz3.ab3@4204>   MOVE.b (A0)+,(A1)+
00022390 <AmiBlitz3.ab3@4205>    BNE.w JL_0_4668
00022394 <AmiBlitz3.ab3@4208>   BSR.w findlabel2
00022398 <AmiBlitz3.ab3@4209>    BEQ.w JL_0_4698
0002239C <AmiBlitz3.ab3@4210>    BSR.w addlabelhash
000223A0 <AmiBlitz3.ab3@4213>   CLR.l $4(A2)
000223A8 <AmiBlitz3.ab3@4214>   MOVE.l destpointer,$8(A2)
000223B0 <AmiBlitz3.ab3@4217>   MOVE.w procnum,$10(A2)
000223B2 <AmiBlitz3.ab3@4218> RTS
000223B6 <AmiBlitz3.ab3@4222>   MOVE.l $4(A2),D0
000223BA <AmiBlitz3.ab3@4223>   BTST #$0,D0
000223BE <AmiBlitz3.ab3@4224>    BNE.w illlaberr
000223C4 <AmiBlitz3.ab3@4225>   TST.w pass
000223C8 <AmiBlitz3.ab3@4227>   MOVE.l $8(A2),D0
000223CC <AmiBlitz3.ab3@4228>    BNE.w duplaberr
000223D4 <AmiBlitz3.ab3@4229>   MOVE.w procnum,$10(A2)
000223D8 <AmiBlitz3.ab3@4230>   MOVEA.l $4(A2),A3
000223DE <AmiBlitz3.ab3@4231>   MOVEA.l _execbase,A6
000223E2 <AmiBlitz3.ab3@4234>   CMPA.w #$0,A3
000223E6 <AmiBlitz3.ab3@4235>    BEQ.w JL_0_467A
000223EA <AmiBlitz3.ab3@4236>     MOVE.l $4(A2),D1
000223EE <AmiBlitz3.ab3@4237>     BTST #$0,D1
000223F2 <AmiBlitz3.ab3@4238>     BNE.w illlaberr
000223F6 <AmiBlitz3.ab3@4239>   MOVE.w $8(A3),D1
000223FA <AmiBlitz3.ab3@4240>   CMP.w $10(A2),D1
000223FE <AmiBlitz3.ab3@4241>    BEQ.w JL_0_46DC
00022404 <AmiBlitz3.ab3@4242>    TST.b newsyntax
00022408 <AmiBlitz3.ab3@4243>    BEQ 'l1
0002240C <AmiBlitz3.ab3@4244> BRA.w JL_0_46DC                                            ;label context out of range fix
00022414 <AmiBlitz3.ab3@4249>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022418 <AmiBlitz3.ab3@4250> BRA.w referr
0002241E <AmiBlitz3.ab3@4253>   MOVE.w dontwrite,D1
00022422 <AmiBlitz3.ab3@4254>    BNE.w JL_0_4706
00022426 <AmiBlitz3.ab3@4255>   MOVEA.l $4(A3),A1
0002242C <AmiBlitz3.ab3@4256>   BTST #$0,$7(A3)
00022430 <AmiBlitz3.ab3@4257>    BEQ.w JL_0_4700
00022432 <AmiBlitz3.ab3@4258>   SUBQ.w #1,A1
00022438 <AmiBlitz3.ab3@4259>   MOVE.l data2,(A1)
0002243C <AmiBlitz3.ab3@4260> BRA.w JL_0_4706
00022442 <AmiBlitz3.ab3@4263>   MOVE.l destpointer,(A1)
00022444 <AmiBlitz3.ab3@4266>   MOVEA.l A3,A1
00022446 <AmiBlitz3.ab3@4267>   MOVEA.l (A3),A3
0002244A <AmiBlitz3.ab3@4268>   MOVE.l A3,$4(A2)
0002244C <AmiBlitz3.ab3@4269>   MOVEQ.l #$0C+2,D0
00022452 <AmiBlitz3.ab3@4270>   MOVE.l mempool,a0
00022458 <AmiBlitz3.ab3@4271>   MOVEA.l _execbase,A6
0002245C <AmiBlitz3.ab3@4272>   JSR _FreePooled(A6)
00022460 <AmiBlitz3.ab3@4273> BRA.w JL_0_46BC
0002246A <AmiBlitz3.ab3@4278>    MOVE.l #forthstack,forthsp
00022474 <AmiBlitz3.ab3@4279>   MOVE.l #precstack,precsp
00022478 <AmiBlitz3.ab3@4280>    BSR.w getparameter2
0002247C <AmiBlitz3.ab3@4283>   BSR.w findlabel2
00022480 <AmiBlitz3.ab3@4284>    BEQ.w JL_0_4738
00022484 <AmiBlitz3.ab3@4285>    BSR.w addlabelhash
0002248C <AmiBlitz3.ab3@4286>   MOVE.l #$1,$4(A2)
00022490 <AmiBlitz3.ab3@4287> BRA.w JL_0_4744
00022498 <AmiBlitz3.ab3@4290>   CMPI.l #$1,$4(A2)
0002249C <AmiBlitz3.ab3@4291>    BNE.w illconerr
000224A0 <AmiBlitz3.ab3@4300>   CMP.w #$3D,D0
000224A4 <AmiBlitz3.ab3@4301>   BEQ.w JL_0_474E
000224A6 <AmiBlitz3.ab3@4302> RTS
000224A8 <AmiBlitz3.ab3@4306>   MOVE.l A2,-(A7)
000224AE <AmiBlitz3.ab3@4307>   JSR AJL_0_BF6E
000224B0 <AmiBlitz3.ab3@4308>   MOVEA.l (A7)+,A2
000224B4 <AmiBlitz3.ab3@4309>   MOVE.l D3,$8(A2)                                         ;store constant
000224BC <AmiBlitz3.ab3@4310>   CMP.w #$0a,lastchar
000224C0 <AmiBlitz3.ab3@4311>   BNE 'l1
000224C8 <AmiBlitz3.ab3@4312>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
000224CA <AmiBlitz3.ab3@4315> RTS
000224CE <AmiBlitz3.ab3@4318>   BSR.w findproc                                           ;write statement call
000224D2 <AmiBlitz3.ab3@4319>   BEQ _state
000224D8 <AmiBlitz3.ab3@4320>   TST.l unusedfunc
000224DC <AmiBlitz3.ab3@4321>   BEQ noprocerr
000224E2 <AmiBlitz3.ab3@4323>   JSR gotoendsource
000224E6 <AmiBlitz3.ab3@4326>   TST.b $5(A2)
000224EC <AmiBlitz3.ab3@4328>   MOVE.l a2,currentfunccall
000224F4 <AmiBlitz3.ab3@4329>   MOVE.b #1,funccall
000224FA <AmiBlitz3.ab3@4330>   MOVE.b #1,isfunc(a2)
000224FE <AmiBlitz3.ab3@4331>   MOVE.l $E(A2),-(A7)
00022500 <AmiBlitz3.ab3@4332>   MOVEQ.l #$00,D0
00022504 <AmiBlitz3.ab3@4333>   MOVE.b $4(A2),D0
0002250A <AmiBlitz3.ab3@4334>   MOVE.l d0,parnumtemp
0002250E <AmiBlitz3.ab3@4335>   BEQ.w JL_0_4786
00022512 <AmiBlitz3.ab3@4336>   TST.b $20(a2)                                            ;increase if morepar
00022516 <AmiBlitz3.ab3@4337>   BNE 'no0par
00022518 <AmiBlitz3.ab3@4338>   MOVE.l a5,a4
0002251C <AmiBlitz3.ab3@4341>   CMP.b #$20,(a4)+
00022520 <AmiBlitz3.ab3@4342>   BEQ 'l1
00022526 <AmiBlitz3.ab3@4343>   CMP.b #"}",-1(a4)
0002252A <AmiBlitz3.ab3@4344>   BNE  'no0par                                             ;statementcall pars
0002252C <AmiBlitz3.ab3@4345>   MOVEQ #0,d0
00022530 <AmiBlitz3.ab3@4348>   LEA $16(A2),A1
00022532 <AmiBlitz3.ab3@4351>   MOVE.l d1,-(a7)
00022534 <AmiBlitz3.ab3@4352>   MOVE.b (a1),d2
00022536 <AmiBlitz3.ab3@4353>   MOVE.l d0,d1
0002253A <AmiBlitz3.ab3@4354>   CMP.w #4,d2
0002253E <AmiBlitz3.ab3@4355>   BNE 'l1b
00022544 <AmiBlitz3.ab3@4356>   ADD.l #$203c,d1
0002254A <AmiBlitz3.ab3@4358>   JSR writeword
00022550 <AmiBlitz3.ab3@4359>   MOVE.l #$ffff0000,d1
00022556 <AmiBlitz3.ab3@4361>   JSR writelong
0002255A <AmiBlitz3.ab3@4362> BRA 'l2b
00022560 <AmiBlitz3.ab3@4365>   TST.b fpu
00022564 <AmiBlitz3.ab3@4366>   BNE 'l1c
00022568 <AmiBlitz3.ab3@4367>   CMP.w #5,d2
0002256C <AmiBlitz3.ab3@4368>   BNE 'l1c
00022572 <AmiBlitz3.ab3@4369>   ADD.l #$203c,d1
00022578 <AmiBlitz3.ab3@4371>   JSR writeword
0002257E <AmiBlitz3.ab3@4372>   MOVE.l #$800000c1,d1
00022584 <AmiBlitz3.ab3@4374>   JSR writelong
00022588 <AmiBlitz3.ab3@4375> BRA 'l2b
0002258E <AmiBlitz3.ab3@4378>   ADD.l #$70ff,d1
00022594 <AmiBlitz3.ab3@4380>   JSR writeword
0002259A <AmiBlitz3.ab3@4381>   MOVE.l #$f23c5000,d1
0002259C <AmiBlitz3.ab3@4382>   MOVE.l d0,d2
0002259E <AmiBlitz3.ab3@4383>   ASR.l #2,d2
000225A0 <AmiBlitz3.ab3@4384>   ADD.l d2,d1
000225A6 <AmiBlitz3.ab3@4386>   JSR writelong
000225AA <AmiBlitz3.ab3@4387>   MOVE.w #$ffff,d1
000225B0 <AmiBlitz3.ab3@4389>   JSR writeword
000225B2 <AmiBlitz3.ab3@4392>   MOVE.l (a7)+,d1
000225B4 <AmiBlitz3.ab3@4393>   ADDQ.l #1,a1
000225BA <AmiBlitz3.ab3@4394>   ADD.l #$0200,d0
000225C0 <AmiBlitz3.ab3@4395>   CMP.l #$0e00,d0
000225C4 <AmiBlitz3.ab3@4396>    BEQ syntaxerr
000225C6 <AmiBlitz3.ab3@4397>   TST.b (a1)
000225CA <AmiBlitz3.ab3@4398>    BNE 'again
000225CE <AmiBlitz3.ab3@4399> BRA JL_0_4786
000225D8 <AmiBlitz3.ab3@4402>   MOVE.w a2offset,a2offset2
000225DC <AmiBlitz3.ab3@4403>   LEA $16(A2),A2
000225E2 <AmiBlitz3.ab3@4404>   MOVE.b funcparloop,-(a7)
000225EA <AmiBlitz3.ab3@4405>   MOVE.b #1,funcparloop
000225F0 <AmiBlitz3.ab3@4406>   MOVE.b blitzparloop,-(a7)
000225F6 <AmiBlitz3.ab3@4407>   CLR.b blitzparloop
000225FA <AmiBlitz3.ab3@4408>   BSR.w fetchpees2
00022600 <AmiBlitz3.ab3@4409>   MOVE.b (a7)+,blitzparloop
00022606 <AmiBlitz3.ab3@4410>   MOVE.b (a7)+,funcparloop
0002260A <AmiBlitz3.ab3@4411> BRA.w JL_0_478A
0002260E <AmiBlitz3.ab3@4414>   BSR.w get1bytemain
00022612 <AmiBlitz3.ab3@4417>   CMP.w #$7D,D0
00022616 <AmiBlitz3.ab3@4418>    BNE.w morepar_                                          ;syntax error morepar
0002261C <AmiBlitz3.ab3@4419>    JSR chkstak
0002261E <AmiBlitz3.ab3@4420>   MOVE.l (A7)+,D1
00022624 <AmiBlitz3.ab3@4436>    JSR JL_0_AFCA
0002262A <AmiBlitz3.ab3@4458>   CLR.b funccall
0002262E <AmiBlitz3.ab3@4459> BRA.w get1bytemain
00022634 <AmiBlitz3.ab3@4463>   MOVE.l d0,lasttoken
00022638 <AmiBlitz3.ab3@4464>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
0002263C <AmiBlitz3.ab3@4465>   BNE 'l2
00022640 <AmiBlitz3.ab3@4466>    MOVE.w #$dd05,d0
00022644 <AmiBlitz3.ab3@4469>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00022648 <AmiBlitz3.ab3@4470>   BNE 'l3
0002264C <AmiBlitz3.ab3@4471>    MOVE.w #$dd06,d0
00022650 <AmiBlitz3.ab3@4474>   CMP.w #-$7FC4,D0
00022654 <AmiBlitz3.ab3@4475>   BCS.w JL_0_47C4
00022658 <AmiBlitz3.ab3@4476>     CMP.w #-$7F4D,D0
0002265C <AmiBlitz3.ab3@4477>     BCC.w JL_0_47C4
00022664 <AmiBlitz3.ab3@4478>       BTST #$7,assemblercheck                              ;inline Assembler checking
00022668 <AmiBlitz3.ab3@4479>       BNE.b JL_0_47C0
0002266E <AmiBlitz3.ab3@4480>         TST.b debugmode
00022672 <AmiBlitz3.ab3@4481>         BEQ.b 'l10
0002267C <AmiBlitz3.ab3@4486>           MOVE.w d_nomemleft,dontwrite
00022686 <AmiBlitz3.ab3@4487>           MOVE.l d_bigpc,bigpc
00022690 <AmiBlitz3.ab3@4488>           MOVE.l d_pc,destpointer
0002269A <AmiBlitz3.ab3@4489>           MOVE.l cont_pc2,cont_pc
0002269E <AmiBlitz3.ab3@4495> BRA.w JL_0_612C
000226A2 <AmiBlitz3.ab3@4498>   BCLR #$F,D0
000226A4 <AmiBlitz3.ab3@4499>   MOVE.w D0,D1
000226A8 <AmiBlitz3.ab3@4500>   ANDI.w #$7F00,D1
000226AC <AmiBlitz3.ab3@4501>   BNE.w JL_0_4856
000226B0 <AmiBlitz3.ab3@4502>     CMP.w #$B3,D0                                          ;intern Instructions
000226B4 <AmiBlitz3.ab3@4503>     BCS.w JL_0_47F2
000226B8 <AmiBlitz3.ab3@4504>       SUBI.w #$77,D0
000226BC <AmiBlitz3.ab3@4505>       CMP.w #$4B,D0
000226C0 <AmiBlitz3.ab3@4506>       BEQ.w JL_0_4830
000226C4 <AmiBlitz3.ab3@4507>         CMP.w #$46,D0
000226C8 <AmiBlitz3.ab3@4508>         BEQ.w JL_0_4830
000226CC <AmiBlitz3.ab3@4509> BRA.w JL_0_4834                                            ; change tokennum
000226D0 <AmiBlitz3.ab3@4512>     CMP.w #$38,D0
000226D4 <AmiBlitz3.ab3@4513>      BEQ.w JL_0_4830
000226D8 <AmiBlitz3.ab3@4514>     CMP.w #$39,D0
000226DC <AmiBlitz3.ab3@4515>      BEQ.w JL_0_4830
000226E0 <AmiBlitz3.ab3@4516>     CMP.w #$D,D0
000226E4 <AmiBlitz3.ab3@4517>      BEQ.w JL_0_4830
000226E8 <AmiBlitz3.ab3@4518>     CMP.w #$12,D0
000226EC <AmiBlitz3.ab3@4519>      BEQ.w JL_0_4830
000226F0 <AmiBlitz3.ab3@4520>     CMP.w #$13,D0
000226F4 <AmiBlitz3.ab3@4521>      BEQ.w JL_0_4830
000226F8 <AmiBlitz3.ab3@4522>     CMP.w #$1A,D0
000226FC <AmiBlitz3.ab3@4523>      BEQ.w JL_0_4830
00022700 <AmiBlitz3.ab3@4524>     CMP.w #$2A,D0
00022704 <AmiBlitz3.ab3@4525>      BHI.w JL_0_4834
00022708 <AmiBlitz3.ab3@4526>     CMP.w #$23,D0
0002270C <AmiBlitz3.ab3@4527>      BCS.b JL_0_4834
00022710 <AmiBlitz3.ab3@4530>   BSR.w undodebug
00022712 <AmiBlitz3.ab3@4533>   SUBQ.w #1,D0
00022714 <AmiBlitz3.ab3@4534>   LSL.w #2,D0
0002271A <AmiBlitz3.ab3@4541>   LEA instructionbase,A0
0002271E <AmiBlitz3.ab3@4542>   MOVEA.l $0(A0,D0.W),A0
00022720 <AmiBlitz3.ab3@4543>   MOVE.l A0,-(A7)
00022724 <AmiBlitz3.ab3@4544> BRA.w get1bytemain
00022726 <AmiBlitz3.ab3@4550>   MOVE.w D0,D1
0002272A <AmiBlitz3.ab3@4551>    BSR.w searchinstr
00022730 <AmiBlitz3.ab3@4552>    TST.b newmode
00022734 <AmiBlitz3.ab3@4553>    BNE compile_term
0002273A <AmiBlitz3.ab3@4554>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
0002273E <AmiBlitz3.ab3@4555>    BNE.w stamigalib
00022744 <AmiBlitz3.ab3@4556>   BTST #$0,$1(A3)
00022748 <AmiBlitz3.ab3@4557>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
0002274C <AmiBlitz3.ab3@4558>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00022750 <AmiBlitz3.ab3@4559>    BSR.w JL_0_66F6
00022756 <AmiBlitz3.ab3@4565>   MOVE.w numreps,-(A7)
0002275C <AmiBlitz3.ab3@4566>   MOVE.w userp,-(A7)
00022762 <AmiBlitz3.ab3@4567>   MOVE.w a2offset,-(A7)
00022764 <AmiBlitz3.ab3@4568>   MOVE.l A2,-(A7)                                          ;recurs.
0002276E <AmiBlitz3.ab3@4569>   MOVE.w convsize,userp
00022772 <AmiBlitz3.ab3@4570>   LEA $6(A3),A1
00022774 <AmiBlitz3.ab3@4574>    MOVE.w (A1),D2
00022778 <AmiBlitz3.ab3@4575>    BMI.w SERR                                              ;statement syntax error
0002277C <AmiBlitz3.ab3@4576>   ANDI.w #$FF,D2
0002277E <AmiBlitz3.ab3@4577>   CMP.w D2,D1
00022782 <AmiBlitz3.ab3@4578>    BEQ.w JL_0_48E0
00022786 <AmiBlitz3.ab3@4579>    BCS.w JL_0_48CC
00022788 <AmiBlitz3.ab3@4580>   MOVE.b (A1),D3
0002278C <AmiBlitz3.ab3@4581>   ANDI.w #$7,D3
00022790 <AmiBlitz3.ab3@4582>    BEQ.w JL_0_48CC
00022792 <AmiBlitz3.ab3@4583>   MOVE.w D2,D4
00022794 <AmiBlitz3.ab3@4584>   SUB.w D3,D4
00022796 <AmiBlitz3.ab3@4585>   MOVEQ.l #$00,D5
00022798 <AmiBlitz3.ab3@4586>   MOVE.w D1,D5
0002279A <AmiBlitz3.ab3@4587>   SUB.w D4,D5
0002279C <AmiBlitz3.ab3@4588>   DIVU D3,D5
0002279E <AmiBlitz3.ab3@4589>   SWAP D5
000227A0 <AmiBlitz3.ab3@4590>   TST.w D5
000227A4 <AmiBlitz3.ab3@4591>    BEQ.w JL_0_48E0
000227A6 <AmiBlitz3.ab3@4594>   ADDQ.w #2,A1
000227A8 <AmiBlitz3.ab3@4595>   ADDA.w D2,A1
000227AC <AmiBlitz3.ab3@4596>    BSR.w aligna1
000227B0 <AmiBlitz3.ab3@4597>    BSR.w skiplibreg
000227B4 <AmiBlitz3.ab3@4598>   LEA $C(A1),A1
000227B8 <AmiBlitz3.ab3@4599> BRA.w JL_0_489A
000227BA <AmiBlitz3.ab3@4602>   MOVE.w (a3),d2
000227BE <AmiBlitz3.ab3@4603>   BTST #1,d2
000227C2 <AmiBlitz3.ab3@4604>   BEQ statement_
000227C6 <AmiBlitz3.ab3@4605>   CMP.w #1,d1
000227CA <AmiBlitz3.ab3@4606>   BEQ statement_
000227CE <AmiBlitz3.ab3@4609>   CMP.b #$20,(a5)+
000227D2 <AmiBlitz3.ab3@4610>   BEQ 'l2
000227D8 <AmiBlitz3.ab3@4611>   CMP.b #"(",-2(a5)
000227DC <AmiBlitz3.ab3@4612>   BNE 'l1
000227E0 <AmiBlitz3.ab3@4613> BRA parameter_
000227E4 <AmiBlitz3.ab3@4616> BRA inbrackets_
000227E6 <AmiBlitz3.ab3@4619>   MOVE.b (A1),D2
000227E8 <AmiBlitz3.ab3@4620>   LSL.w #8,D2
000227EA <AmiBlitz3.ab3@4621>   OR.w D2,D1
000227EC <AmiBlitz3.ab3@4622>   MOVE.l A1,-(A7)
000227F2 <AmiBlitz3.ab3@4623>   CLR.w a2offset
000227F4 <AmiBlitz3.ab3@4624>   TST.w D1
000227F8 <AmiBlitz3.ab3@4625>    BEQ.w JL_0_4900
000227FC <AmiBlitz3.ab3@4626>   LEA $2(A1),A2
00022802 <AmiBlitz3.ab3@4628>   MOVE.l lasttoken,-(a7)
00022808 <AmiBlitz3.ab3@4629>   CLR.l lasttoken
0002280C <AmiBlitz3.ab3@4630>   BSR.w fetchlibps
00022812 <AmiBlitz3.ab3@4631>   MOVE.l (a7)+,lasttoken
00022816 <AmiBlitz3.ab3@4632> BRA.w JL_0_4904
0002281A <AmiBlitz3.ab3@4635>   BSR.w get1bytemain
0002281C <AmiBlitz3.ab3@4638>   MOVEA.l (A7)+,A1
0002281E <AmiBlitz3.ab3@4639>   MOVEA.l (A7)+,A2
00022824 <AmiBlitz3.ab3@4640>   MOVE.w a2offset,D1
00022828 <AmiBlitz3.ab3@4641>    BEQ.w JL_0_493A
0002282E <AmiBlitz3.ab3@4642>   MOVE.w D1,preplibst+2
00022834 <AmiBlitz3.ab3@4643>   MOVE.l preplibst,D1
0002283A <AmiBlitz3.ab3@4644>    JSR writelong                                           ;write array offset stack correct
00022844 <AmiBlitz3.ab3@4645>   MOVE.w numreps,movenumrep+2
00022848 <AmiBlitz3.ab3@4646>    BEQ.w JL_0_493A
0002284E <AmiBlitz3.ab3@4647>   MOVE.l movenumrep,D1
00022854 <AmiBlitz3.ab3@4648>    JSR writelong
0002285A <AmiBlitz3.ab3@4652>   JSR userjsr
00022860 <AmiBlitz3.ab3@4655>   MOVE.w a2offset,D1
00022864 <AmiBlitz3.ab3@4656>    BEQ.w JL_0_4974
00022868 <AmiBlitz3.ab3@4657>   CMP.w #$8,D1
0002286C <AmiBlitz3.ab3@4658>    BHI.w JL_0_4964
00022870 <AmiBlitz3.ab3@4659>   ANDI.w #$7,D1
00022872 <AmiBlitz3.ab3@4660>   LSL.w #8,D1
00022874 <AmiBlitz3.ab3@4661>   LSL.w #1,D1
00022878 <AmiBlitz3.ab3@4662>   ORI.w #$504F,D1
0002287E <AmiBlitz3.ab3@4664>   JSR writeword
00022882 <AmiBlitz3.ab3@4665> BRA.w JL_0_4974
00022888 <AmiBlitz3.ab3@4668>   MOVE.w D1,fixlibst+2
0002288E <AmiBlitz3.ab3@4669>   MOVE.l fixlibst,D1
00022894 <AmiBlitz3.ab3@4670>   JSR writelong
0002289A <AmiBlitz3.ab3@4673>   MOVE.w (A7)+,a2offset
000228A0 <AmiBlitz3.ab3@4674>   MOVE.w (A7)+,userp
000228A6 <AmiBlitz3.ab3@4675>   MOVE.w (A7)+,numreps
000228AA <AmiBlitz3.ab3@4676> BRA.w reget
000228AE <AmiBlitz3.ab3@4680>   MOVEM.l A2-A3,-(A7)
000228B4 <AmiBlitz3.ab3@4681>   CLR.b doublepeek
000228BA <AmiBlitz3.ab3@4682>   MOVE.l A5,lastsourcepos
000228BE <AmiBlitz3.ab3@4683>    BSR.w getchar
000228C2 <AmiBlitz3.ab3@4684>   CMP.w #$2E,D0
000228C6 <AmiBlitz3.ab3@4685>    BEQ.w JL_0_49B4
000228CC <AmiBlitz3.ab3@4686>   MOVEA.l defaulttype,A2
000228D0 <AmiBlitz3.ab3@4687>   CMP.w #$24,D0
000228D4 <AmiBlitz3.ab3@4688>    BNE.w JL_0_49CA
000228D6 <AmiBlitz3.ab3@4689>   MOVEQ.l #$07,D1
000228DA <AmiBlitz3.ab3@4690> BRA.w JL_0_49DE
000228DE <AmiBlitz3.ab3@4693>   BSR.w getparameter2
000228E2 <AmiBlitz3.ab3@4694>   BEQ.w syntaxerr
000228E8 <AmiBlitz3.ab3@4695>   LEA newtypebase,A2
000228EC <AmiBlitz3.ab3@4696>   BSR.w findtype
000228F0 <AmiBlitz3.ab3@4697>   BNE.w notypeerr
000228FA <AmiBlitz3.ab3@4701>   MOVE.w oldqflag,instringon
00022900 <AmiBlitz3.ab3@4702>   MOVEA.l lastsourcepos,A5
00022904 <AmiBlitz3.ab3@4707>   MOVE.w $6(A2),D1
0002290A <AmiBlitz3.ab3@4708>   CMP.w #8,8(a2)
0002290E <AmiBlitz3.ab3@4709>   BNE 'l1
00022916 <AmiBlitz3.ab3@4710>   MOVE.b #1,doublepeek
0002291C <AmiBlitz3.ab3@4714>   MOVE.w D1,convsize
00022920 <AmiBlitz3.ab3@4715>   MOVEM.l (A7)+,A2-A3
00022922 <AmiBlitz3.ab3@4716> RTS
00022928 <AmiBlitz3.ab3@4721>   BTST #$3,$1(A3)
0002292C <AmiBlitz3.ab3@4722>   BEQ.w JL_0_4A06
00022930 <AmiBlitz3.ab3@4723>   BSR.w AJL_0_498A                                         ;read peek/poke size
00022934 <AmiBlitz3.ab3@4725>   ORI.w #$7000,D1
0002293A <AmiBlitz3.ab3@4726>   JSR writeword
00022940 <AmiBlitz3.ab3@4727>   ADDQ.w #1,regnum
00022942 <AmiBlitz3.ab3@4730> RTS
00022944 <AmiBlitz3.ab3@4736>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00022946 <AmiBlitz3.ab3@4737>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00022948 <AmiBlitz3.ab3@4738>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
0002294A <AmiBlitz3.ab3@4742> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
0002294C <AmiBlitz3.ab3@4743>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
0002294E <AmiBlitz3.ab3@4744>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022950 <AmiBlitz3.ab3@4748> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022952 <AmiBlitz3.ab3@4749>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022954 <AmiBlitz3.ab3@4750>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00022956 <AmiBlitz3.ab3@4754> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00022958 <AmiBlitz3.ab3@4757> srctype:    Ds.w 1
0002295C <AmiBlitz3.ab3@4762>   BSR.w excget
00022960 <AmiBlitz3.ab3@4763>   CMP.w #$2C,D0
00022964 <AmiBlitz3.ab3@4764>    BNE.w syntaxerr
0002296A <AmiBlitz3.ab3@4765>   MOVE.b D2,srctype
00022970 <AmiBlitz3.ab3@4766>   MOVE.w pusha2,D1
00022976 <AmiBlitz3.ab3@4767>   JSR writeword
0002297A <AmiBlitz3.ab3@4768>   BSR.w get1bytemain
0002297E <AmiBlitz3.ab3@4769>   BSR.w excget
00022984 <AmiBlitz3.ab3@4770>   CMP.b srctype,D2
00022988 <AmiBlitz3.ab3@4771>    BNE.w excerr2
0002298E <AmiBlitz3.ab3@4772>   MOVE.w pulla1,D1
00022994 <AmiBlitz3.ab3@4773>    JSR writeword
00022998 <AmiBlitz3.ab3@4774>   CMP.b #$2,D2
0002299C <AmiBlitz3.ab3@4775>    BCS.w JL_0_4B2A
000229A0 <AmiBlitz3.ab3@4776>    BEQ.w JL_0_4B1E
000229A4 <AmiBlitz3.ab3@4777>   LEA swapl(PC),A0
000229A8 <AmiBlitz3.ab3@4778>   LEA swaplf(PC),A1
000229AE <AmiBlitz3.ab3@4779> JMP pokecode
000229B2 <AmiBlitz3.ab3@4782>   LEA swapw(PC),A0
000229B6 <AmiBlitz3.ab3@4783>   LEA swapwf(PC),A1
000229BC <AmiBlitz3.ab3@4784> JMP pokecode
000229C0 <AmiBlitz3.ab3@4787>   LEA swapb(PC),A0
000229C4 <AmiBlitz3.ab3@4788>   LEA swapbf(PC),A1
000229CA <AmiBlitz3.ab3@4789> JMP pokecode
000229D0 <AmiBlitz3.ab3@4793>   JSR getparameter
000229D4 <AmiBlitz3.ab3@4794>   BSR.w JL_0_8E3C
000229D8 <AmiBlitz3.ab3@4795>   BSR.w calcvar
000229DC <AmiBlitz3.ab3@4796>   BTST #$E,D2
000229E0 <AmiBlitz3.ab3@4797>    BEQ.w JL_0_4B4E
000229E4 <AmiBlitz3.ab3@4798>   MOVE.b #$4,D2
000229E6 <AmiBlitz3.ab3@4801>   TST.b D2
000229EA <AmiBlitz3.ab3@4802>    BEQ.w excerr
000229EE <AmiBlitz3.ab3@4803>   BTST #$F,D2
000229F2 <AmiBlitz3.ab3@4804>    BNE.w JL_0_4B6A
000229F8 <AmiBlitz3.ab3@4805>   MOVE.w leaamp,D1
000229FE <AmiBlitz3.ab3@4806>    JSR pokewda5s
00022A00 <AmiBlitz3.ab3@4807>   MOVE.w D3,D1
00022A06 <AmiBlitz3.ab3@4808> JMP writeword
00022A08 <AmiBlitz3.ab3@4811> RTS
00022A0E <AmiBlitz3.ab3@4821>   MOVE.l mempool,a0
00022A14 <AmiBlitz3.ab3@4822>   MOVEA.l _execbase,A6
00022A18 <AmiBlitz3.ab3@4823> JMP _AllocPooled(a6)
00022A1C <AmiBlitz3.ab3@4827>   MOVE.w #$BF00,D1
00022A22 <AmiBlitz3.ab3@4828> JMP Atokejsr
00022A26 <AmiBlitz3.ab3@4832>   CMP.w #-$7FFA,D0
00022A2A <AmiBlitz3.ab3@4833>    BEQ.w popreturn
00022A2E <AmiBlitz3.ab3@4834>   CMP.w #-$7FEA,D0
00022A32 <AmiBlitz3.ab3@4835>    BEQ.w popnext2
00022A36 <AmiBlitz3.ab3@4836>   CMP.w #-$7FF2,D0
00022A3A <AmiBlitz3.ab3@4837>    BEQ.w popselect2
00022A3E <AmiBlitz3.ab3@4838>   CMP.w #-$7FF5,D0
00022A42 <AmiBlitz3.ab3@4839>    BEQ.w get1bytemain
00022A46 <AmiBlitz3.ab3@4840>   CMP.w #-$7FF4,D0
00022A4A <AmiBlitz3.ab3@4841>    BEQ.w get1bytemain
00022A4E <AmiBlitz3.ab3@4842>   CMP.w #-$7FEC,D0
00022A52 <AmiBlitz3.ab3@4843>    BEQ.w get1bytemain
00022A56 <AmiBlitz3.ab3@4844>   CMP.w #-$7F45,D0
00022A5A <AmiBlitz3.ab3@4845>    BEQ.w get1bytemain
00022A5E <AmiBlitz3.ab3@4846> BRA.w syntaxerr
00022A64 <AmiBlitz3.ab3@4849>   TST.b debugmode
00022A68 <AmiBlitz3.ab3@4850>    BEQ.w popreturn__norerr
00022A6C <AmiBlitz3.ab3@4851>   LEA popreturn__rfix(PC),A0
00022A70 <AmiBlitz3.ab3@4852>   LEA popreturn__rfixf(PC),A1
00022A76 <AmiBlitz3.ab3@4853>    JSR pokecode
00022A7A <AmiBlitz3.ab3@4854>   MOVE.w #$C305,D1
00022A80 <AmiBlitz3.ab3@4855>    JSR Atokejsr
00022A84 <AmiBlitz3.ab3@4856>   MOVE.w popreturn__rfix2(PC),D1
00022A8A <AmiBlitz3.ab3@4858>    JSR writeword
00022A8E <AmiBlitz3.ab3@4859> BRA.w get1bytemain
00022A94 <AmiBlitz3.ab3@4863>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00022A98 <AmiBlitz3.ab3@4864>   BEQ.w popreturn__rfix2
00022A9E <AmiBlitz3.ab3@4867>   JSR $20000                                               ;reass
00022AA0 <AmiBlitz3.ab3@4870>   ADDQ.w #6,A7
00022AA4 <AmiBlitz3.ab3@4874>   MOVE.w popreturn__sfix(PC),D1
00022AAA <AmiBlitz3.ab3@4875>   JSR writeword
00022AAE <AmiBlitz3.ab3@4876> BRA.w get1bytemain
00022AB0 <AmiBlitz3.ab3@4881>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00022AB6 <AmiBlitz3.ab3@4886>   MOVE.l firstfor,D0
00022ABA <AmiBlitz3.ab3@4887>    BEQ.w noforerr
00022ABC <AmiBlitz3.ab3@4888>   MOVEA.l D0,A2
00022AC0 <AmiBlitz3.ab3@4889>    BSR.w get1bytemain
00022AC4 <AmiBlitz3.ab3@4890>   BSR.w popnext
00022ACA <AmiBlitz3.ab3@4893>   TST.b debugmode
00022ACE <AmiBlitz3.ab3@4894>    BEQ.w popnext3__ner
00022AD4 <AmiBlitz3.ab3@4895>   MOVE.l nextfixw2,D1
00022ADA <AmiBlitz3.ab3@4896>   CMPI.w #$3,$C(A2)
00022ADE <AmiBlitz3.ab3@4897>    BCS.w writelong2
00022AE4 <AmiBlitz3.ab3@4898>   MOVE.l nextfixl2,D1
00022AEA <AmiBlitz3.ab3@4899> writelong2 JMP  writelong
00022AF0 <AmiBlitz3.ab3@4902>   CMPI.w #$3,$C(A2)
00022AF4 <AmiBlitz3.ab3@4903>    BCS.w popnext3__skip2
00022AFA <AmiBlitz3.ab3@4904>   MOVE.l nextfixl,D1
00022B00 <AmiBlitz3.ab3@4905>   JMP writelong
00022B06 <AmiBlitz3.ab3@4908>   MOVE.w nextfixw,D1
00022B0C <AmiBlitz3.ab3@4909> JMP writeword
00022B10 <AmiBlitz3.ab3@4913>   MOVE.w $C(A2),D0
00022B16 <AmiBlitz3.ab3@4914>   TST.b debugmode
00022B1A <AmiBlitz3.ab3@4915>    BEQ.w popnext__norunerr
00022B1E <AmiBlitz3.ab3@4916>   MOVE.w #$C306,D1
00022B22 <AmiBlitz3.ab3@4917>   CMP.w #$3,D0
00022B26 <AmiBlitz3.ab3@4918>    BCS.w popnext__oktc
00022B28 <AmiBlitz3.ab3@4919>   ADDQ.w #1,D1
00022B2A <AmiBlitz3.ab3@4922>   MOVE.l A2,-(A7)
00022B30 <AmiBlitz3.ab3@4923>   JSR Atokejsr
00022B32 <AmiBlitz3.ab3@4924>   MOVEA.l (A7)+,A2
00022B34 <AmiBlitz3.ab3@4927> RTS
00022B3A <AmiBlitz3.ab3@4931>   MOVE.l firstsel,D0
00022B3E <AmiBlitz3.ab3@4932>    BEQ.w eselerr
00022B40 <AmiBlitz3.ab3@4933>   MOVEA.l D0,A2
00022B44 <AmiBlitz3.ab3@4934>    BSR.w get1bytemain
00022B48 <AmiBlitz3.ab3@4937>   MOVE.w $C(A2),D2
00022B4E <AmiBlitz3.ab3@4938>   TST.b debugmode
00022B52 <AmiBlitz3.ab3@4939>    BEQ.w popselect__norerr
00022B56 <AmiBlitz3.ab3@4940>   MOVE.w #$C313,D1
00022B5A <AmiBlitz3.ab3@4941>   CMP.w #$3,D2
00022B5E <AmiBlitz3.ab3@4942>    BCS.w popselect__chkit
00022B60 <AmiBlitz3.ab3@4943>   ADDQ.w #1,D1
00022B66 <AmiBlitz3.ab3@4946>   JSR Atokejsr                                             ;make sure next thing on stack
00022B68 <AmiBlitz3.ab3@4950>   MOVEQ.l #$02,D1
00022B6C <AmiBlitz3.ab3@4951>   CMP.w #$3,D2
00022B70 <AmiBlitz3.ab3@4952>    BCS.w popselect__doit
00022B72 <AmiBlitz3.ab3@4953>   MOVEQ.l #$04,D1
00022B76 <AmiBlitz3.ab3@4954>   CMP.w #$7,D2
00022B7A <AmiBlitz3.ab3@4955>    BCS.w popselect__doit
00022B80 <AmiBlitz3.ab3@4956>   LEA endselstr,A0
00022B86 <AmiBlitz3.ab3@4957>   LEA endselstrf,A1
00022B8C <AmiBlitz3.ab3@4958>   TST.b debugmode
00022B90 <AmiBlitz3.ab3@4959>    BEQ.w popselect__norerr3
00022B96 <AmiBlitz3.ab3@4960>   LEA endselstrf2,A1
00022B9C <AmiBlitz3.ab3@4963>   JSR pokecode
00022BA0 <AmiBlitz3.ab3@4964>   MOVE.w #$C003,D1                                         ;global freemem
00022BA6 <AmiBlitz3.ab3@4965> JMP Atokejsr
00022BAC <AmiBlitz3.ab3@4968>   TST.b debugmode
00022BB0 <AmiBlitz3.ab3@4969>    BEQ.w popselect__norerr2
00022BB2 <AmiBlitz3.ab3@4970>   ADDQ.w #2,D1                                             ;for the "sE"
00022BB4 <AmiBlitz3.ab3@4973>   LSL.w #8,D1
00022BB6 <AmiBlitz3.ab3@4974>   LSL.w #1,D1
00022BBC <AmiBlitz3.ab3@4975>   OR.w endsel,D1
00022BC2 <AmiBlitz3.ab3@4976> JMP writeword
00022BC6 <AmiBlitz3.ab3@4979> firstrep:    Ds.l 1
00022BCA <AmiBlitz3.ab3@4980> replineat:   Ds.l 1
00022BD0 <AmiBlitz3.ab3@4989>   CLR.l fp0addr
00022BDA <AmiBlitz3.ab3@4990>   MOVE.l linenumat,replineat
00022BDC <AmiBlitz3.ab3@4991>   MOVEQ.l #$08,D0
00022BE2 <AmiBlitz3.ab3@4992>   MOVEA.l _execbase,A6
00022BE8 <AmiBlitz3.ab3@4993>   MOVE.l mempool,a0
00022BEC <AmiBlitz3.ab3@4994>   JSR _AllocPooled(a6)
00022BEE <AmiBlitz3.ab3@4996>   MOVEA.l D0,A0
00022BF2 <AmiBlitz3.ab3@4997>   MOVE.l firstrep(PC),(A0)
00022BF8 <AmiBlitz3.ab3@4998>   MOVE.l A0,firstrep
00022C00 <AmiBlitz3.ab3@4999>   MOVE.l destpointer,$4(A0)
00022C02 <AmiBlitz3.ab3@5000> RTS
00022C08 <AmiBlitz3.ab3@5003> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00022C0C <AmiBlitz3.ab3@5006>   LEA str_temp(PC),A1
00022C0E <AmiBlitz3.ab3@5007>   CLR.w (A1)
00022C12 <AmiBlitz3.ab3@5008>   CLR.l $2(A1)
00022C14 <AmiBlitz3.ab3@5011>   MOVEQ.l #$04,D0
00022C18 <AmiBlitz3.ab3@5014>     MOVE.b $1(A1),(A1)+
00022C1C <AmiBlitz3.ab3@5015>   DBF D0,check_for_infoextention__loop
00022C20 <AmiBlitz3.ab3@5020>   LEA str_temp(PC),A1
00022C22 <AmiBlitz3.ab3@5021>   MOVE.b (A0),D0
00022C26 <AmiBlitz3.ab3@5022>   ORI.b #$20,D0
00022C2A <AmiBlitz3.ab3@5023>   MOVE.b D0,$5(A1)
00022C2C <AmiBlitz3.ab3@5024>   TST.b (A0)+
00022C30 <AmiBlitz3.ab3@5025>    BNE.w check_for_infoextention__loop2
00022C34 <AmiBlitz3.ab3@5026>   CMPI.w #$2E69,(A1)+                                      ;".i"
00022C38 <AmiBlitz3.ab3@5027>    BNE.w check_for_infoextention__no
00022C3E <AmiBlitz3.ab3@5028>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00022C40 <AmiBlitz3.ab3@5031> RTS
00022C44 <AmiBlitz3.ab3@5035>   BPL.w gettokeps__evaltoke
00022C46 <AmiBlitz3.ab3@5036>   MOVE.w D0,D1
00022C4A <AmiBlitz3.ab3@5037>   ANDI.w #$7F80,D1
00022C4E <AmiBlitz3.ab3@5038>    BEQ.w tokeerr
00022C52 <AmiBlitz3.ab3@5039>   BCLR #$F,D0
00022C54 <AmiBlitz3.ab3@5040>   MOVE.w D0,D4                                             ;got toke number
00022C58 <AmiBlitz3.ab3@5041>   BSR.w get1bytemain
00022C5C <AmiBlitz3.ab3@5042> BRA.w gettokeps__gotnum
00022C62 <AmiBlitz3.ab3@5045>   JSR JL_0_BF6A
00022C68 <AmiBlitz3.ab3@5046>   CMP.l #MaxWord,D3
00022C6C <AmiBlitz3.ab3@5047>    BHI.w tokeerr
00022C6E <AmiBlitz3.ab3@5048>   TST.w D6
00022C72 <AmiBlitz3.ab3@5049>    BNE.w tokeerr
00022C74 <AmiBlitz3.ab3@5050>   MOVE.w D3,D4
00022C76 <AmiBlitz3.ab3@5053>   MOVEQ.l #$00,D5
00022C7A <AmiBlitz3.ab3@5054>   CMP.w #$2C,D0
00022C7E <AmiBlitz3.ab3@5055>    BNE.w gettokeps__gotfrom
00022C80 <AmiBlitz3.ab3@5056>   MOVE.w D4,-(A7)
00022C86 <AmiBlitz3.ab3@5057>    JSR AJL_0_BF6E
00022C8C <AmiBlitz3.ab3@5058>   CMP.l #MaxWord,D3
00022C90 <AmiBlitz3.ab3@5059>    BHI.w tokeerr
00022C92 <AmiBlitz3.ab3@5060>   TST.w D6
00022C96 <AmiBlitz3.ab3@5061>    BNE.w tokeerr
00022C98 <AmiBlitz3.ab3@5062>   MOVE.w D3,D5
00022C9A <AmiBlitz3.ab3@5063>   MOVE.w (A7)+,D4
00022C9C <AmiBlitz3.ab3@5066> RTS                                                        ;d4=toke, d5=form
00022C9E <AmiBlitz3.ab3@5070>   TST.w D0
00022CA2 <AmiBlitz3.ab3@5071>    BSR.w gettokeps
00022CA6 <AmiBlitz3.ab3@5072>   MOVE.w #$4EB9,D1
00022CAC <AmiBlitz3.ab3@5073>   JSR writeword
00022CB0 <AmiBlitz3.ab3@5074>   BSR.w addoff
00022CB2 <AmiBlitz3.ab3@5075>   MOVE.w D5,D1
00022CB6 <AmiBlitz3.ab3@5076>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00022CB8 <AmiBlitz3.ab3@5077>   SWAP D1
00022CBA <AmiBlitz3.ab3@5078>   MOVE.w D4,D1
00022CC0 <AmiBlitz3.ab3@5079> JMP writelong
00022CC2 <AmiBlitz3.ab3@5083>   TST.w D0
00022CC6 <AmiBlitz3.ab3@5084>    BSR.w gettokeps
00022CCA <AmiBlitz3.ab3@5085>   MOVE.w #$4EB9,D1
00022CD0 <AmiBlitz3.ab3@5086>   JSR writeword
00022CD4 <AmiBlitz3.ab3@5087>   BSR.w addoff
00022CD6 <AmiBlitz3.ab3@5088>   MOVE.w D5,D1
00022CDA <AmiBlitz3.ab3@5089>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00022CDC <AmiBlitz3.ab3@5090>   SWAP D1
00022CDE <AmiBlitz3.ab3@5091>   MOVE.w D4,D1
00022CE4 <AmiBlitz3.ab3@5092>   JMP writelong
00022CEA <AmiBlitz3.ab3@5096>   JSR JL_0_BF6A
00022CF0 <AmiBlitz3.ab3@5097>   CMP.l #$10000,D3
00022CF4 <AmiBlitz3.ab3@5098>    BCC.w tokeerr
00022CF6 <AmiBlitz3.ab3@5099>   MOVE.w D3,D1
00022CFC <AmiBlitz3.ab3@5100> JMP Atokejsr
00022D00 <AmiBlitz3.ab3@5104>   BSR.w gettokeps
00022D04 <AmiBlitz3.ab3@5105>   MOVE.w #$4EB9,D1
00022D0A <AmiBlitz3.ab3@5106>   JSR writeword
00022D10 <AmiBlitz3.ab3@5107>   MOVE.l destpointer,D3
00022D18 <AmiBlitz3.ab3@5108>   BTST #$7,blitzmode
00022D1C <AmiBlitz3.ab3@5109>    BEQ.w do_TokeJsr__inamiga
00022D20 <AmiBlitz3.ab3@5110>   BSET #$E,D5
00022D24 <AmiBlitz3.ab3@5113>   BSR.w JL_0_6E86
00022D28 <AmiBlitz3.ab3@5114>   BSR.w addoff
00022D2E <AmiBlitz3.ab3@5115>   JMP writelong
00022D32 <AmiBlitz3.ab3@5119>   BEQ.w do_VWait__zero
00022D34 <AmiBlitz3.ab3@5120>   MOVEQ.l #$02,D2                                          ;get a word
00022D3A <AmiBlitz3.ab3@5122>   JSR bakeval
00022D3E <AmiBlitz3.ab3@5123>   MOVE.w fvwait(PC),D1
00022D42 <AmiBlitz3.ab3@5124> BRA.w do_VWait__vcont
00022D46 <AmiBlitz3.ab3@5127>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00022D4C <AmiBlitz3.ab3@5130>   JSR writeword
00022D50 <AmiBlitz3.ab3@5131>   MOVE.w #$C104,D1
00022D56 <AmiBlitz3.ab3@5132> JMP Atokejsr
00022D58 <AmiBlitz3.ab3@5136>   SUBQ.w #1,D0
00022D5E <AmiBlitz3.ab3@5139>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00022D62 <AmiBlitz3.ab3@5142>   Dc.l $426d0001                                           ;clr.w $0(A5)
00022D66 <AmiBlitz3.ab3@5146>   MOVE.b debugmode(PC),D1
00022D6A <AmiBlitz3.ab3@5147>   BEQ.b debugmode_codelabel__skip
00022D6E <AmiBlitz3.ab3@5148>   MOVE.w #$D500,D1
00022D74 <AmiBlitz3.ab3@5149> JMP Atokejsr
00022D76 <AmiBlitz3.ab3@5152> RTS
00022D7E <AmiBlitz3.ab3@5156>   BSET #$0,blitzmode
00022D86 <AmiBlitz3.ab3@5157>   BSET #$7,blitzmode
00022D8A <AmiBlitz3.ab3@5158>   MOVE.w #$C200,D1
00022D90 <AmiBlitz3.ab3@5159>   JSR Atokejsr
00022D96 <AmiBlitz3.ab3@5160>   TST.b debugmode
00022D9A <AmiBlitz3.ab3@5161>    BEQ.w do_BLITZ__done
00022D9E <AmiBlitz3.ab3@5162>   MOVE.w cgoblitz(PC),D1
00022DA4 <AmiBlitz3.ab3@5163>   JSR writeword
00022DA6 <AmiBlitz3.ab3@5164>   MOVEQ.l #-$01,D1
00022DAC <AmiBlitz3.ab3@5165>   JSR writeword
00022DB2 <AmiBlitz3.ab3@5166>   JSR getbbase
00022DB8 <AmiBlitz3.ab3@5167>   JSR writeword
00022DBC <AmiBlitz3.ab3@5170> BRA.w debugmode_codelabel
00022DC0 <AmiBlitz3.ab3@5174>   MOVE.w #$C201,D1
00022DC4 <AmiBlitz3.ab3@5175> BRA.w do_AMIGA__toamode
00022DC8 <AmiBlitz3.ab3@5179>   MOVE.W  #$C202,D1
00022DD0 <AmiBlitz3.ab3@5182>   BSET #$0,blitzmode
00022DD8 <AmiBlitz3.ab3@5183>   BCLR #$7,blitzmode
00022DDE <AmiBlitz3.ab3@5184>   JSR Atokejsr
00022DE4 <AmiBlitz3.ab3@5185>   TST.b debugmode
00022DE8 <AmiBlitz3.ab3@5186>    BEQ.w do_AMIGA__done
00022DEC <AmiBlitz3.ab3@5187>   MOVE.w cgoamiga(PC),D1
00022DF2 <AmiBlitz3.ab3@5188>   JSR writeword
00022DF8 <AmiBlitz3.ab3@5189>   JSR getbbase
00022DFE <AmiBlitz3.ab3@5190>   JSR writeword
00022E02 <AmiBlitz3.ab3@5193> BRA.w debugmode_codelabel
00022E06 <AmiBlitz3.ab3@5197>   MOVEM.l D2-D7/A2-A4,-(A7)
00022E0A <AmiBlitz3.ab3@5200>   MOVEM.l (A7)+,D2-D7/A2-A4
00022E10 <AmiBlitz3.ab3@5204>   JSR JL_0_BF6A
00022E16 <AmiBlitz3.ab3@5205>   CMP.l #$E,D3
00022E1A <AmiBlitz3.ab3@5206>    BCC.w interr4
00022E1E <AmiBlitz3.ab3@5207>   MOVE.w #$7000,D1
00022E20 <AmiBlitz3.ab3@5208>   OR.w D3,D1
00022E26 <AmiBlitz3.ab3@5209>   JSR writeword
00022E2A <AmiBlitz3.ab3@5210>   MOVE.w #$C101,D1
00022E30 <AmiBlitz3.ab3@5211> JMP Atokejsr                                               ;clear the interupt
00022E32 <AmiBlitz3.ab3@5214> inerr:       Ds.w 1                                        ;flag - in error trap mode
00022E36 <AmiBlitz3.ab3@5215> errjmp:      Ds.l 1                                        ;where err jump is
00022E3A <AmiBlitz3.ab3@5216> errcode:     Ds.l 1
00022E3E <AmiBlitz3.ab3@5220>   MOVE.W  #$D202,D1
00022E44 <AmiBlitz3.ab3@5221> JMP Atokejsr                                               ;BRA.W Atokejsr
00022E48 <AmiBlitz3.ab3@5225>   MOVE.w inerr(PC),D1
00022E4C <AmiBlitz3.ab3@5226>    BEQ.w errerr3
00022E52 <AmiBlitz3.ab3@5227>   CLR.w inerr
00022E58 <AmiBlitz3.ab3@5228>   MOVE.w dontwrite,D1
00022E5C <AmiBlitz3.ab3@5229>    BNE.w doendseterr__skip
00022E60 <AmiBlitz3.ab3@5230>   MOVEA.l errjmp(PC),A0
00022E66 <AmiBlitz3.ab3@5231>   MOVE.l destpointer,(A0)
00022E6A <AmiBlitz3.ab3@5234> BRA.w get1bytemain
00022E6E <AmiBlitz3.ab3@5238>   MOVE.w #$D205,D1
00022E74 <AmiBlitz3.ab3@5239> JMP Atokejsr
00022E7A <AmiBlitz3.ab3@5243>   MOVE.w proceduremode,D1
00022E7E <AmiBlitz3.ab3@5244>    BNE.w errerr1
00022E82 <AmiBlitz3.ab3@5245>   MOVE.w inerr(PC),D1
00022E86 <AmiBlitz3.ab3@5246>    BNE.w errerr2
00022E8C <AmiBlitz3.ab3@5247>   LEA inerr,a0
00022E8E <AmiBlitz3.ab3@5248>   NOT.w (a0)                                               ;reass
00022E92 <AmiBlitz3.ab3@5249>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00022E98 <AmiBlitz3.ab3@5250>   JSR writeword
00022EA2 <AmiBlitz3.ab3@5251>   MOVE.l destpointer,errcode
00022EA6 <AmiBlitz3.ab3@5252>   BSR.w addoff
00022EAA <AmiBlitz3.ab3@5253>   BSR.w writelong
00022EAE <AmiBlitz3.ab3@5254>   MOVE.w #$D201,D1
00022EB4 <AmiBlitz3.ab3@5255>   JSR Atokejsr
00022EB8 <AmiBlitz3.ab3@5256>   MOVE.w #$4EF9,D1                                         ;JMP
00022EBC <AmiBlitz3.ab3@5257>   BSR.w writeword
00022EC6 <AmiBlitz3.ab3@5258>   MOVE.l destpointer,errjmp
00022ECA <AmiBlitz3.ab3@5259>   BSR.w addoff
00022ECE <AmiBlitz3.ab3@5260>   BSR.w writelong
00022ED4 <AmiBlitz3.ab3@5261>   MOVE.w dontwrite,D1
00022ED8 <AmiBlitz3.ab3@5262>    BNE.w do_SetErr__skip
00022EDC <AmiBlitz3.ab3@5263>   MOVEA.l errcode(PC),A0
00022EE2 <AmiBlitz3.ab3@5264>   MOVE.l destpointer,(A0)
00022EE4 <AmiBlitz3.ab3@5267> RTS
00022EE8 <AmiBlitz3.ab3@5270> intlineat:  Ds.l 1
00022EEA <AmiBlitz3.ab3@5274>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00022EEE <AmiBlitz3.ab3@5275>   BSR.w errchx
00022EF4 <AmiBlitz3.ab3@5276>   MOVE.w D1,intstring
00022EFE <AmiBlitz3.ab3@5277>   MOVE.l linenumat,intlineat
00022F04 <AmiBlitz3.ab3@5278>   JSR JL_0_BF6A                                           ;get constant - int level
00022F0A <AmiBlitz3.ab3@5279>   CMP.l #$E,D3
00022F0E <AmiBlitz3.ab3@5280>    BCC.w interr4
00022F14 <AmiBlitz3.ab3@5281>   ST intsused
00022F1A <AmiBlitz3.ab3@5282>   MOVE.w D3,intlevel
00022F1E <AmiBlitz3.ab3@5283>   MOVE.w #$7000,D1
00022F20 <AmiBlitz3.ab3@5284>   OR.w D3,D1                                              
00022F24 <AmiBlitz3.ab3@5285>   BSR.w writeword                                         ;moveq #x,d0
00022F28 <AmiBlitz3.ab3@5286>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00022F2C <AmiBlitz3.ab3@5287>   BSR.w writeword
00022F30 <AmiBlitz3.ab3@5288>   BSR.w addoff
00022F36 <AmiBlitz3.ab3@5289>   MOVE.l destpointer,-(A7)
00022F3A <AmiBlitz3.ab3@5290>   BSR.w writelong
00022F3E <AmiBlitz3.ab3@5291>   MOVE.w #$C100,D1
00022F44 <AmiBlitz3.ab3@5292>   JSR Atokejsr
00022F48 <AmiBlitz3.ab3@5293>   MOVE.w #$4EF9,D1                                        ;jmp
00022F4C <AmiBlitz3.ab3@5294>   BSR.w writeword
00022F50 <AmiBlitz3.ab3@5295>   BSR.w addoff
00022F5A <AmiBlitz3.ab3@5296>   MOVE.l destpointer,intjmpat
00022F5E <AmiBlitz3.ab3@5297>   BSR.w writelong
00022F60 <AmiBlitz3.ab3@5298>   MOVEA.l (A7)+,A0
00022F66 <AmiBlitz3.ab3@5299>   MOVE.w dontwrite,D1
00022F6A <AmiBlitz3.ab3@5300>   BNE.w do_SetInt__dontpoke
00022F70 <AmiBlitz3.ab3@5301>   MOVE.l destpointer,(A0)
00022F74 <AmiBlitz3.ab3@5304>   MOVE.l intstart0(PC),D1
00022F78 <AmiBlitz3.ab3@5305>   BSR.w writelong
00022F7E <AmiBlitz3.ab3@5306>   TST.b debugmode
00022F82 <AmiBlitz3.ab3@5307>    BEQ.w do_SetInt__norerr
00022F84 <AmiBlitz3.ab3@5311>   MOVEQ.l #$02,D1
00022F88 <AmiBlitz3.ab3@5312>   BSR.w writetrap
00022F8C <AmiBlitz3.ab3@5313>   BSR.w addoff
00022F96 <AmiBlitz3.ab3@5314>   MOVE.l destpointer,intcleanat
00022F9A <AmiBlitz3.ab3@5315>   BSR.w writelong
00022FA0 <AmiBlitz3.ab3@5316>   MOVE.w intlevel,D1
00022FA4 <AmiBlitz3.ab3@5317>   BSR.w writeword
00022FA8 <AmiBlitz3.ab3@5318>   MOVE.w #$C30B,D1                                         ;disable stack checks
00022FAE <AmiBlitz3.ab3@5319>   JSR Atokejsr
00022FB2 <AmiBlitz3.ab3@5322>   MOVE.w #$FED3,D1
00022FB6 <AmiBlitz3.ab3@5323>   BSR.w uselib
00022FBA <AmiBlitz3.ab3@5324>   MOVE.w #$C102,D1
00022FC0 <AmiBlitz3.ab3@5325>   JSR Atokejsr
00022FC8 <AmiBlitz3.ab3@5326>   MOVE.w #-1,lasta6
00022FD2 <AmiBlitz3.ab3@5327>   MOVE.l linenumat,intline
00022FD4 <AmiBlitz3.ab3@5328> RTS
00022FD6 <AmiBlitz3.ab3@5332>             Ds.w 1                                         ;??looks like obsolved data??
00022FDA <AmiBlitz3.ab3@5334> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00022FDE <AmiBlitz3.ab3@5336> intjmpat:   Ds.l 1
00022FE2 <AmiBlitz3.ab3@5337> intline:    Ds.l 1
00022FE4 <AmiBlitz3.ab3@5338> intstring:  Ds.w 1                                         ;flag 0 = no setint
00022FE6 <AmiBlitz3.ab3@5341> intlevel:   Ds.w 1
00022FEA <AmiBlitz3.ab3@5342> intcleanat: Ds.l 1
00022FEE <AmiBlitz3.ab3@5343> ret15add:   Ds.l 1
00022FF0 <AmiBlitz3.ab3@5344> ret15cc:    Ds.w 1
00022FF8 <AmiBlitz3.ab3@5348>   ADDI.l #$12,$2(A7)
00023000 <AmiBlitz3.ab3@5349>   MOVE.l $2(A7),ret15add
00023006 <AmiBlitz3.ab3@5350>   MOVE.w (A7),ret15cc
0002300E <AmiBlitz3.ab3@5351>   MOVE.l #directdo,$2(A7)
00023010 <AmiBlitz3.ab3@5352> RTE
00023014 <AmiBlitz3.ab3@5361>   MOVE.l ret15add(PC),-(A7)
00023018 <AmiBlitz3.ab3@5362>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
0002301C <AmiBlitz3.ab3@5363>   MOVEM.l D0-D7/A0-A6,-(A7)
00023026 <AmiBlitz3.ab3@5364>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023030 <AmiBlitz3.ab3@5365>   MOVE.l destbufferstart,trap15temp2
0002303A <AmiBlitz3.ab3@5366>   MOVE.l libend,templibend
00023044 <AmiBlitz3.ab3@5367>   MOVE.l data1start,tempdata1start
0002304A <AmiBlitz3.ab3@5368>   CLR.l hunkoffsetcounter
00023050 <AmiBlitz3.ab3@5370>   MOVE.l directbuffer,a0
00023056 <AmiBlitz3.ab3@5374>   MOVE.l a0,destbufferstart
0002305C <AmiBlitz3.ab3@5375>   ADD.l #3900,a0
00023062 <AmiBlitz3.ab3@5376>   MOVE.l a0,destbufferend
00023068 <AmiBlitz3.ab3@5377>   TST.b exdebug
0002306C <AmiBlitz3.ab3@5378>   BEQ 'l1
00023072 <AmiBlitz3.ab3@5379>   MOVE.l a0,libend
00023078 <AmiBlitz3.ab3@5380>   ADD.l #4000,a0
0002307E <AmiBlitz3.ab3@5381>   MOVE.l a0,data1start
00023088 <AmiBlitz3.ab3@5384>   MOVE.l #dircont,errcont
0002308E <AmiBlitz3.ab3@5385> 
00023094 <AmiBlitz3.ab3@5386>   MOVE.l A7,errstack
0002309C <AmiBlitz3.ab3@5387>   MOVE.w #$FFFF,dirmode
000230A0 <AmiBlitz3.ab3@5389>     MOVEA.l ret15add(PC),A1
000230A6 <AmiBlitz3.ab3@5390>     MOVE.w -(A1),blitzmode
000230A8 <AmiBlitz3.ab3@5391>     CLR.l -(A1)
000230AE <AmiBlitz3.ab3@5392>     MOVE.l -(A1),firstglob
000230B4 <AmiBlitz3.ab3@5393>     MOVE.l -(A1),firstlocal
000230BA <AmiBlitz3.ab3@5395>   CLR.w proceduremode
000230C0 <AmiBlitz3.ab3@5396>   MOVE.l firstglob,D0
000230C6 <AmiBlitz3.ab3@5397>   OR.l firstlocal,D0
000230CA <AmiBlitz3.ab3@5398>   BEQ.b directdo__skip
000230D0 <AmiBlitz3.ab3@5399>   NOT.w proceduremode
000230D2 <AmiBlitz3.ab3@5402>   MOVEA.l -(A1),A0                                         ;address of string
000230D4 <AmiBlitz3.ab3@5406>   MOVE.l A0,-(A7)
00023112 <AmiBlitz3.ab3@5409>   !ComData_GetL{comFunc_DebugTrap,A1}
00023114 <AmiBlitz3.ab3@5411>   JSR (A1)                                                 ;tokenise line.....
00023116 <AmiBlitz3.ab3@5413>   MOVEA.l (A7)+,A5
00023120 <AmiBlitz3.ab3@5414>   MOVE.l directbuffer,destpointer
00023126 <AmiBlitz3.ab3@5415>   TST.b exdebug
0002312A <AmiBlitz3.ab3@5416>   BEQ 'noexdebug
0002312C <AmiBlitz3.ab3@5417>   MOVE.l a5,a0
00023132 <AmiBlitz3.ab3@5418>   MOVE.l #200,d0
00023138 <AmiBlitz3.ab3@5421>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
0002313C <AmiBlitz3.ab3@5422>   DBF d0,'l1
00023142 <AmiBlitz3.ab3@5427>   MOVE.l destpointer,a0
00023146 <AmiBlitz3.ab3@5428>   MOVE.w #$207c,(a0)+
00023148 <AmiBlitz3.ab3@5429>   MOVE.l a5,d0
0002314E <AmiBlitz3.ab3@5430>   ADD.l #$206,d0                                           ;constant from debuglib
00023150 <AmiBlitz3.ab3@5431>   MOVE.l d0,(a0)+
00023156 <AmiBlitz3.ab3@5432>   MOVE.l a0,destpointer
00023158 <AmiBlitz3.ab3@5433>   MOVE.l a5,a0
0002315C <AmiBlitz3.ab3@5434>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023162 <AmiBlitz3.ab3@5435>   MOVE.l #"$520",(a0)+
00023166 <AmiBlitz3.ab3@5436>   MOVE.w #"4:",(a0)+
0002316C <AmiBlitz3.ab3@5439>   CLR.w dontwrite
00023174 <AmiBlitz3.ab3@5440>   MOVE.w #$FFFF,lasta6
00023178 <AmiBlitz3.ab3@5441>   BSR.w compile_line                                        ;.....compile it
0002317E <AmiBlitz3.ab3@5442>   TST.b exdebug
00023182 <AmiBlitz3.ab3@5443>   BEQ 'noexdebug2
00023188 <AmiBlitz3.ab3@5444>   JSR JL_0_6C76
0002318E <AmiBlitz3.ab3@5447>   CLR.w proceduremode
00023192 <AmiBlitz3.ab3@5448>   BSR.w errchx
00023196 <AmiBlitz3.ab3@5449>   MOVE.w #$4EF9,D1
0002319A <AmiBlitz3.ab3@5450>   BSR.w writeword                                          ;JMP
0002319E <AmiBlitz3.ab3@5451>   MOVE.l ret15add(PC),D1
000231A2 <AmiBlitz3.ab3@5452>   BSR.w writelong                                          ;jmp to done
000231A8 <AmiBlitz3.ab3@5453>   MOVE.w dontwrite,D0
000231AC <AmiBlitz3.ab3@5454>    BNE.w nodirmem
000231B4 <AmiBlitz3.ab3@5455>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000231BA <AmiBlitz3.ab3@5458>   CLR.w dirmode
000231C0 <AmiBlitz3.ab3@5459>   MOVE.w ret15cc(PC),$3C(A7)
000231CA <AmiBlitz3.ab3@5460>   MOVE.l trap15temp,destbufferend
000231D4 <AmiBlitz3.ab3@5461>   MOVE.l trap15temp2,destbufferstart
000231DE <AmiBlitz3.ab3@5462>   MOVE.l tempdata1start,data1start
000231E8 <AmiBlitz3.ab3@5463>   MOVE.l templibend,libend
000231EC <AmiBlitz3.ab3@5464>   MOVEM.l (A7)+,D0-D7/A0-A6
000231F0 <AmiBlitz3.ab3@5465>   BSR.w Aclearcache                                        ;selden used
000231F2 <AmiBlitz3.ab3@5466> RTR
000231F6 <AmiBlitz3.ab3@5469>   MOVEA.l ret15add(PC),A0
000231F8 <AmiBlitz3.ab3@5470>   SUBQ.w #2,A0
000231FA <AmiBlitz3.ab3@5471>   MOVE.l D0,-(A0)
000231FE <AmiBlitz3.ab3@5472> BRA.w direxit
00023202 <AmiBlitz3.ab3@5476>   MOVE.w $6(A3),D1
00023206 <AmiBlitz3.ab3@5477>   BSR.w uselib                                             ;get lib for base address
0002320A <AmiBlitz3.ab3@5478>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
0002320C <AmiBlitz3.ab3@5479>   ADDQ.w #8,A3
0002320E <AmiBlitz3.ab3@5480>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023210 <AmiBlitz3.ab3@5481>   MOVE.l A3,-(A7)
00023212 <AmiBlitz3.ab3@5485>   MOVEQ.l #$00,D3
00023218 <AmiBlitz3.ab3@5486>   JSR checka4a5
0002321A <AmiBlitz3.ab3@5488>   MOVE.b (A3)+,D1
0002321E <AmiBlitz3.ab3@5489>    BMI.w stamigalib__done
00023220 <AmiBlitz3.ab3@5490>   MOVEQ.l #$03,D2
00023222 <AmiBlitz3.ab3@5491>   ADDQ.w #1,D3
00023226 <AmiBlitz3.ab3@5492>   MOVEM.l D3/A3,-(A7)
0002322C <AmiBlitz3.ab3@5493>   MOVE.b funcparloop,-(a7)
00023234 <AmiBlitz3.ab3@5494>   MOVE.b #0,funcparloop
0002323A <AmiBlitz3.ab3@5495>   MOVE.l leftsidetype,-(a7)
00023240 <AmiBlitz3.ab3@5496>   MOVE.l rightsidetype,-(a7)
00023246 <AmiBlitz3.ab3@5497>   CLR.l leftsidetype
0002324C <AmiBlitz3.ab3@5498>   CLR.l rightsidetype
00023252 <AmiBlitz3.ab3@5499>   MOVE.b blitzparloop,-(a7)
0002325A <AmiBlitz3.ab3@5500>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023260 <AmiBlitz3.ab3@5501>   JSR peval
00023266 <AmiBlitz3.ab3@5502>   MOVE.b (a7)+,blitzparloop
0002326C <AmiBlitz3.ab3@5503>   MOVE.l (a7)+,rightsidetype
00023272 <AmiBlitz3.ab3@5504>   MOVE.l (a7)+,leftsidetype
00023278 <AmiBlitz3.ab3@5505>   MOVE.b (a7)+,funcparloop
0002327C <AmiBlitz3.ab3@5506>   MOVEM.l (A7)+,D3/A3
00023280 <AmiBlitz3.ab3@5507>   CMP.w #$2C,D0
00023284 <AmiBlitz3.ab3@5508>    BEQ.w stamigalib__loop
00023286 <AmiBlitz3.ab3@5509>   TST.b (A3)
0002328A <AmiBlitz3.ab3@5510>    BPL.w syntaxerr
0002328C <AmiBlitz3.ab3@5513>   MOVEA.l (A7)+,A3
0002328E <AmiBlitz3.ab3@5514>   SUBQ.w #1,D3
00023292 <AmiBlitz3.ab3@5515>    BPL.w stamigalib__toend
00023296 <AmiBlitz3.ab3@5516>    BSR.w get1bytemain                                      ;no pars - get :
0002329A <AmiBlitz3.ab3@5517> BRA.w stamigalib__nopars
0002329C <AmiBlitz3.ab3@5520>   TST.b (A3)+                                              ;go to end of params
000232A0 <AmiBlitz3.ab3@5521>    BPL.w stamigalib__toend
000232A2 <AmiBlitz3.ab3@5522>   SUBQ.w #1,A3
000232A4 <AmiBlitz3.ab3@5525>    MOVEQ.l #$00,D1
000232A6 <AmiBlitz3.ab3@5526>    MOVE.b -(A3),D1
000232AA <AmiBlitz3.ab3@5527>    BTST #$4,D1
000232AE <AmiBlitz3.ab3@5528>     BNE.w stamigalib__addreg
000232B0 <AmiBlitz3.ab3@5529>    LSL.w #8,D1
000232B2 <AmiBlitz3.ab3@5530>    LSL.w #1,D1
000232B6 <AmiBlitz3.ab3@5531>    ORI.w #$201F,D1
000232BA <AmiBlitz3.ab3@5532>  BRA.w stamigalib__gotit
000232BE <AmiBlitz3.ab3@5535>    ANDI.w #$7,D1
000232C0 <AmiBlitz3.ab3@5536>    LSL.w #8,D1
000232C2 <AmiBlitz3.ab3@5537>    LSL.w #1,D1
000232C6 <AmiBlitz3.ab3@5538>    ORI.w #$205F,D1
000232CA <AmiBlitz3.ab3@5541>     BSR.w writeword
000232CE <AmiBlitz3.ab3@5542>   DBF D3,stamigalib__loop2
000232D4 <AmiBlitz3.ab3@5545>   MOVE.w (A7)+,libjsr+2
000232DA <AmiBlitz3.ab3@5546>   MOVE.w (A7)+,libbase+2
000232E0 <AmiBlitz3.ab3@5547>   MOVE.l libbase,D1
000232E4 <AmiBlitz3.ab3@5548>    BSR.w writelong
000232EA <AmiBlitz3.ab3@5549>   MOVE.l libjsr,D1
000232F0 <AmiBlitz3.ab3@5550>   JSR writelong
000232F6 <AmiBlitz3.ab3@5551>   JSR restorea4a5
000232F8 <AmiBlitz3.ab3@5552>   RTS
000232FE <AmiBlitz3.ab3@5555>   MOVE.l data1,D4
00023304 <AmiBlitz3.ab3@5556>   SUB.l data1start,D4
0002330A <AmiBlitz3.ab3@5557>   ADD.l #10000,d4
00023310 <AmiBlitz3.ab3@5558>   MOVE.l libend,D3
00023316 <AmiBlitz3.ab3@5559>   SUB.l destbufferend,D3
0002331C <AmiBlitz3.ab3@5560>   ADD.l #40000,d3
00023322 <AmiBlitz3.ab3@5561>   MOVE.l bigpc,D2
00023328 <AmiBlitz3.ab3@5562>   SUB.l destbufferstart,D2
0002332E <AmiBlitz3.ab3@5563>   ADD.l #20000,d2
00023334 <AmiBlitz3.ab3@5564>   MOVE.l databuffer,D5
0002333A <AmiBlitz3.ab3@5565>   ADD.l #10000,D5
0002333E <AmiBlitz3.ab3@5566> BRA newallox
00023344 <AmiBlitz3.ab3@5570>   MOVE.l objectbuffer,D2
00023346 <AmiBlitz3.ab3@5571>   LSR.l #1,D2
0002334C <AmiBlitz3.ab3@5572>   ADD.l objectbuffer,D2
00023352 <AmiBlitz3.ab3@5573>   MOVE.l libsbuffer,D3
00023354 <AmiBlitz3.ab3@5574>   LSR.l #1,D3
0002335A <AmiBlitz3.ab3@5575>   ADD.l libsbuffer,D3
00023360 <AmiBlitz3.ab3@5576>   MOVE.l systembuffer,D4
00023362 <AmiBlitz3.ab3@5577>   LSR.l #1,D4
00023368 <AmiBlitz3.ab3@5578>   ADD.l systembuffer,D4
0002336E <AmiBlitz3.ab3@5579>   MOVE.l databuffer,D5
00023370 <AmiBlitz3.ab3@5580>   LSR.l #1,D5
00023376 <AmiBlitz3.ab3@5581>   ADD.l databuffer,D5
0002337A <AmiBlitz3.ab3@5582> BRA.w newallox
00023380 <AmiBlitz3.ab3@5586>   MOVE.l bigpc,D2
00023386 <AmiBlitz3.ab3@5587>   SUB.l destbufferstart,D2                                     ;size of object buffer
0002338C <AmiBlitz3.ab3@5588>   SUB.l savefuncspace,d2
00023392 <AmiBlitz3.ab3@5590>   TST.w debugversion
00023396 <AmiBlitz3.ab3@5591>    BNE.b alloxadj__skip
0002339C <AmiBlitz3.ab3@5592>   ADDI.l #$800,D2
000233A2 <AmiBlitz3.ab3@5595>   MOVE.l libend,D3
000233A8 <AmiBlitz3.ab3@5596>   SUB.l destbufferend,D3
000233AE <AmiBlitz3.ab3@5598>   MOVE.l data1,D4
000233B4 <AmiBlitz3.ab3@5599>   SUB.l data1start,D4
000233BA <AmiBlitz3.ab3@5601>   MOVE.l data2,D5
000233C0 <AmiBlitz3.ab3@5602>   SUB.l data2at,D5
000233C6 <AmiBlitz3.ab3@5604>   CLR.l morememadd
000233CA <AmiBlitz3.ab3@5607>   BSR.w makeallox
000233CE <AmiBlitz3.ab3@5608>   BNE.w newallox__done
000233D2 <AmiBlitz3.ab3@5609> BRA.w init_buffers
000233D4 <AmiBlitz3.ab3@5612> RTS
000233DA <AmiBlitz3.ab3@5616>   MOVEA.l _execbase,A6
000233E0 <AmiBlitz3.ab3@5617>   MOVE.l objlen,D0
000233E4 <AmiBlitz3.ab3@5618>   BEQ.w freeallox__skip
000233EA <AmiBlitz3.ab3@5619>   CLR.l objlen
000233F0 <AmiBlitz3.ab3@5620>   MOVEA.l destbufferstart,A1
000233F6 <AmiBlitz3.ab3@5621>   MOVE.l mempool,a0
000233FA <AmiBlitz3.ab3@5622> JMP _FreeVec(A6)
000233FC <AmiBlitz3.ab3@5625> RTS
00023402 <AmiBlitz3.ab3@5629>   MOVE.l objectbuffer,D2
00023408 <AmiBlitz3.ab3@5630>   MOVE.l libsbuffer,D3
0002340E <AmiBlitz3.ab3@5631>   MOVE.l systembuffer,D4
00023414 <AmiBlitz3.ab3@5632>   MOVE.l databuffer,D5
0002341C <AmiBlitz3.ab3@5635>   MOVE.w #$FFFF,anyerrs
00023420 <AmiBlitz3.ab3@5636>   BSR.w freeallox
00023422 <AmiBlitz3.ab3@5640>   ADDQ.l #1,D2
00023426 <AmiBlitz3.ab3@5641>   BCLR #$0,D2
00023428 <AmiBlitz3.ab3@5642>   ADDQ.l #1,D3
0002342C <AmiBlitz3.ab3@5643>   BCLR #$0,D3
0002342E <AmiBlitz3.ab3@5644>   ADDQ.l #1,D4
00023432 <AmiBlitz3.ab3@5645>   BCLR #$0,D4
00023434 <AmiBlitz3.ab3@5646>   TST.l d5
00023438 <AmiBlitz3.ab3@5647>   BNE 'l1
0002343A <AmiBlitz3.ab3@5650>   ADDQ.l #1,D5
0002343E <AmiBlitz3.ab3@5651>   BCLR #$0,D5
00023440 <AmiBlitz3.ab3@5652>   MOVE.l D2,D0
00023442 <AmiBlitz3.ab3@5653>   ADD.l D3,D0
00023444 <AmiBlitz3.ab3@5654>   ADD.l D4,D0
00023446 <AmiBlitz3.ab3@5655>   ADD.l D5,D0
0002344C <AmiBlitz3.ab3@5656>   ADD.l #moremem,d0
0002344E <AmiBlitz3.ab3@5657>   MOVE.l D0,D6
00023454 <AmiBlitz3.ab3@5658>   MOVE.l #MemfPublic_MemfClear,D1
0002345A <AmiBlitz3.ab3@5659>   MOVE.l mempool,a0
00023460 <AmiBlitz3.ab3@5660>   MOVEA.l _execbase,A6
00023464 <AmiBlitz3.ab3@5661>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023466 <AmiBlitz3.ab3@5663>   TST.l D0
0002346A <AmiBlitz3.ab3@5664>   BEQ.w exit_initbuffers
00023470 <AmiBlitz3.ab3@5665>   MOVE.l D6,objlen
00023476 <AmiBlitz3.ab3@5666>   MOVE.l D2,objectbuffer
0002347C <AmiBlitz3.ab3@5667>   MOVE.l D3,libsbuffer
00023482 <AmiBlitz3.ab3@5668>   MOVE.l D4,systembuffer
00023488 <AmiBlitz3.ab3@5669>   MOVE.l D5,databuffer
0002348E <AmiBlitz3.ab3@5670>   MOVE.l D0,destbufferstart
000234C2 <AmiBlitz3.ab3@5673>   !ComData_SetL{comPtr_DestBufferStart,D0}
000234C4 <AmiBlitz3.ab3@5674>   ADD.l D2,D0
000234CA <AmiBlitz3.ab3@5675>   MOVE.l D0,destbufferend
000234CC <AmiBlitz3.ab3@5676>   ADD.l D3,D0
000234D2 <AmiBlitz3.ab3@5677>   MOVE.l D0,data1start
000234D4 <AmiBlitz3.ab3@5678>   ADD.l D4,D0
000234DA <AmiBlitz3.ab3@5679>   MOVE.l D0,data2at
000234DC <AmiBlitz3.ab3@5680>   ADD.l D5,D0
000234E2 <AmiBlitz3.ab3@5681>   MOVE.l D0,allat
000234E4 <AmiBlitz3.ab3@5684> RTS
000234E8 <AmiBlitz3.ab3@5688>   Dc.b $00,$00,$00,$01                                     ;         1
000234EC <AmiBlitz3.ab3@5689>   Dc.b $00,$00,$00,$0A                                     ;        10
000234F0 <AmiBlitz3.ab3@5690>   Dc.b $00,$00,$00,$64                                     ;       100
000234F4 <AmiBlitz3.ab3@5691>   Dc.b $00,$00,$03,$E8                                     ;      1000
000234F8 <AmiBlitz3.ab3@5692>   Dc.b $00,$00,$27,$10                                     ;     10000
000234FC <AmiBlitz3.ab3@5693>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023500 <AmiBlitz3.ab3@5694>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023504 <AmiBlitz3.ab3@5695>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023508 <AmiBlitz3.ab3@5696>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
0002350C <AmiBlitz3.ab3@5697>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
0002350E <AmiBlitz3.ab3@5701>   MOVEQ.l #$00,D1                                          ;no zero printed
00023510 <AmiBlitz3.ab3@5702>   MOVEQ.l #$24,D3                                          ; "$"
00023512 <AmiBlitz3.ab3@5705>   MOVEQ.l #$30,D4                                          ; "0"
00023516 <AmiBlitz3.ab3@5708>     CMP.l divisors(PC,D3.W),D2
0002351A <AmiBlitz3.ab3@5709>     BCS.w makelong__skip
0002351E <AmiBlitz3.ab3@5710>     SUB.l divisors(PC,D3.W),D2
00023520 <AmiBlitz3.ab3@5711>     ADDQ.w #1,D4
00023524 <AmiBlitz3.ab3@5712> BRA.w makelong__loop2
00023528 <AmiBlitz3.ab3@5715>   CMP.b #"0",D4
0002352C <AmiBlitz3.ab3@5716>   BNE.w makelong__doit
0002352E <AmiBlitz3.ab3@5717>   TST.w D1
00023532 <AmiBlitz3.ab3@5718>   BEQ.w makelong__skip2
00023534 <AmiBlitz3.ab3@5721>   MOVE.b D4,(A0)+
00023536 <AmiBlitz3.ab3@5722>   MOVEQ.l #$01,D1
00023538 <AmiBlitz3.ab3@5725>   SUBQ.w #4,D3
0002353C <AmiBlitz3.ab3@5726>   BPL.w makelong__loop
0002353E <AmiBlitz3.ab3@5727>   TST.w D1
00023542 <AmiBlitz3.ab3@5728>   BNE.w makelong__skip3
00023546 <AmiBlitz3.ab3@5729>   MOVE.b #"0",(A0)+
00023548 <AmiBlitz3.ab3@5732>   CLR.b (A0)
0002354A <AmiBlitz3.ab3@5733> RTS
0002356A <AmiBlitz3.ab3@5736> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
0002362A <AmiBlitz3.ab3@5737> str_residentpath:       Ds.l 48                                                ;respath org source
000236EA <AmiBlitz3.ab3@5738> str_residentname:       Ds.l 48                                                ;resname org source
000236F0 <AmiBlitz3.ab3@5742>   MOVE.l macrobase,D0
000236F4 <AmiBlitz3.ab3@5743>    BNE.w create_residentfile
000236FA <AmiBlitz3.ab3@5744>   MOVE.l newtype_string,D0
000236FE <AmiBlitz3.ab3@5745>    BNE.w create_residentfile
00023704 <AmiBlitz3.ab3@5746>   MOVEA.l labelbase,A2
00023708 <AmiBlitz3.ab3@5749>     CMPA.w #$0,A2
0002370C <AmiBlitz3.ab3@5750>      BEQ.w menu_createresidentfile__err
00023714 <AmiBlitz3.ab3@5751>     CMPI.l #$1,$4(A2)
00023718 <AmiBlitz3.ab3@5752>      BEQ.w create_residentfile
0002371A <AmiBlitz3.ab3@5753>     MOVEA.l (A2),A2
0002371E <AmiBlitz3.ab3@5754> BRA.w menu_createresidentfile__loop
00023748 <AmiBlitz3.ab3@5757>   !basic
000237AA <AmiBlitz3.ab3@5758> 
000237C8 <AmiBlitz3.ab3@5759>   !asm
000237CA <AmiBlitz3.ab3@5760> RTS
00023808 <AmiBlitz3.ab3@5766>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0002380E <AmiBlitz3.ab3@5767>   LEA str_residentrequester,A2
00023814 <AmiBlitz3.ab3@5768>   LEA str_residentpath,A0
0002381A <AmiBlitz3.ab3@5769>   LEA str_residentname,A1
00023844 <AmiBlitz3.ab3@5770>   !basic
0002387C <AmiBlitz3.ab3@5771>     Poke$ ?str_residentpath,my_residentsdir$
000238A8 <AmiBlitz3.ab3@5772>     Poke$ ?str_residentname,".res"
000238C6 <AmiBlitz3.ab3@5773>   !asm
000238C8 <AmiBlitz3.ab3@5775>   JSR (A3)                                                 ;open ped filerequest
000238CC <AmiBlitz3.ab3@5777>   BEQ.w menu_createresidentfile__err
000238CE <AmiBlitz3.ab3@5780>   MOVE.l D0,D1
000238D4 <AmiBlitz3.ab3@5781>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000238D8 <AmiBlitz3.ab3@5782>   MOVEA.l _dosbase(PC),A6
000238DC <AmiBlitz3.ab3@5783>   JSR _Open(A6)
000238DE <AmiBlitz3.ab3@5784>   MOVE.l D0,D7                                             ;handle
000238E2 <AmiBlitz3.ab3@5785>   BEQ.w menu_createresidentfile__err
000238E6 <AmiBlitz3.ab3@5786>   MOVEM.l d2-d7/a0-a6,-(a7)
000238EC <AmiBlitz3.ab3@5787>   LEA devo,a0
000238F2 <AmiBlitz3.ab3@5788>   LEA ptr_parameterstore,a1
000238F4 <AmiBlitz3.ab3@5791>     MOVE.b (a0)+,(a1)+
000238F8 <AmiBlitz3.ab3@5792>   BNE 'l1
000238FA <AmiBlitz3.ab3@5793>   MOVEQ #13,d2
00023900 <AmiBlitz3.ab3@5794>   JSR findlabel2
00023904 <AmiBlitz3.ab3@5795>   BNE 'd
00023908 <AmiBlitz3.ab3@5796>   TST.l 8(a2)
0002390C <AmiBlitz3.ab3@5797>   BEQ 'd2
00023936 <AmiBlitz3.ab3@5798>   !basic
00023998 <AmiBlitz3.ab3@5799>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000239B6 <AmiBlitz3.ab3@5800>   !asm
000239BA <AmiBlitz3.ab3@5801>   MOVEM.l (a7)+,d2-d7/a0-a6
000239BE <AmiBlitz3.ab3@5802>   MOVEA.l _dosbase(PC),A6
000239C0 <AmiBlitz3.ab3@5803>   MOVE.l d7,d1
000239C4 <AmiBlitz3.ab3@5804>   JSR _Close(a6)
000239C8 <AmiBlitz3.ab3@5805> BRA menu_createresidentfile__err
000239CC <AmiBlitz3.ab3@5809>   MOVEM.l (a7)+,d2-d7/a0-a6
000239D0 <AmiBlitz3.ab3@5810>   BSR.w call_setpointerbusy
000239D4 <AmiBlitz3.ab3@5812>   BSR.w AJL_0_7962
000239D6 <AmiBlitz3.ab3@5813>   MOVE.l D7,D1
000239DC <AmiBlitz3.ab3@5814>   MOVE.l #tsthead,D2                                       ;header
000239DE <AmiBlitz3.ab3@5815>   MOVEQ.l #$20,D3
000239E2 <AmiBlitz3.ab3@5816>   MOVEA.l _dosbase(PC),A6
000239E6 <AmiBlitz3.ab3@5817>   JSR _Write(A6)
000239E8 <AmiBlitz3.ab3@5818>   MOVEQ.l #$00,D6                                          ;offset from start of file!
000239EC <AmiBlitz3.ab3@5819>   BSR.w restypes
000239F0 <AmiBlitz3.ab3@5820>   BSR.w resmacs
000239F4 <AmiBlitz3.ab3@5821>   BSR.w resconsts
000239F6 <AmiBlitz3.ab3@5822>   MOVE.l D6,D3
000239F8 <AmiBlitz3.ab3@5823>   ADDQ.l #3,D3
000239FE <AmiBlitz3.ab3@5824>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00023A00 <AmiBlitz3.ab3@5825>   MOVE.l D3,-(A7)
00023A02 <AmiBlitz3.ab3@5826>   SUB.l D6,D3
00023A06 <AmiBlitz3.ab3@5827>   BEQ.w menu_createresidentfile__noalign
00023A0C <AmiBlitz3.ab3@5828>   MOVE.l #writelist,D2
00023A0E <AmiBlitz3.ab3@5829>   MOVE.l D7,D1
00023A14 <AmiBlitz3.ab3@5830>   MOVEA.l _dosbase,A6
00023A18 <AmiBlitz3.ab3@5831>   JSR _Write(A6)
00023A22 <AmiBlitz3.ab3@5834>    MOVE.l hunkoffsetcounter,tstsize3
00023A26 <AmiBlitz3.ab3@5835>    BEQ.w menu_createresidentfile__skip2a
00023A28 <AmiBlitz3.ab3@5836>   MOVE.l D7,D1
00023A2E <AmiBlitz3.ab3@5837>   MOVE.l #tstend,D2
00023A30 <AmiBlitz3.ab3@5838>   MOVEQ.l #$0C,D3
00023A36 <AmiBlitz3.ab3@5839>   MOVEA.l _dosbase,A6
00023A3A <AmiBlitz3.ab3@5840>    JSR _Write(A6)
00023A40 <AmiBlitz3.ab3@5844>   MOVEA.l hunkoffsetbase,A2
00023A44 <AmiBlitz3.ab3@5847>   CMPA.w #$0,A2
00023A48 <AmiBlitz3.ab3@5848>    BEQ.w menu_createresidentfile__skip2
00023A4C <AmiBlitz3.ab3@5849>   LEA $4(A2),A1
00023A4E <AmiBlitz3.ab3@5850>   MOVE.l D7,D1
00023A50 <AmiBlitz3.ab3@5851>   MOVE.l A1,D2
00023A52 <AmiBlitz3.ab3@5852>   MOVEQ.l #$04,D3
00023A58 <AmiBlitz3.ab3@5853>   MOVEA.l _dosbase,A6
00023A5C <AmiBlitz3.ab3@5854>    JSR _Write(A6)
00023A5E <AmiBlitz3.ab3@5855>   MOVEA.l (A2),A2
00023A62 <AmiBlitz3.ab3@5856> BRA.w menu_createresidentfile__oloop
00023A64 <AmiBlitz3.ab3@5859>   MOVE.l D7,D1
00023A6A <AmiBlitz3.ab3@5860>   MOVE.l #zero,D2
00023A6C <AmiBlitz3.ab3@5861>   MOVEQ.l #$04,D3
00023A72 <AmiBlitz3.ab3@5862>   MOVEA.l _dosbase,A6
00023A76 <AmiBlitz3.ab3@5863>   JSR _Write(A6)
00023A78 <AmiBlitz3.ab3@5866>   MOVE.l D7,D1
00023A7E <AmiBlitz3.ab3@5867>   MOVE.l #tstdone,D2
00023A80 <AmiBlitz3.ab3@5868>   MOVEQ.l #$04,D3
00023A86 <AmiBlitz3.ab3@5869>   MOVEA.l _dosbase,A6
00023A8A <AmiBlitz3.ab3@5870>    JSR _Write(A6)
00023A8C <AmiBlitz3.ab3@5871>   MOVE.l (A7)+,D0
00023A8E <AmiBlitz3.ab3@5872>   LSR.l #2,D0
00023A94 <AmiBlitz3.ab3@5873>   MOVE.l D0,temp1
00023A96 <AmiBlitz3.ab3@5874>   MOVE.l D7,D1
00023A98 <AmiBlitz3.ab3@5875>   MOVEQ.l #$14,D2
00023A9A <AmiBlitz3.ab3@5876>   MOVEQ.l #-$01,D3
00023A9E <AmiBlitz3.ab3@5877>   JSR _Seek(A6)
00023AA0 <AmiBlitz3.ab3@5878>   MOVE.l D7,D1
00023AA6 <AmiBlitz3.ab3@5879>   MOVE.l #temp1,D2
00023AA8 <AmiBlitz3.ab3@5880>   MOVEQ.l #$04,D3
00023AAC <AmiBlitz3.ab3@5881>    JSR _Write(A6)
00023AAE <AmiBlitz3.ab3@5882>   MOVE.l D7,D1
00023AB0 <AmiBlitz3.ab3@5883>   MOVEQ.l #$1C,D2
00023AB2 <AmiBlitz3.ab3@5884>   MOVEQ.l #-$01,D3
00023AB6 <AmiBlitz3.ab3@5885>    JSR _Seek(A6)
00023AB8 <AmiBlitz3.ab3@5886>   MOVE.l D7,D1
00023ABE <AmiBlitz3.ab3@5887>   MOVE.l #temp1,D2
00023AC0 <AmiBlitz3.ab3@5888>   MOVEQ.l #$04,D3
00023AC4 <AmiBlitz3.ab3@5889>    JSR _Write(A6)
00023AC6 <AmiBlitz3.ab3@5890>   MOVE.l D7,D1
00023ACA <AmiBlitz3.ab3@5891>    JSR _Close(A6)
00023ACE <AmiBlitz3.ab3@5892> BRA.w call_setpointernormal
00023AD0 <AmiBlitz3.ab3@5896>   ADDQ.w #5,D1
00023AD2 <AmiBlitz3.ab3@5897>   ADDQ.b #8,D0
00023AD6 <AmiBlitz3.ab3@5900>     CMPA.w #$0,A2
00023ADA <AmiBlitz3.ab3@5901>     BEQ.w writelist__done
00023ADE <AmiBlitz3.ab3@5902>      BSR.w writeitem
00023AE0 <AmiBlitz3.ab3@5903>     MOVEA.l (A2),A2
00023AE4 <AmiBlitz3.ab3@5904> BRA.w writelist__loop
00023AE6 <AmiBlitz3.ab3@5907> RTS
00023AE8 <AmiBlitz3.ab3@5910>   MOVEQ.l #$00,D3
00023AEC <AmiBlitz3.ab3@5911>   MOVE.b $0(A2,D5.W),D3
00023AEE <AmiBlitz3.ab3@5912>   ADDQ.w #1,D3
00023AF2 <AmiBlitz3.ab3@5913>   BCLR #$0,D3                                              ;word align
00023AF4 <AmiBlitz3.ab3@5914>   MOVE.l (A2),-(A7)
00023AF8 <AmiBlitz3.ab3@5915>    BEQ.w writeitem__skip
00023AFC <AmiBlitz3.ab3@5916>    BSR.w resoff
00023AFE <AmiBlitz3.ab3@5917>   ADD.l D3,D6
00023B00 <AmiBlitz3.ab3@5918>   MOVE.l D6,(A2)
00023B02 <AmiBlitz3.ab3@5919>   SUB.l D3,D6
00023B04 <AmiBlitz3.ab3@5922>    ADD.l D3,D6
00023B06 <AmiBlitz3.ab3@5923>   MOVE.l A2,D2
00023B08 <AmiBlitz3.ab3@5924>   MOVE.l D7,D1
00023B0E <AmiBlitz3.ab3@5925>   MOVEA.l _dosbase,A6
00023B12 <AmiBlitz3.ab3@5926>    JSR _Write(A6)
00023B14 <AmiBlitz3.ab3@5927>   MOVE.l (A7)+,(A2)
00023B16 <AmiBlitz3.ab3@5928> RTS
00023B18 <AmiBlitz3.ab3@5931>   MOVE.l D6,D2
00023B1C <AmiBlitz3.ab3@5932> BRA.w addhunkoffset
00023B20 <AmiBlitz3.ab3@5936>     CMPA.w #$0,A2
00023B24 <AmiBlitz3.ab3@5937>      BEQ.w writeoffs__done
00023B2A <AmiBlitz3.ab3@5938>     MOVEA.l newtypebase,A1
00023B2C <AmiBlitz3.ab3@5939>     MOVEQ.l #$00,D1
00023B30 <AmiBlitz3.ab3@5942>       CMPA.w #$0,A1
00023B34 <AmiBlitz3.ab3@5943>       BEQ.w writeoffs__found
00023B38 <AmiBlitz3.ab3@5944>       CMPA.l $A(A2),A1
00023B3C <AmiBlitz3.ab3@5945>        BEQ.w writeoffs__found
00023B3E <AmiBlitz3.ab3@5946>       ADDQ.w #1,D1
00023B40 <AmiBlitz3.ab3@5947>       MOVEA.l (A1),A1
00023B44 <AmiBlitz3.ab3@5948> BRA.w writeoffs__loop2
00023B48 <AmiBlitz3.ab3@5951>     MOVE.w $A(A2),-(A7)
00023B4C <AmiBlitz3.ab3@5952>     MOVE.w D1,$A(A2)
00023B50 <AmiBlitz3.ab3@5953>      BSR.w writeitem
00023B54 <AmiBlitz3.ab3@5954>     MOVE.w (A7)+,$A(A2)
00023B56 <AmiBlitz3.ab3@5955>     MOVEA.l (A2),A2
00023B5A <AmiBlitz3.ab3@5956> BRA.w writeoffs
00023B5C <AmiBlitz3.ab3@5959> RTS
00023B5E <AmiBlitz3.ab3@5963>   MOVEQ.l #$00,D0
00023B62 <AmiBlitz3.ab3@5966>   CMPA.w #$0,A2
00023B66 <AmiBlitz3.ab3@5967>    BEQ.w countem__done
00023B68 <AmiBlitz3.ab3@5968>   ADDQ.w #1,D0
00023B6A <AmiBlitz3.ab3@5969>   MOVEA.l (A2),A2
00023B6E <AmiBlitz3.ab3@5970> BRA.w countem__loop
00023B74 <AmiBlitz3.ab3@5973>   MOVE.w D0,temp1
00023B76 <AmiBlitz3.ab3@5974>   MOVE.l D7,D1
00023B7C <AmiBlitz3.ab3@5975>   MOVE.l #temp1,D2
00023B7E <AmiBlitz3.ab3@5976>   MOVEQ.l #$02,D3
00023B80 <AmiBlitz3.ab3@5977>   ADDQ.l #2,D6
00023B86 <AmiBlitz3.ab3@5978>   MOVEA.l _dosbase,A6
00023B8A <AmiBlitz3.ab3@5979> JMP _Write(A6)
00023B90 <AmiBlitz3.ab3@5983>    TST.b resdisable
00023B94 <AmiBlitz3.ab3@5984>    BEQ resmacs__l1
00023B9A <AmiBlitz3.ab3@5985>    MOVE.l currentmacroaddr,a3
00023BA0 <AmiBlitz3.ab3@5986>    CMP.l #0,a3
00023BA4 <AmiBlitz3.ab3@5987>    BEQ resmacs__l1
00023BA6 <AmiBlitz3.ab3@5988>    MOVE.l (a3),a3
00023BAA <AmiBlitz3.ab3@5989> BRA resmacs__l2
00023BB0 <AmiBlitz3.ab3@5992>   MOVEA.l macrobase,A3                                     ;??begin org code??
00023BB2 <AmiBlitz3.ab3@5995>   MOVEA.l A3,A2
00023BB6 <AmiBlitz3.ab3@5996>   BSR.w countem
00023BBA <AmiBlitz3.ab3@5999>    CMPA.w #$0,A3
00023BBE <AmiBlitz3.ab3@6000>    BEQ.w resmacs__done
00023BC0 <AmiBlitz3.ab3@6001>   MOVE.l D6,D5
00023BC2 <AmiBlitz3.ab3@6002>   MOVE.l (A3),-(A7)
00023BC6 <AmiBlitz3.ab3@6003>   MOVE.l $4(A3),-(A7)
00023BC8 <AmiBlitz3.ab3@6004>   MOVEQ.l #$00,D3
00023BCC <AmiBlitz3.ab3@6005>   MOVE.b $C(A3),D3
00023BCE <AmiBlitz3.ab3@6006>   ADDQ.w #1,D3
00023BD2 <AmiBlitz3.ab3@6007>   BCLR #$0,D3
00023BD4 <AmiBlitz3.ab3@6008>   ADD.l D3,D6                                              ;add len of struct
00023BD8 <AmiBlitz3.ab3@6009>   TST.w $8(A3)
00023BDC <AmiBlitz3.ab3@6010>    BEQ.w resmacs__notext
00023BE0 <AmiBlitz3.ab3@6011>   MOVE.l D6,$4(A3)
00023BE2 <AmiBlitz3.ab3@6012>   MOVE.l D5,D2
00023BE4 <AmiBlitz3.ab3@6013>   ADDQ.l #4,D2
00023BE8 <AmiBlitz3.ab3@6014>    BSR.w addhunkoffset
00023BEA <AmiBlitz3.ab3@6017>   MOVEQ.l #$00,D4
00023BEE <AmiBlitz3.ab3@6018>   MOVE.w $8(A3),D4
00023BF0 <AmiBlitz3.ab3@6019>   ADDQ.w #1,D4
00023BF4 <AmiBlitz3.ab3@6020>   BCLR #$0,D4
00023BF6 <AmiBlitz3.ab3@6021>   ADD.l D4,D6
00023BF8 <AmiBlitz3.ab3@6022>   TST.l (A3)
00023BFC <AmiBlitz3.ab3@6023>    BEQ.w resmacs__nomore
00023BFE <AmiBlitz3.ab3@6024>   MOVE.l D6,(A3)
00023C00 <AmiBlitz3.ab3@6025>   MOVE.l D5,D2
00023C04 <AmiBlitz3.ab3@6026>    BSR.w addhunkoffset
00023C06 <AmiBlitz3.ab3@6029>   MOVE.l A3,D2
00023C08 <AmiBlitz3.ab3@6030>   MOVE.l D7,D1
00023C0E <AmiBlitz3.ab3@6032>    MOVEA.l _dosbase,A6
00023C12 <AmiBlitz3.ab3@6033>    JSR _Write(a6)
00023C14 <AmiBlitz3.ab3@6034>   TST.l D4
00023C18 <AmiBlitz3.ab3@6035>    BEQ.w resmacs__skip
00023C1A <AmiBlitz3.ab3@6036>   MOVE.l (A7),D2
00023C1C <AmiBlitz3.ab3@6037>   MOVE.l D4,D3
00023C1E <AmiBlitz3.ab3@6038>   MOVE.l D7,D1
00023C24 <AmiBlitz3.ab3@6040>     MOVEA.l _dosbase,A6
00023C28 <AmiBlitz3.ab3@6041>    JSR _Write(A6)
00023C2C <AmiBlitz3.ab3@6044>   MOVE.l (A7)+,$4(A3)
00023C2E <AmiBlitz3.ab3@6045>   MOVE.l (A7)+,(A3)
00023C30 <AmiBlitz3.ab3@6046>   MOVEA.l (A3),A3
00023C34 <AmiBlitz3.ab3@6047> BRA.w resmacs__loop
00023C36 <AmiBlitz3.ab3@6050> RTS
00023C3C <AmiBlitz3.ab3@6054>   TST.b resdisable
00023C40 <AmiBlitz3.ab3@6055>   BEQ restypes__l1
00023C46 <AmiBlitz3.ab3@6056>   MOVE.l lastrestype,a3
00023C4C <AmiBlitz3.ab3@6057>   CMP.l #0,a3
00023C50 <AmiBlitz3.ab3@6058>   BEQ restypes__l1
00023C52 <AmiBlitz3.ab3@6059>   MOVE.l (a3),a3
00023C56 <AmiBlitz3.ab3@6060> BRA restypes__l2
00023C5C <AmiBlitz3.ab3@6063>   MOVEA.l newtype_string,A3
00023C5E <AmiBlitz3.ab3@6066>   MOVEA.l A3,A2
00023C62 <AmiBlitz3.ab3@6067>    BSR.w countem
00023C66 <AmiBlitz3.ab3@6070>    CMPA.w #$0,A3
00023C6A <AmiBlitz3.ab3@6071>    BEQ.w restypes__done
00023C6C <AmiBlitz3.ab3@6072>   MOVE.l D6,-(A7)
00023C70 <AmiBlitz3.ab3@6073>   MOVEA.l $4(A3),A2
00023C72 <AmiBlitz3.ab3@6074>   MOVEQ.l #$0E,D5
00023C76 <AmiBlitz3.ab3@6075>    BSR.w writeoffs
00023C78 <AmiBlitz3.ab3@6076>   MOVE.l (A7)+,D0
00023C7C <AmiBlitz3.ab3@6077>   MOVE.l $4(A3),-(A7)
00023C80 <AmiBlitz3.ab3@6078>   MOVE.l D0,$4(A3)
00023C82 <AmiBlitz3.ab3@6079>   MOVE.l D6,D2
00023C84 <AmiBlitz3.ab3@6080>   ADDQ.l #4,D2
00023C88 <AmiBlitz3.ab3@6081>    BSR.w addhunkoffset
00023C8A <AmiBlitz3.ab3@6082>   MOVEQ.l #$00,D3
00023C8E <AmiBlitz3.ab3@6083>   MOVE.b $A(A3),D3
00023C90 <AmiBlitz3.ab3@6084>   ADDQ.w #1,D3
00023C94 <AmiBlitz3.ab3@6085>   BCLR #$0,D3
00023C96 <AmiBlitz3.ab3@6086>   ADD.l D3,D6
00023C98 <AmiBlitz3.ab3@6087>   MOVE.l A3,D2
00023C9A <AmiBlitz3.ab3@6088>   MOVE.l D7,D1
00023CA0 <AmiBlitz3.ab3@6090>     MOVEA.l _dosbase,A6
00023CA4 <AmiBlitz3.ab3@6091>     JSR _Write(A6)
00023CA8 <AmiBlitz3.ab3@6092>   MOVE.l (A7)+,$4(A3)
00023CAA <AmiBlitz3.ab3@6093>   MOVEA.l (A3),A3
00023CAE <AmiBlitz3.ab3@6094> BRA.w restypes__loop
00023CB0 <AmiBlitz3.ab3@6097> RTS
00023CB6 <AmiBlitz3.ab3@6101>    TST.b resdisable
00023CBA <AmiBlitz3.ab3@6102>    BEQ resconsts__l1
00023CC0 <AmiBlitz3.ab3@6103>    MOVE.l currentlabeladdr,a2
00023CC6 <AmiBlitz3.ab3@6104>    CMP.l #0,a2
00023CCA <AmiBlitz3.ab3@6105>    BEQ resconsts__l1
00023CCC <AmiBlitz3.ab3@6106>    MOVE.l (a2),a2
00023CD0 <AmiBlitz3.ab3@6107> BRA resconsts__l2
00023CD6 <AmiBlitz3.ab3@6110>    MOVEA.l labelbase,A2
00023CD8 <AmiBlitz3.ab3@6113>    MOVEQ.l #$00,D0
00023CDC <AmiBlitz3.ab3@6116>    CMPA.w #$0,A2
00023CE0 <AmiBlitz3.ab3@6117>    BEQ.w resconsts__done
00023CE8 <AmiBlitz3.ab3@6118>   CMPI.l #$1,$4(A2)
00023CEC <AmiBlitz3.ab3@6119>    BNE.w resconsts__next
00023CEE <AmiBlitz3.ab3@6120>   ADDQ.w #1,D0
00023CF0 <AmiBlitz3.ab3@6123>   MOVEA.l (A2),A2
00023CF4 <AmiBlitz3.ab3@6124> BRA.w resconsts__loop
00023CFA <AmiBlitz3.ab3@6127>   MOVE.w D0,temp1
00023CFC <AmiBlitz3.ab3@6128>   MOVE.l D7,D1
00023D02 <AmiBlitz3.ab3@6129>   MOVE.l #temp1,D2
00023D04 <AmiBlitz3.ab3@6130>   MOVEQ.l #$02,D3
00023D06 <AmiBlitz3.ab3@6131>   ADDQ.l #2,D6
00023D0C <AmiBlitz3.ab3@6133>     MOVEA.l _dosbase,A6
00023D10 <AmiBlitz3.ab3@6134>     JSR _Write(A6)
00023D16 <AmiBlitz3.ab3@6135>    TST.b resdisable
00023D1A <AmiBlitz3.ab3@6136>    BEQ resconsts__done_l1
00023D20 <AmiBlitz3.ab3@6137>    MOVE.l currentlabeladdr,a2
00023D26 <AmiBlitz3.ab3@6138>    CMP.l #0,a2
00023D2A <AmiBlitz3.ab3@6139>    BEQ resconsts__done_l1
00023D2C <AmiBlitz3.ab3@6140>    MOVE.l (a2),a2
00023D30 <AmiBlitz3.ab3@6141> BRA resconsts__loop2
00023D36 <AmiBlitz3.ab3@6144>    MOVEA.l labelbase,A2                                    ;write resident labels
00023D3A <AmiBlitz3.ab3@6147>    CMPA.w #$0,A2
00023D3E <AmiBlitz3.ab3@6148>    BEQ.w resconsts__done2
00023D46 <AmiBlitz3.ab3@6149>   CMPI.l #$1,$4(A2)
00023D4A <AmiBlitz3.ab3@6150>    BNE.w resconsts__next2
00023D4C <AmiBlitz3.ab3@6151>    MOVEQ.l #$00,D3
00023D50 <AmiBlitz3.ab3@6152>   MOVE.b $12(A2),D3                                        ;length
00023D52 <AmiBlitz3.ab3@6153>   ADDQ.w #1,D3
00023D56 <AmiBlitz3.ab3@6154>   BCLR #$0,D3
00023D58 <AmiBlitz3.ab3@6155>   MOVE.l D6,D2
00023D5A <AmiBlitz3.ab3@6156>   ADD.l D3,D6
00023D5C <AmiBlitz3.ab3@6159>   MOVE.l (A2),-(A7)
00023D5E <AmiBlitz3.ab3@6160>   TST.l (A2)
00023D62 <AmiBlitz3.ab3@6161>    BEQ.w resconsts__nonext
00023D64 <AmiBlitz3.ab3@6162>   MOVE.l D6,(A2)
00023D68 <AmiBlitz3.ab3@6163>    BSR.w addhunkoffset
00023D6A <AmiBlitz3.ab3@6166>   MOVE.l A2,D2
00023D6C <AmiBlitz3.ab3@6167>   MOVE.l D7,D1
00023D72 <AmiBlitz3.ab3@6169>     MOVEA.l _dosbase,A6
00023D76 <AmiBlitz3.ab3@6170>     JSR _Write(A6)
00023D78 <AmiBlitz3.ab3@6171>   MOVE.l (A7)+,(A2)
00023D7A <AmiBlitz3.ab3@6174>   MOVEA.l (A2),A2
00023D7E <AmiBlitz3.ab3@6175> BRA.w resconsts__loop2
00023D80 <AmiBlitz3.ab3@6178> RTS
00023DAA <AmiBlitz3.ab3@6182>    !basic
00023DB0 <AmiBlitz3.ab3@6183>     MOVE.l ptr_resfile,d0
00023DC0 <AmiBlitz3.ab3@6184>     resfileP.l = Peek.l(?ptr_resfile)
00023DCA <AmiBlitz3.ab3@6185>     If resfileP
00023DF2 <AmiBlitz3.ab3@6186>       resfile$ = Peek.s(resfileP)
00023E3E <AmiBlitz3.ab3@6187>       tests.b = Instr(resfile$,"/")
00023E8A <AmiBlitz3.ab3@6188>       testc.b = Instr(resfile$,":")
00023EAC <AmiBlitz3.ab3@6189>       If tests=0 AND testc=0
00023F2C <AmiBlitz3.ab3@6190>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00023F3E <AmiBlitz3.ab3@6191>         Poke.l ?ptr_resfile,&resfile$
00023F44 <AmiBlitz3.ab3@6193>     Else
00023F7E <AmiBlitz3.ab3@6194>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00023F9C <AmiBlitz3.ab3@6196>    !asm
00023F9E <AmiBlitz3.ab3@6197> RTS
00023FA4 <AmiBlitz3.ab3@6201> 
00023FAA <AmiBlitz3.ab3@6202>   MOVE.l A7,errstack
00023FB4 <AmiBlitz3.ab3@6205>   MOVE.l #next_resentry,errcont
00023FBC <AmiBlitz3.ab3@6206>   MOVE.w #$FFFF,ezerr
00023FC0 <AmiBlitz3.ab3@6207>   BSR.w Aclearallvars
00023FC4 <AmiBlitz3.ab3@6208>   BSR.w free_residents
00023FCA <AmiBlitz3.ab3@6210>   LEA residents_table,A5
00023FCC <AmiBlitz3.ab3@6211>   MOVEQ.l #$07,D6
00023FCE <AmiBlitz3.ab3@6214>     TST.b (A5)
00023FD2 <AmiBlitz3.ab3@6215>     BEQ.w next_resentry
00023FD8 <AmiBlitz3.ab3@6216>     MOVE.l A5,ptr_resfile
00023FDC <AmiBlitz3.ab3@6217>     BSR check_residentpath
00023FE2 <AmiBlitz3.ab3@6218>     MOVE.l ptr_resfile,d1
00023FE8 <AmiBlitz3.ab3@6219>     MOVEA.l _dosbase,A6
00023FEC <AmiBlitz3.ab3@6220>     JSR _LoadSeg(A6)
00023FF0 <AmiBlitz3.ab3@6221>     MOVE.l D0,$40(A5)
00023FF4 <AmiBlitz3.ab3@6222>     BNE.w reloadresident__yeah
00023FF8 <AmiBlitz3.ab3@6223>     BSR.w reserr
00023FFA <AmiBlitz3.ab3@6226>     MOVEA.l D0,A3
00023FFC <AmiBlitz3.ab3@6227>     ADDA.l A3,A3
00023FFE <AmiBlitz3.ab3@6228>     ADDA.l A3,A3
00024000 <AmiBlitz3.ab3@6229>     ADDQ.w #4,A3                                           ;start of res
00024004 <AmiBlitz3.ab3@6230>     BSR.w JL_0_5A9E
00024008 <AmiBlitz3.ab3@6231>     BSR.w JL_0_5A62                                        ;add macros to list
0002400C <AmiBlitz3.ab3@6232>     BSR.w JL_0_5A32                                        ;read labels
00024010 <AmiBlitz3.ab3@6235>     LEA ResidentEntryStep(A5),A5       ;$44
00024014 <AmiBlitz3.ab3@6236>   DBF D6,reloadresident__loop
0002401E <AmiBlitz3.ab3@6241>   MOVE.l #free_residents,errcont
00024024 <AmiBlitz3.ab3@6243>   MOVEA.l newtype_string,A3
00024026 <AmiBlitz3.ab3@6244>   MOVEQ.l #$0B,D7
0002402A <AmiBlitz3.ab3@6245>   BSR.w checkclash
00024030 <AmiBlitz3.ab3@6247>   MOVEA.l macrobase,A3
00024032 <AmiBlitz3.ab3@6248>   MOVEQ.l #$d,D7
00024036 <AmiBlitz3.ab3@6249>   BSR.w checkclash
0002403C <AmiBlitz3.ab3@6251>   MOVEA.l firstconst,A3
0002403E <AmiBlitz3.ab3@6252>   MOVEQ.l #$19,D7
00024042 <AmiBlitz3.ab3@6253>   BSR.w checkclash
00024044 <AmiBlitz3.ab3@6256> RTS
00024046 <AmiBlitz3.ab3@6260>   MOVEA.l A3,A4
0002404A <AmiBlitz3.ab3@6263>     CMPA.w #$0,A4
0002404E <AmiBlitz3.ab3@6264>     BEQ.w checkclash__done
00024054 <AmiBlitz3.ab3@6266>     LEA ptr_parameterstore,A0
00024058 <AmiBlitz3.ab3@6267>     LEA $0(A4,D7.W),A1
0002405A <AmiBlitz3.ab3@6268>     MOVEQ.l #-$01,D2
0002405C <AmiBlitz3.ab3@6271>       ADDQ.w #1,D2
0002405E <AmiBlitz3.ab3@6272>       MOVE.b (A1)+,(A0)+
00024062 <AmiBlitz3.ab3@6273>     BNE.w checkclash__loop2
00024064 <AmiBlitz3.ab3@6274>     MOVEA.l A3,A2
00024068 <AmiBlitz3.ab3@6277>     BSR.w findlab
0002406C <AmiBlitz3.ab3@6278>     BNE.w checkclash__next                                  ;not found
0002406E <AmiBlitz3.ab3@6279>     CMPA.l A2,A4
00024072 <AmiBlitz3.ab3@6280>     BEQ.w checkclash__l1
00024074 <AmiBlitz3.ab3@6281>     MOVE.l a1,a5
00024078 <AmiBlitz3.ab3@6282> BRA clasherr
0002407C <AmiBlitz3.ab3@6285> BRA.w checkclash__more
0002407E <AmiBlitz3.ab3@6288>     MOVEA.l (A4),A4
00024082 <AmiBlitz3.ab3@6289> BRA.w checkclash__loop
00024084 <AmiBlitz3.ab3@6292> RTS
0002408A <AmiBlitz3.ab3@6296>   MOVEA.l _dosbase,A6
00024090 <AmiBlitz3.ab3@6298>   LEA newtype_string,A0
00024096 <AmiBlitz3.ab3@6299>   MOVE.l A0,lastrestype
00024098 <AmiBlitz3.ab3@6300>   CLR.l (A0)
0002409E <AmiBlitz3.ab3@6302>   LEA macrobase,A0
000240A4 <AmiBlitz3.ab3@6303>   MOVE.l A0,currentmacroaddr
000240A6 <AmiBlitz3.ab3@6304>   CLR.l (A0)
000240AC <AmiBlitz3.ab3@6306>   LEA labelbase,A0
000240B2 <AmiBlitz3.ab3@6307>   MOVE.l A0,currentlabeladdr
000240B4 <AmiBlitz3.ab3@6308>   CLR.l (A0)
000240BA <AmiBlitz3.ab3@6309>   CLR.w rescnt
000240F2 <AmiBlitz3.ab3@6313>   !ComData_SetB{comByte_DebugMode,debugmode}
000240F8 <AmiBlitz3.ab3@6316>   LEA residents_table,A2
000240FA <AmiBlitz3.ab3@6317>   MOVEQ.l #$07,D2
000240FE <AmiBlitz3.ab3@6320>      MOVE.l $40(A2),D1
00024102 <AmiBlitz3.ab3@6321>      BEQ.w free_residents__next
00024106 <AmiBlitz3.ab3@6322>       CLR.l $40(A2)
0002410C <AmiBlitz3.ab3@6323>       MOVEA.l _dosbase,A6
00024110 <AmiBlitz3.ab3@6324>       JSR _UnLoadSeg(A6)
00024114 <AmiBlitz3.ab3@6327>      LEA ResidentEntryStep(A2),A2   ; $44
00024118 <AmiBlitz3.ab3@6328>    DBF D2,free_residents__loop
0002411A <AmiBlitz3.ab3@6330> RTS
0002411C <AmiBlitz3.ab3@6334>   MOVE.w (A3)+,D1
00024120 <AmiBlitz3.ab3@6335>   BEQ.w JL_0_5A60
00024126 <AmiBlitz3.ab3@6336>   MOVEA.l currentlabeladdr,A2
00024128 <AmiBlitz3.ab3@6337>   MOVE.l A3,(A2)
0002412A <AmiBlitz3.ab3@6338>   SUBQ.w #1,D1
0002412C <AmiBlitz3.ab3@6341>     MOVEA.l A3,A2
0002412E <AmiBlitz3.ab3@6342>     MOVEA.l (A3),A3
00024132 <AmiBlitz3.ab3@6343>   DBF D1,JL_0_5A42
00024134 <AmiBlitz3.ab3@6345>   CLR.l (a2)                                               ;bugfix for object
0002413A <AmiBlitz3.ab3@6346>   MOVE.l A2,currentlabeladdr
0002413C <AmiBlitz3.ab3@6347>   MOVEA.l A2,A3
0002413E <AmiBlitz3.ab3@6348>   MOVEQ.l #$00,D0
00024142 <AmiBlitz3.ab3@6349>   MOVE.b $12(A3),D0
00024144 <AmiBlitz3.ab3@6350>   ADDQ.w #1,D0
00024148 <AmiBlitz3.ab3@6351>   BCLR #$0,D0
0002414A <AmiBlitz3.ab3@6352>   ADDA.w D0,A3
0002414C <AmiBlitz3.ab3@6355> RTS
0002414E <AmiBlitz3.ab3@6359>   MOVE.w (A3)+,D1
00024152 <AmiBlitz3.ab3@6360>   BEQ.w JL_0_5A9C
00024158 <AmiBlitz3.ab3@6362>   MOVEA.l currentmacroaddr,A2
0002415A <AmiBlitz3.ab3@6363>   MOVE.l A3,(A2)
0002415C <AmiBlitz3.ab3@6364>   SUBQ.w #1,D1
0002415E <AmiBlitz3.ab3@6367>     MOVEA.l A3,A2
00024160 <AmiBlitz3.ab3@6368>     MOVEA.l (A3),A3
00024164 <AmiBlitz3.ab3@6369>   DBF D1,JL_0_5A72
0002416A <AmiBlitz3.ab3@6371>   MOVE.l A2,currentmacroaddr
0002416C <AmiBlitz3.ab3@6372>   MOVEA.l A2,A3
0002416E <AmiBlitz3.ab3@6373>   MOVEQ.l #$00,D0
00024172 <AmiBlitz3.ab3@6374>   MOVE.b $C(A3),D0
00024174 <AmiBlitz3.ab3@6375>   ADDQ.w #1,D0
00024178 <AmiBlitz3.ab3@6376>   BCLR #$0,D0
0002417C <AmiBlitz3.ab3@6377>   MOVE.w $8(A3),D1
0002417E <AmiBlitz3.ab3@6378>   ADDQ.w #1,D1
00024182 <AmiBlitz3.ab3@6379>   BCLR #$0,D1
00024184 <AmiBlitz3.ab3@6380>   ADDA.w D0,A3
00024186 <AmiBlitz3.ab3@6381>   ADDA.w D1,A3
00024188 <AmiBlitz3.ab3@6384> RTS
0002418A <AmiBlitz3.ab3@6388>   MOVE.w (A3)+,D1
0002418E <AmiBlitz3.ab3@6389>   BEQ.w JL_0_5B38
00024190 <AmiBlitz3.ab3@6390>   MOVE.w D1,-(A7)
00024192 <AmiBlitz3.ab3@6391>   SUBQ.w #1,D1
00024198 <AmiBlitz3.ab3@6392>   MOVEA.l lastrestype,A2
0002419A <AmiBlitz3.ab3@6393>   MOVE.l A2,-(A7)
0002419C <AmiBlitz3.ab3@6396>       MOVE.l (A3),D0
000241A0 <AmiBlitz3.ab3@6397>       BEQ.w JL_0_5ABC
000241A2 <AmiBlitz3.ab3@6398>       MOVEA.l D0,A3
000241A6 <AmiBlitz3.ab3@6399> BRA.w JL_0_5AB0
000241AA <AmiBlitz3.ab3@6402>       MOVE.b $E(A3),D0
000241AC <AmiBlitz3.ab3@6403>       ADDQ.w #1,D0
000241B0 <AmiBlitz3.ab3@6404>       BCLR #$0,D0
000241B2 <AmiBlitz3.ab3@6405>       ADDA.w D0,A3
000241B4 <AmiBlitz3.ab3@6406>       MOVE.l A3,(A2)
000241B6 <AmiBlitz3.ab3@6407>       MOVEA.l A3,A2
000241B8 <AmiBlitz3.ab3@6408>       MOVEQ.l #$00,D0
000241BC <AmiBlitz3.ab3@6409>       MOVE.b $A(A3),D0
000241BE <AmiBlitz3.ab3@6410>       ADDQ.w #1,D0
000241C2 <AmiBlitz3.ab3@6411>       BCLR #$0,D0
000241C4 <AmiBlitz3.ab3@6412>       ADDA.w D0,A3
000241C8 <AmiBlitz3.ab3@6413>   DBF D1,JL_0_5AB0
000241CA <AmiBlitz3.ab3@6415>   MOVEA.l (A7)+,A0
000241CC <AmiBlitz3.ab3@6416>   MOVEA.l (A0),A0
000241D0 <AmiBlitz3.ab3@6419>     CMPA.w #$0,A0
000241D4 <AmiBlitz3.ab3@6420>     BEQ.w JL_0_5B2A
000241D8 <AmiBlitz3.ab3@6421>     MOVEA.l $4(A0),A1
000241DC <AmiBlitz3.ab3@6424>     CMPA.w #$0,A1
000241E0 <AmiBlitz3.ab3@6425>     BEQ.w JL_0_5B24
000241E4 <AmiBlitz3.ab3@6426>     MOVE.w $A(A1),D0
000241EA <AmiBlitz3.ab3@6427>     MOVEA.l newtypebase,A4
000241EE <AmiBlitz3.ab3@6428>     CMP.w #$7,D0
000241F2 <AmiBlitz3.ab3@6429>     BCS.w JL_0_5B0E
000241F8 <AmiBlitz3.ab3@6430>     SUB.w rescnt,D0
000241FA <AmiBlitz3.ab3@6433>     SUBQ.w #1,D0
000241FE <AmiBlitz3.ab3@6434>     BMI.w JL_0_5B1A
00024200 <AmiBlitz3.ab3@6437>        MOVEA.l (A4),A4
00024204 <AmiBlitz3.ab3@6438>   DBF D0,JL_0_5B14
00024208 <AmiBlitz3.ab3@6441>     MOVE.l A4,$A(A1)
0002420A <AmiBlitz3.ab3@6442>     MOVEA.l (A1),A1
0002420E <AmiBlitz3.ab3@6443> BRA.w JL_0_5AEE
00024210 <AmiBlitz3.ab3@6446>     MOVEA.l (A0),A0
00024214 <AmiBlitz3.ab3@6447> BRA.w JL_0_5AE2
00024216 <AmiBlitz3.ab3@6450>   MOVE.w (A7)+,D0
0002421C <AmiBlitz3.ab3@6451>   ADD.w D0,rescnt
00024222 <AmiBlitz3.ab3@6452>   MOVE.l A2,lastrestype
00024224 <AmiBlitz3.ab3@6455> RTS
0002422A <AmiBlitz3.ab3@6459>   LEA tokens,A0
0002422E <AmiBlitz3.ab3@6460>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024230 <AmiBlitz3.ab3@6463>     MOVEA.l (A0),A0
00024234 <AmiBlitz3.ab3@6464>   DBF D0,JL_0_5BD0
0002423A <AmiBlitz3.ab3@6466>   MOVEA.l #asmpnts,A1                                      ;create tokentab
0002423E <AmiBlitz3.ab3@6467>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00024242 <AmiBlitz3.ab3@6470>       LEA $6(A0),A2
00024244 <AmiBlitz3.ab3@6473>         TST.b (A2)+
00024248 <AmiBlitz3.ab3@6474>       BNE.w JL_0_5BE4
0002424A <AmiBlitz3.ab3@6477>         TST.b (A2)+
0002424E <AmiBlitz3.ab3@6478>       BNE.w JL_0_5BEA
00024250 <AmiBlitz3.ab3@6480>       ADDQ.w #1,A2
00024252 <AmiBlitz3.ab3@6481>       EXG.l D1,A2
00024256 <AmiBlitz3.ab3@6482>       BCLR #$0,D1
00024258 <AmiBlitz3.ab3@6483>       EXG.l D1,A2
0002425A <AmiBlitz3.ab3@6484>       MOVE.l A2,(A1)+
0002425C <AmiBlitz3.ab3@6485>       MOVEA.l (A0),A0
00024260 <AmiBlitz3.ab3@6486>   DBF D0,JL_0_5BE0
00024262 <AmiBlitz3.ab3@6487> RTS
00024266 <AmiBlitz3.ab3@6491>   BSR.w asmconst
00024268 <AmiBlitz3.ab3@6492>   MOVEQ.l #$0B,D5
0002426A <AmiBlitz3.ab3@6493> RTS
0002426C <AmiBlitz3.ab3@6496> unmove:  Ds.w 1
00024270 <AmiBlitz3.ab3@6500>   MOVE.w #$48E7,D1
00024274 <AmiBlitz3.ab3@6501>   BSR.w writeword                                          ;movem.l -(a7)
00024278 <AmiBlitz3.ab3@6502>   MOVE.w #$000F,D2
0002427A <AmiBlitz3.ab3@6503>   SUB.w D4,D2
0002427C <AmiBlitz3.ab3@6504>   MOVEQ.l #-$01,D1
0002427E <AmiBlitz3.ab3@6505>   BCLR D2,D1
00024282 <AmiBlitz3.ab3@6506>   BSR.w writeword
00024284 <AmiBlitz3.ab3@6507>   MOVEQ.l #-$01,D1
00024286 <AmiBlitz3.ab3@6508>   BCLR D4,D1
0002428C <AmiBlitz3.ab3@6509>   MOVE.w D1,unmove
0002428E <AmiBlitz3.ab3@6510> RTS
00024292 <AmiBlitz3.ab3@6514>   MOVE.w #$4CDF,D1
00024296 <AmiBlitz3.ab3@6515>   BSR.w writeword
0002429A <AmiBlitz3.ab3@6516>   MOVE.w unmove(PC),D1
0002429E <AmiBlitz3.ab3@6517> BRA.w writeword
000242A2 <AmiBlitz3.ab3@6530>   BSR.w JL_0_5D22
000242A6 <AmiBlitz3.ab3@6531>   CMP.w #$2C,D0                                            ;#','
000242AA <AmiBlitz3.ab3@6532>    BNE.w syntaxerr
000242B0 <AmiBlitz3.ab3@6533>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
000242B4 <AmiBlitz3.ab3@6534>    BSR.w writelong
000242B6 <AmiBlitz3.ab3@6535>   MOVE.w D4,D1
000242BA <AmiBlitz3.ab3@6536>   ORI.w #$2F00,D1
000242BE <AmiBlitz3.ab3@6537>    BSR.w writeword
000242C2 <AmiBlitz3.ab3@6538>    BSR.w get1bytemain
000242C6 <AmiBlitz3.ab3@6539>    BSR.w getparameter
000242CA <AmiBlitz3.ab3@6540>    BSR.w JL_0_8E3C
000242CE <AmiBlitz3.ab3@6541>    BSR.w calcvar
000242D2 <AmiBlitz3.ab3@6542>    BTST #$E,D2
000242D6 <AmiBlitz3.ab3@6543>    BEQ.w JL_0_5C80
000242DA <AmiBlitz3.ab3@6546>    MOVE.b #$3,D2
000242DE <AmiBlitz3.ab3@6547> BRA.w JL_0_5C8E
000242E0 <AmiBlitz3.ab3@6550>   TST.b D2
000242E4 <AmiBlitz3.ab3@6551>    BEQ.w JL_0_5C78
000242E8 <AmiBlitz3.ab3@6552>   CMP.b #$7,D2
000242EC <AmiBlitz3.ab3@6553>    BEQ.w JL_0_5C78
000242F0 <AmiBlitz3.ab3@6556>   BTST #$F,D2
000242F4 <AmiBlitz3.ab3@6557>    BNE.w JL_0_5CA4
000242F8 <AmiBlitz3.ab3@6558>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
000242FC <AmiBlitz3.ab3@6559>    BSR.w writeword
000242FE <AmiBlitz3.ab3@6560>   MOVE.w D3,D1
00024302 <AmiBlitz3.ab3@6561>    BSR.w writeword
00024306 <AmiBlitz3.ab3@6564>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002430A <AmiBlitz3.ab3@6565>    BSR.w writeword
0002430E <AmiBlitz3.ab3@6566>   MOVE.w #$1480,D1
00024312 <AmiBlitz3.ab3@6567>   CMP.b #$1,D2
00024316 <AmiBlitz3.ab3@6568>    BEQ.w JL_0_5CC8
0002431A <AmiBlitz3.ab3@6569>   EORI.w #$3000,D1
0002431E <AmiBlitz3.ab3@6570>   CMP.b #$2,D2
00024322 <AmiBlitz3.ab3@6571>    BNE.w JL_0_5CC8
00024326 <AmiBlitz3.ab3@6572>   ORI.w #$1000,D1
0002432A <AmiBlitz3.ab3@6575>   BSR.w writeword
00024330 <AmiBlitz3.ab3@6576>   MOVE.l #$4CDF7FFF,D1
00024334 <AmiBlitz3.ab3@6577> BRA.w writelong
00024338 <AmiBlitz3.ab3@6581>   BSR.w JL_0_5D22
0002433C <AmiBlitz3.ab3@6582>   CMP.w #$2C,D0
00024340 <AmiBlitz3.ab3@6583>    BNE.w syntaxerr
00024344 <AmiBlitz3.ab3@6584>    BSR.w regmovems
00024346 <AmiBlitz3.ab3@6585>   MOVE.w D4,-(A7)
00024348 <AmiBlitz3.ab3@6586>   MOVEQ.l #$03,D2
0002434C <AmiBlitz3.ab3@6587>    BSR.w eval
0002434E <AmiBlitz3.ab3@6588>   MOVE.w (A7)+,D1
00024352 <AmiBlitz3.ab3@6589>    BEQ.w JL_0_5D1A
00024356 <AmiBlitz3.ab3@6590>   CMP.w #$8,D1
0002435A <AmiBlitz3.ab3@6591>    BCC.w JL_0_5D0C
0002435C <AmiBlitz3.ab3@6592>   LSL.w #8,D1
0002435E <AmiBlitz3.ab3@6593>   LSL.w #1,D1
00024362 <AmiBlitz3.ab3@6594>   ORI.w #$2000,D1
00024366 <AmiBlitz3.ab3@6595>    BSR.w writeword
0002436A <AmiBlitz3.ab3@6596> BRA.w JL_0_5D1A
0002436C <AmiBlitz3.ab3@6599>   SUBQ.w #8,D1
0002436E <AmiBlitz3.ab3@6600>   LSL.w #8,D1
00024370 <AmiBlitz3.ab3@6601>   LSL.w #1,D1
00024374 <AmiBlitz3.ab3@6602>   ORI.w #$2040,D1
00024378 <AmiBlitz3.ab3@6603>   BSR.w writeword
0002437C <AmiBlitz3.ab3@6606> BRA.w dounmove
00024380 <AmiBlitz3.ab3@6610>   BSR.w get1bytemain
00024384 <AmiBlitz3.ab3@6613>   ORI.w #$20,D0
00024388 <AmiBlitz3.ab3@6614>   CMP.w #$64,D0
0002438C <AmiBlitz3.ab3@6615>    BEQ.w JL_0_5D4E
00024390 <AmiBlitz3.ab3@6616>   CMP.w #$61,D0
00024394 <AmiBlitz3.ab3@6617>    BNE.w syntaxerr
00024398 <AmiBlitz3.ab3@6618>    BSR.w JL_0_5D4E
0002439A <AmiBlitz3.ab3@6619>   ADDQ.w #8,D4
0002439C <AmiBlitz3.ab3@6620> RTS
000243C8 <AmiBlitz3.ab3@6624>   !fget                                                   ;bsr.w get1bytemain
000243CC <AmiBlitz3.ab3@6626>   ORI.w #$20,D0
000243D0 <AmiBlitz3.ab3@6629>   CMP.w #$61,D0
000243D4 <AmiBlitz3.ab3@6630>   BNE.w syntaxerr
00024400 <AmiBlitz3.ab3@6633>   !fget                                                    ;bsr.w get1bytemain
00024404 <AmiBlitz3.ab3@6634>   SUBI.w #$30,D0
00024408 <AmiBlitz3.ab3@6635>    BMI.w syntaxerr
0002440C <AmiBlitz3.ab3@6636>   CMP.w #$7,D0
00024410 <AmiBlitz3.ab3@6637>    BHI.w syntaxerr
00024412 <AmiBlitz3.ab3@6638>   MOVE.w D0,D4
0002443E <AmiBlitz3.ab3@6639>   !fget
00024440 <AmiBlitz3.ab3@6640> RTS                                                        ;bra.w get1bytemain
00024442 <AmiBlitz3.ab3@6644>   ADDQ.w #8,D4
00024444 <AmiBlitz3.ab3@6647>   MOVEQ.l #$00,D5
00024448 <AmiBlitz3.ab3@6648>   SUBI.w #$30,D4
0002444C <AmiBlitz3.ab3@6651>   CMP.w #$2D,D0
00024450 <AmiBlitz3.ab3@6652>    BEQ.w JL_0_5D9E
00024454 <AmiBlitz3.ab3@6653>   CMP.w #$2F,D0
00024458 <AmiBlitz3.ab3@6654>    BEQ.w JL_0_5D8C
0002445C <AmiBlitz3.ab3@6655> BRA.w syntaxerr
0002445E <AmiBlitz3.ab3@6658>   BSET D4,D5
00024460 <AmiBlitz3.ab3@6661>   MOVE.w D5,D4
00024462 <AmiBlitz3.ab3@6662>   MOVEQ.l #$0F,D5
00024464 <AmiBlitz3.ab3@6663> RTS
00024466 <AmiBlitz3.ab3@6666>   BSET D4,D5
0002446A <AmiBlitz3.ab3@6667>   BSR.w JL_0_5D1E
0002447C <AmiBlitz3.ab3@6668>   !compare3                                                ;bsr.w JL_0_5FC0
00024480 <AmiBlitz3.ab3@6669>   BNE.w JL_0_5D70
00024484 <AmiBlitz3.ab3@6670> BRA.w JL_0_5D84
00024486 <AmiBlitz3.ab3@6673>   MOVE.w D4,D1
0002448A <AmiBlitz3.ab3@6674>    BSR.w JL_0_5D1E
0002448C <AmiBlitz3.ab3@6675>   CMP.w D4,D1
00024490 <AmiBlitz3.ab3@6676>    BLS.w JL_0_5DAC
00024492 <AmiBlitz3.ab3@6677>   EXG.l D4,D1
00024494 <AmiBlitz3.ab3@6680>   BSET D1,D5
00024496 <AmiBlitz3.ab3@6681>   ADDQ.w #1,D1
00024498 <AmiBlitz3.ab3@6682>   CMP.w D4,D1
0002449C <AmiBlitz3.ab3@6683>    BLS.w JL_0_5DAC
000244AE <AmiBlitz3.ab3@6684>   !compare3                                                ;bsr.w JL_0_5FC0
000244B2 <AmiBlitz3.ab3@6685>   BNE.w JL_0_5D70
000244B6 <AmiBlitz3.ab3@6686> BRA.w JL_0_5D86
000244B8 <AmiBlitz3.ab3@6689>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
000244E4 <AmiBlitz3.ab3@6690>    !fget
000244E8 <AmiBlitz3.ab3@6691>   CMP.w #$23,D0
000244EC <AmiBlitz3.ab3@6692>    BEQ.w getimm
000244F0 <AmiBlitz3.ab3@6693>   CMP.w #$28,D0
000244F4 <AmiBlitz3.ab3@6694>    BEQ.w JL_0_5DFE
000244F8 <AmiBlitz3.ab3@6695>   CMP.w #$2D,D0
000244FC <AmiBlitz3.ab3@6696>    BNE.w JL_0_5E20
00024528 <AmiBlitz3.ab3@6697>    !fget                                                   ;bsr.w get1bytemain       -(
0002452C <AmiBlitz3.ab3@6698>   CMP.w #$28,D0
00024530 <AmiBlitz3.ab3@6699>    BNE.w JL_0_5F4E
00024534 <AmiBlitz3.ab3@6700>    BSR.w JL_0_5D3E
00024538 <AmiBlitz3.ab3@6701>   CMP.w #$29,D0
0002453C <AmiBlitz3.ab3@6702>    BNE.w syntaxerr
0002453E <AmiBlitz3.ab3@6703>   MOVEQ.l #$04,D5
0002456A <AmiBlitz3.ab3@6704>   !fget                                                    ;bsr.w get1bytemain
0002456C <AmiBlitz3.ab3@6705> RTS
00024570 <AmiBlitz3.ab3@6709>   BSR.w JL_0_5D3E
00024574 <AmiBlitz3.ab3@6710>   CMP.w #$29,D0
00024578 <AmiBlitz3.ab3@6711>    BNE.w syntaxerr
000245A4 <AmiBlitz3.ab3@6712>   !fget                                                    ;bsr.w get1bytemain
000245A8 <AmiBlitz3.ab3@6713>   CMP.w #$2B,D0
000245AC <AmiBlitz3.ab3@6714>    BEQ.w JL_0_5E1A
000245AE <AmiBlitz3.ab3@6715>   MOVEQ.l #$02,D5
000245B0 <AmiBlitz3.ab3@6716> RTS
000245B2 <AmiBlitz3.ab3@6720>   MOVEQ.l #$03,D5
000245DE <AmiBlitz3.ab3@6721>   !fget                                                    ;bra.w get1bytemain
000245E0 <AmiBlitz3.ab3@6722> RTS
000245E4 <AmiBlitz3.ab3@6726>   ORI.w #$20,D0
000245E6 <AmiBlitz3.ab3@6727>   MOVE.w D0,D1                                            
00024612 <AmiBlitz3.ab3@6728>    !fget                                                   ;bsr.w get1bytemain
00024616 <AmiBlitz3.ab3@6729>   CMP.w #$64,D1
0002461A <AmiBlitz3.ab3@6730>    BNE.w JL_0_5E6C
0002461E <AmiBlitz3.ab3@6731>   CMP.w #$30,D0
00024622 <AmiBlitz3.ab3@6732>    BCS.w JL_0_5EAE
00024626 <AmiBlitz3.ab3@6733>   CMP.w #$37,D0
0002462A <AmiBlitz3.ab3@6734>    BHI.w JL_0_5EAE
0002462C <AmiBlitz3.ab3@6735>   MOVE.w D0,D4
00024658 <AmiBlitz3.ab3@6736>    !fget                                                   ;bsr.w get1bytemain
0002466A <AmiBlitz3.ab3@6737>    !compare3                                               ;bsr.w JL_0_5FC0
0002466E <AmiBlitz3.ab3@6738>    BEQ.w JL_0_5E64
00024672 <AmiBlitz3.ab3@6739>   CMP.w #$2D,D0
00024676 <AmiBlitz3.ab3@6740>    BEQ.w JL_0_5D6A
0002467A <AmiBlitz3.ab3@6741>   CMP.w #$2F,D0
0002467E <AmiBlitz3.ab3@6742>    BEQ.w JL_0_5D6A
00024682 <AmiBlitz3.ab3@6743> BRA.w JL_0_5EB8
00024684 <AmiBlitz3.ab3@6746>   MOVEQ.l #$00,D5
00024688 <AmiBlitz3.ab3@6747>   SUBI.w #$30,D4
0002468A <AmiBlitz3.ab3@6748> RTS
0002468E <AmiBlitz3.ab3@6751>    CMP.w #$61,D1
00024692 <AmiBlitz3.ab3@6752>    BNE.w JL_0_5EAE
00024696 <AmiBlitz3.ab3@6753>   CMP.w #$30,D0
0002469A <AmiBlitz3.ab3@6754>    BCS.w JL_0_5EAE
0002469E <AmiBlitz3.ab3@6755>   CMP.w #$37,D0
000246A2 <AmiBlitz3.ab3@6756>    BHI.w JL_0_5EAE
000246A4 <AmiBlitz3.ab3@6757>   MOVE.w D0,D4
000246D0 <AmiBlitz3.ab3@6758>    !fget                                                   ;bsr.w get1bytemain
000246E2 <AmiBlitz3.ab3@6759>    !compare3                                               ;bsr.w JL_0_5FC0
000246E6 <AmiBlitz3.ab3@6760>    BEQ.w JL_0_5EA6
000246EA <AmiBlitz3.ab3@6761>   CMP.w #$2D,D0
000246EE <AmiBlitz3.ab3@6762>    BEQ.w JL_0_5D68                                         ;movem
000246F2 <AmiBlitz3.ab3@6763>   CMP.w #$2F,D0
000246F6 <AmiBlitz3.ab3@6764>    BEQ.w JL_0_5D68
000246FA <AmiBlitz3.ab3@6765> BRA.w JL_0_5EB8
000246FC <AmiBlitz3.ab3@6768>   MOVEQ.l #1,d5
00024700 <AmiBlitz3.ab3@6769>   SUBI.w #$30,D4
00024704 <AmiBlitz3.ab3@6771> BRA 'l10
00024706 <AmiBlitz3.ab3@6772>   ADDQ.w #8,d4
00024708 <AmiBlitz3.ab3@6773>   MOVEQ #0,d5
0002470A <AmiBlitz3.ab3@6774>   BSET d4,d5
0002470C <AmiBlitz3.ab3@6775>   MOVE.w d5,d4
0002470E <AmiBlitz3.ab3@6776>   MOVEQ.l #$0f,D5                                          ;01
00024710 <AmiBlitz3.ab3@6779> RTS
00024714 <AmiBlitz3.ab3@6783>   ORI.w #$20,D0
00024716 <AmiBlitz3.ab3@6784>   MOVE.w D0,D4
00024742 <AmiBlitz3.ab3@6785>    !fget                                                   ;bsr.w get1bytemain
00024754 <AmiBlitz3.ab3@6788>   !compare3                                                ;bsr.w JL_0_5FC0
00024758 <AmiBlitz3.ab3@6789>    BNE.w JL_0_5EF2
0002475C <AmiBlitz3.ab3@6790>   CMP.w #$73,D1
00024760 <AmiBlitz3.ab3@6791>    BNE.w JL_0_5EF2
00024764 <AmiBlitz3.ab3@6792>   CMP.w #$70,D4
00024768 <AmiBlitz3.ab3@6793>    BNE.w JL_0_5EDE
0002477A <AmiBlitz3.ab3@6794>    !compare3                                               ;bsr.w JL_0_5FC0
0002477E <AmiBlitz3.ab3@6795>    BNE.w JL_0_5F4E
00024780 <AmiBlitz3.ab3@6796>   MOVEQ.l #$07,D4
00024782 <AmiBlitz3.ab3@6797>   MOVEQ.l #$01,D5
00024784 <AmiBlitz3.ab3@6798> RTS
00024788 <AmiBlitz3.ab3@6802>   CMP.w #$72,D4
0002478C <AmiBlitz3.ab3@6803>    BNE.w JL_0_5F4E
0002479E <AmiBlitz3.ab3@6804>    !compare3                                               ;bsr.w JL_0_5FC0
000247A2 <AmiBlitz3.ab3@6805>    BNE.w JL_0_5F4E
000247A4 <AmiBlitz3.ab3@6806>   MOVEQ.l #$0D,D5
000247A6 <AmiBlitz3.ab3@6807> RTS
000247AA <AmiBlitz3.ab3@6811>   ORI.w #$20,D0
000247AE <AmiBlitz3.ab3@6812>   CMP.w #$63,D1
000247B2 <AmiBlitz3.ab3@6813>    BNE.w JL_0_5F22
000247B6 <AmiBlitz3.ab3@6814>   CMP.w #$63,D4
000247BA <AmiBlitz3.ab3@6815>    BNE.w JL_0_5F4E
000247BE <AmiBlitz3.ab3@6816>   CMP.w #$72,D0
000247C2 <AmiBlitz3.ab3@6817>    BNE.w JL_0_5F4E
000247C6 <AmiBlitz3.ab3@6818>    BSR.w get1bytemain                                      ;??wy not !fget
000247CA <AmiBlitz3.ab3@6819>    BEQ.w JL_0_5F1E
000247CE <AmiBlitz3.ab3@6820>   CMP.w #$2C,D0
000247D2 <AmiBlitz3.ab3@6821>    BNE.w JL_0_5F4E
000247D4 <AmiBlitz3.ab3@6824>   MOVEQ.l #$0C,D5
000247D6 <AmiBlitz3.ab3@6825> RTS
000247DA <AmiBlitz3.ab3@6829>   CMP.w #$75,D1
000247DE <AmiBlitz3.ab3@6830>    BNE.w JL_0_5F4E
000247E2 <AmiBlitz3.ab3@6831>   CMP.w #$73,D4
000247E6 <AmiBlitz3.ab3@6832>    BNE.w JL_0_5F4E
000247EA <AmiBlitz3.ab3@6833>   CMP.w #$70,D0
000247EE <AmiBlitz3.ab3@6834>    BNE.w JL_0_5F4E
000247F2 <AmiBlitz3.ab3@6835>    BSR.w get1bytemain                                      ;??wy not !fget
000247F6 <AmiBlitz3.ab3@6836>    BEQ.w JL_0_5F4A
000247FA <AmiBlitz3.ab3@6837>   CMP.w #$2C,D0
000247FE <AmiBlitz3.ab3@6838>    BNE.w JL_0_5F4E
00024800 <AmiBlitz3.ab3@6841>   MOVEQ.l #$0E,D5
00024802 <AmiBlitz3.ab3@6842> RTS
00024804 <AmiBlitz3.ab3@6846>   MOVEA.l A4,A5
00024808 <AmiBlitz3.ab3@6847>    BSR.w asmconst
0002481A <AmiBlitz3.ab3@6848>    !compare3                                               ;bsr.w JL_0_5FC0
0002481E <AmiBlitz3.ab3@6849>    BEQ.w JL_0_5FB8
00024822 <AmiBlitz3.ab3@6850>   CMP.w #$2E,D0
00024826 <AmiBlitz3.ab3@6851>    BEQ.w JL_0_5FA0
0002482A <AmiBlitz3.ab3@6852>   CMP.w #$28,D0
0002482E <AmiBlitz3.ab3@6853>    BNE.w syntaxerr
00024832 <AmiBlitz3.ab3@6854>    BSR.w get1bytemain                                      ;??wy not !fget
00024836 <AmiBlitz3.ab3@6855>   ORI.w #$20,D0
0002483A <AmiBlitz3.ab3@6856>   CMP.w #$70,D0
0002483E <AmiBlitz3.ab3@6857>    BNE.w JL_0_5F98
00024842 <AmiBlitz3.ab3@6858>    BSR.w get1bytemain                                      ;??wy not !fget
00024846 <AmiBlitz3.ab3@6859>   ORI.w #$20,D0
0002484A <AmiBlitz3.ab3@6860>   CMP.w #$63,D0
0002484E <AmiBlitz3.ab3@6861>    BNE.w syntaxerr
00024852 <AmiBlitz3.ab3@6862>    BSR.w get1bytemain                                      ;??wy not !fget
00024856 <AmiBlitz3.ab3@6863>    BSR.w JL_0_5FD4
00024858 <AmiBlitz3.ab3@6864>   ADDQ.w #4,D5
0002485A <AmiBlitz3.ab3@6865> RTS
0002485E <AmiBlitz3.ab3@6869>   BSR.w JL_0_5D46
00024862 <AmiBlitz3.ab3@6870> BRA.w JL_0_5FD4
00024866 <AmiBlitz3.ab3@6874>    BSR.w get1bytemain                                     ;??wy not !fget
0002486A <AmiBlitz3.ab3@6875>   ORI.w #$20,D0
0002486E <AmiBlitz3.ab3@6876>   CMP.w #$77,D0
00024872 <AmiBlitz3.ab3@6877>    BEQ.w JL_0_5FBC
00024876 <AmiBlitz3.ab3@6878>   CMP.w #$6C,D0
0002487A <AmiBlitz3.ab3@6879>    BNE.w syntaxerr
0002487C <AmiBlitz3.ab3@6882>   MOVEQ.l #$08,D5
0002487E <AmiBlitz3.ab3@6883> RTS
00024880 <AmiBlitz3.ab3@6887>   MOVEQ.l #$07,D5
00024882 <AmiBlitz3.ab3@6888> RTS
00024884 <AmiBlitz3.ab3@6892>   TST.w D0
00024888 <AmiBlitz3.ab3@6893>    BEQ.w JL_0_5FD2
0002488C <AmiBlitz3.ab3@6894>   CMP.w #$3A,D0
00024890 <AmiBlitz3.ab3@6895>    BEQ.w JL_0_5FD2
00024894 <AmiBlitz3.ab3@6896>   CMP.w #$2C,D0
00024896 <AmiBlitz3.ab3@6899> RTS
0002489A <AmiBlitz3.ab3@6903>   CMP.w #$2C,D0
0002489E <AmiBlitz3.ab3@6904>    BNE.w JL_0_6054
000248A2 <AmiBlitz3.ab3@6905>    BSR.w get1bytemain                                      ;??wy not !fget
000248A6 <AmiBlitz3.ab3@6906>   ORI.w #$20,D0
000248A8 <AmiBlitz3.ab3@6907>   MOVEQ.l #$00,D1
000248AC <AmiBlitz3.ab3@6908>   CMP.w #$64,D0
000248B0 <AmiBlitz3.ab3@6909>    BEQ.w JL_0_5FFA
000248B4 <AmiBlitz3.ab3@6910>   CMP.w #$61,D0
000248B8 <AmiBlitz3.ab3@6911>    BNE.w syntaxerr
000248BC <AmiBlitz3.ab3@6912>   BSET #$F,D1
000248C0 <AmiBlitz3.ab3@6915>    BSR.w get1bytemain                                      ;??wy not !fget
000248C4 <AmiBlitz3.ab3@6916>   SUBI.w #$30,D0
000248C8 <AmiBlitz3.ab3@6917>    BMI.w syntaxerr
000248CC <AmiBlitz3.ab3@6918>   CMP.w #$7,D0
000248D0 <AmiBlitz3.ab3@6919>    BHI.w syntaxerr
000248D2 <AmiBlitz3.ab3@6920>   LSL.w #8,D0
000248D4 <AmiBlitz3.ab3@6921>   LSL.w #4,D0
000248D6 <AmiBlitz3.ab3@6922>   OR.w D0,D1
000248DA <AmiBlitz3.ab3@6923>    BSR.w get1bytemain                                      ;??wy not !fget
000248DE <AmiBlitz3.ab3@6924>   CMP.w #$2E,D0
000248E2 <AmiBlitz3.ab3@6925>    BNE.w JL_0_6040
000248E6 <AmiBlitz3.ab3@6926>    BSR.w get1bytemain                                      ;??wy not !fget
000248EA <AmiBlitz3.ab3@6927>   ORI.w #$20,D0
000248EE <AmiBlitz3.ab3@6928>   CMP.w #$77,D0
000248F2 <AmiBlitz3.ab3@6929>    BEQ.w JL_0_603C
000248F6 <AmiBlitz3.ab3@6930>   CMP.w #$6C,D0
000248FA <AmiBlitz3.ab3@6931>    BNE.w syntaxerr
000248FE <AmiBlitz3.ab3@6932>   BSET #$B,D1
00024902 <AmiBlitz3.ab3@6935>    BSR.w get1bytemain                                      ;??wy not !fget
00024906 <AmiBlitz3.ab3@6938>    CMP.b #"*",d0                                           ;020 * Mode
0002490A <AmiBlitz3.ab3@6939>             BNE 'l1
0002490E <AmiBlitz3.ab3@6940>             BSR.w get1bytemain                             ;??wy not !fget
00024912 <AmiBlitz3.ab3@6941>             CMP.b #"2",d0
00024916 <AmiBlitz3.ab3@6942>             BNE 'l2
0002491A <AmiBlitz3.ab3@6943>             OR.w #$200,d1
0002491E <AmiBlitz3.ab3@6944> BRA 'l1b
00024922 <AmiBlitz3.ab3@6947>             CMP.b #"4",d0
00024926 <AmiBlitz3.ab3@6948>             BNE 'l3
0002492A <AmiBlitz3.ab3@6949>             OR.w #$400,d1
0002492E <AmiBlitz3.ab3@6950> BRA 'l1b
00024932 <AmiBlitz3.ab3@6953>             CMP.b #"8",d0
00024936 <AmiBlitz3.ab3@6954>             BNE syntaxerr
0002493A <AmiBlitz3.ab3@6955>             OR.w #$600,d1
0002493E <AmiBlitz3.ab3@6958>         BSR.w get1bytemain                                 ;??wy not !fget
00024942 <AmiBlitz3.ab3@6961>   CMP.w #$29,D0
00024946 <AmiBlitz3.ab3@6962>    BNE.w syntaxerr
0002494C <AmiBlitz3.ab3@6963>   MOVE.w D1,extraword
0002494E <AmiBlitz3.ab3@6964>   MOVEQ.l #$06,D5
00024952 <AmiBlitz3.ab3@6965> BRA.w get1bytemain                                         ;??wy not !fget
00024956 <AmiBlitz3.ab3@6969>   CMP.w #")",D0                                            ;")"
0002495A <AmiBlitz3.ab3@6970>    BNE.w errorbracketmiss                                  ; was syntax error
0002495C <AmiBlitz3.ab3@6971>   MOVEQ.l #$05,D5
00024960 <AmiBlitz3.ab3@6972> BRA.w get1bytemain                                         ;??wy not !fget
00024966 <AmiBlitz3.ab3@6979>   MOVEA.l asmbuff,A0
0002496C <AmiBlitz3.ab3@6980>   MOVE.w ininclude,D1
00024972 <AmiBlitz3.ab3@6981>   OR.w inmacro,D1
00024974 <AmiBlitz3.ab3@6982>   MOVE.w D1,(A0)+                                          ;flag!
00024978 <AmiBlitz3.ab3@6983>    BNE.w copyconst
0002497A <AmiBlitz3.ab3@6984>   MOVE.l A5,-(A7)
0002497E <AmiBlitz3.ab3@6985>    BSR.w copyconst
00024984 <AmiBlitz3.ab3@6986>   MOVEA.l asmbuff,A0
00024988 <AmiBlitz3.ab3@6987>   CMP.w #$4,D1
0002498C <AmiBlitz3.ab3@6988>    BLS.w asmconst__leave
00024992 <AmiBlitz3.ab3@6989>   TST.w lc
00024996 <AmiBlitz3.ab3@6990>    BNE.w asmconst__leave
00024998 <AmiBlitz3.ab3@6991>   ADDQ.w #2,A0
0002499A <AmiBlitz3.ab3@6992>   MOVE.l (A7)+,(A0)+
0002499C <AmiBlitz3.ab3@6993>   CLR.b (A0)
000249A4 <AmiBlitz3.ab3@6994>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000249A6 <AmiBlitz3.ab3@6995> RTS
000249A8 <AmiBlitz3.ab3@6999>   NOT.w (A0)
000249AA <AmiBlitz3.ab3@7000>   ADDQ.w #4,A7
000249AC <AmiBlitz3.ab3@7001> RTS
000249AE <AmiBlitz3.ab3@7004> lc:  Ds.w 1
000249B4 <AmiBlitz3.ab3@7008>   CLR.w lc
000249B6 <AmiBlitz3.ab3@7009>   MOVEQ.l #$00,D1
000249B8 <AmiBlitz3.ab3@7012>    ADDQ.w #1,D1                                            ;label name
000249E4 <AmiBlitz3.ab3@7013>    !fget                                                   ;bsr.w get1bytemain
000249E8 <AmiBlitz3.ab3@7014>    BEQ.w copyconst__done
000249EC <AmiBlitz3.ab3@7015>    CMP.w #$22,d0
000249F0 <AmiBlitz3.ab3@7016>    BNE.s copyconst__loop_l10
000249F6 <AmiBlitz3.ab3@7017>    NOT.w instringon
000249FA <AmiBlitz3.ab3@7020>    CMP.w #":",d0
000249FE <AmiBlitz3.ab3@7021>    BNE.s copyconst__loop_l11
00024A04 <AmiBlitz3.ab3@7022>    TST.w instringon
00024A08 <AmiBlitz3.ab3@7023>    BEQ copyconst__done
00024A0A <AmiBlitz3.ab3@7026>   TST.w D0
00024A0E <AmiBlitz3.ab3@7027>   BPL.w copyconst__notmi
00024A10 <AmiBlitz3.ab3@7028>   MOVE.w D0,-(A7)
00024A12 <AmiBlitz3.ab3@7029>   LSR.w #8,D0
00024A14 <AmiBlitz3.ab3@7030>   MOVE.b D0,(A0)+
00024A16 <AmiBlitz3.ab3@7031>   MOVE.w (A7)+,D0
00024A18 <AmiBlitz3.ab3@7032>   MOVE.b D0,(A0)+
00024A1A <AmiBlitz3.ab3@7033>   ADDQ.w #1,D1
00024A1E <AmiBlitz3.ab3@7034> BRA.s copyconst__loop
00024A24 <AmiBlitz3.ab3@7037>    TST.w instringon
00024A28 <AmiBlitz3.ab3@7038>    BNE.w copyconst__putbyte
00024A2E <AmiBlitz3.ab3@7039>    TST.b _dcb
00024A32 <AmiBlitz3.ab3@7040>    BNE copyconst__notmi_l10
00024A36 <AmiBlitz3.ab3@7041>    CMP.w #$28,D0
00024A3A <AmiBlitz3.ab3@7042>    BEQ.w copyconst__done
00024A3E <AmiBlitz3.ab3@7045>    CMP.w #$2C,D0
00024A42 <AmiBlitz3.ab3@7046>    BEQ.w copyconst__done
00024A46 <AmiBlitz3.ab3@7047>    CMP.b #"'",D0
00024A4A <AmiBlitz3.ab3@7048>    BNE.w copyconst__putbyte
00024A50 <AmiBlitz3.ab3@7049>    MOVE.w D0,lc                                     ;locallabels
00024A52 <AmiBlitz3.ab3@7050>    MOVE.l A1,-(A7)
00024A58 <AmiBlitz3.ab3@7051>    LEA lastgloballabel,A1
00024A5A <AmiBlitz3.ab3@7052>    TST.b (A1)
00024A5E <AmiBlitz3.ab3@7053>    BEQ.w nolocerr
00024A60 <AmiBlitz3.ab3@7056>   ADDQ.w #1,D1
00024A62 <AmiBlitz3.ab3@7057>   MOVE.b (A1)+,(A0)+
00024A66 <AmiBlitz3.ab3@7058>    BNE.w copyconst__cloop
00024A68 <AmiBlitz3.ab3@7059>   SUBQ.w #1,D1
00024A6A <AmiBlitz3.ab3@7060>   SUBQ.w #1,A0
00024A6C <AmiBlitz3.ab3@7061>   MOVEA.l (A7)+,A1
00024A6E <AmiBlitz3.ab3@7064>   MOVE.b D0,(A0)+
00024A72 <AmiBlitz3.ab3@7065> BRA.w copyconst__loop
00024A74 <AmiBlitz3.ab3@7068>   CLR.b (A0)
00024A7A <AmiBlitz3.ab3@7069>   MOVE.w D1,asmlen2
00024A7C <AmiBlitz3.ab3@7070> RTS
00024A82 <AmiBlitz3.ab3@7075>   CMP.l #$80ad,d0
00024A86 <AmiBlitz3.ab3@7076>   BNE.s 'l12
00024A8C <AmiBlitz3.ab3@7077> JMP bssseg
00024A92 <AmiBlitz3.ab3@7080>   CMP.l #$807f,d0
00024A96 <AmiBlitz3.ab3@7081>     BNE.s 'l13
00024A9C <AmiBlitz3.ab3@7082> JMP chipseg
00024AA2 <AmiBlitz3.ab3@7085>   ADDQ.l #1,destpointer                                    ;even
00024AAA <AmiBlitz3.ab3@7086>   BCLR #$0,destpointer+3
00024AAE <AmiBlitz3.ab3@7087>   SUBI.w #$803C,D0
00024AB0 <AmiBlitz3.ab3@7088>   LSL.w #2,D0
00024AB6 <AmiBlitz3.ab3@7089>   MOVEA.l #asmpnts,A0
00024ABA <AmiBlitz3.ab3@7090>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00024AC0 <AmiBlitz3.ab3@7091>   MOVE.w D0,temp1
00024AC2 <AmiBlitz3.ab3@7092>   MOVE.l A0,-(A7)
00024AC4 <AmiBlitz3.ab3@7093>   MOVEQ.l #$01,D1
00024AF0 <AmiBlitz3.ab3@7094>    !fget                                                   ;bsr.w get1bytemain
00024AF4 <AmiBlitz3.ab3@7095>   CMP.w #$2E,D0
00024AF8 <AmiBlitz3.ab3@7096>    BNE.w JL_0_6184
00024B24 <AmiBlitz3.ab3@7097>   !fget                                                    ;bsr.w get1bytemain
00024B28 <AmiBlitz3.ab3@7098>   ORI.w #$20,D0
00024B2C <AmiBlitz3.ab3@7099>   CMP.w #$77,D0                                            ;long
00024B30 <AmiBlitz3.ab3@7100>    BEQ.w JL_0_618A
00024B34 <AmiBlitz3.ab3@7101>   CMP.w #$62,D0                                            ;byte
00024B38 <AmiBlitz3.ab3@7102>    BEQ.w JL_0_617A
00024B3C <AmiBlitz3.ab3@7103>   CMP.w #$6C,D0                                            ;word
00024B40 <AmiBlitz3.ab3@7104>    BEQ.w JL_0_6196
00024B44 <AmiBlitz3.ab3@7105>   CMP.w #"s",d0
00024B48 <AmiBlitz3.ab3@7106>   BNE syntaxerr
00024B4C <AmiBlitz3.ab3@7107> BRA.w JL_0_617A
00024B4E <AmiBlitz3.ab3@7110>   MOVEQ.l #$00,D1
00024B52 <AmiBlitz3.ab3@7111>   MOVE.w $8(A0),D0
00024B56 <AmiBlitz3.ab3@7112> BRA.w JL_0_619E
00024B58 <AmiBlitz3.ab3@7115>   MOVEQ.l #$04,D1
00024B5C <AmiBlitz3.ab3@7116> BRA.w JL_0_61AE
00024B5E <AmiBlitz3.ab3@7119>   MOVEQ.l #$04,D1
00024B62 <AmiBlitz3.ab3@7120>   MOVE.w $8(A0),D0
00024B64 <AmiBlitz3.ab3@7121>   LSR.w #4,D0
00024B68 <AmiBlitz3.ab3@7122> BRA.w JL_0_619E
00024B6A <AmiBlitz3.ab3@7125>   MOVEQ.l #$08,D1
00024B6E <AmiBlitz3.ab3@7126>   MOVE.w $8(A0),D0
00024B70 <AmiBlitz3.ab3@7127>   LSR.w #8,D0
00024B74 <AmiBlitz3.ab3@7130>    ANDI.w #$F,D0
00024B78 <AmiBlitz3.ab3@7131>   CMP.w #$F,D0
00024B7C <AmiBlitz3.ab3@7132>    BNE.w 'cl60
00024B84 <AmiBlitz3.ab3@7135>    CMP.l #"MULS",-6(a0)
00024B88 <AmiBlitz3.ab3@7136>    BNE 'c20
00024B8E <AmiBlitz3.ab3@7137>    MOVE.l #$4c000800,d1
00024B94 <AmiBlitz3.ab3@7138> JMP do32
00024B9C <AmiBlitz3.ab3@7141>    CMP.l #"MULU",-6(a0)
00024BA0 <AmiBlitz3.ab3@7142>    BNE 'c30
00024BA6 <AmiBlitz3.ab3@7143>    MOVE.l #$4c000000,d1
00024BAC <AmiBlitz3.ab3@7144> JMP do32
00024BB4 <AmiBlitz3.ab3@7147>    CMP.l #"DIVS",-6(a0)
00024BB8 <AmiBlitz3.ab3@7148>    BNE 'c40
00024BBE <AmiBlitz3.ab3@7149>    MOVE.l #$4c400800,d1
00024BC4 <AmiBlitz3.ab3@7150> JMP do32
00024BCC <AmiBlitz3.ab3@7153>    CMP.l #"DIVU",-6(a0)
00024BD0 <AmiBlitz3.ab3@7154>    BNE 'c50
00024BD6 <AmiBlitz3.ab3@7155>    MOVE.l #$4c400000,d1
00024BDC <AmiBlitz3.ab3@7156> JMP do32
00024BE0 <AmiBlitz3.ab3@7159> BRA illsizeerr
00024C0C <AmiBlitz3.ab3@7162>   !fget                                                    ;bsr.w get1bytemain
00024C12 <AmiBlitz3.ab3@7165>   MOVE.w D1,asmsize
00024C14 <AmiBlitz3.ab3@7166>   MOVEQ.l #-$01,D3
00024C18 <AmiBlitz3.ab3@7167>    BSR.w reget
00024C1C <AmiBlitz3.ab3@7168>    BEQ.w JL_0_6200
00024C26 <AmiBlitz3.ab3@7169>   MOVE.l #ptr_parameterstore,asmbuff
00024C30 <AmiBlitz3.ab3@7171>    MOVE.w oldqflag,instringon
00024C36 <AmiBlitz3.ab3@7172>   MOVEA.l lastsourcepos,A5
00024C3A <AmiBlitz3.ab3@7173>    BSR.w JL_0_5DC2
00024C3C <AmiBlitz3.ab3@7174>   MOVE.l D4,D2                                             ;to src
00024C3E <AmiBlitz3.ab3@7175>   MOVE.l D5,D3
00024C48 <AmiBlitz3.ab3@7176>   MOVE.w asmlen2,asmlen
00024C4A <AmiBlitz3.ab3@7177>   MOVEQ.l #-$01,D5
00024C54 <AmiBlitz3.ab3@7178>   MOVE.w extraword,extraword2
00024C58 <AmiBlitz3.ab3@7179>   CMP.w #$2C,D0                                            ;','
00024C5C <AmiBlitz3.ab3@7180>    BNE.w JL_0_6200
00024C66 <AmiBlitz3.ab3@7181>   MOVE.l #namebuff2,asmbuff
00024C6A <AmiBlitz3.ab3@7182>    BSR.w JL_0_5DC2                                         ;dest
00024C6C <AmiBlitz3.ab3@7185>   MOVEA.l (A7)+,A0
00024C72 <AmiBlitz3.ab3@7186>   MOVEA.l destpointer,A1
00024C74 <AmiBlitz3.ab3@7187>   MOVEA.l A1,A4
00024C76 <AmiBlitz3.ab3@7188>   ADDQ.w #2,A1
00024C78 <AmiBlitz3.ab3@7189>   MOVE.w (A0),D1
00024C7A <AmiBlitz3.ab3@7190>   TST.w D3
00024C7E <AmiBlitz3.ab3@7191>    BMI.w JL_0_639E
00024C82 <AmiBlitz3.ab3@7192>   MOVE.w $E(A0),D0
00024C86 <AmiBlitz3.ab3@7193>    BPL.w JL_0_6264
00024C8A <AmiBlitz3.ab3@7194>   BTST #$0,D0
00024C8E <AmiBlitz3.ab3@7195>    BEQ.w JL_0_6240
00024C92 <AmiBlitz3.ab3@7196>   CMP.w #$1,D5
00024C96 <AmiBlitz3.ab3@7197>    BNE.w JL_0_6240
00024C9A <AmiBlitz3.ab3@7198>   CMP.w #$E,D3
00024C9E <AmiBlitz3.ab3@7199>    BEQ.w JL_0_6264
00024CA4 <AmiBlitz3.ab3@7200>   MOVE.w temp1,D0
00024CA6 <AmiBlitz3.ab3@7201>   ADDQ.w #4,D0
00024CAA <AmiBlitz3.ab3@7202> BRA.w JL_0_6256
00024CAE <AmiBlitz3.ab3@7205>   BTST #$1,D0
00024CB2 <AmiBlitz3.ab3@7206>    BEQ.w JL_0_6264
00024CB6 <AmiBlitz3.ab3@7207>   CMP.w #$B,D3
00024CBA <AmiBlitz3.ab3@7208>    BNE.w JL_0_6264
00024CC0 <AmiBlitz3.ab3@7209>   MOVE.w temp1,D0
00024CC2 <AmiBlitz3.ab3@7212>   ADDQ.w #4,D0
00024CC8 <AmiBlitz3.ab3@7213>   MOVEA.l #asmpnts,A0
00024CCC <AmiBlitz3.ab3@7214>   MOVEA.l $0(A0,D0.W),A0
00024CCE <AmiBlitz3.ab3@7215>   MOVE.w (A0),D1
00024CD8 <AmiBlitz3.ab3@7218>   MOVE.l #ptr_parameterstore,buff1
00024CE2 <AmiBlitz3.ab3@7219>   MOVE.l #namebuff2,buff2
00024CE6 <AmiBlitz3.ab3@7220>   MOVE.l $A(A0),D0
00024CEA <AmiBlitz3.ab3@7221>    BEQ.w JL_0_62DC
00024CEC <AmiBlitz3.ab3@7222>   MOVEA.l D0,A3
00024CF2 <AmiBlitz3.ab3@7223>   MOVE.w asmsize,D6
00024CF4 <AmiBlitz3.ab3@7226>    JSR (A3)
00024CF8 <AmiBlitz3.ab3@7227>    BPL.w JL_0_629A
00024CFC <AmiBlitz3.ab3@7228>   CMP.w #-$2,D0
00024D00 <AmiBlitz3.ab3@7229>    BEQ.w illsizeerr
00024D04 <AmiBlitz3.ab3@7230> BRA.w illeaerr
00024D08 <AmiBlitz3.ab3@7233>   BEQ.w JL_0_62DC
00024D0A <AmiBlitz3.ab3@7234>   EXG.l D2,D4
00024D0C <AmiBlitz3.ab3@7235>   EXG.l D3,D5
00024D12 <AmiBlitz3.ab3@7236>   MOVE.l extraword,D6
00024D14 <AmiBlitz3.ab3@7237>   SWAP D6
00024D1A <AmiBlitz3.ab3@7238>   MOVE.l D6,extraword
00024D24 <AmiBlitz3.ab3@7239>   MOVE.l #namebuff2,buff1
00024D2E <AmiBlitz3.ab3@7240>   MOVE.l #ptr_parameterstore,buff2
00024D34 <AmiBlitz3.ab3@7241>   MOVE.w asmlen,D6
00024D3A <AmiBlitz3.ab3@7242>   MOVE.w asmlen2,D7
00024D40 <AmiBlitz3.ab3@7243>   MOVE.w D6,asmlen2
00024D46 <AmiBlitz3.ab3@7244>   MOVE.w D7,asmlen
00024D50 <AmiBlitz3.ab3@7247>   MOVE.l buff1,asmbuff
00024D54 <AmiBlitz3.ab3@7248>   MOVE.w $E(A0),D0
00024D58 <AmiBlitz3.ab3@7249>    BEQ.w JL_0_6348
00024D5C <AmiBlitz3.ab3@7250>    BMI.w JL_0_6348
00024D60 <AmiBlitz3.ab3@7251>    CMP.w #$7000,d1
00024D64 <AmiBlitz3.ab3@7252>    BNE 'skip
00024D68 <AmiBlitz3.ab3@7253>    CMP.w #$b,d3
00024D6C <AmiBlitz3.ab3@7254>    BNE illeaerr
00024D70 <AmiBlitz3.ab3@7257>    CMP.w #$1,D0
00024D74 <AmiBlitz3.ab3@7258>    BNE.w JL_0_630E
00024D78 <AmiBlitz3.ab3@7259>    CMP.w #$B,D3
00024D7C <AmiBlitz3.ab3@7260>    BNE.w JL_0_6348
00024D80 <AmiBlitz3.ab3@7263>    BSR.w insasm
00024D82 <AmiBlitz3.ab3@7264>   MOVE.w D4,D2
00024D84 <AmiBlitz3.ab3@7265>   MOVE.w D5,D3
00024D88 <AmiBlitz3.ab3@7266> BRA.w JL_0_6364
00024D8C <AmiBlitz3.ab3@7269>    CMP.w #$2,D0
00024D90 <AmiBlitz3.ab3@7270>    BNE.w JL_0_6324
00024D94 <AmiBlitz3.ab3@7271>   CMP.w #$8,D3
00024D98 <AmiBlitz3.ab3@7272>    BNE.w illeaerr
00024D9A <AmiBlitz3.ab3@7273>   MOVEQ.l #$09,D3
00024D9E <AmiBlitz3.ab3@7274> BRA.w JL_0_6348
00024DA2 <AmiBlitz3.ab3@7277>    CMP.w #$3,D0
00024DA6 <AmiBlitz3.ab3@7278>    BEQ.w JL_0_6302
00024DAA <AmiBlitz3.ab3@7279>   CMP.w #$4,D0
00024DAE <AmiBlitz3.ab3@7280>    BEQ.w JL_0_6302
00024DB2 <AmiBlitz3.ab3@7281>   CMP.w #$5,D0
00024DB6 <AmiBlitz3.ab3@7282>    BNE.w JL_0_6348
00024DBA <AmiBlitz3.ab3@7283>   CMP.w #$8,D5
00024DBE <AmiBlitz3.ab3@7284>    BNE.w illeaerr
00024DC0 <AmiBlitz3.ab3@7285>   OR.w D2,D1
00024DC2 <AmiBlitz3.ab3@7286>   MOVEQ.l #$09,D5
00024DC6 <AmiBlitz3.ab3@7289>   MOVE.w $2(A0),D6
00024DCA <AmiBlitz3.ab3@7290>   MOVE.b $6(A0),D7
00024DCE <AmiBlitz3.ab3@7291>   MOVEM.l D4-D5,-(A7)
00024DD4 <AmiBlitz3.ab3@7292>   MOVE.w extraword2,D4
00024DD8 <AmiBlitz3.ab3@7293>    BSR.w doea
00024DDC <AmiBlitz3.ab3@7294>   MOVEM.l (A7)+,D2-D3
00024DDE <AmiBlitz3.ab3@7295>   TST.w D3
00024DE2 <AmiBlitz3.ab3@7298>     BMI.w JL_0_6392
00024DE8 <AmiBlitz3.ab3@7299>   MOVE.w extraword,D4
00024DEC <AmiBlitz3.ab3@7300>   MOVE.w $4(A0),D6
00024DF0 <AmiBlitz3.ab3@7301>   MOVE.b $7(A0),D7
00024DFA <AmiBlitz3.ab3@7302>   MOVE.l buff2,asmbuff
00024E04 <AmiBlitz3.ab3@7303>   MOVE.w asmlen2,asmlen
00024E08 <AmiBlitz3.ab3@7304>    BSR.w doea
00024E0C <AmiBlitz3.ab3@7305> BRA.w JL_0_63AA
00024E10 <AmiBlitz3.ab3@7308>   MOVE.w $4(A0),D0
00024E14 <AmiBlitz3.ab3@7309>    BNE.w illeaerr
00024E18 <AmiBlitz3.ab3@7310> BRA.w JL_0_63AA
00024E1C <AmiBlitz3.ab3@7314>   MOVE.w $2(A0),D0
00024E20 <AmiBlitz3.ab3@7315>   OR.w $4(A0),D0
00024E24 <AmiBlitz3.ab3@7316>    BNE.w illeaerr
00024E28 <AmiBlitz3.ab3@7319>   MOVE.w $8(A0),D0
00024E2C <AmiBlitz3.ab3@7320>   ANDI.w #$F000,D0
00024E30 <AmiBlitz3.ab3@7321>   CMP.w #-$1000,D0
00024E34 <AmiBlitz3.ab3@7322>    BEQ.w JL_0_63D2
00024E36 <AmiBlitz3.ab3@7323>   LSR.w #8,D0
00024E38 <AmiBlitz3.ab3@7324>   LSR.w #4,D0
00024E3C <AmiBlitz3.ab3@7325>   MOVE.w $8(A0),D2
00024E42 <AmiBlitz3.ab3@7326>   MOVE.w asmsize,D3
00024E44 <AmiBlitz3.ab3@7327>   LSR.w D3,D2
00024E48 <AmiBlitz3.ab3@7328>   ANDI.w #$F,D2
00024E4A <AmiBlitz3.ab3@7329>   LSL.w D0,D2
00024E4C <AmiBlitz3.ab3@7330>   OR.w D2,D1
00024E52 <AmiBlitz3.ab3@7333>   CMPA.l destbufferend,A4
00024E56 <AmiBlitz3.ab3@7334>    BCS.w JL_0_63E8
00024E5E <AmiBlitz3.ab3@7336>   MOVE.w #$FFFF,dontwrite
00024E62 <AmiBlitz3.ab3@7337> BRA.w JL_0_63EA
00024E64 <AmiBlitz3.ab3@7340>   MOVE.w D1,(A4)
00024E6A <AmiBlitz3.ab3@7343>   MOVE.l A1,destpointer
00024E6C <AmiBlitz3.ab3@7344> RTS
00024E72 <AmiBlitz3.ab3@7348>   MOVE.l destpointer,-(A7)
00024E78 <AmiBlitz3.ab3@7349>   MOVE.l A1,destpointer
00024E7C <AmiBlitz3.ab3@7350>    BSR.w addoff
00024E82 <AmiBlitz3.ab3@7351>   MOVEA.l destpointer,A1
00024E88 <AmiBlitz3.ab3@7352>   MOVE.l (A7)+,destpointer
00024E8A <AmiBlitz3.ab3@7353> RTS
00024E8E <AmiBlitz3.ab3@7357>   MOVEM.l d2-d6,-(a7)
00024E94 <AmiBlitz3.ab3@7358>   JSR stripspaces
00024E98 <AmiBlitz3.ab3@7359>   CMP.b #"d",(a5)+
00024E9C <AmiBlitz3.ab3@7360>   BNE noreg
00024E9E <AmiBlitz3.ab3@7361>   MOVE.b (a5)+,d0
00024EA2 <AmiBlitz3.ab3@7362>   CMP.b #$30,d0
00024EA6 <AmiBlitz3.ab3@7363>   BLT noreg
00024EAA <AmiBlitz3.ab3@7364>   CMP.b #$37,d0
00024EAE <AmiBlitz3.ab3@7365>   BGT noreg
00024EB2 <AmiBlitz3.ab3@7366>   SUB.b #$30,d0
00024EB4 <AmiBlitz3.ab3@7367>   MOVEQ #0,d3
00024EB6 <AmiBlitz3.ab3@7368>   MOVE.b d0,d3                                             ;reg1
00024EB8 <AmiBlitz3.ab3@7369>   ASL.l #8,d3
00024EBA <AmiBlitz3.ab3@7370>   ASL.l #8,d3
00024EC0 <AmiBlitz3.ab3@7371>   JSR stripspaces
00024EC4 <AmiBlitz3.ab3@7372>   CMP.b #",",(a5)+
00024EC8 <AmiBlitz3.ab3@7373>   BNE noreg
00024ECE <AmiBlitz3.ab3@7374>   JSR stripspaces
00024ED2 <AmiBlitz3.ab3@7375>   CMP.b #"d",(a5)+
00024ED6 <AmiBlitz3.ab3@7376>   BNE noreg
00024ED8 <AmiBlitz3.ab3@7377>   MOVE.b (a5)+,d0
00024EDC <AmiBlitz3.ab3@7378>   CMP.b #$30,d0
00024EE0 <AmiBlitz3.ab3@7379>   BLT noreg
00024EE4 <AmiBlitz3.ab3@7380>   CMP.b #$37,d0
00024EE8 <AmiBlitz3.ab3@7381>   BGT noreg
00024EEC <AmiBlitz3.ab3@7382>   SUB.b #$30,d0
00024EEE <AmiBlitz3.ab3@7383>   MOVEQ #0,d4
00024EF0 <AmiBlitz3.ab3@7384>   MOVE.b d0,d4                                             ;reg2
00024EF2 <AmiBlitz3.ab3@7385>   ASL.l #8,d4
00024EF4 <AmiBlitz3.ab3@7386>   ASL.l #4,d4
00024EF6 <AmiBlitz3.ab3@7387>   OR.b d0,d1
00024EF8 <AmiBlitz3.ab3@7388>   OR.l d3,d1
00024EFA <AmiBlitz3.ab3@7389>   OR.l d4,d1
00024F00 <AmiBlitz3.ab3@7390>   JSR writelong
00024F04 <AmiBlitz3.ab3@7391>   MOVEM.l (a7)+,d2-d6
00024F08 <AmiBlitz3.ab3@7392>   MOVEM.l d1/a1-a3,-(a7)
00024F0C <AmiBlitz3.ab3@7393> BRA exit
00024F10 <AmiBlitz3.ab3@7397>   MOVEM.l (a7)+,d2-d6
00024F16 <AmiBlitz3.ab3@7398>   LEA errtext,a0
00024F18 <AmiBlitz3.ab3@7399>   MOVE.l a0,-(a7)
00024F1E <AmiBlitz3.ab3@7400> JMP handle_compileerror
00024F24 <AmiBlitz3.ab3@7409>   MOVE.w dontwrite,D1
00024F28 <AmiBlitz3.ab3@7410>    BNE.w asmfixer__done
00024F30 <AmiBlitz3.ab3@7411>   BTST #$7,make_smallestcode
00024F34 <AmiBlitz3.ab3@7412>    BEQ.w asmfixer__go
00024F38 <AmiBlitz3.ab3@7413>   MOVE.w pass(PC),D1
00024F3C <AmiBlitz3.ab3@7414>    BEQ.w asmfixer__done
00024F42 <AmiBlitz3.ab3@7417>   MOVEA.l templabel,A2                                     ;insert labels in Code
00024F4A <AmiBlitz3.ab3@7418>   MOVE.b #1,curtemplabel
00024F52 <AmiBlitz3.ab3@7419>   MOVE.w #$FFFF,constmode
00024F58 <AmiBlitz3.ab3@7420>   CLR.w regnum
00024F62 <AmiBlitz3.ab3@7421>           MOVE.l #forthstack,forthsp
00024F6C <AmiBlitz3.ab3@7422>           MOVE.l #precstack,precsp
00024F70 <AmiBlitz3.ab3@7423>    BSR.w prepstack
00024F72 <AmiBlitz3.ab3@7426>   MOVE.l A2,-(A7)
00024F76 <AmiBlitz3.ab3@7427>    BSR.w chkstop
00024F78 <AmiBlitz3.ab3@7428>   MOVEA.l (A7)+,A2
00024F7C <AmiBlitz3.ab3@7429>   CMPA.w #$0,A2
00024F80 <AmiBlitz3.ab3@7430>    BEQ.w asmfixer__done2
00024F86 <AmiBlitz3.ab3@7431>    CLR.b iee
00024F8C <AmiBlitz3.ab3@7432>   MOVE.l A2,asmbuff
00024F90 <AmiBlitz3.ab3@7433>   LEA $10(A2),A5
00024F94 <AmiBlitz3.ab3@7434>   TST.b $F(A2)
00024F98 <AmiBlitz3.ab3@7435>    BNE.w asmfixer__skipo
00024F9A <AmiBlitz3.ab3@7436>   MOVEA.l (A5),A5                                          ;pointer to real text
00024FA0 <AmiBlitz3.ab3@7439>    CLR.w asmtype
00024FA4 <AmiBlitz3.ab3@7440>    CMP.b #".",(a5)
00024FA8 <AmiBlitz3.ab3@7441>    BNE.s asmfixer__skipo_l10
00024FAA <AmiBlitz3.ab3@7442>    MOVE.l a2,-(a7)
00024FAC <AmiBlitz3.ab3@7443>    ADDQ.l #1,a5
00024FB2 <AmiBlitz3.ab3@7444>    LEA newtypebase,a2
00024FB6 <AmiBlitz3.ab3@7445>    BSR getparameter2
00024FBA <AmiBlitz3.ab3@7446>    BEQ.w syntaxerr
00024FBE <AmiBlitz3.ab3@7447>    BSR findtype
00024FC2 <AmiBlitz3.ab3@7448>    BNE.w notypeerr
00024FC6 <AmiBlitz3.ab3@7449>    LEA $4(a2),a2
00024FCA <AmiBlitz3.ab3@7450>    BSR getparameter2
00024FCE <AmiBlitz3.ab3@7451>    BEQ.w syntaxerr
00024FD2 <AmiBlitz3.ab3@7452>    BSR.w findvariable2
00024FD6 <AmiBlitz3.ab3@7453>    BNE.w notypeerr
00024FDA <AmiBlitz3.ab3@7454>    MOVE.w $4(a2),d3
00024FDC <AmiBlitz3.ab3@7455>    EXT.l d3
00024FE0 <AmiBlitz3.ab3@7456> BRA asmfixer__skipo_l30b
00024FE4 <AmiBlitz3.ab3@7459>   CMP.b #"\",(a5)
00024FE8 <AmiBlitz3.ab3@7460>     BNE asmfixer__skipo_l20
00024FEA <AmiBlitz3.ab3@7461>     ADDQ.l #1,a5
00024FEC <AmiBlitz3.ab3@7462>    MOVE.l a2,-(a7)
00024FEE <AmiBlitz3.ab3@7463>    MOVE.l a5,a4
00024FF4 <AmiBlitz3.ab3@7464>    LEA usedpath,a5
00024FF8 <AmiBlitz3.ab3@7465>    CMP.b #"*",(a5)
00024FFC <AmiBlitz3.ab3@7466>    BNE asmfixer__skipo_lm1
00024FFE <AmiBlitz3.ab3@7467>    ADDQ.l #1,a5
00025002 <AmiBlitz3.ab3@7470>    BSR.w getparameter2
00025006 <AmiBlitz3.ab3@7471>    BEQ.w syntaxerr
0002500C <AmiBlitz3.ab3@7472>    LEA varbase,A2
00025014 <AmiBlitz3.ab3@7473>    MOVE.b #1,newvariable
00025018 <AmiBlitz3.ab3@7474>    BSR.w findvariable
0002501E <AmiBlitz3.ab3@7475>    CLR.b newvariable
00025024 <AmiBlitz3.ab3@7476>    CMP.l #-1,d0
00025028 <AmiBlitz3.ab3@7477>    BEQ.w notypeerr
0002502A <AmiBlitz3.ab3@7478>    MOVE.l a4,a5
0002502E <AmiBlitz3.ab3@7479>    MOVE.l $a(a2),a2
00025032 <AmiBlitz3.ab3@7480>    LEA $4(a2),a2
00025036 <AmiBlitz3.ab3@7481>    BSR getparameter2
0002503A <AmiBlitz3.ab3@7482>    BEQ.w syntaxerr
0002503E <AmiBlitz3.ab3@7483>    BSR.w findvariable2
00025042 <AmiBlitz3.ab3@7484>    BNE.w notypeerr
00025046 <AmiBlitz3.ab3@7485>   MOVE.w $4(A2),D3
00025048 <AmiBlitz3.ab3@7486>   EXT.l D3
0002504E <AmiBlitz3.ab3@7489>    CMP.b #"[",-1(a5)
00025052 <AmiBlitz3.ab3@7490>    BNE asmfixer__skipo_l30c
00025054 <AmiBlitz3.ab3@7491>    MOVEQ #0,d0
00025056 <AmiBlitz3.ab3@7492>    MOVE.b (a5)+,d0
00025058 <AmiBlitz3.ab3@7493>    MOVE.l d3,-(a7)
0002505A <AmiBlitz3.ab3@7494>    MOVEQ #0,d3
00025060 <AmiBlitz3.ab3@7495>    JSR atoi
00025062 <AmiBlitz3.ab3@7496>    MOVE.l (a7)+,d1
00025066 <AmiBlitz3.ab3@7497>    MOVE.l $a(a2),a2
0002506A <AmiBlitz3.ab3@7498>    MOVE.w 8(a2),d0
0002506C <AmiBlitz3.ab3@7499>    MULS d0,d3
0002506E <AmiBlitz3.ab3@7500>    ADD.l d1,d3
00025070 <AmiBlitz3.ab3@7503>   MOVE.l (a7)+,a2
00025074 <AmiBlitz3.ab3@7504> BRA asmfixer__oko
0002507A <AmiBlitz3.ab3@7507>   CMP.w #$c,$8(a2)
0002507E <AmiBlitz3.ab3@7508>      BEQ asmfixer__skipo_lf1
00025084 <AmiBlitz3.ab3@7509>      CMP.w #$d,$8(a2)
00025088 <AmiBlitz3.ab3@7510>      BEQ asmfixer__skipo_lf1
0002508E <AmiBlitz3.ab3@7513>   JSR AJL_0_BF6E
00025094 <AmiBlitz3.ab3@7516>   MOVEA.l asmbuff,A2
00025098 <AmiBlitz3.ab3@7517>    BEQ.w asmfixer__oko
0002509C <AmiBlitz3.ab3@7518>   CMP.w #$28,D0
000250A0 <AmiBlitz3.ab3@7519>    BEQ.w asmfixer__oko
000250A4 <AmiBlitz3.ab3@7520>   CMP.w #$2C,D0
000250A8 <AmiBlitz3.ab3@7521>    BEQ.w asmfixer__oko
000250AC <AmiBlitz3.ab3@7522> BRA.w syntaxerr
000250B4 <AmiBlitz3.ab3@7525>   MOVE.b #1,iee
000250B8 <AmiBlitz3.ab3@7526> BRA asmfixer__skipo_lf2
000250BC <AmiBlitz3.ab3@7529>   MOVEA.l $4(A2),A1
000250C0 <AmiBlitz3.ab3@7531>   MOVE.w $8(A2),D1                                         ;labelmode
000250C4 <AmiBlitz3.ab3@7532>   CMP.w #$5,D1
000250C8 <AmiBlitz3.ab3@7533>    BNE.w asmfixer__notdan
000250CC <AmiBlitz3.ab3@7536>    BSR.w chkword                                         ;word
000250CE <AmiBlitz3.ab3@7539>   MOVE.w D3,(A1)
000250D2 <AmiBlitz3.ab3@7540> BRA.w asmfixer__next
000250D6 <AmiBlitz3.ab3@7543>   CMP.w #$6,D1
000250DA <AmiBlitz3.ab3@7544>    BNE.w asmfixer__notdanxi
000250DE <AmiBlitz3.ab3@7547>    BSR.w chkbyte                                         ;byte
000250E2 <AmiBlitz3.ab3@7550>   MOVE.b D3,$1(A1)
000250E6 <AmiBlitz3.ab3@7551> BRA.w asmfixer__next
000250EA <AmiBlitz3.ab3@7554>    CMP.w #$11,D1                                           ;byte
000250EE <AmiBlitz3.ab3@7555>    BEQ.w asmfixer__isbyte2
000250F2 <AmiBlitz3.ab3@7556>    CMP.w #$c,d1
000250F6 <AmiBlitz3.ab3@7557>    BEQ asmfixer__single1
000250FA <AmiBlitz3.ab3@7558>    CMP.w #$d,d1
000250FE <AmiBlitz3.ab3@7559>    BEQ asmfixer__double1
00025102 <AmiBlitz3.ab3@7560>   CMP.w #$7,D1
00025106 <AmiBlitz3.ab3@7561>    BEQ.w asmfixer__word                                    ;word
0002510A <AmiBlitz3.ab3@7562>   CMP.w #$8,D1
0002510E <AmiBlitz3.ab3@7563>    BNE.w asmfixer__notabsl
00025114 <AmiBlitz3.ab3@7566>   MOVE.w asmtype,D1                                        ;long
00025118 <AmiBlitz3.ab3@7567>    BEQ.w asmfixer__notpcrel
0002511C <AmiBlitz3.ab3@7568>      BSR.w asmoff
0002511E <AmiBlitz3.ab3@7571>   MOVE.l D3,(A1)
00025122 <AmiBlitz3.ab3@7572> BRA.w asmfixer__next
00025128 <AmiBlitz3.ab3@7576>   fmove.s fp0,0(a1)
0002512C <AmiBlitz3.ab3@7577> BRA.w asmfixer__next
00025132 <AmiBlitz3.ab3@7581>   fmove.d fp0,0(a1)
00025136 <AmiBlitz3.ab3@7582> BRA.w asmfixer__next
0002513A <AmiBlitz3.ab3@7586>   CMP.w #$9,D1
0002513E <AmiBlitz3.ab3@7587>    BNE.w asmfixer__notdpc
00025140 <AmiBlitz3.ab3@7588>   SUB.l A1,D3                                              ;branchword
00025144 <AmiBlitz3.ab3@7589>    BSR.w chkword
00025146 <AmiBlitz3.ab3@7590>   MOVE.w D3,(A1)
0002514A <AmiBlitz3.ab3@7591> BRA.w asmfixer__next
0002514E <AmiBlitz3.ab3@7595>   CMP.w #$A,D1
00025152 <AmiBlitz3.ab3@7596>    BNE.w asmfixer__imm
00025154 <AmiBlitz3.ab3@7597>   SUB.l A1,D3                                              ;branchbyte
00025158 <AmiBlitz3.ab3@7598> BRA.w asmfixer__isbyte
0002515C <AmiBlitz3.ab3@7602>   CMP.w #$11,d1
00025160 <AmiBlitz3.ab3@7603>   BLE asmfixer__imm_org
00025162 <AmiBlitz3.ab3@7604>   MOVE.l a3,-(a7)
00025168 <AmiBlitz3.ab3@7605>   LEA pluginbase,a3
0002516C <AmiBlitz3.ab3@7606>   MOVE.l 8(a2),a0
0002516E <AmiBlitz3.ab3@7607>   JSR (a0)                                                 ;hook
00025170 <AmiBlitz3.ab3@7608>   MOVE.l (a7)+,a3
00025174 <AmiBlitz3.ab3@7609> BRA asmfixer__next
00025178 <AmiBlitz3.ab3@7612>   MOVE.w $A(A2),D0
0002517C <AmiBlitz3.ab3@7613>    BEQ.w asmfixer__noflag
00025180 <AmiBlitz3.ab3@7614>   CMP.w #$1,D0
00025184 <AmiBlitz3.ab3@7615>    BEQ.w asmfixer__tocount
00025188 <AmiBlitz3.ab3@7616>   CMP.w #$3,D0
0002518C <AmiBlitz3.ab3@7617>    BEQ.w asmfixer__tomoveq
00025190 <AmiBlitz3.ab3@7618>   CMP.w #$4,D0
00025194 <AmiBlitz3.ab3@7619>    BEQ.w asmfixer__totrap
00025198 <AmiBlitz3.ab3@7622>   CMP.w #$B,D1                                             ;long
0002519C <AmiBlitz3.ab3@7623>    BEQ.w asmfixer__isabsl
000251A0 <AmiBlitz3.ab3@7624> BRA asmfixer__word2                                              ;word
000251A6 <AmiBlitz3.ab3@7627>   CMP.l #$F,D3
000251AA <AmiBlitz3.ab3@7628>    BHI.w illtraperr
000251AC <AmiBlitz3.ab3@7629>   OR.b D3,-(A1)
000251B0 <AmiBlitz3.ab3@7630> BRA.w asmfixer__next
000251B6 <AmiBlitz3.ab3@7633>   CMP.l #$8,D3
000251BA <AmiBlitz3.ab3@7634>    BHI.w illimmerr
000251BC <AmiBlitz3.ab3@7635>   TST.l D3
000251C0 <AmiBlitz3.ab3@7636>    BEQ.w illimmerr
000251C4 <AmiBlitz3.ab3@7637>   ANDI.w #$7,D3
000251C6 <AmiBlitz3.ab3@7638>   LSL.w #8,D3
000251C8 <AmiBlitz3.ab3@7639>   LSL.w #1,D3
000251CA <AmiBlitz3.ab3@7640>   OR.w D3,-(A1)
000251CE <AmiBlitz3.ab3@7641> BRA.w asmfixer__next
000251D2 <AmiBlitz3.ab3@7644>    BSR.w chkbyte
000251D4 <AmiBlitz3.ab3@7645>   MOVE.b D3,-(A1)
000251D6 <AmiBlitz3.ab3@7648>   MOVEA.l (A2),A2
000251DA <AmiBlitz3.ab3@7649> BRA.w asmfixer__loop
000251E0 <AmiBlitz3.ab3@7652>   CLR.w constmode
000251E6 <AmiBlitz3.ab3@7655>   CLR.b curtemplabel
000251E8 <AmiBlitz3.ab3@7656> RTS
000251EA <AmiBlitz3.ab3@7665>   BTST D3,D6
000251EE <AmiBlitz3.ab3@7666>    BEQ.w illeaerr
000251F2 <AmiBlitz3.ab3@7667>    BSR.w makemode
000251F6 <AmiBlitz3.ab3@7668>   CMP.w #$7,D3
000251FA <AmiBlitz3.ab3@7669>    BCS.w doea__skip
000251FC <AmiBlitz3.ab3@7670>   MOVE.w D3,D2
000251FE <AmiBlitz3.ab3@7671>   SUBQ.w #7,D2
00025202 <AmiBlitz3.ab3@7672>   CMP.w #$5,D2
00025206 <AmiBlitz3.ab3@7673>    BCS.w doea__skip0
00025208 <AmiBlitz3.ab3@7674>   MOVEQ.l #$04,D2
0002520A <AmiBlitz3.ab3@7677>   MOVEQ.l #$07,D3
0002520C <AmiBlitz3.ab3@7680>   MOVE.b D7,D0
00025210 <AmiBlitz3.ab3@7681>   ANDI.w #$F,D0
00025214 <AmiBlitz3.ab3@7682>   CMP.w #$F,D0
00025218 <AmiBlitz3.ab3@7683>    BEQ.w doea__skip2
0002521A <AmiBlitz3.ab3@7684>   LSL.w D0,D3
0002521C <AmiBlitz3.ab3@7685>   OR.w D3,D1
0002521E <AmiBlitz3.ab3@7688>   LSR.w #4,D7
00025222 <AmiBlitz3.ab3@7689>   ANDI.w #$F,D7
00025226 <AmiBlitz3.ab3@7690>   CMP.w #$F,D7
0002522A <AmiBlitz3.ab3@7691>    BEQ.w doea__skip3
0002522C <AmiBlitz3.ab3@7692>   LSL.w D7,D2
0002522E <AmiBlitz3.ab3@7693>   OR.w D2,D1
00025230 <AmiBlitz3.ab3@7696> RTS
00025236 <AmiBlitz3.ab3@7700>   CMP.l #$7F,D3
0002523A <AmiBlitz3.ab3@7701>    BGT.w illdiserr
00025240 <AmiBlitz3.ab3@7702>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025244 <AmiBlitz3.ab3@7703>    BLT.w illdiserr
00025246 <AmiBlitz3.ab3@7704> RTS
0002524C <AmiBlitz3.ab3@7708>   CMP.l #$7fff,D3
00025250 <AmiBlitz3.ab3@7709>    BGT.w illdiserr
00025256 <AmiBlitz3.ab3@7710>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
0002525A <AmiBlitz3.ab3@7711>    BLT.w illdiserr
0002525C <AmiBlitz3.ab3@7712> RTS
0002525E <AmiBlitz3.ab3@7717>   MOVE.b (a5)+,d0
00025260 <AmiBlitz3.ab3@7718>   CMP.b d1,d0
00025264 <AmiBlitz3.ab3@7719>   BEQ 'll10
00025266 <AmiBlitz3.ab3@7720>   TST.b d0
0002526A <AmiBlitz3.ab3@7721>   BNE 'll20
0002526C <AmiBlitz3.ab3@7724>   SUBQ #1,a5
0002526E <AmiBlitz3.ab3@7725> RTS
00025270 <AmiBlitz3.ab3@7730>   MOVE.b (a5)+,d0
00025274 <AmiBlitz3.ab3@7731>   CMP.b #",",d0
00025278 <AmiBlitz3.ab3@7732>   BEQ 'll10
0002527C <AmiBlitz3.ab3@7733>   CMP.b #";",d0
00025280 <AmiBlitz3.ab3@7734>   BEQ 'll10
00025284 <AmiBlitz3.ab3@7735>  CMP.b #":",d0
00025288 <AmiBlitz3.ab3@7736>   BEQ 'll10
0002528A <AmiBlitz3.ab3@7739>   TST.b d0
0002528E <AmiBlitz3.ab3@7740>   BNE 'll20
00025290 <AmiBlitz3.ab3@7743>   SUBQ #1,a5
00025292 <AmiBlitz3.ab3@7744> RTS
00025294 <AmiBlitz3.ab3@7748>   ADD.l a2,d1
0002529A <AmiBlitz3.ab3@7749>   LEA tempspace,a1
0002529C <AmiBlitz3.ab3@7750>   MOVE.l d1,a0
0002529E <AmiBlitz3.ab3@7753>   MOVE.b (a0)+,(a1)+
000252A2 <AmiBlitz3.ab3@7754>   BNE.s 'l10
000252A4 <AmiBlitz3.ab3@7755>   SUBQ.l #1,a0
000252A6 <AmiBlitz3.ab3@7756>   SUBQ.l #1,a1
000252A8 <AmiBlitz3.ab3@7759>   MOVE.b (a5)+,(a1)+
000252AC <AmiBlitz3.ab3@7760>   BNE.s 'l20
000252AE <AmiBlitz3.ab3@7761>   CLR.b (a1)
000252B4 <AmiBlitz3.ab3@7762>   LEA tempspace,a5
000252B6 <AmiBlitz3.ab3@7763> RTS
000252BA <AmiBlitz3.ab3@7767>   MOVEM.l D1-D2/A0,-(A7)
000252BC <AmiBlitz3.ab3@7768>   MOVE.l d0,d2
000252BE <AmiBlitz3.ab3@7769>   MOVEQ #0,d1
000252C0 <AmiBlitz3.ab3@7770>   MOVE.l a5,a4
000252C2 <AmiBlitz3.ab3@7773>   ADDQ.l #1,d1
000252C4 <AmiBlitz3.ab3@7774>   MOVE.b (a5)+,d0
000252C8 <AmiBlitz3.ab3@7775>   CMP.b #",",d0
000252CC <AmiBlitz3.ab3@7776>   BEQ 'll10
000252D0 <AmiBlitz3.ab3@7777>   CMP.b #";",d0
000252D4 <AmiBlitz3.ab3@7778>   BEQ 'll10
000252D8 <AmiBlitz3.ab3@7779>   CMP.b #":",d0
000252DC <AmiBlitz3.ab3@7780>   BEQ 'll10
000252E0 <AmiBlitz3.ab3@7781>   CMP.b #"(",d0
000252E4 <AmiBlitz3.ab3@7782>   BEQ 'll10
000252E6 <AmiBlitz3.ab3@7783>   TST.b d0
000252EA <AmiBlitz3.ab3@7784>   BNE 'll20
000252EC <AmiBlitz3.ab3@7787>   SUBQ #1,a5
000252F0 <AmiBlitz3.ab3@7788>   CMP.b #"'",(a4)
000252F4 <AmiBlitz3.ab3@7789>   BEQ 'llocal
000252FA <AmiBlitz3.ab3@7790>   TST.w inmacro
000252FE <AmiBlitz3.ab3@7791>   BNE 'lmacro
00025300 <AmiBlitz3.ab3@7792>   MOVEQ.l #$14+4,D0
00025302 <AmiBlitz3.ab3@7793>   ADD.l d1,d0
00025304 <AmiBlitz3.ab3@7794>   MOVE.l d1,-(a7)
00025306 <AmiBlitz3.ab3@7795>   MOVEQ.l #$01,D1
0002530C <AmiBlitz3.ab3@7796>   MOVEA.l _execbase,A6
00025312 <AmiBlitz3.ab3@7797>   MOVE.l mempool2,a0
00025316 <AmiBlitz3.ab3@7798>   JSR _AllocPooled(a6)
00025318 <AmiBlitz3.ab3@7800>   MOVE.l (a7)+,d1
0002531A <AmiBlitz3.ab3@7801>   TST.l d0
0002531E <AmiBlitz3.ab3@7802>   BEQ nomemory
00025320 <AmiBlitz3.ab3@7803>   MOVEA.l D0,A0
00025328 <AmiBlitz3.ab3@7805>   MOVE.w linenumat+2,$A(A0)
0002532E <AmiBlitz3.ab3@7807>   MOVE.l templabel,(A0)
00025334 <AmiBlitz3.ab3@7808>   MOVE.l A0,templabel
0002533C <AmiBlitz3.ab3@7809>   MOVE.l destpointer,$4(A0)
00025340 <AmiBlitz3.ab3@7810>   MOVE.l d2,$8(A0)
00025344 <AmiBlitz3.ab3@7811>   LEA $E(A0),A0
00025348 <AmiBlitz3.ab3@7812>   MOVE.b #$14,(A0)+
0002534A <AmiBlitz3.ab3@7813>   CLR.b (a0)+
0002534C <AmiBlitz3.ab3@7815>   MOVE.l a0,d2
0002534E <AmiBlitz3.ab3@7816>   ADDQ.l #4,d2
00025350 <AmiBlitz3.ab3@7817>   MOVE.l d2,(a0)+
00025352 <AmiBlitz3.ab3@7820>   MOVE.b (a4)+,(a0)+
00025354 <AmiBlitz3.ab3@7821>   SUBQ.l #1,d1
00025358 <AmiBlitz3.ab3@7822>   BNE 'lc1
0002535A <AmiBlitz3.ab3@7823>   CLR.b (a0)+
00025360 <AmiBlitz3.ab3@7824>   MOVE.w linenumat,(a0)
00025364 <AmiBlitz3.ab3@7825>   MOVEM.l (A7)+,D1-D2/A0
00025366 <AmiBlitz3.ab3@7826> RTS
00025368 <AmiBlitz3.ab3@7829>   MOVEQ.l #$10+2,D0
0002536A <AmiBlitz3.ab3@7830>   ADD.l d1,d0
0002536E <AmiBlitz3.ab3@7831>   MOVEM.l a4/d3,-(a7)
00025370 <AmiBlitz3.ab3@7832>   MOVE.l d1,d3
00025372 <AmiBlitz3.ab3@7833>   MOVEQ.l #$01,D1
00025378 <AmiBlitz3.ab3@7834>   MOVEA.l _execbase,A6
0002537E <AmiBlitz3.ab3@7835>   MOVE.l mempool2,a0
00025382 <AmiBlitz3.ab3@7836>   JSR _AllocPooled(a6)
00025384 <AmiBlitz3.ab3@7838>   TST.l d0
00025388 <AmiBlitz3.ab3@7839>   BEQ nomemory
0002538A <AmiBlitz3.ab3@7840>   MOVEA.l D0,A0
00025392 <AmiBlitz3.ab3@7843>   MOVE.w linenumat+2,$C(A0)
00025398 <AmiBlitz3.ab3@7844>   MOVE.l templabel,(A0)
0002539E <AmiBlitz3.ab3@7845>   MOVE.l A0,templabel
000253A6 <AmiBlitz3.ab3@7846>   MOVE.l destpointer,$4(A0)
000253AA <AmiBlitz3.ab3@7847>   MOVE.l d2,$8(A0)
000253AE <AmiBlitz3.ab3@7848>   LEA $E(A0),A0
000253B0 <AmiBlitz3.ab3@7849>   MOVE.b d3,(A0)+
000253B6 <AmiBlitz3.ab3@7850>   ADD.b #$10,-1(a0)
000253BA <AmiBlitz3.ab3@7851>   MOVE.b #$1,(a0)+
000253BC <AmiBlitz3.ab3@7852>   SUBQ.w #1,d3
000253BE <AmiBlitz3.ab3@7855>   MOVE.b (a4)+,(a0)+
000253C0 <AmiBlitz3.ab3@7856>   SUBQ.l #1,d3
000253C4 <AmiBlitz3.ab3@7857>   BNE.s 'lm2
000253C6 <AmiBlitz3.ab3@7858>   CLR.b (a0)+
000253CC <AmiBlitz3.ab3@7859>   MOVE.w linenumat,(a0)
000253D0 <AmiBlitz3.ab3@7860>   MOVEM.l (a7)+,d3/a4
000253D4 <AmiBlitz3.ab3@7861>   MOVEM.l (A7)+,D1-D2/A0
000253D6 <AmiBlitz3.ab3@7862> RTS
000253DC <AmiBlitz3.ab3@7865>   LEA lastgloballabel,a1
000253DE <AmiBlitz3.ab3@7868>   ADDQ.l #1,d1
000253E0 <AmiBlitz3.ab3@7869>   TST.b (a1)+
000253E4 <AmiBlitz3.ab3@7870>   BNE.s 'll11
000253E6 <AmiBlitz3.ab3@7871>   MOVEQ.l #$10+2,D0
000253E8 <AmiBlitz3.ab3@7872>   ADD.l d1,d0
000253EC <AmiBlitz3.ab3@7873>   MOVEM.l a4/d3,-(a7)
000253EE <AmiBlitz3.ab3@7874>   MOVE.l d1,d3
000253F0 <AmiBlitz3.ab3@7875>   MOVEQ.l #$01,D1
000253F6 <AmiBlitz3.ab3@7876>   MOVEA.l _execbase,A6
000253FC <AmiBlitz3.ab3@7877>   MOVE.l mempool2,a0
00025400 <AmiBlitz3.ab3@7878>   JSR _AllocPooled(a6)
00025402 <AmiBlitz3.ab3@7880>   TST.l d0
00025406 <AmiBlitz3.ab3@7881>   BEQ nomemory
00025408 <AmiBlitz3.ab3@7882>   MOVEA.l D0,A0
00025410 <AmiBlitz3.ab3@7885>   MOVE.w linenumat+2,$C(A0)
00025416 <AmiBlitz3.ab3@7886>   MOVE.l templabel,(A0)
0002541C <AmiBlitz3.ab3@7887>   MOVE.l A0,templabel
00025424 <AmiBlitz3.ab3@7888>   MOVE.l destpointer,$4(A0)
00025428 <AmiBlitz3.ab3@7889>   MOVE.l d2,$8(A0)
0002542C <AmiBlitz3.ab3@7890>   LEA $E(A0),A0
0002542E <AmiBlitz3.ab3@7891>   MOVE.b d3,(A0)+
00025434 <AmiBlitz3.ab3@7892>   ADD.b #$10,-1(a0)
00025438 <AmiBlitz3.ab3@7893>   MOVE.b #$1,(a0)+
0002543A <AmiBlitz3.ab3@7894>   SUBQ.w #1,d3
00025440 <AmiBlitz3.ab3@7895>   LEA lastgloballabel,a1
00025442 <AmiBlitz3.ab3@7898>   SUBQ.l #1,d3
00025444 <AmiBlitz3.ab3@7899>   MOVE.b (a1)+,(a0)+
00025448 <AmiBlitz3.ab3@7900>   BNE.s 'lm3
0002544A <AmiBlitz3.ab3@7901>   SUBQ.l #1,a0
0002544C <AmiBlitz3.ab3@7904>   MOVE.b (a4)+,(a0)+
0002544E <AmiBlitz3.ab3@7905>   SUBQ.l #1,d3
00025452 <AmiBlitz3.ab3@7906>   BNE.s 'lm1
00025454 <AmiBlitz3.ab3@7907>   CLR.b (a0)+
0002545A <AmiBlitz3.ab3@7908>   MOVE.w linenumat,(a0)
0002545E <AmiBlitz3.ab3@7909>   MOVEM.l (a7)+,d3/a4
00025462 <AmiBlitz3.ab3@7910>   MOVEM.l (A7)+,D1-D2/A0
00025464 <AmiBlitz3.ab3@7911> RTS
0002548E <AmiBlitz3.ab3@7915>   !basic
000254F0 <AmiBlitz3.ab3@7916>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025502 <AmiBlitz3.ab3@7917>   loop Delay_ 1
00025508 <AmiBlitz3.ab3@7918> Goto loop
0002550C <AmiBlitz3.ab3@7922>   MOVEM.l D0-D2/A0,-(A7)
00025510 <AmiBlitz3.ab3@7923>   MOVE.w $E(A0),-(A7)
00025514 <AmiBlitz3.ab3@7924>    BPL.w insasm__ok
00025516 <AmiBlitz3.ab3@7925>   CLR.w (A7)
00025518 <AmiBlitz3.ab3@7928>   MOVE.l A1,-(A7)
0002551A <AmiBlitz3.ab3@7929>   MOVEQ.l #$10+2,D0
00025520 <AmiBlitz3.ab3@7930>   ADD.w asmlen,D0
00025522 <AmiBlitz3.ab3@7931>   MOVE.w D0,D2
00025524 <AmiBlitz3.ab3@7932>   MOVEQ.l #$01,D1
0002552A <AmiBlitz3.ab3@7933>   MOVEA.l _execbase,A6
00025530 <AmiBlitz3.ab3@7934>   MOVE.l mempool2,a0
00025534 <AmiBlitz3.ab3@7935>   JSR _AllocPooled(a6)
00025536 <AmiBlitz3.ab3@7937>   MOVEA.l D0,A0
0002553E <AmiBlitz3.ab3@7940>   MOVE.w linenumat+2,$C(A0)
00025544 <AmiBlitz3.ab3@7941>   MOVE.l templabel,(A0)
0002554A <AmiBlitz3.ab3@7942>   MOVE.l A0,templabel
0002554E <AmiBlitz3.ab3@7943>   MOVE.l (A7),$4(A0)
00025552 <AmiBlitz3.ab3@7944>   MOVE.w d3,$8(A0)
00025558 <AmiBlitz3.ab3@7945>   MOVE.w $4(A7),$A(A0)
0002555C <AmiBlitz3.ab3@7946>   LEA $E(A0),A0
0002555E <AmiBlitz3.ab3@7947>   MOVE.b D2,(A0)+                                           ;length
00025564 <AmiBlitz3.ab3@7948>   MOVEA.l asmbuff,A1
00025566 <AmiBlitz3.ab3@7949>   ADDQ.w #1,A1
00025568 <AmiBlitz3.ab3@7950>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
0002556C <AmiBlitz3.ab3@7951>    BNE.w insasm__loop
0002556E <AmiBlitz3.ab3@7952>   MOVE.l (A1)+,(A0)+
00025574 <AmiBlitz3.ab3@7953>   MOVE.w linenumat,(a0)
00025578 <AmiBlitz3.ab3@7954> BRA.w insasm__loopdone
0002557A <AmiBlitz3.ab3@7957>    MOVE.b (A1)+,(A0)+
0002557E <AmiBlitz3.ab3@7958>    BNE.w insasm__loop
00025584 <AmiBlitz3.ab3@7959>    MOVE.w linenumat,(a0)
00025586 <AmiBlitz3.ab3@7962>   MOVEA.l (A7)+,A1
00025588 <AmiBlitz3.ab3@7963>   ADDQ.w #2,A7
0002558C <AmiBlitz3.ab3@7964>   MOVEM.l (A7)+,D0-D2/A0
0002558E <AmiBlitz3.ab3@7965> RTS
00025592 <AmiBlitz3.ab3@7969>   CMP.w #$5,D3
00025596 <AmiBlitz3.ab3@7970>    BCS.w makemode__done
0002559A <AmiBlitz3.ab3@7971>   CMP.w #$B,D3
0002559E <AmiBlitz3.ab3@7972>    BHI.w makemode__done2
000255A2 <AmiBlitz3.ab3@7973>    BEQ.w makemode__imm
000255A6 <AmiBlitz3.ab3@7974>    BSR.w insasm
000255AA <AmiBlitz3.ab3@7975>   CMP.w #$5,D3
000255AE <AmiBlitz3.ab3@7976>    BEQ.w makemode__word
000255B2 <AmiBlitz3.ab3@7977>   CMP.w #$6,D3
000255B6 <AmiBlitz3.ab3@7978>    BEQ.w makemode__dxi
000255BA <AmiBlitz3.ab3@7979>   CMP.w #$7,D3
000255BE <AmiBlitz3.ab3@7980>    BEQ.w makemode__word
000255C2 <AmiBlitz3.ab3@7981>   CMP.w #$8,D3
000255C6 <AmiBlitz3.ab3@7982>    BEQ.w makemode__long
000255CA <AmiBlitz3.ab3@7983>   CMP.w #$9,D3
000255CE <AmiBlitz3.ab3@7984>    BEQ.w makemode__word
000255D4 <AmiBlitz3.ab3@7988>   CMPA.l destbufferend,A1
000255D8 <AmiBlitz3.ab3@7989>    BCS.w makemode__ok7
000255DA <AmiBlitz3.ab3@7990>   ADDQ.w #2,A1
000255DC <AmiBlitz3.ab3@7991> RTS
000255DE <AmiBlitz3.ab3@7994>   MOVE.w D4,(A1)+
000255E0 <AmiBlitz3.ab3@7995> RTS
000255E8 <AmiBlitz3.ab3@7998>   CMPI.w #$8,asmsize
000255EC <AmiBlitz3.ab3@7999>    BCC.w makemode__immlong
000255EE <AmiBlitz3.ab3@8000>   MOVEQ.l #$10,D3
000255F2 <AmiBlitz3.ab3@8001>    BSR.w insasm
000255F4 <AmiBlitz3.ab3@8002>   MOVEQ.l #$0B,D3
000255F8 <AmiBlitz3.ab3@8003> BRA.w makemode__word
000255FC <AmiBlitz3.ab3@8006>   BSR.w insasm
000255FE <AmiBlitz3.ab3@8009>   ADDQ.w #2,A1
00025600 <AmiBlitz3.ab3@8012>   ADDQ.w #2,A1
00025602 <AmiBlitz3.ab3@8013> RTS
00025606 <AmiBlitz3.ab3@8016>   CMP.w #$F,D3
0002560A <AmiBlitz3.ab3@8017>    BNE.w makemode__done
00025610 <AmiBlitz3.ab3@8018>   CMPA.l destbufferend,A1
00025614 <AmiBlitz3.ab3@8019>    BCS.w makemode__ok3
00025616 <AmiBlitz3.ab3@8020>   ADDQ.w #2,A1
00025618 <AmiBlitz3.ab3@8021>   ADDQ.w #4,A7
0002561A <AmiBlitz3.ab3@8022> RTS
0002561C <AmiBlitz3.ab3@8025>   MOVE.w D2,(A1)+
0002561E <AmiBlitz3.ab3@8026>   ADDQ.w #4,A7
00025620 <AmiBlitz3.ab3@8029> RTS
00025624 <AmiBlitz3.ab3@8033>   BSR.w storeloc
0002562E <AmiBlitz3.ab3@8034>   MOVE.l linenumat,oldline
00025630 <AmiBlitz3.ab3@8035>   MOVEQ.l #$00,D1
00025634 <AmiBlitz3.ab3@8036>    BSR.w get1bytemain
00025638 <AmiBlitz3.ab3@8037>    BEQ.w JL_0_676E
0002563A <AmiBlitz3.ab3@8038>   MOVEQ.l #$00,D3
0002563E <AmiBlitz3.ab3@8039> BRA.w JL_0_6726
00025642 <AmiBlitz3.ab3@8042>    BSR.w get1bytemain
00025646 <AmiBlitz3.ab3@8043>    BNE.w JL_0_671C
00025648 <AmiBlitz3.ab3@8046>   TST.w D3
0002564C <AmiBlitz3.ab3@8047>    BNE.w brackets_                                         ;syntax error brackets
00025650 <AmiBlitz3.ab3@8048> BRA.w JL_0_676C
00025656 <AmiBlitz3.ab3@8051>    MOVE.w instringon,D4
0002565A <AmiBlitz3.ab3@8053>      BEQ JL_0_6726
0002565C <AmiBlitz3.ab3@8056>     MOVEQ #0,d0
0002565E <AmiBlitz3.ab3@8057>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025664 <AmiBlitz3.ab3@8058>      MOVE.w d0,lastchar
00025668 <AmiBlitz3.ab3@8059>      BEQ ready
0002566C <AmiBlitz3.ab3@8060>      CMP.b #$22,d0
00025670 <AmiBlitz3.ab3@8061>      BNE 'l1
00025676 <AmiBlitz3.ab3@8062>      NOT.w instringon
0002567A <AmiBlitz3.ab3@8063> BRA JL_0_670A
0002567E <AmiBlitz3.ab3@8066>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00025682 <AmiBlitz3.ab3@8067>            BNE 'l10
00025686 <AmiBlitz3.ab3@8068>            CMP.b #"@",(a5)
0002568A <AmiBlitz3.ab3@8069>            BNE 'l10
00025690 <AmiBlitz3.ab3@8072>            TST.w ininclude
00025694 <AmiBlitz3.ab3@8073>            BNE 'inc
0002569A <AmiBlitz3.ab3@8074>            MOVE.l sourceline3,a5
000256A0 <AmiBlitz3.ab3@8075>            CMP.l #0,a5
000256A4 <AmiBlitz3.ab3@8076>            BNE 'l11t
000256AA <AmiBlitz3.ab3@8077>            MOVEA.l sourceline,A5
000256AC <AmiBlitz3.ab3@8080>            MOVEA.l (A5),A5
000256B2 <AmiBlitz3.ab3@8081>            CMP.l #0,a5
000256B6 <AmiBlitz3.ab3@8082>            BEQ JL_0_676C
000256BC <AmiBlitz3.ab3@8083>            MOVE.l a5,sourceline3
000256C0 <AmiBlitz3.ab3@8084>            LEA $9(A5),A5
000256C4 <AmiBlitz3.ab3@8085> BRA 'l11
000256C6 <AmiBlitz3.ab3@8088>            ADDQ.l #1,a5
000256C8 <AmiBlitz3.ab3@8089>            TST.b (a5)
000256CC <AmiBlitz3.ab3@8090>            BNE 'inc
000256CE <AmiBlitz3.ab3@8094>            ADDQ.l #1,a5
000256D0 <AmiBlitz3.ab3@8095>            TST.b (a5)
000256D4 <AmiBlitz3.ab3@8096>            BEQ illeolerr
000256D6 <AmiBlitz3.ab3@8097>            MOVE.l a5,-(a7)
000256DA <AmiBlitz3.ab3@8100>       CMP.b #" ",(a5)+
000256DE <AmiBlitz3.ab3@8101>       BEQ 'l110
000256E4 <AmiBlitz3.ab3@8102>        CMP.b #";",-1(a5)
000256E6 <AmiBlitz3.ab3@8103>        MOVE.l (a7)+,a5
000256EA <AmiBlitz3.ab3@8104>        BEQ 'l111
000256EE <AmiBlitz3.ab3@8105> BRA JL_0_670A
000256F2 <AmiBlitz3.ab3@8108>    CMP.w #$29,D0
000256F6 <AmiBlitz3.ab3@8109>    BNE.w JL_0_673A
000256F8 <AmiBlitz3.ab3@8110>   TST.w D3
000256FC <AmiBlitz3.ab3@8111>    BEQ.w JL_0_676C
000256FE <AmiBlitz3.ab3@8114>   SUBQ.w #1,D3
00025702 <AmiBlitz3.ab3@8115> BRA.w JL_0_670A
00025706 <AmiBlitz3.ab3@8118>    CMP.w #$7D,D0
0002570A <AmiBlitz3.ab3@8119>    BEQ.w JL_0_6734
0002570E <AmiBlitz3.ab3@8120>   CMP.w #$28,D0
00025712 <AmiBlitz3.ab3@8121>    BNE.w JL_0_6750
00025714 <AmiBlitz3.ab3@8124>    ADDQ.w #1,D3
00025718 <AmiBlitz3.ab3@8125> BRA.w JL_0_670A
0002571C <AmiBlitz3.ab3@8128>   CMP.w #$7B,D0
00025720 <AmiBlitz3.ab3@8129>    BEQ.w JL_0_674A
00025724 <AmiBlitz3.ab3@8130>   CMP.w #$2C,D0
00025728 <AmiBlitz3.ab3@8131>    BNE.w JL_0_670A
0002572A <AmiBlitz3.ab3@8132>   TST.w D3
0002572E <AmiBlitz3.ab3@8133>    BNE.w JL_0_670A
00025730 <AmiBlitz3.ab3@8134>   ADDQ.w #1,D1
00025734 <AmiBlitz3.ab3@8135> BRA.w JL_0_670A
00025736 <AmiBlitz3.ab3@8138>   ADDQ.w #1,D1
0002573C <AmiBlitz3.ab3@8141>   CLR.l sourceline3
00025746 <AmiBlitz3.ab3@8142>   MOVE.l oldline,linenumat
0002574A <AmiBlitz3.ab3@8143> BRA.w resloc
00025750 <AmiBlitz3.ab3@8147>    CLR.w numreps
00025752 <AmiBlitz3.ab3@8148>   MOVE.w D1,D0
00025756 <AmiBlitz3.ab3@8149>   ANDI.w #$FF00,D0
0002575A <AmiBlitz3.ab3@8150>    BEQ.w fetchlibps__noreps
0002575C <AmiBlitz3.ab3@8151>   LSR.w #8,D0
0002575E <AmiBlitz3.ab3@8152>   LSR.w #4,D0
00025762 <AmiBlitz3.ab3@8153>    BEQ.w fetchlibps__skip
00025764 <AmiBlitz3.ab3@8154>   SUB.b D0,D1
0002576E <AmiBlitz3.ab3@8155>    MOVE.w regnum,regnumfunc
00025774 <AmiBlitz3.ab3@8156>    MOVE.b funcparloop,-(a7)
0002577C <AmiBlitz3.ab3@8157>    MOVE.b #0,funcparloop
00025782 <AmiBlitz3.ab3@8158>    MOVE.l leftsidetype,-(a7)
00025788 <AmiBlitz3.ab3@8159>    MOVE.l rightsidetype,-(a7)
0002578E <AmiBlitz3.ab3@8160>    CLR.l leftsidetype
00025794 <AmiBlitz3.ab3@8161>    CLR.l rightsidetype
0002579A <AmiBlitz3.ab3@8162>    MOVE.b blitzparloop,-(a7)
000257A2 <AmiBlitz3.ab3@8163>    MOVE.b #1,blitzparloop
000257A6 <AmiBlitz3.ab3@8164>    BSR.w fetchpees2
000257AC <AmiBlitz3.ab3@8165>    MOVE.b (a7)+,blitzparloop
000257B2 <AmiBlitz3.ab3@8166>    MOVE.l (a7)+,rightsidetype
000257B8 <AmiBlitz3.ab3@8167>    MOVE.l (a7)+,leftsidetype
000257BE <AmiBlitz3.ab3@8168>    MOVE.b (a7)+,funcparloop
000257C2 <AmiBlitz3.ab3@8169>   CMP.w #$2C,D0
000257C6 <AmiBlitz3.ab3@8170>    BNE.w syntaxerr
000257C8 <AmiBlitz3.ab3@8173>   MOVE.w D1,D2
000257CA <AmiBlitz3.ab3@8174>   LSR.w #8,D2
000257CE <AmiBlitz3.ab3@8175>   ANDI.w #$7,D2
000257D0 <AmiBlitz3.ab3@8178>    CMP.b D2,D1
000257D4 <AmiBlitz3.ab3@8179>    BCS.w fetchlibps__repsdone
000257D6 <AmiBlitz3.ab3@8180>   SUB.b D2,D1
000257DA <AmiBlitz3.ab3@8181>   MOVEM.l D2/A2,-(A7)
000257DC <AmiBlitz3.ab3@8182>   MOVE.w D2,D0
000257E2 <AmiBlitz3.ab3@8183>   MOVE.b funcparloop,-(a7)
000257EA <AmiBlitz3.ab3@8184>   MOVE.b #0,funcparloop
000257F0 <AmiBlitz3.ab3@8185>   MOVE.l leftsidetype,-(a7)
000257F6 <AmiBlitz3.ab3@8186>   MOVE.l rightsidetype,-(a7)
000257FC <AmiBlitz3.ab3@8187>   CLR.l leftsidetype
00025802 <AmiBlitz3.ab3@8188>   CLR.l rightsidetype
00025808 <AmiBlitz3.ab3@8189>   MOVE.b blitzparloop,-(a7)
00025810 <AmiBlitz3.ab3@8190>   MOVE.b #1,blitzparloop
00025814 <AmiBlitz3.ab3@8191>   BSR.w fetchpees4
0002581A <AmiBlitz3.ab3@8192>   MOVE.b (a7)+,blitzparloop
00025820 <AmiBlitz3.ab3@8193>   MOVE.l (a7)+,rightsidetype
00025826 <AmiBlitz3.ab3@8194>   MOVE.l (a7)+,leftsidetype
0002582C <AmiBlitz3.ab3@8195>   MOVE.b (a7)+,funcparloop
00025830 <AmiBlitz3.ab3@8196>   MOVEM.l (A7)+,D2/A2
00025836 <AmiBlitz3.ab3@8197>   ADDQ.w #1,numreps
0002583A <AmiBlitz3.ab3@8198> BRA.w fetchlibps__rloop
00025840 <AmiBlitz3.ab3@8201>    MOVE.w numreps,D3
00025844 <AmiBlitz3.ab3@8202>    BEQ.w syntaxerr
00025846 <AmiBlitz3.ab3@8203>   ADDA.w D2,A2
0002584A <AmiBlitz3.ab3@8204>   ANDI.w #$FF,D1
0002584E <AmiBlitz3.ab3@8205>    BEQ.w fetchlibps__done
00025852 <AmiBlitz3.ab3@8206>   CMP.w #$2C,D0
00025856 <AmiBlitz3.ab3@8207>    BNE.w syntaxerr
00025858 <AmiBlitz3.ab3@8210>    MOVE.w D1,D0
0002585C <AmiBlitz3.ab3@8211>    BNE.w fetchpees2b
0002585E <AmiBlitz3.ab3@8214> RTS
00025864 <AmiBlitz3.ab3@8217>   MOVE.b funcparloop,-(a7)
0002586A <AmiBlitz3.ab3@8218>   MOVE.l leftsidetype,-(a7)
00025870 <AmiBlitz3.ab3@8219>   MOVE.l rightsidetype,-(a7)
00025876 <AmiBlitz3.ab3@8220>   CLR.l leftsidetype
0002587C <AmiBlitz3.ab3@8221>   CLR.l rightsidetype
00025884 <AmiBlitz3.ab3@8222>   MOVE.b #0,funcparloop
0002588A <AmiBlitz3.ab3@8223>   MOVE.b blitzparloop,-(a7)
00025892 <AmiBlitz3.ab3@8224>   MOVE.b #1,blitzparloop
00025896 <AmiBlitz3.ab3@8225>   BSR.w fetchpees2
0002589C <AmiBlitz3.ab3@8226>   MOVE.b (a7)+,blitzparloop
000258A2 <AmiBlitz3.ab3@8227>   MOVE.l (a7)+,rightsidetype
000258A8 <AmiBlitz3.ab3@8228>   MOVE.l (a7)+,leftsidetype
000258AE <AmiBlitz3.ab3@8229>   MOVE.b (a7)+,funcparloop
000258B0 <AmiBlitz3.ab3@8230> RTS
000258B4 <AmiBlitz3.ab3@8234> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
000258B6 <AmiBlitz3.ab3@8237> partostack:  Ds.w 1                                        ;pmode org source
000258B8 <AmiBlitz3.ab3@8241>   MOVEQ.l #$01,D2
000258BC <AmiBlitz3.ab3@8242> BRA.w fetchpees3
000258BE <AmiBlitz3.ab3@8245>   MOVEQ.l #$00,D2
000258C2 <AmiBlitz3.ab3@8248>   ANDI.w #$F,D0
000258C8 <AmiBlitz3.ab3@8256>   CLR.w parnum
000258CA <AmiBlitz3.ab3@8257>   MOVE.w D1,-(A7)
000258CE <AmiBlitz3.ab3@8258>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
000258D4 <AmiBlitz3.ab3@8259>   MOVE.w D2,partostack
000258D6 <AmiBlitz3.ab3@8260>   MOVE.w D0,-(A7)
000258DA <AmiBlitz3.ab3@8261>   CMP.w #"@@",(a5)                                         ;was l15
000258DE <AmiBlitz3.ab3@8262>   BNE fetchpees__loop
000258E4 <AmiBlitz3.ab3@8263>   TST.w ininclude                                          ;merge macrolines
000258E8 <AmiBlitz3.ab3@8264>   BNE errorjoin
000258EE <AmiBlitz3.ab3@8265>        MOVEA.l sourceline,A5
000258F0 <AmiBlitz3.ab3@8268>            MOVEA.l (A5),A5
000258F6 <AmiBlitz3.ab3@8269>            MOVE.l a5,sourceline
000258FA <AmiBlitz3.ab3@8270>            LEA $9(A5),A5
00025900 <AmiBlitz3.ab3@8271>            ADDQ.l #1,linenumat
00025902 <AmiBlitz3.ab3@8275>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00025906 <AmiBlitz3.ab3@8276>    BNE.w fetchpees__skip0
0002590C <AmiBlitz3.ab3@8277>   MOVE.w userp,D2                                          ;user selected type
0002590E <AmiBlitz3.ab3@8279>    MOVE.l A2,-(A7)
00025914 <AmiBlitz3.ab3@8280>    ADDQ.w #1,parnum
0002591A <AmiBlitz3.ab3@8281>    TST.b funccall
0002591E <AmiBlitz3.ab3@8282>    BEQ fetchpees__skip0_l1
00025926 <AmiBlitz3.ab3@8283>    CMP.w #6,parnum
0002592A <AmiBlitz3.ab3@8284>    BLE fetchpees__skip0_l1
0002592E <AmiBlitz3.ab3@8285>    CMP.w #7,d2
00025934 <AmiBlitz3.ab3@8291>    TST.b fpu
00025938 <AmiBlitz3.ab3@8292>    BEQ fetchpees__skip0_old
0002593E <AmiBlitz3.ab3@8293>    TST.w regnumfunc
00025942 <AmiBlitz3.ab3@8294>    BEQ fetchpees__skip0_old
00025948 <AmiBlitz3.ab3@8295>    CMP.w #$48e7,-4(a4)
0002594C <AmiBlitz3.ab3@8296>    BNE fetchpees__skip0_old
0002594E <AmiBlitz3.ab3@8297>    MOVEQ #0,d1
00025954 <AmiBlitz3.ab3@8298>    MOVE.w regnum,d1
0002595A <AmiBlitz3.ab3@8299>    CMP regnumfunc,d1                                       ;fpu reg function save
0002595E <AmiBlitz3.ab3@8300>    BGE fetchpees__skip0_old
00025960 <AmiBlitz3.ab3@8301>    ASL.w #7,d1
00025962 <AmiBlitz3.ab3@8302>    MOVE.l d0,-(a7)
00025968 <AmiBlitz3.ab3@8303>    MOVE.w regnumfunc,d0
0002596E <AmiBlitz3.ab3@8304>    CLR.w regmask
00025974 <AmiBlitz3.ab3@8306>    BSET d0,regmask
00025976 <AmiBlitz3.ab3@8307>    SUBQ #1,d0
0002597A <AmiBlitz3.ab3@8308>    BNE fetchpees__skip0_loop
0002597C <AmiBlitz3.ab3@8309>     MOVEQ #0,d0
00025982 <AmiBlitz3.ab3@8312>       BTST d0,regmask
00025986 <AmiBlitz3.ab3@8313>       BEQ fetchpees__skip0_noa7
00025988 <AmiBlitz3.ab3@8314>       MOVEQ #0,d1
0002598A <AmiBlitz3.ab3@8315>       MOVE.w d0,d1
0002598C <AmiBlitz3.ab3@8316>       SUBQ.w #1,d1
0002598E <AmiBlitz3.ab3@8317>       ASL #7,d1
00025994 <AmiBlitz3.ab3@8318>       OR.l #$f2277400,d1                                   ;fmove.d
00025998 <AmiBlitz3.ab3@8320>       BSR writelong
0002599E <AmiBlitz3.ab3@8322>       ADDQ.l #2,stacktrack
000259A4 <AmiBlitz3.ab3@8323>       MOVE.l stacktrack,d1
000259AA <AmiBlitz3.ab3@8324>       CMP.l #180,d1
000259AE <AmiBlitz3.ab3@8325>       BGT conmemerr                                        ;formel too complex
000259B0 <AmiBlitz3.ab3@8326>       MOVE.l a0,-(a7)
000259B6 <AmiBlitz3.ab3@8327>       LEA fpustackbase,a0
000259BE <AmiBlitz3.ab3@8328>       MOVE.w regmask,0(a0,d1)
000259C0 <AmiBlitz3.ab3@8329>       MOVE.l (a7)+,a0
000259C2 <AmiBlitz3.ab3@8332>       ADDQ.w #1,d0
000259C8 <AmiBlitz3.ab3@8333>       CMP.w regnumfunc,d0
000259CC <AmiBlitz3.ab3@8334>       BLE fetchpees__skip0_loop2
000259CE <AmiBlitz3.ab3@8337>       MOVE.l (a7)+,d0
000259D4 <AmiBlitz3.ab3@8340>      MOVE.l currentfunccall,-(a7)
000259DA <AmiBlitz3.ab3@8341>      MOVE.w parnum,-(a7)
000259E0 <AmiBlitz3.ab3@8342>      TST.l rightsidetype
000259E4 <AmiBlitz3.ab3@8343>      BSR.w JL_0_6836
000259EA <AmiBlitz3.ab3@8344>      MOVE.w (a7)+,parnum
000259F0 <AmiBlitz3.ab3@8346>    MOVE.l (a7)+,currentfunccall
000259F6 <AmiBlitz3.ab3@8348>    TST.b typecheck                            ;typecheck for function call
000259FA <AmiBlitz3.ab3@8349>    BEQ 'notypecheck
00025A00 <AmiBlitz3.ab3@8350>    TST.b notypecheck
00025A04 <AmiBlitz3.ab3@8351>    BNE 'notypecheck
00025A0A <AmiBlitz3.ab3@8352>    TST.b blitzparloop
00025A0E <AmiBlitz3.ab3@8353>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00025A18 <AmiBlitz3.ab3@8354>    CMP.l #0,currentfunccall
00025A1C <AmiBlitz3.ab3@8355>    BEQ 'isblitzlibcall
00025A20 <AmiBlitz3.ab3@8356>    MOVEM.l a0/a1,-(a7)
00025A26 <AmiBlitz3.ab3@8357>    MOVE.l currentfunccall,a0
00025A2C <AmiBlitz3.ab3@8358>    MOVE.w parnum,d1
00025A32 <AmiBlitz3.ab3@8359>    TST.b isconstantvalue
00025A36 <AmiBlitz3.ab3@8360>    BEQ 'noconstant
00025A40 <AmiBlitz3.ab3@8361>    CMP.l #0,lastconstantvalue
00025A44 <AmiBlitz3.ab3@8362>    BEQ 'isnull
00025A48 <AmiBlitz3.ab3@8364>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00025A4E <AmiBlitz3.ab3@8365>    CMP.l #0,a0
00025A52 <AmiBlitz3.ab3@8366>    BEQ 'notype
00025A5A <AmiBlitz3.ab3@8367>    CMP.l #$100,4(a0)
00025A5E <AmiBlitz3.ab3@8368>    BLE 'notype
00025A64 <AmiBlitz3.ab3@8369>    MOVE.l lasttoken,d1
00025A68 <AmiBlitz3.ab3@8370>    CMP.w #$b581,d1                   ; ok, when token for null
00025A6C <AmiBlitz3.ab3@8371>    BEQ 'isnull
00025A72 <AmiBlitz3.ab3@8372>    TST.l typetocast
00025A76 <AmiBlitz3.ab3@8373>    BEQ 'nocast
00025A7C <AmiBlitz3.ab3@8374>    MOVE.l typetocast,a1
00025A80 <AmiBlitz3.ab3@8375>    BRA 'typecheck
00025A86 <AmiBlitz3.ab3@8377>    MOVE.l rightsidetype,a1
00025A8C <AmiBlitz3.ab3@8378>    CMP.l #0,a1
00025A90 <AmiBlitz3.ab3@8379>    BEQ 'notype
00025A98 <AmiBlitz3.ab3@8380> 'typecheck   CMP.l #$100,4(a1)
00025A9A <AmiBlitz3.ab3@8382>    CMP.l a0,a1
00025A9E <AmiBlitz3.ab3@8383>    BEQ 'ok
00025AA6 <AmiBlitz3.ab3@8385>    CMP.l #$100,4(a1)                 ; is a type here
00025AAA <AmiBlitz3.ab3@8386>    BLE 'error
00025AAE <AmiBlitz3.ab3@8387>    MOVE.l 4(a1),a1                   ; load the address of type.
00025AB2 <AmiBlitz3.ab3@8388>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00025AB6 <AmiBlitz3.ab3@8389>    BEQ 'ok
00025ABC <AmiBlitz3.ab3@8390> 'error: JMP   error_convert_types    ; for syntax 4
00025AC2 <AmiBlitz3.ab3@8394>    CLR.l typetocast
00025AC6 <AmiBlitz3.ab3@8395>    MOVEM.l (a7)+,a0/a1
00025ACC <AmiBlitz3.ab3@8399>    CLR.l lastfunction
00025AD2 <AmiBlitz3.ab3@8400>    TST.b fpu
00025AD6 <AmiBlitz3.ab3@8401>    BEQ fetchpees__skip0_noprint
00025AD8 <AmiBlitz3.ab3@8402>   MOVE.l (a7),a2
00025ADA <AmiBlitz3.ab3@8403>   ADDQ.l #1,a2
00025ADE <AmiBlitz3.ab3@8404>    CMP.b #5,d2
00025AE2 <AmiBlitz3.ab3@8405>   BNE fetchpees__skip0_noprint
00025AE8 <AmiBlitz3.ab3@8406>   CMP.b #$5d,24(a2)
00025AEC <AmiBlitz3.ab3@8407>   BNE fetchpees__skip0_noprint
00025AF2 <AmiBlitz3.ab3@8408>   CMP.b #$81,25(a2)
00025AF6 <AmiBlitz3.ab3@8409>   BLT fetchpees__skip0_noprint
00025AFC <AmiBlitz3.ab3@8410>   CMP.b #$86,25(a2)
00025B00 <AmiBlitz3.ab3@8411>   BEQ fetchpees__skip0_ok
00025B06 <AmiBlitz3.ab3@8412>   CMP.b #$87,25(a2)
00025B0A <AmiBlitz3.ab3@8413>   BEQ fetchpees__skip0_ok
00025B10 <AmiBlitz3.ab3@8414>   CMP.b #$88,25(a2)
00025B14 <AmiBlitz3.ab3@8415>   BEQ fetchpees__skip0_ok
00025B1A <AmiBlitz3.ab3@8416>   CMP.b #$83,25(a2)
00025B1E <AmiBlitz3.ab3@8417>   BGT fetchpees__skip0_noprint
00025B24 <AmiBlitz3.ab3@8420>   MOVE.l destpointer,a4
00025B2A <AmiBlitz3.ab3@8421>   CMP.w #$2f00,-2(a4)
00025B2E <AmiBlitz3.ab3@8422>   BNE fetchpees__skip0_noprint
00025B34 <AmiBlitz3.ab3@8423>   SUBQ.l #2,destpointer
00025B3A <AmiBlitz3.ab3@8425>   MOVE.l #$f2277400,d1
00025B3E <AmiBlitz3.ab3@8426>   BSR writelong                                            ;fmove.d fp0,-(a7)
00025B44 <AmiBlitz3.ab3@8427>   ADDQ #4,a2offset
00025B4A <AmiBlitz3.ab3@8445>   CLR.b optistring
00025B4C <AmiBlitz3.ab3@8446>   MOVEA.l (A7)+,A2
00025B50 <AmiBlitz3.ab3@8447>    CMP.w #"@",d0
00025B54 <AmiBlitz3.ab3@8448>   BNE fetchpees__skip0_l10
00025B58 <AmiBlitz3.ab3@8449>    CMP.b #"@",(a5)
00025B5C <AmiBlitz3.ab3@8450>   BNE fetchpees__skip0_l10
00025B62 <AmiBlitz3.ab3@8451>   TST.w ininclude
00025B66 <AmiBlitz3.ab3@8452>   BNE errorjoin
00025B6C <AmiBlitz3.ab3@8453>   MOVEA.l sourceline,A5
00025B6E <AmiBlitz3.ab3@8454>            MOVEA.l (A5),A5
00025B74 <AmiBlitz3.ab3@8455>            MOVE.l a5,sourceline
00025B7A <AmiBlitz3.ab3@8456>            ADDQ.l #1,linenumat
00025B7E <AmiBlitz3.ab3@8457>            LEA $9(A5),A5
00025B80 <AmiBlitz3.ab3@8458>            MOVEQ #0,d0
00025B84 <AmiBlitz3.ab3@8459>            BSR get1bytemain
00025B88 <AmiBlitz3.ab3@8462>    CMP.b #32,(a5)+ ;for space after a ,
00025B8C <AmiBlitz3.ab3@8463>    BEQ fetchpees__skip0_l10:
00025B8E <AmiBlitz3.ab3@8464>    SUBQ.l #1,a5
00025B92 <AmiBlitz3.ab3@8466>    CMP.w #"@@",(a5)                                        ;if merge
00025B96 <AmiBlitz3.ab3@8467>    BNE fetchpees__skip0_l15
00025B9A <AmiBlitz3.ab3@8468>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00025BA0 <AmiBlitz3.ab3@8469>    JSR mergeline
00025BA4 <AmiBlitz3.ab3@8470>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00025BA6 <AmiBlitz3.ab3@8490>       SUBQ.w #1,(A7)
00025BAA <AmiBlitz3.ab3@8491>    BEQ.w fetchpees__done
00025BAE <AmiBlitz3.ab3@8493>     CMP.w #$2C,D0
00025BB2 <AmiBlitz3.ab3@8495>    BNE overloadfunc
00025BB6 <AmiBlitz3.ab3@8496> BRA.w fetchpees__loop
00025BB8 <AmiBlitz3.ab3@8499>   ADDQ.w #2,A7
00025BBE <AmiBlitz3.ab3@8500>   MOVE.w (A7)+,partostack
00025BC0 <AmiBlitz3.ab3@8501>   MOVE.w (A7)+,D1
00025BC6 <AmiBlitz3.ab3@8502>   CLR.b isconstantvalue
00025BD0 <AmiBlitz3.ab3@8503>   MOVE.l currentfunccall,lastfunction
00025BD6 <AmiBlitz3.ab3@8504>   CLR.b funccall
00025BDC <AmiBlitz3.ab3@8505>   CLR.l currentfunccall
00025BDE <AmiBlitz3.ab3@8506> RTS
00025BE4 <AmiBlitz3.ab3@8510>   CLR.b funccall
00025BEA <AmiBlitz3.ab3@8511>   MOVE.w regnum,d1
00025BF0 <AmiBlitz3.ab3@8512>   MOVE.l currentfunccall,a4
00025BF4 <AmiBlitz3.ab3@8513>   CMP.b $20(a4),d1                                         ;increase if more pars
00025BF8 <AmiBlitz3.ab3@8514>   BLT notparerr
00025BFA <AmiBlitz3.ab3@8517>   MOVE.b (a2)+,d2
00025C02 <AmiBlitz3.ab3@8518>   ADD.w #1,parnum
00025C08 <AmiBlitz3.ab3@8519>   TST.b fpu
00025C0C <AmiBlitz3.ab3@8520>   BEQ 'nofpu
00025C10 <AmiBlitz3.ab3@8521>   CMP.b #5,d2
00025C14 <AmiBlitz3.ab3@8522>   BNE 'nofpu
00025C16 <AmiBlitz3.ab3@8523>   MOVEQ #0,d1
00025C1C <AmiBlitz3.ab3@8524>   MOVE.w regnum,d1
00025C24 <AmiBlitz3.ab3@8525>   CMP.w #6,regnum
00025C28 <AmiBlitz3.ab3@8526>   BLT 'nostack2
00025C2C <AmiBlitz3.ab3@8531>   MOVE.w #$2c3c,d1
00025C30 <AmiBlitz3.ab3@8532>   BSR writeword
00025C36 <AmiBlitz3.ab3@8533>   MOVE.l #$bf800000,d1
00025C3A <AmiBlitz3.ab3@8534>   BSR writelong
00025C3E <AmiBlitz3.ab3@8535>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025C44 <AmiBlitz3.ab3@8536>   ADD.w parnum,d1
00025C4A <AmiBlitz3.ab3@8537>   JSR Atokejsr
00025C50 <AmiBlitz3.ab3@8538>   TST.w dontwrite
00025C54 <AmiBlitz3.ab3@8539>   BNE 'l1
00025C5A <AmiBlitz3.ab3@8540>   MOVE.l data1start,d1
00025C60 <AmiBlitz3.ab3@8541>   MOVE.l destpointer,a4
00025C64 <AmiBlitz3.ab3@8542>   ADD.l d1,-4(a4)
00025C6A <AmiBlitz3.ab3@8543>   MOVE.l destpointer,d1
00025C6C <AmiBlitz3.ab3@8544>   SUBQ.l #4,d1
00025C72 <AmiBlitz3.ab3@8545>   SUB.l destbufferstart,d1
00025C74 <AmiBlitz3.ab3@8546>   MOVE.l d2,-(a7)
00025C76 <AmiBlitz3.ab3@8547>   MOVE.l d1,d2
00025C7C <AmiBlitz3.ab3@8548>   JSR addhunkoffset
00025C7E <AmiBlitz3.ab3@8549>   MOVE.l (a7)+,d2
00025C82 <AmiBlitz3.ab3@8550> BRA 'l1
00025C84 <AmiBlitz3.ab3@8553>   ASL.l #7,d1
00025C8A <AmiBlitz3.ab3@8554>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00025C8E <AmiBlitz3.ab3@8555>   BSR writelong
00025C90 <AmiBlitz3.ab3@8556>   MOVEQ #-1,d1                                             ;-1
00025C94 <AmiBlitz3.ab3@8557>   BSR writeword
00025C98 <AmiBlitz3.ab3@8558> BRA 'l1
00025C9E <AmiBlitz3.ab3@8561>   MOVE.w regnum,d1
00025CA6 <AmiBlitz3.ab3@8562>   CMP.w #6,regnum
00025CAA <AmiBlitz3.ab3@8563>   BLT 'nostack
00025CAE <AmiBlitz3.ab3@8568>   CMP.b #2,d2
00025CB2 <AmiBlitz3.ab3@8569>   BGT 'nw
00025CB6 <AmiBlitz3.ab3@8570> BRA 'nos
00025CBA <AmiBlitz3.ab3@8579>   CMP.w #7,d2
00025CBE <AmiBlitz3.ab3@8580>   BNE 'nos
00025CC4 <AmiBlitz3.ab3@8581>   ADDQ #4,a2offset
00025CCA <AmiBlitz3.ab3@8583>     MOVE.l #$48780000,d1
00025CCE <AmiBlitz3.ab3@8584>     BSR writelong
00025CD4 <AmiBlitz3.ab3@8585>     ADDQ.w #4,a2offset
00025CD8 <AmiBlitz3.ab3@8586>     MOVE.w #$2f3c,d1
00025CDC <AmiBlitz3.ab3@8587>     BSR writeword
00025CE2 <AmiBlitz3.ab3@8588>     MOVE.l #-1,d1
00025CE6 <AmiBlitz3.ab3@8589>     BSR writelong
00025CEA <AmiBlitz3.ab3@8590>   BRA 'l1
00025CEE <AmiBlitz3.ab3@8594>   CMP.b #4,d2
00025CF2 <AmiBlitz3.ab3@8595>       BNE 'noq
00025CF6 <AmiBlitz3.ab3@8596>       MOVE.w #$2c3c,d1
00025CFA <AmiBlitz3.ab3@8597>       BSR writeword
00025D00 <AmiBlitz3.ab3@8598>       MOVE.l #$ffff0000,d1
00025D04 <AmiBlitz3.ab3@8599>       BSR writelong
00025D08 <AmiBlitz3.ab3@8600> BRA 'noq2
00025D0C <AmiBlitz3.ab3@8603>      CMP.b #5,d2
00025D10 <AmiBlitz3.ab3@8604>      BNE 'nof
00025D14 <AmiBlitz3.ab3@8605>       MOVE.w #$2c3c,d1
00025D18 <AmiBlitz3.ab3@8606>       BSR writeword
00025D1E <AmiBlitz3.ab3@8607>       MOVE.l #$800000c1,d1
00025D22 <AmiBlitz3.ab3@8608>       BSR writelong
00025D26 <AmiBlitz3.ab3@8609> BRA 'noq2
00025D2A <AmiBlitz3.ab3@8612>   MOVE.w #$7cff,d1
00025D2E <AmiBlitz3.ab3@8613>   BSR writeword
00025D32 <AmiBlitz3.ab3@8616>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025D38 <AmiBlitz3.ab3@8617>   ADD.w parnum,d1
00025D3E <AmiBlitz3.ab3@8618>   JSR Atokejsr
00025D44 <AmiBlitz3.ab3@8619>    TST.w dontwrite
00025D48 <AmiBlitz3.ab3@8620>    BNE 'l1
00025D4E <AmiBlitz3.ab3@8621>    MOVE.l data1start,d1
00025D54 <AmiBlitz3.ab3@8622>    MOVE.l destpointer,a4
00025D58 <AmiBlitz3.ab3@8623>    ADD.l d1,-4(a4)
00025D5E <AmiBlitz3.ab3@8624>    MOVE.l destpointer,d1
00025D60 <AmiBlitz3.ab3@8625>    SUBQ.l #4,d1
00025D66 <AmiBlitz3.ab3@8626>    SUB.l destbufferstart,d1
00025D68 <AmiBlitz3.ab3@8627>    MOVE.l d2,-(a7)
00025D6A <AmiBlitz3.ab3@8628>    MOVE.l d1,d2
00025D70 <AmiBlitz3.ab3@8629>    JSR addhunkoffset
00025D72 <AmiBlitz3.ab3@8630>    MOVE.l (a7)+,d2
00025D76 <AmiBlitz3.ab3@8631> BRA 'l1
00025D78 <AmiBlitz3.ab3@8634>   ASL.l #8,d1
00025D7A <AmiBlitz3.ab3@8635>   ASL.l #1,d1
00025D80 <AmiBlitz3.ab3@8636>   OR.l #$203c,d1                                           ;-1
00025D84 <AmiBlitz3.ab3@8637>   BSR writeword
00025D8A <AmiBlitz3.ab3@8638>   MOVE.l #-1,d1
00025D8E <AmiBlitz3.ab3@8639>   CMP.b #4,d2
00025D92 <AmiBlitz3.ab3@8640>   BNE 'nq1
00025D98 <AmiBlitz3.ab3@8641>   MOVE.l #$ffff0000,d1
00025D9C <AmiBlitz3.ab3@8644>   CMP.b #5,d2
00025DA0 <AmiBlitz3.ab3@8645>   BNE 'nof2
00025DA6 <AmiBlitz3.ab3@8646>   TST.b fpu
00025DAA <AmiBlitz3.ab3@8647>   BNE 'nof2
00025DB0 <AmiBlitz3.ab3@8648>   MOVE.l #$800000c1,d1
00025DB4 <AmiBlitz3.ab3@8651>    BSR writelong
00025DB8 <AmiBlitz3.ab3@8652>    CMP.b #7,d2
00025DBC <AmiBlitz3.ab3@8653>    BNE 'l1
00025DC2 <AmiBlitz3.ab3@8655>      MOVE.l #$48780000,d1
00025DC6 <AmiBlitz3.ab3@8656>      BSR writelong
00025DCC <AmiBlitz3.ab3@8658>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00025DD2 <AmiBlitz3.ab3@8659>    MOVE.l #$594f,d1                                        ; subq #4,a7
00025DD6 <AmiBlitz3.ab3@8660>    BSR writeword
00025DD8 <AmiBlitz3.ab3@8663>    SUBQ.w #1,(A7)
00025DDC <AmiBlitz3.ab3@8664>    BEQ.w fetchpees__done
00025DE2 <AmiBlitz3.ab3@8665>    ADDQ.w #1,regnum
00025DE6 <AmiBlitz3.ab3@8666> BRA 'ol2
00025DE8 <AmiBlitz3.ab3@8669>    MOVE.w D2,D1
00025DEC <AmiBlitz3.ab3@8670>    ANDI.w #$40,D1
00025DF2 <AmiBlitz3.ab3@8671>    MOVE.b D1,partostack
00025DF4 <AmiBlitz3.ab3@8672>    TST.b D2
00025DF8 <AmiBlitz3.ab3@8673>     BMI.w handlevara
00025DFC <AmiBlitz3.ab3@8674>    BTST #$5,D2
00025E00 <AmiBlitz3.ab3@8675>     BNE.w handlearr
00025E06 <AmiBlitz3.ab3@8676>     MOVE.w regnumstore,-(a7)
00025E0C <AmiBlitz3.ab3@8677>     MOVE.w tempregnum,-(a7)
00025E12 <AmiBlitz3.ab3@8678>     MOVE.w parnum,-(a7)
00025E16 <AmiBlitz3.ab3@8679>     BSR.w getap                                        ;recursive entry
00025E1C <AmiBlitz3.ab3@8680>     MOVE.w (a7)+,parnum
00025E22 <AmiBlitz3.ab3@8681>     MOVE.w (a7)+,tempregnum
00025E28 <AmiBlitz3.ab3@8682>     MOVE.w (a7)+,regnumstore
00025E2C <AmiBlitz3.ab3@8685>     MOVE.w partostack(PC),D1
00025E30 <AmiBlitz3.ab3@8686>     BEQ.w JL_0_6886
00025E36 <AmiBlitz3.ab3@8689>    ADDQ.w #4,a2offset
00025E3C <AmiBlitz3.ab3@8692>    MOVE.w pushdn,D1
00025E42 <AmiBlitz3.ab3@8693>    OR.w regnum,D1
00025E46 <AmiBlitz3.ab3@8694>    CMP.w #$3,D2
00025E4A <AmiBlitz3.ab3@8695>     BCC.w JL_0_6880
00025E50 <AmiBlitz3.ab3@8696>    SUBQ.w #2,a2offset
00025E54 <AmiBlitz3.ab3@8697>    ORI.w #$1000,D1
00025E58 <AmiBlitz3.ab3@8698>    BSR.w writeword
00025E5A <AmiBlitz3.ab3@8699> RTS
00025E5E <AmiBlitz3.ab3@8702>   CMP.b #7,d2
00025E62 <AmiBlitz3.ab3@8703>    BNE 'l10
00025E6A <AmiBlitz3.ab3@8704>    CMP.b #2,optistring
00025E70 <AmiBlitz3.ab3@8708>   TST.b iee
00025E74 <AmiBlitz3.ab3@8709>   BEQ 'old
00025E78 <AmiBlitz3.ab3@8710>   CMP.b #5,d2
00025E7C <AmiBlitz3.ab3@8711>   BNE 'old
00025E80 <AmiBlitz3.ab3@8714>   BSR.w writeword                                          ;write val to stack
00025E82 <AmiBlitz3.ab3@8715> RTS
00025E88 <AmiBlitz3.ab3@8718>   SUBQ.w #4,a2offset
00025E8A <AmiBlitz3.ab3@8719> RTS
00025E90 <AmiBlitz3.ab3@8722>   ADDQ.w #1,regnum
00025E92 <AmiBlitz3.ab3@8723> RTS
00025E94 <AmiBlitz3.ab3@8727>   MOVEQ.l #$03,D2
00025E98 <AmiBlitz3.ab3@8728> BRA.w JL_0_6854
00025E9C <AmiBlitz3.ab3@8732>   ANDI.w #$7,D2
00025E9E <AmiBlitz3.ab3@8733>   MOVE.w D2,-(A7)
00025EA2 <AmiBlitz3.ab3@8734>    BSR.w JL_0_A916
00025EA6 <AmiBlitz3.ab3@8735>   CMP.b #$7,D2                                             ;ignore pnt to $
00025EAA <AmiBlitz3.ab3@8736>    BEQ.w JL_0_68C0
00025EAE <AmiBlitz3.ab3@8737>   BTST #$E,D2
00025EB2 <AmiBlitz3.ab3@8738>    BEQ.w JL_0_68B6
00025EB6 <AmiBlitz3.ab3@8739>   MOVE.b #$3,D2                                            ;pointer to long
00025EBA <AmiBlitz3.ab3@8740> BRA.w JL_0_68C0
00025EBC <AmiBlitz3.ab3@8743>    TST.b D2
00025EC0 <AmiBlitz3.ab3@8744>    BNE.w JL_0_68C0
00025EC4 <AmiBlitz3.ab3@8745>   MOVE.b #$3,D2
00025EC6 <AmiBlitz3.ab3@8748>   MOVE.w (A7)+,D3
00025EC8 <AmiBlitz3.ab3@8749>   TST.b D3
00025ECC <AmiBlitz3.ab3@8750>    BEQ.w JL_0_68D2
00025ECE <AmiBlitz3.ab3@8751>   CMP.b D2,D3
00025ED2 <AmiBlitz3.ab3@8752>    BEQ.w putalp
00025ED6 <AmiBlitz3.ab3@8753> BRA.w mismatcherr
00025EDC <AmiBlitz3.ab3@8756>   ADDQ.w #2,a2offset
00025EE0 <AmiBlitz3.ab3@8757>   MOVE.w ptype(PC),D1
00025EE4 <AmiBlitz3.ab3@8758>    BSR.w writeword
00025EE6 <AmiBlitz3.ab3@8759>   MOVEQ.l #$00,D1
00025EE8 <AmiBlitz3.ab3@8760>   MOVE.b D2,D1
00025EEC <AmiBlitz3.ab3@8761>    BSR.w writeword
00025EF0 <AmiBlitz3.ab3@8762> BRA.w putalp
00025EF2 <AmiBlitz3.ab3@8765>    MOVE.w D2,-(A7)
00025EF6 <AmiBlitz3.ab3@8766>    BSR.w JL_0_694E
00025EFC <AmiBlitz3.ab3@8767>   BTST #$4,$1(A7)
00025F00 <AmiBlitz3.ab3@8768>    BEQ.w JL_0_6900
00025F04 <AmiBlitz3.ab3@8769>    BSR.w JL_0_699A
00025F0A <AmiBlitz3.ab3@8772>    BTST #$3,$1(A7)
00025F0E <AmiBlitz3.ab3@8773>    BEQ.w JL_0_690E
00025F12 <AmiBlitz3.ab3@8774>    BSR.w sendtype
00025F14 <AmiBlitz3.ab3@8777>    MOVE.w (A7)+,D2
00025F18 <AmiBlitz3.ab3@8778> BRA.w get1bytemain
00025F1E <AmiBlitz3.ab3@8781>   MOVE.w regnum,D1
00025F20 <AmiBlitz3.ab3@8782>   LSL.w #8,D1
00025F22 <AmiBlitz3.ab3@8783>   LSL.w #1,D1
00025F26 <AmiBlitz3.ab3@8784>   ORI.w #$7000,D1
00025F2C <AmiBlitz3.ab3@8785>   BTST #$0,$7(A3)
00025F30 <AmiBlitz3.ab3@8786>    BNE.w JL_0_6946                                         ;A Pointer
00025F38 <AmiBlitz3.ab3@8787>   CMPI.l #$100,$4(A2)
00025F3C <AmiBlitz3.ab3@8788>    BCC.w arrerr1                                           ;illegal type to send
00025F40 <AmiBlitz3.ab3@8789>   MOVE.b $7(A2),D1
00025F44 <AmiBlitz3.ab3@8792>   BSR.w writeword                                          ;moveq #type,d regat
00025F46 <AmiBlitz3.ab3@8793>   MOVEQ.l #$02,D2                                          ;just a word.
00025F4A <AmiBlitz3.ab3@8794> BRA.w JL_0_685C
00025F4E <AmiBlitz3.ab3@8797>   MOVE.b #$3,D1
00025F52 <AmiBlitz3.ab3@8798> BRA.w JL_0_693C
00025F56 <AmiBlitz3.ab3@8802>    BSR.w get1bytemain                                      ;write array paramter code
00025F5A <AmiBlitz3.ab3@8803>    BSR.w getparameter
00025F62 <AmiBlitz3.ab3@8804>   BTST #$1,flagmask+1
00025F66 <AmiBlitz3.ab3@8805>    BEQ.w syntaxerr
00025F6A <AmiBlitz3.ab3@8806>    BSR.w JL_0_8E3C
00025F6E <AmiBlitz3.ab3@8807>    BSR.w get1bytemain
00025F72 <AmiBlitz3.ab3@8808>   CMP.w #$29,D0                                            ;we just want a() or whatever
00025F76 <AmiBlitz3.ab3@8809>    BNE.w syntaxerr
00025F7C <AmiBlitz3.ab3@8810>   MOVE.w notshared,D1
00025F80 <AmiBlitz3.ab3@8811>    BNE.w noarrayerr
00025F86 <AmiBlitz3.ab3@8812>   MOVE.w regnum,D1
00025F88 <AmiBlitz3.ab3@8813>   LSL.w #8,D1
00025F8A <AmiBlitz3.ab3@8814>   LSL.w #1,D1
00025F8E <AmiBlitz3.ab3@8815>   OR.w fbase(PC),D1
00025F94 <AmiBlitz3.ab3@8816>    TST.b varmode
00025F98 <AmiBlitz3.ab3@8817>    BEQ 'l1
00025F9C <AmiBlitz3.ab3@8818>    BCLR #0,d1
00025FA0 <AmiBlitz3.ab3@8821>    BSR.w writeword
00025FA4 <AmiBlitz3.ab3@8822>   MOVE.w $4(A3),D1
00025FA8 <AmiBlitz3.ab3@8823>    BSR.w writeword
00025FAC <AmiBlitz3.ab3@8824> BRA.w putalp
00025FB2 <AmiBlitz3.ab3@8828>   MOVE.w regnum,D1
00025FB4 <AmiBlitz3.ab3@8829>   LSL.w #8,D1
00025FB6 <AmiBlitz3.ab3@8830>   LSL.w #1,D1
00025FBA <AmiBlitz3.ab3@8831>   OR.w fbase(PC),D1
00025FC0 <AmiBlitz3.ab3@8832>    TST.b varmode
00025FC4 <AmiBlitz3.ab3@8833>    BEQ 'l1
00025FC8 <AmiBlitz3.ab3@8834>    BCLR #0,d1
00025FCC <AmiBlitz3.ab3@8837>    BSR.w writeword
00025FD0 <AmiBlitz3.ab3@8838>   MOVE.w $8(A3),D1
00025FD2 <AmiBlitz3.ab3@8839>   LSL.w #2,D1
00025FD8 <AmiBlitz3.ab3@8840>   MOVE.w varmode,D2
00025FDC <AmiBlitz3.ab3@8841>    BEQ.w JL_0_69BE
00025FDE <AmiBlitz3.ab3@8842>   NEG.w D1
00025FE2 <AmiBlitz3.ab3@8845>    ADD.w $4(A3),D1
00025FE6 <AmiBlitz3.ab3@8846>    BSR.w writeword
00025FEC <AmiBlitz3.ab3@8847>   MOVE.w regnum,D1
00025FEE <AmiBlitz3.ab3@8848>   LSL.w #8,D1
00025FF0 <AmiBlitz3.ab3@8849>   LSL.w #1,D1
00025FF4 <AmiBlitz3.ab3@8850>   MOVE.w partostack(PC),D2
00025FF8 <AmiBlitz3.ab3@8851>    BNE.w JL_0_69F4
00026000 <AmiBlitz3.ab3@8852>   CMPI.w #$7,regnum
00026004 <AmiBlitz3.ab3@8853>    BCC.w JL_0_69F4
00026008 <AmiBlitz3.ab3@8854>   OR.w pushlast(PC),D1
0002600E <AmiBlitz3.ab3@8855>   MOVE.w regnum,D2
00026010 <AmiBlitz3.ab3@8856>   SUBQ.w #1,D2
00026012 <AmiBlitz3.ab3@8857>   OR.w D2,D1
00026016 <AmiBlitz3.ab3@8858> BRA.w JL_0_69F8
0002601A <AmiBlitz3.ab3@8861>   OR.w pushadd(PC),D1
0002601E <AmiBlitz3.ab3@8864>   BSR.w writeword
00026026 <AmiBlitz3.ab3@8865>   MOVE.b #$1,partostack
0002602A <AmiBlitz3.ab3@8866> BRA.w putalp
0002602E <AmiBlitz3.ab3@8870> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00026030 <AmiBlitz3.ab3@8871> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00026032 <AmiBlitz3.ab3@8872> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026036 <AmiBlitz3.ab3@8877>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
0002603A <AmiBlitz3.ab3@8878>    BEQ.w evalu2
0002603E <AmiBlitz3.ab3@8879> BRA.w eval
00026044 <AmiBlitz3.ab3@8883>   MOVEA.l libpointer,A1
00026048 <AmiBlitz3.ab3@8886>    CMPA.w #$0,A1
0002604C <AmiBlitz3.ab3@8887>    BEQ.w resetlibs__done
00026052 <AmiBlitz3.ab3@8888>   MOVE.w #-1,$A(A1)
00026058 <AmiBlitz3.ab3@8889>   BCLR #$7,$C(A1)
0002605A <AmiBlitz3.ab3@8890>   MOVEA.l (A1),A1
0002605E <AmiBlitz3.ab3@8891> BRA.w resetlibs__loop
00026060 <AmiBlitz3.ab3@8894> RTS
00026064 <AmiBlitz3.ab3@8898>   MOVE.w #$FFFE,D1
00026068 <AmiBlitz3.ab3@8901>    BSR.w JL_0_6F38
0002606E <AmiBlitz3.ab3@8904>   TST.w cfetchmode
00026072 <AmiBlitz3.ab3@8905>    BEQ.w uselib3__noconst
00026078 <AmiBlitz3.ab3@8906>   BTST #$6,$C(A1)
0002607C <AmiBlitz3.ab3@8907>    BNE.w uselib3__constok
00026080 <AmiBlitz3.ab3@8908> BRA.w badconerr                                            ;Can't use this Library!
00026082 <AmiBlitz3.ab3@8911> RTS
00026088 <AmiBlitz3.ab3@8914>    BSET #$7,$C(A1)
0002608C <AmiBlitz3.ab3@8915>    BNE.w JL_0_6C74                                         ;already done....
00026092 <AmiBlitz3.ab3@8916>    CMPI.w #-1,$A(A1)
00026096 <AmiBlitz3.ab3@8917>    BNE.w JL_0_6C74                                         ;something already here
0002609C <AmiBlitz3.ab3@8921>    TST.w dirmode
000260A0 <AmiBlitz3.ab3@8922>    BEQ.b JL_0_6A86
000260A6 <AmiBlitz3.ab3@8923>    TST.b exdebug
000260AA <AmiBlitz3.ab3@8924>    BEQ 'l1
000260AE <AmiBlitz3.ab3@8925> BRA.b JL_0_6A86
000260B4 <AmiBlitz3.ab3@8928>   BCLR #$7,$C(A1)
000260B8 <AmiBlitz3.ab3@8929> BRA.w dirliberr
000260BE <AmiBlitz3.ab3@8932>   MOVE.b debugmode,-(a7)
000260C2 <AmiBlitz3.ab3@8933>   MOVEM.l D1/A0/A2,-(A7)
000260CA <AmiBlitz3.ab3@8939>   BTST #$7,use_debugger
000260CE <AmiBlitz3.ab3@8940>   BNE 'debugon
000260D0 <AmiBlitz3.ab3@8941>   CLR.w D1
000260D4 <AmiBlitz3.ab3@8942> BRA.b 'debugoff
000260D6 <AmiBlitz3.ab3@8945>   SNE D1
000260DC <AmiBlitz3.ab3@8948>   MOVE.b d1,debugmode
000260DE <AmiBlitz3.ab3@8952>   MOVEA.l A1,A0
000260E2 <AmiBlitz3.ab3@8953>   ADDA.l $12(A1),A0
000260E6 <AmiBlitz3.ab3@8954>   TST.w -$2(A0)
000260EA <AmiBlitz3.ab3@8955>    BEQ.w JL_0_6AD2
000260EE <AmiBlitz3.ab3@8956>   MOVEM.l A0-A1,-(A7)
000260F2 <AmiBlitz3.ab3@8957>   MOVE.w #$FB4F,D1
000260F6 <AmiBlitz3.ab3@8958>    BSR.w uselib
000260FA <AmiBlitz3.ab3@8959>   MOVEM.l (A7)+,A0-A1
00026100 <AmiBlitz3.ab3@8960>   ADDQ.w #1,globalvarpointer
00026108 <AmiBlitz3.ab3@8961>   BCLR #$0,globalvarpointer+1
00026110 <AmiBlitz3.ab3@8962>   MOVE.w globalvarpointer,-$6(A0)
00026116 <AmiBlitz3.ab3@8963>   ADDQ.w #4,globalvarpointer
0002611A <AmiBlitz3.ab3@8964>   TST.l -$E(A0)
0002611E <AmiBlitz3.ab3@8965>    BEQ.w JL_0_6AD2
00026124 <AmiBlitz3.ab3@8966>   ADDQ.w #4,globalvarpointer
0002612C <AmiBlitz3.ab3@8969>   MOVE.l libend,$28(A1)
0002612E <AmiBlitz3.ab3@8970>   MOVEA.l A1,A0
00026132 <AmiBlitz3.ab3@8971>   ADDA.l $12(A1),A0
00026134 <AmiBlitz3.ab3@8972>   MOVE.l A1,D1
00026138 <AmiBlitz3.ab3@8973>   ADD.l $6(A1),D1
0002613C <AmiBlitz3.ab3@8974>   TST.l $2C(A1)
00026140 <AmiBlitz3.ab3@8975>    BEQ.w JL_0_6AFE
00026146 <AmiBlitz3.ab3@8977>   TST.b debugmode
0002614A <AmiBlitz3.ab3@8978>    BNE.w JL_0_6AFE
0002614C <AmiBlitz3.ab3@8979>   MOVE.l A1,D1
00026150 <AmiBlitz3.ab3@8980>   ADD.l $2C(A1),D1
00026156 <AmiBlitz3.ab3@8983>   MOVEA.l libend,A2
0002615C <AmiBlitz3.ab3@8986>   CMPA.l data1start,A2
00026160 <AmiBlitz3.ab3@8987>    BCS.w JL_0_6B24
00026168 <AmiBlitz3.ab3@8988>   MOVE.w #$FFFF,dontwrite
0002616A <AmiBlitz3.ab3@8991>   ADDQ.w #2,A0
0002616C <AmiBlitz3.ab3@8992>   ADDQ.w #2,A2
0002616E <AmiBlitz3.ab3@8993>   CMPA.l D1,A0
00026172 <AmiBlitz3.ab3@8994>    BCS.w JL_0_6B16
00026176 <AmiBlitz3.ab3@8995> BRA.w JL_0_6B2C
00026178 <AmiBlitz3.ab3@8998>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
0002617A <AmiBlitz3.ab3@8999>   CMPA.l D1,A0
0002617E <AmiBlitz3.ab3@9000>    BCS.w JL_0_6B04
00026184 <AmiBlitz3.ab3@9003>   MOVE.l A2,libend
00026188 <AmiBlitz3.ab3@9004>   MOVE.l $20(A1),D1
0002618C <AmiBlitz3.ab3@9005>    BEQ.w JL_0_6BB8
00026190 <AmiBlitz3.ab3@9006>   MOVEM.l D0/D2-D3,-(A7)
00026194 <AmiBlitz3.ab3@9007>   MOVEA.l $24(A1),A0
00026196 <AmiBlitz3.ab3@9008>   MOVEQ.l #$00,D3
00026198 <AmiBlitz3.ab3@9011>   MOVE.l (A0)+,D2
0002619C <AmiBlitz3.ab3@9012>   TST.l $2C(A1)
000261A0 <AmiBlitz3.ab3@9013>    BEQ.w JL_0_6B60
000261A6 <AmiBlitz3.ab3@9014>   TST.b debugmode
000261AA <AmiBlitz3.ab3@9015>    BNE.w JL_0_6B60
000261AE <AmiBlitz3.ab3@9016>   CMP.l $2C(A1),D2
000261B2 <AmiBlitz3.ab3@9017>    BCC.w JL_0_6BA0
000261B6 <AmiBlitz3.ab3@9020>   TST.w $0(A1,D2.L)
000261BA <AmiBlitz3.ab3@9021>    BPL.w JL_0_6B72
000261BC <AmiBlitz3.ab3@9022>   TST.l D3
000261C0 <AmiBlitz3.ab3@9023>    BNE.w JL_0_6B72
000261C2 <AmiBlitz3.ab3@9024>   MOVE.l A0,D0
000261C4 <AmiBlitz3.ab3@9025>   MOVE.l D1,D3
000261C8 <AmiBlitz3.ab3@9028>   SUB.l $12(A1),D2
000261CC <AmiBlitz3.ab3@9029>    BMI.w JL_0_6BA0
000261D0 <AmiBlitz3.ab3@9030>   ADD.l $28(A1),D2
000261D2 <AmiBlitz3.ab3@9031>   MOVE.l D2,-(A7)
000261D8 <AmiBlitz3.ab3@9032>   SUB.l destbufferstart,D2
000261DC <AmiBlitz3.ab3@9033>    BSR.w addhunkoffset
000261DE <AmiBlitz3.ab3@9034>   MOVEA.l (A7)+,A2
000261E4 <AmiBlitz3.ab3@9035>   TST.w dontwrite
000261E8 <AmiBlitz3.ab3@9036>    BNE.w JL_0_6BA0
000261EC <AmiBlitz3.ab3@9037>   MOVE.l $28(A1),D2
000261F0 <AmiBlitz3.ab3@9038>   SUB.l $12(A1),D2
000261F2 <AmiBlitz3.ab3@9039>   ADD.l D2,(A2)
000261F4 <AmiBlitz3.ab3@9042>    SUBQ.l #1,D1
000261F8 <AmiBlitz3.ab3@9043>    BNE.w JL_0_6B44
000261FA <AmiBlitz3.ab3@9044>   MOVE.l D3,D2
000261FE <AmiBlitz3.ab3@9045>    BEQ.w JL_0_6BB4
00026200 <AmiBlitz3.ab3@9046>   MOVEA.l D0,A2
00026202 <AmiBlitz3.ab3@9047>   SUBQ.w #4,A2
00026206 <AmiBlitz3.ab3@9048>    BSR.w JL_0_6E34
0002620A <AmiBlitz3.ab3@9051>    MOVEM.l (A7)+,D0/D2-D3
0002620E <AmiBlitz3.ab3@9054>    MOVEM.l (A7)+,D1/A0/A2
00026212 <AmiBlitz3.ab3@9055>   MOVEM.l D1-D2,-(A7)
00026216 <AmiBlitz3.ab3@9056>   TST.w $1A(A1)
0002621A <AmiBlitz3.ab3@9057>    BNE.w JL_0_6BD0
0002621E <AmiBlitz3.ab3@9058>   CLR.w $A(A1)
00026222 <AmiBlitz3.ab3@9059> BRA.w JL_0_6C5E
00026228 <AmiBlitz3.ab3@9062>   ADDQ.w #1,globalvarpointer
00026230 <AmiBlitz3.ab3@9063>   BCLR #$0,globalvarpointer+1
00026238 <AmiBlitz3.ab3@9064>   MOVE.w globalvarpointer,$A(A1)
0002623C <AmiBlitz3.ab3@9065>   CMP.w #-$12D,D1
00026240 <AmiBlitz3.ab3@9066>    BNE.w JL_0_6C16
00026248 <AmiBlitz3.ab3@9067>   MOVE.w $A(A1),movestdn+2
00026250 <AmiBlitz3.ab3@9068>   MOVE.w $A(A1),pusha3+2
00026258 <AmiBlitz3.ab3@9069>   MOVE.w $A(A1),pusha32+2
00026260 <AmiBlitz3.ab3@9070>   MOVE.w $A(A1),pulla3+2
00026268 <AmiBlitz3.ab3@9071>   MOVE.w $A(A1),geta3+2
0002626C <AmiBlitz3.ab3@9074>    CMP.w #-$3E9,D1
00026270 <AmiBlitz3.ab3@9075>    BNE.w JL_0_6C3E
00026278 <AmiBlitz3.ab3@9076>   MOVE.w $A(A1),dataget+2
00026280 <AmiBlitz3.ab3@9077>   MOVE.w $A(A1),dataput+2
00026288 <AmiBlitz3.ab3@9078>   MOVE.w $A(A1),rescode+6
00026290 <AmiBlitz3.ab3@9079>   MOVE.w $A(A1),rescode2+2
00026296 <AmiBlitz3.ab3@9082>   ADDQ.w #2,globalvarpointer
0002629A <AmiBlitz3.ab3@9083>   TST.w $1A(A1)
0002629E <AmiBlitz3.ab3@9084>    BMI.w JL_0_6C52
000262A4 <AmiBlitz3.ab3@9085>   ADDQ.w #2,globalvarpointer
000262A8 <AmiBlitz3.ab3@9088>   MOVEM.l D1/A1,-(A7)
000262AC <AmiBlitz3.ab3@9089>   BSR.w uselib2
000262B0 <AmiBlitz3.ab3@9090>   MOVEM.l (A7)+,D1/A1
000262B2 <AmiBlitz3.ab3@9093>   MOVE.w D1,D2
000262B6 <AmiBlitz3.ab3@9094>   MOVE.l $16(A1),D1
000262BA <AmiBlitz3.ab3@9095>    BSR.w uselib2_org
000262BE <AmiBlitz3.ab3@9096>   MOVE.l $1C(A1),D1
000262C2 <AmiBlitz3.ab3@9097>    BSR.w uselib2_org
000262C6 <AmiBlitz3.ab3@9098>   MOVEM.l (A7)+,D1-D2
000262CC <AmiBlitz3.ab3@9100>   MOVE.b (a7)+,debugmode
000262CE <AmiBlitz3.ab3@9103> RTS
000262D0 <AmiBlitz3.ab3@9107>   MOVEQ.l #$00,D2
000262D6 <AmiBlitz3.ab3@9110>   MOVEA.l tokeslist,A2
000262D8 <AmiBlitz3.ab3@9111>   CMPA.l D2,A2
000262DC <AmiBlitz3.ab3@9112>    BEQ.w JL_0_6CE0
000262DE <AmiBlitz3.ab3@9113>   MOVE.l A2,-(A7)
000262E0 <AmiBlitz3.ab3@9116>   MOVEQ.l #$00,D3
000262E4 <AmiBlitz3.ab3@9119>   MOVEA.l $8(A2),A3
000262E6 <AmiBlitz3.ab3@9120>   CMPA.l D3,A3
000262EA <AmiBlitz3.ab3@9121>    BEQ.w JL_0_6CD2
000262EC <AmiBlitz3.ab3@9122>   MOVE.l A3,-(A7)
000262F0 <AmiBlitz3.ab3@9123>   MOVEM.l D2-D3/A2-A3,-(A7)
000262F4 <AmiBlitz3.ab3@9124>   MOVE.w $4(A2),D1
000262F8 <AmiBlitz3.ab3@9125>   MOVE.w $6(A2),D2
000262FC <AmiBlitz3.ab3@9126>    BSR.w JL_0_6CE2
00026300 <AmiBlitz3.ab3@9127>   MOVEM.l (A7)+,D2-D3/A2-A3
00026306 <AmiBlitz3.ab3@9128>   MOVE.w dontwrite,D0
0002630A <AmiBlitz3.ab3@9129>    BEQ.w JL_0_6CBE
0002630C <AmiBlitz3.ab3@9132>   MOVEA.l (A3),A3
0002630E <AmiBlitz3.ab3@9133>   CMPA.l D3,A3
00026312 <AmiBlitz3.ab3@9134>    BNE.w JL_0_6CB2
00026316 <AmiBlitz3.ab3@9135> BRA.w JL_0_6CCC
0002631A <AmiBlitz3.ab3@9138>   MOVEA.l $4(A3),A0
0002631C <AmiBlitz3.ab3@9139>   MOVE.l D7,(A0)
0002631E <AmiBlitz3.ab3@9140>   MOVEA.l (A3),A3
00026320 <AmiBlitz3.ab3@9141>   CMPA.l D3,A3
00026324 <AmiBlitz3.ab3@9142>    BNE.w JL_0_6CBE
00026326 <AmiBlitz3.ab3@9145>   MOVE.l (A7)+,D3
0002632A <AmiBlitz3.ab3@9146> BRA.w JL_0_6C88
0002632C <AmiBlitz3.ab3@9149>    MOVEA.l (A2),A2
0002632E <AmiBlitz3.ab3@9150>   CMPA.l D2,A2
00026332 <AmiBlitz3.ab3@9151>    BNE.w JL_0_6C86
00026334 <AmiBlitz3.ab3@9152>   MOVE.l (A7)+,D2
00026338 <AmiBlitz3.ab3@9153> BRA.w JL_0_6C78
0002633A <AmiBlitz3.ab3@9156> RTS
0002633C <AmiBlitz3.ab3@9160>   MOVE.w D2,-(A7)
00026340 <AmiBlitz3.ab3@9161>    BSR.w searchinstr
00026342 <AmiBlitz3.ab3@9162>   MOVE.w (A7)+,D2
0002634A <AmiBlitz3.ab3@9163>   BCLR #$7,blitzmode
0002634E <AmiBlitz3.ab3@9164>   BCLR #$E,D2
00026352 <AmiBlitz3.ab3@9165>    BEQ.w JL_0_6D02
0002635A <AmiBlitz3.ab3@9166>   BSET #$7,blitzmode
0002635C <AmiBlitz3.ab3@9169>   TST.w (A3)
00026360 <AmiBlitz3.ab3@9170>    BEQ.w JL_0_6DAC
00026366 <AmiBlitz3.ab3@9171>   BTST #$2,$1(A3)
0002636A <AmiBlitz3.ab3@9172>    BNE.w tokeerr
00026370 <AmiBlitz3.ab3@9173>   BTST #$3,$1(A3)
00026374 <AmiBlitz3.ab3@9174>    BNE.w tokeerr
00026378 <AmiBlitz3.ab3@9175>   LEA $6(A3),A3
0002637A <AmiBlitz3.ab3@9178>   MOVE.w (A3)+,D0
0002637E <AmiBlitz3.ab3@9179>    BMI.w tokeerr
00026382 <AmiBlitz3.ab3@9180>   ANDI.w #$FF,D0
00026384 <AmiBlitz3.ab3@9181>   ADDA.w D0,A3
00026386 <AmiBlitz3.ab3@9182>   ADDQ.w #1,A3
00026388 <AmiBlitz3.ab3@9183>   EXG.l D0,A3
0002638C <AmiBlitz3.ab3@9184>   BCLR #$0,D0
0002638E <AmiBlitz3.ab3@9185>   EXG.l D0,A3
00026390 <AmiBlitz3.ab3@9186>   SUBQ.w #1,D2
00026394 <AmiBlitz3.ab3@9187>    BPL.w JL_0_6D98
00026396 <AmiBlitz3.ab3@9188>   TST.w (A3)
0002639A <AmiBlitz3.ab3@9189>    BNE.w JL_0_6D76
0002639E <AmiBlitz3.ab3@9190>   MOVE.l $2(A3),D0
000263A2 <AmiBlitz3.ab3@9191>   OR.l $A(A3),D0
000263A6 <AmiBlitz3.ab3@9192>    BNE.w JL_0_6D76
000263AC <AmiBlitz3.ab3@9193>   BTST #$0,$9(A3)
000263B0 <AmiBlitz3.ab3@9194>    BNE.w JL_0_6D76
000263B4 <AmiBlitz3.ab3@9195>   MOVE.l $6(A3),D7
000263B8 <AmiBlitz3.ab3@9196>   MOVE.w $0(A2,D7.L),D0
000263BC <AmiBlitz3.ab3@9197>   ANDI.w #$F000,D0
000263C0 <AmiBlitz3.ab3@9198>   CMP.w #-$6000,D0
000263C4 <AmiBlitz3.ab3@9199>    BEQ.w JL_0_6D76
000263C8 <AmiBlitz3.ab3@9202>   SUB.l $12(A2),D7
000263CC <AmiBlitz3.ab3@9203>   ADD.l $28(A2),D7
000263CE <AmiBlitz3.ab3@9204> RTS
000263D4 <AmiBlitz3.ab3@9208>   LEA cutejsr,A0
000263DA <AmiBlitz3.ab3@9211>   MOVE.l destpointer,-(A7)
000263E2 <AmiBlitz3.ab3@9212>   MOVE.w #$FFFF,lasta6
000263E4 <AmiBlitz3.ab3@9215>    JSR (A0)
000263E8 <AmiBlitz3.ab3@9216>   MOVE.w #$4E75,D1
000263EC <AmiBlitz3.ab3@9217>    BSR.w writeword
000263EE <AmiBlitz3.ab3@9218>   MOVE.l (A7)+,D7
000263F0 <AmiBlitz3.ab3@9219> RTS
000263F2 <AmiBlitz3.ab3@9223>   TST.w (A3)+
000263F6 <AmiBlitz3.ab3@9224>    BEQ.w JL_0_6DA4
000263F8 <AmiBlitz3.ab3@9225>   ADDQ.w #2,A3
000263FC <AmiBlitz3.ab3@9226> BRA.w JL_0_6D98
00026400 <AmiBlitz3.ab3@9229>   LEA $C(A3),A3
00026404 <AmiBlitz3.ab3@9230> BRA.w JL_0_6D20
00026406 <AmiBlitz3.ab3@9234>   TST.w D2
0002640A <AmiBlitz3.ab3@9235>    BNE.w tokeerr
0002640E <AmiBlitz3.ab3@9236>   TST.w $6(A3)
00026412 <AmiBlitz3.ab3@9237>    BNE.w JL_0_6DE4
00026416 <AmiBlitz3.ab3@9238>   MOVE.l $8(A3),D0
0002641A <AmiBlitz3.ab3@9239>   OR.l $10(A3),D0
0002641E <AmiBlitz3.ab3@9240>    BNE.w JL_0_6DE4
00026424 <AmiBlitz3.ab3@9241>   BTST #$0,$F(A3)
00026428 <AmiBlitz3.ab3@9242>    BNE.w JL_0_6DE4
0002642C <AmiBlitz3.ab3@9243>   MOVE.l $C(A3),D7
00026430 <AmiBlitz3.ab3@9244>   MOVE.w $0(A2,D7.L),D0
00026434 <AmiBlitz3.ab3@9245>   ANDI.w #$F000,D0
00026438 <AmiBlitz3.ab3@9246>   CMP.w #-$6000,D0
0002643C <AmiBlitz3.ab3@9247>    BNE.w JL_0_6D6C
0002643E <AmiBlitz3.ab3@9250>   MOVE.l A3,D1
00026440 <AmiBlitz3.ab3@9251>   SUB.l A2,D1
00026446 <AmiBlitz3.ab3@9252>   LEA Amakelibsub,A0
0002644A <AmiBlitz3.ab3@9253> BRA.w JL_0_6D7C
00026450 <AmiBlitz3.ab3@9257>   MOVEA.l _execbase,A6
00026456 <AmiBlitz3.ab3@9258>   MOVEA.l tokeslist,A2
0002645C <AmiBlitz3.ab3@9259>   CLR.l tokeslist
00026460 <AmiBlitz3.ab3@9262>     CMPA.w #$0,A2
00026464 <AmiBlitz3.ab3@9263>      BEQ.w JL_0_6E32
00026468 <AmiBlitz3.ab3@9264>     MOVEA.l $8(A2),A3
0002646C <AmiBlitz3.ab3@9267>       CMPA.w #$0,A3
00026470 <AmiBlitz3.ab3@9268>        BEQ.w JL_0_6E24
00026472 <AmiBlitz3.ab3@9269>       MOVEA.l A3,A1
00026474 <AmiBlitz3.ab3@9270>       MOVEA.l (A3),A3
00026476 <AmiBlitz3.ab3@9271>       MOVEQ.l #$08,D0
0002647C <AmiBlitz3.ab3@9272>       MOVE.l mempool,a0
00026482 <AmiBlitz3.ab3@9273>       MOVEA.l _execbase,A6
00026486 <AmiBlitz3.ab3@9274>       JSR _FreePooled(A6)
0002648A <AmiBlitz3.ab3@9275> BRA.w JL_0_6E0E
0002648C <AmiBlitz3.ab3@9278>     MOVEA.l A2,A1
0002648E <AmiBlitz3.ab3@9279>     MOVEA.l (A2),A2
00026490 <AmiBlitz3.ab3@9280>     MOVEQ.l #$0C,D0
00026496 <AmiBlitz3.ab3@9281>     MOVE.l mempool,a0
0002649C <AmiBlitz3.ab3@9282>     MOVEA.l _execbase,A6
000264A0 <AmiBlitz3.ab3@9283>     JSR _FreePooled(A6)
000264A4 <AmiBlitz3.ab3@9284> BRA.w JL_0_6E02
000264A6 <AmiBlitz3.ab3@9287> RTS
000264AA <AmiBlitz3.ab3@9291>   MOVEM.l D3-D5/A1-A6,-(A7)
000264AC <AmiBlitz3.ab3@9292>   MOVEA.l A1,A4
000264AE <AmiBlitz3.ab3@9295>   MOVE.l (A2)+,D3
000264B2 <AmiBlitz3.ab3@9296>   MOVE.w $0(A4,D3.L),D5
000264B6 <AmiBlitz3.ab3@9297>    BPL.w JL_0_6E7A
000264BA <AmiBlitz3.ab3@9298>   TST.l $2C(A4)
000264BE <AmiBlitz3.ab3@9299>    BEQ.w JL_0_6E5E
000264C4 <AmiBlitz3.ab3@9300>   TST.b debugmode
000264C8 <AmiBlitz3.ab3@9301>    BNE.w JL_0_6E5E
000264CC <AmiBlitz3.ab3@9302>   CMP.l $2C(A4),D3
000264D0 <AmiBlitz3.ab3@9303>    BCC.w JL_0_6E7A
000264D4 <AmiBlitz3.ab3@9306>   BCLR #$F,D5
000264D8 <AmiBlitz3.ab3@9307>   MOVE.w $2(A4,D3.L),D4
000264DC <AmiBlitz3.ab3@9308>   SUB.l $12(A4),D3
000264E0 <AmiBlitz3.ab3@9309>   ADD.l $28(A4),D3
000264E4 <AmiBlitz3.ab3@9310>   MOVEM.l D2/A2/A4,-(A7)
000264E8 <AmiBlitz3.ab3@9311>    BSR.w JL_0_6E86
000264EC <AmiBlitz3.ab3@9312>   MOVEM.l (A7)+,D2/A2/A4
000264EE <AmiBlitz3.ab3@9315>   SUBQ.l #1,D2
000264F2 <AmiBlitz3.ab3@9316>    BNE.w JL_0_6E3A
000264F6 <AmiBlitz3.ab3@9317>   MOVEM.l (A7)+,D3-D5/A1-A6
000264F8 <AmiBlitz3.ab3@9318> RTS
000264FE <AmiBlitz3.ab3@9322>   LEA tokeslist,A3
00026504 <AmiBlitz3.ab3@9323>   MOVEA.l _execbase,A6
00026506 <AmiBlitz3.ab3@9326>   MOVE.l (A3),D0
0002650A <AmiBlitz3.ab3@9327>    BEQ.w JL_0_6EAC
0002650C <AmiBlitz3.ab3@9328>   MOVEA.l D0,A3
00026510 <AmiBlitz3.ab3@9329>   CMP.w $4(A3),D4
00026514 <AmiBlitz3.ab3@9330>    BNE.w JL_0_6E90
00026518 <AmiBlitz3.ab3@9331>   CMP.w $6(A3),D5
0002651C <AmiBlitz3.ab3@9332>    BNE.w JL_0_6E90
00026520 <AmiBlitz3.ab3@9333> BRA.w JL_0_6ED0
00026522 <AmiBlitz3.ab3@9336>   MOVEQ.l #$0C,D0
00026524 <AmiBlitz3.ab3@9337>   MOVEQ.l #$01,D1
0002652A <AmiBlitz3.ab3@9338>   MOVE.l mempool,a0
0002652E <AmiBlitz3.ab3@9339>   JSR _AllocPooled(a6)
00026530 <AmiBlitz3.ab3@9341>   MOVEA.l D0,A3
00026536 <AmiBlitz3.ab3@9342>   MOVE.l tokeslist,(A3)
0002653C <AmiBlitz3.ab3@9343>   MOVE.l A3,tokeslist
00026540 <AmiBlitz3.ab3@9344>   MOVE.w D4,$4(A3)
00026544 <AmiBlitz3.ab3@9345>   MOVE.w D5,$6(A3)
00026548 <AmiBlitz3.ab3@9346>   CLR.l $8(A3)
0002654A <AmiBlitz3.ab3@9349>   MOVEQ.l #$08,D0
0002654C <AmiBlitz3.ab3@9350>   MOVEQ.l #$01,D1
00026552 <AmiBlitz3.ab3@9351>   MOVE.l mempool,a0
00026556 <AmiBlitz3.ab3@9352>   JSR _AllocPooled(a6)
00026558 <AmiBlitz3.ab3@9354>   MOVEA.l D0,A0
0002655C <AmiBlitz3.ab3@9355>   MOVE.l D3,$4(A0)
00026560 <AmiBlitz3.ab3@9356>   MOVE.l $8(A3),(A0)
00026564 <AmiBlitz3.ab3@9357>   MOVE.l A0,$8(A3)
00026566 <AmiBlitz3.ab3@9358>   MOVE.w D4,D1
0002656A <AmiBlitz3.ab3@9359> BRA.w searchinstr
0002656E <AmiBlitz3.ab3@9362> tokeslist: Ds.l 1
00026572 <AmiBlitz3.ab3@9375>   BEQ.w uselib2_org__skip
00026574 <AmiBlitz3.ab3@9376>   MOVE.l A1,-(A7)
00026576 <AmiBlitz3.ab3@9377>   ADDA.l D1,A1
00026578 <AmiBlitz3.ab3@9378>   ADDQ.w #6,A1
0002657A <AmiBlitz3.ab3@9381>     MOVE.w (A1)+,D1
0002657E <AmiBlitz3.ab3@9382>     BEQ.w uselib2_org__done
00026580 <AmiBlitz3.ab3@9383>     CMP.w D2,D1
00026584 <AmiBlitz3.ab3@9384>     BEQ.w uselib2_org__skip2
00026586 <AmiBlitz3.ab3@9385>     MOVE.l A1,-(A7)
0002658A <AmiBlitz3.ab3@9386>     BSR.w uselib
0002658C <AmiBlitz3.ab3@9387>     MOVEA.l (A7)+,A1
0002658E <AmiBlitz3.ab3@9390>     ADDQ.w #2,A1
00026592 <AmiBlitz3.ab3@9391> BRA.w uselib2_org__loop
00026594 <AmiBlitz3.ab3@9394>   MOVEA.l (A7)+,A1
00026596 <AmiBlitz3.ab3@9397> RTS
0002659C <AmiBlitz3.ab3@9401>   MOVEA.l libpointer,A1
000265A0 <AmiBlitz3.ab3@9404>   CMPA.w #$0,A1
000265A4 <AmiBlitz3.ab3@9405>    BEQ.b JL_0_6F36
000265A8 <AmiBlitz3.ab3@9406>   CMP.w $4(A1),D1
000265AC <AmiBlitz3.ab3@9407>    BEQ.w JL_0_6F34
000265AE <AmiBlitz3.ab3@9408>   MOVEA.l (A1),A1
000265B2 <AmiBlitz3.ab3@9409> BRA.w JL_0_6F20
000265B4 <AmiBlitz3.ab3@9412>   MOVEQ.l #-$01,D1
000265B6 <AmiBlitz3.ab3@9415> RTS
000265BA <AmiBlitz3.ab3@9419>   MOVEM.l d0/a2,-(a7)
000265BC <AmiBlitz3.ab3@9420>   MOVEQ #0,d0
000265C2 <AmiBlitz3.ab3@9421>   LEA instrtab+4,a2
000265C4 <AmiBlitz3.ab3@9422>   MOVE.w d1,d0
000265C6 <AmiBlitz3.ab3@9423>   ASL.l #3,d0
000265CA <AmiBlitz3.ab3@9424>   MOVE.l 0(a2,d0.l),a1                                     ;*8
000265D0 <AmiBlitz3.ab3@9425>   CMP.l #0,a1
000265D4 <AmiBlitz3.ab3@9426>   BNE JL_0_6F54b
000265DA <AmiBlitz3.ab3@9428>   MOVEA.l libpointer,A1
000265DE <AmiBlitz3.ab3@9431>     CMPA.w #$0,A1
000265E2 <AmiBlitz3.ab3@9432>     BEQ.w noliberr
000265E6 <AmiBlitz3.ab3@9433>     CMP.w $4(A1),D1
000265EA <AmiBlitz3.ab3@9434>     BEQ.w JL_0_6F54
000265EC <AmiBlitz3.ab3@9435>    MOVEA.l (A1),A1
000265F0 <AmiBlitz3.ab3@9436> BRA.w JL_0_6F3E
000265F4 <AmiBlitz3.ab3@9439>   MOVE.l a1,0(a2,d0.l)
000265F8 <AmiBlitz3.ab3@9442>   MOVEM.l (a7)+,d0/a2
000265FA <AmiBlitz3.ab3@9443> RTS
000265FE <AmiBlitz3.ab3@9446>   MOVEM.l d0-d1/a1,-(a7)
00026600 <AmiBlitz3.ab3@9447>   MOVEQ #0,d0
00026606 <AmiBlitz3.ab3@9448>   LEA instrtab,a1
00026608 <AmiBlitz3.ab3@9449>   MOVE.w d1,d0
0002660A <AmiBlitz3.ab3@9450>   ASL.l #3,d0
0002660E <AmiBlitz3.ab3@9451>   MOVE.l 0(a1,d0.l),a3
00026612 <AmiBlitz3.ab3@9452>   MOVE.l 4(a1,d0.l),a2
00026618 <AmiBlitz3.ab3@9453>   CMP.l #0,a3
0002661C <AmiBlitz3.ab3@9454>   BNE JL_0_6F92b
00026622 <AmiBlitz3.ab3@9456>   MOVEA.l libpointer,A2
00026626 <AmiBlitz3.ab3@9459>   CMPA.w #$0,A2
0002662A <AmiBlitz3.ab3@9460>   BEQ.w notokerr
0002662E <AmiBlitz3.ab3@9461>   CMP.w $E(A2),D1
00026632 <AmiBlitz3.ab3@9462>   BCS.w JL_0_6FB8
00026636 <AmiBlitz3.ab3@9463>   CMP.w $10(A2),D1
0002663A <AmiBlitz3.ab3@9464>   BCC.w JL_0_6FB8
0002663E <AmiBlitz3.ab3@9465>   LEA $30(A2),A3
00026642 <AmiBlitz3.ab3@9466>   TST.w $4(A2)
00026646 <AmiBlitz3.ab3@9467>   BPL.w JL_0_6FA6
0002664A <AmiBlitz3.ab3@9470>     CMP.w $E(A2),D1
0002664E <AmiBlitz3.ab3@9471>     BEQ.w JL_0_6F92
00026650 <AmiBlitz3.ab3@9472>     SUBQ.w #1,D1
00026654 <AmiBlitz3.ab3@9473>     MOVEA.l $2(A3),A3
00026658 <AmiBlitz3.ab3@9474> BRA.w JL_0_6F80
0002665C <AmiBlitz3.ab3@9477>   MOVE.l a3,0(a1,d0.l)
00026660 <AmiBlitz3.ab3@9478>   MOVE.l a2,4(a1,d0.l)
00026664 <AmiBlitz3.ab3@9481>   MOVEM.l (a7)+,d0-d1/a1
00026668 <AmiBlitz3.ab3@9482>   MOVEM.l D1/A1-a3,-(A7)
0002666C <AmiBlitz3.ab3@9483>   CMP.w #1,(a3)
00026670 <AmiBlitz3.ab3@9484>   BNE.s ex10
00026678 <AmiBlitz3.ab3@9485>   CMP.l #$12345678,$e(a3)
0002667C <AmiBlitz3.ab3@9486>   BNE.s ex10
00026682 <AmiBlitz3.ab3@9487>   CMP.w #$ffff,$16(a3)
00026686 <AmiBlitz3.ab3@9488>   BNE.s ex10
0002668A <AmiBlitz3.ab3@9489>   MOVE.l $12(a3),d1
0002668E <AmiBlitz3.ab3@9490>   BEQ.s ex10
00026694 <AmiBlitz3.ab3@9491>   LEA pluginbase,a3
00026698 <AmiBlitz3.ab3@9493> JMP 0(a2,d1.l)                                             ;plugin
0002669C <AmiBlitz3.ab3@9496>   MOVEM.l (A7)+,D1/A1-a3
000266A2 <AmiBlitz3.ab3@9497>   JSR stripspaces
000266A4 <AmiBlitz3.ab3@9498>   MOVEQ #0,d0
000266A6 <AmiBlitz3.ab3@9499>   MOVE.b (a5)+,d0
000266AC <AmiBlitz3.ab3@9500>   MOVE.w d0,lastchar
000266AE <AmiBlitz3.ab3@9501>   ADDQ.l #4,a7
000266B0 <AmiBlitz3.ab3@9502> RTS
000266B2 <AmiBlitz3.ab3@9506>   MOVEA.l A2,A1
000266B8 <AmiBlitz3.ab3@9507>   CLR.b newmode
000266BC <AmiBlitz3.ab3@9508>   MOVE.w $4(A1),D1
000266C0 <AmiBlitz3.ab3@9511>   BSR.w uselib3
000266C4 <AmiBlitz3.ab3@9512>   MOVEM.l (A7)+,D1/A1-a3
000266C6 <AmiBlitz3.ab3@9513> RTS
000266CC <AmiBlitz3.ab3@9516>   MOVE.w globalvarpointer,-(a7)
000266D4 <AmiBlitz3.ab3@9517>   MOVE.w #$8004,globalvarpointer
000266D8 <AmiBlitz3.ab3@9518>   BSR.w uselib3
000266DE <AmiBlitz3.ab3@9519>   MOVE.w (a7)+,globalvarpointer
000266E2 <AmiBlitz3.ab3@9520>   MOVEM.l (A7)+,D1/A1-a3
000266E4 <AmiBlitz3.ab3@9521> RTS
000266E8 <AmiBlitz3.ab3@9524>     CMP.w $E(A2),D1
000266EC <AmiBlitz3.ab3@9525>     BEQ.w JL_0_6F92
000266EE <AmiBlitz3.ab3@9526>     SUBQ.w #1,D1
000266F2 <AmiBlitz3.ab3@9527>     MOVEA.l $2(A3),A3
000266F6 <AmiBlitz3.ab3@9528> BRA.w JL_0_6FA6
000266F8 <AmiBlitz3.ab3@9531>   MOVEA.l (A2),A2
000266FC <AmiBlitz3.ab3@9532> BRA.w JL_0_6F5C
00026702 <AmiBlitz3.ab3@9535> JMP writeword
00026706 <AmiBlitz3.ab3@9538> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0002670A <AmiBlitz3.ab3@9539> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
0002670E <AmiBlitz3.ab3@9540> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026710 <AmiBlitz3.ab3@9546>   TST.l D0
00026714 <AmiBlitz3.ab3@9547>   BEQ.w exit_loadlibsfile
00026716 <AmiBlitz3.ab3@9548>     MOVE.l D0,D6                                           ;d6=len
0002671C <AmiBlitz3.ab3@9549>     MOVEA.l _dosbase,A6
00026722 <AmiBlitz3.ab3@9550>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026726 <AmiBlitz3.ab3@9551>     JSR _Open(A6)
00026728 <AmiBlitz3.ab3@9552>     MOVE.l D0,D7
0002672C <AmiBlitz3.ab3@9553>     BEQ.w exit_loadlibsfile
0002672E <AmiBlitz3.ab3@9554>       MOVE.l D6,D0
00026730 <AmiBlitz3.ab3@9555>       MOVEQ.l #$01,D1
00026736 <AmiBlitz3.ab3@9556>       MOVEA.l _execbase,A6
0002673C <AmiBlitz3.ab3@9557>       MOVE.l mempool,a0
00026740 <AmiBlitz3.ab3@9558>       JSR _AllocPooled(a6)
00026742 <AmiBlitz3.ab3@9559>       MOVE.l D0,D5                                         ;start address
00026744 <AmiBlitz3.ab3@9561>       MOVE.l D7,D1                                         ; handle
00026746 <AmiBlitz3.ab3@9562>       MOVE.l D5,D2                                         ; buffer addr
00026748 <AmiBlitz3.ab3@9563>       MOVE.l D6,D3                                         ; size
0002674E <AmiBlitz3.ab3@9564>       MOVEA.l _dosbase,A6
00026752 <AmiBlitz3.ab3@9565>       JSR _Read(A6)
00026754 <AmiBlitz3.ab3@9566>       MOVE.l D7,D1
00026758 <AmiBlitz3.ab3@9567>       JSR _Close(A6)
0002675A <AmiBlitz3.ab3@9569>       MOVEA.l D5,A0                                        ; buffer addr
0002675C <AmiBlitz3.ab3@9575>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00026760 <AmiBlitz3.ab3@9576>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00026764 <AmiBlitz3.ab3@9577>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00026766 <AmiBlitz3.ab3@9578>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00026768 <AmiBlitz3.ab3@9579>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
0002676A <AmiBlitz3.ab3@9580>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
0002676E <AmiBlitz3.ab3@9581>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00026770 <AmiBlitz3.ab3@9582>           ADD.l D0,D0                                      ;   verdoppele D0
00026772 <AmiBlitz3.ab3@9583>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00026776 <AmiBlitz3.ab3@9584>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
0002677A <AmiBlitz3.ab3@9585>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
0002677E <AmiBlitz3.ab3@9586>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00026780 <AmiBlitz3.ab3@9587>           CMPA.l A0,A2
00026784 <AmiBlitz3.ab3@9588>           BCC.b JL_0_7010                                  ; wenn A0=>A2
0002678A <AmiBlitz3.ab3@9589>             MOVE.l -$8(A2),$20(A1)                         ;
0002678E <AmiBlitz3.ab3@9590>             MOVE.l A2,$24(A1)                              ;
00026792 <AmiBlitz3.ab3@9591> BRA.w JL_0_7010
00026794 <AmiBlitz3.ab3@9594>       MOVE.l D5,D0
00026796 <AmiBlitz3.ab3@9597> RTS
000267C0 <AmiBlitz3.ab3@9601>   !basic
00026834 <AmiBlitz3.ab3@9602>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026868 <AmiBlitz3.ab3@9603>    dos_Delete{tempmapping$}
000268AC <AmiBlitz3.ab3@9604>    fid.l = file_Open{tempmapping$,#file_forcewrite}
000268CA <AmiBlitz3.ab3@9605>   !asm
000268D0 <AmiBlitz3.ab3@9607>   LEA libpointer,A3
000268D6 <AmiBlitz3.ab3@9611>   MOVE.l size_deflibs,D0
000268DC <AmiBlitz3.ab3@9612>   MOVE.l deflib,d1
000268E0 <AmiBlitz3.ab3@9613>   BEQ 'l1
000268E4 <AmiBlitz3.ab3@9614> BRA 'l2
000268EA <AmiBlitz3.ab3@9617>   MOVE.l #str_path_deflibs,D1
000268EE <AmiBlitz3.ab3@9620>   BSR.w load_libsfile
000268F4 <AmiBlitz3.ab3@9621>   MOVE.l D0,ptr_deflibs
000268FA <AmiBlitz3.ab3@9624>   MOVE.l size_acidlibs,D0
00026900 <AmiBlitz3.ab3@9625>   MOVE.l #str_path_acidlibs,D1
00026904 <AmiBlitz3.ab3@9626>   BSR.w load_libsfile
0002690A <AmiBlitz3.ab3@9627>   MOVE.l D0,ptr_acidlibs
0002690C <AmiBlitz3.ab3@9631>   CLR.l (A3)
00026912 <AmiBlitz3.ab3@9632>   MOVE.l A3,ptr_userlibs
00026918 <AmiBlitz3.ab3@9637>   LEA str_libfilename,A0
0002691E <AmiBlitz3.ab3@9638>   LEA str_path_userlibs,A1
00026920 <AmiBlitz3.ab3@9641>     MOVE.b (A1)+,(A0)+
00026924 <AmiBlitz3.ab3@9642>   BNE.b JL_0_708E
00026926 <AmiBlitz3.ab3@9644>   SUBQ.w #1,A0
0002692A <AmiBlitz3.ab3@9645>   MOVE.b #$2F,(A0)+
0002692C <AmiBlitz3.ab3@9648>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00026932 <AmiBlitz3.ab3@9650>   LEA ptr_userlibs_list,A2
00026938 <AmiBlitz3.ab3@9651>   MOVEA.l ptr_userlibs,A3
0002693E <AmiBlitz3.ab3@9652>   MOVEA.l _dosbase,A6
00026940 <AmiBlitz3.ab3@9657>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00026944 <AmiBlitz3.ab3@9658>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00026946 <AmiBlitz3.ab3@9660>       CLR.l (A3)
00026948 <AmiBlitz3.ab3@9661>       ADDQ.w #4,A7
00026972 <AmiBlitz3.ab3@9662>       !basic
00026986 <AmiBlitz3.ab3@9663>       If fid<>-1
00026990 <AmiBlitz3.ab3@9664>         file_Close{fid}
0002699C <AmiBlitz3.ab3@9665>         fid = -1
000269BA <AmiBlitz3.ab3@9667>       !asm
000269BE <AmiBlitz3.ab3@9668> BRA.w process_libraries
000269C0 <AmiBlitz3.ab3@9671>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
000269C4 <AmiBlitz3.ab3@9672>       TST.w $4(A2)                                         ; naechste addresse pruefen
000269C8 <AmiBlitz3.ab3@9673>     BEQ.b JL_0_70BA
000269CC <AmiBlitz3.ab3@9675>     LEA $6(A2),A1
000269CE <AmiBlitz3.ab3@9676>     MOVEA.l (A7),A0
000269D0 <AmiBlitz3.ab3@9679>       MOVE.b (A1)+,(A0)+
000269D4 <AmiBlitz3.ab3@9680>     BNE.w JL_0_70D4
000269D6 <AmiBlitz3.ab3@9684>     MOVE.l A0,-(A7)
000269DC <AmiBlitz3.ab3@9685>     MOVE.l #str_libfilename,D1
000269DE <AmiBlitz3.ab3@9686>     MOVEQ.l #-$02,D2
000269E4 <AmiBlitz3.ab3@9687>     MOVEA.l _dosbase,A6
000269E8 <AmiBlitz3.ab3@9688>      JSR _Lock(A6)
000269EA <AmiBlitz3.ab3@9689>     MOVE.l D0,D1
000269EE <AmiBlitz3.ab3@9690>      BEQ.w JL_0_7156
000269F0 <AmiBlitz3.ab3@9691>     MOVEA.l (A7),A0
000269F6 <AmiBlitz3.ab3@9692>     MOVE.b #$2F,-$1(A0)
000269F8 <AmiBlitz3.ab3@9695>     MOVE.l D1,-(A7)
000269FE <AmiBlitz3.ab3@9696>     MOVE.l #ptr_parameterstore,D2
00026A04 <AmiBlitz3.ab3@9697>     MOVEA.l _dosbase,A6
00026A08 <AmiBlitz3.ab3@9698>     JSR _Examine(A6)
00026A0A <AmiBlitz3.ab3@9699>     TST.l D0
00026A0E <AmiBlitz3.ab3@9700>      BEQ.w JL_0_7150
00026A14 <AmiBlitz3.ab3@9703>     LEA fib_FileName,A0
00026A18 <AmiBlitz3.ab3@9704>     BSR.w check_for_infoextention
00026A1C <AmiBlitz3.ab3@9705>     BEQ.w JL_0_7150
00026A46 <AmiBlitz3.ab3@9708>     !basic
00026ACA <AmiBlitz3.ab3@9709>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00026AE8 <AmiBlitz3.ab3@9710>     !asm
00026AEE <AmiBlitz3.ab3@9711>     MOVE.l #str_libfilename,D1
00026AF2 <AmiBlitz3.ab3@9712>     BSR.w open_userlibfile
00026AF4 <AmiBlitz3.ab3@9715>     MOVE.l (A7)+,D1
00026AFA <AmiBlitz3.ab3@9716>     MOVEA.l _dosbase,A6
00026AFE <AmiBlitz3.ab3@9717>     JSR _UnLock(A6)
00026B00 <AmiBlitz3.ab3@9720>     ADDQ.w #4,A7
00026B04 <AmiBlitz3.ab3@9721> BRA.w JL_0_70BA
00026B0A <AmiBlitz3.ab3@9724>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026B10 <AmiBlitz3.ab3@9725>   MOVEA.l _dosbase,A6
00026B14 <AmiBlitz3.ab3@9726>    JSR _Open(A6)
00026B16 <AmiBlitz3.ab3@9727>   MOVE.l D0,D7
00026B1A <AmiBlitz3.ab3@9728>    BEQ.w exit_userlibfile
00026B1C <AmiBlitz3.ab3@9731>   MOVE.l D7,D1                                             ; filehandle
00026B22 <AmiBlitz3.ab3@9732>   MOVE.l #optstuff,D2                                     ; buffer
00026B28 <AmiBlitz3.ab3@9733>   MOVEA.l _dosbase,A6
00026B2A <AmiBlitz3.ab3@9734>   MOVEQ.l #$20,D3                                          ; size
00026B2E <AmiBlitz3.ab3@9735>   JSR _Read(A6)
00026B34 <AmiBlitz3.ab3@9738>   MOVE.l optstuff+28,D6
00026B36 <AmiBlitz3.ab3@9739>   LSL.l #2,D6
00026B38 <AmiBlitz3.ab3@9740>   MOVE.l D6,D0
00026B3A <AmiBlitz3.ab3@9741>   MOVEQ.l #$01,D1
00026B40 <AmiBlitz3.ab3@9742>   MOVEA.l _execbase,A6
00026B46 <AmiBlitz3.ab3@9743>   MOVE.l mempool,a0
00026B4A <AmiBlitz3.ab3@9744>   JSR _AllocPooled(a6)
00026B4C <AmiBlitz3.ab3@9745>   MOVEA.l D0,A5
00026B52 <AmiBlitz3.ab3@9748>   MOVEA.l _dosbase,A6
00026B54 <AmiBlitz3.ab3@9749>   MOVE.l D7,D1                                             ; filehandle
00026B56 <AmiBlitz3.ab3@9750>   MOVE.l A5,D2                                             ; buffer
00026B58 <AmiBlitz3.ab3@9751>   MOVE.l D6,D3                                             ; size
00026B5C <AmiBlitz3.ab3@9752>    JSR _Read(A6)
00026B5E <AmiBlitz3.ab3@9753>   MOVE.l A5,(A3)
00026B60 <AmiBlitz3.ab3@9755>   MOVE.l A5,d0
00026B62 <AmiBlitz3.ab3@9757>   MOVEA.l A5,A3
00026B66 <AmiBlitz3.ab3@9758>   MOVE.l D6,$6(A5)
00026B6A <AmiBlitz3.ab3@9759>   CLR.l $20(A5)
00026B94 <AmiBlitz3.ab3@9761>   !basic
00026B9E <AmiBlitz3.ab3@9763>   addr_libnum.l = PutD0 + 4
00026BB2 <AmiBlitz3.ab3@9764>   If fid<>-1
00026C52 <AmiBlitz3.ab3@9765>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00026C84 <AmiBlitz3.ab3@9766>     file_WriteLine{fid,currentlib$}
00026CA2 <AmiBlitz3.ab3@9768>   !asm
00026CA4 <AmiBlitz3.ab3@9771>   MOVE.l D7,D1                                             ; filehandle
00026CAA <AmiBlitz3.ab3@9772>   MOVE.l #optstuff,D2                                     ; buffer
00026CAC <AmiBlitz3.ab3@9773>   MOVEQ.l #$0C,D3                                          ; size
00026CB2 <AmiBlitz3.ab3@9774>   MOVEA.l _dosbase,A6
00026CB6 <AmiBlitz3.ab3@9775>    JSR _Read(A6)
00026CBC <AmiBlitz3.ab3@9777>   CMP.l #$C,D0
00026CC0 <AmiBlitz3.ab3@9778>    BCS.w close_and_exit_userlibfile
00026CC6 <AmiBlitz3.ab3@9781>   MOVE.l optstuff+4,D0
00026CCA <AmiBlitz3.ab3@9782>   MOVE.l D0,$20(A5)
00026CCC <AmiBlitz3.ab3@9783>   LSL.l #2,D0
00026CCE <AmiBlitz3.ab3@9784>   MOVE.l D0,D5
00026CD0 <AmiBlitz3.ab3@9785>   MOVEQ.l #$01,D1
00026CD6 <AmiBlitz3.ab3@9786>   MOVEA.l _execbase,A6
00026CDC <AmiBlitz3.ab3@9787>   MOVE.l mempool,a0
00026CE0 <AmiBlitz3.ab3@9788>   JSR _AllocPooled(a6)
00026CE6 <AmiBlitz3.ab3@9790>   MOVEA.l _dosbase,A6
00026CEA <AmiBlitz3.ab3@9791>   MOVE.l D0,$24(A5)
00026CEC <AmiBlitz3.ab3@9792>   MOVE.l D7,D1
00026CEE <AmiBlitz3.ab3@9793>   MOVE.l D0,D2
00026CF0 <AmiBlitz3.ab3@9794>   MOVE.l D5,D3
00026CF4 <AmiBlitz3.ab3@9795>   JSR _Read(A6)
00026CF6 <AmiBlitz3.ab3@9798>   MOVE.l D7,D1
00026CFC <AmiBlitz3.ab3@9799>   MOVEA.l _dosbase,A6
00026D00 <AmiBlitz3.ab3@9800> JMP _Close(A6)
00026D02 <AmiBlitz3.ab3@9803> RTS
00026D08 <AmiBlitz3.ab3@9809>   CLR.w number_of_objects
00026D0E <AmiBlitz3.ab3@9810>   MOVEA.l end_of_tokenlist,A3
00026D14 <AmiBlitz3.ab3@9811>   MOVEA.l libpointer,A2
00026D18 <AmiBlitz3.ab3@9814>     CMPA.w #$0,A2
00026D1C <AmiBlitz3.ab3@9815>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00026D20 <AmiBlitz3.ab3@9817>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00026D24 <AmiBlitz3.ab3@9818>     BMI.w JL_0_7226
00026D26 <AmiBlitz3.ab3@9819>       LSL.w #7,D7
00026D28 <AmiBlitz3.ab3@9820>       ADDQ.w #1,D7
00026D2C <AmiBlitz3.ab3@9821>       MOVE.w D7,$E(A2)
00026D30 <AmiBlitz3.ab3@9824>     LEA $30(A2),A1
00026D36 <AmiBlitz3.ab3@9825>     LEA temp1,A4
00026D38 <AmiBlitz3.ab3@9828>       MOVE.w (A1),D0
00026D3C <AmiBlitz3.ab3@9829>       BMI.w JL_0_72AE
00026D3E <AmiBlitz3.ab3@9830>       MOVE.l A1,(A4)
00026D40 <AmiBlitz3.ab3@9831>       MOVEA.l A1,A4
00026D42 <AmiBlitz3.ab3@9832>       ADDQ.w #2,A4
00026D44 <AmiBlitz3.ab3@9833>       ADDQ.w #6,A1
00026D48 <AmiBlitz3.ab3@9834>       CMP.w #$8,D0
00026D4C <AmiBlitz3.ab3@9835>       BEQ.w JL_0_7290
00026D50 <AmiBlitz3.ab3@9836>         ANDI.w #$F,D0
00026D54 <AmiBlitz3.ab3@9837>         BNE.w JL_0_725C
00026D58 <AmiBlitz3.ab3@9838>           BSR.w skiplibreg
00026D5C <AmiBlitz3.ab3@9839>           LEA $C(A1),A1
00026D5E <AmiBlitz3.ab3@9840>           ADDQ.w #1,D7
00026D62 <AmiBlitz3.ab3@9841> BRA.w JL_0_7230
00026D66 <AmiBlitz3.ab3@9844>     BTST #$2,D0
00026D6A <AmiBlitz3.ab3@9845>     BEQ.w JL_0_7274
00026D6C <AmiBlitz3.ab3@9846>       ADDQ.w #4,A1
00026D6E <AmiBlitz3.ab3@9849>         TST.b (A1)+
00026D72 <AmiBlitz3.ab3@9850>       BPL.w JL_0_7266
00026D76 <AmiBlitz3.ab3@9851>       BSR.w aligna1
00026D7A <AmiBlitz3.ab3@9852> BRA.w JL_0_7290
00026D7C <AmiBlitz3.ab3@9855>       MOVE.w (A1)+,D0
00026D80 <AmiBlitz3.ab3@9856>       BMI.w JL_0_7290
00026D84 <AmiBlitz3.ab3@9857>       ANDI.w #$FF,D0
00026D86 <AmiBlitz3.ab3@9858>       ADDA.w D0,A1
00026D8A <AmiBlitz3.ab3@9859>       BSR.w aligna1
00026D8E <AmiBlitz3.ab3@9860>       BSR.w skiplibreg
00026D92 <AmiBlitz3.ab3@9861>       LEA $C(A1),A1
00026D96 <AmiBlitz3.ab3@9862> BRA.w JL_0_7274
00026D98 <AmiBlitz3.ab3@9865>     MOVE.l A1,(A3)
00026D9A <AmiBlitz3.ab3@9866>     MOVEA.l A1,A3
00026D9C <AmiBlitz3.ab3@9867>     ADDQ.w #4,A1
00026D9E <AmiBlitz3.ab3@9868>     MOVE.w D7,(A1)+
00026DA0 <AmiBlitz3.ab3@9871>       TST.b (A1)+
00026DA4 <AmiBlitz3.ab3@9872>     BNE.w JL_0_7298
00026DA6 <AmiBlitz3.ab3@9875>       TST.b (A1)+
00026DAA <AmiBlitz3.ab3@9876>     BNE.w JL_0_729E
00026DAE <AmiBlitz3.ab3@9878>     BSR.w aligna1
00026DB0 <AmiBlitz3.ab3@9879>     ADDQ.w #1,D7
00026DB4 <AmiBlitz3.ab3@9880> BRA.w JL_0_7230
00026DB8 <AmiBlitz3.ab3@9883>     TST.w $4(A2)
00026DBC <AmiBlitz3.ab3@9884>      BMI.w JL_0_72BA
00026DC0 <AmiBlitz3.ab3@9885>     MOVE.w D7,$10(A2)
00026DC2 <AmiBlitz3.ab3@9888>     ADDQ.w #2,A1
00026DC4 <AmiBlitz3.ab3@9889>     TST.l (A1)+
00026DC8 <AmiBlitz3.ab3@9890>      BEQ.w JL_0_72CC
00026DCE <AmiBlitz3.ab3@9891>     ADDQ.w #1,number_of_objects
00026DD2 <AmiBlitz3.ab3@9892>     LEA $16(A1),A1
00026DD4 <AmiBlitz3.ab3@9895>     SUBA.l A2,A1
00026DD8 <AmiBlitz3.ab3@9896>     MOVE.l A1,$12(A2)
00026DDA <AmiBlitz3.ab3@9897>     MOVEA.l (A2),A2
00026DDE <AmiBlitz3.ab3@9898> BRA.w JL_0_720E
00026DE0 <AmiBlitz3.ab3@9901>   CLR.l (A3)
00026DE6 <AmiBlitz3.ab3@9902> 
00026DEC <AmiBlitz3.ab3@9903>   MOVE.l A7,errstack
00026DF6 <AmiBlitz3.ab3@9904>   MOVE.l #AL_0_730E,errcont
00026DFE <AmiBlitz3.ab3@9905>   MOVE.w #$FFFF,ezerr
00026E02 <AmiBlitz3.ab3@9906>   MOVE.w #$FFFA,D1
00026E06 <AmiBlitz3.ab3@9907>    BSR.w JL_0_6F38
00026E0C <AmiBlitz3.ab3@9908>   MOVE.l A1,tempvm
00026E10 <AmiBlitz3.ab3@9909>   MOVE.w #$FDA7,D1
00026E14 <AmiBlitz3.ab3@9910>    BSR.w JL_0_6F38
00026E1A <AmiBlitz3.ab3@9911>   MOVE.l A1,ffplib
00026E1C <AmiBlitz3.ab3@9914> RTS
00026E20 <AmiBlitz3.ab3@9917> ffplib:  Ds.l 1
00026E22 <AmiBlitz3.ab3@9921>     TST.w (A1)+
00026E26 <AmiBlitz3.ab3@9922>     BEQ.w JL_0_7320
00026E28 <AmiBlitz3.ab3@9923>     ADDQ.w #2,A1
00026E2C <AmiBlitz3.ab3@9924> BRA.w skiplibreg
00026E2E <AmiBlitz3.ab3@9927> RTS
00026E30 <AmiBlitz3.ab3@9931>   EXG.l A1,A0
00026E34 <AmiBlitz3.ab3@9932>   BSR.w aligna1
00026E36 <AmiBlitz3.ab3@9933>   EXG.l A1,A0
00026E38 <AmiBlitz3.ab3@9934> RTS
00026E3A <AmiBlitz3.ab3@9937>   EXG.l D0,A1
00026E3C <AmiBlitz3.ab3@9938>   ADDQ.l #1,D0
00026E40 <AmiBlitz3.ab3@9939>   BCLR #$0,D0
00026E42 <AmiBlitz3.ab3@9940>   EXG.l D0,A1
00026E44 <AmiBlitz3.ab3@9941> RTS
00026E4A <AmiBlitz3.ab3@9945>   MOVEA.l _execbase,A6
00026E50 <AmiBlitz3.ab3@9946>   MOVEA.l ptr_userlibs,A2
00026E52 <AmiBlitz3.ab3@9947>   MOVE.l (A2),D0
00026E54 <AmiBlitz3.ab3@9948>   CLR.l (A2)
00026E56 <AmiBlitz3.ab3@9949>   MOVEA.l D0,A2
00026E5A <AmiBlitz3.ab3@9952>     CMPA.w #$0,A2
00026E5E <AmiBlitz3.ab3@9953>     BEQ.w free_userlib
00026E62 <AmiBlitz3.ab3@9955>     MOVE.l $20(A2),D0
00026E66 <AmiBlitz3.ab3@9956>     BEQ.b JL_0_7360
00026E68 <AmiBlitz3.ab3@9957>       LSL.l #2,D0
00026E6E <AmiBlitz3.ab3@9958>       MOVE.l mempool,a0
00026E72 <AmiBlitz3.ab3@9959>       MOVEA.l $24(A2),A1
00026E76 <AmiBlitz3.ab3@9960>       JSR _FreePooled(A6)
00026E78 <AmiBlitz3.ab3@9963>     MOVEA.l A2,A1
00026E7C <AmiBlitz3.ab3@9964>     MOVE.l $6(A1),D0
00026E82 <AmiBlitz3.ab3@9965>     MOVE.l mempool,a0
00026E84 <AmiBlitz3.ab3@9966>     MOVEA.l (A2),A2
00026E8A <AmiBlitz3.ab3@9967>     MOVEA.l _execbase,A6
00026E8E <AmiBlitz3.ab3@9968>     JSR _FreePooled(A6)
00026E92 <AmiBlitz3.ab3@9969> BRA.w JL_0_7348
00026E96 <AmiBlitz3.ab3@9973>   BSR.w free_userlibs
00026E9C <AmiBlitz3.ab3@9974>   MOVEA.l _execbase,A6
00026EA2 <AmiBlitz3.ab3@9975>   CLR.l libpointer
00026EA8 <AmiBlitz3.ab3@9976>   MOVEA.l end_of_tokenlist,A0
00026EAA <AmiBlitz3.ab3@9977>   CLR.l (A0)
00026EB0 <AmiBlitz3.ab3@9979>   MOVE.l size_acidlibs,D0
00026EB4 <AmiBlitz3.ab3@9980>   BEQ.b JL_0_73A2
00026EBA <AmiBlitz3.ab3@9981>     MOVE.l ptr_acidlibs,D1
00026EBE <AmiBlitz3.ab3@9982>     BEQ.b JL_0_73A2
00026EC4 <AmiBlitz3.ab3@9983>       CLR.l ptr_acidlibs
00026EC6 <AmiBlitz3.ab3@9984>       MOVEA.l D1,A1
00026ECC <AmiBlitz3.ab3@9985>       MOVE.l mempool,a0
00026ED2 <AmiBlitz3.ab3@9986>       MOVEA.l _execbase,A6
00026ED6 <AmiBlitz3.ab3@9987>       JSR _FreePooled(A6)                                 ; free acidlibs
00026EDC <AmiBlitz3.ab3@9990>   MOVE.l size_deflibs,D0
00026EE0 <AmiBlitz3.ab3@9991>   BEQ.b JL_0_73BE
00026EE6 <AmiBlitz3.ab3@9992>     MOVE.l ptr_deflibs,D1
00026EEA <AmiBlitz3.ab3@9993>     BEQ.b JL_0_73BE
00026EF0 <AmiBlitz3.ab3@9994>       CLR.l ptr_deflibs                                    ; d0: memorySize
00026EF2 <AmiBlitz3.ab3@9995>       MOVEA.l D1,A1                                        ; a1: memory
00026EF8 <AmiBlitz3.ab3@9996>       MOVE.l mempool,a0                                    ; a0: poolHeader
00026EFE <AmiBlitz3.ab3@9997>       MOVEA.l _execbase,A6
00026F02 <AmiBlitz3.ab3@9998>       JSR _FreePooled(A6)                                  ; free deflibs
00026F04 <AmiBlitz3.ab3@10001> RTS
00026F0A <AmiBlitz3.ab3@10005>   MOVEA.l currentmacroaddr,A0
00026F0C <AmiBlitz3.ab3@10006>   MOVEA.l (A0),A2
00026F0E <AmiBlitz3.ab3@10007>   CLR.l (A0)
00026F14 <AmiBlitz3.ab3@10008>   MOVEA.l _execbase,A6
00026F18 <AmiBlitz3.ab3@10011>     CMPA.w #$0,A2
00026F1C <AmiBlitz3.ab3@10012>     BEQ.w JL_0_73FA
00026F1E <AmiBlitz3.ab3@10013>     MOVEQ.l #$00,D0
00026F22 <AmiBlitz3.ab3@10014>     MOVE.w $8(A2),D0
00026F26 <AmiBlitz3.ab3@10015>     BEQ.w JL_0_73E8
00026F2A <AmiBlitz3.ab3@10016>     MOVEA.l $4(A2),A1
00026F30 <AmiBlitz3.ab3@10017>     MOVE.l mempool,a0
00026F34 <AmiBlitz3.ab3@10018>     JSR _FreePooled(A6)
00026F36 <AmiBlitz3.ab3@10021>     MOVEA.l A2,A1
00026F38 <AmiBlitz3.ab3@10022>     MOVEA.l (A2),A2
00026F3A <AmiBlitz3.ab3@10023>     MOVEQ.l #$00,D0
00026F3E <AmiBlitz3.ab3@10024>     MOVE.b $C(A1),D0
00026F44 <AmiBlitz3.ab3@10025>     MOVE.l mempool2,a0
00026F48 <AmiBlitz3.ab3@10026>     JSR _FreePooled(A6)
00026F4C <AmiBlitz3.ab3@10027> BRA.w JL_0_73CE
00026F4E <AmiBlitz3.ab3@10030> RTS
00026F54 <AmiBlitz3.ab3@10034>   MOVEA.l templabel,A2
00026F5A <AmiBlitz3.ab3@10035>   CLR.l templabel
00026F5C <AmiBlitz3.ab3@10036> RTS
00026F62 <AmiBlitz3.ab3@10039>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00026F66 <AmiBlitz3.ab3@10042>     CMPA.w #$0,A2
00026F6A <AmiBlitz3.ab3@10043>     BEQ.w JL_0_7426
00026F6C <AmiBlitz3.ab3@10044>     MOVEQ.l #$00,D0
00026F70 <AmiBlitz3.ab3@10045>     MOVE.b $E(A2),D0                                       ;labeltemp
00026F72 <AmiBlitz3.ab3@10046>     MOVEA.l A2,A1
00026F74 <AmiBlitz3.ab3@10047>     MOVEA.l (A2),A2
00026F7A <AmiBlitz3.ab3@10048>     MOVE.l mempool2,a0
00026F7E <AmiBlitz3.ab3@10050> BRA.w JL_0_740C
00026F80 <AmiBlitz3.ab3@10053> RTS
00026F86 <AmiBlitz3.ab3@10057>   MOVEA.l data1,A4
00026F8C <AmiBlitz3.ab3@10058>   CMPA.l data2at,A4
00026F90 <AmiBlitz3.ab3@10059>   BCC.w JL_0_7442
00026F92 <AmiBlitz3.ab3@10060>     MOVE.b D1,(A4)+
00026F98 <AmiBlitz3.ab3@10061>     MOVE.l A4,data1
00026F9A <AmiBlitz3.ab3@10062> RTS
00026FA2 <AmiBlitz3.ab3@10065>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00026FA8 <AmiBlitz3.ab3@10066>   ADDQ.l #1,data1
00026FAA <AmiBlitz3.ab3@10067> RTS
00026FAC <AmiBlitz3.ab3@10071>   SWAP D1
00026FB0 <AmiBlitz3.ab3@10072>   BSR.w pokedata1
00026FB2 <AmiBlitz3.ab3@10073>   SWAP D1
00026FB8 <AmiBlitz3.ab3@10076>   MOVEA.l data1,A4
00026FBE <AmiBlitz3.ab3@10077>   CMPA.l data2at,A4
00026FC2 <AmiBlitz3.ab3@10078>    BCC.w JL_0_7474
00026FC4 <AmiBlitz3.ab3@10079>   MOVE.w D1,(A4)+
00026FCA <AmiBlitz3.ab3@10080>   MOVE.l A4,data1
00026FCC <AmiBlitz3.ab3@10081> RTS
00026FD4 <AmiBlitz3.ab3@10084>   MOVE.w #$FFFF,dontwrite
00026FDA <AmiBlitz3.ab3@10085>   ADDQ.l #2,data1
00026FDC <AmiBlitz3.ab3@10086> RTS
00026FE2 <AmiBlitz3.ab3@10090>   MOVE.l data1,D3                                      ;write local string/type allocs
00026FE4 <AmiBlitz3.ab3@10091>   MOVEQ.l #$00,D4
00026FE8 <AmiBlitz3.ab3@10094>   CMPA.w #$0,A2
00026FEC <AmiBlitz3.ab3@10095>    BEQ.w JL_0_74CAc
00026FF0 <AmiBlitz3.ab3@10096>   TST.w $6(A2)
00026FF4 <AmiBlitz3.ab3@10097>    BNE.w JL_0_74C4c
00026FF8 <AmiBlitz3.ab3@10098>   MOVEA.l $A(A2),A3
00027000 <AmiBlitz3.ab3@10099>   CMPI.l #$100,$4(A3)
00027004 <AmiBlitz3.ab3@10100>    BCS.w JL_0_74C4c
00027008 <AmiBlitz3.ab3@10101>   MOVE.w $4(A2),D1
0002700C <AmiBlitz3.ab3@10102>    BSR.w pokedata1
00027010 <AmiBlitz3.ab3@10103>   MOVE.w $8(A3),D1
00027014 <AmiBlitz3.ab3@10104>    BSR.w pokedata1
00027016 <AmiBlitz3.ab3@10105>   ADDQ.w #1,D4
00027018 <AmiBlitz3.ab3@10108>    MOVEA.l (A2),A2
0002701C <AmiBlitz3.ab3@10109> BRA.w JL_0_7492c
0002701E <AmiBlitz3.ab3@10112>    TST.w D4
00027022 <AmiBlitz3.ab3@10113>    BEQ.w JL_0_74E0
00027026 <AmiBlitz3.ab3@10114>   MOVE.w #$FF37,D1
0002702A <AmiBlitz3.ab3@10115>    BSR.w uselib
0002702E <AmiBlitz3.ab3@10116>   MOVE.w #$FFFA,D1
00027032 <AmiBlitz3.ab3@10117> BRA.w uselib
00027038 <AmiBlitz3.ab3@10125>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
0002703E <AmiBlitz3.ab3@10128>   MOVE.l data1,D3
00027040 <AmiBlitz3.ab3@10129>   MOVEQ.l #$00,D4
00027046 <AmiBlitz3.ab3@10130>   TST.b iserror
0002704A <AmiBlitz3.ab3@10131>   BEQ JL_0_7492
0002704C <AmiBlitz3.ab3@10132>   RTS
00027050 <AmiBlitz3.ab3@10134>    CMPA.w #$0,A2
00027054 <AmiBlitz3.ab3@10135>    BEQ.w JL_0_74CA
00027058 <AmiBlitz3.ab3@10136>   TST.w $6(A2)
0002705C <AmiBlitz3.ab3@10137>    BNE.w JL_0_74C4
00027060 <AmiBlitz3.ab3@10138>   MOVEA.l $A(A2),A3
00027068 <AmiBlitz3.ab3@10139>   CMPI.l #$100,$4(A3)
0002706C <AmiBlitz3.ab3@10140>    BCS.w JL_0_74C4
00027070 <AmiBlitz3.ab3@10141>   MOVE.w $4(A2),D1
00027074 <AmiBlitz3.ab3@10142>    BSR.w pokedata1
00027078 <AmiBlitz3.ab3@10143>   MOVE.w $8(A3),D1
0002707C <AmiBlitz3.ab3@10144>    BSR.w pokedata1
0002707E <AmiBlitz3.ab3@10145>   ADDQ.w #1,D4
00027080 <AmiBlitz3.ab3@10148>   MOVEA.l (A2),A2
00027084 <AmiBlitz3.ab3@10149> BRA.w JL_0_7492
0002708A <AmiBlitz3.ab3@10153>   MOVEA.l sharebase,A2
0002708E <AmiBlitz3.ab3@10156>   CMPA.w #$0,A2
00027092 <AmiBlitz3.ab3@10157>    BEQ.w JL_0_74CAb
00027096 <AmiBlitz3.ab3@10159>   TST.w $6(A2)
0002709A <AmiBlitz3.ab3@10160>    BNE.w JL_0_74C4b
0002709E <AmiBlitz3.ab3@10161>   MOVEA.l $A(A2),A3
000270A6 <AmiBlitz3.ab3@10162>   CMPI.l #$100,$4(A3)
000270AA <AmiBlitz3.ab3@10163>    BCS.w JL_0_74C4b
000270AE <AmiBlitz3.ab3@10164>   MOVE.w $4(A2),D1
000270B2 <AmiBlitz3.ab3@10165>    BSR.w pokedata1
000270B6 <AmiBlitz3.ab3@10166>   MOVE.w $8(A3),D1
000270BA <AmiBlitz3.ab3@10167>    BSR.w pokedata1
000270BC <AmiBlitz3.ab3@10168>   ADDQ.w #1,D4
000270BE <AmiBlitz3.ab3@10171>   MOVEA.l (A2),A2
000270C2 <AmiBlitz3.ab3@10172> BRA.w JL_0_7492b
000270C4 <AmiBlitz3.ab3@10175>    TST.w D4
000270C8 <AmiBlitz3.ab3@10176>    BEQ.w JL_0_74E0
000270CC <AmiBlitz3.ab3@10177>   MOVE.w #$FF37,D1
000270D0 <AmiBlitz3.ab3@10178>    BSR.w uselib                                            ;use statics lib
000270D4 <AmiBlitz3.ab3@10179>   MOVE.w #$FFFA,D1                                         ;use memlib
000270D8 <AmiBlitz3.ab3@10180> BRA.w uselib
000270DA <AmiBlitz3.ab3@10183> RTS
000270E0 <AmiBlitz3.ab3@10187>   MOVE.w numtoa2,D1
000270E4 <AmiBlitz3.ab3@10188>    BSR.w writeword
000270E8 <AmiBlitz3.ab3@10189>    BSR.w addoff
000270EA <AmiBlitz3.ab3@10190>   MOVE.l D3,D1
000270EE <AmiBlitz3.ab3@10191>    BSR.w writelong
000270F0 <AmiBlitz3.ab3@10192>   SUBQ.w #1,D4
000270F6 <AmiBlitz3.ab3@10193>   MOVE.w D4,endarray+2
000270FC <AmiBlitz3.ab3@10194>   MOVE.l endarray,D1
00027100 <AmiBlitz3.ab3@10195> BRA.w writelong
00027102 <AmiBlitz3.ab3@10199>   MOVE.l D3,-(A7)
00027108 <AmiBlitz3.ab3@10202>   MOVEA.l _dosbase,A6
0002710C <AmiBlitz3.ab3@10203>   JSR _Write(a6)
0002710E <AmiBlitz3.ab3@10205>   CMP.l (A7)+,D0
00027112 <AmiBlitz3.ab3@10206>    BNE.w JL_0_7516
00027114 <AmiBlitz3.ab3@10207> RTS
00027116 <AmiBlitz3.ab3@10210>   MOVE.l D7,D1
0002711C <AmiBlitz3.ab3@10212>   MOVEA.l _dosbase,A6
00027120 <AmiBlitz3.ab3@10213>   JSR _Close(a6)
00027126 <AmiBlitz3.ab3@10216> JMP error_create_exe
0002712C <AmiBlitz3.ab3@10225> 
00027132 <AmiBlitz3.ab3@10226>   MOVE.l A7,errstack
00027136 <AmiBlitz3.ab3@10227>   MOVEM.l d2-d7/a2-a6,-(a7)
00027140 <AmiBlitz3.ab3@10228>   MOVE.l #AL_0_7790,errcont
00027146 <AmiBlitz3.ab3@10229>    JSR call_setpointerbusy
0002714E <AmiBlitz3.ab3@10230>   MOVE.w #$FFFF,anyerrs
00027158 <AmiBlitz3.ab3@10231>   CMP.l #-1,chipstart
0002715C <AmiBlitz3.ab3@10232>   BEQ 'l01
00027162 <AmiBlitz3.ab3@10233>   MOVE.l chipend,d1
00027164 <AmiBlitz3.ab3@10234>   ADDQ.l #3,d1
0002716A <AmiBlitz3.ab3@10235>   AND.l #$fffffffc,d1                                      ;bug
00027170 <AmiBlitz3.ab3@10236>   MOVE.l d1,chipend
00027172 <AmiBlitz3.ab3@10237>   MOVE.l d1,a1
00027178 <AmiBlitz3.ab3@10238>   MOVE.l chipstart,a0
0002717A <AmiBlitz3.ab3@10239>   MOVE.l a1,d1
0002717C <AmiBlitz3.ab3@10240>   SUB.l a0,d1
00027182 <AmiBlitz3.ab3@10241>   MOVE.l d1,chipsize
0002718C <AmiBlitz3.ab3@10244>   CMP.l #-1,bssstart
00027190 <AmiBlitz3.ab3@10245>   BEQ 'l11
00027196 <AmiBlitz3.ab3@10246>   MOVE.l realbssend,a1
0002719C <AmiBlitz3.ab3@10247>   MOVE.l bssstart,a0
0002719E <AmiBlitz3.ab3@10248>   MOVE.l a1,d1
000271A0 <AmiBlitz3.ab3@10249>   SUB.l a0,d1
000271A6 <AmiBlitz3.ab3@10250>   MOVE.l d1,bsssize
000271AA <AmiBlitz3.ab3@10251>   BEQ 'l11
000271AC <AmiBlitz3.ab3@10254>   TST.b (a0)+
000271B0 <AmiBlitz3.ab3@10255>   BEQ 'l31
000271B6 <AmiBlitz3.ab3@10256>   TST.b debugmode
000271BA <AmiBlitz3.ab3@10257>   BEQ 'l1
000271C0 <AmiBlitz3.ab3@10258>   TST.b exdebug
000271C4 <AmiBlitz3.ab3@10259>   BNE 'l31
000271CA <AmiBlitz3.ab3@10262>   MOVE.l #nodata,-(a7)
000271D0 <AmiBlitz3.ab3@10263> JMP handle_compileerror
000271D2 <AmiBlitz3.ab3@10266>   CMP.l a0,a1
000271D6 <AmiBlitz3.ab3@10267>   BGT 'l32
000271DC <AmiBlitz3.ab3@10268>   MOVE.l bssend,d1
000271DE <AmiBlitz3.ab3@10269>   ADDQ.l #3,d1
000271E4 <AmiBlitz3.ab3@10270>   AND.l #$fffffffc,d1                                      ;bug
000271EA <AmiBlitz3.ab3@10271>   MOVE.l d1,bssend
000271EC <AmiBlitz3.ab3@10272>   MOVE.l d1,a1
000271F2 <AmiBlitz3.ab3@10273>   MOVE.l bssstart,a0
000271F4 <AmiBlitz3.ab3@10274>   MOVE.l a1,d1
000271F6 <AmiBlitz3.ab3@10275>   SUB.l a0,d1
000271FC <AmiBlitz3.ab3@10276>   MOVE.l d1,bsssize
00027200 <AmiBlitz3.ab3@10279>   MOVEM.l d5-d7/d3,-(a7)
00027206 <AmiBlitz3.ab3@10280>   MOVE.w dontwrite,D1
0002720A <AmiBlitz3.ab3@10281>   BNE.w JL_0_757C
00027210 <AmiBlitz3.ab3@10282>   MOVE.l chipsize,d5
00027216 <AmiBlitz3.ab3@10283>   MOVE.l bsssize,d3
0002721C <AmiBlitz3.ab3@10284>   MOVE.l chipstart,d7
00027222 <AmiBlitz3.ab3@10285>   MOVE.l bssstart,d6
00027228 <AmiBlitz3.ab3@10286>   MOVEA.l hunkoffsetbase,A2
0002722E <AmiBlitz3.ab3@10287>   MOVEA.l destbufferstart,A1
00027230 <AmiBlitz3.ab3@10288>   MOVE.l A1,D2
00027236 <AmiBlitz3.ab3@10289>   ADD.l noinits,D2
0002723C <AmiBlitz3.ab3@10290>   CLR.l hunkoffsetnum
00027240 <AmiBlitz3.ab3@10293>   CMPA.w #$0,A2
00027244 <AmiBlitz3.ab3@10294>    BEQ.w JL_0_757C
00027248 <AmiBlitz3.ab3@10295>   MOVE.l $4(A2),D0
0002724C <AmiBlitz3.ab3@10296>    LEA $0(a1,d0.l),a0
0002724E <AmiBlitz3.ab3@10297>    MOVE.l (a0),d1
00027250 <AmiBlitz3.ab3@10298>   TST.l d1
00027254 <AmiBlitz3.ab3@10299>    BMI.w 'lm1
0002725C <AmiBlitz3.ab3@10300>   MOVE.b #0,newhunk
00027266 <AmiBlitz3.ab3@10301>   CMP.l #-1,chipstart
0002726A <AmiBlitz3.ab3@10302>   BEQ 'l10
00027270 <AmiBlitz3.ab3@10303>   CMP.l chipstart,d1
00027274 <AmiBlitz3.ab3@10304>   BLT 'l10
0002727C <AmiBlitz3.ab3@10305>   MOVE.b #1,newhunk
00027282 <AmiBlitz3.ab3@10306>   CMP.l chipend,d1
00027286 <AmiBlitz3.ab3@10307>   BGE 'l110
00027288 <AmiBlitz3.ab3@10308>   SUB.l d7,(a0)
00027290 <AmiBlitz3.ab3@10309>   ADD.l #$80000000,4(a2)
00027294 <AmiBlitz3.ab3@10310> BRA JL_0_7576
00027298 <AmiBlitz3.ab3@10313>   SUB.l d5,0(a0)
000272A2 <AmiBlitz3.ab3@10316>   CMP.l #-1,bssstart
000272A6 <AmiBlitz3.ab3@10317>     BEQ 'l11
000272AC <AmiBlitz3.ab3@10318>   CMP.l bssstart,d1
000272B0 <AmiBlitz3.ab3@10319>   BLT 'l11
000272B6 <AmiBlitz3.ab3@10320>   CMP.l bssend,d1
000272BA <AmiBlitz3.ab3@10321>   BGE 'l111
000272C0 <AmiBlitz3.ab3@10322>   TST.b newhunk
000272C4 <AmiBlitz3.ab3@10323>   BEQ 'ln1
000272C6 <AmiBlitz3.ab3@10324>   ADD.l d5,(a0)
000272C8 <AmiBlitz3.ab3@10327>   SUB.l d6,(a0)
000272D0 <AmiBlitz3.ab3@10328>   ADD.l #$40000000,4(a2)
000272D4 <AmiBlitz3.ab3@10329> BRA JL_0_7576
000272D8 <AmiBlitz3.ab3@10332>   SUB.l d3,0(a0)
000272DA <AmiBlitz3.ab3@10335>   SUB.l D2,(A0)
000272E0 <AmiBlitz3.ab3@10338>   ADDQ.l #1,hunkoffsetnum
000272E2 <AmiBlitz3.ab3@10341>    MOVEA.l (A2),A2
000272E6 <AmiBlitz3.ab3@10342> BRA.w JL_0_755E
000272EA <AmiBlitz3.ab3@10346>   MOVEM.l (a7)+,d5-d7/d3
000272F0 <AmiBlitz3.ab3@10347>   MOVE.l ptr_newexefilename,D1
000272F6 <AmiBlitz3.ab3@10348>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000272FC <AmiBlitz3.ab3@10349>   MOVEA.l _dosbase,A6
00027300 <AmiBlitz3.ab3@10350>    JSR _Open(A6)
00027302 <AmiBlitz3.ab3@10351>   MOVE.l D0,D7
00027306 <AmiBlitz3.ab3@10352>    BEQ.w execerr
0002730C <AmiBlitz3.ab3@10353>   MOVE.l objlen,D0
00027312 <AmiBlitz3.ab3@10354>   SUB.l #moremem,d0
00027318 <AmiBlitz3.ab3@10355>   SUB.l noinits,D0
00027322 <AmiBlitz3.ab3@10356>   CMP.l #-1,bssstart
00027326 <AmiBlitz3.ab3@10357>   BEQ 'l60
0002732C <AmiBlitz3.ab3@10358>   SUB.l bsssize,d0
00027332 <AmiBlitz3.ab3@10359>   SUB.l chipsize,d0
00027336 <AmiBlitz3.ab3@10360> BRA.s 'l61
00027340 <AmiBlitz3.ab3@10363>   CMP.l #-1,chipstart
00027344 <AmiBlitz3.ab3@10364>   BEQ 'l61
0002734A <AmiBlitz3.ab3@10365>   SUB.l bsssize,d0
00027350 <AmiBlitz3.ab3@10366>   SUB.l chipsize,d0
00027352 <AmiBlitz3.ab3@10369>   ADDQ.l #3,D0
00027354 <AmiBlitz3.ab3@10370>   LSR.l #2,D0
0002735A <AmiBlitz3.ab3@10371>   MOVE.l D0,tstsize1
00027360 <AmiBlitz3.ab3@10372>   MOVE.l D0,tstsize2
00027362 <AmiBlitz3.ab3@10373>   MOVE.l D7,D1
00027368 <AmiBlitz3.ab3@10374>   MOVE.l #tsthead,D2                                      ;hunkbegin
0002736A <AmiBlitz3.ab3@10375>   MOVEQ.l #$20,D3
00027374 <AmiBlitz3.ab3@10376>   CMP.l #-1,bssstart
00027378 <AmiBlitz3.ab3@10377>   BEQ 'lb1
00027382 <AmiBlitz3.ab3@10378>   CMP.l #-1,chipstart
00027386 <AmiBlitz3.ab3@10379>   BEQ 'lb1
00027390 <AmiBlitz3.ab3@10380>   MOVE.l #1,bssnum
0002739A <AmiBlitz3.ab3@10381>   MOVE.l #2,chipnum
0002739C <AmiBlitz3.ab3@10382>   MOVEQ.l #$28,D3
000273A2 <AmiBlitz3.ab3@10383>   MOVE.l bsssize,d2
000273A4 <AmiBlitz3.ab3@10384>   ADDQ.l #3,d2
000273A6 <AmiBlitz3.ab3@10385>   ASR.l #2,d2
000273AC <AmiBlitz3.ab3@10386>   MOVE.l d2,hunkend+8
000273B2 <AmiBlitz3.ab3@10387>   MOVE.l d2,bsssize3
000273B8 <AmiBlitz3.ab3@10388>   MOVE.l chipsize,d2
000273BA <AmiBlitz3.ab3@10389>   ADDQ.l #3,d2
000273BC <AmiBlitz3.ab3@10390>   ASR.l #2,d2
000273C2 <AmiBlitz3.ab3@10391>   MOVE.l d2,chipsize2
000273CC <AmiBlitz3.ab3@10392>   ADD.l #$40000000,chipsize2
000273D2 <AmiBlitz3.ab3@10393>   MOVE.l d2,hunkend2+8
000273D8 <AmiBlitz3.ab3@10394>   MOVE.l D0,tstsize1c
000273DE <AmiBlitz3.ab3@10395>   MOVE.l D0,tstsize2c
000273E4 <AmiBlitz3.ab3@10396>   MOVE.l #hunkbegin2,d2
000273E8 <AmiBlitz3.ab3@10397> BRA 'l100
000273F2 <AmiBlitz3.ab3@10400>   CMP.l #-1,bssstart
000273F6 <AmiBlitz3.ab3@10401>   BEQ 'l10
00027400 <AmiBlitz3.ab3@10402>   MOVE.l #1,bssnum
00027402 <AmiBlitz3.ab3@10403>   MOVEQ.l #$24,D3
00027408 <AmiBlitz3.ab3@10404>   MOVE.l bsssize,d2
0002740A <AmiBlitz3.ab3@10405>   ADDQ.l #3,d2
0002740C <AmiBlitz3.ab3@10406>   ASR.l #2,d2
00027412 <AmiBlitz3.ab3@10407>   MOVE.l d2,hunkend+8
00027418 <AmiBlitz3.ab3@10408>   MOVE.l d2,bsssize2
0002741E <AmiBlitz3.ab3@10409>   MOVE.l D0,tstsize1b
00027424 <AmiBlitz3.ab3@10410>   MOVE.l D0,tstsize2b
0002742A <AmiBlitz3.ab3@10411>   MOVE.l #hunkbegin,d2
00027434 <AmiBlitz3.ab3@10414>   CMP.l #-1,chipstart
00027438 <AmiBlitz3.ab3@10415>   BEQ 'l100
00027442 <AmiBlitz3.ab3@10416>   MOVE.l #1,chipnum
00027444 <AmiBlitz3.ab3@10417>   MOVEQ.l #$24,D3
0002744A <AmiBlitz3.ab3@10418>   MOVE.l chipsize,d2
0002744C <AmiBlitz3.ab3@10419>   ADDQ.l #3,d2
0002744E <AmiBlitz3.ab3@10420>   ASR.l #2,d2
00027454 <AmiBlitz3.ab3@10421>   MOVE.l d2,hunkend2+8
0002745A <AmiBlitz3.ab3@10422>   MOVE.l d2,bsssize2
00027464 <AmiBlitz3.ab3@10423>   ADD.l #$40000000,bsssize2
0002746A <AmiBlitz3.ab3@10424>   MOVE.l D0,tstsize1b
00027470 <AmiBlitz3.ab3@10425>   MOVE.l D0,tstsize2b
00027476 <AmiBlitz3.ab3@10426>   MOVE.l #hunkbegin,d2
0002747A <AmiBlitz3.ab3@10429>    BSR.w mywrite
00027480 <AmiBlitz3.ab3@10430>   MOVE.l destbufferstart,D2
00027486 <AmiBlitz3.ab3@10431>   ADD.l noinits,D2
0002748C <AmiBlitz3.ab3@10432>   MOVE.l objlen,D3
00027492 <AmiBlitz3.ab3@10433>   SUB.l #moremem,d3
00027498 <AmiBlitz3.ab3@10434>   SUB.l noinits,D3
000274A2 <AmiBlitz3.ab3@10435>   CMP.l #-1,bssstart
000274A6 <AmiBlitz3.ab3@10436>   BNE 'l40
000274B0 <AmiBlitz3.ab3@10437>   CMP.l #-1,chipstart
000274B4 <AmiBlitz3.ab3@10438>   BNE 'l40
000274B8 <AmiBlitz3.ab3@10439> BRA 'l41
000274BE <AmiBlitz3.ab3@10442>   MOVE.l codeend,d1
000274C0 <AmiBlitz3.ab3@10443>     SUB.l d2,d1
000274C2 <AmiBlitz3.ab3@10444>     MOVE.l d1,d3
000274C8 <AmiBlitz3.ab3@10445>   SUB.l bsssize,d3
000274CE <AmiBlitz3.ab3@10446>   SUB.l chipsize,d3
000274D0 <AmiBlitz3.ab3@10447>   MOVE.l D7,D1
000274D4 <AmiBlitz3.ab3@10448>   BSR.w mywrite
000274DA <AmiBlitz3.ab3@10449>   MOVE.l objlen,D3
000274E0 <AmiBlitz3.ab3@10450>   SUB.l #moremem,d3
000274E6 <AmiBlitz3.ab3@10451>   SUB.l noinits,D3
000274E8 <AmiBlitz3.ab3@10452>   MOVE.l d3,d1
000274EE <AmiBlitz3.ab3@10453>   MOVE.l destbufferstart,D2
000274F4 <AmiBlitz3.ab3@10454>   ADD.l noinits,D2
000274F6 <AmiBlitz3.ab3@10455>   ADD.l d2,d1
000274FC <AmiBlitz3.ab3@10456>   SUB.l codeend,d1
000274FE <AmiBlitz3.ab3@10457>   MOVE.l d1,d3
00027504 <AmiBlitz3.ab3@10458>   MOVE.l codeend,d2
00027506 <AmiBlitz3.ab3@10461>   MOVE.l d2,d1
00027508 <AmiBlitz3.ab3@10462>   ADD.l d3,d1
0002750A <AmiBlitz3.ab3@10463>   ADDQ.l #3,D1
00027510 <AmiBlitz3.ab3@10464>   ANDI.l #$FFFFFFFC,D1
00027512 <AmiBlitz3.ab3@10465>   SUB.l d2,d1
00027514 <AmiBlitz3.ab3@10466>   MOVE.l d1,d3
00027516 <AmiBlitz3.ab3@10467>   MOVE.l D7,D1
0002751A <AmiBlitz3.ab3@10468>    BSR.w mywrite
00027524 <AmiBlitz3.ab3@10469>   MOVE.l hunkoffsetcounter,tstsize3
00027528 <AmiBlitz3.ab3@10470>    BEQ.w JL_0_7646
0002752A <AmiBlitz3.ab3@10471>   MOVE.l D7,D1
00027530 <AmiBlitz3.ab3@10472>   MOVE.l #tstend,D2
00027532 <AmiBlitz3.ab3@10473>   MOVEQ.l #$04,D3
00027536 <AmiBlitz3.ab3@10474>    BSR.w mywrite
0002753C <AmiBlitz3.ab3@10475>    MOVEA.l _execbase,A6
00027542 <AmiBlitz3.ab3@10476>    MOVE.l hunkoffsetcounter,d0
00027544 <AmiBlitz3.ab3@10477>    ASL.l #2,d0
0002754A <AmiBlitz3.ab3@10478>    ADD.l #12,d0
0002754C <AmiBlitz3.ab3@10479>    MOVEQ #0,d1
00027550 <AmiBlitz3.ab3@10480>    JSR _AllocMem(a6)
00027552 <AmiBlitz3.ab3@10481>    TST.l d0
00027556 <AmiBlitz3.ab3@10482>    BEQ nomem
0002755C <AmiBlitz3.ab3@10483>    MOVE.l noinits,D4
0002755E <AmiBlitz3.ab3@10484>    MOVE.l d5,-(a7)
00027560 <AmiBlitz3.ab3@10485>    MOVE.l d0,d5
00027562 <AmiBlitz3.ab3@10486>    MOVE.l d0,a1
00027568 <AmiBlitz3.ab3@10487>    MOVEA.l hunkoffsetbase,A2
00027570 <AmiBlitz3.ab3@10488>    MOVE.b #0,newhunk
00027574 <AmiBlitz3.ab3@10491>   CMPA.w #$0,A2
00027578 <AmiBlitz3.ab3@10492>    BEQ.w savehunk
0002757E <AmiBlitz3.ab3@10493>   MOVE.l destbufferstart,D2
00027584 <AmiBlitz3.ab3@10494>   ADD.l noinits,D2
00027588 <AmiBlitz3.ab3@10495>   MOVE.l  $4(A2),d1
0002758C <AmiBlitz3.ab3@10496>   BTST #31,d1
00027590 <AmiBlitz3.ab3@10497>   BEQ 'lh1
00027598 <AmiBlitz3.ab3@10498>   MOVE.b #1,newhunk
0002759C <AmiBlitz3.ab3@10499> BRA 'lh3
000275A0 <AmiBlitz3.ab3@10502>   BTST #30,d1
000275A4 <AmiBlitz3.ab3@10503>   BEQ 'lh2
000275AC <AmiBlitz3.ab3@10504>   MOVE.b #1,newhunk
000275B0 <AmiBlitz3.ab3@10505> BRA 'lh3
000275B2 <AmiBlitz3.ab3@10508>   ADD.l d1,d2
000275B8 <AmiBlitz3.ab3@10509>   CMP.l chipend,d2
000275BC <AmiBlitz3.ab3@10510>   BLT 'l100
000275C2 <AmiBlitz3.ab3@10511>   SUB.l chipsize,d1
000275C8 <AmiBlitz3.ab3@10514>   CMP.l bssend,d2
000275CC <AmiBlitz3.ab3@10515>   BLT 'l101
000275D2 <AmiBlitz3.ab3@10516>   SUB.l bsssize,d1
000275D4 <AmiBlitz3.ab3@10519>   MOVE.l d1,(a1)
000275D6 <AmiBlitz3.ab3@10520>   SUB.l D4,(A1)+
000275D8 <AmiBlitz3.ab3@10523>   MOVEA.l (A2),A2
000275DC <AmiBlitz3.ab3@10524> BRA.w menu_createresidentfile__oloopb
000275DE <AmiBlitz3.ab3@10528>   MOVE.l D7,D1
000275E4 <AmiBlitz3.ab3@10529>   MOVEA.l _dosbase,A6
000275EE <AmiBlitz3.ab3@10530>   MOVE.l hunkoffsetnum,tstsize3
000275F2 <AmiBlitz3.ab3@10531>   BEQ 'ln1
000275F8 <AmiBlitz3.ab3@10532>   MOVE.l #tstend+4,d2
000275FA <AmiBlitz3.ab3@10533>     MOVEQ #8,d3
000275FE <AmiBlitz3.ab3@10534>    JSR _Write(A6)
00027600 <AmiBlitz3.ab3@10535>   MOVE.l d7,d1
00027606 <AmiBlitz3.ab3@10536>   MOVE.l hunkoffsetnum,d3
00027608 <AmiBlitz3.ab3@10537>   ASL.l #2,d3
0002760A <AmiBlitz3.ab3@10538>   MOVE.l d5,D2
0002760E <AmiBlitz3.ab3@10539>   JSR _Write(a6)
00027614 <AmiBlitz3.ab3@10542>   TST.b newhunk
00027618 <AmiBlitz3.ab3@10543>   BEQ 'l10
0002761E <AmiBlitz3.ab3@10544>   MOVEA.l hunkoffsetbase,A2
00027620 <AmiBlitz3.ab3@10545>   MOVE.l d5,a0
00027622 <AmiBlitz3.ab3@10546>   ADDQ #8,a0
0002762A <AmiBlitz3.ab3@10547>   MOVE.l bssnum,-4(a0)
0002762C <AmiBlitz3.ab3@10548>   MOVEQ #0,d6
00027630 <AmiBlitz3.ab3@10551>   CMPA.w #$0,A2
00027634 <AmiBlitz3.ab3@10552>    BEQ.w 'lh3
0002763A <AmiBlitz3.ab3@10553>   MOVE.l destbufferstart,D2
00027640 <AmiBlitz3.ab3@10554>   ADD.l noinits,D2
00027644 <AmiBlitz3.ab3@10555>   MOVE.l  $4(A2),d1
00027648 <AmiBlitz3.ab3@10556>   BTST #30,d1
0002764C <AmiBlitz3.ab3@10557>   BEQ 'lh1
00027650 <AmiBlitz3.ab3@10558>   BCLR #30,d1
00027652 <AmiBlitz3.ab3@10559>   MOVE.l d1,(a0)
00027654 <AmiBlitz3.ab3@10560>   SUB.l D4,(A0)+
00027656 <AmiBlitz3.ab3@10561>   ADDQ.l #1,d6
00027658 <AmiBlitz3.ab3@10564>   MOVE.l (a2),a2
0002765C <AmiBlitz3.ab3@10565> BRA 'lh2
0002765E <AmiBlitz3.ab3@10568>   TST.l d6
00027662 <AmiBlitz3.ab3@10569>     BEQ 'lh10
00027664 <AmiBlitz3.ab3@10570>     MOVE.l d5,a0
00027666 <AmiBlitz3.ab3@10571>     MOVE.l d6,(a0)
00027668 <AmiBlitz3.ab3@10572>     MOVE.l d7,d1
0002766A <AmiBlitz3.ab3@10573>     MOVE.l d5,d2
0002766C <AmiBlitz3.ab3@10574>     MOVE.l d6,d3
0002766E <AmiBlitz3.ab3@10575>     ASL.l #2,d3
00027670 <AmiBlitz3.ab3@10576>     ADDQ.l #8,d3
00027674 <AmiBlitz3.ab3@10577>     BSR.w mywrite
0002767A <AmiBlitz3.ab3@10580>   MOVEA.l hunkoffsetbase,A2
0002767C <AmiBlitz3.ab3@10581>   MOVE.l d5,a0
0002767E <AmiBlitz3.ab3@10582>   ADDQ #8,a0
00027686 <AmiBlitz3.ab3@10583>   MOVE.l chipnum,-4(a0)
00027688 <AmiBlitz3.ab3@10584>   MOVEQ #0,d6
0002768C <AmiBlitz3.ab3@10587>   CMPA.w #$0,A2
00027690 <AmiBlitz3.ab3@10588>    BEQ.w 'lh30
00027696 <AmiBlitz3.ab3@10589>   MOVE.l destbufferstart,D2
0002769C <AmiBlitz3.ab3@10590>   ADD.l noinits,D2
000276A0 <AmiBlitz3.ab3@10591>   MOVE.l  $4(A2),d1
000276A4 <AmiBlitz3.ab3@10592>   BTST #31,d1
000276A8 <AmiBlitz3.ab3@10593>   BEQ 'lh11
000276AC <AmiBlitz3.ab3@10594>   BCLR #31,d1
000276AE <AmiBlitz3.ab3@10595>   MOVE.l d1,(a0)
000276B0 <AmiBlitz3.ab3@10596>   SUB.l D4,(A0)+
000276B2 <AmiBlitz3.ab3@10597>   ADDQ.l #1,d6
000276B4 <AmiBlitz3.ab3@10600>   MOVE.l (a2),a2
000276B8 <AmiBlitz3.ab3@10601> BRA 'lh20
000276BA <AmiBlitz3.ab3@10604>   TST.l d6
000276BE <AmiBlitz3.ab3@10605>     BEQ 'l10
000276C0 <AmiBlitz3.ab3@10606>     MOVE.l d5,a0
000276C2 <AmiBlitz3.ab3@10607>     MOVE.l d6,(a0)
000276C4 <AmiBlitz3.ab3@10608>     MOVE.l d7,d1
000276C6 <AmiBlitz3.ab3@10609>     MOVE.l d5,d2
000276C8 <AmiBlitz3.ab3@10610>     MOVE.l d6,d3
000276CA <AmiBlitz3.ab3@10611>     ASL.l #2,d3
000276CC <AmiBlitz3.ab3@10612>     ADDQ.l #8,d3
000276D0 <AmiBlitz3.ab3@10613>     BSR.w mywrite
000276D6 <AmiBlitz3.ab3@10617>    MOVEA.l _execbase,A6
000276DC <AmiBlitz3.ab3@10618>    MOVE.l hunkoffsetcounter,d0
000276DE <AmiBlitz3.ab3@10619>    ASL.l #2,d0
000276E4 <AmiBlitz3.ab3@10620>    ADD.l #12,d0
000276E6 <AmiBlitz3.ab3@10621>    MOVE.l d5,a1
000276EA <AmiBlitz3.ab3@10622>    JSR _FreeMem(a6)
000276F0 <AmiBlitz3.ab3@10623>    MOVEA.l _dosbase,A6
000276F2 <AmiBlitz3.ab3@10624>    MOVE.l (a7)+,d5
000276F6 <AmiBlitz3.ab3@10625> BRA JL_0_7632
000276FC <AmiBlitz3.ab3@10629>   MOVEA.l hunkoffsetbase,A2
00027702 <AmiBlitz3.ab3@10630>   MOVE.l noinits,D4
00027706 <AmiBlitz3.ab3@10633>   CMPA.w #$0,A2                                            ;write hunkoffsets
0002770A <AmiBlitz3.ab3@10634>   BEQ.w JL_0_7632
0002770E <AmiBlitz3.ab3@10635>   LEA $4(A2),A1
00027710 <AmiBlitz3.ab3@10636>   SUB.l D4,(A1)
00027712 <AmiBlitz3.ab3@10637>   MOVE.l D7,D1
00027714 <AmiBlitz3.ab3@10638>   MOVE.l A1,D2
00027716 <AmiBlitz3.ab3@10639>   MOVEQ.l #$04,D3
0002771A <AmiBlitz3.ab3@10640>   BSR.w mywrite
0002771E <AmiBlitz3.ab3@10641>   ADD.l D4,$4(A2)
00027720 <AmiBlitz3.ab3@10642>   MOVEA.l (A2),A2
00027724 <AmiBlitz3.ab3@10643> BRA.w JL_0_7610
0002772A <AmiBlitz3.ab3@10646>   CLR.l tstsize3
0002772C <AmiBlitz3.ab3@10647>   MOVE.l D7,D1
00027732 <AmiBlitz3.ab3@10648>   MOVE.l #tstsize3,D2
00027734 <AmiBlitz3.ab3@10649>   MOVEQ.l #$04,D3
00027738 <AmiBlitz3.ab3@10650>    BSR.w mywrite
00027740 <AmiBlitz3.ab3@10653>   BTST #$7,link_debuginfo
00027744 <AmiBlitz3.ab3@10654>    BEQ.w JL_0_7706
0002774A <AmiBlitz3.ab3@10655>   MOVE.l #sysdebug,D2                                      ;debughunks
0002774C <AmiBlitz3.ab3@10656>   MOVEQ.l #$04,D3
0002774E <AmiBlitz3.ab3@10657>   MOVE.l D7,D1
00027752 <AmiBlitz3.ab3@10658>    BSR.w mywrite
00027758 <AmiBlitz3.ab3@10659>   MOVEA.l labelbase,A2
0002775C <AmiBlitz3.ab3@10662>   CMPA.w #$0,A2
00027760 <AmiBlitz3.ab3@10663>    BEQ.w JL_0_76F8
00027766 <AmiBlitz3.ab3@10664>   BTST #$0,$7(A2)
0002776A <AmiBlitz3.ab3@10665>    BEQ.w JL_0_7682
00027772 <AmiBlitz3.ab3@10666>   CMPI.l #$1,$4(A2)
00027776 <AmiBlitz3.ab3@10668>   BRA.w JL_0_76F2                                            ;only addr labels
00027778 <AmiBlitz3.ab3@10670>   MOVEQ.l #$00,D4
0002777C <AmiBlitz3.ab3@10671>   MOVE.b $12(A2),D4
00027780 <AmiBlitz3.ab3@10672>   SUBI.w #$13,D4
00027782 <AmiBlitz3.ab3@10673>   ADDQ.w #2,D4
00027786 <AmiBlitz3.ab3@10674>   ANDI.w #$FFFC,D4
00027788 <AmiBlitz3.ab3@10675>   MOVE.l D4,D5
0002778A <AmiBlitz3.ab3@10676>   LSR.w #2,D5
00027790 <AmiBlitz3.ab3@10677>   MOVE.l D5,temp1
00027792 <AmiBlitz3.ab3@10678>   LSL.w #2,D5
00027798 <AmiBlitz3.ab3@10679>   MOVE.l #temp1,a1
0002779E <AmiBlitz3.ab3@10681>   LEA debugstore,a0
000277A0 <AmiBlitz3.ab3@10682>   MOVE.l (a1),(a0)+
000277A2 <AmiBlitz3.ab3@10683>   MOVEQ.l #$04,D3
000277A6 <AmiBlitz3.ab3@10686>   LEA $13(A2),A1
000277A8 <AmiBlitz3.ab3@10687>   MOVE.l d4,d1
000277AA <AmiBlitz3.ab3@10688>   SUBQ.l #1,d1
000277AC <AmiBlitz3.ab3@10691>     MOVE.b (a1)+,d0
000277B0 <AmiBlitz3.ab3@10692>     BEQ 'l21
000277B4 <AmiBlitz3.ab3@10693>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000277B8 <AmiBlitz3.ab3@10694>     BNE 'ok
000277BC <AmiBlitz3.ab3@10695>     MOVE.b #"_",d0
000277BE <AmiBlitz3.ab3@10696> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
000277C2 <AmiBlitz3.ab3@10697>   DBF d1,'l10
000277C6 <AmiBlitz3.ab3@10699> BRA 'l22
000277C8 <AmiBlitz3.ab3@10702>       CLR.b (a0)+
000277CC <AmiBlitz3.ab3@10703>   DBF d1,'l21
000277CE <AmiBlitz3.ab3@10706>   ADD.l d4,d3
000277D0 <AmiBlitz3.ab3@10711>   SUB.l D4,D5
000277D4 <AmiBlitz3.ab3@10712>    BEQ.w JL_0_76CE
000277DA <AmiBlitz3.ab3@10713>   MOVE.l #zero,a1
000277DC <AmiBlitz3.ab3@10715>   MOVE.l (a1),(a0)+
000277DE <AmiBlitz3.ab3@10717>   ADD.l d5,d3
000277E2 <AmiBlitz3.ab3@10722>   MOVE.l $8(A2),D2
000277E8 <AmiBlitz3.ab3@10723>   SUB.l destbufferstart,D2
000277EE <AmiBlitz3.ab3@10724>   SUB.l noinits,D2
000277F4 <AmiBlitz3.ab3@10725>   MOVE.l D2,temp1
000277FA <AmiBlitz3.ab3@10726>   MOVE.l #temp1,a1
000277FC <AmiBlitz3.ab3@10728>   MOVE.l (a1),(a0)+
00027802 <AmiBlitz3.ab3@10729>   ADD.l #4,d3
00027808 <AmiBlitz3.ab3@10730>   LEA debugstore,a0
0002780A <AmiBlitz3.ab3@10731>   MOVE.l a0,d2
0002780C <AmiBlitz3.ab3@10733>   MOVE.l D7,D1
00027810 <AmiBlitz3.ab3@10734>   BSR.w mywrite
00027812 <AmiBlitz3.ab3@10737>   MOVEA.l (A2),A2
00027816 <AmiBlitz3.ab3@10738> BRA.w JL_0_7664
0002781C <AmiBlitz3.ab3@10742>   MOVE.l #zero,D2
0002781E <AmiBlitz3.ab3@10743>   MOVEQ.l #$04,D3
00027820 <AmiBlitz3.ab3@10744>   MOVE.l D7,D1
00027824 <AmiBlitz3.ab3@10745>   BSR.w mywrite
00027826 <AmiBlitz3.ab3@10748>   MOVE.l D7,D1
0002782C <AmiBlitz3.ab3@10749>   MOVE.l #tstdone,D2                                      ;hunkend
0002782E <AmiBlitz3.ab3@10750>   MOVEQ.l #$04,D3
00027838 <AmiBlitz3.ab3@10751>   CMPI.l #-1,bssstart
0002783C <AmiBlitz3.ab3@10752>   BEQ 'l10
0002783E <AmiBlitz3.ab3@10753>   MOVEQ #16,d3
00027844 <AmiBlitz3.ab3@10754>   MOVE.l #hunkend,d2
0002784E <AmiBlitz3.ab3@10755>   CMPI.l #-1,chipstart
00027852 <AmiBlitz3.ab3@10756>   BEQ 'l10
00027854 <AmiBlitz3.ab3@10757>   MOVE.l d7,d1
00027856 <AmiBlitz3.ab3@10758>   MOVEQ #12,d3
0002785A <AmiBlitz3.ab3@10759>   BSR.w mywrite
00027864 <AmiBlitz3.ab3@10762>   CMPI.l #-1,chipstart
00027868 <AmiBlitz3.ab3@10763>   BEQ 'l11
0002786A <AmiBlitz3.ab3@10764>   MOVEQ #12,d3
00027870 <AmiBlitz3.ab3@10765>   MOVE.l #hunkend2,d2
00027872 <AmiBlitz3.ab3@10766>   MOVE.l d7,d1
00027876 <AmiBlitz3.ab3@10767>   BSR.w mywrite
00027878 <AmiBlitz3.ab3@10768>   MOVE.l d7,d1
0002787E <AmiBlitz3.ab3@10769>   MOVE.l chipstart,d2
00027884 <AmiBlitz3.ab3@10770>   MOVE.l chipsize,d3
00027888 <AmiBlitz3.ab3@10771>   BSR.w mywrite
0002788A <AmiBlitz3.ab3@10772>   MOVEQ #4,d3
00027890 <AmiBlitz3.ab3@10773>   MOVE.l #hunkend,d2
00027892 <AmiBlitz3.ab3@10774>   MOVE.l d7,d1
00027896 <AmiBlitz3.ab3@10777>   BSR.w mywrite
00027898 <AmiBlitz3.ab3@10778>   MOVE.l D7,D1
0002789E <AmiBlitz3.ab3@10779>   MOVEA.l _dosbase,A6
000278A2 <AmiBlitz3.ab3@10780>   JSR _Close(A6)
000278AA <AmiBlitz3.ab3@10785>   BTST #$7,create_iconfile
000278AE <AmiBlitz3.ab3@10786>    BEQ.w skip_createicon
000278B4 <AmiBlitz3.ab3@10788>   MOVEA.l ptr_newexefilename,A0
000278B6 <AmiBlitz3.ab3@10791>     TST.b (A0)+
000278BA <AmiBlitz3.ab3@10792>   BNE.w JL_0_772C
000278BC <AmiBlitz3.ab3@10793>   SUBQ.w #1,A0
000278BE <AmiBlitz3.ab3@10794>   MOVE.l A0,-(A7)
000278C4 <AmiBlitz3.ab3@10795>   LEA str_infoextention2,A1
000278C6 <AmiBlitz3.ab3@10798>     MOVE.b (A1)+,(A0)+
000278CA <AmiBlitz3.ab3@10799>   BNE.w JL_0_773A
000278D0 <AmiBlitz3.ab3@10801>   MOVE.l ptr_newexefilename,D1
000278D2 <AmiBlitz3.ab3@10802>   MOVEQ.l #-$02,D2
000278D8 <AmiBlitz3.ab3@10803>   MOVEA.l _dosbase,A6
000278DC <AmiBlitz3.ab3@10804>   JSR _Lock(A6)
000278DE <AmiBlitz3.ab3@10805>   MOVE.l D0,D1
000278E2 <AmiBlitz3.ab3@10806>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
000278E6 <AmiBlitz3.ab3@10807>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
000278EA <AmiBlitz3.ab3@10808> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
000278F0 <AmiBlitz3.ab3@10811>   MOVE.l ptr_newexefilename,D1
000278F6 <AmiBlitz3.ab3@10812>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000278FC <AmiBlitz3.ab3@10813>   MOVEA.l _dosbase,A6
00027900 <AmiBlitz3.ab3@10814>    JSR _Open(A6)
00027902 <AmiBlitz3.ab3@10815>   MOVE.l D0,D7
00027906 <AmiBlitz3.ab3@10816>    BEQ.w JL_0_7788
0002790C <AmiBlitz3.ab3@10817>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027912 <AmiBlitz3.ab3@10818>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00027914 <AmiBlitz3.ab3@10819>   MOVE.l D7,D1
0002791A <AmiBlitz3.ab3@10820>   MOVEA.l _dosbase,A6
0002791E <AmiBlitz3.ab3@10821>   JSR _Write(A6)
00027920 <AmiBlitz3.ab3@10822>   MOVE.l D7,D1
00027924 <AmiBlitz3.ab3@10823>   JSR _Close(A6)
00027926 <AmiBlitz3.ab3@10826>   MOVEA.l (A7)+,A0
00027928 <AmiBlitz3.ab3@10827>   CLR.b (A0)
0002792E <AmiBlitz3.ab3@10832>   TST.b exdebug
00027932 <AmiBlitz3.ab3@10833>    BEQ JL_0_757Cb
00027938 <AmiBlitz3.ab3@10834>   MOVE.w dontwrite,D1
0002793C <AmiBlitz3.ab3@10835>   BNE.w JL_0_757Cb
00027942 <AmiBlitz3.ab3@10836>   MOVE.l chipsize,d5
00027948 <AmiBlitz3.ab3@10837>   MOVE.l bsssize,d3
0002794E <AmiBlitz3.ab3@10838>   MOVE.l chipstart,d7
00027954 <AmiBlitz3.ab3@10839>   MOVE.l bssstart,d6
0002795A <AmiBlitz3.ab3@10840>   MOVEA.l hunkoffsetbase,A2
00027960 <AmiBlitz3.ab3@10841>   MOVEA.l destbufferstart,A1
00027962 <AmiBlitz3.ab3@10842>   MOVE.l A1,D2
00027968 <AmiBlitz3.ab3@10843>   ADD.l noinits,D2
0002796E <AmiBlitz3.ab3@10844>   CLR.l hunkoffsetnum
00027972 <AmiBlitz3.ab3@10847>   CMPA.w #$0,A2
00027976 <AmiBlitz3.ab3@10848>    BEQ.w JL_0_757Cb
0002797A <AmiBlitz3.ab3@10849>   MOVE.l $4(A2),D0
0002797E <AmiBlitz3.ab3@10850>    LEA $0(a1,d0.l),a0
00027980 <AmiBlitz3.ab3@10851>    MOVE.l (a0),d1
00027982 <AmiBlitz3.ab3@10852>   TST.l d1
00027986 <AmiBlitz3.ab3@10853>    BMI.w 'lm1
0002798E <AmiBlitz3.ab3@10854>   MOVE.b #0,newhunk
00027998 <AmiBlitz3.ab3@10855>   CMP.l #-1,chipstart
0002799C <AmiBlitz3.ab3@10856>   BEQ 'l10
000279A2 <AmiBlitz3.ab3@10857>   CMP.l chipstart,d1
000279A6 <AmiBlitz3.ab3@10858>   BLT 'l10
000279AE <AmiBlitz3.ab3@10859>   MOVE.b #1,newhunk
000279B4 <AmiBlitz3.ab3@10860>   CMP.l chipend,d1
000279B8 <AmiBlitz3.ab3@10861>   BGE 'l110
000279BA <AmiBlitz3.ab3@10862>   ADD.l d7,(a0)
000279C2 <AmiBlitz3.ab3@10863>   ADD.l #$80000000,4(a2)
000279C6 <AmiBlitz3.ab3@10864> BRA JL_0_7576b
000279CA <AmiBlitz3.ab3@10867>   ADD.l d5,0(a0)
000279D4 <AmiBlitz3.ab3@10870>   CMP.l #-1,bssstart
000279D8 <AmiBlitz3.ab3@10871>     BEQ 'l11
000279DE <AmiBlitz3.ab3@10872>   CMP.l bssstart,d1
000279E2 <AmiBlitz3.ab3@10873>   BLT 'l11
000279E8 <AmiBlitz3.ab3@10874>   CMP.l bssend,d1
000279EC <AmiBlitz3.ab3@10875>   BGE 'l111
000279F2 <AmiBlitz3.ab3@10876>   TST.b newhunk
000279F6 <AmiBlitz3.ab3@10877>   BEQ 'ln1
000279F8 <AmiBlitz3.ab3@10878>   ADD.l d5,(a0)
000279FA <AmiBlitz3.ab3@10881>   ADD.l d6,(a0)
00027A02 <AmiBlitz3.ab3@10882>   ADD.l #$40000000,4(a2)
00027A06 <AmiBlitz3.ab3@10883> BRA JL_0_7576b
00027A0A <AmiBlitz3.ab3@10886>   ADD.l d3,0(a0)
00027A0C <AmiBlitz3.ab3@10889>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00027A12 <AmiBlitz3.ab3@10892>   ADDQ.l #1,hunkoffsetnum
00027A14 <AmiBlitz3.ab3@10895>   MOVEA.l (A2),A2
00027A18 <AmiBlitz3.ab3@10896> BRA.w JL_0_755Eb
00027A1E <AmiBlitz3.ab3@10899>   JSR call_setpointernormal
00027A22 <AmiBlitz3.ab3@10900>   MOVEM.l (a7)+,d2-d7/a2-a6
00027A24 <AmiBlitz3.ab3@10902> RTS
00027A26 <AmiBlitz3.ab3@10906>   MOVE.l D2,-(A7)
00027A2C <AmiBlitz3.ab3@10907>   MOVE.l destpointer,D2
00027A32 <AmiBlitz3.ab3@10908>   SUB.l destbufferstart,D2
00027A36 <AmiBlitz3.ab3@10909>   BSR.w addhunkoffset
00027A38 <AmiBlitz3.ab3@10910>   MOVE.l (A7)+,D2
00027A3A <AmiBlitz3.ab3@10911> RTS
00027A3E <AmiBlitz3.ab3@10915>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00027A44 <AmiBlitz3.ab3@10916>   TST.b nohunkoffset
00027A48 <AmiBlitz3.ab3@10917>   BNE 'l10
00027A4A <AmiBlitz3.ab3@10918>   MOVEQ.l #$8,D0
00027A4C <AmiBlitz3.ab3@10919>   MOVEQ.l #$01,D1
00027A52 <AmiBlitz3.ab3@10920>   MOVEA.l _execbase,A6
00027A58 <AmiBlitz3.ab3@10921>   MOVE.l mempool2,a0
00027A5C <AmiBlitz3.ab3@10922>   JSR _AllocPooled(a6)
00027A62 <AmiBlitz3.ab3@10924>   ADDQ.l #1,hunkoffsetcounter
00027A64 <AmiBlitz3.ab3@10925>   MOVEA.l D0,A0
00027A6A <AmiBlitz3.ab3@10926>   MOVE.l hunkoffsetbase,(A0)
00027A70 <AmiBlitz3.ab3@10927>   MOVE.l A0,hunkoffsetbase
00027A74 <AmiBlitz3.ab3@10928>   MOVE.l D2,$4(A0)
00027A78 <AmiBlitz3.ab3@10931>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00027A7A <AmiBlitz3.ab3@10932> RTS
00027A80 <AmiBlitz3.ab3@10936>   CLR.l hunkoffsetbase
00027A86 <AmiBlitz3.ab3@10937>   MOVEA.l _execbase,A6
00027A8C <AmiBlitz3.ab3@10938>   MOVEA.l hunkoffsetbase,A2
00027A90 <AmiBlitz3.ab3@10941>     CMPA.w #$0,A2
00027A94 <AmiBlitz3.ab3@10942>      BEQ.w JL_0_7988
00027A96 <AmiBlitz3.ab3@10943>     MOVEA.l A2,A1
00027A98 <AmiBlitz3.ab3@10944>     MOVEQ.l #$08,D0
00027A9A <AmiBlitz3.ab3@10945>     MOVEA.l (A2),A2
00027AA0 <AmiBlitz3.ab3@10946>     MOVE.l mempool2,a0
00027AA4 <AmiBlitz3.ab3@10947>     JSR _FreePooled(A6)
00027AA8 <AmiBlitz3.ab3@10948> BRA.w JL_0_7972
00027AAE <AmiBlitz3.ab3@10951>   CLR.l hunkoffsetcounter
00027AB0 <AmiBlitz3.ab3@10952> RTS
00027AC8 <AmiBlitz3.ab3@10955> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00027ACC <AmiBlitz3.ab3@10956> cmakea5:    Ds.l 1
00027ACE <AmiBlitz3.ab3@10957> cmake:      Ds.w 1
00027B4E <AmiBlitz3.ab3@10958> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00027B54 <AmiBlitz3.ab3@10962>   MOVE.l A5,lastsourcepos
00027B5E <AmiBlitz3.ab3@10963>   MOVE.w instringon,oldqflag
00027B60 <AmiBlitz3.ab3@10967>   MOVEQ.l #$00,D0
00027B62 <AmiBlitz3.ab3@10968>   MOVE.b (A5)+,D0
00027B66 <AmiBlitz3.ab3@10969>    BEQ getcharb__donea
00027B6A <AmiBlitz3.ab3@10970>   BPL getcharb__stuffa
00027B6C <AmiBlitz3.ab3@10971>   LSL.l #8,D0
00027B6E <AmiBlitz3.ab3@10972>   MOVE.b (A5)+,D0
00027B70 <AmiBlitz3.ab3@10973>   MOVE.l a1,-(a7)
00027B76 <AmiBlitz3.ab3@10974>   LEA replacedat,a1
00027B7A <AmiBlitz3.ab3@10975>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00027B7E <AmiBlitz3.ab3@10976>   BEQ getchar__l10
00027B82 <AmiBlitz3.ab3@10977>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00027B84 <AmiBlitz3.ab3@10981>   MOVE.l (a7)+,a1
00027B88 <AmiBlitz3.ab3@10982> BRA getchar__weiter
00027B8C <AmiBlitz3.ab3@10985>   CMP.w #$22,D0
00027B90 <AmiBlitz3.ab3@10986>    BEQ.b swapquotea
00027B94 <AmiBlitz3.ab3@10987>   CMP.w #$3B,D0
00027B98 <AmiBlitz3.ab3@10988>    BNE.b getcharb__donea
00027B9E <AmiBlitz3.ab3@10989>   TST.w instringon
00027BA2 <AmiBlitz3.ab3@10990>    BNE.b getcharb__donea
00027BA4 <AmiBlitz3.ab3@10993>   MOVE.b (A5)+,D0
00027BA8 <AmiBlitz3.ab3@10994>              BEQ getchar__l1
00027BAC <AmiBlitz3.ab3@10995>              CMP.b #":",d0
00027BB0 <AmiBlitz3.ab3@10996>              BNE getcharb__loopa                                ;:@
00027BB4 <AmiBlitz3.ab3@10997>              CMP.b #"@",(a5)
00027BB8 <AmiBlitz3.ab3@10998>              BNE getcharb__loopa
00027BBA <AmiBlitz3.ab3@10999>              ADDQ #1,a5
00027BC0 <AmiBlitz3.ab3@11002>   MOVE.w D0,lastchar
00027BC4 <AmiBlitz3.ab3@11005> BRA.s getchar__weiter
00027BCA <AmiBlitz3.ab3@11008>   NOT.w instringon
00027BD0 <AmiBlitz3.ab3@11011>    MOVE.w D0,lastchar
00027BD4 <AmiBlitz3.ab3@11012>    BEQ.w getchar__done
00027BD8 <AmiBlitz3.ab3@11013>    BPL.w getchar__done2
00027BDC <AmiBlitz3.ab3@11014>   CMP.w #-$7FE4,D0                                         ;cnif
00027BE0 <AmiBlitz3.ab3@11015>    BEQ.w getchar__cnif
00027BE4 <AmiBlitz3.ab3@11016>   CMP.w #-$7FE3,D0                                         ;csif
00027BE8 <AmiBlitz3.ab3@11017>    BEQ.w getchar__csif
00027BEC <AmiBlitz3.ab3@11018>   CMP.w #-$7FE2,D0                                         ;celse
00027BF0 <AmiBlitz3.ab3@11019>    BEQ.w getchar__celse
00027BF4 <AmiBlitz3.ab3@11020>   CMP.w #-$7FE1,D0                                         ;cend
00027BF8 <AmiBlitz3.ab3@11021>    BEQ.w getchar__cend
00027BFE <AmiBlitz3.ab3@11024>   TST.w skipcode
00027C02 <AmiBlitz3.ab3@11025>    BEQ.w getchar
00027C06 <AmiBlitz3.ab3@11026>   CMP.w #$7E,D0
00027C0A <AmiBlitz3.ab3@11027>    BEQ.w getchar__cmake                                         ;tilde
00027C0E <AmiBlitz3.ab3@11028>   CMP.w #$2,D0
00027C12 <AmiBlitz3.ab3@11029>    BNE.w getchar__notunpath
00027C18 <AmiBlitz3.ab3@11030>   MOVEA.l usedfrom,A5
00027C1E <AmiBlitz3.ab3@11031>   CLR.l usedfrom
00027C22 <AmiBlitz3.ab3@11032> BRA.w getchar
00027C26 <AmiBlitz3.ab3@11035>   CMP.w #$1,D0
00027C2A <AmiBlitz3.ab3@11036>    BNE.w getchar__done
00027C2E <AmiBlitz3.ab3@11040>   MOVEA.l cmakea5(PC),A5
00027C32 <AmiBlitz3.ab3@11041> BRA.w getchar
00027C38 <AmiBlitz3.ab3@11044>   TST.w cmake
00027C3C <AmiBlitz3.ab3@11045>    BNE.w getchar__done
00027C40 <AmiBlitz3.ab3@11047>   MOVEM.l D0-D7/A0-A6,-(A7)
00027C46 <AmiBlitz3.ab3@11048>   LEA cmake,a0                                         ;reass
00027C48 <AmiBlitz3.ab3@11049>   NOT.w (a0)
00027C4C <AmiBlitz3.ab3@11050>   LEA cmakebak(PC),A0
00027C52 <AmiBlitz3.ab3@11051>   LEA ptr_parameterstore,A1
00027C54 <AmiBlitz3.ab3@11052>   MOVEQ.l #$1F,D0
00027C56 <AmiBlitz3.ab3@11055>     MOVE.l (A1)+,(A0)+
00027C5A <AmiBlitz3.ab3@11056>   DBF D0,getchar__cmloop
00027C60 <AmiBlitz3.ab3@11059>    JSR AJL_0_BF6E
00027C64 <AmiBlitz3.ab3@11060>   CMP.w #$7E,D0
00027C68 <AmiBlitz3.ab3@11061>    BNE.w syntaxerr
00027C6E <AmiBlitz3.ab3@11062>   MOVE.l A5,cmakea5                                      ;tilde
00027C72 <AmiBlitz3.ab3@11063>   LEA cmakebuff(PC),A0
00027C74 <AmiBlitz3.ab3@11064>   MOVE.l D3,D2
00027C78 <AmiBlitz3.ab3@11065>   BSR.w makelong
00027C7A <AmiBlitz3.ab3@11066>   ADDQ.b #1,(A0)
00027C80 <AmiBlitz3.ab3@11067>   LEA cmake,a0
00027C82 <AmiBlitz3.ab3@11068>   NOT.w (a0)                                               ;reass
00027C86 <AmiBlitz3.ab3@11069>   LEA cmakebak(PC),A0
00027C8C <AmiBlitz3.ab3@11070>   LEA ptr_parameterstore,A1
00027C8E <AmiBlitz3.ab3@11071>   MOVEQ.l #$1F,D0
00027C90 <AmiBlitz3.ab3@11074>     MOVE.l (A0)+,(A1)+
00027C94 <AmiBlitz3.ab3@11075>   DBF D0,getchar__cmloop2
00027C98 <AmiBlitz3.ab3@11077>   MOVEM.l (A7)+,D0-D7/A0-A6
00027C9C <AmiBlitz3.ab3@11078>   LEA cmakebuff(PC),A5
00027CA0 <AmiBlitz3.ab3@11079> BRA.w getchar
00027CA2 <AmiBlitz3.ab3@11082> RTS
00027CAC <AmiBlitz3.ab3@11086>   MOVE.l linenumat,ciflineat                               ;csif
00027CB2 <AmiBlitz3.ab3@11087>   TST.w skipcode
00027CB6 <AmiBlitz3.ab3@11088>    BEQ.w getchar__incnest
00027CBA <AmiBlitz3.ab3@11089>    BSR.w get1bytemain
00027CBC <AmiBlitz3.ab3@11090>    MOVE.l a1,-(a7)
00027CC2 <AmiBlitz3.ab3@11091>    JSR JL_0_C492
00027CC4 <AmiBlitz3.ab3@11092>    MOVE.l (a7)+,a1
00027CC8 <AmiBlitz3.ab3@11093> BRA.w getchar
00027CD2 <AmiBlitz3.ab3@11096>   MOVE.l linenumat,ciflineat                               ;cnif
00027CD8 <AmiBlitz3.ab3@11097>   TST.w skipcode
00027CDC <AmiBlitz3.ab3@11098>    BEQ.w getchar__incnest
00027CE0 <AmiBlitz3.ab3@11099>    BSR.w get1bytemain
00027CE4 <AmiBlitz3.ab3@11100>    CMP.b #"@",d0
00027CE8 <AmiBlitz3.ab3@11101>    BNE getchar__cnif_ok2
00027CEC <AmiBlitz3.ab3@11102>    BSR.w get1bytemain
00027CF4 <AmiBlitz3.ab3@11103>    MOVE.b #1,incnif
00027CFA <AmiBlitz3.ab3@11104>    JSR findconstant2
00027CFE <AmiBlitz3.ab3@11105>    BEQ getchar__cnif_ok2
00027D04 <AmiBlitz3.ab3@11108>    MOVE.w fast,-(a7)
00027D0A <AmiBlitz3.ab3@11109>    CLR.b fast
00027D0C <AmiBlitz3.ab3@11110>    MOVE.l a1,-(a7)
00027D12 <AmiBlitz3.ab3@11111>    JSR JL_0_C47E
00027D18 <AmiBlitz3.ab3@11112>    CLR.b incnif
00027D1A <AmiBlitz3.ab3@11113>    MOVE.l (a7)+,a1
00027D20 <AmiBlitz3.ab3@11114>    MOVE.w (a7)+,fast
00027D24 <AmiBlitz3.ab3@11115> BRA.w getchar
00027D2A <AmiBlitz3.ab3@11118>   ADDQ.w #1,connest
00027D2E <AmiBlitz3.ab3@11119> BRA.w getchar
00027D34 <AmiBlitz3.ab3@11122>   MOVE.w connest,D0                                      ;celse
00027D38 <AmiBlitz3.ab3@11123>    BNE.w getchar
00027D3E <AmiBlitz3.ab3@11124>   NOT.w skipcode
00027D42 <AmiBlitz3.ab3@11125> BRA.w getchar
00027D48 <AmiBlitz3.ab3@11128>   SUBQ.w #1,connest                                      ;cend
00027D4C <AmiBlitz3.ab3@11129>    BPL.w getchar
00027D52 <AmiBlitz3.ab3@11130>   ADDQ.w #1,connest
00027D58 <AmiBlitz3.ab3@11131>   MOVEA.l concomsp,A0
00027D5E <AmiBlitz3.ab3@11132>   CMPA.l #concomstack,A0
00027D62 <AmiBlitz3.ab3@11133>    BEQ.w nociferr
00027D64 <AmiBlitz3.ab3@11134>   SUBQ.w #2,A0
00027D6A <AmiBlitz3.ab3@11135>   MOVE.l A0,concomsp
00027D70 <AmiBlitz3.ab3@11136>   MOVE.w (A0),skipcode
00027D74 <AmiBlitz3.ab3@11137> BRA.w getchar
00027D78 <AmiBlitz3.ab3@11140> ciflineat:   Ds.l 1
00027D7A <AmiBlitz3.ab3@11148>   MOVEQ.l #$00,D0
00027D7C <AmiBlitz3.ab3@11149>   MOVE.b (A5)+,D0
00027D80 <AmiBlitz3.ab3@11150>    BEQ.b getcharb__done
00027D84 <AmiBlitz3.ab3@11151>    BPL.b getcharb__stuff
00027D86 <AmiBlitz3.ab3@11152>   LSL.w #8,D0
00027D88 <AmiBlitz3.ab3@11153>   MOVE.b (A5)+,D0
00027D8A <AmiBlitz3.ab3@11154> RTS
00027D8E <AmiBlitz3.ab3@11157>   CMP.w #$22,D0
00027D92 <AmiBlitz3.ab3@11158>    BEQ.b swapquote
00027D96 <AmiBlitz3.ab3@11159>   CMP.w #$3B,D0
00027D9A <AmiBlitz3.ab3@11160>    BNE.b getcharb__done
00027DA0 <AmiBlitz3.ab3@11161>   TST.w instringon
00027DA4 <AmiBlitz3.ab3@11162>    BNE.b getcharb__done
00027DA6 <AmiBlitz3.ab3@11165>   MOVE.b (A5)+,D0
00027DAA <AmiBlitz3.ab3@11166>             BEQ getcharb__loop_l1
00027DAE <AmiBlitz3.ab3@11167>             CMP.b #":",d0
00027DB2 <AmiBlitz3.ab3@11168>             BNE getcharb__loop
00027DB6 <AmiBlitz3.ab3@11169>             CMP.b #"@",(a5)
00027DBA <AmiBlitz3.ab3@11170>             BNE getcharb__loop
00027DC0 <AmiBlitz3.ab3@11173>   MOVE.w D0,lastchar
00027DC2 <AmiBlitz3.ab3@11176> RTS
00027DC8 <AmiBlitz3.ab3@11179>   NOT.w instringon
00027DCA <AmiBlitz3.ab3@11180> RTS
00027DCE <AmiBlitz3.ab3@11184>   BSR.w getchar
00027DD4 <AmiBlitz3.ab3@11185>   TST.w instringon
00027DD8 <AmiBlitz3.ab3@11186>    BNE.w get1byte__skip
00027DDC <AmiBlitz3.ab3@11187>   CMP.w #$20,D0
00027DE0 <AmiBlitz3.ab3@11188>    BEQ.w get1byte_
00027DE2 <AmiBlitz3.ab3@11191> RTS
00027DFC <AmiBlitz3.ab3@11194> gs:        Ds.w 13                                         ;ds.b 26  org source
00027E00 <AmiBlitz3.ab3@11195>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00027E02 <AmiBlitz3.ab3@11196>            Dc.b $C4,$DC
00027E06 <AmiBlitz3.ab3@11202>   BSR.w getchar
00027E0C <AmiBlitz3.ab3@11203>   TST.w instringon
00027E10 <AmiBlitz3.ab3@11204>    BNE.w gchar2
00027E14 <AmiBlitz3.ab3@11205>   CMP.w #$20,D0
00027E18 <AmiBlitz3.ab3@11206>    BEQ.w get1bytemain
00027E1A <AmiBlitz3.ab3@11208>   TST.w D0
00027E1E <AmiBlitz3.ab3@11211>   BEQ.b get1bytemain__zero
00027E24 <AmiBlitz3.ab3@11212>   TST.w instringon
00027E28 <AmiBlitz3.ab3@11213>    BEQ.b get1bytemain__noqoute
00027E2C <AmiBlitz3.ab3@11214>   CMP.b #$20,D0
00027E30 <AmiBlitz3.ab3@11215>    BCC.b get1bytemain__skip
00027E34 <AmiBlitz3.ab3@11216>   MOVE.b gs(PC,D0.W),D0
00027E36 <AmiBlitz3.ab3@11217> RTS
00027E3A <AmiBlitz3.ab3@11220>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00027E3E <AmiBlitz3.ab3@11221>    BEQ.b get1bytemain__zero
00027E42 <AmiBlitz3.ab3@11222>   CMP.w #$3A,D0
00027E46 <AmiBlitz3.ab3@11223>    BEQ.b get1bytemain__zero
00027E48 <AmiBlitz3.ab3@11226>   TST.w D0
00027E4A <AmiBlitz3.ab3@11229> RTS
00027E50 <AmiBlitz3.ab3@11233>   MOVE.w lastchar,D0
00027E54 <AmiBlitz3.ab3@11234> BRA.w gchar2
00027E5E <AmiBlitz3.ab3@11238>   MOVE.w oldqflag,instringon
00027E64 <AmiBlitz3.ab3@11239>   MOVEA.l lastsourcepos,A5
00027E66 <AmiBlitz3.ab3@11240> RTS
00027E6C <AmiBlitz3.ab3@11244>   MOVE.w D0,locchar
00027E72 <AmiBlitz3.ab3@11245>   MOVE.l A5,locloc
00027E74 <AmiBlitz3.ab3@11246> RTS
00027E7A <AmiBlitz3.ab3@11250>   MOVEA.l locloc,A5
00027E80 <AmiBlitz3.ab3@11251>   MOVE.w locchar,D0
00027E86 <AmiBlitz3.ab3@11252>   MOVE.w D0,lastchar
00027E88 <AmiBlitz3.ab3@11253> RTS
00027E88 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00027ED0 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00027F22 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00027F60 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00027F9E <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00027FC8 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00027FF8 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00028042 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
000280C8 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
0002812A <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00028172 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
000281C4 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028226 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028274 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
000282AA <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
000282D8 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
000282F2 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028310 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
0002838E <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
000283B8 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
000283DE <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
000283FE <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
0002841C <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
0002843C <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028464 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
0002848E <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028490 <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
000284AC <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
000284D2 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
000284EA <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00028548 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
0002856A <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028590 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
000285B8 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
000285D8 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
000285FC <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028642 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028666 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
0002868A <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
000286AA <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
000286CE <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
000286F0 <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
0002871C <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00028742 <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
0002874C <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00028772 <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
000287C4 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
0002882E <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
0002888C <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
000288FA <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00028936 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00028954 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
0002897A <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
000289AA <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
000289CE <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
000289FC <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
00028A20 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00028A36 <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
00028A4C <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
00028A52 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00028A5A <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
00028A5C <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
00028A60 <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
00028A68 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00028A6A <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00028AA4 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
00028AD0 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
00028B00 <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
00028B38 <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
00028B92 <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00028B94 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00028B98 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00028B9C <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00028BA0 <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00028BA4 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00028BA8 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00028BAC <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
00028BB0 <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00028BB4 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00028BB8 <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
00028BBC <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
00028BFA <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
00028C2C <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00028C4A <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00028C74 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00028C90 <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00028CAA <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
00028CC8 <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
00028CEC <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
00028CEE <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00028D40 <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00028D68 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00028D90 <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00028DAC <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00028DCC <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00028DE4 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00028E28 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00028E70 <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00028E9A <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00028EC4 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
00028EDE <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00028F08 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00028F5C <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00028FA8 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00028FE0 <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
00028FE6 <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
00028FF4 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
00029024 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00029058 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
000290BE <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
000290DC <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029156 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
0002917E <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029194 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
000291A8 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
000291AA <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
000291AB <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
000291AC <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
000291CC <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
000291D2 <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
000291E4 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029218 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00029230 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
0002924C <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029264 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029284 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
000292A4 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
000292CA <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
000292E0 <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
000292FC <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029326 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
0002933E <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
0002935A <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
0002937A <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00029392 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029396 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
0002939C <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
000293A2 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
000293B7 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
000293BD <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
000293BE <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
000293C2 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
000293C8 <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
000293CE <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
000293E1 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
000293E7 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
000293E8 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029406 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
0002941E <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
0002943A <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029464 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
0002947E <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
0002949E <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
000294BC <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
000294EA <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
000294F4 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029526 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029544 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029562 <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029582 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
000295A8 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
000295CE <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
000295F6 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029614 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029634 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
0002964E <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029670 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
0002968E <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
000296B0 <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
000296D4 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
000296DA <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
000296F6 <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029712 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029730 <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
0002974E <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
0002979C <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
000297BA <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
000297D8 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
000297F2 <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
0002983E <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029864 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029884 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
000298A6 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
000298C2 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
000298E8 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029904 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00029922 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002994A <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
00029966 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
00029976 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
00029998 <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
0002999C <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002999E <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
000299B8 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
000299DC <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
000299FC <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
00029A2E <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
00029A8C <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
00029AC4 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
00029B02 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
00029B38 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
00029B6A <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
00029B8E <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
00029BB2 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
00029BFC <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
00029C24 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
00029C6E <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
00029CAE <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
00029CAE <AmiBlitz3.ab3@11257> XINCLUDE "internal_errormsg.ab3"
00029CB0 <AmiBlitz3.ab3@11261> ezerr:   Ds.w 1                                            ;for simple errors
00029CB6 <AmiBlitz3.ab3@11267>    MOVE.l myline,d0
00029CBA <AmiBlitz3.ab3@11268>   BNE handle_compileerror__l2
00029CC0 <AmiBlitz3.ab3@11270>     MOVE.l a5,lastsourcepos
00029CC2 <AmiBlitz3.ab3@11272>     SUBA.l a5,a5
00029CC8 <AmiBlitz3.ab3@11274>   TST.l usedfrom
00029CCC <AmiBlitz3.ab3@11275>   BEQ handle_compileerror__org
00029CD2 <AmiBlitz3.ab3@11276>     MOVEA.l usedfrom,a5
00029CD8 <AmiBlitz3.ab3@11279>   TST.w dirmode
00029CDC <AmiBlitz3.ab3@11280>   BNE.b handle_compileerror__quiet
00029CE2 <AmiBlitz3.ab3@11281>     JSR call_setpointernormal
00029CE6 <AmiBlitz3.ab3@11282>     MOVE.w ezerr(PC),D0
00029CEA <AmiBlitz3.ab3@11283>     BNE.w handle_compileerror__skip
00029CF0 <AmiBlitz3.ab3@11284>       MOVE.w cfetchmode,D0
00029CF4 <AmiBlitz3.ab3@11285>       BEQ.w handle_compileerror__skip2
00029CFE <AmiBlitz3.ab3@11286>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00029D04 <AmiBlitz3.ab3@11289>   MOVE.w constmode,D0
00029D08 <AmiBlitz3.ab3@11290>   BEQ.b handle_compileerror__skip3
00029D0C <AmiBlitz3.ab3@11291>     BSR.w asmerr2
00029D12 <AmiBlitz3.ab3@11294>   MOVE.l firstlocal,D1
00029D18 <AmiBlitz3.ab3@11295>   OR.l firstglob,D1
00029D1C <AmiBlitz3.ab3@11296>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00029D22 <AmiBlitz3.ab3@11297> 
00029D26 <AmiBlitz3.ab3@11298>     BNE handle_compileerror__notproc                       ; yes skip
00029D2C <AmiBlitz3.ab3@11299>       JSR JL_0_DB5C                                        ; no free some data ????
00029D34 <AmiBlitz3.ab3@11302>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00029D3E <AmiBlitz3.ab3@11303>   CMP.l #"NORE",reqmode                                    ;for used functions
00029D42 <AmiBlitz3.ab3@11304>   BEQ handle_compileerror__notproc_l1
00029D4C <AmiBlitz3.ab3@11305>     MOVE.l linenumat,compilelinecounter
00029D52 <AmiBlitz3.ab3@11308>   JSR close_compilewin
00029D54 <AmiBlitz3.ab3@11311>   MOVEA.l (A7)+,A0
00029D5A <AmiBlitz3.ab3@11312>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
00029D60 <AmiBlitz3.ab3@11313>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
00029D64 <AmiBlitz3.ab3@11314>   BLT 'lesserror
00029D6A <AmiBlitz3.ab3@11315>   LEA errorlimit_text,a0
00029D70 <AmiBlitz3.ab3@11318>   ADDQ.l #1,errorcounter
00029D76 <AmiBlitz3.ab3@11319>   JSR errorstringparse
00029D80 <AmiBlitz3.ab3@11320>   CMP.l #"NORE",reqmode                                    ;for used functions
00029D84 <AmiBlitz3.ab3@11321>   BEQ handle_compileerror__skip_Lxx2
00029D8A <AmiBlitz3.ab3@11322>   TST.l CLIMode
00029D8E <AmiBlitz3.ab3@11323>   BNE 'climode_output
00029D94 <AmiBlitz3.ab3@11326>     JSR save_errorfile
00029D98 <AmiBlitz3.ab3@11327>     BRA 'end_output
00029D9E <AmiBlitz3.ab3@11330>     JSR stdout_error
00029DA4 <AmiBlitz3.ab3@11332>      MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
00029DAA <AmiBlitz3.ab3@11333>      CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
00029DAE <AmiBlitz3.ab3@11334>      BGT 'end_output
00029DB4 <AmiBlitz3.ab3@11335>     MOVE.l lastsourcepos,a5
00029DB6 <AmiBlitz3.ab3@11337>  'loop TST.b (a5)
00029DBA <AmiBlitz3.ab3@11338>       BEQ 'ok2
00029DBC <AmiBlitz3.ab3@11339>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00029DC0 <AmiBlitz3.ab3@11340>     BEQ 'ok
00029DC4 <AmiBlitz3.ab3@11341>     CMP.b #":",d0
00029DC8 <AmiBlitz3.ab3@11342>     BEQ 'ok
00029DCC <AmiBlitz3.ab3@11343>     BRA 'loop
00029DCE <AmiBlitz3.ab3@11345>  'ok SUBQ.l #1,a5
00029DD6 <AmiBlitz3.ab3@11347>  'ok2 MOVE.w #0,lastchar
00029DDE <AmiBlitz3.ab3@11348>     MOVE.b #1,iserror
00029DE4 <AmiBlitz3.ab3@11349>     MOVE.l stackaddr,a7
00029DE6 <AmiBlitz3.ab3@11350>     RTS
00029DE8 <AmiBlitz3.ab3@11356>   MOVE.l A0,-(a7)
00029E26 <AmiBlitz3.ab3@11357>   !ComData_GetL{comFunc_ErrorRequest,A1}
00029E28 <AmiBlitz3.ab3@11358>   MOVE.l (a7)+,A0
00029E2C <AmiBlitz3.ab3@11360>   MOVEM.l d6/D7/A6,-(A7)
00029E32 <AmiBlitz3.ab3@11361>   MOVE.l includeline,d7
00029E38 <AmiBlitz3.ab3@11362>   MOVE.l #"INLN",a6
00029E42 <AmiBlitz3.ab3@11363>   MOVE.l errstack,tempa7
00029E44 <AmiBlitz3.ab3@11364>   JSR (A1)                                                  ;open ped errorrequest
00029E48 <AmiBlitz3.ab3@11366>   MOVEM.l (A7)+,D7/d6/A6
00029E4E <AmiBlitz3.ab3@11369>   MOVE.l tempa7,a7
00029E54 <AmiBlitz3.ab3@11370>   MOVEA.l errcont,A0
00029E56 <AmiBlitz3.ab3@11372> RTS
00029E5C <AmiBlitz3.ab3@11375>   MOVEA.l errstack,A7
00029E62 <AmiBlitz3.ab3@11376>   MOVEA.l errcont,A0
00029E64 <AmiBlitz3.ab3@11378> RTS
00029E66 <AmiBlitz3.ab3@11381>   MOVE.l (A7),D0
00029E6C <AmiBlitz3.ab3@11382>   MOVEA.l errstack,A7
00029E72 <AmiBlitz3.ab3@11383>   MOVEA.l errcont,A0
00029E74 <AmiBlitz3.ab3@11384> JMP (A0)
00029E78 <AmiBlitz3.ab3@11390>   CMP.w #$7A,D0                                            ;'z'
00029E7C <AmiBlitz3.ab3@11391>    BHI.w tstalpha__no
00029E80 <AmiBlitz3.ab3@11392>   CMP.w #$41,D0                                            ;'A'
00029E84 <AmiBlitz3.ab3@11393>    BCS.w tstalpha__no
00029E88 <AmiBlitz3.ab3@11394>   CMP.w #$61,D0                                            ;'a'
00029E8C <AmiBlitz3.ab3@11395>    BCC.w tstalpha__yes
00029E90 <AmiBlitz3.ab3@11396>   CMP.w #$5A,D0                                            ;'Z'
00029E94 <AmiBlitz3.ab3@11397>    BHI.w tstalpha__no
00029E96 <AmiBlitz3.ab3@11400>   CMP.w D0,D0
00029E98 <AmiBlitz3.ab3@11403> RTS
00029E9C <AmiBlitz3.ab3@11411>   CMP.w #$30,D0                                            ;'0'
00029EA0 <AmiBlitz3.ab3@11412>    BCS.w tstnum__skip
00029EA4 <AmiBlitz3.ab3@11413>   CMP.w #$39,D0                                            ;'9'
00029EA8 <AmiBlitz3.ab3@11414>    BHI.w tstnum__skip                                     
00029EAA <AmiBlitz3.ab3@11415>   CMP.w D0,D0
00029EAC <AmiBlitz3.ab3@11418> RTS
00029ECE <AmiBlitz3.ab3@11424>   !compare1                                                ;bsr.w tstalpha
00029ED2 <AmiBlitz3.ab3@11425>    BEQ.w tstlab__skip
00029EE4 <AmiBlitz3.ab3@11426>   !compare2                                                ;bsr.w tstnum2
00029EE8 <AmiBlitz3.ab3@11427>    BEQ.w tstlab__skip
00029EEC <AmiBlitz3.ab3@11428>   CMP.w #$5F,D0                                            ;'_'
00029EF0 <AmiBlitz3.ab3@11429>    BEQ.w tstlab__skip
00029EF4 <AmiBlitz3.ab3@11430>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00029EF6 <AmiBlitz3.ab3@11433> RTS
00029F00 <AmiBlitz3.ab3@11438>   MOVE.w oldqflag,instringon
00029F06 <AmiBlitz3.ab3@11439>   MOVEA.l lastsourcepos,A5
00029F0C <AmiBlitz3.ab3@11442>   MOVE.l a5,beforeparameterfetch
00029F12 <AmiBlitz3.ab3@11443>   LEA ptr_parameterstore,A1
00029F14 <AmiBlitz3.ab3@11446>   MOVEQ.l #$00,D2
00029F1A <AmiBlitz3.ab3@11449>   LEA chartab,a0
00029F1C <AmiBlitz3.ab3@11450>   MOVEQ #0,d0
00029F22 <AmiBlitz3.ab3@11451>   MOVE.l A5,lastsourcepos
00029F2C <AmiBlitz3.ab3@11452>   MOVE.w instringon,oldqflag
00029F2E <AmiBlitz3.ab3@11455>     MOVE.b (a5)+,d0
00029F32 <AmiBlitz3.ab3@11456>   CMP.b #$20,d0                                            ;space deftype
00029F36 <AmiBlitz3.ab3@11457>   BEQ makename4__retry
00029F3C <AmiBlitz3.ab3@11459>   MOVE.w d0,lastchar
00029F40 <AmiBlitz3.ab3@11460>   TST.b 0(a0,d0.w)
00029F44 <AmiBlitz3.ab3@11461>   BNE makename__done
00029F46 <AmiBlitz3.ab3@11470>   MOVE.b D0,(A1)+
00029F48 <AmiBlitz3.ab3@11471>   ADDQ.l #1,D2
00029F4E <AmiBlitz3.ab3@11472>   MOVE.l A5,lastsourcepos
00029F50 <AmiBlitz3.ab3@11475>   MOVE.b (a5)+,d0
00029F56 <AmiBlitz3.ab3@11476>   MOVE.b d0,lastchar+1
00029F5A <AmiBlitz3.ab3@11477>   CMP.b #$20,d0
00029F5E <AmiBlitz3.ab3@11478>   BEQ makename__loop_l20
00029F62 <AmiBlitz3.ab3@11480>   TST.b 0(a0,d0)
00029F66 <AmiBlitz3.ab3@11481>   BEQ makename__loop
00029F6A <AmiBlitz3.ab3@11482>   CMP.b #2,d0
00029F6E <AmiBlitz3.ab3@11483>   BNE makename__loop_lf1
00029F74 <AmiBlitz3.ab3@11484>   MOVEA.l usedfrom,A5
00029F7A <AmiBlitz3.ab3@11485>   CLR.l usedfrom
00029F7E <AmiBlitz3.ab3@11486> BRA makename__loop_ln1
00029F82 <AmiBlitz3.ab3@11489>   CMP.b #1,d0
00029F86 <AmiBlitz3.ab3@11490>   BNE makename__loop_l20
00029F8A <AmiBlitz3.ab3@11491>   MOVEA.l cmakea5(PC),A5
00029F8E <AmiBlitz3.ab3@11492> BRA makename__loop_ln1
00029F92 <AmiBlitz3.ab3@11495>   CMP.b #$7e,d0
00029F96 <AmiBlitz3.ab3@11496>             BNE makename__loop_lt
00029F9C <AmiBlitz3.ab3@11497>             TST.w cmake
00029FA0 <AmiBlitz3.ab3@11498>             BNE.w makename__loop_a1
00029FA2 <AmiBlitz3.ab3@11499>             SUBQ.l #1,a5
00029FA6 <AmiBlitz3.ab3@11500>             BSR.w get1bytemain
00029FAA <AmiBlitz3.ab3@11501> BRA makename__loop
00029FAE <AmiBlitz3.ab3@11505> BRA makename__loop_gpex
00029FB2 <AmiBlitz3.ab3@11509>   BSR.w getchar
00029FD4 <AmiBlitz3.ab3@11510>    !compare1                                               ;bsr.w tstalpha
00029FD8 <AmiBlitz3.ab3@11511>    BEQ.w makename__loop_getp1
00029FEA <AmiBlitz3.ab3@11512>    !compare2                                               ;bsr.w tstnum
00029FEE <AmiBlitz3.ab3@11513>    BEQ.w makename__loop_getp1
00029FF2 <AmiBlitz3.ab3@11514>   CMP.w #$5F,D0                                            ;'_'
00029FF6 <AmiBlitz3.ab3@11515>    BEQ.w makename__loop_getp1
00029FFA <AmiBlitz3.ab3@11516>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00029FFE <AmiBlitz3.ab3@11520>       BNE makename__loop_gpex
0002A002 <AmiBlitz3.ab3@11521>       CMP.b #$20,d0
0002A006 <AmiBlitz3.ab3@11522>       BNE.w makename__loop
0002A008 <AmiBlitz3.ab3@11525>      TST.b d0
0002A00C <AmiBlitz3.ab3@11526>      BPL makename__loop_l10
0002A00E <AmiBlitz3.ab3@11527>      SUBQ.l #1,a5
0002A012 <AmiBlitz3.ab3@11528>      BSR get1byte_
0002A016 <AmiBlitz3.ab3@11531>    CMP.w #$20,D0
0002A01A <AmiBlitz3.ab3@11532>    BNE.w makename__done
0002A01C <AmiBlitz3.ab3@11533>    MOVEQ #0,d0
0002A022 <AmiBlitz3.ab3@11534>   MOVE.l a5,lastsourcepos
0002A024 <AmiBlitz3.ab3@11537>   MOVE.b (a5)+,d0                                          ;neuneu
0002A028 <AmiBlitz3.ab3@11538>   BPL makename__loop_l101:
0002A02A <AmiBlitz3.ab3@11539>   ASL.w #8,d0
0002A02C <AmiBlitz3.ab3@11540>   MOVE.b (a5)+,d0
0002A032 <AmiBlitz3.ab3@11543>   TST.w instringon
0002A036 <AmiBlitz3.ab3@11544>   BNE makename__loop_l102
0002A03A <AmiBlitz3.ab3@11545>   CMP.b #$20,d0
0002A03E <AmiBlitz3.ab3@11546>   BEQ makename__loop_l103
0002A042 <AmiBlitz3.ab3@11547>   CMP.b #";",d0
0002A046 <AmiBlitz3.ab3@11548>   BNE makename__loop_l102
0002A048 <AmiBlitz3.ab3@11551>   MOVE.b (A5)+,D0
0002A04C <AmiBlitz3.ab3@11552>              BEQ makename__loop_l1
0002A050 <AmiBlitz3.ab3@11553>              CMP.b #":",d0
0002A054 <AmiBlitz3.ab3@11554>              BNE makename__loop_lr                         ;:@
0002A058 <AmiBlitz3.ab3@11555>              CMP.b #"@",(a5)
0002A05C <AmiBlitz3.ab3@11556>              BNE makename__loop_lr
0002A05E <AmiBlitz3.ab3@11557>              ADDQ #1,a5
0002A064 <AmiBlitz3.ab3@11561>   MOVE.w d0,lastchar
0002A068 <AmiBlitz3.ab3@11565>   CMP.b #";",d0
0002A06C <AmiBlitz3.ab3@11566>   BEQ makename__done_l11
0002A06E <AmiBlitz3.ab3@11567>   CLR.b (A1)
0002A070 <AmiBlitz3.ab3@11569>   TST.w D2
0002A072 <AmiBlitz3.ab3@11570> RTS
0002A074 <AmiBlitz3.ab3@11573>   CLR.b (a1)
0002A076 <AmiBlitz3.ab3@11574>   MOVEQ #0,d0
0002A07C <AmiBlitz3.ab3@11575>   MOVE.w d0,lastchar
0002A07E <AmiBlitz3.ab3@11577>   TST.w D2
0002A080 <AmiBlitz3.ab3@11578> RTS
0002A082 <AmiBlitz3.ab3@11584>   MOVE.l (A2),D0
0002A086 <AmiBlitz3.ab3@11587>   BEQ.w findlast__here
0002A088 <AmiBlitz3.ab3@11588>   MOVEA.l D0,A2
0002A08C <AmiBlitz3.ab3@11589> BRA.w findlast__loop
0002A090 <AmiBlitz3.ab3@11592> BRA.w reget
0002A092 <AmiBlitz3.ab3@11598>   MOVE.l (A2),-(A7)
0002A096 <AmiBlitz3.ab3@11599>   BSR.w addlabel
0002A098 <AmiBlitz3.ab3@11600>   MOVE.l (A7)+,(A2)
0002A09A <AmiBlitz3.ab3@11601> RTS
0002A0A0 <AmiBlitz3.ab3@11606>   CLR.l fp0addr
0002A0A6 <AmiBlitz3.ab3@11607>   TST.w dirmode
0002A0AA <AmiBlitz3.ab3@11608>    BNE.w illdirerr
0002A0AC <AmiBlitz3.ab3@11609>   MOVEQ.l #$00,D0
0002A0AE <AmiBlitz3.ab3@11610>   MOVE.w D7,D0
0002A0B0 <AmiBlitz3.ab3@11611>   ADD.w D2,D0
0002A0B2 <AmiBlitz3.ab3@11612>   ADDQ.w #1,D0
0002A0B4 <AmiBlitz3.ab3@11613>   MOVE.w D0,D2
0002A0B6 <AmiBlitz3.ab3@11614>   ADDQ.l #2,d0
0002A0B8 <AmiBlitz3.ab3@11615>   MOVEQ.l #$01,D1
0002A0BE <AmiBlitz3.ab3@11616>   MOVEA.l _execbase,A6
0002A0C4 <AmiBlitz3.ab3@11617>   MOVE.l mempool2,a0
0002A0C8 <AmiBlitz3.ab3@11618>   JSR _AllocPooled(a6)
0002A0CE <AmiBlitz3.ab3@11620>   MOVE.l lastlabel,a2
0002A0D0 <AmiBlitz3.ab3@11621>   MOVE.l D0,(A2)
0002A0D2 <AmiBlitz3.ab3@11622>   MOVE.l d0,a0
0002A0D4 <AmiBlitz3.ab3@11623>   CLR.l (a0)
0002A0DA <AmiBlitz3.ab3@11624>   MOVE.l a0,lastlabel
0002A0DC <AmiBlitz3.ab3@11625>   MOVE.l d0,A2
0002A0E0 <AmiBlitz3.ab3@11626>   LEA -$1(A0,D7.W),A0
0002A0E2 <AmiBlitz3.ab3@11627>   MOVE.b D2,(A0)+
0002A0E8 <AmiBlitz3.ab3@11628>   LEA ptr_parameterstore,A1
0002A0EA <AmiBlitz3.ab3@11629>   MOVEQ #0,d0
0002A0EC <AmiBlitz3.ab3@11630>   MOVEQ #0,d1
0002A0EE <AmiBlitz3.ab3@11633>   MOVE.b (A1)+,d1
0002A0F2 <AmiBlitz3.ab3@11634>    BEQ 'l1
0002A0F8 <AmiBlitz3.ab3@11635>    !hashalgo
0002A0FA <AmiBlitz3.ab3@11636>    MOVE.b d1,(A0)+
0002A0FE <AmiBlitz3.ab3@11637> BRA addlabel_loop2a
0002A100 <AmiBlitz3.ab3@11640>    CLR.b (a0)+
0002A106 <AmiBlitz3.ab3@11641>    LEA labelhash,a0
0002A10C <AmiBlitz3.ab3@11642>    AND.l #hashsize,d0
0002A10E <AmiBlitz3.ab3@11643>    ASL.l #2,d0
0002A112 <AmiBlitz3.ab3@11644>    MOVE.l 0(a0,d0),d1
0002A116 <AmiBlitz3.ab3@11645>    MOVE.l d1,$c(a2)
0002A11A <AmiBlitz3.ab3@11646>    MOVE.l a2,0(a0,d0)
0002A11C <AmiBlitz3.ab3@11647>    MOVEQ #0,d0
0002A120 <AmiBlitz3.ab3@11648> BRA.w reget
0002A126 <AmiBlitz3.ab3@11652>    TST.b newvariable
0002A12A <AmiBlitz3.ab3@11653>    BNE addlabel
0002A130 <AmiBlitz3.ab3@11656>   TST.w dirmode
0002A134 <AmiBlitz3.ab3@11657>    BNE.w illdirerr
0002A136 <AmiBlitz3.ab3@11658>   MOVEQ.l #$00,D0
0002A138 <AmiBlitz3.ab3@11659>   MOVE.w D7,D0
0002A13A <AmiBlitz3.ab3@11660>   ADD.w D2,D0
0002A13C <AmiBlitz3.ab3@11661>   ADDQ.w #1,D0
0002A13E <AmiBlitz3.ab3@11662>   MOVE.w D0,D2
0002A140 <AmiBlitz3.ab3@11663>   MOVEQ.l #$01,D1
0002A146 <AmiBlitz3.ab3@11664>   MOVEA.l _execbase,A6
0002A14C <AmiBlitz3.ab3@11665>   MOVE.l mempool2,a0
0002A150 <AmiBlitz3.ab3@11666>   JSR _AllocPooled(a6)
0002A152 <AmiBlitz3.ab3@11667>   MOVEA.l D0,A0
0002A158 <AmiBlitz3.ab3@11669>   LEA varbase,a2
0002A15A <AmiBlitz3.ab3@11670>   MOVE.l (a2),(a0)
0002A15C <AmiBlitz3.ab3@11671>   MOVE.l A0,(A2)
0002A15E <AmiBlitz3.ab3@11672>   MOVEA.l A0,A2
0002A162 <AmiBlitz3.ab3@11673>   LEA -$1(A0,D7.W),A0
0002A164 <AmiBlitz3.ab3@11674>   MOVE.b D2,(A0)+
0002A16A <AmiBlitz3.ab3@11675>   LEA ptr_parameterstore,A1
0002A16C <AmiBlitz3.ab3@11676>   MOVEQ #0,d0
0002A16E <AmiBlitz3.ab3@11677>   MOVEQ #0,d1
0002A170 <AmiBlitz3.ab3@11680>   MOVE.b (A1)+,d1
0002A174 <AmiBlitz3.ab3@11681>    BEQ 'l12
0002A17A <AmiBlitz3.ab3@11682>    !hashalgo
0002A17C <AmiBlitz3.ab3@11683>    MOVE.b d1,(A0)+
0002A180 <AmiBlitz3.ab3@11684> BRA 'l11
0002A182 <AmiBlitz3.ab3@11687>   CLR.b (a0)+
0002A188 <AmiBlitz3.ab3@11688>   LEA variablehash,a0
0002A18E <AmiBlitz3.ab3@11689>    AND.l #hashsize,d0
0002A190 <AmiBlitz3.ab3@11690>    ASL.l #2,d0
0002A194 <AmiBlitz3.ab3@11691>    MOVE.l 0(a0,d0),d1
0002A198 <AmiBlitz3.ab3@11692>    MOVE.l d1,$e(a2)
0002A19C <AmiBlitz3.ab3@11693>    MOVE.l a2,0(a0,d0)
0002A19E <AmiBlitz3.ab3@11694>    MOVEQ #0,d0
0002A1A2 <AmiBlitz3.ab3@11695> BRA.w reget
0002A1A8 <AmiBlitz3.ab3@11699>   TST.w dirmode
0002A1AC <AmiBlitz3.ab3@11700>    BNE.w illdirerr
0002A1AE <AmiBlitz3.ab3@11707>   MOVEQ.l #$00,D0
0002A1B0 <AmiBlitz3.ab3@11708>   MOVE.w D7,D0
0002A1B2 <AmiBlitz3.ab3@11709>   ADD.w D2,D0
0002A1B4 <AmiBlitz3.ab3@11710>   ADDQ.w #1,D0
0002A1B6 <AmiBlitz3.ab3@11711>   MOVE.w D0,D2
0002A1B8 <AmiBlitz3.ab3@11712>   MOVEQ.l #$01,D1
0002A1BE <AmiBlitz3.ab3@11713>   MOVEA.l _execbase,A6
0002A1C4 <AmiBlitz3.ab3@11714>   MOVE.l mempool2,a0
0002A1C8 <AmiBlitz3.ab3@11715>   JSR _AllocPooled(a6)
0002A1CA <AmiBlitz3.ab3@11717>   MOVEA.l D0,A0
0002A1CC <AmiBlitz3.ab3@11718>   MOVE.l A0,(A2)
0002A1CE <AmiBlitz3.ab3@11719>   CLR.l (a0)
0002A1D2 <AmiBlitz3.ab3@11720>   CLR.l 8(a0)                                              ;clear next
0002A1D4 <AmiBlitz3.ab3@11721>   MOVEA.l A0,A2
0002A1D8 <AmiBlitz3.ab3@11722>   LEA -$1(A0,D7.W),A0
0002A1DA <AmiBlitz3.ab3@11723>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A1E0 <AmiBlitz3.ab3@11724>   LEA ptr_parameterstore,A1
0002A1E2 <AmiBlitz3.ab3@11725>   MOVEQ #0,d0
0002A1E4 <AmiBlitz3.ab3@11726>   MOVEQ #0,d1
0002A1E6 <AmiBlitz3.ab3@11729>   MOVE.b (A1)+,d1
0002A1E8 <AmiBlitz3.ab3@11732>   MOVE.b d1,(A0)+
0002A1EC <AmiBlitz3.ab3@11733>   BNE.w addlabel_loop2
0002A1F0 <AmiBlitz3.ab3@11734> BRA.w reget
0002A1F2 <AmiBlitz3.ab3@11738>   MOVEQ.l #$13,D7
0002A1F8 <AmiBlitz3.ab3@11739>   LEA constantbase,A2
0002A1FC <AmiBlitz3.ab3@11740> BRA.w findlab
0002A1FE <AmiBlitz3.ab3@11744>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A204 <AmiBlitz3.ab3@11745>   LEA xinclude_base,A2
0002A208 <AmiBlitz3.ab3@11746> BRA.w findlab
0002A20A <AmiBlitz3.ab3@11750>   MOVEQ.l #$09,D7
0002A210 <AmiBlitz3.ab3@11751>   LEA firstconst,A2
0002A214 <AmiBlitz3.ab3@11752> BRA.w findlab
0002A216 <AmiBlitz3.ab3@11756>   MOVEQ.l #$0d,D7                                          ;find macro
0002A21C <AmiBlitz3.ab3@11757>   LEA macrobase,A2
0002A220 <AmiBlitz3.ab3@11758> BRA.w findlab
0002A226 <AmiBlitz3.ab3@11762>   LEA labelhash,A2
0002A228 <AmiBlitz3.ab3@11763>   MOVEQ.l #$13,D7
0002A22A <AmiBlitz3.ab3@11764>   EXT.l d2
0002A230 <AmiBlitz3.ab3@11765>   LEA ptr_parameterstore,A0
0002A232 <AmiBlitz3.ab3@11766>   MOVEQ #0,d0
0002A234 <AmiBlitz3.ab3@11767>   MOVEQ #0,d1
0002A236 <AmiBlitz3.ab3@11770>     MOVE.b (a0)+,d1
0002A23A <AmiBlitz3.ab3@11771>     BEQ 'l15
0002A240 <AmiBlitz3.ab3@11772>     !hashalgo
0002A244 <AmiBlitz3.ab3@11773> BRA 'l20
0002A24A <AmiBlitz3.ab3@11776>   AND.l #hashsize,d0
0002A24C <AmiBlitz3.ab3@11777>   ASL.l #2,d0
0002A250 <AmiBlitz3.ab3@11778>   MOVE.l 0(a2,d0),d0
0002A254 <AmiBlitz3.ab3@11779> BRA 'l11
0002A258 <AmiBlitz3.ab3@11782>   MOVE.l $c(A2),D0                                         ;find label
0002A25C <AmiBlitz3.ab3@11785>   BEQ findlab__no
0002A25E <AmiBlitz3.ab3@11786>   MOVEA.l D0,A2
0002A260 <AmiBlitz3.ab3@11787>   MOVEQ.l #$00,D0
0002A264 <AmiBlitz3.ab3@11788>   MOVE.b -$1(A2,D7.l),D0
0002A26A <AmiBlitz3.ab3@11789>   LEA ptr_parameterstore,A0
0002A26C <AmiBlitz3.ab3@11790>   SUB.l D7,D0
0002A26E <AmiBlitz3.ab3@11791>   SUBQ.l #1,D0
0002A270 <AmiBlitz3.ab3@11792>   CMP.l D0,D2
0002A274 <AmiBlitz3.ab3@11793>    BNE.b 'l10
0002A278 <AmiBlitz3.ab3@11794>   LEA $0(A2,D7.W),A1
0002A27A <AmiBlitz3.ab3@11795>   SUBQ.l #1,D0
0002A27C <AmiBlitz3.ab3@11798>     MOVE.b (a1)+,d1
0002A27E <AmiBlitz3.ab3@11799>     CMP.b (a0)+,d1
0002A282 <AmiBlitz3.ab3@11801>     BNE.b 'l10
0002A286 <AmiBlitz3.ab3@11802>   DBF D0,'l201
0002A28A <AmiBlitz3.ab3@11804>   BSR.w reget
0002A28C <AmiBlitz3.ab3@11805>   CMP.w D0,D0
0002A28E <AmiBlitz3.ab3@11806> RTS
0002A290 <AmiBlitz3.ab3@11810>   MOVEQ.l #$0B,D7
0002A294 <AmiBlitz3.ab3@11811> BRA.w findlab
0002A29A <AmiBlitz3.ab3@11815>   LEA firstproc,A2
0002A2A0 <AmiBlitz3.ab3@11816>   MOVE.l #$21+#funcentry_extend,D7
0002A2A4 <AmiBlitz3.ab3@11817> BRA findlab
0002A2AA <AmiBlitz3.ab3@11821>   LEA firstfor,A2
0002A2AC <AmiBlitz3.ab3@11822>   MOVEQ.l #$11,D7
0002A2B0 <AmiBlitz3.ab3@11823> BRA.w findlab
0002A2B2 <AmiBlitz3.ab3@11827>   MOVEQ.l #$0F,D7
0002A2B6 <AmiBlitz3.ab3@11828> BRA.w findlab
0002A2B8 <AmiBlitz3.ab3@11832>   MOVEQ.l #$0F+4,D7
0002A2BE <AmiBlitz3.ab3@11833>   TST.b newvariable
0002A2C2 <AmiBlitz3.ab3@11834>    BNE.w findlab
0002A2C8 <AmiBlitz3.ab3@11835>   LEA variablehash,A2
0002A2CE <AmiBlitz3.ab3@11836>   LEA ptr_parameterstore,A0
0002A2D0 <AmiBlitz3.ab3@11837>   MOVEQ #0,d0
0002A2D2 <AmiBlitz3.ab3@11838>   MOVEQ #0,d1
0002A2D4 <AmiBlitz3.ab3@11841>     MOVE.b (a0)+,d1
0002A2D8 <AmiBlitz3.ab3@11842>     BEQ 'l15
0002A2DE <AmiBlitz3.ab3@11843>     !hashalgo
0002A2E2 <AmiBlitz3.ab3@11844> BRA 'l20
0002A2E8 <AmiBlitz3.ab3@11847>   AND.l #hashsize,d0
0002A2EA <AmiBlitz3.ab3@11848>   ASL.l #2,d0
0002A2EE <AmiBlitz3.ab3@11849>   MOVE.l 0(a2,d0),d0
0002A2F2 <AmiBlitz3.ab3@11850> BRA 'l11
0002A2F6 <AmiBlitz3.ab3@11853>   MOVE.l $e(A2),D0                                         ;find label
0002A2FA <AmiBlitz3.ab3@11856>   BEQ findlab__no
0002A2FC <AmiBlitz3.ab3@11857>   MOVEA.l D0,A2
0002A2FE <AmiBlitz3.ab3@11858>   MOVEQ.l #$00,D0
0002A302 <AmiBlitz3.ab3@11859>   MOVE.b -$1(A2,D7.W),D0
0002A308 <AmiBlitz3.ab3@11860>   LEA ptr_parameterstore,A0
0002A30A <AmiBlitz3.ab3@11861>   SUB.w D7,D0
0002A30C <AmiBlitz3.ab3@11862>   SUBQ.l #1,D0
0002A30E <AmiBlitz3.ab3@11863>   CMP.w D0,D2
0002A312 <AmiBlitz3.ab3@11864>    BNE.b 'l10
0002A316 <AmiBlitz3.ab3@11865>   LEA $0(A2,D7.W),A1
0002A318 <AmiBlitz3.ab3@11866>   SUBQ.l #1,D0
0002A31A <AmiBlitz3.ab3@11869>     MOVE.b (a1)+,d1
0002A31C <AmiBlitz3.ab3@11870>     CMP.b (a0)+,d1
0002A320 <AmiBlitz3.ab3@11872>     BNE.b 'l10
0002A324 <AmiBlitz3.ab3@11873>   DBF D0,'l201
0002A328 <AmiBlitz3.ab3@11875>   BSR.w reget
0002A32A <AmiBlitz3.ab3@11876>   CMP.w D0,D0
0002A32C <AmiBlitz3.ab3@11877> RTS
0002A32E <AmiBlitz3.ab3@11890>     MOVE.l (A2),D0                                         ;find label
0002A332 <AmiBlitz3.ab3@11891>      BEQ.b findlab__no
0002A334 <AmiBlitz3.ab3@11892>     MOVEA.l D0,A2
0002A336 <AmiBlitz3.ab3@11893>     MOVEQ.l #$00,D0
0002A33A <AmiBlitz3.ab3@11894>     MOVE.b -$1(A2,D7.W),D0
0002A33C <AmiBlitz3.ab3@11895>     SUB.l D7,D0
0002A33E <AmiBlitz3.ab3@11896>     SUBQ.l #1,D0
0002A340 <AmiBlitz3.ab3@11897>   CMP.w D0,D2
0002A344 <AmiBlitz3.ab3@11898>   BNE.b findlab__loop
0002A348 <AmiBlitz3.ab3@11900>   LEA $0(A2,D7.W),A1
0002A34E <AmiBlitz3.ab3@11901>   LEA ptr_parameterstore,A0
0002A350 <AmiBlitz3.ab3@11902>   SUBQ.l #1,D0
0002A352 <AmiBlitz3.ab3@11905>     MOVE.b (a1)+,d1
0002A354 <AmiBlitz3.ab3@11906>     CMP.b (a0)+,d1
0002A358 <AmiBlitz3.ab3@11908>     BNE.b findlab__loop
0002A35C <AmiBlitz3.ab3@11909>   DBF D0,findlab__loop2
0002A360 <AmiBlitz3.ab3@11911>   BSR.w reget
0002A362 <AmiBlitz3.ab3@11912>   CMP.w D0,D0
0002A364 <AmiBlitz3.ab3@11913> RTS
0002A368 <AmiBlitz3.ab3@11916>   BSR.w reget
0002A36A <AmiBlitz3.ab3@11917>   MOVEQ.l #-$01,D1
0002A36C <AmiBlitz3.ab3@11918> RTS
0002A372 <AmiBlitz3.ab3@11922>   MOVEA.l alllocals,A4
0002A378 <AmiBlitz3.ab3@11923>   CLR.l alllocals
0002A37C <AmiBlitz3.ab3@11927>     CMPA.w #$0,A4
0002A380 <AmiBlitz3.ab3@11928>      BEQ.b freeprocvs__done
0002A384 <AmiBlitz3.ab3@11929>     MOVEA.l $4(A4),A3
0002A388 <AmiBlitz3.ab3@11931>     MOVEA.l $8(A4),A3
0002A38A <AmiBlitz3.ab3@11933>     MOVEA.l A4,A1
0002A38C <AmiBlitz3.ab3@11934>     MOVEA.l (A4),A4
0002A38E <AmiBlitz3.ab3@11935>     MOVEQ.l #$0C,D0
0002A394 <AmiBlitz3.ab3@11936>     MOVEA.l _execbase,A6
0002A39A <AmiBlitz3.ab3@11937>     MOVE.l mempool,a0
0002A39E <AmiBlitz3.ab3@11938>     JSR _FreePooled(A6)
0002A3A2 <AmiBlitz3.ab3@11939> BRA.b freeprocvs__loop
0002A3A8 <AmiBlitz3.ab3@11942>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002A3AE <AmiBlitz3.ab3@11943>   CLR.l firstlocal
0002A3B4 <AmiBlitz3.ab3@11944>   CLR.l sharebase
0002A3BA <AmiBlitz3.ab3@11945>   TST.l mempool2
0002A3BE <AmiBlitz3.ab3@11946>   BEQ freeprocvs__done_l10
0002A3C4 <AmiBlitz3.ab3@11948>   MOVEA.l _execbase,A6
0002A3CA <AmiBlitz3.ab3@11949>   MOVE.l mempool2,a0
0002A3D0 <AmiBlitz3.ab3@11950>   CLR.l mempool2
0002A3D4 <AmiBlitz3.ab3@11951>   JSR _DeletePool(a6)
0002A3DA <AmiBlitz3.ab3@11954>   MOVE.l _execbase,a6
0002A3E0 <AmiBlitz3.ab3@11955>   MOVE.l #$10000,d0
0002A3E6 <AmiBlitz3.ab3@11956>   MOVE.l #80000,d1
0002A3E8 <AmiBlitz3.ab3@11957>   MOVE.l d1,d2
0002A3EC <AmiBlitz3.ab3@11958>   JSR _CreatePool(a6)
0002A3F2 <AmiBlitz3.ab3@11959>   MOVE.l d0,mempool2
0002A3F4 <AmiBlitz3.ab3@11960> RTS
0002A3F8 <AmiBlitz3.ab3@11964>   CMPA.w #$0,A3
0002A3FC <AmiBlitz3.ab3@11965>    BEQ.w freevars__done
0002A3FE <AmiBlitz3.ab3@11966>   MOVEA.l A3,A1
0002A400 <AmiBlitz3.ab3@11967>   MOVEA.l (A3),A3
0002A402 <AmiBlitz3.ab3@11968>   MOVEQ.l #$00,D0
0002A406 <AmiBlitz3.ab3@11969>   MOVE.b $E(A1),D0
0002A40C <AmiBlitz3.ab3@11970>   MOVEA.l _execbase,A6
0002A412 <AmiBlitz3.ab3@11971>   MOVE.l mempool2,a0
0002A416 <AmiBlitz3.ab3@11972>   JSR _FreePooled(A6)
0002A41A <AmiBlitz3.ab3@11973> BRA.w freevars
0002A41E <AmiBlitz3.ab3@11976>     CMPA.w #$0,A3
0002A422 <AmiBlitz3.ab3@11977>      BEQ.w freevars__done
0002A424 <AmiBlitz3.ab3@11978>     MOVEA.l A3,A1
0002A426 <AmiBlitz3.ab3@11979>     MOVEA.l (A3),A3
0002A428 <AmiBlitz3.ab3@11980>     MOVEQ.l #$00,D0
0002A42C <AmiBlitz3.ab3@11981>     MOVE.b $E+4(A1),D0
0002A432 <AmiBlitz3.ab3@11982>     MOVEA.l _execbase,A6
0002A438 <AmiBlitz3.ab3@11983>     MOVE.l mempool2,a0
0002A43C <AmiBlitz3.ab3@11984>     JSR _FreePooled(A6)
0002A440 <AmiBlitz3.ab3@11985> BRA.w freevarsb
0002A442 <AmiBlitz3.ab3@11988> RTS
0002A448 <AmiBlitz3.ab3@11992>   MOVEA.l currentlabeladdr,A0
0002A44E <AmiBlitz3.ab3@11993>   MOVE.l a0,lastlabel
0002A450 <AmiBlitz3.ab3@11994>   MOVEA.l (A0),A2
0002A452 <AmiBlitz3.ab3@11995>   CLR.l (A0)
0002A458 <AmiBlitz3.ab3@11996>   MOVEA.l _execbase,A6
0002A45C <AmiBlitz3.ab3@11999>   CMPA.w #$0,A2
0002A460 <AmiBlitz3.ab3@12000>    BEQ.w clearlabels__done
0002A464 <AmiBlitz3.ab3@12001>   MOVE.l $4(A2),D0
0002A468 <AmiBlitz3.ab3@12002>   BTST #$0,D0
0002A46C <AmiBlitz3.ab3@12003>    BNE.w clearlabels__skip
0002A46E <AmiBlitz3.ab3@12004>   MOVEA.l D0,A3
0002A472 <AmiBlitz3.ab3@12007>     CMPA.w #$0,A3
0002A476 <AmiBlitz3.ab3@12008>      BEQ.w clearlabels__skip
0002A478 <AmiBlitz3.ab3@12009>     MOVEA.l A3,A1
0002A47A <AmiBlitz3.ab3@12010>     MOVEA.l (A3),A3
0002A47C <AmiBlitz3.ab3@12011>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002A482 <AmiBlitz3.ab3@12012>     MOVE.l mempool,a0
0002A486 <AmiBlitz3.ab3@12013>     JSR _FreePooled(A6)
0002A48A <AmiBlitz3.ab3@12014> BRA.w clearlabels__loop2
0002A48C <AmiBlitz3.ab3@12017>   MOVEQ.l #$00,D0
0002A490 <AmiBlitz3.ab3@12018>   MOVE.b $12(A2),D0
0002A492 <AmiBlitz3.ab3@12019>   MOVEA.l A2,A1
0002A494 <AmiBlitz3.ab3@12020>   MOVEA.l (A2),A2
0002A49A <AmiBlitz3.ab3@12021>   MOVE.l mempool2,a0
0002A49E <AmiBlitz3.ab3@12023> BRA.w clearlabels__loop
0002A4A0 <AmiBlitz3.ab3@12026> RTS
0002A4A6 <AmiBlitz3.ab3@12030>   MOVEA.l firstpend,A3
0002A4AC <AmiBlitz3.ab3@12031>   CLR.l firstpend
0002A4B2 <AmiBlitz3.ab3@12032>   MOVEA.l _execbase,A6
0002A4B6 <AmiBlitz3.ab3@12035>     CMPA.w #$0,A3
0002A4BA <AmiBlitz3.ab3@12036>      BEQ.w freepends__done
0002A4BC <AmiBlitz3.ab3@12037>     MOVEA.l A3,A1
0002A4BE <AmiBlitz3.ab3@12038>     MOVEQ.l #$08,D0
0002A4C0 <AmiBlitz3.ab3@12039>     MOVEA.l (A3),A3
0002A4C6 <AmiBlitz3.ab3@12040>     MOVE.l mempool,a0
0002A4CA <AmiBlitz3.ab3@12041>     JSR _FreePooled(A6)
0002A4CE <AmiBlitz3.ab3@12042> BRA.w fpnd2
0002A4D0 <AmiBlitz3.ab3@12045> RTS
0002A4D6 <AmiBlitz3.ab3@12049>   MOVEA.l firstproc,A2
0002A4DC <AmiBlitz3.ab3@12050>   CLR.l firstproc
0002A4E2 <AmiBlitz3.ab3@12051>   MOVEA.l _execbase,A6
0002A4E6 <AmiBlitz3.ab3@12054>     CMPA.w #$0,A2
0002A4EA <AmiBlitz3.ab3@12055>      BEQ.w clearfunctionlist__done
0002A4EC <AmiBlitz3.ab3@12056>     MOVEA.l A2,A1
0002A4EE <AmiBlitz3.ab3@12057>     MOVEA.l (A2),A2
0002A4F0 <AmiBlitz3.ab3@12058>     MOVEQ.l #$00,D0
0002A4F4 <AmiBlitz3.ab3@12059>     MOVE.b $20+#funcentry_extend(A1),D0
0002A4FA <AmiBlitz3.ab3@12060>     MOVE.l mempool2,a0
0002A4FE <AmiBlitz3.ab3@12061>     JSR _FreePooled(A6)
0002A502 <AmiBlitz3.ab3@12062> BRA.w clearfunctionlist__loop
0002A504 <AmiBlitz3.ab3@12065> RTS
0002A508 <AmiBlitz3.ab3@12069>   CMPA.w #$0,A2
0002A50C <AmiBlitz3.ab3@12070>    BEQ.w freetypes__done
0002A510 <AmiBlitz3.ab3@12071>   MOVEA.l $4(A2),A3
0002A514 <AmiBlitz3.ab3@12072>   CMPA.w #$FF,A3
0002A518 <AmiBlitz3.ab3@12073>    BEQ.w freetypes__noway
0002A51C <AmiBlitz3.ab3@12077>    BSR.w freevars
0002A51E <AmiBlitz3.ab3@12080>     MOVEA.l A2,A1
0002A520 <AmiBlitz3.ab3@12081>     MOVEA.l (A2),A2
0002A522 <AmiBlitz3.ab3@12082>     MOVEQ.l #$00,D0
0002A526 <AmiBlitz3.ab3@12083>     MOVE.b $A(A1),D0
0002A52C <AmiBlitz3.ab3@12084>     MOVEA.l _execbase,A6
0002A532 <AmiBlitz3.ab3@12085>     MOVE.l mempool2,a0
0002A536 <AmiBlitz3.ab3@12086>     JSR _FreePooled(A6)
0002A53A <AmiBlitz3.ab3@12087> BRA.w freetypes
0002A53C <AmiBlitz3.ab3@12090> RTS
0002A542 <AmiBlitz3.ab3@12094>   JSR uselib2
0002A548 <AmiBlitz3.ab3@12096>   CLR.w notshared
0002A54E <AmiBlitz3.ab3@12097>   CLR.w varmode
0002A554 <AmiBlitz3.ab3@12098>   MOVE.w proceduremode,D1
0002A558 <AmiBlitz3.ab3@12099>    BNE.w JL_0_8F4E
0002A55E <AmiBlitz3.ab3@12100>   LEA varbase,A2
0002A564 <AmiBlitz3.ab3@12101>   LEA ptr_parameterstore,a0
0002A568 <AmiBlitz3.ab3@12102>   CMP.b #$22,(a0)
0002A56C <AmiBlitz3.ab3@12103>   BNE JL_0_8E5E
0002A56E <AmiBlitz3.ab3@12104>   MOVEQ #0,d0
0002A574 <AmiBlitz3.ab3@12105> JMP error
0002A578 <AmiBlitz3.ab3@12108>   BSR.w findvariable
0002A57C <AmiBlitz3.ab3@12111>   BNE.w JL_0_8E7E
0002A582 <AmiBlitz3.ab3@12114>   MOVE.b flagmask+1,D1
0002A586 <AmiBlitz3.ab3@12115>   MOVE.b $7(A2),D3
0002A588 <AmiBlitz3.ab3@12116>   EOR.b D3,D1
0002A58C <AmiBlitz3.ab3@12117>   BNE 'l2
0002A594 <AmiBlitz3.ab3@12118>   CMP.b #2,nowdeclare
0002A598 <AmiBlitz3.ab3@12119>   BEQ errormsg_declaredtwice
0002A59C <AmiBlitz3.ab3@12120> BRA.w JL_0_8FA8
0002A5A0 <AmiBlitz3.ab3@12123>   BSR.w findlab
0002A5A4 <AmiBlitz3.ab3@12124>   BNE 'l1
0002A5AC <AmiBlitz3.ab3@12125>   CMP.b #2,nowdeclare
0002A5B0 <AmiBlitz3.ab3@12126>   BEQ errormsg_declaredtwice
0002A5B2 <AmiBlitz3.ab3@12127>   CMP.w d0,d0
0002A5B6 <AmiBlitz3.ab3@12130> BRA.w JL_0_8E62
0002A5B8 <AmiBlitz3.ab3@12133>    MOVE.l a2,-(a7)
0002A5BE <AmiBlitz3.ab3@12134>    LEA sharebase,a2
0002A5C0 <AmiBlitz3.ab3@12135>    MOVEQ #$f+4,d7
0002A5C4 <AmiBlitz3.ab3@12136>    BSR.w findlab
0002A5C8 <AmiBlitz3.ab3@12137>    BEQ 'l2x
0002A5CA <AmiBlitz3.ab3@12138>    MOVE.l (a7)+,a2
0002A5CE <AmiBlitz3.ab3@12139> BRA 'cont
0002A5D0 <AmiBlitz3.ab3@12142>   ADDQ.l #4,a7
0002A5D6 <AmiBlitz3.ab3@12143>   CLR.w varmode
0002A5DC <AmiBlitz3.ab3@12144>   MOVE.b flagmask+1,D1
0002A5E0 <AmiBlitz3.ab3@12145>   MOVE.b $7(A2),D3
0002A5E2 <AmiBlitz3.ab3@12146>   EOR.b D3,D1
0002A5E6 <AmiBlitz3.ab3@12147>   BNE vardeclareerr
0002A5EA <AmiBlitz3.ab3@12148> BRA JL_0_8FA8
0002A5F0 <AmiBlitz3.ab3@12151>    MOVE.w nonew,D1
0002A5F4 <AmiBlitz3.ab3@12152>    BNE.w nonewerr
0002A5FA <AmiBlitz3.ab3@12153>    TST.b nowdeclare
0002A5FE <AmiBlitz3.ab3@12154>    BNE 'l2
0002A604 <AmiBlitz3.ab3@12155>    TST.b declare2
0002A608 <AmiBlitz3.ab3@12156>    BEQ 'l1
0002A60C <AmiBlitz3.ab3@12157>    CMP.b #$2e,d0
0002A610 <AmiBlitz3.ab3@12158>    BEQ 'l2
0002A614 <AmiBlitz3.ab3@12159>    CMP.b #"$",d0
0002A618 <AmiBlitz3.ab3@12160>    BEQ 'l2
0002A61C <AmiBlitz3.ab3@12161> BRA vardeclareerr
0002A622 <AmiBlitz3.ab3@12164>   TST.b declare
0002A626 <AmiBlitz3.ab3@12165>    BNE vardeclareerr
0002A62A <AmiBlitz3.ab3@12168>   BSR.w addvariable
0002A630 <AmiBlitz3.ab3@12169>   NOT.w notshared
0002A632 <AmiBlitz3.ab3@12170>   MOVEA.l A2,A3
0002A638 <AmiBlitz3.ab3@12171>   MOVEA.l defaulttype,A2
0002A63C <AmiBlitz3.ab3@12172>   CMP.w #$2E,D0
0002A640 <AmiBlitz3.ab3@12173>    BEQ.w JL_0_8EB8
0002A644 <AmiBlitz3.ab3@12174>   CMP.w #$24,D0
0002A648 <AmiBlitz3.ab3@12175>    BNE.w JL_0_8ECA
0002A64E <AmiBlitz3.ab3@12176>   LEA newtype_string,A2
0002A652 <AmiBlitz3.ab3@12177>    BSR.w get1bytemain
0002A656 <AmiBlitz3.ab3@12178> BRA.w JL_0_8ECA
0002A65C <AmiBlitz3.ab3@12181> JMP JUMP_notypeerr
0002A660 <AmiBlitz3.ab3@12184>    BSR.w getparameter2
0002A666 <AmiBlitz3.ab3@12185>   LEA newtypebase,A2
0002A66A <AmiBlitz3.ab3@12186>    BSR.w findtype
0002A66E <AmiBlitz3.ab3@12187>    BNE.w notypeerr3
0002A674 <AmiBlitz3.ab3@12190>   CMPA.l #newtype_byte,A2
0002A678 <AmiBlitz3.ab3@12191>    BEQ.w JL_0_8EECb
0002A67E <AmiBlitz3.ab3@12192>   MOVE.w varmode,D1
0002A682 <AmiBlitz3.ab3@12193>    BNE.w JL_0_8EE4b
0002A688 <AmiBlitz3.ab3@12194>   ADDQ.w #1,globalvarpointer
0002A690 <AmiBlitz3.ab3@12197>   BCLR #$0,globalvarpointer+1
0002A694 <AmiBlitz3.ab3@12200>   MOVE.l A2,$A(A3)
0002A69C <AmiBlitz3.ab3@12201>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A69E <AmiBlitz3.ab3@12203>   MOVEQ.l #$04,D1
0002A6A6 <AmiBlitz3.ab3@12204>   BTST #$0,flagmask+1
0002A6AA <AmiBlitz3.ab3@12205>    BNE.w JL_0_8F22b
0002A6B2 <AmiBlitz3.ab3@12206>   BTST #$1,flagmask+1
0002A6B6 <AmiBlitz3.ab3@12207>    BNE.w JL_0_8F22b
0002A6BE <AmiBlitz3.ab3@12208>   CMPI.l #$100,$4(A2)
0002A6C2 <AmiBlitz3.ab3@12209>    BCC.w JL_0_8F22b
0002A6C6 <AmiBlitz3.ab3@12210>   MOVE.w $8(A2),D1
0002A6CC <AmiBlitz3.ab3@12213>   TST.w varmode
0002A6D0 <AmiBlitz3.ab3@12214> BRA.w JL_0_8F3E
0002A6D4 <AmiBlitz3.ab3@12223>   BSR.w getparameter2
0002A6DA <AmiBlitz3.ab3@12224>   LEA newtypebase,A2
0002A6DE <AmiBlitz3.ab3@12225>    BSR.w findtype
0002A6E2 <AmiBlitz3.ab3@12226>    BNE.w notypeerr
0002A6E8 <AmiBlitz3.ab3@12229>   CMPA.l #newtype_byte,A2
0002A6EC <AmiBlitz3.ab3@12230>    BEQ.w JL_0_8EEC
0002A6F2 <AmiBlitz3.ab3@12231>   MOVE.w varmode,D1
0002A6F6 <AmiBlitz3.ab3@12232>    BNE.w JL_0_8EE4
0002A6FC <AmiBlitz3.ab3@12233>   ADDQ.w #1,globalvarpointer
0002A704 <AmiBlitz3.ab3@12236>   BCLR #$0,globalvarpointer+1
0002A708 <AmiBlitz3.ab3@12239>   MOVE.l A2,$A(A3)
0002A710 <AmiBlitz3.ab3@12240>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A712 <AmiBlitz3.ab3@12241>   MOVEQ.l #$04,D1
0002A71A <AmiBlitz3.ab3@12242>   BTST #$0,flagmask+1
0002A71E <AmiBlitz3.ab3@12243>    BNE.w JL_0_8F22
0002A726 <AmiBlitz3.ab3@12244>   BTST #$1,flagmask+1
0002A72A <AmiBlitz3.ab3@12245>    BNE.w JL_0_8F22
0002A732 <AmiBlitz3.ab3@12246>   CMPI.l #$100,$4(A2)
0002A736 <AmiBlitz3.ab3@12247>    BCC.w JL_0_8F22
0002A73A <AmiBlitz3.ab3@12248>   MOVE.w $8(A2),D1
0002A740 <AmiBlitz3.ab3@12251>   TST.w varmode
0002A744 <AmiBlitz3.ab3@12252>    BEQ.w JL_0_8F3E
0002A746 <AmiBlitz3.ab3@12253>   NEG.w D1
0002A74C <AmiBlitz3.ab3@12254>   ADD.w D1,globalvarpointer
0002A754 <AmiBlitz3.ab3@12255>   MOVE.w globalvarpointer,$4(A3)
0002A756 <AmiBlitz3.ab3@12256> RTS
0002A75E <AmiBlitz3.ab3@12259>   MOVE.w globalvarpointer,$4(A3)
0002A764 <AmiBlitz3.ab3@12260>   ADD.w D1,globalvarpointer
0002A766 <AmiBlitz3.ab3@12261> RTS
0002A76C <AmiBlitz3.ab3@12265>   LEA firstglob,A2
0002A770 <AmiBlitz3.ab3@12266>    BSR.w findvariable2
0002A774 <AmiBlitz3.ab3@12269>   BNE.w JL_0_8F74
0002A77A <AmiBlitz3.ab3@12270>   MOVE.b flagmask+1,D1
0002A77E <AmiBlitz3.ab3@12271>   MOVE.b $7(A2),D3
0002A780 <AmiBlitz3.ab3@12272>   EOR.b D3,D1
0002A784 <AmiBlitz3.ab3@12273>    BEQ.w JL_0_8FA8
0002A788 <AmiBlitz3.ab3@12274>    BSR.w findlab
0002A78C <AmiBlitz3.ab3@12275> BRA.w JL_0_8F58
0002A794 <AmiBlitz3.ab3@12278>   MOVE.w #$FFFF,varmode
0002A79A <AmiBlitz3.ab3@12279>   MOVE.w globalvarpointer,-(A7)
0002A7A4 <AmiBlitz3.ab3@12280>   MOVE.w locvaroff,globalvarpointer
0002A7AA <AmiBlitz3.ab3@12281>   LEA firstlocal,A2
0002A7B2 <AmiBlitz3.ab3@12282>   MOVE.b #1,newvariable
0002A7B6 <AmiBlitz3.ab3@12283>    BSR.w JL_0_8E5E
0002A7BC <AmiBlitz3.ab3@12284>   CLR.b newvariable
0002A7C6 <AmiBlitz3.ab3@12285>   MOVE.w globalvarpointer,locvaroff
0002A7CC <AmiBlitz3.ab3@12286>   MOVE.w (A7)+,globalvarpointer
0002A7CE <AmiBlitz3.ab3@12287> RTS
0002A7D0 <AmiBlitz3.ab3@12290>   MOVEA.l A2,A3
0002A7D4 <AmiBlitz3.ab3@12291>   CMP.w #$2E,D0
0002A7D8 <AmiBlitz3.ab3@12292>    BEQ.w JL_0_8FCE
0002A7DC <AmiBlitz3.ab3@12293>   CMP.w #$24,D0
0002A7E0 <AmiBlitz3.ab3@12294>    BNE.w JL_0_8FE8
0002A7E8 <AmiBlitz3.ab3@12295>   CMPI.l #newtype_string,$A(A3)
0002A7EC <AmiBlitz3.ab3@12296>    BNE.w rongtypeerr
0002A7F0 <AmiBlitz3.ab3@12297>    BSR.w get1bytemain
0002A7F4 <AmiBlitz3.ab3@12298> BRA.w JL_0_8FE8
0002A7F8 <AmiBlitz3.ab3@12301>    BSR.w getparameter2
0002A7FE <AmiBlitz3.ab3@12302>   LEA newtypebase,A2
0002A802 <AmiBlitz3.ab3@12303>    BSR.w findtype
0002A806 <AmiBlitz3.ab3@12304>    BNE.w notypeerr
0002A80A <AmiBlitz3.ab3@12305>   CMPA.l $A(A3),A2
0002A80E <AmiBlitz3.ab3@12306>    BNE.w rongtypeerr
0002A816 <AmiBlitz3.ab3@12308>   BTST #$0,flagmask+1
0002A81A <AmiBlitz3.ab3@12309>    BEQ.w JL_0_8FFE
0002A820 <AmiBlitz3.ab3@12310>   BTST #$0,$7(A3)
0002A824 <AmiBlitz3.ab3@12311>    BEQ.w pointerr
0002A828 <AmiBlitz3.ab3@12314>   MOVEA.l $A(A3),A2
0002A82A <AmiBlitz3.ab3@12315> RTS
0002A82C <AmiBlitz3.ab3@12319>    TST.l D3                                                ;newtype >32kb  .w to .l
0002A830 <AmiBlitz3.ab3@12320>    BEQ.w JL_0_9042
0002A83A <AmiBlitz3.ab3@12321>    MOVE.l destpointer,loada
0002A83E <AmiBlitz3.ab3@12324> BRA JL_0_9032
0002A842 <AmiBlitz3.ab3@12326>   CMP.w #$9,D3                                             ;_addq_arrays
0002A846 <AmiBlitz3.ab3@12327>    BCC.w JL_0_9032
0002A84C <AmiBlitz3.ab3@12328>   MOVE.w d3,arrayoffset
0002A850 <AmiBlitz3.ab3@12329>   ANDI.w #$7,D3
0002A852 <AmiBlitz3.ab3@12330>   LSL.w #8,D3
0002A854 <AmiBlitz3.ab3@12331>   LSL.w #1,D3
0002A85C <AmiBlitz3.ab3@12332>   ANDI.w #$F1FF,addqa0
0002A862 <AmiBlitz3.ab3@12333>   OR.w D3,addqa0
0002A868 <AmiBlitz3.ab3@12334>   MOVE.w addqa0,D1
0002A86C <AmiBlitz3.ab3@12335> BRA.w writeword
0002A872 <AmiBlitz3.ab3@12338>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002A876 <AmiBlitz3.ab3@12339>   BGT longoffset
0002A87C <AmiBlitz3.ab3@12340>   MOVE.w D3,leaa0a0+2
0002A882 <AmiBlitz3.ab3@12341>   MOVE.w d3,arrayoffset
0002A888 <AmiBlitz3.ab3@12342>   MOVE.l leaa0a0,D1
0002A88C <AmiBlitz3.ab3@12343>   BSR.w writelong
0002A88E <AmiBlitz3.ab3@12346> RTS
0002A892 <AmiBlitz3.ab3@12349>    MOVE.w #$d5fc,d1
0002A896 <AmiBlitz3.ab3@12350>    BSR writeword
0002A898 <AmiBlitz3.ab3@12351>    MOVE.l d3,d1
0002A89C <AmiBlitz3.ab3@12352>    BSR.w writelong
0002A89E <AmiBlitz3.ab3@12353> RTS
0002A8A2 <AmiBlitz3.ab3@12357>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002A8A6 <AmiBlitz3.ab3@12360>    BCS.w arrchk3                                           
0002A8AC <AmiBlitz3.ab3@12361>    JSR $20000                                              ;jsr 0
0002A8B2 <AmiBlitz3.ab3@12367>   TST.b fast
0002A8B6 <AmiBlitz3.ab3@12368>   BEQ 'l1
0002A8B8 <AmiBlitz3.ab3@12369>    MOVEQ #0,d1                                             ;faster arrays
0002A8BE <AmiBlitz3.ab3@12370>    MOVE.w regnum,d2
0002A8C0 <AmiBlitz3.ab3@12371>    MOVE.w d2,d1
0002A8C2 <AmiBlitz3.ab3@12372>    LSL.w #8,d1
0002A8C4 <AmiBlitz3.ab3@12373>    LSL.w #4,d1
0002A8C6 <AmiBlitz3.ab3@12374>    ADD.w d2,d1
0002A8CC <AmiBlitz3.ab3@12375>    OR.l #$4c2d0000,d1
0002A8D2 <AmiBlitz3.ab3@12376>    TST.w varmode
0002A8D6 <AmiBlitz3.ab3@12377>    BEQ 'l1a
0002A8DA <AmiBlitz3.ab3@12378>    BCLR #16,d1
0002A8DE <AmiBlitz3.ab3@12381>    BSR writelong
0002A8E2 <AmiBlitz3.ab3@12382>    MOVE.w $4(A7),D1
0002A8E6 <AmiBlitz3.ab3@12383>    BSR.w writeword
0002A8EC <AmiBlitz3.ab3@12384>    MOVE.w regnum,D1
0002A8EE <AmiBlitz3.ab3@12385>   SUBQ.w #1,D1
0002A8F0 <AmiBlitz3.ab3@12386>   LSL.w #8,D1
0002A8F2 <AmiBlitz3.ab3@12387>   LSL.w #1,D1
0002A8F6 <AmiBlitz3.ab3@12388>   ORI.w #$D080,D1
0002A8FC <AmiBlitz3.ab3@12389>   OR.w regnum,D1
0002A900 <AmiBlitz3.ab3@12390>    BSR.w writeword
0002A902 <AmiBlitz3.ab3@12391> RTS
0002A908 <AmiBlitz3.ab3@12394>   MOVE.w regnum,D2
0002A90C <AmiBlitz3.ab3@12395>   MOVE.w arrmul1(PC),D1
0002A90E <AmiBlitz3.ab3@12396>   OR.w D2,D1
0002A910 <AmiBlitz3.ab3@12397>   SUBQ.w #1,D1
0002A914 <AmiBlitz3.ab3@12398>    BSR.w writeword
0002A918 <AmiBlitz3.ab3@12399>   MOVE.w arrmul2(PC),D1
0002A91A <AmiBlitz3.ab3@12400>   OR.w D2,D1
0002A91C <AmiBlitz3.ab3@12401>   MOVE.w D2,D3
0002A91E <AmiBlitz3.ab3@12402>   SUBQ.w #1,D3
0002A920 <AmiBlitz3.ab3@12403>   LSL.w #8,D3
0002A922 <AmiBlitz3.ab3@12404>   LSL.w #1,D3
0002A924 <AmiBlitz3.ab3@12405>   OR.w D3,D1
0002A928 <AmiBlitz3.ab3@12406>    BSR.w writeword
0002A92C <AmiBlitz3.ab3@12407>   MOVE.w arrmul3(PC),D1
0002A92E <AmiBlitz3.ab3@12408>   MOVE.w D2,D3
0002A930 <AmiBlitz3.ab3@12409>   LSL.w #8,D3
0002A932 <AmiBlitz3.ab3@12410>   LSL.w #1,D3
0002A934 <AmiBlitz3.ab3@12411>   OR.w D3,D1
0002A938 <AmiBlitz3.ab3@12412>    BSR.w pokewda5s
0002A93C <AmiBlitz3.ab3@12413>   MOVE.w $4(A7),D1
0002A93E <AmiBlitz3.ab3@12414>   ADDQ.w #2,D1
0002A942 <AmiBlitz3.ab3@12415>    BSR.w writeword
0002A946 <AmiBlitz3.ab3@12416>   MOVE.w arrmul4(PC),D1
0002A948 <AmiBlitz3.ab3@12417>   MOVE.w D2,D3
0002A94A <AmiBlitz3.ab3@12418>   SUBQ.w #1,D3
0002A94C <AmiBlitz3.ab3@12419>   LSL.w #8,D3
0002A94E <AmiBlitz3.ab3@12420>   LSL.w #1,D3
0002A950 <AmiBlitz3.ab3@12421>   OR.w D3,D1
0002A954 <AmiBlitz3.ab3@12422>    BSR.w pokewda5s
0002A958 <AmiBlitz3.ab3@12423>   MOVE.w $4(A7),D1
0002A95C <AmiBlitz3.ab3@12424>    BSR.w writeword
0002A960 <AmiBlitz3.ab3@12425>   MOVE.w arrmul5(PC),D1
0002A962 <AmiBlitz3.ab3@12426>   OR.w D2,D1
0002A964 <AmiBlitz3.ab3@12427>   SUBQ.w #1,D1
0002A968 <AmiBlitz3.ab3@12428>    BSR.w writeword
0002A96C <AmiBlitz3.ab3@12429>   MOVE.w arrmul6(PC),D1
0002A96E <AmiBlitz3.ab3@12430>   OR.w D2,D1
0002A970 <AmiBlitz3.ab3@12431>   SUBQ.w #1,D1
0002A974 <AmiBlitz3.ab3@12432>    BSR.w writeword
0002A978 <AmiBlitz3.ab3@12433>   MOVE.w arrmul7(PC),D1
0002A97A <AmiBlitz3.ab3@12434>   OR.w D2,D1
0002A97C <AmiBlitz3.ab3@12435>   SUBQ.w #1,D1
0002A97E <AmiBlitz3.ab3@12436>   MOVE.w D2,D3
0002A980 <AmiBlitz3.ab3@12437>   LSL.w #8,D3
0002A982 <AmiBlitz3.ab3@12438>   LSL.w #1,D3
0002A984 <AmiBlitz3.ab3@12439>   OR.w D3,D1
0002A988 <AmiBlitz3.ab3@12440>    BSR.w writeword
0002A98C <AmiBlitz3.ab3@12441>   MOVE.w arrmul8(PC),D1
0002A98E <AmiBlitz3.ab3@12442>   MOVE.w D2,D3
0002A990 <AmiBlitz3.ab3@12443>   SUBQ.w #1,D3
0002A992 <AmiBlitz3.ab3@12444>   LSL.w #8,D3
0002A994 <AmiBlitz3.ab3@12445>   LSL.w #1,D3
0002A996 <AmiBlitz3.ab3@12446>   OR.w D3,D1
0002A99A <AmiBlitz3.ab3@12447>    BSR.w writeword
0002A9A0 <AmiBlitz3.ab3@12448>   MOVE.w regnum,D1
0002A9A2 <AmiBlitz3.ab3@12449>   SUBQ.w #1,D1
0002A9A4 <AmiBlitz3.ab3@12450>   LSL.w #8,D1
0002A9A6 <AmiBlitz3.ab3@12451>   LSL.w #1,D1
0002A9AA <AmiBlitz3.ab3@12452>   ORI.w #$D080,D1
0002A9B0 <AmiBlitz3.ab3@12453>   OR.w regnum,D1
0002A9B4 <AmiBlitz3.ab3@12454> BRA.w writeword
0002A9B6 <AmiBlitz3.ab3@12462> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002A9B8 <AmiBlitz3.ab3@12463> arrmul2:   MOVE  d0,d0
0002A9BC <AmiBlitz3.ab3@12464> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002A9C0 <AmiBlitz3.ab3@12465> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002A9C2 <AmiBlitz3.ab3@12467> arrmul5:   SWAP d0
0002A9C4 <AmiBlitz3.ab3@12468> arrmul6:   CLR d0
0002A9C6 <AmiBlitz3.ab3@12469> arrmul7:   ADD.l d0,d0
0002A9C8 <AmiBlitz3.ab3@12470> arrmul8:   MOVE.l (a7)+,d0
0002A9CC <AmiBlitz3.ab3@12475> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002A9D0 <AmiBlitz3.ab3@12476> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002A9D2 <AmiBlitz3.ab3@12477> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002A9D8 <AmiBlitz3.ab3@12495>   CLR.l lastoffset_org
0002A9DE <AmiBlitz3.ab3@12496>   BTST #$1,$7(A3)
0002A9E2 <AmiBlitz3.ab3@12497>    BEQ.w calcvar__notarr
0002A9E8 <AmiBlitz3.ab3@12498>   MOVE.w notshared,D1
0002A9EC <AmiBlitz3.ab3@12499>    BNE.w noarrerr
0002A9F0 <AmiBlitz3.ab3@12500>    BSR.w get1bytemain
0002A9F4 <AmiBlitz3.ab3@12501>   CMP.w #$29,D0
0002A9F8 <AmiBlitz3.ab3@12502>    BNE.w calcvar__notalist
0002A9FE <AmiBlitz3.ab3@12503>   BTST #$0,$6(A3)
0002AA02 <AmiBlitz3.ab3@12504>    BEQ.w nolisterr
0002AA0A <AmiBlitz3.ab3@12505>   MOVE.w $4(A3),listcode1+2
0002AA0E <AmiBlitz3.ab3@12506>   MOVE.l listcode1(PC),D1
0002AA12 <AmiBlitz3.ab3@12507>    BSR.w pokela5s
0002AA16 <AmiBlitz3.ab3@12508>   MOVE.l listcode2(PC),D1
0002AA1A <AmiBlitz3.ab3@12509>    BSR.w writelong
0002AA20 <AmiBlitz3.ab3@12510>   TST.b debugmode
0002AA24 <AmiBlitz3.ab3@12511>    BEQ.w calcvar__nolrerr
0002AA26 <AmiBlitz3.ab3@12515>   MOVE.l A2,-(A7)
0002AA2A <AmiBlitz3.ab3@12516>   MOVE.w #$C315,D1
0002AA2E <AmiBlitz3.ab3@12517>    BSR.w Atokejsr
0002AA30 <AmiBlitz3.ab3@12518>   MOVEA.l (A7)+,A2
0002AA34 <AmiBlitz3.ab3@12521>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002AA38 <AmiBlitz3.ab3@12523>    BSR.w writeword
0002AA3C <AmiBlitz3.ab3@12524> BRA.w calcvar__normalar
0002AA3E <AmiBlitz3.ab3@12527> calcvar__listoff:   Ds.w 1
0002AA44 <AmiBlitz3.ab3@12531>   CLR.w calcvar__listoff
0002AA4A <AmiBlitz3.ab3@12532>   BTST #$0,$6(A3)
0002AA4E <AmiBlitz3.ab3@12533>    BEQ.w calcvar__knop
0002AA56 <AmiBlitz3.ab3@12534>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002AA5A <AmiBlitz3.ab3@12537>   MOVEM.l A2-A3,-(A7)
0002AA60 <AmiBlitz3.ab3@12538>   MOVE.w varmode,-(A7)
0002AA64 <AmiBlitz3.ab3@12539>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002AA68 <AmiBlitz3.ab3@12540>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002AA6A <AmiBlitz3.ab3@12541>   MOVE.l A2,-(A7)
0002AA70 <AmiBlitz3.ab3@12542>   MOVE.w flagmask,-(A7)
0002AA7A <AmiBlitz3.ab3@12544>   MOVE.w oldqflag,instringon
0002AA80 <AmiBlitz3.ab3@12545>   MOVEA.l lastsourcepos,A5
0002AA84 <AmiBlitz3.ab3@12546>    BSR.w arreval
0002AA8A <AmiBlitz3.ab3@12547>   MOVE.w (A7)+,flagmask
0002AA92 <AmiBlitz3.ab3@12548>   MOVE.w $8(A7),varmode
0002AA98 <AmiBlitz3.ab3@12549>   TST.b debugmode
0002AA9C <AmiBlitz3.ab3@12550>    BEQ.w calcvar__noszchk
0002AA9E <AmiBlitz3.ab3@12554>   MOVEA.l (A7)+,A2
0002AAA0 <AmiBlitz3.ab3@12555>   MOVEQ.l #$04,D1
0002AAA8 <AmiBlitz3.ab3@12556>   BTST #$0,flagmask+1                                      ;pointer?
0002AAAC <AmiBlitz3.ab3@12557>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002AAB0 <AmiBlitz3.ab3@12558>   MOVE.w $8(A2),D1
0002AAB4 <AmiBlitz3.ab3@12561>   ADD.w calcvar__listoff(PC),D1
0002AAB8 <AmiBlitz3.ab3@12562>   BSR.w JL_0_B6DE
0002AABE <AmiBlitz3.ab3@12563>   ADDQ.w #1,regnum
0002AAC0 <AmiBlitz3.ab3@12566>   ADDQ.w #4,(A7)
0002AAC4 <AmiBlitz3.ab3@12567>   TST.w $4(A7)
0002AAC8 <AmiBlitz3.ab3@12568>    BEQ.w calcvar__isglob
0002AACA <AmiBlitz3.ab3@12569>   SUBQ.w #8,(A7)                                           ;range check local array
0002AAD0 <AmiBlitz3.ab3@12572>   TST.b debugmode
0002AAD4 <AmiBlitz3.ab3@12573>    BEQ.w calcvar__noer1
0002AADA <AmiBlitz3.ab3@12574>   MOVE.w regnum,D1
0002AADC <AmiBlitz3.ab3@12575>   SUBQ.w #1,D1
0002AADE <AmiBlitz3.ab3@12576>   LSL.w #8,D1
0002AAE0 <AmiBlitz3.ab3@12577>   LSL.w #1,D1
0002AAE4 <AmiBlitz3.ab3@12578>   OR.w zarrchk(PC),D1
0002AAE8 <AmiBlitz3.ab3@12579>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002AAEA <AmiBlitz3.ab3@12580>   MOVE.w (A7),D1
0002AAEE <AmiBlitz3.ab3@12581>    BSR.w writeword
0002AAF2 <AmiBlitz3.ab3@12582>   MOVE.l arrchk2(PC),D1
0002AAF6 <AmiBlitz3.ab3@12583>    BSR.w writelong
0002AAFA <AmiBlitz3.ab3@12584>   MOVE.w #$C309,D1
0002AAFE <AmiBlitz3.ab3@12585>    BSR.w Atokejsr
0002AB02 <AmiBlitz3.ab3@12588>   SUBQ.w #1,$2(A7)
0002AB06 <AmiBlitz3.ab3@12589>    BEQ.w calcvar__ardone
0002AB0A <AmiBlitz3.ab3@12590>   CMP.w #$2C,D0
0002AB0E <AmiBlitz3.ab3@12591>    BNE.w syntaxerr
0002AB14 <AmiBlitz3.ab3@12592>    TST.b fast
0002AB18 <AmiBlitz3.ab3@12593>    BNE 'l1
0002AB1C <AmiBlitz3.ab3@12594>    BSR.w arrevalchk
0002AB20 <AmiBlitz3.ab3@12595> BRA 'l2
0002AB24 <AmiBlitz3.ab3@12598>   BSR arreval
0002AB2C <AmiBlitz3.ab3@12601>   MOVE.w $4(A7),varmode
0002AB30 <AmiBlitz3.ab3@12602>   BSR.w JL_0_9052
0002AB34 <AmiBlitz3.ab3@12603> BRA.w calcvar__arloop
0002AB38 <AmiBlitz3.ab3@12607>   CMP.w #$29,D0
0002AB3C <AmiBlitz3.ab3@12608>    BNE.w syntaxerr
0002AB42 <AmiBlitz3.ab3@12609>   SUBQ.w #1,regnum
0002AB44 <AmiBlitz3.ab3@12610>   ADDQ.w #6,A7
0002AB48 <AmiBlitz3.ab3@12611>   MOVEM.l (A7)+,A2-A3
0002AB50 <AmiBlitz3.ab3@12612>   MOVE.w $4(A3),movea5a0+2
0002AB56 <AmiBlitz3.ab3@12613>   MOVE.l movea5a0,D1
0002AB5A <AmiBlitz3.ab3@12614>    BSR.w pokela5s
0002AB60 <AmiBlitz3.ab3@12615>   MOVE.w regnum,D1
0002AB64 <AmiBlitz3.ab3@12616>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002AB68 <AmiBlitz3.ab3@12617>    BSR.w writeword
0002AB6E <AmiBlitz3.ab3@12618>   BTST #$0,$6(A3)
0002AB72 <AmiBlitz3.ab3@12619>    BEQ.w calcvar__normalar
0002AB76 <AmiBlitz3.ab3@12623>   MOVE.w listarfix(PC),D1
0002AB7A <AmiBlitz3.ab3@12624>    BSR.w writeword
0002AB7E <AmiBlitz3.ab3@12627>   BSR.w get1bytemain
0002AB84 <AmiBlitz3.ab3@12631>   BTST #$0,$7(A3)
0002AB88 <AmiBlitz3.ab3@12632>    BEQ.w calcvar__noppnt
0002AB8C <AmiBlitz3.ab3@12633>   CMP.w #$5C,D0
0002AB90 <AmiBlitz3.ab3@12634>    BNE.w calcvar__pmskip
0002AB94 <AmiBlitz3.ab3@12635>   MOVE.w calcvar__pfix(PC),D1
0002AB98 <AmiBlitz3.ab3@12636>    BSR.w writeword
0002AB9C <AmiBlitz3.ab3@12639>   MOVE.w #$8000,D2
0002ABA0 <AmiBlitz3.ab3@12640> BRA.w calcvar__loopml
0002ABA4 <AmiBlitz3.ab3@12643>   MOVE.w #$C000,D2
0002ABA8 <AmiBlitz3.ab3@12644> BRA.w calcvar__loopml
0002ABAA <AmiBlitz3.ab3@12648> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002ABAE <AmiBlitz3.ab3@12653>   CMP.w #$28,D0
0002ABB2 <AmiBlitz3.ab3@12654>    BEQ.w noarrerr
0002ABBA <AmiBlitz3.ab3@12655>   CMPI.l #$100,$4(A2)
0002ABBE <AmiBlitz3.ab3@12656>    BCS.w calcvar__simpvar
0002ABC4 <AmiBlitz3.ab3@12657>   BTST #$0,$7(A3)
0002ABC8 <AmiBlitz3.ab3@12658>    BEQ.w calcvar__notap
0002ABCC <AmiBlitz3.ab3@12662>   CMP.w #$5C,D0
0002ABD0 <AmiBlitz3.ab3@12663>    BEQ.w calcvar__notap
0002ABD2 <AmiBlitz3.ab3@12664>   MOVEQ.l #$00,D2
0002ABD6 <AmiBlitz3.ab3@12665> BRA.w calcvar__simpvar2
0002ABDA <AmiBlitz3.ab3@12668>   MOVE.w #$8000,D2
0002ABE2 <AmiBlitz3.ab3@12669>   MOVE.w $4(A3),movea5a0+2
0002ABE8 <AmiBlitz3.ab3@12670>   MOVE.l movea5a0,D1
0002ABEC <AmiBlitz3.ab3@12671>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002ABF2 <AmiBlitz3.ab3@12673>    TST.b debugmode
0002ABF6 <AmiBlitz3.ab3@12674>    BEQ.w 'skip
0002ABFA <AmiBlitz3.ab3@12675>    MOVE.w #$c320,D1
0002AC00 <AmiBlitz3.ab3@12676>    JSR Atokejsr
0002AC02 <AmiBlitz3.ab3@12680>   MOVEQ.l #$00,D3
0002AC06 <AmiBlitz3.ab3@12683>   CMP.w #$5C,D0
0002AC0A <AmiBlitz3.ab3@12684>    BNE.w calcvar__done
0002AC12 <AmiBlitz3.ab3@12685>   CMPI.l #$100,$4(A2)
0002AC16 <AmiBlitz3.ab3@12686>    BCS.w rongtypeerr
0002AC18 <AmiBlitz3.ab3@12687>   MOVE.w D2,-(A7)
0002AC1C <AmiBlitz3.ab3@12688>    BSR.w getparameter2
0002AC20 <AmiBlitz3.ab3@12689>    BEQ.w syntaxerr
0002AC22 <AmiBlitz3.ab3@12690>   ADDQ.w #4,A2
0002AC26 <AmiBlitz3.ab3@12691>    BSR.w findvariable2
0002AC2A <AmiBlitz3.ab3@12692>    BNE.w noofferr
0002AC2C <AmiBlitz3.ab3@12693>   MOVE.w (A7)+,D2
0002AC2E <AmiBlitz3.ab3@12694>   MOVEA.l A2,A3                                             ;pointer to offset
0002AC32 <AmiBlitz3.ab3@12695>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002AC34 <AmiBlitz3.ab3@12696>   MOVEQ #0,d1
0002AC38 <AmiBlitz3.ab3@12697>   MOVE.w 4(a3),d1
0002AC3A <AmiBlitz3.ab3@12698>   ADD.l d1,d3
0002AC40 <AmiBlitz3.ab3@12700>   MOVE.l A3,lastoffset_org
0002AC44 <AmiBlitz3.ab3@12701>   CMP.w #$5B,D0
0002AC48 <AmiBlitz3.ab3@12702>    BNE.w calcvar__realdone
0002AC4E <AmiBlitz3.ab3@12703>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002AC52 <AmiBlitz3.ab3@12704>    BEQ.w rongtypeerr
0002AC56 <AmiBlitz3.ab3@12705>    BSR.w JL_0_9004
0002AC5A <AmiBlitz3.ab3@12706>   MOVEM.l A2-A3,-(A7)
0002AC60 <AmiBlitz3.ab3@12707>   MOVE.w varmode,-(A7)
0002AC66 <AmiBlitz3.ab3@12708>   MOVE.l lastoffset_org,-(A7)
0002AC6C <AmiBlitz3.ab3@12709>   MOVE.w pusha2,D1
0002AC70 <AmiBlitz3.ab3@12710>    BSR.w writeword
0002AC72 <AmiBlitz3.ab3@12711>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002AC7C <AmiBlitz3.ab3@12712>   MOVE.l destpointer,deststore
0002AC82 <AmiBlitz3.ab3@12713>    MOVE.l rightsidetype,-(a7)
0002AC88 <AmiBlitz3.ab3@12714>    MOVE.l leftsidetype,-(a7)
0002AC8E <AmiBlitz3.ab3@12715>    CLR.l rightsidetype
0002AC94 <AmiBlitz3.ab3@12716>    CLR.l leftsidetype
0002AC98 <AmiBlitz3.ab3@12717>    BSR.w eval
0002AC9E <AmiBlitz3.ab3@12718>    MOVE.l (a7)+,rightsidetype
0002ACA4 <AmiBlitz3.ab3@12719>    MOVE.l (a7)+,leftsidetype
0002ACA8 <AmiBlitz3.ab3@12720>   CMP.w #$5D,D0
0002ACAC <AmiBlitz3.ab3@12721>    BNE.w syntaxerr
0002ACB2 <AmiBlitz3.ab3@12722>   TST.b fast                                               ;a2,-(a7) array
0002ACB6 <AmiBlitz3.ab3@12723>   BEQ calcvar__loop0_l10
0002ACBC <AmiBlitz3.ab3@12727>   MOVE.l destpointer,d1
0002ACC2 <AmiBlitz3.ab3@12728>   SUB.l deststore,d1
0002ACC8 <AmiBlitz3.ab3@12729>   CMP.l #4,d1
0002ACCC <AmiBlitz3.ab3@12730>   BNE calcvar__loop0_l10
0002ACD2 <AmiBlitz3.ab3@12731>   MOVE.l destpointer,a4
0002ACD8 <AmiBlitz3.ab3@12732>   MOVE.l -4(a4),-6(a4)
0002ACDE <AmiBlitz3.ab3@12733>   SUBQ.l #2,destpointer
0002ACE4 <AmiBlitz3.ab3@12734>   CLR.l imm_addr
0002ACEA <AmiBlitz3.ab3@12735>   CLR.l load_var_addr
0002ACEE <AmiBlitz3.ab3@12736> BRA calcvar__loop0_l20
0002ACF4 <AmiBlitz3.ab3@12739>   MOVE.w pulla2,D1
0002ACF8 <AmiBlitz3.ab3@12740>    BSR.w writeword
0002ACFE <AmiBlitz3.ab3@12743>   MOVE.l (A7)+,lastoffset_org
0002AD04 <AmiBlitz3.ab3@12744>   MOVE.w (A7)+,varmode
0002AD08 <AmiBlitz3.ab3@12745>   MOVEM.l (A7)+,A2-A3
0002AD0E <AmiBlitz3.ab3@12751>   TST.w debugmode
0002AD12 <AmiBlitz3.ab3@12752>    BEQ.b calcvar__nobchk
0002AD16 <AmiBlitz3.ab3@12753>   MOVE.w $8(A3),D1
0002AD1A <AmiBlitz3.ab3@12754>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002AD20 <AmiBlitz3.ab3@12758>   MOVE.w D1,brchkcode+2
0002AD26 <AmiBlitz3.ab3@12759>   MOVE.w regnum,D1
0002AD28 <AmiBlitz3.ab3@12760>   LSL.w #8,D1
0002AD2A <AmiBlitz3.ab3@12761>   LSL.w #1,D1
0002AD2E <AmiBlitz3.ab3@12762>   OR.w brchkcode0(PC),D1
0002AD34 <AmiBlitz3.ab3@12763>   MOVE.w D1,brchkcode
0002AD38 <AmiBlitz3.ab3@12764>   MOVE.l brchkcode(PC),D1
0002AD3C <AmiBlitz3.ab3@12765>    BSR.w writelong
0002AD40 <AmiBlitz3.ab3@12766>   MOVE.l brchkcode+4(PC),D1
0002AD44 <AmiBlitz3.ab3@12767>    BSR.w writelong
0002AD48 <AmiBlitz3.ab3@12768>   MOVE.w brchkcode+8(PC),D1
0002AD4C <AmiBlitz3.ab3@12769>    BSR.w writeword
0002AD4E <AmiBlitz3.ab3@12772>   MOVEQ.l #$04,D1
0002AD54 <AmiBlitz3.ab3@12773>   BTST #$0,$7(A3)
0002AD58 <AmiBlitz3.ab3@12774>    BNE.w calcvar__dothemul
0002AD5C <AmiBlitz3.ab3@12775>   MOVE.w $8(A2),D1
0002AD60 <AmiBlitz3.ab3@12778>   BSR.w JL_0_B6DE
0002AD66 <AmiBlitz3.ab3@12779>   MOVE.w addrega2,D1
0002AD6C <AmiBlitz3.ab3@12780>   OR.w regnum,D1
0002AD70 <AmiBlitz3.ab3@12781>    OR.w #$100,d1                                           ;>32kb types
0002AD74 <AmiBlitz3.ab3@12782>    BSR.w writeword
0002AD78 <AmiBlitz3.ab3@12783>    BSR.w get1bytemain
0002AD7A <AmiBlitz3.ab3@12784>   MOVEQ.l #$00,D3
0002AD7E <AmiBlitz3.ab3@12785>   MOVE.w #$8000,D2
0002AD84 <AmiBlitz3.ab3@12788>   BTST #$0,$7(A3)
0002AD88 <AmiBlitz3.ab3@12789>    BNE.w calcvar__pointer
0002AD8C <AmiBlitz3.ab3@12790> BRA.w calcvar__loop0
0002AD90 <AmiBlitz3.ab3@12794>  CMP.w #$5C,D0
0002AD94 <AmiBlitz3.ab3@12795>    BNE.w calcvar__done3
0002AD96 <AmiBlitz3.ab3@12796>   TST.w D3
0002AD9A <AmiBlitz3.ab3@12797>    BNE.w calcvar__pskip
0002ADA0 <AmiBlitz3.ab3@12798>   MOVE.w movea0,D1
0002ADA4 <AmiBlitz3.ab3@12799>    BSR.w writeword
0002ADA8 <AmiBlitz3.ab3@12800> BRA.w calcvar__pmore
0002ADAE <AmiBlitz3.ab3@12803>   MOVE.w D3,movea0a0+2
0002ADB4 <AmiBlitz3.ab3@12804>   MOVE.l movea0a0,D1
0002ADB8 <AmiBlitz3.ab3@12805>    BSR.w writelong
0002ADBE <AmiBlitz3.ab3@12808>   BTST #$2,$7(A3)
0002ADC2 <AmiBlitz3.ab3@12809>    BEQ.w calcvar__loopml
0002ADC8 <AmiBlitz3.ab3@12810>   MOVE.l adda0a0,D1
0002ADCC <AmiBlitz3.ab3@12811>    BSR.w writelong
0002ADD0 <AmiBlitz3.ab3@12812> BRA.w calcvar__loopml
0002ADD4 <AmiBlitz3.ab3@12815>   BSET #$E,D2
0002ADDA <AmiBlitz3.ab3@12816>   BTST #$2,$7(A3)
0002ADDE <AmiBlitz3.ab3@12817>    BNE.w calcvar__done
0002ADE2 <AmiBlitz3.ab3@12818>   BSET #$D,D2
0002ADEA <AmiBlitz3.ab3@12821>   CMPI.l #$100,$4(A2)
0002ADEE <AmiBlitz3.ab3@12822>    BCC.w calcvar__done2
0002ADF2 <AmiBlitz3.ab3@12823>   MOVE.b $7(A2),D2
0002ADF6 <AmiBlitz3.ab3@12826> BRA.w JL_0_9004
0002ADFA <AmiBlitz3.ab3@12829>   MOVE.w $6(A2),D2
0002ADFE <AmiBlitz3.ab3@12832>   MOVE.w $4(A3),D3
0002AE04 <AmiBlitz3.ab3@12833>   BTST #$0,$7(A3)
0002AE08 <AmiBlitz3.ab3@12834>    BEQ.w calcvar__nopoint
0002AE0C <AmiBlitz3.ab3@12835>   BSET #$E,D2
0002AE0E <AmiBlitz3.ab3@12838> RTS
0002AE12 <AmiBlitz3.ab3@12842> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002AE16 <AmiBlitz3.ab3@12843> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002AE18 <AmiBlitz3.ab3@12844>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002AE1A <AmiBlitz3.ab3@12845>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002AE1C <AmiBlitz3.ab3@12846>              Dc.b $4E,$40                                  ;TRAP    #00
0002AE22 <AmiBlitz3.ab3@12854>   TST.w varmode
0002AE26 <AmiBlitz3.ab3@12855>    BEQ.w writeword
0002AE2A <AmiBlitz3.ab3@12856>   BCLR #$0,D1
0002AE2E <AmiBlitz3.ab3@12857> BRA.w writeword
0002AE34 <AmiBlitz3.ab3@12860>   TST.w varmode
0002AE38 <AmiBlitz3.ab3@12861>    BEQ.w writeword
0002AE3C <AmiBlitz3.ab3@12862>   BCLR #$9,D1
0002AE40 <AmiBlitz3.ab3@12863> BRA.w writeword
0002AE46 <AmiBlitz3.ab3@12866>   TST.w proceduremode
0002AE4A <AmiBlitz3.ab3@12867>    BEQ.w writelong
0002AE4E <AmiBlitz3.ab3@12868>   BCLR #$19,D1
0002AE52 <AmiBlitz3.ab3@12869> BRA.w writelong
0002AE58 <AmiBlitz3.ab3@12872>   TST.w varmode
0002AE5C <AmiBlitz3.ab3@12873>   BEQ.w writelong
0002AE60 <AmiBlitz3.ab3@12874>   BCLR #$10,D1
0002AE66 <AmiBlitz3.ab3@12877>   ADDQ.l #1,destpointer
0002AE6E <AmiBlitz3.ab3@12878>   BCLR #$0,destpointer+3
0002AE74 <AmiBlitz3.ab3@12879>   MOVEA.l destpointer,A4
0002AE7A <AmiBlitz3.ab3@12880>   CMPA.l destbufferend,A4
0002AE7E <AmiBlitz3.ab3@12881>    BCC.w writeword__overa
0002AE80 <AmiBlitz3.ab3@12882>   MOVE.l D1,(A4)+
0002AE86 <AmiBlitz3.ab3@12885>   MOVE.l A4,destpointer
0002AE8A <AmiBlitz3.ab3@12886>   CMPA.l bigpc(PC),A4
0002AE8E <AmiBlitz3.ab3@12887>    BHI.w writeword__nbp
0002AE90 <AmiBlitz3.ab3@12888> RTS
0002AE98 <AmiBlitz3.ab3@12891>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002AE9E <AmiBlitz3.ab3@12892>   CLR.b fast
0002AEA4 <AmiBlitz3.ab3@12893>   CLR.b fpu
0002AEAA <AmiBlitz3.ab3@12894>   CLR.b iee
0002AEAC <AmiBlitz3.ab3@12895>   ADDQ.w #4,A4
0002AEB0 <AmiBlitz3.ab3@12896> BRA.w writeword__msa
0002AEB6 <AmiBlitz3.ab3@12902>   ADDQ.l #1,destpointer
0002AEBE <AmiBlitz3.ab3@12903>   BCLR #$0,destpointer+3
0002AEC4 <AmiBlitz3.ab3@12904>   MOVEA.l destpointer,A4
0002AECA <AmiBlitz3.ab3@12905>   CMPA.l destbufferend,A4
0002AECE <AmiBlitz3.ab3@12906>    BCC.w writeword__over
0002AED0 <AmiBlitz3.ab3@12907>   MOVE.w D1,(A4)+
0002AED6 <AmiBlitz3.ab3@12910>   MOVE.l A4,destpointer
0002AEDA <AmiBlitz3.ab3@12911>   CMPA.l bigpc(PC),A4
0002AEDE <AmiBlitz3.ab3@12912>    BHI.w writeword__nbp
0002AEE0 <AmiBlitz3.ab3@12913> RTS
0002AEE6 <AmiBlitz3.ab3@12916>   ADDQ.l #1,destpointer
0002AEEE <AmiBlitz3.ab3@12917>   BCLR #$0,destpointer+3
0002AEF4 <AmiBlitz3.ab3@12918>   MOVEA.l destpointer,A4
0002AEFA <AmiBlitz3.ab3@12919>   CMPA.l destbufferend,A4
0002AEFE <AmiBlitz3.ab3@12920>    BCC.w writeword__over
0002AF00 <AmiBlitz3.ab3@12921>   MOVE.w D1,(A4)+
0002AF06 <AmiBlitz3.ab3@12922>   MOVE.l A4,destpointer
0002AF0A <AmiBlitz3.ab3@12923>   CMPA.l bigpc(PC),A4
0002AF0E <AmiBlitz3.ab3@12924>    BHI.w writeword__nbp
0002AF10 <AmiBlitz3.ab3@12925> RTS
0002AF16 <AmiBlitz3.ab3@12928>   TST.w cfetchmode
0002AF1A <AmiBlitz3.ab3@12929>   BNE.w writeword__nbp2
0002AF20 <AmiBlitz3.ab3@12930>   MOVE.l A4,bigpc
0002AF22 <AmiBlitz3.ab3@12933> RTS
0002AF2A <AmiBlitz3.ab3@12936>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002AF2C <AmiBlitz3.ab3@12937>   ADDQ.w #2,A4
0002AF32 <AmiBlitz3.ab3@12938>   CLR.b fast
0002AF38 <AmiBlitz3.ab3@12939>   CLR.b fpu
0002AF3E <AmiBlitz3.ab3@12940>   CLR.b iee
0002AF42 <AmiBlitz3.ab3@12941> BRA.w writeword__ms
0002AF48 <AmiBlitz3.ab3@12945>   MOVEA.l destpointer,A4
0002AF4E <AmiBlitz3.ab3@12946>   CMPA.l destbufferend,A4
0002AF52 <AmiBlitz3.ab3@12947>    BCC.w writebyte__over
0002AF54 <AmiBlitz3.ab3@12948>   MOVE.b D1,(A4)+
0002AF5A <AmiBlitz3.ab3@12951>   MOVE.l A4,destpointer
0002AF5E <AmiBlitz3.ab3@12952>   CMPA.l bigpc(PC),A4
0002AF62 <AmiBlitz3.ab3@12953>    BHI.w writebyte__nbp
0002AF64 <AmiBlitz3.ab3@12954> RTS
0002AF6A <AmiBlitz3.ab3@12957>   TST.w cfetchmode
0002AF6E <AmiBlitz3.ab3@12958>    BNE.w writebyte__nbp2
0002AF74 <AmiBlitz3.ab3@12959>   MOVE.l A4,bigpc
0002AF76 <AmiBlitz3.ab3@12962> RTS
0002AF7E <AmiBlitz3.ab3@12965>   MOVE.w #-1,dontwrite
0002AF80 <AmiBlitz3.ab3@12966>   ADDQ.w #1,A4
0002AF86 <AmiBlitz3.ab3@12967>   CLR.b fast
0002AF8C <AmiBlitz3.ab3@12968>   CLR.b fpu
0002AF92 <AmiBlitz3.ab3@12969>   CLR.b iee
0002AF96 <AmiBlitz3.ab3@12970> BRA.w writebyte__ms
0002AF9A <AmiBlitz3.ab3@12973> bigpc:   Ds.l 1
0002AF9C <AmiBlitz3.ab3@12977>   MOVE.w (A0)+,D1
0002AFA0 <AmiBlitz3.ab3@12978>   BSR.w writeword
0002AFA2 <AmiBlitz3.ab3@12981>     CMPA.l A1,A0
0002AFA6 <AmiBlitz3.ab3@12982>     BCC.w pokecode__done
0002AFA8 <AmiBlitz3.ab3@12983>       MOVE.w (A0)+,D1
0002AFAC <AmiBlitz3.ab3@12984>       BSR.w writeword
0002AFB0 <AmiBlitz3.ab3@12985> BRA.w pokecode__loop
0002AFB2 <AmiBlitz3.ab3@12988> RTS
0002AFB4 <AmiBlitz3.ab3@12991>   MOVE.w (A0)+,D1
0002AFB8 <AmiBlitz3.ab3@12992>   BSR.w writeword
0002AFBA <AmiBlitz3.ab3@12993>   CMPA.l A1,A0
0002AFBE <AmiBlitz3.ab3@12994>   BCS.w pokecode2
0002AFC0 <AmiBlitz3.ab3@12995> RTS
0002AFC6 <AmiBlitz3.ab3@13001>   TST.b iniffcommand
0002AFCA <AmiBlitz3.ab3@13002>   BEQ 'l1
0002AFCE <AmiBlitz3.ab3@13003>     MOVE.w #$4880,D1
0002AFD4 <AmiBlitz3.ab3@13004>     OR.w regnum,D1
0002AFD8 <AmiBlitz3.ab3@13005>     BSR writeword
0002AFDA <AmiBlitz3.ab3@13008> RTS
0002AFDE <AmiBlitz3.ab3@13011>   BSR.w convert_byte_to_word
0002AFE4 <AmiBlitz3.ab3@13014>   TST.b iee
0002AFE8 <AmiBlitz3.ab3@13015>   BEQ 'old
0002AFEC <AmiBlitz3.ab3@13016>   CMP.b #5,d2
0002AFF0 <AmiBlitz3.ab3@13017>   BEQ wtof
0002AFF4 <AmiBlitz3.ab3@13020>   MOVE.w #$48C0,D1
0002AFFA <AmiBlitz3.ab3@13021>   OR.w regnum,D1
0002AFFE <AmiBlitz3.ab3@13022> BRA.w writeword
0002B000 <AmiBlitz3.ab3@13025>   MOVEQ #0,d0
0002B006 <AmiBlitz3.ab3@13026>   MOVE.w regnum,d0
0002B008 <AmiBlitz3.ab3@13027>   ASL.l #7,d0
0002B00E <AmiBlitz3.ab3@13028>   MOVE.l #$f2005000,d1
0002B010 <AmiBlitz3.ab3@13029>   OR.l d0,d1
0002B012 <AmiBlitz3.ab3@13030>   ASL.l #1,d0
0002B014 <AmiBlitz3.ab3@13031>   ASL.l #8,d0
0002B016 <AmiBlitz3.ab3@13032>   OR.l d0,d1
0002B01A <AmiBlitz3.ab3@13033> BRA writelong
0002B01E <AmiBlitz3.ab3@13037>   BSR.w convert_byte_to_word
0002B022 <AmiBlitz3.ab3@13040>   MOVE.w #$4840,D1
0002B028 <AmiBlitz3.ab3@13041>   OR.w regnum,D1
0002B02C <AmiBlitz3.ab3@13042>    BSR.w writeword
0002B030 <AmiBlitz3.ab3@13043>   MOVE.w #$4240,D1
0002B036 <AmiBlitz3.ab3@13044>   OR.w regnum,D1
0002B03A <AmiBlitz3.ab3@13045> BRA.w writeword
0002B03E <AmiBlitz3.ab3@13049>   CMP.w #$ffdc,d1
0002B042 <AmiBlitz3.ab3@13050>   BNE 'negfpu
0002B044 <AmiBlitz3.ab3@13051>   MOVEQ #0,d0
0002B04A <AmiBlitz3.ab3@13052>   MOVE.w regnum,d0
0002B04C <AmiBlitz3.ab3@13053>   ASL.l #7,d0
0002B052 <AmiBlitz3.ab3@13054>   MOVE.l #$f2004000,d1
0002B054 <AmiBlitz3.ab3@13055>   OR.l d0,d1
0002B056 <AmiBlitz3.ab3@13056>   ASL.l #1,d0
0002B058 <AmiBlitz3.ab3@13057>   ASL.l #8,d0
0002B05A <AmiBlitz3.ab3@13058>   OR.l d0,d1
0002B05E <AmiBlitz3.ab3@13059> BRA writelong
0002B060 <AmiBlitz3.ab3@13063>   MOVEQ #0,d1
0002B066 <AmiBlitz3.ab3@13064>   MOVE.w regnum,d1                                         ;fpu neg
0002B068 <AmiBlitz3.ab3@13065>   ASL.l #7,d1
0002B06E <AmiBlitz3.ab3@13066>   OR.l #$f200001a,d1
0002B070 <AmiBlitz3.ab3@13067>   MOVE.l d0,-(a7)
0002B072 <AmiBlitz3.ab3@13068>   MOVEQ #0,d0
0002B078 <AmiBlitz3.ab3@13069>   MOVE.w regnum,d0
0002B07A <AmiBlitz3.ab3@13070>   ASL.l #8,d0
0002B07C <AmiBlitz3.ab3@13071>   ASL.l #2,d0
0002B07E <AmiBlitz3.ab3@13072>   OR.l d0,d1
0002B080 <AmiBlitz3.ab3@13073>   MOVE.l (a7)+,d0
0002B084 <AmiBlitz3.ab3@13074> BRA writelong
0002B08A <AmiBlitz3.ab3@13077>    TST.b iee
0002B08E <AmiBlitz3.ab3@13078>    BNE wtof
0002B092 <AmiBlitz3.ab3@13079>    BSR.w convert_byte_to_long
0002B096 <AmiBlitz3.ab3@13082>    MOVE.w #$FFDC,D1
0002B09C <AmiBlitz3.ab3@13085>    TST.b iee
0002B0A0 <AmiBlitz3.ab3@13086>    BNE ltof
0002B0A6 <AmiBlitz3.ab3@13087>    MOVE.w D1,libjsr+2
0002B0AA <AmiBlitz3.ab3@13088>    BSR.w JL_0_AD40
0002B0AC <AmiBlitz3.ab3@13089>   MOVE.l D4,D1
0002B0B0 <AmiBlitz3.ab3@13090>    BSR.w JL_0_AD38
0002B0B4 <AmiBlitz3.ab3@13091>   MOVE.w #$C900,D1
0002B0B8 <AmiBlitz3.ab3@13092>    BSR.w Atokejsr
0002B0BC <AmiBlitz3.ab3@13093>    BSR.w JL_0_A352
0002B0C2 <AmiBlitz3.ab3@13094>   MOVE.l libjsr,D1
0002B0C6 <AmiBlitz3.ab3@13095>    BSR.w writelong
0002B0CA <AmiBlitz3.ab3@13096>    BSR.w JL_0_A36E
0002B0CC <AmiBlitz3.ab3@13097>   MOVE.l D5,D1
0002B0D0 <AmiBlitz3.ab3@13098> BRA.w JL_0_AD38
0002B0D2 <AmiBlitz3.ab3@13101> RTS
0002B0D6 <AmiBlitz3.ab3@13104>   MOVE.w #$C317,D1
0002B0DC <AmiBlitz3.ab3@13105>   TST.b typecheck
0002B0E0 <AmiBlitz3.ab3@13106>   BEQ 'l1
0002B0E6 <AmiBlitz3.ab3@13107>    TST.b notypecheck
0002B0EA <AmiBlitz3.ab3@13108>    BNE 'l1
0002B0F0 <AmiBlitz3.ab3@13109>    TST.l lasttoken
0002B0F6 <AmiBlitz3.ab3@13116>   TST.b debugmode
0002B0FA <AmiBlitz3.ab3@13117>    BEQ.w JL_0_9696
0002B102 <AmiBlitz3.ab3@13118>   BTST #$7,overflowcheck
0002B106 <AmiBlitz3.ab3@13119>    BEQ.w JL_0_9696
0002B10C <AmiBlitz3.ab3@13120>   TST.w cfetchmode
0002B110 <AmiBlitz3.ab3@13121>    BNE.w JL_0_9696
0002B116 <AmiBlitz3.ab3@13122>   TST.w regnum
0002B11A <AmiBlitz3.ab3@13123>    BEQ.w JL_0_968A
0002B11C <AmiBlitz3.ab3@13124>   MOVE.w D1,-(A7)
0002B120 <AmiBlitz3.ab3@13125>   MOVE.w JL_0_9698(PC),D1
0002B124 <AmiBlitz3.ab3@13126>    BSR.w writeword
0002B12A <AmiBlitz3.ab3@13127>   MOVE.w regnum,D1
0002B12E <AmiBlitz3.ab3@13128>   OR.w L_0_969C(PC),D1
0002B132 <AmiBlitz3.ab3@13129>    BSR.w writeword
0002B134 <AmiBlitz3.ab3@13130>   MOVE.w (A7)+,D1
0002B138 <AmiBlitz3.ab3@13131>    BSR.w JL_0_968A
0002B13C <AmiBlitz3.ab3@13132>   MOVE.w L_0_969A(PC),D1
0002B140 <AmiBlitz3.ab3@13133> BRA.w writeword
0002B144 <AmiBlitz3.ab3@13137>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B148 <AmiBlitz3.ab3@13138>    BSR.w Atokejsr
0002B14C <AmiBlitz3.ab3@13139>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B14E <AmiBlitz3.ab3@13142> RTS
0002B150 <AmiBlitz3.ab3@13145>   MOVE.l D0,-(A7)
0002B152 <AmiBlitz3.ab3@13148>   MOVE.l (A7)+,D0
0002B154 <AmiBlitz3.ab3@13151>   MOVE.l D0,D0
0002B158 <AmiBlitz3.ab3@13154>   BSR.w convert_word_to_long
0002B15E <AmiBlitz3.ab3@13155>   TST.b iee
0002B162 <AmiBlitz3.ab3@13156>   BEQ 'old
0002B166 <AmiBlitz3.ab3@13157>   CMP.b #5,d2
0002B16A <AmiBlitz3.ab3@13158>   BNE 'old
0002B16C <AmiBlitz3.ab3@13159> RTS
0002B170 <AmiBlitz3.ab3@13162> BRA.w JL_0_9600
0002B174 <AmiBlitz3.ab3@13166>   MOVE.w #$C316,D1
0002B17A <AmiBlitz3.ab3@13167>   TST.b typecheck
0002B17E <AmiBlitz3.ab3@13168>   BEQ 'l1
0002B184 <AmiBlitz3.ab3@13169>   TST.b peekaddrsize
0002B188 <AmiBlitz3.ab3@13170>   BNE 'l1
0002B18E <AmiBlitz3.ab3@13171>   TST.b notypecheck
0002B192 <AmiBlitz3.ab3@13172>   BNE 'l1
0002B198 <AmiBlitz3.ab3@13173>   TST.l lasttoken
0002B19C <AmiBlitz3.ab3@13179> BRA.w JL_0_963A
0002B1A0 <AmiBlitz3.ab3@13183>   MOVE.w #$C318,D1
0002B1A6 <AmiBlitz3.ab3@13184>   TST.b typecheck
0002B1AA <AmiBlitz3.ab3@13185>   BEQ 'l1
0002B1B0 <AmiBlitz3.ab3@13186>   TST.b peekaddrsize
0002B1B4 <AmiBlitz3.ab3@13187>   BNE 'l1
0002B1BA <AmiBlitz3.ab3@13188>   TST.b notypecheck
0002B1BE <AmiBlitz3.ab3@13189>   BNE 'l1
0002B1C4 <AmiBlitz3.ab3@13190>   TST.l lasttoken
0002B1C8 <AmiBlitz3.ab3@13196> BRA.w JL_0_963A
0002B1CC <AmiBlitz3.ab3@13200>   MOVE.w #$C318,D1
0002B1D2 <AmiBlitz3.ab3@13201>   TST.b typecheck
0002B1D6 <AmiBlitz3.ab3@13202>   BEQ 'l1
0002B1DC <AmiBlitz3.ab3@13203>   TST.b notypecheck
0002B1E0 <AmiBlitz3.ab3@13204>   BNE 'l1
0002B1E6 <AmiBlitz3.ab3@13205>   TST.l lasttoken
0002B1EA <AmiBlitz3.ab3@13211>   BSR.w JL_0_963A
0002B1EE <AmiBlitz3.ab3@13212> BRA.w convert_word_to_quick
0002B1F2 <AmiBlitz3.ab3@13216> BRA.w JL_0_9600
0002B1F4 <AmiBlitz3.ab3@13220> RTS
0002B1F8 <AmiBlitz3.ab3@13224>   MOVE.w #$C319,D1
0002B1FE <AmiBlitz3.ab3@13225>   TST.b typecheck
0002B202 <AmiBlitz3.ab3@13226>   BEQ 'l1
0002B208 <AmiBlitz3.ab3@13227>   TST.b notypecheck
0002B20C <AmiBlitz3.ab3@13228>   BNE 'l1
0002B212 <AmiBlitz3.ab3@13229>   TST.l lasttoken
0002B216 <AmiBlitz3.ab3@13236>   BSR.w JL_0_963A
0002B21A <AmiBlitz3.ab3@13239>   MOVE.w #$4240,D1
0002B220 <AmiBlitz3.ab3@13240>   OR.w regnum,D1
0002B224 <AmiBlitz3.ab3@13241>   BSR.w writeword
0002B228 <AmiBlitz3.ab3@13242>   MOVE.w #$4840,D1
0002B22E <AmiBlitz3.ab3@13243>   OR.w regnum,D1
0002B232 <AmiBlitz3.ab3@13244> BRA.w writeword
0002B236 <AmiBlitz3.ab3@13248> BRA.w JL_0_96D0
0002B23A <AmiBlitz3.ab3@13252>   BSR.w JL_0_96D0
0002B23E <AmiBlitz3.ab3@13253> BRA.w convert_word_to_long
0002B240 <AmiBlitz3.ab3@13258>   MOVEQ #0,d0
0002B246 <AmiBlitz3.ab3@13259>   MOVE.w regnum,d0
0002B248 <AmiBlitz3.ab3@13260>   ASL.l #7,d0
0002B24E <AmiBlitz3.ab3@13261>   MOVE.l #$f2004000,d1
0002B250 <AmiBlitz3.ab3@13262>   OR.l d0,d1
0002B252 <AmiBlitz3.ab3@13263>   ASL.l #1,d0
0002B254 <AmiBlitz3.ab3@13264>   ASL.l #8,d0
0002B256 <AmiBlitz3.ab3@13265>   OR.l d0,d1
0002B25A <AmiBlitz3.ab3@13266>   BSR writelong
0002B260 <AmiBlitz3.ab3@13267>   MOVE.w regnum,d0
0002B262 <AmiBlitz3.ab3@13268>   ASL.l #7,d0
0002B268 <AmiBlitz3.ab3@13269>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B26A <AmiBlitz3.ab3@13270>   OR.w d0,d1
0002B26E <AmiBlitz3.ab3@13271>   BSR writelong
0002B274 <AmiBlitz3.ab3@13272>   MOVE.l #$37800000,d1
0002B278 <AmiBlitz3.ab3@13273>   BSR writelong
0002B27A <AmiBlitz3.ab3@13274> RTS
0002B280 <AmiBlitz3.ab3@13278>   TST.b iee
0002B284 <AmiBlitz3.ab3@13279>   BNE qtof
0002B288 <AmiBlitz3.ab3@13280>   MOVE.w #$D300,D1
0002B28A <AmiBlitz3.ab3@13283>   MOVE.w D1,-(A7)
0002B28E <AmiBlitz3.ab3@13284>    BSR.w JL_0_AD40
0002B290 <AmiBlitz3.ab3@13285>   MOVE.l D4,D1
0002B294 <AmiBlitz3.ab3@13286>    BSR.w JL_0_AD38
0002B298 <AmiBlitz3.ab3@13287>    BSR.w JL_0_A352
0002B29A <AmiBlitz3.ab3@13288>   MOVE.w (A7)+,D1
0002B29E <AmiBlitz3.ab3@13289>    BSR.w Atokejsr
0002B2A2 <AmiBlitz3.ab3@13290>    BSR.w JL_0_A36E
0002B2A4 <AmiBlitz3.ab3@13291>   MOVE.l D5,D1
0002B2A8 <AmiBlitz3.ab3@13292> BRA.w JL_0_AD38
0002B2AA <AmiBlitz3.ab3@13296> RTS
0002B2B0 <AmiBlitz3.ab3@13299>   TST.b typecheck
0002B2B4 <AmiBlitz3.ab3@13300>   BEQ 'l1
0002B2BA <AmiBlitz3.ab3@13301>   TST.b notypecheck
0002B2BE <AmiBlitz3.ab3@13302>   BNE 'l1
0002B2C4 <AmiBlitz3.ab3@13303>   TST.l lasttoken
0002B2CA <AmiBlitz3.ab3@13308>   TST.b iee
0002B2CE <AmiBlitz3.ab3@13309>   BNE ftol
0002B2D2 <AmiBlitz3.ab3@13310>   MOVE.w #$C31A,D1
0002B2D6 <AmiBlitz3.ab3@13311>   BSR.w JL_0_963A
0002B2DA <AmiBlitz3.ab3@13312>   BSR.w JL_0_974A
0002B2DE <AmiBlitz3.ab3@13313> BRA.w convert_long_to_byte
0002B2E0 <AmiBlitz3.ab3@13317> RTS
0002B2E6 <AmiBlitz3.ab3@13320>   TST.b typecheck
0002B2EA <AmiBlitz3.ab3@13321>   BEQ 'l1
0002B2F0 <AmiBlitz3.ab3@13322>   TST.b notypecheck
0002B2F4 <AmiBlitz3.ab3@13323>   BNE 'l1
0002B2FA <AmiBlitz3.ab3@13324>   TST.l lasttoken
0002B300 <AmiBlitz3.ab3@13329>   TST.b iee
0002B304 <AmiBlitz3.ab3@13330>   BNE ftol
0002B308 <AmiBlitz3.ab3@13331>   MOVE.w #$C31B,D1
0002B30C <AmiBlitz3.ab3@13332>   BSR.w JL_0_963A
0002B310 <AmiBlitz3.ab3@13333>   BSR.w JL_0_974A
0002B314 <AmiBlitz3.ab3@13334> BRA.w convert_long_to_word
0002B316 <AmiBlitz3.ab3@13338> RTS
0002B31C <AmiBlitz3.ab3@13341>   TST.b iee
0002B320 <AmiBlitz3.ab3@13342>   BNE ftol
0002B324 <AmiBlitz3.ab3@13343>   MOVE.w #$C31C,D1
0002B328 <AmiBlitz3.ab3@13344>   BSR.w JL_0_963A
0002B32C <AmiBlitz3.ab3@13347>   MOVE.w #$FFE2,D1
0002B330 <AmiBlitz3.ab3@13348> BRA.w JL_0_9604
0002B332 <AmiBlitz3.ab3@13351>   MOVE.l d0,-(a7)
0002B334 <AmiBlitz3.ab3@13352>   MOVEQ #0,d0
0002B33A <AmiBlitz3.ab3@13353>   MOVE.w regnum,d0
0002B33C <AmiBlitz3.ab3@13354>   ASL.l #7,d0
0002B342 <AmiBlitz3.ab3@13355>   MOVE.l #$f2006000,d1
0002B344 <AmiBlitz3.ab3@13356>   OR.l d0,d1
0002B346 <AmiBlitz3.ab3@13357>   ASL.l #1,d0
0002B348 <AmiBlitz3.ab3@13358>   ASL.l #8,d0
0002B34A <AmiBlitz3.ab3@13359>   OR.l d0,d1
0002B34C <AmiBlitz3.ab3@13360>   MOVE.l (a7)+,d0
0002B350 <AmiBlitz3.ab3@13361> BRA writelong
0002B352 <AmiBlitz3.ab3@13365>   MOVE.l d0,-(a7)
0002B354 <AmiBlitz3.ab3@13366>   MOVEQ #0,d0
0002B35A <AmiBlitz3.ab3@13367>   MOVE.l #$f23c4023,d1
0002B360 <AmiBlitz3.ab3@13368>   MOVE.w regnum,d0
0002B362 <AmiBlitz3.ab3@13369>   ASL.l #7,d0
0002B364 <AmiBlitz3.ab3@13370>   OR.l d0,d1
0002B368 <AmiBlitz3.ab3@13371>   BSR writelong
0002B36E <AmiBlitz3.ab3@13372>   MOVE.l #$00010000,d1
0002B372 <AmiBlitz3.ab3@13373>   BSR writelong
0002B378 <AmiBlitz3.ab3@13374>   MOVE.w regnum,d0
0002B37A <AmiBlitz3.ab3@13375>   ASL.l #7,d0
0002B380 <AmiBlitz3.ab3@13376>   MOVE.l #$f2006000,d1
0002B382 <AmiBlitz3.ab3@13377>   OR.l d0,d1
0002B384 <AmiBlitz3.ab3@13378>   ASL.l #1,d0
0002B386 <AmiBlitz3.ab3@13379>   ASL.l #8,d0
0002B388 <AmiBlitz3.ab3@13380>   OR.l d0,d1
0002B38C <AmiBlitz3.ab3@13381>   BSR writelong
0002B38E <AmiBlitz3.ab3@13382>   MOVE.l (a7)+,d0
0002B390 <AmiBlitz3.ab3@13383> RTS
0002B392 <AmiBlitz3.ab3@13387> RTS
0002B398 <AmiBlitz3.ab3@13391>   TST.b iee
0002B39C <AmiBlitz3.ab3@13392>   BNE ftoq
0002B3A0 <AmiBlitz3.ab3@13393>   MOVE.w #$C31B,D1
0002B3A4 <AmiBlitz3.ab3@13394>   BSR.w JL_0_963A
0002B3A8 <AmiBlitz3.ab3@13395>   MOVE.w #$D301,D1
0002B3AC <AmiBlitz3.ab3@13396> BRA.w JL_0_96FC
0002B3B2 <AmiBlitz3.ab3@13402>    TST.b blitzparloop
0002B3B6 <AmiBlitz3.ab3@13403>    BNE 'l1
0002B3BC <AmiBlitz3.ab3@13404>    TST.b funcparloop
0002B3C0 <AmiBlitz3.ab3@13405>    BNE 'l1
0002B3C4 <AmiBlitz3.ab3@13406>    BRA error_convert_types
0002B3CC <AmiBlitz3.ab3@13409>   CMP.b #2,optistring
0002B3D0 <AmiBlitz3.ab3@13410>   BEQ JLrts
0002B3D6 <AmiBlitz3.ab3@13411>   MOVE.w stol,D1
0002B3DA <AmiBlitz3.ab3@13412>   BSR.w writeword
0002B3E2 <AmiBlitz3.ab3@13413>   CMPI.w #$2,sbgot
0002B3E6 <AmiBlitz3.ab3@13414>   BCS.w sbtolong
0002B3EA <AmiBlitz3.ab3@13415>   MOVE.w ceos(PC),D1
0002B3EE <AmiBlitz3.ab3@13416>   BSR.w writeword
0002B3F4 <AmiBlitz3.ab3@13419>   MOVE.w regnum,D1
0002B3F6 <AmiBlitz3.ab3@13420>   LSL.w #8,D1
0002B3F8 <AmiBlitz3.ab3@13421>   LSL.w #1,D1
0002B400 <AmiBlitz3.ab3@13422>   CMPI.w #$2,sbgot
0002B404 <AmiBlitz3.ab3@13423>   BCS.w JL_0_98E8
0002B40A <AmiBlitz3.ab3@13424>   MOVE.w a2offset,D3
0002B410 <AmiBlitz3.ab3@13425>   SUB.w thisstuse,D3
0002B414 <AmiBlitz3.ab3@13426>   CMP.w #$6,D3
0002B418 <AmiBlitz3.ab3@13427>   BNE.w JL_0_98D4b
0002B41E <AmiBlitz3.ab3@13428>   OR.w movestst2,D1
0002B422 <AmiBlitz3.ab3@13429>   BSR.w writeword
0002B428 <AmiBlitz3.ab3@13430>   LEA movestst2+2,A0
0002B42E <AmiBlitz3.ab3@13431>   LEA movestst2f,A1
0002B432 <AmiBlitz3.ab3@13432> BRA.w pokecode2
0002B438 <AmiBlitz3.ab3@13436>   OR.w movea7dn,D1
0002B43C <AmiBlitz3.ab3@13437>   BSR.w writeword
0002B442 <AmiBlitz3.ab3@13438>   MOVE.l #0,D1
0002B446 <AmiBlitz3.ab3@13439> BRA.w writeword
0002B44C <AmiBlitz3.ab3@13443>   ADDQ.w #1,fuckpos
0002B450 <AmiBlitz3.ab3@13444>   BSR.w writeconvertcode
0002B456 <AmiBlitz3.ab3@13445>   SUBQ.w #1,fuckpos
0002B458 <AmiBlitz3.ab3@13447> RTS
0002B45A <AmiBlitz3.ab3@13451>   MOVE.w D3,D1
0002B45E <AmiBlitz3.ab3@13452>   CMP.w #7,d1
0002B462 <AmiBlitz3.ab3@13453>   BLE 'ok
0002B468 <AmiBlitz3.ab3@13454>   JMP errorinternalconvert
0002B46A <AmiBlitz3.ab3@13455> 'ok  SUBQ.w #1,D1
0002B46E <AmiBlitz3.ab3@13456>   MULU #$7,D1
0002B470 <AmiBlitz3.ab3@13457>   ADD.w D2,D1
0002B472 <AmiBlitz3.ab3@13458>   SUBQ.w #1,D1
0002B474 <AmiBlitz3.ab3@13459>   LSL.w #2,D1
0002B47A <AmiBlitz3.ab3@13460>   LEA convtable,A0
0002B47E <AmiBlitz3.ab3@13461>   MOVE.l $0(A0,D1.W),D1
0002B482 <AmiBlitz3.ab3@13462>   BEQ.w JL_0_97A2
0002B484 <AmiBlitz3.ab3@13463>     MOVEA.l D1,A0
0002B488 <AmiBlitz3.ab3@13464>     CMP.b #$ff,d3
0002B48C <AmiBlitz3.ab3@13465>     BEQ JL_0_97A2
0002B48E <AmiBlitz3.ab3@13466> JMP (A0)
0002B490 <AmiBlitz3.ab3@13469> RTS
0002B494 <AmiBlitz3.ab3@13472> usedfrom:  Ds.l 1
0002B498 <AmiBlitz3.ab3@13479>   CMP.w #"\",D0
0002B49C <AmiBlitz3.ab3@13480>   BNE.w JL_0_97C2
0002B4A0 <AmiBlitz3.ab3@13481>     CMP.b #"\",(a5)
0002B4A4 <AmiBlitz3.ab3@13482>     BNE 'first
0002B4AA <AmiBlitz3.ab3@13483>       MOVE.l A5,usedfrom
0002B4B0 <AmiBlitz3.ab3@13484>       LEA path2,A5
0002B4B4 <AmiBlitz3.ab3@13485> BRA 'g1
0002B4B6 <AmiBlitz3.ab3@13488>     SUBQ.w #1,A5
0002B4BC <AmiBlitz3.ab3@13489>   MOVE.l A5,usedfrom
0002B4C2 <AmiBlitz3.ab3@13490>   LEA usedpath,A5                                          ;read path
0002B4C6 <AmiBlitz3.ab3@13493>   BSR.w get1bytemain
0002B4CC <AmiBlitz3.ab3@13496>   CLR.w flagmask
0002B4D0 <AmiBlitz3.ab3@13497>   CMP.w #$2A,D0
0002B4D4 <AmiBlitz3.ab3@13498>    BNE.w JL_0_983A
0002B4DC <AmiBlitz3.ab3@13499>   MOVE.w #$0001,flagmask
0002B4E0 <AmiBlitz3.ab3@13501>    BSR.w getparameter2
0002B4E4 <AmiBlitz3.ab3@13504>    BEQ.w syntaxerr
0002B4E8 <AmiBlitz3.ab3@13505>   CMP.w #$28,D0
0002B4EC <AmiBlitz3.ab3@13506>    BEQ.w JL_0_9830
0002B4F0 <AmiBlitz3.ab3@13507>   CMP.w #$2E,D0
0002B4F4 <AmiBlitz3.ab3@13508>    BEQ.w JL_0_980C
0002B4F8 <AmiBlitz3.ab3@13509>   CMP.w #$24,D0
0002B4FC <AmiBlitz3.ab3@13510>    BNE.w JL_0_9838
0002B504 <AmiBlitz3.ab3@13511>   ORI.w #$8,flagmask
0002B508 <AmiBlitz3.ab3@13512>    BSR.w storeloc
0002B50C <AmiBlitz3.ab3@13513>    BSR.w get1bytemain
0002B510 <AmiBlitz3.ab3@13514> BRA.w JL_0_9822
0002B514 <AmiBlitz3.ab3@13518>   BSR.w storeloc
0002B516 <AmiBlitz3.ab3@13519>   MOVE.w D2,-(A7)
0002B51C <AmiBlitz3.ab3@13520>   LEA namebuff2,A1
0002B520 <AmiBlitz3.ab3@13521>    BSR.w makename3
0002B524 <AmiBlitz3.ab3@13522>    BEQ.w syntaxerr
0002B526 <AmiBlitz3.ab3@13523>   MOVE.w (A7)+,D2
0002B528 <AmiBlitz3.ab3@13526>    MOVE.w D0,D1
0002B52C <AmiBlitz3.ab3@13527>    BSR.w resloc
0002B530 <AmiBlitz3.ab3@13528>    CMP.w #$28,D1
0002B534 <AmiBlitz3.ab3@13529>    BNE.w JL_0_9838
0002B53C <AmiBlitz3.ab3@13532>   ORI.w #$2,flagmask
0002B53E <AmiBlitz3.ab3@13535> RTS
0002B542 <AmiBlitz3.ab3@13539>   CMP.w #$40,D0
0002B546 <AmiBlitz3.ab3@13540>    BNE.w JL_0_984E
0002B54E <AmiBlitz3.ab3@13541>   MOVE.w #$0005,flagmask
0002B552 <AmiBlitz3.ab3@13542> BRA.w JL_0_97D8
0002B556 <AmiBlitz3.ab3@13546>   BSR.w makename2
0002B55A <AmiBlitz3.ab3@13547> BRA.w JL_0_97DC
0002B55E <AmiBlitz3.ab3@13551>   MOVE.w #$FED3,D1
0002B562 <AmiBlitz3.ab3@13552>    BSR.w uselib
0002B568 <AmiBlitz3.ab3@13553>   LEA pusha3,A0
0002B56E <AmiBlitz3.ab3@13554>   LEA pusha3f,A1
0002B572 <AmiBlitz3.ab3@13555> BRA.w pokecode
0002B576 <AmiBlitz3.ab3@13559>   MOVE.w #$FED3,D1
0002B57A <AmiBlitz3.ab3@13560>    BSR.w uselib
0002B580 <AmiBlitz3.ab3@13561>   LEA pulla3,A0
0002B586 <AmiBlitz3.ab3@13562>   LEA pulla3f,A1
0002B58A <AmiBlitz3.ab3@13563> BRA.w pokecode
0002B58C <AmiBlitz3.ab3@13567> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002B594 <AmiBlitz3.ab3@13572>     CMP.b #2,optistring
0002B598 <AmiBlitz3.ab3@13573>    BEQ 'l10
0002B59C <AmiBlitz3.ab3@13574>    MOVE.w ceos(PC),D1
0002B5A0 <AmiBlitz3.ab3@13575>    BSR.w writeword                                         ;clr.b (a3)
0002B5A6 <AmiBlitz3.ab3@13578>   MOVE.w regnum,D1
0002B5A8 <AmiBlitz3.ab3@13579>   LSL.w #8,D1
0002B5AA <AmiBlitz3.ab3@13580>   LSL.w #1,D1
0002B5B2 <AmiBlitz3.ab3@13581>   CMPI.w #$2,sbgot
0002B5B6 <AmiBlitz3.ab3@13582>    BCS.w JL_0_98E8
0002B5BC <AmiBlitz3.ab3@13583>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002B5C2 <AmiBlitz3.ab3@13584>   SUB.w thisstuse,D3
0002B5C6 <AmiBlitz3.ab3@13585>   CMP.w #$6,D3
0002B5CA <AmiBlitz3.ab3@13586>    BNE.w JL_0_98D4
0002B5D0 <AmiBlitz3.ab3@13587>   OR.w movestst2,D1
0002B5D4 <AmiBlitz3.ab3@13588>    BSR.w writeword
0002B5DA <AmiBlitz3.ab3@13589>   LEA movestst2+2,A0
0002B5E0 <AmiBlitz3.ab3@13590>   LEA movestst2f,A1
0002B5E4 <AmiBlitz3.ab3@13591> BRA.w pokecode2
0002B5EA <AmiBlitz3.ab3@13595>    OR.w movea7dn,D1
0002B5EE <AmiBlitz3.ab3@13596>    BSR.w writeword
0002B5F4 <AmiBlitz3.ab3@13597>   MOVE.l movea7dn+2,D1
0002B5F8 <AmiBlitz3.ab3@13609>   BSR writelong
0002B600 <AmiBlitz3.ab3@13612>    CMP.w #6,regnum
0002B604 <AmiBlitz3.ab3@13613>    BEQ 'l1
0002B60A <AmiBlitz3.ab3@13614>    TST.w stackpar
0002B60E <AmiBlitz3.ab3@13615>    BNE 'l1
0002B614 <AmiBlitz3.ab3@13616>    TST.b funcparloop
0002B618 <AmiBlitz3.ab3@13617>    BEQ 'l1
0002B61E <AmiBlitz3.ab3@13618>    MOVE.l #$48780000,d1
0002B622 <AmiBlitz3.ab3@13619>    BSR writelong
0002B624 <AmiBlitz3.ab3@13623> RTS
0002B626 <AmiBlitz3.ab3@13628>      MOVE.l d1,-(a7)
0002B62E <AmiBlitz3.ab3@13629>      CMP.w #6,regnum
0002B632 <AmiBlitz3.ab3@13630>      BEQ 'l1
0002B638 <AmiBlitz3.ab3@13631>      TST.w stackpar
0002B63C <AmiBlitz3.ab3@13632>      BNE 'l1
0002B642 <AmiBlitz3.ab3@13633>      TST.b funcparloop
0002B646 <AmiBlitz3.ab3@13634>      BEQ 'l1
0002B64C <AmiBlitz3.ab3@13635>      MOVE.l #$48780000,d1
0002B650 <AmiBlitz3.ab3@13636>      BSR writelong
0002B652 <AmiBlitz3.ab3@13639>      MOVE.l (a7)+,d1
0002B658 <AmiBlitz3.ab3@13641>    OR.w movestdn,D1
0002B65C <AmiBlitz3.ab3@13642>    BSR.w writeword
0002B660 <AmiBlitz3.ab3@13643>   MOVE.w #$FED3,D1
0002B664 <AmiBlitz3.ab3@13644>    BSR.w uselib
0002B668 <AmiBlitz3.ab3@13645>   MOVE.w $A(A1),D1
0002B66C <AmiBlitz3.ab3@13646> BRA.w writeword
0002B66E <AmiBlitz3.ab3@13649> unknown:    Ds.w 1
0002B674 <AmiBlitz3.ab3@13652> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002B678 <AmiBlitz3.ab3@13653> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002B67E <AmiBlitz3.ab3@13654>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002B684 <AmiBlitz3.ab3@13660>   TST.b debugmode
0002B688 <AmiBlitz3.ab3@13661>   BEQ.w sharreval
0002B68C <AmiBlitz3.ab3@13662>  BSR.w arreval
0002B690 <AmiBlitz3.ab3@13665>   MOVE.w somecode(PC),D1
0002B696 <AmiBlitz3.ab3@13666>   OR.w regnum,D1
0002B69A <AmiBlitz3.ab3@13667>    BSR.w writeword
0002B69C <AmiBlitz3.ab3@13668>   MOVEQ.l #$01,D1
0002B69E <AmiBlitz3.ab3@13669>   SWAP D1
0002B6A2 <AmiBlitz3.ab3@13670>    BSR.w writelong
0002B6A6 <AmiBlitz3.ab3@13671>   MOVE.l somecode2(PC),D1
0002B6AA <AmiBlitz3.ab3@13672>    BSR.w writelong
0002B6AE <AmiBlitz3.ab3@13673>   MOVE.w #$C309,D1
0002B6B2 <AmiBlitz3.ab3@13674> BRA.w Atokejsr
0002B6B4 <AmiBlitz3.ab3@13678>   MOVEQ.l #$02,D2
0002B6B6 <AmiBlitz3.ab3@13679>   MOVEQ.l #$00,D1
0002B6B8 <AmiBlitz3.ab3@13680>   MOVEQ.l #$00,D3
0002B6BC <AmiBlitz3.ab3@13681> BRA.w maineval2
0002B6BE <AmiBlitz3.ab3@13685>   MOVEQ.l #$03,D2
0002B6C0 <AmiBlitz3.ab3@13686>   MOVEQ.l #$00,D1
0002B6C2 <AmiBlitz3.ab3@13687>   MOVEQ.l #$00,D3
0002B6C8 <AmiBlitz3.ab3@13688>   MOVE.b notypecheck,-(a7)
0002B6D0 <AmiBlitz3.ab3@13689>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002B6D6 <AmiBlitz3.ab3@13690>   JSR maineval2
0002B6DC <AmiBlitz3.ab3@13691>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002B6DE <AmiBlitz3.ab3@13692>   RTS
0002B6E8 <AmiBlitz3.ab3@13696>   MOVE.w oldqflag,instringon
0002B6EE <AmiBlitz3.ab3@13697>   MOVEA.l lastsourcepos,A5
0002B6F0 <AmiBlitz3.ab3@13698>   MOVEQ.l #-$01,D1
0002B6F2 <AmiBlitz3.ab3@13699>   MOVEQ.l #-$01,D3
0002B6F6 <AmiBlitz3.ab3@13700> BRA.w peval
0002B700 <AmiBlitz3.ab3@13705>   MOVE.w oldqflag,instringon
0002B706 <AmiBlitz3.ab3@13706>   MOVEA.l lastsourcepos,A5
0002B708 <AmiBlitz3.ab3@13709>   MOVEQ.l #-$01,D1
0002B70A <AmiBlitz3.ab3@13710>   MOVEQ.l #$00,D3
0002B710 <AmiBlitz3.ab3@13711>   MOVE.l leftsidetype,-(a7)
0002B716 <AmiBlitz3.ab3@13712>   MOVE.l rightsidetype,-(a7)
0002B71C <AmiBlitz3.ab3@13713>   CLR.l leftsidetype
0002B722 <AmiBlitz3.ab3@13714>   CLR.l rightsidetype
0002B728 <AmiBlitz3.ab3@13715>   JSR maineval
0002B72E <AmiBlitz3.ab3@13716>   MOVE.l (a7)+,rightsidetype
0002B734 <AmiBlitz3.ab3@13717>   MOVE.l (a7)+,leftsidetype
0002B736 <AmiBlitz3.ab3@13718>   RTS
0002B740 <AmiBlitz3.ab3@13722>   MOVE.w oldqflag,instringon
0002B746 <AmiBlitz3.ab3@13723>   MOVEA.l lastsourcepos,A5
0002B748 <AmiBlitz3.ab3@13724>   MOVEQ.l #$00,D1
0002B74A <AmiBlitz3.ab3@13725>   MOVEQ.l #-$01,D3
0002B74E <AmiBlitz3.ab3@13726> BRA.w maineval
0002B750 <AmiBlitz3.ab3@13730>   MOVEQ.l #$01,D1
0002B752 <AmiBlitz3.ab3@13731>   MOVEQ.l #-$01,D3
0002B756 <AmiBlitz3.ab3@13732> BRA.w maineval
0002B760 <AmiBlitz3.ab3@13737>   MOVE.w oldqflag,instringon
0002B766 <AmiBlitz3.ab3@13738>   MOVEA.l lastsourcepos,A5
0002B768 <AmiBlitz3.ab3@13741>   MOVEQ.l #$00,D1                                        ;no push
0002B76A <AmiBlitz3.ab3@13742>   MOVEQ.l #$00,D3
0002B772 <AmiBlitz3.ab3@13763>    CMPI.w #$6,regnum
0002B776 <AmiBlitz3.ab3@13764>    BCS.w maineval2
0002B778 <AmiBlitz3.ab3@13765>    MOVEQ #0,d1
0002B77E <AmiBlitz3.ab3@13766>    MOVE.l destpointer,a4
0002B784 <AmiBlitz3.ab3@13768>    CMPA.l destbufferend,A4
0002B788 <AmiBlitz3.ab3@13769>    BCC.w maineval__l2
0002B78E <AmiBlitz3.ab3@13771>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002B792 <AmiBlitz3.ab3@13773>    BNE maineval__l2
0002B796 <AmiBlitz3.ab3@13777> BRA maineval__l1
0002B798 <AmiBlitz3.ab3@13780>   MOVEQ.l #-$01,D1
0002B7A0 <AmiBlitz3.ab3@13783>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002B7A6 <AmiBlitz3.ab3@13786>   MOVE.w thisstuse,-(A7)
0002B7B0 <AmiBlitz3.ab3@13787>   MOVE.w a2offset,thisstuse
0002B7B6 <AmiBlitz3.ab3@13788>   MOVE.w stackpar,-(A7)
0002B7BC <AmiBlitz3.ab3@13789>   MOVE.w D1,stackpar
0002B7C2 <AmiBlitz3.ab3@13790>   MOVE.w sbgot,-(A7)
0002B7C8 <AmiBlitz3.ab3@13791>   CLR.w sbgot
0002B7CC <AmiBlitz3.ab3@13792>   MOVE.w unknown(PC),-(A7)
0002B7D2 <AmiBlitz3.ab3@13793>   MOVE.w D3,unknown
0002B7D4 <AmiBlitz3.ab3@13794>   MOVE.w D2,-(a7)
0002B7DA <AmiBlitz3.ab3@13795>   MOVE.w d2,mode
0002B7DE <AmiBlitz3.ab3@13796>    BSR.w eval3
0002B7E0 <AmiBlitz3.ab3@13797>   MOVE.w (a7)+,d3
0002B7E4 <AmiBlitz3.ab3@13798>    BEQ.w maineval__noconv
0002B7E8 <AmiBlitz3.ab3@13799>   MOVE.w unknown(PC),D1
0002B7EC <AmiBlitz3.ab3@13800>    BNE.w maineval__noconv
0002B7EE <AmiBlitz3.ab3@13801>   EXG.l D2,D3
0002B7F0 <AmiBlitz3.ab3@13802>    MOVE.l a2,-(a7)
0002B7F6 <AmiBlitz3.ab3@13803>    TST.b curtemplabel
0002B7FA <AmiBlitz3.ab3@13804>    BEQ maineval2__l10
0002B800 <AmiBlitz3.ab3@13805>    MOVE.l asmbuff,a2
0002B806 <AmiBlitz3.ab3@13806>    CMP.w #$c,$8(a2)
0002B80A <AmiBlitz3.ab3@13807>    BEQ maineval2__l20
0002B810 <AmiBlitz3.ab3@13808>    CMP.w #$d,$8(a2)
0002B814 <AmiBlitz3.ab3@13809>    BEQ maineval2__l20
0002B816 <AmiBlitz3.ab3@13812>   CMP.w d2,d3
0002B81A <AmiBlitz3.ab3@13813>   BEQ maineval2__l20
0002B81E <AmiBlitz3.ab3@13814>   BSR.w writeconvertcode
0002B824 <AmiBlitz3.ab3@13815>   CLR.b doimmediate
0002B826 <AmiBlitz3.ab3@13818>   MOVE.l (a7)+,a2
0002B82C <AmiBlitz3.ab3@13821>   MOVE.w (A7)+,unknown
0002B832 <AmiBlitz3.ab3@13822>   MOVE.w stackpar,D1
0002B836 <AmiBlitz3.ab3@13823>    BEQ.w maineval__skipme
0002B83A <AmiBlitz3.ab3@13824>    BMI.w maineval__skipme
0002B840 <AmiBlitz3.ab3@13828>   MOVE.w regnum,D1
0002B842 <AmiBlitz3.ab3@13829>   LSL.w #8,D1
0002B844 <AmiBlitz3.ab3@13830>   LSL.w #1,D1
0002B848 <AmiBlitz3.ab3@13831>   CMP.w #$7,D2
0002B84C <AmiBlitz3.ab3@13832>    BNE.w maineval__hi1
0002B854 <AmiBlitz3.ab3@13833>    CMP.b #2,optistring
0002B858 <AmiBlitz3.ab3@13834>    BEQ maineval__hi1a
0002B85A <AmiBlitz3.ab3@13835>   MOVE.w D1,-(A7)
0002B860 <AmiBlitz3.ab3@13836>   OR.w getstlen,D1
0002B864 <AmiBlitz3.ab3@13837>    BSR.w writeword
0002B866 <AmiBlitz3.ab3@13838>   MOVE.w (A7)+,D1
0002B86C <AmiBlitz3.ab3@13841>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002B870 <AmiBlitz3.ab3@13845>   MOVE.w #$3f3c,d1
0002B874 <AmiBlitz3.ab3@13846>    BSR.w writeword
0002B876 <AmiBlitz3.ab3@13850>   MOVE.w d2,d1
0002B87C <AmiBlitz3.ab3@13851>   MOVE.w d1,libmode
0002B880 <AmiBlitz3.ab3@13852>    BSR.w writeword
0002B884 <AmiBlitz3.ab3@13853>   CMP.w #$7,D2
0002B888 <AmiBlitz3.ab3@13854>    BNE.w maineval__skipme
0002B88E <AmiBlitz3.ab3@13855>   MOVE.w putstlen,D1
0002B894 <AmiBlitz3.ab3@13856>   OR.w regnum,D1
0002B898 <AmiBlitz3.ab3@13857>    BSR.w writeword
0002B89C <AmiBlitz3.ab3@13860>    CMP.w #$7,D2
0002B8A0 <AmiBlitz3.ab3@13861>    BNE.w maineval__notst
0002B8A8 <AmiBlitz3.ab3@13872>    CMP.b #2,optistring
0002B8AC <AmiBlitz3.ab3@13873>    BEQ maineval__skipme_l10
0002B8B2 <AmiBlitz3.ab3@13874>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002B8B6 <AmiBlitz3.ab3@13875>    BSR.w sbtolong
0002B8BA <AmiBlitz3.ab3@13876> BRA.w maineval__notst2
0002B8C2 <AmiBlitz3.ab3@13880>     CMP.w #6,regnum
0002B8C6 <AmiBlitz3.ab3@13881>     BEQ maineval__skipme_l10_l1
0002B8CC <AmiBlitz3.ab3@13882>     TST.b funcparloop
0002B8D0 <AmiBlitz3.ab3@13883>     BEQ maineval__skipme_l10_l1
0002B8D6 <AmiBlitz3.ab3@13884>     MOVE.l #$48780000,d1
0002B8DA <AmiBlitz3.ab3@13885>     BSR writelong
0002B8DE <AmiBlitz3.ab3@13888> BRA.w maineval__notst2
0002B8E4 <AmiBlitz3.ab3@13891>   ADDQ.w #2,a2offset
0002B8E8 <AmiBlitz3.ab3@13892> BRA maineval__skipme
0002B8F0 <AmiBlitz3.ab3@13895>   CMPI.w #$2,sbgot
0002B8F4 <AmiBlitz3.ab3@13896>    BCS.w maineval__notst2                                         ;correct stack
0002B8F8 <AmiBlitz3.ab3@13897>   MOVE.w ststfix(PC),D1
0002B8FC <AmiBlitz3.ab3@13898>    BSR.w writeword
0002B902 <AmiBlitz3.ab3@13901>   MOVE.w (A7)+,sbgot
0002B908 <AmiBlitz3.ab3@13902>   MOVE.w stackpar,D1
0002B90C <AmiBlitz3.ab3@13903>    BPL.w maineval__skip
0002B910 <AmiBlitz3.ab3@13904>    CMP.b #7,d2
0002B914 <AmiBlitz3.ab3@13905>    BEQ maineval__notst2_l1
0002B91A <AmiBlitz3.ab3@13906>   TST.b funcparloop
0002B91E <AmiBlitz3.ab3@13907>   BEQ maineval__notst2_l1
0002B922 <AmiBlitz3.ab3@13908>   CMP.b #5,d2
0002B926 <AmiBlitz3.ab3@13909>   BNE maineval__notst2_skip
0002B92C <AmiBlitz3.ab3@13910>   TST.b fpu
0002B930 <AmiBlitz3.ab3@13911>   BEQ maineval__notst2_skip
0002B936 <AmiBlitz3.ab3@13912>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002B93C <AmiBlitz3.ab3@13913>   JSR writelong
0002B940 <AmiBlitz3.ab3@13916>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002B946 <AmiBlitz3.ab3@13917>   ADD.w parnum,d1
0002B94C <AmiBlitz3.ab3@13918>   JSR Atokejsr
0002B952 <AmiBlitz3.ab3@13919>    TST.w dontwrite
0002B956 <AmiBlitz3.ab3@13920>    BNE maineval__notst2_l1
0002B95C <AmiBlitz3.ab3@13921>    MOVE.l data1start,d1
0002B962 <AmiBlitz3.ab3@13922>    MOVE.l destpointer,a4
0002B966 <AmiBlitz3.ab3@13923>    ADD.l d1,-4(a4)
0002B96C <AmiBlitz3.ab3@13924>    MOVE.l destpointer,d1
0002B96E <AmiBlitz3.ab3@13925>    SUBQ.l #4,d1
0002B974 <AmiBlitz3.ab3@13926>    SUB.l destbufferstart,d1
0002B976 <AmiBlitz3.ab3@13927>    MOVE.l d2,-(a7)
0002B978 <AmiBlitz3.ab3@13928>    MOVE.l d1,d2
0002B97E <AmiBlitz3.ab3@13929>    JSR addhunkoffset
0002B980 <AmiBlitz3.ab3@13930>    MOVE.l (a7)+,d2
0002B984 <AmiBlitz3.ab3@13931> BRA maineval__skip
0002B98A <AmiBlitz3.ab3@13934>   ADDQ.w #2,a2offset
0002B990 <AmiBlitz3.ab3@13935>   MOVE.w pushd0wd,D1
0002B994 <AmiBlitz3.ab3@13936>   CMP.w #$3,D2                                             ;write parameter to stack
0002B998 <AmiBlitz3.ab3@13937>    BCS.w maineval__ok
0002B99E <AmiBlitz3.ab3@13938>   ADDQ.w #2,a2offset
0002B9A4 <AmiBlitz3.ab3@13939>   TST.b fpu
0002B9A8 <AmiBlitz3.ab3@13940>   BEQ maineval__notst2_nofpu
0002B9AC <AmiBlitz3.ab3@13941>   CMP.w #5,d2
0002B9B0 <AmiBlitz3.ab3@13942>   BNE maineval__notst2_nofpu
0002B9B2 <AmiBlitz3.ab3@13943>   MOVEQ #0,d1
0002B9B8 <AmiBlitz3.ab3@13944>   MOVE.w regnum,d1
0002B9BA <AmiBlitz3.ab3@13945>   ASL.l #7,d1
0002B9C0 <AmiBlitz3.ab3@13946>   OR.l #$f2276400,d1
0002B9C4 <AmiBlitz3.ab3@13947>   BSR writelong
0002B9C8 <AmiBlitz3.ab3@13948> BRA maineval__skip
0002B9CE <AmiBlitz3.ab3@13951>   MOVE.w pushd0l,D1
0002B9D4 <AmiBlitz3.ab3@13954>    OR.w regnum,D1
0002B9D8 <AmiBlitz3.ab3@13955>    BSR.w writeword                                         ;nat
0002B9DE <AmiBlitz3.ab3@13958>   MOVE.w (A7)+,stackpar
0002B9E4 <AmiBlitz3.ab3@13959>   MOVE.w (A7)+,thisstuse
0002B9E6 <AmiBlitz3.ab3@13960> RTS
0002B9E8 <AmiBlitz3.ab3@13963> thisstuse: Ds.w 1
0002B9EA <AmiBlitz3.ab3@13966> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002B9EC <AmiBlitz3.ab3@13967> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002B9F0 <AmiBlitz3.ab3@13972>   BSR.w eval4
0002B9FA <AmiBlitz3.ab3@13973>   SUBI.l #$12,forthsp
0002B9FC <AmiBlitz3.ab3@13974> RTS
0002B9FE <AmiBlitz3.ab3@13978>   MOVEQ.l #$01,D1
0002BA02 <AmiBlitz3.ab3@13980>       MOVEA.l precsp(PC),A1
0002BA04 <AmiBlitz3.ab3@13981>       MOVE.l A0,(A1)+
0002BA06 <AmiBlitz3.ab3@13982>       MOVE.w D1,(A1)+
0002BA0C <AmiBlitz3.ab3@13983>       MOVE.l A1,precsp
0002BA10 <AmiBlitz3.ab3@13984>    BSR.w calcloop
0002BA12 <AmiBlitz3.ab3@13985>   TST.w D1
0002BA16 <AmiBlitz3.ab3@13986>    BNE.w syntaxerr
0002BA1C <AmiBlitz3.ab3@13987>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002BA1E <AmiBlitz3.ab3@13988> RTS
0002BA22 <AmiBlitz3.ab3@13993>   BSR.w JL_0_9C24
0002BA26 <AmiBlitz3.ab3@13996>   MOVEA.l precsp(PC),A1
0002BA28 <AmiBlitz3.ab3@13997>   CMP.w -(A1),D1
0002BA2C <AmiBlitz3.ab3@13998>    BHI.w JL_0_9B0A
0002BA2E <AmiBlitz3.ab3@13999> RTS
0002BA32 <AmiBlitz3.ab3@14004>   MOVEA.l precsp(PC),A1
0002BA34 <AmiBlitz3.ab3@14005>   MOVE.l A0,(A1)+
0002BA36 <AmiBlitz3.ab3@14006>   MOVE.w D1,(A1)+
0002BA3C <AmiBlitz3.ab3@14007>   MOVE.l A1,precsp
0002BA3E <AmiBlitz3.ab3@14008>   MOVE.w D2,-(A7)
0002BA44 <AmiBlitz3.ab3@14009>   ADDQ.w #1,regnum
0002BA48 <AmiBlitz3.ab3@14010>    BSR.w calcloop               ;constant optimizer
0002BA4E <AmiBlitz3.ab3@14011>   SUBQ.w #1,regnum
0002BA50 <AmiBlitz3.ab3@14012>   MOVE.w (A7)+,D3
0002BA54 <AmiBlitz3.ab3@14013>   MOVEM.l D1/A0,-(A7)
0002BA58 <AmiBlitz3.ab3@14014>    BEQ.w JL_0_9B2E
0002BA5C <AmiBlitz3.ab3@14015>    BSR.w JL_0_9770
0002BA60 <AmiBlitz3.ab3@14018>   BSR.w popprec
0002BA64 <AmiBlitz3.ab3@14019>   BSR.w writecode
0002BA68 <AmiBlitz3.ab3@14020>   MOVEA.l forthsp(PC),A0
0002BA6C <AmiBlitz3.ab3@14021>   MOVE.w -$2(A0),D1
0002BA70 <AmiBlitz3.ab3@14022>   OR.w -$14(A0),D1
0002BA74 <AmiBlitz3.ab3@14023>   MOVE.w D1,-$14(A0)
0002BA78 <AmiBlitz3.ab3@14024>    BNE.w JL_0_9C0E
0002BA7E <AmiBlitz3.ab3@14025>   MOVE.w dontwrite,D1
0002BA82 <AmiBlitz3.ab3@14026>    BNE.w JL_0_9C0E
0002BA86 <AmiBlitz3.ab3@14027>    MOVEA.l -$24(A0),A0
0002BBC2 <AmiBlitz3.ab3@14029>  !newcalc
0002BBC6 <AmiBlitz3.ab3@14030>    BEQ 'l10
0002BBCA <AmiBlitz3.ab3@14031>    MOVEA.l forthsp(PC),A0
0002BBD2 <AmiBlitz3.ab3@14032>    MOVE.w -$18(A0),lasta6
0002BBDA <AmiBlitz3.ab3@14033>    MOVE.l -$1C(A0),lasta6
0002BBDE <AmiBlitz3.ab3@14034>    MOVEA.l -$24(A0),A0
0002BBE4 <AmiBlitz3.ab3@14035>    MOVE.l A0,destpointer
0002BBEA <AmiBlitz3.ab3@14036>    MOVEA.l _mathffpbase,A6
0002BBF0 <AmiBlitz3.ab3@14037>    MOVEA.l ffplib,A1
0002BBF4 <AmiBlitz3.ab3@14038> BRA cont1
0002BBF8 <AmiBlitz3.ab3@14041>   MOVE.w #$2000,D1
0002BBFE <AmiBlitz3.ab3@14042>   OR.w regnum,D1
0002BC02 <AmiBlitz3.ab3@14043>    BSR.w writeword
0002BC04 <AmiBlitz3.ab3@14044>     MOVEQ #0,d1
0002BC0A <AmiBlitz3.ab3@14045>     MOVE.w regnum,D1
0002BC0C <AmiBlitz3.ab3@14046>     ASL.l #8,d1
0002BC0E <AmiBlitz3.ab3@14047>     ASL.l #2,d1
0002BC14 <AmiBlitz3.ab3@14048>     OR.l #$f2000000,d1
0002BC18 <AmiBlitz3.ab3@14049>     BSR writelong
0002BC1C <AmiBlitz3.ab3@14050>   MOVE.w #$4E75,D1
0002BC20 <AmiBlitz3.ab3@14051>    BSR.w writeword
0002BC28 <AmiBlitz3.ab3@14052>   MOVE.w -$18(A0),lasta6
0002BC30 <AmiBlitz3.ab3@14053>   MOVE.l -$1C(A0),lasta6
0002BC34 <AmiBlitz3.ab3@14054>   MOVEA.l -$24(A0),A0
0002BC3A <AmiBlitz3.ab3@14055>   MOVE.l A0,destpointer
0002BC3E <AmiBlitz3.ab3@14056>   MOVEM.l D2/A5,-(A7)
0002BC44 <AmiBlitz3.ab3@14057>   MOVEA.l _mathffpbase,A6
0002BC4A <AmiBlitz3.ab3@14058>   MOVEA.l ffplib,A1
0002BC4E <AmiBlitz3.ab3@14059>   MOVE.w $A(A1),D0
0002BC54 <AmiBlitz3.ab3@14060>   LEA _mathffpbase,A5
0002BC56 <AmiBlitz3.ab3@14061>   SUBA.w D0,A5
0002BC5C <AmiBlitz3.ab3@14062>   JSR Aclearcache                                          ;neg +
0002BC62 <AmiBlitz3.ab3@14063>   CLR.l load_var_addr
0002BC68 <AmiBlitz3.ab3@14064>   CLR.l imm_addr
0002BC6E <AmiBlitz3.ab3@14065>   TST.w dontwrite
0002BC72 <AmiBlitz3.ab3@14066>   BNE '1
0002BC74 <AmiBlitz3.ab3@14067>   JSR (A0)                                                 ;calc constant inline expression
0002BC78 <AmiBlitz3.ab3@14070>   MOVEM.l (A7)+,D2/A5
0002BC7E <AmiBlitz3.ab3@14073>   MOVE.b d2,isconstantvalue
0002BC84 <AmiBlitz3.ab3@14074>   MOVE.l d0,lastconstantvalue
0002BC8A <AmiBlitz3.ab3@14075>   MOVE.w regnum,D1
0002BC8C <AmiBlitz3.ab3@14076>   LSL.w #8,D1
0002BC8E <AmiBlitz3.ab3@14077>   LSL.w #1,D1
0002BC92 <AmiBlitz3.ab3@14078>   ORI.w #$203C,D1
0002BC96 <AmiBlitz3.ab3@14079>   CMP.w #$3,D2
0002BC9A <AmiBlitz3.ab3@14080>    BCC.w JL_0_9BCE
0002BC9E <AmiBlitz3.ab3@14081>   ORI.w #$1000,D1
0002BCA2 <AmiBlitz3.ab3@14082>    BSR.w writeword
0002BCA4 <AmiBlitz3.ab3@14083>   MOVE.w D0,D1
0002BCA8 <AmiBlitz3.ab3@14084>    BSR.w writeword
0002BCAC <AmiBlitz3.ab3@14085> BRA.w JL_0_9BD8
0002BCB2 <AmiBlitz3.ab3@14089>   TST.b iee                                                ;fpu constant
0002BCB6 <AmiBlitz3.ab3@14090>   BEQ 'l10
0002BCBA <AmiBlitz3.ab3@14091>   CMP.b #5,d2
0002BCBE <AmiBlitz3.ab3@14092>   BNE 'l10
0002BCC0 <AmiBlitz3.ab3@14093>   MOVEQ #0,d1
0002BCC6 <AmiBlitz3.ab3@14094>   MOVE.w regnum,D1
0002BCC8 <AmiBlitz3.ab3@14095>   ASL.l #7,d1
0002BCCE <AmiBlitz3.ab3@14096>   OR.l #$f23c5400,d1
0002BCD2 <AmiBlitz3.ab3@14097>   BSR writelong
0002BCD4 <AmiBlitz3.ab3@14098>   SUBQ.l #8,a7
0002BCDA <AmiBlitz3.ab3@14099>   fmove.d fp0,0(a7)
0002BCDC <AmiBlitz3.ab3@14100>   MOVE.l (a7)+,d1
0002BCE0 <AmiBlitz3.ab3@14101>   BSR writelong
0002BCE2 <AmiBlitz3.ab3@14102>   MOVE.l (a7)+,d1
0002BCE6 <AmiBlitz3.ab3@14103>   BSR writelong
0002BCEA <AmiBlitz3.ab3@14104> BRA JL_0_9BD8
0002BCEE <AmiBlitz3.ab3@14107>   BSR.w writeword
0002BCF0 <AmiBlitz3.ab3@14108>   MOVE.l D0,D1
0002BCF4 <AmiBlitz3.ab3@14109>   BSR.w writelong
0002BCF8 <AmiBlitz3.ab3@14112>   MOVEA.l forthsp(PC),A0
0002BCFC <AmiBlitz3.ab3@14113>   MOVEA.l -$20(A0),A3
0002BD02 <AmiBlitz3.ab3@14114>   MOVEA.l hunkoffsetbase,A2
0002BD08 <AmiBlitz3.ab3@14115>   MOVE.l A3,hunkoffsetbase
0002BD0E <AmiBlitz3.ab3@14116>   MOVEA.l _execbase,A6
0002BD10 <AmiBlitz3.ab3@14119>   CMPA.l A3,A2
0002BD14 <AmiBlitz3.ab3@14120>   BEQ.w JL_0_9C0A
0002BD1A <AmiBlitz3.ab3@14121>   SUBQ.l #1,hunkoffsetcounter
0002BD1C <AmiBlitz3.ab3@14122>   MOVEA.l A2,A1
0002BD1E <AmiBlitz3.ab3@14123>   MOVEA.l (A2),A2
0002BD20 <AmiBlitz3.ab3@14124>   MOVEQ.l #$8,D0
0002BD26 <AmiBlitz3.ab3@14125>   MOVE.l mempool2,a0
0002BD2A <AmiBlitz3.ab3@14126>    JSR _FreePooled(A6)
0002BD2E <AmiBlitz3.ab3@14127> BRA.w JL_0_9BF0
0002BD32 <AmiBlitz3.ab3@14131>   MOVEA.l forthsp(PC),A0
0002BD36 <AmiBlitz3.ab3@14134>   LEA -$12(A0),A0
0002BD3C <AmiBlitz3.ab3@14135>   MOVE.l A0,forthsp
0002BD40 <AmiBlitz3.ab3@14136>   MOVEM.l (A7)+,D1/A0
0002BD44 <AmiBlitz3.ab3@14137>   BSR.w reget
0002BD48 <AmiBlitz3.ab3@14138> BRA.w JL_0_9AFE
0002BD4C <AmiBlitz3.ab3@14142>   BSR.w JL_0_A386
0002BD4E <AmiBlitz3.ab3@14143>   TST.w d0
0002BD52 <AmiBlitz3.ab3@14144>   BEQ JL_0_9C42
0002BD56 <AmiBlitz3.ab3@14145>   CMP.b #",",d0
0002BD5A <AmiBlitz3.ab3@14146>   BEQ JL_0_9C42
0002BD5E <AmiBlitz3.ab3@14147>   CMP.b #"@",d0                                            ;expandline @@
0002BD62 <AmiBlitz3.ab3@14148>   BEQ JL_0_9C42
0002BD68 <AmiBlitz3.ab3@14149>   LEA operators,A0
0002BD6A <AmiBlitz3.ab3@14152>    TST.w (A0)
0002BD6E <AmiBlitz3.ab3@14153>    BEQ.w JL_0_9C42
0002BD70 <AmiBlitz3.ab3@14154>   CMP.w (A0),D0
0002BD74 <AmiBlitz3.ab3@14155>    BEQ.w JL_0_9C46a
0002BD78 <AmiBlitz3.ab3@14156>   LEA $20(A0),A0
0002BD7C <AmiBlitz3.ab3@14157> BRA.w JL_0_9C2E
0002BD7E <AmiBlitz3.ab3@14161>   MOVEQ.l #$00,D1
0002BD80 <AmiBlitz3.ab3@14162> RTS
0002BD84 <AmiBlitz3.ab3@14166>   CMP.w #$3C,D0
0002BD88 <AmiBlitz3.ab3@14167>    BNE.w JL_0_9C70
0002BD8C <AmiBlitz3.ab3@14168>    BSR.w get1bytemain
0002BD90 <AmiBlitz3.ab3@14169>   CMP.w #$3D,D0
0002BD94 <AmiBlitz3.ab3@14170>    BNE.w JL_0_9C64
0002BD9A <AmiBlitz3.ab3@14171>   LEA ople,A0
0002BD9E <AmiBlitz3.ab3@14172> BRA.w JL_0_9CCA
0002BDA2 <AmiBlitz3.ab3@14176>   CMP.w #$3E,D0
0002BDA6 <AmiBlitz3.ab3@14177>    BNE.w JL_0_9C96
0002BDAA <AmiBlitz3.ab3@14178> BRA.w JL_0_9CC4
0002BDAE <AmiBlitz3.ab3@14182>   CMP.w #$3E,D0
0002BDB2 <AmiBlitz3.ab3@14183>    BNE.w JL_0_9C9E
0002BDB6 <AmiBlitz3.ab3@14184>    BSR.w get1bytemain
0002BDBA <AmiBlitz3.ab3@14185>   CMP.w #$3D,D0
0002BDBE <AmiBlitz3.ab3@14186>    BNE.w JL_0_9C8E
0002BDC4 <AmiBlitz3.ab3@14187>   LEA opge,A0
0002BDC8 <AmiBlitz3.ab3@14188> BRA.w JL_0_9CCA
0002BDCC <AmiBlitz3.ab3@14192>   CMP.w #$3C,D0
0002BDD0 <AmiBlitz3.ab3@14193>    BEQ.w JL_0_9CC4
0002BDDA <AmiBlitz3.ab3@14197>     MOVE.w oldqflag,instringon
0002BDE0 <AmiBlitz3.ab3@14198>     MOVEA.l lastsourcepos,A5
0002BDE4 <AmiBlitz3.ab3@14199> BRA.w JL_0_9CCA
0002BDE8 <AmiBlitz3.ab3@14203>   CMP.w #$3D,D0
0002BDEC <AmiBlitz3.ab3@14204>    BNE.w JL_0_9CCA
0002BDF0 <AmiBlitz3.ab3@14205>    BSR.w get1bytemain
0002BDF4 <AmiBlitz3.ab3@14206>   CMP.w #$3E,D0
0002BDF8 <AmiBlitz3.ab3@14207>    BNE.w JL_0_9CBC
0002BDFE <AmiBlitz3.ab3@14208>   LEA opge,A0
0002BE02 <AmiBlitz3.ab3@14209> BRA.w JL_0_9CCA
0002BE06 <AmiBlitz3.ab3@14213>   CMP.w #$3C,D0
0002BE0A <AmiBlitz3.ab3@14214>   BNE.w JL_0_9C96
0002BE10 <AmiBlitz3.ab3@14217>   LEA opne,A0
0002BE14 <AmiBlitz3.ab3@14220>   MOVE.w $1E(A0),D1
0002BE16 <AmiBlitz3.ab3@14221> RTS
0002BE18 <AmiBlitz3.ab3@14228>   MOVE.w d2,d1
0002BE1A <AmiBlitz3.ab3@14229>   SUBQ.w #1,D1
0002BE1E <AmiBlitz3.ab3@14230>    BMI.w illoperr
0002BE20 <AmiBlitz3.ab3@14231>   LSL.w #2,D1
0002BE24 <AmiBlitz3.ab3@14232>   MOVE.l $2(A0,D1.W),D1
0002BE28 <AmiBlitz3.ab3@14233>    BEQ.w illoperr
0002BE2A <AmiBlitz3.ab3@14234>   MOVEA.l D1,A0
0002BE2C <AmiBlitz3.ab3@14237> JMP (A0)
0002BE30 <AmiBlitz3.ab3@14253>   MOVEA.l precsp(PC),A1
0002BE36 <AmiBlitz3.ab3@14254>   CMPA.l #precstackf,A1
0002BE3A <AmiBlitz3.ab3@14255>    BCC.w pserr
0002BE3C <AmiBlitz3.ab3@14256>   MOVE.w -(A1),D1
0002BE3E <AmiBlitz3.ab3@14257>   MOVEA.l -(A1),A0
0002BE44 <AmiBlitz3.ab3@14258>   MOVE.l A1,precsp
0002BE46 <AmiBlitz3.ab3@14259> RTS
0002BE4A <AmiBlitz3.ab3@14262> precsp:      Dc.l precstack
0002BF46 <AmiBlitz3.ab3@14263> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002BFCA <AmiBlitz3.ab3@14264>              Ds.l 33
0002BFCC <AmiBlitz3.ab3@14270> mseq:  SEQ D0
0002BFCE <AmiBlitz3.ab3@14271> msne:    SNE D0
0002BFD0 <AmiBlitz3.ab3@14272> mslt:    SLT D0
0002BFD2 <AmiBlitz3.ab3@14273> msle:    SLE D0
0002BFD4 <AmiBlitz3.ab3@14274> msgt:    SGT D0
0002BFD6 <AmiBlitz3.ab3@14275> msge:    SGE D0
0002BFD8 <AmiBlitz3.ab3@14277> cmp0:    CMP.b D0,D0
0002BFDA <AmiBlitz3.ab3@14278> cmp1:    CMP.w D0,D0
0002BFDC <AmiBlitz3.ab3@14279> cmp2:    CMP.l D0,D0
0002BFE0 <AmiBlitz3.ab3@14283>   MOVE.w cmp0(PC),D1
0002BFE4 <AmiBlitz3.ab3@14284> BRA.w doeqcmp2                                            ;writecompare
0002BFE8 <AmiBlitz3.ab3@14288>   MOVE.w cmp0(PC),D1
0002BFEC <AmiBlitz3.ab3@14289> BRA.w donecmp2
0002BFF0 <AmiBlitz3.ab3@14293>   MOVE.w cmp0(PC),D1
0002BFF4 <AmiBlitz3.ab3@14294> BRA.w doltcmp2
0002BFF8 <AmiBlitz3.ab3@14298>   MOVE.w cmp0(PC),D1
0002BFFC <AmiBlitz3.ab3@14299> BRA.w dolecmp2
0002C000 <AmiBlitz3.ab3@14303>   MOVE.w cmp0(PC),D1
0002C004 <AmiBlitz3.ab3@14304> BRA.w dogtcmp2
0002C008 <AmiBlitz3.ab3@14309>   MOVE.w cmp0(PC),D1
0002C00C <AmiBlitz3.ab3@14310> BRA.w dogecmp2
0002C010 <AmiBlitz3.ab3@14314>   MOVE.w cmp1(PC),D1
0002C014 <AmiBlitz3.ab3@14315> BRA.w doeqcmp2
0002C018 <AmiBlitz3.ab3@14319>   MOVE.w cmp1(PC),D1
0002C01C <AmiBlitz3.ab3@14320> BRA.w donecmp2
0002C020 <AmiBlitz3.ab3@14324>   MOVE.w cmp1(PC),D1
0002C024 <AmiBlitz3.ab3@14325> BRA.w doltcmp2
0002C028 <AmiBlitz3.ab3@14329>   MOVE.w cmp1(PC),D1
0002C02C <AmiBlitz3.ab3@14330> BRA.w dolecmp2
0002C030 <AmiBlitz3.ab3@14334>   MOVE.w cmp1(PC),D1
0002C034 <AmiBlitz3.ab3@14335> BRA.w dogtcmp2
0002C038 <AmiBlitz3.ab3@14340>   MOVE.w cmp1(PC),D1
0002C03C <AmiBlitz3.ab3@14341> BRA.w dogecmp2
0002C040 <AmiBlitz3.ab3@14345>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C044 <AmiBlitz3.ab3@14346> BRA doeqcmp2
0002C048 <AmiBlitz3.ab3@14349>   MOVE.w cmp2(PC),D1
0002C04C <AmiBlitz3.ab3@14350> BRA donecmp2
0002C050 <AmiBlitz3.ab3@14354>   MOVE.w cmp2(PC),D1
0002C054 <AmiBlitz3.ab3@14355> BRA.w doltcmp2
0002C058 <AmiBlitz3.ab3@14359>   MOVE.w cmp2(PC),D1
0002C05C <AmiBlitz3.ab3@14360> BRA.w dolecmp2
0002C060 <AmiBlitz3.ab3@14364>   MOVE.w cmp2(PC),D1
0002C064 <AmiBlitz3.ab3@14365> BRA.w dogtcmp2
0002C068 <AmiBlitz3.ab3@14369>   MOVE.w cmp2(PC),D1
0002C06C <AmiBlitz3.ab3@14370> BRA.w dogecmp2
0002C06E <AmiBlitz3.ab3@14373> cfregat:  Ds.w 1
0002C074 <AmiBlitz3.ab3@14377>   MOVE.w D1,libjsr+2
0002C078 <AmiBlitz3.ab3@14378>    BSR.w JL_0_AD40
0002C07A <AmiBlitz3.ab3@14379>   MOVE.l D4,D1
0002C07E <AmiBlitz3.ab3@14380>    BSR.w JL_0_AD38
0002C082 <AmiBlitz3.ab3@14381>   MOVE.w #$C900,D1
0002C086 <AmiBlitz3.ab3@14382>    BSR.w Atokejsr
0002C08A <AmiBlitz3.ab3@14383>    BSR.w JL_0_A352
0002C090 <AmiBlitz3.ab3@14384>   MOVE.l libjsr,D1
0002C094 <AmiBlitz3.ab3@14385>    BSR.w writelong
0002C09E <AmiBlitz3.ab3@14386>   MOVE.w regnum,cfregat
0002C0A4 <AmiBlitz3.ab3@14387>   CLR.w regnum
0002C0A6 <AmiBlitz3.ab3@14388> RTS
0002C0B0 <AmiBlitz3.ab3@14392>   MOVE.w cfregat,regnum
0002C0B4 <AmiBlitz3.ab3@14393>    BSR.w JL_0_A36E
0002C0B6 <AmiBlitz3.ab3@14394>   MOVE.l D5,D1
0002C0BA <AmiBlitz3.ab3@14395> BRA.w JL_0_AD38
0002C0BC <AmiBlitz3.ab3@14399>    MOVEQ.l #-$2A,D1
0002C0C2 <AmiBlitz3.ab3@14400>    TST.b fpu
0002C0C6 <AmiBlitz3.ab3@14401>    BEQ do_equal_float__nofpu
0002C0C8 <AmiBlitz3.ab3@14402>    MOVEQ #0,d1
0002C0CE <AmiBlitz3.ab3@14403>    MOVE.w regnum,d1
0002C0D0 <AmiBlitz3.ab3@14404>    MOVE.l d1,d2
0002C0D2 <AmiBlitz3.ab3@14405>    ASL.l #7,d1
0002C0D4 <AmiBlitz3.ab3@14406>    ADDQ  #1,d2
0002C0D6 <AmiBlitz3.ab3@14407>    ASL.l #8,d2
0002C0D8 <AmiBlitz3.ab3@14408>    ASL.l #2,d2
0002C0DA <AmiBlitz3.ab3@14409>    OR.l d2,d1
0002C0E0 <AmiBlitz3.ab3@14410>    OR.l #$f2000038,d1
0002C0E6 <AmiBlitz3.ab3@14411>    JSR writelong
0002C0EA <AmiBlitz3.ab3@14412>    MOVE.w #$f240,d1
0002C0F0 <AmiBlitz3.ab3@14413>    OR.w regnum,d1
0002C0F4 <AmiBlitz3.ab3@14414>    BSR writeword
0002C0F6 <AmiBlitz3.ab3@14415>    MOVEQ.l #1,d2
0002C0FA <AmiBlitz3.ab3@14416>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C0FE <AmiBlitz3.ab3@14417>    BSR writeword
0002C100 <AmiBlitz3.ab3@14418> RTS
0002C104 <AmiBlitz3.ab3@14421>    BSR.w docflib
0002C108 <AmiBlitz3.ab3@14422>    BSR.w doeqcmp
0002C10C <AmiBlitz3.ab3@14423> BRA.w docflib2
0002C10E <AmiBlitz3.ab3@14427>   MOVEQ.l #-$2A,D1
0002C114 <AmiBlitz3.ab3@14428>   TST.b fpu
0002C118 <AmiBlitz3.ab3@14429>    BEQ do_not_equal_float__nofpu
0002C11A <AmiBlitz3.ab3@14430>    MOVEQ #0,d1
0002C120 <AmiBlitz3.ab3@14431>    MOVE.w regnum,d1
0002C122 <AmiBlitz3.ab3@14432>    MOVE.l d1,d2
0002C124 <AmiBlitz3.ab3@14433>    ASL.l #7,d1
0002C126 <AmiBlitz3.ab3@14434>    ADDQ  #1,d2
0002C128 <AmiBlitz3.ab3@14435>    ASL.l #8,d2
0002C12A <AmiBlitz3.ab3@14436>    ASL.l #2,d2
0002C12C <AmiBlitz3.ab3@14437>    OR.l d2,d1
0002C132 <AmiBlitz3.ab3@14438>    OR.l #$f2000038,d1
0002C138 <AmiBlitz3.ab3@14439>    JSR writelong
0002C13C <AmiBlitz3.ab3@14440>    MOVE.w #$f240,d1
0002C142 <AmiBlitz3.ab3@14441>    OR.w regnum,d1
0002C146 <AmiBlitz3.ab3@14442>    BSR writeword
0002C14C <AmiBlitz3.ab3@14443>    MOVE.l #1,d2
0002C150 <AmiBlitz3.ab3@14444>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C154 <AmiBlitz3.ab3@14445>    BSR writeword
0002C156 <AmiBlitz3.ab3@14446> RTS
0002C15A <AmiBlitz3.ab3@14449>    BSR.w docflib
0002C15E <AmiBlitz3.ab3@14450>    BSR.w donecmp
0002C162 <AmiBlitz3.ab3@14451> BRA.w docflib2
0002C164 <AmiBlitz3.ab3@14455>   MOVEQ.l #-$2A,D1
0002C16A <AmiBlitz3.ab3@14456>     TST.b fpu
0002C16E <AmiBlitz3.ab3@14457>    BEQ do_littler_float__nofpu
0002C170 <AmiBlitz3.ab3@14458>    MOVEQ #0,d1
0002C176 <AmiBlitz3.ab3@14459>    MOVE.w regnum,d1
0002C178 <AmiBlitz3.ab3@14460>    MOVE.l d1,d2
0002C17A <AmiBlitz3.ab3@14461>    ASL.l #7,d1
0002C17C <AmiBlitz3.ab3@14462>    ADDQ  #1,d2
0002C17E <AmiBlitz3.ab3@14463>    ASL.l #8,d2
0002C180 <AmiBlitz3.ab3@14464>    ASL.l #2,d2
0002C182 <AmiBlitz3.ab3@14465>    OR.l d2,d1
0002C188 <AmiBlitz3.ab3@14466>    OR.l #$f2000038,d1
0002C18E <AmiBlitz3.ab3@14467>    JSR writelong
0002C192 <AmiBlitz3.ab3@14468>    MOVE.w #$f240,d1
0002C198 <AmiBlitz3.ab3@14469>    OR.w regnum,d1
0002C19C <AmiBlitz3.ab3@14470>    BSR writeword
0002C1A2 <AmiBlitz3.ab3@14471>    MOVE.l #$1,d2
0002C1A6 <AmiBlitz3.ab3@14472>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C1AA <AmiBlitz3.ab3@14473>    BSR writeword
0002C1AC <AmiBlitz3.ab3@14474> RTS
0002C1B0 <AmiBlitz3.ab3@14477>    BSR.w docflib
0002C1B4 <AmiBlitz3.ab3@14478>    BSR.w doltcmp
0002C1B8 <AmiBlitz3.ab3@14479> BRA.w docflib2
0002C1BA <AmiBlitz3.ab3@14483>   MOVEQ.l #-$2A,D1
0002C1C0 <AmiBlitz3.ab3@14484>   TST.b fpu
0002C1C4 <AmiBlitz3.ab3@14485>    BEQ do_littler_equal_float__nofpu
0002C1C6 <AmiBlitz3.ab3@14486>    MOVEQ #0,d1
0002C1CC <AmiBlitz3.ab3@14487>    MOVE.w regnum,d1
0002C1CE <AmiBlitz3.ab3@14488>    MOVE.l d1,d2
0002C1D0 <AmiBlitz3.ab3@14489>    ASL.l #7,d1
0002C1D2 <AmiBlitz3.ab3@14490>    ADDQ  #1,d2
0002C1D4 <AmiBlitz3.ab3@14491>    ASL.l #8,d2
0002C1D6 <AmiBlitz3.ab3@14492>    ASL.l #2,d2
0002C1D8 <AmiBlitz3.ab3@14493>    OR.l d2,d1
0002C1DE <AmiBlitz3.ab3@14494>    OR.l #$f2000038,d1
0002C1E4 <AmiBlitz3.ab3@14495>    JSR writelong
0002C1E8 <AmiBlitz3.ab3@14496>    MOVE.w #$f240,d1
0002C1EE <AmiBlitz3.ab3@14497>    OR.w regnum,d1
0002C1F2 <AmiBlitz3.ab3@14498>    BSR writeword
0002C1F8 <AmiBlitz3.ab3@14499>    MOVE.l #1,d2
0002C1FC <AmiBlitz3.ab3@14500>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C200 <AmiBlitz3.ab3@14501>    BSR writeword
0002C202 <AmiBlitz3.ab3@14502> RTS
0002C206 <AmiBlitz3.ab3@14505>    BSR.w docflib
0002C20A <AmiBlitz3.ab3@14506>    BSR.w dolecmp
0002C20E <AmiBlitz3.ab3@14507> BRA.w docflib2
0002C210 <AmiBlitz3.ab3@14511>   MOVEQ.l #-$2A,D1
0002C216 <AmiBlitz3.ab3@14512>    TST.b fpu
0002C21A <AmiBlitz3.ab3@14513>    BEQ do_greater_float__nofpu
0002C21C <AmiBlitz3.ab3@14514>     MOVEQ #0,d1
0002C222 <AmiBlitz3.ab3@14515>    MOVE.w regnum,d1
0002C224 <AmiBlitz3.ab3@14516>    MOVE.l d1,d2
0002C226 <AmiBlitz3.ab3@14517>    ASL.l #7,d1
0002C228 <AmiBlitz3.ab3@14518>    ADDQ  #1,d2
0002C22A <AmiBlitz3.ab3@14519>    ASL.l #8,d2
0002C22C <AmiBlitz3.ab3@14520>    ASL.l #2,d2
0002C22E <AmiBlitz3.ab3@14521>    OR.l d2,d1
0002C234 <AmiBlitz3.ab3@14522>    OR.l #$f2000038,d1
0002C23A <AmiBlitz3.ab3@14523>    JSR writelong
0002C23E <AmiBlitz3.ab3@14524>    MOVE.w #$f240,d1
0002C244 <AmiBlitz3.ab3@14525>    OR.w regnum,d1
0002C248 <AmiBlitz3.ab3@14526>    BSR writeword
0002C24E <AmiBlitz3.ab3@14527>    MOVE.l #1,d2
0002C252 <AmiBlitz3.ab3@14528>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C256 <AmiBlitz3.ab3@14529>    BSR writeword
0002C258 <AmiBlitz3.ab3@14530> RTS
0002C25C <AmiBlitz3.ab3@14533>    BSR.w docflib
0002C260 <AmiBlitz3.ab3@14534>    BSR.w dogtcmp
0002C264 <AmiBlitz3.ab3@14535> BRA.w docflib2
0002C266 <AmiBlitz3.ab3@14539>   MOVEQ.l #-$2A,D1
0002C26C <AmiBlitz3.ab3@14540>  TST.b fpu
0002C270 <AmiBlitz3.ab3@14541>    BEQ do_greater_equal_float__nofpu
0002C272 <AmiBlitz3.ab3@14542>    MOVEQ #0,d1
0002C278 <AmiBlitz3.ab3@14543>    MOVE.w regnum,d1
0002C27A <AmiBlitz3.ab3@14544>    MOVE.l d1,d2
0002C27C <AmiBlitz3.ab3@14545>    ASL.l #7,d1
0002C27E <AmiBlitz3.ab3@14546>    ADDQ  #1,d2
0002C280 <AmiBlitz3.ab3@14547>    ASL.l #8,d2
0002C282 <AmiBlitz3.ab3@14548>    ASL.l #2,d2
0002C284 <AmiBlitz3.ab3@14549>    OR.l d2,d1
0002C28A <AmiBlitz3.ab3@14550>    OR.l #$f2000038,d1
0002C290 <AmiBlitz3.ab3@14551>    JSR writelong
0002C294 <AmiBlitz3.ab3@14552>    MOVE.w #$f240,d1
0002C29A <AmiBlitz3.ab3@14553>    OR.w regnum,d1
0002C29E <AmiBlitz3.ab3@14554>    BSR writeword
0002C2A4 <AmiBlitz3.ab3@14555>    MOVE.l #1,d2
0002C2A8 <AmiBlitz3.ab3@14556>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C2AC <AmiBlitz3.ab3@14557>    BSR writeword
0002C2AE <AmiBlitz3.ab3@14558> RTS
0002C2B2 <AmiBlitz3.ab3@14561>    BSR.w docflib
0002C2B6 <AmiBlitz3.ab3@14562>    BSR.w dogecmp
0002C2BA <AmiBlitz3.ab3@14563> BRA.w docflib2
0002C2C0 <AmiBlitz3.ab3@14568>   MOVE.l #$CE00,D1
0002C2C6 <AmiBlitz3.ab3@14569>    MOVE.l d1,lastinstruction
0002C2CA <AmiBlitz3.ab3@14570>    BSR.w Atokejsr
0002C2CE <AmiBlitz3.ab3@14571> BRA.w doeqcmp
0002C2D4 <AmiBlitz3.ab3@14575>   MOVE.l #$CE00,D1
0002C2DA <AmiBlitz3.ab3@14576>    MOVE.l d1,lastinstruction
0002C2DE <AmiBlitz3.ab3@14577>    BSR.w Atokejsr
0002C2E2 <AmiBlitz3.ab3@14578> BRA.w donecmp
0002C2E8 <AmiBlitz3.ab3@14582>   MOVE.l #$CE00,D1
0002C2EE <AmiBlitz3.ab3@14583>    MOVE.l d1,lastinstruction
0002C2F2 <AmiBlitz3.ab3@14584>    BSR.w Atokejsr
0002C2F6 <AmiBlitz3.ab3@14585> BRA.w doltcmp
0002C2FC <AmiBlitz3.ab3@14589>   MOVE.l #$CE00,D1
0002C302 <AmiBlitz3.ab3@14590>    MOVE.l d1,lastinstruction
0002C306 <AmiBlitz3.ab3@14591>    BSR.w Atokejsr
0002C30A <AmiBlitz3.ab3@14592> BRA.w dolecmp
0002C310 <AmiBlitz3.ab3@14596>   MOVE.l #$CE00,D1
0002C316 <AmiBlitz3.ab3@14597>    MOVE.l d1,lastinstruction
0002C31A <AmiBlitz3.ab3@14598>    BSR.w Atokejsr
0002C31E <AmiBlitz3.ab3@14599> BRA.w dogtcmp
0002C324 <AmiBlitz3.ab3@14603>   MOVE.l #$CE00,D1
0002C32A <AmiBlitz3.ab3@14604>    MOVE.l d1,lastinstruction
0002C32E <AmiBlitz3.ab3@14605>    BSR.w Atokejsr
0002C332 <AmiBlitz3.ab3@14606> BRA.w dogecmp
0002C338 <AmiBlitz3.ab3@14611>   TST.b fast                                               ;compare
0002C33C <AmiBlitz3.ab3@14612>   BEQ cmpit__org
0002C342 <AmiBlitz3.ab3@14616>   MOVE.l destpointer,a0
0002C348 <AmiBlitz3.ab3@14617>   SUB.l imm_addr,a0
0002C34E <AmiBlitz3.ab3@14618>   CMP.l #6,a0
0002C352 <AmiBlitz3.ab3@14619>   BNE cmpit__l11
0002C358 <AmiBlitz3.ab3@14620>   MOVE.l imm_addr,a0
0002C360 <AmiBlitz3.ab3@14621>   CMP.w #$223c,imm_addr
0002C364 <AmiBlitz3.ab3@14622>   BNE cmpit__org
0002C36A <AmiBlitz3.ab3@14623>   ADD.w #$8e80,-6(a4)
0002C370 <AmiBlitz3.ab3@14626>   CLR.l imm_addr
0002C372 <AmiBlitz3.ab3@14627> RTS
0002C378 <AmiBlitz3.ab3@14630>   CMP.l #4,a0
0002C37C <AmiBlitz3.ab3@14631>   BNE cmpit__l10
0002C380 <AmiBlitz3.ab3@14632>   CMP.b #2,d3
0002C384 <AmiBlitz3.ab3@14633>   BNE cmpit__l11b
0002C38A <AmiBlitz3.ab3@14634>   ADD.w #$7e40,-4(a4)
0002C38C <AmiBlitz3.ab3@14635> RTS
0002C392 <AmiBlitz3.ab3@14638>  ADD.w #$7e00,-4(a4)
0002C394 <AmiBlitz3.ab3@14639> RTS
0002C39A <AmiBlitz3.ab3@14642>    MOVE.l destpointer,a0
0002C3A0 <AmiBlitz3.ab3@14643>    SUB.l load_var_addr,a0
0002C3A4 <AmiBlitz3.ab3@14644>    CMP.w #4,a0
0002C3A8 <AmiBlitz3.ab3@14645>    BNE cmpit__org
0002C3AC <AmiBlitz3.ab3@14646>    CMP.b #3,d3
0002C3B0 <AmiBlitz3.ab3@14647>    BCS cmpit__lv1
0002C3B6 <AmiBlitz3.ab3@14648>    CLR.l load_var_addr
0002C3BC <AmiBlitz3.ab3@14649>    ADD.w #$9080-$200,-4(a4)
0002C3BE <AmiBlitz3.ab3@14650> RTS
0002C3C2 <AmiBlitz3.ab3@14653>   CMP.b #2,d3
0002C3C6 <AmiBlitz3.ab3@14654>    BNE cmpit__org
0002C3CC <AmiBlitz3.ab3@14655>    CLR.l load_var_addr
0002C3D2 <AmiBlitz3.ab3@14656>    ADD.w #$8040-$200,-4(a4)
0002C3D4 <AmiBlitz3.ab3@14657> RTS
0002C3DA <AmiBlitz3.ab3@14660>   MOVE.w regnum,D3
0002C3DC <AmiBlitz3.ab3@14661>   OR.w D3,D1
0002C3DE <AmiBlitz3.ab3@14662>   LSL.w #8,D3
0002C3E0 <AmiBlitz3.ab3@14663>   LSL.w #1,D3
0002C3E2 <AmiBlitz3.ab3@14664>   OR.w D3,D1
0002C3E4 <AmiBlitz3.ab3@14665>   ADDQ.w #1,D1
0002C3E8 <AmiBlitz3.ab3@14666> BRA.w writeword
0002C3EC <AmiBlitz3.ab3@14670>    BSR.w cmpit
0002C3F0 <AmiBlitz3.ab3@14673>    MOVE.w mseq(PC),D1
0002C3F4 <AmiBlitz3.ab3@14674> BRA.w cpoke
0002C3F8 <AmiBlitz3.ab3@14678>   BSR.w cmpit
0002C3FC <AmiBlitz3.ab3@14681>   MOVE.w msne(PC),D1
0002C400 <AmiBlitz3.ab3@14682> BRA.w cpoke
0002C404 <AmiBlitz3.ab3@14686>   BSR.w cmpit
0002C408 <AmiBlitz3.ab3@14689>    MOVE.w mslt(PC),D1
0002C40C <AmiBlitz3.ab3@14690> BRA.w cpoke
0002C410 <AmiBlitz3.ab3@14694>    BSR.w cmpit
0002C414 <AmiBlitz3.ab3@14697>    MOVE.w msle(PC),D1
0002C418 <AmiBlitz3.ab3@14698> BRA.w cpoke
0002C41C <AmiBlitz3.ab3@14702>    BSR.w cmpit
0002C420 <AmiBlitz3.ab3@14705>    MOVE.w msgt(PC),D1
0002C424 <AmiBlitz3.ab3@14706> BRA.w cpoke
0002C428 <AmiBlitz3.ab3@14710>   BSR.w cmpit
0002C42C <AmiBlitz3.ab3@14713>    MOVE.w msge(PC),D1
0002C432 <AmiBlitz3.ab3@14716>    OR.w regnum,D1
0002C436 <AmiBlitz3.ab3@14717>    CMP.w #5,d2
0002C43A <AmiBlitz3.ab3@14718>    BNE cpoke__nod0
0002C43E <AmiBlitz3.ab3@14719>    CMP.w #5,d3
0002C442 <AmiBlitz3.ab3@14720>    BNE cpoke__nod0
0002C444 <AmiBlitz3.ab3@14721>    MOVE.l d1,-(a7)
0002C44A <AmiBlitz3.ab3@14722>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002C44E <AmiBlitz3.ab3@14723>    BSR writelong
0002C450 <AmiBlitz3.ab3@14724>    MOVE.l (a7)+,d1
0002C454 <AmiBlitz3.ab3@14727>    BSR.w writeword                                         ;writeseq
0002C456 <AmiBlitz3.ab3@14728>    MOVEQ.l #1,d2
0002C45C <AmiBlitz3.ab3@14729>    MOVE.l lasttoken,d1
0002C462 <AmiBlitz3.ab3@14730>     TST.b fast
0002C466 <AmiBlitz3.ab3@14731>     BEQ.s cpoke__l11
0002C46C <AmiBlitz3.ab3@14732>    CMP.l #$800b,d1
0002C470 <AmiBlitz3.ab3@14733>    BEQ cpoke__l10
0002C474 <AmiBlitz3.ab3@14736>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002C47A <AmiBlitz3.ab3@14737>   OR.w regnum,D1
0002C47E <AmiBlitz3.ab3@14738>    BSR.w writeword                                         ;writeext.w
0002C480 <AmiBlitz3.ab3@14739>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002C482 <AmiBlitz3.ab3@14742> RTS
0002C486 <AmiBlitz3.ab3@14747>   MOVE.w #$D040,D1
0002C488 <AmiBlitz3.ab3@14748>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002C48C <AmiBlitz3.ab3@14749> BRA.w doplus2
0002C490 <AmiBlitz3.ab3@14753>   MOVE.w #$D040,D1
0002C492 <AmiBlitz3.ab3@14754>   MOVEQ.l #$03,D2                                          ;now a long
0002C496 <AmiBlitz3.ab3@14755>    BSR.w doplus2
0002C49A <AmiBlitz3.ab3@14756> BRA.w convert_word_to_long
0002C49E <AmiBlitz3.ab3@14760>   MOVE.w #$D080,D1                                         ;writeaddlong
0002C4A0 <AmiBlitz3.ab3@14763>   MOVE.w d1,a1
0002C4A6 <AmiBlitz3.ab3@14764>   TST.b fast
0002C4AA <AmiBlitz3.ab3@14765>   BEQ doplus2__l10
0002C4AC <AmiBlitz3.ab3@14769>   ASR.w #8,d1
0002C4B0 <AmiBlitz3.ab3@14770>   CMP.b #$90,d1
0002C4B4 <AmiBlitz3.ab3@14771>   BEQ doplus2__sub1
0002C4B8 <AmiBlitz3.ab3@14772>   CMP.b #$d0,d1
0002C4BC <AmiBlitz3.ab3@14773>   BNE doplus2__l10
0002C4C0 <AmiBlitz3.ab3@14774>   CMP.b #3,d3
0002C4C4 <AmiBlitz3.ab3@14775>   BCS doplus2__lq10
0002C4CA <AmiBlitz3.ab3@14776>   TST.b quickadd
0002C4D0 <AmiBlitz3.ab3@14780>    MOVE.l destpointer,a0
0002C4D6 <AmiBlitz3.ab3@14781>    CLR.b quickadd
0002C4DC <AmiBlitz3.ab3@14782>    CLR.l load_var_addr
0002C4E2 <AmiBlitz3.ab3@14783>    SUB.l imm_addr,a0
0002C4E6 <AmiBlitz3.ab3@14784>    CMP.w #6,a0
0002C4EA <AmiBlitz3.ab3@14785>    BEQ doplus2__li10
0002C4EE <AmiBlitz3.ab3@14786>    CMP.w #4,a0
0002C4F2 <AmiBlitz3.ab3@14787>    BNE.s doplus2__li1
0002C4F8 <AmiBlitz3.ab3@14788>    CLR.l imm_addr
0002C4FE <AmiBlitz3.ab3@14789>    ADD.w #$a040-$200,-4(a4)
0002C500 <AmiBlitz3.ab3@14790> RTS
0002C502 <AmiBlitz3.ab3@14793>    MOVE.l a4,a0
0002C508 <AmiBlitz3.ab3@14794>    SUB.l load_var_addr,a0
0002C50E <AmiBlitz3.ab3@14795>    CMP.l #$a,a0
0002C512 <AmiBlitz3.ab3@14796>    BNE doplus2__l10e
0002C518 <AmiBlitz3.ab3@14797>    CLR.l load_var_addr
0002C51C <AmiBlitz3.ab3@14798>    MOVE.w -$8(a4),d1
0002C522 <AmiBlitz3.ab3@14799>    MOVE.l -$4(a4),-$8(a4)
0002C526 <AmiBlitz3.ab3@14800>    MOVE.w d1,-$4(a4)
0002C52C <AmiBlitz3.ab3@14801>    SUB.w #$1980,-$a(a4)
0002C532 <AmiBlitz3.ab3@14802>    SUBQ.l #2,destpointer
0002C534 <AmiBlitz3.ab3@14803> RTS
0002C53A <AmiBlitz3.ab3@14806>   CLR.b quickadd
0002C53E <AmiBlitz3.ab3@14807> BRA doplus2__l10
0002C544 <AmiBlitz3.ab3@14810>    CLR.l imm_addr
0002C548 <AmiBlitz3.ab3@14811>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002C54C <AmiBlitz3.ab3@14812>    BNE doplus2__doit
0002C552 <AmiBlitz3.ab3@14813>    SUBQ.l #6,destpointer
0002C554 <AmiBlitz3.ab3@14814> RTS
0002C55A <AmiBlitz3.ab3@14817>    ADD.w #$b080-$200,-6(a4)
0002C55C <AmiBlitz3.ab3@14818> RTS
0002C562 <AmiBlitz3.ab3@14821>    MOVE.l destpointer,a0
0002C568 <AmiBlitz3.ab3@14822>    SUB.l load_var_addr,a0
0002C56C <AmiBlitz3.ab3@14823>    CMP.w #4,a0
0002C570 <AmiBlitz3.ab3@14824>    BNE doplus2__l10
0002C574 <AmiBlitz3.ab3@14825>    CMP.b #3,d3
0002C578 <AmiBlitz3.ab3@14826>    BNE doplus2__lv1
0002C57E <AmiBlitz3.ab3@14827>    CLR.l load_var_addr
0002C584 <AmiBlitz3.ab3@14828>    ADD.w #$b080-$200,-4(a4)
0002C586 <AmiBlitz3.ab3@14829> RTS
0002C58A <AmiBlitz3.ab3@14832>   CMP.b #2,d3
0002C58E <AmiBlitz3.ab3@14833>   BNE doplus2__l10
0002C594 <AmiBlitz3.ab3@14834>   CLR.l load_var_addr
0002C59A <AmiBlitz3.ab3@14835>   ADD.w #$a040-$200,-4(a4)
0002C59C <AmiBlitz3.ab3@14836> RTS
0002C5A2 <AmiBlitz3.ab3@14839>   MOVE.w regnum,D3
0002C5A4 <AmiBlitz3.ab3@14840>   MOVE.w a1,d1
0002C5A6 <AmiBlitz3.ab3@14841>   OR.w D3,D1
0002C5A8 <AmiBlitz3.ab3@14842>   ADDQ.w #1,D1
0002C5AA <AmiBlitz3.ab3@14843>   LSL.w #8,D3
0002C5AC <AmiBlitz3.ab3@14844>   LSL.w #1,D3
0002C5AE <AmiBlitz3.ab3@14845>   OR.w D3,D1
0002C5B2 <AmiBlitz3.ab3@14846> BRA.w writeword
0002C5B6 <AmiBlitz3.ab3@14849>    CMP.b #3,d3
0002C5BA <AmiBlitz3.ab3@14850>    BCS doplus2__sub1_lq10
0002C5C0 <AmiBlitz3.ab3@14851>    TST.b quickadd
0002C5C6 <AmiBlitz3.ab3@14855>    MOVE.l destpointer,a0
0002C5CC <AmiBlitz3.ab3@14856>    CLR.b quickadd
0002C5D2 <AmiBlitz3.ab3@14857>    CLR.l load_var_addr
0002C5D8 <AmiBlitz3.ab3@14858>    SUB.l imm_addr,a0
0002C5DC <AmiBlitz3.ab3@14859>    CMP.w #6,a0
0002C5E0 <AmiBlitz3.ab3@14860>    BEQ doplus2__sub1_li10
0002C5E4 <AmiBlitz3.ab3@14861>    CMP.w #4,a0
0002C5E8 <AmiBlitz3.ab3@14862>    BNE.s doplus2__sub1_li1
0002C5EE <AmiBlitz3.ab3@14863>    CLR.l imm_addr
0002C5F4 <AmiBlitz3.ab3@14864>    ADD.w #$6040-$200,-4(a4)
0002C5F6 <AmiBlitz3.ab3@14865> RTS
0002C5F8 <AmiBlitz3.ab3@14868>    MOVE.l a4,a0
0002C5FE <AmiBlitz3.ab3@14869>     SUB.l load_var_addr,a0
0002C604 <AmiBlitz3.ab3@14870>     CMP.l #$a,a0
0002C608 <AmiBlitz3.ab3@14871>     BNE doplus2__sub1_l10e
0002C60E <AmiBlitz3.ab3@14872>    CLR.l load_var_addr
0002C612 <AmiBlitz3.ab3@14873>    MOVE.w -$8(a4),d1
0002C618 <AmiBlitz3.ab3@14874>    MOVE.l -$4(a4),-$8(a4)
0002C61C <AmiBlitz3.ab3@14875>    MOVE.w d1,-$4(a4)
0002C622 <AmiBlitz3.ab3@14876>    SUB.w #$1b80,-$a(a4)
0002C628 <AmiBlitz3.ab3@14877>    SUBQ.l #2,destpointer
0002C62A <AmiBlitz3.ab3@14878> RTS
0002C630 <AmiBlitz3.ab3@14881>   CLR.b quickadd
0002C634 <AmiBlitz3.ab3@14882> BRA doplus2__sub1_l10
0002C63A <AmiBlitz3.ab3@14885>    CLR.l imm_addr
0002C640 <AmiBlitz3.ab3@14886>    ADD.w #$7080-$200,-6(a4)
0002C642 <AmiBlitz3.ab3@14887> RTS
0002C648 <AmiBlitz3.ab3@14890>    MOVE.l destpointer,a0
0002C64E <AmiBlitz3.ab3@14891>    SUB.l load_var_addr,a0
0002C652 <AmiBlitz3.ab3@14892>    CMP.w #4,a0
0002C656 <AmiBlitz3.ab3@14893>    BNE doplus2__sub1_l10
0002C65A <AmiBlitz3.ab3@14894>    CMP.b #3,d3
0002C65E <AmiBlitz3.ab3@14895>    BNE doplus2__sub1_lv1
0002C664 <AmiBlitz3.ab3@14896>    CLR.l load_var_addr
0002C66A <AmiBlitz3.ab3@14897>    ADD.w #$7080-$200,-4(a4)
0002C66C <AmiBlitz3.ab3@14898> RTS
0002C670 <AmiBlitz3.ab3@14901>    CMP.b #2,d3
0002C674 <AmiBlitz3.ab3@14902>    BNE doplus2__sub1_l10
0002C67A <AmiBlitz3.ab3@14903>    CLR.l load_var_addr
0002C680 <AmiBlitz3.ab3@14904>    ADD.w #$6040-$200,-4(a4)
0002C682 <AmiBlitz3.ab3@14905> RTS
0002C688 <AmiBlitz3.ab3@14908>   MOVE.w regnum,D3
0002C68A <AmiBlitz3.ab3@14909>   MOVE.w a1,d1
0002C68C <AmiBlitz3.ab3@14910>   OR.w D3,D1
0002C68E <AmiBlitz3.ab3@14911>   ADDQ.w #1,D1
0002C690 <AmiBlitz3.ab3@14912>   LSL.w #8,D3
0002C692 <AmiBlitz3.ab3@14913>   LSL.w #1,D3
0002C694 <AmiBlitz3.ab3@14914>   OR.w D3,D1
0002C698 <AmiBlitz3.ab3@14915> BRA.w writeword
0002C69A <AmiBlitz3.ab3@14919>   MOVEQ #0,d0
0002C6A0 <AmiBlitz3.ab3@14920>   MOVE.w regnum,d0
0002C6A2 <AmiBlitz3.ab3@14921>   ADDQ #1,d0
0002C6A4 <AmiBlitz3.ab3@14922>   ASL.w #8,d0
0002C6A6 <AmiBlitz3.ab3@14923>   ASL.w #2,d0
0002C6AC <AmiBlitz3.ab3@14924>   MOVE.l #$f2000022,d1                                     ;fpu add
0002C6AE <AmiBlitz3.ab3@14925>   OR.l d0,d1
0002C6B4 <AmiBlitz3.ab3@14926>   MOVE.w regnum,d0
0002C6B6 <AmiBlitz3.ab3@14927>   ASL.w #7,d0
0002C6B8 <AmiBlitz3.ab3@14928>   OR.l d0,d1
0002C6BC <AmiBlitz3.ab3@14929> BRA.w writelong
0002C6C2 <AmiBlitz3.ab3@14935>   TST.b iee
0002C6C6 <AmiBlitz3.ab3@14936>   BNE do_plus_float__fadd1
0002C6CA <AmiBlitz3.ab3@14937>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002C6D0 <AmiBlitz3.ab3@14940>    MOVE.w D1,libjsr+2
0002C6D4 <AmiBlitz3.ab3@14941>    BSR.w JL_0_AD40
0002C6D6 <AmiBlitz3.ab3@14942>   MOVE.l D4,D1
0002C6DA <AmiBlitz3.ab3@14943>    BSR.w JL_0_AD38
0002C6DE <AmiBlitz3.ab3@14944>   MOVE.w #$C900,D1
0002C6E2 <AmiBlitz3.ab3@14945>    BSR.w Atokejsr
0002C6E6 <AmiBlitz3.ab3@14946>    BSR.w JL_0_A352
0002C6EC <AmiBlitz3.ab3@14947>   MOVE.l libjsr,D1
0002C6F0 <AmiBlitz3.ab3@14948>    BSR.w writelong
0002C6F4 <AmiBlitz3.ab3@14949>    BSR.w JL_0_A36E
0002C6F6 <AmiBlitz3.ab3@14950>   MOVE.l D5,D1
0002C6FA <AmiBlitz3.ab3@14951> BRA.w JL_0_AD38
0002C700 <AmiBlitz3.ab3@14955>   MOVE.w regnum,D1
0002C702 <AmiBlitz3.ab3@14956>   LSL.w #8,D1
0002C704 <AmiBlitz3.ab3@14957>   LSL.w #1,D1
0002C706 <AmiBlitz3.ab3@14958>   MOVE.w D1,-(A7)
0002C70A <AmiBlitz3.ab3@14959>   CMP.w #3072,d1
0002C70E <AmiBlitz3.ab3@14960>   BEQ 'l1
0002C714 <AmiBlitz3.ab3@14961>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002C718 <AmiBlitz3.ab3@14962> BRA 'l2
0002C71C <AmiBlitz3.ab3@14965>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002C720 <AmiBlitz3.ab3@14968>    BSR.w writeword
0002C722 <AmiBlitz3.ab3@14969>   MOVE.w (A7)+,D1
0002C728 <AmiBlitz3.ab3@14970>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002C72C <AmiBlitz3.ab3@14971> BRA.w writeword
0002C730 <AmiBlitz3.ab3@14977>   MOVE.w #$9040,D1
0002C734 <AmiBlitz3.ab3@14978> BRA.w doplus2
0002C738 <AmiBlitz3.ab3@14982>   MOVE.w #$9040,D1
0002C73C <AmiBlitz3.ab3@14983> BRA.w doplus2
0002C740 <AmiBlitz3.ab3@14987>   MOVE.w #$9080,D1
0002C744 <AmiBlitz3.ab3@14988> BRA.w doplus2
0002C74A <AmiBlitz3.ab3@14992>    TST.b iee
0002C74E <AmiBlitz3.ab3@14993>     BNE do_minus_float__fs1
0002C752 <AmiBlitz3.ab3@14994>   MOVE.w #$FFB8,D1                                         ;floatsub
0002C756 <AmiBlitz3.ab3@14995> BRA.w doflib
0002C758 <AmiBlitz3.ab3@14998>   MOVEQ #0,d0
0002C75E <AmiBlitz3.ab3@14999>   MOVE.w regnum,d0
0002C760 <AmiBlitz3.ab3@15000>   ADDQ #1,d0
0002C762 <AmiBlitz3.ab3@15001>   ASL.w #8,d0
0002C764 <AmiBlitz3.ab3@15002>   ASL.w #2,d0
0002C76A <AmiBlitz3.ab3@15003>   MOVE.l #$f2000028,d1
0002C76C <AmiBlitz3.ab3@15004>   OR.l d0,d1
0002C772 <AmiBlitz3.ab3@15005>   MOVE.w regnum,d0
0002C774 <AmiBlitz3.ab3@15006>   ASL.w #7,d0
0002C776 <AmiBlitz3.ab3@15007>   OR.l d0,d1
0002C77A <AmiBlitz3.ab3@15008> BRA.w writelong
0002C77E <AmiBlitz3.ab3@15014>   MOVE.w #$C1C0,D1
0002C780 <AmiBlitz3.ab3@15015>   MOVEQ.l #$02,D2                                          ;now a word
0002C784 <AmiBlitz3.ab3@15016> BRA.w doplus2
0002C788 <AmiBlitz3.ab3@15020>   MOVE.w #$C1C0,D1
0002C78A <AmiBlitz3.ab3@15021>   MOVEQ.l #$03,D2                                          ;now a long.
0002C78E <AmiBlitz3.ab3@15022> BRA.w doplus2
0002C792 <AmiBlitz3.ab3@15026>   MOVE.w #$CA00,D1                                         ;quickmul
0002C796 <AmiBlitz3.ab3@15027> BRA.w domylib
0002C79C <AmiBlitz3.ab3@15031>   TST.b fast
0002C7A0 <AmiBlitz3.ab3@15032>   BNE.s 'l10
0002C7A4 <AmiBlitz3.ab3@15033>   MOVE.w #$CA01,D1                                         ;writelongmul
0002C7A8 <AmiBlitz3.ab3@15034> BRA.w domylib
0002C7AE <AmiBlitz3.ab3@15043>    MOVE.l destpointer,a0
0002C7B4 <AmiBlitz3.ab3@15044>    SUB.l imm_addr,a0
0002C7B8 <AmiBlitz3.ab3@15045>    CMP.w #6,a0
0002C7BC <AmiBlitz3.ab3@15046>    BNE 'li1
0002C7BE <AmiBlitz3.ab3@15047>    MOVEQ.l #2,d1
0002C7C0 <AmiBlitz3.ab3@15048>    MOVEQ #1,d3
0002C7C4 <AmiBlitz3.ab3@15051>   CMP.l -4(a4),d1
0002C7C8 <AmiBlitz3.ab3@15052>    BEQ 'oklsl
0002C7CA <AmiBlitz3.ab3@15053>     LSL.l #1,d1
0002C7D0 <AmiBlitz3.ab3@15054>     ADD.l #1,d3
0002C7D6 <AmiBlitz3.ab3@15055>     CMP.l #9,d3
0002C7DA <AmiBlitz3.ab3@15056>     BNE 'ag
0002C7DE <AmiBlitz3.ab3@15057>    MOVE.w -2(a4),d1
0002C7E2 <AmiBlitz3.ab3@15058>    BSR writeword
0002C7E8 <AmiBlitz3.ab3@15059>    MOVE.w -6(a4),-4(a4)
0002C7F0 <AmiBlitz3.ab3@15060>    MOVE.l #$4c3c0800,-8(a4)
0002C7F6 <AmiBlitz3.ab3@15061>    MOVE.w regnum,D3
0002C7FA <AmiBlitz3.ab3@15062>    MULS #$1000,D3
0002C7FE <AmiBlitz3.ab3@15063>    OR.w D3,-6(a4)
0002C804 <AmiBlitz3.ab3@15064>    CLR.l load_var_addr
0002C80A <AmiBlitz3.ab3@15065>    CLR.l imm_addr
0002C80E <AmiBlitz3.ab3@15066> BRA 'li3
0002C812 <AmiBlitz3.ab3@15069>    CMP.w #8,d3
0002C816 <AmiBlitz3.ab3@15070>    BEQ 'ok
0002C818 <AmiBlitz3.ab3@15071>    ASL.l #1,d3
0002C81A <AmiBlitz3.ab3@15072>    ASL.l #8,d3
0002C81E <AmiBlitz3.ab3@15073>    MOVE.w #$e188,d1
0002C820 <AmiBlitz3.ab3@15074>    OR.w d3,d1
0002C824 <AmiBlitz3.ab3@15075>    MOVE.w d1,-6(a4)
0002C828 <AmiBlitz3.ab3@15076> BRA 'okls
0002C82E <AmiBlitz3.ab3@15079>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002C834 <AmiBlitz3.ab3@15082>   MOVE.w regnum,d3
0002C838 <AmiBlitz3.ab3@15083>    OR.b d3,-5(a4)
0002C83E <AmiBlitz3.ab3@15084>    SUBQ.l #4,destpointer
0002C844 <AmiBlitz3.ab3@15085>    CLR.l load_var_addr
0002C84A <AmiBlitz3.ab3@15086>    CLR.l imm_addr
0002C84E <AmiBlitz3.ab3@15087> BRA 'li3
0002C854 <AmiBlitz3.ab3@15090>    MOVE.l destpointer,a0
0002C85A <AmiBlitz3.ab3@15091>    SUB.l load_var_addr,a0
0002C85E <AmiBlitz3.ab3@15092>    CMP.w #4,a0
0002C862 <AmiBlitz3.ab3@15093>    BNE 'li2
0002C866 <AmiBlitz3.ab3@15094>    MOVE.w -2(a4),d1
0002C86A <AmiBlitz3.ab3@15095>    BSR writeword
0002C870 <AmiBlitz3.ab3@15096>    MOVE.b #$4c,-6(a4)
0002C876 <AmiBlitz3.ab3@15097>    MOVE.w #$0800,-4(a4)
0002C87C <AmiBlitz3.ab3@15098>    MOVE.w regnum,D3
0002C880 <AmiBlitz3.ab3@15099>    MULS #$1000,d3
0002C884 <AmiBlitz3.ab3@15100>    OR.w D3,-4(a4)
0002C888 <AmiBlitz3.ab3@15101> BRA 'li3
0002C88E <AmiBlitz3.ab3@15104>    MOVE.l #$4c010800,d1
0002C894 <AmiBlitz3.ab3@15105>    MOVE.w regnum,D3
0002C896 <AmiBlitz3.ab3@15106>    EXT.l d3
0002C89A <AmiBlitz3.ab3@15107>    MULS #$1000,d3
0002C89C <AmiBlitz3.ab3@15108>    OR.w D3,d1
0002C8A0 <AmiBlitz3.ab3@15109>    MULS #$10,d3
0002C8A2 <AmiBlitz3.ab3@15110>    ADD.l d3,d1
0002C8A6 <AmiBlitz3.ab3@15111>    BSR writelong
0002C8A8 <AmiBlitz3.ab3@15116> RTS
0002C8AA <AmiBlitz3.ab3@15120>   MOVE.w D1,-(A7)
0002C8AE <AmiBlitz3.ab3@15121>    BSR.w JL_0_AD40
0002C8B0 <AmiBlitz3.ab3@15122>   MOVE.l D4,D1
0002C8B4 <AmiBlitz3.ab3@15123>    BSR.w JL_0_AD38
0002C8B8 <AmiBlitz3.ab3@15124>    BSR.w JL_0_A352
0002C8BA <AmiBlitz3.ab3@15125>   MOVEQ #0,d1
0002C8BC <AmiBlitz3.ab3@15126>   MOVE.w (A7)+,D1
0002C8C2 <AmiBlitz3.ab3@15127>   MOVE.l d1,lastinstruction
0002C8C6 <AmiBlitz3.ab3@15128>    BSR.w Atokejsr
0002C8CA <AmiBlitz3.ab3@15129>    BSR.w JL_0_A36E
0002C8CC <AmiBlitz3.ab3@15130>   MOVE.l D5,D1
0002C8D0 <AmiBlitz3.ab3@15131> BRA.w JL_0_AD38
0002C8D6 <AmiBlitz3.ab3@15135>    TST.b iee
0002C8DA <AmiBlitz3.ab3@15136>     BNE fm1
0002C8DE <AmiBlitz3.ab3@15137>  MOVE.w #$FFB2,D1                                          ;floatmul
0002C8E2 <AmiBlitz3.ab3@15138> BRA.w doflib
0002C8E4 <AmiBlitz3.ab3@15141>   MOVEQ #0,d0
0002C8EA <AmiBlitz3.ab3@15142>  MOVE.w regnum,d0
0002C8EC <AmiBlitz3.ab3@15143>  ADDQ #1,d0
0002C8EE <AmiBlitz3.ab3@15144>  ASL.w #8,d0
0002C8F0 <AmiBlitz3.ab3@15145>  ASL.w #2,d0
0002C8F6 <AmiBlitz3.ab3@15146>  MOVE.l #$f2000023,d1
0002C8F8 <AmiBlitz3.ab3@15147>  OR.l d0,d1
0002C8FE <AmiBlitz3.ab3@15148>  MOVE.w regnum,d0
0002C900 <AmiBlitz3.ab3@15149>  ASL.w #7,d0
0002C902 <AmiBlitz3.ab3@15150>  OR.l d0,d1
0002C906 <AmiBlitz3.ab3@15151> BRA.w writelong
0002C908 <AmiBlitz3.ab3@15155>   MOVE.w D2,-(A7)                                          ;dopow
0002C90A <AmiBlitz3.ab3@15156>   MOVE.w D2,D3
0002C90C <AmiBlitz3.ab3@15157>   MOVEQ.l #$05,D2
0002C910 <AmiBlitz3.ab3@15158>    BSR.w JL_0_9770
0002C916 <AmiBlitz3.ab3@15159>   ADDQ.w #1,regnum
0002C918 <AmiBlitz3.ab3@15160>   MOVE.w (A7)+,D3
0002C91A <AmiBlitz3.ab3@15161>   MOVEQ.l #$05,D2
0002C91E <AmiBlitz3.ab3@15162>    BSR.w writeconvertcode
0002C924 <AmiBlitz3.ab3@15163>   SUBQ.w #1,regnum
0002C928 <AmiBlitz3.ab3@15164>    BSR.w nocando
0002C92E <AmiBlitz3.ab3@15165>    TST.b fpu
0002C932 <AmiBlitz3.ab3@15166>    BEQ 'old
0002C934 <AmiBlitz3.ab3@15167>    MOVEQ #0,d1
0002C93A <AmiBlitz3.ab3@15168>    MOVE.w regnum,d1
0002C93C <AmiBlitz3.ab3@15169>   MOVE.l d1,d0
0002C93E <AmiBlitz3.ab3@15170>   ASL.w #7,d1
0002C940 <AmiBlitz3.ab3@15171>   ASL.w #8,d0
0002C942 <AmiBlitz3.ab3@15172>   ASL.w #2,d0
0002C944 <AmiBlitz3.ab3@15173>   OR.w d0,d1
0002C946 <AmiBlitz3.ab3@15174>   MOVE.l d1,-(a7)
0002C94C <AmiBlitz3.ab3@15176>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002C950 <AmiBlitz3.ab3@15177>    BSR writelong
0002C956 <AmiBlitz3.ab3@15178>    MOVE.w regnum,d0
0002C958 <AmiBlitz3.ab3@15179>  ADDQ #1,d0
0002C95A <AmiBlitz3.ab3@15180>  ASL.w #8,d0
0002C95C <AmiBlitz3.ab3@15181>  ASL.w #2,d0
0002C962 <AmiBlitz3.ab3@15182>  MOVE.l #$f2000023,d1
0002C964 <AmiBlitz3.ab3@15183>  OR.l d0,d1
0002C96A <AmiBlitz3.ab3@15184>  MOVE.w regnum,d0
0002C96C <AmiBlitz3.ab3@15185>  ASL.w #7,d0
0002C96E <AmiBlitz3.ab3@15186>  OR.l d0,d1
0002C974 <AmiBlitz3.ab3@15187>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002C978 <AmiBlitz3.ab3@15188>    BSR writelong
0002C97A <AmiBlitz3.ab3@15189>    MOVE.l (a7)+,d1
0002C980 <AmiBlitz3.ab3@15191>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002C984 <AmiBlitz3.ab3@15192>    BSR writelong
0002C986 <AmiBlitz3.ab3@15193> RTS
0002C98A <AmiBlitz3.ab3@15196>   MOVE.w #$6001,D1
0002C98E <AmiBlitz3.ab3@15197> BRA.w domylib
0002C992 <AmiBlitz3.ab3@15203>   MOVEA.l forthsp(PC),A0
0002C996 <AmiBlitz3.ab3@15204>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002C998 <AmiBlitz3.ab3@15205> RTS
0002C99C <AmiBlitz3.ab3@15211>   MOVE.w #$D400,D1
0002C9A0 <AmiBlitz3.ab3@15212> BRA.w domylib
0002C9A4 <AmiBlitz3.ab3@15216>   MOVE.w #$D401,D1
0002C9A8 <AmiBlitz3.ab3@15217> BRA.w domylib
0002C9AC <AmiBlitz3.ab3@15221>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002C9B0 <AmiBlitz3.ab3@15222>   MOVE.w #$D402,D1
0002C9B4 <AmiBlitz3.ab3@15223> BRA.w domylib
0002C9B8 <AmiBlitz3.ab3@15227>   MOVE.w #$D403,D1
0002C9BA <AmiBlitz3.ab3@15228>   MOVEQ.l #$02,D2                                          ;now a word.
0002C9BE <AmiBlitz3.ab3@15229> BRA.w domylib
0002C9C2 <AmiBlitz3.ab3@15233>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002C9C8 <AmiBlitz3.ab3@15234>   TST.b fpu
0002C9CC <AmiBlitz3.ab3@15235>   BEQ 'old
0002C9CE <AmiBlitz3.ab3@15236>   MOVEQ #0,d1
0002C9D4 <AmiBlitz3.ab3@15237>   MOVE.w regnum,d1                                         ;fpu mod
0002C9D6 <AmiBlitz3.ab3@15238>   MOVE.l d1,d0
0002C9D8 <AmiBlitz3.ab3@15239>   ADDQ.l #1,d1
0002C9DA <AmiBlitz3.ab3@15240>   ASL.l #7,d0
0002C9DC <AmiBlitz3.ab3@15241>   ASL.l #8,d1
0002C9DE <AmiBlitz3.ab3@15242>   ASL.l #2,d1
0002C9E0 <AmiBlitz3.ab3@15243>   OR.l d0,d1
0002C9E2 <AmiBlitz3.ab3@15244>   MOVE.l d0,-(a7)
0002C9E8 <AmiBlitz3.ab3@15245>   OR.l #$f2000021,d1
0002C9EC <AmiBlitz3.ab3@15246>   BSR writelong
0002C9EE <AmiBlitz3.ab3@15247>   MOVE.l (a7)+,d0
0002C9F0 <AmiBlitz3.ab3@15248>  RTS
0002C9F4 <AmiBlitz3.ab3@15251>   MOVE.w #$D404,D1
0002C9F6 <AmiBlitz3.ab3@15252>   MOVEQ.l #$03,D2                                          ;now a long
0002C9FA <AmiBlitz3.ab3@15253> BRA.w domylib
0002C9FE <AmiBlitz3.ab3@15261>   MOVE.w #$48C0,D1
0002CA04 <AmiBlitz3.ab3@15262>   OR.w regnum,D1
0002CA08 <AmiBlitz3.ab3@15263>    BSR.w writeword
0002CA0A <AmiBlitz3.ab3@15264>   ADDQ.w #1,D1
0002CA0E <AmiBlitz3.ab3@15265>    BSR.w writeword
0002CA12 <AmiBlitz3.ab3@15268>    MOVE.w #$48C0,D1
0002CA18 <AmiBlitz3.ab3@15269>   OR.w regnum,D1
0002CA1C <AmiBlitz3.ab3@15270>    BSR.w writeword
0002CA20 <AmiBlitz3.ab3@15271>   MOVE.w #$81C0,D1
0002CA24 <AmiBlitz3.ab3@15272> BRA.w doplus2
0002CA2A <AmiBlitz3.ab3@15276>   TST.b fast
0002CA2E <AmiBlitz3.ab3@15277>   BNE.s 'l10
0002CA32 <AmiBlitz3.ab3@15278>   MOVE.w #$CB01,D1
0002CA36 <AmiBlitz3.ab3@15279> BRA.w domylib
0002CA3A <AmiBlitz3.ab3@15285>   BSR.w JL_0_AD40
0002CA3C <AmiBlitz3.ab3@15286>   MOVE.l D4,D1
0002CA40 <AmiBlitz3.ab3@15287>    BSR.w JL_0_AD38
0002CA44 <AmiBlitz3.ab3@15288>    BSR.w JL_0_A352
0002CA4A <AmiBlitz3.ab3@15302>    MOVE.l #$4c410800,d1
0002CA4E <AmiBlitz3.ab3@15303>    BSR writelong
0002CA52 <AmiBlitz3.ab3@15306>   MOVE.w #$4e71,d1
0002CA56 <AmiBlitz3.ab3@15308>    BSR.w JL_0_A36E
0002CA58 <AmiBlitz3.ab3@15309>   MOVE.l D5,D1
0002CA5C <AmiBlitz3.ab3@15310> BRA.w JL_0_AD38
0002CA60 <AmiBlitz3.ab3@15313>     CMP.w #8,d3
0002CA64 <AmiBlitz3.ab3@15314>     BEQ 'ok
0002CA66 <AmiBlitz3.ab3@15315>     ASL.l #1,d3
0002CA68 <AmiBlitz3.ab3@15316>     ASL.l #8,d3
0002CA6C <AmiBlitz3.ab3@15317>     MOVE.w #$e080,d1
0002CA6E <AmiBlitz3.ab3@15318>     OR.w d3,d1
0002CA72 <AmiBlitz3.ab3@15319> BRA 'oklsr2
0002CA76 <AmiBlitz3.ab3@15322>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002CA7C <AmiBlitz3.ab3@15325>      SUBQ.l #6,destpointer
0002CA80 <AmiBlitz3.ab3@15326>      BSR writeword
0002CA82 <AmiBlitz3.ab3@15327>      MOVE.l (a7)+,d3
0002CA84 <AmiBlitz3.ab3@15328>      MOVEQ #0,d1
0002CA8A <AmiBlitz3.ab3@15329>      CLR.l load_var_addr
0002CA90 <AmiBlitz3.ab3@15330>      CLR.l imm_addr
0002CA94 <AmiBlitz3.ab3@15331> BRA JL_0_AD38
0002CA98 <AmiBlitz3.ab3@15335>   MOVE.w #$CB00,D1                                         ;quickdiv
0002CA9C <AmiBlitz3.ab3@15336> BRA.w domylib
0002CAA2 <AmiBlitz3.ab3@15340>    TST.b iee
0002CAA6 <AmiBlitz3.ab3@15341>    BNE fdiv1
0002CAAA <AmiBlitz3.ab3@15342>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002CAAE <AmiBlitz3.ab3@15343> BRA.w doflib
0002CAB0 <AmiBlitz3.ab3@15347>   MOVEQ #0,d0
0002CAB6 <AmiBlitz3.ab3@15348>   MOVE.w regnum,d0
0002CAB8 <AmiBlitz3.ab3@15349>   ADDQ #1,d0
0002CABA <AmiBlitz3.ab3@15350>   ASL.w #8,d0
0002CABC <AmiBlitz3.ab3@15351>   ASL.w #2,d0
0002CAC2 <AmiBlitz3.ab3@15352>   MOVE.l #$f2000020,d1                                     ;fpu div
0002CAC4 <AmiBlitz3.ab3@15353>   OR.l d0,d1
0002CACA <AmiBlitz3.ab3@15354>   MOVE.w regnum,d0
0002CACC <AmiBlitz3.ab3@15355>   ASL.w #7,d0
0002CACE <AmiBlitz3.ab3@15356>   OR.l d0,d1
0002CAD2 <AmiBlitz3.ab3@15357> BRA.w writelong
0002CAD6 <AmiBlitz3.ab3@15361>   MOVE.w #$C000,D1
0002CADA <AmiBlitz3.ab3@15362> BRA.w doplus2
0002CADE <AmiBlitz3.ab3@15366>   MOVE.w #$C040,D1
0002CAE2 <AmiBlitz3.ab3@15367> BRA.w doplus2
0002CAE6 <AmiBlitz3.ab3@15371>   MOVE.w #$C080,D1
0002CAEA <AmiBlitz3.ab3@15372> BRA.w doplus2
0002CAEE <AmiBlitz3.ab3@15376>   MOVE.w #$8000,D1
0002CAF2 <AmiBlitz3.ab3@15377> BRA.w doplus2
0002CAF6 <AmiBlitz3.ab3@15381>   MOVE.w #$8040,D1
0002CAFA <AmiBlitz3.ab3@15382> BRA.w doplus2
0002CAFE <AmiBlitz3.ab3@15386>   MOVE.w #$8080,D1
0002CB02 <AmiBlitz3.ab3@15387> BRA.w doplus2
0002CB06 <AmiBlitz3.ab3@15391>   MOVE.w #$B100,D1
0002CB0C <AmiBlitz3.ab3@15394>    MOVE.w regnum,D3
0002CB0E <AmiBlitz3.ab3@15395>   OR.w D3,D1
0002CB10 <AmiBlitz3.ab3@15396>   ADDQ.w #1,D3
0002CB12 <AmiBlitz3.ab3@15397>   LSL.w #8,D3
0002CB14 <AmiBlitz3.ab3@15398>   LSL.w #1,D3
0002CB16 <AmiBlitz3.ab3@15399>   OR.w D3,D1
0002CB1A <AmiBlitz3.ab3@15400> BRA.w writeword
0002CB1E <AmiBlitz3.ab3@15404>   MOVE.w #$B140,D1
0002CB22 <AmiBlitz3.ab3@15405> BRA.w JL_0_A25C
0002CB26 <AmiBlitz3.ab3@15409>   MOVE.w #$B180,D1
0002CB2A <AmiBlitz3.ab3@15410> BRA.w JL_0_A25C
0002CB2E <AmiBlitz3.ab3@15414>   MOVE.w #$E1A8,D1
0002CB32 <AmiBlitz3.ab3@15415> BRA.w JL_0_A298
0002CB36 <AmiBlitz3.ab3@15419>   MOVE.w #$E0A8,D1
0002CB3A <AmiBlitz3.ab3@15420> BRA.w JL_0_A298
0002CB3E <AmiBlitz3.ab3@15424>   MOVE.w #$E0A0,D1
0002CB42 <AmiBlitz3.ab3@15425> BRA.w JL_0_A298
0002CB44 <AmiBlitz3.ab3@15429>   MOVE.w D1,-(A7)
0002CB4A <AmiBlitz3.ab3@15430>   ADDQ.w #1,regnum
0002CB4C <AmiBlitz3.ab3@15431>   MOVE.w D2,-(A7)
0002CB4E <AmiBlitz3.ab3@15432>   MOVE.w D2,D3
0002CB50 <AmiBlitz3.ab3@15433>   MOVEQ.l #$02,D2
0002CB54 <AmiBlitz3.ab3@15438>    BSR.w writeconvertcode
0002CB56 <AmiBlitz3.ab3@15440>   MOVE.w (A7)+,D2
0002CB5C <AmiBlitz3.ab3@15441>   SUBQ.w #1,regnum
0002CB60 <AmiBlitz3.ab3@15442>   CMP.w #$4,D2
0002CB64 <AmiBlitz3.ab3@15443>    BEQ.w JL_0_A2C2
0002CB66 <AmiBlitz3.ab3@15444>   MOVE.w D2,D3
0002CB68 <AmiBlitz3.ab3@15445>   MOVEQ.l #$03,D2
0002CB6C <AmiBlitz3.ab3@15446>    BSR.w JL_0_9770
0002CB6E <AmiBlitz3.ab3@15449>    MOVE.w (A7)+,D1
0002CB74 <AmiBlitz3.ab3@15450>   MOVE.w regnum,D3
0002CB76 <AmiBlitz3.ab3@15451>   OR.w D3,D1
0002CB78 <AmiBlitz3.ab3@15452>   ADDQ.w #1,D3
0002CB7A <AmiBlitz3.ab3@15453>   LSL.w #8,D3
0002CB7C <AmiBlitz3.ab3@15454>   LSL.w #1,D3
0002CB7E <AmiBlitz3.ab3@15455>   OR.w D3,D1
0002CB82 <AmiBlitz3.ab3@15456> BRA.w writeword
0002CB86 <AmiBlitz3.ab3@15460>   MOVE.w #$0100,D1
0002CB8A <AmiBlitz3.ab3@15461>    BSR.w JL_0_A31C
0002CB90 <AmiBlitz3.ab3@15462>   MOVE.w regnum,D1
0002CB94 <AmiBlitz3.ab3@15463>   ORI.w #$56C0,D1
0002CB98 <AmiBlitz3.ab3@15464>    BSR.w writeword
0002CB9E <AmiBlitz3.ab3@15465>   MOVE.w regnum,D1
0002CBA2 <AmiBlitz3.ab3@15466>   ORI.w #$4880,D1
0002CBA6 <AmiBlitz3.ab3@15467>    BSR.w writeword
0002CBA8 <AmiBlitz3.ab3@15468>   MOVEQ.l #$02,D2
0002CBAA <AmiBlitz3.ab3@15469> RTS
0002CBAE <AmiBlitz3.ab3@15473>   MOVE.w #$01C0,D1
0002CBB2 <AmiBlitz3.ab3@15476>    BSR.w JL_0_A31C
0002CBB4 <AmiBlitz3.ab3@15477>   MOVEQ.l #$03,D2
0002CBB6 <AmiBlitz3.ab3@15478> RTS
0002CBBA <AmiBlitz3.ab3@15482>   MOVE.w #$0180,D1
0002CBBE <AmiBlitz3.ab3@15483> BRA.w JL_0_A304
0002CBC2 <AmiBlitz3.ab3@15487>   MOVE.w #$0140,D1
0002CBC6 <AmiBlitz3.ab3@15488> BRA.w JL_0_A304
0002CBC8 <AmiBlitz3.ab3@15492>   MOVE.w D1,-(A7)
0002CBCA <AmiBlitz3.ab3@15493>   MOVE.w D2,-(A7)
0002CBCC <AmiBlitz3.ab3@15494>   MOVE.w D2,D3
0002CBCE <AmiBlitz3.ab3@15495>   MOVEQ.l #$03,D2
0002CBD2 <AmiBlitz3.ab3@15496>    BSR.w JL_0_9770
0002CBD4 <AmiBlitz3.ab3@15497>   MOVE.w (A7)+,D3
0002CBD6 <AmiBlitz3.ab3@15498>   MOVEQ.l #$01,D2
0002CBDC <AmiBlitz3.ab3@15499>   ADDQ.w #1,regnum
0002CBE0 <AmiBlitz3.ab3@15500>    BSR.w writeconvertcode
0002CBE6 <AmiBlitz3.ab3@15501>   SUBQ.w #1,regnum
0002CBEC <AmiBlitz3.ab3@15502>   MOVE.w regnum,D1
0002CBEE <AmiBlitz3.ab3@15503>   MOVE.w D1,D2
0002CBF0 <AmiBlitz3.ab3@15504>   ADDQ.w #1,D2
0002CBF2 <AmiBlitz3.ab3@15505>   LSL.w #8,D2
0002CBF4 <AmiBlitz3.ab3@15506>   LSL.w #1,D2
0002CBF6 <AmiBlitz3.ab3@15507>   OR.w (A7)+,D1
0002CBF8 <AmiBlitz3.ab3@15508>   OR.w D2,D1
0002CBFC <AmiBlitz3.ab3@15509> BRA.w writeword
0002CC02 <AmiBlitz3.ab3@15513>   MOVE.w regnum,D1
0002CC06 <AmiBlitz3.ab3@15514>    BEQ.w JL_0_A36C
0002CC0A <AmiBlitz3.ab3@15515>   ORI.w #$2000,D1
0002CC0E <AmiBlitz3.ab3@15516>    BSR.w writeword
0002CC12 <AmiBlitz3.ab3@15517>   ADDI.w #$201,D1
0002CC16 <AmiBlitz3.ab3@15518>    BSR.w writeword
0002CC18 <AmiBlitz3.ab3@15521> RTS
0002CC1E <AmiBlitz3.ab3@15525>   MOVE.w regnum,D1
0002CC22 <AmiBlitz3.ab3@15526>    BEQ.w JL_0_A384
0002CC24 <AmiBlitz3.ab3@15527>   LSL.w #8,D1
0002CC26 <AmiBlitz3.ab3@15528>   LSL.w #1,D1
0002CC2A <AmiBlitz3.ab3@15529>   ORI.w #$2000,D1
0002CC2E <AmiBlitz3.ab3@15530>    BSR.w writeword
0002CC30 <AmiBlitz3.ab3@15533> RTS
0002CC36 <AmiBlitz3.ab3@15537>    CLR.b isconstantvalue
0002CC3C <AmiBlitz3.ab3@15538>    CLR.l lastconstantvalue
0002CC44 <AmiBlitz3.ab3@15539>    CMPI.w #$7,regnum
0002CC48 <AmiBlitz3.ab3@15540>    BCS.w JL_0_A6B4
0002CC4E <AmiBlitz3.ab3@15541>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002CC52 <AmiBlitz3.ab3@15542>   BSR writelong
0002CC56 <AmiBlitz3.ab3@15543>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002CC5A <AmiBlitz3.ab3@15545>   CMP.w #$3,D2
0002CC5E <AmiBlitz3.ab3@15546>    BCS.w JL_0_A3A2
0002CC62 <AmiBlitz3.ab3@15547>   MOVE.w #$2F06,D1
0002CC66 <AmiBlitz3.ab3@15550>   BSR.w writeword
0002CC68 <AmiBlitz3.ab3@15551>   MOVE.w D1,-(A7)
0002CC6E <AmiBlitz3.ab3@15552>   SUBQ.w #1,regnum
0002CC72 <AmiBlitz3.ab3@15553>    BSR.w JL_0_A6B4
0002CC78 <AmiBlitz3.ab3@15554>   ADDQ.w #1,regnum
0002CC7E <AmiBlitz3.ab3@15555>   MOVE.l #$f2001b80,d1
0002CC82 <AmiBlitz3.ab3@15556>   BSR writelong
0002CC86 <AmiBlitz3.ab3@15557>   MOVE.w #$3E06,D1
0002CC8A <AmiBlitz3.ab3@15558>   CMP.w #$3,D2
0002CC8E <AmiBlitz3.ab3@15559>    BCS.w JL_0_A3C8
0002CC92 <AmiBlitz3.ab3@15560>   MOVE.w #$2E06,D1
0002CC96 <AmiBlitz3.ab3@15563>   BSR.w writeword
0002CC98 <AmiBlitz3.ab3@15564>   MOVE.w (A7)+,D1
0002CC9C <AmiBlitz3.ab3@15565>   ANDI.w #$F000,D1
0002CCA0 <AmiBlitz3.ab3@15566>   ORI.w #$C1F,D1
0002CCA6 <AmiBlitz3.ab3@15567>   JSR writeword
0002CCAC <AmiBlitz3.ab3@15568>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002CCB0 <AmiBlitz3.ab3@15569> BRA writelong
0002CCB4 <AmiBlitz3.ab3@15573>   BSR.w JL_0_A6B4
0002CCB8 <AmiBlitz3.ab3@15574>   MOVE.w #$4440,D1
0002CCBC <AmiBlitz3.ab3@15575>   CMP.w #$3,D2
0002CCC0 <AmiBlitz3.ab3@15576>    BCS.w JL_0_A406
0002CCC4 <AmiBlitz3.ab3@15577>   MOVE.w #$4480,D1
0002CCC8 <AmiBlitz3.ab3@15578>   CMP.w #$5,D2
0002CCCC <AmiBlitz3.ab3@15579>    BCS.w JL_0_A406
0002CCD0 <AmiBlitz3.ab3@15580>   CMP.w #$6,D2
0002CCD4 <AmiBlitz3.ab3@15581>    BCC.w illoperr
0002CCD8 <AmiBlitz3.ab3@15582>   MOVE.w #$FFC4,D1
0002CCDC <AmiBlitz3.ab3@15583> BRA.w JL_0_9604
0002CCE2 <AmiBlitz3.ab3@15586>   OR.w regnum,D1                                           ;negate
0002CCE8 <AmiBlitz3.ab3@15587>   CLR.l imm_addr
0002CCEC <AmiBlitz3.ab3@15588> BRA.w writeword
0002CCF0 <AmiBlitz3.ab3@15592>    BSR.w eval4
0002CCF4 <AmiBlitz3.ab3@15593>   CMP.w #")",D0
0002CCF8 <AmiBlitz3.ab3@15594>    BEQ.w JL_0_A424
0002CCFC <AmiBlitz3.ab3@15595>   CMP.w #"}",D0
0002CD00 <AmiBlitz3.ab3@15596>    BNE.w brackets_                                         ;syntax error brackets
0002CD04 <AmiBlitz3.ab3@15599> BRA.w get1bytemain
0002CD08 <AmiBlitz3.ab3@15603>    BSR.w eval4
0002CD0C <AmiBlitz3.ab3@15604>   CMP.w #$5,D2
0002CD10 <AmiBlitz3.ab3@15605>    BCC.w illoperr
0002CD16 <AmiBlitz3.ab3@15606>   MOVE.w regnum,D1
0002CD1A <AmiBlitz3.ab3@15607>   ORI.w #$4640,D1
0002CD1E <AmiBlitz3.ab3@15608>   CMP.w #$3,D2
0002CD22 <AmiBlitz3.ab3@15609>    BCS.w writeword
0002CD26 <AmiBlitz3.ab3@15610>   EORI.w #$C0,D1
0002CD2A <AmiBlitz3.ab3@15611> BRA.w writeword
0002CD2C <AmiBlitz3.ab3@15615>   MOVEQ.l #$05,D2                                          ;fpu pi
0002CD32 <AmiBlitz3.ab3@15616>    TST.b fpu
0002CD36 <AmiBlitz3.ab3@15617>   BEQ 'old
0002CD3C <AmiBlitz3.ab3@15618> JMP fpupi
0002CD42 <AmiBlitz3.ab3@15621>   MOVE.w regnum,D1
0002CD44 <AmiBlitz3.ab3@15622>   LSL.w #8,D1
0002CD46 <AmiBlitz3.ab3@15623>   LSL.w #1,D1
0002CD4A <AmiBlitz3.ab3@15624>   ORI.w #$203C,D1
0002CD4E <AmiBlitz3.ab3@15625>    BSR.w writeword
0002CD54 <AmiBlitz3.ab3@15626>   MOVE.l #$C90FDA42,D1
0002CD58 <AmiBlitz3.ab3@15627>    BSR.w writelong
0002CD5C <AmiBlitz3.ab3@15628> BRA.w get1bytemain
0002CE58 <AmiBlitz3.ab3@15636> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002CF54 <AmiBlitz3.ab3@15637>              Ds.l 63
0002CF9C <AmiBlitz3.ab3@15638>              Ds.l 18
0002CFA0 <AmiBlitz3.ab3@15639> forthsp:     Dc.l forthstack
0002CFCC <AmiBlitz3.ab3@15644>    !fget
0002CFD0 <AmiBlitz3.ab3@15645>    CMP.b #$7e,d0
0002CFD4 <AmiBlitz3.ab3@15646>    BNE 'noc
0002CFD6 <AmiBlitz3.ab3@15647>    SUBQ.l #1,a5
0002CFDA <AmiBlitz3.ab3@15648>    BSR get1bytemain
0002CFDE <AmiBlitz3.ab3@15651>    CMP.b #"#",d0
0002CFE2 <AmiBlitz3.ab3@15652>    BNE 'ld1
0002CFE6 <AmiBlitz3.ab3@15653>    CMP.b #$22,(a5)
0002CFEA <AmiBlitz3.ab3@15654>    BNE 'ld1
0002CFF0 <AmiBlitz3.ab3@15655>    JSR addimmi
0002CFF4 <AmiBlitz3.ab3@15658>    CMP.b #$22,d0
0002CFF8 <AmiBlitz3.ab3@15659>    BNE 'l11
0002CFFE <AmiBlitz3.ab3@15669>    NOT.w instringon
0002D000 <AmiBlitz3.ab3@15672>    TST.b d0
0002D004 <AmiBlitz3.ab3@15673>    BPL 'l10
0002D006 <AmiBlitz3.ab3@15674>    LSL.w #8,d0
0002D008 <AmiBlitz3.ab3@15675>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002D00E <AmiBlitz3.ab3@15676>    MOVE.l d0,lasttoken
0002D014 <AmiBlitz3.ab3@15677>    MOVE.w d0,lastchar
0002D01A <AmiBlitz3.ab3@15678>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D01E <AmiBlitz3.ab3@15680>   CMP.w #"(",D0
0002D022 <AmiBlitz3.ab3@15681>    BEQ.w checkcast2
0002D026 <AmiBlitz3.ab3@15682> nocast CMP.w #"{",D0
0002D02A <AmiBlitz3.ab3@15683>    BEQ.w JL_0_A410
0002D02E <AmiBlitz3.ab3@15684>   CMP.w #$2D,D0
0002D032 <AmiBlitz3.ab3@15685>    BEQ.w JL_0_A3DA
0002D036 <AmiBlitz3.ab3@15686>   CMP.w #-$7F77,D0
0002D03A <AmiBlitz3.ab3@15687>    BEQ.w JL_0_A428
0002D03E <AmiBlitz3.ab3@15688>   MOVEA.l forthsp(PC),A1
0002D044 <AmiBlitz3.ab3@15689>   CMPA.l #forthsp,A1
0002D048 <AmiBlitz3.ab3@15690>    BCC.w conmemerr
0002D04E <AmiBlitz3.ab3@15691>   MOVE.l destpointer,(A1)+
0002D054 <AmiBlitz3.ab3@15692>   MOVE.l hunkoffsetbase,(A1)+
0002D05A <AmiBlitz3.ab3@15693>   MOVE.l lasta6,(A1)+
0002D060 <AmiBlitz3.ab3@15694>   MOVE.w lasta6,(A1)+
0002D062 <AmiBlitz3.ab3@15695>   CLR.w (A1)+
0002D064 <AmiBlitz3.ab3@15696>   CLR.w (A1)+
0002D06A <AmiBlitz3.ab3@15697>   MOVE.l A1,forthsp
0002D07C <AmiBlitz3.ab3@15699>    !compare2
0002D080 <AmiBlitz3.ab3@15700>    BEQ.w JL_0_B224
0002D084 <AmiBlitz3.ab3@15701>   CMP.w #".",D0
0002D088 <AmiBlitz3.ab3@15702>    BEQ.w JL_0_B21E
0002D08C <AmiBlitz3.ab3@15703>   CMP.w #"#",D0
0002D090 <AmiBlitz3.ab3@15704>    BEQ.w get_constant
0002D094 <AmiBlitz3.ab3@15705>   CMP.w #"$",D0
0002D098 <AmiBlitz3.ab3@15706>    BEQ.w get_hexconstant
0002D09C <AmiBlitz3.ab3@15707>   CMP.w #"%",D0
0002D0A0 <AmiBlitz3.ab3@15708>    BEQ.w JL_0_A8C0
0002D0A4 <AmiBlitz3.ab3@15709>   CMP.w #-$7FD1,D0
0002D0A8 <AmiBlitz3.ab3@15710>    BEQ.w _SizeOf
0002D0AC <AmiBlitz3.ab3@15711>   CMP.w #-$7F46,D0
0002D0B0 <AmiBlitz3.ab3@15712>    BEQ.w JL_0_A44E
0002D0B4 <AmiBlitz3.ab3@15713>   CMP.w #-$7F3B,D0
0002D0B8 <AmiBlitz3.ab3@15714>    BEQ.w JL_0_A83C
0002D0BC <AmiBlitz3.ab3@15715>   CMP.w #-$7F3A,D0
0002D0C0 <AmiBlitz3.ab3@15716>    BEQ.w JL_0_A846
0002D0C6 <AmiBlitz3.ab3@15717>   MOVE.w constmode,D1
0002D0CA <AmiBlitz3.ab3@15718>    BEQ.w JL_0_A776
0002D0EC <AmiBlitz3.ab3@15719>    !compare1                                               ;bsr.w tstalpha
0002D0F0 <AmiBlitz3.ab3@15720>    BEQ.w JL_0_AF22
0002D0F4 <AmiBlitz3.ab3@15721>   CMP.w #$5F,D0
0002D0F8 <AmiBlitz3.ab3@15722>    BEQ.w JL_0_AF22
0002D0FC <AmiBlitz3.ab3@15723>   CMP.w #$22,D0
0002D100 <AmiBlitz3.ab3@15724>    BEQ.w JL_0_AF00
0002D104 <AmiBlitz3.ab3@15725> BRA.w syntaxerr
0002D10A <AmiBlitz3.ab3@15727> checkcast2 JMP checkcast
0002D110 <AmiBlitz3.ab3@15730>   MOVE.w cfetchmode,D1
0002D114 <AmiBlitz3.ab3@15731>   BEQ.w JL_0_A784
0002D118 <AmiBlitz3.ab3@15732> BRA.w badconerr
0002D11E <AmiBlitz3.ab3@15735> JMP syntaxerropt4
0002D120 <AmiBlitz3.ab3@15739>   NOT.w -(A1)
0002D142 <AmiBlitz3.ab3@15740>   !compare1                                                ;bsr.w tstalpha
0002D146 <AmiBlitz3.ab3@15741>    BEQ.w JL_0_AF4C
0002D14A <AmiBlitz3.ab3@15742>   CMP.w #$2A,D0
0002D14E <AmiBlitz3.ab3@15743>    BEQ.w JL_0_AF4C
0002D152 <AmiBlitz3.ab3@15744>   CMP.w #$5C,D0
0002D156 <AmiBlitz3.ab3@15745>    BEQ.w JL_0_AF4C
0002D15A <AmiBlitz3.ab3@15746>   CMP.w #$22,D0
0002D15E <AmiBlitz3.ab3@15747>    BEQ.w JL_0_ADC0
0002D162 <AmiBlitz3.ab3@15748>   BTST #$F,D0
0002D166 <AmiBlitz3.ab3@15749>    BNE.w JL_0_AAF2
0002D16A <AmiBlitz3.ab3@15750>   CMP.w #"&",D0
0002D16E <AmiBlitz3.ab3@15751>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D172 <AmiBlitz3.ab3@15752>   CMP.w #"?",D0
0002D176 <AmiBlitz3.ab3@15753>    BEQ.w JL_0_AED4
0002D17A <AmiBlitz3.ab3@15756>   CMP.b #"@",d0
0002D17E <AmiBlitz3.ab3@15757>    BNE syntaxerr
0002D184 <AmiBlitz3.ab3@15758>   TST.b newsyntax
0002D188 <AmiBlitz3.ab3@15759>    BEQ JUMP_syntaxerropt4
0002D18E <AmiBlitz3.ab3@15760>   MOVE.w regnum,D1
0002D190 <AmiBlitz3.ab3@15761>   LSL.w #8,D1
0002D192 <AmiBlitz3.ab3@15762>   LSL.w #1,D1
0002D196 <AmiBlitz3.ab3@15763>   ORI.w #$203C,D1
0002D19A <AmiBlitz3.ab3@15764>   BSR.w writeword
0002D19E <AmiBlitz3.ab3@15765>   CMP.b #$22,(a5)
0002D1A2 <AmiBlitz3.ab3@15766>    BNE syntaxerr
0002D1A4 <AmiBlitz3.ab3@15767>   ADDQ #1,a5
0002D1A6 <AmiBlitz3.ab3@15768>   MOVEQ #0,d0
0002D1AA <AmiBlitz3.ab3@15769>   CMP.b #1,d2
0002D1AE <AmiBlitz3.ab3@15770>    BEQ 'l3b
0002D1B2 <AmiBlitz3.ab3@15771>   CMP.b #2,d2
0002D1B6 <AmiBlitz3.ab3@15772>    BEQ 'l2b
0002D1BA <AmiBlitz3.ab3@15773>   CMP.b #4,d2
0002D1BE <AmiBlitz3.ab3@15774>    BEQ error_convert_types
0002D1C0 <AmiBlitz3.ab3@15775>   MOVE.b (a5)+,d0
0002D1C4 <AmiBlitz3.ab3@15776>   BEQ syntaxerr
0002D1C8 <AmiBlitz3.ab3@15777>   CMP.b #$22,d0
0002D1CC <AmiBlitz3.ab3@15778>   BNE 'l1
0002D1D0 <AmiBlitz3.ab3@15779>     MOVE.b #0,d0
0002D1D4 <AmiBlitz3.ab3@15780> BRA 'do
0002D1D6 <AmiBlitz3.ab3@15783>   ASL.l #8,d0
0002D1D8 <AmiBlitz3.ab3@15784>   MOVE.b (a5)+,d0
0002D1DC <AmiBlitz3.ab3@15785>   BEQ syntaxerr
0002D1E0 <AmiBlitz3.ab3@15786>   CMP.b #$22,d0
0002D1E4 <AmiBlitz3.ab3@15787>   BNE 'l2
0002D1E8 <AmiBlitz3.ab3@15788>     MOVE.b #0,d0
0002D1EA <AmiBlitz3.ab3@15789>     ASR.l #8,d0
0002D1EE <AmiBlitz3.ab3@15790> BRA 'do
0002D1F0 <AmiBlitz3.ab3@15793>   ASL.l #8,d0
0002D1F2 <AmiBlitz3.ab3@15796>   MOVE.b (a5)+,d0
0002D1F6 <AmiBlitz3.ab3@15797>    BEQ syntaxerr
0002D1FA <AmiBlitz3.ab3@15798>    CMP.b #$22,d0
0002D1FE <AmiBlitz3.ab3@15799>    BNE 'l3
0002D202 <AmiBlitz3.ab3@15800>    MOVE.b #0,d0
0002D204 <AmiBlitz3.ab3@15801>    ASR.l #8,d0
0002D208 <AmiBlitz3.ab3@15802> BRA 'do
0002D20A <AmiBlitz3.ab3@15805>   ASL.l #8,d0
0002D20C <AmiBlitz3.ab3@15808>   MOVE.b (a5)+,d0
0002D210 <AmiBlitz3.ab3@15809>    BEQ syntaxerr
0002D214 <AmiBlitz3.ab3@15810>    CMP.b #$22,d0
0002D218 <AmiBlitz3.ab3@15811>    BNE 'l4
0002D21C <AmiBlitz3.ab3@15812>    MOVE.b #0,d0
0002D21E <AmiBlitz3.ab3@15813>    ASR.l #8,d0
0002D222 <AmiBlitz3.ab3@15814> BRA 'do
0002D226 <AmiBlitz3.ab3@15817>    CMP.b #$22,(a5)+
0002D22A <AmiBlitz3.ab3@15818>    BNE JUMP_error4char
0002D22C <AmiBlitz3.ab3@15821>   MOVE.l d0,d1
0002D230 <AmiBlitz3.ab3@15822>     BSR writelong
0002D234 <AmiBlitz3.ab3@15823>     BSR get1bytemain
0002D236 <AmiBlitz3.ab3@15824> RTS
0002D23A <AmiBlitz3.ab3@15828>   BSR.w get1bytemain
0002D23E <AmiBlitz3.ab3@15829>   CMP.w #$2E,D0
0002D242 <AmiBlitz3.ab3@15830>    BEQ.b JL_0_A7F4
0002D24C <AmiBlitz3.ab3@15832>   MOVE.w oldqflag,instringon
0002D252 <AmiBlitz3.ab3@15833>   MOVEA.l lastsourcepos,A5
0002D254 <AmiBlitz3.ab3@15834>   MOVE.w D2,-(A7)
0002D258 <AmiBlitz3.ab3@15835>    BSR.w getparameter2
0002D25C <AmiBlitz3.ab3@15836>    BEQ.w syntaxerr
0002D262 <AmiBlitz3.ab3@15837>   LEA varbase,A2
0002D266 <AmiBlitz3.ab3@15838>    BSR.w findvariable
0002D26A <AmiBlitz3.ab3@15839>    BNE.w notypeerr
0002D26E <AmiBlitz3.ab3@15840>   MOVE.w $4(A2),D3
0002D270 <AmiBlitz3.ab3@15841>   EXT.l D3
0002D272 <AmiBlitz3.ab3@15842>   MOVE.w (A7)+,D2
0002D276 <AmiBlitz3.ab3@15843> BRA.w JL_0_B46E
0002D278 <AmiBlitz3.ab3@15847>   MOVE.w D2,-(A7)
0002D27C <AmiBlitz3.ab3@15848>    BSR.w getparameter2
0002D280 <AmiBlitz3.ab3@15849>    BEQ.w syntaxerr
0002D286 <AmiBlitz3.ab3@15850>   LEA newtypebase,A2
0002D28A <AmiBlitz3.ab3@15851>    BSR.w findtype
0002D28E <AmiBlitz3.ab3@15852>    BNE.w notypeerr
0002D290 <AmiBlitz3.ab3@15853>   MOVEQ.l #$00,D3
0002D294 <AmiBlitz3.ab3@15854>   CMP.w #$5C,D0
0002D298 <AmiBlitz3.ab3@15855>    BNE.w JL_0_A832
0002D29C <AmiBlitz3.ab3@15856>    BSR.w getparameter2
0002D2A0 <AmiBlitz3.ab3@15857>    BEQ.w syntaxerr
0002D2A4 <AmiBlitz3.ab3@15858>   LEA $4(A2),A2
0002D2A8 <AmiBlitz3.ab3@15859>    BSR.w findvariable2
0002D2AC <AmiBlitz3.ab3@15860>    BNE.w noofferr
0002D2B0 <AmiBlitz3.ab3@15861>   MOVE.w $4(A2),D3
0002D2B4 <AmiBlitz3.ab3@15862> BRA.w JL_0_A836
0002D2B8 <AmiBlitz3.ab3@15866>   MOVE.w $8(A2),D3
0002D2BA <AmiBlitz3.ab3@15869>   MOVE.w (A7)+,D2
0002D2BE <AmiBlitz3.ab3@15870> BRA.w JL_0_B46E
0002D2C0 <AmiBlitz3.ab3@15874>   MOVEQ.l #-$01,D3
0002D2C4 <AmiBlitz3.ab3@15875>    BSR.w get1bytemain
0002D2C8 <AmiBlitz3.ab3@15876> BRA.w JL_0_B46E
0002D2CA <AmiBlitz3.ab3@15880>   MOVEQ.l #$00,D3
0002D2CE <AmiBlitz3.ab3@15881>    BSR.w get1bytemain
0002D2D2 <AmiBlitz3.ab3@15882> BRA.w JL_0_B46E
0002D2D6 <AmiBlitz3.ab3@15886>   CMP.w #$30,D0
0002D2DA <AmiBlitz3.ab3@15887>    BCS.w JL_0_A876
0002D2DE <AmiBlitz3.ab3@15888>   CMP.w #$39,D0
0002D2E2 <AmiBlitz3.ab3@15889>    BLS.w JL_0_A874
0002D2E6 <AmiBlitz3.ab3@15890>   ANDI.w #$FFDF,D0
0002D2EA <AmiBlitz3.ab3@15891>   CMP.w #$46,D0
0002D2EE <AmiBlitz3.ab3@15892>    BHI.w JL_0_A876
0002D2F2 <AmiBlitz3.ab3@15893>   CMP.w #$41,D0
0002D2F6 <AmiBlitz3.ab3@15894>    BCS.w JL_0_A876
0002D2F8 <AmiBlitz3.ab3@15897>    CMP.w D0,D0
0002D2FA <AmiBlitz3.ab3@15900> RTS
0002D2FE <AmiBlitz3.ab3@15904>   CMP.w #$31,D0
0002D302 <AmiBlitz3.ab3@15905>    BEQ.w JL_0_A884
0002D306 <AmiBlitz3.ab3@15906>   CMP.w #$30,D0
0002D308 <AmiBlitz3.ab3@15909> RTS
0002D30A <AmiBlitz3.ab3@15913>    MOVEQ #0,d0
0002D30C <AmiBlitz3.ab3@15914>    MOVE.b (a5)+,d0
0002D30E <AmiBlitz3.ab3@15915>    MOVE.b (a5)+,d0
0002D312 <AmiBlitz3.ab3@15916>    BSR ishex
0002D316 <AmiBlitz3.ab3@15917>    BNE syntaxerr
0002D31A <AmiBlitz3.ab3@15918>    SUBI.w #$30,D0
0002D31E <AmiBlitz3.ab3@15919>    CMP.w #$9,D0
0002D322 <AmiBlitz3.ab3@15920>    BLS.w 'l1
0002D324 <AmiBlitz3.ab3@15921>    SUBQ.w #7,D0
0002D326 <AmiBlitz3.ab3@15924>    MOVE.l d0,d1
0002D328 <AmiBlitz3.ab3@15925>    MOVE.b (a5)+,d0
0002D32C <AmiBlitz3.ab3@15926>      BSR ishex
0002D330 <AmiBlitz3.ab3@15927>     BNE syntaxerr
0002D332 <AmiBlitz3.ab3@15928>     LSL.l #4,d1
0002D336 <AmiBlitz3.ab3@15929>     SUBI.w #$30,D0
0002D33A <AmiBlitz3.ab3@15930>    CMP.w #$9,D0
0002D33E <AmiBlitz3.ab3@15931>    BLS.w 'l2
0002D340 <AmiBlitz3.ab3@15932>    SUBQ.w #7,D0
0002D342 <AmiBlitz3.ab3@15935>   ADD.l d1,d0
0002D344 <AmiBlitz3.ab3@15936> RTS
0002D348 <AmiBlitz3.ab3@15940>    BSR.w get1bytemain
0002D34C <AmiBlitz3.ab3@15941>    BSR.w ishex
0002D350 <AmiBlitz3.ab3@15942>    BNE.w syntaxerr
0002D352 <AmiBlitz3.ab3@15943>   MOVEQ.l #$00,D3
0002D356 <AmiBlitz3.ab3@15944>   CMP.w #5,d2
0002D35A <AmiBlitz3.ab3@15945>   BNE JL_0_A894
0002D360 <AmiBlitz3.ab3@15946>   CMP.l #newtype_double,a2
0002D364 <AmiBlitz3.ab3@15947>   BEQ 'doit
0002D36A <AmiBlitz3.ab3@15948>   CMP.l #newtype_float,a2
0002D36E <AmiBlitz3.ab3@15949>   BNE JL_0_A894
0002D376 <AmiBlitz3.ab3@15952>    fmove.s #0,fp0
0002D37C <AmiBlitz3.ab3@15954>   TST.b fpu
0002D380 <AmiBlitz3.ab3@15955>   BEQ JL_0_A894
0002D386 <AmiBlitz3.ab3@15956>   fmove.w #16,fp1
0002D38A <AmiBlitz3.ab3@15957>   fmul.x fp1,fp0
0002D38E <AmiBlitz3.ab3@15958>   SUBI.w #$30,D0
0002D392 <AmiBlitz3.ab3@15959>   CMP.w #$9,D0
0002D396 <AmiBlitz3.ab3@15960>    BLS.w JL_0_A8AEa
0002D398 <AmiBlitz3.ab3@15961>   SUBQ.w #7,D0
0002D39C <AmiBlitz3.ab3@15964>    fmove.w d0,fp1
0002D3A0 <AmiBlitz3.ab3@15965>    fadd.x fp1,fp0
0002D3A4 <AmiBlitz3.ab3@15966>    BSR.w get1bytemain
0002D3A8 <AmiBlitz3.ab3@15967>    BSR.w ishex
0002D3AC <AmiBlitz3.ab3@15968>    BEQ.w JL_0_A894a
0002D3B0 <AmiBlitz3.ab3@15969> BRA.w nofpregload
0002D3B6 <AmiBlitz3.ab3@15973>   CMP.l #$10000000,D3
0002D3BA <AmiBlitz3.ab3@15974>    BCC.w overerr
0002D3BC <AmiBlitz3.ab3@15975>   LSL.l #4,D3
0002D3C0 <AmiBlitz3.ab3@15976>   SUBI.w #$30,D0
0002D3C4 <AmiBlitz3.ab3@15977>   CMP.w #$9,D0
0002D3C8 <AmiBlitz3.ab3@15978>    BLS.w JL_0_A8AE
0002D3CA <AmiBlitz3.ab3@15979>   SUBQ.w #7,D0
0002D3CC <AmiBlitz3.ab3@15982>   OR.w D0,D3
0002D3D0 <AmiBlitz3.ab3@15983>    BSR.w get1bytemain
0002D3D4 <AmiBlitz3.ab3@15984>    BSR.w ishex
0002D3D8 <AmiBlitz3.ab3@15985>    BEQ.w JL_0_A894
0002D3DC <AmiBlitz3.ab3@15986> BRA.w JL_0_B46E
0002D3E0 <AmiBlitz3.ab3@15990>    BSR.w get1bytemain
0002D3E4 <AmiBlitz3.ab3@15991>    BSR.w JL_0_A878
0002D3E8 <AmiBlitz3.ab3@15992>    BNE.w syntaxerr
0002D3EA <AmiBlitz3.ab3@15993>    MOVEQ.l #$00,D3
0002D3EC <AmiBlitz3.ab3@15996>    LSL.l #1,D3
0002D3F0 <AmiBlitz3.ab3@15997>    BCS.w overerr
0002D3F4 <AmiBlitz3.ab3@15998>   SUBI.w #$30,D0
0002D3F6 <AmiBlitz3.ab3@15999>   OR.w D0,D3
0002D3FA <AmiBlitz3.ab3@16000>    BSR.w get1bytemain
0002D3FE <AmiBlitz3.ab3@16001>    BSR.w JL_0_A878
0002D402 <AmiBlitz3.ab3@16002>    BEQ.w JL_0_A8CE
0002D406 <AmiBlitz3.ab3@16003> BRA.w JL_0_B46E
0002D408 <AmiBlitz3.ab3@16007>    MOVE.w d2,-(A7)
0002D410 <AmiBlitz3.ab3@16008>    MOVE.b #0,automode
0002D414 <AmiBlitz3.ab3@16009>    CMP.b #"@",(a5)
0002D418 <AmiBlitz3.ab3@16010>    BNE 'l1
0002D41A <AmiBlitz3.ab3@16011>    ADDQ.l #1,a5
0002D422 <AmiBlitz3.ab3@16012>    MOVE.b #1,automode
0002D426 <AmiBlitz3.ab3@16013>    BSR getparameter2
0002D42A <AmiBlitz3.ab3@16014>    BSR findlabel2
0002D42E <AmiBlitz3.ab3@16015>    BNE 'addit
0002D432 <AmiBlitz3.ab3@16016> BRA errormsg_autocount
0002D436 <AmiBlitz3.ab3@16019>   BSR.w addlabelhash
0002D43E <AmiBlitz3.ab3@16020>   MOVE.l #$1,$4(A2)
0002D442 <AmiBlitz3.ab3@16021>   MOVEM.l a2/a5,-(a7)
0002D448 <AmiBlitz3.ab3@16022>   MOVE.w lastchar,-(a7)
0002D44E <AmiBlitz3.ab3@16023>   LEA autostorename,a5
0002D452 <AmiBlitz3.ab3@16024>   BSR getparameter2
0002D456 <AmiBlitz3.ab3@16025>   BSR findlabel2
0002D45A <AmiBlitz3.ab3@16026>   BEQ 'found
0002D45E <AmiBlitz3.ab3@16027>   BSR.w addlabelhash
0002D466 <AmiBlitz3.ab3@16028>   MOVE.l #$1,$4(A2)
0002D46E <AmiBlitz3.ab3@16029>   MOVE.l #0,8(a2)
0002D470 <AmiBlitz3.ab3@16032>    MOVE.w (a7)+,d0
0002D476 <AmiBlitz3.ab3@16033>    MOVE.w d0,lastchar
0002D47A <AmiBlitz3.ab3@16034>   MOVE.l 8(a2),d3
0002D482 <AmiBlitz3.ab3@16035>   ADD.l #1,8(a2)
0002D486 <AmiBlitz3.ab3@16036>   MOVEM.l (a7)+,a2/a5
0002D48A <AmiBlitz3.ab3@16037>   MOVE.l d3,8(a2)
0002D48E <AmiBlitz3.ab3@16038>   MOVE.l $8(A2),D3
0002D492 <AmiBlitz3.ab3@16039> BRA.l 'l3
0002D496 <AmiBlitz3.ab3@16042>   BSR.w getparameter2
0002D49C <AmiBlitz3.ab3@16043>     TST.b incnif
0002D4A0 <AmiBlitz3.ab3@16044>     BEQ 'lc1
0002D4A4 <AmiBlitz3.ab3@16045>     BSR.w findlabel2
0002D4A8 <AmiBlitz3.ab3@16046>     BNE 'l5
0002D4AA <AmiBlitz3.ab3@16047>     MOVEQ #1,d3
0002D4AC <AmiBlitz3.ab3@16048>     MOVE.w (A7)+,D2
0002D4B0 <AmiBlitz3.ab3@16049> BRA JL_0_B46E
0002D4B2 <AmiBlitz3.ab3@16052>   MOVEQ #0,d3
0002D4B4 <AmiBlitz3.ab3@16053>     MOVE.w (A7)+,D2
0002D4B8 <AmiBlitz3.ab3@16054> BRA JL_0_B46E
0002D4BC <AmiBlitz3.ab3@16057>    BSR.w findlabel2
0002D4C0 <AmiBlitz3.ab3@16058>    BNE.w cnferr
0002D4C8 <AmiBlitz3.ab3@16061>    CMPI.l #$1,$4(A2)
0002D4CC <AmiBlitz3.ab3@16062>    BNE.w cnferr
0002D4D0 <AmiBlitz3.ab3@16064>    MOVE.l $8(A2),D3
0002D4D2 <AmiBlitz3.ab3@16065>    MOVE.w (A7)+,D2
0002D4D6 <AmiBlitz3.ab3@16066> BRA.w JL_0_B46E
0002D4DC <AmiBlitz3.ab3@16070>   CLR.w vartype
0002D4E4 <AmiBlitz3.ab3@16071>   MOVE.b #3,peekaddrsize
0002D4E8 <AmiBlitz3.ab3@16072>   BSR.w JL_0_A916
0002D4EE <AmiBlitz3.ab3@16073>   MOVE.l a2,rightsidetype
0002D4F0 <AmiBlitz3.ab3@16074>   MOVEQ.l #$03,D2
0002D4F2 <AmiBlitz3.ab3@16075> RTS
0002D4F6 <AmiBlitz3.ab3@16079>    BSR.w get1bytemain
0002D508 <AmiBlitz3.ab3@16080>    !compare2
0002D50C <AmiBlitz3.ab3@16081>    BEQ andop2
0002D510 <AmiBlitz3.ab3@16082>    BSR.w getparameter
0002D514 <AmiBlitz3.ab3@16083>    BSR.w JL_0_8E3C
0002D518 <AmiBlitz3.ab3@16084>    BSR.w calcvar
0002D51C <AmiBlitz3.ab3@16085>   CMP.b #$7,D2
0002D520 <AmiBlitz3.ab3@16086>    BNE.w JL_0_A960
0002D524 <AmiBlitz3.ab3@16087>   BTST #$F,D2
0002D528 <AmiBlitz3.ab3@16088>    BNE.w JL_0_A94A
0002D52E <AmiBlitz3.ab3@16089>   MOVE.w D3,stamp2+2
0002D534 <AmiBlitz3.ab3@16090>   MOVE.l stamp2,D1
0002D538 <AmiBlitz3.ab3@16091>    BSR.w pokela5s
0002D53C <AmiBlitz3.ab3@16092> BRA.w JL_0_A978
0002D542 <AmiBlitz3.ab3@16096>   MOVE.w regnum,D1
0002D544 <AmiBlitz3.ab3@16097>   LSL.w #8,D1
0002D546 <AmiBlitz3.ab3@16098>   LSL.w #1,D1
0002D54C <AmiBlitz3.ab3@16099>   OR.w stamp,D1
0002D550 <AmiBlitz3.ab3@16100>    BSR.w writeword
0002D552 <AmiBlitz3.ab3@16101> RTS
0002D556 <AmiBlitz3.ab3@16105>   BTST #$F,D2
0002D55A <AmiBlitz3.ab3@16106>    BNE.w JL_0_A978
0002D560 <AmiBlitz3.ab3@16107>   MOVE.w D3,leaamp+2
0002D566 <AmiBlitz3.ab3@16108>   MOVE.l leaamp,D1
0002D56A <AmiBlitz3.ab3@16109>    BSR.w pokela5s
0002D570 <AmiBlitz3.ab3@16112>   MOVE.w regnum,D1
0002D572 <AmiBlitz3.ab3@16113>   LSL.w #8,D1
0002D574 <AmiBlitz3.ab3@16114>   LSL.w #1,D1
0002D57A <AmiBlitz3.ab3@16115>   OR.w leaamp2,D1
0002D57E <AmiBlitz3.ab3@16116> BRA.w writeword
0002D582 <AmiBlitz3.ab3@16120>   MOVE.w #$D200,D1
0002D586 <AmiBlitz3.ab3@16121>    BSR.w Atokejsr
0002D588 <AmiBlitz3.ab3@16122>   MOVEQ.l #$03,D2
0002D58A <AmiBlitz3.ab3@16123> RTS
0002D58E <AmiBlitz3.ab3@16127> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002D590 <AmiBlitz3.ab3@16128>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002D592 <AmiBlitz3.ab3@16129>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002D596 <AmiBlitz3.ab3@16135>    BSR.w get1bytemain
0002D598 <AmiBlitz3.ab3@16136>   MOVE.w D0,D1
0002D59C <AmiBlitz3.ab3@16137>    BPL.w syntaxerr
0002D59E <AmiBlitz3.ab3@16138>   MOVE.w D2,-(A7)
0002D5A2 <AmiBlitz3.ab3@16139>   BCLR #$F,D1
0002D5A6 <AmiBlitz3.ab3@16140>    BSR.w searchinstr
0002D5AA <AmiBlitz3.ab3@16141>   MOVE.l $12(A2),D0
0002D5AE <AmiBlitz3.ab3@16142>   TST.w -$2(A2,D0.L)
0002D5B2 <AmiBlitz3.ab3@16143>    BEQ.w freeerr
0002D5B4 <AmiBlitz3.ab3@16144>   MOVE.w (A7)+,D2
0002D5B6 <AmiBlitz3.ab3@16145> RTS
0002D5BA <AmiBlitz3.ab3@16149>   MOVE.l $0(A5),D0
0002D5BE <AmiBlitz3.ab3@16150>    BNE.b ucodeskip
0002D5C0 <AmiBlitz3.ab3@16151>   MOVEQ.l #-$01,D0
0002D5C4 <AmiBlitz3.ab3@16152> BRA.b usedcodef
0002D5C8 <AmiBlitz3.ab3@16155>   SUB.l $0(A5),D0
0002D5CA <AmiBlitz3.ab3@16158>   LSR.w #8,D0
0002D5CE <AmiBlitz3.ab3@16163>    MOVE.l $0(A5),D0
0002D5D2 <AmiBlitz3.ab3@16164>    BNE.b ucodeskip2
0002D5D4 <AmiBlitz3.ab3@16165>   MOVEQ.l #-$01,D0
0002D5D8 <AmiBlitz3.ab3@16166> BRA.b usedcode2f
0002D5DC <AmiBlitz3.ab3@16169>   SUB.l $0(A5),D0                                          ;usedcode2
0002D5DE <AmiBlitz3.ab3@16170>   LSR.w #8,D0
0002D5E0 <AmiBlitz3.ab3@16173>   LSR.w #8,D0
0002D5E2 <AmiBlitz3.ab3@16178>   MOVE.l D0,-(A7)
0002D5E4 <AmiBlitz3.ab3@16181>   MOVE.l (A7)+,D0
0002D5E6 <AmiBlitz3.ab3@16184>   MOVE.l D0,D0
0002D5EA <AmiBlitz3.ab3@16190>   BSR.w JL_0_A9A0
0002D5EE <AmiBlitz3.ab3@16192>   MOVE.w -$2(A2,D0.L),D3
0002D5F2 <AmiBlitz3.ab3@16193>   CMP.w #$9,D3
0002D5F6 <AmiBlitz3.ab3@16194>    BCC.w doused__skip
0002D5FA <AmiBlitz3.ab3@16198>   LEA usedcode(PC),A0
0002D5FE <AmiBlitz3.ab3@16199>   LEA usedcodef(PC),A1
0002D604 <AmiBlitz3.ab3@16201>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002D608 <AmiBlitz3.ab3@16202>   ANDI.w #$7,D3
0002D60A <AmiBlitz3.ab3@16203>   LSL.w #8,D3
0002D60C <AmiBlitz3.ab3@16204>   LSL.w #1,D3
0002D610 <AmiBlitz3.ab3@16205>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002D614 <AmiBlitz3.ab3@16206> BRA.w doused__skip2
0002D618 <AmiBlitz3.ab3@16211>   LEA usedcode2(PC),A0
0002D61C <AmiBlitz3.ab3@16212>   LEA usedcode2f(PC),A1
0002D622 <AmiBlitz3.ab3@16214>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002D624 <AmiBlitz3.ab3@16215>   SUBQ.w #8,D3
0002D626 <AmiBlitz3.ab3@16216>   LSL.w #8,D3
0002D628 <AmiBlitz3.ab3@16217>   LSL.w #1,D3
0002D62C <AmiBlitz3.ab3@16218>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002D630 <AmiBlitz3.ab3@16221>   MOVE.w -$6(A2,D0.L),D3
0002D634 <AmiBlitz3.ab3@16222>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002D636 <AmiBlitz3.ab3@16223>   ADDQ.w #4,D3
0002D63A <AmiBlitz3.ab3@16224>   MOVE.w D3,$2(A0)
0002D640 <AmiBlitz3.ab3@16225>   MOVE.w regnum,D1
0002D644 <AmiBlitz3.ab3@16226>    BEQ.w doused__skip3
0002D648 <AmiBlitz3.ab3@16227>   MOVE.w usedprep(PC),D1
0002D64C <AmiBlitz3.ab3@16228>    BSR.w writeword
0002D650 <AmiBlitz3.ab3@16231>   BSR.w pokecode
0002D656 <AmiBlitz3.ab3@16232>   MOVE.w regnum,D1
0002D65A <AmiBlitz3.ab3@16233>    BEQ.w doused__skip4
0002D65C <AmiBlitz3.ab3@16234>   LSL.w #8,D1
0002D65E <AmiBlitz3.ab3@16235>   LSL.w #1,D1
0002D662 <AmiBlitz3.ab3@16236>   OR.w usedfix(PC),D1
0002D666 <AmiBlitz3.ab3@16237>    BSR.w writeword
0002D66A <AmiBlitz3.ab3@16238>   MOVE.w useddone(PC),D1
0002D66E <AmiBlitz3.ab3@16239>    BSR.w writeword
0002D670 <AmiBlitz3.ab3@16242>    MOVEQ.l #$02,D2
0002D674 <AmiBlitz3.ab3@16243> BRA.w get1bytemain
0002D678 <AmiBlitz3.ab3@16251>    BSR.w JL_0_A9A0
0002D67A <AmiBlitz3.ab3@16253>   MOVEQ.l #$00,D3
0002D67E <AmiBlitz3.ab3@16254>   MOVE.w -$4(A2,D0.L),D3
0002D682 <AmiBlitz3.ab3@16255>    BSR.w get1bytemain
0002D686 <AmiBlitz3.ab3@16256> BRA.w JL_0_B46E
0002D68A <AmiBlitz3.ab3@16263>    BSR.w get1bytemain
0002D68C <AmiBlitz3.ab3@16264>   MOVE.w D0,-(A7)
0002D690 <AmiBlitz3.ab3@16265>    BSR.w get1bytemain
0002D694 <AmiBlitz3.ab3@16266>   CMP.w #$28,D0
0002D698 <AmiBlitz3.ab3@16267>    BNE.w syntaxerr
0002D69A <AmiBlitz3.ab3@16268>   MOVE.w (A7)+,D0
0002D69E <AmiBlitz3.ab3@16269>    BSR.w JL_0_C340
0002D6A2 <AmiBlitz3.ab3@16270>    BSR.w reget
0002D6A6 <AmiBlitz3.ab3@16271>   CMP.w #$29,D0
0002D6AA <AmiBlitz3.ab3@16272>    BNE.w syntaxerr
0002D6AE <AmiBlitz3.ab3@16276>   LEA addrcode(PC),A0
0002D6B2 <AmiBlitz3.ab3@16277>   LEA addrcodef(PC),A1
0002D6B8 <AmiBlitz3.ab3@16278>   MOVE.w -$6(A2),$2(A0)
0002D6BC <AmiBlitz3.ab3@16279>   MOVE.w $4(A0),D1
0002D6C0 <AmiBlitz3.ab3@16280>   ANDI.w #$FFF8,D1
0002D6C6 <AmiBlitz3.ab3@16281>   OR.w regnum,D1
0002D6CA <AmiBlitz3.ab3@16282>   MOVE.w D1,$4(A0)
0002D6CE <AmiBlitz3.ab3@16283>   MOVE.w $6(A0),D1
0002D6D2 <AmiBlitz3.ab3@16284>   ANDI.w #$F1FF,D1
0002D6D8 <AmiBlitz3.ab3@16285>   MOVE.w regnum,D0
0002D6DA <AmiBlitz3.ab3@16286>   LSL.w #8,D0
0002D6DC <AmiBlitz3.ab3@16287>   LSL.w #1,D0
0002D6DE <AmiBlitz3.ab3@16288>   OR.w D0,D1
0002D6E2 <AmiBlitz3.ab3@16289>   MOVE.w D1,$6(A0)
0002D6E6 <AmiBlitz3.ab3@16290>    BSR.w pokecode
0002D6E8 <AmiBlitz3.ab3@16291>   MOVEQ.l #$03,D2
0002D6EC <AmiBlitz3.ab3@16292> BRA.w get1bytemain
0002D6F0 <AmiBlitz3.ab3@16296>   CMP.w #-$7F4D,D0
0002D6F4 <AmiBlitz3.ab3@16297>    BHI.w JL_0_AAFE
0002D6F8 <AmiBlitz3.ab3@16298> BRA.w syntaxerr
0002D6FC <AmiBlitz3.ab3@16305> .do_null   CMP.w #$b581,d0
0002D700 <AmiBlitz3.ab3@16306>    BNE 'nonull
0002D706 <AmiBlitz3.ab3@16307>    MOVE.l d0,lastinstruction
0002D70A <AmiBlitz3.ab3@16308>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002D710 <AmiBlitz3.ab3@16309>    MOVE.w regnum,d0
0002D712 <AmiBlitz3.ab3@16310>    ASL.l #7,d0
0002D714 <AmiBlitz3.ab3@16311>    ASL.l #2,d0
0002D716 <AmiBlitz3.ab3@16312>    OR.l d0,d1
0002D71A <AmiBlitz3.ab3@16313>    BSR writeword
0002D720 <AmiBlitz3.ab3@16314>    JSR get1bytemain
0002D722 <AmiBlitz3.ab3@16315>    RTS
0002D726 <AmiBlitz3.ab3@16317> 'nonull CMP.w #$c982,d0
0002D72A <AmiBlitz3.ab3@16318>        BNE nonew_
0002D72C <AmiBlitz3.ab3@16320>   MOVE.l a5,-(a7)
0002D732 <AmiBlitz3.ab3@16321>   MOVE.w lastchar,-(a7)
0002D738 <AmiBlitz3.ab3@16322>   JSR get1bytemain
0002D73C <AmiBlitz3.ab3@16323>   CMP.w #"(",d0                                             ; use oldcode
0002D740 <AmiBlitz3.ab3@16324>   BNE 'newcode
0002D746 <AmiBlitz3.ab3@16325>   JSR get1bytemain
0002D74A <AmiBlitz3.ab3@16326>   CMP.w #")",d0
0002D74E <AmiBlitz3.ab3@16327>   BEQ 'newcode
0002D754 <AmiBlitz3.ab3@16328>   MOVE.w (a7)+,lastchar
0002D756 <AmiBlitz3.ab3@16329>   MOVE.l (a7)+,a5
0002D75C <AmiBlitz3.ab3@16330>   MOVE.w lastchar,d0
0002D760 <AmiBlitz3.ab3@16331>   BRA nonew_
0002D762 <AmiBlitz3.ab3@16332> 'newcode  MOVE.l a0,-(a7)
0002D768 <AmiBlitz3.ab3@16333>   TST.b blitzparloop
0002D76C <AmiBlitz3.ab3@16334>   BNE 'err
0002D772 <AmiBlitz3.ab3@16335>   TST.b funcparloop
0002D776 <AmiBlitz3.ab3@16336>   BNE 'err
0002D77A <AmiBlitz3.ab3@16337>   BRA 'ok
0002D780 <AmiBlitz3.ab3@16338> 'err JMP errornewnotincalls
0002D786 <AmiBlitz3.ab3@16339> 'ok  MOVE.l #$203c0000,d1
0002D78A <AmiBlitz3.ab3@16340>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002D78C <AmiBlitz3.ab3@16341>   MOVEQ #0,d1
0002D790 <AmiBlitz3.ab3@16342>   MOVE.w 8(a0),d1
0002D794 <AmiBlitz3.ab3@16343>   BSR writeword
0002D798 <AmiBlitz3.ab3@16344>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002D79C <AmiBlitz3.ab3@16345>   BSR writeword
0002D7A0 <AmiBlitz3.ab3@16346>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002D7A4 <AmiBlitz3.ab3@16347>   BSR.w tokejsr2
0002D7A6 <AmiBlitz3.ab3@16348>   MOVE.l (a7)+,a0
0002D7A8 <AmiBlitz3.ab3@16349>   ADDQ.l #6,a7                      ; a5 need not restore
0002D7AC <AmiBlitz3.ab3@16350>   CMP.w #")",d0
0002D7B0 <AmiBlitz3.ab3@16351>   BNE 'nobracket
0002D7B6 <AmiBlitz3.ab3@16352>   JSR get1bytemain
0002D7B8 <AmiBlitz3.ab3@16353> 'nobracket  RTS
0002D7BC <AmiBlitz3.ab3@16355> nonew_  CMP.w #-$7F4A,D0
0002D7C0 <AmiBlitz3.ab3@16356>    BEQ.w JL_0_A98C
0002D7C4 <AmiBlitz3.ab3@16357>   CMP.w #-$7F48,D0
0002D7C8 <AmiBlitz3.ab3@16358>    BEQ.w doaddr
0002D7CC <AmiBlitz3.ab3@16359>   CMP.w #-$7F3C,D0
0002D7D0 <AmiBlitz3.ab3@16360>    BEQ.w domaximum
0002D7D4 <AmiBlitz3.ab3@16361>   CMP.w #-$7F2F,D0
0002D7D8 <AmiBlitz3.ab3@16362>    BEQ.w doused
0002D7DA <AmiBlitz3.ab3@16363>   MOVE.w D2,-(A7)
0002D7DC <AmiBlitz3.ab3@16364>   MOVE.w D0,D1
0002D7E0 <AmiBlitz3.ab3@16365>   BCLR #$F,D1
0002D7E4 <AmiBlitz3.ab3@16367>    BSR.w searchinstr
0002D7E6 <AmiBlitz3.ab3@16368>   MOVE.w (A3),D1
0002D7EA <AmiBlitz3.ab3@16369>   BTST #$1,D1
0002D7EE <AmiBlitz3.ab3@16370>    BEQ.w noreturn_                                         ;syntax error noreturn
0002D7F2 <AmiBlitz3.ab3@16371>   BTST #$2,D1
0002D7F6 <AmiBlitz3.ab3@16372>    BNE.w JL_0_AC1A
0002D7F8 <AmiBlitz3.ab3@16373>   LSR.w #8,D1
0002D7FE <AmiBlitz3.ab3@16374>   BTST #$3,$1(A3)
0002D802 <AmiBlitz3.ab3@16375>    BEQ.w JL_0_AB4C
0002D808 <AmiBlitz3.ab3@16376>    JSR AJL_0_498A
0002D80E <AmiBlitz3.ab3@16379>    CLR.l rightsidetype
0002D810 <AmiBlitz3.ab3@16380>    MOVE.w D1,-(A7)                                         ;is library instruction
0002D814 <AmiBlitz3.ab3@16381>   CMP.w #$7,D1
0002D818 <AmiBlitz3.ab3@16382>    BNE.w JL_0_AB5E
0002D81A <AmiBlitz3.ab3@16383>   MOVE.l A2,-(A7)
0002D81E <AmiBlitz3.ab3@16384>    BSR.w makesbase
0002D820 <AmiBlitz3.ab3@16385>   MOVEA.l (A7)+,A2
0002D824 <AmiBlitz3.ab3@16388>     BSR.w JL_0_AFA2
0002D826 <AmiBlitz3.ab3@16389>   MOVE.w D3,-(A7)
0002D82A <AmiBlitz3.ab3@16390>    BSR.w get1bytemain
0002D82C <AmiBlitz3.ab3@16391>   MOVEQ.l #$00,D1
0002D830 <AmiBlitz3.ab3@16392>   CMP.w #$28,D0
0002D834 <AmiBlitz3.ab3@16393>    BNE.w JL_0_AB80
0002D83A <AmiBlitz3.ab3@16394>    JSR JL_0_66F6
0002D83C <AmiBlitz3.ab3@16395>   TST.w D1
0002D840 <AmiBlitz3.ab3@16396>    BEQ.w syntaxerr
0002D844 <AmiBlitz3.ab3@16397> BRA.w JL_0_AB84
0002D84E <AmiBlitz3.ab3@16402>   MOVE.w oldqflag,instringon
0002D854 <AmiBlitz3.ab3@16403>   MOVEA.l lastsourcepos,A5
0002D85A <AmiBlitz3.ab3@16406>    MOVE.w regnum,-(A7)
0002D864 <AmiBlitz3.ab3@16407>    MOVE.w regnum,regnumstore
0002D86A <AmiBlitz3.ab3@16408>    TST.b fpu
0002D86E <AmiBlitz3.ab3@16409>             BEQ 'nofloat
0002D874 <AmiBlitz3.ab3@16410>             CMP.w #$ffff,28(a3)
0002D878 <AmiBlitz3.ab3@16411>             BNE 'nofloat
0002D87E <AmiBlitz3.ab3@16412>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002D882 <AmiBlitz3.ab3@16413>             BEQ 'nofloat
0002D888 <AmiBlitz3.ab3@16414>             CMP.w #$3c02,34(a3)                            ;int skip
0002D88C <AmiBlitz3.ab3@16415>             BEQ 'quick
0002D890 <AmiBlitz3.ab3@16416>             CMP.b #5,(a3)
0002D894 <AmiBlitz3.ab3@16417>             BNE 'nofloat
0002D89A <AmiBlitz3.ab3@16420>             CLR.l load_var_addr
0002D89E <AmiBlitz3.ab3@16421> BRA 'isfpu
0002D8A4 <AmiBlitz3.ab3@16424>    CLR.w regnum
0002D8A6 <AmiBlitz3.ab3@16427>    MOVE.w D1,-(A7)
0002D8AC <AmiBlitz3.ab3@16428>   BTST #$3,$1(A3)
0002D8B0 <AmiBlitz3.ab3@16429>    BEQ.w JL_0_ABB0
0002D8B4 <AmiBlitz3.ab3@16448>   MOVE.w $6(A7),D1
0002D8BA <AmiBlitz3.ab3@16449>   MOVE.w d1,peeksize
0002D8BE <AmiBlitz3.ab3@16459>   ORI.w #$7000,D1
0002D8C2 <AmiBlitz3.ab3@16460>   BSR.w writeword                                          ;write peekmode
0002D8C8 <AmiBlitz3.ab3@16463>   ADDQ.w #1,regnum
0002D8CA <AmiBlitz3.ab3@16464>   MOVE.w (A7),D1
0002D8D2 <AmiBlitz3.ab3@16467>   MOVE.w 2(a7),tempregnum
0002D8D8 <AmiBlitz3.ab3@16468>   JSR JL_0_4878
0002D8DA <AmiBlitz3.ab3@16469>   TST.w (A7)+
0002D8DE <AmiBlitz3.ab3@16470>   BEQ.w JL_0_ABC6
0002D8E2 <AmiBlitz3.ab3@16471>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002D8E6 <AmiBlitz3.ab3@16472>   BNE.w errorbracketmiss                                    ; was syntax error
0002D8EC <AmiBlitz3.ab3@16473>   CLR.l lasttoken
0002D8F0 <AmiBlitz3.ab3@16474>   BSR.w get1bytemain
0002D8F2 <AmiBlitz3.ab3@16477>    MOVE.w (A7)+,D1
0002D8F8 <AmiBlitz3.ab3@16478>   MOVE.w D1,regnum
0002D8FC <AmiBlitz3.ab3@16479>    BEQ.w JL_0_ABDE
0002D902 <AmiBlitz3.ab3@16480>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002D906 <AmiBlitz3.ab3@16481>    BNE 'noval
0002D90C <AmiBlitz3.ab3@16482>    TST.b fpu
0002D910 <AmiBlitz3.ab3@16483>    BEQ 'noval
0002D916 <AmiBlitz3.ab3@16484>    CLR.l load_var_addr
0002D918 <AmiBlitz3.ab3@16485>    MOVEQ #0,d1
0002D91E <AmiBlitz3.ab3@16486>    MOVE.w regnum,d1
0002D920 <AmiBlitz3.ab3@16487>    LSL.l #7,d1
0002D926 <AmiBlitz3.ab3@16488>    OR.l #$f2000000,d1
0002D92A <AmiBlitz3.ab3@16489>    BSR writelong
0002D92E <AmiBlitz3.ab3@16490> BRA JL_0_ABDE
0002D934 <AmiBlitz3.ab3@16494>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002D938 <AmiBlitz3.ab3@16495>    BEQ 'quick
0002D93C <AmiBlitz3.ab3@16496>    CMP.b #5,d2
0002D940 <AmiBlitz3.ab3@16497>    BNE 'nofpu
0002D946 <AmiBlitz3.ab3@16498>    TST.b fpu
0002D94A <AmiBlitz3.ab3@16499>    BEQ 'nofpu
0002D950 <AmiBlitz3.ab3@16504>    CLR.l load_var_addr
0002D954 <AmiBlitz3.ab3@16505> BRA JL_0_ABDE
0002D956 <AmiBlitz3.ab3@16508>   LSL.w #8,D1
0002D958 <AmiBlitz3.ab3@16509>   LSL.w #1,D1
0002D95C <AmiBlitz3.ab3@16510>   ORI.w #$2000,D1
0002D960 <AmiBlitz3.ab3@16511>   BSR.w writeword                                          ;write move.l d0,dx
0002D966 <AmiBlitz3.ab3@16512>   TST.b fpu
0002D96A <AmiBlitz3.ab3@16513>   BEQ JL_0_ABDE
0002D96C <AmiBlitz3.ab3@16514>   MOVEQ #0,d1
0002D972 <AmiBlitz3.ab3@16515>   MOVE.w regnum,d1
0002D974 <AmiBlitz3.ab3@16516>   LSL.l #7,d1
0002D97A <AmiBlitz3.ab3@16517>   OR.l #$f2000000,d1
0002D97C <AmiBlitz3.ab3@16521>        MOVE.w (A7)+,D3
0002D980 <AmiBlitz3.ab3@16522>        BEQ.w JL_0_ABFC
0002D986 <AmiBlitz3.ab3@16523>        TST.b fpu
0002D98A <AmiBlitz3.ab3@16524>        BEQ 'nofpu
0002D98C <AmiBlitz3.ab3@16525>       MOVE.l d0,-(a7)
0002D98E <AmiBlitz3.ab3@16526>        MOVE.l a0,-(a7)
0002D994 <AmiBlitz3.ab3@16527>        MOVE.l stacktrack,d1
0002D99A <AmiBlitz3.ab3@16528>        LEA fpustackbase,a0
0002D9A2 <AmiBlitz3.ab3@16529>        MOVE.w 0(a0,d1),regmask
0002D9A4 <AmiBlitz3.ab3@16530>        MOVE.l (a7)+,a0
0002D9A8 <AmiBlitz3.ab3@16531>       MOVE.w #8,d0
0002D9AC <AmiBlitz3.ab3@16534>       BEQ 'ready
0002D9B2 <AmiBlitz3.ab3@16535>       BTST d0,regmask
0002D9B6 <AmiBlitz3.ab3@16536>       BEQ 'noa7
0002D9B8 <AmiBlitz3.ab3@16537>       MOVEQ #0,d1
0002D9BA <AmiBlitz3.ab3@16538>       MOVE.w d0,d1
0002D9BC <AmiBlitz3.ab3@16539>       SUBQ.w #1,d1
0002D9BE <AmiBlitz3.ab3@16540>       ASL #7,d1
0002D9C4 <AmiBlitz3.ab3@16542>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002D9C8 <AmiBlitz3.ab3@16543>       BSR writelong
0002D9CE <AmiBlitz3.ab3@16544>       SUBQ.l #2,stacktrack
0002D9D0 <AmiBlitz3.ab3@16547>       SUBQ.w #1,d0
0002D9D4 <AmiBlitz3.ab3@16548>       BNE 'loop
0002D9D6 <AmiBlitz3.ab3@16551>       MOVE.l (a7)+,d0
0002D9DC <AmiBlitz3.ab3@16552>       SUBQ.l #2,stacktrack                                 ;int track
0002D9E0 <AmiBlitz3.ab3@16555>    MOVE.w #$4CDF,D1
0002D9E4 <AmiBlitz3.ab3@16556>    BSR.w writeword                                         ;write movem.l (a7)+,
0002D9E6 <AmiBlitz3.ab3@16557>   MOVEQ.l #$00,D1
0002D9E8 <AmiBlitz3.ab3@16558>   MOVEQ.l #$0F,D4
0002D9EA <AmiBlitz3.ab3@16561>     LSL.w #1,D3
0002D9EC <AmiBlitz3.ab3@16562>     ROXR.w #1,D1
0002D9F0 <AmiBlitz3.ab3@16563>   DBF D4,JL_0_ABF0
0002D9F4 <AmiBlitz3.ab3@16565>    BSR.w writeword
0002D9FA <AmiBlitz3.ab3@16566>    TST.b fast
0002D9FE <AmiBlitz3.ab3@16567>    BEQ JL_0_ABFC
0002DA04 <AmiBlitz3.ab3@16568>    TST.w regnum
0002DA08 <AmiBlitz3.ab3@16569>    BEQ JL_0_ABFC
0002DA0E <AmiBlitz3.ab3@16570>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002DA12 <AmiBlitz3.ab3@16571>    BNE 'l1
0002DA18 <AmiBlitz3.ab3@16572>    MOVE.w regnum,d1
0002DA1A <AmiBlitz3.ab3@16573>    ASL.l #8,d1
0002DA1C <AmiBlitz3.ab3@16574>    ASL.l #1,d1
0002DA20 <AmiBlitz3.ab3@16575>    OR.w #$70ff,d1
0002DA2A <AmiBlitz3.ab3@16576>    SUB.l #12,destpointer
0002DA2E <AmiBlitz3.ab3@16577>    BSR writeword
0002DA34 <AmiBlitz3.ab3@16580>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002DA38 <AmiBlitz3.ab3@16581>    BNE 'l2
0002DA3E <AmiBlitz3.ab3@16582>     MOVE.w regnum,d1
0002DA40 <AmiBlitz3.ab3@16583>     ASL.l #8,d1
0002DA42 <AmiBlitz3.ab3@16584>     ASL.l #1,d1
0002DA46 <AmiBlitz3.ab3@16585>     OR.w #$7000,d1
0002DA50 <AmiBlitz3.ab3@16586>     SUB.l #12,destpointer
0002DA54 <AmiBlitz3.ab3@16587>     BSR writeword
0002DA56 <AmiBlitz3.ab3@16591>    MOVE.w (A7)+,D2
0002DA5A <AmiBlitz3.ab3@16592>   CMP.w #$7,D2                                             ;destination var type
0002DA5E <AmiBlitz3.ab3@16593>    BNE.w JL_0_AC16
0002DA64 <AmiBlitz3.ab3@16594>   MOVE.w putstlen,D1
0002DA6A <AmiBlitz3.ab3@16595>   OR.w regnum,D1
0002DA6E <AmiBlitz3.ab3@16596>    BSR.w writeword
0002DA72 <AmiBlitz3.ab3@16599> BRA.w JL_0_AF66
0002DA76 <AmiBlitz3.ab3@16604>   MOVE.w $6(A3),D1
0002DA7A <AmiBlitz3.ab3@16605>    BSR.w uselib
0002DA7E <AmiBlitz3.ab3@16606>    BSR.w JL_0_AD40
0002DA80 <AmiBlitz3.ab3@16607>   MOVE.l D4,D1
0002DA82 <AmiBlitz3.ab3@16608>   MOVE.l D5,-(A7)
0002DA86 <AmiBlitz3.ab3@16609>    BSR.w JL_0_AD38
0002DA8A <AmiBlitz3.ab3@16610>   MOVE.w $A(A1),-(A7)
0002DA8C <AmiBlitz3.ab3@16611>   ADDQ.w #8,A3
0002DA8E <AmiBlitz3.ab3@16612>   MOVE.w (A3)+,-(A7)
0002DA90 <AmiBlitz3.ab3@16613>   MOVE.l A3,-(A7)
0002DA94 <AmiBlitz3.ab3@16614>    BSR.w get1bytemain
0002DA96 <AmiBlitz3.ab3@16615>   MOVE.w D0,-(A7)
0002DA98 <AmiBlitz3.ab3@16616>   MOVEQ.l #$00,D3
0002DA9E <AmiBlitz3.ab3@16617>   JSR checka4a5
0002DAA0 <AmiBlitz3.ab3@16619>   MOVE.b (A3)+,D1
0002DAA4 <AmiBlitz3.ab3@16620>    BMI.w JL_0_AC6A
0002DAA6 <AmiBlitz3.ab3@16621>   MOVEQ.l #$03,D2
0002DAA8 <AmiBlitz3.ab3@16622>   ADDQ.w #1,D3
0002DAAC <AmiBlitz3.ab3@16623>   MOVEM.l D3/A3,-(A7)
0002DAB2 <AmiBlitz3.ab3@16624>   MOVE.b funcparloop,-(a7)
0002DAB8 <AmiBlitz3.ab3@16625>   CLR.b funcparloop
0002DABE <AmiBlitz3.ab3@16626>   MOVE.b blitzparloop,-(a7)
0002DAC6 <AmiBlitz3.ab3@16627>   MOVE.b #1,blitzparloop
0002DACC <AmiBlitz3.ab3@16628>   MOVE.l lasttoken,-(a7)
0002DAD2 <AmiBlitz3.ab3@16629>   MOVE.l leftsidetype,-(a7)
0002DAD8 <AmiBlitz3.ab3@16630>   MOVE.l rightsidetype,-(a7)
0002DADC <AmiBlitz3.ab3@16631>   BSR.w peval
0002DAE2 <AmiBlitz3.ab3@16632>   MOVE.l (a7)+,rightsidetype
0002DAE8 <AmiBlitz3.ab3@16633>   MOVE.l (a7)+,leftsidetype
0002DAEE <AmiBlitz3.ab3@16634>   MOVE.l (a7)+,lasttoken
0002DAF4 <AmiBlitz3.ab3@16635>   MOVE.b (a7)+,blitzparloop
0002DAFA <AmiBlitz3.ab3@16636>   MOVE.b (a7)+,funcparloop
0002DB00 <AmiBlitz3.ab3@16637>   SUBQ.w #4,a2offset
0002DB04 <AmiBlitz3.ab3@16638>   MOVEM.l (A7)+,D3/A3
0002DB08 <AmiBlitz3.ab3@16639>   CMP.w #$2C,D0
0002DB0C <AmiBlitz3.ab3@16640>    BEQ.w JL_0_AC40
0002DB0E <AmiBlitz3.ab3@16641>   TST.b (A3)
0002DB12 <AmiBlitz3.ab3@16642>    BPL.w syntaxerr
0002DB14 <AmiBlitz3.ab3@16645>   MOVE.w (A7)+,D1
0002DB18 <AmiBlitz3.ab3@16646>    BSR.w JL_0_AD04
0002DB1A <AmiBlitz3.ab3@16647>   MOVEA.l (A7)+,A3
0002DB1C <AmiBlitz3.ab3@16648>   SUBQ.w #1,D3
0002DB20 <AmiBlitz3.ab3@16649>    BMI.w JL_0_ACBE
0002DB22 <AmiBlitz3.ab3@16652>   TST.b (A3)+
0002DB26 <AmiBlitz3.ab3@16653>    BPL.w JL_0_AC78
0002DB28 <AmiBlitz3.ab3@16654>   SUBQ.w #1,A3
0002DB2A <AmiBlitz3.ab3@16657>     MOVEQ.l #$00,D1
0002DB2C <AmiBlitz3.ab3@16658>     MOVE.b -(A3),D1
0002DB30 <AmiBlitz3.ab3@16659>     BTST #$4,D1
0002DB34 <AmiBlitz3.ab3@16660>      BNE.w JL_0_ACAA
0002DB3A <AmiBlitz3.ab3@16661>     CMP.w regnum,D1
0002DB3E <AmiBlitz3.ab3@16662>      BCC.w JL_0_AC9E
0002DB40 <AmiBlitz3.ab3@16663>     BSET D1,D5
0002DB42 <AmiBlitz3.ab3@16664>     MOVEQ.l #$0F,D0
0002DB44 <AmiBlitz3.ab3@16665>     SUB.w D1,D0
0002DB46 <AmiBlitz3.ab3@16666>     BSET D0,D4
0002DB48 <AmiBlitz3.ab3@16669>     LSL.w #8,D1
0002DB4A <AmiBlitz3.ab3@16670>     LSL.w #1,D1
0002DB4E <AmiBlitz3.ab3@16671>     ORI.w #$201F,D1
0002DB52 <AmiBlitz3.ab3@16672>   BRA.w JL_0_ACB6
0002DB56 <AmiBlitz3.ab3@16675>     ANDI.w #$7,D1
0002DB58 <AmiBlitz3.ab3@16676>     LSL.w #8,D1
0002DB5A <AmiBlitz3.ab3@16677>     LSL.w #1,D1
0002DB5E <AmiBlitz3.ab3@16678>     ORI.w #$205F,D1
0002DB62 <AmiBlitz3.ab3@16681>      BSR.w writeword
0002DB66 <AmiBlitz3.ab3@16682>   DBF D3,JL_0_AC80
0002DB6C <AmiBlitz3.ab3@16685>   MOVE.w (A7)+,libjsr+2
0002DB72 <AmiBlitz3.ab3@16686>   MOVE.w (A7)+,libbase+2
0002DB78 <AmiBlitz3.ab3@16687>   MOVE.l libbase,D1
0002DB7C <AmiBlitz3.ab3@16688>    BSR.w writelong
0002DB82 <AmiBlitz3.ab3@16689>   MOVE.l libjsr,D1
0002DB86 <AmiBlitz3.ab3@16690>    BSR.w writelong
0002DB8C <AmiBlitz3.ab3@16691>   MOVE.w regnum,D1
0002DB90 <AmiBlitz3.ab3@16692>    BEQ.w JL_0_ACF4
0002DB92 <AmiBlitz3.ab3@16693>   LSL.w #8,D1
0002DB94 <AmiBlitz3.ab3@16694>   LSL.w #1,D1
0002DB98 <AmiBlitz3.ab3@16695>   ORI.w #$2000,D1
0002DB9C <AmiBlitz3.ab3@16696>    BSR.w writeword
0002DB9E <AmiBlitz3.ab3@16699>   MOVE.l (A7)+,D1
0002DBA2 <AmiBlitz3.ab3@16700>    BSR.w JL_0_AD38
0002DBA8 <AmiBlitz3.ab3@16701>    JSR restorea4a5
0002DBAA <AmiBlitz3.ab3@16702>   MOVEQ.l #$03,D2
0002DBAE <AmiBlitz3.ab3@16703>    BSR.w reget
0002DBB2 <AmiBlitz3.ab3@16704> BRA.w JL_0_AF66
0002DBB4 <AmiBlitz3.ab3@16707>   TST.w D3
0002DBB8 <AmiBlitz3.ab3@16708>    BEQ.w JL_0_AD1E
0002DBBC <AmiBlitz3.ab3@16709>   CMP.w #$28,D1
0002DBC0 <AmiBlitz3.ab3@16710>    BNE.w syntaxerr
0002DBC4 <AmiBlitz3.ab3@16711>   CMP.w #$29,D0
0002DBC8 <AmiBlitz3.ab3@16712>    BNE.w syntaxerr
0002DBCC <AmiBlitz3.ab3@16713> BRA.w get1bytemain
0002DBD0 <AmiBlitz3.ab3@16716>   CMP.w #$28,D1
0002DBD4 <AmiBlitz3.ab3@16717>    BNE.w JL_0_AD36
0002DBD8 <AmiBlitz3.ab3@16718>    BSR.w get1bytemain
0002DBDC <AmiBlitz3.ab3@16719>   CMP.w #$29,D0
0002DBE0 <AmiBlitz3.ab3@16720>    BNE.w syntaxerr
0002DBE4 <AmiBlitz3.ab3@16721> BRA.w get1bytemain
0002DBE6 <AmiBlitz3.ab3@16724> RTS
0002DBE8 <AmiBlitz3.ab3@16727>   TST.w D1
0002DBEC <AmiBlitz3.ab3@16728>    BNE.w writelong
0002DBEE <AmiBlitz3.ab3@16729> RTS
0002DBF2 <AmiBlitz3.ab3@16733>   MOVE.w #$48E7,D4
0002DBF4 <AmiBlitz3.ab3@16734>   SWAP D4
0002DBF6 <AmiBlitz3.ab3@16735>   CLR.w D4
0002DBFA <AmiBlitz3.ab3@16736>   MOVE.w #$4CDF,D5
0002DBFC <AmiBlitz3.ab3@16737>   SWAP D5
0002DBFE <AmiBlitz3.ab3@16738>   CLR.w D5
0002DC04 <AmiBlitz3.ab3@16739>   MOVE.w regnum,D1
0002DC08 <AmiBlitz3.ab3@16740>    BEQ.w JL_0_AD74
0002DC0C <AmiBlitz3.ab3@16741>   BSET #$F,D4
0002DC10 <AmiBlitz3.ab3@16742>   BSET #$0,D5
0002DC14 <AmiBlitz3.ab3@16743>   CMP.w #$2,D1
0002DC18 <AmiBlitz3.ab3@16744>    BCS.w JL_0_AD72
0002DC1C <AmiBlitz3.ab3@16747>   BSET #$E,D4
0002DC20 <AmiBlitz3.ab3@16748>   BSET #$1,D5
0002DC22 <AmiBlitz3.ab3@16751> RTS
0002DC28 <AmiBlitz3.ab3@16754>   TST.w fuckpos
0002DC2C <AmiBlitz3.ab3@16755>   BNE.w JL_0_AD6A
0002DC2E <AmiBlitz3.ab3@16756> RTS
0002DC30 <AmiBlitz3.ab3@16759> fuckpos:  Ds.w 1
0002DC36 <AmiBlitz3.ab3@16763>   MOVE.w sbasegot,D1
0002DC3A <AmiBlitz3.ab3@16764>    BEQ.w makesbase__skip
0002DC3E <AmiBlitz3.ab3@16768>   MOVE.w sbgot(PC),D1
0002DC42 <AmiBlitz3.ab3@16769>    BNE.w makesbase__skip2
0002DC4A <AmiBlitz3.ab3@16773>   MOVE.w #$0002,sbgot
0002DC50 <AmiBlitz3.ab3@16774>   MOVE.w movea3a7,D1
0002DC54 <AmiBlitz3.ab3@16775> BRA.w writeword
0002DC56 <AmiBlitz3.ab3@16778> RTS
0002DC5E <AmiBlitz3.ab3@16783>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002DC64 <AmiBlitz3.ab3@16786>   MOVE.l #$C601,D1
0002DC6C <AmiBlitz3.ab3@16787>   MOVE.w #-1,sbasegot
0002DC72 <AmiBlitz3.ab3@16788>   MOVE.l d1,lastinstruction
0002DC76 <AmiBlitz3.ab3@16789>   BSR.w Atokejsr
0002DC78 <AmiBlitz3.ab3@16790> RTS
0002DC82 <AmiBlitz3.ab3@16795>   MOVE.l data1,litdata1
0002DC88 <AmiBlitz3.ab3@16796>   TST.b fast
0002DC8C <AmiBlitz3.ab3@16797>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002DC90 <AmiBlitz3.ab3@16801> BRA 'l50                                                   ;to deactivate
0002DC96 <AmiBlitz3.ab3@16807>   TST.b optistring
0002DC9A <AmiBlitz3.ab3@16808>   BNE.s 'l21
0002DCA0 <AmiBlitz3.ab3@16809>   CLR.b string1
0002DCA8 <AmiBlitz3.ab3@16810>   MOVE.b #1,optistring
0002DCAE <AmiBlitz3.ab3@16811>   TST.b nostringopt
0002DCB2 <AmiBlitz3.ab3@16812>   BNE 'l21
0002DCB4 <AmiBlitz3.ab3@16813>   MOVE.l a5,a4
0002DCB6 <AmiBlitz3.ab3@16814>   SUBQ.l #1,a4
0002DCB8 <AmiBlitz3.ab3@16817>     TST.b (a4)
0002DCBC <AmiBlitz3.ab3@16818>     BMI 'l19a
0002DCC0 <AmiBlitz3.ab3@16819>     BEQ.s 'l20
0002DCC4 <AmiBlitz3.ab3@16820>     CMP.b #$22,(a4)
0002DCC8 <AmiBlitz3.ab3@16821>     BEQ.s 'l19
0002DCCE <AmiBlitz3.ab3@16824>     TST.w string1
0002DCD2 <AmiBlitz3.ab3@16825>     BNE 'l11
0002DCD6 <AmiBlitz3.ab3@16826>     CMP.b #":",(a4)
0002DCDA <AmiBlitz3.ab3@16827>     BEQ.s 'l20
0002DCDE <AmiBlitz3.ab3@16828>     CMP.b #";",(a4)
0002DCE2 <AmiBlitz3.ab3@16829>     BEQ.s 'l20
0002DCE6 <AmiBlitz3.ab3@16830>     CMP.b #"+",(a4)
0002DCEA <AmiBlitz3.ab3@16831>     BEQ.s 'l21
0002DCEE <AmiBlitz3.ab3@16832>     CMP.b #",",(a4)
0002DCF2 <AmiBlitz3.ab3@16833>     BEQ.s 'l20                                             ;was l21
0002DCF6 <AmiBlitz3.ab3@16834>     CMP.b #")",(a4)
0002DCFA <AmiBlitz3.ab3@16835>     BEQ.s 'l20                                             ;was l21
0002DCFC <AmiBlitz3.ab3@16838>     ADDQ.l #1,a4
0002DD00 <AmiBlitz3.ab3@16839> BRA.s 'l10
0002DD08 <AmiBlitz3.ab3@16842>   BCHG #0,string1
0002DD0C <AmiBlitz3.ab3@16843> BRA 'l18
0002DD0E <AmiBlitz3.ab3@16846>   ADDQ.l #1,a4
0002DD10 <AmiBlitz3.ab3@16847>   TST.b (a4)
0002DD14 <AmiBlitz3.ab3@16848>   BEQ 'l21
0002DD18 <AmiBlitz3.ab3@16849> BRA 'l11
0002DD1A <AmiBlitz3.ab3@16852>   MOVE.l a5,a4
0002DD1C <AmiBlitz3.ab3@16853>   SUBQ.l #1,a4
0002DD20 <AmiBlitz3.ab3@16856>   CMP.b #$20,-(a4)
0002DD24 <AmiBlitz3.ab3@16857>   BEQ 'll1
0002DD28 <AmiBlitz3.ab3@16858>   CMP.b #"+",(a4)
0002DD2C <AmiBlitz3.ab3@16859>   BEQ 'l21
0002DD34 <AmiBlitz3.ab3@16874>   MOVE.b #2,optistring
0002DD3C <AmiBlitz3.ab3@16877>   CMP.b #2,optistring
0002DD40 <AmiBlitz3.ab3@16878>   BEQ.s 'l100
0002DD44 <AmiBlitz3.ab3@16881>   BSR.w makesbase
0002DD48 <AmiBlitz3.ab3@16882>   BSR.w pokedata1                                          ;writestringsizespace
0002DD4C <AmiBlitz3.ab3@16883>   BSR.w pokedata1
0002DD4E <AmiBlitz3.ab3@16886>   MOVEQ.l #$00,D2
0002DD54 <AmiBlitz3.ab3@16889>     MOVE.l a5,lastsourcepos
0002DD56 <AmiBlitz3.ab3@16890>     MOVEQ #0,d0
0002DD58 <AmiBlitz3.ab3@16891>     MOVE.b (a5)+,d0
0002DD5A <AmiBlitz3.ab3@16892>     TST.w D0
0002DD5E <AmiBlitz3.ab3@16893>      BEQ.w notqerr
0002DD62 <AmiBlitz3.ab3@16894>     CMP.w #$22,D0                                          ; --- " ---
0002DD66 <AmiBlitz3.ab3@16895>      BEQ.w JL_0_ADF6
0002DD6A <AmiBlitz3.ab3@16896>     CMP.b #"\",d0
0002DD6E <AmiBlitz3.ab3@16897>      BNE 'l1
0002DD72 <AmiBlitz3.ab3@16898>     CMP.b #"\",(a5)
0002DD76 <AmiBlitz3.ab3@16899>      BNE 'l1
0002DD7C <AmiBlitz3.ab3@16900>     TST.b newsyntax
0002DD80 <AmiBlitz3.ab3@16901>      BEQ 'l1
0002DD86 <AmiBlitz3.ab3@16902>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002DD8A <AmiBlitz3.ab3@16903>     BNE 'l2
0002DD8C <AmiBlitz3.ab3@16904>     ADDQ #2,a5
0002DD8E <AmiBlitz3.ab3@16907>     ADDQ.w #1,D2
0002DD90 <AmiBlitz3.ab3@16908>     MOVE.w D0,D1
0002DD94 <AmiBlitz3.ab3@16909>     BSR.w pokedata1b                                        ;writestring
0002DD98 <AmiBlitz3.ab3@16910> BRA.w writestring
0002DD9E <AmiBlitz3.ab3@16913>     JSR check_newconstants
0002DDA2 <AmiBlitz3.ab3@16914> BRA writestring
0002DDA8 <AmiBlitz3.ab3@16917>   NOT instringon
0002DDAE <AmiBlitz3.ab3@16918>   MOVE.w dontwrite,D1
0002DDB2 <AmiBlitz3.ab3@16919>   BNE.w JL_0_AE0A
0002DDBA <AmiBlitz3.ab3@16920>   CMP.b #2,optistring
0002DDBE <AmiBlitz3.ab3@16921>   BEQ 'l10
0002DDC4 <AmiBlitz3.ab3@16922>     MOVEA.l litdata1,A0
0002DDC6 <AmiBlitz3.ab3@16923>     CLR.w (A0)+                                            ;writesize
0002DDC8 <AmiBlitz3.ab3@16924>     MOVE.w D2,(A0)
0002DDCC <AmiBlitz3.ab3@16928>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002DDD2 <AmiBlitz3.ab3@16929>   ADDQ.l #1,data1
0002DDDA <AmiBlitz3.ab3@16930>   BCLR #$0,data1+3
0002DDDC <AmiBlitz3.ab3@16931>   MOVEQ.l #$07,D2
0002DDE0 <AmiBlitz3.ab3@16932> BRA.w get1bytemain
0002DDE4 <AmiBlitz3.ab3@16936>   BSR.w makename2
0002DDE8 <AmiBlitz3.ab3@16937>   BSR.w findlabel2
0002DDEC <AmiBlitz3.ab3@16938>   BEQ.w JL_0_AE4A
0002DDF0 <AmiBlitz3.ab3@16939>   BSR.w addlabelhash
0002DDF4 <AmiBlitz3.ab3@16940>   CLR.l $4(A2)
0002DDF8 <AmiBlitz3.ab3@16941>   CLR.l $8(A2)
0002DE00 <AmiBlitz3.ab3@16943>   MOVE.w linenumat+2,$10(A2)
0002DE06 <AmiBlitz3.ab3@16944>   MOVE.w linenumat,d0
0002DE08 <AmiBlitz3.ab3@16945>   MOVEQ #0,d1
0002DE0C <AmiBlitz3.ab3@16946>   MOVE.b -1(a2,d7),d1
0002DE10 <AmiBlitz3.ab3@16947>   MOVE.w d0,0(a2,d1)
0002DE14 <AmiBlitz3.ab3@16948> BRA.w JL_0_AE52
0002DE18 <AmiBlitz3.ab3@16951>   TST.l $8(A2)
0002DE1C <AmiBlitz3.ab3@16952>   BNE.w JL_0_AE88
0002DE22 <AmiBlitz3.ab3@16955>   MOVEA.l _execbase,A6
0002DE24 <AmiBlitz3.ab3@16956>   MOVEQ.l #$0C+2,D0
0002DE26 <AmiBlitz3.ab3@16957>   MOVEQ.l #$01,D1
0002DE2C <AmiBlitz3.ab3@16958>   MOVE.l mempool,a0
0002DE30 <AmiBlitz3.ab3@16959>   JSR _AllocPooled(a6)
0002DE32 <AmiBlitz3.ab3@16961>   MOVEA.l D0,A0
0002DE36 <AmiBlitz3.ab3@16962>   MOVE.l $4(A2),(A0)
0002DE3A <AmiBlitz3.ab3@16963>   MOVE.l A0,$4(A2)
0002DE42 <AmiBlitz3.ab3@16964>   MOVE.l destpointer,$4(A0)
0002DE46 <AmiBlitz3.ab3@16965>   ADDQ.l #2,$4(A0)
0002DE4E <AmiBlitz3.ab3@16966>   MOVE.w procnum,$8(A0)
0002DE56 <AmiBlitz3.ab3@16967>   MOVE.w linenumat+2,$A(A0)
0002DE5E <AmiBlitz3.ab3@16968>   MOVE.w linenumat,$c(a0)
0002DE60 <AmiBlitz3.ab3@16969> RTS
0002DE64 <AmiBlitz3.ab3@16972>   MOVE.l $4(A2),D1
0002DE68 <AmiBlitz3.ab3@16973>   BTST #$0,D1
0002DE6C <AmiBlitz3.ab3@16974>    BNE.w illlaberr
0002DE72 <AmiBlitz3.ab3@16975>   MOVE.w procnum,D1
0002DE76 <AmiBlitz3.ab3@16976>   CMP.w $10(A2),D1
0002DE7A <AmiBlitz3.ab3@16977>    BNE.w referr
0002DE7C <AmiBlitz3.ab3@16978> RTS
0002DE7E <AmiBlitz3.ab3@16982>   MOVE.w D0,-(A7)
0002DE86 <AmiBlitz3.ab3@16983>   CMP.b #2,optistring
0002DE8A <AmiBlitz3.ab3@16984>   BEQ 'l10
0002DE90 <AmiBlitz3.ab3@16987>   MOVE.w numtoa0,D1
0002DE94 <AmiBlitz3.ab3@16988>    BSR.w writeword
0002DE98 <AmiBlitz3.ab3@16989>    BSR.w addoff
0002DE9E <AmiBlitz3.ab3@16990>   MOVE.l litdata1,D1
0002DEA2 <AmiBlitz3.ab3@16991>    BSR.w writelong
0002DEA8 <AmiBlitz3.ab3@16992>   MOVE.w pushlen,D1
0002DEAC <AmiBlitz3.ab3@16993>    BSR.w writeword
0002DEB0 <AmiBlitz3.ab3@16994>   MOVE.w #$C600,D1
0002DEB4 <AmiBlitz3.ab3@16995>    BSR.w Atokejsr
0002DEB6 <AmiBlitz3.ab3@16996>   MOVE.w (A7)+,D0
0002DEB8 <AmiBlitz3.ab3@16997> RTS
0002DEBA <AmiBlitz3.ab3@17000>   MOVEQ #0,d1
0002DEBE <AmiBlitz3.ab3@17001>   BSR.w pokedata1b
0002DEC4 <AmiBlitz3.ab3@17002>   MOVE.l destpointer,a4
0002DEC8 <AmiBlitz3.ab3@17003>   MOVE.w #$203c,d1
0002DECE <AmiBlitz3.ab3@17004>   TST.w mode
0002DED2 <AmiBlitz3.ab3@17005>   BNE 'lm10
0002DED8 <AmiBlitz3.ab3@17006>    ADDQ.w #4,a2offset
0002DEDC <AmiBlitz3.ab3@17007>   MOVE.w #$2f3c,d1
0002DEE2 <AmiBlitz3.ab3@17010>   TST.w mode
0002DEE6 <AmiBlitz3.ab3@17011>   BEQ 'lm3
0002DEEC <AmiBlitz3.ab3@17012>   MOVE.w regnum,D0
0002DEEE <AmiBlitz3.ab3@17013>   LSL.w #8,D0
0002DEF0 <AmiBlitz3.ab3@17014>   LSL.w #1,D0
0002DEF2 <AmiBlitz3.ab3@17015>   OR.w d0,d1
0002DEF6 <AmiBlitz3.ab3@17016>   BSR writeword
0002DEFA <AmiBlitz3.ab3@17017>   BSR.w addoff
0002DF00 <AmiBlitz3.ab3@17018>   MOVE.l litdata1,D1
0002DF04 <AmiBlitz3.ab3@17019>   BSR.w writelong
0002DF0C <AmiBlitz3.ab3@17020>   CMP.w #3,mode
0002DF10 <AmiBlitz3.ab3@17021>   BEQ 'l30
0002DF16 <AmiBlitz3.ab3@17022>    ADDQ.w #4,a2offset
0002DF1A <AmiBlitz3.ab3@17023>   MOVE.w #$4878,D1
0002DF1E <AmiBlitz3.ab3@17024>   BSR.w writeword
0002DF20 <AmiBlitz3.ab3@17025>   MOVE.l d2,d1
0002DF24 <AmiBlitz3.ab3@17026>   BSR writeword
0002DF26 <AmiBlitz3.ab3@17029>   MOVE.w (A7)+,D0
0002DF28 <AmiBlitz3.ab3@17030> RTS
0002DF2E <AmiBlitz3.ab3@17033>   MOVE.l #$3f3c0007,d1
0002DF32 <AmiBlitz3.ab3@17034>   BSR writelong
0002DF38 <AmiBlitz3.ab3@17035>   MOVE.w regnum,D1
0002DF3A <AmiBlitz3.ab3@17036>   LSL.w #8,D1
0002DF3C <AmiBlitz3.ab3@17037>   LSL.w #1,D1
0002DF40 <AmiBlitz3.ab3@17038>   ORI.w #$2f3c,d1
0002DF44 <AmiBlitz3.ab3@17039>   BSR writeword
0002DF4A <AmiBlitz3.ab3@17040>    ADDQ.w #4,a2offset
0002DF4C <AmiBlitz3.ab3@17041>   MOVE.l d2,d1
0002DF50 <AmiBlitz3.ab3@17042>   BSR writelong
0002DF54 <AmiBlitz3.ab3@17043>   MOVE.w #$2f3c,d1
0002DF58 <AmiBlitz3.ab3@17044>   BSR writeword
0002DF5C <AmiBlitz3.ab3@17045>   BSR.w addoff
0002DF62 <AmiBlitz3.ab3@17046>   MOVE.l litdata1,D1
0002DF66 <AmiBlitz3.ab3@17047>   BSR.w writelong
0002DF68 <AmiBlitz3.ab3@17048>   MOVE.w (A7)+,D0
0002DF6A <AmiBlitz3.ab3@17049> RTS
0002DF6E <AmiBlitz3.ab3@17053>   BSR.w get1bytemain
0002DF72 <AmiBlitz3.ab3@17054>    BSR.w JL_0_AE22
0002DF78 <AmiBlitz3.ab3@17055>   MOVE.w regnum,D1
0002DF7A <AmiBlitz3.ab3@17056>   LSL.w #8,D1
0002DF7C <AmiBlitz3.ab3@17057>   LSL.w #1,D1
0002DF80 <AmiBlitz3.ab3@17058>   ORI.w #$203C,D1
0002DF84 <AmiBlitz3.ab3@17059>    BSR.w writeword
0002DF88 <AmiBlitz3.ab3@17060>    BSR.w addoff
0002DF8C <AmiBlitz3.ab3@17061>   MOVE.l $8(A2),D1
0002DF90 <AmiBlitz3.ab3@17062>    BSR.w writelong
0002DF92 <AmiBlitz3.ab3@17063>   MOVEQ.l #$03,D2
0002DF98 <AmiBlitz3.ab3@17064>   CLR.b peekaddrsize
0002DF9C <AmiBlitz3.ab3@17065> BRA.w reget
0002DF9E <AmiBlitz3.ab3@17068>   MOVEQ.l #$00,D3
0002DFA2 <AmiBlitz3.ab3@17071>   BSR.w get1bytemain
0002DFA6 <AmiBlitz3.ab3@17072>    BEQ.w syntaxerr
0002DFAA <AmiBlitz3.ab3@17073>   CMP.w #$22,D0
0002DFAE <AmiBlitz3.ab3@17074>    BEQ.w JL_0_AF1A
0002DFB0 <AmiBlitz3.ab3@17075>   LSL.l #8,D3
0002DFB2 <AmiBlitz3.ab3@17076>   MOVE.b D0,D3
0002DFB6 <AmiBlitz3.ab3@17077> BRA.w JL_0_AF02
0002DFBA <AmiBlitz3.ab3@17080>   BSR.w get1bytemain
0002DFBE <AmiBlitz3.ab3@17081> BRA.w JL_0_B46E
0002DFC0 <AmiBlitz3.ab3@17084>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002DFC4 <AmiBlitz3.ab3@17085>    BSR.w makename2
0002DFC8 <AmiBlitz3.ab3@17086>    BSR.w findlabel2
0002DFCC <AmiBlitz3.ab3@17087>    BEQ.w 'l10
0002DFD2 <AmiBlitz3.ab3@17088>    LEA ptr_parameterstore,a0
0002DFD8 <AmiBlitz3.ab3@17089>    CMP.b #"@",-1(a0,d2.w)
0002DFDC <AmiBlitz3.ab3@17090>    BNE cnferr
0002DFE0 <AmiBlitz3.ab3@17091>    CLR.b -1(a0,d2.w)
0002DFE2 <AmiBlitz3.ab3@17092>    SUBQ.l #1,d2
0002DFE8 <AmiBlitz3.ab3@17093>    LEA varbase,a2
0002DFEC <AmiBlitz3.ab3@17094>    BSR findvariable
0002DFF0 <AmiBlitz3.ab3@17095>    BNE cnferr
0002DFF4 <AmiBlitz3.ab3@17096>    CMP.b #"\",d0
0002DFF8 <AmiBlitz3.ab3@17097>    BNE 'l6
0002DFFE <AmiBlitz3.ab3@17098>    ADDQ #1,lastsourcepos
0002E002 <AmiBlitz3.ab3@17099>    MOVE.l $a(a2),a2
0002E004 <AmiBlitz3.ab3@17100>    ADDQ.l #4,a2
0002E008 <AmiBlitz3.ab3@17101>    BSR.w makename2
0002E00C <AmiBlitz3.ab3@17102>    BSR findvariable2
0002E010 <AmiBlitz3.ab3@17103>    BNE cnferr
0002E014 <AmiBlitz3.ab3@17104> BRA.s 'l6                                                  ;???
0002E018 <AmiBlitz3.ab3@17107>    MOVE.w $4(a2),d3
0002E01A <AmiBlitz3.ab3@17108>    EXT.l d3
0002E01E <AmiBlitz3.ab3@17109> BRA JL_0_AF46
0002E022 <AmiBlitz3.ab3@17112>   MOVE.l $8(A2),D3
0002E02A <AmiBlitz3.ab3@17113>   CMPI.l #$1,$4(A2)
0002E02E <AmiBlitz3.ab3@17114>    BEQ.w JL_0_AF46
0002E034 <AmiBlitz3.ab3@17115>   NOT.w asmtype
0002E036 <AmiBlitz3.ab3@17118>   MOVE.w (A7)+,D2
0002E03A <AmiBlitz3.ab3@17119> BRA.w JL_0_B46E
0002E03C <AmiBlitz3.ab3@17123>   MOVE.w D2,-(A7)
0002E040 <AmiBlitz3.ab3@17124>    BSR.w getparameter
0002E044 <AmiBlitz3.ab3@17125>   CMP.w #"{",D0                                          ;test if var = function{}
0002E048 <AmiBlitz3.ab3@17126>    BEQ.w isfunction
0002E04C <AmiBlitz3.ab3@17127>    BSR.w JL_0_8E3C
0002E050 <AmiBlitz3.ab3@17129>    BSR.w calcvar                                         ;getvaroffset+type
0002E054 <AmiBlitz3.ab3@17130>    BSR.w JL_0_B150
0002E05A <AmiBlitz3.ab3@17131>    MOVE.l a2,rightsidetype
0002E060 <AmiBlitz3.ab3@17142>    TST.b typecheck
0002E064 <AmiBlitz3.ab3@17143>    BEQ JL_0_AF66
0002E06E <AmiBlitz3.ab3@17144>    CMP.l #$da01,lasttoken                                  ;poke
0002E072 <AmiBlitz3.ab3@17145>    BEQ 'l1
0002E07C <AmiBlitz3.ab3@17146>    CMP.l #$da02,lasttoken                                  ;peek
0002E080 <AmiBlitz3.ab3@17147>    BNE 'l2
0002E088 <AmiBlitz3.ab3@17150>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E08C <AmiBlitz3.ab3@17151>    BNE JL_0_AF66
0002E092 <AmiBlitz3.ab3@17152>    MOVE.b d2,peekaddrsize
0002E096 <AmiBlitz3.ab3@17153>    BRA JL_0_AF66
0002E09C <AmiBlitz3.ab3@17156>   CLR.b peekaddrsize
0002E0A0 <AmiBlitz3.ab3@17159>   CMP.w #$1,D2
0002E0A4 <AmiBlitz3.ab3@17160>    BNE.w JL_0_AF7C
0002E0AA <AmiBlitz3.ab3@17161>   MOVE.w regnum,D1
0002E0AE <AmiBlitz3.ab3@17162>   ORI.w #$4880,D1
0002E0B2 <AmiBlitz3.ab3@17163>    BSR.w writeword
0002E0B4 <AmiBlitz3.ab3@17166>   MOVE.w (A7)+,D3
0002E0B8 <AmiBlitz3.ab3@17167>    BEQ.w JL_0_AF9E
0002E0BE <AmiBlitz3.ab3@17168>    MOVE.l lastinstructionaddr,a0
0002E0C2 <AmiBlitz3.ab3@17169>   CMP.w #$3,D3
0002E0C6 <AmiBlitz3.ab3@17170>    BNE.w JL_0_AF92
0002E0CA <AmiBlitz3.ab3@17171>   CMP.w #$4,D2
0002E0CE <AmiBlitz3.ab3@17172>    BEQ.w JL_0_AF98
0002E0D0 <AmiBlitz3.ab3@17175>   CMP.w D2,D3
0002E0D4 <AmiBlitz3.ab3@17176>    BLS.w JL_0_AF9E
0002E0D6 <AmiBlitz3.ab3@17179>   EXG.l D2,D3
0002E0D8 <AmiBlitz3.ab3@17180>   MOVE.l a0,-(a7)
0002E0DE <AmiBlitz3.ab3@17181>   TST.b typecheck
0002E0E2 <AmiBlitz3.ab3@17182>   BEQ 'ok
0002E0E8 <AmiBlitz3.ab3@17183>   TST.b notypecheck
0002E0EC <AmiBlitz3.ab3@17184>   BNE 'ok
0002E0F2 <AmiBlitz3.ab3@17185>   MOVE.l leftsidetype,a0
0002E0FC <AmiBlitz3.ab3@17186>   CMP.l #0,leftsidetype
0002E100 <AmiBlitz3.ab3@17187>   BEQ 'ok
0002E108 <AmiBlitz3.ab3@17188>   CMP.l #$100,4(a0)
0002E10C <AmiBlitz3.ab3@17189>   BLE 'ok
0002E110 <AmiBlitz3.ab3@17190>   CMP.b #3,d3
0002E114 <AmiBlitz3.ab3@17191>   BEQ 'ok
0002E118 <AmiBlitz3.ab3@17192>   CMP.b #7,d3
0002E11C <AmiBlitz3.ab3@17193>   BEQ 'ok
0002E122 <AmiBlitz3.ab3@17194>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E124 <AmiBlitz3.ab3@17196>   MOVE.l (a7)+,a0
0002E128 <AmiBlitz3.ab3@17197>   BSR.w writeconvertcode         ;called from var assign
0002E12C <AmiBlitz3.ab3@17200> BRA.w reget
0002E12E <AmiBlitz3.ab3@17203>   MOVEQ.l #$00,D3
0002E134 <AmiBlitz3.ab3@17204>   MOVE.w regnum,D1
0002E138 <AmiBlitz3.ab3@17205>    BEQ.w JL_0_AFC8
0002E13A <AmiBlitz3.ab3@17206>   SUBQ.w #1,D1
0002E13C <AmiBlitz3.ab3@17209>      LSR.l #1,D3
0002E140 <AmiBlitz3.ab3@17210>      BSET #$F,D3
0002E144 <AmiBlitz3.ab3@17211>   DBF D1,JL_0_AFB0b
0002E14A <AmiBlitz3.ab3@17213>    TST.b fpu
0002E14E <AmiBlitz3.ab3@17214>    BEQ 'l1
0002E154 <AmiBlitz3.ab3@17215>    ADDQ.l #2,stacktrack                                    ;intern command
0002E156 <AmiBlitz3.ab3@17216>     MOVE.l a0,-(a7)
0002E15C <AmiBlitz3.ab3@17217>     MOVE.l stacktrack,d1
0002E162 <AmiBlitz3.ab3@17218>     LEA fpustackbase,a0
0002E166 <AmiBlitz3.ab3@17219>     CLR.w 0(a0,d1)
0002E16C <AmiBlitz3.ab3@17220>     CLR.w regmask
0002E16E <AmiBlitz3.ab3@17221>     MOVE.l (a7)+,a0
0002E172 <AmiBlitz3.ab3@17224>   MOVE.w #$48E7,D1
0002E176 <AmiBlitz3.ab3@17225>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E178 <AmiBlitz3.ab3@17226>   MOVE.w D3,D1
0002E17C <AmiBlitz3.ab3@17227> BRA.w writeword
0002E17E <AmiBlitz3.ab3@17232>   MOVEQ.l #$00,D3
0002E184 <AmiBlitz3.ab3@17233>   MOVE.w regnum,D1
0002E188 <AmiBlitz3.ab3@17234>    BEQ.w JL_0_AFC8
0002E18A <AmiBlitz3.ab3@17235>   SUBQ.w #1,D1
0002E18C <AmiBlitz3.ab3@17238>     LSR.l #1,D3
0002E190 <AmiBlitz3.ab3@17239>     BSET #$F,D3
0002E194 <AmiBlitz3.ab3@17240>   DBF D1,JL_0_AFB0
0002E19A <AmiBlitz3.ab3@17242>    TST.b fpu
0002E19E <AmiBlitz3.ab3@17243>    BEQ 'l1
0002E1A4 <AmiBlitz3.ab3@17244>    ADDQ.l #2,stacktrack                                    ;intern command
0002E1A6 <AmiBlitz3.ab3@17245>     MOVE.l a0,-(a7)
0002E1AC <AmiBlitz3.ab3@17246>     MOVE.l stacktrack,d1
0002E1B2 <AmiBlitz3.ab3@17247>     LEA fpustackbase,a0
0002E1B6 <AmiBlitz3.ab3@17248>     CLR.w 0(a0,d1)
0002E1BA <AmiBlitz3.ab3@17249>    CMP.b #5,(a3)                                           ;result float ?
0002E1BE <AmiBlitz3.ab3@17250>     BNE 'nofpu
0002E1C8 <AmiBlitz3.ab3@17252>     MOVE.w regnum,regnumfunc
0002E1CE <AmiBlitz3.ab3@17255>   CLR.w regmask
0002E1D0 <AmiBlitz3.ab3@17256>     MOVE.l (a7)+,a0
0002E1D4 <AmiBlitz3.ab3@17259>   MOVE.w #$48E7,D1
0002E1D8 <AmiBlitz3.ab3@17260>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E1DA <AmiBlitz3.ab3@17261>   MOVE.w D3,D1
0002E1DE <AmiBlitz3.ab3@17262> BRA.w writeword
0002E1E0 <AmiBlitz3.ab3@17265> RTS
0002E1E2 <AmiBlitz3.ab3@17269>   MOVE.l D1,-(A7)
0002E1E6 <AmiBlitz3.ab3@17270>   MOVE.w #$4EB9,D1
0002E1EA <AmiBlitz3.ab3@17271>    BSR.w writeword
0002E1EE <AmiBlitz3.ab3@17272>    BSR.w addoff
0002E1F0 <AmiBlitz3.ab3@17273>   MOVE.l (A7)+,D1
0002E1F4 <AmiBlitz3.ab3@17274> BRA.w writelong
0002E1F8 <AmiBlitz3.ab3@17278>    BSR.w findproc                                          ;write function call
0002E1FC <AmiBlitz3.ab3@17279>    BEQ 'l1
0002E202 <AmiBlitz3.ab3@17280>    TST.l unusedfunc
0002E206 <AmiBlitz3.ab3@17281>    BEQ noprocerr
0002E20C <AmiBlitz3.ab3@17283>    JSR gotoendsource
0002E214 <AmiBlitz3.ab3@17286>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E21A <AmiBlitz3.ab3@17287>   TST.l typetocast
0002E21E <AmiBlitz3.ab3@17288>   BEQ 'nocast
0002E228 <AmiBlitz3.ab3@17289>   MOVE.l typetocast,rightsidetype
0002E22E <AmiBlitz3.ab3@17290>   CLR.l typetocast
0002E230 <AmiBlitz3.ab3@17291>   MOVE.l a1,-(a7)
0002E236 <AmiBlitz3.ab3@17292>   MOVE.l rightsidetype,a1
0002E23C <AmiBlitz3.ab3@17293>   CMP.l leftsidetype,a1
0002E240 <AmiBlitz3.ab3@17294>   BEQ 'ok
0002E246 <AmiBlitz3.ab3@17295>   JMP errorconvertreturntype2
0002E248 <AmiBlitz3.ab3@17296> 'ok  MOVE.l (a7)+,a1
0002E24A <AmiBlitz3.ab3@17298>   MOVEQ.l #$00,D1
0002E24E <AmiBlitz3.ab3@17299>   MOVE.b $5(A2),D1
0002E254 <AmiBlitz3.ab3@17300>   MOVE.b d1,retmode
0002E258 <AmiBlitz3.ab3@17301>    BMI.w illprocerr
0002E25E <AmiBlitz3.ab3@17302>    MOVE.b #1,isfunc(a2)
0002E260 <AmiBlitz3.ab3@17303>   MOVE.w D1,-(A7)
0002E262 <AmiBlitz3.ab3@17304>   MOVEQ.l #$00,D1
0002E266 <AmiBlitz3.ab3@17305>   MOVE.b $4(A2),D1
0002E268 <AmiBlitz3.ab3@17306>   LSR.w #4,D1
0002E26C <AmiBlitz3.ab3@17307>    BEQ.w JL_0_B006
0002E26E <AmiBlitz3.ab3@17308>   LSL.w #2,D1
0002E274 <AmiBlitz3.ab3@17309>   SUB.w D1,a2offset
0002E278 <AmiBlitz3.ab3@17312>   CMPI.w #$7,(A7)
0002E27C <AmiBlitz3.ab3@17313>    BNE.b JL_0_B014
0002E27E <AmiBlitz3.ab3@17314>   MOVE.l A2,-(A7)
0002E282 <AmiBlitz3.ab3@17315>    BSR.w makesbase
0002E284 <AmiBlitz3.ab3@17316>   MOVEA.l (A7)+,A2
0002E28A <AmiBlitz3.ab3@17319>   MOVE.w sbasegot,-(A7)
0002E28E <AmiBlitz3.ab3@17320>    BEQ.b JL_0_B020
0002E292 <AmiBlitz3.ab3@17321>    BSR.w dopusha3
0002E296 <AmiBlitz3.ab3@17324>   BSR.w JL_0_AFA2func
0002E298 <AmiBlitz3.ab3@17325>   MOVE.w D3,-(A7)
0002E29C <AmiBlitz3.ab3@17326>   MOVE.l $E(A2),D1
0002E2A0 <AmiBlitz3.ab3@17327>   TST.b $20(a2)                                            ;increase if morepar
0002E2A4 <AmiBlitz3.ab3@17328>   BNE 'no0par
0002E2A6 <AmiBlitz3.ab3@17329>   MOVE.l a5,a4
0002E2AA <AmiBlitz3.ab3@17332>   CMP.b #$20,(a4)+
0002E2AE <AmiBlitz3.ab3@17333>   BEQ 'l1
0002E2B4 <AmiBlitz3.ab3@17334>   CMP.b #"}",-1(a4)
0002E2B8 <AmiBlitz3.ab3@17335>   BNE  'no0par
0002E2BA <AmiBlitz3.ab3@17336>   MOVEQ #0,d0
0002E2BE <AmiBlitz3.ab3@17339>   LEA $16(A2),A1
0002E2C0 <AmiBlitz3.ab3@17342>   MOVE.l d1,-(a7)
0002E2C2 <AmiBlitz3.ab3@17343>   MOVE.b (a1),d2
0002E2C4 <AmiBlitz3.ab3@17344>   MOVE.l d0,d1
0002E2C8 <AmiBlitz3.ab3@17345>   CMP.w #4,d2
0002E2CC <AmiBlitz3.ab3@17346>   BNE 'l1b
0002E2D2 <AmiBlitz3.ab3@17347>   ADD.l #$203c,d1
0002E2D6 <AmiBlitz3.ab3@17348>   BSR writeword
0002E2DC <AmiBlitz3.ab3@17349>   MOVE.l #$ffff0000,d1
0002E2E0 <AmiBlitz3.ab3@17350>   BSR writelong
0002E2E4 <AmiBlitz3.ab3@17351> BRA 'l2b
0002E2EA <AmiBlitz3.ab3@17354>    TST.b fpu
0002E2EE <AmiBlitz3.ab3@17355>    BNE 'l1c
0002E2F2 <AmiBlitz3.ab3@17356>    CMP.w #5,d2
0002E2F6 <AmiBlitz3.ab3@17357>    BNE 'l1c
0002E2FC <AmiBlitz3.ab3@17358>    ADD.l #$203c,d1
0002E300 <AmiBlitz3.ab3@17359>    BSR writeword
0002E306 <AmiBlitz3.ab3@17360>    MOVE.l #$800000c1,d1
0002E30A <AmiBlitz3.ab3@17361>    BSR writelong
0002E30E <AmiBlitz3.ab3@17362> BRA 'l2b
0002E314 <AmiBlitz3.ab3@17365>   ADD.l #$70ff,d1
0002E318 <AmiBlitz3.ab3@17366>   BSR writeword
0002E31C <AmiBlitz3.ab3@17367>   CMP.w #7,d2
0002E320 <AmiBlitz3.ab3@17368>   BNE 'l1d
0002E326 <AmiBlitz3.ab3@17369>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E32A <AmiBlitz3.ab3@17370>   BSR writelong
0002E32C <AmiBlitz3.ab3@17371>   MOVEQ #0,d1
0002E330 <AmiBlitz3.ab3@17372>   BSR writeword
0002E336 <AmiBlitz3.ab3@17373>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E33A <AmiBlitz3.ab3@17374>   BSR writelong
0002E33C <AmiBlitz3.ab3@17375>   MOVEQ #0,d1
0002E340 <AmiBlitz3.ab3@17376>   BSR writeword
0002E346 <AmiBlitz3.ab3@17378> 'l1d  MOVE.l #$f23c5000,d1
0002E348 <AmiBlitz3.ab3@17379>   MOVE.l d0,d2
0002E34A <AmiBlitz3.ab3@17380>   ASR.l #2,d2
0002E34C <AmiBlitz3.ab3@17381>   ADD.l d2,d1
0002E350 <AmiBlitz3.ab3@17382>   BSR writelong
0002E354 <AmiBlitz3.ab3@17383>   MOVE.w #$ffff,d1
0002E358 <AmiBlitz3.ab3@17384>   BSR writeword
0002E35A <AmiBlitz3.ab3@17388>   MOVE.l (a7)+,d1
0002E35C <AmiBlitz3.ab3@17389>      ADDQ.l #1,a1
0002E362 <AmiBlitz3.ab3@17390>      ADD.l #$0200,d0
0002E368 <AmiBlitz3.ab3@17391>      CMP.l #$0e00,d0
0002E36C <AmiBlitz3.ab3@17392>      BEQ syntaxerr
0002E36E <AmiBlitz3.ab3@17393>      TST.b (a1)
0002E372 <AmiBlitz3.ab3@17394>      BNE 'again
0002E376 <AmiBlitz3.ab3@17395> BRA 'p1
0002E37A <AmiBlitz3.ab3@17398>   TST.b $4(A2)
0002E37E <AmiBlitz3.ab3@17399>    BNE.w JL_0_B03E
0002E382 <AmiBlitz3.ab3@17402>   BSR.w JL_0_AFCA
0002E386 <AmiBlitz3.ab3@17403>    BSR.w get1bytemain
0002E38A <AmiBlitz3.ab3@17404> BRA.w JL_0_B06C
0002E390 <AmiBlitz3.ab3@17408>   MOVE.w regnum,-(A7)
0002E39A <AmiBlitz3.ab3@17409>   MOVE.w regnum,regnumfunc
0002E39C <AmiBlitz3.ab3@17412>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002E3A4 <AmiBlitz3.ab3@17413>   MOVE.b #1,funccall
0002E3A6 <AmiBlitz3.ab3@17414>   MOVEQ.l #$00,D0
0002E3AA <AmiBlitz3.ab3@17415>   MOVE.b $4(A2),D0
0002E3B4 <AmiBlitz3.ab3@17416>   MOVE.w a2offset,a2offset2
0002E3BC <AmiBlitz3.ab3@17417>   MOVE.b 5(a2),retmode
0002E3C2 <AmiBlitz3.ab3@17418>   MOVE.l a2,currentfunccall
0002E3C6 <AmiBlitz3.ab3@17419>   LEA $16(A2),A2
0002E3CC <AmiBlitz3.ab3@17420>   CLR.w regnum
0002E3D2 <AmiBlitz3.ab3@17421>   CLR.w regmask
0002E3D8 <AmiBlitz3.ab3@17422>   MOVE.b isconstantvalue,-(a7)
0002E3DE <AmiBlitz3.ab3@17423>   MOVE.b funcparloop,-(a7)
0002E3E6 <AmiBlitz3.ab3@17424>   MOVE.b #1,funcparloop
0002E3EC <AmiBlitz3.ab3@17425>   MOVE.l rightsidetype,-(a7)
0002E3F2 <AmiBlitz3.ab3@17426>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002E3F8 <AmiBlitz3.ab3@17427>   MOVE.b blitzparloop,-(a7)
0002E3FE <AmiBlitz3.ab3@17428>   CLR.b blitzparloop
0002E404 <AmiBlitz3.ab3@17429>   JSR fetchpees2
0002E40A <AmiBlitz3.ab3@17430>   MOVE.b (a7)+,blitzparloop
0002E410 <AmiBlitz3.ab3@17431>   MOVE.l (a7)+,leftsidetype
0002E416 <AmiBlitz3.ab3@17432>   MOVE.l (a7)+,rightsidetype
0002E41C <AmiBlitz3.ab3@17433>   MOVE.b (a7)+,funcparloop
0002E422 <AmiBlitz3.ab3@17434>   MOVE.b (a7)+,isconstantvalue
0002E428 <AmiBlitz3.ab3@17435>   JSR chkstak
0002E42A <AmiBlitz3.ab3@17436>   MOVE.l (A7)+,D1
0002E42E <AmiBlitz3.ab3@17452>    BTST #0,d1
0002E432 <AmiBlitz3.ab3@17453>    BNE intern1
0002E436 <AmiBlitz3.ab3@17454>    BSR.w JL_0_AFCA
0002E43C <AmiBlitz3.ab3@17476>   MOVE.w (A7)+,regnum
0002E440 <AmiBlitz3.ab3@17479>   CMP.w #"}",D0
0002E444 <AmiBlitz3.ab3@17480>    BNE.w errorbracketmiss2
0002E446 <AmiBlitz3.ab3@17481>    MOVEQ #0,d1                                            ; end of function call pars
0002E44C <AmiBlitz3.ab3@17482>   MOVE.w regnum,D1
0002E450 <AmiBlitz3.ab3@17483>    BEQ.w JL_0_B08A
0002E456 <AmiBlitz3.ab3@17484>    TST.b fpu
0002E45A <AmiBlitz3.ab3@17485>    BEQ 'old
0002E462 <AmiBlitz3.ab3@17486>    CMP.b #5,retmode
0002E466 <AmiBlitz3.ab3@17487>    BNE 'old
0002E468 <AmiBlitz3.ab3@17488>    ASL.l #7,d1
0002E46E <AmiBlitz3.ab3@17489>    OR.l #$f2000000,d1
0002E472 <AmiBlitz3.ab3@17490>    BSR writelong
0002E476 <AmiBlitz3.ab3@17491> BRA JL_0_B08A
0002E478 <AmiBlitz3.ab3@17493>  'old  LSL.w #8,D1
0002E47A <AmiBlitz3.ab3@17494>   LSL.w #1,D1
0002E47E <AmiBlitz3.ab3@17495>   ORI.w #$2000,D1
0002E482 <AmiBlitz3.ab3@17496>    BSR.w writeword
0002E484 <AmiBlitz3.ab3@17499>    MOVE.w (A7)+,D3
0002E488 <AmiBlitz3.ab3@17500>    BEQ.w JL_0_B0A8
0002E48E <AmiBlitz3.ab3@17501>    TST.b fpu
0002E492 <AmiBlitz3.ab3@17502>    BEQ 'old
0002E494 <AmiBlitz3.ab3@17503>    MOVE.l d0,-(a7)
0002E498 <AmiBlitz3.ab3@17504>    MOVE.w #8,d0
0002E49A <AmiBlitz3.ab3@17505>    MOVE.l a0,-(a7)
0002E4A0 <AmiBlitz3.ab3@17506>    MOVE.l stacktrack,d1
0002E4A6 <AmiBlitz3.ab3@17507>    LEA fpustackbase,a0
0002E4AE <AmiBlitz3.ab3@17508>    MOVE.w 0(a0,d1),regmask
0002E4B0 <AmiBlitz3.ab3@17509>    MOVE.l (a7)+,a0
0002E4B4 <AmiBlitz3.ab3@17512>   BEQ 'ready
0002E4BA <AmiBlitz3.ab3@17513>    BTST d0,regmask
0002E4BE <AmiBlitz3.ab3@17514>    BEQ 'noa7
0002E4C0 <AmiBlitz3.ab3@17515>    MOVEQ #0,d1
0002E4C2 <AmiBlitz3.ab3@17516>    MOVE.w d0,d1
0002E4C4 <AmiBlitz3.ab3@17517>    SUBQ.w #1,d1
0002E4C6 <AmiBlitz3.ab3@17518>    ASL #7,d1
0002E4CC <AmiBlitz3.ab3@17520>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002E4D0 <AmiBlitz3.ab3@17521>    BSR writelong
0002E4D6 <AmiBlitz3.ab3@17522>    SUBQ.l #2,stacktrack
0002E4D8 <AmiBlitz3.ab3@17525>    SUBQ.w #1,d0
0002E4DC <AmiBlitz3.ab3@17526>    BNE 'loop
0002E4E2 <AmiBlitz3.ab3@17529>   SUBQ.l #2,stacktrack                                     ;integer sub
0002E4E4 <AmiBlitz3.ab3@17530>   MOVE.l (a7)+,d0
0002E4E8 <AmiBlitz3.ab3@17533>   MOVE.w #$4CDF,D1
0002E4EC <AmiBlitz3.ab3@17534>    BSR.w writeword
0002E4EE <AmiBlitz3.ab3@17535>   MOVEQ.l #$00,D1
0002E4F0 <AmiBlitz3.ab3@17536>   MOVEQ.l #$0F,D4
0002E4F2 <AmiBlitz3.ab3@17539>     LSL.w #1,D3
0002E4F4 <AmiBlitz3.ab3@17540>     ROXR.w #1,D1
0002E4F8 <AmiBlitz3.ab3@17541>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002E4FC <AmiBlitz3.ab3@17543>     BSR.w writeword
0002E502 <AmiBlitz3.ab3@17544>    CLR.w regnumfunc
0002E504 <AmiBlitz3.ab3@17547>   MOVE.w (A7)+,D1
0002E508 <AmiBlitz3.ab3@17548>    BEQ.b JL_0_B0D2
0002E50C <AmiBlitz3.ab3@17549>   CMPI.w #$7,(A7)
0002E510 <AmiBlitz3.ab3@17550>    BEQ.b JL_0_B0C4
0002E516 <AmiBlitz3.ab3@17551>   LEA geta3,A0
0002E51C <AmiBlitz3.ab3@17552>   LEA numtoa0,A1
0002E520 <AmiBlitz3.ab3@17553>    BSR.w pokecode
0002E524 <AmiBlitz3.ab3@17554> BRA.b JL_0_B0CE
0002E52A <AmiBlitz3.ab3@17557>   MOVE.w deca3,D1
0002E52E <AmiBlitz3.ab3@17558>    BSR.w writeword
0002E532 <AmiBlitz3.ab3@17561>   BSR.w dopulla3                                           ;fix up string base
0002E534 <AmiBlitz3.ab3@17564>   MOVE.w (A7)+,D2                                          ;what it returns!
0002E538 <AmiBlitz3.ab3@17565>   CMP.w #$7,D2
0002E53C <AmiBlitz3.ab3@17566>    BNE.w JL_0_B0EC
0002E542 <AmiBlitz3.ab3@17567>   MOVE.w putstlen,D1
0002E548 <AmiBlitz3.ab3@17568>   OR.w regnum,D1
0002E54C <AmiBlitz3.ab3@17569>    BSR.w writeword
0002E550 <AmiBlitz3.ab3@17572>   BSR.w get1bytemain
0002E554 <AmiBlitz3.ab3@17573> BRA.w JL_0_AF66
0002E556 <AmiBlitz3.ab3@17577> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002E55E <AmiBlitz3.ab3@17582>   CMP.b #2,optistring
0002E562 <AmiBlitz3.ab3@17583>   BEQ fs2
0002E566 <AmiBlitz3.ab3@17584>   BSR.w makesbase                                          ;writestringvariable
0002E56A <AmiBlitz3.ab3@17585>   BTST #$F,D2
0002E56E <AmiBlitz3.ab3@17586>    BNE.w JL_0_B112
0002E574 <AmiBlitz3.ab3@17587>   MOVE.w D3,leaa5d3a2+2
0002E57A <AmiBlitz3.ab3@17588>   MOVE.l leaa5d3a2,D1
0002E57E <AmiBlitz3.ab3@17589>    BSR.w pokela5s
0002E584 <AmiBlitz3.ab3@17592>   MOVE.w regnum,D1
0002E586 <AmiBlitz3.ab3@17593>   LSL.w #8,D1
0002E588 <AmiBlitz3.ab3@17594>   LSL.w #1,D1
0002E58C <AmiBlitz3.ab3@17595>   ORI.w #$7000,D1
0002E592 <AmiBlitz3.ab3@17596>   LEA stvarget2,A0
0002E594 <AmiBlitz3.ab3@17597>   MOVE.w D1,(A0)
0002E59A <AmiBlitz3.ab3@17598>   MOVE.w regnum,D1
0002E5A0 <AmiBlitz3.ab3@17599>   ANDI.w #$FFF8,$2(A0)
0002E5A4 <AmiBlitz3.ab3@17600>   OR.w D1,$2(A0)
0002E5AA <AmiBlitz3.ab3@17601>   LEA stvarget2f,A1
0002E5AE <AmiBlitz3.ab3@17602>    BSR.w pokecode
0002E5B2 <AmiBlitz3.ab3@17603>   MOVE.w #$C600,D1
0002E5B6 <AmiBlitz3.ab3@17604>    BSR.w Atokejsr
0002E5B8 <AmiBlitz3.ab3@17605>   MOVEQ.l #$07,D2
0002E5BC <AmiBlitz3.ab3@17606> BRA.w reget
0002E5C2 <AmiBlitz3.ab3@17609>      TST.w stackpar
0002E5C6 <AmiBlitz3.ab3@17610>      BMI 'l10
0002E5CC <AmiBlitz3.ab3@17611>      MOVE.l #$3f3c0007,d1
0002E5D2 <AmiBlitz3.ab3@17612>      ADDQ.w #2,a2offset
0002E5D6 <AmiBlitz3.ab3@17613>      BSR writelong
0002E5DA <AmiBlitz3.ab3@17616>   MOVE.w #$4878,d1
0002E5E0 <AmiBlitz3.ab3@17617>      CLR.w stackpar
0002E5E4 <AmiBlitz3.ab3@17618>      BSR writeword
0002E5E8 <AmiBlitz3.ab3@17619>      MOVE.w #$0,d1
0002E5EC <AmiBlitz3.ab3@17620>      BSR writeword
0002E5F0 <AmiBlitz3.ab3@17621>      MOVE.w #$246d,d1
0002E5F4 <AmiBlitz3.ab3@17622>      BSR writeword
0002E5F6 <AmiBlitz3.ab3@17623>      MOVE.w d3,d1
0002E5FA <AmiBlitz3.ab3@17624>      BSR writeword
0002E600 <AmiBlitz3.ab3@17625>      MOVE.l #$4a926704,d1
0002E604 <AmiBlitz3.ab3@17626>      BSR writelong
0002E60A <AmiBlitz3.ab3@17627>      MOVE.l #$2eaafffc,d1
0002E60E <AmiBlitz3.ab3@17628>      BSR writelong
0002E612 <AmiBlitz3.ab3@17629>      MOVE.w #$2f0a,d1
0002E618 <AmiBlitz3.ab3@17630>      ADDQ.w #8,a2offset
0002E61C <AmiBlitz3.ab3@17631>      BSR writeword
0002E620 <AmiBlitz3.ab3@17632> BRA.w reget
0002E624 <AmiBlitz3.ab3@17635>   CMP.b #$7,D2                                             ;load basic var
0002E628 <AmiBlitz3.ab3@17636>    BEQ.w JL_0_B0F6
0002E62E <AmiBlitz3.ab3@17638>    TST.b iee
0002E632 <AmiBlitz3.ab3@17639>    BEQ 'noiee
0002E636 <AmiBlitz3.ab3@17640>    CMP.b #5,d2
0002E63A <AmiBlitz3.ab3@17641>    BNE 'noiee
0002E63C <AmiBlitz3.ab3@17642>    MOVE.l d0,-(a7)                                         ;fpu load var
0002E640 <AmiBlitz3.ab3@17643>    BTST #15,d2
0002E644 <AmiBlitz3.ab3@17644>    BEQ 'var
0002E64A <AmiBlitz3.ab3@17645>    CMP.l #$7fff,d3
0002E64E <AmiBlitz3.ab3@17646>    BGT 'longoffset
0002E654 <AmiBlitz3.ab3@17647>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002E656 <AmiBlitz3.ab3@17648>    TST.w d3                                                ;offset =0
0002E65A <AmiBlitz3.ab3@17649>    BNE 'offset
0002E660 <AmiBlitz3.ab3@17652>   MOVE.l #$f2124400,d1
0002E662 <AmiBlitz3.ab3@17653>    MOVEQ #0,d3
0002E666 <AmiBlitz3.ab3@17654> BRA 'glob
0002E66C <AmiBlitz3.ab3@17657>   SUBQ.l #4,destpointer
0002E670 <AmiBlitz3.ab3@17658> BRA 'glob
0002E676 <AmiBlitz3.ab3@17661>   TST.b fast
0002E67A <AmiBlitz3.ab3@17662>    BEQ 'nofastload
0002E680 <AmiBlitz3.ab3@17663>    TST.w regnum
0002E684 <AmiBlitz3.ab3@17664>    BNE 'nofastload
0002E68A <AmiBlitz3.ab3@17665>    CMP.l fp0addr,a4
0002E68E <AmiBlitz3.ab3@17666>    BNE 'nofastload
0002E694 <AmiBlitz3.ab3@17667>    MOVE.l fp0iff,d1
0002E69A <AmiBlitz3.ab3@17668>    CMP.l firstiff,d1
0002E69E <AmiBlitz3.ab3@17669>    BNE 'nofastload
0002E6A4 <AmiBlitz3.ab3@17670>    MOVE.w varmode,d1
0002E6AA <AmiBlitz3.ab3@17671>    CMP.w fp0mode,d1
0002E6AE <AmiBlitz3.ab3@17672>    BNE 'nofastload
0002E6B4 <AmiBlitz3.ab3@17673>    CMP.w fp0var,d3
0002E6B8 <AmiBlitz3.ab3@17674>    BNE 'nofastload
0002E6BC <AmiBlitz3.ab3@17675>    BCLR #16,d2
0002E6BE <AmiBlitz3.ab3@17676>    MOVE.l (a7)+,d0
0002E6C0 <AmiBlitz3.ab3@17677> RTS
0002E6C2 <AmiBlitz3.ab3@17680>    MOVEQ #0,d0
0002E6C8 <AmiBlitz3.ab3@17681>    MOVE.w regnum,d0
0002E6CE <AmiBlitz3.ab3@17682>    CMP.l maxregs,d0
0002E6D2 <AmiBlitz3.ab3@17683>    BLE 'ok
0002E6D8 <AmiBlitz3.ab3@17684>    LEA cmplxerr,a0
0002E6DA <AmiBlitz3.ab3@17685>   MOVE.l a0,-(a7)
0002E6E0 <AmiBlitz3.ab3@17686> JMP handle_compileerror
0002E6E6 <AmiBlitz3.ab3@17689>    LEA regtable,a4
0002E6E8 <AmiBlitz3.ab3@17690>    TST.l (a4)
0002E6EC <AmiBlitz3.ab3@17691>    BEQ 'noreg
0002E6F0 <AmiBlitz3.ab3@17692>    CMP.w 0+4(a4),d3
0002E6F4 <AmiBlitz3.ab3@17693>    BNE 'doreg1
0002E6FA <AmiBlitz3.ab3@17694>    MOVE.l #$f2001c00,d1
0002E700 <AmiBlitz3.ab3@17695>    MOVE.w regnum,d0
0002E702 <AmiBlitz3.ab3@17696>    ASL.w #7,d0
0002E704 <AmiBlitz3.ab3@17697>    OR.w d0,d1
0002E708 <AmiBlitz3.ab3@17698>    BSR writelong
0002E70A <AmiBlitz3.ab3@17699>    MOVE.l (a7)+,d0
0002E70C <AmiBlitz3.ab3@17700> RTS
0002E710 <AmiBlitz3.ab3@17703>   CMP.w 8+4(a4),d3
0002E714 <AmiBlitz3.ab3@17704>    BNE 'doreg2
0002E71A <AmiBlitz3.ab3@17705>    MOVE.l #$f2001800,d1
0002E720 <AmiBlitz3.ab3@17706>    MOVE.w regnum,d0
0002E722 <AmiBlitz3.ab3@17707>    ASL.w #7,d0
0002E724 <AmiBlitz3.ab3@17708>    OR.w d0,d1
0002E728 <AmiBlitz3.ab3@17709>    BSR writelong
0002E72A <AmiBlitz3.ab3@17710>    MOVE.l (a7)+,d0
0002E72C <AmiBlitz3.ab3@17711> RTS
0002E730 <AmiBlitz3.ab3@17714>   CMP.w 16+4(a4),d3
0002E734 <AmiBlitz3.ab3@17715>    BNE 'doreg3
0002E73A <AmiBlitz3.ab3@17716>    MOVE.l #$f2001400,d1
0002E740 <AmiBlitz3.ab3@17717>    MOVE.w regnum,d0
0002E742 <AmiBlitz3.ab3@17718>    ASL.w #7,d0
0002E744 <AmiBlitz3.ab3@17719>    OR.w d0,d1
0002E748 <AmiBlitz3.ab3@17720>    BSR  writelong
0002E74A <AmiBlitz3.ab3@17721>    MOVE.l (a7)+,d0
0002E74C <AmiBlitz3.ab3@17722> RTS
0002E750 <AmiBlitz3.ab3@17725>   CMP.w 24+4(a4),d3
0002E754 <AmiBlitz3.ab3@17726>    BNE 'doreg4
0002E75A <AmiBlitz3.ab3@17727>    MOVE.l #$f2001000,d1
0002E760 <AmiBlitz3.ab3@17728>    MOVE.w regnum,d0
0002E762 <AmiBlitz3.ab3@17729>    ASL.w #7,d0
0002E764 <AmiBlitz3.ab3@17730>    OR.w d0,d1
0002E768 <AmiBlitz3.ab3@17731>    BSR writelong
0002E76A <AmiBlitz3.ab3@17732>    MOVE.l (a7)+,d0
0002E76C <AmiBlitz3.ab3@17733> RTS
0002E770 <AmiBlitz3.ab3@17736>    CMP.w 32+4(a4),d3
0002E774 <AmiBlitz3.ab3@17737>    BNE 'noreg
0002E77A <AmiBlitz3.ab3@17738>    MOVE.l #$f2000c00,d1
0002E780 <AmiBlitz3.ab3@17739>    MOVE.w regnum,d0
0002E782 <AmiBlitz3.ab3@17740>    ASL.w #7,d0
0002E784 <AmiBlitz3.ab3@17741>    OR.w d0,d1
0002E788 <AmiBlitz3.ab3@17742>    BSR writelong
0002E78A <AmiBlitz3.ab3@17743>    MOVE.l (a7)+,d0
0002E78C <AmiBlitz3.ab3@17744> RTS
0002E792 <AmiBlitz3.ab3@17747>    MOVE.l #$f22d4400,d1                                    ;var
0002E798 <AmiBlitz3.ab3@17748>    TST.w varmode
0002E79C <AmiBlitz3.ab3@17749>   BEQ 'glob
0002E7A0 <AmiBlitz3.ab3@17750>   BCLR #16,d1                                              ;local
0002E7A2 <AmiBlitz3.ab3@17753>    MOVEQ #0,d0
0002E7A8 <AmiBlitz3.ab3@17754>    MOVE.w regnum,d0
0002E7AC <AmiBlitz3.ab3@17755>    CMP.w #7,d0
0002E7B0 <AmiBlitz3.ab3@17756>    BLE 'ok2
0002E7B6 <AmiBlitz3.ab3@17757>    LEA cmplxerr,a0
0002E7B8 <AmiBlitz3.ab3@17758>   MOVE.l a0,-(a7)
0002E7BE <AmiBlitz3.ab3@17759> JMP handle_compileerror
0002E7C0 <AmiBlitz3.ab3@17762>      ASL.w #7,d0
0002E7C2 <AmiBlitz3.ab3@17763>    OR.l d0,d1
0002E7CA <AmiBlitz3.ab3@17764>    CMP.l #doublecheck,8(a2)
0002E7CE <AmiBlitz3.ab3@17765>    BNE 'dbl
0002E7D4 <AmiBlitz3.ab3@17766>    OR.l #$00001000,d1
0002E7D8 <AmiBlitz3.ab3@17769>   BSR writelong
0002E7DA <AmiBlitz3.ab3@17770>    MOVE.l (a7)+,d0
0002E7DE <AmiBlitz3.ab3@17771>    AND.w #$ff,d2
0002E7E0 <AmiBlitz3.ab3@17772>    MOVE.w d3,d1
0002E7E4 <AmiBlitz3.ab3@17773>    BEQ 'nooffs
0002E7E8 <AmiBlitz3.ab3@17774> BRA writeword
0002E7EA <AmiBlitz3.ab3@17779> RTS
0002E7F0 <AmiBlitz3.ab3@17782>   MOVE.w regnum,D1
0002E7F6 <AmiBlitz3.ab3@17783>   MOVE.w d1,load_var_reg
0002E7F8 <AmiBlitz3.ab3@17784>   LSL.w #8,D1
0002E802 <AmiBlitz3.ab3@17785>   MOVE.l destpointer,load_var_addr
0002E808 <AmiBlitz3.ab3@17786>   MOVE.w d2,load_var_size
0002E80A <AmiBlitz3.ab3@17787>   LSL.w #1,D1
0002E80E <AmiBlitz3.ab3@17788>   BTST #$E,D2
0002E812 <AmiBlitz3.ab3@17789>    BNE.w JL_0_B17A
0002E814 <AmiBlitz3.ab3@17790>   TST.b D2
0002E818 <AmiBlitz3.ab3@17791>    BNE.w JL_0_B17E
0002E81A <AmiBlitz3.ab3@17792>   MOVEQ.l #$03,D2
0002E81E <AmiBlitz3.ab3@17793>   ORI.w #$200A,D1
0002E822 <AmiBlitz3.ab3@17794> BRA.w writeword
0002E826 <AmiBlitz3.ab3@17797>   MOVE.b #$3,D2
0002E82A <AmiBlitz3.ab3@17800>   BTST #$F,D2
0002E82E <AmiBlitz3.ab3@17801>    BEQ.w JL_0_B19A                                         ;loadarray
0002E834 <AmiBlitz3.ab3@17802>    TST.b fast                                              ;lea->move xx(a2)
0002E838 <AmiBlitz3.ab3@17803>    BEQ 'la10
0002E83E <AmiBlitz3.ab3@17808>    CLR.l load_var_addr
0002E842 <AmiBlitz3.ab3@17809> BRA 'la10
0002E84A <AmiBlitz3.ab3@17811>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002E84E <AmiBlitz3.ab3@17812>    BNE 'la10
0002E854 <AmiBlitz3.ab3@17813>    TST.b optiarray
0002E858 <AmiBlitz3.ab3@17814>    BNE 'la10
0002E85E <AmiBlitz3.ab3@17815>    MOVE.l destpointer,a4
0002E864 <AmiBlitz3.ab3@17816>    SUB.l loada,a4
0002E868 <AmiBlitz3.ab3@17817>    CMP.w #4,a4
0002E86C <AmiBlitz3.ab3@17818>    BEQ 'la100
0002E870 <AmiBlitz3.ab3@17819>    CMP.w #2,a4
0002E874 <AmiBlitz3.ab3@17820>    BNE 'la10
0002E87A <AmiBlitz3.ab3@17821>    MOVE.l destpointer,a4
0002E87E <AmiBlitz3.ab3@17822>    CMP.b #3,d2
0002E882 <AmiBlitz3.ab3@17823>    BCS 'la110
0002E888 <AmiBlitz3.ab3@17824>    MOVE.w #$202a,-2(a4)
0002E88C <AmiBlitz3.ab3@17825>    OR.w d1,-2(a4)
0002E892 <AmiBlitz3.ab3@17826>    MOVE.w arrayoffset,d1
0002E896 <AmiBlitz3.ab3@17827>    BSR writeword
0002E89A <AmiBlitz3.ab3@17828> BRA JL_0_B194
0002E89E <AmiBlitz3.ab3@17831>    CMP.b #2,d2
0002E8A2 <AmiBlitz3.ab3@17832>    BNE 'la120
0002E8A8 <AmiBlitz3.ab3@17833>     MOVE.w #$302a,-2(a4)
0002E8AC <AmiBlitz3.ab3@17834>    OR.w d1,-2(a4)
0002E8B2 <AmiBlitz3.ab3@17836>    MOVE.w arrayoffset,d1
0002E8B6 <AmiBlitz3.ab3@17837>    BSR writeword
0002E8BA <AmiBlitz3.ab3@17838> BRA JL_0_B194
0002E8BE <AmiBlitz3.ab3@17841>   CMP.b #1,d2
0002E8C2 <AmiBlitz3.ab3@17842>    BNE.s 'la10
0002E8C8 <AmiBlitz3.ab3@17843>     MOVE.w #$102a,-2(a4)
0002E8CC <AmiBlitz3.ab3@17844>    OR.w d1,-2(a4)
0002E8D2 <AmiBlitz3.ab3@17845>    MOVE.w arrayoffset,d1
0002E8D6 <AmiBlitz3.ab3@17846>    BSR writeword
0002E8DA <AmiBlitz3.ab3@17847> BRA JL_0_B194
0002E8E0 <AmiBlitz3.ab3@17850>   MOVE.l destpointer,a4
0002E8E6 <AmiBlitz3.ab3@17851>    CMP.w #$45ea,-2(a4)
0002E8EA <AmiBlitz3.ab3@17852>    BNE 'la10
0002E8EE <AmiBlitz3.ab3@17853>    CMP.b #3,d2
0002E8F2 <AmiBlitz3.ab3@17854>    BCS 'la11
0002E8F8 <AmiBlitz3.ab3@17855>    MOVE.w #$202a,-4(a4)
0002E8FC <AmiBlitz3.ab3@17856>    OR.w d1,-4(a4)
0002E900 <AmiBlitz3.ab3@17857> BRA JL_0_B194
0002E904 <AmiBlitz3.ab3@17860>    CMP.b #2,d2
0002E908 <AmiBlitz3.ab3@17861>    BNE 'la12
0002E90E <AmiBlitz3.ab3@17862>     MOVE.w #$302a,-4(a4)
0002E912 <AmiBlitz3.ab3@17863>    OR.w d1,-4(a4)
0002E916 <AmiBlitz3.ab3@17864> BRA JL_0_B194
0002E91A <AmiBlitz3.ab3@17867>   CMP.b #1,d2
0002E91E <AmiBlitz3.ab3@17868>    BNE.s 'la10
0002E924 <AmiBlitz3.ab3@17869>     MOVE.w #$102a,-4(a4)
0002E928 <AmiBlitz3.ab3@17870>    OR.w d1,-4(a4)
0002E92C <AmiBlitz3.ab3@17871> BRA JL_0_B194
0002E932 <AmiBlitz3.ab3@17874>    OR.w movea2dn,D1
0002E936 <AmiBlitz3.ab3@17875>    BSR.w JL_0_B1B2
0002E93A <AmiBlitz3.ab3@17876>    BSR.w writeword
0002E93E <AmiBlitz3.ab3@17879>   ANDI.w #$FF,D2
0002E940 <AmiBlitz3.ab3@17880> RTS
0002E946 <AmiBlitz3.ab3@17884>    MOVE.l destpointer,a4
0002E94E <AmiBlitz3.ab3@17885>    MOVE.l #$f22a4400,-4(a4)
0002E954 <AmiBlitz3.ab3@17886>    MOVE.w arrayoffset,d1
0002E958 <AmiBlitz3.ab3@17887> BRA writeword
0002E95E <AmiBlitz3.ab3@17891>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002E962 <AmiBlitz3.ab3@17892>    BSR.w JL_0_B1B2
0002E966 <AmiBlitz3.ab3@17893>    BSR.w pokewda5s
0002E968 <AmiBlitz3.ab3@17894>   MOVE.w D3,D1
0002E96C <AmiBlitz3.ab3@17895>    BSR.w writeword
0002E970 <AmiBlitz3.ab3@17896> BRA.w JL_0_B194
0002E974 <AmiBlitz3.ab3@17899>   BTST #$E,D2
0002E978 <AmiBlitz3.ab3@17900>    BNE.w JL_0_B1CA
0002E97C <AmiBlitz3.ab3@17901>   CMP.b #$1,D2
0002E980 <AmiBlitz3.ab3@17902>    BEQ.w JL_0_B1CC
0002E984 <AmiBlitz3.ab3@17903>   CMP.b #$2,D2
0002E988 <AmiBlitz3.ab3@17904>    BEQ.w JL_0_B1D2
0002E98A <AmiBlitz3.ab3@17907> RTS
0002E98E <AmiBlitz3.ab3@17910>   EORI.w #$3000,D1
0002E990 <AmiBlitz3.ab3@17911> RTS
0002E994 <AmiBlitz3.ab3@17914>   ORI.w #$1000,D1
0002E996 <AmiBlitz3.ab3@17915> RTS
0002E99E <AmiBlitz3.ab3@17919>   MOVE.w #$FFFF,dfetch
0002E9A2 <AmiBlitz3.ab3@17920>   BSR.w get1bytemain
0002E9A6 <AmiBlitz3.ab3@17921>   CMP.w #$2D,D0
0002E9AA <AmiBlitz3.ab3@17922>    BNE.w JL_0_B206
0002E9AE <AmiBlitz3.ab3@17923>   BSR.w get1bytemain
0002E9B2 <AmiBlitz3.ab3@17924>   BSR.w JL_0_B206
0002E9B6 <AmiBlitz3.ab3@17925>   CMP.w #$5,D2
0002E9BA <AmiBlitz3.ab3@17926>    BCC.w JL_0_B200
0002E9BC <AmiBlitz3.ab3@17927>   NEG.l D0
0002E9BE <AmiBlitz3.ab3@17928> RTS
0002E9C4 <AmiBlitz3.ab3@17931>   TST.b fpu
0002E9C8 <AmiBlitz3.ab3@17932>   BEQ 'noneg
0002E9CC <AmiBlitz3.ab3@17933>   fneg.x fp0
0002E9CE <AmiBlitz3.ab3@17934> RTS
0002E9D2 <AmiBlitz3.ab3@17937>   BCHG #$7,D0
0002E9D4 <AmiBlitz3.ab3@17938> RTS
0002E9D8 <AmiBlitz3.ab3@17941>   CMP.w #$24,D0
0002E9DC <AmiBlitz3.ab3@17942>    BEQ.w get_hexconstant
0002E9E0 <AmiBlitz3.ab3@17943>   CMP.w #$25,D0
0002E9E4 <AmiBlitz3.ab3@17944>    BEQ.w JL_0_A8C0
0002E9E8 <AmiBlitz3.ab3@17945>   CMP.w #$2E,D0
0002E9EC <AmiBlitz3.ab3@17946>    BNE.w JL_0_B224
0002E9EE <AmiBlitz3.ab3@17949>   MOVEQ.l #$00,D3
0002E9F2 <AmiBlitz3.ab3@17950> BRA.w JL_0_B272
0002E9F4 <AmiBlitz3.ab3@17953>   MOVEQ.l #$00,D3                                          ;number
0002E9F8 <AmiBlitz3.ab3@17954>    BSR.w atoi
0002E9FC <AmiBlitz3.ab3@17955>   CMP.w #$2E,D0
0002EA00 <AmiBlitz3.ab3@17956>    BEQ.w JL_0_B268
0002EA04 <AmiBlitz3.ab3@17957>   ORI.w #$20,D0
0002EA08 <AmiBlitz3.ab3@17958>   CMP.w #$65,D0
0002EA0C <AmiBlitz3.ab3@17959>    BNE.w JL_0_B46E
0002EA12 <AmiBlitz3.ab3@17960>   CMP.l #$800000,D3
0002EA16 <AmiBlitz3.ab3@17961>    BCC.w overerr
0002EA18 <AmiBlitz3.ab3@17962>   MOVEQ.l #-$01,D6
0002EA1C <AmiBlitz3.ab3@17963>   fmove.l d3,fp0
0002EA1E <AmiBlitz3.ab3@17964>   MOVE.l D3,D0
0002EA24 <AmiBlitz3.ab3@17965>   MOVEA.l _mathffpbase,A6
0002EA28 <AmiBlitz3.ab3@17966>    JSR -$24(A6)
0002EA2A <AmiBlitz3.ab3@17967>   MOVE.l D0,D3
0002EA2E <AmiBlitz3.ab3@17968>    BSR.w JL_0_B2E6
0002EA32 <AmiBlitz3.ab3@17969>    BSR.w reget
0002EA36 <AmiBlitz3.ab3@17970>    BSR.w JL_0_B480
0002EA3A <AmiBlitz3.ab3@17971> BRA.w JL_0_B3DC
0002EA3E <AmiBlitz3.ab3@17974>   CMP.b #4,d2
0002EA42 <AmiBlitz3.ab3@17975>   BEQ 'l4
0002EA46 <AmiBlitz3.ab3@17976>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002EA4C <AmiBlitz3.ab3@17979>    TST.b fpu
0002EA50 <AmiBlitz3.ab3@17980>    BNE 'l1
0002EA56 <AmiBlitz3.ab3@17981>    CMP.l #$800000,D3
0002EA5A <AmiBlitz3.ab3@17982>    BCC.w overerr
0002EA5E <AmiBlitz3.ab3@17983> BRA JL_0_B272
0002EA64 <AmiBlitz3.ab3@17986>   CMP.l #$7fffffff,d3
0002EA68 <AmiBlitz3.ab3@17987>     BCC.w overerr
0002EA6A <AmiBlitz3.ab3@17990>   MOVEQ.l #-$01,D6
0002EA6C <AmiBlitz3.ab3@17991>   MOVE.l D3,D0
0002EA70 <AmiBlitz3.ab3@17992>   fmove.l d3,fp0
0002EA76 <AmiBlitz3.ab3@17993>   MOVEA.l _mathffpbase,A6
0002EA7A <AmiBlitz3.ab3@17994>    JSR -$24(A6)                                            ;integer to ffp
0002EA7C <AmiBlitz3.ab3@17995>   MOVE.l D0,-(A7)
0002EA80 <AmiBlitz3.ab3@17996>    BSR.w get1bytemain
0002EA84 <AmiBlitz3.ab3@17997>    BSR.w tstnum
0002EA88 <AmiBlitz3.ab3@17998>    BNE.w syntaxerr
0002EA8A <AmiBlitz3.ab3@17999>   MOVEQ.l #$00,D3
0002EA8E <AmiBlitz3.ab3@18000>    BSR.w atoi
0002EA90 <AmiBlitz3.ab3@18001>   TST.l D3
0002EA94 <AmiBlitz3.ab3@18002>    BEQ.w JL_0_B2E0
0002EA9A <AmiBlitz3.ab3@18003>   TST.b fpu
0002EA9E <AmiBlitz3.ab3@18004>   BNE 'l1
0002EAA4 <AmiBlitz3.ab3@18005>   CMP.l #$800000,D3
0002EAA8 <AmiBlitz3.ab3@18006>    BCC.w overerr
0002EAAC <AmiBlitz3.ab3@18007> BRA 'l2
0002EAB2 <AmiBlitz3.ab3@18010>   CMP.l #$7fffffff,d3
0002EAB6 <AmiBlitz3.ab3@18011>   BCC overerr
0002EABA <AmiBlitz3.ab3@18014>   fmove.l d5,fp1
0002EABC <AmiBlitz3.ab3@18015>   MOVE.l D5,D0
0002EAC0 <AmiBlitz3.ab3@18016>    JSR -$24(A6)
0002EAC2 <AmiBlitz3.ab3@18017>   MOVE.l D0,D5
0002EAC6 <AmiBlitz3.ab3@18018>   fmove.l d3,fp2
0002EAC8 <AmiBlitz3.ab3@18019>   MOVE.l D3,D0
0002EACC <AmiBlitz3.ab3@18020>    JSR -$24(A6)
0002EAD0 <AmiBlitz3.ab3@18021>   fdiv.x fp1,fp2
0002EAD2 <AmiBlitz3.ab3@18022>   MOVE.l D5,D1
0002EAD6 <AmiBlitz3.ab3@18023>    JSR -$54(A6)
0002EADA <AmiBlitz3.ab3@18024>   fadd.x fp2,fp0
0002EADC <AmiBlitz3.ab3@18025>   MOVE.l (A7)+,D1
0002EAE0 <AmiBlitz3.ab3@18026>    JSR -$42(A6)
0002EAE2 <AmiBlitz3.ab3@18027>   MOVE.l D0,D3
0002EAE6 <AmiBlitz3.ab3@18028>    BSR.w reget
0002EAEA <AmiBlitz3.ab3@18029>   ORI.w #$20,D0
0002EAEE <AmiBlitz3.ab3@18030>   CMP.w #$65,D0
0002EAF2 <AmiBlitz3.ab3@18031>    BNE.w JL_0_B2D4
0002EAF6 <AmiBlitz3.ab3@18032>    BSR.w JL_0_B2E6
0002EAFA <AmiBlitz3.ab3@18035>    BSR.w reget
0002EAFE <AmiBlitz3.ab3@18036>    BSR.w JL_0_B480
0002EB02 <AmiBlitz3.ab3@18037> BRA.w JL_0_B3DC
0002EB04 <AmiBlitz3.ab3@18040>   MOVE.l (A7)+,D3
0002EB08 <AmiBlitz3.ab3@18041> BRA.w JL_0_B2D4
0002EB0C <AmiBlitz3.ab3@18044>   BSR.w get1bytemain
0002EB10 <AmiBlitz3.ab3@18045>   CMP.w #$2B,D0
0002EB14 <AmiBlitz3.ab3@18046>    BEQ.w JL_0_B30E
0002EB18 <AmiBlitz3.ab3@18047>   CMP.w #$2D,D0
0002EB1C <AmiBlitz3.ab3@18048>    BNE.w JL_0_B312
0002EB20 <AmiBlitz3.ab3@18049>    BSR.w get1bytemain
0002EB24 <AmiBlitz3.ab3@18050>    BSR.w getsign
0002EB26 <AmiBlitz3.ab3@18051>   MOVE.l D3,D0
0002EB2A <AmiBlitz3.ab3@18052>   fdiv.x fp1,fp0
0002EB2C <AmiBlitz3.ab3@18053>   MOVE.l D4,D1
0002EB30 <AmiBlitz3.ab3@18054>    JSR -$54(A6)
0002EB32 <AmiBlitz3.ab3@18055>   MOVE.l D0,D3
0002EB34 <AmiBlitz3.ab3@18056> RTS
0002EB38 <AmiBlitz3.ab3@18059>   BSR.w get1bytemain
0002EB3C <AmiBlitz3.ab3@18062>   BSR.w getsign
0002EB40 <AmiBlitz3.ab3@18063>   fmul.x fp1,fp0
0002EB42 <AmiBlitz3.ab3@18064>   MOVE.l D3,D0
0002EB44 <AmiBlitz3.ab3@18065>   MOVE.l D4,D1
0002EB48 <AmiBlitz3.ab3@18066>    JSR -$4E(A6)
0002EB4A <AmiBlitz3.ab3@18067>   MOVE.l D0,D3
0002EB4C <AmiBlitz3.ab3@18068> RTS
0002EB50 <AmiBlitz3.ab3@18071>   BSR.w tstnum
0002EB54 <AmiBlitz3.ab3@18072>    BNE.w syntaxerr
0002EB56 <AmiBlitz3.ab3@18073>   MOVE.w D0,D4
0002EB5A <AmiBlitz3.ab3@18074>   SUBI.w #$30,D4
0002EB5E <AmiBlitz3.ab3@18075>    BSR.w get1bytemain
0002EB62 <AmiBlitz3.ab3@18076>    BSR.w tstnum
0002EB66 <AmiBlitz3.ab3@18077>    BNE.w getsign__skip
0002EB6A <AmiBlitz3.ab3@18078>   MULU #$A,D4
0002EB6E <AmiBlitz3.ab3@18079>   SUBI.w #$30,D0
0002EB70 <AmiBlitz3.ab3@18080>   ADD.w D0,D4
0002EB74 <AmiBlitz3.ab3@18081>    BSR.w get1bytemain
0002EB78 <AmiBlitz3.ab3@18084>   CMP.w #$12,D4
0002EB7C <AmiBlitz3.ab3@18085>    BHI.w overerr
0002EB7E <AmiBlitz3.ab3@18086>   LSL.w #3,D4
0002EB84 <AmiBlitz3.ab3@18087>   LEA fputab,a0
0002EB86 <AmiBlitz3.ab3@18088>   ADD.l d4,a0
0002EB8C <AmiBlitz3.ab3@18089>   fmove.d 0(a0),fp1
0002EB8E <AmiBlitz3.ab3@18090>   LSR.w #1,d4
0002EB92 <AmiBlitz3.ab3@18091>   MOVE.l facts(PC,D4.W),D4
0002EB94 <AmiBlitz3.ab3@18092> RTS
0002EBDC <AmiBlitz3.ab3@18096>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002EBE0 <AmiBlitz3.ab3@18101>   Dc.l $80000041
0002EBE4 <AmiBlitz3.ab3@18102>   Dc.l $A0000044
0002EBE8 <AmiBlitz3.ab3@18103>   Dc.l $C8000047
0002EBEC <AmiBlitz3.ab3@18104>   Dc.l $FA00004A
0002EBF0 <AmiBlitz3.ab3@18105>   Dc.l $9C40004E
0002EBF4 <AmiBlitz3.ab3@18106>   Dc.l $C3500051
0002EBF8 <AmiBlitz3.ab3@18107>   Dc.l $F4240054
0002EBFC <AmiBlitz3.ab3@18108>   Dc.l $98968058
0002EC00 <AmiBlitz3.ab3@18109>   Dc.l $BEBC205B
0002EC04 <AmiBlitz3.ab3@18110>   Dc.l $EE6B285E
0002EC08 <AmiBlitz3.ab3@18111>   Dc.l $9502F962
0002EC0C <AmiBlitz3.ab3@18112>   Dc.l $BA43B765
0002EC10 <AmiBlitz3.ab3@18113>   Dc.l $E8D4A568
0002EC14 <AmiBlitz3.ab3@18114>   Dc.l $9184E76C
0002EC18 <AmiBlitz3.ab3@18115>   Dc.l $B5E6A96F
0002EC1C <AmiBlitz3.ab3@18116>   Dc.l $E35F2972
0002EC20 <AmiBlitz3.ab3@18117>   Dc.l $8E1BCA76
0002EC24 <AmiBlitz3.ab3@18118>   Dc.l $B1A2BD79
0002EC28 <AmiBlitz3.ab3@18119>   Dc.l $DE0B6C7C
0002EC2A <AmiBlitz3.ab3@18123>   MOVEQ.l #$01,D5
0002EC2C <AmiBlitz3.ab3@18126>   LSL.l #1,D5
0002EC2E <AmiBlitz3.ab3@18127>   MOVE.l D5,D1
0002EC30 <AmiBlitz3.ab3@18128>   LSL.l #2,D5
0002EC32 <AmiBlitz3.ab3@18129>   ADD.l D1,D5                                              ;divisor for frac convert!
0002EC34 <AmiBlitz3.ab3@18130>   LSL.l #1,D3
0002EC38 <AmiBlitz3.ab3@18131>    BCS.w overerr
0002EC3A <AmiBlitz3.ab3@18132>   MOVE.l D3,D1
0002EC3C <AmiBlitz3.ab3@18133>   LSL.l #1,D3
0002EC40 <AmiBlitz3.ab3@18134>    BCS.w overerr
0002EC42 <AmiBlitz3.ab3@18135>   LSL.l #1,D3
0002EC46 <AmiBlitz3.ab3@18136>    BCS.w overerr
0002EC48 <AmiBlitz3.ab3@18137>   ADD.l D1,D3
0002EC4C <AmiBlitz3.ab3@18138>   SUBI.w #$30,D0
0002EC4E <AmiBlitz3.ab3@18139>   ADD.l D0,D3
0002EC7A <AmiBlitz3.ab3@18140>    !fget                                                   ;bsr.w get1bytemain
0002EC7E <AmiBlitz3.ab3@18141>    CMP.b #1,d0
0002EC82 <AmiBlitz3.ab3@18142>    BNE 'cm1
0002EC84 <AmiBlitz3.ab3@18143>    SUBQ.l #1,a5
0002EC88 <AmiBlitz3.ab3@18144>    BSR get1bytemain                                        ;??wy not !fget
0002EC8C <AmiBlitz3.ab3@18147>   CMP.b #$7e,d0
0002EC90 <AmiBlitz3.ab3@18148>    BNE 'cm2
0002EC92 <AmiBlitz3.ab3@18149>    SUBQ.l #1,a5
0002EC96 <AmiBlitz3.ab3@18150>    BSR get1bytemain
0002EC98 <AmiBlitz3.ab3@18153>   TST.b d0
0002EC9C <AmiBlitz3.ab3@18154>    BPL 'l10
0002EC9E <AmiBlitz3.ab3@18155>    LSL.w #8,d0
0002ECA0 <AmiBlitz3.ab3@18156>    MOVE.b (a5)+,d0
0002ECA6 <AmiBlitz3.ab3@18157>    MOVE.w d0,lastchar
0002ECB8 <AmiBlitz3.ab3@18160>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002ECBC <AmiBlitz3.ab3@18161>    BEQ.w atoi__loop
0002ECBE <AmiBlitz3.ab3@18162> RTS
0002ECC0 <AmiBlitz3.ab3@18165> dfetch:  Ds.w 1                                            ;fetching data?
0002ECC4 <AmiBlitz3.ab3@18169>   MOVE.w dfetch(PC),D1
0002ECC8 <AmiBlitz3.ab3@18170>    BEQ.w JL_0_B3EC
0002ECCE <AmiBlitz3.ab3@18171>   CLR.w dfetch
0002ECD0 <AmiBlitz3.ab3@18172> RTS
0002ECD6 <AmiBlitz3.ab3@18175>   MOVE.b d2,isconstantvalue
0002ECDC <AmiBlitz3.ab3@18176>   MOVE.l d0,lastconstantvalue
0002ECE2 <AmiBlitz3.ab3@18177>   MOVE.w d2,imm_size
0002ECEC <AmiBlitz3.ab3@18178>   MOVE.w regnum,imm_reg
0002ECF6 <AmiBlitz3.ab3@18179>   MOVE.l destpointer,imm_addr                           ; long
0002ECFA <AmiBlitz3.ab3@18180>   CMP.w #$3,D2
0002ECFE <AmiBlitz3.ab3@18181>   BEQ.w JL_0_B434
0002ED02 <AmiBlitz3.ab3@18182>   CMP.w #$5,D2                                          ;float
0002ED06 <AmiBlitz3.ab3@18183>   BEQ.w JL_0_B434
0002ED0A <AmiBlitz3.ab3@18184>   CMP.w #$1,D2
0002ED0E <AmiBlitz3.ab3@18185>   BEQ.w JL_0_B418
0002ED12 <AmiBlitz3.ab3@18186>   CMP.w #$2,D2
0002ED16 <AmiBlitz3.ab3@18187>   BEQ.w JL_0_B418
0002ED1A <AmiBlitz3.ab3@18188>   CMP.w #$4,D2
0002ED1E <AmiBlitz3.ab3@18189>   BEQ.w JL_0_B434
0002ED22 <AmiBlitz3.ab3@18191> BRA.w mismatcherr
0002ED28 <AmiBlitz3.ab3@18194>   MOVE.w regnum,D1
0002ED2A <AmiBlitz3.ab3@18195>   LSL.w #8,D1
0002ED2C <AmiBlitz3.ab3@18196>   LSL.w #1,D1
0002ED30 <AmiBlitz3.ab3@18197>   ORI.w #$303C,D1
0002ED34 <AmiBlitz3.ab3@18198>    BSR.w writeword
0002ED36 <AmiBlitz3.ab3@18199>   MOVE.w D0,D1
0002ED3A <AmiBlitz3.ab3@18200>    BSR.w writeword
0002ED3E <AmiBlitz3.ab3@18201> BRA.w reget
0002ED40 <AmiBlitz3.ab3@18204>   MOVEQ #0,d1
0002ED46 <AmiBlitz3.ab3@18205>   MOVE.w regnum,D1
0002ED4C <AmiBlitz3.ab3@18206>   TST.b fpu
0002ED50 <AmiBlitz3.ab3@18207>   BEQ 'f1
0002ED54 <AmiBlitz3.ab3@18208>   CMP.w #5,d2
0002ED58 <AmiBlitz3.ab3@18209>   BEQ 'l10
0002ED5C <AmiBlitz3.ab3@18210> BRA 'f2
0002ED62 <AmiBlitz3.ab3@18213>   TST.b iee
0002ED66 <AmiBlitz3.ab3@18214>   BNE 'l10
0002ED68 <AmiBlitz3.ab3@18217>   LSL.w #8,D1
0002ED6A <AmiBlitz3.ab3@18218>   LSL.w #1,D1
0002ED6E <AmiBlitz3.ab3@18219>   ORI.w #$203C,D1
0002ED72 <AmiBlitz3.ab3@18220>    BSR.w writeword
0002ED74 <AmiBlitz3.ab3@18221>   MOVE.l D0,D1
0002ED78 <AmiBlitz3.ab3@18222>    BSR.w writelong
0002ED7C <AmiBlitz3.ab3@18223> BRA.w reget
0002ED7E <AmiBlitz3.ab3@18226>   MOVEQ #5,d2
0002ED80 <AmiBlitz3.ab3@18227>   ASL.l #7,d1
0002ED82 <AmiBlitz3.ab3@18228>   SUBQ.l #8,a7
0002ED88 <AmiBlitz3.ab3@18233>       OR.l #$f23c4400,d1                                   ;fmove.s
0002ED8E <AmiBlitz3.ab3@18234>        fmove.s fp0,0(a7)
0002ED92 <AmiBlitz3.ab3@18236>   BSR writelong
0002ED94 <AmiBlitz3.ab3@18237>   MOVE.l (a7)+,d1
0002ED98 <AmiBlitz3.ab3@18238>   BSR writelong
0002ED9A <AmiBlitz3.ab3@18239>   MOVE.l (a7)+,d1
0002ED9E <AmiBlitz3.ab3@18243> BRA.w reget
0002EDA0 <AmiBlitz3.ab3@18249>  MOVE.l D3,D0
0002EDA2 <AmiBlitz3.ab3@18250>   TST.w D6
0002EDA6 <AmiBlitz3.ab3@18251>    BEQ.w JL_0_B46C
0002EDAC <AmiBlitz3.ab3@18252>   MOVEA.l _mathffpbase,A6
0002EDB0 <AmiBlitz3.ab3@18253>    JSR -$1E(A6)
0002EDB4 <AmiBlitz3.ab3@18254>    BVC.w JL_0_B46C
0002EDB6 <AmiBlitz3.ab3@18255>   ADDQ.w #4,A7
0002EDBA <AmiBlitz3.ab3@18256> BRA.w JL_0_B5A0
0002EDBC <AmiBlitz3.ab3@18259> RTS
0002EDBE <AmiBlitz3.ab3@18263>   MOVEQ.l #$00,D6
0002EDC2 <AmiBlitz3.ab3@18264>    fmove.l d3,fp0
0002EDC6 <AmiBlitz3.ab3@18267>   BSR.w JL_0_B480
0002EDCA <AmiBlitz3.ab3@18268> BRA.w JL_0_B3DC
0002EDCC <AmiBlitz3.ab3@18271>   MOVE.w D2,-(A7)
0002EDD0 <AmiBlitz3.ab3@18272>    BSR.w JL_0_BF6A
0002EDD2 <AmiBlitz3.ab3@18273>   MOVE.w (A7)+,D2
0002EDD4 <AmiBlitz3.ab3@18276>   TST.w D2
0002EDD8 <AmiBlitz3.ab3@18277>    BNE.w JL_0_B498
0002EDDA <AmiBlitz3.ab3@18278>   TST.w D6
0002EDDE <AmiBlitz3.ab3@18279>    BEQ.w JL_0_B492
0002EDE0 <AmiBlitz3.ab3@18280>   MOVEQ.l #$04,D2
0002EDE4 <AmiBlitz3.ab3@18281> BRA.w JL_0_B510
0002EDE6 <AmiBlitz3.ab3@18284>   MOVEQ.l #$02,D2
0002EDEA <AmiBlitz3.ab3@18285> BRA.w JL_0_B4C4
0002EDEE <AmiBlitz3.ab3@18288>   CMP.w #$1,D2
0002EDF2 <AmiBlitz3.ab3@18289>    BEQ.w JL_0_B4C4
0002EDF6 <AmiBlitz3.ab3@18290>   CMP.w #$2,D2
0002EDFA <AmiBlitz3.ab3@18291>    BEQ.w JL_0_B4F8
0002EDFE <AmiBlitz3.ab3@18292>   CMP.w #$3,D2
0002EE02 <AmiBlitz3.ab3@18293>    BEQ.w JL_0_B57A
0002EE06 <AmiBlitz3.ab3@18294>   CMP.w #$4,D2
0002EE0A <AmiBlitz3.ab3@18295>    BEQ.w JL_0_B506
0002EE0E <AmiBlitz3.ab3@18296>   CMP.w #$5,D2
0002EE12 <AmiBlitz3.ab3@18297>    BEQ.w JL_0_B586
0002EE16 <AmiBlitz3.ab3@18298> BRA.w mismatcherr
0002EE1A <AmiBlitz3.ab3@18301>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002EE20 <AmiBlitz3.ab3@18302>   CMP.l #$7f,D0
0002EE24 <AmiBlitz3.ab3@18303>    BGT.w JL_0_B4DC
0002EE2A <AmiBlitz3.ab3@18304>   CMP.l #$FFFFFF80,D0
0002EE2E <AmiBlitz3.ab3@18305>    BGE.w JL_0_B59E
0002EE30 <AmiBlitz3.ab3@18308>   MOVEQ.l #$02,D2                                          ;was 2 before
0002EE36 <AmiBlitz3.ab3@18309>   CMP.l #$7fff,D0
0002EE3A <AmiBlitz3.ab3@18310>    BGT.w JL_0_B4F2
0002EE40 <AmiBlitz3.ab3@18311>   CMP.l #$FFFF8000,D0
0002EE44 <AmiBlitz3.ab3@18312>    BGE.w JL_0_B59E
0002EE46 <AmiBlitz3.ab3@18315>   MOVEQ.l #$03,D2
0002EE4A <AmiBlitz3.ab3@18316> BRA.w JL_0_B59E
0002EE4C <AmiBlitz3.ab3@18342>   TST.w D6
0002EE50 <AmiBlitz3.ab3@18343>    BNE.w JL_0_B510
0002EE54 <AmiBlitz3.ab3@18344>    BSR.w JL_0_B450
0002EE58 <AmiBlitz3.ab3@18345> BRA.w JL_0_B4DC
0002EE5C <AmiBlitz3.ab3@18348>   BSR.w JL_0_B450
0002EE5E <AmiBlitz3.ab3@18349>   TST.w D6
0002EE62 <AmiBlitz3.ab3@18350>   BEQ.w JL_0_B560
0002EE68 <AmiBlitz3.ab3@18353>   CMP.l #MaxWordSgnd,D0
0002EE6C <AmiBlitz3.ab3@18354>    BGT.w JL_0_B5A0
0002EE72 <AmiBlitz3.ab3@18355>   CMP.l #$FFFF8000,D0
0002EE76 <AmiBlitz3.ab3@18356>    BLT.w JL_0_B5A0
0002EE78 <AmiBlitz3.ab3@18357>   MOVE.w D0,-(A7)
0002EE7C <AmiBlitz3.ab3@18358>    JSR -$24(A6)
0002EE7E <AmiBlitz3.ab3@18359>   MOVE.l D0,D1
0002EE80 <AmiBlitz3.ab3@18360>   MOVE.l D3,D0
0002EE84 <AmiBlitz3.ab3@18361>    JSR -$48(A6)
0002EE8A <AmiBlitz3.ab3@18362>   MOVE.l #$80000051,D1
0002EE8E <AmiBlitz3.ab3@18363>    JSR -$4E(A6)
0002EE92 <AmiBlitz3.ab3@18364>    JSR -$1E(A6)
0002EE96 <AmiBlitz3.ab3@18365>    BEQ.w JL_0_B55A
0002EE9C <AmiBlitz3.ab3@18366>   CMP.l #$10000,D0
0002EEA0 <AmiBlitz3.ab3@18367>    BCC.w JL_0_B55A
0002EEA2 <AmiBlitz3.ab3@18368>   MOVE.w D0,D1
0002EEA4 <AmiBlitz3.ab3@18369>   MOVE.w (A7)+,D0
0002EEA6 <AmiBlitz3.ab3@18370>   SWAP D0
0002EEA8 <AmiBlitz3.ab3@18371>   MOVE.w D1,D0
0002EEAC <AmiBlitz3.ab3@18372> BRA.w JL_0_B59E
0002EEAE <AmiBlitz3.ab3@18375>   ADDQ.w #2,A7
0002EEB2 <AmiBlitz3.ab3@18376> BRA.w JL_0_B5A0
0002EEB8 <AmiBlitz3.ab3@18379>   CMP.l #MaxWordSgnd,D0
0002EEBC <AmiBlitz3.ab3@18380>    BGT.w JL_0_B4F2
0002EEC2 <AmiBlitz3.ab3@18381>   CMP.l #$FFFF8000,D0
0002EEC6 <AmiBlitz3.ab3@18382>    BLT.w JL_0_B4F2
0002EEC8 <AmiBlitz3.ab3@18383>   SWAP D0
0002EECC <AmiBlitz3.ab3@18384> BRA.w JL_0_B59E
0002EECE <AmiBlitz3.ab3@18387>   TST.w D6
0002EED2 <AmiBlitz3.ab3@18388>   BNE.w JL_0_B5A0
0002EED4 <AmiBlitz3.ab3@18389>   MOVE.l D3,D0
0002EED8 <AmiBlitz3.ab3@18390> BRA.w JL_0_B59E
0002EEDA <AmiBlitz3.ab3@18393>   TST.w D6
0002EEDE <AmiBlitz3.ab3@18394>   BNE.w JL_0_B5A0
0002EEE0 <AmiBlitz3.ab3@18395>   MOVE.l D3,D0
0002EEE6 <AmiBlitz3.ab3@18396>   MOVEA.l _mathffpbase,A6
0002EEEA <AmiBlitz3.ab3@18397>   JSR -$24(A6)
0002EEEC <AmiBlitz3.ab3@18398>   MOVE.l D0,D3
0002EEF0 <AmiBlitz3.ab3@18399> BRA.w JL_0_B5A0
0002EEF2 <AmiBlitz3.ab3@18402> RTS
0002EEF4 <AmiBlitz3.ab3@18405>   MOVEQ.l #$05,D2
0002EEF6 <AmiBlitz3.ab3@18406>   MOVE.l D3,D0
0002EEF8 <AmiBlitz3.ab3@18407> RTS
0002EEFC <AmiBlitz3.ab3@18411>             Ds.l 1                                         ;??Looks like unused data??
0002EF00 <AmiBlitz3.ab3@18412> pushpc:     Ds.l 1
0002EF04 <AmiBlitz3.ab3@18413> pushoff:    Ds.l 1
0002EF08 <AmiBlitz3.ab3@18414> pushdooff:  Ds.l 1
0002EF0A <AmiBlitz3.ab3@18415> pushclen:   Ds.w 1
0002EF0E <AmiBlitz3.ab3@18416> pushat:     Ds.l 1
0002EF18 <AmiBlitz3.ab3@18420>   MOVE.l destpointer,pushpc
0002EF22 <AmiBlitz3.ab3@18421>   MOVE.l hunkoffsetbase,pushoff
0002EF24 <AmiBlitz3.ab3@18422> RTS
0002EF28 <AmiBlitz3.ab3@18426>   MOVEM.l D0-D1/A0-A1,-(A7)
0002EF2E <AmiBlitz3.ab3@18427>   MOVE.l destpointer,D0
0002EF32 <AmiBlitz3.ab3@18428>   MOVE.l pushpc(PC),D1
0002EF38 <AmiBlitz3.ab3@18429>   MOVE.l D1,destpointer
0002EF3A <AmiBlitz3.ab3@18430>   SUB.l D1,D0
0002EF40 <AmiBlitz3.ab3@18431>   MOVE.w D0,pushclen
0002EF44 <AmiBlitz3.ab3@18432>    BEQ.w JL_0_B636
0002EF4A <AmiBlitz3.ab3@18433>   MOVE.w dontwrite,D1
0002EF4E <AmiBlitz3.ab3@18434>    BNE.w JL_0_B636
0002EF56 <AmiBlitz3.ab3@18435>    CMP.w #1000,pushclen
0002EF5A <AmiBlitz3.ab3@18436>    BGE conmemerr
0002EF60 <AmiBlitz3.ab3@18437>    MOVE.l pushat,d0
0002EF64 <AmiBlitz3.ab3@18438>    BNE 'nomem
0002EF6A <AmiBlitz3.ab3@18439>    MOVE.l #1024,d0
0002EF6C <AmiBlitz3.ab3@18440>   MOVEQ.l #$01,D1
0002EF72 <AmiBlitz3.ab3@18441>   MOVEA.l _execbase,A6
0002EF78 <AmiBlitz3.ab3@18442>   MOVE.l mempool,a0
0002EF7C <AmiBlitz3.ab3@18443>   JSR _AllocPooled(a6)
0002EF82 <AmiBlitz3.ab3@18445>   MOVE.l D0,pushat
0002EF84 <AmiBlitz3.ab3@18448>   MOVEA.l D0,A0
0002EF8A <AmiBlitz3.ab3@18449>   MOVEA.l pushpc,A1
0002EF90 <AmiBlitz3.ab3@18450>   MOVE.l A1,destpointer
0002EF96 <AmiBlitz3.ab3@18451>   MOVE.w pushclen,D0
0002EF98 <AmiBlitz3.ab3@18452>   LSR.w #1,D0
0002EF9A <AmiBlitz3.ab3@18453>   SUBQ.w #1,D0
0002EF9C <AmiBlitz3.ab3@18456>     MOVE.w (A1)+,(A0)+
0002EFA0 <AmiBlitz3.ab3@18457>   DBF D0,JL_0_B626
0002EFAA <AmiBlitz3.ab3@18459>    MOVE.l hunkoffsetbase,pushdooff
0002EFAE <AmiBlitz3.ab3@18462>   MOVEM.l (A7)+,D0-D1/A0-A1
0002EFB0 <AmiBlitz3.ab3@18463> RTS
0002EFB4 <AmiBlitz3.ab3@18467>   MOVEM.l D0-D1/A0-A1,-(A7)
0002EFB6 <AmiBlitz3.ab3@18468>   MOVEQ.l #$00,D0
0002EFBC <AmiBlitz3.ab3@18469>   MOVE.w pushclen,D0
0002EFC0 <AmiBlitz3.ab3@18470>    BEQ.w JL_0_B6D8
0002EFC6 <AmiBlitz3.ab3@18471>   MOVE.l destpointer,D1
0002EFCC <AmiBlitz3.ab3@18472>   ADD.l D0,destpointer
0002EFD2 <AmiBlitz3.ab3@18473>   TST.w dontwrite
0002EFD6 <AmiBlitz3.ab3@18474>    BNE.w JL_0_B6D8
0002EFD8 <AmiBlitz3.ab3@18475>   LSR.w #1,D0
0002EFDA <AmiBlitz3.ab3@18476>   SUBQ.w #1,D0
0002EFDC <AmiBlitz3.ab3@18477>   MOVEA.l D1,A1
0002EFE2 <AmiBlitz3.ab3@18478>   MOVEA.l pushat,A0
0002EFE8 <AmiBlitz3.ab3@18481>     CMPA.l destbufferend,A1
0002EFEC <AmiBlitz3.ab3@18482>     BCS.w JL_0_B684
0002EFF4 <AmiBlitz3.ab3@18484>     MOVE.w #$FFFF,dontwrite
0002EFF8 <AmiBlitz3.ab3@18485>   BRA.w JL_0_B6D8
0002EFFA <AmiBlitz3.ab3@18488>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002EFFE <AmiBlitz3.ab3@18489>   DBF D0,JL_0_B66E
0002F004 <AmiBlitz3.ab3@18491>   SUB.l pushpc,D1
0002F008 <AmiBlitz3.ab3@18492>   BEQ.w JL_0_B6C2
0002F00E <AmiBlitz3.ab3@18493>   MOVEA.l pushdooff,A0
0002F014 <AmiBlitz3.ab3@18496>   CMPA.l pushoff,A0
0002F018 <AmiBlitz3.ab3@18497>   BEQ.w JL_0_B6C2
0002F01C <AmiBlitz3.ab3@18498>   MOVEA.l $4(A0),A1
0002F022 <AmiBlitz3.ab3@18499>   ADDA.l destbufferstart,A1
0002F028 <AmiBlitz3.ab3@18500>   CMPA.l destbufferend,A1
0002F02C <AmiBlitz3.ab3@18501>   BCC.w JL_0_B6BC
0002F030 <AmiBlitz3.ab3@18502>   ADD.l D1,$4(A0)
0002F032 <AmiBlitz3.ab3@18505>   MOVEA.l (A0),A0
0002F036 <AmiBlitz3.ab3@18506> BRA.w JL_0_B69A
0002F03C <AmiBlitz3.ab3@18509>   MOVEA.l pushat,A1
0002F03E <AmiBlitz3.ab3@18510>   MOVEQ.l #$00,D0
0002F044 <AmiBlitz3.ab3@18511>   MOVE.w pushclen,D0
0002F04A <AmiBlitz3.ab3@18512>   MOVEA.l _execbase,A6
0002F050 <AmiBlitz3.ab3@18513>   MOVE.l mempool,a0
0002F054 <AmiBlitz3.ab3@18517>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F056 <AmiBlitz3.ab3@18518> RTS
0002F058 <AmiBlitz3.ab3@18521>   MOVE.l D1,-(A7)                                          ;array mul
0002F05A <AmiBlitz3.ab3@18522>   MOVEQ.l #$00,D2
0002F05C <AmiBlitz3.ab3@18523>   MOVEQ.l #$0F,D3
0002F05E <AmiBlitz3.ab3@18526>     LSL.w #1,D1
0002F062 <AmiBlitz3.ab3@18527>     BCC.w JL_0_B6EE
0002F064 <AmiBlitz3.ab3@18528>     ADDQ.w #1,D2
0002F066 <AmiBlitz3.ab3@18529>     MOVE.w D3,D4
0002F06A <AmiBlitz3.ab3@18532>   DBF D3,JL_0_B6E4
0002F06C <AmiBlitz3.ab3@18534>   SUBQ.w #1,D2
0002F070 <AmiBlitz3.ab3@18535>    BNE.w JL_0_B726
0002F072 <AmiBlitz3.ab3@18536>   ADDQ.w #4,A7
0002F074 <AmiBlitz3.ab3@18537>   MOVE.w D4,D1
0002F078 <AmiBlitz3.ab3@18538>    BEQ.w JL_0_B724
0002F07C <AmiBlitz3.ab3@18539>   CMP.w #$8,D1
0002F080 <AmiBlitz3.ab3@18540>    BCS.w JL_0_B712
0002F084 <AmiBlitz3.ab3@18541>   SUBI.w #$8,D1
0002F088 <AmiBlitz3.ab3@18542>    BSR.w JL_0_B712
0002F08A <AmiBlitz3.ab3@18543>   MOVEQ.l #$00,D1
0002F08C <AmiBlitz3.ab3@18546>   LSL.w #8,D1
0002F08E <AmiBlitz3.ab3@18547>   LSL.w #1,D1
0002F092 <AmiBlitz3.ab3@18548>   ORI.w #$E188,D1
0002F098 <AmiBlitz3.ab3@18549>   OR.w regnum,D1
0002F09C <AmiBlitz3.ab3@18550> BRA.w writeword
0002F09E <AmiBlitz3.ab3@18553> RTS
0002F0A0 <AmiBlitz3.ab3@18556>   MOVEQ #0,d1
0002F0A6 <AmiBlitz3.ab3@18557>   MOVE.w regnum,D1
0002F0A8 <AmiBlitz3.ab3@18558>   LSL.l #8,D1
0002F0AA <AmiBlitz3.ab3@18560>   LSL.l #4,d1
0002F0B0 <AmiBlitz3.ab3@18562>   OR.l #$4c3c0000,d1
0002F0B6 <AmiBlitz3.ab3@18563>   OR.w regnum,d1
0002F0BA <AmiBlitz3.ab3@18564>   BSR.w writelong
0002F0BC <AmiBlitz3.ab3@18565>   MOVE.l (A7)+,D1
0002F0C0 <AmiBlitz3.ab3@18567> BRA writelong
0002F0C6 <AmiBlitz3.ab3@18570>   MOVE.l destpointer,-(A7)
0002F0C8 <AmiBlitz3.ab3@18571>   MOVEQ.l #-$01,D7
0002F0CC <AmiBlitz3.ab3@18574>     BSR.w findhilib
0002F0D0 <AmiBlitz3.ab3@18575>      BEQ.w JL_0_B8A4
0002F0D4 <AmiBlitz3.ab3@18576>     TST.w $C(A2)
0002F0D8 <AmiBlitz3.ab3@18577>      BPL.w JL_0_B746
0002F0DC <AmiBlitz3.ab3@18579>     MOVE.l $16(A2),D1
0002F0E0 <AmiBlitz3.ab3@18580>     BEQ.w JL_0_B746
0002F0E4 <AmiBlitz3.ab3@18582>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F0E8 <AmiBlitz3.ab3@18583>     CMP.w #-$2,D1
0002F0EC <AmiBlitz3.ab3@18584>      BNE.w JL_0_B772
0002F0F0 <AmiBlitz3.ab3@18585>     BSR.w makevsize
0002F0F4 <AmiBlitz3.ab3@18586> BRA.w JL_0_B7FE
0002F0F8 <AmiBlitz3.ab3@18589>     CMP.w #-$5C4,D1
0002F0FC <AmiBlitz3.ab3@18590>      BNE.w JL_0_B790
0002F100 <AmiBlitz3.ab3@18591>     MOVE.w #$7000,D1
0002F108 <AmiBlitz3.ab3@18592>     BTST #$7,autorun
0002F10A <AmiBlitz3.ab3@18593>     SNE D1
0002F10E <AmiBlitz3.ab3@18594>     BSR.w writeword
0002F112 <AmiBlitz3.ab3@18595> BRA.w JL_0_B7FE
0002F116 <AmiBlitz3.ab3@18598>     CMP.w #-$12D,D1
0002F11A <AmiBlitz3.ab3@18599>      BNE.w JL_0_B7A0
0002F11E <AmiBlitz3.ab3@18600>     BSR.w makessize
0002F122 <AmiBlitz3.ab3@18601> BRA.w JL_0_B7FE
0002F126 <AmiBlitz3.ab3@18604>     CMP.w #-$1F5,D1
0002F12A <AmiBlitz3.ab3@18605>      BNE.w JL_0_B7C2
0002F12E <AmiBlitz3.ab3@18606>     MOVE.w #$203C,D1
0002F132 <AmiBlitz3.ab3@18607>     BSR.w writeword
0002F136 <AmiBlitz3.ab3@18608>     BSR.w addoff
0002F13C <AmiBlitz3.ab3@18609>     MOVE.l endop,D1
0002F140 <AmiBlitz3.ab3@18610>     BSR.w writelong
0002F144 <AmiBlitz3.ab3@18611> BRA.w JL_0_B7FE
0002F148 <AmiBlitz3.ab3@18614>     CMP.w #-$3E9,D1
0002F14C <AmiBlitz3.ab3@18615>      BNE.w JL_0_B7E4
0002F150 <AmiBlitz3.ab3@18616>     MOVE.w #$203C,D1
0002F154 <AmiBlitz3.ab3@18617>     BSR.w writeword
0002F158 <AmiBlitz3.ab3@18618>     BSR.w addoff
0002F15E <AmiBlitz3.ab3@18619>     MOVE.l data2at,D1
0002F162 <AmiBlitz3.ab3@18620>     BSR.w writelong
0002F166 <AmiBlitz3.ab3@18621> BRA.w JL_0_B7FE
0002F16A <AmiBlitz3.ab3@18624>     CMP.w #$1,D1
0002F16E <AmiBlitz3.ab3@18625>      BNE.w JL_0_B7FE
0002F172 <AmiBlitz3.ab3@18626>     MOVE.w #$203C,D1
0002F176 <AmiBlitz3.ab3@18627>     BSR.w writeword
0002F17C <AmiBlitz3.ab3@18628>     MOVE.l ptr_seg_debugger,D1
0002F180 <AmiBlitz3.ab3@18629>     BSR.w writelong
0002F184 <AmiBlitz3.ab3@18632>     MOVE.l $16(A2),D1
0002F18C <AmiBlitz3.ab3@18633>     MOVE.w #$FFFF,lasta6
0002F190 <AmiBlitz3.ab3@18634>     BSR.w Amakelibsub
0002F196 <AmiBlitz3.ab3@18635>     CMPI.w #$FFFE,$4(A2)
0002F19A <AmiBlitz3.ab3@18636>      BNE.w JL_0_B83A
0002F1A0 <AmiBlitz3.ab3@18637>     MOVE.l intdata1,D1
0002F1A4 <AmiBlitz3.ab3@18638>      BEQ.w JL_0_B83A
0002F1AA <AmiBlitz3.ab3@18639>     MOVE.w putidata1,D1
0002F1AE <AmiBlitz3.ab3@18640>     BSR.w writeword
0002F1B2 <AmiBlitz3.ab3@18641>     BSR.w addoff
0002F1B8 <AmiBlitz3.ab3@18642>     MOVE.l intdata1,D1
0002F1BC <AmiBlitz3.ab3@18643>     BSR.w writelong
0002F1C0 <AmiBlitz3.ab3@18646>     MOVE.w #$2B40,D1
0002F1C4 <AmiBlitz3.ab3@18647>     TST.w $1A(A2)
0002F1C8 <AmiBlitz3.ab3@18648>      BEQ.w JL_0_B746
0002F1CC <AmiBlitz3.ab3@18649>      BPL.w JL_0_B84E
0002F1D0 <AmiBlitz3.ab3@18650>     MOVE.w #$3B40,D1
0002F1D4 <AmiBlitz3.ab3@18653>     BSR.w writeword
0002F1D8 <AmiBlitz3.ab3@18654>     MOVE.w $A(A2),D1
0002F1DC <AmiBlitz3.ab3@18655>      BSR.w writeword
0002F1E2 <AmiBlitz3.ab3@18656>     CMPI.w #$FFFA,$4(A2)
0002F1E6 <AmiBlitz3.ab3@18657>      BNE.w JL_0_B746
0002F1E8 <AmiBlitz3.ab3@18658>     MOVE.w D7,-(A7)
0002F1EE <AmiBlitz3.ab3@18659>     MOVE.w numstatic,D4
0002F1F2 <AmiBlitz3.ab3@18660>      BEQ.w JL_0_B882
0002F1F8 <AmiBlitz3.ab3@18661>     MOVE.l staticdata,D3
0002F1FE <AmiBlitz3.ab3@18662>      JSR datastart
0002F202 <AmiBlitz3.ab3@18663>     MOVE.w #$C500,D1
0002F206 <AmiBlitz3.ab3@18664>      BSR.w tokejsr2
0002F20C <AmiBlitz3.ab3@18667>     MOVE.w maxsused,D4
0002F210 <AmiBlitz3.ab3@18668>      BEQ.w JL_0_B89E
0002F216 <AmiBlitz3.ab3@18669>     MOVE.l maxsat,D3
0002F21C <AmiBlitz3.ab3@18670>      JSR datastart
0002F220 <AmiBlitz3.ab3@18671>     MOVE.w #$CF00,D1
0002F224 <AmiBlitz3.ab3@18672>      BSR.w tokejsr2
0002F226 <AmiBlitz3.ab3@18675>     MOVE.w (A7)+,D7
0002F22A <AmiBlitz3.ab3@18676> BRA.w JL_0_B746
0002F230 <AmiBlitz3.ab3@18679>   MOVE.l destpointer,D1
0002F232 <AmiBlitz3.ab3@18680>   CMP.l (A7),D1
0002F236 <AmiBlitz3.ab3@18681>    BNE.w JL_0_B8BC
0002F23E <AmiBlitz3.ab3@18682>   MOVE.w #$0008,noinits+2
0002F242 <AmiBlitz3.ab3@18683> BRA.w JL_0_B8E6
0002F248 <AmiBlitz3.ab3@18686>   CLR.w noinits+2
0002F24E <AmiBlitz3.ab3@18687>   MOVE.w dontwrite,D1
0002F252 <AmiBlitz3.ab3@18688>    BNE.w JL_0_B8DE
0002F258 <AmiBlitz3.ab3@18689>   TST.l newinitaddr
0002F25C <AmiBlitz3.ab3@18690>    BEQ 'l10
0002F262 <AmiBlitz3.ab3@18691>   MOVE.l newinitaddr,D2
0002F268 <AmiBlitz3.ab3@18692>   SUB.l destbufferstart,D2
0002F26A <AmiBlitz3.ab3@18693>   ADDQ.l #2,d2
0002F270 <AmiBlitz3.ab3@18694>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F274 <AmiBlitz3.ab3@18696>   MOVE.w #$4EB9,(A0)+
0002F276 <AmiBlitz3.ab3@18697>   MOVE.l (A7),(A0)+
0002F27A <AmiBlitz3.ab3@18699> BRA 'l20
0002F280 <AmiBlitz3.ab3@18702>   MOVEA.l destbufferstart,A0                               ;write initcode
0002F286 <AmiBlitz3.ab3@18703>   TST.b saved0
0002F28A <AmiBlitz3.ab3@18704>   BEQ 'l1
0002F28E <AmiBlitz3.ab3@18705>   MOVE.w #$23c0,(a0)+
0002F290 <AmiBlitz3.ab3@18706>   MOVE.l a0,a1
0002F292 <AmiBlitz3.ab3@18707>   ADDQ.l #6,a1
0002F294 <AmiBlitz3.ab3@18708>   MOVE.l a1,(a0)+
0002F296 <AmiBlitz3.ab3@18709>   MOVEQ.l #$02,D2
0002F29A <AmiBlitz3.ab3@18710>   BSR.w addhunkoffset
0002F29E <AmiBlitz3.ab3@18711>   MOVE.w #$6004,(a0)+
0002F2A4 <AmiBlitz3.ab3@18712>   MOVE.l #$4e714e71,(a0)+
0002F2A8 <AmiBlitz3.ab3@18715>   MOVE.w #$4EB9,(A0)+
0002F2AA <AmiBlitz3.ab3@18716>   MOVE.l (A7),(A0)+
0002F2AC <AmiBlitz3.ab3@18717>   MOVEQ #2,d2
0002F2B2 <AmiBlitz3.ab3@18718>   TST.b saved0
0002F2B6 <AmiBlitz3.ab3@18719>   BEQ 'l20
0002F2B8 <AmiBlitz3.ab3@18720>   MOVEQ.l #14,D2
0002F2BC <AmiBlitz3.ab3@18723>   BSR.w addhunkoffset
0002F2C0 <AmiBlitz3.ab3@18724>   MOVE.w #$2039,(a0)+
0002F2C2 <AmiBlitz3.ab3@18725>   MOVE.l a1,(a0)+
0002F2C4 <AmiBlitz3.ab3@18726>   MOVEQ.l #20,d2
0002F2C8 <AmiBlitz3.ab3@18729>   BSR.w addhunkoffset
0002F2CC <AmiBlitz3.ab3@18732>   MOVE.w #$4E75,D1
0002F2D0 <AmiBlitz3.ab3@18733>   BSR.w writeword
0002F2D2 <AmiBlitz3.ab3@18736>   ADDQ.w #4,A7
0002F2D4 <AmiBlitz3.ab3@18737> RTS
0002F2D8 <AmiBlitz3.ab3@18742>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002F2DE <AmiBlitz3.ab3@18744>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002F2E4 <AmiBlitz3.ab3@18746>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002F2EA <AmiBlitz3.ab3@18751>   MOVE.l stringbuffer,D1
0002F2EE <AmiBlitz3.ab3@18752> BRA.w makesize
0002F2F0 <AmiBlitz3.ab3@18755>   MOVEQ.l #$00,D1
0002F2F6 <AmiBlitz3.ab3@18756>   MOVE.w globalvarpointer,D1
0002F2FA <AmiBlitz3.ab3@18757>   SUBI.w #$8000,D1
0002F2FE <AmiBlitz3.ab3@18758>   BNE.w makesize
0002F300 <AmiBlitz3.ab3@18759>     MOVEQ.l #$08,D1
0002F302 <AmiBlitz3.ab3@18762>   MOVE.l D1,-(A7)
0002F306 <AmiBlitz3.ab3@18763>   MOVE.w #$203C,D1
0002F30A <AmiBlitz3.ab3@18764>   BSR.w writeword
0002F30C <AmiBlitz3.ab3@18765>   MOVE.l (A7)+,D1
0002F310 <AmiBlitz3.ab3@18766> BRA.w writelong
0002F312 <AmiBlitz3.ab3@18774>   MOVEQ.l #$00,D1
0002F318 <AmiBlitz3.ab3@18775>   MOVEA.l libpointer,A1
0002F31C <AmiBlitz3.ab3@18778>     CMPA.w #$0,A1
0002F320 <AmiBlitz3.ab3@18779>     BEQ.w findhilib__done
0002F324 <AmiBlitz3.ab3@18780>       CMP.w $4(A1),D7
0002F328 <AmiBlitz3.ab3@18781>       BLS.w findhilib__next
0002F32C <AmiBlitz3.ab3@18782>         CMP.w $4(A1),D1
0002F330 <AmiBlitz3.ab3@18783>         BCC.w findhilib__next
0002F334 <AmiBlitz3.ab3@18784>           MOVE.w $4(A1),D1
0002F336 <AmiBlitz3.ab3@18785>           MOVEA.l A1,A2
0002F338 <AmiBlitz3.ab3@18788>     MOVEA.l (A1),A1
0002F33C <AmiBlitz3.ab3@18789> BRA.w findhilib__loop
0002F33E <AmiBlitz3.ab3@18792>   MOVE.w D1,D7
0002F340 <AmiBlitz3.ab3@18793> RTS
0002F342 <AmiBlitz3.ab3@18801>   MOVEQ.l #-$01,D1
0002F348 <AmiBlitz3.ab3@18802>   MOVEA.l libpointer,A1
0002F34C <AmiBlitz3.ab3@18805>     CMPA.w #$0,A1
0002F350 <AmiBlitz3.ab3@18806>      BEQ.w findlolib__done
0002F354 <AmiBlitz3.ab3@18807>     CMP.w $4(A1),D7
0002F358 <AmiBlitz3.ab3@18808>      BCC.w findlolib__next
0002F35C <AmiBlitz3.ab3@18809>     CMP.w $4(A1),D1
0002F360 <AmiBlitz3.ab3@18810>      BLS.w findlolib__next
0002F364 <AmiBlitz3.ab3@18811>     MOVE.w $4(A1),D1
0002F366 <AmiBlitz3.ab3@18812>     MOVEA.l A1,A2
0002F368 <AmiBlitz3.ab3@18815>     MOVEA.l (A1),A1
0002F36C <AmiBlitz3.ab3@18816> BRA.w findlolib__loop
0002F36E <AmiBlitz3.ab3@18819>   MOVE.w D1,D7
0002F372 <AmiBlitz3.ab3@18820>   CMP.w #-$1,D1
0002F374 <AmiBlitz3.ab3@18821> RTS
0002F37A <AmiBlitz3.ab3@18825>   ADDQ.w #1,globalvarpointer
0002F382 <AmiBlitz3.ab3@18826>   BCLR #$0,globalvarpointer+1
0002F384 <AmiBlitz3.ab3@18827>   MOVEQ.l #$00,D7
0002F388 <AmiBlitz3.ab3@18830>     BSR.w findlolib
0002F38C <AmiBlitz3.ab3@18831>     BEQ.w JL_0_BA74
0002F390 <AmiBlitz3.ab3@18832>     TST.w $C(A2)
0002F394 <AmiBlitz3.ab3@18833>     BPL.w JL_0_B99A
0002F396 <AmiBlitz3.ab3@18834>     MOVEA.l A2,A1
0002F39A <AmiBlitz3.ab3@18835>     ADDA.l $12(A1),A1
0002F39E <AmiBlitz3.ab3@18836>     TST.w -$2(A1)
0002F3A2 <AmiBlitz3.ab3@18837>     BEQ.w JL_0_BA34
0002F3A6 <AmiBlitz3.ab3@18838>     MOVE.l -$A(A1),D1
0002F3AA <AmiBlitz3.ab3@18839>     LEA $6(A2,D1.L),A3
0002F3AC <AmiBlitz3.ab3@18842>       TST.w (A3)+
0002F3B0 <AmiBlitz3.ab3@18843>       BEQ.w JL_0_B9CC
0002F3B2 <AmiBlitz3.ab3@18844>         ADDQ.w #2,A3
0002F3B6 <AmiBlitz3.ab3@18845> BRA.w JL_0_B9C0
0002F3BA <AmiBlitz3.ab3@18848>     TST.l $4(A3)
0002F3BE <AmiBlitz3.ab3@18849>     BEQ.w JL_0_BA34
0002F3C2 <AmiBlitz3.ab3@18850>       MOVE.w freemax(PC),D1
0002F3C6 <AmiBlitz3.ab3@18851>       BSR.w writeword
0002F3CA <AmiBlitz3.ab3@18852>       MOVE.w -$4(A1),D1
0002F3CE <AmiBlitz3.ab3@18853>       BSR.w writeword
0002F3D4 <AmiBlitz3.ab3@18854>       MOVE.l free,D1
0002F3D8 <AmiBlitz3.ab3@18855>       MOVE.w -$6(A1),D1
0002F3DC <AmiBlitz3.ab3@18856>       BSR.w writelong
0002F3E2 <AmiBlitz3.ab3@18857>       MOVE.l destpointer,-(A7)
0002F3E4 <AmiBlitz3.ab3@18858>       MOVEQ.l #$01,D1
0002F3E8 <AmiBlitz3.ab3@18859>       MOVE.w -$2(A1),D2
0002F3EA <AmiBlitz3.ab3@18860>       LSL.w D2,D1
0002F3EC <AmiBlitz3.ab3@18861>       MOVE.w D1,-(A7)
0002F3F0 <AmiBlitz3.ab3@18862>       MOVE.l -$A(A1),D1
0002F3F4 <AmiBlitz3.ab3@18863>       BSR.w Amakelibsub
0002F3F8 <AmiBlitz3.ab3@18864>       MOVE.w freemax3(PC),D1
0002F3FC <AmiBlitz3.ab3@18865>       BSR.w writeword
0002F3FE <AmiBlitz3.ab3@18866>       MOVE.w (A7)+,D1
0002F402 <AmiBlitz3.ab3@18867>       BSR.w writeword
0002F406 <AmiBlitz3.ab3@18868>       MOVE.l freemax2(PC),D1
0002F40A <AmiBlitz3.ab3@18869>       BSR.w writelong
0002F40C <AmiBlitz3.ab3@18870>       MOVE.l (A7)+,D1
0002F412 <AmiBlitz3.ab3@18871>       SUB.l destpointer,D1
0002F416 <AmiBlitz3.ab3@18872>       BSR.w writeword
0002F41A <AmiBlitz3.ab3@18873>       MOVE.w freemax4(PC),D1
0002F41E <AmiBlitz3.ab3@18874>       BSR.w writeword
0002F422 <AmiBlitz3.ab3@18877>     MOVE.l $1C(A2),D1
0002F426 <AmiBlitz3.ab3@18878>     BEQ.w JL_0_B99A
0002F42A <AmiBlitz3.ab3@18880>     MOVE.w $4(A2),D1
0002F42E <AmiBlitz3.ab3@18881>     CMP.w #-$2,D1
0002F432 <AmiBlitz3.ab3@18882>     BNE.w JL_0_BA50
0002F436 <AmiBlitz3.ab3@18883>       BSR.w makevsize
0002F43A <AmiBlitz3.ab3@18884> BRA.w JL_0_BA60
0002F43E <AmiBlitz3.ab3@18887>     CMP.w #-$12D,D1
0002F442 <AmiBlitz3.ab3@18888>     BNE.w JL_0_BA60
0002F446 <AmiBlitz3.ab3@18889>       BSR.w makessize
0002F44A <AmiBlitz3.ab3@18890> BRA.w JL_0_BA60
0002F44E <AmiBlitz3.ab3@18893>     MOVE.l $1C(A2),D1
0002F456 <AmiBlitz3.ab3@18894>     MOVE.w #$FFFF,lasta6
0002F45A <AmiBlitz3.ab3@18895>     BSR.w Amakelibsub
0002F45E <AmiBlitz3.ab3@18896> BRA.w JL_0_B99A
0002F460 <AmiBlitz3.ab3@18899> RTS
0002F464 <AmiBlitz3.ab3@18903> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002F466 <AmiBlitz3.ab3@18905> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002F46A <AmiBlitz3.ab3@18906>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002F46C <AmiBlitz3.ab3@18907> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002F470 <AmiBlitz3.ab3@18908> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002F476 <AmiBlitz3.ab3@18913>   TST.b debugmode
0002F47A <AmiBlitz3.ab3@18914>    BEQ.b chkstak__skip
0002F480 <AmiBlitz3.ab3@18915>   TST.w debugversion
0002F484 <AmiBlitz3.ab3@18916>    BNE.b chkstak__skip
0002F488 <AmiBlitz3.ab3@18917>   MOVE.w #$C308,D1
0002F48C <AmiBlitz3.ab3@18918> BRA.w Atokejsr
0002F48E <AmiBlitz3.ab3@18921> RTS
0002F496 <AmiBlitz3.ab3@18925>   MOVE.w #$FFFF,lasta6
0002F49A <AmiBlitz3.ab3@18930>   MOVEM.l D0-d7/A0-a6,-(A7)
0002F4A2 <AmiBlitz3.ab3@18931>   MOVE.b #1,nostringopt
0002F4A8 <AmiBlitz3.ab3@18932>   JSR searchinstr
0002F4AA <AmiBlitz3.ab3@18933>   MOVE.l A3,D1
0002F4AC <AmiBlitz3.ab3@18934>   SUB.l A2,D1
0002F4B0 <AmiBlitz3.ab3@18935>   BSR.w Amakelibsub
0002F4B4 <AmiBlitz3.ab3@18936>   MOVEM.l (A7)+,d0-d7/a0-a6
0002F4B6 <AmiBlitz3.ab3@18937> RTS
0002F4BC <AmiBlitz3.ab3@18944>   MOVE.l libisat,-(A7)                                   ;library write
0002F4C2 <AmiBlitz3.ab3@18945>   MOVE.l A2,libisat
0002F4C4 <AmiBlitz3.ab3@18947>   MOVEA.l A1,A2
0002F4C6 <AmiBlitz3.ab3@18948>   MOVE.w (A2)+,D1
0002F4CC <AmiBlitz3.ab3@18949>   MOVE.l a2,lastinstructionaddr
0002F4D0 <AmiBlitz3.ab3@18950>   ANDI.w #$FF,D1
0002F4D2 <AmiBlitz3.ab3@18951>   ADDA.w D1,A2
0002F4D4 <AmiBlitz3.ab3@18952>   EXG.l D0,A2
0002F4D6 <AmiBlitz3.ab3@18953>   ADDQ.l #1,D0
0002F4DA <AmiBlitz3.ab3@18954>   BCLR #$0,D0
0002F4DC <AmiBlitz3.ab3@18955>   EXG.l D0,A2
0002F4E0 <AmiBlitz3.ab3@18956> BRA.w JL_0_BB08
0002F4E6 <AmiBlitz3.ab3@18960>   MOVE.l libisat,-(A7)
0002F4EC <AmiBlitz3.ab3@18961>   MOVE.l A2,libisat
0002F4EE <AmiBlitz3.ab3@18962>   MOVEA.l A3,A2
0002F4F2 <AmiBlitz3.ab3@18963> BRA.w JL_0_BB08
0002F4F4 <AmiBlitz3.ab3@18967>   MOVE.l a1,-(a7)
0002F4F6 <AmiBlitz3.ab3@18970>   MOVE.l d0,a0
0002F4FA <AmiBlitz3.ab3@18971>   MOVE.l $a(a0),d0
0002F4FC <AmiBlitz3.ab3@18972>   MOVE.l d0,a1
0002F504 <AmiBlitz3.ab3@18973>   CMP.l #8,4(a1)
0002F508 <AmiBlitz3.ab3@18974>   BLE 'norec
0002F50A <AmiBlitz3.ab3@18975>   MOVE.l a0,-(a7)
0002F510 <AmiBlitz3.ab3@18976>   MOVE.l typebase,-(a7)
0002F512 <AmiBlitz3.ab3@18977>   MOVEQ #0,d0
0002F516 <AmiBlitz3.ab3@18978>   MOVE.w 4(a0),d0
0002F51C <AmiBlitz3.ab3@18979>   ADD.l d0,typebase
0002F520 <AmiBlitz3.ab3@18980>   MOVE.l $4(a1),d0
0002F524 <AmiBlitz3.ab3@18981>   BSR scantype
0002F52A <AmiBlitz3.ab3@18982>   MOVE.l (a7)+,typebase
0002F52C <AmiBlitz3.ab3@18983>   MOVE.l (a7)+,a0
0002F532 <AmiBlitz3.ab3@18986>   CMP.l #newtype_string,d0
0002F536 <AmiBlitz3.ab3@18987>   BNE 'nostring
0002F53C <AmiBlitz3.ab3@18988>   ADDQ #2,a2offset
0002F542 <AmiBlitz3.ab3@18989>   MOVE.l #$3f3c0000,d1
0002F544 <AmiBlitz3.ab3@18990>   MOVEQ #0,d0
0002F548 <AmiBlitz3.ab3@18991>   MOVE.w 4(a0),d0
0002F54E <AmiBlitz3.ab3@18992>   ADD.l typebase,d0
0002F550 <AmiBlitz3.ab3@18993>   MOVE.w d0,d1
0002F554 <AmiBlitz3.ab3@18994>   BSR writelong
0002F55A <AmiBlitz3.ab3@18995>   TST.b debugmode
0002F55E <AmiBlitz3.ab3@18996>   BEQ 'l1a
0002F560 <AmiBlitz3.ab3@18997>   MOVE.l d1,-(a7)
0002F566 <AmiBlitz3.ab3@18998>   MOVE.l #$c308,d1
0002F56C <AmiBlitz3.ab3@18999>   JSR Atokejsr
0002F56E <AmiBlitz3.ab3@19000>   MOVE.l (a7)+,d1
0002F572 <AmiBlitz3.ab3@19003>   TST.w 8(a0)
0002F576 <AmiBlitz3.ab3@19004>   BEQ 'nostring
0002F57A <AmiBlitz3.ab3@19005>   MOVEM.l d2/d3,-(a7)
0002F57C <AmiBlitz3.ab3@19006>   MOVE.l d1,d2
0002F57E <AmiBlitz3.ab3@19007>   MOVEQ #0,d3
0002F582 <AmiBlitz3.ab3@19008>   MOVE.w 8(a0),d3
0002F584 <AmiBlitz3.ab3@19009>   SUBQ.l #1,d3
0002F588 <AmiBlitz3.ab3@19010>   BEQ 'nostring2
0002F58A <AmiBlitz3.ab3@19013>   ADDQ.l #4,d2
0002F58C <AmiBlitz3.ab3@19014>   MOVE.l d2,d1
0002F590 <AmiBlitz3.ab3@19015>   BSR writelong
0002F596 <AmiBlitz3.ab3@19016>   TST.b debugmode
0002F59A <AmiBlitz3.ab3@19017>   BEQ 'l1
0002F5A0 <AmiBlitz3.ab3@19018>   MOVE.l #$c308,d1
0002F5A6 <AmiBlitz3.ab3@19019>   JSR Atokejsr
0002F5AC <AmiBlitz3.ab3@19022>   ADDQ #2,a2offset
0002F5AE <AmiBlitz3.ab3@19023>   SUBQ.l #1,d3
0002F5B2 <AmiBlitz3.ab3@19024>   BNE 'loop
0002F5B6 <AmiBlitz3.ab3@19027>   MOVEM.l (a7)+,d2/d3
0002F5B8 <AmiBlitz3.ab3@19030>   MOVE.l (a0),d0
0002F5BC <AmiBlitz3.ab3@19031>   BNE 'more
0002F5BE <AmiBlitz3.ab3@19032>   MOVE.l (a7)+,a1
0002F5C0 <AmiBlitz3.ab3@19033> RTS
0002F5C4 <AmiBlitz3.ab3@19036> libisat:   Ds.l 1
0002F5CA <AmiBlitz3.ab3@19042>   MOVE.l libisat,-(A7)                                   
0002F5D0 <AmiBlitz3.ab3@19043>   MOVE.l A2,libisat
0002F5D4 <AmiBlitz3.ab3@19044>   LEA $6(A2,D1.L),A2
0002F5DC <AmiBlitz3.ab3@19048>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002F5E0 <AmiBlitz3.ab3@19049>   BEQ 'dowritevar
0002F5E8 <AmiBlitz3.ab3@19050>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002F5EC <AmiBlitz3.ab3@19051>   BEQ 'dowritevar
0002F5F4 <AmiBlitz3.ab3@19052>   CMP.l #$3e175265,$1c(a2)
0002F5F8 <AmiBlitz3.ab3@19053>   BEQ 'dowritevar
0002F600 <AmiBlitz3.ab3@19054>   CMP.l #$3e165772,$1c(a2)
0002F604 <AmiBlitz3.ab3@19055>   BNE 'nowritef
0002F608 <AmiBlitz3.ab3@19058>   MOVEM.l a0-a2/d2,-(a7)
0002F60A <AmiBlitz3.ab3@19059>   MOVEQ #0,d1
0002F614 <AmiBlitz3.ab3@19060>   MOVE.l #0,typebase
0002F618 <AmiBlitz3.ab3@19061>   MOVE.l $a(a3),a0
0002F61C <AmiBlitz3.ab3@19062>   MOVE.l $4(a0),d0
0002F622 <AmiBlitz3.ab3@19063>   CMP.l #8,d0
0002F626 <AmiBlitz3.ab3@19064>   BLE 'notype
0002F62A <AmiBlitz3.ab3@19065>   BSR scantype
0002F630 <AmiBlitz3.ab3@19068>   MOVE.l #$3f3c0000,d1
0002F636 <AmiBlitz3.ab3@19069>   MOVE.w a2offset,d1
0002F63A <AmiBlitz3.ab3@19070>   BSR writelong
0002F640 <AmiBlitz3.ab3@19071>   MOVE.l #$3f3c0000,d1
0002F644 <AmiBlitz3.ab3@19072>   MOVE.l $a(a3),a0
0002F648 <AmiBlitz3.ab3@19073>   MOVE.w 8(a0),d1
0002F64C <AmiBlitz3.ab3@19074>   BSR writelong
0002F652 <AmiBlitz3.ab3@19075>   MOVE.l #$3f3cab12,d1
0002F656 <AmiBlitz3.ab3@19076>   BSR writelong
0002F65C <AmiBlitz3.ab3@19077>   ADDQ.w #6,a2offset
0002F660 <AmiBlitz3.ab3@19078>   MOVEM.l (a7)+,a0-a2/d2
0002F666 <AmiBlitz3.ab3@19081>   TST.b fpu
0002F66A <AmiBlitz3.ab3@19082>   BEQ 'nofpu2
0002F672 <AmiBlitz3.ab3@19083>   CMP.l #$496e7400,$1a(a2)
0002F676 <AmiBlitz3.ab3@19084>   BNE 'noint
0002F678 <AmiBlitz3.ab3@19085>   MOVEQ #0,d1
0002F67E <AmiBlitz3.ab3@19086>   SUBQ.l #8,destpointer                                    ;fpu int
0002F684 <AmiBlitz3.ab3@19087>   CLR.w a2offset
0002F688 <AmiBlitz3.ab3@19088>   CMP.b #2,d2
0002F68C <AmiBlitz3.ab3@19089>   BGT 'noword
0002F690 <AmiBlitz3.ab3@19090>   MOVE.w #$48c0,d1
0002F696 <AmiBlitz3.ab3@19091>   OR.w regnumstore,d1
0002F69A <AmiBlitz3.ab3@19092>   BSR writeword
0002F69E <AmiBlitz3.ab3@19093> BRA 'exit2
0002F6A2 <AmiBlitz3.ab3@19096>    CMP.b #3,d2
0002F6A6 <AmiBlitz3.ab3@19097>         BNE 'nolong
0002F6AA <AmiBlitz3.ab3@19098> BRA 'exit2
0002F6AE <AmiBlitz3.ab3@19101>    CMP.b #4,d2
0002F6B2 <AmiBlitz3.ab3@19102>         BNE 'noquick
0002F6B6 <AmiBlitz3.ab3@19103>         MOVE.w #$e080,d1
0002F6BC <AmiBlitz3.ab3@19104>         OR.w regnumstore,d1
0002F6C0 <AmiBlitz3.ab3@19105>         BSR writeword
0002F6C4 <AmiBlitz3.ab3@19106>         MOVE.w #$e080,d1
0002F6CA <AmiBlitz3.ab3@19107>         OR.w regnumstore,d1
0002F6CE <AmiBlitz3.ab3@19108>         BSR writeword
0002F6D2 <AmiBlitz3.ab3@19109> BRA 'exit2
0002F6D4 <AmiBlitz3.ab3@19112>         MOVEQ #0,d0
0002F6D6 <AmiBlitz3.ab3@19113>         MOVEQ #0,d1
0002F6DC <AmiBlitz3.ab3@19114>         MOVE.w regnumstore,d0
0002F6DE <AmiBlitz3.ab3@19115>         ASL.l #7,d0
0002F6E4 <AmiBlitz3.ab3@19116>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002F6E6 <AmiBlitz3.ab3@19117>         OR.l d0,d1
0002F6EC <AmiBlitz3.ab3@19119>         MOVE.l #$3f000000,d1
0002F6EE <AmiBlitz3.ab3@19121>         MOVEQ #0,d0
0002F6F0 <AmiBlitz3.ab3@19122>         MOVEQ #0,d1
0002F6F6 <AmiBlitz3.ab3@19123>         MOVE.w regnumstore,d0
0002F6F8 <AmiBlitz3.ab3@19124>         ASL.l #7,d0
0002F6FA <AmiBlitz3.ab3@19125>         MOVE.l d0,d1
0002F700 <AmiBlitz3.ab3@19126>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002F702 <AmiBlitz3.ab3@19127>         ASL.l #3,d0
0002F704 <AmiBlitz3.ab3@19128>         OR.l d0,d1
0002F708 <AmiBlitz3.ab3@19129>         BSR writelong
0002F70A <AmiBlitz3.ab3@19130>         MOVEQ #0,d0
0002F710 <AmiBlitz3.ab3@19131>         MOVE.w regnumstore,d0
0002F712 <AmiBlitz3.ab3@19132>         ASL.l #7,d0
0002F718 <AmiBlitz3.ab3@19133>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002F71A <AmiBlitz3.ab3@19134>         OR.l d0,d1
0002F71C <AmiBlitz3.ab3@19135>         ASL.l #1,d0
0002F71E <AmiBlitz3.ab3@19136>         ASL.l #8,d0
0002F720 <AmiBlitz3.ab3@19137>         OR.l d0,d1
0002F724 <AmiBlitz3.ab3@19138> BRA 'exit
0002F72A <AmiBlitz3.ab3@19141>   CMP.w #$3c01,24(a2)
0002F72E <AmiBlitz3.ab3@19142>   BNE 'noval
0002F730 <AmiBlitz3.ab3@19143>   MOVE.l a2,-(a7)
0002F734 <AmiBlitz3.ab3@19144>   BSR.w JL_0_BB14
0002F736 <AmiBlitz3.ab3@19145>   MOVE.l (a7)+,a2
0002F73A <AmiBlitz3.ab3@19146> BRA 'exit2
0002F742 <AmiBlitz3.ab3@19163>   CMP.l #$41627300,$1a(a2)
0002F746 <AmiBlitz3.ab3@19164>   BNE 'noabs
0002F748 <AmiBlitz3.ab3@19165>   MOVEQ #0,d1
0002F74E <AmiBlitz3.ab3@19166>   MOVE.w regnumstore,d1
0002F750 <AmiBlitz3.ab3@19167>   MOVE.w d1,d0
0002F752 <AmiBlitz3.ab3@19168>   ASL.w #7,d1
0002F754 <AmiBlitz3.ab3@19169>   ASL.w #8,d0
0002F756 <AmiBlitz3.ab3@19170>   ASL.w #2,d0
0002F758 <AmiBlitz3.ab3@19171>   OR.w d0,d1
0002F75E <AmiBlitz3.ab3@19172>   SUBQ.l #8,destpointer                                    ;fpu abs
0002F762 <AmiBlitz3.ab3@19173>   MOVEM.l d3/d1,-(a7)
0002F766 <AmiBlitz3.ab3@19174>   MOVE.w #5,d3
0002F768 <AmiBlitz3.ab3@19175>   EXG d2,d3
0002F76E <AmiBlitz3.ab3@19176>   MOVE.w regnum,-(a7)
0002F778 <AmiBlitz3.ab3@19177>   MOVE.w regnumstore,regnum
0002F77C <AmiBlitz3.ab3@19178>   BSR writeconvertcode
0002F782 <AmiBlitz3.ab3@19179>   MOVE.w (a7)+,regnum
0002F784 <AmiBlitz3.ab3@19180>   EXG d2,d3
0002F788 <AmiBlitz3.ab3@19181>   MOVEM.l (a7)+,d3/d1
0002F78E <AmiBlitz3.ab3@19182>   OR.l #$f2000018,d1
0002F794 <AmiBlitz3.ab3@19183>   CLR.w a2offset
0002F798 <AmiBlitz3.ab3@19184> BRA 'exit
0002F79C <AmiBlitz3.ab3@19187>   CMP.b #5,d2
0002F7A0 <AmiBlitz3.ab3@19188>   BNE 'nofpu2
0002F7A4 <AmiBlitz3.ab3@19189>   MOVE.b 24(a2),d0
0002F7A8 <AmiBlitz3.ab3@19190>   CMP.b #$60,d0                                            ;nolib $edxx
0002F7AC <AmiBlitz3.ab3@19191>   BNE 'nofpu
0002F7AE <AmiBlitz3.ab3@19192>   MOVEQ #0,d1
0002F7B4 <AmiBlitz3.ab3@19193>   MOVE.w regnumstore,d1
0002F7B6 <AmiBlitz3.ab3@19194>   MOVE.w d1,d0
0002F7B8 <AmiBlitz3.ab3@19195>   ASL.w #7,d1
0002F7BA <AmiBlitz3.ab3@19196>   ASL.w #8,d0
0002F7BC <AmiBlitz3.ab3@19197>   ASL.w #2,d0
0002F7BE <AmiBlitz3.ab3@19198>   OR.w d0,d1
0002F7C2 <AmiBlitz3.ab3@19199>   MOVE.b 25(a2),d0
0002F7C6 <AmiBlitz3.ab3@19200>   CMP.b #5,d0
0002F7CA <AmiBlitz3.ab3@19201>   BNE 'nocos
0002F7D0 <AmiBlitz3.ab3@19202>   OR.l #$f200001d,d1                                       ;fpu cos
0002F7D4 <AmiBlitz3.ab3@19203> BRA 'exit
0002F7D8 <AmiBlitz3.ab3@19206>   CMP.b #$c,d0
0002F7DC <AmiBlitz3.ab3@19207>   BNE 'nosqr
0002F7E2 <AmiBlitz3.ab3@19208>   OR.l #$f2000004,d1                                       ;fpu sqr
0002F7E6 <AmiBlitz3.ab3@19209> BRA 'exit
0002F7EA <AmiBlitz3.ab3@19212>   CMP.b #$d,d0
0002F7EE <AmiBlitz3.ab3@19213>   BNE 'notan
0002F7F4 <AmiBlitz3.ab3@19214>   OR.l #$f200000f,d1                                       ;fpu tan
0002F7F8 <AmiBlitz3.ab3@19215> BRA 'exit
0002F7FC <AmiBlitz3.ab3@19218>   CMP.b #$a,d0
0002F800 <AmiBlitz3.ab3@19219>   BNE 'nosin
0002F806 <AmiBlitz3.ab3@19220>   OR.l #$f200000e,d1                                       ;fpu sin
0002F80A <AmiBlitz3.ab3@19221> BRA 'exit
0002F80E <AmiBlitz3.ab3@19224>   CMP.b #$3,d0
0002F812 <AmiBlitz3.ab3@19225>   BNE 'noasin
0002F818 <AmiBlitz3.ab3@19226>   OR.l #$f200000c,d1                                       ;fpu asin
0002F81C <AmiBlitz3.ab3@19227> BRA 'exit
0002F820 <AmiBlitz3.ab3@19230>   CMP.b #$2,d0
0002F824 <AmiBlitz3.ab3@19231>   BNE 'noacos
0002F82A <AmiBlitz3.ab3@19232>   OR.l #$f200001c,d1                                       ;fpu acos
0002F82E <AmiBlitz3.ab3@19233> BRA 'exit
0002F832 <AmiBlitz3.ab3@19236>   CMP.b #$4,d0
0002F836 <AmiBlitz3.ab3@19237>   BNE 'noatan
0002F83C <AmiBlitz3.ab3@19238>   OR.l #$f200000a,d1                                       ;fpu atan
0002F840 <AmiBlitz3.ab3@19239> BRA 'exit
0002F844 <AmiBlitz3.ab3@19242>   CMP.b #$e,d0
0002F848 <AmiBlitz3.ab3@19243>   BNE 'nohtan
0002F84E <AmiBlitz3.ab3@19244>   OR.l #$f2000009,d1                                       ;fpu htan
0002F852 <AmiBlitz3.ab3@19245> BRA 'exit
0002F856 <AmiBlitz3.ab3@19248>   CMP.b #$6,d0
0002F85A <AmiBlitz3.ab3@19249>   BNE 'nohcos
0002F860 <AmiBlitz3.ab3@19250>   OR.l #$f2000019,d1                                       ;fpu hcos
0002F864 <AmiBlitz3.ab3@19251> BRA 'exit
0002F868 <AmiBlitz3.ab3@19254>   CMP.b #$b,d0
0002F86C <AmiBlitz3.ab3@19255>   BNE 'nohsin
0002F872 <AmiBlitz3.ab3@19256>   OR.l #$f2000002,d1                                       ;fpu hsin
0002F876 <AmiBlitz3.ab3@19257> BRA 'exit
0002F87A <AmiBlitz3.ab3@19260>   CMP.b #$9,d0
0002F87E <AmiBlitz3.ab3@19261>   BNE 'nolog
0002F884 <AmiBlitz3.ab3@19262>   OR.l #$f2000014,d1                                       ;fpu log
0002F888 <AmiBlitz3.ab3@19263> BRA 'exit
0002F88C <AmiBlitz3.ab3@19266>   CMP.b #$8,d0
0002F890 <AmiBlitz3.ab3@19267>   BNE 'nolog10
0002F896 <AmiBlitz3.ab3@19268>   OR.l #$f2000015,d1                                       ;fpu log10
0002F89A <AmiBlitz3.ab3@19269> BRA 'exit
0002F89E <AmiBlitz3.ab3@19272>   CMP.b #$7,d0
0002F8A2 <AmiBlitz3.ab3@19273>   BNE 'noexp
0002F8A8 <AmiBlitz3.ab3@19274>   OR.l #$f2000010,d1                                       ;fpu exp
0002F8AC <AmiBlitz3.ab3@19275> BRA 'exit
0002F8B2 <AmiBlitz3.ab3@19278>   LEA fpuerr,a0
0002F8B4 <AmiBlitz3.ab3@19279>   MOVE.l a0,-(a7)
0002F8BA <AmiBlitz3.ab3@19280> JMP handle_compileerror
0002F8BE <AmiBlitz3.ab3@19284>   CMP.b #$3c,d0
0002F8C2 <AmiBlitz3.ab3@19285>   BNE 'nofpu2
0002F8C4 <AmiBlitz3.ab3@19286>   MOVEQ #0,d1
0002F8CA <AmiBlitz3.ab3@19287>       MOVE.w regnumstore,d1
0002F8CC <AmiBlitz3.ab3@19288>       MOVE.w d1,d0
0002F8CE <AmiBlitz3.ab3@19289>       ASL.w #7,d1
0002F8D0 <AmiBlitz3.ab3@19290>       ASL.w #8,d0
0002F8D2 <AmiBlitz3.ab3@19291>       ASL.w #2,d0
0002F8D4 <AmiBlitz3.ab3@19292>       OR.w d0,d1
0002F8DA <AmiBlitz3.ab3@19293>       CMP.b #$03,25(a2)
0002F8DE <AmiBlitz3.ab3@19294>       BNE 'nosgn
0002F8E4 <AmiBlitz3.ab3@19297>       SUBQ.l #8,destpointer                                ;fpu sgn
0002F8EA <AmiBlitz3.ab3@19298>         OR.l #$f200003a,d1
0002F8EE <AmiBlitz3.ab3@19299>         BSR writelong
0002F8F4 <AmiBlitz3.ab3@19300>         CLR.w a2offset
0002F8FA <AmiBlitz3.ab3@19301>          MOVE.l #$F28E0006,d1
0002F8FE <AmiBlitz3.ab3@19302>          BSR writelong
0002F904 <AmiBlitz3.ab3@19303>   MOVE.l #$7000600a,d1
0002F908 <AmiBlitz3.ab3@19304>   BSR writelong
0002F90E <AmiBlitz3.ab3@19305>   MOVE.l #$70014840,d1
0002F912 <AmiBlitz3.ab3@19306>   BSR writelong
0002F918 <AmiBlitz3.ab3@19307>   MOVE.l #$F292,d1
0002F91C <AmiBlitz3.ab3@19308>   BSR writeword
0002F922 <AmiBlitz3.ab3@19309>   MOVE.l #$000470FF,d1
0002F926 <AmiBlitz3.ab3@19310> BRA 'exit
0002F92E <AmiBlitz3.ab3@19313>   CMP.l #"Frac",$1a(a2)
0002F932 <AmiBlitz3.ab3@19314>   BNE 'nofrac
0002F938 <AmiBlitz3.ab3@19315> JMP notwork
0002F93C <AmiBlitz3.ab3@19356> BRA 'exit
0002F940 <AmiBlitz3.ab3@19360>   BSR.w JL_0_BB14                                          ;write lib code
0002F946 <AmiBlitz3.ab3@19361>   MOVE.l (A7)+,libisat
0002F948 <AmiBlitz3.ab3@19362> RTS
0002F94C <AmiBlitz3.ab3@19365>   BSR writelong
0002F952 <AmiBlitz3.ab3@19368>   MOVE.l (A7)+,libisat
0002F954 <AmiBlitz3.ab3@19369> RTS
0002F958 <AmiBlitz3.ab3@19373>   BSR.w fetchregs
0002F95E <AmiBlitz3.ab3@19374>   TST.b debugmode
0002F962 <AmiBlitz3.ab3@19375>    BEQ.w JL_0_BB76
0002F964 <AmiBlitz3.ab3@19376>   MOVE.l (A2),D1
0002F968 <AmiBlitz3.ab3@19377>   OR.l $8(A2),D1
0002F96C <AmiBlitz3.ab3@19378>   BCLR #$0,D1
0002F96E <AmiBlitz3.ab3@19379>   TST.l D1
0002F972 <AmiBlitz3.ab3@19380>    BEQ.w JL_0_BB76
0002F974 <AmiBlitz3.ab3@19381>   MOVE.l (A2)+,D1
0002F978 <AmiBlitz3.ab3@19382>   BTST #$0,D1
0002F97C <AmiBlitz3.ab3@19383>    BEQ.w JL_0_BB60
0002F982 <AmiBlitz3.ab3@19384>   TST.w blitzmode
0002F986 <AmiBlitz3.ab3@19385>    BPL.w blitzerr
0002F98C <AmiBlitz3.ab3@19386>   TST.b debugmode
0002F990 <AmiBlitz3.ab3@19387>    BEQ.w JL_0_BB5C
0002F992 <AmiBlitz3.ab3@19388>   MOVE.l D1,-(A7)
0002F996 <AmiBlitz3.ab3@19389>   MOVE.w #$C311,D1
0002F99A <AmiBlitz3.ab3@19390>    BSR.w makebtst
0002F99C <AmiBlitz3.ab3@19391>   MOVE.l (A7)+,D1
0002F9A0 <AmiBlitz3.ab3@19394>   BCLR #$0,D1
0002F9A2 <AmiBlitz3.ab3@19397>   TST.l D1
0002F9A6 <AmiBlitz3.ab3@19398>    BSR.w JL_0_BBC6
0002F9A8 <AmiBlitz3.ab3@19399>   MOVE.l (A2)+,D1
0002F9AC <AmiBlitz3.ab3@19400>    BSR.w JL_0_BB98
0002F9AE <AmiBlitz3.ab3@19401>   MOVE.l (A2)+,D1
0002F9B2 <AmiBlitz3.ab3@19402>    BSR.w JL_0_BBC6
0002F9B6 <AmiBlitz3.ab3@19403> BRA.w JL_0_BB90
0002F9BC <AmiBlitz3.ab3@19406>   BTST #$0,$3(A2)
0002F9C0 <AmiBlitz3.ab3@19407>    BEQ.w JL_0_BB88
0002F9C4 <AmiBlitz3.ab3@19408>   MOVE.w blitzmode(PC),D1
0002F9C8 <AmiBlitz3.ab3@19409>    BPL.w blitzerr
0002F9CC <AmiBlitz3.ab3@19412>   MOVE.l $4(A2),D1
0002F9D0 <AmiBlitz3.ab3@19413>    BSR.w JL_0_BB98
0002F9D6 <AmiBlitz3.ab3@19416>   MOVEA.l libisat,A2
0002F9D8 <AmiBlitz3.ab3@19417> RTS
0002F9DC <AmiBlitz3.ab3@19420>   BTST #$0,D1
0002F9E0 <AmiBlitz3.ab3@19421>    BEQ.w JL_0_BBC4
0002F9E6 <AmiBlitz3.ab3@19422>   TST.w blitzmode
0002F9EA <AmiBlitz3.ab3@19423>    BMI.w amigaerr
0002F9F0 <AmiBlitz3.ab3@19424>   TST.b debugmode
0002F9F4 <AmiBlitz3.ab3@19425>    BEQ.w JL_0_BBC0
0002F9F6 <AmiBlitz3.ab3@19426>   MOVE.l D1,-(A7)
0002F9FA <AmiBlitz3.ab3@19427>   MOVE.w #$C312,D1
0002F9FE <AmiBlitz3.ab3@19428>    BSR.w makebtst
0002FA00 <AmiBlitz3.ab3@19429>   MOVE.l (A7)+,D1
0002FA04 <AmiBlitz3.ab3@19432>   BCLR #$0,D1
0002FA06 <AmiBlitz3.ab3@19435>   TST.l D1
0002FA0A <AmiBlitz3.ab3@19438>    BEQ.w JL_0_BBD2
0002FA0C <AmiBlitz3.ab3@19439>   MOVE.l A1,-(A7)
0002FA10 <AmiBlitz3.ab3@19440>    BSR.w JL_0_BBD4
0002FA12 <AmiBlitz3.ab3@19441>   MOVEA.l (A7)+,A1
0002FA14 <AmiBlitz3.ab3@19444> RTS
0002FA1A <AmiBlitz3.ab3@19447>   MOVEA.l libisat,A0
0002FA20 <AmiBlitz3.ab3@19448>   TST.w cfetchmode
0002FA24 <AmiBlitz3.ab3@19449>    BEQ.w JL_0_BBF6
0002FA26 <AmiBlitz3.ab3@19450>   ADD.l A0,D1
0002FA28 <AmiBlitz3.ab3@19451>   MOVE.l D1,-(A7)
0002FA2C <AmiBlitz3.ab3@19452>   MOVE.w #$4EB9,D1
0002FA30 <AmiBlitz3.ab3@19453>    BSR.w writeword
0002FA32 <AmiBlitz3.ab3@19454>   MOVE.l (A7)+,D1
0002FA36 <AmiBlitz3.ab3@19455> BRA.w writelong
0002FA3A <AmiBlitz3.ab3@19458>   LEA $0(A0,D1.L),A1
0002FA40 <AmiBlitz3.ab3@19459>   CLR.w inline
0002FA44 <AmiBlitz3.ab3@19462>   CMPI.b #$A0,(A1)+
0002FA48 <AmiBlitz3.ab3@19463>    BNE.w JL_0_BC68
0002FA4A <AmiBlitz3.ab3@19464>   TST.b (A1)+
0002FA4E <AmiBlitz3.ab3@19465>    BEQ.w JL_0_BC18
0002FA54 <AmiBlitz3.ab3@19466>   CMPI.b #$1,-$1(A1)
0002FA58 <AmiBlitz3.ab3@19467>    BEQ.w JL_0_BC24
0002FA5E <AmiBlitz3.ab3@19470>   MOVE.w (A1)+,inline
0002FA60 <AmiBlitz3.ab3@19471>   ADDQ.l #4,D1
0002FA64 <AmiBlitz3.ab3@19472> BRA.w JL_0_BC00
0002FA6A <AmiBlitz3.ab3@19475>   TST.w blitzmode
0002FA6E <AmiBlitz3.ab3@19476>    BPL.w JL_0_BC4A
0002FA74 <AmiBlitz3.ab3@19477>   TST.b debugmode
0002FA78 <AmiBlitz3.ab3@19478>    BEQ.w JL_0_BC40
0002FA7C <AmiBlitz3.ab3@19479>   MOVE.w #$C311,D1
0002FA80 <AmiBlitz3.ab3@19480>    BSR.w makebtst
0002FA82 <AmiBlitz3.ab3@19483>   MOVE.l (A1)+,D1
0002FA86 <AmiBlitz3.ab3@19484>   LEA $0(A0,D1.L),A1
0002FA8A <AmiBlitz3.ab3@19485> BRA.w JL_0_BC00
0002FA90 <AmiBlitz3.ab3@19488>   TST.b debugmode
0002FA94 <AmiBlitz3.ab3@19489>    BEQ.w JL_0_BC60
0002FA96 <AmiBlitz3.ab3@19490>   MOVE.l D1,-(A7)
0002FA9A <AmiBlitz3.ab3@19491>   MOVE.w #$C312,D1
0002FA9E <AmiBlitz3.ab3@19492>    BSR.w makebtst
0002FAA0 <AmiBlitz3.ab3@19493>   MOVE.l (A7)+,D1
0002FAA2 <AmiBlitz3.ab3@19496>   ADDQ.w #4,A1
0002FAA4 <AmiBlitz3.ab3@19497>   ADDQ.l #6,D1
0002FAA8 <AmiBlitz3.ab3@19498> BRA.w JL_0_BC00
0002FAAE <AmiBlitz3.ab3@19501>   TST.w inline
0002FAB2 <AmiBlitz3.ab3@19502>    BEQ.w JL_0_BC7E
0002FAB4 <AmiBlitz3.ab3@19503>   SUBQ.w #1,A1
0002FAB6 <AmiBlitz3.ab3@19504>   MOVEA.l A1,A0
0002FABA <AmiBlitz3.ab3@19505>   ADDA.w inline(PC),A1
0002FABE <AmiBlitz3.ab3@19506> BRA.w pokecode2
0002FAC2 <AmiBlitz3.ab3@19509>   MOVEM.l a0/D1,-(A7)
0002FAC8 <AmiBlitz3.ab3@19510>   TST.w debugversion
0002FACC <AmiBlitz3.ab3@19511>   BEQ 'l11
0002FAD4 <AmiBlitz3.ab3@19512>   BTST #$7,link_debuginfo
0002FAD8 <AmiBlitz3.ab3@19513>   BEQ.w 'l11
0002FADE <AmiBlitz3.ab3@19514>   MOVE.l lastinstruction,d1
0002FAE2 <AmiBlitz3.ab3@19515>   BEQ 'l11
0002FAE8 <AmiBlitz3.ab3@19516>   CLR.l lastinstruction
0002FAEE <AmiBlitz3.ab3@19517>   CMP.l #$e000,d1
0002FAF2 <AmiBlitz3.ab3@19518>   BGE 'ln99
0002FAF8 <AmiBlitz3.ab3@19519>   LEA notf,a0
0002FAFE <AmiBlitz3.ab3@19520>   CMP.l #$c601,d1
0002FB02 <AmiBlitz3.ab3@19521>   BNE 'ln1
0002FB08 <AmiBlitz3.ab3@19522>   LEA strcpy,a0
0002FB0C <AmiBlitz3.ab3@19523> BRA 'ln3
0002FB12 <AmiBlitz3.ab3@19526>   CMP.l #$c700,d1
0002FB16 <AmiBlitz3.ab3@19527>   BNE 'ln2
0002FB1C <AmiBlitz3.ab3@19528>   LEA strvar,a0
0002FB20 <AmiBlitz3.ab3@19529> BRA 'ln3
0002FB26 <AmiBlitz3.ab3@19532>   CMP.l #$ce00,d1
0002FB2A <AmiBlitz3.ab3@19533>   BNE 'ln4
0002FB30 <AmiBlitz3.ab3@19534>   LEA strcmp,a0
0002FB34 <AmiBlitz3.ab3@19535> BRA 'ln3
0002FB3A <AmiBlitz3.ab3@19538>   CMP.l #$ca00,d1
0002FB3E <AmiBlitz3.ab3@19539>   BNE 'ln5
0002FB44 <AmiBlitz3.ab3@19540>   LEA qmul,a0
0002FB48 <AmiBlitz3.ab3@19541> BRA 'ln3
0002FB4E <AmiBlitz3.ab3@19544>   CMP.l #$d000,d1
0002FB52 <AmiBlitz3.ab3@19545>      BNE 'ln6
0002FB58 <AmiBlitz3.ab3@19546>      LEA _MaxLen,a0
0002FB5C <AmiBlitz3.ab3@19547> BRA 'ln3
0002FB62 <AmiBlitz3.ab3@19550>   CMP.l #$cb00,d1
0002FB66 <AmiBlitz3.ab3@19551>   BNE 'ln3
0002FB6C <AmiBlitz3.ab3@19552>   LEA qdiv,a0
0002FB70 <AmiBlitz3.ab3@19553> BRA 'ln3
0002FB72 <AmiBlitz3.ab3@19556>   MOVE.l d1,a0
0002FB76 <AmiBlitz3.ab3@19557>   LEA $8(a0),a0
0002FB7A <AmiBlitz3.ab3@19560>   CMP.w #$ffff,(a0)+
0002FB7E <AmiBlitz3.ab3@19561>   BNE 'l1
0002FB82 <AmiBlitz3.ab3@19562>   LEA 6(a0),a0
0002FB86 <AmiBlitz3.ab3@19565>   MOVEM.l a1/a2/d7/d2,-(a7)
0002FB88 <AmiBlitz3.ab3@19566>   MOVEQ #0,d2
0002FB8E <AmiBlitz3.ab3@19567>   LEA ptr_parameterstore,a1
0002FB90 <AmiBlitz3.ab3@19570>   ADDQ.l #1,d2
0002FB92 <AmiBlitz3.ab3@19571>   MOVE.b (a0)+,d0
0002FB96 <AmiBlitz3.ab3@19572> 
0002FB9A <AmiBlitz3.ab3@19573>   BNE 'nodollar
0002FB9E <AmiBlitz3.ab3@19574>   MOVE.b #"S",d0
0002FBA2 <AmiBlitz3.ab3@19576>   CMP.b #"?",d0
0002FBA6 <AmiBlitz3.ab3@19577>   BEQ 'nolabelwrite
0002FBA8 <AmiBlitz3.ab3@19578>   MOVE.b d0,(a1)+
0002FBAC <AmiBlitz3.ab3@19579>   BNE 'l2
0002FBB2 <AmiBlitz3.ab3@19580>   MOVE.w #"__",-1(a1)
0002FBB4 <AmiBlitz3.ab3@19581>   ADDQ.l #2,d2
0002FBB8 <AmiBlitz3.ab3@19582>   CLR.b 1(a1)
0002FBBE <AmiBlitz3.ab3@19583>   JSR findlabel2
0002FBC2 <AmiBlitz3.ab3@19584>   BEQ 'l3
0002FBC8 <AmiBlitz3.ab3@19585>   JSR addlabelhash
0002FBCC <AmiBlitz3.ab3@19588>   CLR.l 4(a2)
0002FBD0 <AmiBlitz3.ab3@19589>   MOVE.l $14(a7),a0
0002FBD4 <AmiBlitz3.ab3@19590>   MOVE.l $10(a7),d1
0002FBD8 <AmiBlitz3.ab3@19591>   SUB.l $12(a0),d1
0002FBDC <AmiBlitz3.ab3@19592>   ADD.l $28(a0),d1
0002FBE0 <AmiBlitz3.ab3@19593>   MOVE.l d1,8(a2)
0002FBE4 <AmiBlitz3.ab3@19594> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002FBEA <AmiBlitz3.ab3@19597>   TST.b typecheck
0002FBEE <AmiBlitz3.ab3@19598>   BEQ 'p1
0002FBF4 <AmiBlitz3.ab3@19599>   MOVE.l lasttoken,d1
0002FBFA <AmiBlitz3.ab3@19600>   CMP.l #$da01,d1                                          ;poke
0002FBFE <AmiBlitz3.ab3@19601>   BEQ 'lp1
0002FC04 <AmiBlitz3.ab3@19602>   CMP.l #$da02,d1                                          ;peek
0002FC08 <AmiBlitz3.ab3@19603>   BNE 'p1
0002FC0E <AmiBlitz3.ab3@19606>   TST.b peekaddrsize
0002FC12 <AmiBlitz3.ab3@19607>   BEQ 'p1
0002FC1A <AmiBlitz3.ab3@19608>   CMP.b #3,peekaddrsize
0002FC1E <AmiBlitz3.ab3@19609>   BNE errormsg_onlylong
0002FC24 <AmiBlitz3.ab3@19610>   CLR.b peekaddrsize
0002FC2A <AmiBlitz3.ab3@19618>    TST.b fpu
0002FC2E <AmiBlitz3.ab3@19619>   BNE 'optf
0002FC34 <AmiBlitz3.ab3@19620>   TST.b fast
0002FC38 <AmiBlitz3.ab3@19621>   BEQ JL11a2
0002FC40 <AmiBlitz3.ab3@19628>   CMP.l #"Poke",20(a2)                                     ;poke
0002FC44 <AmiBlitz3.ab3@19629>   BNE peekopt
0002FC48 <AmiBlitz3.ab3@19630>   TST.b 24(a2)
0002FC4C <AmiBlitz3.ab3@19631>   BNE peekopt
0002FC50 <AmiBlitz3.ab3@19632>   CMP.b #3,d2
0002FC54 <AmiBlitz3.ab3@19633>   BNE 'lw1
0002FC5A <AmiBlitz3.ab3@19636>   MOVE.l #$21821990,d1
0002FC5E <AmiBlitz3.ab3@19637> BRA.s 'lpx
0002FC62 <AmiBlitz3.ab3@19640>   CMP.b #2,d2
0002FC66 <AmiBlitz3.ab3@19641>   BNE 'lb1
0002FC6C <AmiBlitz3.ab3@19642>   MOVE.l #$31821990,d1
0002FC70 <AmiBlitz3.ab3@19643> BRA.s 'lpx
0002FC74 <AmiBlitz3.ab3@19646>   CMP.b #1,d2
0002FC78 <AmiBlitz3.ab3@19647>   BNE 'lp3
0002FC7E <AmiBlitz3.ab3@19648>   MOVE.l #$11821990,d1
0002FC82 <AmiBlitz3.ab3@19649> BRA.s 'lpx
0002FC86 <AmiBlitz3.ab3@19652>   CMP.b #5,d2
0002FC8A <AmiBlitz3.ab3@19653>     BNE JL11a2
0002FC90 <AmiBlitz3.ab3@19654>     TST.b fpu
0002FC94 <AmiBlitz3.ab3@19655>     BEQ 'll1
0002FC9A <AmiBlitz3.ab3@19656>      MOVE.l destpointer,a4
0002FCA2 <AmiBlitz3.ab3@19657>     CMP.l #$f22d4500,-6(a4)
0002FCA6 <AmiBlitz3.ab3@19658>     BNE 'noglob
0002FCAC <AmiBlitz3.ab3@19659>     TST.b doublepeek
0002FCB0 <AmiBlitz3.ab3@19660>     BNE 'noglob
0002FCB6 <AmiBlitz3.ab3@19661>     MOVE.w -2(a4),-4(a4)
0002FCBC <AmiBlitz3.ab3@19662>     MOVE.w #$21ad,-6(a4)
0002FCC2 <AmiBlitz3.ab3@19663>     MOVE.w #$1990,-2(a4)
0002FCCA <AmiBlitz3.ab3@19664>     MOVE.w #9,peeksize
0002FCCC <AmiBlitz3.ab3@19665>     ADDQ #8,a7
0002FCCE <AmiBlitz3.ab3@19666> RTS
0002FCD6 <AmiBlitz3.ab3@19669>     CMP.l #$f22c4500,-6(a4)
0002FCDA <AmiBlitz3.ab3@19670>     BNE 'nolocal
0002FCE0 <AmiBlitz3.ab3@19671>     MOVE.w -2(a4),-4(a4)
0002FCE6 <AmiBlitz3.ab3@19672>     TST.b doublepeek                                       ;dont move longfix on double floats
0002FCEA <AmiBlitz3.ab3@19673>     BNE 'nolocal
0002FCF0 <AmiBlitz3.ab3@19674>     MOVE.w #$21ac,-6(a4)
0002FCF6 <AmiBlitz3.ab3@19675>     MOVE.w #$1990,-2(a4)
0002FCFE <AmiBlitz3.ab3@19676>     MOVE.w #9,peeksize
0002FD00 <AmiBlitz3.ab3@19677>     ADDQ #8,a7
0002FD02 <AmiBlitz3.ab3@19678> RTS
0002FD06 <AmiBlitz3.ab3@19681>     MOVE.w #$f230,d1
0002FD0A <AmiBlitz3.ab3@19682>     BSR writeword
0002FD10 <AmiBlitz3.ab3@19683>   MOVE.l #$65001990,d1
0002FD16 <AmiBlitz3.ab3@19684>   TST.b doublepeek
0002FD1A <AmiBlitz3.ab3@19685>   BEQ 'lpx
0002FD20 <AmiBlitz3.ab3@19686>   OR.l   #$10000000,d1
0002FD22 <AmiBlitz3.ab3@19690>   ADDQ #8,a7
0002FD2A <AmiBlitz3.ab3@19691>   MOVE.w #9,peeksize
0002FD2E <AmiBlitz3.ab3@19692> BRA writelong
0002FD36 <AmiBlitz3.ab3@19695>   CMP.l #"Peek",20(a2)
0002FD3A <AmiBlitz3.ab3@19696>   BNE 'l10
0002FD3E <AmiBlitz3.ab3@19697>   TST.b 24(a2)
0002FD42 <AmiBlitz3.ab3@19698>   BNE 'l10
0002FD4A <AmiBlitz3.ab3@19699>   CMP.w #7,peeksize
0002FD4E <AmiBlitz3.ab3@19700>   BEQ 'l10
0002FD56 <AmiBlitz3.ab3@19701>    CMP.w #3,peeksize
0002FD5A <AmiBlitz3.ab3@19702>    BNE.s 'lw1
0002FD60 <AmiBlitz3.ab3@19705>   MOVE.l #$20301990,d1
0002FD64 <AmiBlitz3.ab3@19706> BRA exitjsr
0002FD6C <AmiBlitz3.ab3@19709>   CMP.w #2,peeksize
0002FD70 <AmiBlitz3.ab3@19710>    BNE.s 'lb1
0002FD76 <AmiBlitz3.ab3@19711>    MOVE.l #$30301990,d1
0002FD7A <AmiBlitz3.ab3@19712> BRA exitjsr
0002FD82 <AmiBlitz3.ab3@19715>   CMP.w #1,peeksize
0002FD86 <AmiBlitz3.ab3@19716>    BNE.s 'lf1
0002FD8C <AmiBlitz3.ab3@19717>    MOVE.l #$10301990,d1
0002FD90 <AmiBlitz3.ab3@19718> BRA exitjsr
0002FD98 <AmiBlitz3.ab3@19721>   CMP.w #5,peeksize
0002FD9C <AmiBlitz3.ab3@19722>    BNE 'l10
0002FDA2 <AmiBlitz3.ab3@19723>    TST.b fpu
0002FDA6 <AmiBlitz3.ab3@19724>    BEQ 'll1
0002FDAA <AmiBlitz3.ab3@19725>    MOVE.w #$f230,d1
0002FDAE <AmiBlitz3.ab3@19726>    BSR writeword
0002FDB0 <AmiBlitz3.ab3@19727>    MOVEQ #0,d1
0002FDB6 <AmiBlitz3.ab3@19728>    MOVE.w tempregnum,d1
0002FDB8 <AmiBlitz3.ab3@19729>    ASL.l #7,d1
0002FDBA <AmiBlitz3.ab3@19730>    ASL.l #8,d1
0002FDBC <AmiBlitz3.ab3@19731>    ASL.l #8,d1
0002FDC2 <AmiBlitz3.ab3@19732>    ADD.l #$44001990,d1
0002FDC8 <AmiBlitz3.ab3@19733>     TST.b doublepeek
0002FDCC <AmiBlitz3.ab3@19734>     BEQ 'lpx2
0002FDD2 <AmiBlitz3.ab3@19735>     OR.l   #$10000000,d1
0002FDD6 <AmiBlitz3.ab3@19737> BRA exitjsr
0002FDDA <AmiBlitz3.ab3@19741>   MOVE.w #$4EB9,D1
0002FDDE <AmiBlitz3.ab3@19742>    BSR.w writeword                                         ;writesysjsr
0002FDE2 <AmiBlitz3.ab3@19743>   MOVEM.l (A7)+,a0/D1
0002FDE8 <AmiBlitz3.ab3@19744>    JSR addoff
0002FDEC <AmiBlitz3.ab3@19745>   SUB.l $12(A0),D1
0002FDF0 <AmiBlitz3.ab3@19746>   ADD.l $28(A0),D1
0002FDF4 <AmiBlitz3.ab3@19747> BRA.w writelong
0002FDF6 <AmiBlitz3.ab3@19752>   MOVE.w D1,-(A7)
0002FDFA <AmiBlitz3.ab3@19753>   MOVE.w tstmode(PC),D1
0002FDFE <AmiBlitz3.ab3@19754>    BSR.w writeword
0002FE02 <AmiBlitz3.ab3@19755>    BSR.w getbbase
0002FE06 <AmiBlitz3.ab3@19756>    BSR.w writeword
0002FE08 <AmiBlitz3.ab3@19757>   MOVE.w (A7)+,D1
0002FE0C <AmiBlitz3.ab3@19758>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002FE10 <AmiBlitz3.ab3@19759>    BSR.w Atokejsr
0002FE14 <AmiBlitz3.ab3@19760>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002FE16 <AmiBlitz3.ab3@19761> RTS
0002FE1A <AmiBlitz3.ab3@19769>   MOVE.w blitzoff(PC),D1
0002FE1E <AmiBlitz3.ab3@19770>   CMP.w #-$1,D1
0002FE22 <AmiBlitz3.ab3@19771>    BNE.w getbbase__done
0002FE28 <AmiBlitz3.ab3@19772>   ADDQ.w #1,globalvarpointer
0002FE30 <AmiBlitz3.ab3@19773>   BCLR #$0,globalvarpointer+1
0002FE36 <AmiBlitz3.ab3@19774>   MOVE.w globalvarpointer,D1
0002FE3C <AmiBlitz3.ab3@19775>   MOVE.w D1,blitzoff
0002FE42 <AmiBlitz3.ab3@19776>   ADDQ.w #2,globalvarpointer
0002FE44 <AmiBlitz3.ab3@19779> RTS
0002FE48 <AmiBlitz3.ab3@19783> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002FE4A <AmiBlitz3.ab3@19786> inline:     Ds.w 1
0002FE4C <AmiBlitz3.ab3@19787> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002FE4E <AmiBlitz3.ab3@19788> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002FE50 <AmiBlitz3.ab3@19792>   MOVE.w (A2)+,D1
0002FE54 <AmiBlitz3.ab3@19793>    BEQ.w fetchregs__done
0002FE56 <AmiBlitz3.ab3@19794>   MOVE.w (A2)+,D2
0002FE5A <AmiBlitz3.ab3@19795>    BSR.w toreg
0002FE5E <AmiBlitz3.ab3@19796> BRA.w fetchregs
0002FE60 <AmiBlitz3.ab3@19799> RTS
0002FE64 <AmiBlitz3.ab3@19804>   CMP.w #-$100,D2
0002FE68 <AmiBlitz3.ab3@19805>    BCC.w toreg__yeah
0002FE6C <AmiBlitz3.ab3@19807>   BCLR #$F,D2
0002FE70 <AmiBlitz3.ab3@19808>    BEQ.w toreg__nobm
0002FE76 <AmiBlitz3.ab3@19810>   TST.w blitzmode
0002FE7A <AmiBlitz3.ab3@19811>    BMI.w toreg__yeah
0002FE7C <AmiBlitz3.ab3@19812> RTS
0002FE80 <AmiBlitz3.ab3@19815>   BCLR #$E,D2
0002FE84 <AmiBlitz3.ab3@19816>    BEQ.w toreg__yeah
0002FE8A <AmiBlitz3.ab3@19818>   TST.w blitzmode
0002FE8E <AmiBlitz3.ab3@19819>    BPL.w toreg__yeah
0002FE90 <AmiBlitz3.ab3@19820> RTS
0002FE96 <AmiBlitz3.ab3@19823>   JSR uselib
0002FE98 <AmiBlitz3.ab3@19824>   TST.b D2
0002FE9C <AmiBlitz3.ab3@19825>    BEQ.w toreg__norm
0002FEA0 <AmiBlitz3.ab3@19826>   CMP.b #$4,D2
0002FEA4 <AmiBlitz3.ab3@19827>    BNE.w toreg__suv
0002FEA8 <AmiBlitz3.ab3@19828>   MOVE.w #$0004,-(A7)
0002FEAE <AmiBlitz3.ab3@19829>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002FEB2 <AmiBlitz3.ab3@19830> BRA.w toreg__sendmd
0002FEB6 <AmiBlitz3.ab3@19833>   CMP.b #$3,D2
0002FEBA <AmiBlitz3.ab3@19834>    BNE.w toreg__notnmax
0002FEBC <AmiBlitz3.ab3@19835>   CLR.w -(A7)
0002FEC2 <AmiBlitz3.ab3@19836>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002FEC4 <AmiBlitz3.ab3@19842>   LSR.w #8,D2
0002FEC8 <AmiBlitz3.ab3@19843>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002FECC <AmiBlitz3.ab3@19844>   BTST #$7,D2
0002FED0 <AmiBlitz3.ab3@19845>    BEQ.w toreg__skipad
0002FED4 <AmiBlitz3.ab3@19846>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002FED8 <AmiBlitz3.ab3@19847>   CMP.w #$16,D2
0002FEDC <AmiBlitz3.ab3@19848>    BNE.w toreg__skipad
0002FEE4 <AmiBlitz3.ab3@19849>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002FEE8 <AmiBlitz3.ab3@19852>   ANDI.w #$7,D2
0002FEEA <AmiBlitz3.ab3@19853>   LSL.w #8,D2
0002FEEC <AmiBlitz3.ab3@19854>   LSL.w #1,D2
0002FEEE <AmiBlitz3.ab3@19855>   OR.w D2,D1
0002FEF2 <AmiBlitz3.ab3@19856>    BSR.w writeword
0002FEF6 <AmiBlitz3.ab3@19857>   MOVE.l $12(A1),D1
0002FEF8 <AmiBlitz3.ab3@19858>   ADD.l (A7)+,D1
0002FEFC <AmiBlitz3.ab3@19859>   MOVE.w $0(A1,D1.L),D1
0002FEFE <AmiBlitz3.ab3@19860>   ADD.w (A7)+,D1
0002FF02 <AmiBlitz3.ab3@19861> BRA.w writeword
0002FF04 <AmiBlitz3.ab3@19864>   MOVE.w D2,-(A7)
0002FF06 <AmiBlitz3.ab3@19865>   LSR.w #8,D2
0002FF0A <AmiBlitz3.ab3@19866>   CMP.w #$16,D2
0002FF0E <AmiBlitz3.ab3@19867>    BNE.w toreg__isnta6
0002FF16 <AmiBlitz3.ab3@19868>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002FF1A <AmiBlitz3.ab3@19871>   MOVE.l $12(A1),D1                                        ;objectspace
0002FF1E <AmiBlitz3.ab3@19872>   MOVE.w -$6(A1,D1.L),-(A7)
0002FF22 <AmiBlitz3.ab3@19873>    BSR.w makeregop
0002FF26 <AmiBlitz3.ab3@19874>    BSR.w writeword
0002FF28 <AmiBlitz3.ab3@19875>   MOVE.w (A7)+,D1
0002FF2A <AmiBlitz3.ab3@19876>   MOVE.w (A7)+,D2
0002FF2C <AmiBlitz3.ab3@19877>   TST.b D2
0002FF30 <AmiBlitz3.ab3@19878>    BPL.w toreg__skippy1
0002FF34 <AmiBlitz3.ab3@19883>    BSR.w writeword                                         ;move.l x(a5),dn
0002FF36 <AmiBlitz3.ab3@19884>   MOVE.w D2,-(A7)                                          ;store reg used
0002FF3A <AmiBlitz3.ab3@19886>   ADDA.l $12(A1),A1
0002FF3C <AmiBlitz3.ab3@19887>   MOVE.b D2,D1
0002FF40 <AmiBlitz3.ab3@19888>   ANDI.w #$7,D1
0002FF46 <AmiBlitz3.ab3@19890>   TST.b debugmode
0002FF4A <AmiBlitz3.ab3@19891>    BEQ.w toreg__norerr
0002FF4C <AmiBlitz3.ab3@19893>   MOVE.w D1,-(A7)
0002FF4E <AmiBlitz3.ab3@19894>   LSL.w #8,D1
0002FF50 <AmiBlitz3.ab3@19895>   LSL.w #1,D1
0002FF54 <AmiBlitz3.ab3@19896>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002FF58 <AmiBlitz3.ab3@19897>    BSR.w writeword
0002FF5C <AmiBlitz3.ab3@19898>   MOVE.w -$4(A1),D1
0002FF60 <AmiBlitz3.ab3@19899>    BSR.w writeword
0002FF64 <AmiBlitz3.ab3@19900>   MOVE.l maxchk(PC),D1                                  ;bcs
0002FF68 <AmiBlitz3.ab3@19901>    BSR.w writelong
0002FF6A <AmiBlitz3.ab3@19902>   MOVE.l A2,-(A7)
0002FF6E <AmiBlitz3.ab3@19903>   MOVE.w #$C30A,D1
0002FF72 <AmiBlitz3.ab3@19904>    BSR.w Atokejsr
0002FF74 <AmiBlitz3.ab3@19905>   MOVEA.l (A7)+,A2
0002FF76 <AmiBlitz3.ab3@19906>   MOVE.w (A7)+,D1
0002FF7A <AmiBlitz3.ab3@19909>   MOVE.w -$2(A1),D2                                        ;shift amount
0002FF7E <AmiBlitz3.ab3@19912>   CMP.w #$9,D2
0002FF82 <AmiBlitz3.ab3@19913>    BCS.w toreg__simp
0002FF86 <AmiBlitz3.ab3@19914>   MOVEM.w D1-D2,-(A7)
0002FF88 <AmiBlitz3.ab3@19916>   MOVEQ.l #$00,D2                                          ;!!!!!
0002FF8A <AmiBlitz3.ab3@19918>   LSL.w #8,D2
0002FF8C <AmiBlitz3.ab3@19919>   LSL.w #1,D2
0002FF8E <AmiBlitz3.ab3@19920>   OR.w D2,D1
0002FF92 <AmiBlitz3.ab3@19921>   OR.w lsldn(PC),D1
0002FF96 <AmiBlitz3.ab3@19922>    BSR.w writeword
0002FF9A <AmiBlitz3.ab3@19923>   MOVEM.w (A7)+,D1-D2
0002FF9C <AmiBlitz3.ab3@19924>   SUBQ.w #8,D2
0002FFA0 <AmiBlitz3.ab3@19925> BRA.w toreg__shloop
0002FFA2 <AmiBlitz3.ab3@19928>   MOVE.w D1,-(A7)
0002FFA6 <AmiBlitz3.ab3@19929>   OR.w #$48c0,d1
0002FFAA <AmiBlitz3.ab3@19930>   BSR writeword
0002FFAC <AmiBlitz3.ab3@19931>   MOVE.w (a7),d1
0002FFAE <AmiBlitz3.ab3@19932>   TST.w D2
0002FFB2 <AmiBlitz3.ab3@19933>   BEQ.w toreg__simp2
0002FFB6 <AmiBlitz3.ab3@19935>   ANDI.w #$7,D2                                            ;?????
0002FFB8 <AmiBlitz3.ab3@19937>   LSL.w #8,D2
0002FFBA <AmiBlitz3.ab3@19938>   LSL.w #1,D2
0002FFBC <AmiBlitz3.ab3@19939>   OR.w D2,D1
0002FFC0 <AmiBlitz3.ab3@19940>   OR.w lsldn(PC),D1
0002FFC4 <AmiBlitz3.ab3@19941>    BSR.w writeword
0002FFC6 <AmiBlitz3.ab3@19947>   MOVE.w (A7)+,D1
0002FFCA <AmiBlitz3.ab3@19948>   ANDI.w #$7,D1
0002FFCE <AmiBlitz3.ab3@19949>   OR.w maxdo(PC),D1
0002FFD0 <AmiBlitz3.ab3@19950>   MOVE.w (A7)+,D2
0002FFD2 <AmiBlitz3.ab3@19951>   LSL.w #1,D2
0002FFD6 <AmiBlitz3.ab3@19952>   ANDI.w #$E00,D2
0002FFD8 <AmiBlitz3.ab3@19953>   OR.w D2,D1
0002FFDC <AmiBlitz3.ab3@19954> BRA.w writeword
0002FFE0 <AmiBlitz3.ab3@19957>   CMP.b #$1,D2
0002FFE4 <AmiBlitz3.ab3@19958>    BEQ.w toreg__skippy
0002FFE6 <AmiBlitz3.ab3@19962>   ADDQ.w #4,D1
0002FFEC <AmiBlitz3.ab3@19964>   TST.b debugmode
0002FFF0 <AmiBlitz3.ab3@19965>    BEQ.w toreg__skippy
0002FFF4 <AmiBlitz3.ab3@19967>    BSR.w writeword
0002FFF6 <AmiBlitz3.ab3@19968>   SWAP D1
0002FFFA <AmiBlitz3.ab3@19969>   MOVE.w toreg__theretest(PC),D1
0002FFFC <AmiBlitz3.ab3@19970>   SWAP D1
00030000 <AmiBlitz3.ab3@19971>    BSR.w writelong
00030004 <AmiBlitz3.ab3@19972>   MOVE.l toreg__theretest+4(PC),D1
00030008 <AmiBlitz3.ab3@19973>    BSR.w writelong
0003000C <AmiBlitz3.ab3@19974>   MOVE.l toreg__theretest+8(PC),D1
00030010 <AmiBlitz3.ab3@19975> BRA.w writelong
00030014 <AmiBlitz3.ab3@19978> BRA.w writeword
00030018 <AmiBlitz3.ab3@19983>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0003001C <AmiBlitz3.ab3@19984>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0003001E <AmiBlitz3.ab3@19985>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030020 <AmiBlitz3.ab3@19986>             Dc.b $4E,$40                                   ;TRAP   #00
00030022 <AmiBlitz3.ab3@19991>   LSR.w #8,D2
00030026 <AmiBlitz3.ab3@19992>   CMP.b #$16,D2
0003002A <AmiBlitz3.ab3@19993>    BNE.w toreg__nota6
0003002E <AmiBlitz3.ab3@19994>   MOVE.w $A(A1),D1
00030034 <AmiBlitz3.ab3@19995>   CMP.w lasta6,D1
00030038 <AmiBlitz3.ab3@19996>    BEQ.w toreg__sk
0003003E <AmiBlitz3.ab3@19997>   MOVE.w D1,lasta6
00030042 <AmiBlitz3.ab3@20000>    BSR.w makeregop
00030046 <AmiBlitz3.ab3@20001>   TST.w $1A(A1)
0003004A <AmiBlitz3.ab3@20002>    BPL.w toreg__long
0003004E <AmiBlitz3.ab3@20003>   CMP.w stackop(PC),D1
00030052 <AmiBlitz3.ab3@20004>    BNE.w toreg__notst
00030058 <AmiBlitz3.ab3@20005>   SUBQ.w #2,a2offset
0003005C <AmiBlitz3.ab3@20008>    ORI.w #$1000,D1
00030060 <AmiBlitz3.ab3@20011>    BSR.w writeword
00030064 <AmiBlitz3.ab3@20012>   MOVE.w $A(A1),D1
00030068 <AmiBlitz3.ab3@20013>    BSR.w writeword
0003006A <AmiBlitz3.ab3@20016> RTS
0003006C <AmiBlitz3.ab3@20020> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030070 <AmiBlitz3.ab3@20021> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
00030076 <AmiBlitz3.ab3@20022>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00030078 <AmiBlitz3.ab3@20025> 
0003007A <AmiBlitz3.ab3@20028>             Dc.b $00,$00
0003007E <AmiBlitz3.ab3@20029> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030082 <AmiBlitz3.ab3@20036>   CMP.b #$FF,D2
00030086 <AmiBlitz3.ab3@20037>    BNE.w makeregop__notst
0003008A <AmiBlitz3.ab3@20038>   MOVE.w stackop(PC),D1
00030090 <AmiBlitz3.ab3@20039>   ADDQ.w #4,a2offset
00030092 <AmiBlitz3.ab3@20040> RTS
00030094 <AmiBlitz3.ab3@20043>   MOVE.l A3,-(A7)
0003009A <AmiBlitz3.ab3@20044>   LEA regtransd,A3
0003009E <AmiBlitz3.ab3@20045>   BTST #$4,D2
000300A2 <AmiBlitz3.ab3@20046>    BEQ.w makeregop__skip
000300A8 <AmiBlitz3.ab3@20047>   LEA regtransa,A3
000300AC <AmiBlitz3.ab3@20050>   ANDI.w #$7,D2
000300AE <AmiBlitz3.ab3@20051>   MOVE.w D2,D1
000300B0 <AmiBlitz3.ab3@20052>   LSL.w #8,D1
000300B2 <AmiBlitz3.ab3@20053>   LSL.w #1,D1
000300B4 <AmiBlitz3.ab3@20054>   OR.w (A3),D1
000300B6 <AmiBlitz3.ab3@20055>   MOVEA.l (A7)+,A3
000300B8 <AmiBlitz3.ab3@20056> RTS
000300BC <AmiBlitz3.ab3@20062>   CMP.w #$3C,D0
000300C0 <AmiBlitz3.ab3@20063>    BCS.w ifchar__no
000300C4 <AmiBlitz3.ab3@20064>   CMP.w #$3E,D0
000300C8 <AmiBlitz3.ab3@20065>    BHI.w ifchar__no
000300CC <AmiBlitz3.ab3@20066>   SUBI.w #$3C,D0
000300CE <AmiBlitz3.ab3@20067>   CMP.w D0,D0
000300D0 <AmiBlitz3.ab3@20070> RTS
000300DA <AmiBlitz3.ab3@20075>   MOVE.w oldqflag,instringon
000300E0 <AmiBlitz3.ab3@20076>   MOVEA.l lastsourcepos,A5
000300E6 <AmiBlitz3.ab3@20081>   MOVE.w regnum,-(A7)
000300EC <AmiBlitz3.ab3@20082>   CLR.w regnum
000300F2 <AmiBlitz3.ab3@20083>   MOVE.l destpointer,-(A7)
000300F8 <AmiBlitz3.ab3@20084>   MOVE.l destbufferend,-(A7)
000300FE <AmiBlitz3.ab3@20085>   MOVE.w dontwrite,-(A7)
00030104 <AmiBlitz3.ab3@20086>   MOVE.w lasta6,-(A7)
0003010A <AmiBlitz3.ab3@20087>   MOVE.w cfetchmode,-(A7)
0003010E <AmiBlitz3.ab3@20088>    BNE.w JL_0_BFB6
00030118 <AmiBlitz3.ab3@20089>   MOVE.l destbufferend,oldlibat
0003011E <AmiBlitz3.ab3@20090>   MOVEA.l constpcat,A0
00030124 <AmiBlitz3.ab3@20091>   MOVE.l A0,destpointer
00030128 <AmiBlitz3.ab3@20092> BRA.w JL_0_BFBC
0003012E <AmiBlitz3.ab3@20095>   MOVEA.l destpointer,A0
00030130 <AmiBlitz3.ab3@20098>   MOVE.l A0,-(A7)
0003013A <AmiBlitz3.ab3@20099>   MOVE.l constlibat,destbufferend
00030140 <AmiBlitz3.ab3@20100>   CLR.w dontwrite
00030148 <AmiBlitz3.ab3@20102>   MOVE.w #$FFFF,lasta6
00030150 <AmiBlitz3.ab3@20103>   MOVE.w #$FFFF,cfetchmode
00030154 <AmiBlitz3.ab3@20105>     BSR.w arreval
00030156 <AmiBlitz3.ab3@20106>    MOVE.l (a7),a0
00030292 <AmiBlitz3.ab3@20108>  !newcalc
00030296 <AmiBlitz3.ab3@20109>    BEQ 'l10
00030298 <AmiBlitz3.ab3@20110>    MOVE.l d0,d3
0003029A <AmiBlitz3.ab3@20111>    MOVEA.l (A7)+,A0
0003029E <AmiBlitz3.ab3@20112> BRA bc1
000302A2 <AmiBlitz3.ab3@20115>    MOVE.w #$2600,D1
000302A8 <AmiBlitz3.ab3@20116>   OR.w regnum,D1
000302AC <AmiBlitz3.ab3@20117>    BSR.w writeword
000302B0 <AmiBlitz3.ab3@20118>   MOVE.w #$4E75,D1
000302B4 <AmiBlitz3.ab3@20119>    BSR.w writeword
000302BA <AmiBlitz3.ab3@20120>   MOVE.w dontwrite,D1
000302BE <AmiBlitz3.ab3@20121>    BNE.w conmemerr
000302C0 <AmiBlitz3.ab3@20122>   MOVEA.l (A7)+,A0
000302C2 <AmiBlitz3.ab3@20123>   NOP
000302C8 <AmiBlitz3.ab3@20124>    JSR Aclearcache                                         ;simple expression
000302CA <AmiBlitz3.ab3@20127>    JSR (A0)                                                ;writeresult
000302D0 <AmiBlitz3.ab3@20130>   MOVE.w (A7)+,cfetchmode
000302D6 <AmiBlitz3.ab3@20131>   MOVE.w (A7)+,lasta6
000302DC <AmiBlitz3.ab3@20132>   MOVE.w (A7)+,dontwrite
000302E2 <AmiBlitz3.ab3@20133>   MOVE.l (A7)+,destbufferend
000302E8 <AmiBlitz3.ab3@20134>   MOVE.l (A7)+,destpointer
000302EE <AmiBlitz3.ab3@20135>   MOVE.w (A7)+,regnum
000302F4 <AmiBlitz3.ab3@20138> JMP reget
000302F8 <AmiBlitz3.ab3@20141> oldlibat:   Ds.l 1
000302FE <AmiBlitz3.ab3@20145>   LEA incdir,A0
00030302 <AmiBlitz3.ab3@20148>   CMP.w #$22,D0
00030306 <AmiBlitz3.ab3@20149>    BEQ.w JL_0_C052
00030308 <AmiBlitz3.ab3@20150>   MOVE.b D0,(A0)+
0003030A <AmiBlitz3.ab3@20151>   TST.w D0
0003030E <AmiBlitz3.ab3@20152>    BEQ.w JL_0_C05A
00030312 <AmiBlitz3.ab3@20153>    BMI.w syntaxerr
00030318 <AmiBlitz3.ab3@20156>   JSR get1bytemain                                         ;_long
0003031C <AmiBlitz3.ab3@20157> BRA.w JL_0_C03E
0003031E <AmiBlitz3.ab3@20160> RTS
00030324 <AmiBlitz3.ab3@20164>   LEA ptr_parameterstore,A1                                ;getparameter
0003032A <AmiBlitz3.ab3@20165>   LEA incdir,A0
0003032C <AmiBlitz3.ab3@20166>   MOVEQ.l #-$01,D2
0003032E <AmiBlitz3.ab3@20169>     ADDQ.w #1,D2
00030330 <AmiBlitz3.ab3@20170>     MOVE.b (A0)+,(A1)+
00030334 <AmiBlitz3.ab3@20171>   BNE.w JL_0_C06A
00030336 <AmiBlitz3.ab3@20172>   SUBQ.w #1,A1
00030340 <AmiBlitz3.ab3@20174>   MOVE.w oldqflag,instringon
00030346 <AmiBlitz3.ab3@20175>   MOVEA.l lastsourcepos,A5
0003034C <AmiBlitz3.ab3@20179>   JSR get1bytemain
0003034E <AmiBlitz3.ab3@20180>   TST.w D0
00030352 <AmiBlitz3.ab3@20181>    BMI.w syntaxerr
00030356 <AmiBlitz3.ab3@20182>   CMP.b #$22,D0
0003035A <AmiBlitz3.ab3@20183>    BEQ.w JL_0_C078
0003035C <AmiBlitz3.ab3@20184>   MOVE.b D0,(A1)+
00030360 <AmiBlitz3.ab3@20185>    BEQ.w JL_0_C096
00030362 <AmiBlitz3.ab3@20186>   ADDQ.w #1,D2
00030366 <AmiBlitz3.ab3@20187> BRA.w JL_0_C078
00030368 <AmiBlitz3.ab3@20190>   TST.w D2
0003036C <AmiBlitz3.ab3@20191>    BEQ.w syntaxerr
0003036E <AmiBlitz3.ab3@20192> RTS
00030374 <AmiBlitz3.ab3@20196>   MOVEA.l constantbase,A2
00030378 <AmiBlitz3.ab3@20197>   MOVEA.l $E(A2),A5
0003037E <AmiBlitz3.ab3@20198>   MOVE.l a5,includesourceline
00030384 <AmiBlitz3.ab3@20199>   LEA inctab,a0
0003038A <AmiBlitz3.ab3@20200>   MOVE.w ininclude,d0
0003038E <AmiBlitz3.ab3@20201>   MOVE.l $0(a0,d0*4),d0
00030392 <AmiBlitz3.ab3@20202>   MOVEA.l $4(A2),A0
00030396 <AmiBlitz3.ab3@20204>   LEA $0(A0,D0.l),A0
00030398 <AmiBlitz3.ab3@20205>   MOVEA.l A5,A1
0003039A <AmiBlitz3.ab3@20208>     CMPA.l A0,A1
0003039E <AmiBlitz3.ab3@20209>      BCC.w JL_0_C0C6
000303A0 <AmiBlitz3.ab3@20210>   TST.b (A1)+
000303A4 <AmiBlitz3.ab3@20211>   BNE.w JL_0_C0B6
000303A8 <AmiBlitz3.ab3@20212> BRA.w JL_0_C112
000303AC <AmiBlitz3.ab3@20215>   MOVEA.l $4(A2),A1
000303AE <AmiBlitz3.ab3@20218>   CMPA.l A0,A5
000303B2 <AmiBlitz3.ab3@20219>   BCC.w JL_0_C0D6
000303B4 <AmiBlitz3.ab3@20220>   MOVE.b (A5)+,(A1)+
000303B8 <AmiBlitz3.ab3@20221> BRA.w JL_0_C0CA
000303BA <AmiBlitz3.ab3@20224>   MOVE.l A1,D0
000303BE <AmiBlitz3.ab3@20225>   SUB.l $4(A2),D0
000303C4 <AmiBlitz3.ab3@20226>   LEA inctab,a0
000303C6 <AmiBlitz3.ab3@20227>   MOVEQ #0,d1
000303CC <AmiBlitz3.ab3@20228>   MOVE.w ininclude,d1
000303D0 <AmiBlitz3.ab3@20229>   MOVE.l d0,0(a0,d1*4)
000303D6 <AmiBlitz3.ab3@20231>   MOVEA.l _dosbase,A6
000303DA <AmiBlitz3.ab3@20232>   MOVE.l $8(A2),D1
000303DC <AmiBlitz3.ab3@20233>   MOVE.l A1,D2
000303E2 <AmiBlitz3.ab3@20234>   MOVE.l D2,include_base
000303E8 <AmiBlitz3.ab3@20236>   MOVE.l #$10000000,d3                                     ;load whole file
000303EA <AmiBlitz3.ab3@20237>   SUB.l D0,D3
000303EE <AmiBlitz3.ab3@20238>    JSR _Read(A6)
000303F0 <AmiBlitz3.ab3@20239>   TST.l D0
000303F4 <AmiBlitz3.ab3@20240>    BMI.w error_reading_file
000303F8 <AmiBlitz3.ab3@20241>    BEQ.w JL_0_C120
000303FE <AmiBlitz3.ab3@20242>    MOVE.l D0,include_length
00030440 <AmiBlitz3.ab3@20243>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003046A <AmiBlitz3.ab3@20244>    !basic
0003047A <AmiBlitz3.ab3@20245>    ilen.l  = Peek.l(?include_length)
0003048A <AmiBlitz3.ab3@20246>    ibase.l = Peek.l(?include_base)
0003049A <AmiBlitz3.ab3@20247>    ido.l   = Peek.l(?include_process)
000304AA <AmiBlitz3.ab3@20248>    *tn.preprocessor = Peek.l(?include_preprocessor)
000304B4 <AmiBlitz3.ab3@20249>    If ido
000304C6 <AmiBlitz3.ab3@20250>      ioffset.l = SkipXtraHeader{ibase,ilen}
000304EC <AmiBlitz3.ab3@20251>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
000304FE <AmiBlitz3.ab3@20252>      If nilen>0
0003050E <AmiBlitz3.ab3@20256>        Poke.l ?include_length,nilen
0003052C <AmiBlitz3.ab3@20259>    !asm
00030536 <AmiBlitz3.ab3@20260>    MOVE.l #0,include_process
0003053C <AmiBlitz3.ab3@20261>    MOVE.l include_length,D0
00030542 <AmiBlitz3.ab3@20262>    LEA inctab,a0
00030544 <AmiBlitz3.ab3@20263>    MOVEQ #0,d1
0003054A <AmiBlitz3.ab3@20264>    MOVE.w ininclude,d1
0003054E <AmiBlitz3.ab3@20265>    ADD.l d0,0(a0,d1*4)
00030552 <AmiBlitz3.ab3@20267>   MOVEA.l $4(A2),A5
00030556 <AmiBlitz3.ab3@20269>    MOVE.l 0(a0,d1*4),d0
0003055A <AmiBlitz3.ab3@20270>   CLR.b $0(A5,D0.l)
0003055C <AmiBlitz3.ab3@20273>   MOVEA.l A5,A0
0003055E <AmiBlitz3.ab3@20276>     TST.b (A0)+
00030562 <AmiBlitz3.ab3@20277>   BNE.w JL_0_C114
00030566 <AmiBlitz3.ab3@20278>   MOVE.l A0,$E(A2)
00030568 <AmiBlitz3.ab3@20279> RTS
0003056C <AmiBlitz3.ab3@20282> include_length:        Dc.l 0                              ; for tokenizer!
00030570 <AmiBlitz3.ab3@20283> include_base:          Dc.l 0
00030574 <AmiBlitz3.ab3@20284> include_process:       Dc.l 0
00030578 <AmiBlitz3.ab3@20285> include_preprocessor:  Dc.l 0
0003057C <AmiBlitz3.ab3@20289>   MOVE.l $8(A2),D1
00030582 <AmiBlitz3.ab3@20291>   MOVEA.l _dosbase,A6
00030586 <AmiBlitz3.ab3@20292>   JSR _Close(a6)
0003058C <AmiBlitz3.ab3@20293>   MOVEA.l _execbase,A6
00030590 <AmiBlitz3.ab3@20294>   MOVEA.l $4(A2),A1
00030596 <AmiBlitz3.ab3@20295>   MOVE.l #$400*8,D0                                        ;exit include
0003059A <AmiBlitz3.ab3@20297>   JSR _FreeVec(a6)
000305A0 <AmiBlitz3.ab3@20300>   MOVE.l (A2),constantbase
000305A2 <AmiBlitz3.ab3@20301>   MOVEA.l A2,A1
000305A4 <AmiBlitz3.ab3@20302>   MOVEQ.l #$00,D0
000305A8 <AmiBlitz3.ab3@20303>   MOVE.b $12(A2),D0
000305AE <AmiBlitz3.ab3@20304>   MOVEA.l _execbase,A6
000305B4 <AmiBlitz3.ab3@20305>   MOVE.l mempool2,a0
000305B8 <AmiBlitz3.ab3@20306>   JSR _FreePooled(A6)
000305BE <AmiBlitz3.ab3@20307>   JSR zero_includename
000305C4 <AmiBlitz3.ab3@20308>   SUBQ.w #1,ininclude
000305C8 <AmiBlitz3.ab3@20309>   BNE.w AJL_0_C09E
000305CE <AmiBlitz3.ab3@20312>   LEA _include,a0
000305D2 <AmiBlitz3.ab3@20313>   MOVEM.l a0-a6/d0-d7,-(a7)
000305D8 <AmiBlitz3.ab3@20314>   LEA ptr_parameterstore,a1
000305DA <AmiBlitz3.ab3@20317>     MOVE.b (a0)+,(a1)+
000305DE <AmiBlitz3.ab3@20318>   BNE 'l1b
000305E0 <AmiBlitz3.ab3@20319>   MOVEQ #9,d2
000305E6 <AmiBlitz3.ab3@20320>   JSR findlabel2
000305EA <AmiBlitz3.ab3@20321>   BNE 'd
000305EE <AmiBlitz3.ab3@20322>   CLR.l 8(a2)
000305F2 <AmiBlitz3.ab3@20325>   MOVEM.l (a7)+,a0-a6/d0-d7
000305F4 <AmiBlitz3.ab3@20326> RTS
000305FA <AmiBlitz3.ab3@20330>   MOVE.l unusedfunc,d0
000305FE <AmiBlitz3.ab3@20331>   BEQ 'noclear
00030602 <AmiBlitz3.ab3@20332>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030604 <AmiBlitz3.ab3@20335>     MOVE.l d0,a1
00030608 <AmiBlitz3.ab3@20336>     MOVE.l 4(a1),d0
0003060A <AmiBlitz3.ab3@20337>     MOVE.l (a1),d2
00030610 <AmiBlitz3.ab3@20338>     MOVE.l _execbase,a6
00030614 <AmiBlitz3.ab3@20339>     JSR _FreeMem(a6)
00030616 <AmiBlitz3.ab3@20340>     MOVE.l d2,d0
0003061A <AmiBlitz3.ab3@20341>   BNE 'f1
00030620 <AmiBlitz3.ab3@20342>   CLR.l unusedfunc
00030624 <AmiBlitz3.ab3@20343>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00030626 <AmiBlitz3.ab3@20346> RTS
0003062C <AmiBlitz3.ab3@20350>   MOVEA.l xinclude_base,A2
00030632 <AmiBlitz3.ab3@20351>   CLR.l xinclude_base
00030636 <AmiBlitz3.ab3@20354>     CMPA.w #$0,A2
0003063A <AmiBlitz3.ab3@20355>      BEQ.w JL_0_C186
0003063C <AmiBlitz3.ab3@20356>     MOVEQ.l #$00,D0
00030640 <AmiBlitz3.ab3@20357>     MOVE.b 4+8(A2),D0
00030642 <AmiBlitz3.ab3@20358>     MOVEA.l A2,A1
00030644 <AmiBlitz3.ab3@20359>     MOVEA.l (A2),A2
0003064A <AmiBlitz3.ab3@20360>     MOVEA.l _execbase,A6
00030650 <AmiBlitz3.ab3@20361>     MOVE.l mempool2,a0
00030654 <AmiBlitz3.ab3@20362>     JSR _FreePooled(A6)
00030658 <AmiBlitz3.ab3@20363> BRA.w JL_0_C168
0003065A <AmiBlitz3.ab3@20366> RTS
00030660 <AmiBlitz3.ab3@20370>   MOVEA.l constantbase,A2
00030666 <AmiBlitz3.ab3@20371>   CLR.l constantbase
0003066A <AmiBlitz3.ab3@20374>     CMPA.w #$0,A2
0003066E <AmiBlitz3.ab3@20375>      BEQ.w JL_0_C1DC
00030672 <AmiBlitz3.ab3@20376>     MOVE.l $8(A2),D1
00030676 <AmiBlitz3.ab3@20377>      BEQ.w JL_0_C1AE
0003067C <AmiBlitz3.ab3@20378>     MOVEA.l _dosbase,A6
00030680 <AmiBlitz3.ab3@20379>      JSR _Close(A6)
00030684 <AmiBlitz3.ab3@20382>     MOVE.l $4(A2),D0
00030688 <AmiBlitz3.ab3@20383>      BEQ.w JL_0_C1C6
0003068A <AmiBlitz3.ab3@20384>     MOVEA.l D0,A1
00030690 <AmiBlitz3.ab3@20385>     MOVE.l #$400*8,D0
00030696 <AmiBlitz3.ab3@20386>     MOVEA.l _execbase,A6
0003069C <AmiBlitz3.ab3@20387>     MOVE.l mempool,a0
000306A0 <AmiBlitz3.ab3@20388>     JSR _FreeVec(a6)
000306A2 <AmiBlitz3.ab3@20391>     MOVEQ.l #$00,D0
000306A6 <AmiBlitz3.ab3@20392>     MOVE.b $12(A2),D0
000306A8 <AmiBlitz3.ab3@20393>     MOVEA.l A2,A1
000306AA <AmiBlitz3.ab3@20394>     MOVEA.l (A2),A2
000306B0 <AmiBlitz3.ab3@20395>     MOVEA.l _execbase,A6
000306B6 <AmiBlitz3.ab3@20396>     MOVE.l mempool2,a0
000306BA <AmiBlitz3.ab3@20397>     JSR _FreePooled(A6)
000306BE <AmiBlitz3.ab3@20398> BRA.w JL_0_C194
000306C0 <AmiBlitz3.ab3@20401> RTS
000306C2 <AmiBlitz3.ab3@20405>   SWAP D0
000306C6 <AmiBlitz3.ab3@20406>    BSR.w JL_0_C1E6
000306C8 <AmiBlitz3.ab3@20407>   SWAP D0
000306CE <AmiBlitz3.ab3@20410>   MOVEA.l data2,A4
000306D4 <AmiBlitz3.ab3@20411>   CMPA.l allat,A4
000306D8 <AmiBlitz3.ab3@20412>    BCC.w JL_0_C200
000306DA <AmiBlitz3.ab3@20413>   MOVE.w D0,(A4)+
000306E0 <AmiBlitz3.ab3@20414>   MOVE.l A4,data2
000306E2 <AmiBlitz3.ab3@20415> RTS
000306EA <AmiBlitz3.ab3@20418>   MOVE.w #$FFFF,dontwrite
000306F0 <AmiBlitz3.ab3@20419>   ADDQ.l #2,data2
000306F2 <AmiBlitz3.ab3@20420> RTS
000306F8 <AmiBlitz3.ab3@20424>   MOVEA.l data2,A4
000306FE <AmiBlitz3.ab3@20425>   CMPA.l allat,A4
00030702 <AmiBlitz3.ab3@20426>    BCC.w JL_0_C22A
00030704 <AmiBlitz3.ab3@20427>   MOVE.b D0,(A4)+
0003070A <AmiBlitz3.ab3@20428>   MOVE.l A4,data2
0003070C <AmiBlitz3.ab3@20429> RTS
00030714 <AmiBlitz3.ab3@20432>   MOVE.w #$FFFF,dontwrite
0003071A <AmiBlitz3.ab3@20433>   ADDQ.l #1,data2
0003071C <AmiBlitz3.ab3@20434> RTS
00030720 <AmiBlitz3.ab3@20438>   CMP.w #$22,D0
00030724 <AmiBlitz3.ab3@20439>    BNE.w syntaxerr
0003072A <AmiBlitz3.ab3@20443>   JSR get1bytemain
0003072E <AmiBlitz3.ab3@20444>   CMP.b #$22,D0
00030732 <AmiBlitz3.ab3@20445>    BEQ.w JL_0_C25A
00030734 <AmiBlitz3.ab3@20446>   TST.w D0
00030738 <AmiBlitz3.ab3@20447>    BEQ.w syntaxerr
0003073A <AmiBlitz3.ab3@20448>   MOVE.b D0,(A0)+
0003073E <AmiBlitz3.ab3@20449> BRA.w JL_0_C242
00030740 <AmiBlitz3.ab3@20452>   CLR.b (A0)
00030742 <AmiBlitz3.ab3@20453> RTS
00030744 <AmiBlitz3.ab3@20456>   TST.l D3
00030746 <AmiBlitz3.ab3@20457> RTS
0003074C <AmiBlitz3.ab3@20460>   LEA ptr_parameterstore,A0
00030752 <AmiBlitz3.ab3@20461>   LEA namebuff2,A1
00030754 <AmiBlitz3.ab3@20464>     MOVE.b (A0)+,D0
00030758 <AmiBlitz3.ab3@20465>     BEQ.w JL_0_C27C
0003075A <AmiBlitz3.ab3@20466>   CMP.b (A1)+,D0
0003075E <AmiBlitz3.ab3@20467>   BEQ.w JL_0_C26E
00030760 <AmiBlitz3.ab3@20468> RTS
00030762 <AmiBlitz3.ab3@20471>   TST.b (A1)
00030766 <AmiBlitz3.ab3@20472>   BNE.w JL_0_C284
00030768 <AmiBlitz3.ab3@20473> RTS
0003076C <AmiBlitz3.ab3@20476>   CMP.w #$1,D0
0003076E <AmiBlitz3.ab3@20477> RTS
00030772 <AmiBlitz3.ab3@20481>   CMP.w #$2E,D0                                            ;dodeftype
00030776 <AmiBlitz3.ab3@20482>    BNE.w syntaxerr
0003077A <AmiBlitz3.ab3@20483>   BSR.w getparameter2
00030780 <AmiBlitz3.ab3@20484>   LEA newtypebase,A2
00030784 <AmiBlitz3.ab3@20485>   BSR.w findtype
00030788 <AmiBlitz3.ab3@20486>    BNE.w notypeerr
0003078E <AmiBlitz3.ab3@20487>   TST.b declare
00030792 <AmiBlitz3.ab3@20488>    BNE 'l1
00030798 <AmiBlitz3.ab3@20489>   TST.b declare2
0003079C <AmiBlitz3.ab3@20490>    BEQ 'l2
000307A4 <AmiBlitz3.ab3@20493>   MOVE.b #2,nowdeclare
000307AA <AmiBlitz3.ab3@20497>   JSR reget
000307AE <AmiBlitz3.ab3@20498>    BNE.w JL_0_C2B4
000307B4 <AmiBlitz3.ab3@20499>   MOVE.l A2,defaulttype
000307B6 <AmiBlitz3.ab3@20500> RTS
000307BC <AmiBlitz3.ab3@20503>   MOVE.l defaulttype,-(A7)
000307C2 <AmiBlitz3.ab3@20504>   MOVE.l A2,defaulttype
000307C6 <AmiBlitz3.ab3@20507>   BSR.w getparameter
000307CA <AmiBlitz3.ab3@20508>    BSR.w JL_0_8E3C
000307CE <AmiBlitz3.ab3@20509>   CMP.w #$2C,D0
000307D2 <AmiBlitz3.ab3@20510>    BNE.w JL_0_C2D8
000307D8 <AmiBlitz3.ab3@20511>    JSR get1bytemain                                        ; was BSR.w
000307DC <AmiBlitz3.ab3@20512> BRA.w JL_0_C2C0
000307E2 <AmiBlitz3.ab3@20515>   MOVE.l (A7)+,defaulttype
000307E4 <AmiBlitz3.ab3@20516> RTS
000307E8 <AmiBlitz3.ab3@20520>   LEA $4(A5),A2                                            ;fehler function
000307EA <AmiBlitz3.ab3@20523>   MOVE.l A2,D0
000307EE <AmiBlitz3.ab3@20526>   BSR.w getparameter
000307F2 <AmiBlitz3.ab3@20527>   BSR.w JL_0_8E3C
000307F6 <AmiBlitz3.ab3@20528>   BSR.w calcvar
000307FA <AmiBlitz3.ab3@20529>   CMP.b #$7,D2
000307FE <AmiBlitz3.ab3@20530>    BNE.w mismatcherr
00030802 <AmiBlitz3.ab3@20531>   MOVE.w varmode(PC),-(A7)
00030806 <AmiBlitz3.ab3@20532>   CMP.w #$3D,D0
0003080A <AmiBlitz3.ab3@20533>    BNE.w syntaxerr
0003080E <AmiBlitz3.ab3@20534>   BTST #$F,D2
00030812 <AmiBlitz3.ab3@20535>    BNE.w JL_0_C31C
00030816 <AmiBlitz3.ab3@20536>   MOVE.w JL_0_C2E0(PC),D1
0003081A <AmiBlitz3.ab3@20537>   BSR.w pokewda5s
0003081C <AmiBlitz3.ab3@20538>   MOVE.w D3,D1
00030820 <AmiBlitz3.ab3@20539>   BSR.w writeword
00030824 <AmiBlitz3.ab3@20542>   MOVE.w L_0_C2E4(PC),D1
00030828 <AmiBlitz3.ab3@20543>   BSR.w writeword
0003082E <AmiBlitz3.ab3@20544>   ADDQ.w #1,regnum
00030830 <AmiBlitz3.ab3@20545>   MOVEQ.l #$03,D2
00030834 <AmiBlitz3.ab3@20546>   BSR.w eval
0003083A <AmiBlitz3.ab3@20547>   MOVE.l #$D000,D1
00030840 <AmiBlitz3.ab3@20548>   MOVE.l d1,lastinstruction
00030842 <AmiBlitz3.ab3@20549>   TST.w (A7)+
00030846 <AmiBlitz3.ab3@20550>    BEQ.w Atokejsr
00030848 <AmiBlitz3.ab3@20551>   ADDQ.w #1,D1
0003084C <AmiBlitz3.ab3@20552> BRA.w Atokejsr
0003084E <AmiBlitz3.ab3@20556>   MOVE.w D0,D1
00030852 <AmiBlitz3.ab3@20557>    BPL.w syntaxerr
00030856 <AmiBlitz3.ab3@20558>   BCLR #$F,D1
0003085C <AmiBlitz3.ab3@20559>    JSR searchinstr
00030860 <AmiBlitz3.ab3@20560>   MOVE.l $12(A2),D0
00030864 <AmiBlitz3.ab3@20561>   TST.w -$2(A2,D0.L)
00030868 <AmiBlitz3.ab3@20562>    BEQ.w freeerr
0003086A <AmiBlitz3.ab3@20563>   MOVEQ.l #$02,D2
0003086C <AmiBlitz3.ab3@20564>   MOVE.l A2,-(A7)
00030870 <AmiBlitz3.ab3@20565>    BSR.w eval
00030872 <AmiBlitz3.ab3@20566>   MOVEA.l (A7)+,A2
00030878 <AmiBlitz3.ab3@20567>   MOVE.l A2,mymaxlib
0003087C <AmiBlitz3.ab3@20568>   ADDA.l $12(A2),A2
00030882 <AmiBlitz3.ab3@20569>   TST.b debugmode
00030886 <AmiBlitz3.ab3@20570>    BEQ.w JL_0_C3A8
0003088C <AmiBlitz3.ab3@20571>   MOVE.w regnum,D1
0003088E <AmiBlitz3.ab3@20572>   LSL.w #8,D1
00030890 <AmiBlitz3.ab3@20573>   LSL.w #1,D1
00030894 <AmiBlitz3.ab3@20574>   ORI.w #$B07C,D1
00030898 <AmiBlitz3.ab3@20575>    BSR.w writeword
0003089C <AmiBlitz3.ab3@20576>   MOVE.w -$4(A2),D1
000308A0 <AmiBlitz3.ab3@20577>    BSR.w writeword
000308A6 <AmiBlitz3.ab3@20578>   MOVE.l maxchk,D1
000308AA <AmiBlitz3.ab3@20579>    BSR.w writelong
000308AC <AmiBlitz3.ab3@20580>   MOVE.l A2,-(A7)
000308B0 <AmiBlitz3.ab3@20581>   MOVE.w #$C30A,D1
000308B4 <AmiBlitz3.ab3@20582>    BSR.w Atokejsr
000308B6 <AmiBlitz3.ab3@20583>   MOVEA.l (A7)+,A2
000308BA <AmiBlitz3.ab3@20586>   MOVE.w -$2(A2),D2
000308C0 <AmiBlitz3.ab3@20589>   MOVE.w regnum,D1
000308C6 <AmiBlitz3.ab3@20590>   OR.w lslimm,D1
000308CA <AmiBlitz3.ab3@20591>   CMP.w #$8,D2
000308CE <AmiBlitz3.ab3@20592>    BCS.w JL_0_C3CE
000308D2 <AmiBlitz3.ab3@20593>    BSR.w writeword
000308D4 <AmiBlitz3.ab3@20594>   SUBQ.w #8,D2
000308D8 <AmiBlitz3.ab3@20595>    BNE.w JL_0_C3AC
000308DC <AmiBlitz3.ab3@20596> BRA.w JL_0_C3DA
000308DE <AmiBlitz3.ab3@20599>   MOVE.w D2,D0
000308E0 <AmiBlitz3.ab3@20600>   LSL.w #8,D0
000308E2 <AmiBlitz3.ab3@20601>   LSL.w #1,D0
000308E4 <AmiBlitz3.ab3@20602>   OR.w D0,D1
000308E8 <AmiBlitz3.ab3@20603>   BSR.w writeword
000308EA <AmiBlitz3.ab3@20606> RTS
000308EE <AmiBlitz3.ab3@20611>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
000308F0 <AmiBlitz3.ab3@20612>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
000308F4 <AmiBlitz3.ab3@20616> mymaxlib:  Ds.l 1
000308F8 <AmiBlitz3.ab3@20620>   BSR.w JL_0_C340
000308FC <AmiBlitz3.ab3@20621>   LEA free(PC),A0
00030900 <AmiBlitz3.ab3@20622>   LEA freef(PC),A1
00030906 <AmiBlitz3.ab3@20623>   MOVE.w -$6(A2),$2(A0)
0003090A <AmiBlitz3.ab3@20624>   BSR.w pokecode
0003090E <AmiBlitz3.ab3@20625>   MOVE.l -$A(A2),D1
00030912 <AmiBlitz3.ab3@20628>   BEQ.w nosuperr
00030916 <AmiBlitz3.ab3@20629>   MOVEA.l mymaxlib(PC),A2
0003091A <AmiBlitz3.ab3@20630> BRA.w Amakelibsub
0003091E <AmiBlitz3.ab3@20635>   BSR.w JL_0_C340
00030924 <AmiBlitz3.ab3@20636>   LEA use,A0
0003092A <AmiBlitz3.ab3@20637>   LEA usef,A1
00030930 <AmiBlitz3.ab3@20638>   MOVE.w -$6(A2),$2(A0)
00030936 <AmiBlitz3.ab3@20639>   MOVE.w -$6(A2),-$2(A1)
0003093A <AmiBlitz3.ab3@20640>   ADDQ.w #4,-$2(A1)
0003093E <AmiBlitz3.ab3@20641>   BSR.w pokecode
00030942 <AmiBlitz3.ab3@20642>   MOVE.l -$E(A2),D1
00030946 <AmiBlitz3.ab3@20643> BRA.w maxjsr
0003094C <AmiBlitz3.ab3@20647>   JSR get1bytemain
00030952 <AmiBlitz3.ab3@20651>   MOVE.l firstiff,D0
00030956 <AmiBlitz3.ab3@20652>    BEQ.w noiferr
00030958 <AmiBlitz3.ab3@20653>   MOVEA.l D0,A0
0003095E <AmiBlitz3.ab3@20654>   CMPI.b #$1,$D(A0)
00030962 <AmiBlitz3.ab3@20655>    BEQ.w illelseerr
00030966 <AmiBlitz3.ab3@20656>   MOVE.w #$6000,D1
0003096C <AmiBlitz3.ab3@20658>     TST.b fast
00030970 <AmiBlitz3.ab3@20659>     BEQ 'l1
00030976 <AmiBlitz3.ab3@20660>     OR.l #$ff,d1
0003097A <AmiBlitz3.ab3@20661>     BSR writeword
0003097C <AmiBlitz3.ab3@20665>   SWAP D1
00030980 <AmiBlitz3.ab3@20666>   BSR.w writelong
00030982 <AmiBlitz3.ab3@20667>   MOVEQ.l #$00,D1
00030986 <AmiBlitz3.ab3@20668>   BSR.w AJL_0_D7B8
0003098E <AmiBlitz3.ab3@20669>   MOVE.l destpointer,$8(A0)
00030992 <AmiBlitz3.ab3@20670> BRA.w do_then
00030998 <AmiBlitz3.ab3@20674>   LEA ptr_parameterstore,A0
0003099A <AmiBlitz3.ab3@20675>   MOVE.l A0,-(A7)
0003099E <AmiBlitz3.ab3@20676>   BSR.w JL_0_C23A
000309A2 <AmiBlitz3.ab3@20677> BRA.w handle_compileerror
000309A6 <AmiBlitz3.ab3@20681>   BSR.w JL_0_BF6A
000309A8 <AmiBlitz3.ab3@20682>   MOVEQ.l #$05,D1
000309B2 <AmiBlitz3.ab3@20684>   MOVE.w oldqflag,instringon
000309B8 <AmiBlitz3.ab3@20685>   MOVEA.l lastsourcepos,A5
000309BE <AmiBlitz3.ab3@20686>   LEA AJL_0_C25E,A0
000309C2 <AmiBlitz3.ab3@20687> BRA.w JL_0_C4B4
000309C8 <AmiBlitz3.ab3@20691>   LEA ptr_parameterstore,A0
000309CC <AmiBlitz3.ab3@20692>   BSR.w JL_0_C23A
000309D2 <AmiBlitz3.ab3@20693>   JSR get1bytemain
000309D6 <AmiBlitz3.ab3@20694>   BSR.w JL_0_CCA8
000309DC <AmiBlitz3.ab3@20695>   LEA namebuff2,A0
000309E0 <AmiBlitz3.ab3@20696>   BSR.w JL_0_C23A
000309E6 <AmiBlitz3.ab3@20697>   LEA AJL_0_C262,A0
000309E8 <AmiBlitz3.ab3@20700>   LSL.w #2,D1
000309EE <AmiBlitz3.ab3@20701>   LEA CIF_branches,A1
000309F2 <AmiBlitz3.ab3@20702>   MOVE.l $0(A1,D1.W),-(A7)
000309F4 <AmiBlitz3.ab3@20703>   MOVEQ.l #-$01,D1
000309F6 <AmiBlitz3.ab3@20706>   JSR (A0)
000309F8 <AmiBlitz3.ab3@20708>   MOVEA.l (A7)+,A1
000309FA <AmiBlitz3.ab3@20710> JMP (A1)
000309FE <AmiBlitz3.ab3@20714>   BEQ.w JL_0_C4F6
00030A02 <AmiBlitz3.ab3@20715> BRA.w JL_0_C4F4
00030A06 <AmiBlitz3.ab3@20719>   BNE.w JL_0_C4F6
00030A0A <AmiBlitz3.ab3@20720> BRA.w JL_0_C4F4
00030A0E <AmiBlitz3.ab3@20724>   BLT.w JL_0_C4F6
00030A12 <AmiBlitz3.ab3@20725> BRA.w JL_0_C4F4
00030A16 <AmiBlitz3.ab3@20729>   BLE.w JL_0_C4F6
00030A1A <AmiBlitz3.ab3@20730> BRA.w JL_0_C4F4
00030A1E <AmiBlitz3.ab3@20734>   BGT.w JL_0_C4F6
00030A22 <AmiBlitz3.ab3@20735> BRA.w JL_0_C4F4
00030A26 <AmiBlitz3.ab3@20739>   BGE.w JL_0_C4F6
00030A28 <AmiBlitz3.ab3@20742>   MOVEQ.l #$00,D1
00030A2E <AmiBlitz3.ab3@20745>   MOVEA.l concomsp,A0
00030A34 <AmiBlitz3.ab3@20746>   MOVE.w skipcode,(A0)+
00030A3A <AmiBlitz3.ab3@20747>   MOVE.l A0,concomsp
00030A40 <AmiBlitz3.ab3@20748>   MOVE.w D1,skipcode
00030A46 <AmiBlitz3.ab3@20749>   JSR get1bytemain
00030A4A <AmiBlitz3.ab3@20750>    BNE.w syntaxerr
00030A50 <AmiBlitz3.ab3@20751> JMP bakup
00030A58 <AmiBlitz3.ab3@20755> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00030A5C <AmiBlitz3.ab3@20756> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00030A60 <AmiBlitz3.ab3@20763>   MOVE.w #$FC17,D1
00030A66 <AmiBlitz3.ab3@20764>   JSR uselib
00030A6C <AmiBlitz3.ab3@20766>   JSR reget
00030A70 <AmiBlitz3.ab3@20767>    BEQ.w do_Restore__resbeg
00030A74 <AmiBlitz3.ab3@20768>   BSR.w JL_0_AE22                                          ;get label name!
00030A78 <AmiBlitz3.ab3@20769>   MOVE.w rescode(PC),D1
00030A7C <AmiBlitz3.ab3@20770>   BSR.w writeword
00030A82 <AmiBlitz3.ab3@20771>   JSR addoff                                               ;add offset
00030A86 <AmiBlitz3.ab3@20772>   MOVE.l $C(A2),D1
00030A8A <AmiBlitz3.ab3@20773>   BSR.w writelong
00030A8E <AmiBlitz3.ab3@20774>   MOVE.w rescode+6(PC),D1
00030A92 <AmiBlitz3.ab3@20775>   BSR.w writeword
00030A96 <AmiBlitz3.ab3@20776>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00030A9A <AmiBlitz3.ab3@20777>   BEQ.w do_Restore__no
00030A9C <AmiBlitz3.ab3@20779>   MOVEA.l D1,A1
00030AA0 <AmiBlitz3.ab3@20780>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00030AA2 <AmiBlitz3.ab3@20781> RTS
00030AA4 <AmiBlitz3.ab3@20786> RTS
00030AA8 <AmiBlitz3.ab3@20789>   MOVE.w #$CD00,D1
00030AAE <AmiBlitz3.ab3@20790>   JSR Atokejsr
00030AB2 <AmiBlitz3.ab3@20791>   MOVE.l rescode2(PC),D1
00030AB8 <AmiBlitz3.ab3@20792> JMP writelong
00030ABC <AmiBlitz3.ab3@20796>   MOVE.w #$FC17,D1
00030AC2 <AmiBlitz3.ab3@20797>   JSR uselib
00030AC8 <AmiBlitz3.ab3@20800>   MOVE.l dataget,D1
00030ACC <AmiBlitz3.ab3@20801>   BSR.w writelong
00030AD0 <AmiBlitz3.ab3@20802>   BSR.w getparameter
00030AD4 <AmiBlitz3.ab3@20803>   BSR.w JL_0_8E3C
00030AD8 <AmiBlitz3.ab3@20804>   BSR.w calcvar
00030ADC <AmiBlitz3.ab3@20805>   BTST #$E,D2
00030AE0 <AmiBlitz3.ab3@20806>    BEQ.w JL_0_C5A6
00030AE4 <AmiBlitz3.ab3@20807>   MOVE.b #$6,D2
00030AE6 <AmiBlitz3.ab3@20810>   TST.b D2
00030AEA <AmiBlitz3.ab3@20811>    BEQ.w noleterr
00030AF0 <AmiBlitz3.ab3@20812>   TST.b debugmode
00030AF4 <AmiBlitz3.ab3@20813>    BEQ.w JL_0_C5D0
00030AF8 <AmiBlitz3.ab3@20814>   MOVE.w #$7000,D1
00030AFA <AmiBlitz3.ab3@20815>   MOVE.b D2,D1
00030AFE <AmiBlitz3.ab3@20816>   ANDI.b #$F,D1
00030B02 <AmiBlitz3.ab3@20817>   BSR.w writeword
00030B06 <AmiBlitz3.ab3@20818>   MOVE.w #$C310,D1
00030B08 <AmiBlitz3.ab3@20819>   MOVE.w D2,-(A7)
00030B0C <AmiBlitz3.ab3@20820>   BSR.w Atokejsr
00030B0E <AmiBlitz3.ab3@20821>   MOVE.w (A7)+,D2
00030B12 <AmiBlitz3.ab3@20824>   CMP.b #$7,D2
00030B16 <AmiBlitz3.ab3@20825>    BEQ.w JL_0_C684
00030B1A <AmiBlitz3.ab3@20826>   CMP.b #$1,D2
00030B1E <AmiBlitz3.ab3@20827>    BNE.w JL_0_C62A
00030B24 <AmiBlitz3.ab3@20828>   LEA dataletb2,A0
00030B2A <AmiBlitz3.ab3@20829>   LEA dataletb2f,A1
00030B2E <AmiBlitz3.ab3@20830>   BTST #$F,D2
00030B32 <AmiBlitz3.ab3@20831>    BEQ.w JL_0_C5FC
00030B36 <AmiBlitz3.ab3@20832>   BSR.w pokecode
00030B3A <AmiBlitz3.ab3@20833> BRA.w JL_0_C668
00030B40 <AmiBlitz3.ab3@20836>   LEA dataletb,A0
00030B46 <AmiBlitz3.ab3@20837>   LEA dataletbf,A1
00030B4C <AmiBlitz3.ab3@20838>   TST.w varmode
00030B50 <AmiBlitz3.ab3@20839>    BEQ.w JL_0_C61E
00030B56 <AmiBlitz3.ab3@20840>   LEA dataletbl,A0
00030B5C <AmiBlitz3.ab3@20841>   LEA dataletblf,A1
00030B60 <AmiBlitz3.ab3@20844>   MOVE.w D3,$4(A0)
00030B64 <AmiBlitz3.ab3@20845>   BSR.w pokecode
00030B68 <AmiBlitz3.ab3@20846> BRA.w JL_0_C668
00030B6E <AmiBlitz3.ab3@20849>   LEA dataletw,A0
00030B72 <AmiBlitz3.ab3@20850>   CMP.b #$3,D2
00030B76 <AmiBlitz3.ab3@20851>    BCS.w JL_0_C63E
00030B7C <AmiBlitz3.ab3@20852>   LEA dataletl,A0
00030B80 <AmiBlitz3.ab3@20855>   BTST #$F,D2
00030B84 <AmiBlitz3.ab3@20856>    BEQ.w JL_0_C652
00030B88 <AmiBlitz3.ab3@20857>   MOVE.w $4(A0),D1
00030B8C <AmiBlitz3.ab3@20858>    BSR.w writeword
00030B90 <AmiBlitz3.ab3@20859> BRA.w JL_0_C668
00030B96 <AmiBlitz3.ab3@20862>   TST.w varmode
00030B9A <AmiBlitz3.ab3@20863>    BEQ.w JL_0_C65E
00030B9C <AmiBlitz3.ab3@20864>   ADDQ.w #6,A0
00030BA0 <AmiBlitz3.ab3@20867>   MOVE.w D3,$2(A0)
00030BA2 <AmiBlitz3.ab3@20868>   MOVE.l (A0),D1
00030BA6 <AmiBlitz3.ab3@20869>   BSR.w writelong
00030BAC <AmiBlitz3.ab3@20872>   MOVE.l dataput,D1
00030BB0 <AmiBlitz3.ab3@20873>    BSR.w writelong
00030BB4 <AmiBlitz3.ab3@20874>   CMP.w #$2C,D0
00030BB8 <AmiBlitz3.ab3@20875>    BEQ.w JL_0_C67C
00030BBA <AmiBlitz3.ab3@20876> RTS
00030BC0 <AmiBlitz3.ab3@20879>   JSR get1bytemain
00030BC4 <AmiBlitz3.ab3@20880> BRA.w JL_0_C584
00030BCA <AmiBlitz3.ab3@20884>   MOVE.w stlenget,D1
00030BCE <AmiBlitz3.ab3@20885>    BSR.w writeword
00030BD2 <AmiBlitz3.ab3@20886>   BTST #$F,D2
00030BD6 <AmiBlitz3.ab3@20887>    BNE.w JL_0_C6C0
00030BDC <AmiBlitz3.ab3@20888>   TST.w varmode
00030BE0 <AmiBlitz3.ab3@20889>    BEQ.w JL_0_C6B0
00030BE6 <AmiBlitz3.ab3@20890>   MOVE.w D3,leaampl+2
00030BEC <AmiBlitz3.ab3@20891>   MOVE.l leaampl,D1
00030BF0 <AmiBlitz3.ab3@20892> BRA.w JL_0_C6BC
00030BF6 <AmiBlitz3.ab3@20895>   MOVE.w D3,leaamp+2
00030BFC <AmiBlitz3.ab3@20896>   MOVE.l leaamp,D1
00030C00 <AmiBlitz3.ab3@20899>   BSR.w writelong
00030C04 <AmiBlitz3.ab3@20902>   MOVE.w #$C701,D1
00030C0A <AmiBlitz3.ab3@20903>   MOVE.w varmode,D2
00030C0E <AmiBlitz3.ab3@20904>    BEQ.w JL_0_C6D0
00030C10 <AmiBlitz3.ab3@20905>   SUBQ.w #1,D1
00030C14 <AmiBlitz3.ab3@20908>   BSR.w Atokejsr
00030C1C <AmiBlitz3.ab3@20909>   MOVE.w #$FFFF,lasta6
00030C22 <AmiBlitz3.ab3@20910>   LEA stalign,A0
00030C28 <AmiBlitz3.ab3@20911>   LEA stalignf,A1
00030C2C <AmiBlitz3.ab3@20912>   BSR.w pokecode
00030C30 <AmiBlitz3.ab3@20913> BRA.w JL_0_C668
00030C34 <AmiBlitz3.ab3@20917>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
00030C38 <AmiBlitz3.ab3@20918>    BNE.w JL_0_C720
00030C3E <AmiBlitz3.ab3@20919>   JSR get1bytemain
00030C42 <AmiBlitz3.ab3@20920>   CMP.w #$77,D0
00030C46 <AmiBlitz3.ab3@20921>    BEQ.w JL_0_C71C
00030C4A <AmiBlitz3.ab3@20922>   CMP.w #$62,D0
00030C4E <AmiBlitz3.ab3@20923>    BEQ.w JL_0_C718
00030C52 <AmiBlitz3.ab3@20924>   CMP.w #"s",d0
00030C56 <AmiBlitz3.ab3@20925>   BEQ single3
00030C5A <AmiBlitz3.ab3@20926>   CMP.w #"d",d0
00030C5E <AmiBlitz3.ab3@20927>   BEQ double3
00030C62 <AmiBlitz3.ab3@20928>   CMP.w #$6C,D0
00030C66 <AmiBlitz3.ab3@20929>    BNE.w syntaxerr
00030C68 <AmiBlitz3.ab3@20930>   MOVEQ.l #$02,D1
00030C6A <AmiBlitz3.ab3@20931> RTS
00030C72 <AmiBlitz3.ab3@20935>   MOVE.b #1,iee
00030C74 <AmiBlitz3.ab3@20936>   MOVEQ.l #$3,d1
00030C76 <AmiBlitz3.ab3@20937> RTS
00030C7E <AmiBlitz3.ab3@20941>   MOVE.b #1,iee
00030C80 <AmiBlitz3.ab3@20942>   MOVEQ.l #$4,d1
00030C82 <AmiBlitz3.ab3@20943> RTS
00030C84 <AmiBlitz3.ab3@20947>   MOVEQ.l #$00,D1
00030C86 <AmiBlitz3.ab3@20948> RTS
00030C88 <AmiBlitz3.ab3@20952>   MOVEQ.l #$01,D1
00030C8A <AmiBlitz3.ab3@20953> RTS
00030C8C <AmiBlitz3.ab3@20957>   MOVEQ.l #$01,D1
00030C92 <AmiBlitz3.ab3@20958> JMP bakup
00030C96 <AmiBlitz3.ab3@20962>   BSR.w JL_0_C6F0
00030C98 <AmiBlitz3.ab3@20964>   MOVE.w D1,-(A7)
00030C9C <AmiBlitz3.ab3@20965>    BSR.w AJL_0_BF6E
00030CA0 <AmiBlitz3.ab3@20966>   CMP.w #$2C,D0
00030CA4 <AmiBlitz3.ab3@20967>    BNE.w syntaxerr
00030CA6 <AmiBlitz3.ab3@20968>   MOVE.l D3,-(A7)
00030CAA <AmiBlitz3.ab3@20969>    BSR.w AJL_0_BF6E
00030CAC <AmiBlitz3.ab3@20970>   MOVE.l D3,D1
00030CAE <AmiBlitz3.ab3@20971>   MOVE.l (A7)+,D3
00030CB0 <AmiBlitz3.ab3@20972>   MOVE.w (A7)+,D2
00030CB4 <AmiBlitz3.ab3@20973>    BEQ.w JL_0_C774
00030CB8 <AmiBlitz3.ab3@20977>   CMP.w #$1,D2
00030CBC <AmiBlitz3.ab3@20978>    BEQ.w JL_0_C768
00030CBE <AmiBlitz3.ab3@20981>   SWAP D1
00030CC2 <AmiBlitz3.ab3@20982>    BSR.w writeword
00030CC4 <AmiBlitz3.ab3@20983>   SWAP D1
00030CC8 <AmiBlitz3.ab3@20984>    BSR.w writeword
00030CCA <AmiBlitz3.ab3@20985>   SUBQ.l #1,D3
00030CCE <AmiBlitz3.ab3@20986>    BNE.w JL_0_C754
00030CD0 <AmiBlitz3.ab3@20987> RTS
00030CD4 <AmiBlitz3.ab3@20990>    BSR.w writeword
00030CD6 <AmiBlitz3.ab3@20991>   SUBQ.l #1,D3
00030CDA <AmiBlitz3.ab3@20992>    BNE.w JL_0_C768
00030CDC <AmiBlitz3.ab3@20993> RTS
00030CE0 <AmiBlitz3.ab3@20996>    BSR.w writebyte
00030CE2 <AmiBlitz3.ab3@20997>   SUBQ.l #1,D3
00030CE6 <AmiBlitz3.ab3@20998>    BNE.w JL_0_C774
00030CE8 <AmiBlitz3.ab3@20999> RTS
00030CEC <AmiBlitz3.ab3@21003>   BSR.w JL_0_C6F0                                          ;definestorage
00030CEE <AmiBlitz3.ab3@21004>   MOVE.w D1,-(A7)
00030CF2 <AmiBlitz3.ab3@21005>   BSR.w AJL_0_BF6E
00030CF4 <AmiBlitz3.ab3@21006>   MOVE.w (A7)+,D1
00030CF6 <AmiBlitz3.ab3@21007>   LSL.l D1,D3
00030CF8 <AmiBlitz3.ab3@21008>   MOVE.l d3,d0
00030CFC <AmiBlitz3.ab3@21009>   BEQ 'll5
00030CFE <AmiBlitz3.ab3@21010>   MOVEQ #0,d1
00030D04 <AmiBlitz3.ab3@21013>     JSR writebyte
00030D06 <AmiBlitz3.ab3@21014>     SUBQ.l #1,d3
00030D0A <AmiBlitz3.ab3@21015>   BNE.s 'll10
00030D0C <AmiBlitz3.ab3@21018> RTS
00030D0E <AmiBlitz3.ab3@21022>   MOVE.w D0,-(A7)
00030D14 <AmiBlitz3.ab3@21023>   LEA dummyasm,A0
00030D1A <AmiBlitz3.ab3@21024>   MOVEA.l destpointer,A1
00030D24 <AmiBlitz3.ab3@21025>   MOVE.w asmlen2,asmlen
00030D2A <AmiBlitz3.ab3@21026>   JSR insasm
00030D2C <AmiBlitz3.ab3@21027>   MOVE.w (A7)+,D0
00030D2E <AmiBlitz3.ab3@21028> RTS
00030D32 <AmiBlitz3.ab3@21032>   BSR.w JL_0_C6F0
00030D3C <AmiBlitz3.ab3@21034>   MOVE.l #ptr_parameterstore,asmbuff
00030D3E <AmiBlitz3.ab3@21035>   TST.w D1
00030D42 <AmiBlitz3.ab3@21036>    BEQ.w JL_0_C7EE
00030D46 <AmiBlitz3.ab3@21037>   CMP.w #$1,D1
00030D4A <AmiBlitz3.ab3@21038>    BEQ.w JL_0_C844
00030D4E <AmiBlitz3.ab3@21039>   CMP.w #$2,d1
00030D52 <AmiBlitz3.ab3@21040>    BEQ long
00030D56 <AmiBlitz3.ab3@21041>   CMP.w #$3,d1
00030D5A <AmiBlitz3.ab3@21042>    BEQ single
00030D5C <AmiBlitz3.ab3@21043>    MOVEQ.l #$0d,D3
00030D62 <AmiBlitz3.ab3@21049>    JSR asmconst
00030D66 <AmiBlitz3.ab3@21050>    BSR.w JL_0_C796
00030D6A <AmiBlitz3.ab3@21051>    BSR.w writelong
00030D6E <AmiBlitz3.ab3@21052>    BSR   writelong
00030D72 <AmiBlitz3.ab3@21053>   CMP.w #$2C,D0
00030D76 <AmiBlitz3.ab3@21054>    BEQ.w JL_0_C7D8b
00030D78 <AmiBlitz3.ab3@21055> RTS
00030D7A <AmiBlitz3.ab3@21059>   MOVEQ.l #$0B,D3
00030D82 <AmiBlitz3.ab3@21063>   MOVE.b #1,_dcb
00030D88 <AmiBlitz3.ab3@21066>   JSR asmconst
00030D8E <AmiBlitz3.ab3@21067>   CLR.b _dcb
00030D92 <AmiBlitz3.ab3@21068>   BSR.w JL_0_C796
00030D96 <AmiBlitz3.ab3@21069>   BSR writebyte
00030D9A <AmiBlitz3.ab3@21070>   BSR writebyte
00030D9E <AmiBlitz3.ab3@21071>   BSR writebyte                                            ;long
00030DA2 <AmiBlitz3.ab3@21072>   BSR writebyte
00030DA6 <AmiBlitz3.ab3@21073>   CMP.w #$2C,D0
00030DAA <AmiBlitz3.ab3@21074>    BEQ.w JL_0_C7D8
00030DAC <AmiBlitz3.ab3@21075> RTS
00030DAE <AmiBlitz3.ab3@21079>   MOVEQ.l #$0c,D3
00030DB6 <AmiBlitz3.ab3@21083>   MOVE.b #1,_dcb
00030DBC <AmiBlitz3.ab3@21086>   JSR asmconst
00030DC2 <AmiBlitz3.ab3@21087>   CLR.b _dcb
00030DC6 <AmiBlitz3.ab3@21088>   BSR.w JL_0_C796
00030DCA <AmiBlitz3.ab3@21089>   BSR.w writebyte
00030DCE <AmiBlitz3.ab3@21090>   BSR.w writebyte
00030DD2 <AmiBlitz3.ab3@21091>   BSR.w writebyte
00030DD6 <AmiBlitz3.ab3@21092>   BSR.w writebyte
00030DDA <AmiBlitz3.ab3@21093>   CMP.w #$2C,D0
00030DDE <AmiBlitz3.ab3@21094>    BEQ.w JL_0_C7D8a
00030DE0 <AmiBlitz3.ab3@21095> RTS
00030DE2 <AmiBlitz3.ab3@21100>   MOVEQ.l #$11,D3
00030DE8 <AmiBlitz3.ab3@21103>   JSR get1bytemain
00030DEC <AmiBlitz3.ab3@21104>   CMP.w #$22,D0
00030DF0 <AmiBlitz3.ab3@21105>    BNE.w JL_0_C81E
00030DF2 <AmiBlitz3.ab3@21108>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00030DF6 <AmiBlitz3.ab3@21109>    BEQ.w syntaxerr
00030DFA <AmiBlitz3.ab3@21110>   CMP.w #$22,D0
00030DFE <AmiBlitz3.ab3@21111>    BEQ.w JL_0_C816
00030E02 <AmiBlitz3.ab3@21112>   CMP.b #"\",d0
00030E06 <AmiBlitz3.ab3@21113>    BNE 'n1
00030E0A <AmiBlitz3.ab3@21114>   CMP.b #"\",(a5)
00030E0E <AmiBlitz3.ab3@21115>    BEQ 'do1
00030E10 <AmiBlitz3.ab3@21118>   MOVE.w D0,D1
00030E14 <AmiBlitz3.ab3@21119>   BSR.w writebyte
00030E18 <AmiBlitz3.ab3@21120> BRA.w JL_0_C7FC
00030E20 <AmiBlitz3.ab3@21123>   CMP.l #"__DA",1(a5)
00030E24 <AmiBlitz3.ab3@21124>    BNE 'nodate1
00030E2C <AmiBlitz3.ab3@21125>   CMP.l #"TE__",5(a5)
00030E30 <AmiBlitz3.ab3@21126>    BEQ 'c1
00030E38 <AmiBlitz3.ab3@21127>   CMP.l #"TE_G",5(a5)
00030E3C <AmiBlitz3.ab3@21128>    BNE 'nodate1
00030E44 <AmiBlitz3.ab3@21129>   CMP.l #"ER__",9(a5)
00030E48 <AmiBlitz3.ab3@21130>    BNE 'nodate1
00030E4E <AmiBlitz3.ab3@21131>   JSR compiledatedc_ger
00030E52 <AmiBlitz3.ab3@21132> BRA 'n1
00030E58 <AmiBlitz3.ab3@21135>   JSR compiledatedc
00030E5C <AmiBlitz3.ab3@21136> BRA 'n1
00030E64 <AmiBlitz3.ab3@21139>   CMP.l #"__VE",1(a5)
00030E68 <AmiBlitz3.ab3@21140>    BNE 'n1
00030E6E <AmiBlitz3.ab3@21141>   CMP.w #"R_",5(a5)
00030E72 <AmiBlitz3.ab3@21142>    BNE 'n1
00030E78 <AmiBlitz3.ab3@21143>   JSR version_string_dc
00030E7C <AmiBlitz3.ab3@21144> BRA.w JL_0_C7FC
00030E82 <AmiBlitz3.ab3@21148>   CLR.w instringon
00030E88 <AmiBlitz3.ab3@21149>   JSR get1bytemain
00030E8C <AmiBlitz3.ab3@21150> BRA.w JL_0_C83A
00030E96 <AmiBlitz3.ab3@21155>    MOVE.w oldqflag,instringon
00030E9C <AmiBlitz3.ab3@21156>   MOVEA.l lastsourcepos,A5
00030EA2 <AmiBlitz3.ab3@21157>    JSR asmconst
00030EA8 <AmiBlitz3.ab3@21158>   SUBQ.l #1,destpointer
00030EAC <AmiBlitz3.ab3@21159>    BSR.w JL_0_C796
00030EB2 <AmiBlitz3.ab3@21160>   ADDQ.l #1,destpointer
00030EB6 <AmiBlitz3.ab3@21161>    BSR.w writebyte
00030EBA <AmiBlitz3.ab3@21164>   CMP.w #$2C,D0
00030EBE <AmiBlitz3.ab3@21165>    BEQ.w JL_0_C7F0
00030EC0 <AmiBlitz3.ab3@21166> RTS
00030EC2 <AmiBlitz3.ab3@21170>   MOVEQ.l #$10,D3
00030ECA <AmiBlitz3.ab3@21176>   MOVE.b #1,_dcb
00030ED0 <AmiBlitz3.ab3@21177>   JSR asmconst
00030ED6 <AmiBlitz3.ab3@21178>   CLR.b _dcb
00030EDA <AmiBlitz3.ab3@21179>   BSR.w JL_0_C796
00030EDE <AmiBlitz3.ab3@21180>   BSR.w writebyte
00030EE2 <AmiBlitz3.ab3@21181>   BSR.w writebyte
00030EE6 <AmiBlitz3.ab3@21182>   CMP.w #$2C,D0
00030EEA <AmiBlitz3.ab3@21183>    BEQ.w JL_0_C84A
00030EEC <AmiBlitz3.ab3@21184> RTS
00030EF2 <AmiBlitz3.ab3@21188>   ADDQ.l #3,destpointer
00030EFA <AmiBlitz3.ab3@21189>   ANDI.w #$FFFC,destpointer+2
00030EFC <AmiBlitz3.ab3@21190> RTS
00030F02 <AmiBlitz3.ab3@21194>   ADDQ.l #7,destpointer
00030F0A <AmiBlitz3.ab3@21195>   ANDI.w #$FFF8,destpointer+2
00030F0C <AmiBlitz3.ab3@21196> RTS
00030F12 <AmiBlitz3.ab3@21200>   ADDQ.l #1,destpointer                                    ;even
00030F1A <AmiBlitz3.ab3@21201>   BCLR #$0,destpointer+3
00030F1C <AmiBlitz3.ab3@21202> RTS
00030F1E <AmiBlitz3.ab3@21205> datasize: Ds.w 1
00030F24 <AmiBlitz3.ab3@21215>   TST.b debugmode
00030F28 <AmiBlitz3.ab3@21216>   BEQ.w pdt__skip
00030F2C <AmiBlitz3.ab3@21217>   MOVE.w #$4420,D0                                         ;'D '
00030F30 <AmiBlitz3.ab3@21218>   MOVE.b datasize+1(PC),D0
00030F34 <AmiBlitz3.ab3@21219> BRA.w JL_0_C1E6
00030F36 <AmiBlitz3.ab3@21222> RTS
00030F3A <AmiBlitz3.ab3@21226>   MOVE.w #$FC17,D1
00030F40 <AmiBlitz3.ab3@21227>    JSR uselib
00030F4A <AmiBlitz3.ab3@21229>    MOVE.w oldqflag,instringon
00030F50 <AmiBlitz3.ab3@21230>   MOVEA.l lastsourcepos,A5
00030F56 <AmiBlitz3.ab3@21231>    JSR AJL_0_498A
00030F5C <AmiBlitz3.ab3@21232>   MOVE.w D1,datasize
00030F60 <AmiBlitz3.ab3@21233>   CMP.w #$7,D1
00030F64 <AmiBlitz3.ab3@21234>    BEQ.w JL_0_C944
00030F66 <AmiBlitz3.ab3@21235>   MOVE.w D1,-(A7)
00030F6A <AmiBlitz3.ab3@21238>   BSR.w pdt
00030F6C <AmiBlitz3.ab3@21239>   MOVE.w (A7),D2
00030F70 <AmiBlitz3.ab3@21240>    BSR.w JL_0_B1D8
00030F72 <AmiBlitz3.ab3@21241>   CMP.w (A7),D2                                            ;datamode
00030F76 <AmiBlitz3.ab3@21242>    BEQ.w JL_0_C920
00030F78 <AmiBlitz3.ab3@21243>   MOVE.w D2,D1
00030F7A <AmiBlitz3.ab3@21244>   MOVE.w (A7),D2
00030F7E <AmiBlitz3.ab3@21245>   CMP.w #$2,D2
00030F82 <AmiBlitz3.ab3@21246>    BNE.w JL_0_C8FE
00030F86 <AmiBlitz3.ab3@21247>   CMP.w #$3,D1
00030F8A <AmiBlitz3.ab3@21248>    BNE.w baddaterr
00030F90 <AmiBlitz3.ab3@21249>   CMP.l #$10000,D3
00030F94 <AmiBlitz3.ab3@21250>    BCC.w baddaterr
00030F98 <AmiBlitz3.ab3@21251> BRA.w JL_0_C920
00030F9C <AmiBlitz3.ab3@21254>   CMP.w #$1,D2
00030FA0 <AmiBlitz3.ab3@21255>    BNE.w JL_0_C91C
00030FA4 <AmiBlitz3.ab3@21256>   CMP.w #$2,D1
00030FA8 <AmiBlitz3.ab3@21257>    BNE.w baddaterr
00030FAE <AmiBlitz3.ab3@21258>   CMP.l #$100,D3
00030FB2 <AmiBlitz3.ab3@21259>    BCC.w baddaterr
00030FB6 <AmiBlitz3.ab3@21260> BRA.w JL_0_C920
00030FBA <AmiBlitz3.ab3@21263> BRA.w baddaterr
00030FBE <AmiBlitz3.ab3@21266>   CMP.w #$3,D2
00030FC2 <AmiBlitz3.ab3@21267>   BCC.w JL_0_C930
00030FC6 <AmiBlitz3.ab3@21268>   BSR.w JL_0_C1E6
00030FCA <AmiBlitz3.ab3@21269> BRA.w JL_0_C934
00030FD0 <AmiBlitz3.ab3@21272>   TST.b iee
00030FD4 <AmiBlitz3.ab3@21273>   BEQ 'old
00030FD8 <AmiBlitz3.ab3@21274>   CMP.b #5,d2
00030FDC <AmiBlitz3.ab3@21275>   BNE 'old
00030FE0 <AmiBlitz3.ab3@21276>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00030FE4 <AmiBlitz3.ab3@21280>   BSR.w JL_0_C1DE                                          ;write data >3
00030FEA <AmiBlitz3.ab3@21283>   JSR reget
00030FEE <AmiBlitz3.ab3@21284>   CMP.w #$2C,D0
00030FF2 <AmiBlitz3.ab3@21285>    BEQ.w JL_0_C8CC
00030FF4 <AmiBlitz3.ab3@21286>   ADDQ.w #2,A7
00030FF6 <AmiBlitz3.ab3@21287> RTS
00030FFA <AmiBlitz3.ab3@21290>    BSR.w pdt
00031000 <AmiBlitz3.ab3@21291>   MOVE.l data2,-(A7)
00031004 <AmiBlitz3.ab3@21292>    BSR.w JL_0_C1DE
00031006 <AmiBlitz3.ab3@21293>   MOVEQ.l #$00,D1
0003100C <AmiBlitz3.ab3@21294>    JSR get1bytemain
00031010 <AmiBlitz3.ab3@21295>    BEQ.w JL_0_C9A6
00031014 <AmiBlitz3.ab3@21296>   CMP.w #$22,D0
00031018 <AmiBlitz3.ab3@21297>    BEQ.w JL_0_C988
0003101C <AmiBlitz3.ab3@21298>   CMP.w #$2C,D0
00031020 <AmiBlitz3.ab3@21299>    BEQ.w JL_0_C9A6
00031024 <AmiBlitz3.ab3@21302>    BSR.w JL_0_C210
00031026 <AmiBlitz3.ab3@21303>   ADDQ.w #1,D1
0003102C <AmiBlitz3.ab3@21304>    JSR getchar
0003102E <AmiBlitz3.ab3@21305>   TST.w D0
00031032 <AmiBlitz3.ab3@21306>    BEQ.w JL_0_C9A6
00031036 <AmiBlitz3.ab3@21307>   CMP.w #$2C,D0
0003103A <AmiBlitz3.ab3@21308>    BEQ.w JL_0_C9A6
0003103E <AmiBlitz3.ab3@21309> BRA.w JL_0_C96C
00031040 <AmiBlitz3.ab3@21313>    MOVEQ #0,d0
00031042 <AmiBlitz3.ab3@21314>    MOVE.b (a5)+,d0
00031046 <AmiBlitz3.ab3@21315>    BEQ.w notqerr2
0003104A <AmiBlitz3.ab3@21316>   CMP.w #$22,D0
0003104E <AmiBlitz3.ab3@21317>    BEQ.w JL_0_C9A2
00031052 <AmiBlitz3.ab3@21318>    BSR.w JL_0_C210
00031054 <AmiBlitz3.ab3@21319>   ADDQ.w #1,D1
00031058 <AmiBlitz3.ab3@21320> BRA.w JL_0_C988
0003105E <AmiBlitz3.ab3@21321> notqerr2 JMP notqerr
00031064 <AmiBlitz3.ab3@21323>   CLR.w instringon
0003106A <AmiBlitz3.ab3@21324>   JSR get1bytemain
0003106C <AmiBlitz3.ab3@21327>   MOVEA.l (A7)+,A0
00031072 <AmiBlitz3.ab3@21328>   MOVE.w dontwrite,D2
00031076 <AmiBlitz3.ab3@21329>    BNE.w JL_0_C9B4
00031078 <AmiBlitz3.ab3@21330>   MOVE.l D1,(A0)
0003107E <AmiBlitz3.ab3@21333>   ADDQ.l #1,data2
00031086 <AmiBlitz3.ab3@21334>   BCLR #$0,data2+3
0003108A <AmiBlitz3.ab3@21335>   CMP.w #$2C,D0
0003108E <AmiBlitz3.ab3@21336>    BEQ.w JL_0_C944
00031090 <AmiBlitz3.ab3@21337> RTS
00031096 <AmiBlitz3.ab3@21341> JMP vardeclareerr
0003109C <AmiBlitz3.ab3@21344>   MOVE.w proceduremode,D1                                  ;doshared
000310A0 <AmiBlitz3.ab3@21346>   BNE.w 'l1
000310A2 <AmiBlitz3.ab3@21347>   MOVE.w D1,-(A7)
000310A8 <AmiBlitz3.ab3@21348>   CLR.w proceduremode
000310AE <AmiBlitz3.ab3@21351>   LEA varbase,a2
000310B2 <AmiBlitz3.ab3@21352>   BSR.w getparameter
000310B4 <AmiBlitz3.ab3@21353>   MOVE.w d2,-(a7)
000310BA <AmiBlitz3.ab3@21354>    JSR findvariable
000310BE <AmiBlitz3.ab3@21355>    BEQ 'checkdim
000310C4 <AmiBlitz3.ab3@21356>    LEA sharebase,a2
000310C6 <AmiBlitz3.ab3@21357>    MOVEQ #$f+4,d7
000310CA <AmiBlitz3.ab3@21358>    BSR.w findlab                                         ;find var
000310CE <AmiBlitz3.ab3@21359>    BEQ.b dupsherr
000310D2 <AmiBlitz3.ab3@21360>    BSR addlabel
000310D6 <AmiBlitz3.ab3@21361>    CMP.b #".",d0
000310DA <AmiBlitz3.ab3@21362>    BNE JUMP_vardeclareerr
000310DC <AmiBlitz3.ab3@21363>    MOVE.l a2,a3
000310E2 <AmiBlitz3.ab3@21364>    JSR JL_0_8EB8b
000310E4 <AmiBlitz3.ab3@21395>   MOVE.w (a7)+,d2
000310E8 <AmiBlitz3.ab3@21396>    CMP.b #",",d0
000310EC <AmiBlitz3.ab3@21397>    BNE 'ret
000310F2 <AmiBlitz3.ab3@21398>    JSR get1bytemain
000310F6 <AmiBlitz3.ab3@21399> BRA 'again2
000310FC <AmiBlitz3.ab3@21402>   MOVE.w (A7)+,proceduremode
000310FE <AmiBlitz3.ab3@21403> RTS
00031104 <AmiBlitz3.ab3@21410>    CMP.w #2,6(a2)
00031108 <AmiBlitz3.ab3@21411>    BEQ 'do
0003110E <AmiBlitz3.ab3@21412>    CMP.w #$102,6(a2)
00031112 <AmiBlitz3.ab3@21413>    BEQ 'do
00031118 <AmiBlitz3.ab3@21414> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0003111E <AmiBlitz3.ab3@21417>   LEA varbase,a0
00031120 <AmiBlitz3.ab3@21420>   MOVE.l (A0),D0                                           ;find label
00031124 <AmiBlitz3.ab3@21421>    BEQ.b 'z1
00031126 <AmiBlitz3.ab3@21422>    CMP.l d0,a2
0003112A <AmiBlitz3.ab3@21423>    BEQ 'z1
0003112C <AmiBlitz3.ab3@21424>    MOVE.l d0,a0
00031130 <AmiBlitz3.ab3@21425> BRA 'm1
00031132 <AmiBlitz3.ab3@21428>   MOVE.l (a2),d1
00031134 <AmiBlitz3.ab3@21429>     MOVE.l d1,(a0)
00031136 <AmiBlitz3.ab3@21430>     CLR.l (a2)
0003113C <AmiBlitz3.ab3@21431>     LEA sharebase,a0
0003113E <AmiBlitz3.ab3@21432>     MOVE.l (a0),(a2)
00031140 <AmiBlitz3.ab3@21433>     MOVE.l a2,(a0)
00031146 <AmiBlitz3.ab3@21434>     JSR get1bytemain
0003114C <AmiBlitz3.ab3@21435>     JSR get1bytemain
00031150 <AmiBlitz3.ab3@21436> BRA 'domore
00031158 <AmiBlitz3.ab3@21439>   MOVE.b #1,nowdeclare
0003115A <AmiBlitz3.ab3@21440>   MOVE.w D1,-(A7)
00031160 <AmiBlitz3.ab3@21441>   CLR.w proceduremode
00031164 <AmiBlitz3.ab3@21444>    BSR.w getparameter
00031166 <AmiBlitz3.ab3@21445>   MOVE.w D2,-(A7)
0003116C <AmiBlitz3.ab3@21446>   LEA firstglob,A2
00031170 <AmiBlitz3.ab3@21447>    BSR.w findvariable2
00031174 <AmiBlitz3.ab3@21448>    BNE.b JL_0_CA06
0003117A <AmiBlitz3.ab3@21451>   MOVE.b flagmask+1,D1
0003117E <AmiBlitz3.ab3@21452>   MOVE.b $7(A2),D3
00031180 <AmiBlitz3.ab3@21453>   EOR.b D3,D1
00031184 <AmiBlitz3.ab3@21454>    BEQ.w dupsherr
00031188 <AmiBlitz3.ab3@21455>    BSR.w findlab
0003118C <AmiBlitz3.ab3@21456>    BEQ.b JL_0_C9F0
00031190 <AmiBlitz3.ab3@21459>    BSR.w addlabel
00031192 <AmiBlitz3.ab3@21460>   MOVE.w (A7)+,D2
00031194 <AmiBlitz3.ab3@21461>   MOVE.l A2,-(A7)
00031198 <AmiBlitz3.ab3@21462>    BSR.w JL_0_8E3C
0003119A <AmiBlitz3.ab3@21463>   MOVEA.l (A7)+,A2
0003119C <AmiBlitz3.ab3@21464>   MOVEQ.l #$04,D1
0003119E <AmiBlitz3.ab3@21465>   ADDQ.w #4,A2
000311A0 <AmiBlitz3.ab3@21466>   ADDQ.w #4,A3
000311A2 <AmiBlitz3.ab3@21469>     MOVE.w (A3)+,(A2)+
000311A6 <AmiBlitz3.ab3@21470>   DBF D1,JL_0_CA1A
000311AE <AmiBlitz3.ab3@21472>   BTST #$1,flagmask+1
000311B2 <AmiBlitz3.ab3@21473>    BEQ.w JL_0_CA3C
000311B8 <AmiBlitz3.ab3@21474>    JSR get1bytemain
000311BC <AmiBlitz3.ab3@21475>   CMP.w #$29,D0
000311C0 <AmiBlitz3.ab3@21476>    BNE.w syntaxerrc
000311C6 <AmiBlitz3.ab3@21477>    JSR get1bytemain
000311CA <AmiBlitz3.ab3@21480>    CMP.w #$2C,D0
000311CE <AmiBlitz3.ab3@21481>    BNE.w JL_0_CA4C
000311D4 <AmiBlitz3.ab3@21482>    JSR get1bytemain
000311D8 <AmiBlitz3.ab3@21483> BRA.w JL_0_C9DE
000311DE <AmiBlitz3.ab3@21486>   MOVE.w (A7)+,proceduremode
000311E0 <AmiBlitz3.ab3@21487> RTS
000311E6 <AmiBlitz3.ab3@21489> syntaxerrc JMP syntaxerr
000311EA <AmiBlitz3.ab3@21492>    BSR.w JL_0_C05C
000311F0 <AmiBlitz3.ab3@21493>    JSR check_incdir                                        ; ergebnis in d2
000311F6 <AmiBlitz3.ab3@21495>    LEA ptr_parameterstore,a1
000311F8 <AmiBlitz3.ab3@21496>    MOVE.l d2,-(a7)
000311FE <AmiBlitz3.ab3@21497>    LEA includetemp,a0                                      ; filename in includetemp packen
00031200 <AmiBlitz3.ab3@21500>      MOVE.b (a1)+,(a0)+
00031204 <AmiBlitz3.ab3@21501>    BNE 'l4
0003120A <AmiBlitz3.ab3@21503>    LEA ptr_parameterstore,a1
0003120C <AmiBlitz3.ab3@21504>    MOVE.l a1,a0
0003120E <AmiBlitz3.ab3@21507>     TST.b (a0)+
00031212 <AmiBlitz3.ab3@21508>    BNE 'l1
00031214 <AmiBlitz3.ab3@21511>      MOVE.b -(a0),d0
00031218 <AmiBlitz3.ab3@21512>      CMP.b #":",d0
0003121C <AmiBlitz3.ab3@21513>       BEQ 'out
00031220 <AmiBlitz3.ab3@21514>      CMP.b #"/",d0
00031224 <AmiBlitz3.ab3@21515>       BEQ 'out
00031226 <AmiBlitz3.ab3@21516>      CMP.l a1,a0
0003122A <AmiBlitz3.ab3@21517>       BEQ 'out2
0003122E <AmiBlitz3.ab3@21518> BRA 'l2
00031230 <AmiBlitz3.ab3@21521>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031232 <AmiBlitz3.ab3@21524>    MOVEQ.l #-$01,D2
00031234 <AmiBlitz3.ab3@21527>      ADDQ.w #1,D2
00031236 <AmiBlitz3.ab3@21528>      MOVE.b (a0)+,(a1)+
0003123A <AmiBlitz3.ab3@21529>    BNE 'l3
0003123C <AmiBlitz3.ab3@21530>    CLR.b (a1)+
00031242 <AmiBlitz3.ab3@21532>    LEA ptr_parameterstore,a1
00031246 <AmiBlitz3.ab3@21533>    BSR.w findxinc                                         ;find include
0003124A <AmiBlitz3.ab3@21534>     BEQ.w 'outb
0003124C <AmiBlitz3.ab3@21536>    MOVE.w D2,-(A7)
00031250 <AmiBlitz3.ab3@21537>    BSR.w addlabel
00031252 <AmiBlitz3.ab3@21538>    MOVE.w (A7)+,D2
00031258 <AmiBlitz3.ab3@21540>    LEA ptr_parameterstore,a1
0003125E <AmiBlitz3.ab3@21541>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031260 <AmiBlitz3.ab3@21544>     MOVE.b (a0)+,(a1)+
00031264 <AmiBlitz3.ab3@21545>    BNE 'l4b
00031266 <AmiBlitz3.ab3@21547>    MOVE.l (a7)+,d2
0003126C <AmiBlitz3.ab3@21548>    LEA ptr_parameterstore,a1
00031270 <AmiBlitz3.ab3@21549> BRA.w JL_0_CB18
00031276 <AmiBlitz3.ab3@21552>    LEA ptr_parameterstore,a1
0003127C <AmiBlitz3.ab3@21553>    LEA includetemp,a0
0003127E <AmiBlitz3.ab3@21556>     MOVE.b (a0)+,(a1)+
00031282 <AmiBlitz3.ab3@21557>    BNE 'l4b2
00031284 <AmiBlitz3.ab3@21559>    MOVE.l (a7)+,d2
0003128A <AmiBlitz3.ab3@21560>    LEA ptr_parameterstore,a1
0003128C <AmiBlitz3.ab3@21563> RTS
00031290 <AmiBlitz3.ab3@21567>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
00031296 <AmiBlitz3.ab3@21569>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
0003129C <AmiBlitz3.ab3@21571>   MOVEA.l _dosbase,A6
0003129E <AmiBlitz3.ab3@21572>   MOVE.l D0,D7                                                 ; store Lockpointer
000312A2 <AmiBlitz3.ab3@21573>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
000312A4 <AmiBlitz3.ab3@21574>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
000312AA <AmiBlitz3.ab3@21575>   MOVE.l ptr_macrobuffer_begin,D2
000312AE <AmiBlitz3.ab3@21576>    JSR _Examine(A6)
000312B4 <AmiBlitz3.ab3@21577>   MOVEA.l ptr_macrobuffer_begin,A0
000312B8 <AmiBlitz3.ab3@21578>   MOVE.l $4(A0),D0
000312BC <AmiBlitz3.ab3@21579>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
000312C0 <AmiBlitz3.ab3@21580>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
000312C2 <AmiBlitz3.ab3@21581>   MOVE.l D7,D1                                                 ; begin unlock the file
000312C6 <AmiBlitz3.ab3@21582>    JSR _UnLock(A6)
000312CC <AmiBlitz3.ab3@21584>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
000312D2 <AmiBlitz3.ab3@21585>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
000312D6 <AmiBlitz3.ab3@21586>    JSR _Open(A6)
000312D8 <AmiBlitz3.ab3@21587>   MOVE.l D0,D7
000312DC <AmiBlitz3.ab3@21588>    BEQ.w error_cant_open_include
000312E2 <AmiBlitz3.ab3@21589>   MOVE.l destpointer,D0
000312E4 <AmiBlitz3.ab3@21590>   ADD.l D3,D0
000312EA <AmiBlitz3.ab3@21591>   CMP.l destbufferend,D0
000312EE <AmiBlitz3.ab3@21592>    BHI.w JL_0_CAF6
000312F4 <AmiBlitz3.ab3@21593>   MOVE.l destpointer,D2
000312F6 <AmiBlitz3.ab3@21594>   MOVE.l D7,D1
000312FA <AmiBlitz3.ab3@21595>    JSR _Read(A6)
00031300 <AmiBlitz3.ab3@21596>   CMP.l #$FFFFFFFF,D0
00031304 <AmiBlitz3.ab3@21597>    BEQ.w error_reading_file
0003130A <AmiBlitz3.ab3@21598>   ADD.l D0,destpointer
0003130E <AmiBlitz3.ab3@21599> BRA.w JL_0_CB04
00031316 <AmiBlitz3.ab3@21602>   MOVE.w #$FFFF,dontwrite
0003131C <AmiBlitz3.ab3@21603>   MOVE.l D0,destpointer
0003131E <AmiBlitz3.ab3@21606>   MOVE.l D7,D1
00031322 <AmiBlitz3.ab3@21607> JMP _Close(A6)
00031328 <AmiBlitz3.ab3@21611> JMP illdirerr
0003132E <AmiBlitz3.ab3@21614>   TST.w dirmode                                            ;include  open
00031332 <AmiBlitz3.ab3@21615>    BNE.w JUMP_illdirerr
00031336 <AmiBlitz3.ab3@21616>   BSR.w JL_0_C05C
0003133C <AmiBlitz3.ab3@21617>   JSR check_incdir
00031340 <AmiBlitz3.ab3@21620>   BSR.w findconstant
00031344 <AmiBlitz3.ab3@21621>    BEQ.w alincerr
0003134A <AmiBlitz3.ab3@21623>   LEA constantbase,A2
0003134E <AmiBlitz3.ab3@21624>   BSR.w addhere2
00031352 <AmiBlitz3.ab3@21625>   CLR.w $C(A2)
00031356 <AmiBlitz3.ab3@21626>   CLR.l $4(A2)
0003135C <AmiBlitz3.ab3@21628>   MOVE.l #ptr_parameterstore,D1
0003135E <AmiBlitz3.ab3@21629>   MOVE.l d1,a0
00031364 <AmiBlitz3.ab3@21630>   LEA includetemp2,a1
00031366 <AmiBlitz3.ab3@21633>     MOVE.b (a0)+,(a1)+
0003136A <AmiBlitz3.ab3@21634>   BNE 'l1
00031370 <AmiBlitz3.ab3@21635>   JSR save_includename
0003137A <AmiBlitz3.ab3@21636>   MOVE.l #0,include_process
00031382 <AmiBlitz3.ab3@21638>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031386 <AmiBlitz3.ab3@21639>   BEQ 'ok
0003138E <AmiBlitz3.ab3@21640>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031392 <AmiBlitz3.ab3@21641>   BEQ 'ok_tokenize
0003139A <AmiBlitz3.ab3@21642>   CMP.l #$61623200,-4(a0)                                  ;.ab2
0003139E <AmiBlitz3.ab3@21643>   BEQ 'ok_tokenize
000313A6 <AmiBlitz3.ab3@21644>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
000313AA <AmiBlitz3.ab3@21645>   BEQ 'ok
000313B0 <AmiBlitz3.ab3@21646> JMP errortoken                                             ;can only include
000313BA <AmiBlitz3.ab3@21649>    MOVE.l #-1,include_process                              ; must tokenize the include
000313C0 <AmiBlitz3.ab3@21652>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000313C6 <AmiBlitz3.ab3@21653>   MOVEA.l _dosbase,A6
000313CA <AmiBlitz3.ab3@21654>   JSR _Open(A6)
000313CE <AmiBlitz3.ab3@21655>   MOVE.l D0,$8(A2)
000313D2 <AmiBlitz3.ab3@21656>   BEQ.w error_cant_open_include
000313D8 <AmiBlitz3.ab3@21657>   CLR.l includeline
000313DC <AmiBlitz3.ab3@21658>   MOVE.l 8(a2),d1
000313DE <AmiBlitz3.ab3@21659>   MOVE.l d3,-(a7)
000313E0 <AmiBlitz3.ab3@21660>   MOVEQ #0,d2
000313E2 <AmiBlitz3.ab3@21661>   MOVEQ #1,d3
000313E6 <AmiBlitz3.ab3@21662>   JSR _Seek(a6)                                            ; -66
000313EA <AmiBlitz3.ab3@21663>   MOVE.l 8(a2),d1
000313EC <AmiBlitz3.ab3@21664>   MOVEQ #0,d2
000313EE <AmiBlitz3.ab3@21665>   MOVEQ #-1,d3
000313F2 <AmiBlitz3.ab3@21666>   JSR _Seek(a6)                                            ; -66
000313F4 <AmiBlitz3.ab3@21667>   MOVE.l (a7)+,d3
000313F6 <AmiBlitz3.ab3@21668>   ADDQ.l #4,d0
000313FC <AmiBlitz3.ab3@21670>   MOVE.l #$10000,D1
00031402 <AmiBlitz3.ab3@21671>   MOVEA.l _execbase,A6
00031406 <AmiBlitz3.ab3@21674>   JSR _AllocVec(a6)
0003140A <AmiBlitz3.ab3@21676>   MOVE.l D0,$4(A2)
0003140E <AmiBlitz3.ab3@21677>   MOVE.l D0,$E(A2)
00031410 <AmiBlitz3.ab3@21678>   MOVEA.l D0,A5
00031416 <AmiBlitz3.ab3@21685>   ADDQ.w #1,ininclude                                      ;enter include
0003141C <AmiBlitz3.ab3@21688>   LEA _include,a0
00031420 <AmiBlitz3.ab3@21689>   MOVEM.l a0-a6/d0-d7,-(a7)
00031426 <AmiBlitz3.ab3@21690>   LEA ptr_parameterstore,a1
00031428 <AmiBlitz3.ab3@21693>     MOVE.b (a0)+,(a1)+
0003142C <AmiBlitz3.ab3@21694>   BNE 'l1b
0003142E <AmiBlitz3.ab3@21696>   MOVEQ #9,d2
00031434 <AmiBlitz3.ab3@21697>   JSR findlabel2
00031438 <AmiBlitz3.ab3@21698>   BNE 'd
00031440 <AmiBlitz3.ab3@21699>   MOVE.l #1,8(a2)
00031444 <AmiBlitz3.ab3@21700>   MOVEM.l (a7)+,a0-a6/d0-d7
00031448 <AmiBlitz3.ab3@21701> BRA 'd2
0003144E <AmiBlitz3.ab3@21704>   JSR addlabelhash
00031456 <AmiBlitz3.ab3@21705>   MOVE.l #$1,$4(A2)
0003145E <AmiBlitz3.ab3@21706>   MOVE.l #1,8(a2)
00031462 <AmiBlitz3.ab3@21707>   MOVEM.l (a7)+,a0-a6/d0-d7
00031468 <AmiBlitz3.ab3@21710>   LEA inctab,a0
0003146A <AmiBlitz3.ab3@21711>   MOVEQ #0,d1
00031470 <AmiBlitz3.ab3@21712>   MOVE.w ininclude,d1
00031474 <AmiBlitz3.ab3@21713>   CLR.l $0(a0,d1*4)
0003147A <AmiBlitz3.ab3@21714>   MOVEA.l passstack,A7
00031480 <AmiBlitz3.ab3@21715> JMP AJL_0_413A
00031486 <AmiBlitz3.ab3@21717> JUMP_dupmacerr JMP dupmacerr
00031488 <AmiBlitz3.ab3@21719> coolnest:   Ds.w 1
0003148C <AmiBlitz3.ab3@21720> macline:    Ds.l 1
00031496 <AmiBlitz3.ab3@21724>   MOVE.l linenumat,macline
0003149A <AmiBlitz3.ab3@21725>    BSR.w makename2
0003149E <AmiBlitz3.ab3@21726>    BEQ.w JUMP_syntaxerr
000314A4 <AmiBlitz3.ab3@21728>    CLR.b thenmode
000314AE <AmiBlitz3.ab3@21730>    MOVE.w oldqflag,instringon
000314B4 <AmiBlitz3.ab3@21731>   MOVEA.l lastsourcepos,A5
000314B8 <AmiBlitz3.ab3@21732>    BSR.w findmac
000314BC <AmiBlitz3.ab3@21733>    BEQ.w JUMP_dupmacerr
000314C0 <AmiBlitz3.ab3@21734>    BSR.w addlabel
000314C4 <AmiBlitz3.ab3@21735>   CLR.w $A(A2)
000314CA <AmiBlitz3.ab3@21736>   MOVEA.l ptr_macrobuffer_begin,A0
000314CC <AmiBlitz3.ab3@21737>   MOVEQ.l #$00,D2
000314D2 <AmiBlitz3.ab3@21738>   CLR.w coolnest
000314D4 <AmiBlitz3.ab3@21741>   MOVE.b (a5),d0
000314D8 <AmiBlitz3.ab3@21742>      BEQ 'l3
000314DC <AmiBlitz3.ab3@21743>      CMP.b #" ",d0
000314E0 <AmiBlitz3.ab3@21744>       BNE 'l2                                              ;space macro
000314E2 <AmiBlitz3.ab3@21745>       ADDQ.l #1,a5
000314E6 <AmiBlitz3.ab3@21746> BRA 'l1
000314EA <AmiBlitz3.ab3@21749>    CMP.b #";",d0
000314EE <AmiBlitz3.ab3@21750>       BNE 'l3
000314F0 <AmiBlitz3.ab3@21753>    MOVE.b (a5),d0
000314F4 <AmiBlitz3.ab3@21754>       BEQ 'l5
000314F8 <AmiBlitz3.ab3@21755>       BSR.w JL_0_CC98                                      ;add comment
000314FA <AmiBlitz3.ab3@21756>       ADDQ.l #1,a5
000314FE <AmiBlitz3.ab3@21757> BRA 'l4
00031502 <AmiBlitz3.ab3@21760>    MOVE.b #":",d0
00031506 <AmiBlitz3.ab3@21761>       BSR.w JL_0_CC98
0003150A <AmiBlitz3.ab3@21762>       MOVE.b #"@",d0
0003150E <AmiBlitz3.ab3@21763>       BSR.w JL_0_CC98
00031516 <AmiBlitz3.ab3@21766>    MOVE.b #0,temp
0003151E <AmiBlitz3.ab3@21767>       MOVE.b #0,thenmode
00031524 <AmiBlitz3.ab3@21770>   JSR getcharb
00031526 <AmiBlitz3.ab3@21771>   TST.w D0
0003152A <AmiBlitz3.ab3@21772>    BNE.w JL_0_CBDE
0003152E <AmiBlitz3.ab3@21773>   MOVEM.l D2/A0/A2,-(A7)
00031534 <AmiBlitz3.ab3@21774>   CMP.w #"@@",-3(a5)
00031538 <AmiBlitz3.ab3@21775>   BNE 'l2a
0003153E <AmiBlitz3.ab3@21776>   JSR nextline
00031542 <AmiBlitz3.ab3@21777>   BEQ.w JUMP_macenderr
00031546 <AmiBlitz3.ab3@21778>   MOVEM.l (A7)+,D2/A0/A2
0003154A <AmiBlitz3.ab3@21779> BRA.w JL_0_CBB6
00031550 <AmiBlitz3.ab3@21782>    JSR nextline
00031554 <AmiBlitz3.ab3@21783>    BEQ.w JUMP_macenderr
00031558 <AmiBlitz3.ab3@21784>   MOVEM.l (A7)+,D2/A0/A2
0003155A <AmiBlitz3.ab3@21785>   TST.w D2
0003155E <AmiBlitz3.ab3@21786>    BEQ.w JL_0_CBB6
00031560 <AmiBlitz3.ab3@21789>   MOVE.b (a5),d0
00031564 <AmiBlitz3.ab3@21790>       CMP.b #" ",d0
00031568 <AmiBlitz3.ab3@21791>       BNE 'l1
0003156A <AmiBlitz3.ab3@21792>       ADDQ.w #1,a5
0003156E <AmiBlitz3.ab3@21793> BRA 'l2
00031574 <AmiBlitz3.ab3@21796>   TST.b thenmode
00031578 <AmiBlitz3.ab3@21797>      BEQ 'l3
0003157A <AmiBlitz3.ab3@21798>      MOVEQ #":",d0
0003157E <AmiBlitz3.ab3@21799>      BSR.w JL_0_CC98
00031582 <AmiBlitz3.ab3@21800>      MOVE.w #-$7FFE,D0                                     ;write end if
00031586 <AmiBlitz3.ab3@21801>      BSR macputw
0003158A <AmiBlitz3.ab3@21802>      MOVE.w #$800b,d0
0003158E <AmiBlitz3.ab3@21803>      BSR.w macputw
00031594 <AmiBlitz3.ab3@21804>      CLR.b thenmode
00031596 <AmiBlitz3.ab3@21807>    MOVEQ.l #$3A,D0
0003159E <AmiBlitz3.ab3@21808>      MOVE.b #1,temp
000315A2 <AmiBlitz3.ab3@21810> BRA.w JL_0_CC2A
000315A6 <AmiBlitz3.ab3@21814>   BPL.w JL_0_CC2A
000315AA <AmiBlitz3.ab3@21815>   CMP.w #-$7FF3,D0                                         ;macro ?
000315AE <AmiBlitz3.ab3@21816>    BNE.w JL_0_CBF4
000315B4 <AmiBlitz3.ab3@21817>   ADDQ.w #1,coolnest
000315B8 <AmiBlitz3.ab3@21818> BRA.w JL_0_CC22
000315BE <AmiBlitz3.ab3@21820> JUMP_macnesterr JMP macnesterr
000315C2 <AmiBlitz3.ab3@21823>   CMP.w #$80d7,d0                                          ;object ?
000315C6 <AmiBlitz3.ab3@21824>     BNE 'l1x
000315CC <AmiBlitz3.ab3@21825>     TST.b objectcount
000315D0 <AmiBlitz3.ab3@21826>     BNE JUMP_macnesterr
000315D4 <AmiBlitz3.ab3@21829>   CMP.w #$8021,d0
000315D8 <AmiBlitz3.ab3@21830>     BNE 'nothen
000315E0 <AmiBlitz3.ab3@21831>     MOVE.b #1,thenmode
000315E6 <AmiBlitz3.ab3@21834>   TST.b thenmode
000315EA <AmiBlitz3.ab3@21835>         BEQ 'l1
000315EE <AmiBlitz3.ab3@21836>    CMP.w #$8002,d0                                         ;end if
000315F2 <AmiBlitz3.ab3@21837>    BNE 'l1
000315F6 <AmiBlitz3.ab3@21838>    MOVEM.l d0/a5,-(a7)
000315FC <AmiBlitz3.ab3@21839>    JSR get1bytemain
000315FE <AmiBlitz3.ab3@21840>    MOVE.w d0,d1
00031602 <AmiBlitz3.ab3@21841>    MOVEM.l (a7)+,a5/d0
00031606 <AmiBlitz3.ab3@21842>    CMP.w #$800b,d1
0003160A <AmiBlitz3.ab3@21843>    BNE 'l1
00031610 <AmiBlitz3.ab3@21844>    CLR.b thenmode
00031614 <AmiBlitz3.ab3@21847>    CMP.w #-$7FFE,D0                                        ;end ?
00031618 <AmiBlitz3.ab3@21848>    BNE.w JL_0_CC22
0003161A <AmiBlitz3.ab3@21849>    MOVE.l a5,-(a7)
00031620 <AmiBlitz3.ab3@21850>    JSR get1bytemain
00031622 <AmiBlitz3.ab3@21851>    MOVE.l (a7)+,a5
00031624 <AmiBlitz3.ab3@21852>    TST.w d0
00031628 <AmiBlitz3.ab3@21853>    BEQ 'doend
0003162C <AmiBlitz3.ab3@21854>    CMP.w #":",d0
00031630 <AmiBlitz3.ab3@21855>    BEQ 'doend
00031634 <AmiBlitz3.ab3@21856>    CMP.w #";",d0
00031638 <AmiBlitz3.ab3@21857>    BEQ 'doend
0003163A <AmiBlitz3.ab3@21858>    MOVE.l a5,-(a7)
00031640 <AmiBlitz3.ab3@21859>    JSR get1bytemain
00031644 <AmiBlitz3.ab3@21860>    MOVE.l -1(a5),d0
00031646 <AmiBlitz3.ab3@21861>    MOVE.l (a7)+,a5
0003164C <AmiBlitz3.ab3@21862>    CMP.l #"noa7",d0
00031650 <AmiBlitz3.ab3@21863>    BEQ 'doend
00031654 <AmiBlitz3.ab3@21864> BRA 'morechar
00031658 <AmiBlitz3.ab3@21867>   MOVE.w #$8002,D0
0003165C <AmiBlitz3.ab3@21868>    BSR.w macputw
00031660 <AmiBlitz3.ab3@21869> BRA JL_0_CBB6
00031666 <AmiBlitz3.ab3@21872>   JSR get1bytemain
0003166A <AmiBlitz3.ab3@21873>    CMP.w #-$7FF3,D0                                        ;end macro
0003166E <AmiBlitz3.ab3@21874>    BEQ.w 'lo1
00031672 <AmiBlitz3.ab3@21875>   CMP.w #$80d7,d0                                          ;end object
00031676 <AmiBlitz3.ab3@21876>   BNE JL_0_CC12
0003167C <AmiBlitz3.ab3@21877>   SUBQ.b #1,objectcount
00031682 <AmiBlitz3.ab3@21878>   TST.b developobject
00031686 <AmiBlitz3.ab3@21879>   BEQ 'lo1
0003168A <AmiBlitz3.ab3@21880>   BSR skiprest
0003168C <AmiBlitz3.ab3@21881> RTS
00031692 <AmiBlitz3.ab3@21884>   SUBQ.w #1,coolnest
00031696 <AmiBlitz3.ab3@21885>    BMI.w JL_0_CC32
00031698 <AmiBlitz3.ab3@21888>   MOVE.w D0,-(A7)
0003169C <AmiBlitz3.ab3@21889>   MOVE.w #$8002,D0
000316A0 <AmiBlitz3.ab3@21890>    BSR.w macputw
000316A2 <AmiBlitz3.ab3@21891>   MOVE.w (A7)+,D0
000316A6 <AmiBlitz3.ab3@21892> BRA.w JL_0_CC22
000316AA <AmiBlitz3.ab3@21895>   BSR.w macputw
000316AE <AmiBlitz3.ab3@21896> BRA.w JL_0_CBB6
000316B4 <AmiBlitz3.ab3@21898> JUMP_macenderr JMP macenderr
000316BA <AmiBlitz3.ab3@21901>     CMP.w #"@@",-1(a5)                                     ;merge lines
000316BE <AmiBlitz3.ab3@21902>     BNE 'no
000316C2 <AmiBlitz3.ab3@21903>      MOVEM.l D2/A0/A2,-(A7)
000316C8 <AmiBlitz3.ab3@21904>    JSR nextline
000316CC <AmiBlitz3.ab3@21905>    BEQ.w JUMP_macenderr
000316D0 <AmiBlitz3.ab3@21906>   MOVEM.l (A7)+,D2/A0/A2
000316D2 <AmiBlitz3.ab3@21907>     TST.w D2
000316D6 <AmiBlitz3.ab3@21908>    BEQ.w JL_0_CBB6
000316DA <AmiBlitz3.ab3@21909> BRA JL_0_CBB6
000316DE <AmiBlitz3.ab3@21913>   BSR.w JL_0_CC98
000316E2 <AmiBlitz3.ab3@21914> BRA.w JL_0_CBB6
000316E4 <AmiBlitz3.ab3@21917>   ADDQ.w #4,A7
000316E6 <AmiBlitz3.ab3@21918>   MOVE.l A0,D0
000316EC <AmiBlitz3.ab3@21919>   SUB.l ptr_macrobuffer_begin,D0
000316F0 <AmiBlitz3.ab3@21922>    BEQ.w JL_0_CC5E
000316F4 <AmiBlitz3.ab3@21923>   CMPI.b #":",-(A0)
000316F8 <AmiBlitz3.ab3@21924>    BNE.w JL_0_CC5E
000316FC <AmiBlitz3.ab3@21925>   CMP.w #$1,D0
00031700 <AmiBlitz3.ab3@21926>    BEQ.w JL_0_CC58
00031704 <AmiBlitz3.ab3@21927>   TST.b -$1(A0)
00031708 <AmiBlitz3.ab3@21928>    BMI.w JL_0_CC5E
0003170A <AmiBlitz3.ab3@21931>   SUBQ.w #1,D0
0003170E <AmiBlitz3.ab3@21932> BRA.w JL_0_CC3C
00031712 <AmiBlitz3.ab3@21935>   MOVE.w D0,$8(A2)
00031716 <AmiBlitz3.ab3@21936>    BEQ.w JL_0_CC8E
00031718 <AmiBlitz3.ab3@21937>   MOVEQ.l #$01,D1
0003171E <AmiBlitz3.ab3@21938>   MOVEA.l _execbase,A6
00031724 <AmiBlitz3.ab3@21939>   MOVE.l mempool,a0
00031728 <AmiBlitz3.ab3@21940>   JSR _AllocPooled(a6)
0003172A <AmiBlitz3.ab3@21942>   MOVEA.l D0,A0
0003172E <AmiBlitz3.ab3@21943>   MOVE.l A0,$4(A2)
00031732 <AmiBlitz3.ab3@21944>   MOVE.w $8(A2),D1
00031736 <AmiBlitz3.ab3@21945>    BEQ.w JL_0_CC8E
00031738 <AmiBlitz3.ab3@21946>   SUBQ.w #1,D1
0003173E <AmiBlitz3.ab3@21947>   MOVEA.l ptr_macrobuffer_begin,A1
00031740 <AmiBlitz3.ab3@21950>     MOVE.b (A1)+,(A0)+
00031744 <AmiBlitz3.ab3@21951>   DBF D1,JL_0_CC88
0003174A <AmiBlitz3.ab3@21954> JMP get1bytemain
0003174C <AmiBlitz3.ab3@21958>   MOVE.w D0,D1
0003174E <AmiBlitz3.ab3@21959>   LSR.w #8,D1
00031750 <AmiBlitz3.ab3@21960>   MOVE.b D1,(A0)+
00031752 <AmiBlitz3.ab3@21963>   MOVEQ.l #-$01,D2
00031754 <AmiBlitz3.ab3@21964>   MOVE.b D0,(A0)+
0003175A <AmiBlitz3.ab3@21965>   CMPA.l ptr_macrobuffer_end,A0
0003175E <AmiBlitz3.ab3@21966>    BCC.w macbigerr2
00031760 <AmiBlitz3.ab3@21967> RTS
00031766 <AmiBlitz3.ab3@21968> macbigerr2 JMP macbigerr
00031768 <AmiBlitz3.ab3@21971>   MOVE.l d0,-(a7)
0003176A <AmiBlitz3.ab3@21972>   MOVEQ #0,d0
00031770 <AmiBlitz3.ab3@21973>   CLR.b skiptoggle
00031772 <AmiBlitz3.ab3@21976>     MOVE.b (a5),d0
00031776 <AmiBlitz3.ab3@21977>     BEQ 'l3
0003177A <AmiBlitz3.ab3@21978>     CMP.b #";",d0
0003177E <AmiBlitz3.ab3@21979>     BNE 'l2
00031786 <AmiBlitz3.ab3@21980>     MOVE.b #1,skiptoggle
0003178C <AmiBlitz3.ab3@21983>     TST.b skiptoggle
00031790 <AmiBlitz3.ab3@21984>     BNE 'l4
00031794 <AmiBlitz3.ab3@21985>     CMP.b #":",d0
00031798 <AmiBlitz3.ab3@21986>     BEQ 'l3
0003179A <AmiBlitz3.ab3@21989>     ADDQ #1,a5
0003179E <AmiBlitz3.ab3@21990> BRA 'loop
000317A4 <AmiBlitz3.ab3@21993>   MOVE.w d0,lastchar
000317A6 <AmiBlitz3.ab3@21994>   MOVE.l (a7)+,d0
000317A8 <AmiBlitz3.ab3@21995> RTS
000317AC <AmiBlitz3.ab3@21999>   BSR.w ifchar
000317B0 <AmiBlitz3.ab3@22000>    BNE.w JUMP_syntaxerr
000317B2 <AmiBlitz3.ab3@22001>   MOVE.w D0,D1
000317B8 <AmiBlitz3.ab3@22002>   JSR get1bytemain
000317BC <AmiBlitz3.ab3@22003>   BSR.w ifchar
000317C0 <AmiBlitz3.ab3@22004>    BNE.w JL_0_CCDA
000317C2 <AmiBlitz3.ab3@22005>   ADDQ.w #1,D0
000317C4 <AmiBlitz3.ab3@22006>   MOVE.w D0,D2
000317C6 <AmiBlitz3.ab3@22007>   ADD.w D0,D0
000317C8 <AmiBlitz3.ab3@22008>   ADD.w D2,D0
000317CA <AmiBlitz3.ab3@22009>   ADD.w D0,D1
000317CC <AmiBlitz3.ab3@22010>   MOVE.w D1,D0
000317D0 <AmiBlitz3.ab3@22011>   ANDI.w #$3,D0
000317D4 <AmiBlitz3.ab3@22012>   CMP.w #$3,D0
000317D8 <AmiBlitz3.ab3@22013>    BEQ.w JUMP_syntaxerr
000317DE <AmiBlitz3.ab3@22015>   JSR get1bytemain
000317E0 <AmiBlitz3.ab3@22018> RTS
000317E2 <AmiBlitz3.ab3@22024> thetst1:  TST.b D0
000317E4 <AmiBlitz3.ab3@22025> thetst2:  TST.w D0
000317E6 <AmiBlitz3.ab3@22026> thetst3:  TST.l D0
000317E8 <AmiBlitz3.ab3@22027> thetst4:  TST.l (A7)+                                      ;Any Length?
000317EC <AmiBlitz3.ab3@22028> thetst5:  JSR _Reschedule(A6)
000317F0 <AmiBlitz3.ab3@22030> posbr:    BEQ.w posbr
000317F4 <AmiBlitz3.ab3@22031> negbr:    BNE.w negbr
000317F6 <AmiBlitz3.ab3@22035>   MOVEQ.l #-$01,D2
000317FA <AmiBlitz3.ab3@22036> BRA.w JL_0_D04C
00031800 <AmiBlitz3.ab3@22040>   CLR.l fp0addr
00031802 <AmiBlitz3.ab3@22041>   MOVEQ.l #$01,D1                                          ;while flag
00031804 <AmiBlitz3.ab3@22042>   MOVEQ.l #$00,D2                                          ;negate flag
00031808 <AmiBlitz3.ab3@22043> BRA.w JL_0_D04E
0003180E <AmiBlitz3.ab3@22047>   LEA firstrep,A2
00031810 <AmiBlitz3.ab3@22048>   MOVEQ.l #$08,D2
00031814 <AmiBlitz3.ab3@22049> BRA.w freeslist
00031818 <AmiBlitz3.ab3@22053>   LEA firstsel(PC),A2
0003181A <AmiBlitz3.ab3@22054>   MOVEQ.l #$0E,D2
0003181C <AmiBlitz3.ab3@22059>   MOVEQ.l #$00,D3
0003181E <AmiBlitz3.ab3@22067>   MOVE.l (A2),D0
00031820 <AmiBlitz3.ab3@22068>   CLR.l (A2)
00031822 <AmiBlitz3.ab3@22069>   MOVEA.l D0,A2
00031828 <AmiBlitz3.ab3@22070>   MOVEA.l _execbase,A6
0003182C <AmiBlitz3.ab3@22073>     CMPA.w #$0,A2
00031830 <AmiBlitz3.ab3@22074>      BEQ.w freelist__done
00031832 <AmiBlitz3.ab3@22075>     TST.w D3
00031836 <AmiBlitz3.ab3@22076>      BEQ.w freelist__skip
0003183A <AmiBlitz3.ab3@22077>     MOVEM.l D2-D3/A2,-(A7)
0003183C <AmiBlitz3.ab3@22078>     ADDA.w D3,A2
0003183E <AmiBlitz3.ab3@22079>     MOVE.l D4,D2
00031842 <AmiBlitz3.ab3@22080>     BSR.w freeslist
00031846 <AmiBlitz3.ab3@22081>     MOVEM.l (A7)+,D2-D3/A2
00031848 <AmiBlitz3.ab3@22084>     MOVEA.l A2,A1
0003184A <AmiBlitz3.ab3@22085>     MOVE.l D2,D0
0003184C <AmiBlitz3.ab3@22086>     MOVEA.l (A2),A2
00031852 <AmiBlitz3.ab3@22087>     MOVE.l mempool,a0
00031856 <AmiBlitz3.ab3@22088>     JSR _FreePooled(A6)
0003185A <AmiBlitz3.ab3@22089> BRA.w freelist__loop
0003185C <AmiBlitz3.ab3@22092> RTS
00031862 <AmiBlitz3.ab3@22095> JMP eselerr
00031866 <AmiBlitz3.ab3@22098> firstsel:  Ds.l 1
0003186A <AmiBlitz3.ab3@22101> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
0003186C <AmiBlitz3.ab3@22104> selpushw:   MOVE.w D0,-(A7)
0003186E <AmiBlitz3.ab3@22106> selpushl:   MOVE.l D0,-(A7)
00031872 <AmiBlitz3.ab3@22108> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031876 <AmiBlitz3.ab3@22111> selcomb:    ANDI.w #$FF,D0
00031878 <AmiBlitz3.ab3@22112> selcomw:    CMP.w (A7),D0
0003187A <AmiBlitz3.ab3@22114> selcoml:    CMP.l (A7),D0
0003187E <AmiBlitz3.ab3@22116> selbne:     BNE.w selbne
00031880 <AmiBlitz3.ab3@22118> endsel:     ADDQ.w #8,A7
00031884 <AmiBlitz3.ab3@22124>   MOVE.l firstsel(PC),D0                                  
00031888 <AmiBlitz3.ab3@22125>    BEQ.w JUMP_eselerr
0003188A <AmiBlitz3.ab3@22126>   MOVEA.l D0,A2
0003188E <AmiBlitz3.ab3@22127>    BSR.w JL_0_CDFC
00031894 <AmiBlitz3.ab3@22130>   MOVEA.l _execbase,A6
00031898 <AmiBlitz3.ab3@22133>   MOVE.l $4(A2),D0
0003189C <AmiBlitz3.ab3@22134>    BEQ.w doendsel__done
0003189E <AmiBlitz3.ab3@22135>   MOVEA.l D0,A3
000318A2 <AmiBlitz3.ab3@22136>   MOVEA.l $4(A3),A0
000318A8 <AmiBlitz3.ab3@22137>   MOVE.l destpointer,D1
000318AA <AmiBlitz3.ab3@22138>   SUB.l A0,D1
000318B0 <AmiBlitz3.ab3@22140>     TST.b fast
000318B4 <AmiBlitz3.ab3@22141>     BEQ doendsel__loop_l1
000318BA <AmiBlitz3.ab3@22142>     MOVE.w dontwrite,D0
000318BE <AmiBlitz3.ab3@22143>     BNE.w doendsel__skip
000318C0 <AmiBlitz3.ab3@22144>     ADDQ.l #2,d1
000318C4 <AmiBlitz3.ab3@22145>     MOVE.l d1,-2(a0)
000318C8 <AmiBlitz3.ab3@22146>   BRA doendsel__skip
000318CE <AmiBlitz3.ab3@22150>   TST.w dontwrite
000318D2 <AmiBlitz3.ab3@22151>      BNE.w doendsel__skip
000318D8 <AmiBlitz3.ab3@22152>   CMP.l #MaxWordSgnd,D1
000318DC <AmiBlitz3.ab3@22153>    BHI.w JUMP_cbraerr
000318DE <AmiBlitz3.ab3@22154>   MOVE.w D1,(A0)
000318E2 <AmiBlitz3.ab3@22157>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
000318E4 <AmiBlitz3.ab3@22158>   MOVEA.l A3,A1
000318E6 <AmiBlitz3.ab3@22159>   MOVEQ.l #$08,D0
000318EC <AmiBlitz3.ab3@22160>   MOVE.l mempool,a0
000318F0 <AmiBlitz3.ab3@22161>    JSR _FreePooled(A6)
000318F4 <AmiBlitz3.ab3@22162> BRA.w doendsel__loop
000318FA <AmiBlitz3.ab3@22165>   JSR popselect                                            ;fix stack on select
000318FE <AmiBlitz3.ab3@22166>   MOVEA.l firstsel(PC),A1
00031904 <AmiBlitz3.ab3@22167>   MOVE.l (A1),firstsel
00031906 <AmiBlitz3.ab3@22168>   MOVEQ.l #$0E,D0
0003190C <AmiBlitz3.ab3@22169>   MOVEA.l _execbase,A6
00031912 <AmiBlitz3.ab3@22170>   MOVE.l mempool,a0
00031916 <AmiBlitz3.ab3@22171>   JSR _FreePooled(A6)
0003191C <AmiBlitz3.ab3@22172> JMP get1bytemain
0003191E <AmiBlitz3.ab3@22176>   MOVEA.l (A7)+,A1
00031920 <AmiBlitz3.ab3@22177>   SUBQ.w #8,A1
00031922 <AmiBlitz3.ab3@22178>   MOVEQ.l #$09,D0
00031924 <AmiBlitz3.ab3@22179>   ADD.l (A1),D0
00031926 <AmiBlitz3.ab3@22182>   ADDQ.w #2,A7                                             ;for runtime errs!
0003192A <AmiBlitz3.ab3@22187>   MOVE.l firstsel(PC),D0
0003192E <AmiBlitz3.ab3@22188>    BEQ.w JUMP_defaerr
00031930 <AmiBlitz3.ab3@22189>   MOVEA.l D0,A2
00031934 <AmiBlitz3.ab3@22190>   BSR.w JL_0_CE26
00031938 <AmiBlitz3.ab3@22191>   BSR.w JL_0_CDFC
0003193C <AmiBlitz3.ab3@22192>   CLR.l $8(A2)
00031940 <AmiBlitz3.ab3@22193>   MOVE.w $C(A2),D2
00031944 <AmiBlitz3.ab3@22194> BRA.w JL_0_CE5E
0003194A <AmiBlitz3.ab3@22197> JMP defaerr
0003194E <AmiBlitz3.ab3@22200>   MOVE.l $8(A2),D0
00031952 <AmiBlitz3.ab3@22201>    BEQ.w JL_0_CE24
00031954 <AmiBlitz3.ab3@22202>   MOVEA.l D0,A0
0003195A <AmiBlitz3.ab3@22203>   MOVE.l destpointer,D1
0003195C <AmiBlitz3.ab3@22204>   SUB.l A0,D1
00031962 <AmiBlitz3.ab3@22206>     TST.b fast
00031966 <AmiBlitz3.ab3@22207>     BEQ 'l1
0003196C <AmiBlitz3.ab3@22208>     TST.w dontwrite
00031970 <AmiBlitz3.ab3@22209>     BNE.w JL_0_CE24
00031972 <AmiBlitz3.ab3@22210>     ADDQ.l #2,d1
00031976 <AmiBlitz3.ab3@22211>     MOVE.l D1,-2(A0)
0003197A <AmiBlitz3.ab3@22212>   BRA JL_0_CE24
00031980 <AmiBlitz3.ab3@22216>   TST.w dontwrite
00031984 <AmiBlitz3.ab3@22217>      BNE.w JL_0_CE24
0003198A <AmiBlitz3.ab3@22218>    CMP.l #MaxWordSgnd,D1
0003198E <AmiBlitz3.ab3@22219>    BHI.w JUMP_cbraerr
00031990 <AmiBlitz3.ab3@22220>   MOVE.w D1,(A0)
00031992 <AmiBlitz3.ab3@22223> RTS
00031998 <AmiBlitz3.ab3@22226> JMP cbraerr
0003199C <AmiBlitz3.ab3@22230>   MOVE.l $8(A2),D0
000319A0 <AmiBlitz3.ab3@22231>    BEQ.w JL_0_CE5C
000319A2 <AmiBlitz3.ab3@22232>   MOVEA.l D0,A3
000319A6 <AmiBlitz3.ab3@22233>   MOVE.w #$6000,D1
000319AC <AmiBlitz3.ab3@22235>    TST.b fast
000319B0 <AmiBlitz3.ab3@22236>    BEQ 'l1
000319B6 <AmiBlitz3.ab3@22237>    OR.l #$ff,d1
000319BA <AmiBlitz3.ab3@22238>    BSR writeword
000319BE <AmiBlitz3.ab3@22242>   BSR.w writeword
000319C0 <AmiBlitz3.ab3@22243>   MOVEQ.l #$08,D0
000319C2 <AmiBlitz3.ab3@22244>   MOVEQ.l #$01,D1
000319C8 <AmiBlitz3.ab3@22245>   MOVEA.l _execbase,A6
000319CE <AmiBlitz3.ab3@22246>   MOVE.l mempool,a0
000319D2 <AmiBlitz3.ab3@22247>   JSR _AllocPooled(a6)
000319D4 <AmiBlitz3.ab3@22249>   MOVEA.l D0,A0
000319D8 <AmiBlitz3.ab3@22250>   MOVE.l $4(A2),(A0)
000319DC <AmiBlitz3.ab3@22251>   MOVE.l A0,$4(A2)
000319E4 <AmiBlitz3.ab3@22252>   MOVE.l destpointer,$4(A0)
000319E8 <AmiBlitz3.ab3@22253> BRA.w writeword
000319EA <AmiBlitz3.ab3@22256> RTS
000319F0 <AmiBlitz3.ab3@22260>   TST.b debugmode
000319F4 <AmiBlitz3.ab3@22261>    BEQ.w JL_0_CE7A
000319F8 <AmiBlitz3.ab3@22262>   MOVE.w #$C313,D1
000319FC <AmiBlitz3.ab3@22263>   CMP.w #$3,D2
00031A00 <AmiBlitz3.ab3@22264>    BCS.w JL_0_CE76
00031A02 <AmiBlitz3.ab3@22265>   ADDQ.w #1,D1
00031A06 <AmiBlitz3.ab3@22268> BRA.w Atokejsr
00031A08 <AmiBlitz3.ab3@22271> RTS
00031A0E <AmiBlitz3.ab3@22275> JMP caseerr
00031A12 <AmiBlitz3.ab3@22278>   MOVE.l firstsel(PC),D0
00031A16 <AmiBlitz3.ab3@22279>    BEQ.w JUMP_caseerr
00031A18 <AmiBlitz3.ab3@22280>   MOVEA.l D0,A2
00031A1C <AmiBlitz3.ab3@22281>    BSR.w JL_0_CE26
00031A20 <AmiBlitz3.ab3@22282>    BSR.w JL_0_CDFC
00031A24 <AmiBlitz3.ab3@22283>   MOVE.w $C(A2),D2
00031A26 <AmiBlitz3.ab3@22284>   MOVE.w D2,-(A7)
00031A2A <AmiBlitz3.ab3@22285>    BSR.w JL_0_CE5E
00031A2C <AmiBlitz3.ab3@22286>   MOVE.w (A7),D2
00031A30 <AmiBlitz3.ab3@22287>    BSR.w bakeval
00031A32 <AmiBlitz3.ab3@22288>   MOVE.w (A7)+,D2
00031A36 <AmiBlitz3.ab3@22289>   LEA selcomb(PC),A0
00031A3A <AmiBlitz3.ab3@22290>   LEA selcombf(PC),A1
00031A3E <AmiBlitz3.ab3@22291>   CMP.w #$1,D2
00031A42 <AmiBlitz3.ab3@22292>    BEQ.w JL_0_CED8
00031A46 <AmiBlitz3.ab3@22293>   LEA selcomw(PC),A0
00031A4A <AmiBlitz3.ab3@22294>   CMP.w #$2,D2
00031A4E <AmiBlitz3.ab3@22295>    BEQ.w JL_0_CED8
00031A52 <AmiBlitz3.ab3@22296>   LEA selcoml(PC),A0
00031A56 <AmiBlitz3.ab3@22297>   LEA selcomlf(PC),A1
00031A5A <AmiBlitz3.ab3@22298>   CMP.w #$7,D2
00031A5E <AmiBlitz3.ab3@22299>    BCS.w JL_0_CED8
00031A62 <AmiBlitz3.ab3@22301>   MOVE.w #$CE01,D1
00031A66 <AmiBlitz3.ab3@22302>    BSR.w Atokejsr
00031A6A <AmiBlitz3.ab3@22303> BRA.w JL_0_CEDC
00031A6E <AmiBlitz3.ab3@22306>   BSR.w pokecode
00031A72 <AmiBlitz3.ab3@22309>   MOVE.w selbne(PC),D1
00031A78 <AmiBlitz3.ab3@22311>     TST.b fast
00031A7C <AmiBlitz3.ab3@22312>     BEQ 'l1
00031A82 <AmiBlitz3.ab3@22313>     ORI.l #$ff,d1
00031A86 <AmiBlitz3.ab3@22314>     BSR writeword
00031A8A <AmiBlitz3.ab3@22317>   BSR.w writeword
00031A8E <AmiBlitz3.ab3@22318>   MOVEA.l firstsel(PC),A0
00031A96 <AmiBlitz3.ab3@22319>   MOVE.l destpointer,$8(A0)
00031A9A <AmiBlitz3.ab3@22320> BRA.w writeword
00031A9E <AmiBlitz3.ab3@22324> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00031AA0 <AmiBlitz3.ab3@22325> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00031AA4 <AmiBlitz3.ab3@22328> sellineat:  Ds.l 1
00031AAA <AmiBlitz3.ab3@22334>   TST.b debugmode
00031AAE <AmiBlitz3.ab3@22335>    BEQ.w JL_0_CF0E
00031AB2 <AmiBlitz3.ab3@22336>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00031AB6 <AmiBlitz3.ab3@22337>    BSR.w writelong
00031AC0 <AmiBlitz3.ab3@22340>   MOVE.l linenumat,sellineat
00031ACA <AmiBlitz3.ab3@22342>    MOVE.l destpointer,pushpc
00031AD4 <AmiBlitz3.ab3@22343>   MOVE.l hunkoffsetbase,pushoff
00031AD6 <AmiBlitz3.ab3@22344>   MOVEQ.l #$00,D2
00031ADA <AmiBlitz3.ab3@22345>    BSR.w bakevalu                                          ;Evaluate
00031ADE <AmiBlitz3.ab3@22346>    BSR.w JL_0_B5D2
00031AE2 <AmiBlitz3.ab3@22347>   CMP.w #$7,D2
00031AE6 <AmiBlitz3.ab3@22348>    BNE.w JL_0_CF36
00031AEA <AmiBlitz3.ab3@22349>   MOVE.w clrst(PC),D1
00031AEE <AmiBlitz3.ab3@22350>    BSR.w writeword
00031AF2 <AmiBlitz3.ab3@22353>    BSR.w JL_0_B63C
00031AF6 <AmiBlitz3.ab3@22354>   LEA selpushb(PC),A0
00031AFA <AmiBlitz3.ab3@22355>   LEA selpushbf(PC),A1
00031AFE <AmiBlitz3.ab3@22356>   CMP.w #$1,D2
00031B02 <AmiBlitz3.ab3@22357>    BEQ.w JL_0_CF88
00031B06 <AmiBlitz3.ab3@22358>   LEA selpushw(PC),A0
00031B0A <AmiBlitz3.ab3@22359>   CMP.w #$2,D2
00031B0E <AmiBlitz3.ab3@22360>    BEQ.w JL_0_CF88
00031B12 <AmiBlitz3.ab3@22361>   LEA selpushl(PC),A0
00031B16 <AmiBlitz3.ab3@22362>   LEA selpushlf(PC),A1
00031B1A <AmiBlitz3.ab3@22363>   CMP.w #$7,D2
00031B1E <AmiBlitz3.ab3@22364>    BCS.w JL_0_CF88
00031B24 <AmiBlitz3.ab3@22366>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00031B28 <AmiBlitz3.ab3@22367>    BSR.w writeword
00031B2C <AmiBlitz3.ab3@22368>   LEA selpushs(PC),A0
00031B30 <AmiBlitz3.ab3@22369>   LEA selpushsf(PC),A1
00031B34 <AmiBlitz3.ab3@22370>    BSR.w pokecode
00031B38 <AmiBlitz3.ab3@22371>   MOVE.w #$C701,D1
00031B3C <AmiBlitz3.ab3@22372>    BSR.w Atokejsr
00031B40 <AmiBlitz3.ab3@22373> BRA.w JL_0_CF8C
00031B44 <AmiBlitz3.ab3@22376>   BSR.w pokecode
00031B46 <AmiBlitz3.ab3@22379>   MOVEQ.l #$0E,D0
00031B48 <AmiBlitz3.ab3@22380>   MOVEQ.l #$01,D1
00031B4E <AmiBlitz3.ab3@22381>   MOVEA.l _execbase,A6
00031B54 <AmiBlitz3.ab3@22383>   MOVE.l mempool,a0
00031B58 <AmiBlitz3.ab3@22384>   JSR _AllocPooled(a6)
00031B5A <AmiBlitz3.ab3@22385>   MOVEA.l D0,A0
00031B5E <AmiBlitz3.ab3@22386>   MOVE.l firstsel(PC),(A0)
00031B64 <AmiBlitz3.ab3@22387>   MOVE.l A0,firstsel
00031B68 <AmiBlitz3.ab3@22388>   CLR.l $4(A0)
00031B6C <AmiBlitz3.ab3@22389>   CLR.l $8(A0)
00031B70 <AmiBlitz3.ab3@22390>   MOVE.w D2,$C(A0)
00031B72 <AmiBlitz3.ab3@22391> RTS
00031B78 <AmiBlitz3.ab3@22395>   MOVE.l firstrep,D0
00031B7C <AmiBlitz3.ab3@22396>    BEQ.w JUMP_unterr1
00031B80 <AmiBlitz3.ab3@22397>   MOVE.w #$6000,D1
00031B84 <AmiBlitz3.ab3@22398>   BSR.w writeword
00031B86 <AmiBlitz3.ab3@22399>   MOVEA.l D0,A0
00031B8A <AmiBlitz3.ab3@22400>   MOVE.l $4(A0),D1
00031B90 <AmiBlitz3.ab3@22401>   SUB.l destpointer,D1
00031B92 <AmiBlitz3.ab3@22402>   TST.w D1
00031B96 <AmiBlitz3.ab3@22403>    BPL.w JUMP_unterr2
00031B9A <AmiBlitz3.ab3@22404>   BSR.w writeword
00031BA0 <AmiBlitz3.ab3@22405>   MOVEA.l _execbase,A6
00031BA4 <AmiBlitz3.ab3@22406> BRA.w JL_0_D036
00031BAA <AmiBlitz3.ab3@22409> JMP unterr2
00031BB0 <AmiBlitz3.ab3@22412> JMP unterr1
00031BB6 <AmiBlitz3.ab3@22416>   MOVE.l firstrep,D0
00031BBA <AmiBlitz3.ab3@22417>    BEQ.w JUMP_unterr1
00031BBE <AmiBlitz3.ab3@22418>   BSR.w do_if
00031BC4 <AmiBlitz3.ab3@22419>   JSR reget
00031BC8 <AmiBlitz3.ab3@22420>    BNE.w JUMP_syntaxerr
00031BCE <AmiBlitz3.ab3@22421>   MOVE.w dontwrite,D1
00031BD2 <AmiBlitz3.ab3@22422>    BNE.w JL_0_D020
00031BD8 <AmiBlitz3.ab3@22423>   MOVEA.l firstrep,A0
00031BDE <AmiBlitz3.ab3@22424>   MOVEA.l destpointer,A1
00031BE4 <AmiBlitz3.ab3@22426>     TST.b fast
00031BE8 <AmiBlitz3.ab3@22427>     BEQ 'l1
00031BEA <AmiBlitz3.ab3@22428>     SUBQ.w #4,a1
00031BEE <AmiBlitz3.ab3@22429>     MOVE.l $4(A0),D2
00031BF0 <AmiBlitz3.ab3@22430>     SUB.l A1,D2
00031BF2 <AmiBlitz3.ab3@22431>     MOVE.l d2,(a1)
00031BF6 <AmiBlitz3.ab3@22432>   BRA JL_0_D020
00031BF8 <AmiBlitz3.ab3@22436>   SUBQ.w #2,A1
00031BFC <AmiBlitz3.ab3@22437>   MOVE.l $4(A0),D2
00031BFE <AmiBlitz3.ab3@22438>   SUB.l A1,D2
00031C00 <AmiBlitz3.ab3@22439>   TST.w D2
00031C04 <AmiBlitz3.ab3@22440>    BPL.w JUMP_unterr2
00031C06 <AmiBlitz3.ab3@22441>   MOVE.w D2,(A1)
00031C0C <AmiBlitz3.ab3@22444>   MOVEA.l firstiff,A1
00031C12 <AmiBlitz3.ab3@22445>   MOVE.l (A1),firstiff
00031C14 <AmiBlitz3.ab3@22446>   MOVEQ.l #$0E,D0
00031C1A <AmiBlitz3.ab3@22447>   MOVEA.l _execbase,A6
00031C20 <AmiBlitz3.ab3@22448>   MOVE.l mempool,a0
00031C24 <AmiBlitz3.ab3@22449>   JSR _FreePooled(A6)
00031C2A <AmiBlitz3.ab3@22452>   MOVEA.l firstrep,A1
00031C30 <AmiBlitz3.ab3@22453>   MOVE.l (A1),firstrep
00031C32 <AmiBlitz3.ab3@22454>   MOVEQ.l #$08,D0
00031C38 <AmiBlitz3.ab3@22455>   MOVE.l mempool,a0
00031C3C <AmiBlitz3.ab3@22456> JMP _FreePooled(A6)
00031C40 <AmiBlitz3.ab3@22459> iflineat:   Ds.l 1
00031C42 <AmiBlitz3.ab3@22463>   MOVEQ.l #$00,D2
00031C48 <AmiBlitz3.ab3@22464>   TST.b fast
00031C4C <AmiBlitz3.ab3@22465>   BEQ 'l1
00031C54 <AmiBlitz3.ab3@22466>   MOVE.b #1,nostringopt
00031C5C <AmiBlitz3.ab3@22467>   MOVE.b #1,iniffcommand
00031C5E <AmiBlitz3.ab3@22471>   MOVEQ.l #$00,D1
00031C60 <AmiBlitz3.ab3@22474>   MOVE.w D1,-(A7)
00031C66 <AmiBlitz3.ab3@22475>   MOVE.l destpointer,-(A7)
00031C68 <AmiBlitz3.ab3@22476>   MOVE.w D2,-(A7)
00031C72 <AmiBlitz3.ab3@22477>   MOVE.l linenumat,iflineat
00031C74 <AmiBlitz3.ab3@22478>   MOVEQ.l #$00,D2
00031C7E <AmiBlitz3.ab3@22479>   MOVE.b optistring,optistring2
00031C86 <AmiBlitz3.ab3@22480>   MOVE.b #1,optistring
00031C8A <AmiBlitz3.ab3@22481>   BSR.w bakevalu
00031C94 <AmiBlitz3.ab3@22482>   MOVE.b optistring2,optistring
00031C98 <AmiBlitz3.ab3@22483>   CMP.w #$5,D2
00031C9C <AmiBlitz3.ab3@22484>    BEQ.w JL_0_D09C
00031CA0 <AmiBlitz3.ab3@22485>   MOVE.w thetst1(PC),D1
00031CA4 <AmiBlitz3.ab3@22486>   CMP.w #$1,D2
00031CA8 <AmiBlitz3.ab3@22487>    BEQ.w writebranchcode
00031CAC <AmiBlitz3.ab3@22488>   MOVE.w thetst2(PC),D1
00031CB0 <AmiBlitz3.ab3@22489>   CMP.w #$2,D2
00031CB4 <AmiBlitz3.ab3@22490>    BEQ.w writebranchcode
00031CB8 <AmiBlitz3.ab3@22491>   MOVE.w thetst4(PC),D1
00031CBC <AmiBlitz3.ab3@22492>   CMP.w #$7,D2
00031CC0 <AmiBlitz3.ab3@22493>    BEQ.w writebranchcode
00031CC4 <AmiBlitz3.ab3@22494>   MOVE.w thetst3(PC),D1
00031CC8 <AmiBlitz3.ab3@22495> BRA.w writebranchcode
00031CCE <AmiBlitz3.ab3@22498>   TST.b fpu
00031CD2 <AmiBlitz3.ab3@22499>   BEQ 'dofpu
00031CD8 <AmiBlitz3.ab3@22500>   MOVE.l #$f200003a,d1
00031CDC <AmiBlitz3.ab3@22501>   BSR writelong
00031CE0 <AmiBlitz3.ab3@22502>   MOVE.w #$f2c1,d1
00031CE4 <AmiBlitz3.ab3@22503>   BSR writeword
00031CE8 <AmiBlitz3.ab3@22504>   BSR writelong
00031CEA <AmiBlitz3.ab3@22505>   ADDQ.l #2,a7
00031CEE <AmiBlitz3.ab3@22506> BRA.w br2
00031CF2 <AmiBlitz3.ab3@22509>    MOVE.w #$C900,D1
00031CF6 <AmiBlitz3.ab3@22510>    BSR.w Atokejsr
00031CFA <AmiBlitz3.ab3@22511>   MOVE.l thetst5(PC),D1
00031CFE <AmiBlitz3.ab3@22512>    BSR.w writelong
00031D02 <AmiBlitz3.ab3@22513> BRA.w JL_0_D0B4
00031D08 <AmiBlitz3.ab3@22517>          CLR.b iniffcommand
00031D0E <AmiBlitz3.ab3@22518>          TST.b fast                                        ;branchcode
00031D12 <AmiBlitz3.ab3@22519>          BEQ b6
00031D18 <AmiBlitz3.ab3@22520>          TST.b fpu
00031D1C <AmiBlitz3.ab3@22521>          BEQ 'nofpu
00031D22 <AmiBlitz3.ab3@22525>           MOVE.l destpointer,a0
00031D28 <AmiBlitz3.ab3@22526>          SUB.l load_var_addr,a0
00031D2E <AmiBlitz3.ab3@22527>          CMP.l #4,a0
00031D32 <AmiBlitz3.ab3@22528>          BEQ 'nofpu
00031D3A <AmiBlitz3.ab3@22529>          CMP.l #$f2400014,-4(a4)                           ;<
00031D3E <AmiBlitz3.ab3@22530>          BNE 'nolt
00031D44 <AmiBlitz3.ab3@22531>          SUBQ.l #2,destpointer
00031D4A <AmiBlitz3.ab3@22532>          MOVE.w #$f293,-4(a4)                              ;
00031D4E <AmiBlitz3.ab3@22533> BRA 'brf
00031D56 <AmiBlitz3.ab3@22536>   CMP.l #$f2400015,-4(a4)                                  ;<=
00031D5A <AmiBlitz3.ab3@22537>          BNE 'nole
00031D60 <AmiBlitz3.ab3@22538>          SUBQ.l #2,destpointer
00031D66 <AmiBlitz3.ab3@22539>          MOVE.w #$f292,-4(a4)
00031D6A <AmiBlitz3.ab3@22540> BRA 'brf
00031D72 <AmiBlitz3.ab3@22543>   CMP.l #$f2400013,-4(a4)                                  ;=>
00031D76 <AmiBlitz3.ab3@22544>          BNE 'noge
00031D7C <AmiBlitz3.ab3@22545>          SUBQ.l #2,destpointer
00031D82 <AmiBlitz3.ab3@22546>          MOVE.w #$f294,-4(a4)
00031D86 <AmiBlitz3.ab3@22547> BRA 'brf
00031D8E <AmiBlitz3.ab3@22550>   CMP.l #$f2400012,-4(a4)                                  ;>
00031D92 <AmiBlitz3.ab3@22551>          BNE 'nogt
00031D98 <AmiBlitz3.ab3@22552>          SUBQ.l #2,destpointer
00031D9E <AmiBlitz3.ab3@22553>          MOVE.w #$f295,-4(a4)
00031DA2 <AmiBlitz3.ab3@22554> BRA 'brf
00031DAA <AmiBlitz3.ab3@22557>   CMP.l #$f2400001,-4(a4)                                  ;=
00031DAE <AmiBlitz3.ab3@22558>          BNE 'noeq
00031DB4 <AmiBlitz3.ab3@22559>          SUBQ.l #2,destpointer
00031DBA <AmiBlitz3.ab3@22560>          MOVE.w #$f28e,-4(a4)
00031DBE <AmiBlitz3.ab3@22561> BRA 'brf
00031DC6 <AmiBlitz3.ab3@22564>   CMP.l #$f240000e,-4(a4)                                  ;<>
00031DCA <AmiBlitz3.ab3@22565>          BNE 'none
00031DD0 <AmiBlitz3.ab3@22566>          SUBQ.l #2,destpointer
00031DD6 <AmiBlitz3.ab3@22567>          MOVE.w #$f281,-4(a4)
00031DD8 <AmiBlitz3.ab3@22570>   ADDQ.l #2,a7
00031DDE <AmiBlitz3.ab3@22572>     TST.b fast
00031DE2 <AmiBlitz3.ab3@22573>     BEQ 'l1
00031DE8 <AmiBlitz3.ab3@22574>     OR.b #$40,-3(a4)
00031DEC <AmiBlitz3.ab3@22575>     BSR writeword
00031DF0 <AmiBlitz3.ab3@22579>  BSR writeword
00031DF4 <AmiBlitz3.ab3@22580> BRA.s br2
00031DFA <AmiBlitz3.ab3@22584>   MOVE.l destpointer,a0
00031E00 <AmiBlitz3.ab3@22585>          SUB.l load_var_addr,a0
00031E06 <AmiBlitz3.ab3@22586>          CMP.l #4,a0
00031E0A <AmiBlitz3.ab3@22587>          BEQ JL_0_D0B4
00031E10 <AmiBlitz3.ab3@22588>          CMP.w #$4eb9,-6(a4)
00031E14 <AmiBlitz3.ab3@22589>          BEQ b6
00031E1A <AmiBlitz3.ab3@22590>          CMP.w #$5ec0,-2(a4)                               ;>
00031E1E <AmiBlitz3.ab3@22591>      BNE.s 'lb1
00031E24 <AmiBlitz3.ab3@22592>          MOVE.w #$6f00,-2(a4)                              ;ble
00031E28 <AmiBlitz3.ab3@22593> BRA.s br
00031E2E <AmiBlitz3.ab3@22596>  CMP.w #$5dc0,-2(a4)                                       ;<
00031E32 <AmiBlitz3.ab3@22597>   BNE.s 'lb2
00031E38 <AmiBlitz3.ab3@22598>          MOVE.w #$6c00,-2(a4)                              ;bge
00031E3C <AmiBlitz3.ab3@22599> BRA.s br
00031E42 <AmiBlitz3.ab3@22602>   CMP.w #$57c0,-2(a4)                                      ;=
00031E46 <AmiBlitz3.ab3@22603>   BNE.s 'lb3
00031E4C <AmiBlitz3.ab3@22604>          MOVE.w #$6600,-2(a4)                              ;bne
00031E50 <AmiBlitz3.ab3@22605> BRA.s br
00031E56 <AmiBlitz3.ab3@22608>   CMP.w #$56c0,-2(a4)                                      ;<>
00031E5A <AmiBlitz3.ab3@22609>   BNE.s 'lb4
00031E60 <AmiBlitz3.ab3@22610>          MOVE.w #$6700,-2(a4)                              ;beq
00031E64 <AmiBlitz3.ab3@22611> BRA.s br
00031E6A <AmiBlitz3.ab3@22614>   CMP.w #$5cc0,-2(a4)                                      ;>=
00031E6E <AmiBlitz3.ab3@22615>   BNE.s 'lb5
00031E74 <AmiBlitz3.ab3@22616>          MOVE.w #$6d00,-2(a4)                              ;blt
00031E78 <AmiBlitz3.ab3@22617> BRA.s br
00031E7E <AmiBlitz3.ab3@22620>   CMP.w #$5fc0,-2(a4)                                      ;<=
00031E82 <AmiBlitz3.ab3@22621>         BNE.s b6
00031E88 <AmiBlitz3.ab3@22622>          MOVE.w #$6e00,-2(a4)                              ;bgt
00031E8A <AmiBlitz3.ab3@22625>   TST.w (a7)+
00031E90 <AmiBlitz3.ab3@22627>         TST.b fast
00031E94 <AmiBlitz3.ab3@22628>         BEQ 'l1
00031E9A <AmiBlitz3.ab3@22629>         OR.b #$ff,-1(a4)                                   ;long branches
00031E9E <AmiBlitz3.ab3@22630>         BSR writeword
00031EA2 <AmiBlitz3.ab3@22634>         BSR writeword
00031EA6 <AmiBlitz3.ab3@22635> BRA.s br2
00031EAA <AmiBlitz3.ab3@22638>   BSR.w writeword
00031EAE <AmiBlitz3.ab3@22641>   MOVE.l posbr(PC),D1
00031EB0 <AmiBlitz3.ab3@22642>   TST.w (A7)+
00031EB4 <AmiBlitz3.ab3@22643>    BEQ.w JL_0_D0C2
00031EB8 <AmiBlitz3.ab3@22644>   MOVE.l negbr(PC),D1
00031EBE <AmiBlitz3.ab3@22647>   TST.b fast
00031EC2 <AmiBlitz3.ab3@22648>            BEQ 'l1
00031EC8 <AmiBlitz3.ab3@22649>            OR.l #$00ff0000,d1
00031ECC <AmiBlitz3.ab3@22650>            BSR writelong
00031ED0 <AmiBlitz3.ab3@22651>            BSR writeword
00031ED4 <AmiBlitz3.ab3@22652> BRA br2
00031ED8 <AmiBlitz3.ab3@22655>   BSR.w writelong
00031EDA <AmiBlitz3.ab3@22658>  MOVEQ.l #$0E,D0
00031EDC <AmiBlitz3.ab3@22659>   MOVEQ.l #$01,D1
00031EE2 <AmiBlitz3.ab3@22660>   MOVEA.l _execbase,A6
00031EE8 <AmiBlitz3.ab3@22662>   MOVE.l mempool,a0
00031EEC <AmiBlitz3.ab3@22663>   JSR _AllocPooled(a6)
00031EEE <AmiBlitz3.ab3@22664>   MOVEA.l D0,A0
00031EF4 <AmiBlitz3.ab3@22665>   MOVE.l firstiff,(A0)
00031EFA <AmiBlitz3.ab3@22666>   MOVE.l A0,firstiff
00031EFE <AmiBlitz3.ab3@22667>   MOVE.l (A7)+,$4(A0)
00031F06 <AmiBlitz3.ab3@22668>   MOVE.l destpointer,$8(A0)
00031F0A <AmiBlitz3.ab3@22669>   MOVE.w (A7)+,$C(A0)
00031F10 <AmiBlitz3.ab3@22670>    JSR reget
00031F14 <AmiBlitz3.ab3@22671>    BEQ.w JL_0_D10C
00031F1A <AmiBlitz3.ab3@22672>   BSET #$7,$C(A0)
00031F24 <AmiBlitz3.ab3@22676>   MOVE.w oldqflag,instringon
00031F2A <AmiBlitz3.ab3@22677>   MOVEA.l lastsourcepos,A5
00031F32 <AmiBlitz3.ab3@22678>   MOVE.w #$003A,lastchar
00031F34 <AmiBlitz3.ab3@22681> RTS
00031F38 <AmiBlitz3.ab3@22685>   CMP.w #$1,D0
00031F3C <AmiBlitz3.ab3@22686>    BLT.w JL_0_D128
00031F40 <AmiBlitz3.ab3@22687>   CMP.w #$0,D0
00031F44 <AmiBlitz3.ab3@22688>    BGT.w JL_0_D128
00031F46 <AmiBlitz3.ab3@22689>   ADD.w D0,D0
00031F48 <AmiBlitz3.ab3@22690>   ADD.w D0,D0
00031F4C <AmiBlitz3.ab3@22691>   MOVEA.l JL_0_D128(PC,D0.W),A0
00031F4E <AmiBlitz3.ab3@22694> JMP (A0)
00031F52 <AmiBlitz3.ab3@22697> BRA.w JL_0_D128
00031F56 <AmiBlitz3.ab3@22701>   CMP.w #$1,D0
00031F5A <AmiBlitz3.ab3@22702>    BLT.w JL_0_D146
00031F5E <AmiBlitz3.ab3@22703>   CMP.w #$0,D0
00031F62 <AmiBlitz3.ab3@22704>    BGT.w JL_0_D146
00031F64 <AmiBlitz3.ab3@22705>   ADD.w D0,D0
00031F66 <AmiBlitz3.ab3@22706>   ADD.w D0,D0
00031F6A <AmiBlitz3.ab3@22707>   MOVEA.l JL_0_D146(PC,D0.W),A0
00031F6C <AmiBlitz3.ab3@22710>   JSR (A0)
00031F70 <AmiBlitz3.ab3@22713> BRA.w JL_0_D146
00031F74 <AmiBlitz3.ab3@22717>   CMP.w #$1,D0
00031F78 <AmiBlitz3.ab3@22718>    BLT.w JL_0_D168
00031F7C <AmiBlitz3.ab3@22719>   CMP.w #$0,D0
00031F80 <AmiBlitz3.ab3@22720>    BGT.w JL_0_D168
00031F82 <AmiBlitz3.ab3@22721>   ADD.w D0,D0
00031F84 <AmiBlitz3.ab3@22722>   ADD.w D0,D0
00031F88 <AmiBlitz3.ab3@22723>   MOVEA.l JL_0_D168(PC,D0.W),A0
00031F8C <AmiBlitz3.ab3@22726>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00031F8E <AmiBlitz3.ab3@22729>    JSR (A0)
00031F92 <AmiBlitz3.ab3@22732> BRA.w JL_0_D168
00031F94 <AmiBlitz3.ab3@22735> labcnt:   Ds.w 1
00031F96 <AmiBlitz3.ab3@22742>   MOVEQ.l #$02,D2
00031F9A <AmiBlitz3.ab3@22743>    BSR.w bakeval
00031F9E <AmiBlitz3.ab3@22744>   LEA JL_0_D10E(PC),A0
00031FA2 <AmiBlitz3.ab3@22745>   LEA JL_0_D12C(PC),A1
00031FA6 <AmiBlitz3.ab3@22746>   MOVE.w #$001A,D1
00031FAA <AmiBlitz3.ab3@22747>   CMP.w #-$7FFB,D0
00031FAE <AmiBlitz3.ab3@22748>    BEQ.w JL_0_D1B6
00031FB2 <AmiBlitz3.ab3@22749>   CMP.w #-$7FFA,D0
00031FB6 <AmiBlitz3.ab3@22750>    BNE.w JUMP_syntaxerr
00031FBA <AmiBlitz3.ab3@22751>   LEA JL_0_D12C(PC),A0
00031FBE <AmiBlitz3.ab3@22752>   LEA JL_0_D14A(PC),A1
00031FC2 <AmiBlitz3.ab3@22753>   MOVE.w #$001A,D1
00031FC8 <AmiBlitz3.ab3@22754>   TST.b debugmode
00031FCC <AmiBlitz3.ab3@22755>    BEQ.b JL_0_D1B6
00031FD2 <AmiBlitz3.ab3@22756>    JSR chkstak
00031FD6 <AmiBlitz3.ab3@22757>   LEA JL_0_D14A(PC),A0
00031FDA <AmiBlitz3.ab3@22758>   LEA labcnt(PC),A1
00031FDE <AmiBlitz3.ab3@22759>   MOVE.w #$001E,D1
00031FE0 <AmiBlitz3.ab3@22762>   MOVE.w D1,-(A7)
00031FE6 <AmiBlitz3.ab3@22763>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00031FEA <AmiBlitz3.ab3@22764>    BSR.w pokecode
00031FF0 <AmiBlitz3.ab3@22765>   CLR.w labcnt
00031FF6 <AmiBlitz3.ab3@22770>    JSR get1bytemain
00031FFC <AmiBlitz3.ab3@22771>   SUBQ.l #2,destpointer                                    ;for makealab!
00032000 <AmiBlitz3.ab3@22772>    BSR.w JL_0_AE22
00032006 <AmiBlitz3.ab3@22773>   ADDQ.l #2,destpointer
0003200C <AmiBlitz3.ab3@22774>    JSR addoff
00032010 <AmiBlitz3.ab3@22775>   MOVE.l $8(A2),D1
00032014 <AmiBlitz3.ab3@22776>    BSR.w writelong
0003201A <AmiBlitz3.ab3@22777>   ADDQ.w #1,labcnt
00032020 <AmiBlitz3.ab3@22778>    JSR reget
00032024 <AmiBlitz3.ab3@22779>   CMP.w #$2C,D0
00032028 <AmiBlitz3.ab3@22780>    BEQ.w JL_0_D1C8
0003202A <AmiBlitz3.ab3@22781>   MOVEA.l (A7)+,A0
0003202C <AmiBlitz3.ab3@22782>   MOVE.w (A7)+,D2
00032032 <AmiBlitz3.ab3@22783>   MOVE.w dontwrite,D1
00032036 <AmiBlitz3.ab3@22784>    BNE.w JL_0_D21A
0003203A <AmiBlitz3.ab3@22785>   MOVE.w labcnt(PC),D1
0003203E <AmiBlitz3.ab3@22786>   MOVE.w D1,$A(A0)
00032040 <AmiBlitz3.ab3@22787>   ADD.w D1,D1
00032042 <AmiBlitz3.ab3@22788>   ADD.w D1,D1
00032044 <AmiBlitz3.ab3@22789>   ADDQ.w #2,D1
00032048 <AmiBlitz3.ab3@22790>   MOVE.w D1,$2(A0,D2.W)
0003204A <AmiBlitz3.ab3@22793> RTS
00032050 <AmiBlitz3.ab3@22797>   TST.b debugmode
00032054 <AmiBlitz3.ab3@22798>    BEQ.w JL_0_D236
0003205A <AmiBlitz3.ab3@22799>    JSR chkstak
00032060 <AmiBlitz3.ab3@22800>   MOVE.l AL_0_D162,D1
00032064 <AmiBlitz3.ab3@22801>    BSR.w writelong
0003206A <AmiBlitz3.ab3@22803>   MOVE.w gosubcode,D1
0003206E <AmiBlitz3.ab3@22804> BRA.w JL_0_D246
00032074 <AmiBlitz3.ab3@22808>   MOVE.w gotocode,D1
00032076 <AmiBlitz3.ab3@22811>   MOVE.w D1,-(A7)
0003207A <AmiBlitz3.ab3@22812>    BSR.w JL_0_AE22
0003207C <AmiBlitz3.ab3@22813>   MOVE.w (A7)+,D1
00032080 <AmiBlitz3.ab3@22814>    BSR.w writeword
00032086 <AmiBlitz3.ab3@22815>    JSR addoff
0003208A <AmiBlitz3.ab3@22816>   MOVE.l $8(A2),D1
0003208E <AmiBlitz3.ab3@22817> BRA.w writelong
00032094 <AmiBlitz3.ab3@22821>   MOVE.w proceduremode,D1
00032098 <AmiBlitz3.ab3@22822>    BEQ.w JUMP_badpenderr
0003209C <AmiBlitz3.ab3@22823>   MOVE.w #$4EF9,D1
000320A0 <AmiBlitz3.ab3@22824>    BSR.w writeword
000320A6 <AmiBlitz3.ab3@22825>    JSR addoff
000320AC <AmiBlitz3.ab3@22826>   MOVEA.l _execbase,A6
000320AE <AmiBlitz3.ab3@22827>   MOVEQ.l #$08,D0
000320B0 <AmiBlitz3.ab3@22828>   MOVEQ.l #$01,D1
000320B6 <AmiBlitz3.ab3@22830>   MOVE.l mempool,a0
000320BA <AmiBlitz3.ab3@22831>   JSR _AllocPooled(a6)
000320BC <AmiBlitz3.ab3@22832>   MOVEA.l D0,A0
000320C2 <AmiBlitz3.ab3@22833>   MOVE.l firstpend,(A0)
000320C8 <AmiBlitz3.ab3@22834>   MOVE.l A0,firstpend
000320D0 <AmiBlitz3.ab3@22835>   MOVE.l destpointer,$4(A0)
000320D4 <AmiBlitz3.ab3@22836> BRA.w writelong
000320D8 <AmiBlitz3.ab3@22840>   BSR.w do_AsmExit
000320DE <AmiBlitz3.ab3@22841> JMP get1bytemain
000320E6 <AmiBlitz3.ab3@22845>   MOVE.b #1,nostringopt
000320EA <AmiBlitz3.ab3@22846>   MOVEM.l a0/a1/d1,-(a7)
000320F0 <AmiBlitz3.ab3@22847>   MOVEA.l currentfunction,A0
000320F6 <AmiBlitz3.ab3@22848>     CMP.l #0,a0
000320FA <AmiBlitz3.ab3@22849>     BNE 'l1
00032100 <AmiBlitz3.ab3@22850>     JMP errorasmexit
00032102 <AmiBlitz3.ab3@22851> 'l1 MOVEQ.l #$00,D2
00032106 <AmiBlitz3.ab3@22852>   MOVE.b $5(A0),D2
0003210A <AmiBlitz3.ab3@22853>   BSR.w eval
00032110 <AmiBlitz3.ab3@22855>   MOVEA.l currentfunction,A0
00032114 <AmiBlitz3.ab3@22856>   MOVE.l funcstruct_returntype(a0),a0
0003211A <AmiBlitz3.ab3@22857>   CMP.l #0,a0
0003211E <AmiBlitz3.ab3@22858>   BEQ 'isstatement
00032126 <AmiBlitz3.ab3@22859>   CMP.l #$100,4(a0)
0003212A <AmiBlitz3.ab3@22860>   BLT.w 'isvar
0003212C <AmiBlitz3.ab3@22861>   MOVE.l a2,a1
00032132 <AmiBlitz3.ab3@22862>   TST.l typetocast
00032136 <AmiBlitz3.ab3@22863>   BEQ 'nocast
0003213C <AmiBlitz3.ab3@22864>   MOVE.l typetocast,a1
0003213E <AmiBlitz3.ab3@22865> 'nocast  CMP.l a0,a1
00032142 <AmiBlitz3.ab3@22866>   BEQ 'ok
00032148 <AmiBlitz3.ab3@22867>   CLR.l typetocast
0003214E <AmiBlitz3.ab3@22868>   MOVE.l lasttoken,d1
00032152 <AmiBlitz3.ab3@22869>   CMP.w #$b581,d1                   ; ok, when token for null
00032156 <AmiBlitz3.ab3@22870>   BEQ 'isnull
0003215C <AmiBlitz3.ab3@22871> 'error  JMP errorconvertreturntype
00032160 <AmiBlitz3.ab3@22878>   MOVEM.l (a7)+,a0/a1/d1
00032164 <AmiBlitz3.ab3@22879> BRA.w do_AsmExit
0003216A <AmiBlitz3.ab3@22881> error_convert_types2 JMP error_convert_types
00032170 <AmiBlitz3.ab3@22894>   TST.b debugmode
00032174 <AmiBlitz3.ab3@22895>    BEQ.w JL_0_D2CA
00032178 <AmiBlitz3.ab3@22896>   MOVE.w #$C305,D1
0003217C <AmiBlitz3.ab3@22897> BRA.w Atokejsr
00032180 <AmiBlitz3.ab3@22900>   MOVE.w #$4E75,D1
00032184 <AmiBlitz3.ab3@22901> BRA.w writeword
00032188 <AmiBlitz3.ab3@22904> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
0003218C <AmiBlitz3.ab3@22905> proclocals:  Ds.l 1                                        ;for debugga!
0003218E <AmiBlitz3.ab3@22906> procnum:     Ds.w 1
00032190 <AmiBlitz3.ab3@22907> procnum2:    Ds.w 1
00032194 <AmiBlitz3.ab3@22908> prolineat:   Ds.l 1
0003219A <AmiBlitz3.ab3@22912>    TST.w proceduremode
0003219E <AmiBlitz3.ab3@22913>    BGT JUMP_sreterr
000321A2 <AmiBlitz3.ab3@22914>    CMP.w #-$7FF9,D0
000321A6 <AmiBlitz3.ab3@22915>    BEQ.w JL_0_D29C
000321A8 <AmiBlitz3.ab3@22916>    MOVEQ.l #-$01,D1
000321AC <AmiBlitz3.ab3@22917> BRA.w do_function2
000321B2 <AmiBlitz3.ab3@22920> JMP sreterr
000321B8 <AmiBlitz3.ab3@22924>   CLR.b skipfunc
000321BE <AmiBlitz3.ab3@22925>   TST.l unusedfunc
000321C2 <AmiBlitz3.ab3@22926>   BEQ 'ex
000321C6 <AmiBlitz3.ab3@22927>   MOVEM.l d0-d7/a0-a6,-(a7)
000321CC <AmiBlitz3.ab3@22928>   MOVE.l unusedfunc,d1
000321D2 <AmiBlitz3.ab3@22929>   LEA ptr_parameterstore,a5
000321D4 <AmiBlitz3.ab3@22932>   MOVE.l d1,a0
000321D8 <AmiBlitz3.ab3@22933>   LEA 12(a0),a2
000321DA <AmiBlitz3.ab3@22934>   MOVE.l a5,a1
000321DC <AmiBlitz3.ab3@22936>   CMPM.b (a1)+,(a2)+
000321E0 <AmiBlitz3.ab3@22937>   BNE 'neq
000321E2 <AmiBlitz3.ab3@22938>   TST.b (a2)
000321E6 <AmiBlitz3.ab3@22939>   BNE 'ch
000321E8 <AmiBlitz3.ab3@22940>   TST.b (a1)
000321EC <AmiBlitz3.ab3@22941>   BNE 'neq
000321F4 <AmiBlitz3.ab3@22942>   MOVE.b #1,skipfunc
000321F8 <AmiBlitz3.ab3@22943> BRA 'out
000321FA <AmiBlitz3.ab3@22946>   MOVE.l (a0),d1
000321FE <AmiBlitz3.ab3@22947>   BNE 'ag
00032202 <AmiBlitz3.ab3@22950>   MOVEM.l (a7)+,d0-d7/a0-a6
00032204 <AmiBlitz3.ab3@22953> RTS
0003220A <AmiBlitz3.ab3@22957> JMP dupprocerr
00032210 <AmiBlitz3.ab3@22960> JMP illprocperr
00032218 <AmiBlitz3.ab3@22967>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
0003221C <AmiBlitz3.ab3@22968>    BEQ JUMP_sreterr
00032220 <AmiBlitz3.ab3@22969>   CMP.w #-$7FF9,D0
00032224 <AmiBlitz3.ab3@22970>    BEQ.w do_function_return
0003222E <AmiBlitz3.ab3@22973>   MOVE.w oldqflag,instringon
00032234 <AmiBlitz3.ab3@22974>   MOVEA.l lastsourcepos,A5
0003223A <AmiBlitz3.ab3@22975>   JSR getfunctionreturntype
00032240 <AmiBlitz3.ab3@22976>   JSR get1bytemain
00032246 <AmiBlitz3.ab3@22979>   TST.b declare
0003224A <AmiBlitz3.ab3@22980>   BEQ 'l1
00032252 <AmiBlitz3.ab3@22981>   MOVE.b #1,nowdeclare
00032258 <AmiBlitz3.ab3@22984>   JSR errchx                                           ;writejumpoverfunction
0003225E <AmiBlitz3.ab3@22987>   CLR.b fastfunc
00032268 <AmiBlitz3.ab3@22988>   MOVE.l firstiff,firstiffstore
00032270 <AmiBlitz3.ab3@22989>   CMP.l #"FAST",-1(a5)
00032274 <AmiBlitz3.ab3@22990>   BNE 'nofast
0003227A <AmiBlitz3.ab3@22991>   CMP.b #" ",3(a5)
0003227E <AmiBlitz3.ab3@22992>   BNE 'nofast
00032280 <AmiBlitz3.ab3@22993>   ADDQ.l #3,a5
00032284 <AmiBlitz3.ab3@22996>     CMP.b #" ",(a5)
00032288 <AmiBlitz3.ab3@22997>      BNE 'x1
0003228A <AmiBlitz3.ab3@22998>     ADDQ #1,a5
0003228E <AmiBlitz3.ab3@22999> BRA 'x2
00032294 <AmiBlitz3.ab3@23002>   MOVE.l a5,lastsourcepos
0003229C <AmiBlitz3.ab3@23003>   MOVE.b #1,fastfunc
000322A4 <AmiBlitz3.ab3@23006>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
000322A8 <AmiBlitz3.ab3@23007> BRA 'noopt
000322AE <AmiBlitz3.ab3@23009>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
000322B2 <AmiBlitz3.ab3@23010>   BNE 'noopt
000322B4 <AmiBlitz3.ab3@23011>   ADDQ.l #4,a5
000322B8 <AmiBlitz3.ab3@23014>     CMP.b #" ",(a5)
000322BC <AmiBlitz3.ab3@23015>      BNE 'x1b
000322BE <AmiBlitz3.ab3@23016>     ADDQ #1,a5
000322C2 <AmiBlitz3.ab3@23017> BRA 'x2b
000322C8 <AmiBlitz3.ab3@23020>   MOVE.l a5,lastsourcepos
000322CE <AmiBlitz3.ab3@23022>   JSR makename2
000322D2 <AmiBlitz3.ab3@23023> BRA 'l1
000322D8 <AmiBlitz3.ab3@23027>   JSR makename2
000322DE <AmiBlitz3.ab3@23028>   JSR checkused
000322E4 <AmiBlitz3.ab3@23029>   TST.b skipfunc
000322E8 <AmiBlitz3.ab3@23030>    BEQ 'l1
000322EE <AmiBlitz3.ab3@23031>   JSR skipme
000322F4 <AmiBlitz3.ab3@23032>   CLR.b fastfunc
000322F6 <AmiBlitz3.ab3@23033> RTS
00032300 <AmiBlitz3.ab3@23036>   MOVE.l linenumat,prolineat
00032306 <AmiBlitz3.ab3@23037>   ADDQ.w #1,procnum2
0003230E <AmiBlitz3.ab3@23038>   MOVE.w procnum2(PC),procnum
00032314 <AmiBlitz3.ab3@23039>   MOVE.w D1,proceduremode
0003231A <AmiBlitz3.ab3@23040>   CLR.w locvaroff
0003231E <AmiBlitz3.ab3@23041>   CMP.w #$7B,D0
00032322 <AmiBlitz3.ab3@23042>    BNE.w JUMP_syntaxerr
0003232A <AmiBlitz3.ab3@23043>    MOVE.b #1,infunctioncode
00032330 <AmiBlitz3.ab3@23044>   MOVEA.l tempvm,A0
00032338 <AmiBlitz3.ab3@23045>   MOVE.w $C(A0),memlibstat
0003233E <AmiBlitz3.ab3@23046>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032342 <AmiBlitz3.ab3@23047>   MOVE.w #$4EF9,D1
00032346 <AmiBlitz3.ab3@23048>    BSR.w writeword
0003234C <AmiBlitz3.ab3@23049>    JSR addoff
00032350 <AmiBlitz3.ab3@23050>    BSR.w writelong
00032356 <AmiBlitz3.ab3@23051>    JSR findproc                                          ;findproc function
0003235A <AmiBlitz3.ab3@23052>    BEQ.w JUMP_dupprocerr
00032360 <AmiBlitz3.ab3@23053>    JSR addlabel
00032366 <AmiBlitz3.ab3@23054>    MOVE.b #31,$20(a2)                                      ;increase if more pars
0003236C <AmiBlitz3.ab3@23055>    MOVE.b #0,isfunc(a2)
00032374 <AmiBlitz3.ab3@23056>    MOVE.l functionreturntype,funcstruct_returntype(a2)
0003237C <AmiBlitz3.ab3@23057>   MOVE.l destpointer,$E(A2)
00032382 <AmiBlitz3.ab3@23058>   MOVE.l A2,currentfunction
00032388 <AmiBlitz3.ab3@23059>   LEA nops8,A0
0003238E <AmiBlitz3.ab3@23060>   LEA dataget,A1
00032392 <AmiBlitz3.ab3@23061>    BSR.w pokecode2
00032398 <AmiBlitz3.ab3@23062>   TST.b debugmode
0003239C <AmiBlitz3.ab3@23063>    BEQ.b JL_0_D3AA
0003239E <AmiBlitz3.ab3@23064>   MOVEQ.l #$04,D1
000323A4 <AmiBlitz3.ab3@23065>    JSR writetrap
000323AE <AmiBlitz3.ab3@23066>   MOVE.l destpointer,proclocals
000323B2 <AmiBlitz3.ab3@23067>    BSR.w writelong
000323B6 <AmiBlitz3.ab3@23068>    BSR.w writelong
000323BA <AmiBlitz3.ab3@23071>    LEA $16(A2),A4
000323C2 <AmiBlitz3.ab3@23072>   MOVE.b proceduremode+1,$5(A2)
000323C4 <AmiBlitz3.ab3@23073>   MOVEQ.l #$00,D6
000323C6 <AmiBlitz3.ab3@23074>   MOVEQ.l #$00,D5
000323CC <AmiBlitz3.ab3@23075>    JSR get1bytemain
000323D0 <AmiBlitz3.ab3@23076>   CMP.w #$7D,D0
000323D4 <AmiBlitz3.ab3@23077>    BEQ.w JL_0_D466
000323D8 <AmiBlitz3.ab3@23080>    CMP.b #"@",d0
000323DC <AmiBlitz3.ab3@23081>    BNE 'l2
000323DE <AmiBlitz3.ab3@23082>    MOVE.l a0,-(a7)
000323E4 <AmiBlitz3.ab3@23083>    MOVE.l currentfunction,a0
000323EA <AmiBlitz3.ab3@23084>    CMP.b #31,$20(a0)                                       ;increase if morepars
000323EE <AmiBlitz3.ab3@23085>    BNE 'l1
000323F2 <AmiBlitz3.ab3@23086>    MOVE.b d6,$20(a0)                                       ;increase if morepar
000323F8 <AmiBlitz3.ab3@23089>    JSR get1bytemain
000323FA <AmiBlitz3.ab3@23090>    MOVE.l (a7)+,a0
000323FE <AmiBlitz3.ab3@23093>    BSR.w getparameter
00032402 <AmiBlitz3.ab3@23094>    BSR.w JL_0_8E3C
0003240A <AmiBlitz3.ab3@23095>   CMPI.l #$7,$4(A2)
0003240E <AmiBlitz3.ab3@23096>    BNE.w JL_0_D3F6
00032414 <AmiBlitz3.ab3@23097>   LEA stbuff,A0
00032416 <AmiBlitz3.ab3@23098>   MOVE.w D5,D1
00032418 <AmiBlitz3.ab3@23099>   LSL.w #2,D1
0003241C <AmiBlitz3.ab3@23100>   MOVE.w D6,$0(A0,D1.W)
00032422 <AmiBlitz3.ab3@23101>   MOVE.w $4(A3),$2(A0,D1.W)
00032424 <AmiBlitz3.ab3@23102>   ADDQ.w #1,D5
00032426 <AmiBlitz3.ab3@23103>   MOVEQ.l #$07,D2
0003242A <AmiBlitz3.ab3@23104> BRA.w JL_0_D442
00032430 <AmiBlitz3.ab3@23107> JMP toovarerr
00032434 <AmiBlitz3.ab3@23110>   MOVE.w #$2940,D1
00032436 <AmiBlitz3.ab3@23111>   MOVEQ.l #$03,D2
0003243E <AmiBlitz3.ab3@23112>   BTST #$0,flagmask+1
00032442 <AmiBlitz3.ab3@23113>    BNE.w JL_0_D430
0003244A <AmiBlitz3.ab3@23114>   CMPI.l #$100,$4(A2)
0003244E <AmiBlitz3.ab3@23115>    BCC.w JUMP_illprocperr
00032452 <AmiBlitz3.ab3@23116>   MOVE.w $6(A2),D2
00032456 <AmiBlitz3.ab3@23117>   CMP.w #$2,D2
0003245A <AmiBlitz3.ab3@23118>    BHI.w JL_0_D430
0003245E <AmiBlitz3.ab3@23119>    BEQ.w JL_0_D42C
00032462 <AmiBlitz3.ab3@23120>   EORI.w #$3000,D1
00032466 <AmiBlitz3.ab3@23121> BRA.w JL_0_D430
0003246C <AmiBlitz3.ab3@23124> JMP more6pard
00032470 <AmiBlitz3.ab3@23127>   ORI.w #$1000,D1
00032472 <AmiBlitz3.ab3@23130>   OR.w D6,D1
00032478 <AmiBlitz3.ab3@23131>   TST.b fpu
0003247C <AmiBlitz3.ab3@23132>   BEQ 'nofpu
00032480 <AmiBlitz3.ab3@23133>   CMP.b #5,d2
00032484 <AmiBlitz3.ab3@23134>   BNE 'nofpu
00032488 <AmiBlitz3.ab3@23135>   CMP.w #6,d6
0003248C <AmiBlitz3.ab3@23136>   BLT 'l10a
00032492 <AmiBlitz3.ab3@23137>   CMP.l #newtype_double,a2
00032496 <AmiBlitz3.ab3@23138>   BEQ JUMP_more6pard
0003249A <AmiBlitz3.ab3@23139> BRA 'nofpu
000324A0 <AmiBlitz3.ab3@23142>   MOVE.l #$f22c6400,d1
000324A4 <AmiBlitz3.ab3@23143>   MOVEM.l d0/a4,-(a7)
000324A6 <AmiBlitz3.ab3@23144>   MOVE.l d6,d0
000324A8 <AmiBlitz3.ab3@23145>   ASL.l #7,d0
000324AA <AmiBlitz3.ab3@23146>   OR.w d0,d1
000324B0 <AmiBlitz3.ab3@23147>   CMP.l #newtype_double,a2
000324B4 <AmiBlitz3.ab3@23148>   BNE 'l1
000324BA <AmiBlitz3.ab3@23149>   OR.l #$1000,d1
000324BE <AmiBlitz3.ab3@23152>   BSR writelong
000324C2 <AmiBlitz3.ab3@23153>   MOVE.w 4(a3),d1
000324C6 <AmiBlitz3.ab3@23154>   BSR writeword
000324CA <AmiBlitz3.ab3@23155>   MOVEM.l (a7)+,a4/d0
000324CE <AmiBlitz3.ab3@23156> BRA JL_0_D442
000324D0 <AmiBlitz3.ab3@23159>   MOVE.l A4,-(A7)
000324D4 <AmiBlitz3.ab3@23160>    CMP.w #6,d6
000324D8 <AmiBlitz3.ab3@23161>    BLT 'l10
000324DC <AmiBlitz3.ab3@23162>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
000324DE <AmiBlitz3.ab3@23163>    ADD.w d6,d1
000324E4 <AmiBlitz3.ab3@23164>    JSR Atokejsr
000324EA <AmiBlitz3.ab3@23165>    TST.w dontwrite
000324EE <AmiBlitz3.ab3@23166>    BNE 'l10
000324F4 <AmiBlitz3.ab3@23167>    MOVE.l data1start,d1
000324FA <AmiBlitz3.ab3@23168>    MOVE.l destpointer,a4
000324FE <AmiBlitz3.ab3@23169>    ADD.l d1,-6(a4)
00032504 <AmiBlitz3.ab3@23170>    MOVE.l destpointer,d1
00032506 <AmiBlitz3.ab3@23171>    SUBQ.l #6,d1
0003250C <AmiBlitz3.ab3@23172>    SUB.l destbufferstart,d1
0003250E <AmiBlitz3.ab3@23174>    MOVE.l d2,-(a7)
00032510 <AmiBlitz3.ab3@23175>    MOVE.l d1,d2
00032516 <AmiBlitz3.ab3@23176>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032518 <AmiBlitz3.ab3@23177>    MOVE.l (a7)+,d2
0003251E <AmiBlitz3.ab3@23178>    MOVE.l destpointer,a4
00032522 <AmiBlitz3.ab3@23179>    CMP.w #2,d2
00032526 <AmiBlitz3.ab3@23180>    BNE 'nw1
0003252C <AmiBlitz3.ab3@23182>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00032534 <AmiBlitz3.ab3@23183>    ADD.l #2,-6(a4)
00032538 <AmiBlitz3.ab3@23186>    CMP.w #1,d2
0003253C <AmiBlitz3.ab3@23187>    BNE 'nb
00032542 <AmiBlitz3.ab3@23188>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
0003254A <AmiBlitz3.ab3@23189>    ADD.l #3,-6(a4)
00032550 <AmiBlitz3.ab3@23192>    MOVE.w $4(a3),-2(a4)
00032554 <AmiBlitz3.ab3@23193> BRA 'ne1
00032558 <AmiBlitz3.ab3@23196>   BSR.w writeword                                          ;write storeparameter
0003255C <AmiBlitz3.ab3@23199>   MOVE.w $4(A3),D1
00032560 <AmiBlitz3.ab3@23200>    BSR.w writeword
00032562 <AmiBlitz3.ab3@23203>   MOVEA.l (A7)+,A4
00032568 <AmiBlitz3.ab3@23206>   CLR.l functionreturntype
0003256A <AmiBlitz3.ab3@23207>   ADDQ.w #1,D6
0003256E <AmiBlitz3.ab3@23208>   CMP.w #11,D6                                             ;max function parameters
00032572 <AmiBlitz3.ab3@23209>    BCC.w JUMP_toovarerr
00032578 <AmiBlitz3.ab3@23210>   MOVE.l currentfunction,a0
0003257C <AmiBlitz3.ab3@23211>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
0003257E <AmiBlitz3.ab3@23212>   MOVE.b D2,(A4)+
00032582 <AmiBlitz3.ab3@23213>   CMP.w #$2C,D0
00032586 <AmiBlitz3.ab3@23214>    BNE.w JL_0_D45E
0003258C <AmiBlitz3.ab3@23215>    JSR get1bytemain
00032590 <AmiBlitz3.ab3@23227> BRA.w JL_0_D3C6
00032594 <AmiBlitz3.ab3@23230>   CMP.w #$7D,D0
00032598 <AmiBlitz3.ab3@23231>    BNE.w JUMP_syntaxerr
0003259E <AmiBlitz3.ab3@23234>   MOVEA.l currentfunction,A2
000325A0 <AmiBlitz3.ab3@23235>   LSL.w #4,D5
000325A2 <AmiBlitz3.ab3@23236>   OR.w D5,D6
000325A6 <AmiBlitz3.ab3@23237>   MOVE.b D6,$4(A2)
000325A8 <AmiBlitz3.ab3@23238>   LSR.w #4,D6
000325AC <AmiBlitz3.ab3@23239>    BEQ.w JL_0_D4C4
000325B2 <AmiBlitz3.ab3@23240>   LEA stbuff,A0
000325B4 <AmiBlitz3.ab3@23241>   SUBQ.w #1,D6
000325B6 <AmiBlitz3.ab3@23244>     MOVE.w D6,D1                                           ;function stringpars
000325B8 <AmiBlitz3.ab3@23245>     LSL.w #2,D1                                            ;stringsize was 2
000325BA <AmiBlitz3.ab3@23247>       LSL.w #1,d1
000325BC <AmiBlitz3.ab3@23248>       ADDQ.w #4,d1
000325BE <AmiBlitz3.ab3@23250>     ADDQ.w #8,D1
000325C4 <AmiBlitz3.ab3@23251>     MOVE.w D1,funcst+2
000325CA <AmiBlitz3.ab3@23252>     MOVE.l funcst,D1
000325CE <AmiBlitz3.ab3@23253>     BSR.w writelong
000325D0 <AmiBlitz3.ab3@23254>     MOVE.w (A0)+,D1
000325D4 <AmiBlitz3.ab3@23255>     CMP.b #5,d1
000325D8 <AmiBlitz3.ab3@23256>     BLE 's1
000325DC <AmiBlitz3.ab3@23257>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
000325E0 <AmiBlitz3.ab3@23258>     BSR writeinstruction
000325E2 <AmiBlitz3.ab3@23259>     MOVE.w D6,D1                                           ;function stringpars
000325E4 <AmiBlitz3.ab3@23260>     LSL.w #2,D1                                            ;stringsize was 2
000325E6 <AmiBlitz3.ab3@23262>       LSL.w #1,d1
000325E8 <AmiBlitz3.ab3@23264>     ADDQ.w #8,D1
000325EC <AmiBlitz3.ab3@23265>     BSR writeword
000325F0 <AmiBlitz3.ab3@23266>   BRA 's2
000325F6 <AmiBlitz3.ab3@23269>     OR.w movedna3,D1
000325FA <AmiBlitz3.ab3@23270>      BSR.w writeword
00032600 <AmiBlitz3.ab3@23273>     MOVE.w (A0)+,least+2
00032606 <AmiBlitz3.ab3@23274>     MOVE.l least,D1
0003260A <AmiBlitz3.ab3@23275>      BSR.w writelong
0003260C <AmiBlitz3.ab3@23276>     MOVE.l A0,-(A7)
00032610 <AmiBlitz3.ab3@23277>     MOVE.w #$C700,D1
00032614 <AmiBlitz3.ab3@23278>      BSR.w Atokejsr
00032616 <AmiBlitz3.ab3@23279>     MOVEA.l (A7)+,A0
0003261A <AmiBlitz3.ab3@23280>   DBF D6,JL_0_D482
00032620 <AmiBlitz3.ab3@23283> JMP get1bytemain
00032626 <AmiBlitz3.ab3@23287>   MOVE.w dontwrite,D1
0003262A <AmiBlitz3.ab3@23288>    BNE.w JL_0_D4F6
00032630 <AmiBlitz3.ab3@23289>   MOVE.l destpointer,-(A7)
00032636 <AmiBlitz3.ab3@23290>   MOVE.l A0,destpointer
0003263C <AmiBlitz3.ab3@23291>   MOVE.l linksize,D1
00032640 <AmiBlitz3.ab3@23292>    BSR.w writelong                                         ;writefunctions jumppos
00032646 <AmiBlitz3.ab3@23293>    TST.b fastfunc
0003264A <AmiBlitz3.ab3@23294>    BNE 'skip
0003264E <AmiBlitz3.ab3@23295>   MOVE.w #$CC00,D1
00032652 <AmiBlitz3.ab3@23296>    BSR.w tokejsr2                                          ;write clearvars
00032658 <AmiBlitz3.ab3@23299>   MOVE.l (A7)+,destpointer
0003265A <AmiBlitz3.ab3@23302> RTS
00032660 <AmiBlitz3.ab3@23306>   MOVEA.l currentfunction,A2
00032664 <AmiBlitz3.ab3@23307>   MOVEA.l $E(A2),A0
00032668 <AmiBlitz3.ab3@23308>   MOVE.w $6(A2),D1
0003266C <AmiBlitz3.ab3@23309>    BEQ.w JL_0_D538
00032672 <AmiBlitz3.ab3@23310>   MOVE.w D1,linksize+2
00032676 <AmiBlitz3.ab3@23311>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
0003267A <AmiBlitz3.ab3@23312>    BNE.w JL_0_D522
0003267C <AmiBlitz3.ab3@23313>   ADDQ.w #6,A0
00032680 <AmiBlitz3.ab3@23314>   MOVE.l A0,$E(A2)
00032684 <AmiBlitz3.ab3@23315> BRA.w JL_0_D4C8
00032686 <AmiBlitz3.ab3@23318>   MOVE.l A0,-(A7)
0003268A <AmiBlitz3.ab3@23319>    BSR.w JL_0_D4C8
0003268C <AmiBlitz3.ab3@23320>   MOVEA.l (A7)+,A0
00032690 <AmiBlitz3.ab3@23321>   LEA $A(A0),A0
00032696 <AmiBlitz3.ab3@23322>   MOVEA.l currentfunction,A2
0003269A <AmiBlitz3.ab3@23323> BRA.w JL_0_D54A
0003269E <AmiBlitz3.ab3@23326>   MOVE.w $8(A2),D1
000326A2 <AmiBlitz3.ab3@23327>    BNE.w JL_0_D54A
000326A6 <AmiBlitz3.ab3@23328>   LEA $10(A0),A0
000326AA <AmiBlitz3.ab3@23329>   MOVE.l A0,$E(A2)
000326AC <AmiBlitz3.ab3@23330> RTS
000326B2 <AmiBlitz3.ab3@23334> JMP errormsg_nofast
000326B8 <AmiBlitz3.ab3@23337>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
000326BC <AmiBlitz3.ab3@23338>    BNE.w JL_0_D580
000326C2 <AmiBlitz3.ab3@23339>    TST.b fastfunc
000326C6 <AmiBlitz3.ab3@23340>    BNE JUMP_errormsg_nofast
000326CC <AmiBlitz3.ab3@23341>   MOVE.l destpointer,-(A7)
000326D2 <AmiBlitz3.ab3@23342>   MOVE.l A0,destpointer
000326D6 <AmiBlitz3.ab3@23343>   MOVE.w #$4EB9,D1
000326DA <AmiBlitz3.ab3@23344>    BSR.w writeword
000326E0 <AmiBlitz3.ab3@23345>    JSR addoff
000326E4 <AmiBlitz3.ab3@23346>    BSR.w writelong
000326E6 <AmiBlitz3.ab3@23347>   MOVEA.l (A7)+,A0
000326EC <AmiBlitz3.ab3@23348>   MOVEA.l destpointer,A1
000326EE <AmiBlitz3.ab3@23349>   MOVE.l A0,-(A1)
000326F4 <AmiBlitz3.ab3@23350>   MOVE.l A0,destpointer
000326F8 <AmiBlitz3.ab3@23353>   MOVE.w $8(A2),D4
000326FC <AmiBlitz3.ab3@23354>    BPL.w JL_0_D59E
00032700 <AmiBlitz3.ab3@23355>   MOVE.w #$C004,D1
00032704 <AmiBlitz3.ab3@23356>    BSR.w tokejsr2
0003270A <AmiBlitz3.ab3@23357>   MOVEA.l currentfunction,A2
0003270E <AmiBlitz3.ab3@23358>   MOVE.w $8(A2),D4
00032712 <AmiBlitz3.ab3@23359>   ANDI.w #$7FFF,D4
00032716 <AmiBlitz3.ab3@23362>    BEQ.w JL_0_D5E0
0003271A <AmiBlitz3.ab3@23363>   MOVE.b $4(A2),D1
0003271E <AmiBlitz3.ab3@23364>   ANDI.w #$F,D1
00032720 <AmiBlitz3.ab3@23365>   MOVE.w D1,-(A7)
00032724 <AmiBlitz3.ab3@23366>   CMP.w #$5,D1
00032728 <AmiBlitz3.ab3@23367>    BCS.w JL_0_D5BC
0003272C <AmiBlitz3.ab3@23368>   MOVE.w #$2F04,D1
00032730 <AmiBlitz3.ab3@23369>    BSR.w writeword
00032736 <AmiBlitz3.ab3@23372>   MOVE.l locdatast,D3
0003273C <AmiBlitz3.ab3@23373>    JSR datastart
00032740 <AmiBlitz3.ab3@23374>   MOVE.w #$C501,D1
00032744 <AmiBlitz3.ab3@23375>    BSR.w tokejsr2
00032746 <AmiBlitz3.ab3@23376>   MOVE.w (A7)+,D1
0003274A <AmiBlitz3.ab3@23377>   CMP.w #$5,D1
0003274E <AmiBlitz3.ab3@23378>    BCS.w JL_0_D5E0
00032752 <AmiBlitz3.ab3@23379>   MOVE.w #$281F,D1
00032756 <AmiBlitz3.ab3@23380>    BSR.w writeword
0003275A <AmiBlitz3.ab3@23382>   MOVE.w #$4E75,D1
0003275E <AmiBlitz3.ab3@23383> BRA.w writeword
00032764 <AmiBlitz3.ab3@23387>   LEA mwait,A0
0003276A <AmiBlitz3.ab3@23388>   LEA mwaitf,A1
0003276E <AmiBlitz3.ab3@23389> BRA.w pokecode
00032774 <AmiBlitz3.ab3@23393> JMP laberr
00032778 <AmiBlitz3.ab3@23396>   CMP.w #$2E,D0
0003277C <AmiBlitz3.ab3@23397>   BNE.w JUMP_syntaxerr
00032782 <AmiBlitz3.ab3@23398>   JSR getparameter2
00032786 <AmiBlitz3.ab3@23399>   BEQ.w JUMP_laberr
0003278C <AmiBlitz3.ab3@23400>   LEA newtypebase,A2
00032792 <AmiBlitz3.ab3@23401>   JSR findtype
00032796 <AmiBlitz3.ab3@23402>   BNE.w JL_0_D626
0003279E <AmiBlitz3.ab3@23403>   CMPI.l #MaxByte,$4(A2)
000327A2 <AmiBlitz3.ab3@23404>   BNE.w JUMP_typeerr
000327A6 <AmiBlitz3.ab3@23405> BRA.w JL_0_D62A
000327AC <AmiBlitz3.ab3@23408> JMP typeerr
000327B2 <AmiBlitz3.ab3@23411>   JSR addlabel
000327B6 <AmiBlitz3.ab3@23414>   CLR.l $4(A2)
000327BC <AmiBlitz3.ab3@23415>   MOVE.l A2,thistype
000327C2 <AmiBlitz3.ab3@23416>   CLR.l prevtype
000327C8 <AmiBlitz3.ab3@23417>   CLR.w typelen
000327CE <AmiBlitz3.ab3@23418>   CLR.w linemode
000327D4 <AmiBlitz3.ab3@23419>   JSR reget
000327D8 <AmiBlitz3.ab3@23420>   BNE.w typemode
000327DA <AmiBlitz3.ab3@23421> RTS
000327DE <AmiBlitz3.ab3@23424>   CMP.w #-$7FFE,D0
000327E2 <AmiBlitz3.ab3@23425>   BEQ.w JL_0_D82E
000327EC <AmiBlitz3.ab3@23427>   MOVE.w oldqflag,instringon
000327F2 <AmiBlitz3.ab3@23428>   MOVEA.l lastsourcepos,A5
000327F4 <AmiBlitz3.ab3@23429>   MOVEQ.l #$00,D6
000327F8 <AmiBlitz3.ab3@23430>   CMP.w #$2A,D0
000327FC <AmiBlitz3.ab3@23431>   BNE.w JL_0_D670
000327FE <AmiBlitz3.ab3@23432>   MOVEQ.l #$01,D6
00032804 <AmiBlitz3.ab3@23433>   JSR get1bytemain
00032808 <AmiBlitz3.ab3@23434> BRA.w JL_0_D67E
0003280C <AmiBlitz3.ab3@23437>   CMP.w #$40,D0
00032810 <AmiBlitz3.ab3@23438>   BNE.w JL_0_D67E
00032812 <AmiBlitz3.ab3@23439>   MOVEQ.l #$05,D6
00032818 <AmiBlitz3.ab3@23440>   JSR get1bytemain
0003281E <AmiBlitz3.ab3@23443>   MOVE.w D6,flagmask
00032824 <AmiBlitz3.ab3@23444>   JSR getparameter2
00032828 <AmiBlitz3.ab3@23445>   BEQ.w JUMP_syntaxerr
0003282E <AmiBlitz3.ab3@23446>   MOVEA.l thistype,A2
00032830 <AmiBlitz3.ab3@23447>   ADDQ.w #4,A2
00032836 <AmiBlitz3.ab3@23448>   JSR findvariable2
0003283A <AmiBlitz3.ab3@23449>   BEQ.w JUMP_dupofferr
00032840 <AmiBlitz3.ab3@23450>   JSR addlabel
00032842 <AmiBlitz3.ab3@23451>   MOVE.l A2,-(A7)
00032846 <AmiBlitz3.ab3@23452>   CMP.w #$2E,D0
0003284A <AmiBlitz3.ab3@23453>    BEQ.w JL_0_D6CE
0003284E <AmiBlitz3.ab3@23454>   CMP.w #$24,D0
00032852 <AmiBlitz3.ab3@23455>    BNE.w JL_0_D6C0
00032858 <AmiBlitz3.ab3@23456>   MOVE.l #newtype_string,D2
0003285E <AmiBlitz3.ab3@23457>    JSR get1bytemain
00032862 <AmiBlitz3.ab3@23458> BRA.w JL_0_D710
00032868 <AmiBlitz3.ab3@23461> JMP dupofferr
0003286E <AmiBlitz3.ab3@23464>   MOVE.l prevtype,D2
00032872 <AmiBlitz3.ab3@23465>   BEQ.w JUMP_notypeerr
00032876 <AmiBlitz3.ab3@23466> BRA.w JL_0_D706
0003287C <AmiBlitz3.ab3@23469> JMP notypeerr
00032882 <AmiBlitz3.ab3@23472>   JSR getparameter2
00032886 <AmiBlitz3.ab3@23473>    BEQ.w JUMP_syntaxerr
0003288C <AmiBlitz3.ab3@23474>   LEA newtypebase,A2
00032892 <AmiBlitz3.ab3@23475>    JSR findtype
00032896 <AmiBlitz3.ab3@23476>    BEQ.w JL_0_D704
0003289E <AmiBlitz3.ab3@23477>   BTST #$0,flagmask+1
000328A2 <AmiBlitz3.ab3@23478>    BEQ.w JUMP_notypeerr
000328A8 <AmiBlitz3.ab3@23479>   JSR addlabel
000328B0 <AmiBlitz3.ab3@23482>   MOVE.w linenumat+2,$8(A2)
000328B8 <AmiBlitz3.ab3@23483>   MOVE.l #MaxByte,$4(A2)
000328BA <AmiBlitz3.ab3@23486>   MOVE.l A2,D2
000328C0 <AmiBlitz3.ab3@23489>   CMP.l #newtype_byte,D2
000328C4 <AmiBlitz3.ab3@23490>    BEQ.w JL_0_D71E
000328CA <AmiBlitz3.ab3@23493>   ADDQ.w #1,typelen
000328D2 <AmiBlitz3.ab3@23494>   BCLR #$0,typelen+1
000328D4 <AmiBlitz3.ab3@23497>   MOVEQ.l #$00,D3
000328D6 <AmiBlitz3.ab3@23498>   MOVEA.l D2,A2
000328DC <AmiBlitz3.ab3@23499>   MOVE.l A2,prevtype
000328E0 <AmiBlitz3.ab3@23500>   MOVE.w $8(A2),D3
000328E2 <AmiBlitz3.ab3@23501>   MOVEA.l (A7)+,A2
000328E6 <AmiBlitz3.ab3@23502>   MOVE.l D2,$A(A2)
000328E8 <AmiBlitz3.ab3@23503>   MOVEQ.l #$00,D4
000328EE <AmiBlitz3.ab3@23504>   MOVE.w typelen,D4
000328F2 <AmiBlitz3.ab3@23505>   MOVE.w D4,$4(A2)
000328FA <AmiBlitz3.ab3@23506>   BTST #$0,flagmask+1
000328FE <AmiBlitz3.ab3@23507>    BEQ.w JL_0_D74C
00032900 <AmiBlitz3.ab3@23508>   MOVEQ.l #$04,D3
00032904 <AmiBlitz3.ab3@23511>   CMP.w #$5B,D0
00032908 <AmiBlitz3.ab3@23512>    BNE.w JL_0_D782
0003290C <AmiBlitz3.ab3@23513>   MOVEM.l D3-D4/A2,-(A7)
00032910 <AmiBlitz3.ab3@23514>    BSR.w AJL_0_BF6E
00032914 <AmiBlitz3.ab3@23515>   CMP.w #$5D,D0
00032918 <AmiBlitz3.ab3@23516>    BNE.w JUMP_syntaxerr
0003291A <AmiBlitz3.ab3@23517>   TST.w D6
0003291E <AmiBlitz3.ab3@23518>    BNE.w JUMP_fpconerr
00032920 <AmiBlitz3.ab3@23519>   MOVE.l D3,D1
00032924 <AmiBlitz3.ab3@23520>   MOVEM.l (A7)+,D3-D4/A2
0003292A <AmiBlitz3.ab3@23521>    JSR get1bytemain
0003292E <AmiBlitz3.ab3@23522>   MOVE.w D1,$8(A2)
00032932 <AmiBlitz3.ab3@23523>   MULU.l d1,d3                                             ;>32k fix was mulu.w
0003293A <AmiBlitz3.ab3@23524>   ORI.w #$2,flagmask
0003293C <AmiBlitz3.ab3@23527>   ADD.l D3,D4
00032942 <AmiBlitz3.ab3@23530>     CMP.l #65532,d4
00032946 <AmiBlitz3.ab3@23535>   BCC JUMP_toolongerr
0003294E <AmiBlitz3.ab3@23536>   MOVE.w flagmask,$6(A2)
00032954 <AmiBlitz3.ab3@23537>   MOVE.w D4,typelen
00032956 <AmiBlitz3.ab3@23538> RTS
0003295C <AmiBlitz3.ab3@23541> JMP badenderr
00032962 <AmiBlitz3.ab3@23544> JMP noiferr
00032968 <AmiBlitz3.ab3@23547> JMP toolongerr
0003296E <AmiBlitz3.ab3@23550> JMP fpconerr
00032974 <AmiBlitz3.ab3@23553>   MOVE.l firstiff,D0
00032978 <AmiBlitz3.ab3@23554>    BEQ.w JUMP_noiferr
0003297A <AmiBlitz3.ab3@23555>   MOVEA.l D0,A0
0003297E <AmiBlitz3.ab3@23556>   MOVE.w $C(A0),D0
00032982 <AmiBlitz3.ab3@23557>   ANDI.w #$FF,D0
00032984 <AmiBlitz3.ab3@23558>   CMP.w D0,D1
00032988 <AmiBlitz3.ab3@23559>    BNE.w JUMP_badenderr
0003298C <AmiBlitz3.ab3@23562>   CMP.w #$1,D1
00032990 <AmiBlitz3.ab3@23563>   BNE.w JL_0_D7D8
00032994 <AmiBlitz3.ab3@23564>   MOVE.w #$6000,D1
0003299A <AmiBlitz3.ab3@23567>     TST.b fast
0003299E <AmiBlitz3.ab3@23568>     BEQ 'l1
000329A4 <AmiBlitz3.ab3@23569>     OR.l #$ff,d1
000329A8 <AmiBlitz3.ab3@23573>   BSR.w writeword
000329AE <AmiBlitz3.ab3@23574>   MOVEA.l destpointer,A1
000329B2 <AmiBlitz3.ab3@23575>   MOVE.l $4(A0),D1
000329B4 <AmiBlitz3.ab3@23576>   SUB.l A1,D1
000329BA <AmiBlitz3.ab3@23579>     TST.b fast
000329BE <AmiBlitz3.ab3@23580>     BEQ 'l2
000329C2 <AmiBlitz3.ab3@23581>     BSR writelong
000329C6 <AmiBlitz3.ab3@23582>   BRA JL_0_D7D8
000329CA <AmiBlitz3.ab3@23586>   BSR.w writeword
000329CE <AmiBlitz3.ab3@23589>   MOVEA.l $8(A0),A1                                        ;write if branch destination
000329D4 <AmiBlitz3.ab3@23590>   MOVE.l destpointer,D1
000329D6 <AmiBlitz3.ab3@23591>   SUB.l A1,D1
000329DC <AmiBlitz3.ab3@23594>     TST.b fast
000329E0 <AmiBlitz3.ab3@23595>     BEQ 'l1
000329E2 <AmiBlitz3.ab3@23596>     ADDQ.l #4,D1
000329E8 <AmiBlitz3.ab3@23597>     MOVE.w dontwrite,D0
000329EC <AmiBlitz3.ab3@23598>     BNE.w JL_0_D7FE
000329F0 <AmiBlitz3.ab3@23599>     MOVE.l d1,-$4(a1)
000329F4 <AmiBlitz3.ab3@23600>   BRA JL_0_D7FE
000329F6 <AmiBlitz3.ab3@23604>   ADDQ.l #2,d1
000329FC <AmiBlitz3.ab3@23605>   TST.w dontwrite
00032A00 <AmiBlitz3.ab3@23606>   BNE JL_0_D7FE
00032A06 <AmiBlitz3.ab3@23607>   CMP.l #MinWordSgnd,D1
00032A0A <AmiBlitz3.ab3@23608>   BCC.w JUMP_bigiferr
00032A0E <AmiBlitz3.ab3@23609>   MOVE.w D1,-$2(A1)
00032A10 <AmiBlitz3.ab3@23612> RTS
00032A16 <AmiBlitz3.ab3@23615> JMP bigiferr
00032A20 <AmiBlitz3.ab3@23620>   MOVE.w oldqflag,instringon
00032A26 <AmiBlitz3.ab3@23621>   MOVEA.l lastsourcepos,A5
00032A28 <AmiBlitz3.ab3@23624>   MOVEQ.l #$01,D1
00032A2C <AmiBlitz3.ab3@23625> BRA.w JL_0_D810
00032A36 <AmiBlitz3.ab3@23629>   MOVE.w oldqflag,instringon
00032A3C <AmiBlitz3.ab3@23630>   MOVEA.l lastsourcepos,A5
00032A3E <AmiBlitz3.ab3@23633>   MOVEQ.l #$00,D1
00032A42 <AmiBlitz3.ab3@23636>   BSR.w JL_0_D79E
00032A46 <AmiBlitz3.ab3@23637>   BSR.w AJL_0_D81C
00032A4C <AmiBlitz3.ab3@23638> JMP get1bytemain
00032A52 <AmiBlitz3.ab3@23641>   MOVE.l (A0),firstiff
00032A54 <AmiBlitz3.ab3@23642>   MOVEA.l A0,A1
00032A56 <AmiBlitz3.ab3@23643>   MOVEQ.l #$0E,D0
00032A5C <AmiBlitz3.ab3@23644>   MOVEA.l _execbase,A6
00032A62 <AmiBlitz3.ab3@23645>   MOVE.l mempool,a0
00032A66 <AmiBlitz3.ab3@23646> JMP _FreePooled(A6)
00032A6C <AmiBlitz3.ab3@23650>   JSR get1bytemain
00032A70 <AmiBlitz3.ab3@23653>   BEQ.w JL_0_D980
00032A78 <AmiBlitz3.ab3@23654>   CMP.l #"noa7",-1(a5)
00032A7C <AmiBlitz3.ab3@23655>   BNE 'l1
00032A82 <AmiBlitz3.ab3@23656>   JSR get1bytemain
00032A88 <AmiBlitz3.ab3@23657>   JSR get1bytemain
00032A8E <AmiBlitz3.ab3@23658>   JSR get1bytemain
00032A96 <AmiBlitz3.ab3@23659>   MOVE.w #$3a,lastchar
00032A9A <AmiBlitz3.ab3@23660> BRA JL_0_D980
00032AA0 <AmiBlitz3.ab3@23663>   CMP.w #"d0",-1(a5)
00032AA4 <AmiBlitz3.ab3@23664>   BNE 'l2
00032AAC <AmiBlitz3.ab3@23665>   MOVE.b #1,returncode
00032AB2 <AmiBlitz3.ab3@23666>   CLR.w lastchar
00032AB6 <AmiBlitz3.ab3@23667> BRA JL_0_D980
00032ABA <AmiBlitz3.ab3@23670>   CMP.w #$80d7,d0
00032ABE <AmiBlitz3.ab3@23671>   BNE JL_0_D836
00032AC4 <AmiBlitz3.ab3@23672>   JSR skiprest
00032AC6 <AmiBlitz3.ab3@23673> RTS
00032ACA <AmiBlitz3.ab3@23676>   BSR.w JL_0_D844
00032AD0 <AmiBlitz3.ab3@23677>   JSR reget
00032AD4 <AmiBlitz3.ab3@23678>   BNE.w JL_0_D836
00032AD6 <AmiBlitz3.ab3@23679> RTS
00032ADA <AmiBlitz3.ab3@23682>   CMP.w #-$7FFF,D0
00032ADE <AmiBlitz3.ab3@23683>    BNE.w JL_0_D87E
00032AE4 <AmiBlitz3.ab3@23684>   MOVE.w linemode,D1
00032AE8 <AmiBlitz3.ab3@23685>    BNE.w JUMP_modeerr
00032AEE <AmiBlitz3.ab3@23686>   ADDQ.w #1,typelen
00032AF6 <AmiBlitz3.ab3@23687>   BCLR #$0,typelen+1
00032AFC <AmiBlitz3.ab3@23688>   MOVEA.l thistype,A0
00032B04 <AmiBlitz3.ab3@23689>   MOVE.w typelen,$8(A0)
00032B0C <AmiBlitz3.ab3@23690>   MOVE.w #$FFFF,linemode
00032B12 <AmiBlitz3.ab3@23691> JMP get1bytemain
00032B18 <AmiBlitz3.ab3@23694> JMP modeerr
00032B1C <AmiBlitz3.ab3@23697>   CMP.w #-$7FF5,D0
00032B20 <AmiBlitz3.ab3@23698>    BEQ.w JL_0_D80E
00032B24 <AmiBlitz3.ab3@23699>   CMP.w #-$7FF4,D0
00032B28 <AmiBlitz3.ab3@23700>    BEQ.w JL_0_D804
00032B2C <AmiBlitz3.ab3@23701>   CMP.w #-$7FF8,D0
00032B30 <AmiBlitz3.ab3@23702>    BNE.w JL_0_D89A
00032B34 <AmiBlitz3.ab3@23705> BRA.w JL_0_D9E8
00032B3A <AmiBlitz3.ab3@23708> JMP interr3
00032B3E <AmiBlitz3.ab3@23711>   CMP.w #-$7FF7,D0
00032B42 <AmiBlitz3.ab3@23712>    BNE.w JL_0_D8C8
00032B48 <AmiBlitz3.ab3@23713>    TST.b fpu
00032B4C <AmiBlitz3.ab3@23714>    BEQ 'nof
00032B52 <AmiBlitz3.ab3@23715>    MOVEA.l currentfunction,A0
00032B58 <AmiBlitz3.ab3@23716>    CMP.l #0,a0
00032B5C <AmiBlitz3.ab3@23717>    BEQ 'nof
00032B62 <AmiBlitz3.ab3@23718>    CMP.b #5,$5(a0)
00032B66 <AmiBlitz3.ab3@23719>     BNE 'nof
00032B6C <AmiBlitz3.ab3@23720>    MOVE.l #$f23c5000,d1
00032B70 <AmiBlitz3.ab3@23721>    BSR writelong
00032B74 <AmiBlitz3.ab3@23722>    MOVE.w #0,d1
00032B78 <AmiBlitz3.ab3@23723>    BSR writeword
00032B7C <AmiBlitz3.ab3@23726>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00032B80 <AmiBlitz3.ab3@23727>    BSR.w writeword
00032B86 <AmiBlitz3.ab3@23728>   MOVEA.l currentfunction,A0
00032B8C <AmiBlitz3.ab3@23729>   CMP.l #0,a0
00032B90 <AmiBlitz3.ab3@23730>   BEQ JL_0_D896
00032B96 <AmiBlitz3.ab3@23731>   MOVE.l destpointer,d1
00032B9A <AmiBlitz3.ab3@23732>   SUB.l $e(a0),d1
00032B9E <AmiBlitz3.ab3@23733>   MOVE.l d1,isfunc+1(a0)
00032BA4 <AmiBlitz3.ab3@23734>   CMPI.b #$7,$5(A0)
00032BA8 <AmiBlitz3.ab3@23735>    BNE.w JL_0_D896
00032BAE <AmiBlitz3.ab3@23736>   MOVE.w putstlen,D1
00032BB2 <AmiBlitz3.ab3@23737>    BSR.w writeword
00032BB6 <AmiBlitz3.ab3@23738> BRA.w JL_0_D896
00032BBC <AmiBlitz3.ab3@23741> JMP interr
00032BC0 <AmiBlitz3.ab3@23744>  CMP.w #-$7FD0,D0
00032BC4 <AmiBlitz3.ab3@23745>    BNE.w JL_0_D966
00032BCA <AmiBlitz3.ab3@23746>   MOVE.w proceduremode,D1
00032BCE <AmiBlitz3.ab3@23747>    BNE.w JUMP_interr3
00032BD4 <AmiBlitz3.ab3@23748>   TST.b debugmode
00032BD8 <AmiBlitz3.ab3@23749>    BEQ.w JL_0_D90A
00032BDA <AmiBlitz3.ab3@23750>   MOVEQ.l #$03,D1
00032BE0 <AmiBlitz3.ab3@23751>    JSR writetrap
00032BE6 <AmiBlitz3.ab3@23752>   MOVE.w dontwrite,D1
00032BEA <AmiBlitz3.ab3@23753>    BNE.w JL_0_D90A
00032BF0 <AmiBlitz3.ab3@23754>   MOVEA.l intcleanat,A0
00032BF6 <AmiBlitz3.ab3@23755>   MOVE.l destpointer,(A0)
00032BFA <AmiBlitz3.ab3@23756>   MOVE.w #$C30C,D1
00032BFE <AmiBlitz3.ab3@23757>    BSR.w Atokejsr
00032C04 <AmiBlitz3.ab3@23760>   MOVE.w intstring,D1
00032C08 <AmiBlitz3.ab3@23761>    BEQ.w JUMP_interr
00032C0C <AmiBlitz3.ab3@23762>    BPL.w JL_0_D934
00032C12 <AmiBlitz3.ab3@23763>   MOVE.w intlevel,D1
00032C16 <AmiBlitz3.ab3@23764>   ORI.w #$7200,D1
00032C1A <AmiBlitz3.ab3@23765>    BSR.w writeword
00032C1E <AmiBlitz3.ab3@23766>   MOVE.w #$C103,D1
00032C22 <AmiBlitz3.ab3@23767>    BSR.w Atokejsr
00032C28 <AmiBlitz3.ab3@23768>   CLR.w intlevel
00032C2E <AmiBlitz3.ab3@23771>  CLR.w intstring
00032C34 <AmiBlitz3.ab3@23772>   MOVE.l intfin,D1
00032C38 <AmiBlitz3.ab3@23773>    BSR.w writelong
00032C3E <AmiBlitz3.ab3@23774>   MOVE.l #$70004E75,D1
00032C42 <AmiBlitz3.ab3@23775>    BSR.w writelong
00032C48 <AmiBlitz3.ab3@23776>   MOVE.w dontwrite,D1
00032C4C <AmiBlitz3.ab3@23777>    BNE.w JL_0_D962
00032C52 <AmiBlitz3.ab3@23778>   MOVEA.l intjmpat,A0
00032C56 <AmiBlitz3.ab3@23779>   MOVE.l destpointer(PC),(A0)
00032C5C <AmiBlitz3.ab3@23782> JMP get1bytemain
00032C60 <AmiBlitz3.ab3@23786>   CMP.w #-$7FF2,D0
00032C64 <AmiBlitz3.ab3@23787>    BEQ.w doendsel
00032C68 <AmiBlitz3.ab3@23788>   CMP.w #-$7F4C,D0
00032C6C <AmiBlitz3.ab3@23789>    BNE.w JL_0_D97C
00032C72 <AmiBlitz3.ab3@23790> JMP doendseterr
00032C78 <AmiBlitz3.ab3@23794> JMP syntaxerr
00032C7E <AmiBlitz3.ab3@23798>   TST.w dirmode
00032C82 <AmiBlitz3.ab3@23799>   BNE.w JUMP_baddirerr
00032C86 <AmiBlitz3.ab3@23800>   MOVE.w #$C800,D1
00032C8C <AmiBlitz3.ab3@23801>   JSR Atokejsr                                            ;end
00032C94 <AmiBlitz3.ab3@23802>   CMP.l #"noa7",-4(a5)
00032C98 <AmiBlitz3.ab3@23803>   BNE 'l10
00032C9E <AmiBlitz3.ab3@23804>   TST.w dontwrite
00032CA2 <AmiBlitz3.ab3@23805>   BNE 'l10
00032CA8 <AmiBlitz3.ab3@23806>   MOVE.l destpointer,d1
00032CAA <AmiBlitz3.ab3@23807>   SUBQ.l #4,d1
00032CAC <AmiBlitz3.ab3@23808>   MOVE.l a0,-(a7)
00032CAE <AmiBlitz3.ab3@23809>   MOVE.l d1,a0
00032CB0 <AmiBlitz3.ab3@23810>   MOVE.l (a0),a0
00032CB6 <AmiBlitz3.ab3@23811>   MOVE.l #$60000002,(a0)+
00032CBA <AmiBlitz3.ab3@23812>   MOVE.w #$588f,(a0)
00032CBC <AmiBlitz3.ab3@23813>   MOVE.l (a7)+,a0
00032CBE <AmiBlitz3.ab3@23816> RTS
00032CC4 <AmiBlitz3.ab3@23820>   TST.w dirmode                                            ;stop
00032CC8 <AmiBlitz3.ab3@23821>   BNE.w JUMP_baddirerr
00032CCA <AmiBlitz3.ab3@23822>   MOVE.w d0,d1
00032CCE <AmiBlitz3.ab3@23823>   BEQ 'l10
00032CD2 <AmiBlitz3.ab3@23824>   CMP.b #$3a,d0
00032CD6 <AmiBlitz3.ab3@23825>   BEQ 'l10
00032CDC <AmiBlitz3.ab3@23826>   JSR get1bytemain
00032CE2 <AmiBlitz3.ab3@23829>   TST.b debugmode
00032CE6 <AmiBlitz3.ab3@23830>   BEQ.w newstop
00032CEA <AmiBlitz3.ab3@23831>   MOVE.w #$D501,D1
00032CEE <AmiBlitz3.ab3@23832> BRA.w Atokejsr
00032CF0 <AmiBlitz3.ab3@23836>     RTS
00032CF2 <AmiBlitz3.ab3@23838>   MOVE.w d1,d0
00032CF6 <AmiBlitz3.ab3@23839>   BEQ 'l10
00032CFA <AmiBlitz3.ab3@23840>   CMP.b #$3a,d0
00032CFE <AmiBlitz3.ab3@23841>   BEQ 'l10
00032D02 <AmiBlitz3.ab3@23842>   SUB.b #$30,d0
00032D06 <AmiBlitz3.ab3@23843>   MOVE.w #$4e40,d1
00032D0A <AmiBlitz3.ab3@23844> BRA 'l11
00032D0E <AmiBlitz3.ab3@23847>   MOVE.w #$4e4a,d1
00032D12 <AmiBlitz3.ab3@23848> BRA writeword
00032D14 <AmiBlitz3.ab3@23851>   ADD.b d0,d1
00032D18 <AmiBlitz3.ab3@23852> BRA writeword
00032D1E <AmiBlitz3.ab3@23856> JMP badconterr
00032D22 <AmiBlitz3.ab3@23859>   MOVE.w #$4E71,D1
00032D26 <AmiBlitz3.ab3@23860> BRA.w writeword
00032D2C <AmiBlitz3.ab3@23863>   MOVEA.l firstfor,A2
00032D32 <AmiBlitz3.ab3@23864>   CLR.l firstfor
00032D38 <AmiBlitz3.ab3@23865>   MOVEA.l _execbase,A6
00032D3C <AmiBlitz3.ab3@23868>   CMPA.w #$0,A2
00032D40 <AmiBlitz3.ab3@23869>   BEQ.w JL_0_D9E6
00032D42 <AmiBlitz3.ab3@23870>   MOVEA.l A2,A1
00032D44 <AmiBlitz3.ab3@23871>   MOVEA.l (A1),A2
00032D46 <AmiBlitz3.ab3@23872>   MOVEQ.l #$00,D0
00032D4C <AmiBlitz3.ab3@23873>   MOVE.l mempool2,a0
00032D50 <AmiBlitz3.ab3@23874>   MOVE.b $10(A1),D0
00032D54 <AmiBlitz3.ab3@23875>   JSR _FreePooled(A6)                                      ;freememfor_error
00032D58 <AmiBlitz3.ab3@23876> BRA.w JL_0_D9CC
00032D5A <AmiBlitz3.ab3@23879> RTS
00032D60 <AmiBlitz3.ab3@23883> JMP badpenderr
00032D66 <AmiBlitz3.ab3@23889>   MOVE.w proceduremode,D1
00032D6A <AmiBlitz3.ab3@23890>    BEQ.w JUMP_badpenderr
00032D70 <AmiBlitz3.ab3@23892>   MOVE.w dontwrite,D1
00032D74 <AmiBlitz3.ab3@23893>    BNE.w JL_0_DA1A
00032D7A <AmiBlitz3.ab3@23894>   MOVEA.l firstpend,A2
00032D7E <AmiBlitz3.ab3@23897>   CMPA.w #$0,A2
00032D82 <AmiBlitz3.ab3@23898>    BEQ.w JL_0_DA1A
00032D86 <AmiBlitz3.ab3@23899>   MOVEA.l $4(A2),A0
00032D8C <AmiBlitz3.ab3@23900>   MOVE.l destpointer,(A0)
00032D8E <AmiBlitz3.ab3@23901>   MOVEA.l (A2),A2
00032D92 <AmiBlitz3.ab3@23902> BRA.w JL_0_DA02
00032D98 <AmiBlitz3.ab3@23905>   TST.b debugmode
00032D9C <AmiBlitz3.ab3@23906>    BEQ.b JL_0_DA2A
00032D9E <AmiBlitz3.ab3@23907>   MOVEQ.l #$05,D1
00032DA4 <AmiBlitz3.ab3@23908>   JSR writetrap
00032DAA <AmiBlitz3.ab3@23911>   MOVEA.l firstlocal,A2                                    ;firstlocal
00032DB0 <AmiBlitz3.ab3@23912>   JSR calcstatic2b                                           ;calcstatic
00032DB6 <AmiBlitz3.ab3@23913>   MOVEA.l currentfunction,A0
00032DBC <AmiBlitz3.ab3@23914>   MOVE.l destpointer,d1
00032DC0 <AmiBlitz3.ab3@23915>   SUB.l $e(a0),d1
00032DC4 <AmiBlitz3.ab3@23916>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00032DC8 <AmiBlitz3.ab3@23917>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00032DCE <AmiBlitz3.ab3@23918>   MOVE.l D3,locdatast
00032DD4 <AmiBlitz3.ab3@23919>   MOVEA.l tempvm,A1
00032DDA <AmiBlitz3.ab3@23920>  CLR.b infunctioncode
00032DE0 <AmiBlitz3.ab3@23921>   MOVE.l firstiffstore,d1
00032DE6 <AmiBlitz3.ab3@23922>   CMP.l firstiff,d1
00032DEA <AmiBlitz3.ab3@23923>   BNE JUMP_noenderr
00032DEE <AmiBlitz3.ab3@23924>   TST.w $C(A1)                                             ;dim
00032DF2 <AmiBlitz3.ab3@23925>    BPL.w JL_0_DA64
00032DF8 <AmiBlitz3.ab3@23926>  BSET #$7,$8(A0)
00032DFC <AmiBlitz3.ab3@23927>   MOVE.w #$C005,D1
00032E00 <AmiBlitz3.ab3@23928>    BSR.w tokejsr2                                          ;writefreememstatement
00032E04 <AmiBlitz3.ab3@23929> BRA.w JL_0_DA6C
00032E0A <AmiBlitz3.ab3@23932> JMP noenderr
00032E12 <AmiBlitz3.ab3@23935>   MOVE.w memlibstat,$C(A1)
00032E18 <AmiBlitz3.ab3@23938>   MOVEA.l currentfunction,A0
00032E1C <AmiBlitz3.ab3@23939>   MOVE.l $E(A0),-(A7)
00032E24 <AmiBlitz3.ab3@23940>   MOVE.w locvaroff,$6(A0)
00032E2A <AmiBlitz3.ab3@23941>   BCLR #$1,$7(A0)
00032E30 <AmiBlitz3.ab3@23942>   BCLR #$0,$7(A0)
00032E36 <AmiBlitz3.ab3@23943>   CMPI.b #$7,$5(A0)
00032E3A <AmiBlitz3.ab3@23944>    BNE.w JL_0_DA9E
00032E40 <AmiBlitz3.ab3@23945>   MOVE.w getstlen,D1
00032E44 <AmiBlitz3.ab3@23946>    BSR.w writeword
00032E48 <AmiBlitz3.ab3@23949>   TST.w $6(A0)
00032E4C <AmiBlitz3.ab3@23950>    BEQ.w JL_0_DAB8
00032E50 <AmiBlitz3.ab3@23951>   MOVE.w #$FC7B,D1
00032E56 <AmiBlitz3.ab3@23952>    JSR uselib
00032E5C <AmiBlitz3.ab3@23953>   MOVE.w unlinka4,D1
00032E60 <AmiBlitz3.ab3@23954>    BSR.w writeword
00032E66 <AmiBlitz3.ab3@23957>   MOVEA.l currentfunction,A0
00032E68 <AmiBlitz3.ab3@23958>   MOVEQ.l #$00,D1
00032E6C <AmiBlitz3.ab3@23959>   MOVE.b $4(A0),D1
00032E6E <AmiBlitz3.ab3@23960>   LSR.w #4,D1
00032E72 <AmiBlitz3.ab3@23961>    BEQ.w JL_0_DB24
00032E74 <AmiBlitz3.ab3@23963>      LSL.w #1,d1
00032E78 <AmiBlitz3.ab3@23965>   CMP.w #$1,D1
00032E7C <AmiBlitz3.ab3@23966>    BNE.w JL_0_DAE0
00032E82 <AmiBlitz3.ab3@23967>   MOVE.w fix1,D1
00032E86 <AmiBlitz3.ab3@23968>    BSR.w writeword
00032E8A <AmiBlitz3.ab3@23969> BRA.w JL_0_DB24
00032E8C <AmiBlitz3.ab3@23972>   LSL.w #2,D1
00032E8E <AmiBlitz3.ab3@23973>   MOVE.w D1,-(A7)
00032E94 <AmiBlitz3.ab3@23974>   MOVE.w D1,moverts+2
00032E9A <AmiBlitz3.ab3@23975>   MOVE.l moverts,D1
00032EA0 <AmiBlitz3.ab3@23976>    JSR writelong
00032EA2 <AmiBlitz3.ab3@23977>   MOVE.w (A7)+,D1
00032EA6 <AmiBlitz3.ab3@23978>   CMP.w #$8,D1
00032EAA <AmiBlitz3.ab3@23979>    BHI.w JL_0_DB14
00032EAE <AmiBlitz3.ab3@23980>   ANDI.w #$7,D1
00032EB0 <AmiBlitz3.ab3@23981>   LSL.w #8,D1
00032EB2 <AmiBlitz3.ab3@23982>   LSL.w #1,D1
00032EB8 <AmiBlitz3.ab3@23983>   OR.w fixq,D1
00032EBE <AmiBlitz3.ab3@23984>    JSR writeword
00032EC2 <AmiBlitz3.ab3@23985> BRA.w JL_0_DB24
00032EC8 <AmiBlitz3.ab3@23989>    MOVE.w D1,fixstack+2
00032ECE <AmiBlitz3.ab3@23990>   MOVE.l fixstack,D1
00032ED4 <AmiBlitz3.ab3@23991>    JSR writelong
00032ED8 <AmiBlitz3.ab3@23994>    BSR.w JL_0_D2CA
00032EDC <AmiBlitz3.ab3@23995>    BSR.w JL_0_D4F8
00032EDE <AmiBlitz3.ab3@23996>   MOVEA.l (A7)+,A0
00032EE4 <AmiBlitz3.ab3@23997>   MOVE.w dontwrite,D1
00032EE8 <AmiBlitz3.ab3@23998>    BNE.w JL_0_DB3E
00032EEE <AmiBlitz3.ab3@23999>   MOVE.l destpointer,-(A0)
00032EF4 <AmiBlitz3.ab3@24002>   CLR.w proceduremode
00032EFA <AmiBlitz3.ab3@24003>   CLR.l currentfunction
00032F00 <AmiBlitz3.ab3@24004>   CLR.w procnum
00032F04 <AmiBlitz3.ab3@24005>    BSR.w JL_0_DB5C
00032F0A <AmiBlitz3.ab3@24006>    JSR freepends
00032F10 <AmiBlitz3.ab3@24007> JMP get1bytemain
00032F12 <AmiBlitz3.ab3@24010>   MOVEQ.l #$0C,D0
00032F14 <AmiBlitz3.ab3@24011>   MOVEQ.l #$01,D1
00032F1A <AmiBlitz3.ab3@24012>   MOVEA.l _execbase,A6
00032F20 <AmiBlitz3.ab3@24014>   MOVE.l mempool,a0
00032F24 <AmiBlitz3.ab3@24015>   JSR _AllocPooled(a6)
00032F26 <AmiBlitz3.ab3@24016>   MOVEA.l D0,A0
00032F2C <AmiBlitz3.ab3@24017>   MOVE.l alllocals,(A0)
00032F32 <AmiBlitz3.ab3@24018>   MOVE.l A0,alllocals
00032F38 <AmiBlitz3.ab3@24019>   MOVE.l firstlocal,D0
00032F3E <AmiBlitz3.ab3@24020>   CLR.l firstlocal
00032F42 <AmiBlitz3.ab3@24021>   MOVE.l D0,$4(A0)
00032F48 <AmiBlitz3.ab3@24022>   MOVE.l firstglob,D1
00032F4E <AmiBlitz3.ab3@24023>   CLR.l firstglob
00032F52 <AmiBlitz3.ab3@24024>   MOVE.l D1,$8(A0)
00032F58 <AmiBlitz3.ab3@24025>   TST.b debugmode
00032F5C <AmiBlitz3.ab3@24026>    BEQ.b JL_0_DBB0
00032F62 <AmiBlitz3.ab3@24027>   TST.w dontwrite
00032F66 <AmiBlitz3.ab3@24028>    BNE.b JL_0_DBB0
00032F6A <AmiBlitz3.ab3@24029>   MOVEA.l proclocals(PC),A0
00032F6C <AmiBlitz3.ab3@24030>   MOVE.l D0,(A0)+
00032F6E <AmiBlitz3.ab3@24031>   MOVE.l D1,(A0)
00032F70 <AmiBlitz3.ab3@24034> RTS
00032F76 <AmiBlitz3.ab3@24037> JMP baddirerr
00032F7C <AmiBlitz3.ab3@24041>   TST.w dirmode
00032F80 <AmiBlitz3.ab3@24042>    BNE.w JUMP_baddirerr
00032F86 <AmiBlitz3.ab3@24043>   MOVE.l firstfor,D1
00032F8A <AmiBlitz3.ab3@24044>    BEQ.w JUMP_noforerr
00032F90 <AmiBlitz3.ab3@24045>   JSR reget
00032F94 <AmiBlitz3.ab3@24046>    BEQ.w JL_0_DC18
00032F98 <AmiBlitz3.ab3@24049>   BSR.w getparameter
00032F9C <AmiBlitz3.ab3@24050>   MOVEA.l firstfor(PC),A2
00032F9E <AmiBlitz3.ab3@24051>   MOVEQ.l #$00,D1
00032FA2 <AmiBlitz3.ab3@24052>   MOVE.b $10(A2),D1
00032FA6 <AmiBlitz3.ab3@24053>   SUBI.w #$12,D1
00032FA8 <AmiBlitz3.ab3@24054>   CMP.w D1,D2
00032FAC <AmiBlitz3.ab3@24055>    BNE.w JUMP_noforerr
00032FB0 <AmiBlitz3.ab3@24056>   LEA ptr_parameterstore(PC),A0
00032FB4 <AmiBlitz3.ab3@24057>   LEA $11(A2),A1
00032FB6 <AmiBlitz3.ab3@24058>   SUBQ.w #1,D2
00032FB8 <AmiBlitz3.ab3@24061>     CMPM.b (A0)+,(A1)+
00032FBC <AmiBlitz3.ab3@24062>     BNE.w JUMP_noforerr
00032FC0 <AmiBlitz3.ab3@24063>   DBF D2,JL_0_DBF0
00032FC4 <AmiBlitz3.ab3@24065>    BSR.w JL_0_DC1A
00032FCA <AmiBlitz3.ab3@24066>    JSR reget
00032FCE <AmiBlitz3.ab3@24067>    BEQ.w JL_0_DC16
00032FD2 <AmiBlitz3.ab3@24068>   CMP.w #$2C,D0
00032FD6 <AmiBlitz3.ab3@24069>    BNE.w JUMP_syntaxerr
00032FDC <AmiBlitz3.ab3@24070>    JSR get1bytemain
00032FE0 <AmiBlitz3.ab3@24071> BRA.w JL_0_DBCE
00032FE6 <AmiBlitz3.ab3@24074> JMP noforerr
00032FE8 <AmiBlitz3.ab3@24077> RTS
00032FEC <AmiBlitz3.ab3@24081>   MOVE.l 8(a7),a2
00032FF0 <AmiBlitz3.ab3@24082>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00032FF4 <AmiBlitz3.ab3@24083>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00032FF8 <AmiBlitz3.ab3@24084>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00032FFA <AmiBlitz3.ab3@24088>   MOVEA.l D1,A2
00033000 <AmiBlitz3.ab3@24091>   JSR popnext                                           ;error checking for next.
00033004 <AmiBlitz3.ab3@24092>   MOVE.w $C(A2),D0
0003300A <AmiBlitz3.ab3@24093>   LEA nextb,A0
00033010 <AmiBlitz3.ab3@24094>   LEA nextbf,A1
00033014 <AmiBlitz3.ab3@24095>   CMP.w #$1,D0
00033018 <AmiBlitz3.ab3@24096>    BEQ.w JL_0_DC74
0003301E <AmiBlitz3.ab3@24097>   LEA nextw,A0
00033024 <AmiBlitz3.ab3@24098>   LEA nextwf,A1
00033028 <AmiBlitz3.ab3@24099>   CMP.w #$2,D0
0003302C <AmiBlitz3.ab3@24100>    BEQ.w JL_0_DC74
00033032 <AmiBlitz3.ab3@24101>   LEA nextl,A0
00033038 <AmiBlitz3.ab3@24102>   LEA nextlf,A1
0003303C <AmiBlitz3.ab3@24103>   CMP.w #$5,D0
00033040 <AmiBlitz3.ab3@24104>    BNE.w JL_0_DC74
00033046 <AmiBlitz3.ab3@24105>    TST.b fpu
0003304A <AmiBlitz3.ab3@24106>    BEQ 'old
00033050 <AmiBlitz3.ab3@24107>    LEA fpu2dats,a0                                         ;fpu next code
00033056 <AmiBlitz3.ab3@24108>    LEA fpu2date,a1
0003305A <AmiBlitz3.ab3@24109> BRA JL_0_DC74
0003305E <AmiBlitz3.ab3@24112>   MOVE.w #$C900,D1
00033062 <AmiBlitz3.ab3@24113>    BSR.w Atokejsr
00033068 <AmiBlitz3.ab3@24114>   LEA nextf,A0
0003306E <AmiBlitz3.ab3@24115>   LEA nextff,A1
00033074 <AmiBlitz3.ab3@24118>   JSR pokecode
0003307A <AmiBlitz3.ab3@24119>     TST.b fast                                             ;fast for next deactivate
0003307E <AmiBlitz3.ab3@24120> BRA 'l1
00033084 <AmiBlitz3.ab3@24122>     TST.b onestep
00033088 <AmiBlitz3.ab3@24123>     BEQ 'l1
0003308E <AmiBlitz3.ab3@24124>     CLR.b onestep
00033094 <AmiBlitz3.ab3@24125>     SUBQ.l #4,destpointer
00033098 <AmiBlitz3.ab3@24126>     MOVE.w #$5292,d1
0003309E <AmiBlitz3.ab3@24127>     JSR writeword
000330A2 <AmiBlitz3.ab3@24130>   MOVE.l JL_0_DCF4(PC),D1
000330A8 <AmiBlitz3.ab3@24131>    JSR writelong
000330AE <AmiBlitz3.ab3@24132>   MOVEA.l firstfor,A2
000330B4 <AmiBlitz3.ab3@24133>   MOVE.l (A2),firstfor
000330B8 <AmiBlitz3.ab3@24134>   MOVEA.l $8(A2),A0
000330BE <AmiBlitz3.ab3@24135>   MOVEA.l destpointer,A1
000330C0 <AmiBlitz3.ab3@24136>   MOVE.l A1,D1
000330C2 <AmiBlitz3.ab3@24137>   SUB.l A0,D1
000330C4 <AmiBlitz3.ab3@24138>   ADDQ.l #2,D1
000330CA <AmiBlitz3.ab3@24139>   CMP.l #MinWordSgnd,D1
000330CE <AmiBlitz3.ab3@24140>    BCC.w JUMP_bigforerr
000330D4 <AmiBlitz3.ab3@24141>   TST.w dontwrite
000330D8 <AmiBlitz3.ab3@24142>    BNE.w JL_0_DCB4
000330DC <AmiBlitz3.ab3@24143>   MOVE.w D1,-$2(A0)
000330DE <AmiBlitz3.ab3@24146>   MOVE.l A1,D1
000330E2 <AmiBlitz3.ab3@24147>   SUB.l $4(A2),D1
000330E4 <AmiBlitz3.ab3@24148>   SUBQ.l #6,D1
000330EA <AmiBlitz3.ab3@24149>   CMP.l #MinWordSgnd,D1
000330EE <AmiBlitz3.ab3@24150>    BCC.w JUMP_bigforerr
000330F4 <AmiBlitz3.ab3@24151>   TST.w dontwrite
000330F8 <AmiBlitz3.ab3@24152>    BNE.w JL_0_DCD6
000330FA <AmiBlitz3.ab3@24153>   NEG.w D1
000330FE <AmiBlitz3.ab3@24154>   MOVE.w D1,-$2(A1)
00033104 <AmiBlitz3.ab3@24157>   JSR popnext3
0003310A <AmiBlitz3.ab3@24158>   MOVEA.l _execbase,A6
0003310C <AmiBlitz3.ab3@24159>   MOVEA.l A2,A1
0003310E <AmiBlitz3.ab3@24160>   MOVEQ.l #$00,D0
00033112 <AmiBlitz3.ab3@24161>   MOVE.b $10(A1),D0
00033118 <AmiBlitz3.ab3@24162>   MOVE.l mempool2,a0
0003311C <AmiBlitz3.ab3@24163>   JSR _FreePooled(A6)
00033122 <AmiBlitz3.ab3@24164> JMP reget
00033128 <AmiBlitz3.ab3@24167> JMP notallowd
0003312E <AmiBlitz3.ab3@24170> JMP bigforerr
00033132 <AmiBlitz3.ab3@24177>   MOVE.w #$664F,-(A7)
00033136 <AmiBlitz3.ab3@24180> BRA.w JL_0_DCF4
0003313C <AmiBlitz3.ab3@24183> JMP error_dublicate_for
00033140 <AmiBlitz3.ab3@24186> forlineat:   Ds.l 1
00033142 <AmiBlitz3.ab3@24187> fortemp:     Ds.w 1
00033148 <AmiBlitz3.ab3@24194>   CLR.l fp0addr
0003314E <AmiBlitz3.ab3@24195>   TST.w dirmode
00033152 <AmiBlitz3.ab3@24196>    BNE.w JUMP_baddirerr
0003315C <AmiBlitz3.ab3@24197>   MOVE.l linenumat,forlineat
00033162 <AmiBlitz3.ab3@24201>   MOVE.l A5,letstart
00033166 <AmiBlitz3.ab3@24202>   BSR.w getparameter
0003316C <AmiBlitz3.ab3@24203>   MOVE.w D2,fortemp
00033172 <AmiBlitz3.ab3@24204>   JSR findfor
00033176 <AmiBlitz3.ab3@24205>    BEQ.w JUMP_error_dublicate_for
0003317C <AmiBlitz3.ab3@24206>   LEA firstfor,A2
00033182 <AmiBlitz3.ab3@24207>   JSR addhere2
00033184 <AmiBlitz3.ab3@24208>   MOVE.l A2,-(A7)
0003318A <AmiBlitz3.ab3@24209>   TST.b debugmode
0003318E <AmiBlitz3.ab3@24210>    BEQ.b JL_0_DD4C
00033194 <AmiBlitz3.ab3@24211>   JSR chkstak
0003319A <AmiBlitz3.ab3@24212>   MOVE.l AJL_0_DCF0,D1
000331A0 <AmiBlitz3.ab3@24213>   JSR  writelong
000331A4 <AmiBlitz3.ab3@24216>   MOVE.w fortemp(PC),D2
000331AC <AmiBlitz3.ab3@24217>   MOVE.b #1,formode
000331B0 <AmiBlitz3.ab3@24218>   BSR.w AJL_0_DEA6                                         ;for get 1. value
000331B6 <AmiBlitz3.ab3@24219>   CLR.b formode
000331BA <AmiBlitz3.ab3@24220>   CMP.w #-$7FE8,D0
000331BE <AmiBlitz3.ab3@24221>    BNE.w JUMP_syntaxerr
000331C4 <AmiBlitz3.ab3@24222>   MOVE.w commode,D1
000331C8 <AmiBlitz3.ab3@24223>    BNE.w JUMP_syntaxerr
000331CC <AmiBlitz3.ab3@24224>   CMP.b #$6,D2
000331D0 <AmiBlitz3.ab3@24225>    BCC.w JUMP_badforerr
000331D4 <AmiBlitz3.ab3@24226>   BTST #$F,D2
000331D8 <AmiBlitz3.ab3@24227>    BNE.w JL_0_DD86
000331DE <AmiBlitz3.ab3@24228>   MOVE.w leaamp,D1
000331E4 <AmiBlitz3.ab3@24229>   JSR pokewda5s
000331E6 <AmiBlitz3.ab3@24230>   MOVE.w D3,D1
000331EC <AmiBlitz3.ab3@24231>   JSR  writeword
000331F2 <AmiBlitz3.ab3@24234>   MOVE.w pushindex,D1
000331F8 <AmiBlitz3.ab3@24235>   JSR  writeword
000331FC <AmiBlitz3.ab3@24236>   ANDI.w #$FF,D2
000331FE <AmiBlitz3.ab3@24238>   MOVEA.l (A7),A1
00033202 <AmiBlitz3.ab3@24239>   MOVE.w D2,$C(A1)
00033204 <AmiBlitz3.ab3@24240>   MOVE.w D2,-(A7)
00033208 <AmiBlitz3.ab3@24241>    BSR.w eval
0003320E <AmiBlitz3.ab3@24242>    CLR.b onestep
00033212 <AmiBlitz3.ab3@24243>    CMP.w #$8019,d0
00033216 <AmiBlitz3.ab3@24244>    BEQ 'l1
0003321E <AmiBlitz3.ab3@24245>    MOVE.b #1,onestep
00033220 <AmiBlitz3.ab3@24248>   MOVE.w (A7),D2
00033226 <AmiBlitz3.ab3@24249>   MOVE.w pushd0l,D1
0003322A <AmiBlitz3.ab3@24250>   CMP.w #$3,D2
0003322E <AmiBlitz3.ab3@24251>    BCC.w JL_0_DDB6
00033234 <AmiBlitz3.ab3@24252>   MOVE.w pushd0wd,D1
00033236 <AmiBlitz3.ab3@24255>    MOVE.w D1,-(A7)
0003323C <AmiBlitz3.ab3@24256>    TST.b fpu
00033240 <AmiBlitz3.ab3@24257>    BEQ 'old
00033244 <AmiBlitz3.ab3@24258>    CMP.b #5,d2
00033248 <AmiBlitz3.ab3@24259>    BNE 'old
0003324E <AmiBlitz3.ab3@24260>    MOVE.l #$f2276400,d1
00033254 <AmiBlitz3.ab3@24262>    JSR writelong
00033258 <AmiBlitz3.ab3@24263> BRA 'weit
0003325E <AmiBlitz3.ab3@24266>    JSR  writeword                                          ;fpu for end value
00033262 <AmiBlitz3.ab3@24269>   CMP.w #-$7FE7,D0
00033266 <AmiBlitz3.ab3@24270>    BNE.w JL_0_DDCC
0003326A <AmiBlitz3.ab3@24271>    BSR.w eval
00033270 <AmiBlitz3.ab3@24272>    TST.b fpu
00033274 <AmiBlitz3.ab3@24273>    BEQ JL_0_DE0C
00033278 <AmiBlitz3.ab3@24274>    CMP.b #5,d2
0003327C <AmiBlitz3.ab3@24275>    BNE JL_0_DE0C
00033282 <AmiBlitz3.ab3@24276>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00033288 <AmiBlitz3.ab3@24278>   JSR writelong
0003328A <AmiBlitz3.ab3@24281>    MOVE.w (a7)+,d1
0003328E <AmiBlitz3.ab3@24282> BRA fpur
00033292 <AmiBlitz3.ab3@24285>   CMP.w #$4,D2
00033296 <AmiBlitz3.ab3@24286>    BCC.w JL_0_DDE0
0003329A <AmiBlitz3.ab3@24287>   MOVE.w #$7001,D1
000332A0 <AmiBlitz3.ab3@24288>   JSR writeword
000332A4 <AmiBlitz3.ab3@24289> BRA.w JL_0_DE0C
000332AA <AmiBlitz3.ab3@24292> JMP badforerr
000332AE <AmiBlitz3.ab3@24295>   BNE.w JL_0_DDFA
000332B2 <AmiBlitz3.ab3@24296>   MOVE.w #$7001,D1
000332B8 <AmiBlitz3.ab3@24297>   JSR writeword
000332BE <AmiBlitz3.ab3@24298>   MOVE.w swapd0,D1
000332C4 <AmiBlitz3.ab3@24299>   JSR writeword
000332C8 <AmiBlitz3.ab3@24300> BRA.w JL_0_DE0C
000332CE <AmiBlitz3.ab3@24303>   TST.b fpu
000332D2 <AmiBlitz3.ab3@24304>    BEQ 'old
000332D6 <AmiBlitz3.ab3@24305>   CMP.b #5,d2
000332DA <AmiBlitz3.ab3@24306>    BNE 'old
000332E0 <AmiBlitz3.ab3@24307>   MOVE.l #$f23c5000,d1
000332E6 <AmiBlitz3.ab3@24308>   JSR writelong
000332EA <AmiBlitz3.ab3@24309>   MOVE.w #$1,d1
000332F0 <AmiBlitz3.ab3@24310>   JSR writeword
000332F6 <AmiBlitz3.ab3@24311>   MOVE.l #$f2276400,d1
000332FC <AmiBlitz3.ab3@24312>   JSR writelong
000332FE <AmiBlitz3.ab3@24313>   MOVE.w (a7)+,d1
00033302 <AmiBlitz3.ab3@24314> BRA fpur
00033306 <AmiBlitz3.ab3@24317>   MOVE.w #$203C,D1                                         ;write step 1
0003330C <AmiBlitz3.ab3@24318>   JSR writeword
00033312 <AmiBlitz3.ab3@24319>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
00033318 <AmiBlitz3.ab3@24320>   JSR writelong
0003331A <AmiBlitz3.ab3@24323>   MOVE.w (A7)+,D1
00033320 <AmiBlitz3.ab3@24324>   JSR writeword                                            ;push step on stack
00033322 <AmiBlitz3.ab3@24327>   MOVE.w (A7)+,D2
00033324 <AmiBlitz3.ab3@24328>   MOVEA.l (A7),A1
0003332C <AmiBlitz3.ab3@24329>   MOVE.l destpointer,$4(A1)
00033332 <AmiBlitz3.ab3@24330>   LEA forcompb,A0
00033338 <AmiBlitz3.ab3@24331>   LEA forcompbf,A1
0003333C <AmiBlitz3.ab3@24332>   CMP.w #$1,D2
00033340 <AmiBlitz3.ab3@24333>    BEQ.w JL_0_DE7E
00033346 <AmiBlitz3.ab3@24334>   LEA forcompw,A0
0003334C <AmiBlitz3.ab3@24335>   LEA forcompwf,A1
00033350 <AmiBlitz3.ab3@24336>   CMP.w #$2,D2
00033354 <AmiBlitz3.ab3@24337>    BEQ.w JL_0_DE7E
0003335A <AmiBlitz3.ab3@24338>   LEA forcompl,A0
00033360 <AmiBlitz3.ab3@24339>   LEA forcomplf,A1
00033364 <AmiBlitz3.ab3@24340>   CMP.w #$5,D2
00033368 <AmiBlitz3.ab3@24341>    BNE.w JL_0_DE7E
0003336E <AmiBlitz3.ab3@24342>   TST.b fpu
00033372 <AmiBlitz3.ab3@24343>    BEQ 'old
00033378 <AmiBlitz3.ab3@24344>   LEA fpu_start,a0
0003337E <AmiBlitz3.ab3@24345>   LEA fpu_end,a1
00033384 <AmiBlitz3.ab3@24346>   JSR pokecode
00033388 <AmiBlitz3.ab3@24347> BRA fpu3
0003338E <AmiBlitz3.ab3@24350>   LEA forcompf,A0                                         ;
00033394 <AmiBlitz3.ab3@24351>   LEA forcompff,A1
0003339A <AmiBlitz3.ab3@24352>   JSR pokecode
0003339E <AmiBlitz3.ab3@24353>   MOVE.w #$C900,D1
000333A2 <AmiBlitz3.ab3@24354>   BSR.w Atokejsr
000333A8 <AmiBlitz3.ab3@24355>   LEA forcompf2,A0
000333AE <AmiBlitz3.ab3@24356>   LEA forcompf2f,A1
000333B4 <AmiBlitz3.ab3@24359>   JSR pokecode
000333BA <AmiBlitz3.ab3@24360>   TST.b fast                                               ;fast for next
000333BE <AmiBlitz3.ab3@24361>    BEQ 's1
000333C2 <AmiBlitz3.ab3@24362>   CMP.w #3,d2
000333C6 <AmiBlitz3.ab3@24363>    BNE 's1
000333CC <AmiBlitz3.ab3@24364>   TST.b onestep
000333D0 <AmiBlitz3.ab3@24365>    BEQ 's1
000333DA <AmiBlitz3.ab3@24366>   SUB.l #10,destpointer
000333DE <AmiBlitz3.ab3@24367>   MOVE.w #$b081,d1
000333E4 <AmiBlitz3.ab3@24368>   JSR writeword
000333E8 <AmiBlitz3.ab3@24372>   MOVE.l thebgt(PC),D1
000333EE <AmiBlitz3.ab3@24373>   JSR writelong
000333F0 <AmiBlitz3.ab3@24376>   MOVEA.l (A7)+,A1
000333F8 <AmiBlitz3.ab3@24377>   MOVE.l destpointer,$8(A1)
000333FE <AmiBlitz3.ab3@24378> JMP reget
00033402 <AmiBlitz3.ab3@24381>   MOVEA.l 8(a7),a2
00033406 <AmiBlitz3.ab3@24382>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
0003340C <AmiBlitz3.ab3@24383>   fmove.s 4(a7),fp1
00033410 <AmiBlitz3.ab3@24384>   BTST.b #7,(a7)
00033414 <AmiBlitz3.ab3@24385>   BNE 'negi
00033418 <AmiBlitz3.ab3@24386>   fcmp.x fp1,fp0
0003341C <AmiBlitz3.ab3@24387> BRA 'negi2
00033420 <AmiBlitz3.ab3@24390>   fcmp.x fp0,fp1
00033424 <AmiBlitz3.ab3@24393>   Dc.l $f2920000                                           ;fbgt.w
00033428 <AmiBlitz3.ab3@24397>   BGT.w thebgt
0003342E <AmiBlitz3.ab3@24400>   MOVE.l A5,letstart
00033432 <AmiBlitz3.ab3@24401>   BSR.w getparameter
0003343C <AmiBlitz3.ab3@24407>   MOVE.l destpointer,pushpc
00033446 <AmiBlitz3.ab3@24408>   MOVE.l hunkoffsetbase,pushoff
0003344C <AmiBlitz3.ab3@24409>   CLR.l rightsidetype
00033454 <AmiBlitz3.ab3@24410>   MOVE.w #$0001,regnum
0003345A <AmiBlitz3.ab3@24411>   JSR JL_0_8E3C
00033460 <AmiBlitz3.ab3@24412>   JSR calcvar
00033466 <AmiBlitz3.ab3@24413>   TST.b formode
0003346A <AmiBlitz3.ab3@24414>   BEQ 'lf1
00033470 <AmiBlitz3.ab3@24415>   CMP.l #newtype_double,A2
00033474 <AmiBlitz3.ab3@24416>   BEQ JUMP_notallowd
0003347A <AmiBlitz3.ab3@24417>   MOVE.l a2,currtype
00033480 <AmiBlitz3.ab3@24420>   CLR.w startoffsetmore
00033484 <AmiBlitz3.ab3@24421>   CMP.w #$3d,d0
00033488 <AmiBlitz3.ab3@24422>   BNE 'l1a
0003348C <AmiBlitz3.ab3@24423>   BTST #15,d2
00033490 <AmiBlitz3.ab3@24424>   BEQ 'l1a
00033494 <AmiBlitz3.ab3@24425>   CMP.b #1,d2
00033498 <AmiBlitz3.ab3@24426>   BNE 'l1a
000334A2 <AmiBlitz3.ab3@24427>   MOVE.w leaa0a0+2,startoffsetmore
000334A8 <AmiBlitz3.ab3@24430>   CLR.w regnum
000334AC <AmiBlitz3.ab3@24431>   BSR.w JL_0_B5D2
000334B2 <AmiBlitz3.ab3@24432>   CLR.w commode
000334B8 <AmiBlitz3.ab3@24433>   CLR.w stackcorrect
000334BE <AmiBlitz3.ab3@24434>   CLR.w pcodd
000334C4 <AmiBlitz3.ab3@24435>   MOVE.w startoffsetmore,d1
000334C8 <AmiBlitz3.ab3@24436>   BTST #0,d1
000334CC <AmiBlitz3.ab3@24437>   BEQ 'l2a
000334D4 <AmiBlitz3.ab3@24438>   MOVE.w #1,pcodd
000334D8 <AmiBlitz3.ab3@24441>   CMP.w #$3D,D0                                            ;=
000334DC <AmiBlitz3.ab3@24442>   BEQ.w JL_0_DEE0
000334DE <AmiBlitz3.ab3@24445>   MOVE.b (a5)+,d1
000334E2 <AmiBlitz3.ab3@24446>   BEQ 'l10
000334E6 <AmiBlitz3.ab3@24447>   CMP.b #":",d1
000334EA <AmiBlitz3.ab3@24448>   BEQ 'l10
000334EE <AmiBlitz3.ab3@24449>   CMP.b #";",d1
000334F2 <AmiBlitz3.ab3@24450>   BEQ 'l10
000334F6 <AmiBlitz3.ab3@24451>   CMP.b #"0",d1
000334FA <AmiBlitz3.ab3@24452>   BLT 'l11
000334FE <AmiBlitz3.ab3@24453>   CMP.b #"9",d1
00033502 <AmiBlitz3.ab3@24454>   BGT 'l11
00033506 <AmiBlitz3.ab3@24455> BRA.s 'l1
0003350E <AmiBlitz3.ab3@24458>   MOVE.b #1,quickadd
00033514 <AmiBlitz3.ab3@24461>   MOVEA.l letstart,A5
00033516 <AmiBlitz3.ab3@24462>   SUBQ.w #1,A5
0003351A <AmiBlitz3.ab3@24465>   CMP.b #$7,D2
0003351E <AmiBlitz3.ab3@24466>    BNE.w JL_0_DF8A
00033522 <AmiBlitz3.ab3@24472>   MOVEM.w D2-D3,-(A7)
00033528 <AmiBlitz3.ab3@24473>   MOVE.l lastoffset_org,-(A7)
0003352E <AmiBlitz3.ab3@24474>   MOVE.w varmode,-(A7)
00033538 <AmiBlitz3.ab3@24476>    MOVE.l #forthstack,forthsp
00033542 <AmiBlitz3.ab3@24477>    MOVE.l #precstack,precsp
00033548 <AmiBlitz3.ab3@24478>    CLR.w regnum
0003354E <AmiBlitz3.ab3@24479>    CLR.w nonew
00033554 <AmiBlitz3.ab3@24480>    CLR.w sbasegot
0003355E <AmiBlitz3.ab3@24481>    MOVE.w varcodelen,oldvcodelen
00033564 <AmiBlitz3.ab3@24482>    CLR.w varcodelen
0003356C <AmiBlitz3.ab3@24483>    MOVE.w #$FFFF,lasta6
0003356E <AmiBlitz3.ab3@24486>   MOVEQ.l #$07,D2
00033572 <AmiBlitz3.ab3@24487>    BSR.w eval
00033578 <AmiBlitz3.ab3@24488>   MOVE.w (A7)+,varmode
0003357E <AmiBlitz3.ab3@24489>   MOVE.l (A7)+,lastoffset_org
00033584 <AmiBlitz3.ab3@24490>   MOVE.w moved0a3,D1
0003358A <AmiBlitz3.ab3@24491>    JSR writeword
00033590 <AmiBlitz3.ab3@24492>   MOVE.w commode,D1
00033594 <AmiBlitz3.ab3@24493>    BEQ.w JL_0_DF38
0003359A <AmiBlitz3.ab3@24494>   LEA pulla2st,A0
000335A0 <AmiBlitz3.ab3@24495>   LEA pulla2stf,A1
000335A6 <AmiBlitz3.ab3@24496>    JSR pokecode
000335AA <AmiBlitz3.ab3@24497> BRA.w JL_0_DF3C
000335AE <AmiBlitz3.ab3@24500>   BSR.w JL_0_B63C
000335B2 <AmiBlitz3.ab3@24503>   MOVEM.w (A7)+,D2-D3
000335B6 <AmiBlitz3.ab3@24504>   BTST #$F,D2
000335BA <AmiBlitz3.ab3@24505>   BNE.w JL_0_DF58
000335C0 <AmiBlitz3.ab3@24506>     MOVE.w D3,leaa5d3a2+2
000335C6 <AmiBlitz3.ab3@24507>     MOVE.l leaa5d3a2,D1
000335CC <AmiBlitz3.ab3@24508>     JSR pokela5s
000335D0 <AmiBlitz3.ab3@24511>   MOVE.w #$FE6F,D1
000335D6 <AmiBlitz3.ab3@24512>   JSR uselib
000335DC <AmiBlitz3.ab3@24513>   MOVE.l #$C700,D1
000335E2 <AmiBlitz3.ab3@24514>   MOVE.l d1,lastinstruction
000335E8 <AmiBlitz3.ab3@24515>   MOVE.w varmode,D2
000335EC <AmiBlitz3.ab3@24516>   BNE.w JL_0_DF70
000335EE <AmiBlitz3.ab3@24517>     ADDQ.w #1,D1
000335F2 <AmiBlitz3.ab3@24520>   BSR.w Atokejsr
000335F6 <AmiBlitz3.ab3@24521>   CMP.w #$2C,D0
000335FA <AmiBlitz3.ab3@24522>   BNE.w JL_0_E0C6
00033600 <AmiBlitz3.ab3@24524>   MOVE.w addq4a2,D1
00033606 <AmiBlitz3.ab3@24525>   JSR writeword
0003360A <AmiBlitz3.ab3@24526> BRA.w JL_0_E018
00033610 <AmiBlitz3.ab3@24529> JMP error4char
00033616 <AmiBlitz3.ab3@24532> JMP error_convert_types
0003361A <AmiBlitz3.ab3@24536>    BTST #$E,D2
0003361E <AmiBlitz3.ab3@24537>    BNE.w JL_0_DF9C
00033620 <AmiBlitz3.ab3@24538>   TST.b D2
00033624 <AmiBlitz3.ab3@24539>    BEQ.w JUMP_noleterr
0003362A <AmiBlitz3.ab3@24540>    TST.b newsyntax
0003362E <AmiBlitz3.ab3@24541>    BEQ JL_0_DFA0
00033632 <AmiBlitz3.ab3@24544>    CMP.w #$4022,(a5)
00033636 <AmiBlitz3.ab3@24545>    BNE JL_0_DFA0
0003363C <AmiBlitz3.ab3@24546>    CMP.l #3,d2
00033640 <AmiBlitz3.ab3@24547>    BNE  JUMP_error_convert_types
00033642 <AmiBlitz3.ab3@24548>    ADDQ #2,a5
00033644 <AmiBlitz3.ab3@24549>    MOVEQ #0,d0
00033646 <AmiBlitz3.ab3@24550>    MOVE.b (a5)+,d0
0003364A <AmiBlitz3.ab3@24551>    BEQ JL_0_DFA0
0003364E <AmiBlitz3.ab3@24552>    CMP.b #$22,d0
00033652 <AmiBlitz3.ab3@24553>    BNE 'l1
00033656 <AmiBlitz3.ab3@24554>    MOVE.b #0,d0
0003365A <AmiBlitz3.ab3@24555> BRA 'do
0003365C <AmiBlitz3.ab3@24558>   ASL.l #8,d0
0003365E <AmiBlitz3.ab3@24559>    MOVE.b (a5)+,d0
00033662 <AmiBlitz3.ab3@24560>    BEQ JL_0_DFA0
00033666 <AmiBlitz3.ab3@24561>    CMP.b #$22,d0
0003366A <AmiBlitz3.ab3@24562>    BNE 'l2
0003366E <AmiBlitz3.ab3@24563>    MOVE.b #0,d0
00033670 <AmiBlitz3.ab3@24564>    ASR.l #8,d0
00033674 <AmiBlitz3.ab3@24565> BRA 'do
00033676 <AmiBlitz3.ab3@24568>   ASL.l #8,d0
00033678 <AmiBlitz3.ab3@24569>     MOVE.b (a5)+,d0
0003367C <AmiBlitz3.ab3@24570>    BEQ JL_0_DFA0
00033680 <AmiBlitz3.ab3@24571>    CMP.b #$22,d0
00033684 <AmiBlitz3.ab3@24572>    BNE 'l3
00033688 <AmiBlitz3.ab3@24573>    MOVE.b #0,d0
0003368A <AmiBlitz3.ab3@24574>    ASR.l #8,d0
0003368E <AmiBlitz3.ab3@24575> BRA 'do
00033690 <AmiBlitz3.ab3@24578>   ASL.l #8,d0
00033692 <AmiBlitz3.ab3@24579>     MOVE.b (a5)+,d0
00033696 <AmiBlitz3.ab3@24580>    BEQ JL_0_DFA0
0003369A <AmiBlitz3.ab3@24581>    CMP.b #$22,d0
0003369E <AmiBlitz3.ab3@24582>    BNE 'l4
000336A2 <AmiBlitz3.ab3@24583>    MOVE.b #0,d0
000336A4 <AmiBlitz3.ab3@24584>    ASR.l #8,d0
000336A8 <AmiBlitz3.ab3@24585> BRA 'do
000336AC <AmiBlitz3.ab3@24588>    CMP.b #$22,(a5)+
000336B0 <AmiBlitz3.ab3@24589>    BNE JUMP_error4char
000336B4 <AmiBlitz3.ab3@24592>   MOVE.w #$2b7c,d1
000336BA <AmiBlitz3.ab3@24593>    TST.w varmode
000336BE <AmiBlitz3.ab3@24594>    BEQ 'g3
000336C2 <AmiBlitz3.ab3@24595>    BCLR #9,d1
000336C8 <AmiBlitz3.ab3@24598>     JSR writeword
000336CA <AmiBlitz3.ab3@24599>     MOVE.l d0,d1
000336D0 <AmiBlitz3.ab3@24600>     JSR writelong
000336D2 <AmiBlitz3.ab3@24601>     MOVE.w d3,d1
000336D8 <AmiBlitz3.ab3@24602>     JSR writeword
000336DE <AmiBlitz3.ab3@24603>     JSR get1bytemain
000336E0 <AmiBlitz3.ab3@24604> RTS
000336E6 <AmiBlitz3.ab3@24610> JMP noleterr
000336EC <AmiBlitz3.ab3@24614>   MOVE.w d2,vartype
000336F0 <AmiBlitz3.ab3@24615>   MOVE.b #$3,D2
000336F4 <AmiBlitz3.ab3@24618>   CMP.b #5,d2
000336F8 <AmiBlitz3.ab3@24619>   BNE 'l1
000336FE <AmiBlitz3.ab3@24620>   MOVE.l a2,currtype
00033702 <AmiBlitz3.ab3@24624>   MOVEM.w D2-D3,-(A7)
00033708 <AmiBlitz3.ab3@24625>   MOVE.w varmode,-(A7)
0003370E <AmiBlitz3.ab3@24626>   MOVE.l a2,leftsidetype
00033712 <AmiBlitz3.ab3@24627>   BTST #$f,d2
00033716 <AmiBlitz3.ab3@24628>   BEQ 'nomultiassign
0003371C <AmiBlitz3.ab3@24629>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033720 <AmiBlitz3.ab3@24630> 'nomultiassign  ANDI.w #$FF,D2
00033726 <AmiBlitz3.ab3@24631>   MOVE.l lastoffset_org,-(A7)
0003372A <AmiBlitz3.ab3@24632>   BSR.w eval                                ; calc right side of var assign
0003372E <AmiBlitz3.ab3@24634>   MOVEM.l a0/a1,-(a7)
00033734 <AmiBlitz3.ab3@24635>   MOVE.l leftsidetype,a0
0003373A <AmiBlitz3.ab3@24636>   CMP.l #0,a0
0003373E <AmiBlitz3.ab3@24637>   BEQ 'nocheck
00033746 <AmiBlitz3.ab3@24638>   CMP.l #$100,4(a0)
0003374A <AmiBlitz3.ab3@24639>   BLE 'nocheck
00033750 <AmiBlitz3.ab3@24640>   TST.l typetocast
00033754 <AmiBlitz3.ab3@24641>   BEQ 'nocast
0003375A <AmiBlitz3.ab3@24642>   MOVE.l typetocast,a1
0003375E <AmiBlitz3.ab3@24643>   BRA 'typecheck
00033764 <AmiBlitz3.ab3@24644> 'nocast  TST.l rightsidetype
00033768 <AmiBlitz3.ab3@24645>   BEQ 'nocheck
0003376E <AmiBlitz3.ab3@24646>   MOVE.l rightsidetype,a1
00033776 <AmiBlitz3.ab3@24647>   CMP.l #$100,4(a1)
0003377A <AmiBlitz3.ab3@24648>   BGE 'typecheck
00033782 <AmiBlitz3.ab3@24649>   CMP.l #$3,4(a1)
00033786 <AmiBlitz3.ab3@24650>   BEQ 'ok                              ;long assign is allow with this codelines
0003378A <AmiBlitz3.ab3@24651>   BRA 'error
00033790 <AmiBlitz3.ab3@24653>   TST.b typecheck
00033794 <AmiBlitz3.ab3@24654>   BEQ 'nocheck
0003379A <AmiBlitz3.ab3@24655>   TST.b notypecheck
0003379E <AmiBlitz3.ab3@24656>   BNE 'ok
000337A0 <AmiBlitz3.ab3@24657>   CMP.l a0,a1
000337A4 <AmiBlitz3.ab3@24658>   BEQ 'ok
000337A8 <AmiBlitz3.ab3@24660>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
000337AC <AmiBlitz3.ab3@24661>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000337B0 <AmiBlitz3.ab3@24662>   BEQ 'ok
000337B6 <AmiBlitz3.ab3@24664>  JMP   error_convert_types     ;for syntax 4  = typecheck
000337BC <AmiBlitz3.ab3@24667>    CLR.l typetocast
000337C0 <AmiBlitz3.ab3@24668>    MOVEM.l (a7)+, a0/a1
000337C6 <AmiBlitz3.ab3@24669>   MOVE.l (A7)+,lastoffset_org
000337CC <AmiBlitz3.ab3@24670>   MOVE.w commode,D1
000337D0 <AmiBlitz3.ab3@24671>    BNE.w JL_0_DFCC
000337D4 <AmiBlitz3.ab3@24672>    BSR.w JL_0_B63C
000337DA <AmiBlitz3.ab3@24675>   MOVE.w (A7)+,varmode
000337DE <AmiBlitz3.ab3@24676>   MOVEM.w (A7)+,D2-D3
000337E2 <AmiBlitz3.ab3@24678>   MOVE.w #$2B40,D1
000337E8 <AmiBlitz3.ab3@24679>   MOVE.w varmode,D4
000337EC <AmiBlitz3.ab3@24680>    BEQ.w JL_0_DFE8
000337F0 <AmiBlitz3.ab3@24681>   BCLR #$9,D1
000337F4 <AmiBlitz3.ab3@24684>   BTST #$F,D2
000337F8 <AmiBlitz3.ab3@24685>    BEQ.w JL_0_E090
000337FE <AmiBlitz3.ab3@24686>    TST.b stackcorrect
00033802 <AmiBlitz3.ab3@24687>    BNE 'st1
00033808 <AmiBlitz3.ab3@24688>   MOVE.w commode,D1
0003380C <AmiBlitz3.ab3@24689>    BEQ.w JL_0_E004
00033812 <AmiBlitz3.ab3@24692>   MOVE.w pulla2,D1
00033818 <AmiBlitz3.ab3@24693>    JSR writeword
0003381C <AmiBlitz3.ab3@24696>   MOVE.w #$2480,D1
00033820 <AmiBlitz3.ab3@24697>    MOVEM.l a0/d0,-(a7)
00033826 <AmiBlitz3.ab3@24698>    MOVEA.l lastoffset_org,A0
00033828 <AmiBlitz3.ab3@24699>    MOVE.l A0,D0
0003382C <AmiBlitz3.ab3@24700>    BEQ.w 'skip
0003382E <AmiBlitz3.ab3@24701>    MOVEA.l D0,A0
00033836 <AmiBlitz3.ab3@24702>    MOVE.l $A(A0),currtype
0003383A <AmiBlitz3.ab3@24705>   MOVEM.l (a7)+,a0/d0
0003383E <AmiBlitz3.ab3@24706>   CMP.w #$2C,D0
00033842 <AmiBlitz3.ab3@24707>    BNE.w JL_0_E090
00033846 <AmiBlitz3.ab3@24708>     MOVE.w #$24C0,D1
0003384A <AmiBlitz3.ab3@24709>    BSR.w JL_0_E090                                         ;write store
00033850 <AmiBlitz3.ab3@24712>    MOVE.l lastoffset_org,D0
00033858 <AmiBlitz3.ab3@24716>   MOVE.w #$FFFF,commode
0003385E <AmiBlitz3.ab3@24717>   CLR.w varcodelen
00033866 <AmiBlitz3.ab3@24718>   MOVE.b #1,optiarray
0003386C <AmiBlitz3.ab3@24719>   MOVE.w pusha2,D1
00033872 <AmiBlitz3.ab3@24720>    JSR writeword
00033878 <AmiBlitz3.ab3@24721>   TST.l lastoffset_org
0003387C <AmiBlitz3.ab3@24722>   BEQ dimmore
00033882 <AmiBlitz3.ab3@24723>   MOVEA.l lastoffset_org,A0
00033884 <AmiBlitz3.ab3@24724>   MOVE.l (A0),D0
00033888 <AmiBlitz3.ab3@24725>    BEQ.w JUMP_comerr
0003388A <AmiBlitz3.ab3@24726>   MOVEA.l D0,A0
00033890 <AmiBlitz3.ab3@24727>   MOVE.l A0,lastoffset_org
00033896 <AmiBlitz3.ab3@24728>   BTST #$1,$7(A0)
0003389A <AmiBlitz3.ab3@24729>    BNE.w JUMP_nocomerr
0003389E <AmiBlitz3.ab3@24730>   MOVEA.l $A(A0),A1
000338A2 <AmiBlitz3.ab3@24731>   MOVE.l $4(A1),D2
000338A8 <AmiBlitz3.ab3@24734>   BTST #$0,$7(A0)
000338AC <AmiBlitz3.ab3@24735>    BNE.w JL_0_E078
000338B2 <AmiBlitz3.ab3@24736>   CMP.l #$100,D2
000338B6 <AmiBlitz3.ab3@24737>    BCC.l JUMP_nocomerr
000338BA <AmiBlitz3.ab3@24738> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
000338C0 <AmiBlitz3.ab3@24741>         CLR.b optiarray
000338C4 <AmiBlitz3.ab3@24742>         CMP.w #"@@",(a5)
000338C8 <AmiBlitz3.ab3@24743>         BEQ 'n1
000338CC <AmiBlitz3.ab3@24744> BRA 'd1
000338D2 <AmiBlitz3.ab3@24747>   JSR nextline
000338D4 <AmiBlitz3.ab3@24748>         MOVE.l a5,-(a7)
000338D6 <AmiBlitz3.ab3@24751>   MOVE.b (a5)+,d0
000338DA <AmiBlitz3.ab3@24752>         CMP.b #$20,d0
000338DE <AmiBlitz3.ab3@24753>         BEQ 'l2
000338E0 <AmiBlitz3.ab3@24754>         MOVE.l (a7)+,a5
000338E4 <AmiBlitz3.ab3@24755>         CMP.b #";",d0
000338E8 <AmiBlitz3.ab3@24756>         BEQ 'n1
000338EE <AmiBlitz3.ab3@24759>         TST.w debugmode
000338F2 <AmiBlitz3.ab3@24760>         BEQ JL_0_DEE0
000338F4 <AmiBlitz3.ab3@24761>         MOVE.l a0,-(a7)
000338FA <AmiBlitz3.ab3@24762>         MOVE.l pushat,a0
00033900 <AmiBlitz3.ab3@24763>         CMP.l #0,a0
00033904 <AmiBlitz3.ab3@24764>         BNE 'o1
00033908 <AmiBlitz3.ab3@24765> BRA 'skip
00033910 <AmiBlitz3.ab3@24768>         ADD.l #1,2(a0)
00033916 <AmiBlitz3.ab3@24771>   CLR.w commode
0003391E <AmiBlitz3.ab3@24772>         MOVE.b #1,stackcorrect
00033920 <AmiBlitz3.ab3@24773>         MOVE.l (a7)+,a0
00033926 <AmiBlitz3.ab3@24774> JMP JL_0_DEE0
0003392C <AmiBlitz3.ab3@24777> JMP nocomerr
00033932 <AmiBlitz3.ab3@24780>   CMP.l #$100,D2
00033936 <AmiBlitz3.ab3@24781>    BCS.w JL_0_E084
00033938 <AmiBlitz3.ab3@24782>   MOVEQ.l #$00,D2
0003393C <AmiBlitz3.ab3@24785>   BSET #$E,D2
00033940 <AmiBlitz3.ab3@24788>   BSET #$F,D2
00033944 <AmiBlitz3.ab3@24789> BRA.w JL_0_DEE0
0003394A <AmiBlitz3.ab3@24792>    MOVE.l destpointer,a4
00033952 <AmiBlitz3.ab3@24793>    MOVE.l #$f22a6400,-4(a4)
00033958 <AmiBlitz3.ab3@24794>    MOVE.w arrayoffset,d1
0003395E <AmiBlitz3.ab3@24795> JMP writeword
00033964 <AmiBlitz3.ab3@24798> JMP comerr
0003396A <AmiBlitz3.ab3@24801>    TST.b fpu
0003396E <AmiBlitz3.ab3@24802>    BEQ 'nofloat
00033972 <AmiBlitz3.ab3@24803>    CMP.b #5,d2
00033976 <AmiBlitz3.ab3@24804>    BNE 'nofloat
0003397C <AmiBlitz3.ab3@24805>    CLR.w fp0var
00033982 <AmiBlitz3.ab3@24806>    LEA regtable,a4
00033984 <AmiBlitz3.ab3@24807>    TST.l (a4)
00033988 <AmiBlitz3.ab3@24808>    BEQ 'noreg
0003398C <AmiBlitz3.ab3@24809>    BTST #15,d2                                             ;regvars
00033990 <AmiBlitz3.ab3@24810>    BNE 'noreg
00033994 <AmiBlitz3.ab3@24811>    CMP.w 0+4(a4),d3
00033998 <AmiBlitz3.ab3@24812>    BNE 'doreg1
0003399E <AmiBlitz3.ab3@24813>    MOVE.l #$f2000380,d1
000339A4 <AmiBlitz3.ab3@24814>    MOVE.w regnum,d0
000339A8 <AmiBlitz3.ab3@24815>    BNE 'noopt
000339AE <AmiBlitz3.ab3@24821>    MOVE.l destpointer,a4
000339B6 <AmiBlitz3.ab3@24822>    CMP.l #$f2001c80,-8(a4)
000339BA <AmiBlitz3.ab3@24823>    BNE 'noopt
000339C2 <AmiBlitz3.ab3@24824>    CMP.l #$f2000422,-4(a4)
000339C6 <AmiBlitz3.ab3@24825>    BNE 'noopt
000339CC <AmiBlitz3.ab3@24826>    MOVE.l #$f20003a2,d1
000339D6 <AmiBlitz3.ab3@24827>    SUB.l #8,destpointer
000339D8 <AmiBlitz3.ab3@24830>    ASL.w #7,d0
000339DA <AmiBlitz3.ab3@24831>    OR.w d0,d1
000339E0 <AmiBlitz3.ab3@24832>    JSR writelong
000339E2 <AmiBlitz3.ab3@24833> RTS
000339E6 <AmiBlitz3.ab3@24836>   CMP.w 8+4(a4),d3
000339EA <AmiBlitz3.ab3@24837>    BNE 'doreg2
000339F0 <AmiBlitz3.ab3@24838>    MOVE.l #$f2000300,d1
000339F6 <AmiBlitz3.ab3@24839>    MOVE.w regnum,d0
000339F8 <AmiBlitz3.ab3@24840>    ASL.w #7,d0
000339FA <AmiBlitz3.ab3@24841>    OR.w d0,d1
00033A00 <AmiBlitz3.ab3@24842>    JSR writelong
00033A02 <AmiBlitz3.ab3@24843> RTS
00033A06 <AmiBlitz3.ab3@24846>   CMP.w 16+4(a4),d3
00033A0A <AmiBlitz3.ab3@24847>    BNE 'doreg3
00033A10 <AmiBlitz3.ab3@24848>    MOVE.l #$f2000280,d1
00033A16 <AmiBlitz3.ab3@24849>    MOVE.w regnum,d0
00033A18 <AmiBlitz3.ab3@24850>    ASL.w #7,d0
00033A1A <AmiBlitz3.ab3@24851>    OR.w d0,d1
00033A20 <AmiBlitz3.ab3@24852>    JSR  writelong
00033A22 <AmiBlitz3.ab3@24853>  RTS
00033A26 <AmiBlitz3.ab3@24856>   CMP.w 24+4(a4),d3
00033A2A <AmiBlitz3.ab3@24857>    BNE 'doreg4
00033A30 <AmiBlitz3.ab3@24858>    MOVE.l #$f2000200,d1
00033A36 <AmiBlitz3.ab3@24859>    MOVE.w regnum,d0
00033A38 <AmiBlitz3.ab3@24860>    ASL.w #7,d0
00033A3A <AmiBlitz3.ab3@24861>    OR.w d0,d1
00033A40 <AmiBlitz3.ab3@24862>    JSR writelong
00033A42 <AmiBlitz3.ab3@24863> RTS
00033A46 <AmiBlitz3.ab3@24866>   CMP.w 32+4(a4),d3
00033A4A <AmiBlitz3.ab3@24867>    BNE 'noreg
00033A50 <AmiBlitz3.ab3@24868>    MOVE.l #$f2000180,d1
00033A56 <AmiBlitz3.ab3@24869>    MOVE.w regnum,d0
00033A58 <AmiBlitz3.ab3@24870>    ASL.w #7,d0
00033A5A <AmiBlitz3.ab3@24871>    OR.w d0,d1
00033A60 <AmiBlitz3.ab3@24872>    JSR writelong
00033A62 <AmiBlitz3.ab3@24873> RTS
00033A68 <AmiBlitz3.ab3@24876>    TST.w regnum
00033A6C <AmiBlitz3.ab3@24877>    BNE 'nofp0
00033A72 <AmiBlitz3.ab3@24878>    MOVE.l destpointer ,a4
00033A7A <AmiBlitz3.ab3@24879>    CMP.l #$f2304400,-6(a4)
00033A7E <AmiBlitz3.ab3@24880>    BNE 'do
00033A84 <AmiBlitz3.ab3@24881>    CMP.w #$1990,-2(a4)
00033A88 <AmiBlitz3.ab3@24882>    BNE 'do
00033A8C <AmiBlitz3.ab3@24883>    BTST #15,d2                                             ;types ?
00033A90 <AmiBlitz3.ab3@24884>    BNE 'do
00033A96 <AmiBlitz3.ab3@24885>   MOVE.l #$2b701990,d1                                     ;var
00033A9C <AmiBlitz3.ab3@24886>   TST.w varmode
00033AA0 <AmiBlitz3.ab3@24887>   BEQ 'glob1
00033AA4 <AmiBlitz3.ab3@24888>   BCLR #25,d1
00033AA8 <AmiBlitz3.ab3@24891>   MOVE.l d1,-6(a4)
00033AAC <AmiBlitz3.ab3@24892>   MOVE.w d3,-2(a4)
00033AB2 <AmiBlitz3.ab3@24893>   CLR.w fp0var
00033ABA <AmiBlitz3.ab3@24894>   MOVE.w #$ffff,fp0mode
00033ABC <AmiBlitz3.ab3@24895> RTS
00033AC4 <AmiBlitz3.ab3@24898>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00033AC8 <AmiBlitz3.ab3@24899>    BNE 'do3
00033AD2 <AmiBlitz3.ab3@24900>    CMP.l #newtype_double,currtype
00033AD6 <AmiBlitz3.ab3@24901>    BEQ 'do4
00033ADA <AmiBlitz3.ab3@24904>   MOVE.w #$2b6d,d1
00033AE0 <AmiBlitz3.ab3@24905>    TST.w varmode
00033AE4 <AmiBlitz3.ab3@24906>    BEQ 'g2
00033AE8 <AmiBlitz3.ab3@24907>     BCLR #9,d1
00033AEC <AmiBlitz3.ab3@24910>     CMP.w #$2b6d,d1
00033AF0 <AmiBlitz3.ab3@24911>     BNE 'd1
00033AF4 <AmiBlitz3.ab3@24912>     CMP.w -2(a4),d3
00033AF8 <AmiBlitz3.ab3@24913>     BNE 'd1
00033AFE <AmiBlitz3.ab3@24914>     SUBQ.l #6,destpointer
00033B02 <AmiBlitz3.ab3@24915> BRA 'd12
00033B06 <AmiBlitz3.ab3@24918>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00033B0C <AmiBlitz3.ab3@24919>     MOVE.w -2(a4),-4(a4)
00033B10 <AmiBlitz3.ab3@24920>     MOVE.w d3,-2(a4)
00033B16 <AmiBlitz3.ab3@24923>   CLR.w fp0var
00033B1E <AmiBlitz3.ab3@24924>     MOVE.w #$ffff,fp0mode
00033B20 <AmiBlitz3.ab3@24925> RTS
00033B28 <AmiBlitz3.ab3@24928>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00033B2C <AmiBlitz3.ab3@24929>    BNE 'do4
00033B30 <AmiBlitz3.ab3@24930>    MOVE.w #$2b6c,d1
00033B36 <AmiBlitz3.ab3@24931>       TST.w varmode
00033B3A <AmiBlitz3.ab3@24932>    BEQ 'g3
00033B3E <AmiBlitz3.ab3@24933>    BCLR #9,d1
00033B42 <AmiBlitz3.ab3@24936>   MOVE.w d1,-6(a4)
00033B48 <AmiBlitz3.ab3@24937>     MOVE.w -2(a4),-4(a4)
00033B4C <AmiBlitz3.ab3@24938>     MOVE.w d3,-2(a4)
00033B52 <AmiBlitz3.ab3@24939>     CLR.w fp0var
00033B5A <AmiBlitz3.ab3@24940>     MOVE.w #$ffff,fp0mode
00033B5C <AmiBlitz3.ab3@24941> RTS
00033B62 <AmiBlitz3.ab3@24944>   MOVE.w d3,fp0var
00033B6C <AmiBlitz3.ab3@24945>    MOVE.w varmode,fp0mode
00033B6E <AmiBlitz3.ab3@24946>    ADDQ.l #6,a4
00033B74 <AmiBlitz3.ab3@24947>    MOVE.l a4,fp0addr
00033B7E <AmiBlitz3.ab3@24948>    MOVE.l firstiff,fp0iff
00033B82 <AmiBlitz3.ab3@24951>   MOVEM.l d0/d4,-(a7)
00033B84 <AmiBlitz3.ab3@24952>    MOVEQ #0,d0
00033B8A <AmiBlitz3.ab3@24953>     MOVE.w regnum,d0
00033B8C <AmiBlitz3.ab3@24954>    ASL.w #7,d0                                             ;fpu store var
00033B90 <AmiBlitz3.ab3@24955>   BTST #15,d2
00033B94 <AmiBlitz3.ab3@24956>    BEQ 'var
00033B96 <AmiBlitz3.ab3@24957>    MOVE.w d1,d4
00033B9A <AmiBlitz3.ab3@24958>    CMP.w #$24c0,d4
00033B9E <AmiBlitz3.ab3@24959>    BNE 'nopl
00033BA4 <AmiBlitz3.ab3@24960>    MOVE.l #$f21a6400,d1
00033BA6 <AmiBlitz3.ab3@24961>    MOVEQ #0,d3
00033BAA <AmiBlitz3.ab3@24962> BRA 'glob
00033BB0 <AmiBlitz3.ab3@24966>   MOVE.l #$f2126400,d1
00033BB2 <AmiBlitz3.ab3@24967>    TST.w d3                                                ;offset =0
00033BB6 <AmiBlitz3.ab3@24968>    BNE 'offset
00033BBC <AmiBlitz3.ab3@24969>    MOVE.l #$f2126400,d1
00033BBE <AmiBlitz3.ab3@24977>    MOVEQ #0,d3
00033BC2 <AmiBlitz3.ab3@24978> BRA 'glob
00033BC8 <AmiBlitz3.ab3@24981>   MOVE.l #$f22d6400,d1                                     ;var
00033BCE <AmiBlitz3.ab3@24982>   TST.w varmode
00033BD2 <AmiBlitz3.ab3@24983>   BEQ 'glob
00033BD6 <AmiBlitz3.ab3@24984>   BCLR #16,d1
00033BD8 <AmiBlitz3.ab3@24985>  'glob OR.l d0,d1
00033BE2 <AmiBlitz3.ab3@24988>   CMP.l #newtype_double,currtype
00033BE6 <AmiBlitz3.ab3@24989>   BNE 'dbl1
00033BEC <AmiBlitz3.ab3@24990>   OR.l #$00001000,d1
00033BF2 <AmiBlitz3.ab3@24993>   JSR writelong
00033BF8 <AmiBlitz3.ab3@24994>   CLR.l currtype
00033BFC <AmiBlitz3.ab3@24995>   MOVEM.l (a7)+,d0/d4
00033BFE <AmiBlitz3.ab3@24996>   MOVE.l d3,d1
00033C02 <AmiBlitz3.ab3@24997>   BEQ 'nooffs
00033C08 <AmiBlitz3.ab3@24998> JMP writeword
00033C0A <AmiBlitz3.ab3@25001> RTS
00033C10 <AmiBlitz3.ab3@25015>     TST.b fast                                             ;write lea->xx(a2)
00033C14 <AmiBlitz3.ab3@25016>    BEQ 'la10
00033C1A <AmiBlitz3.ab3@25020>    TST.b quickadd
00033C20 <AmiBlitz3.ab3@25022>      CLR.b quickadd
00033C24 <AmiBlitz3.ab3@25023>    CMP.w #$2480,d1
00033C28 <AmiBlitz3.ab3@25024>    BNE 'la10
00033C2E <AmiBlitz3.ab3@25025>    TST.b optiarray
00033C32 <AmiBlitz3.ab3@25026>    BNE 'la10
00033C38 <AmiBlitz3.ab3@25027>    MOVE.l destpointer,a4
00033C3E <AmiBlitz3.ab3@25028>    CMP.w #$45ea,-4(a4)
00033C42 <AmiBlitz3.ab3@25029>    BNE 'la10
00033C4A <AmiBlitz3.ab3@25030>    CMP.w #8,pushclen
00033C4E <AmiBlitz3.ab3@25031>    BEQ 'la100
00033C56 <AmiBlitz3.ab3@25032>    CMP.w #6,pushclen
00033C5A <AmiBlitz3.ab3@25033>    BNE 'la10
00033C5E <AmiBlitz3.ab3@25034>    CMP.b #3,d2
00033C62 <AmiBlitz3.ab3@25035>    BCS 'la110
00033C68 <AmiBlitz3.ab3@25037>    MOVE.w #$2540,-2(a4)
00033C6E <AmiBlitz3.ab3@25038>    MOVE.w arrayoffset,d1
00033C74 <AmiBlitz3.ab3@25039> JMP writeword
00033C7A <AmiBlitz3.ab3@25042>    CLR.b quickadd
00033C7C <AmiBlitz3.ab3@25043> RTS
00033C80 <AmiBlitz3.ab3@25046>    CMP.b #2,d2
00033C84 <AmiBlitz3.ab3@25047>    BNE 'la120
00033C8A <AmiBlitz3.ab3@25048>     MOVE.w #$3540,-2(a4)
00033C90 <AmiBlitz3.ab3@25049>    MOVE.w arrayoffset,d1
00033C96 <AmiBlitz3.ab3@25050> JMP writeword
00033C9A <AmiBlitz3.ab3@25053>   CMP.b #1,d2
00033C9E <AmiBlitz3.ab3@25054>    BNE.s 'la10
00033CA4 <AmiBlitz3.ab3@25055>     MOVE.w #$1540,-2(a4)
00033CAA <AmiBlitz3.ab3@25056>    MOVE.w arrayoffset,d1
00033CB0 <AmiBlitz3.ab3@25057> JMP writeword
00033CB4 <AmiBlitz3.ab3@25060>    CMP.b #3,d2
00033CB8 <AmiBlitz3.ab3@25061>    BCS 'la11
00033CBE <AmiBlitz3.ab3@25062>    MOVE.w #$2540,-4(a4)
00033CC0 <AmiBlitz3.ab3@25063> RTS
00033CC4 <AmiBlitz3.ab3@25066>    CMP.b #2,d2
00033CC8 <AmiBlitz3.ab3@25067>    BNE 'la12
00033CCE <AmiBlitz3.ab3@25068>     MOVE.w #$3540,-4(a4)
00033CD0 <AmiBlitz3.ab3@25069> RTS
00033CD4 <AmiBlitz3.ab3@25071>  'la12 CMP.b #1,d2
00033CD8 <AmiBlitz3.ab3@25072>    BNE.s 'la10
00033CDE <AmiBlitz3.ab3@25073>     MOVE.w #$1540,-4(a4)
00033CE0 <AmiBlitz3.ab3@25074> RTS
00033CE6 <AmiBlitz3.ab3@25077>   CLR.b optiarray
00033CEA <AmiBlitz3.ab3@25078>    CMP.b #$1,D2
00033CEE <AmiBlitz3.ab3@25079>    BEQ.w JL_0_E0AC
00033CF2 <AmiBlitz3.ab3@25080>    BSR.w varalign
00033CF6 <AmiBlitz3.ab3@25081>    CMP.b #$3,D2
00033CFA <AmiBlitz3.ab3@25082>    BCC.w writevarlong
00033D00 <AmiBlitz3.ab3@25083>    TST.b fast                                              ;optiimmi
00033D04 <AmiBlitz3.ab3@25084>    BEQ 'l10b
00033D0A <AmiBlitz3.ab3@25089>    MOVE.l destpointer,a0
00033D10 <AmiBlitz3.ab3@25090>    SUB.l imm_addr,a0
00033D16 <AmiBlitz3.ab3@25091>    CMP.l #4,a0
00033D1A <AmiBlitz3.ab3@25092>    BNE 'l10
00033D20 <AmiBlitz3.ab3@25093>    CLR.l imm_addr
00033D26 <AmiBlitz3.ab3@25094>    MOVE.l destpointer,a4
00033D2A <AmiBlitz3.ab3@25095>    OR.w #$107c,d1
00033D2E <AmiBlitz3.ab3@25096>    MOVE.w d1,-4(a4)
00033D30 <AmiBlitz3.ab3@25097>     MOVE.w D3,D1
00033D36 <AmiBlitz3.ab3@25098> JMP writeword
00033D3C <AmiBlitz3.ab3@25101>   MOVE.l destpointer,a0
00033D42 <AmiBlitz3.ab3@25102>   SUB.l load_var_addr,a0
00033D48 <AmiBlitz3.ab3@25103>   CMP.l #4,a0
00033D4C <AmiBlitz3.ab3@25104>   BNE 'l10b
00033D52 <AmiBlitz3.ab3@25105>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00033D56 <AmiBlitz3.ab3@25106>   BNE 'l10b
00033D5C <AmiBlitz3.ab3@25108>   CLR.l load_var_addr
00033D62 <AmiBlitz3.ab3@25109>   MOVE.l destpointer,a4
00033D66 <AmiBlitz3.ab3@25110>   OR.w #$102d,d1
00033D6A <AmiBlitz3.ab3@25111>   MOVE.w d1,-4(a4)
00033D6C <AmiBlitz3.ab3@25112>   MOVE.w d3,d1
00033D72 <AmiBlitz3.ab3@25113> JMP writeword
00033D76 <AmiBlitz3.ab3@25116>   ORI.w #$1000,D1                                          ;word
00033D7A <AmiBlitz3.ab3@25117> BRA.w writestorevar
00033D80 <AmiBlitz3.ab3@25121>    TST.b fast                                              ;optiimmi
00033D84 <AmiBlitz3.ab3@25122>    BEQ 'l10b
00033D8A <AmiBlitz3.ab3@25127>    MOVE.l destpointer,a0
00033D90 <AmiBlitz3.ab3@25128>    SUB.l imm_addr,a0
00033D96 <AmiBlitz3.ab3@25129>    CMP.l #4,a0
00033D9A <AmiBlitz3.ab3@25130>    BNE 'l10
00033DA0 <AmiBlitz3.ab3@25131>    CLR.l imm_addr
00033DA6 <AmiBlitz3.ab3@25132>    MOVE.l destpointer,a4
00033DAA <AmiBlitz3.ab3@25133>    OR.w #$7c,d1
00033DAE <AmiBlitz3.ab3@25134>    EORI #$3000,d1
00033DB2 <AmiBlitz3.ab3@25135>    MOVE.w d1,-4(a4)
00033DB4 <AmiBlitz3.ab3@25136>       MOVE.w D3,D1
00033DBA <AmiBlitz3.ab3@25137> JMP writeword
00033DC0 <AmiBlitz3.ab3@25140>   MOVE.l destpointer,a0
00033DC6 <AmiBlitz3.ab3@25141>   SUB.l load_var_addr,a0
00033DCC <AmiBlitz3.ab3@25142>   CMP.l #4,a0
00033DD0 <AmiBlitz3.ab3@25143>   BNE 'l10b
00033DD6 <AmiBlitz3.ab3@25144>   CLR.l load_var_addr
00033DDC <AmiBlitz3.ab3@25145>   MOVE.l destpointer,a4
00033DE2 <AmiBlitz3.ab3@25146>    CMP.w #$1b6d,-4(a4)
00033DE6 <AmiBlitz3.ab3@25147>    BNE 'l10b
00033DEA <AmiBlitz3.ab3@25148>    OR.w #$2d,d1
00033DEE <AmiBlitz3.ab3@25149>    EORI #$3000,d1
00033DF2 <AmiBlitz3.ab3@25150>    MOVE.w d1,-4(a4)
00033DF4 <AmiBlitz3.ab3@25151>   MOVE.w d3,d1
00033DFA <AmiBlitz3.ab3@25152> JMP writeword
00033E00 <AmiBlitz3.ab3@25155>   ADDQ.w #1,pcodd                                          ;byte
00033E04 <AmiBlitz3.ab3@25156>   EORI.w #$3000,D1
00033E0A <AmiBlitz3.ab3@25159>   JSR writeword
00033E0E <AmiBlitz3.ab3@25160>   BTST #$7,D1
00033E12 <AmiBlitz3.ab3@25161>    BNE JL_0_E0C6
00033E14 <AmiBlitz3.ab3@25162>   MOVE.w D3,D1
00033E1A <AmiBlitz3.ab3@25163> JMP writeword
00033E20 <AmiBlitz3.ab3@25166>    TST.b fast                                              ;optiimmi
00033E24 <AmiBlitz3.ab3@25167>    BEQ 'l10b
00033E2A <AmiBlitz3.ab3@25171>    MOVE.l destpointer,a0
00033E30 <AmiBlitz3.ab3@25172>    SUB.l imm_addr,a0
00033E36 <AmiBlitz3.ab3@25173>    CMP.l #6,a0
00033E3A <AmiBlitz3.ab3@25174>    BNE 'l10
00033E40 <AmiBlitz3.ab3@25175>    CLR.l imm_addr
00033E46 <AmiBlitz3.ab3@25176>    MOVE.l destpointer,a4
00033E4A <AmiBlitz3.ab3@25177>    OR.w #$7c,d1
00033E4E <AmiBlitz3.ab3@25178>    MOVE.w d1,-6(a4)
00033E50 <AmiBlitz3.ab3@25179>     MOVE.w D3,D1
00033E56 <AmiBlitz3.ab3@25180> JMP writeword
00033E5C <AmiBlitz3.ab3@25183>   MOVE.l destpointer,a0
00033E62 <AmiBlitz3.ab3@25184>   SUB.l load_var_addr,a0
00033E68 <AmiBlitz3.ab3@25185>   CMP.l #4,a0
00033E6C <AmiBlitz3.ab3@25186>   BNE 'l10b
00033E72 <AmiBlitz3.ab3@25187>   CLR.l load_var_addr
00033E78 <AmiBlitz3.ab3@25188>   MOVE.l destpointer,a4
00033E7E <AmiBlitz3.ab3@25189>   CMP.w #$245f,-2(a4)
00033E82 <AmiBlitz3.ab3@25190>   BEQ 'l10b
00033E86 <AmiBlitz3.ab3@25191>   OR.w #$28,d1
00033E8A <AmiBlitz3.ab3@25192>   OR.w d1,-4(a4)
00033E90 <AmiBlitz3.ab3@25193>   CMP.w #$2b6d,-4(a4)
00033E94 <AmiBlitz3.ab3@25194>   BNE 'd1
00033E98 <AmiBlitz3.ab3@25195>   CMP.w -2(a4),d3
00033E9C <AmiBlitz3.ab3@25196>   BNE 'd1
00033EA2 <AmiBlitz3.ab3@25197>   SUBQ.l #4,destpointer
00033EA4 <AmiBlitz3.ab3@25198> RTS
00033EA6 <AmiBlitz3.ab3@25201>   MOVE.w d3,d1
00033EAC <AmiBlitz3.ab3@25202> JMP writeword
00033EB2 <AmiBlitz3.ab3@25205>   JSR writeword
00033EB6 <AmiBlitz3.ab3@25206>   BTST #$7,D1
00033EBA <AmiBlitz3.ab3@25207>    BNE.b JL_0_E0C6
00033EBC <AmiBlitz3.ab3@25208>   MOVE.w D3,D1
00033EC2 <AmiBlitz3.ab3@25209> JMP writeword
00033EC4 <AmiBlitz3.ab3@25212> RTS
00033EC6 <AmiBlitz3.ab3@25216>   MOVE.w D1,-(A7)
00033ECA <AmiBlitz3.ab3@25217>   MOVE.w pcodd(PC),D1
00033ECC <AmiBlitz3.ab3@25218>   LSR.w #1,D1
00033ED0 <AmiBlitz3.ab3@25219>    BCC.b JL_0_E0E2
00033ED6 <AmiBlitz3.ab3@25220>   CLR.w pcodd
00033EDC <AmiBlitz3.ab3@25221>   MOVE.w add1a2,D1
00033EE2 <AmiBlitz3.ab3@25222>    JSR writeword
00033EE4 <AmiBlitz3.ab3@25225>   MOVE.w (A7)+,D1
00033EE6 <AmiBlitz3.ab3@25226> RTS
00033EE8 <AmiBlitz3.ab3@25230> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00033EEA <AmiBlitz3.ab3@25233> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00033EEC <AmiBlitz3.ab3@25234> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00033EEE <AmiBlitz3.ab3@25235> listsize:  Ds.w 1
00033EF4 <AmiBlitz3.ab3@25239>   ADDQ.w #1,regnum
00033EFC <AmiBlitz3.ab3@25240>   MOVE.b #1,nowdeclare
00033F02 <AmiBlitz3.ab3@25241>   CLR.b dimkeep
00033F0A <AmiBlitz3.ab3@25242>    CMP.l #"KEEP",-1(a5)
00033F0E <AmiBlitz3.ab3@25243>   BNE 'nokeep
00033F14 <AmiBlitz3.ab3@25244>   CMP.b #" ",3(a5)
00033F18 <AmiBlitz3.ab3@25245>   BNE 'nokeep
00033F1A <AmiBlitz3.ab3@25246>   ADDQ.l #3,a5
00033F1E <AmiBlitz3.ab3@25249>     CMP.b #" ",(a5)
00033F22 <AmiBlitz3.ab3@25250>     BNE '1
00033F24 <AmiBlitz3.ab3@25251>    ADDQ #1,a5
00033F28 <AmiBlitz3.ab3@25252> BRA '2
00033F2E <AmiBlitz3.ab3@25255>   MOVE.l a5,lastsourcepos
00033F36 <AmiBlitz3.ab3@25256>   MOVE.b #1,dimkeep
00033F3A <AmiBlitz3.ab3@25264>   MOVE.w #$FF9A,D1
00033F40 <AmiBlitz3.ab3@25265>   JSR uselib
00033F46 <AmiBlitz3.ab3@25268>   CLR.w listadd
00033F4A <AmiBlitz3.ab3@25269>   CMP.w #-$7F4D,D0
00033F4E <AmiBlitz3.ab3@25270>    BNE.w JL_0_E11E
00033F56 <AmiBlitz3.ab3@25271>   MOVE.w #$0008,listadd
00033F5A <AmiBlitz3.ab3@25272>   MOVE.w #$FFFA,D1
00033F60 <AmiBlitz3.ab3@25273>    JSR uselib
00033F66 <AmiBlitz3.ab3@25274>    JSR get1bytemain
00033F6C <AmiBlitz3.ab3@25277>   CLR.w nonew
00033F72 <AmiBlitz3.ab3@25278>    JSR getparameter
00033F7A <AmiBlitz3.ab3@25279>   BTST #$1,flagmask+1
00033F7E <AmiBlitz3.ab3@25280>    BEQ.w JUMP_syntaxerr
00033F84 <AmiBlitz3.ab3@25281>    JSR JL_0_8E3C
00033F8A <AmiBlitz3.ab3@25282>   MOVE.w notshared,D1
00033F8E <AmiBlitz3.ab3@25283>    BNE.w JL_0_E198
00033F96 <AmiBlitz3.ab3@25284>   MOVE.w $8(A3),temp1
00033F9C <AmiBlitz3.ab3@25285>   MOVE.w proceduremode,D2
00033FA0 <AmiBlitz3.ab3@25286>    BNE.w JL_0_E176
00033FA6 <AmiBlitz3.ab3@25287>   MOVE.w globalvarpointer,-(A7)
00033FAE <AmiBlitz3.ab3@25288>   MOVE.w $4(A3),globalvarpointer
00033FB4 <AmiBlitz3.ab3@25289>   ADDQ.w #4,globalvarpointer
00033FB8 <AmiBlitz3.ab3@25290>    BSR.w write_dim_code
00033FBE <AmiBlitz3.ab3@25291>   MOVE.w (A7)+,globalvarpointer
00033FC2 <AmiBlitz3.ab3@25292> BRA.w JL_0_E1BA
00033FC8 <AmiBlitz3.ab3@25303>   MOVE.w globalvarpointer,-(A7)
00033FCE <AmiBlitz3.ab3@25304>             MOVE.w proceduremode,-(a7)
00033FD4 <AmiBlitz3.ab3@25305>             CLR.w proceduremode
00033FDC <AmiBlitz3.ab3@25306>   MOVE.w $4(A3),globalvarpointer
00033FE2 <AmiBlitz3.ab3@25307>   ADDQ.w #4,globalvarpointer
00033FE6 <AmiBlitz3.ab3@25308>    BSR.w write_dim_code
00033FEC <AmiBlitz3.ab3@25309>    MOVE.w (a7)+,proceduremode
00033FF2 <AmiBlitz3.ab3@25310>   MOVE.w (A7)+,globalvarpointer
00033FF6 <AmiBlitz3.ab3@25311> BRA.w JL_0_E1BA
00033FFE <AmiBlitz3.ab3@25314>   MOVE.w #$FFFF,temp1
00034002 <AmiBlitz3.ab3@25315>   MOVE.w listadd(PC),D1
00034006 <AmiBlitz3.ab3@25316>    BEQ.w JL_0_E1B6
0003400E <AmiBlitz3.ab3@25317>   MOVE.w #$4000,temp1
00034014 <AmiBlitz3.ab3@25318>   BSET #$0,$6(A3)
0003401A <AmiBlitz3.ab3@25321>         TST.w proceduremode
0003401E <AmiBlitz3.ab3@25322>        BNE 'l1
00034024 <AmiBlitz3.ab3@25323>        MOVE.w locvaroff,-(a7)
00034028 <AmiBlitz3.ab3@25326>   BSR.w write_dim_code
0003402E <AmiBlitz3.ab3@25327>         TST.w proceduremode
00034032 <AmiBlitz3.ab3@25328>         BNE JL_0_E1BA
00034038 <AmiBlitz3.ab3@25329>        MOVE.w (A7)+,locvaroff
0003403E <AmiBlitz3.ab3@25332>   JSR get1bytemain
00034042 <AmiBlitz3.ab3@25333>   CMP.w #$2C,D0
00034046 <AmiBlitz3.ab3@25334>    BNE.w JL_0_E1CE
0003404C <AmiBlitz3.ab3@25335>    JSR get1bytemain
00034050 <AmiBlitz3.ab3@25336> BRA.w JL_0_E0FC
00034052 <AmiBlitz3.ab3@25339> RTS
0003405A <AmiBlitz3.ab3@25342>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00034060 <AmiBlitz3.ab3@25343>   MOVE.w beginarr,D1
00034066 <AmiBlitz3.ab3@25344>    JSR writeword
00034068 <AmiBlitz3.ab3@25345>   MOVEQ.l #$00,D1
0003406E <AmiBlitz3.ab3@25346>    JSR writeword
00034070 <AmiBlitz3.ab3@25347>   MOVEQ.l #$04,D1
00034078 <AmiBlitz3.ab3@25348>   BTST #$0,flagmask+1
0003407C <AmiBlitz3.ab3@25349>    BNE.w write_dim_code__pointer
00034080 <AmiBlitz3.ab3@25350>   MOVE.w $8(A2),D1
00034084 <AmiBlitz3.ab3@25353>   ADD.w listadd(PC),D1                                     ;size of one element.
0003408A <AmiBlitz3.ab3@25354>   MOVE.w D1,listsize
00034090 <AmiBlitz3.ab3@25355>    JSR writeword
00034096 <AmiBlitz3.ab3@25356>   CLR.w temp2                                              ;# dim's got
00034098 <AmiBlitz3.ab3@25357>   MOVE.l A3,-(A7)
0003409E <AmiBlitz3.ab3@25360>   ADDQ.w #1,temp2
000340A0 <AmiBlitz3.ab3@25361>   MOVEQ.l #$03,D2                                          ;get word
000340A6 <AmiBlitz3.ab3@25362>   MOVE.w notshared,-(a7)
000340AC <AmiBlitz3.ab3@25363>    JSR eval
000340B2 <AmiBlitz3.ab3@25364>   MOVE.w (a7)+,notshared
000340B8 <AmiBlitz3.ab3@25365>   TST.b debugmode
000340BC <AmiBlitz3.ab3@25366>    BEQ.w write_dim_code__norerr0
000340C0 <AmiBlitz3.ab3@25367>   MOVE.w #$C30F,D1
000340C4 <AmiBlitz3.ab3@25373>       MOVE.w #$5281,d1
000340CA <AmiBlitz3.ab3@25374>       JSR writeword
000340D0 <AmiBlitz3.ab3@25375>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
000340D6 <AmiBlitz3.ab3@25376>       JSR writelong
000340DC <AmiBlitz3.ab3@25377>   MOVE.w proceduremode,D2
000340E0 <AmiBlitz3.ab3@25378>    BEQ.w write_dim_code__global
000340E6 <AmiBlitz3.ab3@25379>   SUBQ.w #4,locvaroff
000340F0 <AmiBlitz3.ab3@25380>   MOVE.w locvaroff,putarr+2
000340F4 <AmiBlitz3.ab3@25381> BRA.w write_dim_code__doit
000340FA <AmiBlitz3.ab3@25384> JMP syntaxerr
00034104 <AmiBlitz3.ab3@25387>   MOVE.w globalvarpointer,putarr+2
0003410A <AmiBlitz3.ab3@25388>   ADDQ.w #4,globalvarpointer
00034110 <AmiBlitz3.ab3@25391>   TST.b dimkeep
00034114 <AmiBlitz3.ab3@25392>            BEQ write_dim_code__doit_l1
00034116 <AmiBlitz3.ab3@25393>       MOVEQ #0,d1
0003411C <AmiBlitz3.ab3@25394>       MOVE.w putarr+2,d1
00034122 <AmiBlitz3.ab3@25395>       OR.l  #$222d0000,d1
00034128 <AmiBlitz3.ab3@25396>       MOVE.w proceduremode,D2
0003412C <AmiBlitz3.ab3@25397>       BEQ write_dim_code__doit_l2
00034132 <AmiBlitz3.ab3@25398>       TST.w notshared
00034136 <AmiBlitz3.ab3@25399>       BEQ write_dim_code__doit_l2
0003413C <AmiBlitz3.ab3@25400>       SUB.l #$00010000,d1
00034142 <AmiBlitz3.ab3@25403>   JSR writelong
00034148 <AmiBlitz3.ab3@25406>   MOVE.l putarr,D1
0003414E <AmiBlitz3.ab3@25407>       TST.w notshared
00034152 <AmiBlitz3.ab3@25408>       BNE write_dim_code__doit_l1a
00034158 <AmiBlitz3.ab3@25409>       JSR writelong
0003415C <AmiBlitz3.ab3@25410> BRA write_dim_code__doit_l4
00034162 <AmiBlitz3.ab3@25413>   JSR pokela5d
00034166 <AmiBlitz3.ab3@25416>   CMP.w #$2C,D0
0003416A <AmiBlitz3.ab3@25417>    BEQ.w write_dim_code__loop
0003416E <AmiBlitz3.ab3@25418>   CMP.w #$29,D0
00034172 <AmiBlitz3.ab3@25419>    BNE.w JUMP_syntaxerr
00034174 <AmiBlitz3.ab3@25420>   MOVEA.l (A7)+,A3
0003417A <AmiBlitz3.ab3@25421>   MOVE.w temp1,D1
0003417E <AmiBlitz3.ab3@25422>    BMI.w write_dim_code__nocare
00034182 <AmiBlitz3.ab3@25426>   BTST #$E,D1
00034186 <AmiBlitz3.ab3@25427>    BEQ.w write_dim_code__notl
0003418E <AmiBlitz3.ab3@25428>   CMPI.w #$1,temp2
00034192 <AmiBlitz3.ab3@25429>    BNE.w JUMP_redimerr
00034196 <AmiBlitz3.ab3@25430> BRA.w write_dim_code__nocare
0003419C <AmiBlitz3.ab3@25433> JMP redimerr
000341A2 <AmiBlitz3.ab3@25436>   CMP.w temp2,D1
000341A6 <AmiBlitz3.ab3@25437>    BNE.w JUMP_redimerr                                      ;range too long
000341AC <AmiBlitz3.ab3@25440>   LEA globalvarpointer,A0
000341B2 <AmiBlitz3.ab3@25441>   MOVE.w proceduremode,D1
000341B6 <AmiBlitz3.ab3@25442>   BEQ.w write_dim_code__gskip
000341BC <AmiBlitz3.ab3@25443>   LEA locvaroff,A0
000341C2 <AmiBlitz3.ab3@25446>   MOVE.W  extraword,(A0)
000341C6 <AmiBlitz3.ab3@25447>   BRA.W   write_dim_code__care
000341CE <AmiBlitz3.ab3@25450>   MOVE.w temp2,$8(A3)                                      ;set # dim's
000341D4 <AmiBlitz3.ab3@25453>   LEA doarr,A0
000341DA <AmiBlitz3.ab3@25454>   MOVE.w $4(A3),$2(A0)
000341E2 <AmiBlitz3.ab3@25455>   MOVE.w putarr+2,$6(A0)
000341E4 <AmiBlitz3.ab3@25456>   MOVE.l (A0)+,D1
000341EA <AmiBlitz3.ab3@25457>    JSR writelong
000341EC <AmiBlitz3.ab3@25458>   MOVE.l (A0),D1
000341F2 <AmiBlitz3.ab3@25459>    JSR writelong
000341F8 <AmiBlitz3.ab3@25460>    TST.b dimkeep
000341FC <AmiBlitz3.ab3@25461>   BNE write_dim_code__care_l3
00034200 <AmiBlitz3.ab3@25464>   MOVE.w #$C400,D1
00034204 <AmiBlitz3.ab3@25465> BRA write_dim_code__care_l2
00034208 <AmiBlitz3.ab3@25468>   MOVE.w #$C405,d1
0003420E <AmiBlitz3.ab3@25471>   MOVE.w proceduremode,D2
00034212 <AmiBlitz3.ab3@25472>    BEQ.w write_dim_code__isg
00034218 <AmiBlitz3.ab3@25473>    TST.w notshared
0003421C <AmiBlitz3.ab3@25474>    BEQ write_dim_code__isg
0003421E <AmiBlitz3.ab3@25475>   ADDQ.w #1,D1
00034222 <AmiBlitz3.ab3@25478>   MOVE.w listadd(PC),D2
00034226 <AmiBlitz3.ab3@25479>    BEQ.w write_dim_code__isrg
00034228 <AmiBlitz3.ab3@25480>   MOVE.w D1,-(A7)
0003422C <AmiBlitz3.ab3@25481>   MOVE.w setles(PC),D1
00034232 <AmiBlitz3.ab3@25482>    JSR writeword
00034236 <AmiBlitz3.ab3@25483>   MOVE.w listsize(PC),D1
0003423C <AmiBlitz3.ab3@25484>    JSR writeword
0003423E <AmiBlitz3.ab3@25485>   MOVE.w (A7)+,D1
00034240 <AmiBlitz3.ab3@25486>   ADDQ.w #3,D1
00034244 <AmiBlitz3.ab3@25489> BRA.w Atokejsr
0003424A <AmiBlitz3.ab3@25496>     MOVE.l #$f23c4400,d1
00034250 <AmiBlitz3.ab3@25498>   MOVE.w regnum,d0
00034252 <AmiBlitz3.ab3@25499>   ASL.w #7,d0
00034254 <AmiBlitz3.ab3@25500>   OR.w d0,d1
0003425A <AmiBlitz3.ab3@25501>   JSR writelong
00034260 <AmiBlitz3.ab3@25507>     MOVE.l #$40490fd9,d1
00034266 <AmiBlitz3.ab3@25509>   JSR writelong
0003426C <AmiBlitz3.ab3@25510> JMP get1bytemain
00034270 <AmiBlitz3.ab3@25514> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00034274 <AmiBlitz3.ab3@25521> vbr:                Ds.l 1
00034276 <AmiBlitz3.ab3@25522> cfetchmode:         Ds.w 1                               ;1=fetching a constant
0003427C <AmiBlitz3.ab3@25524> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034280 <AmiBlitz3.ab3@25528> constpcat:          Ds.l 1
00034284 <AmiBlitz3.ab3@25529> constlibat:         Ds.l 1
00034288 <AmiBlitz3.ab3@25530> constmaxpc:         Dc.l $400
0003428C <AmiBlitz3.ab3@25532> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034290 <AmiBlitz3.ab3@25533> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00034294 <AmiBlitz3.ab3@25534> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034298 <AmiBlitz3.ab3@25535> lastrestype:        Dc.l newtype_string
0003429A <AmiBlitz3.ab3@25536> rescnt:             Ds.w 1                               ;# resident
0003429C <AmiBlitz3.ab3@25537> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
000342A0 <AmiBlitz3.ab3@25538> resat:              Dc.l residents_table                 ;??looks like not used anymore??
000342A2 <AmiBlitz3.ab3@25539> linedone:           Ds.w 1
000342B8 <AmiBlitz3.ab3@25540> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
000342BC <AmiBlitz3.ab3@25549>   Dc.l 0                                        ; bytetobyte
000342C0 <AmiBlitz3.ab3@25550>   Dc.l convert_byte_to_word                     ; bytetoword
000342C4 <AmiBlitz3.ab3@25551>   Dc.l convert_byte_to_long                     ; bytetolong
000342C8 <AmiBlitz3.ab3@25552>   Dc.l convert_byte_to_quick                    ; bytetoquick
000342CC <AmiBlitz3.ab3@25553>   Dc.l convert_byte_to_float                    ; bytetofloat
000342D0 <AmiBlitz3.ab3@25554>   Dc.l convert_byte_to_long                     ; bytetolong
000342D4 <AmiBlitz3.ab3@25555>   Dc.l error_convert_types                      ; noconerr
000342D8 <AmiBlitz3.ab3@25558>   Dc.l convert_word_to_byte                     ; wordtobyte
000342DC <AmiBlitz3.ab3@25559>   Dc.l 0                                        ; wordtoword
000342E0 <AmiBlitz3.ab3@25560>   Dc.l convert_word_to_long                     ; wordtolong
000342E4 <AmiBlitz3.ab3@25561>   Dc.l convert_word_to_quick                    ; wordtoquick
000342E8 <AmiBlitz3.ab3@25562>   Dc.l convert_word_to_float                    ; wordtofloat
000342EC <AmiBlitz3.ab3@25563>   Dc.l convert_word_to_long                     ; wordtolong
000342F0 <AmiBlitz3.ab3@25564>   Dc.l error_convert_types                      ; noconerr
000342F4 <AmiBlitz3.ab3@25567>   Dc.l convert_long_to_byte                     ; longtobyte
000342F8 <AmiBlitz3.ab3@25568>   Dc.l convert_long_to_word                     ; longtoword
000342FC <AmiBlitz3.ab3@25569>   Dc.l 0                                        ; longtolong
00034300 <AmiBlitz3.ab3@25570>   Dc.l convert_long_to_quick                    ; longtoquick
00034304 <AmiBlitz3.ab3@25571>   Dc.l convert_long_to_float                    ; longtofloat
00034308 <AmiBlitz3.ab3@25572>   Dc.l 0                                        ; longtolong
0003430C <AmiBlitz3.ab3@25573>   Dc.l error_convert_types                      ; noconerr
00034310 <AmiBlitz3.ab3@25576>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034314 <AmiBlitz3.ab3@25577>   Dc.l convert_quick_to_word                    ; quicktoword
00034318 <AmiBlitz3.ab3@25578>   Dc.l convert_quick_to_long                    ; quicktolong
0003431C <AmiBlitz3.ab3@25579>   Dc.l 0                                        ; quicktoquick
00034320 <AmiBlitz3.ab3@25580>   Dc.l convert_quick_to_float                   ; quicktofloat
00034324 <AmiBlitz3.ab3@25581>   Dc.l convert_quick_to_long                    ; quicktolong
00034328 <AmiBlitz3.ab3@25582>   Dc.l error_convert_types                      ; noconerr
0003432C <AmiBlitz3.ab3@25585>   Dc.l convert_float_to_byte                    ; floattobyte
00034330 <AmiBlitz3.ab3@25586>   Dc.l convert_float_to_word                    ; floattoword
00034334 <AmiBlitz3.ab3@25587>   Dc.l convert_float_to_long                    ; floattolong
00034338 <AmiBlitz3.ab3@25588>   Dc.l convert_float_to_quick                   ; floattoquick
0003433C <AmiBlitz3.ab3@25589>   Dc.l 0                                        ; floattofloat
00034340 <AmiBlitz3.ab3@25590>   Dc.l convert_float_to_long                    ; floattolong
00034344 <AmiBlitz3.ab3@25591>   Dc.l error_convert_types                      ; noconerr
00034348 <AmiBlitz3.ab3@25594>   Dc.l convert_long_to_byte                     ; longtobyte
0003434C <AmiBlitz3.ab3@25595>   Dc.l convert_long_to_word                     ; longtoword
00034350 <AmiBlitz3.ab3@25596>   Dc.l 0                                        ; longtolong
00034354 <AmiBlitz3.ab3@25597>   Dc.l convert_long_to_quick                    ; longtoquick
00034358 <AmiBlitz3.ab3@25598>   Dc.l convert_long_to_float                    ; longtofloat
0003435C <AmiBlitz3.ab3@25599>   Dc.l 0                                        ; longtolong
00034360 <AmiBlitz3.ab3@25600>   Dc.l error_convert_types                      ; noconerr
00034364 <AmiBlitz3.ab3@25603>   Dc.l error_convert_types                      ; noconerr
00034368 <AmiBlitz3.ab3@25604>   Dc.l error_convert_types                      ; noconerr
0003436C <AmiBlitz3.ab3@25605>   Dc.l string_to_long                           ; stringtolong
00034370 <AmiBlitz3.ab3@25606>   Dc.l error_convert_types                      ; noconerr
00034374 <AmiBlitz3.ab3@25607>   Dc.l error_convert_types                      ; noconerr
00034378 <AmiBlitz3.ab3@25608>   Dc.l string_to_long                           ; stringtolong
0003437C <AmiBlitz3.ab3@25609>   Ds.l 1
0003437E <AmiBlitz3.ab3@25615>   Dc.b $00,$2B                                  ;+ ; add
00034382 <AmiBlitz3.ab3@25616>   Dc.l do_plus_byte                             ;doplusb
00034386 <AmiBlitz3.ab3@25617>   Dc.l do_plus_word                             ;doplusw
0003438A <AmiBlitz3.ab3@25618>   Dc.l do_plus_long                             ;doplusl
0003438E <AmiBlitz3.ab3@25619>   Dc.l do_plus_long                             ;doplusl
00034392 <AmiBlitz3.ab3@25620>   Dc.l do_plus_float                            ;doplusf
00034396 <AmiBlitz3.ab3@25621>   Ds.l 1
0003439A <AmiBlitz3.ab3@25622>   Dc.l add_strings                              ;addstrings
0003439C <AmiBlitz3.ab3@25623>   Dc.b $0B,$B8
0003439E <AmiBlitz3.ab3@25625>   Dc.b $00,$2D                                  ;- ; sub
000343A2 <AmiBlitz3.ab3@25626>   Dc.l do_minus_byte                            ;dominusb
000343A6 <AmiBlitz3.ab3@25627>   Dc.l do_minus_word                            ;dominusw
000343AA <AmiBlitz3.ab3@25628>   Dc.l do_minus_long                            ;dominusl
000343AE <AmiBlitz3.ab3@25629>   Dc.l do_minus_long                            ;dominusl
000343B2 <AmiBlitz3.ab3@25630>   Dc.l do_minus_float                           ;dominusf
000343BA <AmiBlitz3.ab3@25631>   Ds.l 2
000343BC <AmiBlitz3.ab3@25632>   Dc.b $0B,$B8
000343BE <AmiBlitz3.ab3@25634>   Dc.b $00,$2A                                  ;* ; mul
000343C2 <AmiBlitz3.ab3@25635>   Dc.l do_times_byte                            ;dotimesb
000343C6 <AmiBlitz3.ab3@25636>   Dc.l do_times_word                            ;dotimesw
000343CA <AmiBlitz3.ab3@25637>   Dc.l do_times_long                            ;dotimesl
000343CE <AmiBlitz3.ab3@25638>   Dc.l do_times_quick                           ;dotimesq
000343D2 <AmiBlitz3.ab3@25639>   Dc.l do_times_float                           ;dotimesf
000343DA <AmiBlitz3.ab3@25640>   Ds.l 2
000343DC <AmiBlitz3.ab3@25641>   Dc.b $0F,$A0
000343DE <AmiBlitz3.ab3@25643>   Dc.b $00,$2F                                  ;/ ; div
000343E2 <AmiBlitz3.ab3@25644>   Dc.l do_Div_byte                              ;dodivb
000343E6 <AmiBlitz3.ab3@25645>   Dc.l do_Div_word                              ;dodivb
000343EA <AmiBlitz3.ab3@25646>   Dc.l do_Div_long                              ;dodivl
000343EE <AmiBlitz3.ab3@25647>   Dc.l do_Div_quick                             ;dodivq
000343F2 <AmiBlitz3.ab3@25648>   Dc.l do_Div_float                             ;dodivf
000343FA <AmiBlitz3.ab3@25649>   Ds.l 2
000343FC <AmiBlitz3.ab3@25650>   Dc.b $0F,$A0
000343FE <AmiBlitz3.ab3@25652>   Dc.b $00,$26                                  ;& ; & int
00034402 <AmiBlitz3.ab3@25653>   Dc.l do_AND_byte                              ;doandb
00034406 <AmiBlitz3.ab3@25654>   Dc.l do_AND_word                              ;doandw
0003440A <AmiBlitz3.ab3@25655>   Dc.l do_AND_long                              ;doandl
0003440E <AmiBlitz3.ab3@25656>   Dc.l do_AND_long                              ;doandl
0003441A <AmiBlitz3.ab3@25657>   Ds.l 3
0003441C <AmiBlitz3.ab3@25658>   Dc.b $13,$88
0003441E <AmiBlitz3.ab3@25660>   Dc.b $00,$7C                                  ;| ;or int ;
00034422 <AmiBlitz3.ab3@25661>   Dc.l do_OR_byte                               ;doorb
00034426 <AmiBlitz3.ab3@25662>   Dc.l do_OR_word                               ;doorw
0003442A <AmiBlitz3.ab3@25663>   Dc.l do_OR_long                               ;doorl
0003442E <AmiBlitz3.ab3@25664>   Dc.l do_OR_long                               ;doorl
0003443A <AmiBlitz3.ab3@25665>   Ds.l 3
0003443C <AmiBlitz3.ab3@25666>   Dc.b $13,$88
0003443E <AmiBlitz3.ab3@25668>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00034442 <AmiBlitz3.ab3@25669>   Dc.l do_AND_byte                              ;doandb
00034446 <AmiBlitz3.ab3@25670>   Dc.l do_AND_word                              ;doandw
0003444A <AmiBlitz3.ab3@25671>   Dc.l do_AND_long                              ;doandl
0003444E <AmiBlitz3.ab3@25672>   Dc.l do_AND_long                              ;doandl
0003445A <AmiBlitz3.ab3@25673>   Ds.l 3
0003445C <AmiBlitz3.ab3@25674>   Dc.b $03,$E8
0003445E <AmiBlitz3.ab3@25676>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00034462 <AmiBlitz3.ab3@25677>   Dc.l do_OR_byte                               ;doorb
00034466 <AmiBlitz3.ab3@25678>   Dc.l do_OR_word                               ;doorw
0003446A <AmiBlitz3.ab3@25679>   Dc.l do_OR_long                               ;doorl
0003446E <AmiBlitz3.ab3@25680>   Dc.l do_OR_long                               ;doorl
0003447A <AmiBlitz3.ab3@25681>   Ds.l 3
0003447C <AmiBlitz3.ab3@25682>   Dc.b $03,$E8
0003447E <AmiBlitz3.ab3@25684>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00034482 <AmiBlitz3.ab3@25685>   Dc.l do_EOR_byte                              ;doeorb
00034486 <AmiBlitz3.ab3@25686>   Dc.l do_EOR_word                              ;doeorw
0003448A <AmiBlitz3.ab3@25687>   Dc.l do_EOR_long                              ;doeorl
0003448E <AmiBlitz3.ab3@25688>   Dc.l do_EOR_long                              ;doeorl
0003449A <AmiBlitz3.ab3@25689>   Ds.l 3
0003449C <AmiBlitz3.ab3@25690>   Dc.b $03,$E8
0003449E <AmiBlitz3.ab3@25692>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
000344A2 <AmiBlitz3.ab3@25693>   Dc.l do_LSL                                   ;dolslb
000344A6 <AmiBlitz3.ab3@25694>   Dc.l do_LSL                                   ;dolslw
000344AA <AmiBlitz3.ab3@25695>   Dc.l do_LSL                                   ;dolsll
000344AE <AmiBlitz3.ab3@25696>   Dc.l do_LSL                                   ;dolsll
000344BA <AmiBlitz3.ab3@25697>   Ds.l 3
000344BC <AmiBlitz3.ab3@25698>   Dc.b $17,$70
000344BE <AmiBlitz3.ab3@25700>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
000344C2 <AmiBlitz3.ab3@25701>   Dc.l do_LSL                                   ;dolslb
000344C6 <AmiBlitz3.ab3@25702>   Dc.l do_LSL                                   ;dolslw
000344CA <AmiBlitz3.ab3@25703>   Dc.l do_LSL                                   ;dolsll
000344CE <AmiBlitz3.ab3@25704>   Dc.l do_LSL                                   ;dolsll
000344DA <AmiBlitz3.ab3@25705>   Ds.l 3
000344DC <AmiBlitz3.ab3@25706>   Dc.b $17,$70
000344DE <AmiBlitz3.ab3@25708>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000344E2 <AmiBlitz3.ab3@25709>   Dc.l do_LSR                                   ;dolsrb
000344E6 <AmiBlitz3.ab3@25710>   Dc.l do_LSR                                   ;dolsrw
000344EA <AmiBlitz3.ab3@25711>   Dc.l do_LSR                                   ;dolsrl
000344EE <AmiBlitz3.ab3@25712>   Dc.l do_LSR                                   ;dolsrl
000344FA <AmiBlitz3.ab3@25713>   Ds.l 3
000344FC <AmiBlitz3.ab3@25714>   Dc.b $17,$70
000344FE <AmiBlitz3.ab3@25716>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034502 <AmiBlitz3.ab3@25717>   Dc.l do_ASR                                   ;doasrb
00034506 <AmiBlitz3.ab3@25718>   Dc.l do_ASR                                   ;doasrw
0003450A <AmiBlitz3.ab3@25719>   Dc.l do_ASR                                   ;doasrl
0003450E <AmiBlitz3.ab3@25720>   Dc.l do_ASR                                   ;doasrl
0003451A <AmiBlitz3.ab3@25721>   Ds.l 3
0003451C <AmiBlitz3.ab3@25722>   Dc.b $17,$70
0003451E <AmiBlitz3.ab3@25724>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034522 <AmiBlitz3.ab3@25725>   Dc.l do_mod_byte                              ;domodb
00034526 <AmiBlitz3.ab3@25726>   Dc.l do_mod_word                              ;domodw
0003452A <AmiBlitz3.ab3@25727>   Dc.l do_mod_long                              ;domodl
0003452E <AmiBlitz3.ab3@25728>   Dc.l do_mod_quick                             ;domodq
00034532 <AmiBlitz3.ab3@25729>   Dc.l do_mod_float                             ;domodf
0003453A <AmiBlitz3.ab3@25730>   Ds.l 2
0003453C <AmiBlitz3.ab3@25731>   Dc.b $13,$88
0003453E <AmiBlitz3.ab3@25734>   Dc.b $00,$5E                                  ;^
00034542 <AmiBlitz3.ab3@25735>   Dc.l do_pow                                   ;dopow
00034546 <AmiBlitz3.ab3@25736>   Dc.l do_pow                                   ;dopow
0003454A <AmiBlitz3.ab3@25737>   Dc.l do_pow                                   ;dopow
0003454E <AmiBlitz3.ab3@25738>   Dc.l do_pow                                   ;dopow
00034552 <AmiBlitz3.ab3@25739>   Dc.l do_pow                                   ;dopow
0003455A <AmiBlitz3.ab3@25740>   Ds.l 2
0003455C <AmiBlitz3.ab3@25741>   Dc.b $1B,$58                                  ;7000
0003455E <AmiBlitz3.ab3@25744>   Dc.b $00,$3D                                  ;=
00034562 <AmiBlitz3.ab3@25745>   Dc.l do_equal_byte                            ;doeqb
00034566 <AmiBlitz3.ab3@25746>   Dc.l do_equal_word                            ;doeqw
0003456A <AmiBlitz3.ab3@25747>   Dc.l do_equal_long                            ;doeql
0003456E <AmiBlitz3.ab3@25748>   Dc.l do_equal_long                            ;doeql
00034572 <AmiBlitz3.ab3@25749>   Dc.l do_equal_float                           ;doeqf
00034576 <AmiBlitz3.ab3@25750>   Dc.l do_equal_long                            ;doeql
0003457A <AmiBlitz3.ab3@25751>   Dc.l do_equal_string                          ;doeqs
0003457C <AmiBlitz3.ab3@25752>   Dc.b $07,$D0                                  ;2000
0003457E <AmiBlitz3.ab3@25755>   Dc.b $3C,$3E                                  ;<>
00034582 <AmiBlitz3.ab3@25756>   Dc.l do_not_equal_byte                        ;doneb
00034586 <AmiBlitz3.ab3@25757>   Dc.l do_not_equal_word                        ;donew
0003458A <AmiBlitz3.ab3@25758>   Dc.l do_not_equal_long                        ;donel
0003458E <AmiBlitz3.ab3@25759>   Dc.l do_not_equal_long                        ;donel
00034592 <AmiBlitz3.ab3@25760>   Dc.l do_not_equal_float                       ;donef
00034596 <AmiBlitz3.ab3@25761>   Dc.l do_not_equal_long                        ;donel
0003459A <AmiBlitz3.ab3@25762>   Dc.l do_not_equal_string                      ;dones
0003459C <AmiBlitz3.ab3@25763>   Dc.b $07,$D0                                  ;2000
0003459E <AmiBlitz3.ab3@25766>   Dc.b $00,$3C                                  ;<
000345A2 <AmiBlitz3.ab3@25767>   Dc.l do_littler_byte                          ;doltb
000345A6 <AmiBlitz3.ab3@25768>   Dc.l do_littler_word                          ;doltw
000345AA <AmiBlitz3.ab3@25769>   Dc.l do_littler_long                          ;doltl
000345AE <AmiBlitz3.ab3@25770>   Dc.l do_littler_long                          ;doltl
000345B2 <AmiBlitz3.ab3@25771>   Dc.l do_littler_float                         ;doltf
000345B6 <AmiBlitz3.ab3@25772>   Dc.l do_littler_long                          ;doltl
000345BA <AmiBlitz3.ab3@25773>   Dc.l do_littler_string                        ;dolts
000345BC <AmiBlitz3.ab3@25774>   Dc.b $07,$D0                                  ;2000
000345BE <AmiBlitz3.ab3@25777>   Dc.b $3C,$3D                                  ;<=
000345C2 <AmiBlitz3.ab3@25778>   Dc.l do_littler_equal_byte                    ;doleb
000345C6 <AmiBlitz3.ab3@25779>   Dc.l do_littler_equal_word                    ;doleb
000345CA <AmiBlitz3.ab3@25780>   Dc.l do_littler_equal_long                    ;dolel
000345CE <AmiBlitz3.ab3@25781>   Dc.l do_littler_equal_long                    ;dolel
000345D2 <AmiBlitz3.ab3@25782>   Dc.l do_littler_equal_float                   ;dolef
000345D6 <AmiBlitz3.ab3@25783>   Dc.l do_littler_equal_long                    ;dolel
000345DA <AmiBlitz3.ab3@25784>   Dc.l do_littler_equal_string                  ;doles
000345DC <AmiBlitz3.ab3@25785>   Dc.b $07,$D0                                  ;2000
000345DE <AmiBlitz3.ab3@25788>   Dc.b $00,$3E                                  ;>
000345E2 <AmiBlitz3.ab3@25789>   Dc.l do_greater_byte                          ;dogtb
000345E6 <AmiBlitz3.ab3@25790>   Dc.l do_greater_word                          ;dogtw
000345EA <AmiBlitz3.ab3@25791>   Dc.l do_greater_long                          ;dogtl
000345EE <AmiBlitz3.ab3@25792>   Dc.l do_greater_long                          ;dogtl
000345F2 <AmiBlitz3.ab3@25793>   Dc.l do_greater_float                         ;dogtf
000345F6 <AmiBlitz3.ab3@25794>   Dc.l do_greater_long                          ;dogtl
000345FA <AmiBlitz3.ab3@25795>   Dc.l do_greater_string                        ;dogts
000345FC <AmiBlitz3.ab3@25796>   Dc.b $07,$D0                                  ;2000
000345FE <AmiBlitz3.ab3@25799>   Dc.b $3E,$3D                                  ;>=
00034602 <AmiBlitz3.ab3@25800>   Dc.l do_greater_equal_byte                    ;dogeb
00034606 <AmiBlitz3.ab3@25801>   Dc.l do_greater_equal_word                    ;dogew
0003460A <AmiBlitz3.ab3@25802>   Dc.l do_greater_equal_long                    ;dogel
0003460E <AmiBlitz3.ab3@25803>   Dc.l do_greater_equal_long                    ;dogel
00034612 <AmiBlitz3.ab3@25804>   Dc.l do_greater_equal_float                   ;dogef
00034616 <AmiBlitz3.ab3@25805>   Dc.l do_greater_equal_long                    ;dogel
0003461A <AmiBlitz3.ab3@25806>   Dc.l do_greater_equal_string                  ;doges
0003461C <AmiBlitz3.ab3@25807>   Dc.b $07,$D0                                  ;2000
0003461E <AmiBlitz3.ab3@25809>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034622 <AmiBlitz3.ab3@25810>   Dc.l _BitTst
00034626 <AmiBlitz3.ab3@25811>   Dc.l _BitTst
0003462A <AmiBlitz3.ab3@25812>   Dc.l _BitTst
0003462E <AmiBlitz3.ab3@25813>   Dc.l _BitTst
0003463A <AmiBlitz3.ab3@25814>   Ds.l 3
0003463C <AmiBlitz3.ab3@25815>   Dc.b $1F,$40                                  ;8000
0003463E <AmiBlitz3.ab3@25817>   Dc.b $80,$CE                                  ;$8000+27+tnum
00034642 <AmiBlitz3.ab3@25818>   Dc.l _BitSet
00034646 <AmiBlitz3.ab3@25819>   Dc.l _BitSet
0003464A <AmiBlitz3.ab3@25820>   Dc.l _BitSet
0003464E <AmiBlitz3.ab3@25821>   Dc.l _BitSet
0003465A <AmiBlitz3.ab3@25822>   Ds.l 3
0003465C <AmiBlitz3.ab3@25823>   Dc.b $1F,$40                                  ;8000
0003465E <AmiBlitz3.ab3@25825>   Dc.b $80,$CF                                  ;$8000+28+tnum
00034662 <AmiBlitz3.ab3@25826>   Dc.l _BitClr
00034666 <AmiBlitz3.ab3@25827>   Dc.l _BitClr
0003466A <AmiBlitz3.ab3@25828>   Dc.l _BitClr
0003466E <AmiBlitz3.ab3@25829>   Dc.l _BitClr
0003467A <AmiBlitz3.ab3@25830>   Ds.l 3
0003467C <AmiBlitz3.ab3@25831>   Dc.b $1F,$40                                  ;8000
0003467E <AmiBlitz3.ab3@25833>   Dc.b $80,$D0                                  ;$8000+29+tnum
00034682 <AmiBlitz3.ab3@25834>   Dc.l _BitChg
00034686 <AmiBlitz3.ab3@25835>   Dc.l _BitChg
0003468A <AmiBlitz3.ab3@25836>   Dc.l _BitChg
0003468E <AmiBlitz3.ab3@25837>   Dc.l _BitChg
0003469A <AmiBlitz3.ab3@25838>   Ds.l 3
0003469C <AmiBlitz3.ab3@25839>   Dc.b $1F,$40                                  ;8000
0003469E <AmiBlitz3.ab3@25841>   Dc.b $00,$00
000346A2 <AmiBlitz3.ab3@25846> modetable:   Dc.l typemode
000346A6 <AmiBlitz3.ab3@25849> newtypebase: Dc.l newtype_byte
000346AE <AmiBlitz3.ab3@25852>   Dc.l newtype_word,$01                                    
000346B0 <AmiBlitz3.ab3@25853>   Dc.w $0001
000346B4 <AmiBlitz3.ab3@25854>   Dc.b 13,"b",0,0
000346BC <AmiBlitz3.ab3@25857>   Dc.l newtype_long,$02
000346BE <AmiBlitz3.ab3@25858>   Dc.w $0002
000346C2 <AmiBlitz3.ab3@25859>   Dc.b 13,"w",0,0
000346CA <AmiBlitz3.ab3@25862>   Dc.l newtype_quick,$03                                   
000346CC <AmiBlitz3.ab3@25863>   Dc.w $0004
000346D0 <AmiBlitz3.ab3@25864>   Dc.b 13,"l",0,0
000346D8 <AmiBlitz3.ab3@25867>   Dc.l newtype_float,$04                                   
000346DA <AmiBlitz3.ab3@25868>   Dc.w $0004
000346DE <AmiBlitz3.ab3@25869>   Dc.b 13,"q",0,0
000346E6 <AmiBlitz3.ab3@25873>   Dc.l newtype_double,$05                                  ;make problems on old residents
000346E8 <AmiBlitz3.ab3@25874>   Dc.w $0004
000346EC <AmiBlitz3.ab3@25875>   Dc.b 13,"f",0,0
000346F4 <AmiBlitz3.ab3@25878>   Dc.l newtype_double,$06
000346F6 <AmiBlitz3.ab3@25879>   Dc.w $0004
000346FA <AmiBlitz3.ab3@25880>   Dc.b 13,"a",0,0
00034702 <AmiBlitz3.ab3@25883>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00034704 <AmiBlitz3.ab3@25884>   Dc.w $0008
00034708 <AmiBlitz3.ab3@25885>   Dc.b 13,"d",0,0
00034710 <AmiBlitz3.ab3@25889>   Dc.l $0000000,$07                                        ;stringtype
00034712 <AmiBlitz3.ab3@25890>   Dc.w $0004
00034716 <AmiBlitz3.ab3@25891>   Dc.b 13,"s",0,0
0003471E <AmiBlitz3.ab3@25894>   Dc.l $00,$00
00034720 <AmiBlitz3.ab3@25895>   Dc.w $0000
00034724 <AmiBlitz3.ab3@25896>   Dc.b $01,$00,$00,$00
00034784 <AmiBlitz3.ab3@25899> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00034786 <AmiBlitz3.ab3@25903> dirmode:              Ds.w 1                               ;shows if directmode is on
0003478A <AmiBlitz3.ab3@25905>                       Ds.l 1                               ;int org source ;intuition!
0003478C <AmiBlitz3.ab3@25906> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00034790 <AmiBlitz3.ab3@25907> maxsat:               Ds.l 1                               ;data1 info pos
00034792 <AmiBlitz3.ab3@25908> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00034794 <AmiBlitz3.ab3@25910> maxsused:             Ds.w 1                               ;maximums used in prog
00034796 <AmiBlitz3.ab3@25914> dark:                 Ds.w 1                               ;dark compile?
00034798 <AmiBlitz3.ab3@25915> qlab:                 Ds.w 1                               ;quick lab allocate
0003479C <AmiBlitz3.ab3@25916> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
0003479E <AmiBlitz3.ab3@25921> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
000347A0 <AmiBlitz3.ab3@25922> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
000347A4 <AmiBlitz3.ab3@25923> noinits:              Ds.l 1                               ;flag for if we have any init routines!
000347A8 <AmiBlitz3.ab3@25925> letstart:             Ds.l 1
000347AA <AmiBlitz3.ab3@25926> dontwrite:            Ds.w 1                               ;nomemleft org source
0003482A <AmiBlitz3.ab3@25927> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
0003482E <AmiBlitz3.ab3@25929> locdatast:            Ds.l 1
00034832 <AmiBlitz3.ab3@25930> firstpend:            Ds.l 1
00034836 <AmiBlitz3.ab3@25934> data2at:              Ds.l 1
0003483A <AmiBlitz3.ab3@25935> data2:                Ds.l 1
0003483E <AmiBlitz3.ab3@25936> data1start:           Ds.l 1                               ;data1at org source
00034842 <AmiBlitz3.ab3@25937> data1:                Ds.l 1                               ;pc for initialized data!
00034846 <AmiBlitz3.ab3@25938> destbufferstart:      Ds.l 1                               ;pcat org source
0003484A <AmiBlitz3.ab3@25942> destbufferend:        Ds.l 1                               ;libat org source
0003484E <AmiBlitz3.ab3@25943> libend:               Ds.l 1                               ;lib org source
00034852 <AmiBlitz3.ab3@25944> allat:                Ds.l 1                               ;highest allocmemd location for code
0003485C <AmiBlitz3.ab3@25945> dummyasm:             Dc.w 0,0,0,0,0
00034860 <AmiBlitz3.ab3@25946>                       Dc.l 0
00034862 <AmiBlitz3.ab3@25947>                       Dc.w 0
00034866 <AmiBlitz3.ab3@25951> buff1:                Ds.l 1                               ;buffer for text get
0003486A <AmiBlitz3.ab3@25952> buff2:                Ds.l 1                               ;ditto for dest
0003486C <AmiBlitz3.ab3@25953> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
0003486E <AmiBlitz3.ab3@25954> asmtype:              Ds.w 1                               ;0=contains no prog reference
00034870 <AmiBlitz3.ab3@25955> extraword:            Ds.w 1                               ;the extension word for assembler
00034872 <AmiBlitz3.ab3@25956> extraword2:           Ds.w 1                               ;ditto
00034874 <AmiBlitz3.ab3@25957> asmsize:              Ds.w 1
00034878 <AmiBlitz3.ab3@25958> asmbuff:              Ds.l 1
0003487A <AmiBlitz3.ab3@25959> asmlen:               Ds.w 1                               ;first (src) text len
0003487C <AmiBlitz3.ab3@25960> asmlen2:              Ds.w 1                               ;second (dest)
00034880 <AmiBlitz3.ab3@25961> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00034882 <AmiBlitz3.ab3@25964> macnum:               Ds.w 1
00034886 <AmiBlitz3.ab3@25966>                       Dc.l 0                               ;address of next 0 in include fil
0003488A <AmiBlitz3.ab3@25967> titleat:              Ds.l 1                               ;5 longs for compile streaks
00034894 <AmiBlitz3.ab3@25968> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00034896 <AmiBlitz3.ab3@25969> connest:              Ds.w 1                               ;conditional nest level
0003489A <AmiBlitz3.ab3@25970> firstconst:           Ds.l 1                               ;first constant (#a)
0003489C <AmiBlitz3.ab3@25971> numarg:               Ds.w 1                               ;number of macro arguements
000348A0 <AmiBlitz3.ab3@25972> myoline:              Ds.l 1                               ;macro done yet?
000348A4 <AmiBlitz3.ab3@25973> myline:               Ds.l 1                               ;pointer to some memory to create
000348A8 <AmiBlitz3.ab3@25976>                       Ds.l 1
000348E8 <AmiBlitz3.ab3@25977> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000348EC <AmiBlitz3.ab3@25978> concomsp:             Dc.l concomstack                     ;stack pointer
000348EE <AmiBlitz3.ab3@25979> oldqflag:             Ds.w 1
000348F2 <AmiBlitz3.ab3@25982>                       Ds.l 1
000348F4 <AmiBlitz3.ab3@25984>                       Ds.w 1
000348F8 <AmiBlitz3.ab3@25985> firstfor:             Ds.l 1                               ;first for
000348FA <AmiBlitz3.ab3@25986> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
000348FC <AmiBlitz3.ab3@25987> sbgot:                Ds.w 1                               ;flag for string got 2
000348FE <AmiBlitz3.ab3@25988> convsize:             Ds.w 1                               ;usertype org source
00034900 <AmiBlitz3.ab3@25989> userp:                Ds.w 1
00034904 <AmiBlitz3.ab3@25994> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00034906 <AmiBlitz3.ab3@25995> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00034908 <AmiBlitz3.ab3@25996> numreps:              Ds.w 1                               ;number of repeats in a repeatable
0003490C <AmiBlitz3.ab3@25998> locloc:               Ds.l 1
0003490E <AmiBlitz3.ab3@25999> locchar:              Ds.w 1
0003498E <AmiBlitz3.ab3@26000> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00034990 <AmiBlitz3.ab3@26001> commode:              Ds.w 1                               ;in comma mode...
00034994 <AmiBlitz3.ab3@26002> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00034998 <AmiBlitz3.ab3@26003> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
0003499C <AmiBlitz3.ab3@26004> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
0003499E <AmiBlitz3.ab3@26006>                       Ds.w 1                               ;opt reset offset
00034A9E <AmiBlitz3.ab3@26008>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00034B9E <AmiBlitz3.ab3@26010>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00034BA0 <AmiBlitz3.ab3@26011> varcodelen:           Ds.w 1                               ;and length
00034BA2 <AmiBlitz3.ab3@26013>                       Ds.w 1
00034BA8 <AmiBlitz3.ab3@26014> oldvcodelen:          Ds.w 3                               ;old varcodelen
00034BAC <AmiBlitz3.ab3@26018> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00034BAE <AmiBlitz3.ab3@26019> memlibstat:           Ds.w 1                               ;status of memory library during
00034BB0 <AmiBlitz3.ab3@26022>                       Dc.w 0
00034BB2 <AmiBlitz3.ab3@26024>                       Dc.w 0
00034BB4 <AmiBlitz3.ab3@26026> varmode:              Ds.w 1                               ;0 a5 pointer to global
00034BB8 <AmiBlitz3.ab3@26028> currentfunction:      Ds.l 1                               ;thisproc org source
00034BBC <AmiBlitz3.ab3@26029> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00034BBE <AmiBlitz3.ab3@26030> 
00034BC0 <AmiBlitz3.ab3@26032> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00034BC4 <AmiBlitz3.ab3@26033> passstack:            Ds.l 1
00034BC8 <AmiBlitz3.ab3@26034> zero:                 Ds.l 1                               ;ZERO!
00034BCA <AmiBlitz3.ab3@26035> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00034BCE <AmiBlitz3.ab3@26037> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00034BD2 <AmiBlitz3.ab3@26038> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00034BD4 <AmiBlitz3.ab3@26039> lasta6:               Dc.w $FFFF                           ;-1 org source
00034BD6 <AmiBlitz3.ab3@26040> instringon:           Ds.w 1                               ;quoteflag org source
00034BDA <AmiBlitz3.ab3@26041> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00034BDE <AmiBlitz3.ab3@26042> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00034BE2 <AmiBlitz3.ab3@26043> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00034BE6 <AmiBlitz3.ab3@26044> endop:                Ds.l 1                               ;end of program pc - before finishups!
00034BEA <AmiBlitz3.ab3@26045> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00034BEE <AmiBlitz3.ab3@26046> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00034BF0 <AmiBlitz3.ab3@26047> numstatic:            Ds.w 1                               ;number of static structs
00034BF4 <AmiBlitz3.ab3@26048> staticdata:           Ds.l 1                               ;data1 val for statics
00034BF8 <AmiBlitz3.ab3@26049> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00034BFA <AmiBlitz3.ab3@26050> sbasegot:             Ds.w 1                               ;string base got?
00034BFE <AmiBlitz3.ab3@26051> litdata1:             Ds.l 1
00034C02 <AmiBlitz3.ab3@26055> objlen:               Ds.l 1
00034C06 <AmiBlitz3.ab3@26056> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00034C0A <AmiBlitz3.ab3@26057> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00034C0C <AmiBlitz3.ab3@26059> flagmask:             Ds.w 1                               ;mask for flag of variable when
00034C0E <AmiBlitz3.ab3@26061> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00034C10 <AmiBlitz3.ab3@26062> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00034C14 <AmiBlitz3.ab3@26063> temp1:                Ds.l 1
00034C18 <AmiBlitz3.ab3@26064> temp2:                Ds.l 1
00034C1C <AmiBlitz3.ab3@26066> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00034C20 <AmiBlitz3.ab3@26067> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00034C94 <AmiBlitz3.ab3@26068> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00034C98 <AmiBlitz3.ab3@26069> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00034D18 <AmiBlitz3.ab3@26071> namebuff2:            Ds.b 128
00034D20 <AmiBlitz3.ab3@26072>                       Ds.b 8                               ;for fileinfoblock
00034D60 <AmiBlitz3.ab3@26075> optstuff:             Ds.b 64                              ;temp opt make buffer
00034D62 <AmiBlitz3.ab3@26092>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00034D66 <AmiBlitz3.ab3@26093>   Dc.l xtra_versionnumber                                  ; vers org source
00034D6A <AmiBlitz3.ab3@26094>   Dc.l create_iconfile                                     ; create icon for executable
00034D6E <AmiBlitz3.ab3@26095>   Ds.l 1
00034D70 <AmiBlitz3.ab3@26097>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00034D74 <AmiBlitz3.ab3@26100>   Dc.l set_use_debugger
00034D78 <AmiBlitz3.ab3@26101>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00034D7C <AmiBlitz3.ab3@26102>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00034D80 <AmiBlitz3.ab3@26103>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00034D84 <AmiBlitz3.ab3@26104>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00034D88 <AmiBlitz3.ab3@26105>   Dc.l set_make_smallestcode
00034D8C <AmiBlitz3.ab3@26106>   Dc.l set_link_debuginfo
00034D90 <AmiBlitz3.ab3@26107>   Dc.l set_autorun
00034D94 <AmiBlitz3.ab3@26108>   Dc.l set_interruptcheck
00034D98 <AmiBlitz3.ab3@26109>   Dc.l set_assemblercheck
00034D9C <AmiBlitz3.ab3@26111>   Dc.l set_overflowcheck
00034DA0 <AmiBlitz3.ab3@26112>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00034DA4 <AmiBlitz3.ab3@26113>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00034DA8 <AmiBlitz3.ab3@26114>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00034DAC <AmiBlitz3.ab3@26117>   Ds.l 1
00034DAE <AmiBlitz3.ab3@26119>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00034DB2 <AmiBlitz3.ab3@26126>   Dc.l objectbuffer
00034DB6 <AmiBlitz3.ab3@26127>   Dc.l libsbuffer
00034DBA <AmiBlitz3.ab3@26128>   Dc.l systembuffer
00034DBE <AmiBlitz3.ab3@26129>   Dc.l databuffer
00034DC2 <AmiBlitz3.ab3@26130>   Dc.l macrobuffer_size
00034DC6 <AmiBlitz3.ab3@26131>   Dc.l stringbuffer
00034DCA <AmiBlitz3.ab3@26134>   Ds.l 1
00034DCC <AmiBlitz3.ab3@26138>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00034DD4 <AmiBlitz3.ab3@26139>   Dc.l residents_table,0
00034DD6 <AmiBlitz3.ab3@26143>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00034DDE <AmiBlitz3.ab3@26144>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00034DE0 <AmiBlitz3.ab3@26145>   Ds.w 1
00034EDC <AmiBlitz3.ab3@26149>   Ds.l 63
00034FD8 <AmiBlitz3.ab3@26150>   Ds.l 63
000350D4 <AmiBlitz3.ab3@26151>   Ds.l 63
000351B6 <AmiBlitz3.ab3@26152>   Ds.w 113
000351B8 <AmiBlitz3.ab3@26155> comsettings_message:  Ds.w 1                               ;allchg org source
000351BA <AmiBlitz3.ab3@26156> xtra_versionnumber:   Ds.w 1                               ;vers org source
000351C0 <AmiBlitz3.ab3@26160>   CLR.b exefilename
000351C2 <AmiBlitz3.ab3@26161>   TST.l d0
000351C6 <AmiBlitz3.ab3@26162>   BNE read_xtrafile__l10
000351C8 <AmiBlitz3.ab3@26163> RTS
000351CE <AmiBlitz3.ab3@26166>   JSR free_residents                                       ;jsr freeres2 org source
000351D4 <AmiBlitz3.ab3@26167> 
000351DA <AmiBlitz3.ab3@26168>   LEA ptr_xtradata,A2
000351DC <AmiBlitz3.ab3@26169>   MOVEQ.l #$00,D4
000351DE <AmiBlitz3.ab3@26172>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
000351E2 <AmiBlitz3.ab3@26173>     BEQ.b read_xtrafile__done
000351E4 <AmiBlitz3.ab3@26176>     MOVE.l (A2)+,D2
000351E8 <AmiBlitz3.ab3@26177>   BEQ.b read_xtrafile__loop
000351EA <AmiBlitz3.ab3@26179>   MOVE.l D4,D3
000351EC <AmiBlitz3.ab3@26180>   MOVE.l D7,D1
000351F0 <AmiBlitz3.ab3@26181>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
000351F2 <AmiBlitz3.ab3@26182>   TST.l D0
000351F6 <AmiBlitz3.ab3@26183>   BNE.b read_xtrafile__loop2
000351FA <AmiBlitz3.ab3@26184> BRA.w read_xtrafile__done2
00035200 <AmiBlitz3.ab3@26187>   TST.b xtra_versionnumber
00035204 <AmiBlitz3.ab3@26188>    BNE.b read_xtrafile__nover0
0003520C <AmiBlitz3.ab3@26189>   MOVE.w #$0080,set_autorun                                ;auto run on
00035216 <AmiBlitz3.ab3@26190>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
0003521C <AmiBlitz3.ab3@26191>   CLR.w set_assemblercheck                                 ;assembler checking off
00035226 <AmiBlitz3.ab3@26192>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
0003522A <AmiBlitz3.ab3@26193> BRA.b read_xtrafile__ver0
0003522C <AmiBlitz3.ab3@26196>   MOVE.l D7,D1                                             ;load cli arg!
00035232 <AmiBlitz3.ab3@26197>   MOVE.l #str_cliarguments,D2
00035238 <AmiBlitz3.ab3@26198>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
0003523C <AmiBlitz3.ab3@26199>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035242 <AmiBlitz3.ab3@26200>   MOVE.l #str_cliarguments,A0
00035248 <AmiBlitz3.ab3@26201>   ADDA.l #115,A0
0003524E <AmiBlitz3.ab3@26202>   MOVE.l #0,(a0) ; terminate it!
00035250 <AmiBlitz3.ab3@26204>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00035256 <AmiBlitz3.ab3@26205>   MOVE.l #stacksize,D2
0003525C <AmiBlitz3.ab3@26206>   MOVE.l #4,D3
00035260 <AmiBlitz3.ab3@26207>   JSR _Read(A6)
0003526A <AmiBlitz3.ab3@26208>   CMP.l ##MIN_STACKSIZE,stacksize
0003526E <AmiBlitz3.ab3@26209>   BGE 'stackok
00035278 <AmiBlitz3.ab3@26210>   MOVE.l ##MIN_STACKSIZE,stacksize
0003527A <AmiBlitz3.ab3@26213>   MOVE.l D7,D1
00035280 <AmiBlitz3.ab3@26214>   MOVE.l #versioninformation,D2
00035286 <AmiBlitz3.ab3@26215>   MOVE.l #4,D3
0003528A <AmiBlitz3.ab3@26216>   JSR _Read(A6)
0003528C <AmiBlitz3.ab3@26218>   MOVE.l D7,D1
00035292 <AmiBlitz3.ab3@26219>   MOVE.l #number_of_builds,D2
00035298 <AmiBlitz3.ab3@26220>   MOVE.l #4,D3
0003529C <AmiBlitz3.ab3@26221>   JSR _Read(A6)
000352A2 <AmiBlitz3.ab3@26227> 
000352A8 <AmiBlitz3.ab3@26228>   MOVE.l A7,errstack
000352B2 <AmiBlitz3.ab3@26229>   MOVE.l #read_xtrafile__done2,errcont
000352BA <AmiBlitz3.ab3@26230>   MOVE.w #$FFFF,ezerr
000352C0 <AmiBlitz3.ab3@26233>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
000352C2 <AmiBlitz3.ab3@26234>     MOVEQ.l #$04,D3
000352C4 <AmiBlitz3.ab3@26235>     MOVE.l D7,D1
000352C8 <AmiBlitz3.ab3@26236>     JSR _Read(A6)
000352CA <AmiBlitz3.ab3@26237>     TST.l D0
000352CE <AmiBlitz3.ab3@26238>     BEQ.b read_xtrafile__done2
000352D4 <AmiBlitz3.ab3@26239>     MOVE.w temp1,D1
000352D6 <AmiBlitz3.ab3@26240>     TST.w d1                                               ;new
000352DA <AmiBlitz3.ab3@26241>     BEQ read_xtrafile__done2                                         ;new
000352E0 <AmiBlitz3.ab3@26242>      JSR AJL_0_6F1A
000352E6 <AmiBlitz3.ab3@26244>     CMP.l #0,a1
000352EA <AmiBlitz3.ab3@26245>     BEQ read_xtrafile__dloop
000352EE <AmiBlitz3.ab3@26246>     MOVE.l $12(A1),D0
000352F6 <AmiBlitz3.ab3@26247>     MOVE.w temp1+2,-$4(A1,D0.L)
000352FA <AmiBlitz3.ab3@26248> BRA.b read_xtrafile__dloop
000352FE <AmiBlitz3.ab3@26254>   LEA residents_table(PC),A0
00035300 <AmiBlitz3.ab3@26255>   MOVEQ.l #$07,D0
00035304 <AmiBlitz3.ab3@26258>     CLR.l $40(A0)
00035308 <AmiBlitz3.ab3@26259>     LEA ResidentEntryStep(A0),A0   ; $44
0003530C <AmiBlitz3.ab3@26260>   DBF D0,read_xtrafile__loop3
00035310 <AmiBlitz3.ab3@26262>   MOVEM.l D7/A6,-(A7)
00035316 <AmiBlitz3.ab3@26263>   JSR init_buffers
0003531C <AmiBlitz3.ab3@26264>   JSR reloadresident
00035320 <AmiBlitz3.ab3@26265>   MOVEM.l (A7)+,D7/A6
00035322 <AmiBlitz3.ab3@26266> RTS
0003532A <AmiBlitz3.ab3@26270>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035330 <AmiBlitz3.ab3@26279>   LEA ptr_xtradata,A2
00035332 <AmiBlitz3.ab3@26280>   MOVEQ.l #$00,D4
00035334 <AmiBlitz3.ab3@26284>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035338 <AmiBlitz3.ab3@26285>   BEQ.b write_xtrafile__done
0003533A <AmiBlitz3.ab3@26288>    MOVE.l (A2)+,D2
0003533E <AmiBlitz3.ab3@26289>    BEQ.b write_xtrafile__loop
00035340 <AmiBlitz3.ab3@26291>    MOVE.l D4,D3
00035342 <AmiBlitz3.ab3@26292>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035346 <AmiBlitz3.ab3@26293>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
0003534A <AmiBlitz3.ab3@26294> BRA.b write_xtrafile__loop2
0003534C <AmiBlitz3.ab3@26297>   MOVE.l D7,D1
00035352 <AmiBlitz3.ab3@26298>   MOVE.l #str_cliarguments,D2
00035358 <AmiBlitz3.ab3@26299>   MOVE.l #116,D3
0003535C <AmiBlitz3.ab3@26300>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
0003535E <AmiBlitz3.ab3@26302>   MOVE.l D7,D1
00035364 <AmiBlitz3.ab3@26303>   MOVE.l #stacksize,D2
0003536A <AmiBlitz3.ab3@26304>   MOVE.l #4,D3
0003536E <AmiBlitz3.ab3@26305>   JSR _Write(A6)
00035370 <AmiBlitz3.ab3@26307>   MOVE.l D7,D1
00035376 <AmiBlitz3.ab3@26308>   MOVE.l #versioninformation,D2
0003537C <AmiBlitz3.ab3@26309>   MOVE.l #4,D3
00035380 <AmiBlitz3.ab3@26310>   JSR _Write(A6)
00035382 <AmiBlitz3.ab3@26312>   MOVE.l D7,D1
00035388 <AmiBlitz3.ab3@26313>   MOVE.l #number_of_builds,D2
0003538E <AmiBlitz3.ab3@26314>   MOVE.l #4,D3
00035392 <AmiBlitz3.ab3@26315>   JSR _Write(A6)
00035398 <AmiBlitz3.ab3@26321>   LEA libpointer,A2
0003539A <AmiBlitz3.ab3@26324>     MOVE.l (A2),D0
0003539E <AmiBlitz3.ab3@26325>     BEQ.w write_xtrafile__done2
000353A0 <AmiBlitz3.ab3@26326>     MOVEA.l D0,A2
000353A4 <AmiBlitz3.ab3@26327>     MOVE.l $12(A2),D4
000353A8 <AmiBlitz3.ab3@26328>     TST.w -$2(A2,D4.L)
000353AC <AmiBlitz3.ab3@26329>     BEQ.w write_xtrafile__loop3
000353B0 <AmiBlitz3.ab3@26331>     LEA $4(A2),A0
000353B2 <AmiBlitz3.ab3@26332>     MOVE.l A0,D2
000353B4 <AmiBlitz3.ab3@26333>     MOVEQ.l #$02,D3
000353B6 <AmiBlitz3.ab3@26334>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
000353BA <AmiBlitz3.ab3@26335>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000353BE <AmiBlitz3.ab3@26337>     LEA -$4(A2,D4.L),A0
000353C0 <AmiBlitz3.ab3@26338>     MOVE.l A0,D2
000353C2 <AmiBlitz3.ab3@26339>     MOVEQ.l #$02,D3
000353C4 <AmiBlitz3.ab3@26340>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
000353C8 <AmiBlitz3.ab3@26341>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000353CC <AmiBlitz3.ab3@26342> BRA.w write_xtrafile__loop3
000353D2 <AmiBlitz3.ab3@26347>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
000353D4 <AmiBlitz3.ab3@26348>   MOVE.l A2,D2           ; move the address to d2
000353DA <AmiBlitz3.ab3@26349>   MOVE.l #4,D3           ; we only need 4 bytes to save
000353DC <AmiBlitz3.ab3@26350>   MOVE.l D7,D1           ; we set the file handle
000353E0 <AmiBlitz3.ab3@26351>   JSR _Write(A6)         ; and we write it.
000353E2 <AmiBlitz3.ab3@26353> RTS
000353E8 <AmiBlitz3.ab3@26358>   LEA optssave,A0                      ; backup address
000353EE <AmiBlitz3.ab3@26359>   LEA ptr_xtradata,A1                  ; source address
000353F0 <AmiBlitz3.ab3@26362>   MOVE.w (A1)+,D0                                          ;length of data move
000353F4 <AmiBlitz3.ab3@26363>   BEQ.b 'backupdone
000353F6 <AmiBlitz3.ab3@26364>   SUBQ.w #1,D0
000353F8 <AmiBlitz3.ab3@26367>     MOVE.l (A1)+,D1
000353FC <AmiBlitz3.ab3@26368>     BEQ.b 'backuploop
000353FE <AmiBlitz3.ab3@26369>     MOVEA.l D1,A2
00035400 <AmiBlitz3.ab3@26370>     MOVE.w D0,D1
00035402 <AmiBlitz3.ab3@26373>       MOVE.b (A2)+,(A0)+
00035406 <AmiBlitz3.ab3@26374>   DBF D1,'backuploop3
0003540A <AmiBlitz3.ab3@26376> BRA.w 'backuploop2
00035410 <AmiBlitz3.ab3@26380>   LEA bufferlist,A1
00035412 <AmiBlitz3.ab3@26383>     MOVE.l (A1)+,D2
00035416 <AmiBlitz3.ab3@26384>     BEQ.b 'loop4done
00035418 <AmiBlitz3.ab3@26386>     MOVEA.l D2,A0
0003541A <AmiBlitz3.ab3@26387>     MOVE.l (A0),D2
0003541C <AmiBlitz3.ab3@26388>     ADDQ.w #8,A0
00035422 <AmiBlitz3.ab3@26389>     JSR makelong
00035426 <AmiBlitz3.ab3@26390> BRA.b 'loop4
0003542C <AmiBlitz3.ab3@26393>   CLR.w state_of_residents                                 ;resident change
00035432 <AmiBlitz3.ab3@26394>   CLR.w comsettings_message                                ;alloc change
00035438 <AmiBlitz3.ab3@26395>   CLR.w maxobject_pos
0003543A <AmiBlitz3.ab3@26396> RTS   ; new tomsmart1
00035440 <AmiBlitz3.ab3@26400>   LEA optssave,A0
00035446 <AmiBlitz3.ab3@26401>   LEA ptr_xtradata,A1
00035448 <AmiBlitz3.ab3@26404>   MOVE.w (A1)+,D0
0003544C <AmiBlitz3.ab3@26405>   BEQ.b 'restoredone
0003544E <AmiBlitz3.ab3@26406>   SUBQ.w #1,D0
00035450 <AmiBlitz3.ab3@26409>     MOVE.l (A1)+,D1
00035454 <AmiBlitz3.ab3@26410>     BEQ.b 'restoreloop1
00035456 <AmiBlitz3.ab3@26411>     MOVEA.l D1,A2
00035458 <AmiBlitz3.ab3@26412>     MOVE.w D0,D1
0003545A <AmiBlitz3.ab3@26415>       MOVE.b (A0)+,(A2)+
0003545E <AmiBlitz3.ab3@26416>   DBF D1,'restoreloop3
00035462 <AmiBlitz3.ab3@26418> BRA.b 'restoreloop2
00035464 <AmiBlitz3.ab3@26421> RTS
0003546A <AmiBlitz3.ab3@26425>   JSR free_residents                    ; first free the allready loaded residents
00035470 <AmiBlitz3.ab3@26426>   JSR Clear_Residents_table             ; second clear the complete resident table
00035472 <AmiBlitz3.ab3@26427> RTS
0003547A <AmiBlitz3.ab3@26431>   MOVE.w #$FFFF,state_of_residents
00035480 <AmiBlitz3.ab3@26432>   MOVE.w state_of_residents,D0
00035486 <AmiBlitz3.ab3@26433>   JSR reloadresident
00035488 <AmiBlitz3.ab3@26434> RTS
0003548A <AmiBlitz3.ab3@26439>   MOVE.l d0,a1
00035490 <AmiBlitz3.ab3@26440>   MOVEA.l libpointer,A2
00035494 <AmiBlitz3.ab3@26443>     MOVE.l $12(A2),D0
00035498 <AmiBlitz3.ab3@26444>     TST.w -$2(A2,D0.L)
0003549C <AmiBlitz3.ab3@26445>      BEQ.w JL_0_102AAa
0003549E <AmiBlitz3.ab3@26446>     SUBQ.w #1,D1
000354A2 <AmiBlitz3.ab3@26447>      BPL.w JL_0_102AAa
000354A6 <AmiBlitz3.ab3@26448>     MOVEA.l -$1A(A2,D0.L),A3
000354A8 <AmiBlitz3.ab3@26449>     ADDA.l A2,A3
000354AA <AmiBlitz3.ab3@26452>       MOVE.b (A3)+,(A1)+
000354AE <AmiBlitz3.ab3@26453>     BNE.w JL_0_10294a
000354B0 <AmiBlitz3.ab3@26455>     CLR.b -(A1)
000354B4 <AmiBlitz3.ab3@26456>     MOVE.w -$4(A2,D0.L),D0
000354BA <AmiBlitz3.ab3@26457>     AND.l #$ffff,d0
000354BC <AmiBlitz3.ab3@26458> RTS
000354BE <AmiBlitz3.ab3@26461>     MOVEA.l (A2),A2
000354C2 <AmiBlitz3.ab3@26462> BRA.w JL_0_1027Ca
000354D2 <AmiBlitz3.ab3@26467> str_maxobjects_name:   Dc.b "              ",0 : Even
000354E2 <AmiBlitz3.ab3@26468> str_maxobjects_name2:  Dc.b "              ",0 : Even
000354E6 <AmiBlitz3.ab3@26469> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
000354EA <AmiBlitz3.ab3@26470>                        Dc.l $00000000
000354F6 <AmiBlitz3.ab3@26471> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
000354FA <AmiBlitz3.ab3@26473> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
000354FE <AmiBlitz3.ab3@26474>                        Dc.l $00000000
0003550A <AmiBlitz3.ab3@26475> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
0003550E <AmiBlitz3.ab3@26477> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
00035512 <AmiBlitz3.ab3@26478>                        Dc.l $00000000
0003551E <AmiBlitz3.ab3@26479> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035522 <AmiBlitz3.ab3@26481> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035526 <AmiBlitz3.ab3@26482>                        Dc.l $00000000
00035532 <AmiBlitz3.ab3@26483> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035536 <AmiBlitz3.ab3@26485> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
0003553A <AmiBlitz3.ab3@26486>                        Dc.l $00000000
00035546 <AmiBlitz3.ab3@26487> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
0003554A <AmiBlitz3.ab3@26489> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
0003554E <AmiBlitz3.ab3@26490>                        Dc.l $00000000
0003555A <AmiBlitz3.ab3@26491> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
0003555C <AmiBlitz3.ab3@26493> maxobjects_value:      Dc.w $0064
00035560 <AmiBlitz3.ab3@26494>                        Dc.l $00000000
0003556C <AmiBlitz3.ab3@26495> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
0003556E <AmiBlitz3.ab3@26497> maxobjects_value2:     Dc.w $0014
00035570 <AmiBlitz3.ab3@26498>                        Dc.w $0000
0003557C <AmiBlitz3.ab3@26500> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
0003557D <AmiBlitz3.ab3@26504> set_create_iconfile:   Dc.b $00
00035580 <AmiBlitz3.ab3@26505> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00035582 <AmiBlitz3.ab3@26506>                        Dc.b $00,$01
00035583 <AmiBlitz3.ab3@26508> set_use_debugger:      Dc.b $00                            ; Flags.w
00035586 <AmiBlitz3.ab3@26509> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035588 <AmiBlitz3.ab3@26510>                        Dc.b $00,$01                        ; GadgetType.w
0003558C <AmiBlitz3.ab3@26511> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00035590 <AmiBlitz3.ab3@26512> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00035594 <AmiBlitz3.ab3@26513> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00035596 <AmiBlitz3.ab3@26514> AL_0_11094:            Ds.w 1
00035597 <AmiBlitz3.ab3@26516> set_make_smallestcode: Ds.b 1
0003559A <AmiBlitz3.ab3@26517> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
0003559C <AmiBlitz3.ab3@26518>                        Dc.b $00,$01
0003559D <AmiBlitz3.ab3@26519> set_link_debuginfo:    Ds.b 1
000355A0 <AmiBlitz3.ab3@26520> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
000355A2 <AmiBlitz3.ab3@26521>                        Dc.b $00,$01
000357C2 <AmiBlitz3.ab3@26526>   Ds.l 136         ;resident files STEP $44 piece 8
00035842 <AmiBlitz3.ab3@26531> str_calcexpression:        Ds.l 32
00035846 <AmiBlitz3.ab3@26532> destbufferend_backup_calc: Ds.l 1
00035850 <AmiBlitz3.ab3@26537>   MOVE.l destbufferend,destbufferend_backup_calc
00035856 <AmiBlitz3.ab3@26538> 
0003585C <AmiBlitz3.ab3@26539>   MOVE.l A7,errstack
00035866 <AmiBlitz3.ab3@26540>   MOVE.l #Calc_Error_Exit,errcont
00035890 <AmiBlitz3.ab3@26547>   !basic         ; get the flage for the conversion form the editor
000358D4 <AmiBlitz3.ab3@26548>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00035918 <AmiBlitz3.ab3@26549>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00035936 <AmiBlitz3.ab3@26550>   !asm
0003593C <AmiBlitz3.ab3@26552>   LEA str_calcexpression,A0
00035942 <AmiBlitz3.ab3@26561>   JSR setcvars
00035948 <AmiBlitz3.ab3@26562>   JSR setsvars
0003594E <AmiBlitz3.ab3@26563>   CLR.w connest
00035954 <AmiBlitz3.ab3@26564>   LEA str_calcexpression,A5
0003595A <AmiBlitz3.ab3@26565>   JSR AJL_0_BF6E
00035960 <AmiBlitz3.ab3@26566>   LEA str_calcexpression,A0
00035962 <AmiBlitz3.ab3@26567>   TST.l D3
00035966 <AmiBlitz3.ab3@26568>    BPL.w JL_0_11AE8
0003596A <AmiBlitz3.ab3@26569>   MOVE.b #$2D,(A0)+
0003596C <AmiBlitz3.ab3@26570>   NEG.l D3
00035974 <AmiBlitz3.ab3@26573>   CMPI.w #$80,CalculatorButtonDecFlag
00035978 <AmiBlitz3.ab3@26574>    BEQ.w JL_0_11B74
0003597A <AmiBlitz3.ab3@26575>   MOVEQ.l #$00,D1
00035982 <AmiBlitz3.ab3@26576>   CMPI.w #$80,CalculatorButtonBinFlag
00035986 <AmiBlitz3.ab3@26577>    BNE.w JL_0_11B36
00035988 <AmiBlitz3.ab3@26578>   MOVEQ.l #$1F,D0
0003598C <AmiBlitz3.ab3@26579>   MOVE.b #$25,(A0)+
0003598E <AmiBlitz3.ab3@26582>       LSL.l #1,D3
00035992 <AmiBlitz3.ab3@26583>        BCC.w JL_0_11B18
00035996 <AmiBlitz3.ab3@26584>       MOVE.b #"1",(A0)+
00035998 <AmiBlitz3.ab3@26585>       MOVEQ.l #-$01,D1
0003599C <AmiBlitz3.ab3@26586>   BRA.w JL_0_11B22
0003599E <AmiBlitz3.ab3@26589>       TST.w D1
000359A2 <AmiBlitz3.ab3@26590>       BEQ.w JL_0_11B22
000359A6 <AmiBlitz3.ab3@26591>       MOVE.b #"0",(A0)+
000359AA <AmiBlitz3.ab3@26594>  DBF D0,JL_0_11B08
000359AC <AmiBlitz3.ab3@26597>   TST.w D1
000359B0 <AmiBlitz3.ab3@26598>   BNE.w JL_0_11B30
000359B4 <AmiBlitz3.ab3@26599>   MOVE.b #"0",(A0)+
000359B6 <AmiBlitz3.ab3@26602>   CLR.b (A0)
000359BA <AmiBlitz3.ab3@26603> BRA.w JL_0_11B7C
000359BC <AmiBlitz3.ab3@26606>   MOVEQ.l #$07,D0
000359C0 <AmiBlitz3.ab3@26607>   MOVE.b #$24,(A0)+
000359C2 <AmiBlitz3.ab3@26610>     MOVE.l D3,D2
000359C4 <AmiBlitz3.ab3@26611>     SWAP D2
000359C6 <AmiBlitz3.ab3@26612>     LSR.w #8,D2
000359C8 <AmiBlitz3.ab3@26613>     LSR.w #4,D2
000359CC <AmiBlitz3.ab3@26614>     ADDI.w #$30,D2
000359D0 <AmiBlitz3.ab3@26615>     CMP.w #$3A,D2
000359D4 <AmiBlitz3.ab3@26616>      BCS.w JL_0_11B52
000359D6 <AmiBlitz3.ab3@26617>     ADDQ.w #7,D2
000359DA <AmiBlitz3.ab3@26620>     CMP.w #$30,D2
000359DE <AmiBlitz3.ab3@26621>     BEQ.w JL_0_11B62
000359E0 <AmiBlitz3.ab3@26622>     MOVE.b D2,(A0)+
000359E2 <AmiBlitz3.ab3@26623>     MOVEQ.l #-$01,D1
000359E6 <AmiBlitz3.ab3@26624>   BRA.w JL_0_11B6A
000359E8 <AmiBlitz3.ab3@26627>     TST.w D1
000359EC <AmiBlitz3.ab3@26628>      BEQ.w JL_0_11B6A
000359EE <AmiBlitz3.ab3@26629>     MOVE.b D2,(A0)+
000359F0 <AmiBlitz3.ab3@26632>     LSL.l #4,D3
000359F4 <AmiBlitz3.ab3@26633>  DBF D0,JL_0_11B3C
000359F8 <AmiBlitz3.ab3@26635> BRA.w JL_0_11B26
000359FA <AmiBlitz3.ab3@26638>   MOVE.l D3,D2
00035A00 <AmiBlitz3.ab3@26639>   JSR makelong
00035A0A <AmiBlitz3.ab3@26646>   MOVE.l destbufferend_backup_calc,destbufferend
00035A0C <AmiBlitz3.ab3@26648> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00035B0B <AmiBlitz3.ab3@26652> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00035B0C <AmiBlitz3.ab3@26654> Even
00035B0E <AmiBlitz3.ab3@26668>     MOVE.b (a5)+,d0
00035B12 <AmiBlitz3.ab3@26669>     BEQ 'l2
00035B16 <AmiBlitz3.ab3@26670>     CMP.b #$80,d0
00035B1A <AmiBlitz3.ab3@26671>     BNE 'l1
00035B1C <AmiBlitz3.ab3@26672>     MOVE.b (a5)+,d0
00035B20 <AmiBlitz3.ab3@26673>     BEQ 'l2
00035B24 <AmiBlitz3.ab3@26674>     CMP.b #$02,d0
00035B28 <AmiBlitz3.ab3@26675>   BNE 'l1
00035B2C <AmiBlitz3.ab3@26678>     CMP.b #$20,(a5)+
00035B30 <AmiBlitz3.ab3@26679>   BEQ 'l3
00035B32 <AmiBlitz3.ab3@26680>   SUBQ.l #1,a5
00035B34 <AmiBlitz3.ab3@26681>   TST.b (a5)
00035B38 <AmiBlitz3.ab3@26682>   BEQ 'l2
00035B3C <AmiBlitz3.ab3@26683>   CMP.w #$8008,(a5)
00035B40 <AmiBlitz3.ab3@26684>   BEQ 'l4
00035B44 <AmiBlitz3.ab3@26685>   CMP.w #$8009,(a5)
00035B48 <AmiBlitz3.ab3@26686>   BEQ 'l4
00035B4C <AmiBlitz3.ab3@26687> BRA 'l1
00035B4E <AmiBlitz3.ab3@26690>   ADDQ.l #2,a5
00035B54 <AmiBlitz3.ab3@26691>   JSR skiprest
00035B56 <AmiBlitz3.ab3@26692> RTS
00035B5C <AmiBlitz3.ab3@26695>   JSR nextline
00035B60 <AmiBlitz3.ab3@26696>   BNE 'l1
00035B62 <AmiBlitz3.ab3@26697> RTS
00035B8C <AmiBlitz3.ab3@26701>   !basic
00035B96 <AmiBlitz3.ab3@26702>   DateFormat 1
00035BA4 <AmiBlitz3.ab3@26703>   i.l=SystemDate
00035BCA <AmiBlitz3.ab3@26704>   a$=Date$ (i)
00035C48 <AmiBlitz3.ab3@26705>   a$=Replace$(a$,"/",".")
00035C4E <AmiBlitz3.ab3@26706>   GetD0 &a$
00035C50 <AmiBlitz3.ab3@26707>   MOVEQ #8,d2
00035C52 <AmiBlitz3.ab3@26708>   MOVE.l d0,a0
00035C54 <AmiBlitz3.ab3@26711>     MOVE.b (a0)+,d1
00035C5A <AmiBlitz3.ab3@26712>     JSR pokedata1b
00035C5E <AmiBlitz3.ab3@26713>  DBF d2,'l1
00035C60 <AmiBlitz3.ab3@26715>   MOVEQ #0,d0
00035C62 <AmiBlitz3.ab3@26716>   MOVE.b (a0)+,d0
00035C80 <AmiBlitz3.ab3@26717>   !asm
00035C86 <AmiBlitz3.ab3@26718>   ADD.l #9,d2
00035C8C <AmiBlitz3.ab3@26719>   ADD.l #9,a5
00035C8E <AmiBlitz3.ab3@26720> RTS
00035CB8 <AmiBlitz3.ab3@26724>   !basic
00035CC2 <AmiBlitz3.ab3@26725>   DateFormat 0
00035CD0 <AmiBlitz3.ab3@26726>   i.l=SystemDate
00035CF6 <AmiBlitz3.ab3@26727>   a$=Date$ (i)
00035D74 <AmiBlitz3.ab3@26728>   a$=Replace$(a$,"/",".")
00035D7A <AmiBlitz3.ab3@26729>   GetD0 &a$
00035D7C <AmiBlitz3.ab3@26730>   MOVEQ #8,d2
00035D7E <AmiBlitz3.ab3@26731>   MOVE.l d0,a0
00035D80 <AmiBlitz3.ab3@26734>     MOVE.b (a0)+,d1
00035D86 <AmiBlitz3.ab3@26735>     JSR pokedata1b
00035D8A <AmiBlitz3.ab3@26736>  DBF d2,'l1
00035D8C <AmiBlitz3.ab3@26738>   MOVEQ #0,d0
00035D8E <AmiBlitz3.ab3@26739>   MOVE.b (a0)+,d0
00035DAC <AmiBlitz3.ab3@26740>   !asm
00035DB2 <AmiBlitz3.ab3@26741>   ADD.l #9,d2
00035DB8 <AmiBlitz3.ab3@26742>   ADD.l #13,a5
00035DBA <AmiBlitz3.ab3@26743> RTS
00035DE4 <AmiBlitz3.ab3@26747>   !basic
00035DEE <AmiBlitz3.ab3@26748>   DateFormat 1
00035DFC <AmiBlitz3.ab3@26749>   i.l = SystemDate
00035E22 <AmiBlitz3.ab3@26750>   a$ = Date$ (i)
00035EA0 <AmiBlitz3.ab3@26751>   a$ = Replace$(a$,"/",".")
00035EA6 <AmiBlitz3.ab3@26752>   GetD0 &a$
00035EA8 <AmiBlitz3.ab3@26753>   MOVEQ #8,d2
00035EAA <AmiBlitz3.ab3@26754>   MOVE.l d0,a0
00035EAC <AmiBlitz3.ab3@26757>     MOVE.b (a0)+,d1
00035EB2 <AmiBlitz3.ab3@26758>     JSR writebyte
00035EB6 <AmiBlitz3.ab3@26759>  DBF d2,'l1
00035EB8 <AmiBlitz3.ab3@26761>   MOVEQ #0,d0
00035EBA <AmiBlitz3.ab3@26762>   MOVE.b (a0)+,d0
00035ED8 <AmiBlitz3.ab3@26763>   !asm
00035EDE <AmiBlitz3.ab3@26764>   ADD.l #9,a5
00035EE0 <AmiBlitz3.ab3@26765> RTS
00035F0A <AmiBlitz3.ab3@26769>   !basic
00035F14 <AmiBlitz3.ab3@26770>   DateFormat 0
00035F22 <AmiBlitz3.ab3@26771>   i.l=SystemDate
00035F48 <AmiBlitz3.ab3@26772>   a$=Date$ (i)
00035FC6 <AmiBlitz3.ab3@26773>   a$=Replace$(a$,"/",".")
00035FCC <AmiBlitz3.ab3@26774>   GetD0 &a$
00035FCE <AmiBlitz3.ab3@26775>   MOVEQ #8,d2
00035FD0 <AmiBlitz3.ab3@26776>   MOVE.l d0,a0
00035FD2 <AmiBlitz3.ab3@26779>     MOVE.b (a0)+,d1
00035FD8 <AmiBlitz3.ab3@26780>     JSR writebyte
00035FDC <AmiBlitz3.ab3@26781>  DBF d2,'l1
00035FDE <AmiBlitz3.ab3@26783>   MOVEQ #0,d0
00035FE0 <AmiBlitz3.ab3@26784>   MOVE.b (a0)+,d0
00035FFE <AmiBlitz3.ab3@26785>   !asm
00036004 <AmiBlitz3.ab3@26786>   ADD.l #13,a5
00036006 <AmiBlitz3.ab3@26787> RTS
00036008 <AmiBlitz3.ab3@26791>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003600A <AmiBlitz3.ab3@26792>   MOVE.l a5,d0
00036034 <AmiBlitz3.ab3@26793>   !basic
00036038 <AmiBlitz3.ab3@26794>   _myD0.l = PutD0
00036042 <AmiBlitz3.ab3@26795>   If _myD0
00036088 <AmiBlitz3.ab3@26796>     verstring$ = Left$(Peek.s(_myD0),9+3)
000360DA <AmiBlitz3.ab3@26797>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000360E0 <AmiBlitz3.ab3@26798>   Else
0003611A <AmiBlitz3.ab3@26799>     error{"INTERNAL: Invalid pointer in version_string!"}
0003612A <AmiBlitz3.ab3@26804>   actual_version.l = Peek.l(?versioninformation)
0003613A <AmiBlitz3.ab3@26805>   actual_build.l   = Peek.l(?number_of_builds)
0003615E <AmiBlitz3.ab3@26807>   Format "00"
00036194 <AmiBlitz3.ab3@26808>   Select verstring$
000361B8 <AmiBlitz3.ab3@26810>     Case "VER_MAJOR"
000361F4 <AmiBlitz3.ab3@26811>      put_versionstr$ = Str$(actual_version LSR 24)
0003621E <AmiBlitz3.ab3@26813>     Case "VER_MINOR"
00036262 <AmiBlitz3.ab3@26814>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003628C <AmiBlitz3.ab3@26816>     Case "VER_PATCH"
000362D0 <AmiBlitz3.ab3@26817>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000362FA <AmiBlitz3.ab3@26819>     Case "VER_BUILD"
0003631E <AmiBlitz3.ab3@26820>      Format ""
00036352 <AmiBlitz3.ab3@26821>      put_versionstr$ = Str$(actual_build)
00036358 <AmiBlitz3.ab3@26823>     Default
00036380 <AmiBlitz3.ab3@26824>      put_versionstr$ = "{unknown compilerconstant}"
0003638E <AmiBlitz3.ab3@26827>   End Select
000363B2 <AmiBlitz3.ab3@26828>   Format ""
000363C2 <AmiBlitz3.ab3@26830>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
000363C4 <AmiBlitz3.ab3@26831>   MOVE.l d0,d2
000363C6 <AmiBlitz3.ab3@26832>   MOVE.l d2,-(a7)
000363CA <AmiBlitz3.ab3@26833>   SUB #1,d2
000363D0 <AmiBlitz3.ab3@26835>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000363D2 <AmiBlitz3.ab3@26836>   MOVE.l d0,a0
000363D4 <AmiBlitz3.ab3@26839>     MOVE.b (a0)+,d1
000363DA <AmiBlitz3.ab3@26840>     JSR pokedata1b
000363DE <AmiBlitz3.ab3@26841>  DBF d2,'l1
000363E0 <AmiBlitz3.ab3@26843>   MOVEQ #0,d0
000363FE <AmiBlitz3.ab3@26844>   !asm
00036400 <AmiBlitz3.ab3@26845>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036402 <AmiBlitz3.ab3@26846>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036404 <AmiBlitz3.ab3@26847>   ADD.l d0,d2
0003640A <AmiBlitz3.ab3@26848>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003640C <AmiBlitz3.ab3@26849>   MOVEQ #0,d0
0003640E <AmiBlitz3.ab3@26850> RTS
00036410 <AmiBlitz3.ab3@26854>   MOVE.l a5,d0
0003643A <AmiBlitz3.ab3@26855>   !basic
0003643E <AmiBlitz3.ab3@26856>   _myD0.l = PutD0
00036448 <AmiBlitz3.ab3@26857>   If _myD0
0003648E <AmiBlitz3.ab3@26858>     verstring$ = Left$(Peek.s(_myD0),9+3)
000364E0 <AmiBlitz3.ab3@26859>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000364E6 <AmiBlitz3.ab3@26860>   Else
00036520 <AmiBlitz3.ab3@26861>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036530 <AmiBlitz3.ab3@26866>   actual_version.l = Peek.l(?versioninformation)
00036540 <AmiBlitz3.ab3@26867>   actual_build.l   = Peek.l(?number_of_builds)
00036564 <AmiBlitz3.ab3@26869>   Format ""
0003659A <AmiBlitz3.ab3@26870>   Select verstring$
000365BE <AmiBlitz3.ab3@26872>     Case "VER_MAJOR"
000365FA <AmiBlitz3.ab3@26873>      put_versionstr$ = Str$(actual_version LSR 24)
00036624 <AmiBlitz3.ab3@26875>     Case "VER_MINOR"
00036668 <AmiBlitz3.ab3@26876>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036692 <AmiBlitz3.ab3@26878>     Case "VER_PATCH"
000366D6 <AmiBlitz3.ab3@26879>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036700 <AmiBlitz3.ab3@26881>     Case "VER_BUILD"
00036724 <AmiBlitz3.ab3@26882>      Format ""
00036758 <AmiBlitz3.ab3@26883>      put_versionstr$ = Str$(actual_build)
0003675E <AmiBlitz3.ab3@26885>     Default
00036786 <AmiBlitz3.ab3@26886>      put_versionstr$ = "{unknown compilerconstant}"
00036794 <AmiBlitz3.ab3@26888>   End Select
000367B8 <AmiBlitz3.ab3@26889>   Format ""
000367CE <AmiBlitz3.ab3@26891>   GetD0 FLen(put_versionstr$)-1
000367D0 <AmiBlitz3.ab3@26892>   MOVE.l d0,d2
000367D6 <AmiBlitz3.ab3@26894>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000367D8 <AmiBlitz3.ab3@26895>   MOVE.l d0,a0
000367DA <AmiBlitz3.ab3@26898>     MOVE.b (a0)+,d1
000367E0 <AmiBlitz3.ab3@26899>     JSR writebyte
000367E4 <AmiBlitz3.ab3@26900>  DBF d2,'l1
000367E6 <AmiBlitz3.ab3@26902>   MOVEQ #0,d0
000367E8 <AmiBlitz3.ab3@26903>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036806 <AmiBlitz3.ab3@26904>   !asm
0003680C <AmiBlitz3.ab3@26905>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003680E <AmiBlitz3.ab3@26906> RTS
00036810 <AmiBlitz3.ab3@27008>  MOVE.l a5,-(a7)
0003683C <AmiBlitz3.ab3@27009>  !fget
00036840 <AmiBlitz3.ab3@27010>  CMP.w #".",d0
00036844 <AmiBlitz3.ab3@27011>  BNE 'skip
00036848 <AmiBlitz3.ab3@27012>  MOVEM.l a2/d2,-(a7)
0003684E <AmiBlitz3.ab3@27013>  LEA newtypebase,a2
00036854 <AmiBlitz3.ab3@27014>  JSR getparameter2
00036858 <AmiBlitz3.ab3@27015>  BEQ.w JUMP_syntaxerr
0003685E <AmiBlitz3.ab3@27016>  JSR findtype
00036862 <AmiBlitz3.ab3@27017>  BNE.w JUMP_notypeerr
00036868 <AmiBlitz3.ab3@27018>  MOVE.l a2,typetocast
0003686C <AmiBlitz3.ab3@27019>  MOVEM.l (a7)+,a2/d2
00036870 <AmiBlitz3.ab3@27020>  CMP.w #")",d0
00036874 <AmiBlitz3.ab3@27021>  BNE JUMP_errorbracketmiss
00036876 <AmiBlitz3.ab3@27022>  ADDQ.l #4,a7
000368A2 <AmiBlitz3.ab3@27023>  !fget
000368A8 <AmiBlitz3.ab3@27024>  JMP nocast
000368AA <AmiBlitz3.ab3@27026> 'skip MOVE.l (a7)+,a5
000368B0 <AmiBlitz3.ab3@27027>  JMP JL_0_A410
000368B6 <AmiBlitz3.ab3@27029> JUMP_errorbracketmiss JMP errorbracketmiss
000368E0 <AmiBlitz3.ab3@27031> Function.l ab3_GetIncludeLock{filename.s}
00036900 <AmiBlitz3.ab3@27032>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00036958 <AmiBlitz3.ab3@27033>   ex.s       = dos_GetExt{filename}
0003696C <AmiBlitz3.ab3@27035>   If incLock = False
000369E0 <AmiBlitz3.ab3@27036>     filename = dos_SetExt{filename,"ab3"}
00036A00 <AmiBlitz3.ab3@27037>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00036A14 <AmiBlitz3.ab3@27040>   If incLock = False
00036A88 <AmiBlitz3.ab3@27041>     filename = dos_SetExt{filename,"ab2"}
00036AA8 <AmiBlitz3.ab3@27042>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00036ABC <AmiBlitz3.ab3@27045>   If incLock = False
00036B30 <AmiBlitz3.ab3@27046>     filename = dos_SetExt{filename,"bb2"}
00036B50 <AmiBlitz3.ab3@27047>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00036B64 <AmiBlitz3.ab3@27050>   If incLock = False
00036BF6 <AmiBlitz3.ab3@27051>     filename = dos_SetExt{filename,ex+".ab3"}
00036C16 <AmiBlitz3.ab3@27052>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00036C2A <AmiBlitz3.ab3@27055>   If incLock = False
00036C9E <AmiBlitz3.ab3@27056>     filename = dos_SetExt{filename,"ab2"}
00036CBE <AmiBlitz3.ab3@27057>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00036CD2 <AmiBlitz3.ab3@27060>   If incLock = False
00036D46 <AmiBlitz3.ab3@27061>     filename = dos_SetExt{filename,"bb2"}
00036D66 <AmiBlitz3.ab3@27062>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00036D70 <AmiBlitz3.ab3@27065>  Function Return incLock
00036D8A <AmiBlitz3.ab3@27066> End Function
00036DB4 <AmiBlitz3.ab3@27070>   !basic
00036DDE <AmiBlitz3.ab3@27071>   incString.s = Peek$(?ptr_parameterstore)
00036E0C <AmiBlitz3.ab3@27073>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00036E10 <AmiBlitz3.ab3@27074>   incDirP.l   = PutD0                                       ;    "
00036E38 <AmiBlitz3.ab3@27075>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00036EB8 <AmiBlitz3.ab3@27076>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00036EEA <AmiBlitz3.ab3@27077>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00036EFE <AmiBlitz3.ab3@27079>   If incLock = False ; not found => check default Include Directory
00036F0E <AmiBlitz3.ab3@27080>     incDirP.l = Peek.l(?incd)
00036F18 <AmiBlitz3.ab3@27081>     If incDirP
00036F40 <AmiBlitz3.ab3@27082>       incDir_.s = Peek.s(incDirP)
00036F46 <AmiBlitz3.ab3@27083>     Else
00036FB0 <AmiBlitz3.ab3@27084>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037030 <AmiBlitz3.ab3@27086>     incFile.s = dos_AddPart{incDir_,incString}
00037062 <AmiBlitz3.ab3@27087>     incLock.l = ab3_GetIncludeLock{incFile}
00037076 <AmiBlitz3.ab3@27090>   If incLock = False ; not found => check relative to current source
0003708E <AmiBlitz3.ab3@27091>     incDepth.l = Peek.w(?ininclude)-1
000370B4 <AmiBlitz3.ab3@27092>     If incDepth >= 0 AND incDepth < #maxincludes
00037114 <AmiBlitz3.ab3@27093>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037194 <AmiBlitz3.ab3@27094>       incFile.s = dos_AddPart{incDir_,incString}
000371C6 <AmiBlitz3.ab3@27095>       incLock.l = ab3_GetIncludeLock{incFile}
000371DA <AmiBlitz3.ab3@27099>   If incLock = False ; still not found => check default Include Directory and name only
000371EA <AmiBlitz3.ab3@27100>     incDirP.l = Peek.l(?incd)
000371F4 <AmiBlitz3.ab3@27101>     If incDirP
0003721C <AmiBlitz3.ab3@27102>       incDir_.s = Peek.s(incDirP)
00037222 <AmiBlitz3.ab3@27103>     Else
0003728C <AmiBlitz3.ab3@27104>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003733A <AmiBlitz3.ab3@27106>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
0003736C <AmiBlitz3.ab3@27107>     incLock.l = ab3_GetIncludeLock{incFile}
00037376 <AmiBlitz3.ab3@27110>   If incLock
0003738C <AmiBlitz3.ab3@27111>     MaxLen incFile = 1024
000373B0 <AmiBlitz3.ab3@27112>     NameFromLock_ incLock,&incFile,1024
000373DA <AmiBlitz3.ab3@27113>     incFile = Peek.s(&incFile)
00037412 <AmiBlitz3.ab3@27114>     Poke$ ?ptr_parameterstore,incFile
00037426 <AmiBlitz3.ab3@27115>     i = FLen(incFile)
00037432 <AmiBlitz3.ab3@27116>     GetReg d0,i
00037438 <AmiBlitz3.ab3@27117>     MOVE.l d0,tempstore
00037448 <AmiBlitz3.ab3@27118>     UnLock_ incLock
00037466 <AmiBlitz3.ab3@27121>   !asm
0003746C <AmiBlitz3.ab3@27122>   TST.l tempstore
00037470 <AmiBlitz3.ab3@27123>    BEQ 'l1
00037476 <AmiBlitz3.ab3@27124>   MOVE.l tempstore,d2
00037478 <AmiBlitz3.ab3@27127> RTS
000374A2 <AmiBlitz3.ab3@27131>   !basic
000374CC <AmiBlitz3.ab3@27132>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
000374FA <AmiBlitz3.ab3@27133>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000374FE <AmiBlitz3.ab3@27134>   incDirP.l   = PutD0                                       ;    "
00037526 <AmiBlitz3.ab3@27135>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000375A6 <AmiBlitz3.ab3@27136>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000375C6 <AmiBlitz3.ab3@27137>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000375DA <AmiBlitz3.ab3@27139>   If incLock = False                                        ; not found => try orignal string only to find
000375FA <AmiBlitz3.ab3@27140>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037604 <AmiBlitz3.ab3@27143>   If incLock                                                ; found => store full path
0003761A <AmiBlitz3.ab3@27144>     MaxLen incFile = 1024
0003763E <AmiBlitz3.ab3@27145>     NameFromLock_ incLock,&incFile,1024
00037668 <AmiBlitz3.ab3@27146>     incFile = Peek.s(&incFile)
000376A0 <AmiBlitz3.ab3@27147>     Poke$ ?ptr_parameterstore,incFile
000376AC <AmiBlitz3.ab3@27150> 
000376CA <AmiBlitz3.ab3@27151>   !asm
000376CC <AmiBlitz3.ab3@27152> RTS
000376D2 <AmiBlitz3.ab3@27163>   JSR Aclearallvars
000376D8 <AmiBlitz3.ab3@27164>   JSR free_unusedfunctions
000376E2 <AmiBlitz3.ab3@27179>   MOVE.l #"NORE",reqmode
000376E8 <AmiBlitz3.ab3@27180> JSR handle_compileerror
000376EA <AmiBlitz3.ab3@27183>   MOVE.l d0,-(a7)
000376EC <AmiBlitz3.ab3@27184>   MOVE.l a5,d0
000376F6 <AmiBlitz3.ab3@27185>   !basica7
000376FA <AmiBlitz3.ab3@27186>   i.l = PutD0
00037704 <AmiBlitz3.ab3@27187>   If i
0003772C <AmiBlitz3.ab3@27188>     a$ = Peek$(i)
0003775E <AmiBlitz3.ab3@27189>     b$ = Peeks$(i-7,7)
00037896 <AmiBlitz3.ab3@27191> 
0003789C <AmiBlitz3.ab3@27192>     MOVE.l d0,result
000378A0 <AmiBlitz3.ab3@27194>   !asma7
000378A2 <AmiBlitz3.ab3@27195>   MOVE.l (a7)+,d0
000378A4 <AmiBlitz3.ab3@27196> RTS
000378CE <AmiBlitz3.ab3@27200>   !basic
000378FC <AmiBlitz3.ab3@27201>   !ComData_LEA{comStr_CurrentDir,D0}
00037900 <AmiBlitz3.ab3@27202>   currentDirP.l = PutD0
0003792E <AmiBlitz3.ab3@27204>   !ComData_LEA{comStr_SourceName,D0}
00037932 <AmiBlitz3.ab3@27205>   fileNameP.l = PutD0
0003795A <AmiBlitz3.ab3@27207>   check_dirname$  = Peek$(currentDirP)
00037982 <AmiBlitz3.ab3@27208>   check_filename$ = Peek$(fileNameP)
00037A08 <AmiBlitz3.ab3@27209>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00037A0E <AmiBlitz3.ab3@27210>     JSR free_unusedfunctions
00037A58 <AmiBlitz3.ab3@27212>   olddirname$ = Peek$(check_dirname$)
00037AA2 <AmiBlitz3.ab3@27213>   oldfilename$ = Peek$(check_filename$)
00037ACC <AmiBlitz3.ab3@27214>   For i = 0 To #maxincludes-1
00037AE0 <AmiBlitz3.ab3@27215>     incline(i) = 0
00037AF0 <AmiBlitz3.ab3@27216>   Next
00037B0E <AmiBlitz3.ab3@27217>   !asm
00037B10 <AmiBlitz3.ab3@27218> RTS
00037B12 <AmiBlitz3.ab3@27222>   MOVEQ #0,d1
00037B14 <AmiBlitz3.ab3@27225>   MOVE.b (a5)+,d0
00037B18 <AmiBlitz3.ab3@27226>   BEQ 'er1
00037B1C <AmiBlitz3.ab3@27227>   CMP.b #$20,d0
00037B20 <AmiBlitz3.ab3@27228>   BEQ 'l1
00037B22 <AmiBlitz3.ab3@27229>   ADDQ #1,d1
00037B26 <AmiBlitz3.ab3@27230>   CMP.b #$22,d0
00037B2A <AmiBlitz3.ab3@27231>   BNE 'l1
00037B2C <AmiBlitz3.ab3@27232> RTS
00037B32 <AmiBlitz3.ab3@27235> JMP syntaxerr
00037B56 <AmiBlitz3.ab3@27246> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00037B74 <AmiBlitz3.ab3@27247> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00037B7A <AmiBlitz3.ab3@27252>   TST.b exdebug
00037B7E <AmiBlitz3.ab3@27253>   BNE 'l10
00037B84 <AmiBlitz3.ab3@27254>   MOVE.l #$4e71,d1
00037B8A <AmiBlitz3.ab3@27255>   JSR writeword
00037B90 <AmiBlitz3.ab3@27256>   MOVE.l destpointer,d0
00037B92 <AmiBlitz3.ab3@27257>   MOVE.l d0,d1
00037B94 <AmiBlitz3.ab3@27258>   ADDQ.l #3,d1
00037B9A <AmiBlitz3.ab3@27259>   AND.l #$fffffffc,d1
00037BA0 <AmiBlitz3.ab3@27260>   MOVE.l d1,destpointer
00037BA6 <AmiBlitz3.ab3@27261>   SUB.l destpointer,d0
00037BAA <AmiBlitz3.ab3@27262>   BEQ 'lnf1
00037BB4 <AmiBlitz3.ab3@27263>   CMP.l #-1,bssstart
00037BB8 <AmiBlitz3.ab3@27264>   BNE 'lnf1
00037BC2 <AmiBlitz3.ab3@27265>   CMP.l #-1,chipstart
00037BC6 <AmiBlitz3.ab3@27266>   BNE 'lnf1
00037BCC <AmiBlitz3.ab3@27267>   MOVE.l destpointer,a4
00037BD2 <AmiBlitz3.ab3@27268>   TST.w dontwrite
00037BD6 <AmiBlitz3.ab3@27269>   BNE 'lnf1
00037BDC <AmiBlitz3.ab3@27270>   MOVE.w #$4e71,-2(a4)
00037BE6 <AmiBlitz3.ab3@27273>   CMP.l #-1,bssstart
00037BEA <AmiBlitz3.ab3@27274>   BEQ 'l11
00037BF0 <AmiBlitz3.ab3@27275>   MOVE.l #erro1t,-(a7)
00037BF6 <AmiBlitz3.ab3@27276> JMP handle_compileerror
00037C00 <AmiBlitz3.ab3@27279>   MOVE.l destpointer,bssstart
00037C08 <AmiBlitz3.ab3@27280>   MOVE.b #1,bssmode
00037C0E <AmiBlitz3.ab3@27283>   TST.b chipmode
00037C12 <AmiBlitz3.ab3@27284>   BEQ 'l10
00037C1C <AmiBlitz3.ab3@27285>   MOVE.l destpointer,chipend
00037C22 <AmiBlitz3.ab3@27286>   CLR.b chipmode
00037C28 <AmiBlitz3.ab3@27289>   JSR get1bytemain
00037C2A <AmiBlitz3.ab3@27290> RTS
00037C30 <AmiBlitz3.ab3@27294>    TST.b exdebug
00037C34 <AmiBlitz3.ab3@27295>   BNE 'x1
00037C3A <AmiBlitz3.ab3@27296>   MOVE.l destpointer,d0
00037C40 <AmiBlitz3.ab3@27297>   MOVE.l d0,realbssend
00037C46 <AmiBlitz3.ab3@27298>   MOVE.l #$4e71,d1
00037C4C <AmiBlitz3.ab3@27299>   JSR writeword
00037C52 <AmiBlitz3.ab3@27300>   MOVE.l destpointer,d0
00037C54 <AmiBlitz3.ab3@27301>   MOVE.l d0,d1
00037C56 <AmiBlitz3.ab3@27302>   ADDQ.l #3,d1
00037C5C <AmiBlitz3.ab3@27303>   AND.l #$fffffffc,d1
00037C62 <AmiBlitz3.ab3@27304>   MOVE.l d1,destpointer
00037C68 <AmiBlitz3.ab3@27305>   SUB.l destpointer,d0
00037C6C <AmiBlitz3.ab3@27306>   BEQ 'lnf1
00037C72 <AmiBlitz3.ab3@27307>   MOVE.l destpointer,a4
00037C7C <AmiBlitz3.ab3@27308>   CMP.l #-1,bssstart
00037C80 <AmiBlitz3.ab3@27309>   BNE 'lnf1
00037C8A <AmiBlitz3.ab3@27310>   CMP.l #-1,chipstart
00037C8E <AmiBlitz3.ab3@27311>   BNE 'lnf1
00037C94 <AmiBlitz3.ab3@27312>   TST.w dontwrite
00037C98 <AmiBlitz3.ab3@27313>   BNE 'lnf1
00037C9E <AmiBlitz3.ab3@27314>   MOVE.w #$4e71,-2(a4)
00037CA4 <AmiBlitz3.ab3@27317>   TST.b bssmode
00037CA8 <AmiBlitz3.ab3@27318>   BEQ 'l10
00037CB2 <AmiBlitz3.ab3@27319>   MOVE.l destpointer,bssend
00037CB8 <AmiBlitz3.ab3@27320>   CLR.b bssmode
00037CC2 <AmiBlitz3.ab3@27325>   CMP.l #-1,chipstart
00037CC6 <AmiBlitz3.ab3@27326>   BEQ 'l11
00037CCC <AmiBlitz3.ab3@27327>   MOVE.l #erro1t,-(a7)
00037CD2 <AmiBlitz3.ab3@27328> JMP handle_compileerror
00037CDC <AmiBlitz3.ab3@27331>   MOVE.l destpointer,chipstart
00037CE4 <AmiBlitz3.ab3@27332>   MOVE.b #1,chipmode
00037CEA <AmiBlitz3.ab3@27335>   JSR get1bytemain
00037CEC <AmiBlitz3.ab3@27336> RTS
00037D16 <AmiBlitz3.ab3@27340>   !basic
00037D28 <AmiBlitz3.ab3@27350>   i.l = Peek.w(?ininclude)
00037D4E <AmiBlitz3.ab3@27351>   If i>=0 AND i<#maxincludes
00037D80 <AmiBlitz3.ab3@27352>     incdim (i) = Peek.s(?includetemp2)
00037D9A <AmiBlitz3.ab3@27353>     incline(i) = Peek.l(?includeline)
00037DA4 <AmiBlitz3.ab3@27355>     If CLIMode
00037E52 <AmiBlitz3.ab3@27356>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00037E70 <AmiBlitz3.ab3@27360>   !asm
00037E72 <AmiBlitz3.ab3@27361> RTS
00037E9C <AmiBlitz3.ab3@27365>   !basic
00037EAE <AmiBlitz3.ab3@27366>   i.l = Peek.w(?ininclude)
00037ED4 <AmiBlitz3.ab3@27367>   If i>=0 AND i<#maxincludes
00037F04 <AmiBlitz3.ab3@27368>     incdim (i) = ""
00037F18 <AmiBlitz3.ab3@27369>     incline(i) = 0
00037F50 <AmiBlitz3.ab3@27370>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00037F6E <AmiBlitz3.ab3@27372>   !asm
00037F70 <AmiBlitz3.ab3@27373> RTS
00037F76 <AmiBlitz3.ab3@27377>   LEA replacedat,a0
00037F7A <AmiBlitz3.ab3@27378>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00037F7C <AmiBlitz3.ab3@27379> RTS
00037F82 <AmiBlitz3.ab3@27383>   TST.b fpu
00037F86 <AmiBlitz3.ab3@27384>   BEQ 'l1
00037F90 <AmiBlitz3.ab3@27387>   MOVE.l destpointer,newinitaddr
00037F96 <AmiBlitz3.ab3@27388>   JSR writeword
00037F9C <AmiBlitz3.ab3@27389>   JSR writelong
00037F9E <AmiBlitz3.ab3@27390> RTS
00037FA0 <AmiBlitz3.ab3@27395>   TST.b (a5)
00037FA4 <AmiBlitz3.ab3@27396>    BEQ.s 'll20
00037FA8 <AmiBlitz3.ab3@27397>   CMP.b #$20,(a5)
00037FAC <AmiBlitz3.ab3@27398>    BNE.s 'll10
00037FAE <AmiBlitz3.ab3@27399>   ADDQ.l #1,a5
00037FB2 <AmiBlitz3.ab3@27400> BRA.s 'll21
00037FB6 <AmiBlitz3.ab3@27403>   CMP.b #";",(a5)
00037FBA <AmiBlitz3.ab3@27404>   BNE.s 'll20
00037FBC <AmiBlitz3.ab3@27407>   TST.b (a5)+
00037FC0 <AmiBlitz3.ab3@27408>   BEQ.s 'll23
00037FC4 <AmiBlitz3.ab3@27409> BRA.s 'll25
00037FC6 <AmiBlitz3.ab3@27412>   SUBQ.l #1,a5
00037FC8 <AmiBlitz3.ab3@27415> RTS
00037FCC <AmiBlitz3.ab3@27419>   MOVEM.l a2/d2,-(a7)
00037FCE <AmiBlitz3.ab3@27420>   MOVEQ #0,d2
00037FD4 <AmiBlitz3.ab3@27421>   LEA ptr_parameterstore,a0
00037FDA <AmiBlitz3.ab3@27422>   LEA chartab,a2
00037FDC <AmiBlitz3.ab3@27425>   MOVE.b (a5),d0
00037FE0 <AmiBlitz3.ab3@27426>   TST.b 0(a2,d0)
00037FE4 <AmiBlitz3.ab3@27427>   BNE 'l10
00037FE6 <AmiBlitz3.ab3@27428>   ADDQ.l #1,a5
00037FE8 <AmiBlitz3.ab3@27429>   MOVE.b d0,(a0)+
00037FEA <AmiBlitz3.ab3@27430>   ADDQ.l #1,d2
00037FEE <AmiBlitz3.ab3@27431> BRA fc2
00037FF0 <AmiBlitz3.ab3@27434>   CLR.b (a0)+
00037FF6 <AmiBlitz3.ab3@27435>   JSR findlabel2
00037FF8 <AmiBlitz3.ab3@27436>   MOVE.l a2,a0
00037FFC <AmiBlitz3.ab3@27437>   MOVEM.l (a7)+,a2/d2
00037FFE <AmiBlitz3.ab3@27438> RTS
00038000 <AmiBlitz3.ab3@27442>   TST.l d0
00038004 <AmiBlitz3.ab3@27443>   BNE 'l10
0003800A <AmiBlitz3.ab3@27444>     MOVE.l #syntax_,-(a7)
00038010 <AmiBlitz3.ab3@27445> JMP handle_compileerror
00038016 <AmiBlitz3.ab3@27448>   CMP.l #1,d0
0003801A <AmiBlitz3.ab3@27449>   BNE 'l20
00038020 <AmiBlitz3.ab3@27450>     MOVE.l #overflow,-(a7)
00038026 <AmiBlitz3.ab3@27451> JMP handle_compileerror
00038028 <AmiBlitz3.ab3@27454>   ADD.l a2,d0
0003802A <AmiBlitz3.ab3@27455>   MOVE.l d0,-(a7)
00038030 <AmiBlitz3.ab3@27456> JMP handle_compileerror
00038036 <AmiBlitz3.ab3@27460>   JMP _return
0003803C <AmiBlitz3.ab3@27461>   JMP _return
00038042 <AmiBlitz3.ab3@27462>   JMP _return
00038048 <AmiBlitz3.ab3@27463>   JMP _return
0003804E <AmiBlitz3.ab3@27464>   JMP _return
00038054 <AmiBlitz3.ab3@27465>   JMP _return
0003805A <AmiBlitz3.ab3@27466>   JMP _return
00038060 <AmiBlitz3.ab3@27467>   JMP _return
00038066 <AmiBlitz3.ab3@27468>   JMP _return
0003806C <AmiBlitz3.ab3@27469>   JMP _return
00038072 <AmiBlitz3.ab3@27470>   JMP Atokejsr
00038078 <AmiBlitz3.ab3@27471>   JMP writeinit
0003807E <AmiBlitz3.ab3@27472>   JMP macroexecute
00038084 <AmiBlitz3.ab3@27473>   JMP findnext
0003808A <AmiBlitz3.ab3@27474>   JMP replacelib
00038090 <AmiBlitz3.ab3@27475>   JMP findconstant2
00038096 <AmiBlitz3.ab3@27476>   JMP findchar                                             ;char in d1
0003809C <AmiBlitz3.ab3@27477>   JMP stripspaces
000380A2 <AmiBlitz3.ab3@27478>   JMP calc                                                 ;d0 varmode
000380A8 <AmiBlitz3.ab3@27479>   JMP error
000380AE <AmiBlitz3.ab3@27480>   JMP writelong                                            ;d1 value
000380B4 <AmiBlitz3.ab3@27481>   JMP writeword                                            ;d1 value
000380BA <AmiBlitz3.ab3@27482>   JMP writebyte                                            ;d1 value
000380C0 <AmiBlitz3.ab3@27483> JMP exit
000380C4 <AmiBlitz3.ab3@27487>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
000380C6 <AmiBlitz3.ab3@27490>   fast            Dc.w 0
000380C8 <AmiBlitz3.ab3@27491>   fpu             Dc.w 0
000380CA <AmiBlitz3.ab3@27492>   newsyntax       Dc.w 0
000380CB <AmiBlitz3.ab3@27494>   optistring      Dc.b 0
000380CC <AmiBlitz3.ab3@27495>   optistring2     Dc.b 0
000380CD <AmiBlitz3.ab3@27496>   optiarray       Dc.b 0
000380CE <AmiBlitz3.ab3@27497>   quickadd        Dc.b 0
000380D0 <AmiBlitz3.ab3@27498>   newmode         Dc.w 0
000380D2 <AmiBlitz3.ab3@27499>   mode            Dc.w 0
000380D4 <AmiBlitz3.ab3@27500>   string1         Dc.w 0
000380D6 <AmiBlitz3.ab3@27501>   load_var_size   Dc.w 0
000380D8 <AmiBlitz3.ab3@27502>   load_var_reg    Dc.w 0
000380DC <AmiBlitz3.ab3@27503>   load_var_addr   Dc.l 0
000380DE <AmiBlitz3.ab3@27504>   imm_size        Dc.w 0
000380E0 <AmiBlitz3.ab3@27505>   imm_reg         Dc.w 0
000380E4 <AmiBlitz3.ab3@27506>   imm_addr        Dc.l 0
000380E5 <AmiBlitz3.ab3@27507>   iee             Dc.b 0
000380E6 <AmiBlitz3.ab3@27508>   _dcb            Dc.b 0
000380EA <AmiBlitz3.ab3@27509>   nohunkoffset    Dc.l 0
000380EE <AmiBlitz3.ab3@27512> teddata:        Dc.l tokens
000380F2 <AmiBlitz3.ab3@27513>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
000380F6 <AmiBlitz3.ab3@27514>                 Dc.l read_xtrafile
000380FA <AmiBlitz3.ab3@27515>                 Dc.l write_xtrafile
000380FE <AmiBlitz3.ab3@27516>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038102 <AmiBlitz3.ab3@27517>                 Dc.l 0
00038106 <AmiBlitz3.ab3@27518>                 Dc.b ":",34,".;"
0003810A <AmiBlitz3.ab3@27519>                 Dc.l "NEW1"
0003810E <AmiBlitz3.ab3@27520>                 Dc.l newtypebase
00038112 <AmiBlitz3.ab3@27521> realconstbase:  Dc.l labelbase
00038116 <AmiBlitz3.ab3@27522> deflib          Dc.l 0
0003811A <AmiBlitz3.ab3@27523> incd            Dc.l 0
0003811E <AmiBlitz3.ab3@27524>                 Dc.l 0
00038122 <AmiBlitz3.ab3@27525>                 Dc.l 0
00038126 <AmiBlitz3.ab3@27526>                 Dc.l 0
00038128 <AmiBlitz3.ab3@27527> _return         RTS
00038129 <AmiBlitz3.ab3@27528>                 Dc.b 0
00038529 <AmiBlitz3.ab3@27529> chartab2        Ds.l 256
0003852D <AmiBlitz3.ab3@27530> codeend         Dc.l 0
00038531 <AmiBlitz3.ab3@27531> hunkoffsetnum   Dc.l 0
00038535 <AmiBlitz3.ab3@27532> chipsize        Dc.l 0
00038539 <AmiBlitz3.ab3@27533> bsssize         Dc.l 0
0003853D <AmiBlitz3.ab3@27534> bssstart        Dc.l -1
00038541 <AmiBlitz3.ab3@27535> bssend          Dc.l -1
00038545 <AmiBlitz3.ab3@27536> chipstart       Dc.l -1
00038549 <AmiBlitz3.ab3@27537> chipend         Dc.l -1
0003854A <AmiBlitz3.ab3@27538> bssmode         Dc.b 0
0003854B <AmiBlitz3.ab3@27539> chipmode        Dc.b 0
0003854C <AmiBlitz3.ab3@27540> newhunk         Dc.b 0
00038550 <AmiBlitz3.ab3@27541> bssnum          Dc.l 0
00038554 <AmiBlitz3.ab3@27542> chipnum         Dc.l 0
00038558 <AmiBlitz3.ab3@27543> lastinstruction Dc.l 0
0003855C <AmiBlitz3.ab3@27544> lastinstructionaddr Dc.l 0
00038570 <AmiBlitz3.ab3@27545> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00038574 <AmiBlitz3.ab3@27546> tstsize1b:      Ds.l 1
00038578 <AmiBlitz3.ab3@27547> bsssize2        Dc.l 1
0003857C <AmiBlitz3.ab3@27548>                 Dc.l $03E9
00038580 <AmiBlitz3.ab3@27549> tstsize2b:      Dc.l $100
00038594 <AmiBlitz3.ab3@27550> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038598 <AmiBlitz3.ab3@27551> tstsize1c:      Ds.l 1
0003859C <AmiBlitz3.ab3@27552> bsssize3        Dc.l 1
000385A0 <AmiBlitz3.ab3@27553> chipsize2       Dc.l 1
000385A4 <AmiBlitz3.ab3@27554>                 Dc.l $3e9
000385A8 <AmiBlitz3.ab3@27555> tstsize2c       Dc.l 0
000385B8 <AmiBlitz3.ab3@27556> hunkend         Dc.l $3f2,$3eb,0,$3f2
000385C8 <AmiBlitz3.ab3@27557> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000385CF <AmiBlitz3.ab3@27558> strcpy          Dc.b "strcpy",0
000385D6 <AmiBlitz3.ab3@27559> strcmp          Dc.b "strcmp",0
000385DD <AmiBlitz3.ab3@27560> strvar          Dc.b "strvar",0
000385E2 <AmiBlitz3.ab3@27561> qmul            Dc.b "qmul",0
000385E7 <AmiBlitz3.ab3@27562> qdiv            Dc.b "qdiv",0
000385EE <AmiBlitz3.ab3@27563> _MaxLen         Dc.b "maxlen",0
000385F3 <AmiBlitz3.ab3@27564> notf            Dc.b "????",0
00038616 <AmiBlitz3.ab3@27566> errtext         Dc.b "only reg addressing Mode supported",0
00038640 <AmiBlitz3.ab3@27567> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00038682 <AmiBlitz3.ab3@27568> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00038684 <AmiBlitz3.ab3@27569> peeksize        Dc.w 0
00038688 <AmiBlitz3.ab3@27571> mainstart       Dc.l 0
00038689 <AmiBlitz3.ab3@27573> infunctioncode  Dc.b 0
0003868B <AmiBlitz3.ab3@27574> regnumstore     Dc.w 0
000386B8 <AmiBlitz3.ab3@27575>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000386C0 <AmiBlitz3.ab3@27576> testcode        Dc.b "print i",0
00038724 <AmiBlitz3.ab3@27577>                 Ds.b 100
00038732 <AmiBlitz3.ab3@27578> devo            Dc.b "developobject",0 : Even
00038744 <AmiBlitz3.ab3@27579> autostorename   Dc.b "__autoconstantnum",0
0003874E <AmiBlitz3.ab3@27580> _include        Dc.b "__include",0
00038756 <AmiBlitz3.ab3@27581> _debug          Dc.b "__debug",0
0003875A <AmiBlitz3.ab3@27582> unusedfunc      Dc.l 0
0003875C <AmiBlitz3.ab3@27586>   MOVE.l a0,d0
00038786 <AmiBlitz3.ab3@27587>   !basic
0003878A <AmiBlitz3.ab3@27588>   *olderror.l= PutD0
000387E4 <AmiBlitz3.ab3@27589> 
00038818 <AmiBlitz3.ab3@27590>   error_type$ = error$
000388B4 <AmiBlitz3.ab3@27591> 
000388C8 <AmiBlitz3.ab3@27592>   If Peek.l (?beforeparameterfetch)
000388DE <AmiBlitz3.ab3@27593>     MaxLen detokenline.s = 65536
00038920 <AmiBlitz3.ab3@27594>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00038930 <AmiBlitz3.ab3@27595>    *tn.preprocessor = Peek.l(?include_preprocessor)
0003895A <AmiBlitz3.ab3@27596>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
00038982 <AmiBlitz3.ab3@27597>     If written>0 Then Poke.b &detokenline+written,0
000389AC <AmiBlitz3.ab3@27598>     sourceLineText.s = Peek.s(&detokenline)
000389B2 <AmiBlitz3.ab3@27599>   Else
000389DA <AmiBlitz3.ab3@27600>     sourceLineText = "NULL"
00038A0E <AmiBlitz3.ab3@27602>   error_source$ = sourceLineText
00038A60 <AmiBlitz3.ab3@27603>   error$=error$+sourceLineText
00038A66 <AmiBlitz3.ab3@27604>   GetD0 &error$
00038A84 <AmiBlitz3.ab3@27605>   !asm
00038A86 <AmiBlitz3.ab3@27606>   MOVE.l d0,a0
00038A88 <AmiBlitz3.ab3@27607> RTS
00038A8A <AmiBlitz3.ab3@27611>   MOVE.l a0,-(a7)
00038A8C <AmiBlitz3.ab3@27612>   MOVE.l a0,d0
00038A8E <AmiBlitz3.ab3@27613>   MOVE.l a5,a0                                             ;macro title
00038AB8 <AmiBlitz3.ab3@27614>   !basic
00038ABC <AmiBlitz3.ab3@27615>   i = PutD0
00038ABE <AmiBlitz3.ab3@27616>   MOVEQ #20,d0
00038AC0 <AmiBlitz3.ab3@27619>     MOVE.b -(a0),d1
00038AC4 <AmiBlitz3.ab3@27620>     BEQ 'l1
00038AC8 <AmiBlitz3.ab3@27621>     CMP.b #":",d1
00038ACC <AmiBlitz3.ab3@27622>     BEQ 'l1
00038ACE <AmiBlitz3.ab3@27623>     SUBQ.l #1,d0
00038AD2 <AmiBlitz3.ab3@27624>     BNE 'l2
00038AD4 <AmiBlitz3.ab3@27627>   ADDQ #1,a0
00038AD6 <AmiBlitz3.ab3@27628>   MOVE.l a0,d0
00038ADA <AmiBlitz3.ab3@27629>   i2.l = PutD0
00038AF6 <AmiBlitz3.ab3@27630>   If Peek.w (?ininclude)>0
00038B50 <AmiBlitz3.ab3@27631>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00038B60 <AmiBlitz3.ab3@27632>     errorline.l = Peek.l(?includeline);-1
00038B88 <AmiBlitz3.ab3@27633>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00038BB2 <AmiBlitz3.ab3@27634>     errorfile.s = Peek.s(?includetemp2)
00038BB8 <AmiBlitz3.ab3@27635>   Else
00038BF0 <AmiBlitz3.ab3@27636>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00038C06 <AmiBlitz3.ab3@27637>     errorline.l = Peek.l(?compilelinecounter) + 1
00038C3A <AmiBlitz3.ab3@27638>     errorfile.s = cli_sourcefile
00038C44 <AmiBlitz3.ab3@27641>   If i
00038CE8 <AmiBlitz3.ab3@27642>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00038D66 <AmiBlitz3.ab3@27643>     errortext.s = Replace$(errortext,"\n","\\0a")
00038D6C <AmiBlitz3.ab3@27644>   Else
00038D94 <AmiBlitz3.ab3@27645>     errortext.s = "???"
00038F0C <AmiBlitz3.ab3@27648>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00038FD4 <AmiBlitz3.ab3@27649>   NPrint "  ",error_type$,"\\n  ",error_source$
00038FF2 <AmiBlitz3.ab3@27653>   !asm
00038FF4 <AmiBlitz3.ab3@27654>   MOVE.l (a7)+,a0
00038FF6 <AmiBlitz3.ab3@27655> RTS
00038FF8 <AmiBlitz3.ab3@27659>   MOVE.l a0,-(a7)
00038FFA <AmiBlitz3.ab3@27660>   MOVE.l a0,d0
00038FFC <AmiBlitz3.ab3@27661>   MOVE.l a5,a0                                             ;macro title
00039026 <AmiBlitz3.ab3@27662>   !basic
0003902A <AmiBlitz3.ab3@27663>   i = PutD0
0003902C <AmiBlitz3.ab3@27664>   MOVEQ #20,d0
0003902E <AmiBlitz3.ab3@27667>     MOVE.b -(a0),d1
00039032 <AmiBlitz3.ab3@27668>     BEQ 'l1
00039036 <AmiBlitz3.ab3@27669>     CMP.b #":",d1
0003903A <AmiBlitz3.ab3@27670>     BEQ 'l1
0003903C <AmiBlitz3.ab3@27671>     SUBQ.l #1,d0
00039040 <AmiBlitz3.ab3@27672>     BNE 'l2
00039042 <AmiBlitz3.ab3@27675>   ADDQ #1,a0
00039044 <AmiBlitz3.ab3@27676>   MOVE.l a0,d0
00039048 <AmiBlitz3.ab3@27677>   i2.l = PutD0
000390CC <AmiBlitz3.ab3@27678>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
000390E0 <AmiBlitz3.ab3@27679>   If fid <> -1
000390FC <AmiBlitz3.ab3@27680>     If Peek.w (?ininclude)>0
00039156 <AmiBlitz3.ab3@27681>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
0003915C <AmiBlitz3.ab3@27682>     Else
00039188 <AmiBlitz3.ab3@27683>       Poke$(?includetemp2),""
000391B2 <AmiBlitz3.ab3@27685>     a$ = Peek$(?includetemp2)
00039224 <AmiBlitz3.ab3@27686>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039256 <AmiBlitz3.ab3@27687>     file_WriteLine{fid,x$}
000392A0 <AmiBlitz3.ab3@27688>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
000392CC <AmiBlitz3.ab3@27689>     If a$
000392FE <AmiBlitz3.ab3@27690>       file_WriteLine{fid,a$}
00039348 <AmiBlitz3.ab3@27691>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039370 <AmiBlitz3.ab3@27692>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039376 <AmiBlitz3.ab3@27693>     Else
0003939C <AmiBlitz3.ab3@27694>       file_WriteLine{fid,"none"}
000393CC <AmiBlitz3.ab3@27696>     file_WriteLine{fid,Peek$(i2)}
00039422 <AmiBlitz3.ab3@27697>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0003946C <AmiBlitz3.ab3@27698>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00039476 <AmiBlitz3.ab3@27699>     file_Close{fid}
00039494 <AmiBlitz3.ab3@27701>   !asm
00039496 <AmiBlitz3.ab3@27702>   MOVE.l (a7)+,a0
00039498 <AmiBlitz3.ab3@27703> RTS
000394C2 <AmiBlitz3.ab3@27707>   !basic
000394C6 <AmiBlitz3.ab3@27708>   progress.l     = PutD0
000394D8 <AmiBlitz3.ab3@27709>   total.l        = Peek.w(?progressbar_width)
000394F6 <AmiBlitz3.ab3@27710>   calcpro        = (progress * 100) / total +1
00039508 <AmiBlitz3.ab3@27711>   pass.l         = Peek.w(?pass)
0003951A <AmiBlitz3.ab3@27712>   typ.l          = Peek.w(?compiler_job)
00039538 <AmiBlitz3.ab3@27715> If (pass><pass_old OR typ><typ_old)
00039546 <AmiBlitz3.ab3@27717>     If pass_old><pass
000395E2 <AmiBlitz3.ab3@27718>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039638 <AmiBlitz3.ab3@27719>       If cli_verbose>=2 Then NPrint passtatusstr
0003963E <AmiBlitz3.ab3@27722>     pass_old = pass
00039644 <AmiBlitz3.ab3@27723>     typ_old  = typ
0003964A <AmiBlitz3.ab3@27724>     update_comstatus_gui = True
0003965C <AmiBlitz3.ab3@27725>     If typ=0
0003973C <AmiBlitz3.ab3@27726>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00039744 <AmiBlitz3.ab3@27727>       calcpro = 0  ; set gauge to 0
00039756 <AmiBlitz3.ab3@27729>     If typ=1
00039836 <AmiBlitz3.ab3@27730>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003983E <AmiBlitz3.ab3@27731>       calcpro = 0  ; set gauge to 0
00039894 <AmiBlitz3.ab3@27734>     If cli_verbose>=3 Then NPrint comstatusstr
000398A2 <AmiBlitz3.ab3@27737>   If (calcpro >< calcpro_old)
000398F6 <AmiBlitz3.ab3@27738>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
000398FC <AmiBlitz3.ab3@27739>     calcpro_old = calcpro
00039902 <AmiBlitz3.ab3@27740>     update_comstatus_gui = True
0003991C <AmiBlitz3.ab3@27743>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003993A <AmiBlitz3.ab3@27744>     !asm
0003996C <AmiBlitz3.ab3@27745> 
00039996 <AmiBlitz3.ab3@27746>     !basic
0003999C <AmiBlitz3.ab3@27747>     update_comstatus_gui  = False ; because we update the gui
000399BA <AmiBlitz3.ab3@27749>   !asm
000399BC <AmiBlitz3.ab3@27750> RTS
000399C2 <AmiBlitz3.ab3@27755>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
000399C8 <AmiBlitz3.ab3@27756>   LEA maxobjects_value,A3                                  ;current value
000399CE <AmiBlitz3.ab3@27757>   MOVEA.l libpointer,A2
000399D2 <AmiBlitz3.ab3@27760>   CMPA.w #$0,A2
000399D6 <AmiBlitz3.ab3@27761>   BEQ.w menu4c__igotb
000399D8 <AmiBlitz3.ab3@27762>   MOVEA.l A2,A1
000399DC <AmiBlitz3.ab3@27763>   ADDA.l $12(A1),A1
000399E0 <AmiBlitz3.ab3@27764>   TST.w -$2(A1)
000399E4 <AmiBlitz3.ab3@27765>   BEQ.w JL_0_FFF6b
000399E6 <AmiBlitz3.ab3@27766>   SUBQ.w #1,D5
000399EA <AmiBlitz3.ab3@27767>   BMI.w JL_0_FFFCb
000399EC <AmiBlitz3.ab3@27770>   MOVEA.l (A2),A2
000399F0 <AmiBlitz3.ab3@27771> BRA.w JL_0_FFDAb
000399F4 <AmiBlitz3.ab3@27774>   MOVE.w (A3),-$4(A1)
000399F6 <AmiBlitz3.ab3@27777> RTS
000399FC <AmiBlitz3.ab3@27781>   MOVE.w debugnest,d0
00039A02 <AmiBlitz3.ab3@27782>   LEA storedebugmode, a0
00039A0A <AmiBlitz3.ab3@27783>   MOVE.b 0(a0,d0.w),debugmode
00039A10 <AmiBlitz3.ab3@27784>   TST.w debugnest
00039A14 <AmiBlitz3.ab3@27785>   BEQ JUMP_unpairrunerrs
00039A1A <AmiBlitz3.ab3@27786>   SUBQ.w #1,debugnest
00039A1C <AmiBlitz3.ab3@27787> RTS
00039A22 <AmiBlitz3.ab3@27790> JMP runerrsoverflow
00039A28 <AmiBlitz3.ab3@27793> JMP unpairrunerrs
00039A30 <AmiBlitz3.ab3@27797>   BCHG #$7,use_debugger
00039A38 <AmiBlitz3.ab3@27799>   BTST #$7,use_debugger
00039A3C <AmiBlitz3.ab3@27800>   BNE 'debugon
00039A42 <AmiBlitz3.ab3@27801>   CLR.w debugmode
00039A46 <AmiBlitz3.ab3@27802> BRA.b 'debugoff
00039A4C <AmiBlitz3.ab3@27805>   SNE debugmode
00039A4E <AmiBlitz3.ab3@27808>   MOVE.l a0,-(a7)
00039A86 <AmiBlitz3.ab3@27811>   !ComData_SetB{comByte_DebugMode,debugmode}
00039A88 <AmiBlitz3.ab3@27816>   MOVE.l (a7)+,a0
00039A8A <AmiBlitz3.ab3@27817> RTS
00039A92 <AmiBlitz3.ab3@27822>   BTST #$7,use_debugger
00039A96 <AmiBlitz3.ab3@27823>   BNE 'debugon
00039A9C <AmiBlitz3.ab3@27824>   CLR.w debugmode
00039AA0 <AmiBlitz3.ab3@27825> BRA.b 'debugoff
00039AA6 <AmiBlitz3.ab3@27828>   SNE debugmode
00039AA8 <AmiBlitz3.ab3@27831> RTS
00039AAE <AmiBlitz3.ab3@27835>   ADDQ.w #1,debugnest
00039AB4 <AmiBlitz3.ab3@27836>   MOVE.w debugnest,d0
00039AB8 <AmiBlitz3.ab3@27837>   CMP.w #18,d0
00039ABC <AmiBlitz3.ab3@27838>    BGE JUMP_runerrsoverflow
00039AC2 <AmiBlitz3.ab3@27839>   LEA storedebugmode, a0
00039ACA <AmiBlitz3.ab3@27840>   MOVE.b debugmode,0( a0,d0.w)
00039AD0 <AmiBlitz3.ab3@27843>   SF debugmode
00039AD2 <AmiBlitz3.ab3@27844> RTS
00039B52 <AmiBlitz3.ab3@27847> usedpath:  Ds.l 32
00039B56 <AmiBlitz3.ab3@27851>   BEQ.w JUMP_syntaxerr
00039B5C <AmiBlitz3.ab3@27852>   LEA lastpath,A0
00039B60 <AmiBlitz3.ab3@27853>   MOVEM.l a0-a1/d0,-(a7)
00039B66 <AmiBlitz3.ab3@27854>   LEA lastpath2,a1
00039B68 <AmiBlitz3.ab3@27857>     MOVE.b (a0)+,(a1)+
00039B6C <AmiBlitz3.ab3@27858>   BNE 'l2
00039B70 <AmiBlitz3.ab3@27859>   MOVEM.l (a7)+,a0-a1/d0
00039B74 <AmiBlitz3.ab3@27860>   LEA usedpath(PC),A0
00039B78 <AmiBlitz3.ab3@27861>   MOVEM.l a0-a1/d0,-(a7)
00039B7E <AmiBlitz3.ab3@27862>   LEA lastpath,a1
00039B80 <AmiBlitz3.ab3@27865>     MOVE.b (a0)+,(a1)+
00039B84 <AmiBlitz3.ab3@27866>   BNE 'l1
00039B88 <AmiBlitz3.ab3@27867>   MOVEM.l (a7)+,a0-a1/d0
00039B8A <AmiBlitz3.ab3@27870>   TST.w D0
00039B8E <AmiBlitz3.ab3@27871>    BMI.w JUMP_syntaxerr
00039B90 <AmiBlitz3.ab3@27872>   MOVE.b D0,(A0)+
00039B94 <AmiBlitz3.ab3@27873>   BSR.w JUMP_get1bytemain
00039B98 <AmiBlitz3.ab3@27874>    BNE.w JL_0_4AA8
00039B9C <AmiBlitz3.ab3@27875>   MOVE.b #$2,(A0)
00039B9E <AmiBlitz3.ab3@27876> RTS
00039BA2 <AmiBlitz3.ab3@27880>   BEQ.w JUMP_syntaxerr
00039BA8 <AmiBlitz3.ab3@27881>   LEA path2,A0
00039BAA <AmiBlitz3.ab3@27891>   TST.w D0
00039BAE <AmiBlitz3.ab3@27892>    BMI.w JUMP_syntaxerr
00039BB0 <AmiBlitz3.ab3@27893>   MOVE.b D0,(A0)+
00039BB4 <AmiBlitz3.ab3@27894>   BSR.w JUMP_get1bytemain
00039BB8 <AmiBlitz3.ab3@27895>    BNE.w JL_0_4AA8b
00039BBC <AmiBlitz3.ab3@27896>   MOVE.b #$2,(A0)
00039BBE <AmiBlitz3.ab3@27897> RTS
00039BC4 <AmiBlitz3.ab3@27906> JMP errormsg_reg
00039BCE <AmiBlitz3.ab3@27910>   MOVE.l #$f22d6780,fpucodeglobal
00039BD8 <AmiBlitz3.ab3@27911>   MOVE.l #$f22c6780,fpucodelocal
00039BDE <AmiBlitz3.ab3@27912>   LEA regtable,a0
00039BE8 <AmiBlitz3.ab3@27913>   MOVE.l #7,maxregs
00039BEA <AmiBlitz3.ab3@27916>   MOVE.l (a0),d0
00039BEE <AmiBlitz3.ab3@27917>   BEQ 'e1
00039BF0 <AmiBlitz3.ab3@27918>   CLR.l (a0)
00039BF4 <AmiBlitz3.ab3@27919>   MOVE.w 4(a0),d0
00039BFE <AmiBlitz3.ab3@27920>   MOVE.l fpucodeglobal,fpucode
00039C02 <AmiBlitz3.ab3@27921>   TST.w 6(a0)
00039C06 <AmiBlitz3.ab3@27922>   BEQ 'glob
00039C10 <AmiBlitz3.ab3@27923>   MOVE.l fpucodelocal,fpucode
00039C16 <AmiBlitz3.ab3@27926>   MOVE.l fpucode,d1
00039C1C <AmiBlitz3.ab3@27927>   JSR writelong
00039C26 <AmiBlitz3.ab3@27928>   SUB.l #$80,fpucodelocal
00039C30 <AmiBlitz3.ab3@27929>   SUB.l #$80,fpucodeglobal
00039C32 <AmiBlitz3.ab3@27930>   MOVE.w d0,d1
00039C38 <AmiBlitz3.ab3@27931>   JSR writeword
00039C3A <AmiBlitz3.ab3@27932>   ADDQ #8,a0
00039C3E <AmiBlitz3.ab3@27933> BRA 'again
00039C40 <AmiBlitz3.ab3@27936> RTS
00039C46 <AmiBlitz3.ab3@27943> JMP notypeerr
00039C4C <AmiBlitz3.ab3@27946> JMP illtypeerr
00039C56 <AmiBlitz3.ab3@27949>   MOVE.l #$f22d4780,fpucodeglobal
00039C60 <AmiBlitz3.ab3@27950>   MOVE.l #$f22c4780,fpucodelocal
00039C66 <AmiBlitz3.ab3@27951>   LEA regtable,a0
00039C68 <AmiBlitz3.ab3@27952>   TST.l (a0)
00039C6C <AmiBlitz3.ab3@27953>    BNE JUMP_errormsg_reg
00039C6E <AmiBlitz3.ab3@27954>   MOVE.l d7,-(a7)
00039C70 <AmiBlitz3.ab3@27955>   SUBQ.l #1,a5
00039C76 <AmiBlitz3.ab3@27958>   JSR getparameter2
00039C7A <AmiBlitz3.ab3@27959>   BEQ.w 'nopar
00039C80 <AmiBlitz3.ab3@27960>   MOVE.w d0,lastchar
00039C86 <AmiBlitz3.ab3@27961>   JSR findvariable
00039C8A <AmiBlitz3.ab3@27962>   BNE 'islocal
00039C94 <AmiBlitz3.ab3@27963>   MOVE.l fpucodeglobal,fpucode
00039C9E <AmiBlitz3.ab3@27964>   MOVE.l #3,maxregs
00039CA0 <AmiBlitz3.ab3@27965>   MOVEQ #0,d7
00039CA8 <AmiBlitz3.ab3@27968>   CMP.l #newtype_float,$a(a2)                              ;is float type
00039CAC <AmiBlitz3.ab3@27969>    BEQ 'doit
00039CB4 <AmiBlitz3.ab3@27970>   CMP.l #newtype_double,$a(a2)
00039CB8 <AmiBlitz3.ab3@27971>    BNE JUMP_illtypeerr
00039CBE <AmiBlitz3.ab3@27974>   LEA regtable,a0
00039CC0 <AmiBlitz3.ab3@27975>   MOVEQ #0,d0
00039CC2 <AmiBlitz3.ab3@27978>   TST.l (a0)
00039CC6 <AmiBlitz3.ab3@27979>    BEQ 'store
00039CC8 <AmiBlitz3.ab3@27980>   ADDQ.l #4,d0
00039CCA <AmiBlitz3.ab3@27981>   ADDQ.l #8,a0
00039CD0 <AmiBlitz3.ab3@27982>   CMP.l #16,d0
00039CD4 <AmiBlitz3.ab3@27983>    BCS 'loop
00039CDE <AmiBlitz3.ab3@27984>   MOVE.l #2,maxregs
00039CE4 <AmiBlitz3.ab3@27985>   CMP.l #20,d0
00039CE8 <AmiBlitz3.ab3@27986>    BCS 'loop
00039CF2 <AmiBlitz3.ab3@27987>   MOVE.l #1,maxregs
00039CF8 <AmiBlitz3.ab3@27988>   CMP.l #24,d0
00039CFC <AmiBlitz3.ab3@27989>    BCS 'loop
00039D02 <AmiBlitz3.ab3@27990> JMP toovarerr
00039D08 <AmiBlitz3.ab3@27993>   TST.b fpu
00039D0C <AmiBlitz3.ab3@27994>    BEQ 'nofpu
00039D0E <AmiBlitz3.ab3@27995>   MOVE.l a2,(a0)
00039D14 <AmiBlitz3.ab3@27996>   MOVE.w 4(a2),4(a0)
00039D18 <AmiBlitz3.ab3@27997>   MOVE.w d7,6(a0)
00039D1E <AmiBlitz3.ab3@27998>   MOVE.l fpucode,d1
00039D28 <AmiBlitz3.ab3@27999>   SUB.l #$80,fpucodeglobal
00039D32 <AmiBlitz3.ab3@28000>   SUB.l #$80,fpucodelocal
00039D38 <AmiBlitz3.ab3@28001>   JSR writelong
00039D3C <AmiBlitz3.ab3@28002>   MOVE.w 4(a2),d1
00039D42 <AmiBlitz3.ab3@28003>   JSR writeword
00039D48 <AmiBlitz3.ab3@28006>   MOVE.w lastchar,d0
00039D4C <AmiBlitz3.ab3@28007>   CMP.w #":",d0
00039D50 <AmiBlitz3.ab3@28008>    BEQ 'nopar
00039D52 <AmiBlitz3.ab3@28009>   TST.w d0
00039D56 <AmiBlitz3.ab3@28010>    BEQ 'nopar
00039D5A <AmiBlitz3.ab3@28011>   CMP.w #",",d0
00039D5E <AmiBlitz3.ab3@28012>   BNE JUMP_syntaxerr
00039D62 <AmiBlitz3.ab3@28013> BRA 'l2
00039D64 <AmiBlitz3.ab3@28016>    MOVE.l (a7)+,d7
00039D66 <AmiBlitz3.ab3@28017> RTS
00039D68 <AmiBlitz3.ab3@28020>   MOVEQ #1,d7
00039D70 <AmiBlitz3.ab3@28021>   MOVE.b #1,newvariable
00039D76 <AmiBlitz3.ab3@28022>   LEA firstlocal,a2
00039D7C <AmiBlitz3.ab3@28023>   JSR findvariable
00039D82 <AmiBlitz3.ab3@28024>   CLR.b newvariable
00039D88 <AmiBlitz3.ab3@28025>   CMP.l #-1,d0
00039D8C <AmiBlitz3.ab3@28026>   BEQ.w JUMP_notypeerr2
00039D96 <AmiBlitz3.ab3@28027>   MOVE.l fpucodelocal,fpucode
00039D9A <AmiBlitz3.ab3@28028> BRA 'go
00039D9E <AmiBlitz3.ab3@28031>   CMP.b #".",d0
00039DA2 <AmiBlitz3.ab3@28032>    BNE 'l1
00039DA6 <AmiBlitz3.ab3@28033>   BSR JUMP_get1bytemain
00039DAA <AmiBlitz3.ab3@28034>   BSR JUMP_get1bytemain
00039DAE <AmiBlitz3.ab3@28037>   ORI .b #$20,d0
00039DB2 <AmiBlitz3.ab3@28038>   CMP.b #"d",d0
00039DB6 <AmiBlitz3.ab3@28039>    BNE JUMP_illeaerr
00039DBA <AmiBlitz3.ab3@28040>   BSR JUMP_get1bytemain
00039DBE <AmiBlitz3.ab3@28041>   SUB.b #$30,d0
00039DC2 <AmiBlitz3.ab3@28042>   CMP.b #$7,d0
00039DC6 <AmiBlitz3.ab3@28043>    BGT JUMP_syntaxerr
00039DCA <AmiBlitz3.ab3@28044>   MOVE.w #$49c0,d1
00039DCC <AmiBlitz3.ab3@28045>   ADD.b d0,d1
00039DD2 <AmiBlitz3.ab3@28046>   JSR writeword
00039DD6 <AmiBlitz3.ab3@28047>   BSR JUMP_get1bytemain
00039DD8 <AmiBlitz3.ab3@28048> RTS
00039DDE <AmiBlitz3.ab3@28052>   LEA lastpath,a0
00039DE2 <AmiBlitz3.ab3@28053>   LEA usedpath(PC),A1
00039DE4 <AmiBlitz3.ab3@28056>     MOVE.b (a0)+,(a1)+
00039DE8 <AmiBlitz3.ab3@28057>   BNE 'l1
00039DEE <AmiBlitz3.ab3@28059>   LEA lastpath2,a0
00039DF4 <AmiBlitz3.ab3@28060>   LEA lastpath,A1
00039DF6 <AmiBlitz3.ab3@28063>     MOVE.b (a0)+,(a1)+
00039DFA <AmiBlitz3.ab3@28064>   BNE 'l2
00039DFC <AmiBlitz3.ab3@28065> RTS
00039E02 <AmiBlitz3.ab3@28069>   TST.b objectcount
00039E06 <AmiBlitz3.ab3@28070>   BEQ 'l2a
00039E0C <AmiBlitz3.ab3@28071> JMP macnesterr
00039E12 <AmiBlitz3.ab3@28074>   LEA devo,a0
00039E18 <AmiBlitz3.ab3@28075>   ADDQ.b #1,objectcount
00039E1C <AmiBlitz3.ab3@28076>   MOVEM.l a1/d2,-(a7)
00039E22 <AmiBlitz3.ab3@28077>   LEA ptr_parameterstore,a1
00039E24 <AmiBlitz3.ab3@28080>     MOVE.b (a0)+,(a1)+
00039E28 <AmiBlitz3.ab3@28081>   BNE 'l1
00039E2A <AmiBlitz3.ab3@28083>   MOVEQ #13,d2
00039E30 <AmiBlitz3.ab3@28084>   JSR findlabel2
00039E34 <AmiBlitz3.ab3@28085>   BNE 'd
00039E38 <AmiBlitz3.ab3@28086>   TST.l 8(a2)
00039E3C <AmiBlitz3.ab3@28087>   BEQ 'd
00039E42 <AmiBlitz3.ab3@28088>   SUBQ.b #1,objectcount
00039E46 <AmiBlitz3.ab3@28089>   MOVEM.l (a7)+,a1/d2
00039E4C <AmiBlitz3.ab3@28090>   JSR skiprest
00039E54 <AmiBlitz3.ab3@28091>   MOVE.b #1,developobject
00039E56 <AmiBlitz3.ab3@28092> RTS
00039E5A <AmiBlitz3.ab3@28095>   MOVEM.l (a7)+,a1/d2
00039E62 <AmiBlitz3.ab3@28096>   MOVE.b #1,resdisable
00039E68 <AmiBlitz3.ab3@28099>   CLR.b developobject
00039E6E <AmiBlitz3.ab3@28100> JMP do_Macro
00039E74 <AmiBlitz3.ab3@28104> JMP illeaerr
00039E7A <AmiBlitz3.ab3@28108>   CLR.b typecheck
00039E80 <AmiBlitz3.ab3@28109>   CLR.b declare
00039E86 <AmiBlitz3.ab3@28110>   CLR.b declare2
00039E8A <AmiBlitz3.ab3@28111>   SUB.b #$30,d0
00039E8E <AmiBlitz3.ab3@28112>   BTST #0,d0
00039E92 <AmiBlitz3.ab3@28113>   BEQ 'l1
00039E9A <AmiBlitz3.ab3@28114>   MOVE.b #1,declare
00039E9E <AmiBlitz3.ab3@28117>   BTST #1,d0
00039EA2 <AmiBlitz3.ab3@28118>   BEQ 'l2
00039EAA <AmiBlitz3.ab3@28119>   MOVE.b #1,declare2
00039EAE <AmiBlitz3.ab3@28122>   BTST #2,d0
00039EB2 <AmiBlitz3.ab3@28123>   BEQ 'l3
00039EBA <AmiBlitz3.ab3@28124>   MOVE.b #1,typecheck
00039EBE <AmiBlitz3.ab3@28126>   BSR.w JUMP_get1bytemain
00039EC0 <AmiBlitz3.ab3@28127> RTS
00039EC6 <AmiBlitz3.ab3@28130> JMP get1bytemain
00039EF0 <AmiBlitz3.ab3@28134>   !basic
00039F10 <AmiBlitz3.ab3@28136>   FillMem ?residents_table,?residents_table_end-?residents_table,0
00039F2E <AmiBlitz3.ab3@28137>   !asm
00039F30 <AmiBlitz3.ab3@28138> Return
00039F32 <AmiBlitz3.ab3@28143>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00039F34 <AmiBlitz3.ab3@28144>   ADDQ #1,a5
00039F36 <AmiBlitz3.ab3@28145>   MOVE.l a5,-(a7)
00039F60 <AmiBlitz3.ab3@28146>   !basic
00039F66 <AmiBlitz3.ab3@28147>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
00039F70 <AmiBlitz3.ab3@28148>   If _myD0
00039FB0 <AmiBlitz3.ab3@28149>     newconst$ = UCase$(Peek.s(_myD0))
00039FB6 <AmiBlitz3.ab3@28150>   Else
00039FF0 <AmiBlitz3.ab3@28151>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A018 <AmiBlitz3.ab3@28152>     nwconst$="xxx"
0003A040 <AmiBlitz3.ab3@28154>   condata$ =""
0003A050 <AmiBlitz3.ab3@28155>   Poke.b ?skip_bytes,0
0003A0AC <AmiBlitz3.ab3@28156>   If Left$(newconst$,2) = "__"
0003A106 <AmiBlitz3.ab3@28157>     Select Mid$(newconst$,3,4)
0003A12A <AmiBlitz3.ab3@28159>      Case "DATE"
0003A184 <AmiBlitz3.ab3@28160>       Select Mid$(newconst$,3,6)
0003A1C2 <AmiBlitz3.ab3@28161>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A206 <AmiBlitz3.ab3@28162>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003A214 <AmiBlitz3.ab3@28163>       End Select
0003A222 <AmiBlitz3.ab3@28164>       i.l=SystemDate
0003A248 <AmiBlitz3.ab3@28165>       condata$ = Date$ (i)
0003A2C6 <AmiBlitz3.ab3@28166>       condata$ = Replace$(condata$,"/",".")
0003A2F0 <AmiBlitz3.ab3@28168>      Case "VER_"
0003A300 <AmiBlitz3.ab3@28171>       actual_version.l = Peek.l(?versioninformation)
0003A310 <AmiBlitz3.ab3@28172>       actual_build.l   = Peek.l(?number_of_builds)
0003A334 <AmiBlitz3.ab3@28174>       Format ""
0003A38E <AmiBlitz3.ab3@28175>       Select Mid$(newconst$,3,9)
0003A3B2 <AmiBlitz3.ab3@28177>        Case "VER_MAJOR"
0003A3EE <AmiBlitz3.ab3@28178>         condata$ = Str$(actual_version LSR 24)
0003A418 <AmiBlitz3.ab3@28180>        Case "VER_MINOR"
0003A45C <AmiBlitz3.ab3@28181>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003A486 <AmiBlitz3.ab3@28183>        Case "VER_PATCH"
0003A4CA <AmiBlitz3.ab3@28184>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003A4F4 <AmiBlitz3.ab3@28186>        Case "VER_BUILD"
0003A518 <AmiBlitz3.ab3@28187>         Format ""
0003A54C <AmiBlitz3.ab3@28188>         condata$ = Str$(actual_build)
0003A552 <AmiBlitz3.ab3@28190>        Default
0003A57A <AmiBlitz3.ab3@28191>         condata$ = "{unknown compiler constant}"
0003A588 <AmiBlitz3.ab3@28193>       End Select
0003A5AC <AmiBlitz3.ab3@28194>       Format ""
0003A5BC <AmiBlitz3.ab3@28195>       Poke.b ?skip_bytes,11
0003A5E6 <AmiBlitz3.ab3@28197>      Case "THIS"
0003A640 <AmiBlitz3.ab3@28198>       Select Mid$(newconst$,3,9)
0003A664 <AmiBlitz3.ab3@28200>        Case "THIS_FUNC"
0003A674 <AmiBlitz3.ab3@28201>         Poke.b ?skip_bytes,15
0003A694 <AmiBlitz3.ab3@28202>         If Peek.l(?currentfunction)<>0
0003A6E0 <AmiBlitz3.ab3@28203>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003A6E6 <AmiBlitz3.ab3@28204>         Else
0003A70E <AmiBlitz3.ab3@28205>           condata$ = "GLOBAL"
0003A738 <AmiBlitz3.ab3@28208>        Case "THIS_INCL"
0003A748 <AmiBlitz3.ab3@28209>         Poke.b ?skip_bytes,14
0003A768 <AmiBlitz3.ab3@28210>         If Peek.l(?includetemp2)<>0
0003A7B6 <AmiBlitz3.ab3@28211>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003A7E0 <AmiBlitz3.ab3@28214>        Case "THIS_POIN"
0003A7F0 <AmiBlitz3.ab3@28215>         Poke.b ?skip_bytes,14
0003A810 <AmiBlitz3.ab3@28216>         If Peek.l(?currentfunction)<>0
0003A83E <AmiBlitz3.ab3@28217>           condata$ = Hex$(Peek.l(?currentfunction))
0003A84C <AmiBlitz3.ab3@28220>       End Select
0003A876 <AmiBlitz3.ab3@28222>      Case "CODE"
0003A886 <AmiBlitz3.ab3@28223>       Poke.b ?skip_bytes,10
0003A8E8 <AmiBlitz3.ab3@28224>       If Mid$(newconst$,3,8) = "CODELINE"
0003A924 <AmiBlitz3.ab3@28225>         condata$ = Str$(Peek.l(?globallinecount))
0003A932 <AmiBlitz3.ab3@28228>     End Select
0003A938 <AmiBlitz3.ab3@28230>   Else
0003A98C <AmiBlitz3.ab3@28231>     Select Left$(newconst$,1)
0003A9B0 <AmiBlitz3.ab3@28233>      Case "R"
0003A9C0 <AmiBlitz3.ab3@28234>       Poke.b ?skip_bytes,3
0003AA38 <AmiBlitz3.ab3@28235>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003AAB8 <AmiBlitz3.ab3@28236>         condata$ = condata$ + Mid$(newconst$,4,1)
0003AAC8 <AmiBlitz3.ab3@28237>       Next
0003AAF2 <AmiBlitz3.ab3@28239>      Case "N"
0003AB02 <AmiBlitz3.ab3@28240>       Poke.b ?skip_bytes,1
0003AB26 <AmiBlitz3.ab3@28241>       condata$ = Chr$(10)
0003AB2C <AmiBlitz3.ab3@28243>      Default
0003AB3E <AmiBlitz3.ab3@28244>       char1.b = Peek.b(&newconst$)
0003AB56 <AmiBlitz3.ab3@28245>       char2.b = Peek.b(&newconst$+1)
0003AB62 <AmiBlitz3.ab3@28246>       nibble1.l = -1
0003AB6E <AmiBlitz3.ab3@28247>       nibble2.l = -1
0003ABAC <AmiBlitz3.ab3@28249>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003ABEA <AmiBlitz3.ab3@28250>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003AC2E <AmiBlitz3.ab3@28252>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003AC72 <AmiBlitz3.ab3@28253>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003ACB6 <AmiBlitz3.ab3@28255>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003ACFA <AmiBlitz3.ab3@28256>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003AD20 <AmiBlitz3.ab3@28258>       If nibble1>=0 AND nibble2>=0
0003AD36 <AmiBlitz3.ab3@28259>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003AD5A <AmiBlitz3.ab3@28260>         condata$ = Chr$(newchar)
0003AD6A <AmiBlitz3.ab3@28261>         Poke.b ?skip_bytes,2
0003AD78 <AmiBlitz3.ab3@28264>     End Select
0003ADD8 <AmiBlitz3.ab3@28266>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003AEFE <AmiBlitz3.ab3@28267>     !cout{"detected unknown const: " + newconst$}
0003AF32 <AmiBlitz3.ab3@28268>     condata$ = newconst$
0003AF48 <AmiBlitz3.ab3@28271>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003AF4A <AmiBlitz3.ab3@28272>   MOVE.l d0,d2
0003AF4C <AmiBlitz3.ab3@28273>   MOVE.l d2,-(a7)
0003AF52 <AmiBlitz3.ab3@28275>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003AF54 <AmiBlitz3.ab3@28276>   MOVE.l d0,a0
0003AF56 <AmiBlitz3.ab3@28279>     MOVE.b (a0)+,d1
0003AF5C <AmiBlitz3.ab3@28280>     JSR pokedata1b
0003AF60 <AmiBlitz3.ab3@28281>  DBF d2,'l1
0003AF7E <AmiBlitz3.ab3@28283>   !asm
0003AF80 <AmiBlitz3.ab3@28284>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003AF82 <AmiBlitz3.ab3@28285>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003AF84 <AmiBlitz3.ab3@28286>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003AF8A <AmiBlitz3.ab3@28287>   ADD.l #1,d2
0003AF90 <AmiBlitz3.ab3@28289>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003AF96 <AmiBlitz3.ab3@28290>   MOVE.b skip_bytes,D0
0003AF98 <AmiBlitz3.ab3@28291>   ADD.l D0,a5
0003AF9A <AmiBlitz3.ab3@28292> RTS
0003AF9E <AmiBlitz3.ab3@28367> MOVEM.l a3/d1,-(a7)
0003AFA4 <AmiBlitz3.ab3@28369> CLR.b a4a5store
0003AFA6 <AmiBlitz3.ab3@28370> 'continue: MOVE.b (a3)+,d1
0003AFAA <AmiBlitz3.ab3@28371> CMP.b #$15,d1
0003AFAE <AmiBlitz3.ab3@28372> BEQ 'find
0003AFB2 <AmiBlitz3.ab3@28373> CMP.b #$14,d1
0003AFB6 <AmiBlitz3.ab3@28374> BEQ 'find
0003AFBA <AmiBlitz3.ab3@28375> CMP.b #$ff,d1
0003AFBE <AmiBlitz3.ab3@28376> BNE 'continue
0003AFC2 <AmiBlitz3.ab3@28377> BRA 'notfind
0003AFC8 <AmiBlitz3.ab3@28379> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003AFCE <AmiBlitz3.ab3@28380> JSR writelong
0003AFD6 <AmiBlitz3.ab3@28381> MOVE.b #1,a4a5store
0003AFDA <AmiBlitz3.ab3@28382> 'notfind: MOVEM.l (a7)+,a3/d1
0003AFDC <AmiBlitz3.ab3@28383> RTS
0003AFE2 <AmiBlitz3.ab3@28386> TST.b a4a5store
0003AFE6 <AmiBlitz3.ab3@28387> BEQ 'no
0003AFEC <AmiBlitz3.ab3@28388> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003AFF2 <AmiBlitz3.ab3@28389> JSR writelong
0003AFF8 <AmiBlitz3.ab3@28390> CLR.b a4a5store
0003AFFA <AmiBlitz3.ab3@28391> 'no RTS
0003AFFA <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003AFFE <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B000 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B008 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B014 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B018 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B01A <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B01E <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B067 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B068 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B06C <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B06E <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B072 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B08E <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B092 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B094 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B098 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B0F5 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B0F6 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B0FA <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B0FC <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B101 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B111 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B112 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B116 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B118 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B11E <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B12E <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B132 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B134 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B13B <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B13C <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B140 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B142 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B14C <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B17F <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B180 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B184 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B186 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B18F <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003B1CA <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003B1CE <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003B1D0 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003B1DA <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003B1DB <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003B1DC <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003B1E0 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003B1E2 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003B1E5 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003B1FC <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003B200 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003B202 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003B208 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003B215 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003B216 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003B21A <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003B21C <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003B222 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003B22E <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003B232 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003B234 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003B23B <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003B248 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003B24C <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003B24E <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003B253 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003B260 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003B264 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003B266 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003B26E <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003B26F <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003B270 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003B274 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003B276 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003B27E <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003B27F <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003B280 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003B284 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003B286 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003B28F <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003B29A <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003B29E <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003B2A0 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003B2A8 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003B2B3 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003B2B4 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003B2B8 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003B2BA <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003B2C1 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003B323 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003B324 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003B328 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003B32A <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003B331 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003B340 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003B344 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003B346 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003B34A <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003B380 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003B384 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003B386 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003B38B <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003B39A <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003B39E <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003B3A0 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003B3A3 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003B3C4 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003B3C8 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003B3CA <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003B3CF <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003B3DB <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003B3DC <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003B3E0 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003B3E2 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003B3E7 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003B3FE <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003B402 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003B404 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003B409 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003B418 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003B41C <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003B41E <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003B423 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003B442 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003B446 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003B448 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003B44D <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003B46C <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003B470 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003B472 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003B478 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003B479 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003B47A <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003B47E <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003B480 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003B485 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003B486 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003B48A <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003B48C <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003B491 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003B49E <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003B4A2 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003B4A4 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003B4A9 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003B4B8 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003B4BC <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003B4BE <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003B4C3 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003B4D2 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003B4D6 <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003B4D8 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003B4DE <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003B4FB <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003B4FC <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003B500 <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003B502 <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003B508 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003B525 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003B526 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003B52A <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003B52C <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003B52F <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003B546 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003B54A <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003B54C <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003B54F <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003B55E <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003B562 <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003B564 <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003B569 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003B56A <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003B56E <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003B570 <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003B574 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003B589 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003B58A <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003B58E <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003B590 <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003B597 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003B5B0 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003B5B4 <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003B5B6 <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003B5BD <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003B5C8 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003B5CC <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003B5CE <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003B5D3 <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003B5EA <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003B5EE <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003B5F0 <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003B5F4 <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003B60B <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003B60C <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003B610 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003B612 <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003B617 <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003B618 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003B61C <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003B61E <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003B623 <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003B627 <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003B628 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003B62C <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003B62E <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003B635 <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003B64D <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003B64E <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003B652 <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003B654 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003B65B <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003B660 <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003B664 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003B666 <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003B66D <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003B672 <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003B676 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003B678 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003B67F <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003B69A <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003B69E <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003B6A0 <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003B6A8 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003B6C1 <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003B6C2 <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003B6C6 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003B6C8 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003B6CE <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003B6CF <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003B6D0 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003B6D4 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003B6D6 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003B6DC <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003B6DD <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003B6DE <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003B6E2 <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003B6E4 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003B6EB <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003B6EC <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003B6F0 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003B6F2 <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003B6F8 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003B701 <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003B702 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003B706 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003B708 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003B710 <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003B71D <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003B71E <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003B722 <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003B724 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003B72C <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003B739 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003B73A <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003B73E <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003B740 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003B748 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003B755 <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003B756 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003B75A <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003B75C <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003B761 <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003B762 <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003B766 <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003B768 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003B76D <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003B76E <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003B770 <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003B774 <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003B776 <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003B778 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003B77C <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003B77E <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003B782 <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003B784 <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003B788 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003B789 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003B78A <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003B78C <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003B790 <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003B792 <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003B794 <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003B798 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003B79A <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003B79E <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003B7A0 <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003B7A5 <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003B7A6 <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003B7A8 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003B7AC <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003B7AE <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003B7B0 <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003B7B4 <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003B7B6 <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003B7BA <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003B7BC <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003B7C1 <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003B7C2 <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003B7C4 <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003B7C8 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003B7CA <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003B7CC <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003B7D0 <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003B7D2 <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003B7D6 <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003B7D8 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003B7DD <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003B7DE <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003B7E0 <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003B7E4 <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003B7E6 <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003B7E8 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003B7EC <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003B7EE <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003B7F2 <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003B7F4 <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003B7F9 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003B7FA <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003B7FC <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003B800 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003B802 <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003B804 <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003B808 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003B80A <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003B80E <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003B810 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003B814 <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003B815 <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003B816 <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003B818 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003B81C <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003B81E <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003B820 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003B824 <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003B826 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003B82A <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003B82C <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003B831 <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003B832 <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003B834 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003B838 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003B83A <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003B83C <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003B840 <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003B842 <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003B846 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003B848 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003B84C <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003B84D <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003B84E <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003B850 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003B854 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003B856 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003B858 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003B85C <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003B85E <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003B862 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003B864 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003B868 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003B869 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003B86A <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003B86C <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003B870 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003B872 <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003B874 <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003B878 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003B87A <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003B87E <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003B880 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003B884 <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003B885 <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003B886 <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003B888 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003B88C <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003B88E <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003B890 <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003B894 <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003B896 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003B89A <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003B89C <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003B8A0 <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003B8A1 <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003B8A2 <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003B8A4 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003B8A8 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003B8AA <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003B8AC <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003B8B0 <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003B8B2 <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003B8B6 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003B8B8 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003B8BC <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003B8BD <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003B8BE <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003B8C0 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003B8C4 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003B8C6 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003B8C8 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003B8CC <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003B8CE <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003B8D2 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003B8D4 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003B8D8 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003B8D9 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003B8DA <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003B8DC <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003B8E0 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003B8E2 <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003B8E4 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003B8E8 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003B8EA <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003B8EE <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003B8F0 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003B8F4 <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003B8F5 <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003B8F6 <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003B8F8 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003B8FC <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003B8FE <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003B900 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003B904 <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003B906 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003B90A <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003B90C <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003B910 <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003B911 <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003B912 <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003B914 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003B918 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003B91A <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003B91C <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003B920 <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003B922 <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003B926 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003B928 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003B92C <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003B92D <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003B92E <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003B930 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003B934 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003B936 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003B938 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003B93C <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003B93E <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003B942 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003B944 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003B948 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003B949 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003B94A <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003B94C <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003B950 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003B952 <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003B954 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003B958 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003B95A <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003B95E <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003B960 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003B964 <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003B965 <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003B966 <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003B968 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003B96C <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003B96E <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003B970 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003B974 <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003B976 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003B97A <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003B97C <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003B980 <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003B981 <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003B982 <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003B984 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003B988 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003B98A <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003B98C <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003B990 <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003B992 <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003B996 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003B998 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003B99C <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003B99D <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003B99E <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003B9A0 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003B9A4 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003B9A6 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003B9A8 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003B9AC <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003B9AE <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003B9B2 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003B9B4 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003B9B8 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003B9B9 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003B9BA <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003B9BC <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003B9C0 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003B9C4 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003B9C8 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003B9CA <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003B9CE <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003B9D0 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003B9D4 <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003B9D5 <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003B9D6 <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003B9D8 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003B9DC <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003B9DE <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003B9E0 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003B9E4 <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003B9E6 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003B9EA <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003B9EC <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003B9F0 <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003B9F1 <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003B9F2 <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003B9F4 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003B9F8 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003B9FA <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003B9FC <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003BA00 <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003BA02 <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003BA06 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003BA08 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003BA0D <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003BA0E <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003BA10 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003BA14 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003BA16 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003BA18 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003BA1C <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003BA1E <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003BA22 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003BA24 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003BA29 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003BA2A <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003BA2C <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003BA30 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003BA32 <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003BA34 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003BA38 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003BA3A <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003BA3E <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003BA40 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003BA45 <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003BA46 <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003BA48 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003BA4C <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003BA4E <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003BA50 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003BA54 <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003BA56 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003BA5A <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003BA5C <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003BA61 <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003BA62 <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003BA64 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003BA68 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003BA6A <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003BA6C <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003BA70 <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003BA72 <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003BA76 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003BA78 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003BA7C <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003BA7D <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003BA7E <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003BA80 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003BA84 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003BA86 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003BA88 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003BA8C <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003BA8E <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003BA92 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003BA94 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003BA98 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003BA99 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003BA9A <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003BA9C <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003BAA0 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003BAA2 <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003BAA4 <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003BAA8 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003BAAA <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003BAAE <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003BAB0 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003BAB4 <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003BAB5 <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003BAB6 <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003BAB8 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003BABC <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003BABE <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003BAC0 <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003BAC4 <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003BAC6 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003BACA <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003BACC <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003BAD0 <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003BAD1 <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003BAD2 <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003BAD4 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003BAD8 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003BADA <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003BADC <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003BAE0 <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003BAE2 <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003BAE6 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003BAE8 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003BAEC <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003BAED <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003BAEE <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003BAF0 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003BAF4 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003BAF6 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003BAF8 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003BAFC <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003BAFE <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003BB02 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003BB04 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003BB09 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003BB0A <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003BB0C <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003BB10 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003BB12 <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003BB14 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003BB18 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003BB1A <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003BB1E <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003BB20 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003BB25 <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003BB26 <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003BB28 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003BB2C <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003BB2E <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003BB30 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003BB34 <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003BB36 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003BB3A <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003BB3C <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003BB41 <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003BB42 <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003BB44 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003BB48 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003BB4A <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003BB4C <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003BB50 <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003BB52 <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003BB56 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003BB58 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003BB5D <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003BB5E <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003BB60 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003BB64 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003BB66 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003BB68 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003BB6C <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003BB6E <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003BB72 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003BB74 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003BB79 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003BB7A <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003BB7C <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003BB80 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003BB82 <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003BB84 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003BB88 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003BB8A <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003BB8E <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003BB90 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003BB95 <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003BB96 <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003BB98 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003BB9C <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003BB9E <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003BBA0 <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003BBA4 <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003BBA6 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003BBAA <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003BBAC <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003BBB1 <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003BBB2 <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003BBB4 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003BBB8 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003BBBA <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003BBBC <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003BBC0 <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003BBC2 <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003BBC6 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003BBC8 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003BBCD <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003BBCE <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003BBD0 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003BBD4 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003BBD6 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003BBD8 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003BBDC <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003BBDE <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003BBE2 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003BBE4 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003BBE9 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003BBEA <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003BBEC <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003BBF0 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003BBF2 <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003BBF4 <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003BBF8 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003BBFA <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003BBFE <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003BC00 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003BC05 <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003BC06 <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003BC08 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003BC0C <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003BC0E <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003BC10 <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003BC14 <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003BC16 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003BC1A <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003BC1C <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003BC21 <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003BC22 <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003BC24 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003BC28 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003BC2A <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003BC2C <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003BC30 <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003BC32 <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003BC36 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003BC38 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003BC3D <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003BC3E <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003BC40 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003BC44 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003BC46 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003BC48 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003BC4C <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003BC4E <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003BC52 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003BC54 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003BC59 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003BC5A <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003BC5C <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003BC60 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003BC62 <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003BC64 <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003BC68 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003BC6A <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003BC6E <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003BC70 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003BC75 <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003BC76 <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003BC78 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003BC7C <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003BC7E <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003BC80 <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003BC84 <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003BC86 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003BC8A <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003BC8C <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003BC91 <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003BC92 <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003BC94 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003BC98 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003BC9A <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003BC9C <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003BCA0 <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003BCA2 <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003BCA6 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003BCA8 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003BCAD <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003BCAE <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003BCB0 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003BCB4 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003BCB6 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003BCB8 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003BCBC <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003BCBE <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003BCC2 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003BCC4 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003BCC9 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003BCCA <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003BCCC <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003BCD0 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003BCD2 <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003BCD4 <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003BCD8 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003BCDA <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003BCDE <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003BCE0 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003BCE4 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003BCE5 <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003BCE6 <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003BCE8 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003BCEC <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003BCEE <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003BCF0 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003BCF4 <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003BCF6 <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003BCFA <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003BCFC <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003BD01 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003BD02 <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003BD04 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003BD08 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003BD0A <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003BD0C <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003BD10 <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003BD12 <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003BD16 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003BD18 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003BD1C <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003BD1D <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003BD1E <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003BD20 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003BD24 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003BD26 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003BD28 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003BD2C <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003BD2E <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003BD32 <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003BD34 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003BD39 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003BD3A <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003BD3C <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003BD40 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003BD42 <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003BD44 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003BD48 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003BD4A <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003BD4E <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003BD50 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003BD55 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003BD56 <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003BD58 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003BD5C <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003BD5E <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003BD60 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003BD64 <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003BD66 <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003BD6A <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003BD6C <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003BD70 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003BD71 <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003BD72 <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003BD74 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003BD78 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003BD7A <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003BD7C <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003BD80 <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003BD82 <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003BD86 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003BD88 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003BD8D <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003BD8E <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003BD90 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003BD94 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003BD96 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003BD98 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003BD9C <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003BD9E <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003BDA2 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003BDA4 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003BDA8 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003BDA9 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003BDAA <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003BDAC <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003BDB0 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003BDB2 <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003BDB4 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003BDB8 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003BDBA <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003BDBE <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003BDC0 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003BDC4 <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003BDC5 <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003BDC6 <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003BDC8 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003BDCC <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003BDCE <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003BDD0 <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003BDD4 <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003BDD6 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003BDDA <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003BDDC <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003BDE4 <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003BDE5 <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003BDE6 <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003BDEC <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003BDEE <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003BDF0 <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003BDF4 <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003BDF6 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003BDFA <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003BDFC <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003BE00 <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003BE01 <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003BE02 <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003BE04 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003BE08 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003BE0A <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003BE0C <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003BE10 <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003BE12 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003BE16 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003BE18 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003BE1C <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003BE1D <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003BE1E <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003BE20 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003BE24 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003BE26 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003BE28 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003BE2C <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003BE2E <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003BE32 <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003BE34 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003BE38 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003BE39 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003BE3A <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003BE3C <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003BE40 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003BE42 <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003BE44 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003BE48 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003BE4A <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003BE4E <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003BE50 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003BE55 <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003BE56 <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003BE58 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003BE5C <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003BE5E <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003BE60 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003BE64 <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003BE66 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003BE6A <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003BE6C <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003BE70 <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003BE71 <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003BE72 <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003BE74 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003BE78 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003BE7A <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003BE7C <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003BE80 <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003BE82 <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003BE86 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003BE88 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003BE8C <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003BE8D <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003BE8E <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003BE90 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003BE94 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003BE96 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003BE98 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003BE9C <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003BE9E <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003BEA2 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003BEA4 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003BEA9 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003BEAA <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003BEAC <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003BEB0 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003BEB2 <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003BEB4 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003BEB8 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003BEBE <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003BEC5 <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003BEC6 <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003BECC <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003BECE <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003BED0 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003BED4 <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003BED6 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003BEDA <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003BEE2 <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003BEE3 <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003BEE4 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003BEE6 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003BEEA <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003BEEC <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003BEEE <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003BEF2 <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003BEF8 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003BF00 <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003BF01 <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003BF04 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003BF0A <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003BF0C <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003BF12 <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003BF1F <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003BF22 <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003BF26 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003BF28 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003BF2A <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003BF2E <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003BF36 <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003BF3B <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003BF3C <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003BF3E <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003BF42 <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003BF44 <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003BF4A <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003BF4C <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003BF52 <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003BF57 <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003BF58 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003BF5A <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003BF5E <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003BF62 <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003BF66 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003BF68 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003BF6E <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003BF73 <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003BF76 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003BF7C <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003BF7E <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003BF82 <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003BF84 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003BF8A <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003BF8F <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003BF92 <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003BF98 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003BF9A <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003BF9E <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003BFA0 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003BFA6 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003BFAB <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003BFAE <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003BFB2 <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003BFB4 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003BFBA <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003BFC2 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003BFC6 <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003BFC7 <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003BFCA <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003BFD2 <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003BFD6 <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003BFDE <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003BFE3 <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003BFE6 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003BFEC <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003BFEE <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003BFFA <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003BFFD <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003BFFE <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C004 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C012 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C019 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C01A <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C020 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C028 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C02E <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C035 <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C036 <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C03C <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C04A <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C052 <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C053 <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C056 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C05E <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C06A <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C06E <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C06F <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C072 <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C07A <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C086 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C08A <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C08B <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C096 <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C09A <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C0A2 <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C0A7 <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C0AA <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C0B2 <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C0B6 <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C0BE <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C0C3 <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C0C6 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C0CA <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C0CE <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C0D2 <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C0DA <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C0DE <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C0DF <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C0E2 <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C0E6 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C0EA <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C0EE <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C0F0 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C0F6 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C0FB <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C0FC <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C0FE <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C102 <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C106 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C10A <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C112 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C117 <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C11A <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C122 <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C126 <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C12E <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C133 <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C13E <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C142 <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C144 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C14A <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C14F <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C152 <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C158 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C15A <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C15E <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C160 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C166 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C16B <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C16E <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C17A <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C182 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C187 <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C192 <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C198 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C19E <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C1A3 <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003C1AE <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003C1B4 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003C1BF <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003C1C2 <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003C1C6 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003C1CA <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003C1D0 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003C1DB <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003C1DE <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003C1E6 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003C1F7 <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003C202 <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003C20E <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003C213 <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003C21E <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003C22A <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003C22F <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003C232 <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003C23A <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003C23E <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003C240 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003C246 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003C24B <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003C256 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003C25A <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003C262 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003C267 <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003C26A <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003C272 <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003C278 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003C27E <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003C282 <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003C283 <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003C286 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003C29A <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003C29F <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003C2A2 <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003C2AA <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003C2B6 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003C2BB <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003C2C6 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003C2CC <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003C2D5 <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003C2DC <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003C2E0 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003C2EA <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003C2EF <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003C2F0 <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003C2F2 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003C2F6 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003C2F8 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003C2FE <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003C300 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003C304 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003C306 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003C30B <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003C30C <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003C314 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003C31A <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003C31C <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003C320 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003C327 <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003C328 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003C330 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003C336 <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003C338 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003C33E <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003C343 <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003C344 <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003C34C <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003C352 <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003C358 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003C35F <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003C360 <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003C362 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003C368 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003C370 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003C374 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003C376 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003C37B <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003C37C <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003C37E <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003C384 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003C38A <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003C38C <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003C397 <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003C398 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003C39A <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003C3A0 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003C3A6 <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003C3A8 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003C3AC <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003C3B3 <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003C3B4 <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003C3B6 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003C3BC <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003C3C4 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003C3C8 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003C3CE <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003C3CF <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003C3D0 <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003C3D2 <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003C3D6 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003C3DE <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003C3E0 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003C3E4 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003C3EB <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003C3EC <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003C3F4 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003C3FA <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003C3FC <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003C400 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003C409 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003C410 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003C418 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003C424 <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003C425 <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003C42C <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003C434 <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003C441 <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003C448 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003C450 <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003C45F <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003C464 <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003C46A <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003C46C <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003C472 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003C478 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003C488 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003C48C <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003C494 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003C49C <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003C4A4 <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003C4A8 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003C4B0 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003C4B8 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003C4CC <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003C4D4 <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003C4DA <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003C4E6 <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003C4F0 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003C534 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003C56A <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003C576 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003C57E <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003C584 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003C58C <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003C59A <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003C5A2 <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003C5A8 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003C5AE <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003C5B6 <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003C5BE <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003C5C4 <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003C5CA <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003C5D2 <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003C5E6 <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003C5FC <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003C602 <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003C634 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003C652 <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003C65A <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003C666 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003C6AE <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003C6B0 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003C6CC <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003C6F5 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003C6F6 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003C703 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003C704 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003C711 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003C712 <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003C720 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003C721 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003C72D <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003C741 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003C742 <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003C74D <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003C752 <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003C757 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003C765 <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003C772 <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003C77F <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003C78D <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003C7A5 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003C7D3 <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003C7E1 <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003C7F9 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003C7FA <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003C800 <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003C805 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003C813 <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003C825 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003C82A <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003C837 <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003C853 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003C854 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003C85D <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003C8A3 <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003C8A8 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003C8B3 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003C8E1 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003C8E9 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003C901 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003C911 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003C912 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003C918 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003C91F <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003C920 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003C92D <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003C934 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003C93B <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003C93C <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003C949 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003C950 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003C957 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003C963 <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003C979 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003C98B <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003C992 <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003C99D <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003C9A4 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003C9DD <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003CA23 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003CA24 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003CA51 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003CA56 <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003CA5F <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003CA95 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003CA96 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003CA9C <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003CAA5 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003CADA <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003CAF0 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003CB27 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003CB28 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003CB28 <AmiBlitz3.ab3@28395> INCLUDE "internal_commands.ab3"
0003CB2C <AmiBlitz3.ab3@28400>            Dc.l cif_lt                                     ;ciflt
0003CB30 <AmiBlitz3.ab3@28401>            Dc.l cif_eq                                     ;cifeq
0003CB34 <AmiBlitz3.ab3@28402>            Dc.l cif_gt                                     ;cifgt
0003CB38 <AmiBlitz3.ab3@28403>            Ds.l 1                                          ;0
0003CB3C <AmiBlitz3.ab3@28404>            Dc.l cif_le                                     ;cifle
0003CB40 <AmiBlitz3.ab3@28405>            Dc.l cif_ne                                     ;cifne
0003CB44 <AmiBlitz3.ab3@28406>            Dc.l cif_le                                     ;cifge
0003CB48 <AmiBlitz3.ab3@28407>            Ds.l 1                                          ;0
0003CB4C <AmiBlitz3.ab3@28408>            Dc.l cif_ge                                     ;cifge
0003CB50 <AmiBlitz3.ab3@28409>            Dc.l cif_ne                                     ;cifne
0003CB54 <AmiBlitz3.ab3@28410>            Dc.l cif_ge                                     ;cifge
0003CB58 <AmiBlitz3.ab3@28411>            Ds.l 1                                          ;0
0003CB5C <AmiBlitz3.ab3@28414>            Dc.l do_newtype                                 ;donewtype
0003CB60 <AmiBlitz3.ab3@28415>            Dc.l do_end                                     ;doend
0003CB64 <AmiBlitz3.ab3@28416>            Dc.l do_let                                     ;dolet
0003CB68 <AmiBlitz3.ab3@28417>            Dc.l do_dim                                     ;dodim
0003CB6C <AmiBlitz3.ab3@28418>            Dc.l do_goto                                    ;dogoto
0003CB70 <AmiBlitz3.ab3@28419>            Dc.l do_gosub                                   ;dogosub
0003CB74 <AmiBlitz3.ab3@28420>            Dc.l do_return                                  ;doreturn
0003CB78 <AmiBlitz3.ab3@28421>            Dc.l do_statement                               ;dostatement
0003CB7C <AmiBlitz3.ab3@28422>            Dc.l do_function                                ;dofunc
0003CB80 <AmiBlitz3.ab3@28423>            Dc.l do_mousewait                               ;domwait
0003CB84 <AmiBlitz3.ab3@28424>            Dc.l do_if                                      ;doif
0003CB88 <AmiBlitz3.ab3@28425>            Dc.l do_while                                   ;dowhile
0003CB8C <AmiBlitz3.ab3@28426>            Dc.l do_Macro                                   ;domacro
0003CB90 <AmiBlitz3.ab3@28427>            Dc.l do_select                                  ;doselect
0003CB94 <AmiBlitz3.ab3@28428>            Dc.l do_case                                    ;docase
0003CB98 <AmiBlitz3.ab3@28429>            Dc.l do_default                                 ;dodefault
0003CB9C <AmiBlitz3.ab3@28430>            Dc.l do_AsmExit                                 ;doasmexit
0003CBA0 <AmiBlitz3.ab3@28431>            Dc.l do_xinclude                                ;doxinclude
0003CBA4 <AmiBlitz3.ab3@28432>            Dc.l do_INCLUDE                                 ;doinclude
0003CBA8 <AmiBlitz3.ab3@28433>            Dc.l do_syntax                                  ;syntaxerr
0003CBAC <AmiBlitz3.ab3@28434>            Dc.l do_shared                                  ;doshared
0003CBB0 <AmiBlitz3.ab3@28435>            Dc.l do_for                                     ;dofor
0003CBB4 <AmiBlitz3.ab3@28436>            Dc.l do_next                                    ;donext
0003CBB8 <AmiBlitz3.ab3@28437>            Dc.l syntaxerr                                  ; To
0003CBBC <AmiBlitz3.ab3@28438>            Dc.l syntaxerr                                  ; Step
0003CBC0 <AmiBlitz3.ab3@28439>            Dc.l do_data                                    ;dodata
0003CBC4 <AmiBlitz3.ab3@28440>            Dc.l do_read                                    ;doread
0003CBC8 <AmiBlitz3.ab3@28444>            Dc.l syntaxerr                                  ; CNIF
0003CBCC <AmiBlitz3.ab3@28445>            Dc.l syntaxerr                                  ; CSIF
0003CBD0 <AmiBlitz3.ab3@28446>            Dc.l syntaxerr                                  ; CELSE
0003CBD4 <AmiBlitz3.ab3@28447>            Dc.l syntaxerr                                  ; CEND
0003CBD8 <AmiBlitz3.ab3@28448>            Dc.l do_cerr                                    ;docerr
0003CBDC <AmiBlitz3.ab3@28449>            Dc.l do_then                                    ;dothen
0003CBE0 <AmiBlitz3.ab3@28450>            Dc.l do_else                                    ;doelse
0003CBE4 <AmiBlitz3.ab3@28451>            Dc.l do_even4                                   ;doeven4
0003CBE8 <AmiBlitz3.ab3@28452>            Dc.l do_even8                                   ;doeven8
0003CBEC <AmiBlitz3.ab3@28454>            Dc.l do_dc                                      ;dodc
0003CBF0 <AmiBlitz3.ab3@28455>            Dc.l do_ds                                      ;dods
0003CBF4 <AmiBlitz3.ab3@28456>            Dc.l do_even                                    ;doeven
0003CBF8 <AmiBlitz3.ab3@28457>            Dc.l do_dcb                                     ;dodcb
0003CBFC <AmiBlitz3.ab3@28458>            Dc.l do_setreg                                  ;dosetreg
0003CC00 <AmiBlitz3.ab3@28459>            Dc.l do_IncBin                                  ;doincbin
0003CC04 <AmiBlitz3.ab3@28460>            Dc.l do_free                                    ;dofree
0003CC08 <AmiBlitz3.ab3@28461>            Dc.l do_use                                     ;douse
0003CC0C <AmiBlitz3.ab3@28462>            Dc.l do_Stop                                    ;dostop
0003CC10 <AmiBlitz3.ab3@28463>            Dc.l do_Cont                                    ;docont
0003CC14 <AmiBlitz3.ab3@28464>            Dc.l syntaxerr                                  ;syntaxeer
0003CC18 <AmiBlitz3.ab3@28465>            Dc.l do_SetInt                                  ;dosetint
0003CC1C <AmiBlitz3.ab3@28466>            Dc.l do_ClrInt                                  ;doclrint
0003CC20 <AmiBlitz3.ab3@28467>            Dc.l do_MaxLen                                  ;domaxlen
0003CC24 <AmiBlitz3.ab3@28468>            Dc.l do_DEFTYPE                                 ;dodeftype
0003CC28 <AmiBlitz3.ab3@28469>            Dc.l do_BLITZ                                   ;doblitz
0003CC2C <AmiBlitz3.ab3@28470>            Dc.l do_AMIGA                                   ;doamiga
0003CC30 <AmiBlitz3.ab3@28471>            Dc.l do_QAMIGA                                  ;doqamiga
0003CC34 <AmiBlitz3.ab3@28472>            Dc.l do_VWait                                   ;dovwait
0003CC38 <AmiBlitz3.ab3@28473>            Dc.l do_LibJsr                                  ;dolibjsr
0003CC3C <AmiBlitz3.ab3@28474>            Dc.l do_TokeJsr                                 ;dotokejsr
0003CC40 <AmiBlitz3.ab3@28475>            Dc.l do_BLibJsr                                 ;doblibjsr
0003CC44 <AmiBlitz3.ab3@28476>            Dc.l _extb                                      ;syntaxerr
0003CC48 <AmiBlitz3.ab3@28480>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003CC4C <AmiBlitz3.ab3@28481>            Dc.l do_SetErr                                  ;doseterr
0003CC50 <AmiBlitz3.ab3@28482>            Dc.l do_ClrErr                                  ;doclrerr
0003CC54 <AmiBlitz3.ab3@28483>            Dc.l syntaxerr                                  ;syntaxerr
0003CC58 <AmiBlitz3.ab3@28484>            Dc.l do_ErrFail                                 ;doerrfail
0003CC5C <AmiBlitz3.ab3@28485>            Dc.l syntaxerr
0003CC60 <AmiBlitz3.ab3@28486>            Dc.l syntaxerr                                  ;mod
0003CC64 <AmiBlitz3.ab3@28487>            Dc.l syntaxerr                                  ;Pi
0003CC68 <AmiBlitz3.ab3@28488>            Dc.l do_Repeat                                  ;dorepeat
0003CC6C <AmiBlitz3.ab3@28489>            Dc.l do_Until                                   ;dountil
0003CC70 <AmiBlitz3.ab3@28490>            Dc.l do_PutReg                                  ;doputreg
0003CC74 <AmiBlitz3.ab3@28491>            Dc.l do_Pop                                     ;dopop
0003CC78 <AmiBlitz3.ab3@28492>            Dc.l do_INCDIR                                  ;doincdir
0003CC7C <AmiBlitz3.ab3@28493>            Dc.l mydo_Endif2                                ;mydoendif2
0003CC80 <AmiBlitz3.ab3@28494>            Dc.l do_Wend                                    ;dowend
0003CC84 <AmiBlitz3.ab3@28495>            Dc.l do_SysJsr                                  ;dosysjsr
0003CC88 <AmiBlitz3.ab3@28496>            Dc.l do_WBStartup                               ;dowbstartup
0003CC8C <AmiBlitz3.ab3@28497>            Dc.l syntaxerr
0003CC90 <AmiBlitz3.ab3@28498>            Dc.l do_Ongo                                    ;doongo
0003CC94 <AmiBlitz3.ab3@28499>            Dc.l syntaxerr
0003CC98 <AmiBlitz3.ab3@28500>            Dc.l do_Forever                                 ;doforever
0003CC9C <AmiBlitz3.ab3@28501>            Dc.l do_Restore                                 ;dorestore
0003CCA0 <AmiBlitz3.ab3@28502>            Dc.l do_Exchange                                ;doexchange
0003CCA4 <AmiBlitz3.ab3@28503>            Dc.l do_USEPATH                                 ;dousepath
0003CCA8 <AmiBlitz3.ab3@28504>            Dc.l do_CloseEd                                 ;doclosed
0003CCAC <AmiBlitz3.ab3@28505>            Dc.l do_NoCli                                   ;donocli
0003CCB0 <AmiBlitz3.ab3@28506>            Dc.l syntaxerr                                  ;syntaxerr
0003CCB4 <AmiBlitz3.ab3@28507>            Dc.l syntaxerr                                  ;syntaxerr
0003CCB8 <AmiBlitz3.ab3@28508>            Dc.l syntaxerr                                  ;syntaxerr
0003CCBC <AmiBlitz3.ab3@28509>            Dc.l syntaxerr                                  ;syntaxerr
0003CCC0 <AmiBlitz3.ab3@28510>            Dc.l syntaxerr                                  ;syntaxerr
0003CCC4 <AmiBlitz3.ab3@28511>            Dc.l do_runerrson                               ;dorunerrson
0003CCC8 <AmiBlitz3.ab3@28512>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003CCCC <AmiBlitz3.ab3@28513>            Dc.l do_uselastpath
0003CCD0 <AmiBlitz3.ab3@28514>            Dc.l do_regload
0003CCD4 <AmiBlitz3.ab3@28515>            Dc.l do_regsave
0003CCD8 <AmiBlitz3.ab3@28516>            Dc.l do_Object
0003CCDC <AmiBlitz3.ab3@28517>            Dc.l do_usepath2
0003CCE0 <AmiBlitz3.ab3@28518>            Dc.l do_LastRunErrsMode
0003CCE4 <AmiBlitz3.ab3@28541> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003CCE8 <AmiBlitz3.ab3@28542>            Dc.l menu_run
0003CCEC <AmiBlitz3.ab3@28543>            Dc.l menu_createexecutable
0003CCF0 <AmiBlitz3.ab3@28544>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003CCF4 <AmiBlitz3.ab3@28545>            Dc.l menu_createresidentfile
0003CCF8 <AmiBlitz3.ab3@28546> 
0003CCFC <AmiBlitz3.ab3@28547> 
0003CD00 <AmiBlitz3.ab3@28548>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003CD04 <AmiBlitz3.ab3@28549>            Dc.l menu_reloadlibs
0003CD08 <AmiBlitz3.ab3@28550>            Dc.l menu_loaddebugmodule
0003CD0C <AmiBlitz3.ab3@28551>            Dc.l menu_dummyfunc
0003CD10 <AmiBlitz3.ab3@28552>            Dc.l menu_newcreate
0003CD14 <AmiBlitz3.ab3@28553>            Dc.l menu_dummyfunc
0003CD18 <AmiBlitz3.ab3@28554>            Dc.l menu_toggledebug
0003CD1C <AmiBlitz3.ab3@28555>            Dc.l menu_dummyfunc
0003CD20 <AmiBlitz3.ab3@28556>            Dc.l menu_dummyfunc
0003CD4A <AmiBlitz3.ab3@28561>   !basic
0003CDAC <AmiBlitz3.ab3@28562>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003CDCA <AmiBlitz3.ab3@28563>   !asm
0003CDCC <AmiBlitz3.ab3@28564> RTS
0003CDCD <AmiBlitz3.ab3@28570> set_autorun:               Dc.b $00
0003CDD2 <AmiBlitz3.ab3@28571> autorun:                   Dc.b $80,$01,$01,$00,$01
0003CDD3 <AmiBlitz3.ab3@28573> set_interruptcheck:        Dc.b $00
0003CDD8 <AmiBlitz3.ab3@28574> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003CDD9 <AmiBlitz3.ab3@28576> set_assemblercheck:        Ds.b 1
0003CDDE <AmiBlitz3.ab3@28577> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003CDDF <AmiBlitz3.ab3@28579> set_overflowcheck:         Ds.b 1
0003CDE4 <AmiBlitz3.ab3@28580> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003CDEA <AmiBlitz3.ab3@28582> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003CDF0 <AmiBlitz3.ab3@28583> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003CDF6 <AmiBlitz3.ab3@28584> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003CDF8 <AmiBlitz3.ab3@28585> Even4
0003CE04 <AmiBlitz3.ab3@28588> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003CE0C <AmiBlitz3.ab3@28589>                            Dc.l $00000000,$00000000
0003CE14 <AmiBlitz3.ab3@28590> tstsize1:                  Dc.l $00000100,$000003E9
0003CE18 <AmiBlitz3.ab3@28591> tstsize2:                  Dc.l $00000100
0003CE1C <AmiBlitz3.ab3@28592> tstend:                    Dc.l $000003EC
0003CE24 <AmiBlitz3.ab3@28593> tstsize3:                  Ds.l 2
0003CE28 <AmiBlitz3.ab3@28594> tstdone:                   Dc.l $000003F2
0003CE2C <AmiBlitz3.ab3@28597> edstruct:                  Dc.l tokens                     ;data for ted
0003CE30 <AmiBlitz3.ab3@28601>                            Dc.l 0
0003CE34 <AmiBlitz3.ab3@28603>                            Dc.l read_xtrafile              ;load .xtra routine
0003CE38 <AmiBlitz3.ab3@28604>                            Dc.l write_xtrafile             ;save .xtra routine
0003CE3C <AmiBlitz3.ab3@28605>                            Dc.l call_menuentry             ;Menu Routine
0003CE40 <AmiBlitz3.ab3@28606>                            Ds.l 1                          ;cleanup (?)
0003CE44 <AmiBlitz3.ab3@28607>                            Dc.b ":",34,".;"
0003CF40 <AmiBlitz3.ab3@28610> 
0003D020 <AmiBlitz3.ab3@28611>                            Ds.l 56
0003D022 <AmiBlitz3.ab3@28616> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D026 <AmiBlitz3.ab3@28619> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D028 <AmiBlitz3.ab3@28620>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D02C <AmiBlitz3.ab3@28621>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D032 <AmiBlitz3.ab3@28625> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D034 <AmiBlitz3.ab3@28629>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D038 <AmiBlitz3.ab3@28632> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D03C <AmiBlitz3.ab3@28635> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D040 <AmiBlitz3.ab3@28636>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D042 <AmiBlitz3.ab3@28642>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D044 <AmiBlitz3.ab3@28646>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D046 <AmiBlitz3.ab3@28649> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D048 <AmiBlitz3.ab3@28650>                            Dc.b $4E,$71                                             ;NOP
0003D04A <AmiBlitz3.ab3@28651>                            Dc.b $4E,$71                                             ;NOP
0003D04C <AmiBlitz3.ab3@28652>                            Dc.b $4E,$71                                             ;NOP
0003D04E <AmiBlitz3.ab3@28653> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D050 <AmiBlitz3.ab3@28655>                            Dc.b $4E,$71                                             ;NOP
0003D052 <AmiBlitz3.ab3@28656>                            Dc.b $4E,$71                                             ;NOP
0003D054 <AmiBlitz3.ab3@28657>                            Dc.b $4E,$71                                             ;NOP
0003D058 <AmiBlitz3.ab3@28661> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D05C <AmiBlitz3.ab3@28664> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D05E <AmiBlitz3.ab3@28667> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D060 <AmiBlitz3.ab3@28670> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D062 <AmiBlitz3.ab3@28671>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D066 <AmiBlitz3.ab3@28672>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D068 <AmiBlitz3.ab3@28673>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D06A <AmiBlitz3.ab3@28679> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D06E <AmiBlitz3.ab3@28680>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D070 <AmiBlitz3.ab3@28685> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D074 <AmiBlitz3.ab3@28686>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D076 <AmiBlitz3.ab3@28690> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D078 <AmiBlitz3.ab3@28691>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D07C <AmiBlitz3.ab3@28697> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D07E <AmiBlitz3.ab3@28698>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D082 <AmiBlitz3.ab3@28699>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D086 <AmiBlitz3.ab3@28703> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D088 <AmiBlitz3.ab3@28704>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D08C <AmiBlitz3.ab3@28705>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D08E <AmiBlitz3.ab3@28708> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D092 <AmiBlitz3.ab3@28711> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D096 <AmiBlitz3.ab3@28714> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D09A <AmiBlitz3.ab3@28717> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D09E <AmiBlitz3.ab3@28721>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D0A0 <AmiBlitz3.ab3@28722>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D0A2 <AmiBlitz3.ab3@28723>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D0A6 <AmiBlitz3.ab3@28728>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D0A8 <AmiBlitz3.ab3@28729>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D0AA <AmiBlitz3.ab3@28730>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D0AE <AmiBlitz3.ab3@28735>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D0B0 <AmiBlitz3.ab3@28736>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D0B2 <AmiBlitz3.ab3@28737>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D0B6 <AmiBlitz3.ab3@28742>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D0B8 <AmiBlitz3.ab3@28743>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D0BA <AmiBlitz3.ab3@28744>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D0BE <AmiBlitz3.ab3@28745>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D0C0 <AmiBlitz3.ab3@28746>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D0C4 <AmiBlitz3.ab3@28751>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D0C6 <AmiBlitz3.ab3@28752>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D0CA <AmiBlitz3.ab3@28753>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D0CC <AmiBlitz3.ab3@28754>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D0D0 <AmiBlitz3.ab3@28755>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D0D2 <AmiBlitz3.ab3@28756>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D0D4 <AmiBlitz3.ab3@28759>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D0D8 <AmiBlitz3.ab3@28764>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D0DA <AmiBlitz3.ab3@28765>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D0DE <AmiBlitz3.ab3@28766>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D0E0 <AmiBlitz3.ab3@28767>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D0E4 <AmiBlitz3.ab3@28768>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D0E6 <AmiBlitz3.ab3@28769>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D0E8 <AmiBlitz3.ab3@28772>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D0EC <AmiBlitz3.ab3@28777>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D0EE <AmiBlitz3.ab3@28778>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D0F2 <AmiBlitz3.ab3@28779>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D0F4 <AmiBlitz3.ab3@28780>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D0F8 <AmiBlitz3.ab3@28781>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D0FA <AmiBlitz3.ab3@28782>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D0FC <AmiBlitz3.ab3@28785>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D100 <AmiBlitz3.ab3@28790>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D102 <AmiBlitz3.ab3@28791>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D106 <AmiBlitz3.ab3@28792>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D10C <AmiBlitz3.ab3@28793>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D110 <AmiBlitz3.ab3@28794>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D112 <AmiBlitz3.ab3@28795>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D116 <AmiBlitz3.ab3@28802>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D118 <AmiBlitz3.ab3@28806> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D11A <AmiBlitz3.ab3@28809> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D11E <AmiBlitz3.ab3@28812> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D120 <AmiBlitz3.ab3@28813> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D124 <AmiBlitz3.ab3@28816> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D126 <AmiBlitz3.ab3@28819> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D12A <AmiBlitz3.ab3@28822> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D12C <AmiBlitz3.ab3@28826>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D12E <AmiBlitz3.ab3@28829> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D130 <AmiBlitz3.ab3@28832> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D134 <AmiBlitz3.ab3@28835> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D138 <AmiBlitz3.ab3@28838> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D13C <AmiBlitz3.ab3@28841> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D13E <AmiBlitz3.ab3@28844> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D140 <AmiBlitz3.ab3@28847> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D144 <AmiBlitz3.ab3@28850> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D14A <AmiBlitz3.ab3@28851>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D14C <AmiBlitz3.ab3@28852>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D150 <AmiBlitz3.ab3@28856> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D152 <AmiBlitz3.ab3@28857>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D154 <AmiBlitz3.ab3@28861> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D158 <AmiBlitz3.ab3@28864> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D15A <AmiBlitz3.ab3@28868>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D15C <AmiBlitz3.ab3@28872>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D15E <AmiBlitz3.ab3@28876>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D162 <AmiBlitz3.ab3@28879> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D166 <AmiBlitz3.ab3@28882> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D168 <AmiBlitz3.ab3@28885> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D16A <AmiBlitz3.ab3@28888> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D16C <AmiBlitz3.ab3@28891> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D170 <AmiBlitz3.ab3@28894> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D174 <AmiBlitz3.ab3@28897> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D176 <AmiBlitz3.ab3@28900> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D178 <AmiBlitz3.ab3@28904>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D17C <AmiBlitz3.ab3@28907>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D17E <AmiBlitz3.ab3@28913>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D182 <AmiBlitz3.ab3@28916>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D184 <AmiBlitz3.ab3@28922>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D188 <AmiBlitz3.ab3@28926> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D18A <AmiBlitz3.ab3@28929> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D18C <AmiBlitz3.ab3@28933>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D18E <AmiBlitz3.ab3@28937>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D194 <AmiBlitz3.ab3@28940> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D19A <AmiBlitz3.ab3@28943> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D1A2 <AmiBlitz3.ab3@28947> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003D1A6 <AmiBlitz3.ab3@28948>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003D1A8 <AmiBlitz3.ab3@28952> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003D1AC <AmiBlitz3.ab3@28955> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003D1B0 <AmiBlitz3.ab3@28958> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003D1B4 <AmiBlitz3.ab3@28961> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D1B8 <AmiBlitz3.ab3@28962> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003D1BC <AmiBlitz3.ab3@28966>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003D1C0 <AmiBlitz3.ab3@28968>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003D1C2 <AmiBlitz3.ab3@28971> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D1C6 <AmiBlitz3.ab3@28974> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D1C8 <AmiBlitz3.ab3@28977> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003D1CA <AmiBlitz3.ab3@28978>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D1CC <AmiBlitz3.ab3@28979>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003D1D0 <AmiBlitz3.ab3@28980> 
0003D1D2 <AmiBlitz3.ab3@28981>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003D1D4 <AmiBlitz3.ab3@28982>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003D1D6 <AmiBlitz3.ab3@28983>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003D1DC <AmiBlitz3.ab3@28985>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D1DE <AmiBlitz3.ab3@28990> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D1E0 <AmiBlitz3.ab3@28991>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003D1E2 <AmiBlitz3.ab3@28995> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003D1E6 <AmiBlitz3.ab3@28998> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D1E8 <AmiBlitz3.ab3@29001> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D1EA <AmiBlitz3.ab3@29005>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003D1EC <AmiBlitz3.ab3@29008> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D1F0 <AmiBlitz3.ab3@29011> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D1F2 <AmiBlitz3.ab3@29012>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D1F6 <AmiBlitz3.ab3@29016> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003D1FA <AmiBlitz3.ab3@29017> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D1FE <AmiBlitz3.ab3@29021> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003D202 <AmiBlitz3.ab3@29025> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D208 <AmiBlitz3.ab3@29029> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003D20E <AmiBlitz3.ab3@29032> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003D212 <AmiBlitz3.ab3@29036> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003D216 <AmiBlitz3.ab3@29040>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D21A <AmiBlitz3.ab3@29041>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D220 <AmiBlitz3.ab3@29046>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003D224 <AmiBlitz3.ab3@29051>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D226 <AmiBlitz3.ab3@29056>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D22A <AmiBlitz3.ab3@29060>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D22C <AmiBlitz3.ab3@29064> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003D22E <AmiBlitz3.ab3@29067> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D230 <AmiBlitz3.ab3@29068>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D234 <AmiBlitz3.ab3@29072>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003D238 <AmiBlitz3.ab3@29076> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D23C <AmiBlitz3.ab3@29079> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003D23E <AmiBlitz3.ab3@29082> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003D242 <AmiBlitz3.ab3@29085> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003D244 <AmiBlitz3.ab3@29088> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003D24D <AmiBlitz3.ab3@29092>                            Dc.b "ram:test",0
0003D24E <AmiBlitz3.ab3@29093> Even
0003D252 <AmiBlitz3.ab3@29097>                            Dc.l  0                          ;was  Ds.w 3 org source
0003D254 <AmiBlitz3.ab3@29099>                            Dc.w  0
0003D258 <AmiBlitz3.ab3@29102> _mathffpbase:              Ds.l 1                           ;maths org source
0003D25A <AmiBlitz3.ab3@29103> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003D25C <AmiBlitz3.ab3@29104> typelen:                   Ds.w 1
0003D260 <AmiBlitz3.ab3@29105> prevtype:                  Ds.l 1
0003D264 <AmiBlitz3.ab3@29106> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003D266 <AmiBlitz3.ab3@29107> lastchar:                  Ds.w 1
0003D26A <AmiBlitz3.ab3@29108> thistype:                  Ds.l 1
0003D26E <AmiBlitz3.ab3@29109> errstack:                  Ds.l 1
0003D272 <AmiBlitz3.ab3@29110> errcont:                   Ds.l 1
0003D274 <AmiBlitz3.ab3@29111> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003D276 <AmiBlitz3.ab3@29112> linesleft:                 Ds.w 1
0003D27A <AmiBlitz3.ab3@29113> sourceline:                Ds.l 1                          ;thisitem org source
0003D27E <AmiBlitz3.ab3@29114> varbase:                   Ds.l 1                          ;firstvar org source
0003D282 <AmiBlitz3.ab3@29115> alllocals:                 Ds.l 1
0003D286 <AmiBlitz3.ab3@29116> firstlocal:                Ds.l 1
0003D28A <AmiBlitz3.ab3@29117> firstglob:                 Ds.l 1
0003D28C <AmiBlitz3.ab3@29118> globalvarpointer:          Ds.w 1                          ;varoff org source
0003D28E <AmiBlitz3.ab3@29119> locvaroff:                 Ds.w 1
0003D292 <AmiBlitz3.ab3@29120> firstitem_:                 Ds.l 1
0003D294 <AmiBlitz3.ab3@29121> numlines_org:              Ds.w 1                          ;numlines org source
0003D296 <AmiBlitz3.ab3@29122> returncode_org:            Ds.w 1                          ;returncode org source
0003D29A <AmiBlitz3.ab3@29123> firstiff:                  Ds.l 1                          ;firstif org source
0003D29E <AmiBlitz3.ab3@29124> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003D49E <AmiBlitz3.ab3@29125> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003D4AE <AmiBlitz3.ab3@29126> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003D6AE <AmiBlitz3.ab3@29127> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003D8AE <AmiBlitz3.ab3@29128> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003DAAE <AmiBlitz3.ab3@29129> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003DAB2 <AmiBlitz3.ab3@29131> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003DCB2 <AmiBlitz3.ab3@29132> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003DEB2 <AmiBlitz3.ab3@29134> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003DEB6 <AmiBlitz3.ab3@29135> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E0B6 <AmiBlitz3.ab3@29136> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E0BA <AmiBlitz3.ab3@29137> size_deflibs:              Ds.l 1                          ;deflibs org source
0003E2BA <AmiBlitz3.ab3@29138> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003E4BA <AmiBlitz3.ab3@29140> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003E4BE <AmiBlitz3.ab3@29141> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003E6BE <AmiBlitz3.ab3@29143> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E6C2 <AmiBlitz3.ab3@29149>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003E6C6 <AmiBlitz3.ab3@29150>   Dc.b $00,$00,$00,$00
0003E6CA <AmiBlitz3.ab3@29151>   Dc.b $00,$19,$00,$11
0003E6CE <AmiBlitz3.ab3@29152>   Dc.b $00,$2E,$00,$18
0003E6D2 <AmiBlitz3.ab3@29153>   Dc.b $00,$04,$00,$03
0003E6D6 <AmiBlitz3.ab3@29154>   Dc.b $00,$01,$00,$22
0003E6DA <AmiBlitz3.ab3@29155>   Dc.b $73,$68,$00,$00
0003E6DE <AmiBlitz3.ab3@29156>   Dc.b $00,$00,$00,$00
0003E6E2 <AmiBlitz3.ab3@29157>   Dc.b $00,$00,$00,$00
0003E6E6 <AmiBlitz3.ab3@29158>   Dc.b $00,$00,$00,$00
0003E6EA <AmiBlitz3.ab3@29159>   Dc.b $00,$00,$00,$00
0003E6EE <AmiBlitz3.ab3@29160>   Dc.b $00,$00,$00,$00
0003E6F2 <AmiBlitz3.ab3@29161>   Dc.b $03,$22,$00,$21
0003E6F6 <AmiBlitz3.ab3@29162>   Dc.b $3C,$28,$00,$22
0003E6FA <AmiBlitz3.ab3@29163>   Dc.b $6E,$C0,$00,$00
0003E6FE <AmiBlitz3.ab3@29164>   Dc.b $00,$12,$00,$00
0003E702 <AmiBlitz3.ab3@29165>   Dc.b $00,$0E,$00,$00
0003E706 <AmiBlitz3.ab3@29166>   Dc.b $00,$00,$00,$00
0003E70A <AmiBlitz3.ab3@29167>   Dc.b $00,$00,$00,$00
0003E70E <AmiBlitz3.ab3@29168>   Dc.b $00,$00,$00,$00
0003E712 <AmiBlitz3.ab3@29169>   Dc.b $00,$00,$00,$2E
0003E716 <AmiBlitz3.ab3@29170>   Dc.b $00,$17,$00,$02
0003E71A <AmiBlitz3.ab3@29171>   Dc.b $00,$01,$8E,$80
0003E71E <AmiBlitz3.ab3@29172>   Dc.b $03,$00,$00,$00
0003E722 <AmiBlitz3.ab3@29173>   Dc.b $00,$00,$FF,$FF
0003E726 <AmiBlitz3.ab3@29174>   Dc.b $FF,$FF,$FF,$FC
0003E72A <AmiBlitz3.ab3@29175>   Dc.b $80,$00,$00,$00
0003E72E <AmiBlitz3.ab3@29176>   Dc.b $00,$00,$80,$00
0003E732 <AmiBlitz3.ab3@29177>   Dc.b $00,$3F,$BB,$40
0003E736 <AmiBlitz3.ab3@29178>   Dc.b $80,$1F,$C0,$00
0003E73A <AmiBlitz3.ab3@29179>   Dc.b $00,$00,$80,$3F
0003E73E <AmiBlitz3.ab3@29180>   Dc.b $C0,$0F,$BB,$40
0003E742 <AmiBlitz3.ab3@29181>   Dc.b $80,$1F,$C0,$00
0003E746 <AmiBlitz3.ab3@29182>   Dc.b $00,$00,$8E,$00
0003E74A <AmiBlitz3.ab3@29183>   Dc.b $F8,$00,$00,$00
0003E74E <AmiBlitz3.ab3@29184>   Dc.b $8F,$01,$FF,$00
0003E752 <AmiBlitz3.ab3@29185>   Dc.b $3B,$40,$81,$E3
0003E756 <AmiBlitz3.ab3@29186>   Dc.b $F7,$C0,$00,$00
0003E75A <AmiBlitz3.ab3@29187>   Dc.b $80,$7F,$F8,$70
0003E75E <AmiBlitz3.ab3@29188>   Dc.b $3B,$40,$80,$0F
0003E762 <AmiBlitz3.ab3@29189>   Dc.b $7C,$E0,$00,$00
0003E766 <AmiBlitz3.ab3@29190>   Dc.b $80,$00,$FD,$80
0003E76A <AmiBlitz3.ab3@29191>   Dc.b $00,$00,$80,$01
0003E76E <AmiBlitz3.ab3@29192>   Dc.b $F6,$00,$FB,$40
0003E772 <AmiBlitz3.ab3@29193>   Dc.b $80,$03,$EF,$00
0003E776 <AmiBlitz3.ab3@29194>   Dc.b $00,$00,$80,$07
0003E77A <AmiBlitz3.ab3@29195>   Dc.b $87,$80,$3B,$40
0003E77E <AmiBlitz3.ab3@29196>   Dc.b $80,$0F,$01,$C0
0003E782 <AmiBlitz3.ab3@29197>   Dc.b $00,$00,$80,$03
0003E786 <AmiBlitz3.ab3@29198>   Dc.b $F0,$70,$1D,$40
0003E78A <AmiBlitz3.ab3@29199>   Dc.b $80,$00,$18,$1C
0003E78E <AmiBlitz3.ab3@29200>   Dc.b $00,$00,$80,$00
0003E792 <AmiBlitz3.ab3@29201>   Dc.b $10,$06,$03,$40
0003E796 <AmiBlitz3.ab3@29202>   Dc.b $80,$00,$20,$1F
0003E79A <AmiBlitz3.ab3@29203>   Dc.b $00,$00,$80,$00
0003E79E <AmiBlitz3.ab3@29204>   Dc.b $00,$00,$01,$40
0003E7A2 <AmiBlitz3.ab3@29205>   Dc.b $80,$00,$00,$00
0003E7A6 <AmiBlitz3.ab3@29206>   Dc.b $00,$00,$80,$00
0003E7AA <AmiBlitz3.ab3@29207>   Dc.b $00,$00,$00,$00
0003E7AE <AmiBlitz3.ab3@29208>   Dc.b $00,$00,$00,$00
0003E7B2 <AmiBlitz3.ab3@29209>   Dc.b $00,$00,$00,$00
0003E7B6 <AmiBlitz3.ab3@29210>   Dc.b $00,$00,$00,$04
0003E7BA <AmiBlitz3.ab3@29211>   Dc.b $00,$3F,$FC,$01
0003E7BE <AmiBlitz3.ab3@29212>   Dc.b $BB,$44,$00,$60
0003E7C2 <AmiBlitz3.ab3@29213>   Dc.b $FE,$00,$00,$04
0003E7C6 <AmiBlitz3.ab3@29214>   Dc.b $00,$CF,$FF,$01
0003E7CA <AmiBlitz3.ab3@29215>   Dc.b $BB,$44,$1F,$EF
0003E7CE <AmiBlitz3.ab3@29216>   Dc.b $FF,$00,$00,$04
0003E7D2 <AmiBlitz3.ab3@29217>   Dc.b $33,$FF,$FF,$E0
0003E7D6 <AmiBlitz3.ab3@29218>   Dc.b $00,$04,$37,$FE
0003E7DA <AmiBlitz3.ab3@29219>   Dc.b $7F,$FC,$1B,$44
0003E7DE <AmiBlitz3.ab3@29220>   Dc.b $0F,$9C,$FF,$FF
0003E7E2 <AmiBlitz3.ab3@29221>   Dc.b $00,$04,$03,$E3
0003E7E6 <AmiBlitz3.ab3@29222>   Dc.b $FF,$FF,$DB,$44
0003E7EA <AmiBlitz3.ab3@29223>   Dc.b $00,$7F,$BF,$FF
0003E7EE <AmiBlitz3.ab3@29224>   Dc.b $80,$04,$00,$0F
0003E7F2 <AmiBlitz3.ab3@29225>   Dc.b $3F,$FE,$00,$04
0003E7F6 <AmiBlitz3.ab3@29226>   Dc.b $00,$06,$7F,$F8
0003E7FA <AmiBlitz3.ab3@29227>   Dc.b $1B,$44,$00,$0C
0003E7FE <AmiBlitz3.ab3@29228>   Dc.b $F7,$FC,$00,$04
0003E802 <AmiBlitz3.ab3@29229>   Dc.b $00,$19,$F9,$FE
0003E806 <AmiBlitz3.ab3@29230>   Dc.b $1B,$44,$00,$33
0003E80A <AmiBlitz3.ab3@29231>   Dc.b $FE,$7F,$00,$04
0003E80E <AmiBlitz3.ab3@29232>   Dc.b $00,$0F,$FF,$BF
0003E812 <AmiBlitz3.ab3@29233>   Dc.b $CD,$44,$00,$03
0003E816 <AmiBlitz3.ab3@29234>   Dc.b $EF,$EF,$F0,$04
0003E81A <AmiBlitz3.ab3@29235>   Dc.b $00,$00,$7F,$DF
0003E81E <AmiBlitz3.ab3@29236>   Dc.b $FB,$44,$00,$00
0003E822 <AmiBlitz3.ab3@29237>   Dc.b $FF,$A7,$FC,$04
0003E826 <AmiBlitz3.ab3@29238>   Dc.b $00,$00,$7E,$3F
0003E82A <AmiBlitz3.ab3@29239>   Dc.b $FD,$44,$00,$00
0003E82E <AmiBlitz3.ab3@29240>   Dc.b $00,$00,$00,$04
0003E832 <AmiBlitz3.ab3@29241>   Dc.b $7F,$FF,$FF,$FF
0003E836 <AmiBlitz3.ab3@29242>   Dc.b $FF,$FC,$00,$00
0003E83A <AmiBlitz3.ab3@29243>   Dc.b $00,$01,$00,$00
0003E83D <AmiBlitz3.ab3@29244>   Dc.b $00,$00,$04
0003E843 <AmiBlitz3.ab3@29247> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003E89B <AmiBlitz3.ab3@29248> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003E89C <AmiBlitz3.ab3@29249> Even
0003E8A0 <AmiBlitz3.ab3@29251> sysdebug:            Dc.l $3F0
0003E8A4 <AmiBlitz3.ab3@29255> exelock              Ds.l 1
0003E8A8 <AmiBlitz3.ab3@29259> includesourceline    Dc.l 0
0003E8AC <AmiBlitz3.ab3@29260> linenum              Ds.l 1
0003E8B0 <AmiBlitz3.ab3@29261> globallinecount      Ds.l 1
0003E8CE <AmiBlitz3.ab3@29262> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003E8D2 <AmiBlitz3.ab3@29263> calc_option          Dc.l 1
0003E8D6 <AmiBlitz3.ab3@29264> versioninformation   Dc.l $00
0003E8DA <AmiBlitz3.ab3@29265> number_of_builds     Dc.l $00
0003E8DC <AmiBlitz3.ab3@29268> BSS
0003E8DE <AmiBlitz3.ab3@29269> debugnest            Ds.w 1
0003E8E2 <AmiBlitz3.ab3@29270> instringf            Ds.l 1
0003E8E6 <AmiBlitz3.ab3@29271> funcscanon           Ds.l 1
0003E8FA <AmiBlitz3.ab3@29272> storedebugmode       Ds.b 20
0003E8FE <AmiBlitz3.ab3@29273> firsttimepref        Ds.l 1
0003E8FF <AmiBlitz3.ab3@29274> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003E900 <AmiBlitz3.ab3@29275> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003E902 <AmiBlitz3.ab3@29276> nostringopt          Ds.w 1
0003E982 <AmiBlitz3.ab3@29277> path2:               Ds.l 32
0003E986 <AmiBlitz3.ab3@29278> typebase             Dc.l 0
0003E988 <AmiBlitz3.ab3@29279> doublepeek           Dc.w 0
0003E98C <AmiBlitz3.ab3@29280> lastoffset           Dc.l 0
0003E98E <AmiBlitz3.ab3@29281> firsttime            Dc.w 0
0003E992 <AmiBlitz3.ab3@29282> lastdestpointer      Dc.l 0
0003E996 <AmiBlitz3.ab3@29283> prevwritedat         Dc.l 0
0003E99A <AmiBlitz3.ab3@29284> lastsourceline       Dc.l 0
0003E99E <AmiBlitz3.ab3@29285> lastwritedat         Dc.l 0
0003E9A0 <AmiBlitz3.ab3@29286> makeexec             Dc.w 0
0003E9A2 <AmiBlitz3.ab3@29287> makeexec_remember    Dc.w 0
0003E9A6 <AmiBlitz3.ab3@29288> sharebase            Ds.l 1
0003E9AA <AmiBlitz3.ab3@29289> tempa7               Ds.l 1
0003E9AC <AmiBlitz3.ab3@29290> incnif               Ds.w 1
0003E9B0 <AmiBlitz3.ab3@29291> tempstore            Ds.l 1
0003E9B4 <AmiBlitz3.ab3@29292> result               Ds.l 1
0003E9B6 <AmiBlitz3.ab3@29293> automode             Ds.w 1
0003E9B8 <AmiBlitz3.ab3@29294> stackcorrect         Ds.w 1
0003E9BA <AmiBlitz3.ab3@29295> formode              Ds.w 1
0003E9BE <AmiBlitz3.ab3@29296> limitregs            Ds.l 1
0003E9C0 <AmiBlitz3.ab3@29297> onestep              Ds.w 1
0003E9C4 <AmiBlitz3.ab3@29298> reqmode              Ds.l 1
0003EA64 <AmiBlitz3.ab3@29299> inctab               Ds.l 40
0003EA66 <AmiBlitz3.ab3@29300> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003EA6A <AmiBlitz3.ab3@29301> includeline          Ds.l 1
0003EA6E <AmiBlitz3.ab3@29302> morememadd           Ds.l 1
0003EA70 <AmiBlitz3.ab3@29303> objectcount          Ds.w 1
0003EA74 <AmiBlitz3.ab3@29304> savefuncspace        Ds.l 1
0003EA78 <AmiBlitz3.ab3@29305> lasttrap1            Ds.l 1
0003EA7C <AmiBlitz3.ab3@29306> currentfunccall      Ds.l 1
0003EA7D <AmiBlitz3.ab3@29307> skipfunc             Ds.b 1
0003EA7E <AmiBlitz3.ab3@29308> resdisable           Ds.b 1
0003EA7F <AmiBlitz3.ab3@29309> skiptoggle           Ds.b 1
0003EA80 <AmiBlitz3.ab3@29310> developobject        Ds.b 1
0003EA82 <AmiBlitz3.ab3@29311> iniffcommand         Ds.w 1
0003EA84 <AmiBlitz3.ab3@29312> startoffsetmore      Ds.w 1
0003EA86 <AmiBlitz3.ab3@29313> olddebugmode         Ds.w 1
0003EA8A <AmiBlitz3.ab3@29314> fpucodeglobal        Ds.l 1
0003EA8E <AmiBlitz3.ab3@29315> fpucodelocal         Ds.l 1
0003EA92 <AmiBlitz3.ab3@29316> maxregs              Ds.l 1
0003EA96 <AmiBlitz3.ab3@29317> fpucode              Ds.l 1
0003EA98 <AmiBlitz3.ab3@29318> firstmline           Ds.w 1
0003EAD8 <AmiBlitz3.ab3@29319> regtable             Ds.l 16
0003EADA <AmiBlitz3.ab3@29320> exdebug              Ds.w 1
0003EADC <AmiBlitz3.ab3@29321> a2offset2            Ds.w 1
0003EAE0 <AmiBlitz3.ab3@29322> parnumtemp           Ds.l 1
0003EAE1 <AmiBlitz3.ab3@29323> doimmediate          Ds.b 1
0003EAE2 <AmiBlitz3.ab3@29324> notypecheck          Ds.b 1
0003EAE4 <AmiBlitz3.ab3@29325> vartype              Ds.w 1
0003EAE5 <AmiBlitz3.ab3@29326> peekaddrsize         Ds.b 1
0003EAE6 <AmiBlitz3.ab3@29327> declare2             Ds.b 1
0003EAE8 <AmiBlitz3.ab3@29328> parameternum         Ds.w 1
0003EAEC <AmiBlitz3.ab3@29329> lasttoken            Ds.l 1
0003EAEE <AmiBlitz3.ab3@29330> newvariable          Ds.w 1
0003EAEF <AmiBlitz3.ab3@29331> declare              Ds.b 1
0003EAF0 <AmiBlitz3.ab3@29332> typecheck            Ds.b 1
0003EAF1 <AmiBlitz3.ab3@29333> nowdeclare           Ds.b 1
0003EAF2 <AmiBlitz3.ab3@29334> dimkeep              Ds.b 1
0003EAF3 <AmiBlitz3.ab3@29335> a4a5store            Ds.b 1
0003EAF4 <AmiBlitz3.ab3@29336> ___freetouse         Ds.b 1
0003EAF8 <AmiBlitz3.ab3@29337> firstiffstore        Ds.l 1
0003EAFC <AmiBlitz3.ab3@29338> destpointer2         Ds.l 1
0003EB00 <AmiBlitz3.ab3@29339> stackaddr            Ds.l 1
0003EC04 <AmiBlitz3.ab3@29340> allowtab             Ds.b 260
0003ED04 <AmiBlitz3.ab3@29341> templine             Ds.b 256
0003ED06 <AmiBlitz3.ab3@29342> thenmode             Ds.w 1
0003ED08 <AmiBlitz3.ab3@29343> temp                 Ds.w 1
0003ED0A <AmiBlitz3.ab3@29344> tempregnum           Ds.w 1
0003ED0E <AmiBlitz3.ab3@29346> numlines2            Ds.l 1
0003ED12 <AmiBlitz3.ab3@29347> numlines             Ds.l 1
0003ED14 <AmiBlitz3.ab3@29348> exmac                Ds.w 1
0003ED16 <AmiBlitz3.ab3@29349> returncode           Ds.w 1
0003ED1A <AmiBlitz3.ab3@29350> fp0iff               Ds.l 1
0003ED1E <AmiBlitz3.ab3@29351> fp0addr              Ds.l 1
0003ED20 <AmiBlitz3.ab3@29352> fp0mode              Ds.w 1
0003ED22 <AmiBlitz3.ab3@29353> fp0var               Ds.w 1
0003ED24 <AmiBlitz3.ab3@29354> fastfunc             Ds.w 1
0003ED26 <AmiBlitz3.ab3@29355> retmode              Ds.w 1
0003ED28 <AmiBlitz3.ab3@29356> parnum               Ds.w 1
0003ED2A <AmiBlitz3.ab3@29357> regmask              Ds.w 1
0003ED2C <AmiBlitz3.ab3@29358> regnumfunc           Ds.w 1
0003ED2E <AmiBlitz3.ab3@29359> libmode              Ds.w 1
0003ED32 <AmiBlitz3.ab3@29360> oldline              Ds.l 1
0003ED36 <AmiBlitz3.ab3@29361> sourceline3          Ds.l 1
0003EDFE <AmiBlitz3.ab3@29362> debugstore           Ds.b 200
0003EE02 <AmiBlitz3.ab3@29363> deststore            Ds.l 1
0003EE06 <AmiBlitz3.ab3@29365> loada                Ds.l 1
0003EE0A <AmiBlitz3.ab3@29367> currtype             Ds.l 1
0003EE0E <AmiBlitz3.ab3@29368> arrayoffset          Ds.l 1
0003EE12 <AmiBlitz3.ab3@29369> lastlabel            Ds.l 1
0003EE16 <AmiBlitz3.ab3@29370> curtemplabel         Ds.l 1
0003EE1A <AmiBlitz3.ab3@29371> sourceline2          Ds.l 1
0003EF1A <AmiBlitz3.ab3@29372> chartab              Ds.b 256
0003EF92 <AmiBlitz3.ab3@29373> tempspace            Ds.b 120
000BEFA2 <AmiBlitz3.ab3@29374> instrtab             Ds.l 65538*2
000C6FA2 <AmiBlitz3.ab3@29376> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E6FA6 <AmiBlitz3.ab3@29377> replacedat           Ds.w 65538
000EEFA6 <AmiBlitz3.ab3@29378> variablehash         Ds.l 8192
000EEFAA <AmiBlitz3.ab3@29379> newinitaddr          Ds.l 1
000EEFAE <AmiBlitz3.ab3@29380> realbssend           Ds.l 1
000EEFB0 <AmiBlitz3.ab3@29381> saved0               Ds.w 1
000EF030 <AmiBlitz3.ab3@29382> lastpath             Ds.b 128
000EF0B0 <AmiBlitz3.ab3@29383> lastpath2            Ds.b 128
000EF178 <AmiBlitz3.ab3@29384> fpustackbase         Ds.w 100
000EF17C <AmiBlitz3.ab3@29385> 
000EF17E <AmiBlitz3.ab3@29386> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF182 <AmiBlitz3.ab3@29387> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF186 <AmiBlitz3.ab3@29388> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF18A <AmiBlitz3.ab3@29389> rightsidetype        Dc.l 0  ; same as above but right side
000EF18E <AmiBlitz3.ab3@29392> trap15temp           Ds.l 1
000EF192 <AmiBlitz3.ab3@29393> trap15temp2          Ds.l 1
000EF196 <AmiBlitz3.ab3@29394> templibend           Ds.l 1
000EF19A <AmiBlitz3.ab3@29395> tempdata1start       Ds.l 1
000EF19E <AmiBlitz3.ab3@29396> stacktrack           Ds.l 1
000EF1A2 <AmiBlitz3.ab3@29397> pad                  Ds.l 1
000EF2A2 <AmiBlitz3.ab3@29398> includetemp          Ds.b 256
000EFCA2 <AmiBlitz3.ab3@29399> includetemp2         Ds.b 256*10
000EFCA4 <AmiBlitz3.ab3@29400> funccall             Ds.w 1
000EFCA8 <AmiBlitz3.ab3@29403> ptr_resfile          Ds.l 1
000EFCAA <AmiBlitz3.ab3@29404> CalculatorButtonBinFlag:    Ds.w 1
000EFCAC <AmiBlitz3.ab3@29405> CalculatorButtonDecFlag:    Ds.w 1
000EFCB0 <AmiBlitz3.ab3@29406> ped_startup_addr:    Ds.l 1
000EFCB1 <AmiBlitz3.ab3@29407> start_without_libs:  Ds.b 1
000EFCB2 <AmiBlitz3.ab3@29408> skip_bytes:          Ds.b 1
000EFCB6 <AmiBlitz3.ab3@29409> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EFCBA <AmiBlitz3.ab3@29410> beforeparameterfetch Ds.l 1
000EFCBE <AmiBlitz3.ab3@29411> typetocast           Ds.l 1
000EFCC2 <AmiBlitz3.ab3@29412> errorcounter         Ds.l 1
000EFCC3 <AmiBlitz3.ab3@29413> iserror              Ds.b 1
000EFCC4 <AmiBlitz3.ab3@29414> Even
000EFCC8 <AmiBlitz3.ab3@29416> CLIMode:             Dc.l 0
000EFCCC <AmiBlitz3.ab3@29417> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000EFCD0 <AmiBlitz3.ab3@29418> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
