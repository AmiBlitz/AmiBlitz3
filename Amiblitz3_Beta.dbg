00000008 <AmiBlitz3.ab2@0> 
00000014 <AmiBlitz3.ab2@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab2@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab2@65> !basic
000000AC <AmiBlitz3.ab2@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab2@71> CLIMode     = False
000000C8 <AmiBlitz3.ab2@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab2@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab2@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab2@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.bb2@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002E6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000036A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
00000384 <error.include.bb2@128> XINCLUDE "dos.include.bb2"
000003BC <error.include.bb2@129> XINCLUDE "dos.include.bb2"
0000041C <error.include.bb2@130> XINCLUDE "dos.include.bb2"
0000042A <error.include.bb2@132> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
00000446 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
00000454 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
0000047C <error.include.bb2@136> XINCLUDE "dos.include.bb2"
0000048A <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000492 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
000004C4 <error.include.bb2@140> XINCLUDE "dos.include.bb2"
000004DE <error.include.bb2@145> XINCLUDE "dos.include.bb2"
00000516 <error.include.bb2@146> XINCLUDE "dos.include.bb2"
0000051C <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000560 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005A8 <error.include.bb2@149> XINCLUDE "dos.include.bb2"
000005B2 <error.include.bb2@153> XINCLUDE "dos.include.bb2"
000005CA <error.include.bb2@155> XINCLUDE "dos.include.bb2"
00000604 <error.include.bb2@194> XINCLUDE "dos.include.bb2"
0000060C <error.include.bb2@196> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@198> XINCLUDE "dos.include.bb2"
0000068E <error.include.bb2@199> XINCLUDE "dos.include.bb2"
0000069C <error.include.bb2@201> XINCLUDE "dos.include.bb2"
000006AA <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000006B8 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000006C6 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
00000726 <error.include.bb2@205> XINCLUDE "dos.include.bb2"
00000734 <error.include.bb2@206> XINCLUDE "dos.include.bb2"
0000076A <error.include.bb2@209> XINCLUDE "dos.include.bb2"
00000774 <error.include.bb2@213> XINCLUDE "dos.include.bb2"
00000790 <error.include.bb2@214> XINCLUDE "dos.include.bb2"
00000790 <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
00000790 <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
00000790 <useful.include.bb2@1> XINCLUDE "dos.include.bb2"
000007BE <useful.include.bb2@220> XINCLUDE "dos.include.bb2"
000007C8 <useful.include.bb2@221> XINCLUDE "dos.include.bb2"
000007DC <useful.include.bb2@222> XINCLUDE "dos.include.bb2"
000007E4 <useful.include.bb2@223> XINCLUDE "dos.include.bb2"
0000080C <useful.include.bb2@224> XINCLUDE "dos.include.bb2"
00000832 <useful.include.bb2@225> XINCLUDE "dos.include.bb2"
00000852 <useful.include.bb2@228> XINCLUDE "dos.include.bb2"
00000860 <useful.include.bb2@229> XINCLUDE "dos.include.bb2"
00000886 <useful.include.bb2@230> XINCLUDE "dos.include.bb2"
0000088E <useful.include.bb2@233> XINCLUDE "dos.include.bb2"
00000896 <useful.include.bb2@234> XINCLUDE "dos.include.bb2"
0000089C <useful.include.bb2@235> XINCLUDE "dos.include.bb2"
000008B8 <useful.include.bb2@236> XINCLUDE "dos.include.bb2"
000008DC <useful.include.bb2@237> XINCLUDE "dos.include.bb2"
000008F0 <useful.include.bb2@238> XINCLUDE "dos.include.bb2"
000008F6 <useful.include.bb2@239> XINCLUDE "dos.include.bb2"
00000940 <useful.include.bb2@240> XINCLUDE "dos.include.bb2"
00000942 <useful.include.bb2@241> XINCLUDE "dos.include.bb2"
00000950 <useful.include.bb2@243> XINCLUDE "dos.include.bb2"
00000970 <useful.include.bb2@245> XINCLUDE "dos.include.bb2"
000009CE <useful.include.bb2@246> XINCLUDE "dos.include.bb2"
000009D4 <useful.include.bb2@247> XINCLUDE "dos.include.bb2"
000009E2 <useful.include.bb2@248> XINCLUDE "dos.include.bb2"
000009F6 <useful.include.bb2@249> XINCLUDE "dos.include.bb2"
00000A08 <useful.include.bb2@250> XINCLUDE "dos.include.bb2"
00000A16 <useful.include.bb2@251> XINCLUDE "dos.include.bb2"
00000A1C <useful.include.bb2@252> XINCLUDE "dos.include.bb2"
00000A28 <useful.include.bb2@253> XINCLUDE "dos.include.bb2"
00000A3C <useful.include.bb2@256> XINCLUDE "dos.include.bb2"
00000A50 <useful.include.bb2@257> XINCLUDE "dos.include.bb2"
00000A62 <useful.include.bb2@258> XINCLUDE "dos.include.bb2"
00000A70 <useful.include.bb2@259> XINCLUDE "dos.include.bb2"
00000A8E <useful.include.bb2@260> XINCLUDE "dos.include.bb2"
00000A94 <useful.include.bb2@261> XINCLUDE "dos.include.bb2"
00000AA8 <useful.include.bb2@265> XINCLUDE "dos.include.bb2"
00000AB2 <useful.include.bb2@266> XINCLUDE "dos.include.bb2"
00000ABA <useful.include.bb2@267> XINCLUDE "dos.include.bb2"
00000AD8 <useful.include.bb2@268> XINCLUDE "dos.include.bb2"
00000ADE <useful.include.bb2@269> XINCLUDE "dos.include.bb2"
00000B0A <useful.include.bb2@270> XINCLUDE "dos.include.bb2"
00000B10 <useful.include.bb2@272> XINCLUDE "dos.include.bb2"
00000B22 <useful.include.bb2@273> XINCLUDE "dos.include.bb2"
00000B3A <useful.include.bb2@274> XINCLUDE "dos.include.bb2"
00000B52 <useful.include.bb2@275> XINCLUDE "dos.include.bb2"
00000B70 <useful.include.bb2@276> XINCLUDE "dos.include.bb2"
00000B72 <useful.include.bb2@278> XINCLUDE "dos.include.bb2"
00000B80 <useful.include.bb2@279> XINCLUDE "dos.include.bb2"
00000BA6 <useful.include.bb2@280> XINCLUDE "dos.include.bb2"
00000C3A <useful.include.bb2@281> XINCLUDE "dos.include.bb2"
00000C48 <useful.include.bb2@283> XINCLUDE "dos.include.bb2"
00000C4E <useful.include.bb2@284> XINCLUDE "dos.include.bb2"
00000C78 <useful.include.bb2@285> XINCLUDE "dos.include.bb2"
00000C96 <useful.include.bb2@286> XINCLUDE "dos.include.bb2"
00000C96 <strptr.include.bb2@31> XINCLUDE "dos.include.bb2"
00000CC0 <strptr.include.bb2@33> XINCLUDE "dos.include.bb2"
00000CDA <strptr.include.bb2@84> XINCLUDE "dos.include.bb2"
00000CE4 <strptr.include.bb2@85> XINCLUDE "dos.include.bb2"
00000D34 <strptr.include.bb2@86> XINCLUDE "dos.include.bb2"
00000D38 <strptr.include.bb2@88> XINCLUDE "dos.include.bb2"
00000D66 <strptr.include.bb2@137> XINCLUDE "dos.include.bb2"
00000D70 <strptr.include.bb2@138> XINCLUDE "dos.include.bb2"
00000DC0 <strptr.include.bb2@139> XINCLUDE "dos.include.bb2"
00000DD4 <strptr.include.bb2@140> XINCLUDE "dos.include.bb2"
00000DE6 <strptr.include.bb2@141> XINCLUDE "dos.include.bb2"
00000E0E <strptr.include.bb2@142> XINCLUDE "dos.include.bb2"
00000E18 <strptr.include.bb2@143> XINCLUDE "dos.include.bb2"
00000E26 <strptr.include.bb2@144> XINCLUDE "dos.include.bb2"
00000E30 <strptr.include.bb2@145> XINCLUDE "dos.include.bb2"
00000E58 <strptr.include.bb2@146> XINCLUDE "dos.include.bb2"
00000E72 <strptr.include.bb2@147> XINCLUDE "dos.include.bb2"
00000E8A <strptr.include.bb2@151> XINCLUDE "dos.include.bb2"
00000EA4 <strptr.include.bb2@213> XINCLUDE "dos.include.bb2"
00000EAE <strptr.include.bb2@214> XINCLUDE "dos.include.bb2"
00000EBC <strptr.include.bb2@215> XINCLUDE "dos.include.bb2"
00000EEE <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00000F0C <strptr.include.bb2@218> XINCLUDE "dos.include.bb2"
00000F16 <strptr.include.bb2@219> XINCLUDE "dos.include.bb2"
00000F2C <strptr.include.bb2@221> XINCLUDE "dos.include.bb2"
00000F36 <strptr.include.bb2@222> XINCLUDE "dos.include.bb2"
00000F46 <strptr.include.bb2@223> XINCLUDE "dos.include.bb2"
00000F4E <strptr.include.bb2@224> XINCLUDE "dos.include.bb2"
00000F50 <strptr.include.bb2@226> XINCLUDE "dos.include.bb2"
00000F7E <strptr.include.bb2@227> XINCLUDE "dos.include.bb2"
00000F7E <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
00000F94 <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
00000FAE <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
00000FB8 <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
00000FDA <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
00000FFE <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
00001010 <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
00001028 <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
0000103C <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
0000104E <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
0000105E <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
00001064 <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
00001074 <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
00001084 <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
0000109E <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
000010A2 <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
000010BC <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
000010EC <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
000010F6 <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
00001100 <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
00001122 <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
00001146 <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
00001158 <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
00001170 <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
00001184 <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
00001196 <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
000011A6 <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
000011AC <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
000011BC <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
000011CC <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
000011E6 <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
000011EC <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
000011F2 <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
000011F6 <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
00001210 <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
00001218 <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
00001222 <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
00001238 <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
0000124C <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
00001270 <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
0000127E <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
00001288 <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
0000128E <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
00001298 <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
0000129E <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
000012BC <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
000012C4 <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
000012CE <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
000012EC <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
00001302 <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
00001316 <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
0000134A <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
00001358 <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
00001362 <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
00001368 <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
00001372 <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
00001376 <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
0000137C <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
00001396 <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
000013A0 <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
000013AA <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
000013C0 <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
000013D0 <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
000013DA <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
000013E0 <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
000013E4 <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
00001406 <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
0000140E <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
00001428 <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
00001432 <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
00001448 <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
0000145C <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
000014B2 <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
000014EC <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
000014FE <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
00001520 <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
00001526 <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
0000157C <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
000015B6 <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
000015BC <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
000015F6 <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
00001630 <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
00001642 <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
0000164C <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
00001652 <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
0000165C <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
00001670 <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
000016B6 <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
000016BE <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
000016DC <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
00001708 <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
00001726 <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
00001740 <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
0000175A <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
000017DC <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
000017F0 <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
00001808 <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
0000180E <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
00001826 <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
0000183C <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
00001856 <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
0000186A <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
00001878 <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
000018CE <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
00001904 <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
00001934 <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
000019BC <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
000019C2 <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
000019D0 <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
00001A26 <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
00001A5C <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
00001A8C <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
00001A92 <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
00001AAC <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00001ABA <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
00001AF4 <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
00001B2A <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
00001B5A <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
00001B68 <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
00001B72 <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
00001B78 <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
00001B82 <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00001B96 <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
00001B96 <dos.include.bb2@57> XINCLUDE "dos.include.bb2"
00001BAC <dos.include.bb2@60> XINCLUDE "dos.include.bb2"
00001BB4 <dos.include.bb2@78> XINCLUDE "dos.include.bb2"
00001BBC <dos.include.bb2@79> XINCLUDE "dos.include.bb2"
00001BE4 <dos.include.bb2@80> XINCLUDE "dos.include.bb2"
00001BEC <dos.include.bb2@81> XINCLUDE "dos.include.bb2"
00001C14 <dos.include.bb2@82> XINCLUDE "dos.include.bb2"
00001C3C <dos.include.bb2@83> XINCLUDE "dos.include.bb2"
00001C64 <dos.include.bb2@84> XINCLUDE "dos.include.bb2"
00001C6C <dos.include.bb2@85> XINCLUDE "dos.include.bb2"
00001C74 <dos.include.bb2@86> XINCLUDE "dos.include.bb2"
00001C7C <dos.include.bb2@87> XINCLUDE "dos.include.bb2"
00001C84 <dos.include.bb2@88> XINCLUDE "dos.include.bb2"
00001C8C <dos.include.bb2@89> XINCLUDE "dos.include.bb2"
00001C94 <dos.include.bb2@90> XINCLUDE "dos.include.bb2"
00001C9C <dos.include.bb2@91> XINCLUDE "dos.include.bb2"
00001CA4 <dos.include.bb2@92> XINCLUDE "dos.include.bb2"
00001CAC <dos.include.bb2@93> XINCLUDE "dos.include.bb2"
00001CCC <dos.include.bb2@94> XINCLUDE "dos.include.bb2"
00001CD4 <dos.include.bb2@95> XINCLUDE "dos.include.bb2"
00001CDC <dos.include.bb2@96> XINCLUDE "dos.include.bb2"
00001D04 <dos.include.bb2@98> XINCLUDE "dos.include.bb2"
00001D1A <dos.include.bb2@129> XINCLUDE "dos.include.bb2"
00001D26 <dos.include.bb2@130> XINCLUDE "dos.include.bb2"
00001D2A <dos.include.bb2@131> XINCLUDE "dos.include.bb2"
00001D40 <dos.include.bb2@144> XINCLUDE "dos.include.bb2"
00001D5A <dos.include.bb2@145> XINCLUDE "dos.include.bb2"
00001D70 <dos.include.bb2@146> XINCLUDE "dos.include.bb2"
00001D9A <dos.include.bb2@147> XINCLUDE "dos.include.bb2"
00001DA4 <dos.include.bb2@148> XINCLUDE "dos.include.bb2"
00001DAA <dos.include.bb2@149> XINCLUDE "dos.include.bb2"
00001DC0 <dos.include.bb2@162> XINCLUDE "dos.include.bb2"
00001DDA <dos.include.bb2@163> XINCLUDE "dos.include.bb2"
00001DF0 <dos.include.bb2@164> XINCLUDE "dos.include.bb2"
00001E1A <dos.include.bb2@165> XINCLUDE "dos.include.bb2"
00001E24 <dos.include.bb2@166> XINCLUDE "dos.include.bb2"
00001E2A <dos.include.bb2@167> XINCLUDE "dos.include.bb2"
00001E54 <dos.include.bb2@183> XINCLUDE "dos.include.bb2"
00001E60 <dos.include.bb2@184> XINCLUDE "dos.include.bb2"
00001E80 <dos.include.bb2@185> XINCLUDE "dos.include.bb2"
00001E8A <dos.include.bb2@186> XINCLUDE "dos.include.bb2"
00001E9A <dos.include.bb2@187> XINCLUDE "dos.include.bb2"
00001EAA <dos.include.bb2@188> XINCLUDE "dos.include.bb2"
00001EB4 <dos.include.bb2@190> XINCLUDE "dos.include.bb2"
00001ECE <dos.include.bb2@191> XINCLUDE "dos.include.bb2"
00001EE4 <dos.include.bb2@429> XINCLUDE "dos.include.bb2"
00001EF6 <dos.include.bb2@431> XINCLUDE "dos.include.bb2"
00001F70 <dos.include.bb2@432> XINCLUDE "dos.include.bb2"
00001F9A <dos.include.bb2@433> XINCLUDE "dos.include.bb2"
00001FB2 <dos.include.bb2@434> XINCLUDE "dos.include.bb2"
00001FC8 <dos.include.bb2@460> XINCLUDE "dos.include.bb2"
00001FDA <dos.include.bb2@461> XINCLUDE "dos.include.bb2"
00001FDE <dos.include.bb2@462> XINCLUDE "dos.include.bb2"
00001FF4 <dos.include.bb2@478> XINCLUDE "dos.include.bb2"
00001FF6 <dos.include.bb2@479> XINCLUDE "dos.include.bb2"
00002030 <dos.include.bb2@540> XINCLUDE "dos.include.bb2"
00002064 <dos.include.bb2@542> XINCLUDE "dos.include.bb2"
0000208A <dos.include.bb2@543> XINCLUDE "dos.include.bb2"
000020AA <dos.include.bb2@544> XINCLUDE "dos.include.bb2"
000020CA <dos.include.bb2@545> XINCLUDE "dos.include.bb2"
000020F4 <dos.include.bb2@660> XINCLUDE "dos.include.bb2"
0000210A <dos.include.bb2@661> XINCLUDE "dos.include.bb2"
00002114 <dos.include.bb2@662> XINCLUDE "dos.include.bb2"
0000213C <dos.include.bb2@663> XINCLUDE "dos.include.bb2"
00002142 <dos.include.bb2@664> XINCLUDE "dos.include.bb2"
0000216A <dos.include.bb2@665> XINCLUDE "dos.include.bb2"
00002194 <dos.include.bb2@667> XINCLUDE "dos.include.bb2"
000021B2 <dos.include.bb2@668> XINCLUDE "dos.include.bb2"
000021DC <dos.include.bb2@691> XINCLUDE "dos.include.bb2"
0000224C <dos.include.bb2@692> XINCLUDE "dos.include.bb2"
00002276 <dos.include.bb2@693> XINCLUDE "dos.include.bb2"
00002294 <dos.include.bb2@694> XINCLUDE "dos.include.bb2"
000022BE <dos.include.bb2@729> XINCLUDE "dos.include.bb2"
000022DE <dos.include.bb2@730> XINCLUDE "dos.include.bb2"
0000230A <dos.include.bb2@731> XINCLUDE "dos.include.bb2"
00002314 <dos.include.bb2@732> XINCLUDE "dos.include.bb2"
0000232E <dos.include.bb2@733> XINCLUDE "dos.include.bb2"
00002358 <dos.include.bb2@880> XINCLUDE "dos.include.bb2"
00002406 <dos.include.bb2@881> XINCLUDE "dos.include.bb2"
0000241C <dos.include.bb2@882> XINCLUDE "dos.include.bb2"
00002426 <dos.include.bb2@883> XINCLUDE "dos.include.bb2"
0000244E <dos.include.bb2@884> XINCLUDE "dos.include.bb2"
00002458 <dos.include.bb2@885> XINCLUDE "dos.include.bb2"
0000245E <dos.include.bb2@886> XINCLUDE "dos.include.bb2"
00002464 <dos.include.bb2@887> XINCLUDE "dos.include.bb2"
0000246A <dos.include.bb2@888> XINCLUDE "dos.include.bb2"
0000247C <dos.include.bb2@890> XINCLUDE "dos.include.bb2"
00002486 <dos.include.bb2@892> XINCLUDE "dos.include.bb2"
000024A0 <dos.include.bb2@893> XINCLUDE "dos.include.bb2"
000024DE <dos.include.bb2@914> XINCLUDE "dos.include.bb2"
000024E6 <dos.include.bb2@915> XINCLUDE "dos.include.bb2"
00002594 <dos.include.bb2@916> XINCLUDE "dos.include.bb2"
000025A8 <dos.include.bb2@917> XINCLUDE "dos.include.bb2"
000025EA <dos.include.bb2@918> XINCLUDE "dos.include.bb2"
0000260A <dos.include.bb2@920> XINCLUDE "dos.include.bb2"
00002614 <dos.include.bb2@921> XINCLUDE "dos.include.bb2"
00002630 <dos.include.bb2@922> XINCLUDE "dos.include.bb2"
0000266A <dos.include.bb2@974> XINCLUDE "dos.include.bb2"
00002672 <dos.include.bb2@975> XINCLUDE "dos.include.bb2"
00002720 <dos.include.bb2@976> XINCLUDE "dos.include.bb2"
00002756 <dos.include.bb2@977> XINCLUDE "dos.include.bb2"
00002776 <dos.include.bb2@978> XINCLUDE "dos.include.bb2"
00002794 <dos.include.bb2@979> XINCLUDE "dos.include.bb2"
000027B8 <dos.include.bb2@980> XINCLUDE "dos.include.bb2"
000027C2 <dos.include.bb2@982> XINCLUDE "dos.include.bb2"
000027DE <dos.include.bb2@983> XINCLUDE "dos.include.bb2"
00002818 <dos.include.bb2@1000> XINCLUDE "dos.include.bb2"
000028C6 <dos.include.bb2@1001> XINCLUDE "dos.include.bb2"
000028FE <dos.include.bb2@1002> XINCLUDE "dos.include.bb2"
0000291E <dos.include.bb2@1003> XINCLUDE "dos.include.bb2"
00002924 <dos.include.bb2@1004> XINCLUDE "dos.include.bb2"
00002944 <dos.include.bb2@1005> XINCLUDE "dos.include.bb2"
0000294E <dos.include.bb2@1006> XINCLUDE "dos.include.bb2"
00002968 <dos.include.bb2@1007> XINCLUDE "dos.include.bb2"
00002980 <dos.include.bb2@1008> XINCLUDE "dos.include.bb2"
0000298A <dos.include.bb2@1011> XINCLUDE "dos.include.bb2"
000029A6 <dos.include.bb2@1012> XINCLUDE "dos.include.bb2"
000029D0 <dos.include.bb2@1147> XINCLUDE "dos.include.bb2"
000029DE <dos.include.bb2@1149> XINCLUDE "dos.include.bb2"
00002AA4 <dos.include.bb2@1150> XINCLUDE "dos.include.bb2"
00002ACE <dos.include.bb2@1151> XINCLUDE "dos.include.bb2"
00002AF6 <dos.include.bb2@1153> XINCLUDE "dos.include.bb2"
00002B20 <dos.include.bb2@1154> XINCLUDE "dos.include.bb2"
00002B4A <dos.include.bb2@1156> XINCLUDE "dos.include.bb2"
00002B68 <dos.include.bb2@1157> XINCLUDE "dos.include.bb2"
00002B92 <dos.include.bb2@1175> XINCLUDE "dos.include.bb2"
00002BFE <dos.include.bb2@1177> XINCLUDE "dos.include.bb2"
00002C26 <dos.include.bb2@1178> XINCLUDE "dos.include.bb2"
00002C34 <dos.include.bb2@1179> XINCLUDE "dos.include.bb2"
00002C68 <dos.include.bb2@1180> XINCLUDE "dos.include.bb2"
00002C76 <dos.include.bb2@1183> XINCLUDE "dos.include.bb2"
00002C98 <dos.include.bb2@1189> XINCLUDE "dos.include.bb2"
00002CA6 <dos.include.bb2@1193> XINCLUDE "dos.include.bb2"
00002CCA <dos.include.bb2@1194> XINCLUDE "dos.include.bb2"
00002CF4 <dos.include.bb2@1195> XINCLUDE "dos.include.bb2"
00002D1E <dos.include.bb2@1198> XINCLUDE "dos.include.bb2"
00002D3C <dos.include.bb2@1199> XINCLUDE "dos.include.bb2"
00002D66 <dos.include.bb2@1260> XINCLUDE "dos.include.bb2"
00002DBE <dos.include.bb2@1261> XINCLUDE "dos.include.bb2"
00002DE8 <dos.include.bb2@1262> XINCLUDE "dos.include.bb2"
00002E06 <dos.include.bb2@1263> XINCLUDE "dos.include.bb2"
00002E1C <dos.include.bb2@1337> XINCLUDE "dos.include.bb2"
00002E22 <dos.include.bb2@1339> XINCLUDE "dos.include.bb2"
00002E2C <dos.include.bb2@1340> XINCLUDE "dos.include.bb2"
00002E36 <dos.include.bb2@1341> XINCLUDE "dos.include.bb2"
00002E54 <dos.include.bb2@1344> XINCLUDE "dos.include.bb2"
00002E5A <dos.include.bb2@1345> XINCLUDE "dos.include.bb2"
00002E60 <dos.include.bb2@1346> XINCLUDE "dos.include.bb2"
00002E70 <dos.include.bb2@1348> XINCLUDE "dos.include.bb2"
00002E76 <dos.include.bb2@1349> XINCLUDE "dos.include.bb2"
00002E7E <dos.include.bb2@1350> XINCLUDE "dos.include.bb2"
00002EA6 <dos.include.bb2@1351> XINCLUDE "dos.include.bb2"
00002EB0 <dos.include.bb2@1352> XINCLUDE "dos.include.bb2"
00002EBA <dos.include.bb2@1354> XINCLUDE "dos.include.bb2"
00002ECE <dos.include.bb2@1355> XINCLUDE "dos.include.bb2"
00002EE4 <dos.include.bb2@1460> XINCLUDE "dos.include.bb2"
00002EEA <dos.include.bb2@1466> XINCLUDE "dos.include.bb2"
00002F0E <dos.include.bb2@1467> XINCLUDE "dos.include.bb2"
00002F32 <dos.include.bb2@1468> XINCLUDE "dos.include.bb2"
00002F56 <dos.include.bb2@1469> XINCLUDE "dos.include.bb2"
00002F5C <dos.include.bb2@1470> XINCLUDE "dos.include.bb2"
00002F88 <dos.include.bb2@1471> XINCLUDE "dos.include.bb2"
00002F8A <dos.include.bb2@1472> XINCLUDE "dos.include.bb2"
00002FB8 <dos.include.bb2@1473> XINCLUDE "dos.include.bb2"
00002FE2 <dos.include.bb2@1489> XINCLUDE "dos.include.bb2"
00003066 <dos.include.bb2@1492> XINCLUDE "dos.include.bb2"
0000312E <dos.include.bb2@1493> XINCLUDE "dos.include.bb2"
00003138 <dos.include.bb2@1495> XINCLUDE "dos.include.bb2"
00003182 <dos.include.bb2@1496> XINCLUDE "dos.include.bb2"
000031CE <dos.include.bb2@1498> XINCLUDE "dos.include.bb2"
00003206 <dos.include.bb2@1499> XINCLUDE "dos.include.bb2"
00003218 <dos.include.bb2@1500> XINCLUDE "dos.include.bb2"
0000322E <dos.include.bb2@1501> XINCLUDE "dos.include.bb2"
00003234 <dos.include.bb2@1502> XINCLUDE "dos.include.bb2"
0000324A <dos.include.bb2@1503> XINCLUDE "dos.include.bb2"
0000327E <dos.include.bb2@1505> XINCLUDE "dos.include.bb2"
00003284 <dos.include.bb2@1506> XINCLUDE "dos.include.bb2"
0000328E <dos.include.bb2@1508> XINCLUDE "dos.include.bb2"
000032A8 <dos.include.bb2@1509> XINCLUDE "dos.include.bb2"
000032F2 <dos.include.bb2@1539> XINCLUDE "dos.include.bb2"
00003328 <dos.include.bb2@1541> XINCLUDE "dos.include.bb2"
0000334C <dos.include.bb2@1542> XINCLUDE "dos.include.bb2"
00003356 <dos.include.bb2@1543> XINCLUDE "dos.include.bb2"
0000337E <dos.include.bb2@1544> XINCLUDE "dos.include.bb2"
000033C6 <dos.include.bb2@1547> XINCLUDE "dos.include.bb2"
0000349C <dos.include.bb2@1549> XINCLUDE "dos.include.bb2"
000034C6 <dos.include.bb2@1550> XINCLUDE "dos.include.bb2"
000034E6 <dos.include.bb2@1551> XINCLUDE "dos.include.bb2"
00003520 <dos.include.bb2@1570> XINCLUDE "dos.include.bb2"
00003526 <dos.include.bb2@1572> XINCLUDE "dos.include.bb2"
0000352C <dos.include.bb2@1573> XINCLUDE "dos.include.bb2"
00003534 <dos.include.bb2@1574> XINCLUDE "dos.include.bb2"
0000356A <dos.include.bb2@1575> XINCLUDE "dos.include.bb2"
00003578 <dos.include.bb2@1576> XINCLUDE "dos.include.bb2"
00003582 <dos.include.bb2@1577> XINCLUDE "dos.include.bb2"
000035AE <dos.include.bb2@1578> XINCLUDE "dos.include.bb2"
000035BC <dos.include.bb2@1579> XINCLUDE "dos.include.bb2"
000035C6 <dos.include.bb2@1580> XINCLUDE "dos.include.bb2"
000035F4 <dos.include.bb2@1582> XINCLUDE "dos.include.bb2"
00003672 <dos.include.bb2@1585> XINCLUDE "dos.include.bb2"
000036C4 <dos.include.bb2@1588> XINCLUDE "dos.include.bb2"
000036D6 <dos.include.bb2@1589> XINCLUDE "dos.include.bb2"
00003744 <dos.include.bb2@1590> XINCLUDE "dos.include.bb2"
0000374A <dos.include.bb2@1591> XINCLUDE "dos.include.bb2"
00003796 <dos.include.bb2@1592> XINCLUDE "dos.include.bb2"
00003864 <dos.include.bb2@1596> XINCLUDE "dos.include.bb2"
00003944 <dos.include.bb2@1597> XINCLUDE "dos.include.bb2"
000039B0 <dos.include.bb2@1599> XINCLUDE "dos.include.bb2"
000039B6 <dos.include.bb2@1600> XINCLUDE "dos.include.bb2"
000039D2 <dos.include.bb2@1601> XINCLUDE "dos.include.bb2"
000039E0 <dos.include.bb2@1604> XINCLUDE "dos.include.bb2"
000039E6 <dos.include.bb2@1605> XINCLUDE "dos.include.bb2"
000039F8 <dos.include.bb2@1608> XINCLUDE "dos.include.bb2"
00003A0E <dos.include.bb2@1609> XINCLUDE "dos.include.bb2"
00003A18 <dos.include.bb2@1610> XINCLUDE "dos.include.bb2"
00003A34 <dos.include.bb2@1611> XINCLUDE "dos.include.bb2"
00003A5E <dos.include.bb2@2187> XINCLUDE "dos.include.bb2"
00003A72 <dos.include.bb2@2188> XINCLUDE "dos.include.bb2"
00003AB0 <dos.include.bb2@2189> XINCLUDE "dos.include.bb2"
00003B96 <dos.include.bb2@2190> XINCLUDE "dos.include.bb2"
00003B9C <dos.include.bb2@2191> XINCLUDE "dos.include.bb2"
00003BEC <dos.include.bb2@2192> XINCLUDE "dos.include.bb2"
00003C16 <dos.include.bb2@2193> XINCLUDE "dos.include.bb2"
00003C34 <dos.include.bb2@2194> XINCLUDE "dos.include.bb2"
00003C5E <dos.include.bb2@2218> XINCLUDE "dos.include.bb2"
00003C72 <dos.include.bb2@2219> XINCLUDE "dos.include.bb2"
00003CB0 <dos.include.bb2@2220> XINCLUDE "dos.include.bb2"
00003D96 <dos.include.bb2@2221> XINCLUDE "dos.include.bb2"
00003D9C <dos.include.bb2@2222> XINCLUDE "dos.include.bb2"
00003E0E <dos.include.bb2@2223> XINCLUDE "dos.include.bb2"
00003E38 <dos.include.bb2@2224> XINCLUDE "dos.include.bb2"
00003E56 <dos.include.bb2@2225> XINCLUDE "dos.include.bb2"
00003E90 <dos.include.bb2@2251> XINCLUDE "dos.include.bb2"
00003EC8 <dos.include.bb2@2252> XINCLUDE "dos.include.bb2"
00003F20 <dos.include.bb2@2253> XINCLUDE "dos.include.bb2"
00003F84 <dos.include.bb2@2254> XINCLUDE "dos.include.bb2"
00003FAE <dos.include.bb2@2256> XINCLUDE "dos.include.bb2"
00003FCE <dos.include.bb2@2257> XINCLUDE "dos.include.bb2"
00003FF8 <dos.include.bb2@2274> XINCLUDE "dos.include.bb2"
00003FFE <dos.include.bb2@2275> XINCLUDE "dos.include.bb2"
00004014 <dos.include.bb2@2276> XINCLUDE "dos.include.bb2"
0000401E <dos.include.bb2@2277> XINCLUDE "dos.include.bb2"
00004024 <dos.include.bb2@2278> XINCLUDE "dos.include.bb2"
00004034 <dos.include.bb2@2279> XINCLUDE "dos.include.bb2"
0000403E <dos.include.bb2@2281> XINCLUDE "dos.include.bb2"
00004058 <dos.include.bb2@2282> XINCLUDE "dos.include.bb2"
00004086 <dos.include.bb2@2302> XINCLUDE "dos.include.bb2"
000040A0 <dos.include.bb2@2303> XINCLUDE "dos.include.bb2"
000040BE <dos.include.bb2@2304> XINCLUDE "dos.include.bb2"
000040C8 <dos.include.bb2@2305> XINCLUDE "dos.include.bb2"
000040D8 <dos.include.bb2@2306> XINCLUDE "dos.include.bb2"
000040E0 <dos.include.bb2@2307> XINCLUDE "dos.include.bb2"
000040E8 <dos.include.bb2@2309> XINCLUDE "dos.include.bb2"
00004102 <dos.include.bb2@2310> XINCLUDE "dos.include.bb2"
00004130 <dos.include.bb2@2516> XINCLUDE "dos.include.bb2"
00004152 <dos.include.bb2@2517> XINCLUDE "dos.include.bb2"
0000415A <dos.include.bb2@2518> XINCLUDE "dos.include.bb2"
00004168 <dos.include.bb2@2519> XINCLUDE "dos.include.bb2"
00004182 <dos.include.bb2@2521> XINCLUDE "dos.include.bb2"
000041B0 <dos.include.bb2@2540> XINCLUDE "dos.include.bb2"
000041C4 <dos.include.bb2@2541> XINCLUDE "dos.include.bb2"
000041F8 <dos.include.bb2@2542> XINCLUDE "dos.include.bb2"
00004212 <dos.include.bb2@2544> XINCLUDE "dos.include.bb2"
0000421A <dos.include.bb2@2545> XINCLUDE "dos.include.bb2"
00004228 <dos.include.bb2@2546> XINCLUDE "dos.include.bb2"
00004242 <dos.include.bb2@2548> XINCLUDE "dos.include.bb2"
0000426C <dos.include.bb2@2684> XINCLUDE "dos.include.bb2"
00004278 <dos.include.bb2@2686> XINCLUDE "dos.include.bb2"
00004298 <dos.include.bb2@2687> XINCLUDE "dos.include.bb2"
000042BE <dos.include.bb2@2688> XINCLUDE "dos.include.bb2"
000042EA <dos.include.bb2@2689> XINCLUDE "dos.include.bb2"
00004302 <dos.include.bb2@2690> XINCLUDE "dos.include.bb2"
00004310 <dos.include.bb2@2692> XINCLUDE "dos.include.bb2"
00004316 <dos.include.bb2@2693> XINCLUDE "dos.include.bb2"
00004322 <dos.include.bb2@2694> XINCLUDE "dos.include.bb2"
00004328 <dos.include.bb2@2696> XINCLUDE "dos.include.bb2"
00004334 <dos.include.bb2@2697> XINCLUDE "dos.include.bb2"
00004344 <dos.include.bb2@2699> XINCLUDE "dos.include.bb2"
0000434A <dos.include.bb2@2700> XINCLUDE "dos.include.bb2"
00004356 <dos.include.bb2@2701> XINCLUDE "dos.include.bb2"
00004360 <dos.include.bb2@2703> XINCLUDE "dos.include.bb2"
0000437A <dos.include.bb2@2704> XINCLUDE "dos.include.bb2"
0000437A <AmiBlitz3.ab2@79> XINCLUDE "dos.include.bb2"
00004388 <AmiBlitz3.ab2@81> If dos_FromCLI{}
0000438E <AmiBlitz3.ab2@82>   CLIMode.l=True
0000439A <AmiBlitz3.ab2@83>   error_SetFlags{#error_stdout}
0000439A <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000043C2 <common.ab3@38> XINCLUDE "/Shared/common.ab3"
000043C8 <common.ab3@250> XINCLUDE "/Shared/common.ab3"
000043CA <common.ab3@251> XINCLUDE "/Shared/common.ab3"
0000455A <common.ab3@252> XINCLUDE "/Shared/common.ab3"
0000455E <common.ab3@253> XINCLUDE "/Shared/common.ab3"
00004562 <common.ab3@255> XINCLUDE "/Shared/common.ab3"
00004566 <common.ab3@256> XINCLUDE "/Shared/common.ab3"
0000456A <common.ab3@258> XINCLUDE "/Shared/common.ab3"
0000456E <common.ab3@259> XINCLUDE "/Shared/common.ab3"
00004572 <common.ab3@260> XINCLUDE "/Shared/common.ab3"
00004576 <common.ab3@261> XINCLUDE "/Shared/common.ab3"
0000457A <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000457E <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004582 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004586 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
0000458A <common.ab3@266> XINCLUDE "/Shared/common.ab3"
0000458E <common.ab3@268> XINCLUDE "/Shared/common.ab3"
00004592 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
00004596 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
0000459A <common.ab3@272> XINCLUDE "/Shared/common.ab3"
0000459E <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000045A2 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000045A6 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000045AA <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000045AE <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000045B2 <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000045B6 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000045BE <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000045C2 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000045C4 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000045C8 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000045CA <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000045CE <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000045D2 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000045D6 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000045DA <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000045DE <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000045E6 <common.ab3@292> XINCLUDE "/Shared/common.ab3"
000045EE <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000045F2 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000045F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000045FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000045FC <common.ab3@298> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
0000470A <common.ab3@303> XINCLUDE "/Shared/common.ab3"
0000470E <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004712 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004714 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
00004716 <common.ab3@308> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@310> XINCLUDE "/Shared/common.ab3"
0000471A <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000471B <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000471C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000471E <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004722 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@321> XINCLUDE "/Shared/common.ab3"
00004726 <common.ab3@323> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@325> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004730 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004732 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004736 <common.ab3@334> XINCLUDE "/Shared/common.ab3"
00004738 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
0000473A <common.ab3@336> XINCLUDE "/Shared/common.ab3"
0000473E <common.ab3@339> XINCLUDE "/Shared/common.ab3"
00004740 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
00004742 <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004744 <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004746 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004748 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
0000474C <common.ab3@347> XINCLUDE "/Shared/common.ab3"
0000474E <common.ab3@348> XINCLUDE "/Shared/common.ab3"
00004750 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
00004752 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004754 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004758 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
0000475A <common.ab3@361> XINCLUDE "/Shared/common.ab3"
0000475C <common.ab3@363> XINCLUDE "/Shared/common.ab3"
0000475E <common.ab3@365> XINCLUDE "/Shared/common.ab3"
00004760 <common.ab3@366> XINCLUDE "/Shared/common.ab3"
00004762 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004766 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004768 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000476A <common.ab3@370> XINCLUDE "/Shared/common.ab3"
0000476C <common.ab3@371> XINCLUDE "/Shared/common.ab3"
0000476E <common.ab3@372> XINCLUDE "/Shared/common.ab3"
00004770 <common.ab3@374> XINCLUDE "/Shared/common.ab3"
00004772 <common.ab3@376> XINCLUDE "/Shared/common.ab3"
00004774 <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
0000477A <common.ab3@380> XINCLUDE "/Shared/common.ab3"
000047A8 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
000047B2 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
000047B6 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
000047B8 <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000047BA <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000047BE <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000047C2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000047CB <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000047CE <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000047FB <common.ab3@391> XINCLUDE "/Shared/common.ab3"
0000483B <common.ab3@392> XINCLUDE "/Shared/common.ab3"
00004847 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
00004897 <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048A3 <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048F3 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000049EF <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000049F1 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
00004AB1 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
00004AF1 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004AF3 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004AF4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004AF8 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004AFC <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004B00 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
00004B04 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004B08 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B0C <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004B10 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004B14 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004B18 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004B1C <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004B20 <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004B24 <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004B28 <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004B2C <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004B30 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004B34 <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004B38 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004B3C <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004B46 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004B4A <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004B4E <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004B50 <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004B52 <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004B70 <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004B74 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004B76 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004B7A <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004BAE <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004BB2 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004BC0 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004BD2 <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004BD4 <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004BE8 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004BFE <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C14 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004C40 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004C44 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004C48 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004C4C <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004C50 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004C54 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004C58 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004C5C <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004C60 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004C64 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004C68 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004C6C <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004C86 <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004C8A <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004C8C <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004C90 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004C92 <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004C96 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004C9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004CAA <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004CAE <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004CB6 <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004CBA <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004CC6 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004CC8 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004CCC <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004CCE <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004CD2 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004CDA <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004CEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004D02 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004D16 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004D18 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004D1C <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004D20 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004D24 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004D28 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004D2C <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004D34 <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004D35 <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004D37 <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004D4A <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004D4E <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004D52 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004D53 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004D54 <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004D56 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004D5A <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004D5E <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004D62 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004D6A <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004D6E <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004D90 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004D91 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004D95 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004D99 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004D9D <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004DA1 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004DA2 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004DA6 <common.ab3@556> XINCLUDE "/Shared/common.ab3"
00004DAA <common.ab3@557> XINCLUDE "/Shared/common.ab3"
00004DAE <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004DB2 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004DB7 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004DC0 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004DCC <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004DD8 <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004DE4 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@584> XINCLUDE "/Shared/common.ab3"
00004DF0 <common.ab3@585> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004DFC <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004E08 <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004E10 <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004E14 <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004E14 <AmiBlitz3.ab2@86> XINCLUDE "/Shared/common.ab3"
00004E14 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E14 <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E32 <hashmap.include.bb2@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E3A <hashmap.include.bb2@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E68 <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E98 <hashmap.include.bb2@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EA8 <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EB2 <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EB8 <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EDA <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EF8 <hashmap.include.bb2@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F0A <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F32 <hashmap.include.bb2@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F38 <hashmap.include.bb2@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F52 <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6A <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F7C <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F8A <hashmap.include.bb2@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FBE <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCC <hashmap.include.bb2@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD6 <hashmap.include.bb2@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE8 <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00005022 <hashmap.include.bb2@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00005032 <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00005038 <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00005048 <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00005058 <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00005066 <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005076 <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000509A <hashmap.include.bb2@68> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A6 <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B4 <hashmap.include.bb2@71> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C2 <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
000050D0 <hashmap.include.bb2@73> XINCLUDE "/Shared/preprocessor.include.ab3"
000050DE <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005114 <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00005122 <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00005132 <hashmap.include.bb2@77> XINCLUDE "/Shared/preprocessor.include.ab3"
0000513A <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
0000513E <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00005158 <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005172 <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518C <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051AC <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
000051B6 <hashmap.include.bb2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C2 <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D6 <hashmap.include.bb2@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00005208 <hashmap.include.bb2@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005220 <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
0000522C <hashmap.include.bb2@92> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523A <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005248 <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00005256 <hashmap.include.bb2@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00005264 <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
0000528E <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00005298 <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000529E <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052CC <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E4 <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005302 <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005316 <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000532E <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00005356 <hashmap.include.bb2@108> XINCLUDE "/Shared/preprocessor.include.ab3"
0000536E <hashmap.include.bb2@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537C <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000538A <hashmap.include.bb2@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005398 <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053AC <hashmap.include.bb2@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00005400 <hashmap.include.bb2@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000542A <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
0000546E <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000548E <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C4 <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D2 <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
0000552A <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00005570 <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00005576 <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000557E <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A6 <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.bb2@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00005604 <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00005614 <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
0000561A <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000562A <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005630 <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00005636 <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000564E <hashmap.include.bb2@139> XINCLUDE "/Shared/preprocessor.include.ab3"
0000568C <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
000056AA <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000056DC <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F0 <hashmap.include.bb2@145> XINCLUDE "/Shared/preprocessor.include.ab3"
00005704 <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000571C <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005744 <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574E <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575C <hashmap.include.bb2@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005774 <hashmap.include.bb2@155> XINCLUDE "/Shared/preprocessor.include.ab3"
0000577A <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005782 <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057A2 <hashmap.include.bb2@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000057C8 <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057D2 <hashmap.include.bb2@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000057E0 <hashmap.include.bb2@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000057EA <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00005816 <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000582A <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00005830 <hashmap.include.bb2@171> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583E <hashmap.include.bb2@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00005874 <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C2 <hashmap.include.bb2@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000058EA <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00005904 <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005916 <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005920 <hashmap.include.bb2@182> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593C <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005962 <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005980 <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000059A4 <hashmap.include.bb2@188> XINCLUDE "/Shared/preprocessor.include.ab3"
000059BE <hashmap.include.bb2@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E6 <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A04 <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A20 <hashmap.include.bb2@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2E <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A42 <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A64 <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A86 <hashmap.include.bb2@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A94 <hashmap.include.bb2@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AAE <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ADE <hashmap.include.bb2@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AE4 <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B12 <hashmap.include.bb2@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B54 <hashmap.include.bb2@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B64 <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B6E <hashmap.include.bb2@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B7E <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B84 <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B90 <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B96 <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BC4 <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BF4 <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C2A <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3E <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C56 <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C7E <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CAE <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCA <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD8 <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEC <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D40 <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D6A <hashmap.include.bb2@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAE <hashmap.include.bb2@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DD4 <hashmap.include.bb2@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DDA <hashmap.include.bb2@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DF8 <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E16 <hashmap.include.bb2@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E34 <hashmap.include.bb2@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E3A <hashmap.include.bb2@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E60 <hashmap.include.bb2@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E8E <hashmap.include.bb2@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB6 <hashmap.include.bb2@271> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDA <hashmap.include.bb2@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F30 <hashmap.include.bb2@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F82 <hashmap.include.bb2@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD8 <hashmap.include.bb2@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FE8 <hashmap.include.bb2@280> XINCLUDE "/Shared/preprocessor.include.ab3"
0000603A <hashmap.include.bb2@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00006062 <hashmap.include.bb2@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00006088 <hashmap.include.bb2@283> XINCLUDE "/Shared/preprocessor.include.ab3"
000060A2 <hashmap.include.bb2@284> XINCLUDE "/Shared/preprocessor.include.ab3"
000060AA <hashmap.include.bb2@285> XINCLUDE "/Shared/preprocessor.include.ab3"
000060D2 <hashmap.include.bb2@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00006100 <hashmap.include.bb2@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00006128 <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00006130 <hashmap.include.bb2@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00006154 <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00006188 <hashmap.include.bb2@294> XINCLUDE "/Shared/preprocessor.include.ab3"
000061A4 <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AE <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
000061C2 <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
000061E2 <hashmap.include.bb2@298> XINCLUDE "/Shared/preprocessor.include.ab3"
000061FE <hashmap.include.bb2@299> XINCLUDE "/Shared/preprocessor.include.ab3"
0000620C <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
0000621A <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006220 <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006238 <hashmap.include.bb2@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00006248 <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00006276 <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000062D2 <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
0000634A <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A6 <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
000063AC <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B6 <hashmap.include.bb2@312> XINCLUDE "/Shared/preprocessor.include.ab3"
000063BC <hashmap.include.bb2@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000063EA <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000063F0 <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00006410 <hashmap.include.bb2@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000641A <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
0000642C <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000643C <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006446 <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006460 <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000647A <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006482 <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006488 <hashmap.include.bb2@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00006492 <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
0000649A <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
000064C2 <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000064C8 <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
000064DC <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.bb2@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000653E <hashmap.include.bb2@337> XINCLUDE "/Shared/preprocessor.include.ab3"
0000654C <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006588 <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.bb2@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D8 <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EE <hashmap.include.bb2@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006602 <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000660C <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006630 <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00006668 <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
0000666E <hashmap.include.bb2@350> XINCLUDE "/Shared/preprocessor.include.ab3"
0000667A <hashmap.include.bb2@351> XINCLUDE "/Shared/preprocessor.include.ab3"
0000668E <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
00006698 <hashmap.include.bb2@355> XINCLUDE "/Shared/preprocessor.include.ab3"
000066C0 <hashmap.include.bb2@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E8 <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000066FA <hashmap.include.bb2@358> XINCLUDE "/Shared/preprocessor.include.ab3"
00006726 <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675A <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006786 <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D2 <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E2 <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E8 <hashmap.include.bb2@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000067F4 <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00006822 <hashmap.include.bb2@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00006824 <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000682A <hashmap.include.bb2@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00006834 <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000685E <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006868 <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000686E <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006898 <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000068A0 <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000068C0 <hashmap.include.bb2@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000068CA <hashmap.include.bb2@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000068D8 <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
000068E8 <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F2 <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000690C <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
0000690C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006926 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006940 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
00006962 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006994 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006998 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
000069CC <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
000069D6 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
000069EC <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F0 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A0A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A24 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3E <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A62 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A68 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A92 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AAC <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ABC <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AC6 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD4 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AF6 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B2A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B50 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B6C <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8E <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB0 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD2 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BF0 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C24 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C34 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C38 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C4E <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C6E <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C78 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CA2 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB8 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC8 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CE4 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D00 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D1C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D38 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D54 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D70 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8C <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA8 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC4 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DE0 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DFC <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E18 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E34 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E50 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6C <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E88 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA4 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC0 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDC <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF8 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F14 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F30 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4C <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F68 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F84 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA0 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBC <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD8 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF4 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007010 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007048 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007064 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00007080 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709C <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B8 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D4 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F0 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007128 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007144 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00007160 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717C <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007198 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B4 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D0 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EC <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007208 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007224 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007240 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725C <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00007278 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007294 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B0 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CC <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E8 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007304 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007320 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733C <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
00007358 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007374 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007390 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AC <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C8 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E4 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007400 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00007438 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007454 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
00007470 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748C <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A8 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C4 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E0 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FC <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007518 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00007534 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00007550 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756C <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00007588 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A4 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C0 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DC <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F8 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007614 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007630 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764C <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00007668 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007684 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A0 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BC <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D8 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F4 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007710 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007748 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007764 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00007780 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779C <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B8 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D4 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F0 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007828 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007844 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00007860 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787C <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007898 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B4 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D0 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EC <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007908 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007924 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007940 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795C <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007978 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007994 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B0 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CC <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E8 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A04 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A20 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3C <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A58 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A74 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A90 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AAC <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC8 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AD0 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ADA <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE4 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AEA <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B18 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B34 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B66 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B70 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B92 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B9C <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA6 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB0 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BCA <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF8 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C14 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C22 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C5C <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C64 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C7E <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CA4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CC6 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEA <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF0 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CFE <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D04 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D0C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D12 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D1A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D2E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D54 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D7C <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D86 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D9A <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAE <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DBE <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD8 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E00 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E14 <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E36 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3C <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E44 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4A <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6C <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E76 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E84 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA2 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EB0 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EB8 <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EBE <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED2 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EDC <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEA <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F04 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0A <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F12 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F18 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F2C <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F36 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F3E <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F52 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F66 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F7A <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA6 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB6 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDE <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008000 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008014 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00008032 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008066 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808E <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B0 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
000080E0 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
0000810E <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008140 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
0000814E <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
00008154 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008164 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
0000816A <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00008190 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B2 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000081DA <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
000081FA <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000821C <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00008222 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00008230 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823E <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00008244 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
0000824C <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
0000826A <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000827E <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000828E <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A4 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000082BC <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D8 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E2 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000082FE <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008310 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833E <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837A <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0000838A <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008390 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00008396 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
000083AE <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
000083BE <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00008444 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000847E <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084B4 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084C4 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084D2 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000084D8 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E8 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008512 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00008518 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
00008544 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00008554 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00008564 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008582 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008590 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000085EA <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000085FE <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
0000860E <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
0000862C <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863A <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865E <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008682 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008690 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869E <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
000086BE <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
000086CC <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D2 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D8 <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E6 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F4 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008714 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008722 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008728 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00008738 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008742 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008756 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0000877C <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879E <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C6 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
000087CC <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DA <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E0 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F4 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008804 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000881A <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008832 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884E <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008858 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
00008874 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A2 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
000088DE <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
000088EE <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
000088FC <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008902 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008912 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
0000893C <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008942 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
0000896E <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
0000897E <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
0000898E <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
000089AC <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BA <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F0 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A14 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A28 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A38 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A56 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A64 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A88 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AAC <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AB2 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC2 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC8 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AEA <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF2 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B28 <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B44 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B4A <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B80 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B9C <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BC4 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE2 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C00 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2E <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C90 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAA <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC4 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCE <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D10 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D1A <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D48 <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D68 <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D80 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DDE <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E0A <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E1C <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2C <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E44 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E4A <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E84 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E94 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9E <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EB0 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EB0 <AmiBlitz3.ab2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EB0 <logging.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008EBC <logging.include.bb2@4> XINCLUDE "PE/logging.include.bb2"
00008EBC <PE_Tools.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008EE0 <PE_Tools.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
00008EE8 <PE_Tools.include.bb2@76> XINCLUDE "PE/logging.include.bb2"
00008F18 <PE_Tools.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
00008F46 <PE_Tools.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
00008FB6 <PE_Tools.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
00008FC4 <PE_Tools.include.bb2@80> XINCLUDE "PE/logging.include.bb2"
00009014 <PE_Tools.include.bb2@81> XINCLUDE "PE/logging.include.bb2"
00009014 <logging.include.bb2@6> XINCLUDE "PE/logging.include.bb2"
00009014 <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00009014 <asl.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00009038 <asl.include.bb2@93> XINCLUDE "PE/logging.include.bb2"
00009060 <asl.include.bb2@94> XINCLUDE "PE/logging.include.bb2"
00009084 <asl.include.bb2@95> XINCLUDE "PE/logging.include.bb2"
000090B2 <asl.include.bb2@294> XINCLUDE "PE/logging.include.bb2"
0000930E <asl.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
00009340 <asl.include.bb2@298> XINCLUDE "PE/logging.include.bb2"
0000936E <asl.include.bb2@300> XINCLUDE "PE/logging.include.bb2"
000093AC <asl.include.bb2@301> XINCLUDE "PE/logging.include.bb2"
000093DA <asl.include.bb2@302> XINCLUDE "PE/logging.include.bb2"
00009408 <asl.include.bb2@303> XINCLUDE "PE/logging.include.bb2"
00009436 <asl.include.bb2@304> XINCLUDE "PE/logging.include.bb2"
00009464 <asl.include.bb2@305> XINCLUDE "PE/logging.include.bb2"
00009492 <asl.include.bb2@306> XINCLUDE "PE/logging.include.bb2"
000094C0 <asl.include.bb2@307> XINCLUDE "PE/logging.include.bb2"
000094EE <asl.include.bb2@308> XINCLUDE "PE/logging.include.bb2"
0000951C <asl.include.bb2@309> XINCLUDE "PE/logging.include.bb2"
000095AC <asl.include.bb2@311> XINCLUDE "PE/logging.include.bb2"
0000963C <asl.include.bb2@312> XINCLUDE "PE/logging.include.bb2"
000096E4 <asl.include.bb2@313> XINCLUDE "PE/logging.include.bb2"
00009732 <asl.include.bb2@314> XINCLUDE "PE/logging.include.bb2"
00009774 <asl.include.bb2@315> XINCLUDE "PE/logging.include.bb2"
00009778 <asl.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
000097C6 <asl.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
00009808 <asl.include.bb2@320> XINCLUDE "PE/logging.include.bb2"
00009834 <asl.include.bb2@321> XINCLUDE "PE/logging.include.bb2"
00009838 <asl.include.bb2@322> XINCLUDE "PE/logging.include.bb2"
00009864 <asl.include.bb2@323> XINCLUDE "PE/logging.include.bb2"
00009890 <asl.include.bb2@325> XINCLUDE "PE/logging.include.bb2"
000098BA <asl.include.bb2@327> XINCLUDE "PE/logging.include.bb2"
000098C4 <asl.include.bb2@328> XINCLUDE "PE/logging.include.bb2"
000098E2 <asl.include.bb2@329> XINCLUDE "PE/logging.include.bb2"
00009902 <asl.include.bb2@330> XINCLUDE "PE/logging.include.bb2"
00009930 <asl.include.bb2@331> XINCLUDE "PE/logging.include.bb2"
0000995E <asl.include.bb2@332> XINCLUDE "PE/logging.include.bb2"
0000998C <asl.include.bb2@333> XINCLUDE "PE/logging.include.bb2"
000099D2 <asl.include.bb2@336> XINCLUDE "PE/logging.include.bb2"
00009A18 <asl.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
00009A5E <asl.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
00009A9A <asl.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
00009B96 <asl.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
00009BB4 <asl.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
00009BBE <asl.include.bb2@345> XINCLUDE "PE/logging.include.bb2"
00009BE4 <asl.include.bb2@346> XINCLUDE "PE/logging.include.bb2"
00009BFA <asl.include.bb2@348> XINCLUDE "PE/logging.include.bb2"
00009C34 <asl.include.bb2@349> XINCLUDE "PE/logging.include.bb2"
00009C72 <asl.include.bb2@350> XINCLUDE "PE/logging.include.bb2"
00009C82 <asl.include.bb2@351> XINCLUDE "PE/logging.include.bb2"
00009CD8 <asl.include.bb2@352> XINCLUDE "PE/logging.include.bb2"
00009D10 <asl.include.bb2@353> XINCLUDE "PE/logging.include.bb2"
00009D20 <asl.include.bb2@355> XINCLUDE "PE/logging.include.bb2"
00009D24 <asl.include.bb2@356> XINCLUDE "PE/logging.include.bb2"
00009D34 <asl.include.bb2@357> XINCLUDE "PE/logging.include.bb2"
00009D3E <asl.include.bb2@358> XINCLUDE "PE/logging.include.bb2"
00009D78 <asl.include.bb2@359> XINCLUDE "PE/logging.include.bb2"
00009D7C <asl.include.bb2@360> XINCLUDE "PE/logging.include.bb2"
00009DD4 <asl.include.bb2@361> XINCLUDE "PE/logging.include.bb2"
00009DF2 <asl.include.bb2@363> XINCLUDE "PE/logging.include.bb2"
00009DF8 <asl.include.bb2@366> XINCLUDE "PE/logging.include.bb2"
00009E08 <asl.include.bb2@369> XINCLUDE "PE/logging.include.bb2"
00009E18 <asl.include.bb2@370> XINCLUDE "PE/logging.include.bb2"
00009E28 <asl.include.bb2@371> XINCLUDE "PE/logging.include.bb2"
00009E38 <asl.include.bb2@372> XINCLUDE "PE/logging.include.bb2"
00009E48 <asl.include.bb2@374> XINCLUDE "PE/logging.include.bb2"
00009E52 <asl.include.bb2@376> XINCLUDE "PE/logging.include.bb2"
00009E66 <asl.include.bb2@377> XINCLUDE "PE/logging.include.bb2"
00009E7C <asl.include.bb2@393> XINCLUDE "PE/logging.include.bb2"
00009EA4 <asl.include.bb2@395> XINCLUDE "PE/logging.include.bb2"
00009EAE <asl.include.bb2@396> XINCLUDE "PE/logging.include.bb2"
00009EBE <asl.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
00009EF8 <asl.include.bb2@398> XINCLUDE "PE/logging.include.bb2"
00009F02 <asl.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
00009F2C <asl.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
00009F44 <asl.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
00009F96 <asl.include.bb2@438> XINCLUDE "PE/logging.include.bb2"
00009FC8 <asl.include.bb2@440> XINCLUDE "PE/logging.include.bb2"
0000A062 <asl.include.bb2@441> XINCLUDE "PE/logging.include.bb2"
0000A0A8 <asl.include.bb2@442> XINCLUDE "PE/logging.include.bb2"
0000A142 <asl.include.bb2@443> XINCLUDE "PE/logging.include.bb2"
0000A15C <asl.include.bb2@444> XINCLUDE "PE/logging.include.bb2"
0000A15C <file.include.bb2@57> XINCLUDE "PE/logging.include.bb2"
0000A172 <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
0000A188 <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
0000A19E <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
0000A1B4 <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
0000A1C0 <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
0000A1CC <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
0000A1D8 <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
0000A1E4 <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
0000A20C <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
0000A234 <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
0000A25C <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
0000A280 <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
0000A2A4 <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
0000A2BE <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
0000A2CE <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
0000A2D0 <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
0000A2D2 <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
0000A2D4 <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
0000A2D6 <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
0000A2D8 <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
0000A2DC <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
0000A2E0 <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
0000A2E4 <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
0000A2E6 <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
0000A2E8 <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
0000A2EA <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
0000A2EC <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
0000A2EE <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
0000A2F0 <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
0000A2F2 <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
0000A2FC <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
0000A302 <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
0000A31C <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
0000A33A <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
0000A340 <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
0000A35A <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
0000A374 <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
0000A39E <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
0000A3BE <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
0000A3C8 <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
0000A3F4 <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
0000A416 <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
0000A430 <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
0000A434 <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
0000A462 <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
0000A480 <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
0000A486 <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
0000A4A4 <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
0000A4AA <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
0000A4D2 <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
0000A4F0 <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
0000A52A <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
0000A546 <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
0000A54A <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
0000A550 <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
0000A554 <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
0000A55A <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
0000A574 <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
0000A5BE <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
0000A5C4 <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
0000A5F2 <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
0000A5FC <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
0000A618 <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
0000A61C <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
0000A64A <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
0000A654 <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0000A65A <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
0000A678 <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
0000A6A6 <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
0000A6AC <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0000A6C2 <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
0000A6CC <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
0000A73A <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
0000A74A <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
0000A74E <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
0000A788 <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
0000A792 <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
0000A798 <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
0000A7B2 <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
0000A7C8 <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
0000A824 <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
0000A85E <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
0000A898 <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
0000A8B6 <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
0000A8D4 <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
0000A8EA <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
0000A906 <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
0000A920 <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
0000A99C <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
0000A9AE <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
0000A9C4 <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
0000A9F8 <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
0000AA02 <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
0000AA12 <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
0000AA16 <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
0000AA44 <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
0000AA5E <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
0000AA74 <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
0000AA92 <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
0000AAA8 <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
0000AAE0 <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
0000AB0A <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
0000AB34 <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
0000AB4C <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
0000AB62 <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
0000ABAE <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
0000ABCE <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
0000ABD6 <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
0000AC14 <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
0000AC20 <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
0000AC2A <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
0000AC40 <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
0000AC46 <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
0000AC52 <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
0000AC7A <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
0000AC8A <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
0000ACB2 <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
0000ACC2 <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
0000ACEA <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
0000ACFA <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
0000AD22 <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
0000AD24 <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
0000AD4A <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
0000AD86 <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
0000AE10 <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
0000AE4A <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
0000AE7A <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
0000AEB6 <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
0000AF0E <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
0000AF66 <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
0000AFE6 <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
0000B01A <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
0000B04E <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
0000B054 <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
0000B060 <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
0000B094 <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
0000B0C4 <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
0000B180 <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
0000B200 <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
0000B234 <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
0000B252 <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
0000B25A <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
0000B25E <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
0000B322 <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
0000B332 <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
0000B3EE <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
0000B46E <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
0000B54E <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
0000B558 <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
0000B58C <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
0000B5AA <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
0000B5B2 <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
0000B5B6 <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
0000B67A <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
0000B68A <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
0000B6BE <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
0000B6EE <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
0000B7AA <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
0000B82A <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
0000B85E <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
0000B87C <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
0000B884 <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
0000B888 <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
0000B94C <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
0000B95C <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
0000BA18 <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
0000BA98 <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
0000BACC <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
0000BAEA <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
0000BAF2 <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
0000BAF6 <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
0000BBBA <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
0000BBBE <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
0000BBEC <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
0000BBEE <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
0000BBF2 <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
0000BC7E <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
0000BC94 <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
0000BCAA <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
0000BD14 <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
0000BD7E <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
0000BD9E <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
0000BDBA <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
0000BDD8 <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
0000BDF2 <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
0000BDFC <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
0000BE18 <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
0000BE3A <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
0000BE40 <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
0000BE68 <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
0000BE82 <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
0000BE98 <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
0000BEF4 <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
0000BF2C <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
0000BF30 <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
0000BF7C <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
0000BF96 <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
0000BFAA <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
0000BFB0 <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
0000BFB4 <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
0000BFCA <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
0000C0AA <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
0000C0AE <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
0000C0F4 <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
0000C100 <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
0000C16E <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
0000C1A8 <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
0000C1F4 <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
0000C260 <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
0000C264 <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
0000C292 <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
0000C296 <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
0000C2EC <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
0000C2F6 <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
0000C30A <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
0000C324 <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
0000C32A <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
0000C352 <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
0000C36C <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
0000C3C8 <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
0000C3CC <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
0000C3EE <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
0000C3F4 <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
0000C40E <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
0000C42C <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
0000C46E <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
0000C4BC <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
0000C4F2 <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
0000C4F8 <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
0000C4FC <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
0000C52C <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
0000C532 <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
0000C536 <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
0000C54C <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
0000C5A8 <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
0000C5E0 <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
0000C5E4 <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
0000C630 <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
0000C64A <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
0000C65E <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
0000C664 <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
0000C668 <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
0000C67E <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
0000C684 <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
0000C688 <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
0000C6DA <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
0000C726 <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
0000C730 <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
0000C736 <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
0000C750 <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
0000C756 <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
0000C7A2 <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
0000C7E4 <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
0000C7EE <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
0000C7F4 <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
0000C81A <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
0000C820 <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
0000C848 <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
0000C8AC <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
0000C8C6 <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
0000C8D0 <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
0000C8EA <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
0000C8F4 <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
0000C90C <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
0000C93C <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
0000C958 <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
0000C968 <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
0000C96C <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
0000C99A <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
0000C9A4 <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
0000C9AA <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
0000C9C8 <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
0000C9CE <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
0000C9E4 <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
0000C9F4 <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
0000CA18 <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
0000CA4E <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
0000CA64 <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
0000CAB2 <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
0000CB90 <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
0000CBAE <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
0000CBD8 <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
0000CBF4 <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
0000CC22 <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
0000CC2C <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
0000CC58 <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
0000CC72 <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
0000CC8E <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
0000CC92 <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
0000CCC0 <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
0000CCC4 <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
0000CCCA <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
0000CCCE <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
0000CD62 <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
0000CD66 <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
0000CDFC <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
0000CE00 <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
0000CE2E <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
0000CE38 <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
0000CE3E <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
0000CE58 <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
0000CE76 <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
0000CE7C <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
0000CE96 <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
0000CEB4 <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
0000CF72 <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
0000CF7A <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
0000CF7E <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
0000CFAE <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
0000CFBA <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
0000CFC0 <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
0000CFDA <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
0000CFE4 <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
0000CFEE <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
0000D004 <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
0000D01A <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
0000D02A <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
0000D036 <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
0000D03A <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
0000D044 <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
0000D086 <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
0000D09C <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
0000D0C0 <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
0000D0D6 <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
0000D0E2 <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
0000D0E6 <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
0000D0F6 <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
0000D118 <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
0000D12E <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
0000D17A <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
0000D17E <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
0000D1A8 <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
0000D1C0 <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
0000D1EE <file.include.bb2@1706> XINCLUDE "PE/logging.include.bb2"
0000D202 <file.include.bb2@1707> XINCLUDE "PE/logging.include.bb2"
0000D21A <file.include.bb2@1708> XINCLUDE "PE/logging.include.bb2"
0000D23C <file.include.bb2@1709> XINCLUDE "PE/logging.include.bb2"
0000D254 <file.include.bb2@1710> XINCLUDE "PE/logging.include.bb2"
0000D25E <file.include.bb2@1711> XINCLUDE "PE/logging.include.bb2"
0000D278 <file.include.bb2@1712> XINCLUDE "PE/logging.include.bb2"
0000D29A <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
0000D2B2 <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0000D2D4 <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
0000D2DA <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
0000D30C <file.include.bb2@1811> XINCLUDE "PE/logging.include.bb2"
0000D320 <file.include.bb2@1813> XINCLUDE "PE/logging.include.bb2"
0000D338 <file.include.bb2@1814> XINCLUDE "PE/logging.include.bb2"
0000D350 <file.include.bb2@1815> XINCLUDE "PE/logging.include.bb2"
0000D370 <file.include.bb2@1816> XINCLUDE "PE/logging.include.bb2"
0000D3A2 <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
0000D3D4 <file.include.bb2@1818> XINCLUDE "PE/logging.include.bb2"
0000D3EA <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
0000D3F4 <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
0000D41E <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
0000D428 <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
0000D442 <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
0000D45C <file.include.bb2@1841> XINCLUDE "PE/logging.include.bb2"
0000D47A <file.include.bb2@1843> XINCLUDE "PE/logging.include.bb2"
0000D49E <file.include.bb2@1844> XINCLUDE "PE/logging.include.bb2"
0000D4E8 <file.include.bb2@1845> XINCLUDE "PE/logging.include.bb2"
0000D502 <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0000D514 <file.include.bb2@1847> XINCLUDE "PE/logging.include.bb2"
0000D54C <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
0000D562 <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
0000D56C <file.include.bb2@1850> XINCLUDE "PE/logging.include.bb2"
0000D594 <file.include.bb2@1851> XINCLUDE "PE/logging.include.bb2"
0000D598 <file.include.bb2@1853> XINCLUDE "PE/logging.include.bb2"
0000D5C0 <file.include.bb2@1854> XINCLUDE "PE/logging.include.bb2"
0000D5D0 <file.include.bb2@1856> XINCLUDE "PE/logging.include.bb2"
0000D5E4 <file.include.bb2@1857> XINCLUDE "PE/logging.include.bb2"
0000D5FA <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
0000D60A <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
0000D60E <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
0000D624 <file.include.bb2@1894> XINCLUDE "PE/logging.include.bb2"
0000D64E <file.include.bb2@1896> XINCLUDE "PE/logging.include.bb2"
0000D656 <file.include.bb2@1897> XINCLUDE "PE/logging.include.bb2"
0000D656 <logging.include.bb2@8> XINCLUDE "PE/logging.include.bb2"
0000D6F4 <logging.include.bb2@30> XINCLUDE "PE/logging.include.bb2"
0000D6FC <logging.include.bb2@31> XINCLUDE "PE/logging.include.bb2"
0000D704 <logging.include.bb2@32> XINCLUDE "PE/logging.include.bb2"
0000D70C <logging.include.bb2@33> XINCLUDE "PE/logging.include.bb2"
0000D746 <logging.include.bb2@124> XINCLUDE "PE/logging.include.bb2"
0000D778 <logging.include.bb2@126> XINCLUDE "PE/logging.include.bb2"
0000D78C <logging.include.bb2@127> XINCLUDE "PE/logging.include.bb2"
0000D7BE <logging.include.bb2@128> XINCLUDE "PE/logging.include.bb2"
0000DB40 <logging.include.bb2@129> XINCLUDE "PE/logging.include.bb2"
0000DB4E <logging.include.bb2@130> XINCLUDE "PE/logging.include.bb2"
0000DB52 <logging.include.bb2@131> XINCLUDE "PE/logging.include.bb2"
0000DDF4 <logging.include.bb2@132> XINCLUDE "PE/logging.include.bb2"
0000DE0E <logging.include.bb2@134> XINCLUDE "PE/logging.include.bb2"
0000DE48 <logging.include.bb2@137> XINCLUDE "PE/logging.include.bb2"
0000DE9A <logging.include.bb2@138> XINCLUDE "PE/logging.include.bb2"
0000DEAE <logging.include.bb2@139> XINCLUDE "PE/logging.include.bb2"
0000DF04 <logging.include.bb2@140> XINCLUDE "PE/logging.include.bb2"
0000DF08 <logging.include.bb2@141> XINCLUDE "PE/logging.include.bb2"
0000DF84 <logging.include.bb2@142> XINCLUDE "PE/logging.include.bb2"
0000DFF8 <logging.include.bb2@143> XINCLUDE "PE/logging.include.bb2"
0000E012 <logging.include.bb2@145> XINCLUDE "PE/logging.include.bb2"
0000E012 <AmiBlitz3.ab2@89> XINCLUDE "PE/logging.include.bb2"
0000E01E <AmiBlitz3.ab2@90> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
0000E01E <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
0000E01E <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
0000E01E <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
0000E01E <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
0000E046 <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
0000E060 <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
0000E06A <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
0000E07C <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
0000E0A0 <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
0000E0AE <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
0000E0BA <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
0000E0BE <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
0000E0DC <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
0000E0F6 <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E116 <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E120 <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E12E <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E13A <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E148 <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
0000E154 <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E160 <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
0000E172 <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
0000E182 <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
0000E18C <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
0000E192 <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
0000E1AC <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
0000E1B6 <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
0000E1C0 <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
0000E1D0 <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
0000E1DA <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
0000E1EC <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
0000E202 <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
0000E20C <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
0000E212 <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
0000E216 <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
0000E22C <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
0000E232 <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
0000E23C <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
0000E272 <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
0000E27C <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
0000E280 <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
0000E2AE <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
0000E2AE <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
0000E2C8 <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
0000E2D2 <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E2FA <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E31C <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E338 <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E348 <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E34C <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E366 <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
0000E386 <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
0000E390 <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
0000E3AA <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
0000E3B8 <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
0000E3C6 <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
0000E3D4 <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
0000E3E2 <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
0000E3EE <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
0000E3FC <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
0000E40A <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
0000E418 <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
0000E426 <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
0000E440 <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
0000E44E <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
0000E45E <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
0000E46E <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
0000E47E <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
0000E48C <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
0000E496 <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
0000E49C <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
0000E4BA <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
0000E4C0 <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
0000E4CA <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
0000E4EA <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
0000E518 <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
0000E536 <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
0000E540 <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
0000E552 <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
0000E57E <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
0000E594 <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
0000E5A0 <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
0000E5AC <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
0000E5B2 <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
0000E5B8 <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
0000E5BE <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
0000E5C4 <prefixtree.include.bb2@179> XINCLUDE "translation.include.bb2"
0000E5CA <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
0000E5D4 <prefixtree.include.bb2@183> XINCLUDE "translation.include.bb2"
0000E5DA <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
0000E60C <prefixtree.include.bb2@204> XINCLUDE "translation.include.bb2"
0000E626 <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
0000E63E <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
0000E652 <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
0000E6A2 <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
0000E6C2 <prefixtree.include.bb2@210> XINCLUDE "translation.include.bb2"
0000E6D6 <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
0000E6E4 <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
0000E6F0 <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
0000E6F8 <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
0000E700 <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
0000E708 <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
0000E710 <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
0000E716 <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
0000E724 <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
0000E746 <prefixtree.include.bb2@221> XINCLUDE "translation.include.bb2"
0000E772 <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
0000E784 <prefixtree.include.bb2@224> XINCLUDE "translation.include.bb2"
0000E78A <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
0000E7B2 <prefixtree.include.bb2@227> XINCLUDE "translation.include.bb2"
0000E7D6 <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
0000E7FE <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
0000E832 <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
0000E842 <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
0000E84C <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
0000E85A <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
0000E86E <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
0000E874 <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
0000E894 <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
0000E89A <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
0000E8A2 <prefixtree.include.bb2@239> XINCLUDE "translation.include.bb2"
0000E8DC <prefixtree.include.bb2@241> XINCLUDE "translation.include.bb2"
0000E902 <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
0000E91A <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
0000E94E <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
0000E956 <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
0000E964 <prefixtree.include.bb2@247> XINCLUDE "translation.include.bb2"
0000E96A <prefixtree.include.bb2@249> XINCLUDE "translation.include.bb2"
0000E982 <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
0000E988 <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
0000E98E <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
0000E9A8 <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
0000E9AE <prefixtree.include.bb2@256> XINCLUDE "translation.include.bb2"
0000E9B4 <prefixtree.include.bb2@258> XINCLUDE "translation.include.bb2"
0000E9BA <prefixtree.include.bb2@260> XINCLUDE "translation.include.bb2"
0000E9C8 <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
0000E9D6 <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
0000EA10 <prefixtree.include.bb2@264> XINCLUDE "translation.include.bb2"
0000EA36 <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
0000EA4E <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
0000EA5A <prefixtree.include.bb2@269> XINCLUDE "translation.include.bb2"
0000EA66 <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
0000EA72 <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
0000EA7E <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
0000EA8A <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
0000EA94 <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
0000EA9C <prefixtree.include.bb2@276> XINCLUDE "translation.include.bb2"
0000EAB6 <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
0000EAF4 <prefixtree.include.bb2@324> XINCLUDE "translation.include.bb2"
0000EAFA <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
0000EB3A <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
0000EB90 <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
0000EC02 <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
0000EC0E <prefixtree.include.bb2@330> XINCLUDE "translation.include.bb2"
0000EC1C <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
0000EC62 <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
0000ECAC <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
0000ECE4 <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
0000ED38 <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
0000ED3E <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
0000ED44 <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
0000ED52 <prefixtree.include.bb2@339> XINCLUDE "translation.include.bb2"
0000ED5A <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
0000ED94 <prefixtree.include.bb2@342> XINCLUDE "translation.include.bb2"
0000EDBA <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
0000EDD2 <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
0000EE08 <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
0000EE1E <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
0000EE2C <prefixtree.include.bb2@348> XINCLUDE "translation.include.bb2"
0000EE44 <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
0000EE7C <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
0000EEA2 <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
0000EEEA <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
0000EEF0 <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
0000EF0A <prefixtree.include.bb2@355> XINCLUDE "translation.include.bb2"
0000EF16 <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
0000EF1C <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
0000EF48 <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
0000EF5C <prefixtree.include.bb2@363> XINCLUDE "translation.include.bb2"
0000EF6A <prefixtree.include.bb2@365> XINCLUDE "translation.include.bb2"
0000EF72 <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
0000EFAC <prefixtree.include.bb2@368> XINCLUDE "translation.include.bb2"
0000EFD2 <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
0000EFEA <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
0000F024 <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
0000F04E <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
0000F066 <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
0000F096 <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
0000F0C2 <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
0000F0DE <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
0000F0EC <prefixtree.include.bb2@378> XINCLUDE "translation.include.bb2"
0000F0FA <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
0000F138 <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
0000F174 <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
0000F1E0 <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
0000F20E <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
0000F23C <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
0000F284 <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
0000F29E <prefixtree.include.bb2@388> XINCLUDE "translation.include.bb2"
0000F2E6 <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
0000F304 <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
0000F322 <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
0000F33C <prefixtree.include.bb2@394> XINCLUDE "translation.include.bb2"
0000F348 <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
0000F34E <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
0000F37A <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
0000F392 <prefixtree.include.bb2@399> XINCLUDE "translation.include.bb2"
0000F398 <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
0000F3AC <prefixtree.include.bb2@403> XINCLUDE "translation.include.bb2"
0000F3BA <prefixtree.include.bb2@405> XINCLUDE "translation.include.bb2"
0000F3C8 <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
0000F3D6 <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
0000F3DE <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
0000F402 <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
0000F42A <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
0000F452 <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
0000F4BE <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
0000F4CE <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
0000F4FA <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
0000F550 <prefixtree.include.bb2@416> XINCLUDE "translation.include.bb2"
0000F55E <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
0000F56C <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
0000F572 <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
0000F5BA <prefixtree.include.bb2@421> XINCLUDE "translation.include.bb2"
0000F5FE <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
0000F64E <prefixtree.include.bb2@425> XINCLUDE "translation.include.bb2"
0000F6A4 <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
0000F710 <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
0000F718 <prefixtree.include.bb2@431> XINCLUDE "translation.include.bb2"
0000F752 <prefixtree.include.bb2@433> XINCLUDE "translation.include.bb2"
0000F778 <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
0000F790 <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
0000F7CA <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
0000F7F4 <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
0000F80C <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
0000F830 <prefixtree.include.bb2@440> XINCLUDE "translation.include.bb2"
0000F884 <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
0000F88C <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
0000F892 <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
0000F8F4 <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
0000F920 <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
0000F93C <prefixtree.include.bb2@448> XINCLUDE "translation.include.bb2"
0000F94A <prefixtree.include.bb2@450> XINCLUDE "translation.include.bb2"
0000F958 <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
0000F966 <prefixtree.include.bb2@453> XINCLUDE "translation.include.bb2"
0000F974 <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
0000F9B8 <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
0000FA24 <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
0000FA52 <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
0000FA66 <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
0000FA98 <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
0000FAE2 <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
0000FAF2 <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
0000FB26 <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
0000FB48 <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
0000FB58 <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
0000FB60 <prefixtree.include.bb2@467> XINCLUDE "translation.include.bb2"
0000FBA4 <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
0000FC10 <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
0000FC3E <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
0000FC62 <prefixtree.include.bb2@472> XINCLUDE "translation.include.bb2"
0000FCA6 <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
0000FD12 <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
0000FD40 <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
0000FD6E <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
0000FD76 <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
0000FDA4 <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
0000FE16 <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
0000FE1C <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
0000FE4A <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
0000FEBC <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
0000FEDA <prefixtree.include.bb2@485> XINCLUDE "translation.include.bb2"
0000FEFE <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
0000FF16 <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
0000FF1C <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
0000FF22 <prefixtree.include.bb2@491> XINCLUDE "translation.include.bb2"
0000FF24 <prefixtree.include.bb2@493> XINCLUDE "translation.include.bb2"
0000FF2E <prefixtree.include.bb2@496> XINCLUDE "translation.include.bb2"
0000FF5A <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
0000FF7C <prefixtree.include.bb2@515> XINCLUDE "translation.include.bb2"
0000FF84 <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
0000FF8A <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
0000FF98 <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
0000FFD2 <prefixtree.include.bb2@520> XINCLUDE "translation.include.bb2"
0000FFF8 <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
00010010 <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
0001004A <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
00010074 <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
0001008C <prefixtree.include.bb2@526> XINCLUDE "translation.include.bb2"
000100A4 <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
000100DC <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
000100E4 <prefixtree.include.bb2@530> XINCLUDE "translation.include.bb2"
0001011E <prefixtree.include.bb2@532> XINCLUDE "translation.include.bb2"
00010130 <prefixtree.include.bb2@534> XINCLUDE "translation.include.bb2"
00010156 <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
0001016C <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
00010192 <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
000101A6 <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
000101BE <prefixtree.include.bb2@540> XINCLUDE "translation.include.bb2"
000101D0 <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
000101DA <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
000101EE <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
00010208 <prefixtree.include.bb2@560> XINCLUDE "translation.include.bb2"
00010226 <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
00010238 <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
00010256 <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
00010278 <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
00010294 <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
000102B4 <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
000102BE <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
000102C4 <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
000102CE <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
000102DA <prefixtree.include.bb2@571> XINCLUDE "translation.include.bb2"
000102E0 <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
0001030E <prefixtree.include.bb2@591> XINCLUDE "translation.include.bb2"
00010336 <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
00010376 <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
0001038E <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
000103D4 <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
000103FE <prefixtree.include.bb2@598> XINCLUDE "translation.include.bb2"
0001042C <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
00010446 <prefixtree.include.bb2@815> XINCLUDE "translation.include.bb2"
0001044E <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
00010466 <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
00010470 <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
00010482 <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
000104BA <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
000104C8 <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
000104D4 <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
000104F0 <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
00010512 <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
00010534 <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
00010556 <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
00010578 <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
00010594 <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
000105B2 <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
000105C6 <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
000105CC <prefixtree.include.bb2@832> XINCLUDE "translation.include.bb2"
000105CE <prefixtree.include.bb2@834> XINCLUDE "translation.include.bb2"
000105D4 <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
000105DE <prefixtree.include.bb2@837> XINCLUDE "translation.include.bb2"
000105E4 <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
00010602 <prefixtree.include.bb2@856> XINCLUDE "translation.include.bb2"
00010608 <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
0001062C <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
0001064A <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
00010678 <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
000106A6 <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
000106D4 <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
00010702 <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
00010736 <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
00010746 <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
00010750 <prefixtree.include.bb2@867> XINCLUDE "translation.include.bb2"
00010756 <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
00010756 <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
000107A0 <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
000107C0 <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
000107CA <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
000107DE <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
00010824 <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
0001086A <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
000108B0 <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
000108BA <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
000108D6 <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
00010900 <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
0001097E <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
000109FC <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
00010A7A <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
00010AF8 <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
00010B76 <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
00010BF4 <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
00010C72 <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
00010CF0 <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
00010D6E <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
00010DEC <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
00010E70 <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
00010EA0 <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
00010EFC <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
00010F28 <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
00010FF2 <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
00011000 <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
0001103E <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
000110C2 <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
000110EC <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
0001110A <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
00011124 <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
0001112E <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
0001113A <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
0001114A <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
0001115A <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
0001116A <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
0001117A <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
0001117E <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
000111BC <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
00011214 <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
00011270 <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
000112FA <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
00011378 <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
00011392 <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
000113C0 <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
000113FC <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
000114CA <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
00011598 <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
000115E4 <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
00011662 <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
000116E0 <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
0001173E <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
000117D4 <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
0001180C <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
0001186A <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
000118F2 <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
000118FA <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
00011964 <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
000119D0 <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
00011A0E <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
00011A96 <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00011AC2 <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00011B1E <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00011BE6 <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00011C4A <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00011C50 <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00011C84 <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00011D52 <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
00011E20 <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
00011E4A <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
00011E68 <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
00011E96 <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
00011ED2 <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
00011F42 <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
00011F4A <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
00011F9C <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
00011FC4 <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
00011FDC <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
00012090 <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
0001209E <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
000120F4 <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
00012152 <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
00012158 <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
000121DC <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
00012260 <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
000122E4 <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
00012362 <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
000123E0 <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
0001245E <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
000124DC <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
0001255A <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
000125D8 <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
00012656 <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
00012680 <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
0001269E <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
000126CC <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
00012710 <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
00012716 <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
00012730 <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
0001274C <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
00012780 <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
000127A4 <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
000127CC <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
00012838 <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
00012896 <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
000128F4 <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
00012940 <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
0001299A <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
000129A0 <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
000129A6 <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
000129B0 <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
000129BA <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
000129D4 <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
00012A02 <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
00012A08 <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
00012A4C <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
00012A66 <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
00012A76 <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
00012A80 <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
00012A8C <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
00012A96 <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
00012ABA <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
00012B02 <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
00012B4A <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
00012B92 <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
00012BA8 <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
00012BBC <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
00012BC6 <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
00012BD0 <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
00012BEA <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
00012C14 <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
00012C58 <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
00012C72 <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
00012CD0 <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
00012CEA <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
00012D02 <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
00012D0C <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
00012D28 <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
00012D36 <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
00012D42 <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
00012D8E <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
00012DE0 <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
00012E32 <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
00012E46 <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
00012E56 <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
00012E5C <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
00012E5E <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
00012E64 <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
00012E6E <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
00012E78 <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
00012E92 <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
00012EBC <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
00012ED2 <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
00012EDC <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
00012F54 <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
00012F90 <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
00012FA0 <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
00012FC0 <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
00012FE0 <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
00013000 <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
00013036 <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
0001305E <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
00013096 <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
000130FA <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
0001311A <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
00013196 <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
000131CE <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
00013244 <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
00013264 <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
000132E0 <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
00013318 <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
0001338E <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
000133AE <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
0001342A <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
00013456 <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
0001345E <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
000134A4 <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
000134C4 <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
000134CE <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
000134E6 <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
000134F6 <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
0001352E <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
00013560 <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
00013572 <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
000135F4 <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
000135FE <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
00013630 <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
00013662 <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
0001368E <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
000136BA <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
000136DC <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
000136E6 <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
00013700 <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
00013700 <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
00013716 <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
00013732 <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
00013734 <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
00013762 <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
00013762 <AmiBlitz3.ab2@93> XINCLUDE "translation.include.bb2"
00013762 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
0001377C <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
00013786 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
000137A8 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
000137C0 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
000137DA <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
0001380C <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013816 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
0001381C <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
0001382E <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013896 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
0001389C <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
000138CA <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
000138D4 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
000138DA <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
000138F0 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
000138FA <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013912 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013914 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013942 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
0001395C <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013972 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
000139A6 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
000139AA <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
000139C4 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
000139DA <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013A0E <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013A12 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013A2C <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013A42 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013A76 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013A7A <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013A94 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013AAA <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013ADE <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013AE2 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013AFC <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013B12 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013B46 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013B4A <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013B4A <AmiBlitz3.ab2@94> XINCLUDE "/Shared/ted.include.ab3"
00013B4A <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013B60 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013B76 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013B84 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013B92 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013B9C <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013BAE <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013BC0 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013BC6 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013BF4 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013BF8 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013C0E <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013C24 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013C30 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013C3C <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013C44 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013C4C <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013C50 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013C7A <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013CA6 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013CB8 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013CD0 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013CE6 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013CEC <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013D22 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013D5A <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013D92 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013DCA <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013E02 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013E3A <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013E72 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00013EAA <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00013EE2 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00013F1A <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
00013F52 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00013F8A <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00013FC2 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00013FCC <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00013FD6 <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00013FE0 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00013FF4 <CLIModeSupport.ab3@79> XINCLUDE "CLIModeSupport.ab3"
00014030 <CLIModeSupport.ab3@80> XINCLUDE "CLIModeSupport.ab3"
0001406C <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
000140A8 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000140E4 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
00014120 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014126 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014154 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
0001417E <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
00014188 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
0001418C <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
000141C0 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
000141C6 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
000141F4 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
000141FA <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
00014210 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
0001421A <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
00014220 <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
00014236 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
0001423C <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
0001427A <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
0001427E <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00014288 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
0001428A <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000142BE <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000142CE <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000142D4 <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000142DE <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000142E4 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000142FA <CLIModeSupport.ab3@123> XINCLUDE "CLIModeSupport.ab3"
00014338 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
0001433C <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
00014344 <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
00014382 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014384 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00014388 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
000143C6 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
000143CA <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@134> XINCLUDE "CLIModeSupport.ab3"
0001440C <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
00014436 <CLIModeSupport.ab3@137> XINCLUDE "CLIModeSupport.ab3"
00014440 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
00014454 <CLIModeSupport.ab3@139> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@140> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
0001448E <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
000144CC <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
000144D0 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
000144FA <CLIModeSupport.ab3@151> XINCLUDE "CLIModeSupport.ab3"
00014500 <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
00014520 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
0001452A <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
00014530 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014550 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
00014586 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
000145B6 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
000145E8 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000145EC <CLIModeSupport.ab3@167> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@169> XINCLUDE "CLIModeSupport.ab3"
00014622 <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@175> XINCLUDE "CLIModeSupport.ab3"
00014680 <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
0001469E <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
000146A6 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
000146AC <CLIModeSupport.ab3@190> XINCLUDE "CLIModeSupport.ab3"
000146B2 <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
000146D4 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000146EC <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
00014712 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
0001473C <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0001474A <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014750 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014764 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001477C <CLIModeSupport.ab3@201> XINCLUDE "CLIModeSupport.ab3"
0001478A <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
0001479E <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
000147D4 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
000147E2 <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
00014812 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014820 <CLIModeSupport.ab3@207> XINCLUDE "CLIModeSupport.ab3"
00014826 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014834 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001483A <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
00014840 <CLIModeSupport.ab3@212> XINCLUDE "CLIModeSupport.ab3"
0001484E <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
00014850 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014856 <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
0001486C <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014876 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0001487C <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
000148A6 <CLIModeSupport.ab3@224> XINCLUDE "CLIModeSupport.ab3"
000148E4 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000148E8 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
00014926 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
0001492A <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014968 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
0001496C <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014974 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
0001497C <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000149C0 <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
000149D2 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000149E0 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014A14 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014A38 <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
00014A42 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
00014A5C <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014A70 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014AC8 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014B68 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014B70 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014BA8 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014BAE <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014BBE <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014BE6 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014C0E <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014C16 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014C1C <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014C24 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014C4C <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014C54 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014C5C <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014C62 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014C68 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014C6E <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014C74 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014C7A <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014C80 <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
00014C86 <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
00014C8C <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00014C94 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014C9C <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
00014CC4 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014CCA <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014CD0 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014CD8 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014CF8 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014D08 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014D18 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014D28 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014D38 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014D48 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014D58 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014D68 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014D78 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
00014D88 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014D98 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014DA8 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014DB8 <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014DC8 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014DD8 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014DE8 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014DF8 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014E0A <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
00014E1C <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014E2E <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014E40 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00014E52 <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
00014E64 <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
00014E82 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014E88 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014E8E <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00014EB8 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
00014ECA <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00014EFE <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
00014F16 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
00014F62 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00014F74 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014FCA <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
0001503C <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
00015042 <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
00015076 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
0001509E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
000150C6 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00015100 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
00015118 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
0001519C <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000151B6 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00015204 <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
00015214 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
0001521C <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
00015230 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00015276 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
0001527C <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000152C6 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
00015330 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
00015396 <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
000153CA <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
000153F6 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00015444 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
00015468 <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
0001546E <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
0001547C <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000154DA <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
00015538 <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00015562 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001556C <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
00015574 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
000155B2 <CLIModeSupport.ab3@352> XINCLUDE "CLIModeSupport.ab3"
000155FE <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
00015610 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
00015666 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
000156DE <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
000156E4 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015718 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
00015740 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
00015776 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
00015784 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00015792 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
000157FA <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00015800 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
0001584A <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015894 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
000158C4 <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
000158EE <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015940 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015996 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
000159E6 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015A4C <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015AB8 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015AE4 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015B14 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015B90 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015BC0 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015BF0 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015C20 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015C50 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015C80 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015CB0 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015CE0 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015D10 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015D40 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015D70 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00015DEC <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00015E1E <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00015E50 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00015E80 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
00015E86 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
00015EFA <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00015F66 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00015F78 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
00015FA6 <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
00015FCE <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00015FE2 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
0001600C <CLIModeSupport.ab3@400> XINCLUDE "CLIModeSupport.ab3"
00016050 <CLIModeSupport.ab3@401> XINCLUDE "CLIModeSupport.ab3"
00016060 <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
00016070 <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00016076 <CLIModeSupport.ab3@404> XINCLUDE "CLIModeSupport.ab3"
00016086 <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00016094 <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
0001609E <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
000160D6 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001610E <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
00016146 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00016156 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
000161BE <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000161F6 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016206 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00016216 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
0001627E <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
000162E6 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
0001634E <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
000163B6 <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
0001641E <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
00016486 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
000164EE <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016556 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
00016566 <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
0001659E <CLIModeSupport.ab3@434> XINCLUDE "CLIModeSupport.ab3"
000165D8 <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
00016612 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
0001664A <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
00016670 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
00016678 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00016680 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00016688 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016690 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
000166A4 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
000166D2 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000166EC <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000166FA <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00016766 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
0001678C <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000167A8 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
000167B2 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
000167BC <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
000167C8 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
000167D6 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
000167E2 <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
0001681E <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00016838 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00016846 <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
00016866 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
00016874 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
00016882 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
00016888 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00016898 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
0001689C <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
000168D0 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00016904 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016908 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
0001693C <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00016940 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016974 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
0001697A <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
000169B0 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
000169E6 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016A1C <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016A54 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00016A8C <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00016B2C <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016B6C <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016BA4 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016BC2 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016BC6 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00016BCC <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00016BD2 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00016BD6 <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00016C00 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016C14 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00016C52 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016C86 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00016CBC <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016D14 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00016D42 <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00016D46 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016D7C <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00016DAA <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00016DD8 <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
00016DDC <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00016E12 <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
00016E40 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
00016E44 <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00016EA8 <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00016EAE <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00016EDC <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00016EE6 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00016EF0 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00016F0A <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00016F34 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00016F3A <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00016F5A <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
00016F64 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00016F68 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00016F6A <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00016F88 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00016F8A <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00016F90 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00016F96 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00016FC0 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00016FC2 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00016FF0 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00016FF4 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00017022 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00017026 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
0001704C <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
0001705C <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00017062 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00017068 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
00017096 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
000170A0 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
000170BA <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
000170D0 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
000170FA <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017128 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
0001713C <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00017178 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
000171B4 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
000171F0 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
0001722C <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
00017268 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
0001726E <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
0001729C <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
0001729E <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000172BC <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
000172C2 <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
000172EC <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
000172EE <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
00017300 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00017332 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
0001733C <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
000173A6 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
00017410 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
0001747A <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
000174E4 <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
0001754E <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
000175B8 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
000175BE <CLIModeSupport.ab3@591> XINCLUDE "CLIModeSupport.ab3"
00017628 <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
00017692 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
0001769C <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
00017706 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
0001770E <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
0001773C <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
00017740 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
00017768 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0001776E <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
00017774 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001777A <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00017780 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
00017786 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
00017790 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
0001779A <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
000177C8 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000177F4 <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
000177FC <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
00017830 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00017842 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
000178A8 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
0001790E <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
00017914 <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
0001791C <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
0001791E <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
0001793C <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
0001797A <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
000179B8 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
000179BE <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
000179C4 <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
000179CA <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
000179D4 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000179DA <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000179E0 <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
000179E6 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000179F0 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000179F4 <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00017A1E <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00017A20 <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
00017A26 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017A2A <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00017A30 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017A34 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00017A8E <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00017AA0 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017ACC <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017B72 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00017B90 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00017B96 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017BC0 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017BCA <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00017BFC <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017C16 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00017C2A <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017C34 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00017C4E <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017C78 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00017C9C <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00017CDA <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017CDE <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00017D1C <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00017D20 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
00017D5E <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00017D9C <CLIModeSupport.ab3@691> XINCLUDE "CLIModeSupport.ab3"
00017D9E <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00017DD2 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00017DD8 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00017E1C <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00017E2E <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00017E36 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00017E3C <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00017E46 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00017E54 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00017E5A <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00017E82 <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00017E9C <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00017EA6 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00017EAC <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00017ECA <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00017ED4 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00017EDA <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00017EE0 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00017EEA <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00017EF8 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00017EFE <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00017F0E <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00017F3A <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00017F50 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00017F5A <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00017F60 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
00017FB8 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00018026 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
0001803E <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
00018044 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
0001807C <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
000180AA <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
000180D4 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
000180DE <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00018106 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00018130 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000181D2 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
000181E0 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00018230 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00018240 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00018308 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
0001833C <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00018370 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
000183A4 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000183D8 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
0001840C <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00018440 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00018474 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
000184A8 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
000184AA <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
000184E8 <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
000184EC <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
0001852A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00018568 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
0001856A <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00018570 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
00018574 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00018576 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000185B4 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000185F2 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
000185F4 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
000185F6 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000185F8 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000185FE <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00018602 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00018612 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0001862A <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
00018642 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
0001865A <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00018684 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
000186AE <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000186DC <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000186E0 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00018708 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
0001870A <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00018748 <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
0001874C <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
0001878A <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
0001878E <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
000187CC <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
000187D0 <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
000187F6 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
0001881C <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00018842 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00018868 <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
0001888E <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
000188E4 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
0001893A <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00018988 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
000189DE <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00018A04 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00018A2A <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00018A50 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00018AA6 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00018AF4 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00018BAE <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018C04 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00018C2A <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018C50 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00018C76 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00018CCC <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00018D22 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00018D70 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018DBE <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018E0C <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018E5A <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00018EA8 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00018EF6 <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
00018F44 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00018F6A <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00018F90 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00018FB6 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00019004 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00019052 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
000190A8 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
000190F6 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00019144 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00019192 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
000191B8 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
000191DE <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00019204 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
0001923C <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00019264 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00019278 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
000192EC <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00019332 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000193E0 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
0001944C <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
0001945C <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
00019482 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
0001948C <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
000194B6 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
000194BC <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
000194CC <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
0001956C <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
000195AC <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
000195B2 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00019608 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00019612 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
0001961C <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00019636 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00019658 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
0001967A <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
000196D4 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
000196F6 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00019750 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00019792 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
00019798 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
000197A6 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000197AC <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
000197C0 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
000197CA <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
00019844 <CLIModeSupport.ab3@926> XINCLUDE "CLIModeSupport.ab3"
0001984E <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00019854 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00019868 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00019872 <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
000198F2 <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
000198FC <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00019902 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00019916 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00019920 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019968 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00019972 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019978 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
0001998C <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00019996 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
000199DE <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
000199E8 <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
000199EE <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
00019A02 <CLIModeSupport.ab3@953> XINCLUDE "CLIModeSupport.ab3"
00019A28 <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
00019A3C <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
00019A62 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00019A76 <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00019A9C <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
00019AB0 <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
00019ABA <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00019AE8 <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00019B38 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00019B58 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00019B70 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00019C54 <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00019C5E <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00019C64 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
00019C66 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00019C7A <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00019CAC <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00019CB2 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00019CF6 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00019D08 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00019D1A <CLIModeSupport.ab3@983> XINCLUDE "CLIModeSupport.ab3"
00019D24 <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00019D2A <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00019D34 <CLIModeSupport.ab3@987> XINCLUDE "CLIModeSupport.ab3"
00019D4E <CLIModeSupport.ab3@988> XINCLUDE "CLIModeSupport.ab3"
00019D4E <AmiBlitz3.ab2@95> XINCLUDE "CLIModeSupport.ab3"
00019DCE <AmiBlitz3.ab2@100> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
00019E06 <AmiBlitz3.ab2@101> If dynassign <> ""
00019E1C <AmiBlitz3.ab2@102>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
00019E26 <AmiBlitz3.ab2@103>     If *AssignSema
00019E36 <AmiBlitz3.ab2@104>       ObtainSemaphoreShared_ *AssignSema
00019E3C <AmiBlitz3.ab2@105>     Else                                                        ; no, create one...
00019E5C <AmiBlitz3.ab2@106>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
00019E66 <AmiBlitz3.ab2@107>       If *AssignSema
00019E76 <AmiBlitz3.ab2@108>         InitSemaphore_ *AssignSema
00019EAA <AmiBlitz3.ab2@110>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
00019EBC <AmiBlitz3.ab2@111>         If *AssignSema\ss_Link\ln_Name
00019EF8 <AmiBlitz3.ab2@112>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
00019F04 <AmiBlitz3.ab2@114>         *AssignSema\ss_Link\ln_Pri  = 1
00019F10 <AmiBlitz3.ab2@115>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
00019F20 <AmiBlitz3.ab2@117>         AddSemaphore_ *AssignSema
00019F30 <AmiBlitz3.ab2@118>         ObtainSemaphoreShared_ *AssignSema
00019F7C <AmiBlitz3.ab2@124>   mydir.s = dos_GetProgDir{"Sys:"}
00019FDC <AmiBlitz3.ab2@125>   If dos_SetAssign{dynassign,mydir,False}
0001A070 <AmiBlitz3.ab2@126>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001A0A8 <AmiBlitz3.ab2@129>   Poke$ ?str_blitz3assign,dynassign
0001A12A <AmiBlitz3.ab2@130>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001A1AC <AmiBlitz3.ab2@133>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001A22E <AmiBlitz3.ab2@134>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001A2B0 <AmiBlitz3.ab2@135>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001A332 <AmiBlitz3.ab2@136>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001A3A6 <AmiBlitz3.ab2@137>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001A41A <AmiBlitz3.ab2@138>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001A48E <AmiBlitz3.ab2@139>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001A4BC <AmiBlitz3.ab2@140>   dos_CreateDir{my_blitzlibsdir$}
0001A4E0 <AmiBlitz3.ab2@141>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001A50E <AmiBlitz3.ab2@142>   dos_CreateDir{my_residentsdir$}
0001A53C <AmiBlitz3.ab2@143>   dos_CreateDir{my_systemdir$}
0001A606 <AmiBlitz3.ab2@149> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001A63E <AmiBlitz3.ab2@150> Poke.s ?str_pedfile,pedfile$
0001A67C <AmiBlitz3.ab2@152> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001A68C <AmiBlitz3.ab2@153>   Poke.b ?start_without_libs,1
0001A692 <AmiBlitz3.ab2@154> Else
0001A6A2 <AmiBlitz3.ab2@155>   Poke.b ?start_without_libs,0
0001A6C8 <AmiBlitz3.ab2@158> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001A6F0 <AmiBlitz3.ab2@161> errorout.s = ""                                            ; for the error text
0001A6F6 <AmiBlitz3.ab2@162> ende.b     =  False                                        ; abort indicater
0001A72E <AmiBlitz3.ab2@164> If dos_CheckLib{"wizard.library",42} = False               ; needed for Compiler, PED and REDDebugger
0001A774 <AmiBlitz3.ab2@165>   errorout + "Missing wizard.library:\\nThis library is required in version 42 by this IDE.\\n\\n"
0001A77A <AmiBlitz3.ab2@166>   ende = True
0001A7B2 <AmiBlitz3.ab2@169> If dos_CheckLib{"reqtools.library",38} = False             ; needed for PED and REDDebugger
0001A7F8 <AmiBlitz3.ab2@170>   errorout + "Missing reqtools.library:\\nThis library is required in version 38 by the IDE.\\n\\n"
0001A7FE <AmiBlitz3.ab2@171>   ende = True
0001A836 <AmiBlitz3.ab2@174> If dos_CheckLib{"ted.library",1} = False                   ; needed for PED and REDDebugger
0001A87C <AmiBlitz3.ab2@175>   errorout + "Missing ted.library:\\nThis library is required in version 1 by the IDE.\\n\\n"
0001A882 <AmiBlitz3.ab2@176>   ende = True
0001A8BA <AmiBlitz3.ab2@179> If dos_CheckLib{"disassembler.library",40} = False         ; only needed for REDDebugger
0001A900 <AmiBlitz3.ab2@180> 
0001A938 <AmiBlitz3.ab2@183> If errorout <> ""                                          ; check if something to show
0001A97E <AmiBlitz3.ab2@184>    errorout = "Please reinstall AmiBlitz3 or install the librarys in LIBS:\\n\\n"+errorout
0001A98C <AmiBlitz3.ab2@185>    If ende
0001A9D2 <AmiBlitz3.ab2@186>      errorout + "...that the IDE can Start!"               ; for abort
0001A9D8 <AmiBlitz3.ab2@187>    Else
0001AA1E <AmiBlitz3.ab2@188>      errorout + "...for a full working IDE!"               ; for limited start
0001AA80 <AmiBlitz3.ab2@190>    error{!TRANS{errorout}}
0001AA8C <AmiBlitz3.ab2@193> dbg_fid.l = -1 ; no debug file id yet!
0001AAA0 <AmiBlitz3.ab2@195> If CLIMode = False ; test only in WB mode because libs only needed by PED      tomsmart 2012 03
0001AAB4 <AmiBlitz3.ab2@197>   If ende Then Goto abnormal_exit                            ; remove Assigns
0001AABE <AmiBlitz3.ab2@201> If CLIMode
0001AAC4 <AmiBlitz3.ab2@204>   err.l      = False                                       ; indicate that an error has occured
0001AACA <AmiBlitz3.ab2@205>   showhelp.l = False                                       ; show the CLI tool's help
0001AB22 <AmiBlitz3.ab2@208>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0001AB4A <AmiBlitz3.ab2@209>   cli_sourcefile.s   = ""
0001AB72 <AmiBlitz3.ab2@210>   cli_exefile.s      = ""
0001AB9A <AmiBlitz3.ab2@211>   cli_savefile.s     = ""
0001ABC2 <AmiBlitz3.ab2@212>   cli_dumpfile.s     = ""
0001ABEA <AmiBlitz3.ab2@213>   cli_includepath.s  = ""
0001AC12 <AmiBlitz3.ab2@214>   cli_blitzlibpath.s = ""
0001AC18 <AmiBlitz3.ab2@215>   cli_debuginfo.l    = False
0001AC1E <AmiBlitz3.ab2@216>   cli_run.l          = False
0001AC26 <AmiBlitz3.ab2@217>   cli_dumpflags.l    = $FFFFFFFF
0001AC4E <AmiBlitz3.ab2@218>   cli_info.s         = ""
0001AC54 <AmiBlitz3.ab2@219>   cli_release.l      = False
0001AC5E <AmiBlitz3.ab2@220>   cli_numargs.l      = dos_GetNumArgs{}
0001AC64 <AmiBlitz3.ab2@221>   cli_gui.l          = False
0001AC6C <AmiBlitz3.ab2@222>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
0001AC74 <AmiBlitz3.ab2@223>   cli_verbose.l      = 1
0001AC8C <AmiBlitz3.ab2@224>   If cli_numargs=0 Then showhelp=True
0001ACBC <AmiBlitz3.ab2@228>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001AD08 <AmiBlitz3.ab2@229>     larg.s = LCase$(arg)                                   ; lower case the option string
0001ADD0 <AmiBlitz3.ab2@230>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001AE06 <AmiBlitz3.ab2@231>     Select larg
0001AE52 <AmiBlitz3.ab2@232>       Case "s" : larg="source"
0001AEA4 <AmiBlitz3.ab2@233>       Case "e" : larg="exe"
0001AEF6 <AmiBlitz3.ab2@234>       Case "d" : larg="debug"
0001AF48 <AmiBlitz3.ab2@235>       Case "r" : larg="release"
0001AF9A <AmiBlitz3.ab2@236>       Case "h" : larg="help"
0001AFEC <AmiBlitz3.ab2@237>       Case "v" : larg="verbose"
0001AFFA <AmiBlitz3.ab2@238>     End Select
0001B030 <AmiBlitz3.ab2@240>     Select larg
0001B084 <AmiBlitz3.ab2@241>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001B0DE <AmiBlitz3.ab2@242>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001B138 <AmiBlitz3.ab2@243>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001B168 <AmiBlitz3.ab2@244>       Case "debug"    : cli_debuginfo   = True
0001B198 <AmiBlitz3.ab2@245>       Case "run"      : cli_run         = True
0001B1C8 <AmiBlitz3.ab2@246>       Case "release"  : cli_release     = True
0001B1F8 <AmiBlitz3.ab2@247>       Case "ped"      : cli_gui         = True
0001B252 <AmiBlitz3.ab2@248>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001B2C4 <AmiBlitz3.ab2@249>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001B2F4 <AmiBlitz3.ab2@250>                         cli_dumpfile    = dos_GetNextArg{}
0001B2FC <AmiBlitz3.ab2@251>                         cli_dumpflags   = $0
0001B35C <AmiBlitz3.ab2@252>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001B3BC <AmiBlitz3.ab2@253>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001B41C <AmiBlitz3.ab2@254>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001B47C <AmiBlitz3.ab2@255>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001B4DC <AmiBlitz3.ab2@256>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001B53C <AmiBlitz3.ab2@257>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001B59C <AmiBlitz3.ab2@258>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001B5FC <AmiBlitz3.ab2@259>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001B65C <AmiBlitz3.ab2@260>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001B66E <AmiBlitz3.ab2@261>                         If cli_dumpflags = $0
0001B674 <AmiBlitz3.ab2@262>                          err=True
0001B708 <AmiBlitz3.ab2@263>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001B762 <AmiBlitz3.ab2@265>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001B792 <AmiBlitz3.ab2@266>       Case "h"        : showhelp        = True             ; show the help and quit
0001B798 <AmiBlitz3.ab2@267>       Default
0001B7D0 <AmiBlitz3.ab2@268>         If arg><""
0001B864 <AmiBlitz3.ab2@269>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001B86A <AmiBlitz3.ab2@270>           err = True
0001B878 <AmiBlitz3.ab2@272>     End Select
0001B8C4 <AmiBlitz3.ab2@273>   Until arg = "" OR err=True          ; until we processed all arguments
0001B8E6 <AmiBlitz3.ab2@276>   If err><False OR showhelp = True
0001B8F0 <AmiBlitz3.ab2@277>     If showhelp
0001B952 <AmiBlitz3.ab2@278>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001B98A <AmiBlitz3.ab2@279>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001B9C2 <AmiBlitz3.ab2@280>     NPrint "\\nOptions:"
0001B9FA <AmiBlitz3.ab2@281>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001BA32 <AmiBlitz3.ab2@282>     NPrint "  -(e)xe <file>       : output executable filename"
0001BA6A <AmiBlitz3.ab2@283>     NPrint "  -(d)ebug            : compile with debug info"
0001BAA2 <AmiBlitz3.ab2@284>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001BADA <AmiBlitz3.ab2@285>     NPrint "  -run                : run compiled program"
0001BB12 <AmiBlitz3.ab2@286>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001BB4A <AmiBlitz3.ab2@287>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001BB82 <AmiBlitz3.ab2@288>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001BBBA <AmiBlitz3.ab2@289>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001BBF2 <AmiBlitz3.ab2@290>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001BC2A <AmiBlitz3.ab2@291>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001BC62 <AmiBlitz3.ab2@292>     NPrint "  -(h)elp             : show this help"
0001BC9A <AmiBlitz3.ab2@293>     NPrint "\\nExample:"
0001BCD2 <AmiBlitz3.ab2@294>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001BD0A <AmiBlitz3.ab2@295>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001BD10 <AmiBlitz3.ab2@298>     Goto abnormal_exit
0001BD2C <AmiBlitz3.ab2@301>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001BD90 <AmiBlitz3.ab2@302>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001BDA0 <AmiBlitz3.ab2@305> Poke.l ?CLIMode,CLIMode
0001BDC4 <AmiBlitz3.ab2@335>   Dim incdim.s (#maxincludes)
0001BDE8 <AmiBlitz3.ab2@336>   Dim incline.l(#maxincludes)
0001BE02 <AmiBlitz3.ab2@602> Function.s Get_Libinfo{addr_libnum.l}
0001BE0E <AmiBlitz3.ab2@604>   lib_ab2.b = False : lib_os.b = False
0001BE14 <AmiBlitz3.ab2@605>   addr_counter.l = addr_libnum
0001BE1C <AmiBlitz3.ab2@606>   skip.l = 0
0001BE2E <AmiBlitz3.ab2@607>   If addr_counter=0
0001BE5C <AmiBlitz3.ab2@608>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001BE7A <AmiBlitz3.ab2@609>     Function Return ""
0001BE88 <AmiBlitz3.ab2@614>     mem.l = Peek.l(addr_counter)
0001BE96 <AmiBlitz3.ab2@619>     addr_counter + 2
0001BEB6 <AmiBlitz3.ab2@620>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001BED0 <AmiBlitz3.ab2@621>     If (mem LSR 16) = $ffe2
0001BED6 <AmiBlitz3.ab2@623>       lib_os = True
0001BEDE <AmiBlitz3.ab2@624>       skip = 10
0001BF24 <AmiBlitz3.ab2@625>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001BF68 <AmiBlitz3.ab2@627>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001BF7E <AmiBlitz3.ab2@629>   If (addr_counter>addr_libnum + $400)
0001BF9C <AmiBlitz3.ab2@631>     Function Return ""
0001BFA2 <AmiBlitz3.ab2@632>   Else
0001BFC6 <AmiBlitz3.ab2@633>     Function Return Peek$(addr_counter + skip)
0001BFD0 <AmiBlitz3.ab2@635> End Function
0001BFEE <AmiBlitz3.ab2@675>   !asm
0001BFF4 <AmiBlitz3.ab2@676>   MOVEA.l _execbase,A6
0001BFF8 <AmiBlitz3.ab2@677>   MOVEM.l d0/a0,-(a7)
0001BFFA <AmiBlitz3.ab2@679>   MOVEQ #127,d0
0001C000 <AmiBlitz3.ab2@680>   LEA chartab,a0
0001C006 <AmiBlitz3.ab2@683>     MOVE.b #1,128(a0)
0001C008 <AmiBlitz3.ab2@684>     CLR.b (a0)+
0001C00C <AmiBlitz3.ab2@685>   DBF d0,'l12
0001C012 <AmiBlitz3.ab2@687>   LEA chartab,a0
0001C016 <AmiBlitz3.ab2@688>   MOVE.b #1,(a0)
0001C01C <AmiBlitz3.ab2@689>   MOVE.b #1,","(a0)
0001C022 <AmiBlitz3.ab2@690>   MOVE.b #1,";"(a0)
0001C028 <AmiBlitz3.ab2@691>   MOVE.b #1,":"(a0)
0001C02E <AmiBlitz3.ab2@692>   MOVE.b #1,"("(a0)
0001C034 <AmiBlitz3.ab2@693>   MOVE.b #1,")"(a0)
0001C03A <AmiBlitz3.ab2@694>   MOVE.b #1,"="(a0)
0001C040 <AmiBlitz3.ab2@695>   MOVE.b #1,"+"(a0)
0001C046 <AmiBlitz3.ab2@696>   MOVE.b #1,"-"(a0)
0001C04C <AmiBlitz3.ab2@697>   MOVE.b #1,"*"(a0)
0001C052 <AmiBlitz3.ab2@698>   MOVE.b #1,"/"(a0)
0001C058 <AmiBlitz3.ab2@699>   MOVE.b #1,"$"(a0)
0001C05E <AmiBlitz3.ab2@700>   MOVE.b #1,"%"(a0)
0001C064 <AmiBlitz3.ab2@701>   MOVE.b #1,"."(a0)
0001C06A <AmiBlitz3.ab2@702>   MOVE.b #1,"["(a0)
0001C070 <AmiBlitz3.ab2@703>   MOVE.b #1,"]"(a0)
0001C076 <AmiBlitz3.ab2@704>   MOVE.b #1,"{"(a0)
0001C07C <AmiBlitz3.ab2@705>   MOVE.b #1,"}"(a0)
0001C082 <AmiBlitz3.ab2@706>   MOVE.b #1,"\"(a0)
0001C088 <AmiBlitz3.ab2@707>   MOVE.b #1,">"(a0)
0001C08E <AmiBlitz3.ab2@708>   MOVE.b #1,"<"(a0)
0001C094 <AmiBlitz3.ab2@709>   MOVE.b #1,"&"(a0)
0001C09A <AmiBlitz3.ab2@710>   MOVE.b #1,"|"(a0)
0001C0A0 <AmiBlitz3.ab2@711>   MOVE.b #1,"^"(a0)
0001C0A6 <AmiBlitz3.ab2@712>   MOVE.b #1,$7e(a0)
0001C0AC <AmiBlitz3.ab2@713>   MOVE.w #$0101,1(a0)
0001C0B2 <AmiBlitz3.ab2@715>   LEA instrtab,a0
0001C0B8 <AmiBlitz3.ab2@716>   MOVE.l #labelhash-instrtab,d0
0001C0BA <AmiBlitz3.ab2@717>   ASR.l #2,d0
0001C0BC <AmiBlitz3.ab2@718>   SUBQ.l #1,d0
0001C0BE <AmiBlitz3.ab2@721>    CLR.l (a0)+
0001C0C0 <AmiBlitz3.ab2@722>    SUBQ.l #1,d0
0001C0C4 <AmiBlitz3.ab2@723>   BNE 'l10
0001C0CA <AmiBlitz3.ab2@725>   LEA allowtab,a0
0001C0D0 <AmiBlitz3.ab2@726>   MOVE.l #255,d0
0001C0D2 <AmiBlitz3.ab2@729>     CLR.b (a0)+
0001C0D6 <AmiBlitz3.ab2@730>   DBF d0,'la1
0001C0DC <AmiBlitz3.ab2@732>   LEA allowtab,a0
0001C0E2 <AmiBlitz3.ab2@733>   MOVE.b #1,$7d(a0)
0001C0E8 <AmiBlitz3.ab2@734>   MOVE.b #1,$7c(a0)
0001C0EE <AmiBlitz3.ab2@735>   MOVE.b #1,$44(a0)
0001C0F4 <AmiBlitz3.ab2@736>   MOVE.b #1,$45(a0)
0001C0FA <AmiBlitz3.ab2@737>   MOVE.b #1,$b9(a0)
0001C100 <AmiBlitz3.ab2@738>   MOVE.b #1,$89(a0)
0001C106 <AmiBlitz3.ab2@739>   MOVE.b #1,$ce(a0)
0001C10C <AmiBlitz3.ab2@740>   MOVE.b #1,$cf(a0)
0001C112 <AmiBlitz3.ab2@741>   MOVE.b #1,$d0(a0)
0001C118 <AmiBlitz3.ab2@742>   MOVE.b #1,$cd(a0)
0001C11A <AmiBlitz3.ab2@743>   MOVEQ #0,d0
0001C120 <AmiBlitz3.ab2@745>   MOVEA.l _execbase,a6
0001C126 <AmiBlitz3.ab2@750>   MOVE.l #$10000,d0
0001C12C <AmiBlitz3.ab2@751>   MOVE.l #80000,d1
0001C12E <AmiBlitz3.ab2@752>   MOVE.l d1,d2
0001C132 <AmiBlitz3.ab2@753>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001C138 <AmiBlitz3.ab2@754>   MOVE.l d0,mempool
0001C13C <AmiBlitz3.ab2@755>   MOVEM.l (a7)+,d0/a0
0001C142 <AmiBlitz3.ab2@756>   TST.l mempool
0001C146 <AmiBlitz3.ab2@757>   BEQ shutdown_compiler
0001C14A <AmiBlitz3.ab2@759>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001C150 <AmiBlitz3.ab2@760>   MOVE.l A4,ptr_ThisTask
0001C154 <AmiBlitz3.ab2@762>   BSR.w open_doslibrary
0001C158 <AmiBlitz3.ab2@763>   BEQ.w shutdown_compiler
0001C15E <AmiBlitz3.ab2@765>   MOVE.l D2,stacksize
0001C160 <AmiBlitz3.ab2@769>   MOVEQ.l #$00,D0
0001C166 <AmiBlitz3.ab2@770>   LEA tokens,A0
0001C168 <AmiBlitz3.ab2@773>     ADDQ.w #1,D0
0001C16A <AmiBlitz3.ab2@774>     MOVE.l (A0),D1
0001C16E <AmiBlitz3.ab2@775>     BEQ.w JL_0_2D1C
0001C170 <AmiBlitz3.ab2@776>     MOVEA.l D1,A0
0001C174 <AmiBlitz3.ab2@777> BRA.w JL_0_2D0E
0001C17A <AmiBlitz3.ab2@780>   MOVE.l A0,end_of_tokenlist
0001C17E <AmiBlitz3.ab2@782>   BSR.w makeasmtable
0001C186 <AmiBlitz3.ab2@783>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001C18A <AmiBlitz3.ab2@785>   BSR.w open_mathlibrary
0001C18E <AmiBlitz3.ab2@786>   BEQ.w freemem_and_quit4
0001C194 <AmiBlitz3.ab2@788>   MOVE.l constmaxpc,D0
0001C196 <AmiBlitz3.ab2@789>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001C19C <AmiBlitz3.ab2@790>   MOVEA.l _execbase,A6
0001C1A0 <AmiBlitz3.ab2@791>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001C1A6 <AmiBlitz3.ab2@792>   MOVE.l D0,constpcat
0001C1AA <AmiBlitz3.ab2@793>   BEQ.w freemem_and_quit3
0001C1B0 <AmiBlitz3.ab2@794>   ADD.l constmaxpc,D0
0001C1B6 <AmiBlitz3.ab2@795>   MOVE.l D0,constlibat
0001C1BC <AmiBlitz3.ab2@797>   MOVE.l macrobuffer_size,D0
0001C1C2 <AmiBlitz3.ab2@798>   CMP.l #40000,d0
0001C1C6 <AmiBlitz3.ab2@799>   BGE 'ok
0001C1CC <AmiBlitz3.ab2@800>     MOVE.l #40000,d0
0001C1D2 <AmiBlitz3.ab2@801>     MOVE.l d0,macrobuffer_size
0001C1D4 <AmiBlitz3.ab2@804>   ADDQ.l #4,d0
0001C1D6 <AmiBlitz3.ab2@805>   MOVEQ.l #$01,D1
0001C1DC <AmiBlitz3.ab2@806>   MOVEA.l _execbase,A6
0001C1E0 <AmiBlitz3.ab2@807>   JSR _AllocMem(A6)                                        ;macro mem
0001C1E2 <AmiBlitz3.ab2@808>   MOVE.l d0,a0
0001C1E8 <AmiBlitz3.ab2@809>   MOVE.l macrobuffer_size,(a0)+
0001C1EA <AmiBlitz3.ab2@810>   MOVE.l a0,d0
0001C1F0 <AmiBlitz3.ab2@811>   MOVE.l D0,ptr_macrobuffer_begin
0001C1F4 <AmiBlitz3.ab2@812>   BEQ.w freemem_and_quit2
0001C1FA <AmiBlitz3.ab2@813>   ADD.l macrobuffer_size,D0
0001C200 <AmiBlitz3.ab2@814>   MOVE.l D0,ptr_macrobuffer_end
0001C206 <AmiBlitz3.ab2@816>   TST.l CLIMode
0001C20A <AmiBlitz3.ab2@817>   BEQ load_ped
0001C234 <AmiBlitz3.ab2@820>   !basic
0001C23E <AmiBlitz3.ab2@821>   succ.l = InitEmulatedPED{}
0001C242 <AmiBlitz3.ab2@822>   GetD0 succ
0001C260 <AmiBlitz3.ab2@823>   !asm
0001C262 <AmiBlitz3.ab2@824>   TST.l d0
0001C266 <AmiBlitz3.ab2@825>   BEQ freemem_and_quit
0001C26C <AmiBlitz3.ab2@826> JMP skip_ped
0001C272 <AmiBlitz3.ab2@831>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001C278 <AmiBlitz3.ab2@832>   MOVEA.l _dosbase,A6
0001C27C <AmiBlitz3.ab2@833>   JSR _LoadSeg(A6)
0001C282 <AmiBlitz3.ab2@834>   MOVE.l D0,ptr_seg_ped
0001C286 <AmiBlitz3.ab2@836>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001C288 <AmiBlitz3.ab2@840>   MOVEA.l D0,A2
0001C28A <AmiBlitz3.ab2@841>   ADDA.l A2,A2
0001C28C <AmiBlitz3.ab2@842>   ADDA.l A2,A2
0001C292 <AmiBlitz3.ab2@844>   LEA teddata,a1                                           ;lea edstruct,A1
0001C298 <AmiBlitz3.ab2@845>   MOVE.l #"TEDY",d1
0001C29C <AmiBlitz3.ab2@846>   JSR 4(A2)                                                ; Run PED
0001C2A2 <AmiBlitz3.ab2@848>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001C2A8 <AmiBlitz3.ab2@849>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001C2E6 <AmiBlitz3.ab2@851>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001C2EA <AmiBlitz3.ab2@852>   BEQ.w unload_ped
0001C2EE <AmiBlitz3.ab2@853> 
0001C2F2 <AmiBlitz3.ab2@854>   BNE old_version_of_PED                                   ; no, than exit
0001C330 <AmiBlitz3.ab2@860>   !ComData_GetL{comData_Magic,D0}
0001C336 <AmiBlitz3.ab2@861>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001C33A <AmiBlitz3.ab2@862>   BNE unload_ped
0001C372 <AmiBlitz3.ab2@865>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001C3AA <AmiBlitz3.ab2@866>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001C3E2 <AmiBlitz3.ab2@867>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001C41A <AmiBlitz3.ab2@868>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001C452 <AmiBlitz3.ab2@869>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001C48A <AmiBlitz3.ab2@870>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001C4C2 <AmiBlitz3.ab2@871>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001C4FA <AmiBlitz3.ab2@872>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001C532 <AmiBlitz3.ab2@873>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001C56A <AmiBlitz3.ab2@874>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001C5A2 <AmiBlitz3.ab2@875>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001C5DA <AmiBlitz3.ab2@876>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001C612 <AmiBlitz3.ab2@879>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001C64A <AmiBlitz3.ab2@880>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001C682 <AmiBlitz3.ab2@883>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001C6BA <AmiBlitz3.ab2@884>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001C6F2 <AmiBlitz3.ab2@886>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001C72A <AmiBlitz3.ab2@887>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001C762 <AmiBlitz3.ab2@889>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001C79A <AmiBlitz3.ab2@890>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001C7D2 <AmiBlitz3.ab2@892>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001C80A <AmiBlitz3.ab2@893>   !ComData_SetL{comPtr_Stringbuffer_Long         ,#stringbuffer}
0001C842 <AmiBlitz3.ab2@894>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001C87A <AmiBlitz3.ab2@895>   !ComData_SetL{comPtr_Create_Iconfile_Byte      ,#create_iconfile}
0001C8B2 <AmiBlitz3.ab2@896>   !ComData_SetL{comPtr_Make_Smallestcode_Byte    ,#make_smallestcode}
0001C8EA <AmiBlitz3.ab2@897>   !ComData_SetL{comPtr_Link_Debuginfo_Byte       ,#link_debuginfo}
0001C922 <AmiBlitz3.ab2@898>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001C95A <AmiBlitz3.ab2@899>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001C992 <AmiBlitz3.ab2@900>   !ComData_SetL{comPtr_Interruptcheck_Byte       ,#interruptcheck}
0001C9CA <AmiBlitz3.ab2@901>   !ComData_SetL{comPtr_Assemblercheck_Byte       ,#assemblercheck}
0001CA02 <AmiBlitz3.ab2@902>   !ComData_SetL{comPtr_Overflowcheck_Byte        ,#overflowcheck}
0001CA3A <AmiBlitz3.ab2@903>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001CA72 <AmiBlitz3.ab2@904>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001CAAA <AmiBlitz3.ab2@905>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001CAB0 <AmiBlitz3.ab2@909>   CLR.w returncode_org
0001CADA <AmiBlitz3.ab2@911>   !basic
0001CAE4 <AmiBlitz3.ab2@912>   If CLIMode
0001CB56 <AmiBlitz3.ab2@913>     If cli_verbose>=2 Then NPrint !TRANS{"Loading BlitzLibs."}
0001CB74 <AmiBlitz3.ab2@915>   !asm
0001CB7A <AmiBlitz3.ab2@919>   TST.b start_without_libs
0001CB7E <AmiBlitz3.ab2@920>   BNE skip_loading_libs
0001CB82 <AmiBlitz3.ab2@921>     BSR.w call_setpointerbusy
0001CB8C <AmiBlitz3.ab2@922>     MOVE.l #$FFFFffff,linenumat
0001CB90 <AmiBlitz3.ab2@923>     BSR.w get_libraries
0001CB96 <AmiBlitz3.ab2@924>     JSR init_libraries
0001CB9A <AmiBlitz3.ab2@925>     BSR.w init_buffers
0001CB9E <AmiBlitz3.ab2@926>     BSR.w call_setpointernormal
0001CBA0 <AmiBlitz3.ab2@931>   MOVEQ.l #-$01,D0
0001CBA6 <AmiBlitz3.ab2@932>   MOVEA.l _execbase,A6
0001CBAA <AmiBlitz3.ab2@933>   JSR _AllocSignal(A6)
0001CBB0 <AmiBlitz3.ab2@934>   MOVE.l D0,signalNum
0001CBB2 <AmiBlitz3.ab2@935>   MOVEQ.l #$00,D1
0001CBB4 <AmiBlitz3.ab2@936>   BSET D0,D1
0001CBBA <AmiBlitz3.ab2@937>   MOVE.l D1,signals
0001CBC0 <AmiBlitz3.ab2@941>   MOVE.l #str_defaultdbug,D1
0001CBC4 <AmiBlitz3.ab2@942>   MOVEA.l _dosbase(PC),A6
0001CBC8 <AmiBlitz3.ab2@943>   JSR _LoadSeg(A6)
0001CBCE <AmiBlitz3.ab2@944>   MOVE.l D0,ptr_seg_debugger
0001CBD0 <AmiBlitz3.ab2@945>   TST.l d0
0001CBD4 <AmiBlitz3.ab2@946>   BNE ok_12
0001CBFE <AmiBlitz3.ab2@947>     !basic
0001CC54 <AmiBlitz3.ab2@948>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001CC72 <AmiBlitz3.ab2@949>     !asm
0001CC78 <AmiBlitz3.ab2@952>   TST.l CLIMode
0001CC7C <AmiBlitz3.ab2@953>   BEQ run_ped
0001CCA6 <AmiBlitz3.ab2@959>   !basic
0001CCAC <AmiBlitz3.ab2@960>   err.l = False
0001CCD8 <AmiBlitz3.ab2@968>   If cli_sourcefile
0001CCF8 <AmiBlitz3.ab2@969>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001CD02 <AmiBlitz3.ab2@970>     If lock
0001CD26 <AmiBlitz3.ab2@971>       NameFromLock_ lock,&cli_tempstr,1024
0001CD50 <AmiBlitz3.ab2@972>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001CD60 <AmiBlitz3.ab2@973>       UnLock_ lock
0001CD8C <AmiBlitz3.ab2@976>     If cli_exefile
0001CDDE <AmiBlitz3.ab2@977>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001CE36 <AmiBlitz3.ab2@978>       path.s = dos_PathPart{cli_exefile}
0001CE56 <AmiBlitz3.ab2@979>       lock.l = Lock_(&path,#ACCESS_READ)
0001CE60 <AmiBlitz3.ab2@980>       If lock
0001CE84 <AmiBlitz3.ab2@981>         NameFromLock_ lock,&cli_tempstr,1024
0001CEAE <AmiBlitz3.ab2@982>         path.s = Peek.s(&cli_tempstr)
0001CF5C <AmiBlitz3.ab2@983>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001CF6C <AmiBlitz3.ab2@984>         UnLock_ lock
0001CFB6 <AmiBlitz3.ab2@995>   If cli_verbose>=2 Then NPrint "Initializing token hashmap."
0001D02A <AmiBlitz3.ab2@996> 
0001D034 <AmiBlitz3.ab2@997>   *PreProcessor.preprocessor = preproc_Create{}
0001D044 <AmiBlitz3.ab2@998>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001D076 <AmiBlitz3.ab2@999>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001D08A <AmiBlitz3.ab2@1000>   If *PreProcessor\tokens=#NULL
0001D104 <AmiBlitz3.ab2@1001>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001D10E <AmiBlitz3.ab2@1002>     preproc_QueryTokens{*PreProcessor}
0001D140 <AmiBlitz3.ab2@1003>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001D18C <AmiBlitz3.ab2@1011>   If cli_sourcefile><"" AND err=False
0001D232 <AmiBlitz3.ab2@1012>     If cli_verbose>=2 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22."
0001D264 <AmiBlitz3.ab2@1013>     succ=LoadSource{cli_sourcefile}
0001D26E <AmiBlitz3.ab2@1014>     If succ
0001D2A6 <AmiBlitz3.ab2@1015> 
0001D320 <AmiBlitz3.ab2@1016>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0001D35A <AmiBlitz3.ab2@1017>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
0001D364 <AmiBlitz3.ab2@1019>         If comerr
0001D36A <AmiBlitz3.ab2@1021>         Else
0001D370 <AmiBlitz3.ab2@1025>     Else
0001D3C0 <AmiBlitz3.ab2@1026>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001D40C <AmiBlitz3.ab2@1030>   If cli_savefile><"" AND err=False
0001D474 <AmiBlitz3.ab2@1031>     If cli_verbose>=2 Then NPrint "Saving Sourcefiles as "+cli_savefile
0001D4A2 <AmiBlitz3.ab2@1032>     SaveSource{cli_savefile}
0001D4EE <AmiBlitz3.ab2@1035>   If cli_dumpfile><"" AND err=False
0001D538 <AmiBlitz3.ab2@1036>     If cli_verbose>=2 Then NPrint "Saving dumpfile."
0001D56E <AmiBlitz3.ab2@1037>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001D578 <AmiBlitz3.ab2@1040>   If cli_run
0001D58C <AmiBlitz3.ab2@1041>     If comerr=False
0001D5B8 <AmiBlitz3.ab2@1042>       If cli_exefile
0001D632 <AmiBlitz3.ab2@1043>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0001D660 <AmiBlitz3.ab2@1044>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0001D6AA <AmiBlitz3.ab2@1046>       If cli_verbose>=1 Then NPrint "Running program..."
0001D6B0 <AmiBlitz3.ab2@1047>       RunSource{}
0001D6B2 <AmiBlitz3.ab2@1049>         CLR.l d0
0001D6F0 <AmiBlitz3.ab2@1050>         !ComData_GetB{comByte_RunningFlag,D0}
0001D6F4 <AmiBlitz3.ab2@1051>         running.l = PutD0
0001D710 <AmiBlitz3.ab2@1052>         If running Then Delay_ 50
0001D724 <AmiBlitz3.ab2@1054>       Until running=False
0001D738 <AmiBlitz3.ab2@1055>       If Peek.l(?_runerror)
0001D788 <AmiBlitz3.ab2@1056>         If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001D79A <AmiBlitz3.ab2@1067>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001D7E4 <AmiBlitz3.ab2@1068>   If cli_verbose>=2 Then NPrint "Exit AmiBlitz3."
0001D7EA <AmiBlitz3.ab2@1069>   DeinitEmulatedPED{}
0001D808 <AmiBlitz3.ab2@1071>   !asm
0001D80E <AmiBlitz3.ab2@1072> JMP terminate_ab3
0001D814 <AmiBlitz3.ab2@1077>   MOVEA.l ped_startup_addr,A1
0001D81A <AmiBlitz3.ab2@1078>   LEA str_tempfilename,A0
0001D81C <AmiBlitz3.ab2@1079>   JSR (A1)
0001D822 <AmiBlitz3.ab2@1086>   MOVE.l signalNum,D0
0001D828 <AmiBlitz3.ab2@1087>   MOVEA.l _execbase,A6
0001D82C <AmiBlitz3.ab2@1088>   JSR _FreeSignal(A6)
0001D832 <AmiBlitz3.ab2@1090>   MOVE.l ptr_seg_debugger,D1
0001D836 <AmiBlitz3.ab2@1091>   BEQ.b skip_unload_debugger
0001D83A <AmiBlitz3.ab2@1092>     MOVEA.l _dosbase(PC),A6
0001D83E <AmiBlitz3.ab2@1093>     JSR _UnLoadSeg(A6)
0001D842 <AmiBlitz3.ab2@1096>   BSR.w Aclearallvars
0001D846 <AmiBlitz3.ab2@1097>   BSR.w free_residents
0001D84C <AmiBlitz3.ab2@1098>   JSR free_blitzlibs
0001D852 <AmiBlitz3.ab2@1101>   MOVE.l ptr_seg_ped,D1
0001D856 <AmiBlitz3.ab2@1102>   BEQ freemem_and_quit
0001D85A <AmiBlitz3.ab2@1103>   MOVEA.l _dosbase(PC),A6
0001D85E <AmiBlitz3.ab2@1104>   JSR _UnLoadSeg(A6)
0001D862 <AmiBlitz3.ab2@1105>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001D88C <AmiBlitz3.ab2@1108>   !basic
0001D944 <AmiBlitz3.ab2@1109> 
0001D962 <AmiBlitz3.ab2@1110>   !asm
0001D966 <AmiBlitz3.ab2@1111>   BRA freemem_and_quit
0001D990 <AmiBlitz3.ab2@1114>   !basic
0001DA48 <AmiBlitz3.ab2@1115>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001DA66 <AmiBlitz3.ab2@1116>   !asm
0001DA6A <AmiBlitz3.ab2@1120>   BSR.w freeallox
0001DA70 <AmiBlitz3.ab2@1121>   MOVEA.l ptr_macrobuffer_begin,A1
0001DA72 <AmiBlitz3.ab2@1122>   MOVE.l -(a1),D0
0001DA74 <AmiBlitz3.ab2@1123>   ADDQ.l #4,d0
0001DA7A <AmiBlitz3.ab2@1124>   MOVEA.l _execbase,A6
0001DA7E <AmiBlitz3.ab2@1125>   JSR _FreeMem(A6)
0001DA84 <AmiBlitz3.ab2@1128>   MOVEA.l _dosbase,A1
0001DA8A <AmiBlitz3.ab2@1129>   MOVEA.l _execbase,A6
0001DA8E <AmiBlitz3.ab2@1130>   JSR _CloseLibrary(A6)
0001DA94 <AmiBlitz3.ab2@1132>   MOVEA.l constpcat,A1
0001DA9A <AmiBlitz3.ab2@1133>   MOVE.l constmaxpc,D0
0001DAA0 <AmiBlitz3.ab2@1134>   MOVEA.l _execbase,A6
0001DAA4 <AmiBlitz3.ab2@1135>   JSR _FreeMem(A6)
0001DAAA <AmiBlitz3.ab2@1138>   MOVEA.l _mathffpbase,A1
0001DAB0 <AmiBlitz3.ab2@1139>   MOVEA.l _execbase,A6
0001DAB4 <AmiBlitz3.ab2@1140>   JSR _CloseLibrary(A6)
0001DABA <AmiBlitz3.ab2@1150>     MOVEA.l _execbase,A6
0001DAC0 <AmiBlitz3.ab2@1151>     MOVE.l mempool,a0
0001DAC4 <AmiBlitz3.ab2@1152>     JSR _DeletePool(a6)
0001DACA <AmiBlitz3.ab2@1153>     CLR.l pushat
0001DAD0 <AmiBlitz3.ab2@1160>   JSR free_unusedfunctions
0001DAD2 <AmiBlitz3.ab2@1161>   MOVEQ #0,d0
0001DAE0 <AmiBlitz3.ab2@1164>   !exitasm
0001DB18 <AmiBlitz3.ab2@1165>   If dynassign<>""
0001DB22 <AmiBlitz3.ab2@1166>     If *AssignSema
0001DB32 <AmiBlitz3.ab2@1167>       ReleaseSemaphore_ *AssignSema
0001DB4A <AmiBlitz3.ab2@1168>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001DBDE <AmiBlitz3.ab2@1169>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001DC18 <AmiBlitz3.ab2@1170>         dos_RemAssign{dynassign}
0001DC28 <AmiBlitz3.ab2@1171>         RemSemaphore_ *AssignSema
0001DC38 <AmiBlitz3.ab2@1172>         ReleaseSemaphore_ *AssignSema
0001DC6E <AmiBlitz3.ab2@1173>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001DC7E <AmiBlitz3.ab2@1174>         FreeVec_ *AssignSema
0001DC86 <AmiBlitz3.ab2@1175>         *AssignSema = #NULL
0001DCB4 <AmiBlitz3.ab2@1179>   SetCurrentDir{cli_path}
0001DCD6 <AmiBlitz3.ab2@1180>   !coutclose
0001DCDC <AmiBlitz3.ab2@1181> End
0001DCE8 <AmiBlitz3.ab2@1186> str_doslibrary:     Dc.b "dos.library",0 : Even
0001DCEC <AmiBlitz3.ab2@1187> _dosbase:           Ds.l 1
0001DCF2 <AmiBlitz3.ab2@1191>   MOVEA.l _execbase,A6
0001DCF8 <AmiBlitz3.ab2@1192>   LEA str_doslibrary,A1
0001DCFC <AmiBlitz3.ab2@1193>   JSR _OldOpenLibrary(A6)
0001DD02 <AmiBlitz3.ab2@1194>   MOVE.l D0,_dosbase
0001DD04 <AmiBlitz3.ab2@1195> RTS
0001DD0A <AmiBlitz3.ab2@1199>   MOVEA.l #str_mathffpname,A1
0001DD10 <AmiBlitz3.ab2@1200>   MOVEA.l _execbase,A6
0001DD14 <AmiBlitz3.ab2@1201>   JSR _OldOpenLibrary(A6)
0001DD1A <AmiBlitz3.ab2@1202>   MOVE.l D0,_mathffpbase
0001DD1C <AmiBlitz3.ab2@1203> RTS
0001DD4E <AmiBlitz3.ab2@1209>   !ComData_JMP{comFunc_SetNormalPointer}
0001DD80 <AmiBlitz3.ab2@1217>   !ComData_JMP{comFunc_SetBusyPointer}
0001DDAA <AmiBlitz3.ab2@1222>   !basic
0001DDAE <AmiBlitz3.ab2@1223>   ab3save_filenameP.l = PutD0
0001DDB8 <AmiBlitz3.ab2@1224>   If ab3save_filenameP
0001DDE0 <AmiBlitz3.ab2@1225>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DE0E <AmiBlitz3.ab2@1227>     SaveSource{ab3save_filename}
0001DE14 <AmiBlitz3.ab2@1228>   Else
0001DE42 <AmiBlitz3.ab2@1229>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001DE60 <AmiBlitz3.ab2@1231>   !asm
0001DE62 <AmiBlitz3.ab2@1232>   RTS
0001DE8C <AmiBlitz3.ab2@1235>   !basic
0001DE90 <AmiBlitz3.ab2@1236>   ab3save_filenameP.l = PutD0
0001DE9A <AmiBlitz3.ab2@1237>   If ab3save_filenameP
0001DEC2 <AmiBlitz3.ab2@1238>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DEF0 <AmiBlitz3.ab2@1239>     LoadSource{ab3save_filename}
0001DEF6 <AmiBlitz3.ab2@1240>   Else
0001DF24 <AmiBlitz3.ab2@1241>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001DF42 <AmiBlitz3.ab2@1243>   !asm
0001DF44 <AmiBlitz3.ab2@1244>   RTS
0001DF6E <AmiBlitz3.ab2@1247>   !basic
0001DF74 <AmiBlitz3.ab2@1248>   ClearSource{}
0001DF92 <AmiBlitz3.ab2@1249>   !asm
0001DF94 <AmiBlitz3.ab2@1250>   RTS
0001DFBE <AmiBlitz3.ab2@1253>   !basic
0001DFC4 <AmiBlitz3.ab2@1254>   OpenConsoleFake{}
0001DFE2 <AmiBlitz3.ab2@1255>   !asm
0001DFE4 <AmiBlitz3.ab2@1256>   RTS
0001E00E <AmiBlitz3.ab2@1260>   !basic
0001E014 <AmiBlitz3.ab2@1261>   CloseConsoleFake{}
0001E032 <AmiBlitz3.ab2@1262>   !asm
0001E034 <AmiBlitz3.ab2@1263>   RTS
0001E03A <AmiBlitz3.ab2@1267>   MOVE.w d6,menuitemdebug
0001E064 <AmiBlitz3.ab2@1268>   !basic
0001E076 <AmiBlitz3.ab2@1269>   menuitemx.l = Peek.w(?menuitemdebug)
0001E09C <AmiBlitz3.ab2@1270>   If menuitemx>16 OR  menuitemx<0
0001E104 <AmiBlitz3.ab2@1271>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001E10C <AmiBlitz3.ab2@1272>     menuitemx=0
0001E11C <AmiBlitz3.ab2@1274>   Poke.w ?menuitemdebug,menuitemx
0001E13A <AmiBlitz3.ab2@1275>   !asm
0001E140 <AmiBlitz3.ab2@1276>   MOVE.w menuitemdebug,d6
0001E146 <AmiBlitz3.ab2@1279>   MOVE.l A5,firstitem_
0001E14C <AmiBlitz3.ab2@1280>   MOVE.w D7,numlines_org
0001E152 <AmiBlitz3.ab2@1281>   MOVE.l d7,numlines
0001E154 <AmiBlitz3.ab2@1282>   LSL.w #2,D6
0001E15A <AmiBlitz3.ab2@1283>   LEA menu_items,A0
0001E15E <AmiBlitz3.ab2@1284>   MOVEA.l $0(A0,D6.W),A0
0001E168 <AmiBlitz3.ab2@1285>   MOVE.l #$FFFFffff,linenumat
0001E172 <AmiBlitz3.ab2@1286>   MOVE.l #$FFFFffff,compilelinecounter
0001E174 <AmiBlitz3.ab2@1290>   JSR (A0)
0001E17A <AmiBlitz3.ab2@1291>   MOVE.l compilelinecounter,D0
0001E17C <AmiBlitz3.ab2@1292> RTS
0001E180 <AmiBlitz3.ab2@1294> menuitemdebug: Dc.l 0
0001E184 <AmiBlitz3.ab2@1296> mempool                Dc.l 0
0001E19A <AmiBlitz3.ab2@1297> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001E1A0 <AmiBlitz3.ab2@1298> dloaderr:             JSR handle_compileerror
0001E1BC <AmiBlitz3.ab2@1299>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001E1FA <AmiBlitz3.ab2@1307>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E200 <AmiBlitz3.ab2@1308>   LEA str_loaddebugmessage,A2
0001E206 <AmiBlitz3.ab2@1309>   LEA str_blitz3assign,A0
0001E20C <AmiBlitz3.ab2@1310>   LEA str_temp_debugmodulename,A1
0001E20E <AmiBlitz3.ab2@1313>   JSR (A3)
0001E212 <AmiBlitz3.ab2@1315>   BEQ.w menu_loaddebugmodule_noload
0001E218 <AmiBlitz3.ab2@1316>   MOVE.l D0,ptr_temp_debugmodule
0001E21C <AmiBlitz3.ab2@1317>   BSR.w call_setpointerbusy
0001E222 <AmiBlitz3.ab2@1318>   MOVE.l A7,errstack
0001E22C <AmiBlitz3.ab2@1319>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001E232 <AmiBlitz3.ab2@1320>   MOVE.l ptr_temp_debugmodule,D1
0001E236 <AmiBlitz3.ab2@1322>   MOVEA.l _dosbase(PC),A6
0001E23A <AmiBlitz3.ab2@1323>   JSR _LoadSeg(A6)
0001E23C <AmiBlitz3.ab2@1324>   MOVE.l D0,D7
0001E240 <AmiBlitz3.ab2@1325>   BEQ.w dloaderr
0001E246 <AmiBlitz3.ab2@1326>   MOVE.l ptr_seg_debugger,D1
0001E24A <AmiBlitz3.ab2@1327>   BEQ.b menu_loaddebugmodule_ndseg
0001E24E <AmiBlitz3.ab2@1328>   MOVEA.l _dosbase(PC),A6
0001E252 <AmiBlitz3.ab2@1329>   JSR _UnLoadSeg(A6)
0001E256 <AmiBlitz3.ab2@1330>   BSR.w call_setpointernormal
0001E25C <AmiBlitz3.ab2@1333>   MOVE.l D7,ptr_seg_debugger
0001E25E <AmiBlitz3.ab2@1336> RTS
0001E27C <AmiBlitz3.ab2@1339> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001E33C <AmiBlitz3.ab2@1340> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001E3FC <AmiBlitz3.ab2@1341> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001E400 <AmiBlitz3.ab2@1342> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001E42A <AmiBlitz3.ab2@1346>   !basic
0001E454 <AmiBlitz3.ab2@1347>   exepath.s = Peek.s(?exepath)
0001E47E <AmiBlitz3.ab2@1348>   exefile.s = Peek.s(?exefilename)
0001E4FE <AmiBlitz3.ab2@1349>   exefile.s = dos_AddPart{exepath,exefile}
0001E536 <AmiBlitz3.ab2@1350>   Poke.s ?tempspace,exefile
0001E554 <AmiBlitz3.ab2@1351>   !asm
0001E55A <AmiBlitz3.ab2@1372>   LEA tempspace,a0
0001E55C <AmiBlitz3.ab2@1373>   MOVE.l a0,d0
0001E560 <AmiBlitz3.ab2@1374> BRA newcreate2
0001E58A <AmiBlitz3.ab2@1380>   !basic
0001E5B4 <AmiBlitz3.ab2@1381>   request_exename.s = Peek.s(?str_request_exename )
0001E610 <AmiBlitz3.ab2@1382>   request_exename   = !TRANS{request_exename}
0001E616 <AmiBlitz3.ab2@1383>   GetD0 &request_exename
0001E634 <AmiBlitz3.ab2@1384>   !asm
0001E636 <AmiBlitz3.ab2@1385>   MOVE.l D0,A2
0001E674 <AmiBlitz3.ab2@1388>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E67A <AmiBlitz3.ab2@1390>   LEA exepath,A0
0001E680 <AmiBlitz3.ab2@1391>   LEA exefilename,A1
0001E682 <AmiBlitz3.ab2@1394>   JSR (A3)                                                 ;open ped filerequest
0001E686 <AmiBlitz3.ab2@1395>   BEQ.w cancel_createexe
0001E690 <AmiBlitz3.ab2@1398>   ADD.l #1,number_of_builds
0001E696 <AmiBlitz3.ab2@1401>   MOVE.l D0,ptr_newexefilename
0001E69E <AmiBlitz3.ab2@1402>   MOVE.w #-1,debugversion
0001E6A4 <AmiBlitz3.ab2@1403>   MOVE.w set_make_smallestcode,-(A7)
0001E6AC <AmiBlitz3.ab2@1407>     MOVE.w #1,makeexec
0001E6B2 <AmiBlitz3.ab2@1408>     JSR ab3_OpenDebugFile
0001E6B6 <AmiBlitz3.ab2@1409>     BSR.w startcompile
0001E6BC <AmiBlitz3.ab2@1410>     JSR ab3_CloseDebugFile
0001E6C6 <AmiBlitz3.ab2@1411>     CMP.l #"NORE",reqmode
0001E6CA <AmiBlitz3.ab2@1412>   BEQ 'l1
0001E6D0 <AmiBlitz3.ab2@1414>   TST.w anyerrs
0001E6D4 <AmiBlitz3.ab2@1415>   BNE.b menu_createexecutable__skip
0001E6D8 <AmiBlitz3.ab2@1416>   BSR.w savefile
0001E6DE <AmiBlitz3.ab2@1419>   MOVE.w (A7)+,set_make_smallestcode
0001E6E0 <AmiBlitz3.ab2@1422> RTS
0001E6E8 <AmiBlitz3.ab2@1426>   MOVE.w #-1,flag_noPED
0001E6EA <AmiBlitz3.ab2@1427> RTS
0001E6F2 <AmiBlitz3.ab2@1431>   MOVE.w #-1,flag_noCLI
0001E6F4 <AmiBlitz3.ab2@1432> RTS
0001E71E <AmiBlitz3.ab2@1435>   !basic
0001E746 <AmiBlitz3.ab2@1436>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001E756 <AmiBlitz3.ab2@1437>     Poke.w ?word_WriteDebugFileNow,0
0001E774 <AmiBlitz3.ab2@1438>   !asm
0001E776 <AmiBlitz3.ab2@1439> RTS
0001E7A0 <AmiBlitz3.ab2@1442>   !basic
0001E7B0 <AmiBlitz3.ab2@1443>   Poke.w ?word_WriteDebugFileNow,0
0001E7C2 <AmiBlitz3.ab2@1444>   If dbg_fid>=0
0001E7D8 <AmiBlitz3.ab2@1445>     file_Close{dbg_fid} : dbg_fid = -1
0001E7EA <AmiBlitz3.ab2@1447>   If dbg_fid.l<0
0001E7EC <AmiBlitz3.ab2@1448>     CLR.l d0
0001E82A <AmiBlitz3.ab2@1449>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001E82E <AmiBlitz3.ab2@1450>     dbg_Create.l = PutD0
0001E838 <AmiBlitz3.ab2@1451>     If (dbg_Create) ; only when set!
0001E848 <AmiBlitz3.ab2@1452>       exefileP.l = Peek.l (?ptr_newexefilename)
0001E870 <AmiBlitz3.ab2@1453>       exefile.s = ""
0001E8A2 <AmiBlitz3.ab2@1454>       If exefileP Then exefile.s = Peek.s(exefileP)
0001E8DA <AmiBlitz3.ab2@1455>       If exefile><""
0001E930 <AmiBlitz3.ab2@1456>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001E942 <AmiBlitz3.ab2@1457>         If dbg_fid>=0
0001E954 <AmiBlitz3.ab2@1458>           Poke.w ?word_WriteDebugFileNow,-1
0001E960 <AmiBlitz3.ab2@1461>       oldhunkoffset.l = -1
0001E988 <AmiBlitz3.ab2@1462>       oldfile.s       = ""
0001E9A6 <AmiBlitz3.ab2@1465>   !asm
0001E9A8 <AmiBlitz3.ab2@1466> RTS
0001E9AE <AmiBlitz3.ab2@1469> TST.w word_WriteDebugFileNow
0001E9B2 <AmiBlitz3.ab2@1470> BEQ 'skipdebugfile
0001E9DC <AmiBlitz3.ab2@1471> !basic
0001E9EE <AmiBlitz3.ab2@1472>   If dbg_fid>=0
0001EA00 <AmiBlitz3.ab2@1473>     pass.l          = Peek.w(?pass)
0001EA12 <AmiBlitz3.ab2@1474>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001EA36 <AmiBlitz3.ab2@1475> 
0001EA3C <AmiBlitz3.ab2@1476>       oldhunkoffset.l = hunkoffset.l
0001EA70 <AmiBlitz3.ab2@1477>       oldfile.s       = codefile.s
0001EA8C <AmiBlitz3.ab2@1478>       If Peek.w (?ininclude)>0
0001EA9C <AmiBlitz3.ab2@1479>         codeline.l = Peek.l(?includeline);-1
0001EB0C <AmiBlitz3.ab2@1480>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001EB12 <AmiBlitz3.ab2@1481>       Else
0001EB40 <AmiBlitz3.ab2@1482>         !ComData_LEA{comStr_SourceName,A0}
0001EB42 <AmiBlitz3.ab2@1483>         MOVE.l A0,D0
0001EB46 <AmiBlitz3.ab2@1484>         sourceP.l = PutD0
0001EB6E <AmiBlitz3.ab2@1485>         codefile.s = Peek.s(sourceP)
0001EB7E <AmiBlitz3.ab2@1486>         codeline.l = Peek.l(?linenumat)
0001EBA6 <AmiBlitz3.ab2@1488>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001EBFA <AmiBlitz3.ab2@1489>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001EC0A <AmiBlitz3.ab2@1496>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001EC14 <AmiBlitz3.ab2@1497>         If *sourceLine
0001EC2A <AmiBlitz3.ab2@1498>           MaxLen detokenline.s = 65536
0001EC6C <AmiBlitz3.ab2@1499>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001EC7C <AmiBlitz3.ab2@1500>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001ECA8 <AmiBlitz3.ab2@1501>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001ECD6 <AmiBlitz3.ab2@1502>           If written>0 Then Poke.b &detokenline+written-1,0
0001ED00 <AmiBlitz3.ab2@1503>           sourceLineText.s = Peek.s(&detokenline)
0001ED06 <AmiBlitz3.ab2@1504>         Else
0001ED2E <AmiBlitz3.ab2@1505>           sourceLineText = "NULL"
0001EDF6 <AmiBlitz3.ab2@1508>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001EE14 <AmiBlitz3.ab2@1514> !asm
0001EE16 <AmiBlitz3.ab2@1516> RTS
0001EE18 <AmiBlitz3.ab2@1518> word_WriteDebugFileNow: Dc.w 0
0001EE1A <AmiBlitz3.ab2@1520> flag_noPED:  Ds.w 1                                        ;closeed org source
0001EE1C <AmiBlitz3.ab2@1521> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001EE20 <AmiBlitz3.ab2@1525>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001EE26 <AmiBlitz3.ab2@1526>   MOVEA.l _execbase,A6
0001EE2A <AmiBlitz3.ab2@1527>   JSR _CacheClearU(A6)
0001EE2E <AmiBlitz3.ab2@1528>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001EE30 <AmiBlitz3.ab2@1529> RTS
0001EE34 <AmiBlitz3.ab2@1532>   MOVEM.l A2-A3,-(A7)
0001EE3A <AmiBlitz3.ab2@1533>   CLR.b doublepeek
0001EE40 <AmiBlitz3.ab2@1534>   MOVE.l A5,lastsourcepos
0001EE46 <AmiBlitz3.ab2@1535>    JSR getchar
0001EE4A <AmiBlitz3.ab2@1536>   CMP.w #$2E,D0
0001EE4E <AmiBlitz3.ab2@1537>    BEQ.w JL_0_49B4b
0001EE54 <AmiBlitz3.ab2@1538>   MOVEA.l defaulttype,A2
0001EE58 <AmiBlitz3.ab2@1539>   CMP.w #$24,D0
0001EE5C <AmiBlitz3.ab2@1540>    BNE.w JL_0_49CAb
0001EE5E <AmiBlitz3.ab2@1541>   MOVEQ.l #$07,D1
0001EE62 <AmiBlitz3.ab2@1542> BRA.w JL_0_49DEb
0001EE68 <AmiBlitz3.ab2@1545>   JSR getparameter2
0001EE6C <AmiBlitz3.ab2@1546>   BEQ.w syntaxerrb
0001EE72 <AmiBlitz3.ab2@1547>   LEA newtypebase,A2
0001EE78 <AmiBlitz3.ab2@1548>   JSR findtype
0001EE7C <AmiBlitz3.ab2@1549>   BNE.w notypeerrb
0001EE86 <AmiBlitz3.ab2@1554>   MOVE.w oldqflag,instringon
0001EE8C <AmiBlitz3.ab2@1555>   MOVEA.l lastsourcepos,A5
0001EE92 <AmiBlitz3.ab2@1557>   MOVE.l a2,functionreturntype
0001EE9A <AmiBlitz3.ab2@1558>   CMPI.l #$100,$4(A2)
0001EE9E <AmiBlitz3.ab2@1559>   BLE.w 'isvar
0001EEA0 <AmiBlitz3.ab2@1563>   MOVEQ #3,d1
0001EEA4 <AmiBlitz3.ab2@1564>   BRA JL_0_49DEb
0001EEA8 <AmiBlitz3.ab2@1571>   MOVE.w $6(A2),D1
0001EEAE <AmiBlitz3.ab2@1572>   CMP.w #8,8(a2)
0001EEB2 <AmiBlitz3.ab2@1573>   BNE 'l1
0001EEBA <AmiBlitz3.ab2@1574>   MOVE.b #1,doublepeek
0001EEC0 <AmiBlitz3.ab2@1577>   MOVE.w D1,convsize
0001EEC4 <AmiBlitz3.ab2@1578>   MOVEM.l (A7)+,A2-A3
0001EEC6 <AmiBlitz3.ab2@1579> RTS
0001EECC <AmiBlitz3.ab2@1581> notypeerrb JMP notypeerr
0001EED2 <AmiBlitz3.ab2@1582> illtypeerrb JMP illtypeerr
0001EED8 <AmiBlitz3.ab2@1583> syntaxerrb JMP syntaxerr
0001EEE2 <AmiBlitz3.ab2@1628>   ADD.l #1,number_of_builds
0001EEE8 <AmiBlitz3.ab2@1630>   CLR.w debugversion
0001EEEE <AmiBlitz3.ab2@1631>   CLR.w flag_noPED
0001EEF4 <AmiBlitz3.ab2@1632>   CLR.w flag_noCLI
0001EEFC <AmiBlitz3.ab2@1635>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0001EF00 <AmiBlitz3.ab2@1636>     BSR.w startcompile
0001EF0A <AmiBlitz3.ab2@1637>     CMP.l #"NORE",reqmode
0001EF0E <AmiBlitz3.ab2@1638>   BEQ 'l1
0001EF14 <AmiBlitz3.ab2@1641>   TST.w anyerrs
0001EF18 <AmiBlitz3.ab2@1642>    BNE.w JL_0_3482
0001EF1C <AmiBlitz3.ab2@1644>   MOVE.w flag_noPED(PC),D1
0001EF20 <AmiBlitz3.ab2@1645>    BEQ.w skip_closingGUI
0001EF52 <AmiBlitz3.ab2@1650>   !ComData_JSR{comFunc_CloseGUI}
0001EF56 <AmiBlitz3.ab2@1651> BRA.b runprogram
0001EF5A <AmiBlitz3.ab2@1655>   BSR.w compilerequester
0001EF60 <AmiBlitz3.ab2@1658>   MOVEA.l _dosbase,A6
0001EF66 <AmiBlitz3.ab2@1659>   LEA exepath,a0
0001EF68 <AmiBlitz3.ab2@1660>   MOVE.l a0,d1
0001EF6A <AmiBlitz3.ab2@1661>   MOVEQ #-2,d2
0001EF6E <AmiBlitz3.ab2@1662>   JSR _Lock(a6)                                            ;lock
0001EF74 <AmiBlitz3.ab2@1663>   MOVE.l d0,exelock
0001EF7A <AmiBlitz3.ab2@1664>   MOVE.l #0,d1
0001EF7E <AmiBlitz3.ab2@1665>   JSR _CurrentDir(A6)
0001EF84 <AmiBlitz3.ab2@1666>   MOVE.l D0,lock_currentdir
0001EF86 <AmiBlitz3.ab2@1667>   MOVE.l D0,D1
0001EF8A <AmiBlitz3.ab2@1668>   JSR _CurrentDir(A6)
0001EF90 <AmiBlitz3.ab2@1669>   CLR.l ptr_exetask
0001EF96 <AmiBlitz3.ab2@1678>   MOVE.l #str_process_name,D1
0001EF98 <AmiBlitz3.ab2@1679>   MOVEQ.l #$00,D2
0001EF9E <AmiBlitz3.ab2@1680>   MOVE.l #proc_seglist,D3
0001EFA0 <AmiBlitz3.ab2@1681>   LSR.l #2,D3
0001EFA6 <AmiBlitz3.ab2@1682>   MOVE.l stacksize,D4
0001EFAC <AmiBlitz3.ab2@1683>   MOVEA.l _dosbase,A6
0001EFB0 <AmiBlitz3.ab2@1684>   JSR _CreateProc(A6)                                      ;runtask
0001EFB2 <AmiBlitz3.ab2@1685>   TST.l D0
0001EFB6 <AmiBlitz3.ab2@1686>    BEQ ErrorRunningProg
0001EFEC <AmiBlitz3.ab2@1688>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0001EFF2 <AmiBlitz3.ab2@1690>   TST.w flag_noPED
0001EFF6 <AmiBlitz3.ab2@1691>    BNE.b JL_0_344E
0001EFFA <AmiBlitz3.ab2@1692>   BSR.w close_compilewin
0001F000 <AmiBlitz3.ab2@1695>   CLR.l firstlocal
0001F006 <AmiBlitz3.ab2@1696>   CLR.l firstglob
0001F00A <AmiBlitz3.ab2@1697>   MOVE.w flag_noPED(PC),D1
0001F00E <AmiBlitz3.ab2@1698>   BEQ.w skip_openGUI
0001F040 <AmiBlitz3.ab2@1702>   !ComData_JSR{comFunc_CreateGUI}
0001F042 <AmiBlitz3.ab2@1711> RTS
0001F04C <AmiBlitz3.ab2@1714> MOVE.l #1,_runerror
0001F050 <AmiBlitz3.ab2@1715> BRA JL_0_344E
0001F054 <AmiBlitz3.ab2@1717> _runerror: Dc.l 0
0001F058 <AmiBlitz3.ab2@1718> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0001F05C <AmiBlitz3.ab2@1719> ptr_exetask:        Ds.l 1                                          ;panictask org source
0001F060 <AmiBlitz3.ab2@1720> signalNum:          Ds.l 1                                          ;panicbit org source
0001F064 <AmiBlitz3.ab2@1721> signals:            Ds.l 1                                          ;panicmask org source
0001F07A <AmiBlitz3.ab2@1723> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0001F07F <AmiBlitz3.ab2@1724>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0001F080 <AmiBlitz3.ab2@1725> Even4
0001F084 <AmiBlitz3.ab2@1727> ptr_ThisTask:       Ds.l 1                                          ;length
0001F088 <AmiBlitz3.ab2@1728> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0001F08E <AmiBlitz3.ab2@1732>   MOVEA.l $4,A0
0001F096 <AmiBlitz3.ab2@1733>   MOVE.l  $114(A0),ptr_exetask
0001F09C <AmiBlitz3.ab2@1735>   MOVEA.l _dosbase,A6
0001F0A2 <AmiBlitz3.ab2@1736>   MOVE.l exelock,D1
0001F0A6 <AmiBlitz3.ab2@1737>   JSR _CurrentDir(A6)
0001F0DC <AmiBlitz3.ab2@1742>   !ComData_SetB{comByte_RunningFlag,#1}
0001F0E0 <AmiBlitz3.ab2@1748>   MOVE.w flag_noCLI(PC),D1
0001F0E4 <AmiBlitz3.ab2@1749>    BNE.b skip_openconsole
0001F116 <AmiBlitz3.ab2@1753>   !ComData_JSR{comFunc_OpenConsole}
0001F11A <AmiBlitz3.ab2@1756>   BSR.w calcvbr
0001F120 <AmiBlitz3.ab2@1757>   MOVEA.l vbr,A0
0001F126 <AmiBlitz3.ab2@1762>   CLR.w dirmode
0001F12C <AmiBlitz3.ab2@1763>   CLR.l firstglob
0001F132 <AmiBlitz3.ab2@1764>   CLR.l firstlocal
0001F138 <AmiBlitz3.ab2@1766>   MOVE.l stacksize,D2
0001F13E <AmiBlitz3.ab2@1767>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0001F144 <AmiBlitz3.ab2@1768>   LEA str_cliarguments,A0                                   ;cli arguement
0001F14A <AmiBlitz3.ab2@1769>   MOVEA.l destbufferstart,A1
0001F14E <AmiBlitz3.ab2@1770>   BSR.w Aclearcache
0001F150 <AmiBlitz3.ab2@1773>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0001F156 <AmiBlitz3.ab2@1775>   MOVEA.l vbr,A0
0001F15C <AmiBlitz3.ab2@1777>   CLR.l firstglob
0001F162 <AmiBlitz3.ab2@1778>   CLR.l firstlocal
0001F168 <AmiBlitz3.ab2@1779>   MOVEA.l _dosbase,A6
0001F16E <AmiBlitz3.ab2@1780>   MOVE.l exelock,d1
0001F172 <AmiBlitz3.ab2@1781>   BEQ 'nolock
0001F176 <AmiBlitz3.ab2@1782>   JSR _UnLock(a6)
0001F1AC <AmiBlitz3.ab2@1787>   !ComData_SetB{comByte_RunningFlag,#0}
0001F1B0 <AmiBlitz3.ab2@1790>   MOVE.w flag_noCLI(PC),D1
0001F1B4 <AmiBlitz3.ab2@1791>    BNE.b skip_closeconsole
0001F1E6 <AmiBlitz3.ab2@1795>   !ComData_JSR{comFunc_CloseConsole}
0001F1EE <AmiBlitz3.ab2@1798>   MOVE.w #$0001,stopit
0001F1F2 <AmiBlitz3.ab2@1799>   MOVE.l signals(PC),D0
0001F1F8 <AmiBlitz3.ab2@1800>   MOVEA.l ptr_ThisTask,A1
0001F1FE <AmiBlitz3.ab2@1801>   MOVEA.l _execbase,A6
0001F202 <AmiBlitz3.ab2@1802>   JSR _Signal(A6)
0001F204 <AmiBlitz3.ab2@1803> RTS
0001F20A <AmiBlitz3.ab2@1807>   MOVEA.l _execbase,A6
0001F20E <AmiBlitz3.ab2@1808>   MOVE.w $128(A6),D0
0001F210 <AmiBlitz3.ab2@1809>   MOVEQ.l #$00,D1
0001F214 <AmiBlitz3.ab2@1810>   ANDI.w #$F,D0
0001F218 <AmiBlitz3.ab2@1813>     BEQ.b calcvbr__skip
0001F21A <AmiBlitz3.ab2@1814>     ADDQ.w #1,D1
0001F21C <AmiBlitz3.ab2@1815>     LSR.w #1,D0
0001F220 <AmiBlitz3.ab2@1816> BRA.b calcvbr_loop
0001F222 <AmiBlitz3.ab2@1819>   MOVEQ.l #$00,D2
0001F226 <AmiBlitz3.ab2@1820>   CMP.w #$2,D1
0001F22A <AmiBlitz3.ab2@1821>    BCS.b calcvbr__skip2
0001F230 <AmiBlitz3.ab2@1822>   MOVEA.l _execbase,A6
0001F234 <AmiBlitz3.ab2@1823>   JSR _SuperState(A6)
0001F238 <AmiBlitz3.ab2@1824>   Dc.l $4E7A2801                                           ;movec vbr,D2
0001F23C <AmiBlitz3.ab2@1825>   JSR _UserState(A6)
0001F242 <AmiBlitz3.ab2@1828>   MOVE.l D2,vbr
0001F244 <AmiBlitz3.ab2@1829> RTS
0001F24A <AmiBlitz3.ab2@1833>   LEA instrtab,a0
0001F250 <AmiBlitz3.ab2@1834>   MOVE.l #labelhash-instrtab,d0
0001F252 <AmiBlitz3.ab2@1835>   ASR.l #2,d0
0001F254 <AmiBlitz3.ab2@1836>   SUBQ.l #1,d0
0001F256 <AmiBlitz3.ab2@1839>   CLR.l (a0)+
0001F258 <AmiBlitz3.ab2@1840>   SUBQ.l #1,d0
0001F25C <AmiBlitz3.ab2@1841>   BNE 'l10
0001F260 <AmiBlitz3.ab2@1842>   BSR.w call_setpointerbusy
0001F264 <AmiBlitz3.ab2@1843>   BSR.w free_userlibs
0001F268 <AmiBlitz3.ab2@1844>   BSR.w scan_for_userlibs
0001F26C <AmiBlitz3.ab2@1845>   BSR.w JL_0_7082
0001F270 <AmiBlitz3.ab2@1846> BRA.w call_setpointernormal
0001F29A <AmiBlitz3.ab2@1852>   !basic
0001F2D4 <AmiBlitz3.ab2@1853>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
0001F2E4 <AmiBlitz3.ab2@1855>   deflibNameP.l = Peek.l(?deflib)
0001F2EE <AmiBlitz3.ab2@1856>   If deflibNameP
0001F320 <AmiBlitz3.ab2@1857>     If Peek.s(deflibNameP)<>""
0001F36A <AmiBlitz3.ab2@1858>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
0001F370 <AmiBlitz3.ab2@1859>     Else
0001F3AA <AmiBlitz3.ab2@1860>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001F3B0 <AmiBlitz3.ab2@1862>   Else
0001F3EA <AmiBlitz3.ab2@1863>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001F418 <AmiBlitz3.ab2@1864>     error{"INTERNAL: Invalid deflib name pointer!"}
0001F436 <AmiBlitz3.ab2@1866>   !asm
0001F43C <AmiBlitz3.ab2@1871>   MOVE.l #str_path_userlibs,D1
0001F43E <AmiBlitz3.ab2@1872>   MOVEQ.l #-$02,D2
0001F444 <AmiBlitz3.ab2@1873>   MOVEA.l _dosbase,A6
0001F448 <AmiBlitz3.ab2@1874>   JSR _Lock(A6)
0001F44A <AmiBlitz3.ab2@1875>   MOVE.l D0,D7
0001F44E <AmiBlitz3.ab2@1876>    BEQ.w exit_get_libraries
0001F450 <AmiBlitz3.ab2@1877>   MOVE.l D7,D1
0001F456 <AmiBlitz3.ab2@1878>   MOVE.l #ptr_parameterstore,D2
0001F45A <AmiBlitz3.ab2@1879>   JSR _Examine(A6)
0001F45C <AmiBlitz3.ab2@1880>   TST.l D0
0001F460 <AmiBlitz3.ab2@1881>   BEQ.w unlock_and_exit_get_libraries
0001F466 <AmiBlitz3.ab2@1882>   MOVE.l fib_DirEntryType,D0
0001F46A <AmiBlitz3.ab2@1883>   BMI.w unlock_and_exit_get_libraries
0001F46C <AmiBlitz3.ab2@1888>     MOVE.l D7,D1
0001F472 <AmiBlitz3.ab2@1889>     MOVE.l #ptr_parameterstore,D2
0001F478 <AmiBlitz3.ab2@1890>     MOVEA.l _dosbase,A6
0001F47C <AmiBlitz3.ab2@1891>     JSR _ExNext(A6)
0001F47E <AmiBlitz3.ab2@1892>     TST.l D0
0001F482 <AmiBlitz3.ab2@1893>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
0001F488 <AmiBlitz3.ab2@1895>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
0001F48C <AmiBlitz3.ab2@1896>     BPL.w scan_libsdrawer                                  ; skip directories
0001F492 <AmiBlitz3.ab2@1898>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0001F496 <AmiBlitz3.ab2@1899>     BSR.w check_for_infoextention
0001F49A <AmiBlitz3.ab2@1900>     BEQ.w scan_libsdrawer
0001F4A0 <AmiBlitz3.ab2@1902>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0001F4A2 <AmiBlitz3.ab2@1903>     MOVEQ.l #$26,D0
0001F4A4 <AmiBlitz3.ab2@1904>     MOVEQ.l #$01,D1
0001F4AA <AmiBlitz3.ab2@1905>     MOVE.l mempool,a0
0001F4AE <AmiBlitz3.ab2@1906>     JSR _AllocPooled(a6)
0001F4B4 <AmiBlitz3.ab2@1908>     MOVEA.l _dosbase,A6
0001F4B6 <AmiBlitz3.ab2@1909>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0001F4BC <AmiBlitz3.ab2@1912>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0001F4BE <AmiBlitz3.ab2@1915>     MOVE.l (A0),D5
0001F4C2 <AmiBlitz3.ab2@1916>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0001F4C4 <AmiBlitz3.ab2@1917>     MOVEA.l D5,A2
0001F4C6 <AmiBlitz3.ab2@1918>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0001F4CC <AmiBlitz3.ab2@1921>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0001F4CE <AmiBlitz3.ab2@1924>       MOVEQ.l #$00,D0
0001F4D0 <AmiBlitz3.ab2@1925>       MOVE.b (A1)+,D0
0001F4D4 <AmiBlitz3.ab2@1926>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0001F4D6 <AmiBlitz3.ab2@1927>       MOVEQ.l #$00,D1
0001F4D8 <AmiBlitz3.ab2@1928>       MOVE.b (A2)+,D1
0001F4DC <AmiBlitz3.ab2@1929>        BEQ.w JL_0_371C
0001F4FE <AmiBlitz3.ab2@1930>       !compare1                                            ;bsr.w tstalpha
0001F502 <AmiBlitz3.ab2@1931>       BNE.w JL_0_3702
0001F506 <AmiBlitz3.ab2@1932>       ANDI.w #$DF,D0
0001F508 <AmiBlitz3.ab2@1935>       EXG.l D0,D1
0001F52A <AmiBlitz3.ab2@1936>       !compare1                                            ;bsr.w tstalpha
0001F52E <AmiBlitz3.ab2@1937>       BNE.w JL_0_3710
0001F532 <AmiBlitz3.ab2@1938>       ANDI.w #$DF,D0
0001F534 <AmiBlitz3.ab2@1941>       EXG.l D0,D1
0001F536 <AmiBlitz3.ab2@1942>       CMP.b D1,D0
0001F53A <AmiBlitz3.ab2@1943>     BEQ.w JL_0_36E6
0001F53E <AmiBlitz3.ab2@1944>     BCS.w JL_0_3722
0001F540 <AmiBlitz3.ab2@1947>     MOVEA.l D5,A0
0001F544 <AmiBlitz3.ab2@1948> BRA.w JL_0_36D6
0001F546 <AmiBlitz3.ab2@1951>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
0001F548 <AmiBlitz3.ab2@1952>     MOVE.l (A0),(A1)
0001F54A <AmiBlitz3.ab2@1953>     MOVE.l A1,(A0)
0001F54C <AmiBlitz3.ab2@1954>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
0001F550 <AmiBlitz3.ab2@1955>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0001F556 <AmiBlitz3.ab2@1956>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
0001F558 <AmiBlitz3.ab2@1959>       MOVE.b (A0)+,(A1)+
0001F55C <AmiBlitz3.ab2@1960>     BNE.w JL_0_3734
0001F560 <AmiBlitz3.ab2@1961> BRA.w scan_libsdrawer
0001F562 <AmiBlitz3.ab2@1964>   MOVE.l D7,D1
0001F568 <AmiBlitz3.ab2@1965>   MOVEA.l _dosbase,A6
0001F56C <AmiBlitz3.ab2@1966>   JSR _UnLock(A6)
0001F56E <AmiBlitz3.ab2@1967>   MOVEQ.l #-$01,D0
0001F570 <AmiBlitz3.ab2@1970> RTS
0001F572 <AmiBlitz3.ab2@1973>   MOVE.l D7,D1
0001F578 <AmiBlitz3.ab2@1974>   MOVEA.l _dosbase,A6
0001F57C <AmiBlitz3.ab2@1975>   JSR _UnLock(A6)
0001F57E <AmiBlitz3.ab2@1976>   MOVEQ.l #$00,D0
0001F580 <AmiBlitz3.ab2@1977> RTS
0001F586 <AmiBlitz3.ab2@1981>   MOVEA.l _execbase,A6
0001F58C <AmiBlitz3.ab2@1982>   MOVEA.l ptr_userlibs_list,A2
0001F592 <AmiBlitz3.ab2@1983>   CLR.l ptr_userlibs_list
0001F596 <AmiBlitz3.ab2@1986>     CMPA.w #$0,A2
0001F59A <AmiBlitz3.ab2@1987>     BEQ.w exit_free_userlib
0001F59C <AmiBlitz3.ab2@1988>       MOVEA.l A2,A1
0001F59E <AmiBlitz3.ab2@1989>       MOVEQ.l #$26,D0
0001F5A0 <AmiBlitz3.ab2@1990>       MOVEA.l (A2),A2
0001F5A6 <AmiBlitz3.ab2@1991>       MOVE.l mempool,a0
0001F5AC <AmiBlitz3.ab2@1992>       MOVEA.l _execbase,A6
0001F5B0 <AmiBlitz3.ab2@1993>       JSR _FreePooled(A6)
0001F5B4 <AmiBlitz3.ab2@1994> BRA.w loop_free_userlib
0001F5B6 <AmiBlitz3.ab2@1997> RTS
0001F5B8 <AmiBlitz3.ab2@2000> pass:  Dc.w 0                                             ; smallpass org source
0001F5BA <AmiBlitz3.ab2@2001> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
0001F5C0 <AmiBlitz3.ab2@2005>   MOVE.l A7,errstack                                      ;startcompile
0001F5C6 <AmiBlitz3.ab2@2014>   CLR.l reqmode
0001F5D0 <AmiBlitz3.ab2@2016>   MOVE.l #Aclearallvars,errcont
0001F5DA <AmiBlitz3.ab2@2017>   MOVE.l #concomstack,concomsp
0001F5DE <AmiBlitz3.ab2@2024>   MOVE.w #1450,D0
0001F5E0 <AmiBlitz3.ab2@2025>   LSR.w #3,D0
0001F5E2 <AmiBlitz3.ab2@2026>   SUBQ.w #7,D0                                             ; 173
0001F5E8 <AmiBlitz3.ab2@2027>   MOVE.w D0,progressbar_width
0001F5EA <AmiBlitz3.ab2@2028>   SWAP D0
0001F5EC <AmiBlitz3.ab2@2029>   CLR.w D0
0001F5F2 <AmiBlitz3.ab2@2030>   MOVE.l numlines,d1
0001F5F6 <AmiBlitz3.ab2@2031>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0001F5F8 <AmiBlitz3.ab2@2033>   TST.w D0
0001F5FC <AmiBlitz3.ab2@2034>   BNE.w JL_0_37C0
0001F5FE <AmiBlitz3.ab2@2035>   MOVEQ.l #-$01,D0
0001F604 <AmiBlitz3.ab2@2038>   MOVE.w D0,progress_per_line
0001F60C <AmiBlitz3.ab2@2046>   BTST #$7,use_debugger
0001F610 <AmiBlitz3.ab2@2048>   BNE 'debugon
0001F616 <AmiBlitz3.ab2@2049>   CLR.w debugmode
0001F61A <AmiBlitz3.ab2@2050> BRA.b 'debugoff
0001F620 <AmiBlitz3.ab2@2053>   SNE debugmode
0001F658 <AmiBlitz3.ab2@2061>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F65E <AmiBlitz3.ab2@2064>   CLR.w dirmode                                            ;direct mode flag
0001F664 <AmiBlitz3.ab2@2065>   CLR.w ezerr                                              ;quiet error
0001F66A <AmiBlitz3.ab2@2066>   CLR.l currentfunction
0001F670 <AmiBlitz3.ab2@2067>   CLR.w connest
0001F676 <AmiBlitz3.ab2@2068>   CLR.w varmode
0001F67C <AmiBlitz3.ab2@2069>   CLR.w proceduremode
0001F682 <AmiBlitz3.ab2@2070>   CLR.w ininclude
0001F688 <AmiBlitz3.ab2@2071>   CLR.w intstring
0001F68E <AmiBlitz3.ab2@2072>   CLR.w pass
0001F696 <AmiBlitz3.ab2@2073>   MOVE.w #0,compiler_job
0001F69C <AmiBlitz3.ab2@2074>   CLR.l funcscanon
0001F6A2 <AmiBlitz3.ab2@2082>   CLR.l funcscanon
0001F6A6 <AmiBlitz3.ab2@2083>   BSR.w compileall
0001F6AC <AmiBlitz3.ab2@2085>   MOVE.w dontwrite,d0
0001F6B0 <AmiBlitz3.ab2@2086>   CMP.w #1,d0
0001F6B4 <AmiBlitz3.ab2@2087>   BNE 'l3
0001F6BA <AmiBlitz3.ab2@2088>   CLR.w dontwrite
0001F6BE <AmiBlitz3.ab2@2089>   BSR compileall                                           ;if a function is not found
0001F6C4 <AmiBlitz3.ab2@2093>   TST.b funcoptimize
0001F6CA <AmiBlitz3.ab2@2095>   LEA firstproc,a0
0001F6D0 <AmiBlitz3.ab2@2096>   CLR.l savefuncspace
0001F6D2 <AmiBlitz3.ab2@2097>   MOVE.l (a0),d0
0001F6D4 <AmiBlitz3.ab2@2101>     MOVE.l d0,a0
0001F6D8 <AmiBlitz3.ab2@2102>     BEQ 'out
0001F6DC <AmiBlitz3.ab2@2103>     TST.b isfunc(a0)
0001F6E0 <AmiBlitz3.ab2@2104>     BNE 'nex
0001F6E4 <AmiBlitz3.ab2@2105>     MOVEM.l d2/a6/a0,-(a7)
0001F6E6 <AmiBlitz3.ab2@2107>     MOVEQ #0,d0
0001F6EA <AmiBlitz3.ab2@2108>     MOVE.b $21+#funcentry_extend-1(a0),d0
0001F6EE <AmiBlitz3.ab2@2109>     SUB.w #$21+#funcentry_extend,d0
0001F6F2 <AmiBlitz3.ab2@2110>     ADD.w #16,d0
0001F6F8 <AmiBlitz3.ab2@2111>     MOVE.l #$10000,d1
0001F6FA <AmiBlitz3.ab2@2112>     MOVE.l d0,d2
0001F700 <AmiBlitz3.ab2@2113>     MOVEA.l _execbase,A6
0001F704 <AmiBlitz3.ab2@2114>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0001F706 <AmiBlitz3.ab2@2115>     MOVE.l d0,a1
0001F70A <AmiBlitz3.ab2@2116>     MOVE.l d2,4(a1)
0001F710 <AmiBlitz3.ab2@2117>     MOVE.l unusedfunc,(a1)
0001F716 <AmiBlitz3.ab2@2118>     MOVE.l d0,unusedfunc
0001F71A <AmiBlitz3.ab2@2119>     MOVEM.l (a7)+,a6/a0/d2
0001F71E <AmiBlitz3.ab2@2120>     MOVE.l isfunc+1(a0),d0
0001F720 <AmiBlitz3.ab2@2121>     ADDQ.l #6,d0
0001F726 <AmiBlitz3.ab2@2122>     ADD.l d0,savefuncspace
0001F72A <AmiBlitz3.ab2@2125>     MOVE.l d0,8(a1)
0001F72E <AmiBlitz3.ab2@2126>     LEA 12(a1),a1
0001F730 <AmiBlitz3.ab2@2127>     MOVE.l a0,-(a7)
0001F734 <AmiBlitz3.ab2@2128>     LEA $21+#funcentry_extend(a0),a0
0001F736 <AmiBlitz3.ab2@2131>       MOVE.b (a0)+,(a1)+
0001F73A <AmiBlitz3.ab2@2132>     BNE 'l1
0001F73C <AmiBlitz3.ab2@2133>     MOVE.l (a7)+,a0
0001F73E <AmiBlitz3.ab2@2136>     MOVE.l (a0),d0
0001F742 <AmiBlitz3.ab2@2137> BRA 'lr1
0001F74A <AmiBlitz3.ab2@2140>   BTST #$7,make_smallestcode
0001F74E <AmiBlitz3.ab2@2141>   BEQ.b JL_0_3844                                           ;optimize for executable
0001F754 <AmiBlitz3.ab2@2142>   CLR.l morememadd
0001F758 <AmiBlitz3.ab2@2144>   BSR.w alloxadj
0001F75C <AmiBlitz3.ab2@2145>   BEQ.w JL_0_388A
0001F762 <AmiBlitz3.ab2@2146>   ADDQ.w #1,pass
0001F766 <AmiBlitz3.ab2@2147>   BSR.w compileall
0001F76C <AmiBlitz3.ab2@2150>   MOVE.w dontwrite,D1
0001F770 <AmiBlitz3.ab2@2151>   BEQ.w JL_0_38A2
0001F774 <AmiBlitz3.ab2@2170> BRA.w JL_0_3896
0001F77C <AmiBlitz3.ab2@2181>   MOVE.w #$FFFF,anyerrs
0001F780 <AmiBlitz3.ab2@2182> BRA.w JL_0_38A2
0001F784 <AmiBlitz3.ab2@2185>   BSR.w alloxinc                                          ;increase all by 50%
0001F788 <AmiBlitz3.ab2@2186>   BEQ.w Aclearallvars
0001F78C <AmiBlitz3.ab2@2187> BRA.w JL_0_3824
0001F790 <AmiBlitz3.ab2@2199> BRA.w JL_0_38A6                                            ;???????
0001F796 <AmiBlitz3.ab2@2203>   JSR freereps
0001F79C <AmiBlitz3.ab2@2204>   JSR freesels
0001F7A2 <AmiBlitz3.ab2@2205>   JSR AJL_0_6DF2
0001F7A8 <AmiBlitz3.ab2@2206>   JSR freepends
0001F7AE <AmiBlitz3.ab2@2207>   JSR freeifs
0001F7B4 <AmiBlitz3.ab2@2208>   JSR AJL_0_C188
0001F7BA <AmiBlitz3.ab2@2209>   JSR AJL_0_C15C
0001F7C0 <AmiBlitz3.ab2@2210>   JSR AJL_0_D9BC
0001F7C6 <AmiBlitz3.ab2@2213> JMP cleartemplabel
0001F7CA <AmiBlitz3.ab2@2216> mempool2:  Dc.l 0
0001F7D0 <AmiBlitz3.ab2@2220>   JSR Aclearcache
0001F7D8 <AmiBlitz3.ab2@2222>   BTST #$7,use_debugger
0001F7DC <AmiBlitz3.ab2@2224>   BNE 'debugon
0001F7E2 <AmiBlitz3.ab2@2225>   CLR.w debugmode
0001F7E6 <AmiBlitz3.ab2@2226> BRA.b 'debugoff
0001F7EC <AmiBlitz3.ab2@2229>   SNE debugmode
0001F824 <AmiBlitz3.ab2@2234>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F82A <AmiBlitz3.ab2@2236>   LEA regtable,a0
0001F82C <AmiBlitz3.ab2@2237>   MOVEQ #10,d0
0001F82E <AmiBlitz3.ab2@2240>     CLR.l (a0)+
0001F832 <AmiBlitz3.ab2@2241>   DBF d0,'l1
0001F838 <AmiBlitz3.ab2@2243>   LEA includetemp2,a0
0001F83A <AmiBlitz3.ab2@2244>   CLR.b (a0)
0001F844 <AmiBlitz3.ab2@2245>   MOVE.l #7,maxregs
0001F84A <AmiBlitz3.ab2@2246>   CLR.w debugnest
0001F850 <AmiBlitz3.ab2@2247>   CLR.b funcparloop
0001F856 <AmiBlitz3.ab2@2248>   CLR.b nostringopt
0001F85C <AmiBlitz3.ab2@2249>   CLR.b firsttime
0001F862 <AmiBlitz3.ab2@2250>   CLR.l lastdestpointer
0001F868 <AmiBlitz3.ab2@2251>   CLR.l lastwritedat
0001F86E <AmiBlitz3.ab2@2252>   CLR.l prevwritedat
0001F874 <AmiBlitz3.ab2@2253>   CLR.l includeline
0001F87A <AmiBlitz3.ab2@2254>   CLR.b incnif
0001F880 <AmiBlitz3.ab2@2255>   CLR.b formode
0001F886 <AmiBlitz3.ab2@2256>   CLR.b funccall
0001F88C <AmiBlitz3.ab2@2257>   CLR.w objectcount
0001F892 <AmiBlitz3.ab2@2258>   CLR.b resdisable
0001F898 <AmiBlitz3.ab2@2259>   CLR.b developobject
0001F89E <AmiBlitz3.ab2@2260>   CLR.b optistring
0001F8A4 <AmiBlitz3.ab2@2261>   CLR.b optistring2
0001F8AA <AmiBlitz3.ab2@2262>   CLR.b optiarray
0001F8B0 <AmiBlitz3.ab2@2263>   CLR.b quickadd
0001F8B6 <AmiBlitz3.ab2@2264>   CLR.w newmode
0001F8BC <AmiBlitz3.ab2@2265>   CLR.w mode
0001F8C2 <AmiBlitz3.ab2@2266>   CLR.w string1
0001F8C8 <AmiBlitz3.ab2@2267>   CLR.b fastfunc
0001F8CE <AmiBlitz3.ab2@2268>   CLR.w load_var_size
0001F8D4 <AmiBlitz3.ab2@2269>   CLR.w load_var_reg
0001F8DA <AmiBlitz3.ab2@2270>   CLR.l load_var_addr
0001F8E0 <AmiBlitz3.ab2@2271>   CLR.w imm_size
0001F8E6 <AmiBlitz3.ab2@2272>   CLR.w imm_reg
0001F8EC <AmiBlitz3.ab2@2273>   CLR.l imm_addr
0001F8F2 <AmiBlitz3.ab2@2274>   CLR.b _dcb
0001F8F8 <AmiBlitz3.ab2@2275>   CLR.l nohunkoffset
0001F8FE <AmiBlitz3.ab2@2276>   CLR.b peekaddrsize
0001F904 <AmiBlitz3.ab2@2277>   CLR.b typecheck
0001F90A <AmiBlitz3.ab2@2278>   CLR.b declare2
0001F910 <AmiBlitz3.ab2@2279>   CLR.b declare
0001F916 <AmiBlitz3.ab2@2280>   CLR.l myoline                                          ;check
0001F91C <AmiBlitz3.ab2@2281>   CLR.l myline                                          ;check
0001F922 <AmiBlitz3.ab2@2282>   CLR.b newvariable
0001F928 <AmiBlitz3.ab2@2283>   CLR.b saved0
0001F92E <AmiBlitz3.ab2@2284>   CLR.l bsssize
0001F934 <AmiBlitz3.ab2@2285>   CLR.l chipsize
0001F93A <AmiBlitz3.ab2@2286>   CLR.b infunctioncode
0001F944 <AmiBlitz3.ab2@2287>   MOVE.l #-1,bssstart
0001F94E <AmiBlitz3.ab2@2288>   MOVE.l #-1,bssend
0001F958 <AmiBlitz3.ab2@2289>   MOVE.l #-1,chipstart
0001F962 <AmiBlitz3.ab2@2290>   MOVE.l #-1,chipend
0001F96A <AmiBlitz3.ab2@2291>   MOVE.w #0,bssmode
0001F970 <AmiBlitz3.ab2@2292>   CLR.w a2offset
0001F976 <AmiBlitz3.ab2@2293>   CLR.w fast
0001F97C <AmiBlitz3.ab2@2294>   CLR.w fpu
0001F982 <AmiBlitz3.ab2@2295>   CLR.b iee
0001F988 <AmiBlitz3.ab2@2296>   CLR.w newsyntax
0001F98C <AmiBlitz3.ab2@2297>   BSR.w JL_0_38A6
0001F992 <AmiBlitz3.ab2@2298>   JSR AJL_0_7962
0001F998 <AmiBlitz3.ab2@2299>   JSR frallvars
0001F99E <AmiBlitz3.ab2@2300>   JSR fralltypes
0001F9A4 <AmiBlitz3.ab2@2301>   JSR freemacs
0001F9AA <AmiBlitz3.ab2@2302>   JSR clearfunctionlist
0001F9B0 <AmiBlitz3.ab2@2303>   TST.w pass
0001F9B6 <AmiBlitz3.ab2@2305>   JSR clearlabels
0001F9BC <AmiBlitz3.ab2@2306>   JSR clearhash
0001F9C2 <AmiBlitz3.ab2@2309>   LEA devo,a0
0001F9C6 <AmiBlitz3.ab2@2310>   MOVEM.l a0-a6/d0-d7,-(a7)
0001F9CC <AmiBlitz3.ab2@2311>   LEA ptr_parameterstore,a1
0001F9CE <AmiBlitz3.ab2@2314>     MOVE.b (a0)+,(a1)+
0001F9D2 <AmiBlitz3.ab2@2315>   BNE 'l1b
0001F9D4 <AmiBlitz3.ab2@2316>   MOVEQ #13,d2
0001F9DA <AmiBlitz3.ab2@2317>   JSR findlabel2
0001F9DE <AmiBlitz3.ab2@2318>   BNE 'd
0001F9E2 <AmiBlitz3.ab2@2319>   CLR.l 8(a2)
0001F9E6 <AmiBlitz3.ab2@2322>   MOVEM.l (a7)+,a0-a6/d0-d7
0001FA10 <AmiBlitz3.ab2@2323>   !basic
0001FA84 <AmiBlitz3.ab2@2324>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0001FAA2 <AmiBlitz3.ab2@2325>   !asm
0001FAA8 <AmiBlitz3.ab2@2326>   CLR.b returncode
0001FAAE <AmiBlitz3.ab2@2327> JMP freeprocvs
0001FAB4 <AmiBlitz3.ab2@2331>   MOVE.l #bssstore-labelhash,d0
0001FAB6 <AmiBlitz3.ab2@2332>   ASR.l #2,d0
0001FABC <AmiBlitz3.ab2@2333>   LEA labelhash,a0
0001FABE <AmiBlitz3.ab2@2336>     CLR.l (a0)+
0001FAC0 <AmiBlitz3.ab2@2337>     SUBQ.l #1,d0
0001FAC4 <AmiBlitz3.ab2@2338>   BNE.s 'l10
0001FACA <AmiBlitz3.ab2@2340>   LEA labelbase,a1
0001FACC <AmiBlitz3.ab2@2341>   MOVE.l (a1),d0
0001FAD0 <AmiBlitz3.ab2@2342>   BEQ 'l11
0001FAD2 <AmiBlitz3.ab2@2345>     MOVE.l d0,a1
0001FAD6 <AmiBlitz3.ab2@2346>     TST.l 4(a1)
0001FADA <AmiBlitz3.ab2@2347>     BEQ 'l29
0001FADE <AmiBlitz3.ab2@2348>     LEA $13(a1),a0
0001FAE0 <AmiBlitz3.ab2@2349>     MOVEQ #0,d0
0001FAE2 <AmiBlitz3.ab2@2350>     MOVEQ #0,d1
0001FAE4 <AmiBlitz3.ab2@2353>       MOVE.b (a0)+,d1
0001FAE8 <AmiBlitz3.ab2@2354>       BEQ 'l12
0001FAEE <AmiBlitz3.ab2@2355>       !hashalgo
0001FAF2 <AmiBlitz3.ab2@2356> BRA 'l13
0001FAF8 <AmiBlitz3.ab2@2359>     LEA labelhash,a0
0001FAFE <AmiBlitz3.ab2@2360>     AND.l #hashsize,d0
0001FB00 <AmiBlitz3.ab2@2361>      ASL.l #2,d0
0001FB04 <AmiBlitz3.ab2@2362>     MOVE.l 0(a0,d0),d1                                     ;*4
0001FB08 <AmiBlitz3.ab2@2363>     MOVE.l d1,$c(a1)
0001FB0C <AmiBlitz3.ab2@2364>     MOVE.l a1,0(a0,d0)
0001FB0E <AmiBlitz3.ab2@2367>     MOVE.l (a1),d0
0001FB12 <AmiBlitz3.ab2@2368>   BNE 'l21
0001FB14 <AmiBlitz3.ab2@2371> RTS
0001FB1A <AmiBlitz3.ab2@2375>   MOVEA.l lastrestype,A0
0001FB1C <AmiBlitz3.ab2@2376>   MOVEA.l (A0),A2
0001FB1E <AmiBlitz3.ab2@2377>   CLR.l (A0)
0001FB24 <AmiBlitz3.ab2@2378> JMP freetypes
0001FB2A <AmiBlitz3.ab2@2382>   MOVEA.l varbase,A3
0001FB30 <AmiBlitz3.ab2@2383>   CLR.l varbase
0001FB34 <AmiBlitz3.ab2@2386>   CMPA.w #$0,A3
0001FB38 <AmiBlitz3.ab2@2387>   BEQ.w 'l20
0001FB3A <AmiBlitz3.ab2@2388>   MOVEA.l A3,A1
0001FB3C <AmiBlitz3.ab2@2389>   MOVEA.l (A3),A3
0001FB3E <AmiBlitz3.ab2@2390>   MOVEQ.l #$00,D0
0001FB42 <AmiBlitz3.ab2@2391>   MOVE.b $E+4(A1),D0
0001FB48 <AmiBlitz3.ab2@2392>   MOVEA.l _execbase,A6
0001FB4E <AmiBlitz3.ab2@2393>   MOVE.l mempool2,a0
0001FB52 <AmiBlitz3.ab2@2394>   JSR _FreePooled(A6)
0001FB56 <AmiBlitz3.ab2@2395> BRA.w 'l10
0001FB58 <AmiBlitz3.ab2@2398> RTS
0001FB5E <AmiBlitz3.ab2@2403>   LEA firstiff,A2
0001FB60 <AmiBlitz3.ab2@2404>   MOVEQ.l #$0E,D2
0001FB66 <AmiBlitz3.ab2@2405> JMP freeslist
0001FB68 <AmiBlitz3.ab2@2411> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0001FB6A <AmiBlitz3.ab2@2412> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0001FB70 <AmiBlitz3.ab2@2416>   CLR.w inmacro
0001FB76 <AmiBlitz3.ab2@2417>   ADDQ.l #1,globallinecount
0001FB7C <AmiBlitz3.ab2@2418>   CLR.b nostringopt
0001FB80 <AmiBlitz3.ab2@2419>   BSR.w JL_0_3CA4
0001FB86 <AmiBlitz3.ab2@2420>   CLR.w instringon
0001FB8C <AmiBlitz3.ab2@2423>   TST.w ininclude
0001FB90 <AmiBlitz3.ab2@2424>   BEQ.w JL_0_39B0
0001FB96 <AmiBlitz3.ab2@2425>   ADDQ.l #1,includeline
0001FB9C <AmiBlitz3.ab2@2426>     JSR ab3_WriteDebugFile
0001FBA2 <AmiBlitz3.ab2@2427>   JSR AJL_0_C09E
0001FBA6 <AmiBlitz3.ab2@2428>   BEQ.w JL_0_39B0
0001FBAC <AmiBlitz3.ab2@2429>   MOVE.w ininclude,D0
0001FBB0 <AmiBlitz3.ab2@2430>   CMP.w #$4,D0
0001FBB4 <AmiBlitz3.ab2@2431>   BCC.w JL_0_39AC
0001FBB6 <AmiBlitz3.ab2@2432>   ADD.w D0,D0
0001FBBC <AmiBlitz3.ab2@2433>   LEA progress_per_line,A0
0001FBC0 <AmiBlitz3.ab2@2434>   MOVE.w $0(A0,D0.W),D2
0001FBC4 <AmiBlitz3.ab2@2435>   CMP.w progressbar_width(PC),D2
0001FBC8 <AmiBlitz3.ab2@2436>   BCC.w JL_0_39AC
0001FBCC <AmiBlitz3.ab2@2437>   ADDQ.w #1,$0(A0,D0.W)
0001FBCE <AmiBlitz3.ab2@2438>   LSR.w #1,D0
0001FBD0 <AmiBlitz3.ab2@2439>   MOVE.l d0,d1
0001FBD2 <AmiBlitz3.ab2@2440>   EXT.l d1
0001FBD4 <AmiBlitz3.ab2@2441>   MOVE.l d2,d0
0001FBD6 <AmiBlitz3.ab2@2442>   EXT.l d0                                                 ;d0=x,d1=y
0001FBDC <AmiBlitz3.ab2@2444>   JSR update_progressbar
0001FBDE <AmiBlitz3.ab2@2447>   MOVEQ.l #-$01,D0
0001FBE0 <AmiBlitz3.ab2@2448> RTS
0001FBE6 <AmiBlitz3.ab2@2452>   MOVE.l titleat,D0
0001FBE8 <AmiBlitz3.ab2@2453>   MOVEQ.l #$00,D1
0001FBEE <AmiBlitz3.ab2@2454>   MOVE.w progress_per_line,D1
0001FBF0 <AmiBlitz3.ab2@2455>   ADD.l D1,D0
0001FBF2 <AmiBlitz3.ab2@2456>   MOVE.l D0,D1
0001FBF4 <AmiBlitz3.ab2@2457>   SWAP D0
0001FBFA <AmiBlitz3.ab2@2458>   CMP.w titleat,D0
0001FBFE <AmiBlitz3.ab2@2459>    BEQ.w JL_0_39E4
0001FC00 <AmiBlitz3.ab2@2462>   EXT.l d0
0001FC02 <AmiBlitz3.ab2@2463>   MOVE.l d1,-(a7)
0001FC0A <AmiBlitz3.ab2@2466>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
0001FC10 <AmiBlitz3.ab2@2467>   JSR update_progressbar
0001FC18 <AmiBlitz3.ab2@2468>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0001FC1A <AmiBlitz3.ab2@2472>   MOVE.l (a7)+,d1
0001FC20 <AmiBlitz3.ab2@2475>   MOVE.l D1,titleat
0001FC26 <AmiBlitz3.ab2@2476>   ADDQ.l #1,linenumat
0001FC2C <AmiBlitz3.ab2@2477>   CLR.w linedone
0001FC32 <AmiBlitz3.ab2@2478>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0001FC38 <AmiBlitz3.ab2@2480>   SUBQ.l #1,numlines2
0001FC3C <AmiBlitz3.ab2@2481>    BEQ.w JL_0_3A12
0001FC42 <AmiBlitz3.ab2@2482>   MOVEA.l sourceline,A0
0001FC44 <AmiBlitz3.ab2@2483>   MOVEA.l (A0),A0
0001FC4A <AmiBlitz3.ab2@2484>   MOVE.l A0,sourceline
0001FC4E <AmiBlitz3.ab2@2485>   LEA $9(A0),A5
0001FC50 <AmiBlitz3.ab2@2488> RTS
0001FC52 <AmiBlitz3.ab2@2492>   MOVE.w D0,-(A7)
0001FC54 <AmiBlitz3.ab2@2493>   MOVEQ.l #$03,D0
0001FC56 <AmiBlitz3.ab2@2496>     MOVE.w D1,D2
0001FC5A <AmiBlitz3.ab2@2497>     ANDI.w #$F,D2
0001FC5E <AmiBlitz3.ab2@2498>     ADDI.w #$30,D2
0001FC62 <AmiBlitz3.ab2@2499>     CMP.w #$3A,D2
0001FC66 <AmiBlitz3.ab2@2500>      BCS.w JL_0_3A2C
0001FC68 <AmiBlitz3.ab2@2501>     ADDQ.w #7,D2
0001FC6C <AmiBlitz3.ab2@2504>     MOVE.b D2,$0(A0,D0.W)
0001FC6E <AmiBlitz3.ab2@2505>     LSR.w #4,D1
0001FC72 <AmiBlitz3.ab2@2506>   DBF D0,JL_0_3A18
0001FC74 <AmiBlitz3.ab2@2508>   MOVE.w (A7)+,D0
0001FC76 <AmiBlitz3.ab2@2509> RTS
0001FC7C <AmiBlitz3.ab2@2519>   MOVE.w skipcode,D1
0001FC80 <AmiBlitz3.ab2@2520>   BNE.w JL_0_3A46
0001FC82 <AmiBlitz3.ab2@2521> RTS
0001FC84 <AmiBlitz3.ab2@2524>   MOVE.l A5,-(A7)
0001FC86 <AmiBlitz3.ab2@2525>   MOVEQ.l #$3A,D1                                          ;':'
0001FC88 <AmiBlitz3.ab2@2526>   MOVEQ.l #$21,D2                                          ;'!'
0001FC8A <AmiBlitz3.ab2@2527>   MOVEQ.l #$3B,D3                                          ;';'
0001FC8C <AmiBlitz3.ab2@2528>   MOVEQ.l #$22,D4                                          ;'"'
0001FC8E <AmiBlitz3.ab2@2531>   MOVE.b (A5)+,D0
0001FC92 <AmiBlitz3.ab2@2532>    BEQ.w JL_0_3CA0
0001FC96 <AmiBlitz3.ab2@2533>    BPL.w JL_0_3A60
0001FC98 <AmiBlitz3.ab2@2534>   MOVE.b (A5)+,D0
0001FC9C <AmiBlitz3.ab2@2535> BRA.w JL_0_3A50
0001FC9E <AmiBlitz3.ab2@2538>   CMP.b D4,D0
0001FCA2 <AmiBlitz3.ab2@2539>    BNE.w JL_0_3A82
0001FCA4 <AmiBlitz3.ab2@2542>   MOVE.b (A5)+,D0
0001FCA8 <AmiBlitz3.ab2@2543>    BEQ.w notqerr
0001FCAC <AmiBlitz3.ab2@2549>   CMP.b #$22,D0
0001FCB0 <AmiBlitz3.ab2@2550>    BNE.w JL_0_3A66
0001FCB4 <AmiBlitz3.ab2@2551> BRA.w JL_0_3A50
0001FCB6 <AmiBlitz3.ab2@2554>   CMP.b D1,D0
0001FCBA <AmiBlitz3.ab2@2555>    BEQ.w JL_0_3CA0
0001FCBC <AmiBlitz3.ab2@2556>   CMP.b D3,D0
0001FCC0 <AmiBlitz3.ab2@2557>    BEQ.w JL_0_3CA0
0001FCC2 <AmiBlitz3.ab2@2560>   CMP.b D2,D0
0001FCC6 <AmiBlitz3.ab2@2561>    BNE.w JL_0_3A50
0001FCCE <AmiBlitz3.ab2@2562>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
0001FCD0 <AmiBlitz3.ab2@2563>   MOVEA.l A5,A3
0001FCD6 <AmiBlitz3.ab2@2564>    JSR getparameter2
0001FCDA <AmiBlitz3.ab2@2565>    BNE.w JL_0_3AAC
0001FCE0 <AmiBlitz3.ab2@2566> JMP syntaxerr
0001FCEA <AmiBlitz3.ab2@2571>    MOVE.w oldqflag,instringon
0001FCF0 <AmiBlitz3.ab2@2572>   MOVEA.l lastsourcepos,A5
0001FCF6 <AmiBlitz3.ab2@2573>    JSR findmac                                             ;find macro
0001FCFA <AmiBlitz3.ab2@2574>    BEQ.w JL_0_3ABE
0001FD00 <AmiBlitz3.ab2@2575> JMP nomacerr
0001FD06 <AmiBlitz3.ab2@2578>   TST.b debugmode
0001FD0A <AmiBlitz3.ab2@2579>   BEQ 'sk1
0001FD0E <AmiBlitz3.ab2@2580>   MOVE.w #$4e71,d1
0001FD14 <AmiBlitz3.ab2@2581>   JSR writeword
0001FD16 <AmiBlitz3.ab2@2582>   MOVE.l a5,-(a7)
0001FD18 <AmiBlitz3.ab2@2583>   MOVE.l a3,a5
0001FD1A <AmiBlitz3.ab2@2584>   SUBQ.l #1,a5
0001FD22 <AmiBlitz3.ab2@2585>   MOVE.w #$0,inmacro
0001FD26 <AmiBlitz3.ab2@2586>   BSR debugstuffa
0001FD2E <AmiBlitz3.ab2@2587>   MOVE.w #$FFFF,inmacro
0001FD30 <AmiBlitz3.ab2@2588>   MOVE.l (a7)+,a5
0001FD34 <AmiBlitz3.ab2@2589>   MOVE.w #$4e71,d1
0001FD3A <AmiBlitz3.ab2@2590>   JSR writeword
0001FD3C <AmiBlitz3.ab2@2593>   MOVEA.l A5,A4
0001FD40 <AmiBlitz3.ab2@2596>    CMP.b #" ",(a4)+
0001FD44 <AmiBlitz3.ab2@2597>     BEQ 'l5a
0001FD46 <AmiBlitz3.ab2@2598>      SUBQ.l#1,a4
0001FD4A <AmiBlitz3.ab2@2599>      CMP.b #",",(a4)
0001FD4E <AmiBlitz3.ab2@2600>     BEQ JL_0_3AEA
0001FD50 <AmiBlitz3.ab2@2603>   MOVEQ.l #$00,D4
0001FD56 <AmiBlitz3.ab2@2604>   TST.b newsyntax
0001FD5A <AmiBlitz3.ab2@2605>   BEQ 'l10b
0001FD5E <AmiBlitz3.ab2@2606>   MOVEM.l a0/d0,-(a7)
0001FD62 <AmiBlitz3.ab2@2607>   MOVE.l 4(a2),a0
0001FD66 <AmiBlitz3.ab2@2608>   MOVE.w 8(a2),d0
0001FD6A <AmiBlitz3.ab2@2611>   CMP.b #"`",(a0)+
0001FD6E <AmiBlitz3.ab2@2612>   BEQ 'x1
0001FD70 <AmiBlitz3.ab2@2613>   SUBQ.w #1,d0
0001FD74 <AmiBlitz3.ab2@2614>   BNE 'x2
0001FD78 <AmiBlitz3.ab2@2615> BRA 'x3
0001FD7C <AmiBlitz3.ab2@2618>   MOVEM.l (a7)+,a0/d0
0001FD80 <AmiBlitz3.ab2@2619> BRA 'l10
0001FD84 <AmiBlitz3.ab2@2622>   MOVEM.l (a7)+,a0/d0
0001FD88 <AmiBlitz3.ab2@2623> BRA JL_0_3AEA
0001FD8C <AmiBlitz3.ab2@2626>   CMPI.b #"{",(A4)
0001FD90 <AmiBlitz3.ab2@2627>    BNE.w JL_0_3AEA
0001FD92 <AmiBlitz3.ab2@2631>   ADDQ.l #1,a4
0001FD96 <AmiBlitz3.ab2@2634>     CMP.b #" ",(a4)
0001FD9A <AmiBlitz3.ab2@2635>     BEQ 'l5
0001FD9E <AmiBlitz3.ab2@2636>     MOVEM.l a0/d0,-(a7)
0001FDA4 <AmiBlitz3.ab2@2637>     CLR.b exmac
0001FDAA <AmiBlitz3.ab2@2638>     LEA chartab,a0
0001FDAC <AmiBlitz3.ab2@2639>     MOVEQ #0,d0
0001FDAE <AmiBlitz3.ab2@2640>     MOVE.b (a4),d0
0001FDB2 <AmiBlitz3.ab2@2641>     BMI 'm1
0001FDB6 <AmiBlitz3.ab2@2642>     TST.b 0(a0,d0)
0001FDBA <AmiBlitz3.ab2@2643>     BEQ 'm1
0001FDC0 <AmiBlitz3.ab2@2644>     TST.b newsyntax
0001FDC4 <AmiBlitz3.ab2@2645>     BEQ 'ns1
0001FDC8 <AmiBlitz3.ab2@2646>     CMP.b #"#",d0
0001FDCC <AmiBlitz3.ab2@2647>     BEQ 'm1
0001FDD0 <AmiBlitz3.ab2@2648>     CMP.b #"$",d0
0001FDD4 <AmiBlitz3.ab2@2649>     BEQ 'm1
0001FDD8 <AmiBlitz3.ab2@2650>     CMP.b #"-",d0
0001FDDC <AmiBlitz3.ab2@2651>     BEQ 'm1
0001FDE0 <AmiBlitz3.ab2@2654>   CMP.b #",",d0
0001FDE4 <AmiBlitz3.ab2@2655>     BEQ 'm1
0001FDE8 <AmiBlitz3.ab2@2656>     CMP.b #"{",d0
0001FDEC <AmiBlitz3.ab2@2657>     BNE 'm1b
0001FDEE <AmiBlitz3.ab2@2658>     ADDQ.l #1,a4
0001FDF2 <AmiBlitz3.ab2@2659> BRA 'm1
0001FDF8 <AmiBlitz3.ab2@2662>   TST.b newsyntax
0001FDFC <AmiBlitz3.ab2@2663>     BEQ 'm1
0001FE04 <AmiBlitz3.ab2@2664>     MOVE.b #1,exmac
0001FE08 <AmiBlitz3.ab2@2667>   MOVEM.l (a7)+,a0/d0
0001FE0E <AmiBlitz3.ab2@2668>     TST.b exmac
0001FE12 <AmiBlitz3.ab2@2669>     BNE JL_0_3AEA
0001FE14 <AmiBlitz3.ab2@2676>   TST.b (a4)
0001FE18 <AmiBlitz3.ab2@2677>   BEQ JL_0_3AEA
0001FE1E <AmiBlitz3.ab2@2680>   MOVEA.l ptr_macrobuffer_begin,A0
0001FE20 <AmiBlitz3.ab2@2683>   ADDQ.w #1,D4
0001FE22 <AmiBlitz3.ab2@2684>   MOVE.l A4,(A0)
0001FE26 <AmiBlitz3.ab2@2685>   CLR.w 4(a0)
0001FE2A <AmiBlitz3.ab2@2686>    BSR.w JL_0_3CC6
0001FE2C <AmiBlitz3.ab2@2688>   ADDQ.l #4,a0
0001FE2E <AmiBlitz3.ab2@2692>   SUBQ.w #1,(a0)+
0001FE32 <AmiBlitz3.ab2@2693>   CMP.b #$7D,D0
0001FE36 <AmiBlitz3.ab2@2694>   BEQ 'l10
0001FE38 <AmiBlitz3.ab2@2695>   TST.b d0
0001FE3C <AmiBlitz3.ab2@2696>   BEQ 'l10
0001FE40 <AmiBlitz3.ab2@2697> BRA JL_0_3AD0
0001FE46 <AmiBlitz3.ab2@2701>   CLR.l sourceline3
0001FE48 <AmiBlitz3.ab2@2702>   MOVEA.l A4,A5
0001FE4E <AmiBlitz3.ab2@2705>   MOVE.w D4,numarg
0001FE54 <AmiBlitz3.ab2@2712>   MOVE.l #$01,D1
0001FE5A <AmiBlitz3.ab2@2713>   MOVEA.l _execbase,A6
0001FE60 <AmiBlitz3.ab2@2714>   MOVE.l mempool,a0
0001FE66 <AmiBlitz3.ab2@2715>   MOVE.l macrobuffer_size,D0
0001FE6C <AmiBlitz3.ab2@2716>   CMP.l #40000,d0
0001FE70 <AmiBlitz3.ab2@2717>   BGE 'l1m
0001FE76 <AmiBlitz3.ab2@2718>   MOVE.l #40000,d0
0001FE7C <AmiBlitz3.ab2@2719>   MOVE.l d0,macrobuffer_size
0001FE80 <AmiBlitz3.ab2@2722>   JSR _AllocPooled(a6)
0001FE8A <AmiBlitz3.ab2@2724>   MOVE.l myline,myoline
0001FE8C <AmiBlitz3.ab2@2727>   ADDQ.l #1,d0
0001FE92 <AmiBlitz3.ab2@2728>   MOVE.l D0,myline
0001FE94 <AmiBlitz3.ab2@2729>   MOVEA.l D0,A1
0001FE9A <AmiBlitz3.ab2@2730>   MOVE.b #":",-1(a1)
0001FE9C <AmiBlitz3.ab2@2731>   MOVEA.l A1,A6
0001FEA2 <AmiBlitz3.ab2@2732>   ADDA.l macrobuffer_size,A6
0001FEA4 <AmiBlitz3.ab2@2733>   MOVEA.l (A7)+,A0
0001FEA6 <AmiBlitz3.ab2@2736>   CMPA.l A6,A1
0001FEAA <AmiBlitz3.ab2@2737>    BCC.w mbovererr
0001FEAC <AmiBlitz3.ab2@2738>   MOVE.b (A0)+,(a1)+
0001FEAE <AmiBlitz3.ab2@2739>   CMPA.l A3,A0
0001FEB2 <AmiBlitz3.ab2@2740>    BCS.w JL_0_3B1E
0001FEB4 <AmiBlitz3.ab2@2741>   SUBQ.w #1,A1
0001FEB8 <AmiBlitz3.ab2@2742>   MOVE.w $8(A2),D1
0001FEBC <AmiBlitz3.ab2@2743>    BEQ.w JL_0_3C70
0001FEC4 <AmiBlitz3.ab2@2744>   MOVE.w $A(A2),macnum
0001FEC8 <AmiBlitz3.ab2@2745>   ADDQ.w #1,$A(A2)
0001FECC <AmiBlitz3.ab2@2746>   MOVEA.l $4(A2),A2
0001FECE <AmiBlitz3.ab2@2747>   SUBQ.w #1,D1
0001FED4 <AmiBlitz3.ab2@2748>   CLR.b firstmline
0001FED6 <AmiBlitz3.ab2@2751>     MOVEQ.l #$00,D0
0001FED8 <AmiBlitz3.ab2@2752>     MOVE.b (A2)+,D0
0001FEDE <AmiBlitz3.ab2@2753>     TST.b firstmline
0001FEE2 <AmiBlitz3.ab2@2754>     BNE 'c1
0001FEE6 <AmiBlitz3.ab2@2755>     CMP.b #$22,d0
0001FEEA <AmiBlitz3.ab2@2756>     BNE 's1
0001FEF2 <AmiBlitz3.ab2@2757>     MOVE.b #1,firstmline
0001FEF6 <AmiBlitz3.ab2@2760>     CMP.b #":",d0
0001FEFA <AmiBlitz3.ab2@2761>     BNE 'm1
0001FF02 <AmiBlitz3.ab2@2762>     MOVE.b #1,firstmline
0001FF06 <AmiBlitz3.ab2@2765>     CMP.b #";",d0
0001FF0A <AmiBlitz3.ab2@2766>     BNE 'c1
0001FF0C <AmiBlitz3.ab2@2769>     SUBQ.w #1,d1                                           ;filter out comment
0001FF0E <AmiBlitz3.ab2@2770>     MOVE.b (a2)+,d0
0001FF14 <AmiBlitz3.ab2@2771>     CMP.w #":@",-1(a2)
0001FF18 <AmiBlitz3.ab2@2772>     BEQ 'c2
0001FF1A <AmiBlitz3.ab2@2773>     TST.w d1
0001FF1E <AmiBlitz3.ab2@2774>     BNE 'l1
0001FF22 <AmiBlitz3.ab2@2775>   BRA JL_0_3C6C
0001FF28 <AmiBlitz3.ab2@2778>     CMP.b #":",1(a2)
0001FF2C <AmiBlitz3.ab2@2779>       BNE 'l1
0001FF2E <AmiBlitz3.ab2@2780>       ADDQ #2,a2
0001FF30 <AmiBlitz3.ab2@2781>       SUBQ #3,d1
0001FF32 <AmiBlitz3.ab2@2782>       MOVE.b (a2)+,d0
0001FF3A <AmiBlitz3.ab2@2783>       MOVE.b #1,firstmline
0001FF3E <AmiBlitz3.ab2@2786>     CMP.b #"`",D0
0001FF42 <AmiBlitz3.ab2@2787>      BNE.w JL_0_3C56
0001FF44 <AmiBlitz3.ab2@2788>     SUBQ.w #1,D1
0001FF46 <AmiBlitz3.ab2@2789>     MOVE.b (A2)+,D0
0001FF4A <AmiBlitz3.ab2@2790>     CMP.w #$7B,D0
0001FF4E <AmiBlitz3.ab2@2791>      BEQ.w JL_0_3BB6
0001FF52 <AmiBlitz3.ab2@2792>     CMP.w #$40,D0
0001FF56 <AmiBlitz3.ab2@2793>      BNE.w JL_0_3B82
0001FF58 <AmiBlitz3.ab2@2794>     MOVEQ.l #$00,D2
0001FF5E <AmiBlitz3.ab2@2795>     MOVE.w macnum,D2
0001FF60 <AmiBlitz3.ab2@2796>     MOVEA.l A1,A0
0001FF62 <AmiBlitz3.ab2@2797>     MOVE.w D1,-(A7)
0001FF68 <AmiBlitz3.ab2@2798>      JSR makelong
0001FF6A <AmiBlitz3.ab2@2799>     MOVEA.l A0,A1
0001FF6C <AmiBlitz3.ab2@2800>     MOVE.w (A7)+,D1
0001FF70 <AmiBlitz3.ab2@2801>   BRA.w JL_0_3C6C
0001FF74 <AmiBlitz3.ab2@2804>     ORI.w #$20,D0
0001FF78 <AmiBlitz3.ab2@2805>     CMP.w #$7A,D0
0001FF7C <AmiBlitz3.ab2@2806>      BCS.w JL_0_3B94
0001FF82 <AmiBlitz3.ab2@2807>   JMP ilconsterr
0001FF86 <AmiBlitz3.ab2@2810>     SUBI.w #$30,D0
0001FF8A <AmiBlitz3.ab2@2811>     CMP.w #$A,D0
0001FF8E <AmiBlitz3.ab2@2812>      BCS.w JL_0_3BF2
0001FF92 <AmiBlitz3.ab2@2813>     SUBI.w #$27,D0
0001FF96 <AmiBlitz3.ab2@2814>     CMP.w #$A,D0
0001FF9A <AmiBlitz3.ab2@2815>      BCC.w JL_0_3BB2
0001FFA0 <AmiBlitz3.ab2@2816>   JMP ilconsterr
0001FFA4 <AmiBlitz3.ab2@2819>   BRA.w JL_0_3BF2
0001FFA6 <AmiBlitz3.ab2@2822>     MOVE.l A5,-(A7)
0001FFAA <AmiBlitz3.ab2@2823>     MOVEM.l D1/A1-A2/A6,-(A7)
0001FFAC <AmiBlitz3.ab2@2824>     MOVEA.l A2,A5
0001FFB2 <AmiBlitz3.ab2@2825>      JSR AJL_0_BF6E
0001FFB6 <AmiBlitz3.ab2@2826>     CMP.w #$7D,D0
0001FFBA <AmiBlitz3.ab2@2827>      BEQ.w JL_0_3BD2
0001FFC0 <AmiBlitz3.ab2@2828>   JMP syntaxerr
0001FFC4 <AmiBlitz3.ab2@2831>     MOVEM.l (A7)+,D1/A1-A2/A6
0001FFC6 <AmiBlitz3.ab2@2832>     MOVE.l A5,D2
0001FFC8 <AmiBlitz3.ab2@2833>     SUB.l A2,D2
0001FFCA <AmiBlitz3.ab2@2834>     SUB.w D2,D1
0001FFCC <AmiBlitz3.ab2@2835>     MOVEA.l A5,A2
0001FFD2 <AmiBlitz3.ab2@2836>     CLR.w instringon
0001FFD4 <AmiBlitz3.ab2@2837>     MOVEA.l (A7)+,A5
0001FFD6 <AmiBlitz3.ab2@2838>     MOVE.l D3,D0
0001FFDA <AmiBlitz3.ab2@2839>     BPL.w JL_0_3BF2
0001FFE0 <AmiBlitz3.ab2@2840>   JMP ilconsterr
0001FFE2 <AmiBlitz3.ab2@2843>     SUBQ.w #1,D0
0001FFE6 <AmiBlitz3.ab2@2844>      BPL.w JL_0_3C20
0001FFEC <AmiBlitz3.ab2@2848>     MOVE.w numarg,D0
0001FFF0 <AmiBlitz3.ab2@2849>     DIVU #$A,D0
0001FFF4 <AmiBlitz3.ab2@2850>     ADDI.w #$30,D0
0001FFF6 <AmiBlitz3.ab2@2851>     CMPA.l A6,A1
0001FFFA <AmiBlitz3.ab2@2852>      BCC.w mbovererr
0001FFFC <AmiBlitz3.ab2@2853>     MOVE.b D0,(A1)+
0001FFFE <AmiBlitz3.ab2@2854>     SWAP D0
00020002 <AmiBlitz3.ab2@2855>     ADDI.w #$30,D0
00020004 <AmiBlitz3.ab2@2856>     CMPA.l A6,A1
00020008 <AmiBlitz3.ab2@2857>      BCC.w mbovererr
0002000A <AmiBlitz3.ab2@2858>     MOVE.b D0,(A1)+
0002000E <AmiBlitz3.ab2@2859>   BRA.w JL_0_3C6C
00020014 <AmiBlitz3.ab2@2865>     CMP.w numarg,D0
00020018 <AmiBlitz3.ab2@2866>      BCC.w JL_0_3C6C
0002001A <AmiBlitz3.ab2@2867>     LSL.w #1,D0
0002001C <AmiBlitz3.ab2@2868>     MOVE.w D0,D4
0002001E <AmiBlitz3.ab2@2869>     LSL.w #1,D0
00020020 <AmiBlitz3.ab2@2870>     ADD.w D4,D0
00020026 <AmiBlitz3.ab2@2871>     MOVEA.l ptr_macrobuffer_begin,A0
00020028 <AmiBlitz3.ab2@2872>     ADDA.w D0,A0
0002002C <AmiBlitz3.ab2@2873>     MOVE.w $4(A0),D4
00020030 <AmiBlitz3.ab2@2874>      BEQ.w JL_0_3C6C
00020032 <AmiBlitz3.ab2@2875>     MOVEA.l (A0),A0
00020034 <AmiBlitz3.ab2@2876>     SUBQ.w #1,D4
00020036 <AmiBlitz3.ab2@2879>       CMPA.l A6,A1
0002003A <AmiBlitz3.ab2@2880>        BCC.w mbovererr
0002003E <AmiBlitz3.ab2@2881>       CMP.w #"@@",(a0)
00020042 <AmiBlitz3.ab2@2882>        BNE 'l10
00020048 <AmiBlitz3.ab2@2883>       TST.w ininclude
0002004C <AmiBlitz3.ab2@2884>        BNE errorjoin
00020052 <AmiBlitz3.ab2@2887>       MOVE.l sourceline,a0
00020054 <AmiBlitz3.ab2@2888>       MOVE.l (a0),a0
0002005A <AmiBlitz3.ab2@2889>       CMP.l #0,a0
0002005E <AmiBlitz3.ab2@2890>       BNE 'l11
00020060 <AmiBlitz3.ab2@2891>       MOVEQ #0,d0
00020066 <AmiBlitz3.ab2@2892>       JSR error
0002006C <AmiBlitz3.ab2@2895>       MOVE.l a0,sourceline
00020072 <AmiBlitz3.ab2@2896>       ADDQ.l #1,linenumat
00020076 <AmiBlitz3.ab2@2897>       LEA 9(a0),a0
00020078 <AmiBlitz3.ab2@2898>       MOVE.l a0,-(a7)
0002007C <AmiBlitz3.ab2@2901>       CMP.b #" ",(a0)+
00020080 <AmiBlitz3.ab2@2902>        BEQ 'l110
00020086 <AmiBlitz3.ab2@2903>       CMP.b #";",-1(a0)
00020088 <AmiBlitz3.ab2@2904>       MOVE.l (a7)+,a0
0002008C <AmiBlitz3.ab2@2905>        BEQ 'l111
0002008E <AmiBlitz3.ab2@2906>       SUBQ.l #1,d4
00020090 <AmiBlitz3.ab2@2909>       MOVE.b (A0)+,(A1)+
00020094 <AmiBlitz3.ab2@2910>     DBF D4,JL_0_3C46
00020098 <AmiBlitz3.ab2@2912>   BRA.w JL_0_3C6C
0002009A <AmiBlitz3.ab2@2915>     CMPA.l A6,A1
0002009E <AmiBlitz3.ab2@2916>      BCC.w mbovererr
000200A0 <AmiBlitz3.ab2@2917>     MOVE.b D0,(A1)+
000200A4 <AmiBlitz3.ab2@2918>      BPL.w JL_0_3C6C
000200A6 <AmiBlitz3.ab2@2919>     CMPA.l A6,A1
000200AA <AmiBlitz3.ab2@2920>      BCC.w mbovererr
000200AC <AmiBlitz3.ab2@2921>     MOVE.b (A2)+,(A1)+
000200AE <AmiBlitz3.ab2@2922>     SUBQ.w #1,D1
000200B2 <AmiBlitz3.ab2@2925>   DBF D1,JL_0_3B48
000200B4 <AmiBlitz3.ab2@2935>   CMPA.l A6,A1
000200B8 <AmiBlitz3.ab2@2936>    BCC.w mbovererr
000200BA <AmiBlitz3.ab2@2937>   MOVE.b (A5)+,(A1)+
000200BE <AmiBlitz3.ab2@2938>    BNE.w JL_0_3C70
000200C4 <AmiBlitz3.ab2@2939>   MOVEA.l myline,A5
000200CA <AmiBlitz3.ab2@2940>   MOVE.l myoline,D0
000200CE <AmiBlitz3.ab2@2941>    BEQ.w JL_0_3C9C
000200D0 <AmiBlitz3.ab2@2942>   SUBQ.l #1,d0
000200D2 <AmiBlitz3.ab2@2943>   MOVEA.l D0,A1
000200D8 <AmiBlitz3.ab2@2944>   MOVE.l macrobuffer_size,D0
000200DE <AmiBlitz3.ab2@2945>   MOVEA.l _execbase,A6
000200E4 <AmiBlitz3.ab2@2946>   MOVE.l mempool,a0
000200E8 <AmiBlitz3.ab2@2947>   JSR _FreePooled(A6)
000200EC <AmiBlitz3.ab2@2950> BRA.w JL_0_3A46
000200EE <AmiBlitz3.ab2@2953>   MOVEA.l (A7)+,A5
000200F0 <AmiBlitz3.ab2@2954> RTS
000200F6 <AmiBlitz3.ab2@2958>   MOVE.l myline,D0
000200FA <AmiBlitz3.ab2@2959>   BEQ.w JL_0_3CC4
000200FC <AmiBlitz3.ab2@2960>   SUBQ.l #1,d0
00020102 <AmiBlitz3.ab2@2961>   CLR.l myline
00020104 <AmiBlitz3.ab2@2962>   MOVEA.l D0,A1
0002010A <AmiBlitz3.ab2@2963>   MOVE.l macrobuffer_size,D0
00020110 <AmiBlitz3.ab2@2964>   MOVEA.l _execbase,A6
00020116 <AmiBlitz3.ab2@2965>   MOVE.l mempool,a0
0002011A <AmiBlitz3.ab2@2966> JMP _FreePooled(A6)
0002011C <AmiBlitz3.ab2@2969> RTS
0002011E <AmiBlitz3.ab2@2973>   MOVEQ.l #$00,D2
00020122 <AmiBlitz3.ab2@2976>   ADDQ.w #1,4(a0)
00020124 <AmiBlitz3.ab2@2977>    MOVE.b (A4)+,D0
00020128 <AmiBlitz3.ab2@2979>    BEQ exit1
0002012C <AmiBlitz3.ab2@2980>    BPL.w JL_0_3CD8
00020130 <AmiBlitz3.ab2@2981>   ADDQ.w #1,4(a0)
00020132 <AmiBlitz3.ab2@2982>   ADDQ.w #1,A4
00020136 <AmiBlitz3.ab2@2983> BRA.w JL_0_3CC8
0002013C <AmiBlitz3.ab2@2986>    TST.w instringon
00020140 <AmiBlitz3.ab2@2987>    BNE 'lnom
00020144 <AmiBlitz3.ab2@2988>    CMP.b #";",d0
00020148 <AmiBlitz3.ab2@2989>    BEQ exit2
0002014C <AmiBlitz3.ab2@2990>    CMP.b #":",d0
00020150 <AmiBlitz3.ab2@2991>    BEQ exit2
00020154 <AmiBlitz3.ab2@2994>   CMP.b #$22,D0
00020158 <AmiBlitz3.ab2@2995>    BNE.w JL_0_3CEA
0002015E <AmiBlitz3.ab2@2996>   NOT.w instringon
00020162 <AmiBlitz3.ab2@2997> BRA.w JL_0_3CC8
00020168 <AmiBlitz3.ab2@3001>   TST.w instringon
0002016C <AmiBlitz3.ab2@3002>    BNE.w JL_0_3CC8
00020170 <AmiBlitz3.ab2@3003>    CMP.b #"@",d0
00020174 <AmiBlitz3.ab2@3004>    BNE 'l10
00020178 <AmiBlitz3.ab2@3005>    CMP.b #"@",(a4)
0002017C <AmiBlitz3.ab2@3006>    BNE 'l10
00020182 <AmiBlitz3.ab2@3007>    TST.w ininclude
00020186 <AmiBlitz3.ab2@3008>    BNE errorjoin
0002018C <AmiBlitz3.ab2@3009>    MOVE.l sourceline3,a4
00020192 <AmiBlitz3.ab2@3010>    CMP.l #0,a4
00020196 <AmiBlitz3.ab2@3011>    BNE 'l11
0002019C <AmiBlitz3.ab2@3012>    MOVE.l sourceline,a4
0002019E <AmiBlitz3.ab2@3015>   MOVE.l (a4),a4
000201A4 <AmiBlitz3.ab2@3016>       CMP.l #0,a4
000201A8 <AmiBlitz3.ab2@3017>       BNE 'l12
000201AA <AmiBlitz3.ab2@3018>       MOVEQ #0,d0
000201B0 <AmiBlitz3.ab2@3019>       JSR error
000201B6 <AmiBlitz3.ab2@3022>    MOVE.l a4,sourceline3
000201BA <AmiBlitz3.ab2@3023>    LEA 9(a4),a4
000201BC <AmiBlitz3.ab2@3024>    MOVEQ #",",d0
000201C0 <AmiBlitz3.ab2@3027>   CMP.b #$2C,D0
000201C4 <AmiBlitz3.ab2@3028>    BNE.w JL_0_3D06
000201C6 <AmiBlitz3.ab2@3029>   TST.w D2
000201CA <AmiBlitz3.ab2@3030>    BEQ.w JL_0_3D30
000201CE <AmiBlitz3.ab2@3031> BRA.w JL_0_3CC8
000201D2 <AmiBlitz3.ab2@3035>    CMP.b #$7B,D0                                           ;"{"
000201D6 <AmiBlitz3.ab2@3036>    BEQ.w 'l10
000201DA <AmiBlitz3.ab2@3037>   CMP.b #$28,D0                                            ;"("
000201DE <AmiBlitz3.ab2@3040>    BNE.w JL_0_3D14
000201E0 <AmiBlitz3.ab2@3041>   ADDQ.w #1,D2
000201E4 <AmiBlitz3.ab2@3042> BRA.w JL_0_3CC8
000201E8 <AmiBlitz3.ab2@3045>   CMP.b #$7D,D0                                           ;"}"
000201EC <AmiBlitz3.ab2@3046>    BNE.w JL_0_3D22
000201EE <AmiBlitz3.ab2@3047>  TST.w D2
000201F2 <AmiBlitz3.ab2@3048>    BEQ.w JL_0_3D30
000201F6 <AmiBlitz3.ab2@3052>    CMP.b #$7D,D0                                           ;"}"
000201FA <AmiBlitz3.ab2@3053>    BEQ.w 'l10
000201FE <AmiBlitz3.ab2@3054>   CMP.b #$29,D0                                            ;")"
00020202 <AmiBlitz3.ab2@3057>    BNE.w JL_0_3CC8
00020204 <AmiBlitz3.ab2@3058>   SUBQ.w #1,D2
00020208 <AmiBlitz3.ab2@3059> BRA.w JL_0_3CC8
0002020A <AmiBlitz3.ab2@3062> RTS
0002020C <AmiBlitz3.ab2@3066>       SUBQ.l #1,a4
00020212 <AmiBlitz3.ab2@3067>       CLR.l sourceline3
00020214 <AmiBlitz3.ab2@3068> RTS
00020216 <AmiBlitz3.ab2@3072>       MOVEQ #0,d0
00020218 <AmiBlitz3.ab2@3073>       SUBQ.l #1,a4
0002021E <AmiBlitz3.ab2@3074>       CLR.l sourceline3
00020220 <AmiBlitz3.ab2@3075> RTS
00020224 <AmiBlitz3.ab2@3079>   CMP.b #$7B,D0                                            ;"{"
00020228 <AmiBlitz3.ab2@3080>   BEQ.w JL_0_3D3E
0002022C <AmiBlitz3.ab2@3081>   CMP.b #$28,D0                                            ;"("
0002022E <AmiBlitz3.ab2@3084> RTS
00020232 <AmiBlitz3.ab2@3088>   CMP.b #$7D,D0                                            ;"}"
00020236 <AmiBlitz3.ab2@3089>   BEQ.w JL_0_3D4C
0002023A <AmiBlitz3.ab2@3090>   CMP.b #$29,D0                                            ;")"
0002023C <AmiBlitz3.ab2@3093> RTS
0002023E <AmiBlitz3.ab2@3097> stopit:     Ds.w 1
00020240 <AmiBlitz3.ab2@3098> clrreq:     Ds.w 1
00020244 <AmiBlitz3.ab2@3119>   MOVE.w clrreq(PC),D0
00020248 <AmiBlitz3.ab2@3120>    BEQ.w close_compilewin__skip
0002027A <AmiBlitz3.ab2@3122> 
00020280 <AmiBlitz3.ab2@3124>   LEA clrreq,a0
00020282 <AmiBlitz3.ab2@3125>   NOT.w (a0)                                               ;reass
00020288 <AmiBlitz3.ab2@3126>   MOVEA.l ptr_ThisTask,A0
0002028C <AmiBlitz3.ab2@3127>   CLR.l $1E(A0)
00020290 <AmiBlitz3.ab2@3128>   CLR.l $2A(A0)
00020292 <AmiBlitz3.ab2@3131> RTS
00020294 <AmiBlitz3.ab2@3134> intsused:  Ds.w 1
0002029C <AmiBlitz3.ab2@3138>   MOVE.w #-1,blitzoff
000202A2 <AmiBlitz3.ab2@3139>   CLR.w intsused
000202A8 <AmiBlitz3.ab2@3140>   CLR.w anyerrs
000202AE <AmiBlitz3.ab2@3141>   CLR.w blitzmode
000202B4 <AmiBlitz3.ab2@3142>   CLR.w dontwrite                                              ;nomemleft
000202BA <AmiBlitz3.ab2@3143>   CLR.w constmode
000202C0 <AmiBlitz3.ab2@3144>   CLR.w cmake
000202C6 <AmiBlitz3.ab2@3145>   CLR.w cfetchmode
000202CC <AmiBlitz3.ab2@3146>   CLR.l intdata1
000202D2 <AmiBlitz3.ab2@3147>   CLR.w fuckpos
000202D8 <AmiBlitz3.ab2@3148>   CLR.w procnum
000202DE <AmiBlitz3.ab2@3149>   CLR.w procnum2
000202E4 <AmiBlitz3.ab2@3150>   CLR.w dfetch
000202EA <AmiBlitz3.ab2@3151>   CLR.l titleat
000202F0 <AmiBlitz3.ab2@3152>   CLR.b usedpath
000202F6 <AmiBlitz3.ab2@3153>   CLR.b path2
000202FC <AmiBlitz3.ab2@3154>   CLR.w inerr
00020302 <AmiBlitz3.ab2@3155>   CLR.w intlevel
00020308 <AmiBlitz3.ab2@3156>   CLR.l cont_pc
0002030E <AmiBlitz3.ab2@3157>   CLR.l cont_pc2
00020314 <AmiBlitz3.ab2@3158>   CLR.l lastcontlink
0002031E <AmiBlitz3.ab2@3159>   MOVE.l destbufferstart,destpointer
00020328 <AmiBlitz3.ab2@3160>   MOVE.l destbufferstart,bigpc
00020332 <AmiBlitz3.ab2@3161>   MOVE.l destbufferend,libend
0002033C <AmiBlitz3.ab2@3162>   MOVE.l data1start,data1
00020346 <AmiBlitz3.ab2@3163>   MOVE.l data2at,data2
0002034E <AmiBlitz3.ab2@3164>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00020356 <AmiBlitz3.ab2@3165>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
0002035C <AmiBlitz3.ab2@3166>   CLR.w oldvcodelen
00020362 <AmiBlitz3.ab2@3167>   CLR.b lastgloballabel                                    ;lastbiglab org source
00020364 <AmiBlitz3.ab2@3168> RTS
00020366 <AmiBlitz3.ab2@3171> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
0002036C <AmiBlitz3.ab2@3175>   LEA  clrreq,a1
00020370 <AmiBlitz3.ab2@3176>   MOVE.w #2000,(a1)
0002039A <AmiBlitz3.ab2@3177>   !basic
000203B0 <AmiBlitz3.ab2@3178> 
00020400 <AmiBlitz3.ab2@3179>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00020408 <AmiBlitz3.ab2@3180>   calcpro.l      = 0
00020410 <AmiBlitz3.ab2@3181>   calcpro_old.l  = 0
0002041C <AmiBlitz3.ab2@3182>   typ_old.l      = -1
00020428 <AmiBlitz3.ab2@3183>   pass_old.l     = -1
0002042E <AmiBlitz3.ab2@3184>   update_comstatus_gui.b = True ; for the first
00020468 <AmiBlitz3.ab2@3186>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
000204A2 <AmiBlitz3.ab2@3187>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
000204C0 <AmiBlitz3.ab2@3188>   !asm
000204F2 <AmiBlitz3.ab2@3189> 
000204F8 <AmiBlitz3.ab2@3191>   CLR.w stopit
000204FA <AmiBlitz3.ab2@3192> RTS
00020500 <AmiBlitz3.ab2@3196>   CLR.w storedebugmode
00020506 <AmiBlitz3.ab2@3197>   CLR.b iserror
0002050A <AmiBlitz3.ab2@3198>   BSR.w compilerequester
00020514 <AmiBlitz3.ab2@3200>   MOVE.l #0,globallinecount
0002051A <AmiBlitz3.ab2@3201>   JSR check_of_same_source
0002051E <AmiBlitz3.ab2@3202>   BSR.w call_setpointerbusy
00020522 <AmiBlitz3.ab2@3203>   BSR.w setcvars
0002052A <AmiBlitz3.ab2@3204>   MOVE.w #$8000,globalvarpointer
00020534 <AmiBlitz3.ab2@3205>   MOVE.l #newtype_quick,defaulttype
0002053A <AmiBlitz3.ab2@3206>   MOVE.l A7,passstack
00020544 <AmiBlitz3.ab2@3207>   MOVE.l #firstitem_,sourceline
0002054E <AmiBlitz3.ab2@3208>   MOVE.w numlines_org,linesleft
00020558 <AmiBlitz3.ab2@3209>   MOVE.l numlines,numlines2
0002055E <AmiBlitz3.ab2@3210>   ADDQ.w #1,linesleft
00020564 <AmiBlitz3.ab2@3211>   ADDQ.l #1,numlines2
0002056E <AmiBlitz3.ab2@3212>   MOVE.l #-1,linenumat
00020572 <AmiBlitz3.ab2@3213>   BSR.w resetlibs
00020576 <AmiBlitz3.ab2@3214>   BSR.w Aclearallvars
0002057C <AmiBlitz3.ab2@3215>   LEA progress_per_line+2,A0
0002057E <AmiBlitz3.ab2@3216>   MOVEQ.l #$03,D0
00020580 <AmiBlitz3.ab2@3219>     CLR.w (A0)+
00020584 <AmiBlitz3.ab2@3220>   DBF D0,JL_0_40EC
0002058A <AmiBlitz3.ab2@3223>   LEA _include,a0
0002058E <AmiBlitz3.ab2@3224>   MOVEM.l a0-a6/d0-d7,-(a7)
00020594 <AmiBlitz3.ab2@3225>   LEA ptr_parameterstore,a1
00020596 <AmiBlitz3.ab2@3228>     MOVE.b (a0)+,(a1)+
0002059A <AmiBlitz3.ab2@3229>   BNE 'l1b
0002059C <AmiBlitz3.ab2@3231>   MOVEQ #9,d2
000205A2 <AmiBlitz3.ab2@3232>   JSR findlabel2
000205A6 <AmiBlitz3.ab2@3233>   BNE 'd
000205AE <AmiBlitz3.ab2@3234>   MOVE.l #0,8(a2)
000205B2 <AmiBlitz3.ab2@3235>   MOVEM.l (a7)+,a0-a6/d0-d7
000205B6 <AmiBlitz3.ab2@3236> BRA 'd2
000205BC <AmiBlitz3.ab2@3239>   JSR addlabelhash
000205C4 <AmiBlitz3.ab2@3240>   MOVE.l #$1,$4(A2)
000205CC <AmiBlitz3.ab2@3241>   MOVE.l #0,8(a2)
000205D0 <AmiBlitz3.ab2@3242>   MOVEM.l (a7)+,a0-a6/d0-d7
000205D6 <AmiBlitz3.ab2@3245>   LEA _debug,a0
000205DA <AmiBlitz3.ab2@3246>   MOVEM.l a0-a6/d0-d7,-(a7)
000205E0 <AmiBlitz3.ab2@3247>   LEA ptr_parameterstore,a1
000205E2 <AmiBlitz3.ab2@3250>     MOVE.b (a0)+,(a1)+
000205E6 <AmiBlitz3.ab2@3251>   BNE 'l9b
000205E8 <AmiBlitz3.ab2@3253>   MOVEQ #7,d2
000205EE <AmiBlitz3.ab2@3254>   JSR findlabel2
000205F2 <AmiBlitz3.ab2@3255>   BNE 'd9
000205F6 <AmiBlitz3.ab2@3256>   MOVE.b debugmode(PC),D0
000205F8 <AmiBlitz3.ab2@3257>   EXT.w d0
000205FA <AmiBlitz3.ab2@3258>   EXT.l d0
000205FE <AmiBlitz3.ab2@3259>   MOVE.l d0,8(a2)
00020602 <AmiBlitz3.ab2@3260>   MOVEM.l (a7)+,a0-a6/d0-d7
00020606 <AmiBlitz3.ab2@3261> BRA 'd9b
0002060C <AmiBlitz3.ab2@3264>   JSR addlabelhash
00020614 <AmiBlitz3.ab2@3265>   MOVE.l #$1,$4(A2)
00020618 <AmiBlitz3.ab2@3266>   MOVE.b debugmode(PC),D0
0002061A <AmiBlitz3.ab2@3267>   EXT.w d0
0002061C <AmiBlitz3.ab2@3268>   EXT.l d0
00020620 <AmiBlitz3.ab2@3269>   MOVE.l d0,8(a2)
00020624 <AmiBlitz3.ab2@3270>   MOVEM.l (a7)+,a0-a6/d0-d7
0002062A <AmiBlitz3.ab2@3273>   MOVE.l #firstitem_,a0
0002062C <AmiBlitz3.ab2@3274>   MOVE.l (a0),a0
00020630 <AmiBlitz3.ab2@3275>   LEA 9(a0),a0
00020638 <AmiBlitz3.ab2@3276>   MOVE.w #0,exdebug
0002063E <AmiBlitz3.ab2@3277>   TST.b debugmode
00020642 <AmiBlitz3.ab2@3278>    BEQ 'l10
00020644 <AmiBlitz3.ab2@3281>   MOVE.b (a0)+,d0
00020648 <AmiBlitz3.ab2@3282>    BEQ 'l10
0002064C <AmiBlitz3.ab2@3283>   CMP.b #$20,d0
00020650 <AmiBlitz3.ab2@3284>    BEQ 'l2
00020652 <AmiBlitz3.ab2@3285>   SUBQ.l #1,a0
00020658 <AmiBlitz3.ab2@3286>   CMP.l #"DEBU",(a0)
0002065C <AmiBlitz3.ab2@3287>    BNE 'l10
00020662 <AmiBlitz3.ab2@3288>   CMP.b #"G",4(a0)
00020666 <AmiBlitz3.ab2@3289>    BNE 'l10
0002066E <AmiBlitz3.ab2@3290>   MOVE.w #$0,debugversion
00020676 <AmiBlitz3.ab2@3291>   MOVE.b #1,exdebug
0002067C <AmiBlitz3.ab2@3294>   LEA nops4,A0
00020682 <AmiBlitz3.ab2@3295>   LEA dataget,A1
00020688 <AmiBlitz3.ab2@3296>   JSR pokecode2                                            ;write intro nops
0002068E <AmiBlitz3.ab2@3297>   MOVE.l #$01010101,d1
00020694 <AmiBlitz3.ab2@3298>   JSR writedatalong                                        ;for the 4 tempregs
0002069A <AmiBlitz3.ab2@3299>   JSR writedatalong
000206A0 <AmiBlitz3.ab2@3300>   JSR writedatalong
000206A6 <AmiBlitz3.ab2@3301>   JSR writedatalong
000206AC <AmiBlitz3.ab2@3302>   TST.b saved0
000206B0 <AmiBlitz3.ab2@3303>    BEQ 'l1
000206B6 <AmiBlitz3.ab2@3304>   MOVE.l #$4e714e71,d1
000206BC <AmiBlitz3.ab2@3305>   JSR writelong                                            ;add 2 nops
000206C2 <AmiBlitz3.ab2@3306>   MOVE.l #$4e714e71,d1
000206C8 <AmiBlitz3.ab2@3307>   JSR writelong                                            ;add 2 nops
000206CE <AmiBlitz3.ab2@3308>   MOVE.l #$4e714e71,d1
000206D4 <AmiBlitz3.ab2@3309>   JSR writelong                                            ;add 2 nops
000206DA <AmiBlitz3.ab2@3310>    MOVE.l #$4e714e71,d1
000206E0 <AmiBlitz3.ab2@3311>   JSR writelong                                            ;add 2 nops
000206E4 <AmiBlitz3.ab2@3314>   MOVE.b debugmode(PC),D1
000206E8 <AmiBlitz3.ab2@3315>    BEQ.b JL_0_4132
000206F2 <AmiBlitz3.ab2@3316>   MOVE.b debugmode,storedebugmode
000206F6 <AmiBlitz3.ab2@3317>   MOVE.w #$FFDC,D1
000206FA <AmiBlitz3.ab2@3318>    BSR.w uselib
00020700 <AmiBlitz3.ab2@3319>   TST.w debugversion                                       ;make a version for debugger
00020704 <AmiBlitz3.ab2@3320>    BNE.b JL_0_412A
00020708 <AmiBlitz3.ab2@3324>   MOVE.w #$FA3C,D1
0002070C <AmiBlitz3.ab2@3325>    BSR.w uselib
00020710 <AmiBlitz3.ab2@3326>   MOVE.w #$0001,D1
00020714 <AmiBlitz3.ab2@3327>    BSR.w uselib
00020718 <AmiBlitz3.ab2@3328> BRA.b JL_0_4132
0002071C <AmiBlitz3.ab2@3331>   MOVE.w #$FA32,D1
00020720 <AmiBlitz3.ab2@3332>   BSR.w uselib
00020724 <AmiBlitz3.ab2@3335>   BSR.w nextline
0002072A <AmiBlitz3.ab2@3336>   CLR.l linenum
00020730 <AmiBlitz3.ab2@3337>   CLR.l stacktrack
00020736 <AmiBlitz3.ab2@3340>   ADDQ.l #1,linenum
00020740 <AmiBlitz3.ab2@3341>   MOVE.l destpointer,destpointer2
00020746 <AmiBlitz3.ab2@3342>   MOVE.l a5,sourceline2
0002074A <AmiBlitz3.ab2@3343>   BSR.w compile_line                                        ;compile pass
0002074E <AmiBlitz3.ab2@3346>   BSR.w nextline
00020752 <AmiBlitz3.ab2@3347>    BNE.w JL_0_4136
00020756 <AmiBlitz3.ab2@3348>   BSR.w JUMP_do_runerrson
0002075A <AmiBlitz3.ab2@3349>   BSR.w pointchk
00020760 <AmiBlitz3.ab2@3350>   TST.b objectcount
00020764 <AmiBlitz3.ab2@3351>    BNE macenderr
0002076A <AmiBlitz3.ab2@3352>   CLR.l linenumat
0002076E <AmiBlitz3.ab2@3353>   BSR.w errchx2
00020778 <AmiBlitz3.ab2@3354>   CMP.l #-1,bssend
0002077C <AmiBlitz3.ab2@3355>    BNE 'l30
00020786 <AmiBlitz3.ab2@3356>   MOVE.l destpointer,bssend                                ;compile end
0002078C <AmiBlitz3.ab2@3359>   MOVE.l destpointer,d0
00020796 <AmiBlitz3.ab2@3360>   CMP.l #-1,bssstart
0002079A <AmiBlitz3.ab2@3361>   BNE 'lnf6
000207A4 <AmiBlitz3.ab2@3362>   CMP.l #-1,chipstart
000207A8 <AmiBlitz3.ab2@3363>   BNE 'lnf6
000207AC <AmiBlitz3.ab2@3364> BRA 'leven4
000207B2 <AmiBlitz3.ab2@3367>   MOVE.l destpointer,d1
000207B4 <AmiBlitz3.ab2@3368>   ADDQ.l #3,d1
000207BA <AmiBlitz3.ab2@3369>   AND.l #$fffffffc,d1                                      ;bug ?
000207C0 <AmiBlitz3.ab2@3370>   MOVE.l d1,destpointer
000207CA <AmiBlitz3.ab2@3373>   MOVE.l destpointer,codeend
000207D4 <AmiBlitz3.ab2@3374>   CMP.l #-1,chipend
000207D8 <AmiBlitz3.ab2@3375>   BNE 'l31
000207E2 <AmiBlitz3.ab2@3376>   MOVE.l destpointer,chipend
000207E8 <AmiBlitz3.ab2@3379>   MOVE.l destpointer,d1
000207EA <AmiBlitz3.ab2@3380>   ADDQ.l #1,d1
000207F0 <AmiBlitz3.ab2@3381>   AND.l #$fffffffe,d1                                     ;new evenexit
000207F6 <AmiBlitz3.ab2@3382>   MOVE.l d1,destpointer
000207FA <AmiBlitz3.ab2@3383>   MOVE.b debugmode(PC),D1
000207FE <AmiBlitz3.ab2@3384>    BEQ.b JL_0_4180
00020802 <AmiBlitz3.ab2@3385>    BSR.w debugstuff
00020806 <AmiBlitz3.ab2@3386>   MOVE.w #$C300,D1
0002080C <AmiBlitz3.ab2@3387>    JSR Atokejsr
00020810 <AmiBlitz3.ab2@3388>    BSR.w debugstuff
00020814 <AmiBlitz3.ab2@3389>   MOVE.l eopcode(PC),D1
0002081A <AmiBlitz3.ab2@3390>    JSR writelong
0002081E <AmiBlitz3.ab2@3391>   MOVE.l lastcontlink(PC),D1
00020822 <AmiBlitz3.ab2@3392>    BEQ.b JL_0_4180
00020824 <AmiBlitz3.ab2@3393>   MOVEA.l D1,A0
00020828 <AmiBlitz3.ab2@3394>   CLR.w $6(A0)
00020832 <AmiBlitz3.ab2@3400>   MOVE.l destpointer,endop                                ;where end goes...
00020838 <AmiBlitz3.ab2@3402>   TST.w blitzmode
0002083C <AmiBlitz3.ab2@3403>   BEQ.w JL_0_4198
00020840 <AmiBlitz3.ab2@3404>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00020846 <AmiBlitz3.ab2@3407>   TST.w intsused
0002084A <AmiBlitz3.ab2@3408>   BEQ.b JL_0_41AA
0002084E <AmiBlitz3.ab2@3409>   MOVE.w #$C105,D1                                        ;interupts off!
00020854 <AmiBlitz3.ab2@3410>   JSR tokejsr2
00020858 <AmiBlitz3.ab2@3413>   BSR.w calcstatic
0002085E <AmiBlitz3.ab2@3414>   MOVE.w D4,numstatic
00020864 <AmiBlitz3.ab2@3415>   MOVE.l D3,staticdata
00020868 <AmiBlitz3.ab2@3416>    BSR.w calcmaxs
0002086E <AmiBlitz3.ab2@3418>   TST.l tokeslist
00020872 <AmiBlitz3.ab2@3419>    BEQ.b JL_0_41F8
00020878 <AmiBlitz3.ab2@3420>   MOVE.w gotocode,D1                                       ;jmp!
0002087E <AmiBlitz3.ab2@3421>    JSR writeword
00020888 <AmiBlitz3.ab2@3422>   MOVE.l destpointer,endjmpat
0002088C <AmiBlitz3.ab2@3423>    BSR.w addoff
00020892 <AmiBlitz3.ab2@3424>    JSR writelong                                           
00020896 <AmiBlitz3.ab2@3426>    BSR.w JL_0_6C76                                         ;has to be done before finits!
0002089C <AmiBlitz3.ab2@3430>   TST.w dontwrite
000208A0 <AmiBlitz3.ab2@3431>    BNE.b JL_0_41F8
000208A4 <AmiBlitz3.ab2@3432>   MOVEA.l endjmpat(PC),A4
000208AA <AmiBlitz3.ab2@3433>   MOVE.l destpointer,(A4)
000208B0 <AmiBlitz3.ab2@3436>   TST.b returncode
000208B4 <AmiBlitz3.ab2@3437>   BEQ 'l2
000208B8 <AmiBlitz3.ab2@3438>   MOVE.w #$2e80,d1
000208BE <AmiBlitz3.ab2@3439>   JSR writeword
000208C4 <AmiBlitz3.ab2@3442>   JSR JL_0_B98A
000208CA <AmiBlitz3.ab2@3443>   TST.b returncode
000208CE <AmiBlitz3.ab2@3444>   BEQ 'l3
000208D2 <AmiBlitz3.ab2@3445>   MOVE.w #$4e75,d1
000208D8 <AmiBlitz3.ab2@3446>   JSR writeword
000208DC <AmiBlitz3.ab2@3447> BRA 'l1
000208E2 <AmiBlitz3.ab2@3450>   MOVE.l #$70004E75,D1
000208E8 <AmiBlitz3.ab2@3451>   JSR writelong                                            ;write moveq #0,d0:rts
000208EE <AmiBlitz3.ab2@3454>   JSR JL_0_B73E
000208F2 <AmiBlitz3.ab2@3455>   BSR.w asmfixer
000208F6 <AmiBlitz3.ab2@3456>   BSR.w close_compilewin
000208FA <AmiBlitz3.ab2@3457> BRA.w call_setpointernormal
00020900 <AmiBlitz3.ab2@3461> JMP do_runerrson
00020902 <AmiBlitz3.ab2@3465> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00020904 <AmiBlitz3.ab2@3466>             Dc.b $4E,$40                                   ;TRAP  #00
00020908 <AmiBlitz3.ab2@3468> endjmpat:   Ds.l 1
0002090E <AmiBlitz3.ab2@3472>   MOVEA.l newtype_string,A2
00020914 <AmiBlitz3.ab2@3473>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00020918 <AmiBlitz3.ab2@3476>     CMPA.w #$0,A2
0002091C <AmiBlitz3.ab2@3477>      BEQ.w pointchk_done
00020920 <AmiBlitz3.ab2@3478>     CMP.l $4(A2),D0
00020924 <AmiBlitz3.ab2@3479>      BNE.w pointchk_next
0002092C <AmiBlitz3.ab2@3480>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00020930 <AmiBlitz3.ab2@3481> BRA.w notypeerr
00020932 <AmiBlitz3.ab2@3484>     MOVEA.l (A2),A2
00020936 <AmiBlitz3.ab2@3485> BRA.w pointchk_loop
00020938 <AmiBlitz3.ab2@3488> RTS
0002093E <AmiBlitz3.ab2@3492>   LEA labelbase,A2
00020940 <AmiBlitz3.ab2@3496>   MOVE.l (A2),D0                                           ;testlabels
00020944 <AmiBlitz3.ab2@3497>    BEQ.w errchx2_done
00020946 <AmiBlitz3.ab2@3498>   MOVEA.l D0,A2
0002094A <AmiBlitz3.ab2@3499>   MOVE.l $4(A2),D0
0002094E <AmiBlitz3.ab2@3500>   BTST #$0,D0
00020952 <AmiBlitz3.ab2@3501>    BNE.w errchx2_loop
00020956 <AmiBlitz3.ab2@3502>   MOVE.l $8(A2),D0
0002095A <AmiBlitz3.ab2@3503>    BNE.w errchx2_loop
00020962 <AmiBlitz3.ab2@3504>   MOVE.w $10(A2),linenumat+2
00020964 <AmiBlitz3.ab2@3505>   MOVEQ #0,d0
00020968 <AmiBlitz3.ab2@3506>   MOVE.b $12(a2),d0
00020970 <AmiBlitz3.ab2@3507>   MOVE.w 0(a2,d0),linenumat
00020976 <AmiBlitz3.ab2@3508> JMP nolaberr                                               ;label not found
0002097C <AmiBlitz3.ab2@3511>   MOVE.l concomsp,D0
00020982 <AmiBlitz3.ab2@3512>   CMP.l #concomstack,D0
00020986 <AmiBlitz3.ab2@3513>    BNE.w chxerr4
0002098C <AmiBlitz3.ab2@3514>   MOVE.w connest,D1
00020990 <AmiBlitz3.ab2@3515>    BNE.w chxerr4
00020992 <AmiBlitz3.ab2@3518>   MOVE.l D1,-(A7)
00020998 <AmiBlitz3.ab2@3519>   MOVE.l firstsel,D1
0002099C <AmiBlitz3.ab2@3520>    BNE.w errchx_err1
000209A2 <AmiBlitz3.ab2@3521>   MOVE.l firstrep,D1
000209A6 <AmiBlitz3.ab2@3522>    BNE.w errchx_err2
000209AC <AmiBlitz3.ab2@3523>   MOVE.w intstring,D1
000209B0 <AmiBlitz3.ab2@3524>    BNE.w errchx_err3
000209B4 <AmiBlitz3.ab2@3525>   MOVE.l 4(a7),d1
000209BA <AmiBlitz3.ab2@3526>   MOVE.w proceduremode,D1
000209BE <AmiBlitz3.ab2@3527>    BNE.w errchx_err6
000209C4 <AmiBlitz3.ab2@3528>   MOVE.l firstiff,d1
000209C8 <AmiBlitz3.ab2@3529>    BNE errchx_err5
000209CE <AmiBlitz3.ab2@3530>   MOVE.l firstfor,D1
000209D2 <AmiBlitz3.ab2@3531>    BNE.w errchx_err7
000209D4 <AmiBlitz3.ab2@3532>   MOVE.l (A7)+,D1
000209D6 <AmiBlitz3.ab2@3533> RTS
000209E0 <AmiBlitz3.ab2@3537>   MOVE.l sellineat,linenumat
000209E6 <AmiBlitz3.ab2@3538> JMP selerrz
000209F0 <AmiBlitz3.ab2@3541>   MOVE.l replineat,linenumat
000209F6 <AmiBlitz3.ab2@3542> JMP unterr3
00020A00 <AmiBlitz3.ab2@3545>   MOVE.l intlineat,linenumat
00020A06 <AmiBlitz3.ab2@3546> JMP interr2
00020A10 <AmiBlitz3.ab2@3549>   MOVE.l iflineat,linenumat
00020A16 <AmiBlitz3.ab2@3550> JMP noenderr
00020A20 <AmiBlitz3.ab2@3553>   MOVE.l prolineat,linenumat
00020A26 <AmiBlitz3.ab2@3554> JMP nopenderr
00020A30 <AmiBlitz3.ab2@3557>   MOVE.l forlineat,linenumat
00020A36 <AmiBlitz3.ab2@3558> JMP nonexterr
00020A40 <AmiBlitz3.ab2@3561>   MOVE.l ciflineat,linenumat
00020A46 <AmiBlitz3.ab2@3562> JMP nocenderr
00020A50 <AmiBlitz3.ab2@3566>   MOVE.l data1,maxsat
00020A52 <AmiBlitz3.ab2@3567>   MOVEQ.l #$00,D4
00020A58 <AmiBlitz3.ab2@3568>   MOVEA.l libpointer,A2
00020A5C <AmiBlitz3.ab2@3571>     CMPA.w #$0,A2
00020A60 <AmiBlitz3.ab2@3572>      BEQ.w calcmaxs_done
00020A64 <AmiBlitz3.ab2@3573>     TST.w $C(A2)
00020A68 <AmiBlitz3.ab2@3574>      BPL.w calcmaxs_next
00020A6C <AmiBlitz3.ab2@3575>     MOVE.l $12(A2),D0
00020A70 <AmiBlitz3.ab2@3576>     TST.w -$2(A2,D0.L)
00020A74 <AmiBlitz3.ab2@3577>      BEQ.w calcmaxs_next
00020A76 <AmiBlitz3.ab2@3578>     ADDQ.w #1,D4
00020A7A <AmiBlitz3.ab2@3579>     MOVE.w -$6(A2,D0.L),D1
00020A7E <AmiBlitz3.ab2@3580>     BSR.w pokedata1
00020A80 <AmiBlitz3.ab2@3581>     MOVEQ.l #$01,D1
00020A84 <AmiBlitz3.ab2@3582>     MOVE.w -$2(A2,D0.L),D2
00020A86 <AmiBlitz3.ab2@3583>     LSL.w D2,D1
00020A8A <AmiBlitz3.ab2@3584>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00020A8E <AmiBlitz3.ab2@3585>     BSR.w writedatalong
00020A90 <AmiBlitz3.ab2@3588>     MOVEA.l (A2),A2
00020A94 <AmiBlitz3.ab2@3589> BRA.w calcmaxs_loop
00020A9A <AmiBlitz3.ab2@3592>   MOVE.w D4,maxsused
00020A9E <AmiBlitz3.ab2@3593>    BEQ.w calcmaxs_done2
00020AA2 <AmiBlitz3.ab2@3594>   MOVE.w #$FFFA,D1                                         ;;use memlib
00020AA6 <AmiBlitz3.ab2@3595> BRA.w uselib
00020AA8 <AmiBlitz3.ab2@3598> RTS
00020AAE <AmiBlitz3.ab2@3602>    MOVE.l a7,stackaddr
00020AB2 <AmiBlitz3.ab2@3603>    BSR.w compile_term
00020AB6 <AmiBlitz3.ab2@3604>    BSR.w reget
00020ABA <AmiBlitz3.ab2@3605>    BNE.w illeolerr
00020AC0 <AmiBlitz3.ab2@3606>    TST.w dontwrite
00020AC4 <AmiBlitz3.ab2@3607>    BNE 'l1
00020ACA <AmiBlitz3.ab2@3608>    TST.l stacktrack
00020ACE <AmiBlitz3.ab2@3609>    BNE errormsg_stack
00020AD2 <AmiBlitz3.ab2@3612>    CMP.w #-$7FDE,D0
00020AD6 <AmiBlitz3.ab2@3613>    BNE.w compile_line_notelse
00020ADC <AmiBlitz3.ab2@3614>    JSR do_else2
00020AE0 <AmiBlitz3.ab2@3615> BRA.w compile_line
00020AE2 <AmiBlitz3.ab2@3618>   TST.w D0
00020AE6 <AmiBlitz3.ab2@3619>   BNE.w compile_line
00020AEC <AmiBlitz3.ab2@3624>   MOVE.l firstiff,D0
00020AF0 <AmiBlitz3.ab2@3625>    BEQ.w compile_line_done
00020AF2 <AmiBlitz3.ab2@3626>   MOVEA.l D0,A0
00020AF6 <AmiBlitz3.ab2@3627>   MOVE.w $C(A0),D1
00020AFA <AmiBlitz3.ab2@3628>    BPL.w compile_line_done
00020AFE <AmiBlitz3.ab2@3632>   BCLR #$F,D1
00020B04 <AmiBlitz3.ab2@3633>    JSR AJL_0_D7B8
00020B0A <AmiBlitz3.ab2@3634>    JSR AJL_0_D81C
00020B0E <AmiBlitz3.ab2@3635> BRA.w compile_line_unthen
00020B10 <AmiBlitz3.ab2@3638> RTS
00020B16 <AmiBlitz3.ab2@3642>   LEA lastgloballabel,A0
00020B18 <AmiBlitz3.ab2@3643>   TST.b (A0)
00020B1C <AmiBlitz3.ab2@3644>    BEQ.w nolocerr
00020B22 <AmiBlitz3.ab2@3645>   LEA ptr_parameterstore,A1
00020B24 <AmiBlitz3.ab2@3646>   MOVEQ.l #$00,D2
00020B26 <AmiBlitz3.ab2@3649>   ADDQ.w #1,D2
00020B28 <AmiBlitz3.ab2@3650>   MOVE.b (A0)+,(A1)+
00020B2C <AmiBlitz3.ab2@3651>    BNE.w createlab_loop
00020B32 <AmiBlitz3.ab2@3652>   MOVE.b #$27,-$1(A1)
00020B34 <AmiBlitz3.ab2@3653>   MOVE.w D2,-(A7)
00020B3A <AmiBlitz3.ab2@3654>    JSR makename4
00020B3C <AmiBlitz3.ab2@3655>   CMP.w (A7)+,D2
00020B40 <AmiBlitz3.ab2@3656>    BEQ.w syntaxerr
00020B42 <AmiBlitz3.ab2@3657>    TST.w d0
00020B46 <AmiBlitz3.ab2@3658>    BPL createlab_done
00020B4E <AmiBlitz3.ab2@3659>    MOVE.w #$3a,lastchar
00020B50 <AmiBlitz3.ab2@3660>    SUBQ.l #2,a5
00020B52 <AmiBlitz3.ab2@3663> RTS
00020B5C <AmiBlitz3.ab2@3667>   MOVE.l #forthstack,forthsp
00020B66 <AmiBlitz3.ab2@3668>   MOVE.l #precstack,precsp
00020B68 <AmiBlitz3.ab2@3669> RTS
00020B6A <AmiBlitz3.ab2@3676>   MOVEQ.l #$00,D4
00020B94 <AmiBlitz3.ab2@3679>   !basic
00020BD6 <AmiBlitz3.ab2@3680> 
00020BE6 <AmiBlitz3.ab2@3682>   If (c_abort = 1)           ; check if set
00020BE8 <AmiBlitz3.ab2@3683>     MOVEQ.l #-$01,d4
00020BEE <AmiBlitz3.ab2@3684>     MOVE.w D4,stopit
00020C0C <AmiBlitz3.ab2@3685>     !asm
00020C10 <AmiBlitz3.ab2@3686>     BRA chkrealstop__skip
00020C2E <AmiBlitz3.ab2@3688>   !asm
00020C30 <AmiBlitz3.ab2@3689>   MOVEQ.l #$00,D6
00020C32 <AmiBlitz3.ab2@3690>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00020C34 <AmiBlitz3.ab2@3694> RTS
00020C38 <AmiBlitz3.ab2@3698>   MOVE.w stopit(PC),D0
00020C3C <AmiBlitz3.ab2@3699>   BEQ chkstop__chk
00020C42 <AmiBlitz3.ab2@3700>   SUBQ.w #1,stopit
00020C44 <AmiBlitz3.ab2@3704> RTS
00020C4C <AmiBlitz3.ab2@3707>   MOVE.w #2000,stopit
00020C50 <AmiBlitz3.ab2@3708>   BSR.w chkrealstop
00020C54 <AmiBlitz3.ab2@3709>   BEQ.b chkstop__rts
00020C58 <AmiBlitz3.ab2@3711>   BSR.w close_compilewin
00020C5C <AmiBlitz3.ab2@3712>   BSR.w call_setpointernormal
00020C62 <AmiBlitz3.ab2@3714>   MOVEA.l errstack,A7
00020C68 <AmiBlitz3.ab2@3715>   MOVEA.l errcont,A0
00020C70 <AmiBlitz3.ab2@3716>   MOVE.w #-1,anyerrs
00020C72 <AmiBlitz3.ab2@3717> JMP (A0)
00020C76 <AmiBlitz3.ab2@3720> d_pc:           Ds.l 1
00020C7A <AmiBlitz3.ab2@3721> d_bigpc:        Ds.l 1
00020C7C <AmiBlitz3.ab2@3722> d_nomemleft:    Ds.w 1
00020C80 <AmiBlitz3.ab2@3723> cont_pc:        Ds.l 1
00020C84 <AmiBlitz3.ab2@3724> cont_pc2:       Ds.l 1
00020C88 <AmiBlitz3.ab2@3725> lastcontlink:   Ds.l 1
00020C8C <AmiBlitz3.ab2@3729>   ORI.w #$4E40,D1
00020C90 <AmiBlitz3.ab2@3730> BRA.w JUMP_writeword
00020C96 <AmiBlitz3.ab2@3734>   TST.b debugmode
00020C9A <AmiBlitz3.ab2@3735>   BEQ.w debugstuff__rts
00020CA0 <AmiBlitz3.ab2@3742>   TST.w dirmode                                            ;or while in direct mode...
00020CA4 <AmiBlitz3.ab2@3743>    BNE debugstuff__rts
00020CAE <AmiBlitz3.ab2@3744>   MOVE.l destpointer,d_pc
00020CB8 <AmiBlitz3.ab2@3745>   MOVE.l bigpc,d_bigpc
00020CC2 <AmiBlitz3.ab2@3746>   MOVE.w dontwrite,d_nomemleft
00020CC6 <AmiBlitz3.ab2@3747>   MOVEM.l D0-D1,-(A7)
00020CC8 <AmiBlitz3.ab2@3748>   MOVEQ.l #$01,D1
00020CCC <AmiBlitz3.ab2@3749>    BSR.w writetrap                                         ;write the adress to sourceline
00020CD2 <AmiBlitz3.ab2@3753>    MOVE.l destpointer,D0
00020CD8 <AmiBlitz3.ab2@3754>   MOVE.l cont_pc,D1
00020CDE <AmiBlitz3.ab2@3755>   MOVE.l D0,cont_pc
00020CE4 <AmiBlitz3.ab2@3756>   MOVE.l D1,cont_pc2
00020CE8 <AmiBlitz3.ab2@3757>    BEQ.b debugstuff__skip
00020CEE <AmiBlitz3.ab2@3758>   TST.w dontwrite
00020CF2 <AmiBlitz3.ab2@3759>    BNE.b debugstuff__skip
00020CF4 <AmiBlitz3.ab2@3760>   MOVEA.l D1,A4
00020CF6 <AmiBlitz3.ab2@3761>   SUB.l A4,D0
00020CFA <AmiBlitz3.ab2@3762>   MOVE.w D0,$6(A4)
00020D00 <AmiBlitz3.ab2@3763>   MOVE.l A4,lastcontlink
00020D06 <AmiBlitz3.ab2@3766>   TST.w ininclude
00020D0C <AmiBlitz3.ab2@3768>   TST.w makeexec
00020D10 <AmiBlitz3.ab2@3769>   BEQ 'l1
00020D16 <AmiBlitz3.ab2@3770>   TST.w exdebug
00020D1A <AmiBlitz3.ab2@3771>   BEQ 'noinc
00020D1E <AmiBlitz3.ab2@3774>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00020D24 <AmiBlitz3.ab2@3775>   MOVE.l data1,d1
00020D2A <AmiBlitz3.ab2@3776>   TST.b firsttime
00020D2E <AmiBlitz3.ab2@3777>   BNE 'nofirst
00020D36 <AmiBlitz3.ab2@3778>   MOVE.b #1,firsttime
00020D3C <AmiBlitz3.ab2@3779>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00020D42 <AmiBlitz3.ab2@3780>   JSR writedatalong
00020D48 <AmiBlitz3.ab2@3781>   MOVE.l #"AmiB",d1
00020D4E <AmiBlitz3.ab2@3782>   JSR writedatalong
00020D54 <AmiBlitz3.ab2@3783>   MOVE.l destbufferstart,d1
00020D5A <AmiBlitz3.ab2@3784>   JSR writedatalong
00020D60 <AmiBlitz3.ab2@3785>   TST.w dontwrite
00020D64 <AmiBlitz3.ab2@3786>   BNE 'nohunk
00020D6A <AmiBlitz3.ab2@3787>   MOVE.l data1,d1
00020D6C <AmiBlitz3.ab2@3788>   SUBQ.l #4,d1
00020D72 <AmiBlitz3.ab2@3789>   SUB.l destbufferstart,d1
00020D74 <AmiBlitz3.ab2@3790>   MOVE.l d1,d2
00020D7A <AmiBlitz3.ab2@3791>   JSR addhunkoffset
00020D80 <AmiBlitz3.ab2@3794>   MOVE.l destpointer,d2
00020D86 <AmiBlitz3.ab2@3795>   MOVE.l data1,d1
00020D8C <AmiBlitz3.ab2@3798>   MOVE.l destpointer,d2
00020D8E <AmiBlitz3.ab2@3799>   MOVE.l d1,d3
00020D94 <AmiBlitz3.ab2@3800>   SUB.l destbufferstart,d1
00020D9A <AmiBlitz3.ab2@3801>   OR.l #$80000000,d1
00020DA0 <AmiBlitz3.ab2@3802>   JSR writelong
00020DA6 <AmiBlitz3.ab2@3803>   TST.w inmacro
00020DAA <AmiBlitz3.ab2@3804>   BEQ 'sc1
00020DB0 <AmiBlitz3.ab2@3805>   MOVE.l myline,a0
00020DB4 <AmiBlitz3.ab2@3807> BRA 'inc2
00020DBA <AmiBlitz3.ab2@3809>  'sc1  TST.w ininclude
00020DBE <AmiBlitz3.ab2@3810>   BEQ 'inc
00020DC4 <AmiBlitz3.ab2@3811>   MOVE.l includesourceline,a0
00020DC8 <AmiBlitz3.ab2@3812> BRA 'inc2
00020DCE <AmiBlitz3.ab2@3815>   MOVE.l sourceline,a0
00020DD2 <AmiBlitz3.ab2@3816>   LEA 9(a0),a0
00020DD4 <AmiBlitz3.ab2@3819>   MOVE.l d1,d2
00020DD6 <AmiBlitz3.ab2@3820>   MOVE.l A5,D1
00020DD8 <AmiBlitz3.ab2@3821>   SUB.l a0,D1
00020DDE <AmiBlitz3.ab2@3822>   ADD.l #9,d1
00020DE2 <AmiBlitz3.ab2@3823>   BSR.w JUMP_writeword
00020DE8 <AmiBlitz3.ab2@3824>   CMP.l #9,d1
00020DEC <AmiBlitz3.ab2@3825>   BEQ 'pos1
00020DF2 <AmiBlitz3.ab2@3826>   TST.w dontwrite
00020DF6 <AmiBlitz3.ab2@3827>   BNE 'nopad
00020DFC <AmiBlitz3.ab2@3828>   MOVE.l lastsourceline,d1
00020E00 <AmiBlitz3.ab2@3829>   MOVE.l d1,-6(a4)
00020E04 <AmiBlitz3.ab2@3830> BRA 'nopad
00020E0A <AmiBlitz3.ab2@3833>   MOVE.l d2,lastsourceline
00020E14 <AmiBlitz3.ab2@3834>    MOVE.l destpointer,lastdestpointer
00020E16 <AmiBlitz3.ab2@3835>    MOVEQ #0,d1
00020E1C <AmiBlitz3.ab2@3836>   MOVE.l data1,d2
00020E22 <AmiBlitz3.ab2@3837>   SUB.l destbufferstart,d2
00020E28 <AmiBlitz3.ab2@3838>   JSR writedatalong
00020E2E <AmiBlitz3.ab2@3839>   TST.w dontwrite
00020E32 <AmiBlitz3.ab2@3840>   BNE 'no2
00020E38 <AmiBlitz3.ab2@3841>   JSR addhunkoffset
00020E3E <AmiBlitz3.ab2@3844>   MOVE.l data1,d2
00020E44 <AmiBlitz3.ab2@3845>   SUB.l destbufferstart,d2
00020E4A <AmiBlitz3.ab2@3846>   JSR writedatalong
00020E50 <AmiBlitz3.ab2@3847>   TST.w dontwrite
00020E54 <AmiBlitz3.ab2@3848>   BNE 'no
00020E5A <AmiBlitz3.ab2@3849>   JSR addhunkoffset
00020E60 <AmiBlitz3.ab2@3850>   MOVE.l lastwritedat,a1
00020E66 <AmiBlitz3.ab2@3851>   CMP.l #0,a1
00020E6A <AmiBlitz3.ab2@3852>   BEQ 'no
00020E6C <AmiBlitz3.ab2@3853>   MOVE.l d3,(a1)
00020E74 <AmiBlitz3.ab2@3854>   MOVE.l prevwritedat,4(a1)
00020E7E <AmiBlitz3.ab2@3855>   MOVE.l lastwritedat,prevwritedat
00020E84 <AmiBlitz3.ab2@3858>   MOVE.l d3,lastwritedat
00020E86 <AmiBlitz3.ab2@3859>   MOVEQ #4,d1
00020E8A <AmiBlitz3.ab2@3860>   BSR pokedata1b
00020E8C <AmiBlitz3.ab2@3863>   MOVE.b (a0)+,d1
00020E90 <AmiBlitz3.ab2@3864>   BEQ 'done
00020E94 <AmiBlitz3.ab2@3865>   BSR pokedata1b
00020E98 <AmiBlitz3.ab2@3866> BRA 'loop
00020E9A <AmiBlitz3.ab2@3869>   MOVEQ #0,d1
00020E9E <AmiBlitz3.ab2@3870>   BSR pokedata1b
00020EA4 <AmiBlitz3.ab2@3871>   MOVE.l data1,d1
00020EA8 <AmiBlitz3.ab2@3872>   BTST #0,d1
00020EAC <AmiBlitz3.ab2@3873>   BEQ 'nopad
00020EAE <AmiBlitz3.ab2@3874>   MOVEQ #0,d1
00020EB2 <AmiBlitz3.ab2@3875>   BSR pokedata1b
00020EB6 <AmiBlitz3.ab2@3878>   MOVEM.l (a7)+,a0-a1/d2/d3
00020EBA <AmiBlitz3.ab2@3879> BRA 'noinc2
00020EC0 <AmiBlitz3.ab2@3882>   MOVE.l sourceline,D1
00020EC6 <AmiBlitz3.ab2@3884>   JSR writelong
00020EC8 <AmiBlitz3.ab2@3885>   MOVE.l A5,D1
00020ECE <AmiBlitz3.ab2@3886>   SUB.l sourceline,D1
00020ED4 <AmiBlitz3.ab2@3888>   JSR writeword
00020ED6 <AmiBlitz3.ab2@3891>   MOVEQ.l #$00,D1
00020EDC <AmiBlitz3.ab2@3892>   JSR writeword                                            ; was: BSR.w writeword
00020EE0 <AmiBlitz3.ab2@3893>   MOVEM.l (A7)+,D0-D1
00020EE2 <AmiBlitz3.ab2@3896> RTS
00020EE8 <AmiBlitz3.ab2@3900>   TST.b debugmode                                          ;extern debug
00020EEC <AmiBlitz3.ab2@3901>    BEQ.b undodebug__rts
00020EF2 <AmiBlitz3.ab2@3902>   TST.b dirmode
00020EF6 <AmiBlitz3.ab2@3903>   BNE undodebug__rts
00020F00 <AmiBlitz3.ab2@3908>   MOVE.w d_nomemleft,dontwrite
00020F0A <AmiBlitz3.ab2@3909>   MOVE.l d_bigpc,bigpc
00020F14 <AmiBlitz3.ab2@3910>   MOVE.l d_pc,destpointer
00020F1E <AmiBlitz3.ab2@3911>   MOVE.l cont_pc2,cont_pc
00020F20 <AmiBlitz3.ab2@3914> RTS
00020F2A <AmiBlitz3.ab2@3918>   MOVE.l #forthstack,forthsp
00020F34 <AmiBlitz3.ab2@3919>   MOVE.l #precstack,precsp
00020F3A <AmiBlitz3.ab2@3920>   CLR.w regnum
00020F40 <AmiBlitz3.ab2@3921>   CLR.w nonew
00020F46 <AmiBlitz3.ab2@3922>   CLR.w sbasegot
00020F50 <AmiBlitz3.ab2@3923>   MOVE.w varcodelen,oldvcodelen
00020F56 <AmiBlitz3.ab2@3924>   CLR.w varcodelen
00020F5E <AmiBlitz3.ab2@3925>   MOVE.w #-1,lasta6
00020F60 <AmiBlitz3.ab2@3926> RTS
00020F66 <AmiBlitz3.ab2@3930>   TST.w linemode
00020F6A <AmiBlitz3.ab2@3931>   BMI.b smode__skip
00020F6E <AmiBlitz3.ab2@3932>   BSR.w undodebug
00020F74 <AmiBlitz3.ab2@3933>   MOVE.w linemode,D1
00020F76 <AmiBlitz3.ab2@3934>   ADDQ.w #4,A7
00020F78 <AmiBlitz3.ab2@3935>   LSL.w #2,D1
00020F7E <AmiBlitz3.ab2@3936>   LEA modetable,A0
00020F82 <AmiBlitz3.ab2@3937>   MOVEA.l $0(A0,D1.W),A0
00020F86 <AmiBlitz3.ab2@3938>   BSR.w reget
00020F88 <AmiBlitz3.ab2@3941> JMP (A0)                                                   ;jumptokenroutine
00020F8A <AmiBlitz3.ab2@3944> RTS
00020F92 <AmiBlitz3.ab2@3949>   MOVE.w #0,leaa0a0+2
00020F98 <AmiBlitz3.ab2@3950>   CLR.b nowdeclare
00020F9E <AmiBlitz3.ab2@3951>   CLR.b notypecheck
00020FA4 <AmiBlitz3.ab2@3952>   CLR.l lasttoken
00020FAA <AmiBlitz3.ab2@3953>   CLR.b doimmediate
00020FB0 <AmiBlitz3.ab2@3954>   CLR.w vartype
00020FB6 <AmiBlitz3.ab2@3955>   CLR.w regnumfunc
00020FBC <AmiBlitz3.ab2@3956>   CLR.b optistring
00020FC2 <AmiBlitz3.ab2@3957>   CLR.b iniffcommand
00020FC8 <AmiBlitz3.ab2@3958>   CLR.w instringon  ; new
00020FCE <AmiBlitz3.ab2@3959>   CLR.b funccall
00020FD4 <AmiBlitz3.ab2@3960>   CLR.l currentfunccall
00020FDA <AmiBlitz3.ab2@3961>   CLR.l leftsidetype
00020FE0 <AmiBlitz3.ab2@3962>   CLR.l rightsidetype
00020FE6 <AmiBlitz3.ab2@3963>   CLR.b peekaddrsize
00020FEC <AmiBlitz3.ab2@3964>   CLR.b blitzparloop
00020FF2 <AmiBlitz3.ab2@3965>   CLR.b funcparloop
00020FF8 <AmiBlitz3.ab2@3966>   TST.b debugmode
00020FFC <AmiBlitz3.ab2@3967>    BEQ 'fpu
00021006 <AmiBlitz3.ab2@3973>   MOVE.b fpu,iee
0002100A <AmiBlitz3.ab2@3974>   MOVE.w stopit(PC),D0
0002100E <AmiBlitz3.ab2@3975>   BNE chkstop_chkb
00021012 <AmiBlitz3.ab2@3976>   BSR.w chkstop                                          ; message here
00021018 <AmiBlitz3.ab2@3979>   SUBQ.w #1,stopit
0002101C <AmiBlitz3.ab2@3982>   BSR.w findmacro                                          ;macro
00021022 <AmiBlitz3.ab2@4036>   TST.b debugmode
00021026 <AmiBlitz3.ab2@4037>    BEQ.s 'l10
0002102C <AmiBlitz3.ab2@4038>   TST.b exdebug
00021030 <AmiBlitz3.ab2@4039>   BEQ 'l10a
00021032 <AmiBlitz3.ab2@4040>   MOVE.w (a5),d0
00021036 <AmiBlitz3.ab2@4041>   CMP.w #$8025,d0
0002103A <AmiBlitz3.ab2@4042>    BEQ 'l10
0002103E <AmiBlitz3.ab2@4045>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00021042 <AmiBlitz3.ab2@4049>   BSR.w get1bytemain                                       ;gettokenmain
00021046 <AmiBlitz3.ab2@4050>    BEQ.w undodebug
0002104A <AmiBlitz3.ab2@4051>   CMP.w #$002b,d0                                            ;check for + cast sign
0002104E <AmiBlitz3.ab2@4052>     BNE 'lb2
00021052 <AmiBlitz3.ab2@4053>     BSR.w get1bytemain
0002105A <AmiBlitz3.ab2@4054>     MOVE.b #1,notypecheck
00021064 <AmiBlitz3.ab2@4062>   MOVE.l #forthstack,forthsp
0002106E <AmiBlitz3.ab2@4063>   MOVE.l #precstack,precsp
00021074 <AmiBlitz3.ab2@4064>   CLR.w regnum
0002107A <AmiBlitz3.ab2@4065>   CLR.w nonew
00021080 <AmiBlitz3.ab2@4066>   CLR.w sbasegot
0002108A <AmiBlitz3.ab2@4067>   MOVE.w varcodelen,oldvcodelen
00021090 <AmiBlitz3.ab2@4069>   CLR.w varcodelen
00021098 <AmiBlitz3.ab2@4070>   MOVE.w #$FFFF,lasta6
0002109C <AmiBlitz3.ab2@4072>   BSR.w smode
0002109E <AmiBlitz3.ab2@4073>   TST.w D0
000210A2 <AmiBlitz3.ab2@4074>   BMI.w get_tokencode
000210A6 <AmiBlitz3.ab2@4075>   CMP.w #$2E,D0
000210AA <AmiBlitz3.ab2@4076>    BEQ.w JL_0_4644                                         ;shortlist
000210AE <AmiBlitz3.ab2@4077>   CMP.w #"#",D0
000210B2 <AmiBlitz3.ab2@4078>    BEQ.w JL_0_4718                                         ;constant found
000210B6 <AmiBlitz3.ab2@4079>   CMP.w #$27,D0
000210BA <AmiBlitz3.ab2@4080>    BEQ.w JL_0_4638                                         ;local label
000210C0 <AmiBlitz3.ab2@4081>   MOVE.l A5,letstart
000210C6 <AmiBlitz3.ab2@4082>   JSR getparameter
000210CA <AmiBlitz3.ab2@4083>   BSR.w reget
000210CE <AmiBlitz3.ab2@4084>    BEQ.w JL_0_4658                                         ;label found
000210D2 <AmiBlitz3.ab2@4085>   CMP.w #$7B,D0
000210D6 <AmiBlitz3.ab2@4086>    BEQ.w JL_0_475C
000210D8 <AmiBlitz3.ab2@4087>   TST.w d0
000210DC <AmiBlitz3.ab2@4088>    BPL 'll1
000210E2 <AmiBlitz3.ab2@4089>   TST.b newsyntax
000210E6 <AmiBlitz3.ab2@4090>    BEQ 'll1
000210EC <AmiBlitz3.ab2@4091>   LEA allowtab,a0
000210EE <AmiBlitz3.ab2@4092>   MOVEQ #0,d1
000210F0 <AmiBlitz3.ab2@4093>   MOVE.b d0,d1
000210F4 <AmiBlitz3.ab2@4094>   TST.b 0(a0,d1.w)
000210F8 <AmiBlitz3.ab2@4095>    BNE 'll1
000210FA <AmiBlitz3.ab2@4096>   SUBQ.l #2,a5
00021102 <AmiBlitz3.ab2@4097>   MOVE.w #":",lastchar                                     ;no doublepoint
00021106 <AmiBlitz3.ab2@4098> BRA JL_0_4658
0002110E <AmiBlitz3.ab2@4101>   CMP.l #"equ ",-1(a5)
00021112 <AmiBlitz3.ab2@4102>    BEQ 'll4
0002111A <AmiBlitz3.ab2@4103>   CMP.l #"EQU ",-1(a5)
0002111E <AmiBlitz3.ab2@4104>    BNE 'll2
00021120 <AmiBlitz3.ab2@4107>   ADDQ.l #2,a5
00021124 <AmiBlitz3.ab2@4108>   BSR.w findlabel2
00021128 <AmiBlitz3.ab2@4109>   BEQ.w 'lf1
0002112C <AmiBlitz3.ab2@4110>   BSR.w addlabelhash
00021134 <AmiBlitz3.ab2@4111>   MOVE.l #$1,$4(A2)
0002113C <AmiBlitz3.ab2@4114>   CMPI.l #$1,$4(A2)
00021140 <AmiBlitz3.ab2@4115>    BNE.w illconerr
00021144 <AmiBlitz3.ab2@4116>   BSR get1bytemain
00021146 <AmiBlitz3.ab2@4117>   MOVE.l A2,-(A7)
00021148 <AmiBlitz3.ab2@4128>   SUBQ.l #1,a5
0002114A <AmiBlitz3.ab2@4131>   SUBQ.l #1,a5
00021150 <AmiBlitz3.ab2@4132>   JSR AJL_0_BF6E
00021152 <AmiBlitz3.ab2@4133>   MOVEA.l (A7)+,A2
00021156 <AmiBlitz3.ab2@4134>   MOVE.l D3,$8(A2)
00021158 <AmiBlitz3.ab2@4135>   RTS
0002115C <AmiBlitz3.ab2@4136>   BSR get1bytemain
00021164 <AmiBlitz3.ab2@4139>   CMP.l #"SET ",-1(a5)
00021168 <AmiBlitz3.ab2@4140>   BNE 'll3
0002116C <AmiBlitz3.ab2@4141> BRA 'll4
00021172 <AmiBlitz3.ab2@4144> JMP AJL_0_DEA6
00021176 <AmiBlitz3.ab2@4147>   CMP.w #-$7FDE,D0
0002117A <AmiBlitz3.ab2@4148>   BEQ.w get_tokencode
0002117E <AmiBlitz3.ab2@4149> BRA.w undodebug
00021182 <AmiBlitz3.ab2@4152>   BSR.w undodebug
00021186 <AmiBlitz3.ab2@4153>   BSR.w createlab
0002118A <AmiBlitz3.ab2@4154> BRA.w JL_0_466E
0002118E <AmiBlitz3.ab2@4157>   BSR.w get1bytemain
00021192 <AmiBlitz3.ab2@4158>    BEQ.w JL_0_462C
00021196 <AmiBlitz3.ab2@4159>   CMP.w #"'",D0
0002119A <AmiBlitz3.ab2@4160>    BEQ.w JL_0_4638
0002119E <AmiBlitz3.ab2@4161>    BSR.w makename2
000211A0 <AmiBlitz3.ab2@4162>    TST.w d0
000211A4 <AmiBlitz3.ab2@4163>    BPL 'll1
000211A6 <AmiBlitz3.ab2@4164>    SUBQ.l #2,a5
000211AE <AmiBlitz3.ab2@4165>    MOVE.w #":",lastchar
000211B2 <AmiBlitz3.ab2@4166> BRA JL_0_4658                                              ;????
000211B6 <AmiBlitz3.ab2@4170>   BSR.w undodebug
000211BC <AmiBlitz3.ab2@4171>   LEA ptr_parameterstore,A0
000211C2 <AmiBlitz3.ab2@4172>   LEA lastgloballabel,A1
000211C4 <AmiBlitz3.ab2@4175>   MOVE.b (A0)+,(A1)+
000211C8 <AmiBlitz3.ab2@4176>    BNE.w JL_0_4668
000211CC <AmiBlitz3.ab2@4179>   BSR.w findlabel2
000211D0 <AmiBlitz3.ab2@4180>    BEQ.w JL_0_4698
000211D4 <AmiBlitz3.ab2@4181>    BSR.w addlabelhash
000211D8 <AmiBlitz3.ab2@4184>   CLR.l $4(A2)
000211E0 <AmiBlitz3.ab2@4185>   MOVE.l destpointer,$8(A2)
000211E8 <AmiBlitz3.ab2@4188>   MOVE.w procnum,$10(A2)
000211EA <AmiBlitz3.ab2@4189> RTS
000211EE <AmiBlitz3.ab2@4193>   MOVE.l $4(A2),D0
000211F2 <AmiBlitz3.ab2@4194>   BTST #$0,D0
000211F6 <AmiBlitz3.ab2@4195>    BNE.w illlaberr
000211FC <AmiBlitz3.ab2@4196>   TST.w pass
00021200 <AmiBlitz3.ab2@4198>   MOVE.l $8(A2),D0
00021204 <AmiBlitz3.ab2@4199>    BNE.w duplaberr
0002120C <AmiBlitz3.ab2@4200>   MOVE.w procnum,$10(A2)
00021210 <AmiBlitz3.ab2@4201>   MOVEA.l $4(A2),A3
00021216 <AmiBlitz3.ab2@4202>   MOVEA.l _execbase,A6
0002121A <AmiBlitz3.ab2@4205>   CMPA.w #$0,A3
0002121E <AmiBlitz3.ab2@4206>    BEQ.w JL_0_467A
00021222 <AmiBlitz3.ab2@4207>     MOVE.l $4(A2),D1
00021226 <AmiBlitz3.ab2@4208>     BTST #$0,D1
0002122A <AmiBlitz3.ab2@4209>     BNE.w illlaberr
0002122E <AmiBlitz3.ab2@4210>   MOVE.w $8(A3),D1
00021232 <AmiBlitz3.ab2@4211>   CMP.w $10(A2),D1
00021236 <AmiBlitz3.ab2@4212>    BEQ.w JL_0_46DC
0002123C <AmiBlitz3.ab2@4213>    TST.b newsyntax
00021240 <AmiBlitz3.ab2@4214>    BEQ 'l1
00021244 <AmiBlitz3.ab2@4215> BRA.w JL_0_46DC                                            ;label context out of range fix
0002124C <AmiBlitz3.ab2@4220>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00021250 <AmiBlitz3.ab2@4221> BRA.w referr
00021256 <AmiBlitz3.ab2@4224>   MOVE.w dontwrite,D1
0002125A <AmiBlitz3.ab2@4225>    BNE.w JL_0_4706
0002125E <AmiBlitz3.ab2@4226>   MOVEA.l $4(A3),A1
00021264 <AmiBlitz3.ab2@4227>   BTST #$0,$7(A3)
00021268 <AmiBlitz3.ab2@4228>    BEQ.w JL_0_4700
0002126A <AmiBlitz3.ab2@4229>   SUBQ.w #1,A1
00021270 <AmiBlitz3.ab2@4230>   MOVE.l data2,(A1)
00021274 <AmiBlitz3.ab2@4231> BRA.w JL_0_4706
0002127A <AmiBlitz3.ab2@4234>   MOVE.l destpointer,(A1)
0002127C <AmiBlitz3.ab2@4237>   MOVEA.l A3,A1
0002127E <AmiBlitz3.ab2@4238>   MOVEA.l (A3),A3
00021282 <AmiBlitz3.ab2@4239>   MOVE.l A3,$4(A2)
00021284 <AmiBlitz3.ab2@4240>   MOVEQ.l #$0C+2,D0
0002128A <AmiBlitz3.ab2@4241>   MOVE.l mempool,a0
00021290 <AmiBlitz3.ab2@4242>   MOVEA.l _execbase,A6
00021294 <AmiBlitz3.ab2@4243>   JSR _FreePooled(A6)
00021298 <AmiBlitz3.ab2@4244> BRA.w JL_0_46BC
000212A2 <AmiBlitz3.ab2@4249>    MOVE.l #forthstack,forthsp
000212AC <AmiBlitz3.ab2@4250>   MOVE.l #precstack,precsp
000212B0 <AmiBlitz3.ab2@4251>    BSR.w getparameter2
000212B4 <AmiBlitz3.ab2@4254>   BSR.w findlabel2
000212B8 <AmiBlitz3.ab2@4255>    BEQ.w JL_0_4738
000212BC <AmiBlitz3.ab2@4256>    BSR.w addlabelhash
000212C4 <AmiBlitz3.ab2@4257>   MOVE.l #$1,$4(A2)
000212C8 <AmiBlitz3.ab2@4258> BRA.w JL_0_4744
000212D0 <AmiBlitz3.ab2@4261>   CMPI.l #$1,$4(A2)
000212D4 <AmiBlitz3.ab2@4262>    BNE.w illconerr
000212D8 <AmiBlitz3.ab2@4271>   CMP.w #$3D,D0
000212DC <AmiBlitz3.ab2@4272>   BEQ.w JL_0_474E
000212DE <AmiBlitz3.ab2@4273> RTS
000212E0 <AmiBlitz3.ab2@4277>   MOVE.l A2,-(A7)
000212E6 <AmiBlitz3.ab2@4278>   JSR AJL_0_BF6E
000212E8 <AmiBlitz3.ab2@4279>   MOVEA.l (A7)+,A2
000212EC <AmiBlitz3.ab2@4280>   MOVE.l D3,$8(A2)                                         ;store constant
000212F4 <AmiBlitz3.ab2@4281>   CMP.w #$0a,lastchar
000212F8 <AmiBlitz3.ab2@4282>   BNE 'l1
00021300 <AmiBlitz3.ab2@4283>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00021302 <AmiBlitz3.ab2@4286> RTS
00021306 <AmiBlitz3.ab2@4289>   BSR.w findproc                                           ;write statement call
0002130A <AmiBlitz3.ab2@4290>   BEQ _state
00021310 <AmiBlitz3.ab2@4291>   TST.l unusedfunc
00021314 <AmiBlitz3.ab2@4292>   BEQ noprocerr
0002131A <AmiBlitz3.ab2@4294>   JSR gotoendsource
0002131E <AmiBlitz3.ab2@4297>   TST.b $5(A2)
00021324 <AmiBlitz3.ab2@4299>   MOVE.l a2,currentfunccall
0002132C <AmiBlitz3.ab2@4300>   MOVE.b #1,funccall
00021332 <AmiBlitz3.ab2@4301>   MOVE.b #1,isfunc(a2)
00021336 <AmiBlitz3.ab2@4302>   MOVE.l $E(A2),-(A7)
00021338 <AmiBlitz3.ab2@4303>   MOVEQ.l #$00,D0
0002133C <AmiBlitz3.ab2@4304>   MOVE.b $4(A2),D0
00021342 <AmiBlitz3.ab2@4305>   MOVE.l d0,parnumtemp
00021346 <AmiBlitz3.ab2@4306>   BEQ.w JL_0_4786
0002134A <AmiBlitz3.ab2@4307>   TST.b $20(a2)                                            ;increase if morepar
0002134E <AmiBlitz3.ab2@4308>   BNE 'no0par
00021350 <AmiBlitz3.ab2@4309>   MOVE.l a5,a4
00021354 <AmiBlitz3.ab2@4312>   CMP.b #$20,(a4)+
00021358 <AmiBlitz3.ab2@4313>   BEQ 'l1
0002135E <AmiBlitz3.ab2@4314>   CMP.b #"}",-1(a4)
00021362 <AmiBlitz3.ab2@4315>   BNE  'no0par                                             ;statementcall pars
00021364 <AmiBlitz3.ab2@4316>   MOVEQ #0,d0
00021368 <AmiBlitz3.ab2@4319>   LEA $16(A2),A1
0002136A <AmiBlitz3.ab2@4322>   MOVE.l d1,-(a7)
0002136C <AmiBlitz3.ab2@4323>   MOVE.b (a1),d2
0002136E <AmiBlitz3.ab2@4324>   MOVE.l d0,d1
00021372 <AmiBlitz3.ab2@4325>   CMP.w #4,d2
00021376 <AmiBlitz3.ab2@4326>   BNE 'l1b
0002137C <AmiBlitz3.ab2@4327>   ADD.l #$203c,d1
00021382 <AmiBlitz3.ab2@4329>   JSR writeword
00021388 <AmiBlitz3.ab2@4330>   MOVE.l #$ffff0000,d1
0002138E <AmiBlitz3.ab2@4332>   JSR writelong
00021392 <AmiBlitz3.ab2@4333> BRA 'l2b
00021398 <AmiBlitz3.ab2@4336>   TST.b fpu
0002139C <AmiBlitz3.ab2@4337>   BNE 'l1c
000213A0 <AmiBlitz3.ab2@4338>   CMP.w #5,d2
000213A4 <AmiBlitz3.ab2@4339>   BNE 'l1c
000213AA <AmiBlitz3.ab2@4340>   ADD.l #$203c,d1
000213B0 <AmiBlitz3.ab2@4342>   JSR writeword
000213B6 <AmiBlitz3.ab2@4343>   MOVE.l #$800000c1,d1
000213BC <AmiBlitz3.ab2@4345>   JSR writelong
000213C0 <AmiBlitz3.ab2@4346> BRA 'l2b
000213C6 <AmiBlitz3.ab2@4349>   ADD.l #$70ff,d1
000213CC <AmiBlitz3.ab2@4351>   JSR writeword
000213D2 <AmiBlitz3.ab2@4352>   MOVE.l #$f23c5000,d1
000213D4 <AmiBlitz3.ab2@4353>   MOVE.l d0,d2
000213D6 <AmiBlitz3.ab2@4354>   ASR.l #2,d2
000213D8 <AmiBlitz3.ab2@4355>   ADD.l d2,d1
000213DE <AmiBlitz3.ab2@4357>   JSR writelong
000213E2 <AmiBlitz3.ab2@4358>   MOVE.w #$ffff,d1
000213E8 <AmiBlitz3.ab2@4360>   JSR writeword
000213EA <AmiBlitz3.ab2@4363>   MOVE.l (a7)+,d1
000213EC <AmiBlitz3.ab2@4364>   ADDQ.l #1,a1
000213F2 <AmiBlitz3.ab2@4365>   ADD.l #$0200,d0
000213F8 <AmiBlitz3.ab2@4366>   CMP.l #$0e00,d0
000213FC <AmiBlitz3.ab2@4367>    BEQ syntaxerr
000213FE <AmiBlitz3.ab2@4368>   TST.b (a1)
00021402 <AmiBlitz3.ab2@4369>    BNE 'again
00021406 <AmiBlitz3.ab2@4370> BRA JL_0_4786
00021410 <AmiBlitz3.ab2@4373>   MOVE.w a2offset,a2offset2
00021414 <AmiBlitz3.ab2@4374>   LEA $16(A2),A2
0002141A <AmiBlitz3.ab2@4375>   MOVE.b funcparloop,-(a7)
00021422 <AmiBlitz3.ab2@4376>   MOVE.b #1,funcparloop
00021428 <AmiBlitz3.ab2@4377>   MOVE.b blitzparloop,-(a7)
0002142E <AmiBlitz3.ab2@4378>   CLR.b blitzparloop
00021432 <AmiBlitz3.ab2@4379>   BSR.w fetchpees2
00021438 <AmiBlitz3.ab2@4380>   MOVE.b (a7)+,blitzparloop
0002143E <AmiBlitz3.ab2@4381>   MOVE.b (a7)+,funcparloop
00021442 <AmiBlitz3.ab2@4382> BRA.w JL_0_478A
00021446 <AmiBlitz3.ab2@4385>   BSR.w get1bytemain
0002144A <AmiBlitz3.ab2@4388>   CMP.w #$7D,D0
0002144E <AmiBlitz3.ab2@4389>    BNE.w morepar_                                          ;syntax error morepar
00021454 <AmiBlitz3.ab2@4390>    JSR chkstak
00021456 <AmiBlitz3.ab2@4391>   MOVE.l (A7)+,D1
0002145C <AmiBlitz3.ab2@4407>    JSR JL_0_AFCA
00021462 <AmiBlitz3.ab2@4429>   CLR.b funccall
00021466 <AmiBlitz3.ab2@4430> BRA.w get1bytemain
0002146C <AmiBlitz3.ab2@4434>   MOVE.l d0,lasttoken
00021470 <AmiBlitz3.ab2@4435>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00021474 <AmiBlitz3.ab2@4436>   BNE 'l2
00021478 <AmiBlitz3.ab2@4437>    MOVE.w #$dd05,d0
0002147C <AmiBlitz3.ab2@4440>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00021480 <AmiBlitz3.ab2@4441>   BNE 'l3
00021484 <AmiBlitz3.ab2@4442>    MOVE.w #$dd06,d0
00021488 <AmiBlitz3.ab2@4445>   CMP.w #-$7FC4,D0
0002148C <AmiBlitz3.ab2@4446>   BCS.w JL_0_47C4
00021490 <AmiBlitz3.ab2@4447>     CMP.w #-$7F4D,D0
00021494 <AmiBlitz3.ab2@4448>     BCC.w JL_0_47C4
0002149C <AmiBlitz3.ab2@4449>       BTST #$7,assemblercheck                              ;inline Assembler checking
000214A0 <AmiBlitz3.ab2@4450>       BNE.b JL_0_47C0
000214A6 <AmiBlitz3.ab2@4451>         TST.b debugmode
000214AA <AmiBlitz3.ab2@4452>         BEQ.b 'l10
000214B4 <AmiBlitz3.ab2@4457>           MOVE.w d_nomemleft,dontwrite
000214BE <AmiBlitz3.ab2@4458>           MOVE.l d_bigpc,bigpc
000214C8 <AmiBlitz3.ab2@4459>           MOVE.l d_pc,destpointer
000214D2 <AmiBlitz3.ab2@4460>           MOVE.l cont_pc2,cont_pc
000214D6 <AmiBlitz3.ab2@4466> BRA.w JL_0_612C
000214DA <AmiBlitz3.ab2@4469>   BCLR #$F,D0
000214DC <AmiBlitz3.ab2@4470>   MOVE.w D0,D1
000214E0 <AmiBlitz3.ab2@4471>   ANDI.w #$7F00,D1
000214E4 <AmiBlitz3.ab2@4472>   BNE.w JL_0_4856
000214E8 <AmiBlitz3.ab2@4473>     CMP.w #$B3,D0                                          ;intern Instructions
000214EC <AmiBlitz3.ab2@4474>     BCS.w JL_0_47F2
000214F0 <AmiBlitz3.ab2@4475>       SUBI.w #$77,D0
000214F4 <AmiBlitz3.ab2@4476>       CMP.w #$4B,D0
000214F8 <AmiBlitz3.ab2@4477>       BEQ.w JL_0_4830
000214FC <AmiBlitz3.ab2@4478>         CMP.w #$46,D0
00021500 <AmiBlitz3.ab2@4479>         BEQ.w JL_0_4830
00021504 <AmiBlitz3.ab2@4480> BRA.w JL_0_4834                                            ; change tokennum
00021508 <AmiBlitz3.ab2@4483>     CMP.w #$38,D0
0002150C <AmiBlitz3.ab2@4484>      BEQ.w JL_0_4830
00021510 <AmiBlitz3.ab2@4485>     CMP.w #$39,D0
00021514 <AmiBlitz3.ab2@4486>      BEQ.w JL_0_4830
00021518 <AmiBlitz3.ab2@4487>     CMP.w #$D,D0
0002151C <AmiBlitz3.ab2@4488>      BEQ.w JL_0_4830
00021520 <AmiBlitz3.ab2@4489>     CMP.w #$12,D0
00021524 <AmiBlitz3.ab2@4490>      BEQ.w JL_0_4830
00021528 <AmiBlitz3.ab2@4491>     CMP.w #$13,D0
0002152C <AmiBlitz3.ab2@4492>      BEQ.w JL_0_4830
00021530 <AmiBlitz3.ab2@4493>     CMP.w #$1A,D0
00021534 <AmiBlitz3.ab2@4494>      BEQ.w JL_0_4830
00021538 <AmiBlitz3.ab2@4495>     CMP.w #$2A,D0
0002153C <AmiBlitz3.ab2@4496>      BHI.w JL_0_4834
00021540 <AmiBlitz3.ab2@4497>     CMP.w #$23,D0
00021544 <AmiBlitz3.ab2@4498>      BCS.b JL_0_4834
00021548 <AmiBlitz3.ab2@4501>   BSR.w undodebug
0002154A <AmiBlitz3.ab2@4504>   SUBQ.w #1,D0
0002154C <AmiBlitz3.ab2@4505>   LSL.w #2,D0
00021552 <AmiBlitz3.ab2@4512>   LEA instructionbase,A0
00021556 <AmiBlitz3.ab2@4513>   MOVEA.l $0(A0,D0.W),A0
00021558 <AmiBlitz3.ab2@4514>   MOVE.l A0,-(A7)
0002155C <AmiBlitz3.ab2@4515> BRA.w get1bytemain
0002155E <AmiBlitz3.ab2@4521>   MOVE.w D0,D1
00021562 <AmiBlitz3.ab2@4522>    BSR.w searchinstr
00021568 <AmiBlitz3.ab2@4523>    TST.b newmode
0002156C <AmiBlitz3.ab2@4524>    BNE compile_term
00021572 <AmiBlitz3.ab2@4525>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00021576 <AmiBlitz3.ab2@4526>    BNE.w stamigalib
0002157C <AmiBlitz3.ab2@4527>   BTST #$0,$1(A3)
00021580 <AmiBlitz3.ab2@4528>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00021584 <AmiBlitz3.ab2@4529>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00021588 <AmiBlitz3.ab2@4530>    BSR.w JL_0_66F6
0002158E <AmiBlitz3.ab2@4536>   MOVE.w numreps,-(A7)
00021594 <AmiBlitz3.ab2@4537>   MOVE.w userp,-(A7)
0002159A <AmiBlitz3.ab2@4538>   MOVE.w a2offset,-(A7)
0002159C <AmiBlitz3.ab2@4539>   MOVE.l A2,-(A7)                                          ;recurs.
000215A6 <AmiBlitz3.ab2@4540>   MOVE.w convsize,userp
000215AA <AmiBlitz3.ab2@4541>   LEA $6(A3),A1
000215AC <AmiBlitz3.ab2@4545>    MOVE.w (A1),D2
000215B0 <AmiBlitz3.ab2@4546>    BMI.w SERR                                              ;statement syntax error
000215B4 <AmiBlitz3.ab2@4547>   ANDI.w #$FF,D2
000215B6 <AmiBlitz3.ab2@4548>   CMP.w D2,D1
000215BA <AmiBlitz3.ab2@4549>    BEQ.w JL_0_48E0
000215BE <AmiBlitz3.ab2@4550>    BCS.w JL_0_48CC
000215C0 <AmiBlitz3.ab2@4551>   MOVE.b (A1),D3
000215C4 <AmiBlitz3.ab2@4552>   ANDI.w #$7,D3
000215C8 <AmiBlitz3.ab2@4553>    BEQ.w JL_0_48CC
000215CA <AmiBlitz3.ab2@4554>   MOVE.w D2,D4
000215CC <AmiBlitz3.ab2@4555>   SUB.w D3,D4
000215CE <AmiBlitz3.ab2@4556>   MOVEQ.l #$00,D5
000215D0 <AmiBlitz3.ab2@4557>   MOVE.w D1,D5
000215D2 <AmiBlitz3.ab2@4558>   SUB.w D4,D5
000215D4 <AmiBlitz3.ab2@4559>   DIVU D3,D5
000215D6 <AmiBlitz3.ab2@4560>   SWAP D5
000215D8 <AmiBlitz3.ab2@4561>   TST.w D5
000215DC <AmiBlitz3.ab2@4562>    BEQ.w JL_0_48E0
000215DE <AmiBlitz3.ab2@4565>   ADDQ.w #2,A1
000215E0 <AmiBlitz3.ab2@4566>   ADDA.w D2,A1
000215E4 <AmiBlitz3.ab2@4567>    BSR.w aligna1
000215E8 <AmiBlitz3.ab2@4568>    BSR.w skiplibreg
000215EC <AmiBlitz3.ab2@4569>   LEA $C(A1),A1
000215F0 <AmiBlitz3.ab2@4570> BRA.w JL_0_489A
000215F2 <AmiBlitz3.ab2@4573>   MOVE.w (a3),d2
000215F6 <AmiBlitz3.ab2@4574>   BTST #1,d2
000215FA <AmiBlitz3.ab2@4575>   BEQ statement_
000215FE <AmiBlitz3.ab2@4576>   CMP.w #1,d1
00021602 <AmiBlitz3.ab2@4577>   BEQ statement_
00021606 <AmiBlitz3.ab2@4580>   CMP.b #$20,(a5)+
0002160A <AmiBlitz3.ab2@4581>   BEQ 'l2
00021610 <AmiBlitz3.ab2@4582>   CMP.b #"(",-2(a5)
00021614 <AmiBlitz3.ab2@4583>   BNE 'l1
00021618 <AmiBlitz3.ab2@4584> BRA parameter_
0002161C <AmiBlitz3.ab2@4587> BRA inbrackets_
0002161E <AmiBlitz3.ab2@4590>   MOVE.b (A1),D2
00021620 <AmiBlitz3.ab2@4591>   LSL.w #8,D2
00021622 <AmiBlitz3.ab2@4592>   OR.w D2,D1
00021624 <AmiBlitz3.ab2@4593>   MOVE.l A1,-(A7)
0002162A <AmiBlitz3.ab2@4594>   CLR.w a2offset
0002162C <AmiBlitz3.ab2@4595>   TST.w D1
00021630 <AmiBlitz3.ab2@4596>    BEQ.w JL_0_4900
00021634 <AmiBlitz3.ab2@4597>   LEA $2(A1),A2
0002163A <AmiBlitz3.ab2@4599>   MOVE.l lasttoken,-(a7)
00021640 <AmiBlitz3.ab2@4600>   CLR.l lasttoken
00021644 <AmiBlitz3.ab2@4601>   BSR.w fetchlibps
0002164A <AmiBlitz3.ab2@4602>   MOVE.l (a7)+,lasttoken
0002164E <AmiBlitz3.ab2@4603> BRA.w JL_0_4904
00021652 <AmiBlitz3.ab2@4606>   BSR.w get1bytemain
00021654 <AmiBlitz3.ab2@4609>   MOVEA.l (A7)+,A1
00021656 <AmiBlitz3.ab2@4610>   MOVEA.l (A7)+,A2
0002165C <AmiBlitz3.ab2@4611>   MOVE.w a2offset,D1
00021660 <AmiBlitz3.ab2@4612>    BEQ.w JL_0_493A
00021666 <AmiBlitz3.ab2@4613>   MOVE.w D1,preplibst+2
0002166C <AmiBlitz3.ab2@4614>   MOVE.l preplibst,D1
00021672 <AmiBlitz3.ab2@4615>    JSR writelong                                           ;write array offset stack correct
0002167C <AmiBlitz3.ab2@4616>   MOVE.w numreps,movenumrep+2
00021680 <AmiBlitz3.ab2@4617>    BEQ.w JL_0_493A
00021686 <AmiBlitz3.ab2@4618>   MOVE.l movenumrep,D1
0002168C <AmiBlitz3.ab2@4619>    JSR writelong
00021692 <AmiBlitz3.ab2@4623>   JSR userjsr
00021698 <AmiBlitz3.ab2@4626>   MOVE.w a2offset,D1
0002169C <AmiBlitz3.ab2@4627>    BEQ.w JL_0_4974
000216A0 <AmiBlitz3.ab2@4628>   CMP.w #$8,D1
000216A4 <AmiBlitz3.ab2@4629>    BHI.w JL_0_4964
000216A8 <AmiBlitz3.ab2@4630>   ANDI.w #$7,D1
000216AA <AmiBlitz3.ab2@4631>   LSL.w #8,D1
000216AC <AmiBlitz3.ab2@4632>   LSL.w #1,D1
000216B0 <AmiBlitz3.ab2@4633>   ORI.w #$504F,D1
000216B6 <AmiBlitz3.ab2@4635>   JSR writeword
000216BA <AmiBlitz3.ab2@4636> BRA.w JL_0_4974
000216C0 <AmiBlitz3.ab2@4639>   MOVE.w D1,fixlibst+2
000216C6 <AmiBlitz3.ab2@4640>   MOVE.l fixlibst,D1
000216CC <AmiBlitz3.ab2@4641>   JSR writelong
000216D2 <AmiBlitz3.ab2@4644>   MOVE.w (A7)+,a2offset
000216D8 <AmiBlitz3.ab2@4645>   MOVE.w (A7)+,userp
000216DE <AmiBlitz3.ab2@4646>   MOVE.w (A7)+,numreps
000216E2 <AmiBlitz3.ab2@4647> BRA.w reget
000216E6 <AmiBlitz3.ab2@4651>   MOVEM.l A2-A3,-(A7)
000216EC <AmiBlitz3.ab2@4652>   CLR.b doublepeek
000216F2 <AmiBlitz3.ab2@4653>   MOVE.l A5,lastsourcepos
000216F6 <AmiBlitz3.ab2@4654>    BSR.w getchar
000216FA <AmiBlitz3.ab2@4655>   CMP.w #$2E,D0
000216FE <AmiBlitz3.ab2@4656>    BEQ.w JL_0_49B4
00021704 <AmiBlitz3.ab2@4657>   MOVEA.l defaulttype,A2
00021708 <AmiBlitz3.ab2@4658>   CMP.w #$24,D0
0002170C <AmiBlitz3.ab2@4659>    BNE.w JL_0_49CA
0002170E <AmiBlitz3.ab2@4660>   MOVEQ.l #$07,D1
00021712 <AmiBlitz3.ab2@4661> BRA.w JL_0_49DE
00021716 <AmiBlitz3.ab2@4664>   BSR.w getparameter2
0002171A <AmiBlitz3.ab2@4665>   BEQ.w syntaxerr
00021720 <AmiBlitz3.ab2@4666>   LEA newtypebase,A2
00021724 <AmiBlitz3.ab2@4667>   BSR.w findtype
00021728 <AmiBlitz3.ab2@4668>   BNE.w notypeerr
00021732 <AmiBlitz3.ab2@4672>   MOVE.w oldqflag,instringon
00021738 <AmiBlitz3.ab2@4673>   MOVEA.l lastsourcepos,A5
0002173C <AmiBlitz3.ab2@4678>   MOVE.w $6(A2),D1
00021742 <AmiBlitz3.ab2@4679>   CMP.w #8,8(a2)
00021746 <AmiBlitz3.ab2@4680>   BNE 'l1
0002174E <AmiBlitz3.ab2@4681>   MOVE.b #1,doublepeek
00021754 <AmiBlitz3.ab2@4685>   MOVE.w D1,convsize
00021758 <AmiBlitz3.ab2@4686>   MOVEM.l (A7)+,A2-A3
0002175A <AmiBlitz3.ab2@4687> RTS
00021760 <AmiBlitz3.ab2@4692>   BTST #$3,$1(A3)
00021764 <AmiBlitz3.ab2@4693>   BEQ.w JL_0_4A06
00021768 <AmiBlitz3.ab2@4694>   BSR.w AJL_0_498A                                         ;read peek/poke size
0002176C <AmiBlitz3.ab2@4696>   ORI.w #$7000,D1
00021772 <AmiBlitz3.ab2@4697>   JSR writeword
00021778 <AmiBlitz3.ab2@4698>   ADDQ.w #1,regnum
0002177A <AmiBlitz3.ab2@4701> RTS
0002177C <AmiBlitz3.ab2@4707>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
0002177E <AmiBlitz3.ab2@4708>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00021780 <AmiBlitz3.ab2@4709>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00021782 <AmiBlitz3.ab2@4713> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00021784 <AmiBlitz3.ab2@4714>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00021786 <AmiBlitz3.ab2@4715>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00021788 <AmiBlitz3.ab2@4719> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
0002178A <AmiBlitz3.ab2@4720>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
0002178C <AmiBlitz3.ab2@4721>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
0002178E <AmiBlitz3.ab2@4725> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00021790 <AmiBlitz3.ab2@4728> srctype:    Ds.w 1
00021794 <AmiBlitz3.ab2@4733>   BSR.w excget
00021798 <AmiBlitz3.ab2@4734>   CMP.w #$2C,D0
0002179C <AmiBlitz3.ab2@4735>    BNE.w syntaxerr
000217A2 <AmiBlitz3.ab2@4736>   MOVE.b D2,srctype
000217A8 <AmiBlitz3.ab2@4737>   MOVE.w pusha2,D1
000217AE <AmiBlitz3.ab2@4738>   JSR writeword
000217B2 <AmiBlitz3.ab2@4739>   BSR.w get1bytemain
000217B6 <AmiBlitz3.ab2@4740>   BSR.w excget
000217BC <AmiBlitz3.ab2@4741>   CMP.b srctype,D2
000217C0 <AmiBlitz3.ab2@4742>    BNE.w excerr2
000217C6 <AmiBlitz3.ab2@4743>   MOVE.w pulla1,D1
000217CC <AmiBlitz3.ab2@4744>    JSR writeword
000217D0 <AmiBlitz3.ab2@4745>   CMP.b #$2,D2
000217D4 <AmiBlitz3.ab2@4746>    BCS.w JL_0_4B2A
000217D8 <AmiBlitz3.ab2@4747>    BEQ.w JL_0_4B1E
000217DC <AmiBlitz3.ab2@4748>   LEA swapl(PC),A0
000217E0 <AmiBlitz3.ab2@4749>   LEA swaplf(PC),A1
000217E6 <AmiBlitz3.ab2@4750> JMP pokecode
000217EA <AmiBlitz3.ab2@4753>   LEA swapw(PC),A0
000217EE <AmiBlitz3.ab2@4754>   LEA swapwf(PC),A1
000217F4 <AmiBlitz3.ab2@4755> JMP pokecode
000217F8 <AmiBlitz3.ab2@4758>   LEA swapb(PC),A0
000217FC <AmiBlitz3.ab2@4759>   LEA swapbf(PC),A1
00021802 <AmiBlitz3.ab2@4760> JMP pokecode
00021808 <AmiBlitz3.ab2@4764>   JSR getparameter
0002180C <AmiBlitz3.ab2@4765>   BSR.w JL_0_8E3C
00021810 <AmiBlitz3.ab2@4766>   BSR.w calcvar
00021814 <AmiBlitz3.ab2@4767>   BTST #$E,D2
00021818 <AmiBlitz3.ab2@4768>    BEQ.w JL_0_4B4E
0002181C <AmiBlitz3.ab2@4769>   MOVE.b #$4,D2
0002181E <AmiBlitz3.ab2@4772>   TST.b D2
00021822 <AmiBlitz3.ab2@4773>    BEQ.w excerr
00021826 <AmiBlitz3.ab2@4774>   BTST #$F,D2
0002182A <AmiBlitz3.ab2@4775>    BNE.w JL_0_4B6A
00021830 <AmiBlitz3.ab2@4776>   MOVE.w leaamp,D1
00021836 <AmiBlitz3.ab2@4777>    JSR pokewda5s
00021838 <AmiBlitz3.ab2@4778>   MOVE.w D3,D1
0002183E <AmiBlitz3.ab2@4779> JMP writeword
00021840 <AmiBlitz3.ab2@4782> RTS
00021846 <AmiBlitz3.ab2@4788>   MOVE.l mempool,a0
0002184C <AmiBlitz3.ab2@4789>   MOVEA.l _execbase,A6
00021850 <AmiBlitz3.ab2@4790> JMP _AllocPooled(a6)
00021854 <AmiBlitz3.ab2@4797>   MOVE.w #$BF00,D1
0002185A <AmiBlitz3.ab2@4798> JMP Atokejsr
0002185E <AmiBlitz3.ab2@4802>   CMP.w #-$7FFA,D0
00021862 <AmiBlitz3.ab2@4803>    BEQ.w popreturn
00021866 <AmiBlitz3.ab2@4804>   CMP.w #-$7FEA,D0
0002186A <AmiBlitz3.ab2@4805>    BEQ.w popnext2
0002186E <AmiBlitz3.ab2@4806>   CMP.w #-$7FF2,D0
00021872 <AmiBlitz3.ab2@4807>    BEQ.w popselect2
00021876 <AmiBlitz3.ab2@4808>   CMP.w #-$7FF5,D0
0002187A <AmiBlitz3.ab2@4809>    BEQ.w get1bytemain
0002187E <AmiBlitz3.ab2@4810>   CMP.w #-$7FF4,D0
00021882 <AmiBlitz3.ab2@4811>    BEQ.w get1bytemain
00021886 <AmiBlitz3.ab2@4812>   CMP.w #-$7FEC,D0
0002188A <AmiBlitz3.ab2@4813>    BEQ.w get1bytemain
0002188E <AmiBlitz3.ab2@4814>   CMP.w #-$7F45,D0
00021892 <AmiBlitz3.ab2@4815>    BEQ.w get1bytemain
00021896 <AmiBlitz3.ab2@4816> BRA.w syntaxerr
0002189C <AmiBlitz3.ab2@4819>   TST.b debugmode
000218A0 <AmiBlitz3.ab2@4820>    BEQ.w popreturn__norerr
000218A4 <AmiBlitz3.ab2@4821>   LEA popreturn__rfix(PC),A0
000218A8 <AmiBlitz3.ab2@4822>   LEA popreturn__rfixf(PC),A1
000218AE <AmiBlitz3.ab2@4823>    JSR pokecode
000218B2 <AmiBlitz3.ab2@4824>   MOVE.w #$C305,D1
000218B8 <AmiBlitz3.ab2@4825>    JSR Atokejsr
000218BC <AmiBlitz3.ab2@4826>   MOVE.w popreturn__rfix2(PC),D1
000218C2 <AmiBlitz3.ab2@4828>    JSR writeword
000218C6 <AmiBlitz3.ab2@4829> BRA.w get1bytemain
000218CC <AmiBlitz3.ab2@4833>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
000218D0 <AmiBlitz3.ab2@4834>   BEQ.w popreturn__rfix2
000218D6 <AmiBlitz3.ab2@4837>   JSR $20000                                               ;reass
000218D8 <AmiBlitz3.ab2@4840>   ADDQ.w #6,A7
000218DC <AmiBlitz3.ab2@4844>   MOVE.w popreturn__sfix(PC),D1
000218E2 <AmiBlitz3.ab2@4845>   JSR writeword
000218E6 <AmiBlitz3.ab2@4846> BRA.w get1bytemain
000218E8 <AmiBlitz3.ab2@4851>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000218EE <AmiBlitz3.ab2@4856>   MOVE.l firstfor,D0
000218F2 <AmiBlitz3.ab2@4857>    BEQ.w noforerr
000218F4 <AmiBlitz3.ab2@4858>   MOVEA.l D0,A2
000218F8 <AmiBlitz3.ab2@4859>    BSR.w get1bytemain
000218FC <AmiBlitz3.ab2@4860>   BSR.w popnext
00021902 <AmiBlitz3.ab2@4863>   TST.b debugmode
00021906 <AmiBlitz3.ab2@4864>    BEQ.w popnext3__ner
0002190C <AmiBlitz3.ab2@4865>   MOVE.l nextfixw2,D1
00021912 <AmiBlitz3.ab2@4866>   CMPI.w #$3,$C(A2)
00021916 <AmiBlitz3.ab2@4867>    BCS.w writelong2
0002191C <AmiBlitz3.ab2@4868>   MOVE.l nextfixl2,D1
00021922 <AmiBlitz3.ab2@4869> writelong2 JMP  writelong
00021928 <AmiBlitz3.ab2@4872>   CMPI.w #$3,$C(A2)
0002192C <AmiBlitz3.ab2@4873>    BCS.w popnext3__skip2
00021932 <AmiBlitz3.ab2@4874>   MOVE.l nextfixl,D1
00021938 <AmiBlitz3.ab2@4875>   JMP writelong
0002193E <AmiBlitz3.ab2@4878>   MOVE.w nextfixw,D1
00021944 <AmiBlitz3.ab2@4879> JMP writeword
00021948 <AmiBlitz3.ab2@4883>   MOVE.w $C(A2),D0
0002194E <AmiBlitz3.ab2@4884>   TST.b debugmode
00021952 <AmiBlitz3.ab2@4885>    BEQ.w popnext__norunerr
00021956 <AmiBlitz3.ab2@4886>   MOVE.w #$C306,D1
0002195A <AmiBlitz3.ab2@4887>   CMP.w #$3,D0
0002195E <AmiBlitz3.ab2@4888>    BCS.w popnext__oktc
00021960 <AmiBlitz3.ab2@4889>   ADDQ.w #1,D1
00021962 <AmiBlitz3.ab2@4892>   MOVE.l A2,-(A7)
00021968 <AmiBlitz3.ab2@4893>   JSR Atokejsr
0002196A <AmiBlitz3.ab2@4894>   MOVEA.l (A7)+,A2
0002196C <AmiBlitz3.ab2@4897> RTS
00021972 <AmiBlitz3.ab2@4901>   MOVE.l firstsel,D0
00021976 <AmiBlitz3.ab2@4902>    BEQ.w eselerr
00021978 <AmiBlitz3.ab2@4903>   MOVEA.l D0,A2
0002197C <AmiBlitz3.ab2@4904>    BSR.w get1bytemain
00021980 <AmiBlitz3.ab2@4907>   MOVE.w $C(A2),D2
00021986 <AmiBlitz3.ab2@4908>   TST.b debugmode
0002198A <AmiBlitz3.ab2@4909>    BEQ.w popselect__norerr
0002198E <AmiBlitz3.ab2@4910>   MOVE.w #$C313,D1
00021992 <AmiBlitz3.ab2@4911>   CMP.w #$3,D2
00021996 <AmiBlitz3.ab2@4912>    BCS.w popselect__chkit
00021998 <AmiBlitz3.ab2@4913>   ADDQ.w #1,D1
0002199E <AmiBlitz3.ab2@4916>   JSR Atokejsr                                             ;make sure next thing on stack
000219A0 <AmiBlitz3.ab2@4920>   MOVEQ.l #$02,D1
000219A4 <AmiBlitz3.ab2@4921>   CMP.w #$3,D2
000219A8 <AmiBlitz3.ab2@4922>    BCS.w popselect__doit
000219AA <AmiBlitz3.ab2@4923>   MOVEQ.l #$04,D1
000219AE <AmiBlitz3.ab2@4924>   CMP.w #$7,D2
000219B2 <AmiBlitz3.ab2@4925>    BCS.w popselect__doit
000219B8 <AmiBlitz3.ab2@4926>   LEA endselstr,A0
000219BE <AmiBlitz3.ab2@4927>   LEA endselstrf,A1
000219C4 <AmiBlitz3.ab2@4928>   TST.b debugmode
000219C8 <AmiBlitz3.ab2@4929>    BEQ.w popselect__norerr3
000219CE <AmiBlitz3.ab2@4930>   LEA endselstrf2,A1
000219D4 <AmiBlitz3.ab2@4933>   JSR pokecode
000219D8 <AmiBlitz3.ab2@4934>   MOVE.w #$C003,D1                                         ;global freemem
000219DE <AmiBlitz3.ab2@4935> JMP Atokejsr
000219E4 <AmiBlitz3.ab2@4938>   TST.b debugmode
000219E8 <AmiBlitz3.ab2@4939>    BEQ.w popselect__norerr2
000219EA <AmiBlitz3.ab2@4940>   ADDQ.w #2,D1                                             ;for the "sE"
000219EC <AmiBlitz3.ab2@4943>   LSL.w #8,D1
000219EE <AmiBlitz3.ab2@4944>   LSL.w #1,D1
000219F4 <AmiBlitz3.ab2@4945>   OR.w endsel,D1
000219FA <AmiBlitz3.ab2@4946> JMP writeword
000219FE <AmiBlitz3.ab2@4949> firstrep:    Ds.l 1
00021A02 <AmiBlitz3.ab2@4950> replineat:   Ds.l 1
00021A08 <AmiBlitz3.ab2@4959>   CLR.l fp0addr
00021A12 <AmiBlitz3.ab2@4960>   MOVE.l linenumat,replineat
00021A14 <AmiBlitz3.ab2@4961>   MOVEQ.l #$08,D0
00021A1A <AmiBlitz3.ab2@4962>   MOVEA.l _execbase,A6
00021A20 <AmiBlitz3.ab2@4963>   MOVE.l mempool,a0
00021A24 <AmiBlitz3.ab2@4964>   JSR _AllocPooled(a6)
00021A26 <AmiBlitz3.ab2@4966>   MOVEA.l D0,A0
00021A2A <AmiBlitz3.ab2@4967>   MOVE.l firstrep(PC),(A0)
00021A30 <AmiBlitz3.ab2@4968>   MOVE.l A0,firstrep
00021A38 <AmiBlitz3.ab2@4969>   MOVE.l destpointer,$4(A0)
00021A3A <AmiBlitz3.ab2@4970> RTS
00021A40 <AmiBlitz3.ab2@4973> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00021A44 <AmiBlitz3.ab2@4976>   LEA str_temp(PC),A1
00021A46 <AmiBlitz3.ab2@4977>   CLR.w (A1)
00021A4A <AmiBlitz3.ab2@4978>   CLR.l $2(A1)
00021A4C <AmiBlitz3.ab2@4981>   MOVEQ.l #$04,D0
00021A50 <AmiBlitz3.ab2@4984>     MOVE.b $1(A1),(A1)+
00021A54 <AmiBlitz3.ab2@4985>   DBF D0,check_for_infoextention__loop
00021A58 <AmiBlitz3.ab2@4990>   LEA str_temp(PC),A1
00021A5A <AmiBlitz3.ab2@4991>   MOVE.b (A0),D0
00021A5E <AmiBlitz3.ab2@4992>   ORI.b #$20,D0
00021A62 <AmiBlitz3.ab2@4993>   MOVE.b D0,$5(A1)
00021A64 <AmiBlitz3.ab2@4994>   TST.b (A0)+
00021A68 <AmiBlitz3.ab2@4995>    BNE.w check_for_infoextention__loop2
00021A6C <AmiBlitz3.ab2@4996>   CMPI.w #$2E69,(A1)+                                      ;".i"
00021A70 <AmiBlitz3.ab2@4997>    BNE.w check_for_infoextention__no
00021A76 <AmiBlitz3.ab2@4998>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00021A78 <AmiBlitz3.ab2@5001> RTS
00021A7C <AmiBlitz3.ab2@5005>   BPL.w gettokeps__evaltoke
00021A7E <AmiBlitz3.ab2@5006>   MOVE.w D0,D1
00021A82 <AmiBlitz3.ab2@5007>   ANDI.w #$7F80,D1
00021A86 <AmiBlitz3.ab2@5008>    BEQ.w tokeerr
00021A8A <AmiBlitz3.ab2@5009>   BCLR #$F,D0
00021A8C <AmiBlitz3.ab2@5010>   MOVE.w D0,D4                                             ;got toke number
00021A90 <AmiBlitz3.ab2@5011>   BSR.w get1bytemain
00021A94 <AmiBlitz3.ab2@5012> BRA.w gettokeps__gotnum
00021A9A <AmiBlitz3.ab2@5015>   JSR JL_0_BF6A
00021AA0 <AmiBlitz3.ab2@5016>   CMP.l #MaxWord,D3
00021AA4 <AmiBlitz3.ab2@5017>    BHI.w tokeerr
00021AA6 <AmiBlitz3.ab2@5018>   TST.w D6
00021AAA <AmiBlitz3.ab2@5019>    BNE.w tokeerr
00021AAC <AmiBlitz3.ab2@5020>   MOVE.w D3,D4
00021AAE <AmiBlitz3.ab2@5023>   MOVEQ.l #$00,D5
00021AB2 <AmiBlitz3.ab2@5024>   CMP.w #$2C,D0
00021AB6 <AmiBlitz3.ab2@5025>    BNE.w gettokeps__gotfrom
00021AB8 <AmiBlitz3.ab2@5026>   MOVE.w D4,-(A7)
00021ABE <AmiBlitz3.ab2@5027>    JSR AJL_0_BF6E
00021AC4 <AmiBlitz3.ab2@5028>   CMP.l #MaxWord,D3
00021AC8 <AmiBlitz3.ab2@5029>    BHI.w tokeerr
00021ACA <AmiBlitz3.ab2@5030>   TST.w D6
00021ACE <AmiBlitz3.ab2@5031>    BNE.w tokeerr
00021AD0 <AmiBlitz3.ab2@5032>   MOVE.w D3,D5
00021AD2 <AmiBlitz3.ab2@5033>   MOVE.w (A7)+,D4
00021AD4 <AmiBlitz3.ab2@5036> RTS                                                        ;d4=toke, d5=form
00021AD6 <AmiBlitz3.ab2@5040>   TST.w D0
00021ADA <AmiBlitz3.ab2@5041>    BSR.w gettokeps
00021ADE <AmiBlitz3.ab2@5042>   MOVE.w #$4EB9,D1
00021AE4 <AmiBlitz3.ab2@5043>   JSR writeword
00021AE8 <AmiBlitz3.ab2@5044>   BSR.w addoff
00021AEA <AmiBlitz3.ab2@5045>   MOVE.w D5,D1
00021AEE <AmiBlitz3.ab2@5046>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00021AF0 <AmiBlitz3.ab2@5047>   SWAP D1
00021AF2 <AmiBlitz3.ab2@5048>   MOVE.w D4,D1
00021AF8 <AmiBlitz3.ab2@5049> JMP writelong
00021AFA <AmiBlitz3.ab2@5053>   TST.w D0
00021AFE <AmiBlitz3.ab2@5054>    BSR.w gettokeps
00021B02 <AmiBlitz3.ab2@5055>   MOVE.w #$4EB9,D1
00021B08 <AmiBlitz3.ab2@5056>   JSR writeword
00021B0C <AmiBlitz3.ab2@5057>   BSR.w addoff
00021B0E <AmiBlitz3.ab2@5058>   MOVE.w D5,D1
00021B12 <AmiBlitz3.ab2@5059>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00021B14 <AmiBlitz3.ab2@5060>   SWAP D1
00021B16 <AmiBlitz3.ab2@5061>   MOVE.w D4,D1
00021B1C <AmiBlitz3.ab2@5062>   JMP writelong
00021B22 <AmiBlitz3.ab2@5066>   JSR JL_0_BF6A
00021B28 <AmiBlitz3.ab2@5067>   CMP.l #$10000,D3
00021B2C <AmiBlitz3.ab2@5068>    BCC.w tokeerr
00021B2E <AmiBlitz3.ab2@5069>   MOVE.w D3,D1
00021B34 <AmiBlitz3.ab2@5070> JMP Atokejsr
00021B38 <AmiBlitz3.ab2@5074>   BSR.w gettokeps
00021B3C <AmiBlitz3.ab2@5075>   MOVE.w #$4EB9,D1
00021B42 <AmiBlitz3.ab2@5076>   JSR writeword
00021B48 <AmiBlitz3.ab2@5077>   MOVE.l destpointer,D3
00021B50 <AmiBlitz3.ab2@5078>   BTST #$7,blitzmode
00021B54 <AmiBlitz3.ab2@5079>    BEQ.w do_TokeJsr__inamiga
00021B58 <AmiBlitz3.ab2@5080>   BSET #$E,D5
00021B5C <AmiBlitz3.ab2@5083>   BSR.w JL_0_6E86
00021B60 <AmiBlitz3.ab2@5084>   BSR.w addoff
00021B66 <AmiBlitz3.ab2@5085>   JMP writelong
00021B6A <AmiBlitz3.ab2@5089>   BEQ.w do_VWait__zero
00021B6C <AmiBlitz3.ab2@5090>   MOVEQ.l #$02,D2                                          ;get a word
00021B72 <AmiBlitz3.ab2@5092>   JSR bakeval
00021B76 <AmiBlitz3.ab2@5093>   MOVE.w fvwait(PC),D1
00021B7A <AmiBlitz3.ab2@5094> BRA.w do_VWait__vcont
00021B7E <AmiBlitz3.ab2@5097>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00021B84 <AmiBlitz3.ab2@5100>   JSR writeword
00021B88 <AmiBlitz3.ab2@5101>   MOVE.w #$C104,D1
00021B8E <AmiBlitz3.ab2@5102> JMP Atokejsr
00021B90 <AmiBlitz3.ab2@5106>   SUBQ.w #1,D0
00021B96 <AmiBlitz3.ab2@5109>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00021B9A <AmiBlitz3.ab2@5112>   Dc.l $426d0001                                           ;clr.w $0(A5)
00021B9E <AmiBlitz3.ab2@5116>   MOVE.b debugmode(PC),D1
00021BA2 <AmiBlitz3.ab2@5117>   BEQ.b debugmode_codelabel__skip
00021BA6 <AmiBlitz3.ab2@5118>   MOVE.w #$D500,D1
00021BAC <AmiBlitz3.ab2@5119> JMP Atokejsr
00021BAE <AmiBlitz3.ab2@5122> RTS
00021BB6 <AmiBlitz3.ab2@5126>   BSET #$0,blitzmode
00021BBE <AmiBlitz3.ab2@5127>   BSET #$7,blitzmode
00021BC2 <AmiBlitz3.ab2@5128>   MOVE.w #$C200,D1
00021BC8 <AmiBlitz3.ab2@5129>   JSR Atokejsr
00021BCE <AmiBlitz3.ab2@5130>   TST.b debugmode
00021BD2 <AmiBlitz3.ab2@5131>    BEQ.w do_BLITZ__done
00021BD6 <AmiBlitz3.ab2@5132>   MOVE.w cgoblitz(PC),D1
00021BDC <AmiBlitz3.ab2@5133>   JSR writeword
00021BDE <AmiBlitz3.ab2@5134>   MOVEQ.l #-$01,D1
00021BE4 <AmiBlitz3.ab2@5135>   JSR writeword
00021BEA <AmiBlitz3.ab2@5136>   JSR getbbase
00021BF0 <AmiBlitz3.ab2@5137>   JSR writeword
00021BF4 <AmiBlitz3.ab2@5140> BRA.w debugmode_codelabel
00021BF8 <AmiBlitz3.ab2@5144>   MOVE.w #$C201,D1
00021BFC <AmiBlitz3.ab2@5145> BRA.w do_AMIGA__toamode
00021C00 <AmiBlitz3.ab2@5149>   MOVE.W  #$C202,D1
00021C08 <AmiBlitz3.ab2@5152>   BSET #$0,blitzmode
00021C10 <AmiBlitz3.ab2@5153>   BCLR #$7,blitzmode
00021C16 <AmiBlitz3.ab2@5154>   JSR Atokejsr
00021C1C <AmiBlitz3.ab2@5155>   TST.b debugmode
00021C20 <AmiBlitz3.ab2@5156>    BEQ.w do_AMIGA__done
00021C24 <AmiBlitz3.ab2@5157>   MOVE.w cgoamiga(PC),D1
00021C2A <AmiBlitz3.ab2@5158>   JSR writeword
00021C30 <AmiBlitz3.ab2@5159>   JSR getbbase
00021C36 <AmiBlitz3.ab2@5160>   JSR writeword
00021C3A <AmiBlitz3.ab2@5163> BRA.w debugmode_codelabel
00021C3E <AmiBlitz3.ab2@5167>   MOVEM.l D2-D7/A2-A4,-(A7)
00021C42 <AmiBlitz3.ab2@5170>   MOVEM.l (A7)+,D2-D7/A2-A4
00021C48 <AmiBlitz3.ab2@5174>   JSR JL_0_BF6A
00021C4E <AmiBlitz3.ab2@5175>   CMP.l #$E,D3
00021C52 <AmiBlitz3.ab2@5176>    BCC.w interr4
00021C56 <AmiBlitz3.ab2@5177>   MOVE.w #$7000,D1
00021C58 <AmiBlitz3.ab2@5178>   OR.w D3,D1
00021C5E <AmiBlitz3.ab2@5179>   JSR writeword
00021C62 <AmiBlitz3.ab2@5180>   MOVE.w #$C101,D1
00021C68 <AmiBlitz3.ab2@5181> JMP Atokejsr                                               ;clear the interupt
00021C6A <AmiBlitz3.ab2@5184> inerr:       Ds.w 1                                        ;flag - in error trap mode
00021C6E <AmiBlitz3.ab2@5185> errjmp:      Ds.l 1                                        ;where err jump is
00021C72 <AmiBlitz3.ab2@5186> errcode:     Ds.l 1
00021C76 <AmiBlitz3.ab2@5190>   MOVE.W  #$D202,D1
00021C7C <AmiBlitz3.ab2@5191> JMP Atokejsr                                               ;BRA.W Atokejsr
00021C80 <AmiBlitz3.ab2@5195>   MOVE.w inerr(PC),D1
00021C84 <AmiBlitz3.ab2@5196>    BEQ.w errerr3
00021C8A <AmiBlitz3.ab2@5197>   CLR.w inerr
00021C90 <AmiBlitz3.ab2@5198>   MOVE.w dontwrite,D1
00021C94 <AmiBlitz3.ab2@5199>    BNE.w doendseterr__skip
00021C98 <AmiBlitz3.ab2@5200>   MOVEA.l errjmp(PC),A0
00021C9E <AmiBlitz3.ab2@5201>   MOVE.l destpointer,(A0)
00021CA2 <AmiBlitz3.ab2@5204> BRA.w get1bytemain
00021CA6 <AmiBlitz3.ab2@5208>   MOVE.w #$D205,D1
00021CAC <AmiBlitz3.ab2@5209> JMP Atokejsr
00021CB2 <AmiBlitz3.ab2@5213>   MOVE.w proceduremode,D1
00021CB6 <AmiBlitz3.ab2@5214>    BNE.w errerr1
00021CBA <AmiBlitz3.ab2@5215>   MOVE.w inerr(PC),D1
00021CBE <AmiBlitz3.ab2@5216>    BNE.w errerr2
00021CC4 <AmiBlitz3.ab2@5217>   LEA inerr,a0
00021CC6 <AmiBlitz3.ab2@5218>   NOT.w (a0)                                               ;reass
00021CCA <AmiBlitz3.ab2@5219>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00021CD0 <AmiBlitz3.ab2@5220>   JSR writeword
00021CDA <AmiBlitz3.ab2@5221>   MOVE.l destpointer,errcode
00021CDE <AmiBlitz3.ab2@5222>   BSR.w addoff
00021CE2 <AmiBlitz3.ab2@5223>   BSR.w writelong
00021CE6 <AmiBlitz3.ab2@5224>   MOVE.w #$D201,D1
00021CEC <AmiBlitz3.ab2@5225>   JSR Atokejsr
00021CF0 <AmiBlitz3.ab2@5226>   MOVE.w #$4EF9,D1                                         ;JMP
00021CF4 <AmiBlitz3.ab2@5227>   BSR.w writeword
00021CFE <AmiBlitz3.ab2@5228>   MOVE.l destpointer,errjmp
00021D02 <AmiBlitz3.ab2@5229>   BSR.w addoff
00021D06 <AmiBlitz3.ab2@5230>   BSR.w writelong
00021D0C <AmiBlitz3.ab2@5231>   MOVE.w dontwrite,D1
00021D10 <AmiBlitz3.ab2@5232>    BNE.w do_SetErr__skip
00021D14 <AmiBlitz3.ab2@5233>   MOVEA.l errcode(PC),A0
00021D1A <AmiBlitz3.ab2@5234>   MOVE.l destpointer,(A0)
00021D1C <AmiBlitz3.ab2@5237> RTS
00021D20 <AmiBlitz3.ab2@5240> intlineat:  Ds.l 1
00021D22 <AmiBlitz3.ab2@5244>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00021D26 <AmiBlitz3.ab2@5245>   BSR.w errchx
00021D2C <AmiBlitz3.ab2@5246>   MOVE.w D1,intstring
00021D36 <AmiBlitz3.ab2@5247>   MOVE.l linenumat,intlineat
00021D3C <AmiBlitz3.ab2@5248>   JSR JL_0_BF6A                                           ;get constant - int level
00021D42 <AmiBlitz3.ab2@5249>   CMP.l #$E,D3
00021D46 <AmiBlitz3.ab2@5250>    BCC.w interr4
00021D4C <AmiBlitz3.ab2@5251>   ST intsused
00021D52 <AmiBlitz3.ab2@5252>   MOVE.w D3,intlevel
00021D56 <AmiBlitz3.ab2@5253>   MOVE.w #$7000,D1
00021D58 <AmiBlitz3.ab2@5254>   OR.w D3,D1                                              
00021D5C <AmiBlitz3.ab2@5255>   BSR.w writeword                                         ;moveq #x,d0
00021D60 <AmiBlitz3.ab2@5256>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00021D64 <AmiBlitz3.ab2@5257>   BSR.w writeword
00021D68 <AmiBlitz3.ab2@5258>   BSR.w addoff
00021D6E <AmiBlitz3.ab2@5259>   MOVE.l destpointer,-(A7)
00021D72 <AmiBlitz3.ab2@5260>   BSR.w writelong
00021D76 <AmiBlitz3.ab2@5261>   MOVE.w #$C100,D1
00021D7C <AmiBlitz3.ab2@5262>   JSR Atokejsr
00021D80 <AmiBlitz3.ab2@5263>   MOVE.w #$4EF9,D1                                        ;jmp
00021D84 <AmiBlitz3.ab2@5264>   BSR.w writeword
00021D88 <AmiBlitz3.ab2@5265>   BSR.w addoff
00021D92 <AmiBlitz3.ab2@5266>   MOVE.l destpointer,intjmpat
00021D96 <AmiBlitz3.ab2@5267>   BSR.w writelong
00021D98 <AmiBlitz3.ab2@5268>   MOVEA.l (A7)+,A0
00021D9E <AmiBlitz3.ab2@5269>   MOVE.w dontwrite,D1
00021DA2 <AmiBlitz3.ab2@5270>   BNE.w do_SetInt__dontpoke
00021DA8 <AmiBlitz3.ab2@5271>   MOVE.l destpointer,(A0)
00021DAC <AmiBlitz3.ab2@5274>   MOVE.l intstart0(PC),D1
00021DB0 <AmiBlitz3.ab2@5275>   BSR.w writelong
00021DB6 <AmiBlitz3.ab2@5276>   TST.b debugmode
00021DBA <AmiBlitz3.ab2@5277>    BEQ.w do_SetInt__norerr
00021DBC <AmiBlitz3.ab2@5281>   MOVEQ.l #$02,D1
00021DC0 <AmiBlitz3.ab2@5282>   BSR.w writetrap
00021DC4 <AmiBlitz3.ab2@5283>   BSR.w addoff
00021DCE <AmiBlitz3.ab2@5284>   MOVE.l destpointer,intcleanat
00021DD2 <AmiBlitz3.ab2@5285>   BSR.w writelong
00021DD8 <AmiBlitz3.ab2@5286>   MOVE.w intlevel,D1
00021DDC <AmiBlitz3.ab2@5287>   BSR.w writeword
00021DE0 <AmiBlitz3.ab2@5288>   MOVE.w #$C30B,D1                                         ;disable stack checks
00021DE6 <AmiBlitz3.ab2@5289>   JSR Atokejsr
00021DEA <AmiBlitz3.ab2@5292>   MOVE.w #$FED3,D1
00021DEE <AmiBlitz3.ab2@5293>   BSR.w uselib
00021DF2 <AmiBlitz3.ab2@5294>   MOVE.w #$C102,D1
00021DF8 <AmiBlitz3.ab2@5295>   JSR Atokejsr
00021E00 <AmiBlitz3.ab2@5296>   MOVE.w #-1,lasta6
00021E0A <AmiBlitz3.ab2@5297>   MOVE.l linenumat,intline
00021E0C <AmiBlitz3.ab2@5298> RTS
00021E0E <AmiBlitz3.ab2@5302>             Ds.w 1                                         ;??looks like obsolved data??
00021E12 <AmiBlitz3.ab2@5304> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00021E16 <AmiBlitz3.ab2@5306> intjmpat:   Ds.l 1
00021E1A <AmiBlitz3.ab2@5307> intline:    Ds.l 1
00021E1C <AmiBlitz3.ab2@5308> intstring:  Ds.w 1                                         ;flag 0 = no setint
00021E1E <AmiBlitz3.ab2@5311> intlevel:   Ds.w 1
00021E22 <AmiBlitz3.ab2@5312> intcleanat: Ds.l 1
00021E26 <AmiBlitz3.ab2@5313> ret15add:   Ds.l 1
00021E28 <AmiBlitz3.ab2@5314> ret15cc:    Ds.w 1
00021E30 <AmiBlitz3.ab2@5318>   ADDI.l #$12,$2(A7)
00021E38 <AmiBlitz3.ab2@5319>   MOVE.l $2(A7),ret15add
00021E3E <AmiBlitz3.ab2@5320>   MOVE.w (A7),ret15cc
00021E46 <AmiBlitz3.ab2@5321>   MOVE.l #directdo,$2(A7)
00021E48 <AmiBlitz3.ab2@5322> RTE
00021E4C <AmiBlitz3.ab2@5331>   MOVE.l ret15add(PC),-(A7)
00021E50 <AmiBlitz3.ab2@5332>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00021E54 <AmiBlitz3.ab2@5333>   MOVEM.l D0-D7/A0-A6,-(A7)
00021E5E <AmiBlitz3.ab2@5334>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00021E68 <AmiBlitz3.ab2@5335>   MOVE.l destbufferstart,trap15temp2
00021E72 <AmiBlitz3.ab2@5336>   MOVE.l libend,templibend
00021E7C <AmiBlitz3.ab2@5337>   MOVE.l data1start,tempdata1start
00021E82 <AmiBlitz3.ab2@5338>   CLR.l hunkoffsetcounter
00021E88 <AmiBlitz3.ab2@5340>   MOVE.l directbuffer,a0
00021E8E <AmiBlitz3.ab2@5344>   MOVE.l a0,destbufferstart
00021E94 <AmiBlitz3.ab2@5345>   ADD.l #3900,a0
00021E9A <AmiBlitz3.ab2@5346>   MOVE.l a0,destbufferend
00021EA0 <AmiBlitz3.ab2@5347>   TST.b exdebug
00021EA4 <AmiBlitz3.ab2@5348>   BEQ 'l1
00021EAA <AmiBlitz3.ab2@5349>   MOVE.l a0,libend
00021EB0 <AmiBlitz3.ab2@5350>   ADD.l #4000,a0
00021EB6 <AmiBlitz3.ab2@5351>   MOVE.l a0,data1start
00021EC0 <AmiBlitz3.ab2@5354>   MOVE.l #dircont,errcont
00021EC6 <AmiBlitz3.ab2@5355>   MOVE.l A7,errstack
00021ECE <AmiBlitz3.ab2@5356>   MOVE.w #$FFFF,dirmode
00021ED2 <AmiBlitz3.ab2@5358>     MOVEA.l ret15add(PC),A1
00021ED8 <AmiBlitz3.ab2@5359>     MOVE.w -(A1),blitzmode
00021EDA <AmiBlitz3.ab2@5360>     CLR.l -(A1)
00021EE0 <AmiBlitz3.ab2@5361>     MOVE.l -(A1),firstglob
00021EE6 <AmiBlitz3.ab2@5362>     MOVE.l -(A1),firstlocal
00021EEC <AmiBlitz3.ab2@5364>   CLR.w proceduremode
00021EF2 <AmiBlitz3.ab2@5365>   MOVE.l firstglob,D0
00021EF8 <AmiBlitz3.ab2@5366>   OR.l firstlocal,D0
00021EFC <AmiBlitz3.ab2@5367>   BEQ.b directdo__skip
00021F02 <AmiBlitz3.ab2@5368>   NOT.w proceduremode
00021F04 <AmiBlitz3.ab2@5371>   MOVEA.l -(A1),A0                                         ;address of string
00021F06 <AmiBlitz3.ab2@5375>   MOVE.l A0,-(A7)
00021F44 <AmiBlitz3.ab2@5378>   !ComData_GetL{comFunc_DebugTrap,A1}
00021F46 <AmiBlitz3.ab2@5381>   JSR (A1)                                                 ;tokenise line.....
00021F48 <AmiBlitz3.ab2@5382>   MOVEA.l (A7)+,A5
00021F52 <AmiBlitz3.ab2@5383>   MOVE.l directbuffer,destpointer
00021F58 <AmiBlitz3.ab2@5384>   TST.b exdebug
00021F5C <AmiBlitz3.ab2@5385>   BEQ 'noexdebug
00021F5E <AmiBlitz3.ab2@5386>   MOVE.l a5,a0
00021F64 <AmiBlitz3.ab2@5387>   MOVE.l #200,d0
00021F6A <AmiBlitz3.ab2@5390>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00021F6E <AmiBlitz3.ab2@5391>   DBF d0,'l1
00021F74 <AmiBlitz3.ab2@5396>   MOVE.l destpointer,a0
00021F78 <AmiBlitz3.ab2@5397>   MOVE.w #$207c,(a0)+
00021F7A <AmiBlitz3.ab2@5398>   MOVE.l a5,d0
00021F80 <AmiBlitz3.ab2@5399>   ADD.l #$206,d0                                           ;constant from debuglib
00021F82 <AmiBlitz3.ab2@5400>   MOVE.l d0,(a0)+
00021F88 <AmiBlitz3.ab2@5401>   MOVE.l a0,destpointer
00021F8A <AmiBlitz3.ab2@5402>   MOVE.l a5,a0
00021F8E <AmiBlitz3.ab2@5403>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00021F94 <AmiBlitz3.ab2@5404>   MOVE.l #"$520",(a0)+
00021F98 <AmiBlitz3.ab2@5405>   MOVE.w #"4:",(a0)+
00021F9E <AmiBlitz3.ab2@5408>   CLR.w dontwrite
00021FA6 <AmiBlitz3.ab2@5409>   MOVE.w #$FFFF,lasta6
00021FAA <AmiBlitz3.ab2@5410>   BSR.w compile_line                                        ;.....compile it
00021FB0 <AmiBlitz3.ab2@5411>   TST.b exdebug
00021FB4 <AmiBlitz3.ab2@5412>   BEQ 'noexdebug2
00021FBA <AmiBlitz3.ab2@5413>   JSR JL_0_6C76
00021FC0 <AmiBlitz3.ab2@5416>   CLR.w proceduremode
00021FC4 <AmiBlitz3.ab2@5417>   BSR.w errchx
00021FC8 <AmiBlitz3.ab2@5418>   MOVE.w #$4EF9,D1
00021FCC <AmiBlitz3.ab2@5419>   BSR.w writeword                                          ;JMP
00021FD0 <AmiBlitz3.ab2@5420>   MOVE.l ret15add(PC),D1
00021FD4 <AmiBlitz3.ab2@5421>   BSR.w writelong                                          ;jmp to done
00021FDA <AmiBlitz3.ab2@5422>   MOVE.w dontwrite,D0
00021FDE <AmiBlitz3.ab2@5423>    BNE.w nodirmem
00021FE6 <AmiBlitz3.ab2@5424>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00021FEC <AmiBlitz3.ab2@5427>   CLR.w dirmode
00021FF2 <AmiBlitz3.ab2@5428>   MOVE.w ret15cc(PC),$3C(A7)
00021FFC <AmiBlitz3.ab2@5429>   MOVE.l trap15temp,destbufferend
00022006 <AmiBlitz3.ab2@5430>   MOVE.l trap15temp2,destbufferstart
00022010 <AmiBlitz3.ab2@5431>   MOVE.l tempdata1start,data1start
0002201A <AmiBlitz3.ab2@5432>   MOVE.l templibend,libend
0002201E <AmiBlitz3.ab2@5433>   MOVEM.l (A7)+,D0-D7/A0-A6
00022022 <AmiBlitz3.ab2@5434>   BSR.w Aclearcache                                        ;selden used
00022024 <AmiBlitz3.ab2@5435> RTR
00022028 <AmiBlitz3.ab2@5438>   MOVEA.l ret15add(PC),A0
0002202A <AmiBlitz3.ab2@5439>   SUBQ.w #2,A0
0002202C <AmiBlitz3.ab2@5440>   MOVE.l D0,-(A0)
00022030 <AmiBlitz3.ab2@5441> BRA.w direxit
00022034 <AmiBlitz3.ab2@5445>   MOVE.w $6(A3),D1
00022038 <AmiBlitz3.ab2@5446>   BSR.w uselib                                             ;get lib for base address
0002203C <AmiBlitz3.ab2@5447>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
0002203E <AmiBlitz3.ab2@5448>   ADDQ.w #8,A3
00022040 <AmiBlitz3.ab2@5449>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00022042 <AmiBlitz3.ab2@5450>   MOVE.l A3,-(A7)
00022044 <AmiBlitz3.ab2@5454>   MOVEQ.l #$00,D3
0002204A <AmiBlitz3.ab2@5455>   JSR checka4a5
0002204C <AmiBlitz3.ab2@5457>   MOVE.b (A3)+,D1
00022050 <AmiBlitz3.ab2@5458>    BMI.w stamigalib__done
00022052 <AmiBlitz3.ab2@5459>   MOVEQ.l #$03,D2
00022054 <AmiBlitz3.ab2@5460>   ADDQ.w #1,D3
00022058 <AmiBlitz3.ab2@5461>   MOVEM.l D3/A3,-(A7)
0002205E <AmiBlitz3.ab2@5462>   MOVE.b funcparloop,-(a7)
00022066 <AmiBlitz3.ab2@5463>   MOVE.b #0,funcparloop
0002206C <AmiBlitz3.ab2@5464>   MOVE.l leftsidetype,-(a7)
00022072 <AmiBlitz3.ab2@5465>   MOVE.l rightsidetype,-(a7)
00022078 <AmiBlitz3.ab2@5466>   CLR.l leftsidetype
0002207E <AmiBlitz3.ab2@5467>   CLR.l rightsidetype
00022084 <AmiBlitz3.ab2@5468>   MOVE.b blitzparloop,-(a7)
0002208C <AmiBlitz3.ab2@5469>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00022092 <AmiBlitz3.ab2@5470>   JSR peval
00022098 <AmiBlitz3.ab2@5471>   MOVE.b (a7)+,blitzparloop
0002209E <AmiBlitz3.ab2@5472>   MOVE.l (a7)+,rightsidetype
000220A4 <AmiBlitz3.ab2@5473>   MOVE.l (a7)+,leftsidetype
000220AA <AmiBlitz3.ab2@5474>   MOVE.b (a7)+,funcparloop
000220AE <AmiBlitz3.ab2@5475>   MOVEM.l (A7)+,D3/A3
000220B2 <AmiBlitz3.ab2@5476>   CMP.w #$2C,D0
000220B6 <AmiBlitz3.ab2@5477>    BEQ.w stamigalib__loop
000220B8 <AmiBlitz3.ab2@5478>   TST.b (A3)
000220BC <AmiBlitz3.ab2@5479>    BPL.w syntaxerr
000220BE <AmiBlitz3.ab2@5482>   MOVEA.l (A7)+,A3
000220C0 <AmiBlitz3.ab2@5483>   SUBQ.w #1,D3
000220C4 <AmiBlitz3.ab2@5484>    BPL.w stamigalib__toend
000220C8 <AmiBlitz3.ab2@5485>    BSR.w get1bytemain                                      ;no pars - get :
000220CC <AmiBlitz3.ab2@5486> BRA.w stamigalib__nopars
000220CE <AmiBlitz3.ab2@5489>   TST.b (A3)+                                              ;go to end of params
000220D2 <AmiBlitz3.ab2@5490>    BPL.w stamigalib__toend
000220D4 <AmiBlitz3.ab2@5491>   SUBQ.w #1,A3
000220D6 <AmiBlitz3.ab2@5494>    MOVEQ.l #$00,D1
000220D8 <AmiBlitz3.ab2@5495>    MOVE.b -(A3),D1
000220DC <AmiBlitz3.ab2@5496>    BTST #$4,D1
000220E0 <AmiBlitz3.ab2@5497>     BNE.w stamigalib__addreg
000220E2 <AmiBlitz3.ab2@5498>    LSL.w #8,D1
000220E4 <AmiBlitz3.ab2@5499>    LSL.w #1,D1
000220E8 <AmiBlitz3.ab2@5500>    ORI.w #$201F,D1
000220EC <AmiBlitz3.ab2@5501>  BRA.w stamigalib__gotit
000220F0 <AmiBlitz3.ab2@5504>    ANDI.w #$7,D1
000220F2 <AmiBlitz3.ab2@5505>    LSL.w #8,D1
000220F4 <AmiBlitz3.ab2@5506>    LSL.w #1,D1
000220F8 <AmiBlitz3.ab2@5507>    ORI.w #$205F,D1
000220FC <AmiBlitz3.ab2@5510>     BSR.w writeword
00022100 <AmiBlitz3.ab2@5511>   DBF D3,stamigalib__loop2
00022106 <AmiBlitz3.ab2@5514>   MOVE.w (A7)+,libjsr+2
0002210C <AmiBlitz3.ab2@5515>   MOVE.w (A7)+,libbase+2
00022112 <AmiBlitz3.ab2@5516>   MOVE.l libbase,D1
00022116 <AmiBlitz3.ab2@5517>    BSR.w writelong
0002211C <AmiBlitz3.ab2@5518>   MOVE.l libjsr,D1
00022122 <AmiBlitz3.ab2@5519>   JSR writelong
00022128 <AmiBlitz3.ab2@5520>   JSR restorea4a5
0002212A <AmiBlitz3.ab2@5521>   RTS
00022130 <AmiBlitz3.ab2@5524>   MOVE.l data1,D4
00022136 <AmiBlitz3.ab2@5525>   SUB.l data1start,D4
0002213C <AmiBlitz3.ab2@5526>   ADD.l #10000,d4
00022142 <AmiBlitz3.ab2@5527>   MOVE.l libend,D3
00022148 <AmiBlitz3.ab2@5528>   SUB.l destbufferend,D3
0002214E <AmiBlitz3.ab2@5529>   ADD.l #40000,d3
00022154 <AmiBlitz3.ab2@5530>   MOVE.l bigpc,D2
0002215A <AmiBlitz3.ab2@5531>   SUB.l destbufferstart,D2
00022160 <AmiBlitz3.ab2@5532>   ADD.l #20000,d2
00022166 <AmiBlitz3.ab2@5533>   MOVE.l databuffer,D5
0002216C <AmiBlitz3.ab2@5534>   ADD.l #10000,D5
00022170 <AmiBlitz3.ab2@5535> BRA newallox
00022176 <AmiBlitz3.ab2@5539>   MOVE.l objectbuffer,D2
00022178 <AmiBlitz3.ab2@5540>   LSR.l #1,D2
0002217E <AmiBlitz3.ab2@5541>   ADD.l objectbuffer,D2
00022184 <AmiBlitz3.ab2@5542>   MOVE.l libsbuffer,D3
00022186 <AmiBlitz3.ab2@5543>   LSR.l #1,D3
0002218C <AmiBlitz3.ab2@5544>   ADD.l libsbuffer,D3
00022192 <AmiBlitz3.ab2@5545>   MOVE.l systembuffer,D4
00022194 <AmiBlitz3.ab2@5546>   LSR.l #1,D4
0002219A <AmiBlitz3.ab2@5547>   ADD.l systembuffer,D4
000221A0 <AmiBlitz3.ab2@5548>   MOVE.l databuffer,D5
000221A2 <AmiBlitz3.ab2@5549>   LSR.l #1,D5
000221A8 <AmiBlitz3.ab2@5550>   ADD.l databuffer,D5
000221AC <AmiBlitz3.ab2@5551> BRA.w newallox
000221B2 <AmiBlitz3.ab2@5555>   MOVE.l bigpc,D2
000221B8 <AmiBlitz3.ab2@5556>   SUB.l destbufferstart,D2                                     ;size of object buffer
000221BE <AmiBlitz3.ab2@5557>   SUB.l savefuncspace,d2
000221C4 <AmiBlitz3.ab2@5559>   TST.w debugversion
000221C8 <AmiBlitz3.ab2@5560>    BNE.b alloxadj__skip
000221CE <AmiBlitz3.ab2@5561>   ADDI.l #$800,D2
000221D4 <AmiBlitz3.ab2@5564>   MOVE.l libend,D3
000221DA <AmiBlitz3.ab2@5565>   SUB.l destbufferend,D3
000221E0 <AmiBlitz3.ab2@5567>   MOVE.l data1,D4
000221E6 <AmiBlitz3.ab2@5568>   SUB.l data1start,D4
000221EC <AmiBlitz3.ab2@5570>   MOVE.l data2,D5
000221F2 <AmiBlitz3.ab2@5571>   SUB.l data2at,D5
000221F8 <AmiBlitz3.ab2@5573>   CLR.l morememadd
000221FC <AmiBlitz3.ab2@5576>   BSR.w makeallox
00022200 <AmiBlitz3.ab2@5577>   BNE.w newallox__done
00022204 <AmiBlitz3.ab2@5578> BRA.w init_buffers
00022206 <AmiBlitz3.ab2@5581> RTS
0002220C <AmiBlitz3.ab2@5585>   MOVEA.l _execbase,A6
00022212 <AmiBlitz3.ab2@5586>   MOVE.l objlen,D0
00022216 <AmiBlitz3.ab2@5587>   BEQ.w freeallox__skip
0002221C <AmiBlitz3.ab2@5588>   CLR.l objlen
00022222 <AmiBlitz3.ab2@5589>   MOVEA.l destbufferstart,A1
00022228 <AmiBlitz3.ab2@5590>   MOVE.l mempool,a0
0002222C <AmiBlitz3.ab2@5591> JMP _FreeVec(A6)
0002222E <AmiBlitz3.ab2@5594> RTS
00022234 <AmiBlitz3.ab2@5598>   MOVE.l objectbuffer,D2
0002223A <AmiBlitz3.ab2@5599>   MOVE.l libsbuffer,D3
00022240 <AmiBlitz3.ab2@5600>   MOVE.l systembuffer,D4
00022246 <AmiBlitz3.ab2@5601>   MOVE.l databuffer,D5
0002224E <AmiBlitz3.ab2@5604>   MOVE.w #$FFFF,anyerrs
00022252 <AmiBlitz3.ab2@5605>   BSR.w freeallox
00022254 <AmiBlitz3.ab2@5609>   ADDQ.l #1,D2
00022258 <AmiBlitz3.ab2@5610>   BCLR #$0,D2
0002225A <AmiBlitz3.ab2@5611>   ADDQ.l #1,D3
0002225E <AmiBlitz3.ab2@5612>   BCLR #$0,D3
00022260 <AmiBlitz3.ab2@5613>   ADDQ.l #1,D4
00022264 <AmiBlitz3.ab2@5614>   BCLR #$0,D4
00022266 <AmiBlitz3.ab2@5615>   TST.l d5
0002226A <AmiBlitz3.ab2@5616>   BNE 'l1
0002226C <AmiBlitz3.ab2@5619>   ADDQ.l #1,D5
00022270 <AmiBlitz3.ab2@5620>   BCLR #$0,D5
00022272 <AmiBlitz3.ab2@5621>   MOVE.l D2,D0
00022274 <AmiBlitz3.ab2@5622>   ADD.l D3,D0
00022276 <AmiBlitz3.ab2@5623>   ADD.l D4,D0
00022278 <AmiBlitz3.ab2@5624>   ADD.l D5,D0
0002227E <AmiBlitz3.ab2@5625>   ADD.l #moremem,d0
00022280 <AmiBlitz3.ab2@5626>   MOVE.l D0,D6
00022286 <AmiBlitz3.ab2@5627>   MOVE.l #MemfPublic_MemfClear,D1
0002228C <AmiBlitz3.ab2@5628>   MOVE.l mempool,a0
00022292 <AmiBlitz3.ab2@5629>   MOVEA.l _execbase,A6
00022296 <AmiBlitz3.ab2@5630>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00022298 <AmiBlitz3.ab2@5632>   TST.l D0
0002229C <AmiBlitz3.ab2@5633>   BEQ.w exit_initbuffers
000222A2 <AmiBlitz3.ab2@5634>   MOVE.l D6,objlen
000222A8 <AmiBlitz3.ab2@5635>   MOVE.l D2,objectbuffer
000222AE <AmiBlitz3.ab2@5636>   MOVE.l D3,libsbuffer
000222B4 <AmiBlitz3.ab2@5637>   MOVE.l D4,systembuffer
000222BA <AmiBlitz3.ab2@5638>   MOVE.l D5,databuffer
000222C0 <AmiBlitz3.ab2@5639>   MOVE.l D0,destbufferstart
000222F4 <AmiBlitz3.ab2@5642>   !ComData_SetL{comPtr_DestBufferStart,D0}
000222F6 <AmiBlitz3.ab2@5643>   ADD.l D2,D0
000222FC <AmiBlitz3.ab2@5644>   MOVE.l D0,destbufferend
000222FE <AmiBlitz3.ab2@5645>   ADD.l D3,D0
00022304 <AmiBlitz3.ab2@5646>   MOVE.l D0,data1start
00022306 <AmiBlitz3.ab2@5647>   ADD.l D4,D0
0002230C <AmiBlitz3.ab2@5648>   MOVE.l D0,data2at
0002230E <AmiBlitz3.ab2@5649>   ADD.l D5,D0
00022314 <AmiBlitz3.ab2@5650>   MOVE.l D0,allat
00022316 <AmiBlitz3.ab2@5653> RTS
0002231A <AmiBlitz3.ab2@5657>   Dc.b $00,$00,$00,$01                                     ;         1
0002231E <AmiBlitz3.ab2@5658>   Dc.b $00,$00,$00,$0A                                     ;        10
00022322 <AmiBlitz3.ab2@5659>   Dc.b $00,$00,$00,$64                                     ;       100
00022326 <AmiBlitz3.ab2@5660>   Dc.b $00,$00,$03,$E8                                     ;      1000
0002232A <AmiBlitz3.ab2@5661>   Dc.b $00,$00,$27,$10                                     ;     10000
0002232E <AmiBlitz3.ab2@5662>   Dc.b $00,$01,$86,$A0                                     ;    100000
00022332 <AmiBlitz3.ab2@5663>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00022336 <AmiBlitz3.ab2@5664>   Dc.b $00,$98,$96,$80                                     ;  10000000
0002233A <AmiBlitz3.ab2@5665>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
0002233E <AmiBlitz3.ab2@5666>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00022340 <AmiBlitz3.ab2@5670>   MOVEQ.l #$00,D1                                          ;no zero printed
00022342 <AmiBlitz3.ab2@5671>   MOVEQ.l #$24,D3                                          ; "$"
00022344 <AmiBlitz3.ab2@5674>   MOVEQ.l #$30,D4                                          ; "0"
00022348 <AmiBlitz3.ab2@5677>     CMP.l divisors(PC,D3.W),D2
0002234C <AmiBlitz3.ab2@5678>     BCS.w makelong__skip
00022350 <AmiBlitz3.ab2@5679>     SUB.l divisors(PC,D3.W),D2
00022352 <AmiBlitz3.ab2@5680>     ADDQ.w #1,D4
00022356 <AmiBlitz3.ab2@5681> BRA.w makelong__loop2
0002235A <AmiBlitz3.ab2@5684>   CMP.b #"0",D4
0002235E <AmiBlitz3.ab2@5685>   BNE.w makelong__doit
00022360 <AmiBlitz3.ab2@5686>   TST.w D1
00022364 <AmiBlitz3.ab2@5687>   BEQ.w makelong__skip2
00022366 <AmiBlitz3.ab2@5690>   MOVE.b D4,(A0)+
00022368 <AmiBlitz3.ab2@5691>   MOVEQ.l #$01,D1
0002236A <AmiBlitz3.ab2@5694>   SUBQ.w #4,D3
0002236E <AmiBlitz3.ab2@5695>   BPL.w makelong__loop
00022370 <AmiBlitz3.ab2@5696>   TST.w D1
00022374 <AmiBlitz3.ab2@5697>   BNE.w makelong__skip3
00022378 <AmiBlitz3.ab2@5698>   MOVE.b #"0",(A0)+
0002237A <AmiBlitz3.ab2@5701>   CLR.b (A0)
0002237C <AmiBlitz3.ab2@5702> RTS
0002239C <AmiBlitz3.ab2@5705> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
0002245C <AmiBlitz3.ab2@5706> str_residentpath:       Ds.l 48                                                ;respath org source
0002251C <AmiBlitz3.ab2@5707> str_residentname:       Ds.l 48                                                ;resname org source
00022522 <AmiBlitz3.ab2@5711>   MOVE.l macrobase,D0
00022526 <AmiBlitz3.ab2@5712>    BNE.w create_residentfile
0002252C <AmiBlitz3.ab2@5713>   MOVE.l newtype_string,D0
00022530 <AmiBlitz3.ab2@5714>    BNE.w create_residentfile
00022536 <AmiBlitz3.ab2@5715>   MOVEA.l labelbase,A2
0002253A <AmiBlitz3.ab2@5718>     CMPA.w #$0,A2
0002253E <AmiBlitz3.ab2@5719>      BEQ.w menu_createresidentfile__err
00022546 <AmiBlitz3.ab2@5720>     CMPI.l #$1,$4(A2)
0002254A <AmiBlitz3.ab2@5721>      BEQ.w create_residentfile
0002254C <AmiBlitz3.ab2@5722>     MOVEA.l (A2),A2
00022550 <AmiBlitz3.ab2@5723> BRA.w menu_createresidentfile__loop
0002257A <AmiBlitz3.ab2@5726>   !basic
000225D0 <AmiBlitz3.ab2@5727> 
000225EE <AmiBlitz3.ab2@5728>   !asm
000225F0 <AmiBlitz3.ab2@5729> RTS
0002262E <AmiBlitz3.ab2@5735>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00022634 <AmiBlitz3.ab2@5736>   LEA str_residentrequester,A2
0002263A <AmiBlitz3.ab2@5737>   LEA str_residentpath,A0
00022640 <AmiBlitz3.ab2@5738>   LEA str_residentname,A1
0002266A <AmiBlitz3.ab2@5739>   !basic
000226A2 <AmiBlitz3.ab2@5740>     Poke$ ?str_residentpath,my_residentsdir$
000226CE <AmiBlitz3.ab2@5741>     Poke$ ?str_residentname,".res"
000226EC <AmiBlitz3.ab2@5742>   !asm
000226EE <AmiBlitz3.ab2@5745>   JSR (A3)
000226F2 <AmiBlitz3.ab2@5747>   BEQ.w menu_createresidentfile__err
000226F4 <AmiBlitz3.ab2@5750>   MOVE.l D0,D1
000226FA <AmiBlitz3.ab2@5751>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000226FE <AmiBlitz3.ab2@5752>   MOVEA.l _dosbase(PC),A6
00022702 <AmiBlitz3.ab2@5753>   JSR _Open(A6)
00022704 <AmiBlitz3.ab2@5754>   MOVE.l D0,D7                                             ;handle
00022708 <AmiBlitz3.ab2@5755>   BEQ.w menu_createresidentfile__err
0002270C <AmiBlitz3.ab2@5756>   MOVEM.l d2-d7/a0-a6,-(a7)
00022712 <AmiBlitz3.ab2@5757>   LEA devo,a0
00022718 <AmiBlitz3.ab2@5758>   LEA ptr_parameterstore,a1
0002271A <AmiBlitz3.ab2@5761>     MOVE.b (a0)+,(a1)+
0002271E <AmiBlitz3.ab2@5762>   BNE 'l1
00022720 <AmiBlitz3.ab2@5763>   MOVEQ #13,d2
00022726 <AmiBlitz3.ab2@5764>   JSR findlabel2
0002272A <AmiBlitz3.ab2@5765>   BNE 'd
0002272E <AmiBlitz3.ab2@5766>   TST.l 8(a2)
00022732 <AmiBlitz3.ab2@5767>   BEQ 'd2
0002275C <AmiBlitz3.ab2@5768>   !basic
000227B2 <AmiBlitz3.ab2@5769>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000227D0 <AmiBlitz3.ab2@5770>   !asm
000227D4 <AmiBlitz3.ab2@5771>   MOVEM.l (a7)+,d2-d7/a0-a6
000227D8 <AmiBlitz3.ab2@5772>   MOVEA.l _dosbase(PC),A6
000227DA <AmiBlitz3.ab2@5773>   MOVE.l d7,d1
000227DE <AmiBlitz3.ab2@5774>   JSR _Close(a6)
000227E2 <AmiBlitz3.ab2@5775> BRA menu_createresidentfile__err
000227E6 <AmiBlitz3.ab2@5779>   MOVEM.l (a7)+,d2-d7/a0-a6
000227EA <AmiBlitz3.ab2@5780>   BSR.w call_setpointerbusy
000227EE <AmiBlitz3.ab2@5782>   BSR.w AJL_0_7962
000227F0 <AmiBlitz3.ab2@5783>   MOVE.l D7,D1
000227F6 <AmiBlitz3.ab2@5784>   MOVE.l #tsthead,D2                                       ;header
000227F8 <AmiBlitz3.ab2@5785>   MOVEQ.l #$20,D3
000227FC <AmiBlitz3.ab2@5786>   MOVEA.l _dosbase(PC),A6
00022800 <AmiBlitz3.ab2@5787>   JSR _Write(A6)
00022802 <AmiBlitz3.ab2@5788>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00022806 <AmiBlitz3.ab2@5789>   BSR.w restypes
0002280A <AmiBlitz3.ab2@5790>   BSR.w resmacs
0002280E <AmiBlitz3.ab2@5791>   BSR.w resconsts
00022810 <AmiBlitz3.ab2@5792>   MOVE.l D6,D3
00022812 <AmiBlitz3.ab2@5793>   ADDQ.l #3,D3
00022818 <AmiBlitz3.ab2@5794>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
0002281A <AmiBlitz3.ab2@5795>   MOVE.l D3,-(A7)
0002281C <AmiBlitz3.ab2@5796>   SUB.l D6,D3
00022820 <AmiBlitz3.ab2@5797>   BEQ.w menu_createresidentfile__noalign
00022826 <AmiBlitz3.ab2@5798>   MOVE.l #writelist,D2
00022828 <AmiBlitz3.ab2@5799>   MOVE.l D7,D1
0002282E <AmiBlitz3.ab2@5800>   MOVEA.l _dosbase,A6
00022832 <AmiBlitz3.ab2@5801>   JSR _Write(A6)
0002283C <AmiBlitz3.ab2@5804>    MOVE.l hunkoffsetcounter,tstsize3
00022840 <AmiBlitz3.ab2@5805>    BEQ.w menu_createresidentfile__skip2a
00022842 <AmiBlitz3.ab2@5806>   MOVE.l D7,D1
00022848 <AmiBlitz3.ab2@5807>   MOVE.l #tstend,D2
0002284A <AmiBlitz3.ab2@5808>   MOVEQ.l #$0C,D3
00022850 <AmiBlitz3.ab2@5809>   MOVEA.l _dosbase,A6
00022854 <AmiBlitz3.ab2@5810>    JSR _Write(A6)
0002285A <AmiBlitz3.ab2@5814>   MOVEA.l hunkoffsetbase,A2
0002285E <AmiBlitz3.ab2@5817>   CMPA.w #$0,A2
00022862 <AmiBlitz3.ab2@5818>    BEQ.w menu_createresidentfile__skip2
00022866 <AmiBlitz3.ab2@5819>   LEA $4(A2),A1
00022868 <AmiBlitz3.ab2@5820>   MOVE.l D7,D1
0002286A <AmiBlitz3.ab2@5821>   MOVE.l A1,D2
0002286C <AmiBlitz3.ab2@5822>   MOVEQ.l #$04,D3
00022872 <AmiBlitz3.ab2@5823>   MOVEA.l _dosbase,A6
00022876 <AmiBlitz3.ab2@5824>    JSR _Write(A6)
00022878 <AmiBlitz3.ab2@5825>   MOVEA.l (A2),A2
0002287C <AmiBlitz3.ab2@5826> BRA.w menu_createresidentfile__oloop
0002287E <AmiBlitz3.ab2@5829>   MOVE.l D7,D1
00022884 <AmiBlitz3.ab2@5830>   MOVE.l #zero,D2
00022886 <AmiBlitz3.ab2@5831>   MOVEQ.l #$04,D3
0002288C <AmiBlitz3.ab2@5832>   MOVEA.l _dosbase,A6
00022890 <AmiBlitz3.ab2@5833>   JSR _Write(A6)
00022892 <AmiBlitz3.ab2@5836>   MOVE.l D7,D1
00022898 <AmiBlitz3.ab2@5837>   MOVE.l #tstdone,D2
0002289A <AmiBlitz3.ab2@5838>   MOVEQ.l #$04,D3
000228A0 <AmiBlitz3.ab2@5839>   MOVEA.l _dosbase,A6
000228A4 <AmiBlitz3.ab2@5840>    JSR _Write(A6)
000228A6 <AmiBlitz3.ab2@5841>   MOVE.l (A7)+,D0
000228A8 <AmiBlitz3.ab2@5842>   LSR.l #2,D0
000228AE <AmiBlitz3.ab2@5843>   MOVE.l D0,temp1
000228B0 <AmiBlitz3.ab2@5844>   MOVE.l D7,D1
000228B2 <AmiBlitz3.ab2@5845>   MOVEQ.l #$14,D2
000228B4 <AmiBlitz3.ab2@5846>   MOVEQ.l #-$01,D3
000228B8 <AmiBlitz3.ab2@5847>   JSR _Seek(A6)
000228BA <AmiBlitz3.ab2@5848>   MOVE.l D7,D1
000228C0 <AmiBlitz3.ab2@5849>   MOVE.l #temp1,D2
000228C2 <AmiBlitz3.ab2@5850>   MOVEQ.l #$04,D3
000228C6 <AmiBlitz3.ab2@5851>    JSR _Write(A6)
000228C8 <AmiBlitz3.ab2@5852>   MOVE.l D7,D1
000228CA <AmiBlitz3.ab2@5853>   MOVEQ.l #$1C,D2
000228CC <AmiBlitz3.ab2@5854>   MOVEQ.l #-$01,D3
000228D0 <AmiBlitz3.ab2@5855>    JSR _Seek(A6)
000228D2 <AmiBlitz3.ab2@5856>   MOVE.l D7,D1
000228D8 <AmiBlitz3.ab2@5857>   MOVE.l #temp1,D2
000228DA <AmiBlitz3.ab2@5858>   MOVEQ.l #$04,D3
000228DE <AmiBlitz3.ab2@5859>    JSR _Write(A6)
000228E0 <AmiBlitz3.ab2@5860>   MOVE.l D7,D1
000228E4 <AmiBlitz3.ab2@5861>    JSR _Close(A6)
000228E8 <AmiBlitz3.ab2@5862> BRA.w call_setpointernormal
000228EA <AmiBlitz3.ab2@5866>   ADDQ.w #5,D1
000228EC <AmiBlitz3.ab2@5867>   ADDQ.b #8,D0
000228F0 <AmiBlitz3.ab2@5870>     CMPA.w #$0,A2
000228F4 <AmiBlitz3.ab2@5871>     BEQ.w writelist__done
000228F8 <AmiBlitz3.ab2@5872>      BSR.w writeitem
000228FA <AmiBlitz3.ab2@5873>     MOVEA.l (A2),A2
000228FE <AmiBlitz3.ab2@5874> BRA.w writelist__loop
00022900 <AmiBlitz3.ab2@5877> RTS
00022902 <AmiBlitz3.ab2@5880>   MOVEQ.l #$00,D3
00022906 <AmiBlitz3.ab2@5881>   MOVE.b $0(A2,D5.W),D3
00022908 <AmiBlitz3.ab2@5882>   ADDQ.w #1,D3
0002290C <AmiBlitz3.ab2@5883>   BCLR #$0,D3                                              ;word align
0002290E <AmiBlitz3.ab2@5884>   MOVE.l (A2),-(A7)
00022912 <AmiBlitz3.ab2@5885>    BEQ.w writeitem__skip
00022916 <AmiBlitz3.ab2@5886>    BSR.w resoff
00022918 <AmiBlitz3.ab2@5887>   ADD.l D3,D6
0002291A <AmiBlitz3.ab2@5888>   MOVE.l D6,(A2)
0002291C <AmiBlitz3.ab2@5889>   SUB.l D3,D6
0002291E <AmiBlitz3.ab2@5892>    ADD.l D3,D6
00022920 <AmiBlitz3.ab2@5893>   MOVE.l A2,D2
00022922 <AmiBlitz3.ab2@5894>   MOVE.l D7,D1
00022928 <AmiBlitz3.ab2@5895>   MOVEA.l _dosbase,A6
0002292C <AmiBlitz3.ab2@5896>    JSR _Write(A6)
0002292E <AmiBlitz3.ab2@5897>   MOVE.l (A7)+,(A2)
00022930 <AmiBlitz3.ab2@5898> RTS
00022932 <AmiBlitz3.ab2@5901>   MOVE.l D6,D2
00022936 <AmiBlitz3.ab2@5902> BRA.w addhunkoffset
0002293A <AmiBlitz3.ab2@5906>     CMPA.w #$0,A2
0002293E <AmiBlitz3.ab2@5907>      BEQ.w writeoffs__done
00022944 <AmiBlitz3.ab2@5908>     MOVEA.l newtypebase,A1
00022946 <AmiBlitz3.ab2@5909>     MOVEQ.l #$00,D1
0002294A <AmiBlitz3.ab2@5912>       CMPA.w #$0,A1
0002294E <AmiBlitz3.ab2@5913>       BEQ.w writeoffs__found
00022952 <AmiBlitz3.ab2@5914>       CMPA.l $A(A2),A1
00022956 <AmiBlitz3.ab2@5915>        BEQ.w writeoffs__found
00022958 <AmiBlitz3.ab2@5916>       ADDQ.w #1,D1
0002295A <AmiBlitz3.ab2@5917>       MOVEA.l (A1),A1
0002295E <AmiBlitz3.ab2@5918> BRA.w writeoffs__loop2
00022962 <AmiBlitz3.ab2@5921>     MOVE.w $A(A2),-(A7)
00022966 <AmiBlitz3.ab2@5922>     MOVE.w D1,$A(A2)
0002296A <AmiBlitz3.ab2@5923>      BSR.w writeitem
0002296E <AmiBlitz3.ab2@5924>     MOVE.w (A7)+,$A(A2)
00022970 <AmiBlitz3.ab2@5925>     MOVEA.l (A2),A2
00022974 <AmiBlitz3.ab2@5926> BRA.w writeoffs
00022976 <AmiBlitz3.ab2@5929> RTS
00022978 <AmiBlitz3.ab2@5933>   MOVEQ.l #$00,D0
0002297C <AmiBlitz3.ab2@5936>   CMPA.w #$0,A2
00022980 <AmiBlitz3.ab2@5937>    BEQ.w countem__done
00022982 <AmiBlitz3.ab2@5938>   ADDQ.w #1,D0
00022984 <AmiBlitz3.ab2@5939>   MOVEA.l (A2),A2
00022988 <AmiBlitz3.ab2@5940> BRA.w countem__loop
0002298E <AmiBlitz3.ab2@5943>   MOVE.w D0,temp1
00022990 <AmiBlitz3.ab2@5944>   MOVE.l D7,D1
00022996 <AmiBlitz3.ab2@5945>   MOVE.l #temp1,D2
00022998 <AmiBlitz3.ab2@5946>   MOVEQ.l #$02,D3
0002299A <AmiBlitz3.ab2@5947>   ADDQ.l #2,D6
000229A0 <AmiBlitz3.ab2@5948>   MOVEA.l _dosbase,A6
000229A4 <AmiBlitz3.ab2@5949> JMP _Write(A6)
000229AA <AmiBlitz3.ab2@5953>    TST.b resdisable
000229AE <AmiBlitz3.ab2@5954>    BEQ resmacs__l1
000229B4 <AmiBlitz3.ab2@5955>    MOVE.l currentmacroaddr,a3
000229BA <AmiBlitz3.ab2@5956>    CMP.l #0,a3
000229BE <AmiBlitz3.ab2@5957>    BEQ resmacs__l1
000229C0 <AmiBlitz3.ab2@5958>    MOVE.l (a3),a3
000229C4 <AmiBlitz3.ab2@5959> BRA resmacs__l2
000229CA <AmiBlitz3.ab2@5962>   MOVEA.l macrobase,A3                                     ;??begin org code??
000229CC <AmiBlitz3.ab2@5965>   MOVEA.l A3,A2
000229D0 <AmiBlitz3.ab2@5966>   BSR.w countem
000229D4 <AmiBlitz3.ab2@5969>    CMPA.w #$0,A3
000229D8 <AmiBlitz3.ab2@5970>    BEQ.w resmacs__done
000229DA <AmiBlitz3.ab2@5971>   MOVE.l D6,D5
000229DC <AmiBlitz3.ab2@5972>   MOVE.l (A3),-(A7)
000229E0 <AmiBlitz3.ab2@5973>   MOVE.l $4(A3),-(A7)
000229E2 <AmiBlitz3.ab2@5974>   MOVEQ.l #$00,D3
000229E6 <AmiBlitz3.ab2@5975>   MOVE.b $C(A3),D3
000229E8 <AmiBlitz3.ab2@5976>   ADDQ.w #1,D3
000229EC <AmiBlitz3.ab2@5977>   BCLR #$0,D3
000229EE <AmiBlitz3.ab2@5978>   ADD.l D3,D6                                              ;add len of struct
000229F2 <AmiBlitz3.ab2@5979>   TST.w $8(A3)
000229F6 <AmiBlitz3.ab2@5980>    BEQ.w resmacs__notext
000229FA <AmiBlitz3.ab2@5981>   MOVE.l D6,$4(A3)
000229FC <AmiBlitz3.ab2@5982>   MOVE.l D5,D2
000229FE <AmiBlitz3.ab2@5983>   ADDQ.l #4,D2
00022A02 <AmiBlitz3.ab2@5984>    BSR.w addhunkoffset
00022A04 <AmiBlitz3.ab2@5987>   MOVEQ.l #$00,D4
00022A08 <AmiBlitz3.ab2@5988>   MOVE.w $8(A3),D4
00022A0A <AmiBlitz3.ab2@5989>   ADDQ.w #1,D4
00022A0E <AmiBlitz3.ab2@5990>   BCLR #$0,D4
00022A10 <AmiBlitz3.ab2@5991>   ADD.l D4,D6
00022A12 <AmiBlitz3.ab2@5992>   TST.l (A3)
00022A16 <AmiBlitz3.ab2@5993>    BEQ.w resmacs__nomore
00022A18 <AmiBlitz3.ab2@5994>   MOVE.l D6,(A3)
00022A1A <AmiBlitz3.ab2@5995>   MOVE.l D5,D2
00022A1E <AmiBlitz3.ab2@5996>    BSR.w addhunkoffset
00022A20 <AmiBlitz3.ab2@5999>   MOVE.l A3,D2
00022A22 <AmiBlitz3.ab2@6000>   MOVE.l D7,D1
00022A28 <AmiBlitz3.ab2@6002>    MOVEA.l _dosbase,A6
00022A2C <AmiBlitz3.ab2@6003>    JSR _Write(a6)
00022A2E <AmiBlitz3.ab2@6004>   TST.l D4
00022A32 <AmiBlitz3.ab2@6005>    BEQ.w resmacs__skip
00022A34 <AmiBlitz3.ab2@6006>   MOVE.l (A7),D2
00022A36 <AmiBlitz3.ab2@6007>   MOVE.l D4,D3
00022A38 <AmiBlitz3.ab2@6008>   MOVE.l D7,D1
00022A3E <AmiBlitz3.ab2@6010>     MOVEA.l _dosbase,A6
00022A42 <AmiBlitz3.ab2@6011>    JSR _Write(A6)
00022A46 <AmiBlitz3.ab2@6014>   MOVE.l (A7)+,$4(A3)
00022A48 <AmiBlitz3.ab2@6015>   MOVE.l (A7)+,(A3)
00022A4A <AmiBlitz3.ab2@6016>   MOVEA.l (A3),A3
00022A4E <AmiBlitz3.ab2@6017> BRA.w resmacs__loop
00022A50 <AmiBlitz3.ab2@6020> RTS
00022A56 <AmiBlitz3.ab2@6024>   TST.b resdisable
00022A5A <AmiBlitz3.ab2@6025>   BEQ restypes__l1
00022A60 <AmiBlitz3.ab2@6026>   MOVE.l lastrestype,a3
00022A66 <AmiBlitz3.ab2@6027>   CMP.l #0,a3
00022A6A <AmiBlitz3.ab2@6028>   BEQ restypes__l1
00022A6C <AmiBlitz3.ab2@6029>   MOVE.l (a3),a3
00022A70 <AmiBlitz3.ab2@6030> BRA restypes__l2
00022A76 <AmiBlitz3.ab2@6033>   MOVEA.l newtype_string,A3
00022A78 <AmiBlitz3.ab2@6036>   MOVEA.l A3,A2
00022A7C <AmiBlitz3.ab2@6037>    BSR.w countem
00022A80 <AmiBlitz3.ab2@6040>    CMPA.w #$0,A3
00022A84 <AmiBlitz3.ab2@6041>    BEQ.w restypes__done
00022A86 <AmiBlitz3.ab2@6042>   MOVE.l D6,-(A7)
00022A8A <AmiBlitz3.ab2@6043>   MOVEA.l $4(A3),A2
00022A8C <AmiBlitz3.ab2@6044>   MOVEQ.l #$0E,D5
00022A90 <AmiBlitz3.ab2@6045>    BSR.w writeoffs
00022A92 <AmiBlitz3.ab2@6046>   MOVE.l (A7)+,D0
00022A96 <AmiBlitz3.ab2@6047>   MOVE.l $4(A3),-(A7)
00022A9A <AmiBlitz3.ab2@6048>   MOVE.l D0,$4(A3)
00022A9C <AmiBlitz3.ab2@6049>   MOVE.l D6,D2
00022A9E <AmiBlitz3.ab2@6050>   ADDQ.l #4,D2
00022AA2 <AmiBlitz3.ab2@6051>    BSR.w addhunkoffset
00022AA4 <AmiBlitz3.ab2@6052>   MOVEQ.l #$00,D3
00022AA8 <AmiBlitz3.ab2@6053>   MOVE.b $A(A3),D3
00022AAA <AmiBlitz3.ab2@6054>   ADDQ.w #1,D3
00022AAE <AmiBlitz3.ab2@6055>   BCLR #$0,D3
00022AB0 <AmiBlitz3.ab2@6056>   ADD.l D3,D6
00022AB2 <AmiBlitz3.ab2@6057>   MOVE.l A3,D2
00022AB4 <AmiBlitz3.ab2@6058>   MOVE.l D7,D1
00022ABA <AmiBlitz3.ab2@6060>     MOVEA.l _dosbase,A6
00022ABE <AmiBlitz3.ab2@6061>     JSR _Write(A6)
00022AC2 <AmiBlitz3.ab2@6062>   MOVE.l (A7)+,$4(A3)
00022AC4 <AmiBlitz3.ab2@6063>   MOVEA.l (A3),A3
00022AC8 <AmiBlitz3.ab2@6064> BRA.w restypes__loop
00022ACA <AmiBlitz3.ab2@6067> RTS
00022AD0 <AmiBlitz3.ab2@6071>    TST.b resdisable
00022AD4 <AmiBlitz3.ab2@6072>    BEQ resconsts__l1
00022ADA <AmiBlitz3.ab2@6073>    MOVE.l currentlabeladdr,a2
00022AE0 <AmiBlitz3.ab2@6074>    CMP.l #0,a2
00022AE4 <AmiBlitz3.ab2@6075>    BEQ resconsts__l1
00022AE6 <AmiBlitz3.ab2@6076>    MOVE.l (a2),a2
00022AEA <AmiBlitz3.ab2@6077> BRA resconsts__l2
00022AF0 <AmiBlitz3.ab2@6080>    MOVEA.l labelbase,A2
00022AF2 <AmiBlitz3.ab2@6083>    MOVEQ.l #$00,D0
00022AF6 <AmiBlitz3.ab2@6086>    CMPA.w #$0,A2
00022AFA <AmiBlitz3.ab2@6087>    BEQ.w resconsts__done
00022B02 <AmiBlitz3.ab2@6088>   CMPI.l #$1,$4(A2)
00022B06 <AmiBlitz3.ab2@6089>    BNE.w resconsts__next
00022B08 <AmiBlitz3.ab2@6090>   ADDQ.w #1,D0
00022B0A <AmiBlitz3.ab2@6093>   MOVEA.l (A2),A2
00022B0E <AmiBlitz3.ab2@6094> BRA.w resconsts__loop
00022B14 <AmiBlitz3.ab2@6097>   MOVE.w D0,temp1
00022B16 <AmiBlitz3.ab2@6098>   MOVE.l D7,D1
00022B1C <AmiBlitz3.ab2@6099>   MOVE.l #temp1,D2
00022B1E <AmiBlitz3.ab2@6100>   MOVEQ.l #$02,D3
00022B20 <AmiBlitz3.ab2@6101>   ADDQ.l #2,D6
00022B26 <AmiBlitz3.ab2@6103>     MOVEA.l _dosbase,A6
00022B2A <AmiBlitz3.ab2@6104>     JSR _Write(A6)
00022B30 <AmiBlitz3.ab2@6105>    TST.b resdisable
00022B34 <AmiBlitz3.ab2@6106>    BEQ resconsts__done_l1
00022B3A <AmiBlitz3.ab2@6107>    MOVE.l currentlabeladdr,a2
00022B40 <AmiBlitz3.ab2@6108>    CMP.l #0,a2
00022B44 <AmiBlitz3.ab2@6109>    BEQ resconsts__done_l1
00022B46 <AmiBlitz3.ab2@6110>    MOVE.l (a2),a2
00022B4A <AmiBlitz3.ab2@6111> BRA resconsts__loop2
00022B50 <AmiBlitz3.ab2@6114>    MOVEA.l labelbase,A2                                    ;write resident labels
00022B54 <AmiBlitz3.ab2@6117>    CMPA.w #$0,A2
00022B58 <AmiBlitz3.ab2@6118>    BEQ.w resconsts__done2
00022B60 <AmiBlitz3.ab2@6119>   CMPI.l #$1,$4(A2)
00022B64 <AmiBlitz3.ab2@6120>    BNE.w resconsts__next2
00022B66 <AmiBlitz3.ab2@6121>    MOVEQ.l #$00,D3
00022B6A <AmiBlitz3.ab2@6122>   MOVE.b $12(A2),D3                                        ;length
00022B6C <AmiBlitz3.ab2@6123>   ADDQ.w #1,D3
00022B70 <AmiBlitz3.ab2@6124>   BCLR #$0,D3
00022B72 <AmiBlitz3.ab2@6125>   MOVE.l D6,D2
00022B74 <AmiBlitz3.ab2@6126>   ADD.l D3,D6
00022B76 <AmiBlitz3.ab2@6129>   MOVE.l (A2),-(A7)
00022B78 <AmiBlitz3.ab2@6130>   TST.l (A2)
00022B7C <AmiBlitz3.ab2@6131>    BEQ.w resconsts__nonext
00022B7E <AmiBlitz3.ab2@6132>   MOVE.l D6,(A2)
00022B82 <AmiBlitz3.ab2@6133>    BSR.w addhunkoffset
00022B84 <AmiBlitz3.ab2@6136>   MOVE.l A2,D2
00022B86 <AmiBlitz3.ab2@6137>   MOVE.l D7,D1
00022B8C <AmiBlitz3.ab2@6139>     MOVEA.l _dosbase,A6
00022B90 <AmiBlitz3.ab2@6140>     JSR _Write(A6)
00022B92 <AmiBlitz3.ab2@6141>   MOVE.l (A7)+,(A2)
00022B94 <AmiBlitz3.ab2@6144>   MOVEA.l (A2),A2
00022B98 <AmiBlitz3.ab2@6145> BRA.w resconsts__loop2
00022B9A <AmiBlitz3.ab2@6148> RTS
00022BC4 <AmiBlitz3.ab2@6152>    !basic
00022BCA <AmiBlitz3.ab2@6153>     MOVE.l ptr_resfile,d0
00022BDA <AmiBlitz3.ab2@6154>     resfileP.l = Peek.l(?ptr_resfile)
00022BE4 <AmiBlitz3.ab2@6155>     If resfileP
00022C0C <AmiBlitz3.ab2@6156>       resfile$ = Peek.s(resfileP)
00022C58 <AmiBlitz3.ab2@6157>       tests.b = Instr(resfile$,"/")
00022CA4 <AmiBlitz3.ab2@6158>       testc.b = Instr(resfile$,":")
00022CC6 <AmiBlitz3.ab2@6159>       If tests=0 AND testc=0
00022D46 <AmiBlitz3.ab2@6160>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00022D58 <AmiBlitz3.ab2@6161>         Poke.l ?ptr_resfile,&resfile$
00022D5E <AmiBlitz3.ab2@6163>     Else
00022D8C <AmiBlitz3.ab2@6164>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00022DAA <AmiBlitz3.ab2@6166>    !asm
00022DAC <AmiBlitz3.ab2@6167> RTS
00022DB2 <AmiBlitz3.ab2@6171>   MOVE.l A7,errstack
00022DBC <AmiBlitz3.ab2@6173>   MOVE.l #next_resentry,errcont
00022DC4 <AmiBlitz3.ab2@6174>   MOVE.w #$FFFF,ezerr
00022DC8 <AmiBlitz3.ab2@6175>   BSR.w Aclearallvars
00022DCC <AmiBlitz3.ab2@6176>   BSR.w free_residents
00022DD2 <AmiBlitz3.ab2@6178>   LEA residents_table,A5
00022DD4 <AmiBlitz3.ab2@6179>   MOVEQ.l #$07,D6
00022DD6 <AmiBlitz3.ab2@6182>     TST.b (A5)
00022DDA <AmiBlitz3.ab2@6183>     BEQ.w next_resentry
00022DE0 <AmiBlitz3.ab2@6184>     MOVE.l A5,ptr_resfile
00022DE4 <AmiBlitz3.ab2@6185>     BSR check_residentpath
00022DEA <AmiBlitz3.ab2@6186>     MOVE.l ptr_resfile,d1
00022DF0 <AmiBlitz3.ab2@6187>     MOVEA.l _dosbase,A6
00022DF4 <AmiBlitz3.ab2@6188>     JSR _LoadSeg(A6)
00022DF8 <AmiBlitz3.ab2@6189>     MOVE.l D0,$40(A5)
00022DFC <AmiBlitz3.ab2@6190>     BNE.w reloadresident__yeah
00022E00 <AmiBlitz3.ab2@6191>     BSR.w reserr
00022E02 <AmiBlitz3.ab2@6194>     MOVEA.l D0,A3
00022E04 <AmiBlitz3.ab2@6195>     ADDA.l A3,A3
00022E06 <AmiBlitz3.ab2@6196>     ADDA.l A3,A3
00022E08 <AmiBlitz3.ab2@6197>     ADDQ.w #4,A3                                           ;start of res
00022E0C <AmiBlitz3.ab2@6198>     BSR.w JL_0_5A9E
00022E10 <AmiBlitz3.ab2@6199>     BSR.w JL_0_5A62                                        ;add macros to list
00022E14 <AmiBlitz3.ab2@6200>     BSR.w JL_0_5A32                                        ;read labels
00022E18 <AmiBlitz3.ab2@6203>     LEA ResidentEntryStep(A5),A5       ;$44
00022E1C <AmiBlitz3.ab2@6204>   DBF D6,reloadresident__loop
00022E26 <AmiBlitz3.ab2@6209>   MOVE.l #free_residents,errcont
00022E2C <AmiBlitz3.ab2@6211>   MOVEA.l newtype_string,A3
00022E2E <AmiBlitz3.ab2@6212>   MOVEQ.l #$0B,D7
00022E32 <AmiBlitz3.ab2@6213>   BSR.w checkclash
00022E38 <AmiBlitz3.ab2@6215>   MOVEA.l macrobase,A3
00022E3A <AmiBlitz3.ab2@6216>   MOVEQ.l #$d,D7
00022E3E <AmiBlitz3.ab2@6217>   BSR.w checkclash
00022E44 <AmiBlitz3.ab2@6219>   MOVEA.l firstconst,A3
00022E46 <AmiBlitz3.ab2@6220>   MOVEQ.l #$19,D7
00022E4A <AmiBlitz3.ab2@6221>   BSR.w checkclash
00022E4C <AmiBlitz3.ab2@6224> RTS
00022E4E <AmiBlitz3.ab2@6228>   MOVEA.l A3,A4
00022E52 <AmiBlitz3.ab2@6231>     CMPA.w #$0,A4
00022E56 <AmiBlitz3.ab2@6232>     BEQ.w checkclash__done
00022E5C <AmiBlitz3.ab2@6234>     LEA ptr_parameterstore,A0
00022E60 <AmiBlitz3.ab2@6235>     LEA $0(A4,D7.W),A1
00022E62 <AmiBlitz3.ab2@6236>     MOVEQ.l #-$01,D2
00022E64 <AmiBlitz3.ab2@6239>       ADDQ.w #1,D2
00022E66 <AmiBlitz3.ab2@6240>       MOVE.b (A1)+,(A0)+
00022E6A <AmiBlitz3.ab2@6241>     BNE.w checkclash__loop2
00022E6C <AmiBlitz3.ab2@6242>     MOVEA.l A3,A2
00022E70 <AmiBlitz3.ab2@6245>     BSR.w findlab
00022E74 <AmiBlitz3.ab2@6246>     BNE.w checkclash__next                                  ;not found
00022E76 <AmiBlitz3.ab2@6247>     CMPA.l A2,A4
00022E7A <AmiBlitz3.ab2@6248>     BEQ.w checkclash__l1
00022E7C <AmiBlitz3.ab2@6249>     MOVE.l a1,a5
00022E80 <AmiBlitz3.ab2@6250> BRA clasherr
00022E84 <AmiBlitz3.ab2@6253> BRA.w checkclash__more
00022E86 <AmiBlitz3.ab2@6256>     MOVEA.l (A4),A4
00022E8A <AmiBlitz3.ab2@6257> BRA.w checkclash__loop
00022E8C <AmiBlitz3.ab2@6260> RTS
00022E92 <AmiBlitz3.ab2@6264>   MOVEA.l _dosbase,A6
00022E98 <AmiBlitz3.ab2@6266>   LEA newtype_string,A0
00022E9E <AmiBlitz3.ab2@6267>   MOVE.l A0,lastrestype
00022EA0 <AmiBlitz3.ab2@6268>   CLR.l (A0)
00022EA6 <AmiBlitz3.ab2@6270>   LEA macrobase,A0
00022EAC <AmiBlitz3.ab2@6271>   MOVE.l A0,currentmacroaddr
00022EAE <AmiBlitz3.ab2@6272>   CLR.l (A0)
00022EB4 <AmiBlitz3.ab2@6274>   LEA labelbase,A0
00022EBA <AmiBlitz3.ab2@6275>   MOVE.l A0,currentlabeladdr
00022EBC <AmiBlitz3.ab2@6276>   CLR.l (A0)
00022EC2 <AmiBlitz3.ab2@6277>   CLR.w rescnt
00022EFA <AmiBlitz3.ab2@6281>   !ComData_SetB{comByte_DebugMode,debugmode}
00022F00 <AmiBlitz3.ab2@6284>   LEA residents_table,A2
00022F02 <AmiBlitz3.ab2@6285>   MOVEQ.l #$07,D2
00022F06 <AmiBlitz3.ab2@6288>      MOVE.l $40(A2),D1
00022F0A <AmiBlitz3.ab2@6289>      BEQ.w free_residents__next
00022F0E <AmiBlitz3.ab2@6290>       CLR.l $40(A2)
00022F14 <AmiBlitz3.ab2@6291>       MOVEA.l _dosbase,A6
00022F18 <AmiBlitz3.ab2@6292>       JSR _UnLoadSeg(A6)
00022F1C <AmiBlitz3.ab2@6295>      LEA ResidentEntryStep(A2),A2   ; $44
00022F20 <AmiBlitz3.ab2@6296>    DBF D2,free_residents__loop
00022F22 <AmiBlitz3.ab2@6298> RTS
00022F24 <AmiBlitz3.ab2@6302>   MOVE.w (A3)+,D1
00022F28 <AmiBlitz3.ab2@6303>   BEQ.w JL_0_5A60
00022F2E <AmiBlitz3.ab2@6304>   MOVEA.l currentlabeladdr,A2
00022F30 <AmiBlitz3.ab2@6305>   MOVE.l A3,(A2)
00022F32 <AmiBlitz3.ab2@6306>   SUBQ.w #1,D1
00022F34 <AmiBlitz3.ab2@6309>     MOVEA.l A3,A2
00022F36 <AmiBlitz3.ab2@6310>     MOVEA.l (A3),A3
00022F3A <AmiBlitz3.ab2@6311>   DBF D1,JL_0_5A42
00022F3C <AmiBlitz3.ab2@6313>   CLR.l (a2)                                               ;bugfix for object
00022F42 <AmiBlitz3.ab2@6314>   MOVE.l A2,currentlabeladdr
00022F44 <AmiBlitz3.ab2@6315>   MOVEA.l A2,A3
00022F46 <AmiBlitz3.ab2@6316>   MOVEQ.l #$00,D0
00022F4A <AmiBlitz3.ab2@6317>   MOVE.b $12(A3),D0
00022F4C <AmiBlitz3.ab2@6318>   ADDQ.w #1,D0
00022F50 <AmiBlitz3.ab2@6319>   BCLR #$0,D0
00022F52 <AmiBlitz3.ab2@6320>   ADDA.w D0,A3
00022F54 <AmiBlitz3.ab2@6323> RTS
00022F56 <AmiBlitz3.ab2@6327>   MOVE.w (A3)+,D1
00022F5A <AmiBlitz3.ab2@6328>   BEQ.w JL_0_5A9C
00022F60 <AmiBlitz3.ab2@6330>   MOVEA.l currentmacroaddr,A2
00022F62 <AmiBlitz3.ab2@6331>   MOVE.l A3,(A2)
00022F64 <AmiBlitz3.ab2@6332>   SUBQ.w #1,D1
00022F66 <AmiBlitz3.ab2@6335>     MOVEA.l A3,A2
00022F68 <AmiBlitz3.ab2@6336>     MOVEA.l (A3),A3
00022F6C <AmiBlitz3.ab2@6337>   DBF D1,JL_0_5A72
00022F72 <AmiBlitz3.ab2@6339>   MOVE.l A2,currentmacroaddr
00022F74 <AmiBlitz3.ab2@6340>   MOVEA.l A2,A3
00022F76 <AmiBlitz3.ab2@6341>   MOVEQ.l #$00,D0
00022F7A <AmiBlitz3.ab2@6342>   MOVE.b $C(A3),D0
00022F7C <AmiBlitz3.ab2@6343>   ADDQ.w #1,D0
00022F80 <AmiBlitz3.ab2@6344>   BCLR #$0,D0
00022F84 <AmiBlitz3.ab2@6345>   MOVE.w $8(A3),D1
00022F86 <AmiBlitz3.ab2@6346>   ADDQ.w #1,D1
00022F8A <AmiBlitz3.ab2@6347>   BCLR #$0,D1
00022F8C <AmiBlitz3.ab2@6348>   ADDA.w D0,A3
00022F8E <AmiBlitz3.ab2@6349>   ADDA.w D1,A3
00022F90 <AmiBlitz3.ab2@6352> RTS
00022F92 <AmiBlitz3.ab2@6356>   MOVE.w (A3)+,D1
00022F96 <AmiBlitz3.ab2@6357>   BEQ.w JL_0_5B38
00022F98 <AmiBlitz3.ab2@6358>   MOVE.w D1,-(A7)
00022F9A <AmiBlitz3.ab2@6359>   SUBQ.w #1,D1
00022FA0 <AmiBlitz3.ab2@6360>   MOVEA.l lastrestype,A2
00022FA2 <AmiBlitz3.ab2@6361>   MOVE.l A2,-(A7)
00022FA4 <AmiBlitz3.ab2@6364>       MOVE.l (A3),D0
00022FA8 <AmiBlitz3.ab2@6365>       BEQ.w JL_0_5ABC
00022FAA <AmiBlitz3.ab2@6366>       MOVEA.l D0,A3
00022FAE <AmiBlitz3.ab2@6367> BRA.w JL_0_5AB0
00022FB2 <AmiBlitz3.ab2@6370>       MOVE.b $E(A3),D0
00022FB4 <AmiBlitz3.ab2@6371>       ADDQ.w #1,D0
00022FB8 <AmiBlitz3.ab2@6372>       BCLR #$0,D0
00022FBA <AmiBlitz3.ab2@6373>       ADDA.w D0,A3
00022FBC <AmiBlitz3.ab2@6374>       MOVE.l A3,(A2)
00022FBE <AmiBlitz3.ab2@6375>       MOVEA.l A3,A2
00022FC0 <AmiBlitz3.ab2@6376>       MOVEQ.l #$00,D0
00022FC4 <AmiBlitz3.ab2@6377>       MOVE.b $A(A3),D0
00022FC6 <AmiBlitz3.ab2@6378>       ADDQ.w #1,D0
00022FCA <AmiBlitz3.ab2@6379>       BCLR #$0,D0
00022FCC <AmiBlitz3.ab2@6380>       ADDA.w D0,A3
00022FD0 <AmiBlitz3.ab2@6381>   DBF D1,JL_0_5AB0
00022FD2 <AmiBlitz3.ab2@6383>   MOVEA.l (A7)+,A0
00022FD4 <AmiBlitz3.ab2@6384>   MOVEA.l (A0),A0
00022FD8 <AmiBlitz3.ab2@6387>     CMPA.w #$0,A0
00022FDC <AmiBlitz3.ab2@6388>     BEQ.w JL_0_5B2A
00022FE0 <AmiBlitz3.ab2@6389>     MOVEA.l $4(A0),A1
00022FE4 <AmiBlitz3.ab2@6392>     CMPA.w #$0,A1
00022FE8 <AmiBlitz3.ab2@6393>     BEQ.w JL_0_5B24
00022FEC <AmiBlitz3.ab2@6394>     MOVE.w $A(A1),D0
00022FF2 <AmiBlitz3.ab2@6395>     MOVEA.l newtypebase,A4
00022FF6 <AmiBlitz3.ab2@6396>     CMP.w #$7,D0
00022FFA <AmiBlitz3.ab2@6397>     BCS.w JL_0_5B0E
00023000 <AmiBlitz3.ab2@6398>     SUB.w rescnt,D0
00023002 <AmiBlitz3.ab2@6401>     SUBQ.w #1,D0
00023006 <AmiBlitz3.ab2@6402>     BMI.w JL_0_5B1A
00023008 <AmiBlitz3.ab2@6405>        MOVEA.l (A4),A4
0002300C <AmiBlitz3.ab2@6406>   DBF D0,JL_0_5B14
00023010 <AmiBlitz3.ab2@6409>     MOVE.l A4,$A(A1)
00023012 <AmiBlitz3.ab2@6410>     MOVEA.l (A1),A1
00023016 <AmiBlitz3.ab2@6411> BRA.w JL_0_5AEE
00023018 <AmiBlitz3.ab2@6414>     MOVEA.l (A0),A0
0002301C <AmiBlitz3.ab2@6415> BRA.w JL_0_5AE2
0002301E <AmiBlitz3.ab2@6418>   MOVE.w (A7)+,D0
00023024 <AmiBlitz3.ab2@6419>   ADD.w D0,rescnt
0002302A <AmiBlitz3.ab2@6420>   MOVE.l A2,lastrestype
0002302C <AmiBlitz3.ab2@6423> RTS
00023032 <AmiBlitz3.ab2@6427>   LEA tokens,A0
00023036 <AmiBlitz3.ab2@6428>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00023038 <AmiBlitz3.ab2@6431>     MOVEA.l (A0),A0
0002303C <AmiBlitz3.ab2@6432>   DBF D0,JL_0_5BD0
00023042 <AmiBlitz3.ab2@6434>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00023046 <AmiBlitz3.ab2@6435>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
0002304A <AmiBlitz3.ab2@6438>       LEA $6(A0),A2
0002304C <AmiBlitz3.ab2@6441>         TST.b (A2)+
00023050 <AmiBlitz3.ab2@6442>       BNE.w JL_0_5BE4
00023052 <AmiBlitz3.ab2@6445>         TST.b (A2)+
00023056 <AmiBlitz3.ab2@6446>       BNE.w JL_0_5BEA
00023058 <AmiBlitz3.ab2@6448>       ADDQ.w #1,A2
0002305A <AmiBlitz3.ab2@6449>       EXG.l D1,A2
0002305E <AmiBlitz3.ab2@6450>       BCLR #$0,D1
00023060 <AmiBlitz3.ab2@6451>       EXG.l D1,A2
00023062 <AmiBlitz3.ab2@6452>       MOVE.l A2,(A1)+
00023064 <AmiBlitz3.ab2@6453>       MOVEA.l (A0),A0
00023068 <AmiBlitz3.ab2@6454>   DBF D0,JL_0_5BE0
0002306A <AmiBlitz3.ab2@6455> RTS
0002306E <AmiBlitz3.ab2@6459>   BSR.w asmconst
00023070 <AmiBlitz3.ab2@6460>   MOVEQ.l #$0B,D5
00023072 <AmiBlitz3.ab2@6461> RTS
00023074 <AmiBlitz3.ab2@6464> unmove:  Ds.w 1
00023078 <AmiBlitz3.ab2@6468>   MOVE.w #$48E7,D1
0002307C <AmiBlitz3.ab2@6469>   BSR.w writeword                                          ;movem.l -(a7)
00023080 <AmiBlitz3.ab2@6470>   MOVE.w #$000F,D2
00023082 <AmiBlitz3.ab2@6471>   SUB.w D4,D2
00023084 <AmiBlitz3.ab2@6472>   MOVEQ.l #-$01,D1
00023086 <AmiBlitz3.ab2@6473>   BCLR D2,D1
0002308A <AmiBlitz3.ab2@6474>   BSR.w writeword
0002308C <AmiBlitz3.ab2@6475>   MOVEQ.l #-$01,D1
0002308E <AmiBlitz3.ab2@6476>   BCLR D4,D1
00023094 <AmiBlitz3.ab2@6477>   MOVE.w D1,unmove
00023096 <AmiBlitz3.ab2@6478> RTS
0002309A <AmiBlitz3.ab2@6482>   MOVE.w #$4CDF,D1
0002309E <AmiBlitz3.ab2@6483>   BSR.w writeword
000230A2 <AmiBlitz3.ab2@6484>   MOVE.w unmove(PC),D1
000230A6 <AmiBlitz3.ab2@6485> BRA.w writeword
000230AA <AmiBlitz3.ab2@6498>   BSR.w JL_0_5D22
000230AE <AmiBlitz3.ab2@6499>   CMP.w #$2C,D0                                            ;#','
000230B2 <AmiBlitz3.ab2@6500>    BNE.w syntaxerr
000230B8 <AmiBlitz3.ab2@6501>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
000230BC <AmiBlitz3.ab2@6502>    BSR.w writelong
000230BE <AmiBlitz3.ab2@6503>   MOVE.w D4,D1
000230C2 <AmiBlitz3.ab2@6504>   ORI.w #$2F00,D1
000230C6 <AmiBlitz3.ab2@6505>    BSR.w writeword
000230CA <AmiBlitz3.ab2@6506>    BSR.w get1bytemain
000230CE <AmiBlitz3.ab2@6507>    BSR.w getparameter
000230D2 <AmiBlitz3.ab2@6508>    BSR.w JL_0_8E3C
000230D6 <AmiBlitz3.ab2@6509>    BSR.w calcvar
000230DA <AmiBlitz3.ab2@6510>    BTST #$E,D2
000230DE <AmiBlitz3.ab2@6511>    BEQ.w JL_0_5C80
000230E2 <AmiBlitz3.ab2@6514>    MOVE.b #$3,D2
000230E6 <AmiBlitz3.ab2@6515> BRA.w JL_0_5C8E
000230E8 <AmiBlitz3.ab2@6518>   TST.b D2
000230EC <AmiBlitz3.ab2@6519>    BEQ.w JL_0_5C78
000230F0 <AmiBlitz3.ab2@6520>   CMP.b #$7,D2
000230F4 <AmiBlitz3.ab2@6521>    BEQ.w JL_0_5C78
000230F8 <AmiBlitz3.ab2@6524>   BTST #$F,D2
000230FC <AmiBlitz3.ab2@6525>    BNE.w JL_0_5CA4
00023100 <AmiBlitz3.ab2@6526>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00023104 <AmiBlitz3.ab2@6527>    BSR.w writeword
00023106 <AmiBlitz3.ab2@6528>   MOVE.w D3,D1
0002310A <AmiBlitz3.ab2@6529>    BSR.w writeword
0002310E <AmiBlitz3.ab2@6532>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00023112 <AmiBlitz3.ab2@6533>    BSR.w writeword
00023116 <AmiBlitz3.ab2@6534>   MOVE.w #$1480,D1
0002311A <AmiBlitz3.ab2@6535>   CMP.b #$1,D2
0002311E <AmiBlitz3.ab2@6536>    BEQ.w JL_0_5CC8
00023122 <AmiBlitz3.ab2@6537>   EORI.w #$3000,D1
00023126 <AmiBlitz3.ab2@6538>   CMP.b #$2,D2
0002312A <AmiBlitz3.ab2@6539>    BNE.w JL_0_5CC8
0002312E <AmiBlitz3.ab2@6540>   ORI.w #$1000,D1
00023132 <AmiBlitz3.ab2@6543>   BSR.w writeword
00023138 <AmiBlitz3.ab2@6544>   MOVE.l #$4CDF7FFF,D1
0002313C <AmiBlitz3.ab2@6545> BRA.w writelong
00023140 <AmiBlitz3.ab2@6549>   BSR.w JL_0_5D22
00023144 <AmiBlitz3.ab2@6550>   CMP.w #$2C,D0
00023148 <AmiBlitz3.ab2@6551>    BNE.w syntaxerr
0002314C <AmiBlitz3.ab2@6552>    BSR.w regmovems
0002314E <AmiBlitz3.ab2@6553>   MOVE.w D4,-(A7)
00023150 <AmiBlitz3.ab2@6554>   MOVEQ.l #$03,D2
00023154 <AmiBlitz3.ab2@6555>    BSR.w eval
00023156 <AmiBlitz3.ab2@6556>   MOVE.w (A7)+,D1
0002315A <AmiBlitz3.ab2@6557>    BEQ.w JL_0_5D1A
0002315E <AmiBlitz3.ab2@6558>   CMP.w #$8,D1
00023162 <AmiBlitz3.ab2@6559>    BCC.w JL_0_5D0C
00023164 <AmiBlitz3.ab2@6560>   LSL.w #8,D1
00023166 <AmiBlitz3.ab2@6561>   LSL.w #1,D1
0002316A <AmiBlitz3.ab2@6562>   ORI.w #$2000,D1
0002316E <AmiBlitz3.ab2@6563>    BSR.w writeword
00023172 <AmiBlitz3.ab2@6564> BRA.w JL_0_5D1A
00023174 <AmiBlitz3.ab2@6567>   SUBQ.w #8,D1
00023176 <AmiBlitz3.ab2@6568>   LSL.w #8,D1
00023178 <AmiBlitz3.ab2@6569>   LSL.w #1,D1
0002317C <AmiBlitz3.ab2@6570>   ORI.w #$2040,D1
00023180 <AmiBlitz3.ab2@6571>   BSR.w writeword
00023184 <AmiBlitz3.ab2@6574> BRA.w dounmove
00023188 <AmiBlitz3.ab2@6578>   BSR.w get1bytemain
0002318C <AmiBlitz3.ab2@6581>   ORI.w #$20,D0
00023190 <AmiBlitz3.ab2@6582>   CMP.w #$64,D0
00023194 <AmiBlitz3.ab2@6583>    BEQ.w JL_0_5D4E
00023198 <AmiBlitz3.ab2@6584>   CMP.w #$61,D0
0002319C <AmiBlitz3.ab2@6585>    BNE.w syntaxerr
000231A0 <AmiBlitz3.ab2@6586>    BSR.w JL_0_5D4E
000231A2 <AmiBlitz3.ab2@6587>   ADDQ.w #8,D4
000231A4 <AmiBlitz3.ab2@6588> RTS
000231D0 <AmiBlitz3.ab2@6592>   !fget                                                   ;bsr.w get1bytemain
000231D4 <AmiBlitz3.ab2@6594>   ORI.w #$20,D0
000231D8 <AmiBlitz3.ab2@6597>   CMP.w #$61,D0
000231DC <AmiBlitz3.ab2@6598>   BNE.w syntaxerr
00023208 <AmiBlitz3.ab2@6601>   !fget                                                    ;bsr.w get1bytemain
0002320C <AmiBlitz3.ab2@6602>   SUBI.w #$30,D0
00023210 <AmiBlitz3.ab2@6603>    BMI.w syntaxerr
00023214 <AmiBlitz3.ab2@6604>   CMP.w #$7,D0
00023218 <AmiBlitz3.ab2@6605>    BHI.w syntaxerr
0002321A <AmiBlitz3.ab2@6606>   MOVE.w D0,D4
00023246 <AmiBlitz3.ab2@6607>   !fget
00023248 <AmiBlitz3.ab2@6608> RTS                                                        ;bra.w get1bytemain
0002324A <AmiBlitz3.ab2@6612>   ADDQ.w #8,D4
0002324C <AmiBlitz3.ab2@6615>   MOVEQ.l #$00,D5
00023250 <AmiBlitz3.ab2@6616>   SUBI.w #$30,D4
00023254 <AmiBlitz3.ab2@6619>   CMP.w #$2D,D0
00023258 <AmiBlitz3.ab2@6620>    BEQ.w JL_0_5D9E
0002325C <AmiBlitz3.ab2@6621>   CMP.w #$2F,D0
00023260 <AmiBlitz3.ab2@6622>    BEQ.w JL_0_5D8C
00023264 <AmiBlitz3.ab2@6623> BRA.w syntaxerr
00023266 <AmiBlitz3.ab2@6626>   BSET D4,D5
00023268 <AmiBlitz3.ab2@6629>   MOVE.w D5,D4
0002326A <AmiBlitz3.ab2@6630>   MOVEQ.l #$0F,D5
0002326C <AmiBlitz3.ab2@6631> RTS
0002326E <AmiBlitz3.ab2@6634>   BSET D4,D5
00023272 <AmiBlitz3.ab2@6635>   BSR.w JL_0_5D1E
00023284 <AmiBlitz3.ab2@6636>   !compare3                                                ;bsr.w JL_0_5FC0
00023288 <AmiBlitz3.ab2@6637>   BNE.w JL_0_5D70
0002328C <AmiBlitz3.ab2@6638> BRA.w JL_0_5D84
0002328E <AmiBlitz3.ab2@6641>   MOVE.w D4,D1
00023292 <AmiBlitz3.ab2@6642>    BSR.w JL_0_5D1E
00023294 <AmiBlitz3.ab2@6643>   CMP.w D4,D1
00023298 <AmiBlitz3.ab2@6644>    BLS.w JL_0_5DAC
0002329A <AmiBlitz3.ab2@6645>   EXG.l D4,D1
0002329C <AmiBlitz3.ab2@6648>   BSET D1,D5
0002329E <AmiBlitz3.ab2@6649>   ADDQ.w #1,D1
000232A0 <AmiBlitz3.ab2@6650>   CMP.w D4,D1
000232A4 <AmiBlitz3.ab2@6651>    BLS.w JL_0_5DAC
000232B6 <AmiBlitz3.ab2@6652>   !compare3                                                ;bsr.w JL_0_5FC0
000232BA <AmiBlitz3.ab2@6653>   BNE.w JL_0_5D70
000232BE <AmiBlitz3.ab2@6654> BRA.w JL_0_5D86
000232C0 <AmiBlitz3.ab2@6657>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
000232EC <AmiBlitz3.ab2@6658>    !fget
000232F0 <AmiBlitz3.ab2@6659>   CMP.w #$23,D0
000232F4 <AmiBlitz3.ab2@6660>    BEQ.w getimm
000232F8 <AmiBlitz3.ab2@6661>   CMP.w #$28,D0
000232FC <AmiBlitz3.ab2@6662>    BEQ.w JL_0_5DFE
00023300 <AmiBlitz3.ab2@6663>   CMP.w #$2D,D0
00023304 <AmiBlitz3.ab2@6664>    BNE.w JL_0_5E20
00023330 <AmiBlitz3.ab2@6665>    !fget                                                   ;bsr.w get1bytemain       -(
00023334 <AmiBlitz3.ab2@6666>   CMP.w #$28,D0
00023338 <AmiBlitz3.ab2@6667>    BNE.w JL_0_5F4E
0002333C <AmiBlitz3.ab2@6668>    BSR.w JL_0_5D3E
00023340 <AmiBlitz3.ab2@6669>   CMP.w #$29,D0
00023344 <AmiBlitz3.ab2@6670>    BNE.w syntaxerr
00023346 <AmiBlitz3.ab2@6671>   MOVEQ.l #$04,D5
00023372 <AmiBlitz3.ab2@6672>   !fget                                                    ;bsr.w get1bytemain
00023374 <AmiBlitz3.ab2@6673> RTS
00023378 <AmiBlitz3.ab2@6677>   BSR.w JL_0_5D3E
0002337C <AmiBlitz3.ab2@6678>   CMP.w #$29,D0
00023380 <AmiBlitz3.ab2@6679>    BNE.w syntaxerr
000233AC <AmiBlitz3.ab2@6680>   !fget                                                    ;bsr.w get1bytemain
000233B0 <AmiBlitz3.ab2@6681>   CMP.w #$2B,D0
000233B4 <AmiBlitz3.ab2@6682>    BEQ.w JL_0_5E1A
000233B6 <AmiBlitz3.ab2@6683>   MOVEQ.l #$02,D5
000233B8 <AmiBlitz3.ab2@6684> RTS
000233BA <AmiBlitz3.ab2@6688>   MOVEQ.l #$03,D5
000233E6 <AmiBlitz3.ab2@6689>   !fget                                                    ;bra.w get1bytemain
000233E8 <AmiBlitz3.ab2@6690> RTS
000233EC <AmiBlitz3.ab2@6694>   ORI.w #$20,D0
000233EE <AmiBlitz3.ab2@6695>   MOVE.w D0,D1                                            
0002341A <AmiBlitz3.ab2@6696>    !fget                                                   ;bsr.w get1bytemain
0002341E <AmiBlitz3.ab2@6697>   CMP.w #$64,D1
00023422 <AmiBlitz3.ab2@6698>    BNE.w JL_0_5E6C
00023426 <AmiBlitz3.ab2@6699>   CMP.w #$30,D0
0002342A <AmiBlitz3.ab2@6700>    BCS.w JL_0_5EAE
0002342E <AmiBlitz3.ab2@6701>   CMP.w #$37,D0
00023432 <AmiBlitz3.ab2@6702>    BHI.w JL_0_5EAE
00023434 <AmiBlitz3.ab2@6703>   MOVE.w D0,D4
00023460 <AmiBlitz3.ab2@6704>    !fget                                                   ;bsr.w get1bytemain
00023472 <AmiBlitz3.ab2@6705>    !compare3                                               ;bsr.w JL_0_5FC0
00023476 <AmiBlitz3.ab2@6706>    BEQ.w JL_0_5E64
0002347A <AmiBlitz3.ab2@6707>   CMP.w #$2D,D0
0002347E <AmiBlitz3.ab2@6708>    BEQ.w JL_0_5D6A
00023482 <AmiBlitz3.ab2@6709>   CMP.w #$2F,D0
00023486 <AmiBlitz3.ab2@6710>    BEQ.w JL_0_5D6A
0002348A <AmiBlitz3.ab2@6711> BRA.w JL_0_5EB8
0002348C <AmiBlitz3.ab2@6714>   MOVEQ.l #$00,D5
00023490 <AmiBlitz3.ab2@6715>   SUBI.w #$30,D4
00023492 <AmiBlitz3.ab2@6716> RTS
00023496 <AmiBlitz3.ab2@6719>    CMP.w #$61,D1
0002349A <AmiBlitz3.ab2@6720>    BNE.w JL_0_5EAE
0002349E <AmiBlitz3.ab2@6721>   CMP.w #$30,D0
000234A2 <AmiBlitz3.ab2@6722>    BCS.w JL_0_5EAE
000234A6 <AmiBlitz3.ab2@6723>   CMP.w #$37,D0
000234AA <AmiBlitz3.ab2@6724>    BHI.w JL_0_5EAE
000234AC <AmiBlitz3.ab2@6725>   MOVE.w D0,D4
000234D8 <AmiBlitz3.ab2@6726>    !fget                                                   ;bsr.w get1bytemain
000234EA <AmiBlitz3.ab2@6727>    !compare3                                               ;bsr.w JL_0_5FC0
000234EE <AmiBlitz3.ab2@6728>    BEQ.w JL_0_5EA6
000234F2 <AmiBlitz3.ab2@6729>   CMP.w #$2D,D0
000234F6 <AmiBlitz3.ab2@6730>    BEQ.w JL_0_5D68                                         ;movem
000234FA <AmiBlitz3.ab2@6731>   CMP.w #$2F,D0
000234FE <AmiBlitz3.ab2@6732>    BEQ.w JL_0_5D68
00023502 <AmiBlitz3.ab2@6733> BRA.w JL_0_5EB8
00023504 <AmiBlitz3.ab2@6736>   MOVEQ.l #1,d5
00023508 <AmiBlitz3.ab2@6737>   SUBI.w #$30,D4
0002350C <AmiBlitz3.ab2@6739> BRA 'l10
0002350E <AmiBlitz3.ab2@6740>   ADDQ.w #8,d4
00023510 <AmiBlitz3.ab2@6741>   MOVEQ #0,d5
00023512 <AmiBlitz3.ab2@6742>   BSET d4,d5
00023514 <AmiBlitz3.ab2@6743>   MOVE.w d5,d4
00023516 <AmiBlitz3.ab2@6744>   MOVEQ.l #$0f,D5                                          ;01
00023518 <AmiBlitz3.ab2@6747> RTS
0002351C <AmiBlitz3.ab2@6751>   ORI.w #$20,D0
0002351E <AmiBlitz3.ab2@6752>   MOVE.w D0,D4
0002354A <AmiBlitz3.ab2@6753>    !fget                                                   ;bsr.w get1bytemain
0002355C <AmiBlitz3.ab2@6756>   !compare3                                                ;bsr.w JL_0_5FC0
00023560 <AmiBlitz3.ab2@6757>    BNE.w JL_0_5EF2
00023564 <AmiBlitz3.ab2@6758>   CMP.w #$73,D1
00023568 <AmiBlitz3.ab2@6759>    BNE.w JL_0_5EF2
0002356C <AmiBlitz3.ab2@6760>   CMP.w #$70,D4
00023570 <AmiBlitz3.ab2@6761>    BNE.w JL_0_5EDE
00023582 <AmiBlitz3.ab2@6762>    !compare3                                               ;bsr.w JL_0_5FC0
00023586 <AmiBlitz3.ab2@6763>    BNE.w JL_0_5F4E
00023588 <AmiBlitz3.ab2@6764>   MOVEQ.l #$07,D4
0002358A <AmiBlitz3.ab2@6765>   MOVEQ.l #$01,D5
0002358C <AmiBlitz3.ab2@6766> RTS
00023590 <AmiBlitz3.ab2@6770>   CMP.w #$72,D4
00023594 <AmiBlitz3.ab2@6771>    BNE.w JL_0_5F4E
000235A6 <AmiBlitz3.ab2@6772>    !compare3                                               ;bsr.w JL_0_5FC0
000235AA <AmiBlitz3.ab2@6773>    BNE.w JL_0_5F4E
000235AC <AmiBlitz3.ab2@6774>   MOVEQ.l #$0D,D5
000235AE <AmiBlitz3.ab2@6775> RTS
000235B2 <AmiBlitz3.ab2@6779>   ORI.w #$20,D0
000235B6 <AmiBlitz3.ab2@6780>   CMP.w #$63,D1
000235BA <AmiBlitz3.ab2@6781>    BNE.w JL_0_5F22
000235BE <AmiBlitz3.ab2@6782>   CMP.w #$63,D4
000235C2 <AmiBlitz3.ab2@6783>    BNE.w JL_0_5F4E
000235C6 <AmiBlitz3.ab2@6784>   CMP.w #$72,D0
000235CA <AmiBlitz3.ab2@6785>    BNE.w JL_0_5F4E
000235CE <AmiBlitz3.ab2@6786>    BSR.w get1bytemain                                      ;??wy not !fget
000235D2 <AmiBlitz3.ab2@6787>    BEQ.w JL_0_5F1E
000235D6 <AmiBlitz3.ab2@6788>   CMP.w #$2C,D0
000235DA <AmiBlitz3.ab2@6789>    BNE.w JL_0_5F4E
000235DC <AmiBlitz3.ab2@6792>   MOVEQ.l #$0C,D5
000235DE <AmiBlitz3.ab2@6793> RTS
000235E2 <AmiBlitz3.ab2@6797>   CMP.w #$75,D1
000235E6 <AmiBlitz3.ab2@6798>    BNE.w JL_0_5F4E
000235EA <AmiBlitz3.ab2@6799>   CMP.w #$73,D4
000235EE <AmiBlitz3.ab2@6800>    BNE.w JL_0_5F4E
000235F2 <AmiBlitz3.ab2@6801>   CMP.w #$70,D0
000235F6 <AmiBlitz3.ab2@6802>    BNE.w JL_0_5F4E
000235FA <AmiBlitz3.ab2@6803>    BSR.w get1bytemain                                      ;??wy not !fget
000235FE <AmiBlitz3.ab2@6804>    BEQ.w JL_0_5F4A
00023602 <AmiBlitz3.ab2@6805>   CMP.w #$2C,D0
00023606 <AmiBlitz3.ab2@6806>    BNE.w JL_0_5F4E
00023608 <AmiBlitz3.ab2@6809>   MOVEQ.l #$0E,D5
0002360A <AmiBlitz3.ab2@6810> RTS
0002360C <AmiBlitz3.ab2@6814>   MOVEA.l A4,A5
00023610 <AmiBlitz3.ab2@6815>    BSR.w asmconst
00023622 <AmiBlitz3.ab2@6816>    !compare3                                               ;bsr.w JL_0_5FC0
00023626 <AmiBlitz3.ab2@6817>    BEQ.w JL_0_5FB8
0002362A <AmiBlitz3.ab2@6818>   CMP.w #$2E,D0
0002362E <AmiBlitz3.ab2@6819>    BEQ.w JL_0_5FA0
00023632 <AmiBlitz3.ab2@6820>   CMP.w #$28,D0
00023636 <AmiBlitz3.ab2@6821>    BNE.w syntaxerr
0002363A <AmiBlitz3.ab2@6822>    BSR.w get1bytemain                                      ;??wy not !fget
0002363E <AmiBlitz3.ab2@6823>   ORI.w #$20,D0
00023642 <AmiBlitz3.ab2@6824>   CMP.w #$70,D0
00023646 <AmiBlitz3.ab2@6825>    BNE.w JL_0_5F98
0002364A <AmiBlitz3.ab2@6826>    BSR.w get1bytemain                                      ;??wy not !fget
0002364E <AmiBlitz3.ab2@6827>   ORI.w #$20,D0
00023652 <AmiBlitz3.ab2@6828>   CMP.w #$63,D0
00023656 <AmiBlitz3.ab2@6829>    BNE.w syntaxerr
0002365A <AmiBlitz3.ab2@6830>    BSR.w get1bytemain                                      ;??wy not !fget
0002365E <AmiBlitz3.ab2@6831>    BSR.w JL_0_5FD4
00023660 <AmiBlitz3.ab2@6832>   ADDQ.w #4,D5
00023662 <AmiBlitz3.ab2@6833> RTS
00023666 <AmiBlitz3.ab2@6837>   BSR.w JL_0_5D46
0002366A <AmiBlitz3.ab2@6838> BRA.w JL_0_5FD4
0002366E <AmiBlitz3.ab2@6842>    BSR.w get1bytemain                                     ;??wy not !fget
00023672 <AmiBlitz3.ab2@6843>   ORI.w #$20,D0
00023676 <AmiBlitz3.ab2@6844>   CMP.w #$77,D0
0002367A <AmiBlitz3.ab2@6845>    BEQ.w JL_0_5FBC
0002367E <AmiBlitz3.ab2@6846>   CMP.w #$6C,D0
00023682 <AmiBlitz3.ab2@6847>    BNE.w syntaxerr
00023684 <AmiBlitz3.ab2@6850>   MOVEQ.l #$08,D5
00023686 <AmiBlitz3.ab2@6851> RTS
00023688 <AmiBlitz3.ab2@6855>   MOVEQ.l #$07,D5
0002368A <AmiBlitz3.ab2@6856> RTS
0002368C <AmiBlitz3.ab2@6860>   TST.w D0
00023690 <AmiBlitz3.ab2@6861>    BEQ.w JL_0_5FD2
00023694 <AmiBlitz3.ab2@6862>   CMP.w #$3A,D0
00023698 <AmiBlitz3.ab2@6863>    BEQ.w JL_0_5FD2
0002369C <AmiBlitz3.ab2@6864>   CMP.w #$2C,D0
0002369E <AmiBlitz3.ab2@6867> RTS
000236A2 <AmiBlitz3.ab2@6871>   CMP.w #$2C,D0
000236A6 <AmiBlitz3.ab2@6872>    BNE.w JL_0_6054
000236AA <AmiBlitz3.ab2@6873>    BSR.w get1bytemain                                      ;??wy not !fget
000236AE <AmiBlitz3.ab2@6874>   ORI.w #$20,D0
000236B0 <AmiBlitz3.ab2@6875>   MOVEQ.l #$00,D1
000236B4 <AmiBlitz3.ab2@6876>   CMP.w #$64,D0
000236B8 <AmiBlitz3.ab2@6877>    BEQ.w JL_0_5FFA
000236BC <AmiBlitz3.ab2@6878>   CMP.w #$61,D0
000236C0 <AmiBlitz3.ab2@6879>    BNE.w syntaxerr
000236C4 <AmiBlitz3.ab2@6880>   BSET #$F,D1
000236C8 <AmiBlitz3.ab2@6883>    BSR.w get1bytemain                                      ;??wy not !fget
000236CC <AmiBlitz3.ab2@6884>   SUBI.w #$30,D0
000236D0 <AmiBlitz3.ab2@6885>    BMI.w syntaxerr
000236D4 <AmiBlitz3.ab2@6886>   CMP.w #$7,D0
000236D8 <AmiBlitz3.ab2@6887>    BHI.w syntaxerr
000236DA <AmiBlitz3.ab2@6888>   LSL.w #8,D0
000236DC <AmiBlitz3.ab2@6889>   LSL.w #4,D0
000236DE <AmiBlitz3.ab2@6890>   OR.w D0,D1
000236E2 <AmiBlitz3.ab2@6891>    BSR.w get1bytemain                                      ;??wy not !fget
000236E6 <AmiBlitz3.ab2@6892>   CMP.w #$2E,D0
000236EA <AmiBlitz3.ab2@6893>    BNE.w JL_0_6040
000236EE <AmiBlitz3.ab2@6894>    BSR.w get1bytemain                                      ;??wy not !fget
000236F2 <AmiBlitz3.ab2@6895>   ORI.w #$20,D0
000236F6 <AmiBlitz3.ab2@6896>   CMP.w #$77,D0
000236FA <AmiBlitz3.ab2@6897>    BEQ.w JL_0_603C
000236FE <AmiBlitz3.ab2@6898>   CMP.w #$6C,D0
00023702 <AmiBlitz3.ab2@6899>    BNE.w syntaxerr
00023706 <AmiBlitz3.ab2@6900>   BSET #$B,D1
0002370A <AmiBlitz3.ab2@6903>    BSR.w get1bytemain                                      ;??wy not !fget
0002370E <AmiBlitz3.ab2@6906>    CMP.b #"*",d0                                           ;020 * Mode
00023712 <AmiBlitz3.ab2@6907>             BNE 'l1
00023716 <AmiBlitz3.ab2@6908>             BSR.w get1bytemain                             ;??wy not !fget
0002371A <AmiBlitz3.ab2@6909>             CMP.b #"2",d0
0002371E <AmiBlitz3.ab2@6910>             BNE 'l2
00023722 <AmiBlitz3.ab2@6911>             OR.w #$200,d1
00023726 <AmiBlitz3.ab2@6912> BRA 'l1b
0002372A <AmiBlitz3.ab2@6915>             CMP.b #"4",d0
0002372E <AmiBlitz3.ab2@6916>             BNE 'l3
00023732 <AmiBlitz3.ab2@6917>             OR.w #$400,d1
00023736 <AmiBlitz3.ab2@6918> BRA 'l1b
0002373A <AmiBlitz3.ab2@6921>             CMP.b #"8",d0
0002373E <AmiBlitz3.ab2@6922>             BNE syntaxerr
00023742 <AmiBlitz3.ab2@6923>             OR.w #$600,d1
00023746 <AmiBlitz3.ab2@6926>         BSR.w get1bytemain                                 ;??wy not !fget
0002374A <AmiBlitz3.ab2@6929>   CMP.w #$29,D0
0002374E <AmiBlitz3.ab2@6930>    BNE.w syntaxerr
00023754 <AmiBlitz3.ab2@6931>   MOVE.w D1,extraword
00023756 <AmiBlitz3.ab2@6932>   MOVEQ.l #$06,D5
0002375A <AmiBlitz3.ab2@6933> BRA.w get1bytemain                                         ;??wy not !fget
0002375E <AmiBlitz3.ab2@6937>   CMP.w #")",D0                                            ;")"
00023762 <AmiBlitz3.ab2@6938>    BNE.w errorbracketmiss                                  ; was syntax error
00023764 <AmiBlitz3.ab2@6939>   MOVEQ.l #$05,D5
00023768 <AmiBlitz3.ab2@6940> BRA.w get1bytemain                                         ;??wy not !fget
0002376E <AmiBlitz3.ab2@6947>   MOVEA.l asmbuff,A0
00023774 <AmiBlitz3.ab2@6948>   MOVE.w ininclude,D1
0002377A <AmiBlitz3.ab2@6949>   OR.w inmacro,D1
0002377C <AmiBlitz3.ab2@6950>   MOVE.w D1,(A0)+                                          ;flag!
00023780 <AmiBlitz3.ab2@6951>    BNE.w copyconst
00023782 <AmiBlitz3.ab2@6952>   MOVE.l A5,-(A7)
00023786 <AmiBlitz3.ab2@6953>    BSR.w copyconst
0002378C <AmiBlitz3.ab2@6954>   MOVEA.l asmbuff,A0
00023790 <AmiBlitz3.ab2@6955>   CMP.w #$4,D1
00023794 <AmiBlitz3.ab2@6956>    BLS.w asmconst__leave
0002379A <AmiBlitz3.ab2@6957>   TST.w lc
0002379E <AmiBlitz3.ab2@6958>    BNE.w asmconst__leave
000237A0 <AmiBlitz3.ab2@6959>   ADDQ.w #2,A0
000237A2 <AmiBlitz3.ab2@6960>   MOVE.l (A7)+,(A0)+
000237A4 <AmiBlitz3.ab2@6961>   CLR.b (A0)
000237AC <AmiBlitz3.ab2@6962>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000237AE <AmiBlitz3.ab2@6963> RTS
000237B0 <AmiBlitz3.ab2@6967>   NOT.w (A0)
000237B2 <AmiBlitz3.ab2@6968>   ADDQ.w #4,A7
000237B4 <AmiBlitz3.ab2@6969> RTS
000237B6 <AmiBlitz3.ab2@6972> lc:  Ds.w 1
000237BC <AmiBlitz3.ab2@6976>   CLR.w lc
000237BE <AmiBlitz3.ab2@6977>   MOVEQ.l #$00,D1
000237C0 <AmiBlitz3.ab2@6980>    ADDQ.w #1,D1                                            ;label name
000237EC <AmiBlitz3.ab2@6981>    !fget                                                   ;bsr.w get1bytemain
000237F0 <AmiBlitz3.ab2@6982>    BEQ.w copyconst__done
000237F4 <AmiBlitz3.ab2@6983>    CMP.w #$22,d0
000237F8 <AmiBlitz3.ab2@6984>    BNE.s copyconst__loop_l10
000237FE <AmiBlitz3.ab2@6985>    NOT.w instringon
00023802 <AmiBlitz3.ab2@6988>    CMP.w #":",d0
00023806 <AmiBlitz3.ab2@6989>    BNE.s copyconst__loop_l11
0002380C <AmiBlitz3.ab2@6990>    TST.w instringon
00023810 <AmiBlitz3.ab2@6991>    BEQ copyconst__done
00023812 <AmiBlitz3.ab2@6994>   TST.w D0
00023816 <AmiBlitz3.ab2@6995>   BPL.w copyconst__notmi
00023818 <AmiBlitz3.ab2@6996>   MOVE.w D0,-(A7)
0002381A <AmiBlitz3.ab2@6997>   LSR.w #8,D0
0002381C <AmiBlitz3.ab2@6998>   MOVE.b D0,(A0)+
0002381E <AmiBlitz3.ab2@6999>   MOVE.w (A7)+,D0
00023820 <AmiBlitz3.ab2@7000>   MOVE.b D0,(A0)+
00023822 <AmiBlitz3.ab2@7001>   ADDQ.w #1,D1
00023826 <AmiBlitz3.ab2@7002> BRA.s copyconst__loop
0002382C <AmiBlitz3.ab2@7005>    TST.w instringon
00023830 <AmiBlitz3.ab2@7006>    BNE.w copyconst__putbyte
00023836 <AmiBlitz3.ab2@7007>    TST.b _dcb
0002383A <AmiBlitz3.ab2@7008>    BNE copyconst__notmi_l10
0002383E <AmiBlitz3.ab2@7009>    CMP.w #$28,D0
00023842 <AmiBlitz3.ab2@7010>    BEQ.w copyconst__done
00023846 <AmiBlitz3.ab2@7013>    CMP.w #$2C,D0
0002384A <AmiBlitz3.ab2@7014>    BEQ.w copyconst__done
0002384E <AmiBlitz3.ab2@7015>    CMP.b #"'",D0
00023852 <AmiBlitz3.ab2@7016>    BNE.w copyconst__putbyte
00023858 <AmiBlitz3.ab2@7017>    MOVE.w D0,lc                                     ;locallabels
0002385A <AmiBlitz3.ab2@7018>    MOVE.l A1,-(A7)
00023860 <AmiBlitz3.ab2@7019>    LEA lastgloballabel,A1
00023862 <AmiBlitz3.ab2@7020>    TST.b (A1)
00023866 <AmiBlitz3.ab2@7021>    BEQ.w nolocerr
00023868 <AmiBlitz3.ab2@7024>   ADDQ.w #1,D1
0002386A <AmiBlitz3.ab2@7025>   MOVE.b (A1)+,(A0)+
0002386E <AmiBlitz3.ab2@7026>    BNE.w copyconst__cloop
00023870 <AmiBlitz3.ab2@7027>   SUBQ.w #1,D1
00023872 <AmiBlitz3.ab2@7028>   SUBQ.w #1,A0
00023874 <AmiBlitz3.ab2@7029>   MOVEA.l (A7)+,A1
00023876 <AmiBlitz3.ab2@7032>   MOVE.b D0,(A0)+
0002387A <AmiBlitz3.ab2@7033> BRA.w copyconst__loop
0002387C <AmiBlitz3.ab2@7036>   CLR.b (A0)
00023882 <AmiBlitz3.ab2@7037>   MOVE.w D1,asmlen2
00023884 <AmiBlitz3.ab2@7038> RTS
0002388A <AmiBlitz3.ab2@7043>   CMP.l #$80ad,d0
0002388E <AmiBlitz3.ab2@7044>   BNE.s 'l12
00023894 <AmiBlitz3.ab2@7045> JMP bssseg
0002389A <AmiBlitz3.ab2@7048>   CMP.l #$807f,d0
0002389E <AmiBlitz3.ab2@7049>     BNE.s 'l13
000238A4 <AmiBlitz3.ab2@7050> JMP chipseg
000238AA <AmiBlitz3.ab2@7053>   ADDQ.l #1,destpointer                                    ;even
000238B2 <AmiBlitz3.ab2@7054>   BCLR #$0,destpointer+3
000238B6 <AmiBlitz3.ab2@7055>   SUBI.w #$803C,D0
000238B8 <AmiBlitz3.ab2@7056>   LSL.w #2,D0
000238BE <AmiBlitz3.ab2@7057>   MOVEA.l #asmpnts,A0
000238C2 <AmiBlitz3.ab2@7058>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000238C8 <AmiBlitz3.ab2@7059>   MOVE.w D0,temp1
000238CA <AmiBlitz3.ab2@7060>   MOVE.l A0,-(A7)
000238CC <AmiBlitz3.ab2@7061>   MOVEQ.l #$01,D1
000238F8 <AmiBlitz3.ab2@7062>    !fget                                                   ;bsr.w get1bytemain
000238FC <AmiBlitz3.ab2@7063>   CMP.w #$2E,D0
00023900 <AmiBlitz3.ab2@7064>    BNE.w JL_0_6184
0002392C <AmiBlitz3.ab2@7065>   !fget                                                    ;bsr.w get1bytemain
00023930 <AmiBlitz3.ab2@7066>   ORI.w #$20,D0
00023934 <AmiBlitz3.ab2@7067>   CMP.w #$77,D0                                            ;long
00023938 <AmiBlitz3.ab2@7068>    BEQ.w JL_0_618A
0002393C <AmiBlitz3.ab2@7069>   CMP.w #$62,D0                                            ;byte
00023940 <AmiBlitz3.ab2@7070>    BEQ.w JL_0_617A
00023944 <AmiBlitz3.ab2@7071>   CMP.w #$6C,D0                                            ;word
00023948 <AmiBlitz3.ab2@7072>    BEQ.w JL_0_6196
0002394C <AmiBlitz3.ab2@7073>   CMP.w #"s",d0
00023950 <AmiBlitz3.ab2@7074>   BNE syntaxerr
00023954 <AmiBlitz3.ab2@7075> BRA.w JL_0_617A
00023956 <AmiBlitz3.ab2@7078>   MOVEQ.l #$00,D1
0002395A <AmiBlitz3.ab2@7079>   MOVE.w $8(A0),D0
0002395E <AmiBlitz3.ab2@7080> BRA.w JL_0_619E
00023960 <AmiBlitz3.ab2@7083>   MOVEQ.l #$04,D1
00023964 <AmiBlitz3.ab2@7084> BRA.w JL_0_61AE
00023966 <AmiBlitz3.ab2@7087>   MOVEQ.l #$04,D1
0002396A <AmiBlitz3.ab2@7088>   MOVE.w $8(A0),D0
0002396C <AmiBlitz3.ab2@7089>   LSR.w #4,D0
00023970 <AmiBlitz3.ab2@7090> BRA.w JL_0_619E
00023972 <AmiBlitz3.ab2@7093>   MOVEQ.l #$08,D1
00023976 <AmiBlitz3.ab2@7094>   MOVE.w $8(A0),D0
00023978 <AmiBlitz3.ab2@7095>   LSR.w #8,D0
0002397C <AmiBlitz3.ab2@7098>    ANDI.w #$F,D0
00023980 <AmiBlitz3.ab2@7099>   CMP.w #$F,D0
00023984 <AmiBlitz3.ab2@7100>    BNE.w 'cl60
0002398C <AmiBlitz3.ab2@7103>    CMP.l #"MULS",-6(a0)
00023990 <AmiBlitz3.ab2@7104>    BNE 'c20
00023996 <AmiBlitz3.ab2@7105>    MOVE.l #$4c000800,d1
0002399C <AmiBlitz3.ab2@7106> JMP do32
000239A4 <AmiBlitz3.ab2@7109>    CMP.l #"MULU",-6(a0)
000239A8 <AmiBlitz3.ab2@7110>    BNE 'c30
000239AE <AmiBlitz3.ab2@7111>    MOVE.l #$4c000000,d1
000239B4 <AmiBlitz3.ab2@7112> JMP do32
000239BC <AmiBlitz3.ab2@7115>    CMP.l #"DIVS",-6(a0)
000239C0 <AmiBlitz3.ab2@7116>    BNE 'c40
000239C6 <AmiBlitz3.ab2@7117>    MOVE.l #$4c400800,d1
000239CC <AmiBlitz3.ab2@7118> JMP do32
000239D4 <AmiBlitz3.ab2@7121>    CMP.l #"DIVU",-6(a0)
000239D8 <AmiBlitz3.ab2@7122>    BNE 'c50
000239DE <AmiBlitz3.ab2@7123>    MOVE.l #$4c400000,d1
000239E4 <AmiBlitz3.ab2@7124> JMP do32
000239E8 <AmiBlitz3.ab2@7127> BRA illsizeerr
00023A14 <AmiBlitz3.ab2@7130>   !fget                                                    ;bsr.w get1bytemain
00023A1A <AmiBlitz3.ab2@7133>   MOVE.w D1,asmsize
00023A1C <AmiBlitz3.ab2@7134>   MOVEQ.l #-$01,D3
00023A20 <AmiBlitz3.ab2@7135>    BSR.w reget
00023A24 <AmiBlitz3.ab2@7136>    BEQ.w JL_0_6200
00023A2E <AmiBlitz3.ab2@7137>   MOVE.l #ptr_parameterstore,asmbuff
00023A38 <AmiBlitz3.ab2@7139>    MOVE.w oldqflag,instringon
00023A3E <AmiBlitz3.ab2@7140>   MOVEA.l lastsourcepos,A5
00023A42 <AmiBlitz3.ab2@7141>    BSR.w JL_0_5DC2
00023A44 <AmiBlitz3.ab2@7142>   MOVE.l D4,D2                                             ;to src
00023A46 <AmiBlitz3.ab2@7143>   MOVE.l D5,D3
00023A50 <AmiBlitz3.ab2@7144>   MOVE.w asmlen2,asmlen
00023A52 <AmiBlitz3.ab2@7145>   MOVEQ.l #-$01,D5
00023A5C <AmiBlitz3.ab2@7146>   MOVE.w extraword,extraword2
00023A60 <AmiBlitz3.ab2@7147>   CMP.w #$2C,D0                                            ;','
00023A64 <AmiBlitz3.ab2@7148>    BNE.w JL_0_6200
00023A6E <AmiBlitz3.ab2@7149>   MOVE.l #namebuff2,asmbuff
00023A72 <AmiBlitz3.ab2@7150>    BSR.w JL_0_5DC2                                         ;dest
00023A74 <AmiBlitz3.ab2@7153>   MOVEA.l (A7)+,A0
00023A7A <AmiBlitz3.ab2@7154>   MOVEA.l destpointer,A1
00023A7C <AmiBlitz3.ab2@7155>   MOVEA.l A1,A4
00023A7E <AmiBlitz3.ab2@7156>   ADDQ.w #2,A1
00023A80 <AmiBlitz3.ab2@7157>   MOVE.w (A0),D1
00023A82 <AmiBlitz3.ab2@7158>   TST.w D3
00023A86 <AmiBlitz3.ab2@7159>    BMI.w JL_0_639E
00023A8A <AmiBlitz3.ab2@7160>   MOVE.w $E(A0),D0
00023A8E <AmiBlitz3.ab2@7161>    BPL.w JL_0_6264
00023A92 <AmiBlitz3.ab2@7162>   BTST #$0,D0
00023A96 <AmiBlitz3.ab2@7163>    BEQ.w JL_0_6240
00023A9A <AmiBlitz3.ab2@7164>   CMP.w #$1,D5
00023A9E <AmiBlitz3.ab2@7165>    BNE.w JL_0_6240
00023AA2 <AmiBlitz3.ab2@7166>   CMP.w #$E,D3
00023AA6 <AmiBlitz3.ab2@7167>    BEQ.w JL_0_6264
00023AAC <AmiBlitz3.ab2@7168>   MOVE.w temp1,D0
00023AAE <AmiBlitz3.ab2@7169>   ADDQ.w #4,D0
00023AB2 <AmiBlitz3.ab2@7170> BRA.w JL_0_6256
00023AB6 <AmiBlitz3.ab2@7173>   BTST #$1,D0
00023ABA <AmiBlitz3.ab2@7174>    BEQ.w JL_0_6264
00023ABE <AmiBlitz3.ab2@7175>   CMP.w #$B,D3
00023AC2 <AmiBlitz3.ab2@7176>    BNE.w JL_0_6264
00023AC8 <AmiBlitz3.ab2@7177>   MOVE.w temp1,D0
00023ACA <AmiBlitz3.ab2@7180>   ADDQ.w #4,D0
00023AD0 <AmiBlitz3.ab2@7181>   MOVEA.l #asmpnts,A0
00023AD4 <AmiBlitz3.ab2@7182>   MOVEA.l $0(A0,D0.W),A0
00023AD6 <AmiBlitz3.ab2@7183>   MOVE.w (A0),D1
00023AE0 <AmiBlitz3.ab2@7186>   MOVE.l #ptr_parameterstore,buff1
00023AEA <AmiBlitz3.ab2@7187>   MOVE.l #namebuff2,buff2
00023AEE <AmiBlitz3.ab2@7188>   MOVE.l $A(A0),D0
00023AF2 <AmiBlitz3.ab2@7189>    BEQ.w JL_0_62DC
00023AF4 <AmiBlitz3.ab2@7190>   MOVEA.l D0,A3
00023AFA <AmiBlitz3.ab2@7191>   MOVE.w asmsize,D6
00023AFC <AmiBlitz3.ab2@7194>    JSR (A3)
00023B00 <AmiBlitz3.ab2@7195>    BPL.w JL_0_629A
00023B04 <AmiBlitz3.ab2@7196>   CMP.w #-$2,D0
00023B08 <AmiBlitz3.ab2@7197>    BEQ.w illsizeerr
00023B0C <AmiBlitz3.ab2@7198> BRA.w illeaerr
00023B10 <AmiBlitz3.ab2@7201>   BEQ.w JL_0_62DC
00023B12 <AmiBlitz3.ab2@7202>   EXG.l D2,D4
00023B14 <AmiBlitz3.ab2@7203>   EXG.l D3,D5
00023B1A <AmiBlitz3.ab2@7204>   MOVE.l extraword,D6
00023B1C <AmiBlitz3.ab2@7205>   SWAP D6
00023B22 <AmiBlitz3.ab2@7206>   MOVE.l D6,extraword
00023B2C <AmiBlitz3.ab2@7207>   MOVE.l #namebuff2,buff1
00023B36 <AmiBlitz3.ab2@7208>   MOVE.l #ptr_parameterstore,buff2
00023B3C <AmiBlitz3.ab2@7209>   MOVE.w asmlen,D6
00023B42 <AmiBlitz3.ab2@7210>   MOVE.w asmlen2,D7
00023B48 <AmiBlitz3.ab2@7211>   MOVE.w D6,asmlen2
00023B4E <AmiBlitz3.ab2@7212>   MOVE.w D7,asmlen
00023B58 <AmiBlitz3.ab2@7215>   MOVE.l buff1,asmbuff
00023B5C <AmiBlitz3.ab2@7216>   MOVE.w $E(A0),D0
00023B60 <AmiBlitz3.ab2@7217>    BEQ.w JL_0_6348
00023B64 <AmiBlitz3.ab2@7218>    BMI.w JL_0_6348
00023B68 <AmiBlitz3.ab2@7219>    CMP.w #$7000,d1
00023B6C <AmiBlitz3.ab2@7220>    BNE 'skip
00023B70 <AmiBlitz3.ab2@7221>    CMP.w #$b,d3
00023B74 <AmiBlitz3.ab2@7222>    BNE illeaerr
00023B78 <AmiBlitz3.ab2@7225>    CMP.w #$1,D0
00023B7C <AmiBlitz3.ab2@7226>    BNE.w JL_0_630E
00023B80 <AmiBlitz3.ab2@7227>    CMP.w #$B,D3
00023B84 <AmiBlitz3.ab2@7228>    BNE.w JL_0_6348
00023B88 <AmiBlitz3.ab2@7231>    BSR.w insasm
00023B8A <AmiBlitz3.ab2@7232>   MOVE.w D4,D2
00023B8C <AmiBlitz3.ab2@7233>   MOVE.w D5,D3
00023B90 <AmiBlitz3.ab2@7234> BRA.w JL_0_6364
00023B94 <AmiBlitz3.ab2@7237>    CMP.w #$2,D0
00023B98 <AmiBlitz3.ab2@7238>    BNE.w JL_0_6324
00023B9C <AmiBlitz3.ab2@7239>   CMP.w #$8,D3
00023BA0 <AmiBlitz3.ab2@7240>    BNE.w illeaerr
00023BA2 <AmiBlitz3.ab2@7241>   MOVEQ.l #$09,D3
00023BA6 <AmiBlitz3.ab2@7242> BRA.w JL_0_6348
00023BAA <AmiBlitz3.ab2@7245>    CMP.w #$3,D0
00023BAE <AmiBlitz3.ab2@7246>    BEQ.w JL_0_6302
00023BB2 <AmiBlitz3.ab2@7247>   CMP.w #$4,D0
00023BB6 <AmiBlitz3.ab2@7248>    BEQ.w JL_0_6302
00023BBA <AmiBlitz3.ab2@7249>   CMP.w #$5,D0
00023BBE <AmiBlitz3.ab2@7250>    BNE.w JL_0_6348
00023BC2 <AmiBlitz3.ab2@7251>   CMP.w #$8,D5
00023BC6 <AmiBlitz3.ab2@7252>    BNE.w illeaerr
00023BC8 <AmiBlitz3.ab2@7253>   OR.w D2,D1
00023BCA <AmiBlitz3.ab2@7254>   MOVEQ.l #$09,D5
00023BCE <AmiBlitz3.ab2@7257>   MOVE.w $2(A0),D6
00023BD2 <AmiBlitz3.ab2@7258>   MOVE.b $6(A0),D7
00023BD6 <AmiBlitz3.ab2@7259>   MOVEM.l D4-D5,-(A7)
00023BDC <AmiBlitz3.ab2@7260>   MOVE.w extraword2,D4
00023BE0 <AmiBlitz3.ab2@7261>    BSR.w doea
00023BE4 <AmiBlitz3.ab2@7262>   MOVEM.l (A7)+,D2-D3
00023BE6 <AmiBlitz3.ab2@7263>   TST.w D3
00023BEA <AmiBlitz3.ab2@7266>     BMI.w JL_0_6392
00023BF0 <AmiBlitz3.ab2@7267>   MOVE.w extraword,D4
00023BF4 <AmiBlitz3.ab2@7268>   MOVE.w $4(A0),D6
00023BF8 <AmiBlitz3.ab2@7269>   MOVE.b $7(A0),D7
00023C02 <AmiBlitz3.ab2@7270>   MOVE.l buff2,asmbuff
00023C0C <AmiBlitz3.ab2@7271>   MOVE.w asmlen2,asmlen
00023C10 <AmiBlitz3.ab2@7272>    BSR.w doea
00023C14 <AmiBlitz3.ab2@7273> BRA.w JL_0_63AA
00023C18 <AmiBlitz3.ab2@7276>   MOVE.w $4(A0),D0
00023C1C <AmiBlitz3.ab2@7277>    BNE.w illeaerr
00023C20 <AmiBlitz3.ab2@7278> BRA.w JL_0_63AA
00023C24 <AmiBlitz3.ab2@7282>   MOVE.w $2(A0),D0
00023C28 <AmiBlitz3.ab2@7283>   OR.w $4(A0),D0
00023C2C <AmiBlitz3.ab2@7284>    BNE.w illeaerr
00023C30 <AmiBlitz3.ab2@7287>   MOVE.w $8(A0),D0
00023C34 <AmiBlitz3.ab2@7288>   ANDI.w #$F000,D0
00023C38 <AmiBlitz3.ab2@7289>   CMP.w #-$1000,D0
00023C3C <AmiBlitz3.ab2@7290>    BEQ.w JL_0_63D2
00023C3E <AmiBlitz3.ab2@7291>   LSR.w #8,D0
00023C40 <AmiBlitz3.ab2@7292>   LSR.w #4,D0
00023C44 <AmiBlitz3.ab2@7293>   MOVE.w $8(A0),D2
00023C4A <AmiBlitz3.ab2@7294>   MOVE.w asmsize,D3
00023C4C <AmiBlitz3.ab2@7295>   LSR.w D3,D2
00023C50 <AmiBlitz3.ab2@7296>   ANDI.w #$F,D2
00023C52 <AmiBlitz3.ab2@7297>   LSL.w D0,D2
00023C54 <AmiBlitz3.ab2@7298>   OR.w D2,D1
00023C5A <AmiBlitz3.ab2@7301>   CMPA.l destbufferend,A4
00023C5E <AmiBlitz3.ab2@7302>    BCS.w JL_0_63E8
00023C66 <AmiBlitz3.ab2@7304>   MOVE.w #$FFFF,dontwrite
00023C6A <AmiBlitz3.ab2@7305> BRA.w JL_0_63EA
00023C6C <AmiBlitz3.ab2@7308>   MOVE.w D1,(A4)
00023C72 <AmiBlitz3.ab2@7311>   MOVE.l A1,destpointer
00023C74 <AmiBlitz3.ab2@7312> RTS
00023C7A <AmiBlitz3.ab2@7316>   MOVE.l destpointer,-(A7)
00023C80 <AmiBlitz3.ab2@7317>   MOVE.l A1,destpointer
00023C84 <AmiBlitz3.ab2@7318>    BSR.w addoff
00023C8A <AmiBlitz3.ab2@7319>   MOVEA.l destpointer,A1
00023C90 <AmiBlitz3.ab2@7320>   MOVE.l (A7)+,destpointer
00023C92 <AmiBlitz3.ab2@7321> RTS
00023C96 <AmiBlitz3.ab2@7325>   MOVEM.l d2-d6,-(a7)
00023C9C <AmiBlitz3.ab2@7326>   JSR stripspaces
00023CA0 <AmiBlitz3.ab2@7327>   CMP.b #"d",(a5)+
00023CA4 <AmiBlitz3.ab2@7328>   BNE noreg
00023CA6 <AmiBlitz3.ab2@7329>   MOVE.b (a5)+,d0
00023CAA <AmiBlitz3.ab2@7330>   CMP.b #$30,d0
00023CAE <AmiBlitz3.ab2@7331>   BLT noreg
00023CB2 <AmiBlitz3.ab2@7332>   CMP.b #$37,d0
00023CB6 <AmiBlitz3.ab2@7333>   BGT noreg
00023CBA <AmiBlitz3.ab2@7334>   SUB.b #$30,d0
00023CBC <AmiBlitz3.ab2@7335>   MOVEQ #0,d3
00023CBE <AmiBlitz3.ab2@7336>   MOVE.b d0,d3                                             ;reg1
00023CC0 <AmiBlitz3.ab2@7337>   ASL.l #8,d3
00023CC2 <AmiBlitz3.ab2@7338>   ASL.l #8,d3
00023CC8 <AmiBlitz3.ab2@7339>   JSR stripspaces
00023CCC <AmiBlitz3.ab2@7340>   CMP.b #",",(a5)+
00023CD0 <AmiBlitz3.ab2@7341>   BNE noreg
00023CD6 <AmiBlitz3.ab2@7342>   JSR stripspaces
00023CDA <AmiBlitz3.ab2@7343>   CMP.b #"d",(a5)+
00023CDE <AmiBlitz3.ab2@7344>   BNE noreg
00023CE0 <AmiBlitz3.ab2@7345>   MOVE.b (a5)+,d0
00023CE4 <AmiBlitz3.ab2@7346>   CMP.b #$30,d0
00023CE8 <AmiBlitz3.ab2@7347>   BLT noreg
00023CEC <AmiBlitz3.ab2@7348>   CMP.b #$37,d0
00023CF0 <AmiBlitz3.ab2@7349>   BGT noreg
00023CF4 <AmiBlitz3.ab2@7350>   SUB.b #$30,d0
00023CF6 <AmiBlitz3.ab2@7351>   MOVEQ #0,d4
00023CF8 <AmiBlitz3.ab2@7352>   MOVE.b d0,d4                                             ;reg2
00023CFA <AmiBlitz3.ab2@7353>   ASL.l #8,d4
00023CFC <AmiBlitz3.ab2@7354>   ASL.l #4,d4
00023CFE <AmiBlitz3.ab2@7355>   OR.b d0,d1
00023D00 <AmiBlitz3.ab2@7356>   OR.l d3,d1
00023D02 <AmiBlitz3.ab2@7357>   OR.l d4,d1
00023D08 <AmiBlitz3.ab2@7358>   JSR writelong
00023D0C <AmiBlitz3.ab2@7359>   MOVEM.l (a7)+,d2-d6
00023D10 <AmiBlitz3.ab2@7360>   MOVEM.l d1/a1-a3,-(a7)
00023D14 <AmiBlitz3.ab2@7361> BRA exit
00023D18 <AmiBlitz3.ab2@7365>   MOVEM.l (a7)+,d2-d6
00023D1E <AmiBlitz3.ab2@7366>   LEA errtext,a0
00023D20 <AmiBlitz3.ab2@7367>   MOVE.l a0,-(a7)
00023D26 <AmiBlitz3.ab2@7368> JMP handle_compileerror
00023D2C <AmiBlitz3.ab2@7377>   MOVE.w dontwrite,D1
00023D30 <AmiBlitz3.ab2@7378>    BNE.w asmfixer__done
00023D38 <AmiBlitz3.ab2@7379>   BTST #$7,make_smallestcode
00023D3C <AmiBlitz3.ab2@7380>    BEQ.w asmfixer__go
00023D40 <AmiBlitz3.ab2@7381>   MOVE.w pass(PC),D1
00023D44 <AmiBlitz3.ab2@7382>    BEQ.w asmfixer__done
00023D4A <AmiBlitz3.ab2@7385>   MOVEA.l templabel,A2                                     ;insert labels in Code
00023D52 <AmiBlitz3.ab2@7386>   MOVE.b #1,curtemplabel
00023D5A <AmiBlitz3.ab2@7387>   MOVE.w #$FFFF,constmode
00023D60 <AmiBlitz3.ab2@7388>   CLR.w regnum
00023D6A <AmiBlitz3.ab2@7389>           MOVE.l #forthstack,forthsp
00023D74 <AmiBlitz3.ab2@7390>           MOVE.l #precstack,precsp
00023D78 <AmiBlitz3.ab2@7391>    BSR.w prepstack
00023D7A <AmiBlitz3.ab2@7394>   MOVE.l A2,-(A7)
00023D7E <AmiBlitz3.ab2@7395>    BSR.w chkstop
00023D80 <AmiBlitz3.ab2@7396>   MOVEA.l (A7)+,A2
00023D84 <AmiBlitz3.ab2@7397>   CMPA.w #$0,A2
00023D88 <AmiBlitz3.ab2@7398>    BEQ.w asmfixer__done2
00023D8E <AmiBlitz3.ab2@7399>    CLR.b iee
00023D94 <AmiBlitz3.ab2@7400>   MOVE.l A2,asmbuff
00023D98 <AmiBlitz3.ab2@7401>   LEA $10(A2),A5
00023D9C <AmiBlitz3.ab2@7402>   TST.b $F(A2)
00023DA0 <AmiBlitz3.ab2@7403>    BNE.w asmfixer__skipo
00023DA2 <AmiBlitz3.ab2@7404>   MOVEA.l (A5),A5                                          ;pointer to real text
00023DA8 <AmiBlitz3.ab2@7407>    CLR.w asmtype
00023DAC <AmiBlitz3.ab2@7408>    CMP.b #".",(a5)
00023DB0 <AmiBlitz3.ab2@7409>    BNE.s asmfixer__skipo_l10
00023DB2 <AmiBlitz3.ab2@7410>    MOVE.l a2,-(a7)
00023DB4 <AmiBlitz3.ab2@7411>    ADDQ.l #1,a5
00023DBA <AmiBlitz3.ab2@7412>    LEA newtypebase,a2
00023DBE <AmiBlitz3.ab2@7413>    BSR getparameter2
00023DC2 <AmiBlitz3.ab2@7414>    BEQ.w syntaxerr
00023DC6 <AmiBlitz3.ab2@7415>    BSR findtype
00023DCA <AmiBlitz3.ab2@7416>    BNE.w notypeerr
00023DCE <AmiBlitz3.ab2@7417>    LEA $4(a2),a2
00023DD2 <AmiBlitz3.ab2@7418>    BSR getparameter2
00023DD6 <AmiBlitz3.ab2@7419>    BEQ.w syntaxerr
00023DDA <AmiBlitz3.ab2@7420>    BSR.w findvariable2
00023DDE <AmiBlitz3.ab2@7421>    BNE.w notypeerr
00023DE2 <AmiBlitz3.ab2@7422>    MOVE.w $4(a2),d3
00023DE4 <AmiBlitz3.ab2@7423>    EXT.l d3
00023DE8 <AmiBlitz3.ab2@7424> BRA asmfixer__skipo_l30b
00023DEC <AmiBlitz3.ab2@7427>   CMP.b #"\",(a5)
00023DF0 <AmiBlitz3.ab2@7428>     BNE asmfixer__skipo_l20
00023DF2 <AmiBlitz3.ab2@7429>     ADDQ.l #1,a5
00023DF4 <AmiBlitz3.ab2@7430>    MOVE.l a2,-(a7)
00023DF6 <AmiBlitz3.ab2@7431>    MOVE.l a5,a4
00023DFC <AmiBlitz3.ab2@7432>    LEA usedpath,a5
00023E00 <AmiBlitz3.ab2@7433>    CMP.b #"*",(a5)
00023E04 <AmiBlitz3.ab2@7434>    BNE asmfixer__skipo_lm1
00023E06 <AmiBlitz3.ab2@7435>    ADDQ.l #1,a5
00023E0A <AmiBlitz3.ab2@7438>    BSR.w getparameter2
00023E0E <AmiBlitz3.ab2@7439>    BEQ.w syntaxerr
00023E14 <AmiBlitz3.ab2@7440>    LEA varbase,A2
00023E1C <AmiBlitz3.ab2@7441>    MOVE.b #1,newvariable
00023E20 <AmiBlitz3.ab2@7442>    BSR.w findvariable
00023E26 <AmiBlitz3.ab2@7443>    CLR.b newvariable
00023E2C <AmiBlitz3.ab2@7444>    CMP.l #-1,d0
00023E30 <AmiBlitz3.ab2@7445>    BEQ.w notypeerr
00023E32 <AmiBlitz3.ab2@7446>    MOVE.l a4,a5
00023E36 <AmiBlitz3.ab2@7447>    MOVE.l $a(a2),a2
00023E3A <AmiBlitz3.ab2@7448>    LEA $4(a2),a2
00023E3E <AmiBlitz3.ab2@7449>    BSR getparameter2
00023E42 <AmiBlitz3.ab2@7450>    BEQ.w syntaxerr
00023E46 <AmiBlitz3.ab2@7451>    BSR.w findvariable2
00023E4A <AmiBlitz3.ab2@7452>    BNE.w notypeerr
00023E4E <AmiBlitz3.ab2@7453>   MOVE.w $4(A2),D3
00023E50 <AmiBlitz3.ab2@7454>   EXT.l D3
00023E56 <AmiBlitz3.ab2@7457>    CMP.b #"[",-1(a5)
00023E5A <AmiBlitz3.ab2@7458>    BNE asmfixer__skipo_l30c
00023E5C <AmiBlitz3.ab2@7459>    MOVEQ #0,d0
00023E5E <AmiBlitz3.ab2@7460>    MOVE.b (a5)+,d0
00023E60 <AmiBlitz3.ab2@7461>    MOVE.l d3,-(a7)
00023E62 <AmiBlitz3.ab2@7462>    MOVEQ #0,d3
00023E68 <AmiBlitz3.ab2@7463>    JSR atoi
00023E6A <AmiBlitz3.ab2@7464>    MOVE.l (a7)+,d1
00023E6E <AmiBlitz3.ab2@7465>    MOVE.l $a(a2),a2
00023E72 <AmiBlitz3.ab2@7466>    MOVE.w 8(a2),d0
00023E74 <AmiBlitz3.ab2@7467>    MULS d0,d3
00023E76 <AmiBlitz3.ab2@7468>    ADD.l d1,d3
00023E78 <AmiBlitz3.ab2@7471>   MOVE.l (a7)+,a2
00023E7C <AmiBlitz3.ab2@7472> BRA asmfixer__oko
00023E82 <AmiBlitz3.ab2@7475>   CMP.w #$c,$8(a2)
00023E86 <AmiBlitz3.ab2@7476>      BEQ asmfixer__skipo_lf1
00023E8C <AmiBlitz3.ab2@7477>      CMP.w #$d,$8(a2)
00023E90 <AmiBlitz3.ab2@7478>      BEQ asmfixer__skipo_lf1
00023E96 <AmiBlitz3.ab2@7481>   JSR AJL_0_BF6E
00023E9C <AmiBlitz3.ab2@7484>   MOVEA.l asmbuff,A2
00023EA0 <AmiBlitz3.ab2@7485>    BEQ.w asmfixer__oko
00023EA4 <AmiBlitz3.ab2@7486>   CMP.w #$28,D0
00023EA8 <AmiBlitz3.ab2@7487>    BEQ.w asmfixer__oko
00023EAC <AmiBlitz3.ab2@7488>   CMP.w #$2C,D0
00023EB0 <AmiBlitz3.ab2@7489>    BEQ.w asmfixer__oko
00023EB4 <AmiBlitz3.ab2@7490> BRA.w syntaxerr
00023EBC <AmiBlitz3.ab2@7493>   MOVE.b #1,iee
00023EC0 <AmiBlitz3.ab2@7494> BRA asmfixer__skipo_lf2
00023EC4 <AmiBlitz3.ab2@7497>   MOVEA.l $4(A2),A1
00023EC8 <AmiBlitz3.ab2@7499>   MOVE.w $8(A2),D1                                         ;labelmode
00023ECC <AmiBlitz3.ab2@7500>   CMP.w #$5,D1
00023ED0 <AmiBlitz3.ab2@7501>    BNE.w asmfixer__notdan
00023ED4 <AmiBlitz3.ab2@7504>    BSR.w chkword                                         ;word
00023ED6 <AmiBlitz3.ab2@7507>   MOVE.w D3,(A1)
00023EDA <AmiBlitz3.ab2@7508> BRA.w asmfixer__next
00023EDE <AmiBlitz3.ab2@7511>   CMP.w #$6,D1
00023EE2 <AmiBlitz3.ab2@7512>    BNE.w asmfixer__notdanxi
00023EE6 <AmiBlitz3.ab2@7515>    BSR.w chkbyte                                         ;byte
00023EEA <AmiBlitz3.ab2@7518>   MOVE.b D3,$1(A1)
00023EEE <AmiBlitz3.ab2@7519> BRA.w asmfixer__next
00023EF2 <AmiBlitz3.ab2@7522>    CMP.w #$11,D1                                           ;byte
00023EF6 <AmiBlitz3.ab2@7523>    BEQ.w asmfixer__isbyte2
00023EFA <AmiBlitz3.ab2@7524>    CMP.w #$c,d1
00023EFE <AmiBlitz3.ab2@7525>    BEQ asmfixer__single1
00023F02 <AmiBlitz3.ab2@7526>    CMP.w #$d,d1
00023F06 <AmiBlitz3.ab2@7527>    BEQ asmfixer__double1
00023F0A <AmiBlitz3.ab2@7528>   CMP.w #$7,D1
00023F0E <AmiBlitz3.ab2@7529>    BEQ.w asmfixer__word                                    ;word
00023F12 <AmiBlitz3.ab2@7530>   CMP.w #$8,D1
00023F16 <AmiBlitz3.ab2@7531>    BNE.w asmfixer__notabsl
00023F1C <AmiBlitz3.ab2@7534>   MOVE.w asmtype,D1                                        ;long
00023F20 <AmiBlitz3.ab2@7535>    BEQ.w asmfixer__notpcrel
00023F24 <AmiBlitz3.ab2@7536>      BSR.w asmoff
00023F26 <AmiBlitz3.ab2@7539>   MOVE.l D3,(A1)
00023F2A <AmiBlitz3.ab2@7540> BRA.w asmfixer__next
00023F30 <AmiBlitz3.ab2@7544>   fmove.s fp0,0(a1)
00023F34 <AmiBlitz3.ab2@7545> BRA.w asmfixer__next
00023F3A <AmiBlitz3.ab2@7549>   fmove.d fp0,0(a1)
00023F3E <AmiBlitz3.ab2@7550> BRA.w asmfixer__next
00023F42 <AmiBlitz3.ab2@7554>   CMP.w #$9,D1
00023F46 <AmiBlitz3.ab2@7555>    BNE.w asmfixer__notdpc
00023F48 <AmiBlitz3.ab2@7556>   SUB.l A1,D3                                              ;branchword
00023F4C <AmiBlitz3.ab2@7557>    BSR.w chkword
00023F4E <AmiBlitz3.ab2@7558>   MOVE.w D3,(A1)
00023F52 <AmiBlitz3.ab2@7559> BRA.w asmfixer__next
00023F56 <AmiBlitz3.ab2@7563>   CMP.w #$A,D1
00023F5A <AmiBlitz3.ab2@7564>    BNE.w asmfixer__imm
00023F5C <AmiBlitz3.ab2@7565>   SUB.l A1,D3                                              ;branchbyte
00023F60 <AmiBlitz3.ab2@7566> BRA.w asmfixer__isbyte
00023F64 <AmiBlitz3.ab2@7570>   CMP.w #$11,d1
00023F68 <AmiBlitz3.ab2@7571>   BLE asmfixer__imm_org
00023F6A <AmiBlitz3.ab2@7572>   MOVE.l a3,-(a7)
00023F70 <AmiBlitz3.ab2@7573>   LEA pluginbase,a3
00023F74 <AmiBlitz3.ab2@7574>   MOVE.l 8(a2),a0
00023F76 <AmiBlitz3.ab2@7575>   JSR (a0)                                                 ;hook
00023F78 <AmiBlitz3.ab2@7576>   MOVE.l (a7)+,a3
00023F7C <AmiBlitz3.ab2@7577> BRA asmfixer__next
00023F80 <AmiBlitz3.ab2@7580>   MOVE.w $A(A2),D0
00023F84 <AmiBlitz3.ab2@7581>    BEQ.w asmfixer__noflag
00023F88 <AmiBlitz3.ab2@7582>   CMP.w #$1,D0
00023F8C <AmiBlitz3.ab2@7583>    BEQ.w asmfixer__tocount
00023F90 <AmiBlitz3.ab2@7584>   CMP.w #$3,D0
00023F94 <AmiBlitz3.ab2@7585>    BEQ.w asmfixer__tomoveq
00023F98 <AmiBlitz3.ab2@7586>   CMP.w #$4,D0
00023F9C <AmiBlitz3.ab2@7587>    BEQ.w asmfixer__totrap
00023FA0 <AmiBlitz3.ab2@7590>   CMP.w #$B,D1                                             ;long
00023FA4 <AmiBlitz3.ab2@7591>    BEQ.w asmfixer__isabsl
00023FA8 <AmiBlitz3.ab2@7592> BRA asmfixer__word2                                              ;word
00023FAE <AmiBlitz3.ab2@7595>   CMP.l #$F,D3
00023FB2 <AmiBlitz3.ab2@7596>    BHI.w illtraperr
00023FB4 <AmiBlitz3.ab2@7597>   OR.b D3,-(A1)
00023FB8 <AmiBlitz3.ab2@7598> BRA.w asmfixer__next
00023FBE <AmiBlitz3.ab2@7601>   CMP.l #$8,D3
00023FC2 <AmiBlitz3.ab2@7602>    BHI.w illimmerr
00023FC4 <AmiBlitz3.ab2@7603>   TST.l D3
00023FC8 <AmiBlitz3.ab2@7604>    BEQ.w illimmerr
00023FCC <AmiBlitz3.ab2@7605>   ANDI.w #$7,D3
00023FCE <AmiBlitz3.ab2@7606>   LSL.w #8,D3
00023FD0 <AmiBlitz3.ab2@7607>   LSL.w #1,D3
00023FD2 <AmiBlitz3.ab2@7608>   OR.w D3,-(A1)
00023FD6 <AmiBlitz3.ab2@7609> BRA.w asmfixer__next
00023FDA <AmiBlitz3.ab2@7612>    BSR.w chkbyte
00023FDC <AmiBlitz3.ab2@7613>   MOVE.b D3,-(A1)
00023FDE <AmiBlitz3.ab2@7616>   MOVEA.l (A2),A2
00023FE2 <AmiBlitz3.ab2@7617> BRA.w asmfixer__loop
00023FE8 <AmiBlitz3.ab2@7620>   CLR.w constmode
00023FEE <AmiBlitz3.ab2@7623>   CLR.b curtemplabel
00023FF0 <AmiBlitz3.ab2@7624> RTS
00023FF2 <AmiBlitz3.ab2@7633>   BTST D3,D6
00023FF6 <AmiBlitz3.ab2@7634>    BEQ.w illeaerr
00023FFA <AmiBlitz3.ab2@7635>    BSR.w makemode
00023FFE <AmiBlitz3.ab2@7636>   CMP.w #$7,D3
00024002 <AmiBlitz3.ab2@7637>    BCS.w doea__skip
00024004 <AmiBlitz3.ab2@7638>   MOVE.w D3,D2
00024006 <AmiBlitz3.ab2@7639>   SUBQ.w #7,D2
0002400A <AmiBlitz3.ab2@7640>   CMP.w #$5,D2
0002400E <AmiBlitz3.ab2@7641>    BCS.w doea__skip0
00024010 <AmiBlitz3.ab2@7642>   MOVEQ.l #$04,D2
00024012 <AmiBlitz3.ab2@7645>   MOVEQ.l #$07,D3
00024014 <AmiBlitz3.ab2@7648>   MOVE.b D7,D0
00024018 <AmiBlitz3.ab2@7649>   ANDI.w #$F,D0
0002401C <AmiBlitz3.ab2@7650>   CMP.w #$F,D0
00024020 <AmiBlitz3.ab2@7651>    BEQ.w doea__skip2
00024022 <AmiBlitz3.ab2@7652>   LSL.w D0,D3
00024024 <AmiBlitz3.ab2@7653>   OR.w D3,D1
00024026 <AmiBlitz3.ab2@7656>   LSR.w #4,D7
0002402A <AmiBlitz3.ab2@7657>   ANDI.w #$F,D7
0002402E <AmiBlitz3.ab2@7658>   CMP.w #$F,D7
00024032 <AmiBlitz3.ab2@7659>    BEQ.w doea__skip3
00024034 <AmiBlitz3.ab2@7660>   LSL.w D7,D2
00024036 <AmiBlitz3.ab2@7661>   OR.w D2,D1
00024038 <AmiBlitz3.ab2@7664> RTS
0002403E <AmiBlitz3.ab2@7668>   CMP.l #$7F,D3
00024042 <AmiBlitz3.ab2@7669>    BGT.w illdiserr
00024048 <AmiBlitz3.ab2@7670>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
0002404C <AmiBlitz3.ab2@7671>    BLT.w illdiserr
0002404E <AmiBlitz3.ab2@7672> RTS
00024054 <AmiBlitz3.ab2@7676>   CMP.l #$7fff,D3
00024058 <AmiBlitz3.ab2@7677>    BGT.w illdiserr
0002405E <AmiBlitz3.ab2@7678>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00024062 <AmiBlitz3.ab2@7679>    BLT.w illdiserr
00024064 <AmiBlitz3.ab2@7680> RTS
00024066 <AmiBlitz3.ab2@7685>   MOVE.b (a5)+,d0
00024068 <AmiBlitz3.ab2@7686>   CMP.b d1,d0
0002406C <AmiBlitz3.ab2@7687>   BEQ 'll10
0002406E <AmiBlitz3.ab2@7688>   TST.b d0
00024072 <AmiBlitz3.ab2@7689>   BNE 'll20
00024074 <AmiBlitz3.ab2@7692>   SUBQ #1,a5
00024076 <AmiBlitz3.ab2@7693> RTS
00024078 <AmiBlitz3.ab2@7698>   MOVE.b (a5)+,d0
0002407C <AmiBlitz3.ab2@7699>   CMP.b #",",d0
00024080 <AmiBlitz3.ab2@7700>   BEQ 'll10
00024084 <AmiBlitz3.ab2@7701>   CMP.b #";",d0
00024088 <AmiBlitz3.ab2@7702>   BEQ 'll10
0002408C <AmiBlitz3.ab2@7703>  CMP.b #":",d0
00024090 <AmiBlitz3.ab2@7704>   BEQ 'll10
00024092 <AmiBlitz3.ab2@7707>   TST.b d0
00024096 <AmiBlitz3.ab2@7708>   BNE 'll20
00024098 <AmiBlitz3.ab2@7711>   SUBQ #1,a5
0002409A <AmiBlitz3.ab2@7712> RTS
0002409C <AmiBlitz3.ab2@7716>   ADD.l a2,d1
000240A2 <AmiBlitz3.ab2@7717>   LEA tempspace,a1
000240A4 <AmiBlitz3.ab2@7718>   MOVE.l d1,a0
000240A6 <AmiBlitz3.ab2@7721>   MOVE.b (a0)+,(a1)+
000240AA <AmiBlitz3.ab2@7722>   BNE.s 'l10
000240AC <AmiBlitz3.ab2@7723>   SUBQ.l #1,a0
000240AE <AmiBlitz3.ab2@7724>   SUBQ.l #1,a1
000240B0 <AmiBlitz3.ab2@7727>   MOVE.b (a5)+,(a1)+
000240B4 <AmiBlitz3.ab2@7728>   BNE.s 'l20
000240B6 <AmiBlitz3.ab2@7729>   CLR.b (a1)
000240BC <AmiBlitz3.ab2@7730>   LEA tempspace,a5
000240BE <AmiBlitz3.ab2@7731> RTS
000240C2 <AmiBlitz3.ab2@7735>   MOVEM.l D1-D2/A0,-(A7)
000240C4 <AmiBlitz3.ab2@7736>   MOVE.l d0,d2
000240C6 <AmiBlitz3.ab2@7737>   MOVEQ #0,d1
000240C8 <AmiBlitz3.ab2@7738>   MOVE.l a5,a4
000240CA <AmiBlitz3.ab2@7741>   ADDQ.l #1,d1
000240CC <AmiBlitz3.ab2@7742>   MOVE.b (a5)+,d0
000240D0 <AmiBlitz3.ab2@7743>   CMP.b #",",d0
000240D4 <AmiBlitz3.ab2@7744>   BEQ 'll10
000240D8 <AmiBlitz3.ab2@7745>   CMP.b #";",d0
000240DC <AmiBlitz3.ab2@7746>   BEQ 'll10
000240E0 <AmiBlitz3.ab2@7747>   CMP.b #":",d0
000240E4 <AmiBlitz3.ab2@7748>   BEQ 'll10
000240E8 <AmiBlitz3.ab2@7749>   CMP.b #"(",d0
000240EC <AmiBlitz3.ab2@7750>   BEQ 'll10
000240EE <AmiBlitz3.ab2@7751>   TST.b d0
000240F2 <AmiBlitz3.ab2@7752>   BNE 'll20
000240F4 <AmiBlitz3.ab2@7755>   SUBQ #1,a5
000240F8 <AmiBlitz3.ab2@7756>   CMP.b #"'",(a4)
000240FC <AmiBlitz3.ab2@7757>   BEQ 'llocal
00024102 <AmiBlitz3.ab2@7758>   TST.w inmacro
00024106 <AmiBlitz3.ab2@7759>   BNE 'lmacro
00024108 <AmiBlitz3.ab2@7760>   MOVEQ.l #$14+4,D0
0002410A <AmiBlitz3.ab2@7761>   ADD.l d1,d0
0002410C <AmiBlitz3.ab2@7762>   MOVE.l d1,-(a7)
0002410E <AmiBlitz3.ab2@7763>   MOVEQ.l #$01,D1
00024114 <AmiBlitz3.ab2@7764>   MOVEA.l _execbase,A6
0002411A <AmiBlitz3.ab2@7765>   MOVE.l mempool2,a0
0002411E <AmiBlitz3.ab2@7766>   JSR _AllocPooled(a6)
00024120 <AmiBlitz3.ab2@7768>   MOVE.l (a7)+,d1
00024122 <AmiBlitz3.ab2@7769>   TST.l d0
00024126 <AmiBlitz3.ab2@7770>   BEQ nomemory
00024128 <AmiBlitz3.ab2@7771>   MOVEA.l D0,A0
00024130 <AmiBlitz3.ab2@7773>   MOVE.w linenumat+2,$A(A0)
00024136 <AmiBlitz3.ab2@7775>   MOVE.l templabel,(A0)
0002413C <AmiBlitz3.ab2@7776>   MOVE.l A0,templabel
00024144 <AmiBlitz3.ab2@7777>   MOVE.l destpointer,$4(A0)
00024148 <AmiBlitz3.ab2@7778>   MOVE.l d2,$8(A0)
0002414C <AmiBlitz3.ab2@7779>   LEA $E(A0),A0
00024150 <AmiBlitz3.ab2@7780>   MOVE.b #$14,(A0)+
00024152 <AmiBlitz3.ab2@7781>   CLR.b (a0)+
00024154 <AmiBlitz3.ab2@7783>   MOVE.l a0,d2
00024156 <AmiBlitz3.ab2@7784>   ADDQ.l #4,d2
00024158 <AmiBlitz3.ab2@7785>   MOVE.l d2,(a0)+
0002415A <AmiBlitz3.ab2@7788>   MOVE.b (a4)+,(a0)+
0002415C <AmiBlitz3.ab2@7789>   SUBQ.l #1,d1
00024160 <AmiBlitz3.ab2@7790>   BNE 'lc1
00024162 <AmiBlitz3.ab2@7791>   CLR.b (a0)+
00024168 <AmiBlitz3.ab2@7792>   MOVE.w linenumat,(a0)
0002416C <AmiBlitz3.ab2@7793>   MOVEM.l (A7)+,D1-D2/A0
0002416E <AmiBlitz3.ab2@7794> RTS
00024170 <AmiBlitz3.ab2@7797>   MOVEQ.l #$10+2,D0
00024172 <AmiBlitz3.ab2@7798>   ADD.l d1,d0
00024176 <AmiBlitz3.ab2@7799>   MOVEM.l a4/d3,-(a7)
00024178 <AmiBlitz3.ab2@7800>   MOVE.l d1,d3
0002417A <AmiBlitz3.ab2@7801>   MOVEQ.l #$01,D1
00024180 <AmiBlitz3.ab2@7802>   MOVEA.l _execbase,A6
00024186 <AmiBlitz3.ab2@7803>   MOVE.l mempool2,a0
0002418A <AmiBlitz3.ab2@7804>   JSR _AllocPooled(a6)
0002418C <AmiBlitz3.ab2@7806>   TST.l d0
00024190 <AmiBlitz3.ab2@7807>   BEQ nomemory
00024192 <AmiBlitz3.ab2@7808>   MOVEA.l D0,A0
0002419A <AmiBlitz3.ab2@7811>   MOVE.w linenumat+2,$C(A0)
000241A0 <AmiBlitz3.ab2@7812>   MOVE.l templabel,(A0)
000241A6 <AmiBlitz3.ab2@7813>   MOVE.l A0,templabel
000241AE <AmiBlitz3.ab2@7814>   MOVE.l destpointer,$4(A0)
000241B2 <AmiBlitz3.ab2@7815>   MOVE.l d2,$8(A0)
000241B6 <AmiBlitz3.ab2@7816>   LEA $E(A0),A0
000241B8 <AmiBlitz3.ab2@7817>   MOVE.b d3,(A0)+
000241BE <AmiBlitz3.ab2@7818>   ADD.b #$10,-1(a0)
000241C2 <AmiBlitz3.ab2@7819>   MOVE.b #$1,(a0)+
000241C4 <AmiBlitz3.ab2@7820>   SUBQ.w #1,d3
000241C6 <AmiBlitz3.ab2@7823>   MOVE.b (a4)+,(a0)+
000241C8 <AmiBlitz3.ab2@7824>   SUBQ.l #1,d3
000241CC <AmiBlitz3.ab2@7825>   BNE.s 'lm2
000241CE <AmiBlitz3.ab2@7826>   CLR.b (a0)+
000241D4 <AmiBlitz3.ab2@7827>   MOVE.w linenumat,(a0)
000241D8 <AmiBlitz3.ab2@7828>   MOVEM.l (a7)+,d3/a4
000241DC <AmiBlitz3.ab2@7829>   MOVEM.l (A7)+,D1-D2/A0
000241DE <AmiBlitz3.ab2@7830> RTS
000241E4 <AmiBlitz3.ab2@7833>   LEA lastgloballabel,a1
000241E6 <AmiBlitz3.ab2@7836>   ADDQ.l #1,d1
000241E8 <AmiBlitz3.ab2@7837>   TST.b (a1)+
000241EC <AmiBlitz3.ab2@7838>   BNE.s 'll11
000241EE <AmiBlitz3.ab2@7839>   MOVEQ.l #$10+2,D0
000241F0 <AmiBlitz3.ab2@7840>   ADD.l d1,d0
000241F4 <AmiBlitz3.ab2@7841>   MOVEM.l a4/d3,-(a7)
000241F6 <AmiBlitz3.ab2@7842>   MOVE.l d1,d3
000241F8 <AmiBlitz3.ab2@7843>   MOVEQ.l #$01,D1
000241FE <AmiBlitz3.ab2@7844>   MOVEA.l _execbase,A6
00024204 <AmiBlitz3.ab2@7845>   MOVE.l mempool2,a0
00024208 <AmiBlitz3.ab2@7846>   JSR _AllocPooled(a6)
0002420A <AmiBlitz3.ab2@7848>   TST.l d0
0002420E <AmiBlitz3.ab2@7849>   BEQ nomemory
00024210 <AmiBlitz3.ab2@7850>   MOVEA.l D0,A0
00024218 <AmiBlitz3.ab2@7853>   MOVE.w linenumat+2,$C(A0)
0002421E <AmiBlitz3.ab2@7854>   MOVE.l templabel,(A0)
00024224 <AmiBlitz3.ab2@7855>   MOVE.l A0,templabel
0002422C <AmiBlitz3.ab2@7856>   MOVE.l destpointer,$4(A0)
00024230 <AmiBlitz3.ab2@7857>   MOVE.l d2,$8(A0)
00024234 <AmiBlitz3.ab2@7858>   LEA $E(A0),A0
00024236 <AmiBlitz3.ab2@7859>   MOVE.b d3,(A0)+
0002423C <AmiBlitz3.ab2@7860>   ADD.b #$10,-1(a0)
00024240 <AmiBlitz3.ab2@7861>   MOVE.b #$1,(a0)+
00024242 <AmiBlitz3.ab2@7862>   SUBQ.w #1,d3
00024248 <AmiBlitz3.ab2@7863>   LEA lastgloballabel,a1
0002424A <AmiBlitz3.ab2@7866>   SUBQ.l #1,d3
0002424C <AmiBlitz3.ab2@7867>   MOVE.b (a1)+,(a0)+
00024250 <AmiBlitz3.ab2@7868>   BNE.s 'lm3
00024252 <AmiBlitz3.ab2@7869>   SUBQ.l #1,a0
00024254 <AmiBlitz3.ab2@7872>   MOVE.b (a4)+,(a0)+
00024256 <AmiBlitz3.ab2@7873>   SUBQ.l #1,d3
0002425A <AmiBlitz3.ab2@7874>   BNE.s 'lm1
0002425C <AmiBlitz3.ab2@7875>   CLR.b (a0)+
00024262 <AmiBlitz3.ab2@7876>   MOVE.w linenumat,(a0)
00024266 <AmiBlitz3.ab2@7877>   MOVEM.l (a7)+,d3/a4
0002426A <AmiBlitz3.ab2@7878>   MOVEM.l (A7)+,D1-D2/A0
0002426C <AmiBlitz3.ab2@7879> RTS
00024296 <AmiBlitz3.ab2@7883>   !basic
000242EC <AmiBlitz3.ab2@7884>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
000242FE <AmiBlitz3.ab2@7885>   loop Delay_ 1
00024304 <AmiBlitz3.ab2@7886> Goto loop
00024308 <AmiBlitz3.ab2@7890>   MOVEM.l D0-D2/A0,-(A7)
0002430C <AmiBlitz3.ab2@7891>   MOVE.w $E(A0),-(A7)
00024310 <AmiBlitz3.ab2@7892>    BPL.w insasm__ok
00024312 <AmiBlitz3.ab2@7893>   CLR.w (A7)
00024314 <AmiBlitz3.ab2@7896>   MOVE.l A1,-(A7)
00024316 <AmiBlitz3.ab2@7897>   MOVEQ.l #$10+2,D0
0002431C <AmiBlitz3.ab2@7898>   ADD.w asmlen,D0
0002431E <AmiBlitz3.ab2@7899>   MOVE.w D0,D2
00024320 <AmiBlitz3.ab2@7900>   MOVEQ.l #$01,D1
00024326 <AmiBlitz3.ab2@7901>   MOVEA.l _execbase,A6
0002432C <AmiBlitz3.ab2@7902>   MOVE.l mempool2,a0
00024330 <AmiBlitz3.ab2@7903>   JSR _AllocPooled(a6)
00024332 <AmiBlitz3.ab2@7905>   MOVEA.l D0,A0
0002433A <AmiBlitz3.ab2@7908>   MOVE.w linenumat+2,$C(A0)
00024340 <AmiBlitz3.ab2@7909>   MOVE.l templabel,(A0)
00024346 <AmiBlitz3.ab2@7910>   MOVE.l A0,templabel
0002434A <AmiBlitz3.ab2@7911>   MOVE.l (A7),$4(A0)
0002434E <AmiBlitz3.ab2@7912>   MOVE.w d3,$8(A0)
00024354 <AmiBlitz3.ab2@7913>   MOVE.w $4(A7),$A(A0)
00024358 <AmiBlitz3.ab2@7914>   LEA $E(A0),A0
0002435A <AmiBlitz3.ab2@7915>   MOVE.b D2,(A0)+                                           ;length
00024360 <AmiBlitz3.ab2@7916>   MOVEA.l asmbuff,A1
00024362 <AmiBlitz3.ab2@7917>   ADDQ.w #1,A1
00024364 <AmiBlitz3.ab2@7918>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00024368 <AmiBlitz3.ab2@7919>    BNE.w insasm__loop
0002436A <AmiBlitz3.ab2@7920>   MOVE.l (A1)+,(A0)+
00024370 <AmiBlitz3.ab2@7921>   MOVE.w linenumat,(a0)
00024374 <AmiBlitz3.ab2@7922> BRA.w insasm__loopdone
00024376 <AmiBlitz3.ab2@7925>    MOVE.b (A1)+,(A0)+
0002437A <AmiBlitz3.ab2@7926>    BNE.w insasm__loop
00024380 <AmiBlitz3.ab2@7927>    MOVE.w linenumat,(a0)
00024382 <AmiBlitz3.ab2@7930>   MOVEA.l (A7)+,A1
00024384 <AmiBlitz3.ab2@7931>   ADDQ.w #2,A7
00024388 <AmiBlitz3.ab2@7932>   MOVEM.l (A7)+,D0-D2/A0
0002438A <AmiBlitz3.ab2@7933> RTS
0002438E <AmiBlitz3.ab2@7937>   CMP.w #$5,D3
00024392 <AmiBlitz3.ab2@7938>    BCS.w makemode__done
00024396 <AmiBlitz3.ab2@7939>   CMP.w #$B,D3
0002439A <AmiBlitz3.ab2@7940>    BHI.w makemode__done2
0002439E <AmiBlitz3.ab2@7941>    BEQ.w makemode__imm
000243A2 <AmiBlitz3.ab2@7942>    BSR.w insasm
000243A6 <AmiBlitz3.ab2@7943>   CMP.w #$5,D3
000243AA <AmiBlitz3.ab2@7944>    BEQ.w makemode__word
000243AE <AmiBlitz3.ab2@7945>   CMP.w #$6,D3
000243B2 <AmiBlitz3.ab2@7946>    BEQ.w makemode__dxi
000243B6 <AmiBlitz3.ab2@7947>   CMP.w #$7,D3
000243BA <AmiBlitz3.ab2@7948>    BEQ.w makemode__word
000243BE <AmiBlitz3.ab2@7949>   CMP.w #$8,D3
000243C2 <AmiBlitz3.ab2@7950>    BEQ.w makemode__long
000243C6 <AmiBlitz3.ab2@7951>   CMP.w #$9,D3
000243CA <AmiBlitz3.ab2@7952>    BEQ.w makemode__word
000243D0 <AmiBlitz3.ab2@7956>   CMPA.l destbufferend,A1
000243D4 <AmiBlitz3.ab2@7957>    BCS.w makemode__ok7
000243D6 <AmiBlitz3.ab2@7958>   ADDQ.w #2,A1
000243D8 <AmiBlitz3.ab2@7959> RTS
000243DA <AmiBlitz3.ab2@7962>   MOVE.w D4,(A1)+
000243DC <AmiBlitz3.ab2@7963> RTS
000243E4 <AmiBlitz3.ab2@7966>   CMPI.w #$8,asmsize
000243E8 <AmiBlitz3.ab2@7967>    BCC.w makemode__immlong
000243EA <AmiBlitz3.ab2@7968>   MOVEQ.l #$10,D3
000243EE <AmiBlitz3.ab2@7969>    BSR.w insasm
000243F0 <AmiBlitz3.ab2@7970>   MOVEQ.l #$0B,D3
000243F4 <AmiBlitz3.ab2@7971> BRA.w makemode__word
000243F8 <AmiBlitz3.ab2@7974>   BSR.w insasm
000243FA <AmiBlitz3.ab2@7977>   ADDQ.w #2,A1
000243FC <AmiBlitz3.ab2@7980>   ADDQ.w #2,A1
000243FE <AmiBlitz3.ab2@7981> RTS
00024402 <AmiBlitz3.ab2@7984>   CMP.w #$F,D3
00024406 <AmiBlitz3.ab2@7985>    BNE.w makemode__done
0002440C <AmiBlitz3.ab2@7986>   CMPA.l destbufferend,A1
00024410 <AmiBlitz3.ab2@7987>    BCS.w makemode__ok3
00024412 <AmiBlitz3.ab2@7988>   ADDQ.w #2,A1
00024414 <AmiBlitz3.ab2@7989>   ADDQ.w #4,A7
00024416 <AmiBlitz3.ab2@7990> RTS
00024418 <AmiBlitz3.ab2@7993>   MOVE.w D2,(A1)+
0002441A <AmiBlitz3.ab2@7994>   ADDQ.w #4,A7
0002441C <AmiBlitz3.ab2@7997> RTS
00024420 <AmiBlitz3.ab2@8001>   BSR.w storeloc
0002442A <AmiBlitz3.ab2@8002>   MOVE.l linenumat,oldline
0002442C <AmiBlitz3.ab2@8003>   MOVEQ.l #$00,D1
00024430 <AmiBlitz3.ab2@8004>    BSR.w get1bytemain
00024434 <AmiBlitz3.ab2@8005>    BEQ.w JL_0_676E
00024436 <AmiBlitz3.ab2@8006>   MOVEQ.l #$00,D3
0002443A <AmiBlitz3.ab2@8007> BRA.w JL_0_6726
0002443E <AmiBlitz3.ab2@8010>    BSR.w get1bytemain
00024442 <AmiBlitz3.ab2@8011>    BNE.w JL_0_671C
00024444 <AmiBlitz3.ab2@8014>   TST.w D3
00024448 <AmiBlitz3.ab2@8015>    BNE.w brackets_                                         ;syntax error brackets
0002444C <AmiBlitz3.ab2@8016> BRA.w JL_0_676C
00024452 <AmiBlitz3.ab2@8019>    MOVE.w instringon,D4
00024456 <AmiBlitz3.ab2@8021>      BEQ JL_0_6726
00024458 <AmiBlitz3.ab2@8024>     MOVEQ #0,d0
0002445A <AmiBlitz3.ab2@8025>      MOVE.b (a5)+,d0                                       ;fix "ue"
00024460 <AmiBlitz3.ab2@8026>      MOVE.w d0,lastchar
00024464 <AmiBlitz3.ab2@8027>      BEQ ready
00024468 <AmiBlitz3.ab2@8028>      CMP.b #$22,d0
0002446C <AmiBlitz3.ab2@8029>      BNE 'l1
00024472 <AmiBlitz3.ab2@8030>      NOT.w instringon
00024476 <AmiBlitz3.ab2@8031> BRA JL_0_670A
0002447A <AmiBlitz3.ab2@8034>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
0002447E <AmiBlitz3.ab2@8035>            BNE 'l10
00024482 <AmiBlitz3.ab2@8036>            CMP.b #"@",(a5)
00024486 <AmiBlitz3.ab2@8037>            BNE 'l10
0002448C <AmiBlitz3.ab2@8040>            TST.w ininclude
00024490 <AmiBlitz3.ab2@8041>            BNE 'inc
00024496 <AmiBlitz3.ab2@8042>            MOVE.l sourceline3,a5
0002449C <AmiBlitz3.ab2@8043>            CMP.l #0,a5
000244A0 <AmiBlitz3.ab2@8044>            BNE 'l11t
000244A6 <AmiBlitz3.ab2@8045>            MOVEA.l sourceline,A5
000244A8 <AmiBlitz3.ab2@8048>            MOVEA.l (A5),A5
000244AE <AmiBlitz3.ab2@8049>            CMP.l #0,a5
000244B2 <AmiBlitz3.ab2@8050>            BEQ JL_0_676C
000244B8 <AmiBlitz3.ab2@8051>            MOVE.l a5,sourceline3
000244BC <AmiBlitz3.ab2@8052>            LEA $9(A5),A5
000244C0 <AmiBlitz3.ab2@8053> BRA 'l11
000244C2 <AmiBlitz3.ab2@8056>            ADDQ.l #1,a5
000244C4 <AmiBlitz3.ab2@8057>            TST.b (a5)
000244C8 <AmiBlitz3.ab2@8058>            BNE 'inc
000244CA <AmiBlitz3.ab2@8062>            ADDQ.l #1,a5
000244CC <AmiBlitz3.ab2@8063>            TST.b (a5)
000244D0 <AmiBlitz3.ab2@8064>            BEQ illeolerr
000244D2 <AmiBlitz3.ab2@8065>            MOVE.l a5,-(a7)
000244D6 <AmiBlitz3.ab2@8068>       CMP.b #" ",(a5)+
000244DA <AmiBlitz3.ab2@8069>       BEQ 'l110
000244E0 <AmiBlitz3.ab2@8070>        CMP.b #";",-1(a5)
000244E2 <AmiBlitz3.ab2@8071>        MOVE.l (a7)+,a5
000244E6 <AmiBlitz3.ab2@8072>        BEQ 'l111
000244EA <AmiBlitz3.ab2@8073> BRA JL_0_670A
000244EE <AmiBlitz3.ab2@8076>    CMP.w #$29,D0
000244F2 <AmiBlitz3.ab2@8077>    BNE.w JL_0_673A
000244F4 <AmiBlitz3.ab2@8078>   TST.w D3
000244F8 <AmiBlitz3.ab2@8079>    BEQ.w JL_0_676C
000244FA <AmiBlitz3.ab2@8082>   SUBQ.w #1,D3
000244FE <AmiBlitz3.ab2@8083> BRA.w JL_0_670A
00024502 <AmiBlitz3.ab2@8086>    CMP.w #$7D,D0
00024506 <AmiBlitz3.ab2@8087>    BEQ.w JL_0_6734
0002450A <AmiBlitz3.ab2@8088>   CMP.w #$28,D0
0002450E <AmiBlitz3.ab2@8089>    BNE.w JL_0_6750
00024510 <AmiBlitz3.ab2@8092>    ADDQ.w #1,D3
00024514 <AmiBlitz3.ab2@8093> BRA.w JL_0_670A
00024518 <AmiBlitz3.ab2@8096>   CMP.w #$7B,D0
0002451C <AmiBlitz3.ab2@8097>    BEQ.w JL_0_674A
00024520 <AmiBlitz3.ab2@8098>   CMP.w #$2C,D0
00024524 <AmiBlitz3.ab2@8099>    BNE.w JL_0_670A
00024526 <AmiBlitz3.ab2@8100>   TST.w D3
0002452A <AmiBlitz3.ab2@8101>    BNE.w JL_0_670A
0002452C <AmiBlitz3.ab2@8102>   ADDQ.w #1,D1
00024530 <AmiBlitz3.ab2@8103> BRA.w JL_0_670A
00024532 <AmiBlitz3.ab2@8106>   ADDQ.w #1,D1
00024538 <AmiBlitz3.ab2@8109>   CLR.l sourceline3
00024542 <AmiBlitz3.ab2@8110>   MOVE.l oldline,linenumat
00024546 <AmiBlitz3.ab2@8111> BRA.w resloc
0002454C <AmiBlitz3.ab2@8115>    CLR.w numreps
0002454E <AmiBlitz3.ab2@8116>   MOVE.w D1,D0
00024552 <AmiBlitz3.ab2@8117>   ANDI.w #$FF00,D0
00024556 <AmiBlitz3.ab2@8118>    BEQ.w fetchlibps__noreps
00024558 <AmiBlitz3.ab2@8119>   LSR.w #8,D0
0002455A <AmiBlitz3.ab2@8120>   LSR.w #4,D0
0002455E <AmiBlitz3.ab2@8121>    BEQ.w fetchlibps__skip
00024560 <AmiBlitz3.ab2@8122>   SUB.b D0,D1
0002456A <AmiBlitz3.ab2@8123>    MOVE.w regnum,regnumfunc
00024570 <AmiBlitz3.ab2@8124>    MOVE.b funcparloop,-(a7)
00024578 <AmiBlitz3.ab2@8125>    MOVE.b #0,funcparloop
0002457E <AmiBlitz3.ab2@8126>    MOVE.l leftsidetype,-(a7)
00024584 <AmiBlitz3.ab2@8127>    MOVE.l rightsidetype,-(a7)
0002458A <AmiBlitz3.ab2@8128>    CLR.l leftsidetype
00024590 <AmiBlitz3.ab2@8129>    CLR.l rightsidetype
00024596 <AmiBlitz3.ab2@8130>    MOVE.b blitzparloop,-(a7)
0002459E <AmiBlitz3.ab2@8131>    MOVE.b #1,blitzparloop
000245A2 <AmiBlitz3.ab2@8132>    BSR.w fetchpees2
000245A8 <AmiBlitz3.ab2@8133>    MOVE.b (a7)+,blitzparloop
000245AE <AmiBlitz3.ab2@8134>    MOVE.l (a7)+,rightsidetype
000245B4 <AmiBlitz3.ab2@8135>    MOVE.l (a7)+,leftsidetype
000245BA <AmiBlitz3.ab2@8136>    MOVE.b (a7)+,funcparloop
000245BE <AmiBlitz3.ab2@8137>   CMP.w #$2C,D0
000245C2 <AmiBlitz3.ab2@8138>    BNE.w syntaxerr
000245C4 <AmiBlitz3.ab2@8141>   MOVE.w D1,D2
000245C6 <AmiBlitz3.ab2@8142>   LSR.w #8,D2
000245CA <AmiBlitz3.ab2@8143>   ANDI.w #$7,D2
000245CC <AmiBlitz3.ab2@8146>    CMP.b D2,D1
000245D0 <AmiBlitz3.ab2@8147>    BCS.w fetchlibps__repsdone
000245D2 <AmiBlitz3.ab2@8148>   SUB.b D2,D1
000245D6 <AmiBlitz3.ab2@8149>   MOVEM.l D2/A2,-(A7)
000245D8 <AmiBlitz3.ab2@8150>   MOVE.w D2,D0
000245DE <AmiBlitz3.ab2@8151>   MOVE.b funcparloop,-(a7)
000245E6 <AmiBlitz3.ab2@8152>   MOVE.b #0,funcparloop
000245EC <AmiBlitz3.ab2@8153>   MOVE.l leftsidetype,-(a7)
000245F2 <AmiBlitz3.ab2@8154>   MOVE.l rightsidetype,-(a7)
000245F8 <AmiBlitz3.ab2@8155>   CLR.l leftsidetype
000245FE <AmiBlitz3.ab2@8156>   CLR.l rightsidetype
00024604 <AmiBlitz3.ab2@8157>   MOVE.b blitzparloop,-(a7)
0002460C <AmiBlitz3.ab2@8158>   MOVE.b #1,blitzparloop
00024610 <AmiBlitz3.ab2@8159>   BSR.w fetchpees4
00024616 <AmiBlitz3.ab2@8160>   MOVE.b (a7)+,blitzparloop
0002461C <AmiBlitz3.ab2@8161>   MOVE.l (a7)+,rightsidetype
00024622 <AmiBlitz3.ab2@8162>   MOVE.l (a7)+,leftsidetype
00024628 <AmiBlitz3.ab2@8163>   MOVE.b (a7)+,funcparloop
0002462C <AmiBlitz3.ab2@8164>   MOVEM.l (A7)+,D2/A2
00024632 <AmiBlitz3.ab2@8165>   ADDQ.w #1,numreps
00024636 <AmiBlitz3.ab2@8166> BRA.w fetchlibps__rloop
0002463C <AmiBlitz3.ab2@8169>    MOVE.w numreps,D3
00024640 <AmiBlitz3.ab2@8170>    BEQ.w syntaxerr
00024642 <AmiBlitz3.ab2@8171>   ADDA.w D2,A2
00024646 <AmiBlitz3.ab2@8172>   ANDI.w #$FF,D1
0002464A <AmiBlitz3.ab2@8173>    BEQ.w fetchlibps__done
0002464E <AmiBlitz3.ab2@8174>   CMP.w #$2C,D0
00024652 <AmiBlitz3.ab2@8175>    BNE.w syntaxerr
00024654 <AmiBlitz3.ab2@8178>    MOVE.w D1,D0
00024658 <AmiBlitz3.ab2@8179>    BNE.w fetchpees2b
0002465A <AmiBlitz3.ab2@8182> RTS
00024660 <AmiBlitz3.ab2@8185>   MOVE.b funcparloop,-(a7)
00024666 <AmiBlitz3.ab2@8186>   MOVE.l leftsidetype,-(a7)
0002466C <AmiBlitz3.ab2@8187>   MOVE.l rightsidetype,-(a7)
00024672 <AmiBlitz3.ab2@8188>   CLR.l leftsidetype
00024678 <AmiBlitz3.ab2@8189>   CLR.l rightsidetype
00024680 <AmiBlitz3.ab2@8190>   MOVE.b #0,funcparloop
00024686 <AmiBlitz3.ab2@8191>   MOVE.b blitzparloop,-(a7)
0002468E <AmiBlitz3.ab2@8192>   MOVE.b #1,blitzparloop
00024692 <AmiBlitz3.ab2@8193>   BSR.w fetchpees2
00024698 <AmiBlitz3.ab2@8194>   MOVE.b (a7)+,blitzparloop
0002469E <AmiBlitz3.ab2@8195>   MOVE.l (a7)+,rightsidetype
000246A4 <AmiBlitz3.ab2@8196>   MOVE.l (a7)+,leftsidetype
000246AA <AmiBlitz3.ab2@8197>   MOVE.b (a7)+,funcparloop
000246AC <AmiBlitz3.ab2@8198> RTS
000246B0 <AmiBlitz3.ab2@8202> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
000246B2 <AmiBlitz3.ab2@8205> partostack:  Ds.w 1                                        ;pmode org source
000246B4 <AmiBlitz3.ab2@8209>   MOVEQ.l #$01,D2
000246B8 <AmiBlitz3.ab2@8210> BRA.w fetchpees3
000246BA <AmiBlitz3.ab2@8213>   MOVEQ.l #$00,D2
000246BE <AmiBlitz3.ab2@8216>   ANDI.w #$F,D0
000246C4 <AmiBlitz3.ab2@8224>   CLR.w parnum
000246C6 <AmiBlitz3.ab2@8225>   MOVE.w D1,-(A7)
000246CA <AmiBlitz3.ab2@8226>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
000246D0 <AmiBlitz3.ab2@8227>   MOVE.w D2,partostack
000246D2 <AmiBlitz3.ab2@8228>   MOVE.w D0,-(A7)
000246D6 <AmiBlitz3.ab2@8229>   CMP.w #"@@",(a5)                                         ;was l15
000246DA <AmiBlitz3.ab2@8230>   BNE fetchpees__loop
000246E0 <AmiBlitz3.ab2@8231>   TST.w ininclude                                          ;merge macrolines
000246E4 <AmiBlitz3.ab2@8232>   BNE errorjoin
000246EA <AmiBlitz3.ab2@8233>        MOVEA.l sourceline,A5
000246EC <AmiBlitz3.ab2@8236>            MOVEA.l (A5),A5
000246F2 <AmiBlitz3.ab2@8237>            MOVE.l a5,sourceline
000246F6 <AmiBlitz3.ab2@8238>            LEA $9(A5),A5
000246FC <AmiBlitz3.ab2@8239>            ADDQ.l #1,linenumat
000246FE <AmiBlitz3.ab2@8243>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00024702 <AmiBlitz3.ab2@8244>    BNE.w fetchpees__skip0
00024708 <AmiBlitz3.ab2@8245>   MOVE.w userp,D2                                          ;user selected type
0002470A <AmiBlitz3.ab2@8247>    MOVE.l A2,-(A7)
00024710 <AmiBlitz3.ab2@8248>    ADDQ.w #1,parnum
00024716 <AmiBlitz3.ab2@8249>    TST.b funccall
0002471A <AmiBlitz3.ab2@8250>    BEQ fetchpees__skip0_l1
00024722 <AmiBlitz3.ab2@8251>    CMP.w #6,parnum
00024726 <AmiBlitz3.ab2@8252>    BLE fetchpees__skip0_l1
0002472A <AmiBlitz3.ab2@8253>    CMP.w #7,d2
00024730 <AmiBlitz3.ab2@8259>    TST.b fpu
00024734 <AmiBlitz3.ab2@8260>    BEQ fetchpees__skip0_old
0002473A <AmiBlitz3.ab2@8261>    TST.w regnumfunc
0002473E <AmiBlitz3.ab2@8262>    BEQ fetchpees__skip0_old
00024744 <AmiBlitz3.ab2@8263>    CMP.w #$48e7,-4(a4)
00024748 <AmiBlitz3.ab2@8264>    BNE fetchpees__skip0_old
0002474A <AmiBlitz3.ab2@8265>    MOVEQ #0,d1
00024750 <AmiBlitz3.ab2@8266>    MOVE.w regnum,d1
00024756 <AmiBlitz3.ab2@8267>    CMP regnumfunc,d1                                       ;fpu reg function save
0002475A <AmiBlitz3.ab2@8268>    BGE fetchpees__skip0_old
0002475C <AmiBlitz3.ab2@8269>    ASL.w #7,d1
0002475E <AmiBlitz3.ab2@8270>    MOVE.l d0,-(a7)
00024764 <AmiBlitz3.ab2@8271>    MOVE.w regnumfunc,d0
0002476A <AmiBlitz3.ab2@8272>    CLR.w regmask
00024770 <AmiBlitz3.ab2@8274>    BSET d0,regmask
00024772 <AmiBlitz3.ab2@8275>    SUBQ #1,d0
00024776 <AmiBlitz3.ab2@8276>    BNE fetchpees__skip0_loop
00024778 <AmiBlitz3.ab2@8277>     MOVEQ #0,d0
0002477E <AmiBlitz3.ab2@8280>       BTST d0,regmask
00024782 <AmiBlitz3.ab2@8281>       BEQ fetchpees__skip0_noa7
00024784 <AmiBlitz3.ab2@8282>       MOVEQ #0,d1
00024786 <AmiBlitz3.ab2@8283>       MOVE.w d0,d1
00024788 <AmiBlitz3.ab2@8284>       SUBQ.w #1,d1
0002478A <AmiBlitz3.ab2@8285>       ASL #7,d1
00024790 <AmiBlitz3.ab2@8286>       OR.l #$f2277400,d1                                   ;fmove.d
00024794 <AmiBlitz3.ab2@8288>       BSR writelong
0002479A <AmiBlitz3.ab2@8290>       ADDQ.l #2,stacktrack
000247A0 <AmiBlitz3.ab2@8291>       MOVE.l stacktrack,d1
000247A6 <AmiBlitz3.ab2@8292>       CMP.l #180,d1
000247AA <AmiBlitz3.ab2@8293>       BGT conmemerr                                        ;formel too complex
000247AC <AmiBlitz3.ab2@8294>       MOVE.l a0,-(a7)
000247B2 <AmiBlitz3.ab2@8295>       LEA fpustackbase,a0
000247BA <AmiBlitz3.ab2@8296>       MOVE.w regmask,0(a0,d1)
000247BC <AmiBlitz3.ab2@8297>       MOVE.l (a7)+,a0
000247BE <AmiBlitz3.ab2@8300>       ADDQ.w #1,d0
000247C4 <AmiBlitz3.ab2@8301>       CMP.w regnumfunc,d0
000247C8 <AmiBlitz3.ab2@8302>       BLE fetchpees__skip0_loop2
000247CA <AmiBlitz3.ab2@8305>       MOVE.l (a7)+,d0
000247D0 <AmiBlitz3.ab2@8308>      MOVE.l currentfunccall,-(a7)
000247D6 <AmiBlitz3.ab2@8309>      MOVE.w parnum,-(a7)
000247DC <AmiBlitz3.ab2@8310>      TST.l rightsidetype
000247E0 <AmiBlitz3.ab2@8311>      BSR.w JL_0_6836
000247E6 <AmiBlitz3.ab2@8312>      MOVE.w (a7)+,parnum
000247EC <AmiBlitz3.ab2@8314>    MOVE.l (a7)+,currentfunccall
000247F2 <AmiBlitz3.ab2@8316>    TST.b typecheck                            ;typecheck for function call
000247F6 <AmiBlitz3.ab2@8317>    BEQ 'notypecheck
000247FC <AmiBlitz3.ab2@8318>    TST.b notypecheck
00024800 <AmiBlitz3.ab2@8319>    BNE 'notypecheck
00024806 <AmiBlitz3.ab2@8320>    TST.b blitzparloop
0002480A <AmiBlitz3.ab2@8321>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00024814 <AmiBlitz3.ab2@8322>    CMP.l #0,currentfunccall
00024818 <AmiBlitz3.ab2@8323>    BEQ 'isblitzlibcall
0002481C <AmiBlitz3.ab2@8324>    MOVEM.l a0/a1,-(a7)
00024822 <AmiBlitz3.ab2@8325>    MOVE.l currentfunccall,a0
00024828 <AmiBlitz3.ab2@8326>    MOVE.w parnum,d1
0002482E <AmiBlitz3.ab2@8327>    TST.b isconstantvalue
00024832 <AmiBlitz3.ab2@8328>    BEQ 'noconstant
0002483C <AmiBlitz3.ab2@8329>    CMP.l #0,lastconstantvalue
00024840 <AmiBlitz3.ab2@8330>    BEQ 'isnull
00024844 <AmiBlitz3.ab2@8332>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
0002484A <AmiBlitz3.ab2@8333>    CMP.l #0,a0
0002484E <AmiBlitz3.ab2@8334>    BEQ 'notype
00024856 <AmiBlitz3.ab2@8335>    CMP.l #$100,4(a0)
0002485A <AmiBlitz3.ab2@8336>    BLE 'notype
00024860 <AmiBlitz3.ab2@8337>    MOVE.l lasttoken,d1
00024864 <AmiBlitz3.ab2@8338>    CMP.w #$b581,d1                   ; ok, when token for null
00024868 <AmiBlitz3.ab2@8339>    BEQ 'isnull
0002486E <AmiBlitz3.ab2@8340>    TST.l typetocast
00024872 <AmiBlitz3.ab2@8341>    BEQ 'nocast
00024878 <AmiBlitz3.ab2@8342>    MOVE.l typetocast,a1
0002487C <AmiBlitz3.ab2@8343>    BRA 'typecheck
00024882 <AmiBlitz3.ab2@8345>    MOVE.l rightsidetype,a1
00024888 <AmiBlitz3.ab2@8346>    CMP.l #0,a1
0002488C <AmiBlitz3.ab2@8347>    BEQ 'notype
00024894 <AmiBlitz3.ab2@8348> 'typecheck   CMP.l #$100,4(a1)
00024896 <AmiBlitz3.ab2@8350>    CMP.l a0,a1
0002489A <AmiBlitz3.ab2@8351>    BEQ 'ok
000248A2 <AmiBlitz3.ab2@8353>    CMP.l #$100,4(a1)                 ; is a type here
000248A6 <AmiBlitz3.ab2@8354>    BLE 'error
000248AA <AmiBlitz3.ab2@8355>    MOVE.l 4(a1),a1                   ; load the address of type.
000248AE <AmiBlitz3.ab2@8356>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000248B2 <AmiBlitz3.ab2@8357>    BEQ 'ok
000248B8 <AmiBlitz3.ab2@8358> 'error: JMP   error_convert_types    ; for syntax 4
000248BE <AmiBlitz3.ab2@8362>    CLR.l typetocast
000248C2 <AmiBlitz3.ab2@8363>    MOVEM.l (a7)+,a0/a1
000248C8 <AmiBlitz3.ab2@8367>    CLR.l lastfunction
000248CE <AmiBlitz3.ab2@8368>    TST.b fpu
000248D2 <AmiBlitz3.ab2@8369>    BEQ fetchpees__skip0_noprint
000248D4 <AmiBlitz3.ab2@8370>   MOVE.l (a7),a2
000248D6 <AmiBlitz3.ab2@8371>   ADDQ.l #1,a2
000248DA <AmiBlitz3.ab2@8372>    CMP.b #5,d2
000248DE <AmiBlitz3.ab2@8373>   BNE fetchpees__skip0_noprint
000248E4 <AmiBlitz3.ab2@8374>   CMP.b #$5d,24(a2)
000248E8 <AmiBlitz3.ab2@8375>   BNE fetchpees__skip0_noprint
000248EE <AmiBlitz3.ab2@8376>   CMP.b #$81,25(a2)
000248F2 <AmiBlitz3.ab2@8377>   BLT fetchpees__skip0_noprint
000248F8 <AmiBlitz3.ab2@8378>   CMP.b #$86,25(a2)
000248FC <AmiBlitz3.ab2@8379>   BEQ fetchpees__skip0_ok
00024902 <AmiBlitz3.ab2@8380>   CMP.b #$87,25(a2)
00024906 <AmiBlitz3.ab2@8381>   BEQ fetchpees__skip0_ok
0002490C <AmiBlitz3.ab2@8382>   CMP.b #$88,25(a2)
00024910 <AmiBlitz3.ab2@8383>   BEQ fetchpees__skip0_ok
00024916 <AmiBlitz3.ab2@8384>   CMP.b #$83,25(a2)
0002491A <AmiBlitz3.ab2@8385>   BGT fetchpees__skip0_noprint
00024920 <AmiBlitz3.ab2@8388>   MOVE.l destpointer,a4
00024926 <AmiBlitz3.ab2@8389>   CMP.w #$2f00,-2(a4)
0002492A <AmiBlitz3.ab2@8390>   BNE fetchpees__skip0_noprint
00024930 <AmiBlitz3.ab2@8391>   SUBQ.l #2,destpointer
00024936 <AmiBlitz3.ab2@8393>   MOVE.l #$f2277400,d1
0002493A <AmiBlitz3.ab2@8394>   BSR writelong                                            ;fmove.d fp0,-(a7)
00024940 <AmiBlitz3.ab2@8395>   ADDQ #4,a2offset
00024946 <AmiBlitz3.ab2@8413>   CLR.b optistring
00024948 <AmiBlitz3.ab2@8414>   MOVEA.l (A7)+,A2
0002494C <AmiBlitz3.ab2@8415>    CMP.w #"@",d0
00024950 <AmiBlitz3.ab2@8416>   BNE fetchpees__skip0_l10
00024954 <AmiBlitz3.ab2@8417>    CMP.b #"@",(a5)
00024958 <AmiBlitz3.ab2@8418>   BNE fetchpees__skip0_l10
0002495E <AmiBlitz3.ab2@8419>   TST.w ininclude
00024962 <AmiBlitz3.ab2@8420>   BNE errorjoin
00024968 <AmiBlitz3.ab2@8421>   MOVEA.l sourceline,A5
0002496A <AmiBlitz3.ab2@8422>            MOVEA.l (A5),A5
00024970 <AmiBlitz3.ab2@8423>            MOVE.l a5,sourceline
00024976 <AmiBlitz3.ab2@8424>            ADDQ.l #1,linenumat
0002497A <AmiBlitz3.ab2@8425>            LEA $9(A5),A5
0002497C <AmiBlitz3.ab2@8426>            MOVEQ #0,d0
00024980 <AmiBlitz3.ab2@8427>            BSR get1bytemain
00024984 <AmiBlitz3.ab2@8430>    CMP.b #32,(a5)+ ;for space after a ,
00024988 <AmiBlitz3.ab2@8431>    BEQ fetchpees__skip0_l10:
0002498A <AmiBlitz3.ab2@8432>    SUBQ.l #1,a5
0002498E <AmiBlitz3.ab2@8434>    CMP.w #"@@",(a5)                                        ;if merge
00024992 <AmiBlitz3.ab2@8435>    BNE fetchpees__skip0_l15
00024996 <AmiBlitz3.ab2@8436>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
0002499C <AmiBlitz3.ab2@8437>    JSR mergeline
000249A0 <AmiBlitz3.ab2@8438>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
000249A2 <AmiBlitz3.ab2@8458>       SUBQ.w #1,(A7)
000249A6 <AmiBlitz3.ab2@8459>    BEQ.w fetchpees__done
000249AA <AmiBlitz3.ab2@8461>     CMP.w #$2C,D0
000249AE <AmiBlitz3.ab2@8463>    BNE overloadfunc
000249B2 <AmiBlitz3.ab2@8464> BRA.w fetchpees__loop
000249B4 <AmiBlitz3.ab2@8467>   ADDQ.w #2,A7
000249BA <AmiBlitz3.ab2@8468>   MOVE.w (A7)+,partostack
000249BC <AmiBlitz3.ab2@8469>   MOVE.w (A7)+,D1
000249C2 <AmiBlitz3.ab2@8470>   CLR.b isconstantvalue
000249CC <AmiBlitz3.ab2@8471>   MOVE.l currentfunccall,lastfunction
000249D2 <AmiBlitz3.ab2@8472>   CLR.b funccall
000249D8 <AmiBlitz3.ab2@8473>   CLR.l currentfunccall
000249DA <AmiBlitz3.ab2@8474> RTS
000249E0 <AmiBlitz3.ab2@8478>   CLR.b funccall
000249E6 <AmiBlitz3.ab2@8479>   MOVE.w regnum,d1
000249EC <AmiBlitz3.ab2@8480>   MOVE.l currentfunccall,a4
000249F0 <AmiBlitz3.ab2@8481>   CMP.b $20(a4),d1                                         ;increase if more pars
000249F4 <AmiBlitz3.ab2@8482>   BLT notparerr
000249F6 <AmiBlitz3.ab2@8485>   MOVE.b (a2)+,d2
000249FE <AmiBlitz3.ab2@8486>   ADD.w #1,parnum
00024A04 <AmiBlitz3.ab2@8487>   TST.b fpu
00024A08 <AmiBlitz3.ab2@8488>   BEQ 'nofpu
00024A0C <AmiBlitz3.ab2@8489>   CMP.b #5,d2
00024A10 <AmiBlitz3.ab2@8490>   BNE 'nofpu
00024A12 <AmiBlitz3.ab2@8491>   MOVEQ #0,d1
00024A18 <AmiBlitz3.ab2@8492>   MOVE.w regnum,d1
00024A20 <AmiBlitz3.ab2@8493>   CMP.w #6,regnum
00024A24 <AmiBlitz3.ab2@8494>   BLT 'nostack2
00024A28 <AmiBlitz3.ab2@8499>   MOVE.w #$2c3c,d1
00024A2C <AmiBlitz3.ab2@8500>   BSR writeword
00024A32 <AmiBlitz3.ab2@8501>   MOVE.l #$bf800000,d1
00024A36 <AmiBlitz3.ab2@8502>   BSR writelong
00024A3A <AmiBlitz3.ab2@8503>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00024A40 <AmiBlitz3.ab2@8504>   ADD.w parnum,d1
00024A46 <AmiBlitz3.ab2@8505>   JSR Atokejsr
00024A4C <AmiBlitz3.ab2@8506>   TST.w dontwrite
00024A50 <AmiBlitz3.ab2@8507>   BNE 'l1
00024A56 <AmiBlitz3.ab2@8508>   MOVE.l data1start,d1
00024A5C <AmiBlitz3.ab2@8509>   MOVE.l destpointer,a4
00024A60 <AmiBlitz3.ab2@8510>   ADD.l d1,-4(a4)
00024A66 <AmiBlitz3.ab2@8511>   MOVE.l destpointer,d1
00024A68 <AmiBlitz3.ab2@8512>   SUBQ.l #4,d1
00024A6E <AmiBlitz3.ab2@8513>   SUB.l destbufferstart,d1
00024A70 <AmiBlitz3.ab2@8514>   MOVE.l d2,-(a7)
00024A72 <AmiBlitz3.ab2@8515>   MOVE.l d1,d2
00024A78 <AmiBlitz3.ab2@8516>   JSR addhunkoffset
00024A7A <AmiBlitz3.ab2@8517>   MOVE.l (a7)+,d2
00024A7E <AmiBlitz3.ab2@8518> BRA 'l1
00024A80 <AmiBlitz3.ab2@8521>   ASL.l #7,d1
00024A86 <AmiBlitz3.ab2@8522>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00024A8A <AmiBlitz3.ab2@8523>   BSR writelong
00024A8C <AmiBlitz3.ab2@8524>   MOVEQ #-1,d1                                             ;-1
00024A90 <AmiBlitz3.ab2@8525>   BSR writeword
00024A94 <AmiBlitz3.ab2@8526> BRA 'l1
00024A9A <AmiBlitz3.ab2@8529>   MOVE.w regnum,d1
00024AA2 <AmiBlitz3.ab2@8530>   CMP.w #6,regnum
00024AA6 <AmiBlitz3.ab2@8531>   BLT 'nostack
00024AAA <AmiBlitz3.ab2@8536>   CMP.b #2,d2
00024AAE <AmiBlitz3.ab2@8537>   BGT 'nw
00024AB2 <AmiBlitz3.ab2@8538> BRA 'nos
00024AB6 <AmiBlitz3.ab2@8547>   CMP.w #7,d2
00024ABA <AmiBlitz3.ab2@8548>   BNE 'nos
00024AC0 <AmiBlitz3.ab2@8549>   ADDQ #4,a2offset
00024AC6 <AmiBlitz3.ab2@8551>     MOVE.l #$48780000,d1
00024ACA <AmiBlitz3.ab2@8552>     BSR writelong
00024AD0 <AmiBlitz3.ab2@8553>     ADDQ.w #4,a2offset
00024AD4 <AmiBlitz3.ab2@8554>     MOVE.w #$2f3c,d1
00024AD8 <AmiBlitz3.ab2@8555>     BSR writeword
00024ADE <AmiBlitz3.ab2@8556>     MOVE.l #-1,d1
00024AE2 <AmiBlitz3.ab2@8557>     BSR writelong
00024AE6 <AmiBlitz3.ab2@8558>   BRA 'l1
00024AEA <AmiBlitz3.ab2@8562>   CMP.b #4,d2
00024AEE <AmiBlitz3.ab2@8563>       BNE 'noq
00024AF2 <AmiBlitz3.ab2@8564>       MOVE.w #$2c3c,d1
00024AF6 <AmiBlitz3.ab2@8565>       BSR writeword
00024AFC <AmiBlitz3.ab2@8566>       MOVE.l #$ffff0000,d1
00024B00 <AmiBlitz3.ab2@8567>       BSR writelong
00024B04 <AmiBlitz3.ab2@8568> BRA 'noq2
00024B08 <AmiBlitz3.ab2@8571>      CMP.b #5,d2
00024B0C <AmiBlitz3.ab2@8572>      BNE 'nof
00024B10 <AmiBlitz3.ab2@8573>       MOVE.w #$2c3c,d1
00024B14 <AmiBlitz3.ab2@8574>       BSR writeword
00024B1A <AmiBlitz3.ab2@8575>       MOVE.l #$800000c1,d1
00024B1E <AmiBlitz3.ab2@8576>       BSR writelong
00024B22 <AmiBlitz3.ab2@8577> BRA 'noq2
00024B26 <AmiBlitz3.ab2@8580>   MOVE.w #$7cff,d1
00024B2A <AmiBlitz3.ab2@8581>   BSR writeword
00024B2E <AmiBlitz3.ab2@8584>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00024B34 <AmiBlitz3.ab2@8585>   ADD.w parnum,d1
00024B3A <AmiBlitz3.ab2@8586>   JSR Atokejsr
00024B40 <AmiBlitz3.ab2@8587>    TST.w dontwrite
00024B44 <AmiBlitz3.ab2@8588>    BNE 'l1
00024B4A <AmiBlitz3.ab2@8589>    MOVE.l data1start,d1
00024B50 <AmiBlitz3.ab2@8590>    MOVE.l destpointer,a4
00024B54 <AmiBlitz3.ab2@8591>    ADD.l d1,-4(a4)
00024B5A <AmiBlitz3.ab2@8592>    MOVE.l destpointer,d1
00024B5C <AmiBlitz3.ab2@8593>    SUBQ.l #4,d1
00024B62 <AmiBlitz3.ab2@8594>    SUB.l destbufferstart,d1
00024B64 <AmiBlitz3.ab2@8595>    MOVE.l d2,-(a7)
00024B66 <AmiBlitz3.ab2@8596>    MOVE.l d1,d2
00024B6C <AmiBlitz3.ab2@8597>    JSR addhunkoffset
00024B6E <AmiBlitz3.ab2@8598>    MOVE.l (a7)+,d2
00024B72 <AmiBlitz3.ab2@8599> BRA 'l1
00024B74 <AmiBlitz3.ab2@8602>   ASL.l #8,d1
00024B76 <AmiBlitz3.ab2@8603>   ASL.l #1,d1
00024B7C <AmiBlitz3.ab2@8604>   OR.l #$203c,d1                                           ;-1
00024B80 <AmiBlitz3.ab2@8605>   BSR writeword
00024B86 <AmiBlitz3.ab2@8606>   MOVE.l #-1,d1
00024B8A <AmiBlitz3.ab2@8607>   CMP.b #4,d2
00024B8E <AmiBlitz3.ab2@8608>   BNE 'nq1
00024B94 <AmiBlitz3.ab2@8609>   MOVE.l #$ffff0000,d1
00024B98 <AmiBlitz3.ab2@8612>   CMP.b #5,d2
00024B9C <AmiBlitz3.ab2@8613>   BNE 'nof2
00024BA2 <AmiBlitz3.ab2@8614>   TST.b fpu
00024BA6 <AmiBlitz3.ab2@8615>   BNE 'nof2
00024BAC <AmiBlitz3.ab2@8616>   MOVE.l #$800000c1,d1
00024BB0 <AmiBlitz3.ab2@8619>    BSR writelong
00024BB4 <AmiBlitz3.ab2@8620>    CMP.b #7,d2
00024BB8 <AmiBlitz3.ab2@8621>    BNE 'l1
00024BBE <AmiBlitz3.ab2@8623>      MOVE.l #$48780000,d1
00024BC2 <AmiBlitz3.ab2@8624>      BSR writelong
00024BC8 <AmiBlitz3.ab2@8626>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00024BCE <AmiBlitz3.ab2@8627>    MOVE.l #$594f,d1                                        ; subq #4,a7
00024BD2 <AmiBlitz3.ab2@8628>    BSR writeword
00024BD4 <AmiBlitz3.ab2@8631>    SUBQ.w #1,(A7)
00024BD8 <AmiBlitz3.ab2@8632>    BEQ.w fetchpees__done
00024BDE <AmiBlitz3.ab2@8633>    ADDQ.w #1,regnum
00024BE2 <AmiBlitz3.ab2@8634> BRA 'ol2
00024BE4 <AmiBlitz3.ab2@8637>    MOVE.w D2,D1
00024BE8 <AmiBlitz3.ab2@8638>    ANDI.w #$40,D1
00024BEE <AmiBlitz3.ab2@8639>    MOVE.b D1,partostack
00024BF0 <AmiBlitz3.ab2@8640>    TST.b D2
00024BF4 <AmiBlitz3.ab2@8641>     BMI.w handlevara
00024BF8 <AmiBlitz3.ab2@8642>    BTST #$5,D2
00024BFC <AmiBlitz3.ab2@8643>     BNE.w handlearr
00024C02 <AmiBlitz3.ab2@8644>     MOVE.w regnumstore,-(a7)
00024C08 <AmiBlitz3.ab2@8645>     MOVE.w tempregnum,-(a7)
00024C0E <AmiBlitz3.ab2@8646>     MOVE.w parnum,-(a7)
00024C12 <AmiBlitz3.ab2@8647>     BSR.w getap                                        ;recursive entry
00024C18 <AmiBlitz3.ab2@8648>     MOVE.w (a7)+,parnum
00024C1E <AmiBlitz3.ab2@8649>     MOVE.w (a7)+,tempregnum
00024C24 <AmiBlitz3.ab2@8650>     MOVE.w (a7)+,regnumstore
00024C28 <AmiBlitz3.ab2@8653>     MOVE.w partostack(PC),D1
00024C2C <AmiBlitz3.ab2@8654>     BEQ.w JL_0_6886
00024C32 <AmiBlitz3.ab2@8657>    ADDQ.w #4,a2offset
00024C38 <AmiBlitz3.ab2@8660>    MOVE.w pushdn,D1
00024C3E <AmiBlitz3.ab2@8661>    OR.w regnum,D1
00024C42 <AmiBlitz3.ab2@8662>    CMP.w #$3,D2
00024C46 <AmiBlitz3.ab2@8663>     BCC.w JL_0_6880
00024C4C <AmiBlitz3.ab2@8664>    SUBQ.w #2,a2offset
00024C50 <AmiBlitz3.ab2@8665>    ORI.w #$1000,D1
00024C54 <AmiBlitz3.ab2@8666>    BSR.w writeword
00024C56 <AmiBlitz3.ab2@8667> RTS
00024C5A <AmiBlitz3.ab2@8670>   CMP.b #7,d2
00024C5E <AmiBlitz3.ab2@8671>    BNE 'l10
00024C66 <AmiBlitz3.ab2@8672>    CMP.b #2,optistring
00024C6C <AmiBlitz3.ab2@8676>   TST.b iee
00024C70 <AmiBlitz3.ab2@8677>   BEQ 'old
00024C74 <AmiBlitz3.ab2@8678>   CMP.b #5,d2
00024C78 <AmiBlitz3.ab2@8679>   BNE 'old
00024C7C <AmiBlitz3.ab2@8682>   BSR.w writeword                                          ;write val to stack
00024C7E <AmiBlitz3.ab2@8683> RTS
00024C84 <AmiBlitz3.ab2@8686>   SUBQ.w #4,a2offset
00024C86 <AmiBlitz3.ab2@8687> RTS
00024C8C <AmiBlitz3.ab2@8690>   ADDQ.w #1,regnum
00024C8E <AmiBlitz3.ab2@8691> RTS
00024C90 <AmiBlitz3.ab2@8695>   MOVEQ.l #$03,D2
00024C94 <AmiBlitz3.ab2@8696> BRA.w JL_0_6854
00024C98 <AmiBlitz3.ab2@8700>   ANDI.w #$7,D2
00024C9A <AmiBlitz3.ab2@8701>   MOVE.w D2,-(A7)
00024C9E <AmiBlitz3.ab2@8702>    BSR.w JL_0_A916
00024CA2 <AmiBlitz3.ab2@8703>   CMP.b #$7,D2                                             ;ignore pnt to $
00024CA6 <AmiBlitz3.ab2@8704>    BEQ.w JL_0_68C0
00024CAA <AmiBlitz3.ab2@8705>   BTST #$E,D2
00024CAE <AmiBlitz3.ab2@8706>    BEQ.w JL_0_68B6
00024CB2 <AmiBlitz3.ab2@8707>   MOVE.b #$3,D2                                            ;pointer to long
00024CB6 <AmiBlitz3.ab2@8708> BRA.w JL_0_68C0
00024CB8 <AmiBlitz3.ab2@8711>    TST.b D2
00024CBC <AmiBlitz3.ab2@8712>    BNE.w JL_0_68C0
00024CC0 <AmiBlitz3.ab2@8713>   MOVE.b #$3,D2
00024CC2 <AmiBlitz3.ab2@8716>   MOVE.w (A7)+,D3
00024CC4 <AmiBlitz3.ab2@8717>   TST.b D3
00024CC8 <AmiBlitz3.ab2@8718>    BEQ.w JL_0_68D2
00024CCA <AmiBlitz3.ab2@8719>   CMP.b D2,D3
00024CCE <AmiBlitz3.ab2@8720>    BEQ.w putalp
00024CD2 <AmiBlitz3.ab2@8721> BRA.w mismatcherr
00024CD8 <AmiBlitz3.ab2@8724>   ADDQ.w #2,a2offset
00024CDC <AmiBlitz3.ab2@8725>   MOVE.w ptype(PC),D1
00024CE0 <AmiBlitz3.ab2@8726>    BSR.w writeword
00024CE2 <AmiBlitz3.ab2@8727>   MOVEQ.l #$00,D1
00024CE4 <AmiBlitz3.ab2@8728>   MOVE.b D2,D1
00024CE8 <AmiBlitz3.ab2@8729>    BSR.w writeword
00024CEC <AmiBlitz3.ab2@8730> BRA.w putalp
00024CEE <AmiBlitz3.ab2@8733>    MOVE.w D2,-(A7)
00024CF2 <AmiBlitz3.ab2@8734>    BSR.w JL_0_694E
00024CF8 <AmiBlitz3.ab2@8735>   BTST #$4,$1(A7)
00024CFC <AmiBlitz3.ab2@8736>    BEQ.w JL_0_6900
00024D00 <AmiBlitz3.ab2@8737>    BSR.w JL_0_699A
00024D06 <AmiBlitz3.ab2@8740>    BTST #$3,$1(A7)
00024D0A <AmiBlitz3.ab2@8741>    BEQ.w JL_0_690E
00024D0E <AmiBlitz3.ab2@8742>    BSR.w sendtype
00024D10 <AmiBlitz3.ab2@8745>    MOVE.w (A7)+,D2
00024D14 <AmiBlitz3.ab2@8746> BRA.w get1bytemain
00024D1A <AmiBlitz3.ab2@8749>   MOVE.w regnum,D1
00024D1C <AmiBlitz3.ab2@8750>   LSL.w #8,D1
00024D1E <AmiBlitz3.ab2@8751>   LSL.w #1,D1
00024D22 <AmiBlitz3.ab2@8752>   ORI.w #$7000,D1
00024D28 <AmiBlitz3.ab2@8753>   BTST #$0,$7(A3)
00024D2C <AmiBlitz3.ab2@8754>    BNE.w JL_0_6946                                         ;A Pointer
00024D34 <AmiBlitz3.ab2@8755>   CMPI.l #$100,$4(A2)
00024D38 <AmiBlitz3.ab2@8756>    BCC.w arrerr1                                           ;illegal type to send
00024D3C <AmiBlitz3.ab2@8757>   MOVE.b $7(A2),D1
00024D40 <AmiBlitz3.ab2@8760>   BSR.w writeword                                          ;moveq #type,d regat
00024D42 <AmiBlitz3.ab2@8761>   MOVEQ.l #$02,D2                                          ;just a word.
00024D46 <AmiBlitz3.ab2@8762> BRA.w JL_0_685C
00024D4A <AmiBlitz3.ab2@8765>   MOVE.b #$3,D1
00024D4E <AmiBlitz3.ab2@8766> BRA.w JL_0_693C
00024D52 <AmiBlitz3.ab2@8770>    BSR.w get1bytemain                                      ;write array paramter code
00024D56 <AmiBlitz3.ab2@8771>    BSR.w getparameter
00024D5E <AmiBlitz3.ab2@8772>   BTST #$1,flagmask+1
00024D62 <AmiBlitz3.ab2@8773>    BEQ.w syntaxerr
00024D66 <AmiBlitz3.ab2@8774>    BSR.w JL_0_8E3C
00024D6A <AmiBlitz3.ab2@8775>    BSR.w get1bytemain
00024D6E <AmiBlitz3.ab2@8776>   CMP.w #$29,D0                                            ;we just want a() or whatever
00024D72 <AmiBlitz3.ab2@8777>    BNE.w syntaxerr
00024D78 <AmiBlitz3.ab2@8778>   MOVE.w notshared,D1
00024D7C <AmiBlitz3.ab2@8779>    BNE.w noarrayerr
00024D82 <AmiBlitz3.ab2@8780>   MOVE.w regnum,D1
00024D84 <AmiBlitz3.ab2@8781>   LSL.w #8,D1
00024D86 <AmiBlitz3.ab2@8782>   LSL.w #1,D1
00024D8A <AmiBlitz3.ab2@8783>   OR.w fbase(PC),D1
00024D90 <AmiBlitz3.ab2@8784>    TST.b varmode
00024D94 <AmiBlitz3.ab2@8785>    BEQ 'l1
00024D98 <AmiBlitz3.ab2@8786>    BCLR #0,d1
00024D9C <AmiBlitz3.ab2@8789>    BSR.w writeword
00024DA0 <AmiBlitz3.ab2@8790>   MOVE.w $4(A3),D1
00024DA4 <AmiBlitz3.ab2@8791>    BSR.w writeword
00024DA8 <AmiBlitz3.ab2@8792> BRA.w putalp
00024DAE <AmiBlitz3.ab2@8796>   MOVE.w regnum,D1
00024DB0 <AmiBlitz3.ab2@8797>   LSL.w #8,D1
00024DB2 <AmiBlitz3.ab2@8798>   LSL.w #1,D1
00024DB6 <AmiBlitz3.ab2@8799>   OR.w fbase(PC),D1
00024DBC <AmiBlitz3.ab2@8800>    TST.b varmode
00024DC0 <AmiBlitz3.ab2@8801>    BEQ 'l1
00024DC4 <AmiBlitz3.ab2@8802>    BCLR #0,d1
00024DC8 <AmiBlitz3.ab2@8805>    BSR.w writeword
00024DCC <AmiBlitz3.ab2@8806>   MOVE.w $8(A3),D1
00024DCE <AmiBlitz3.ab2@8807>   LSL.w #2,D1
00024DD4 <AmiBlitz3.ab2@8808>   MOVE.w varmode,D2
00024DD8 <AmiBlitz3.ab2@8809>    BEQ.w JL_0_69BE
00024DDA <AmiBlitz3.ab2@8810>   NEG.w D1
00024DDE <AmiBlitz3.ab2@8813>    ADD.w $4(A3),D1
00024DE2 <AmiBlitz3.ab2@8814>    BSR.w writeword
00024DE8 <AmiBlitz3.ab2@8815>   MOVE.w regnum,D1
00024DEA <AmiBlitz3.ab2@8816>   LSL.w #8,D1
00024DEC <AmiBlitz3.ab2@8817>   LSL.w #1,D1
00024DF0 <AmiBlitz3.ab2@8818>   MOVE.w partostack(PC),D2
00024DF4 <AmiBlitz3.ab2@8819>    BNE.w JL_0_69F4
00024DFC <AmiBlitz3.ab2@8820>   CMPI.w #$7,regnum
00024E00 <AmiBlitz3.ab2@8821>    BCC.w JL_0_69F4
00024E04 <AmiBlitz3.ab2@8822>   OR.w pushlast(PC),D1
00024E0A <AmiBlitz3.ab2@8823>   MOVE.w regnum,D2
00024E0C <AmiBlitz3.ab2@8824>   SUBQ.w #1,D2
00024E0E <AmiBlitz3.ab2@8825>   OR.w D2,D1
00024E12 <AmiBlitz3.ab2@8826> BRA.w JL_0_69F8
00024E16 <AmiBlitz3.ab2@8829>   OR.w pushadd(PC),D1
00024E1A <AmiBlitz3.ab2@8832>   BSR.w writeword
00024E22 <AmiBlitz3.ab2@8833>   MOVE.b #$1,partostack
00024E26 <AmiBlitz3.ab2@8834> BRA.w putalp
00024E2A <AmiBlitz3.ab2@8838> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00024E2C <AmiBlitz3.ab2@8839> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00024E2E <AmiBlitz3.ab2@8840> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00024E32 <AmiBlitz3.ab2@8845>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00024E36 <AmiBlitz3.ab2@8846>    BEQ.w evalu2
00024E3A <AmiBlitz3.ab2@8847> BRA.w eval
00024E40 <AmiBlitz3.ab2@8851>   MOVEA.l libpointer,A1
00024E44 <AmiBlitz3.ab2@8854>    CMPA.w #$0,A1
00024E48 <AmiBlitz3.ab2@8855>    BEQ.w resetlibs__done
00024E4E <AmiBlitz3.ab2@8856>   MOVE.w #-1,$A(A1)
00024E54 <AmiBlitz3.ab2@8857>   BCLR #$7,$C(A1)
00024E56 <AmiBlitz3.ab2@8858>   MOVEA.l (A1),A1
00024E5A <AmiBlitz3.ab2@8859> BRA.w resetlibs__loop
00024E5C <AmiBlitz3.ab2@8862> RTS
00024E60 <AmiBlitz3.ab2@8866>   MOVE.w #$FFFE,D1
00024E64 <AmiBlitz3.ab2@8869>    BSR.w JL_0_6F38
00024E6A <AmiBlitz3.ab2@8872>   TST.w cfetchmode
00024E6E <AmiBlitz3.ab2@8873>    BEQ.w uselib3__noconst
00024E74 <AmiBlitz3.ab2@8874>   BTST #$6,$C(A1)
00024E78 <AmiBlitz3.ab2@8875>    BNE.w uselib3__constok
00024E7C <AmiBlitz3.ab2@8876> BRA.w badconerr                                            ;Can't use this Library!
00024E7E <AmiBlitz3.ab2@8879> RTS
00024E84 <AmiBlitz3.ab2@8882>    BSET #$7,$C(A1)
00024E88 <AmiBlitz3.ab2@8883>    BNE.w JL_0_6C74                                         ;already done....
00024E8E <AmiBlitz3.ab2@8884>    CMPI.w #-1,$A(A1)
00024E92 <AmiBlitz3.ab2@8885>    BNE.w JL_0_6C74                                         ;something already here
00024E98 <AmiBlitz3.ab2@8889>    TST.w dirmode
00024E9C <AmiBlitz3.ab2@8890>    BEQ.b JL_0_6A86
00024EA2 <AmiBlitz3.ab2@8891>    TST.b exdebug
00024EA6 <AmiBlitz3.ab2@8892>    BEQ 'l1
00024EAA <AmiBlitz3.ab2@8893> BRA.b JL_0_6A86
00024EB0 <AmiBlitz3.ab2@8896>   BCLR #$7,$C(A1)
00024EB4 <AmiBlitz3.ab2@8897> BRA.w dirliberr
00024EBA <AmiBlitz3.ab2@8900>   MOVE.b debugmode,-(a7)
00024EBE <AmiBlitz3.ab2@8901>   MOVEM.l D1/A0/A2,-(A7)
00024EC6 <AmiBlitz3.ab2@8907>   BTST #$7,use_debugger
00024ECA <AmiBlitz3.ab2@8908>   BNE 'debugon
00024ECC <AmiBlitz3.ab2@8909>   CLR.w D1
00024ED0 <AmiBlitz3.ab2@8910> BRA.b 'debugoff
00024ED2 <AmiBlitz3.ab2@8913>   SNE D1
00024ED8 <AmiBlitz3.ab2@8916>   MOVE.b d1,debugmode
00024EDA <AmiBlitz3.ab2@8920>   MOVEA.l A1,A0
00024EDE <AmiBlitz3.ab2@8921>   ADDA.l $12(A1),A0
00024EE2 <AmiBlitz3.ab2@8922>   TST.w -$2(A0)
00024EE6 <AmiBlitz3.ab2@8923>    BEQ.w JL_0_6AD2
00024EEA <AmiBlitz3.ab2@8924>   MOVEM.l A0-A1,-(A7)
00024EEE <AmiBlitz3.ab2@8925>   MOVE.w #$FB4F,D1
00024EF2 <AmiBlitz3.ab2@8926>    BSR.w uselib
00024EF6 <AmiBlitz3.ab2@8927>   MOVEM.l (A7)+,A0-A1
00024EFC <AmiBlitz3.ab2@8928>   ADDQ.w #1,globalvarpointer
00024F04 <AmiBlitz3.ab2@8929>   BCLR #$0,globalvarpointer+1
00024F0C <AmiBlitz3.ab2@8930>   MOVE.w globalvarpointer,-$6(A0)
00024F12 <AmiBlitz3.ab2@8931>   ADDQ.w #4,globalvarpointer
00024F16 <AmiBlitz3.ab2@8932>   TST.l -$E(A0)
00024F1A <AmiBlitz3.ab2@8933>    BEQ.w JL_0_6AD2
00024F20 <AmiBlitz3.ab2@8934>   ADDQ.w #4,globalvarpointer
00024F28 <AmiBlitz3.ab2@8937>   MOVE.l libend,$28(A1)
00024F2A <AmiBlitz3.ab2@8938>   MOVEA.l A1,A0
00024F2E <AmiBlitz3.ab2@8939>   ADDA.l $12(A1),A0
00024F30 <AmiBlitz3.ab2@8940>   MOVE.l A1,D1
00024F34 <AmiBlitz3.ab2@8941>   ADD.l $6(A1),D1
00024F38 <AmiBlitz3.ab2@8942>   TST.l $2C(A1)
00024F3C <AmiBlitz3.ab2@8943>    BEQ.w JL_0_6AFE
00024F42 <AmiBlitz3.ab2@8945>   TST.b debugmode
00024F46 <AmiBlitz3.ab2@8946>    BNE.w JL_0_6AFE
00024F48 <AmiBlitz3.ab2@8947>   MOVE.l A1,D1
00024F4C <AmiBlitz3.ab2@8948>   ADD.l $2C(A1),D1
00024F52 <AmiBlitz3.ab2@8951>   MOVEA.l libend,A2
00024F58 <AmiBlitz3.ab2@8954>   CMPA.l data1start,A2
00024F5C <AmiBlitz3.ab2@8955>    BCS.w JL_0_6B24
00024F64 <AmiBlitz3.ab2@8956>   MOVE.w #$FFFF,dontwrite
00024F66 <AmiBlitz3.ab2@8959>   ADDQ.w #2,A0
00024F68 <AmiBlitz3.ab2@8960>   ADDQ.w #2,A2
00024F6A <AmiBlitz3.ab2@8961>   CMPA.l D1,A0
00024F6E <AmiBlitz3.ab2@8962>    BCS.w JL_0_6B16
00024F72 <AmiBlitz3.ab2@8963> BRA.w JL_0_6B2C
00024F74 <AmiBlitz3.ab2@8966>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00024F76 <AmiBlitz3.ab2@8967>   CMPA.l D1,A0
00024F7A <AmiBlitz3.ab2@8968>    BCS.w JL_0_6B04
00024F80 <AmiBlitz3.ab2@8971>   MOVE.l A2,libend
00024F84 <AmiBlitz3.ab2@8972>   MOVE.l $20(A1),D1
00024F88 <AmiBlitz3.ab2@8973>    BEQ.w JL_0_6BB8
00024F8C <AmiBlitz3.ab2@8974>   MOVEM.l D0/D2-D3,-(A7)
00024F90 <AmiBlitz3.ab2@8975>   MOVEA.l $24(A1),A0
00024F92 <AmiBlitz3.ab2@8976>   MOVEQ.l #$00,D3
00024F94 <AmiBlitz3.ab2@8979>   MOVE.l (A0)+,D2
00024F98 <AmiBlitz3.ab2@8980>   TST.l $2C(A1)
00024F9C <AmiBlitz3.ab2@8981>    BEQ.w JL_0_6B60
00024FA2 <AmiBlitz3.ab2@8982>   TST.b debugmode
00024FA6 <AmiBlitz3.ab2@8983>    BNE.w JL_0_6B60
00024FAA <AmiBlitz3.ab2@8984>   CMP.l $2C(A1),D2
00024FAE <AmiBlitz3.ab2@8985>    BCC.w JL_0_6BA0
00024FB2 <AmiBlitz3.ab2@8988>   TST.w $0(A1,D2.L)
00024FB6 <AmiBlitz3.ab2@8989>    BPL.w JL_0_6B72
00024FB8 <AmiBlitz3.ab2@8990>   TST.l D3
00024FBC <AmiBlitz3.ab2@8991>    BNE.w JL_0_6B72
00024FBE <AmiBlitz3.ab2@8992>   MOVE.l A0,D0
00024FC0 <AmiBlitz3.ab2@8993>   MOVE.l D1,D3
00024FC4 <AmiBlitz3.ab2@8996>   SUB.l $12(A1),D2
00024FC8 <AmiBlitz3.ab2@8997>    BMI.w JL_0_6BA0
00024FCC <AmiBlitz3.ab2@8998>   ADD.l $28(A1),D2
00024FCE <AmiBlitz3.ab2@8999>   MOVE.l D2,-(A7)
00024FD4 <AmiBlitz3.ab2@9000>   SUB.l destbufferstart,D2
00024FD8 <AmiBlitz3.ab2@9001>    BSR.w addhunkoffset
00024FDA <AmiBlitz3.ab2@9002>   MOVEA.l (A7)+,A2
00024FE0 <AmiBlitz3.ab2@9003>   TST.w dontwrite
00024FE4 <AmiBlitz3.ab2@9004>    BNE.w JL_0_6BA0
00024FE8 <AmiBlitz3.ab2@9005>   MOVE.l $28(A1),D2
00024FEC <AmiBlitz3.ab2@9006>   SUB.l $12(A1),D2
00024FEE <AmiBlitz3.ab2@9007>   ADD.l D2,(A2)
00024FF0 <AmiBlitz3.ab2@9010>    SUBQ.l #1,D1
00024FF4 <AmiBlitz3.ab2@9011>    BNE.w JL_0_6B44
00024FF6 <AmiBlitz3.ab2@9012>   MOVE.l D3,D2
00024FFA <AmiBlitz3.ab2@9013>    BEQ.w JL_0_6BB4
00024FFC <AmiBlitz3.ab2@9014>   MOVEA.l D0,A2
00024FFE <AmiBlitz3.ab2@9015>   SUBQ.w #4,A2
00025002 <AmiBlitz3.ab2@9016>    BSR.w JL_0_6E34
00025006 <AmiBlitz3.ab2@9019>    MOVEM.l (A7)+,D0/D2-D3
0002500A <AmiBlitz3.ab2@9022>    MOVEM.l (A7)+,D1/A0/A2
0002500E <AmiBlitz3.ab2@9023>   MOVEM.l D1-D2,-(A7)
00025012 <AmiBlitz3.ab2@9024>   TST.w $1A(A1)
00025016 <AmiBlitz3.ab2@9025>    BNE.w JL_0_6BD0
0002501A <AmiBlitz3.ab2@9026>   CLR.w $A(A1)
0002501E <AmiBlitz3.ab2@9027> BRA.w JL_0_6C5E
00025024 <AmiBlitz3.ab2@9030>   ADDQ.w #1,globalvarpointer
0002502C <AmiBlitz3.ab2@9031>   BCLR #$0,globalvarpointer+1
00025034 <AmiBlitz3.ab2@9032>   MOVE.w globalvarpointer,$A(A1)
00025038 <AmiBlitz3.ab2@9033>   CMP.w #-$12D,D1
0002503C <AmiBlitz3.ab2@9034>    BNE.w JL_0_6C16
00025044 <AmiBlitz3.ab2@9035>   MOVE.w $A(A1),movestdn+2
0002504C <AmiBlitz3.ab2@9036>   MOVE.w $A(A1),pusha3+2
00025054 <AmiBlitz3.ab2@9037>   MOVE.w $A(A1),pusha32+2
0002505C <AmiBlitz3.ab2@9038>   MOVE.w $A(A1),pulla3+2
00025064 <AmiBlitz3.ab2@9039>   MOVE.w $A(A1),geta3+2
00025068 <AmiBlitz3.ab2@9042>    CMP.w #-$3E9,D1
0002506C <AmiBlitz3.ab2@9043>    BNE.w JL_0_6C3E
00025074 <AmiBlitz3.ab2@9044>   MOVE.w $A(A1),dataget+2
0002507C <AmiBlitz3.ab2@9045>   MOVE.w $A(A1),dataput+2
00025084 <AmiBlitz3.ab2@9046>   MOVE.w $A(A1),rescode+6
0002508C <AmiBlitz3.ab2@9047>   MOVE.w $A(A1),rescode2+2
00025092 <AmiBlitz3.ab2@9050>   ADDQ.w #2,globalvarpointer
00025096 <AmiBlitz3.ab2@9051>   TST.w $1A(A1)
0002509A <AmiBlitz3.ab2@9052>    BMI.w JL_0_6C52
000250A0 <AmiBlitz3.ab2@9053>   ADDQ.w #2,globalvarpointer
000250A4 <AmiBlitz3.ab2@9056>   MOVEM.l D1/A1,-(A7)
000250A8 <AmiBlitz3.ab2@9057>   BSR.w uselib2
000250AC <AmiBlitz3.ab2@9058>   MOVEM.l (A7)+,D1/A1
000250AE <AmiBlitz3.ab2@9061>   MOVE.w D1,D2
000250B2 <AmiBlitz3.ab2@9062>   MOVE.l $16(A1),D1
000250B6 <AmiBlitz3.ab2@9063>    BSR.w uselib2_org
000250BA <AmiBlitz3.ab2@9064>   MOVE.l $1C(A1),D1
000250BE <AmiBlitz3.ab2@9065>    BSR.w uselib2_org
000250C2 <AmiBlitz3.ab2@9066>   MOVEM.l (A7)+,D1-D2
000250C8 <AmiBlitz3.ab2@9068>   MOVE.b (a7)+,debugmode
000250CA <AmiBlitz3.ab2@9071> RTS
000250CC <AmiBlitz3.ab2@9075>   MOVEQ.l #$00,D2
000250D2 <AmiBlitz3.ab2@9078>   MOVEA.l tokeslist,A2
000250D4 <AmiBlitz3.ab2@9079>   CMPA.l D2,A2
000250D8 <AmiBlitz3.ab2@9080>    BEQ.w JL_0_6CE0
000250DA <AmiBlitz3.ab2@9081>   MOVE.l A2,-(A7)
000250DC <AmiBlitz3.ab2@9084>   MOVEQ.l #$00,D3
000250E0 <AmiBlitz3.ab2@9087>   MOVEA.l $8(A2),A3
000250E2 <AmiBlitz3.ab2@9088>   CMPA.l D3,A3
000250E6 <AmiBlitz3.ab2@9089>    BEQ.w JL_0_6CD2
000250E8 <AmiBlitz3.ab2@9090>   MOVE.l A3,-(A7)
000250EC <AmiBlitz3.ab2@9091>   MOVEM.l D2-D3/A2-A3,-(A7)
000250F0 <AmiBlitz3.ab2@9092>   MOVE.w $4(A2),D1
000250F4 <AmiBlitz3.ab2@9093>   MOVE.w $6(A2),D2
000250F8 <AmiBlitz3.ab2@9094>    BSR.w JL_0_6CE2
000250FC <AmiBlitz3.ab2@9095>   MOVEM.l (A7)+,D2-D3/A2-A3
00025102 <AmiBlitz3.ab2@9096>   MOVE.w dontwrite,D0
00025106 <AmiBlitz3.ab2@9097>    BEQ.w JL_0_6CBE
00025108 <AmiBlitz3.ab2@9100>   MOVEA.l (A3),A3
0002510A <AmiBlitz3.ab2@9101>   CMPA.l D3,A3
0002510E <AmiBlitz3.ab2@9102>    BNE.w JL_0_6CB2
00025112 <AmiBlitz3.ab2@9103> BRA.w JL_0_6CCC
00025116 <AmiBlitz3.ab2@9106>   MOVEA.l $4(A3),A0
00025118 <AmiBlitz3.ab2@9107>   MOVE.l D7,(A0)
0002511A <AmiBlitz3.ab2@9108>   MOVEA.l (A3),A3
0002511C <AmiBlitz3.ab2@9109>   CMPA.l D3,A3
00025120 <AmiBlitz3.ab2@9110>    BNE.w JL_0_6CBE
00025122 <AmiBlitz3.ab2@9113>   MOVE.l (A7)+,D3
00025126 <AmiBlitz3.ab2@9114> BRA.w JL_0_6C88
00025128 <AmiBlitz3.ab2@9117>    MOVEA.l (A2),A2
0002512A <AmiBlitz3.ab2@9118>   CMPA.l D2,A2
0002512E <AmiBlitz3.ab2@9119>    BNE.w JL_0_6C86
00025130 <AmiBlitz3.ab2@9120>   MOVE.l (A7)+,D2
00025134 <AmiBlitz3.ab2@9121> BRA.w JL_0_6C78
00025136 <AmiBlitz3.ab2@9124> RTS
00025138 <AmiBlitz3.ab2@9128>   MOVE.w D2,-(A7)
0002513C <AmiBlitz3.ab2@9129>    BSR.w searchinstr
0002513E <AmiBlitz3.ab2@9130>   MOVE.w (A7)+,D2
00025146 <AmiBlitz3.ab2@9131>   BCLR #$7,blitzmode
0002514A <AmiBlitz3.ab2@9132>   BCLR #$E,D2
0002514E <AmiBlitz3.ab2@9133>    BEQ.w JL_0_6D02
00025156 <AmiBlitz3.ab2@9134>   BSET #$7,blitzmode
00025158 <AmiBlitz3.ab2@9137>   TST.w (A3)
0002515C <AmiBlitz3.ab2@9138>    BEQ.w JL_0_6DAC
00025162 <AmiBlitz3.ab2@9139>   BTST #$2,$1(A3)
00025166 <AmiBlitz3.ab2@9140>    BNE.w tokeerr
0002516C <AmiBlitz3.ab2@9141>   BTST #$3,$1(A3)
00025170 <AmiBlitz3.ab2@9142>    BNE.w tokeerr
00025174 <AmiBlitz3.ab2@9143>   LEA $6(A3),A3
00025176 <AmiBlitz3.ab2@9146>   MOVE.w (A3)+,D0
0002517A <AmiBlitz3.ab2@9147>    BMI.w tokeerr
0002517E <AmiBlitz3.ab2@9148>   ANDI.w #$FF,D0
00025180 <AmiBlitz3.ab2@9149>   ADDA.w D0,A3
00025182 <AmiBlitz3.ab2@9150>   ADDQ.w #1,A3
00025184 <AmiBlitz3.ab2@9151>   EXG.l D0,A3
00025188 <AmiBlitz3.ab2@9152>   BCLR #$0,D0
0002518A <AmiBlitz3.ab2@9153>   EXG.l D0,A3
0002518C <AmiBlitz3.ab2@9154>   SUBQ.w #1,D2
00025190 <AmiBlitz3.ab2@9155>    BPL.w JL_0_6D98
00025192 <AmiBlitz3.ab2@9156>   TST.w (A3)
00025196 <AmiBlitz3.ab2@9157>    BNE.w JL_0_6D76
0002519A <AmiBlitz3.ab2@9158>   MOVE.l $2(A3),D0
0002519E <AmiBlitz3.ab2@9159>   OR.l $A(A3),D0
000251A2 <AmiBlitz3.ab2@9160>    BNE.w JL_0_6D76
000251A8 <AmiBlitz3.ab2@9161>   BTST #$0,$9(A3)
000251AC <AmiBlitz3.ab2@9162>    BNE.w JL_0_6D76
000251B0 <AmiBlitz3.ab2@9163>   MOVE.l $6(A3),D7
000251B4 <AmiBlitz3.ab2@9164>   MOVE.w $0(A2,D7.L),D0
000251B8 <AmiBlitz3.ab2@9165>   ANDI.w #$F000,D0
000251BC <AmiBlitz3.ab2@9166>   CMP.w #-$6000,D0
000251C0 <AmiBlitz3.ab2@9167>    BEQ.w JL_0_6D76
000251C4 <AmiBlitz3.ab2@9170>   SUB.l $12(A2),D7
000251C8 <AmiBlitz3.ab2@9171>   ADD.l $28(A2),D7
000251CA <AmiBlitz3.ab2@9172> RTS
000251D0 <AmiBlitz3.ab2@9176>   LEA cutejsr,A0
000251D6 <AmiBlitz3.ab2@9179>   MOVE.l destpointer,-(A7)
000251DE <AmiBlitz3.ab2@9180>   MOVE.w #$FFFF,lasta6
000251E0 <AmiBlitz3.ab2@9183>    JSR (A0)
000251E4 <AmiBlitz3.ab2@9184>   MOVE.w #$4E75,D1
000251E8 <AmiBlitz3.ab2@9185>    BSR.w writeword
000251EA <AmiBlitz3.ab2@9186>   MOVE.l (A7)+,D7
000251EC <AmiBlitz3.ab2@9187> RTS
000251EE <AmiBlitz3.ab2@9191>   TST.w (A3)+
000251F2 <AmiBlitz3.ab2@9192>    BEQ.w JL_0_6DA4
000251F4 <AmiBlitz3.ab2@9193>   ADDQ.w #2,A3
000251F8 <AmiBlitz3.ab2@9194> BRA.w JL_0_6D98
000251FC <AmiBlitz3.ab2@9197>   LEA $C(A3),A3
00025200 <AmiBlitz3.ab2@9198> BRA.w JL_0_6D20
00025202 <AmiBlitz3.ab2@9202>   TST.w D2
00025206 <AmiBlitz3.ab2@9203>    BNE.w tokeerr
0002520A <AmiBlitz3.ab2@9204>   TST.w $6(A3)
0002520E <AmiBlitz3.ab2@9205>    BNE.w JL_0_6DE4
00025212 <AmiBlitz3.ab2@9206>   MOVE.l $8(A3),D0
00025216 <AmiBlitz3.ab2@9207>   OR.l $10(A3),D0
0002521A <AmiBlitz3.ab2@9208>    BNE.w JL_0_6DE4
00025220 <AmiBlitz3.ab2@9209>   BTST #$0,$F(A3)
00025224 <AmiBlitz3.ab2@9210>    BNE.w JL_0_6DE4
00025228 <AmiBlitz3.ab2@9211>   MOVE.l $C(A3),D7
0002522C <AmiBlitz3.ab2@9212>   MOVE.w $0(A2,D7.L),D0
00025230 <AmiBlitz3.ab2@9213>   ANDI.w #$F000,D0
00025234 <AmiBlitz3.ab2@9214>   CMP.w #-$6000,D0
00025238 <AmiBlitz3.ab2@9215>    BNE.w JL_0_6D6C
0002523A <AmiBlitz3.ab2@9218>   MOVE.l A3,D1
0002523C <AmiBlitz3.ab2@9219>   SUB.l A2,D1
00025242 <AmiBlitz3.ab2@9220>   LEA Amakelibsub,A0
00025246 <AmiBlitz3.ab2@9221> BRA.w JL_0_6D7C
0002524C <AmiBlitz3.ab2@9225>   MOVEA.l _execbase,A6
00025252 <AmiBlitz3.ab2@9226>   MOVEA.l tokeslist,A2
00025258 <AmiBlitz3.ab2@9227>   CLR.l tokeslist
0002525C <AmiBlitz3.ab2@9230>     CMPA.w #$0,A2
00025260 <AmiBlitz3.ab2@9231>      BEQ.w JL_0_6E32
00025264 <AmiBlitz3.ab2@9232>     MOVEA.l $8(A2),A3
00025268 <AmiBlitz3.ab2@9235>       CMPA.w #$0,A3
0002526C <AmiBlitz3.ab2@9236>        BEQ.w JL_0_6E24
0002526E <AmiBlitz3.ab2@9237>       MOVEA.l A3,A1
00025270 <AmiBlitz3.ab2@9238>       MOVEA.l (A3),A3
00025272 <AmiBlitz3.ab2@9239>       MOVEQ.l #$08,D0
00025278 <AmiBlitz3.ab2@9240>       MOVE.l mempool,a0
0002527E <AmiBlitz3.ab2@9241>       MOVEA.l _execbase,A6
00025282 <AmiBlitz3.ab2@9242>       JSR _FreePooled(A6)
00025286 <AmiBlitz3.ab2@9243> BRA.w JL_0_6E0E
00025288 <AmiBlitz3.ab2@9246>     MOVEA.l A2,A1
0002528A <AmiBlitz3.ab2@9247>     MOVEA.l (A2),A2
0002528C <AmiBlitz3.ab2@9248>     MOVEQ.l #$0C,D0
00025292 <AmiBlitz3.ab2@9249>     MOVE.l mempool,a0
00025298 <AmiBlitz3.ab2@9250>     MOVEA.l _execbase,A6
0002529C <AmiBlitz3.ab2@9251>     JSR _FreePooled(A6)
000252A0 <AmiBlitz3.ab2@9252> BRA.w JL_0_6E02
000252A2 <AmiBlitz3.ab2@9255> RTS
000252A6 <AmiBlitz3.ab2@9259>   MOVEM.l D3-D5/A1-A6,-(A7)
000252A8 <AmiBlitz3.ab2@9260>   MOVEA.l A1,A4
000252AA <AmiBlitz3.ab2@9263>   MOVE.l (A2)+,D3
000252AE <AmiBlitz3.ab2@9264>   MOVE.w $0(A4,D3.L),D5
000252B2 <AmiBlitz3.ab2@9265>    BPL.w JL_0_6E7A
000252B6 <AmiBlitz3.ab2@9266>   TST.l $2C(A4)
000252BA <AmiBlitz3.ab2@9267>    BEQ.w JL_0_6E5E
000252C0 <AmiBlitz3.ab2@9268>   TST.b debugmode
000252C4 <AmiBlitz3.ab2@9269>    BNE.w JL_0_6E5E
000252C8 <AmiBlitz3.ab2@9270>   CMP.l $2C(A4),D3
000252CC <AmiBlitz3.ab2@9271>    BCC.w JL_0_6E7A
000252D0 <AmiBlitz3.ab2@9274>   BCLR #$F,D5
000252D4 <AmiBlitz3.ab2@9275>   MOVE.w $2(A4,D3.L),D4
000252D8 <AmiBlitz3.ab2@9276>   SUB.l $12(A4),D3
000252DC <AmiBlitz3.ab2@9277>   ADD.l $28(A4),D3
000252E0 <AmiBlitz3.ab2@9278>   MOVEM.l D2/A2/A4,-(A7)
000252E4 <AmiBlitz3.ab2@9279>    BSR.w JL_0_6E86
000252E8 <AmiBlitz3.ab2@9280>   MOVEM.l (A7)+,D2/A2/A4
000252EA <AmiBlitz3.ab2@9283>   SUBQ.l #1,D2
000252EE <AmiBlitz3.ab2@9284>    BNE.w JL_0_6E3A
000252F2 <AmiBlitz3.ab2@9285>   MOVEM.l (A7)+,D3-D5/A1-A6
000252F4 <AmiBlitz3.ab2@9286> RTS
000252FA <AmiBlitz3.ab2@9290>   LEA tokeslist,A3
00025300 <AmiBlitz3.ab2@9291>   MOVEA.l _execbase,A6
00025302 <AmiBlitz3.ab2@9294>   MOVE.l (A3),D0
00025306 <AmiBlitz3.ab2@9295>    BEQ.w JL_0_6EAC
00025308 <AmiBlitz3.ab2@9296>   MOVEA.l D0,A3
0002530C <AmiBlitz3.ab2@9297>   CMP.w $4(A3),D4
00025310 <AmiBlitz3.ab2@9298>    BNE.w JL_0_6E90
00025314 <AmiBlitz3.ab2@9299>   CMP.w $6(A3),D5
00025318 <AmiBlitz3.ab2@9300>    BNE.w JL_0_6E90
0002531C <AmiBlitz3.ab2@9301> BRA.w JL_0_6ED0
0002531E <AmiBlitz3.ab2@9304>   MOVEQ.l #$0C,D0
00025320 <AmiBlitz3.ab2@9305>   MOVEQ.l #$01,D1
00025326 <AmiBlitz3.ab2@9306>   MOVE.l mempool,a0
0002532A <AmiBlitz3.ab2@9307>   JSR _AllocPooled(a6)
0002532C <AmiBlitz3.ab2@9309>   MOVEA.l D0,A3
00025332 <AmiBlitz3.ab2@9310>   MOVE.l tokeslist,(A3)
00025338 <AmiBlitz3.ab2@9311>   MOVE.l A3,tokeslist
0002533C <AmiBlitz3.ab2@9312>   MOVE.w D4,$4(A3)
00025340 <AmiBlitz3.ab2@9313>   MOVE.w D5,$6(A3)
00025344 <AmiBlitz3.ab2@9314>   CLR.l $8(A3)
00025346 <AmiBlitz3.ab2@9317>   MOVEQ.l #$08,D0
00025348 <AmiBlitz3.ab2@9318>   MOVEQ.l #$01,D1
0002534E <AmiBlitz3.ab2@9319>   MOVE.l mempool,a0
00025352 <AmiBlitz3.ab2@9320>   JSR _AllocPooled(a6)
00025354 <AmiBlitz3.ab2@9322>   MOVEA.l D0,A0
00025358 <AmiBlitz3.ab2@9323>   MOVE.l D3,$4(A0)
0002535C <AmiBlitz3.ab2@9324>   MOVE.l $8(A3),(A0)
00025360 <AmiBlitz3.ab2@9325>   MOVE.l A0,$8(A3)
00025362 <AmiBlitz3.ab2@9326>   MOVE.w D4,D1
00025366 <AmiBlitz3.ab2@9327> BRA.w searchinstr
0002536A <AmiBlitz3.ab2@9330> tokeslist: Ds.l 1
0002536E <AmiBlitz3.ab2@9343>   BEQ.w uselib2_org__skip
00025370 <AmiBlitz3.ab2@9344>   MOVE.l A1,-(A7)
00025372 <AmiBlitz3.ab2@9345>   ADDA.l D1,A1
00025374 <AmiBlitz3.ab2@9346>   ADDQ.w #6,A1
00025376 <AmiBlitz3.ab2@9349>     MOVE.w (A1)+,D1
0002537A <AmiBlitz3.ab2@9350>     BEQ.w uselib2_org__done
0002537C <AmiBlitz3.ab2@9351>     CMP.w D2,D1
00025380 <AmiBlitz3.ab2@9352>     BEQ.w uselib2_org__skip2
00025382 <AmiBlitz3.ab2@9353>     MOVE.l A1,-(A7)
00025386 <AmiBlitz3.ab2@9354>     BSR.w uselib
00025388 <AmiBlitz3.ab2@9355>     MOVEA.l (A7)+,A1
0002538A <AmiBlitz3.ab2@9358>     ADDQ.w #2,A1
0002538E <AmiBlitz3.ab2@9359> BRA.w uselib2_org__loop
00025390 <AmiBlitz3.ab2@9362>   MOVEA.l (A7)+,A1
00025392 <AmiBlitz3.ab2@9365> RTS
00025398 <AmiBlitz3.ab2@9369>   MOVEA.l libpointer,A1
0002539C <AmiBlitz3.ab2@9372>   CMPA.w #$0,A1
000253A0 <AmiBlitz3.ab2@9373>    BEQ.b JL_0_6F36
000253A4 <AmiBlitz3.ab2@9374>   CMP.w $4(A1),D1
000253A8 <AmiBlitz3.ab2@9375>    BEQ.w JL_0_6F34
000253AA <AmiBlitz3.ab2@9376>   MOVEA.l (A1),A1
000253AE <AmiBlitz3.ab2@9377> BRA.w JL_0_6F20
000253B0 <AmiBlitz3.ab2@9380>   MOVEQ.l #-$01,D1
000253B2 <AmiBlitz3.ab2@9383> RTS
000253B6 <AmiBlitz3.ab2@9387>   MOVEM.l d0/a2,-(a7)
000253B8 <AmiBlitz3.ab2@9388>   MOVEQ #0,d0
000253BE <AmiBlitz3.ab2@9389>   LEA instrtab+4,a2
000253C0 <AmiBlitz3.ab2@9390>   MOVE.w d1,d0
000253C2 <AmiBlitz3.ab2@9391>   ASL.l #3,d0
000253C6 <AmiBlitz3.ab2@9392>   MOVE.l 0(a2,d0.l),a1                                     ;*8
000253CC <AmiBlitz3.ab2@9393>   CMP.l #0,a1
000253D0 <AmiBlitz3.ab2@9394>   BNE JL_0_6F54b
000253D6 <AmiBlitz3.ab2@9396>   MOVEA.l libpointer,A1
000253DA <AmiBlitz3.ab2@9399>     CMPA.w #$0,A1
000253DE <AmiBlitz3.ab2@9400>     BEQ.w noliberr
000253E2 <AmiBlitz3.ab2@9401>     CMP.w $4(A1),D1
000253E6 <AmiBlitz3.ab2@9402>     BEQ.w JL_0_6F54
000253E8 <AmiBlitz3.ab2@9403>    MOVEA.l (A1),A1
000253EC <AmiBlitz3.ab2@9404> BRA.w JL_0_6F3E
000253F0 <AmiBlitz3.ab2@9407>   MOVE.l a1,0(a2,d0.l)
000253F4 <AmiBlitz3.ab2@9410>   MOVEM.l (a7)+,d0/a2
000253F6 <AmiBlitz3.ab2@9411> RTS
000253FA <AmiBlitz3.ab2@9414>   MOVEM.l d0-d1/a1,-(a7)
000253FC <AmiBlitz3.ab2@9415>   MOVEQ #0,d0
00025402 <AmiBlitz3.ab2@9416>   LEA instrtab,a1
00025404 <AmiBlitz3.ab2@9417>   MOVE.w d1,d0
00025406 <AmiBlitz3.ab2@9418>   ASL.l #3,d0
0002540A <AmiBlitz3.ab2@9419>   MOVE.l 0(a1,d0.l),a3
0002540E <AmiBlitz3.ab2@9420>   MOVE.l 4(a1,d0.l),a2
00025414 <AmiBlitz3.ab2@9421>   CMP.l #0,a3
00025418 <AmiBlitz3.ab2@9422>   BNE JL_0_6F92b
0002541E <AmiBlitz3.ab2@9424>   MOVEA.l libpointer,A2
00025422 <AmiBlitz3.ab2@9427>   CMPA.w #$0,A2
00025426 <AmiBlitz3.ab2@9428>   BEQ.w notokerr
0002542A <AmiBlitz3.ab2@9429>   CMP.w $E(A2),D1
0002542E <AmiBlitz3.ab2@9430>   BCS.w JL_0_6FB8
00025432 <AmiBlitz3.ab2@9431>   CMP.w $10(A2),D1
00025436 <AmiBlitz3.ab2@9432>   BCC.w JL_0_6FB8
0002543A <AmiBlitz3.ab2@9433>   LEA $30(A2),A3
0002543E <AmiBlitz3.ab2@9434>   TST.w $4(A2)
00025442 <AmiBlitz3.ab2@9435>   BPL.w JL_0_6FA6
00025446 <AmiBlitz3.ab2@9438>     CMP.w $E(A2),D1
0002544A <AmiBlitz3.ab2@9439>     BEQ.w JL_0_6F92
0002544C <AmiBlitz3.ab2@9440>     SUBQ.w #1,D1
00025450 <AmiBlitz3.ab2@9441>     MOVEA.l $2(A3),A3
00025454 <AmiBlitz3.ab2@9442> BRA.w JL_0_6F80
00025458 <AmiBlitz3.ab2@9445>   MOVE.l a3,0(a1,d0.l)
0002545C <AmiBlitz3.ab2@9446>   MOVE.l a2,4(a1,d0.l)
00025460 <AmiBlitz3.ab2@9449>   MOVEM.l (a7)+,d0-d1/a1
00025464 <AmiBlitz3.ab2@9450>   MOVEM.l D1/A1-a3,-(A7)
00025468 <AmiBlitz3.ab2@9451>   CMP.w #1,(a3)
0002546C <AmiBlitz3.ab2@9452>   BNE.s ex10
00025474 <AmiBlitz3.ab2@9453>   CMP.l #$12345678,$e(a3)
00025478 <AmiBlitz3.ab2@9454>   BNE.s ex10
0002547E <AmiBlitz3.ab2@9455>   CMP.w #$ffff,$16(a3)
00025482 <AmiBlitz3.ab2@9456>   BNE.s ex10
00025486 <AmiBlitz3.ab2@9457>   MOVE.l $12(a3),d1
0002548A <AmiBlitz3.ab2@9458>   BEQ.s ex10
00025490 <AmiBlitz3.ab2@9459>   LEA pluginbase,a3
00025494 <AmiBlitz3.ab2@9461> JMP 0(a2,d1.l)                                             ;plugin
00025498 <AmiBlitz3.ab2@9464>   MOVEM.l (A7)+,D1/A1-a3
0002549E <AmiBlitz3.ab2@9465>   JSR stripspaces
000254A0 <AmiBlitz3.ab2@9466>   MOVEQ #0,d0
000254A2 <AmiBlitz3.ab2@9467>   MOVE.b (a5)+,d0
000254A8 <AmiBlitz3.ab2@9468>   MOVE.w d0,lastchar
000254AA <AmiBlitz3.ab2@9469>   ADDQ.l #4,a7
000254AC <AmiBlitz3.ab2@9470> RTS
000254AE <AmiBlitz3.ab2@9474>   MOVEA.l A2,A1
000254B4 <AmiBlitz3.ab2@9475>   CLR.b newmode
000254B8 <AmiBlitz3.ab2@9476>   MOVE.w $4(A1),D1
000254BC <AmiBlitz3.ab2@9479>   BSR.w uselib3
000254C0 <AmiBlitz3.ab2@9480>   MOVEM.l (A7)+,D1/A1-a3
000254C2 <AmiBlitz3.ab2@9481> RTS
000254C8 <AmiBlitz3.ab2@9484>   MOVE.w globalvarpointer,-(a7)
000254D0 <AmiBlitz3.ab2@9485>   MOVE.w #$8004,globalvarpointer
000254D4 <AmiBlitz3.ab2@9486>   BSR.w uselib3
000254DA <AmiBlitz3.ab2@9487>   MOVE.w (a7)+,globalvarpointer
000254DE <AmiBlitz3.ab2@9488>   MOVEM.l (A7)+,D1/A1-a3
000254E0 <AmiBlitz3.ab2@9489> RTS
000254E4 <AmiBlitz3.ab2@9492>     CMP.w $E(A2),D1
000254E8 <AmiBlitz3.ab2@9493>     BEQ.w JL_0_6F92
000254EA <AmiBlitz3.ab2@9494>     SUBQ.w #1,D1
000254EE <AmiBlitz3.ab2@9495>     MOVEA.l $2(A3),A3
000254F2 <AmiBlitz3.ab2@9496> BRA.w JL_0_6FA6
000254F4 <AmiBlitz3.ab2@9499>   MOVEA.l (A2),A2
000254F8 <AmiBlitz3.ab2@9500> BRA.w JL_0_6F5C
000254FE <AmiBlitz3.ab2@9503> JMP writeword
00025502 <AmiBlitz3.ab2@9506> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00025506 <AmiBlitz3.ab2@9507> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
0002550A <AmiBlitz3.ab2@9508> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
0002550C <AmiBlitz3.ab2@9514>   TST.l D0
00025510 <AmiBlitz3.ab2@9515>   BEQ.w exit_loadlibsfile
00025512 <AmiBlitz3.ab2@9516>     MOVE.l D0,D6                                           ;d6=len
00025518 <AmiBlitz3.ab2@9517>     MOVEA.l _dosbase,A6
0002551E <AmiBlitz3.ab2@9518>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00025522 <AmiBlitz3.ab2@9519>     JSR _Open(A6)
00025524 <AmiBlitz3.ab2@9520>     MOVE.l D0,D7
00025528 <AmiBlitz3.ab2@9521>     BEQ.w exit_loadlibsfile
0002552A <AmiBlitz3.ab2@9522>       MOVE.l D6,D0
0002552C <AmiBlitz3.ab2@9523>       MOVEQ.l #$01,D1
00025532 <AmiBlitz3.ab2@9524>       MOVEA.l _execbase,A6
00025538 <AmiBlitz3.ab2@9525>       MOVE.l mempool,a0
0002553C <AmiBlitz3.ab2@9526>       JSR _AllocPooled(a6)
0002553E <AmiBlitz3.ab2@9527>       MOVE.l D0,D5                                         ;start address
00025540 <AmiBlitz3.ab2@9529>       MOVE.l D7,D1                                         ; handle
00025542 <AmiBlitz3.ab2@9530>       MOVE.l D5,D2                                         ; buffer addr
00025544 <AmiBlitz3.ab2@9531>       MOVE.l D6,D3                                         ; size
0002554A <AmiBlitz3.ab2@9532>       MOVEA.l _dosbase,A6
0002554E <AmiBlitz3.ab2@9533>       JSR _Read(A6)
00025550 <AmiBlitz3.ab2@9534>       MOVE.l D7,D1
00025554 <AmiBlitz3.ab2@9535>       JSR _Close(A6)
00025556 <AmiBlitz3.ab2@9537>       MOVEA.l D5,A0                                        ; buffer addr
00025558 <AmiBlitz3.ab2@9543>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
0002555C <AmiBlitz3.ab2@9544>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00025560 <AmiBlitz3.ab2@9545>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00025562 <AmiBlitz3.ab2@9546>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00025564 <AmiBlitz3.ab2@9547>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00025566 <AmiBlitz3.ab2@9548>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
0002556A <AmiBlitz3.ab2@9549>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
0002556C <AmiBlitz3.ab2@9550>           ADD.l D0,D0                                      ;   verdoppele D0
0002556E <AmiBlitz3.ab2@9551>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00025572 <AmiBlitz3.ab2@9552>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00025576 <AmiBlitz3.ab2@9553>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
0002557A <AmiBlitz3.ab2@9554>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
0002557C <AmiBlitz3.ab2@9555>           CMPA.l A0,A2
00025580 <AmiBlitz3.ab2@9556>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00025586 <AmiBlitz3.ab2@9557>             MOVE.l -$8(A2),$20(A1)                         ;
0002558A <AmiBlitz3.ab2@9558>             MOVE.l A2,$24(A1)                              ;
0002558E <AmiBlitz3.ab2@9559> BRA.w JL_0_7010
00025590 <AmiBlitz3.ab2@9562>       MOVE.l D5,D0
00025592 <AmiBlitz3.ab2@9565> RTS
000255BC <AmiBlitz3.ab2@9569>   !basic
00025630 <AmiBlitz3.ab2@9570>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00025664 <AmiBlitz3.ab2@9571>    dos_Delete{tempmapping$}
000256A8 <AmiBlitz3.ab2@9572>    fid.l = file_Open{tempmapping$,#file_forcewrite}
000256C6 <AmiBlitz3.ab2@9573>   !asm
000256CC <AmiBlitz3.ab2@9575>   LEA libpointer,A3
000256D2 <AmiBlitz3.ab2@9579>   MOVE.l size_deflibs,D0
000256D8 <AmiBlitz3.ab2@9580>   MOVE.l deflib,d1
000256DC <AmiBlitz3.ab2@9581>   BEQ 'l1
000256E0 <AmiBlitz3.ab2@9582> BRA 'l2
000256E6 <AmiBlitz3.ab2@9585>   MOVE.l #str_path_deflibs,D1
000256EA <AmiBlitz3.ab2@9588>   BSR.w load_libsfile
000256F0 <AmiBlitz3.ab2@9589>   MOVE.l D0,ptr_deflibs
000256F6 <AmiBlitz3.ab2@9592>   MOVE.l size_acidlibs,D0
000256FC <AmiBlitz3.ab2@9593>   MOVE.l #str_path_acidlibs,D1
00025700 <AmiBlitz3.ab2@9594>   BSR.w load_libsfile
00025706 <AmiBlitz3.ab2@9595>   MOVE.l D0,ptr_acidlibs
00025708 <AmiBlitz3.ab2@9599>   CLR.l (A3)
0002570E <AmiBlitz3.ab2@9600>   MOVE.l A3,ptr_userlibs
00025714 <AmiBlitz3.ab2@9605>   LEA str_libfilename,A0
0002571A <AmiBlitz3.ab2@9606>   LEA str_path_userlibs,A1
0002571C <AmiBlitz3.ab2@9609>     MOVE.b (A1)+,(A0)+
00025720 <AmiBlitz3.ab2@9610>   BNE.b JL_0_708E
00025722 <AmiBlitz3.ab2@9612>   SUBQ.w #1,A0
00025726 <AmiBlitz3.ab2@9613>   MOVE.b #$2F,(A0)+
00025728 <AmiBlitz3.ab2@9616>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
0002572E <AmiBlitz3.ab2@9618>   LEA ptr_userlibs_list,A2
00025734 <AmiBlitz3.ab2@9619>   MOVEA.l ptr_userlibs,A3
0002573A <AmiBlitz3.ab2@9620>   MOVEA.l _dosbase,A6
0002573C <AmiBlitz3.ab2@9625>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00025740 <AmiBlitz3.ab2@9626>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00025742 <AmiBlitz3.ab2@9628>       CLR.l (A3)
00025744 <AmiBlitz3.ab2@9629>       ADDQ.w #4,A7
0002576E <AmiBlitz3.ab2@9630>       !basic
00025782 <AmiBlitz3.ab2@9631>       If fid<>-1
0002578C <AmiBlitz3.ab2@9632>         file_Close{fid}
00025798 <AmiBlitz3.ab2@9633>         fid = -1
000257B6 <AmiBlitz3.ab2@9635>       !asm
000257BA <AmiBlitz3.ab2@9636> BRA.w process_libraries
000257BC <AmiBlitz3.ab2@9639>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
000257C0 <AmiBlitz3.ab2@9640>       TST.w $4(A2)                                         ; naechste addresse pruefen
000257C4 <AmiBlitz3.ab2@9641>     BEQ.b JL_0_70BA
000257C8 <AmiBlitz3.ab2@9643>     LEA $6(A2),A1
000257CA <AmiBlitz3.ab2@9644>     MOVEA.l (A7),A0
000257CC <AmiBlitz3.ab2@9647>       MOVE.b (A1)+,(A0)+
000257D0 <AmiBlitz3.ab2@9648>     BNE.w JL_0_70D4
000257D2 <AmiBlitz3.ab2@9652>     MOVE.l A0,-(A7)
000257D8 <AmiBlitz3.ab2@9653>     MOVE.l #str_libfilename,D1
000257DA <AmiBlitz3.ab2@9654>     MOVEQ.l #-$02,D2
000257E0 <AmiBlitz3.ab2@9655>     MOVEA.l _dosbase,A6
000257E4 <AmiBlitz3.ab2@9656>      JSR _Lock(A6)
000257E6 <AmiBlitz3.ab2@9657>     MOVE.l D0,D1
000257EA <AmiBlitz3.ab2@9658>      BEQ.w JL_0_7156
000257EC <AmiBlitz3.ab2@9659>     MOVEA.l (A7),A0
000257F2 <AmiBlitz3.ab2@9660>     MOVE.b #$2F,-$1(A0)
000257F4 <AmiBlitz3.ab2@9663>     MOVE.l D1,-(A7)
000257FA <AmiBlitz3.ab2@9664>     MOVE.l #ptr_parameterstore,D2
00025800 <AmiBlitz3.ab2@9665>     MOVEA.l _dosbase,A6
00025804 <AmiBlitz3.ab2@9666>     JSR _Examine(A6)
00025806 <AmiBlitz3.ab2@9667>     TST.l D0
0002580A <AmiBlitz3.ab2@9668>      BEQ.w JL_0_7150
00025810 <AmiBlitz3.ab2@9671>     LEA fib_FileName,A0
00025814 <AmiBlitz3.ab2@9672>     BSR.w check_for_infoextention
00025818 <AmiBlitz3.ab2@9673>     BEQ.w JL_0_7150
00025842 <AmiBlitz3.ab2@9676>     !basic
000258C6 <AmiBlitz3.ab2@9677>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
000258E4 <AmiBlitz3.ab2@9678>     !asm
000258EA <AmiBlitz3.ab2@9679>     MOVE.l #str_libfilename,D1
000258EE <AmiBlitz3.ab2@9680>     BSR.w open_userlibfile
000258F0 <AmiBlitz3.ab2@9683>     MOVE.l (A7)+,D1
000258F6 <AmiBlitz3.ab2@9684>     MOVEA.l _dosbase,A6
000258FA <AmiBlitz3.ab2@9685>     JSR _UnLock(A6)
000258FC <AmiBlitz3.ab2@9688>     ADDQ.w #4,A7
00025900 <AmiBlitz3.ab2@9689> BRA.w JL_0_70BA
00025906 <AmiBlitz3.ab2@9692>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002590C <AmiBlitz3.ab2@9693>   MOVEA.l _dosbase,A6
00025910 <AmiBlitz3.ab2@9694>    JSR _Open(A6)
00025912 <AmiBlitz3.ab2@9695>   MOVE.l D0,D7
00025916 <AmiBlitz3.ab2@9696>    BEQ.w exit_userlibfile
00025918 <AmiBlitz3.ab2@9699>   MOVE.l D7,D1                                             ; filehandle
0002591E <AmiBlitz3.ab2@9700>   MOVE.l #optstuff,D2                                     ; buffer
00025924 <AmiBlitz3.ab2@9701>   MOVEA.l _dosbase,A6
00025926 <AmiBlitz3.ab2@9702>   MOVEQ.l #$20,D3                                          ; size
0002592A <AmiBlitz3.ab2@9703>   JSR _Read(A6)
00025930 <AmiBlitz3.ab2@9706>   MOVE.l optstuff+28,D6
00025932 <AmiBlitz3.ab2@9707>   LSL.l #2,D6
00025934 <AmiBlitz3.ab2@9708>   MOVE.l D6,D0
00025936 <AmiBlitz3.ab2@9709>   MOVEQ.l #$01,D1
0002593C <AmiBlitz3.ab2@9710>   MOVEA.l _execbase,A6
00025942 <AmiBlitz3.ab2@9711>   MOVE.l mempool,a0
00025946 <AmiBlitz3.ab2@9712>   JSR _AllocPooled(a6)
00025948 <AmiBlitz3.ab2@9713>   MOVEA.l D0,A5
0002594E <AmiBlitz3.ab2@9716>   MOVEA.l _dosbase,A6
00025950 <AmiBlitz3.ab2@9717>   MOVE.l D7,D1                                             ; filehandle
00025952 <AmiBlitz3.ab2@9718>   MOVE.l A5,D2                                             ; buffer
00025954 <AmiBlitz3.ab2@9719>   MOVE.l D6,D3                                             ; size
00025958 <AmiBlitz3.ab2@9720>    JSR _Read(A6)
0002595A <AmiBlitz3.ab2@9721>   MOVE.l A5,(A3)
0002595C <AmiBlitz3.ab2@9723>   MOVE.l A5,d0
0002595E <AmiBlitz3.ab2@9725>   MOVEA.l A5,A3
00025962 <AmiBlitz3.ab2@9726>   MOVE.l D6,$6(A5)
00025966 <AmiBlitz3.ab2@9727>   CLR.l $20(A5)
00025990 <AmiBlitz3.ab2@9729>   !basic
0002599A <AmiBlitz3.ab2@9731>   addr_libnum.l = PutD0 + 4
000259AE <AmiBlitz3.ab2@9732>   If fid<>-1
00025A4E <AmiBlitz3.ab2@9733>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00025A80 <AmiBlitz3.ab2@9734>     file_WriteLine{fid,currentlib$}
00025A9E <AmiBlitz3.ab2@9736>   !asm
00025AA0 <AmiBlitz3.ab2@9739>   MOVE.l D7,D1                                             ; filehandle
00025AA6 <AmiBlitz3.ab2@9740>   MOVE.l #optstuff,D2                                     ; buffer
00025AA8 <AmiBlitz3.ab2@9741>   MOVEQ.l #$0C,D3                                          ; size
00025AAE <AmiBlitz3.ab2@9742>   MOVEA.l _dosbase,A6
00025AB2 <AmiBlitz3.ab2@9743>    JSR _Read(A6)
00025AB8 <AmiBlitz3.ab2@9745>   CMP.l #$C,D0
00025ABC <AmiBlitz3.ab2@9746>    BCS.w close_and_exit_userlibfile
00025AC2 <AmiBlitz3.ab2@9749>   MOVE.l optstuff+4,D0
00025AC6 <AmiBlitz3.ab2@9750>   MOVE.l D0,$20(A5)
00025AC8 <AmiBlitz3.ab2@9751>   LSL.l #2,D0
00025ACA <AmiBlitz3.ab2@9752>   MOVE.l D0,D5
00025ACC <AmiBlitz3.ab2@9753>   MOVEQ.l #$01,D1
00025AD2 <AmiBlitz3.ab2@9754>   MOVEA.l _execbase,A6
00025AD8 <AmiBlitz3.ab2@9755>   MOVE.l mempool,a0
00025ADC <AmiBlitz3.ab2@9756>   JSR _AllocPooled(a6)
00025AE2 <AmiBlitz3.ab2@9758>   MOVEA.l _dosbase,A6
00025AE6 <AmiBlitz3.ab2@9759>   MOVE.l D0,$24(A5)
00025AE8 <AmiBlitz3.ab2@9760>   MOVE.l D7,D1
00025AEA <AmiBlitz3.ab2@9761>   MOVE.l D0,D2
00025AEC <AmiBlitz3.ab2@9762>   MOVE.l D5,D3
00025AF0 <AmiBlitz3.ab2@9763>   JSR _Read(A6)
00025AF2 <AmiBlitz3.ab2@9766>   MOVE.l D7,D1
00025AF8 <AmiBlitz3.ab2@9767>   MOVEA.l _dosbase,A6
00025AFC <AmiBlitz3.ab2@9768> JMP _Close(A6)
00025AFE <AmiBlitz3.ab2@9771> RTS
00025B04 <AmiBlitz3.ab2@9777>   CLR.w number_of_objects
00025B0A <AmiBlitz3.ab2@9778>   MOVEA.l end_of_tokenlist,A3
00025B10 <AmiBlitz3.ab2@9779>   MOVEA.l libpointer,A2
00025B14 <AmiBlitz3.ab2@9782>     CMPA.w #$0,A2
00025B18 <AmiBlitz3.ab2@9783>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00025B1C <AmiBlitz3.ab2@9785>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00025B20 <AmiBlitz3.ab2@9786>     BMI.w JL_0_7226
00025B22 <AmiBlitz3.ab2@9787>       LSL.w #7,D7
00025B24 <AmiBlitz3.ab2@9788>       ADDQ.w #1,D7
00025B28 <AmiBlitz3.ab2@9789>       MOVE.w D7,$E(A2)
00025B2C <AmiBlitz3.ab2@9792>     LEA $30(A2),A1
00025B32 <AmiBlitz3.ab2@9793>     LEA temp1,A4
00025B34 <AmiBlitz3.ab2@9796>       MOVE.w (A1),D0
00025B38 <AmiBlitz3.ab2@9797>       BMI.w JL_0_72AE
00025B3A <AmiBlitz3.ab2@9798>       MOVE.l A1,(A4)
00025B3C <AmiBlitz3.ab2@9799>       MOVEA.l A1,A4
00025B3E <AmiBlitz3.ab2@9800>       ADDQ.w #2,A4
00025B40 <AmiBlitz3.ab2@9801>       ADDQ.w #6,A1
00025B44 <AmiBlitz3.ab2@9802>       CMP.w #$8,D0
00025B48 <AmiBlitz3.ab2@9803>       BEQ.w JL_0_7290
00025B4C <AmiBlitz3.ab2@9804>         ANDI.w #$F,D0
00025B50 <AmiBlitz3.ab2@9805>         BNE.w JL_0_725C
00025B54 <AmiBlitz3.ab2@9806>           BSR.w skiplibreg
00025B58 <AmiBlitz3.ab2@9807>           LEA $C(A1),A1
00025B5A <AmiBlitz3.ab2@9808>           ADDQ.w #1,D7
00025B5E <AmiBlitz3.ab2@9809> BRA.w JL_0_7230
00025B62 <AmiBlitz3.ab2@9812>     BTST #$2,D0
00025B66 <AmiBlitz3.ab2@9813>     BEQ.w JL_0_7274
00025B68 <AmiBlitz3.ab2@9814>       ADDQ.w #4,A1
00025B6A <AmiBlitz3.ab2@9817>         TST.b (A1)+
00025B6E <AmiBlitz3.ab2@9818>       BPL.w JL_0_7266
00025B72 <AmiBlitz3.ab2@9819>       BSR.w aligna1
00025B76 <AmiBlitz3.ab2@9820> BRA.w JL_0_7290
00025B78 <AmiBlitz3.ab2@9823>       MOVE.w (A1)+,D0
00025B7C <AmiBlitz3.ab2@9824>       BMI.w JL_0_7290
00025B80 <AmiBlitz3.ab2@9825>       ANDI.w #$FF,D0
00025B82 <AmiBlitz3.ab2@9826>       ADDA.w D0,A1
00025B86 <AmiBlitz3.ab2@9827>       BSR.w aligna1
00025B8A <AmiBlitz3.ab2@9828>       BSR.w skiplibreg
00025B8E <AmiBlitz3.ab2@9829>       LEA $C(A1),A1
00025B92 <AmiBlitz3.ab2@9830> BRA.w JL_0_7274
00025B94 <AmiBlitz3.ab2@9833>     MOVE.l A1,(A3)
00025B96 <AmiBlitz3.ab2@9834>     MOVEA.l A1,A3
00025B98 <AmiBlitz3.ab2@9835>     ADDQ.w #4,A1
00025B9A <AmiBlitz3.ab2@9836>     MOVE.w D7,(A1)+
00025B9C <AmiBlitz3.ab2@9839>       TST.b (A1)+
00025BA0 <AmiBlitz3.ab2@9840>     BNE.w JL_0_7298
00025BA2 <AmiBlitz3.ab2@9843>       TST.b (A1)+
00025BA6 <AmiBlitz3.ab2@9844>     BNE.w JL_0_729E
00025BAA <AmiBlitz3.ab2@9846>     BSR.w aligna1
00025BAC <AmiBlitz3.ab2@9847>     ADDQ.w #1,D7
00025BB0 <AmiBlitz3.ab2@9848> BRA.w JL_0_7230
00025BB4 <AmiBlitz3.ab2@9851>     TST.w $4(A2)
00025BB8 <AmiBlitz3.ab2@9852>      BMI.w JL_0_72BA
00025BBC <AmiBlitz3.ab2@9853>     MOVE.w D7,$10(A2)
00025BBE <AmiBlitz3.ab2@9856>     ADDQ.w #2,A1
00025BC0 <AmiBlitz3.ab2@9857>     TST.l (A1)+
00025BC4 <AmiBlitz3.ab2@9858>      BEQ.w JL_0_72CC
00025BCA <AmiBlitz3.ab2@9859>     ADDQ.w #1,number_of_objects
00025BCE <AmiBlitz3.ab2@9860>     LEA $16(A1),A1
00025BD0 <AmiBlitz3.ab2@9863>     SUBA.l A2,A1
00025BD4 <AmiBlitz3.ab2@9864>     MOVE.l A1,$12(A2)
00025BD6 <AmiBlitz3.ab2@9865>     MOVEA.l (A2),A2
00025BDA <AmiBlitz3.ab2@9866> BRA.w JL_0_720E
00025BDC <AmiBlitz3.ab2@9869>   CLR.l (A3)
00025BE2 <AmiBlitz3.ab2@9870>   MOVE.l A7,errstack
00025BEC <AmiBlitz3.ab2@9871>   MOVE.l #AL_0_730E,errcont
00025BF4 <AmiBlitz3.ab2@9872>   MOVE.w #$FFFF,ezerr
00025BF8 <AmiBlitz3.ab2@9873>   MOVE.w #$FFFA,D1
00025BFC <AmiBlitz3.ab2@9874>    BSR.w JL_0_6F38
00025C02 <AmiBlitz3.ab2@9875>   MOVE.l A1,tempvm
00025C06 <AmiBlitz3.ab2@9876>   MOVE.w #$FDA7,D1
00025C0A <AmiBlitz3.ab2@9877>    BSR.w JL_0_6F38
00025C10 <AmiBlitz3.ab2@9878>   MOVE.l A1,ffplib
00025C12 <AmiBlitz3.ab2@9881> RTS
00025C16 <AmiBlitz3.ab2@9884> ffplib:  Ds.l 1
00025C18 <AmiBlitz3.ab2@9888>     TST.w (A1)+
00025C1C <AmiBlitz3.ab2@9889>     BEQ.w JL_0_7320
00025C1E <AmiBlitz3.ab2@9890>     ADDQ.w #2,A1
00025C22 <AmiBlitz3.ab2@9891> BRA.w skiplibreg
00025C24 <AmiBlitz3.ab2@9894> RTS
00025C26 <AmiBlitz3.ab2@9898>   EXG.l A1,A0
00025C2A <AmiBlitz3.ab2@9899>   BSR.w aligna1
00025C2C <AmiBlitz3.ab2@9900>   EXG.l A1,A0
00025C2E <AmiBlitz3.ab2@9901> RTS
00025C30 <AmiBlitz3.ab2@9904>   EXG.l D0,A1
00025C32 <AmiBlitz3.ab2@9905>   ADDQ.l #1,D0
00025C36 <AmiBlitz3.ab2@9906>   BCLR #$0,D0
00025C38 <AmiBlitz3.ab2@9907>   EXG.l D0,A1
00025C3A <AmiBlitz3.ab2@9908> RTS
00025C40 <AmiBlitz3.ab2@9912>   MOVEA.l _execbase,A6
00025C46 <AmiBlitz3.ab2@9913>   MOVEA.l ptr_userlibs,A2
00025C48 <AmiBlitz3.ab2@9914>   MOVE.l (A2),D0
00025C4A <AmiBlitz3.ab2@9915>   CLR.l (A2)
00025C4C <AmiBlitz3.ab2@9916>   MOVEA.l D0,A2
00025C50 <AmiBlitz3.ab2@9919>     CMPA.w #$0,A2
00025C54 <AmiBlitz3.ab2@9920>     BEQ.w free_userlib
00025C58 <AmiBlitz3.ab2@9922>     MOVE.l $20(A2),D0
00025C5C <AmiBlitz3.ab2@9923>     BEQ.b JL_0_7360
00025C5E <AmiBlitz3.ab2@9924>       LSL.l #2,D0
00025C64 <AmiBlitz3.ab2@9925>       MOVE.l mempool,a0
00025C68 <AmiBlitz3.ab2@9926>       MOVEA.l $24(A2),A1
00025C6C <AmiBlitz3.ab2@9927>       JSR _FreePooled(A6)
00025C6E <AmiBlitz3.ab2@9930>     MOVEA.l A2,A1
00025C72 <AmiBlitz3.ab2@9931>     MOVE.l $6(A1),D0
00025C78 <AmiBlitz3.ab2@9932>     MOVE.l mempool,a0
00025C7A <AmiBlitz3.ab2@9933>     MOVEA.l (A2),A2
00025C80 <AmiBlitz3.ab2@9934>     MOVEA.l _execbase,A6
00025C84 <AmiBlitz3.ab2@9935>     JSR _FreePooled(A6)
00025C88 <AmiBlitz3.ab2@9936> BRA.w JL_0_7348
00025C8C <AmiBlitz3.ab2@9940>   BSR.w free_userlibs
00025C92 <AmiBlitz3.ab2@9941>   MOVEA.l _execbase,A6
00025C98 <AmiBlitz3.ab2@9942>   CLR.l libpointer
00025C9E <AmiBlitz3.ab2@9943>   MOVEA.l end_of_tokenlist,A0
00025CA0 <AmiBlitz3.ab2@9944>   CLR.l (A0)
00025CA6 <AmiBlitz3.ab2@9946>   MOVE.l size_acidlibs,D0
00025CAA <AmiBlitz3.ab2@9947>   BEQ.b JL_0_73A2
00025CB0 <AmiBlitz3.ab2@9948>     MOVE.l ptr_acidlibs,D1
00025CB4 <AmiBlitz3.ab2@9949>     BEQ.b JL_0_73A2
00025CBA <AmiBlitz3.ab2@9950>       CLR.l ptr_acidlibs
00025CBC <AmiBlitz3.ab2@9951>       MOVEA.l D1,A1
00025CC2 <AmiBlitz3.ab2@9952>       MOVE.l mempool,a0
00025CC8 <AmiBlitz3.ab2@9953>       MOVEA.l _execbase,A6
00025CCC <AmiBlitz3.ab2@9954>       JSR _FreePooled(A6)                                 ; free acidlibs
00025CD2 <AmiBlitz3.ab2@9957>   MOVE.l size_deflibs,D0
00025CD6 <AmiBlitz3.ab2@9958>   BEQ.b JL_0_73BE
00025CDC <AmiBlitz3.ab2@9959>     MOVE.l ptr_deflibs,D1
00025CE0 <AmiBlitz3.ab2@9960>     BEQ.b JL_0_73BE
00025CE6 <AmiBlitz3.ab2@9961>       CLR.l ptr_deflibs                                    ; d0: memorySize
00025CE8 <AmiBlitz3.ab2@9962>       MOVEA.l D1,A1                                        ; a1: memory
00025CEE <AmiBlitz3.ab2@9963>       MOVE.l mempool,a0                                    ; a0: poolHeader
00025CF4 <AmiBlitz3.ab2@9964>       MOVEA.l _execbase,A6
00025CF8 <AmiBlitz3.ab2@9965>       JSR _FreePooled(A6)                                  ; free deflibs
00025CFA <AmiBlitz3.ab2@9968> RTS
00025D00 <AmiBlitz3.ab2@9972>   MOVEA.l currentmacroaddr,A0
00025D02 <AmiBlitz3.ab2@9973>   MOVEA.l (A0),A2
00025D04 <AmiBlitz3.ab2@9974>   CLR.l (A0)
00025D0A <AmiBlitz3.ab2@9975>   MOVEA.l _execbase,A6
00025D0E <AmiBlitz3.ab2@9978>     CMPA.w #$0,A2
00025D12 <AmiBlitz3.ab2@9979>     BEQ.w JL_0_73FA
00025D14 <AmiBlitz3.ab2@9980>     MOVEQ.l #$00,D0
00025D18 <AmiBlitz3.ab2@9981>     MOVE.w $8(A2),D0
00025D1C <AmiBlitz3.ab2@9982>     BEQ.w JL_0_73E8
00025D20 <AmiBlitz3.ab2@9983>     MOVEA.l $4(A2),A1
00025D26 <AmiBlitz3.ab2@9984>     MOVE.l mempool,a0
00025D2A <AmiBlitz3.ab2@9985>     JSR _FreePooled(A6)
00025D2C <AmiBlitz3.ab2@9988>     MOVEA.l A2,A1
00025D2E <AmiBlitz3.ab2@9989>     MOVEA.l (A2),A2
00025D30 <AmiBlitz3.ab2@9990>     MOVEQ.l #$00,D0
00025D34 <AmiBlitz3.ab2@9991>     MOVE.b $C(A1),D0
00025D3A <AmiBlitz3.ab2@9992>     MOVE.l mempool2,a0
00025D3E <AmiBlitz3.ab2@9993>     JSR _FreePooled(A6)
00025D42 <AmiBlitz3.ab2@9994> BRA.w JL_0_73CE
00025D44 <AmiBlitz3.ab2@9997> RTS
00025D4A <AmiBlitz3.ab2@10001>   MOVEA.l templabel,A2
00025D50 <AmiBlitz3.ab2@10002>   CLR.l templabel
00025D52 <AmiBlitz3.ab2@10003> RTS
00025D58 <AmiBlitz3.ab2@10006>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00025D5C <AmiBlitz3.ab2@10009>     CMPA.w #$0,A2
00025D60 <AmiBlitz3.ab2@10010>     BEQ.w JL_0_7426
00025D62 <AmiBlitz3.ab2@10011>     MOVEQ.l #$00,D0
00025D66 <AmiBlitz3.ab2@10012>     MOVE.b $E(A2),D0                                       ;labeltemp
00025D68 <AmiBlitz3.ab2@10013>     MOVEA.l A2,A1
00025D6A <AmiBlitz3.ab2@10014>     MOVEA.l (A2),A2
00025D70 <AmiBlitz3.ab2@10015>     MOVE.l mempool2,a0
00025D74 <AmiBlitz3.ab2@10017> BRA.w JL_0_740C
00025D76 <AmiBlitz3.ab2@10020> RTS
00025D7C <AmiBlitz3.ab2@10024>   MOVEA.l data1,A4
00025D82 <AmiBlitz3.ab2@10025>   CMPA.l data2at,A4
00025D86 <AmiBlitz3.ab2@10026>   BCC.w JL_0_7442
00025D88 <AmiBlitz3.ab2@10027>     MOVE.b D1,(A4)+
00025D8E <AmiBlitz3.ab2@10028>     MOVE.l A4,data1
00025D90 <AmiBlitz3.ab2@10029> RTS
00025D98 <AmiBlitz3.ab2@10032>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00025D9E <AmiBlitz3.ab2@10033>   ADDQ.l #1,data1
00025DA0 <AmiBlitz3.ab2@10034> RTS
00025DA2 <AmiBlitz3.ab2@10038>   SWAP D1
00025DA6 <AmiBlitz3.ab2@10039>   BSR.w pokedata1
00025DA8 <AmiBlitz3.ab2@10040>   SWAP D1
00025DAE <AmiBlitz3.ab2@10043>   MOVEA.l data1,A4
00025DB4 <AmiBlitz3.ab2@10044>   CMPA.l data2at,A4
00025DB8 <AmiBlitz3.ab2@10045>    BCC.w JL_0_7474
00025DBA <AmiBlitz3.ab2@10046>   MOVE.w D1,(A4)+
00025DC0 <AmiBlitz3.ab2@10047>   MOVE.l A4,data1
00025DC2 <AmiBlitz3.ab2@10048> RTS
00025DCA <AmiBlitz3.ab2@10051>   MOVE.w #$FFFF,dontwrite
00025DD0 <AmiBlitz3.ab2@10052>   ADDQ.l #2,data1
00025DD2 <AmiBlitz3.ab2@10053> RTS
00025DD8 <AmiBlitz3.ab2@10057>   MOVE.l data1,D3                                      ;write local string/type allocs
00025DDA <AmiBlitz3.ab2@10058>   MOVEQ.l #$00,D4
00025DDE <AmiBlitz3.ab2@10061>   CMPA.w #$0,A2
00025DE2 <AmiBlitz3.ab2@10062>    BEQ.w JL_0_74CAc
00025DE6 <AmiBlitz3.ab2@10063>   TST.w $6(A2)
00025DEA <AmiBlitz3.ab2@10064>    BNE.w JL_0_74C4c
00025DEE <AmiBlitz3.ab2@10065>   MOVEA.l $A(A2),A3
00025DF6 <AmiBlitz3.ab2@10066>   CMPI.l #$100,$4(A3)
00025DFA <AmiBlitz3.ab2@10067>    BCS.w JL_0_74C4c
00025DFE <AmiBlitz3.ab2@10068>   MOVE.w $4(A2),D1
00025E02 <AmiBlitz3.ab2@10069>    BSR.w pokedata1
00025E06 <AmiBlitz3.ab2@10070>   MOVE.w $8(A3),D1
00025E0A <AmiBlitz3.ab2@10071>    BSR.w pokedata1
00025E0C <AmiBlitz3.ab2@10072>   ADDQ.w #1,D4
00025E0E <AmiBlitz3.ab2@10075>    MOVEA.l (A2),A2
00025E12 <AmiBlitz3.ab2@10076> BRA.w JL_0_7492c
00025E14 <AmiBlitz3.ab2@10079>    TST.w D4
00025E18 <AmiBlitz3.ab2@10080>    BEQ.w JL_0_74E0
00025E1C <AmiBlitz3.ab2@10081>   MOVE.w #$FF37,D1
00025E20 <AmiBlitz3.ab2@10082>    BSR.w uselib
00025E24 <AmiBlitz3.ab2@10083>   MOVE.w #$FFFA,D1
00025E28 <AmiBlitz3.ab2@10084> BRA.w uselib
00025E2E <AmiBlitz3.ab2@10092>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00025E34 <AmiBlitz3.ab2@10095>   MOVE.l data1,D3
00025E36 <AmiBlitz3.ab2@10096>   MOVEQ.l #$00,D4
00025E3C <AmiBlitz3.ab2@10097>   TST.b iserror
00025E40 <AmiBlitz3.ab2@10098>   BEQ JL_0_7492
00025E42 <AmiBlitz3.ab2@10099>   RTS
00025E46 <AmiBlitz3.ab2@10101>    CMPA.w #$0,A2
00025E4A <AmiBlitz3.ab2@10102>    BEQ.w JL_0_74CA
00025E4E <AmiBlitz3.ab2@10103>   TST.w $6(A2)
00025E52 <AmiBlitz3.ab2@10104>    BNE.w JL_0_74C4
00025E56 <AmiBlitz3.ab2@10105>   MOVEA.l $A(A2),A3
00025E5E <AmiBlitz3.ab2@10106>   CMPI.l #$100,$4(A3)
00025E62 <AmiBlitz3.ab2@10107>    BCS.w JL_0_74C4
00025E66 <AmiBlitz3.ab2@10108>   MOVE.w $4(A2),D1
00025E6A <AmiBlitz3.ab2@10109>    BSR.w pokedata1
00025E6E <AmiBlitz3.ab2@10110>   MOVE.w $8(A3),D1
00025E72 <AmiBlitz3.ab2@10111>    BSR.w pokedata1
00025E74 <AmiBlitz3.ab2@10112>   ADDQ.w #1,D4
00025E76 <AmiBlitz3.ab2@10115>   MOVEA.l (A2),A2
00025E7A <AmiBlitz3.ab2@10116> BRA.w JL_0_7492
00025E80 <AmiBlitz3.ab2@10120>   MOVEA.l sharebase,A2
00025E84 <AmiBlitz3.ab2@10123>   CMPA.w #$0,A2
00025E88 <AmiBlitz3.ab2@10124>    BEQ.w JL_0_74CAb
00025E8C <AmiBlitz3.ab2@10126>   TST.w $6(A2)
00025E90 <AmiBlitz3.ab2@10127>    BNE.w JL_0_74C4b
00025E94 <AmiBlitz3.ab2@10128>   MOVEA.l $A(A2),A3
00025E9C <AmiBlitz3.ab2@10129>   CMPI.l #$100,$4(A3)
00025EA0 <AmiBlitz3.ab2@10130>    BCS.w JL_0_74C4b
00025EA4 <AmiBlitz3.ab2@10131>   MOVE.w $4(A2),D1
00025EA8 <AmiBlitz3.ab2@10132>    BSR.w pokedata1
00025EAC <AmiBlitz3.ab2@10133>   MOVE.w $8(A3),D1
00025EB0 <AmiBlitz3.ab2@10134>    BSR.w pokedata1
00025EB2 <AmiBlitz3.ab2@10135>   ADDQ.w #1,D4
00025EB4 <AmiBlitz3.ab2@10138>   MOVEA.l (A2),A2
00025EB8 <AmiBlitz3.ab2@10139> BRA.w JL_0_7492b
00025EBA <AmiBlitz3.ab2@10142>    TST.w D4
00025EBE <AmiBlitz3.ab2@10143>    BEQ.w JL_0_74E0
00025EC2 <AmiBlitz3.ab2@10144>   MOVE.w #$FF37,D1
00025EC6 <AmiBlitz3.ab2@10145>    BSR.w uselib                                            ;use statics lib
00025ECA <AmiBlitz3.ab2@10146>   MOVE.w #$FFFA,D1                                         ;use memlib
00025ECE <AmiBlitz3.ab2@10147> BRA.w uselib
00025ED0 <AmiBlitz3.ab2@10150> RTS
00025ED6 <AmiBlitz3.ab2@10154>   MOVE.w numtoa2,D1
00025EDA <AmiBlitz3.ab2@10155>    BSR.w writeword
00025EDE <AmiBlitz3.ab2@10156>    BSR.w addoff
00025EE0 <AmiBlitz3.ab2@10157>   MOVE.l D3,D1
00025EE4 <AmiBlitz3.ab2@10158>    BSR.w writelong
00025EE6 <AmiBlitz3.ab2@10159>   SUBQ.w #1,D4
00025EEC <AmiBlitz3.ab2@10160>   MOVE.w D4,endarray+2
00025EF2 <AmiBlitz3.ab2@10161>   MOVE.l endarray,D1
00025EF6 <AmiBlitz3.ab2@10162> BRA.w writelong
00025EF8 <AmiBlitz3.ab2@10166>   MOVE.l D3,-(A7)
00025EFE <AmiBlitz3.ab2@10169>   MOVEA.l _dosbase,A6
00025F02 <AmiBlitz3.ab2@10170>   JSR _Write(a6)
00025F04 <AmiBlitz3.ab2@10172>   CMP.l (A7)+,D0
00025F08 <AmiBlitz3.ab2@10173>    BNE.w JL_0_7516
00025F0A <AmiBlitz3.ab2@10174> RTS
00025F0C <AmiBlitz3.ab2@10177>   MOVE.l D7,D1
00025F12 <AmiBlitz3.ab2@10179>   MOVEA.l _dosbase,A6
00025F16 <AmiBlitz3.ab2@10180>   JSR _Close(a6)
00025F1C <AmiBlitz3.ab2@10183> JMP error_create_exe
00025F22 <AmiBlitz3.ab2@10192>   MOVE.l A7,errstack
00025F26 <AmiBlitz3.ab2@10193>   MOVEM.l d2-d7/a2-a6,-(a7)
00025F30 <AmiBlitz3.ab2@10194>   MOVE.l #AL_0_7790,errcont
00025F36 <AmiBlitz3.ab2@10195>    JSR call_setpointerbusy
00025F3E <AmiBlitz3.ab2@10196>   MOVE.w #$FFFF,anyerrs
00025F48 <AmiBlitz3.ab2@10197>   CMP.l #-1,chipstart
00025F4C <AmiBlitz3.ab2@10198>   BEQ 'l01
00025F52 <AmiBlitz3.ab2@10199>   MOVE.l chipend,d1
00025F54 <AmiBlitz3.ab2@10200>   ADDQ.l #3,d1
00025F5A <AmiBlitz3.ab2@10201>   AND.l #$fffffffc,d1                                      ;bug
00025F60 <AmiBlitz3.ab2@10202>   MOVE.l d1,chipend
00025F62 <AmiBlitz3.ab2@10203>   MOVE.l d1,a1
00025F68 <AmiBlitz3.ab2@10204>   MOVE.l chipstart,a0
00025F6A <AmiBlitz3.ab2@10205>   MOVE.l a1,d1
00025F6C <AmiBlitz3.ab2@10206>   SUB.l a0,d1
00025F72 <AmiBlitz3.ab2@10207>   MOVE.l d1,chipsize
00025F7C <AmiBlitz3.ab2@10210>   CMP.l #-1,bssstart
00025F80 <AmiBlitz3.ab2@10211>   BEQ 'l11
00025F86 <AmiBlitz3.ab2@10212>   MOVE.l realbssend,a1
00025F8C <AmiBlitz3.ab2@10213>   MOVE.l bssstart,a0
00025F8E <AmiBlitz3.ab2@10214>   MOVE.l a1,d1
00025F90 <AmiBlitz3.ab2@10215>   SUB.l a0,d1
00025F96 <AmiBlitz3.ab2@10216>   MOVE.l d1,bsssize
00025F9A <AmiBlitz3.ab2@10217>   BEQ 'l11
00025F9C <AmiBlitz3.ab2@10220>   TST.b (a0)+
00025FA0 <AmiBlitz3.ab2@10221>   BEQ 'l31
00025FA6 <AmiBlitz3.ab2@10222>   TST.b debugmode
00025FAA <AmiBlitz3.ab2@10223>   BEQ 'l1
00025FB0 <AmiBlitz3.ab2@10224>   TST.b exdebug
00025FB4 <AmiBlitz3.ab2@10225>   BNE 'l31
00025FBA <AmiBlitz3.ab2@10228>   MOVE.l #nodata,-(a7)
00025FC0 <AmiBlitz3.ab2@10229> JMP handle_compileerror
00025FC2 <AmiBlitz3.ab2@10232>   CMP.l a0,a1
00025FC6 <AmiBlitz3.ab2@10233>   BGT 'l32
00025FCC <AmiBlitz3.ab2@10234>   MOVE.l bssend,d1
00025FCE <AmiBlitz3.ab2@10235>   ADDQ.l #3,d1
00025FD4 <AmiBlitz3.ab2@10236>   AND.l #$fffffffc,d1                                      ;bug
00025FDA <AmiBlitz3.ab2@10237>   MOVE.l d1,bssend
00025FDC <AmiBlitz3.ab2@10238>   MOVE.l d1,a1
00025FE2 <AmiBlitz3.ab2@10239>   MOVE.l bssstart,a0
00025FE4 <AmiBlitz3.ab2@10240>   MOVE.l a1,d1
00025FE6 <AmiBlitz3.ab2@10241>   SUB.l a0,d1
00025FEC <AmiBlitz3.ab2@10242>   MOVE.l d1,bsssize
00025FF0 <AmiBlitz3.ab2@10245>   MOVEM.l d5-d7/d3,-(a7)
00025FF6 <AmiBlitz3.ab2@10246>   MOVE.w dontwrite,D1
00025FFA <AmiBlitz3.ab2@10247>   BNE.w JL_0_757C
00026000 <AmiBlitz3.ab2@10248>   MOVE.l chipsize,d5
00026006 <AmiBlitz3.ab2@10249>   MOVE.l bsssize,d3
0002600C <AmiBlitz3.ab2@10250>   MOVE.l chipstart,d7
00026012 <AmiBlitz3.ab2@10251>   MOVE.l bssstart,d6
00026018 <AmiBlitz3.ab2@10252>   MOVEA.l hunkoffsetbase,A2
0002601E <AmiBlitz3.ab2@10253>   MOVEA.l destbufferstart,A1
00026020 <AmiBlitz3.ab2@10254>   MOVE.l A1,D2
00026026 <AmiBlitz3.ab2@10255>   ADD.l noinits,D2
0002602C <AmiBlitz3.ab2@10256>   CLR.l hunkoffsetnum
00026030 <AmiBlitz3.ab2@10259>   CMPA.w #$0,A2
00026034 <AmiBlitz3.ab2@10260>    BEQ.w JL_0_757C
00026038 <AmiBlitz3.ab2@10261>   MOVE.l $4(A2),D0
0002603C <AmiBlitz3.ab2@10262>    LEA $0(a1,d0.l),a0
0002603E <AmiBlitz3.ab2@10263>    MOVE.l (a0),d1
00026040 <AmiBlitz3.ab2@10264>   TST.l d1
00026044 <AmiBlitz3.ab2@10265>    BMI.w 'lm1
0002604C <AmiBlitz3.ab2@10266>   MOVE.b #0,newhunk
00026056 <AmiBlitz3.ab2@10267>   CMP.l #-1,chipstart
0002605A <AmiBlitz3.ab2@10268>   BEQ 'l10
00026060 <AmiBlitz3.ab2@10269>   CMP.l chipstart,d1
00026064 <AmiBlitz3.ab2@10270>   BLT 'l10
0002606C <AmiBlitz3.ab2@10271>   MOVE.b #1,newhunk
00026072 <AmiBlitz3.ab2@10272>   CMP.l chipend,d1
00026076 <AmiBlitz3.ab2@10273>   BGE 'l110
00026078 <AmiBlitz3.ab2@10274>   SUB.l d7,(a0)
00026080 <AmiBlitz3.ab2@10275>   ADD.l #$80000000,4(a2)
00026084 <AmiBlitz3.ab2@10276> BRA JL_0_7576
00026088 <AmiBlitz3.ab2@10279>   SUB.l d5,0(a0)
00026092 <AmiBlitz3.ab2@10282>   CMP.l #-1,bssstart
00026096 <AmiBlitz3.ab2@10283>     BEQ 'l11
0002609C <AmiBlitz3.ab2@10284>   CMP.l bssstart,d1
000260A0 <AmiBlitz3.ab2@10285>   BLT 'l11
000260A6 <AmiBlitz3.ab2@10286>   CMP.l bssend,d1
000260AA <AmiBlitz3.ab2@10287>   BGE 'l111
000260B0 <AmiBlitz3.ab2@10288>   TST.b newhunk
000260B4 <AmiBlitz3.ab2@10289>   BEQ 'ln1
000260B6 <AmiBlitz3.ab2@10290>   ADD.l d5,(a0)
000260B8 <AmiBlitz3.ab2@10293>   SUB.l d6,(a0)
000260C0 <AmiBlitz3.ab2@10294>   ADD.l #$40000000,4(a2)
000260C4 <AmiBlitz3.ab2@10295> BRA JL_0_7576
000260C8 <AmiBlitz3.ab2@10298>   SUB.l d3,0(a0)
000260CA <AmiBlitz3.ab2@10301>   SUB.l D2,(A0)
000260D0 <AmiBlitz3.ab2@10304>   ADDQ.l #1,hunkoffsetnum
000260D2 <AmiBlitz3.ab2@10307>    MOVEA.l (A2),A2
000260D6 <AmiBlitz3.ab2@10308> BRA.w JL_0_755E
000260DA <AmiBlitz3.ab2@10312>   MOVEM.l (a7)+,d5-d7/d3
000260E0 <AmiBlitz3.ab2@10313>   MOVE.l ptr_newexefilename,D1
000260E6 <AmiBlitz3.ab2@10314>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000260EC <AmiBlitz3.ab2@10315>   MOVEA.l _dosbase,A6
000260F0 <AmiBlitz3.ab2@10316>    JSR _Open(A6)
000260F2 <AmiBlitz3.ab2@10317>   MOVE.l D0,D7
000260F6 <AmiBlitz3.ab2@10318>    BEQ.w execerr
000260FC <AmiBlitz3.ab2@10319>   MOVE.l objlen,D0
00026102 <AmiBlitz3.ab2@10320>   SUB.l #moremem,d0
00026108 <AmiBlitz3.ab2@10321>   SUB.l noinits,D0
00026112 <AmiBlitz3.ab2@10322>   CMP.l #-1,bssstart
00026116 <AmiBlitz3.ab2@10323>   BEQ 'l60
0002611C <AmiBlitz3.ab2@10324>   SUB.l bsssize,d0
00026122 <AmiBlitz3.ab2@10325>   SUB.l chipsize,d0
00026126 <AmiBlitz3.ab2@10326> BRA.s 'l61
00026130 <AmiBlitz3.ab2@10329>   CMP.l #-1,chipstart
00026134 <AmiBlitz3.ab2@10330>   BEQ 'l61
0002613A <AmiBlitz3.ab2@10331>   SUB.l bsssize,d0
00026140 <AmiBlitz3.ab2@10332>   SUB.l chipsize,d0
00026142 <AmiBlitz3.ab2@10335>   ADDQ.l #3,D0
00026144 <AmiBlitz3.ab2@10336>   LSR.l #2,D0
0002614A <AmiBlitz3.ab2@10337>   MOVE.l D0,tstsize1
00026150 <AmiBlitz3.ab2@10338>   MOVE.l D0,tstsize2
00026152 <AmiBlitz3.ab2@10339>   MOVE.l D7,D1
00026158 <AmiBlitz3.ab2@10340>   MOVE.l #tsthead,D2                                      ;hunkbegin
0002615A <AmiBlitz3.ab2@10341>   MOVEQ.l #$20,D3
00026164 <AmiBlitz3.ab2@10342>   CMP.l #-1,bssstart
00026168 <AmiBlitz3.ab2@10343>   BEQ 'lb1
00026172 <AmiBlitz3.ab2@10344>   CMP.l #-1,chipstart
00026176 <AmiBlitz3.ab2@10345>   BEQ 'lb1
00026180 <AmiBlitz3.ab2@10346>   MOVE.l #1,bssnum
0002618A <AmiBlitz3.ab2@10347>   MOVE.l #2,chipnum
0002618C <AmiBlitz3.ab2@10348>   MOVEQ.l #$28,D3
00026192 <AmiBlitz3.ab2@10349>   MOVE.l bsssize,d2
00026194 <AmiBlitz3.ab2@10350>   ADDQ.l #3,d2
00026196 <AmiBlitz3.ab2@10351>   ASR.l #2,d2
0002619C <AmiBlitz3.ab2@10352>   MOVE.l d2,hunkend+8
000261A2 <AmiBlitz3.ab2@10353>   MOVE.l d2,bsssize3
000261A8 <AmiBlitz3.ab2@10354>   MOVE.l chipsize,d2
000261AA <AmiBlitz3.ab2@10355>   ADDQ.l #3,d2
000261AC <AmiBlitz3.ab2@10356>   ASR.l #2,d2
000261B2 <AmiBlitz3.ab2@10357>   MOVE.l d2,chipsize2
000261BC <AmiBlitz3.ab2@10358>   ADD.l #$40000000,chipsize2
000261C2 <AmiBlitz3.ab2@10359>   MOVE.l d2,hunkend2+8
000261C8 <AmiBlitz3.ab2@10360>   MOVE.l D0,tstsize1c
000261CE <AmiBlitz3.ab2@10361>   MOVE.l D0,tstsize2c
000261D4 <AmiBlitz3.ab2@10362>   MOVE.l #hunkbegin2,d2
000261D8 <AmiBlitz3.ab2@10363> BRA 'l100
000261E2 <AmiBlitz3.ab2@10366>   CMP.l #-1,bssstart
000261E6 <AmiBlitz3.ab2@10367>   BEQ 'l10
000261F0 <AmiBlitz3.ab2@10368>   MOVE.l #1,bssnum
000261F2 <AmiBlitz3.ab2@10369>   MOVEQ.l #$24,D3
000261F8 <AmiBlitz3.ab2@10370>   MOVE.l bsssize,d2
000261FA <AmiBlitz3.ab2@10371>   ADDQ.l #3,d2
000261FC <AmiBlitz3.ab2@10372>   ASR.l #2,d2
00026202 <AmiBlitz3.ab2@10373>   MOVE.l d2,hunkend+8
00026208 <AmiBlitz3.ab2@10374>   MOVE.l d2,bsssize2
0002620E <AmiBlitz3.ab2@10375>   MOVE.l D0,tstsize1b
00026214 <AmiBlitz3.ab2@10376>   MOVE.l D0,tstsize2b
0002621A <AmiBlitz3.ab2@10377>   MOVE.l #hunkbegin,d2
00026224 <AmiBlitz3.ab2@10380>   CMP.l #-1,chipstart
00026228 <AmiBlitz3.ab2@10381>   BEQ 'l100
00026232 <AmiBlitz3.ab2@10382>   MOVE.l #1,chipnum
00026234 <AmiBlitz3.ab2@10383>   MOVEQ.l #$24,D3
0002623A <AmiBlitz3.ab2@10384>   MOVE.l chipsize,d2
0002623C <AmiBlitz3.ab2@10385>   ADDQ.l #3,d2
0002623E <AmiBlitz3.ab2@10386>   ASR.l #2,d2
00026244 <AmiBlitz3.ab2@10387>   MOVE.l d2,hunkend2+8
0002624A <AmiBlitz3.ab2@10388>   MOVE.l d2,bsssize2
00026254 <AmiBlitz3.ab2@10389>   ADD.l #$40000000,bsssize2
0002625A <AmiBlitz3.ab2@10390>   MOVE.l D0,tstsize1b
00026260 <AmiBlitz3.ab2@10391>   MOVE.l D0,tstsize2b
00026266 <AmiBlitz3.ab2@10392>   MOVE.l #hunkbegin,d2
0002626A <AmiBlitz3.ab2@10395>    BSR.w mywrite
00026270 <AmiBlitz3.ab2@10396>   MOVE.l destbufferstart,D2
00026276 <AmiBlitz3.ab2@10397>   ADD.l noinits,D2
0002627C <AmiBlitz3.ab2@10398>   MOVE.l objlen,D3
00026282 <AmiBlitz3.ab2@10399>   SUB.l #moremem,d3
00026288 <AmiBlitz3.ab2@10400>   SUB.l noinits,D3
00026292 <AmiBlitz3.ab2@10401>   CMP.l #-1,bssstart
00026296 <AmiBlitz3.ab2@10402>   BNE 'l40
000262A0 <AmiBlitz3.ab2@10403>   CMP.l #-1,chipstart
000262A4 <AmiBlitz3.ab2@10404>   BNE 'l40
000262A8 <AmiBlitz3.ab2@10405> BRA 'l41
000262AE <AmiBlitz3.ab2@10408>   MOVE.l codeend,d1
000262B0 <AmiBlitz3.ab2@10409>     SUB.l d2,d1
000262B2 <AmiBlitz3.ab2@10410>     MOVE.l d1,d3
000262B8 <AmiBlitz3.ab2@10411>   SUB.l bsssize,d3
000262BE <AmiBlitz3.ab2@10412>   SUB.l chipsize,d3
000262C0 <AmiBlitz3.ab2@10413>   MOVE.l D7,D1
000262C4 <AmiBlitz3.ab2@10414>   BSR.w mywrite
000262CA <AmiBlitz3.ab2@10415>   MOVE.l objlen,D3
000262D0 <AmiBlitz3.ab2@10416>   SUB.l #moremem,d3
000262D6 <AmiBlitz3.ab2@10417>   SUB.l noinits,D3
000262D8 <AmiBlitz3.ab2@10418>   MOVE.l d3,d1
000262DE <AmiBlitz3.ab2@10419>   MOVE.l destbufferstart,D2
000262E4 <AmiBlitz3.ab2@10420>   ADD.l noinits,D2
000262E6 <AmiBlitz3.ab2@10421>   ADD.l d2,d1
000262EC <AmiBlitz3.ab2@10422>   SUB.l codeend,d1
000262EE <AmiBlitz3.ab2@10423>   MOVE.l d1,d3
000262F4 <AmiBlitz3.ab2@10424>   MOVE.l codeend,d2
000262F6 <AmiBlitz3.ab2@10427>   MOVE.l d2,d1
000262F8 <AmiBlitz3.ab2@10428>   ADD.l d3,d1
000262FA <AmiBlitz3.ab2@10429>   ADDQ.l #3,D1
00026300 <AmiBlitz3.ab2@10430>   ANDI.l #$FFFFFFFC,D1
00026302 <AmiBlitz3.ab2@10431>   SUB.l d2,d1
00026304 <AmiBlitz3.ab2@10432>   MOVE.l d1,d3
00026306 <AmiBlitz3.ab2@10433>   MOVE.l D7,D1
0002630A <AmiBlitz3.ab2@10434>    BSR.w mywrite
00026314 <AmiBlitz3.ab2@10435>   MOVE.l hunkoffsetcounter,tstsize3
00026318 <AmiBlitz3.ab2@10436>    BEQ.w JL_0_7646
0002631A <AmiBlitz3.ab2@10437>   MOVE.l D7,D1
00026320 <AmiBlitz3.ab2@10438>   MOVE.l #tstend,D2
00026322 <AmiBlitz3.ab2@10439>   MOVEQ.l #$04,D3
00026326 <AmiBlitz3.ab2@10440>    BSR.w mywrite
0002632C <AmiBlitz3.ab2@10441>    MOVEA.l _execbase,A6
00026332 <AmiBlitz3.ab2@10442>    MOVE.l hunkoffsetcounter,d0
00026334 <AmiBlitz3.ab2@10443>    ASL.l #2,d0
0002633A <AmiBlitz3.ab2@10444>    ADD.l #12,d0
0002633C <AmiBlitz3.ab2@10445>    MOVEQ #0,d1
00026340 <AmiBlitz3.ab2@10446>    JSR _AllocMem(a6)
00026342 <AmiBlitz3.ab2@10447>    TST.l d0
00026346 <AmiBlitz3.ab2@10448>    BEQ nomem
0002634C <AmiBlitz3.ab2@10449>    MOVE.l noinits,D4
0002634E <AmiBlitz3.ab2@10450>    MOVE.l d5,-(a7)
00026350 <AmiBlitz3.ab2@10451>    MOVE.l d0,d5
00026352 <AmiBlitz3.ab2@10452>    MOVE.l d0,a1
00026358 <AmiBlitz3.ab2@10453>    MOVEA.l hunkoffsetbase,A2
00026360 <AmiBlitz3.ab2@10454>    MOVE.b #0,newhunk
00026364 <AmiBlitz3.ab2@10457>   CMPA.w #$0,A2
00026368 <AmiBlitz3.ab2@10458>    BEQ.w savehunk
0002636E <AmiBlitz3.ab2@10459>   MOVE.l destbufferstart,D2
00026374 <AmiBlitz3.ab2@10460>   ADD.l noinits,D2
00026378 <AmiBlitz3.ab2@10461>   MOVE.l  $4(A2),d1
0002637C <AmiBlitz3.ab2@10462>   BTST #31,d1
00026380 <AmiBlitz3.ab2@10463>   BEQ 'lh1
00026388 <AmiBlitz3.ab2@10464>   MOVE.b #1,newhunk
0002638C <AmiBlitz3.ab2@10465> BRA 'lh3
00026390 <AmiBlitz3.ab2@10468>   BTST #30,d1
00026394 <AmiBlitz3.ab2@10469>   BEQ 'lh2
0002639C <AmiBlitz3.ab2@10470>   MOVE.b #1,newhunk
000263A0 <AmiBlitz3.ab2@10471> BRA 'lh3
000263A2 <AmiBlitz3.ab2@10474>   ADD.l d1,d2
000263A8 <AmiBlitz3.ab2@10475>   CMP.l chipend,d2
000263AC <AmiBlitz3.ab2@10476>   BLT 'l100
000263B2 <AmiBlitz3.ab2@10477>   SUB.l chipsize,d1
000263B8 <AmiBlitz3.ab2@10480>   CMP.l bssend,d2
000263BC <AmiBlitz3.ab2@10481>   BLT 'l101
000263C2 <AmiBlitz3.ab2@10482>   SUB.l bsssize,d1
000263C4 <AmiBlitz3.ab2@10485>   MOVE.l d1,(a1)
000263C6 <AmiBlitz3.ab2@10486>   SUB.l D4,(A1)+
000263C8 <AmiBlitz3.ab2@10489>   MOVEA.l (A2),A2
000263CC <AmiBlitz3.ab2@10490> BRA.w menu_createresidentfile__oloopb
000263CE <AmiBlitz3.ab2@10494>   MOVE.l D7,D1
000263D4 <AmiBlitz3.ab2@10495>   MOVEA.l _dosbase,A6
000263DE <AmiBlitz3.ab2@10496>   MOVE.l hunkoffsetnum,tstsize3
000263E2 <AmiBlitz3.ab2@10497>   BEQ 'ln1
000263E8 <AmiBlitz3.ab2@10498>   MOVE.l #tstend+4,d2
000263EA <AmiBlitz3.ab2@10499>     MOVEQ #8,d3
000263EE <AmiBlitz3.ab2@10500>    JSR _Write(A6)
000263F0 <AmiBlitz3.ab2@10501>   MOVE.l d7,d1
000263F6 <AmiBlitz3.ab2@10502>   MOVE.l hunkoffsetnum,d3
000263F8 <AmiBlitz3.ab2@10503>   ASL.l #2,d3
000263FA <AmiBlitz3.ab2@10504>   MOVE.l d5,D2
000263FE <AmiBlitz3.ab2@10505>   JSR _Write(a6)
00026404 <AmiBlitz3.ab2@10508>   TST.b newhunk
00026408 <AmiBlitz3.ab2@10509>   BEQ 'l10
0002640E <AmiBlitz3.ab2@10510>   MOVEA.l hunkoffsetbase,A2
00026410 <AmiBlitz3.ab2@10511>   MOVE.l d5,a0
00026412 <AmiBlitz3.ab2@10512>   ADDQ #8,a0
0002641A <AmiBlitz3.ab2@10513>   MOVE.l bssnum,-4(a0)
0002641C <AmiBlitz3.ab2@10514>   MOVEQ #0,d6
00026420 <AmiBlitz3.ab2@10517>   CMPA.w #$0,A2
00026424 <AmiBlitz3.ab2@10518>    BEQ.w 'lh3
0002642A <AmiBlitz3.ab2@10519>   MOVE.l destbufferstart,D2
00026430 <AmiBlitz3.ab2@10520>   ADD.l noinits,D2
00026434 <AmiBlitz3.ab2@10521>   MOVE.l  $4(A2),d1
00026438 <AmiBlitz3.ab2@10522>   BTST #30,d1
0002643C <AmiBlitz3.ab2@10523>   BEQ 'lh1
00026440 <AmiBlitz3.ab2@10524>   BCLR #30,d1
00026442 <AmiBlitz3.ab2@10525>   MOVE.l d1,(a0)
00026444 <AmiBlitz3.ab2@10526>   SUB.l D4,(A0)+
00026446 <AmiBlitz3.ab2@10527>   ADDQ.l #1,d6
00026448 <AmiBlitz3.ab2@10530>   MOVE.l (a2),a2
0002644C <AmiBlitz3.ab2@10531> BRA 'lh2
0002644E <AmiBlitz3.ab2@10534>   TST.l d6
00026452 <AmiBlitz3.ab2@10535>     BEQ 'lh10
00026454 <AmiBlitz3.ab2@10536>     MOVE.l d5,a0
00026456 <AmiBlitz3.ab2@10537>     MOVE.l d6,(a0)
00026458 <AmiBlitz3.ab2@10538>     MOVE.l d7,d1
0002645A <AmiBlitz3.ab2@10539>     MOVE.l d5,d2
0002645C <AmiBlitz3.ab2@10540>     MOVE.l d6,d3
0002645E <AmiBlitz3.ab2@10541>     ASL.l #2,d3
00026460 <AmiBlitz3.ab2@10542>     ADDQ.l #8,d3
00026464 <AmiBlitz3.ab2@10543>     BSR.w mywrite
0002646A <AmiBlitz3.ab2@10546>   MOVEA.l hunkoffsetbase,A2
0002646C <AmiBlitz3.ab2@10547>   MOVE.l d5,a0
0002646E <AmiBlitz3.ab2@10548>   ADDQ #8,a0
00026476 <AmiBlitz3.ab2@10549>   MOVE.l chipnum,-4(a0)
00026478 <AmiBlitz3.ab2@10550>   MOVEQ #0,d6
0002647C <AmiBlitz3.ab2@10553>   CMPA.w #$0,A2
00026480 <AmiBlitz3.ab2@10554>    BEQ.w 'lh30
00026486 <AmiBlitz3.ab2@10555>   MOVE.l destbufferstart,D2
0002648C <AmiBlitz3.ab2@10556>   ADD.l noinits,D2
00026490 <AmiBlitz3.ab2@10557>   MOVE.l  $4(A2),d1
00026494 <AmiBlitz3.ab2@10558>   BTST #31,d1
00026498 <AmiBlitz3.ab2@10559>   BEQ 'lh11
0002649C <AmiBlitz3.ab2@10560>   BCLR #31,d1
0002649E <AmiBlitz3.ab2@10561>   MOVE.l d1,(a0)
000264A0 <AmiBlitz3.ab2@10562>   SUB.l D4,(A0)+
000264A2 <AmiBlitz3.ab2@10563>   ADDQ.l #1,d6
000264A4 <AmiBlitz3.ab2@10566>   MOVE.l (a2),a2
000264A8 <AmiBlitz3.ab2@10567> BRA 'lh20
000264AA <AmiBlitz3.ab2@10570>   TST.l d6
000264AE <AmiBlitz3.ab2@10571>     BEQ 'l10
000264B0 <AmiBlitz3.ab2@10572>     MOVE.l d5,a0
000264B2 <AmiBlitz3.ab2@10573>     MOVE.l d6,(a0)
000264B4 <AmiBlitz3.ab2@10574>     MOVE.l d7,d1
000264B6 <AmiBlitz3.ab2@10575>     MOVE.l d5,d2
000264B8 <AmiBlitz3.ab2@10576>     MOVE.l d6,d3
000264BA <AmiBlitz3.ab2@10577>     ASL.l #2,d3
000264BC <AmiBlitz3.ab2@10578>     ADDQ.l #8,d3
000264C0 <AmiBlitz3.ab2@10579>     BSR.w mywrite
000264C6 <AmiBlitz3.ab2@10583>    MOVEA.l _execbase,A6
000264CC <AmiBlitz3.ab2@10584>    MOVE.l hunkoffsetcounter,d0
000264CE <AmiBlitz3.ab2@10585>    ASL.l #2,d0
000264D4 <AmiBlitz3.ab2@10586>    ADD.l #12,d0
000264D6 <AmiBlitz3.ab2@10587>    MOVE.l d5,a1
000264DA <AmiBlitz3.ab2@10588>    JSR _FreeMem(a6)
000264E0 <AmiBlitz3.ab2@10589>    MOVEA.l _dosbase,A6
000264E2 <AmiBlitz3.ab2@10590>    MOVE.l (a7)+,d5
000264E6 <AmiBlitz3.ab2@10591> BRA JL_0_7632
000264EC <AmiBlitz3.ab2@10595>   MOVEA.l hunkoffsetbase,A2
000264F2 <AmiBlitz3.ab2@10596>   MOVE.l noinits,D4
000264F6 <AmiBlitz3.ab2@10599>   CMPA.w #$0,A2                                            ;write hunkoffsets
000264FA <AmiBlitz3.ab2@10600>   BEQ.w JL_0_7632
000264FE <AmiBlitz3.ab2@10601>   LEA $4(A2),A1
00026500 <AmiBlitz3.ab2@10602>   SUB.l D4,(A1)
00026502 <AmiBlitz3.ab2@10603>   MOVE.l D7,D1
00026504 <AmiBlitz3.ab2@10604>   MOVE.l A1,D2
00026506 <AmiBlitz3.ab2@10605>   MOVEQ.l #$04,D3
0002650A <AmiBlitz3.ab2@10606>   BSR.w mywrite
0002650E <AmiBlitz3.ab2@10607>   ADD.l D4,$4(A2)
00026510 <AmiBlitz3.ab2@10608>   MOVEA.l (A2),A2
00026514 <AmiBlitz3.ab2@10609> BRA.w JL_0_7610
0002651A <AmiBlitz3.ab2@10612>   CLR.l tstsize3
0002651C <AmiBlitz3.ab2@10613>   MOVE.l D7,D1
00026522 <AmiBlitz3.ab2@10614>   MOVE.l #tstsize3,D2
00026524 <AmiBlitz3.ab2@10615>   MOVEQ.l #$04,D3
00026528 <AmiBlitz3.ab2@10616>    BSR.w mywrite
00026530 <AmiBlitz3.ab2@10619>   BTST #$7,link_debuginfo
00026534 <AmiBlitz3.ab2@10620>    BEQ.w JL_0_7706
0002653A <AmiBlitz3.ab2@10621>   MOVE.l #sysdebug,D2                                      ;debughunks
0002653C <AmiBlitz3.ab2@10622>   MOVEQ.l #$04,D3
0002653E <AmiBlitz3.ab2@10623>   MOVE.l D7,D1
00026542 <AmiBlitz3.ab2@10624>    BSR.w mywrite
00026548 <AmiBlitz3.ab2@10625>   MOVEA.l labelbase,A2
0002654C <AmiBlitz3.ab2@10628>   CMPA.w #$0,A2
00026550 <AmiBlitz3.ab2@10629>    BEQ.w JL_0_76F8
00026556 <AmiBlitz3.ab2@10630>   BTST #$0,$7(A2)
0002655A <AmiBlitz3.ab2@10631>    BEQ.w JL_0_7682
00026562 <AmiBlitz3.ab2@10632>   CMPI.l #$1,$4(A2)
00026566 <AmiBlitz3.ab2@10634>   BRA.w JL_0_76F2                                            ;only addr labels
00026568 <AmiBlitz3.ab2@10636>   MOVEQ.l #$00,D4
0002656C <AmiBlitz3.ab2@10637>   MOVE.b $12(A2),D4
00026570 <AmiBlitz3.ab2@10638>   SUBI.w #$13,D4
00026572 <AmiBlitz3.ab2@10639>   ADDQ.w #2,D4
00026576 <AmiBlitz3.ab2@10640>   ANDI.w #$FFFC,D4
00026578 <AmiBlitz3.ab2@10641>   MOVE.l D4,D5
0002657A <AmiBlitz3.ab2@10642>   LSR.w #2,D5
00026580 <AmiBlitz3.ab2@10643>   MOVE.l D5,temp1
00026582 <AmiBlitz3.ab2@10644>   LSL.w #2,D5
00026588 <AmiBlitz3.ab2@10645>   MOVE.l #temp1,a1
0002658E <AmiBlitz3.ab2@10647>   LEA debugstore,a0
00026590 <AmiBlitz3.ab2@10648>   MOVE.l (a1),(a0)+
00026592 <AmiBlitz3.ab2@10649>   MOVEQ.l #$04,D3
00026596 <AmiBlitz3.ab2@10652>   LEA $13(A2),A1
00026598 <AmiBlitz3.ab2@10653>   MOVE.l d4,d1
0002659A <AmiBlitz3.ab2@10654>   SUBQ.l #1,d1
0002659C <AmiBlitz3.ab2@10657>     MOVE.b (a1)+,d0
000265A0 <AmiBlitz3.ab2@10658>     BEQ 'l21
000265A4 <AmiBlitz3.ab2@10659>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000265A8 <AmiBlitz3.ab2@10660>     BNE 'ok
000265AC <AmiBlitz3.ab2@10661>     MOVE.b #"_",d0
000265AE <AmiBlitz3.ab2@10662> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
000265B2 <AmiBlitz3.ab2@10663>   DBF d1,'l10
000265B6 <AmiBlitz3.ab2@10665> BRA 'l22
000265B8 <AmiBlitz3.ab2@10668>       CLR.b (a0)+
000265BC <AmiBlitz3.ab2@10669>   DBF d1,'l21
000265BE <AmiBlitz3.ab2@10672>   ADD.l d4,d3
000265C0 <AmiBlitz3.ab2@10677>   SUB.l D4,D5
000265C4 <AmiBlitz3.ab2@10678>    BEQ.w JL_0_76CE
000265CA <AmiBlitz3.ab2@10679>   MOVE.l #zero,a1
000265CC <AmiBlitz3.ab2@10681>   MOVE.l (a1),(a0)+
000265CE <AmiBlitz3.ab2@10683>   ADD.l d5,d3
000265D2 <AmiBlitz3.ab2@10688>   MOVE.l $8(A2),D2
000265D8 <AmiBlitz3.ab2@10689>   SUB.l destbufferstart,D2
000265DE <AmiBlitz3.ab2@10690>   SUB.l noinits,D2
000265E4 <AmiBlitz3.ab2@10691>   MOVE.l D2,temp1
000265EA <AmiBlitz3.ab2@10692>   MOVE.l #temp1,a1
000265EC <AmiBlitz3.ab2@10694>   MOVE.l (a1),(a0)+
000265F2 <AmiBlitz3.ab2@10695>   ADD.l #4,d3
000265F8 <AmiBlitz3.ab2@10696>   LEA debugstore,a0
000265FA <AmiBlitz3.ab2@10697>   MOVE.l a0,d2
000265FC <AmiBlitz3.ab2@10699>   MOVE.l D7,D1
00026600 <AmiBlitz3.ab2@10700>   BSR.w mywrite
00026602 <AmiBlitz3.ab2@10703>   MOVEA.l (A2),A2
00026606 <AmiBlitz3.ab2@10704> BRA.w JL_0_7664
0002660C <AmiBlitz3.ab2@10708>   MOVE.l #zero,D2
0002660E <AmiBlitz3.ab2@10709>   MOVEQ.l #$04,D3
00026610 <AmiBlitz3.ab2@10710>   MOVE.l D7,D1
00026614 <AmiBlitz3.ab2@10711>   BSR.w mywrite
00026616 <AmiBlitz3.ab2@10714>   MOVE.l D7,D1
0002661C <AmiBlitz3.ab2@10715>   MOVE.l #tstdone,D2                                      ;hunkend
0002661E <AmiBlitz3.ab2@10716>   MOVEQ.l #$04,D3
00026628 <AmiBlitz3.ab2@10717>   CMPI.l #-1,bssstart
0002662C <AmiBlitz3.ab2@10718>   BEQ 'l10
0002662E <AmiBlitz3.ab2@10719>   MOVEQ #16,d3
00026634 <AmiBlitz3.ab2@10720>   MOVE.l #hunkend,d2
0002663E <AmiBlitz3.ab2@10721>   CMPI.l #-1,chipstart
00026642 <AmiBlitz3.ab2@10722>   BEQ 'l10
00026644 <AmiBlitz3.ab2@10723>   MOVE.l d7,d1
00026646 <AmiBlitz3.ab2@10724>   MOVEQ #12,d3
0002664A <AmiBlitz3.ab2@10725>   BSR.w mywrite
00026654 <AmiBlitz3.ab2@10728>   CMPI.l #-1,chipstart
00026658 <AmiBlitz3.ab2@10729>   BEQ 'l11
0002665A <AmiBlitz3.ab2@10730>   MOVEQ #12,d3
00026660 <AmiBlitz3.ab2@10731>   MOVE.l #hunkend2,d2
00026662 <AmiBlitz3.ab2@10732>   MOVE.l d7,d1
00026666 <AmiBlitz3.ab2@10733>   BSR.w mywrite
00026668 <AmiBlitz3.ab2@10734>   MOVE.l d7,d1
0002666E <AmiBlitz3.ab2@10735>   MOVE.l chipstart,d2
00026674 <AmiBlitz3.ab2@10736>   MOVE.l chipsize,d3
00026678 <AmiBlitz3.ab2@10737>   BSR.w mywrite
0002667A <AmiBlitz3.ab2@10738>   MOVEQ #4,d3
00026680 <AmiBlitz3.ab2@10739>   MOVE.l #hunkend,d2
00026682 <AmiBlitz3.ab2@10740>   MOVE.l d7,d1
00026686 <AmiBlitz3.ab2@10743>   BSR.w mywrite
00026688 <AmiBlitz3.ab2@10744>   MOVE.l D7,D1
0002668E <AmiBlitz3.ab2@10745>   MOVEA.l _dosbase,A6
00026692 <AmiBlitz3.ab2@10746>   JSR _Close(A6)
0002669A <AmiBlitz3.ab2@10751>   BTST #$7,create_iconfile
0002669E <AmiBlitz3.ab2@10752>    BEQ.w skip_createicon
000266A4 <AmiBlitz3.ab2@10754>   MOVEA.l ptr_newexefilename,A0
000266A6 <AmiBlitz3.ab2@10757>     TST.b (A0)+
000266AA <AmiBlitz3.ab2@10758>   BNE.w JL_0_772C
000266AC <AmiBlitz3.ab2@10759>   SUBQ.w #1,A0
000266AE <AmiBlitz3.ab2@10760>   MOVE.l A0,-(A7)
000266B4 <AmiBlitz3.ab2@10761>   LEA str_infoextention2,A1
000266B6 <AmiBlitz3.ab2@10764>     MOVE.b (A1)+,(A0)+
000266BA <AmiBlitz3.ab2@10765>   BNE.w JL_0_773A
000266C0 <AmiBlitz3.ab2@10767>   MOVE.l ptr_newexefilename,D1
000266C2 <AmiBlitz3.ab2@10768>   MOVEQ.l #-$02,D2
000266C8 <AmiBlitz3.ab2@10769>   MOVEA.l _dosbase,A6
000266CC <AmiBlitz3.ab2@10770>   JSR _Lock(A6)
000266CE <AmiBlitz3.ab2@10771>   MOVE.l D0,D1
000266D2 <AmiBlitz3.ab2@10772>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
000266D6 <AmiBlitz3.ab2@10773>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
000266DA <AmiBlitz3.ab2@10774> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
000266E0 <AmiBlitz3.ab2@10777>   MOVE.l ptr_newexefilename,D1
000266E6 <AmiBlitz3.ab2@10778>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000266EC <AmiBlitz3.ab2@10779>   MOVEA.l _dosbase,A6
000266F0 <AmiBlitz3.ab2@10780>    JSR _Open(A6)
000266F2 <AmiBlitz3.ab2@10781>   MOVE.l D0,D7
000266F6 <AmiBlitz3.ab2@10782>    BEQ.w JL_0_7788
000266FC <AmiBlitz3.ab2@10783>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00026702 <AmiBlitz3.ab2@10784>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00026704 <AmiBlitz3.ab2@10785>   MOVE.l D7,D1
0002670A <AmiBlitz3.ab2@10786>   MOVEA.l _dosbase,A6
0002670E <AmiBlitz3.ab2@10787>   JSR _Write(A6)
00026710 <AmiBlitz3.ab2@10788>   MOVE.l D7,D1
00026714 <AmiBlitz3.ab2@10789>   JSR _Close(A6)
00026716 <AmiBlitz3.ab2@10792>   MOVEA.l (A7)+,A0
00026718 <AmiBlitz3.ab2@10793>   CLR.b (A0)
0002671E <AmiBlitz3.ab2@10798>   TST.b exdebug
00026722 <AmiBlitz3.ab2@10799>    BEQ JL_0_757Cb
00026728 <AmiBlitz3.ab2@10800>   MOVE.w dontwrite,D1
0002672C <AmiBlitz3.ab2@10801>   BNE.w JL_0_757Cb
00026732 <AmiBlitz3.ab2@10802>   MOVE.l chipsize,d5
00026738 <AmiBlitz3.ab2@10803>   MOVE.l bsssize,d3
0002673E <AmiBlitz3.ab2@10804>   MOVE.l chipstart,d7
00026744 <AmiBlitz3.ab2@10805>   MOVE.l bssstart,d6
0002674A <AmiBlitz3.ab2@10806>   MOVEA.l hunkoffsetbase,A2
00026750 <AmiBlitz3.ab2@10807>   MOVEA.l destbufferstart,A1
00026752 <AmiBlitz3.ab2@10808>   MOVE.l A1,D2
00026758 <AmiBlitz3.ab2@10809>   ADD.l noinits,D2
0002675E <AmiBlitz3.ab2@10810>   CLR.l hunkoffsetnum
00026762 <AmiBlitz3.ab2@10813>   CMPA.w #$0,A2
00026766 <AmiBlitz3.ab2@10814>    BEQ.w JL_0_757Cb
0002676A <AmiBlitz3.ab2@10815>   MOVE.l $4(A2),D0
0002676E <AmiBlitz3.ab2@10816>    LEA $0(a1,d0.l),a0
00026770 <AmiBlitz3.ab2@10817>    MOVE.l (a0),d1
00026772 <AmiBlitz3.ab2@10818>   TST.l d1
00026776 <AmiBlitz3.ab2@10819>    BMI.w 'lm1
0002677E <AmiBlitz3.ab2@10820>   MOVE.b #0,newhunk
00026788 <AmiBlitz3.ab2@10821>   CMP.l #-1,chipstart
0002678C <AmiBlitz3.ab2@10822>   BEQ 'l10
00026792 <AmiBlitz3.ab2@10823>   CMP.l chipstart,d1
00026796 <AmiBlitz3.ab2@10824>   BLT 'l10
0002679E <AmiBlitz3.ab2@10825>   MOVE.b #1,newhunk
000267A4 <AmiBlitz3.ab2@10826>   CMP.l chipend,d1
000267A8 <AmiBlitz3.ab2@10827>   BGE 'l110
000267AA <AmiBlitz3.ab2@10828>   ADD.l d7,(a0)
000267B2 <AmiBlitz3.ab2@10829>   ADD.l #$80000000,4(a2)
000267B6 <AmiBlitz3.ab2@10830> BRA JL_0_7576b
000267BA <AmiBlitz3.ab2@10833>   ADD.l d5,0(a0)
000267C4 <AmiBlitz3.ab2@10836>   CMP.l #-1,bssstart
000267C8 <AmiBlitz3.ab2@10837>     BEQ 'l11
000267CE <AmiBlitz3.ab2@10838>   CMP.l bssstart,d1
000267D2 <AmiBlitz3.ab2@10839>   BLT 'l11
000267D8 <AmiBlitz3.ab2@10840>   CMP.l bssend,d1
000267DC <AmiBlitz3.ab2@10841>   BGE 'l111
000267E2 <AmiBlitz3.ab2@10842>   TST.b newhunk
000267E6 <AmiBlitz3.ab2@10843>   BEQ 'ln1
000267E8 <AmiBlitz3.ab2@10844>   ADD.l d5,(a0)
000267EA <AmiBlitz3.ab2@10847>   ADD.l d6,(a0)
000267F2 <AmiBlitz3.ab2@10848>   ADD.l #$40000000,4(a2)
000267F6 <AmiBlitz3.ab2@10849> BRA JL_0_7576b
000267FA <AmiBlitz3.ab2@10852>   ADD.l d3,0(a0)
000267FC <AmiBlitz3.ab2@10855>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00026802 <AmiBlitz3.ab2@10858>   ADDQ.l #1,hunkoffsetnum
00026804 <AmiBlitz3.ab2@10861>   MOVEA.l (A2),A2
00026808 <AmiBlitz3.ab2@10862> BRA.w JL_0_755Eb
0002680E <AmiBlitz3.ab2@10865>   JSR call_setpointernormal
00026812 <AmiBlitz3.ab2@10866>   MOVEM.l (a7)+,d2-d7/a2-a6
00026814 <AmiBlitz3.ab2@10868> RTS
00026816 <AmiBlitz3.ab2@10872>   MOVE.l D2,-(A7)
0002681C <AmiBlitz3.ab2@10873>   MOVE.l destpointer,D2
00026822 <AmiBlitz3.ab2@10874>   SUB.l destbufferstart,D2
00026826 <AmiBlitz3.ab2@10875>   BSR.w addhunkoffset
00026828 <AmiBlitz3.ab2@10876>   MOVE.l (A7)+,D2
0002682A <AmiBlitz3.ab2@10877> RTS
0002682E <AmiBlitz3.ab2@10881>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00026834 <AmiBlitz3.ab2@10882>   TST.b nohunkoffset
00026838 <AmiBlitz3.ab2@10883>   BNE 'l10
0002683A <AmiBlitz3.ab2@10884>   MOVEQ.l #$8,D0
0002683C <AmiBlitz3.ab2@10885>   MOVEQ.l #$01,D1
00026842 <AmiBlitz3.ab2@10886>   MOVEA.l _execbase,A6
00026848 <AmiBlitz3.ab2@10887>   MOVE.l mempool2,a0
0002684C <AmiBlitz3.ab2@10888>   JSR _AllocPooled(a6)
00026852 <AmiBlitz3.ab2@10890>   ADDQ.l #1,hunkoffsetcounter
00026854 <AmiBlitz3.ab2@10891>   MOVEA.l D0,A0
0002685A <AmiBlitz3.ab2@10892>   MOVE.l hunkoffsetbase,(A0)
00026860 <AmiBlitz3.ab2@10893>   MOVE.l A0,hunkoffsetbase
00026864 <AmiBlitz3.ab2@10894>   MOVE.l D2,$4(A0)
00026868 <AmiBlitz3.ab2@10897>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002686A <AmiBlitz3.ab2@10898> RTS
00026870 <AmiBlitz3.ab2@10902>   CLR.l hunkoffsetbase
00026876 <AmiBlitz3.ab2@10903>   MOVEA.l _execbase,A6
0002687C <AmiBlitz3.ab2@10904>   MOVEA.l hunkoffsetbase,A2
00026880 <AmiBlitz3.ab2@10907>     CMPA.w #$0,A2
00026884 <AmiBlitz3.ab2@10908>      BEQ.w JL_0_7988
00026886 <AmiBlitz3.ab2@10909>     MOVEA.l A2,A1
00026888 <AmiBlitz3.ab2@10910>     MOVEQ.l #$08,D0
0002688A <AmiBlitz3.ab2@10911>     MOVEA.l (A2),A2
00026890 <AmiBlitz3.ab2@10912>     MOVE.l mempool2,a0
00026894 <AmiBlitz3.ab2@10913>     JSR _FreePooled(A6)
00026898 <AmiBlitz3.ab2@10914> BRA.w JL_0_7972
0002689E <AmiBlitz3.ab2@10917>   CLR.l hunkoffsetcounter
000268A0 <AmiBlitz3.ab2@10918> RTS
000268B8 <AmiBlitz3.ab2@10921> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
000268BC <AmiBlitz3.ab2@10922> cmakea5:    Ds.l 1
000268BE <AmiBlitz3.ab2@10923> cmake:      Ds.w 1
0002693E <AmiBlitz3.ab2@10924> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00026944 <AmiBlitz3.ab2@10928>   MOVE.l A5,lastsourcepos
0002694E <AmiBlitz3.ab2@10929>   MOVE.w instringon,oldqflag
00026950 <AmiBlitz3.ab2@10933>   MOVEQ.l #$00,D0
00026952 <AmiBlitz3.ab2@10934>   MOVE.b (A5)+,D0
00026956 <AmiBlitz3.ab2@10935>    BEQ getcharb__donea
0002695A <AmiBlitz3.ab2@10936>   BPL getcharb__stuffa
0002695C <AmiBlitz3.ab2@10937>   LSL.l #8,D0
0002695E <AmiBlitz3.ab2@10938>   MOVE.b (A5)+,D0
00026960 <AmiBlitz3.ab2@10939>   MOVE.l a1,-(a7)
00026966 <AmiBlitz3.ab2@10940>   LEA replacedat,a1
0002696A <AmiBlitz3.ab2@10941>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
0002696E <AmiBlitz3.ab2@10942>   BEQ getchar__l10
00026972 <AmiBlitz3.ab2@10943>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00026974 <AmiBlitz3.ab2@10947>   MOVE.l (a7)+,a1
00026978 <AmiBlitz3.ab2@10948> BRA getchar__weiter
0002697C <AmiBlitz3.ab2@10951>   CMP.w #$22,D0
00026980 <AmiBlitz3.ab2@10952>    BEQ.b swapquotea
00026984 <AmiBlitz3.ab2@10953>   CMP.w #$3B,D0
00026988 <AmiBlitz3.ab2@10954>    BNE.b getcharb__donea
0002698E <AmiBlitz3.ab2@10955>   TST.w instringon
00026992 <AmiBlitz3.ab2@10956>    BNE.b getcharb__donea
00026994 <AmiBlitz3.ab2@10959>   MOVE.b (A5)+,D0
00026998 <AmiBlitz3.ab2@10960>              BEQ getchar__l1
0002699C <AmiBlitz3.ab2@10961>              CMP.b #":",d0
000269A0 <AmiBlitz3.ab2@10962>              BNE getcharb__loopa                                ;:@
000269A4 <AmiBlitz3.ab2@10963>              CMP.b #"@",(a5)
000269A8 <AmiBlitz3.ab2@10964>              BNE getcharb__loopa
000269AA <AmiBlitz3.ab2@10965>              ADDQ #1,a5
000269B0 <AmiBlitz3.ab2@10968>   MOVE.w D0,lastchar
000269B4 <AmiBlitz3.ab2@10971> BRA.s getchar__weiter
000269BA <AmiBlitz3.ab2@10974>   NOT.w instringon
000269C0 <AmiBlitz3.ab2@10977>    MOVE.w D0,lastchar
000269C4 <AmiBlitz3.ab2@10978>    BEQ.w getchar__done
000269C8 <AmiBlitz3.ab2@10979>    BPL.w getchar__done2
000269CC <AmiBlitz3.ab2@10980>   CMP.w #-$7FE4,D0                                         ;cnif
000269D0 <AmiBlitz3.ab2@10981>    BEQ.w getchar__cnif
000269D4 <AmiBlitz3.ab2@10982>   CMP.w #-$7FE3,D0                                         ;csif
000269D8 <AmiBlitz3.ab2@10983>    BEQ.w getchar__csif
000269DC <AmiBlitz3.ab2@10984>   CMP.w #-$7FE2,D0                                         ;celse
000269E0 <AmiBlitz3.ab2@10985>    BEQ.w getchar__celse
000269E4 <AmiBlitz3.ab2@10986>   CMP.w #-$7FE1,D0                                         ;cend
000269E8 <AmiBlitz3.ab2@10987>    BEQ.w getchar__cend
000269EE <AmiBlitz3.ab2@10990>   TST.w skipcode
000269F2 <AmiBlitz3.ab2@10991>    BEQ.w getchar
000269F6 <AmiBlitz3.ab2@10992>   CMP.w #$7E,D0
000269FA <AmiBlitz3.ab2@10993>    BEQ.w getchar__cmake                                         ;tilde
000269FE <AmiBlitz3.ab2@10994>   CMP.w #$2,D0
00026A02 <AmiBlitz3.ab2@10995>    BNE.w getchar__notunpath
00026A08 <AmiBlitz3.ab2@10996>   MOVEA.l usedfrom,A5
00026A0E <AmiBlitz3.ab2@10997>   CLR.l usedfrom
00026A12 <AmiBlitz3.ab2@10998> BRA.w getchar
00026A16 <AmiBlitz3.ab2@11001>   CMP.w #$1,D0
00026A1A <AmiBlitz3.ab2@11002>    BNE.w getchar__done
00026A1E <AmiBlitz3.ab2@11006>   MOVEA.l cmakea5(PC),A5
00026A22 <AmiBlitz3.ab2@11007> BRA.w getchar
00026A28 <AmiBlitz3.ab2@11010>   TST.w cmake
00026A2C <AmiBlitz3.ab2@11011>    BNE.w getchar__done
00026A30 <AmiBlitz3.ab2@11013>   MOVEM.l D0-D7/A0-A6,-(A7)
00026A36 <AmiBlitz3.ab2@11014>   LEA cmake,a0                                         ;reass
00026A38 <AmiBlitz3.ab2@11015>   NOT.w (a0)
00026A3C <AmiBlitz3.ab2@11016>   LEA cmakebak(PC),A0
00026A42 <AmiBlitz3.ab2@11017>   LEA ptr_parameterstore,A1
00026A44 <AmiBlitz3.ab2@11018>   MOVEQ.l #$1F,D0
00026A46 <AmiBlitz3.ab2@11021>     MOVE.l (A1)+,(A0)+
00026A4A <AmiBlitz3.ab2@11022>   DBF D0,getchar__cmloop
00026A50 <AmiBlitz3.ab2@11025>    JSR AJL_0_BF6E
00026A54 <AmiBlitz3.ab2@11026>   CMP.w #$7E,D0
00026A58 <AmiBlitz3.ab2@11027>    BNE.w syntaxerr
00026A5E <AmiBlitz3.ab2@11028>   MOVE.l A5,cmakea5                                      ;tilde
00026A62 <AmiBlitz3.ab2@11029>   LEA cmakebuff(PC),A0
00026A64 <AmiBlitz3.ab2@11030>   MOVE.l D3,D2
00026A68 <AmiBlitz3.ab2@11031>   BSR.w makelong
00026A6A <AmiBlitz3.ab2@11032>   ADDQ.b #1,(A0)
00026A70 <AmiBlitz3.ab2@11033>   LEA cmake,a0
00026A72 <AmiBlitz3.ab2@11034>   NOT.w (a0)                                               ;reass
00026A76 <AmiBlitz3.ab2@11035>   LEA cmakebak(PC),A0
00026A7C <AmiBlitz3.ab2@11036>   LEA ptr_parameterstore,A1
00026A7E <AmiBlitz3.ab2@11037>   MOVEQ.l #$1F,D0
00026A80 <AmiBlitz3.ab2@11040>     MOVE.l (A0)+,(A1)+
00026A84 <AmiBlitz3.ab2@11041>   DBF D0,getchar__cmloop2
00026A88 <AmiBlitz3.ab2@11043>   MOVEM.l (A7)+,D0-D7/A0-A6
00026A8C <AmiBlitz3.ab2@11044>   LEA cmakebuff(PC),A5
00026A90 <AmiBlitz3.ab2@11045> BRA.w getchar
00026A92 <AmiBlitz3.ab2@11048> RTS
00026A9C <AmiBlitz3.ab2@11052>   MOVE.l linenumat,ciflineat                               ;csif
00026AA2 <AmiBlitz3.ab2@11053>   TST.w skipcode
00026AA6 <AmiBlitz3.ab2@11054>    BEQ.w getchar__incnest
00026AAA <AmiBlitz3.ab2@11055>    BSR.w get1bytemain
00026AAC <AmiBlitz3.ab2@11056>    MOVE.l a1,-(a7)
00026AB2 <AmiBlitz3.ab2@11057>    JSR JL_0_C492
00026AB4 <AmiBlitz3.ab2@11058>    MOVE.l (a7)+,a1
00026AB8 <AmiBlitz3.ab2@11059> BRA.w getchar
00026AC2 <AmiBlitz3.ab2@11062>   MOVE.l linenumat,ciflineat                               ;cnif
00026AC8 <AmiBlitz3.ab2@11063>   TST.w skipcode
00026ACC <AmiBlitz3.ab2@11064>    BEQ.w getchar__incnest
00026AD0 <AmiBlitz3.ab2@11065>    BSR.w get1bytemain
00026AD4 <AmiBlitz3.ab2@11066>    CMP.b #"@",d0
00026AD8 <AmiBlitz3.ab2@11067>    BNE getchar__cnif_ok2
00026ADC <AmiBlitz3.ab2@11068>    BSR.w get1bytemain
00026AE4 <AmiBlitz3.ab2@11069>    MOVE.b #1,incnif
00026AEA <AmiBlitz3.ab2@11070>    JSR findconstant2
00026AEE <AmiBlitz3.ab2@11071>    BEQ getchar__cnif_ok2
00026AF4 <AmiBlitz3.ab2@11074>    MOVE.w fast,-(a7)
00026AFA <AmiBlitz3.ab2@11075>    CLR.b fast
00026AFC <AmiBlitz3.ab2@11076>    MOVE.l a1,-(a7)
00026B02 <AmiBlitz3.ab2@11077>    JSR JL_0_C47E
00026B08 <AmiBlitz3.ab2@11078>    CLR.b incnif
00026B0A <AmiBlitz3.ab2@11079>    MOVE.l (a7)+,a1
00026B10 <AmiBlitz3.ab2@11080>    MOVE.w (a7)+,fast
00026B14 <AmiBlitz3.ab2@11081> BRA.w getchar
00026B1A <AmiBlitz3.ab2@11084>   ADDQ.w #1,connest
00026B1E <AmiBlitz3.ab2@11085> BRA.w getchar
00026B24 <AmiBlitz3.ab2@11088>   MOVE.w connest,D0                                      ;celse
00026B28 <AmiBlitz3.ab2@11089>    BNE.w getchar
00026B2E <AmiBlitz3.ab2@11090>   NOT.w skipcode
00026B32 <AmiBlitz3.ab2@11091> BRA.w getchar
00026B38 <AmiBlitz3.ab2@11094>   SUBQ.w #1,connest                                      ;cend
00026B3C <AmiBlitz3.ab2@11095>    BPL.w getchar
00026B42 <AmiBlitz3.ab2@11096>   ADDQ.w #1,connest
00026B48 <AmiBlitz3.ab2@11097>   MOVEA.l concomsp,A0
00026B4E <AmiBlitz3.ab2@11098>   CMPA.l #concomstack,A0
00026B52 <AmiBlitz3.ab2@11099>    BEQ.w nociferr
00026B54 <AmiBlitz3.ab2@11100>   SUBQ.w #2,A0
00026B5A <AmiBlitz3.ab2@11101>   MOVE.l A0,concomsp
00026B60 <AmiBlitz3.ab2@11102>   MOVE.w (A0),skipcode
00026B64 <AmiBlitz3.ab2@11103> BRA.w getchar
00026B68 <AmiBlitz3.ab2@11106> ciflineat:   Ds.l 1
00026B6A <AmiBlitz3.ab2@11114>   MOVEQ.l #$00,D0
00026B6C <AmiBlitz3.ab2@11115>   MOVE.b (A5)+,D0
00026B70 <AmiBlitz3.ab2@11116>    BEQ.b getcharb__done
00026B74 <AmiBlitz3.ab2@11117>    BPL.b getcharb__stuff
00026B76 <AmiBlitz3.ab2@11118>   LSL.w #8,D0
00026B78 <AmiBlitz3.ab2@11119>   MOVE.b (A5)+,D0
00026B7A <AmiBlitz3.ab2@11120> RTS
00026B7E <AmiBlitz3.ab2@11123>   CMP.w #$22,D0
00026B82 <AmiBlitz3.ab2@11124>    BEQ.b swapquote
00026B86 <AmiBlitz3.ab2@11125>   CMP.w #$3B,D0
00026B8A <AmiBlitz3.ab2@11126>    BNE.b getcharb__done
00026B90 <AmiBlitz3.ab2@11127>   TST.w instringon
00026B94 <AmiBlitz3.ab2@11128>    BNE.b getcharb__done
00026B96 <AmiBlitz3.ab2@11131>   MOVE.b (A5)+,D0
00026B9A <AmiBlitz3.ab2@11132>             BEQ getcharb__loop_l1
00026B9E <AmiBlitz3.ab2@11133>             CMP.b #":",d0
00026BA2 <AmiBlitz3.ab2@11134>             BNE getcharb__loop
00026BA6 <AmiBlitz3.ab2@11135>             CMP.b #"@",(a5)
00026BAA <AmiBlitz3.ab2@11136>             BNE getcharb__loop
00026BB0 <AmiBlitz3.ab2@11139>   MOVE.w D0,lastchar
00026BB2 <AmiBlitz3.ab2@11142> RTS
00026BB8 <AmiBlitz3.ab2@11145>   NOT.w instringon
00026BBA <AmiBlitz3.ab2@11146> RTS
00026BBE <AmiBlitz3.ab2@11150>   BSR.w getchar
00026BC4 <AmiBlitz3.ab2@11151>   TST.w instringon
00026BC8 <AmiBlitz3.ab2@11152>    BNE.w get1byte__skip
00026BCC <AmiBlitz3.ab2@11153>   CMP.w #$20,D0
00026BD0 <AmiBlitz3.ab2@11154>    BEQ.w get1byte_
00026BD2 <AmiBlitz3.ab2@11157> RTS
00026BEC <AmiBlitz3.ab2@11160> gs:        Ds.w 13                                         ;ds.b 26  org source
00026BF0 <AmiBlitz3.ab2@11161>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00026BF2 <AmiBlitz3.ab2@11162>            Dc.b $C4,$DC
00026BF6 <AmiBlitz3.ab2@11168>   BSR.w getchar
00026BFC <AmiBlitz3.ab2@11169>   TST.w instringon
00026C00 <AmiBlitz3.ab2@11170>    BNE.w gchar2
00026C04 <AmiBlitz3.ab2@11171>   CMP.w #$20,D0
00026C08 <AmiBlitz3.ab2@11172>    BEQ.w get1bytemain
00026C0A <AmiBlitz3.ab2@11174>   TST.w D0
00026C0E <AmiBlitz3.ab2@11177>   BEQ.b get1bytemain__zero
00026C14 <AmiBlitz3.ab2@11178>   TST.w instringon
00026C18 <AmiBlitz3.ab2@11179>    BEQ.b get1bytemain__noqoute
00026C1C <AmiBlitz3.ab2@11180>   CMP.b #$20,D0
00026C20 <AmiBlitz3.ab2@11181>    BCC.b get1bytemain__skip
00026C24 <AmiBlitz3.ab2@11182>   MOVE.b gs(PC,D0.W),D0
00026C26 <AmiBlitz3.ab2@11183> RTS
00026C2A <AmiBlitz3.ab2@11186>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00026C2E <AmiBlitz3.ab2@11187>    BEQ.b get1bytemain__zero
00026C32 <AmiBlitz3.ab2@11188>   CMP.w #$3A,D0
00026C36 <AmiBlitz3.ab2@11189>    BEQ.b get1bytemain__zero
00026C38 <AmiBlitz3.ab2@11192>   TST.w D0
00026C3A <AmiBlitz3.ab2@11195> RTS
00026C40 <AmiBlitz3.ab2@11199>   MOVE.w lastchar,D0
00026C44 <AmiBlitz3.ab2@11200> BRA.w gchar2
00026C4E <AmiBlitz3.ab2@11204>   MOVE.w oldqflag,instringon
00026C54 <AmiBlitz3.ab2@11205>   MOVEA.l lastsourcepos,A5
00026C56 <AmiBlitz3.ab2@11206> RTS
00026C5C <AmiBlitz3.ab2@11210>   MOVE.w D0,locchar
00026C62 <AmiBlitz3.ab2@11211>   MOVE.l A5,locloc
00026C64 <AmiBlitz3.ab2@11212> RTS
00026C6A <AmiBlitz3.ab2@11216>   MOVEA.l locloc,A5
00026C70 <AmiBlitz3.ab2@11217>   MOVE.w locchar,D0
00026C76 <AmiBlitz3.ab2@11218>   MOVE.w D0,lastchar
00026C78 <AmiBlitz3.ab2@11219> RTS
00026C78 <internal_errormsg.ab2@1> XINCLUDE "internal_errormsg.ab2"
00026CC0 <internal_errormsg.ab2@9> XINCLUDE "internal_errormsg.ab2"
00026D12 <internal_errormsg.ab2@10> XINCLUDE "internal_errormsg.ab2"
00026D50 <internal_errormsg.ab2@11> XINCLUDE "internal_errormsg.ab2"
00026D8E <internal_errormsg.ab2@12> XINCLUDE "internal_errormsg.ab2"
00026DB8 <internal_errormsg.ab2@13> XINCLUDE "internal_errormsg.ab2"
00026DE8 <internal_errormsg.ab2@14> XINCLUDE "internal_errormsg.ab2"
00026E32 <internal_errormsg.ab2@15> XINCLUDE "internal_errormsg.ab2"
00026EB8 <internal_errormsg.ab2@16> XINCLUDE "internal_errormsg.ab2"
00026F1A <internal_errormsg.ab2@17> XINCLUDE "internal_errormsg.ab2"
00026F62 <internal_errormsg.ab2@18> XINCLUDE "internal_errormsg.ab2"
00026FB4 <internal_errormsg.ab2@19> XINCLUDE "internal_errormsg.ab2"
00026FFE <internal_errormsg.ab2@20> XINCLUDE "internal_errormsg.ab2"
0002704C <internal_errormsg.ab2@21> XINCLUDE "internal_errormsg.ab2"
00027082 <internal_errormsg.ab2@22> XINCLUDE "internal_errormsg.ab2"
000270B0 <internal_errormsg.ab2@23> XINCLUDE "internal_errormsg.ab2"
000270CA <internal_errormsg.ab2@24> XINCLUDE "internal_errormsg.ab2"
000270E8 <internal_errormsg.ab2@25> XINCLUDE "internal_errormsg.ab2"
00027166 <internal_errormsg.ab2@26> XINCLUDE "internal_errormsg.ab2"
00027190 <internal_errormsg.ab2@27> XINCLUDE "internal_errormsg.ab2"
000271B6 <internal_errormsg.ab2@28> XINCLUDE "internal_errormsg.ab2"
000271D6 <internal_errormsg.ab2@29> XINCLUDE "internal_errormsg.ab2"
000271F4 <internal_errormsg.ab2@30> XINCLUDE "internal_errormsg.ab2"
00027214 <internal_errormsg.ab2@31> XINCLUDE "internal_errormsg.ab2"
0002723C <internal_errormsg.ab2@32> XINCLUDE "internal_errormsg.ab2"
00027266 <internal_errormsg.ab2@33> XINCLUDE "internal_errormsg.ab2"
00027268 <internal_errormsg.ab2@36> XINCLUDE "internal_errormsg.ab2"
00027284 <internal_errormsg.ab2@39> XINCLUDE "internal_errormsg.ab2"
000272AA <internal_errormsg.ab2@40> XINCLUDE "internal_errormsg.ab2"
000272C2 <internal_errormsg.ab2@41> XINCLUDE "internal_errormsg.ab2"
00027320 <internal_errormsg.ab2@42> XINCLUDE "internal_errormsg.ab2"
00027342 <internal_errormsg.ab2@43> XINCLUDE "internal_errormsg.ab2"
00027368 <internal_errormsg.ab2@44> XINCLUDE "internal_errormsg.ab2"
00027390 <internal_errormsg.ab2@45> XINCLUDE "internal_errormsg.ab2"
000273B0 <internal_errormsg.ab2@46> XINCLUDE "internal_errormsg.ab2"
000273D4 <internal_errormsg.ab2@47> XINCLUDE "internal_errormsg.ab2"
0002741A <internal_errormsg.ab2@48> XINCLUDE "internal_errormsg.ab2"
0002743E <internal_errormsg.ab2@49> XINCLUDE "internal_errormsg.ab2"
00027462 <internal_errormsg.ab2@50> XINCLUDE "internal_errormsg.ab2"
00027482 <internal_errormsg.ab2@51> XINCLUDE "internal_errormsg.ab2"
000274A6 <internal_errormsg.ab2@52> XINCLUDE "internal_errormsg.ab2"
000274C8 <internal_errormsg.ab2@53> XINCLUDE "internal_errormsg.ab2"
000274F4 <internal_errormsg.ab2@54> XINCLUDE "internal_errormsg.ab2"
0002751A <internal_errormsg.ab2@55> XINCLUDE "internal_errormsg.ab2"
00027524 <internal_errormsg.ab2@58> XINCLUDE "internal_errormsg.ab2"
0002754A <internal_errormsg.ab2@59> XINCLUDE "internal_errormsg.ab2"
0002759C <internal_errormsg.ab2@61> XINCLUDE "internal_errormsg.ab2"
00027606 <internal_errormsg.ab2@62> XINCLUDE "internal_errormsg.ab2"
00027664 <internal_errormsg.ab2@63> XINCLUDE "internal_errormsg.ab2"
000276D2 <internal_errormsg.ab2@64> XINCLUDE "internal_errormsg.ab2"
0002770E <internal_errormsg.ab2@65> XINCLUDE "internal_errormsg.ab2"
0002772C <internal_errormsg.ab2@66> XINCLUDE "internal_errormsg.ab2"
00027752 <internal_errormsg.ab2@67> XINCLUDE "internal_errormsg.ab2"
00027782 <internal_errormsg.ab2@68> XINCLUDE "internal_errormsg.ab2"
000277A6 <internal_errormsg.ab2@69> XINCLUDE "internal_errormsg.ab2"
000277D4 <internal_errormsg.ab2@70> XINCLUDE "internal_errormsg.ab2"
000277F8 <internal_errormsg.ab2@71> XINCLUDE "internal_errormsg.ab2"
0002780E <internal_errormsg.ab2@72> XINCLUDE "internal_errormsg.ab2"
00027824 <internal_errormsg.ab2@73> XINCLUDE "internal_errormsg.ab2"
0002782A <internal_errormsg.ab2@76> XINCLUDE "internal_errormsg.ab2"
00027832 <internal_errormsg.ab2@78> XINCLUDE "internal_errormsg.ab2"
00027834 <internal_errormsg.ab2@79> XINCLUDE "internal_errormsg.ab2"
00027838 <internal_errormsg.ab2@80> XINCLUDE "internal_errormsg.ab2"
00027840 <internal_errormsg.ab2@81> XINCLUDE "internal_errormsg.ab2"
00027842 <internal_errormsg.ab2@82> XINCLUDE "internal_errormsg.ab2"
0002787C <internal_errormsg.ab2@84> XINCLUDE "internal_errormsg.ab2"
000278A8 <internal_errormsg.ab2@85> XINCLUDE "internal_errormsg.ab2"
000278D8 <internal_errormsg.ab2@86> XINCLUDE "internal_errormsg.ab2"
00027910 <internal_errormsg.ab2@87> XINCLUDE "internal_errormsg.ab2"
0002796A <internal_errormsg.ab2@88> XINCLUDE "internal_errormsg.ab2"
0002796C <internal_errormsg.ab2@92> XINCLUDE "internal_errormsg.ab2"
00027970 <internal_errormsg.ab2@93> XINCLUDE "internal_errormsg.ab2"
00027974 <internal_errormsg.ab2@94> XINCLUDE "internal_errormsg.ab2"
00027978 <internal_errormsg.ab2@95> XINCLUDE "internal_errormsg.ab2"
0002797C <internal_errormsg.ab2@96> XINCLUDE "internal_errormsg.ab2"
00027980 <internal_errormsg.ab2@97> XINCLUDE "internal_errormsg.ab2"
00027984 <internal_errormsg.ab2@98> XINCLUDE "internal_errormsg.ab2"
00027988 <internal_errormsg.ab2@99> XINCLUDE "internal_errormsg.ab2"
0002798C <internal_errormsg.ab2@100> XINCLUDE "internal_errormsg.ab2"
00027990 <internal_errormsg.ab2@101> XINCLUDE "internal_errormsg.ab2"
00027994 <internal_errormsg.ab2@102> XINCLUDE "internal_errormsg.ab2"
000279D2 <internal_errormsg.ab2@103> XINCLUDE "internal_errormsg.ab2"
00027A04 <internal_errormsg.ab2@105> XINCLUDE "internal_errormsg.ab2"
00027A22 <internal_errormsg.ab2@106> XINCLUDE "internal_errormsg.ab2"
00027A4C <internal_errormsg.ab2@107> XINCLUDE "internal_errormsg.ab2"
00027A68 <internal_errormsg.ab2@108> XINCLUDE "internal_errormsg.ab2"
00027A82 <internal_errormsg.ab2@109> XINCLUDE "internal_errormsg.ab2"
00027AA0 <internal_errormsg.ab2@110> XINCLUDE "internal_errormsg.ab2"
00027AC4 <internal_errormsg.ab2@111> XINCLUDE "internal_errormsg.ab2"
00027AC6 <internal_errormsg.ab2@114> XINCLUDE "internal_errormsg.ab2"
00027B18 <internal_errormsg.ab2@115> XINCLUDE "internal_errormsg.ab2"
00027B40 <internal_errormsg.ab2@117> XINCLUDE "internal_errormsg.ab2"
00027B68 <internal_errormsg.ab2@118> XINCLUDE "internal_errormsg.ab2"
00027B84 <internal_errormsg.ab2@122> XINCLUDE "internal_errormsg.ab2"
00027BA4 <internal_errormsg.ab2@123> XINCLUDE "internal_errormsg.ab2"
00027BBC <internal_errormsg.ab2@124> XINCLUDE "internal_errormsg.ab2"
00027C00 <internal_errormsg.ab2@125> XINCLUDE "internal_errormsg.ab2"
00027C48 <internal_errormsg.ab2@126> XINCLUDE "internal_errormsg.ab2"
00027C72 <internal_errormsg.ab2@127> XINCLUDE "internal_errormsg.ab2"
00027C9C <internal_errormsg.ab2@128> XINCLUDE "internal_errormsg.ab2"
00027CB6 <internal_errormsg.ab2@132> XINCLUDE "internal_errormsg.ab2"
00027CE0 <internal_errormsg.ab2@133> XINCLUDE "internal_errormsg.ab2"
00027D34 <internal_errormsg.ab2@134> XINCLUDE "internal_errormsg.ab2"
00027D80 <internal_errormsg.ab2@135> XINCLUDE "internal_errormsg.ab2"
00027DB8 <internal_errormsg.ab2@136> XINCLUDE "internal_errormsg.ab2"
00027DBE <internal_errormsg.ab2@139> XINCLUDE "internal_errormsg.ab2"
00027DCC <internal_errormsg.ab2@141> XINCLUDE "internal_errormsg.ab2"
00027DFC <internal_errormsg.ab2@144> XINCLUDE "internal_errormsg.ab2"
00027E30 <internal_errormsg.ab2@145> XINCLUDE "internal_errormsg.ab2"
00027E96 <internal_errormsg.ab2@146> XINCLUDE "internal_errormsg.ab2"
00027EB4 <internal_errormsg.ab2@147> XINCLUDE "internal_errormsg.ab2"
00027F2E <internal_errormsg.ab2@148> XINCLUDE "internal_errormsg.ab2"
00027F56 <internal_errormsg.ab2@149> XINCLUDE "internal_errormsg.ab2"
00027F6C <internal_errormsg.ab2@150> XINCLUDE "internal_errormsg.ab2"
00027F80 <internal_errormsg.ab2@151> XINCLUDE "internal_errormsg.ab2"
00027F82 <internal_errormsg.ab2@154> XINCLUDE "internal_errormsg.ab2"
00027F83 <internal_errormsg.ab2@155> XINCLUDE "internal_errormsg.ab2"
00027F84 <internal_errormsg.ab2@156> XINCLUDE "internal_errormsg.ab2"
00027FA4 <internal_errormsg.ab2@158> XINCLUDE "internal_errormsg.ab2"
00027FAA <internal_errormsg.ab2@161> XINCLUDE "internal_errormsg.ab2"
00027FBC <internal_errormsg.ab2@163> XINCLUDE "internal_errormsg.ab2"
00027FF0 <internal_errormsg.ab2@166> XINCLUDE "internal_errormsg.ab2"
00028008 <internal_errormsg.ab2@167> XINCLUDE "internal_errormsg.ab2"
00028024 <internal_errormsg.ab2@168> XINCLUDE "internal_errormsg.ab2"
0002803C <internal_errormsg.ab2@169> XINCLUDE "internal_errormsg.ab2"
0002805C <internal_errormsg.ab2@170> XINCLUDE "internal_errormsg.ab2"
0002807C <internal_errormsg.ab2@171> XINCLUDE "internal_errormsg.ab2"
000280A2 <internal_errormsg.ab2@172> XINCLUDE "internal_errormsg.ab2"
000280B8 <internal_errormsg.ab2@173> XINCLUDE "internal_errormsg.ab2"
000280D4 <internal_errormsg.ab2@174> XINCLUDE "internal_errormsg.ab2"
000280FE <internal_errormsg.ab2@175> XINCLUDE "internal_errormsg.ab2"
00028116 <internal_errormsg.ab2@176> XINCLUDE "internal_errormsg.ab2"
00028132 <internal_errormsg.ab2@177> XINCLUDE "internal_errormsg.ab2"
00028152 <internal_errormsg.ab2@178> XINCLUDE "internal_errormsg.ab2"
0002816A <internal_errormsg.ab2@179> XINCLUDE "internal_errormsg.ab2"
0002816E <internal_errormsg.ab2@182> XINCLUDE "internal_errormsg.ab2"
00028174 <internal_errormsg.ab2@183> XINCLUDE "internal_errormsg.ab2"
0002817A <internal_errormsg.ab2@184> XINCLUDE "internal_errormsg.ab2"
0002818F <internal_errormsg.ab2@185> XINCLUDE "internal_errormsg.ab2"
00028195 <internal_errormsg.ab2@187> XINCLUDE "internal_errormsg.ab2"
00028196 <internal_errormsg.ab2@188> XINCLUDE "internal_errormsg.ab2"
0002819A <internal_errormsg.ab2@191> XINCLUDE "internal_errormsg.ab2"
000281A0 <internal_errormsg.ab2@192> XINCLUDE "internal_errormsg.ab2"
000281A6 <internal_errormsg.ab2@193> XINCLUDE "internal_errormsg.ab2"
000281B9 <internal_errormsg.ab2@194> XINCLUDE "internal_errormsg.ab2"
000281BF <internal_errormsg.ab2@196> XINCLUDE "internal_errormsg.ab2"
000281C0 <internal_errormsg.ab2@197> XINCLUDE "internal_errormsg.ab2"
000281DE <internal_errormsg.ab2@199> XINCLUDE "internal_errormsg.ab2"
000281F6 <internal_errormsg.ab2@200> XINCLUDE "internal_errormsg.ab2"
00028212 <internal_errormsg.ab2@201> XINCLUDE "internal_errormsg.ab2"
0002823C <internal_errormsg.ab2@202> XINCLUDE "internal_errormsg.ab2"
00028256 <internal_errormsg.ab2@203> XINCLUDE "internal_errormsg.ab2"
00028276 <internal_errormsg.ab2@204> XINCLUDE "internal_errormsg.ab2"
00028294 <internal_errormsg.ab2@205> XINCLUDE "internal_errormsg.ab2"
000282C2 <internal_errormsg.ab2@206> XINCLUDE "internal_errormsg.ab2"
000282CC <internal_errormsg.ab2@209> XINCLUDE "internal_errormsg.ab2"
000282FE <internal_errormsg.ab2@210> XINCLUDE "internal_errormsg.ab2"
0002831C <internal_errormsg.ab2@212> XINCLUDE "internal_errormsg.ab2"
0002833A <internal_errormsg.ab2@213> XINCLUDE "internal_errormsg.ab2"
0002835A <internal_errormsg.ab2@214> XINCLUDE "internal_errormsg.ab2"
00028380 <internal_errormsg.ab2@215> XINCLUDE "internal_errormsg.ab2"
000283A6 <internal_errormsg.ab2@216> XINCLUDE "internal_errormsg.ab2"
000283CE <internal_errormsg.ab2@217> XINCLUDE "internal_errormsg.ab2"
000283EC <internal_errormsg.ab2@218> XINCLUDE "internal_errormsg.ab2"
0002840C <internal_errormsg.ab2@219> XINCLUDE "internal_errormsg.ab2"
00028426 <internal_errormsg.ab2@220> XINCLUDE "internal_errormsg.ab2"
00028448 <internal_errormsg.ab2@221> XINCLUDE "internal_errormsg.ab2"
00028466 <internal_errormsg.ab2@222> XINCLUDE "internal_errormsg.ab2"
00028488 <internal_errormsg.ab2@223> XINCLUDE "internal_errormsg.ab2"
000284AC <internal_errormsg.ab2@224> XINCLUDE "internal_errormsg.ab2"
000284B2 <internal_errormsg.ab2@227> XINCLUDE "internal_errormsg.ab2"
000284CE <internal_errormsg.ab2@228> XINCLUDE "internal_errormsg.ab2"
000284EA <internal_errormsg.ab2@230> XINCLUDE "internal_errormsg.ab2"
00028508 <internal_errormsg.ab2@231> XINCLUDE "internal_errormsg.ab2"
00028526 <internal_errormsg.ab2@232> XINCLUDE "internal_errormsg.ab2"
00028574 <internal_errormsg.ab2@233> XINCLUDE "internal_errormsg.ab2"
00028592 <internal_errormsg.ab2@234> XINCLUDE "internal_errormsg.ab2"
000285B0 <internal_errormsg.ab2@235> XINCLUDE "internal_errormsg.ab2"
000285CA <internal_errormsg.ab2@236> XINCLUDE "internal_errormsg.ab2"
00028616 <internal_errormsg.ab2@237> XINCLUDE "internal_errormsg.ab2"
0002863C <internal_errormsg.ab2@238> XINCLUDE "internal_errormsg.ab2"
0002865C <internal_errormsg.ab2@239> XINCLUDE "internal_errormsg.ab2"
0002867E <internal_errormsg.ab2@240> XINCLUDE "internal_errormsg.ab2"
0002869A <internal_errormsg.ab2@241> XINCLUDE "internal_errormsg.ab2"
000286C0 <internal_errormsg.ab2@242> XINCLUDE "internal_errormsg.ab2"
000286DC <internal_errormsg.ab2@243> XINCLUDE "internal_errormsg.ab2"
000286FA <internal_errormsg.ab2@244> XINCLUDE "internal_errormsg.ab2"
00028722 <internal_errormsg.ab2@245> XINCLUDE "internal_errormsg.ab2"
0002873E <internal_errormsg.ab2@246> XINCLUDE "internal_errormsg.ab2"
0002874E <internal_errormsg.ab2@247> XINCLUDE "internal_errormsg.ab2"
00028770 <internal_errormsg.ab2@248> XINCLUDE "internal_errormsg.ab2"
00028774 <internal_errormsg.ab2@251> XINCLUDE "internal_errormsg.ab2"
00028776 <internal_errormsg.ab2@254> XINCLUDE "internal_errormsg.ab2"
00028790 <internal_errormsg.ab2@255> XINCLUDE "internal_errormsg.ab2"
000287B4 <internal_errormsg.ab2@257> XINCLUDE "internal_errormsg.ab2"
000287D4 <internal_errormsg.ab2@258> XINCLUDE "internal_errormsg.ab2"
00028806 <internal_errormsg.ab2@259> XINCLUDE "internal_errormsg.ab2"
00028864 <internal_errormsg.ab2@260> XINCLUDE "internal_errormsg.ab2"
0002889C <internal_errormsg.ab2@261> XINCLUDE "internal_errormsg.ab2"
000288DA <internal_errormsg.ab2@262> XINCLUDE "internal_errormsg.ab2"
00028910 <internal_errormsg.ab2@263> XINCLUDE "internal_errormsg.ab2"
00028942 <internal_errormsg.ab2@264> XINCLUDE "internal_errormsg.ab2"
00028966 <internal_errormsg.ab2@265> XINCLUDE "internal_errormsg.ab2"
0002898A <internal_errormsg.ab2@266> XINCLUDE "internal_errormsg.ab2"
000289D4 <internal_errormsg.ab2@267> XINCLUDE "internal_errormsg.ab2"
000289FC <internal_errormsg.ab2@268> XINCLUDE "internal_errormsg.ab2"
00028A46 <internal_errormsg.ab2@269> XINCLUDE "internal_errormsg.ab2"
00028A86 <internal_errormsg.ab2@270> XINCLUDE "internal_errormsg.ab2"
00028A86 <AmiBlitz3.ab2@11223> XINCLUDE "internal_errormsg.ab2"
00028A88 <AmiBlitz3.ab2@11227> ezerr:   Ds.w 1                                            ;for simple errors
00028A8E <AmiBlitz3.ab2@11233>    MOVE.l myline,d0
00028A92 <AmiBlitz3.ab2@11234>   BNE handle_compileerror__l2
00028A98 <AmiBlitz3.ab2@11236>     MOVE.l a5,lastsourcepos
00028A9A <AmiBlitz3.ab2@11238>     SUBA.l a5,a5
00028AA0 <AmiBlitz3.ab2@11240>   TST.l usedfrom
00028AA4 <AmiBlitz3.ab2@11241>   BEQ handle_compileerror__org
00028AAA <AmiBlitz3.ab2@11242>     MOVEA.l usedfrom,a5
00028AB0 <AmiBlitz3.ab2@11245>   TST.w dirmode
00028AB4 <AmiBlitz3.ab2@11246>   BNE.b handle_compileerror__quiet
00028ABA <AmiBlitz3.ab2@11247>     JSR call_setpointernormal
00028ABE <AmiBlitz3.ab2@11248>     MOVE.w ezerr(PC),D0
00028AC2 <AmiBlitz3.ab2@11249>     BNE.w handle_compileerror__skip
00028AC8 <AmiBlitz3.ab2@11250>       MOVE.w cfetchmode,D0
00028ACC <AmiBlitz3.ab2@11251>       BEQ.w handle_compileerror__skip2
00028AD6 <AmiBlitz3.ab2@11252>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00028ADC <AmiBlitz3.ab2@11255>   MOVE.w constmode,D0
00028AE0 <AmiBlitz3.ab2@11256>   BEQ.b handle_compileerror__skip3
00028AE4 <AmiBlitz3.ab2@11257>     BSR.w asmerr2
00028AEA <AmiBlitz3.ab2@11260>   MOVE.l firstlocal,D1
00028AF0 <AmiBlitz3.ab2@11261>   OR.l firstglob,D1
00028AF4 <AmiBlitz3.ab2@11262>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00028AFA <AmiBlitz3.ab2@11263>     JSR JL_0_DB5C
00028B02 <AmiBlitz3.ab2@11266>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00028B0C <AmiBlitz3.ab2@11267>   CMP.l #"NORE",reqmode                                    ;for used functions
00028B10 <AmiBlitz3.ab2@11268>   BEQ handle_compileerror__notproc_l1
00028B1A <AmiBlitz3.ab2@11269>     MOVE.l linenumat,compilelinecounter
00028B20 <AmiBlitz3.ab2@11272>   JSR close_compilewin
00028B22 <AmiBlitz3.ab2@11275>   MOVEA.l (A7)+,A0
00028B28 <AmiBlitz3.ab2@11276>   JSR errorstringparse
00028B32 <AmiBlitz3.ab2@11277>   CMP.l #"NORE",reqmode                                    ;for used functions
00028B36 <AmiBlitz3.ab2@11278>   BEQ handle_compileerror__skip_Lxx2
00028B3C <AmiBlitz3.ab2@11279>   TST.l CLIMode
00028B40 <AmiBlitz3.ab2@11280>   BNE 'climode_output
00028B46 <AmiBlitz3.ab2@11282>     JSR save_errorfile
00028B4A <AmiBlitz3.ab2@11283>     BRA 'end_output
00028B50 <AmiBlitz3.ab2@11285>     JSR stdout_error
00028B56 <AmiBlitz3.ab2@11287>     MOVE.l lastsourcepos,a5
00028B58 <AmiBlitz3.ab2@11288> 'loop TST.b (a5)
00028B5C <AmiBlitz3.ab2@11289>       BEQ 'ok2
00028B5E <AmiBlitz3.ab2@11290>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00028B62 <AmiBlitz3.ab2@11291>     BEQ 'ok
00028B66 <AmiBlitz3.ab2@11292>     CMP.b #":",d0
00028B6A <AmiBlitz3.ab2@11293>     BEQ 'ok
00028B6E <AmiBlitz3.ab2@11294>     BRA 'loop
00028B70 <AmiBlitz3.ab2@11295> 'ok SUBQ.l #1,a5
00028B78 <AmiBlitz3.ab2@11296> 'ok2 MOVE.w #0,lastchar
00028B80 <AmiBlitz3.ab2@11297>     MOVE.b #1,iserror
00028B86 <AmiBlitz3.ab2@11298>     MOVE.l stackaddr,a7
00028B88 <AmiBlitz3.ab2@11299>     RTS
00028B8A <AmiBlitz3.ab2@11305>   MOVE.l A0,-(a7)
00028BC8 <AmiBlitz3.ab2@11306>   !ComData_GetL{comFunc_ErrorRequest,A1}
00028BCA <AmiBlitz3.ab2@11307>   MOVE.l (a7)+,A0
00028BCE <AmiBlitz3.ab2@11309>   MOVEM.l d6/D7/A6,-(A7)
00028BD4 <AmiBlitz3.ab2@11310>   MOVE.l includeline,d7
00028BDA <AmiBlitz3.ab2@11311>   MOVE.l #"INLN",a6
00028BE4 <AmiBlitz3.ab2@11312>   MOVE.l errstack,tempa7
00028BE6 <AmiBlitz3.ab2@11313>   JSR (A1)
00028BEA <AmiBlitz3.ab2@11315>   MOVEM.l (A7)+,D7/d6/A6
00028BF0 <AmiBlitz3.ab2@11318>   MOVE.l tempa7,a7
00028BF6 <AmiBlitz3.ab2@11319>   MOVEA.l errcont,A0
00028BF8 <AmiBlitz3.ab2@11321> RTS
00028BFE <AmiBlitz3.ab2@11324>   MOVEA.l errstack,A7
00028C04 <AmiBlitz3.ab2@11325>   MOVEA.l errcont,A0
00028C06 <AmiBlitz3.ab2@11327> RTS
00028C08 <AmiBlitz3.ab2@11330>   MOVE.l (A7),D0
00028C0E <AmiBlitz3.ab2@11331>   MOVEA.l errstack,A7
00028C14 <AmiBlitz3.ab2@11332>   MOVEA.l errcont,A0
00028C16 <AmiBlitz3.ab2@11333> JMP (A0)
00028C1A <AmiBlitz3.ab2@11339>   CMP.w #$7A,D0                                            ;'z'
00028C1E <AmiBlitz3.ab2@11340>    BHI.w tstalpha__no
00028C22 <AmiBlitz3.ab2@11341>   CMP.w #$41,D0                                            ;'A'
00028C26 <AmiBlitz3.ab2@11342>    BCS.w tstalpha__no
00028C2A <AmiBlitz3.ab2@11343>   CMP.w #$61,D0                                            ;'a'
00028C2E <AmiBlitz3.ab2@11344>    BCC.w tstalpha__yes
00028C32 <AmiBlitz3.ab2@11345>   CMP.w #$5A,D0                                            ;'Z'
00028C36 <AmiBlitz3.ab2@11346>    BHI.w tstalpha__no
00028C38 <AmiBlitz3.ab2@11349>   CMP.w D0,D0
00028C3A <AmiBlitz3.ab2@11352> RTS
00028C3E <AmiBlitz3.ab2@11360>   CMP.w #$30,D0                                            ;'0'
00028C42 <AmiBlitz3.ab2@11361>    BCS.w tstnum__skip
00028C46 <AmiBlitz3.ab2@11362>   CMP.w #$39,D0                                            ;'9'
00028C4A <AmiBlitz3.ab2@11363>    BHI.w tstnum__skip                                     
00028C4C <AmiBlitz3.ab2@11364>   CMP.w D0,D0
00028C4E <AmiBlitz3.ab2@11367> RTS
00028C70 <AmiBlitz3.ab2@11373>   !compare1                                                ;bsr.w tstalpha
00028C74 <AmiBlitz3.ab2@11374>    BEQ.w tstlab__skip
00028C86 <AmiBlitz3.ab2@11375>   !compare2                                                ;bsr.w tstnum2
00028C8A <AmiBlitz3.ab2@11376>    BEQ.w tstlab__skip
00028C8E <AmiBlitz3.ab2@11377>   CMP.w #$5F,D0                                            ;'_'
00028C92 <AmiBlitz3.ab2@11378>    BEQ.w tstlab__skip
00028C96 <AmiBlitz3.ab2@11379>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028C98 <AmiBlitz3.ab2@11382> RTS
00028CA2 <AmiBlitz3.ab2@11387>   MOVE.w oldqflag,instringon
00028CA8 <AmiBlitz3.ab2@11388>   MOVEA.l lastsourcepos,A5
00028CAE <AmiBlitz3.ab2@11391>   MOVE.l a5,beforeparameterfetch
00028CB4 <AmiBlitz3.ab2@11392>   LEA ptr_parameterstore,A1
00028CB6 <AmiBlitz3.ab2@11395>   MOVEQ.l #$00,D2
00028CBC <AmiBlitz3.ab2@11398>   LEA chartab,a0
00028CBE <AmiBlitz3.ab2@11399>   MOVEQ #0,d0
00028CC4 <AmiBlitz3.ab2@11400>   MOVE.l A5,lastsourcepos
00028CCE <AmiBlitz3.ab2@11401>   MOVE.w instringon,oldqflag
00028CD0 <AmiBlitz3.ab2@11404>     MOVE.b (a5)+,d0
00028CD4 <AmiBlitz3.ab2@11405>   CMP.b #$20,d0                                            ;space deftype
00028CD8 <AmiBlitz3.ab2@11406>   BEQ makename4__retry
00028CDE <AmiBlitz3.ab2@11408>   MOVE.w d0,lastchar
00028CE2 <AmiBlitz3.ab2@11409>   TST.b 0(a0,d0.w)
00028CE6 <AmiBlitz3.ab2@11410>   BNE makename__done
00028CE8 <AmiBlitz3.ab2@11419>   MOVE.b D0,(A1)+
00028CEA <AmiBlitz3.ab2@11420>   ADDQ.l #1,D2
00028CF0 <AmiBlitz3.ab2@11421>   MOVE.l A5,lastsourcepos
00028CF2 <AmiBlitz3.ab2@11424>   MOVE.b (a5)+,d0
00028CF8 <AmiBlitz3.ab2@11425>   MOVE.b d0,lastchar+1
00028CFC <AmiBlitz3.ab2@11426>   CMP.b #$20,d0
00028D00 <AmiBlitz3.ab2@11427>   BEQ makename__loop_l20
00028D04 <AmiBlitz3.ab2@11429>   TST.b 0(a0,d0)
00028D08 <AmiBlitz3.ab2@11430>   BEQ makename__loop
00028D0C <AmiBlitz3.ab2@11431>   CMP.b #2,d0
00028D10 <AmiBlitz3.ab2@11432>   BNE makename__loop_lf1
00028D16 <AmiBlitz3.ab2@11433>   MOVEA.l usedfrom,A5
00028D1C <AmiBlitz3.ab2@11434>   CLR.l usedfrom
00028D20 <AmiBlitz3.ab2@11435> BRA makename__loop_ln1
00028D24 <AmiBlitz3.ab2@11438>   CMP.b #1,d0
00028D28 <AmiBlitz3.ab2@11439>   BNE makename__loop_l20
00028D2C <AmiBlitz3.ab2@11440>   MOVEA.l cmakea5(PC),A5
00028D30 <AmiBlitz3.ab2@11441> BRA makename__loop_ln1
00028D34 <AmiBlitz3.ab2@11444>   CMP.b #$7e,d0
00028D38 <AmiBlitz3.ab2@11445>             BNE makename__loop_lt
00028D3E <AmiBlitz3.ab2@11446>             TST.w cmake
00028D42 <AmiBlitz3.ab2@11447>             BNE.w makename__loop_a1
00028D44 <AmiBlitz3.ab2@11448>             SUBQ.l #1,a5
00028D48 <AmiBlitz3.ab2@11449>             BSR.w get1bytemain
00028D4C <AmiBlitz3.ab2@11450> BRA makename__loop
00028D50 <AmiBlitz3.ab2@11454> BRA makename__loop_gpex
00028D54 <AmiBlitz3.ab2@11458>   BSR.w getchar
00028D76 <AmiBlitz3.ab2@11459>    !compare1                                               ;bsr.w tstalpha
00028D7A <AmiBlitz3.ab2@11460>    BEQ.w makename__loop_getp1
00028D8C <AmiBlitz3.ab2@11461>    !compare2                                               ;bsr.w tstnum
00028D90 <AmiBlitz3.ab2@11462>    BEQ.w makename__loop_getp1
00028D94 <AmiBlitz3.ab2@11463>   CMP.w #$5F,D0                                            ;'_'
00028D98 <AmiBlitz3.ab2@11464>    BEQ.w makename__loop_getp1
00028D9C <AmiBlitz3.ab2@11465>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028DA0 <AmiBlitz3.ab2@11469>       BNE makename__loop_gpex
00028DA4 <AmiBlitz3.ab2@11470>       CMP.b #$20,d0
00028DA8 <AmiBlitz3.ab2@11471>       BNE.w makename__loop
00028DAA <AmiBlitz3.ab2@11474>      TST.b d0
00028DAE <AmiBlitz3.ab2@11475>      BPL makename__loop_l10
00028DB0 <AmiBlitz3.ab2@11476>      SUBQ.l #1,a5
00028DB4 <AmiBlitz3.ab2@11477>      BSR get1byte_
00028DB8 <AmiBlitz3.ab2@11480>    CMP.w #$20,D0
00028DBC <AmiBlitz3.ab2@11481>    BNE.w makename__done
00028DBE <AmiBlitz3.ab2@11482>    MOVEQ #0,d0
00028DC4 <AmiBlitz3.ab2@11483>   MOVE.l a5,lastsourcepos
00028DC6 <AmiBlitz3.ab2@11486>   MOVE.b (a5)+,d0                                          ;neuneu
00028DCA <AmiBlitz3.ab2@11487>   BPL makename__loop_l101:
00028DCC <AmiBlitz3.ab2@11488>   ASL.w #8,d0
00028DCE <AmiBlitz3.ab2@11489>   MOVE.b (a5)+,d0
00028DD4 <AmiBlitz3.ab2@11492>   TST.w instringon
00028DD8 <AmiBlitz3.ab2@11493>   BNE makename__loop_l102
00028DDC <AmiBlitz3.ab2@11494>   CMP.b #$20,d0
00028DE0 <AmiBlitz3.ab2@11495>   BEQ makename__loop_l103
00028DE4 <AmiBlitz3.ab2@11496>   CMP.b #";",d0
00028DE8 <AmiBlitz3.ab2@11497>   BNE makename__loop_l102
00028DEA <AmiBlitz3.ab2@11500>   MOVE.b (A5)+,D0
00028DEE <AmiBlitz3.ab2@11501>              BEQ makename__loop_l1
00028DF2 <AmiBlitz3.ab2@11502>              CMP.b #":",d0
00028DF6 <AmiBlitz3.ab2@11503>              BNE makename__loop_lr                         ;:@
00028DFA <AmiBlitz3.ab2@11504>              CMP.b #"@",(a5)
00028DFE <AmiBlitz3.ab2@11505>              BNE makename__loop_lr
00028E00 <AmiBlitz3.ab2@11506>              ADDQ #1,a5
00028E06 <AmiBlitz3.ab2@11510>   MOVE.w d0,lastchar
00028E0A <AmiBlitz3.ab2@11514>   CMP.b #";",d0
00028E0E <AmiBlitz3.ab2@11515>   BEQ makename__done_l11
00028E10 <AmiBlitz3.ab2@11516>   CLR.b (A1)
00028E12 <AmiBlitz3.ab2@11518>   TST.w D2
00028E14 <AmiBlitz3.ab2@11519> RTS
00028E16 <AmiBlitz3.ab2@11522>   CLR.b (a1)
00028E18 <AmiBlitz3.ab2@11523>   MOVEQ #0,d0
00028E1E <AmiBlitz3.ab2@11524>   MOVE.w d0,lastchar
00028E20 <AmiBlitz3.ab2@11526>   TST.w D2
00028E22 <AmiBlitz3.ab2@11527> RTS
00028E24 <AmiBlitz3.ab2@11533>   MOVE.l (A2),D0
00028E28 <AmiBlitz3.ab2@11536>   BEQ.w findlast__here
00028E2A <AmiBlitz3.ab2@11537>   MOVEA.l D0,A2
00028E2E <AmiBlitz3.ab2@11538> BRA.w findlast__loop
00028E32 <AmiBlitz3.ab2@11541> BRA.w reget
00028E34 <AmiBlitz3.ab2@11547>   MOVE.l (A2),-(A7)
00028E38 <AmiBlitz3.ab2@11548>   BSR.w addlabel
00028E3A <AmiBlitz3.ab2@11549>   MOVE.l (A7)+,(A2)
00028E3C <AmiBlitz3.ab2@11550> RTS
00028E42 <AmiBlitz3.ab2@11555>   CLR.l fp0addr
00028E48 <AmiBlitz3.ab2@11556>   TST.w dirmode
00028E4C <AmiBlitz3.ab2@11557>    BNE.w illdirerr
00028E4E <AmiBlitz3.ab2@11558>   MOVEQ.l #$00,D0
00028E50 <AmiBlitz3.ab2@11559>   MOVE.w D7,D0
00028E52 <AmiBlitz3.ab2@11560>   ADD.w D2,D0
00028E54 <AmiBlitz3.ab2@11561>   ADDQ.w #1,D0
00028E56 <AmiBlitz3.ab2@11562>   MOVE.w D0,D2
00028E58 <AmiBlitz3.ab2@11563>   ADDQ.l #2,d0
00028E5A <AmiBlitz3.ab2@11564>   MOVEQ.l #$01,D1
00028E60 <AmiBlitz3.ab2@11565>   MOVEA.l _execbase,A6
00028E66 <AmiBlitz3.ab2@11566>   MOVE.l mempool2,a0
00028E6A <AmiBlitz3.ab2@11567>   JSR _AllocPooled(a6)
00028E70 <AmiBlitz3.ab2@11569>   MOVE.l lastlabel,a2
00028E72 <AmiBlitz3.ab2@11570>   MOVE.l D0,(A2)
00028E74 <AmiBlitz3.ab2@11571>   MOVE.l d0,a0
00028E76 <AmiBlitz3.ab2@11572>   CLR.l (a0)
00028E7C <AmiBlitz3.ab2@11573>   MOVE.l a0,lastlabel
00028E7E <AmiBlitz3.ab2@11574>   MOVE.l d0,A2
00028E82 <AmiBlitz3.ab2@11575>   LEA -$1(A0,D7.W),A0
00028E84 <AmiBlitz3.ab2@11576>   MOVE.b D2,(A0)+
00028E8A <AmiBlitz3.ab2@11577>   LEA ptr_parameterstore,A1
00028E8C <AmiBlitz3.ab2@11578>   MOVEQ #0,d0
00028E8E <AmiBlitz3.ab2@11579>   MOVEQ #0,d1
00028E90 <AmiBlitz3.ab2@11582>   MOVE.b (A1)+,d1
00028E94 <AmiBlitz3.ab2@11583>    BEQ 'l1
00028E9A <AmiBlitz3.ab2@11584>    !hashalgo
00028E9C <AmiBlitz3.ab2@11585>    MOVE.b d1,(A0)+
00028EA0 <AmiBlitz3.ab2@11586> BRA addlabel_loop2a
00028EA2 <AmiBlitz3.ab2@11589>    CLR.b (a0)+
00028EA8 <AmiBlitz3.ab2@11590>    LEA labelhash,a0
00028EAE <AmiBlitz3.ab2@11591>    AND.l #hashsize,d0
00028EB0 <AmiBlitz3.ab2@11592>    ASL.l #2,d0
00028EB4 <AmiBlitz3.ab2@11593>    MOVE.l 0(a0,d0),d1
00028EB8 <AmiBlitz3.ab2@11594>    MOVE.l d1,$c(a2)
00028EBC <AmiBlitz3.ab2@11595>    MOVE.l a2,0(a0,d0)
00028EBE <AmiBlitz3.ab2@11596>    MOVEQ #0,d0
00028EC2 <AmiBlitz3.ab2@11597> BRA.w reget
00028EC8 <AmiBlitz3.ab2@11601>    TST.b newvariable
00028ECC <AmiBlitz3.ab2@11602>    BNE addlabel
00028ED2 <AmiBlitz3.ab2@11605>   TST.w dirmode
00028ED6 <AmiBlitz3.ab2@11606>    BNE.w illdirerr
00028ED8 <AmiBlitz3.ab2@11607>   MOVEQ.l #$00,D0
00028EDA <AmiBlitz3.ab2@11608>   MOVE.w D7,D0
00028EDC <AmiBlitz3.ab2@11609>   ADD.w D2,D0
00028EDE <AmiBlitz3.ab2@11610>   ADDQ.w #1,D0
00028EE0 <AmiBlitz3.ab2@11611>   MOVE.w D0,D2
00028EE2 <AmiBlitz3.ab2@11612>   MOVEQ.l #$01,D1
00028EE8 <AmiBlitz3.ab2@11613>   MOVEA.l _execbase,A6
00028EEE <AmiBlitz3.ab2@11614>   MOVE.l mempool2,a0
00028EF2 <AmiBlitz3.ab2@11615>   JSR _AllocPooled(a6)
00028EF4 <AmiBlitz3.ab2@11616>   MOVEA.l D0,A0
00028EFA <AmiBlitz3.ab2@11618>   LEA varbase,a2
00028EFC <AmiBlitz3.ab2@11619>   MOVE.l (a2),(a0)
00028EFE <AmiBlitz3.ab2@11620>   MOVE.l A0,(A2)
00028F00 <AmiBlitz3.ab2@11621>   MOVEA.l A0,A2
00028F04 <AmiBlitz3.ab2@11622>   LEA -$1(A0,D7.W),A0
00028F06 <AmiBlitz3.ab2@11623>   MOVE.b D2,(A0)+
00028F0C <AmiBlitz3.ab2@11624>   LEA ptr_parameterstore,A1
00028F0E <AmiBlitz3.ab2@11625>   MOVEQ #0,d0
00028F10 <AmiBlitz3.ab2@11626>   MOVEQ #0,d1
00028F12 <AmiBlitz3.ab2@11629>   MOVE.b (A1)+,d1
00028F16 <AmiBlitz3.ab2@11630>    BEQ 'l12
00028F1C <AmiBlitz3.ab2@11631>    !hashalgo
00028F1E <AmiBlitz3.ab2@11632>    MOVE.b d1,(A0)+
00028F22 <AmiBlitz3.ab2@11633> BRA 'l11
00028F24 <AmiBlitz3.ab2@11636>   CLR.b (a0)+
00028F2A <AmiBlitz3.ab2@11637>   LEA variablehash,a0
00028F30 <AmiBlitz3.ab2@11638>    AND.l #hashsize,d0
00028F32 <AmiBlitz3.ab2@11639>    ASL.l #2,d0
00028F36 <AmiBlitz3.ab2@11640>    MOVE.l 0(a0,d0),d1
00028F3A <AmiBlitz3.ab2@11641>    MOVE.l d1,$e(a2)
00028F3E <AmiBlitz3.ab2@11642>    MOVE.l a2,0(a0,d0)
00028F40 <AmiBlitz3.ab2@11643>    MOVEQ #0,d0
00028F44 <AmiBlitz3.ab2@11644> BRA.w reget
00028F4A <AmiBlitz3.ab2@11648>   TST.w dirmode
00028F4E <AmiBlitz3.ab2@11649>    BNE.w illdirerr
00028F50 <AmiBlitz3.ab2@11656>   MOVEQ.l #$00,D0
00028F52 <AmiBlitz3.ab2@11657>   MOVE.w D7,D0
00028F54 <AmiBlitz3.ab2@11658>   ADD.w D2,D0
00028F56 <AmiBlitz3.ab2@11659>   ADDQ.w #1,D0
00028F58 <AmiBlitz3.ab2@11660>   MOVE.w D0,D2
00028F5A <AmiBlitz3.ab2@11661>   MOVEQ.l #$01,D1
00028F60 <AmiBlitz3.ab2@11662>   MOVEA.l _execbase,A6
00028F66 <AmiBlitz3.ab2@11663>   MOVE.l mempool2,a0
00028F6A <AmiBlitz3.ab2@11664>   JSR _AllocPooled(a6)
00028F6C <AmiBlitz3.ab2@11666>   MOVEA.l D0,A0
00028F6E <AmiBlitz3.ab2@11667>   MOVE.l A0,(A2)
00028F70 <AmiBlitz3.ab2@11668>   CLR.l (a0)
00028F74 <AmiBlitz3.ab2@11669>   CLR.l 8(a0)                                              ;clear next
00028F76 <AmiBlitz3.ab2@11670>   MOVEA.l A0,A2
00028F7A <AmiBlitz3.ab2@11671>   LEA -$1(A0,D7.W),A0
00028F7C <AmiBlitz3.ab2@11672>   MOVE.b D2,(A0)+                                          ;put in struct length
00028F82 <AmiBlitz3.ab2@11673>   LEA ptr_parameterstore,A1
00028F84 <AmiBlitz3.ab2@11674>   MOVEQ #0,d0
00028F86 <AmiBlitz3.ab2@11675>   MOVEQ #0,d1
00028F88 <AmiBlitz3.ab2@11678>   MOVE.b (A1)+,d1
00028F8A <AmiBlitz3.ab2@11681>   MOVE.b d1,(A0)+
00028F8E <AmiBlitz3.ab2@11682>   BNE.w addlabel_loop2
00028F92 <AmiBlitz3.ab2@11683> BRA.w reget
00028F94 <AmiBlitz3.ab2@11687>   MOVEQ.l #$13,D7
00028F9A <AmiBlitz3.ab2@11688>   LEA constantbase,A2
00028F9E <AmiBlitz3.ab2@11689> BRA.w findlab
00028FA0 <AmiBlitz3.ab2@11693>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
00028FA6 <AmiBlitz3.ab2@11694>   LEA xinclude_base,A2
00028FAA <AmiBlitz3.ab2@11695> BRA.w findlab
00028FAC <AmiBlitz3.ab2@11699>   MOVEQ.l #$09,D7
00028FB2 <AmiBlitz3.ab2@11700>   LEA firstconst,A2
00028FB6 <AmiBlitz3.ab2@11701> BRA.w findlab
00028FB8 <AmiBlitz3.ab2@11705>   MOVEQ.l #$0d,D7                                          ;find macro
00028FBE <AmiBlitz3.ab2@11706>   LEA macrobase,A2
00028FC2 <AmiBlitz3.ab2@11707> BRA.w findlab
00028FC8 <AmiBlitz3.ab2@11711>   LEA labelhash,A2
00028FCA <AmiBlitz3.ab2@11712>   MOVEQ.l #$13,D7
00028FCC <AmiBlitz3.ab2@11713>   EXT.l d2
00028FD2 <AmiBlitz3.ab2@11714>   LEA ptr_parameterstore,A0
00028FD4 <AmiBlitz3.ab2@11715>   MOVEQ #0,d0
00028FD6 <AmiBlitz3.ab2@11716>   MOVEQ #0,d1
00028FD8 <AmiBlitz3.ab2@11719>     MOVE.b (a0)+,d1
00028FDC <AmiBlitz3.ab2@11720>     BEQ 'l15
00028FE2 <AmiBlitz3.ab2@11721>     !hashalgo
00028FE6 <AmiBlitz3.ab2@11722> BRA 'l20
00028FEC <AmiBlitz3.ab2@11725>   AND.l #hashsize,d0
00028FEE <AmiBlitz3.ab2@11726>   ASL.l #2,d0
00028FF2 <AmiBlitz3.ab2@11727>   MOVE.l 0(a2,d0),d0
00028FF6 <AmiBlitz3.ab2@11728> BRA 'l11
00028FFA <AmiBlitz3.ab2@11731>   MOVE.l $c(A2),D0                                         ;find label
00028FFE <AmiBlitz3.ab2@11734>   BEQ findlab__no
00029000 <AmiBlitz3.ab2@11735>   MOVEA.l D0,A2
00029002 <AmiBlitz3.ab2@11736>   MOVEQ.l #$00,D0
00029006 <AmiBlitz3.ab2@11737>   MOVE.b -$1(A2,D7.l),D0
0002900C <AmiBlitz3.ab2@11738>   LEA ptr_parameterstore,A0
0002900E <AmiBlitz3.ab2@11739>   SUB.l D7,D0
00029010 <AmiBlitz3.ab2@11740>   SUBQ.l #1,D0
00029012 <AmiBlitz3.ab2@11741>   CMP.l D0,D2
00029016 <AmiBlitz3.ab2@11742>    BNE.b 'l10
0002901A <AmiBlitz3.ab2@11743>   LEA $0(A2,D7.W),A1
0002901C <AmiBlitz3.ab2@11744>   SUBQ.l #1,D0
0002901E <AmiBlitz3.ab2@11747>     MOVE.b (a1)+,d1
00029020 <AmiBlitz3.ab2@11748>     CMP.b (a0)+,d1
00029024 <AmiBlitz3.ab2@11750>     BNE.b 'l10
00029028 <AmiBlitz3.ab2@11751>   DBF D0,'l201
0002902C <AmiBlitz3.ab2@11753>   BSR.w reget
0002902E <AmiBlitz3.ab2@11754>   CMP.w D0,D0
00029030 <AmiBlitz3.ab2@11755> RTS
00029032 <AmiBlitz3.ab2@11759>   MOVEQ.l #$0B,D7
00029036 <AmiBlitz3.ab2@11760> BRA.w findlab
0002903C <AmiBlitz3.ab2@11764>   LEA firstproc,A2
00029042 <AmiBlitz3.ab2@11765>   MOVE.l #$21+#funcentry_extend,D7
00029046 <AmiBlitz3.ab2@11766> BRA findlab
0002904C <AmiBlitz3.ab2@11770>   LEA firstfor,A2
0002904E <AmiBlitz3.ab2@11771>   MOVEQ.l #$11,D7
00029052 <AmiBlitz3.ab2@11772> BRA.w findlab
00029054 <AmiBlitz3.ab2@11776>   MOVEQ.l #$0F,D7
00029058 <AmiBlitz3.ab2@11777> BRA.w findlab
0002905A <AmiBlitz3.ab2@11781>   MOVEQ.l #$0F+4,D7
00029060 <AmiBlitz3.ab2@11782>   TST.b newvariable
00029064 <AmiBlitz3.ab2@11783>    BNE.w findlab
0002906A <AmiBlitz3.ab2@11784>   LEA variablehash,A2
00029070 <AmiBlitz3.ab2@11785>   LEA ptr_parameterstore,A0
00029072 <AmiBlitz3.ab2@11786>   MOVEQ #0,d0
00029074 <AmiBlitz3.ab2@11787>   MOVEQ #0,d1
00029076 <AmiBlitz3.ab2@11790>     MOVE.b (a0)+,d1
0002907A <AmiBlitz3.ab2@11791>     BEQ 'l15
00029080 <AmiBlitz3.ab2@11792>     !hashalgo
00029084 <AmiBlitz3.ab2@11793> BRA 'l20
0002908A <AmiBlitz3.ab2@11796>   AND.l #hashsize,d0
0002908C <AmiBlitz3.ab2@11797>   ASL.l #2,d0
00029090 <AmiBlitz3.ab2@11798>   MOVE.l 0(a2,d0),d0
00029094 <AmiBlitz3.ab2@11799> BRA 'l11
00029098 <AmiBlitz3.ab2@11802>   MOVE.l $e(A2),D0                                         ;find label
0002909C <AmiBlitz3.ab2@11805>   BEQ findlab__no
0002909E <AmiBlitz3.ab2@11806>   MOVEA.l D0,A2
000290A0 <AmiBlitz3.ab2@11807>   MOVEQ.l #$00,D0
000290A4 <AmiBlitz3.ab2@11808>   MOVE.b -$1(A2,D7.W),D0
000290AA <AmiBlitz3.ab2@11809>   LEA ptr_parameterstore,A0
000290AC <AmiBlitz3.ab2@11810>   SUB.w D7,D0
000290AE <AmiBlitz3.ab2@11811>   SUBQ.l #1,D0
000290B0 <AmiBlitz3.ab2@11812>   CMP.w D0,D2
000290B4 <AmiBlitz3.ab2@11813>    BNE.b 'l10
000290B8 <AmiBlitz3.ab2@11814>   LEA $0(A2,D7.W),A1
000290BA <AmiBlitz3.ab2@11815>   SUBQ.l #1,D0
000290BC <AmiBlitz3.ab2@11818>     MOVE.b (a1)+,d1
000290BE <AmiBlitz3.ab2@11819>     CMP.b (a0)+,d1
000290C2 <AmiBlitz3.ab2@11821>     BNE.b 'l10
000290C6 <AmiBlitz3.ab2@11822>   DBF D0,'l201
000290CA <AmiBlitz3.ab2@11824>   BSR.w reget
000290CC <AmiBlitz3.ab2@11825>   CMP.w D0,D0
000290CE <AmiBlitz3.ab2@11826> RTS
000290D0 <AmiBlitz3.ab2@11839>     MOVE.l (A2),D0                                         ;find label
000290D4 <AmiBlitz3.ab2@11840>      BEQ.b findlab__no
000290D6 <AmiBlitz3.ab2@11841>     MOVEA.l D0,A2
000290D8 <AmiBlitz3.ab2@11842>     MOVEQ.l #$00,D0
000290DC <AmiBlitz3.ab2@11843>     MOVE.b -$1(A2,D7.W),D0
000290DE <AmiBlitz3.ab2@11844>     SUB.l D7,D0
000290E0 <AmiBlitz3.ab2@11845>     SUBQ.l #1,D0
000290E2 <AmiBlitz3.ab2@11846>   CMP.w D0,D2
000290E6 <AmiBlitz3.ab2@11847>   BNE.b findlab__loop
000290EA <AmiBlitz3.ab2@11849>   LEA $0(A2,D7.W),A1
000290F0 <AmiBlitz3.ab2@11850>   LEA ptr_parameterstore,A0
000290F2 <AmiBlitz3.ab2@11851>   SUBQ.l #1,D0
000290F4 <AmiBlitz3.ab2@11854>     MOVE.b (a1)+,d1
000290F6 <AmiBlitz3.ab2@11855>     CMP.b (a0)+,d1
000290FA <AmiBlitz3.ab2@11857>     BNE.b findlab__loop
000290FE <AmiBlitz3.ab2@11858>   DBF D0,findlab__loop2
00029102 <AmiBlitz3.ab2@11860>   BSR.w reget
00029104 <AmiBlitz3.ab2@11861>   CMP.w D0,D0
00029106 <AmiBlitz3.ab2@11862> RTS
0002910A <AmiBlitz3.ab2@11865>   BSR.w reget
0002910C <AmiBlitz3.ab2@11866>   MOVEQ.l #-$01,D1
0002910E <AmiBlitz3.ab2@11867> RTS
00029114 <AmiBlitz3.ab2@11871>   MOVEA.l alllocals,A4
0002911A <AmiBlitz3.ab2@11872>   CLR.l alllocals
0002911E <AmiBlitz3.ab2@11876>     CMPA.w #$0,A4
00029122 <AmiBlitz3.ab2@11877>      BEQ.b freeprocvs__done
00029126 <AmiBlitz3.ab2@11878>     MOVEA.l $4(A4),A3
0002912A <AmiBlitz3.ab2@11880>     MOVEA.l $8(A4),A3
0002912C <AmiBlitz3.ab2@11882>     MOVEA.l A4,A1
0002912E <AmiBlitz3.ab2@11883>     MOVEA.l (A4),A4
00029130 <AmiBlitz3.ab2@11884>     MOVEQ.l #$0C,D0
00029136 <AmiBlitz3.ab2@11885>     MOVEA.l _execbase,A6
0002913C <AmiBlitz3.ab2@11886>     MOVE.l mempool,a0
00029140 <AmiBlitz3.ab2@11887>     JSR _FreePooled(A6)
00029144 <AmiBlitz3.ab2@11888> BRA.b freeprocvs__loop
0002914A <AmiBlitz3.ab2@11891>   CLR.l firstglob                                          ;fix 2*aclearallvar called
00029150 <AmiBlitz3.ab2@11892>   CLR.l firstlocal
00029156 <AmiBlitz3.ab2@11893>   CLR.l sharebase
0002915C <AmiBlitz3.ab2@11894>   TST.l mempool2
00029160 <AmiBlitz3.ab2@11895>   BEQ freeprocvs__done_l10
00029166 <AmiBlitz3.ab2@11897>   MOVEA.l _execbase,A6
0002916C <AmiBlitz3.ab2@11898>   MOVE.l mempool2,a0
00029172 <AmiBlitz3.ab2@11899>   CLR.l mempool2
00029176 <AmiBlitz3.ab2@11900>   JSR _DeletePool(a6)
0002917C <AmiBlitz3.ab2@11903>   MOVE.l _execbase,a6
00029182 <AmiBlitz3.ab2@11904>   MOVE.l #$10000,d0
00029188 <AmiBlitz3.ab2@11905>   MOVE.l #80000,d1
0002918A <AmiBlitz3.ab2@11906>   MOVE.l d1,d2
0002918E <AmiBlitz3.ab2@11907>   JSR _CreatePool(a6)
00029194 <AmiBlitz3.ab2@11908>   MOVE.l d0,mempool2
00029196 <AmiBlitz3.ab2@11909> RTS
0002919A <AmiBlitz3.ab2@11913>   CMPA.w #$0,A3
0002919E <AmiBlitz3.ab2@11914>    BEQ.w freevars__done
000291A0 <AmiBlitz3.ab2@11915>   MOVEA.l A3,A1
000291A2 <AmiBlitz3.ab2@11916>   MOVEA.l (A3),A3
000291A4 <AmiBlitz3.ab2@11917>   MOVEQ.l #$00,D0
000291A8 <AmiBlitz3.ab2@11918>   MOVE.b $E(A1),D0
000291AE <AmiBlitz3.ab2@11919>   MOVEA.l _execbase,A6
000291B4 <AmiBlitz3.ab2@11920>   MOVE.l mempool2,a0
000291B8 <AmiBlitz3.ab2@11921>   JSR _FreePooled(A6)
000291BC <AmiBlitz3.ab2@11922> BRA.w freevars
000291C0 <AmiBlitz3.ab2@11925>     CMPA.w #$0,A3
000291C4 <AmiBlitz3.ab2@11926>      BEQ.w freevars__done
000291C6 <AmiBlitz3.ab2@11927>     MOVEA.l A3,A1
000291C8 <AmiBlitz3.ab2@11928>     MOVEA.l (A3),A3
000291CA <AmiBlitz3.ab2@11929>     MOVEQ.l #$00,D0
000291CE <AmiBlitz3.ab2@11930>     MOVE.b $E+4(A1),D0
000291D4 <AmiBlitz3.ab2@11931>     MOVEA.l _execbase,A6
000291DA <AmiBlitz3.ab2@11932>     MOVE.l mempool2,a0
000291DE <AmiBlitz3.ab2@11933>     JSR _FreePooled(A6)
000291E2 <AmiBlitz3.ab2@11934> BRA.w freevarsb
000291E4 <AmiBlitz3.ab2@11937> RTS
000291EA <AmiBlitz3.ab2@11941>   MOVEA.l currentlabeladdr,A0
000291F0 <AmiBlitz3.ab2@11942>   MOVE.l a0,lastlabel
000291F2 <AmiBlitz3.ab2@11943>   MOVEA.l (A0),A2
000291F4 <AmiBlitz3.ab2@11944>   CLR.l (A0)
000291FA <AmiBlitz3.ab2@11945>   MOVEA.l _execbase,A6
000291FE <AmiBlitz3.ab2@11948>   CMPA.w #$0,A2
00029202 <AmiBlitz3.ab2@11949>    BEQ.w clearlabels__done
00029206 <AmiBlitz3.ab2@11950>   MOVE.l $4(A2),D0
0002920A <AmiBlitz3.ab2@11951>   BTST #$0,D0
0002920E <AmiBlitz3.ab2@11952>    BNE.w clearlabels__skip
00029210 <AmiBlitz3.ab2@11953>   MOVEA.l D0,A3
00029214 <AmiBlitz3.ab2@11956>     CMPA.w #$0,A3
00029218 <AmiBlitz3.ab2@11957>      BEQ.w clearlabels__skip
0002921A <AmiBlitz3.ab2@11958>     MOVEA.l A3,A1
0002921C <AmiBlitz3.ab2@11959>     MOVEA.l (A3),A3
0002921E <AmiBlitz3.ab2@11960>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
00029224 <AmiBlitz3.ab2@11961>     MOVE.l mempool,a0
00029228 <AmiBlitz3.ab2@11962>     JSR _FreePooled(A6)
0002922C <AmiBlitz3.ab2@11963> BRA.w clearlabels__loop2
0002922E <AmiBlitz3.ab2@11966>   MOVEQ.l #$00,D0
00029232 <AmiBlitz3.ab2@11967>   MOVE.b $12(A2),D0
00029234 <AmiBlitz3.ab2@11968>   MOVEA.l A2,A1
00029236 <AmiBlitz3.ab2@11969>   MOVEA.l (A2),A2
0002923C <AmiBlitz3.ab2@11970>   MOVE.l mempool2,a0
00029240 <AmiBlitz3.ab2@11972> BRA.w clearlabels__loop
00029242 <AmiBlitz3.ab2@11975> RTS
00029248 <AmiBlitz3.ab2@11979>   MOVEA.l firstpend,A3
0002924E <AmiBlitz3.ab2@11980>   CLR.l firstpend
00029254 <AmiBlitz3.ab2@11981>   MOVEA.l _execbase,A6
00029258 <AmiBlitz3.ab2@11984>     CMPA.w #$0,A3
0002925C <AmiBlitz3.ab2@11985>      BEQ.w freepends__done
0002925E <AmiBlitz3.ab2@11986>     MOVEA.l A3,A1
00029260 <AmiBlitz3.ab2@11987>     MOVEQ.l #$08,D0
00029262 <AmiBlitz3.ab2@11988>     MOVEA.l (A3),A3
00029268 <AmiBlitz3.ab2@11989>     MOVE.l mempool,a0
0002926C <AmiBlitz3.ab2@11990>     JSR _FreePooled(A6)
00029270 <AmiBlitz3.ab2@11991> BRA.w fpnd2
00029272 <AmiBlitz3.ab2@11994> RTS
00029278 <AmiBlitz3.ab2@11998>   MOVEA.l firstproc,A2
0002927E <AmiBlitz3.ab2@11999>   CLR.l firstproc
00029284 <AmiBlitz3.ab2@12000>   MOVEA.l _execbase,A6
00029288 <AmiBlitz3.ab2@12003>     CMPA.w #$0,A2
0002928C <AmiBlitz3.ab2@12004>      BEQ.w clearfunctionlist__done
0002928E <AmiBlitz3.ab2@12005>     MOVEA.l A2,A1
00029290 <AmiBlitz3.ab2@12006>     MOVEA.l (A2),A2
00029292 <AmiBlitz3.ab2@12007>     MOVEQ.l #$00,D0
00029296 <AmiBlitz3.ab2@12008>     MOVE.b $20+#funcentry_extend(A1),D0
0002929C <AmiBlitz3.ab2@12009>     MOVE.l mempool2,a0
000292A0 <AmiBlitz3.ab2@12010>     JSR _FreePooled(A6)
000292A4 <AmiBlitz3.ab2@12011> BRA.w clearfunctionlist__loop
000292A6 <AmiBlitz3.ab2@12014> RTS
000292AA <AmiBlitz3.ab2@12018>   CMPA.w #$0,A2
000292AE <AmiBlitz3.ab2@12019>    BEQ.w freetypes__done
000292B2 <AmiBlitz3.ab2@12020>   MOVEA.l $4(A2),A3
000292B6 <AmiBlitz3.ab2@12021>   CMPA.w #$FF,A3
000292BA <AmiBlitz3.ab2@12022>    BEQ.w freetypes__noway
000292BE <AmiBlitz3.ab2@12026>    BSR.w freevars
000292C0 <AmiBlitz3.ab2@12029>     MOVEA.l A2,A1
000292C2 <AmiBlitz3.ab2@12030>     MOVEA.l (A2),A2
000292C4 <AmiBlitz3.ab2@12031>     MOVEQ.l #$00,D0
000292C8 <AmiBlitz3.ab2@12032>     MOVE.b $A(A1),D0
000292CE <AmiBlitz3.ab2@12033>     MOVEA.l _execbase,A6
000292D4 <AmiBlitz3.ab2@12034>     MOVE.l mempool2,a0
000292D8 <AmiBlitz3.ab2@12035>     JSR _FreePooled(A6)
000292DC <AmiBlitz3.ab2@12036> BRA.w freetypes
000292DE <AmiBlitz3.ab2@12039> RTS
000292E4 <AmiBlitz3.ab2@12043>   JSR uselib2
000292EA <AmiBlitz3.ab2@12045>   CLR.w notshared
000292F0 <AmiBlitz3.ab2@12046>   CLR.w varmode
000292F6 <AmiBlitz3.ab2@12047>   MOVE.w proceduremode,D1
000292FA <AmiBlitz3.ab2@12048>    BNE.w JL_0_8F4E
00029300 <AmiBlitz3.ab2@12049>   LEA varbase,A2
00029306 <AmiBlitz3.ab2@12050>   LEA ptr_parameterstore,a0
0002930A <AmiBlitz3.ab2@12051>   CMP.b #$22,(a0)
0002930E <AmiBlitz3.ab2@12052>   BNE JL_0_8E5E
00029310 <AmiBlitz3.ab2@12053>   MOVEQ #0,d0
00029316 <AmiBlitz3.ab2@12054> JMP error
0002931A <AmiBlitz3.ab2@12057>   BSR.w findvariable
0002931E <AmiBlitz3.ab2@12060>   BNE.w JL_0_8E7E
00029324 <AmiBlitz3.ab2@12063>   MOVE.b flagmask+1,D1
00029328 <AmiBlitz3.ab2@12064>   MOVE.b $7(A2),D3
0002932A <AmiBlitz3.ab2@12065>   EOR.b D3,D1
0002932E <AmiBlitz3.ab2@12066>   BNE 'l2
00029336 <AmiBlitz3.ab2@12067>   CMP.b #2,nowdeclare
0002933A <AmiBlitz3.ab2@12068>   BEQ errormsg_declaredtwice
0002933E <AmiBlitz3.ab2@12069> BRA.w JL_0_8FA8
00029342 <AmiBlitz3.ab2@12072>   BSR.w findlab
00029346 <AmiBlitz3.ab2@12073>   BNE 'l1
0002934E <AmiBlitz3.ab2@12074>   CMP.b #2,nowdeclare
00029352 <AmiBlitz3.ab2@12075>   BEQ errormsg_declaredtwice
00029354 <AmiBlitz3.ab2@12076>   CMP.w d0,d0
00029358 <AmiBlitz3.ab2@12079> BRA.w JL_0_8E62
0002935A <AmiBlitz3.ab2@12082>    MOVE.l a2,-(a7)
00029360 <AmiBlitz3.ab2@12083>    LEA sharebase,a2
00029362 <AmiBlitz3.ab2@12084>    MOVEQ #$f+4,d7
00029366 <AmiBlitz3.ab2@12085>    BSR.w findlab
0002936A <AmiBlitz3.ab2@12086>    BEQ 'l2x
0002936C <AmiBlitz3.ab2@12087>    MOVE.l (a7)+,a2
00029370 <AmiBlitz3.ab2@12088> BRA 'cont
00029372 <AmiBlitz3.ab2@12091>   ADDQ.l #4,a7
00029378 <AmiBlitz3.ab2@12092>   CLR.w varmode
0002937E <AmiBlitz3.ab2@12093>   MOVE.b flagmask+1,D1
00029382 <AmiBlitz3.ab2@12094>   MOVE.b $7(A2),D3
00029384 <AmiBlitz3.ab2@12095>   EOR.b D3,D1
00029388 <AmiBlitz3.ab2@12096>   BNE vardeclareerr
0002938C <AmiBlitz3.ab2@12097> BRA JL_0_8FA8
00029392 <AmiBlitz3.ab2@12100>    MOVE.w nonew,D1
00029396 <AmiBlitz3.ab2@12101>    BNE.w nonewerr
0002939C <AmiBlitz3.ab2@12102>    TST.b nowdeclare
000293A0 <AmiBlitz3.ab2@12103>    BNE 'l2
000293A6 <AmiBlitz3.ab2@12104>    TST.b declare2
000293AA <AmiBlitz3.ab2@12105>    BEQ 'l1
000293AE <AmiBlitz3.ab2@12106>    CMP.b #$2e,d0
000293B2 <AmiBlitz3.ab2@12107>    BEQ 'l2
000293B6 <AmiBlitz3.ab2@12108>    CMP.b #"$",d0
000293BA <AmiBlitz3.ab2@12109>    BEQ 'l2
000293BE <AmiBlitz3.ab2@12110> BRA vardeclareerr
000293C4 <AmiBlitz3.ab2@12113>   TST.b declare
000293C8 <AmiBlitz3.ab2@12114>    BNE vardeclareerr
000293CC <AmiBlitz3.ab2@12117>   BSR.w addvariable
000293D2 <AmiBlitz3.ab2@12118>   NOT.w notshared
000293D4 <AmiBlitz3.ab2@12119>   MOVEA.l A2,A3
000293DA <AmiBlitz3.ab2@12120>   MOVEA.l defaulttype,A2
000293DE <AmiBlitz3.ab2@12121>   CMP.w #$2E,D0
000293E2 <AmiBlitz3.ab2@12122>    BEQ.w JL_0_8EB8
000293E6 <AmiBlitz3.ab2@12123>   CMP.w #$24,D0
000293EA <AmiBlitz3.ab2@12124>    BNE.w JL_0_8ECA
000293F0 <AmiBlitz3.ab2@12125>   LEA newtype_string,A2
000293F4 <AmiBlitz3.ab2@12126>    BSR.w get1bytemain
000293F8 <AmiBlitz3.ab2@12127> BRA.w JL_0_8ECA
000293FE <AmiBlitz3.ab2@12130> JMP JUMP_notypeerr
00029402 <AmiBlitz3.ab2@12133>    BSR.w getparameter2
00029408 <AmiBlitz3.ab2@12134>   LEA newtypebase,A2
0002940C <AmiBlitz3.ab2@12135>    BSR.w findtype
00029410 <AmiBlitz3.ab2@12136>    BNE.w notypeerr3
00029416 <AmiBlitz3.ab2@12139>   CMPA.l #newtype_byte,A2
0002941A <AmiBlitz3.ab2@12140>    BEQ.w JL_0_8EECb
00029420 <AmiBlitz3.ab2@12141>   MOVE.w varmode,D1
00029424 <AmiBlitz3.ab2@12142>    BNE.w JL_0_8EE4b
0002942A <AmiBlitz3.ab2@12143>   ADDQ.w #1,globalvarpointer
00029432 <AmiBlitz3.ab2@12146>   BCLR #$0,globalvarpointer+1
00029436 <AmiBlitz3.ab2@12149>   MOVE.l A2,$A(A3)
0002943E <AmiBlitz3.ab2@12150>   MOVE.w flagmask,$6(A3)                                  ;??????????
00029440 <AmiBlitz3.ab2@12152>   MOVEQ.l #$04,D1
00029448 <AmiBlitz3.ab2@12153>   BTST #$0,flagmask+1
0002944C <AmiBlitz3.ab2@12154>    BNE.w JL_0_8F22b
00029454 <AmiBlitz3.ab2@12155>   BTST #$1,flagmask+1
00029458 <AmiBlitz3.ab2@12156>    BNE.w JL_0_8F22b
00029460 <AmiBlitz3.ab2@12157>   CMPI.l #$100,$4(A2)
00029464 <AmiBlitz3.ab2@12158>    BCC.w JL_0_8F22b
00029468 <AmiBlitz3.ab2@12159>   MOVE.w $8(A2),D1
0002946E <AmiBlitz3.ab2@12162>   TST.w varmode
00029472 <AmiBlitz3.ab2@12163> BRA.w JL_0_8F3E
00029476 <AmiBlitz3.ab2@12172>   BSR.w getparameter2
0002947C <AmiBlitz3.ab2@12173>   LEA newtypebase,A2
00029480 <AmiBlitz3.ab2@12174>    BSR.w findtype
00029484 <AmiBlitz3.ab2@12175>    BNE.w notypeerr
0002948A <AmiBlitz3.ab2@12178>   CMPA.l #newtype_byte,A2
0002948E <AmiBlitz3.ab2@12179>    BEQ.w JL_0_8EEC
00029494 <AmiBlitz3.ab2@12180>   MOVE.w varmode,D1
00029498 <AmiBlitz3.ab2@12181>    BNE.w JL_0_8EE4
0002949E <AmiBlitz3.ab2@12182>   ADDQ.w #1,globalvarpointer
000294A6 <AmiBlitz3.ab2@12185>   BCLR #$0,globalvarpointer+1
000294AA <AmiBlitz3.ab2@12188>   MOVE.l A2,$A(A3)
000294B2 <AmiBlitz3.ab2@12189>   MOVE.w flagmask,$6(A3)                                  ;??????????
000294B4 <AmiBlitz3.ab2@12190>   MOVEQ.l #$04,D1
000294BC <AmiBlitz3.ab2@12191>   BTST #$0,flagmask+1
000294C0 <AmiBlitz3.ab2@12192>    BNE.w JL_0_8F22
000294C8 <AmiBlitz3.ab2@12193>   BTST #$1,flagmask+1
000294CC <AmiBlitz3.ab2@12194>    BNE.w JL_0_8F22
000294D4 <AmiBlitz3.ab2@12195>   CMPI.l #$100,$4(A2)
000294D8 <AmiBlitz3.ab2@12196>    BCC.w JL_0_8F22
000294DC <AmiBlitz3.ab2@12197>   MOVE.w $8(A2),D1
000294E2 <AmiBlitz3.ab2@12200>   TST.w varmode
000294E6 <AmiBlitz3.ab2@12201>    BEQ.w JL_0_8F3E
000294E8 <AmiBlitz3.ab2@12202>   NEG.w D1
000294EE <AmiBlitz3.ab2@12203>   ADD.w D1,globalvarpointer
000294F6 <AmiBlitz3.ab2@12204>   MOVE.w globalvarpointer,$4(A3)
000294F8 <AmiBlitz3.ab2@12205> RTS
00029500 <AmiBlitz3.ab2@12208>   MOVE.w globalvarpointer,$4(A3)
00029506 <AmiBlitz3.ab2@12209>   ADD.w D1,globalvarpointer
00029508 <AmiBlitz3.ab2@12210> RTS
0002950E <AmiBlitz3.ab2@12214>   LEA firstglob,A2
00029512 <AmiBlitz3.ab2@12215>    BSR.w findvariable2
00029516 <AmiBlitz3.ab2@12218>   BNE.w JL_0_8F74
0002951C <AmiBlitz3.ab2@12219>   MOVE.b flagmask+1,D1
00029520 <AmiBlitz3.ab2@12220>   MOVE.b $7(A2),D3
00029522 <AmiBlitz3.ab2@12221>   EOR.b D3,D1
00029526 <AmiBlitz3.ab2@12222>    BEQ.w JL_0_8FA8
0002952A <AmiBlitz3.ab2@12223>    BSR.w findlab
0002952E <AmiBlitz3.ab2@12224> BRA.w JL_0_8F58
00029536 <AmiBlitz3.ab2@12227>   MOVE.w #$FFFF,varmode
0002953C <AmiBlitz3.ab2@12228>   MOVE.w globalvarpointer,-(A7)
00029546 <AmiBlitz3.ab2@12229>   MOVE.w locvaroff,globalvarpointer
0002954C <AmiBlitz3.ab2@12230>   LEA firstlocal,A2
00029554 <AmiBlitz3.ab2@12231>   MOVE.b #1,newvariable
00029558 <AmiBlitz3.ab2@12232>    BSR.w JL_0_8E5E
0002955E <AmiBlitz3.ab2@12233>   CLR.b newvariable
00029568 <AmiBlitz3.ab2@12234>   MOVE.w globalvarpointer,locvaroff
0002956E <AmiBlitz3.ab2@12235>   MOVE.w (A7)+,globalvarpointer
00029570 <AmiBlitz3.ab2@12236> RTS
00029572 <AmiBlitz3.ab2@12239>   MOVEA.l A2,A3
00029576 <AmiBlitz3.ab2@12240>   CMP.w #$2E,D0
0002957A <AmiBlitz3.ab2@12241>    BEQ.w JL_0_8FCE
0002957E <AmiBlitz3.ab2@12242>   CMP.w #$24,D0
00029582 <AmiBlitz3.ab2@12243>    BNE.w JL_0_8FE8
0002958A <AmiBlitz3.ab2@12244>   CMPI.l #newtype_string,$A(A3)
0002958E <AmiBlitz3.ab2@12245>    BNE.w rongtypeerr
00029592 <AmiBlitz3.ab2@12246>    BSR.w get1bytemain
00029596 <AmiBlitz3.ab2@12247> BRA.w JL_0_8FE8
0002959A <AmiBlitz3.ab2@12250>    BSR.w getparameter2
000295A0 <AmiBlitz3.ab2@12251>   LEA newtypebase,A2
000295A4 <AmiBlitz3.ab2@12252>    BSR.w findtype
000295A8 <AmiBlitz3.ab2@12253>    BNE.w notypeerr
000295AC <AmiBlitz3.ab2@12254>   CMPA.l $A(A3),A2
000295B0 <AmiBlitz3.ab2@12255>    BNE.w rongtypeerr
000295B8 <AmiBlitz3.ab2@12257>   BTST #$0,flagmask+1
000295BC <AmiBlitz3.ab2@12258>    BEQ.w JL_0_8FFE
000295C2 <AmiBlitz3.ab2@12259>   BTST #$0,$7(A3)
000295C6 <AmiBlitz3.ab2@12260>    BEQ.w pointerr
000295CA <AmiBlitz3.ab2@12263>   MOVEA.l $A(A3),A2
000295CC <AmiBlitz3.ab2@12264> RTS
000295CE <AmiBlitz3.ab2@12268>    TST.l D3                                                ;newtype >32kb  .w to .l
000295D2 <AmiBlitz3.ab2@12269>    BEQ.w JL_0_9042
000295DC <AmiBlitz3.ab2@12270>    MOVE.l destpointer,loada
000295E0 <AmiBlitz3.ab2@12273> BRA JL_0_9032
000295E4 <AmiBlitz3.ab2@12275>   CMP.w #$9,D3                                             ;_addq_arrays
000295E8 <AmiBlitz3.ab2@12276>    BCC.w JL_0_9032
000295EE <AmiBlitz3.ab2@12277>   MOVE.w d3,arrayoffset
000295F2 <AmiBlitz3.ab2@12278>   ANDI.w #$7,D3
000295F4 <AmiBlitz3.ab2@12279>   LSL.w #8,D3
000295F6 <AmiBlitz3.ab2@12280>   LSL.w #1,D3
000295FE <AmiBlitz3.ab2@12281>   ANDI.w #$F1FF,addqa0
00029604 <AmiBlitz3.ab2@12282>   OR.w D3,addqa0
0002960A <AmiBlitz3.ab2@12283>   MOVE.w addqa0,D1
0002960E <AmiBlitz3.ab2@12284> BRA.w writeword
00029614 <AmiBlitz3.ab2@12287>   CMP.l #$7fff,d3                                          ;>32kb newtypes
00029618 <AmiBlitz3.ab2@12288>   BGT longoffset
0002961E <AmiBlitz3.ab2@12289>   MOVE.w D3,leaa0a0+2
00029624 <AmiBlitz3.ab2@12290>   MOVE.w d3,arrayoffset
0002962A <AmiBlitz3.ab2@12291>   MOVE.l leaa0a0,D1
0002962E <AmiBlitz3.ab2@12292>   BSR.w writelong
00029630 <AmiBlitz3.ab2@12295> RTS
00029634 <AmiBlitz3.ab2@12298>    MOVE.w #$d5fc,d1
00029638 <AmiBlitz3.ab2@12299>    BSR writeword
0002963A <AmiBlitz3.ab2@12300>    MOVE.l d3,d1
0002963E <AmiBlitz3.ab2@12301>    BSR.w writelong
00029640 <AmiBlitz3.ab2@12302> RTS
00029644 <AmiBlitz3.ab2@12306>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
00029648 <AmiBlitz3.ab2@12309>    BCS.w arrchk3                                           
0002964E <AmiBlitz3.ab2@12310>    JSR $20000                                              ;jsr 0
00029654 <AmiBlitz3.ab2@12316>   TST.b fast
00029658 <AmiBlitz3.ab2@12317>   BEQ 'l1
0002965A <AmiBlitz3.ab2@12318>    MOVEQ #0,d1                                             ;faster arrays
00029660 <AmiBlitz3.ab2@12319>    MOVE.w regnum,d2
00029662 <AmiBlitz3.ab2@12320>    MOVE.w d2,d1
00029664 <AmiBlitz3.ab2@12321>    LSL.w #8,d1
00029666 <AmiBlitz3.ab2@12322>    LSL.w #4,d1
00029668 <AmiBlitz3.ab2@12323>    ADD.w d2,d1
0002966E <AmiBlitz3.ab2@12324>    OR.l #$4c2d0000,d1
00029674 <AmiBlitz3.ab2@12325>    TST.w varmode
00029678 <AmiBlitz3.ab2@12326>    BEQ 'l1a
0002967C <AmiBlitz3.ab2@12327>    BCLR #16,d1
00029680 <AmiBlitz3.ab2@12330>    BSR writelong
00029684 <AmiBlitz3.ab2@12331>    MOVE.w $4(A7),D1
00029688 <AmiBlitz3.ab2@12332>    BSR.w writeword
0002968E <AmiBlitz3.ab2@12333>    MOVE.w regnum,D1
00029690 <AmiBlitz3.ab2@12334>   SUBQ.w #1,D1
00029692 <AmiBlitz3.ab2@12335>   LSL.w #8,D1
00029694 <AmiBlitz3.ab2@12336>   LSL.w #1,D1
00029698 <AmiBlitz3.ab2@12337>   ORI.w #$D080,D1
0002969E <AmiBlitz3.ab2@12338>   OR.w regnum,D1
000296A2 <AmiBlitz3.ab2@12339>    BSR.w writeword
000296A4 <AmiBlitz3.ab2@12340> RTS
000296AA <AmiBlitz3.ab2@12343>   MOVE.w regnum,D2
000296AE <AmiBlitz3.ab2@12344>   MOVE.w arrmul1(PC),D1
000296B0 <AmiBlitz3.ab2@12345>   OR.w D2,D1
000296B2 <AmiBlitz3.ab2@12346>   SUBQ.w #1,D1
000296B6 <AmiBlitz3.ab2@12347>    BSR.w writeword
000296BA <AmiBlitz3.ab2@12348>   MOVE.w arrmul2(PC),D1
000296BC <AmiBlitz3.ab2@12349>   OR.w D2,D1
000296BE <AmiBlitz3.ab2@12350>   MOVE.w D2,D3
000296C0 <AmiBlitz3.ab2@12351>   SUBQ.w #1,D3
000296C2 <AmiBlitz3.ab2@12352>   LSL.w #8,D3
000296C4 <AmiBlitz3.ab2@12353>   LSL.w #1,D3
000296C6 <AmiBlitz3.ab2@12354>   OR.w D3,D1
000296CA <AmiBlitz3.ab2@12355>    BSR.w writeword
000296CE <AmiBlitz3.ab2@12356>   MOVE.w arrmul3(PC),D1
000296D0 <AmiBlitz3.ab2@12357>   MOVE.w D2,D3
000296D2 <AmiBlitz3.ab2@12358>   LSL.w #8,D3
000296D4 <AmiBlitz3.ab2@12359>   LSL.w #1,D3
000296D6 <AmiBlitz3.ab2@12360>   OR.w D3,D1
000296DA <AmiBlitz3.ab2@12361>    BSR.w pokewda5s
000296DE <AmiBlitz3.ab2@12362>   MOVE.w $4(A7),D1
000296E0 <AmiBlitz3.ab2@12363>   ADDQ.w #2,D1
000296E4 <AmiBlitz3.ab2@12364>    BSR.w writeword
000296E8 <AmiBlitz3.ab2@12365>   MOVE.w arrmul4(PC),D1
000296EA <AmiBlitz3.ab2@12366>   MOVE.w D2,D3
000296EC <AmiBlitz3.ab2@12367>   SUBQ.w #1,D3
000296EE <AmiBlitz3.ab2@12368>   LSL.w #8,D3
000296F0 <AmiBlitz3.ab2@12369>   LSL.w #1,D3
000296F2 <AmiBlitz3.ab2@12370>   OR.w D3,D1
000296F6 <AmiBlitz3.ab2@12371>    BSR.w pokewda5s
000296FA <AmiBlitz3.ab2@12372>   MOVE.w $4(A7),D1
000296FE <AmiBlitz3.ab2@12373>    BSR.w writeword
00029702 <AmiBlitz3.ab2@12374>   MOVE.w arrmul5(PC),D1
00029704 <AmiBlitz3.ab2@12375>   OR.w D2,D1
00029706 <AmiBlitz3.ab2@12376>   SUBQ.w #1,D1
0002970A <AmiBlitz3.ab2@12377>    BSR.w writeword
0002970E <AmiBlitz3.ab2@12378>   MOVE.w arrmul6(PC),D1
00029710 <AmiBlitz3.ab2@12379>   OR.w D2,D1
00029712 <AmiBlitz3.ab2@12380>   SUBQ.w #1,D1
00029716 <AmiBlitz3.ab2@12381>    BSR.w writeword
0002971A <AmiBlitz3.ab2@12382>   MOVE.w arrmul7(PC),D1
0002971C <AmiBlitz3.ab2@12383>   OR.w D2,D1
0002971E <AmiBlitz3.ab2@12384>   SUBQ.w #1,D1
00029720 <AmiBlitz3.ab2@12385>   MOVE.w D2,D3
00029722 <AmiBlitz3.ab2@12386>   LSL.w #8,D3
00029724 <AmiBlitz3.ab2@12387>   LSL.w #1,D3
00029726 <AmiBlitz3.ab2@12388>   OR.w D3,D1
0002972A <AmiBlitz3.ab2@12389>    BSR.w writeword
0002972E <AmiBlitz3.ab2@12390>   MOVE.w arrmul8(PC),D1
00029730 <AmiBlitz3.ab2@12391>   MOVE.w D2,D3
00029732 <AmiBlitz3.ab2@12392>   SUBQ.w #1,D3
00029734 <AmiBlitz3.ab2@12393>   LSL.w #8,D3
00029736 <AmiBlitz3.ab2@12394>   LSL.w #1,D3
00029738 <AmiBlitz3.ab2@12395>   OR.w D3,D1
0002973C <AmiBlitz3.ab2@12396>    BSR.w writeword
00029742 <AmiBlitz3.ab2@12397>   MOVE.w regnum,D1
00029744 <AmiBlitz3.ab2@12398>   SUBQ.w #1,D1
00029746 <AmiBlitz3.ab2@12399>   LSL.w #8,D1
00029748 <AmiBlitz3.ab2@12400>   LSL.w #1,D1
0002974C <AmiBlitz3.ab2@12401>   ORI.w #$D080,D1
00029752 <AmiBlitz3.ab2@12402>   OR.w regnum,D1
00029756 <AmiBlitz3.ab2@12403> BRA.w writeword
00029758 <AmiBlitz3.ab2@12411> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002975A <AmiBlitz3.ab2@12412> arrmul2:   MOVE  d0,d0
0002975E <AmiBlitz3.ab2@12413> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
00029762 <AmiBlitz3.ab2@12414> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
00029764 <AmiBlitz3.ab2@12416> arrmul5:   SWAP d0
00029766 <AmiBlitz3.ab2@12417> arrmul6:   CLR d0
00029768 <AmiBlitz3.ab2@12418> arrmul7:   ADD.l d0,d0
0002976A <AmiBlitz3.ab2@12419> arrmul8:   MOVE.l (a7)+,d0
0002976E <AmiBlitz3.ab2@12424> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
00029772 <AmiBlitz3.ab2@12425> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
00029774 <AmiBlitz3.ab2@12426> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002977A <AmiBlitz3.ab2@12444>   CLR.l lastoffset_org
00029780 <AmiBlitz3.ab2@12445>   BTST #$1,$7(A3)
00029784 <AmiBlitz3.ab2@12446>    BEQ.w calcvar__notarr
0002978A <AmiBlitz3.ab2@12447>   MOVE.w notshared,D1
0002978E <AmiBlitz3.ab2@12448>    BNE.w noarrerr
00029792 <AmiBlitz3.ab2@12449>    BSR.w get1bytemain
00029796 <AmiBlitz3.ab2@12450>   CMP.w #$29,D0
0002979A <AmiBlitz3.ab2@12451>    BNE.w calcvar__notalist
000297A0 <AmiBlitz3.ab2@12452>   BTST #$0,$6(A3)
000297A4 <AmiBlitz3.ab2@12453>    BEQ.w nolisterr
000297AC <AmiBlitz3.ab2@12454>   MOVE.w $4(A3),listcode1+2
000297B0 <AmiBlitz3.ab2@12455>   MOVE.l listcode1(PC),D1
000297B4 <AmiBlitz3.ab2@12456>    BSR.w pokela5s
000297B8 <AmiBlitz3.ab2@12457>   MOVE.l listcode2(PC),D1
000297BC <AmiBlitz3.ab2@12458>    BSR.w writelong
000297C2 <AmiBlitz3.ab2@12459>   TST.b debugmode
000297C6 <AmiBlitz3.ab2@12460>    BEQ.w calcvar__nolrerr
000297C8 <AmiBlitz3.ab2@12464>   MOVE.l A2,-(A7)
000297CC <AmiBlitz3.ab2@12465>   MOVE.w #$C315,D1
000297D0 <AmiBlitz3.ab2@12466>    BSR.w Atokejsr
000297D2 <AmiBlitz3.ab2@12467>   MOVEA.l (A7)+,A2
000297D6 <AmiBlitz3.ab2@12470>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
000297DA <AmiBlitz3.ab2@12472>    BSR.w writeword
000297DE <AmiBlitz3.ab2@12473> BRA.w calcvar__normalar
000297E0 <AmiBlitz3.ab2@12476> calcvar__listoff:   Ds.w 1
000297E6 <AmiBlitz3.ab2@12480>   CLR.w calcvar__listoff
000297EC <AmiBlitz3.ab2@12481>   BTST #$0,$6(A3)
000297F0 <AmiBlitz3.ab2@12482>    BEQ.w calcvar__knop
000297F8 <AmiBlitz3.ab2@12483>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
000297FC <AmiBlitz3.ab2@12486>   MOVEM.l A2-A3,-(A7)
00029802 <AmiBlitz3.ab2@12487>   MOVE.w varmode,-(A7)
00029806 <AmiBlitz3.ab2@12488>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002980A <AmiBlitz3.ab2@12489>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002980C <AmiBlitz3.ab2@12490>   MOVE.l A2,-(A7)
00029812 <AmiBlitz3.ab2@12491>   MOVE.w flagmask,-(A7)
0002981C <AmiBlitz3.ab2@12493>   MOVE.w oldqflag,instringon
00029822 <AmiBlitz3.ab2@12494>   MOVEA.l lastsourcepos,A5
00029826 <AmiBlitz3.ab2@12495>    BSR.w arreval
0002982C <AmiBlitz3.ab2@12496>   MOVE.w (A7)+,flagmask
00029834 <AmiBlitz3.ab2@12497>   MOVE.w $8(A7),varmode
0002983A <AmiBlitz3.ab2@12498>   TST.b debugmode
0002983E <AmiBlitz3.ab2@12499>    BEQ.w calcvar__noszchk
00029840 <AmiBlitz3.ab2@12503>   MOVEA.l (A7)+,A2
00029842 <AmiBlitz3.ab2@12504>   MOVEQ.l #$04,D1
0002984A <AmiBlitz3.ab2@12505>   BTST #$0,flagmask+1                                      ;pointer?
0002984E <AmiBlitz3.ab2@12506>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
00029852 <AmiBlitz3.ab2@12507>   MOVE.w $8(A2),D1
00029856 <AmiBlitz3.ab2@12510>   ADD.w calcvar__listoff(PC),D1
0002985A <AmiBlitz3.ab2@12511>   BSR.w JL_0_B6DE
00029860 <AmiBlitz3.ab2@12512>   ADDQ.w #1,regnum
00029862 <AmiBlitz3.ab2@12515>   ADDQ.w #4,(A7)
00029866 <AmiBlitz3.ab2@12516>   TST.w $4(A7)
0002986A <AmiBlitz3.ab2@12517>    BEQ.w calcvar__isglob
0002986C <AmiBlitz3.ab2@12518>   SUBQ.w #8,(A7)                                           ;range check local array
00029872 <AmiBlitz3.ab2@12521>   TST.b debugmode
00029876 <AmiBlitz3.ab2@12522>    BEQ.w calcvar__noer1
0002987C <AmiBlitz3.ab2@12523>   MOVE.w regnum,D1
0002987E <AmiBlitz3.ab2@12524>   SUBQ.w #1,D1
00029880 <AmiBlitz3.ab2@12525>   LSL.w #8,D1
00029882 <AmiBlitz3.ab2@12526>   LSL.w #1,D1
00029886 <AmiBlitz3.ab2@12527>   OR.w zarrchk(PC),D1
0002988A <AmiBlitz3.ab2@12528>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002988C <AmiBlitz3.ab2@12529>   MOVE.w (A7),D1
00029890 <AmiBlitz3.ab2@12530>    BSR.w writeword
00029894 <AmiBlitz3.ab2@12531>   MOVE.l arrchk2(PC),D1
00029898 <AmiBlitz3.ab2@12532>    BSR.w writelong
0002989C <AmiBlitz3.ab2@12533>   MOVE.w #$C309,D1
000298A0 <AmiBlitz3.ab2@12534>    BSR.w Atokejsr
000298A4 <AmiBlitz3.ab2@12537>   SUBQ.w #1,$2(A7)
000298A8 <AmiBlitz3.ab2@12538>    BEQ.w calcvar__ardone
000298AC <AmiBlitz3.ab2@12539>   CMP.w #$2C,D0
000298B0 <AmiBlitz3.ab2@12540>    BNE.w syntaxerr
000298B6 <AmiBlitz3.ab2@12541>    TST.b fast
000298BA <AmiBlitz3.ab2@12542>    BNE 'l1
000298BE <AmiBlitz3.ab2@12543>    BSR.w arrevalchk
000298C2 <AmiBlitz3.ab2@12544> BRA 'l2
000298C6 <AmiBlitz3.ab2@12547>   BSR arreval
000298CE <AmiBlitz3.ab2@12550>   MOVE.w $4(A7),varmode
000298D2 <AmiBlitz3.ab2@12551>   BSR.w JL_0_9052
000298D6 <AmiBlitz3.ab2@12552> BRA.w calcvar__arloop
000298DA <AmiBlitz3.ab2@12556>   CMP.w #$29,D0
000298DE <AmiBlitz3.ab2@12557>    BNE.w syntaxerr
000298E4 <AmiBlitz3.ab2@12558>   SUBQ.w #1,regnum
000298E6 <AmiBlitz3.ab2@12559>   ADDQ.w #6,A7
000298EA <AmiBlitz3.ab2@12560>   MOVEM.l (A7)+,A2-A3
000298F2 <AmiBlitz3.ab2@12561>   MOVE.w $4(A3),movea5a0+2
000298F8 <AmiBlitz3.ab2@12562>   MOVE.l movea5a0,D1
000298FC <AmiBlitz3.ab2@12563>    BSR.w pokela5s
00029902 <AmiBlitz3.ab2@12564>   MOVE.w regnum,D1
00029906 <AmiBlitz3.ab2@12565>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002990A <AmiBlitz3.ab2@12566>    BSR.w writeword
00029910 <AmiBlitz3.ab2@12567>   BTST #$0,$6(A3)
00029914 <AmiBlitz3.ab2@12568>    BEQ.w calcvar__normalar
00029918 <AmiBlitz3.ab2@12572>   MOVE.w listarfix(PC),D1
0002991C <AmiBlitz3.ab2@12573>    BSR.w writeword
00029920 <AmiBlitz3.ab2@12576>   BSR.w get1bytemain
00029926 <AmiBlitz3.ab2@12580>   BTST #$0,$7(A3)
0002992A <AmiBlitz3.ab2@12581>    BEQ.w calcvar__noppnt
0002992E <AmiBlitz3.ab2@12582>   CMP.w #$5C,D0
00029932 <AmiBlitz3.ab2@12583>    BNE.w calcvar__pmskip
00029936 <AmiBlitz3.ab2@12584>   MOVE.w calcvar__pfix(PC),D1
0002993A <AmiBlitz3.ab2@12585>    BSR.w writeword
0002993E <AmiBlitz3.ab2@12588>   MOVE.w #$8000,D2
00029942 <AmiBlitz3.ab2@12589> BRA.w calcvar__loopml
00029946 <AmiBlitz3.ab2@12592>   MOVE.w #$C000,D2
0002994A <AmiBlitz3.ab2@12593> BRA.w calcvar__loopml
0002994C <AmiBlitz3.ab2@12597> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
00029950 <AmiBlitz3.ab2@12602>   CMP.w #$28,D0
00029954 <AmiBlitz3.ab2@12603>    BEQ.w noarrerr
0002995C <AmiBlitz3.ab2@12604>   CMPI.l #$100,$4(A2)
00029960 <AmiBlitz3.ab2@12605>    BCS.w calcvar__simpvar
00029966 <AmiBlitz3.ab2@12606>   BTST #$0,$7(A3)
0002996A <AmiBlitz3.ab2@12607>    BEQ.w calcvar__notap
0002996E <AmiBlitz3.ab2@12611>   CMP.w #$5C,D0
00029972 <AmiBlitz3.ab2@12612>    BEQ.w calcvar__notap
00029974 <AmiBlitz3.ab2@12613>   MOVEQ.l #$00,D2
00029978 <AmiBlitz3.ab2@12614> BRA.w calcvar__simpvar2
0002997C <AmiBlitz3.ab2@12617>   MOVE.w #$8000,D2
00029984 <AmiBlitz3.ab2@12618>   MOVE.w $4(A3),movea5a0+2
0002998A <AmiBlitz3.ab2@12619>   MOVE.l movea5a0,D1
0002998E <AmiBlitz3.ab2@12620>    BSR.w pokela5s                                         ;move.l x(a5),a2
00029994 <AmiBlitz3.ab2@12622>    TST.b debugmode
00029998 <AmiBlitz3.ab2@12623>    BEQ.w 'skip
0002999C <AmiBlitz3.ab2@12624>    MOVE.w #$c320,D1
000299A2 <AmiBlitz3.ab2@12625>    JSR Atokejsr
000299A4 <AmiBlitz3.ab2@12629>   MOVEQ.l #$00,D3
000299A8 <AmiBlitz3.ab2@12632>   CMP.w #$5C,D0
000299AC <AmiBlitz3.ab2@12633>    BNE.w calcvar__done
000299B4 <AmiBlitz3.ab2@12634>   CMPI.l #$100,$4(A2)
000299B8 <AmiBlitz3.ab2@12635>    BCS.w rongtypeerr
000299BA <AmiBlitz3.ab2@12636>   MOVE.w D2,-(A7)
000299BE <AmiBlitz3.ab2@12637>    BSR.w getparameter2
000299C2 <AmiBlitz3.ab2@12638>    BEQ.w syntaxerr
000299C4 <AmiBlitz3.ab2@12639>   ADDQ.w #4,A2
000299C8 <AmiBlitz3.ab2@12640>    BSR.w findvariable2
000299CC <AmiBlitz3.ab2@12641>    BNE.w noofferr
000299CE <AmiBlitz3.ab2@12642>   MOVE.w (A7)+,D2
000299D0 <AmiBlitz3.ab2@12643>   MOVEA.l A2,A3                                             ;pointer to offset
000299D4 <AmiBlitz3.ab2@12644>   MOVEA.l $A(A3),A2                                         ;pointer to type
000299D6 <AmiBlitz3.ab2@12645>   MOVEQ #0,d1
000299DA <AmiBlitz3.ab2@12646>   MOVE.w 4(a3),d1
000299DC <AmiBlitz3.ab2@12647>   ADD.l d1,d3
000299E2 <AmiBlitz3.ab2@12649>   MOVE.l A3,lastoffset_org
000299E6 <AmiBlitz3.ab2@12650>   CMP.w #$5B,D0
000299EA <AmiBlitz3.ab2@12651>    BNE.w calcvar__realdone
000299F0 <AmiBlitz3.ab2@12652>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
000299F4 <AmiBlitz3.ab2@12653>    BEQ.w rongtypeerr
000299F8 <AmiBlitz3.ab2@12654>    BSR.w JL_0_9004
000299FC <AmiBlitz3.ab2@12655>   MOVEM.l A2-A3,-(A7)
00029A02 <AmiBlitz3.ab2@12656>   MOVE.w varmode,-(A7)
00029A08 <AmiBlitz3.ab2@12657>   MOVE.l lastoffset_org,-(A7)
00029A0E <AmiBlitz3.ab2@12658>   MOVE.w pusha2,D1
00029A12 <AmiBlitz3.ab2@12659>    BSR.w writeword
00029A14 <AmiBlitz3.ab2@12660>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
00029A1E <AmiBlitz3.ab2@12661>   MOVE.l destpointer,deststore
00029A24 <AmiBlitz3.ab2@12662>    MOVE.l rightsidetype,-(a7)
00029A2A <AmiBlitz3.ab2@12663>    MOVE.l leftsidetype,-(a7)
00029A30 <AmiBlitz3.ab2@12664>    CLR.l rightsidetype
00029A36 <AmiBlitz3.ab2@12665>    CLR.l leftsidetype
00029A3A <AmiBlitz3.ab2@12666>    BSR.w eval
00029A40 <AmiBlitz3.ab2@12667>    MOVE.l (a7)+,rightsidetype
00029A46 <AmiBlitz3.ab2@12668>    MOVE.l (a7)+,leftsidetype
00029A4A <AmiBlitz3.ab2@12669>   CMP.w #$5D,D0
00029A4E <AmiBlitz3.ab2@12670>    BNE.w syntaxerr
00029A54 <AmiBlitz3.ab2@12671>   TST.b fast                                               ;a2,-(a7) array
00029A58 <AmiBlitz3.ab2@12672>   BEQ calcvar__loop0_l10
00029A5E <AmiBlitz3.ab2@12676>   MOVE.l destpointer,d1
00029A64 <AmiBlitz3.ab2@12677>   SUB.l deststore,d1
00029A6A <AmiBlitz3.ab2@12678>   CMP.l #4,d1
00029A6E <AmiBlitz3.ab2@12679>   BNE calcvar__loop0_l10
00029A74 <AmiBlitz3.ab2@12680>   MOVE.l destpointer,a4
00029A7A <AmiBlitz3.ab2@12681>   MOVE.l -4(a4),-6(a4)
00029A80 <AmiBlitz3.ab2@12682>   SUBQ.l #2,destpointer
00029A86 <AmiBlitz3.ab2@12683>   CLR.l imm_addr
00029A8C <AmiBlitz3.ab2@12684>   CLR.l load_var_addr
00029A90 <AmiBlitz3.ab2@12685> BRA calcvar__loop0_l20
00029A96 <AmiBlitz3.ab2@12688>   MOVE.w pulla2,D1
00029A9A <AmiBlitz3.ab2@12689>    BSR.w writeword
00029AA0 <AmiBlitz3.ab2@12692>   MOVE.l (A7)+,lastoffset_org
00029AA6 <AmiBlitz3.ab2@12693>   MOVE.w (A7)+,varmode
00029AAA <AmiBlitz3.ab2@12694>   MOVEM.l (A7)+,A2-A3
00029AB0 <AmiBlitz3.ab2@12700>   TST.w debugmode
00029AB4 <AmiBlitz3.ab2@12701>    BEQ.b calcvar__nobchk
00029AB8 <AmiBlitz3.ab2@12702>   MOVE.w $8(A3),D1
00029ABC <AmiBlitz3.ab2@12703>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
00029AC2 <AmiBlitz3.ab2@12707>   MOVE.w D1,brchkcode+2
00029AC8 <AmiBlitz3.ab2@12708>   MOVE.w regnum,D1
00029ACA <AmiBlitz3.ab2@12709>   LSL.w #8,D1
00029ACC <AmiBlitz3.ab2@12710>   LSL.w #1,D1
00029AD0 <AmiBlitz3.ab2@12711>   OR.w brchkcode0(PC),D1
00029AD6 <AmiBlitz3.ab2@12712>   MOVE.w D1,brchkcode
00029ADA <AmiBlitz3.ab2@12713>   MOVE.l brchkcode(PC),D1
00029ADE <AmiBlitz3.ab2@12714>    BSR.w writelong
00029AE2 <AmiBlitz3.ab2@12715>   MOVE.l brchkcode+4(PC),D1
00029AE6 <AmiBlitz3.ab2@12716>    BSR.w writelong
00029AEA <AmiBlitz3.ab2@12717>   MOVE.w brchkcode+8(PC),D1
00029AEE <AmiBlitz3.ab2@12718>    BSR.w writeword
00029AF0 <AmiBlitz3.ab2@12721>   MOVEQ.l #$04,D1
00029AF6 <AmiBlitz3.ab2@12722>   BTST #$0,$7(A3)
00029AFA <AmiBlitz3.ab2@12723>    BNE.w calcvar__dothemul
00029AFE <AmiBlitz3.ab2@12724>   MOVE.w $8(A2),D1
00029B02 <AmiBlitz3.ab2@12727>   BSR.w JL_0_B6DE
00029B08 <AmiBlitz3.ab2@12728>   MOVE.w addrega2,D1
00029B0E <AmiBlitz3.ab2@12729>   OR.w regnum,D1
00029B12 <AmiBlitz3.ab2@12730>    OR.w #$100,d1                                           ;>32kb types
00029B16 <AmiBlitz3.ab2@12731>    BSR.w writeword
00029B1A <AmiBlitz3.ab2@12732>    BSR.w get1bytemain
00029B1C <AmiBlitz3.ab2@12733>   MOVEQ.l #$00,D3
00029B20 <AmiBlitz3.ab2@12734>   MOVE.w #$8000,D2
00029B26 <AmiBlitz3.ab2@12737>   BTST #$0,$7(A3)
00029B2A <AmiBlitz3.ab2@12738>    BNE.w calcvar__pointer
00029B2E <AmiBlitz3.ab2@12739> BRA.w calcvar__loop0
00029B32 <AmiBlitz3.ab2@12743>  CMP.w #$5C,D0
00029B36 <AmiBlitz3.ab2@12744>    BNE.w calcvar__done3
00029B38 <AmiBlitz3.ab2@12745>   TST.w D3
00029B3C <AmiBlitz3.ab2@12746>    BNE.w calcvar__pskip
00029B42 <AmiBlitz3.ab2@12747>   MOVE.w movea0,D1
00029B46 <AmiBlitz3.ab2@12748>    BSR.w writeword
00029B4A <AmiBlitz3.ab2@12749> BRA.w calcvar__pmore
00029B50 <AmiBlitz3.ab2@12752>   MOVE.w D3,movea0a0+2
00029B56 <AmiBlitz3.ab2@12753>   MOVE.l movea0a0,D1
00029B5A <AmiBlitz3.ab2@12754>    BSR.w writelong
00029B60 <AmiBlitz3.ab2@12757>   BTST #$2,$7(A3)
00029B64 <AmiBlitz3.ab2@12758>    BEQ.w calcvar__loopml
00029B6A <AmiBlitz3.ab2@12759>   MOVE.l adda0a0,D1
00029B6E <AmiBlitz3.ab2@12760>    BSR.w writelong
00029B72 <AmiBlitz3.ab2@12761> BRA.w calcvar__loopml
00029B76 <AmiBlitz3.ab2@12764>   BSET #$E,D2
00029B7C <AmiBlitz3.ab2@12765>   BTST #$2,$7(A3)
00029B80 <AmiBlitz3.ab2@12766>    BNE.w calcvar__done
00029B84 <AmiBlitz3.ab2@12767>   BSET #$D,D2
00029B8C <AmiBlitz3.ab2@12770>   CMPI.l #$100,$4(A2)
00029B90 <AmiBlitz3.ab2@12771>    BCC.w calcvar__done2
00029B94 <AmiBlitz3.ab2@12772>   MOVE.b $7(A2),D2
00029B98 <AmiBlitz3.ab2@12775> BRA.w JL_0_9004
00029B9C <AmiBlitz3.ab2@12778>   MOVE.w $6(A2),D2
00029BA0 <AmiBlitz3.ab2@12781>   MOVE.w $4(A3),D3
00029BA6 <AmiBlitz3.ab2@12782>   BTST #$0,$7(A3)
00029BAA <AmiBlitz3.ab2@12783>    BEQ.w calcvar__nopoint
00029BAE <AmiBlitz3.ab2@12784>   BSET #$E,D2
00029BB0 <AmiBlitz3.ab2@12787> RTS
00029BB4 <AmiBlitz3.ab2@12791> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
00029BB8 <AmiBlitz3.ab2@12792> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
00029BBA <AmiBlitz3.ab2@12793>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
00029BBC <AmiBlitz3.ab2@12794>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
00029BBE <AmiBlitz3.ab2@12795>              Dc.b $4E,$40                                  ;TRAP    #00
00029BC4 <AmiBlitz3.ab2@12803>   TST.w varmode
00029BC8 <AmiBlitz3.ab2@12804>    BEQ.w writeword
00029BCC <AmiBlitz3.ab2@12805>   BCLR #$0,D1
00029BD0 <AmiBlitz3.ab2@12806> BRA.w writeword
00029BD6 <AmiBlitz3.ab2@12809>   TST.w varmode
00029BDA <AmiBlitz3.ab2@12810>    BEQ.w writeword
00029BDE <AmiBlitz3.ab2@12811>   BCLR #$9,D1
00029BE2 <AmiBlitz3.ab2@12812> BRA.w writeword
00029BE8 <AmiBlitz3.ab2@12815>   TST.w proceduremode
00029BEC <AmiBlitz3.ab2@12816>    BEQ.w writelong
00029BF0 <AmiBlitz3.ab2@12817>   BCLR #$19,D1
00029BF4 <AmiBlitz3.ab2@12818> BRA.w writelong
00029BFA <AmiBlitz3.ab2@12821>   TST.w varmode
00029BFE <AmiBlitz3.ab2@12822>   BEQ.w writelong
00029C02 <AmiBlitz3.ab2@12823>   BCLR #$10,D1
00029C08 <AmiBlitz3.ab2@12826>   ADDQ.l #1,destpointer
00029C10 <AmiBlitz3.ab2@12827>   BCLR #$0,destpointer+3
00029C16 <AmiBlitz3.ab2@12828>   MOVEA.l destpointer,A4
00029C1C <AmiBlitz3.ab2@12829>   CMPA.l destbufferend,A4
00029C20 <AmiBlitz3.ab2@12830>    BCC.w writeword__overa
00029C22 <AmiBlitz3.ab2@12831>   MOVE.l D1,(A4)+
00029C28 <AmiBlitz3.ab2@12834>   MOVE.l A4,destpointer
00029C2C <AmiBlitz3.ab2@12835>   CMPA.l bigpc(PC),A4
00029C30 <AmiBlitz3.ab2@12836>    BHI.w writeword__nbp
00029C32 <AmiBlitz3.ab2@12837> RTS
00029C3A <AmiBlitz3.ab2@12840>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029C40 <AmiBlitz3.ab2@12841>   CLR.b fast
00029C46 <AmiBlitz3.ab2@12842>   CLR.b fpu
00029C4C <AmiBlitz3.ab2@12843>   CLR.b iee
00029C4E <AmiBlitz3.ab2@12844>   ADDQ.w #4,A4
00029C52 <AmiBlitz3.ab2@12845> BRA.w writeword__msa
00029C58 <AmiBlitz3.ab2@12851>   ADDQ.l #1,destpointer
00029C60 <AmiBlitz3.ab2@12852>   BCLR #$0,destpointer+3
00029C66 <AmiBlitz3.ab2@12853>   MOVEA.l destpointer,A4
00029C6C <AmiBlitz3.ab2@12854>   CMPA.l destbufferend,A4
00029C70 <AmiBlitz3.ab2@12855>    BCC.w writeword__over
00029C72 <AmiBlitz3.ab2@12856>   MOVE.w D1,(A4)+
00029C78 <AmiBlitz3.ab2@12859>   MOVE.l A4,destpointer
00029C7C <AmiBlitz3.ab2@12860>   CMPA.l bigpc(PC),A4
00029C80 <AmiBlitz3.ab2@12861>    BHI.w writeword__nbp
00029C82 <AmiBlitz3.ab2@12862> RTS
00029C88 <AmiBlitz3.ab2@12865>   ADDQ.l #1,destpointer
00029C90 <AmiBlitz3.ab2@12866>   BCLR #$0,destpointer+3
00029C96 <AmiBlitz3.ab2@12867>   MOVEA.l destpointer,A4
00029C9C <AmiBlitz3.ab2@12868>   CMPA.l destbufferend,A4
00029CA0 <AmiBlitz3.ab2@12869>    BCC.w writeword__over
00029CA2 <AmiBlitz3.ab2@12870>   MOVE.w D1,(A4)+
00029CA8 <AmiBlitz3.ab2@12871>   MOVE.l A4,destpointer
00029CAC <AmiBlitz3.ab2@12872>   CMPA.l bigpc(PC),A4
00029CB0 <AmiBlitz3.ab2@12873>    BHI.w writeword__nbp
00029CB2 <AmiBlitz3.ab2@12874> RTS
00029CB8 <AmiBlitz3.ab2@12877>   TST.w cfetchmode
00029CBC <AmiBlitz3.ab2@12878>   BNE.w writeword__nbp2
00029CC2 <AmiBlitz3.ab2@12879>   MOVE.l A4,bigpc
00029CC4 <AmiBlitz3.ab2@12882> RTS
00029CCC <AmiBlitz3.ab2@12885>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029CCE <AmiBlitz3.ab2@12886>   ADDQ.w #2,A4
00029CD4 <AmiBlitz3.ab2@12887>   CLR.b fast
00029CDA <AmiBlitz3.ab2@12888>   CLR.b fpu
00029CE0 <AmiBlitz3.ab2@12889>   CLR.b iee
00029CE4 <AmiBlitz3.ab2@12890> BRA.w writeword__ms
00029CEA <AmiBlitz3.ab2@12894>   MOVEA.l destpointer,A4
00029CF0 <AmiBlitz3.ab2@12895>   CMPA.l destbufferend,A4
00029CF4 <AmiBlitz3.ab2@12896>    BCC.w writebyte__over
00029CF6 <AmiBlitz3.ab2@12897>   MOVE.b D1,(A4)+
00029CFC <AmiBlitz3.ab2@12900>   MOVE.l A4,destpointer
00029D00 <AmiBlitz3.ab2@12901>   CMPA.l bigpc(PC),A4
00029D04 <AmiBlitz3.ab2@12902>    BHI.w writebyte__nbp
00029D06 <AmiBlitz3.ab2@12903> RTS
00029D0C <AmiBlitz3.ab2@12906>   TST.w cfetchmode
00029D10 <AmiBlitz3.ab2@12907>    BNE.w writebyte__nbp2
00029D16 <AmiBlitz3.ab2@12908>   MOVE.l A4,bigpc
00029D18 <AmiBlitz3.ab2@12911> RTS
00029D20 <AmiBlitz3.ab2@12914>   MOVE.w #-1,dontwrite
00029D22 <AmiBlitz3.ab2@12915>   ADDQ.w #1,A4
00029D28 <AmiBlitz3.ab2@12916>   CLR.b fast
00029D2E <AmiBlitz3.ab2@12917>   CLR.b fpu
00029D34 <AmiBlitz3.ab2@12918>   CLR.b iee
00029D38 <AmiBlitz3.ab2@12919> BRA.w writebyte__ms
00029D3C <AmiBlitz3.ab2@12922> bigpc:   Ds.l 1
00029D3E <AmiBlitz3.ab2@12926>   MOVE.w (A0)+,D1
00029D42 <AmiBlitz3.ab2@12927>   BSR.w writeword
00029D44 <AmiBlitz3.ab2@12930>     CMPA.l A1,A0
00029D48 <AmiBlitz3.ab2@12931>     BCC.w pokecode__done
00029D4A <AmiBlitz3.ab2@12932>       MOVE.w (A0)+,D1
00029D4E <AmiBlitz3.ab2@12933>       BSR.w writeword
00029D52 <AmiBlitz3.ab2@12934> BRA.w pokecode__loop
00029D54 <AmiBlitz3.ab2@12937> RTS
00029D56 <AmiBlitz3.ab2@12940>   MOVE.w (A0)+,D1
00029D5A <AmiBlitz3.ab2@12941>   BSR.w writeword
00029D5C <AmiBlitz3.ab2@12942>   CMPA.l A1,A0
00029D60 <AmiBlitz3.ab2@12943>   BCS.w pokecode2
00029D62 <AmiBlitz3.ab2@12944> RTS
00029D68 <AmiBlitz3.ab2@12950>   TST.b iniffcommand
00029D6C <AmiBlitz3.ab2@12951>   BEQ 'l1
00029D70 <AmiBlitz3.ab2@12952>     MOVE.w #$4880,D1
00029D76 <AmiBlitz3.ab2@12953>     OR.w regnum,D1
00029D7A <AmiBlitz3.ab2@12954>     BSR writeword
00029D7C <AmiBlitz3.ab2@12957> RTS
00029D80 <AmiBlitz3.ab2@12960>   BSR.w convert_byte_to_word
00029D86 <AmiBlitz3.ab2@12963>   TST.b iee
00029D8A <AmiBlitz3.ab2@12964>   BEQ 'old
00029D8E <AmiBlitz3.ab2@12965>   CMP.b #5,d2
00029D92 <AmiBlitz3.ab2@12966>   BEQ wtof
00029D96 <AmiBlitz3.ab2@12969>   MOVE.w #$48C0,D1
00029D9C <AmiBlitz3.ab2@12970>   OR.w regnum,D1
00029DA0 <AmiBlitz3.ab2@12971> BRA.w writeword
00029DA2 <AmiBlitz3.ab2@12974>   MOVEQ #0,d0
00029DA8 <AmiBlitz3.ab2@12975>   MOVE.w regnum,d0
00029DAA <AmiBlitz3.ab2@12976>   ASL.l #7,d0
00029DB0 <AmiBlitz3.ab2@12977>   MOVE.l #$f2005000,d1
00029DB2 <AmiBlitz3.ab2@12978>   OR.l d0,d1
00029DB4 <AmiBlitz3.ab2@12979>   ASL.l #1,d0
00029DB6 <AmiBlitz3.ab2@12980>   ASL.l #8,d0
00029DB8 <AmiBlitz3.ab2@12981>   OR.l d0,d1
00029DBC <AmiBlitz3.ab2@12982> BRA writelong
00029DC0 <AmiBlitz3.ab2@12986>   BSR.w convert_byte_to_word
00029DC4 <AmiBlitz3.ab2@12989>   MOVE.w #$4840,D1
00029DCA <AmiBlitz3.ab2@12990>   OR.w regnum,D1
00029DCE <AmiBlitz3.ab2@12991>    BSR.w writeword
00029DD2 <AmiBlitz3.ab2@12992>   MOVE.w #$4240,D1
00029DD8 <AmiBlitz3.ab2@12993>   OR.w regnum,D1
00029DDC <AmiBlitz3.ab2@12994> BRA.w writeword
00029DE0 <AmiBlitz3.ab2@12998>   CMP.w #$ffdc,d1
00029DE4 <AmiBlitz3.ab2@12999>   BNE 'negfpu
00029DE6 <AmiBlitz3.ab2@13000>   MOVEQ #0,d0
00029DEC <AmiBlitz3.ab2@13001>   MOVE.w regnum,d0
00029DEE <AmiBlitz3.ab2@13002>   ASL.l #7,d0
00029DF4 <AmiBlitz3.ab2@13003>   MOVE.l #$f2004000,d1
00029DF6 <AmiBlitz3.ab2@13004>   OR.l d0,d1
00029DF8 <AmiBlitz3.ab2@13005>   ASL.l #1,d0
00029DFA <AmiBlitz3.ab2@13006>   ASL.l #8,d0
00029DFC <AmiBlitz3.ab2@13007>   OR.l d0,d1
00029E00 <AmiBlitz3.ab2@13008> BRA writelong
00029E02 <AmiBlitz3.ab2@13012>   MOVEQ #0,d1
00029E08 <AmiBlitz3.ab2@13013>   MOVE.w regnum,d1                                         ;fpu neg
00029E0A <AmiBlitz3.ab2@13014>   ASL.l #7,d1
00029E10 <AmiBlitz3.ab2@13015>   OR.l #$f200001a,d1
00029E12 <AmiBlitz3.ab2@13016>   MOVE.l d0,-(a7)
00029E14 <AmiBlitz3.ab2@13017>   MOVEQ #0,d0
00029E1A <AmiBlitz3.ab2@13018>   MOVE.w regnum,d0
00029E1C <AmiBlitz3.ab2@13019>   ASL.l #8,d0
00029E1E <AmiBlitz3.ab2@13020>   ASL.l #2,d0
00029E20 <AmiBlitz3.ab2@13021>   OR.l d0,d1
00029E22 <AmiBlitz3.ab2@13022>   MOVE.l (a7)+,d0
00029E26 <AmiBlitz3.ab2@13023> BRA writelong
00029E2C <AmiBlitz3.ab2@13026>    TST.b iee
00029E30 <AmiBlitz3.ab2@13027>    BNE wtof
00029E34 <AmiBlitz3.ab2@13028>    BSR.w convert_byte_to_long
00029E38 <AmiBlitz3.ab2@13031>    MOVE.w #$FFDC,D1
00029E3E <AmiBlitz3.ab2@13034>    TST.b iee
00029E42 <AmiBlitz3.ab2@13035>    BNE ltof
00029E48 <AmiBlitz3.ab2@13036>    MOVE.w D1,libjsr+2
00029E4C <AmiBlitz3.ab2@13037>    BSR.w JL_0_AD40
00029E4E <AmiBlitz3.ab2@13038>   MOVE.l D4,D1
00029E52 <AmiBlitz3.ab2@13039>    BSR.w JL_0_AD38
00029E56 <AmiBlitz3.ab2@13040>   MOVE.w #$C900,D1
00029E5A <AmiBlitz3.ab2@13041>    BSR.w Atokejsr
00029E5E <AmiBlitz3.ab2@13042>    BSR.w JL_0_A352
00029E64 <AmiBlitz3.ab2@13043>   MOVE.l libjsr,D1
00029E68 <AmiBlitz3.ab2@13044>    BSR.w writelong
00029E6C <AmiBlitz3.ab2@13045>    BSR.w JL_0_A36E
00029E6E <AmiBlitz3.ab2@13046>   MOVE.l D5,D1
00029E72 <AmiBlitz3.ab2@13047> BRA.w JL_0_AD38
00029E74 <AmiBlitz3.ab2@13050> RTS
00029E78 <AmiBlitz3.ab2@13053>   MOVE.w #$C317,D1
00029E7E <AmiBlitz3.ab2@13054>   TST.b typecheck
00029E82 <AmiBlitz3.ab2@13055>   BEQ 'l1
00029E88 <AmiBlitz3.ab2@13056>    TST.b notypecheck
00029E8C <AmiBlitz3.ab2@13057>    BNE 'l1
00029E92 <AmiBlitz3.ab2@13058>    TST.l lasttoken
00029E98 <AmiBlitz3.ab2@13065>   TST.b debugmode
00029E9C <AmiBlitz3.ab2@13066>    BEQ.w JL_0_9696
00029EA4 <AmiBlitz3.ab2@13067>   BTST #$7,overflowcheck
00029EA8 <AmiBlitz3.ab2@13068>    BEQ.w JL_0_9696
00029EAE <AmiBlitz3.ab2@13069>   TST.w cfetchmode
00029EB2 <AmiBlitz3.ab2@13070>    BNE.w JL_0_9696
00029EB8 <AmiBlitz3.ab2@13071>   TST.w regnum
00029EBC <AmiBlitz3.ab2@13072>    BEQ.w JL_0_968A
00029EBE <AmiBlitz3.ab2@13073>   MOVE.w D1,-(A7)
00029EC2 <AmiBlitz3.ab2@13074>   MOVE.w JL_0_9698(PC),D1
00029EC6 <AmiBlitz3.ab2@13075>    BSR.w writeword
00029ECC <AmiBlitz3.ab2@13076>   MOVE.w regnum,D1
00029ED0 <AmiBlitz3.ab2@13077>   OR.w L_0_969C(PC),D1
00029ED4 <AmiBlitz3.ab2@13078>    BSR.w writeword
00029ED6 <AmiBlitz3.ab2@13079>   MOVE.w (A7)+,D1
00029EDA <AmiBlitz3.ab2@13080>    BSR.w JL_0_968A
00029EDE <AmiBlitz3.ab2@13081>   MOVE.w L_0_969A(PC),D1
00029EE2 <AmiBlitz3.ab2@13082> BRA.w writeword
00029EE6 <AmiBlitz3.ab2@13086>   MOVEM.l D0-D7/A0-A6,-(A7)
00029EEA <AmiBlitz3.ab2@13087>    BSR.w Atokejsr
00029EEE <AmiBlitz3.ab2@13088>   MOVEM.l (A7)+,D0-D7/A0-A6
00029EF0 <AmiBlitz3.ab2@13091> RTS
00029EF2 <AmiBlitz3.ab2@13094>   MOVE.l D0,-(A7)
00029EF4 <AmiBlitz3.ab2@13097>   MOVE.l (A7)+,D0
00029EF6 <AmiBlitz3.ab2@13100>   MOVE.l D0,D0
00029EFA <AmiBlitz3.ab2@13103>   BSR.w convert_word_to_long
00029F00 <AmiBlitz3.ab2@13104>   TST.b iee
00029F04 <AmiBlitz3.ab2@13105>   BEQ 'old
00029F08 <AmiBlitz3.ab2@13106>   CMP.b #5,d2
00029F0C <AmiBlitz3.ab2@13107>   BNE 'old
00029F0E <AmiBlitz3.ab2@13108> RTS
00029F12 <AmiBlitz3.ab2@13111> BRA.w JL_0_9600
00029F16 <AmiBlitz3.ab2@13115>   MOVE.w #$C316,D1
00029F1C <AmiBlitz3.ab2@13116>   TST.b typecheck
00029F20 <AmiBlitz3.ab2@13117>   BEQ 'l1
00029F26 <AmiBlitz3.ab2@13118>   TST.b peekaddrsize
00029F2A <AmiBlitz3.ab2@13119>   BNE 'l1
00029F30 <AmiBlitz3.ab2@13120>   TST.b notypecheck
00029F34 <AmiBlitz3.ab2@13121>   BNE 'l1
00029F3A <AmiBlitz3.ab2@13122>   TST.l lasttoken
00029F3E <AmiBlitz3.ab2@13128> BRA.w JL_0_963A
00029F42 <AmiBlitz3.ab2@13132>   MOVE.w #$C318,D1
00029F48 <AmiBlitz3.ab2@13133>   TST.b typecheck
00029F4C <AmiBlitz3.ab2@13134>   BEQ 'l1
00029F52 <AmiBlitz3.ab2@13135>   TST.b peekaddrsize
00029F56 <AmiBlitz3.ab2@13136>   BNE 'l1
00029F5C <AmiBlitz3.ab2@13137>   TST.b notypecheck
00029F60 <AmiBlitz3.ab2@13138>   BNE 'l1
00029F66 <AmiBlitz3.ab2@13139>   TST.l lasttoken
00029F6A <AmiBlitz3.ab2@13145> BRA.w JL_0_963A
00029F6E <AmiBlitz3.ab2@13149>   MOVE.w #$C318,D1
00029F74 <AmiBlitz3.ab2@13150>   TST.b typecheck
00029F78 <AmiBlitz3.ab2@13151>   BEQ 'l1
00029F7E <AmiBlitz3.ab2@13152>   TST.b notypecheck
00029F82 <AmiBlitz3.ab2@13153>   BNE 'l1
00029F88 <AmiBlitz3.ab2@13154>   TST.l lasttoken
00029F8C <AmiBlitz3.ab2@13160>   BSR.w JL_0_963A
00029F90 <AmiBlitz3.ab2@13161> BRA.w convert_word_to_quick
00029F94 <AmiBlitz3.ab2@13165> BRA.w JL_0_9600
00029F96 <AmiBlitz3.ab2@13169> RTS
00029F9A <AmiBlitz3.ab2@13173>   MOVE.w #$C319,D1
00029FA0 <AmiBlitz3.ab2@13174>   TST.b typecheck
00029FA4 <AmiBlitz3.ab2@13175>   BEQ 'l1
00029FAA <AmiBlitz3.ab2@13176>   TST.b notypecheck
00029FAE <AmiBlitz3.ab2@13177>   BNE 'l1
00029FB4 <AmiBlitz3.ab2@13178>   TST.l lasttoken
00029FB8 <AmiBlitz3.ab2@13185>   BSR.w JL_0_963A
00029FBC <AmiBlitz3.ab2@13188>   MOVE.w #$4240,D1
00029FC2 <AmiBlitz3.ab2@13189>   OR.w regnum,D1
00029FC6 <AmiBlitz3.ab2@13190>   BSR.w writeword
00029FCA <AmiBlitz3.ab2@13191>   MOVE.w #$4840,D1
00029FD0 <AmiBlitz3.ab2@13192>   OR.w regnum,D1
00029FD4 <AmiBlitz3.ab2@13193> BRA.w writeword
00029FD8 <AmiBlitz3.ab2@13197> BRA.w JL_0_96D0
00029FDC <AmiBlitz3.ab2@13201>   BSR.w JL_0_96D0
00029FE0 <AmiBlitz3.ab2@13202> BRA.w convert_word_to_long
00029FE2 <AmiBlitz3.ab2@13207>   MOVEQ #0,d0
00029FE8 <AmiBlitz3.ab2@13208>   MOVE.w regnum,d0
00029FEA <AmiBlitz3.ab2@13209>   ASL.l #7,d0
00029FF0 <AmiBlitz3.ab2@13210>   MOVE.l #$f2004000,d1
00029FF2 <AmiBlitz3.ab2@13211>   OR.l d0,d1
00029FF4 <AmiBlitz3.ab2@13212>   ASL.l #1,d0
00029FF6 <AmiBlitz3.ab2@13213>   ASL.l #8,d0
00029FF8 <AmiBlitz3.ab2@13214>   OR.l d0,d1
00029FFC <AmiBlitz3.ab2@13215>   BSR writelong
0002A002 <AmiBlitz3.ab2@13216>   MOVE.w regnum,d0
0002A004 <AmiBlitz3.ab2@13217>   ASL.l #7,d0
0002A00A <AmiBlitz3.ab2@13218>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002A00C <AmiBlitz3.ab2@13219>   OR.w d0,d1
0002A010 <AmiBlitz3.ab2@13220>   BSR writelong
0002A016 <AmiBlitz3.ab2@13221>   MOVE.l #$37800000,d1
0002A01A <AmiBlitz3.ab2@13222>   BSR writelong
0002A01C <AmiBlitz3.ab2@13223> RTS
0002A022 <AmiBlitz3.ab2@13227>   TST.b iee
0002A026 <AmiBlitz3.ab2@13228>   BNE qtof
0002A02A <AmiBlitz3.ab2@13229>   MOVE.w #$D300,D1
0002A02C <AmiBlitz3.ab2@13232>   MOVE.w D1,-(A7)
0002A030 <AmiBlitz3.ab2@13233>    BSR.w JL_0_AD40
0002A032 <AmiBlitz3.ab2@13234>   MOVE.l D4,D1
0002A036 <AmiBlitz3.ab2@13235>    BSR.w JL_0_AD38
0002A03A <AmiBlitz3.ab2@13236>    BSR.w JL_0_A352
0002A03C <AmiBlitz3.ab2@13237>   MOVE.w (A7)+,D1
0002A040 <AmiBlitz3.ab2@13238>    BSR.w Atokejsr
0002A044 <AmiBlitz3.ab2@13239>    BSR.w JL_0_A36E
0002A046 <AmiBlitz3.ab2@13240>   MOVE.l D5,D1
0002A04A <AmiBlitz3.ab2@13241> BRA.w JL_0_AD38
0002A04C <AmiBlitz3.ab2@13245> RTS
0002A052 <AmiBlitz3.ab2@13248>   TST.b typecheck
0002A056 <AmiBlitz3.ab2@13249>   BEQ 'l1
0002A05C <AmiBlitz3.ab2@13250>   TST.b notypecheck
0002A060 <AmiBlitz3.ab2@13251>   BNE 'l1
0002A066 <AmiBlitz3.ab2@13252>   TST.l lasttoken
0002A06C <AmiBlitz3.ab2@13257>   TST.b iee
0002A070 <AmiBlitz3.ab2@13258>   BNE ftol
0002A074 <AmiBlitz3.ab2@13259>   MOVE.w #$C31A,D1
0002A078 <AmiBlitz3.ab2@13260>   BSR.w JL_0_963A
0002A07C <AmiBlitz3.ab2@13261>   BSR.w JL_0_974A
0002A080 <AmiBlitz3.ab2@13262> BRA.w convert_long_to_byte
0002A082 <AmiBlitz3.ab2@13266> RTS
0002A088 <AmiBlitz3.ab2@13269>   TST.b typecheck
0002A08C <AmiBlitz3.ab2@13270>   BEQ 'l1
0002A092 <AmiBlitz3.ab2@13271>   TST.b notypecheck
0002A096 <AmiBlitz3.ab2@13272>   BNE 'l1
0002A09C <AmiBlitz3.ab2@13273>   TST.l lasttoken
0002A0A2 <AmiBlitz3.ab2@13278>   TST.b iee
0002A0A6 <AmiBlitz3.ab2@13279>   BNE ftol
0002A0AA <AmiBlitz3.ab2@13280>   MOVE.w #$C31B,D1
0002A0AE <AmiBlitz3.ab2@13281>   BSR.w JL_0_963A
0002A0B2 <AmiBlitz3.ab2@13282>   BSR.w JL_0_974A
0002A0B6 <AmiBlitz3.ab2@13283> BRA.w convert_long_to_word
0002A0B8 <AmiBlitz3.ab2@13287> RTS
0002A0BE <AmiBlitz3.ab2@13290>   TST.b iee
0002A0C2 <AmiBlitz3.ab2@13291>   BNE ftol
0002A0C6 <AmiBlitz3.ab2@13292>   MOVE.w #$C31C,D1
0002A0CA <AmiBlitz3.ab2@13293>   BSR.w JL_0_963A
0002A0CE <AmiBlitz3.ab2@13296>   MOVE.w #$FFE2,D1
0002A0D2 <AmiBlitz3.ab2@13297> BRA.w JL_0_9604
0002A0D4 <AmiBlitz3.ab2@13300>   MOVE.l d0,-(a7)
0002A0D6 <AmiBlitz3.ab2@13301>   MOVEQ #0,d0
0002A0DC <AmiBlitz3.ab2@13302>   MOVE.w regnum,d0
0002A0DE <AmiBlitz3.ab2@13303>   ASL.l #7,d0
0002A0E4 <AmiBlitz3.ab2@13304>   MOVE.l #$f2006000,d1
0002A0E6 <AmiBlitz3.ab2@13305>   OR.l d0,d1
0002A0E8 <AmiBlitz3.ab2@13306>   ASL.l #1,d0
0002A0EA <AmiBlitz3.ab2@13307>   ASL.l #8,d0
0002A0EC <AmiBlitz3.ab2@13308>   OR.l d0,d1
0002A0EE <AmiBlitz3.ab2@13309>   MOVE.l (a7)+,d0
0002A0F2 <AmiBlitz3.ab2@13310> BRA writelong
0002A0F4 <AmiBlitz3.ab2@13314>   MOVE.l d0,-(a7)
0002A0F6 <AmiBlitz3.ab2@13315>   MOVEQ #0,d0
0002A0FC <AmiBlitz3.ab2@13316>   MOVE.l #$f23c4023,d1
0002A102 <AmiBlitz3.ab2@13317>   MOVE.w regnum,d0
0002A104 <AmiBlitz3.ab2@13318>   ASL.l #7,d0
0002A106 <AmiBlitz3.ab2@13319>   OR.l d0,d1
0002A10A <AmiBlitz3.ab2@13320>   BSR writelong
0002A110 <AmiBlitz3.ab2@13321>   MOVE.l #$00010000,d1
0002A114 <AmiBlitz3.ab2@13322>   BSR writelong
0002A11A <AmiBlitz3.ab2@13323>   MOVE.w regnum,d0
0002A11C <AmiBlitz3.ab2@13324>   ASL.l #7,d0
0002A122 <AmiBlitz3.ab2@13325>   MOVE.l #$f2006000,d1
0002A124 <AmiBlitz3.ab2@13326>   OR.l d0,d1
0002A126 <AmiBlitz3.ab2@13327>   ASL.l #1,d0
0002A128 <AmiBlitz3.ab2@13328>   ASL.l #8,d0
0002A12A <AmiBlitz3.ab2@13329>   OR.l d0,d1
0002A12E <AmiBlitz3.ab2@13330>   BSR writelong
0002A130 <AmiBlitz3.ab2@13331>   MOVE.l (a7)+,d0
0002A132 <AmiBlitz3.ab2@13332> RTS
0002A134 <AmiBlitz3.ab2@13336> RTS
0002A13A <AmiBlitz3.ab2@13340>   TST.b iee
0002A13E <AmiBlitz3.ab2@13341>   BNE ftoq
0002A142 <AmiBlitz3.ab2@13342>   MOVE.w #$C31B,D1
0002A146 <AmiBlitz3.ab2@13343>   BSR.w JL_0_963A
0002A14A <AmiBlitz3.ab2@13344>   MOVE.w #$D301,D1
0002A14E <AmiBlitz3.ab2@13345> BRA.w JL_0_96FC
0002A154 <AmiBlitz3.ab2@13351>    TST.b blitzparloop
0002A158 <AmiBlitz3.ab2@13352>    BNE 'l1
0002A15E <AmiBlitz3.ab2@13353>    TST.b funcparloop
0002A162 <AmiBlitz3.ab2@13354>    BNE 'l1
0002A166 <AmiBlitz3.ab2@13355>    BRA error_convert_types
0002A16E <AmiBlitz3.ab2@13358>   CMP.b #2,optistring
0002A172 <AmiBlitz3.ab2@13359>   BEQ JLrts
0002A178 <AmiBlitz3.ab2@13360>   MOVE.w stol,D1
0002A17C <AmiBlitz3.ab2@13361>   BSR.w writeword
0002A184 <AmiBlitz3.ab2@13362>   CMPI.w #$2,sbgot
0002A188 <AmiBlitz3.ab2@13363>   BCS.w sbtolong
0002A18C <AmiBlitz3.ab2@13364>   MOVE.w ceos(PC),D1
0002A190 <AmiBlitz3.ab2@13365>   BSR.w writeword
0002A196 <AmiBlitz3.ab2@13368>   MOVE.w regnum,D1
0002A198 <AmiBlitz3.ab2@13369>   LSL.w #8,D1
0002A19A <AmiBlitz3.ab2@13370>   LSL.w #1,D1
0002A1A2 <AmiBlitz3.ab2@13371>   CMPI.w #$2,sbgot
0002A1A6 <AmiBlitz3.ab2@13372>   BCS.w JL_0_98E8
0002A1AC <AmiBlitz3.ab2@13373>   MOVE.w a2offset,D3
0002A1B2 <AmiBlitz3.ab2@13374>   SUB.w thisstuse,D3
0002A1B6 <AmiBlitz3.ab2@13375>   CMP.w #$6,D3
0002A1BA <AmiBlitz3.ab2@13376>   BNE.w JL_0_98D4b
0002A1C0 <AmiBlitz3.ab2@13377>   OR.w movestst2,D1
0002A1C4 <AmiBlitz3.ab2@13378>   BSR.w writeword
0002A1CA <AmiBlitz3.ab2@13379>   LEA movestst2+2,A0
0002A1D0 <AmiBlitz3.ab2@13380>   LEA movestst2f,A1
0002A1D4 <AmiBlitz3.ab2@13381> BRA.w pokecode2
0002A1DA <AmiBlitz3.ab2@13385>   OR.w movea7dn,D1
0002A1DE <AmiBlitz3.ab2@13386>   BSR.w writeword
0002A1E4 <AmiBlitz3.ab2@13387>   MOVE.l #0,D1
0002A1E8 <AmiBlitz3.ab2@13388> BRA.w writeword
0002A1EE <AmiBlitz3.ab2@13392>   ADDQ.w #1,fuckpos
0002A1F2 <AmiBlitz3.ab2@13393>   BSR.w writeconvertcode
0002A1F8 <AmiBlitz3.ab2@13394>   SUBQ.w #1,fuckpos
0002A1FA <AmiBlitz3.ab2@13396> RTS
0002A1FC <AmiBlitz3.ab2@13400>   MOVE.w D3,D1
0002A200 <AmiBlitz3.ab2@13401>   CMP.w #7,d1
0002A204 <AmiBlitz3.ab2@13402>   BLE 'ok
0002A20A <AmiBlitz3.ab2@13403>   JMP errorinternalconvert
0002A20C <AmiBlitz3.ab2@13404> 'ok  SUBQ.w #1,D1
0002A210 <AmiBlitz3.ab2@13405>   MULU #$7,D1
0002A212 <AmiBlitz3.ab2@13406>   ADD.w D2,D1
0002A214 <AmiBlitz3.ab2@13407>   SUBQ.w #1,D1
0002A216 <AmiBlitz3.ab2@13408>   LSL.w #2,D1
0002A21C <AmiBlitz3.ab2@13409>   LEA convtable,A0
0002A220 <AmiBlitz3.ab2@13410>   MOVE.l $0(A0,D1.W),D1
0002A224 <AmiBlitz3.ab2@13411>   BEQ.w JL_0_97A2
0002A226 <AmiBlitz3.ab2@13412>     MOVEA.l D1,A0
0002A22A <AmiBlitz3.ab2@13413>     CMP.b #$ff,d3
0002A22E <AmiBlitz3.ab2@13414>     BEQ JL_0_97A2
0002A230 <AmiBlitz3.ab2@13415> JMP (A0)
0002A232 <AmiBlitz3.ab2@13418> RTS
0002A236 <AmiBlitz3.ab2@13421> usedfrom:  Ds.l 1
0002A23A <AmiBlitz3.ab2@13428>   CMP.w #"\",D0
0002A23E <AmiBlitz3.ab2@13429>   BNE.w JL_0_97C2
0002A242 <AmiBlitz3.ab2@13430>     CMP.b #"\",(a5)
0002A246 <AmiBlitz3.ab2@13431>     BNE 'first
0002A24C <AmiBlitz3.ab2@13432>       MOVE.l A5,usedfrom
0002A252 <AmiBlitz3.ab2@13433>       LEA path2,A5
0002A256 <AmiBlitz3.ab2@13434> BRA 'g1
0002A258 <AmiBlitz3.ab2@13437>     SUBQ.w #1,A5
0002A25E <AmiBlitz3.ab2@13438>   MOVE.l A5,usedfrom
0002A264 <AmiBlitz3.ab2@13439>   LEA usedpath,A5                                          ;read path
0002A268 <AmiBlitz3.ab2@13442>   BSR.w get1bytemain
0002A26E <AmiBlitz3.ab2@13445>   CLR.w flagmask
0002A272 <AmiBlitz3.ab2@13446>   CMP.w #$2A,D0
0002A276 <AmiBlitz3.ab2@13447>    BNE.w JL_0_983A
0002A27E <AmiBlitz3.ab2@13448>   MOVE.w #$0001,flagmask
0002A282 <AmiBlitz3.ab2@13450>    BSR.w getparameter2
0002A286 <AmiBlitz3.ab2@13453>    BEQ.w syntaxerr
0002A28A <AmiBlitz3.ab2@13454>   CMP.w #$28,D0
0002A28E <AmiBlitz3.ab2@13455>    BEQ.w JL_0_9830
0002A292 <AmiBlitz3.ab2@13456>   CMP.w #$2E,D0
0002A296 <AmiBlitz3.ab2@13457>    BEQ.w JL_0_980C
0002A29A <AmiBlitz3.ab2@13458>   CMP.w #$24,D0
0002A29E <AmiBlitz3.ab2@13459>    BNE.w JL_0_9838
0002A2A6 <AmiBlitz3.ab2@13460>   ORI.w #$8,flagmask
0002A2AA <AmiBlitz3.ab2@13461>    BSR.w storeloc
0002A2AE <AmiBlitz3.ab2@13462>    BSR.w get1bytemain
0002A2B2 <AmiBlitz3.ab2@13463> BRA.w JL_0_9822
0002A2B6 <AmiBlitz3.ab2@13467>   BSR.w storeloc
0002A2B8 <AmiBlitz3.ab2@13468>   MOVE.w D2,-(A7)
0002A2BE <AmiBlitz3.ab2@13469>   LEA namebuff2,A1
0002A2C2 <AmiBlitz3.ab2@13470>    BSR.w makename3
0002A2C6 <AmiBlitz3.ab2@13471>    BEQ.w syntaxerr
0002A2C8 <AmiBlitz3.ab2@13472>   MOVE.w (A7)+,D2
0002A2CA <AmiBlitz3.ab2@13475>    MOVE.w D0,D1
0002A2CE <AmiBlitz3.ab2@13476>    BSR.w resloc
0002A2D2 <AmiBlitz3.ab2@13477>    CMP.w #$28,D1
0002A2D6 <AmiBlitz3.ab2@13478>    BNE.w JL_0_9838
0002A2DE <AmiBlitz3.ab2@13481>   ORI.w #$2,flagmask
0002A2E0 <AmiBlitz3.ab2@13484> RTS
0002A2E4 <AmiBlitz3.ab2@13488>   CMP.w #$40,D0
0002A2E8 <AmiBlitz3.ab2@13489>    BNE.w JL_0_984E
0002A2F0 <AmiBlitz3.ab2@13490>   MOVE.w #$0005,flagmask
0002A2F4 <AmiBlitz3.ab2@13491> BRA.w JL_0_97D8
0002A2F8 <AmiBlitz3.ab2@13495>   BSR.w makename2
0002A2FC <AmiBlitz3.ab2@13496> BRA.w JL_0_97DC
0002A300 <AmiBlitz3.ab2@13500>   MOVE.w #$FED3,D1
0002A304 <AmiBlitz3.ab2@13501>    BSR.w uselib
0002A30A <AmiBlitz3.ab2@13502>   LEA pusha3,A0
0002A310 <AmiBlitz3.ab2@13503>   LEA pusha3f,A1
0002A314 <AmiBlitz3.ab2@13504> BRA.w pokecode
0002A318 <AmiBlitz3.ab2@13508>   MOVE.w #$FED3,D1
0002A31C <AmiBlitz3.ab2@13509>    BSR.w uselib
0002A322 <AmiBlitz3.ab2@13510>   LEA pulla3,A0
0002A328 <AmiBlitz3.ab2@13511>   LEA pulla3f,A1
0002A32C <AmiBlitz3.ab2@13512> BRA.w pokecode
0002A32E <AmiBlitz3.ab2@13516> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002A336 <AmiBlitz3.ab2@13521>     CMP.b #2,optistring
0002A33A <AmiBlitz3.ab2@13522>    BEQ 'l10
0002A33E <AmiBlitz3.ab2@13523>    MOVE.w ceos(PC),D1
0002A342 <AmiBlitz3.ab2@13524>    BSR.w writeword                                         ;clr.b (a3)
0002A348 <AmiBlitz3.ab2@13527>   MOVE.w regnum,D1
0002A34A <AmiBlitz3.ab2@13528>   LSL.w #8,D1
0002A34C <AmiBlitz3.ab2@13529>   LSL.w #1,D1
0002A354 <AmiBlitz3.ab2@13530>   CMPI.w #$2,sbgot
0002A358 <AmiBlitz3.ab2@13531>    BCS.w JL_0_98E8
0002A35E <AmiBlitz3.ab2@13532>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002A364 <AmiBlitz3.ab2@13533>   SUB.w thisstuse,D3
0002A368 <AmiBlitz3.ab2@13534>   CMP.w #$6,D3
0002A36C <AmiBlitz3.ab2@13535>    BNE.w JL_0_98D4
0002A372 <AmiBlitz3.ab2@13536>   OR.w movestst2,D1
0002A376 <AmiBlitz3.ab2@13537>    BSR.w writeword
0002A37C <AmiBlitz3.ab2@13538>   LEA movestst2+2,A0
0002A382 <AmiBlitz3.ab2@13539>   LEA movestst2f,A1
0002A386 <AmiBlitz3.ab2@13540> BRA.w pokecode2
0002A38C <AmiBlitz3.ab2@13544>    OR.w movea7dn,D1
0002A390 <AmiBlitz3.ab2@13545>    BSR.w writeword
0002A396 <AmiBlitz3.ab2@13546>   MOVE.l movea7dn+2,D1
0002A39A <AmiBlitz3.ab2@13558>   BSR writelong
0002A3A2 <AmiBlitz3.ab2@13561>    CMP.w #6,regnum
0002A3A6 <AmiBlitz3.ab2@13562>    BEQ 'l1
0002A3AC <AmiBlitz3.ab2@13563>    TST.w stackpar
0002A3B0 <AmiBlitz3.ab2@13564>    BNE 'l1
0002A3B6 <AmiBlitz3.ab2@13565>    TST.b funcparloop
0002A3BA <AmiBlitz3.ab2@13566>    BEQ 'l1
0002A3C0 <AmiBlitz3.ab2@13567>    MOVE.l #$48780000,d1
0002A3C4 <AmiBlitz3.ab2@13568>    BSR writelong
0002A3C6 <AmiBlitz3.ab2@13572> RTS
0002A3C8 <AmiBlitz3.ab2@13577>      MOVE.l d1,-(a7)
0002A3D0 <AmiBlitz3.ab2@13578>      CMP.w #6,regnum
0002A3D4 <AmiBlitz3.ab2@13579>      BEQ 'l1
0002A3DA <AmiBlitz3.ab2@13580>      TST.w stackpar
0002A3DE <AmiBlitz3.ab2@13581>      BNE 'l1
0002A3E4 <AmiBlitz3.ab2@13582>      TST.b funcparloop
0002A3E8 <AmiBlitz3.ab2@13583>      BEQ 'l1
0002A3EE <AmiBlitz3.ab2@13584>      MOVE.l #$48780000,d1
0002A3F2 <AmiBlitz3.ab2@13585>      BSR writelong
0002A3F4 <AmiBlitz3.ab2@13588>      MOVE.l (a7)+,d1
0002A3FA <AmiBlitz3.ab2@13590>    OR.w movestdn,D1
0002A3FE <AmiBlitz3.ab2@13591>    BSR.w writeword
0002A402 <AmiBlitz3.ab2@13592>   MOVE.w #$FED3,D1
0002A406 <AmiBlitz3.ab2@13593>    BSR.w uselib
0002A40A <AmiBlitz3.ab2@13594>   MOVE.w $A(A1),D1
0002A40E <AmiBlitz3.ab2@13595> BRA.w writeword
0002A410 <AmiBlitz3.ab2@13598> unknown:    Ds.w 1
0002A416 <AmiBlitz3.ab2@13601> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002A41A <AmiBlitz3.ab2@13602> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002A420 <AmiBlitz3.ab2@13603>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002A426 <AmiBlitz3.ab2@13609>   TST.b debugmode
0002A42A <AmiBlitz3.ab2@13610>   BEQ.w sharreval
0002A42E <AmiBlitz3.ab2@13611>  BSR.w arreval
0002A432 <AmiBlitz3.ab2@13614>   MOVE.w somecode(PC),D1
0002A438 <AmiBlitz3.ab2@13615>   OR.w regnum,D1
0002A43C <AmiBlitz3.ab2@13616>    BSR.w writeword
0002A43E <AmiBlitz3.ab2@13617>   MOVEQ.l #$01,D1
0002A440 <AmiBlitz3.ab2@13618>   SWAP D1
0002A444 <AmiBlitz3.ab2@13619>    BSR.w writelong
0002A448 <AmiBlitz3.ab2@13620>   MOVE.l somecode2(PC),D1
0002A44C <AmiBlitz3.ab2@13621>    BSR.w writelong
0002A450 <AmiBlitz3.ab2@13622>   MOVE.w #$C309,D1
0002A454 <AmiBlitz3.ab2@13623> BRA.w Atokejsr
0002A456 <AmiBlitz3.ab2@13627>   MOVEQ.l #$02,D2
0002A458 <AmiBlitz3.ab2@13628>   MOVEQ.l #$00,D1
0002A45A <AmiBlitz3.ab2@13629>   MOVEQ.l #$00,D3
0002A45E <AmiBlitz3.ab2@13630> BRA.w maineval2
0002A460 <AmiBlitz3.ab2@13634>   MOVEQ.l #$03,D2
0002A462 <AmiBlitz3.ab2@13635>   MOVEQ.l #$00,D1
0002A464 <AmiBlitz3.ab2@13636>   MOVEQ.l #$00,D3
0002A46A <AmiBlitz3.ab2@13637>   MOVE.b notypecheck,-(a7)
0002A472 <AmiBlitz3.ab2@13638>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002A478 <AmiBlitz3.ab2@13639>   JSR maineval2
0002A47E <AmiBlitz3.ab2@13640>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002A480 <AmiBlitz3.ab2@13641>   RTS
0002A48A <AmiBlitz3.ab2@13645>   MOVE.w oldqflag,instringon
0002A490 <AmiBlitz3.ab2@13646>   MOVEA.l lastsourcepos,A5
0002A492 <AmiBlitz3.ab2@13647>   MOVEQ.l #-$01,D1
0002A494 <AmiBlitz3.ab2@13648>   MOVEQ.l #-$01,D3
0002A498 <AmiBlitz3.ab2@13649> BRA.w peval
0002A4A2 <AmiBlitz3.ab2@13654>   MOVE.w oldqflag,instringon
0002A4A8 <AmiBlitz3.ab2@13655>   MOVEA.l lastsourcepos,A5
0002A4AA <AmiBlitz3.ab2@13658>   MOVEQ.l #-$01,D1
0002A4AC <AmiBlitz3.ab2@13659>   MOVEQ.l #$00,D3
0002A4B2 <AmiBlitz3.ab2@13660>   MOVE.l leftsidetype,-(a7)
0002A4B8 <AmiBlitz3.ab2@13661>   MOVE.l rightsidetype,-(a7)
0002A4BE <AmiBlitz3.ab2@13662>   CLR.l leftsidetype
0002A4C4 <AmiBlitz3.ab2@13663>   CLR.l rightsidetype
0002A4CA <AmiBlitz3.ab2@13664>   JSR maineval
0002A4D0 <AmiBlitz3.ab2@13665>   MOVE.l (a7)+,rightsidetype
0002A4D6 <AmiBlitz3.ab2@13666>   MOVE.l (a7)+,leftsidetype
0002A4D8 <AmiBlitz3.ab2@13667>   RTS
0002A4E2 <AmiBlitz3.ab2@13671>   MOVE.w oldqflag,instringon
0002A4E8 <AmiBlitz3.ab2@13672>   MOVEA.l lastsourcepos,A5
0002A4EA <AmiBlitz3.ab2@13673>   MOVEQ.l #$00,D1
0002A4EC <AmiBlitz3.ab2@13674>   MOVEQ.l #-$01,D3
0002A4F0 <AmiBlitz3.ab2@13675> BRA.w maineval
0002A4F2 <AmiBlitz3.ab2@13679>   MOVEQ.l #$01,D1
0002A4F4 <AmiBlitz3.ab2@13680>   MOVEQ.l #-$01,D3
0002A4F8 <AmiBlitz3.ab2@13681> BRA.w maineval
0002A502 <AmiBlitz3.ab2@13686>   MOVE.w oldqflag,instringon
0002A508 <AmiBlitz3.ab2@13687>   MOVEA.l lastsourcepos,A5
0002A50A <AmiBlitz3.ab2@13690>   MOVEQ.l #$00,D1                                        ;no push
0002A50C <AmiBlitz3.ab2@13691>   MOVEQ.l #$00,D3
0002A514 <AmiBlitz3.ab2@13712>    CMPI.w #$6,regnum
0002A518 <AmiBlitz3.ab2@13713>    BCS.w maineval2
0002A51A <AmiBlitz3.ab2@13714>    MOVEQ #0,d1
0002A520 <AmiBlitz3.ab2@13715>    MOVE.l destpointer,a4
0002A526 <AmiBlitz3.ab2@13717>    CMPA.l destbufferend,A4
0002A52A <AmiBlitz3.ab2@13718>    BCC.w maineval__l2
0002A530 <AmiBlitz3.ab2@13720>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002A534 <AmiBlitz3.ab2@13722>    BNE maineval__l2
0002A538 <AmiBlitz3.ab2@13726> BRA maineval__l1
0002A53A <AmiBlitz3.ab2@13729>   MOVEQ.l #-$01,D1
0002A542 <AmiBlitz3.ab2@13732>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002A548 <AmiBlitz3.ab2@13735>   MOVE.w thisstuse,-(A7)
0002A552 <AmiBlitz3.ab2@13736>   MOVE.w a2offset,thisstuse
0002A558 <AmiBlitz3.ab2@13737>   MOVE.w stackpar,-(A7)
0002A55E <AmiBlitz3.ab2@13738>   MOVE.w D1,stackpar
0002A564 <AmiBlitz3.ab2@13739>   MOVE.w sbgot,-(A7)
0002A56A <AmiBlitz3.ab2@13740>   CLR.w sbgot
0002A56E <AmiBlitz3.ab2@13741>   MOVE.w unknown(PC),-(A7)
0002A574 <AmiBlitz3.ab2@13742>   MOVE.w D3,unknown
0002A576 <AmiBlitz3.ab2@13743>   MOVE.w D2,-(a7)
0002A57C <AmiBlitz3.ab2@13744>   MOVE.w d2,mode
0002A580 <AmiBlitz3.ab2@13745>    BSR.w eval3
0002A582 <AmiBlitz3.ab2@13746>   MOVE.w (a7)+,d3
0002A586 <AmiBlitz3.ab2@13747>    BEQ.w maineval__noconv
0002A58A <AmiBlitz3.ab2@13748>   MOVE.w unknown(PC),D1
0002A58E <AmiBlitz3.ab2@13749>    BNE.w maineval__noconv
0002A590 <AmiBlitz3.ab2@13750>   EXG.l D2,D3
0002A592 <AmiBlitz3.ab2@13751>    MOVE.l a2,-(a7)
0002A598 <AmiBlitz3.ab2@13752>    TST.b curtemplabel
0002A59C <AmiBlitz3.ab2@13753>    BEQ maineval2__l10
0002A5A2 <AmiBlitz3.ab2@13754>    MOVE.l asmbuff,a2
0002A5A8 <AmiBlitz3.ab2@13755>    CMP.w #$c,$8(a2)
0002A5AC <AmiBlitz3.ab2@13756>    BEQ maineval2__l20
0002A5B2 <AmiBlitz3.ab2@13757>    CMP.w #$d,$8(a2)
0002A5B6 <AmiBlitz3.ab2@13758>    BEQ maineval2__l20
0002A5B8 <AmiBlitz3.ab2@13761>   CMP.w d2,d3
0002A5BC <AmiBlitz3.ab2@13762>   BEQ maineval2__l20
0002A5C0 <AmiBlitz3.ab2@13763>   BSR.w writeconvertcode
0002A5C6 <AmiBlitz3.ab2@13764>   CLR.b doimmediate
0002A5C8 <AmiBlitz3.ab2@13767>   MOVE.l (a7)+,a2
0002A5CE <AmiBlitz3.ab2@13770>   MOVE.w (A7)+,unknown
0002A5D4 <AmiBlitz3.ab2@13771>   MOVE.w stackpar,D1
0002A5D8 <AmiBlitz3.ab2@13772>    BEQ.w maineval__skipme
0002A5DC <AmiBlitz3.ab2@13773>    BMI.w maineval__skipme
0002A5E2 <AmiBlitz3.ab2@13777>   MOVE.w regnum,D1
0002A5E4 <AmiBlitz3.ab2@13778>   LSL.w #8,D1
0002A5E6 <AmiBlitz3.ab2@13779>   LSL.w #1,D1
0002A5EA <AmiBlitz3.ab2@13780>   CMP.w #$7,D2
0002A5EE <AmiBlitz3.ab2@13781>    BNE.w maineval__hi1
0002A5F6 <AmiBlitz3.ab2@13782>    CMP.b #2,optistring
0002A5FA <AmiBlitz3.ab2@13783>    BEQ maineval__hi1a
0002A5FC <AmiBlitz3.ab2@13784>   MOVE.w D1,-(A7)
0002A602 <AmiBlitz3.ab2@13785>   OR.w getstlen,D1
0002A606 <AmiBlitz3.ab2@13786>    BSR.w writeword
0002A608 <AmiBlitz3.ab2@13787>   MOVE.w (A7)+,D1
0002A60E <AmiBlitz3.ab2@13790>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002A612 <AmiBlitz3.ab2@13794>   MOVE.w #$3f3c,d1
0002A616 <AmiBlitz3.ab2@13795>    BSR.w writeword
0002A618 <AmiBlitz3.ab2@13799>   MOVE.w d2,d1
0002A61E <AmiBlitz3.ab2@13800>   MOVE.w d1,libmode
0002A622 <AmiBlitz3.ab2@13801>    BSR.w writeword
0002A626 <AmiBlitz3.ab2@13802>   CMP.w #$7,D2
0002A62A <AmiBlitz3.ab2@13803>    BNE.w maineval__skipme
0002A630 <AmiBlitz3.ab2@13804>   MOVE.w putstlen,D1
0002A636 <AmiBlitz3.ab2@13805>   OR.w regnum,D1
0002A63A <AmiBlitz3.ab2@13806>    BSR.w writeword
0002A63E <AmiBlitz3.ab2@13809>    CMP.w #$7,D2
0002A642 <AmiBlitz3.ab2@13810>    BNE.w maineval__notst
0002A64A <AmiBlitz3.ab2@13821>    CMP.b #2,optistring
0002A64E <AmiBlitz3.ab2@13822>    BEQ maineval__skipme_l10
0002A654 <AmiBlitz3.ab2@13823>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002A658 <AmiBlitz3.ab2@13824>    BSR.w sbtolong
0002A65C <AmiBlitz3.ab2@13825> BRA.w maineval__notst2
0002A664 <AmiBlitz3.ab2@13829>     CMP.w #6,regnum
0002A668 <AmiBlitz3.ab2@13830>     BEQ maineval__skipme_l10_l1
0002A66E <AmiBlitz3.ab2@13831>     TST.b funcparloop
0002A672 <AmiBlitz3.ab2@13832>     BEQ maineval__skipme_l10_l1
0002A678 <AmiBlitz3.ab2@13833>     MOVE.l #$48780000,d1
0002A67C <AmiBlitz3.ab2@13834>     BSR writelong
0002A680 <AmiBlitz3.ab2@13837> BRA.w maineval__notst2
0002A686 <AmiBlitz3.ab2@13840>   ADDQ.w #2,a2offset
0002A68A <AmiBlitz3.ab2@13841> BRA maineval__skipme
0002A692 <AmiBlitz3.ab2@13844>   CMPI.w #$2,sbgot
0002A696 <AmiBlitz3.ab2@13845>    BCS.w maineval__notst2                                         ;correct stack
0002A69A <AmiBlitz3.ab2@13846>   MOVE.w ststfix(PC),D1
0002A69E <AmiBlitz3.ab2@13847>    BSR.w writeword
0002A6A4 <AmiBlitz3.ab2@13850>   MOVE.w (A7)+,sbgot
0002A6AA <AmiBlitz3.ab2@13851>   MOVE.w stackpar,D1
0002A6AE <AmiBlitz3.ab2@13852>    BPL.w maineval__skip
0002A6B2 <AmiBlitz3.ab2@13853>    CMP.b #7,d2
0002A6B6 <AmiBlitz3.ab2@13854>    BEQ maineval__notst2_l1
0002A6BC <AmiBlitz3.ab2@13855>   TST.b funcparloop
0002A6C0 <AmiBlitz3.ab2@13856>   BEQ maineval__notst2_l1
0002A6C4 <AmiBlitz3.ab2@13857>   CMP.b #5,d2
0002A6C8 <AmiBlitz3.ab2@13858>   BNE maineval__notst2_skip
0002A6CE <AmiBlitz3.ab2@13859>   TST.b fpu
0002A6D2 <AmiBlitz3.ab2@13860>   BEQ maineval__notst2_skip
0002A6D8 <AmiBlitz3.ab2@13861>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002A6DE <AmiBlitz3.ab2@13862>   JSR writelong
0002A6E2 <AmiBlitz3.ab2@13865>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002A6E8 <AmiBlitz3.ab2@13866>   ADD.w parnum,d1
0002A6EE <AmiBlitz3.ab2@13867>   JSR Atokejsr
0002A6F4 <AmiBlitz3.ab2@13868>    TST.w dontwrite
0002A6F8 <AmiBlitz3.ab2@13869>    BNE maineval__notst2_l1
0002A6FE <AmiBlitz3.ab2@13870>    MOVE.l data1start,d1
0002A704 <AmiBlitz3.ab2@13871>    MOVE.l destpointer,a4
0002A708 <AmiBlitz3.ab2@13872>    ADD.l d1,-4(a4)
0002A70E <AmiBlitz3.ab2@13873>    MOVE.l destpointer,d1
0002A710 <AmiBlitz3.ab2@13874>    SUBQ.l #4,d1
0002A716 <AmiBlitz3.ab2@13875>    SUB.l destbufferstart,d1
0002A718 <AmiBlitz3.ab2@13876>    MOVE.l d2,-(a7)
0002A71A <AmiBlitz3.ab2@13877>    MOVE.l d1,d2
0002A720 <AmiBlitz3.ab2@13878>    JSR addhunkoffset
0002A722 <AmiBlitz3.ab2@13879>    MOVE.l (a7)+,d2
0002A726 <AmiBlitz3.ab2@13880> BRA maineval__skip
0002A72C <AmiBlitz3.ab2@13883>   ADDQ.w #2,a2offset
0002A732 <AmiBlitz3.ab2@13884>   MOVE.w pushd0wd,D1
0002A736 <AmiBlitz3.ab2@13885>   CMP.w #$3,D2                                             ;write parameter to stack
0002A73A <AmiBlitz3.ab2@13886>    BCS.w maineval__ok
0002A740 <AmiBlitz3.ab2@13887>   ADDQ.w #2,a2offset
0002A746 <AmiBlitz3.ab2@13888>   TST.b fpu
0002A74A <AmiBlitz3.ab2@13889>   BEQ maineval__notst2_nofpu
0002A74E <AmiBlitz3.ab2@13890>   CMP.w #5,d2
0002A752 <AmiBlitz3.ab2@13891>   BNE maineval__notst2_nofpu
0002A754 <AmiBlitz3.ab2@13892>   MOVEQ #0,d1
0002A75A <AmiBlitz3.ab2@13893>   MOVE.w regnum,d1
0002A75C <AmiBlitz3.ab2@13894>   ASL.l #7,d1
0002A762 <AmiBlitz3.ab2@13895>   OR.l #$f2276400,d1
0002A766 <AmiBlitz3.ab2@13896>   BSR writelong
0002A76A <AmiBlitz3.ab2@13897> BRA maineval__skip
0002A770 <AmiBlitz3.ab2@13900>   MOVE.w pushd0l,D1
0002A776 <AmiBlitz3.ab2@13903>    OR.w regnum,D1
0002A77A <AmiBlitz3.ab2@13904>    BSR.w writeword                                         ;nat
0002A780 <AmiBlitz3.ab2@13907>   MOVE.w (A7)+,stackpar
0002A786 <AmiBlitz3.ab2@13908>   MOVE.w (A7)+,thisstuse
0002A788 <AmiBlitz3.ab2@13909> RTS
0002A78A <AmiBlitz3.ab2@13912> thisstuse: Ds.w 1
0002A78C <AmiBlitz3.ab2@13915> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002A78E <AmiBlitz3.ab2@13916> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002A792 <AmiBlitz3.ab2@13921>   BSR.w eval4
0002A79C <AmiBlitz3.ab2@13922>   SUBI.l #$12,forthsp
0002A79E <AmiBlitz3.ab2@13923> RTS
0002A7A0 <AmiBlitz3.ab2@13927>   MOVEQ.l #$01,D1
0002A7A4 <AmiBlitz3.ab2@13929>       MOVEA.l precsp(PC),A1
0002A7A6 <AmiBlitz3.ab2@13930>       MOVE.l A0,(A1)+
0002A7A8 <AmiBlitz3.ab2@13931>       MOVE.w D1,(A1)+
0002A7AE <AmiBlitz3.ab2@13932>       MOVE.l A1,precsp
0002A7B2 <AmiBlitz3.ab2@13933>    BSR.w calcloop
0002A7B4 <AmiBlitz3.ab2@13934>   TST.w D1
0002A7B8 <AmiBlitz3.ab2@13935>    BNE.w syntaxerr
0002A7BE <AmiBlitz3.ab2@13936>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002A7C0 <AmiBlitz3.ab2@13937> RTS
0002A7C4 <AmiBlitz3.ab2@13942>   BSR.w JL_0_9C24
0002A7C8 <AmiBlitz3.ab2@13945>   MOVEA.l precsp(PC),A1
0002A7CA <AmiBlitz3.ab2@13946>   CMP.w -(A1),D1
0002A7CE <AmiBlitz3.ab2@13947>    BHI.w JL_0_9B0A
0002A7D0 <AmiBlitz3.ab2@13948> RTS
0002A7D4 <AmiBlitz3.ab2@13953>   MOVEA.l precsp(PC),A1
0002A7D6 <AmiBlitz3.ab2@13954>   MOVE.l A0,(A1)+
0002A7D8 <AmiBlitz3.ab2@13955>   MOVE.w D1,(A1)+
0002A7DE <AmiBlitz3.ab2@13956>   MOVE.l A1,precsp
0002A7E0 <AmiBlitz3.ab2@13957>   MOVE.w D2,-(A7)
0002A7E6 <AmiBlitz3.ab2@13958>   ADDQ.w #1,regnum
0002A7EA <AmiBlitz3.ab2@13959>    BSR.w calcloop               ;constant optimizer
0002A7F0 <AmiBlitz3.ab2@13960>   SUBQ.w #1,regnum
0002A7F2 <AmiBlitz3.ab2@13961>   MOVE.w (A7)+,D3
0002A7F6 <AmiBlitz3.ab2@13962>   MOVEM.l D1/A0,-(A7)
0002A7FA <AmiBlitz3.ab2@13963>    BEQ.w JL_0_9B2E
0002A7FE <AmiBlitz3.ab2@13964>    BSR.w JL_0_9770
0002A802 <AmiBlitz3.ab2@13967>   BSR.w popprec
0002A806 <AmiBlitz3.ab2@13968>   BSR.w writecode
0002A80A <AmiBlitz3.ab2@13969>   MOVEA.l forthsp(PC),A0
0002A80E <AmiBlitz3.ab2@13970>   MOVE.w -$2(A0),D1
0002A812 <AmiBlitz3.ab2@13971>   OR.w -$14(A0),D1
0002A816 <AmiBlitz3.ab2@13972>   MOVE.w D1,-$14(A0)
0002A81A <AmiBlitz3.ab2@13973>    BNE.w JL_0_9C0E
0002A820 <AmiBlitz3.ab2@13974>   MOVE.w dontwrite,D1
0002A824 <AmiBlitz3.ab2@13975>    BNE.w JL_0_9C0E
0002A828 <AmiBlitz3.ab2@13976>    MOVEA.l -$24(A0),A0
0002A964 <AmiBlitz3.ab2@13978>  !newcalc
0002A968 <AmiBlitz3.ab2@13979>    BEQ 'l10
0002A96C <AmiBlitz3.ab2@13980>    MOVEA.l forthsp(PC),A0
0002A974 <AmiBlitz3.ab2@13981>    MOVE.w -$18(A0),lasta6
0002A97C <AmiBlitz3.ab2@13982>    MOVE.l -$1C(A0),lasta6
0002A980 <AmiBlitz3.ab2@13983>    MOVEA.l -$24(A0),A0
0002A986 <AmiBlitz3.ab2@13984>    MOVE.l A0,destpointer
0002A98C <AmiBlitz3.ab2@13985>    MOVEA.l _mathffpbase,A6
0002A992 <AmiBlitz3.ab2@13986>    MOVEA.l ffplib,A1
0002A996 <AmiBlitz3.ab2@13987> BRA cont1
0002A99A <AmiBlitz3.ab2@13990>   MOVE.w #$2000,D1
0002A9A0 <AmiBlitz3.ab2@13991>   OR.w regnum,D1
0002A9A4 <AmiBlitz3.ab2@13992>    BSR.w writeword
0002A9A6 <AmiBlitz3.ab2@13993>     MOVEQ #0,d1
0002A9AC <AmiBlitz3.ab2@13994>     MOVE.w regnum,D1
0002A9AE <AmiBlitz3.ab2@13995>     ASL.l #8,d1
0002A9B0 <AmiBlitz3.ab2@13996>     ASL.l #2,d1
0002A9B6 <AmiBlitz3.ab2@13997>     OR.l #$f2000000,d1
0002A9BA <AmiBlitz3.ab2@13998>     BSR writelong
0002A9BE <AmiBlitz3.ab2@13999>   MOVE.w #$4E75,D1
0002A9C2 <AmiBlitz3.ab2@14000>    BSR.w writeword
0002A9CA <AmiBlitz3.ab2@14001>   MOVE.w -$18(A0),lasta6
0002A9D2 <AmiBlitz3.ab2@14002>   MOVE.l -$1C(A0),lasta6
0002A9D6 <AmiBlitz3.ab2@14003>   MOVEA.l -$24(A0),A0
0002A9DC <AmiBlitz3.ab2@14004>   MOVE.l A0,destpointer
0002A9E0 <AmiBlitz3.ab2@14005>   MOVEM.l D2/A5,-(A7)
0002A9E6 <AmiBlitz3.ab2@14006>   MOVEA.l _mathffpbase,A6
0002A9EC <AmiBlitz3.ab2@14007>   MOVEA.l ffplib,A1
0002A9F0 <AmiBlitz3.ab2@14008>   MOVE.w $A(A1),D0
0002A9F6 <AmiBlitz3.ab2@14009>   LEA _mathffpbase,A5
0002A9F8 <AmiBlitz3.ab2@14010>   SUBA.w D0,A5
0002A9FE <AmiBlitz3.ab2@14011>   JSR Aclearcache                                          ;neg +
0002AA04 <AmiBlitz3.ab2@14012>   CLR.l load_var_addr
0002AA0A <AmiBlitz3.ab2@14013>   CLR.l imm_addr
0002AA10 <AmiBlitz3.ab2@14014>   TST.w dontwrite
0002AA14 <AmiBlitz3.ab2@14015>   BNE '1
0002AA16 <AmiBlitz3.ab2@14016>   JSR (A0)                                                 ;calc constant inline expression
0002AA1A <AmiBlitz3.ab2@14019>   MOVEM.l (A7)+,D2/A5
0002AA20 <AmiBlitz3.ab2@14022>   MOVE.b d2,isconstantvalue
0002AA26 <AmiBlitz3.ab2@14023>   MOVE.l d0,lastconstantvalue
0002AA2C <AmiBlitz3.ab2@14024>   MOVE.w regnum,D1
0002AA2E <AmiBlitz3.ab2@14025>   LSL.w #8,D1
0002AA30 <AmiBlitz3.ab2@14026>   LSL.w #1,D1
0002AA34 <AmiBlitz3.ab2@14027>   ORI.w #$203C,D1
0002AA38 <AmiBlitz3.ab2@14028>   CMP.w #$3,D2
0002AA3C <AmiBlitz3.ab2@14029>    BCC.w JL_0_9BCE
0002AA40 <AmiBlitz3.ab2@14030>   ORI.w #$1000,D1
0002AA44 <AmiBlitz3.ab2@14031>    BSR.w writeword
0002AA46 <AmiBlitz3.ab2@14032>   MOVE.w D0,D1
0002AA4A <AmiBlitz3.ab2@14033>    BSR.w writeword
0002AA4E <AmiBlitz3.ab2@14034> BRA.w JL_0_9BD8
0002AA54 <AmiBlitz3.ab2@14038>   TST.b iee                                                ;fpu constant
0002AA58 <AmiBlitz3.ab2@14039>   BEQ 'l10
0002AA5C <AmiBlitz3.ab2@14040>   CMP.b #5,d2
0002AA60 <AmiBlitz3.ab2@14041>   BNE 'l10
0002AA62 <AmiBlitz3.ab2@14042>   MOVEQ #0,d1
0002AA68 <AmiBlitz3.ab2@14043>   MOVE.w regnum,D1
0002AA6A <AmiBlitz3.ab2@14044>   ASL.l #7,d1
0002AA70 <AmiBlitz3.ab2@14045>   OR.l #$f23c5400,d1
0002AA74 <AmiBlitz3.ab2@14046>   BSR writelong
0002AA76 <AmiBlitz3.ab2@14047>   SUBQ.l #8,a7
0002AA7C <AmiBlitz3.ab2@14048>   fmove.d fp0,0(a7)
0002AA7E <AmiBlitz3.ab2@14049>   MOVE.l (a7)+,d1
0002AA82 <AmiBlitz3.ab2@14050>   BSR writelong
0002AA84 <AmiBlitz3.ab2@14051>   MOVE.l (a7)+,d1
0002AA88 <AmiBlitz3.ab2@14052>   BSR writelong
0002AA8C <AmiBlitz3.ab2@14053> BRA JL_0_9BD8
0002AA90 <AmiBlitz3.ab2@14056>   BSR.w writeword
0002AA92 <AmiBlitz3.ab2@14057>   MOVE.l D0,D1
0002AA96 <AmiBlitz3.ab2@14058>   BSR.w writelong
0002AA9A <AmiBlitz3.ab2@14061>   MOVEA.l forthsp(PC),A0
0002AA9E <AmiBlitz3.ab2@14062>   MOVEA.l -$20(A0),A3
0002AAA4 <AmiBlitz3.ab2@14063>   MOVEA.l hunkoffsetbase,A2
0002AAAA <AmiBlitz3.ab2@14064>   MOVE.l A3,hunkoffsetbase
0002AAB0 <AmiBlitz3.ab2@14065>   MOVEA.l _execbase,A6
0002AAB2 <AmiBlitz3.ab2@14068>   CMPA.l A3,A2
0002AAB6 <AmiBlitz3.ab2@14069>   BEQ.w JL_0_9C0A
0002AABC <AmiBlitz3.ab2@14070>   SUBQ.l #1,hunkoffsetcounter
0002AABE <AmiBlitz3.ab2@14071>   MOVEA.l A2,A1
0002AAC0 <AmiBlitz3.ab2@14072>   MOVEA.l (A2),A2
0002AAC2 <AmiBlitz3.ab2@14073>   MOVEQ.l #$8,D0
0002AAC8 <AmiBlitz3.ab2@14074>   MOVE.l mempool2,a0
0002AACC <AmiBlitz3.ab2@14075>    JSR _FreePooled(A6)
0002AAD0 <AmiBlitz3.ab2@14076> BRA.w JL_0_9BF0
0002AAD4 <AmiBlitz3.ab2@14080>   MOVEA.l forthsp(PC),A0
0002AAD8 <AmiBlitz3.ab2@14083>   LEA -$12(A0),A0
0002AADE <AmiBlitz3.ab2@14084>   MOVE.l A0,forthsp
0002AAE2 <AmiBlitz3.ab2@14085>   MOVEM.l (A7)+,D1/A0
0002AAE6 <AmiBlitz3.ab2@14086>   BSR.w reget
0002AAEA <AmiBlitz3.ab2@14087> BRA.w JL_0_9AFE
0002AAEE <AmiBlitz3.ab2@14091>   BSR.w JL_0_A386
0002AAF0 <AmiBlitz3.ab2@14092>   TST.w d0
0002AAF4 <AmiBlitz3.ab2@14093>   BEQ JL_0_9C42
0002AAF8 <AmiBlitz3.ab2@14094>   CMP.b #",",d0
0002AAFC <AmiBlitz3.ab2@14095>   BEQ JL_0_9C42
0002AB00 <AmiBlitz3.ab2@14096>   CMP.b #"@",d0                                            ;expandline @@
0002AB04 <AmiBlitz3.ab2@14097>   BEQ JL_0_9C42
0002AB0A <AmiBlitz3.ab2@14098>   LEA operators,A0
0002AB0C <AmiBlitz3.ab2@14101>    TST.w (A0)
0002AB10 <AmiBlitz3.ab2@14102>    BEQ.w JL_0_9C42
0002AB12 <AmiBlitz3.ab2@14103>   CMP.w (A0),D0
0002AB16 <AmiBlitz3.ab2@14104>    BEQ.w JL_0_9C46a
0002AB1A <AmiBlitz3.ab2@14105>   LEA $20(A0),A0
0002AB1E <AmiBlitz3.ab2@14106> BRA.w JL_0_9C2E
0002AB20 <AmiBlitz3.ab2@14110>   MOVEQ.l #$00,D1
0002AB22 <AmiBlitz3.ab2@14111> RTS
0002AB26 <AmiBlitz3.ab2@14115>   CMP.w #$3C,D0
0002AB2A <AmiBlitz3.ab2@14116>    BNE.w JL_0_9C70
0002AB2E <AmiBlitz3.ab2@14117>    BSR.w get1bytemain
0002AB32 <AmiBlitz3.ab2@14118>   CMP.w #$3D,D0
0002AB36 <AmiBlitz3.ab2@14119>    BNE.w JL_0_9C64
0002AB3C <AmiBlitz3.ab2@14120>   LEA ople,A0
0002AB40 <AmiBlitz3.ab2@14121> BRA.w JL_0_9CCA
0002AB44 <AmiBlitz3.ab2@14125>   CMP.w #$3E,D0
0002AB48 <AmiBlitz3.ab2@14126>    BNE.w JL_0_9C96
0002AB4C <AmiBlitz3.ab2@14127> BRA.w JL_0_9CC4
0002AB50 <AmiBlitz3.ab2@14131>   CMP.w #$3E,D0
0002AB54 <AmiBlitz3.ab2@14132>    BNE.w JL_0_9C9E
0002AB58 <AmiBlitz3.ab2@14133>    BSR.w get1bytemain
0002AB5C <AmiBlitz3.ab2@14134>   CMP.w #$3D,D0
0002AB60 <AmiBlitz3.ab2@14135>    BNE.w JL_0_9C8E
0002AB66 <AmiBlitz3.ab2@14136>   LEA opge,A0
0002AB6A <AmiBlitz3.ab2@14137> BRA.w JL_0_9CCA
0002AB6E <AmiBlitz3.ab2@14141>   CMP.w #$3C,D0
0002AB72 <AmiBlitz3.ab2@14142>    BEQ.w JL_0_9CC4
0002AB7C <AmiBlitz3.ab2@14146>     MOVE.w oldqflag,instringon
0002AB82 <AmiBlitz3.ab2@14147>     MOVEA.l lastsourcepos,A5
0002AB86 <AmiBlitz3.ab2@14148> BRA.w JL_0_9CCA
0002AB8A <AmiBlitz3.ab2@14152>   CMP.w #$3D,D0
0002AB8E <AmiBlitz3.ab2@14153>    BNE.w JL_0_9CCA
0002AB92 <AmiBlitz3.ab2@14154>    BSR.w get1bytemain
0002AB96 <AmiBlitz3.ab2@14155>   CMP.w #$3E,D0
0002AB9A <AmiBlitz3.ab2@14156>    BNE.w JL_0_9CBC
0002ABA0 <AmiBlitz3.ab2@14157>   LEA opge,A0
0002ABA4 <AmiBlitz3.ab2@14158> BRA.w JL_0_9CCA
0002ABA8 <AmiBlitz3.ab2@14162>   CMP.w #$3C,D0
0002ABAC <AmiBlitz3.ab2@14163>   BNE.w JL_0_9C96
0002ABB2 <AmiBlitz3.ab2@14166>   LEA opne,A0
0002ABB6 <AmiBlitz3.ab2@14169>   MOVE.w $1E(A0),D1
0002ABB8 <AmiBlitz3.ab2@14170> RTS
0002ABBA <AmiBlitz3.ab2@14177>   MOVE.w d2,d1
0002ABBC <AmiBlitz3.ab2@14178>   SUBQ.w #1,D1
0002ABC0 <AmiBlitz3.ab2@14179>    BMI.w illoperr
0002ABC2 <AmiBlitz3.ab2@14180>   LSL.w #2,D1
0002ABC6 <AmiBlitz3.ab2@14181>   MOVE.l $2(A0,D1.W),D1
0002ABCA <AmiBlitz3.ab2@14182>    BEQ.w illoperr
0002ABCC <AmiBlitz3.ab2@14183>   MOVEA.l D1,A0
0002ABCE <AmiBlitz3.ab2@14186> JMP (A0)
0002ABD2 <AmiBlitz3.ab2@14202>   MOVEA.l precsp(PC),A1
0002ABD8 <AmiBlitz3.ab2@14203>   CMPA.l #precstackf,A1
0002ABDC <AmiBlitz3.ab2@14204>    BCC.w pserr
0002ABDE <AmiBlitz3.ab2@14205>   MOVE.w -(A1),D1
0002ABE0 <AmiBlitz3.ab2@14206>   MOVEA.l -(A1),A0
0002ABE6 <AmiBlitz3.ab2@14207>   MOVE.l A1,precsp
0002ABE8 <AmiBlitz3.ab2@14208> RTS
0002ABEC <AmiBlitz3.ab2@14211> precsp:      Dc.l precstack
0002ACE8 <AmiBlitz3.ab2@14212> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002AD6C <AmiBlitz3.ab2@14213>              Ds.l 33
0002AD6E <AmiBlitz3.ab2@14219> mseq:  SEQ D0
0002AD70 <AmiBlitz3.ab2@14220> msne:    SNE D0
0002AD72 <AmiBlitz3.ab2@14221> mslt:    SLT D0
0002AD74 <AmiBlitz3.ab2@14222> msle:    SLE D0
0002AD76 <AmiBlitz3.ab2@14223> msgt:    SGT D0
0002AD78 <AmiBlitz3.ab2@14224> msge:    SGE D0
0002AD7A <AmiBlitz3.ab2@14226> cmp0:    CMP.b D0,D0
0002AD7C <AmiBlitz3.ab2@14227> cmp1:    CMP.w D0,D0
0002AD7E <AmiBlitz3.ab2@14228> cmp2:    CMP.l D0,D0
0002AD82 <AmiBlitz3.ab2@14232>   MOVE.w cmp0(PC),D1
0002AD86 <AmiBlitz3.ab2@14233> BRA.w doeqcmp2                                            ;writecompare
0002AD8A <AmiBlitz3.ab2@14237>   MOVE.w cmp0(PC),D1
0002AD8E <AmiBlitz3.ab2@14238> BRA.w donecmp2
0002AD92 <AmiBlitz3.ab2@14242>   MOVE.w cmp0(PC),D1
0002AD96 <AmiBlitz3.ab2@14243> BRA.w doltcmp2
0002AD9A <AmiBlitz3.ab2@14247>   MOVE.w cmp0(PC),D1
0002AD9E <AmiBlitz3.ab2@14248> BRA.w dolecmp2
0002ADA2 <AmiBlitz3.ab2@14252>   MOVE.w cmp0(PC),D1
0002ADA6 <AmiBlitz3.ab2@14253> BRA.w dogtcmp2
0002ADAA <AmiBlitz3.ab2@14258>   MOVE.w cmp0(PC),D1
0002ADAE <AmiBlitz3.ab2@14259> BRA.w dogecmp2
0002ADB2 <AmiBlitz3.ab2@14263>   MOVE.w cmp1(PC),D1
0002ADB6 <AmiBlitz3.ab2@14264> BRA.w doeqcmp2
0002ADBA <AmiBlitz3.ab2@14268>   MOVE.w cmp1(PC),D1
0002ADBE <AmiBlitz3.ab2@14269> BRA.w donecmp2
0002ADC2 <AmiBlitz3.ab2@14273>   MOVE.w cmp1(PC),D1
0002ADC6 <AmiBlitz3.ab2@14274> BRA.w doltcmp2
0002ADCA <AmiBlitz3.ab2@14278>   MOVE.w cmp1(PC),D1
0002ADCE <AmiBlitz3.ab2@14279> BRA.w dolecmp2
0002ADD2 <AmiBlitz3.ab2@14283>   MOVE.w cmp1(PC),D1
0002ADD6 <AmiBlitz3.ab2@14284> BRA.w dogtcmp2
0002ADDA <AmiBlitz3.ab2@14289>   MOVE.w cmp1(PC),D1
0002ADDE <AmiBlitz3.ab2@14290> BRA.w dogecmp2
0002ADE2 <AmiBlitz3.ab2@14294>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002ADE6 <AmiBlitz3.ab2@14295> BRA doeqcmp2
0002ADEA <AmiBlitz3.ab2@14298>   MOVE.w cmp2(PC),D1
0002ADEE <AmiBlitz3.ab2@14299> BRA donecmp2
0002ADF2 <AmiBlitz3.ab2@14303>   MOVE.w cmp2(PC),D1
0002ADF6 <AmiBlitz3.ab2@14304> BRA.w doltcmp2
0002ADFA <AmiBlitz3.ab2@14308>   MOVE.w cmp2(PC),D1
0002ADFE <AmiBlitz3.ab2@14309> BRA.w dolecmp2
0002AE02 <AmiBlitz3.ab2@14313>   MOVE.w cmp2(PC),D1
0002AE06 <AmiBlitz3.ab2@14314> BRA.w dogtcmp2
0002AE0A <AmiBlitz3.ab2@14318>   MOVE.w cmp2(PC),D1
0002AE0E <AmiBlitz3.ab2@14319> BRA.w dogecmp2
0002AE10 <AmiBlitz3.ab2@14322> cfregat:  Ds.w 1
0002AE16 <AmiBlitz3.ab2@14326>   MOVE.w D1,libjsr+2
0002AE1A <AmiBlitz3.ab2@14327>    BSR.w JL_0_AD40
0002AE1C <AmiBlitz3.ab2@14328>   MOVE.l D4,D1
0002AE20 <AmiBlitz3.ab2@14329>    BSR.w JL_0_AD38
0002AE24 <AmiBlitz3.ab2@14330>   MOVE.w #$C900,D1
0002AE28 <AmiBlitz3.ab2@14331>    BSR.w Atokejsr
0002AE2C <AmiBlitz3.ab2@14332>    BSR.w JL_0_A352
0002AE32 <AmiBlitz3.ab2@14333>   MOVE.l libjsr,D1
0002AE36 <AmiBlitz3.ab2@14334>    BSR.w writelong
0002AE40 <AmiBlitz3.ab2@14335>   MOVE.w regnum,cfregat
0002AE46 <AmiBlitz3.ab2@14336>   CLR.w regnum
0002AE48 <AmiBlitz3.ab2@14337> RTS
0002AE52 <AmiBlitz3.ab2@14341>   MOVE.w cfregat,regnum
0002AE56 <AmiBlitz3.ab2@14342>    BSR.w JL_0_A36E
0002AE58 <AmiBlitz3.ab2@14343>   MOVE.l D5,D1
0002AE5C <AmiBlitz3.ab2@14344> BRA.w JL_0_AD38
0002AE5E <AmiBlitz3.ab2@14348>    MOVEQ.l #-$2A,D1
0002AE64 <AmiBlitz3.ab2@14349>    TST.b fpu
0002AE68 <AmiBlitz3.ab2@14350>    BEQ do_equal_float__nofpu
0002AE6A <AmiBlitz3.ab2@14351>    MOVEQ #0,d1
0002AE70 <AmiBlitz3.ab2@14352>    MOVE.w regnum,d1
0002AE72 <AmiBlitz3.ab2@14353>    MOVE.l d1,d2
0002AE74 <AmiBlitz3.ab2@14354>    ASL.l #7,d1
0002AE76 <AmiBlitz3.ab2@14355>    ADDQ  #1,d2
0002AE78 <AmiBlitz3.ab2@14356>    ASL.l #8,d2
0002AE7A <AmiBlitz3.ab2@14357>    ASL.l #2,d2
0002AE7C <AmiBlitz3.ab2@14358>    OR.l d2,d1
0002AE82 <AmiBlitz3.ab2@14359>    OR.l #$f2000038,d1
0002AE88 <AmiBlitz3.ab2@14360>    JSR writelong
0002AE8C <AmiBlitz3.ab2@14361>    MOVE.w #$f240,d1
0002AE92 <AmiBlitz3.ab2@14362>    OR.w regnum,d1
0002AE96 <AmiBlitz3.ab2@14363>    BSR writeword
0002AE98 <AmiBlitz3.ab2@14364>    MOVEQ.l #1,d2
0002AE9C <AmiBlitz3.ab2@14365>    MOVE.w #1,d1                                            ;fpu comp fseq
0002AEA0 <AmiBlitz3.ab2@14366>    BSR writeword
0002AEA2 <AmiBlitz3.ab2@14367> RTS
0002AEA6 <AmiBlitz3.ab2@14370>    BSR.w docflib
0002AEAA <AmiBlitz3.ab2@14371>    BSR.w doeqcmp
0002AEAE <AmiBlitz3.ab2@14372> BRA.w docflib2
0002AEB0 <AmiBlitz3.ab2@14376>   MOVEQ.l #-$2A,D1
0002AEB6 <AmiBlitz3.ab2@14377>   TST.b fpu
0002AEBA <AmiBlitz3.ab2@14378>    BEQ do_not_equal_float__nofpu
0002AEBC <AmiBlitz3.ab2@14379>    MOVEQ #0,d1
0002AEC2 <AmiBlitz3.ab2@14380>    MOVE.w regnum,d1
0002AEC4 <AmiBlitz3.ab2@14381>    MOVE.l d1,d2
0002AEC6 <AmiBlitz3.ab2@14382>    ASL.l #7,d1
0002AEC8 <AmiBlitz3.ab2@14383>    ADDQ  #1,d2
0002AECA <AmiBlitz3.ab2@14384>    ASL.l #8,d2
0002AECC <AmiBlitz3.ab2@14385>    ASL.l #2,d2
0002AECE <AmiBlitz3.ab2@14386>    OR.l d2,d1
0002AED4 <AmiBlitz3.ab2@14387>    OR.l #$f2000038,d1
0002AEDA <AmiBlitz3.ab2@14388>    JSR writelong
0002AEDE <AmiBlitz3.ab2@14389>    MOVE.w #$f240,d1
0002AEE4 <AmiBlitz3.ab2@14390>    OR.w regnum,d1
0002AEE8 <AmiBlitz3.ab2@14391>    BSR writeword
0002AEEE <AmiBlitz3.ab2@14392>    MOVE.l #1,d2
0002AEF2 <AmiBlitz3.ab2@14393>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002AEF6 <AmiBlitz3.ab2@14394>    BSR writeword
0002AEF8 <AmiBlitz3.ab2@14395> RTS
0002AEFC <AmiBlitz3.ab2@14398>    BSR.w docflib
0002AF00 <AmiBlitz3.ab2@14399>    BSR.w donecmp
0002AF04 <AmiBlitz3.ab2@14400> BRA.w docflib2
0002AF06 <AmiBlitz3.ab2@14404>   MOVEQ.l #-$2A,D1
0002AF0C <AmiBlitz3.ab2@14405>     TST.b fpu
0002AF10 <AmiBlitz3.ab2@14406>    BEQ do_littler_float__nofpu
0002AF12 <AmiBlitz3.ab2@14407>    MOVEQ #0,d1
0002AF18 <AmiBlitz3.ab2@14408>    MOVE.w regnum,d1
0002AF1A <AmiBlitz3.ab2@14409>    MOVE.l d1,d2
0002AF1C <AmiBlitz3.ab2@14410>    ASL.l #7,d1
0002AF1E <AmiBlitz3.ab2@14411>    ADDQ  #1,d2
0002AF20 <AmiBlitz3.ab2@14412>    ASL.l #8,d2
0002AF22 <AmiBlitz3.ab2@14413>    ASL.l #2,d2
0002AF24 <AmiBlitz3.ab2@14414>    OR.l d2,d1
0002AF2A <AmiBlitz3.ab2@14415>    OR.l #$f2000038,d1
0002AF30 <AmiBlitz3.ab2@14416>    JSR writelong
0002AF34 <AmiBlitz3.ab2@14417>    MOVE.w #$f240,d1
0002AF3A <AmiBlitz3.ab2@14418>    OR.w regnum,d1
0002AF3E <AmiBlitz3.ab2@14419>    BSR writeword
0002AF44 <AmiBlitz3.ab2@14420>    MOVE.l #$1,d2
0002AF48 <AmiBlitz3.ab2@14421>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002AF4C <AmiBlitz3.ab2@14422>    BSR writeword
0002AF4E <AmiBlitz3.ab2@14423> RTS
0002AF52 <AmiBlitz3.ab2@14426>    BSR.w docflib
0002AF56 <AmiBlitz3.ab2@14427>    BSR.w doltcmp
0002AF5A <AmiBlitz3.ab2@14428> BRA.w docflib2
0002AF5C <AmiBlitz3.ab2@14432>   MOVEQ.l #-$2A,D1
0002AF62 <AmiBlitz3.ab2@14433>   TST.b fpu
0002AF66 <AmiBlitz3.ab2@14434>    BEQ do_littler_equal_float__nofpu
0002AF68 <AmiBlitz3.ab2@14435>    MOVEQ #0,d1
0002AF6E <AmiBlitz3.ab2@14436>    MOVE.w regnum,d1
0002AF70 <AmiBlitz3.ab2@14437>    MOVE.l d1,d2
0002AF72 <AmiBlitz3.ab2@14438>    ASL.l #7,d1
0002AF74 <AmiBlitz3.ab2@14439>    ADDQ  #1,d2
0002AF76 <AmiBlitz3.ab2@14440>    ASL.l #8,d2
0002AF78 <AmiBlitz3.ab2@14441>    ASL.l #2,d2
0002AF7A <AmiBlitz3.ab2@14442>    OR.l d2,d1
0002AF80 <AmiBlitz3.ab2@14443>    OR.l #$f2000038,d1
0002AF86 <AmiBlitz3.ab2@14444>    JSR writelong
0002AF8A <AmiBlitz3.ab2@14445>    MOVE.w #$f240,d1
0002AF90 <AmiBlitz3.ab2@14446>    OR.w regnum,d1
0002AF94 <AmiBlitz3.ab2@14447>    BSR writeword
0002AF9A <AmiBlitz3.ab2@14448>    MOVE.l #1,d2
0002AF9E <AmiBlitz3.ab2@14449>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002AFA2 <AmiBlitz3.ab2@14450>    BSR writeword
0002AFA4 <AmiBlitz3.ab2@14451> RTS
0002AFA8 <AmiBlitz3.ab2@14454>    BSR.w docflib
0002AFAC <AmiBlitz3.ab2@14455>    BSR.w dolecmp
0002AFB0 <AmiBlitz3.ab2@14456> BRA.w docflib2
0002AFB2 <AmiBlitz3.ab2@14460>   MOVEQ.l #-$2A,D1
0002AFB8 <AmiBlitz3.ab2@14461>    TST.b fpu
0002AFBC <AmiBlitz3.ab2@14462>    BEQ do_greater_float__nofpu
0002AFBE <AmiBlitz3.ab2@14463>     MOVEQ #0,d1
0002AFC4 <AmiBlitz3.ab2@14464>    MOVE.w regnum,d1
0002AFC6 <AmiBlitz3.ab2@14465>    MOVE.l d1,d2
0002AFC8 <AmiBlitz3.ab2@14466>    ASL.l #7,d1
0002AFCA <AmiBlitz3.ab2@14467>    ADDQ  #1,d2
0002AFCC <AmiBlitz3.ab2@14468>    ASL.l #8,d2
0002AFCE <AmiBlitz3.ab2@14469>    ASL.l #2,d2
0002AFD0 <AmiBlitz3.ab2@14470>    OR.l d2,d1
0002AFD6 <AmiBlitz3.ab2@14471>    OR.l #$f2000038,d1
0002AFDC <AmiBlitz3.ab2@14472>    JSR writelong
0002AFE0 <AmiBlitz3.ab2@14473>    MOVE.w #$f240,d1
0002AFE6 <AmiBlitz3.ab2@14474>    OR.w regnum,d1
0002AFEA <AmiBlitz3.ab2@14475>    BSR writeword
0002AFF0 <AmiBlitz3.ab2@14476>    MOVE.l #1,d2
0002AFF4 <AmiBlitz3.ab2@14477>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002AFF8 <AmiBlitz3.ab2@14478>    BSR writeword
0002AFFA <AmiBlitz3.ab2@14479> RTS
0002AFFE <AmiBlitz3.ab2@14482>    BSR.w docflib
0002B002 <AmiBlitz3.ab2@14483>    BSR.w dogtcmp
0002B006 <AmiBlitz3.ab2@14484> BRA.w docflib2
0002B008 <AmiBlitz3.ab2@14488>   MOVEQ.l #-$2A,D1
0002B00E <AmiBlitz3.ab2@14489>  TST.b fpu
0002B012 <AmiBlitz3.ab2@14490>    BEQ do_greater_equal_float__nofpu
0002B014 <AmiBlitz3.ab2@14491>    MOVEQ #0,d1
0002B01A <AmiBlitz3.ab2@14492>    MOVE.w regnum,d1
0002B01C <AmiBlitz3.ab2@14493>    MOVE.l d1,d2
0002B01E <AmiBlitz3.ab2@14494>    ASL.l #7,d1
0002B020 <AmiBlitz3.ab2@14495>    ADDQ  #1,d2
0002B022 <AmiBlitz3.ab2@14496>    ASL.l #8,d2
0002B024 <AmiBlitz3.ab2@14497>    ASL.l #2,d2
0002B026 <AmiBlitz3.ab2@14498>    OR.l d2,d1
0002B02C <AmiBlitz3.ab2@14499>    OR.l #$f2000038,d1
0002B032 <AmiBlitz3.ab2@14500>    JSR writelong
0002B036 <AmiBlitz3.ab2@14501>    MOVE.w #$f240,d1
0002B03C <AmiBlitz3.ab2@14502>    OR.w regnum,d1
0002B040 <AmiBlitz3.ab2@14503>    BSR writeword
0002B046 <AmiBlitz3.ab2@14504>    MOVE.l #1,d2
0002B04A <AmiBlitz3.ab2@14505>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002B04E <AmiBlitz3.ab2@14506>    BSR writeword
0002B050 <AmiBlitz3.ab2@14507> RTS
0002B054 <AmiBlitz3.ab2@14510>    BSR.w docflib
0002B058 <AmiBlitz3.ab2@14511>    BSR.w dogecmp
0002B05C <AmiBlitz3.ab2@14512> BRA.w docflib2
0002B062 <AmiBlitz3.ab2@14517>   MOVE.l #$CE00,D1
0002B068 <AmiBlitz3.ab2@14518>    MOVE.l d1,lastinstruction
0002B06C <AmiBlitz3.ab2@14519>    BSR.w Atokejsr
0002B070 <AmiBlitz3.ab2@14520> BRA.w doeqcmp
0002B076 <AmiBlitz3.ab2@14524>   MOVE.l #$CE00,D1
0002B07C <AmiBlitz3.ab2@14525>    MOVE.l d1,lastinstruction
0002B080 <AmiBlitz3.ab2@14526>    BSR.w Atokejsr
0002B084 <AmiBlitz3.ab2@14527> BRA.w donecmp
0002B08A <AmiBlitz3.ab2@14531>   MOVE.l #$CE00,D1
0002B090 <AmiBlitz3.ab2@14532>    MOVE.l d1,lastinstruction
0002B094 <AmiBlitz3.ab2@14533>    BSR.w Atokejsr
0002B098 <AmiBlitz3.ab2@14534> BRA.w doltcmp
0002B09E <AmiBlitz3.ab2@14538>   MOVE.l #$CE00,D1
0002B0A4 <AmiBlitz3.ab2@14539>    MOVE.l d1,lastinstruction
0002B0A8 <AmiBlitz3.ab2@14540>    BSR.w Atokejsr
0002B0AC <AmiBlitz3.ab2@14541> BRA.w dolecmp
0002B0B2 <AmiBlitz3.ab2@14545>   MOVE.l #$CE00,D1
0002B0B8 <AmiBlitz3.ab2@14546>    MOVE.l d1,lastinstruction
0002B0BC <AmiBlitz3.ab2@14547>    BSR.w Atokejsr
0002B0C0 <AmiBlitz3.ab2@14548> BRA.w dogtcmp
0002B0C6 <AmiBlitz3.ab2@14552>   MOVE.l #$CE00,D1
0002B0CC <AmiBlitz3.ab2@14553>    MOVE.l d1,lastinstruction
0002B0D0 <AmiBlitz3.ab2@14554>    BSR.w Atokejsr
0002B0D4 <AmiBlitz3.ab2@14555> BRA.w dogecmp
0002B0DA <AmiBlitz3.ab2@14560>   TST.b fast                                               ;compare
0002B0DE <AmiBlitz3.ab2@14561>   BEQ cmpit__org
0002B0E4 <AmiBlitz3.ab2@14565>   MOVE.l destpointer,a0
0002B0EA <AmiBlitz3.ab2@14566>   SUB.l imm_addr,a0
0002B0F0 <AmiBlitz3.ab2@14567>   CMP.l #6,a0
0002B0F4 <AmiBlitz3.ab2@14568>   BNE cmpit__l11
0002B0FA <AmiBlitz3.ab2@14569>   MOVE.l imm_addr,a0
0002B102 <AmiBlitz3.ab2@14570>   CMP.w #$223c,imm_addr
0002B106 <AmiBlitz3.ab2@14571>   BNE cmpit__org
0002B10C <AmiBlitz3.ab2@14572>   ADD.w #$8e80,-6(a4)
0002B112 <AmiBlitz3.ab2@14575>   CLR.l imm_addr
0002B114 <AmiBlitz3.ab2@14576> RTS
0002B11A <AmiBlitz3.ab2@14579>   CMP.l #4,a0
0002B11E <AmiBlitz3.ab2@14580>   BNE cmpit__l10
0002B122 <AmiBlitz3.ab2@14581>   CMP.b #2,d3
0002B126 <AmiBlitz3.ab2@14582>   BNE cmpit__l11b
0002B12C <AmiBlitz3.ab2@14583>   ADD.w #$7e40,-4(a4)
0002B12E <AmiBlitz3.ab2@14584> RTS
0002B134 <AmiBlitz3.ab2@14587>  ADD.w #$7e00,-4(a4)
0002B136 <AmiBlitz3.ab2@14588> RTS
0002B13C <AmiBlitz3.ab2@14591>    MOVE.l destpointer,a0
0002B142 <AmiBlitz3.ab2@14592>    SUB.l load_var_addr,a0
0002B146 <AmiBlitz3.ab2@14593>    CMP.w #4,a0
0002B14A <AmiBlitz3.ab2@14594>    BNE cmpit__org
0002B14E <AmiBlitz3.ab2@14595>    CMP.b #3,d3
0002B152 <AmiBlitz3.ab2@14596>    BCS cmpit__lv1
0002B158 <AmiBlitz3.ab2@14597>    CLR.l load_var_addr
0002B15E <AmiBlitz3.ab2@14598>    ADD.w #$9080-$200,-4(a4)
0002B160 <AmiBlitz3.ab2@14599> RTS
0002B164 <AmiBlitz3.ab2@14602>   CMP.b #2,d3
0002B168 <AmiBlitz3.ab2@14603>    BNE cmpit__org
0002B16E <AmiBlitz3.ab2@14604>    CLR.l load_var_addr
0002B174 <AmiBlitz3.ab2@14605>    ADD.w #$8040-$200,-4(a4)
0002B176 <AmiBlitz3.ab2@14606> RTS
0002B17C <AmiBlitz3.ab2@14609>   MOVE.w regnum,D3
0002B17E <AmiBlitz3.ab2@14610>   OR.w D3,D1
0002B180 <AmiBlitz3.ab2@14611>   LSL.w #8,D3
0002B182 <AmiBlitz3.ab2@14612>   LSL.w #1,D3
0002B184 <AmiBlitz3.ab2@14613>   OR.w D3,D1
0002B186 <AmiBlitz3.ab2@14614>   ADDQ.w #1,D1
0002B18A <AmiBlitz3.ab2@14615> BRA.w writeword
0002B18E <AmiBlitz3.ab2@14619>    BSR.w cmpit
0002B192 <AmiBlitz3.ab2@14622>    MOVE.w mseq(PC),D1
0002B196 <AmiBlitz3.ab2@14623> BRA.w cpoke
0002B19A <AmiBlitz3.ab2@14627>   BSR.w cmpit
0002B19E <AmiBlitz3.ab2@14630>   MOVE.w msne(PC),D1
0002B1A2 <AmiBlitz3.ab2@14631> BRA.w cpoke
0002B1A6 <AmiBlitz3.ab2@14635>   BSR.w cmpit
0002B1AA <AmiBlitz3.ab2@14638>    MOVE.w mslt(PC),D1
0002B1AE <AmiBlitz3.ab2@14639> BRA.w cpoke
0002B1B2 <AmiBlitz3.ab2@14643>    BSR.w cmpit
0002B1B6 <AmiBlitz3.ab2@14646>    MOVE.w msle(PC),D1
0002B1BA <AmiBlitz3.ab2@14647> BRA.w cpoke
0002B1BE <AmiBlitz3.ab2@14651>    BSR.w cmpit
0002B1C2 <AmiBlitz3.ab2@14654>    MOVE.w msgt(PC),D1
0002B1C6 <AmiBlitz3.ab2@14655> BRA.w cpoke
0002B1CA <AmiBlitz3.ab2@14659>   BSR.w cmpit
0002B1CE <AmiBlitz3.ab2@14662>    MOVE.w msge(PC),D1
0002B1D4 <AmiBlitz3.ab2@14665>    OR.w regnum,D1
0002B1D8 <AmiBlitz3.ab2@14666>    CMP.w #5,d2
0002B1DC <AmiBlitz3.ab2@14667>    BNE cpoke__nod0
0002B1E0 <AmiBlitz3.ab2@14668>    CMP.w #5,d3
0002B1E4 <AmiBlitz3.ab2@14669>    BNE cpoke__nod0
0002B1E6 <AmiBlitz3.ab2@14670>    MOVE.l d1,-(a7)
0002B1EC <AmiBlitz3.ab2@14671>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002B1F0 <AmiBlitz3.ab2@14672>    BSR writelong
0002B1F2 <AmiBlitz3.ab2@14673>    MOVE.l (a7)+,d1
0002B1F6 <AmiBlitz3.ab2@14676>    BSR.w writeword                                         ;writeseq
0002B1F8 <AmiBlitz3.ab2@14677>    MOVEQ.l #1,d2
0002B1FE <AmiBlitz3.ab2@14678>    MOVE.l lasttoken,d1
0002B204 <AmiBlitz3.ab2@14679>     TST.b fast
0002B208 <AmiBlitz3.ab2@14680>     BEQ.s cpoke__l11
0002B20E <AmiBlitz3.ab2@14681>    CMP.l #$800b,d1
0002B212 <AmiBlitz3.ab2@14682>    BEQ cpoke__l10
0002B216 <AmiBlitz3.ab2@14685>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002B21C <AmiBlitz3.ab2@14686>   OR.w regnum,D1
0002B220 <AmiBlitz3.ab2@14687>    BSR.w writeword                                         ;writeext.w
0002B222 <AmiBlitz3.ab2@14688>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002B224 <AmiBlitz3.ab2@14691> RTS
0002B228 <AmiBlitz3.ab2@14696>   MOVE.w #$D040,D1
0002B22A <AmiBlitz3.ab2@14697>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002B22E <AmiBlitz3.ab2@14698> BRA.w doplus2
0002B232 <AmiBlitz3.ab2@14702>   MOVE.w #$D040,D1
0002B234 <AmiBlitz3.ab2@14703>   MOVEQ.l #$03,D2                                          ;now a long
0002B238 <AmiBlitz3.ab2@14704>    BSR.w doplus2
0002B23C <AmiBlitz3.ab2@14705> BRA.w convert_word_to_long
0002B240 <AmiBlitz3.ab2@14709>   MOVE.w #$D080,D1                                         ;writeaddlong
0002B242 <AmiBlitz3.ab2@14712>   MOVE.w d1,a1
0002B248 <AmiBlitz3.ab2@14713>   TST.b fast
0002B24C <AmiBlitz3.ab2@14714>   BEQ doplus2__l10
0002B24E <AmiBlitz3.ab2@14718>   ASR.w #8,d1
0002B252 <AmiBlitz3.ab2@14719>   CMP.b #$90,d1
0002B256 <AmiBlitz3.ab2@14720>   BEQ doplus2__sub1
0002B25A <AmiBlitz3.ab2@14721>   CMP.b #$d0,d1
0002B25E <AmiBlitz3.ab2@14722>   BNE doplus2__l10
0002B262 <AmiBlitz3.ab2@14723>   CMP.b #3,d3
0002B266 <AmiBlitz3.ab2@14724>   BCS doplus2__lq10
0002B26C <AmiBlitz3.ab2@14725>   TST.b quickadd
0002B272 <AmiBlitz3.ab2@14729>    MOVE.l destpointer,a0
0002B278 <AmiBlitz3.ab2@14730>    CLR.b quickadd
0002B27E <AmiBlitz3.ab2@14731>    CLR.l load_var_addr
0002B284 <AmiBlitz3.ab2@14732>    SUB.l imm_addr,a0
0002B288 <AmiBlitz3.ab2@14733>    CMP.w #6,a0
0002B28C <AmiBlitz3.ab2@14734>    BEQ doplus2__li10
0002B290 <AmiBlitz3.ab2@14735>    CMP.w #4,a0
0002B294 <AmiBlitz3.ab2@14736>    BNE.s doplus2__li1
0002B29A <AmiBlitz3.ab2@14737>    CLR.l imm_addr
0002B2A0 <AmiBlitz3.ab2@14738>    ADD.w #$a040-$200,-4(a4)
0002B2A2 <AmiBlitz3.ab2@14739> RTS
0002B2A4 <AmiBlitz3.ab2@14742>    MOVE.l a4,a0
0002B2AA <AmiBlitz3.ab2@14743>    SUB.l load_var_addr,a0
0002B2B0 <AmiBlitz3.ab2@14744>    CMP.l #$a,a0
0002B2B4 <AmiBlitz3.ab2@14745>    BNE doplus2__l10e
0002B2BA <AmiBlitz3.ab2@14746>    CLR.l load_var_addr
0002B2BE <AmiBlitz3.ab2@14747>    MOVE.w -$8(a4),d1
0002B2C4 <AmiBlitz3.ab2@14748>    MOVE.l -$4(a4),-$8(a4)
0002B2C8 <AmiBlitz3.ab2@14749>    MOVE.w d1,-$4(a4)
0002B2CE <AmiBlitz3.ab2@14750>    SUB.w #$1980,-$a(a4)
0002B2D4 <AmiBlitz3.ab2@14751>    SUBQ.l #2,destpointer
0002B2D6 <AmiBlitz3.ab2@14752> RTS
0002B2DC <AmiBlitz3.ab2@14755>   CLR.b quickadd
0002B2E0 <AmiBlitz3.ab2@14756> BRA doplus2__l10
0002B2E6 <AmiBlitz3.ab2@14759>    CLR.l imm_addr
0002B2EA <AmiBlitz3.ab2@14760>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002B2EE <AmiBlitz3.ab2@14761>    BNE doplus2__doit
0002B2F4 <AmiBlitz3.ab2@14762>    SUBQ.l #6,destpointer
0002B2F6 <AmiBlitz3.ab2@14763> RTS
0002B2FC <AmiBlitz3.ab2@14766>    ADD.w #$b080-$200,-6(a4)
0002B2FE <AmiBlitz3.ab2@14767> RTS
0002B304 <AmiBlitz3.ab2@14770>    MOVE.l destpointer,a0
0002B30A <AmiBlitz3.ab2@14771>    SUB.l load_var_addr,a0
0002B30E <AmiBlitz3.ab2@14772>    CMP.w #4,a0
0002B312 <AmiBlitz3.ab2@14773>    BNE doplus2__l10
0002B316 <AmiBlitz3.ab2@14774>    CMP.b #3,d3
0002B31A <AmiBlitz3.ab2@14775>    BNE doplus2__lv1
0002B320 <AmiBlitz3.ab2@14776>    CLR.l load_var_addr
0002B326 <AmiBlitz3.ab2@14777>    ADD.w #$b080-$200,-4(a4)
0002B328 <AmiBlitz3.ab2@14778> RTS
0002B32C <AmiBlitz3.ab2@14781>   CMP.b #2,d3
0002B330 <AmiBlitz3.ab2@14782>   BNE doplus2__l10
0002B336 <AmiBlitz3.ab2@14783>   CLR.l load_var_addr
0002B33C <AmiBlitz3.ab2@14784>   ADD.w #$a040-$200,-4(a4)
0002B33E <AmiBlitz3.ab2@14785> RTS
0002B344 <AmiBlitz3.ab2@14788>   MOVE.w regnum,D3
0002B346 <AmiBlitz3.ab2@14789>   MOVE.w a1,d1
0002B348 <AmiBlitz3.ab2@14790>   OR.w D3,D1
0002B34A <AmiBlitz3.ab2@14791>   ADDQ.w #1,D1
0002B34C <AmiBlitz3.ab2@14792>   LSL.w #8,D3
0002B34E <AmiBlitz3.ab2@14793>   LSL.w #1,D3
0002B350 <AmiBlitz3.ab2@14794>   OR.w D3,D1
0002B354 <AmiBlitz3.ab2@14795> BRA.w writeword
0002B358 <AmiBlitz3.ab2@14798>    CMP.b #3,d3
0002B35C <AmiBlitz3.ab2@14799>    BCS doplus2__sub1_lq10
0002B362 <AmiBlitz3.ab2@14800>    TST.b quickadd
0002B368 <AmiBlitz3.ab2@14804>    MOVE.l destpointer,a0
0002B36E <AmiBlitz3.ab2@14805>    CLR.b quickadd
0002B374 <AmiBlitz3.ab2@14806>    CLR.l load_var_addr
0002B37A <AmiBlitz3.ab2@14807>    SUB.l imm_addr,a0
0002B37E <AmiBlitz3.ab2@14808>    CMP.w #6,a0
0002B382 <AmiBlitz3.ab2@14809>    BEQ doplus2__sub1_li10
0002B386 <AmiBlitz3.ab2@14810>    CMP.w #4,a0
0002B38A <AmiBlitz3.ab2@14811>    BNE.s doplus2__sub1_li1
0002B390 <AmiBlitz3.ab2@14812>    CLR.l imm_addr
0002B396 <AmiBlitz3.ab2@14813>    ADD.w #$6040-$200,-4(a4)
0002B398 <AmiBlitz3.ab2@14814> RTS
0002B39A <AmiBlitz3.ab2@14817>    MOVE.l a4,a0
0002B3A0 <AmiBlitz3.ab2@14818>     SUB.l load_var_addr,a0
0002B3A6 <AmiBlitz3.ab2@14819>     CMP.l #$a,a0
0002B3AA <AmiBlitz3.ab2@14820>     BNE doplus2__sub1_l10e
0002B3B0 <AmiBlitz3.ab2@14821>    CLR.l load_var_addr
0002B3B4 <AmiBlitz3.ab2@14822>    MOVE.w -$8(a4),d1
0002B3BA <AmiBlitz3.ab2@14823>    MOVE.l -$4(a4),-$8(a4)
0002B3BE <AmiBlitz3.ab2@14824>    MOVE.w d1,-$4(a4)
0002B3C4 <AmiBlitz3.ab2@14825>    SUB.w #$1b80,-$a(a4)
0002B3CA <AmiBlitz3.ab2@14826>    SUBQ.l #2,destpointer
0002B3CC <AmiBlitz3.ab2@14827> RTS
0002B3D2 <AmiBlitz3.ab2@14830>   CLR.b quickadd
0002B3D6 <AmiBlitz3.ab2@14831> BRA doplus2__sub1_l10
0002B3DC <AmiBlitz3.ab2@14834>    CLR.l imm_addr
0002B3E2 <AmiBlitz3.ab2@14835>    ADD.w #$7080-$200,-6(a4)
0002B3E4 <AmiBlitz3.ab2@14836> RTS
0002B3EA <AmiBlitz3.ab2@14839>    MOVE.l destpointer,a0
0002B3F0 <AmiBlitz3.ab2@14840>    SUB.l load_var_addr,a0
0002B3F4 <AmiBlitz3.ab2@14841>    CMP.w #4,a0
0002B3F8 <AmiBlitz3.ab2@14842>    BNE doplus2__sub1_l10
0002B3FC <AmiBlitz3.ab2@14843>    CMP.b #3,d3
0002B400 <AmiBlitz3.ab2@14844>    BNE doplus2__sub1_lv1
0002B406 <AmiBlitz3.ab2@14845>    CLR.l load_var_addr
0002B40C <AmiBlitz3.ab2@14846>    ADD.w #$7080-$200,-4(a4)
0002B40E <AmiBlitz3.ab2@14847> RTS
0002B412 <AmiBlitz3.ab2@14850>    CMP.b #2,d3
0002B416 <AmiBlitz3.ab2@14851>    BNE doplus2__sub1_l10
0002B41C <AmiBlitz3.ab2@14852>    CLR.l load_var_addr
0002B422 <AmiBlitz3.ab2@14853>    ADD.w #$6040-$200,-4(a4)
0002B424 <AmiBlitz3.ab2@14854> RTS
0002B42A <AmiBlitz3.ab2@14857>   MOVE.w regnum,D3
0002B42C <AmiBlitz3.ab2@14858>   MOVE.w a1,d1
0002B42E <AmiBlitz3.ab2@14859>   OR.w D3,D1
0002B430 <AmiBlitz3.ab2@14860>   ADDQ.w #1,D1
0002B432 <AmiBlitz3.ab2@14861>   LSL.w #8,D3
0002B434 <AmiBlitz3.ab2@14862>   LSL.w #1,D3
0002B436 <AmiBlitz3.ab2@14863>   OR.w D3,D1
0002B43A <AmiBlitz3.ab2@14864> BRA.w writeword
0002B43C <AmiBlitz3.ab2@14868>   MOVEQ #0,d0
0002B442 <AmiBlitz3.ab2@14869>   MOVE.w regnum,d0
0002B444 <AmiBlitz3.ab2@14870>   ADDQ #1,d0
0002B446 <AmiBlitz3.ab2@14871>   ASL.w #8,d0
0002B448 <AmiBlitz3.ab2@14872>   ASL.w #2,d0
0002B44E <AmiBlitz3.ab2@14873>   MOVE.l #$f2000022,d1                                     ;fpu add
0002B450 <AmiBlitz3.ab2@14874>   OR.l d0,d1
0002B456 <AmiBlitz3.ab2@14875>   MOVE.w regnum,d0
0002B458 <AmiBlitz3.ab2@14876>   ASL.w #7,d0
0002B45A <AmiBlitz3.ab2@14877>   OR.l d0,d1
0002B45E <AmiBlitz3.ab2@14878> BRA.w writelong
0002B464 <AmiBlitz3.ab2@14884>   TST.b iee
0002B468 <AmiBlitz3.ab2@14885>   BNE do_plus_float__fadd1
0002B46C <AmiBlitz3.ab2@14886>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002B472 <AmiBlitz3.ab2@14889>    MOVE.w D1,libjsr+2
0002B476 <AmiBlitz3.ab2@14890>    BSR.w JL_0_AD40
0002B478 <AmiBlitz3.ab2@14891>   MOVE.l D4,D1
0002B47C <AmiBlitz3.ab2@14892>    BSR.w JL_0_AD38
0002B480 <AmiBlitz3.ab2@14893>   MOVE.w #$C900,D1
0002B484 <AmiBlitz3.ab2@14894>    BSR.w Atokejsr
0002B488 <AmiBlitz3.ab2@14895>    BSR.w JL_0_A352
0002B48E <AmiBlitz3.ab2@14896>   MOVE.l libjsr,D1
0002B492 <AmiBlitz3.ab2@14897>    BSR.w writelong
0002B496 <AmiBlitz3.ab2@14898>    BSR.w JL_0_A36E
0002B498 <AmiBlitz3.ab2@14899>   MOVE.l D5,D1
0002B49C <AmiBlitz3.ab2@14900> BRA.w JL_0_AD38
0002B4A2 <AmiBlitz3.ab2@14904>   MOVE.w regnum,D1
0002B4A4 <AmiBlitz3.ab2@14905>   LSL.w #8,D1
0002B4A6 <AmiBlitz3.ab2@14906>   LSL.w #1,D1
0002B4A8 <AmiBlitz3.ab2@14907>   MOVE.w D1,-(A7)
0002B4AC <AmiBlitz3.ab2@14908>   CMP.w #3072,d1
0002B4B0 <AmiBlitz3.ab2@14909>   BEQ 'l1
0002B4B6 <AmiBlitz3.ab2@14910>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002B4BA <AmiBlitz3.ab2@14911> BRA 'l2
0002B4BE <AmiBlitz3.ab2@14914>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002B4C2 <AmiBlitz3.ab2@14917>    BSR.w writeword
0002B4C4 <AmiBlitz3.ab2@14918>   MOVE.w (A7)+,D1
0002B4CA <AmiBlitz3.ab2@14919>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002B4CE <AmiBlitz3.ab2@14920> BRA.w writeword
0002B4D2 <AmiBlitz3.ab2@14926>   MOVE.w #$9040,D1
0002B4D6 <AmiBlitz3.ab2@14927> BRA.w doplus2
0002B4DA <AmiBlitz3.ab2@14931>   MOVE.w #$9040,D1
0002B4DE <AmiBlitz3.ab2@14932> BRA.w doplus2
0002B4E2 <AmiBlitz3.ab2@14936>   MOVE.w #$9080,D1
0002B4E6 <AmiBlitz3.ab2@14937> BRA.w doplus2
0002B4EC <AmiBlitz3.ab2@14941>    TST.b iee
0002B4F0 <AmiBlitz3.ab2@14942>     BNE do_minus_float__fs1
0002B4F4 <AmiBlitz3.ab2@14943>   MOVE.w #$FFB8,D1                                         ;floatsub
0002B4F8 <AmiBlitz3.ab2@14944> BRA.w doflib
0002B4FA <AmiBlitz3.ab2@14947>   MOVEQ #0,d0
0002B500 <AmiBlitz3.ab2@14948>   MOVE.w regnum,d0
0002B502 <AmiBlitz3.ab2@14949>   ADDQ #1,d0
0002B504 <AmiBlitz3.ab2@14950>   ASL.w #8,d0
0002B506 <AmiBlitz3.ab2@14951>   ASL.w #2,d0
0002B50C <AmiBlitz3.ab2@14952>   MOVE.l #$f2000028,d1
0002B50E <AmiBlitz3.ab2@14953>   OR.l d0,d1
0002B514 <AmiBlitz3.ab2@14954>   MOVE.w regnum,d0
0002B516 <AmiBlitz3.ab2@14955>   ASL.w #7,d0
0002B518 <AmiBlitz3.ab2@14956>   OR.l d0,d1
0002B51C <AmiBlitz3.ab2@14957> BRA.w writelong
0002B520 <AmiBlitz3.ab2@14963>   MOVE.w #$C1C0,D1
0002B522 <AmiBlitz3.ab2@14964>   MOVEQ.l #$02,D2                                          ;now a word
0002B526 <AmiBlitz3.ab2@14965> BRA.w doplus2
0002B52A <AmiBlitz3.ab2@14969>   MOVE.w #$C1C0,D1
0002B52C <AmiBlitz3.ab2@14970>   MOVEQ.l #$03,D2                                          ;now a long.
0002B530 <AmiBlitz3.ab2@14971> BRA.w doplus2
0002B534 <AmiBlitz3.ab2@14975>   MOVE.w #$CA00,D1                                         ;quickmul
0002B538 <AmiBlitz3.ab2@14976> BRA.w domylib
0002B53E <AmiBlitz3.ab2@14980>   TST.b fast
0002B542 <AmiBlitz3.ab2@14981>   BNE.s 'l10
0002B546 <AmiBlitz3.ab2@14982>   MOVE.w #$CA01,D1                                         ;writelongmul
0002B54A <AmiBlitz3.ab2@14983> BRA.w domylib
0002B550 <AmiBlitz3.ab2@14992>    MOVE.l destpointer,a0
0002B556 <AmiBlitz3.ab2@14993>    SUB.l imm_addr,a0
0002B55A <AmiBlitz3.ab2@14994>    CMP.w #6,a0
0002B55E <AmiBlitz3.ab2@14995>    BNE 'li1
0002B560 <AmiBlitz3.ab2@14996>    MOVEQ.l #2,d1
0002B562 <AmiBlitz3.ab2@14997>    MOVEQ #1,d3
0002B566 <AmiBlitz3.ab2@15000>   CMP.l -4(a4),d1
0002B56A <AmiBlitz3.ab2@15001>    BEQ 'oklsl
0002B56C <AmiBlitz3.ab2@15002>     LSL.l #1,d1
0002B572 <AmiBlitz3.ab2@15003>     ADD.l #1,d3
0002B578 <AmiBlitz3.ab2@15004>     CMP.l #9,d3
0002B57C <AmiBlitz3.ab2@15005>     BNE 'ag
0002B580 <AmiBlitz3.ab2@15006>    MOVE.w -2(a4),d1
0002B584 <AmiBlitz3.ab2@15007>    BSR writeword
0002B58A <AmiBlitz3.ab2@15008>    MOVE.w -6(a4),-4(a4)
0002B592 <AmiBlitz3.ab2@15009>    MOVE.l #$4c3c0800,-8(a4)
0002B598 <AmiBlitz3.ab2@15010>    MOVE.w regnum,D3
0002B59C <AmiBlitz3.ab2@15011>    MULS #$1000,D3
0002B5A0 <AmiBlitz3.ab2@15012>    OR.w D3,-6(a4)
0002B5A6 <AmiBlitz3.ab2@15013>    CLR.l load_var_addr
0002B5AC <AmiBlitz3.ab2@15014>    CLR.l imm_addr
0002B5B0 <AmiBlitz3.ab2@15015> BRA 'li3
0002B5B4 <AmiBlitz3.ab2@15018>    CMP.w #8,d3
0002B5B8 <AmiBlitz3.ab2@15019>    BEQ 'ok
0002B5BA <AmiBlitz3.ab2@15020>    ASL.l #1,d3
0002B5BC <AmiBlitz3.ab2@15021>    ASL.l #8,d3
0002B5C0 <AmiBlitz3.ab2@15022>    MOVE.w #$e188,d1
0002B5C2 <AmiBlitz3.ab2@15023>    OR.w d3,d1
0002B5C6 <AmiBlitz3.ab2@15024>    MOVE.w d1,-6(a4)
0002B5CA <AmiBlitz3.ab2@15025> BRA 'okls
0002B5D0 <AmiBlitz3.ab2@15028>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002B5D6 <AmiBlitz3.ab2@15031>   MOVE.w regnum,d3
0002B5DA <AmiBlitz3.ab2@15032>    OR.b d3,-5(a4)
0002B5E0 <AmiBlitz3.ab2@15033>    SUBQ.l #4,destpointer
0002B5E6 <AmiBlitz3.ab2@15034>    CLR.l load_var_addr
0002B5EC <AmiBlitz3.ab2@15035>    CLR.l imm_addr
0002B5F0 <AmiBlitz3.ab2@15036> BRA 'li3
0002B5F6 <AmiBlitz3.ab2@15039>    MOVE.l destpointer,a0
0002B5FC <AmiBlitz3.ab2@15040>    SUB.l load_var_addr,a0
0002B600 <AmiBlitz3.ab2@15041>    CMP.w #4,a0
0002B604 <AmiBlitz3.ab2@15042>    BNE 'li2
0002B608 <AmiBlitz3.ab2@15043>    MOVE.w -2(a4),d1
0002B60C <AmiBlitz3.ab2@15044>    BSR writeword
0002B612 <AmiBlitz3.ab2@15045>    MOVE.b #$4c,-6(a4)
0002B618 <AmiBlitz3.ab2@15046>    MOVE.w #$0800,-4(a4)
0002B61E <AmiBlitz3.ab2@15047>    MOVE.w regnum,D3
0002B622 <AmiBlitz3.ab2@15048>    MULS #$1000,d3
0002B626 <AmiBlitz3.ab2@15049>    OR.w D3,-4(a4)
0002B62A <AmiBlitz3.ab2@15050> BRA 'li3
0002B630 <AmiBlitz3.ab2@15053>    MOVE.l #$4c010800,d1
0002B636 <AmiBlitz3.ab2@15054>    MOVE.w regnum,D3
0002B638 <AmiBlitz3.ab2@15055>    EXT.l d3
0002B63C <AmiBlitz3.ab2@15056>    MULS #$1000,d3
0002B63E <AmiBlitz3.ab2@15057>    OR.w D3,d1
0002B642 <AmiBlitz3.ab2@15058>    MULS #$10,d3
0002B644 <AmiBlitz3.ab2@15059>    ADD.l d3,d1
0002B648 <AmiBlitz3.ab2@15060>    BSR writelong
0002B64A <AmiBlitz3.ab2@15065> RTS
0002B64C <AmiBlitz3.ab2@15069>   MOVE.w D1,-(A7)
0002B650 <AmiBlitz3.ab2@15070>    BSR.w JL_0_AD40
0002B652 <AmiBlitz3.ab2@15071>   MOVE.l D4,D1
0002B656 <AmiBlitz3.ab2@15072>    BSR.w JL_0_AD38
0002B65A <AmiBlitz3.ab2@15073>    BSR.w JL_0_A352
0002B65C <AmiBlitz3.ab2@15074>   MOVEQ #0,d1
0002B65E <AmiBlitz3.ab2@15075>   MOVE.w (A7)+,D1
0002B664 <AmiBlitz3.ab2@15076>   MOVE.l d1,lastinstruction
0002B668 <AmiBlitz3.ab2@15077>    BSR.w Atokejsr
0002B66C <AmiBlitz3.ab2@15078>    BSR.w JL_0_A36E
0002B66E <AmiBlitz3.ab2@15079>   MOVE.l D5,D1
0002B672 <AmiBlitz3.ab2@15080> BRA.w JL_0_AD38
0002B678 <AmiBlitz3.ab2@15084>    TST.b iee
0002B67C <AmiBlitz3.ab2@15085>     BNE fm1
0002B680 <AmiBlitz3.ab2@15086>  MOVE.w #$FFB2,D1                                          ;floatmul
0002B684 <AmiBlitz3.ab2@15087> BRA.w doflib
0002B686 <AmiBlitz3.ab2@15090>   MOVEQ #0,d0
0002B68C <AmiBlitz3.ab2@15091>  MOVE.w regnum,d0
0002B68E <AmiBlitz3.ab2@15092>  ADDQ #1,d0
0002B690 <AmiBlitz3.ab2@15093>  ASL.w #8,d0
0002B692 <AmiBlitz3.ab2@15094>  ASL.w #2,d0
0002B698 <AmiBlitz3.ab2@15095>  MOVE.l #$f2000023,d1
0002B69A <AmiBlitz3.ab2@15096>  OR.l d0,d1
0002B6A0 <AmiBlitz3.ab2@15097>  MOVE.w regnum,d0
0002B6A2 <AmiBlitz3.ab2@15098>  ASL.w #7,d0
0002B6A4 <AmiBlitz3.ab2@15099>  OR.l d0,d1
0002B6A8 <AmiBlitz3.ab2@15100> BRA.w writelong
0002B6AA <AmiBlitz3.ab2@15104>   MOVE.w D2,-(A7)                                          ;dopow
0002B6AC <AmiBlitz3.ab2@15105>   MOVE.w D2,D3
0002B6AE <AmiBlitz3.ab2@15106>   MOVEQ.l #$05,D2
0002B6B2 <AmiBlitz3.ab2@15107>    BSR.w JL_0_9770
0002B6B8 <AmiBlitz3.ab2@15108>   ADDQ.w #1,regnum
0002B6BA <AmiBlitz3.ab2@15109>   MOVE.w (A7)+,D3
0002B6BC <AmiBlitz3.ab2@15110>   MOVEQ.l #$05,D2
0002B6C0 <AmiBlitz3.ab2@15111>    BSR.w writeconvertcode
0002B6C6 <AmiBlitz3.ab2@15112>   SUBQ.w #1,regnum
0002B6CA <AmiBlitz3.ab2@15113>    BSR.w nocando
0002B6D0 <AmiBlitz3.ab2@15114>    TST.b fpu
0002B6D4 <AmiBlitz3.ab2@15115>    BEQ 'old
0002B6D6 <AmiBlitz3.ab2@15116>    MOVEQ #0,d1
0002B6DC <AmiBlitz3.ab2@15117>    MOVE.w regnum,d1
0002B6DE <AmiBlitz3.ab2@15118>   MOVE.l d1,d0
0002B6E0 <AmiBlitz3.ab2@15119>   ASL.w #7,d1
0002B6E2 <AmiBlitz3.ab2@15120>   ASL.w #8,d0
0002B6E4 <AmiBlitz3.ab2@15121>   ASL.w #2,d0
0002B6E6 <AmiBlitz3.ab2@15122>   OR.w d0,d1
0002B6E8 <AmiBlitz3.ab2@15123>   MOVE.l d1,-(a7)
0002B6EE <AmiBlitz3.ab2@15125>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002B6F2 <AmiBlitz3.ab2@15126>    BSR writelong
0002B6F8 <AmiBlitz3.ab2@15127>    MOVE.w regnum,d0
0002B6FA <AmiBlitz3.ab2@15128>  ADDQ #1,d0
0002B6FC <AmiBlitz3.ab2@15129>  ASL.w #8,d0
0002B6FE <AmiBlitz3.ab2@15130>  ASL.w #2,d0
0002B704 <AmiBlitz3.ab2@15131>  MOVE.l #$f2000023,d1
0002B706 <AmiBlitz3.ab2@15132>  OR.l d0,d1
0002B70C <AmiBlitz3.ab2@15133>  MOVE.w regnum,d0
0002B70E <AmiBlitz3.ab2@15134>  ASL.w #7,d0
0002B710 <AmiBlitz3.ab2@15135>  OR.l d0,d1
0002B716 <AmiBlitz3.ab2@15136>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002B71A <AmiBlitz3.ab2@15137>    BSR writelong
0002B71C <AmiBlitz3.ab2@15138>    MOVE.l (a7)+,d1
0002B722 <AmiBlitz3.ab2@15140>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002B726 <AmiBlitz3.ab2@15141>    BSR writelong
0002B728 <AmiBlitz3.ab2@15142> RTS
0002B72C <AmiBlitz3.ab2@15145>   MOVE.w #$6001,D1
0002B730 <AmiBlitz3.ab2@15146> BRA.w domylib
0002B734 <AmiBlitz3.ab2@15152>   MOVEA.l forthsp(PC),A0
0002B738 <AmiBlitz3.ab2@15153>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002B73A <AmiBlitz3.ab2@15154> RTS
0002B73E <AmiBlitz3.ab2@15160>   MOVE.w #$D400,D1
0002B742 <AmiBlitz3.ab2@15161> BRA.w domylib
0002B746 <AmiBlitz3.ab2@15165>   MOVE.w #$D401,D1
0002B74A <AmiBlitz3.ab2@15166> BRA.w domylib
0002B74E <AmiBlitz3.ab2@15170>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002B752 <AmiBlitz3.ab2@15171>   MOVE.w #$D402,D1
0002B756 <AmiBlitz3.ab2@15172> BRA.w domylib
0002B75A <AmiBlitz3.ab2@15176>   MOVE.w #$D403,D1
0002B75C <AmiBlitz3.ab2@15177>   MOVEQ.l #$02,D2                                          ;now a word.
0002B760 <AmiBlitz3.ab2@15178> BRA.w domylib
0002B764 <AmiBlitz3.ab2@15182>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002B76A <AmiBlitz3.ab2@15183>   TST.b fpu
0002B76E <AmiBlitz3.ab2@15184>   BEQ 'old
0002B770 <AmiBlitz3.ab2@15185>   MOVEQ #0,d1
0002B776 <AmiBlitz3.ab2@15186>   MOVE.w regnum,d1                                         ;fpu mod
0002B778 <AmiBlitz3.ab2@15187>   MOVE.l d1,d0
0002B77A <AmiBlitz3.ab2@15188>   ADDQ.l #1,d1
0002B77C <AmiBlitz3.ab2@15189>   ASL.l #7,d0
0002B77E <AmiBlitz3.ab2@15190>   ASL.l #8,d1
0002B780 <AmiBlitz3.ab2@15191>   ASL.l #2,d1
0002B782 <AmiBlitz3.ab2@15192>   OR.l d0,d1
0002B784 <AmiBlitz3.ab2@15193>   MOVE.l d0,-(a7)
0002B78A <AmiBlitz3.ab2@15194>   OR.l #$f2000021,d1
0002B78E <AmiBlitz3.ab2@15195>   BSR writelong
0002B790 <AmiBlitz3.ab2@15196>   MOVE.l (a7)+,d0
0002B792 <AmiBlitz3.ab2@15197>  RTS
0002B796 <AmiBlitz3.ab2@15200>   MOVE.w #$D404,D1
0002B798 <AmiBlitz3.ab2@15201>   MOVEQ.l #$03,D2                                          ;now a long
0002B79C <AmiBlitz3.ab2@15202> BRA.w domylib
0002B7A0 <AmiBlitz3.ab2@15210>   MOVE.w #$48C0,D1
0002B7A6 <AmiBlitz3.ab2@15211>   OR.w regnum,D1
0002B7AA <AmiBlitz3.ab2@15212>    BSR.w writeword
0002B7AC <AmiBlitz3.ab2@15213>   ADDQ.w #1,D1
0002B7B0 <AmiBlitz3.ab2@15214>    BSR.w writeword
0002B7B4 <AmiBlitz3.ab2@15217>    MOVE.w #$48C0,D1
0002B7BA <AmiBlitz3.ab2@15218>   OR.w regnum,D1
0002B7BE <AmiBlitz3.ab2@15219>    BSR.w writeword
0002B7C2 <AmiBlitz3.ab2@15220>   MOVE.w #$81C0,D1
0002B7C6 <AmiBlitz3.ab2@15221> BRA.w doplus2
0002B7CC <AmiBlitz3.ab2@15225>   TST.b fast
0002B7D0 <AmiBlitz3.ab2@15226>   BNE.s 'l10
0002B7D4 <AmiBlitz3.ab2@15227>   MOVE.w #$CB01,D1
0002B7D8 <AmiBlitz3.ab2@15228> BRA.w domylib
0002B7DC <AmiBlitz3.ab2@15234>   BSR.w JL_0_AD40
0002B7DE <AmiBlitz3.ab2@15235>   MOVE.l D4,D1
0002B7E2 <AmiBlitz3.ab2@15236>    BSR.w JL_0_AD38
0002B7E6 <AmiBlitz3.ab2@15237>    BSR.w JL_0_A352
0002B7EC <AmiBlitz3.ab2@15251>    MOVE.l #$4c410800,d1
0002B7F0 <AmiBlitz3.ab2@15252>    BSR writelong
0002B7F4 <AmiBlitz3.ab2@15255>   MOVE.w #$4e71,d1
0002B7F8 <AmiBlitz3.ab2@15257>    BSR.w JL_0_A36E
0002B7FA <AmiBlitz3.ab2@15258>   MOVE.l D5,D1
0002B7FE <AmiBlitz3.ab2@15259> BRA.w JL_0_AD38
0002B802 <AmiBlitz3.ab2@15262>     CMP.w #8,d3
0002B806 <AmiBlitz3.ab2@15263>     BEQ 'ok
0002B808 <AmiBlitz3.ab2@15264>     ASL.l #1,d3
0002B80A <AmiBlitz3.ab2@15265>     ASL.l #8,d3
0002B80E <AmiBlitz3.ab2@15266>     MOVE.w #$e080,d1
0002B810 <AmiBlitz3.ab2@15267>     OR.w d3,d1
0002B814 <AmiBlitz3.ab2@15268> BRA 'oklsr2
0002B818 <AmiBlitz3.ab2@15271>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002B81E <AmiBlitz3.ab2@15274>      SUBQ.l #6,destpointer
0002B822 <AmiBlitz3.ab2@15275>      BSR writeword
0002B824 <AmiBlitz3.ab2@15276>      MOVE.l (a7)+,d3
0002B826 <AmiBlitz3.ab2@15277>      MOVEQ #0,d1
0002B82C <AmiBlitz3.ab2@15278>      CLR.l load_var_addr
0002B832 <AmiBlitz3.ab2@15279>      CLR.l imm_addr
0002B836 <AmiBlitz3.ab2@15280> BRA JL_0_AD38
0002B83A <AmiBlitz3.ab2@15284>   MOVE.w #$CB00,D1                                         ;quickdiv
0002B83E <AmiBlitz3.ab2@15285> BRA.w domylib
0002B844 <AmiBlitz3.ab2@15289>    TST.b iee
0002B848 <AmiBlitz3.ab2@15290>    BNE fdiv1
0002B84C <AmiBlitz3.ab2@15291>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002B850 <AmiBlitz3.ab2@15292> BRA.w doflib
0002B852 <AmiBlitz3.ab2@15296>   MOVEQ #0,d0
0002B858 <AmiBlitz3.ab2@15297>   MOVE.w regnum,d0
0002B85A <AmiBlitz3.ab2@15298>   ADDQ #1,d0
0002B85C <AmiBlitz3.ab2@15299>   ASL.w #8,d0
0002B85E <AmiBlitz3.ab2@15300>   ASL.w #2,d0
0002B864 <AmiBlitz3.ab2@15301>   MOVE.l #$f2000020,d1                                     ;fpu div
0002B866 <AmiBlitz3.ab2@15302>   OR.l d0,d1
0002B86C <AmiBlitz3.ab2@15303>   MOVE.w regnum,d0
0002B86E <AmiBlitz3.ab2@15304>   ASL.w #7,d0
0002B870 <AmiBlitz3.ab2@15305>   OR.l d0,d1
0002B874 <AmiBlitz3.ab2@15306> BRA.w writelong
0002B878 <AmiBlitz3.ab2@15310>   MOVE.w #$C000,D1
0002B87C <AmiBlitz3.ab2@15311> BRA.w doplus2
0002B880 <AmiBlitz3.ab2@15315>   MOVE.w #$C040,D1
0002B884 <AmiBlitz3.ab2@15316> BRA.w doplus2
0002B888 <AmiBlitz3.ab2@15320>   MOVE.w #$C080,D1
0002B88C <AmiBlitz3.ab2@15321> BRA.w doplus2
0002B890 <AmiBlitz3.ab2@15325>   MOVE.w #$8000,D1
0002B894 <AmiBlitz3.ab2@15326> BRA.w doplus2
0002B898 <AmiBlitz3.ab2@15330>   MOVE.w #$8040,D1
0002B89C <AmiBlitz3.ab2@15331> BRA.w doplus2
0002B8A0 <AmiBlitz3.ab2@15335>   MOVE.w #$8080,D1
0002B8A4 <AmiBlitz3.ab2@15336> BRA.w doplus2
0002B8A8 <AmiBlitz3.ab2@15340>   MOVE.w #$B100,D1
0002B8AE <AmiBlitz3.ab2@15343>    MOVE.w regnum,D3
0002B8B0 <AmiBlitz3.ab2@15344>   OR.w D3,D1
0002B8B2 <AmiBlitz3.ab2@15345>   ADDQ.w #1,D3
0002B8B4 <AmiBlitz3.ab2@15346>   LSL.w #8,D3
0002B8B6 <AmiBlitz3.ab2@15347>   LSL.w #1,D3
0002B8B8 <AmiBlitz3.ab2@15348>   OR.w D3,D1
0002B8BC <AmiBlitz3.ab2@15349> BRA.w writeword
0002B8C0 <AmiBlitz3.ab2@15353>   MOVE.w #$B140,D1
0002B8C4 <AmiBlitz3.ab2@15354> BRA.w JL_0_A25C
0002B8C8 <AmiBlitz3.ab2@15358>   MOVE.w #$B180,D1
0002B8CC <AmiBlitz3.ab2@15359> BRA.w JL_0_A25C
0002B8D0 <AmiBlitz3.ab2@15363>   MOVE.w #$E1A8,D1
0002B8D4 <AmiBlitz3.ab2@15364> BRA.w JL_0_A298
0002B8D8 <AmiBlitz3.ab2@15368>   MOVE.w #$E0A8,D1
0002B8DC <AmiBlitz3.ab2@15369> BRA.w JL_0_A298
0002B8E0 <AmiBlitz3.ab2@15373>   MOVE.w #$E0A0,D1
0002B8E4 <AmiBlitz3.ab2@15374> BRA.w JL_0_A298
0002B8E6 <AmiBlitz3.ab2@15378>   MOVE.w D1,-(A7)
0002B8EC <AmiBlitz3.ab2@15379>   ADDQ.w #1,regnum
0002B8EE <AmiBlitz3.ab2@15380>   MOVE.w D2,-(A7)
0002B8F0 <AmiBlitz3.ab2@15381>   MOVE.w D2,D3
0002B8F2 <AmiBlitz3.ab2@15382>   MOVEQ.l #$02,D2
0002B8F6 <AmiBlitz3.ab2@15387>    BSR.w writeconvertcode
0002B8F8 <AmiBlitz3.ab2@15389>   MOVE.w (A7)+,D2
0002B8FE <AmiBlitz3.ab2@15390>   SUBQ.w #1,regnum
0002B902 <AmiBlitz3.ab2@15391>   CMP.w #$4,D2
0002B906 <AmiBlitz3.ab2@15392>    BEQ.w JL_0_A2C2
0002B908 <AmiBlitz3.ab2@15393>   MOVE.w D2,D3
0002B90A <AmiBlitz3.ab2@15394>   MOVEQ.l #$03,D2
0002B90E <AmiBlitz3.ab2@15395>    BSR.w JL_0_9770
0002B910 <AmiBlitz3.ab2@15398>    MOVE.w (A7)+,D1
0002B916 <AmiBlitz3.ab2@15399>   MOVE.w regnum,D3
0002B918 <AmiBlitz3.ab2@15400>   OR.w D3,D1
0002B91A <AmiBlitz3.ab2@15401>   ADDQ.w #1,D3
0002B91C <AmiBlitz3.ab2@15402>   LSL.w #8,D3
0002B91E <AmiBlitz3.ab2@15403>   LSL.w #1,D3
0002B920 <AmiBlitz3.ab2@15404>   OR.w D3,D1
0002B924 <AmiBlitz3.ab2@15405> BRA.w writeword
0002B928 <AmiBlitz3.ab2@15409>   MOVE.w #$0100,D1
0002B92C <AmiBlitz3.ab2@15410>    BSR.w JL_0_A31C
0002B932 <AmiBlitz3.ab2@15411>   MOVE.w regnum,D1
0002B936 <AmiBlitz3.ab2@15412>   ORI.w #$56C0,D1
0002B93A <AmiBlitz3.ab2@15413>    BSR.w writeword
0002B940 <AmiBlitz3.ab2@15414>   MOVE.w regnum,D1
0002B944 <AmiBlitz3.ab2@15415>   ORI.w #$4880,D1
0002B948 <AmiBlitz3.ab2@15416>    BSR.w writeword
0002B94A <AmiBlitz3.ab2@15417>   MOVEQ.l #$02,D2
0002B94C <AmiBlitz3.ab2@15418> RTS
0002B950 <AmiBlitz3.ab2@15422>   MOVE.w #$01C0,D1
0002B954 <AmiBlitz3.ab2@15425>    BSR.w JL_0_A31C
0002B956 <AmiBlitz3.ab2@15426>   MOVEQ.l #$03,D2
0002B958 <AmiBlitz3.ab2@15427> RTS
0002B95C <AmiBlitz3.ab2@15431>   MOVE.w #$0180,D1
0002B960 <AmiBlitz3.ab2@15432> BRA.w JL_0_A304
0002B964 <AmiBlitz3.ab2@15436>   MOVE.w #$0140,D1
0002B968 <AmiBlitz3.ab2@15437> BRA.w JL_0_A304
0002B96A <AmiBlitz3.ab2@15441>   MOVE.w D1,-(A7)
0002B96C <AmiBlitz3.ab2@15442>   MOVE.w D2,-(A7)
0002B96E <AmiBlitz3.ab2@15443>   MOVE.w D2,D3
0002B970 <AmiBlitz3.ab2@15444>   MOVEQ.l #$03,D2
0002B974 <AmiBlitz3.ab2@15445>    BSR.w JL_0_9770
0002B976 <AmiBlitz3.ab2@15446>   MOVE.w (A7)+,D3
0002B978 <AmiBlitz3.ab2@15447>   MOVEQ.l #$01,D2
0002B97E <AmiBlitz3.ab2@15448>   ADDQ.w #1,regnum
0002B982 <AmiBlitz3.ab2@15449>    BSR.w writeconvertcode
0002B988 <AmiBlitz3.ab2@15450>   SUBQ.w #1,regnum
0002B98E <AmiBlitz3.ab2@15451>   MOVE.w regnum,D1
0002B990 <AmiBlitz3.ab2@15452>   MOVE.w D1,D2
0002B992 <AmiBlitz3.ab2@15453>   ADDQ.w #1,D2
0002B994 <AmiBlitz3.ab2@15454>   LSL.w #8,D2
0002B996 <AmiBlitz3.ab2@15455>   LSL.w #1,D2
0002B998 <AmiBlitz3.ab2@15456>   OR.w (A7)+,D1
0002B99A <AmiBlitz3.ab2@15457>   OR.w D2,D1
0002B99E <AmiBlitz3.ab2@15458> BRA.w writeword
0002B9A4 <AmiBlitz3.ab2@15462>   MOVE.w regnum,D1
0002B9A8 <AmiBlitz3.ab2@15463>    BEQ.w JL_0_A36C
0002B9AC <AmiBlitz3.ab2@15464>   ORI.w #$2000,D1
0002B9B0 <AmiBlitz3.ab2@15465>    BSR.w writeword
0002B9B4 <AmiBlitz3.ab2@15466>   ADDI.w #$201,D1
0002B9B8 <AmiBlitz3.ab2@15467>    BSR.w writeword
0002B9BA <AmiBlitz3.ab2@15470> RTS
0002B9C0 <AmiBlitz3.ab2@15474>   MOVE.w regnum,D1
0002B9C4 <AmiBlitz3.ab2@15475>    BEQ.w JL_0_A384
0002B9C6 <AmiBlitz3.ab2@15476>   LSL.w #8,D1
0002B9C8 <AmiBlitz3.ab2@15477>   LSL.w #1,D1
0002B9CC <AmiBlitz3.ab2@15478>   ORI.w #$2000,D1
0002B9D0 <AmiBlitz3.ab2@15479>    BSR.w writeword
0002B9D2 <AmiBlitz3.ab2@15482> RTS
0002B9D8 <AmiBlitz3.ab2@15486>    CLR.b isconstantvalue
0002B9DE <AmiBlitz3.ab2@15487>    CLR.l lastconstantvalue
0002B9E6 <AmiBlitz3.ab2@15488>    CMPI.w #$7,regnum
0002B9EA <AmiBlitz3.ab2@15489>    BCS.w JL_0_A6B4
0002B9F0 <AmiBlitz3.ab2@15490>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002B9F4 <AmiBlitz3.ab2@15491>   BSR writelong
0002B9F8 <AmiBlitz3.ab2@15492>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002B9FC <AmiBlitz3.ab2@15494>   CMP.w #$3,D2
0002BA00 <AmiBlitz3.ab2@15495>    BCS.w JL_0_A3A2
0002BA04 <AmiBlitz3.ab2@15496>   MOVE.w #$2F06,D1
0002BA08 <AmiBlitz3.ab2@15499>   BSR.w writeword
0002BA0A <AmiBlitz3.ab2@15500>   MOVE.w D1,-(A7)
0002BA10 <AmiBlitz3.ab2@15501>   SUBQ.w #1,regnum
0002BA14 <AmiBlitz3.ab2@15502>    BSR.w JL_0_A6B4
0002BA1A <AmiBlitz3.ab2@15503>   ADDQ.w #1,regnum
0002BA20 <AmiBlitz3.ab2@15504>   MOVE.l #$f2001b80,d1
0002BA24 <AmiBlitz3.ab2@15505>   BSR writelong
0002BA28 <AmiBlitz3.ab2@15506>   MOVE.w #$3E06,D1
0002BA2C <AmiBlitz3.ab2@15507>   CMP.w #$3,D2
0002BA30 <AmiBlitz3.ab2@15508>    BCS.w JL_0_A3C8
0002BA34 <AmiBlitz3.ab2@15509>   MOVE.w #$2E06,D1
0002BA38 <AmiBlitz3.ab2@15512>   BSR.w writeword
0002BA3A <AmiBlitz3.ab2@15513>   MOVE.w (A7)+,D1
0002BA3E <AmiBlitz3.ab2@15514>   ANDI.w #$F000,D1
0002BA42 <AmiBlitz3.ab2@15515>   ORI.w #$C1F,D1
0002BA48 <AmiBlitz3.ab2@15516>   JSR writeword
0002BA4E <AmiBlitz3.ab2@15517>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002BA52 <AmiBlitz3.ab2@15518> BRA writelong
0002BA56 <AmiBlitz3.ab2@15522>   BSR.w JL_0_A6B4
0002BA5A <AmiBlitz3.ab2@15523>   MOVE.w #$4440,D1
0002BA5E <AmiBlitz3.ab2@15524>   CMP.w #$3,D2
0002BA62 <AmiBlitz3.ab2@15525>    BCS.w JL_0_A406
0002BA66 <AmiBlitz3.ab2@15526>   MOVE.w #$4480,D1
0002BA6A <AmiBlitz3.ab2@15527>   CMP.w #$5,D2
0002BA6E <AmiBlitz3.ab2@15528>    BCS.w JL_0_A406
0002BA72 <AmiBlitz3.ab2@15529>   CMP.w #$6,D2
0002BA76 <AmiBlitz3.ab2@15530>    BCC.w illoperr
0002BA7A <AmiBlitz3.ab2@15531>   MOVE.w #$FFC4,D1
0002BA7E <AmiBlitz3.ab2@15532> BRA.w JL_0_9604
0002BA84 <AmiBlitz3.ab2@15535>   OR.w regnum,D1                                           ;negate
0002BA8A <AmiBlitz3.ab2@15536>   CLR.l imm_addr
0002BA8E <AmiBlitz3.ab2@15537> BRA.w writeword
0002BA92 <AmiBlitz3.ab2@15541>    BSR.w eval4
0002BA96 <AmiBlitz3.ab2@15542>   CMP.w #")",D0
0002BA9A <AmiBlitz3.ab2@15543>    BEQ.w JL_0_A424
0002BA9E <AmiBlitz3.ab2@15544>   CMP.w #"}",D0
0002BAA2 <AmiBlitz3.ab2@15545>    BNE.w brackets_                                         ;syntax error brackets
0002BAA6 <AmiBlitz3.ab2@15548> BRA.w get1bytemain
0002BAAA <AmiBlitz3.ab2@15552>    BSR.w eval4
0002BAAE <AmiBlitz3.ab2@15553>   CMP.w #$5,D2
0002BAB2 <AmiBlitz3.ab2@15554>    BCC.w illoperr
0002BAB8 <AmiBlitz3.ab2@15555>   MOVE.w regnum,D1
0002BABC <AmiBlitz3.ab2@15556>   ORI.w #$4640,D1
0002BAC0 <AmiBlitz3.ab2@15557>   CMP.w #$3,D2
0002BAC4 <AmiBlitz3.ab2@15558>    BCS.w writeword
0002BAC8 <AmiBlitz3.ab2@15559>   EORI.w #$C0,D1
0002BACC <AmiBlitz3.ab2@15560> BRA.w writeword
0002BACE <AmiBlitz3.ab2@15564>   MOVEQ.l #$05,D2                                          ;fpu pi
0002BAD4 <AmiBlitz3.ab2@15565>    TST.b fpu
0002BAD8 <AmiBlitz3.ab2@15566>   BEQ 'old
0002BADE <AmiBlitz3.ab2@15567> JMP fpupi
0002BAE4 <AmiBlitz3.ab2@15570>   MOVE.w regnum,D1
0002BAE6 <AmiBlitz3.ab2@15571>   LSL.w #8,D1
0002BAE8 <AmiBlitz3.ab2@15572>   LSL.w #1,D1
0002BAEC <AmiBlitz3.ab2@15573>   ORI.w #$203C,D1
0002BAF0 <AmiBlitz3.ab2@15574>    BSR.w writeword
0002BAF6 <AmiBlitz3.ab2@15575>   MOVE.l #$C90FDA42,D1
0002BAFA <AmiBlitz3.ab2@15576>    BSR.w writelong
0002BAFE <AmiBlitz3.ab2@15577> BRA.w get1bytemain
0002BBFA <AmiBlitz3.ab2@15585> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002BCF6 <AmiBlitz3.ab2@15586>              Ds.l 63
0002BD3E <AmiBlitz3.ab2@15587>              Ds.l 18
0002BD42 <AmiBlitz3.ab2@15588> forthsp:     Dc.l forthstack
0002BD6E <AmiBlitz3.ab2@15593>    !fget
0002BD72 <AmiBlitz3.ab2@15594>    CMP.b #$7e,d0
0002BD76 <AmiBlitz3.ab2@15595>    BNE 'noc
0002BD78 <AmiBlitz3.ab2@15596>    SUBQ.l #1,a5
0002BD7C <AmiBlitz3.ab2@15597>    BSR get1bytemain
0002BD80 <AmiBlitz3.ab2@15600>    CMP.b #"#",d0
0002BD84 <AmiBlitz3.ab2@15601>    BNE 'ld1
0002BD88 <AmiBlitz3.ab2@15602>    CMP.b #$22,(a5)
0002BD8C <AmiBlitz3.ab2@15603>    BNE 'ld1
0002BD92 <AmiBlitz3.ab2@15604>    JSR addimmi
0002BD96 <AmiBlitz3.ab2@15607>    CMP.b #$22,d0
0002BD9A <AmiBlitz3.ab2@15608>    BNE 'l11
0002BDA0 <AmiBlitz3.ab2@15618>    NOT.w instringon
0002BDA2 <AmiBlitz3.ab2@15621>    TST.b d0
0002BDA6 <AmiBlitz3.ab2@15622>    BPL 'l10
0002BDA8 <AmiBlitz3.ab2@15623>    LSL.w #8,d0
0002BDAA <AmiBlitz3.ab2@15624>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002BDB0 <AmiBlitz3.ab2@15625>    MOVE.l d0,lasttoken
0002BDB6 <AmiBlitz3.ab2@15626>    MOVE.w d0,lastchar
0002BDBC <AmiBlitz3.ab2@15627>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002BDC0 <AmiBlitz3.ab2@15629>   CMP.w #"(",D0
0002BDC4 <AmiBlitz3.ab2@15630>    BEQ.w checkcast2
0002BDC8 <AmiBlitz3.ab2@15631> nocast CMP.w #"{",D0
0002BDCC <AmiBlitz3.ab2@15632>    BEQ.w JL_0_A410
0002BDD0 <AmiBlitz3.ab2@15633>   CMP.w #$2D,D0
0002BDD4 <AmiBlitz3.ab2@15634>    BEQ.w JL_0_A3DA
0002BDD8 <AmiBlitz3.ab2@15635>   CMP.w #-$7F77,D0
0002BDDC <AmiBlitz3.ab2@15636>    BEQ.w JL_0_A428
0002BDE0 <AmiBlitz3.ab2@15637>   MOVEA.l forthsp(PC),A1
0002BDE6 <AmiBlitz3.ab2@15638>   CMPA.l #forthsp,A1
0002BDEA <AmiBlitz3.ab2@15639>    BCC.w conmemerr
0002BDF0 <AmiBlitz3.ab2@15640>   MOVE.l destpointer,(A1)+
0002BDF6 <AmiBlitz3.ab2@15641>   MOVE.l hunkoffsetbase,(A1)+
0002BDFC <AmiBlitz3.ab2@15642>   MOVE.l lasta6,(A1)+
0002BE02 <AmiBlitz3.ab2@15643>   MOVE.w lasta6,(A1)+
0002BE04 <AmiBlitz3.ab2@15644>   CLR.w (A1)+
0002BE06 <AmiBlitz3.ab2@15645>   CLR.w (A1)+
0002BE0C <AmiBlitz3.ab2@15646>   MOVE.l A1,forthsp
0002BE1E <AmiBlitz3.ab2@15648>    !compare2
0002BE22 <AmiBlitz3.ab2@15649>    BEQ.w JL_0_B224
0002BE26 <AmiBlitz3.ab2@15650>   CMP.w #".",D0
0002BE2A <AmiBlitz3.ab2@15651>    BEQ.w JL_0_B21E
0002BE2E <AmiBlitz3.ab2@15652>   CMP.w #"#",D0
0002BE32 <AmiBlitz3.ab2@15653>    BEQ.w get_constant
0002BE36 <AmiBlitz3.ab2@15654>   CMP.w #"$",D0
0002BE3A <AmiBlitz3.ab2@15655>    BEQ.w get_hexconstant
0002BE3E <AmiBlitz3.ab2@15656>   CMP.w #"%",D0
0002BE42 <AmiBlitz3.ab2@15657>    BEQ.w JL_0_A8C0
0002BE46 <AmiBlitz3.ab2@15658>   CMP.w #-$7FD1,D0
0002BE4A <AmiBlitz3.ab2@15659>    BEQ.w _SizeOf
0002BE4E <AmiBlitz3.ab2@15660>   CMP.w #-$7F46,D0
0002BE52 <AmiBlitz3.ab2@15661>    BEQ.w JL_0_A44E
0002BE56 <AmiBlitz3.ab2@15662>   CMP.w #-$7F3B,D0
0002BE5A <AmiBlitz3.ab2@15663>    BEQ.w JL_0_A83C
0002BE5E <AmiBlitz3.ab2@15664>   CMP.w #-$7F3A,D0
0002BE62 <AmiBlitz3.ab2@15665>    BEQ.w JL_0_A846
0002BE68 <AmiBlitz3.ab2@15666>   MOVE.w constmode,D1
0002BE6C <AmiBlitz3.ab2@15667>    BEQ.w JL_0_A776
0002BE8E <AmiBlitz3.ab2@15668>    !compare1                                               ;bsr.w tstalpha
0002BE92 <AmiBlitz3.ab2@15669>    BEQ.w JL_0_AF22
0002BE96 <AmiBlitz3.ab2@15670>   CMP.w #$5F,D0
0002BE9A <AmiBlitz3.ab2@15671>    BEQ.w JL_0_AF22
0002BE9E <AmiBlitz3.ab2@15672>   CMP.w #$22,D0
0002BEA2 <AmiBlitz3.ab2@15673>    BEQ.w JL_0_AF00
0002BEA6 <AmiBlitz3.ab2@15674> BRA.w syntaxerr
0002BEAC <AmiBlitz3.ab2@15676> checkcast2 JMP checkcast
0002BEB2 <AmiBlitz3.ab2@15679>   MOVE.w cfetchmode,D1
0002BEB6 <AmiBlitz3.ab2@15680>   BEQ.w JL_0_A784
0002BEBA <AmiBlitz3.ab2@15681> BRA.w badconerr
0002BEC0 <AmiBlitz3.ab2@15684> JMP syntaxerropt4
0002BEC2 <AmiBlitz3.ab2@15688>   NOT.w -(A1)
0002BEE4 <AmiBlitz3.ab2@15689>   !compare1                                                ;bsr.w tstalpha
0002BEE8 <AmiBlitz3.ab2@15690>    BEQ.w JL_0_AF4C
0002BEEC <AmiBlitz3.ab2@15691>   CMP.w #$2A,D0
0002BEF0 <AmiBlitz3.ab2@15692>    BEQ.w JL_0_AF4C
0002BEF4 <AmiBlitz3.ab2@15693>   CMP.w #$5C,D0
0002BEF8 <AmiBlitz3.ab2@15694>    BEQ.w JL_0_AF4C
0002BEFC <AmiBlitz3.ab2@15695>   CMP.w #$22,D0
0002BF00 <AmiBlitz3.ab2@15696>    BEQ.w JL_0_ADC0
0002BF04 <AmiBlitz3.ab2@15697>   BTST #$F,D0
0002BF08 <AmiBlitz3.ab2@15698>    BNE.w JL_0_AAF2
0002BF0C <AmiBlitz3.ab2@15699>   CMP.w #"&",D0
0002BF10 <AmiBlitz3.ab2@15700>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002BF14 <AmiBlitz3.ab2@15701>   CMP.w #"?",D0
0002BF18 <AmiBlitz3.ab2@15702>    BEQ.w JL_0_AED4
0002BF1C <AmiBlitz3.ab2@15705>   CMP.b #"@",d0
0002BF20 <AmiBlitz3.ab2@15706>    BNE syntaxerr
0002BF26 <AmiBlitz3.ab2@15707>   TST.b newsyntax
0002BF2A <AmiBlitz3.ab2@15708>    BEQ JUMP_syntaxerropt4
0002BF30 <AmiBlitz3.ab2@15709>   MOVE.w regnum,D1
0002BF32 <AmiBlitz3.ab2@15710>   LSL.w #8,D1
0002BF34 <AmiBlitz3.ab2@15711>   LSL.w #1,D1
0002BF38 <AmiBlitz3.ab2@15712>   ORI.w #$203C,D1
0002BF3C <AmiBlitz3.ab2@15713>   BSR.w writeword
0002BF40 <AmiBlitz3.ab2@15714>   CMP.b #$22,(a5)
0002BF44 <AmiBlitz3.ab2@15715>    BNE syntaxerr
0002BF46 <AmiBlitz3.ab2@15716>   ADDQ #1,a5
0002BF48 <AmiBlitz3.ab2@15717>   MOVEQ #0,d0
0002BF4C <AmiBlitz3.ab2@15718>   CMP.b #1,d2
0002BF50 <AmiBlitz3.ab2@15719>    BEQ 'l3b
0002BF54 <AmiBlitz3.ab2@15720>   CMP.b #2,d2
0002BF58 <AmiBlitz3.ab2@15721>    BEQ 'l2b
0002BF5C <AmiBlitz3.ab2@15722>   CMP.b #4,d2
0002BF60 <AmiBlitz3.ab2@15723>    BEQ error_convert_types
0002BF62 <AmiBlitz3.ab2@15724>   MOVE.b (a5)+,d0
0002BF66 <AmiBlitz3.ab2@15725>   BEQ syntaxerr
0002BF6A <AmiBlitz3.ab2@15726>   CMP.b #$22,d0
0002BF6E <AmiBlitz3.ab2@15727>   BNE 'l1
0002BF72 <AmiBlitz3.ab2@15728>     MOVE.b #0,d0
0002BF76 <AmiBlitz3.ab2@15729> BRA 'do
0002BF78 <AmiBlitz3.ab2@15732>   ASL.l #8,d0
0002BF7A <AmiBlitz3.ab2@15733>   MOVE.b (a5)+,d0
0002BF7E <AmiBlitz3.ab2@15734>   BEQ syntaxerr
0002BF82 <AmiBlitz3.ab2@15735>   CMP.b #$22,d0
0002BF86 <AmiBlitz3.ab2@15736>   BNE 'l2
0002BF8A <AmiBlitz3.ab2@15737>     MOVE.b #0,d0
0002BF8C <AmiBlitz3.ab2@15738>     ASR.l #8,d0
0002BF90 <AmiBlitz3.ab2@15739> BRA 'do
0002BF92 <AmiBlitz3.ab2@15742>   ASL.l #8,d0
0002BF94 <AmiBlitz3.ab2@15745>   MOVE.b (a5)+,d0
0002BF98 <AmiBlitz3.ab2@15746>    BEQ syntaxerr
0002BF9C <AmiBlitz3.ab2@15747>    CMP.b #$22,d0
0002BFA0 <AmiBlitz3.ab2@15748>    BNE 'l3
0002BFA4 <AmiBlitz3.ab2@15749>    MOVE.b #0,d0
0002BFA6 <AmiBlitz3.ab2@15750>    ASR.l #8,d0
0002BFAA <AmiBlitz3.ab2@15751> BRA 'do
0002BFAC <AmiBlitz3.ab2@15754>   ASL.l #8,d0
0002BFAE <AmiBlitz3.ab2@15757>   MOVE.b (a5)+,d0
0002BFB2 <AmiBlitz3.ab2@15758>    BEQ syntaxerr
0002BFB6 <AmiBlitz3.ab2@15759>    CMP.b #$22,d0
0002BFBA <AmiBlitz3.ab2@15760>    BNE 'l4
0002BFBE <AmiBlitz3.ab2@15761>    MOVE.b #0,d0
0002BFC0 <AmiBlitz3.ab2@15762>    ASR.l #8,d0
0002BFC4 <AmiBlitz3.ab2@15763> BRA 'do
0002BFC8 <AmiBlitz3.ab2@15766>    CMP.b #$22,(a5)+
0002BFCC <AmiBlitz3.ab2@15767>    BNE JUMP_error4char
0002BFCE <AmiBlitz3.ab2@15770>   MOVE.l d0,d1
0002BFD2 <AmiBlitz3.ab2@15771>     BSR writelong
0002BFD6 <AmiBlitz3.ab2@15772>     BSR get1bytemain
0002BFD8 <AmiBlitz3.ab2@15773> RTS
0002BFDC <AmiBlitz3.ab2@15777>   BSR.w get1bytemain
0002BFE0 <AmiBlitz3.ab2@15778>   CMP.w #$2E,D0
0002BFE4 <AmiBlitz3.ab2@15779>    BEQ.b JL_0_A7F4
0002BFEE <AmiBlitz3.ab2@15781>   MOVE.w oldqflag,instringon
0002BFF4 <AmiBlitz3.ab2@15782>   MOVEA.l lastsourcepos,A5
0002BFF6 <AmiBlitz3.ab2@15783>   MOVE.w D2,-(A7)
0002BFFA <AmiBlitz3.ab2@15784>    BSR.w getparameter2
0002BFFE <AmiBlitz3.ab2@15785>    BEQ.w syntaxerr
0002C004 <AmiBlitz3.ab2@15786>   LEA varbase,A2
0002C008 <AmiBlitz3.ab2@15787>    BSR.w findvariable
0002C00C <AmiBlitz3.ab2@15788>    BNE.w notypeerr
0002C010 <AmiBlitz3.ab2@15789>   MOVE.w $4(A2),D3
0002C012 <AmiBlitz3.ab2@15790>   EXT.l D3
0002C014 <AmiBlitz3.ab2@15791>   MOVE.w (A7)+,D2
0002C018 <AmiBlitz3.ab2@15792> BRA.w JL_0_B46E
0002C01A <AmiBlitz3.ab2@15796>   MOVE.w D2,-(A7)
0002C01E <AmiBlitz3.ab2@15797>    BSR.w getparameter2
0002C022 <AmiBlitz3.ab2@15798>    BEQ.w syntaxerr
0002C028 <AmiBlitz3.ab2@15799>   LEA newtypebase,A2
0002C02C <AmiBlitz3.ab2@15800>    BSR.w findtype
0002C030 <AmiBlitz3.ab2@15801>    BNE.w notypeerr
0002C032 <AmiBlitz3.ab2@15802>   MOVEQ.l #$00,D3
0002C036 <AmiBlitz3.ab2@15803>   CMP.w #$5C,D0
0002C03A <AmiBlitz3.ab2@15804>    BNE.w JL_0_A832
0002C03E <AmiBlitz3.ab2@15805>    BSR.w getparameter2
0002C042 <AmiBlitz3.ab2@15806>    BEQ.w syntaxerr
0002C046 <AmiBlitz3.ab2@15807>   LEA $4(A2),A2
0002C04A <AmiBlitz3.ab2@15808>    BSR.w findvariable2
0002C04E <AmiBlitz3.ab2@15809>    BNE.w noofferr
0002C052 <AmiBlitz3.ab2@15810>   MOVE.w $4(A2),D3
0002C056 <AmiBlitz3.ab2@15811> BRA.w JL_0_A836
0002C05A <AmiBlitz3.ab2@15815>   MOVE.w $8(A2),D3
0002C05C <AmiBlitz3.ab2@15818>   MOVE.w (A7)+,D2
0002C060 <AmiBlitz3.ab2@15819> BRA.w JL_0_B46E
0002C062 <AmiBlitz3.ab2@15823>   MOVEQ.l #-$01,D3
0002C066 <AmiBlitz3.ab2@15824>    BSR.w get1bytemain
0002C06A <AmiBlitz3.ab2@15825> BRA.w JL_0_B46E
0002C06C <AmiBlitz3.ab2@15829>   MOVEQ.l #$00,D3
0002C070 <AmiBlitz3.ab2@15830>    BSR.w get1bytemain
0002C074 <AmiBlitz3.ab2@15831> BRA.w JL_0_B46E
0002C078 <AmiBlitz3.ab2@15835>   CMP.w #$30,D0
0002C07C <AmiBlitz3.ab2@15836>    BCS.w JL_0_A876
0002C080 <AmiBlitz3.ab2@15837>   CMP.w #$39,D0
0002C084 <AmiBlitz3.ab2@15838>    BLS.w JL_0_A874
0002C088 <AmiBlitz3.ab2@15839>   ANDI.w #$FFDF,D0
0002C08C <AmiBlitz3.ab2@15840>   CMP.w #$46,D0
0002C090 <AmiBlitz3.ab2@15841>    BHI.w JL_0_A876
0002C094 <AmiBlitz3.ab2@15842>   CMP.w #$41,D0
0002C098 <AmiBlitz3.ab2@15843>    BCS.w JL_0_A876
0002C09A <AmiBlitz3.ab2@15846>    CMP.w D0,D0
0002C09C <AmiBlitz3.ab2@15849> RTS
0002C0A0 <AmiBlitz3.ab2@15853>   CMP.w #$31,D0
0002C0A4 <AmiBlitz3.ab2@15854>    BEQ.w JL_0_A884
0002C0A8 <AmiBlitz3.ab2@15855>   CMP.w #$30,D0
0002C0AA <AmiBlitz3.ab2@15858> RTS
0002C0AC <AmiBlitz3.ab2@15862>    MOVEQ #0,d0
0002C0AE <AmiBlitz3.ab2@15863>    MOVE.b (a5)+,d0
0002C0B0 <AmiBlitz3.ab2@15864>    MOVE.b (a5)+,d0
0002C0B4 <AmiBlitz3.ab2@15865>    BSR ishex
0002C0B8 <AmiBlitz3.ab2@15866>    BNE syntaxerr
0002C0BC <AmiBlitz3.ab2@15867>    SUBI.w #$30,D0
0002C0C0 <AmiBlitz3.ab2@15868>    CMP.w #$9,D0
0002C0C4 <AmiBlitz3.ab2@15869>    BLS.w 'l1
0002C0C6 <AmiBlitz3.ab2@15870>    SUBQ.w #7,D0
0002C0C8 <AmiBlitz3.ab2@15873>    MOVE.l d0,d1
0002C0CA <AmiBlitz3.ab2@15874>    MOVE.b (a5)+,d0
0002C0CE <AmiBlitz3.ab2@15875>      BSR ishex
0002C0D2 <AmiBlitz3.ab2@15876>     BNE syntaxerr
0002C0D4 <AmiBlitz3.ab2@15877>     LSL.l #4,d1
0002C0D8 <AmiBlitz3.ab2@15878>     SUBI.w #$30,D0
0002C0DC <AmiBlitz3.ab2@15879>    CMP.w #$9,D0
0002C0E0 <AmiBlitz3.ab2@15880>    BLS.w 'l2
0002C0E2 <AmiBlitz3.ab2@15881>    SUBQ.w #7,D0
0002C0E4 <AmiBlitz3.ab2@15884>   ADD.l d1,d0
0002C0E6 <AmiBlitz3.ab2@15885> RTS
0002C0EA <AmiBlitz3.ab2@15889>    BSR.w get1bytemain
0002C0EE <AmiBlitz3.ab2@15890>    BSR.w ishex
0002C0F2 <AmiBlitz3.ab2@15891>    BNE.w syntaxerr
0002C0F4 <AmiBlitz3.ab2@15892>   MOVEQ.l #$00,D3
0002C0F8 <AmiBlitz3.ab2@15893>   CMP.w #5,d2
0002C0FC <AmiBlitz3.ab2@15894>   BNE JL_0_A894
0002C102 <AmiBlitz3.ab2@15895>   CMP.l #newtype_double,a2
0002C106 <AmiBlitz3.ab2@15896>   BEQ 'doit
0002C10C <AmiBlitz3.ab2@15897>   CMP.l #newtype_float,a2
0002C110 <AmiBlitz3.ab2@15898>   BNE JL_0_A894
0002C118 <AmiBlitz3.ab2@15901>    fmove.s #0,fp0
0002C11E <AmiBlitz3.ab2@15903>   TST.b fpu
0002C122 <AmiBlitz3.ab2@15904>   BEQ JL_0_A894
0002C128 <AmiBlitz3.ab2@15905>   fmove.w #16,fp1
0002C12C <AmiBlitz3.ab2@15906>   fmul.x fp1,fp0
0002C130 <AmiBlitz3.ab2@15907>   SUBI.w #$30,D0
0002C134 <AmiBlitz3.ab2@15908>   CMP.w #$9,D0
0002C138 <AmiBlitz3.ab2@15909>    BLS.w JL_0_A8AEa
0002C13A <AmiBlitz3.ab2@15910>   SUBQ.w #7,D0
0002C13E <AmiBlitz3.ab2@15913>    fmove.w d0,fp1
0002C142 <AmiBlitz3.ab2@15914>    fadd.x fp1,fp0
0002C146 <AmiBlitz3.ab2@15915>    BSR.w get1bytemain
0002C14A <AmiBlitz3.ab2@15916>    BSR.w ishex
0002C14E <AmiBlitz3.ab2@15917>    BEQ.w JL_0_A894a
0002C152 <AmiBlitz3.ab2@15918> BRA.w nofpregload
0002C158 <AmiBlitz3.ab2@15922>   CMP.l #$10000000,D3
0002C15C <AmiBlitz3.ab2@15923>    BCC.w overerr
0002C15E <AmiBlitz3.ab2@15924>   LSL.l #4,D3
0002C162 <AmiBlitz3.ab2@15925>   SUBI.w #$30,D0
0002C166 <AmiBlitz3.ab2@15926>   CMP.w #$9,D0
0002C16A <AmiBlitz3.ab2@15927>    BLS.w JL_0_A8AE
0002C16C <AmiBlitz3.ab2@15928>   SUBQ.w #7,D0
0002C16E <AmiBlitz3.ab2@15931>   OR.w D0,D3
0002C172 <AmiBlitz3.ab2@15932>    BSR.w get1bytemain
0002C176 <AmiBlitz3.ab2@15933>    BSR.w ishex
0002C17A <AmiBlitz3.ab2@15934>    BEQ.w JL_0_A894
0002C17E <AmiBlitz3.ab2@15935> BRA.w JL_0_B46E
0002C182 <AmiBlitz3.ab2@15939>    BSR.w get1bytemain
0002C186 <AmiBlitz3.ab2@15940>    BSR.w JL_0_A878
0002C18A <AmiBlitz3.ab2@15941>    BNE.w syntaxerr
0002C18C <AmiBlitz3.ab2@15942>    MOVEQ.l #$00,D3
0002C18E <AmiBlitz3.ab2@15945>    LSL.l #1,D3
0002C192 <AmiBlitz3.ab2@15946>    BCS.w overerr
0002C196 <AmiBlitz3.ab2@15947>   SUBI.w #$30,D0
0002C198 <AmiBlitz3.ab2@15948>   OR.w D0,D3
0002C19C <AmiBlitz3.ab2@15949>    BSR.w get1bytemain
0002C1A0 <AmiBlitz3.ab2@15950>    BSR.w JL_0_A878
0002C1A4 <AmiBlitz3.ab2@15951>    BEQ.w JL_0_A8CE
0002C1A8 <AmiBlitz3.ab2@15952> BRA.w JL_0_B46E
0002C1AA <AmiBlitz3.ab2@15956>    MOVE.w d2,-(A7)
0002C1B2 <AmiBlitz3.ab2@15957>    MOVE.b #0,automode
0002C1B6 <AmiBlitz3.ab2@15958>    CMP.b #"@",(a5)
0002C1BA <AmiBlitz3.ab2@15959>    BNE 'l1
0002C1BC <AmiBlitz3.ab2@15960>    ADDQ.l #1,a5
0002C1C4 <AmiBlitz3.ab2@15961>    MOVE.b #1,automode
0002C1C8 <AmiBlitz3.ab2@15962>    BSR getparameter2
0002C1CC <AmiBlitz3.ab2@15963>    BSR findlabel2
0002C1D0 <AmiBlitz3.ab2@15964>    BNE 'addit
0002C1D4 <AmiBlitz3.ab2@15965> BRA errormsg_autocount
0002C1D8 <AmiBlitz3.ab2@15968>   BSR.w addlabelhash
0002C1E0 <AmiBlitz3.ab2@15969>   MOVE.l #$1,$4(A2)
0002C1E4 <AmiBlitz3.ab2@15970>   MOVEM.l a2/a5,-(a7)
0002C1EA <AmiBlitz3.ab2@15971>   MOVE.w lastchar,-(a7)
0002C1F0 <AmiBlitz3.ab2@15972>   LEA autostorename,a5
0002C1F4 <AmiBlitz3.ab2@15973>   BSR getparameter2
0002C1F8 <AmiBlitz3.ab2@15974>   BSR findlabel2
0002C1FC <AmiBlitz3.ab2@15975>   BEQ 'found
0002C200 <AmiBlitz3.ab2@15976>   BSR.w addlabelhash
0002C208 <AmiBlitz3.ab2@15977>   MOVE.l #$1,$4(A2)
0002C210 <AmiBlitz3.ab2@15978>   MOVE.l #0,8(a2)
0002C212 <AmiBlitz3.ab2@15981>    MOVE.w (a7)+,d0
0002C218 <AmiBlitz3.ab2@15982>    MOVE.w d0,lastchar
0002C21C <AmiBlitz3.ab2@15983>   MOVE.l 8(a2),d3
0002C224 <AmiBlitz3.ab2@15984>   ADD.l #1,8(a2)
0002C228 <AmiBlitz3.ab2@15985>   MOVEM.l (a7)+,a2/a5
0002C22C <AmiBlitz3.ab2@15986>   MOVE.l d3,8(a2)
0002C230 <AmiBlitz3.ab2@15987>   MOVE.l $8(A2),D3
0002C234 <AmiBlitz3.ab2@15988> BRA.l 'l3
0002C238 <AmiBlitz3.ab2@15991>   BSR.w getparameter2
0002C23E <AmiBlitz3.ab2@15992>     TST.b incnif
0002C242 <AmiBlitz3.ab2@15993>     BEQ 'lc1
0002C246 <AmiBlitz3.ab2@15994>     BSR.w findlabel2
0002C24A <AmiBlitz3.ab2@15995>     BNE 'l5
0002C24C <AmiBlitz3.ab2@15996>     MOVEQ #1,d3
0002C24E <AmiBlitz3.ab2@15997>     MOVE.w (A7)+,D2
0002C252 <AmiBlitz3.ab2@15998> BRA JL_0_B46E
0002C254 <AmiBlitz3.ab2@16001>   MOVEQ #0,d3
0002C256 <AmiBlitz3.ab2@16002>     MOVE.w (A7)+,D2
0002C25A <AmiBlitz3.ab2@16003> BRA JL_0_B46E
0002C25E <AmiBlitz3.ab2@16006>    BSR.w findlabel2
0002C262 <AmiBlitz3.ab2@16007>    BNE.w cnferr
0002C26A <AmiBlitz3.ab2@16010>    CMPI.l #$1,$4(A2)
0002C26E <AmiBlitz3.ab2@16011>    BNE.w cnferr
0002C272 <AmiBlitz3.ab2@16013>    MOVE.l $8(A2),D3
0002C274 <AmiBlitz3.ab2@16014>    MOVE.w (A7)+,D2
0002C278 <AmiBlitz3.ab2@16015> BRA.w JL_0_B46E
0002C27E <AmiBlitz3.ab2@16019>   CLR.w vartype
0002C286 <AmiBlitz3.ab2@16020>   MOVE.b #3,peekaddrsize
0002C28A <AmiBlitz3.ab2@16021>   BSR.w JL_0_A916
0002C290 <AmiBlitz3.ab2@16022>   MOVE.l a2,rightsidetype
0002C292 <AmiBlitz3.ab2@16023>   MOVEQ.l #$03,D2
0002C294 <AmiBlitz3.ab2@16024> RTS
0002C298 <AmiBlitz3.ab2@16028>    BSR.w get1bytemain
0002C2AA <AmiBlitz3.ab2@16029>    !compare2
0002C2AE <AmiBlitz3.ab2@16030>    BEQ andop2
0002C2B2 <AmiBlitz3.ab2@16031>    BSR.w getparameter
0002C2B6 <AmiBlitz3.ab2@16032>    BSR.w JL_0_8E3C
0002C2BA <AmiBlitz3.ab2@16033>    BSR.w calcvar
0002C2BE <AmiBlitz3.ab2@16034>   CMP.b #$7,D2
0002C2C2 <AmiBlitz3.ab2@16035>    BNE.w JL_0_A960
0002C2C6 <AmiBlitz3.ab2@16036>   BTST #$F,D2
0002C2CA <AmiBlitz3.ab2@16037>    BNE.w JL_0_A94A
0002C2D0 <AmiBlitz3.ab2@16038>   MOVE.w D3,stamp2+2
0002C2D6 <AmiBlitz3.ab2@16039>   MOVE.l stamp2,D1
0002C2DA <AmiBlitz3.ab2@16040>    BSR.w pokela5s
0002C2DE <AmiBlitz3.ab2@16041> BRA.w JL_0_A978
0002C2E4 <AmiBlitz3.ab2@16045>   MOVE.w regnum,D1
0002C2E6 <AmiBlitz3.ab2@16046>   LSL.w #8,D1
0002C2E8 <AmiBlitz3.ab2@16047>   LSL.w #1,D1
0002C2EE <AmiBlitz3.ab2@16048>   OR.w stamp,D1
0002C2F2 <AmiBlitz3.ab2@16049>    BSR.w writeword
0002C2F4 <AmiBlitz3.ab2@16050> RTS
0002C2F8 <AmiBlitz3.ab2@16054>   BTST #$F,D2
0002C2FC <AmiBlitz3.ab2@16055>    BNE.w JL_0_A978
0002C302 <AmiBlitz3.ab2@16056>   MOVE.w D3,leaamp+2
0002C308 <AmiBlitz3.ab2@16057>   MOVE.l leaamp,D1
0002C30C <AmiBlitz3.ab2@16058>    BSR.w pokela5s
0002C312 <AmiBlitz3.ab2@16061>   MOVE.w regnum,D1
0002C314 <AmiBlitz3.ab2@16062>   LSL.w #8,D1
0002C316 <AmiBlitz3.ab2@16063>   LSL.w #1,D1
0002C31C <AmiBlitz3.ab2@16064>   OR.w leaamp2,D1
0002C320 <AmiBlitz3.ab2@16065> BRA.w writeword
0002C324 <AmiBlitz3.ab2@16069>   MOVE.w #$D200,D1
0002C328 <AmiBlitz3.ab2@16070>    BSR.w Atokejsr
0002C32A <AmiBlitz3.ab2@16071>   MOVEQ.l #$03,D2
0002C32C <AmiBlitz3.ab2@16072> RTS
0002C330 <AmiBlitz3.ab2@16076> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002C332 <AmiBlitz3.ab2@16077>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002C334 <AmiBlitz3.ab2@16078>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002C338 <AmiBlitz3.ab2@16084>    BSR.w get1bytemain
0002C33A <AmiBlitz3.ab2@16085>   MOVE.w D0,D1
0002C33E <AmiBlitz3.ab2@16086>    BPL.w syntaxerr
0002C340 <AmiBlitz3.ab2@16087>   MOVE.w D2,-(A7)
0002C344 <AmiBlitz3.ab2@16088>   BCLR #$F,D1
0002C348 <AmiBlitz3.ab2@16089>    BSR.w searchinstr
0002C34C <AmiBlitz3.ab2@16090>   MOVE.l $12(A2),D0
0002C350 <AmiBlitz3.ab2@16091>   TST.w -$2(A2,D0.L)
0002C354 <AmiBlitz3.ab2@16092>    BEQ.w freeerr
0002C356 <AmiBlitz3.ab2@16093>   MOVE.w (A7)+,D2
0002C358 <AmiBlitz3.ab2@16094> RTS
0002C35C <AmiBlitz3.ab2@16098>   MOVE.l $0(A5),D0
0002C360 <AmiBlitz3.ab2@16099>    BNE.b ucodeskip
0002C362 <AmiBlitz3.ab2@16100>   MOVEQ.l #-$01,D0
0002C366 <AmiBlitz3.ab2@16101> BRA.b usedcodef
0002C36A <AmiBlitz3.ab2@16104>   SUB.l $0(A5),D0
0002C36C <AmiBlitz3.ab2@16107>   LSR.w #8,D0
0002C370 <AmiBlitz3.ab2@16112>    MOVE.l $0(A5),D0
0002C374 <AmiBlitz3.ab2@16113>    BNE.b ucodeskip2
0002C376 <AmiBlitz3.ab2@16114>   MOVEQ.l #-$01,D0
0002C37A <AmiBlitz3.ab2@16115> BRA.b usedcode2f
0002C37E <AmiBlitz3.ab2@16118>   SUB.l $0(A5),D0                                          ;usedcode2
0002C380 <AmiBlitz3.ab2@16119>   LSR.w #8,D0
0002C382 <AmiBlitz3.ab2@16122>   LSR.w #8,D0
0002C384 <AmiBlitz3.ab2@16127>   MOVE.l D0,-(A7)
0002C386 <AmiBlitz3.ab2@16130>   MOVE.l (A7)+,D0
0002C388 <AmiBlitz3.ab2@16133>   MOVE.l D0,D0
0002C38C <AmiBlitz3.ab2@16139>   BSR.w JL_0_A9A0
0002C390 <AmiBlitz3.ab2@16141>   MOVE.w -$2(A2,D0.L),D3
0002C394 <AmiBlitz3.ab2@16142>   CMP.w #$9,D3
0002C398 <AmiBlitz3.ab2@16143>    BCC.w doused__skip
0002C39C <AmiBlitz3.ab2@16147>   LEA usedcode(PC),A0
0002C3A0 <AmiBlitz3.ab2@16148>   LEA usedcodef(PC),A1
0002C3A6 <AmiBlitz3.ab2@16150>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002C3AA <AmiBlitz3.ab2@16151>   ANDI.w #$7,D3
0002C3AC <AmiBlitz3.ab2@16152>   LSL.w #8,D3
0002C3AE <AmiBlitz3.ab2@16153>   LSL.w #1,D3
0002C3B2 <AmiBlitz3.ab2@16154>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002C3B6 <AmiBlitz3.ab2@16155> BRA.w doused__skip2
0002C3BA <AmiBlitz3.ab2@16160>   LEA usedcode2(PC),A0
0002C3BE <AmiBlitz3.ab2@16161>   LEA usedcode2f(PC),A1
0002C3C4 <AmiBlitz3.ab2@16163>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002C3C6 <AmiBlitz3.ab2@16164>   SUBQ.w #8,D3
0002C3C8 <AmiBlitz3.ab2@16165>   LSL.w #8,D3
0002C3CA <AmiBlitz3.ab2@16166>   LSL.w #1,D3
0002C3CE <AmiBlitz3.ab2@16167>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002C3D2 <AmiBlitz3.ab2@16170>   MOVE.w -$6(A2,D0.L),D3
0002C3D6 <AmiBlitz3.ab2@16171>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002C3D8 <AmiBlitz3.ab2@16172>   ADDQ.w #4,D3
0002C3DC <AmiBlitz3.ab2@16173>   MOVE.w D3,$2(A0)
0002C3E2 <AmiBlitz3.ab2@16174>   MOVE.w regnum,D1
0002C3E6 <AmiBlitz3.ab2@16175>    BEQ.w doused__skip3
0002C3EA <AmiBlitz3.ab2@16176>   MOVE.w usedprep(PC),D1
0002C3EE <AmiBlitz3.ab2@16177>    BSR.w writeword
0002C3F2 <AmiBlitz3.ab2@16180>   BSR.w pokecode
0002C3F8 <AmiBlitz3.ab2@16181>   MOVE.w regnum,D1
0002C3FC <AmiBlitz3.ab2@16182>    BEQ.w doused__skip4
0002C3FE <AmiBlitz3.ab2@16183>   LSL.w #8,D1
0002C400 <AmiBlitz3.ab2@16184>   LSL.w #1,D1
0002C404 <AmiBlitz3.ab2@16185>   OR.w usedfix(PC),D1
0002C408 <AmiBlitz3.ab2@16186>    BSR.w writeword
0002C40C <AmiBlitz3.ab2@16187>   MOVE.w useddone(PC),D1
0002C410 <AmiBlitz3.ab2@16188>    BSR.w writeword
0002C412 <AmiBlitz3.ab2@16191>    MOVEQ.l #$02,D2
0002C416 <AmiBlitz3.ab2@16192> BRA.w get1bytemain
0002C41A <AmiBlitz3.ab2@16200>    BSR.w JL_0_A9A0
0002C41C <AmiBlitz3.ab2@16202>   MOVEQ.l #$00,D3
0002C420 <AmiBlitz3.ab2@16203>   MOVE.w -$4(A2,D0.L),D3
0002C424 <AmiBlitz3.ab2@16204>    BSR.w get1bytemain
0002C428 <AmiBlitz3.ab2@16205> BRA.w JL_0_B46E
0002C42C <AmiBlitz3.ab2@16212>    BSR.w get1bytemain
0002C42E <AmiBlitz3.ab2@16213>   MOVE.w D0,-(A7)
0002C432 <AmiBlitz3.ab2@16214>    BSR.w get1bytemain
0002C436 <AmiBlitz3.ab2@16215>   CMP.w #$28,D0
0002C43A <AmiBlitz3.ab2@16216>    BNE.w syntaxerr
0002C43C <AmiBlitz3.ab2@16217>   MOVE.w (A7)+,D0
0002C440 <AmiBlitz3.ab2@16218>    BSR.w JL_0_C340
0002C444 <AmiBlitz3.ab2@16219>    BSR.w reget
0002C448 <AmiBlitz3.ab2@16220>   CMP.w #$29,D0
0002C44C <AmiBlitz3.ab2@16221>    BNE.w syntaxerr
0002C450 <AmiBlitz3.ab2@16225>   LEA addrcode(PC),A0
0002C454 <AmiBlitz3.ab2@16226>   LEA addrcodef(PC),A1
0002C45A <AmiBlitz3.ab2@16227>   MOVE.w -$6(A2),$2(A0)
0002C45E <AmiBlitz3.ab2@16228>   MOVE.w $4(A0),D1
0002C462 <AmiBlitz3.ab2@16229>   ANDI.w #$FFF8,D1
0002C468 <AmiBlitz3.ab2@16230>   OR.w regnum,D1
0002C46C <AmiBlitz3.ab2@16231>   MOVE.w D1,$4(A0)
0002C470 <AmiBlitz3.ab2@16232>   MOVE.w $6(A0),D1
0002C474 <AmiBlitz3.ab2@16233>   ANDI.w #$F1FF,D1
0002C47A <AmiBlitz3.ab2@16234>   MOVE.w regnum,D0
0002C47C <AmiBlitz3.ab2@16235>   LSL.w #8,D0
0002C47E <AmiBlitz3.ab2@16236>   LSL.w #1,D0
0002C480 <AmiBlitz3.ab2@16237>   OR.w D0,D1
0002C484 <AmiBlitz3.ab2@16238>   MOVE.w D1,$6(A0)
0002C488 <AmiBlitz3.ab2@16239>    BSR.w pokecode
0002C48A <AmiBlitz3.ab2@16240>   MOVEQ.l #$03,D2
0002C48E <AmiBlitz3.ab2@16241> BRA.w get1bytemain
0002C492 <AmiBlitz3.ab2@16245>   CMP.w #-$7F4D,D0
0002C496 <AmiBlitz3.ab2@16246>    BHI.w JL_0_AAFE
0002C49A <AmiBlitz3.ab2@16247> BRA.w syntaxerr
0002C49E <AmiBlitz3.ab2@16254> .do_null   CMP.w #$b581,d0
0002C4A2 <AmiBlitz3.ab2@16255>    BNE 'nonull
0002C4A8 <AmiBlitz3.ab2@16256>    MOVE.l d0,lastinstruction
0002C4AC <AmiBlitz3.ab2@16257>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002C4B2 <AmiBlitz3.ab2@16258>    MOVE.w regnum,d0
0002C4B4 <AmiBlitz3.ab2@16259>    ASL.l #7,d0
0002C4B6 <AmiBlitz3.ab2@16260>    ASL.l #2,d0
0002C4B8 <AmiBlitz3.ab2@16261>    OR.l d0,d1
0002C4BC <AmiBlitz3.ab2@16262>    BSR writeword
0002C4C2 <AmiBlitz3.ab2@16263>    JSR get1bytemain
0002C4C4 <AmiBlitz3.ab2@16264>    RTS
0002C4C8 <AmiBlitz3.ab2@16266> 'nonull CMP.w #$c982,d0
0002C4CC <AmiBlitz3.ab2@16267>        BNE nonew_
0002C4CE <AmiBlitz3.ab2@16269>   MOVE.l a5,-(a7)
0002C4D4 <AmiBlitz3.ab2@16270>   MOVE.w lastchar,-(a7)
0002C4DA <AmiBlitz3.ab2@16271>   JSR get1bytemain
0002C4DE <AmiBlitz3.ab2@16272>   CMP.w #"(",d0                                             ; use oldcode
0002C4E2 <AmiBlitz3.ab2@16273>   BNE 'newcode
0002C4E8 <AmiBlitz3.ab2@16274>   JSR get1bytemain
0002C4EC <AmiBlitz3.ab2@16275>   CMP.w #")",d0
0002C4F0 <AmiBlitz3.ab2@16276>   BEQ 'newcode
0002C4F6 <AmiBlitz3.ab2@16277>   MOVE.w (a7)+,lastchar
0002C4F8 <AmiBlitz3.ab2@16278>   MOVE.l (a7)+,a5
0002C4FE <AmiBlitz3.ab2@16279>   MOVE.w lastchar,d0
0002C502 <AmiBlitz3.ab2@16280>   BRA nonew_
0002C504 <AmiBlitz3.ab2@16281> 'newcode  MOVE.l a0,-(a7)
0002C50A <AmiBlitz3.ab2@16282>   TST.b blitzparloop
0002C50E <AmiBlitz3.ab2@16283>   BNE 'err
0002C514 <AmiBlitz3.ab2@16284>   TST.b funcparloop
0002C518 <AmiBlitz3.ab2@16285>   BNE 'err
0002C51C <AmiBlitz3.ab2@16286>   BRA 'ok
0002C522 <AmiBlitz3.ab2@16287> 'err JMP errornewnotincalls
0002C528 <AmiBlitz3.ab2@16288> 'ok  MOVE.l #$203c0000,d1
0002C52C <AmiBlitz3.ab2@16289>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002C52E <AmiBlitz3.ab2@16290>   MOVEQ #0,d1
0002C532 <AmiBlitz3.ab2@16291>   MOVE.w 8(a0),d1
0002C536 <AmiBlitz3.ab2@16292>   BSR writeword
0002C53A <AmiBlitz3.ab2@16293>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002C53E <AmiBlitz3.ab2@16294>   BSR writeword
0002C542 <AmiBlitz3.ab2@16295>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002C546 <AmiBlitz3.ab2@16296>   BSR.w tokejsr2
0002C548 <AmiBlitz3.ab2@16297>   MOVE.l (a7)+,a0
0002C54A <AmiBlitz3.ab2@16298>   ADDQ.l #6,a7                      ; a5 need not restore
0002C54E <AmiBlitz3.ab2@16299>   CMP.w #")",d0
0002C552 <AmiBlitz3.ab2@16300>   BNE 'nobracket
0002C558 <AmiBlitz3.ab2@16301>   JSR get1bytemain
0002C55A <AmiBlitz3.ab2@16302> 'nobracket  RTS
0002C55E <AmiBlitz3.ab2@16304> nonew_  CMP.w #-$7F4A,D0
0002C562 <AmiBlitz3.ab2@16305>    BEQ.w JL_0_A98C
0002C566 <AmiBlitz3.ab2@16306>   CMP.w #-$7F48,D0
0002C56A <AmiBlitz3.ab2@16307>    BEQ.w doaddr
0002C56E <AmiBlitz3.ab2@16308>   CMP.w #-$7F3C,D0
0002C572 <AmiBlitz3.ab2@16309>    BEQ.w domaximum
0002C576 <AmiBlitz3.ab2@16310>   CMP.w #-$7F2F,D0
0002C57A <AmiBlitz3.ab2@16311>    BEQ.w doused
0002C57C <AmiBlitz3.ab2@16312>   MOVE.w D2,-(A7)
0002C57E <AmiBlitz3.ab2@16313>   MOVE.w D0,D1
0002C582 <AmiBlitz3.ab2@16314>   BCLR #$F,D1
0002C586 <AmiBlitz3.ab2@16316>    BSR.w searchinstr
0002C588 <AmiBlitz3.ab2@16317>   MOVE.w (A3),D1
0002C58C <AmiBlitz3.ab2@16318>   BTST #$1,D1
0002C590 <AmiBlitz3.ab2@16319>    BEQ.w noreturn_                                         ;syntax error noreturn
0002C594 <AmiBlitz3.ab2@16320>   BTST #$2,D1
0002C598 <AmiBlitz3.ab2@16321>    BNE.w JL_0_AC1A
0002C59A <AmiBlitz3.ab2@16322>   LSR.w #8,D1
0002C5A0 <AmiBlitz3.ab2@16323>   BTST #$3,$1(A3)
0002C5A4 <AmiBlitz3.ab2@16324>    BEQ.w JL_0_AB4C
0002C5AA <AmiBlitz3.ab2@16325>    JSR AJL_0_498A
0002C5B0 <AmiBlitz3.ab2@16328>    CLR.l rightsidetype
0002C5B2 <AmiBlitz3.ab2@16329>    MOVE.w D1,-(A7)                                         ;is library instruction
0002C5B6 <AmiBlitz3.ab2@16330>   CMP.w #$7,D1
0002C5BA <AmiBlitz3.ab2@16331>    BNE.w JL_0_AB5E
0002C5BC <AmiBlitz3.ab2@16332>   MOVE.l A2,-(A7)
0002C5C0 <AmiBlitz3.ab2@16333>    BSR.w makesbase
0002C5C2 <AmiBlitz3.ab2@16334>   MOVEA.l (A7)+,A2
0002C5C6 <AmiBlitz3.ab2@16337>     BSR.w JL_0_AFA2
0002C5C8 <AmiBlitz3.ab2@16338>   MOVE.w D3,-(A7)
0002C5CC <AmiBlitz3.ab2@16339>    BSR.w get1bytemain
0002C5CE <AmiBlitz3.ab2@16340>   MOVEQ.l #$00,D1
0002C5D2 <AmiBlitz3.ab2@16341>   CMP.w #$28,D0
0002C5D6 <AmiBlitz3.ab2@16342>    BNE.w JL_0_AB80
0002C5DC <AmiBlitz3.ab2@16343>    JSR JL_0_66F6
0002C5DE <AmiBlitz3.ab2@16344>   TST.w D1
0002C5E2 <AmiBlitz3.ab2@16345>    BEQ.w syntaxerr
0002C5E6 <AmiBlitz3.ab2@16346> BRA.w JL_0_AB84
0002C5F0 <AmiBlitz3.ab2@16351>   MOVE.w oldqflag,instringon
0002C5F6 <AmiBlitz3.ab2@16352>   MOVEA.l lastsourcepos,A5
0002C5FC <AmiBlitz3.ab2@16355>    MOVE.w regnum,-(A7)
0002C606 <AmiBlitz3.ab2@16356>    MOVE.w regnum,regnumstore
0002C60C <AmiBlitz3.ab2@16357>    TST.b fpu
0002C610 <AmiBlitz3.ab2@16358>             BEQ 'nofloat
0002C616 <AmiBlitz3.ab2@16359>             CMP.w #$ffff,28(a3)
0002C61A <AmiBlitz3.ab2@16360>             BNE 'nofloat
0002C620 <AmiBlitz3.ab2@16361>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002C624 <AmiBlitz3.ab2@16362>             BEQ 'nofloat
0002C62A <AmiBlitz3.ab2@16363>             CMP.w #$3c02,34(a3)                            ;int skip
0002C62E <AmiBlitz3.ab2@16364>             BEQ 'quick
0002C632 <AmiBlitz3.ab2@16365>             CMP.b #5,(a3)
0002C636 <AmiBlitz3.ab2@16366>             BNE 'nofloat
0002C63C <AmiBlitz3.ab2@16369>             CLR.l load_var_addr
0002C640 <AmiBlitz3.ab2@16370> BRA 'isfpu
0002C646 <AmiBlitz3.ab2@16373>    CLR.w regnum
0002C648 <AmiBlitz3.ab2@16376>    MOVE.w D1,-(A7)
0002C64E <AmiBlitz3.ab2@16377>   BTST #$3,$1(A3)
0002C652 <AmiBlitz3.ab2@16378>    BEQ.w JL_0_ABB0
0002C656 <AmiBlitz3.ab2@16397>   MOVE.w $6(A7),D1
0002C65C <AmiBlitz3.ab2@16398>   MOVE.w d1,peeksize
0002C660 <AmiBlitz3.ab2@16408>   ORI.w #$7000,D1
0002C664 <AmiBlitz3.ab2@16409>   BSR.w writeword                                          ;write peekmode
0002C66A <AmiBlitz3.ab2@16412>   ADDQ.w #1,regnum
0002C66C <AmiBlitz3.ab2@16413>   MOVE.w (A7),D1
0002C674 <AmiBlitz3.ab2@16416>   MOVE.w 2(a7),tempregnum
0002C67A <AmiBlitz3.ab2@16417>   JSR JL_0_4878
0002C67C <AmiBlitz3.ab2@16418>   TST.w (A7)+
0002C680 <AmiBlitz3.ab2@16419>   BEQ.w JL_0_ABC6
0002C684 <AmiBlitz3.ab2@16420>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002C688 <AmiBlitz3.ab2@16421>   BNE.w errorbracketmiss                                    ; was syntax error
0002C68E <AmiBlitz3.ab2@16422>   CLR.l lasttoken
0002C692 <AmiBlitz3.ab2@16423>   BSR.w get1bytemain
0002C694 <AmiBlitz3.ab2@16426>    MOVE.w (A7)+,D1
0002C69A <AmiBlitz3.ab2@16427>   MOVE.w D1,regnum
0002C69E <AmiBlitz3.ab2@16428>    BEQ.w JL_0_ABDE
0002C6A4 <AmiBlitz3.ab2@16429>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002C6A8 <AmiBlitz3.ab2@16430>    BNE 'noval
0002C6AE <AmiBlitz3.ab2@16431>    TST.b fpu
0002C6B2 <AmiBlitz3.ab2@16432>    BEQ 'noval
0002C6B8 <AmiBlitz3.ab2@16433>    CLR.l load_var_addr
0002C6BA <AmiBlitz3.ab2@16434>    MOVEQ #0,d1
0002C6C0 <AmiBlitz3.ab2@16435>    MOVE.w regnum,d1
0002C6C2 <AmiBlitz3.ab2@16436>    LSL.l #7,d1
0002C6C8 <AmiBlitz3.ab2@16437>    OR.l #$f2000000,d1
0002C6CC <AmiBlitz3.ab2@16438>    BSR writelong
0002C6D0 <AmiBlitz3.ab2@16439> BRA JL_0_ABDE
0002C6D6 <AmiBlitz3.ab2@16443>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002C6DA <AmiBlitz3.ab2@16444>    BEQ 'quick
0002C6DE <AmiBlitz3.ab2@16445>    CMP.b #5,d2
0002C6E2 <AmiBlitz3.ab2@16446>    BNE 'nofpu
0002C6E8 <AmiBlitz3.ab2@16447>    TST.b fpu
0002C6EC <AmiBlitz3.ab2@16448>    BEQ 'nofpu
0002C6F2 <AmiBlitz3.ab2@16453>    CLR.l load_var_addr
0002C6F6 <AmiBlitz3.ab2@16454> BRA JL_0_ABDE
0002C6F8 <AmiBlitz3.ab2@16457>   LSL.w #8,D1
0002C6FA <AmiBlitz3.ab2@16458>   LSL.w #1,D1
0002C6FE <AmiBlitz3.ab2@16459>   ORI.w #$2000,D1
0002C702 <AmiBlitz3.ab2@16460>   BSR.w writeword                                          ;write move.l d0,dx
0002C708 <AmiBlitz3.ab2@16461>   TST.b fpu
0002C70C <AmiBlitz3.ab2@16462>   BEQ JL_0_ABDE
0002C70E <AmiBlitz3.ab2@16463>   MOVEQ #0,d1
0002C714 <AmiBlitz3.ab2@16464>   MOVE.w regnum,d1
0002C716 <AmiBlitz3.ab2@16465>   LSL.l #7,d1
0002C71C <AmiBlitz3.ab2@16466>   OR.l #$f2000000,d1
0002C71E <AmiBlitz3.ab2@16470>        MOVE.w (A7)+,D3
0002C722 <AmiBlitz3.ab2@16471>        BEQ.w JL_0_ABFC
0002C728 <AmiBlitz3.ab2@16472>        TST.b fpu
0002C72C <AmiBlitz3.ab2@16473>        BEQ 'nofpu
0002C72E <AmiBlitz3.ab2@16474>       MOVE.l d0,-(a7)
0002C730 <AmiBlitz3.ab2@16475>        MOVE.l a0,-(a7)
0002C736 <AmiBlitz3.ab2@16476>        MOVE.l stacktrack,d1
0002C73C <AmiBlitz3.ab2@16477>        LEA fpustackbase,a0
0002C744 <AmiBlitz3.ab2@16478>        MOVE.w 0(a0,d1),regmask
0002C746 <AmiBlitz3.ab2@16479>        MOVE.l (a7)+,a0
0002C74A <AmiBlitz3.ab2@16480>       MOVE.w #8,d0
0002C74E <AmiBlitz3.ab2@16483>       BEQ 'ready
0002C754 <AmiBlitz3.ab2@16484>       BTST d0,regmask
0002C758 <AmiBlitz3.ab2@16485>       BEQ 'noa7
0002C75A <AmiBlitz3.ab2@16486>       MOVEQ #0,d1
0002C75C <AmiBlitz3.ab2@16487>       MOVE.w d0,d1
0002C75E <AmiBlitz3.ab2@16488>       SUBQ.w #1,d1
0002C760 <AmiBlitz3.ab2@16489>       ASL #7,d1
0002C766 <AmiBlitz3.ab2@16491>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002C76A <AmiBlitz3.ab2@16492>       BSR writelong
0002C770 <AmiBlitz3.ab2@16493>       SUBQ.l #2,stacktrack
0002C772 <AmiBlitz3.ab2@16496>       SUBQ.w #1,d0
0002C776 <AmiBlitz3.ab2@16497>       BNE 'loop
0002C778 <AmiBlitz3.ab2@16500>       MOVE.l (a7)+,d0
0002C77E <AmiBlitz3.ab2@16501>       SUBQ.l #2,stacktrack                                 ;int track
0002C782 <AmiBlitz3.ab2@16504>    MOVE.w #$4CDF,D1
0002C786 <AmiBlitz3.ab2@16505>    BSR.w writeword                                         ;write movem.l (a7)+,
0002C788 <AmiBlitz3.ab2@16506>   MOVEQ.l #$00,D1
0002C78A <AmiBlitz3.ab2@16507>   MOVEQ.l #$0F,D4
0002C78C <AmiBlitz3.ab2@16510>     LSL.w #1,D3
0002C78E <AmiBlitz3.ab2@16511>     ROXR.w #1,D1
0002C792 <AmiBlitz3.ab2@16512>   DBF D4,JL_0_ABF0
0002C796 <AmiBlitz3.ab2@16514>    BSR.w writeword
0002C79C <AmiBlitz3.ab2@16515>    TST.b fast
0002C7A0 <AmiBlitz3.ab2@16516>    BEQ JL_0_ABFC
0002C7A6 <AmiBlitz3.ab2@16517>    TST.w regnum
0002C7AA <AmiBlitz3.ab2@16518>    BEQ JL_0_ABFC
0002C7B0 <AmiBlitz3.ab2@16519>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002C7B4 <AmiBlitz3.ab2@16520>    BNE 'l1
0002C7BA <AmiBlitz3.ab2@16521>    MOVE.w regnum,d1
0002C7BC <AmiBlitz3.ab2@16522>    ASL.l #8,d1
0002C7BE <AmiBlitz3.ab2@16523>    ASL.l #1,d1
0002C7C2 <AmiBlitz3.ab2@16524>    OR.w #$70ff,d1
0002C7CC <AmiBlitz3.ab2@16525>    SUB.l #12,destpointer
0002C7D0 <AmiBlitz3.ab2@16526>    BSR writeword
0002C7D6 <AmiBlitz3.ab2@16529>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002C7DA <AmiBlitz3.ab2@16530>    BNE 'l2
0002C7E0 <AmiBlitz3.ab2@16531>     MOVE.w regnum,d1
0002C7E2 <AmiBlitz3.ab2@16532>     ASL.l #8,d1
0002C7E4 <AmiBlitz3.ab2@16533>     ASL.l #1,d1
0002C7E8 <AmiBlitz3.ab2@16534>     OR.w #$7000,d1
0002C7F2 <AmiBlitz3.ab2@16535>     SUB.l #12,destpointer
0002C7F6 <AmiBlitz3.ab2@16536>     BSR writeword
0002C7F8 <AmiBlitz3.ab2@16540>    MOVE.w (A7)+,D2
0002C7FC <AmiBlitz3.ab2@16541>   CMP.w #$7,D2                                             ;destination var type
0002C800 <AmiBlitz3.ab2@16542>    BNE.w JL_0_AC16
0002C806 <AmiBlitz3.ab2@16543>   MOVE.w putstlen,D1
0002C80C <AmiBlitz3.ab2@16544>   OR.w regnum,D1
0002C810 <AmiBlitz3.ab2@16545>    BSR.w writeword
0002C814 <AmiBlitz3.ab2@16548> BRA.w JL_0_AF66
0002C818 <AmiBlitz3.ab2@16553>   MOVE.w $6(A3),D1
0002C81C <AmiBlitz3.ab2@16554>    BSR.w uselib
0002C820 <AmiBlitz3.ab2@16555>    BSR.w JL_0_AD40
0002C822 <AmiBlitz3.ab2@16556>   MOVE.l D4,D1
0002C824 <AmiBlitz3.ab2@16557>   MOVE.l D5,-(A7)
0002C828 <AmiBlitz3.ab2@16558>    BSR.w JL_0_AD38
0002C82C <AmiBlitz3.ab2@16559>   MOVE.w $A(A1),-(A7)
0002C82E <AmiBlitz3.ab2@16560>   ADDQ.w #8,A3
0002C830 <AmiBlitz3.ab2@16561>   MOVE.w (A3)+,-(A7)
0002C832 <AmiBlitz3.ab2@16562>   MOVE.l A3,-(A7)
0002C836 <AmiBlitz3.ab2@16563>    BSR.w get1bytemain
0002C838 <AmiBlitz3.ab2@16564>   MOVE.w D0,-(A7)
0002C83A <AmiBlitz3.ab2@16565>   MOVEQ.l #$00,D3
0002C840 <AmiBlitz3.ab2@16566>   JSR checka4a5
0002C842 <AmiBlitz3.ab2@16568>   MOVE.b (A3)+,D1
0002C846 <AmiBlitz3.ab2@16569>    BMI.w JL_0_AC6A
0002C848 <AmiBlitz3.ab2@16570>   MOVEQ.l #$03,D2
0002C84A <AmiBlitz3.ab2@16571>   ADDQ.w #1,D3
0002C84E <AmiBlitz3.ab2@16572>   MOVEM.l D3/A3,-(A7)
0002C854 <AmiBlitz3.ab2@16573>   MOVE.b funcparloop,-(a7)
0002C85A <AmiBlitz3.ab2@16574>   CLR.b funcparloop
0002C860 <AmiBlitz3.ab2@16575>   MOVE.b blitzparloop,-(a7)
0002C868 <AmiBlitz3.ab2@16576>   MOVE.b #1,blitzparloop
0002C86E <AmiBlitz3.ab2@16577>   MOVE.l lasttoken,-(a7)
0002C874 <AmiBlitz3.ab2@16578>   MOVE.l leftsidetype,-(a7)
0002C87A <AmiBlitz3.ab2@16579>   MOVE.l rightsidetype,-(a7)
0002C87E <AmiBlitz3.ab2@16580>   BSR.w peval
0002C884 <AmiBlitz3.ab2@16581>   MOVE.l (a7)+,rightsidetype
0002C88A <AmiBlitz3.ab2@16582>   MOVE.l (a7)+,leftsidetype
0002C890 <AmiBlitz3.ab2@16583>   MOVE.l (a7)+,lasttoken
0002C896 <AmiBlitz3.ab2@16584>   MOVE.b (a7)+,blitzparloop
0002C89C <AmiBlitz3.ab2@16585>   MOVE.b (a7)+,funcparloop
0002C8A2 <AmiBlitz3.ab2@16586>   SUBQ.w #4,a2offset
0002C8A6 <AmiBlitz3.ab2@16587>   MOVEM.l (A7)+,D3/A3
0002C8AA <AmiBlitz3.ab2@16588>   CMP.w #$2C,D0
0002C8AE <AmiBlitz3.ab2@16589>    BEQ.w JL_0_AC40
0002C8B0 <AmiBlitz3.ab2@16590>   TST.b (A3)
0002C8B4 <AmiBlitz3.ab2@16591>    BPL.w syntaxerr
0002C8B6 <AmiBlitz3.ab2@16594>   MOVE.w (A7)+,D1
0002C8BA <AmiBlitz3.ab2@16595>    BSR.w JL_0_AD04
0002C8BC <AmiBlitz3.ab2@16596>   MOVEA.l (A7)+,A3
0002C8BE <AmiBlitz3.ab2@16597>   SUBQ.w #1,D3
0002C8C2 <AmiBlitz3.ab2@16598>    BMI.w JL_0_ACBE
0002C8C4 <AmiBlitz3.ab2@16601>   TST.b (A3)+
0002C8C8 <AmiBlitz3.ab2@16602>    BPL.w JL_0_AC78
0002C8CA <AmiBlitz3.ab2@16603>   SUBQ.w #1,A3
0002C8CC <AmiBlitz3.ab2@16606>     MOVEQ.l #$00,D1
0002C8CE <AmiBlitz3.ab2@16607>     MOVE.b -(A3),D1
0002C8D2 <AmiBlitz3.ab2@16608>     BTST #$4,D1
0002C8D6 <AmiBlitz3.ab2@16609>      BNE.w JL_0_ACAA
0002C8DC <AmiBlitz3.ab2@16610>     CMP.w regnum,D1
0002C8E0 <AmiBlitz3.ab2@16611>      BCC.w JL_0_AC9E
0002C8E2 <AmiBlitz3.ab2@16612>     BSET D1,D5
0002C8E4 <AmiBlitz3.ab2@16613>     MOVEQ.l #$0F,D0
0002C8E6 <AmiBlitz3.ab2@16614>     SUB.w D1,D0
0002C8E8 <AmiBlitz3.ab2@16615>     BSET D0,D4
0002C8EA <AmiBlitz3.ab2@16618>     LSL.w #8,D1
0002C8EC <AmiBlitz3.ab2@16619>     LSL.w #1,D1
0002C8F0 <AmiBlitz3.ab2@16620>     ORI.w #$201F,D1
0002C8F4 <AmiBlitz3.ab2@16621>   BRA.w JL_0_ACB6
0002C8F8 <AmiBlitz3.ab2@16624>     ANDI.w #$7,D1
0002C8FA <AmiBlitz3.ab2@16625>     LSL.w #8,D1
0002C8FC <AmiBlitz3.ab2@16626>     LSL.w #1,D1
0002C900 <AmiBlitz3.ab2@16627>     ORI.w #$205F,D1
0002C904 <AmiBlitz3.ab2@16630>      BSR.w writeword
0002C908 <AmiBlitz3.ab2@16631>   DBF D3,JL_0_AC80
0002C90E <AmiBlitz3.ab2@16634>   MOVE.w (A7)+,libjsr+2
0002C914 <AmiBlitz3.ab2@16635>   MOVE.w (A7)+,libbase+2
0002C91A <AmiBlitz3.ab2@16636>   MOVE.l libbase,D1
0002C91E <AmiBlitz3.ab2@16637>    BSR.w writelong
0002C924 <AmiBlitz3.ab2@16638>   MOVE.l libjsr,D1
0002C928 <AmiBlitz3.ab2@16639>    BSR.w writelong
0002C92E <AmiBlitz3.ab2@16640>   MOVE.w regnum,D1
0002C932 <AmiBlitz3.ab2@16641>    BEQ.w JL_0_ACF4
0002C934 <AmiBlitz3.ab2@16642>   LSL.w #8,D1
0002C936 <AmiBlitz3.ab2@16643>   LSL.w #1,D1
0002C93A <AmiBlitz3.ab2@16644>   ORI.w #$2000,D1
0002C93E <AmiBlitz3.ab2@16645>    BSR.w writeword
0002C940 <AmiBlitz3.ab2@16648>   MOVE.l (A7)+,D1
0002C944 <AmiBlitz3.ab2@16649>    BSR.w JL_0_AD38
0002C94A <AmiBlitz3.ab2@16650>    JSR restorea4a5
0002C94C <AmiBlitz3.ab2@16651>   MOVEQ.l #$03,D2
0002C950 <AmiBlitz3.ab2@16652>    BSR.w reget
0002C954 <AmiBlitz3.ab2@16653> BRA.w JL_0_AF66
0002C956 <AmiBlitz3.ab2@16656>   TST.w D3
0002C95A <AmiBlitz3.ab2@16657>    BEQ.w JL_0_AD1E
0002C95E <AmiBlitz3.ab2@16658>   CMP.w #$28,D1
0002C962 <AmiBlitz3.ab2@16659>    BNE.w syntaxerr
0002C966 <AmiBlitz3.ab2@16660>   CMP.w #$29,D0
0002C96A <AmiBlitz3.ab2@16661>    BNE.w syntaxerr
0002C96E <AmiBlitz3.ab2@16662> BRA.w get1bytemain
0002C972 <AmiBlitz3.ab2@16665>   CMP.w #$28,D1
0002C976 <AmiBlitz3.ab2@16666>    BNE.w JL_0_AD36
0002C97A <AmiBlitz3.ab2@16667>    BSR.w get1bytemain
0002C97E <AmiBlitz3.ab2@16668>   CMP.w #$29,D0
0002C982 <AmiBlitz3.ab2@16669>    BNE.w syntaxerr
0002C986 <AmiBlitz3.ab2@16670> BRA.w get1bytemain
0002C988 <AmiBlitz3.ab2@16673> RTS
0002C98A <AmiBlitz3.ab2@16676>   TST.w D1
0002C98E <AmiBlitz3.ab2@16677>    BNE.w writelong
0002C990 <AmiBlitz3.ab2@16678> RTS
0002C994 <AmiBlitz3.ab2@16682>   MOVE.w #$48E7,D4
0002C996 <AmiBlitz3.ab2@16683>   SWAP D4
0002C998 <AmiBlitz3.ab2@16684>   CLR.w D4
0002C99C <AmiBlitz3.ab2@16685>   MOVE.w #$4CDF,D5
0002C99E <AmiBlitz3.ab2@16686>   SWAP D5
0002C9A0 <AmiBlitz3.ab2@16687>   CLR.w D5
0002C9A6 <AmiBlitz3.ab2@16688>   MOVE.w regnum,D1
0002C9AA <AmiBlitz3.ab2@16689>    BEQ.w JL_0_AD74
0002C9AE <AmiBlitz3.ab2@16690>   BSET #$F,D4
0002C9B2 <AmiBlitz3.ab2@16691>   BSET #$0,D5
0002C9B6 <AmiBlitz3.ab2@16692>   CMP.w #$2,D1
0002C9BA <AmiBlitz3.ab2@16693>    BCS.w JL_0_AD72
0002C9BE <AmiBlitz3.ab2@16696>   BSET #$E,D4
0002C9C2 <AmiBlitz3.ab2@16697>   BSET #$1,D5
0002C9C4 <AmiBlitz3.ab2@16700> RTS
0002C9CA <AmiBlitz3.ab2@16703>   TST.w fuckpos
0002C9CE <AmiBlitz3.ab2@16704>   BNE.w JL_0_AD6A
0002C9D0 <AmiBlitz3.ab2@16705> RTS
0002C9D2 <AmiBlitz3.ab2@16708> fuckpos:  Ds.w 1
0002C9D8 <AmiBlitz3.ab2@16712>   MOVE.w sbasegot,D1
0002C9DC <AmiBlitz3.ab2@16713>    BEQ.w makesbase__skip
0002C9E0 <AmiBlitz3.ab2@16717>   MOVE.w sbgot(PC),D1
0002C9E4 <AmiBlitz3.ab2@16718>    BNE.w makesbase__skip2
0002C9EC <AmiBlitz3.ab2@16722>   MOVE.w #$0002,sbgot
0002C9F2 <AmiBlitz3.ab2@16723>   MOVE.w movea3a7,D1
0002C9F6 <AmiBlitz3.ab2@16724> BRA.w writeword
0002C9F8 <AmiBlitz3.ab2@16727> RTS
0002CA00 <AmiBlitz3.ab2@16732>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002CA06 <AmiBlitz3.ab2@16735>   MOVE.l #$C601,D1
0002CA0E <AmiBlitz3.ab2@16736>   MOVE.w #-1,sbasegot
0002CA14 <AmiBlitz3.ab2@16737>   MOVE.l d1,lastinstruction
0002CA18 <AmiBlitz3.ab2@16738>   BSR.w Atokejsr
0002CA1A <AmiBlitz3.ab2@16739> RTS
0002CA24 <AmiBlitz3.ab2@16744>   MOVE.l data1,litdata1
0002CA2A <AmiBlitz3.ab2@16745>   TST.b fast
0002CA2E <AmiBlitz3.ab2@16746>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002CA32 <AmiBlitz3.ab2@16750> BRA 'l50                                                   ;to deactivate
0002CA38 <AmiBlitz3.ab2@16756>   TST.b optistring
0002CA3C <AmiBlitz3.ab2@16757>   BNE.s 'l21
0002CA42 <AmiBlitz3.ab2@16758>   CLR.b string1
0002CA4A <AmiBlitz3.ab2@16759>   MOVE.b #1,optistring
0002CA50 <AmiBlitz3.ab2@16760>   TST.b nostringopt
0002CA54 <AmiBlitz3.ab2@16761>   BNE 'l21
0002CA56 <AmiBlitz3.ab2@16762>   MOVE.l a5,a4
0002CA58 <AmiBlitz3.ab2@16763>   SUBQ.l #1,a4
0002CA5A <AmiBlitz3.ab2@16766>     TST.b (a4)
0002CA5E <AmiBlitz3.ab2@16767>     BMI 'l19a
0002CA62 <AmiBlitz3.ab2@16768>     BEQ.s 'l20
0002CA66 <AmiBlitz3.ab2@16769>     CMP.b #$22,(a4)
0002CA6A <AmiBlitz3.ab2@16770>     BEQ.s 'l19
0002CA70 <AmiBlitz3.ab2@16773>     TST.w string1
0002CA74 <AmiBlitz3.ab2@16774>     BNE 'l11
0002CA78 <AmiBlitz3.ab2@16775>     CMP.b #":",(a4)
0002CA7C <AmiBlitz3.ab2@16776>     BEQ.s 'l20
0002CA80 <AmiBlitz3.ab2@16777>     CMP.b #";",(a4)
0002CA84 <AmiBlitz3.ab2@16778>     BEQ.s 'l20
0002CA88 <AmiBlitz3.ab2@16779>     CMP.b #"+",(a4)
0002CA8C <AmiBlitz3.ab2@16780>     BEQ.s 'l21
0002CA90 <AmiBlitz3.ab2@16781>     CMP.b #",",(a4)
0002CA94 <AmiBlitz3.ab2@16782>     BEQ.s 'l20                                             ;was l21
0002CA98 <AmiBlitz3.ab2@16783>     CMP.b #")",(a4)
0002CA9C <AmiBlitz3.ab2@16784>     BEQ.s 'l20                                             ;was l21
0002CA9E <AmiBlitz3.ab2@16787>     ADDQ.l #1,a4
0002CAA2 <AmiBlitz3.ab2@16788> BRA.s 'l10
0002CAAA <AmiBlitz3.ab2@16791>   BCHG #0,string1
0002CAAE <AmiBlitz3.ab2@16792> BRA 'l18
0002CAB0 <AmiBlitz3.ab2@16795>   ADDQ.l #1,a4
0002CAB2 <AmiBlitz3.ab2@16796>   TST.b (a4)
0002CAB6 <AmiBlitz3.ab2@16797>   BEQ 'l21
0002CABA <AmiBlitz3.ab2@16798> BRA 'l11
0002CABC <AmiBlitz3.ab2@16801>   MOVE.l a5,a4
0002CABE <AmiBlitz3.ab2@16802>   SUBQ.l #1,a4
0002CAC2 <AmiBlitz3.ab2@16805>   CMP.b #$20,-(a4)
0002CAC6 <AmiBlitz3.ab2@16806>   BEQ 'll1
0002CACA <AmiBlitz3.ab2@16807>   CMP.b #"+",(a4)
0002CACE <AmiBlitz3.ab2@16808>   BEQ 'l21
0002CAD6 <AmiBlitz3.ab2@16823>   MOVE.b #2,optistring
0002CADE <AmiBlitz3.ab2@16826>   CMP.b #2,optistring
0002CAE2 <AmiBlitz3.ab2@16827>   BEQ.s 'l100
0002CAE6 <AmiBlitz3.ab2@16830>   BSR.w makesbase
0002CAEA <AmiBlitz3.ab2@16831>   BSR.w pokedata1                                          ;writestringsizespace
0002CAEE <AmiBlitz3.ab2@16832>   BSR.w pokedata1
0002CAF0 <AmiBlitz3.ab2@16835>   MOVEQ.l #$00,D2
0002CAF6 <AmiBlitz3.ab2@16838>     MOVE.l a5,lastsourcepos
0002CAF8 <AmiBlitz3.ab2@16839>     MOVEQ #0,d0
0002CAFA <AmiBlitz3.ab2@16840>     MOVE.b (a5)+,d0
0002CAFC <AmiBlitz3.ab2@16841>     TST.w D0
0002CB00 <AmiBlitz3.ab2@16842>      BEQ.w notqerr
0002CB04 <AmiBlitz3.ab2@16843>     CMP.w #$22,D0                                          ; --- " ---
0002CB08 <AmiBlitz3.ab2@16844>      BEQ.w JL_0_ADF6
0002CB0C <AmiBlitz3.ab2@16845>     CMP.b #"\",d0
0002CB10 <AmiBlitz3.ab2@16846>      BNE 'l1
0002CB14 <AmiBlitz3.ab2@16847>     CMP.b #"\",(a5)
0002CB18 <AmiBlitz3.ab2@16848>      BNE 'l1
0002CB1E <AmiBlitz3.ab2@16849>     TST.b newsyntax
0002CB22 <AmiBlitz3.ab2@16850>      BEQ 'l1
0002CB28 <AmiBlitz3.ab2@16851>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002CB2C <AmiBlitz3.ab2@16852>     BNE 'l2
0002CB2E <AmiBlitz3.ab2@16853>     ADDQ #2,a5
0002CB30 <AmiBlitz3.ab2@16856>     ADDQ.w #1,D2
0002CB32 <AmiBlitz3.ab2@16857>     MOVE.w D0,D1
0002CB36 <AmiBlitz3.ab2@16858>     BSR.w pokedata1b                                        ;writestring
0002CB3A <AmiBlitz3.ab2@16859> BRA.w writestring
0002CB40 <AmiBlitz3.ab2@16862>     JSR check_newconstants
0002CB44 <AmiBlitz3.ab2@16863> BRA writestring
0002CB4A <AmiBlitz3.ab2@16866>   NOT instringon
0002CB50 <AmiBlitz3.ab2@16867>   MOVE.w dontwrite,D1
0002CB54 <AmiBlitz3.ab2@16868>   BNE.w JL_0_AE0A
0002CB5C <AmiBlitz3.ab2@16869>   CMP.b #2,optistring
0002CB60 <AmiBlitz3.ab2@16870>   BEQ 'l10
0002CB66 <AmiBlitz3.ab2@16871>     MOVEA.l litdata1,A0
0002CB68 <AmiBlitz3.ab2@16872>     CLR.w (A0)+                                            ;writesize
0002CB6A <AmiBlitz3.ab2@16873>     MOVE.w D2,(A0)
0002CB6E <AmiBlitz3.ab2@16877>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002CB74 <AmiBlitz3.ab2@16878>   ADDQ.l #1,data1
0002CB7C <AmiBlitz3.ab2@16879>   BCLR #$0,data1+3
0002CB7E <AmiBlitz3.ab2@16880>   MOVEQ.l #$07,D2
0002CB82 <AmiBlitz3.ab2@16881> BRA.w get1bytemain
0002CB86 <AmiBlitz3.ab2@16885>   BSR.w makename2
0002CB8A <AmiBlitz3.ab2@16886>   BSR.w findlabel2
0002CB8E <AmiBlitz3.ab2@16887>   BEQ.w JL_0_AE4A
0002CB92 <AmiBlitz3.ab2@16888>   BSR.w addlabelhash
0002CB96 <AmiBlitz3.ab2@16889>   CLR.l $4(A2)
0002CB9A <AmiBlitz3.ab2@16890>   CLR.l $8(A2)
0002CBA2 <AmiBlitz3.ab2@16892>   MOVE.w linenumat+2,$10(A2)
0002CBA8 <AmiBlitz3.ab2@16893>   MOVE.w linenumat,d0
0002CBAA <AmiBlitz3.ab2@16894>   MOVEQ #0,d1
0002CBAE <AmiBlitz3.ab2@16895>   MOVE.b -1(a2,d7),d1
0002CBB2 <AmiBlitz3.ab2@16896>   MOVE.w d0,0(a2,d1)
0002CBB6 <AmiBlitz3.ab2@16897> BRA.w JL_0_AE52
0002CBBA <AmiBlitz3.ab2@16900>   TST.l $8(A2)
0002CBBE <AmiBlitz3.ab2@16901>   BNE.w JL_0_AE88
0002CBC4 <AmiBlitz3.ab2@16904>   MOVEA.l _execbase,A6
0002CBC6 <AmiBlitz3.ab2@16905>   MOVEQ.l #$0C+2,D0
0002CBC8 <AmiBlitz3.ab2@16906>   MOVEQ.l #$01,D1
0002CBCE <AmiBlitz3.ab2@16907>   MOVE.l mempool,a0
0002CBD2 <AmiBlitz3.ab2@16908>   JSR _AllocPooled(a6)
0002CBD4 <AmiBlitz3.ab2@16910>   MOVEA.l D0,A0
0002CBD8 <AmiBlitz3.ab2@16911>   MOVE.l $4(A2),(A0)
0002CBDC <AmiBlitz3.ab2@16912>   MOVE.l A0,$4(A2)
0002CBE4 <AmiBlitz3.ab2@16913>   MOVE.l destpointer,$4(A0)
0002CBE8 <AmiBlitz3.ab2@16914>   ADDQ.l #2,$4(A0)
0002CBF0 <AmiBlitz3.ab2@16915>   MOVE.w procnum,$8(A0)
0002CBF8 <AmiBlitz3.ab2@16916>   MOVE.w linenumat+2,$A(A0)
0002CC00 <AmiBlitz3.ab2@16917>   MOVE.w linenumat,$c(a0)
0002CC02 <AmiBlitz3.ab2@16918> RTS
0002CC06 <AmiBlitz3.ab2@16921>   MOVE.l $4(A2),D1
0002CC0A <AmiBlitz3.ab2@16922>   BTST #$0,D1
0002CC0E <AmiBlitz3.ab2@16923>    BNE.w illlaberr
0002CC14 <AmiBlitz3.ab2@16924>   MOVE.w procnum,D1
0002CC18 <AmiBlitz3.ab2@16925>   CMP.w $10(A2),D1
0002CC1C <AmiBlitz3.ab2@16926>    BNE.w referr
0002CC1E <AmiBlitz3.ab2@16927> RTS
0002CC20 <AmiBlitz3.ab2@16931>   MOVE.w D0,-(A7)
0002CC28 <AmiBlitz3.ab2@16932>   CMP.b #2,optistring
0002CC2C <AmiBlitz3.ab2@16933>   BEQ 'l10
0002CC32 <AmiBlitz3.ab2@16936>   MOVE.w numtoa0,D1
0002CC36 <AmiBlitz3.ab2@16937>    BSR.w writeword
0002CC3A <AmiBlitz3.ab2@16938>    BSR.w addoff
0002CC40 <AmiBlitz3.ab2@16939>   MOVE.l litdata1,D1
0002CC44 <AmiBlitz3.ab2@16940>    BSR.w writelong
0002CC4A <AmiBlitz3.ab2@16941>   MOVE.w pushlen,D1
0002CC4E <AmiBlitz3.ab2@16942>    BSR.w writeword
0002CC52 <AmiBlitz3.ab2@16943>   MOVE.w #$C600,D1
0002CC56 <AmiBlitz3.ab2@16944>    BSR.w Atokejsr
0002CC58 <AmiBlitz3.ab2@16945>   MOVE.w (A7)+,D0
0002CC5A <AmiBlitz3.ab2@16946> RTS
0002CC5C <AmiBlitz3.ab2@16949>   MOVEQ #0,d1
0002CC60 <AmiBlitz3.ab2@16950>   BSR.w pokedata1b
0002CC66 <AmiBlitz3.ab2@16951>   MOVE.l destpointer,a4
0002CC6A <AmiBlitz3.ab2@16952>   MOVE.w #$203c,d1
0002CC70 <AmiBlitz3.ab2@16953>   TST.w mode
0002CC74 <AmiBlitz3.ab2@16954>   BNE 'lm10
0002CC7A <AmiBlitz3.ab2@16955>    ADDQ.w #4,a2offset
0002CC7E <AmiBlitz3.ab2@16956>   MOVE.w #$2f3c,d1
0002CC84 <AmiBlitz3.ab2@16959>   TST.w mode
0002CC88 <AmiBlitz3.ab2@16960>   BEQ 'lm3
0002CC8E <AmiBlitz3.ab2@16961>   MOVE.w regnum,D0
0002CC90 <AmiBlitz3.ab2@16962>   LSL.w #8,D0
0002CC92 <AmiBlitz3.ab2@16963>   LSL.w #1,D0
0002CC94 <AmiBlitz3.ab2@16964>   OR.w d0,d1
0002CC98 <AmiBlitz3.ab2@16965>   BSR writeword
0002CC9C <AmiBlitz3.ab2@16966>   BSR.w addoff
0002CCA2 <AmiBlitz3.ab2@16967>   MOVE.l litdata1,D1
0002CCA6 <AmiBlitz3.ab2@16968>   BSR.w writelong
0002CCAE <AmiBlitz3.ab2@16969>   CMP.w #3,mode
0002CCB2 <AmiBlitz3.ab2@16970>   BEQ 'l30
0002CCB8 <AmiBlitz3.ab2@16971>    ADDQ.w #4,a2offset
0002CCBC <AmiBlitz3.ab2@16972>   MOVE.w #$4878,D1
0002CCC0 <AmiBlitz3.ab2@16973>   BSR.w writeword
0002CCC2 <AmiBlitz3.ab2@16974>   MOVE.l d2,d1
0002CCC6 <AmiBlitz3.ab2@16975>   BSR writeword
0002CCC8 <AmiBlitz3.ab2@16978>   MOVE.w (A7)+,D0
0002CCCA <AmiBlitz3.ab2@16979> RTS
0002CCD0 <AmiBlitz3.ab2@16982>   MOVE.l #$3f3c0007,d1
0002CCD4 <AmiBlitz3.ab2@16983>   BSR writelong
0002CCDA <AmiBlitz3.ab2@16984>   MOVE.w regnum,D1
0002CCDC <AmiBlitz3.ab2@16985>   LSL.w #8,D1
0002CCDE <AmiBlitz3.ab2@16986>   LSL.w #1,D1
0002CCE2 <AmiBlitz3.ab2@16987>   ORI.w #$2f3c,d1
0002CCE6 <AmiBlitz3.ab2@16988>   BSR writeword
0002CCEC <AmiBlitz3.ab2@16989>    ADDQ.w #4,a2offset
0002CCEE <AmiBlitz3.ab2@16990>   MOVE.l d2,d1
0002CCF2 <AmiBlitz3.ab2@16991>   BSR writelong
0002CCF6 <AmiBlitz3.ab2@16992>   MOVE.w #$2f3c,d1
0002CCFA <AmiBlitz3.ab2@16993>   BSR writeword
0002CCFE <AmiBlitz3.ab2@16994>   BSR.w addoff
0002CD04 <AmiBlitz3.ab2@16995>   MOVE.l litdata1,D1
0002CD08 <AmiBlitz3.ab2@16996>   BSR.w writelong
0002CD0A <AmiBlitz3.ab2@16997>   MOVE.w (A7)+,D0
0002CD0C <AmiBlitz3.ab2@16998> RTS
0002CD10 <AmiBlitz3.ab2@17002>   BSR.w get1bytemain
0002CD14 <AmiBlitz3.ab2@17003>    BSR.w JL_0_AE22
0002CD1A <AmiBlitz3.ab2@17004>   MOVE.w regnum,D1
0002CD1C <AmiBlitz3.ab2@17005>   LSL.w #8,D1
0002CD1E <AmiBlitz3.ab2@17006>   LSL.w #1,D1
0002CD22 <AmiBlitz3.ab2@17007>   ORI.w #$203C,D1
0002CD26 <AmiBlitz3.ab2@17008>    BSR.w writeword
0002CD2A <AmiBlitz3.ab2@17009>    BSR.w addoff
0002CD2E <AmiBlitz3.ab2@17010>   MOVE.l $8(A2),D1
0002CD32 <AmiBlitz3.ab2@17011>    BSR.w writelong
0002CD34 <AmiBlitz3.ab2@17012>   MOVEQ.l #$03,D2
0002CD3A <AmiBlitz3.ab2@17013>   CLR.b peekaddrsize
0002CD3E <AmiBlitz3.ab2@17014> BRA.w reget
0002CD40 <AmiBlitz3.ab2@17017>   MOVEQ.l #$00,D3
0002CD44 <AmiBlitz3.ab2@17020>   BSR.w get1bytemain
0002CD48 <AmiBlitz3.ab2@17021>    BEQ.w syntaxerr
0002CD4C <AmiBlitz3.ab2@17022>   CMP.w #$22,D0
0002CD50 <AmiBlitz3.ab2@17023>    BEQ.w JL_0_AF1A
0002CD52 <AmiBlitz3.ab2@17024>   LSL.l #8,D3
0002CD54 <AmiBlitz3.ab2@17025>   MOVE.b D0,D3
0002CD58 <AmiBlitz3.ab2@17026> BRA.w JL_0_AF02
0002CD5C <AmiBlitz3.ab2@17029>   BSR.w get1bytemain
0002CD60 <AmiBlitz3.ab2@17030> BRA.w JL_0_B46E
0002CD62 <AmiBlitz3.ab2@17033>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002CD66 <AmiBlitz3.ab2@17034>    BSR.w makename2
0002CD6A <AmiBlitz3.ab2@17035>    BSR.w findlabel2
0002CD6E <AmiBlitz3.ab2@17036>    BEQ.w 'l10
0002CD74 <AmiBlitz3.ab2@17037>    LEA ptr_parameterstore,a0
0002CD7A <AmiBlitz3.ab2@17038>    CMP.b #"@",-1(a0,d2.w)
0002CD7E <AmiBlitz3.ab2@17039>    BNE cnferr
0002CD82 <AmiBlitz3.ab2@17040>    CLR.b -1(a0,d2.w)
0002CD84 <AmiBlitz3.ab2@17041>    SUBQ.l #1,d2
0002CD8A <AmiBlitz3.ab2@17042>    LEA varbase,a2
0002CD8E <AmiBlitz3.ab2@17043>    BSR findvariable
0002CD92 <AmiBlitz3.ab2@17044>    BNE cnferr
0002CD96 <AmiBlitz3.ab2@17045>    CMP.b #"\",d0
0002CD9A <AmiBlitz3.ab2@17046>    BNE 'l6
0002CDA0 <AmiBlitz3.ab2@17047>    ADDQ #1,lastsourcepos
0002CDA4 <AmiBlitz3.ab2@17048>    MOVE.l $a(a2),a2
0002CDA6 <AmiBlitz3.ab2@17049>    ADDQ.l #4,a2
0002CDAA <AmiBlitz3.ab2@17050>    BSR.w makename2
0002CDAE <AmiBlitz3.ab2@17051>    BSR findvariable2
0002CDB2 <AmiBlitz3.ab2@17052>    BNE cnferr
0002CDB6 <AmiBlitz3.ab2@17053> BRA.s 'l6                                                  ;???
0002CDBA <AmiBlitz3.ab2@17056>    MOVE.w $4(a2),d3
0002CDBC <AmiBlitz3.ab2@17057>    EXT.l d3
0002CDC0 <AmiBlitz3.ab2@17058> BRA JL_0_AF46
0002CDC4 <AmiBlitz3.ab2@17061>   MOVE.l $8(A2),D3
0002CDCC <AmiBlitz3.ab2@17062>   CMPI.l #$1,$4(A2)
0002CDD0 <AmiBlitz3.ab2@17063>    BEQ.w JL_0_AF46
0002CDD6 <AmiBlitz3.ab2@17064>   NOT.w asmtype
0002CDD8 <AmiBlitz3.ab2@17067>   MOVE.w (A7)+,D2
0002CDDC <AmiBlitz3.ab2@17068> BRA.w JL_0_B46E
0002CDDE <AmiBlitz3.ab2@17072>   MOVE.w D2,-(A7)
0002CDE2 <AmiBlitz3.ab2@17073>    BSR.w getparameter
0002CDE6 <AmiBlitz3.ab2@17074>   CMP.w #"{",D0                                          ;test if var = function{}
0002CDEA <AmiBlitz3.ab2@17075>    BEQ.w isfunction
0002CDEE <AmiBlitz3.ab2@17076>    BSR.w JL_0_8E3C
0002CDF2 <AmiBlitz3.ab2@17078>    BSR.w calcvar                                         ;getvaroffset+type
0002CDF6 <AmiBlitz3.ab2@17079>    BSR.w JL_0_B150
0002CDFC <AmiBlitz3.ab2@17080>    MOVE.l a2,rightsidetype
0002CE02 <AmiBlitz3.ab2@17091>    TST.b typecheck
0002CE06 <AmiBlitz3.ab2@17092>    BEQ JL_0_AF66
0002CE10 <AmiBlitz3.ab2@17093>    CMP.l #$da01,lasttoken                                  ;poke
0002CE14 <AmiBlitz3.ab2@17094>    BEQ 'l1
0002CE1E <AmiBlitz3.ab2@17095>    CMP.l #$da02,lasttoken                                  ;peek
0002CE22 <AmiBlitz3.ab2@17096>    BNE 'l2
0002CE2A <AmiBlitz3.ab2@17099>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002CE2E <AmiBlitz3.ab2@17100>    BNE JL_0_AF66
0002CE34 <AmiBlitz3.ab2@17101>    MOVE.b d2,peekaddrsize
0002CE38 <AmiBlitz3.ab2@17102>    BRA JL_0_AF66
0002CE3E <AmiBlitz3.ab2@17105>   CLR.b peekaddrsize
0002CE42 <AmiBlitz3.ab2@17108>   CMP.w #$1,D2
0002CE46 <AmiBlitz3.ab2@17109>    BNE.w JL_0_AF7C
0002CE4C <AmiBlitz3.ab2@17110>   MOVE.w regnum,D1
0002CE50 <AmiBlitz3.ab2@17111>   ORI.w #$4880,D1
0002CE54 <AmiBlitz3.ab2@17112>    BSR.w writeword
0002CE56 <AmiBlitz3.ab2@17115>   MOVE.w (A7)+,D3
0002CE5A <AmiBlitz3.ab2@17116>    BEQ.w JL_0_AF9E
0002CE60 <AmiBlitz3.ab2@17117>    MOVE.l lastinstructionaddr,a0
0002CE64 <AmiBlitz3.ab2@17118>   CMP.w #$3,D3
0002CE68 <AmiBlitz3.ab2@17119>    BNE.w JL_0_AF92
0002CE6C <AmiBlitz3.ab2@17120>   CMP.w #$4,D2
0002CE70 <AmiBlitz3.ab2@17121>    BEQ.w JL_0_AF98
0002CE72 <AmiBlitz3.ab2@17124>   CMP.w D2,D3
0002CE76 <AmiBlitz3.ab2@17125>    BLS.w JL_0_AF9E
0002CE78 <AmiBlitz3.ab2@17128>   EXG.l D2,D3
0002CE7A <AmiBlitz3.ab2@17129>   MOVE.l a0,-(a7)
0002CE80 <AmiBlitz3.ab2@17130>   TST.b typecheck
0002CE84 <AmiBlitz3.ab2@17131>   BEQ 'ok
0002CE8A <AmiBlitz3.ab2@17132>   TST.b notypecheck
0002CE8E <AmiBlitz3.ab2@17133>   BNE 'ok
0002CE94 <AmiBlitz3.ab2@17134>   MOVE.l leftsidetype,a0
0002CE9E <AmiBlitz3.ab2@17135>   CMP.l #0,leftsidetype
0002CEA2 <AmiBlitz3.ab2@17136>   BEQ 'ok
0002CEAA <AmiBlitz3.ab2@17137>   CMP.l #$100,4(a0)
0002CEAE <AmiBlitz3.ab2@17138>   BLE 'ok
0002CEB2 <AmiBlitz3.ab2@17139>   CMP.b #3,d3
0002CEB6 <AmiBlitz3.ab2@17140>   BEQ 'ok
0002CEBA <AmiBlitz3.ab2@17141>   CMP.b #7,d3
0002CEBE <AmiBlitz3.ab2@17142>   BEQ 'ok
0002CEC4 <AmiBlitz3.ab2@17143>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002CEC6 <AmiBlitz3.ab2@17145>   MOVE.l (a7)+,a0
0002CECA <AmiBlitz3.ab2@17146>   BSR.w writeconvertcode         ;called from var assign
0002CECE <AmiBlitz3.ab2@17149> BRA.w reget
0002CED0 <AmiBlitz3.ab2@17152>   MOVEQ.l #$00,D3
0002CED6 <AmiBlitz3.ab2@17153>   MOVE.w regnum,D1
0002CEDA <AmiBlitz3.ab2@17154>    BEQ.w JL_0_AFC8
0002CEDC <AmiBlitz3.ab2@17155>   SUBQ.w #1,D1
0002CEDE <AmiBlitz3.ab2@17158>      LSR.l #1,D3
0002CEE2 <AmiBlitz3.ab2@17159>      BSET #$F,D3
0002CEE6 <AmiBlitz3.ab2@17160>   DBF D1,JL_0_AFB0b
0002CEEC <AmiBlitz3.ab2@17162>    TST.b fpu
0002CEF0 <AmiBlitz3.ab2@17163>    BEQ 'l1
0002CEF6 <AmiBlitz3.ab2@17164>    ADDQ.l #2,stacktrack                                    ;intern command
0002CEF8 <AmiBlitz3.ab2@17165>     MOVE.l a0,-(a7)
0002CEFE <AmiBlitz3.ab2@17166>     MOVE.l stacktrack,d1
0002CF04 <AmiBlitz3.ab2@17167>     LEA fpustackbase,a0
0002CF08 <AmiBlitz3.ab2@17168>     CLR.w 0(a0,d1)
0002CF0E <AmiBlitz3.ab2@17169>     CLR.w regmask
0002CF10 <AmiBlitz3.ab2@17170>     MOVE.l (a7)+,a0
0002CF14 <AmiBlitz3.ab2@17173>   MOVE.w #$48E7,D1
0002CF18 <AmiBlitz3.ab2@17174>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CF1A <AmiBlitz3.ab2@17175>   MOVE.w D3,D1
0002CF1E <AmiBlitz3.ab2@17176> BRA.w writeword
0002CF20 <AmiBlitz3.ab2@17181>   MOVEQ.l #$00,D3
0002CF26 <AmiBlitz3.ab2@17182>   MOVE.w regnum,D1
0002CF2A <AmiBlitz3.ab2@17183>    BEQ.w JL_0_AFC8
0002CF2C <AmiBlitz3.ab2@17184>   SUBQ.w #1,D1
0002CF2E <AmiBlitz3.ab2@17187>     LSR.l #1,D3
0002CF32 <AmiBlitz3.ab2@17188>     BSET #$F,D3
0002CF36 <AmiBlitz3.ab2@17189>   DBF D1,JL_0_AFB0
0002CF3C <AmiBlitz3.ab2@17191>    TST.b fpu
0002CF40 <AmiBlitz3.ab2@17192>    BEQ 'l1
0002CF46 <AmiBlitz3.ab2@17193>    ADDQ.l #2,stacktrack                                    ;intern command
0002CF48 <AmiBlitz3.ab2@17194>     MOVE.l a0,-(a7)
0002CF4E <AmiBlitz3.ab2@17195>     MOVE.l stacktrack,d1
0002CF54 <AmiBlitz3.ab2@17196>     LEA fpustackbase,a0
0002CF58 <AmiBlitz3.ab2@17197>     CLR.w 0(a0,d1)
0002CF5C <AmiBlitz3.ab2@17198>    CMP.b #5,(a3)                                           ;result float ?
0002CF60 <AmiBlitz3.ab2@17199>     BNE 'nofpu
0002CF6A <AmiBlitz3.ab2@17201>     MOVE.w regnum,regnumfunc
0002CF70 <AmiBlitz3.ab2@17204>   CLR.w regmask
0002CF72 <AmiBlitz3.ab2@17205>     MOVE.l (a7)+,a0
0002CF76 <AmiBlitz3.ab2@17208>   MOVE.w #$48E7,D1
0002CF7A <AmiBlitz3.ab2@17209>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CF7C <AmiBlitz3.ab2@17210>   MOVE.w D3,D1
0002CF80 <AmiBlitz3.ab2@17211> BRA.w writeword
0002CF82 <AmiBlitz3.ab2@17214> RTS
0002CF84 <AmiBlitz3.ab2@17218>   MOVE.l D1,-(A7)
0002CF88 <AmiBlitz3.ab2@17219>   MOVE.w #$4EB9,D1
0002CF8C <AmiBlitz3.ab2@17220>    BSR.w writeword
0002CF90 <AmiBlitz3.ab2@17221>    BSR.w addoff
0002CF92 <AmiBlitz3.ab2@17222>   MOVE.l (A7)+,D1
0002CF96 <AmiBlitz3.ab2@17223> BRA.w writelong
0002CF9A <AmiBlitz3.ab2@17227>    BSR.w findproc                                          ;write function call
0002CF9E <AmiBlitz3.ab2@17228>    BEQ 'l1
0002CFA4 <AmiBlitz3.ab2@17229>    TST.l unusedfunc
0002CFA8 <AmiBlitz3.ab2@17230>    BEQ noprocerr
0002CFAE <AmiBlitz3.ab2@17232>    JSR gotoendsource
0002CFB6 <AmiBlitz3.ab2@17235>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002CFBC <AmiBlitz3.ab2@17236>   TST.l typetocast
0002CFC0 <AmiBlitz3.ab2@17237>   BEQ 'nocast
0002CFCA <AmiBlitz3.ab2@17238>   MOVE.l typetocast,rightsidetype
0002CFD0 <AmiBlitz3.ab2@17239>   CLR.l typetocast
0002CFD2 <AmiBlitz3.ab2@17240>   MOVE.l a1,-(a7)
0002CFD8 <AmiBlitz3.ab2@17241>   MOVE.l rightsidetype,a1
0002CFDE <AmiBlitz3.ab2@17242>   CMP.l leftsidetype,a1
0002CFE2 <AmiBlitz3.ab2@17243>   BEQ 'ok
0002CFE8 <AmiBlitz3.ab2@17244>   JMP errorconvertreturntype2
0002CFEA <AmiBlitz3.ab2@17245> 'ok  MOVE.l (a7)+,a1
0002CFEC <AmiBlitz3.ab2@17247>   MOVEQ.l #$00,D1
0002CFF0 <AmiBlitz3.ab2@17248>   MOVE.b $5(A2),D1
0002CFF6 <AmiBlitz3.ab2@17249>   MOVE.b d1,retmode
0002CFFA <AmiBlitz3.ab2@17250>    BMI.w illprocerr
0002D000 <AmiBlitz3.ab2@17251>    MOVE.b #1,isfunc(a2)
0002D002 <AmiBlitz3.ab2@17252>   MOVE.w D1,-(A7)
0002D004 <AmiBlitz3.ab2@17253>   MOVEQ.l #$00,D1
0002D008 <AmiBlitz3.ab2@17254>   MOVE.b $4(A2),D1
0002D00A <AmiBlitz3.ab2@17255>   LSR.w #4,D1
0002D00E <AmiBlitz3.ab2@17256>    BEQ.w JL_0_B006
0002D010 <AmiBlitz3.ab2@17257>   LSL.w #2,D1
0002D016 <AmiBlitz3.ab2@17258>   SUB.w D1,a2offset
0002D01A <AmiBlitz3.ab2@17261>   CMPI.w #$7,(A7)
0002D01E <AmiBlitz3.ab2@17262>    BNE.b JL_0_B014
0002D020 <AmiBlitz3.ab2@17263>   MOVE.l A2,-(A7)
0002D024 <AmiBlitz3.ab2@17264>    BSR.w makesbase
0002D026 <AmiBlitz3.ab2@17265>   MOVEA.l (A7)+,A2
0002D02C <AmiBlitz3.ab2@17268>   MOVE.w sbasegot,-(A7)
0002D030 <AmiBlitz3.ab2@17269>    BEQ.b JL_0_B020
0002D034 <AmiBlitz3.ab2@17270>    BSR.w dopusha3
0002D038 <AmiBlitz3.ab2@17273>   BSR.w JL_0_AFA2func
0002D03A <AmiBlitz3.ab2@17274>   MOVE.w D3,-(A7)
0002D03E <AmiBlitz3.ab2@17275>   MOVE.l $E(A2),D1
0002D042 <AmiBlitz3.ab2@17276>   TST.b $20(a2)                                            ;increase if morepar
0002D046 <AmiBlitz3.ab2@17277>   BNE 'no0par
0002D048 <AmiBlitz3.ab2@17278>   MOVE.l a5,a4
0002D04C <AmiBlitz3.ab2@17281>   CMP.b #$20,(a4)+
0002D050 <AmiBlitz3.ab2@17282>   BEQ 'l1
0002D056 <AmiBlitz3.ab2@17283>   CMP.b #"}",-1(a4)
0002D05A <AmiBlitz3.ab2@17284>   BNE  'no0par
0002D05C <AmiBlitz3.ab2@17285>   MOVEQ #0,d0
0002D060 <AmiBlitz3.ab2@17288>   LEA $16(A2),A1
0002D062 <AmiBlitz3.ab2@17291>   MOVE.l d1,-(a7)
0002D064 <AmiBlitz3.ab2@17292>   MOVE.b (a1),d2
0002D066 <AmiBlitz3.ab2@17293>   MOVE.l d0,d1
0002D06A <AmiBlitz3.ab2@17294>   CMP.w #4,d2
0002D06E <AmiBlitz3.ab2@17295>   BNE 'l1b
0002D074 <AmiBlitz3.ab2@17296>   ADD.l #$203c,d1
0002D078 <AmiBlitz3.ab2@17297>   BSR writeword
0002D07E <AmiBlitz3.ab2@17298>   MOVE.l #$ffff0000,d1
0002D082 <AmiBlitz3.ab2@17299>   BSR writelong
0002D086 <AmiBlitz3.ab2@17300> BRA 'l2b
0002D08C <AmiBlitz3.ab2@17303>    TST.b fpu
0002D090 <AmiBlitz3.ab2@17304>    BNE 'l1c
0002D094 <AmiBlitz3.ab2@17305>    CMP.w #5,d2
0002D098 <AmiBlitz3.ab2@17306>    BNE 'l1c
0002D09E <AmiBlitz3.ab2@17307>    ADD.l #$203c,d1
0002D0A2 <AmiBlitz3.ab2@17308>    BSR writeword
0002D0A8 <AmiBlitz3.ab2@17309>    MOVE.l #$800000c1,d1
0002D0AC <AmiBlitz3.ab2@17310>    BSR writelong
0002D0B0 <AmiBlitz3.ab2@17311> BRA 'l2b
0002D0B6 <AmiBlitz3.ab2@17314>   ADD.l #$70ff,d1
0002D0BA <AmiBlitz3.ab2@17315>   BSR writeword
0002D0BE <AmiBlitz3.ab2@17316>   CMP.w #7,d2
0002D0C2 <AmiBlitz3.ab2@17317>   BNE 'l1d
0002D0C8 <AmiBlitz3.ab2@17318>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002D0CC <AmiBlitz3.ab2@17319>   BSR writelong
0002D0CE <AmiBlitz3.ab2@17320>   MOVEQ #0,d1
0002D0D2 <AmiBlitz3.ab2@17321>   BSR writeword
0002D0D8 <AmiBlitz3.ab2@17322>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002D0DC <AmiBlitz3.ab2@17323>   BSR writelong
0002D0DE <AmiBlitz3.ab2@17324>   MOVEQ #0,d1
0002D0E2 <AmiBlitz3.ab2@17325>   BSR writeword
0002D0E8 <AmiBlitz3.ab2@17327> 'l1d  MOVE.l #$f23c5000,d1
0002D0EA <AmiBlitz3.ab2@17328>   MOVE.l d0,d2
0002D0EC <AmiBlitz3.ab2@17329>   ASR.l #2,d2
0002D0EE <AmiBlitz3.ab2@17330>   ADD.l d2,d1
0002D0F2 <AmiBlitz3.ab2@17331>   BSR writelong
0002D0F6 <AmiBlitz3.ab2@17332>   MOVE.w #$ffff,d1
0002D0FA <AmiBlitz3.ab2@17333>   BSR writeword
0002D0FC <AmiBlitz3.ab2@17337>   MOVE.l (a7)+,d1
0002D0FE <AmiBlitz3.ab2@17338>      ADDQ.l #1,a1
0002D104 <AmiBlitz3.ab2@17339>      ADD.l #$0200,d0
0002D10A <AmiBlitz3.ab2@17340>      CMP.l #$0e00,d0
0002D10E <AmiBlitz3.ab2@17341>      BEQ syntaxerr
0002D110 <AmiBlitz3.ab2@17342>      TST.b (a1)
0002D114 <AmiBlitz3.ab2@17343>      BNE 'again
0002D118 <AmiBlitz3.ab2@17344> BRA 'p1
0002D11C <AmiBlitz3.ab2@17347>   TST.b $4(A2)
0002D120 <AmiBlitz3.ab2@17348>    BNE.w JL_0_B03E
0002D124 <AmiBlitz3.ab2@17351>   BSR.w JL_0_AFCA
0002D128 <AmiBlitz3.ab2@17352>    BSR.w get1bytemain
0002D12C <AmiBlitz3.ab2@17353> BRA.w JL_0_B06C
0002D132 <AmiBlitz3.ab2@17357>   MOVE.w regnum,-(A7)
0002D13C <AmiBlitz3.ab2@17358>   MOVE.w regnum,regnumfunc
0002D13E <AmiBlitz3.ab2@17361>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002D146 <AmiBlitz3.ab2@17362>   MOVE.b #1,funccall
0002D148 <AmiBlitz3.ab2@17363>   MOVEQ.l #$00,D0
0002D14C <AmiBlitz3.ab2@17364>   MOVE.b $4(A2),D0
0002D156 <AmiBlitz3.ab2@17365>   MOVE.w a2offset,a2offset2
0002D15E <AmiBlitz3.ab2@17366>   MOVE.b 5(a2),retmode
0002D164 <AmiBlitz3.ab2@17367>   MOVE.l a2,currentfunccall
0002D168 <AmiBlitz3.ab2@17368>   LEA $16(A2),A2
0002D16E <AmiBlitz3.ab2@17369>   CLR.w regnum
0002D174 <AmiBlitz3.ab2@17370>   CLR.w regmask
0002D17A <AmiBlitz3.ab2@17371>   MOVE.b isconstantvalue,-(a7)
0002D180 <AmiBlitz3.ab2@17372>   MOVE.b funcparloop,-(a7)
0002D188 <AmiBlitz3.ab2@17373>   MOVE.b #1,funcparloop
0002D18E <AmiBlitz3.ab2@17374>   MOVE.l rightsidetype,-(a7)
0002D194 <AmiBlitz3.ab2@17375>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002D19A <AmiBlitz3.ab2@17376>   MOVE.b blitzparloop,-(a7)
0002D1A0 <AmiBlitz3.ab2@17377>   CLR.b blitzparloop
0002D1A6 <AmiBlitz3.ab2@17378>   JSR fetchpees2
0002D1AC <AmiBlitz3.ab2@17379>   MOVE.b (a7)+,blitzparloop
0002D1B2 <AmiBlitz3.ab2@17380>   MOVE.l (a7)+,leftsidetype
0002D1B8 <AmiBlitz3.ab2@17381>   MOVE.l (a7)+,rightsidetype
0002D1BE <AmiBlitz3.ab2@17382>   MOVE.b (a7)+,funcparloop
0002D1C4 <AmiBlitz3.ab2@17383>   MOVE.b (a7)+,isconstantvalue
0002D1CA <AmiBlitz3.ab2@17384>   JSR chkstak
0002D1CC <AmiBlitz3.ab2@17385>   MOVE.l (A7)+,D1
0002D1D0 <AmiBlitz3.ab2@17401>    BTST #0,d1
0002D1D4 <AmiBlitz3.ab2@17402>    BNE intern1
0002D1D8 <AmiBlitz3.ab2@17403>    BSR.w JL_0_AFCA
0002D1DE <AmiBlitz3.ab2@17425>   MOVE.w (A7)+,regnum
0002D1E2 <AmiBlitz3.ab2@17428>   CMP.w #"}",D0
0002D1E6 <AmiBlitz3.ab2@17429>    BNE.w errorbracketmiss2
0002D1E8 <AmiBlitz3.ab2@17430>    MOVEQ #0,d1                                            ; end of function call pars
0002D1EE <AmiBlitz3.ab2@17431>   MOVE.w regnum,D1
0002D1F2 <AmiBlitz3.ab2@17432>    BEQ.w JL_0_B08A
0002D1F8 <AmiBlitz3.ab2@17433>    TST.b fpu
0002D1FC <AmiBlitz3.ab2@17434>    BEQ 'old
0002D204 <AmiBlitz3.ab2@17435>    CMP.b #5,retmode
0002D208 <AmiBlitz3.ab2@17436>    BNE 'old
0002D20A <AmiBlitz3.ab2@17437>    ASL.l #7,d1
0002D210 <AmiBlitz3.ab2@17438>    OR.l #$f2000000,d1
0002D214 <AmiBlitz3.ab2@17439>    BSR writelong
0002D218 <AmiBlitz3.ab2@17440> BRA JL_0_B08A
0002D21A <AmiBlitz3.ab2@17442>  'old  LSL.w #8,D1
0002D21C <AmiBlitz3.ab2@17443>   LSL.w #1,D1
0002D220 <AmiBlitz3.ab2@17444>   ORI.w #$2000,D1
0002D224 <AmiBlitz3.ab2@17445>    BSR.w writeword
0002D226 <AmiBlitz3.ab2@17448>    MOVE.w (A7)+,D3
0002D22A <AmiBlitz3.ab2@17449>    BEQ.w JL_0_B0A8
0002D230 <AmiBlitz3.ab2@17450>    TST.b fpu
0002D234 <AmiBlitz3.ab2@17451>    BEQ 'old
0002D236 <AmiBlitz3.ab2@17452>    MOVE.l d0,-(a7)
0002D23A <AmiBlitz3.ab2@17453>    MOVE.w #8,d0
0002D23C <AmiBlitz3.ab2@17454>    MOVE.l a0,-(a7)
0002D242 <AmiBlitz3.ab2@17455>    MOVE.l stacktrack,d1
0002D248 <AmiBlitz3.ab2@17456>    LEA fpustackbase,a0
0002D250 <AmiBlitz3.ab2@17457>    MOVE.w 0(a0,d1),regmask
0002D252 <AmiBlitz3.ab2@17458>    MOVE.l (a7)+,a0
0002D256 <AmiBlitz3.ab2@17461>   BEQ 'ready
0002D25C <AmiBlitz3.ab2@17462>    BTST d0,regmask
0002D260 <AmiBlitz3.ab2@17463>    BEQ 'noa7
0002D262 <AmiBlitz3.ab2@17464>    MOVEQ #0,d1
0002D264 <AmiBlitz3.ab2@17465>    MOVE.w d0,d1
0002D266 <AmiBlitz3.ab2@17466>    SUBQ.w #1,d1
0002D268 <AmiBlitz3.ab2@17467>    ASL #7,d1
0002D26E <AmiBlitz3.ab2@17469>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002D272 <AmiBlitz3.ab2@17470>    BSR writelong
0002D278 <AmiBlitz3.ab2@17471>    SUBQ.l #2,stacktrack
0002D27A <AmiBlitz3.ab2@17474>    SUBQ.w #1,d0
0002D27E <AmiBlitz3.ab2@17475>    BNE 'loop
0002D284 <AmiBlitz3.ab2@17478>   SUBQ.l #2,stacktrack                                     ;integer sub
0002D286 <AmiBlitz3.ab2@17479>   MOVE.l (a7)+,d0
0002D28A <AmiBlitz3.ab2@17482>   MOVE.w #$4CDF,D1
0002D28E <AmiBlitz3.ab2@17483>    BSR.w writeword
0002D290 <AmiBlitz3.ab2@17484>   MOVEQ.l #$00,D1
0002D292 <AmiBlitz3.ab2@17485>   MOVEQ.l #$0F,D4
0002D294 <AmiBlitz3.ab2@17488>     LSL.w #1,D3
0002D296 <AmiBlitz3.ab2@17489>     ROXR.w #1,D1
0002D29A <AmiBlitz3.ab2@17490>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002D29E <AmiBlitz3.ab2@17492>     BSR.w writeword
0002D2A4 <AmiBlitz3.ab2@17493>    CLR.w regnumfunc
0002D2A6 <AmiBlitz3.ab2@17496>   MOVE.w (A7)+,D1
0002D2AA <AmiBlitz3.ab2@17497>    BEQ.b JL_0_B0D2
0002D2AE <AmiBlitz3.ab2@17498>   CMPI.w #$7,(A7)
0002D2B2 <AmiBlitz3.ab2@17499>    BEQ.b JL_0_B0C4
0002D2B8 <AmiBlitz3.ab2@17500>   LEA geta3,A0
0002D2BE <AmiBlitz3.ab2@17501>   LEA numtoa0,A1
0002D2C2 <AmiBlitz3.ab2@17502>    BSR.w pokecode
0002D2C6 <AmiBlitz3.ab2@17503> BRA.b JL_0_B0CE
0002D2CC <AmiBlitz3.ab2@17506>   MOVE.w deca3,D1
0002D2D0 <AmiBlitz3.ab2@17507>    BSR.w writeword
0002D2D4 <AmiBlitz3.ab2@17510>   BSR.w dopulla3                                           ;fix up string base
0002D2D6 <AmiBlitz3.ab2@17513>   MOVE.w (A7)+,D2                                          ;what it returns!
0002D2DA <AmiBlitz3.ab2@17514>   CMP.w #$7,D2
0002D2DE <AmiBlitz3.ab2@17515>    BNE.w JL_0_B0EC
0002D2E4 <AmiBlitz3.ab2@17516>   MOVE.w putstlen,D1
0002D2EA <AmiBlitz3.ab2@17517>   OR.w regnum,D1
0002D2EE <AmiBlitz3.ab2@17518>    BSR.w writeword
0002D2F2 <AmiBlitz3.ab2@17521>   BSR.w get1bytemain
0002D2F6 <AmiBlitz3.ab2@17522> BRA.w JL_0_AF66
0002D2F8 <AmiBlitz3.ab2@17526> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002D300 <AmiBlitz3.ab2@17531>   CMP.b #2,optistring
0002D304 <AmiBlitz3.ab2@17532>   BEQ fs2
0002D308 <AmiBlitz3.ab2@17533>   BSR.w makesbase                                          ;writestringvariable
0002D30C <AmiBlitz3.ab2@17534>   BTST #$F,D2
0002D310 <AmiBlitz3.ab2@17535>    BNE.w JL_0_B112
0002D316 <AmiBlitz3.ab2@17536>   MOVE.w D3,leaa5d3a2+2
0002D31C <AmiBlitz3.ab2@17537>   MOVE.l leaa5d3a2,D1
0002D320 <AmiBlitz3.ab2@17538>    BSR.w pokela5s
0002D326 <AmiBlitz3.ab2@17541>   MOVE.w regnum,D1
0002D328 <AmiBlitz3.ab2@17542>   LSL.w #8,D1
0002D32A <AmiBlitz3.ab2@17543>   LSL.w #1,D1
0002D32E <AmiBlitz3.ab2@17544>   ORI.w #$7000,D1
0002D334 <AmiBlitz3.ab2@17545>   LEA stvarget2,A0
0002D336 <AmiBlitz3.ab2@17546>   MOVE.w D1,(A0)
0002D33C <AmiBlitz3.ab2@17547>   MOVE.w regnum,D1
0002D342 <AmiBlitz3.ab2@17548>   ANDI.w #$FFF8,$2(A0)
0002D346 <AmiBlitz3.ab2@17549>   OR.w D1,$2(A0)
0002D34C <AmiBlitz3.ab2@17550>   LEA stvarget2f,A1
0002D350 <AmiBlitz3.ab2@17551>    BSR.w pokecode
0002D354 <AmiBlitz3.ab2@17552>   MOVE.w #$C600,D1
0002D358 <AmiBlitz3.ab2@17553>    BSR.w Atokejsr
0002D35A <AmiBlitz3.ab2@17554>   MOVEQ.l #$07,D2
0002D35E <AmiBlitz3.ab2@17555> BRA.w reget
0002D364 <AmiBlitz3.ab2@17558>      TST.w stackpar
0002D368 <AmiBlitz3.ab2@17559>      BMI 'l10
0002D36E <AmiBlitz3.ab2@17560>      MOVE.l #$3f3c0007,d1
0002D374 <AmiBlitz3.ab2@17561>      ADDQ.w #2,a2offset
0002D378 <AmiBlitz3.ab2@17562>      BSR writelong
0002D37C <AmiBlitz3.ab2@17565>   MOVE.w #$4878,d1
0002D382 <AmiBlitz3.ab2@17566>      CLR.w stackpar
0002D386 <AmiBlitz3.ab2@17567>      BSR writeword
0002D38A <AmiBlitz3.ab2@17568>      MOVE.w #$0,d1
0002D38E <AmiBlitz3.ab2@17569>      BSR writeword
0002D392 <AmiBlitz3.ab2@17570>      MOVE.w #$246d,d1
0002D396 <AmiBlitz3.ab2@17571>      BSR writeword
0002D398 <AmiBlitz3.ab2@17572>      MOVE.w d3,d1
0002D39C <AmiBlitz3.ab2@17573>      BSR writeword
0002D3A2 <AmiBlitz3.ab2@17574>      MOVE.l #$4a926704,d1
0002D3A6 <AmiBlitz3.ab2@17575>      BSR writelong
0002D3AC <AmiBlitz3.ab2@17576>      MOVE.l #$2eaafffc,d1
0002D3B0 <AmiBlitz3.ab2@17577>      BSR writelong
0002D3B4 <AmiBlitz3.ab2@17578>      MOVE.w #$2f0a,d1
0002D3BA <AmiBlitz3.ab2@17579>      ADDQ.w #8,a2offset
0002D3BE <AmiBlitz3.ab2@17580>      BSR writeword
0002D3C2 <AmiBlitz3.ab2@17581> BRA.w reget
0002D3C6 <AmiBlitz3.ab2@17584>   CMP.b #$7,D2                                             ;load basic var
0002D3CA <AmiBlitz3.ab2@17585>    BEQ.w JL_0_B0F6
0002D3D0 <AmiBlitz3.ab2@17587>    TST.b iee
0002D3D4 <AmiBlitz3.ab2@17588>    BEQ 'noiee
0002D3D8 <AmiBlitz3.ab2@17589>    CMP.b #5,d2
0002D3DC <AmiBlitz3.ab2@17590>    BNE 'noiee
0002D3DE <AmiBlitz3.ab2@17591>    MOVE.l d0,-(a7)                                         ;fpu load var
0002D3E2 <AmiBlitz3.ab2@17592>    BTST #15,d2
0002D3E6 <AmiBlitz3.ab2@17593>    BEQ 'var
0002D3EC <AmiBlitz3.ab2@17594>    CMP.l #$7fff,d3
0002D3F0 <AmiBlitz3.ab2@17595>    BGT 'longoffset
0002D3F6 <AmiBlitz3.ab2@17596>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002D3F8 <AmiBlitz3.ab2@17597>    TST.w d3                                                ;offset =0
0002D3FC <AmiBlitz3.ab2@17598>    BNE 'offset
0002D402 <AmiBlitz3.ab2@17601>   MOVE.l #$f2124400,d1
0002D404 <AmiBlitz3.ab2@17602>    MOVEQ #0,d3
0002D408 <AmiBlitz3.ab2@17603> BRA 'glob
0002D40E <AmiBlitz3.ab2@17606>   SUBQ.l #4,destpointer
0002D412 <AmiBlitz3.ab2@17607> BRA 'glob
0002D418 <AmiBlitz3.ab2@17610>   TST.b fast
0002D41C <AmiBlitz3.ab2@17611>    BEQ 'nofastload
0002D422 <AmiBlitz3.ab2@17612>    TST.w regnum
0002D426 <AmiBlitz3.ab2@17613>    BNE 'nofastload
0002D42C <AmiBlitz3.ab2@17614>    CMP.l fp0addr,a4
0002D430 <AmiBlitz3.ab2@17615>    BNE 'nofastload
0002D436 <AmiBlitz3.ab2@17616>    MOVE.l fp0iff,d1
0002D43C <AmiBlitz3.ab2@17617>    CMP.l firstiff,d1
0002D440 <AmiBlitz3.ab2@17618>    BNE 'nofastload
0002D446 <AmiBlitz3.ab2@17619>    MOVE.w varmode,d1
0002D44C <AmiBlitz3.ab2@17620>    CMP.w fp0mode,d1
0002D450 <AmiBlitz3.ab2@17621>    BNE 'nofastload
0002D456 <AmiBlitz3.ab2@17622>    CMP.w fp0var,d3
0002D45A <AmiBlitz3.ab2@17623>    BNE 'nofastload
0002D45E <AmiBlitz3.ab2@17624>    BCLR #16,d2
0002D460 <AmiBlitz3.ab2@17625>    MOVE.l (a7)+,d0
0002D462 <AmiBlitz3.ab2@17626> RTS
0002D464 <AmiBlitz3.ab2@17629>    MOVEQ #0,d0
0002D46A <AmiBlitz3.ab2@17630>    MOVE.w regnum,d0
0002D470 <AmiBlitz3.ab2@17631>    CMP.l maxregs,d0
0002D474 <AmiBlitz3.ab2@17632>    BLE 'ok
0002D47A <AmiBlitz3.ab2@17633>    LEA cmplxerr,a0
0002D47C <AmiBlitz3.ab2@17634>   MOVE.l a0,-(a7)
0002D482 <AmiBlitz3.ab2@17635> JMP handle_compileerror
0002D488 <AmiBlitz3.ab2@17638>    LEA regtable,a4
0002D48A <AmiBlitz3.ab2@17639>    TST.l (a4)
0002D48E <AmiBlitz3.ab2@17640>    BEQ 'noreg
0002D492 <AmiBlitz3.ab2@17641>    CMP.w 0+4(a4),d3
0002D496 <AmiBlitz3.ab2@17642>    BNE 'doreg1
0002D49C <AmiBlitz3.ab2@17643>    MOVE.l #$f2001c00,d1
0002D4A2 <AmiBlitz3.ab2@17644>    MOVE.w regnum,d0
0002D4A4 <AmiBlitz3.ab2@17645>    ASL.w #7,d0
0002D4A6 <AmiBlitz3.ab2@17646>    OR.w d0,d1
0002D4AA <AmiBlitz3.ab2@17647>    BSR writelong
0002D4AC <AmiBlitz3.ab2@17648>    MOVE.l (a7)+,d0
0002D4AE <AmiBlitz3.ab2@17649> RTS
0002D4B2 <AmiBlitz3.ab2@17652>   CMP.w 8+4(a4),d3
0002D4B6 <AmiBlitz3.ab2@17653>    BNE 'doreg2
0002D4BC <AmiBlitz3.ab2@17654>    MOVE.l #$f2001800,d1
0002D4C2 <AmiBlitz3.ab2@17655>    MOVE.w regnum,d0
0002D4C4 <AmiBlitz3.ab2@17656>    ASL.w #7,d0
0002D4C6 <AmiBlitz3.ab2@17657>    OR.w d0,d1
0002D4CA <AmiBlitz3.ab2@17658>    BSR writelong
0002D4CC <AmiBlitz3.ab2@17659>    MOVE.l (a7)+,d0
0002D4CE <AmiBlitz3.ab2@17660> RTS
0002D4D2 <AmiBlitz3.ab2@17663>   CMP.w 16+4(a4),d3
0002D4D6 <AmiBlitz3.ab2@17664>    BNE 'doreg3
0002D4DC <AmiBlitz3.ab2@17665>    MOVE.l #$f2001400,d1
0002D4E2 <AmiBlitz3.ab2@17666>    MOVE.w regnum,d0
0002D4E4 <AmiBlitz3.ab2@17667>    ASL.w #7,d0
0002D4E6 <AmiBlitz3.ab2@17668>    OR.w d0,d1
0002D4EA <AmiBlitz3.ab2@17669>    BSR  writelong
0002D4EC <AmiBlitz3.ab2@17670>    MOVE.l (a7)+,d0
0002D4EE <AmiBlitz3.ab2@17671> RTS
0002D4F2 <AmiBlitz3.ab2@17674>   CMP.w 24+4(a4),d3
0002D4F6 <AmiBlitz3.ab2@17675>    BNE 'doreg4
0002D4FC <AmiBlitz3.ab2@17676>    MOVE.l #$f2001000,d1
0002D502 <AmiBlitz3.ab2@17677>    MOVE.w regnum,d0
0002D504 <AmiBlitz3.ab2@17678>    ASL.w #7,d0
0002D506 <AmiBlitz3.ab2@17679>    OR.w d0,d1
0002D50A <AmiBlitz3.ab2@17680>    BSR writelong
0002D50C <AmiBlitz3.ab2@17681>    MOVE.l (a7)+,d0
0002D50E <AmiBlitz3.ab2@17682> RTS
0002D512 <AmiBlitz3.ab2@17685>    CMP.w 32+4(a4),d3
0002D516 <AmiBlitz3.ab2@17686>    BNE 'noreg
0002D51C <AmiBlitz3.ab2@17687>    MOVE.l #$f2000c00,d1
0002D522 <AmiBlitz3.ab2@17688>    MOVE.w regnum,d0
0002D524 <AmiBlitz3.ab2@17689>    ASL.w #7,d0
0002D526 <AmiBlitz3.ab2@17690>    OR.w d0,d1
0002D52A <AmiBlitz3.ab2@17691>    BSR writelong
0002D52C <AmiBlitz3.ab2@17692>    MOVE.l (a7)+,d0
0002D52E <AmiBlitz3.ab2@17693> RTS
0002D534 <AmiBlitz3.ab2@17696>    MOVE.l #$f22d4400,d1                                    ;var
0002D53A <AmiBlitz3.ab2@17697>    TST.w varmode
0002D53E <AmiBlitz3.ab2@17698>   BEQ 'glob
0002D542 <AmiBlitz3.ab2@17699>   BCLR #16,d1                                              ;local
0002D544 <AmiBlitz3.ab2@17702>    MOVEQ #0,d0
0002D54A <AmiBlitz3.ab2@17703>    MOVE.w regnum,d0
0002D54E <AmiBlitz3.ab2@17704>    CMP.w #7,d0
0002D552 <AmiBlitz3.ab2@17705>    BLE 'ok2
0002D558 <AmiBlitz3.ab2@17706>    LEA cmplxerr,a0
0002D55A <AmiBlitz3.ab2@17707>   MOVE.l a0,-(a7)
0002D560 <AmiBlitz3.ab2@17708> JMP handle_compileerror
0002D562 <AmiBlitz3.ab2@17711>      ASL.w #7,d0
0002D564 <AmiBlitz3.ab2@17712>    OR.l d0,d1
0002D56C <AmiBlitz3.ab2@17713>    CMP.l #doublecheck,8(a2)
0002D570 <AmiBlitz3.ab2@17714>    BNE 'dbl
0002D576 <AmiBlitz3.ab2@17715>    OR.l #$00001000,d1
0002D57A <AmiBlitz3.ab2@17718>   BSR writelong
0002D57C <AmiBlitz3.ab2@17719>    MOVE.l (a7)+,d0
0002D580 <AmiBlitz3.ab2@17720>    AND.w #$ff,d2
0002D582 <AmiBlitz3.ab2@17721>    MOVE.w d3,d1
0002D586 <AmiBlitz3.ab2@17722>    BEQ 'nooffs
0002D58A <AmiBlitz3.ab2@17723> BRA writeword
0002D58C <AmiBlitz3.ab2@17728> RTS
0002D592 <AmiBlitz3.ab2@17731>   MOVE.w regnum,D1
0002D598 <AmiBlitz3.ab2@17732>   MOVE.w d1,load_var_reg
0002D59A <AmiBlitz3.ab2@17733>   LSL.w #8,D1
0002D5A4 <AmiBlitz3.ab2@17734>   MOVE.l destpointer,load_var_addr
0002D5AA <AmiBlitz3.ab2@17735>   MOVE.w d2,load_var_size
0002D5AC <AmiBlitz3.ab2@17736>   LSL.w #1,D1
0002D5B0 <AmiBlitz3.ab2@17737>   BTST #$E,D2
0002D5B4 <AmiBlitz3.ab2@17738>    BNE.w JL_0_B17A
0002D5B6 <AmiBlitz3.ab2@17739>   TST.b D2
0002D5BA <AmiBlitz3.ab2@17740>    BNE.w JL_0_B17E
0002D5BC <AmiBlitz3.ab2@17741>   MOVEQ.l #$03,D2
0002D5C0 <AmiBlitz3.ab2@17742>   ORI.w #$200A,D1
0002D5C4 <AmiBlitz3.ab2@17743> BRA.w writeword
0002D5C8 <AmiBlitz3.ab2@17746>   MOVE.b #$3,D2
0002D5CC <AmiBlitz3.ab2@17749>   BTST #$F,D2
0002D5D0 <AmiBlitz3.ab2@17750>    BEQ.w JL_0_B19A                                         ;loadarray
0002D5D6 <AmiBlitz3.ab2@17751>    TST.b fast                                              ;lea->move xx(a2)
0002D5DA <AmiBlitz3.ab2@17752>    BEQ 'la10
0002D5E0 <AmiBlitz3.ab2@17757>    CLR.l load_var_addr
0002D5E4 <AmiBlitz3.ab2@17758> BRA 'la10
0002D5EC <AmiBlitz3.ab2@17760>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002D5F0 <AmiBlitz3.ab2@17761>    BNE 'la10
0002D5F6 <AmiBlitz3.ab2@17762>    TST.b optiarray
0002D5FA <AmiBlitz3.ab2@17763>    BNE 'la10
0002D600 <AmiBlitz3.ab2@17764>    MOVE.l destpointer,a4
0002D606 <AmiBlitz3.ab2@17765>    SUB.l loada,a4
0002D60A <AmiBlitz3.ab2@17766>    CMP.w #4,a4
0002D60E <AmiBlitz3.ab2@17767>    BEQ 'la100
0002D612 <AmiBlitz3.ab2@17768>    CMP.w #2,a4
0002D616 <AmiBlitz3.ab2@17769>    BNE 'la10
0002D61C <AmiBlitz3.ab2@17770>    MOVE.l destpointer,a4
0002D620 <AmiBlitz3.ab2@17771>    CMP.b #3,d2
0002D624 <AmiBlitz3.ab2@17772>    BCS 'la110
0002D62A <AmiBlitz3.ab2@17773>    MOVE.w #$202a,-2(a4)
0002D62E <AmiBlitz3.ab2@17774>    OR.w d1,-2(a4)
0002D634 <AmiBlitz3.ab2@17775>    MOVE.w arrayoffset,d1
0002D638 <AmiBlitz3.ab2@17776>    BSR writeword
0002D63C <AmiBlitz3.ab2@17777> BRA JL_0_B194
0002D640 <AmiBlitz3.ab2@17780>    CMP.b #2,d2
0002D644 <AmiBlitz3.ab2@17781>    BNE 'la120
0002D64A <AmiBlitz3.ab2@17782>     MOVE.w #$302a,-2(a4)
0002D64E <AmiBlitz3.ab2@17783>    OR.w d1,-2(a4)
0002D654 <AmiBlitz3.ab2@17785>    MOVE.w arrayoffset,d1
0002D658 <AmiBlitz3.ab2@17786>    BSR writeword
0002D65C <AmiBlitz3.ab2@17787> BRA JL_0_B194
0002D660 <AmiBlitz3.ab2@17790>   CMP.b #1,d2
0002D664 <AmiBlitz3.ab2@17791>    BNE.s 'la10
0002D66A <AmiBlitz3.ab2@17792>     MOVE.w #$102a,-2(a4)
0002D66E <AmiBlitz3.ab2@17793>    OR.w d1,-2(a4)
0002D674 <AmiBlitz3.ab2@17794>    MOVE.w arrayoffset,d1
0002D678 <AmiBlitz3.ab2@17795>    BSR writeword
0002D67C <AmiBlitz3.ab2@17796> BRA JL_0_B194
0002D682 <AmiBlitz3.ab2@17799>   MOVE.l destpointer,a4
0002D688 <AmiBlitz3.ab2@17800>    CMP.w #$45ea,-2(a4)
0002D68C <AmiBlitz3.ab2@17801>    BNE 'la10
0002D690 <AmiBlitz3.ab2@17802>    CMP.b #3,d2
0002D694 <AmiBlitz3.ab2@17803>    BCS 'la11
0002D69A <AmiBlitz3.ab2@17804>    MOVE.w #$202a,-4(a4)
0002D69E <AmiBlitz3.ab2@17805>    OR.w d1,-4(a4)
0002D6A2 <AmiBlitz3.ab2@17806> BRA JL_0_B194
0002D6A6 <AmiBlitz3.ab2@17809>    CMP.b #2,d2
0002D6AA <AmiBlitz3.ab2@17810>    BNE 'la12
0002D6B0 <AmiBlitz3.ab2@17811>     MOVE.w #$302a,-4(a4)
0002D6B4 <AmiBlitz3.ab2@17812>    OR.w d1,-4(a4)
0002D6B8 <AmiBlitz3.ab2@17813> BRA JL_0_B194
0002D6BC <AmiBlitz3.ab2@17816>   CMP.b #1,d2
0002D6C0 <AmiBlitz3.ab2@17817>    BNE.s 'la10
0002D6C6 <AmiBlitz3.ab2@17818>     MOVE.w #$102a,-4(a4)
0002D6CA <AmiBlitz3.ab2@17819>    OR.w d1,-4(a4)
0002D6CE <AmiBlitz3.ab2@17820> BRA JL_0_B194
0002D6D4 <AmiBlitz3.ab2@17823>    OR.w movea2dn,D1
0002D6D8 <AmiBlitz3.ab2@17824>    BSR.w JL_0_B1B2
0002D6DC <AmiBlitz3.ab2@17825>    BSR.w writeword
0002D6E0 <AmiBlitz3.ab2@17828>   ANDI.w #$FF,D2
0002D6E2 <AmiBlitz3.ab2@17829> RTS
0002D6E8 <AmiBlitz3.ab2@17833>    MOVE.l destpointer,a4
0002D6F0 <AmiBlitz3.ab2@17834>    MOVE.l #$f22a4400,-4(a4)
0002D6F6 <AmiBlitz3.ab2@17835>    MOVE.w arrayoffset,d1
0002D6FA <AmiBlitz3.ab2@17836> BRA writeword
0002D700 <AmiBlitz3.ab2@17840>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002D704 <AmiBlitz3.ab2@17841>    BSR.w JL_0_B1B2
0002D708 <AmiBlitz3.ab2@17842>    BSR.w pokewda5s
0002D70A <AmiBlitz3.ab2@17843>   MOVE.w D3,D1
0002D70E <AmiBlitz3.ab2@17844>    BSR.w writeword
0002D712 <AmiBlitz3.ab2@17845> BRA.w JL_0_B194
0002D716 <AmiBlitz3.ab2@17848>   BTST #$E,D2
0002D71A <AmiBlitz3.ab2@17849>    BNE.w JL_0_B1CA
0002D71E <AmiBlitz3.ab2@17850>   CMP.b #$1,D2
0002D722 <AmiBlitz3.ab2@17851>    BEQ.w JL_0_B1CC
0002D726 <AmiBlitz3.ab2@17852>   CMP.b #$2,D2
0002D72A <AmiBlitz3.ab2@17853>    BEQ.w JL_0_B1D2
0002D72C <AmiBlitz3.ab2@17856> RTS
0002D730 <AmiBlitz3.ab2@17859>   EORI.w #$3000,D1
0002D732 <AmiBlitz3.ab2@17860> RTS
0002D736 <AmiBlitz3.ab2@17863>   ORI.w #$1000,D1
0002D738 <AmiBlitz3.ab2@17864> RTS
0002D740 <AmiBlitz3.ab2@17868>   MOVE.w #$FFFF,dfetch
0002D744 <AmiBlitz3.ab2@17869>   BSR.w get1bytemain
0002D748 <AmiBlitz3.ab2@17870>   CMP.w #$2D,D0
0002D74C <AmiBlitz3.ab2@17871>    BNE.w JL_0_B206
0002D750 <AmiBlitz3.ab2@17872>   BSR.w get1bytemain
0002D754 <AmiBlitz3.ab2@17873>   BSR.w JL_0_B206
0002D758 <AmiBlitz3.ab2@17874>   CMP.w #$5,D2
0002D75C <AmiBlitz3.ab2@17875>    BCC.w JL_0_B200
0002D75E <AmiBlitz3.ab2@17876>   NEG.l D0
0002D760 <AmiBlitz3.ab2@17877> RTS
0002D766 <AmiBlitz3.ab2@17880>   TST.b fpu
0002D76A <AmiBlitz3.ab2@17881>   BEQ 'noneg
0002D76E <AmiBlitz3.ab2@17882>   fneg.x fp0
0002D770 <AmiBlitz3.ab2@17883> RTS
0002D774 <AmiBlitz3.ab2@17886>   BCHG #$7,D0
0002D776 <AmiBlitz3.ab2@17887> RTS
0002D77A <AmiBlitz3.ab2@17890>   CMP.w #$24,D0
0002D77E <AmiBlitz3.ab2@17891>    BEQ.w get_hexconstant
0002D782 <AmiBlitz3.ab2@17892>   CMP.w #$25,D0
0002D786 <AmiBlitz3.ab2@17893>    BEQ.w JL_0_A8C0
0002D78A <AmiBlitz3.ab2@17894>   CMP.w #$2E,D0
0002D78E <AmiBlitz3.ab2@17895>    BNE.w JL_0_B224
0002D790 <AmiBlitz3.ab2@17898>   MOVEQ.l #$00,D3
0002D794 <AmiBlitz3.ab2@17899> BRA.w JL_0_B272
0002D796 <AmiBlitz3.ab2@17902>   MOVEQ.l #$00,D3                                          ;number
0002D79A <AmiBlitz3.ab2@17903>    BSR.w atoi
0002D79E <AmiBlitz3.ab2@17904>   CMP.w #$2E,D0
0002D7A2 <AmiBlitz3.ab2@17905>    BEQ.w JL_0_B268
0002D7A6 <AmiBlitz3.ab2@17906>   ORI.w #$20,D0
0002D7AA <AmiBlitz3.ab2@17907>   CMP.w #$65,D0
0002D7AE <AmiBlitz3.ab2@17908>    BNE.w JL_0_B46E
0002D7B4 <AmiBlitz3.ab2@17909>   CMP.l #$800000,D3
0002D7B8 <AmiBlitz3.ab2@17910>    BCC.w overerr
0002D7BA <AmiBlitz3.ab2@17911>   MOVEQ.l #-$01,D6
0002D7BE <AmiBlitz3.ab2@17912>   fmove.l d3,fp0
0002D7C0 <AmiBlitz3.ab2@17913>   MOVE.l D3,D0
0002D7C6 <AmiBlitz3.ab2@17914>   MOVEA.l _mathffpbase,A6
0002D7CA <AmiBlitz3.ab2@17915>    JSR -$24(A6)
0002D7CC <AmiBlitz3.ab2@17916>   MOVE.l D0,D3
0002D7D0 <AmiBlitz3.ab2@17917>    BSR.w JL_0_B2E6
0002D7D4 <AmiBlitz3.ab2@17918>    BSR.w reget
0002D7D8 <AmiBlitz3.ab2@17919>    BSR.w JL_0_B480
0002D7DC <AmiBlitz3.ab2@17920> BRA.w JL_0_B3DC
0002D7E0 <AmiBlitz3.ab2@17923>   CMP.b #4,d2
0002D7E4 <AmiBlitz3.ab2@17924>   BEQ 'l4
0002D7E8 <AmiBlitz3.ab2@17925>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002D7EE <AmiBlitz3.ab2@17928>    TST.b fpu
0002D7F2 <AmiBlitz3.ab2@17929>    BNE 'l1
0002D7F8 <AmiBlitz3.ab2@17930>    CMP.l #$800000,D3
0002D7FC <AmiBlitz3.ab2@17931>    BCC.w overerr
0002D800 <AmiBlitz3.ab2@17932> BRA JL_0_B272
0002D806 <AmiBlitz3.ab2@17935>   CMP.l #$7fffffff,d3
0002D80A <AmiBlitz3.ab2@17936>     BCC.w overerr
0002D80C <AmiBlitz3.ab2@17939>   MOVEQ.l #-$01,D6
0002D80E <AmiBlitz3.ab2@17940>   MOVE.l D3,D0
0002D812 <AmiBlitz3.ab2@17941>   fmove.l d3,fp0
0002D818 <AmiBlitz3.ab2@17942>   MOVEA.l _mathffpbase,A6
0002D81C <AmiBlitz3.ab2@17943>    JSR -$24(A6)                                            ;integer to ffp
0002D81E <AmiBlitz3.ab2@17944>   MOVE.l D0,-(A7)
0002D822 <AmiBlitz3.ab2@17945>    BSR.w get1bytemain
0002D826 <AmiBlitz3.ab2@17946>    BSR.w tstnum
0002D82A <AmiBlitz3.ab2@17947>    BNE.w syntaxerr
0002D82C <AmiBlitz3.ab2@17948>   MOVEQ.l #$00,D3
0002D830 <AmiBlitz3.ab2@17949>    BSR.w atoi
0002D832 <AmiBlitz3.ab2@17950>   TST.l D3
0002D836 <AmiBlitz3.ab2@17951>    BEQ.w JL_0_B2E0
0002D83C <AmiBlitz3.ab2@17952>   TST.b fpu
0002D840 <AmiBlitz3.ab2@17953>   BNE 'l1
0002D846 <AmiBlitz3.ab2@17954>   CMP.l #$800000,D3
0002D84A <AmiBlitz3.ab2@17955>    BCC.w overerr
0002D84E <AmiBlitz3.ab2@17956> BRA 'l2
0002D854 <AmiBlitz3.ab2@17959>   CMP.l #$7fffffff,d3
0002D858 <AmiBlitz3.ab2@17960>   BCC overerr
0002D85C <AmiBlitz3.ab2@17963>   fmove.l d5,fp1
0002D85E <AmiBlitz3.ab2@17964>   MOVE.l D5,D0
0002D862 <AmiBlitz3.ab2@17965>    JSR -$24(A6)
0002D864 <AmiBlitz3.ab2@17966>   MOVE.l D0,D5
0002D868 <AmiBlitz3.ab2@17967>   fmove.l d3,fp2
0002D86A <AmiBlitz3.ab2@17968>   MOVE.l D3,D0
0002D86E <AmiBlitz3.ab2@17969>    JSR -$24(A6)
0002D872 <AmiBlitz3.ab2@17970>   fdiv.x fp1,fp2
0002D874 <AmiBlitz3.ab2@17971>   MOVE.l D5,D1
0002D878 <AmiBlitz3.ab2@17972>    JSR -$54(A6)
0002D87C <AmiBlitz3.ab2@17973>   fadd.x fp2,fp0
0002D87E <AmiBlitz3.ab2@17974>   MOVE.l (A7)+,D1
0002D882 <AmiBlitz3.ab2@17975>    JSR -$42(A6)
0002D884 <AmiBlitz3.ab2@17976>   MOVE.l D0,D3
0002D888 <AmiBlitz3.ab2@17977>    BSR.w reget
0002D88C <AmiBlitz3.ab2@17978>   ORI.w #$20,D0
0002D890 <AmiBlitz3.ab2@17979>   CMP.w #$65,D0
0002D894 <AmiBlitz3.ab2@17980>    BNE.w JL_0_B2D4
0002D898 <AmiBlitz3.ab2@17981>    BSR.w JL_0_B2E6
0002D89C <AmiBlitz3.ab2@17984>    BSR.w reget
0002D8A0 <AmiBlitz3.ab2@17985>    BSR.w JL_0_B480
0002D8A4 <AmiBlitz3.ab2@17986> BRA.w JL_0_B3DC
0002D8A6 <AmiBlitz3.ab2@17989>   MOVE.l (A7)+,D3
0002D8AA <AmiBlitz3.ab2@17990> BRA.w JL_0_B2D4
0002D8AE <AmiBlitz3.ab2@17993>   BSR.w get1bytemain
0002D8B2 <AmiBlitz3.ab2@17994>   CMP.w #$2B,D0
0002D8B6 <AmiBlitz3.ab2@17995>    BEQ.w JL_0_B30E
0002D8BA <AmiBlitz3.ab2@17996>   CMP.w #$2D,D0
0002D8BE <AmiBlitz3.ab2@17997>    BNE.w JL_0_B312
0002D8C2 <AmiBlitz3.ab2@17998>    BSR.w get1bytemain
0002D8C6 <AmiBlitz3.ab2@17999>    BSR.w getsign
0002D8C8 <AmiBlitz3.ab2@18000>   MOVE.l D3,D0
0002D8CC <AmiBlitz3.ab2@18001>   fdiv.x fp1,fp0
0002D8CE <AmiBlitz3.ab2@18002>   MOVE.l D4,D1
0002D8D2 <AmiBlitz3.ab2@18003>    JSR -$54(A6)
0002D8D4 <AmiBlitz3.ab2@18004>   MOVE.l D0,D3
0002D8D6 <AmiBlitz3.ab2@18005> RTS
0002D8DA <AmiBlitz3.ab2@18008>   BSR.w get1bytemain
0002D8DE <AmiBlitz3.ab2@18011>   BSR.w getsign
0002D8E2 <AmiBlitz3.ab2@18012>   fmul.x fp1,fp0
0002D8E4 <AmiBlitz3.ab2@18013>   MOVE.l D3,D0
0002D8E6 <AmiBlitz3.ab2@18014>   MOVE.l D4,D1
0002D8EA <AmiBlitz3.ab2@18015>    JSR -$4E(A6)
0002D8EC <AmiBlitz3.ab2@18016>   MOVE.l D0,D3
0002D8EE <AmiBlitz3.ab2@18017> RTS
0002D8F2 <AmiBlitz3.ab2@18020>   BSR.w tstnum
0002D8F6 <AmiBlitz3.ab2@18021>    BNE.w syntaxerr
0002D8F8 <AmiBlitz3.ab2@18022>   MOVE.w D0,D4
0002D8FC <AmiBlitz3.ab2@18023>   SUBI.w #$30,D4
0002D900 <AmiBlitz3.ab2@18024>    BSR.w get1bytemain
0002D904 <AmiBlitz3.ab2@18025>    BSR.w tstnum
0002D908 <AmiBlitz3.ab2@18026>    BNE.w getsign__skip
0002D90C <AmiBlitz3.ab2@18027>   MULU #$A,D4
0002D910 <AmiBlitz3.ab2@18028>   SUBI.w #$30,D0
0002D912 <AmiBlitz3.ab2@18029>   ADD.w D0,D4
0002D916 <AmiBlitz3.ab2@18030>    BSR.w get1bytemain
0002D91A <AmiBlitz3.ab2@18033>   CMP.w #$12,D4
0002D91E <AmiBlitz3.ab2@18034>    BHI.w overerr
0002D920 <AmiBlitz3.ab2@18035>   LSL.w #3,D4
0002D926 <AmiBlitz3.ab2@18036>   LEA fputab,a0
0002D928 <AmiBlitz3.ab2@18037>   ADD.l d4,a0
0002D92E <AmiBlitz3.ab2@18038>   fmove.d 0(a0),fp1
0002D930 <AmiBlitz3.ab2@18039>   LSR.w #1,d4
0002D934 <AmiBlitz3.ab2@18040>   MOVE.l facts(PC,D4.W),D4
0002D936 <AmiBlitz3.ab2@18041> RTS
0002D97E <AmiBlitz3.ab2@18045>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002D982 <AmiBlitz3.ab2@18050>   Dc.l $80000041
0002D986 <AmiBlitz3.ab2@18051>   Dc.l $A0000044
0002D98A <AmiBlitz3.ab2@18052>   Dc.l $C8000047
0002D98E <AmiBlitz3.ab2@18053>   Dc.l $FA00004A
0002D992 <AmiBlitz3.ab2@18054>   Dc.l $9C40004E
0002D996 <AmiBlitz3.ab2@18055>   Dc.l $C3500051
0002D99A <AmiBlitz3.ab2@18056>   Dc.l $F4240054
0002D99E <AmiBlitz3.ab2@18057>   Dc.l $98968058
0002D9A2 <AmiBlitz3.ab2@18058>   Dc.l $BEBC205B
0002D9A6 <AmiBlitz3.ab2@18059>   Dc.l $EE6B285E
0002D9AA <AmiBlitz3.ab2@18060>   Dc.l $9502F962
0002D9AE <AmiBlitz3.ab2@18061>   Dc.l $BA43B765
0002D9B2 <AmiBlitz3.ab2@18062>   Dc.l $E8D4A568
0002D9B6 <AmiBlitz3.ab2@18063>   Dc.l $9184E76C
0002D9BA <AmiBlitz3.ab2@18064>   Dc.l $B5E6A96F
0002D9BE <AmiBlitz3.ab2@18065>   Dc.l $E35F2972
0002D9C2 <AmiBlitz3.ab2@18066>   Dc.l $8E1BCA76
0002D9C6 <AmiBlitz3.ab2@18067>   Dc.l $B1A2BD79
0002D9CA <AmiBlitz3.ab2@18068>   Dc.l $DE0B6C7C
0002D9CC <AmiBlitz3.ab2@18072>   MOVEQ.l #$01,D5
0002D9CE <AmiBlitz3.ab2@18075>   LSL.l #1,D5
0002D9D0 <AmiBlitz3.ab2@18076>   MOVE.l D5,D1
0002D9D2 <AmiBlitz3.ab2@18077>   LSL.l #2,D5
0002D9D4 <AmiBlitz3.ab2@18078>   ADD.l D1,D5                                              ;divisor for frac convert!
0002D9D6 <AmiBlitz3.ab2@18079>   LSL.l #1,D3
0002D9DA <AmiBlitz3.ab2@18080>    BCS.w overerr
0002D9DC <AmiBlitz3.ab2@18081>   MOVE.l D3,D1
0002D9DE <AmiBlitz3.ab2@18082>   LSL.l #1,D3
0002D9E2 <AmiBlitz3.ab2@18083>    BCS.w overerr
0002D9E4 <AmiBlitz3.ab2@18084>   LSL.l #1,D3
0002D9E8 <AmiBlitz3.ab2@18085>    BCS.w overerr
0002D9EA <AmiBlitz3.ab2@18086>   ADD.l D1,D3
0002D9EE <AmiBlitz3.ab2@18087>   SUBI.w #$30,D0
0002D9F0 <AmiBlitz3.ab2@18088>   ADD.l D0,D3
0002DA1C <AmiBlitz3.ab2@18089>    !fget                                                   ;bsr.w get1bytemain
0002DA20 <AmiBlitz3.ab2@18090>    CMP.b #1,d0
0002DA24 <AmiBlitz3.ab2@18091>    BNE 'cm1
0002DA26 <AmiBlitz3.ab2@18092>    SUBQ.l #1,a5
0002DA2A <AmiBlitz3.ab2@18093>    BSR get1bytemain                                        ;??wy not !fget
0002DA2E <AmiBlitz3.ab2@18096>   CMP.b #$7e,d0
0002DA32 <AmiBlitz3.ab2@18097>    BNE 'cm2
0002DA34 <AmiBlitz3.ab2@18098>    SUBQ.l #1,a5
0002DA38 <AmiBlitz3.ab2@18099>    BSR get1bytemain
0002DA3A <AmiBlitz3.ab2@18102>   TST.b d0
0002DA3E <AmiBlitz3.ab2@18103>    BPL 'l10
0002DA40 <AmiBlitz3.ab2@18104>    LSL.w #8,d0
0002DA42 <AmiBlitz3.ab2@18105>    MOVE.b (a5)+,d0
0002DA48 <AmiBlitz3.ab2@18106>    MOVE.w d0,lastchar
0002DA5A <AmiBlitz3.ab2@18109>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002DA5E <AmiBlitz3.ab2@18110>    BEQ.w atoi__loop
0002DA60 <AmiBlitz3.ab2@18111> RTS
0002DA62 <AmiBlitz3.ab2@18114> dfetch:  Ds.w 1                                            ;fetching data?
0002DA66 <AmiBlitz3.ab2@18118>   MOVE.w dfetch(PC),D1
0002DA6A <AmiBlitz3.ab2@18119>    BEQ.w JL_0_B3EC
0002DA70 <AmiBlitz3.ab2@18120>   CLR.w dfetch
0002DA72 <AmiBlitz3.ab2@18121> RTS
0002DA78 <AmiBlitz3.ab2@18124>   MOVE.b d2,isconstantvalue
0002DA7E <AmiBlitz3.ab2@18125>   MOVE.l d0,lastconstantvalue
0002DA84 <AmiBlitz3.ab2@18126>   MOVE.w d2,imm_size
0002DA8E <AmiBlitz3.ab2@18127>   MOVE.w regnum,imm_reg
0002DA98 <AmiBlitz3.ab2@18128>   MOVE.l destpointer,imm_addr                           ; long
0002DA9C <AmiBlitz3.ab2@18129>   CMP.w #$3,D2
0002DAA0 <AmiBlitz3.ab2@18130>   BEQ.w JL_0_B434
0002DAA4 <AmiBlitz3.ab2@18131>   CMP.w #$5,D2                                          ;float
0002DAA8 <AmiBlitz3.ab2@18132>   BEQ.w JL_0_B434
0002DAAC <AmiBlitz3.ab2@18133>   CMP.w #$1,D2
0002DAB0 <AmiBlitz3.ab2@18134>   BEQ.w JL_0_B418
0002DAB4 <AmiBlitz3.ab2@18135>   CMP.w #$2,D2
0002DAB8 <AmiBlitz3.ab2@18136>   BEQ.w JL_0_B418
0002DABC <AmiBlitz3.ab2@18137>   CMP.w #$4,D2
0002DAC0 <AmiBlitz3.ab2@18138>   BEQ.w JL_0_B434
0002DAC4 <AmiBlitz3.ab2@18140> BRA.w mismatcherr
0002DACA <AmiBlitz3.ab2@18143>   MOVE.w regnum,D1
0002DACC <AmiBlitz3.ab2@18144>   LSL.w #8,D1
0002DACE <AmiBlitz3.ab2@18145>   LSL.w #1,D1
0002DAD2 <AmiBlitz3.ab2@18146>   ORI.w #$303C,D1
0002DAD6 <AmiBlitz3.ab2@18147>    BSR.w writeword
0002DAD8 <AmiBlitz3.ab2@18148>   MOVE.w D0,D1
0002DADC <AmiBlitz3.ab2@18149>    BSR.w writeword
0002DAE0 <AmiBlitz3.ab2@18150> BRA.w reget
0002DAE2 <AmiBlitz3.ab2@18153>   MOVEQ #0,d1
0002DAE8 <AmiBlitz3.ab2@18154>   MOVE.w regnum,D1
0002DAEE <AmiBlitz3.ab2@18155>   TST.b fpu
0002DAF2 <AmiBlitz3.ab2@18156>   BEQ 'f1
0002DAF6 <AmiBlitz3.ab2@18157>   CMP.w #5,d2
0002DAFA <AmiBlitz3.ab2@18158>   BEQ 'l10
0002DAFE <AmiBlitz3.ab2@18159> BRA 'f2
0002DB04 <AmiBlitz3.ab2@18162>   TST.b iee
0002DB08 <AmiBlitz3.ab2@18163>   BNE 'l10
0002DB0A <AmiBlitz3.ab2@18166>   LSL.w #8,D1
0002DB0C <AmiBlitz3.ab2@18167>   LSL.w #1,D1
0002DB10 <AmiBlitz3.ab2@18168>   ORI.w #$203C,D1
0002DB14 <AmiBlitz3.ab2@18169>    BSR.w writeword
0002DB16 <AmiBlitz3.ab2@18170>   MOVE.l D0,D1
0002DB1A <AmiBlitz3.ab2@18171>    BSR.w writelong
0002DB1E <AmiBlitz3.ab2@18172> BRA.w reget
0002DB20 <AmiBlitz3.ab2@18175>   MOVEQ #5,d2
0002DB22 <AmiBlitz3.ab2@18176>   ASL.l #7,d1
0002DB24 <AmiBlitz3.ab2@18177>   SUBQ.l #8,a7
0002DB2A <AmiBlitz3.ab2@18182>       OR.l #$f23c4400,d1                                   ;fmove.s
0002DB30 <AmiBlitz3.ab2@18183>        fmove.s fp0,0(a7)
0002DB34 <AmiBlitz3.ab2@18185>   BSR writelong
0002DB36 <AmiBlitz3.ab2@18186>   MOVE.l (a7)+,d1
0002DB3A <AmiBlitz3.ab2@18187>   BSR writelong
0002DB3C <AmiBlitz3.ab2@18188>   MOVE.l (a7)+,d1
0002DB40 <AmiBlitz3.ab2@18192> BRA.w reget
0002DB42 <AmiBlitz3.ab2@18198>  MOVE.l D3,D0
0002DB44 <AmiBlitz3.ab2@18199>   TST.w D6
0002DB48 <AmiBlitz3.ab2@18200>    BEQ.w JL_0_B46C
0002DB4E <AmiBlitz3.ab2@18201>   MOVEA.l _mathffpbase,A6
0002DB52 <AmiBlitz3.ab2@18202>    JSR -$1E(A6)
0002DB56 <AmiBlitz3.ab2@18203>    BVC.w JL_0_B46C
0002DB58 <AmiBlitz3.ab2@18204>   ADDQ.w #4,A7
0002DB5C <AmiBlitz3.ab2@18205> BRA.w JL_0_B5A0
0002DB5E <AmiBlitz3.ab2@18208> RTS
0002DB60 <AmiBlitz3.ab2@18212>   MOVEQ.l #$00,D6
0002DB64 <AmiBlitz3.ab2@18213>    fmove.l d3,fp0
0002DB68 <AmiBlitz3.ab2@18216>   BSR.w JL_0_B480
0002DB6C <AmiBlitz3.ab2@18217> BRA.w JL_0_B3DC
0002DB6E <AmiBlitz3.ab2@18220>   MOVE.w D2,-(A7)
0002DB72 <AmiBlitz3.ab2@18221>    BSR.w JL_0_BF6A
0002DB74 <AmiBlitz3.ab2@18222>   MOVE.w (A7)+,D2
0002DB76 <AmiBlitz3.ab2@18225>   TST.w D2
0002DB7A <AmiBlitz3.ab2@18226>    BNE.w JL_0_B498
0002DB7C <AmiBlitz3.ab2@18227>   TST.w D6
0002DB80 <AmiBlitz3.ab2@18228>    BEQ.w JL_0_B492
0002DB82 <AmiBlitz3.ab2@18229>   MOVEQ.l #$04,D2
0002DB86 <AmiBlitz3.ab2@18230> BRA.w JL_0_B510
0002DB88 <AmiBlitz3.ab2@18233>   MOVEQ.l #$02,D2
0002DB8C <AmiBlitz3.ab2@18234> BRA.w JL_0_B4C4
0002DB90 <AmiBlitz3.ab2@18237>   CMP.w #$1,D2
0002DB94 <AmiBlitz3.ab2@18238>    BEQ.w JL_0_B4C4
0002DB98 <AmiBlitz3.ab2@18239>   CMP.w #$2,D2
0002DB9C <AmiBlitz3.ab2@18240>    BEQ.w JL_0_B4F8
0002DBA0 <AmiBlitz3.ab2@18241>   CMP.w #$3,D2
0002DBA4 <AmiBlitz3.ab2@18242>    BEQ.w JL_0_B57A
0002DBA8 <AmiBlitz3.ab2@18243>   CMP.w #$4,D2
0002DBAC <AmiBlitz3.ab2@18244>    BEQ.w JL_0_B506
0002DBB0 <AmiBlitz3.ab2@18245>   CMP.w #$5,D2
0002DBB4 <AmiBlitz3.ab2@18246>    BEQ.w JL_0_B586
0002DBB8 <AmiBlitz3.ab2@18247> BRA.w mismatcherr
0002DBBC <AmiBlitz3.ab2@18250>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002DBC2 <AmiBlitz3.ab2@18251>   CMP.l #$7f,D0
0002DBC6 <AmiBlitz3.ab2@18252>    BGT.w JL_0_B4DC
0002DBCC <AmiBlitz3.ab2@18253>   CMP.l #$FFFFFF80,D0
0002DBD0 <AmiBlitz3.ab2@18254>    BGE.w JL_0_B59E
0002DBD2 <AmiBlitz3.ab2@18257>   MOVEQ.l #$02,D2                                          ;was 2 before
0002DBD8 <AmiBlitz3.ab2@18258>   CMP.l #$7fff,D0
0002DBDC <AmiBlitz3.ab2@18259>    BGT.w JL_0_B4F2
0002DBE2 <AmiBlitz3.ab2@18260>   CMP.l #$FFFF8000,D0
0002DBE6 <AmiBlitz3.ab2@18261>    BGE.w JL_0_B59E
0002DBE8 <AmiBlitz3.ab2@18264>   MOVEQ.l #$03,D2
0002DBEC <AmiBlitz3.ab2@18265> BRA.w JL_0_B59E
0002DBEE <AmiBlitz3.ab2@18291>   TST.w D6
0002DBF2 <AmiBlitz3.ab2@18292>    BNE.w JL_0_B510
0002DBF6 <AmiBlitz3.ab2@18293>    BSR.w JL_0_B450
0002DBFA <AmiBlitz3.ab2@18294> BRA.w JL_0_B4DC
0002DBFE <AmiBlitz3.ab2@18297>   BSR.w JL_0_B450
0002DC00 <AmiBlitz3.ab2@18298>   TST.w D6
0002DC04 <AmiBlitz3.ab2@18299>   BEQ.w JL_0_B560
0002DC0A <AmiBlitz3.ab2@18302>   CMP.l #MaxWordSgnd,D0
0002DC0E <AmiBlitz3.ab2@18303>    BGT.w JL_0_B5A0
0002DC14 <AmiBlitz3.ab2@18304>   CMP.l #$FFFF8000,D0
0002DC18 <AmiBlitz3.ab2@18305>    BLT.w JL_0_B5A0
0002DC1A <AmiBlitz3.ab2@18306>   MOVE.w D0,-(A7)
0002DC1E <AmiBlitz3.ab2@18307>    JSR -$24(A6)
0002DC20 <AmiBlitz3.ab2@18308>   MOVE.l D0,D1
0002DC22 <AmiBlitz3.ab2@18309>   MOVE.l D3,D0
0002DC26 <AmiBlitz3.ab2@18310>    JSR -$48(A6)
0002DC2C <AmiBlitz3.ab2@18311>   MOVE.l #$80000051,D1
0002DC30 <AmiBlitz3.ab2@18312>    JSR -$4E(A6)
0002DC34 <AmiBlitz3.ab2@18313>    JSR -$1E(A6)
0002DC38 <AmiBlitz3.ab2@18314>    BEQ.w JL_0_B55A
0002DC3E <AmiBlitz3.ab2@18315>   CMP.l #$10000,D0
0002DC42 <AmiBlitz3.ab2@18316>    BCC.w JL_0_B55A
0002DC44 <AmiBlitz3.ab2@18317>   MOVE.w D0,D1
0002DC46 <AmiBlitz3.ab2@18318>   MOVE.w (A7)+,D0
0002DC48 <AmiBlitz3.ab2@18319>   SWAP D0
0002DC4A <AmiBlitz3.ab2@18320>   MOVE.w D1,D0
0002DC4E <AmiBlitz3.ab2@18321> BRA.w JL_0_B59E
0002DC50 <AmiBlitz3.ab2@18324>   ADDQ.w #2,A7
0002DC54 <AmiBlitz3.ab2@18325> BRA.w JL_0_B5A0
0002DC5A <AmiBlitz3.ab2@18328>   CMP.l #MaxWordSgnd,D0
0002DC5E <AmiBlitz3.ab2@18329>    BGT.w JL_0_B4F2
0002DC64 <AmiBlitz3.ab2@18330>   CMP.l #$FFFF8000,D0
0002DC68 <AmiBlitz3.ab2@18331>    BLT.w JL_0_B4F2
0002DC6A <AmiBlitz3.ab2@18332>   SWAP D0
0002DC6E <AmiBlitz3.ab2@18333> BRA.w JL_0_B59E
0002DC70 <AmiBlitz3.ab2@18336>   TST.w D6
0002DC74 <AmiBlitz3.ab2@18337>   BNE.w JL_0_B5A0
0002DC76 <AmiBlitz3.ab2@18338>   MOVE.l D3,D0
0002DC7A <AmiBlitz3.ab2@18339> BRA.w JL_0_B59E
0002DC7C <AmiBlitz3.ab2@18342>   TST.w D6
0002DC80 <AmiBlitz3.ab2@18343>   BNE.w JL_0_B5A0
0002DC82 <AmiBlitz3.ab2@18344>   MOVE.l D3,D0
0002DC88 <AmiBlitz3.ab2@18345>   MOVEA.l _mathffpbase,A6
0002DC8C <AmiBlitz3.ab2@18346>   JSR -$24(A6)
0002DC8E <AmiBlitz3.ab2@18347>   MOVE.l D0,D3
0002DC92 <AmiBlitz3.ab2@18348> BRA.w JL_0_B5A0
0002DC94 <AmiBlitz3.ab2@18351> RTS
0002DC96 <AmiBlitz3.ab2@18354>   MOVEQ.l #$05,D2
0002DC98 <AmiBlitz3.ab2@18355>   MOVE.l D3,D0
0002DC9A <AmiBlitz3.ab2@18356> RTS
0002DC9E <AmiBlitz3.ab2@18360>             Ds.l 1                                         ;??Looks like unused data??
0002DCA2 <AmiBlitz3.ab2@18361> pushpc:     Ds.l 1
0002DCA6 <AmiBlitz3.ab2@18362> pushoff:    Ds.l 1
0002DCAA <AmiBlitz3.ab2@18363> pushdooff:  Ds.l 1
0002DCAC <AmiBlitz3.ab2@18364> pushclen:   Ds.w 1
0002DCB0 <AmiBlitz3.ab2@18365> pushat:     Ds.l 1
0002DCBA <AmiBlitz3.ab2@18369>   MOVE.l destpointer,pushpc
0002DCC4 <AmiBlitz3.ab2@18370>   MOVE.l hunkoffsetbase,pushoff
0002DCC6 <AmiBlitz3.ab2@18371> RTS
0002DCCA <AmiBlitz3.ab2@18375>   MOVEM.l D0-D1/A0-A1,-(A7)
0002DCD0 <AmiBlitz3.ab2@18376>   MOVE.l destpointer,D0
0002DCD4 <AmiBlitz3.ab2@18377>   MOVE.l pushpc(PC),D1
0002DCDA <AmiBlitz3.ab2@18378>   MOVE.l D1,destpointer
0002DCDC <AmiBlitz3.ab2@18379>   SUB.l D1,D0
0002DCE2 <AmiBlitz3.ab2@18380>   MOVE.w D0,pushclen
0002DCE6 <AmiBlitz3.ab2@18381>    BEQ.w JL_0_B636
0002DCEC <AmiBlitz3.ab2@18382>   MOVE.w dontwrite,D1
0002DCF0 <AmiBlitz3.ab2@18383>    BNE.w JL_0_B636
0002DCF8 <AmiBlitz3.ab2@18384>    CMP.w #1000,pushclen
0002DCFC <AmiBlitz3.ab2@18385>    BGE conmemerr
0002DD02 <AmiBlitz3.ab2@18386>    MOVE.l pushat,d0
0002DD06 <AmiBlitz3.ab2@18387>    BNE 'nomem
0002DD0C <AmiBlitz3.ab2@18388>    MOVE.l #1024,d0
0002DD0E <AmiBlitz3.ab2@18389>   MOVEQ.l #$01,D1
0002DD14 <AmiBlitz3.ab2@18390>   MOVEA.l _execbase,A6
0002DD1A <AmiBlitz3.ab2@18391>   MOVE.l mempool,a0
0002DD1E <AmiBlitz3.ab2@18392>   JSR _AllocPooled(a6)
0002DD24 <AmiBlitz3.ab2@18394>   MOVE.l D0,pushat
0002DD26 <AmiBlitz3.ab2@18397>   MOVEA.l D0,A0
0002DD2C <AmiBlitz3.ab2@18398>   MOVEA.l pushpc,A1
0002DD32 <AmiBlitz3.ab2@18399>   MOVE.l A1,destpointer
0002DD38 <AmiBlitz3.ab2@18400>   MOVE.w pushclen,D0
0002DD3A <AmiBlitz3.ab2@18401>   LSR.w #1,D0
0002DD3C <AmiBlitz3.ab2@18402>   SUBQ.w #1,D0
0002DD3E <AmiBlitz3.ab2@18405>     MOVE.w (A1)+,(A0)+
0002DD42 <AmiBlitz3.ab2@18406>   DBF D0,JL_0_B626
0002DD4C <AmiBlitz3.ab2@18408>    MOVE.l hunkoffsetbase,pushdooff
0002DD50 <AmiBlitz3.ab2@18411>   MOVEM.l (A7)+,D0-D1/A0-A1
0002DD52 <AmiBlitz3.ab2@18412> RTS
0002DD56 <AmiBlitz3.ab2@18416>   MOVEM.l D0-D1/A0-A1,-(A7)
0002DD58 <AmiBlitz3.ab2@18417>   MOVEQ.l #$00,D0
0002DD5E <AmiBlitz3.ab2@18418>   MOVE.w pushclen,D0
0002DD62 <AmiBlitz3.ab2@18419>    BEQ.w JL_0_B6D8
0002DD68 <AmiBlitz3.ab2@18420>   MOVE.l destpointer,D1
0002DD6E <AmiBlitz3.ab2@18421>   ADD.l D0,destpointer
0002DD74 <AmiBlitz3.ab2@18422>   TST.w dontwrite
0002DD78 <AmiBlitz3.ab2@18423>    BNE.w JL_0_B6D8
0002DD7A <AmiBlitz3.ab2@18424>   LSR.w #1,D0
0002DD7C <AmiBlitz3.ab2@18425>   SUBQ.w #1,D0
0002DD7E <AmiBlitz3.ab2@18426>   MOVEA.l D1,A1
0002DD84 <AmiBlitz3.ab2@18427>   MOVEA.l pushat,A0
0002DD8A <AmiBlitz3.ab2@18430>     CMPA.l destbufferend,A1
0002DD8E <AmiBlitz3.ab2@18431>     BCS.w JL_0_B684
0002DD96 <AmiBlitz3.ab2@18433>     MOVE.w #$FFFF,dontwrite
0002DD9A <AmiBlitz3.ab2@18434>   BRA.w JL_0_B6D8
0002DD9C <AmiBlitz3.ab2@18437>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002DDA0 <AmiBlitz3.ab2@18438>   DBF D0,JL_0_B66E
0002DDA6 <AmiBlitz3.ab2@18440>   SUB.l pushpc,D1
0002DDAA <AmiBlitz3.ab2@18441>   BEQ.w JL_0_B6C2
0002DDB0 <AmiBlitz3.ab2@18442>   MOVEA.l pushdooff,A0
0002DDB6 <AmiBlitz3.ab2@18445>   CMPA.l pushoff,A0
0002DDBA <AmiBlitz3.ab2@18446>   BEQ.w JL_0_B6C2
0002DDBE <AmiBlitz3.ab2@18447>   MOVEA.l $4(A0),A1
0002DDC4 <AmiBlitz3.ab2@18448>   ADDA.l destbufferstart,A1
0002DDCA <AmiBlitz3.ab2@18449>   CMPA.l destbufferend,A1
0002DDCE <AmiBlitz3.ab2@18450>   BCC.w JL_0_B6BC
0002DDD2 <AmiBlitz3.ab2@18451>   ADD.l D1,$4(A0)
0002DDD4 <AmiBlitz3.ab2@18454>   MOVEA.l (A0),A0
0002DDD8 <AmiBlitz3.ab2@18455> BRA.w JL_0_B69A
0002DDDE <AmiBlitz3.ab2@18458>   MOVEA.l pushat,A1
0002DDE0 <AmiBlitz3.ab2@18459>   MOVEQ.l #$00,D0
0002DDE6 <AmiBlitz3.ab2@18460>   MOVE.w pushclen,D0
0002DDEC <AmiBlitz3.ab2@18461>   MOVEA.l _execbase,A6
0002DDF2 <AmiBlitz3.ab2@18462>   MOVE.l mempool,a0
0002DDF6 <AmiBlitz3.ab2@18466>   MOVEM.l (A7)+,D0-D1/A0-A1
0002DDF8 <AmiBlitz3.ab2@18467> RTS
0002DDFA <AmiBlitz3.ab2@18470>   MOVE.l D1,-(A7)                                          ;array mul
0002DDFC <AmiBlitz3.ab2@18471>   MOVEQ.l #$00,D2
0002DDFE <AmiBlitz3.ab2@18472>   MOVEQ.l #$0F,D3
0002DE00 <AmiBlitz3.ab2@18475>     LSL.w #1,D1
0002DE04 <AmiBlitz3.ab2@18476>     BCC.w JL_0_B6EE
0002DE06 <AmiBlitz3.ab2@18477>     ADDQ.w #1,D2
0002DE08 <AmiBlitz3.ab2@18478>     MOVE.w D3,D4
0002DE0C <AmiBlitz3.ab2@18481>   DBF D3,JL_0_B6E4
0002DE0E <AmiBlitz3.ab2@18483>   SUBQ.w #1,D2
0002DE12 <AmiBlitz3.ab2@18484>    BNE.w JL_0_B726
0002DE14 <AmiBlitz3.ab2@18485>   ADDQ.w #4,A7
0002DE16 <AmiBlitz3.ab2@18486>   MOVE.w D4,D1
0002DE1A <AmiBlitz3.ab2@18487>    BEQ.w JL_0_B724
0002DE1E <AmiBlitz3.ab2@18488>   CMP.w #$8,D1
0002DE22 <AmiBlitz3.ab2@18489>    BCS.w JL_0_B712
0002DE26 <AmiBlitz3.ab2@18490>   SUBI.w #$8,D1
0002DE2A <AmiBlitz3.ab2@18491>    BSR.w JL_0_B712
0002DE2C <AmiBlitz3.ab2@18492>   MOVEQ.l #$00,D1
0002DE2E <AmiBlitz3.ab2@18495>   LSL.w #8,D1
0002DE30 <AmiBlitz3.ab2@18496>   LSL.w #1,D1
0002DE34 <AmiBlitz3.ab2@18497>   ORI.w #$E188,D1
0002DE3A <AmiBlitz3.ab2@18498>   OR.w regnum,D1
0002DE3E <AmiBlitz3.ab2@18499> BRA.w writeword
0002DE40 <AmiBlitz3.ab2@18502> RTS
0002DE42 <AmiBlitz3.ab2@18505>   MOVEQ #0,d1
0002DE48 <AmiBlitz3.ab2@18506>   MOVE.w regnum,D1
0002DE4A <AmiBlitz3.ab2@18507>   LSL.l #8,D1
0002DE4C <AmiBlitz3.ab2@18509>   LSL.l #4,d1
0002DE52 <AmiBlitz3.ab2@18511>   OR.l #$4c3c0000,d1
0002DE58 <AmiBlitz3.ab2@18512>   OR.w regnum,d1
0002DE5C <AmiBlitz3.ab2@18513>   BSR.w writelong
0002DE5E <AmiBlitz3.ab2@18514>   MOVE.l (A7)+,D1
0002DE62 <AmiBlitz3.ab2@18516> BRA writelong
0002DE68 <AmiBlitz3.ab2@18519>   MOVE.l destpointer,-(A7)
0002DE6A <AmiBlitz3.ab2@18520>   MOVEQ.l #-$01,D7
0002DE6E <AmiBlitz3.ab2@18523>     BSR.w findhilib
0002DE72 <AmiBlitz3.ab2@18524>      BEQ.w JL_0_B8A4
0002DE76 <AmiBlitz3.ab2@18525>     TST.w $C(A2)
0002DE7A <AmiBlitz3.ab2@18526>      BPL.w JL_0_B746
0002DE7E <AmiBlitz3.ab2@18528>     MOVE.l $16(A2),D1
0002DE82 <AmiBlitz3.ab2@18529>     BEQ.w JL_0_B746
0002DE86 <AmiBlitz3.ab2@18531>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002DE8A <AmiBlitz3.ab2@18532>     CMP.w #-$2,D1
0002DE8E <AmiBlitz3.ab2@18533>      BNE.w JL_0_B772
0002DE92 <AmiBlitz3.ab2@18534>     BSR.w makevsize
0002DE96 <AmiBlitz3.ab2@18535> BRA.w JL_0_B7FE
0002DE9A <AmiBlitz3.ab2@18538>     CMP.w #-$5C4,D1
0002DE9E <AmiBlitz3.ab2@18539>      BNE.w JL_0_B790
0002DEA2 <AmiBlitz3.ab2@18540>     MOVE.w #$7000,D1
0002DEAA <AmiBlitz3.ab2@18541>     BTST #$7,autorun
0002DEAC <AmiBlitz3.ab2@18542>     SNE D1
0002DEB0 <AmiBlitz3.ab2@18543>     BSR.w writeword
0002DEB4 <AmiBlitz3.ab2@18544> BRA.w JL_0_B7FE
0002DEB8 <AmiBlitz3.ab2@18547>     CMP.w #-$12D,D1
0002DEBC <AmiBlitz3.ab2@18548>      BNE.w JL_0_B7A0
0002DEC0 <AmiBlitz3.ab2@18549>     BSR.w makessize
0002DEC4 <AmiBlitz3.ab2@18550> BRA.w JL_0_B7FE
0002DEC8 <AmiBlitz3.ab2@18553>     CMP.w #-$1F5,D1
0002DECC <AmiBlitz3.ab2@18554>      BNE.w JL_0_B7C2
0002DED0 <AmiBlitz3.ab2@18555>     MOVE.w #$203C,D1
0002DED4 <AmiBlitz3.ab2@18556>     BSR.w writeword
0002DED8 <AmiBlitz3.ab2@18557>     BSR.w addoff
0002DEDE <AmiBlitz3.ab2@18558>     MOVE.l endop,D1
0002DEE2 <AmiBlitz3.ab2@18559>     BSR.w writelong
0002DEE6 <AmiBlitz3.ab2@18560> BRA.w JL_0_B7FE
0002DEEA <AmiBlitz3.ab2@18563>     CMP.w #-$3E9,D1
0002DEEE <AmiBlitz3.ab2@18564>      BNE.w JL_0_B7E4
0002DEF2 <AmiBlitz3.ab2@18565>     MOVE.w #$203C,D1
0002DEF6 <AmiBlitz3.ab2@18566>     BSR.w writeword
0002DEFA <AmiBlitz3.ab2@18567>     BSR.w addoff
0002DF00 <AmiBlitz3.ab2@18568>     MOVE.l data2at,D1
0002DF04 <AmiBlitz3.ab2@18569>     BSR.w writelong
0002DF08 <AmiBlitz3.ab2@18570> BRA.w JL_0_B7FE
0002DF0C <AmiBlitz3.ab2@18573>     CMP.w #$1,D1
0002DF10 <AmiBlitz3.ab2@18574>      BNE.w JL_0_B7FE
0002DF14 <AmiBlitz3.ab2@18575>     MOVE.w #$203C,D1
0002DF18 <AmiBlitz3.ab2@18576>     BSR.w writeword
0002DF1E <AmiBlitz3.ab2@18577>     MOVE.l ptr_seg_debugger,D1
0002DF22 <AmiBlitz3.ab2@18578>     BSR.w writelong
0002DF26 <AmiBlitz3.ab2@18581>     MOVE.l $16(A2),D1
0002DF2E <AmiBlitz3.ab2@18582>     MOVE.w #$FFFF,lasta6
0002DF32 <AmiBlitz3.ab2@18583>     BSR.w Amakelibsub
0002DF38 <AmiBlitz3.ab2@18584>     CMPI.w #$FFFE,$4(A2)
0002DF3C <AmiBlitz3.ab2@18585>      BNE.w JL_0_B83A
0002DF42 <AmiBlitz3.ab2@18586>     MOVE.l intdata1,D1
0002DF46 <AmiBlitz3.ab2@18587>      BEQ.w JL_0_B83A
0002DF4C <AmiBlitz3.ab2@18588>     MOVE.w putidata1,D1
0002DF50 <AmiBlitz3.ab2@18589>     BSR.w writeword
0002DF54 <AmiBlitz3.ab2@18590>     BSR.w addoff
0002DF5A <AmiBlitz3.ab2@18591>     MOVE.l intdata1,D1
0002DF5E <AmiBlitz3.ab2@18592>     BSR.w writelong
0002DF62 <AmiBlitz3.ab2@18595>     MOVE.w #$2B40,D1
0002DF66 <AmiBlitz3.ab2@18596>     TST.w $1A(A2)
0002DF6A <AmiBlitz3.ab2@18597>      BEQ.w JL_0_B746
0002DF6E <AmiBlitz3.ab2@18598>      BPL.w JL_0_B84E
0002DF72 <AmiBlitz3.ab2@18599>     MOVE.w #$3B40,D1
0002DF76 <AmiBlitz3.ab2@18602>     BSR.w writeword
0002DF7A <AmiBlitz3.ab2@18603>     MOVE.w $A(A2),D1
0002DF7E <AmiBlitz3.ab2@18604>      BSR.w writeword
0002DF84 <AmiBlitz3.ab2@18605>     CMPI.w #$FFFA,$4(A2)
0002DF88 <AmiBlitz3.ab2@18606>      BNE.w JL_0_B746
0002DF8A <AmiBlitz3.ab2@18607>     MOVE.w D7,-(A7)
0002DF90 <AmiBlitz3.ab2@18608>     MOVE.w numstatic,D4
0002DF94 <AmiBlitz3.ab2@18609>      BEQ.w JL_0_B882
0002DF9A <AmiBlitz3.ab2@18610>     MOVE.l staticdata,D3
0002DFA0 <AmiBlitz3.ab2@18611>      JSR datastart
0002DFA4 <AmiBlitz3.ab2@18612>     MOVE.w #$C500,D1
0002DFA8 <AmiBlitz3.ab2@18613>      BSR.w tokejsr2
0002DFAE <AmiBlitz3.ab2@18616>     MOVE.w maxsused,D4
0002DFB2 <AmiBlitz3.ab2@18617>      BEQ.w JL_0_B89E
0002DFB8 <AmiBlitz3.ab2@18618>     MOVE.l maxsat,D3
0002DFBE <AmiBlitz3.ab2@18619>      JSR datastart
0002DFC2 <AmiBlitz3.ab2@18620>     MOVE.w #$CF00,D1
0002DFC6 <AmiBlitz3.ab2@18621>      BSR.w tokejsr2
0002DFC8 <AmiBlitz3.ab2@18624>     MOVE.w (A7)+,D7
0002DFCC <AmiBlitz3.ab2@18625> BRA.w JL_0_B746
0002DFD2 <AmiBlitz3.ab2@18628>   MOVE.l destpointer,D1
0002DFD4 <AmiBlitz3.ab2@18629>   CMP.l (A7),D1
0002DFD8 <AmiBlitz3.ab2@18630>    BNE.w JL_0_B8BC
0002DFE0 <AmiBlitz3.ab2@18631>   MOVE.w #$0008,noinits+2
0002DFE4 <AmiBlitz3.ab2@18632> BRA.w JL_0_B8E6
0002DFEA <AmiBlitz3.ab2@18635>   CLR.w noinits+2
0002DFF0 <AmiBlitz3.ab2@18636>   MOVE.w dontwrite,D1
0002DFF4 <AmiBlitz3.ab2@18637>    BNE.w JL_0_B8DE
0002DFFA <AmiBlitz3.ab2@18638>   TST.l newinitaddr
0002DFFE <AmiBlitz3.ab2@18639>    BEQ 'l10
0002E004 <AmiBlitz3.ab2@18640>   MOVE.l newinitaddr,D2
0002E00A <AmiBlitz3.ab2@18641>   SUB.l destbufferstart,D2
0002E00C <AmiBlitz3.ab2@18642>   ADDQ.l #2,d2
0002E012 <AmiBlitz3.ab2@18643>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002E016 <AmiBlitz3.ab2@18645>   MOVE.w #$4EB9,(A0)+
0002E018 <AmiBlitz3.ab2@18646>   MOVE.l (A7),(A0)+
0002E01C <AmiBlitz3.ab2@18648> BRA 'l20
0002E022 <AmiBlitz3.ab2@18651>   MOVEA.l destbufferstart,A0                               ;write initcode
0002E028 <AmiBlitz3.ab2@18652>   TST.b saved0
0002E02C <AmiBlitz3.ab2@18653>   BEQ 'l1
0002E030 <AmiBlitz3.ab2@18654>   MOVE.w #$23c0,(a0)+
0002E032 <AmiBlitz3.ab2@18655>   MOVE.l a0,a1
0002E034 <AmiBlitz3.ab2@18656>   ADDQ.l #6,a1
0002E036 <AmiBlitz3.ab2@18657>   MOVE.l a1,(a0)+
0002E038 <AmiBlitz3.ab2@18658>   MOVEQ.l #$02,D2
0002E03C <AmiBlitz3.ab2@18659>   BSR.w addhunkoffset
0002E040 <AmiBlitz3.ab2@18660>   MOVE.w #$6004,(a0)+
0002E046 <AmiBlitz3.ab2@18661>   MOVE.l #$4e714e71,(a0)+
0002E04A <AmiBlitz3.ab2@18664>   MOVE.w #$4EB9,(A0)+
0002E04C <AmiBlitz3.ab2@18665>   MOVE.l (A7),(A0)+
0002E04E <AmiBlitz3.ab2@18666>   MOVEQ #2,d2
0002E054 <AmiBlitz3.ab2@18667>   TST.b saved0
0002E058 <AmiBlitz3.ab2@18668>   BEQ 'l20
0002E05A <AmiBlitz3.ab2@18669>   MOVEQ.l #14,D2
0002E05E <AmiBlitz3.ab2@18672>   BSR.w addhunkoffset
0002E062 <AmiBlitz3.ab2@18673>   MOVE.w #$2039,(a0)+
0002E064 <AmiBlitz3.ab2@18674>   MOVE.l a1,(a0)+
0002E066 <AmiBlitz3.ab2@18675>   MOVEQ.l #20,d2
0002E06A <AmiBlitz3.ab2@18678>   BSR.w addhunkoffset
0002E06E <AmiBlitz3.ab2@18681>   MOVE.w #$4E75,D1
0002E072 <AmiBlitz3.ab2@18682>   BSR.w writeword
0002E074 <AmiBlitz3.ab2@18685>   ADDQ.w #4,A7
0002E076 <AmiBlitz3.ab2@18686> RTS
0002E07A <AmiBlitz3.ab2@18691>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002E080 <AmiBlitz3.ab2@18693>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002E086 <AmiBlitz3.ab2@18695>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002E08C <AmiBlitz3.ab2@18700>   MOVE.l stringbuffer,D1
0002E090 <AmiBlitz3.ab2@18701> BRA.w makesize
0002E092 <AmiBlitz3.ab2@18704>   MOVEQ.l #$00,D1
0002E098 <AmiBlitz3.ab2@18705>   MOVE.w globalvarpointer,D1
0002E09C <AmiBlitz3.ab2@18706>   SUBI.w #$8000,D1
0002E0A0 <AmiBlitz3.ab2@18707>   BNE.w makesize
0002E0A2 <AmiBlitz3.ab2@18708>     MOVEQ.l #$08,D1
0002E0A4 <AmiBlitz3.ab2@18711>   MOVE.l D1,-(A7)
0002E0A8 <AmiBlitz3.ab2@18712>   MOVE.w #$203C,D1
0002E0AC <AmiBlitz3.ab2@18713>   BSR.w writeword
0002E0AE <AmiBlitz3.ab2@18714>   MOVE.l (A7)+,D1
0002E0B2 <AmiBlitz3.ab2@18715> BRA.w writelong
0002E0B4 <AmiBlitz3.ab2@18723>   MOVEQ.l #$00,D1
0002E0BA <AmiBlitz3.ab2@18724>   MOVEA.l libpointer,A1
0002E0BE <AmiBlitz3.ab2@18727>     CMPA.w #$0,A1
0002E0C2 <AmiBlitz3.ab2@18728>     BEQ.w findhilib__done
0002E0C6 <AmiBlitz3.ab2@18729>       CMP.w $4(A1),D7
0002E0CA <AmiBlitz3.ab2@18730>       BLS.w findhilib__next
0002E0CE <AmiBlitz3.ab2@18731>         CMP.w $4(A1),D1
0002E0D2 <AmiBlitz3.ab2@18732>         BCC.w findhilib__next
0002E0D6 <AmiBlitz3.ab2@18733>           MOVE.w $4(A1),D1
0002E0D8 <AmiBlitz3.ab2@18734>           MOVEA.l A1,A2
0002E0DA <AmiBlitz3.ab2@18737>     MOVEA.l (A1),A1
0002E0DE <AmiBlitz3.ab2@18738> BRA.w findhilib__loop
0002E0E0 <AmiBlitz3.ab2@18741>   MOVE.w D1,D7
0002E0E2 <AmiBlitz3.ab2@18742> RTS
0002E0E4 <AmiBlitz3.ab2@18750>   MOVEQ.l #-$01,D1
0002E0EA <AmiBlitz3.ab2@18751>   MOVEA.l libpointer,A1
0002E0EE <AmiBlitz3.ab2@18754>     CMPA.w #$0,A1
0002E0F2 <AmiBlitz3.ab2@18755>      BEQ.w findlolib__done
0002E0F6 <AmiBlitz3.ab2@18756>     CMP.w $4(A1),D7
0002E0FA <AmiBlitz3.ab2@18757>      BCC.w findlolib__next
0002E0FE <AmiBlitz3.ab2@18758>     CMP.w $4(A1),D1
0002E102 <AmiBlitz3.ab2@18759>      BLS.w findlolib__next
0002E106 <AmiBlitz3.ab2@18760>     MOVE.w $4(A1),D1
0002E108 <AmiBlitz3.ab2@18761>     MOVEA.l A1,A2
0002E10A <AmiBlitz3.ab2@18764>     MOVEA.l (A1),A1
0002E10E <AmiBlitz3.ab2@18765> BRA.w findlolib__loop
0002E110 <AmiBlitz3.ab2@18768>   MOVE.w D1,D7
0002E114 <AmiBlitz3.ab2@18769>   CMP.w #-$1,D1
0002E116 <AmiBlitz3.ab2@18770> RTS
0002E11C <AmiBlitz3.ab2@18774>   ADDQ.w #1,globalvarpointer
0002E124 <AmiBlitz3.ab2@18775>   BCLR #$0,globalvarpointer+1
0002E126 <AmiBlitz3.ab2@18776>   MOVEQ.l #$00,D7
0002E12A <AmiBlitz3.ab2@18779>     BSR.w findlolib
0002E12E <AmiBlitz3.ab2@18780>     BEQ.w JL_0_BA74
0002E132 <AmiBlitz3.ab2@18781>     TST.w $C(A2)
0002E136 <AmiBlitz3.ab2@18782>     BPL.w JL_0_B99A
0002E138 <AmiBlitz3.ab2@18783>     MOVEA.l A2,A1
0002E13C <AmiBlitz3.ab2@18784>     ADDA.l $12(A1),A1
0002E140 <AmiBlitz3.ab2@18785>     TST.w -$2(A1)
0002E144 <AmiBlitz3.ab2@18786>     BEQ.w JL_0_BA34
0002E148 <AmiBlitz3.ab2@18787>     MOVE.l -$A(A1),D1
0002E14C <AmiBlitz3.ab2@18788>     LEA $6(A2,D1.L),A3
0002E14E <AmiBlitz3.ab2@18791>       TST.w (A3)+
0002E152 <AmiBlitz3.ab2@18792>       BEQ.w JL_0_B9CC
0002E154 <AmiBlitz3.ab2@18793>         ADDQ.w #2,A3
0002E158 <AmiBlitz3.ab2@18794> BRA.w JL_0_B9C0
0002E15C <AmiBlitz3.ab2@18797>     TST.l $4(A3)
0002E160 <AmiBlitz3.ab2@18798>     BEQ.w JL_0_BA34
0002E164 <AmiBlitz3.ab2@18799>       MOVE.w freemax(PC),D1
0002E168 <AmiBlitz3.ab2@18800>       BSR.w writeword
0002E16C <AmiBlitz3.ab2@18801>       MOVE.w -$4(A1),D1
0002E170 <AmiBlitz3.ab2@18802>       BSR.w writeword
0002E176 <AmiBlitz3.ab2@18803>       MOVE.l free,D1
0002E17A <AmiBlitz3.ab2@18804>       MOVE.w -$6(A1),D1
0002E17E <AmiBlitz3.ab2@18805>       BSR.w writelong
0002E184 <AmiBlitz3.ab2@18806>       MOVE.l destpointer,-(A7)
0002E186 <AmiBlitz3.ab2@18807>       MOVEQ.l #$01,D1
0002E18A <AmiBlitz3.ab2@18808>       MOVE.w -$2(A1),D2
0002E18C <AmiBlitz3.ab2@18809>       LSL.w D2,D1
0002E18E <AmiBlitz3.ab2@18810>       MOVE.w D1,-(A7)
0002E192 <AmiBlitz3.ab2@18811>       MOVE.l -$A(A1),D1
0002E196 <AmiBlitz3.ab2@18812>       BSR.w Amakelibsub
0002E19A <AmiBlitz3.ab2@18813>       MOVE.w freemax3(PC),D1
0002E19E <AmiBlitz3.ab2@18814>       BSR.w writeword
0002E1A0 <AmiBlitz3.ab2@18815>       MOVE.w (A7)+,D1
0002E1A4 <AmiBlitz3.ab2@18816>       BSR.w writeword
0002E1A8 <AmiBlitz3.ab2@18817>       MOVE.l freemax2(PC),D1
0002E1AC <AmiBlitz3.ab2@18818>       BSR.w writelong
0002E1AE <AmiBlitz3.ab2@18819>       MOVE.l (A7)+,D1
0002E1B4 <AmiBlitz3.ab2@18820>       SUB.l destpointer,D1
0002E1B8 <AmiBlitz3.ab2@18821>       BSR.w writeword
0002E1BC <AmiBlitz3.ab2@18822>       MOVE.w freemax4(PC),D1
0002E1C0 <AmiBlitz3.ab2@18823>       BSR.w writeword
0002E1C4 <AmiBlitz3.ab2@18826>     MOVE.l $1C(A2),D1
0002E1C8 <AmiBlitz3.ab2@18827>     BEQ.w JL_0_B99A
0002E1CC <AmiBlitz3.ab2@18829>     MOVE.w $4(A2),D1
0002E1D0 <AmiBlitz3.ab2@18830>     CMP.w #-$2,D1
0002E1D4 <AmiBlitz3.ab2@18831>     BNE.w JL_0_BA50
0002E1D8 <AmiBlitz3.ab2@18832>       BSR.w makevsize
0002E1DC <AmiBlitz3.ab2@18833> BRA.w JL_0_BA60
0002E1E0 <AmiBlitz3.ab2@18836>     CMP.w #-$12D,D1
0002E1E4 <AmiBlitz3.ab2@18837>     BNE.w JL_0_BA60
0002E1E8 <AmiBlitz3.ab2@18838>       BSR.w makessize
0002E1EC <AmiBlitz3.ab2@18839> BRA.w JL_0_BA60
0002E1F0 <AmiBlitz3.ab2@18842>     MOVE.l $1C(A2),D1
0002E1F8 <AmiBlitz3.ab2@18843>     MOVE.w #$FFFF,lasta6
0002E1FC <AmiBlitz3.ab2@18844>     BSR.w Amakelibsub
0002E200 <AmiBlitz3.ab2@18845> BRA.w JL_0_B99A
0002E202 <AmiBlitz3.ab2@18848> RTS
0002E206 <AmiBlitz3.ab2@18852> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002E208 <AmiBlitz3.ab2@18854> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002E20C <AmiBlitz3.ab2@18855>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002E20E <AmiBlitz3.ab2@18856> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002E212 <AmiBlitz3.ab2@18857> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002E218 <AmiBlitz3.ab2@18862>   TST.b debugmode
0002E21C <AmiBlitz3.ab2@18863>    BEQ.b chkstak__skip
0002E222 <AmiBlitz3.ab2@18864>   TST.w debugversion
0002E226 <AmiBlitz3.ab2@18865>    BNE.b chkstak__skip
0002E22A <AmiBlitz3.ab2@18866>   MOVE.w #$C308,D1
0002E22E <AmiBlitz3.ab2@18867> BRA.w Atokejsr
0002E230 <AmiBlitz3.ab2@18870> RTS
0002E238 <AmiBlitz3.ab2@18874>   MOVE.w #$FFFF,lasta6
0002E23C <AmiBlitz3.ab2@18879>   MOVEM.l D0-d7/A0-a6,-(A7)
0002E244 <AmiBlitz3.ab2@18880>   MOVE.b #1,nostringopt
0002E24A <AmiBlitz3.ab2@18881>   JSR searchinstr
0002E24C <AmiBlitz3.ab2@18882>   MOVE.l A3,D1
0002E24E <AmiBlitz3.ab2@18883>   SUB.l A2,D1
0002E252 <AmiBlitz3.ab2@18884>   BSR.w Amakelibsub
0002E256 <AmiBlitz3.ab2@18885>   MOVEM.l (A7)+,d0-d7/a0-a6
0002E258 <AmiBlitz3.ab2@18886> RTS
0002E25E <AmiBlitz3.ab2@18893>   MOVE.l libisat,-(A7)                                   ;library write
0002E264 <AmiBlitz3.ab2@18894>   MOVE.l A2,libisat
0002E266 <AmiBlitz3.ab2@18896>   MOVEA.l A1,A2
0002E268 <AmiBlitz3.ab2@18897>   MOVE.w (A2)+,D1
0002E26E <AmiBlitz3.ab2@18898>   MOVE.l a2,lastinstructionaddr
0002E272 <AmiBlitz3.ab2@18899>   ANDI.w #$FF,D1
0002E274 <AmiBlitz3.ab2@18900>   ADDA.w D1,A2
0002E276 <AmiBlitz3.ab2@18901>   EXG.l D0,A2
0002E278 <AmiBlitz3.ab2@18902>   ADDQ.l #1,D0
0002E27C <AmiBlitz3.ab2@18903>   BCLR #$0,D0
0002E27E <AmiBlitz3.ab2@18904>   EXG.l D0,A2
0002E282 <AmiBlitz3.ab2@18905> BRA.w JL_0_BB08
0002E288 <AmiBlitz3.ab2@18909>   MOVE.l libisat,-(A7)
0002E28E <AmiBlitz3.ab2@18910>   MOVE.l A2,libisat
0002E290 <AmiBlitz3.ab2@18911>   MOVEA.l A3,A2
0002E294 <AmiBlitz3.ab2@18912> BRA.w JL_0_BB08
0002E296 <AmiBlitz3.ab2@18916>   MOVE.l a1,-(a7)
0002E298 <AmiBlitz3.ab2@18919>   MOVE.l d0,a0
0002E29C <AmiBlitz3.ab2@18920>   MOVE.l $a(a0),d0
0002E29E <AmiBlitz3.ab2@18921>   MOVE.l d0,a1
0002E2A6 <AmiBlitz3.ab2@18922>   CMP.l #8,4(a1)
0002E2AA <AmiBlitz3.ab2@18923>   BLE 'norec
0002E2AC <AmiBlitz3.ab2@18924>   MOVE.l a0,-(a7)
0002E2B2 <AmiBlitz3.ab2@18925>   MOVE.l typebase,-(a7)
0002E2B4 <AmiBlitz3.ab2@18926>   MOVEQ #0,d0
0002E2B8 <AmiBlitz3.ab2@18927>   MOVE.w 4(a0),d0
0002E2BE <AmiBlitz3.ab2@18928>   ADD.l d0,typebase
0002E2C2 <AmiBlitz3.ab2@18929>   MOVE.l $4(a1),d0
0002E2C6 <AmiBlitz3.ab2@18930>   BSR scantype
0002E2CC <AmiBlitz3.ab2@18931>   MOVE.l (a7)+,typebase
0002E2CE <AmiBlitz3.ab2@18932>   MOVE.l (a7)+,a0
0002E2D4 <AmiBlitz3.ab2@18935>   CMP.l #newtype_string,d0
0002E2D8 <AmiBlitz3.ab2@18936>   BNE 'nostring
0002E2DE <AmiBlitz3.ab2@18937>   ADDQ #2,a2offset
0002E2E4 <AmiBlitz3.ab2@18938>   MOVE.l #$3f3c0000,d1
0002E2E6 <AmiBlitz3.ab2@18939>   MOVEQ #0,d0
0002E2EA <AmiBlitz3.ab2@18940>   MOVE.w 4(a0),d0
0002E2F0 <AmiBlitz3.ab2@18941>   ADD.l typebase,d0
0002E2F2 <AmiBlitz3.ab2@18942>   MOVE.w d0,d1
0002E2F6 <AmiBlitz3.ab2@18943>   BSR writelong
0002E2FC <AmiBlitz3.ab2@18944>   TST.b debugmode
0002E300 <AmiBlitz3.ab2@18945>   BEQ 'l1a
0002E302 <AmiBlitz3.ab2@18946>   MOVE.l d1,-(a7)
0002E308 <AmiBlitz3.ab2@18947>   MOVE.l #$c308,d1
0002E30E <AmiBlitz3.ab2@18948>   JSR Atokejsr
0002E310 <AmiBlitz3.ab2@18949>   MOVE.l (a7)+,d1
0002E314 <AmiBlitz3.ab2@18952>   TST.w 8(a0)
0002E318 <AmiBlitz3.ab2@18953>   BEQ 'nostring
0002E31C <AmiBlitz3.ab2@18954>   MOVEM.l d2/d3,-(a7)
0002E31E <AmiBlitz3.ab2@18955>   MOVE.l d1,d2
0002E320 <AmiBlitz3.ab2@18956>   MOVEQ #0,d3
0002E324 <AmiBlitz3.ab2@18957>   MOVE.w 8(a0),d3
0002E326 <AmiBlitz3.ab2@18958>   SUBQ.l #1,d3
0002E32A <AmiBlitz3.ab2@18959>   BEQ 'nostring2
0002E32C <AmiBlitz3.ab2@18962>   ADDQ.l #4,d2
0002E32E <AmiBlitz3.ab2@18963>   MOVE.l d2,d1
0002E332 <AmiBlitz3.ab2@18964>   BSR writelong
0002E338 <AmiBlitz3.ab2@18965>   TST.b debugmode
0002E33C <AmiBlitz3.ab2@18966>   BEQ 'l1
0002E342 <AmiBlitz3.ab2@18967>   MOVE.l #$c308,d1
0002E348 <AmiBlitz3.ab2@18968>   JSR Atokejsr
0002E34E <AmiBlitz3.ab2@18971>   ADDQ #2,a2offset
0002E350 <AmiBlitz3.ab2@18972>   SUBQ.l #1,d3
0002E354 <AmiBlitz3.ab2@18973>   BNE 'loop
0002E358 <AmiBlitz3.ab2@18976>   MOVEM.l (a7)+,d2/d3
0002E35A <AmiBlitz3.ab2@18979>   MOVE.l (a0),d0
0002E35E <AmiBlitz3.ab2@18980>   BNE 'more
0002E360 <AmiBlitz3.ab2@18981>   MOVE.l (a7)+,a1
0002E362 <AmiBlitz3.ab2@18982> RTS
0002E366 <AmiBlitz3.ab2@18985> libisat:   Ds.l 1
0002E36C <AmiBlitz3.ab2@18991>   MOVE.l libisat,-(A7)                                   
0002E372 <AmiBlitz3.ab2@18992>   MOVE.l A2,libisat
0002E376 <AmiBlitz3.ab2@18993>   LEA $6(A2,D1.L),A2
0002E37E <AmiBlitz3.ab2@18997>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002E382 <AmiBlitz3.ab2@18998>   BEQ 'dowritevar
0002E38A <AmiBlitz3.ab2@18999>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002E38E <AmiBlitz3.ab2@19000>   BEQ 'dowritevar
0002E396 <AmiBlitz3.ab2@19001>   CMP.l #$3e175265,$1c(a2)
0002E39A <AmiBlitz3.ab2@19002>   BEQ 'dowritevar
0002E3A2 <AmiBlitz3.ab2@19003>   CMP.l #$3e165772,$1c(a2)
0002E3A6 <AmiBlitz3.ab2@19004>   BNE 'nowritef
0002E3AA <AmiBlitz3.ab2@19007>   MOVEM.l a0-a2/d2,-(a7)
0002E3AC <AmiBlitz3.ab2@19008>   MOVEQ #0,d1
0002E3B6 <AmiBlitz3.ab2@19009>   MOVE.l #0,typebase
0002E3BA <AmiBlitz3.ab2@19010>   MOVE.l $a(a3),a0
0002E3BE <AmiBlitz3.ab2@19011>   MOVE.l $4(a0),d0
0002E3C4 <AmiBlitz3.ab2@19012>   CMP.l #8,d0
0002E3C8 <AmiBlitz3.ab2@19013>   BLE 'notype
0002E3CC <AmiBlitz3.ab2@19014>   BSR scantype
0002E3D2 <AmiBlitz3.ab2@19017>   MOVE.l #$3f3c0000,d1
0002E3D8 <AmiBlitz3.ab2@19018>   MOVE.w a2offset,d1
0002E3DC <AmiBlitz3.ab2@19019>   BSR writelong
0002E3E2 <AmiBlitz3.ab2@19020>   MOVE.l #$3f3c0000,d1
0002E3E6 <AmiBlitz3.ab2@19021>   MOVE.l $a(a3),a0
0002E3EA <AmiBlitz3.ab2@19022>   MOVE.w 8(a0),d1
0002E3EE <AmiBlitz3.ab2@19023>   BSR writelong
0002E3F4 <AmiBlitz3.ab2@19024>   MOVE.l #$3f3cab12,d1
0002E3F8 <AmiBlitz3.ab2@19025>   BSR writelong
0002E3FE <AmiBlitz3.ab2@19026>   ADDQ.w #6,a2offset
0002E402 <AmiBlitz3.ab2@19027>   MOVEM.l (a7)+,a0-a2/d2
0002E408 <AmiBlitz3.ab2@19030>   TST.b fpu
0002E40C <AmiBlitz3.ab2@19031>   BEQ 'nofpu2
0002E414 <AmiBlitz3.ab2@19032>   CMP.l #$496e7400,$1a(a2)
0002E418 <AmiBlitz3.ab2@19033>   BNE 'noint
0002E41A <AmiBlitz3.ab2@19034>   MOVEQ #0,d1
0002E420 <AmiBlitz3.ab2@19035>   SUBQ.l #8,destpointer                                    ;fpu int
0002E426 <AmiBlitz3.ab2@19036>   CLR.w a2offset
0002E42A <AmiBlitz3.ab2@19037>   CMP.b #2,d2
0002E42E <AmiBlitz3.ab2@19038>   BGT 'noword
0002E432 <AmiBlitz3.ab2@19039>   MOVE.w #$48c0,d1
0002E438 <AmiBlitz3.ab2@19040>   OR.w regnumstore,d1
0002E43C <AmiBlitz3.ab2@19041>   BSR writeword
0002E440 <AmiBlitz3.ab2@19042> BRA 'exit2
0002E444 <AmiBlitz3.ab2@19045>    CMP.b #3,d2
0002E448 <AmiBlitz3.ab2@19046>         BNE 'nolong
0002E44C <AmiBlitz3.ab2@19047> BRA 'exit2
0002E450 <AmiBlitz3.ab2@19050>    CMP.b #4,d2
0002E454 <AmiBlitz3.ab2@19051>         BNE 'noquick
0002E458 <AmiBlitz3.ab2@19052>         MOVE.w #$e080,d1
0002E45E <AmiBlitz3.ab2@19053>         OR.w regnumstore,d1
0002E462 <AmiBlitz3.ab2@19054>         BSR writeword
0002E466 <AmiBlitz3.ab2@19055>         MOVE.w #$e080,d1
0002E46C <AmiBlitz3.ab2@19056>         OR.w regnumstore,d1
0002E470 <AmiBlitz3.ab2@19057>         BSR writeword
0002E474 <AmiBlitz3.ab2@19058> BRA 'exit2
0002E476 <AmiBlitz3.ab2@19061>         MOVEQ #0,d0
0002E478 <AmiBlitz3.ab2@19062>         MOVEQ #0,d1
0002E47E <AmiBlitz3.ab2@19063>         MOVE.w regnumstore,d0
0002E480 <AmiBlitz3.ab2@19064>         ASL.l #7,d0
0002E486 <AmiBlitz3.ab2@19065>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002E488 <AmiBlitz3.ab2@19066>         OR.l d0,d1
0002E48E <AmiBlitz3.ab2@19068>         MOVE.l #$3f000000,d1
0002E490 <AmiBlitz3.ab2@19070>         MOVEQ #0,d0
0002E492 <AmiBlitz3.ab2@19071>         MOVEQ #0,d1
0002E498 <AmiBlitz3.ab2@19072>         MOVE.w regnumstore,d0
0002E49A <AmiBlitz3.ab2@19073>         ASL.l #7,d0
0002E49C <AmiBlitz3.ab2@19074>         MOVE.l d0,d1
0002E4A2 <AmiBlitz3.ab2@19075>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002E4A4 <AmiBlitz3.ab2@19076>         ASL.l #3,d0
0002E4A6 <AmiBlitz3.ab2@19077>         OR.l d0,d1
0002E4AA <AmiBlitz3.ab2@19078>         BSR writelong
0002E4AC <AmiBlitz3.ab2@19079>         MOVEQ #0,d0
0002E4B2 <AmiBlitz3.ab2@19080>         MOVE.w regnumstore,d0
0002E4B4 <AmiBlitz3.ab2@19081>         ASL.l #7,d0
0002E4BA <AmiBlitz3.ab2@19082>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002E4BC <AmiBlitz3.ab2@19083>         OR.l d0,d1
0002E4BE <AmiBlitz3.ab2@19084>         ASL.l #1,d0
0002E4C0 <AmiBlitz3.ab2@19085>         ASL.l #8,d0
0002E4C2 <AmiBlitz3.ab2@19086>         OR.l d0,d1
0002E4C6 <AmiBlitz3.ab2@19087> BRA 'exit
0002E4CC <AmiBlitz3.ab2@19090>   CMP.w #$3c01,24(a2)
0002E4D0 <AmiBlitz3.ab2@19091>   BNE 'noval
0002E4D2 <AmiBlitz3.ab2@19092>   MOVE.l a2,-(a7)
0002E4D6 <AmiBlitz3.ab2@19093>   BSR.w JL_0_BB14
0002E4D8 <AmiBlitz3.ab2@19094>   MOVE.l (a7)+,a2
0002E4DC <AmiBlitz3.ab2@19095> BRA 'exit2
0002E4E4 <AmiBlitz3.ab2@19112>   CMP.l #$41627300,$1a(a2)
0002E4E8 <AmiBlitz3.ab2@19113>   BNE 'noabs
0002E4EA <AmiBlitz3.ab2@19114>   MOVEQ #0,d1
0002E4F0 <AmiBlitz3.ab2@19115>   MOVE.w regnumstore,d1
0002E4F2 <AmiBlitz3.ab2@19116>   MOVE.w d1,d0
0002E4F4 <AmiBlitz3.ab2@19117>   ASL.w #7,d1
0002E4F6 <AmiBlitz3.ab2@19118>   ASL.w #8,d0
0002E4F8 <AmiBlitz3.ab2@19119>   ASL.w #2,d0
0002E4FA <AmiBlitz3.ab2@19120>   OR.w d0,d1
0002E500 <AmiBlitz3.ab2@19121>   SUBQ.l #8,destpointer                                    ;fpu abs
0002E504 <AmiBlitz3.ab2@19122>   MOVEM.l d3/d1,-(a7)
0002E508 <AmiBlitz3.ab2@19123>   MOVE.w #5,d3
0002E50A <AmiBlitz3.ab2@19124>   EXG d2,d3
0002E510 <AmiBlitz3.ab2@19125>   MOVE.w regnum,-(a7)
0002E51A <AmiBlitz3.ab2@19126>   MOVE.w regnumstore,regnum
0002E51E <AmiBlitz3.ab2@19127>   BSR writeconvertcode
0002E524 <AmiBlitz3.ab2@19128>   MOVE.w (a7)+,regnum
0002E526 <AmiBlitz3.ab2@19129>   EXG d2,d3
0002E52A <AmiBlitz3.ab2@19130>   MOVEM.l (a7)+,d3/d1
0002E530 <AmiBlitz3.ab2@19131>   OR.l #$f2000018,d1
0002E536 <AmiBlitz3.ab2@19132>   CLR.w a2offset
0002E53A <AmiBlitz3.ab2@19133> BRA 'exit
0002E53E <AmiBlitz3.ab2@19136>   CMP.b #5,d2
0002E542 <AmiBlitz3.ab2@19137>   BNE 'nofpu2
0002E546 <AmiBlitz3.ab2@19138>   MOVE.b 24(a2),d0
0002E54A <AmiBlitz3.ab2@19139>   CMP.b #$60,d0                                            ;nolib $edxx
0002E54E <AmiBlitz3.ab2@19140>   BNE 'nofpu
0002E550 <AmiBlitz3.ab2@19141>   MOVEQ #0,d1
0002E556 <AmiBlitz3.ab2@19142>   MOVE.w regnumstore,d1
0002E558 <AmiBlitz3.ab2@19143>   MOVE.w d1,d0
0002E55A <AmiBlitz3.ab2@19144>   ASL.w #7,d1
0002E55C <AmiBlitz3.ab2@19145>   ASL.w #8,d0
0002E55E <AmiBlitz3.ab2@19146>   ASL.w #2,d0
0002E560 <AmiBlitz3.ab2@19147>   OR.w d0,d1
0002E564 <AmiBlitz3.ab2@19148>   MOVE.b 25(a2),d0
0002E568 <AmiBlitz3.ab2@19149>   CMP.b #5,d0
0002E56C <AmiBlitz3.ab2@19150>   BNE 'nocos
0002E572 <AmiBlitz3.ab2@19151>   OR.l #$f200001d,d1                                       ;fpu cos
0002E576 <AmiBlitz3.ab2@19152> BRA 'exit
0002E57A <AmiBlitz3.ab2@19155>   CMP.b #$c,d0
0002E57E <AmiBlitz3.ab2@19156>   BNE 'nosqr
0002E584 <AmiBlitz3.ab2@19157>   OR.l #$f2000004,d1                                       ;fpu sqr
0002E588 <AmiBlitz3.ab2@19158> BRA 'exit
0002E58C <AmiBlitz3.ab2@19161>   CMP.b #$d,d0
0002E590 <AmiBlitz3.ab2@19162>   BNE 'notan
0002E596 <AmiBlitz3.ab2@19163>   OR.l #$f200000f,d1                                       ;fpu tan
0002E59A <AmiBlitz3.ab2@19164> BRA 'exit
0002E59E <AmiBlitz3.ab2@19167>   CMP.b #$a,d0
0002E5A2 <AmiBlitz3.ab2@19168>   BNE 'nosin
0002E5A8 <AmiBlitz3.ab2@19169>   OR.l #$f200000e,d1                                       ;fpu sin
0002E5AC <AmiBlitz3.ab2@19170> BRA 'exit
0002E5B0 <AmiBlitz3.ab2@19173>   CMP.b #$3,d0
0002E5B4 <AmiBlitz3.ab2@19174>   BNE 'noasin
0002E5BA <AmiBlitz3.ab2@19175>   OR.l #$f200000c,d1                                       ;fpu asin
0002E5BE <AmiBlitz3.ab2@19176> BRA 'exit
0002E5C2 <AmiBlitz3.ab2@19179>   CMP.b #$2,d0
0002E5C6 <AmiBlitz3.ab2@19180>   BNE 'noacos
0002E5CC <AmiBlitz3.ab2@19181>   OR.l #$f200001c,d1                                       ;fpu acos
0002E5D0 <AmiBlitz3.ab2@19182> BRA 'exit
0002E5D4 <AmiBlitz3.ab2@19185>   CMP.b #$4,d0
0002E5D8 <AmiBlitz3.ab2@19186>   BNE 'noatan
0002E5DE <AmiBlitz3.ab2@19187>   OR.l #$f200000a,d1                                       ;fpu atan
0002E5E2 <AmiBlitz3.ab2@19188> BRA 'exit
0002E5E6 <AmiBlitz3.ab2@19191>   CMP.b #$e,d0
0002E5EA <AmiBlitz3.ab2@19192>   BNE 'nohtan
0002E5F0 <AmiBlitz3.ab2@19193>   OR.l #$f2000009,d1                                       ;fpu htan
0002E5F4 <AmiBlitz3.ab2@19194> BRA 'exit
0002E5F8 <AmiBlitz3.ab2@19197>   CMP.b #$6,d0
0002E5FC <AmiBlitz3.ab2@19198>   BNE 'nohcos
0002E602 <AmiBlitz3.ab2@19199>   OR.l #$f2000019,d1                                       ;fpu hcos
0002E606 <AmiBlitz3.ab2@19200> BRA 'exit
0002E60A <AmiBlitz3.ab2@19203>   CMP.b #$b,d0
0002E60E <AmiBlitz3.ab2@19204>   BNE 'nohsin
0002E614 <AmiBlitz3.ab2@19205>   OR.l #$f2000002,d1                                       ;fpu hsin
0002E618 <AmiBlitz3.ab2@19206> BRA 'exit
0002E61C <AmiBlitz3.ab2@19209>   CMP.b #$9,d0
0002E620 <AmiBlitz3.ab2@19210>   BNE 'nolog
0002E626 <AmiBlitz3.ab2@19211>   OR.l #$f2000014,d1                                       ;fpu log
0002E62A <AmiBlitz3.ab2@19212> BRA 'exit
0002E62E <AmiBlitz3.ab2@19215>   CMP.b #$8,d0
0002E632 <AmiBlitz3.ab2@19216>   BNE 'nolog10
0002E638 <AmiBlitz3.ab2@19217>   OR.l #$f2000015,d1                                       ;fpu log10
0002E63C <AmiBlitz3.ab2@19218> BRA 'exit
0002E640 <AmiBlitz3.ab2@19221>   CMP.b #$7,d0
0002E644 <AmiBlitz3.ab2@19222>   BNE 'noexp
0002E64A <AmiBlitz3.ab2@19223>   OR.l #$f2000010,d1                                       ;fpu exp
0002E64E <AmiBlitz3.ab2@19224> BRA 'exit
0002E654 <AmiBlitz3.ab2@19227>   LEA fpuerr,a0
0002E656 <AmiBlitz3.ab2@19228>   MOVE.l a0,-(a7)
0002E65C <AmiBlitz3.ab2@19229> JMP handle_compileerror
0002E660 <AmiBlitz3.ab2@19233>   CMP.b #$3c,d0
0002E664 <AmiBlitz3.ab2@19234>   BNE 'nofpu2
0002E666 <AmiBlitz3.ab2@19235>   MOVEQ #0,d1
0002E66C <AmiBlitz3.ab2@19236>       MOVE.w regnumstore,d1
0002E66E <AmiBlitz3.ab2@19237>       MOVE.w d1,d0
0002E670 <AmiBlitz3.ab2@19238>       ASL.w #7,d1
0002E672 <AmiBlitz3.ab2@19239>       ASL.w #8,d0
0002E674 <AmiBlitz3.ab2@19240>       ASL.w #2,d0
0002E676 <AmiBlitz3.ab2@19241>       OR.w d0,d1
0002E67C <AmiBlitz3.ab2@19242>       CMP.b #$03,25(a2)
0002E680 <AmiBlitz3.ab2@19243>       BNE 'nosgn
0002E686 <AmiBlitz3.ab2@19246>       SUBQ.l #8,destpointer                                ;fpu sgn
0002E68C <AmiBlitz3.ab2@19247>         OR.l #$f200003a,d1
0002E690 <AmiBlitz3.ab2@19248>         BSR writelong
0002E696 <AmiBlitz3.ab2@19249>         CLR.w a2offset
0002E69C <AmiBlitz3.ab2@19250>          MOVE.l #$F28E0006,d1
0002E6A0 <AmiBlitz3.ab2@19251>          BSR writelong
0002E6A6 <AmiBlitz3.ab2@19252>   MOVE.l #$7000600a,d1
0002E6AA <AmiBlitz3.ab2@19253>   BSR writelong
0002E6B0 <AmiBlitz3.ab2@19254>   MOVE.l #$70014840,d1
0002E6B4 <AmiBlitz3.ab2@19255>   BSR writelong
0002E6BA <AmiBlitz3.ab2@19256>   MOVE.l #$F292,d1
0002E6BE <AmiBlitz3.ab2@19257>   BSR writeword
0002E6C4 <AmiBlitz3.ab2@19258>   MOVE.l #$000470FF,d1
0002E6C8 <AmiBlitz3.ab2@19259> BRA 'exit
0002E6D0 <AmiBlitz3.ab2@19262>   CMP.l #"Frac",$1a(a2)
0002E6D4 <AmiBlitz3.ab2@19263>   BNE 'nofrac
0002E6DA <AmiBlitz3.ab2@19264> JMP notwork
0002E6DE <AmiBlitz3.ab2@19305> BRA 'exit
0002E6E2 <AmiBlitz3.ab2@19309>   BSR.w JL_0_BB14                                          ;write lib code
0002E6E8 <AmiBlitz3.ab2@19310>   MOVE.l (A7)+,libisat
0002E6EA <AmiBlitz3.ab2@19311> RTS
0002E6EE <AmiBlitz3.ab2@19314>   BSR writelong
0002E6F4 <AmiBlitz3.ab2@19317>   MOVE.l (A7)+,libisat
0002E6F6 <AmiBlitz3.ab2@19318> RTS
0002E6FA <AmiBlitz3.ab2@19322>   BSR.w fetchregs
0002E700 <AmiBlitz3.ab2@19323>   TST.b debugmode
0002E704 <AmiBlitz3.ab2@19324>    BEQ.w JL_0_BB76
0002E706 <AmiBlitz3.ab2@19325>   MOVE.l (A2),D1
0002E70A <AmiBlitz3.ab2@19326>   OR.l $8(A2),D1
0002E70E <AmiBlitz3.ab2@19327>   BCLR #$0,D1
0002E710 <AmiBlitz3.ab2@19328>   TST.l D1
0002E714 <AmiBlitz3.ab2@19329>    BEQ.w JL_0_BB76
0002E716 <AmiBlitz3.ab2@19330>   MOVE.l (A2)+,D1
0002E71A <AmiBlitz3.ab2@19331>   BTST #$0,D1
0002E71E <AmiBlitz3.ab2@19332>    BEQ.w JL_0_BB60
0002E724 <AmiBlitz3.ab2@19333>   TST.w blitzmode
0002E728 <AmiBlitz3.ab2@19334>    BPL.w blitzerr
0002E72E <AmiBlitz3.ab2@19335>   TST.b debugmode
0002E732 <AmiBlitz3.ab2@19336>    BEQ.w JL_0_BB5C
0002E734 <AmiBlitz3.ab2@19337>   MOVE.l D1,-(A7)
0002E738 <AmiBlitz3.ab2@19338>   MOVE.w #$C311,D1
0002E73C <AmiBlitz3.ab2@19339>    BSR.w makebtst
0002E73E <AmiBlitz3.ab2@19340>   MOVE.l (A7)+,D1
0002E742 <AmiBlitz3.ab2@19343>   BCLR #$0,D1
0002E744 <AmiBlitz3.ab2@19346>   TST.l D1
0002E748 <AmiBlitz3.ab2@19347>    BSR.w JL_0_BBC6
0002E74A <AmiBlitz3.ab2@19348>   MOVE.l (A2)+,D1
0002E74E <AmiBlitz3.ab2@19349>    BSR.w JL_0_BB98
0002E750 <AmiBlitz3.ab2@19350>   MOVE.l (A2)+,D1
0002E754 <AmiBlitz3.ab2@19351>    BSR.w JL_0_BBC6
0002E758 <AmiBlitz3.ab2@19352> BRA.w JL_0_BB90
0002E75E <AmiBlitz3.ab2@19355>   BTST #$0,$3(A2)
0002E762 <AmiBlitz3.ab2@19356>    BEQ.w JL_0_BB88
0002E766 <AmiBlitz3.ab2@19357>   MOVE.w blitzmode(PC),D1
0002E76A <AmiBlitz3.ab2@19358>    BPL.w blitzerr
0002E76E <AmiBlitz3.ab2@19361>   MOVE.l $4(A2),D1
0002E772 <AmiBlitz3.ab2@19362>    BSR.w JL_0_BB98
0002E778 <AmiBlitz3.ab2@19365>   MOVEA.l libisat,A2
0002E77A <AmiBlitz3.ab2@19366> RTS
0002E77E <AmiBlitz3.ab2@19369>   BTST #$0,D1
0002E782 <AmiBlitz3.ab2@19370>    BEQ.w JL_0_BBC4
0002E788 <AmiBlitz3.ab2@19371>   TST.w blitzmode
0002E78C <AmiBlitz3.ab2@19372>    BMI.w amigaerr
0002E792 <AmiBlitz3.ab2@19373>   TST.b debugmode
0002E796 <AmiBlitz3.ab2@19374>    BEQ.w JL_0_BBC0
0002E798 <AmiBlitz3.ab2@19375>   MOVE.l D1,-(A7)
0002E79C <AmiBlitz3.ab2@19376>   MOVE.w #$C312,D1
0002E7A0 <AmiBlitz3.ab2@19377>    BSR.w makebtst
0002E7A2 <AmiBlitz3.ab2@19378>   MOVE.l (A7)+,D1
0002E7A6 <AmiBlitz3.ab2@19381>   BCLR #$0,D1
0002E7A8 <AmiBlitz3.ab2@19384>   TST.l D1
0002E7AC <AmiBlitz3.ab2@19387>    BEQ.w JL_0_BBD2
0002E7AE <AmiBlitz3.ab2@19388>   MOVE.l A1,-(A7)
0002E7B2 <AmiBlitz3.ab2@19389>    BSR.w JL_0_BBD4
0002E7B4 <AmiBlitz3.ab2@19390>   MOVEA.l (A7)+,A1
0002E7B6 <AmiBlitz3.ab2@19393> RTS
0002E7BC <AmiBlitz3.ab2@19396>   MOVEA.l libisat,A0
0002E7C2 <AmiBlitz3.ab2@19397>   TST.w cfetchmode
0002E7C6 <AmiBlitz3.ab2@19398>    BEQ.w JL_0_BBF6
0002E7C8 <AmiBlitz3.ab2@19399>   ADD.l A0,D1
0002E7CA <AmiBlitz3.ab2@19400>   MOVE.l D1,-(A7)
0002E7CE <AmiBlitz3.ab2@19401>   MOVE.w #$4EB9,D1
0002E7D2 <AmiBlitz3.ab2@19402>    BSR.w writeword
0002E7D4 <AmiBlitz3.ab2@19403>   MOVE.l (A7)+,D1
0002E7D8 <AmiBlitz3.ab2@19404> BRA.w writelong
0002E7DC <AmiBlitz3.ab2@19407>   LEA $0(A0,D1.L),A1
0002E7E2 <AmiBlitz3.ab2@19408>   CLR.w inline
0002E7E6 <AmiBlitz3.ab2@19411>   CMPI.b #$A0,(A1)+
0002E7EA <AmiBlitz3.ab2@19412>    BNE.w JL_0_BC68
0002E7EC <AmiBlitz3.ab2@19413>   TST.b (A1)+
0002E7F0 <AmiBlitz3.ab2@19414>    BEQ.w JL_0_BC18
0002E7F6 <AmiBlitz3.ab2@19415>   CMPI.b #$1,-$1(A1)
0002E7FA <AmiBlitz3.ab2@19416>    BEQ.w JL_0_BC24
0002E800 <AmiBlitz3.ab2@19419>   MOVE.w (A1)+,inline
0002E802 <AmiBlitz3.ab2@19420>   ADDQ.l #4,D1
0002E806 <AmiBlitz3.ab2@19421> BRA.w JL_0_BC00
0002E80C <AmiBlitz3.ab2@19424>   TST.w blitzmode
0002E810 <AmiBlitz3.ab2@19425>    BPL.w JL_0_BC4A
0002E816 <AmiBlitz3.ab2@19426>   TST.b debugmode
0002E81A <AmiBlitz3.ab2@19427>    BEQ.w JL_0_BC40
0002E81E <AmiBlitz3.ab2@19428>   MOVE.w #$C311,D1
0002E822 <AmiBlitz3.ab2@19429>    BSR.w makebtst
0002E824 <AmiBlitz3.ab2@19432>   MOVE.l (A1)+,D1
0002E828 <AmiBlitz3.ab2@19433>   LEA $0(A0,D1.L),A1
0002E82C <AmiBlitz3.ab2@19434> BRA.w JL_0_BC00
0002E832 <AmiBlitz3.ab2@19437>   TST.b debugmode
0002E836 <AmiBlitz3.ab2@19438>    BEQ.w JL_0_BC60
0002E838 <AmiBlitz3.ab2@19439>   MOVE.l D1,-(A7)
0002E83C <AmiBlitz3.ab2@19440>   MOVE.w #$C312,D1
0002E840 <AmiBlitz3.ab2@19441>    BSR.w makebtst
0002E842 <AmiBlitz3.ab2@19442>   MOVE.l (A7)+,D1
0002E844 <AmiBlitz3.ab2@19445>   ADDQ.w #4,A1
0002E846 <AmiBlitz3.ab2@19446>   ADDQ.l #6,D1
0002E84A <AmiBlitz3.ab2@19447> BRA.w JL_0_BC00
0002E850 <AmiBlitz3.ab2@19450>   TST.w inline
0002E854 <AmiBlitz3.ab2@19451>    BEQ.w JL_0_BC7E
0002E856 <AmiBlitz3.ab2@19452>   SUBQ.w #1,A1
0002E858 <AmiBlitz3.ab2@19453>   MOVEA.l A1,A0
0002E85C <AmiBlitz3.ab2@19454>   ADDA.w inline(PC),A1
0002E860 <AmiBlitz3.ab2@19455> BRA.w pokecode2
0002E864 <AmiBlitz3.ab2@19458>   MOVEM.l a0/D1,-(A7)
0002E86A <AmiBlitz3.ab2@19459>   TST.w debugversion
0002E86E <AmiBlitz3.ab2@19460>   BEQ 'l11
0002E876 <AmiBlitz3.ab2@19461>   BTST #$7,link_debuginfo
0002E87A <AmiBlitz3.ab2@19462>   BEQ.w 'l11
0002E880 <AmiBlitz3.ab2@19463>   MOVE.l lastinstruction,d1
0002E884 <AmiBlitz3.ab2@19464>   BEQ 'l11
0002E88A <AmiBlitz3.ab2@19465>   CLR.l lastinstruction
0002E890 <AmiBlitz3.ab2@19466>   CMP.l #$e000,d1
0002E894 <AmiBlitz3.ab2@19467>   BGE 'ln99
0002E89A <AmiBlitz3.ab2@19468>   LEA notf,a0
0002E8A0 <AmiBlitz3.ab2@19469>   CMP.l #$c601,d1
0002E8A4 <AmiBlitz3.ab2@19470>   BNE 'ln1
0002E8AA <AmiBlitz3.ab2@19471>   LEA strcpy,a0
0002E8AE <AmiBlitz3.ab2@19472> BRA 'ln3
0002E8B4 <AmiBlitz3.ab2@19475>   CMP.l #$c700,d1
0002E8B8 <AmiBlitz3.ab2@19476>   BNE 'ln2
0002E8BE <AmiBlitz3.ab2@19477>   LEA strvar,a0
0002E8C2 <AmiBlitz3.ab2@19478> BRA 'ln3
0002E8C8 <AmiBlitz3.ab2@19481>   CMP.l #$ce00,d1
0002E8CC <AmiBlitz3.ab2@19482>   BNE 'ln4
0002E8D2 <AmiBlitz3.ab2@19483>   LEA strcmp,a0
0002E8D6 <AmiBlitz3.ab2@19484> BRA 'ln3
0002E8DC <AmiBlitz3.ab2@19487>   CMP.l #$ca00,d1
0002E8E0 <AmiBlitz3.ab2@19488>   BNE 'ln5
0002E8E6 <AmiBlitz3.ab2@19489>   LEA qmul,a0
0002E8EA <AmiBlitz3.ab2@19490> BRA 'ln3
0002E8F0 <AmiBlitz3.ab2@19493>   CMP.l #$d000,d1
0002E8F4 <AmiBlitz3.ab2@19494>      BNE 'ln6
0002E8FA <AmiBlitz3.ab2@19495>      LEA _MaxLen,a0
0002E8FE <AmiBlitz3.ab2@19496> BRA 'ln3
0002E904 <AmiBlitz3.ab2@19499>   CMP.l #$cb00,d1
0002E908 <AmiBlitz3.ab2@19500>   BNE 'ln3
0002E90E <AmiBlitz3.ab2@19501>   LEA qdiv,a0
0002E912 <AmiBlitz3.ab2@19502> BRA 'ln3
0002E914 <AmiBlitz3.ab2@19505>   MOVE.l d1,a0
0002E918 <AmiBlitz3.ab2@19506>   LEA $8(a0),a0
0002E91C <AmiBlitz3.ab2@19509>   CMP.w #$ffff,(a0)+
0002E920 <AmiBlitz3.ab2@19510>   BNE 'l1
0002E924 <AmiBlitz3.ab2@19511>   LEA 6(a0),a0
0002E928 <AmiBlitz3.ab2@19514>   MOVEM.l a1/a2/d7/d2,-(a7)
0002E92A <AmiBlitz3.ab2@19515>   MOVEQ #0,d2
0002E930 <AmiBlitz3.ab2@19516>   LEA ptr_parameterstore,a1
0002E932 <AmiBlitz3.ab2@19519>   ADDQ.l #1,d2
0002E934 <AmiBlitz3.ab2@19520>   MOVE.b (a0)+,d0
0002E938 <AmiBlitz3.ab2@19521> 
0002E93C <AmiBlitz3.ab2@19522>   BNE 'nodollar
0002E940 <AmiBlitz3.ab2@19523>   MOVE.b #"S",d0
0002E944 <AmiBlitz3.ab2@19525>   CMP.b #"?",d0
0002E948 <AmiBlitz3.ab2@19526>   BEQ 'nolabelwrite
0002E94A <AmiBlitz3.ab2@19527>   MOVE.b d0,(a1)+
0002E94E <AmiBlitz3.ab2@19528>   BNE 'l2
0002E954 <AmiBlitz3.ab2@19529>   MOVE.w #"__",-1(a1)
0002E956 <AmiBlitz3.ab2@19530>   ADDQ.l #2,d2
0002E95A <AmiBlitz3.ab2@19531>   CLR.b 1(a1)
0002E960 <AmiBlitz3.ab2@19532>   JSR findlabel2
0002E964 <AmiBlitz3.ab2@19533>   BEQ 'l3
0002E96A <AmiBlitz3.ab2@19534>   JSR addlabelhash
0002E96E <AmiBlitz3.ab2@19537>   CLR.l 4(a2)
0002E972 <AmiBlitz3.ab2@19538>   MOVE.l $14(a7),a0
0002E976 <AmiBlitz3.ab2@19539>   MOVE.l $10(a7),d1
0002E97A <AmiBlitz3.ab2@19540>   SUB.l $12(a0),d1
0002E97E <AmiBlitz3.ab2@19541>   ADD.l $28(a0),d1
0002E982 <AmiBlitz3.ab2@19542>   MOVE.l d1,8(a2)
0002E986 <AmiBlitz3.ab2@19543> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002E98C <AmiBlitz3.ab2@19546>   TST.b typecheck
0002E990 <AmiBlitz3.ab2@19547>   BEQ 'p1
0002E996 <AmiBlitz3.ab2@19548>   MOVE.l lasttoken,d1
0002E99C <AmiBlitz3.ab2@19549>   CMP.l #$da01,d1                                          ;poke
0002E9A0 <AmiBlitz3.ab2@19550>   BEQ 'lp1
0002E9A6 <AmiBlitz3.ab2@19551>   CMP.l #$da02,d1                                          ;peek
0002E9AA <AmiBlitz3.ab2@19552>   BNE 'p1
0002E9B0 <AmiBlitz3.ab2@19555>   TST.b peekaddrsize
0002E9B4 <AmiBlitz3.ab2@19556>   BEQ 'p1
0002E9BC <AmiBlitz3.ab2@19557>   CMP.b #3,peekaddrsize
0002E9C0 <AmiBlitz3.ab2@19558>   BNE errormsg_onlylong
0002E9C6 <AmiBlitz3.ab2@19559>   CLR.b peekaddrsize
0002E9CC <AmiBlitz3.ab2@19567>    TST.b fpu
0002E9D0 <AmiBlitz3.ab2@19568>   BNE 'optf
0002E9D6 <AmiBlitz3.ab2@19569>   TST.b fast
0002E9DA <AmiBlitz3.ab2@19570>   BEQ JL11a2
0002E9E2 <AmiBlitz3.ab2@19577>   CMP.l #"Poke",20(a2)                                     ;poke
0002E9E6 <AmiBlitz3.ab2@19578>   BNE peekopt
0002E9EA <AmiBlitz3.ab2@19579>   TST.b 24(a2)
0002E9EE <AmiBlitz3.ab2@19580>   BNE peekopt
0002E9F2 <AmiBlitz3.ab2@19581>   CMP.b #3,d2
0002E9F6 <AmiBlitz3.ab2@19582>   BNE 'lw1
0002E9FC <AmiBlitz3.ab2@19585>   MOVE.l #$21821990,d1
0002EA00 <AmiBlitz3.ab2@19586> BRA.s 'lpx
0002EA04 <AmiBlitz3.ab2@19589>   CMP.b #2,d2
0002EA08 <AmiBlitz3.ab2@19590>   BNE 'lb1
0002EA0E <AmiBlitz3.ab2@19591>   MOVE.l #$31821990,d1
0002EA12 <AmiBlitz3.ab2@19592> BRA.s 'lpx
0002EA16 <AmiBlitz3.ab2@19595>   CMP.b #1,d2
0002EA1A <AmiBlitz3.ab2@19596>   BNE 'lp3
0002EA20 <AmiBlitz3.ab2@19597>   MOVE.l #$11821990,d1
0002EA24 <AmiBlitz3.ab2@19598> BRA.s 'lpx
0002EA28 <AmiBlitz3.ab2@19601>   CMP.b #5,d2
0002EA2C <AmiBlitz3.ab2@19602>     BNE JL11a2
0002EA32 <AmiBlitz3.ab2@19603>     TST.b fpu
0002EA36 <AmiBlitz3.ab2@19604>     BEQ 'll1
0002EA3C <AmiBlitz3.ab2@19605>      MOVE.l destpointer,a4
0002EA44 <AmiBlitz3.ab2@19606>     CMP.l #$f22d4500,-6(a4)
0002EA48 <AmiBlitz3.ab2@19607>     BNE 'noglob
0002EA4E <AmiBlitz3.ab2@19608>     TST.b doublepeek
0002EA52 <AmiBlitz3.ab2@19609>     BNE 'noglob
0002EA58 <AmiBlitz3.ab2@19610>     MOVE.w -2(a4),-4(a4)
0002EA5E <AmiBlitz3.ab2@19611>     MOVE.w #$21ad,-6(a4)
0002EA64 <AmiBlitz3.ab2@19612>     MOVE.w #$1990,-2(a4)
0002EA6C <AmiBlitz3.ab2@19613>     MOVE.w #9,peeksize
0002EA6E <AmiBlitz3.ab2@19614>     ADDQ #8,a7
0002EA70 <AmiBlitz3.ab2@19615> RTS
0002EA78 <AmiBlitz3.ab2@19618>     CMP.l #$f22c4500,-6(a4)
0002EA7C <AmiBlitz3.ab2@19619>     BNE 'nolocal
0002EA82 <AmiBlitz3.ab2@19620>     MOVE.w -2(a4),-4(a4)
0002EA88 <AmiBlitz3.ab2@19621>     TST.b doublepeek                                       ;dont move longfix on double floats
0002EA8C <AmiBlitz3.ab2@19622>     BNE 'nolocal
0002EA92 <AmiBlitz3.ab2@19623>     MOVE.w #$21ac,-6(a4)
0002EA98 <AmiBlitz3.ab2@19624>     MOVE.w #$1990,-2(a4)
0002EAA0 <AmiBlitz3.ab2@19625>     MOVE.w #9,peeksize
0002EAA2 <AmiBlitz3.ab2@19626>     ADDQ #8,a7
0002EAA4 <AmiBlitz3.ab2@19627> RTS
0002EAA8 <AmiBlitz3.ab2@19630>     MOVE.w #$f230,d1
0002EAAC <AmiBlitz3.ab2@19631>     BSR writeword
0002EAB2 <AmiBlitz3.ab2@19632>   MOVE.l #$65001990,d1
0002EAB8 <AmiBlitz3.ab2@19633>   TST.b doublepeek
0002EABC <AmiBlitz3.ab2@19634>   BEQ 'lpx
0002EAC2 <AmiBlitz3.ab2@19635>   OR.l   #$10000000,d1
0002EAC4 <AmiBlitz3.ab2@19639>   ADDQ #8,a7
0002EACC <AmiBlitz3.ab2@19640>   MOVE.w #9,peeksize
0002EAD0 <AmiBlitz3.ab2@19641> BRA writelong
0002EAD8 <AmiBlitz3.ab2@19644>   CMP.l #"Peek",20(a2)
0002EADC <AmiBlitz3.ab2@19645>   BNE 'l10
0002EAE0 <AmiBlitz3.ab2@19646>   TST.b 24(a2)
0002EAE4 <AmiBlitz3.ab2@19647>   BNE 'l10
0002EAEC <AmiBlitz3.ab2@19648>   CMP.w #7,peeksize
0002EAF0 <AmiBlitz3.ab2@19649>   BEQ 'l10
0002EAF8 <AmiBlitz3.ab2@19650>    CMP.w #3,peeksize
0002EAFC <AmiBlitz3.ab2@19651>    BNE.s 'lw1
0002EB02 <AmiBlitz3.ab2@19654>   MOVE.l #$20301990,d1
0002EB06 <AmiBlitz3.ab2@19655> BRA exitjsr
0002EB0E <AmiBlitz3.ab2@19658>   CMP.w #2,peeksize
0002EB12 <AmiBlitz3.ab2@19659>    BNE.s 'lb1
0002EB18 <AmiBlitz3.ab2@19660>    MOVE.l #$30301990,d1
0002EB1C <AmiBlitz3.ab2@19661> BRA exitjsr
0002EB24 <AmiBlitz3.ab2@19664>   CMP.w #1,peeksize
0002EB28 <AmiBlitz3.ab2@19665>    BNE.s 'lf1
0002EB2E <AmiBlitz3.ab2@19666>    MOVE.l #$10301990,d1
0002EB32 <AmiBlitz3.ab2@19667> BRA exitjsr
0002EB3A <AmiBlitz3.ab2@19670>   CMP.w #5,peeksize
0002EB3E <AmiBlitz3.ab2@19671>    BNE 'l10
0002EB44 <AmiBlitz3.ab2@19672>    TST.b fpu
0002EB48 <AmiBlitz3.ab2@19673>    BEQ 'll1
0002EB4C <AmiBlitz3.ab2@19674>    MOVE.w #$f230,d1
0002EB50 <AmiBlitz3.ab2@19675>    BSR writeword
0002EB52 <AmiBlitz3.ab2@19676>    MOVEQ #0,d1
0002EB58 <AmiBlitz3.ab2@19677>    MOVE.w tempregnum,d1
0002EB5A <AmiBlitz3.ab2@19678>    ASL.l #7,d1
0002EB5C <AmiBlitz3.ab2@19679>    ASL.l #8,d1
0002EB5E <AmiBlitz3.ab2@19680>    ASL.l #8,d1
0002EB64 <AmiBlitz3.ab2@19681>    ADD.l #$44001990,d1
0002EB6A <AmiBlitz3.ab2@19682>     TST.b doublepeek
0002EB6E <AmiBlitz3.ab2@19683>     BEQ 'lpx2
0002EB74 <AmiBlitz3.ab2@19684>     OR.l   #$10000000,d1
0002EB78 <AmiBlitz3.ab2@19686> BRA exitjsr
0002EB7C <AmiBlitz3.ab2@19690>   MOVE.w #$4EB9,D1
0002EB80 <AmiBlitz3.ab2@19691>    BSR.w writeword                                         ;writesysjsr
0002EB84 <AmiBlitz3.ab2@19692>   MOVEM.l (A7)+,a0/D1
0002EB8A <AmiBlitz3.ab2@19693>    JSR addoff
0002EB8E <AmiBlitz3.ab2@19694>   SUB.l $12(A0),D1
0002EB92 <AmiBlitz3.ab2@19695>   ADD.l $28(A0),D1
0002EB96 <AmiBlitz3.ab2@19696> BRA.w writelong
0002EB98 <AmiBlitz3.ab2@19701>   MOVE.w D1,-(A7)
0002EB9C <AmiBlitz3.ab2@19702>   MOVE.w tstmode(PC),D1
0002EBA0 <AmiBlitz3.ab2@19703>    BSR.w writeword
0002EBA4 <AmiBlitz3.ab2@19704>    BSR.w getbbase
0002EBA8 <AmiBlitz3.ab2@19705>    BSR.w writeword
0002EBAA <AmiBlitz3.ab2@19706>   MOVE.w (A7)+,D1
0002EBAE <AmiBlitz3.ab2@19707>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002EBB2 <AmiBlitz3.ab2@19708>    BSR.w Atokejsr
0002EBB6 <AmiBlitz3.ab2@19709>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002EBB8 <AmiBlitz3.ab2@19710> RTS
0002EBBC <AmiBlitz3.ab2@19718>   MOVE.w blitzoff(PC),D1
0002EBC0 <AmiBlitz3.ab2@19719>   CMP.w #-$1,D1
0002EBC4 <AmiBlitz3.ab2@19720>    BNE.w getbbase__done
0002EBCA <AmiBlitz3.ab2@19721>   ADDQ.w #1,globalvarpointer
0002EBD2 <AmiBlitz3.ab2@19722>   BCLR #$0,globalvarpointer+1
0002EBD8 <AmiBlitz3.ab2@19723>   MOVE.w globalvarpointer,D1
0002EBDE <AmiBlitz3.ab2@19724>   MOVE.w D1,blitzoff
0002EBE4 <AmiBlitz3.ab2@19725>   ADDQ.w #2,globalvarpointer
0002EBE6 <AmiBlitz3.ab2@19728> RTS
0002EBEA <AmiBlitz3.ab2@19732> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002EBEC <AmiBlitz3.ab2@19735> inline:     Ds.w 1
0002EBEE <AmiBlitz3.ab2@19736> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002EBF0 <AmiBlitz3.ab2@19737> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002EBF2 <AmiBlitz3.ab2@19741>   MOVE.w (A2)+,D1
0002EBF6 <AmiBlitz3.ab2@19742>    BEQ.w fetchregs__done
0002EBF8 <AmiBlitz3.ab2@19743>   MOVE.w (A2)+,D2
0002EBFC <AmiBlitz3.ab2@19744>    BSR.w toreg
0002EC00 <AmiBlitz3.ab2@19745> BRA.w fetchregs
0002EC02 <AmiBlitz3.ab2@19748> RTS
0002EC06 <AmiBlitz3.ab2@19753>   CMP.w #-$100,D2
0002EC0A <AmiBlitz3.ab2@19754>    BCC.w toreg__yeah
0002EC0E <AmiBlitz3.ab2@19756>   BCLR #$F,D2
0002EC12 <AmiBlitz3.ab2@19757>    BEQ.w toreg__nobm
0002EC18 <AmiBlitz3.ab2@19759>   TST.w blitzmode
0002EC1C <AmiBlitz3.ab2@19760>    BMI.w toreg__yeah
0002EC1E <AmiBlitz3.ab2@19761> RTS
0002EC22 <AmiBlitz3.ab2@19764>   BCLR #$E,D2
0002EC26 <AmiBlitz3.ab2@19765>    BEQ.w toreg__yeah
0002EC2C <AmiBlitz3.ab2@19767>   TST.w blitzmode
0002EC30 <AmiBlitz3.ab2@19768>    BPL.w toreg__yeah
0002EC32 <AmiBlitz3.ab2@19769> RTS
0002EC38 <AmiBlitz3.ab2@19772>   JSR uselib
0002EC3A <AmiBlitz3.ab2@19773>   TST.b D2
0002EC3E <AmiBlitz3.ab2@19774>    BEQ.w toreg__norm
0002EC42 <AmiBlitz3.ab2@19775>   CMP.b #$4,D2
0002EC46 <AmiBlitz3.ab2@19776>    BNE.w toreg__suv
0002EC4A <AmiBlitz3.ab2@19777>   MOVE.w #$0004,-(A7)
0002EC50 <AmiBlitz3.ab2@19778>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002EC54 <AmiBlitz3.ab2@19779> BRA.w toreg__sendmd
0002EC58 <AmiBlitz3.ab2@19782>   CMP.b #$3,D2
0002EC5C <AmiBlitz3.ab2@19783>    BNE.w toreg__notnmax
0002EC5E <AmiBlitz3.ab2@19784>   CLR.w -(A7)
0002EC64 <AmiBlitz3.ab2@19785>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002EC66 <AmiBlitz3.ab2@19791>   LSR.w #8,D2
0002EC6A <AmiBlitz3.ab2@19792>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002EC6E <AmiBlitz3.ab2@19793>   BTST #$7,D2
0002EC72 <AmiBlitz3.ab2@19794>    BEQ.w toreg__skipad
0002EC76 <AmiBlitz3.ab2@19795>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002EC7A <AmiBlitz3.ab2@19796>   CMP.w #$16,D2
0002EC7E <AmiBlitz3.ab2@19797>    BNE.w toreg__skipad
0002EC86 <AmiBlitz3.ab2@19798>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002EC8A <AmiBlitz3.ab2@19801>   ANDI.w #$7,D2
0002EC8C <AmiBlitz3.ab2@19802>   LSL.w #8,D2
0002EC8E <AmiBlitz3.ab2@19803>   LSL.w #1,D2
0002EC90 <AmiBlitz3.ab2@19804>   OR.w D2,D1
0002EC94 <AmiBlitz3.ab2@19805>    BSR.w writeword
0002EC98 <AmiBlitz3.ab2@19806>   MOVE.l $12(A1),D1
0002EC9A <AmiBlitz3.ab2@19807>   ADD.l (A7)+,D1
0002EC9E <AmiBlitz3.ab2@19808>   MOVE.w $0(A1,D1.L),D1
0002ECA0 <AmiBlitz3.ab2@19809>   ADD.w (A7)+,D1
0002ECA4 <AmiBlitz3.ab2@19810> BRA.w writeword
0002ECA6 <AmiBlitz3.ab2@19813>   MOVE.w D2,-(A7)
0002ECA8 <AmiBlitz3.ab2@19814>   LSR.w #8,D2
0002ECAC <AmiBlitz3.ab2@19815>   CMP.w #$16,D2
0002ECB0 <AmiBlitz3.ab2@19816>    BNE.w toreg__isnta6
0002ECB8 <AmiBlitz3.ab2@19817>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002ECBC <AmiBlitz3.ab2@19820>   MOVE.l $12(A1),D1                                        ;objectspace
0002ECC0 <AmiBlitz3.ab2@19821>   MOVE.w -$6(A1,D1.L),-(A7)
0002ECC4 <AmiBlitz3.ab2@19822>    BSR.w makeregop
0002ECC8 <AmiBlitz3.ab2@19823>    BSR.w writeword
0002ECCA <AmiBlitz3.ab2@19824>   MOVE.w (A7)+,D1
0002ECCC <AmiBlitz3.ab2@19825>   MOVE.w (A7)+,D2
0002ECCE <AmiBlitz3.ab2@19826>   TST.b D2
0002ECD2 <AmiBlitz3.ab2@19827>    BPL.w toreg__skippy1
0002ECD6 <AmiBlitz3.ab2@19832>    BSR.w writeword                                         ;move.l x(a5),dn
0002ECD8 <AmiBlitz3.ab2@19833>   MOVE.w D2,-(A7)                                          ;store reg used
0002ECDC <AmiBlitz3.ab2@19835>   ADDA.l $12(A1),A1
0002ECDE <AmiBlitz3.ab2@19836>   MOVE.b D2,D1
0002ECE2 <AmiBlitz3.ab2@19837>   ANDI.w #$7,D1
0002ECE8 <AmiBlitz3.ab2@19839>   TST.b debugmode
0002ECEC <AmiBlitz3.ab2@19840>    BEQ.w toreg__norerr
0002ECEE <AmiBlitz3.ab2@19842>   MOVE.w D1,-(A7)
0002ECF0 <AmiBlitz3.ab2@19843>   LSL.w #8,D1
0002ECF2 <AmiBlitz3.ab2@19844>   LSL.w #1,D1
0002ECF6 <AmiBlitz3.ab2@19845>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002ECFA <AmiBlitz3.ab2@19846>    BSR.w writeword
0002ECFE <AmiBlitz3.ab2@19847>   MOVE.w -$4(A1),D1
0002ED02 <AmiBlitz3.ab2@19848>    BSR.w writeword
0002ED06 <AmiBlitz3.ab2@19849>   MOVE.l maxchk(PC),D1                                  ;bcs
0002ED0A <AmiBlitz3.ab2@19850>    BSR.w writelong
0002ED0C <AmiBlitz3.ab2@19851>   MOVE.l A2,-(A7)
0002ED10 <AmiBlitz3.ab2@19852>   MOVE.w #$C30A,D1
0002ED14 <AmiBlitz3.ab2@19853>    BSR.w Atokejsr
0002ED16 <AmiBlitz3.ab2@19854>   MOVEA.l (A7)+,A2
0002ED18 <AmiBlitz3.ab2@19855>   MOVE.w (A7)+,D1
0002ED1C <AmiBlitz3.ab2@19858>   MOVE.w -$2(A1),D2                                        ;shift amount
0002ED20 <AmiBlitz3.ab2@19861>   CMP.w #$9,D2
0002ED24 <AmiBlitz3.ab2@19862>    BCS.w toreg__simp
0002ED28 <AmiBlitz3.ab2@19863>   MOVEM.w D1-D2,-(A7)
0002ED2A <AmiBlitz3.ab2@19865>   MOVEQ.l #$00,D2                                          ;!!!!!
0002ED2C <AmiBlitz3.ab2@19867>   LSL.w #8,D2
0002ED2E <AmiBlitz3.ab2@19868>   LSL.w #1,D2
0002ED30 <AmiBlitz3.ab2@19869>   OR.w D2,D1
0002ED34 <AmiBlitz3.ab2@19870>   OR.w lsldn(PC),D1
0002ED38 <AmiBlitz3.ab2@19871>    BSR.w writeword
0002ED3C <AmiBlitz3.ab2@19872>   MOVEM.w (A7)+,D1-D2
0002ED3E <AmiBlitz3.ab2@19873>   SUBQ.w #8,D2
0002ED42 <AmiBlitz3.ab2@19874> BRA.w toreg__shloop
0002ED44 <AmiBlitz3.ab2@19877>   MOVE.w D1,-(A7)
0002ED48 <AmiBlitz3.ab2@19878>   OR.w #$48c0,d1
0002ED4C <AmiBlitz3.ab2@19879>   BSR writeword
0002ED4E <AmiBlitz3.ab2@19880>   MOVE.w (a7),d1
0002ED50 <AmiBlitz3.ab2@19881>   TST.w D2
0002ED54 <AmiBlitz3.ab2@19882>   BEQ.w toreg__simp2
0002ED58 <AmiBlitz3.ab2@19884>   ANDI.w #$7,D2                                            ;?????
0002ED5A <AmiBlitz3.ab2@19886>   LSL.w #8,D2
0002ED5C <AmiBlitz3.ab2@19887>   LSL.w #1,D2
0002ED5E <AmiBlitz3.ab2@19888>   OR.w D2,D1
0002ED62 <AmiBlitz3.ab2@19889>   OR.w lsldn(PC),D1
0002ED66 <AmiBlitz3.ab2@19890>    BSR.w writeword
0002ED68 <AmiBlitz3.ab2@19896>   MOVE.w (A7)+,D1
0002ED6C <AmiBlitz3.ab2@19897>   ANDI.w #$7,D1
0002ED70 <AmiBlitz3.ab2@19898>   OR.w maxdo(PC),D1
0002ED72 <AmiBlitz3.ab2@19899>   MOVE.w (A7)+,D2
0002ED74 <AmiBlitz3.ab2@19900>   LSL.w #1,D2
0002ED78 <AmiBlitz3.ab2@19901>   ANDI.w #$E00,D2
0002ED7A <AmiBlitz3.ab2@19902>   OR.w D2,D1
0002ED7E <AmiBlitz3.ab2@19903> BRA.w writeword
0002ED82 <AmiBlitz3.ab2@19906>   CMP.b #$1,D2
0002ED86 <AmiBlitz3.ab2@19907>    BEQ.w toreg__skippy
0002ED88 <AmiBlitz3.ab2@19911>   ADDQ.w #4,D1
0002ED8E <AmiBlitz3.ab2@19913>   TST.b debugmode
0002ED92 <AmiBlitz3.ab2@19914>    BEQ.w toreg__skippy
0002ED96 <AmiBlitz3.ab2@19916>    BSR.w writeword
0002ED98 <AmiBlitz3.ab2@19917>   SWAP D1
0002ED9C <AmiBlitz3.ab2@19918>   MOVE.w toreg__theretest(PC),D1
0002ED9E <AmiBlitz3.ab2@19919>   SWAP D1
0002EDA2 <AmiBlitz3.ab2@19920>    BSR.w writelong
0002EDA6 <AmiBlitz3.ab2@19921>   MOVE.l toreg__theretest+4(PC),D1
0002EDAA <AmiBlitz3.ab2@19922>    BSR.w writelong
0002EDAE <AmiBlitz3.ab2@19923>   MOVE.l toreg__theretest+8(PC),D1
0002EDB2 <AmiBlitz3.ab2@19924> BRA.w writelong
0002EDB6 <AmiBlitz3.ab2@19927> BRA.w writeword
0002EDBA <AmiBlitz3.ab2@19932>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0002EDBE <AmiBlitz3.ab2@19933>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0002EDC0 <AmiBlitz3.ab2@19934>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0002EDC2 <AmiBlitz3.ab2@19935>             Dc.b $4E,$40                                   ;TRAP   #00
0002EDC4 <AmiBlitz3.ab2@19940>   LSR.w #8,D2
0002EDC8 <AmiBlitz3.ab2@19941>   CMP.b #$16,D2
0002EDCC <AmiBlitz3.ab2@19942>    BNE.w toreg__nota6
0002EDD0 <AmiBlitz3.ab2@19943>   MOVE.w $A(A1),D1
0002EDD6 <AmiBlitz3.ab2@19944>   CMP.w lasta6,D1
0002EDDA <AmiBlitz3.ab2@19945>    BEQ.w toreg__sk
0002EDE0 <AmiBlitz3.ab2@19946>   MOVE.w D1,lasta6
0002EDE4 <AmiBlitz3.ab2@19949>    BSR.w makeregop
0002EDE8 <AmiBlitz3.ab2@19950>   TST.w $1A(A1)
0002EDEC <AmiBlitz3.ab2@19951>    BPL.w toreg__long
0002EDF0 <AmiBlitz3.ab2@19952>   CMP.w stackop(PC),D1
0002EDF4 <AmiBlitz3.ab2@19953>    BNE.w toreg__notst
0002EDFA <AmiBlitz3.ab2@19954>   SUBQ.w #2,a2offset
0002EDFE <AmiBlitz3.ab2@19957>    ORI.w #$1000,D1
0002EE02 <AmiBlitz3.ab2@19960>    BSR.w writeword
0002EE06 <AmiBlitz3.ab2@19961>   MOVE.w $A(A1),D1
0002EE0A <AmiBlitz3.ab2@19962>    BSR.w writeword
0002EE0C <AmiBlitz3.ab2@19965> RTS
0002EE0E <AmiBlitz3.ab2@19969> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0002EE12 <AmiBlitz3.ab2@19970> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0002EE18 <AmiBlitz3.ab2@19971>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0002EE1A <AmiBlitz3.ab2@19974> 
0002EE1C <AmiBlitz3.ab2@19977>             Dc.b $00,$00
0002EE20 <AmiBlitz3.ab2@19978> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0002EE24 <AmiBlitz3.ab2@19985>   CMP.b #$FF,D2
0002EE28 <AmiBlitz3.ab2@19986>    BNE.w makeregop__notst
0002EE2C <AmiBlitz3.ab2@19987>   MOVE.w stackop(PC),D1
0002EE32 <AmiBlitz3.ab2@19988>   ADDQ.w #4,a2offset
0002EE34 <AmiBlitz3.ab2@19989> RTS
0002EE36 <AmiBlitz3.ab2@19992>   MOVE.l A3,-(A7)
0002EE3C <AmiBlitz3.ab2@19993>   LEA regtransd,A3
0002EE40 <AmiBlitz3.ab2@19994>   BTST #$4,D2
0002EE44 <AmiBlitz3.ab2@19995>    BEQ.w makeregop__skip
0002EE4A <AmiBlitz3.ab2@19996>   LEA regtransa,A3
0002EE4E <AmiBlitz3.ab2@19999>   ANDI.w #$7,D2
0002EE50 <AmiBlitz3.ab2@20000>   MOVE.w D2,D1
0002EE52 <AmiBlitz3.ab2@20001>   LSL.w #8,D1
0002EE54 <AmiBlitz3.ab2@20002>   LSL.w #1,D1
0002EE56 <AmiBlitz3.ab2@20003>   OR.w (A3),D1
0002EE58 <AmiBlitz3.ab2@20004>   MOVEA.l (A7)+,A3
0002EE5A <AmiBlitz3.ab2@20005> RTS
0002EE5E <AmiBlitz3.ab2@20011>   CMP.w #$3C,D0
0002EE62 <AmiBlitz3.ab2@20012>    BCS.w ifchar__no
0002EE66 <AmiBlitz3.ab2@20013>   CMP.w #$3E,D0
0002EE6A <AmiBlitz3.ab2@20014>    BHI.w ifchar__no
0002EE6E <AmiBlitz3.ab2@20015>   SUBI.w #$3C,D0
0002EE70 <AmiBlitz3.ab2@20016>   CMP.w D0,D0
0002EE72 <AmiBlitz3.ab2@20019> RTS
0002EE7C <AmiBlitz3.ab2@20024>   MOVE.w oldqflag,instringon
0002EE82 <AmiBlitz3.ab2@20025>   MOVEA.l lastsourcepos,A5
0002EE88 <AmiBlitz3.ab2@20030>   MOVE.w regnum,-(A7)
0002EE8E <AmiBlitz3.ab2@20031>   CLR.w regnum
0002EE94 <AmiBlitz3.ab2@20032>   MOVE.l destpointer,-(A7)
0002EE9A <AmiBlitz3.ab2@20033>   MOVE.l destbufferend,-(A7)
0002EEA0 <AmiBlitz3.ab2@20034>   MOVE.w dontwrite,-(A7)
0002EEA6 <AmiBlitz3.ab2@20035>   MOVE.w lasta6,-(A7)
0002EEAC <AmiBlitz3.ab2@20036>   MOVE.w cfetchmode,-(A7)
0002EEB0 <AmiBlitz3.ab2@20037>    BNE.w JL_0_BFB6
0002EEBA <AmiBlitz3.ab2@20038>   MOVE.l destbufferend,oldlibat
0002EEC0 <AmiBlitz3.ab2@20039>   MOVEA.l constpcat,A0
0002EEC6 <AmiBlitz3.ab2@20040>   MOVE.l A0,destpointer
0002EECA <AmiBlitz3.ab2@20041> BRA.w JL_0_BFBC
0002EED0 <AmiBlitz3.ab2@20044>   MOVEA.l destpointer,A0
0002EED2 <AmiBlitz3.ab2@20047>   MOVE.l A0,-(A7)
0002EEDC <AmiBlitz3.ab2@20048>   MOVE.l constlibat,destbufferend
0002EEE2 <AmiBlitz3.ab2@20049>   CLR.w dontwrite
0002EEEA <AmiBlitz3.ab2@20051>   MOVE.w #$FFFF,lasta6
0002EEF2 <AmiBlitz3.ab2@20052>   MOVE.w #$FFFF,cfetchmode
0002EEF6 <AmiBlitz3.ab2@20054>     BSR.w arreval
0002EEF8 <AmiBlitz3.ab2@20055>    MOVE.l (a7),a0
0002F034 <AmiBlitz3.ab2@20057>  !newcalc
0002F038 <AmiBlitz3.ab2@20058>    BEQ 'l10
0002F03A <AmiBlitz3.ab2@20059>    MOVE.l d0,d3
0002F03C <AmiBlitz3.ab2@20060>    MOVEA.l (A7)+,A0
0002F040 <AmiBlitz3.ab2@20061> BRA bc1
0002F044 <AmiBlitz3.ab2@20064>    MOVE.w #$2600,D1
0002F04A <AmiBlitz3.ab2@20065>   OR.w regnum,D1
0002F04E <AmiBlitz3.ab2@20066>    BSR.w writeword
0002F052 <AmiBlitz3.ab2@20067>   MOVE.w #$4E75,D1
0002F056 <AmiBlitz3.ab2@20068>    BSR.w writeword
0002F05C <AmiBlitz3.ab2@20069>   MOVE.w dontwrite,D1
0002F060 <AmiBlitz3.ab2@20070>    BNE.w conmemerr
0002F062 <AmiBlitz3.ab2@20071>   MOVEA.l (A7)+,A0
0002F064 <AmiBlitz3.ab2@20072>   NOP
0002F06A <AmiBlitz3.ab2@20073>    JSR Aclearcache                                         ;simple expression
0002F06C <AmiBlitz3.ab2@20076>    JSR (A0)                                                ;writeresult
0002F072 <AmiBlitz3.ab2@20079>   MOVE.w (A7)+,cfetchmode
0002F078 <AmiBlitz3.ab2@20080>   MOVE.w (A7)+,lasta6
0002F07E <AmiBlitz3.ab2@20081>   MOVE.w (A7)+,dontwrite
0002F084 <AmiBlitz3.ab2@20082>   MOVE.l (A7)+,destbufferend
0002F08A <AmiBlitz3.ab2@20083>   MOVE.l (A7)+,destpointer
0002F090 <AmiBlitz3.ab2@20084>   MOVE.w (A7)+,regnum
0002F096 <AmiBlitz3.ab2@20087> JMP reget
0002F09A <AmiBlitz3.ab2@20090> oldlibat:   Ds.l 1
0002F0A0 <AmiBlitz3.ab2@20094>   LEA incdir,A0
0002F0A4 <AmiBlitz3.ab2@20097>   CMP.w #$22,D0
0002F0A8 <AmiBlitz3.ab2@20098>    BEQ.w JL_0_C052
0002F0AA <AmiBlitz3.ab2@20099>   MOVE.b D0,(A0)+
0002F0AC <AmiBlitz3.ab2@20100>   TST.w D0
0002F0B0 <AmiBlitz3.ab2@20101>    BEQ.w JL_0_C05A
0002F0B4 <AmiBlitz3.ab2@20102>    BMI.w syntaxerr
0002F0BA <AmiBlitz3.ab2@20105>   JSR get1bytemain                                         ;_long
0002F0BE <AmiBlitz3.ab2@20106> BRA.w JL_0_C03E
0002F0C0 <AmiBlitz3.ab2@20109> RTS
0002F0C6 <AmiBlitz3.ab2@20113>   LEA ptr_parameterstore,A1                                ;getparameter
0002F0CC <AmiBlitz3.ab2@20114>   LEA incdir,A0
0002F0CE <AmiBlitz3.ab2@20115>   MOVEQ.l #-$01,D2
0002F0D0 <AmiBlitz3.ab2@20118>     ADDQ.w #1,D2
0002F0D2 <AmiBlitz3.ab2@20119>     MOVE.b (A0)+,(A1)+
0002F0D6 <AmiBlitz3.ab2@20120>   BNE.w JL_0_C06A
0002F0D8 <AmiBlitz3.ab2@20121>   SUBQ.w #1,A1
0002F0E2 <AmiBlitz3.ab2@20123>   MOVE.w oldqflag,instringon
0002F0E8 <AmiBlitz3.ab2@20124>   MOVEA.l lastsourcepos,A5
0002F0EE <AmiBlitz3.ab2@20128>   JSR get1bytemain
0002F0F0 <AmiBlitz3.ab2@20129>   TST.w D0
0002F0F4 <AmiBlitz3.ab2@20130>    BMI.w syntaxerr
0002F0F8 <AmiBlitz3.ab2@20131>   CMP.b #$22,D0
0002F0FC <AmiBlitz3.ab2@20132>    BEQ.w JL_0_C078
0002F0FE <AmiBlitz3.ab2@20133>   MOVE.b D0,(A1)+
0002F102 <AmiBlitz3.ab2@20134>    BEQ.w JL_0_C096
0002F104 <AmiBlitz3.ab2@20135>   ADDQ.w #1,D2
0002F108 <AmiBlitz3.ab2@20136> BRA.w JL_0_C078
0002F10A <AmiBlitz3.ab2@20139>   TST.w D2
0002F10E <AmiBlitz3.ab2@20140>    BEQ.w syntaxerr
0002F110 <AmiBlitz3.ab2@20141> RTS
0002F116 <AmiBlitz3.ab2@20145>   MOVEA.l constantbase,A2
0002F11A <AmiBlitz3.ab2@20146>   MOVEA.l $E(A2),A5
0002F120 <AmiBlitz3.ab2@20147>   MOVE.l a5,includesourceline
0002F126 <AmiBlitz3.ab2@20148>   LEA inctab,a0
0002F12C <AmiBlitz3.ab2@20149>   MOVE.w ininclude,d0
0002F130 <AmiBlitz3.ab2@20150>   MOVE.l $0(a0,d0*4),d0
0002F134 <AmiBlitz3.ab2@20151>   MOVEA.l $4(A2),A0
0002F138 <AmiBlitz3.ab2@20153>   LEA $0(A0,D0.l),A0
0002F13A <AmiBlitz3.ab2@20154>   MOVEA.l A5,A1
0002F13C <AmiBlitz3.ab2@20157>     CMPA.l A0,A1
0002F140 <AmiBlitz3.ab2@20158>      BCC.w JL_0_C0C6
0002F142 <AmiBlitz3.ab2@20159>   TST.b (A1)+
0002F146 <AmiBlitz3.ab2@20160>   BNE.w JL_0_C0B6
0002F14A <AmiBlitz3.ab2@20161> BRA.w JL_0_C112
0002F14E <AmiBlitz3.ab2@20164>   MOVEA.l $4(A2),A1
0002F150 <AmiBlitz3.ab2@20167>   CMPA.l A0,A5
0002F154 <AmiBlitz3.ab2@20168>   BCC.w JL_0_C0D6
0002F156 <AmiBlitz3.ab2@20169>   MOVE.b (A5)+,(A1)+
0002F15A <AmiBlitz3.ab2@20170> BRA.w JL_0_C0CA
0002F15C <AmiBlitz3.ab2@20173>   MOVE.l A1,D0
0002F160 <AmiBlitz3.ab2@20174>   SUB.l $4(A2),D0
0002F166 <AmiBlitz3.ab2@20175>   LEA inctab,a0
0002F168 <AmiBlitz3.ab2@20176>   MOVEQ #0,d1
0002F16E <AmiBlitz3.ab2@20177>   MOVE.w ininclude,d1
0002F172 <AmiBlitz3.ab2@20178>   MOVE.l d0,0(a0,d1*4)
0002F178 <AmiBlitz3.ab2@20180>   MOVEA.l _dosbase,A6
0002F17C <AmiBlitz3.ab2@20181>   MOVE.l $8(A2),D1
0002F17E <AmiBlitz3.ab2@20182>   MOVE.l A1,D2
0002F184 <AmiBlitz3.ab2@20183>   MOVE.l D2,include_base
0002F18A <AmiBlitz3.ab2@20185>   MOVE.l #$10000000,d3                                     ;load whole file
0002F18C <AmiBlitz3.ab2@20186>   SUB.l D0,D3
0002F190 <AmiBlitz3.ab2@20187>    JSR _Read(A6)
0002F192 <AmiBlitz3.ab2@20188>   TST.l D0
0002F196 <AmiBlitz3.ab2@20189>    BMI.w error_reading_file
0002F19A <AmiBlitz3.ab2@20190>    BEQ.w JL_0_C120
0002F1A0 <AmiBlitz3.ab2@20191>    MOVE.l D0,include_length
0002F1E2 <AmiBlitz3.ab2@20192>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002F20C <AmiBlitz3.ab2@20193>    !basic
0002F21C <AmiBlitz3.ab2@20194>    ilen.l  = Peek.l(?include_length)
0002F22C <AmiBlitz3.ab2@20195>    ibase.l = Peek.l(?include_base)
0002F23C <AmiBlitz3.ab2@20196>    ido.l   = Peek.l(?include_process)
0002F24C <AmiBlitz3.ab2@20197>    *tn.preprocessor = Peek.l(?include_preprocessor)
0002F256 <AmiBlitz3.ab2@20198>    If ido
0002F268 <AmiBlitz3.ab2@20199>      ioffset.l = SkipXtraHeader{ibase,ilen}
0002F28E <AmiBlitz3.ab2@20200>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0002F2A0 <AmiBlitz3.ab2@20201>      If nilen>0
0002F2B0 <AmiBlitz3.ab2@20205>        Poke.l ?include_length,nilen
0002F2CE <AmiBlitz3.ab2@20208>    !asm
0002F2D8 <AmiBlitz3.ab2@20209>    MOVE.l #0,include_process
0002F2DE <AmiBlitz3.ab2@20210>    MOVE.l include_length,D0
0002F2E4 <AmiBlitz3.ab2@20211>    LEA inctab,a0
0002F2E6 <AmiBlitz3.ab2@20212>    MOVEQ #0,d1
0002F2EC <AmiBlitz3.ab2@20213>    MOVE.w ininclude,d1
0002F2F0 <AmiBlitz3.ab2@20214>    ADD.l d0,0(a0,d1*4)
0002F2F4 <AmiBlitz3.ab2@20216>   MOVEA.l $4(A2),A5
0002F2F8 <AmiBlitz3.ab2@20218>    MOVE.l 0(a0,d1*4),d0
0002F2FC <AmiBlitz3.ab2@20219>   CLR.b $0(A5,D0.l)
0002F2FE <AmiBlitz3.ab2@20222>   MOVEA.l A5,A0
0002F300 <AmiBlitz3.ab2@20225>     TST.b (A0)+
0002F304 <AmiBlitz3.ab2@20226>   BNE.w JL_0_C114
0002F308 <AmiBlitz3.ab2@20227>   MOVE.l A0,$E(A2)
0002F30A <AmiBlitz3.ab2@20228> RTS
0002F30E <AmiBlitz3.ab2@20231> include_length:        Dc.l 0                              ; for tokenizer!
0002F312 <AmiBlitz3.ab2@20232> include_base:          Dc.l 0
0002F316 <AmiBlitz3.ab2@20233> include_process:       Dc.l 0
0002F31A <AmiBlitz3.ab2@20234> include_preprocessor:  Dc.l 0
0002F31E <AmiBlitz3.ab2@20238>   MOVE.l $8(A2),D1
0002F324 <AmiBlitz3.ab2@20240>   MOVEA.l _dosbase,A6
0002F328 <AmiBlitz3.ab2@20241>   JSR _Close(a6)
0002F32E <AmiBlitz3.ab2@20242>   MOVEA.l _execbase,A6
0002F332 <AmiBlitz3.ab2@20243>   MOVEA.l $4(A2),A1
0002F338 <AmiBlitz3.ab2@20244>   MOVE.l #$400*8,D0                                        ;exit include
0002F33C <AmiBlitz3.ab2@20246>   JSR _FreeVec(a6)
0002F342 <AmiBlitz3.ab2@20249>   MOVE.l (A2),constantbase
0002F344 <AmiBlitz3.ab2@20250>   MOVEA.l A2,A1
0002F346 <AmiBlitz3.ab2@20251>   MOVEQ.l #$00,D0
0002F34A <AmiBlitz3.ab2@20252>   MOVE.b $12(A2),D0
0002F350 <AmiBlitz3.ab2@20253>   MOVEA.l _execbase,A6
0002F356 <AmiBlitz3.ab2@20254>   MOVE.l mempool2,a0
0002F35A <AmiBlitz3.ab2@20255>   JSR _FreePooled(A6)
0002F360 <AmiBlitz3.ab2@20256>   JSR zero_includename
0002F366 <AmiBlitz3.ab2@20257>   SUBQ.w #1,ininclude
0002F36A <AmiBlitz3.ab2@20258>   BNE.w AJL_0_C09E
0002F370 <AmiBlitz3.ab2@20261>   LEA _include,a0
0002F374 <AmiBlitz3.ab2@20262>   MOVEM.l a0-a6/d0-d7,-(a7)
0002F37A <AmiBlitz3.ab2@20263>   LEA ptr_parameterstore,a1
0002F37C <AmiBlitz3.ab2@20266>     MOVE.b (a0)+,(a1)+
0002F380 <AmiBlitz3.ab2@20267>   BNE 'l1b
0002F382 <AmiBlitz3.ab2@20268>   MOVEQ #9,d2
0002F388 <AmiBlitz3.ab2@20269>   JSR findlabel2
0002F38C <AmiBlitz3.ab2@20270>   BNE 'd
0002F390 <AmiBlitz3.ab2@20271>   CLR.l 8(a2)
0002F394 <AmiBlitz3.ab2@20274>   MOVEM.l (a7)+,a0-a6/d0-d7
0002F396 <AmiBlitz3.ab2@20275> RTS
0002F39C <AmiBlitz3.ab2@20279>   MOVE.l unusedfunc,d0
0002F3A0 <AmiBlitz3.ab2@20280>   BEQ 'noclear
0002F3A4 <AmiBlitz3.ab2@20281>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0002F3A6 <AmiBlitz3.ab2@20284>     MOVE.l d0,a1
0002F3AA <AmiBlitz3.ab2@20285>     MOVE.l 4(a1),d0
0002F3AC <AmiBlitz3.ab2@20286>     MOVE.l (a1),d2
0002F3B2 <AmiBlitz3.ab2@20287>     MOVE.l _execbase,a6
0002F3B6 <AmiBlitz3.ab2@20288>     JSR _FreeMem(a6)
0002F3B8 <AmiBlitz3.ab2@20289>     MOVE.l d2,d0
0002F3BC <AmiBlitz3.ab2@20290>   BNE 'f1
0002F3C2 <AmiBlitz3.ab2@20291>   CLR.l unusedfunc
0002F3C6 <AmiBlitz3.ab2@20292>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0002F3C8 <AmiBlitz3.ab2@20295> RTS
0002F3CE <AmiBlitz3.ab2@20299>   MOVEA.l xinclude_base,A2
0002F3D4 <AmiBlitz3.ab2@20300>   CLR.l xinclude_base
0002F3D8 <AmiBlitz3.ab2@20303>     CMPA.w #$0,A2
0002F3DC <AmiBlitz3.ab2@20304>      BEQ.w JL_0_C186
0002F3DE <AmiBlitz3.ab2@20305>     MOVEQ.l #$00,D0
0002F3E2 <AmiBlitz3.ab2@20306>     MOVE.b 4+8(A2),D0
0002F3E4 <AmiBlitz3.ab2@20307>     MOVEA.l A2,A1
0002F3E6 <AmiBlitz3.ab2@20308>     MOVEA.l (A2),A2
0002F3EC <AmiBlitz3.ab2@20309>     MOVEA.l _execbase,A6
0002F3F2 <AmiBlitz3.ab2@20310>     MOVE.l mempool2,a0
0002F3F6 <AmiBlitz3.ab2@20311>     JSR _FreePooled(A6)
0002F3FA <AmiBlitz3.ab2@20312> BRA.w JL_0_C168
0002F3FC <AmiBlitz3.ab2@20315> RTS
0002F402 <AmiBlitz3.ab2@20319>   MOVEA.l constantbase,A2
0002F408 <AmiBlitz3.ab2@20320>   CLR.l constantbase
0002F40C <AmiBlitz3.ab2@20323>     CMPA.w #$0,A2
0002F410 <AmiBlitz3.ab2@20324>      BEQ.w JL_0_C1DC
0002F414 <AmiBlitz3.ab2@20325>     MOVE.l $8(A2),D1
0002F418 <AmiBlitz3.ab2@20326>      BEQ.w JL_0_C1AE
0002F41E <AmiBlitz3.ab2@20327>     MOVEA.l _dosbase,A6
0002F422 <AmiBlitz3.ab2@20328>      JSR _Close(A6)
0002F426 <AmiBlitz3.ab2@20331>     MOVE.l $4(A2),D0
0002F42A <AmiBlitz3.ab2@20332>      BEQ.w JL_0_C1C6
0002F42C <AmiBlitz3.ab2@20333>     MOVEA.l D0,A1
0002F432 <AmiBlitz3.ab2@20334>     MOVE.l #$400*8,D0
0002F438 <AmiBlitz3.ab2@20335>     MOVEA.l _execbase,A6
0002F43E <AmiBlitz3.ab2@20336>     MOVE.l mempool,a0
0002F442 <AmiBlitz3.ab2@20337>     JSR _FreeVec(a6)
0002F444 <AmiBlitz3.ab2@20340>     MOVEQ.l #$00,D0
0002F448 <AmiBlitz3.ab2@20341>     MOVE.b $12(A2),D0
0002F44A <AmiBlitz3.ab2@20342>     MOVEA.l A2,A1
0002F44C <AmiBlitz3.ab2@20343>     MOVEA.l (A2),A2
0002F452 <AmiBlitz3.ab2@20344>     MOVEA.l _execbase,A6
0002F458 <AmiBlitz3.ab2@20345>     MOVE.l mempool2,a0
0002F45C <AmiBlitz3.ab2@20346>     JSR _FreePooled(A6)
0002F460 <AmiBlitz3.ab2@20347> BRA.w JL_0_C194
0002F462 <AmiBlitz3.ab2@20350> RTS
0002F464 <AmiBlitz3.ab2@20354>   SWAP D0
0002F468 <AmiBlitz3.ab2@20355>    BSR.w JL_0_C1E6
0002F46A <AmiBlitz3.ab2@20356>   SWAP D0
0002F470 <AmiBlitz3.ab2@20359>   MOVEA.l data2,A4
0002F476 <AmiBlitz3.ab2@20360>   CMPA.l allat,A4
0002F47A <AmiBlitz3.ab2@20361>    BCC.w JL_0_C200
0002F47C <AmiBlitz3.ab2@20362>   MOVE.w D0,(A4)+
0002F482 <AmiBlitz3.ab2@20363>   MOVE.l A4,data2
0002F484 <AmiBlitz3.ab2@20364> RTS
0002F48C <AmiBlitz3.ab2@20367>   MOVE.w #$FFFF,dontwrite
0002F492 <AmiBlitz3.ab2@20368>   ADDQ.l #2,data2
0002F494 <AmiBlitz3.ab2@20369> RTS
0002F49A <AmiBlitz3.ab2@20373>   MOVEA.l data2,A4
0002F4A0 <AmiBlitz3.ab2@20374>   CMPA.l allat,A4
0002F4A4 <AmiBlitz3.ab2@20375>    BCC.w JL_0_C22A
0002F4A6 <AmiBlitz3.ab2@20376>   MOVE.b D0,(A4)+
0002F4AC <AmiBlitz3.ab2@20377>   MOVE.l A4,data2
0002F4AE <AmiBlitz3.ab2@20378> RTS
0002F4B6 <AmiBlitz3.ab2@20381>   MOVE.w #$FFFF,dontwrite
0002F4BC <AmiBlitz3.ab2@20382>   ADDQ.l #1,data2
0002F4BE <AmiBlitz3.ab2@20383> RTS
0002F4C2 <AmiBlitz3.ab2@20387>   CMP.w #$22,D0
0002F4C6 <AmiBlitz3.ab2@20388>    BNE.w syntaxerr
0002F4CC <AmiBlitz3.ab2@20392>   JSR get1bytemain
0002F4D0 <AmiBlitz3.ab2@20393>   CMP.b #$22,D0
0002F4D4 <AmiBlitz3.ab2@20394>    BEQ.w JL_0_C25A
0002F4D6 <AmiBlitz3.ab2@20395>   TST.w D0
0002F4DA <AmiBlitz3.ab2@20396>    BEQ.w syntaxerr
0002F4DC <AmiBlitz3.ab2@20397>   MOVE.b D0,(A0)+
0002F4E0 <AmiBlitz3.ab2@20398> BRA.w JL_0_C242
0002F4E2 <AmiBlitz3.ab2@20401>   CLR.b (A0)
0002F4E4 <AmiBlitz3.ab2@20402> RTS
0002F4E6 <AmiBlitz3.ab2@20405>   TST.l D3
0002F4E8 <AmiBlitz3.ab2@20406> RTS
0002F4EE <AmiBlitz3.ab2@20409>   LEA ptr_parameterstore,A0
0002F4F4 <AmiBlitz3.ab2@20410>   LEA namebuff2,A1
0002F4F6 <AmiBlitz3.ab2@20413>     MOVE.b (A0)+,D0
0002F4FA <AmiBlitz3.ab2@20414>     BEQ.w JL_0_C27C
0002F4FC <AmiBlitz3.ab2@20415>   CMP.b (A1)+,D0
0002F500 <AmiBlitz3.ab2@20416>   BEQ.w JL_0_C26E
0002F502 <AmiBlitz3.ab2@20417> RTS
0002F504 <AmiBlitz3.ab2@20420>   TST.b (A1)
0002F508 <AmiBlitz3.ab2@20421>   BNE.w JL_0_C284
0002F50A <AmiBlitz3.ab2@20422> RTS
0002F50E <AmiBlitz3.ab2@20425>   CMP.w #$1,D0
0002F510 <AmiBlitz3.ab2@20426> RTS
0002F514 <AmiBlitz3.ab2@20430>   CMP.w #$2E,D0                                            ;dodeftype
0002F518 <AmiBlitz3.ab2@20431>    BNE.w syntaxerr
0002F51C <AmiBlitz3.ab2@20432>   BSR.w getparameter2
0002F522 <AmiBlitz3.ab2@20433>   LEA newtypebase,A2
0002F526 <AmiBlitz3.ab2@20434>   BSR.w findtype
0002F52A <AmiBlitz3.ab2@20435>    BNE.w notypeerr
0002F530 <AmiBlitz3.ab2@20436>   TST.b declare
0002F534 <AmiBlitz3.ab2@20437>    BNE 'l1
0002F53A <AmiBlitz3.ab2@20438>   TST.b declare2
0002F53E <AmiBlitz3.ab2@20439>    BEQ 'l2
0002F546 <AmiBlitz3.ab2@20442>   MOVE.b #2,nowdeclare
0002F54C <AmiBlitz3.ab2@20446>   JSR reget
0002F550 <AmiBlitz3.ab2@20447>    BNE.w JL_0_C2B4
0002F556 <AmiBlitz3.ab2@20448>   MOVE.l A2,defaulttype
0002F558 <AmiBlitz3.ab2@20449> RTS
0002F55E <AmiBlitz3.ab2@20452>   MOVE.l defaulttype,-(A7)
0002F564 <AmiBlitz3.ab2@20453>   MOVE.l A2,defaulttype
0002F568 <AmiBlitz3.ab2@20456>   BSR.w getparameter
0002F56C <AmiBlitz3.ab2@20457>    BSR.w JL_0_8E3C
0002F570 <AmiBlitz3.ab2@20458>   CMP.w #$2C,D0
0002F574 <AmiBlitz3.ab2@20459>    BNE.w JL_0_C2D8
0002F57A <AmiBlitz3.ab2@20460>    JSR get1bytemain                                        ; was BSR.w
0002F57E <AmiBlitz3.ab2@20461> BRA.w JL_0_C2C0
0002F584 <AmiBlitz3.ab2@20464>   MOVE.l (A7)+,defaulttype
0002F586 <AmiBlitz3.ab2@20465> RTS
0002F58A <AmiBlitz3.ab2@20469>   LEA $4(A5),A2                                            ;fehler function
0002F58C <AmiBlitz3.ab2@20472>   MOVE.l A2,D0
0002F590 <AmiBlitz3.ab2@20475>   BSR.w getparameter
0002F594 <AmiBlitz3.ab2@20476>   BSR.w JL_0_8E3C
0002F598 <AmiBlitz3.ab2@20477>   BSR.w calcvar
0002F59C <AmiBlitz3.ab2@20478>   CMP.b #$7,D2
0002F5A0 <AmiBlitz3.ab2@20479>    BNE.w mismatcherr
0002F5A4 <AmiBlitz3.ab2@20480>   MOVE.w varmode(PC),-(A7)
0002F5A8 <AmiBlitz3.ab2@20481>   CMP.w #$3D,D0
0002F5AC <AmiBlitz3.ab2@20482>    BNE.w syntaxerr
0002F5B0 <AmiBlitz3.ab2@20483>   BTST #$F,D2
0002F5B4 <AmiBlitz3.ab2@20484>    BNE.w JL_0_C31C
0002F5B8 <AmiBlitz3.ab2@20485>   MOVE.w JL_0_C2E0(PC),D1
0002F5BC <AmiBlitz3.ab2@20486>   BSR.w pokewda5s
0002F5BE <AmiBlitz3.ab2@20487>   MOVE.w D3,D1
0002F5C2 <AmiBlitz3.ab2@20488>   BSR.w writeword
0002F5C6 <AmiBlitz3.ab2@20491>   MOVE.w L_0_C2E4(PC),D1
0002F5CA <AmiBlitz3.ab2@20492>   BSR.w writeword
0002F5D0 <AmiBlitz3.ab2@20493>   ADDQ.w #1,regnum
0002F5D2 <AmiBlitz3.ab2@20494>   MOVEQ.l #$03,D2
0002F5D6 <AmiBlitz3.ab2@20495>   BSR.w eval
0002F5DC <AmiBlitz3.ab2@20496>   MOVE.l #$D000,D1
0002F5E2 <AmiBlitz3.ab2@20497>   MOVE.l d1,lastinstruction
0002F5E4 <AmiBlitz3.ab2@20498>   TST.w (A7)+
0002F5E8 <AmiBlitz3.ab2@20499>    BEQ.w Atokejsr
0002F5EA <AmiBlitz3.ab2@20500>   ADDQ.w #1,D1
0002F5EE <AmiBlitz3.ab2@20501> BRA.w Atokejsr
0002F5F0 <AmiBlitz3.ab2@20505>   MOVE.w D0,D1
0002F5F4 <AmiBlitz3.ab2@20506>    BPL.w syntaxerr
0002F5F8 <AmiBlitz3.ab2@20507>   BCLR #$F,D1
0002F5FE <AmiBlitz3.ab2@20508>    JSR searchinstr
0002F602 <AmiBlitz3.ab2@20509>   MOVE.l $12(A2),D0
0002F606 <AmiBlitz3.ab2@20510>   TST.w -$2(A2,D0.L)
0002F60A <AmiBlitz3.ab2@20511>    BEQ.w freeerr
0002F60C <AmiBlitz3.ab2@20512>   MOVEQ.l #$02,D2
0002F60E <AmiBlitz3.ab2@20513>   MOVE.l A2,-(A7)
0002F612 <AmiBlitz3.ab2@20514>    BSR.w eval
0002F614 <AmiBlitz3.ab2@20515>   MOVEA.l (A7)+,A2
0002F61A <AmiBlitz3.ab2@20516>   MOVE.l A2,mymaxlib
0002F61E <AmiBlitz3.ab2@20517>   ADDA.l $12(A2),A2
0002F624 <AmiBlitz3.ab2@20518>   TST.b debugmode
0002F628 <AmiBlitz3.ab2@20519>    BEQ.w JL_0_C3A8
0002F62E <AmiBlitz3.ab2@20520>   MOVE.w regnum,D1
0002F630 <AmiBlitz3.ab2@20521>   LSL.w #8,D1
0002F632 <AmiBlitz3.ab2@20522>   LSL.w #1,D1
0002F636 <AmiBlitz3.ab2@20523>   ORI.w #$B07C,D1
0002F63A <AmiBlitz3.ab2@20524>    BSR.w writeword
0002F63E <AmiBlitz3.ab2@20525>   MOVE.w -$4(A2),D1
0002F642 <AmiBlitz3.ab2@20526>    BSR.w writeword
0002F648 <AmiBlitz3.ab2@20527>   MOVE.l maxchk,D1
0002F64C <AmiBlitz3.ab2@20528>    BSR.w writelong
0002F64E <AmiBlitz3.ab2@20529>   MOVE.l A2,-(A7)
0002F652 <AmiBlitz3.ab2@20530>   MOVE.w #$C30A,D1
0002F656 <AmiBlitz3.ab2@20531>    BSR.w Atokejsr
0002F658 <AmiBlitz3.ab2@20532>   MOVEA.l (A7)+,A2
0002F65C <AmiBlitz3.ab2@20535>   MOVE.w -$2(A2),D2
0002F662 <AmiBlitz3.ab2@20538>   MOVE.w regnum,D1
0002F668 <AmiBlitz3.ab2@20539>   OR.w lslimm,D1
0002F66C <AmiBlitz3.ab2@20540>   CMP.w #$8,D2
0002F670 <AmiBlitz3.ab2@20541>    BCS.w JL_0_C3CE
0002F674 <AmiBlitz3.ab2@20542>    BSR.w writeword
0002F676 <AmiBlitz3.ab2@20543>   SUBQ.w #8,D2
0002F67A <AmiBlitz3.ab2@20544>    BNE.w JL_0_C3AC
0002F67E <AmiBlitz3.ab2@20545> BRA.w JL_0_C3DA
0002F680 <AmiBlitz3.ab2@20548>   MOVE.w D2,D0
0002F682 <AmiBlitz3.ab2@20549>   LSL.w #8,D0
0002F684 <AmiBlitz3.ab2@20550>   LSL.w #1,D0
0002F686 <AmiBlitz3.ab2@20551>   OR.w D0,D1
0002F68A <AmiBlitz3.ab2@20552>   BSR.w writeword
0002F68C <AmiBlitz3.ab2@20555> RTS
0002F690 <AmiBlitz3.ab2@20560>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0002F692 <AmiBlitz3.ab2@20561>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0002F696 <AmiBlitz3.ab2@20565> mymaxlib:  Ds.l 1
0002F69A <AmiBlitz3.ab2@20569>   BSR.w JL_0_C340
0002F69E <AmiBlitz3.ab2@20570>   LEA free(PC),A0
0002F6A2 <AmiBlitz3.ab2@20571>   LEA freef(PC),A1
0002F6A8 <AmiBlitz3.ab2@20572>   MOVE.w -$6(A2),$2(A0)
0002F6AC <AmiBlitz3.ab2@20573>   BSR.w pokecode
0002F6B0 <AmiBlitz3.ab2@20574>   MOVE.l -$A(A2),D1
0002F6B4 <AmiBlitz3.ab2@20577>   BEQ.w nosuperr
0002F6B8 <AmiBlitz3.ab2@20578>   MOVEA.l mymaxlib(PC),A2
0002F6BC <AmiBlitz3.ab2@20579> BRA.w Amakelibsub
0002F6C0 <AmiBlitz3.ab2@20584>   BSR.w JL_0_C340
0002F6C6 <AmiBlitz3.ab2@20585>   LEA use,A0
0002F6CC <AmiBlitz3.ab2@20586>   LEA usef,A1
0002F6D2 <AmiBlitz3.ab2@20587>   MOVE.w -$6(A2),$2(A0)
0002F6D8 <AmiBlitz3.ab2@20588>   MOVE.w -$6(A2),-$2(A1)
0002F6DC <AmiBlitz3.ab2@20589>   ADDQ.w #4,-$2(A1)
0002F6E0 <AmiBlitz3.ab2@20590>   BSR.w pokecode
0002F6E4 <AmiBlitz3.ab2@20591>   MOVE.l -$E(A2),D1
0002F6E8 <AmiBlitz3.ab2@20592> BRA.w maxjsr
0002F6EE <AmiBlitz3.ab2@20596>   JSR get1bytemain
0002F6F4 <AmiBlitz3.ab2@20600>   MOVE.l firstiff,D0
0002F6F8 <AmiBlitz3.ab2@20601>    BEQ.w noiferr
0002F6FA <AmiBlitz3.ab2@20602>   MOVEA.l D0,A0
0002F700 <AmiBlitz3.ab2@20603>   CMPI.b #$1,$D(A0)
0002F704 <AmiBlitz3.ab2@20604>    BEQ.w illelseerr
0002F708 <AmiBlitz3.ab2@20605>   MOVE.w #$6000,D1
0002F70E <AmiBlitz3.ab2@20607>     TST.b fast
0002F712 <AmiBlitz3.ab2@20608>     BEQ 'l1
0002F718 <AmiBlitz3.ab2@20609>     OR.l #$ff,d1
0002F71C <AmiBlitz3.ab2@20610>     BSR writeword
0002F71E <AmiBlitz3.ab2@20614>   SWAP D1
0002F722 <AmiBlitz3.ab2@20615>   BSR.w writelong
0002F724 <AmiBlitz3.ab2@20616>   MOVEQ.l #$00,D1
0002F728 <AmiBlitz3.ab2@20617>   BSR.w AJL_0_D7B8
0002F730 <AmiBlitz3.ab2@20618>   MOVE.l destpointer,$8(A0)
0002F734 <AmiBlitz3.ab2@20619> BRA.w do_then
0002F73A <AmiBlitz3.ab2@20623>   LEA ptr_parameterstore,A0
0002F73C <AmiBlitz3.ab2@20624>   MOVE.l A0,-(A7)
0002F740 <AmiBlitz3.ab2@20625>   BSR.w JL_0_C23A
0002F744 <AmiBlitz3.ab2@20626> BRA.w handle_compileerror
0002F748 <AmiBlitz3.ab2@20630>   BSR.w JL_0_BF6A
0002F74A <AmiBlitz3.ab2@20631>   MOVEQ.l #$05,D1
0002F754 <AmiBlitz3.ab2@20633>   MOVE.w oldqflag,instringon
0002F75A <AmiBlitz3.ab2@20634>   MOVEA.l lastsourcepos,A5
0002F760 <AmiBlitz3.ab2@20635>   LEA AJL_0_C25E,A0
0002F764 <AmiBlitz3.ab2@20636> BRA.w JL_0_C4B4
0002F76A <AmiBlitz3.ab2@20640>   LEA ptr_parameterstore,A0
0002F76E <AmiBlitz3.ab2@20641>   BSR.w JL_0_C23A
0002F774 <AmiBlitz3.ab2@20642>   JSR get1bytemain
0002F778 <AmiBlitz3.ab2@20643>   BSR.w JL_0_CCA8
0002F77E <AmiBlitz3.ab2@20644>   LEA namebuff2,A0
0002F782 <AmiBlitz3.ab2@20645>   BSR.w JL_0_C23A
0002F788 <AmiBlitz3.ab2@20646>   LEA AJL_0_C262,A0
0002F78A <AmiBlitz3.ab2@20649>   LSL.w #2,D1
0002F790 <AmiBlitz3.ab2@20650>   LEA CIF_branches,A1
0002F794 <AmiBlitz3.ab2@20651>   MOVE.l $0(A1,D1.W),-(A7)
0002F796 <AmiBlitz3.ab2@20652>   MOVEQ.l #-$01,D1
0002F798 <AmiBlitz3.ab2@20655>   JSR (A0)
0002F79A <AmiBlitz3.ab2@20656>   MOVEA.l (A7)+,A1
0002F79C <AmiBlitz3.ab2@20659> JMP (A1)
0002F7A0 <AmiBlitz3.ab2@20663>   BEQ.w JL_0_C4F6
0002F7A4 <AmiBlitz3.ab2@20664> BRA.w JL_0_C4F4
0002F7A8 <AmiBlitz3.ab2@20668>   BNE.w JL_0_C4F6
0002F7AC <AmiBlitz3.ab2@20669> BRA.w JL_0_C4F4
0002F7B0 <AmiBlitz3.ab2@20673>   BLT.w JL_0_C4F6
0002F7B4 <AmiBlitz3.ab2@20674> BRA.w JL_0_C4F4
0002F7B8 <AmiBlitz3.ab2@20678>   BLE.w JL_0_C4F6
0002F7BC <AmiBlitz3.ab2@20679> BRA.w JL_0_C4F4
0002F7C0 <AmiBlitz3.ab2@20683>   BGT.w JL_0_C4F6
0002F7C4 <AmiBlitz3.ab2@20684> BRA.w JL_0_C4F4
0002F7C8 <AmiBlitz3.ab2@20688>   BGE.w JL_0_C4F6
0002F7CA <AmiBlitz3.ab2@20691>   MOVEQ.l #$00,D1
0002F7D0 <AmiBlitz3.ab2@20694>   MOVEA.l concomsp,A0
0002F7D6 <AmiBlitz3.ab2@20695>   MOVE.w skipcode,(A0)+
0002F7DC <AmiBlitz3.ab2@20696>   MOVE.l A0,concomsp
0002F7E2 <AmiBlitz3.ab2@20697>   MOVE.w D1,skipcode
0002F7E8 <AmiBlitz3.ab2@20698>   JSR get1bytemain
0002F7EC <AmiBlitz3.ab2@20699>    BNE.w syntaxerr
0002F7F2 <AmiBlitz3.ab2@20700> JMP bakup
0002F7FA <AmiBlitz3.ab2@20704> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0002F7FE <AmiBlitz3.ab2@20705> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0002F802 <AmiBlitz3.ab2@20712>   MOVE.w #$FC17,D1
0002F808 <AmiBlitz3.ab2@20713>   JSR uselib
0002F80E <AmiBlitz3.ab2@20715>   JSR reget
0002F812 <AmiBlitz3.ab2@20716>    BEQ.w do_Restore__resbeg
0002F816 <AmiBlitz3.ab2@20717>   BSR.w JL_0_AE22                                          ;get label name!
0002F81A <AmiBlitz3.ab2@20718>   MOVE.w rescode(PC),D1
0002F81E <AmiBlitz3.ab2@20719>   BSR.w writeword
0002F824 <AmiBlitz3.ab2@20720>   JSR addoff                                               ;add offset
0002F828 <AmiBlitz3.ab2@20721>   MOVE.l $C(A2),D1
0002F82C <AmiBlitz3.ab2@20722>   BSR.w writelong
0002F830 <AmiBlitz3.ab2@20723>   MOVE.w rescode+6(PC),D1
0002F834 <AmiBlitz3.ab2@20724>   BSR.w writeword
0002F838 <AmiBlitz3.ab2@20725>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0002F83C <AmiBlitz3.ab2@20726>   BEQ.w do_Restore__no
0002F83E <AmiBlitz3.ab2@20728>   MOVEA.l D1,A1
0002F842 <AmiBlitz3.ab2@20729>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0002F844 <AmiBlitz3.ab2@20730> RTS
0002F846 <AmiBlitz3.ab2@20735> RTS
0002F84A <AmiBlitz3.ab2@20738>   MOVE.w #$CD00,D1
0002F850 <AmiBlitz3.ab2@20739>   JSR Atokejsr
0002F854 <AmiBlitz3.ab2@20740>   MOVE.l rescode2(PC),D1
0002F85A <AmiBlitz3.ab2@20741> JMP writelong
0002F85E <AmiBlitz3.ab2@20745>   MOVE.w #$FC17,D1
0002F864 <AmiBlitz3.ab2@20746>   JSR uselib
0002F86A <AmiBlitz3.ab2@20749>   MOVE.l dataget,D1
0002F86E <AmiBlitz3.ab2@20750>   BSR.w writelong
0002F872 <AmiBlitz3.ab2@20751>   BSR.w getparameter
0002F876 <AmiBlitz3.ab2@20752>   BSR.w JL_0_8E3C
0002F87A <AmiBlitz3.ab2@20753>   BSR.w calcvar
0002F87E <AmiBlitz3.ab2@20754>   BTST #$E,D2
0002F882 <AmiBlitz3.ab2@20755>    BEQ.w JL_0_C5A6
0002F886 <AmiBlitz3.ab2@20756>   MOVE.b #$6,D2
0002F888 <AmiBlitz3.ab2@20759>   TST.b D2
0002F88C <AmiBlitz3.ab2@20760>    BEQ.w noleterr
0002F892 <AmiBlitz3.ab2@20761>   TST.b debugmode
0002F896 <AmiBlitz3.ab2@20762>    BEQ.w JL_0_C5D0
0002F89A <AmiBlitz3.ab2@20763>   MOVE.w #$7000,D1
0002F89C <AmiBlitz3.ab2@20764>   MOVE.b D2,D1
0002F8A0 <AmiBlitz3.ab2@20765>   ANDI.b #$F,D1
0002F8A4 <AmiBlitz3.ab2@20766>   BSR.w writeword
0002F8A8 <AmiBlitz3.ab2@20767>   MOVE.w #$C310,D1
0002F8AA <AmiBlitz3.ab2@20768>   MOVE.w D2,-(A7)
0002F8AE <AmiBlitz3.ab2@20769>   BSR.w Atokejsr
0002F8B0 <AmiBlitz3.ab2@20770>   MOVE.w (A7)+,D2
0002F8B4 <AmiBlitz3.ab2@20773>   CMP.b #$7,D2
0002F8B8 <AmiBlitz3.ab2@20774>    BEQ.w JL_0_C684
0002F8BC <AmiBlitz3.ab2@20775>   CMP.b #$1,D2
0002F8C0 <AmiBlitz3.ab2@20776>    BNE.w JL_0_C62A
0002F8C6 <AmiBlitz3.ab2@20777>   LEA dataletb2,A0
0002F8CC <AmiBlitz3.ab2@20778>   LEA dataletb2f,A1
0002F8D0 <AmiBlitz3.ab2@20779>   BTST #$F,D2
0002F8D4 <AmiBlitz3.ab2@20780>    BEQ.w JL_0_C5FC
0002F8D8 <AmiBlitz3.ab2@20781>   BSR.w pokecode
0002F8DC <AmiBlitz3.ab2@20782> BRA.w JL_0_C668
0002F8E2 <AmiBlitz3.ab2@20785>   LEA dataletb,A0
0002F8E8 <AmiBlitz3.ab2@20786>   LEA dataletbf,A1
0002F8EE <AmiBlitz3.ab2@20787>   TST.w varmode
0002F8F2 <AmiBlitz3.ab2@20788>    BEQ.w JL_0_C61E
0002F8F8 <AmiBlitz3.ab2@20789>   LEA dataletbl,A0
0002F8FE <AmiBlitz3.ab2@20790>   LEA dataletblf,A1
0002F902 <AmiBlitz3.ab2@20793>   MOVE.w D3,$4(A0)
0002F906 <AmiBlitz3.ab2@20794>   BSR.w pokecode
0002F90A <AmiBlitz3.ab2@20795> BRA.w JL_0_C668
0002F910 <AmiBlitz3.ab2@20798>   LEA dataletw,A0
0002F914 <AmiBlitz3.ab2@20799>   CMP.b #$3,D2
0002F918 <AmiBlitz3.ab2@20800>    BCS.w JL_0_C63E
0002F91E <AmiBlitz3.ab2@20801>   LEA dataletl,A0
0002F922 <AmiBlitz3.ab2@20804>   BTST #$F,D2
0002F926 <AmiBlitz3.ab2@20805>    BEQ.w JL_0_C652
0002F92A <AmiBlitz3.ab2@20806>   MOVE.w $4(A0),D1
0002F92E <AmiBlitz3.ab2@20807>    BSR.w writeword
0002F932 <AmiBlitz3.ab2@20808> BRA.w JL_0_C668
0002F938 <AmiBlitz3.ab2@20811>   TST.w varmode
0002F93C <AmiBlitz3.ab2@20812>    BEQ.w JL_0_C65E
0002F93E <AmiBlitz3.ab2@20813>   ADDQ.w #6,A0
0002F942 <AmiBlitz3.ab2@20816>   MOVE.w D3,$2(A0)
0002F944 <AmiBlitz3.ab2@20817>   MOVE.l (A0),D1
0002F948 <AmiBlitz3.ab2@20818>   BSR.w writelong
0002F94E <AmiBlitz3.ab2@20821>   MOVE.l dataput,D1
0002F952 <AmiBlitz3.ab2@20822>    BSR.w writelong
0002F956 <AmiBlitz3.ab2@20823>   CMP.w #$2C,D0
0002F95A <AmiBlitz3.ab2@20824>    BEQ.w JL_0_C67C
0002F95C <AmiBlitz3.ab2@20825> RTS
0002F962 <AmiBlitz3.ab2@20828>   JSR get1bytemain
0002F966 <AmiBlitz3.ab2@20829> BRA.w JL_0_C584
0002F96C <AmiBlitz3.ab2@20833>   MOVE.w stlenget,D1
0002F970 <AmiBlitz3.ab2@20834>    BSR.w writeword
0002F974 <AmiBlitz3.ab2@20835>   BTST #$F,D2
0002F978 <AmiBlitz3.ab2@20836>    BNE.w JL_0_C6C0
0002F97E <AmiBlitz3.ab2@20837>   TST.w varmode
0002F982 <AmiBlitz3.ab2@20838>    BEQ.w JL_0_C6B0
0002F988 <AmiBlitz3.ab2@20839>   MOVE.w D3,leaampl+2
0002F98E <AmiBlitz3.ab2@20840>   MOVE.l leaampl,D1
0002F992 <AmiBlitz3.ab2@20841> BRA.w JL_0_C6BC
0002F998 <AmiBlitz3.ab2@20844>   MOVE.w D3,leaamp+2
0002F99E <AmiBlitz3.ab2@20845>   MOVE.l leaamp,D1
0002F9A2 <AmiBlitz3.ab2@20848>   BSR.w writelong
0002F9A6 <AmiBlitz3.ab2@20851>   MOVE.w #$C701,D1
0002F9AC <AmiBlitz3.ab2@20852>   MOVE.w varmode,D2
0002F9B0 <AmiBlitz3.ab2@20853>    BEQ.w JL_0_C6D0
0002F9B2 <AmiBlitz3.ab2@20854>   SUBQ.w #1,D1
0002F9B6 <AmiBlitz3.ab2@20857>   BSR.w Atokejsr
0002F9BE <AmiBlitz3.ab2@20858>   MOVE.w #$FFFF,lasta6
0002F9C4 <AmiBlitz3.ab2@20859>   LEA stalign,A0
0002F9CA <AmiBlitz3.ab2@20860>   LEA stalignf,A1
0002F9CE <AmiBlitz3.ab2@20861>   BSR.w pokecode
0002F9D2 <AmiBlitz3.ab2@20862> BRA.w JL_0_C668
0002F9D6 <AmiBlitz3.ab2@20866>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0002F9DA <AmiBlitz3.ab2@20867>    BNE.w JL_0_C720
0002F9E0 <AmiBlitz3.ab2@20868>   JSR get1bytemain
0002F9E4 <AmiBlitz3.ab2@20869>   CMP.w #$77,D0
0002F9E8 <AmiBlitz3.ab2@20870>    BEQ.w JL_0_C71C
0002F9EC <AmiBlitz3.ab2@20871>   CMP.w #$62,D0
0002F9F0 <AmiBlitz3.ab2@20872>    BEQ.w JL_0_C718
0002F9F4 <AmiBlitz3.ab2@20873>   CMP.w #"s",d0
0002F9F8 <AmiBlitz3.ab2@20874>   BEQ single3
0002F9FC <AmiBlitz3.ab2@20875>   CMP.w #"d",d0
0002FA00 <AmiBlitz3.ab2@20876>   BEQ double3
0002FA04 <AmiBlitz3.ab2@20877>   CMP.w #$6C,D0
0002FA08 <AmiBlitz3.ab2@20878>    BNE.w syntaxerr
0002FA0A <AmiBlitz3.ab2@20879>   MOVEQ.l #$02,D1
0002FA0C <AmiBlitz3.ab2@20880> RTS
0002FA14 <AmiBlitz3.ab2@20884>   MOVE.b #1,iee
0002FA16 <AmiBlitz3.ab2@20885>   MOVEQ.l #$3,d1
0002FA18 <AmiBlitz3.ab2@20886> RTS
0002FA20 <AmiBlitz3.ab2@20890>   MOVE.b #1,iee
0002FA22 <AmiBlitz3.ab2@20891>   MOVEQ.l #$4,d1
0002FA24 <AmiBlitz3.ab2@20892> RTS
0002FA26 <AmiBlitz3.ab2@20896>   MOVEQ.l #$00,D1
0002FA28 <AmiBlitz3.ab2@20897> RTS
0002FA2A <AmiBlitz3.ab2@20901>   MOVEQ.l #$01,D1
0002FA2C <AmiBlitz3.ab2@20902> RTS
0002FA2E <AmiBlitz3.ab2@20906>   MOVEQ.l #$01,D1
0002FA34 <AmiBlitz3.ab2@20907> JMP bakup
0002FA38 <AmiBlitz3.ab2@20911>   BSR.w JL_0_C6F0
0002FA3A <AmiBlitz3.ab2@20913>   MOVE.w D1,-(A7)
0002FA3E <AmiBlitz3.ab2@20914>    BSR.w AJL_0_BF6E
0002FA42 <AmiBlitz3.ab2@20915>   CMP.w #$2C,D0
0002FA46 <AmiBlitz3.ab2@20916>    BNE.w syntaxerr
0002FA48 <AmiBlitz3.ab2@20917>   MOVE.l D3,-(A7)
0002FA4C <AmiBlitz3.ab2@20918>    BSR.w AJL_0_BF6E
0002FA4E <AmiBlitz3.ab2@20919>   MOVE.l D3,D1
0002FA50 <AmiBlitz3.ab2@20920>   MOVE.l (A7)+,D3
0002FA52 <AmiBlitz3.ab2@20921>   MOVE.w (A7)+,D2
0002FA56 <AmiBlitz3.ab2@20922>    BEQ.w JL_0_C774
0002FA5A <AmiBlitz3.ab2@20926>   CMP.w #$1,D2
0002FA5E <AmiBlitz3.ab2@20927>    BEQ.w JL_0_C768
0002FA60 <AmiBlitz3.ab2@20930>   SWAP D1
0002FA64 <AmiBlitz3.ab2@20931>    BSR.w writeword
0002FA66 <AmiBlitz3.ab2@20932>   SWAP D1
0002FA6A <AmiBlitz3.ab2@20933>    BSR.w writeword
0002FA6C <AmiBlitz3.ab2@20934>   SUBQ.l #1,D3
0002FA70 <AmiBlitz3.ab2@20935>    BNE.w JL_0_C754
0002FA72 <AmiBlitz3.ab2@20936> RTS
0002FA76 <AmiBlitz3.ab2@20939>    BSR.w writeword
0002FA78 <AmiBlitz3.ab2@20940>   SUBQ.l #1,D3
0002FA7C <AmiBlitz3.ab2@20941>    BNE.w JL_0_C768
0002FA7E <AmiBlitz3.ab2@20942> RTS
0002FA82 <AmiBlitz3.ab2@20945>    BSR.w writebyte
0002FA84 <AmiBlitz3.ab2@20946>   SUBQ.l #1,D3
0002FA88 <AmiBlitz3.ab2@20947>    BNE.w JL_0_C774
0002FA8A <AmiBlitz3.ab2@20948> RTS
0002FA8E <AmiBlitz3.ab2@20952>   BSR.w JL_0_C6F0                                          ;definestorage
0002FA90 <AmiBlitz3.ab2@20953>   MOVE.w D1,-(A7)
0002FA94 <AmiBlitz3.ab2@20954>   BSR.w AJL_0_BF6E
0002FA96 <AmiBlitz3.ab2@20955>   MOVE.w (A7)+,D1
0002FA98 <AmiBlitz3.ab2@20956>   LSL.l D1,D3
0002FA9A <AmiBlitz3.ab2@20957>   MOVE.l d3,d0
0002FA9E <AmiBlitz3.ab2@20958>   BEQ 'll5
0002FAA0 <AmiBlitz3.ab2@20959>   MOVEQ #0,d1
0002FAA6 <AmiBlitz3.ab2@20962>     JSR writebyte
0002FAA8 <AmiBlitz3.ab2@20963>     SUBQ.l #1,d3
0002FAAC <AmiBlitz3.ab2@20964>   BNE.s 'll10
0002FAAE <AmiBlitz3.ab2@20967> RTS
0002FAB0 <AmiBlitz3.ab2@20971>   MOVE.w D0,-(A7)
0002FAB6 <AmiBlitz3.ab2@20972>   LEA dummyasm,A0
0002FABC <AmiBlitz3.ab2@20973>   MOVEA.l destpointer,A1
0002FAC6 <AmiBlitz3.ab2@20974>   MOVE.w asmlen2,asmlen
0002FACC <AmiBlitz3.ab2@20975>   JSR insasm
0002FACE <AmiBlitz3.ab2@20976>   MOVE.w (A7)+,D0
0002FAD0 <AmiBlitz3.ab2@20977> RTS
0002FAD4 <AmiBlitz3.ab2@20981>   BSR.w JL_0_C6F0
0002FADE <AmiBlitz3.ab2@20983>   MOVE.l #ptr_parameterstore,asmbuff
0002FAE0 <AmiBlitz3.ab2@20984>   TST.w D1
0002FAE4 <AmiBlitz3.ab2@20985>    BEQ.w JL_0_C7EE
0002FAE8 <AmiBlitz3.ab2@20986>   CMP.w #$1,D1
0002FAEC <AmiBlitz3.ab2@20987>    BEQ.w JL_0_C844
0002FAF0 <AmiBlitz3.ab2@20988>   CMP.w #$2,d1
0002FAF4 <AmiBlitz3.ab2@20989>    BEQ long
0002FAF8 <AmiBlitz3.ab2@20990>   CMP.w #$3,d1
0002FAFC <AmiBlitz3.ab2@20991>    BEQ single
0002FAFE <AmiBlitz3.ab2@20992>    MOVEQ.l #$0d,D3
0002FB04 <AmiBlitz3.ab2@20998>    JSR asmconst
0002FB08 <AmiBlitz3.ab2@20999>    BSR.w JL_0_C796
0002FB0C <AmiBlitz3.ab2@21000>    BSR.w writelong
0002FB10 <AmiBlitz3.ab2@21001>    BSR   writelong
0002FB14 <AmiBlitz3.ab2@21002>   CMP.w #$2C,D0
0002FB18 <AmiBlitz3.ab2@21003>    BEQ.w JL_0_C7D8b
0002FB1A <AmiBlitz3.ab2@21004> RTS
0002FB1C <AmiBlitz3.ab2@21008>   MOVEQ.l #$0B,D3
0002FB24 <AmiBlitz3.ab2@21012>   MOVE.b #1,_dcb
0002FB2A <AmiBlitz3.ab2@21015>   JSR asmconst
0002FB30 <AmiBlitz3.ab2@21016>   CLR.b _dcb
0002FB34 <AmiBlitz3.ab2@21017>   BSR.w JL_0_C796
0002FB38 <AmiBlitz3.ab2@21018>   BSR writebyte
0002FB3C <AmiBlitz3.ab2@21019>   BSR writebyte
0002FB40 <AmiBlitz3.ab2@21020>   BSR writebyte                                            ;long
0002FB44 <AmiBlitz3.ab2@21021>   BSR writebyte
0002FB48 <AmiBlitz3.ab2@21022>   CMP.w #$2C,D0
0002FB4C <AmiBlitz3.ab2@21023>    BEQ.w JL_0_C7D8
0002FB4E <AmiBlitz3.ab2@21024> RTS
0002FB50 <AmiBlitz3.ab2@21028>   MOVEQ.l #$0c,D3
0002FB58 <AmiBlitz3.ab2@21032>   MOVE.b #1,_dcb
0002FB5E <AmiBlitz3.ab2@21035>   JSR asmconst
0002FB64 <AmiBlitz3.ab2@21036>   CLR.b _dcb
0002FB68 <AmiBlitz3.ab2@21037>   BSR.w JL_0_C796
0002FB6C <AmiBlitz3.ab2@21038>   BSR.w writebyte
0002FB70 <AmiBlitz3.ab2@21039>   BSR.w writebyte
0002FB74 <AmiBlitz3.ab2@21040>   BSR.w writebyte
0002FB78 <AmiBlitz3.ab2@21041>   BSR.w writebyte
0002FB7C <AmiBlitz3.ab2@21042>   CMP.w #$2C,D0
0002FB80 <AmiBlitz3.ab2@21043>    BEQ.w JL_0_C7D8a
0002FB82 <AmiBlitz3.ab2@21044> RTS
0002FB84 <AmiBlitz3.ab2@21049>   MOVEQ.l #$11,D3
0002FB8A <AmiBlitz3.ab2@21052>   JSR get1bytemain
0002FB8E <AmiBlitz3.ab2@21053>   CMP.w #$22,D0
0002FB92 <AmiBlitz3.ab2@21054>    BNE.w JL_0_C81E
0002FB94 <AmiBlitz3.ab2@21057>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0002FB98 <AmiBlitz3.ab2@21058>    BEQ.w syntaxerr
0002FB9C <AmiBlitz3.ab2@21059>   CMP.w #$22,D0
0002FBA0 <AmiBlitz3.ab2@21060>    BEQ.w JL_0_C816
0002FBA4 <AmiBlitz3.ab2@21061>   CMP.b #"\",d0
0002FBA8 <AmiBlitz3.ab2@21062>    BNE 'n1
0002FBAC <AmiBlitz3.ab2@21063>   CMP.b #"\",(a5)
0002FBB0 <AmiBlitz3.ab2@21064>    BEQ 'do1
0002FBB2 <AmiBlitz3.ab2@21067>   MOVE.w D0,D1
0002FBB6 <AmiBlitz3.ab2@21068>   BSR.w writebyte
0002FBBA <AmiBlitz3.ab2@21069> BRA.w JL_0_C7FC
0002FBC2 <AmiBlitz3.ab2@21072>   CMP.l #"__DA",1(a5)
0002FBC6 <AmiBlitz3.ab2@21073>    BNE 'nodate1
0002FBCE <AmiBlitz3.ab2@21074>   CMP.l #"TE__",5(a5)
0002FBD2 <AmiBlitz3.ab2@21075>    BEQ 'c1
0002FBDA <AmiBlitz3.ab2@21076>   CMP.l #"TE_G",5(a5)
0002FBDE <AmiBlitz3.ab2@21077>    BNE 'nodate1
0002FBE6 <AmiBlitz3.ab2@21078>   CMP.l #"ER__",9(a5)
0002FBEA <AmiBlitz3.ab2@21079>    BNE 'nodate1
0002FBF0 <AmiBlitz3.ab2@21080>   JSR compiledatedc_ger
0002FBF4 <AmiBlitz3.ab2@21081> BRA 'n1
0002FBFA <AmiBlitz3.ab2@21084>   JSR compiledatedc
0002FBFE <AmiBlitz3.ab2@21085> BRA 'n1
0002FC06 <AmiBlitz3.ab2@21088>   CMP.l #"__VE",1(a5)
0002FC0A <AmiBlitz3.ab2@21089>    BNE 'n1
0002FC10 <AmiBlitz3.ab2@21090>   CMP.w #"R_",5(a5)
0002FC14 <AmiBlitz3.ab2@21091>    BNE 'n1
0002FC1A <AmiBlitz3.ab2@21092>   JSR version_string_dc
0002FC1E <AmiBlitz3.ab2@21093> BRA.w JL_0_C7FC
0002FC24 <AmiBlitz3.ab2@21097>   CLR.w instringon
0002FC2A <AmiBlitz3.ab2@21098>   JSR get1bytemain
0002FC2E <AmiBlitz3.ab2@21099> BRA.w JL_0_C83A
0002FC38 <AmiBlitz3.ab2@21104>    MOVE.w oldqflag,instringon
0002FC3E <AmiBlitz3.ab2@21105>   MOVEA.l lastsourcepos,A5
0002FC44 <AmiBlitz3.ab2@21106>    JSR asmconst
0002FC4A <AmiBlitz3.ab2@21107>   SUBQ.l #1,destpointer
0002FC4E <AmiBlitz3.ab2@21108>    BSR.w JL_0_C796
0002FC54 <AmiBlitz3.ab2@21109>   ADDQ.l #1,destpointer
0002FC58 <AmiBlitz3.ab2@21110>    BSR.w writebyte
0002FC5C <AmiBlitz3.ab2@21113>   CMP.w #$2C,D0
0002FC60 <AmiBlitz3.ab2@21114>    BEQ.w JL_0_C7F0
0002FC62 <AmiBlitz3.ab2@21115> RTS
0002FC64 <AmiBlitz3.ab2@21119>   MOVEQ.l #$10,D3
0002FC6C <AmiBlitz3.ab2@21125>   MOVE.b #1,_dcb
0002FC72 <AmiBlitz3.ab2@21126>   JSR asmconst
0002FC78 <AmiBlitz3.ab2@21127>   CLR.b _dcb
0002FC7C <AmiBlitz3.ab2@21128>   BSR.w JL_0_C796
0002FC80 <AmiBlitz3.ab2@21129>   BSR.w writebyte
0002FC84 <AmiBlitz3.ab2@21130>   BSR.w writebyte
0002FC88 <AmiBlitz3.ab2@21131>   CMP.w #$2C,D0
0002FC8C <AmiBlitz3.ab2@21132>    BEQ.w JL_0_C84A
0002FC8E <AmiBlitz3.ab2@21133> RTS
0002FC94 <AmiBlitz3.ab2@21137>   ADDQ.l #3,destpointer
0002FC9C <AmiBlitz3.ab2@21138>   ANDI.w #$FFFC,destpointer+2
0002FC9E <AmiBlitz3.ab2@21139> RTS
0002FCA4 <AmiBlitz3.ab2@21143>   ADDQ.l #7,destpointer
0002FCAC <AmiBlitz3.ab2@21144>   ANDI.w #$FFF8,destpointer+2
0002FCAE <AmiBlitz3.ab2@21145> RTS
0002FCB4 <AmiBlitz3.ab2@21149>   ADDQ.l #1,destpointer                                    ;even
0002FCBC <AmiBlitz3.ab2@21150>   BCLR #$0,destpointer+3
0002FCBE <AmiBlitz3.ab2@21151> RTS
0002FCC0 <AmiBlitz3.ab2@21154> datasize: Ds.w 1
0002FCC6 <AmiBlitz3.ab2@21164>   TST.b debugmode
0002FCCA <AmiBlitz3.ab2@21165>   BEQ.w pdt__skip
0002FCCE <AmiBlitz3.ab2@21166>   MOVE.w #$4420,D0                                         ;'D '
0002FCD2 <AmiBlitz3.ab2@21167>   MOVE.b datasize+1(PC),D0
0002FCD6 <AmiBlitz3.ab2@21168> BRA.w JL_0_C1E6
0002FCD8 <AmiBlitz3.ab2@21171> RTS
0002FCDC <AmiBlitz3.ab2@21175>   MOVE.w #$FC17,D1
0002FCE2 <AmiBlitz3.ab2@21176>    JSR uselib
0002FCEC <AmiBlitz3.ab2@21178>    MOVE.w oldqflag,instringon
0002FCF2 <AmiBlitz3.ab2@21179>   MOVEA.l lastsourcepos,A5
0002FCF8 <AmiBlitz3.ab2@21180>    JSR AJL_0_498A
0002FCFE <AmiBlitz3.ab2@21181>   MOVE.w D1,datasize
0002FD02 <AmiBlitz3.ab2@21182>   CMP.w #$7,D1
0002FD06 <AmiBlitz3.ab2@21183>    BEQ.w JL_0_C944
0002FD08 <AmiBlitz3.ab2@21184>   MOVE.w D1,-(A7)
0002FD0C <AmiBlitz3.ab2@21187>   BSR.w pdt
0002FD0E <AmiBlitz3.ab2@21188>   MOVE.w (A7),D2
0002FD12 <AmiBlitz3.ab2@21189>    BSR.w JL_0_B1D8
0002FD14 <AmiBlitz3.ab2@21190>   CMP.w (A7),D2                                            ;datamode
0002FD18 <AmiBlitz3.ab2@21191>    BEQ.w JL_0_C920
0002FD1A <AmiBlitz3.ab2@21192>   MOVE.w D2,D1
0002FD1C <AmiBlitz3.ab2@21193>   MOVE.w (A7),D2
0002FD20 <AmiBlitz3.ab2@21194>   CMP.w #$2,D2
0002FD24 <AmiBlitz3.ab2@21195>    BNE.w JL_0_C8FE
0002FD28 <AmiBlitz3.ab2@21196>   CMP.w #$3,D1
0002FD2C <AmiBlitz3.ab2@21197>    BNE.w baddaterr
0002FD32 <AmiBlitz3.ab2@21198>   CMP.l #$10000,D3
0002FD36 <AmiBlitz3.ab2@21199>    BCC.w baddaterr
0002FD3A <AmiBlitz3.ab2@21200> BRA.w JL_0_C920
0002FD3E <AmiBlitz3.ab2@21203>   CMP.w #$1,D2
0002FD42 <AmiBlitz3.ab2@21204>    BNE.w JL_0_C91C
0002FD46 <AmiBlitz3.ab2@21205>   CMP.w #$2,D1
0002FD4A <AmiBlitz3.ab2@21206>    BNE.w baddaterr
0002FD50 <AmiBlitz3.ab2@21207>   CMP.l #$100,D3
0002FD54 <AmiBlitz3.ab2@21208>    BCC.w baddaterr
0002FD58 <AmiBlitz3.ab2@21209> BRA.w JL_0_C920
0002FD5C <AmiBlitz3.ab2@21212> BRA.w baddaterr
0002FD60 <AmiBlitz3.ab2@21215>   CMP.w #$3,D2
0002FD64 <AmiBlitz3.ab2@21216>   BCC.w JL_0_C930
0002FD68 <AmiBlitz3.ab2@21217>   BSR.w JL_0_C1E6
0002FD6C <AmiBlitz3.ab2@21218> BRA.w JL_0_C934
0002FD72 <AmiBlitz3.ab2@21221>   TST.b iee
0002FD76 <AmiBlitz3.ab2@21222>   BEQ 'old
0002FD7A <AmiBlitz3.ab2@21223>   CMP.b #5,d2
0002FD7E <AmiBlitz3.ab2@21224>   BNE 'old
0002FD82 <AmiBlitz3.ab2@21225>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
0002FD86 <AmiBlitz3.ab2@21229>   BSR.w JL_0_C1DE                                          ;write data >3
0002FD8C <AmiBlitz3.ab2@21232>   JSR reget
0002FD90 <AmiBlitz3.ab2@21233>   CMP.w #$2C,D0
0002FD94 <AmiBlitz3.ab2@21234>    BEQ.w JL_0_C8CC
0002FD96 <AmiBlitz3.ab2@21235>   ADDQ.w #2,A7
0002FD98 <AmiBlitz3.ab2@21236> RTS
0002FD9C <AmiBlitz3.ab2@21239>    BSR.w pdt
0002FDA2 <AmiBlitz3.ab2@21240>   MOVE.l data2,-(A7)
0002FDA6 <AmiBlitz3.ab2@21241>    BSR.w JL_0_C1DE
0002FDA8 <AmiBlitz3.ab2@21242>   MOVEQ.l #$00,D1
0002FDAE <AmiBlitz3.ab2@21243>    JSR get1bytemain
0002FDB2 <AmiBlitz3.ab2@21244>    BEQ.w JL_0_C9A6
0002FDB6 <AmiBlitz3.ab2@21245>   CMP.w #$22,D0
0002FDBA <AmiBlitz3.ab2@21246>    BEQ.w JL_0_C988
0002FDBE <AmiBlitz3.ab2@21247>   CMP.w #$2C,D0
0002FDC2 <AmiBlitz3.ab2@21248>    BEQ.w JL_0_C9A6
0002FDC6 <AmiBlitz3.ab2@21251>    BSR.w JL_0_C210
0002FDC8 <AmiBlitz3.ab2@21252>   ADDQ.w #1,D1
0002FDCE <AmiBlitz3.ab2@21253>    JSR getchar
0002FDD0 <AmiBlitz3.ab2@21254>   TST.w D0
0002FDD4 <AmiBlitz3.ab2@21255>    BEQ.w JL_0_C9A6
0002FDD8 <AmiBlitz3.ab2@21256>   CMP.w #$2C,D0
0002FDDC <AmiBlitz3.ab2@21257>    BEQ.w JL_0_C9A6
0002FDE0 <AmiBlitz3.ab2@21258> BRA.w JL_0_C96C
0002FDE2 <AmiBlitz3.ab2@21262>    MOVEQ #0,d0
0002FDE4 <AmiBlitz3.ab2@21263>    MOVE.b (a5)+,d0
0002FDE8 <AmiBlitz3.ab2@21264>    BEQ.w notqerr2
0002FDEC <AmiBlitz3.ab2@21265>   CMP.w #$22,D0
0002FDF0 <AmiBlitz3.ab2@21266>    BEQ.w JL_0_C9A2
0002FDF4 <AmiBlitz3.ab2@21267>    BSR.w JL_0_C210
0002FDF6 <AmiBlitz3.ab2@21268>   ADDQ.w #1,D1
0002FDFA <AmiBlitz3.ab2@21269> BRA.w JL_0_C988
0002FE00 <AmiBlitz3.ab2@21270> notqerr2 JMP notqerr
0002FE06 <AmiBlitz3.ab2@21272>   CLR.w instringon
0002FE0C <AmiBlitz3.ab2@21273>   JSR get1bytemain
0002FE0E <AmiBlitz3.ab2@21276>   MOVEA.l (A7)+,A0
0002FE14 <AmiBlitz3.ab2@21277>   MOVE.w dontwrite,D2
0002FE18 <AmiBlitz3.ab2@21278>    BNE.w JL_0_C9B4
0002FE1A <AmiBlitz3.ab2@21279>   MOVE.l D1,(A0)
0002FE20 <AmiBlitz3.ab2@21282>   ADDQ.l #1,data2
0002FE28 <AmiBlitz3.ab2@21283>   BCLR #$0,data2+3
0002FE2C <AmiBlitz3.ab2@21284>   CMP.w #$2C,D0
0002FE30 <AmiBlitz3.ab2@21285>    BEQ.w JL_0_C944
0002FE32 <AmiBlitz3.ab2@21286> RTS
0002FE38 <AmiBlitz3.ab2@21290> JMP vardeclareerr
0002FE3E <AmiBlitz3.ab2@21293>   MOVE.w proceduremode,D1                                  ;doshared
0002FE42 <AmiBlitz3.ab2@21295>   BNE.w 'l1
0002FE44 <AmiBlitz3.ab2@21296>   MOVE.w D1,-(A7)
0002FE4A <AmiBlitz3.ab2@21297>   CLR.w proceduremode
0002FE50 <AmiBlitz3.ab2@21300>   LEA varbase,a2
0002FE54 <AmiBlitz3.ab2@21301>   BSR.w getparameter
0002FE56 <AmiBlitz3.ab2@21302>   MOVE.w d2,-(a7)
0002FE5C <AmiBlitz3.ab2@21303>    JSR findvariable
0002FE60 <AmiBlitz3.ab2@21304>    BEQ 'checkdim
0002FE66 <AmiBlitz3.ab2@21305>    LEA sharebase,a2
0002FE68 <AmiBlitz3.ab2@21306>    MOVEQ #$f+4,d7
0002FE6C <AmiBlitz3.ab2@21307>    BSR.w findlab                                         ;find var
0002FE70 <AmiBlitz3.ab2@21308>    BEQ.b dupsherr
0002FE74 <AmiBlitz3.ab2@21309>    BSR addlabel
0002FE78 <AmiBlitz3.ab2@21310>    CMP.b #".",d0
0002FE7C <AmiBlitz3.ab2@21311>    BNE JUMP_vardeclareerr
0002FE7E <AmiBlitz3.ab2@21312>    MOVE.l a2,a3
0002FE84 <AmiBlitz3.ab2@21313>    JSR JL_0_8EB8b
0002FE86 <AmiBlitz3.ab2@21344>   MOVE.w (a7)+,d2
0002FE8A <AmiBlitz3.ab2@21345>    CMP.b #",",d0
0002FE8E <AmiBlitz3.ab2@21346>    BNE 'ret
0002FE94 <AmiBlitz3.ab2@21347>    JSR get1bytemain
0002FE98 <AmiBlitz3.ab2@21348> BRA 'again2
0002FE9E <AmiBlitz3.ab2@21351>   MOVE.w (A7)+,proceduremode
0002FEA0 <AmiBlitz3.ab2@21352> RTS
0002FEA6 <AmiBlitz3.ab2@21359>    CMP.w #2,6(a2)
0002FEAA <AmiBlitz3.ab2@21360>    BEQ 'do
0002FEB0 <AmiBlitz3.ab2@21361>    CMP.w #$102,6(a2)
0002FEB4 <AmiBlitz3.ab2@21362>    BEQ 'do
0002FEBA <AmiBlitz3.ab2@21363> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0002FEC0 <AmiBlitz3.ab2@21366>   LEA varbase,a0
0002FEC2 <AmiBlitz3.ab2@21369>   MOVE.l (A0),D0                                           ;find label
0002FEC6 <AmiBlitz3.ab2@21370>    BEQ.b 'z1
0002FEC8 <AmiBlitz3.ab2@21371>    CMP.l d0,a2
0002FECC <AmiBlitz3.ab2@21372>    BEQ 'z1
0002FECE <AmiBlitz3.ab2@21373>    MOVE.l d0,a0
0002FED2 <AmiBlitz3.ab2@21374> BRA 'm1
0002FED4 <AmiBlitz3.ab2@21377>   MOVE.l (a2),d1
0002FED6 <AmiBlitz3.ab2@21378>     MOVE.l d1,(a0)
0002FED8 <AmiBlitz3.ab2@21379>     CLR.l (a2)
0002FEDE <AmiBlitz3.ab2@21380>     LEA sharebase,a0
0002FEE0 <AmiBlitz3.ab2@21381>     MOVE.l (a0),(a2)
0002FEE2 <AmiBlitz3.ab2@21382>     MOVE.l a2,(a0)
0002FEE8 <AmiBlitz3.ab2@21383>     JSR get1bytemain
0002FEEE <AmiBlitz3.ab2@21384>     JSR get1bytemain
0002FEF2 <AmiBlitz3.ab2@21385> BRA 'domore
0002FEFA <AmiBlitz3.ab2@21388>   MOVE.b #1,nowdeclare
0002FEFC <AmiBlitz3.ab2@21389>   MOVE.w D1,-(A7)
0002FF02 <AmiBlitz3.ab2@21390>   CLR.w proceduremode
0002FF06 <AmiBlitz3.ab2@21393>    BSR.w getparameter
0002FF08 <AmiBlitz3.ab2@21394>   MOVE.w D2,-(A7)
0002FF0E <AmiBlitz3.ab2@21395>   LEA firstglob,A2
0002FF12 <AmiBlitz3.ab2@21396>    BSR.w findvariable2
0002FF16 <AmiBlitz3.ab2@21397>    BNE.b JL_0_CA06
0002FF1C <AmiBlitz3.ab2@21400>   MOVE.b flagmask+1,D1
0002FF20 <AmiBlitz3.ab2@21401>   MOVE.b $7(A2),D3
0002FF22 <AmiBlitz3.ab2@21402>   EOR.b D3,D1
0002FF26 <AmiBlitz3.ab2@21403>    BEQ.w dupsherr
0002FF2A <AmiBlitz3.ab2@21404>    BSR.w findlab
0002FF2E <AmiBlitz3.ab2@21405>    BEQ.b JL_0_C9F0
0002FF32 <AmiBlitz3.ab2@21408>    BSR.w addlabel
0002FF34 <AmiBlitz3.ab2@21409>   MOVE.w (A7)+,D2
0002FF36 <AmiBlitz3.ab2@21410>   MOVE.l A2,-(A7)
0002FF3A <AmiBlitz3.ab2@21411>    BSR.w JL_0_8E3C
0002FF3C <AmiBlitz3.ab2@21412>   MOVEA.l (A7)+,A2
0002FF3E <AmiBlitz3.ab2@21413>   MOVEQ.l #$04,D1
0002FF40 <AmiBlitz3.ab2@21414>   ADDQ.w #4,A2
0002FF42 <AmiBlitz3.ab2@21415>   ADDQ.w #4,A3
0002FF44 <AmiBlitz3.ab2@21418>     MOVE.w (A3)+,(A2)+
0002FF48 <AmiBlitz3.ab2@21419>   DBF D1,JL_0_CA1A
0002FF50 <AmiBlitz3.ab2@21421>   BTST #$1,flagmask+1
0002FF54 <AmiBlitz3.ab2@21422>    BEQ.w JL_0_CA3C
0002FF5A <AmiBlitz3.ab2@21423>    JSR get1bytemain
0002FF5E <AmiBlitz3.ab2@21424>   CMP.w #$29,D0
0002FF62 <AmiBlitz3.ab2@21425>    BNE.w syntaxerrc
0002FF68 <AmiBlitz3.ab2@21426>    JSR get1bytemain
0002FF6C <AmiBlitz3.ab2@21429>    CMP.w #$2C,D0
0002FF70 <AmiBlitz3.ab2@21430>    BNE.w JL_0_CA4C
0002FF76 <AmiBlitz3.ab2@21431>    JSR get1bytemain
0002FF7A <AmiBlitz3.ab2@21432> BRA.w JL_0_C9DE
0002FF80 <AmiBlitz3.ab2@21435>   MOVE.w (A7)+,proceduremode
0002FF82 <AmiBlitz3.ab2@21436> RTS
0002FF88 <AmiBlitz3.ab2@21438> syntaxerrc JMP syntaxerr
0002FF8C <AmiBlitz3.ab2@21441>    BSR.w JL_0_C05C
0002FF92 <AmiBlitz3.ab2@21442>    JSR check_incdir                                        ; ergebnis in d2
0002FF98 <AmiBlitz3.ab2@21444>    LEA ptr_parameterstore,a1
0002FF9A <AmiBlitz3.ab2@21445>    MOVE.l d2,-(a7)
0002FFA0 <AmiBlitz3.ab2@21446>    LEA includetemp,a0                                      ; filename in includetemp packen
0002FFA2 <AmiBlitz3.ab2@21449>      MOVE.b (a1)+,(a0)+
0002FFA6 <AmiBlitz3.ab2@21450>    BNE 'l4
0002FFAC <AmiBlitz3.ab2@21452>    LEA ptr_parameterstore,a1
0002FFAE <AmiBlitz3.ab2@21453>    MOVE.l a1,a0
0002FFB0 <AmiBlitz3.ab2@21456>     TST.b (a0)+
0002FFB4 <AmiBlitz3.ab2@21457>    BNE 'l1
0002FFB6 <AmiBlitz3.ab2@21460>      MOVE.b -(a0),d0
0002FFBA <AmiBlitz3.ab2@21461>      CMP.b #":",d0
0002FFBE <AmiBlitz3.ab2@21462>       BEQ 'out
0002FFC2 <AmiBlitz3.ab2@21463>      CMP.b #"/",d0
0002FFC6 <AmiBlitz3.ab2@21464>       BEQ 'out
0002FFC8 <AmiBlitz3.ab2@21465>      CMP.l a1,a0
0002FFCC <AmiBlitz3.ab2@21466>       BEQ 'out2
0002FFD0 <AmiBlitz3.ab2@21467> BRA 'l2
0002FFD2 <AmiBlitz3.ab2@21470>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0002FFD4 <AmiBlitz3.ab2@21473>    MOVEQ.l #-$01,D2
0002FFD6 <AmiBlitz3.ab2@21476>      ADDQ.w #1,D2
0002FFD8 <AmiBlitz3.ab2@21477>      MOVE.b (a0)+,(a1)+
0002FFDC <AmiBlitz3.ab2@21478>    BNE 'l3
0002FFDE <AmiBlitz3.ab2@21479>    CLR.b (a1)+
0002FFE4 <AmiBlitz3.ab2@21481>    LEA ptr_parameterstore,a1
0002FFE8 <AmiBlitz3.ab2@21482>    BSR.w findxinc                                         ;find include
0002FFEC <AmiBlitz3.ab2@21483>     BEQ.w 'outb
0002FFEE <AmiBlitz3.ab2@21485>    MOVE.w D2,-(A7)
0002FFF2 <AmiBlitz3.ab2@21486>    BSR.w addlabel
0002FFF4 <AmiBlitz3.ab2@21487>    MOVE.w (A7)+,D2
0002FFFA <AmiBlitz3.ab2@21489>    LEA ptr_parameterstore,a1
00030000 <AmiBlitz3.ab2@21490>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00030002 <AmiBlitz3.ab2@21493>     MOVE.b (a0)+,(a1)+
00030006 <AmiBlitz3.ab2@21494>    BNE 'l4b
00030008 <AmiBlitz3.ab2@21496>    MOVE.l (a7)+,d2
0003000E <AmiBlitz3.ab2@21497>    LEA ptr_parameterstore,a1
00030012 <AmiBlitz3.ab2@21498> BRA.w JL_0_CB18
00030018 <AmiBlitz3.ab2@21501>    LEA ptr_parameterstore,a1
0003001E <AmiBlitz3.ab2@21502>    LEA includetemp,a0
00030020 <AmiBlitz3.ab2@21505>     MOVE.b (a0)+,(a1)+
00030024 <AmiBlitz3.ab2@21506>    BNE 'l4b2
00030026 <AmiBlitz3.ab2@21508>    MOVE.l (a7)+,d2
0003002C <AmiBlitz3.ab2@21509>    LEA ptr_parameterstore,a1
0003002E <AmiBlitz3.ab2@21512> RTS
00030032 <AmiBlitz3.ab2@21516>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
00030038 <AmiBlitz3.ab2@21518>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
0003003E <AmiBlitz3.ab2@21520>   MOVEA.l _dosbase,A6
00030040 <AmiBlitz3.ab2@21521>   MOVE.l D0,D7                                                 ; store Lockpointer
00030044 <AmiBlitz3.ab2@21522>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00030046 <AmiBlitz3.ab2@21523>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
0003004C <AmiBlitz3.ab2@21524>   MOVE.l ptr_macrobuffer_begin,D2
00030050 <AmiBlitz3.ab2@21525>    JSR _Examine(A6)
00030056 <AmiBlitz3.ab2@21526>   MOVEA.l ptr_macrobuffer_begin,A0
0003005A <AmiBlitz3.ab2@21527>   MOVE.l $4(A0),D0
0003005E <AmiBlitz3.ab2@21528>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00030062 <AmiBlitz3.ab2@21529>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
00030064 <AmiBlitz3.ab2@21530>   MOVE.l D7,D1                                                 ; begin unlock the file
00030068 <AmiBlitz3.ab2@21531>    JSR _UnLock(A6)
0003006E <AmiBlitz3.ab2@21533>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00030074 <AmiBlitz3.ab2@21534>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00030078 <AmiBlitz3.ab2@21535>    JSR _Open(A6)
0003007A <AmiBlitz3.ab2@21536>   MOVE.l D0,D7
0003007E <AmiBlitz3.ab2@21537>    BEQ.w error_cant_open_include
00030084 <AmiBlitz3.ab2@21538>   MOVE.l destpointer,D0
00030086 <AmiBlitz3.ab2@21539>   ADD.l D3,D0
0003008C <AmiBlitz3.ab2@21540>   CMP.l destbufferend,D0
00030090 <AmiBlitz3.ab2@21541>    BHI.w JL_0_CAF6
00030096 <AmiBlitz3.ab2@21542>   MOVE.l destpointer,D2
00030098 <AmiBlitz3.ab2@21543>   MOVE.l D7,D1
0003009C <AmiBlitz3.ab2@21544>    JSR _Read(A6)
000300A2 <AmiBlitz3.ab2@21545>   CMP.l #$FFFFFFFF,D0
000300A6 <AmiBlitz3.ab2@21546>    BEQ.w error_reading_file
000300AC <AmiBlitz3.ab2@21547>   ADD.l D0,destpointer
000300B0 <AmiBlitz3.ab2@21548> BRA.w JL_0_CB04
000300B8 <AmiBlitz3.ab2@21551>   MOVE.w #$FFFF,dontwrite
000300BE <AmiBlitz3.ab2@21552>   MOVE.l D0,destpointer
000300C0 <AmiBlitz3.ab2@21555>   MOVE.l D7,D1
000300C4 <AmiBlitz3.ab2@21556> JMP _Close(A6)
000300CA <AmiBlitz3.ab2@21560> JMP illdirerr
000300D0 <AmiBlitz3.ab2@21563>   TST.w dirmode                                            ;include  open
000300D4 <AmiBlitz3.ab2@21564>    BNE.w JUMP_illdirerr
000300D8 <AmiBlitz3.ab2@21565>   BSR.w JL_0_C05C
000300DE <AmiBlitz3.ab2@21566>   JSR check_incdir
000300E2 <AmiBlitz3.ab2@21569>   BSR.w findconstant
000300E6 <AmiBlitz3.ab2@21570>    BEQ.w alincerr
000300EC <AmiBlitz3.ab2@21572>   LEA constantbase,A2
000300F0 <AmiBlitz3.ab2@21573>   BSR.w addhere2
000300F4 <AmiBlitz3.ab2@21574>   CLR.w $C(A2)
000300F8 <AmiBlitz3.ab2@21575>   CLR.l $4(A2)
000300FE <AmiBlitz3.ab2@21577>   MOVE.l #ptr_parameterstore,D1
00030100 <AmiBlitz3.ab2@21578>   MOVE.l d1,a0
00030106 <AmiBlitz3.ab2@21579>   LEA includetemp2,a1
00030108 <AmiBlitz3.ab2@21582>     MOVE.b (a0)+,(a1)+
0003010C <AmiBlitz3.ab2@21583>   BNE 'l1
00030112 <AmiBlitz3.ab2@21584>   JSR save_includename
0003011C <AmiBlitz3.ab2@21585>   MOVE.l #0,include_process
00030124 <AmiBlitz3.ab2@21587>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00030128 <AmiBlitz3.ab2@21588>   BEQ 'ok
00030130 <AmiBlitz3.ab2@21589>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00030134 <AmiBlitz3.ab2@21590>   BEQ 'ok_tokenize
0003013C <AmiBlitz3.ab2@21591>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00030140 <AmiBlitz3.ab2@21592>   BEQ 'ok_tokenize
00030148 <AmiBlitz3.ab2@21593>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
0003014C <AmiBlitz3.ab2@21594>   BEQ 'ok
00030152 <AmiBlitz3.ab2@21595> JMP errortoken                                             ;can only include
0003015C <AmiBlitz3.ab2@21598>    MOVE.l #-1,include_process                              ; must tokenize the include
00030162 <AmiBlitz3.ab2@21601>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00030168 <AmiBlitz3.ab2@21602>   MOVEA.l _dosbase,A6
0003016C <AmiBlitz3.ab2@21603>   JSR _Open(A6)
00030170 <AmiBlitz3.ab2@21604>   MOVE.l D0,$8(A2)
00030174 <AmiBlitz3.ab2@21605>   BEQ.w error_cant_open_include
0003017A <AmiBlitz3.ab2@21606>   CLR.l includeline
0003017E <AmiBlitz3.ab2@21607>   MOVE.l 8(a2),d1
00030180 <AmiBlitz3.ab2@21608>   MOVE.l d3,-(a7)
00030182 <AmiBlitz3.ab2@21609>   MOVEQ #0,d2
00030184 <AmiBlitz3.ab2@21610>   MOVEQ #1,d3
00030188 <AmiBlitz3.ab2@21611>   JSR _Seek(a6)                                            ; -66
0003018C <AmiBlitz3.ab2@21612>   MOVE.l 8(a2),d1
0003018E <AmiBlitz3.ab2@21613>   MOVEQ #0,d2
00030190 <AmiBlitz3.ab2@21614>   MOVEQ #-1,d3
00030194 <AmiBlitz3.ab2@21615>   JSR _Seek(a6)                                            ; -66
00030196 <AmiBlitz3.ab2@21616>   MOVE.l (a7)+,d3
00030198 <AmiBlitz3.ab2@21617>   ADDQ.l #4,d0
0003019E <AmiBlitz3.ab2@21619>   MOVE.l #$10000,D1
000301A4 <AmiBlitz3.ab2@21620>   MOVEA.l _execbase,A6
000301A8 <AmiBlitz3.ab2@21623>   JSR _AllocVec(a6)
000301AC <AmiBlitz3.ab2@21625>   MOVE.l D0,$4(A2)
000301B0 <AmiBlitz3.ab2@21626>   MOVE.l D0,$E(A2)
000301B2 <AmiBlitz3.ab2@21627>   MOVEA.l D0,A5
000301B8 <AmiBlitz3.ab2@21634>   ADDQ.w #1,ininclude                                      ;enter include
000301BE <AmiBlitz3.ab2@21637>   LEA _include,a0
000301C2 <AmiBlitz3.ab2@21638>   MOVEM.l a0-a6/d0-d7,-(a7)
000301C8 <AmiBlitz3.ab2@21639>   LEA ptr_parameterstore,a1
000301CA <AmiBlitz3.ab2@21642>     MOVE.b (a0)+,(a1)+
000301CE <AmiBlitz3.ab2@21643>   BNE 'l1b
000301D0 <AmiBlitz3.ab2@21645>   MOVEQ #9,d2
000301D6 <AmiBlitz3.ab2@21646>   JSR findlabel2
000301DA <AmiBlitz3.ab2@21647>   BNE 'd
000301E2 <AmiBlitz3.ab2@21648>   MOVE.l #1,8(a2)
000301E6 <AmiBlitz3.ab2@21649>   MOVEM.l (a7)+,a0-a6/d0-d7
000301EA <AmiBlitz3.ab2@21650> BRA 'd2
000301F0 <AmiBlitz3.ab2@21653>   JSR addlabelhash
000301F8 <AmiBlitz3.ab2@21654>   MOVE.l #$1,$4(A2)
00030200 <AmiBlitz3.ab2@21655>   MOVE.l #1,8(a2)
00030204 <AmiBlitz3.ab2@21656>   MOVEM.l (a7)+,a0-a6/d0-d7
0003020A <AmiBlitz3.ab2@21659>   LEA inctab,a0
0003020C <AmiBlitz3.ab2@21660>   MOVEQ #0,d1
00030212 <AmiBlitz3.ab2@21661>   MOVE.w ininclude,d1
00030216 <AmiBlitz3.ab2@21662>   CLR.l $0(a0,d1*4)
0003021C <AmiBlitz3.ab2@21663>   MOVEA.l passstack,A7
00030222 <AmiBlitz3.ab2@21664> JMP AJL_0_413A
00030228 <AmiBlitz3.ab2@21666> JUMP_dupmacerr JMP dupmacerr
0003022A <AmiBlitz3.ab2@21668> coolnest:   Ds.w 1
0003022E <AmiBlitz3.ab2@21669> macline:    Ds.l 1
00030238 <AmiBlitz3.ab2@21673>   MOVE.l linenumat,macline
0003023C <AmiBlitz3.ab2@21674>    BSR.w makename2
00030240 <AmiBlitz3.ab2@21675>    BEQ.w JUMP_syntaxerr
00030246 <AmiBlitz3.ab2@21677>    CLR.b thenmode
00030250 <AmiBlitz3.ab2@21679>    MOVE.w oldqflag,instringon
00030256 <AmiBlitz3.ab2@21680>   MOVEA.l lastsourcepos,A5
0003025A <AmiBlitz3.ab2@21681>    BSR.w findmac
0003025E <AmiBlitz3.ab2@21682>    BEQ.w JUMP_dupmacerr
00030262 <AmiBlitz3.ab2@21683>    BSR.w addlabel
00030266 <AmiBlitz3.ab2@21684>   CLR.w $A(A2)
0003026C <AmiBlitz3.ab2@21685>   MOVEA.l ptr_macrobuffer_begin,A0
0003026E <AmiBlitz3.ab2@21686>   MOVEQ.l #$00,D2
00030274 <AmiBlitz3.ab2@21687>   CLR.w coolnest
00030276 <AmiBlitz3.ab2@21690>   MOVE.b (a5),d0
0003027A <AmiBlitz3.ab2@21691>      BEQ 'l3
0003027E <AmiBlitz3.ab2@21692>      CMP.b #" ",d0
00030282 <AmiBlitz3.ab2@21693>       BNE 'l2                                              ;space macro
00030284 <AmiBlitz3.ab2@21694>       ADDQ.l #1,a5
00030288 <AmiBlitz3.ab2@21695> BRA 'l1
0003028C <AmiBlitz3.ab2@21698>    CMP.b #";",d0
00030290 <AmiBlitz3.ab2@21699>       BNE 'l3
00030292 <AmiBlitz3.ab2@21702>    MOVE.b (a5),d0
00030296 <AmiBlitz3.ab2@21703>       BEQ 'l5
0003029A <AmiBlitz3.ab2@21704>       BSR.w JL_0_CC98                                      ;add comment
0003029C <AmiBlitz3.ab2@21705>       ADDQ.l #1,a5
000302A0 <AmiBlitz3.ab2@21706> BRA 'l4
000302A4 <AmiBlitz3.ab2@21709>    MOVE.b #":",d0
000302A8 <AmiBlitz3.ab2@21710>       BSR.w JL_0_CC98
000302AC <AmiBlitz3.ab2@21711>       MOVE.b #"@",d0
000302B0 <AmiBlitz3.ab2@21712>       BSR.w JL_0_CC98
000302B8 <AmiBlitz3.ab2@21715>    MOVE.b #0,temp
000302C0 <AmiBlitz3.ab2@21716>       MOVE.b #0,thenmode
000302C6 <AmiBlitz3.ab2@21719>   JSR getcharb
000302C8 <AmiBlitz3.ab2@21720>   TST.w D0
000302CC <AmiBlitz3.ab2@21721>    BNE.w JL_0_CBDE
000302D0 <AmiBlitz3.ab2@21722>   MOVEM.l D2/A0/A2,-(A7)
000302D6 <AmiBlitz3.ab2@21723>   CMP.w #"@@",-3(a5)
000302DA <AmiBlitz3.ab2@21724>   BNE 'l2a
000302E0 <AmiBlitz3.ab2@21725>   JSR nextline
000302E4 <AmiBlitz3.ab2@21726>   BEQ.w JUMP_macenderr
000302E8 <AmiBlitz3.ab2@21727>   MOVEM.l (A7)+,D2/A0/A2
000302EC <AmiBlitz3.ab2@21728> BRA.w JL_0_CBB6
000302F2 <AmiBlitz3.ab2@21731>    JSR nextline
000302F6 <AmiBlitz3.ab2@21732>    BEQ.w JUMP_macenderr
000302FA <AmiBlitz3.ab2@21733>   MOVEM.l (A7)+,D2/A0/A2
000302FC <AmiBlitz3.ab2@21734>   TST.w D2
00030300 <AmiBlitz3.ab2@21735>    BEQ.w JL_0_CBB6
00030302 <AmiBlitz3.ab2@21738>   MOVE.b (a5),d0
00030306 <AmiBlitz3.ab2@21739>       CMP.b #" ",d0
0003030A <AmiBlitz3.ab2@21740>       BNE 'l1
0003030C <AmiBlitz3.ab2@21741>       ADDQ.w #1,a5
00030310 <AmiBlitz3.ab2@21742> BRA 'l2
00030316 <AmiBlitz3.ab2@21745>   TST.b thenmode
0003031A <AmiBlitz3.ab2@21746>      BEQ 'l3
0003031C <AmiBlitz3.ab2@21747>      MOVEQ #":",d0
00030320 <AmiBlitz3.ab2@21748>      BSR.w JL_0_CC98
00030324 <AmiBlitz3.ab2@21749>      MOVE.w #-$7FFE,D0                                     ;write end if
00030328 <AmiBlitz3.ab2@21750>      BSR macputw
0003032C <AmiBlitz3.ab2@21751>      MOVE.w #$800b,d0
00030330 <AmiBlitz3.ab2@21752>      BSR.w macputw
00030336 <AmiBlitz3.ab2@21753>      CLR.b thenmode
00030338 <AmiBlitz3.ab2@21756>    MOVEQ.l #$3A,D0
00030340 <AmiBlitz3.ab2@21757>      MOVE.b #1,temp
00030344 <AmiBlitz3.ab2@21759> BRA.w JL_0_CC2A
00030348 <AmiBlitz3.ab2@21763>   BPL.w JL_0_CC2A
0003034C <AmiBlitz3.ab2@21764>   CMP.w #-$7FF3,D0                                         ;macro ?
00030350 <AmiBlitz3.ab2@21765>    BNE.w JL_0_CBF4
00030356 <AmiBlitz3.ab2@21766>   ADDQ.w #1,coolnest
0003035A <AmiBlitz3.ab2@21767> BRA.w JL_0_CC22
00030360 <AmiBlitz3.ab2@21769> JUMP_macnesterr JMP macnesterr
00030364 <AmiBlitz3.ab2@21772>   CMP.w #$80d7,d0                                          ;object ?
00030368 <AmiBlitz3.ab2@21773>     BNE 'l1x
0003036E <AmiBlitz3.ab2@21774>     TST.b objectcount
00030372 <AmiBlitz3.ab2@21775>     BNE JUMP_macnesterr
00030376 <AmiBlitz3.ab2@21778>   CMP.w #$8021,d0
0003037A <AmiBlitz3.ab2@21779>     BNE 'nothen
00030382 <AmiBlitz3.ab2@21780>     MOVE.b #1,thenmode
00030388 <AmiBlitz3.ab2@21783>   TST.b thenmode
0003038C <AmiBlitz3.ab2@21784>         BEQ 'l1
00030390 <AmiBlitz3.ab2@21785>    CMP.w #$8002,d0                                         ;end if
00030394 <AmiBlitz3.ab2@21786>    BNE 'l1
00030398 <AmiBlitz3.ab2@21787>    MOVEM.l d0/a5,-(a7)
0003039E <AmiBlitz3.ab2@21788>    JSR get1bytemain
000303A0 <AmiBlitz3.ab2@21789>    MOVE.w d0,d1
000303A4 <AmiBlitz3.ab2@21790>    MOVEM.l (a7)+,a5/d0
000303A8 <AmiBlitz3.ab2@21791>    CMP.w #$800b,d1
000303AC <AmiBlitz3.ab2@21792>    BNE 'l1
000303B2 <AmiBlitz3.ab2@21793>    CLR.b thenmode
000303B6 <AmiBlitz3.ab2@21796>    CMP.w #-$7FFE,D0                                        ;end ?
000303BA <AmiBlitz3.ab2@21797>    BNE.w JL_0_CC22
000303BC <AmiBlitz3.ab2@21798>    MOVE.l a5,-(a7)
000303C2 <AmiBlitz3.ab2@21799>    JSR get1bytemain
000303C4 <AmiBlitz3.ab2@21800>    MOVE.l (a7)+,a5
000303C6 <AmiBlitz3.ab2@21801>    TST.w d0
000303CA <AmiBlitz3.ab2@21802>    BEQ 'doend
000303CE <AmiBlitz3.ab2@21803>    CMP.w #":",d0
000303D2 <AmiBlitz3.ab2@21804>    BEQ 'doend
000303D6 <AmiBlitz3.ab2@21805>    CMP.w #";",d0
000303DA <AmiBlitz3.ab2@21806>    BEQ 'doend
000303DC <AmiBlitz3.ab2@21807>    MOVE.l a5,-(a7)
000303E2 <AmiBlitz3.ab2@21808>    JSR get1bytemain
000303E6 <AmiBlitz3.ab2@21809>    MOVE.l -1(a5),d0
000303E8 <AmiBlitz3.ab2@21810>    MOVE.l (a7)+,a5
000303EE <AmiBlitz3.ab2@21811>    CMP.l #"noa7",d0
000303F2 <AmiBlitz3.ab2@21812>    BEQ 'doend
000303F6 <AmiBlitz3.ab2@21813> BRA 'morechar
000303FA <AmiBlitz3.ab2@21816>   MOVE.w #$8002,D0
000303FE <AmiBlitz3.ab2@21817>    BSR.w macputw
00030402 <AmiBlitz3.ab2@21818> BRA JL_0_CBB6
00030408 <AmiBlitz3.ab2@21821>   JSR get1bytemain
0003040C <AmiBlitz3.ab2@21822>    CMP.w #-$7FF3,D0                                        ;end macro
00030410 <AmiBlitz3.ab2@21823>    BEQ.w 'lo1
00030414 <AmiBlitz3.ab2@21824>   CMP.w #$80d7,d0                                          ;end object
00030418 <AmiBlitz3.ab2@21825>   BNE JL_0_CC12
0003041E <AmiBlitz3.ab2@21826>   SUBQ.b #1,objectcount
00030424 <AmiBlitz3.ab2@21827>   TST.b developobject
00030428 <AmiBlitz3.ab2@21828>   BEQ 'lo1
0003042C <AmiBlitz3.ab2@21829>   BSR skiprest
0003042E <AmiBlitz3.ab2@21830> RTS
00030434 <AmiBlitz3.ab2@21833>   SUBQ.w #1,coolnest
00030438 <AmiBlitz3.ab2@21834>    BMI.w JL_0_CC32
0003043A <AmiBlitz3.ab2@21837>   MOVE.w D0,-(A7)
0003043E <AmiBlitz3.ab2@21838>   MOVE.w #$8002,D0
00030442 <AmiBlitz3.ab2@21839>    BSR.w macputw
00030444 <AmiBlitz3.ab2@21840>   MOVE.w (A7)+,D0
00030448 <AmiBlitz3.ab2@21841> BRA.w JL_0_CC22
0003044C <AmiBlitz3.ab2@21844>   BSR.w macputw
00030450 <AmiBlitz3.ab2@21845> BRA.w JL_0_CBB6
00030456 <AmiBlitz3.ab2@21847> JUMP_macenderr JMP macenderr
0003045C <AmiBlitz3.ab2@21850>     CMP.w #"@@",-1(a5)                                     ;merge lines
00030460 <AmiBlitz3.ab2@21851>     BNE 'no
00030464 <AmiBlitz3.ab2@21852>      MOVEM.l D2/A0/A2,-(A7)
0003046A <AmiBlitz3.ab2@21853>    JSR nextline
0003046E <AmiBlitz3.ab2@21854>    BEQ.w JUMP_macenderr
00030472 <AmiBlitz3.ab2@21855>   MOVEM.l (A7)+,D2/A0/A2
00030474 <AmiBlitz3.ab2@21856>     TST.w D2
00030478 <AmiBlitz3.ab2@21857>    BEQ.w JL_0_CBB6
0003047C <AmiBlitz3.ab2@21858> BRA JL_0_CBB6
00030480 <AmiBlitz3.ab2@21862>   BSR.w JL_0_CC98
00030484 <AmiBlitz3.ab2@21863> BRA.w JL_0_CBB6
00030486 <AmiBlitz3.ab2@21866>   ADDQ.w #4,A7
00030488 <AmiBlitz3.ab2@21867>   MOVE.l A0,D0
0003048E <AmiBlitz3.ab2@21868>   SUB.l ptr_macrobuffer_begin,D0
00030492 <AmiBlitz3.ab2@21871>    BEQ.w JL_0_CC5E
00030496 <AmiBlitz3.ab2@21872>   CMPI.b #":",-(A0)
0003049A <AmiBlitz3.ab2@21873>    BNE.w JL_0_CC5E
0003049E <AmiBlitz3.ab2@21874>   CMP.w #$1,D0
000304A2 <AmiBlitz3.ab2@21875>    BEQ.w JL_0_CC58
000304A6 <AmiBlitz3.ab2@21876>   TST.b -$1(A0)
000304AA <AmiBlitz3.ab2@21877>    BMI.w JL_0_CC5E
000304AC <AmiBlitz3.ab2@21880>   SUBQ.w #1,D0
000304B0 <AmiBlitz3.ab2@21881> BRA.w JL_0_CC3C
000304B4 <AmiBlitz3.ab2@21884>   MOVE.w D0,$8(A2)
000304B8 <AmiBlitz3.ab2@21885>    BEQ.w JL_0_CC8E
000304BA <AmiBlitz3.ab2@21886>   MOVEQ.l #$01,D1
000304C0 <AmiBlitz3.ab2@21887>   MOVEA.l _execbase,A6
000304C6 <AmiBlitz3.ab2@21888>   MOVE.l mempool,a0
000304CA <AmiBlitz3.ab2@21889>   JSR _AllocPooled(a6)
000304CC <AmiBlitz3.ab2@21891>   MOVEA.l D0,A0
000304D0 <AmiBlitz3.ab2@21892>   MOVE.l A0,$4(A2)
000304D4 <AmiBlitz3.ab2@21893>   MOVE.w $8(A2),D1
000304D8 <AmiBlitz3.ab2@21894>    BEQ.w JL_0_CC8E
000304DA <AmiBlitz3.ab2@21895>   SUBQ.w #1,D1
000304E0 <AmiBlitz3.ab2@21896>   MOVEA.l ptr_macrobuffer_begin,A1
000304E2 <AmiBlitz3.ab2@21899>     MOVE.b (A1)+,(A0)+
000304E6 <AmiBlitz3.ab2@21900>   DBF D1,JL_0_CC88
000304EC <AmiBlitz3.ab2@21903> JMP get1bytemain
000304EE <AmiBlitz3.ab2@21907>   MOVE.w D0,D1
000304F0 <AmiBlitz3.ab2@21908>   LSR.w #8,D1
000304F2 <AmiBlitz3.ab2@21909>   MOVE.b D1,(A0)+
000304F4 <AmiBlitz3.ab2@21912>   MOVEQ.l #-$01,D2
000304F6 <AmiBlitz3.ab2@21913>   MOVE.b D0,(A0)+
000304FC <AmiBlitz3.ab2@21914>   CMPA.l ptr_macrobuffer_end,A0
00030500 <AmiBlitz3.ab2@21915>    BCC.w macbigerr2
00030502 <AmiBlitz3.ab2@21916> RTS
00030508 <AmiBlitz3.ab2@21917> macbigerr2 JMP macbigerr
0003050A <AmiBlitz3.ab2@21920>   MOVE.l d0,-(a7)
0003050C <AmiBlitz3.ab2@21921>   MOVEQ #0,d0
00030512 <AmiBlitz3.ab2@21922>   CLR.b skiptoggle
00030514 <AmiBlitz3.ab2@21925>     MOVE.b (a5),d0
00030518 <AmiBlitz3.ab2@21926>     BEQ 'l3
0003051C <AmiBlitz3.ab2@21927>     CMP.b #";",d0
00030520 <AmiBlitz3.ab2@21928>     BNE 'l2
00030528 <AmiBlitz3.ab2@21929>     MOVE.b #1,skiptoggle
0003052E <AmiBlitz3.ab2@21932>     TST.b skiptoggle
00030532 <AmiBlitz3.ab2@21933>     BNE 'l4
00030536 <AmiBlitz3.ab2@21934>     CMP.b #":",d0
0003053A <AmiBlitz3.ab2@21935>     BEQ 'l3
0003053C <AmiBlitz3.ab2@21938>     ADDQ #1,a5
00030540 <AmiBlitz3.ab2@21939> BRA 'loop
00030546 <AmiBlitz3.ab2@21942>   MOVE.w d0,lastchar
00030548 <AmiBlitz3.ab2@21943>   MOVE.l (a7)+,d0
0003054A <AmiBlitz3.ab2@21944> RTS
0003054E <AmiBlitz3.ab2@21948>   BSR.w ifchar
00030552 <AmiBlitz3.ab2@21949>    BNE.w JUMP_syntaxerr
00030554 <AmiBlitz3.ab2@21950>   MOVE.w D0,D1
0003055A <AmiBlitz3.ab2@21951>   JSR get1bytemain
0003055E <AmiBlitz3.ab2@21952>   BSR.w ifchar
00030562 <AmiBlitz3.ab2@21953>    BNE.w JL_0_CCDA
00030564 <AmiBlitz3.ab2@21954>   ADDQ.w #1,D0
00030566 <AmiBlitz3.ab2@21955>   MOVE.w D0,D2
00030568 <AmiBlitz3.ab2@21956>   ADD.w D0,D0
0003056A <AmiBlitz3.ab2@21957>   ADD.w D2,D0
0003056C <AmiBlitz3.ab2@21958>   ADD.w D0,D1
0003056E <AmiBlitz3.ab2@21959>   MOVE.w D1,D0
00030572 <AmiBlitz3.ab2@21960>   ANDI.w #$3,D0
00030576 <AmiBlitz3.ab2@21961>   CMP.w #$3,D0
0003057A <AmiBlitz3.ab2@21962>    BEQ.w JUMP_syntaxerr
00030580 <AmiBlitz3.ab2@21964>   JSR get1bytemain
00030582 <AmiBlitz3.ab2@21967> RTS
00030584 <AmiBlitz3.ab2@21973> thetst1:  TST.b D0
00030586 <AmiBlitz3.ab2@21974> thetst2:  TST.w D0
00030588 <AmiBlitz3.ab2@21975> thetst3:  TST.l D0
0003058A <AmiBlitz3.ab2@21976> thetst4:  TST.l (A7)+                                      ;Any Length?
0003058E <AmiBlitz3.ab2@21977> thetst5:  JSR _Reschedule(A6)
00030592 <AmiBlitz3.ab2@21979> posbr:    BEQ.w posbr
00030596 <AmiBlitz3.ab2@21980> negbr:    BNE.w negbr
00030598 <AmiBlitz3.ab2@21984>   MOVEQ.l #-$01,D2
0003059C <AmiBlitz3.ab2@21985> BRA.w JL_0_D04C
000305A2 <AmiBlitz3.ab2@21989>   CLR.l fp0addr
000305A4 <AmiBlitz3.ab2@21990>   MOVEQ.l #$01,D1                                          ;while flag
000305A6 <AmiBlitz3.ab2@21991>   MOVEQ.l #$00,D2                                          ;negate flag
000305AA <AmiBlitz3.ab2@21992> BRA.w JL_0_D04E
000305B0 <AmiBlitz3.ab2@21996>   LEA firstrep,A2
000305B2 <AmiBlitz3.ab2@21997>   MOVEQ.l #$08,D2
000305B6 <AmiBlitz3.ab2@21998> BRA.w freeslist
000305BA <AmiBlitz3.ab2@22002>   LEA firstsel(PC),A2
000305BC <AmiBlitz3.ab2@22003>   MOVEQ.l #$0E,D2
000305BE <AmiBlitz3.ab2@22008>   MOVEQ.l #$00,D3
000305C0 <AmiBlitz3.ab2@22016>   MOVE.l (A2),D0
000305C2 <AmiBlitz3.ab2@22017>   CLR.l (A2)
000305C4 <AmiBlitz3.ab2@22018>   MOVEA.l D0,A2
000305CA <AmiBlitz3.ab2@22019>   MOVEA.l _execbase,A6
000305CE <AmiBlitz3.ab2@22022>     CMPA.w #$0,A2
000305D2 <AmiBlitz3.ab2@22023>      BEQ.w freelist__done
000305D4 <AmiBlitz3.ab2@22024>     TST.w D3
000305D8 <AmiBlitz3.ab2@22025>      BEQ.w freelist__skip
000305DC <AmiBlitz3.ab2@22026>     MOVEM.l D2-D3/A2,-(A7)
000305DE <AmiBlitz3.ab2@22027>     ADDA.w D3,A2
000305E0 <AmiBlitz3.ab2@22028>     MOVE.l D4,D2
000305E4 <AmiBlitz3.ab2@22029>     BSR.w freeslist
000305E8 <AmiBlitz3.ab2@22030>     MOVEM.l (A7)+,D2-D3/A2
000305EA <AmiBlitz3.ab2@22033>     MOVEA.l A2,A1
000305EC <AmiBlitz3.ab2@22034>     MOVE.l D2,D0
000305EE <AmiBlitz3.ab2@22035>     MOVEA.l (A2),A2
000305F4 <AmiBlitz3.ab2@22036>     MOVE.l mempool,a0
000305F8 <AmiBlitz3.ab2@22037>     JSR _FreePooled(A6)
000305FC <AmiBlitz3.ab2@22038> BRA.w freelist__loop
000305FE <AmiBlitz3.ab2@22041> RTS
00030604 <AmiBlitz3.ab2@22044> JMP eselerr
00030608 <AmiBlitz3.ab2@22047> firstsel:  Ds.l 1
0003060C <AmiBlitz3.ab2@22050> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
0003060E <AmiBlitz3.ab2@22053> selpushw:   MOVE.w D0,-(A7)
00030610 <AmiBlitz3.ab2@22055> selpushl:   MOVE.l D0,-(A7)
00030614 <AmiBlitz3.ab2@22057> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00030618 <AmiBlitz3.ab2@22060> selcomb:    ANDI.w #$FF,D0
0003061A <AmiBlitz3.ab2@22061> selcomw:    CMP.w (A7),D0
0003061C <AmiBlitz3.ab2@22063> selcoml:    CMP.l (A7),D0
00030620 <AmiBlitz3.ab2@22065> selbne:     BNE.w selbne
00030622 <AmiBlitz3.ab2@22067> endsel:     ADDQ.w #8,A7
00030626 <AmiBlitz3.ab2@22073>   MOVE.l firstsel(PC),D0                                  
0003062A <AmiBlitz3.ab2@22074>    BEQ.w JUMP_eselerr
0003062C <AmiBlitz3.ab2@22075>   MOVEA.l D0,A2
00030630 <AmiBlitz3.ab2@22076>    BSR.w JL_0_CDFC
00030636 <AmiBlitz3.ab2@22079>   MOVEA.l _execbase,A6
0003063A <AmiBlitz3.ab2@22082>   MOVE.l $4(A2),D0
0003063E <AmiBlitz3.ab2@22083>    BEQ.w doendsel__done
00030640 <AmiBlitz3.ab2@22084>   MOVEA.l D0,A3
00030644 <AmiBlitz3.ab2@22085>   MOVEA.l $4(A3),A0
0003064A <AmiBlitz3.ab2@22086>   MOVE.l destpointer,D1
0003064C <AmiBlitz3.ab2@22087>   SUB.l A0,D1
00030652 <AmiBlitz3.ab2@22089>     TST.b fast
00030656 <AmiBlitz3.ab2@22090>     BEQ doendsel__loop_l1
0003065C <AmiBlitz3.ab2@22091>     MOVE.w dontwrite,D0
00030660 <AmiBlitz3.ab2@22092>     BNE.w doendsel__skip
00030662 <AmiBlitz3.ab2@22093>     ADDQ.l #2,d1
00030666 <AmiBlitz3.ab2@22094>     MOVE.l d1,-2(a0)
0003066A <AmiBlitz3.ab2@22095>   BRA doendsel__skip
00030670 <AmiBlitz3.ab2@22099>   TST.w dontwrite
00030674 <AmiBlitz3.ab2@22100>      BNE.w doendsel__skip
0003067A <AmiBlitz3.ab2@22101>   CMP.l #MaxWordSgnd,D1
0003067E <AmiBlitz3.ab2@22102>    BHI.w JUMP_cbraerr
00030680 <AmiBlitz3.ab2@22103>   MOVE.w D1,(A0)
00030684 <AmiBlitz3.ab2@22106>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00030686 <AmiBlitz3.ab2@22107>   MOVEA.l A3,A1
00030688 <AmiBlitz3.ab2@22108>   MOVEQ.l #$08,D0
0003068E <AmiBlitz3.ab2@22109>   MOVE.l mempool,a0
00030692 <AmiBlitz3.ab2@22110>    JSR _FreePooled(A6)
00030696 <AmiBlitz3.ab2@22111> BRA.w doendsel__loop
0003069C <AmiBlitz3.ab2@22114>   JSR popselect                                            ;fix stack on select
000306A0 <AmiBlitz3.ab2@22115>   MOVEA.l firstsel(PC),A1
000306A6 <AmiBlitz3.ab2@22116>   MOVE.l (A1),firstsel
000306A8 <AmiBlitz3.ab2@22117>   MOVEQ.l #$0E,D0
000306AE <AmiBlitz3.ab2@22118>   MOVEA.l _execbase,A6
000306B4 <AmiBlitz3.ab2@22119>   MOVE.l mempool,a0
000306B8 <AmiBlitz3.ab2@22120>   JSR _FreePooled(A6)
000306BE <AmiBlitz3.ab2@22121> JMP get1bytemain
000306C0 <AmiBlitz3.ab2@22125>   MOVEA.l (A7)+,A1
000306C2 <AmiBlitz3.ab2@22126>   SUBQ.w #8,A1
000306C4 <AmiBlitz3.ab2@22127>   MOVEQ.l #$09,D0
000306C6 <AmiBlitz3.ab2@22128>   ADD.l (A1),D0
000306C8 <AmiBlitz3.ab2@22131>   ADDQ.w #2,A7                                             ;for runtime errs!
000306CC <AmiBlitz3.ab2@22136>   MOVE.l firstsel(PC),D0
000306D0 <AmiBlitz3.ab2@22137>    BEQ.w JUMP_defaerr
000306D2 <AmiBlitz3.ab2@22138>   MOVEA.l D0,A2
000306D6 <AmiBlitz3.ab2@22139>   BSR.w JL_0_CE26
000306DA <AmiBlitz3.ab2@22140>   BSR.w JL_0_CDFC
000306DE <AmiBlitz3.ab2@22141>   CLR.l $8(A2)
000306E2 <AmiBlitz3.ab2@22142>   MOVE.w $C(A2),D2
000306E6 <AmiBlitz3.ab2@22143> BRA.w JL_0_CE5E
000306EC <AmiBlitz3.ab2@22146> JMP defaerr
000306F0 <AmiBlitz3.ab2@22149>   MOVE.l $8(A2),D0
000306F4 <AmiBlitz3.ab2@22150>    BEQ.w JL_0_CE24
000306F6 <AmiBlitz3.ab2@22151>   MOVEA.l D0,A0
000306FC <AmiBlitz3.ab2@22152>   MOVE.l destpointer,D1
000306FE <AmiBlitz3.ab2@22153>   SUB.l A0,D1
00030704 <AmiBlitz3.ab2@22155>     TST.b fast
00030708 <AmiBlitz3.ab2@22156>     BEQ 'l1
0003070E <AmiBlitz3.ab2@22157>     TST.w dontwrite
00030712 <AmiBlitz3.ab2@22158>     BNE.w JL_0_CE24
00030714 <AmiBlitz3.ab2@22159>     ADDQ.l #2,d1
00030718 <AmiBlitz3.ab2@22160>     MOVE.l D1,-2(A0)
0003071C <AmiBlitz3.ab2@22161>   BRA JL_0_CE24
00030722 <AmiBlitz3.ab2@22165>   TST.w dontwrite
00030726 <AmiBlitz3.ab2@22166>      BNE.w JL_0_CE24
0003072C <AmiBlitz3.ab2@22167>    CMP.l #MaxWordSgnd,D1
00030730 <AmiBlitz3.ab2@22168>    BHI.w JUMP_cbraerr
00030732 <AmiBlitz3.ab2@22169>   MOVE.w D1,(A0)
00030734 <AmiBlitz3.ab2@22172> RTS
0003073A <AmiBlitz3.ab2@22175> JMP cbraerr
0003073E <AmiBlitz3.ab2@22179>   MOVE.l $8(A2),D0
00030742 <AmiBlitz3.ab2@22180>    BEQ.w JL_0_CE5C
00030744 <AmiBlitz3.ab2@22181>   MOVEA.l D0,A3
00030748 <AmiBlitz3.ab2@22182>   MOVE.w #$6000,D1
0003074E <AmiBlitz3.ab2@22184>    TST.b fast
00030752 <AmiBlitz3.ab2@22185>    BEQ 'l1
00030758 <AmiBlitz3.ab2@22186>    OR.l #$ff,d1
0003075C <AmiBlitz3.ab2@22187>    BSR writeword
00030760 <AmiBlitz3.ab2@22191>   BSR.w writeword
00030762 <AmiBlitz3.ab2@22192>   MOVEQ.l #$08,D0
00030764 <AmiBlitz3.ab2@22193>   MOVEQ.l #$01,D1
0003076A <AmiBlitz3.ab2@22194>   MOVEA.l _execbase,A6
00030770 <AmiBlitz3.ab2@22195>   MOVE.l mempool,a0
00030774 <AmiBlitz3.ab2@22196>   JSR _AllocPooled(a6)
00030776 <AmiBlitz3.ab2@22198>   MOVEA.l D0,A0
0003077A <AmiBlitz3.ab2@22199>   MOVE.l $4(A2),(A0)
0003077E <AmiBlitz3.ab2@22200>   MOVE.l A0,$4(A2)
00030786 <AmiBlitz3.ab2@22201>   MOVE.l destpointer,$4(A0)
0003078A <AmiBlitz3.ab2@22202> BRA.w writeword
0003078C <AmiBlitz3.ab2@22205> RTS
00030792 <AmiBlitz3.ab2@22209>   TST.b debugmode
00030796 <AmiBlitz3.ab2@22210>    BEQ.w JL_0_CE7A
0003079A <AmiBlitz3.ab2@22211>   MOVE.w #$C313,D1
0003079E <AmiBlitz3.ab2@22212>   CMP.w #$3,D2
000307A2 <AmiBlitz3.ab2@22213>    BCS.w JL_0_CE76
000307A4 <AmiBlitz3.ab2@22214>   ADDQ.w #1,D1
000307A8 <AmiBlitz3.ab2@22217> BRA.w Atokejsr
000307AA <AmiBlitz3.ab2@22220> RTS
000307B0 <AmiBlitz3.ab2@22224> JMP caseerr
000307B4 <AmiBlitz3.ab2@22227>   MOVE.l firstsel(PC),D0
000307B8 <AmiBlitz3.ab2@22228>    BEQ.w JUMP_caseerr
000307BA <AmiBlitz3.ab2@22229>   MOVEA.l D0,A2
000307BE <AmiBlitz3.ab2@22230>    BSR.w JL_0_CE26
000307C2 <AmiBlitz3.ab2@22231>    BSR.w JL_0_CDFC
000307C6 <AmiBlitz3.ab2@22232>   MOVE.w $C(A2),D2
000307C8 <AmiBlitz3.ab2@22233>   MOVE.w D2,-(A7)
000307CC <AmiBlitz3.ab2@22234>    BSR.w JL_0_CE5E
000307CE <AmiBlitz3.ab2@22235>   MOVE.w (A7),D2
000307D2 <AmiBlitz3.ab2@22236>    BSR.w bakeval
000307D4 <AmiBlitz3.ab2@22237>   MOVE.w (A7)+,D2
000307D8 <AmiBlitz3.ab2@22238>   LEA selcomb(PC),A0
000307DC <AmiBlitz3.ab2@22239>   LEA selcombf(PC),A1
000307E0 <AmiBlitz3.ab2@22240>   CMP.w #$1,D2
000307E4 <AmiBlitz3.ab2@22241>    BEQ.w JL_0_CED8
000307E8 <AmiBlitz3.ab2@22242>   LEA selcomw(PC),A0
000307EC <AmiBlitz3.ab2@22243>   CMP.w #$2,D2
000307F0 <AmiBlitz3.ab2@22244>    BEQ.w JL_0_CED8
000307F4 <AmiBlitz3.ab2@22245>   LEA selcoml(PC),A0
000307F8 <AmiBlitz3.ab2@22246>   LEA selcomlf(PC),A1
000307FC <AmiBlitz3.ab2@22247>   CMP.w #$7,D2
00030800 <AmiBlitz3.ab2@22248>    BCS.w JL_0_CED8
00030804 <AmiBlitz3.ab2@22250>   MOVE.w #$CE01,D1
00030808 <AmiBlitz3.ab2@22251>    BSR.w Atokejsr
0003080C <AmiBlitz3.ab2@22252> BRA.w JL_0_CEDC
00030810 <AmiBlitz3.ab2@22255>   BSR.w pokecode
00030814 <AmiBlitz3.ab2@22258>   MOVE.w selbne(PC),D1
0003081A <AmiBlitz3.ab2@22260>     TST.b fast
0003081E <AmiBlitz3.ab2@22261>     BEQ 'l1
00030824 <AmiBlitz3.ab2@22262>     ORI.l #$ff,d1
00030828 <AmiBlitz3.ab2@22263>     BSR writeword
0003082C <AmiBlitz3.ab2@22266>   BSR.w writeword
00030830 <AmiBlitz3.ab2@22267>   MOVEA.l firstsel(PC),A0
00030838 <AmiBlitz3.ab2@22268>   MOVE.l destpointer,$8(A0)
0003083C <AmiBlitz3.ab2@22269> BRA.w writeword
00030840 <AmiBlitz3.ab2@22273> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00030842 <AmiBlitz3.ab2@22274> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00030846 <AmiBlitz3.ab2@22277> sellineat:  Ds.l 1
0003084C <AmiBlitz3.ab2@22283>   TST.b debugmode
00030850 <AmiBlitz3.ab2@22284>    BEQ.w JL_0_CF0E
00030854 <AmiBlitz3.ab2@22285>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00030858 <AmiBlitz3.ab2@22286>    BSR.w writelong
00030862 <AmiBlitz3.ab2@22289>   MOVE.l linenumat,sellineat
0003086C <AmiBlitz3.ab2@22291>    MOVE.l destpointer,pushpc
00030876 <AmiBlitz3.ab2@22292>   MOVE.l hunkoffsetbase,pushoff
00030878 <AmiBlitz3.ab2@22293>   MOVEQ.l #$00,D2
0003087C <AmiBlitz3.ab2@22294>    BSR.w bakevalu                                          ;Evaluate
00030880 <AmiBlitz3.ab2@22295>    BSR.w JL_0_B5D2
00030884 <AmiBlitz3.ab2@22296>   CMP.w #$7,D2
00030888 <AmiBlitz3.ab2@22297>    BNE.w JL_0_CF36
0003088C <AmiBlitz3.ab2@22298>   MOVE.w clrst(PC),D1
00030890 <AmiBlitz3.ab2@22299>    BSR.w writeword
00030894 <AmiBlitz3.ab2@22302>    BSR.w JL_0_B63C
00030898 <AmiBlitz3.ab2@22303>   LEA selpushb(PC),A0
0003089C <AmiBlitz3.ab2@22304>   LEA selpushbf(PC),A1
000308A0 <AmiBlitz3.ab2@22305>   CMP.w #$1,D2
000308A4 <AmiBlitz3.ab2@22306>    BEQ.w JL_0_CF88
000308A8 <AmiBlitz3.ab2@22307>   LEA selpushw(PC),A0
000308AC <AmiBlitz3.ab2@22308>   CMP.w #$2,D2
000308B0 <AmiBlitz3.ab2@22309>    BEQ.w JL_0_CF88
000308B4 <AmiBlitz3.ab2@22310>   LEA selpushl(PC),A0
000308B8 <AmiBlitz3.ab2@22311>   LEA selpushlf(PC),A1
000308BC <AmiBlitz3.ab2@22312>   CMP.w #$7,D2
000308C0 <AmiBlitz3.ab2@22313>    BCS.w JL_0_CF88
000308C6 <AmiBlitz3.ab2@22315>   MOVE.w moved0a3,D1                                       ;d0 to a3!
000308CA <AmiBlitz3.ab2@22316>    BSR.w writeword
000308CE <AmiBlitz3.ab2@22317>   LEA selpushs(PC),A0
000308D2 <AmiBlitz3.ab2@22318>   LEA selpushsf(PC),A1
000308D6 <AmiBlitz3.ab2@22319>    BSR.w pokecode
000308DA <AmiBlitz3.ab2@22320>   MOVE.w #$C701,D1
000308DE <AmiBlitz3.ab2@22321>    BSR.w Atokejsr
000308E2 <AmiBlitz3.ab2@22322> BRA.w JL_0_CF8C
000308E6 <AmiBlitz3.ab2@22325>   BSR.w pokecode
000308E8 <AmiBlitz3.ab2@22328>   MOVEQ.l #$0E,D0
000308EA <AmiBlitz3.ab2@22329>   MOVEQ.l #$01,D1
000308F0 <AmiBlitz3.ab2@22330>   MOVEA.l _execbase,A6
000308F6 <AmiBlitz3.ab2@22332>   MOVE.l mempool,a0
000308FA <AmiBlitz3.ab2@22333>   JSR _AllocPooled(a6)
000308FC <AmiBlitz3.ab2@22334>   MOVEA.l D0,A0
00030900 <AmiBlitz3.ab2@22335>   MOVE.l firstsel(PC),(A0)
00030906 <AmiBlitz3.ab2@22336>   MOVE.l A0,firstsel
0003090A <AmiBlitz3.ab2@22337>   CLR.l $4(A0)
0003090E <AmiBlitz3.ab2@22338>   CLR.l $8(A0)
00030912 <AmiBlitz3.ab2@22339>   MOVE.w D2,$C(A0)
00030914 <AmiBlitz3.ab2@22340> RTS
0003091A <AmiBlitz3.ab2@22344>   MOVE.l firstrep,D0
0003091E <AmiBlitz3.ab2@22345>    BEQ.w JUMP_unterr1
00030922 <AmiBlitz3.ab2@22346>   MOVE.w #$6000,D1
00030926 <AmiBlitz3.ab2@22347>   BSR.w writeword
00030928 <AmiBlitz3.ab2@22348>   MOVEA.l D0,A0
0003092C <AmiBlitz3.ab2@22349>   MOVE.l $4(A0),D1
00030932 <AmiBlitz3.ab2@22350>   SUB.l destpointer,D1
00030934 <AmiBlitz3.ab2@22351>   TST.w D1
00030938 <AmiBlitz3.ab2@22352>    BPL.w JUMP_unterr2
0003093C <AmiBlitz3.ab2@22353>   BSR.w writeword
00030942 <AmiBlitz3.ab2@22354>   MOVEA.l _execbase,A6
00030946 <AmiBlitz3.ab2@22355> BRA.w JL_0_D036
0003094C <AmiBlitz3.ab2@22358> JMP unterr2
00030952 <AmiBlitz3.ab2@22361> JMP unterr1
00030958 <AmiBlitz3.ab2@22365>   MOVE.l firstrep,D0
0003095C <AmiBlitz3.ab2@22366>    BEQ.w JUMP_unterr1
00030960 <AmiBlitz3.ab2@22367>   BSR.w do_if
00030966 <AmiBlitz3.ab2@22368>   JSR reget
0003096A <AmiBlitz3.ab2@22369>    BNE.w JUMP_syntaxerr
00030970 <AmiBlitz3.ab2@22370>   MOVE.w dontwrite,D1
00030974 <AmiBlitz3.ab2@22371>    BNE.w JL_0_D020
0003097A <AmiBlitz3.ab2@22372>   MOVEA.l firstrep,A0
00030980 <AmiBlitz3.ab2@22373>   MOVEA.l destpointer,A1
00030986 <AmiBlitz3.ab2@22375>     TST.b fast
0003098A <AmiBlitz3.ab2@22376>     BEQ 'l1
0003098C <AmiBlitz3.ab2@22377>     SUBQ.w #4,a1
00030990 <AmiBlitz3.ab2@22378>     MOVE.l $4(A0),D2
00030992 <AmiBlitz3.ab2@22379>     SUB.l A1,D2
00030994 <AmiBlitz3.ab2@22380>     MOVE.l d2,(a1)
00030998 <AmiBlitz3.ab2@22381>   BRA JL_0_D020
0003099A <AmiBlitz3.ab2@22385>   SUBQ.w #2,A1
0003099E <AmiBlitz3.ab2@22386>   MOVE.l $4(A0),D2
000309A0 <AmiBlitz3.ab2@22387>   SUB.l A1,D2
000309A2 <AmiBlitz3.ab2@22388>   TST.w D2
000309A6 <AmiBlitz3.ab2@22389>    BPL.w JUMP_unterr2
000309A8 <AmiBlitz3.ab2@22390>   MOVE.w D2,(A1)
000309AE <AmiBlitz3.ab2@22393>   MOVEA.l firstiff,A1
000309B4 <AmiBlitz3.ab2@22394>   MOVE.l (A1),firstiff
000309B6 <AmiBlitz3.ab2@22395>   MOVEQ.l #$0E,D0
000309BC <AmiBlitz3.ab2@22396>   MOVEA.l _execbase,A6
000309C2 <AmiBlitz3.ab2@22397>   MOVE.l mempool,a0
000309C6 <AmiBlitz3.ab2@22398>   JSR _FreePooled(A6)
000309CC <AmiBlitz3.ab2@22401>   MOVEA.l firstrep,A1
000309D2 <AmiBlitz3.ab2@22402>   MOVE.l (A1),firstrep
000309D4 <AmiBlitz3.ab2@22403>   MOVEQ.l #$08,D0
000309DA <AmiBlitz3.ab2@22404>   MOVE.l mempool,a0
000309DE <AmiBlitz3.ab2@22405> JMP _FreePooled(A6)
000309E2 <AmiBlitz3.ab2@22408> iflineat:   Ds.l 1
000309E4 <AmiBlitz3.ab2@22412>   MOVEQ.l #$00,D2
000309EA <AmiBlitz3.ab2@22413>   TST.b fast
000309EE <AmiBlitz3.ab2@22414>   BEQ 'l1
000309F6 <AmiBlitz3.ab2@22415>   MOVE.b #1,nostringopt
000309FE <AmiBlitz3.ab2@22416>   MOVE.b #1,iniffcommand
00030A00 <AmiBlitz3.ab2@22420>   MOVEQ.l #$00,D1
00030A02 <AmiBlitz3.ab2@22423>   MOVE.w D1,-(A7)
00030A08 <AmiBlitz3.ab2@22424>   MOVE.l destpointer,-(A7)
00030A0A <AmiBlitz3.ab2@22425>   MOVE.w D2,-(A7)
00030A14 <AmiBlitz3.ab2@22426>   MOVE.l linenumat,iflineat
00030A16 <AmiBlitz3.ab2@22427>   MOVEQ.l #$00,D2
00030A20 <AmiBlitz3.ab2@22428>   MOVE.b optistring,optistring2
00030A28 <AmiBlitz3.ab2@22429>   MOVE.b #1,optistring
00030A2C <AmiBlitz3.ab2@22430>   BSR.w bakevalu
00030A36 <AmiBlitz3.ab2@22431>   MOVE.b optistring2,optistring
00030A3A <AmiBlitz3.ab2@22432>   CMP.w #$5,D2
00030A3E <AmiBlitz3.ab2@22433>    BEQ.w JL_0_D09C
00030A42 <AmiBlitz3.ab2@22434>   MOVE.w thetst1(PC),D1
00030A46 <AmiBlitz3.ab2@22435>   CMP.w #$1,D2
00030A4A <AmiBlitz3.ab2@22436>    BEQ.w writebranchcode
00030A4E <AmiBlitz3.ab2@22437>   MOVE.w thetst2(PC),D1
00030A52 <AmiBlitz3.ab2@22438>   CMP.w #$2,D2
00030A56 <AmiBlitz3.ab2@22439>    BEQ.w writebranchcode
00030A5A <AmiBlitz3.ab2@22440>   MOVE.w thetst4(PC),D1
00030A5E <AmiBlitz3.ab2@22441>   CMP.w #$7,D2
00030A62 <AmiBlitz3.ab2@22442>    BEQ.w writebranchcode
00030A66 <AmiBlitz3.ab2@22443>   MOVE.w thetst3(PC),D1
00030A6A <AmiBlitz3.ab2@22444> BRA.w writebranchcode
00030A70 <AmiBlitz3.ab2@22447>   TST.b fpu
00030A74 <AmiBlitz3.ab2@22448>   BEQ 'dofpu
00030A7A <AmiBlitz3.ab2@22449>   MOVE.l #$f200003a,d1
00030A7E <AmiBlitz3.ab2@22450>   BSR writelong
00030A82 <AmiBlitz3.ab2@22451>   MOVE.w #$f2c1,d1
00030A86 <AmiBlitz3.ab2@22452>   BSR writeword
00030A8A <AmiBlitz3.ab2@22453>   BSR writelong
00030A8C <AmiBlitz3.ab2@22454>   ADDQ.l #2,a7
00030A90 <AmiBlitz3.ab2@22455> BRA.w br2
00030A94 <AmiBlitz3.ab2@22458>    MOVE.w #$C900,D1
00030A98 <AmiBlitz3.ab2@22459>    BSR.w Atokejsr
00030A9C <AmiBlitz3.ab2@22460>   MOVE.l thetst5(PC),D1
00030AA0 <AmiBlitz3.ab2@22461>    BSR.w writelong
00030AA4 <AmiBlitz3.ab2@22462> BRA.w JL_0_D0B4
00030AAA <AmiBlitz3.ab2@22466>          CLR.b iniffcommand
00030AB0 <AmiBlitz3.ab2@22467>          TST.b fast                                        ;branchcode
00030AB4 <AmiBlitz3.ab2@22468>          BEQ b6
00030ABA <AmiBlitz3.ab2@22469>          TST.b fpu
00030ABE <AmiBlitz3.ab2@22470>          BEQ 'nofpu
00030AC4 <AmiBlitz3.ab2@22474>           MOVE.l destpointer,a0
00030ACA <AmiBlitz3.ab2@22475>          SUB.l load_var_addr,a0
00030AD0 <AmiBlitz3.ab2@22476>          CMP.l #4,a0
00030AD4 <AmiBlitz3.ab2@22477>          BEQ 'nofpu
00030ADC <AmiBlitz3.ab2@22478>          CMP.l #$f2400014,-4(a4)                           ;<
00030AE0 <AmiBlitz3.ab2@22479>          BNE 'nolt
00030AE6 <AmiBlitz3.ab2@22480>          SUBQ.l #2,destpointer
00030AEC <AmiBlitz3.ab2@22481>          MOVE.w #$f293,-4(a4)                              ;
00030AF0 <AmiBlitz3.ab2@22482> BRA 'brf
00030AF8 <AmiBlitz3.ab2@22485>   CMP.l #$f2400015,-4(a4)                                  ;<=
00030AFC <AmiBlitz3.ab2@22486>          BNE 'nole
00030B02 <AmiBlitz3.ab2@22487>          SUBQ.l #2,destpointer
00030B08 <AmiBlitz3.ab2@22488>          MOVE.w #$f292,-4(a4)
00030B0C <AmiBlitz3.ab2@22489> BRA 'brf
00030B14 <AmiBlitz3.ab2@22492>   CMP.l #$f2400013,-4(a4)                                  ;=>
00030B18 <AmiBlitz3.ab2@22493>          BNE 'noge
00030B1E <AmiBlitz3.ab2@22494>          SUBQ.l #2,destpointer
00030B24 <AmiBlitz3.ab2@22495>          MOVE.w #$f294,-4(a4)
00030B28 <AmiBlitz3.ab2@22496> BRA 'brf
00030B30 <AmiBlitz3.ab2@22499>   CMP.l #$f2400012,-4(a4)                                  ;>
00030B34 <AmiBlitz3.ab2@22500>          BNE 'nogt
00030B3A <AmiBlitz3.ab2@22501>          SUBQ.l #2,destpointer
00030B40 <AmiBlitz3.ab2@22502>          MOVE.w #$f295,-4(a4)
00030B44 <AmiBlitz3.ab2@22503> BRA 'brf
00030B4C <AmiBlitz3.ab2@22506>   CMP.l #$f2400001,-4(a4)                                  ;=
00030B50 <AmiBlitz3.ab2@22507>          BNE 'noeq
00030B56 <AmiBlitz3.ab2@22508>          SUBQ.l #2,destpointer
00030B5C <AmiBlitz3.ab2@22509>          MOVE.w #$f28e,-4(a4)
00030B60 <AmiBlitz3.ab2@22510> BRA 'brf
00030B68 <AmiBlitz3.ab2@22513>   CMP.l #$f240000e,-4(a4)                                  ;<>
00030B6C <AmiBlitz3.ab2@22514>          BNE 'none
00030B72 <AmiBlitz3.ab2@22515>          SUBQ.l #2,destpointer
00030B78 <AmiBlitz3.ab2@22516>          MOVE.w #$f281,-4(a4)
00030B7A <AmiBlitz3.ab2@22519>   ADDQ.l #2,a7
00030B80 <AmiBlitz3.ab2@22521>     TST.b fast
00030B84 <AmiBlitz3.ab2@22522>     BEQ 'l1
00030B8A <AmiBlitz3.ab2@22523>     OR.b #$40,-3(a4)
00030B8E <AmiBlitz3.ab2@22524>     BSR writeword
00030B92 <AmiBlitz3.ab2@22528>  BSR writeword
00030B96 <AmiBlitz3.ab2@22529> BRA.s br2
00030B9C <AmiBlitz3.ab2@22533>   MOVE.l destpointer,a0
00030BA2 <AmiBlitz3.ab2@22534>          SUB.l load_var_addr,a0
00030BA8 <AmiBlitz3.ab2@22535>          CMP.l #4,a0
00030BAC <AmiBlitz3.ab2@22536>          BEQ JL_0_D0B4
00030BB2 <AmiBlitz3.ab2@22537>          CMP.w #$4eb9,-6(a4)
00030BB6 <AmiBlitz3.ab2@22538>          BEQ b6
00030BBC <AmiBlitz3.ab2@22539>          CMP.w #$5ec0,-2(a4)                               ;>
00030BC0 <AmiBlitz3.ab2@22540>      BNE.s 'lb1
00030BC6 <AmiBlitz3.ab2@22541>          MOVE.w #$6f00,-2(a4)                              ;ble
00030BCA <AmiBlitz3.ab2@22542> BRA.s br
00030BD0 <AmiBlitz3.ab2@22545>  CMP.w #$5dc0,-2(a4)                                       ;<
00030BD4 <AmiBlitz3.ab2@22546>   BNE.s 'lb2
00030BDA <AmiBlitz3.ab2@22547>          MOVE.w #$6c00,-2(a4)                              ;bge
00030BDE <AmiBlitz3.ab2@22548> BRA.s br
00030BE4 <AmiBlitz3.ab2@22551>   CMP.w #$57c0,-2(a4)                                      ;=
00030BE8 <AmiBlitz3.ab2@22552>   BNE.s 'lb3
00030BEE <AmiBlitz3.ab2@22553>          MOVE.w #$6600,-2(a4)                              ;bne
00030BF2 <AmiBlitz3.ab2@22554> BRA.s br
00030BF8 <AmiBlitz3.ab2@22557>   CMP.w #$56c0,-2(a4)                                      ;<>
00030BFC <AmiBlitz3.ab2@22558>   BNE.s 'lb4
00030C02 <AmiBlitz3.ab2@22559>          MOVE.w #$6700,-2(a4)                              ;beq
00030C06 <AmiBlitz3.ab2@22560> BRA.s br
00030C0C <AmiBlitz3.ab2@22563>   CMP.w #$5cc0,-2(a4)                                      ;>=
00030C10 <AmiBlitz3.ab2@22564>   BNE.s 'lb5
00030C16 <AmiBlitz3.ab2@22565>          MOVE.w #$6d00,-2(a4)                              ;blt
00030C1A <AmiBlitz3.ab2@22566> BRA.s br
00030C20 <AmiBlitz3.ab2@22569>   CMP.w #$5fc0,-2(a4)                                      ;<=
00030C24 <AmiBlitz3.ab2@22570>         BNE.s b6
00030C2A <AmiBlitz3.ab2@22571>          MOVE.w #$6e00,-2(a4)                              ;bgt
00030C2C <AmiBlitz3.ab2@22574>   TST.w (a7)+
00030C32 <AmiBlitz3.ab2@22576>         TST.b fast
00030C36 <AmiBlitz3.ab2@22577>         BEQ 'l1
00030C3C <AmiBlitz3.ab2@22578>         OR.b #$ff,-1(a4)                                   ;long branches
00030C40 <AmiBlitz3.ab2@22579>         BSR writeword
00030C44 <AmiBlitz3.ab2@22583>         BSR writeword
00030C48 <AmiBlitz3.ab2@22584> BRA.s br2
00030C4C <AmiBlitz3.ab2@22587>   BSR.w writeword
00030C50 <AmiBlitz3.ab2@22590>   MOVE.l posbr(PC),D1
00030C52 <AmiBlitz3.ab2@22591>   TST.w (A7)+
00030C56 <AmiBlitz3.ab2@22592>    BEQ.w JL_0_D0C2
00030C5A <AmiBlitz3.ab2@22593>   MOVE.l negbr(PC),D1
00030C60 <AmiBlitz3.ab2@22596>   TST.b fast
00030C64 <AmiBlitz3.ab2@22597>            BEQ 'l1
00030C6A <AmiBlitz3.ab2@22598>            OR.l #$00ff0000,d1
00030C6E <AmiBlitz3.ab2@22599>            BSR writelong
00030C72 <AmiBlitz3.ab2@22600>            BSR writeword
00030C76 <AmiBlitz3.ab2@22601> BRA br2
00030C7A <AmiBlitz3.ab2@22604>   BSR.w writelong
00030C7C <AmiBlitz3.ab2@22607>  MOVEQ.l #$0E,D0
00030C7E <AmiBlitz3.ab2@22608>   MOVEQ.l #$01,D1
00030C84 <AmiBlitz3.ab2@22609>   MOVEA.l _execbase,A6
00030C8A <AmiBlitz3.ab2@22611>   MOVE.l mempool,a0
00030C8E <AmiBlitz3.ab2@22612>   JSR _AllocPooled(a6)
00030C90 <AmiBlitz3.ab2@22613>   MOVEA.l D0,A0
00030C96 <AmiBlitz3.ab2@22614>   MOVE.l firstiff,(A0)
00030C9C <AmiBlitz3.ab2@22615>   MOVE.l A0,firstiff
00030CA0 <AmiBlitz3.ab2@22616>   MOVE.l (A7)+,$4(A0)
00030CA8 <AmiBlitz3.ab2@22617>   MOVE.l destpointer,$8(A0)
00030CAC <AmiBlitz3.ab2@22618>   MOVE.w (A7)+,$C(A0)
00030CB2 <AmiBlitz3.ab2@22619>    JSR reget
00030CB6 <AmiBlitz3.ab2@22620>    BEQ.w JL_0_D10C
00030CBC <AmiBlitz3.ab2@22621>   BSET #$7,$C(A0)
00030CC6 <AmiBlitz3.ab2@22625>   MOVE.w oldqflag,instringon
00030CCC <AmiBlitz3.ab2@22626>   MOVEA.l lastsourcepos,A5
00030CD4 <AmiBlitz3.ab2@22627>   MOVE.w #$003A,lastchar
00030CD6 <AmiBlitz3.ab2@22630> RTS
00030CDA <AmiBlitz3.ab2@22634>   CMP.w #$1,D0
00030CDE <AmiBlitz3.ab2@22635>    BLT.w JL_0_D128
00030CE2 <AmiBlitz3.ab2@22636>   CMP.w #$0,D0
00030CE6 <AmiBlitz3.ab2@22637>    BGT.w JL_0_D128
00030CE8 <AmiBlitz3.ab2@22638>   ADD.w D0,D0
00030CEA <AmiBlitz3.ab2@22639>   ADD.w D0,D0
00030CEE <AmiBlitz3.ab2@22640>   MOVEA.l JL_0_D128(PC,D0.W),A0
00030CF0 <AmiBlitz3.ab2@22643> JMP (A0)
00030CF4 <AmiBlitz3.ab2@22646> BRA.w JL_0_D128
00030CF8 <AmiBlitz3.ab2@22650>   CMP.w #$1,D0
00030CFC <AmiBlitz3.ab2@22651>    BLT.w JL_0_D146
00030D00 <AmiBlitz3.ab2@22652>   CMP.w #$0,D0
00030D04 <AmiBlitz3.ab2@22653>    BGT.w JL_0_D146
00030D06 <AmiBlitz3.ab2@22654>   ADD.w D0,D0
00030D08 <AmiBlitz3.ab2@22655>   ADD.w D0,D0
00030D0C <AmiBlitz3.ab2@22656>   MOVEA.l JL_0_D146(PC,D0.W),A0
00030D0E <AmiBlitz3.ab2@22659>   JSR (A0)
00030D12 <AmiBlitz3.ab2@22662> BRA.w JL_0_D146
00030D16 <AmiBlitz3.ab2@22666>   CMP.w #$1,D0
00030D1A <AmiBlitz3.ab2@22667>    BLT.w JL_0_D168
00030D1E <AmiBlitz3.ab2@22668>   CMP.w #$0,D0
00030D22 <AmiBlitz3.ab2@22669>    BGT.w JL_0_D168
00030D24 <AmiBlitz3.ab2@22670>   ADD.w D0,D0
00030D26 <AmiBlitz3.ab2@22671>   ADD.w D0,D0
00030D2A <AmiBlitz3.ab2@22672>   MOVEA.l JL_0_D168(PC,D0.W),A0
00030D2E <AmiBlitz3.ab2@22675>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00030D30 <AmiBlitz3.ab2@22678>    JSR (A0)
00030D34 <AmiBlitz3.ab2@22681> BRA.w JL_0_D168
00030D36 <AmiBlitz3.ab2@22684> labcnt:   Ds.w 1
00030D38 <AmiBlitz3.ab2@22691>   MOVEQ.l #$02,D2
00030D3C <AmiBlitz3.ab2@22692>    BSR.w bakeval
00030D40 <AmiBlitz3.ab2@22693>   LEA JL_0_D10E(PC),A0
00030D44 <AmiBlitz3.ab2@22694>   LEA JL_0_D12C(PC),A1
00030D48 <AmiBlitz3.ab2@22695>   MOVE.w #$001A,D1
00030D4C <AmiBlitz3.ab2@22696>   CMP.w #-$7FFB,D0
00030D50 <AmiBlitz3.ab2@22697>    BEQ.w JL_0_D1B6
00030D54 <AmiBlitz3.ab2@22698>   CMP.w #-$7FFA,D0
00030D58 <AmiBlitz3.ab2@22699>    BNE.w JUMP_syntaxerr
00030D5C <AmiBlitz3.ab2@22700>   LEA JL_0_D12C(PC),A0
00030D60 <AmiBlitz3.ab2@22701>   LEA JL_0_D14A(PC),A1
00030D64 <AmiBlitz3.ab2@22702>   MOVE.w #$001A,D1
00030D6A <AmiBlitz3.ab2@22703>   TST.b debugmode
00030D6E <AmiBlitz3.ab2@22704>    BEQ.b JL_0_D1B6
00030D74 <AmiBlitz3.ab2@22705>    JSR chkstak
00030D78 <AmiBlitz3.ab2@22706>   LEA JL_0_D14A(PC),A0
00030D7C <AmiBlitz3.ab2@22707>   LEA labcnt(PC),A1
00030D80 <AmiBlitz3.ab2@22708>   MOVE.w #$001E,D1
00030D82 <AmiBlitz3.ab2@22711>   MOVE.w D1,-(A7)
00030D88 <AmiBlitz3.ab2@22712>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00030D8C <AmiBlitz3.ab2@22713>    BSR.w pokecode
00030D92 <AmiBlitz3.ab2@22714>   CLR.w labcnt
00030D98 <AmiBlitz3.ab2@22719>    JSR get1bytemain
00030D9E <AmiBlitz3.ab2@22720>   SUBQ.l #2,destpointer                                    ;for makealab!
00030DA2 <AmiBlitz3.ab2@22721>    BSR.w JL_0_AE22
00030DA8 <AmiBlitz3.ab2@22722>   ADDQ.l #2,destpointer
00030DAE <AmiBlitz3.ab2@22723>    JSR addoff
00030DB2 <AmiBlitz3.ab2@22724>   MOVE.l $8(A2),D1
00030DB6 <AmiBlitz3.ab2@22725>    BSR.w writelong
00030DBC <AmiBlitz3.ab2@22726>   ADDQ.w #1,labcnt
00030DC2 <AmiBlitz3.ab2@22727>    JSR reget
00030DC6 <AmiBlitz3.ab2@22728>   CMP.w #$2C,D0
00030DCA <AmiBlitz3.ab2@22729>    BEQ.w JL_0_D1C8
00030DCC <AmiBlitz3.ab2@22730>   MOVEA.l (A7)+,A0
00030DCE <AmiBlitz3.ab2@22731>   MOVE.w (A7)+,D2
00030DD4 <AmiBlitz3.ab2@22732>   MOVE.w dontwrite,D1
00030DD8 <AmiBlitz3.ab2@22733>    BNE.w JL_0_D21A
00030DDC <AmiBlitz3.ab2@22734>   MOVE.w labcnt(PC),D1
00030DE0 <AmiBlitz3.ab2@22735>   MOVE.w D1,$A(A0)
00030DE2 <AmiBlitz3.ab2@22736>   ADD.w D1,D1
00030DE4 <AmiBlitz3.ab2@22737>   ADD.w D1,D1
00030DE6 <AmiBlitz3.ab2@22738>   ADDQ.w #2,D1
00030DEA <AmiBlitz3.ab2@22739>   MOVE.w D1,$2(A0,D2.W)
00030DEC <AmiBlitz3.ab2@22742> RTS
00030DF2 <AmiBlitz3.ab2@22746>   TST.b debugmode
00030DF6 <AmiBlitz3.ab2@22747>    BEQ.w JL_0_D236
00030DFC <AmiBlitz3.ab2@22748>    JSR chkstak
00030E02 <AmiBlitz3.ab2@22749>   MOVE.l AL_0_D162,D1
00030E06 <AmiBlitz3.ab2@22750>    BSR.w writelong
00030E0C <AmiBlitz3.ab2@22752>   MOVE.w gosubcode,D1
00030E10 <AmiBlitz3.ab2@22753> BRA.w JL_0_D246
00030E16 <AmiBlitz3.ab2@22757>   MOVE.w gotocode,D1
00030E18 <AmiBlitz3.ab2@22760>   MOVE.w D1,-(A7)
00030E1C <AmiBlitz3.ab2@22761>    BSR.w JL_0_AE22
00030E1E <AmiBlitz3.ab2@22762>   MOVE.w (A7)+,D1
00030E22 <AmiBlitz3.ab2@22763>    BSR.w writeword
00030E28 <AmiBlitz3.ab2@22764>    JSR addoff
00030E2C <AmiBlitz3.ab2@22765>   MOVE.l $8(A2),D1
00030E30 <AmiBlitz3.ab2@22766> BRA.w writelong
00030E36 <AmiBlitz3.ab2@22770>   MOVE.w proceduremode,D1
00030E3A <AmiBlitz3.ab2@22771>    BEQ.w JUMP_badpenderr
00030E3E <AmiBlitz3.ab2@22772>   MOVE.w #$4EF9,D1
00030E42 <AmiBlitz3.ab2@22773>    BSR.w writeword
00030E48 <AmiBlitz3.ab2@22774>    JSR addoff
00030E4E <AmiBlitz3.ab2@22775>   MOVEA.l _execbase,A6
00030E50 <AmiBlitz3.ab2@22776>   MOVEQ.l #$08,D0
00030E52 <AmiBlitz3.ab2@22777>   MOVEQ.l #$01,D1
00030E58 <AmiBlitz3.ab2@22779>   MOVE.l mempool,a0
00030E5C <AmiBlitz3.ab2@22780>   JSR _AllocPooled(a6)
00030E5E <AmiBlitz3.ab2@22781>   MOVEA.l D0,A0
00030E64 <AmiBlitz3.ab2@22782>   MOVE.l firstpend,(A0)
00030E6A <AmiBlitz3.ab2@22783>   MOVE.l A0,firstpend
00030E72 <AmiBlitz3.ab2@22784>   MOVE.l destpointer,$4(A0)
00030E76 <AmiBlitz3.ab2@22785> BRA.w writelong
00030E7A <AmiBlitz3.ab2@22789>   BSR.w do_AsmExit
00030E80 <AmiBlitz3.ab2@22790> JMP get1bytemain
00030E88 <AmiBlitz3.ab2@22794>   MOVE.b #1,nostringopt
00030E8C <AmiBlitz3.ab2@22795>   MOVEM.l a0/a1/d1,-(a7)
00030E92 <AmiBlitz3.ab2@22796>   MOVEA.l currentfunction,A0
00030E98 <AmiBlitz3.ab2@22797>     CMP.l #0,a0
00030E9C <AmiBlitz3.ab2@22798>     BNE 'l1
00030EA2 <AmiBlitz3.ab2@22799>     JMP errorasmexit
00030EA4 <AmiBlitz3.ab2@22800> 'l1 MOVEQ.l #$00,D2
00030EA8 <AmiBlitz3.ab2@22801>   MOVE.b $5(A0),D2
00030EAC <AmiBlitz3.ab2@22802>   BSR.w eval
00030EB2 <AmiBlitz3.ab2@22804>   MOVEA.l currentfunction,A0
00030EB6 <AmiBlitz3.ab2@22805>   MOVE.l funcstruct_returntype(a0),a0
00030EBC <AmiBlitz3.ab2@22806>   CMP.l #0,a0
00030EC0 <AmiBlitz3.ab2@22807>   BEQ 'isstatement
00030EC8 <AmiBlitz3.ab2@22808>   CMP.l #$100,4(a0)
00030ECC <AmiBlitz3.ab2@22809>   BLT.w 'isvar
00030ECE <AmiBlitz3.ab2@22810>   MOVE.l a2,a1
00030ED4 <AmiBlitz3.ab2@22811>   TST.l typetocast
00030ED8 <AmiBlitz3.ab2@22812>   BEQ 'nocast
00030EDE <AmiBlitz3.ab2@22813>   MOVE.l typetocast,a1
00030EE0 <AmiBlitz3.ab2@22814> 'nocast  CMP.l a0,a1
00030EE4 <AmiBlitz3.ab2@22815>   BEQ 'ok
00030EEA <AmiBlitz3.ab2@22816>   CLR.l typetocast
00030EF0 <AmiBlitz3.ab2@22817>   MOVE.l lasttoken,d1
00030EF4 <AmiBlitz3.ab2@22818>   CMP.w #$b581,d1                   ; ok, when token for null
00030EF8 <AmiBlitz3.ab2@22819>   BEQ 'isnull
00030EFE <AmiBlitz3.ab2@22820> 'error  JMP errorconvertreturntype
00030F02 <AmiBlitz3.ab2@22827>   MOVEM.l (a7)+,a0/a1/d1
00030F06 <AmiBlitz3.ab2@22828> BRA.w do_AsmExit
00030F0C <AmiBlitz3.ab2@22830> error_convert_types2 JMP error_convert_types
00030F12 <AmiBlitz3.ab2@22843>   TST.b debugmode
00030F16 <AmiBlitz3.ab2@22844>    BEQ.w JL_0_D2CA
00030F1A <AmiBlitz3.ab2@22845>   MOVE.w #$C305,D1
00030F1E <AmiBlitz3.ab2@22846> BRA.w Atokejsr
00030F22 <AmiBlitz3.ab2@22849>   MOVE.w #$4E75,D1
00030F26 <AmiBlitz3.ab2@22850> BRA.w writeword
00030F2A <AmiBlitz3.ab2@22853> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00030F2E <AmiBlitz3.ab2@22854> proclocals:  Ds.l 1                                        ;for debugga!
00030F30 <AmiBlitz3.ab2@22855> procnum:     Ds.w 1
00030F32 <AmiBlitz3.ab2@22856> procnum2:    Ds.w 1
00030F36 <AmiBlitz3.ab2@22857> prolineat:   Ds.l 1
00030F3C <AmiBlitz3.ab2@22861>    TST.w proceduremode
00030F40 <AmiBlitz3.ab2@22862>    BGT JUMP_sreterr
00030F44 <AmiBlitz3.ab2@22863>    CMP.w #-$7FF9,D0
00030F48 <AmiBlitz3.ab2@22864>    BEQ.w JL_0_D29C
00030F4A <AmiBlitz3.ab2@22865>    MOVEQ.l #-$01,D1
00030F4E <AmiBlitz3.ab2@22866> BRA.w do_function2
00030F54 <AmiBlitz3.ab2@22869> JMP sreterr
00030F5A <AmiBlitz3.ab2@22873>   CLR.b skipfunc
00030F60 <AmiBlitz3.ab2@22874>   TST.l unusedfunc
00030F64 <AmiBlitz3.ab2@22875>   BEQ 'ex
00030F68 <AmiBlitz3.ab2@22876>   MOVEM.l d0-d7/a0-a6,-(a7)
00030F6E <AmiBlitz3.ab2@22877>   MOVE.l unusedfunc,d1
00030F74 <AmiBlitz3.ab2@22878>   LEA ptr_parameterstore,a5
00030F76 <AmiBlitz3.ab2@22881>   MOVE.l d1,a0
00030F7A <AmiBlitz3.ab2@22882>   LEA 12(a0),a2
00030F7C <AmiBlitz3.ab2@22883>   MOVE.l a5,a1
00030F7E <AmiBlitz3.ab2@22885>   CMPM.b (a1)+,(a2)+
00030F82 <AmiBlitz3.ab2@22886>   BNE 'neq
00030F84 <AmiBlitz3.ab2@22887>   TST.b (a2)
00030F88 <AmiBlitz3.ab2@22888>   BNE 'ch
00030F8A <AmiBlitz3.ab2@22889>   TST.b (a1)
00030F8E <AmiBlitz3.ab2@22890>   BNE 'neq
00030F96 <AmiBlitz3.ab2@22891>   MOVE.b #1,skipfunc
00030F9A <AmiBlitz3.ab2@22892> BRA 'out
00030F9C <AmiBlitz3.ab2@22895>   MOVE.l (a0),d1
00030FA0 <AmiBlitz3.ab2@22896>   BNE 'ag
00030FA4 <AmiBlitz3.ab2@22899>   MOVEM.l (a7)+,d0-d7/a0-a6
00030FA6 <AmiBlitz3.ab2@22902> RTS
00030FAC <AmiBlitz3.ab2@22906> JMP dupprocerr
00030FB2 <AmiBlitz3.ab2@22909> JMP illprocperr
00030FBA <AmiBlitz3.ab2@22916>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00030FBE <AmiBlitz3.ab2@22917>    BEQ JUMP_sreterr
00030FC2 <AmiBlitz3.ab2@22918>   CMP.w #-$7FF9,D0
00030FC6 <AmiBlitz3.ab2@22919>    BEQ.w do_function_return
00030FD0 <AmiBlitz3.ab2@22922>   MOVE.w oldqflag,instringon
00030FD6 <AmiBlitz3.ab2@22923>   MOVEA.l lastsourcepos,A5
00030FDC <AmiBlitz3.ab2@22924>   JSR getfunctionreturntype
00030FE2 <AmiBlitz3.ab2@22925>   JSR get1bytemain
00030FE8 <AmiBlitz3.ab2@22928>   TST.b declare
00030FEC <AmiBlitz3.ab2@22929>   BEQ 'l1
00030FF4 <AmiBlitz3.ab2@22930>   MOVE.b #1,nowdeclare
00030FFA <AmiBlitz3.ab2@22933>   JSR errchx                                           ;writejumpoverfunction
00031000 <AmiBlitz3.ab2@22936>   CLR.b fastfunc
0003100A <AmiBlitz3.ab2@22937>   MOVE.l firstiff,firstiffstore
00031012 <AmiBlitz3.ab2@22938>   CMP.l #"FAST",-1(a5)
00031016 <AmiBlitz3.ab2@22939>   BNE 'nofast
0003101C <AmiBlitz3.ab2@22940>   CMP.b #" ",3(a5)
00031020 <AmiBlitz3.ab2@22941>   BNE 'nofast
00031022 <AmiBlitz3.ab2@22942>   ADDQ.l #3,a5
00031026 <AmiBlitz3.ab2@22945>     CMP.b #" ",(a5)
0003102A <AmiBlitz3.ab2@22946>      BNE 'x1
0003102C <AmiBlitz3.ab2@22947>     ADDQ #1,a5
00031030 <AmiBlitz3.ab2@22948> BRA 'x2
00031036 <AmiBlitz3.ab2@22951>   MOVE.l a5,lastsourcepos
0003103E <AmiBlitz3.ab2@22952>   MOVE.b #1,fastfunc
00031046 <AmiBlitz3.ab2@22955>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
0003104A <AmiBlitz3.ab2@22956> BRA 'noopt
00031050 <AmiBlitz3.ab2@22958>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00031054 <AmiBlitz3.ab2@22959>   BNE 'noopt
00031056 <AmiBlitz3.ab2@22960>   ADDQ.l #4,a5
0003105A <AmiBlitz3.ab2@22963>     CMP.b #" ",(a5)
0003105E <AmiBlitz3.ab2@22964>      BNE 'x1b
00031060 <AmiBlitz3.ab2@22965>     ADDQ #1,a5
00031064 <AmiBlitz3.ab2@22966> BRA 'x2b
0003106A <AmiBlitz3.ab2@22969>   MOVE.l a5,lastsourcepos
00031070 <AmiBlitz3.ab2@22971>   JSR makename2
00031074 <AmiBlitz3.ab2@22972> BRA 'l1
0003107A <AmiBlitz3.ab2@22976>   JSR makename2
00031080 <AmiBlitz3.ab2@22977>   JSR checkused
00031086 <AmiBlitz3.ab2@22978>   TST.b skipfunc
0003108A <AmiBlitz3.ab2@22979>    BEQ 'l1
00031090 <AmiBlitz3.ab2@22980>   JSR skipme
00031096 <AmiBlitz3.ab2@22981>   CLR.b fastfunc
00031098 <AmiBlitz3.ab2@22982> RTS
000310A2 <AmiBlitz3.ab2@22985>   MOVE.l linenumat,prolineat
000310A8 <AmiBlitz3.ab2@22986>   ADDQ.w #1,procnum2
000310B0 <AmiBlitz3.ab2@22987>   MOVE.w procnum2(PC),procnum
000310B6 <AmiBlitz3.ab2@22988>   MOVE.w D1,proceduremode
000310BC <AmiBlitz3.ab2@22989>   CLR.w locvaroff
000310C0 <AmiBlitz3.ab2@22990>   CMP.w #$7B,D0
000310C4 <AmiBlitz3.ab2@22991>    BNE.w JUMP_syntaxerr
000310CC <AmiBlitz3.ab2@22992>    MOVE.b #1,infunctioncode
000310D2 <AmiBlitz3.ab2@22993>   MOVEA.l tempvm,A0
000310DA <AmiBlitz3.ab2@22994>   MOVE.w $C(A0),memlibstat
000310E0 <AmiBlitz3.ab2@22995>   BCLR #$7,$C(A0)                                          ;Bit out of range
000310E4 <AmiBlitz3.ab2@22996>   MOVE.w #$4EF9,D1
000310E8 <AmiBlitz3.ab2@22997>    BSR.w writeword
000310EE <AmiBlitz3.ab2@22998>    JSR addoff
000310F2 <AmiBlitz3.ab2@22999>    BSR.w writelong
000310F8 <AmiBlitz3.ab2@23000>    JSR findproc                                          ;findproc function
000310FC <AmiBlitz3.ab2@23001>    BEQ.w JUMP_dupprocerr
00031102 <AmiBlitz3.ab2@23002>    JSR addlabel
00031108 <AmiBlitz3.ab2@23003>    MOVE.b #31,$20(a2)                                      ;increase if more pars
0003110E <AmiBlitz3.ab2@23004>    MOVE.b #0,isfunc(a2)
00031116 <AmiBlitz3.ab2@23005>    MOVE.l functionreturntype,funcstruct_returntype(a2)
0003111E <AmiBlitz3.ab2@23006>   MOVE.l destpointer,$E(A2)
00031124 <AmiBlitz3.ab2@23007>   MOVE.l A2,currentfunction
0003112A <AmiBlitz3.ab2@23008>   LEA nops8,A0
00031130 <AmiBlitz3.ab2@23009>   LEA dataget,A1
00031134 <AmiBlitz3.ab2@23010>    BSR.w pokecode2
0003113A <AmiBlitz3.ab2@23011>   TST.b debugmode
0003113E <AmiBlitz3.ab2@23012>    BEQ.b JL_0_D3AA
00031140 <AmiBlitz3.ab2@23013>   MOVEQ.l #$04,D1
00031146 <AmiBlitz3.ab2@23014>    JSR writetrap
00031150 <AmiBlitz3.ab2@23015>   MOVE.l destpointer,proclocals
00031154 <AmiBlitz3.ab2@23016>    BSR.w writelong
00031158 <AmiBlitz3.ab2@23017>    BSR.w writelong
0003115C <AmiBlitz3.ab2@23020>    LEA $16(A2),A4
00031164 <AmiBlitz3.ab2@23021>   MOVE.b proceduremode+1,$5(A2)
00031166 <AmiBlitz3.ab2@23022>   MOVEQ.l #$00,D6
00031168 <AmiBlitz3.ab2@23023>   MOVEQ.l #$00,D5
0003116E <AmiBlitz3.ab2@23024>    JSR get1bytemain
00031172 <AmiBlitz3.ab2@23025>   CMP.w #$7D,D0
00031176 <AmiBlitz3.ab2@23026>    BEQ.w JL_0_D466
0003117A <AmiBlitz3.ab2@23029>    CMP.b #"@",d0
0003117E <AmiBlitz3.ab2@23030>    BNE 'l2
00031180 <AmiBlitz3.ab2@23031>    MOVE.l a0,-(a7)
00031186 <AmiBlitz3.ab2@23032>    MOVE.l currentfunction,a0
0003118C <AmiBlitz3.ab2@23033>    CMP.b #31,$20(a0)                                       ;increase if morepars
00031190 <AmiBlitz3.ab2@23034>    BNE 'l1
00031194 <AmiBlitz3.ab2@23035>    MOVE.b d6,$20(a0)                                       ;increase if morepar
0003119A <AmiBlitz3.ab2@23038>    JSR get1bytemain
0003119C <AmiBlitz3.ab2@23039>    MOVE.l (a7)+,a0
000311A0 <AmiBlitz3.ab2@23042>    BSR.w getparameter
000311A4 <AmiBlitz3.ab2@23043>    BSR.w JL_0_8E3C
000311AC <AmiBlitz3.ab2@23044>   CMPI.l #$7,$4(A2)
000311B0 <AmiBlitz3.ab2@23045>    BNE.w JL_0_D3F6
000311B6 <AmiBlitz3.ab2@23046>   LEA stbuff,A0
000311B8 <AmiBlitz3.ab2@23047>   MOVE.w D5,D1
000311BA <AmiBlitz3.ab2@23048>   LSL.w #2,D1
000311BE <AmiBlitz3.ab2@23049>   MOVE.w D6,$0(A0,D1.W)
000311C4 <AmiBlitz3.ab2@23050>   MOVE.w $4(A3),$2(A0,D1.W)
000311C6 <AmiBlitz3.ab2@23051>   ADDQ.w #1,D5
000311C8 <AmiBlitz3.ab2@23052>   MOVEQ.l #$07,D2
000311CC <AmiBlitz3.ab2@23053> BRA.w JL_0_D442
000311D2 <AmiBlitz3.ab2@23056> JMP toovarerr
000311D6 <AmiBlitz3.ab2@23059>   MOVE.w #$2940,D1
000311D8 <AmiBlitz3.ab2@23060>   MOVEQ.l #$03,D2
000311E0 <AmiBlitz3.ab2@23061>   BTST #$0,flagmask+1
000311E4 <AmiBlitz3.ab2@23062>    BNE.w JL_0_D430
000311EC <AmiBlitz3.ab2@23063>   CMPI.l #$100,$4(A2)
000311F0 <AmiBlitz3.ab2@23064>    BCC.w JUMP_illprocperr
000311F4 <AmiBlitz3.ab2@23065>   MOVE.w $6(A2),D2
000311F8 <AmiBlitz3.ab2@23066>   CMP.w #$2,D2
000311FC <AmiBlitz3.ab2@23067>    BHI.w JL_0_D430
00031200 <AmiBlitz3.ab2@23068>    BEQ.w JL_0_D42C
00031204 <AmiBlitz3.ab2@23069>   EORI.w #$3000,D1
00031208 <AmiBlitz3.ab2@23070> BRA.w JL_0_D430
0003120E <AmiBlitz3.ab2@23073> JMP more6pard
00031212 <AmiBlitz3.ab2@23076>   ORI.w #$1000,D1
00031214 <AmiBlitz3.ab2@23079>   OR.w D6,D1
0003121A <AmiBlitz3.ab2@23080>   TST.b fpu
0003121E <AmiBlitz3.ab2@23081>   BEQ 'nofpu
00031222 <AmiBlitz3.ab2@23082>   CMP.b #5,d2
00031226 <AmiBlitz3.ab2@23083>   BNE 'nofpu
0003122A <AmiBlitz3.ab2@23084>   CMP.w #6,d6
0003122E <AmiBlitz3.ab2@23085>   BLT 'l10a
00031234 <AmiBlitz3.ab2@23086>   CMP.l #newtype_double,a2
00031238 <AmiBlitz3.ab2@23087>   BEQ JUMP_more6pard
0003123C <AmiBlitz3.ab2@23088> BRA 'nofpu
00031242 <AmiBlitz3.ab2@23091>   MOVE.l #$f22c6400,d1
00031246 <AmiBlitz3.ab2@23092>   MOVEM.l d0/a4,-(a7)
00031248 <AmiBlitz3.ab2@23093>   MOVE.l d6,d0
0003124A <AmiBlitz3.ab2@23094>   ASL.l #7,d0
0003124C <AmiBlitz3.ab2@23095>   OR.w d0,d1
00031252 <AmiBlitz3.ab2@23096>   CMP.l #newtype_double,a2
00031256 <AmiBlitz3.ab2@23097>   BNE 'l1
0003125C <AmiBlitz3.ab2@23098>   OR.l #$1000,d1
00031260 <AmiBlitz3.ab2@23101>   BSR writelong
00031264 <AmiBlitz3.ab2@23102>   MOVE.w 4(a3),d1
00031268 <AmiBlitz3.ab2@23103>   BSR writeword
0003126C <AmiBlitz3.ab2@23104>   MOVEM.l (a7)+,a4/d0
00031270 <AmiBlitz3.ab2@23105> BRA JL_0_D442
00031272 <AmiBlitz3.ab2@23108>   MOVE.l A4,-(A7)
00031276 <AmiBlitz3.ab2@23109>    CMP.w #6,d6
0003127A <AmiBlitz3.ab2@23110>    BLT 'l10
0003127E <AmiBlitz3.ab2@23111>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00031280 <AmiBlitz3.ab2@23112>    ADD.w d6,d1
00031286 <AmiBlitz3.ab2@23113>    JSR Atokejsr
0003128C <AmiBlitz3.ab2@23114>    TST.w dontwrite
00031290 <AmiBlitz3.ab2@23115>    BNE 'l10
00031296 <AmiBlitz3.ab2@23116>    MOVE.l data1start,d1
0003129C <AmiBlitz3.ab2@23117>    MOVE.l destpointer,a4
000312A0 <AmiBlitz3.ab2@23118>    ADD.l d1,-6(a4)
000312A6 <AmiBlitz3.ab2@23119>    MOVE.l destpointer,d1
000312A8 <AmiBlitz3.ab2@23120>    SUBQ.l #6,d1
000312AE <AmiBlitz3.ab2@23121>    SUB.l destbufferstart,d1
000312B0 <AmiBlitz3.ab2@23123>    MOVE.l d2,-(a7)
000312B2 <AmiBlitz3.ab2@23124>    MOVE.l d1,d2
000312B8 <AmiBlitz3.ab2@23125>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000312BA <AmiBlitz3.ab2@23126>    MOVE.l (a7)+,d2
000312C0 <AmiBlitz3.ab2@23127>    MOVE.l destpointer,a4
000312C4 <AmiBlitz3.ab2@23128>    CMP.w #2,d2
000312C8 <AmiBlitz3.ab2@23129>    BNE 'nw1
000312CE <AmiBlitz3.ab2@23131>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
000312D6 <AmiBlitz3.ab2@23132>    ADD.l #2,-6(a4)
000312DA <AmiBlitz3.ab2@23135>    CMP.w #1,d2
000312DE <AmiBlitz3.ab2@23136>    BNE 'nb
000312E4 <AmiBlitz3.ab2@23137>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000312EC <AmiBlitz3.ab2@23138>    ADD.l #3,-6(a4)
000312F2 <AmiBlitz3.ab2@23141>    MOVE.w $4(a3),-2(a4)
000312F6 <AmiBlitz3.ab2@23142> BRA 'ne1
000312FA <AmiBlitz3.ab2@23145>   BSR.w writeword                                          ;write storeparameter
000312FE <AmiBlitz3.ab2@23148>   MOVE.w $4(A3),D1
00031302 <AmiBlitz3.ab2@23149>    BSR.w writeword
00031304 <AmiBlitz3.ab2@23152>   MOVEA.l (A7)+,A4
0003130A <AmiBlitz3.ab2@23155>   CLR.l functionreturntype
0003130C <AmiBlitz3.ab2@23156>   ADDQ.w #1,D6
00031310 <AmiBlitz3.ab2@23157>   CMP.w #11,D6                                             ;max function parameters
00031314 <AmiBlitz3.ab2@23158>    BCC.w JUMP_toovarerr
0003131A <AmiBlitz3.ab2@23159>   MOVE.l currentfunction,a0
0003131E <AmiBlitz3.ab2@23160>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00031320 <AmiBlitz3.ab2@23161>   MOVE.b D2,(A4)+
00031324 <AmiBlitz3.ab2@23162>   CMP.w #$2C,D0
00031328 <AmiBlitz3.ab2@23163>    BNE.w JL_0_D45E
0003132E <AmiBlitz3.ab2@23164>    JSR get1bytemain
00031332 <AmiBlitz3.ab2@23176> BRA.w JL_0_D3C6
00031336 <AmiBlitz3.ab2@23179>   CMP.w #$7D,D0
0003133A <AmiBlitz3.ab2@23180>    BNE.w JUMP_syntaxerr
00031340 <AmiBlitz3.ab2@23183>   MOVEA.l currentfunction,A2
00031342 <AmiBlitz3.ab2@23184>   LSL.w #4,D5
00031344 <AmiBlitz3.ab2@23185>   OR.w D5,D6
00031348 <AmiBlitz3.ab2@23186>   MOVE.b D6,$4(A2)
0003134A <AmiBlitz3.ab2@23187>   LSR.w #4,D6
0003134E <AmiBlitz3.ab2@23188>    BEQ.w JL_0_D4C4
00031354 <AmiBlitz3.ab2@23189>   LEA stbuff,A0
00031356 <AmiBlitz3.ab2@23190>   SUBQ.w #1,D6
00031358 <AmiBlitz3.ab2@23193>     MOVE.w D6,D1                                           ;function stringpars
0003135A <AmiBlitz3.ab2@23194>     LSL.w #2,D1                                            ;stringsize was 2
0003135C <AmiBlitz3.ab2@23196>       LSL.w #1,d1
0003135E <AmiBlitz3.ab2@23197>       ADDQ.w #4,d1
00031360 <AmiBlitz3.ab2@23199>     ADDQ.w #8,D1
00031366 <AmiBlitz3.ab2@23200>     MOVE.w D1,funcst+2
0003136C <AmiBlitz3.ab2@23201>     MOVE.l funcst,D1
00031370 <AmiBlitz3.ab2@23202>     BSR.w writelong
00031372 <AmiBlitz3.ab2@23203>     MOVE.w (A0)+,D1
00031376 <AmiBlitz3.ab2@23204>     CMP.b #5,d1
0003137A <AmiBlitz3.ab2@23205>     BLE 's1
0003137E <AmiBlitz3.ab2@23206>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00031382 <AmiBlitz3.ab2@23207>     BSR writeinstruction
00031384 <AmiBlitz3.ab2@23208>     MOVE.w D6,D1                                           ;function stringpars
00031386 <AmiBlitz3.ab2@23209>     LSL.w #2,D1                                            ;stringsize was 2
00031388 <AmiBlitz3.ab2@23211>       LSL.w #1,d1
0003138A <AmiBlitz3.ab2@23213>     ADDQ.w #8,D1
0003138E <AmiBlitz3.ab2@23214>     BSR writeword
00031392 <AmiBlitz3.ab2@23215>   BRA 's2
00031398 <AmiBlitz3.ab2@23218>     OR.w movedna3,D1
0003139C <AmiBlitz3.ab2@23219>      BSR.w writeword
000313A2 <AmiBlitz3.ab2@23222>     MOVE.w (A0)+,least+2
000313A8 <AmiBlitz3.ab2@23223>     MOVE.l least,D1
000313AC <AmiBlitz3.ab2@23224>      BSR.w writelong
000313AE <AmiBlitz3.ab2@23225>     MOVE.l A0,-(A7)
000313B2 <AmiBlitz3.ab2@23226>     MOVE.w #$C700,D1
000313B6 <AmiBlitz3.ab2@23227>      BSR.w Atokejsr
000313B8 <AmiBlitz3.ab2@23228>     MOVEA.l (A7)+,A0
000313BC <AmiBlitz3.ab2@23229>   DBF D6,JL_0_D482
000313C2 <AmiBlitz3.ab2@23232> JMP get1bytemain
000313C8 <AmiBlitz3.ab2@23236>   MOVE.w dontwrite,D1
000313CC <AmiBlitz3.ab2@23237>    BNE.w JL_0_D4F6
000313D2 <AmiBlitz3.ab2@23238>   MOVE.l destpointer,-(A7)
000313D8 <AmiBlitz3.ab2@23239>   MOVE.l A0,destpointer
000313DE <AmiBlitz3.ab2@23240>   MOVE.l linksize,D1
000313E2 <AmiBlitz3.ab2@23241>    BSR.w writelong                                         ;writefunctions jumppos
000313E8 <AmiBlitz3.ab2@23242>    TST.b fastfunc
000313EC <AmiBlitz3.ab2@23243>    BNE 'skip
000313F0 <AmiBlitz3.ab2@23244>   MOVE.w #$CC00,D1
000313F4 <AmiBlitz3.ab2@23245>    BSR.w tokejsr2                                          ;write clearvars
000313FA <AmiBlitz3.ab2@23248>   MOVE.l (A7)+,destpointer
000313FC <AmiBlitz3.ab2@23251> RTS
00031402 <AmiBlitz3.ab2@23255>   MOVEA.l currentfunction,A2
00031406 <AmiBlitz3.ab2@23256>   MOVEA.l $E(A2),A0
0003140A <AmiBlitz3.ab2@23257>   MOVE.w $6(A2),D1
0003140E <AmiBlitz3.ab2@23258>    BEQ.w JL_0_D538
00031414 <AmiBlitz3.ab2@23259>   MOVE.w D1,linksize+2
00031418 <AmiBlitz3.ab2@23260>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
0003141C <AmiBlitz3.ab2@23261>    BNE.w JL_0_D522
0003141E <AmiBlitz3.ab2@23262>   ADDQ.w #6,A0
00031422 <AmiBlitz3.ab2@23263>   MOVE.l A0,$E(A2)
00031426 <AmiBlitz3.ab2@23264> BRA.w JL_0_D4C8
00031428 <AmiBlitz3.ab2@23267>   MOVE.l A0,-(A7)
0003142C <AmiBlitz3.ab2@23268>    BSR.w JL_0_D4C8
0003142E <AmiBlitz3.ab2@23269>   MOVEA.l (A7)+,A0
00031432 <AmiBlitz3.ab2@23270>   LEA $A(A0),A0
00031438 <AmiBlitz3.ab2@23271>   MOVEA.l currentfunction,A2
0003143C <AmiBlitz3.ab2@23272> BRA.w JL_0_D54A
00031440 <AmiBlitz3.ab2@23275>   MOVE.w $8(A2),D1
00031444 <AmiBlitz3.ab2@23276>    BNE.w JL_0_D54A
00031448 <AmiBlitz3.ab2@23277>   LEA $10(A0),A0
0003144C <AmiBlitz3.ab2@23278>   MOVE.l A0,$E(A2)
0003144E <AmiBlitz3.ab2@23279> RTS
00031454 <AmiBlitz3.ab2@23283> JMP errormsg_nofast
0003145A <AmiBlitz3.ab2@23286>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
0003145E <AmiBlitz3.ab2@23287>    BNE.w JL_0_D580
00031464 <AmiBlitz3.ab2@23288>    TST.b fastfunc
00031468 <AmiBlitz3.ab2@23289>    BNE JUMP_errormsg_nofast
0003146E <AmiBlitz3.ab2@23290>   MOVE.l destpointer,-(A7)
00031474 <AmiBlitz3.ab2@23291>   MOVE.l A0,destpointer
00031478 <AmiBlitz3.ab2@23292>   MOVE.w #$4EB9,D1
0003147C <AmiBlitz3.ab2@23293>    BSR.w writeword
00031482 <AmiBlitz3.ab2@23294>    JSR addoff
00031486 <AmiBlitz3.ab2@23295>    BSR.w writelong
00031488 <AmiBlitz3.ab2@23296>   MOVEA.l (A7)+,A0
0003148E <AmiBlitz3.ab2@23297>   MOVEA.l destpointer,A1
00031490 <AmiBlitz3.ab2@23298>   MOVE.l A0,-(A1)
00031496 <AmiBlitz3.ab2@23299>   MOVE.l A0,destpointer
0003149A <AmiBlitz3.ab2@23302>   MOVE.w $8(A2),D4
0003149E <AmiBlitz3.ab2@23303>    BPL.w JL_0_D59E
000314A2 <AmiBlitz3.ab2@23304>   MOVE.w #$C004,D1
000314A6 <AmiBlitz3.ab2@23305>    BSR.w tokejsr2
000314AC <AmiBlitz3.ab2@23306>   MOVEA.l currentfunction,A2
000314B0 <AmiBlitz3.ab2@23307>   MOVE.w $8(A2),D4
000314B4 <AmiBlitz3.ab2@23308>   ANDI.w #$7FFF,D4
000314B8 <AmiBlitz3.ab2@23311>    BEQ.w JL_0_D5E0
000314BC <AmiBlitz3.ab2@23312>   MOVE.b $4(A2),D1
000314C0 <AmiBlitz3.ab2@23313>   ANDI.w #$F,D1
000314C2 <AmiBlitz3.ab2@23314>   MOVE.w D1,-(A7)
000314C6 <AmiBlitz3.ab2@23315>   CMP.w #$5,D1
000314CA <AmiBlitz3.ab2@23316>    BCS.w JL_0_D5BC
000314CE <AmiBlitz3.ab2@23317>   MOVE.w #$2F04,D1
000314D2 <AmiBlitz3.ab2@23318>    BSR.w writeword
000314D8 <AmiBlitz3.ab2@23321>   MOVE.l locdatast,D3
000314DE <AmiBlitz3.ab2@23322>    JSR datastart
000314E2 <AmiBlitz3.ab2@23323>   MOVE.w #$C501,D1
000314E6 <AmiBlitz3.ab2@23324>    BSR.w tokejsr2
000314E8 <AmiBlitz3.ab2@23325>   MOVE.w (A7)+,D1
000314EC <AmiBlitz3.ab2@23326>   CMP.w #$5,D1
000314F0 <AmiBlitz3.ab2@23327>    BCS.w JL_0_D5E0
000314F4 <AmiBlitz3.ab2@23328>   MOVE.w #$281F,D1
000314F8 <AmiBlitz3.ab2@23329>    BSR.w writeword
000314FC <AmiBlitz3.ab2@23331>   MOVE.w #$4E75,D1
00031500 <AmiBlitz3.ab2@23332> BRA.w writeword
00031506 <AmiBlitz3.ab2@23336>   LEA mwait,A0
0003150C <AmiBlitz3.ab2@23337>   LEA mwaitf,A1
00031510 <AmiBlitz3.ab2@23338> BRA.w pokecode
00031516 <AmiBlitz3.ab2@23342> JMP laberr
0003151A <AmiBlitz3.ab2@23345>   CMP.w #$2E,D0
0003151E <AmiBlitz3.ab2@23346>   BNE.w JUMP_syntaxerr
00031524 <AmiBlitz3.ab2@23347>   JSR getparameter2
00031528 <AmiBlitz3.ab2@23348>   BEQ.w JUMP_laberr
0003152E <AmiBlitz3.ab2@23349>   LEA newtypebase,A2
00031534 <AmiBlitz3.ab2@23350>   JSR findtype
00031538 <AmiBlitz3.ab2@23351>   BNE.w JL_0_D626
00031540 <AmiBlitz3.ab2@23352>   CMPI.l #MaxByte,$4(A2)
00031544 <AmiBlitz3.ab2@23353>   BNE.w JUMP_typeerr
00031548 <AmiBlitz3.ab2@23354> BRA.w JL_0_D62A
0003154E <AmiBlitz3.ab2@23357> JMP typeerr
00031554 <AmiBlitz3.ab2@23360>   JSR addlabel
00031558 <AmiBlitz3.ab2@23363>   CLR.l $4(A2)
0003155E <AmiBlitz3.ab2@23364>   MOVE.l A2,thistype
00031564 <AmiBlitz3.ab2@23365>   CLR.l prevtype
0003156A <AmiBlitz3.ab2@23366>   CLR.w typelen
00031570 <AmiBlitz3.ab2@23367>   CLR.w linemode
00031576 <AmiBlitz3.ab2@23368>   JSR reget
0003157A <AmiBlitz3.ab2@23369>   BNE.w typemode
0003157C <AmiBlitz3.ab2@23370> RTS
00031580 <AmiBlitz3.ab2@23373>   CMP.w #-$7FFE,D0
00031584 <AmiBlitz3.ab2@23374>   BEQ.w JL_0_D82E
0003158E <AmiBlitz3.ab2@23376>   MOVE.w oldqflag,instringon
00031594 <AmiBlitz3.ab2@23377>   MOVEA.l lastsourcepos,A5
00031596 <AmiBlitz3.ab2@23378>   MOVEQ.l #$00,D6
0003159A <AmiBlitz3.ab2@23379>   CMP.w #$2A,D0
0003159E <AmiBlitz3.ab2@23380>   BNE.w JL_0_D670
000315A0 <AmiBlitz3.ab2@23381>   MOVEQ.l #$01,D6
000315A6 <AmiBlitz3.ab2@23382>   JSR get1bytemain
000315AA <AmiBlitz3.ab2@23383> BRA.w JL_0_D67E
000315AE <AmiBlitz3.ab2@23386>   CMP.w #$40,D0
000315B2 <AmiBlitz3.ab2@23387>   BNE.w JL_0_D67E
000315B4 <AmiBlitz3.ab2@23388>   MOVEQ.l #$05,D6
000315BA <AmiBlitz3.ab2@23389>   JSR get1bytemain
000315C0 <AmiBlitz3.ab2@23392>   MOVE.w D6,flagmask
000315C6 <AmiBlitz3.ab2@23393>   JSR getparameter2
000315CA <AmiBlitz3.ab2@23394>   BEQ.w JUMP_syntaxerr
000315D0 <AmiBlitz3.ab2@23395>   MOVEA.l thistype,A2
000315D2 <AmiBlitz3.ab2@23396>   ADDQ.w #4,A2
000315D8 <AmiBlitz3.ab2@23397>   JSR findvariable2
000315DC <AmiBlitz3.ab2@23398>   BEQ.w JUMP_dupofferr
000315E2 <AmiBlitz3.ab2@23399>   JSR addlabel
000315E4 <AmiBlitz3.ab2@23400>   MOVE.l A2,-(A7)
000315E8 <AmiBlitz3.ab2@23401>   CMP.w #$2E,D0
000315EC <AmiBlitz3.ab2@23402>    BEQ.w JL_0_D6CE
000315F0 <AmiBlitz3.ab2@23403>   CMP.w #$24,D0
000315F4 <AmiBlitz3.ab2@23404>    BNE.w JL_0_D6C0
000315FA <AmiBlitz3.ab2@23405>   MOVE.l #newtype_string,D2
00031600 <AmiBlitz3.ab2@23406>    JSR get1bytemain
00031604 <AmiBlitz3.ab2@23407> BRA.w JL_0_D710
0003160A <AmiBlitz3.ab2@23410> JMP dupofferr
00031610 <AmiBlitz3.ab2@23413>   MOVE.l prevtype,D2
00031614 <AmiBlitz3.ab2@23414>   BEQ.w JUMP_notypeerr
00031618 <AmiBlitz3.ab2@23415> BRA.w JL_0_D706
0003161E <AmiBlitz3.ab2@23418> JMP notypeerr
00031624 <AmiBlitz3.ab2@23421>   JSR getparameter2
00031628 <AmiBlitz3.ab2@23422>    BEQ.w JUMP_syntaxerr
0003162E <AmiBlitz3.ab2@23423>   LEA newtypebase,A2
00031634 <AmiBlitz3.ab2@23424>    JSR findtype
00031638 <AmiBlitz3.ab2@23425>    BEQ.w JL_0_D704
00031640 <AmiBlitz3.ab2@23426>   BTST #$0,flagmask+1
00031644 <AmiBlitz3.ab2@23427>    BEQ.w JUMP_notypeerr
0003164A <AmiBlitz3.ab2@23428>   JSR addlabel
00031652 <AmiBlitz3.ab2@23431>   MOVE.w linenumat+2,$8(A2)
0003165A <AmiBlitz3.ab2@23432>   MOVE.l #MaxByte,$4(A2)
0003165C <AmiBlitz3.ab2@23435>   MOVE.l A2,D2
00031662 <AmiBlitz3.ab2@23438>   CMP.l #newtype_byte,D2
00031666 <AmiBlitz3.ab2@23439>    BEQ.w JL_0_D71E
0003166C <AmiBlitz3.ab2@23442>   ADDQ.w #1,typelen
00031674 <AmiBlitz3.ab2@23443>   BCLR #$0,typelen+1
00031676 <AmiBlitz3.ab2@23446>   MOVEQ.l #$00,D3
00031678 <AmiBlitz3.ab2@23447>   MOVEA.l D2,A2
0003167E <AmiBlitz3.ab2@23448>   MOVE.l A2,prevtype
00031682 <AmiBlitz3.ab2@23449>   MOVE.w $8(A2),D3
00031684 <AmiBlitz3.ab2@23450>   MOVEA.l (A7)+,A2
00031688 <AmiBlitz3.ab2@23451>   MOVE.l D2,$A(A2)
0003168A <AmiBlitz3.ab2@23452>   MOVEQ.l #$00,D4
00031690 <AmiBlitz3.ab2@23453>   MOVE.w typelen,D4
00031694 <AmiBlitz3.ab2@23454>   MOVE.w D4,$4(A2)
0003169C <AmiBlitz3.ab2@23455>   BTST #$0,flagmask+1
000316A0 <AmiBlitz3.ab2@23456>    BEQ.w JL_0_D74C
000316A2 <AmiBlitz3.ab2@23457>   MOVEQ.l #$04,D3
000316A6 <AmiBlitz3.ab2@23460>   CMP.w #$5B,D0
000316AA <AmiBlitz3.ab2@23461>    BNE.w JL_0_D782
000316AE <AmiBlitz3.ab2@23462>   MOVEM.l D3-D4/A2,-(A7)
000316B2 <AmiBlitz3.ab2@23463>    BSR.w AJL_0_BF6E
000316B6 <AmiBlitz3.ab2@23464>   CMP.w #$5D,D0
000316BA <AmiBlitz3.ab2@23465>    BNE.w JUMP_syntaxerr
000316BC <AmiBlitz3.ab2@23466>   TST.w D6
000316C0 <AmiBlitz3.ab2@23467>    BNE.w JUMP_fpconerr
000316C2 <AmiBlitz3.ab2@23468>   MOVE.l D3,D1
000316C6 <AmiBlitz3.ab2@23469>   MOVEM.l (A7)+,D3-D4/A2
000316CC <AmiBlitz3.ab2@23470>    JSR get1bytemain
000316D0 <AmiBlitz3.ab2@23471>   MOVE.w D1,$8(A2)
000316D4 <AmiBlitz3.ab2@23472>   MULU.l d1,d3                                             ;>32k fix was mulu.w
000316DC <AmiBlitz3.ab2@23473>   ORI.w #$2,flagmask
000316DE <AmiBlitz3.ab2@23476>   ADD.l D3,D4
000316E4 <AmiBlitz3.ab2@23479>     CMP.l #65532,d4
000316E8 <AmiBlitz3.ab2@23484>   BCC JUMP_toolongerr
000316F0 <AmiBlitz3.ab2@23485>   MOVE.w flagmask,$6(A2)
000316F6 <AmiBlitz3.ab2@23486>   MOVE.w D4,typelen
000316F8 <AmiBlitz3.ab2@23487> RTS
000316FE <AmiBlitz3.ab2@23490> JMP badenderr
00031704 <AmiBlitz3.ab2@23493> JMP noiferr
0003170A <AmiBlitz3.ab2@23496> JMP toolongerr
00031710 <AmiBlitz3.ab2@23499> JMP fpconerr
00031716 <AmiBlitz3.ab2@23502>   MOVE.l firstiff,D0
0003171A <AmiBlitz3.ab2@23503>    BEQ.w JUMP_noiferr
0003171C <AmiBlitz3.ab2@23504>   MOVEA.l D0,A0
00031720 <AmiBlitz3.ab2@23505>   MOVE.w $C(A0),D0
00031724 <AmiBlitz3.ab2@23506>   ANDI.w #$FF,D0
00031726 <AmiBlitz3.ab2@23507>   CMP.w D0,D1
0003172A <AmiBlitz3.ab2@23508>    BNE.w JUMP_badenderr
0003172E <AmiBlitz3.ab2@23511>   CMP.w #$1,D1
00031732 <AmiBlitz3.ab2@23512>   BNE.w JL_0_D7D8
00031736 <AmiBlitz3.ab2@23513>   MOVE.w #$6000,D1
0003173C <AmiBlitz3.ab2@23516>     TST.b fast
00031740 <AmiBlitz3.ab2@23517>     BEQ 'l1
00031746 <AmiBlitz3.ab2@23518>     OR.l #$ff,d1
0003174A <AmiBlitz3.ab2@23522>   BSR.w writeword
00031750 <AmiBlitz3.ab2@23523>   MOVEA.l destpointer,A1
00031754 <AmiBlitz3.ab2@23524>   MOVE.l $4(A0),D1
00031756 <AmiBlitz3.ab2@23525>   SUB.l A1,D1
0003175C <AmiBlitz3.ab2@23528>     TST.b fast
00031760 <AmiBlitz3.ab2@23529>     BEQ 'l2
00031764 <AmiBlitz3.ab2@23530>     BSR writelong
00031768 <AmiBlitz3.ab2@23531>   BRA JL_0_D7D8
0003176C <AmiBlitz3.ab2@23535>   BSR.w writeword
00031770 <AmiBlitz3.ab2@23538>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00031776 <AmiBlitz3.ab2@23539>   MOVE.l destpointer,D1
00031778 <AmiBlitz3.ab2@23540>   SUB.l A1,D1
0003177E <AmiBlitz3.ab2@23543>     TST.b fast
00031782 <AmiBlitz3.ab2@23544>     BEQ 'l1
00031784 <AmiBlitz3.ab2@23545>     ADDQ.l #4,D1
0003178A <AmiBlitz3.ab2@23546>     MOVE.w dontwrite,D0
0003178E <AmiBlitz3.ab2@23547>     BNE.w JL_0_D7FE
00031792 <AmiBlitz3.ab2@23548>     MOVE.l d1,-$4(a1)
00031796 <AmiBlitz3.ab2@23549>   BRA JL_0_D7FE
00031798 <AmiBlitz3.ab2@23553>   ADDQ.l #2,d1
0003179E <AmiBlitz3.ab2@23554>   TST.w dontwrite
000317A2 <AmiBlitz3.ab2@23555>   BNE JL_0_D7FE
000317A8 <AmiBlitz3.ab2@23556>   CMP.l #MinWordSgnd,D1
000317AC <AmiBlitz3.ab2@23557>   BCC.w JUMP_bigiferr
000317B0 <AmiBlitz3.ab2@23558>   MOVE.w D1,-$2(A1)
000317B2 <AmiBlitz3.ab2@23561> RTS
000317B8 <AmiBlitz3.ab2@23564> JMP bigiferr
000317C2 <AmiBlitz3.ab2@23569>   MOVE.w oldqflag,instringon
000317C8 <AmiBlitz3.ab2@23570>   MOVEA.l lastsourcepos,A5
000317CA <AmiBlitz3.ab2@23573>   MOVEQ.l #$01,D1
000317CE <AmiBlitz3.ab2@23574> BRA.w JL_0_D810
000317D8 <AmiBlitz3.ab2@23578>   MOVE.w oldqflag,instringon
000317DE <AmiBlitz3.ab2@23579>   MOVEA.l lastsourcepos,A5
000317E0 <AmiBlitz3.ab2@23582>   MOVEQ.l #$00,D1
000317E4 <AmiBlitz3.ab2@23585>   BSR.w JL_0_D79E
000317E8 <AmiBlitz3.ab2@23586>   BSR.w AJL_0_D81C
000317EE <AmiBlitz3.ab2@23587> JMP get1bytemain
000317F4 <AmiBlitz3.ab2@23590>   MOVE.l (A0),firstiff
000317F6 <AmiBlitz3.ab2@23591>   MOVEA.l A0,A1
000317F8 <AmiBlitz3.ab2@23592>   MOVEQ.l #$0E,D0
000317FE <AmiBlitz3.ab2@23593>   MOVEA.l _execbase,A6
00031804 <AmiBlitz3.ab2@23594>   MOVE.l mempool,a0
00031808 <AmiBlitz3.ab2@23595> JMP _FreePooled(A6)
0003180E <AmiBlitz3.ab2@23599>   JSR get1bytemain
00031812 <AmiBlitz3.ab2@23602>   BEQ.w JL_0_D980
0003181A <AmiBlitz3.ab2@23603>   CMP.l #"noa7",-1(a5)
0003181E <AmiBlitz3.ab2@23604>   BNE 'l1
00031824 <AmiBlitz3.ab2@23605>   JSR get1bytemain
0003182A <AmiBlitz3.ab2@23606>   JSR get1bytemain
00031830 <AmiBlitz3.ab2@23607>   JSR get1bytemain
00031838 <AmiBlitz3.ab2@23608>   MOVE.w #$3a,lastchar
0003183C <AmiBlitz3.ab2@23609> BRA JL_0_D980
00031842 <AmiBlitz3.ab2@23612>   CMP.w #"d0",-1(a5)
00031846 <AmiBlitz3.ab2@23613>   BNE 'l2
0003184E <AmiBlitz3.ab2@23614>   MOVE.b #1,returncode
00031854 <AmiBlitz3.ab2@23615>   CLR.w lastchar
00031858 <AmiBlitz3.ab2@23616> BRA JL_0_D980
0003185C <AmiBlitz3.ab2@23619>   CMP.w #$80d7,d0
00031860 <AmiBlitz3.ab2@23620>   BNE JL_0_D836
00031866 <AmiBlitz3.ab2@23621>   JSR skiprest
00031868 <AmiBlitz3.ab2@23622> RTS
0003186C <AmiBlitz3.ab2@23625>   BSR.w JL_0_D844
00031872 <AmiBlitz3.ab2@23626>   JSR reget
00031876 <AmiBlitz3.ab2@23627>   BNE.w JL_0_D836
00031878 <AmiBlitz3.ab2@23628> RTS
0003187C <AmiBlitz3.ab2@23631>   CMP.w #-$7FFF,D0
00031880 <AmiBlitz3.ab2@23632>    BNE.w JL_0_D87E
00031886 <AmiBlitz3.ab2@23633>   MOVE.w linemode,D1
0003188A <AmiBlitz3.ab2@23634>    BNE.w JUMP_modeerr
00031890 <AmiBlitz3.ab2@23635>   ADDQ.w #1,typelen
00031898 <AmiBlitz3.ab2@23636>   BCLR #$0,typelen+1
0003189E <AmiBlitz3.ab2@23637>   MOVEA.l thistype,A0
000318A6 <AmiBlitz3.ab2@23638>   MOVE.w typelen,$8(A0)
000318AE <AmiBlitz3.ab2@23639>   MOVE.w #$FFFF,linemode
000318B4 <AmiBlitz3.ab2@23640> JMP get1bytemain
000318BA <AmiBlitz3.ab2@23643> JMP modeerr
000318BE <AmiBlitz3.ab2@23646>   CMP.w #-$7FF5,D0
000318C2 <AmiBlitz3.ab2@23647>    BEQ.w JL_0_D80E
000318C6 <AmiBlitz3.ab2@23648>   CMP.w #-$7FF4,D0
000318CA <AmiBlitz3.ab2@23649>    BEQ.w JL_0_D804
000318CE <AmiBlitz3.ab2@23650>   CMP.w #-$7FF8,D0
000318D2 <AmiBlitz3.ab2@23651>    BNE.w JL_0_D89A
000318D6 <AmiBlitz3.ab2@23654> BRA.w JL_0_D9E8
000318DC <AmiBlitz3.ab2@23657> JMP interr3
000318E0 <AmiBlitz3.ab2@23660>   CMP.w #-$7FF7,D0
000318E4 <AmiBlitz3.ab2@23661>    BNE.w JL_0_D8C8
000318EA <AmiBlitz3.ab2@23662>    TST.b fpu
000318EE <AmiBlitz3.ab2@23663>    BEQ 'nof
000318F4 <AmiBlitz3.ab2@23664>    MOVEA.l currentfunction,A0
000318FA <AmiBlitz3.ab2@23665>    CMP.l #0,a0
000318FE <AmiBlitz3.ab2@23666>    BEQ 'nof
00031904 <AmiBlitz3.ab2@23667>    CMP.b #5,$5(a0)
00031908 <AmiBlitz3.ab2@23668>     BNE 'nof
0003190E <AmiBlitz3.ab2@23669>    MOVE.l #$f23c5000,d1
00031912 <AmiBlitz3.ab2@23670>    BSR writelong
00031916 <AmiBlitz3.ab2@23671>    MOVE.w #0,d1
0003191A <AmiBlitz3.ab2@23672>    BSR writeword
0003191E <AmiBlitz3.ab2@23675>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00031922 <AmiBlitz3.ab2@23676>    BSR.w writeword
00031928 <AmiBlitz3.ab2@23677>   MOVEA.l currentfunction,A0
0003192E <AmiBlitz3.ab2@23678>   CMP.l #0,a0
00031932 <AmiBlitz3.ab2@23679>   BEQ JL_0_D896
00031938 <AmiBlitz3.ab2@23680>   MOVE.l destpointer,d1
0003193C <AmiBlitz3.ab2@23681>   SUB.l $e(a0),d1
00031940 <AmiBlitz3.ab2@23682>   MOVE.l d1,isfunc+1(a0)
00031946 <AmiBlitz3.ab2@23683>   CMPI.b #$7,$5(A0)
0003194A <AmiBlitz3.ab2@23684>    BNE.w JL_0_D896
00031950 <AmiBlitz3.ab2@23685>   MOVE.w putstlen,D1
00031954 <AmiBlitz3.ab2@23686>    BSR.w writeword
00031958 <AmiBlitz3.ab2@23687> BRA.w JL_0_D896
0003195E <AmiBlitz3.ab2@23690> JMP interr
00031962 <AmiBlitz3.ab2@23693>  CMP.w #-$7FD0,D0
00031966 <AmiBlitz3.ab2@23694>    BNE.w JL_0_D966
0003196C <AmiBlitz3.ab2@23695>   MOVE.w proceduremode,D1
00031970 <AmiBlitz3.ab2@23696>    BNE.w JUMP_interr3
00031976 <AmiBlitz3.ab2@23697>   TST.b debugmode
0003197A <AmiBlitz3.ab2@23698>    BEQ.w JL_0_D90A
0003197C <AmiBlitz3.ab2@23699>   MOVEQ.l #$03,D1
00031982 <AmiBlitz3.ab2@23700>    JSR writetrap
00031988 <AmiBlitz3.ab2@23701>   MOVE.w dontwrite,D1
0003198C <AmiBlitz3.ab2@23702>    BNE.w JL_0_D90A
00031992 <AmiBlitz3.ab2@23703>   MOVEA.l intcleanat,A0
00031998 <AmiBlitz3.ab2@23704>   MOVE.l destpointer,(A0)
0003199C <AmiBlitz3.ab2@23705>   MOVE.w #$C30C,D1
000319A0 <AmiBlitz3.ab2@23706>    BSR.w Atokejsr
000319A6 <AmiBlitz3.ab2@23709>   MOVE.w intstring,D1
000319AA <AmiBlitz3.ab2@23710>    BEQ.w JUMP_interr
000319AE <AmiBlitz3.ab2@23711>    BPL.w JL_0_D934
000319B4 <AmiBlitz3.ab2@23712>   MOVE.w intlevel,D1
000319B8 <AmiBlitz3.ab2@23713>   ORI.w #$7200,D1
000319BC <AmiBlitz3.ab2@23714>    BSR.w writeword
000319C0 <AmiBlitz3.ab2@23715>   MOVE.w #$C103,D1
000319C4 <AmiBlitz3.ab2@23716>    BSR.w Atokejsr
000319CA <AmiBlitz3.ab2@23717>   CLR.w intlevel
000319D0 <AmiBlitz3.ab2@23720>  CLR.w intstring
000319D6 <AmiBlitz3.ab2@23721>   MOVE.l intfin,D1
000319DA <AmiBlitz3.ab2@23722>    BSR.w writelong
000319E0 <AmiBlitz3.ab2@23723>   MOVE.l #$70004E75,D1
000319E4 <AmiBlitz3.ab2@23724>    BSR.w writelong
000319EA <AmiBlitz3.ab2@23725>   MOVE.w dontwrite,D1
000319EE <AmiBlitz3.ab2@23726>    BNE.w JL_0_D962
000319F4 <AmiBlitz3.ab2@23727>   MOVEA.l intjmpat,A0
000319F8 <AmiBlitz3.ab2@23728>   MOVE.l destpointer(PC),(A0)
000319FE <AmiBlitz3.ab2@23731> JMP get1bytemain
00031A02 <AmiBlitz3.ab2@23735>   CMP.w #-$7FF2,D0
00031A06 <AmiBlitz3.ab2@23736>    BEQ.w doendsel
00031A0A <AmiBlitz3.ab2@23737>   CMP.w #-$7F4C,D0
00031A0E <AmiBlitz3.ab2@23738>    BNE.w JL_0_D97C
00031A14 <AmiBlitz3.ab2@23739> JMP doendseterr
00031A1A <AmiBlitz3.ab2@23743> JMP syntaxerr
00031A20 <AmiBlitz3.ab2@23747>   TST.w dirmode
00031A24 <AmiBlitz3.ab2@23748>   BNE.w JUMP_baddirerr
00031A28 <AmiBlitz3.ab2@23749>   MOVE.w #$C800,D1
00031A2E <AmiBlitz3.ab2@23750>   JSR Atokejsr                                            ;end
00031A36 <AmiBlitz3.ab2@23751>   CMP.l #"noa7",-4(a5)
00031A3A <AmiBlitz3.ab2@23752>   BNE 'l10
00031A40 <AmiBlitz3.ab2@23753>   TST.w dontwrite
00031A44 <AmiBlitz3.ab2@23754>   BNE 'l10
00031A4A <AmiBlitz3.ab2@23755>   MOVE.l destpointer,d1
00031A4C <AmiBlitz3.ab2@23756>   SUBQ.l #4,d1
00031A4E <AmiBlitz3.ab2@23757>   MOVE.l a0,-(a7)
00031A50 <AmiBlitz3.ab2@23758>   MOVE.l d1,a0
00031A52 <AmiBlitz3.ab2@23759>   MOVE.l (a0),a0
00031A58 <AmiBlitz3.ab2@23760>   MOVE.l #$60000002,(a0)+
00031A5C <AmiBlitz3.ab2@23761>   MOVE.w #$588f,(a0)
00031A5E <AmiBlitz3.ab2@23762>   MOVE.l (a7)+,a0
00031A60 <AmiBlitz3.ab2@23765> RTS
00031A66 <AmiBlitz3.ab2@23769>   TST.w dirmode                                            ;stop
00031A6A <AmiBlitz3.ab2@23770>   BNE.w JUMP_baddirerr
00031A6C <AmiBlitz3.ab2@23771>   MOVE.w d0,d1
00031A70 <AmiBlitz3.ab2@23772>   BEQ 'l10
00031A74 <AmiBlitz3.ab2@23773>   CMP.b #$3a,d0
00031A78 <AmiBlitz3.ab2@23774>   BEQ 'l10
00031A7E <AmiBlitz3.ab2@23775>   JSR get1bytemain
00031A84 <AmiBlitz3.ab2@23778>   TST.b debugmode
00031A88 <AmiBlitz3.ab2@23779>   BEQ.w newstop
00031A8C <AmiBlitz3.ab2@23780>   MOVE.w #$D501,D1
00031A90 <AmiBlitz3.ab2@23781> BRA.w Atokejsr
00031A92 <AmiBlitz3.ab2@23785>     RTS
00031A94 <AmiBlitz3.ab2@23787>   MOVE.w d1,d0
00031A98 <AmiBlitz3.ab2@23788>   BEQ 'l10
00031A9C <AmiBlitz3.ab2@23789>   CMP.b #$3a,d0
00031AA0 <AmiBlitz3.ab2@23790>   BEQ 'l10
00031AA4 <AmiBlitz3.ab2@23791>   SUB.b #$30,d0
00031AA8 <AmiBlitz3.ab2@23792>   MOVE.w #$4e40,d1
00031AAC <AmiBlitz3.ab2@23793> BRA 'l11
00031AB0 <AmiBlitz3.ab2@23796>   MOVE.w #$4e4a,d1
00031AB4 <AmiBlitz3.ab2@23797> BRA writeword
00031AB6 <AmiBlitz3.ab2@23800>   ADD.b d0,d1
00031ABA <AmiBlitz3.ab2@23801> BRA writeword
00031AC0 <AmiBlitz3.ab2@23805> JMP badconterr
00031AC4 <AmiBlitz3.ab2@23808>   MOVE.w #$4E71,D1
00031AC8 <AmiBlitz3.ab2@23809> BRA.w writeword
00031ACE <AmiBlitz3.ab2@23812>   MOVEA.l firstfor,A2
00031AD4 <AmiBlitz3.ab2@23813>   CLR.l firstfor
00031ADA <AmiBlitz3.ab2@23814>   MOVEA.l _execbase,A6
00031ADE <AmiBlitz3.ab2@23817>   CMPA.w #$0,A2
00031AE2 <AmiBlitz3.ab2@23818>   BEQ.w JL_0_D9E6
00031AE4 <AmiBlitz3.ab2@23819>   MOVEA.l A2,A1
00031AE6 <AmiBlitz3.ab2@23820>   MOVEA.l (A1),A2
00031AE8 <AmiBlitz3.ab2@23821>   MOVEQ.l #$00,D0
00031AEE <AmiBlitz3.ab2@23822>   MOVE.l mempool2,a0
00031AF2 <AmiBlitz3.ab2@23823>   MOVE.b $10(A1),D0
00031AF6 <AmiBlitz3.ab2@23824>   JSR _FreePooled(A6)                                      ;freememfor_error
00031AFA <AmiBlitz3.ab2@23825> BRA.w JL_0_D9CC
00031AFC <AmiBlitz3.ab2@23828> RTS
00031B02 <AmiBlitz3.ab2@23832> JMP badpenderr
00031B08 <AmiBlitz3.ab2@23838>   MOVE.w proceduremode,D1
00031B0C <AmiBlitz3.ab2@23839>    BEQ.w JUMP_badpenderr
00031B12 <AmiBlitz3.ab2@23841>   MOVE.w dontwrite,D1
00031B16 <AmiBlitz3.ab2@23842>    BNE.w JL_0_DA1A
00031B1C <AmiBlitz3.ab2@23843>   MOVEA.l firstpend,A2
00031B20 <AmiBlitz3.ab2@23846>   CMPA.w #$0,A2
00031B24 <AmiBlitz3.ab2@23847>    BEQ.w JL_0_DA1A
00031B28 <AmiBlitz3.ab2@23848>   MOVEA.l $4(A2),A0
00031B2E <AmiBlitz3.ab2@23849>   MOVE.l destpointer,(A0)
00031B30 <AmiBlitz3.ab2@23850>   MOVEA.l (A2),A2
00031B34 <AmiBlitz3.ab2@23851> BRA.w JL_0_DA02
00031B3A <AmiBlitz3.ab2@23854>   TST.b debugmode
00031B3E <AmiBlitz3.ab2@23855>    BEQ.b JL_0_DA2A
00031B40 <AmiBlitz3.ab2@23856>   MOVEQ.l #$05,D1
00031B46 <AmiBlitz3.ab2@23857>   JSR writetrap
00031B4C <AmiBlitz3.ab2@23860>   MOVEA.l firstlocal,A2                                    ;firstlocal
00031B52 <AmiBlitz3.ab2@23861>   JSR calcstatic2b                                           ;calcstatic
00031B58 <AmiBlitz3.ab2@23862>   MOVEA.l currentfunction,A0
00031B5E <AmiBlitz3.ab2@23863>   MOVE.l destpointer,d1
00031B62 <AmiBlitz3.ab2@23864>   SUB.l $e(a0),d1
00031B66 <AmiBlitz3.ab2@23865>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00031B6A <AmiBlitz3.ab2@23866>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00031B70 <AmiBlitz3.ab2@23867>   MOVE.l D3,locdatast
00031B76 <AmiBlitz3.ab2@23868>   MOVEA.l tempvm,A1
00031B7C <AmiBlitz3.ab2@23869>  CLR.b infunctioncode
00031B82 <AmiBlitz3.ab2@23870>   MOVE.l firstiffstore,d1
00031B88 <AmiBlitz3.ab2@23871>   CMP.l firstiff,d1
00031B8C <AmiBlitz3.ab2@23872>   BNE JUMP_noenderr
00031B90 <AmiBlitz3.ab2@23873>   TST.w $C(A1)                                             ;dim
00031B94 <AmiBlitz3.ab2@23874>    BPL.w JL_0_DA64
00031B9A <AmiBlitz3.ab2@23875>  BSET #$7,$8(A0)
00031B9E <AmiBlitz3.ab2@23876>   MOVE.w #$C005,D1
00031BA2 <AmiBlitz3.ab2@23877>    BSR.w tokejsr2                                          ;writefreememstatement
00031BA6 <AmiBlitz3.ab2@23878> BRA.w JL_0_DA6C
00031BAC <AmiBlitz3.ab2@23881> JMP noenderr
00031BB4 <AmiBlitz3.ab2@23884>   MOVE.w memlibstat,$C(A1)
00031BBA <AmiBlitz3.ab2@23887>   MOVEA.l currentfunction,A0
00031BBE <AmiBlitz3.ab2@23888>   MOVE.l $E(A0),-(A7)
00031BC6 <AmiBlitz3.ab2@23889>   MOVE.w locvaroff,$6(A0)
00031BCC <AmiBlitz3.ab2@23890>   BCLR #$1,$7(A0)
00031BD2 <AmiBlitz3.ab2@23891>   BCLR #$0,$7(A0)
00031BD8 <AmiBlitz3.ab2@23892>   CMPI.b #$7,$5(A0)
00031BDC <AmiBlitz3.ab2@23893>    BNE.w JL_0_DA9E
00031BE2 <AmiBlitz3.ab2@23894>   MOVE.w getstlen,D1
00031BE6 <AmiBlitz3.ab2@23895>    BSR.w writeword
00031BEA <AmiBlitz3.ab2@23898>   TST.w $6(A0)
00031BEE <AmiBlitz3.ab2@23899>    BEQ.w JL_0_DAB8
00031BF2 <AmiBlitz3.ab2@23900>   MOVE.w #$FC7B,D1
00031BF8 <AmiBlitz3.ab2@23901>    JSR uselib
00031BFE <AmiBlitz3.ab2@23902>   MOVE.w unlinka4,D1
00031C02 <AmiBlitz3.ab2@23903>    BSR.w writeword
00031C08 <AmiBlitz3.ab2@23906>   MOVEA.l currentfunction,A0
00031C0A <AmiBlitz3.ab2@23907>   MOVEQ.l #$00,D1
00031C0E <AmiBlitz3.ab2@23908>   MOVE.b $4(A0),D1
00031C10 <AmiBlitz3.ab2@23909>   LSR.w #4,D1
00031C14 <AmiBlitz3.ab2@23910>    BEQ.w JL_0_DB24
00031C16 <AmiBlitz3.ab2@23912>      LSL.w #1,d1
00031C1A <AmiBlitz3.ab2@23914>   CMP.w #$1,D1
00031C1E <AmiBlitz3.ab2@23915>    BNE.w JL_0_DAE0
00031C24 <AmiBlitz3.ab2@23916>   MOVE.w fix1,D1
00031C28 <AmiBlitz3.ab2@23917>    BSR.w writeword
00031C2C <AmiBlitz3.ab2@23918> BRA.w JL_0_DB24
00031C2E <AmiBlitz3.ab2@23921>   LSL.w #2,D1
00031C30 <AmiBlitz3.ab2@23922>   MOVE.w D1,-(A7)
00031C36 <AmiBlitz3.ab2@23923>   MOVE.w D1,moverts+2
00031C3C <AmiBlitz3.ab2@23924>   MOVE.l moverts,D1
00031C42 <AmiBlitz3.ab2@23925>    JSR writelong
00031C44 <AmiBlitz3.ab2@23926>   MOVE.w (A7)+,D1
00031C48 <AmiBlitz3.ab2@23927>   CMP.w #$8,D1
00031C4C <AmiBlitz3.ab2@23928>    BHI.w JL_0_DB14
00031C50 <AmiBlitz3.ab2@23929>   ANDI.w #$7,D1
00031C52 <AmiBlitz3.ab2@23930>   LSL.w #8,D1
00031C54 <AmiBlitz3.ab2@23931>   LSL.w #1,D1
00031C5A <AmiBlitz3.ab2@23932>   OR.w fixq,D1
00031C60 <AmiBlitz3.ab2@23933>    JSR writeword
00031C64 <AmiBlitz3.ab2@23934> BRA.w JL_0_DB24
00031C6A <AmiBlitz3.ab2@23938>    MOVE.w D1,fixstack+2
00031C70 <AmiBlitz3.ab2@23939>   MOVE.l fixstack,D1
00031C76 <AmiBlitz3.ab2@23940>    JSR writelong
00031C7A <AmiBlitz3.ab2@23943>    BSR.w JL_0_D2CA
00031C7E <AmiBlitz3.ab2@23944>    BSR.w JL_0_D4F8
00031C80 <AmiBlitz3.ab2@23945>   MOVEA.l (A7)+,A0
00031C86 <AmiBlitz3.ab2@23946>   MOVE.w dontwrite,D1
00031C8A <AmiBlitz3.ab2@23947>    BNE.w JL_0_DB3E
00031C90 <AmiBlitz3.ab2@23948>   MOVE.l destpointer,-(A0)
00031C96 <AmiBlitz3.ab2@23951>   CLR.w proceduremode
00031C9C <AmiBlitz3.ab2@23952>   CLR.l currentfunction
00031CA2 <AmiBlitz3.ab2@23953>   CLR.w procnum
00031CA6 <AmiBlitz3.ab2@23954>    BSR.w JL_0_DB5C
00031CAC <AmiBlitz3.ab2@23955>    JSR freepends
00031CB2 <AmiBlitz3.ab2@23956> JMP get1bytemain
00031CB4 <AmiBlitz3.ab2@23959>   MOVEQ.l #$0C,D0
00031CB6 <AmiBlitz3.ab2@23960>   MOVEQ.l #$01,D1
00031CBC <AmiBlitz3.ab2@23961>   MOVEA.l _execbase,A6
00031CC2 <AmiBlitz3.ab2@23963>   MOVE.l mempool,a0
00031CC6 <AmiBlitz3.ab2@23964>   JSR _AllocPooled(a6)
00031CC8 <AmiBlitz3.ab2@23965>   MOVEA.l D0,A0
00031CCE <AmiBlitz3.ab2@23966>   MOVE.l alllocals,(A0)
00031CD4 <AmiBlitz3.ab2@23967>   MOVE.l A0,alllocals
00031CDA <AmiBlitz3.ab2@23968>   MOVE.l firstlocal,D0
00031CE0 <AmiBlitz3.ab2@23969>   CLR.l firstlocal
00031CE4 <AmiBlitz3.ab2@23970>   MOVE.l D0,$4(A0)
00031CEA <AmiBlitz3.ab2@23971>   MOVE.l firstglob,D1
00031CF0 <AmiBlitz3.ab2@23972>   CLR.l firstglob
00031CF4 <AmiBlitz3.ab2@23973>   MOVE.l D1,$8(A0)
00031CFA <AmiBlitz3.ab2@23974>   TST.b debugmode
00031CFE <AmiBlitz3.ab2@23975>    BEQ.b JL_0_DBB0
00031D04 <AmiBlitz3.ab2@23976>   TST.w dontwrite
00031D08 <AmiBlitz3.ab2@23977>    BNE.b JL_0_DBB0
00031D0C <AmiBlitz3.ab2@23978>   MOVEA.l proclocals(PC),A0
00031D0E <AmiBlitz3.ab2@23979>   MOVE.l D0,(A0)+
00031D10 <AmiBlitz3.ab2@23980>   MOVE.l D1,(A0)
00031D12 <AmiBlitz3.ab2@23983> RTS
00031D18 <AmiBlitz3.ab2@23986> JMP baddirerr
00031D1E <AmiBlitz3.ab2@23990>   TST.w dirmode
00031D22 <AmiBlitz3.ab2@23991>    BNE.w JUMP_baddirerr
00031D28 <AmiBlitz3.ab2@23992>   MOVE.l firstfor,D1
00031D2C <AmiBlitz3.ab2@23993>    BEQ.w JUMP_noforerr
00031D32 <AmiBlitz3.ab2@23994>   JSR reget
00031D36 <AmiBlitz3.ab2@23995>    BEQ.w JL_0_DC18
00031D3A <AmiBlitz3.ab2@23998>   BSR.w getparameter
00031D3E <AmiBlitz3.ab2@23999>   MOVEA.l firstfor(PC),A2
00031D40 <AmiBlitz3.ab2@24000>   MOVEQ.l #$00,D1
00031D44 <AmiBlitz3.ab2@24001>   MOVE.b $10(A2),D1
00031D48 <AmiBlitz3.ab2@24002>   SUBI.w #$12,D1
00031D4A <AmiBlitz3.ab2@24003>   CMP.w D1,D2
00031D4E <AmiBlitz3.ab2@24004>    BNE.w JUMP_noforerr
00031D52 <AmiBlitz3.ab2@24005>   LEA ptr_parameterstore(PC),A0
00031D56 <AmiBlitz3.ab2@24006>   LEA $11(A2),A1
00031D58 <AmiBlitz3.ab2@24007>   SUBQ.w #1,D2
00031D5A <AmiBlitz3.ab2@24010>     CMPM.b (A0)+,(A1)+
00031D5E <AmiBlitz3.ab2@24011>     BNE.w JUMP_noforerr
00031D62 <AmiBlitz3.ab2@24012>   DBF D2,JL_0_DBF0
00031D66 <AmiBlitz3.ab2@24014>    BSR.w JL_0_DC1A
00031D6C <AmiBlitz3.ab2@24015>    JSR reget
00031D70 <AmiBlitz3.ab2@24016>    BEQ.w JL_0_DC16
00031D74 <AmiBlitz3.ab2@24017>   CMP.w #$2C,D0
00031D78 <AmiBlitz3.ab2@24018>    BNE.w JUMP_syntaxerr
00031D7E <AmiBlitz3.ab2@24019>    JSR get1bytemain
00031D82 <AmiBlitz3.ab2@24020> BRA.w JL_0_DBCE
00031D88 <AmiBlitz3.ab2@24023> JMP noforerr
00031D8A <AmiBlitz3.ab2@24026> RTS
00031D8E <AmiBlitz3.ab2@24030>   MOVE.l 8(a7),a2
00031D92 <AmiBlitz3.ab2@24031>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00031D96 <AmiBlitz3.ab2@24032>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00031D9A <AmiBlitz3.ab2@24033>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00031D9C <AmiBlitz3.ab2@24037>   MOVEA.l D1,A2
00031DA2 <AmiBlitz3.ab2@24040>   JSR popnext                                           ;error checking for next.
00031DA6 <AmiBlitz3.ab2@24041>   MOVE.w $C(A2),D0
00031DAC <AmiBlitz3.ab2@24042>   LEA nextb,A0
00031DB2 <AmiBlitz3.ab2@24043>   LEA nextbf,A1
00031DB6 <AmiBlitz3.ab2@24044>   CMP.w #$1,D0
00031DBA <AmiBlitz3.ab2@24045>    BEQ.w JL_0_DC74
00031DC0 <AmiBlitz3.ab2@24046>   LEA nextw,A0
00031DC6 <AmiBlitz3.ab2@24047>   LEA nextwf,A1
00031DCA <AmiBlitz3.ab2@24048>   CMP.w #$2,D0
00031DCE <AmiBlitz3.ab2@24049>    BEQ.w JL_0_DC74
00031DD4 <AmiBlitz3.ab2@24050>   LEA nextl,A0
00031DDA <AmiBlitz3.ab2@24051>   LEA nextlf,A1
00031DDE <AmiBlitz3.ab2@24052>   CMP.w #$5,D0
00031DE2 <AmiBlitz3.ab2@24053>    BNE.w JL_0_DC74
00031DE8 <AmiBlitz3.ab2@24054>    TST.b fpu
00031DEC <AmiBlitz3.ab2@24055>    BEQ 'old
00031DF2 <AmiBlitz3.ab2@24056>    LEA fpu2dats,a0                                         ;fpu next code
00031DF8 <AmiBlitz3.ab2@24057>    LEA fpu2date,a1
00031DFC <AmiBlitz3.ab2@24058> BRA JL_0_DC74
00031E00 <AmiBlitz3.ab2@24061>   MOVE.w #$C900,D1
00031E04 <AmiBlitz3.ab2@24062>    BSR.w Atokejsr
00031E0A <AmiBlitz3.ab2@24063>   LEA nextf,A0
00031E10 <AmiBlitz3.ab2@24064>   LEA nextff,A1
00031E16 <AmiBlitz3.ab2@24067>   JSR pokecode
00031E1C <AmiBlitz3.ab2@24068>     TST.b fast                                             ;fast for next deactivate
00031E20 <AmiBlitz3.ab2@24069> BRA 'l1
00031E26 <AmiBlitz3.ab2@24071>     TST.b onestep
00031E2A <AmiBlitz3.ab2@24072>     BEQ 'l1
00031E30 <AmiBlitz3.ab2@24073>     CLR.b onestep
00031E36 <AmiBlitz3.ab2@24074>     SUBQ.l #4,destpointer
00031E3A <AmiBlitz3.ab2@24075>     MOVE.w #$5292,d1
00031E40 <AmiBlitz3.ab2@24076>     JSR writeword
00031E44 <AmiBlitz3.ab2@24079>   MOVE.l JL_0_DCF4(PC),D1
00031E4A <AmiBlitz3.ab2@24080>    JSR writelong
00031E50 <AmiBlitz3.ab2@24081>   MOVEA.l firstfor,A2
00031E56 <AmiBlitz3.ab2@24082>   MOVE.l (A2),firstfor
00031E5A <AmiBlitz3.ab2@24083>   MOVEA.l $8(A2),A0
00031E60 <AmiBlitz3.ab2@24084>   MOVEA.l destpointer,A1
00031E62 <AmiBlitz3.ab2@24085>   MOVE.l A1,D1
00031E64 <AmiBlitz3.ab2@24086>   SUB.l A0,D1
00031E66 <AmiBlitz3.ab2@24087>   ADDQ.l #2,D1
00031E6C <AmiBlitz3.ab2@24088>   CMP.l #MinWordSgnd,D1
00031E70 <AmiBlitz3.ab2@24089>    BCC.w JUMP_bigforerr
00031E76 <AmiBlitz3.ab2@24090>   TST.w dontwrite
00031E7A <AmiBlitz3.ab2@24091>    BNE.w JL_0_DCB4
00031E7E <AmiBlitz3.ab2@24092>   MOVE.w D1,-$2(A0)
00031E80 <AmiBlitz3.ab2@24095>   MOVE.l A1,D1
00031E84 <AmiBlitz3.ab2@24096>   SUB.l $4(A2),D1
00031E86 <AmiBlitz3.ab2@24097>   SUBQ.l #6,D1
00031E8C <AmiBlitz3.ab2@24098>   CMP.l #MinWordSgnd,D1
00031E90 <AmiBlitz3.ab2@24099>    BCC.w JUMP_bigforerr
00031E96 <AmiBlitz3.ab2@24100>   TST.w dontwrite
00031E9A <AmiBlitz3.ab2@24101>    BNE.w JL_0_DCD6
00031E9C <AmiBlitz3.ab2@24102>   NEG.w D1
00031EA0 <AmiBlitz3.ab2@24103>   MOVE.w D1,-$2(A1)
00031EA6 <AmiBlitz3.ab2@24106>   JSR popnext3
00031EAC <AmiBlitz3.ab2@24107>   MOVEA.l _execbase,A6
00031EAE <AmiBlitz3.ab2@24108>   MOVEA.l A2,A1
00031EB0 <AmiBlitz3.ab2@24109>   MOVEQ.l #$00,D0
00031EB4 <AmiBlitz3.ab2@24110>   MOVE.b $10(A1),D0
00031EBA <AmiBlitz3.ab2@24111>   MOVE.l mempool2,a0
00031EBE <AmiBlitz3.ab2@24112>   JSR _FreePooled(A6)
00031EC4 <AmiBlitz3.ab2@24113> JMP reget
00031ECA <AmiBlitz3.ab2@24116> JMP notallowd
00031ED0 <AmiBlitz3.ab2@24119> JMP bigforerr
00031ED4 <AmiBlitz3.ab2@24126>   MOVE.w #$664F,-(A7)
00031ED8 <AmiBlitz3.ab2@24129> BRA.w JL_0_DCF4
00031EDE <AmiBlitz3.ab2@24132> JMP error_dublicate_for
00031EE2 <AmiBlitz3.ab2@24135> forlineat:   Ds.l 1
00031EE4 <AmiBlitz3.ab2@24136> fortemp:     Ds.w 1
00031EEA <AmiBlitz3.ab2@24143>   CLR.l fp0addr
00031EF0 <AmiBlitz3.ab2@24144>   TST.w dirmode
00031EF4 <AmiBlitz3.ab2@24145>    BNE.w JUMP_baddirerr
00031EFE <AmiBlitz3.ab2@24146>   MOVE.l linenumat,forlineat
00031F04 <AmiBlitz3.ab2@24150>   MOVE.l A5,letstart
00031F08 <AmiBlitz3.ab2@24151>   BSR.w getparameter
00031F0E <AmiBlitz3.ab2@24152>   MOVE.w D2,fortemp
00031F14 <AmiBlitz3.ab2@24153>   JSR findfor
00031F18 <AmiBlitz3.ab2@24154>    BEQ.w JUMP_error_dublicate_for
00031F1E <AmiBlitz3.ab2@24155>   LEA firstfor,A2
00031F24 <AmiBlitz3.ab2@24156>   JSR addhere2
00031F26 <AmiBlitz3.ab2@24157>   MOVE.l A2,-(A7)
00031F2C <AmiBlitz3.ab2@24158>   TST.b debugmode
00031F30 <AmiBlitz3.ab2@24159>    BEQ.b JL_0_DD4C
00031F36 <AmiBlitz3.ab2@24160>   JSR chkstak
00031F3C <AmiBlitz3.ab2@24161>   MOVE.l AJL_0_DCF0,D1
00031F42 <AmiBlitz3.ab2@24162>   JSR  writelong
00031F46 <AmiBlitz3.ab2@24165>   MOVE.w fortemp(PC),D2
00031F4E <AmiBlitz3.ab2@24166>   MOVE.b #1,formode
00031F52 <AmiBlitz3.ab2@24167>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00031F58 <AmiBlitz3.ab2@24168>   CLR.b formode
00031F5C <AmiBlitz3.ab2@24169>   CMP.w #-$7FE8,D0
00031F60 <AmiBlitz3.ab2@24170>    BNE.w JUMP_syntaxerr
00031F66 <AmiBlitz3.ab2@24171>   MOVE.w commode,D1
00031F6A <AmiBlitz3.ab2@24172>    BNE.w JUMP_syntaxerr
00031F6E <AmiBlitz3.ab2@24173>   CMP.b #$6,D2
00031F72 <AmiBlitz3.ab2@24174>    BCC.w JUMP_badforerr
00031F76 <AmiBlitz3.ab2@24175>   BTST #$F,D2
00031F7A <AmiBlitz3.ab2@24176>    BNE.w JL_0_DD86
00031F80 <AmiBlitz3.ab2@24177>   MOVE.w leaamp,D1
00031F86 <AmiBlitz3.ab2@24178>   JSR pokewda5s
00031F88 <AmiBlitz3.ab2@24179>   MOVE.w D3,D1
00031F8E <AmiBlitz3.ab2@24180>   JSR  writeword
00031F94 <AmiBlitz3.ab2@24183>   MOVE.w pushindex,D1
00031F9A <AmiBlitz3.ab2@24184>   JSR  writeword
00031F9E <AmiBlitz3.ab2@24185>   ANDI.w #$FF,D2
00031FA0 <AmiBlitz3.ab2@24187>   MOVEA.l (A7),A1
00031FA4 <AmiBlitz3.ab2@24188>   MOVE.w D2,$C(A1)
00031FA6 <AmiBlitz3.ab2@24189>   MOVE.w D2,-(A7)
00031FAA <AmiBlitz3.ab2@24190>    BSR.w eval
00031FB0 <AmiBlitz3.ab2@24191>    CLR.b onestep
00031FB4 <AmiBlitz3.ab2@24192>    CMP.w #$8019,d0
00031FB8 <AmiBlitz3.ab2@24193>    BEQ 'l1
00031FC0 <AmiBlitz3.ab2@24194>    MOVE.b #1,onestep
00031FC2 <AmiBlitz3.ab2@24197>   MOVE.w (A7),D2
00031FC8 <AmiBlitz3.ab2@24198>   MOVE.w pushd0l,D1
00031FCC <AmiBlitz3.ab2@24199>   CMP.w #$3,D2
00031FD0 <AmiBlitz3.ab2@24200>    BCC.w JL_0_DDB6
00031FD6 <AmiBlitz3.ab2@24201>   MOVE.w pushd0wd,D1
00031FD8 <AmiBlitz3.ab2@24204>    MOVE.w D1,-(A7)
00031FDE <AmiBlitz3.ab2@24205>    TST.b fpu
00031FE2 <AmiBlitz3.ab2@24206>    BEQ 'old
00031FE6 <AmiBlitz3.ab2@24207>    CMP.b #5,d2
00031FEA <AmiBlitz3.ab2@24208>    BNE 'old
00031FF0 <AmiBlitz3.ab2@24209>    MOVE.l #$f2276400,d1
00031FF6 <AmiBlitz3.ab2@24211>    JSR writelong
00031FFA <AmiBlitz3.ab2@24212> BRA 'weit
00032000 <AmiBlitz3.ab2@24215>    JSR  writeword                                          ;fpu for end value
00032004 <AmiBlitz3.ab2@24218>   CMP.w #-$7FE7,D0
00032008 <AmiBlitz3.ab2@24219>    BNE.w JL_0_DDCC
0003200C <AmiBlitz3.ab2@24220>    BSR.w eval
00032012 <AmiBlitz3.ab2@24221>    TST.b fpu
00032016 <AmiBlitz3.ab2@24222>    BEQ JL_0_DE0C
0003201A <AmiBlitz3.ab2@24223>    CMP.b #5,d2
0003201E <AmiBlitz3.ab2@24224>    BNE JL_0_DE0C
00032024 <AmiBlitz3.ab2@24225>    MOVE.l #$f2276400,d1                                    ;write step <> 1
0003202A <AmiBlitz3.ab2@24227>   JSR writelong
0003202C <AmiBlitz3.ab2@24230>    MOVE.w (a7)+,d1
00032030 <AmiBlitz3.ab2@24231> BRA fpur
00032034 <AmiBlitz3.ab2@24234>   CMP.w #$4,D2
00032038 <AmiBlitz3.ab2@24235>    BCC.w JL_0_DDE0
0003203C <AmiBlitz3.ab2@24236>   MOVE.w #$7001,D1
00032042 <AmiBlitz3.ab2@24237>   JSR writeword
00032046 <AmiBlitz3.ab2@24238> BRA.w JL_0_DE0C
0003204C <AmiBlitz3.ab2@24241> JMP badforerr
00032050 <AmiBlitz3.ab2@24244>   BNE.w JL_0_DDFA
00032054 <AmiBlitz3.ab2@24245>   MOVE.w #$7001,D1
0003205A <AmiBlitz3.ab2@24246>   JSR writeword
00032060 <AmiBlitz3.ab2@24247>   MOVE.w swapd0,D1
00032066 <AmiBlitz3.ab2@24248>   JSR writeword
0003206A <AmiBlitz3.ab2@24249> BRA.w JL_0_DE0C
00032070 <AmiBlitz3.ab2@24252>   TST.b fpu
00032074 <AmiBlitz3.ab2@24253>    BEQ 'old
00032078 <AmiBlitz3.ab2@24254>   CMP.b #5,d2
0003207C <AmiBlitz3.ab2@24255>    BNE 'old
00032082 <AmiBlitz3.ab2@24256>   MOVE.l #$f23c5000,d1
00032088 <AmiBlitz3.ab2@24257>   JSR writelong
0003208C <AmiBlitz3.ab2@24258>   MOVE.w #$1,d1
00032092 <AmiBlitz3.ab2@24259>   JSR writeword
00032098 <AmiBlitz3.ab2@24260>   MOVE.l #$f2276400,d1
0003209E <AmiBlitz3.ab2@24261>   JSR writelong
000320A0 <AmiBlitz3.ab2@24262>   MOVE.w (a7)+,d1
000320A4 <AmiBlitz3.ab2@24263> BRA fpur
000320A8 <AmiBlitz3.ab2@24266>   MOVE.w #$203C,D1                                         ;write step 1
000320AE <AmiBlitz3.ab2@24267>   JSR writeword
000320B4 <AmiBlitz3.ab2@24268>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
000320BA <AmiBlitz3.ab2@24269>   JSR writelong
000320BC <AmiBlitz3.ab2@24272>   MOVE.w (A7)+,D1
000320C2 <AmiBlitz3.ab2@24273>   JSR writeword                                            ;push step on stack
000320C4 <AmiBlitz3.ab2@24276>   MOVE.w (A7)+,D2
000320C6 <AmiBlitz3.ab2@24277>   MOVEA.l (A7),A1
000320CE <AmiBlitz3.ab2@24278>   MOVE.l destpointer,$4(A1)
000320D4 <AmiBlitz3.ab2@24279>   LEA forcompb,A0
000320DA <AmiBlitz3.ab2@24280>   LEA forcompbf,A1
000320DE <AmiBlitz3.ab2@24281>   CMP.w #$1,D2
000320E2 <AmiBlitz3.ab2@24282>    BEQ.w JL_0_DE7E
000320E8 <AmiBlitz3.ab2@24283>   LEA forcompw,A0
000320EE <AmiBlitz3.ab2@24284>   LEA forcompwf,A1
000320F2 <AmiBlitz3.ab2@24285>   CMP.w #$2,D2
000320F6 <AmiBlitz3.ab2@24286>    BEQ.w JL_0_DE7E
000320FC <AmiBlitz3.ab2@24287>   LEA forcompl,A0
00032102 <AmiBlitz3.ab2@24288>   LEA forcomplf,A1
00032106 <AmiBlitz3.ab2@24289>   CMP.w #$5,D2
0003210A <AmiBlitz3.ab2@24290>    BNE.w JL_0_DE7E
00032110 <AmiBlitz3.ab2@24291>   TST.b fpu
00032114 <AmiBlitz3.ab2@24292>    BEQ 'old
0003211A <AmiBlitz3.ab2@24293>   LEA fpu_start,a0
00032120 <AmiBlitz3.ab2@24294>   LEA fpu_end,a1
00032126 <AmiBlitz3.ab2@24295>   JSR pokecode
0003212A <AmiBlitz3.ab2@24296> BRA fpu3
00032130 <AmiBlitz3.ab2@24299>   LEA forcompf,A0                                         ;
00032136 <AmiBlitz3.ab2@24300>   LEA forcompff,A1
0003213C <AmiBlitz3.ab2@24301>   JSR pokecode
00032140 <AmiBlitz3.ab2@24302>   MOVE.w #$C900,D1
00032144 <AmiBlitz3.ab2@24303>   BSR.w Atokejsr
0003214A <AmiBlitz3.ab2@24304>   LEA forcompf2,A0
00032150 <AmiBlitz3.ab2@24305>   LEA forcompf2f,A1
00032156 <AmiBlitz3.ab2@24308>   JSR pokecode
0003215C <AmiBlitz3.ab2@24309>   TST.b fast                                               ;fast for next
00032160 <AmiBlitz3.ab2@24310>    BEQ 's1
00032164 <AmiBlitz3.ab2@24311>   CMP.w #3,d2
00032168 <AmiBlitz3.ab2@24312>    BNE 's1
0003216E <AmiBlitz3.ab2@24313>   TST.b onestep
00032172 <AmiBlitz3.ab2@24314>    BEQ 's1
0003217C <AmiBlitz3.ab2@24315>   SUB.l #10,destpointer
00032180 <AmiBlitz3.ab2@24316>   MOVE.w #$b081,d1
00032186 <AmiBlitz3.ab2@24317>   JSR writeword
0003218A <AmiBlitz3.ab2@24321>   MOVE.l thebgt(PC),D1
00032190 <AmiBlitz3.ab2@24322>   JSR writelong
00032192 <AmiBlitz3.ab2@24325>   MOVEA.l (A7)+,A1
0003219A <AmiBlitz3.ab2@24326>   MOVE.l destpointer,$8(A1)
000321A0 <AmiBlitz3.ab2@24327> JMP reget
000321A4 <AmiBlitz3.ab2@24330>   MOVEA.l 8(a7),a2
000321A8 <AmiBlitz3.ab2@24331>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
000321AE <AmiBlitz3.ab2@24332>   fmove.s 4(a7),fp1
000321B2 <AmiBlitz3.ab2@24333>   BTST.b #7,(a7)
000321B6 <AmiBlitz3.ab2@24334>   BNE 'negi
000321BA <AmiBlitz3.ab2@24335>   fcmp.x fp1,fp0
000321BE <AmiBlitz3.ab2@24336> BRA 'negi2
000321C2 <AmiBlitz3.ab2@24339>   fcmp.x fp0,fp1
000321C6 <AmiBlitz3.ab2@24342>   Dc.l $f2920000                                           ;fbgt.w
000321CA <AmiBlitz3.ab2@24346>   BGT.w thebgt
000321D0 <AmiBlitz3.ab2@24349>   MOVE.l A5,letstart
000321D4 <AmiBlitz3.ab2@24350>   BSR.w getparameter
000321DE <AmiBlitz3.ab2@24356>   MOVE.l destpointer,pushpc
000321E8 <AmiBlitz3.ab2@24357>   MOVE.l hunkoffsetbase,pushoff
000321EE <AmiBlitz3.ab2@24358>   CLR.l rightsidetype
000321F6 <AmiBlitz3.ab2@24359>   MOVE.w #$0001,regnum
000321FC <AmiBlitz3.ab2@24360>   JSR JL_0_8E3C
00032202 <AmiBlitz3.ab2@24361>   JSR calcvar
00032208 <AmiBlitz3.ab2@24362>   TST.b formode
0003220C <AmiBlitz3.ab2@24363>   BEQ 'lf1
00032212 <AmiBlitz3.ab2@24364>   CMP.l #newtype_double,A2
00032216 <AmiBlitz3.ab2@24365>   BEQ JUMP_notallowd
0003221C <AmiBlitz3.ab2@24366>   MOVE.l a2,currtype
00032222 <AmiBlitz3.ab2@24369>   CLR.w startoffsetmore
00032226 <AmiBlitz3.ab2@24370>   CMP.w #$3d,d0
0003222A <AmiBlitz3.ab2@24371>   BNE 'l1a
0003222E <AmiBlitz3.ab2@24372>   BTST #15,d2
00032232 <AmiBlitz3.ab2@24373>   BEQ 'l1a
00032236 <AmiBlitz3.ab2@24374>   CMP.b #1,d2
0003223A <AmiBlitz3.ab2@24375>   BNE 'l1a
00032244 <AmiBlitz3.ab2@24376>   MOVE.w leaa0a0+2,startoffsetmore
0003224A <AmiBlitz3.ab2@24379>   CLR.w regnum
0003224E <AmiBlitz3.ab2@24380>   BSR.w JL_0_B5D2
00032254 <AmiBlitz3.ab2@24381>   CLR.w commode
0003225A <AmiBlitz3.ab2@24382>   CLR.w stackcorrect
00032260 <AmiBlitz3.ab2@24383>   CLR.w pcodd
00032266 <AmiBlitz3.ab2@24384>   MOVE.w startoffsetmore,d1
0003226A <AmiBlitz3.ab2@24385>   BTST #0,d1
0003226E <AmiBlitz3.ab2@24386>   BEQ 'l2a
00032276 <AmiBlitz3.ab2@24387>   MOVE.w #1,pcodd
0003227A <AmiBlitz3.ab2@24390>   CMP.w #$3D,D0                                            ;=
0003227E <AmiBlitz3.ab2@24391>   BEQ.w JL_0_DEE0
00032280 <AmiBlitz3.ab2@24394>   MOVE.b (a5)+,d1
00032284 <AmiBlitz3.ab2@24395>   BEQ 'l10
00032288 <AmiBlitz3.ab2@24396>   CMP.b #":",d1
0003228C <AmiBlitz3.ab2@24397>   BEQ 'l10
00032290 <AmiBlitz3.ab2@24398>   CMP.b #";",d1
00032294 <AmiBlitz3.ab2@24399>   BEQ 'l10
00032298 <AmiBlitz3.ab2@24400>   CMP.b #"0",d1
0003229C <AmiBlitz3.ab2@24401>   BLT 'l11
000322A0 <AmiBlitz3.ab2@24402>   CMP.b #"9",d1
000322A4 <AmiBlitz3.ab2@24403>   BGT 'l11
000322A8 <AmiBlitz3.ab2@24404> BRA.s 'l1
000322B0 <AmiBlitz3.ab2@24407>   MOVE.b #1,quickadd
000322B6 <AmiBlitz3.ab2@24410>   MOVEA.l letstart,A5
000322B8 <AmiBlitz3.ab2@24411>   SUBQ.w #1,A5
000322BC <AmiBlitz3.ab2@24414>   CMP.b #$7,D2
000322C0 <AmiBlitz3.ab2@24415>    BNE.w JL_0_DF8A
000322C4 <AmiBlitz3.ab2@24421>   MOVEM.w D2-D3,-(A7)
000322CA <AmiBlitz3.ab2@24422>   MOVE.l lastoffset_org,-(A7)
000322D0 <AmiBlitz3.ab2@24423>   MOVE.w varmode,-(A7)
000322DA <AmiBlitz3.ab2@24425>    MOVE.l #forthstack,forthsp
000322E4 <AmiBlitz3.ab2@24426>    MOVE.l #precstack,precsp
000322EA <AmiBlitz3.ab2@24427>    CLR.w regnum
000322F0 <AmiBlitz3.ab2@24428>    CLR.w nonew
000322F6 <AmiBlitz3.ab2@24429>    CLR.w sbasegot
00032300 <AmiBlitz3.ab2@24430>    MOVE.w varcodelen,oldvcodelen
00032306 <AmiBlitz3.ab2@24431>    CLR.w varcodelen
0003230E <AmiBlitz3.ab2@24432>    MOVE.w #$FFFF,lasta6
00032310 <AmiBlitz3.ab2@24435>   MOVEQ.l #$07,D2
00032314 <AmiBlitz3.ab2@24436>    BSR.w eval
0003231A <AmiBlitz3.ab2@24437>   MOVE.w (A7)+,varmode
00032320 <AmiBlitz3.ab2@24438>   MOVE.l (A7)+,lastoffset_org
00032326 <AmiBlitz3.ab2@24439>   MOVE.w moved0a3,D1
0003232C <AmiBlitz3.ab2@24440>    JSR writeword
00032332 <AmiBlitz3.ab2@24441>   MOVE.w commode,D1
00032336 <AmiBlitz3.ab2@24442>    BEQ.w JL_0_DF38
0003233C <AmiBlitz3.ab2@24443>   LEA pulla2st,A0
00032342 <AmiBlitz3.ab2@24444>   LEA pulla2stf,A1
00032348 <AmiBlitz3.ab2@24445>    JSR pokecode
0003234C <AmiBlitz3.ab2@24446> BRA.w JL_0_DF3C
00032350 <AmiBlitz3.ab2@24449>   BSR.w JL_0_B63C
00032354 <AmiBlitz3.ab2@24452>   MOVEM.w (A7)+,D2-D3
00032358 <AmiBlitz3.ab2@24453>   BTST #$F,D2
0003235C <AmiBlitz3.ab2@24454>   BNE.w JL_0_DF58
00032362 <AmiBlitz3.ab2@24455>     MOVE.w D3,leaa5d3a2+2
00032368 <AmiBlitz3.ab2@24456>     MOVE.l leaa5d3a2,D1
0003236E <AmiBlitz3.ab2@24457>     JSR pokela5s
00032372 <AmiBlitz3.ab2@24460>   MOVE.w #$FE6F,D1
00032378 <AmiBlitz3.ab2@24461>   JSR uselib
0003237E <AmiBlitz3.ab2@24462>   MOVE.l #$C700,D1
00032384 <AmiBlitz3.ab2@24463>   MOVE.l d1,lastinstruction
0003238A <AmiBlitz3.ab2@24464>   MOVE.w varmode,D2
0003238E <AmiBlitz3.ab2@24465>   BNE.w JL_0_DF70
00032390 <AmiBlitz3.ab2@24466>     ADDQ.w #1,D1
00032394 <AmiBlitz3.ab2@24469>   BSR.w Atokejsr
00032398 <AmiBlitz3.ab2@24470>   CMP.w #$2C,D0
0003239C <AmiBlitz3.ab2@24471>   BNE.w JL_0_E0C6
000323A2 <AmiBlitz3.ab2@24473>   MOVE.w addq4a2,D1
000323A8 <AmiBlitz3.ab2@24474>   JSR writeword
000323AC <AmiBlitz3.ab2@24475> BRA.w JL_0_E018
000323B2 <AmiBlitz3.ab2@24478> JMP error4char
000323B8 <AmiBlitz3.ab2@24481> JMP error_convert_types
000323BC <AmiBlitz3.ab2@24485>    BTST #$E,D2
000323C0 <AmiBlitz3.ab2@24486>    BNE.w JL_0_DF9C
000323C2 <AmiBlitz3.ab2@24487>   TST.b D2
000323C6 <AmiBlitz3.ab2@24488>    BEQ.w JUMP_noleterr
000323CC <AmiBlitz3.ab2@24489>    TST.b newsyntax
000323D0 <AmiBlitz3.ab2@24490>    BEQ JL_0_DFA0
000323D4 <AmiBlitz3.ab2@24493>    CMP.w #$4022,(a5)
000323D8 <AmiBlitz3.ab2@24494>    BNE JL_0_DFA0
000323DE <AmiBlitz3.ab2@24495>    CMP.l #3,d2
000323E2 <AmiBlitz3.ab2@24496>    BNE  JUMP_error_convert_types
000323E4 <AmiBlitz3.ab2@24497>    ADDQ #2,a5
000323E6 <AmiBlitz3.ab2@24498>    MOVEQ #0,d0
000323E8 <AmiBlitz3.ab2@24499>    MOVE.b (a5)+,d0
000323EC <AmiBlitz3.ab2@24500>    BEQ JL_0_DFA0
000323F0 <AmiBlitz3.ab2@24501>    CMP.b #$22,d0
000323F4 <AmiBlitz3.ab2@24502>    BNE 'l1
000323F8 <AmiBlitz3.ab2@24503>    MOVE.b #0,d0
000323FC <AmiBlitz3.ab2@24504> BRA 'do
000323FE <AmiBlitz3.ab2@24507>   ASL.l #8,d0
00032400 <AmiBlitz3.ab2@24508>    MOVE.b (a5)+,d0
00032404 <AmiBlitz3.ab2@24509>    BEQ JL_0_DFA0
00032408 <AmiBlitz3.ab2@24510>    CMP.b #$22,d0
0003240C <AmiBlitz3.ab2@24511>    BNE 'l2
00032410 <AmiBlitz3.ab2@24512>    MOVE.b #0,d0
00032412 <AmiBlitz3.ab2@24513>    ASR.l #8,d0
00032416 <AmiBlitz3.ab2@24514> BRA 'do
00032418 <AmiBlitz3.ab2@24517>   ASL.l #8,d0
0003241A <AmiBlitz3.ab2@24518>     MOVE.b (a5)+,d0
0003241E <AmiBlitz3.ab2@24519>    BEQ JL_0_DFA0
00032422 <AmiBlitz3.ab2@24520>    CMP.b #$22,d0
00032426 <AmiBlitz3.ab2@24521>    BNE 'l3
0003242A <AmiBlitz3.ab2@24522>    MOVE.b #0,d0
0003242C <AmiBlitz3.ab2@24523>    ASR.l #8,d0
00032430 <AmiBlitz3.ab2@24524> BRA 'do
00032432 <AmiBlitz3.ab2@24527>   ASL.l #8,d0
00032434 <AmiBlitz3.ab2@24528>     MOVE.b (a5)+,d0
00032438 <AmiBlitz3.ab2@24529>    BEQ JL_0_DFA0
0003243C <AmiBlitz3.ab2@24530>    CMP.b #$22,d0
00032440 <AmiBlitz3.ab2@24531>    BNE 'l4
00032444 <AmiBlitz3.ab2@24532>    MOVE.b #0,d0
00032446 <AmiBlitz3.ab2@24533>    ASR.l #8,d0
0003244A <AmiBlitz3.ab2@24534> BRA 'do
0003244E <AmiBlitz3.ab2@24537>    CMP.b #$22,(a5)+
00032452 <AmiBlitz3.ab2@24538>    BNE JUMP_error4char
00032456 <AmiBlitz3.ab2@24541>   MOVE.w #$2b7c,d1
0003245C <AmiBlitz3.ab2@24542>    TST.w varmode
00032460 <AmiBlitz3.ab2@24543>    BEQ 'g3
00032464 <AmiBlitz3.ab2@24544>    BCLR #9,d1
0003246A <AmiBlitz3.ab2@24547>     JSR writeword
0003246C <AmiBlitz3.ab2@24548>     MOVE.l d0,d1
00032472 <AmiBlitz3.ab2@24549>     JSR writelong
00032474 <AmiBlitz3.ab2@24550>     MOVE.w d3,d1
0003247A <AmiBlitz3.ab2@24551>     JSR writeword
00032480 <AmiBlitz3.ab2@24552>     JSR get1bytemain
00032482 <AmiBlitz3.ab2@24553> RTS
00032488 <AmiBlitz3.ab2@24559> JMP noleterr
0003248E <AmiBlitz3.ab2@24563>   MOVE.w d2,vartype
00032492 <AmiBlitz3.ab2@24564>   MOVE.b #$3,D2
00032496 <AmiBlitz3.ab2@24567>   CMP.b #5,d2
0003249A <AmiBlitz3.ab2@24568>   BNE 'l1
000324A0 <AmiBlitz3.ab2@24569>   MOVE.l a2,currtype
000324A4 <AmiBlitz3.ab2@24573>   MOVEM.w D2-D3,-(A7)
000324AA <AmiBlitz3.ab2@24574>   MOVE.w varmode,-(A7)
000324B0 <AmiBlitz3.ab2@24575>   MOVE.l a2,leftsidetype
000324B4 <AmiBlitz3.ab2@24576>   BTST #$f,d2
000324B8 <AmiBlitz3.ab2@24577>   BEQ 'nomultiassign
000324BE <AmiBlitz3.ab2@24578>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
000324C2 <AmiBlitz3.ab2@24579> 'nomultiassign  ANDI.w #$FF,D2
000324C8 <AmiBlitz3.ab2@24580>   MOVE.l lastoffset_org,-(A7)
000324CC <AmiBlitz3.ab2@24581>   BSR.w eval                                ; calc right side of var assign
000324D0 <AmiBlitz3.ab2@24583>   MOVEM.l a0/a1,-(a7)
000324D6 <AmiBlitz3.ab2@24584>   MOVE.l leftsidetype,a0
000324DC <AmiBlitz3.ab2@24585>   CMP.l #0,a0
000324E0 <AmiBlitz3.ab2@24586>   BEQ 'nocheck
000324E8 <AmiBlitz3.ab2@24587>   CMP.l #$100,4(a0)
000324EC <AmiBlitz3.ab2@24588>   BLE 'nocheck
000324F2 <AmiBlitz3.ab2@24589>   TST.l typetocast
000324F6 <AmiBlitz3.ab2@24590>   BEQ 'nocast
000324FC <AmiBlitz3.ab2@24591>   MOVE.l typetocast,a1
00032500 <AmiBlitz3.ab2@24592>   BRA 'typecheck
00032506 <AmiBlitz3.ab2@24593> 'nocast  TST.l rightsidetype
0003250A <AmiBlitz3.ab2@24594>   BEQ 'nocheck
00032510 <AmiBlitz3.ab2@24595>   MOVE.l rightsidetype,a1
00032518 <AmiBlitz3.ab2@24596>   CMP.l #$100,4(a1)
0003251C <AmiBlitz3.ab2@24597>   BGE 'typecheck
00032524 <AmiBlitz3.ab2@24598>   CMP.l #$3,4(a1)
00032528 <AmiBlitz3.ab2@24599>   BEQ 'ok                              ;long assign is allow with this codelines
0003252C <AmiBlitz3.ab2@24600>   BRA 'error
00032532 <AmiBlitz3.ab2@24602>   TST.b typecheck
00032536 <AmiBlitz3.ab2@24603>   BEQ 'nocheck
0003253C <AmiBlitz3.ab2@24604>   TST.b notypecheck
00032540 <AmiBlitz3.ab2@24605>   BNE 'ok
00032542 <AmiBlitz3.ab2@24606>   CMP.l a0,a1
00032546 <AmiBlitz3.ab2@24607>   BEQ 'ok
0003254A <AmiBlitz3.ab2@24609>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
0003254E <AmiBlitz3.ab2@24610>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00032552 <AmiBlitz3.ab2@24611>   BEQ 'ok
00032558 <AmiBlitz3.ab2@24613>  JMP   error_convert_types     ;for syntax 4  = typecheck
0003255E <AmiBlitz3.ab2@24616>    CLR.l typetocast
00032562 <AmiBlitz3.ab2@24617>    MOVEM.l (a7)+, a0/a1
00032568 <AmiBlitz3.ab2@24618>   MOVE.l (A7)+,lastoffset_org
0003256E <AmiBlitz3.ab2@24619>   MOVE.w commode,D1
00032572 <AmiBlitz3.ab2@24620>    BNE.w JL_0_DFCC
00032576 <AmiBlitz3.ab2@24621>    BSR.w JL_0_B63C
0003257C <AmiBlitz3.ab2@24624>   MOVE.w (A7)+,varmode
00032580 <AmiBlitz3.ab2@24625>   MOVEM.w (A7)+,D2-D3
00032584 <AmiBlitz3.ab2@24627>   MOVE.w #$2B40,D1
0003258A <AmiBlitz3.ab2@24628>   MOVE.w varmode,D4
0003258E <AmiBlitz3.ab2@24629>    BEQ.w JL_0_DFE8
00032592 <AmiBlitz3.ab2@24630>   BCLR #$9,D1
00032596 <AmiBlitz3.ab2@24633>   BTST #$F,D2
0003259A <AmiBlitz3.ab2@24634>    BEQ.w JL_0_E090
000325A0 <AmiBlitz3.ab2@24635>    TST.b stackcorrect
000325A4 <AmiBlitz3.ab2@24636>    BNE 'st1
000325AA <AmiBlitz3.ab2@24637>   MOVE.w commode,D1
000325AE <AmiBlitz3.ab2@24638>    BEQ.w JL_0_E004
000325B4 <AmiBlitz3.ab2@24641>   MOVE.w pulla2,D1
000325BA <AmiBlitz3.ab2@24642>    JSR writeword
000325BE <AmiBlitz3.ab2@24645>   MOVE.w #$2480,D1
000325C2 <AmiBlitz3.ab2@24646>    MOVEM.l a0/d0,-(a7)
000325C8 <AmiBlitz3.ab2@24647>    MOVEA.l lastoffset_org,A0
000325CA <AmiBlitz3.ab2@24648>    MOVE.l A0,D0
000325CE <AmiBlitz3.ab2@24649>    BEQ.w 'skip
000325D0 <AmiBlitz3.ab2@24650>    MOVEA.l D0,A0
000325D8 <AmiBlitz3.ab2@24651>    MOVE.l $A(A0),currtype
000325DC <AmiBlitz3.ab2@24654>   MOVEM.l (a7)+,a0/d0
000325E0 <AmiBlitz3.ab2@24655>   CMP.w #$2C,D0
000325E4 <AmiBlitz3.ab2@24656>    BNE.w JL_0_E090
000325E8 <AmiBlitz3.ab2@24657>     MOVE.w #$24C0,D1
000325EC <AmiBlitz3.ab2@24658>    BSR.w JL_0_E090                                         ;write store
000325F2 <AmiBlitz3.ab2@24661>    MOVE.l lastoffset_org,D0
000325FA <AmiBlitz3.ab2@24665>   MOVE.w #$FFFF,commode
00032600 <AmiBlitz3.ab2@24666>   CLR.w varcodelen
00032608 <AmiBlitz3.ab2@24667>   MOVE.b #1,optiarray
0003260E <AmiBlitz3.ab2@24668>   MOVE.w pusha2,D1
00032614 <AmiBlitz3.ab2@24669>    JSR writeword
0003261A <AmiBlitz3.ab2@24670>   TST.l lastoffset_org
0003261E <AmiBlitz3.ab2@24671>   BEQ dimmore
00032624 <AmiBlitz3.ab2@24672>   MOVEA.l lastoffset_org,A0
00032626 <AmiBlitz3.ab2@24673>   MOVE.l (A0),D0
0003262A <AmiBlitz3.ab2@24674>    BEQ.w JUMP_comerr
0003262C <AmiBlitz3.ab2@24675>   MOVEA.l D0,A0
00032632 <AmiBlitz3.ab2@24676>   MOVE.l A0,lastoffset_org
00032638 <AmiBlitz3.ab2@24677>   BTST #$1,$7(A0)
0003263C <AmiBlitz3.ab2@24678>    BNE.w JUMP_nocomerr
00032640 <AmiBlitz3.ab2@24679>   MOVEA.l $A(A0),A1
00032644 <AmiBlitz3.ab2@24680>   MOVE.l $4(A1),D2
0003264A <AmiBlitz3.ab2@24683>   BTST #$0,$7(A0)
0003264E <AmiBlitz3.ab2@24684>    BNE.w JL_0_E078
00032654 <AmiBlitz3.ab2@24685>   CMP.l #$100,D2
00032658 <AmiBlitz3.ab2@24686>    BCC.l JUMP_nocomerr
0003265C <AmiBlitz3.ab2@24687> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00032662 <AmiBlitz3.ab2@24690>         CLR.b optiarray
00032666 <AmiBlitz3.ab2@24691>         CMP.w #"@@",(a5)
0003266A <AmiBlitz3.ab2@24692>         BEQ 'n1
0003266E <AmiBlitz3.ab2@24693> BRA 'd1
00032674 <AmiBlitz3.ab2@24696>   JSR nextline
00032676 <AmiBlitz3.ab2@24697>         MOVE.l a5,-(a7)
00032678 <AmiBlitz3.ab2@24700>   MOVE.b (a5)+,d0
0003267C <AmiBlitz3.ab2@24701>         CMP.b #$20,d0
00032680 <AmiBlitz3.ab2@24702>         BEQ 'l2
00032682 <AmiBlitz3.ab2@24703>         MOVE.l (a7)+,a5
00032686 <AmiBlitz3.ab2@24704>         CMP.b #";",d0
0003268A <AmiBlitz3.ab2@24705>         BEQ 'n1
00032690 <AmiBlitz3.ab2@24708>         TST.w debugmode
00032694 <AmiBlitz3.ab2@24709>         BEQ JL_0_DEE0
00032696 <AmiBlitz3.ab2@24710>         MOVE.l a0,-(a7)
0003269C <AmiBlitz3.ab2@24711>         MOVE.l pushat,a0
000326A2 <AmiBlitz3.ab2@24712>         CMP.l #0,a0
000326A6 <AmiBlitz3.ab2@24713>         BNE 'o1
000326AA <AmiBlitz3.ab2@24714> BRA 'skip
000326B2 <AmiBlitz3.ab2@24717>         ADD.l #1,2(a0)
000326B8 <AmiBlitz3.ab2@24720>   CLR.w commode
000326C0 <AmiBlitz3.ab2@24721>         MOVE.b #1,stackcorrect
000326C2 <AmiBlitz3.ab2@24722>         MOVE.l (a7)+,a0
000326C8 <AmiBlitz3.ab2@24723> JMP JL_0_DEE0
000326CE <AmiBlitz3.ab2@24726> JMP nocomerr
000326D4 <AmiBlitz3.ab2@24729>   CMP.l #$100,D2
000326D8 <AmiBlitz3.ab2@24730>    BCS.w JL_0_E084
000326DA <AmiBlitz3.ab2@24731>   MOVEQ.l #$00,D2
000326DE <AmiBlitz3.ab2@24734>   BSET #$E,D2
000326E2 <AmiBlitz3.ab2@24737>   BSET #$F,D2
000326E6 <AmiBlitz3.ab2@24738> BRA.w JL_0_DEE0
000326EC <AmiBlitz3.ab2@24741>    MOVE.l destpointer,a4
000326F4 <AmiBlitz3.ab2@24742>    MOVE.l #$f22a6400,-4(a4)
000326FA <AmiBlitz3.ab2@24743>    MOVE.w arrayoffset,d1
00032700 <AmiBlitz3.ab2@24744> JMP writeword
00032706 <AmiBlitz3.ab2@24747> JMP comerr
0003270C <AmiBlitz3.ab2@24750>    TST.b fpu
00032710 <AmiBlitz3.ab2@24751>    BEQ 'nofloat
00032714 <AmiBlitz3.ab2@24752>    CMP.b #5,d2
00032718 <AmiBlitz3.ab2@24753>    BNE 'nofloat
0003271E <AmiBlitz3.ab2@24754>    CLR.w fp0var
00032724 <AmiBlitz3.ab2@24755>    LEA regtable,a4
00032726 <AmiBlitz3.ab2@24756>    TST.l (a4)
0003272A <AmiBlitz3.ab2@24757>    BEQ 'noreg
0003272E <AmiBlitz3.ab2@24758>    BTST #15,d2                                             ;regvars
00032732 <AmiBlitz3.ab2@24759>    BNE 'noreg
00032736 <AmiBlitz3.ab2@24760>    CMP.w 0+4(a4),d3
0003273A <AmiBlitz3.ab2@24761>    BNE 'doreg1
00032740 <AmiBlitz3.ab2@24762>    MOVE.l #$f2000380,d1
00032746 <AmiBlitz3.ab2@24763>    MOVE.w regnum,d0
0003274A <AmiBlitz3.ab2@24764>    BNE 'noopt
00032750 <AmiBlitz3.ab2@24770>    MOVE.l destpointer,a4
00032758 <AmiBlitz3.ab2@24771>    CMP.l #$f2001c80,-8(a4)
0003275C <AmiBlitz3.ab2@24772>    BNE 'noopt
00032764 <AmiBlitz3.ab2@24773>    CMP.l #$f2000422,-4(a4)
00032768 <AmiBlitz3.ab2@24774>    BNE 'noopt
0003276E <AmiBlitz3.ab2@24775>    MOVE.l #$f20003a2,d1
00032778 <AmiBlitz3.ab2@24776>    SUB.l #8,destpointer
0003277A <AmiBlitz3.ab2@24779>    ASL.w #7,d0
0003277C <AmiBlitz3.ab2@24780>    OR.w d0,d1
00032782 <AmiBlitz3.ab2@24781>    JSR writelong
00032784 <AmiBlitz3.ab2@24782> RTS
00032788 <AmiBlitz3.ab2@24785>   CMP.w 8+4(a4),d3
0003278C <AmiBlitz3.ab2@24786>    BNE 'doreg2
00032792 <AmiBlitz3.ab2@24787>    MOVE.l #$f2000300,d1
00032798 <AmiBlitz3.ab2@24788>    MOVE.w regnum,d0
0003279A <AmiBlitz3.ab2@24789>    ASL.w #7,d0
0003279C <AmiBlitz3.ab2@24790>    OR.w d0,d1
000327A2 <AmiBlitz3.ab2@24791>    JSR writelong
000327A4 <AmiBlitz3.ab2@24792> RTS
000327A8 <AmiBlitz3.ab2@24795>   CMP.w 16+4(a4),d3
000327AC <AmiBlitz3.ab2@24796>    BNE 'doreg3
000327B2 <AmiBlitz3.ab2@24797>    MOVE.l #$f2000280,d1
000327B8 <AmiBlitz3.ab2@24798>    MOVE.w regnum,d0
000327BA <AmiBlitz3.ab2@24799>    ASL.w #7,d0
000327BC <AmiBlitz3.ab2@24800>    OR.w d0,d1
000327C2 <AmiBlitz3.ab2@24801>    JSR  writelong
000327C4 <AmiBlitz3.ab2@24802>  RTS
000327C8 <AmiBlitz3.ab2@24805>   CMP.w 24+4(a4),d3
000327CC <AmiBlitz3.ab2@24806>    BNE 'doreg4
000327D2 <AmiBlitz3.ab2@24807>    MOVE.l #$f2000200,d1
000327D8 <AmiBlitz3.ab2@24808>    MOVE.w regnum,d0
000327DA <AmiBlitz3.ab2@24809>    ASL.w #7,d0
000327DC <AmiBlitz3.ab2@24810>    OR.w d0,d1
000327E2 <AmiBlitz3.ab2@24811>    JSR writelong
000327E4 <AmiBlitz3.ab2@24812> RTS
000327E8 <AmiBlitz3.ab2@24815>   CMP.w 32+4(a4),d3
000327EC <AmiBlitz3.ab2@24816>    BNE 'noreg
000327F2 <AmiBlitz3.ab2@24817>    MOVE.l #$f2000180,d1
000327F8 <AmiBlitz3.ab2@24818>    MOVE.w regnum,d0
000327FA <AmiBlitz3.ab2@24819>    ASL.w #7,d0
000327FC <AmiBlitz3.ab2@24820>    OR.w d0,d1
00032802 <AmiBlitz3.ab2@24821>    JSR writelong
00032804 <AmiBlitz3.ab2@24822> RTS
0003280A <AmiBlitz3.ab2@24825>    TST.w regnum
0003280E <AmiBlitz3.ab2@24826>    BNE 'nofp0
00032814 <AmiBlitz3.ab2@24827>    MOVE.l destpointer ,a4
0003281C <AmiBlitz3.ab2@24828>    CMP.l #$f2304400,-6(a4)
00032820 <AmiBlitz3.ab2@24829>    BNE 'do
00032826 <AmiBlitz3.ab2@24830>    CMP.w #$1990,-2(a4)
0003282A <AmiBlitz3.ab2@24831>    BNE 'do
0003282E <AmiBlitz3.ab2@24832>    BTST #15,d2                                             ;types ?
00032832 <AmiBlitz3.ab2@24833>    BNE 'do
00032838 <AmiBlitz3.ab2@24834>   MOVE.l #$2b701990,d1                                     ;var
0003283E <AmiBlitz3.ab2@24835>   TST.w varmode
00032842 <AmiBlitz3.ab2@24836>   BEQ 'glob1
00032846 <AmiBlitz3.ab2@24837>   BCLR #25,d1
0003284A <AmiBlitz3.ab2@24840>   MOVE.l d1,-6(a4)
0003284E <AmiBlitz3.ab2@24841>   MOVE.w d3,-2(a4)
00032854 <AmiBlitz3.ab2@24842>   CLR.w fp0var
0003285C <AmiBlitz3.ab2@24843>   MOVE.w #$ffff,fp0mode
0003285E <AmiBlitz3.ab2@24844> RTS
00032866 <AmiBlitz3.ab2@24847>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003286A <AmiBlitz3.ab2@24848>    BNE 'do3
00032874 <AmiBlitz3.ab2@24849>    CMP.l #newtype_double,currtype
00032878 <AmiBlitz3.ab2@24850>    BEQ 'do4
0003287C <AmiBlitz3.ab2@24853>   MOVE.w #$2b6d,d1
00032882 <AmiBlitz3.ab2@24854>    TST.w varmode
00032886 <AmiBlitz3.ab2@24855>    BEQ 'g2
0003288A <AmiBlitz3.ab2@24856>     BCLR #9,d1
0003288E <AmiBlitz3.ab2@24859>     CMP.w #$2b6d,d1
00032892 <AmiBlitz3.ab2@24860>     BNE 'd1
00032896 <AmiBlitz3.ab2@24861>     CMP.w -2(a4),d3
0003289A <AmiBlitz3.ab2@24862>     BNE 'd1
000328A0 <AmiBlitz3.ab2@24863>     SUBQ.l #6,destpointer
000328A4 <AmiBlitz3.ab2@24864> BRA 'd12
000328A8 <AmiBlitz3.ab2@24867>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000328AE <AmiBlitz3.ab2@24868>     MOVE.w -2(a4),-4(a4)
000328B2 <AmiBlitz3.ab2@24869>     MOVE.w d3,-2(a4)
000328B8 <AmiBlitz3.ab2@24872>   CLR.w fp0var
000328C0 <AmiBlitz3.ab2@24873>     MOVE.w #$ffff,fp0mode
000328C2 <AmiBlitz3.ab2@24874> RTS
000328CA <AmiBlitz3.ab2@24877>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
000328CE <AmiBlitz3.ab2@24878>    BNE 'do4
000328D2 <AmiBlitz3.ab2@24879>    MOVE.w #$2b6c,d1
000328D8 <AmiBlitz3.ab2@24880>       TST.w varmode
000328DC <AmiBlitz3.ab2@24881>    BEQ 'g3
000328E0 <AmiBlitz3.ab2@24882>    BCLR #9,d1
000328E4 <AmiBlitz3.ab2@24885>   MOVE.w d1,-6(a4)
000328EA <AmiBlitz3.ab2@24886>     MOVE.w -2(a4),-4(a4)
000328EE <AmiBlitz3.ab2@24887>     MOVE.w d3,-2(a4)
000328F4 <AmiBlitz3.ab2@24888>     CLR.w fp0var
000328FC <AmiBlitz3.ab2@24889>     MOVE.w #$ffff,fp0mode
000328FE <AmiBlitz3.ab2@24890> RTS
00032904 <AmiBlitz3.ab2@24893>   MOVE.w d3,fp0var
0003290E <AmiBlitz3.ab2@24894>    MOVE.w varmode,fp0mode
00032910 <AmiBlitz3.ab2@24895>    ADDQ.l #6,a4
00032916 <AmiBlitz3.ab2@24896>    MOVE.l a4,fp0addr
00032920 <AmiBlitz3.ab2@24897>    MOVE.l firstiff,fp0iff
00032924 <AmiBlitz3.ab2@24900>   MOVEM.l d0/d4,-(a7)
00032926 <AmiBlitz3.ab2@24901>    MOVEQ #0,d0
0003292C <AmiBlitz3.ab2@24902>     MOVE.w regnum,d0
0003292E <AmiBlitz3.ab2@24903>    ASL.w #7,d0                                             ;fpu store var
00032932 <AmiBlitz3.ab2@24904>   BTST #15,d2
00032936 <AmiBlitz3.ab2@24905>    BEQ 'var
00032938 <AmiBlitz3.ab2@24906>    MOVE.w d1,d4
0003293C <AmiBlitz3.ab2@24907>    CMP.w #$24c0,d4
00032940 <AmiBlitz3.ab2@24908>    BNE 'nopl
00032946 <AmiBlitz3.ab2@24909>    MOVE.l #$f21a6400,d1
00032948 <AmiBlitz3.ab2@24910>    MOVEQ #0,d3
0003294C <AmiBlitz3.ab2@24911> BRA 'glob
00032952 <AmiBlitz3.ab2@24915>   MOVE.l #$f2126400,d1
00032954 <AmiBlitz3.ab2@24916>    TST.w d3                                                ;offset =0
00032958 <AmiBlitz3.ab2@24917>    BNE 'offset
0003295E <AmiBlitz3.ab2@24918>    MOVE.l #$f2126400,d1
00032960 <AmiBlitz3.ab2@24926>    MOVEQ #0,d3
00032964 <AmiBlitz3.ab2@24927> BRA 'glob
0003296A <AmiBlitz3.ab2@24930>   MOVE.l #$f22d6400,d1                                     ;var
00032970 <AmiBlitz3.ab2@24931>   TST.w varmode
00032974 <AmiBlitz3.ab2@24932>   BEQ 'glob
00032978 <AmiBlitz3.ab2@24933>   BCLR #16,d1
0003297A <AmiBlitz3.ab2@24934>  'glob OR.l d0,d1
00032984 <AmiBlitz3.ab2@24937>   CMP.l #newtype_double,currtype
00032988 <AmiBlitz3.ab2@24938>   BNE 'dbl1
0003298E <AmiBlitz3.ab2@24939>   OR.l #$00001000,d1
00032994 <AmiBlitz3.ab2@24942>   JSR writelong
0003299A <AmiBlitz3.ab2@24943>   CLR.l currtype
0003299E <AmiBlitz3.ab2@24944>   MOVEM.l (a7)+,d0/d4
000329A0 <AmiBlitz3.ab2@24945>   MOVE.l d3,d1
000329A4 <AmiBlitz3.ab2@24946>   BEQ 'nooffs
000329AA <AmiBlitz3.ab2@24947> JMP writeword
000329AC <AmiBlitz3.ab2@24950> RTS
000329B2 <AmiBlitz3.ab2@24964>     TST.b fast                                             ;write lea->xx(a2)
000329B6 <AmiBlitz3.ab2@24965>    BEQ 'la10
000329BC <AmiBlitz3.ab2@24969>    TST.b quickadd
000329C2 <AmiBlitz3.ab2@24971>      CLR.b quickadd
000329C6 <AmiBlitz3.ab2@24972>    CMP.w #$2480,d1
000329CA <AmiBlitz3.ab2@24973>    BNE 'la10
000329D0 <AmiBlitz3.ab2@24974>    TST.b optiarray
000329D4 <AmiBlitz3.ab2@24975>    BNE 'la10
000329DA <AmiBlitz3.ab2@24976>    MOVE.l destpointer,a4
000329E0 <AmiBlitz3.ab2@24977>    CMP.w #$45ea,-4(a4)
000329E4 <AmiBlitz3.ab2@24978>    BNE 'la10
000329EC <AmiBlitz3.ab2@24979>    CMP.w #8,pushclen
000329F0 <AmiBlitz3.ab2@24980>    BEQ 'la100
000329F8 <AmiBlitz3.ab2@24981>    CMP.w #6,pushclen
000329FC <AmiBlitz3.ab2@24982>    BNE 'la10
00032A00 <AmiBlitz3.ab2@24983>    CMP.b #3,d2
00032A04 <AmiBlitz3.ab2@24984>    BCS 'la110
00032A0A <AmiBlitz3.ab2@24986>    MOVE.w #$2540,-2(a4)
00032A10 <AmiBlitz3.ab2@24987>    MOVE.w arrayoffset,d1
00032A16 <AmiBlitz3.ab2@24988> JMP writeword
00032A1C <AmiBlitz3.ab2@24991>    CLR.b quickadd
00032A1E <AmiBlitz3.ab2@24992> RTS
00032A22 <AmiBlitz3.ab2@24995>    CMP.b #2,d2
00032A26 <AmiBlitz3.ab2@24996>    BNE 'la120
00032A2C <AmiBlitz3.ab2@24997>     MOVE.w #$3540,-2(a4)
00032A32 <AmiBlitz3.ab2@24998>    MOVE.w arrayoffset,d1
00032A38 <AmiBlitz3.ab2@24999> JMP writeword
00032A3C <AmiBlitz3.ab2@25002>   CMP.b #1,d2
00032A40 <AmiBlitz3.ab2@25003>    BNE.s 'la10
00032A46 <AmiBlitz3.ab2@25004>     MOVE.w #$1540,-2(a4)
00032A4C <AmiBlitz3.ab2@25005>    MOVE.w arrayoffset,d1
00032A52 <AmiBlitz3.ab2@25006> JMP writeword
00032A56 <AmiBlitz3.ab2@25009>    CMP.b #3,d2
00032A5A <AmiBlitz3.ab2@25010>    BCS 'la11
00032A60 <AmiBlitz3.ab2@25011>    MOVE.w #$2540,-4(a4)
00032A62 <AmiBlitz3.ab2@25012> RTS
00032A66 <AmiBlitz3.ab2@25015>    CMP.b #2,d2
00032A6A <AmiBlitz3.ab2@25016>    BNE 'la12
00032A70 <AmiBlitz3.ab2@25017>     MOVE.w #$3540,-4(a4)
00032A72 <AmiBlitz3.ab2@25018> RTS
00032A76 <AmiBlitz3.ab2@25020>  'la12 CMP.b #1,d2
00032A7A <AmiBlitz3.ab2@25021>    BNE.s 'la10
00032A80 <AmiBlitz3.ab2@25022>     MOVE.w #$1540,-4(a4)
00032A82 <AmiBlitz3.ab2@25023> RTS
00032A88 <AmiBlitz3.ab2@25026>   CLR.b optiarray
00032A8C <AmiBlitz3.ab2@25027>    CMP.b #$1,D2
00032A90 <AmiBlitz3.ab2@25028>    BEQ.w JL_0_E0AC
00032A94 <AmiBlitz3.ab2@25029>    BSR.w varalign
00032A98 <AmiBlitz3.ab2@25030>    CMP.b #$3,D2
00032A9C <AmiBlitz3.ab2@25031>    BCC.w writevarlong
00032AA2 <AmiBlitz3.ab2@25032>    TST.b fast                                              ;optiimmi
00032AA6 <AmiBlitz3.ab2@25033>    BEQ 'l10b
00032AAC <AmiBlitz3.ab2@25038>    MOVE.l destpointer,a0
00032AB2 <AmiBlitz3.ab2@25039>    SUB.l imm_addr,a0
00032AB8 <AmiBlitz3.ab2@25040>    CMP.l #4,a0
00032ABC <AmiBlitz3.ab2@25041>    BNE 'l10
00032AC2 <AmiBlitz3.ab2@25042>    CLR.l imm_addr
00032AC8 <AmiBlitz3.ab2@25043>    MOVE.l destpointer,a4
00032ACC <AmiBlitz3.ab2@25044>    OR.w #$107c,d1
00032AD0 <AmiBlitz3.ab2@25045>    MOVE.w d1,-4(a4)
00032AD2 <AmiBlitz3.ab2@25046>     MOVE.w D3,D1
00032AD8 <AmiBlitz3.ab2@25047> JMP writeword
00032ADE <AmiBlitz3.ab2@25050>   MOVE.l destpointer,a0
00032AE4 <AmiBlitz3.ab2@25051>   SUB.l load_var_addr,a0
00032AEA <AmiBlitz3.ab2@25052>   CMP.l #4,a0
00032AEE <AmiBlitz3.ab2@25053>   BNE 'l10b
00032AF4 <AmiBlitz3.ab2@25054>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00032AF8 <AmiBlitz3.ab2@25055>   BNE 'l10b
00032AFE <AmiBlitz3.ab2@25057>   CLR.l load_var_addr
00032B04 <AmiBlitz3.ab2@25058>   MOVE.l destpointer,a4
00032B08 <AmiBlitz3.ab2@25059>   OR.w #$102d,d1
00032B0C <AmiBlitz3.ab2@25060>   MOVE.w d1,-4(a4)
00032B0E <AmiBlitz3.ab2@25061>   MOVE.w d3,d1
00032B14 <AmiBlitz3.ab2@25062> JMP writeword
00032B18 <AmiBlitz3.ab2@25065>   ORI.w #$1000,D1                                          ;word
00032B1C <AmiBlitz3.ab2@25066> BRA.w writestorevar
00032B22 <AmiBlitz3.ab2@25070>    TST.b fast                                              ;optiimmi
00032B26 <AmiBlitz3.ab2@25071>    BEQ 'l10b
00032B2C <AmiBlitz3.ab2@25076>    MOVE.l destpointer,a0
00032B32 <AmiBlitz3.ab2@25077>    SUB.l imm_addr,a0
00032B38 <AmiBlitz3.ab2@25078>    CMP.l #4,a0
00032B3C <AmiBlitz3.ab2@25079>    BNE 'l10
00032B42 <AmiBlitz3.ab2@25080>    CLR.l imm_addr
00032B48 <AmiBlitz3.ab2@25081>    MOVE.l destpointer,a4
00032B4C <AmiBlitz3.ab2@25082>    OR.w #$7c,d1
00032B50 <AmiBlitz3.ab2@25083>    EORI #$3000,d1
00032B54 <AmiBlitz3.ab2@25084>    MOVE.w d1,-4(a4)
00032B56 <AmiBlitz3.ab2@25085>       MOVE.w D3,D1
00032B5C <AmiBlitz3.ab2@25086> JMP writeword
00032B62 <AmiBlitz3.ab2@25089>   MOVE.l destpointer,a0
00032B68 <AmiBlitz3.ab2@25090>   SUB.l load_var_addr,a0
00032B6E <AmiBlitz3.ab2@25091>   CMP.l #4,a0
00032B72 <AmiBlitz3.ab2@25092>   BNE 'l10b
00032B78 <AmiBlitz3.ab2@25093>   CLR.l load_var_addr
00032B7E <AmiBlitz3.ab2@25094>   MOVE.l destpointer,a4
00032B84 <AmiBlitz3.ab2@25095>    CMP.w #$1b6d,-4(a4)
00032B88 <AmiBlitz3.ab2@25096>    BNE 'l10b
00032B8C <AmiBlitz3.ab2@25097>    OR.w #$2d,d1
00032B90 <AmiBlitz3.ab2@25098>    EORI #$3000,d1
00032B94 <AmiBlitz3.ab2@25099>    MOVE.w d1,-4(a4)
00032B96 <AmiBlitz3.ab2@25100>   MOVE.w d3,d1
00032B9C <AmiBlitz3.ab2@25101> JMP writeword
00032BA2 <AmiBlitz3.ab2@25104>   ADDQ.w #1,pcodd                                          ;byte
00032BA6 <AmiBlitz3.ab2@25105>   EORI.w #$3000,D1
00032BAC <AmiBlitz3.ab2@25108>   JSR writeword
00032BB0 <AmiBlitz3.ab2@25109>   BTST #$7,D1
00032BB4 <AmiBlitz3.ab2@25110>    BNE JL_0_E0C6
00032BB6 <AmiBlitz3.ab2@25111>   MOVE.w D3,D1
00032BBC <AmiBlitz3.ab2@25112> JMP writeword
00032BC2 <AmiBlitz3.ab2@25115>    TST.b fast                                              ;optiimmi
00032BC6 <AmiBlitz3.ab2@25116>    BEQ 'l10b
00032BCC <AmiBlitz3.ab2@25120>    MOVE.l destpointer,a0
00032BD2 <AmiBlitz3.ab2@25121>    SUB.l imm_addr,a0
00032BD8 <AmiBlitz3.ab2@25122>    CMP.l #6,a0
00032BDC <AmiBlitz3.ab2@25123>    BNE 'l10
00032BE2 <AmiBlitz3.ab2@25124>    CLR.l imm_addr
00032BE8 <AmiBlitz3.ab2@25125>    MOVE.l destpointer,a4
00032BEC <AmiBlitz3.ab2@25126>    OR.w #$7c,d1
00032BF0 <AmiBlitz3.ab2@25127>    MOVE.w d1,-6(a4)
00032BF2 <AmiBlitz3.ab2@25128>     MOVE.w D3,D1
00032BF8 <AmiBlitz3.ab2@25129> JMP writeword
00032BFE <AmiBlitz3.ab2@25132>   MOVE.l destpointer,a0
00032C04 <AmiBlitz3.ab2@25133>   SUB.l load_var_addr,a0
00032C0A <AmiBlitz3.ab2@25134>   CMP.l #4,a0
00032C0E <AmiBlitz3.ab2@25135>   BNE 'l10b
00032C14 <AmiBlitz3.ab2@25136>   CLR.l load_var_addr
00032C1A <AmiBlitz3.ab2@25137>   MOVE.l destpointer,a4
00032C20 <AmiBlitz3.ab2@25138>   CMP.w #$245f,-2(a4)
00032C24 <AmiBlitz3.ab2@25139>   BEQ 'l10b
00032C28 <AmiBlitz3.ab2@25140>   OR.w #$28,d1
00032C2C <AmiBlitz3.ab2@25141>   OR.w d1,-4(a4)
00032C32 <AmiBlitz3.ab2@25142>   CMP.w #$2b6d,-4(a4)
00032C36 <AmiBlitz3.ab2@25143>   BNE 'd1
00032C3A <AmiBlitz3.ab2@25144>   CMP.w -2(a4),d3
00032C3E <AmiBlitz3.ab2@25145>   BNE 'd1
00032C44 <AmiBlitz3.ab2@25146>   SUBQ.l #4,destpointer
00032C46 <AmiBlitz3.ab2@25147> RTS
00032C48 <AmiBlitz3.ab2@25150>   MOVE.w d3,d1
00032C4E <AmiBlitz3.ab2@25151> JMP writeword
00032C54 <AmiBlitz3.ab2@25154>   JSR writeword
00032C58 <AmiBlitz3.ab2@25155>   BTST #$7,D1
00032C5C <AmiBlitz3.ab2@25156>    BNE.b JL_0_E0C6
00032C5E <AmiBlitz3.ab2@25157>   MOVE.w D3,D1
00032C64 <AmiBlitz3.ab2@25158> JMP writeword
00032C66 <AmiBlitz3.ab2@25161> RTS
00032C68 <AmiBlitz3.ab2@25165>   MOVE.w D1,-(A7)
00032C6C <AmiBlitz3.ab2@25166>   MOVE.w pcodd(PC),D1
00032C6E <AmiBlitz3.ab2@25167>   LSR.w #1,D1
00032C72 <AmiBlitz3.ab2@25168>    BCC.b JL_0_E0E2
00032C78 <AmiBlitz3.ab2@25169>   CLR.w pcodd
00032C7E <AmiBlitz3.ab2@25170>   MOVE.w add1a2,D1
00032C84 <AmiBlitz3.ab2@25171>    JSR writeword
00032C86 <AmiBlitz3.ab2@25174>   MOVE.w (A7)+,D1
00032C88 <AmiBlitz3.ab2@25175> RTS
00032C8A <AmiBlitz3.ab2@25179> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00032C8C <AmiBlitz3.ab2@25182> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00032C8E <AmiBlitz3.ab2@25183> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00032C90 <AmiBlitz3.ab2@25184> listsize:  Ds.w 1
00032C96 <AmiBlitz3.ab2@25188>   ADDQ.w #1,regnum
00032C9E <AmiBlitz3.ab2@25189>   MOVE.b #1,nowdeclare
00032CA4 <AmiBlitz3.ab2@25190>   CLR.b dimkeep
00032CAC <AmiBlitz3.ab2@25191>    CMP.l #"KEEP",-1(a5)
00032CB0 <AmiBlitz3.ab2@25192>   BNE 'nokeep
00032CB6 <AmiBlitz3.ab2@25193>   CMP.b #" ",3(a5)
00032CBA <AmiBlitz3.ab2@25194>   BNE 'nokeep
00032CBC <AmiBlitz3.ab2@25195>   ADDQ.l #3,a5
00032CC0 <AmiBlitz3.ab2@25198>     CMP.b #" ",(a5)
00032CC4 <AmiBlitz3.ab2@25199>     BNE '1
00032CC6 <AmiBlitz3.ab2@25200>    ADDQ #1,a5
00032CCA <AmiBlitz3.ab2@25201> BRA '2
00032CD0 <AmiBlitz3.ab2@25204>   MOVE.l a5,lastsourcepos
00032CD8 <AmiBlitz3.ab2@25205>   MOVE.b #1,dimkeep
00032CDC <AmiBlitz3.ab2@25213>   MOVE.w #$FF9A,D1
00032CE2 <AmiBlitz3.ab2@25214>   JSR uselib
00032CE8 <AmiBlitz3.ab2@25217>   CLR.w listadd
00032CEC <AmiBlitz3.ab2@25218>   CMP.w #-$7F4D,D0
00032CF0 <AmiBlitz3.ab2@25219>    BNE.w JL_0_E11E
00032CF8 <AmiBlitz3.ab2@25220>   MOVE.w #$0008,listadd
00032CFC <AmiBlitz3.ab2@25221>   MOVE.w #$FFFA,D1
00032D02 <AmiBlitz3.ab2@25222>    JSR uselib
00032D08 <AmiBlitz3.ab2@25223>    JSR get1bytemain
00032D0E <AmiBlitz3.ab2@25226>   CLR.w nonew
00032D14 <AmiBlitz3.ab2@25227>    JSR getparameter
00032D1C <AmiBlitz3.ab2@25228>   BTST #$1,flagmask+1
00032D20 <AmiBlitz3.ab2@25229>    BEQ.w JUMP_syntaxerr
00032D26 <AmiBlitz3.ab2@25230>    JSR JL_0_8E3C
00032D2C <AmiBlitz3.ab2@25231>   MOVE.w notshared,D1
00032D30 <AmiBlitz3.ab2@25232>    BNE.w JL_0_E198
00032D38 <AmiBlitz3.ab2@25233>   MOVE.w $8(A3),temp1
00032D3E <AmiBlitz3.ab2@25234>   MOVE.w proceduremode,D2
00032D42 <AmiBlitz3.ab2@25235>    BNE.w JL_0_E176
00032D48 <AmiBlitz3.ab2@25236>   MOVE.w globalvarpointer,-(A7)
00032D50 <AmiBlitz3.ab2@25237>   MOVE.w $4(A3),globalvarpointer
00032D56 <AmiBlitz3.ab2@25238>   ADDQ.w #4,globalvarpointer
00032D5A <AmiBlitz3.ab2@25239>    BSR.w write_dim_code
00032D60 <AmiBlitz3.ab2@25240>   MOVE.w (A7)+,globalvarpointer
00032D64 <AmiBlitz3.ab2@25241> BRA.w JL_0_E1BA
00032D6A <AmiBlitz3.ab2@25252>   MOVE.w globalvarpointer,-(A7)
00032D70 <AmiBlitz3.ab2@25253>             MOVE.w proceduremode,-(a7)
00032D76 <AmiBlitz3.ab2@25254>             CLR.w proceduremode
00032D7E <AmiBlitz3.ab2@25255>   MOVE.w $4(A3),globalvarpointer
00032D84 <AmiBlitz3.ab2@25256>   ADDQ.w #4,globalvarpointer
00032D88 <AmiBlitz3.ab2@25257>    BSR.w write_dim_code
00032D8E <AmiBlitz3.ab2@25258>    MOVE.w (a7)+,proceduremode
00032D94 <AmiBlitz3.ab2@25259>   MOVE.w (A7)+,globalvarpointer
00032D98 <AmiBlitz3.ab2@25260> BRA.w JL_0_E1BA
00032DA0 <AmiBlitz3.ab2@25263>   MOVE.w #$FFFF,temp1
00032DA4 <AmiBlitz3.ab2@25264>   MOVE.w listadd(PC),D1
00032DA8 <AmiBlitz3.ab2@25265>    BEQ.w JL_0_E1B6
00032DB0 <AmiBlitz3.ab2@25266>   MOVE.w #$4000,temp1
00032DB6 <AmiBlitz3.ab2@25267>   BSET #$0,$6(A3)
00032DBC <AmiBlitz3.ab2@25270>         TST.w proceduremode
00032DC0 <AmiBlitz3.ab2@25271>        BNE 'l1
00032DC6 <AmiBlitz3.ab2@25272>        MOVE.w locvaroff,-(a7)
00032DCA <AmiBlitz3.ab2@25275>   BSR.w write_dim_code
00032DD0 <AmiBlitz3.ab2@25276>         TST.w proceduremode
00032DD4 <AmiBlitz3.ab2@25277>         BNE JL_0_E1BA
00032DDA <AmiBlitz3.ab2@25278>        MOVE.w (A7)+,locvaroff
00032DE0 <AmiBlitz3.ab2@25281>   JSR get1bytemain
00032DE4 <AmiBlitz3.ab2@25282>   CMP.w #$2C,D0
00032DE8 <AmiBlitz3.ab2@25283>    BNE.w JL_0_E1CE
00032DEE <AmiBlitz3.ab2@25284>    JSR get1bytemain
00032DF2 <AmiBlitz3.ab2@25285> BRA.w JL_0_E0FC
00032DF4 <AmiBlitz3.ab2@25288> RTS
00032DFC <AmiBlitz3.ab2@25291>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00032E02 <AmiBlitz3.ab2@25292>   MOVE.w beginarr,D1
00032E08 <AmiBlitz3.ab2@25293>    JSR writeword
00032E0A <AmiBlitz3.ab2@25294>   MOVEQ.l #$00,D1
00032E10 <AmiBlitz3.ab2@25295>    JSR writeword
00032E12 <AmiBlitz3.ab2@25296>   MOVEQ.l #$04,D1
00032E1A <AmiBlitz3.ab2@25297>   BTST #$0,flagmask+1
00032E1E <AmiBlitz3.ab2@25298>    BNE.w write_dim_code__pointer
00032E22 <AmiBlitz3.ab2@25299>   MOVE.w $8(A2),D1
00032E26 <AmiBlitz3.ab2@25302>   ADD.w listadd(PC),D1                                     ;size of one element.
00032E2C <AmiBlitz3.ab2@25303>   MOVE.w D1,listsize
00032E32 <AmiBlitz3.ab2@25304>    JSR writeword
00032E38 <AmiBlitz3.ab2@25305>   CLR.w temp2                                              ;# dim's got
00032E3A <AmiBlitz3.ab2@25306>   MOVE.l A3,-(A7)
00032E40 <AmiBlitz3.ab2@25309>   ADDQ.w #1,temp2
00032E42 <AmiBlitz3.ab2@25310>   MOVEQ.l #$03,D2                                          ;get word
00032E48 <AmiBlitz3.ab2@25311>   MOVE.w notshared,-(a7)
00032E4E <AmiBlitz3.ab2@25312>    JSR eval
00032E54 <AmiBlitz3.ab2@25313>   MOVE.w (a7)+,notshared
00032E5A <AmiBlitz3.ab2@25314>   TST.b debugmode
00032E5E <AmiBlitz3.ab2@25315>    BEQ.w write_dim_code__norerr0
00032E62 <AmiBlitz3.ab2@25316>   MOVE.w #$C30F,D1
00032E66 <AmiBlitz3.ab2@25322>       MOVE.w #$5281,d1
00032E6C <AmiBlitz3.ab2@25323>       JSR writeword
00032E72 <AmiBlitz3.ab2@25324>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00032E78 <AmiBlitz3.ab2@25325>       JSR writelong
00032E7E <AmiBlitz3.ab2@25326>   MOVE.w proceduremode,D2
00032E82 <AmiBlitz3.ab2@25327>    BEQ.w write_dim_code__global
00032E88 <AmiBlitz3.ab2@25328>   SUBQ.w #4,locvaroff
00032E92 <AmiBlitz3.ab2@25329>   MOVE.w locvaroff,putarr+2
00032E96 <AmiBlitz3.ab2@25330> BRA.w write_dim_code__doit
00032E9C <AmiBlitz3.ab2@25333> JMP syntaxerr
00032EA6 <AmiBlitz3.ab2@25336>   MOVE.w globalvarpointer,putarr+2
00032EAC <AmiBlitz3.ab2@25337>   ADDQ.w #4,globalvarpointer
00032EB2 <AmiBlitz3.ab2@25340>   TST.b dimkeep
00032EB6 <AmiBlitz3.ab2@25341>            BEQ write_dim_code__doit_l1
00032EB8 <AmiBlitz3.ab2@25342>       MOVEQ #0,d1
00032EBE <AmiBlitz3.ab2@25343>       MOVE.w putarr+2,d1
00032EC4 <AmiBlitz3.ab2@25344>       OR.l  #$222d0000,d1
00032ECA <AmiBlitz3.ab2@25345>       MOVE.w proceduremode,D2
00032ECE <AmiBlitz3.ab2@25346>       BEQ write_dim_code__doit_l2
00032ED4 <AmiBlitz3.ab2@25347>       TST.w notshared
00032ED8 <AmiBlitz3.ab2@25348>       BEQ write_dim_code__doit_l2
00032EDE <AmiBlitz3.ab2@25349>       SUB.l #$00010000,d1
00032EE4 <AmiBlitz3.ab2@25352>   JSR writelong
00032EEA <AmiBlitz3.ab2@25355>   MOVE.l putarr,D1
00032EF0 <AmiBlitz3.ab2@25356>       TST.w notshared
00032EF4 <AmiBlitz3.ab2@25357>       BNE write_dim_code__doit_l1a
00032EFA <AmiBlitz3.ab2@25358>       JSR writelong
00032EFE <AmiBlitz3.ab2@25359> BRA write_dim_code__doit_l4
00032F04 <AmiBlitz3.ab2@25362>   JSR pokela5d
00032F08 <AmiBlitz3.ab2@25365>   CMP.w #$2C,D0
00032F0C <AmiBlitz3.ab2@25366>    BEQ.w write_dim_code__loop
00032F10 <AmiBlitz3.ab2@25367>   CMP.w #$29,D0
00032F14 <AmiBlitz3.ab2@25368>    BNE.w JUMP_syntaxerr
00032F16 <AmiBlitz3.ab2@25369>   MOVEA.l (A7)+,A3
00032F1C <AmiBlitz3.ab2@25370>   MOVE.w temp1,D1
00032F20 <AmiBlitz3.ab2@25371>    BMI.w write_dim_code__nocare
00032F24 <AmiBlitz3.ab2@25375>   BTST #$E,D1
00032F28 <AmiBlitz3.ab2@25376>    BEQ.w write_dim_code__notl
00032F30 <AmiBlitz3.ab2@25377>   CMPI.w #$1,temp2
00032F34 <AmiBlitz3.ab2@25378>    BNE.w JUMP_redimerr
00032F38 <AmiBlitz3.ab2@25379> BRA.w write_dim_code__nocare
00032F3E <AmiBlitz3.ab2@25382> JMP redimerr
00032F44 <AmiBlitz3.ab2@25385>   CMP.w temp2,D1
00032F48 <AmiBlitz3.ab2@25386>    BNE.w JUMP_redimerr                                      ;range too long
00032F4E <AmiBlitz3.ab2@25389>   LEA globalvarpointer,A0
00032F54 <AmiBlitz3.ab2@25390>   MOVE.w proceduremode,D1
00032F58 <AmiBlitz3.ab2@25391>   BEQ.w write_dim_code__gskip
00032F5E <AmiBlitz3.ab2@25392>   LEA locvaroff,A0
00032F64 <AmiBlitz3.ab2@25395>   MOVE.W  extraword,(A0)
00032F68 <AmiBlitz3.ab2@25396>   BRA.W   write_dim_code__care
00032F70 <AmiBlitz3.ab2@25399>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00032F76 <AmiBlitz3.ab2@25402>   LEA doarr,A0
00032F7C <AmiBlitz3.ab2@25403>   MOVE.w $4(A3),$2(A0)
00032F84 <AmiBlitz3.ab2@25404>   MOVE.w putarr+2,$6(A0)
00032F86 <AmiBlitz3.ab2@25405>   MOVE.l (A0)+,D1
00032F8C <AmiBlitz3.ab2@25406>    JSR writelong
00032F8E <AmiBlitz3.ab2@25407>   MOVE.l (A0),D1
00032F94 <AmiBlitz3.ab2@25408>    JSR writelong
00032F9A <AmiBlitz3.ab2@25409>    TST.b dimkeep
00032F9E <AmiBlitz3.ab2@25410>   BNE write_dim_code__care_l3
00032FA2 <AmiBlitz3.ab2@25413>   MOVE.w #$C400,D1
00032FA6 <AmiBlitz3.ab2@25414> BRA write_dim_code__care_l2
00032FAA <AmiBlitz3.ab2@25417>   MOVE.w #$C405,d1
00032FB0 <AmiBlitz3.ab2@25420>   MOVE.w proceduremode,D2
00032FB4 <AmiBlitz3.ab2@25421>    BEQ.w write_dim_code__isg
00032FBA <AmiBlitz3.ab2@25422>    TST.w notshared
00032FBE <AmiBlitz3.ab2@25423>    BEQ write_dim_code__isg
00032FC0 <AmiBlitz3.ab2@25424>   ADDQ.w #1,D1
00032FC4 <AmiBlitz3.ab2@25427>   MOVE.w listadd(PC),D2
00032FC8 <AmiBlitz3.ab2@25428>    BEQ.w write_dim_code__isrg
00032FCA <AmiBlitz3.ab2@25429>   MOVE.w D1,-(A7)
00032FCE <AmiBlitz3.ab2@25430>   MOVE.w setles(PC),D1
00032FD4 <AmiBlitz3.ab2@25431>    JSR writeword
00032FD8 <AmiBlitz3.ab2@25432>   MOVE.w listsize(PC),D1
00032FDE <AmiBlitz3.ab2@25433>    JSR writeword
00032FE0 <AmiBlitz3.ab2@25434>   MOVE.w (A7)+,D1
00032FE2 <AmiBlitz3.ab2@25435>   ADDQ.w #3,D1
00032FE6 <AmiBlitz3.ab2@25438> BRA.w Atokejsr
00032FEC <AmiBlitz3.ab2@25445>     MOVE.l #$f23c4400,d1
00032FF2 <AmiBlitz3.ab2@25447>   MOVE.w regnum,d0
00032FF4 <AmiBlitz3.ab2@25448>   ASL.w #7,d0
00032FF6 <AmiBlitz3.ab2@25449>   OR.w d0,d1
00032FFC <AmiBlitz3.ab2@25450>   JSR writelong
00033002 <AmiBlitz3.ab2@25456>     MOVE.l #$40490fd9,d1
00033008 <AmiBlitz3.ab2@25458>   JSR writelong
0003300E <AmiBlitz3.ab2@25459> JMP get1bytemain
00033012 <AmiBlitz3.ab2@25463> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00033016 <AmiBlitz3.ab2@25470> vbr:                Ds.l 1
00033018 <AmiBlitz3.ab2@25471> cfetchmode:         Ds.w 1                               ;1=fetching a constant
0003301E <AmiBlitz3.ab2@25473> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00033022 <AmiBlitz3.ab2@25477> constpcat:          Ds.l 1
00033026 <AmiBlitz3.ab2@25478> constlibat:         Ds.l 1
0003302A <AmiBlitz3.ab2@25479> constmaxpc:         Dc.l $400
0003302E <AmiBlitz3.ab2@25481> stacksize:          Dc.l 32768                           ;stackfuck org source
00033032 <AmiBlitz3.ab2@25482> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00033036 <AmiBlitz3.ab2@25483> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
0003303A <AmiBlitz3.ab2@25484> lastrestype:        Dc.l newtype_string
0003303C <AmiBlitz3.ab2@25485> rescnt:             Ds.w 1                               ;# resident
0003303E <AmiBlitz3.ab2@25486> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00033042 <AmiBlitz3.ab2@25487> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00033044 <AmiBlitz3.ab2@25488> linedone:           Ds.w 1
0003305A <AmiBlitz3.ab2@25489> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
0003305E <AmiBlitz3.ab2@25498>   Dc.l 0                                        ; bytetobyte
00033062 <AmiBlitz3.ab2@25499>   Dc.l convert_byte_to_word                     ; bytetoword
00033066 <AmiBlitz3.ab2@25500>   Dc.l convert_byte_to_long                     ; bytetolong
0003306A <AmiBlitz3.ab2@25501>   Dc.l convert_byte_to_quick                    ; bytetoquick
0003306E <AmiBlitz3.ab2@25502>   Dc.l convert_byte_to_float                    ; bytetofloat
00033072 <AmiBlitz3.ab2@25503>   Dc.l convert_byte_to_long                     ; bytetolong
00033076 <AmiBlitz3.ab2@25504>   Dc.l error_convert_types                      ; noconerr
0003307A <AmiBlitz3.ab2@25507>   Dc.l convert_word_to_byte                     ; wordtobyte
0003307E <AmiBlitz3.ab2@25508>   Dc.l 0                                        ; wordtoword
00033082 <AmiBlitz3.ab2@25509>   Dc.l convert_word_to_long                     ; wordtolong
00033086 <AmiBlitz3.ab2@25510>   Dc.l convert_word_to_quick                    ; wordtoquick
0003308A <AmiBlitz3.ab2@25511>   Dc.l convert_word_to_float                    ; wordtofloat
0003308E <AmiBlitz3.ab2@25512>   Dc.l convert_word_to_long                     ; wordtolong
00033092 <AmiBlitz3.ab2@25513>   Dc.l error_convert_types                      ; noconerr
00033096 <AmiBlitz3.ab2@25516>   Dc.l convert_long_to_byte                     ; longtobyte
0003309A <AmiBlitz3.ab2@25517>   Dc.l convert_long_to_word                     ; longtoword
0003309E <AmiBlitz3.ab2@25518>   Dc.l 0                                        ; longtolong
000330A2 <AmiBlitz3.ab2@25519>   Dc.l convert_long_to_quick                    ; longtoquick
000330A6 <AmiBlitz3.ab2@25520>   Dc.l convert_long_to_float                    ; longtofloat
000330AA <AmiBlitz3.ab2@25521>   Dc.l 0                                        ; longtolong
000330AE <AmiBlitz3.ab2@25522>   Dc.l error_convert_types                      ; noconerr
000330B2 <AmiBlitz3.ab2@25525>   Dc.l convert_quick_to_byte                    ; quicktobyte
000330B6 <AmiBlitz3.ab2@25526>   Dc.l convert_quick_to_word                    ; quicktoword
000330BA <AmiBlitz3.ab2@25527>   Dc.l convert_quick_to_long                    ; quicktolong
000330BE <AmiBlitz3.ab2@25528>   Dc.l 0                                        ; quicktoquick
000330C2 <AmiBlitz3.ab2@25529>   Dc.l convert_quick_to_float                   ; quicktofloat
000330C6 <AmiBlitz3.ab2@25530>   Dc.l convert_quick_to_long                    ; quicktolong
000330CA <AmiBlitz3.ab2@25531>   Dc.l error_convert_types                      ; noconerr
000330CE <AmiBlitz3.ab2@25534>   Dc.l convert_float_to_byte                    ; floattobyte
000330D2 <AmiBlitz3.ab2@25535>   Dc.l convert_float_to_word                    ; floattoword
000330D6 <AmiBlitz3.ab2@25536>   Dc.l convert_float_to_long                    ; floattolong
000330DA <AmiBlitz3.ab2@25537>   Dc.l convert_float_to_quick                   ; floattoquick
000330DE <AmiBlitz3.ab2@25538>   Dc.l 0                                        ; floattofloat
000330E2 <AmiBlitz3.ab2@25539>   Dc.l convert_float_to_long                    ; floattolong
000330E6 <AmiBlitz3.ab2@25540>   Dc.l error_convert_types                      ; noconerr
000330EA <AmiBlitz3.ab2@25543>   Dc.l convert_long_to_byte                     ; longtobyte
000330EE <AmiBlitz3.ab2@25544>   Dc.l convert_long_to_word                     ; longtoword
000330F2 <AmiBlitz3.ab2@25545>   Dc.l 0                                        ; longtolong
000330F6 <AmiBlitz3.ab2@25546>   Dc.l convert_long_to_quick                    ; longtoquick
000330FA <AmiBlitz3.ab2@25547>   Dc.l convert_long_to_float                    ; longtofloat
000330FE <AmiBlitz3.ab2@25548>   Dc.l 0                                        ; longtolong
00033102 <AmiBlitz3.ab2@25549>   Dc.l error_convert_types                      ; noconerr
00033106 <AmiBlitz3.ab2@25552>   Dc.l error_convert_types                      ; noconerr
0003310A <AmiBlitz3.ab2@25553>   Dc.l error_convert_types                      ; noconerr
0003310E <AmiBlitz3.ab2@25554>   Dc.l string_to_long                           ; stringtolong
00033112 <AmiBlitz3.ab2@25555>   Dc.l error_convert_types                      ; noconerr
00033116 <AmiBlitz3.ab2@25556>   Dc.l error_convert_types                      ; noconerr
0003311A <AmiBlitz3.ab2@25557>   Dc.l string_to_long                           ; stringtolong
0003311E <AmiBlitz3.ab2@25558>   Ds.l 1
00033120 <AmiBlitz3.ab2@25564>   Dc.b $00,$2B                                  ;+ ; add
00033124 <AmiBlitz3.ab2@25565>   Dc.l do_plus_byte                             ;doplusb
00033128 <AmiBlitz3.ab2@25566>   Dc.l do_plus_word                             ;doplusw
0003312C <AmiBlitz3.ab2@25567>   Dc.l do_plus_long                             ;doplusl
00033130 <AmiBlitz3.ab2@25568>   Dc.l do_plus_long                             ;doplusl
00033134 <AmiBlitz3.ab2@25569>   Dc.l do_plus_float                            ;doplusf
00033138 <AmiBlitz3.ab2@25570>   Ds.l 1
0003313C <AmiBlitz3.ab2@25571>   Dc.l add_strings                              ;addstrings
0003313E <AmiBlitz3.ab2@25572>   Dc.b $0B,$B8
00033140 <AmiBlitz3.ab2@25574>   Dc.b $00,$2D                                  ;- ; sub
00033144 <AmiBlitz3.ab2@25575>   Dc.l do_minus_byte                            ;dominusb
00033148 <AmiBlitz3.ab2@25576>   Dc.l do_minus_word                            ;dominusw
0003314C <AmiBlitz3.ab2@25577>   Dc.l do_minus_long                            ;dominusl
00033150 <AmiBlitz3.ab2@25578>   Dc.l do_minus_long                            ;dominusl
00033154 <AmiBlitz3.ab2@25579>   Dc.l do_minus_float                           ;dominusf
0003315C <AmiBlitz3.ab2@25580>   Ds.l 2
0003315E <AmiBlitz3.ab2@25581>   Dc.b $0B,$B8
00033160 <AmiBlitz3.ab2@25583>   Dc.b $00,$2A                                  ;* ; mul
00033164 <AmiBlitz3.ab2@25584>   Dc.l do_times_byte                            ;dotimesb
00033168 <AmiBlitz3.ab2@25585>   Dc.l do_times_word                            ;dotimesw
0003316C <AmiBlitz3.ab2@25586>   Dc.l do_times_long                            ;dotimesl
00033170 <AmiBlitz3.ab2@25587>   Dc.l do_times_quick                           ;dotimesq
00033174 <AmiBlitz3.ab2@25588>   Dc.l do_times_float                           ;dotimesf
0003317C <AmiBlitz3.ab2@25589>   Ds.l 2
0003317E <AmiBlitz3.ab2@25590>   Dc.b $0F,$A0
00033180 <AmiBlitz3.ab2@25592>   Dc.b $00,$2F                                  ;/ ; div
00033184 <AmiBlitz3.ab2@25593>   Dc.l do_Div_byte                              ;dodivb
00033188 <AmiBlitz3.ab2@25594>   Dc.l do_Div_word                              ;dodivb
0003318C <AmiBlitz3.ab2@25595>   Dc.l do_Div_long                              ;dodivl
00033190 <AmiBlitz3.ab2@25596>   Dc.l do_Div_quick                             ;dodivq
00033194 <AmiBlitz3.ab2@25597>   Dc.l do_Div_float                             ;dodivf
0003319C <AmiBlitz3.ab2@25598>   Ds.l 2
0003319E <AmiBlitz3.ab2@25599>   Dc.b $0F,$A0
000331A0 <AmiBlitz3.ab2@25601>   Dc.b $00,$26                                  ;& ; & int
000331A4 <AmiBlitz3.ab2@25602>   Dc.l do_AND_byte                              ;doandb
000331A8 <AmiBlitz3.ab2@25603>   Dc.l do_AND_word                              ;doandw
000331AC <AmiBlitz3.ab2@25604>   Dc.l do_AND_long                              ;doandl
000331B0 <AmiBlitz3.ab2@25605>   Dc.l do_AND_long                              ;doandl
000331BC <AmiBlitz3.ab2@25606>   Ds.l 3
000331BE <AmiBlitz3.ab2@25607>   Dc.b $13,$88
000331C0 <AmiBlitz3.ab2@25609>   Dc.b $00,$7C                                  ;| ;or int ;
000331C4 <AmiBlitz3.ab2@25610>   Dc.l do_OR_byte                               ;doorb
000331C8 <AmiBlitz3.ab2@25611>   Dc.l do_OR_word                               ;doorw
000331CC <AmiBlitz3.ab2@25612>   Dc.l do_OR_long                               ;doorl
000331D0 <AmiBlitz3.ab2@25613>   Dc.l do_OR_long                               ;doorl
000331DC <AmiBlitz3.ab2@25614>   Ds.l 3
000331DE <AmiBlitz3.ab2@25615>   Dc.b $13,$88
000331E0 <AmiBlitz3.ab2@25617>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
000331E4 <AmiBlitz3.ab2@25618>   Dc.l do_AND_byte                              ;doandb
000331E8 <AmiBlitz3.ab2@25619>   Dc.l do_AND_word                              ;doandw
000331EC <AmiBlitz3.ab2@25620>   Dc.l do_AND_long                              ;doandl
000331F0 <AmiBlitz3.ab2@25621>   Dc.l do_AND_long                              ;doandl
000331FC <AmiBlitz3.ab2@25622>   Ds.l 3
000331FE <AmiBlitz3.ab2@25623>   Dc.b $03,$E8
00033200 <AmiBlitz3.ab2@25625>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00033204 <AmiBlitz3.ab2@25626>   Dc.l do_OR_byte                               ;doorb
00033208 <AmiBlitz3.ab2@25627>   Dc.l do_OR_word                               ;doorw
0003320C <AmiBlitz3.ab2@25628>   Dc.l do_OR_long                               ;doorl
00033210 <AmiBlitz3.ab2@25629>   Dc.l do_OR_long                               ;doorl
0003321C <AmiBlitz3.ab2@25630>   Ds.l 3
0003321E <AmiBlitz3.ab2@25631>   Dc.b $03,$E8
00033220 <AmiBlitz3.ab2@25633>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00033224 <AmiBlitz3.ab2@25634>   Dc.l do_EOR_byte                              ;doeorb
00033228 <AmiBlitz3.ab2@25635>   Dc.l do_EOR_word                              ;doeorw
0003322C <AmiBlitz3.ab2@25636>   Dc.l do_EOR_long                              ;doeorl
00033230 <AmiBlitz3.ab2@25637>   Dc.l do_EOR_long                              ;doeorl
0003323C <AmiBlitz3.ab2@25638>   Ds.l 3
0003323E <AmiBlitz3.ab2@25639>   Dc.b $03,$E8
00033240 <AmiBlitz3.ab2@25641>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00033244 <AmiBlitz3.ab2@25642>   Dc.l do_LSL                                   ;dolslb
00033248 <AmiBlitz3.ab2@25643>   Dc.l do_LSL                                   ;dolslw
0003324C <AmiBlitz3.ab2@25644>   Dc.l do_LSL                                   ;dolsll
00033250 <AmiBlitz3.ab2@25645>   Dc.l do_LSL                                   ;dolsll
0003325C <AmiBlitz3.ab2@25646>   Ds.l 3
0003325E <AmiBlitz3.ab2@25647>   Dc.b $17,$70
00033260 <AmiBlitz3.ab2@25649>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00033264 <AmiBlitz3.ab2@25650>   Dc.l do_LSL                                   ;dolslb
00033268 <AmiBlitz3.ab2@25651>   Dc.l do_LSL                                   ;dolslw
0003326C <AmiBlitz3.ab2@25652>   Dc.l do_LSL                                   ;dolsll
00033270 <AmiBlitz3.ab2@25653>   Dc.l do_LSL                                   ;dolsll
0003327C <AmiBlitz3.ab2@25654>   Ds.l 3
0003327E <AmiBlitz3.ab2@25655>   Dc.b $17,$70
00033280 <AmiBlitz3.ab2@25657>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00033284 <AmiBlitz3.ab2@25658>   Dc.l do_LSR                                   ;dolsrb
00033288 <AmiBlitz3.ab2@25659>   Dc.l do_LSR                                   ;dolsrw
0003328C <AmiBlitz3.ab2@25660>   Dc.l do_LSR                                   ;dolsrl
00033290 <AmiBlitz3.ab2@25661>   Dc.l do_LSR                                   ;dolsrl
0003329C <AmiBlitz3.ab2@25662>   Ds.l 3
0003329E <AmiBlitz3.ab2@25663>   Dc.b $17,$70
000332A0 <AmiBlitz3.ab2@25665>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
000332A4 <AmiBlitz3.ab2@25666>   Dc.l do_ASR                                   ;doasrb
000332A8 <AmiBlitz3.ab2@25667>   Dc.l do_ASR                                   ;doasrw
000332AC <AmiBlitz3.ab2@25668>   Dc.l do_ASR                                   ;doasrl
000332B0 <AmiBlitz3.ab2@25669>   Dc.l do_ASR                                   ;doasrl
000332BC <AmiBlitz3.ab2@25670>   Ds.l 3
000332BE <AmiBlitz3.ab2@25671>   Dc.b $17,$70
000332C0 <AmiBlitz3.ab2@25673>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
000332C4 <AmiBlitz3.ab2@25674>   Dc.l do_mod_byte                              ;domodb
000332C8 <AmiBlitz3.ab2@25675>   Dc.l do_mod_word                              ;domodw
000332CC <AmiBlitz3.ab2@25676>   Dc.l do_mod_long                              ;domodl
000332D0 <AmiBlitz3.ab2@25677>   Dc.l do_mod_quick                             ;domodq
000332D4 <AmiBlitz3.ab2@25678>   Dc.l do_mod_float                             ;domodf
000332DC <AmiBlitz3.ab2@25679>   Ds.l 2
000332DE <AmiBlitz3.ab2@25680>   Dc.b $13,$88
000332E0 <AmiBlitz3.ab2@25683>   Dc.b $00,$5E                                  ;^
000332E4 <AmiBlitz3.ab2@25684>   Dc.l do_pow                                   ;dopow
000332E8 <AmiBlitz3.ab2@25685>   Dc.l do_pow                                   ;dopow
000332EC <AmiBlitz3.ab2@25686>   Dc.l do_pow                                   ;dopow
000332F0 <AmiBlitz3.ab2@25687>   Dc.l do_pow                                   ;dopow
000332F4 <AmiBlitz3.ab2@25688>   Dc.l do_pow                                   ;dopow
000332FC <AmiBlitz3.ab2@25689>   Ds.l 2
000332FE <AmiBlitz3.ab2@25690>   Dc.b $1B,$58                                  ;7000
00033300 <AmiBlitz3.ab2@25693>   Dc.b $00,$3D                                  ;=
00033304 <AmiBlitz3.ab2@25694>   Dc.l do_equal_byte                            ;doeqb
00033308 <AmiBlitz3.ab2@25695>   Dc.l do_equal_word                            ;doeqw
0003330C <AmiBlitz3.ab2@25696>   Dc.l do_equal_long                            ;doeql
00033310 <AmiBlitz3.ab2@25697>   Dc.l do_equal_long                            ;doeql
00033314 <AmiBlitz3.ab2@25698>   Dc.l do_equal_float                           ;doeqf
00033318 <AmiBlitz3.ab2@25699>   Dc.l do_equal_long                            ;doeql
0003331C <AmiBlitz3.ab2@25700>   Dc.l do_equal_string                          ;doeqs
0003331E <AmiBlitz3.ab2@25701>   Dc.b $07,$D0                                  ;2000
00033320 <AmiBlitz3.ab2@25704>   Dc.b $3C,$3E                                  ;<>
00033324 <AmiBlitz3.ab2@25705>   Dc.l do_not_equal_byte                        ;doneb
00033328 <AmiBlitz3.ab2@25706>   Dc.l do_not_equal_word                        ;donew
0003332C <AmiBlitz3.ab2@25707>   Dc.l do_not_equal_long                        ;donel
00033330 <AmiBlitz3.ab2@25708>   Dc.l do_not_equal_long                        ;donel
00033334 <AmiBlitz3.ab2@25709>   Dc.l do_not_equal_float                       ;donef
00033338 <AmiBlitz3.ab2@25710>   Dc.l do_not_equal_long                        ;donel
0003333C <AmiBlitz3.ab2@25711>   Dc.l do_not_equal_string                      ;dones
0003333E <AmiBlitz3.ab2@25712>   Dc.b $07,$D0                                  ;2000
00033340 <AmiBlitz3.ab2@25715>   Dc.b $00,$3C                                  ;<
00033344 <AmiBlitz3.ab2@25716>   Dc.l do_littler_byte                          ;doltb
00033348 <AmiBlitz3.ab2@25717>   Dc.l do_littler_word                          ;doltw
0003334C <AmiBlitz3.ab2@25718>   Dc.l do_littler_long                          ;doltl
00033350 <AmiBlitz3.ab2@25719>   Dc.l do_littler_long                          ;doltl
00033354 <AmiBlitz3.ab2@25720>   Dc.l do_littler_float                         ;doltf
00033358 <AmiBlitz3.ab2@25721>   Dc.l do_littler_long                          ;doltl
0003335C <AmiBlitz3.ab2@25722>   Dc.l do_littler_string                        ;dolts
0003335E <AmiBlitz3.ab2@25723>   Dc.b $07,$D0                                  ;2000
00033360 <AmiBlitz3.ab2@25726>   Dc.b $3C,$3D                                  ;<=
00033364 <AmiBlitz3.ab2@25727>   Dc.l do_littler_equal_byte                    ;doleb
00033368 <AmiBlitz3.ab2@25728>   Dc.l do_littler_equal_word                    ;doleb
0003336C <AmiBlitz3.ab2@25729>   Dc.l do_littler_equal_long                    ;dolel
00033370 <AmiBlitz3.ab2@25730>   Dc.l do_littler_equal_long                    ;dolel
00033374 <AmiBlitz3.ab2@25731>   Dc.l do_littler_equal_float                   ;dolef
00033378 <AmiBlitz3.ab2@25732>   Dc.l do_littler_equal_long                    ;dolel
0003337C <AmiBlitz3.ab2@25733>   Dc.l do_littler_equal_string                  ;doles
0003337E <AmiBlitz3.ab2@25734>   Dc.b $07,$D0                                  ;2000
00033380 <AmiBlitz3.ab2@25737>   Dc.b $00,$3E                                  ;>
00033384 <AmiBlitz3.ab2@25738>   Dc.l do_greater_byte                          ;dogtb
00033388 <AmiBlitz3.ab2@25739>   Dc.l do_greater_word                          ;dogtw
0003338C <AmiBlitz3.ab2@25740>   Dc.l do_greater_long                          ;dogtl
00033390 <AmiBlitz3.ab2@25741>   Dc.l do_greater_long                          ;dogtl
00033394 <AmiBlitz3.ab2@25742>   Dc.l do_greater_float                         ;dogtf
00033398 <AmiBlitz3.ab2@25743>   Dc.l do_greater_long                          ;dogtl
0003339C <AmiBlitz3.ab2@25744>   Dc.l do_greater_string                        ;dogts
0003339E <AmiBlitz3.ab2@25745>   Dc.b $07,$D0                                  ;2000
000333A0 <AmiBlitz3.ab2@25748>   Dc.b $3E,$3D                                  ;>=
000333A4 <AmiBlitz3.ab2@25749>   Dc.l do_greater_equal_byte                    ;dogeb
000333A8 <AmiBlitz3.ab2@25750>   Dc.l do_greater_equal_word                    ;dogew
000333AC <AmiBlitz3.ab2@25751>   Dc.l do_greater_equal_long                    ;dogel
000333B0 <AmiBlitz3.ab2@25752>   Dc.l do_greater_equal_long                    ;dogel
000333B4 <AmiBlitz3.ab2@25753>   Dc.l do_greater_equal_float                   ;dogef
000333B8 <AmiBlitz3.ab2@25754>   Dc.l do_greater_equal_long                    ;dogel
000333BC <AmiBlitz3.ab2@25755>   Dc.l do_greater_equal_string                  ;doges
000333BE <AmiBlitz3.ab2@25756>   Dc.b $07,$D0                                  ;2000
000333C0 <AmiBlitz3.ab2@25758>   Dc.b $80,$CD                                  ;$8000+26+tnum
000333C4 <AmiBlitz3.ab2@25759>   Dc.l _BitTst
000333C8 <AmiBlitz3.ab2@25760>   Dc.l _BitTst
000333CC <AmiBlitz3.ab2@25761>   Dc.l _BitTst
000333D0 <AmiBlitz3.ab2@25762>   Dc.l _BitTst
000333DC <AmiBlitz3.ab2@25763>   Ds.l 3
000333DE <AmiBlitz3.ab2@25764>   Dc.b $1F,$40                                  ;8000
000333E0 <AmiBlitz3.ab2@25766>   Dc.b $80,$CE                                  ;$8000+27+tnum
000333E4 <AmiBlitz3.ab2@25767>   Dc.l _BitSet
000333E8 <AmiBlitz3.ab2@25768>   Dc.l _BitSet
000333EC <AmiBlitz3.ab2@25769>   Dc.l _BitSet
000333F0 <AmiBlitz3.ab2@25770>   Dc.l _BitSet
000333FC <AmiBlitz3.ab2@25771>   Ds.l 3
000333FE <AmiBlitz3.ab2@25772>   Dc.b $1F,$40                                  ;8000
00033400 <AmiBlitz3.ab2@25774>   Dc.b $80,$CF                                  ;$8000+28+tnum
00033404 <AmiBlitz3.ab2@25775>   Dc.l _BitClr
00033408 <AmiBlitz3.ab2@25776>   Dc.l _BitClr
0003340C <AmiBlitz3.ab2@25777>   Dc.l _BitClr
00033410 <AmiBlitz3.ab2@25778>   Dc.l _BitClr
0003341C <AmiBlitz3.ab2@25779>   Ds.l 3
0003341E <AmiBlitz3.ab2@25780>   Dc.b $1F,$40                                  ;8000
00033420 <AmiBlitz3.ab2@25782>   Dc.b $80,$D0                                  ;$8000+29+tnum
00033424 <AmiBlitz3.ab2@25783>   Dc.l _BitChg
00033428 <AmiBlitz3.ab2@25784>   Dc.l _BitChg
0003342C <AmiBlitz3.ab2@25785>   Dc.l _BitChg
00033430 <AmiBlitz3.ab2@25786>   Dc.l _BitChg
0003343C <AmiBlitz3.ab2@25787>   Ds.l 3
0003343E <AmiBlitz3.ab2@25788>   Dc.b $1F,$40                                  ;8000
00033440 <AmiBlitz3.ab2@25790>   Dc.b $00,$00
00033444 <AmiBlitz3.ab2@25795> modetable:   Dc.l typemode
00033448 <AmiBlitz3.ab2@25798> newtypebase: Dc.l newtype_byte
00033450 <AmiBlitz3.ab2@25801>   Dc.l newtype_word,$01                                    
00033452 <AmiBlitz3.ab2@25802>   Dc.w $0001
00033456 <AmiBlitz3.ab2@25803>   Dc.b 13,"b",0,0
0003345E <AmiBlitz3.ab2@25806>   Dc.l newtype_long,$02
00033460 <AmiBlitz3.ab2@25807>   Dc.w $0002
00033464 <AmiBlitz3.ab2@25808>   Dc.b 13,"w",0,0
0003346C <AmiBlitz3.ab2@25811>   Dc.l newtype_quick,$03                                   
0003346E <AmiBlitz3.ab2@25812>   Dc.w $0004
00033472 <AmiBlitz3.ab2@25813>   Dc.b 13,"l",0,0
0003347A <AmiBlitz3.ab2@25816>   Dc.l newtype_float,$04                                   
0003347C <AmiBlitz3.ab2@25817>   Dc.w $0004
00033480 <AmiBlitz3.ab2@25818>   Dc.b 13,"q",0,0
00033488 <AmiBlitz3.ab2@25822>   Dc.l newtype_double,$05                                  ;make problems on old residents
0003348A <AmiBlitz3.ab2@25823>   Dc.w $0004
0003348E <AmiBlitz3.ab2@25824>   Dc.b 13,"f",0,0
00033496 <AmiBlitz3.ab2@25827>   Dc.l newtype_double,$06
00033498 <AmiBlitz3.ab2@25828>   Dc.w $0004
0003349C <AmiBlitz3.ab2@25829>   Dc.b 13,"a",0,0
000334A4 <AmiBlitz3.ab2@25832>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
000334A6 <AmiBlitz3.ab2@25833>   Dc.w $0008
000334AA <AmiBlitz3.ab2@25834>   Dc.b 13,"d",0,0
000334B2 <AmiBlitz3.ab2@25838>   Dc.l $0000000,$07                                        ;stringtype
000334B4 <AmiBlitz3.ab2@25839>   Dc.w $0004
000334B8 <AmiBlitz3.ab2@25840>   Dc.b 13,"s",0,0
000334C0 <AmiBlitz3.ab2@25843>   Dc.l $00,$00
000334C2 <AmiBlitz3.ab2@25844>   Dc.w $0000
000334C6 <AmiBlitz3.ab2@25845>   Dc.b $01,$00,$00,$00
00033526 <AmiBlitz3.ab2@25848> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00033528 <AmiBlitz3.ab2@25852> dirmode:              Ds.w 1                               ;shows if directmode is on
0003352C <AmiBlitz3.ab2@25854>                       Ds.l 1                               ;int org source ;intuition!
0003352E <AmiBlitz3.ab2@25855> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00033532 <AmiBlitz3.ab2@25856> maxsat:               Ds.l 1                               ;data1 info pos
00033534 <AmiBlitz3.ab2@25857> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00033536 <AmiBlitz3.ab2@25859> maxsused:             Ds.w 1                               ;maximums used in prog
00033538 <AmiBlitz3.ab2@25863> dark:                 Ds.w 1                               ;dark compile?
0003353A <AmiBlitz3.ab2@25864> qlab:                 Ds.w 1                               ;quick lab allocate
0003353E <AmiBlitz3.ab2@25865> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00033540 <AmiBlitz3.ab2@25870> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00033542 <AmiBlitz3.ab2@25871> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00033546 <AmiBlitz3.ab2@25872> noinits:              Ds.l 1                               ;flag for if we have any init routines!
0003354A <AmiBlitz3.ab2@25874> letstart:             Ds.l 1
0003354C <AmiBlitz3.ab2@25875> dontwrite:            Ds.w 1                               ;nomemleft org source
000335CC <AmiBlitz3.ab2@25876> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
000335D0 <AmiBlitz3.ab2@25878> locdatast:            Ds.l 1
000335D4 <AmiBlitz3.ab2@25879> firstpend:            Ds.l 1
000335D8 <AmiBlitz3.ab2@25883> data2at:              Ds.l 1
000335DC <AmiBlitz3.ab2@25884> data2:                Ds.l 1
000335E0 <AmiBlitz3.ab2@25885> data1start:           Ds.l 1                               ;data1at org source
000335E4 <AmiBlitz3.ab2@25886> data1:                Ds.l 1                               ;pc for initialized data!
000335E8 <AmiBlitz3.ab2@25887> destbufferstart:      Ds.l 1                               ;pcat org source
000335EC <AmiBlitz3.ab2@25891> destbufferend:        Ds.l 1                               ;libat org source
000335F0 <AmiBlitz3.ab2@25892> libend:               Ds.l 1                               ;lib org source
000335F4 <AmiBlitz3.ab2@25893> allat:                Ds.l 1                               ;highest allocmemd location for code
000335FE <AmiBlitz3.ab2@25894> dummyasm:             Dc.w 0,0,0,0,0
00033602 <AmiBlitz3.ab2@25895>                       Dc.l 0
00033604 <AmiBlitz3.ab2@25896>                       Dc.w 0
00033608 <AmiBlitz3.ab2@25900> buff1:                Ds.l 1                               ;buffer for text get
0003360C <AmiBlitz3.ab2@25901> buff2:                Ds.l 1                               ;ditto for dest
0003360E <AmiBlitz3.ab2@25902> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00033610 <AmiBlitz3.ab2@25903> asmtype:              Ds.w 1                               ;0=contains no prog reference
00033612 <AmiBlitz3.ab2@25904> extraword:            Ds.w 1                               ;the extension word for assembler
00033614 <AmiBlitz3.ab2@25905> extraword2:           Ds.w 1                               ;ditto
00033616 <AmiBlitz3.ab2@25906> asmsize:              Ds.w 1
0003361A <AmiBlitz3.ab2@25907> asmbuff:              Ds.l 1
0003361C <AmiBlitz3.ab2@25908> asmlen:               Ds.w 1                               ;first (src) text len
0003361E <AmiBlitz3.ab2@25909> asmlen2:              Ds.w 1                               ;second (dest)
00033622 <AmiBlitz3.ab2@25910> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00033624 <AmiBlitz3.ab2@25913> macnum:               Ds.w 1
00033628 <AmiBlitz3.ab2@25915>                       Dc.l 0                               ;address of next 0 in include fil
0003362C <AmiBlitz3.ab2@25916> titleat:              Ds.l 1                               ;5 longs for compile streaks
00033636 <AmiBlitz3.ab2@25917> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00033638 <AmiBlitz3.ab2@25918> connest:              Ds.w 1                               ;conditional nest level
0003363C <AmiBlitz3.ab2@25919> firstconst:           Ds.l 1                               ;first constant (#a)
0003363E <AmiBlitz3.ab2@25920> numarg:               Ds.w 1                               ;number of macro arguements
00033642 <AmiBlitz3.ab2@25921> myoline:              Ds.l 1                               ;macro done yet?
00033646 <AmiBlitz3.ab2@25922> myline:               Ds.l 1                               ;pointer to some memory to create
0003364A <AmiBlitz3.ab2@25925>                       Ds.l 1
0003368A <AmiBlitz3.ab2@25926> concomstack:          Ds.l 16                              ;32 deep conditional compilation
0003368E <AmiBlitz3.ab2@25927> concomsp:             Dc.l concomstack                     ;stack pointer
00033690 <AmiBlitz3.ab2@25928> oldqflag:             Ds.w 1
00033694 <AmiBlitz3.ab2@25931>                       Ds.l 1
00033696 <AmiBlitz3.ab2@25933>                       Ds.w 1
0003369A <AmiBlitz3.ab2@25934> firstfor:             Ds.l 1                               ;first for
0003369C <AmiBlitz3.ab2@25935> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
0003369E <AmiBlitz3.ab2@25936> sbgot:                Ds.w 1                               ;flag for string got 2
000336A0 <AmiBlitz3.ab2@25937> convsize:             Ds.w 1                               ;usertype org source
000336A2 <AmiBlitz3.ab2@25938> userp:                Ds.w 1
000336A6 <AmiBlitz3.ab2@25943> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
000336A8 <AmiBlitz3.ab2@25944> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
000336AA <AmiBlitz3.ab2@25945> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000336AE <AmiBlitz3.ab2@25947> locloc:               Ds.l 1
000336B0 <AmiBlitz3.ab2@25948> locchar:              Ds.w 1
00033730 <AmiBlitz3.ab2@25949> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00033732 <AmiBlitz3.ab2@25950> commode:              Ds.w 1                               ;in comma mode...
00033736 <AmiBlitz3.ab2@25951> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
0003373A <AmiBlitz3.ab2@25952> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
0003373E <AmiBlitz3.ab2@25953> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00033740 <AmiBlitz3.ab2@25955>                       Ds.w 1                               ;opt reset offset
00033840 <AmiBlitz3.ab2@25957>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00033940 <AmiBlitz3.ab2@25959>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00033942 <AmiBlitz3.ab2@25960> varcodelen:           Ds.w 1                               ;and length
00033944 <AmiBlitz3.ab2@25962>                       Ds.w 1
0003394A <AmiBlitz3.ab2@25963> oldvcodelen:          Ds.w 3                               ;old varcodelen
0003394C <AmiBlitz3.ab2@25966> Even4
00033950 <AmiBlitz3.ab2@25967> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00033952 <AmiBlitz3.ab2@25968> memlibstat:           Ds.w 1                               ;status of memory library during
00033954 <AmiBlitz3.ab2@25971>                       Dc.w 0
00033956 <AmiBlitz3.ab2@25973>                       Dc.w 0
00033958 <AmiBlitz3.ab2@25975> varmode:              Ds.w 1                               ;0 a5 pointer to global
0003395C <AmiBlitz3.ab2@25977> currentfunction:      Ds.l 1                               ;thisproc org source
00033960 <AmiBlitz3.ab2@25978> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00033962 <AmiBlitz3.ab2@25979> 
00033964 <AmiBlitz3.ab2@25981> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00033968 <AmiBlitz3.ab2@25982> passstack:            Ds.l 1
0003396C <AmiBlitz3.ab2@25983> zero:                 Ds.l 1                               ;ZERO!
0003396E <AmiBlitz3.ab2@25984> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00033972 <AmiBlitz3.ab2@25986> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00033976 <AmiBlitz3.ab2@25987> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00033978 <AmiBlitz3.ab2@25988> lasta6:               Dc.w $FFFF                           ;-1 org source
0003397A <AmiBlitz3.ab2@25989> instringon:           Ds.w 1                               ;quoteflag org source
0003397E <AmiBlitz3.ab2@25990> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00033982 <AmiBlitz3.ab2@25991> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00033986 <AmiBlitz3.ab2@25992> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
0003398A <AmiBlitz3.ab2@25993> endop:                Ds.l 1                               ;end of program pc - before finishups!
0003398E <AmiBlitz3.ab2@25994> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00033992 <AmiBlitz3.ab2@25995> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00033994 <AmiBlitz3.ab2@25996> numstatic:            Ds.w 1                               ;number of static structs
00033998 <AmiBlitz3.ab2@25997> staticdata:           Ds.l 1                               ;data1 val for statics
0003399C <AmiBlitz3.ab2@25998> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
0003399E <AmiBlitz3.ab2@25999> sbasegot:             Ds.w 1                               ;string base got?
000339A2 <AmiBlitz3.ab2@26000> litdata1:             Ds.l 1
000339A6 <AmiBlitz3.ab2@26004> objlen:               Ds.l 1
000339AA <AmiBlitz3.ab2@26005> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
000339AE <AmiBlitz3.ab2@26006> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000339B0 <AmiBlitz3.ab2@26008> flagmask:             Ds.w 1                               ;mask for flag of variable when
000339B2 <AmiBlitz3.ab2@26010> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
000339B4 <AmiBlitz3.ab2@26011> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
000339B8 <AmiBlitz3.ab2@26012> temp1:                Ds.l 1
000339BC <AmiBlitz3.ab2@26013> temp2:                Ds.l 1
000339C0 <AmiBlitz3.ab2@26015> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
000339C4 <AmiBlitz3.ab2@26016> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00033A38 <AmiBlitz3.ab2@26017> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00033A3C <AmiBlitz3.ab2@26018> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00033ABC <AmiBlitz3.ab2@26020> namebuff2:            Ds.b 128
00033AC4 <AmiBlitz3.ab2@26021>                       Ds.b 8                               ;for fileinfoblock
00033B04 <AmiBlitz3.ab2@26024> optstuff:             Ds.b 64                              ;temp opt make buffer
00033B42 <AmiBlitz3.ab2@26032>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00033B48 <AmiBlitz3.ab2@26033>   MOVE.l #1000,D0
00033B4A <AmiBlitz3.ab2@26034>   JSR (A1)
00033B4C <AmiBlitz3.ab2@26035> RTS
00033B4E <AmiBlitz3.ab2@26041>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00033B52 <AmiBlitz3.ab2@26042>   Dc.l xtra_versionnumber                                  ; vers org source
00033B56 <AmiBlitz3.ab2@26043>   Dc.l create_iconfile                                     ; create icon for executable
00033B5A <AmiBlitz3.ab2@26044>   Ds.l 1
00033B5C <AmiBlitz3.ab2@26046>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00033B60 <AmiBlitz3.ab2@26049>   Dc.l set_use_debugger
00033B64 <AmiBlitz3.ab2@26050>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00033B68 <AmiBlitz3.ab2@26051>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00033B6C <AmiBlitz3.ab2@26052>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00033B70 <AmiBlitz3.ab2@26053>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00033B74 <AmiBlitz3.ab2@26054>   Dc.l set_make_smallestcode
00033B78 <AmiBlitz3.ab2@26055>   Dc.l set_link_debuginfo
00033B7C <AmiBlitz3.ab2@26056>   Dc.l set_autorun
00033B80 <AmiBlitz3.ab2@26057>   Dc.l set_interruptcheck
00033B84 <AmiBlitz3.ab2@26058>   Dc.l set_assemblercheck
00033B88 <AmiBlitz3.ab2@26060>   Dc.l set_overflowcheck
00033B8C <AmiBlitz3.ab2@26061>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00033B90 <AmiBlitz3.ab2@26062>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00033B94 <AmiBlitz3.ab2@26063>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00033B98 <AmiBlitz3.ab2@26066>   Ds.l 1
00033B9A <AmiBlitz3.ab2@26068>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00033B9E <AmiBlitz3.ab2@26075>   Dc.l objectbuffer
00033BA2 <AmiBlitz3.ab2@26076>   Dc.l libsbuffer
00033BA6 <AmiBlitz3.ab2@26077>   Dc.l systembuffer
00033BAA <AmiBlitz3.ab2@26078>   Dc.l databuffer
00033BAE <AmiBlitz3.ab2@26079>   Dc.l macrobuffer_size
00033BB2 <AmiBlitz3.ab2@26080>   Dc.l stringbuffer
00033BB6 <AmiBlitz3.ab2@26083>   Ds.l 1
00033BB8 <AmiBlitz3.ab2@26087>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00033BC0 <AmiBlitz3.ab2@26088>   Dc.l residents_table,0
00033BC2 <AmiBlitz3.ab2@26092>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00033BCA <AmiBlitz3.ab2@26093>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00033BCC <AmiBlitz3.ab2@26094>   Ds.w 1
00033CC8 <AmiBlitz3.ab2@26098>   Ds.l 63
00033DC4 <AmiBlitz3.ab2@26099>   Ds.l 63
00033EC0 <AmiBlitz3.ab2@26100>   Ds.l 63
00033FA2 <AmiBlitz3.ab2@26101>   Ds.w 113
00033FA4 <AmiBlitz3.ab2@26104> comsettings_message:  Ds.w 1                               ;allchg org source
00033FA6 <AmiBlitz3.ab2@26105> xtra_versionnumber:   Ds.w 1                               ;vers org source
00033FAC <AmiBlitz3.ab2@26109>   CLR.b exefilename
00033FAE <AmiBlitz3.ab2@26110>   TST.l d0
00033FB2 <AmiBlitz3.ab2@26111>   BNE read_xtrafile__l10
00033FB4 <AmiBlitz3.ab2@26112> RTS
00033FBA <AmiBlitz3.ab2@26115>   JSR free_residents                                       ;jsr freeres2 org source
00033FC0 <AmiBlitz3.ab2@26116> 
00033FC6 <AmiBlitz3.ab2@26117>   LEA ptr_xtradata,A2
00033FC8 <AmiBlitz3.ab2@26118>   MOVEQ.l #$00,D4
00033FCA <AmiBlitz3.ab2@26121>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00033FCE <AmiBlitz3.ab2@26122>     BEQ.b read_xtrafile__done
00033FD0 <AmiBlitz3.ab2@26125>     MOVE.l (A2)+,D2
00033FD4 <AmiBlitz3.ab2@26126>   BEQ.b read_xtrafile__loop
00033FD6 <AmiBlitz3.ab2@26128>   MOVE.l D4,D3
00033FD8 <AmiBlitz3.ab2@26129>   MOVE.l D7,D1
00033FDC <AmiBlitz3.ab2@26130>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033FDE <AmiBlitz3.ab2@26131>   TST.l D0
00033FE2 <AmiBlitz3.ab2@26132>   BNE.b read_xtrafile__loop2
00033FE6 <AmiBlitz3.ab2@26133> BRA.w read_xtrafile__done2
00033FEC <AmiBlitz3.ab2@26136>   TST.b xtra_versionnumber
00033FF0 <AmiBlitz3.ab2@26137>    BNE.b read_xtrafile__nover0
00033FF8 <AmiBlitz3.ab2@26138>   MOVE.w #$0080,set_autorun                                ;auto run on
00034002 <AmiBlitz3.ab2@26139>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00034008 <AmiBlitz3.ab2@26140>   CLR.w set_assemblercheck                                 ;assembler checking off
00034012 <AmiBlitz3.ab2@26141>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00034016 <AmiBlitz3.ab2@26142> BRA.b read_xtrafile__ver0
00034018 <AmiBlitz3.ab2@26145>   MOVE.l D7,D1                                             ;load cli arg!
0003401E <AmiBlitz3.ab2@26146>   MOVE.l #str_cliarguments,D2
00034024 <AmiBlitz3.ab2@26147>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00034028 <AmiBlitz3.ab2@26148>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003402E <AmiBlitz3.ab2@26149>   MOVE.l #str_cliarguments,A0
00034034 <AmiBlitz3.ab2@26150>   ADDA.l #115,A0
0003403A <AmiBlitz3.ab2@26151>   MOVE.l #0,(a0) ; terminate it!
0003403C <AmiBlitz3.ab2@26153>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00034042 <AmiBlitz3.ab2@26154>   MOVE.l #stacksize,D2
00034048 <AmiBlitz3.ab2@26155>   MOVE.l #4,D3
0003404C <AmiBlitz3.ab2@26156>   JSR _Read(A6)
00034056 <AmiBlitz3.ab2@26157>   CMP.l ##MIN_STACKSIZE,stacksize
0003405A <AmiBlitz3.ab2@26158>   BGE 'stackok
00034064 <AmiBlitz3.ab2@26159>   MOVE.l ##MIN_STACKSIZE,stacksize
00034066 <AmiBlitz3.ab2@26162>   MOVE.l D7,D1
0003406C <AmiBlitz3.ab2@26163>   MOVE.l #versioninformation,D2
00034072 <AmiBlitz3.ab2@26164>   MOVE.l #4,D3
00034076 <AmiBlitz3.ab2@26165>   JSR _Read(A6)
00034078 <AmiBlitz3.ab2@26167>   MOVE.l D7,D1
0003407E <AmiBlitz3.ab2@26168>   MOVE.l #number_of_builds,D2
00034084 <AmiBlitz3.ab2@26169>   MOVE.l #4,D3
00034088 <AmiBlitz3.ab2@26170>   JSR _Read(A6)
0003408E <AmiBlitz3.ab2@26176>   MOVE.l A7,errstack
00034098 <AmiBlitz3.ab2@26177>   MOVE.l #read_xtrafile__done2,errcont
000340A0 <AmiBlitz3.ab2@26178>   MOVE.w #$FFFF,ezerr
000340A6 <AmiBlitz3.ab2@26181>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
000340A8 <AmiBlitz3.ab2@26182>     MOVEQ.l #$04,D3
000340AA <AmiBlitz3.ab2@26183>     MOVE.l D7,D1
000340AE <AmiBlitz3.ab2@26184>     JSR _Read(A6)
000340B0 <AmiBlitz3.ab2@26185>     TST.l D0
000340B4 <AmiBlitz3.ab2@26186>     BEQ.b read_xtrafile__done2
000340BA <AmiBlitz3.ab2@26187>     MOVE.w temp1,D1
000340BC <AmiBlitz3.ab2@26188>     TST.w d1                                               ;new
000340C0 <AmiBlitz3.ab2@26189>     BEQ read_xtrafile__done2                                         ;new
000340C6 <AmiBlitz3.ab2@26190>      JSR AJL_0_6F1A
000340CC <AmiBlitz3.ab2@26192>     CMP.l #0,a1
000340D0 <AmiBlitz3.ab2@26193>     BEQ read_xtrafile__dloop
000340D4 <AmiBlitz3.ab2@26194>     MOVE.l $12(A1),D0
000340DC <AmiBlitz3.ab2@26195>     MOVE.w temp1+2,-$4(A1,D0.L)
000340E0 <AmiBlitz3.ab2@26196> BRA.b read_xtrafile__dloop
000340E4 <AmiBlitz3.ab2@26202>   LEA residents_table(PC),A0
000340E6 <AmiBlitz3.ab2@26203>   MOVEQ.l #$07,D0
000340EA <AmiBlitz3.ab2@26206>     CLR.l $40(A0)
000340EE <AmiBlitz3.ab2@26207>     LEA ResidentEntryStep(A0),A0   ; $44
000340F2 <AmiBlitz3.ab2@26208>   DBF D0,read_xtrafile__loop3
000340F6 <AmiBlitz3.ab2@26210>   MOVEM.l D7/A6,-(A7)
000340FC <AmiBlitz3.ab2@26211>   JSR init_buffers
00034102 <AmiBlitz3.ab2@26212>   JSR reloadresident
00034106 <AmiBlitz3.ab2@26213>   MOVEM.l (A7)+,D7/A6
00034108 <AmiBlitz3.ab2@26214> RTS
00034110 <AmiBlitz3.ab2@26218>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00034116 <AmiBlitz3.ab2@26227>   LEA ptr_xtradata,A2
00034118 <AmiBlitz3.ab2@26228>   MOVEQ.l #$00,D4
0003411A <AmiBlitz3.ab2@26232>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
0003411E <AmiBlitz3.ab2@26233>   BEQ.b write_xtrafile__done
00034120 <AmiBlitz3.ab2@26236>    MOVE.l (A2)+,D2
00034124 <AmiBlitz3.ab2@26237>    BEQ.b write_xtrafile__loop
00034126 <AmiBlitz3.ab2@26239>    MOVE.l D4,D3
00034128 <AmiBlitz3.ab2@26240>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
0003412C <AmiBlitz3.ab2@26241>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00034130 <AmiBlitz3.ab2@26242> BRA.b write_xtrafile__loop2
00034132 <AmiBlitz3.ab2@26245>   MOVE.l D7,D1
00034138 <AmiBlitz3.ab2@26246>   MOVE.l #str_cliarguments,D2
0003413E <AmiBlitz3.ab2@26247>   MOVE.l #116,D3
00034142 <AmiBlitz3.ab2@26248>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00034144 <AmiBlitz3.ab2@26250>   MOVE.l D7,D1
0003414A <AmiBlitz3.ab2@26251>   MOVE.l #stacksize,D2
00034150 <AmiBlitz3.ab2@26252>   MOVE.l #4,D3
00034154 <AmiBlitz3.ab2@26253>   JSR _Write(A6)
00034156 <AmiBlitz3.ab2@26255>   MOVE.l D7,D1
0003415C <AmiBlitz3.ab2@26256>   MOVE.l #versioninformation,D2
00034162 <AmiBlitz3.ab2@26257>   MOVE.l #4,D3
00034166 <AmiBlitz3.ab2@26258>   JSR _Write(A6)
00034168 <AmiBlitz3.ab2@26260>   MOVE.l D7,D1
0003416E <AmiBlitz3.ab2@26261>   MOVE.l #number_of_builds,D2
00034174 <AmiBlitz3.ab2@26262>   MOVE.l #4,D3
00034178 <AmiBlitz3.ab2@26263>   JSR _Write(A6)
0003417E <AmiBlitz3.ab2@26269>   LEA libpointer,A2
00034180 <AmiBlitz3.ab2@26272>     MOVE.l (A2),D0
00034184 <AmiBlitz3.ab2@26273>     BEQ.w write_xtrafile__done2
00034186 <AmiBlitz3.ab2@26274>     MOVEA.l D0,A2
0003418A <AmiBlitz3.ab2@26275>     MOVE.l $12(A2),D4
0003418E <AmiBlitz3.ab2@26276>     TST.w -$2(A2,D4.L)
00034192 <AmiBlitz3.ab2@26277>     BEQ.w write_xtrafile__loop3
00034196 <AmiBlitz3.ab2@26279>     LEA $4(A2),A0
00034198 <AmiBlitz3.ab2@26280>     MOVE.l A0,D2
0003419A <AmiBlitz3.ab2@26281>     MOVEQ.l #$02,D3
0003419C <AmiBlitz3.ab2@26282>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
000341A0 <AmiBlitz3.ab2@26283>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000341A4 <AmiBlitz3.ab2@26285>     LEA -$4(A2,D4.L),A0
000341A6 <AmiBlitz3.ab2@26286>     MOVE.l A0,D2
000341A8 <AmiBlitz3.ab2@26287>     MOVEQ.l #$02,D3
000341AA <AmiBlitz3.ab2@26288>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
000341AE <AmiBlitz3.ab2@26289>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000341B2 <AmiBlitz3.ab2@26290> BRA.w write_xtrafile__loop3
000341B8 <AmiBlitz3.ab2@26295>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
000341BA <AmiBlitz3.ab2@26296>   MOVE.l A2,D2           ; move the address to d2
000341C0 <AmiBlitz3.ab2@26297>   MOVE.l #4,D3           ; we only need 4 bytes to save
000341C2 <AmiBlitz3.ab2@26298>   MOVE.l D7,D1           ; we set the file handle
000341C6 <AmiBlitz3.ab2@26299>   JSR _Write(A6)         ; and we write it.
000341C8 <AmiBlitz3.ab2@26301> RTS
000341CE <AmiBlitz3.ab2@26306>   LEA optssave,A0                      ; backup address
000341D4 <AmiBlitz3.ab2@26307>   LEA ptr_xtradata,A1                  ; source address
000341D6 <AmiBlitz3.ab2@26310>   MOVE.w (A1)+,D0                                          ;length of data move
000341DA <AmiBlitz3.ab2@26311>   BEQ.b 'backupdone
000341DC <AmiBlitz3.ab2@26312>   SUBQ.w #1,D0
000341DE <AmiBlitz3.ab2@26315>     MOVE.l (A1)+,D1
000341E2 <AmiBlitz3.ab2@26316>     BEQ.b 'backuploop
000341E4 <AmiBlitz3.ab2@26317>     MOVEA.l D1,A2
000341E6 <AmiBlitz3.ab2@26318>     MOVE.w D0,D1
000341E8 <AmiBlitz3.ab2@26321>       MOVE.b (A2)+,(A0)+
000341EC <AmiBlitz3.ab2@26322>   DBF D1,'backuploop3
000341F0 <AmiBlitz3.ab2@26324> BRA.w 'backuploop2
000341F6 <AmiBlitz3.ab2@26328>   LEA bufferlist,A1
000341F8 <AmiBlitz3.ab2@26331>     MOVE.l (A1)+,D2
000341FC <AmiBlitz3.ab2@26332>     BEQ.b 'loop4done
000341FE <AmiBlitz3.ab2@26334>     MOVEA.l D2,A0
00034200 <AmiBlitz3.ab2@26335>     MOVE.l (A0),D2
00034202 <AmiBlitz3.ab2@26336>     ADDQ.w #8,A0
00034208 <AmiBlitz3.ab2@26337>     JSR makelong
0003420C <AmiBlitz3.ab2@26338> BRA.b 'loop4
00034212 <AmiBlitz3.ab2@26341>   CLR.w state_of_residents                                 ;resident change
00034218 <AmiBlitz3.ab2@26342>   CLR.w comsettings_message                                ;alloc change
0003421E <AmiBlitz3.ab2@26343>   CLR.w maxobject_pos
00034220 <AmiBlitz3.ab2@26344> RTS   ; new tomsmart1
00034226 <AmiBlitz3.ab2@26348>   LEA optssave,A0
0003422C <AmiBlitz3.ab2@26349>   LEA ptr_xtradata,A1
0003422E <AmiBlitz3.ab2@26352>   MOVE.w (A1)+,D0
00034232 <AmiBlitz3.ab2@26353>   BEQ.b 'restoredone
00034234 <AmiBlitz3.ab2@26354>   SUBQ.w #1,D0
00034236 <AmiBlitz3.ab2@26357>     MOVE.l (A1)+,D1
0003423A <AmiBlitz3.ab2@26358>     BEQ.b 'restoreloop1
0003423C <AmiBlitz3.ab2@26359>     MOVEA.l D1,A2
0003423E <AmiBlitz3.ab2@26360>     MOVE.w D0,D1
00034240 <AmiBlitz3.ab2@26363>       MOVE.b (A0)+,(A2)+
00034244 <AmiBlitz3.ab2@26364>   DBF D1,'restoreloop3
00034248 <AmiBlitz3.ab2@26366> BRA.b 'restoreloop2
0003424A <AmiBlitz3.ab2@26369> RTS
00034250 <AmiBlitz3.ab2@26373>   JSR free_residents                    ; first free the allready loaded residents
00034256 <AmiBlitz3.ab2@26374>   JSR Clear_Residents_table             ; second clear the complete resident table
00034258 <AmiBlitz3.ab2@26375> RTS
00034260 <AmiBlitz3.ab2@26379>   MOVE.w #$FFFF,state_of_residents
00034266 <AmiBlitz3.ab2@26380>   MOVE.w state_of_residents,D0
0003426C <AmiBlitz3.ab2@26381>   JSR reloadresident
0003426E <AmiBlitz3.ab2@26382> RTS
00034270 <AmiBlitz3.ab2@26387>   MOVE.l d0,a1
00034276 <AmiBlitz3.ab2@26388>   MOVEA.l libpointer,A2
0003427A <AmiBlitz3.ab2@26391>     MOVE.l $12(A2),D0
0003427E <AmiBlitz3.ab2@26392>     TST.w -$2(A2,D0.L)
00034282 <AmiBlitz3.ab2@26393>      BEQ.w JL_0_102AAa
00034284 <AmiBlitz3.ab2@26394>     SUBQ.w #1,D1
00034288 <AmiBlitz3.ab2@26395>      BPL.w JL_0_102AAa
0003428C <AmiBlitz3.ab2@26396>     MOVEA.l -$1A(A2,D0.L),A3
0003428E <AmiBlitz3.ab2@26397>     ADDA.l A2,A3
00034290 <AmiBlitz3.ab2@26400>       MOVE.b (A3)+,(A1)+
00034294 <AmiBlitz3.ab2@26401>     BNE.w JL_0_10294a
00034296 <AmiBlitz3.ab2@26403>     CLR.b -(A1)
0003429A <AmiBlitz3.ab2@26404>     MOVE.w -$4(A2,D0.L),D0
000342A0 <AmiBlitz3.ab2@26405>     AND.l #$ffff,d0
000342A2 <AmiBlitz3.ab2@26406> RTS
000342A4 <AmiBlitz3.ab2@26409>     MOVEA.l (A2),A2
000342A8 <AmiBlitz3.ab2@26410> BRA.w JL_0_1027Ca
000342B8 <AmiBlitz3.ab2@26415> str_maxobjects_name:   Dc.b "              ",0 : Even
000342C8 <AmiBlitz3.ab2@26416> str_maxobjects_name2:  Dc.b "              ",0 : Even
000342CC <AmiBlitz3.ab2@26417> objectbuffer:          Dc.l $00004000
000342D0 <AmiBlitz3.ab2@26418>                        Dc.l $00000000
000342DC <AmiBlitz3.ab2@26419> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
000342E0 <AmiBlitz3.ab2@26421> libsbuffer:            Dc.l $00008000
000342E4 <AmiBlitz3.ab2@26422>                        Dc.l $00000000
000342F0 <AmiBlitz3.ab2@26423> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
000342F4 <AmiBlitz3.ab2@26425> systembuffer:          Dc.l $00001000                      ; systen buffer
000342F8 <AmiBlitz3.ab2@26426>                        Dc.l $00000000
00034304 <AmiBlitz3.ab2@26427> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00034308 <AmiBlitz3.ab2@26429> databuffer:            Dc.l $00001000                      ; data buffer
0003430C <AmiBlitz3.ab2@26430>                        Dc.l $00000000
00034318 <AmiBlitz3.ab2@26431> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003431C <AmiBlitz3.ab2@26433> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
00034320 <AmiBlitz3.ab2@26434>                        Dc.l $00000000
0003432C <AmiBlitz3.ab2@26435> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
00034330 <AmiBlitz3.ab2@26437> stringbuffer:          Dc.l $00002800                      ; string buffer
00034334 <AmiBlitz3.ab2@26438>                        Dc.l $00000000
00034340 <AmiBlitz3.ab2@26439> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00034342 <AmiBlitz3.ab2@26441> maxobjects_value:      Dc.w $0064
00034346 <AmiBlitz3.ab2@26442>                        Dc.l $00000000
00034352 <AmiBlitz3.ab2@26443> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00034354 <AmiBlitz3.ab2@26445> maxobjects_value2:     Dc.w $0014
00034356 <AmiBlitz3.ab2@26446>                        Dc.w $0000
00034362 <AmiBlitz3.ab2@26448> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00034363 <AmiBlitz3.ab2@26452> set_create_iconfile:   Dc.b $00
00034366 <AmiBlitz3.ab2@26453> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00034368 <AmiBlitz3.ab2@26454>                        Dc.b $00,$01
00034369 <AmiBlitz3.ab2@26456> set_use_debugger:      Dc.b $00                            ; Flags.w
0003436C <AmiBlitz3.ab2@26457> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
0003436E <AmiBlitz3.ab2@26458>                        Dc.b $00,$01                        ; GadgetType.w
00034372 <AmiBlitz3.ab2@26459> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00034376 <AmiBlitz3.ab2@26460> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
0003437A <AmiBlitz3.ab2@26461> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
0003437C <AmiBlitz3.ab2@26462> AL_0_11094:            Ds.w 1
0003437D <AmiBlitz3.ab2@26464> set_make_smallestcode: Ds.b 1
00034380 <AmiBlitz3.ab2@26465> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00034382 <AmiBlitz3.ab2@26466>                        Dc.b $00,$01
00034383 <AmiBlitz3.ab2@26467> set_link_debuginfo:    Ds.b 1
00034386 <AmiBlitz3.ab2@26468> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00034388 <AmiBlitz3.ab2@26469>                        Dc.b $00,$01
000345A8 <AmiBlitz3.ab2@26474>   Ds.l 136         ;resident files STEP $44 piece 8
00034628 <AmiBlitz3.ab2@26479> str_calcexpression:        Ds.l 32
0003462C <AmiBlitz3.ab2@26480> destbufferend_backup_calc: Ds.l 1
00034636 <AmiBlitz3.ab2@26485>   MOVE.l destbufferend,destbufferend_backup_calc
0003463C <AmiBlitz3.ab2@26486>   MOVE.l A7,errstack
00034646 <AmiBlitz3.ab2@26487>   MOVE.l #Calc_Error_Exit,errcont
00034670 <AmiBlitz3.ab2@26494>   !basic         ; get the flage for the conversion form the editor
000346B4 <AmiBlitz3.ab2@26495>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
000346F8 <AmiBlitz3.ab2@26496>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00034716 <AmiBlitz3.ab2@26497>   !asm
0003471C <AmiBlitz3.ab2@26499>   LEA str_calcexpression,A0
00034722 <AmiBlitz3.ab2@26507>   JSR setcvars
00034728 <AmiBlitz3.ab2@26508>   JSR setsvars
0003472E <AmiBlitz3.ab2@26509>   CLR.w connest
00034734 <AmiBlitz3.ab2@26510>   LEA str_calcexpression,A5
0003473A <AmiBlitz3.ab2@26511>   JSR AJL_0_BF6E
00034740 <AmiBlitz3.ab2@26512>   LEA str_calcexpression,A0
00034742 <AmiBlitz3.ab2@26513>   TST.l D3
00034746 <AmiBlitz3.ab2@26514>    BPL.w JL_0_11AE8
0003474A <AmiBlitz3.ab2@26515>   MOVE.b #$2D,(A0)+
0003474C <AmiBlitz3.ab2@26516>   NEG.l D3
00034754 <AmiBlitz3.ab2@26519>   CMPI.w #$80,CalculatorButtonDecFlag
00034758 <AmiBlitz3.ab2@26520>    BEQ.w JL_0_11B74
0003475A <AmiBlitz3.ab2@26521>   MOVEQ.l #$00,D1
00034762 <AmiBlitz3.ab2@26522>   CMPI.w #$80,CalculatorButtonBinFlag
00034766 <AmiBlitz3.ab2@26523>    BNE.w JL_0_11B36
00034768 <AmiBlitz3.ab2@26524>   MOVEQ.l #$1F,D0
0003476C <AmiBlitz3.ab2@26525>   MOVE.b #$25,(A0)+
0003476E <AmiBlitz3.ab2@26528>       LSL.l #1,D3
00034772 <AmiBlitz3.ab2@26529>        BCC.w JL_0_11B18
00034776 <AmiBlitz3.ab2@26530>       MOVE.b #"1",(A0)+
00034778 <AmiBlitz3.ab2@26531>       MOVEQ.l #-$01,D1
0003477C <AmiBlitz3.ab2@26532>   BRA.w JL_0_11B22
0003477E <AmiBlitz3.ab2@26535>       TST.w D1
00034782 <AmiBlitz3.ab2@26536>       BEQ.w JL_0_11B22
00034786 <AmiBlitz3.ab2@26537>       MOVE.b #"0",(A0)+
0003478A <AmiBlitz3.ab2@26540>  DBF D0,JL_0_11B08
0003478C <AmiBlitz3.ab2@26543>   TST.w D1
00034790 <AmiBlitz3.ab2@26544>   BNE.w JL_0_11B30
00034794 <AmiBlitz3.ab2@26545>   MOVE.b #"0",(A0)+
00034796 <AmiBlitz3.ab2@26548>   CLR.b (A0)
0003479A <AmiBlitz3.ab2@26549> BRA.w JL_0_11B7C
0003479C <AmiBlitz3.ab2@26552>   MOVEQ.l #$07,D0
000347A0 <AmiBlitz3.ab2@26553>   MOVE.b #$24,(A0)+
000347A2 <AmiBlitz3.ab2@26556>     MOVE.l D3,D2
000347A4 <AmiBlitz3.ab2@26557>     SWAP D2
000347A6 <AmiBlitz3.ab2@26558>     LSR.w #8,D2
000347A8 <AmiBlitz3.ab2@26559>     LSR.w #4,D2
000347AC <AmiBlitz3.ab2@26560>     ADDI.w #$30,D2
000347B0 <AmiBlitz3.ab2@26561>     CMP.w #$3A,D2
000347B4 <AmiBlitz3.ab2@26562>      BCS.w JL_0_11B52
000347B6 <AmiBlitz3.ab2@26563>     ADDQ.w #7,D2
000347BA <AmiBlitz3.ab2@26566>     CMP.w #$30,D2
000347BE <AmiBlitz3.ab2@26567>     BEQ.w JL_0_11B62
000347C0 <AmiBlitz3.ab2@26568>     MOVE.b D2,(A0)+
000347C2 <AmiBlitz3.ab2@26569>     MOVEQ.l #-$01,D1
000347C6 <AmiBlitz3.ab2@26570>   BRA.w JL_0_11B6A
000347C8 <AmiBlitz3.ab2@26573>     TST.w D1
000347CC <AmiBlitz3.ab2@26574>      BEQ.w JL_0_11B6A
000347CE <AmiBlitz3.ab2@26575>     MOVE.b D2,(A0)+
000347D0 <AmiBlitz3.ab2@26578>     LSL.l #4,D3
000347D4 <AmiBlitz3.ab2@26579>  DBF D0,JL_0_11B3C
000347D8 <AmiBlitz3.ab2@26581> BRA.w JL_0_11B26
000347DA <AmiBlitz3.ab2@26584>   MOVE.l D3,D2
000347E0 <AmiBlitz3.ab2@26585>   JSR makelong
000347EA <AmiBlitz3.ab2@26592>   MOVE.l destbufferend_backup_calc,destbufferend
000347EC <AmiBlitz3.ab2@26594> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
000348EB <AmiBlitz3.ab2@26598> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000348EC <AmiBlitz3.ab2@26600> Even
0003492A <AmiBlitz3.ab2@26605>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00034930 <AmiBlitz3.ab2@26606>   MOVE.l #1001,D0
00034936 <AmiBlitz3.ab2@26607>   MOVE.l #str_cliarguments,D1
00034938 <AmiBlitz3.ab2@26608>   JSR (A1)
0003493A <AmiBlitz3.ab2@26609> RTS
0003493C <AmiBlitz3.ab2@26614>     MOVE.b (a5)+,d0
00034940 <AmiBlitz3.ab2@26615>     BEQ 'l2
00034944 <AmiBlitz3.ab2@26616>     CMP.b #$80,d0
00034948 <AmiBlitz3.ab2@26617>     BNE 'l1
0003494A <AmiBlitz3.ab2@26618>     MOVE.b (a5)+,d0
0003494E <AmiBlitz3.ab2@26619>     BEQ 'l2
00034952 <AmiBlitz3.ab2@26620>     CMP.b #$02,d0
00034956 <AmiBlitz3.ab2@26621>   BNE 'l1
0003495A <AmiBlitz3.ab2@26624>     CMP.b #$20,(a5)+
0003495E <AmiBlitz3.ab2@26625>   BEQ 'l3
00034960 <AmiBlitz3.ab2@26626>   SUBQ.l #1,a5
00034962 <AmiBlitz3.ab2@26627>   TST.b (a5)
00034966 <AmiBlitz3.ab2@26628>   BEQ 'l2
0003496A <AmiBlitz3.ab2@26629>   CMP.w #$8008,(a5)
0003496E <AmiBlitz3.ab2@26630>   BEQ 'l4
00034972 <AmiBlitz3.ab2@26631>   CMP.w #$8009,(a5)
00034976 <AmiBlitz3.ab2@26632>   BEQ 'l4
0003497A <AmiBlitz3.ab2@26633> BRA 'l1
0003497C <AmiBlitz3.ab2@26636>   ADDQ.l #2,a5
00034982 <AmiBlitz3.ab2@26637>   JSR skiprest
00034984 <AmiBlitz3.ab2@26638> RTS
0003498A <AmiBlitz3.ab2@26641>   JSR nextline
0003498E <AmiBlitz3.ab2@26642>   BNE 'l1
00034990 <AmiBlitz3.ab2@26643> RTS
000349BA <AmiBlitz3.ab2@26647>   !basic
000349C4 <AmiBlitz3.ab2@26648>   DateFormat 1
000349D2 <AmiBlitz3.ab2@26649>   i.l=SystemDate
000349F8 <AmiBlitz3.ab2@26650>   a$=Date$ (i)
00034A76 <AmiBlitz3.ab2@26651>   a$=Replace$(a$,"/",".")
00034A7C <AmiBlitz3.ab2@26652>   GetD0 &a$
00034A7E <AmiBlitz3.ab2@26653>   MOVEQ #8,d2
00034A80 <AmiBlitz3.ab2@26654>   MOVE.l d0,a0
00034A82 <AmiBlitz3.ab2@26657>     MOVE.b (a0)+,d1
00034A88 <AmiBlitz3.ab2@26658>     JSR pokedata1b
00034A8C <AmiBlitz3.ab2@26659>  DBF d2,'l1
00034A8E <AmiBlitz3.ab2@26661>   MOVEQ #0,d0
00034A90 <AmiBlitz3.ab2@26662>   MOVE.b (a0)+,d0
00034AAE <AmiBlitz3.ab2@26663>   !asm
00034AB4 <AmiBlitz3.ab2@26664>   ADD.l #9,d2
00034ABA <AmiBlitz3.ab2@26665>   ADD.l #9,a5
00034ABC <AmiBlitz3.ab2@26666> RTS
00034AE6 <AmiBlitz3.ab2@26670>   !basic
00034AF0 <AmiBlitz3.ab2@26671>   DateFormat 0
00034AFE <AmiBlitz3.ab2@26672>   i.l=SystemDate
00034B24 <AmiBlitz3.ab2@26673>   a$=Date$ (i)
00034BA2 <AmiBlitz3.ab2@26674>   a$=Replace$(a$,"/",".")
00034BA8 <AmiBlitz3.ab2@26675>   GetD0 &a$
00034BAA <AmiBlitz3.ab2@26676>   MOVEQ #8,d2
00034BAC <AmiBlitz3.ab2@26677>   MOVE.l d0,a0
00034BAE <AmiBlitz3.ab2@26680>     MOVE.b (a0)+,d1
00034BB4 <AmiBlitz3.ab2@26681>     JSR pokedata1b
00034BB8 <AmiBlitz3.ab2@26682>  DBF d2,'l1
00034BBA <AmiBlitz3.ab2@26684>   MOVEQ #0,d0
00034BBC <AmiBlitz3.ab2@26685>   MOVE.b (a0)+,d0
00034BDA <AmiBlitz3.ab2@26686>   !asm
00034BE0 <AmiBlitz3.ab2@26687>   ADD.l #9,d2
00034BE6 <AmiBlitz3.ab2@26688>   ADD.l #13,a5
00034BE8 <AmiBlitz3.ab2@26689> RTS
00034C12 <AmiBlitz3.ab2@26693>   !basic
00034C1C <AmiBlitz3.ab2@26694>   DateFormat 1
00034C2A <AmiBlitz3.ab2@26695>   i.l = SystemDate
00034C50 <AmiBlitz3.ab2@26696>   a$ = Date$ (i)
00034CCE <AmiBlitz3.ab2@26697>   a$ = Replace$(a$,"/",".")
00034CD4 <AmiBlitz3.ab2@26698>   GetD0 &a$
00034CD6 <AmiBlitz3.ab2@26699>   MOVEQ #8,d2
00034CD8 <AmiBlitz3.ab2@26700>   MOVE.l d0,a0
00034CDA <AmiBlitz3.ab2@26703>     MOVE.b (a0)+,d1
00034CE0 <AmiBlitz3.ab2@26704>     JSR writebyte
00034CE4 <AmiBlitz3.ab2@26705>  DBF d2,'l1
00034CE6 <AmiBlitz3.ab2@26707>   MOVEQ #0,d0
00034CE8 <AmiBlitz3.ab2@26708>   MOVE.b (a0)+,d0
00034D06 <AmiBlitz3.ab2@26709>   !asm
00034D0C <AmiBlitz3.ab2@26710>   ADD.l #9,a5
00034D0E <AmiBlitz3.ab2@26711> RTS
00034D38 <AmiBlitz3.ab2@26715>   !basic
00034D42 <AmiBlitz3.ab2@26716>   DateFormat 0
00034D50 <AmiBlitz3.ab2@26717>   i.l=SystemDate
00034D76 <AmiBlitz3.ab2@26718>   a$=Date$ (i)
00034DF4 <AmiBlitz3.ab2@26719>   a$=Replace$(a$,"/",".")
00034DFA <AmiBlitz3.ab2@26720>   GetD0 &a$
00034DFC <AmiBlitz3.ab2@26721>   MOVEQ #8,d2
00034DFE <AmiBlitz3.ab2@26722>   MOVE.l d0,a0
00034E00 <AmiBlitz3.ab2@26725>     MOVE.b (a0)+,d1
00034E06 <AmiBlitz3.ab2@26726>     JSR writebyte
00034E0A <AmiBlitz3.ab2@26727>  DBF d2,'l1
00034E0C <AmiBlitz3.ab2@26729>   MOVEQ #0,d0
00034E0E <AmiBlitz3.ab2@26730>   MOVE.b (a0)+,d0
00034E2C <AmiBlitz3.ab2@26731>   !asm
00034E32 <AmiBlitz3.ab2@26732>   ADD.l #13,a5
00034E34 <AmiBlitz3.ab2@26733> RTS
00034E36 <AmiBlitz3.ab2@26737>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00034E38 <AmiBlitz3.ab2@26738>   MOVE.l a5,d0
00034E62 <AmiBlitz3.ab2@26739>   !basic
00034E66 <AmiBlitz3.ab2@26740>   _myD0.l = PutD0
00034E70 <AmiBlitz3.ab2@26741>   If _myD0
00034EB6 <AmiBlitz3.ab2@26742>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034F08 <AmiBlitz3.ab2@26743>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00034F0E <AmiBlitz3.ab2@26744>   Else
00034F3C <AmiBlitz3.ab2@26745>     error{"INTERNAL: Invalid pointer in version_string!"}
00034F4C <AmiBlitz3.ab2@26750>   actual_version.l = Peek.l(?versioninformation)
00034F5C <AmiBlitz3.ab2@26751>   actual_build.l   = Peek.l(?number_of_builds)
00034F80 <AmiBlitz3.ab2@26753>   Format "00"
00034FB6 <AmiBlitz3.ab2@26754>   Select verstring$
00034FDA <AmiBlitz3.ab2@26756>     Case "VER_MAJOR"
00035016 <AmiBlitz3.ab2@26757>      put_versionstr$ = Str$(actual_version LSR 24)
00035040 <AmiBlitz3.ab2@26759>     Case "VER_MINOR"
00035084 <AmiBlitz3.ab2@26760>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000350AE <AmiBlitz3.ab2@26762>     Case "VER_PATCH"
000350F2 <AmiBlitz3.ab2@26763>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003511C <AmiBlitz3.ab2@26765>     Case "VER_BUILD"
00035140 <AmiBlitz3.ab2@26766>      Format ""
00035174 <AmiBlitz3.ab2@26767>      put_versionstr$ = Str$(actual_build)
0003517A <AmiBlitz3.ab2@26769>     Default
000351A2 <AmiBlitz3.ab2@26770>      put_versionstr$ = "{unknown compilerconstant}"
000351B0 <AmiBlitz3.ab2@26773>   End Select
000351D4 <AmiBlitz3.ab2@26774>   Format ""
000351E4 <AmiBlitz3.ab2@26776>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
000351E6 <AmiBlitz3.ab2@26777>   MOVE.l d0,d2
000351E8 <AmiBlitz3.ab2@26778>   MOVE.l d2,-(a7)
000351EC <AmiBlitz3.ab2@26779>   SUB #1,d2
000351F2 <AmiBlitz3.ab2@26781>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000351F4 <AmiBlitz3.ab2@26782>   MOVE.l d0,a0
000351F6 <AmiBlitz3.ab2@26785>     MOVE.b (a0)+,d1
000351FC <AmiBlitz3.ab2@26786>     JSR pokedata1b
00035200 <AmiBlitz3.ab2@26787>  DBF d2,'l1
00035202 <AmiBlitz3.ab2@26789>   MOVEQ #0,d0
00035220 <AmiBlitz3.ab2@26790>   !asm
00035222 <AmiBlitz3.ab2@26791>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00035224 <AmiBlitz3.ab2@26792>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00035226 <AmiBlitz3.ab2@26793>   ADD.l d0,d2
0003522C <AmiBlitz3.ab2@26794>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003522E <AmiBlitz3.ab2@26795>   MOVEQ #0,d0
00035230 <AmiBlitz3.ab2@26796> RTS
00035232 <AmiBlitz3.ab2@26800>   MOVE.l a5,d0
0003525C <AmiBlitz3.ab2@26801>   !basic
00035260 <AmiBlitz3.ab2@26802>   _myD0.l = PutD0
0003526A <AmiBlitz3.ab2@26803>   If _myD0
000352B0 <AmiBlitz3.ab2@26804>     verstring$ = Left$(Peek.s(_myD0),9+3)
00035302 <AmiBlitz3.ab2@26805>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00035308 <AmiBlitz3.ab2@26806>   Else
00035336 <AmiBlitz3.ab2@26807>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00035346 <AmiBlitz3.ab2@26812>   actual_version.l = Peek.l(?versioninformation)
00035356 <AmiBlitz3.ab2@26813>   actual_build.l   = Peek.l(?number_of_builds)
0003537A <AmiBlitz3.ab2@26815>   Format ""
000353B0 <AmiBlitz3.ab2@26816>   Select verstring$
000353D4 <AmiBlitz3.ab2@26818>     Case "VER_MAJOR"
00035410 <AmiBlitz3.ab2@26819>      put_versionstr$ = Str$(actual_version LSR 24)
0003543A <AmiBlitz3.ab2@26821>     Case "VER_MINOR"
0003547E <AmiBlitz3.ab2@26822>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000354A8 <AmiBlitz3.ab2@26824>     Case "VER_PATCH"
000354EC <AmiBlitz3.ab2@26825>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00035516 <AmiBlitz3.ab2@26827>     Case "VER_BUILD"
0003553A <AmiBlitz3.ab2@26828>      Format ""
0003556E <AmiBlitz3.ab2@26829>      put_versionstr$ = Str$(actual_build)
00035574 <AmiBlitz3.ab2@26831>     Default
0003559C <AmiBlitz3.ab2@26832>      put_versionstr$ = "{unknown compilerconstant}"
000355AA <AmiBlitz3.ab2@26834>   End Select
000355CE <AmiBlitz3.ab2@26835>   Format ""
000355E4 <AmiBlitz3.ab2@26837>   GetD0 FLen(put_versionstr$)-1
000355E6 <AmiBlitz3.ab2@26838>   MOVE.l d0,d2
000355EC <AmiBlitz3.ab2@26840>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000355EE <AmiBlitz3.ab2@26841>   MOVE.l d0,a0
000355F0 <AmiBlitz3.ab2@26844>     MOVE.b (a0)+,d1
000355F6 <AmiBlitz3.ab2@26845>     JSR writebyte
000355FA <AmiBlitz3.ab2@26846>  DBF d2,'l1
000355FC <AmiBlitz3.ab2@26848>   MOVEQ #0,d0
000355FE <AmiBlitz3.ab2@26849>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
0003561C <AmiBlitz3.ab2@26850>   !asm
00035622 <AmiBlitz3.ab2@26851>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00035624 <AmiBlitz3.ab2@26852> RTS
00035626 <AmiBlitz3.ab2@26954>  MOVE.l a5,-(a7)
00035652 <AmiBlitz3.ab2@26955>  !fget
00035656 <AmiBlitz3.ab2@26956>  CMP.w #".",d0
0003565A <AmiBlitz3.ab2@26957>  BNE 'skip
0003565E <AmiBlitz3.ab2@26958>  MOVEM.l a2/d2,-(a7)
00035664 <AmiBlitz3.ab2@26959>  LEA newtypebase,a2
0003566A <AmiBlitz3.ab2@26960>  JSR getparameter2
0003566E <AmiBlitz3.ab2@26961>  BEQ.w JUMP_syntaxerr
00035674 <AmiBlitz3.ab2@26962>  JSR findtype
00035678 <AmiBlitz3.ab2@26963>  BNE.w JUMP_notypeerr
0003567E <AmiBlitz3.ab2@26964>  MOVE.l a2,typetocast
00035682 <AmiBlitz3.ab2@26965>  MOVEM.l (a7)+,a2/d2
00035686 <AmiBlitz3.ab2@26966>  CMP.w #")",d0
0003568A <AmiBlitz3.ab2@26967>  BNE JUMP_errorbracketmiss
0003568C <AmiBlitz3.ab2@26968>  ADDQ.l #4,a7
000356B8 <AmiBlitz3.ab2@26969>  !fget
000356BE <AmiBlitz3.ab2@26970>  JMP nocast
000356C0 <AmiBlitz3.ab2@26972> 'skip MOVE.l (a7)+,a5
000356C6 <AmiBlitz3.ab2@26973>  JMP JL_0_A410
000356CC <AmiBlitz3.ab2@26975> JUMP_errorbracketmiss JMP errorbracketmiss
000356F6 <AmiBlitz3.ab2@26977> Function.l ab3_GetIncludeLock{filename.s}
00035716 <AmiBlitz3.ab2@26978>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
0003576E <AmiBlitz3.ab2@26979>   ex.s       = dos_GetExt{filename}
00035782 <AmiBlitz3.ab2@26981>   If incLock = False
000357F6 <AmiBlitz3.ab2@26982>     filename = dos_SetExt{filename,"ab3"}
00035816 <AmiBlitz3.ab2@26983>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0003582A <AmiBlitz3.ab2@26986>   If incLock = False
0003589E <AmiBlitz3.ab2@26987>     filename = dos_SetExt{filename,"ab2"}
000358BE <AmiBlitz3.ab2@26988>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000358D2 <AmiBlitz3.ab2@26991>   If incLock = False
00035946 <AmiBlitz3.ab2@26992>     filename = dos_SetExt{filename,"bb2"}
00035966 <AmiBlitz3.ab2@26993>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
0003597A <AmiBlitz3.ab2@26996>   If incLock = False
00035A0C <AmiBlitz3.ab2@26997>     filename = dos_SetExt{filename,ex+".ab3"}
00035A2C <AmiBlitz3.ab2@26998>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00035A40 <AmiBlitz3.ab2@27001>   If incLock = False
00035AB4 <AmiBlitz3.ab2@27002>     filename = dos_SetExt{filename,"ab2"}
00035AD4 <AmiBlitz3.ab2@27003>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00035AE8 <AmiBlitz3.ab2@27006>   If incLock = False
00035B5C <AmiBlitz3.ab2@27007>     filename = dos_SetExt{filename,"bb2"}
00035B7C <AmiBlitz3.ab2@27008>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00035B86 <AmiBlitz3.ab2@27011>  Function Return incLock
00035BA0 <AmiBlitz3.ab2@27012> End Function
00035BCA <AmiBlitz3.ab2@27016>   !basic
00035BF4 <AmiBlitz3.ab2@27017>   incString.s = Peek$(?ptr_parameterstore)
00035C22 <AmiBlitz3.ab2@27019>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00035C26 <AmiBlitz3.ab2@27020>   incDirP.l   = PutD0                                       ;    "
00035C4E <AmiBlitz3.ab2@27021>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00035CCE <AmiBlitz3.ab2@27022>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00035D00 <AmiBlitz3.ab2@27023>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00035D14 <AmiBlitz3.ab2@27025>   If incLock = False ; not found => check default Include Directory
00035D24 <AmiBlitz3.ab2@27026>     incDirP.l = Peek.l(?incd)
00035D2E <AmiBlitz3.ab2@27027>     If incDirP
00035D56 <AmiBlitz3.ab2@27028>       incDir_.s = Peek.s(incDirP)
00035D5C <AmiBlitz3.ab2@27029>     Else
00035DC6 <AmiBlitz3.ab2@27030>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035E46 <AmiBlitz3.ab2@27032>     incFile.s = dos_AddPart{incDir_,incString}
00035E78 <AmiBlitz3.ab2@27033>     incLock.l = ab3_GetIncludeLock{incFile}
00035E8C <AmiBlitz3.ab2@27036>   If incLock = False ; not found => check relative to current source
00035EA4 <AmiBlitz3.ab2@27037>     incDepth.l = Peek.w(?ininclude)-1
00035ECA <AmiBlitz3.ab2@27038>     If incDepth >= 0 AND incDepth < #maxincludes
00035F2A <AmiBlitz3.ab2@27039>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00035FAA <AmiBlitz3.ab2@27040>       incFile.s = dos_AddPart{incDir_,incString}
00035FDC <AmiBlitz3.ab2@27041>       incLock.l = ab3_GetIncludeLock{incFile}
00035FF0 <AmiBlitz3.ab2@27045>   If incLock = False ; still not found => check default Include Directory and name only
00036000 <AmiBlitz3.ab2@27046>     incDirP.l = Peek.l(?incd)
0003600A <AmiBlitz3.ab2@27047>     If incDirP
00036032 <AmiBlitz3.ab2@27048>       incDir_.s = Peek.s(incDirP)
00036038 <AmiBlitz3.ab2@27049>     Else
000360A2 <AmiBlitz3.ab2@27050>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00036150 <AmiBlitz3.ab2@27052>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00036182 <AmiBlitz3.ab2@27053>     incLock.l = ab3_GetIncludeLock{incFile}
0003618C <AmiBlitz3.ab2@27056>   If incLock
000361A2 <AmiBlitz3.ab2@27057>     MaxLen incFile = 1024
000361C6 <AmiBlitz3.ab2@27058>     NameFromLock_ incLock,&incFile,1024
000361F0 <AmiBlitz3.ab2@27059>     incFile = Peek.s(&incFile)
00036228 <AmiBlitz3.ab2@27060>     Poke$ ?ptr_parameterstore,incFile
0003623C <AmiBlitz3.ab2@27061>     i = FLen(incFile)
00036248 <AmiBlitz3.ab2@27062>     GetReg d0,i
0003624E <AmiBlitz3.ab2@27063>     MOVE.l d0,tempstore
0003625E <AmiBlitz3.ab2@27064>     UnLock_ incLock
0003627C <AmiBlitz3.ab2@27067>   !asm
00036282 <AmiBlitz3.ab2@27068>   TST.l tempstore
00036286 <AmiBlitz3.ab2@27069>    BEQ 'l1
0003628C <AmiBlitz3.ab2@27070>   MOVE.l tempstore,d2
0003628E <AmiBlitz3.ab2@27073> RTS
000362B8 <AmiBlitz3.ab2@27077>   !basic
000362E2 <AmiBlitz3.ab2@27078>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00036310 <AmiBlitz3.ab2@27079>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00036314 <AmiBlitz3.ab2@27080>   incDirP.l   = PutD0                                       ;    "
0003633C <AmiBlitz3.ab2@27081>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000363BC <AmiBlitz3.ab2@27082>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000363DC <AmiBlitz3.ab2@27083>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000363F0 <AmiBlitz3.ab2@27085>   If incLock = False                                        ; not found => try orignal string only to find
00036410 <AmiBlitz3.ab2@27086>     incLock.l = Lock_(&incString,#ACCESS_READ)
0003641A <AmiBlitz3.ab2@27089>   If incLock                                                ; found => store full path
00036430 <AmiBlitz3.ab2@27090>     MaxLen incFile = 1024
00036454 <AmiBlitz3.ab2@27091>     NameFromLock_ incLock,&incFile,1024
0003647E <AmiBlitz3.ab2@27092>     incFile = Peek.s(&incFile)
000364B6 <AmiBlitz3.ab2@27093>     Poke$ ?ptr_parameterstore,incFile
000364C2 <AmiBlitz3.ab2@27096> 
000364E0 <AmiBlitz3.ab2@27097>   !asm
000364E2 <AmiBlitz3.ab2@27098> RTS
000364E8 <AmiBlitz3.ab2@27109>   JSR Aclearallvars
000364EE <AmiBlitz3.ab2@27110>   JSR free_unusedfunctions
000364F8 <AmiBlitz3.ab2@27125>   MOVE.l #"NORE",reqmode
000364FE <AmiBlitz3.ab2@27126> JSR handle_compileerror
00036500 <AmiBlitz3.ab2@27129>   MOVE.l d0,-(a7)
00036502 <AmiBlitz3.ab2@27130>   MOVE.l a5,d0
0003650C <AmiBlitz3.ab2@27131>   !basica7
00036510 <AmiBlitz3.ab2@27132>   i.l = PutD0
0003651A <AmiBlitz3.ab2@27133>   If i
00036542 <AmiBlitz3.ab2@27134>     a$ = Peek$(i)
00036574 <AmiBlitz3.ab2@27135>     b$ = Peeks$(i-7,7)
0003665A <AmiBlitz3.ab2@27136>     i = Request(!TRANS{"Do workaround ?"},b$ + a$,!TRANS{"Yes|No"})
00036660 <AmiBlitz3.ab2@27137>     MOVE.l d0,result
00036664 <AmiBlitz3.ab2@27139>   !asma7
00036666 <AmiBlitz3.ab2@27140>   MOVE.l (a7)+,d0
00036668 <AmiBlitz3.ab2@27141> RTS
00036692 <AmiBlitz3.ab2@27145>   !basic
000366C0 <AmiBlitz3.ab2@27146>   !ComData_LEA{comStr_CurrentDir,D0}
000366C4 <AmiBlitz3.ab2@27147>   currentDirP.l = PutD0
000366F2 <AmiBlitz3.ab2@27149>   !ComData_LEA{comStr_SourceName,D0}
000366F6 <AmiBlitz3.ab2@27150>   fileNameP.l = PutD0
0003671E <AmiBlitz3.ab2@27152>   check_dirname$  = Peek$(currentDirP)
00036746 <AmiBlitz3.ab2@27153>   check_filename$ = Peek$(fileNameP)
000367CC <AmiBlitz3.ab2@27154>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000367D2 <AmiBlitz3.ab2@27155>     JSR free_unusedfunctions
0003681C <AmiBlitz3.ab2@27157>   olddirname$ = Peek$(check_dirname$)
00036866 <AmiBlitz3.ab2@27158>   oldfilename$ = Peek$(check_filename$)
00036890 <AmiBlitz3.ab2@27159>   For i = 0 To #maxincludes-1
000368A4 <AmiBlitz3.ab2@27160>     incline(i) = 0
000368B4 <AmiBlitz3.ab2@27161>   Next
000368D2 <AmiBlitz3.ab2@27162>   !asm
000368D4 <AmiBlitz3.ab2@27163> RTS
000368D6 <AmiBlitz3.ab2@27167>   MOVEQ #0,d1
000368D8 <AmiBlitz3.ab2@27170>   MOVE.b (a5)+,d0
000368DC <AmiBlitz3.ab2@27171>   BEQ 'er1
000368E0 <AmiBlitz3.ab2@27172>   CMP.b #$20,d0
000368E4 <AmiBlitz3.ab2@27173>   BEQ 'l1
000368E6 <AmiBlitz3.ab2@27174>   ADDQ #1,d1
000368EA <AmiBlitz3.ab2@27175>   CMP.b #$22,d0
000368EE <AmiBlitz3.ab2@27176>   BNE 'l1
000368F0 <AmiBlitz3.ab2@27177> RTS
000368F6 <AmiBlitz3.ab2@27180> JMP syntaxerr
0003691A <AmiBlitz3.ab2@27191> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00036938 <AmiBlitz3.ab2@27192> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0003693E <AmiBlitz3.ab2@27197>   TST.b exdebug
00036942 <AmiBlitz3.ab2@27198>   BNE 'l10
00036948 <AmiBlitz3.ab2@27199>   MOVE.l #$4e71,d1
0003694E <AmiBlitz3.ab2@27200>   JSR writeword
00036954 <AmiBlitz3.ab2@27201>   MOVE.l destpointer,d0
00036956 <AmiBlitz3.ab2@27202>   MOVE.l d0,d1
00036958 <AmiBlitz3.ab2@27203>   ADDQ.l #3,d1
0003695E <AmiBlitz3.ab2@27204>   AND.l #$fffffffc,d1
00036964 <AmiBlitz3.ab2@27205>   MOVE.l d1,destpointer
0003696A <AmiBlitz3.ab2@27206>   SUB.l destpointer,d0
0003696E <AmiBlitz3.ab2@27207>   BEQ 'lnf1
00036978 <AmiBlitz3.ab2@27208>   CMP.l #-1,bssstart
0003697C <AmiBlitz3.ab2@27209>   BNE 'lnf1
00036986 <AmiBlitz3.ab2@27210>   CMP.l #-1,chipstart
0003698A <AmiBlitz3.ab2@27211>   BNE 'lnf1
00036990 <AmiBlitz3.ab2@27212>   MOVE.l destpointer,a4
00036996 <AmiBlitz3.ab2@27213>   TST.w dontwrite
0003699A <AmiBlitz3.ab2@27214>   BNE 'lnf1
000369A0 <AmiBlitz3.ab2@27215>   MOVE.w #$4e71,-2(a4)
000369AA <AmiBlitz3.ab2@27218>   CMP.l #-1,bssstart
000369AE <AmiBlitz3.ab2@27219>   BEQ 'l11
000369B4 <AmiBlitz3.ab2@27220>   MOVE.l #erro1t,-(a7)
000369BA <AmiBlitz3.ab2@27221> JMP handle_compileerror
000369C4 <AmiBlitz3.ab2@27224>   MOVE.l destpointer,bssstart
000369CC <AmiBlitz3.ab2@27225>   MOVE.b #1,bssmode
000369D2 <AmiBlitz3.ab2@27228>   TST.b chipmode
000369D6 <AmiBlitz3.ab2@27229>   BEQ 'l10
000369E0 <AmiBlitz3.ab2@27230>   MOVE.l destpointer,chipend
000369E6 <AmiBlitz3.ab2@27231>   CLR.b chipmode
000369EC <AmiBlitz3.ab2@27234>   JSR get1bytemain
000369EE <AmiBlitz3.ab2@27235> RTS
000369F4 <AmiBlitz3.ab2@27239>    TST.b exdebug
000369F8 <AmiBlitz3.ab2@27240>   BNE 'x1
000369FE <AmiBlitz3.ab2@27241>   MOVE.l destpointer,d0
00036A04 <AmiBlitz3.ab2@27242>   MOVE.l d0,realbssend
00036A0A <AmiBlitz3.ab2@27243>   MOVE.l #$4e71,d1
00036A10 <AmiBlitz3.ab2@27244>   JSR writeword
00036A16 <AmiBlitz3.ab2@27245>   MOVE.l destpointer,d0
00036A18 <AmiBlitz3.ab2@27246>   MOVE.l d0,d1
00036A1A <AmiBlitz3.ab2@27247>   ADDQ.l #3,d1
00036A20 <AmiBlitz3.ab2@27248>   AND.l #$fffffffc,d1
00036A26 <AmiBlitz3.ab2@27249>   MOVE.l d1,destpointer
00036A2C <AmiBlitz3.ab2@27250>   SUB.l destpointer,d0
00036A30 <AmiBlitz3.ab2@27251>   BEQ 'lnf1
00036A36 <AmiBlitz3.ab2@27252>   MOVE.l destpointer,a4
00036A40 <AmiBlitz3.ab2@27253>   CMP.l #-1,bssstart
00036A44 <AmiBlitz3.ab2@27254>   BNE 'lnf1
00036A4E <AmiBlitz3.ab2@27255>   CMP.l #-1,chipstart
00036A52 <AmiBlitz3.ab2@27256>   BNE 'lnf1
00036A58 <AmiBlitz3.ab2@27257>   TST.w dontwrite
00036A5C <AmiBlitz3.ab2@27258>   BNE 'lnf1
00036A62 <AmiBlitz3.ab2@27259>   MOVE.w #$4e71,-2(a4)
00036A68 <AmiBlitz3.ab2@27262>   TST.b bssmode
00036A6C <AmiBlitz3.ab2@27263>   BEQ 'l10
00036A76 <AmiBlitz3.ab2@27264>   MOVE.l destpointer,bssend
00036A7C <AmiBlitz3.ab2@27265>   CLR.b bssmode
00036A86 <AmiBlitz3.ab2@27270>   CMP.l #-1,chipstart
00036A8A <AmiBlitz3.ab2@27271>   BEQ 'l11
00036A90 <AmiBlitz3.ab2@27272>   MOVE.l #erro1t,-(a7)
00036A96 <AmiBlitz3.ab2@27273> JMP handle_compileerror
00036AA0 <AmiBlitz3.ab2@27276>   MOVE.l destpointer,chipstart
00036AA8 <AmiBlitz3.ab2@27277>   MOVE.b #1,chipmode
00036AAE <AmiBlitz3.ab2@27280>   JSR get1bytemain
00036AB0 <AmiBlitz3.ab2@27281> RTS
00036ADA <AmiBlitz3.ab2@27285>   !basic
00036AEC <AmiBlitz3.ab2@27295>   i.l = Peek.w(?ininclude)
00036B12 <AmiBlitz3.ab2@27296>   If i>=0 AND i<#maxincludes
00036B44 <AmiBlitz3.ab2@27297>     incdim (i) = Peek.s(?includetemp2)
00036B5E <AmiBlitz3.ab2@27298>     incline(i) = Peek.l(?includeline)
00036B68 <AmiBlitz3.ab2@27300>     If CLIMode
00036C16 <AmiBlitz3.ab2@27301>       If cli_verbose>=2 Then NPrint "  -> Compiling ",incdim(i),"..."
00036C34 <AmiBlitz3.ab2@27305>   !asm
00036C36 <AmiBlitz3.ab2@27306> RTS
00036C60 <AmiBlitz3.ab2@27310>   !basic
00036C72 <AmiBlitz3.ab2@27311>   i.l = Peek.w(?ininclude)
00036C98 <AmiBlitz3.ab2@27312>   If i>=0 AND i<#maxincludes
00036CC8 <AmiBlitz3.ab2@27313>     incdim (i) = ""
00036CDC <AmiBlitz3.ab2@27314>     incline(i) = 0
00036D14 <AmiBlitz3.ab2@27315>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00036D32 <AmiBlitz3.ab2@27317>   !asm
00036D34 <AmiBlitz3.ab2@27318> RTS
00036D3A <AmiBlitz3.ab2@27322>   LEA replacedat,a0
00036D3E <AmiBlitz3.ab2@27323>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00036D40 <AmiBlitz3.ab2@27324> RTS
00036D46 <AmiBlitz3.ab2@27328>   TST.b fpu
00036D4A <AmiBlitz3.ab2@27329>   BEQ 'l1
00036D54 <AmiBlitz3.ab2@27332>   MOVE.l destpointer,newinitaddr
00036D5A <AmiBlitz3.ab2@27333>   JSR writeword
00036D60 <AmiBlitz3.ab2@27334>   JSR writelong
00036D62 <AmiBlitz3.ab2@27335> RTS
00036D64 <AmiBlitz3.ab2@27340>   TST.b (a5)
00036D68 <AmiBlitz3.ab2@27341>    BEQ.s 'll20
00036D6C <AmiBlitz3.ab2@27342>   CMP.b #$20,(a5)
00036D70 <AmiBlitz3.ab2@27343>    BNE.s 'll10
00036D72 <AmiBlitz3.ab2@27344>   ADDQ.l #1,a5
00036D76 <AmiBlitz3.ab2@27345> BRA.s 'll21
00036D7A <AmiBlitz3.ab2@27348>   CMP.b #";",(a5)
00036D7E <AmiBlitz3.ab2@27349>   BNE.s 'll20
00036D80 <AmiBlitz3.ab2@27352>   TST.b (a5)+
00036D84 <AmiBlitz3.ab2@27353>   BEQ.s 'll23
00036D88 <AmiBlitz3.ab2@27354> BRA.s 'll25
00036D8A <AmiBlitz3.ab2@27357>   SUBQ.l #1,a5
00036D8C <AmiBlitz3.ab2@27360> RTS
00036D90 <AmiBlitz3.ab2@27364>   MOVEM.l a2/d2,-(a7)
00036D92 <AmiBlitz3.ab2@27365>   MOVEQ #0,d2
00036D98 <AmiBlitz3.ab2@27366>   LEA ptr_parameterstore,a0
00036D9E <AmiBlitz3.ab2@27367>   LEA chartab,a2
00036DA0 <AmiBlitz3.ab2@27370>   MOVE.b (a5),d0
00036DA4 <AmiBlitz3.ab2@27371>   TST.b 0(a2,d0)
00036DA8 <AmiBlitz3.ab2@27372>   BNE 'l10
00036DAA <AmiBlitz3.ab2@27373>   ADDQ.l #1,a5
00036DAC <AmiBlitz3.ab2@27374>   MOVE.b d0,(a0)+
00036DAE <AmiBlitz3.ab2@27375>   ADDQ.l #1,d2
00036DB2 <AmiBlitz3.ab2@27376> BRA fc2
00036DB4 <AmiBlitz3.ab2@27379>   CLR.b (a0)+
00036DBA <AmiBlitz3.ab2@27380>   JSR findlabel2
00036DBC <AmiBlitz3.ab2@27381>   MOVE.l a2,a0
00036DC0 <AmiBlitz3.ab2@27382>   MOVEM.l (a7)+,a2/d2
00036DC2 <AmiBlitz3.ab2@27383> RTS
00036DC4 <AmiBlitz3.ab2@27387>   TST.l d0
00036DC8 <AmiBlitz3.ab2@27388>   BNE 'l10
00036DCE <AmiBlitz3.ab2@27389>     MOVE.l #syntax_,-(a7)
00036DD4 <AmiBlitz3.ab2@27390> JMP handle_compileerror
00036DDA <AmiBlitz3.ab2@27393>   CMP.l #1,d0
00036DDE <AmiBlitz3.ab2@27394>   BNE 'l20
00036DE4 <AmiBlitz3.ab2@27395>     MOVE.l #overflow,-(a7)
00036DEA <AmiBlitz3.ab2@27396> JMP handle_compileerror
00036DEC <AmiBlitz3.ab2@27399>   ADD.l a2,d0
00036DEE <AmiBlitz3.ab2@27400>   MOVE.l d0,-(a7)
00036DF4 <AmiBlitz3.ab2@27401> JMP handle_compileerror
00036DFA <AmiBlitz3.ab2@27405>   JMP _return
00036E00 <AmiBlitz3.ab2@27406>   JMP _return
00036E06 <AmiBlitz3.ab2@27407>   JMP _return
00036E0C <AmiBlitz3.ab2@27408>   JMP _return
00036E12 <AmiBlitz3.ab2@27409>   JMP _return
00036E18 <AmiBlitz3.ab2@27410>   JMP _return
00036E1E <AmiBlitz3.ab2@27411>   JMP _return
00036E24 <AmiBlitz3.ab2@27412>   JMP _return
00036E2A <AmiBlitz3.ab2@27413>   JMP _return
00036E30 <AmiBlitz3.ab2@27414>   JMP _return
00036E36 <AmiBlitz3.ab2@27415>   JMP Atokejsr
00036E3C <AmiBlitz3.ab2@27416>   JMP writeinit
00036E42 <AmiBlitz3.ab2@27417>   JMP macroexecute
00036E48 <AmiBlitz3.ab2@27418>   JMP findnext
00036E4E <AmiBlitz3.ab2@27419>   JMP replacelib
00036E54 <AmiBlitz3.ab2@27420>   JMP findconstant2
00036E5A <AmiBlitz3.ab2@27421>   JMP findchar                                             ;char in d1
00036E60 <AmiBlitz3.ab2@27422>   JMP stripspaces
00036E66 <AmiBlitz3.ab2@27423>   JMP calc                                                 ;d0 varmode
00036E6C <AmiBlitz3.ab2@27424>   JMP error
00036E72 <AmiBlitz3.ab2@27425>   JMP writelong                                            ;d1 value
00036E78 <AmiBlitz3.ab2@27426>   JMP writeword                                            ;d1 value
00036E7E <AmiBlitz3.ab2@27427>   JMP writebyte                                            ;d1 value
00036E84 <AmiBlitz3.ab2@27428> JMP exit
00036E88 <AmiBlitz3.ab2@27432>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00036E8A <AmiBlitz3.ab2@27435>   fast            Dc.w 0
00036E8C <AmiBlitz3.ab2@27436>   fpu             Dc.w 0
00036E8E <AmiBlitz3.ab2@27437>   newsyntax       Dc.w 0
00036E8F <AmiBlitz3.ab2@27439>   optistring      Dc.b 0
00036E90 <AmiBlitz3.ab2@27440>   optistring2     Dc.b 0
00036E91 <AmiBlitz3.ab2@27441>   optiarray       Dc.b 0
00036E92 <AmiBlitz3.ab2@27442>   quickadd        Dc.b 0
00036E94 <AmiBlitz3.ab2@27443>   newmode         Dc.w 0
00036E96 <AmiBlitz3.ab2@27444>   mode            Dc.w 0
00036E98 <AmiBlitz3.ab2@27445>   string1         Dc.w 0
00036E9A <AmiBlitz3.ab2@27446>   load_var_size   Dc.w 0
00036E9C <AmiBlitz3.ab2@27447>   load_var_reg    Dc.w 0
00036EA0 <AmiBlitz3.ab2@27448>   load_var_addr   Dc.l 0
00036EA2 <AmiBlitz3.ab2@27449>   imm_size        Dc.w 0
00036EA4 <AmiBlitz3.ab2@27450>   imm_reg         Dc.w 0
00036EA8 <AmiBlitz3.ab2@27451>   imm_addr        Dc.l 0
00036EA9 <AmiBlitz3.ab2@27452>   iee             Dc.b 0
00036EAA <AmiBlitz3.ab2@27453>   _dcb            Dc.b 0
00036EAE <AmiBlitz3.ab2@27454>   nohunkoffset    Dc.l 0
00036EB2 <AmiBlitz3.ab2@27457> teddata:        Dc.l tokens
00036EB6 <AmiBlitz3.ab2@27458>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00036EBA <AmiBlitz3.ab2@27459>                 Dc.l read_xtrafile
00036EBE <AmiBlitz3.ab2@27460>                 Dc.l write_xtrafile
00036EC2 <AmiBlitz3.ab2@27461>                 Dc.l call_menuentry                        ; compile AND RUN ?
00036EC6 <AmiBlitz3.ab2@27462>                 Dc.l 0
00036ECA <AmiBlitz3.ab2@27463>                 Dc.b ":",34,".;"
00036ECE <AmiBlitz3.ab2@27464>                 Dc.l "NEW1"
00036ED2 <AmiBlitz3.ab2@27465>                 Dc.l newtypebase
00036ED6 <AmiBlitz3.ab2@27466> realconstbase:  Dc.l labelbase
00036EDA <AmiBlitz3.ab2@27467> deflib          Dc.l 0
00036EDE <AmiBlitz3.ab2@27468> incd            Dc.l 0
00036EE2 <AmiBlitz3.ab2@27469>                 Dc.l 0
00036EE6 <AmiBlitz3.ab2@27470>                 Dc.l 0
00036EEA <AmiBlitz3.ab2@27471>                 Dc.l 0
00036EEC <AmiBlitz3.ab2@27472> _return         RTS
00036EED <AmiBlitz3.ab2@27473>                 Dc.b 0
000372ED <AmiBlitz3.ab2@27474> chartab2        Ds.l 256
000372F1 <AmiBlitz3.ab2@27475> codeend         Dc.l 0
000372F5 <AmiBlitz3.ab2@27476> hunkoffsetnum   Dc.l 0
000372F9 <AmiBlitz3.ab2@27477> chipsize        Dc.l 0
000372FD <AmiBlitz3.ab2@27478> bsssize         Dc.l 0
00037301 <AmiBlitz3.ab2@27479> bssstart        Dc.l -1
00037305 <AmiBlitz3.ab2@27480> bssend          Dc.l -1
00037309 <AmiBlitz3.ab2@27481> chipstart       Dc.l -1
0003730D <AmiBlitz3.ab2@27482> chipend         Dc.l -1
0003730E <AmiBlitz3.ab2@27483> bssmode         Dc.b 0
0003730F <AmiBlitz3.ab2@27484> chipmode        Dc.b 0
00037310 <AmiBlitz3.ab2@27485> newhunk         Dc.b 0
00037314 <AmiBlitz3.ab2@27486> bssnum          Dc.l 0
00037318 <AmiBlitz3.ab2@27487> chipnum         Dc.l 0
0003731C <AmiBlitz3.ab2@27488> lastinstruction Dc.l 0
00037320 <AmiBlitz3.ab2@27489> lastinstructionaddr Dc.l 0
00037334 <AmiBlitz3.ab2@27490> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00037338 <AmiBlitz3.ab2@27491> tstsize1b:      Ds.l 1
0003733C <AmiBlitz3.ab2@27492> bsssize2        Dc.l 1
00037340 <AmiBlitz3.ab2@27493>                 Dc.l $03E9
00037344 <AmiBlitz3.ab2@27494> tstsize2b:      Dc.l $100
00037358 <AmiBlitz3.ab2@27495> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
0003735C <AmiBlitz3.ab2@27496> tstsize1c:      Ds.l 1
00037360 <AmiBlitz3.ab2@27497> bsssize3        Dc.l 1
00037364 <AmiBlitz3.ab2@27498> chipsize2       Dc.l 1
00037368 <AmiBlitz3.ab2@27499>                 Dc.l $3e9
0003736C <AmiBlitz3.ab2@27500> tstsize2c       Dc.l 0
0003737C <AmiBlitz3.ab2@27501> hunkend         Dc.l $3f2,$3eb,0,$3f2
0003738C <AmiBlitz3.ab2@27502> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00037393 <AmiBlitz3.ab2@27503> strcpy          Dc.b "strcpy",0
0003739A <AmiBlitz3.ab2@27504> strcmp          Dc.b "strcmp",0
000373A1 <AmiBlitz3.ab2@27505> strvar          Dc.b "strvar",0
000373A6 <AmiBlitz3.ab2@27506> qmul            Dc.b "qmul",0
000373AB <AmiBlitz3.ab2@27507> qdiv            Dc.b "qdiv",0
000373B2 <AmiBlitz3.ab2@27508> _MaxLen         Dc.b "maxlen",0
000373B7 <AmiBlitz3.ab2@27509> notf            Dc.b "????",0
000373DA <AmiBlitz3.ab2@27511> errtext         Dc.b "only reg addressing Mode supported",0
00037404 <AmiBlitz3.ab2@27512> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00037446 <AmiBlitz3.ab2@27513> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00037448 <AmiBlitz3.ab2@27514> peeksize        Dc.w 0
0003744C <AmiBlitz3.ab2@27516> mainstart       Dc.l 0
0003744D <AmiBlitz3.ab2@27518> infunctioncode  Dc.b 0
0003744F <AmiBlitz3.ab2@27519> regnumstore     Dc.w 0
0003747C <AmiBlitz3.ab2@27520>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00037484 <AmiBlitz3.ab2@27521> testcode        Dc.b "print i",0
000374E8 <AmiBlitz3.ab2@27522>                 Ds.b 100
000374F6 <AmiBlitz3.ab2@27523> devo            Dc.b "developobject",0 : Even
00037508 <AmiBlitz3.ab2@27524> autostorename   Dc.b "__autoconstantnum",0
00037512 <AmiBlitz3.ab2@27525> _include        Dc.b "__include",0
0003751A <AmiBlitz3.ab2@27526> _debug          Dc.b "__debug",0
0003751E <AmiBlitz3.ab2@27527> unusedfunc      Dc.l 0
00037520 <AmiBlitz3.ab2@27531> MOVE.l a0,d0
0003754A <AmiBlitz3.ab2@27532> !basic
0003754E <AmiBlitz3.ab2@27533> *olderror.l= PutD0
00037576 <AmiBlitz3.ab2@27534> error$=Peek.s(*olderror)
000375BC <AmiBlitz3.ab2@27535> error$=error$+"\\nPossible wrong Code begin here: "
000375D0 <AmiBlitz3.ab2@27536>         If Peek.l (?beforeparameterfetch)
000375E6 <AmiBlitz3.ab2@27537>           MaxLen detokenline.s = 65536
00037628 <AmiBlitz3.ab2@27538>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00037638 <AmiBlitz3.ab2@27539>          *tn.preprocessor = Peek.l(?include_preprocessor)
00037662 <AmiBlitz3.ab2@27540>           written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0003768A <AmiBlitz3.ab2@27541>           If written>0 Then Poke.b &detokenline+written,0
000376B4 <AmiBlitz3.ab2@27542>           sourceLineText.s = Peek.s(&detokenline)
000376BA <AmiBlitz3.ab2@27543>         Else
000376E2 <AmiBlitz3.ab2@27544>           sourceLineText = "NULL"
00037734 <AmiBlitz3.ab2@27546> error$=error$+sourceLineText
0003773A <AmiBlitz3.ab2@27547> GetD0 &error$
00037758 <AmiBlitz3.ab2@27548> !asm
0003775A <AmiBlitz3.ab2@27549> MOVE.l d0,a0
0003775C <AmiBlitz3.ab2@27550> RTS
0003775E <AmiBlitz3.ab2@27554>   MOVE.l a0,-(a7)
00037760 <AmiBlitz3.ab2@27555>   MOVE.l a0,d0
00037762 <AmiBlitz3.ab2@27556>   MOVE.l a5,a0                                             ;macro title
0003778C <AmiBlitz3.ab2@27557>   !basic
00037790 <AmiBlitz3.ab2@27558>   i = PutD0
00037792 <AmiBlitz3.ab2@27559>   MOVEQ #20,d0
00037794 <AmiBlitz3.ab2@27562>     MOVE.b -(a0),d1
00037798 <AmiBlitz3.ab2@27563>     BEQ 'l1
0003779C <AmiBlitz3.ab2@27564>     CMP.b #":",d1
000377A0 <AmiBlitz3.ab2@27565>     BEQ 'l1
000377A2 <AmiBlitz3.ab2@27566>     SUBQ.l #1,d0
000377A6 <AmiBlitz3.ab2@27567>     BNE 'l2
000377A8 <AmiBlitz3.ab2@27570>   ADDQ #1,a0
000377AA <AmiBlitz3.ab2@27571>   MOVE.l a0,d0
000377AE <AmiBlitz3.ab2@27572>   i2.l = PutD0
000377CA <AmiBlitz3.ab2@27573>   If Peek.w (?ininclude)>0
00037824 <AmiBlitz3.ab2@27574>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00037834 <AmiBlitz3.ab2@27575>     errorline.l = Peek.l(?includeline);-1
0003785C <AmiBlitz3.ab2@27576>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00037886 <AmiBlitz3.ab2@27577>     errorfile.s = Peek.s(?includetemp2)
0003788C <AmiBlitz3.ab2@27578>   Else
000378C4 <AmiBlitz3.ab2@27579>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
000378DA <AmiBlitz3.ab2@27580>     errorline.l = Peek.l(?compilelinecounter) + 1
0003790E <AmiBlitz3.ab2@27581>     errorfile.s = cli_sourcefile
00037918 <AmiBlitz3.ab2@27584>   If i
000379BC <AmiBlitz3.ab2@27585>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
000379C2 <AmiBlitz3.ab2@27586>   Else
000379EA <AmiBlitz3.ab2@27587>     errortext.s = "???"
00037B5C <AmiBlitz3.ab2@27590>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," <",errorfile,"@",errorline,">\\1b[0m ",errortext
00037B7A <AmiBlitz3.ab2@27594>   !asm
00037B7C <AmiBlitz3.ab2@27595>   MOVE.l (a7)+,a0
00037B7E <AmiBlitz3.ab2@27596> RTS
00037B80 <AmiBlitz3.ab2@27600>   MOVE.l a0,-(a7)
00037B82 <AmiBlitz3.ab2@27601>   MOVE.l a0,d0
00037B84 <AmiBlitz3.ab2@27602>   MOVE.l a5,a0                                             ;macro title
00037BAE <AmiBlitz3.ab2@27603>   !basic
00037BB2 <AmiBlitz3.ab2@27604>   i = PutD0
00037BB4 <AmiBlitz3.ab2@27605>   MOVEQ #20,d0
00037BB6 <AmiBlitz3.ab2@27608>     MOVE.b -(a0),d1
00037BBA <AmiBlitz3.ab2@27609>     BEQ 'l1
00037BBE <AmiBlitz3.ab2@27610>     CMP.b #":",d1
00037BC2 <AmiBlitz3.ab2@27611>     BEQ 'l1
00037BC4 <AmiBlitz3.ab2@27612>     SUBQ.l #1,d0
00037BC8 <AmiBlitz3.ab2@27613>     BNE 'l2
00037BCA <AmiBlitz3.ab2@27616>   ADDQ #1,a0
00037BCC <AmiBlitz3.ab2@27617>   MOVE.l a0,d0
00037BD0 <AmiBlitz3.ab2@27618>   i2.l = PutD0
00037C54 <AmiBlitz3.ab2@27619>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00037C68 <AmiBlitz3.ab2@27620>   If fid <> -1
00037C84 <AmiBlitz3.ab2@27621>     If Peek.w (?ininclude)>0
00037CDE <AmiBlitz3.ab2@27622>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00037CE4 <AmiBlitz3.ab2@27623>     Else
00037D10 <AmiBlitz3.ab2@27624>       Poke$(?includetemp2),""
00037D3A <AmiBlitz3.ab2@27626>     a$ = Peek$(?includetemp2)
00037DAC <AmiBlitz3.ab2@27627>     x$ = Replace$(Peek$(i),"\\0a","\n")
00037DDE <AmiBlitz3.ab2@27628>     file_WriteLine{fid,x$}
00037E28 <AmiBlitz3.ab2@27629>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00037E54 <AmiBlitz3.ab2@27630>     If a$
00037E86 <AmiBlitz3.ab2@27631>       file_WriteLine{fid,a$}
00037ED0 <AmiBlitz3.ab2@27632>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00037EF8 <AmiBlitz3.ab2@27633>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00037EFE <AmiBlitz3.ab2@27634>     Else
00037F24 <AmiBlitz3.ab2@27635>       file_WriteLine{fid,"none"}
00037F54 <AmiBlitz3.ab2@27637>     file_WriteLine{fid,Peek$(i2)}
00037FAA <AmiBlitz3.ab2@27638>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00037FF4 <AmiBlitz3.ab2@27639>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00037FFE <AmiBlitz3.ab2@27640>     file_Close{fid}
0003801C <AmiBlitz3.ab2@27642>   !asm
0003801E <AmiBlitz3.ab2@27643>   MOVE.l (a7)+,a0
00038020 <AmiBlitz3.ab2@27644> RTS
0003804A <AmiBlitz3.ab2@27648>   !basic
0003804E <AmiBlitz3.ab2@27649>   progress.l     = PutD0
00038060 <AmiBlitz3.ab2@27650>   total.l        = Peek.w(?progressbar_width)
0003807E <AmiBlitz3.ab2@27651>   calcpro        = (progress * 100) / total +1
00038090 <AmiBlitz3.ab2@27652>   pass.l         = Peek.w(?pass)
000380A2 <AmiBlitz3.ab2@27653>   typ.l          = Peek.w(?compiler_job)
000380C0 <AmiBlitz3.ab2@27656> If (pass><pass_old OR typ><typ_old)
000380C6 <AmiBlitz3.ab2@27657>     pass_old = pass
000380CC <AmiBlitz3.ab2@27658>     typ_old  = typ
000380D2 <AmiBlitz3.ab2@27659>     update_comstatus_gui = True
000380E4 <AmiBlitz3.ab2@27660>     If typ=0
000381C4 <AmiBlitz3.ab2@27661>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
000381CC <AmiBlitz3.ab2@27662>       calcpro = 0  ; set gauge to 0
000381DE <AmiBlitz3.ab2@27664>     If typ=1
000382BE <AmiBlitz3.ab2@27665>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
000382C6 <AmiBlitz3.ab2@27666>       calcpro = 0  ; set gauge to 0
0003831C <AmiBlitz3.ab2@27668>     If cli_verbose>=2 Then NPrint comstatusstr
0003832A <AmiBlitz3.ab2@27671>   If (calcpro >< calcpro_old)
0003837E <AmiBlitz3.ab2@27672>     If cli_verbose>=3 Then NPrint calcpro,"% compiled..."
00038384 <AmiBlitz3.ab2@27673>     calcpro_old = calcpro
0003838A <AmiBlitz3.ab2@27674>     update_comstatus_gui = True
000383A4 <AmiBlitz3.ab2@27677>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
000383C2 <AmiBlitz3.ab2@27678>     !asm
000383F4 <AmiBlitz3.ab2@27679> 
0003841E <AmiBlitz3.ab2@27680>     !basic
00038424 <AmiBlitz3.ab2@27681>     update_comstatus_gui  = False ; because we update the gui
00038442 <AmiBlitz3.ab2@27683>   !asm
00038444 <AmiBlitz3.ab2@27684> RTS
0003844A <AmiBlitz3.ab2@27689>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00038450 <AmiBlitz3.ab2@27690>   LEA maxobjects_value,A3                                  ;current value
00038456 <AmiBlitz3.ab2@27691>   MOVEA.l libpointer,A2
0003845A <AmiBlitz3.ab2@27694>   CMPA.w #$0,A2
0003845E <AmiBlitz3.ab2@27695>   BEQ.w menu4c__igotb
00038460 <AmiBlitz3.ab2@27696>   MOVEA.l A2,A1
00038464 <AmiBlitz3.ab2@27697>   ADDA.l $12(A1),A1
00038468 <AmiBlitz3.ab2@27698>   TST.w -$2(A1)
0003846C <AmiBlitz3.ab2@27699>   BEQ.w JL_0_FFF6b
0003846E <AmiBlitz3.ab2@27700>   SUBQ.w #1,D5
00038472 <AmiBlitz3.ab2@27701>   BMI.w JL_0_FFFCb
00038474 <AmiBlitz3.ab2@27704>   MOVEA.l (A2),A2
00038478 <AmiBlitz3.ab2@27705> BRA.w JL_0_FFDAb
0003847C <AmiBlitz3.ab2@27708>   MOVE.w (A3),-$4(A1)
0003847E <AmiBlitz3.ab2@27711> RTS
00038484 <AmiBlitz3.ab2@27715>   MOVE.w debugnest,d0
0003848A <AmiBlitz3.ab2@27716>   LEA storedebugmode, a0
00038492 <AmiBlitz3.ab2@27717>   MOVE.b 0(a0,d0.w),debugmode
00038498 <AmiBlitz3.ab2@27718>   TST.w debugnest
0003849C <AmiBlitz3.ab2@27719>   BEQ JUMP_unpairrunerrs
000384A2 <AmiBlitz3.ab2@27720>   SUBQ.w #1,debugnest
000384A4 <AmiBlitz3.ab2@27721> RTS
000384AA <AmiBlitz3.ab2@27724> JMP runerrsoverflow
000384B0 <AmiBlitz3.ab2@27727> JMP unpairrunerrs
000384B8 <AmiBlitz3.ab2@27731>   BCHG #$7,use_debugger
000384C0 <AmiBlitz3.ab2@27733>   BTST #$7,use_debugger
000384C4 <AmiBlitz3.ab2@27734>   BNE 'debugon
000384CA <AmiBlitz3.ab2@27735>   CLR.w debugmode
000384CE <AmiBlitz3.ab2@27736> BRA.b 'debugoff
000384D4 <AmiBlitz3.ab2@27739>   SNE debugmode
000384D6 <AmiBlitz3.ab2@27742>   MOVE.l a0,-(a7)
0003850E <AmiBlitz3.ab2@27745>   !ComData_SetB{comByte_DebugMode,debugmode}
00038510 <AmiBlitz3.ab2@27750>   MOVE.l (a7)+,a0
00038512 <AmiBlitz3.ab2@27751> RTS
0003851A <AmiBlitz3.ab2@27756>   BTST #$7,use_debugger
0003851E <AmiBlitz3.ab2@27757>   BNE 'debugon
00038524 <AmiBlitz3.ab2@27758>   CLR.w debugmode
00038528 <AmiBlitz3.ab2@27759> BRA.b 'debugoff
0003852E <AmiBlitz3.ab2@27762>   SNE debugmode
00038530 <AmiBlitz3.ab2@27765> RTS
00038536 <AmiBlitz3.ab2@27769>   ADDQ.w #1,debugnest
0003853C <AmiBlitz3.ab2@27770>   MOVE.w debugnest,d0
00038540 <AmiBlitz3.ab2@27771>   CMP.w #18,d0
00038544 <AmiBlitz3.ab2@27772>    BGE JUMP_runerrsoverflow
0003854A <AmiBlitz3.ab2@27773>   LEA storedebugmode, a0
00038552 <AmiBlitz3.ab2@27774>   MOVE.b debugmode,0( a0,d0.w)
00038558 <AmiBlitz3.ab2@27777>   SF debugmode
0003855A <AmiBlitz3.ab2@27778> RTS
000385DA <AmiBlitz3.ab2@27781> usedpath:  Ds.l 32
000385DE <AmiBlitz3.ab2@27785>   BEQ.w JUMP_syntaxerr
000385E4 <AmiBlitz3.ab2@27786>   LEA lastpath,A0
000385E8 <AmiBlitz3.ab2@27787>   MOVEM.l a0-a1/d0,-(a7)
000385EE <AmiBlitz3.ab2@27788>   LEA lastpath2,a1
000385F0 <AmiBlitz3.ab2@27791>     MOVE.b (a0)+,(a1)+
000385F4 <AmiBlitz3.ab2@27792>   BNE 'l2
000385F8 <AmiBlitz3.ab2@27793>   MOVEM.l (a7)+,a0-a1/d0
000385FC <AmiBlitz3.ab2@27794>   LEA usedpath(PC),A0
00038600 <AmiBlitz3.ab2@27795>   MOVEM.l a0-a1/d0,-(a7)
00038606 <AmiBlitz3.ab2@27796>   LEA lastpath,a1
00038608 <AmiBlitz3.ab2@27799>     MOVE.b (a0)+,(a1)+
0003860C <AmiBlitz3.ab2@27800>   BNE 'l1
00038610 <AmiBlitz3.ab2@27801>   MOVEM.l (a7)+,a0-a1/d0
00038612 <AmiBlitz3.ab2@27804>   TST.w D0
00038616 <AmiBlitz3.ab2@27805>    BMI.w JUMP_syntaxerr
00038618 <AmiBlitz3.ab2@27806>   MOVE.b D0,(A0)+
0003861C <AmiBlitz3.ab2@27807>   BSR.w JUMP_get1bytemain
00038620 <AmiBlitz3.ab2@27808>    BNE.w JL_0_4AA8
00038624 <AmiBlitz3.ab2@27809>   MOVE.b #$2,(A0)
00038626 <AmiBlitz3.ab2@27810> RTS
0003862A <AmiBlitz3.ab2@27814>   BEQ.w JUMP_syntaxerr
00038630 <AmiBlitz3.ab2@27815>   LEA path2,A0
00038632 <AmiBlitz3.ab2@27825>   TST.w D0
00038636 <AmiBlitz3.ab2@27826>    BMI.w JUMP_syntaxerr
00038638 <AmiBlitz3.ab2@27827>   MOVE.b D0,(A0)+
0003863C <AmiBlitz3.ab2@27828>   BSR.w JUMP_get1bytemain
00038640 <AmiBlitz3.ab2@27829>    BNE.w JL_0_4AA8b
00038644 <AmiBlitz3.ab2@27830>   MOVE.b #$2,(A0)
00038646 <AmiBlitz3.ab2@27831> RTS
0003864C <AmiBlitz3.ab2@27840> JMP errormsg_reg
00038656 <AmiBlitz3.ab2@27844>   MOVE.l #$f22d6780,fpucodeglobal
00038660 <AmiBlitz3.ab2@27845>   MOVE.l #$f22c6780,fpucodelocal
00038666 <AmiBlitz3.ab2@27846>   LEA regtable,a0
00038670 <AmiBlitz3.ab2@27847>   MOVE.l #7,maxregs
00038672 <AmiBlitz3.ab2@27850>   MOVE.l (a0),d0
00038676 <AmiBlitz3.ab2@27851>   BEQ 'e1
00038678 <AmiBlitz3.ab2@27852>   CLR.l (a0)
0003867C <AmiBlitz3.ab2@27853>   MOVE.w 4(a0),d0
00038686 <AmiBlitz3.ab2@27854>   MOVE.l fpucodeglobal,fpucode
0003868A <AmiBlitz3.ab2@27855>   TST.w 6(a0)
0003868E <AmiBlitz3.ab2@27856>   BEQ 'glob
00038698 <AmiBlitz3.ab2@27857>   MOVE.l fpucodelocal,fpucode
0003869E <AmiBlitz3.ab2@27860>   MOVE.l fpucode,d1
000386A4 <AmiBlitz3.ab2@27861>   JSR writelong
000386AE <AmiBlitz3.ab2@27862>   SUB.l #$80,fpucodelocal
000386B8 <AmiBlitz3.ab2@27863>   SUB.l #$80,fpucodeglobal
000386BA <AmiBlitz3.ab2@27864>   MOVE.w d0,d1
000386C0 <AmiBlitz3.ab2@27865>   JSR writeword
000386C2 <AmiBlitz3.ab2@27866>   ADDQ #8,a0
000386C6 <AmiBlitz3.ab2@27867> BRA 'again
000386C8 <AmiBlitz3.ab2@27870> RTS
000386CE <AmiBlitz3.ab2@27877> JMP notypeerr
000386D4 <AmiBlitz3.ab2@27880> JMP illtypeerr
000386DE <AmiBlitz3.ab2@27883>   MOVE.l #$f22d4780,fpucodeglobal
000386E8 <AmiBlitz3.ab2@27884>   MOVE.l #$f22c4780,fpucodelocal
000386EE <AmiBlitz3.ab2@27885>   LEA regtable,a0
000386F0 <AmiBlitz3.ab2@27886>   TST.l (a0)
000386F4 <AmiBlitz3.ab2@27887>    BNE JUMP_errormsg_reg
000386F6 <AmiBlitz3.ab2@27888>   MOVE.l d7,-(a7)
000386F8 <AmiBlitz3.ab2@27889>   SUBQ.l #1,a5
000386FE <AmiBlitz3.ab2@27892>   JSR getparameter2
00038702 <AmiBlitz3.ab2@27893>   BEQ.w 'nopar
00038708 <AmiBlitz3.ab2@27894>   MOVE.w d0,lastchar
0003870E <AmiBlitz3.ab2@27895>   JSR findvariable
00038712 <AmiBlitz3.ab2@27896>   BNE 'islocal
0003871C <AmiBlitz3.ab2@27897>   MOVE.l fpucodeglobal,fpucode
00038726 <AmiBlitz3.ab2@27898>   MOVE.l #3,maxregs
00038728 <AmiBlitz3.ab2@27899>   MOVEQ #0,d7
00038730 <AmiBlitz3.ab2@27902>   CMP.l #newtype_float,$a(a2)                              ;is float type
00038734 <AmiBlitz3.ab2@27903>    BEQ 'doit
0003873C <AmiBlitz3.ab2@27904>   CMP.l #newtype_double,$a(a2)
00038740 <AmiBlitz3.ab2@27905>    BNE JUMP_illtypeerr
00038746 <AmiBlitz3.ab2@27908>   LEA regtable,a0
00038748 <AmiBlitz3.ab2@27909>   MOVEQ #0,d0
0003874A <AmiBlitz3.ab2@27912>   TST.l (a0)
0003874E <AmiBlitz3.ab2@27913>    BEQ 'store
00038750 <AmiBlitz3.ab2@27914>   ADDQ.l #4,d0
00038752 <AmiBlitz3.ab2@27915>   ADDQ.l #8,a0
00038758 <AmiBlitz3.ab2@27916>   CMP.l #16,d0
0003875C <AmiBlitz3.ab2@27917>    BCS 'loop
00038766 <AmiBlitz3.ab2@27918>   MOVE.l #2,maxregs
0003876C <AmiBlitz3.ab2@27919>   CMP.l #20,d0
00038770 <AmiBlitz3.ab2@27920>    BCS 'loop
0003877A <AmiBlitz3.ab2@27921>   MOVE.l #1,maxregs
00038780 <AmiBlitz3.ab2@27922>   CMP.l #24,d0
00038784 <AmiBlitz3.ab2@27923>    BCS 'loop
0003878A <AmiBlitz3.ab2@27924> JMP toovarerr
00038790 <AmiBlitz3.ab2@27927>   TST.b fpu
00038794 <AmiBlitz3.ab2@27928>    BEQ 'nofpu
00038796 <AmiBlitz3.ab2@27929>   MOVE.l a2,(a0)
0003879C <AmiBlitz3.ab2@27930>   MOVE.w 4(a2),4(a0)
000387A0 <AmiBlitz3.ab2@27931>   MOVE.w d7,6(a0)
000387A6 <AmiBlitz3.ab2@27932>   MOVE.l fpucode,d1
000387B0 <AmiBlitz3.ab2@27933>   SUB.l #$80,fpucodeglobal
000387BA <AmiBlitz3.ab2@27934>   SUB.l #$80,fpucodelocal
000387C0 <AmiBlitz3.ab2@27935>   JSR writelong
000387C4 <AmiBlitz3.ab2@27936>   MOVE.w 4(a2),d1
000387CA <AmiBlitz3.ab2@27937>   JSR writeword
000387D0 <AmiBlitz3.ab2@27940>   MOVE.w lastchar,d0
000387D4 <AmiBlitz3.ab2@27941>   CMP.w #":",d0
000387D8 <AmiBlitz3.ab2@27942>    BEQ 'nopar
000387DA <AmiBlitz3.ab2@27943>   TST.w d0
000387DE <AmiBlitz3.ab2@27944>    BEQ 'nopar
000387E2 <AmiBlitz3.ab2@27945>   CMP.w #",",d0
000387E6 <AmiBlitz3.ab2@27946>   BNE JUMP_syntaxerr
000387EA <AmiBlitz3.ab2@27947> BRA 'l2
000387EC <AmiBlitz3.ab2@27950>    MOVE.l (a7)+,d7
000387EE <AmiBlitz3.ab2@27951> RTS
000387F0 <AmiBlitz3.ab2@27954>   MOVEQ #1,d7
000387F8 <AmiBlitz3.ab2@27955>   MOVE.b #1,newvariable
000387FE <AmiBlitz3.ab2@27956>   LEA firstlocal,a2
00038804 <AmiBlitz3.ab2@27957>   JSR findvariable
0003880A <AmiBlitz3.ab2@27958>   CLR.b newvariable
00038810 <AmiBlitz3.ab2@27959>   CMP.l #-1,d0
00038814 <AmiBlitz3.ab2@27960>   BEQ.w JUMP_notypeerr2
0003881E <AmiBlitz3.ab2@27961>   MOVE.l fpucodelocal,fpucode
00038822 <AmiBlitz3.ab2@27962> BRA 'go
00038826 <AmiBlitz3.ab2@27965>   CMP.b #".",d0
0003882A <AmiBlitz3.ab2@27966>    BNE 'l1
0003882E <AmiBlitz3.ab2@27967>   BSR JUMP_get1bytemain
00038832 <AmiBlitz3.ab2@27968>   BSR JUMP_get1bytemain
00038836 <AmiBlitz3.ab2@27971>   ORI .b #$20,d0
0003883A <AmiBlitz3.ab2@27972>   CMP.b #"d",d0
0003883E <AmiBlitz3.ab2@27973>    BNE JUMP_illeaerr
00038842 <AmiBlitz3.ab2@27974>   BSR JUMP_get1bytemain
00038846 <AmiBlitz3.ab2@27975>   SUB.b #$30,d0
0003884A <AmiBlitz3.ab2@27976>   CMP.b #$7,d0
0003884E <AmiBlitz3.ab2@27977>    BGT JUMP_syntaxerr
00038852 <AmiBlitz3.ab2@27978>   MOVE.w #$49c0,d1
00038854 <AmiBlitz3.ab2@27979>   ADD.b d0,d1
0003885A <AmiBlitz3.ab2@27980>   JSR writeword
0003885E <AmiBlitz3.ab2@27981>   BSR JUMP_get1bytemain
00038860 <AmiBlitz3.ab2@27982> RTS
00038866 <AmiBlitz3.ab2@27986>   LEA lastpath,a0
0003886A <AmiBlitz3.ab2@27987>   LEA usedpath(PC),A1
0003886C <AmiBlitz3.ab2@27990>     MOVE.b (a0)+,(a1)+
00038870 <AmiBlitz3.ab2@27991>   BNE 'l1
00038876 <AmiBlitz3.ab2@27993>   LEA lastpath2,a0
0003887C <AmiBlitz3.ab2@27994>   LEA lastpath,A1
0003887E <AmiBlitz3.ab2@27997>     MOVE.b (a0)+,(a1)+
00038882 <AmiBlitz3.ab2@27998>   BNE 'l2
00038884 <AmiBlitz3.ab2@27999> RTS
0003888A <AmiBlitz3.ab2@28003>   TST.b objectcount
0003888E <AmiBlitz3.ab2@28004>   BEQ 'l2a
00038894 <AmiBlitz3.ab2@28005> JMP macnesterr
0003889A <AmiBlitz3.ab2@28008>   LEA devo,a0
000388A0 <AmiBlitz3.ab2@28009>   ADDQ.b #1,objectcount
000388A4 <AmiBlitz3.ab2@28010>   MOVEM.l a1/d2,-(a7)
000388AA <AmiBlitz3.ab2@28011>   LEA ptr_parameterstore,a1
000388AC <AmiBlitz3.ab2@28014>     MOVE.b (a0)+,(a1)+
000388B0 <AmiBlitz3.ab2@28015>   BNE 'l1
000388B2 <AmiBlitz3.ab2@28017>   MOVEQ #13,d2
000388B8 <AmiBlitz3.ab2@28018>   JSR findlabel2
000388BC <AmiBlitz3.ab2@28019>   BNE 'd
000388C0 <AmiBlitz3.ab2@28020>   TST.l 8(a2)
000388C4 <AmiBlitz3.ab2@28021>   BEQ 'd
000388CA <AmiBlitz3.ab2@28022>   SUBQ.b #1,objectcount
000388CE <AmiBlitz3.ab2@28023>   MOVEM.l (a7)+,a1/d2
000388D4 <AmiBlitz3.ab2@28024>   JSR skiprest
000388DC <AmiBlitz3.ab2@28025>   MOVE.b #1,developobject
000388DE <AmiBlitz3.ab2@28026> RTS
000388E2 <AmiBlitz3.ab2@28029>   MOVEM.l (a7)+,a1/d2
000388EA <AmiBlitz3.ab2@28030>   MOVE.b #1,resdisable
000388F0 <AmiBlitz3.ab2@28033>   CLR.b developobject
000388F6 <AmiBlitz3.ab2@28034> JMP do_Macro
000388FC <AmiBlitz3.ab2@28038> JMP illeaerr
00038902 <AmiBlitz3.ab2@28042>   CLR.b typecheck
00038908 <AmiBlitz3.ab2@28043>   CLR.b declare
0003890E <AmiBlitz3.ab2@28044>   CLR.b declare2
00038912 <AmiBlitz3.ab2@28045>   SUB.b #$30,d0
00038916 <AmiBlitz3.ab2@28046>   BTST #0,d0
0003891A <AmiBlitz3.ab2@28047>   BEQ 'l1
00038922 <AmiBlitz3.ab2@28048>   MOVE.b #1,declare
00038926 <AmiBlitz3.ab2@28051>   BTST #1,d0
0003892A <AmiBlitz3.ab2@28052>   BEQ 'l2
00038932 <AmiBlitz3.ab2@28053>   MOVE.b #1,declare2
00038936 <AmiBlitz3.ab2@28056>   BTST #2,d0
0003893A <AmiBlitz3.ab2@28057>   BEQ 'l3
00038942 <AmiBlitz3.ab2@28058>   MOVE.b #1,typecheck
00038946 <AmiBlitz3.ab2@28060>   BSR.w JUMP_get1bytemain
00038948 <AmiBlitz3.ab2@28061> RTS
0003894E <AmiBlitz3.ab2@28064> JMP get1bytemain
00038978 <AmiBlitz3.ab2@28068>   !basic
00038998 <AmiBlitz3.ab2@28070>   FillMem ?residents_table,?residents_table_end-?residents_table,0
000389B6 <AmiBlitz3.ab2@28071>   !asm
000389B8 <AmiBlitz3.ab2@28072> Return
000389BA <AmiBlitz3.ab2@28077>   MOVE.l d2,-(a7)                                          ; D2 -> stack
000389BC <AmiBlitz3.ab2@28078>   ADDQ #1,a5
000389BE <AmiBlitz3.ab2@28079>   MOVE.l a5,-(a7)
000389E8 <AmiBlitz3.ab2@28080>   !basic
000389EE <AmiBlitz3.ab2@28081>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
000389F8 <AmiBlitz3.ab2@28082>   If _myD0
00038A38 <AmiBlitz3.ab2@28083>     newconst$ = UCase$(Peek.s(_myD0))
00038A3E <AmiBlitz3.ab2@28084>   Else
00038A6C <AmiBlitz3.ab2@28085>     error{"INTERNAL: invalid pointer in check_newconstants!"}
00038A94 <AmiBlitz3.ab2@28086>     nwconst$="xxx"
00038ABC <AmiBlitz3.ab2@28088>   condata$ =""
00038ACC <AmiBlitz3.ab2@28089>   Poke.b ?skip_bytes,0
00038B28 <AmiBlitz3.ab2@28090>   If Left$(newconst$,2) = "__"
00038B82 <AmiBlitz3.ab2@28091>     Select Mid$(newconst$,3,4)
00038BA6 <AmiBlitz3.ab2@28093>      Case "DATE"
00038C00 <AmiBlitz3.ab2@28094>       Select Mid$(newconst$,3,6)
00038C3E <AmiBlitz3.ab2@28095>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00038C82 <AmiBlitz3.ab2@28096>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
00038C90 <AmiBlitz3.ab2@28097>       End Select
00038C9E <AmiBlitz3.ab2@28098>       i.l=SystemDate
00038CC4 <AmiBlitz3.ab2@28099>       condata$ = Date$ (i)
00038D42 <AmiBlitz3.ab2@28100>       condata$ = Replace$(condata$,"/",".")
00038D6C <AmiBlitz3.ab2@28102>      Case "VER_"
00038D7C <AmiBlitz3.ab2@28105>       actual_version.l = Peek.l(?versioninformation)
00038D8C <AmiBlitz3.ab2@28106>       actual_build.l   = Peek.l(?number_of_builds)
00038DB0 <AmiBlitz3.ab2@28108>       Format ""
00038E0A <AmiBlitz3.ab2@28109>       Select Mid$(newconst$,3,9)
00038E2E <AmiBlitz3.ab2@28111>        Case "VER_MAJOR"
00038E6A <AmiBlitz3.ab2@28112>         condata$ = Str$(actual_version LSR 24)
00038E94 <AmiBlitz3.ab2@28114>        Case "VER_MINOR"
00038ED8 <AmiBlitz3.ab2@28115>         condata$ = Str$((actual_version LSL 8) LSR 24)
00038F02 <AmiBlitz3.ab2@28117>        Case "VER_PATCH"
00038F46 <AmiBlitz3.ab2@28118>         condata$ = Str$((actual_version LSL 16) LSR 24 )
00038F70 <AmiBlitz3.ab2@28120>        Case "VER_BUILD"
00038F94 <AmiBlitz3.ab2@28121>         Format ""
00038FC8 <AmiBlitz3.ab2@28122>         condata$ = Str$(actual_build)
00038FCE <AmiBlitz3.ab2@28124>        Default
00038FF6 <AmiBlitz3.ab2@28125>         condata$ = "{unknown compiler constant}"
00039004 <AmiBlitz3.ab2@28127>       End Select
00039028 <AmiBlitz3.ab2@28128>       Format ""
00039038 <AmiBlitz3.ab2@28129>       Poke.b ?skip_bytes,11
00039062 <AmiBlitz3.ab2@28131>      Case "THIS"
000390BC <AmiBlitz3.ab2@28132>       Select Mid$(newconst$,3,9)
000390E0 <AmiBlitz3.ab2@28134>        Case "THIS_FUNC"
000390F0 <AmiBlitz3.ab2@28135>         Poke.b ?skip_bytes,15
00039110 <AmiBlitz3.ab2@28136>         If Peek.l(?currentfunction)<>0
0003915C <AmiBlitz3.ab2@28137>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
00039162 <AmiBlitz3.ab2@28138>         Else
0003918A <AmiBlitz3.ab2@28139>           condata$ = "GLOBAL"
000391B4 <AmiBlitz3.ab2@28142>        Case "THIS_INCL"
000391C4 <AmiBlitz3.ab2@28143>         Poke.b ?skip_bytes,14
000391E4 <AmiBlitz3.ab2@28144>         If Peek.l(?includetemp2)<>0
00039232 <AmiBlitz3.ab2@28145>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003925C <AmiBlitz3.ab2@28148>        Case "THIS_POIN"
0003926C <AmiBlitz3.ab2@28149>         Poke.b ?skip_bytes,14
0003928C <AmiBlitz3.ab2@28150>         If Peek.l(?currentfunction)<>0
000392BA <AmiBlitz3.ab2@28151>           condata$ = Hex$(Peek.l(?currentfunction))
000392C8 <AmiBlitz3.ab2@28154>       End Select
000392F2 <AmiBlitz3.ab2@28156>      Case "CODE"
00039302 <AmiBlitz3.ab2@28157>       Poke.b ?skip_bytes,10
00039364 <AmiBlitz3.ab2@28158>       If Mid$(newconst$,3,8) = "CODELINE"
000393A0 <AmiBlitz3.ab2@28159>         condata$ = Str$(Peek.l(?globallinecount))
000393AE <AmiBlitz3.ab2@28162>     End Select
000393B4 <AmiBlitz3.ab2@28164>   Else
00039408 <AmiBlitz3.ab2@28165>     Select Left$(newconst$,1)
0003942C <AmiBlitz3.ab2@28167>      Case "R"
0003943C <AmiBlitz3.ab2@28168>       Poke.b ?skip_bytes,3
000394B4 <AmiBlitz3.ab2@28169>       For i = 1 To Vallong(Mid$(newconst$,2,2))
00039534 <AmiBlitz3.ab2@28170>         condata$ = condata$ + Mid$(newconst$,4,1)
00039544 <AmiBlitz3.ab2@28171>       Next
0003956E <AmiBlitz3.ab2@28173>      Case "N"
0003957E <AmiBlitz3.ab2@28174>       Poke.b ?skip_bytes,1
000395A2 <AmiBlitz3.ab2@28175>       condata$ = Chr$(10)
000395A8 <AmiBlitz3.ab2@28177>      Default
000395BA <AmiBlitz3.ab2@28178>       char1.b = Peek.b(&newconst$)
000395D2 <AmiBlitz3.ab2@28179>       char2.b = Peek.b(&newconst$+1)
000395DE <AmiBlitz3.ab2@28180>       nibble1.l = -1
000395EA <AmiBlitz3.ab2@28181>       nibble2.l = -1
00039628 <AmiBlitz3.ab2@28183>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
00039666 <AmiBlitz3.ab2@28184>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
000396AA <AmiBlitz3.ab2@28186>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
000396EE <AmiBlitz3.ab2@28187>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
00039732 <AmiBlitz3.ab2@28189>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
00039776 <AmiBlitz3.ab2@28190>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003979C <AmiBlitz3.ab2@28192>       If nibble1>=0 AND nibble2>=0
000397B2 <AmiBlitz3.ab2@28193>         newchar.l = (nibble1 LSL 4) + (nibble2)
000397D6 <AmiBlitz3.ab2@28194>         condata$ = Chr$(newchar)
000397E6 <AmiBlitz3.ab2@28195>         Poke.b ?skip_bytes,2
000397F4 <AmiBlitz3.ab2@28198>     End Select
00039854 <AmiBlitz3.ab2@28200>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003997A <AmiBlitz3.ab2@28201>     !cout{"detected unknown const: " + newconst$}
000399AE <AmiBlitz3.ab2@28202>     condata$ = newconst$
000399C4 <AmiBlitz3.ab2@28205>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
000399C6 <AmiBlitz3.ab2@28206>   MOVE.l d0,d2
000399C8 <AmiBlitz3.ab2@28207>   MOVE.l d2,-(a7)
000399CE <AmiBlitz3.ab2@28209>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
000399D0 <AmiBlitz3.ab2@28210>   MOVE.l d0,a0
000399D2 <AmiBlitz3.ab2@28213>     MOVE.b (a0)+,d1
000399D8 <AmiBlitz3.ab2@28214>     JSR pokedata1b
000399DC <AmiBlitz3.ab2@28215>  DBF d2,'l1
000399FA <AmiBlitz3.ab2@28217>   !asm
000399FC <AmiBlitz3.ab2@28218>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
000399FE <AmiBlitz3.ab2@28219>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00039A00 <AmiBlitz3.ab2@28220>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
00039A06 <AmiBlitz3.ab2@28221>   ADD.l #1,d2
00039A0C <AmiBlitz3.ab2@28223>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
00039A12 <AmiBlitz3.ab2@28224>   MOVE.b skip_bytes,D0
00039A14 <AmiBlitz3.ab2@28225>   ADD.l D0,a5
00039A16 <AmiBlitz3.ab2@28226> RTS
00039A1A <AmiBlitz3.ab2@28301> MOVEM.l a3/d1,-(a7)
00039A20 <AmiBlitz3.ab2@28303> CLR.b a4a5store
00039A22 <AmiBlitz3.ab2@28304> 'continue: MOVE.b (a3)+,d1
00039A26 <AmiBlitz3.ab2@28305> CMP.b #$15,d1
00039A2A <AmiBlitz3.ab2@28306> BEQ 'find
00039A2E <AmiBlitz3.ab2@28307> CMP.b #$14,d1
00039A32 <AmiBlitz3.ab2@28308> BEQ 'find
00039A36 <AmiBlitz3.ab2@28309> CMP.b #$ff,d1
00039A3A <AmiBlitz3.ab2@28310> BNE 'continue
00039A3E <AmiBlitz3.ab2@28311> BRA 'notfind
00039A44 <AmiBlitz3.ab2@28313> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
00039A4A <AmiBlitz3.ab2@28314> JSR writelong
00039A52 <AmiBlitz3.ab2@28315> MOVE.b #1,a4a5store
00039A56 <AmiBlitz3.ab2@28316> 'notfind: MOVEM.l (a7)+,a3/d1
00039A58 <AmiBlitz3.ab2@28317> RTS
00039A5E <AmiBlitz3.ab2@28320> TST.b a4a5store
00039A62 <AmiBlitz3.ab2@28321> BEQ 'no
00039A68 <AmiBlitz3.ab2@28322> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
00039A6E <AmiBlitz3.ab2@28323> JSR writelong
00039A74 <AmiBlitz3.ab2@28324> CLR.b a4a5store
00039A76 <AmiBlitz3.ab2@28325> 'no RTS
00039A76 <internal_commands.ab2@1> INCLUDE "internal_commands.ab2"
00039A7A <internal_commands.ab2@13> INCLUDE "internal_commands.ab2"
00039A7C <internal_commands.ab2@15> INCLUDE "internal_commands.ab2"
00039A84 <internal_commands.ab2@16> INCLUDE "internal_commands.ab2"
00039A90 <internal_commands.ab2@17> INCLUDE "internal_commands.ab2"
00039A94 <internal_commands.ab2@21> INCLUDE "internal_commands.ab2"
00039A96 <internal_commands.ab2@22> INCLUDE "internal_commands.ab2"
00039A9A <internal_commands.ab2@23> INCLUDE "internal_commands.ab2"
00039AE3 <internal_commands.ab2@24> INCLUDE "internal_commands.ab2"
00039AE4 <internal_commands.ab2@25> INCLUDE "internal_commands.ab2"
00039AE8 <internal_commands.ab2@28> INCLUDE "internal_commands.ab2"
00039AEA <internal_commands.ab2@29> INCLUDE "internal_commands.ab2"
00039AEE <internal_commands.ab2@30> INCLUDE "internal_commands.ab2"
00039B0A <internal_commands.ab2@31> INCLUDE "internal_commands.ab2"
00039B0E <internal_commands.ab2@35> INCLUDE "internal_commands.ab2"
00039B10 <internal_commands.ab2@36> INCLUDE "internal_commands.ab2"
00039B14 <internal_commands.ab2@37> INCLUDE "internal_commands.ab2"
00039B71 <internal_commands.ab2@38> INCLUDE "internal_commands.ab2"
00039B72 <internal_commands.ab2@39> INCLUDE "internal_commands.ab2"
00039B76 <internal_commands.ab2@42> INCLUDE "internal_commands.ab2"
00039B78 <internal_commands.ab2@43> INCLUDE "internal_commands.ab2"
00039B7D <internal_commands.ab2@44> INCLUDE "internal_commands.ab2"
00039B8D <internal_commands.ab2@45> INCLUDE "internal_commands.ab2"
00039B8E <internal_commands.ab2@46> INCLUDE "internal_commands.ab2"
00039B92 <internal_commands.ab2@49> INCLUDE "internal_commands.ab2"
00039B94 <internal_commands.ab2@50> INCLUDE "internal_commands.ab2"
00039B9A <internal_commands.ab2@51> INCLUDE "internal_commands.ab2"
00039BAA <internal_commands.ab2@52> INCLUDE "internal_commands.ab2"
00039BAE <internal_commands.ab2@56> INCLUDE "internal_commands.ab2"
00039BB0 <internal_commands.ab2@57> INCLUDE "internal_commands.ab2"
00039BB7 <internal_commands.ab2@58> INCLUDE "internal_commands.ab2"
00039BB8 <internal_commands.ab2@59> INCLUDE "internal_commands.ab2"
00039BBC <internal_commands.ab2@63> INCLUDE "internal_commands.ab2"
00039BBE <internal_commands.ab2@64> INCLUDE "internal_commands.ab2"
00039BC8 <internal_commands.ab2@65> INCLUDE "internal_commands.ab2"
00039BFB <internal_commands.ab2@66> INCLUDE "internal_commands.ab2"
00039BFC <internal_commands.ab2@67> INCLUDE "internal_commands.ab2"
00039C00 <internal_commands.ab2@70> INCLUDE "internal_commands.ab2"
00039C02 <internal_commands.ab2@71> INCLUDE "internal_commands.ab2"
00039C0B <internal_commands.ab2@72> INCLUDE "internal_commands.ab2"
00039C46 <internal_commands.ab2@73> INCLUDE "internal_commands.ab2"
00039C4A <internal_commands.ab2@77> INCLUDE "internal_commands.ab2"
00039C4C <internal_commands.ab2@78> INCLUDE "internal_commands.ab2"
00039C56 <internal_commands.ab2@79> INCLUDE "internal_commands.ab2"
00039C57 <internal_commands.ab2@80> INCLUDE "internal_commands.ab2"
00039C58 <internal_commands.ab2@81> INCLUDE "internal_commands.ab2"
00039C5C <internal_commands.ab2@84> INCLUDE "internal_commands.ab2"
00039C5E <internal_commands.ab2@85> INCLUDE "internal_commands.ab2"
00039C61 <internal_commands.ab2@86> INCLUDE "internal_commands.ab2"
00039C78 <internal_commands.ab2@87> INCLUDE "internal_commands.ab2"
00039C7C <internal_commands.ab2@91> INCLUDE "internal_commands.ab2"
00039C7E <internal_commands.ab2@92> INCLUDE "internal_commands.ab2"
00039C84 <internal_commands.ab2@93> INCLUDE "internal_commands.ab2"
00039C91 <internal_commands.ab2@94> INCLUDE "internal_commands.ab2"
00039C92 <internal_commands.ab2@95> INCLUDE "internal_commands.ab2"
00039C96 <internal_commands.ab2@98> INCLUDE "internal_commands.ab2"
00039C98 <internal_commands.ab2@99> INCLUDE "internal_commands.ab2"
00039C9E <internal_commands.ab2@100> INCLUDE "internal_commands.ab2"
00039CAA <internal_commands.ab2@101> INCLUDE "internal_commands.ab2"
00039CAE <internal_commands.ab2@105> INCLUDE "internal_commands.ab2"
00039CB0 <internal_commands.ab2@106> INCLUDE "internal_commands.ab2"
00039CB7 <internal_commands.ab2@107> INCLUDE "internal_commands.ab2"
00039CC4 <internal_commands.ab2@108> INCLUDE "internal_commands.ab2"
00039CC8 <internal_commands.ab2@112> INCLUDE "internal_commands.ab2"
00039CCA <internal_commands.ab2@113> INCLUDE "internal_commands.ab2"
00039CCF <internal_commands.ab2@114> INCLUDE "internal_commands.ab2"
00039CDC <internal_commands.ab2@115> INCLUDE "internal_commands.ab2"
00039CE0 <internal_commands.ab2@119> INCLUDE "internal_commands.ab2"
00039CE2 <internal_commands.ab2@120> INCLUDE "internal_commands.ab2"
00039CEA <internal_commands.ab2@121> INCLUDE "internal_commands.ab2"
00039CEB <internal_commands.ab2@122> INCLUDE "internal_commands.ab2"
00039CEC <internal_commands.ab2@123> INCLUDE "internal_commands.ab2"
00039CF0 <internal_commands.ab2@126> INCLUDE "internal_commands.ab2"
00039CF2 <internal_commands.ab2@127> INCLUDE "internal_commands.ab2"
00039CFA <internal_commands.ab2@128> INCLUDE "internal_commands.ab2"
00039CFB <internal_commands.ab2@129> INCLUDE "internal_commands.ab2"
00039CFC <internal_commands.ab2@130> INCLUDE "internal_commands.ab2"
00039D00 <internal_commands.ab2@133> INCLUDE "internal_commands.ab2"
00039D02 <internal_commands.ab2@134> INCLUDE "internal_commands.ab2"
00039D0B <internal_commands.ab2@135> INCLUDE "internal_commands.ab2"
00039D16 <internal_commands.ab2@136> INCLUDE "internal_commands.ab2"
00039D1A <internal_commands.ab2@140> INCLUDE "internal_commands.ab2"
00039D1C <internal_commands.ab2@141> INCLUDE "internal_commands.ab2"
00039D24 <internal_commands.ab2@142> INCLUDE "internal_commands.ab2"
00039D2F <internal_commands.ab2@143> INCLUDE "internal_commands.ab2"
00039D30 <internal_commands.ab2@144> INCLUDE "internal_commands.ab2"
00039D34 <internal_commands.ab2@147> INCLUDE "internal_commands.ab2"
00039D36 <internal_commands.ab2@148> INCLUDE "internal_commands.ab2"
00039D3D <internal_commands.ab2@149> INCLUDE "internal_commands.ab2"
00039D9F <internal_commands.ab2@150> INCLUDE "internal_commands.ab2"
00039DA0 <internal_commands.ab2@151> INCLUDE "internal_commands.ab2"
00039DA4 <internal_commands.ab2@154> INCLUDE "internal_commands.ab2"
00039DA6 <internal_commands.ab2@155> INCLUDE "internal_commands.ab2"
00039DAD <internal_commands.ab2@156> INCLUDE "internal_commands.ab2"
00039DBC <internal_commands.ab2@157> INCLUDE "internal_commands.ab2"
00039DC0 <internal_commands.ab2@161> INCLUDE "internal_commands.ab2"
00039DC2 <internal_commands.ab2@162> INCLUDE "internal_commands.ab2"
00039DC6 <internal_commands.ab2@163> INCLUDE "internal_commands.ab2"
00039DFC <internal_commands.ab2@164> INCLUDE "internal_commands.ab2"
00039E00 <internal_commands.ab2@168> INCLUDE "internal_commands.ab2"
00039E02 <internal_commands.ab2@169> INCLUDE "internal_commands.ab2"
00039E07 <internal_commands.ab2@170> INCLUDE "internal_commands.ab2"
00039E16 <internal_commands.ab2@171> INCLUDE "internal_commands.ab2"
00039E1A <internal_commands.ab2@175> INCLUDE "internal_commands.ab2"
00039E1C <internal_commands.ab2@176> INCLUDE "internal_commands.ab2"
00039E1F <internal_commands.ab2@177> INCLUDE "internal_commands.ab2"
00039E40 <internal_commands.ab2@178> INCLUDE "internal_commands.ab2"
00039E44 <internal_commands.ab2@182> INCLUDE "internal_commands.ab2"
00039E46 <internal_commands.ab2@183> INCLUDE "internal_commands.ab2"
00039E4B <internal_commands.ab2@184> INCLUDE "internal_commands.ab2"
00039E57 <internal_commands.ab2@185> INCLUDE "internal_commands.ab2"
00039E58 <internal_commands.ab2@186> INCLUDE "internal_commands.ab2"
00039E5C <internal_commands.ab2@189> INCLUDE "internal_commands.ab2"
00039E5E <internal_commands.ab2@190> INCLUDE "internal_commands.ab2"
00039E63 <internal_commands.ab2@191> INCLUDE "internal_commands.ab2"
00039E7A <internal_commands.ab2@192> INCLUDE "internal_commands.ab2"
00039E7E <internal_commands.ab2@196> INCLUDE "internal_commands.ab2"
00039E80 <internal_commands.ab2@197> INCLUDE "internal_commands.ab2"
00039E85 <internal_commands.ab2@198> INCLUDE "internal_commands.ab2"
00039E94 <internal_commands.ab2@199> INCLUDE "internal_commands.ab2"
00039E98 <internal_commands.ab2@203> INCLUDE "internal_commands.ab2"
00039E9A <internal_commands.ab2@204> INCLUDE "internal_commands.ab2"
00039E9F <internal_commands.ab2@205> INCLUDE "internal_commands.ab2"
00039EBE <internal_commands.ab2@206> INCLUDE "internal_commands.ab2"
00039EC2 <internal_commands.ab2@210> INCLUDE "internal_commands.ab2"
00039EC4 <internal_commands.ab2@211> INCLUDE "internal_commands.ab2"
00039EC9 <internal_commands.ab2@212> INCLUDE "internal_commands.ab2"
00039EE8 <internal_commands.ab2@213> INCLUDE "internal_commands.ab2"
00039EEC <internal_commands.ab2@217> INCLUDE "internal_commands.ab2"
00039EEE <internal_commands.ab2@218> INCLUDE "internal_commands.ab2"
00039EF4 <internal_commands.ab2@219> INCLUDE "internal_commands.ab2"
00039EF5 <internal_commands.ab2@220> INCLUDE "internal_commands.ab2"
00039EF6 <internal_commands.ab2@221> INCLUDE "internal_commands.ab2"
00039EFA <internal_commands.ab2@224> INCLUDE "internal_commands.ab2"
00039EFC <internal_commands.ab2@225> INCLUDE "internal_commands.ab2"
00039F01 <internal_commands.ab2@226> INCLUDE "internal_commands.ab2"
00039F02 <internal_commands.ab2@227> INCLUDE "internal_commands.ab2"
00039F06 <internal_commands.ab2@231> INCLUDE "internal_commands.ab2"
00039F08 <internal_commands.ab2@232> INCLUDE "internal_commands.ab2"
00039F0D <internal_commands.ab2@233> INCLUDE "internal_commands.ab2"
00039F1A <internal_commands.ab2@234> INCLUDE "internal_commands.ab2"
00039F1E <internal_commands.ab2@238> INCLUDE "internal_commands.ab2"
00039F20 <internal_commands.ab2@239> INCLUDE "internal_commands.ab2"
00039F25 <internal_commands.ab2@240> INCLUDE "internal_commands.ab2"
00039F34 <internal_commands.ab2@241> INCLUDE "internal_commands.ab2"
00039F38 <internal_commands.ab2@245> INCLUDE "internal_commands.ab2"
00039F3A <internal_commands.ab2@246> INCLUDE "internal_commands.ab2"
00039F3F <internal_commands.ab2@247> INCLUDE "internal_commands.ab2"
00039F4E <internal_commands.ab2@248> INCLUDE "internal_commands.ab2"
00039F52 <internal_commands.ab2@252> INCLUDE "internal_commands.ab2"
00039F54 <internal_commands.ab2@253> INCLUDE "internal_commands.ab2"
00039F5A <internal_commands.ab2@254> INCLUDE "internal_commands.ab2"
00039F77 <internal_commands.ab2@255> INCLUDE "internal_commands.ab2"
00039F78 <internal_commands.ab2@256> INCLUDE "internal_commands.ab2"
00039F7C <internal_commands.ab2@259> INCLUDE "internal_commands.ab2"
00039F7E <internal_commands.ab2@260> INCLUDE "internal_commands.ab2"
00039F84 <internal_commands.ab2@261> INCLUDE "internal_commands.ab2"
00039FA1 <internal_commands.ab2@262> INCLUDE "internal_commands.ab2"
00039FA2 <internal_commands.ab2@263> INCLUDE "internal_commands.ab2"
00039FA6 <internal_commands.ab2@266> INCLUDE "internal_commands.ab2"
00039FA8 <internal_commands.ab2@267> INCLUDE "internal_commands.ab2"
00039FAB <internal_commands.ab2@268> INCLUDE "internal_commands.ab2"
00039FC2 <internal_commands.ab2@269> INCLUDE "internal_commands.ab2"
00039FC6 <internal_commands.ab2@273> INCLUDE "internal_commands.ab2"
00039FC8 <internal_commands.ab2@274> INCLUDE "internal_commands.ab2"
00039FCB <internal_commands.ab2@275> INCLUDE "internal_commands.ab2"
00039FDA <internal_commands.ab2@276> INCLUDE "internal_commands.ab2"
00039FDE <internal_commands.ab2@280> INCLUDE "internal_commands.ab2"
00039FE0 <internal_commands.ab2@281> INCLUDE "internal_commands.ab2"
00039FE5 <internal_commands.ab2@282> INCLUDE "internal_commands.ab2"
00039FE6 <internal_commands.ab2@283> INCLUDE "internal_commands.ab2"
00039FEA <internal_commands.ab2@287> INCLUDE "internal_commands.ab2"
00039FEC <internal_commands.ab2@288> INCLUDE "internal_commands.ab2"
00039FF0 <internal_commands.ab2@289> INCLUDE "internal_commands.ab2"
0003A005 <internal_commands.ab2@290> INCLUDE "internal_commands.ab2"
0003A006 <internal_commands.ab2@291> INCLUDE "internal_commands.ab2"
0003A00A <internal_commands.ab2@294> INCLUDE "internal_commands.ab2"
0003A00C <internal_commands.ab2@295> INCLUDE "internal_commands.ab2"
0003A013 <internal_commands.ab2@296> INCLUDE "internal_commands.ab2"
0003A02C <internal_commands.ab2@297> INCLUDE "internal_commands.ab2"
0003A030 <internal_commands.ab2@301> INCLUDE "internal_commands.ab2"
0003A032 <internal_commands.ab2@302> INCLUDE "internal_commands.ab2"
0003A039 <internal_commands.ab2@303> INCLUDE "internal_commands.ab2"
0003A044 <internal_commands.ab2@304> INCLUDE "internal_commands.ab2"
0003A048 <internal_commands.ab2@308> INCLUDE "internal_commands.ab2"
0003A04A <internal_commands.ab2@309> INCLUDE "internal_commands.ab2"
0003A04F <internal_commands.ab2@310> INCLUDE "internal_commands.ab2"
0003A066 <internal_commands.ab2@311> INCLUDE "internal_commands.ab2"
0003A06A <internal_commands.ab2@315> INCLUDE "internal_commands.ab2"
0003A06C <internal_commands.ab2@316> INCLUDE "internal_commands.ab2"
0003A070 <internal_commands.ab2@317> INCLUDE "internal_commands.ab2"
0003A087 <internal_commands.ab2@318> INCLUDE "internal_commands.ab2"
0003A088 <internal_commands.ab2@319> INCLUDE "internal_commands.ab2"
0003A08C <internal_commands.ab2@322> INCLUDE "internal_commands.ab2"
0003A08E <internal_commands.ab2@323> INCLUDE "internal_commands.ab2"
0003A093 <internal_commands.ab2@324> INCLUDE "internal_commands.ab2"
0003A094 <internal_commands.ab2@325> INCLUDE "internal_commands.ab2"
0003A098 <internal_commands.ab2@329> INCLUDE "internal_commands.ab2"
0003A09A <internal_commands.ab2@330> INCLUDE "internal_commands.ab2"
0003A09F <internal_commands.ab2@331> INCLUDE "internal_commands.ab2"
0003A0A3 <internal_commands.ab2@332> INCLUDE "internal_commands.ab2"
0003A0A4 <internal_commands.ab2@333> INCLUDE "internal_commands.ab2"
0003A0A8 <internal_commands.ab2@336> INCLUDE "internal_commands.ab2"
0003A0AA <internal_commands.ab2@337> INCLUDE "internal_commands.ab2"
0003A0B1 <internal_commands.ab2@338> INCLUDE "internal_commands.ab2"
0003A0C9 <internal_commands.ab2@339> INCLUDE "internal_commands.ab2"
0003A0CA <internal_commands.ab2@340> INCLUDE "internal_commands.ab2"
0003A0CE <internal_commands.ab2@343> INCLUDE "internal_commands.ab2"
0003A0D0 <internal_commands.ab2@344> INCLUDE "internal_commands.ab2"
0003A0D7 <internal_commands.ab2@345> INCLUDE "internal_commands.ab2"
0003A0DC <internal_commands.ab2@346> INCLUDE "internal_commands.ab2"
0003A0E0 <internal_commands.ab2@350> INCLUDE "internal_commands.ab2"
0003A0E2 <internal_commands.ab2@351> INCLUDE "internal_commands.ab2"
0003A0E9 <internal_commands.ab2@352> INCLUDE "internal_commands.ab2"
0003A0EE <internal_commands.ab2@353> INCLUDE "internal_commands.ab2"
0003A0F2 <internal_commands.ab2@357> INCLUDE "internal_commands.ab2"
0003A0F4 <internal_commands.ab2@358> INCLUDE "internal_commands.ab2"
0003A0FB <internal_commands.ab2@359> INCLUDE "internal_commands.ab2"
0003A116 <internal_commands.ab2@360> INCLUDE "internal_commands.ab2"
0003A11A <internal_commands.ab2@364> INCLUDE "internal_commands.ab2"
0003A11C <internal_commands.ab2@365> INCLUDE "internal_commands.ab2"
0003A124 <internal_commands.ab2@366> INCLUDE "internal_commands.ab2"
0003A13D <internal_commands.ab2@367> INCLUDE "internal_commands.ab2"
0003A13E <internal_commands.ab2@368> INCLUDE "internal_commands.ab2"
0003A142 <internal_commands.ab2@371> INCLUDE "internal_commands.ab2"
0003A144 <internal_commands.ab2@372> INCLUDE "internal_commands.ab2"
0003A14A <internal_commands.ab2@373> INCLUDE "internal_commands.ab2"
0003A14B <internal_commands.ab2@374> INCLUDE "internal_commands.ab2"
0003A14C <internal_commands.ab2@375> INCLUDE "internal_commands.ab2"
0003A150 <internal_commands.ab2@378> INCLUDE "internal_commands.ab2"
0003A152 <internal_commands.ab2@379> INCLUDE "internal_commands.ab2"
0003A158 <internal_commands.ab2@380> INCLUDE "internal_commands.ab2"
0003A159 <internal_commands.ab2@381> INCLUDE "internal_commands.ab2"
0003A15A <internal_commands.ab2@382> INCLUDE "internal_commands.ab2"
0003A15E <internal_commands.ab2@385> INCLUDE "internal_commands.ab2"
0003A160 <internal_commands.ab2@386> INCLUDE "internal_commands.ab2"
0003A167 <internal_commands.ab2@387> INCLUDE "internal_commands.ab2"
0003A168 <internal_commands.ab2@388> INCLUDE "internal_commands.ab2"
0003A16C <internal_commands.ab2@392> INCLUDE "internal_commands.ab2"
0003A16E <internal_commands.ab2@393> INCLUDE "internal_commands.ab2"
0003A174 <internal_commands.ab2@394> INCLUDE "internal_commands.ab2"
0003A17D <internal_commands.ab2@395> INCLUDE "internal_commands.ab2"
0003A17E <internal_commands.ab2@396> INCLUDE "internal_commands.ab2"
0003A182 <internal_commands.ab2@399> INCLUDE "internal_commands.ab2"
0003A184 <internal_commands.ab2@400> INCLUDE "internal_commands.ab2"
0003A18C <internal_commands.ab2@401> INCLUDE "internal_commands.ab2"
0003A199 <internal_commands.ab2@402> INCLUDE "internal_commands.ab2"
0003A19A <internal_commands.ab2@403> INCLUDE "internal_commands.ab2"
0003A19E <internal_commands.ab2@406> INCLUDE "internal_commands.ab2"
0003A1A0 <internal_commands.ab2@407> INCLUDE "internal_commands.ab2"
0003A1A8 <internal_commands.ab2@408> INCLUDE "internal_commands.ab2"
0003A1B5 <internal_commands.ab2@409> INCLUDE "internal_commands.ab2"
0003A1B6 <internal_commands.ab2@410> INCLUDE "internal_commands.ab2"
0003A1BA <internal_commands.ab2@413> INCLUDE "internal_commands.ab2"
0003A1BC <internal_commands.ab2@414> INCLUDE "internal_commands.ab2"
0003A1C4 <internal_commands.ab2@415> INCLUDE "internal_commands.ab2"
0003A1D1 <internal_commands.ab2@416> INCLUDE "internal_commands.ab2"
0003A1D2 <internal_commands.ab2@417> INCLUDE "internal_commands.ab2"
0003A1D6 <internal_commands.ab2@420> INCLUDE "internal_commands.ab2"
0003A1D8 <internal_commands.ab2@421> INCLUDE "internal_commands.ab2"
0003A1DD <internal_commands.ab2@422> INCLUDE "internal_commands.ab2"
0003A1DE <internal_commands.ab2@423> INCLUDE "internal_commands.ab2"
0003A1E2 <internal_commands.ab2@437> INCLUDE "internal_commands.ab2"
0003A1E4 <internal_commands.ab2@438> INCLUDE "internal_commands.ab2"
0003A1E9 <internal_commands.ab2@439> INCLUDE "internal_commands.ab2"
0003A1EA <internal_commands.ab2@440> INCLUDE "internal_commands.ab2"
0003A1EC <internal_commands.ab2@443> INCLUDE "internal_commands.ab2"
0003A1F0 <internal_commands.ab2@444> INCLUDE "internal_commands.ab2"
0003A1F2 <internal_commands.ab2@445> INCLUDE "internal_commands.ab2"
0003A1F4 <internal_commands.ab2@446> INCLUDE "internal_commands.ab2"
0003A1F8 <internal_commands.ab2@447> INCLUDE "internal_commands.ab2"
0003A1FA <internal_commands.ab2@448> INCLUDE "internal_commands.ab2"
0003A1FE <internal_commands.ab2@452> INCLUDE "internal_commands.ab2"
0003A200 <internal_commands.ab2@453> INCLUDE "internal_commands.ab2"
0003A204 <internal_commands.ab2@454> INCLUDE "internal_commands.ab2"
0003A205 <internal_commands.ab2@455> INCLUDE "internal_commands.ab2"
0003A206 <internal_commands.ab2@456> INCLUDE "internal_commands.ab2"
0003A208 <internal_commands.ab2@458> INCLUDE "internal_commands.ab2"
0003A20C <internal_commands.ab2@459> INCLUDE "internal_commands.ab2"
0003A20E <internal_commands.ab2@460> INCLUDE "internal_commands.ab2"
0003A210 <internal_commands.ab2@461> INCLUDE "internal_commands.ab2"
0003A214 <internal_commands.ab2@462> INCLUDE "internal_commands.ab2"
0003A216 <internal_commands.ab2@463> INCLUDE "internal_commands.ab2"
0003A21A <internal_commands.ab2@467> INCLUDE "internal_commands.ab2"
0003A21C <internal_commands.ab2@468> INCLUDE "internal_commands.ab2"
0003A221 <internal_commands.ab2@469> INCLUDE "internal_commands.ab2"
0003A222 <internal_commands.ab2@470> INCLUDE "internal_commands.ab2"
0003A224 <internal_commands.ab2@473> INCLUDE "internal_commands.ab2"
0003A228 <internal_commands.ab2@474> INCLUDE "internal_commands.ab2"
0003A22A <internal_commands.ab2@475> INCLUDE "internal_commands.ab2"
0003A22C <internal_commands.ab2@476> INCLUDE "internal_commands.ab2"
0003A230 <internal_commands.ab2@477> INCLUDE "internal_commands.ab2"
0003A232 <internal_commands.ab2@478> INCLUDE "internal_commands.ab2"
0003A236 <internal_commands.ab2@482> INCLUDE "internal_commands.ab2"
0003A238 <internal_commands.ab2@483> INCLUDE "internal_commands.ab2"
0003A23D <internal_commands.ab2@484> INCLUDE "internal_commands.ab2"
0003A23E <internal_commands.ab2@485> INCLUDE "internal_commands.ab2"
0003A240 <internal_commands.ab2@488> INCLUDE "internal_commands.ab2"
0003A244 <internal_commands.ab2@489> INCLUDE "internal_commands.ab2"
0003A246 <internal_commands.ab2@490> INCLUDE "internal_commands.ab2"
0003A248 <internal_commands.ab2@491> INCLUDE "internal_commands.ab2"
0003A24C <internal_commands.ab2@492> INCLUDE "internal_commands.ab2"
0003A24E <internal_commands.ab2@493> INCLUDE "internal_commands.ab2"
0003A252 <internal_commands.ab2@497> INCLUDE "internal_commands.ab2"
0003A254 <internal_commands.ab2@498> INCLUDE "internal_commands.ab2"
0003A259 <internal_commands.ab2@499> INCLUDE "internal_commands.ab2"
0003A25A <internal_commands.ab2@500> INCLUDE "internal_commands.ab2"
0003A25C <internal_commands.ab2@503> INCLUDE "internal_commands.ab2"
0003A260 <internal_commands.ab2@504> INCLUDE "internal_commands.ab2"
0003A262 <internal_commands.ab2@505> INCLUDE "internal_commands.ab2"
0003A264 <internal_commands.ab2@506> INCLUDE "internal_commands.ab2"
0003A268 <internal_commands.ab2@507> INCLUDE "internal_commands.ab2"
0003A26A <internal_commands.ab2@508> INCLUDE "internal_commands.ab2"
0003A26E <internal_commands.ab2@512> INCLUDE "internal_commands.ab2"
0003A270 <internal_commands.ab2@513> INCLUDE "internal_commands.ab2"
0003A275 <internal_commands.ab2@514> INCLUDE "internal_commands.ab2"
0003A276 <internal_commands.ab2@515> INCLUDE "internal_commands.ab2"
0003A278 <internal_commands.ab2@518> INCLUDE "internal_commands.ab2"
0003A27C <internal_commands.ab2@519> INCLUDE "internal_commands.ab2"
0003A27E <internal_commands.ab2@520> INCLUDE "internal_commands.ab2"
0003A280 <internal_commands.ab2@521> INCLUDE "internal_commands.ab2"
0003A284 <internal_commands.ab2@522> INCLUDE "internal_commands.ab2"
0003A286 <internal_commands.ab2@523> INCLUDE "internal_commands.ab2"
0003A28A <internal_commands.ab2@527> INCLUDE "internal_commands.ab2"
0003A28C <internal_commands.ab2@528> INCLUDE "internal_commands.ab2"
0003A290 <internal_commands.ab2@529> INCLUDE "internal_commands.ab2"
0003A291 <internal_commands.ab2@530> INCLUDE "internal_commands.ab2"
0003A292 <internal_commands.ab2@531> INCLUDE "internal_commands.ab2"
0003A294 <internal_commands.ab2@533> INCLUDE "internal_commands.ab2"
0003A298 <internal_commands.ab2@534> INCLUDE "internal_commands.ab2"
0003A29A <internal_commands.ab2@535> INCLUDE "internal_commands.ab2"
0003A29C <internal_commands.ab2@536> INCLUDE "internal_commands.ab2"
0003A2A0 <internal_commands.ab2@537> INCLUDE "internal_commands.ab2"
0003A2A2 <internal_commands.ab2@538> INCLUDE "internal_commands.ab2"
0003A2A6 <internal_commands.ab2@542> INCLUDE "internal_commands.ab2"
0003A2A8 <internal_commands.ab2@543> INCLUDE "internal_commands.ab2"
0003A2AD <internal_commands.ab2@544> INCLUDE "internal_commands.ab2"
0003A2AE <internal_commands.ab2@545> INCLUDE "internal_commands.ab2"
0003A2B0 <internal_commands.ab2@548> INCLUDE "internal_commands.ab2"
0003A2B4 <internal_commands.ab2@549> INCLUDE "internal_commands.ab2"
0003A2B6 <internal_commands.ab2@550> INCLUDE "internal_commands.ab2"
0003A2B8 <internal_commands.ab2@551> INCLUDE "internal_commands.ab2"
0003A2BC <internal_commands.ab2@552> INCLUDE "internal_commands.ab2"
0003A2BE <internal_commands.ab2@553> INCLUDE "internal_commands.ab2"
0003A2C2 <internal_commands.ab2@557> INCLUDE "internal_commands.ab2"
0003A2C4 <internal_commands.ab2@558> INCLUDE "internal_commands.ab2"
0003A2C8 <internal_commands.ab2@559> INCLUDE "internal_commands.ab2"
0003A2C9 <internal_commands.ab2@560> INCLUDE "internal_commands.ab2"
0003A2CA <internal_commands.ab2@561> INCLUDE "internal_commands.ab2"
0003A2CC <internal_commands.ab2@563> INCLUDE "internal_commands.ab2"
0003A2D0 <internal_commands.ab2@564> INCLUDE "internal_commands.ab2"
0003A2D2 <internal_commands.ab2@565> INCLUDE "internal_commands.ab2"
0003A2D4 <internal_commands.ab2@566> INCLUDE "internal_commands.ab2"
0003A2D8 <internal_commands.ab2@567> INCLUDE "internal_commands.ab2"
0003A2DA <internal_commands.ab2@568> INCLUDE "internal_commands.ab2"
0003A2DE <internal_commands.ab2@572> INCLUDE "internal_commands.ab2"
0003A2E0 <internal_commands.ab2@573> INCLUDE "internal_commands.ab2"
0003A2E4 <internal_commands.ab2@574> INCLUDE "internal_commands.ab2"
0003A2E5 <internal_commands.ab2@575> INCLUDE "internal_commands.ab2"
0003A2E6 <internal_commands.ab2@576> INCLUDE "internal_commands.ab2"
0003A2E8 <internal_commands.ab2@578> INCLUDE "internal_commands.ab2"
0003A2EC <internal_commands.ab2@579> INCLUDE "internal_commands.ab2"
0003A2EE <internal_commands.ab2@580> INCLUDE "internal_commands.ab2"
0003A2F0 <internal_commands.ab2@581> INCLUDE "internal_commands.ab2"
0003A2F4 <internal_commands.ab2@582> INCLUDE "internal_commands.ab2"
0003A2F6 <internal_commands.ab2@583> INCLUDE "internal_commands.ab2"
0003A2FA <internal_commands.ab2@587> INCLUDE "internal_commands.ab2"
0003A2FC <internal_commands.ab2@588> INCLUDE "internal_commands.ab2"
0003A300 <internal_commands.ab2@589> INCLUDE "internal_commands.ab2"
0003A301 <internal_commands.ab2@590> INCLUDE "internal_commands.ab2"
0003A302 <internal_commands.ab2@591> INCLUDE "internal_commands.ab2"
0003A304 <internal_commands.ab2@593> INCLUDE "internal_commands.ab2"
0003A308 <internal_commands.ab2@594> INCLUDE "internal_commands.ab2"
0003A30A <internal_commands.ab2@595> INCLUDE "internal_commands.ab2"
0003A30C <internal_commands.ab2@596> INCLUDE "internal_commands.ab2"
0003A310 <internal_commands.ab2@597> INCLUDE "internal_commands.ab2"
0003A312 <internal_commands.ab2@598> INCLUDE "internal_commands.ab2"
0003A316 <internal_commands.ab2@602> INCLUDE "internal_commands.ab2"
0003A318 <internal_commands.ab2@603> INCLUDE "internal_commands.ab2"
0003A31C <internal_commands.ab2@604> INCLUDE "internal_commands.ab2"
0003A31D <internal_commands.ab2@605> INCLUDE "internal_commands.ab2"
0003A31E <internal_commands.ab2@606> INCLUDE "internal_commands.ab2"
0003A320 <internal_commands.ab2@608> INCLUDE "internal_commands.ab2"
0003A324 <internal_commands.ab2@609> INCLUDE "internal_commands.ab2"
0003A326 <internal_commands.ab2@610> INCLUDE "internal_commands.ab2"
0003A328 <internal_commands.ab2@611> INCLUDE "internal_commands.ab2"
0003A32C <internal_commands.ab2@612> INCLUDE "internal_commands.ab2"
0003A32E <internal_commands.ab2@613> INCLUDE "internal_commands.ab2"
0003A332 <internal_commands.ab2@617> INCLUDE "internal_commands.ab2"
0003A334 <internal_commands.ab2@618> INCLUDE "internal_commands.ab2"
0003A338 <internal_commands.ab2@619> INCLUDE "internal_commands.ab2"
0003A339 <internal_commands.ab2@620> INCLUDE "internal_commands.ab2"
0003A33A <internal_commands.ab2@621> INCLUDE "internal_commands.ab2"
0003A33C <internal_commands.ab2@623> INCLUDE "internal_commands.ab2"
0003A340 <internal_commands.ab2@624> INCLUDE "internal_commands.ab2"
0003A342 <internal_commands.ab2@625> INCLUDE "internal_commands.ab2"
0003A344 <internal_commands.ab2@626> INCLUDE "internal_commands.ab2"
0003A348 <internal_commands.ab2@627> INCLUDE "internal_commands.ab2"
0003A34A <internal_commands.ab2@628> INCLUDE "internal_commands.ab2"
0003A34E <internal_commands.ab2@632> INCLUDE "internal_commands.ab2"
0003A350 <internal_commands.ab2@633> INCLUDE "internal_commands.ab2"
0003A354 <internal_commands.ab2@634> INCLUDE "internal_commands.ab2"
0003A355 <internal_commands.ab2@635> INCLUDE "internal_commands.ab2"
0003A356 <internal_commands.ab2@636> INCLUDE "internal_commands.ab2"
0003A358 <internal_commands.ab2@638> INCLUDE "internal_commands.ab2"
0003A35C <internal_commands.ab2@639> INCLUDE "internal_commands.ab2"
0003A35E <internal_commands.ab2@640> INCLUDE "internal_commands.ab2"
0003A360 <internal_commands.ab2@641> INCLUDE "internal_commands.ab2"
0003A364 <internal_commands.ab2@642> INCLUDE "internal_commands.ab2"
0003A366 <internal_commands.ab2@643> INCLUDE "internal_commands.ab2"
0003A36A <internal_commands.ab2@647> INCLUDE "internal_commands.ab2"
0003A36C <internal_commands.ab2@648> INCLUDE "internal_commands.ab2"
0003A370 <internal_commands.ab2@649> INCLUDE "internal_commands.ab2"
0003A371 <internal_commands.ab2@650> INCLUDE "internal_commands.ab2"
0003A372 <internal_commands.ab2@651> INCLUDE "internal_commands.ab2"
0003A374 <internal_commands.ab2@653> INCLUDE "internal_commands.ab2"
0003A378 <internal_commands.ab2@654> INCLUDE "internal_commands.ab2"
0003A37A <internal_commands.ab2@655> INCLUDE "internal_commands.ab2"
0003A37C <internal_commands.ab2@656> INCLUDE "internal_commands.ab2"
0003A380 <internal_commands.ab2@657> INCLUDE "internal_commands.ab2"
0003A382 <internal_commands.ab2@658> INCLUDE "internal_commands.ab2"
0003A386 <internal_commands.ab2@662> INCLUDE "internal_commands.ab2"
0003A388 <internal_commands.ab2@663> INCLUDE "internal_commands.ab2"
0003A38C <internal_commands.ab2@664> INCLUDE "internal_commands.ab2"
0003A38D <internal_commands.ab2@665> INCLUDE "internal_commands.ab2"
0003A38E <internal_commands.ab2@666> INCLUDE "internal_commands.ab2"
0003A390 <internal_commands.ab2@668> INCLUDE "internal_commands.ab2"
0003A394 <internal_commands.ab2@669> INCLUDE "internal_commands.ab2"
0003A396 <internal_commands.ab2@670> INCLUDE "internal_commands.ab2"
0003A398 <internal_commands.ab2@671> INCLUDE "internal_commands.ab2"
0003A39C <internal_commands.ab2@672> INCLUDE "internal_commands.ab2"
0003A39E <internal_commands.ab2@673> INCLUDE "internal_commands.ab2"
0003A3A2 <internal_commands.ab2@677> INCLUDE "internal_commands.ab2"
0003A3A4 <internal_commands.ab2@678> INCLUDE "internal_commands.ab2"
0003A3A8 <internal_commands.ab2@679> INCLUDE "internal_commands.ab2"
0003A3A9 <internal_commands.ab2@680> INCLUDE "internal_commands.ab2"
0003A3AA <internal_commands.ab2@681> INCLUDE "internal_commands.ab2"
0003A3AC <internal_commands.ab2@683> INCLUDE "internal_commands.ab2"
0003A3B0 <internal_commands.ab2@684> INCLUDE "internal_commands.ab2"
0003A3B2 <internal_commands.ab2@685> INCLUDE "internal_commands.ab2"
0003A3B4 <internal_commands.ab2@686> INCLUDE "internal_commands.ab2"
0003A3B8 <internal_commands.ab2@687> INCLUDE "internal_commands.ab2"
0003A3BA <internal_commands.ab2@688> INCLUDE "internal_commands.ab2"
0003A3BE <internal_commands.ab2@692> INCLUDE "internal_commands.ab2"
0003A3C0 <internal_commands.ab2@693> INCLUDE "internal_commands.ab2"
0003A3C4 <internal_commands.ab2@694> INCLUDE "internal_commands.ab2"
0003A3C5 <internal_commands.ab2@695> INCLUDE "internal_commands.ab2"
0003A3C6 <internal_commands.ab2@696> INCLUDE "internal_commands.ab2"
0003A3C8 <internal_commands.ab2@698> INCLUDE "internal_commands.ab2"
0003A3CC <internal_commands.ab2@699> INCLUDE "internal_commands.ab2"
0003A3CE <internal_commands.ab2@700> INCLUDE "internal_commands.ab2"
0003A3D0 <internal_commands.ab2@701> INCLUDE "internal_commands.ab2"
0003A3D4 <internal_commands.ab2@702> INCLUDE "internal_commands.ab2"
0003A3D6 <internal_commands.ab2@703> INCLUDE "internal_commands.ab2"
0003A3DA <internal_commands.ab2@707> INCLUDE "internal_commands.ab2"
0003A3DC <internal_commands.ab2@708> INCLUDE "internal_commands.ab2"
0003A3E0 <internal_commands.ab2@709> INCLUDE "internal_commands.ab2"
0003A3E1 <internal_commands.ab2@710> INCLUDE "internal_commands.ab2"
0003A3E2 <internal_commands.ab2@711> INCLUDE "internal_commands.ab2"
0003A3E4 <internal_commands.ab2@713> INCLUDE "internal_commands.ab2"
0003A3E8 <internal_commands.ab2@714> INCLUDE "internal_commands.ab2"
0003A3EA <internal_commands.ab2@715> INCLUDE "internal_commands.ab2"
0003A3EC <internal_commands.ab2@716> INCLUDE "internal_commands.ab2"
0003A3F0 <internal_commands.ab2@717> INCLUDE "internal_commands.ab2"
0003A3F2 <internal_commands.ab2@718> INCLUDE "internal_commands.ab2"
0003A3F6 <internal_commands.ab2@722> INCLUDE "internal_commands.ab2"
0003A3F8 <internal_commands.ab2@723> INCLUDE "internal_commands.ab2"
0003A3FC <internal_commands.ab2@724> INCLUDE "internal_commands.ab2"
0003A3FD <internal_commands.ab2@725> INCLUDE "internal_commands.ab2"
0003A3FE <internal_commands.ab2@726> INCLUDE "internal_commands.ab2"
0003A400 <internal_commands.ab2@728> INCLUDE "internal_commands.ab2"
0003A404 <internal_commands.ab2@729> INCLUDE "internal_commands.ab2"
0003A406 <internal_commands.ab2@730> INCLUDE "internal_commands.ab2"
0003A408 <internal_commands.ab2@731> INCLUDE "internal_commands.ab2"
0003A40C <internal_commands.ab2@732> INCLUDE "internal_commands.ab2"
0003A40E <internal_commands.ab2@733> INCLUDE "internal_commands.ab2"
0003A412 <internal_commands.ab2@737> INCLUDE "internal_commands.ab2"
0003A414 <internal_commands.ab2@738> INCLUDE "internal_commands.ab2"
0003A418 <internal_commands.ab2@739> INCLUDE "internal_commands.ab2"
0003A419 <internal_commands.ab2@740> INCLUDE "internal_commands.ab2"
0003A41A <internal_commands.ab2@741> INCLUDE "internal_commands.ab2"
0003A41C <internal_commands.ab2@743> INCLUDE "internal_commands.ab2"
0003A420 <internal_commands.ab2@744> INCLUDE "internal_commands.ab2"
0003A422 <internal_commands.ab2@745> INCLUDE "internal_commands.ab2"
0003A424 <internal_commands.ab2@746> INCLUDE "internal_commands.ab2"
0003A428 <internal_commands.ab2@747> INCLUDE "internal_commands.ab2"
0003A42A <internal_commands.ab2@748> INCLUDE "internal_commands.ab2"
0003A42E <internal_commands.ab2@752> INCLUDE "internal_commands.ab2"
0003A430 <internal_commands.ab2@753> INCLUDE "internal_commands.ab2"
0003A434 <internal_commands.ab2@754> INCLUDE "internal_commands.ab2"
0003A435 <internal_commands.ab2@755> INCLUDE "internal_commands.ab2"
0003A436 <internal_commands.ab2@756> INCLUDE "internal_commands.ab2"
0003A438 <internal_commands.ab2@758> INCLUDE "internal_commands.ab2"
0003A43C <internal_commands.ab2@759> INCLUDE "internal_commands.ab2"
0003A43E <internal_commands.ab2@760> INCLUDE "internal_commands.ab2"
0003A440 <internal_commands.ab2@761> INCLUDE "internal_commands.ab2"
0003A444 <internal_commands.ab2@762> INCLUDE "internal_commands.ab2"
0003A446 <internal_commands.ab2@763> INCLUDE "internal_commands.ab2"
0003A44A <internal_commands.ab2@767> INCLUDE "internal_commands.ab2"
0003A44C <internal_commands.ab2@768> INCLUDE "internal_commands.ab2"
0003A450 <internal_commands.ab2@769> INCLUDE "internal_commands.ab2"
0003A451 <internal_commands.ab2@770> INCLUDE "internal_commands.ab2"
0003A452 <internal_commands.ab2@771> INCLUDE "internal_commands.ab2"
0003A454 <internal_commands.ab2@773> INCLUDE "internal_commands.ab2"
0003A458 <internal_commands.ab2@774> INCLUDE "internal_commands.ab2"
0003A45A <internal_commands.ab2@775> INCLUDE "internal_commands.ab2"
0003A45C <internal_commands.ab2@776> INCLUDE "internal_commands.ab2"
0003A460 <internal_commands.ab2@777> INCLUDE "internal_commands.ab2"
0003A462 <internal_commands.ab2@778> INCLUDE "internal_commands.ab2"
0003A466 <internal_commands.ab2@782> INCLUDE "internal_commands.ab2"
0003A468 <internal_commands.ab2@783> INCLUDE "internal_commands.ab2"
0003A46C <internal_commands.ab2@784> INCLUDE "internal_commands.ab2"
0003A46D <internal_commands.ab2@785> INCLUDE "internal_commands.ab2"
0003A46E <internal_commands.ab2@786> INCLUDE "internal_commands.ab2"
0003A470 <internal_commands.ab2@788> INCLUDE "internal_commands.ab2"
0003A474 <internal_commands.ab2@789> INCLUDE "internal_commands.ab2"
0003A476 <internal_commands.ab2@790> INCLUDE "internal_commands.ab2"
0003A478 <internal_commands.ab2@791> INCLUDE "internal_commands.ab2"
0003A47C <internal_commands.ab2@792> INCLUDE "internal_commands.ab2"
0003A47E <internal_commands.ab2@793> INCLUDE "internal_commands.ab2"
0003A482 <internal_commands.ab2@797> INCLUDE "internal_commands.ab2"
0003A484 <internal_commands.ab2@798> INCLUDE "internal_commands.ab2"
0003A489 <internal_commands.ab2@799> INCLUDE "internal_commands.ab2"
0003A48A <internal_commands.ab2@800> INCLUDE "internal_commands.ab2"
0003A48C <internal_commands.ab2@803> INCLUDE "internal_commands.ab2"
0003A490 <internal_commands.ab2@804> INCLUDE "internal_commands.ab2"
0003A492 <internal_commands.ab2@805> INCLUDE "internal_commands.ab2"
0003A494 <internal_commands.ab2@806> INCLUDE "internal_commands.ab2"
0003A498 <internal_commands.ab2@807> INCLUDE "internal_commands.ab2"
0003A49A <internal_commands.ab2@808> INCLUDE "internal_commands.ab2"
0003A49E <internal_commands.ab2@812> INCLUDE "internal_commands.ab2"
0003A4A0 <internal_commands.ab2@813> INCLUDE "internal_commands.ab2"
0003A4A5 <internal_commands.ab2@814> INCLUDE "internal_commands.ab2"
0003A4A6 <internal_commands.ab2@815> INCLUDE "internal_commands.ab2"
0003A4A8 <internal_commands.ab2@818> INCLUDE "internal_commands.ab2"
0003A4AC <internal_commands.ab2@819> INCLUDE "internal_commands.ab2"
0003A4AE <internal_commands.ab2@820> INCLUDE "internal_commands.ab2"
0003A4B0 <internal_commands.ab2@821> INCLUDE "internal_commands.ab2"
0003A4B4 <internal_commands.ab2@822> INCLUDE "internal_commands.ab2"
0003A4B6 <internal_commands.ab2@823> INCLUDE "internal_commands.ab2"
0003A4BA <internal_commands.ab2@827> INCLUDE "internal_commands.ab2"
0003A4BC <internal_commands.ab2@828> INCLUDE "internal_commands.ab2"
0003A4C1 <internal_commands.ab2@829> INCLUDE "internal_commands.ab2"
0003A4C2 <internal_commands.ab2@830> INCLUDE "internal_commands.ab2"
0003A4C4 <internal_commands.ab2@833> INCLUDE "internal_commands.ab2"
0003A4C8 <internal_commands.ab2@834> INCLUDE "internal_commands.ab2"
0003A4CA <internal_commands.ab2@835> INCLUDE "internal_commands.ab2"
0003A4CC <internal_commands.ab2@836> INCLUDE "internal_commands.ab2"
0003A4D0 <internal_commands.ab2@837> INCLUDE "internal_commands.ab2"
0003A4D2 <internal_commands.ab2@838> INCLUDE "internal_commands.ab2"
0003A4D6 <internal_commands.ab2@842> INCLUDE "internal_commands.ab2"
0003A4D8 <internal_commands.ab2@843> INCLUDE "internal_commands.ab2"
0003A4DD <internal_commands.ab2@844> INCLUDE "internal_commands.ab2"
0003A4DE <internal_commands.ab2@845> INCLUDE "internal_commands.ab2"
0003A4E0 <internal_commands.ab2@848> INCLUDE "internal_commands.ab2"
0003A4E4 <internal_commands.ab2@849> INCLUDE "internal_commands.ab2"
0003A4E6 <internal_commands.ab2@850> INCLUDE "internal_commands.ab2"
0003A4E8 <internal_commands.ab2@851> INCLUDE "internal_commands.ab2"
0003A4EC <internal_commands.ab2@852> INCLUDE "internal_commands.ab2"
0003A4EE <internal_commands.ab2@853> INCLUDE "internal_commands.ab2"
0003A4F2 <internal_commands.ab2@857> INCLUDE "internal_commands.ab2"
0003A4F4 <internal_commands.ab2@858> INCLUDE "internal_commands.ab2"
0003A4F8 <internal_commands.ab2@859> INCLUDE "internal_commands.ab2"
0003A4F9 <internal_commands.ab2@860> INCLUDE "internal_commands.ab2"
0003A4FA <internal_commands.ab2@861> INCLUDE "internal_commands.ab2"
0003A4FC <internal_commands.ab2@863> INCLUDE "internal_commands.ab2"
0003A500 <internal_commands.ab2@864> INCLUDE "internal_commands.ab2"
0003A502 <internal_commands.ab2@865> INCLUDE "internal_commands.ab2"
0003A504 <internal_commands.ab2@866> INCLUDE "internal_commands.ab2"
0003A508 <internal_commands.ab2@867> INCLUDE "internal_commands.ab2"
0003A50A <internal_commands.ab2@868> INCLUDE "internal_commands.ab2"
0003A50E <internal_commands.ab2@872> INCLUDE "internal_commands.ab2"
0003A510 <internal_commands.ab2@873> INCLUDE "internal_commands.ab2"
0003A514 <internal_commands.ab2@874> INCLUDE "internal_commands.ab2"
0003A515 <internal_commands.ab2@875> INCLUDE "internal_commands.ab2"
0003A516 <internal_commands.ab2@876> INCLUDE "internal_commands.ab2"
0003A518 <internal_commands.ab2@878> INCLUDE "internal_commands.ab2"
0003A51C <internal_commands.ab2@879> INCLUDE "internal_commands.ab2"
0003A51E <internal_commands.ab2@880> INCLUDE "internal_commands.ab2"
0003A520 <internal_commands.ab2@881> INCLUDE "internal_commands.ab2"
0003A524 <internal_commands.ab2@882> INCLUDE "internal_commands.ab2"
0003A526 <internal_commands.ab2@883> INCLUDE "internal_commands.ab2"
0003A52A <internal_commands.ab2@887> INCLUDE "internal_commands.ab2"
0003A52C <internal_commands.ab2@888> INCLUDE "internal_commands.ab2"
0003A530 <internal_commands.ab2@889> INCLUDE "internal_commands.ab2"
0003A531 <internal_commands.ab2@890> INCLUDE "internal_commands.ab2"
0003A532 <internal_commands.ab2@891> INCLUDE "internal_commands.ab2"
0003A534 <internal_commands.ab2@893> INCLUDE "internal_commands.ab2"
0003A538 <internal_commands.ab2@894> INCLUDE "internal_commands.ab2"
0003A53A <internal_commands.ab2@895> INCLUDE "internal_commands.ab2"
0003A53C <internal_commands.ab2@896> INCLUDE "internal_commands.ab2"
0003A540 <internal_commands.ab2@897> INCLUDE "internal_commands.ab2"
0003A542 <internal_commands.ab2@898> INCLUDE "internal_commands.ab2"
0003A546 <internal_commands.ab2@902> INCLUDE "internal_commands.ab2"
0003A548 <internal_commands.ab2@903> INCLUDE "internal_commands.ab2"
0003A54C <internal_commands.ab2@904> INCLUDE "internal_commands.ab2"
0003A54D <internal_commands.ab2@905> INCLUDE "internal_commands.ab2"
0003A54E <internal_commands.ab2@906> INCLUDE "internal_commands.ab2"
0003A550 <internal_commands.ab2@908> INCLUDE "internal_commands.ab2"
0003A554 <internal_commands.ab2@909> INCLUDE "internal_commands.ab2"
0003A556 <internal_commands.ab2@910> INCLUDE "internal_commands.ab2"
0003A558 <internal_commands.ab2@911> INCLUDE "internal_commands.ab2"
0003A55C <internal_commands.ab2@912> INCLUDE "internal_commands.ab2"
0003A55E <internal_commands.ab2@913> INCLUDE "internal_commands.ab2"
0003A562 <internal_commands.ab2@917> INCLUDE "internal_commands.ab2"
0003A564 <internal_commands.ab2@918> INCLUDE "internal_commands.ab2"
0003A568 <internal_commands.ab2@919> INCLUDE "internal_commands.ab2"
0003A569 <internal_commands.ab2@920> INCLUDE "internal_commands.ab2"
0003A56A <internal_commands.ab2@921> INCLUDE "internal_commands.ab2"
0003A56C <internal_commands.ab2@923> INCLUDE "internal_commands.ab2"
0003A570 <internal_commands.ab2@924> INCLUDE "internal_commands.ab2"
0003A572 <internal_commands.ab2@925> INCLUDE "internal_commands.ab2"
0003A574 <internal_commands.ab2@926> INCLUDE "internal_commands.ab2"
0003A578 <internal_commands.ab2@927> INCLUDE "internal_commands.ab2"
0003A57A <internal_commands.ab2@928> INCLUDE "internal_commands.ab2"
0003A57E <internal_commands.ab2@932> INCLUDE "internal_commands.ab2"
0003A580 <internal_commands.ab2@933> INCLUDE "internal_commands.ab2"
0003A585 <internal_commands.ab2@934> INCLUDE "internal_commands.ab2"
0003A586 <internal_commands.ab2@935> INCLUDE "internal_commands.ab2"
0003A588 <internal_commands.ab2@938> INCLUDE "internal_commands.ab2"
0003A58C <internal_commands.ab2@939> INCLUDE "internal_commands.ab2"
0003A58E <internal_commands.ab2@940> INCLUDE "internal_commands.ab2"
0003A590 <internal_commands.ab2@941> INCLUDE "internal_commands.ab2"
0003A594 <internal_commands.ab2@942> INCLUDE "internal_commands.ab2"
0003A596 <internal_commands.ab2@943> INCLUDE "internal_commands.ab2"
0003A59A <internal_commands.ab2@947> INCLUDE "internal_commands.ab2"
0003A59C <internal_commands.ab2@948> INCLUDE "internal_commands.ab2"
0003A5A1 <internal_commands.ab2@949> INCLUDE "internal_commands.ab2"
0003A5A2 <internal_commands.ab2@950> INCLUDE "internal_commands.ab2"
0003A5A4 <internal_commands.ab2@953> INCLUDE "internal_commands.ab2"
0003A5A8 <internal_commands.ab2@954> INCLUDE "internal_commands.ab2"
0003A5AA <internal_commands.ab2@955> INCLUDE "internal_commands.ab2"
0003A5AC <internal_commands.ab2@956> INCLUDE "internal_commands.ab2"
0003A5B0 <internal_commands.ab2@957> INCLUDE "internal_commands.ab2"
0003A5B2 <internal_commands.ab2@958> INCLUDE "internal_commands.ab2"
0003A5B6 <internal_commands.ab2@962> INCLUDE "internal_commands.ab2"
0003A5B8 <internal_commands.ab2@963> INCLUDE "internal_commands.ab2"
0003A5BD <internal_commands.ab2@964> INCLUDE "internal_commands.ab2"
0003A5BE <internal_commands.ab2@965> INCLUDE "internal_commands.ab2"
0003A5C0 <internal_commands.ab2@968> INCLUDE "internal_commands.ab2"
0003A5C4 <internal_commands.ab2@969> INCLUDE "internal_commands.ab2"
0003A5C6 <internal_commands.ab2@970> INCLUDE "internal_commands.ab2"
0003A5C8 <internal_commands.ab2@971> INCLUDE "internal_commands.ab2"
0003A5CC <internal_commands.ab2@972> INCLUDE "internal_commands.ab2"
0003A5CE <internal_commands.ab2@973> INCLUDE "internal_commands.ab2"
0003A5D2 <internal_commands.ab2@977> INCLUDE "internal_commands.ab2"
0003A5D4 <internal_commands.ab2@978> INCLUDE "internal_commands.ab2"
0003A5D9 <internal_commands.ab2@979> INCLUDE "internal_commands.ab2"
0003A5DA <internal_commands.ab2@980> INCLUDE "internal_commands.ab2"
0003A5DC <internal_commands.ab2@983> INCLUDE "internal_commands.ab2"
0003A5E0 <internal_commands.ab2@984> INCLUDE "internal_commands.ab2"
0003A5E2 <internal_commands.ab2@985> INCLUDE "internal_commands.ab2"
0003A5E4 <internal_commands.ab2@986> INCLUDE "internal_commands.ab2"
0003A5E8 <internal_commands.ab2@987> INCLUDE "internal_commands.ab2"
0003A5EA <internal_commands.ab2@988> INCLUDE "internal_commands.ab2"
0003A5EE <internal_commands.ab2@992> INCLUDE "internal_commands.ab2"
0003A5F0 <internal_commands.ab2@993> INCLUDE "internal_commands.ab2"
0003A5F5 <internal_commands.ab2@994> INCLUDE "internal_commands.ab2"
0003A5F6 <internal_commands.ab2@995> INCLUDE "internal_commands.ab2"
0003A5F8 <internal_commands.ab2@998> INCLUDE "internal_commands.ab2"
0003A5FC <internal_commands.ab2@999> INCLUDE "internal_commands.ab2"
0003A5FE <internal_commands.ab2@1000> INCLUDE "internal_commands.ab2"
0003A600 <internal_commands.ab2@1001> INCLUDE "internal_commands.ab2"
0003A604 <internal_commands.ab2@1002> INCLUDE "internal_commands.ab2"
0003A606 <internal_commands.ab2@1003> INCLUDE "internal_commands.ab2"
0003A60A <internal_commands.ab2@1007> INCLUDE "internal_commands.ab2"
0003A60C <internal_commands.ab2@1008> INCLUDE "internal_commands.ab2"
0003A611 <internal_commands.ab2@1009> INCLUDE "internal_commands.ab2"
0003A612 <internal_commands.ab2@1010> INCLUDE "internal_commands.ab2"
0003A614 <internal_commands.ab2@1013> INCLUDE "internal_commands.ab2"
0003A618 <internal_commands.ab2@1014> INCLUDE "internal_commands.ab2"
0003A61A <internal_commands.ab2@1015> INCLUDE "internal_commands.ab2"
0003A61C <internal_commands.ab2@1016> INCLUDE "internal_commands.ab2"
0003A620 <internal_commands.ab2@1017> INCLUDE "internal_commands.ab2"
0003A622 <internal_commands.ab2@1018> INCLUDE "internal_commands.ab2"
0003A626 <internal_commands.ab2@1022> INCLUDE "internal_commands.ab2"
0003A628 <internal_commands.ab2@1023> INCLUDE "internal_commands.ab2"
0003A62D <internal_commands.ab2@1024> INCLUDE "internal_commands.ab2"
0003A62E <internal_commands.ab2@1025> INCLUDE "internal_commands.ab2"
0003A630 <internal_commands.ab2@1028> INCLUDE "internal_commands.ab2"
0003A634 <internal_commands.ab2@1029> INCLUDE "internal_commands.ab2"
0003A636 <internal_commands.ab2@1030> INCLUDE "internal_commands.ab2"
0003A638 <internal_commands.ab2@1031> INCLUDE "internal_commands.ab2"
0003A63C <internal_commands.ab2@1032> INCLUDE "internal_commands.ab2"
0003A63E <internal_commands.ab2@1033> INCLUDE "internal_commands.ab2"
0003A642 <internal_commands.ab2@1037> INCLUDE "internal_commands.ab2"
0003A644 <internal_commands.ab2@1038> INCLUDE "internal_commands.ab2"
0003A649 <internal_commands.ab2@1039> INCLUDE "internal_commands.ab2"
0003A64A <internal_commands.ab2@1040> INCLUDE "internal_commands.ab2"
0003A64C <internal_commands.ab2@1043> INCLUDE "internal_commands.ab2"
0003A650 <internal_commands.ab2@1044> INCLUDE "internal_commands.ab2"
0003A652 <internal_commands.ab2@1045> INCLUDE "internal_commands.ab2"
0003A654 <internal_commands.ab2@1046> INCLUDE "internal_commands.ab2"
0003A658 <internal_commands.ab2@1047> INCLUDE "internal_commands.ab2"
0003A65A <internal_commands.ab2@1048> INCLUDE "internal_commands.ab2"
0003A65E <internal_commands.ab2@1052> INCLUDE "internal_commands.ab2"
0003A660 <internal_commands.ab2@1053> INCLUDE "internal_commands.ab2"
0003A665 <internal_commands.ab2@1054> INCLUDE "internal_commands.ab2"
0003A666 <internal_commands.ab2@1055> INCLUDE "internal_commands.ab2"
0003A668 <internal_commands.ab2@1058> INCLUDE "internal_commands.ab2"
0003A66C <internal_commands.ab2@1059> INCLUDE "internal_commands.ab2"
0003A66E <internal_commands.ab2@1060> INCLUDE "internal_commands.ab2"
0003A670 <internal_commands.ab2@1061> INCLUDE "internal_commands.ab2"
0003A674 <internal_commands.ab2@1062> INCLUDE "internal_commands.ab2"
0003A676 <internal_commands.ab2@1063> INCLUDE "internal_commands.ab2"
0003A67A <internal_commands.ab2@1067> INCLUDE "internal_commands.ab2"
0003A67C <internal_commands.ab2@1068> INCLUDE "internal_commands.ab2"
0003A681 <internal_commands.ab2@1069> INCLUDE "internal_commands.ab2"
0003A682 <internal_commands.ab2@1070> INCLUDE "internal_commands.ab2"
0003A684 <internal_commands.ab2@1073> INCLUDE "internal_commands.ab2"
0003A688 <internal_commands.ab2@1074> INCLUDE "internal_commands.ab2"
0003A68A <internal_commands.ab2@1075> INCLUDE "internal_commands.ab2"
0003A68C <internal_commands.ab2@1076> INCLUDE "internal_commands.ab2"
0003A690 <internal_commands.ab2@1077> INCLUDE "internal_commands.ab2"
0003A692 <internal_commands.ab2@1078> INCLUDE "internal_commands.ab2"
0003A696 <internal_commands.ab2@1082> INCLUDE "internal_commands.ab2"
0003A698 <internal_commands.ab2@1083> INCLUDE "internal_commands.ab2"
0003A69D <internal_commands.ab2@1084> INCLUDE "internal_commands.ab2"
0003A69E <internal_commands.ab2@1085> INCLUDE "internal_commands.ab2"
0003A6A0 <internal_commands.ab2@1088> INCLUDE "internal_commands.ab2"
0003A6A4 <internal_commands.ab2@1089> INCLUDE "internal_commands.ab2"
0003A6A6 <internal_commands.ab2@1090> INCLUDE "internal_commands.ab2"
0003A6A8 <internal_commands.ab2@1091> INCLUDE "internal_commands.ab2"
0003A6AC <internal_commands.ab2@1092> INCLUDE "internal_commands.ab2"
0003A6AE <internal_commands.ab2@1093> INCLUDE "internal_commands.ab2"
0003A6B2 <internal_commands.ab2@1097> INCLUDE "internal_commands.ab2"
0003A6B4 <internal_commands.ab2@1098> INCLUDE "internal_commands.ab2"
0003A6B9 <internal_commands.ab2@1099> INCLUDE "internal_commands.ab2"
0003A6BA <internal_commands.ab2@1100> INCLUDE "internal_commands.ab2"
0003A6BC <internal_commands.ab2@1103> INCLUDE "internal_commands.ab2"
0003A6C0 <internal_commands.ab2@1104> INCLUDE "internal_commands.ab2"
0003A6C2 <internal_commands.ab2@1105> INCLUDE "internal_commands.ab2"
0003A6C4 <internal_commands.ab2@1106> INCLUDE "internal_commands.ab2"
0003A6C8 <internal_commands.ab2@1107> INCLUDE "internal_commands.ab2"
0003A6CA <internal_commands.ab2@1108> INCLUDE "internal_commands.ab2"
0003A6CE <internal_commands.ab2@1112> INCLUDE "internal_commands.ab2"
0003A6D0 <internal_commands.ab2@1113> INCLUDE "internal_commands.ab2"
0003A6D5 <internal_commands.ab2@1114> INCLUDE "internal_commands.ab2"
0003A6D6 <internal_commands.ab2@1115> INCLUDE "internal_commands.ab2"
0003A6D8 <internal_commands.ab2@1118> INCLUDE "internal_commands.ab2"
0003A6DC <internal_commands.ab2@1119> INCLUDE "internal_commands.ab2"
0003A6DE <internal_commands.ab2@1120> INCLUDE "internal_commands.ab2"
0003A6E0 <internal_commands.ab2@1121> INCLUDE "internal_commands.ab2"
0003A6E4 <internal_commands.ab2@1122> INCLUDE "internal_commands.ab2"
0003A6E6 <internal_commands.ab2@1123> INCLUDE "internal_commands.ab2"
0003A6EA <internal_commands.ab2@1127> INCLUDE "internal_commands.ab2"
0003A6EC <internal_commands.ab2@1128> INCLUDE "internal_commands.ab2"
0003A6F1 <internal_commands.ab2@1129> INCLUDE "internal_commands.ab2"
0003A6F2 <internal_commands.ab2@1130> INCLUDE "internal_commands.ab2"
0003A6F4 <internal_commands.ab2@1133> INCLUDE "internal_commands.ab2"
0003A6F8 <internal_commands.ab2@1134> INCLUDE "internal_commands.ab2"
0003A6FA <internal_commands.ab2@1135> INCLUDE "internal_commands.ab2"
0003A6FC <internal_commands.ab2@1136> INCLUDE "internal_commands.ab2"
0003A700 <internal_commands.ab2@1137> INCLUDE "internal_commands.ab2"
0003A702 <internal_commands.ab2@1138> INCLUDE "internal_commands.ab2"
0003A706 <internal_commands.ab2@1142> INCLUDE "internal_commands.ab2"
0003A708 <internal_commands.ab2@1143> INCLUDE "internal_commands.ab2"
0003A70D <internal_commands.ab2@1144> INCLUDE "internal_commands.ab2"
0003A70E <internal_commands.ab2@1145> INCLUDE "internal_commands.ab2"
0003A710 <internal_commands.ab2@1148> INCLUDE "internal_commands.ab2"
0003A714 <internal_commands.ab2@1149> INCLUDE "internal_commands.ab2"
0003A716 <internal_commands.ab2@1150> INCLUDE "internal_commands.ab2"
0003A718 <internal_commands.ab2@1151> INCLUDE "internal_commands.ab2"
0003A71C <internal_commands.ab2@1152> INCLUDE "internal_commands.ab2"
0003A71E <internal_commands.ab2@1153> INCLUDE "internal_commands.ab2"
0003A722 <internal_commands.ab2@1157> INCLUDE "internal_commands.ab2"
0003A724 <internal_commands.ab2@1158> INCLUDE "internal_commands.ab2"
0003A729 <internal_commands.ab2@1159> INCLUDE "internal_commands.ab2"
0003A72A <internal_commands.ab2@1160> INCLUDE "internal_commands.ab2"
0003A72C <internal_commands.ab2@1163> INCLUDE "internal_commands.ab2"
0003A730 <internal_commands.ab2@1164> INCLUDE "internal_commands.ab2"
0003A732 <internal_commands.ab2@1165> INCLUDE "internal_commands.ab2"
0003A734 <internal_commands.ab2@1166> INCLUDE "internal_commands.ab2"
0003A738 <internal_commands.ab2@1167> INCLUDE "internal_commands.ab2"
0003A73A <internal_commands.ab2@1168> INCLUDE "internal_commands.ab2"
0003A73E <internal_commands.ab2@1172> INCLUDE "internal_commands.ab2"
0003A740 <internal_commands.ab2@1173> INCLUDE "internal_commands.ab2"
0003A745 <internal_commands.ab2@1174> INCLUDE "internal_commands.ab2"
0003A746 <internal_commands.ab2@1175> INCLUDE "internal_commands.ab2"
0003A748 <internal_commands.ab2@1178> INCLUDE "internal_commands.ab2"
0003A74C <internal_commands.ab2@1179> INCLUDE "internal_commands.ab2"
0003A74E <internal_commands.ab2@1180> INCLUDE "internal_commands.ab2"
0003A750 <internal_commands.ab2@1181> INCLUDE "internal_commands.ab2"
0003A754 <internal_commands.ab2@1182> INCLUDE "internal_commands.ab2"
0003A756 <internal_commands.ab2@1183> INCLUDE "internal_commands.ab2"
0003A75A <internal_commands.ab2@1186> INCLUDE "internal_commands.ab2"
0003A75C <internal_commands.ab2@1187> INCLUDE "internal_commands.ab2"
0003A760 <internal_commands.ab2@1188> INCLUDE "internal_commands.ab2"
0003A761 <internal_commands.ab2@1189> INCLUDE "internal_commands.ab2"
0003A762 <internal_commands.ab2@1190> INCLUDE "internal_commands.ab2"
0003A764 <internal_commands.ab2@1192> INCLUDE "internal_commands.ab2"
0003A768 <internal_commands.ab2@1193> INCLUDE "internal_commands.ab2"
0003A76A <internal_commands.ab2@1194> INCLUDE "internal_commands.ab2"
0003A76C <internal_commands.ab2@1195> INCLUDE "internal_commands.ab2"
0003A770 <internal_commands.ab2@1196> INCLUDE "internal_commands.ab2"
0003A772 <internal_commands.ab2@1197> INCLUDE "internal_commands.ab2"
0003A776 <internal_commands.ab2@1201> INCLUDE "internal_commands.ab2"
0003A778 <internal_commands.ab2@1202> INCLUDE "internal_commands.ab2"
0003A77D <internal_commands.ab2@1203> INCLUDE "internal_commands.ab2"
0003A77E <internal_commands.ab2@1204> INCLUDE "internal_commands.ab2"
0003A780 <internal_commands.ab2@1207> INCLUDE "internal_commands.ab2"
0003A784 <internal_commands.ab2@1208> INCLUDE "internal_commands.ab2"
0003A786 <internal_commands.ab2@1209> INCLUDE "internal_commands.ab2"
0003A788 <internal_commands.ab2@1210> INCLUDE "internal_commands.ab2"
0003A78C <internal_commands.ab2@1211> INCLUDE "internal_commands.ab2"
0003A78E <internal_commands.ab2@1212> INCLUDE "internal_commands.ab2"
0003A792 <internal_commands.ab2@1216> INCLUDE "internal_commands.ab2"
0003A794 <internal_commands.ab2@1217> INCLUDE "internal_commands.ab2"
0003A798 <internal_commands.ab2@1218> INCLUDE "internal_commands.ab2"
0003A799 <internal_commands.ab2@1219> INCLUDE "internal_commands.ab2"
0003A79A <internal_commands.ab2@1220> INCLUDE "internal_commands.ab2"
0003A79C <internal_commands.ab2@1222> INCLUDE "internal_commands.ab2"
0003A7A0 <internal_commands.ab2@1223> INCLUDE "internal_commands.ab2"
0003A7A2 <internal_commands.ab2@1224> INCLUDE "internal_commands.ab2"
0003A7A4 <internal_commands.ab2@1225> INCLUDE "internal_commands.ab2"
0003A7A8 <internal_commands.ab2@1226> INCLUDE "internal_commands.ab2"
0003A7AA <internal_commands.ab2@1227> INCLUDE "internal_commands.ab2"
0003A7AE <internal_commands.ab2@1231> INCLUDE "internal_commands.ab2"
0003A7B0 <internal_commands.ab2@1232> INCLUDE "internal_commands.ab2"
0003A7B5 <internal_commands.ab2@1233> INCLUDE "internal_commands.ab2"
0003A7B6 <internal_commands.ab2@1234> INCLUDE "internal_commands.ab2"
0003A7B8 <internal_commands.ab2@1237> INCLUDE "internal_commands.ab2"
0003A7BC <internal_commands.ab2@1238> INCLUDE "internal_commands.ab2"
0003A7BE <internal_commands.ab2@1239> INCLUDE "internal_commands.ab2"
0003A7C0 <internal_commands.ab2@1240> INCLUDE "internal_commands.ab2"
0003A7C4 <internal_commands.ab2@1241> INCLUDE "internal_commands.ab2"
0003A7C6 <internal_commands.ab2@1242> INCLUDE "internal_commands.ab2"
0003A7CA <internal_commands.ab2@1246> INCLUDE "internal_commands.ab2"
0003A7CC <internal_commands.ab2@1247> INCLUDE "internal_commands.ab2"
0003A7D1 <internal_commands.ab2@1248> INCLUDE "internal_commands.ab2"
0003A7D2 <internal_commands.ab2@1249> INCLUDE "internal_commands.ab2"
0003A7D4 <internal_commands.ab2@1252> INCLUDE "internal_commands.ab2"
0003A7D8 <internal_commands.ab2@1253> INCLUDE "internal_commands.ab2"
0003A7DA <internal_commands.ab2@1254> INCLUDE "internal_commands.ab2"
0003A7DC <internal_commands.ab2@1255> INCLUDE "internal_commands.ab2"
0003A7E0 <internal_commands.ab2@1256> INCLUDE "internal_commands.ab2"
0003A7E2 <internal_commands.ab2@1257> INCLUDE "internal_commands.ab2"
0003A7E6 <internal_commands.ab2@1261> INCLUDE "internal_commands.ab2"
0003A7E8 <internal_commands.ab2@1262> INCLUDE "internal_commands.ab2"
0003A7EC <internal_commands.ab2@1263> INCLUDE "internal_commands.ab2"
0003A7ED <internal_commands.ab2@1264> INCLUDE "internal_commands.ab2"
0003A7EE <internal_commands.ab2@1265> INCLUDE "internal_commands.ab2"
0003A7F0 <internal_commands.ab2@1267> INCLUDE "internal_commands.ab2"
0003A7F4 <internal_commands.ab2@1268> INCLUDE "internal_commands.ab2"
0003A7F6 <internal_commands.ab2@1269> INCLUDE "internal_commands.ab2"
0003A7F8 <internal_commands.ab2@1270> INCLUDE "internal_commands.ab2"
0003A7FC <internal_commands.ab2@1271> INCLUDE "internal_commands.ab2"
0003A7FE <internal_commands.ab2@1272> INCLUDE "internal_commands.ab2"
0003A802 <internal_commands.ab2@1276> INCLUDE "internal_commands.ab2"
0003A804 <internal_commands.ab2@1277> INCLUDE "internal_commands.ab2"
0003A809 <internal_commands.ab2@1278> INCLUDE "internal_commands.ab2"
0003A80A <internal_commands.ab2@1279> INCLUDE "internal_commands.ab2"
0003A80C <internal_commands.ab2@1282> INCLUDE "internal_commands.ab2"
0003A810 <internal_commands.ab2@1283> INCLUDE "internal_commands.ab2"
0003A812 <internal_commands.ab2@1284> INCLUDE "internal_commands.ab2"
0003A814 <internal_commands.ab2@1285> INCLUDE "internal_commands.ab2"
0003A818 <internal_commands.ab2@1286> INCLUDE "internal_commands.ab2"
0003A81A <internal_commands.ab2@1287> INCLUDE "internal_commands.ab2"
0003A81E <internal_commands.ab2@1291> INCLUDE "internal_commands.ab2"
0003A820 <internal_commands.ab2@1292> INCLUDE "internal_commands.ab2"
0003A824 <internal_commands.ab2@1293> INCLUDE "internal_commands.ab2"
0003A825 <internal_commands.ab2@1294> INCLUDE "internal_commands.ab2"
0003A826 <internal_commands.ab2@1295> INCLUDE "internal_commands.ab2"
0003A828 <internal_commands.ab2@1297> INCLUDE "internal_commands.ab2"
0003A82C <internal_commands.ab2@1298> INCLUDE "internal_commands.ab2"
0003A82E <internal_commands.ab2@1299> INCLUDE "internal_commands.ab2"
0003A830 <internal_commands.ab2@1300> INCLUDE "internal_commands.ab2"
0003A834 <internal_commands.ab2@1301> INCLUDE "internal_commands.ab2"
0003A836 <internal_commands.ab2@1302> INCLUDE "internal_commands.ab2"
0003A83A <internal_commands.ab2@1306> INCLUDE "internal_commands.ab2"
0003A83C <internal_commands.ab2@1307> INCLUDE "internal_commands.ab2"
0003A840 <internal_commands.ab2@1308> INCLUDE "internal_commands.ab2"
0003A841 <internal_commands.ab2@1309> INCLUDE "internal_commands.ab2"
0003A842 <internal_commands.ab2@1310> INCLUDE "internal_commands.ab2"
0003A844 <internal_commands.ab2@1312> INCLUDE "internal_commands.ab2"
0003A848 <internal_commands.ab2@1313> INCLUDE "internal_commands.ab2"
0003A84A <internal_commands.ab2@1314> INCLUDE "internal_commands.ab2"
0003A84C <internal_commands.ab2@1315> INCLUDE "internal_commands.ab2"
0003A850 <internal_commands.ab2@1316> INCLUDE "internal_commands.ab2"
0003A852 <internal_commands.ab2@1317> INCLUDE "internal_commands.ab2"
0003A856 <internal_commands.ab2@1321> INCLUDE "internal_commands.ab2"
0003A858 <internal_commands.ab2@1322> INCLUDE "internal_commands.ab2"
0003A860 <internal_commands.ab2@1323> INCLUDE "internal_commands.ab2"
0003A861 <internal_commands.ab2@1324> INCLUDE "internal_commands.ab2"
0003A862 <internal_commands.ab2@1325> INCLUDE "internal_commands.ab2"
0003A864 <internal_commands.ab2@1327> INCLUDE "internal_commands.ab2"
0003A868 <internal_commands.ab2@1328> INCLUDE "internal_commands.ab2"
0003A86A <internal_commands.ab2@1329> INCLUDE "internal_commands.ab2"
0003A86C <internal_commands.ab2@1330> INCLUDE "internal_commands.ab2"
0003A870 <internal_commands.ab2@1331> INCLUDE "internal_commands.ab2"
0003A872 <internal_commands.ab2@1332> INCLUDE "internal_commands.ab2"
0003A876 <internal_commands.ab2@1336> INCLUDE "internal_commands.ab2"
0003A878 <internal_commands.ab2@1337> INCLUDE "internal_commands.ab2"
0003A87C <internal_commands.ab2@1338> INCLUDE "internal_commands.ab2"
0003A87D <internal_commands.ab2@1339> INCLUDE "internal_commands.ab2"
0003A87E <internal_commands.ab2@1340> INCLUDE "internal_commands.ab2"
0003A880 <internal_commands.ab2@1342> INCLUDE "internal_commands.ab2"
0003A884 <internal_commands.ab2@1343> INCLUDE "internal_commands.ab2"
0003A886 <internal_commands.ab2@1344> INCLUDE "internal_commands.ab2"
0003A888 <internal_commands.ab2@1345> INCLUDE "internal_commands.ab2"
0003A88C <internal_commands.ab2@1346> INCLUDE "internal_commands.ab2"
0003A88E <internal_commands.ab2@1347> INCLUDE "internal_commands.ab2"
0003A892 <internal_commands.ab2@1351> INCLUDE "internal_commands.ab2"
0003A894 <internal_commands.ab2@1352> INCLUDE "internal_commands.ab2"
0003A898 <internal_commands.ab2@1353> INCLUDE "internal_commands.ab2"
0003A899 <internal_commands.ab2@1354> INCLUDE "internal_commands.ab2"
0003A89A <internal_commands.ab2@1355> INCLUDE "internal_commands.ab2"
0003A89C <internal_commands.ab2@1357> INCLUDE "internal_commands.ab2"
0003A8A0 <internal_commands.ab2@1358> INCLUDE "internal_commands.ab2"
0003A8A2 <internal_commands.ab2@1359> INCLUDE "internal_commands.ab2"
0003A8A4 <internal_commands.ab2@1360> INCLUDE "internal_commands.ab2"
0003A8A8 <internal_commands.ab2@1361> INCLUDE "internal_commands.ab2"
0003A8AA <internal_commands.ab2@1362> INCLUDE "internal_commands.ab2"
0003A8AE <internal_commands.ab2@1366> INCLUDE "internal_commands.ab2"
0003A8B0 <internal_commands.ab2@1367> INCLUDE "internal_commands.ab2"
0003A8B4 <internal_commands.ab2@1368> INCLUDE "internal_commands.ab2"
0003A8B5 <internal_commands.ab2@1369> INCLUDE "internal_commands.ab2"
0003A8B6 <internal_commands.ab2@1370> INCLUDE "internal_commands.ab2"
0003A8B8 <internal_commands.ab2@1372> INCLUDE "internal_commands.ab2"
0003A8BC <internal_commands.ab2@1373> INCLUDE "internal_commands.ab2"
0003A8BE <internal_commands.ab2@1374> INCLUDE "internal_commands.ab2"
0003A8C0 <internal_commands.ab2@1375> INCLUDE "internal_commands.ab2"
0003A8C4 <internal_commands.ab2@1376> INCLUDE "internal_commands.ab2"
0003A8C6 <internal_commands.ab2@1377> INCLUDE "internal_commands.ab2"
0003A8CA <internal_commands.ab2@1381> INCLUDE "internal_commands.ab2"
0003A8CC <internal_commands.ab2@1382> INCLUDE "internal_commands.ab2"
0003A8D1 <internal_commands.ab2@1383> INCLUDE "internal_commands.ab2"
0003A8D2 <internal_commands.ab2@1384> INCLUDE "internal_commands.ab2"
0003A8D4 <internal_commands.ab2@1387> INCLUDE "internal_commands.ab2"
0003A8D8 <internal_commands.ab2@1388> INCLUDE "internal_commands.ab2"
0003A8DA <internal_commands.ab2@1389> INCLUDE "internal_commands.ab2"
0003A8DC <internal_commands.ab2@1390> INCLUDE "internal_commands.ab2"
0003A8E0 <internal_commands.ab2@1391> INCLUDE "internal_commands.ab2"
0003A8E2 <internal_commands.ab2@1392> INCLUDE "internal_commands.ab2"
0003A8E6 <internal_commands.ab2@1396> INCLUDE "internal_commands.ab2"
0003A8E8 <internal_commands.ab2@1397> INCLUDE "internal_commands.ab2"
0003A8EC <internal_commands.ab2@1398> INCLUDE "internal_commands.ab2"
0003A8ED <internal_commands.ab2@1399> INCLUDE "internal_commands.ab2"
0003A8EE <internal_commands.ab2@1400> INCLUDE "internal_commands.ab2"
0003A8F0 <internal_commands.ab2@1402> INCLUDE "internal_commands.ab2"
0003A8F4 <internal_commands.ab2@1403> INCLUDE "internal_commands.ab2"
0003A8F6 <internal_commands.ab2@1404> INCLUDE "internal_commands.ab2"
0003A8F8 <internal_commands.ab2@1405> INCLUDE "internal_commands.ab2"
0003A8FC <internal_commands.ab2@1406> INCLUDE "internal_commands.ab2"
0003A8FE <internal_commands.ab2@1407> INCLUDE "internal_commands.ab2"
0003A902 <internal_commands.ab2@1411> INCLUDE "internal_commands.ab2"
0003A904 <internal_commands.ab2@1412> INCLUDE "internal_commands.ab2"
0003A908 <internal_commands.ab2@1413> INCLUDE "internal_commands.ab2"
0003A909 <internal_commands.ab2@1414> INCLUDE "internal_commands.ab2"
0003A90A <internal_commands.ab2@1415> INCLUDE "internal_commands.ab2"
0003A90C <internal_commands.ab2@1417> INCLUDE "internal_commands.ab2"
0003A910 <internal_commands.ab2@1418> INCLUDE "internal_commands.ab2"
0003A912 <internal_commands.ab2@1419> INCLUDE "internal_commands.ab2"
0003A914 <internal_commands.ab2@1420> INCLUDE "internal_commands.ab2"
0003A918 <internal_commands.ab2@1421> INCLUDE "internal_commands.ab2"
0003A91A <internal_commands.ab2@1422> INCLUDE "internal_commands.ab2"
0003A91E <internal_commands.ab2@1426> INCLUDE "internal_commands.ab2"
0003A920 <internal_commands.ab2@1427> INCLUDE "internal_commands.ab2"
0003A925 <internal_commands.ab2@1428> INCLUDE "internal_commands.ab2"
0003A926 <internal_commands.ab2@1429> INCLUDE "internal_commands.ab2"
0003A928 <internal_commands.ab2@1432> INCLUDE "internal_commands.ab2"
0003A92C <internal_commands.ab2@1433> INCLUDE "internal_commands.ab2"
0003A92E <internal_commands.ab2@1434> INCLUDE "internal_commands.ab2"
0003A930 <internal_commands.ab2@1435> INCLUDE "internal_commands.ab2"
0003A934 <internal_commands.ab2@1436> INCLUDE "internal_commands.ab2"
0003A936 <internal_commands.ab2@1437> INCLUDE "internal_commands.ab2"
0003A93A <internal_commands.ab2@1441> INCLUDE "internal_commands.ab2"
0003A93C <internal_commands.ab2@1442> INCLUDE "internal_commands.ab2"
0003A941 <internal_commands.ab2@1443> INCLUDE "internal_commands.ab2"
0003A942 <internal_commands.ab2@1444> INCLUDE "internal_commands.ab2"
0003A944 <internal_commands.ab2@1447> INCLUDE "internal_commands.ab2"
0003A948 <internal_commands.ab2@1448> INCLUDE "internal_commands.ab2"
0003A94A <internal_commands.ab2@1449> INCLUDE "internal_commands.ab2"
0003A94C <internal_commands.ab2@1450> INCLUDE "internal_commands.ab2"
0003A950 <internal_commands.ab2@1451> INCLUDE "internal_commands.ab2"
0003A952 <internal_commands.ab2@1452> INCLUDE "internal_commands.ab2"
0003A956 <internal_commands.ab2@1457> INCLUDE "internal_commands.ab2"
0003A958 <internal_commands.ab2@1458> INCLUDE "internal_commands.ab2"
0003A95E <internal_commands.ab2@1459> INCLUDE "internal_commands.ab2"
0003A95F <internal_commands.ab2@1460> INCLUDE "internal_commands.ab2"
0003A960 <internal_commands.ab2@1461> INCLUDE "internal_commands.ab2"
0003A962 <internal_commands.ab2@1463> INCLUDE "internal_commands.ab2"
0003A966 <internal_commands.ab2@1464> INCLUDE "internal_commands.ab2"
0003A968 <internal_commands.ab2@1465> INCLUDE "internal_commands.ab2"
0003A96A <internal_commands.ab2@1466> INCLUDE "internal_commands.ab2"
0003A96E <internal_commands.ab2@1467> INCLUDE "internal_commands.ab2"
0003A970 <internal_commands.ab2@1468> INCLUDE "internal_commands.ab2"
0003A974 <internal_commands.ab2@1472> INCLUDE "internal_commands.ab2"
0003A976 <internal_commands.ab2@1473> INCLUDE "internal_commands.ab2"
0003A97C <internal_commands.ab2@1474> INCLUDE "internal_commands.ab2"
0003A97D <internal_commands.ab2@1475> INCLUDE "internal_commands.ab2"
0003A97E <internal_commands.ab2@1476> INCLUDE "internal_commands.ab2"
0003A980 <internal_commands.ab2@1478> INCLUDE "internal_commands.ab2"
0003A984 <internal_commands.ab2@1479> INCLUDE "internal_commands.ab2"
0003A986 <internal_commands.ab2@1480> INCLUDE "internal_commands.ab2"
0003A988 <internal_commands.ab2@1481> INCLUDE "internal_commands.ab2"
0003A98C <internal_commands.ab2@1482> INCLUDE "internal_commands.ab2"
0003A98E <internal_commands.ab2@1483> INCLUDE "internal_commands.ab2"
0003A992 <internal_commands.ab2@1487> INCLUDE "internal_commands.ab2"
0003A994 <internal_commands.ab2@1488> INCLUDE "internal_commands.ab2"
0003A99A <internal_commands.ab2@1489> INCLUDE "internal_commands.ab2"
0003A99B <internal_commands.ab2@1490> INCLUDE "internal_commands.ab2"
0003A99C <internal_commands.ab2@1491> INCLUDE "internal_commands.ab2"
0003A99E <internal_commands.ab2@1493> INCLUDE "internal_commands.ab2"
0003A9A2 <internal_commands.ab2@1494> INCLUDE "internal_commands.ab2"
0003A9A4 <internal_commands.ab2@1495> INCLUDE "internal_commands.ab2"
0003A9A6 <internal_commands.ab2@1496> INCLUDE "internal_commands.ab2"
0003A9AA <internal_commands.ab2@1497> INCLUDE "internal_commands.ab2"
0003A9AC <internal_commands.ab2@1498> INCLUDE "internal_commands.ab2"
0003A9B0 <internal_commands.ab2@1502> INCLUDE "internal_commands.ab2"
0003A9B2 <internal_commands.ab2@1503> INCLUDE "internal_commands.ab2"
0003A9B7 <internal_commands.ab2@1504> INCLUDE "internal_commands.ab2"
0003A9B8 <internal_commands.ab2@1505> INCLUDE "internal_commands.ab2"
0003A9BA <internal_commands.ab2@1508> INCLUDE "internal_commands.ab2"
0003A9BE <internal_commands.ab2@1509> INCLUDE "internal_commands.ab2"
0003A9C0 <internal_commands.ab2@1510> INCLUDE "internal_commands.ab2"
0003A9C2 <internal_commands.ab2@1511> INCLUDE "internal_commands.ab2"
0003A9C6 <internal_commands.ab2@1512> INCLUDE "internal_commands.ab2"
0003A9C8 <internal_commands.ab2@1513> INCLUDE "internal_commands.ab2"
0003A9CC <internal_commands.ab2@1517> INCLUDE "internal_commands.ab2"
0003A9CE <internal_commands.ab2@1518> INCLUDE "internal_commands.ab2"
0003A9D3 <internal_commands.ab2@1519> INCLUDE "internal_commands.ab2"
0003A9D4 <internal_commands.ab2@1520> INCLUDE "internal_commands.ab2"
0003A9D6 <internal_commands.ab2@1523> INCLUDE "internal_commands.ab2"
0003A9DA <internal_commands.ab2@1524> INCLUDE "internal_commands.ab2"
0003A9DC <internal_commands.ab2@1525> INCLUDE "internal_commands.ab2"
0003A9DE <internal_commands.ab2@1526> INCLUDE "internal_commands.ab2"
0003A9E2 <internal_commands.ab2@1527> INCLUDE "internal_commands.ab2"
0003A9E4 <internal_commands.ab2@1528> INCLUDE "internal_commands.ab2"
0003A9E8 <internal_commands.ab2@1532> INCLUDE "internal_commands.ab2"
0003A9EA <internal_commands.ab2@1533> INCLUDE "internal_commands.ab2"
0003A9EF <internal_commands.ab2@1534> INCLUDE "internal_commands.ab2"
0003A9F0 <internal_commands.ab2@1535> INCLUDE "internal_commands.ab2"
0003A9F2 <internal_commands.ab2@1538> INCLUDE "internal_commands.ab2"
0003A9F6 <internal_commands.ab2@1539> INCLUDE "internal_commands.ab2"
0003A9F8 <internal_commands.ab2@1540> INCLUDE "internal_commands.ab2"
0003A9FA <internal_commands.ab2@1541> INCLUDE "internal_commands.ab2"
0003A9FE <internal_commands.ab2@1542> INCLUDE "internal_commands.ab2"
0003AA00 <internal_commands.ab2@1543> INCLUDE "internal_commands.ab2"
0003AA04 <internal_commands.ab2@1547> INCLUDE "internal_commands.ab2"
0003AA06 <internal_commands.ab2@1548> INCLUDE "internal_commands.ab2"
0003AA0A <internal_commands.ab2@1549> INCLUDE "internal_commands.ab2"
0003AA0B <internal_commands.ab2@1550> INCLUDE "internal_commands.ab2"
0003AA0C <internal_commands.ab2@1551> INCLUDE "internal_commands.ab2"
0003AA0E <internal_commands.ab2@1553> INCLUDE "internal_commands.ab2"
0003AA12 <internal_commands.ab2@1554> INCLUDE "internal_commands.ab2"
0003AA14 <internal_commands.ab2@1555> INCLUDE "internal_commands.ab2"
0003AA16 <internal_commands.ab2@1556> INCLUDE "internal_commands.ab2"
0003AA1A <internal_commands.ab2@1557> INCLUDE "internal_commands.ab2"
0003AA1C <internal_commands.ab2@1558> INCLUDE "internal_commands.ab2"
0003AA20 <internal_commands.ab2@1562> INCLUDE "internal_commands.ab2"
0003AA22 <internal_commands.ab2@1563> INCLUDE "internal_commands.ab2"
0003AA27 <internal_commands.ab2@1564> INCLUDE "internal_commands.ab2"
0003AA28 <internal_commands.ab2@1565> INCLUDE "internal_commands.ab2"
0003AA2A <internal_commands.ab2@1568> INCLUDE "internal_commands.ab2"
0003AA2E <internal_commands.ab2@1569> INCLUDE "internal_commands.ab2"
0003AA30 <internal_commands.ab2@1570> INCLUDE "internal_commands.ab2"
0003AA32 <internal_commands.ab2@1571> INCLUDE "internal_commands.ab2"
0003AA36 <internal_commands.ab2@1572> INCLUDE "internal_commands.ab2"
0003AA38 <internal_commands.ab2@1573> INCLUDE "internal_commands.ab2"
0003AA3C <internal_commands.ab2@1577> INCLUDE "internal_commands.ab2"
0003AA3E <internal_commands.ab2@1578> INCLUDE "internal_commands.ab2"
0003AA42 <internal_commands.ab2@1579> INCLUDE "internal_commands.ab2"
0003AA43 <internal_commands.ab2@1580> INCLUDE "internal_commands.ab2"
0003AA44 <internal_commands.ab2@1581> INCLUDE "internal_commands.ab2"
0003AA46 <internal_commands.ab2@1583> INCLUDE "internal_commands.ab2"
0003AA4A <internal_commands.ab2@1584> INCLUDE "internal_commands.ab2"
0003AA4C <internal_commands.ab2@1585> INCLUDE "internal_commands.ab2"
0003AA4E <internal_commands.ab2@1586> INCLUDE "internal_commands.ab2"
0003AA52 <internal_commands.ab2@1587> INCLUDE "internal_commands.ab2"
0003AA54 <internal_commands.ab2@1588> INCLUDE "internal_commands.ab2"
0003AA58 <internal_commands.ab2@1592> INCLUDE "internal_commands.ab2"
0003AA5A <internal_commands.ab2@1593> INCLUDE "internal_commands.ab2"
0003AA5E <internal_commands.ab2@1594> INCLUDE "internal_commands.ab2"
0003AA5F <internal_commands.ab2@1595> INCLUDE "internal_commands.ab2"
0003AA60 <internal_commands.ab2@1596> INCLUDE "internal_commands.ab2"
0003AA62 <internal_commands.ab2@1598> INCLUDE "internal_commands.ab2"
0003AA66 <internal_commands.ab2@1599> INCLUDE "internal_commands.ab2"
0003AA68 <internal_commands.ab2@1600> INCLUDE "internal_commands.ab2"
0003AA6A <internal_commands.ab2@1601> INCLUDE "internal_commands.ab2"
0003AA6E <internal_commands.ab2@1602> INCLUDE "internal_commands.ab2"
0003AA70 <internal_commands.ab2@1603> INCLUDE "internal_commands.ab2"
0003AA74 <internal_commands.ab2@1607> INCLUDE "internal_commands.ab2"
0003AA76 <internal_commands.ab2@1608> INCLUDE "internal_commands.ab2"
0003AA79 <internal_commands.ab2@1609> INCLUDE "internal_commands.ab2"
0003AA7A <internal_commands.ab2@1610> INCLUDE "internal_commands.ab2"
0003AA7C <internal_commands.ab2@1613> INCLUDE "internal_commands.ab2"
0003AA80 <internal_commands.ab2@1614> INCLUDE "internal_commands.ab2"
0003AA82 <internal_commands.ab2@1615> INCLUDE "internal_commands.ab2"
0003AA84 <internal_commands.ab2@1616> INCLUDE "internal_commands.ab2"
0003AA88 <internal_commands.ab2@1617> INCLUDE "internal_commands.ab2"
0003AA8A <internal_commands.ab2@1618> INCLUDE "internal_commands.ab2"
0003AA8E <internal_commands.ab2@1622> INCLUDE "internal_commands.ab2"
0003AA90 <internal_commands.ab2@1623> INCLUDE "internal_commands.ab2"
0003AA94 <internal_commands.ab2@1624> INCLUDE "internal_commands.ab2"
0003AA95 <internal_commands.ab2@1625> INCLUDE "internal_commands.ab2"
0003AA96 <internal_commands.ab2@1626> INCLUDE "internal_commands.ab2"
0003AA98 <internal_commands.ab2@1628> INCLUDE "internal_commands.ab2"
0003AA9C <internal_commands.ab2@1629> INCLUDE "internal_commands.ab2"
0003AA9E <internal_commands.ab2@1630> INCLUDE "internal_commands.ab2"
0003AAA0 <internal_commands.ab2@1631> INCLUDE "internal_commands.ab2"
0003AAA4 <internal_commands.ab2@1632> INCLUDE "internal_commands.ab2"
0003AAA6 <internal_commands.ab2@1633> INCLUDE "internal_commands.ab2"
0003AAAA <internal_commands.ab2@1637> INCLUDE "internal_commands.ab2"
0003AAAC <internal_commands.ab2@1638> INCLUDE "internal_commands.ab2"
0003AAB0 <internal_commands.ab2@1639> INCLUDE "internal_commands.ab2"
0003AAB1 <internal_commands.ab2@1640> INCLUDE "internal_commands.ab2"
0003AAB2 <internal_commands.ab2@1641> INCLUDE "internal_commands.ab2"
0003AAB4 <internal_commands.ab2@1643> INCLUDE "internal_commands.ab2"
0003AAB8 <internal_commands.ab2@1644> INCLUDE "internal_commands.ab2"
0003AABA <internal_commands.ab2@1645> INCLUDE "internal_commands.ab2"
0003AABC <internal_commands.ab2@1646> INCLUDE "internal_commands.ab2"
0003AAC0 <internal_commands.ab2@1647> INCLUDE "internal_commands.ab2"
0003AAC2 <internal_commands.ab2@1648> INCLUDE "internal_commands.ab2"
0003AAC6 <internal_commands.ab2@1652> INCLUDE "internal_commands.ab2"
0003AAC8 <internal_commands.ab2@1653> INCLUDE "internal_commands.ab2"
0003AACE <internal_commands.ab2@1654> INCLUDE "internal_commands.ab2"
0003AACF <internal_commands.ab2@1655> INCLUDE "internal_commands.ab2"
0003AAD0 <internal_commands.ab2@1656> INCLUDE "internal_commands.ab2"
0003AAD2 <internal_commands.ab2@1658> INCLUDE "internal_commands.ab2"
0003AAD6 <internal_commands.ab2@1659> INCLUDE "internal_commands.ab2"
0003AAD8 <internal_commands.ab2@1660> INCLUDE "internal_commands.ab2"
0003AADA <internal_commands.ab2@1661> INCLUDE "internal_commands.ab2"
0003AADE <internal_commands.ab2@1662> INCLUDE "internal_commands.ab2"
0003AAE0 <internal_commands.ab2@1663> INCLUDE "internal_commands.ab2"
0003AAE4 <internal_commands.ab2@1667> INCLUDE "internal_commands.ab2"
0003AAE6 <internal_commands.ab2@1668> INCLUDE "internal_commands.ab2"
0003AAEA <internal_commands.ab2@1669> INCLUDE "internal_commands.ab2"
0003AAEB <internal_commands.ab2@1670> INCLUDE "internal_commands.ab2"
0003AAEC <internal_commands.ab2@1671> INCLUDE "internal_commands.ab2"
0003AAEE <internal_commands.ab2@1673> INCLUDE "internal_commands.ab2"
0003AAF2 <internal_commands.ab2@1674> INCLUDE "internal_commands.ab2"
0003AAF4 <internal_commands.ab2@1675> INCLUDE "internal_commands.ab2"
0003AAF6 <internal_commands.ab2@1676> INCLUDE "internal_commands.ab2"
0003AAFA <internal_commands.ab2@1677> INCLUDE "internal_commands.ab2"
0003AAFC <internal_commands.ab2@1678> INCLUDE "internal_commands.ab2"
0003AB00 <internal_commands.ab2@1682> INCLUDE "internal_commands.ab2"
0003AB02 <internal_commands.ab2@1683> INCLUDE "internal_commands.ab2"
0003AB06 <internal_commands.ab2@1684> INCLUDE "internal_commands.ab2"
0003AB07 <internal_commands.ab2@1685> INCLUDE "internal_commands.ab2"
0003AB08 <internal_commands.ab2@1686> INCLUDE "internal_commands.ab2"
0003AB0A <internal_commands.ab2@1688> INCLUDE "internal_commands.ab2"
0003AB0E <internal_commands.ab2@1689> INCLUDE "internal_commands.ab2"
0003AB10 <internal_commands.ab2@1690> INCLUDE "internal_commands.ab2"
0003AB12 <internal_commands.ab2@1691> INCLUDE "internal_commands.ab2"
0003AB16 <internal_commands.ab2@1692> INCLUDE "internal_commands.ab2"
0003AB18 <internal_commands.ab2@1693> INCLUDE "internal_commands.ab2"
0003AB1C <internal_commands.ab2@1697> INCLUDE "internal_commands.ab2"
0003AB1E <internal_commands.ab2@1698> INCLUDE "internal_commands.ab2"
0003AB23 <internal_commands.ab2@1699> INCLUDE "internal_commands.ab2"
0003AB24 <internal_commands.ab2@1700> INCLUDE "internal_commands.ab2"
0003AB26 <internal_commands.ab2@1703> INCLUDE "internal_commands.ab2"
0003AB2A <internal_commands.ab2@1704> INCLUDE "internal_commands.ab2"
0003AB2C <internal_commands.ab2@1705> INCLUDE "internal_commands.ab2"
0003AB2E <internal_commands.ab2@1706> INCLUDE "internal_commands.ab2"
0003AB32 <internal_commands.ab2@1707> INCLUDE "internal_commands.ab2"
0003AB34 <internal_commands.ab2@1708> INCLUDE "internal_commands.ab2"
0003AB38 <internal_commands.ab2@1712> INCLUDE "internal_commands.ab2"
0003AB3A <internal_commands.ab2@1713> INCLUDE "internal_commands.ab2"
0003AB3F <internal_commands.ab2@1714> INCLUDE "internal_commands.ab2"
0003AB40 <internal_commands.ab2@1715> INCLUDE "internal_commands.ab2"
0003AB42 <internal_commands.ab2@1718> INCLUDE "internal_commands.ab2"
0003AB46 <internal_commands.ab2@1719> INCLUDE "internal_commands.ab2"
0003AB48 <internal_commands.ab2@1720> INCLUDE "internal_commands.ab2"
0003AB4A <internal_commands.ab2@1721> INCLUDE "internal_commands.ab2"
0003AB4E <internal_commands.ab2@1722> INCLUDE "internal_commands.ab2"
0003AB50 <internal_commands.ab2@1723> INCLUDE "internal_commands.ab2"
0003AB54 <internal_commands.ab2@1727> INCLUDE "internal_commands.ab2"
0003AB56 <internal_commands.ab2@1728> INCLUDE "internal_commands.ab2"
0003AB5A <internal_commands.ab2@1729> INCLUDE "internal_commands.ab2"
0003AB5B <internal_commands.ab2@1730> INCLUDE "internal_commands.ab2"
0003AB5C <internal_commands.ab2@1731> INCLUDE "internal_commands.ab2"
0003AB5E <internal_commands.ab2@1733> INCLUDE "internal_commands.ab2"
0003AB62 <internal_commands.ab2@1734> INCLUDE "internal_commands.ab2"
0003AB64 <internal_commands.ab2@1735> INCLUDE "internal_commands.ab2"
0003AB66 <internal_commands.ab2@1736> INCLUDE "internal_commands.ab2"
0003AB6A <internal_commands.ab2@1737> INCLUDE "internal_commands.ab2"
0003AB6C <internal_commands.ab2@1738> INCLUDE "internal_commands.ab2"
0003AB70 <internal_commands.ab2@1742> INCLUDE "internal_commands.ab2"
0003AB72 <internal_commands.ab2@1743> INCLUDE "internal_commands.ab2"
0003AB76 <internal_commands.ab2@1744> INCLUDE "internal_commands.ab2"
0003AB77 <internal_commands.ab2@1745> INCLUDE "internal_commands.ab2"
0003AB78 <internal_commands.ab2@1746> INCLUDE "internal_commands.ab2"
0003AB7A <internal_commands.ab2@1748> INCLUDE "internal_commands.ab2"
0003AB7E <internal_commands.ab2@1749> INCLUDE "internal_commands.ab2"
0003AB80 <internal_commands.ab2@1750> INCLUDE "internal_commands.ab2"
0003AB82 <internal_commands.ab2@1751> INCLUDE "internal_commands.ab2"
0003AB86 <internal_commands.ab2@1752> INCLUDE "internal_commands.ab2"
0003AB88 <internal_commands.ab2@1753> INCLUDE "internal_commands.ab2"
0003AB8C <internal_commands.ab2@1757> INCLUDE "internal_commands.ab2"
0003AB8E <internal_commands.ab2@1758> INCLUDE "internal_commands.ab2"
0003AB92 <internal_commands.ab2@1759> INCLUDE "internal_commands.ab2"
0003AB93 <internal_commands.ab2@1760> INCLUDE "internal_commands.ab2"
0003AB94 <internal_commands.ab2@1761> INCLUDE "internal_commands.ab2"
0003AB96 <internal_commands.ab2@1763> INCLUDE "internal_commands.ab2"
0003AB9A <internal_commands.ab2@1764> INCLUDE "internal_commands.ab2"
0003AB9C <internal_commands.ab2@1765> INCLUDE "internal_commands.ab2"
0003AB9E <internal_commands.ab2@1766> INCLUDE "internal_commands.ab2"
0003ABA2 <internal_commands.ab2@1767> INCLUDE "internal_commands.ab2"
0003ABA4 <internal_commands.ab2@1768> INCLUDE "internal_commands.ab2"
0003ABA8 <internal_commands.ab2@1772> INCLUDE "internal_commands.ab2"
0003ABAA <internal_commands.ab2@1773> INCLUDE "internal_commands.ab2"
0003ABAF <internal_commands.ab2@1774> INCLUDE "internal_commands.ab2"
0003ABB0 <internal_commands.ab2@1775> INCLUDE "internal_commands.ab2"
0003ABB2 <internal_commands.ab2@1778> INCLUDE "internal_commands.ab2"
0003ABB6 <internal_commands.ab2@1779> INCLUDE "internal_commands.ab2"
0003ABB8 <internal_commands.ab2@1780> INCLUDE "internal_commands.ab2"
0003ABBA <internal_commands.ab2@1781> INCLUDE "internal_commands.ab2"
0003ABBE <internal_commands.ab2@1782> INCLUDE "internal_commands.ab2"
0003ABC0 <internal_commands.ab2@1783> INCLUDE "internal_commands.ab2"
0003ABC4 <internal_commands.ab2@1787> INCLUDE "internal_commands.ab2"
0003ABC6 <internal_commands.ab2@1788> INCLUDE "internal_commands.ab2"
0003ABCA <internal_commands.ab2@1789> INCLUDE "internal_commands.ab2"
0003ABCB <internal_commands.ab2@1790> INCLUDE "internal_commands.ab2"
0003ABCC <internal_commands.ab2@1791> INCLUDE "internal_commands.ab2"
0003ABCE <internal_commands.ab2@1793> INCLUDE "internal_commands.ab2"
0003ABD2 <internal_commands.ab2@1794> INCLUDE "internal_commands.ab2"
0003ABD4 <internal_commands.ab2@1795> INCLUDE "internal_commands.ab2"
0003ABD6 <internal_commands.ab2@1796> INCLUDE "internal_commands.ab2"
0003ABDA <internal_commands.ab2@1797> INCLUDE "internal_commands.ab2"
0003ABDC <internal_commands.ab2@1798> INCLUDE "internal_commands.ab2"
0003ABE0 <internal_commands.ab2@1802> INCLUDE "internal_commands.ab2"
0003ABE2 <internal_commands.ab2@1803> INCLUDE "internal_commands.ab2"
0003ABE6 <internal_commands.ab2@1804> INCLUDE "internal_commands.ab2"
0003ABE7 <internal_commands.ab2@1805> INCLUDE "internal_commands.ab2"
0003ABE8 <internal_commands.ab2@1806> INCLUDE "internal_commands.ab2"
0003ABEA <internal_commands.ab2@1808> INCLUDE "internal_commands.ab2"
0003ABEE <internal_commands.ab2@1809> INCLUDE "internal_commands.ab2"
0003ABF0 <internal_commands.ab2@1810> INCLUDE "internal_commands.ab2"
0003ABF2 <internal_commands.ab2@1811> INCLUDE "internal_commands.ab2"
0003ABF6 <internal_commands.ab2@1812> INCLUDE "internal_commands.ab2"
0003ABF8 <internal_commands.ab2@1813> INCLUDE "internal_commands.ab2"
0003ABFC <internal_commands.ab2@1817> INCLUDE "internal_commands.ab2"
0003ABFE <internal_commands.ab2@1818> INCLUDE "internal_commands.ab2"
0003AC02 <internal_commands.ab2@1819> INCLUDE "internal_commands.ab2"
0003AC03 <internal_commands.ab2@1820> INCLUDE "internal_commands.ab2"
0003AC04 <internal_commands.ab2@1821> INCLUDE "internal_commands.ab2"
0003AC06 <internal_commands.ab2@1823> INCLUDE "internal_commands.ab2"
0003AC0A <internal_commands.ab2@1824> INCLUDE "internal_commands.ab2"
0003AC0C <internal_commands.ab2@1825> INCLUDE "internal_commands.ab2"
0003AC0E <internal_commands.ab2@1826> INCLUDE "internal_commands.ab2"
0003AC12 <internal_commands.ab2@1827> INCLUDE "internal_commands.ab2"
0003AC14 <internal_commands.ab2@1828> INCLUDE "internal_commands.ab2"
0003AC18 <internal_commands.ab2@1832> INCLUDE "internal_commands.ab2"
0003AC1A <internal_commands.ab2@1833> INCLUDE "internal_commands.ab2"
0003AC1E <internal_commands.ab2@1834> INCLUDE "internal_commands.ab2"
0003AC1F <internal_commands.ab2@1835> INCLUDE "internal_commands.ab2"
0003AC20 <internal_commands.ab2@1836> INCLUDE "internal_commands.ab2"
0003AC22 <internal_commands.ab2@1838> INCLUDE "internal_commands.ab2"
0003AC26 <internal_commands.ab2@1839> INCLUDE "internal_commands.ab2"
0003AC28 <internal_commands.ab2@1840> INCLUDE "internal_commands.ab2"
0003AC2A <internal_commands.ab2@1841> INCLUDE "internal_commands.ab2"
0003AC2E <internal_commands.ab2@1842> INCLUDE "internal_commands.ab2"
0003AC30 <internal_commands.ab2@1843> INCLUDE "internal_commands.ab2"
0003AC34 <internal_commands.ab2@1847> INCLUDE "internal_commands.ab2"
0003AC36 <internal_commands.ab2@1848> INCLUDE "internal_commands.ab2"
0003AC3A <internal_commands.ab2@1849> INCLUDE "internal_commands.ab2"
0003AC3B <internal_commands.ab2@1850> INCLUDE "internal_commands.ab2"
0003AC3C <internal_commands.ab2@1851> INCLUDE "internal_commands.ab2"
0003AC3E <internal_commands.ab2@1853> INCLUDE "internal_commands.ab2"
0003AC42 <internal_commands.ab2@1854> INCLUDE "internal_commands.ab2"
0003AC44 <internal_commands.ab2@1855> INCLUDE "internal_commands.ab2"
0003AC46 <internal_commands.ab2@1856> INCLUDE "internal_commands.ab2"
0003AC4A <internal_commands.ab2@1857> INCLUDE "internal_commands.ab2"
0003AC4C <internal_commands.ab2@1858> INCLUDE "internal_commands.ab2"
0003AC50 <internal_commands.ab2@1862> INCLUDE "internal_commands.ab2"
0003AC52 <internal_commands.ab2@1863> INCLUDE "internal_commands.ab2"
0003AC56 <internal_commands.ab2@1864> INCLUDE "internal_commands.ab2"
0003AC57 <internal_commands.ab2@1865> INCLUDE "internal_commands.ab2"
0003AC58 <internal_commands.ab2@1866> INCLUDE "internal_commands.ab2"
0003AC5A <internal_commands.ab2@1868> INCLUDE "internal_commands.ab2"
0003AC5E <internal_commands.ab2@1869> INCLUDE "internal_commands.ab2"
0003AC60 <internal_commands.ab2@1870> INCLUDE "internal_commands.ab2"
0003AC62 <internal_commands.ab2@1871> INCLUDE "internal_commands.ab2"
0003AC66 <internal_commands.ab2@1872> INCLUDE "internal_commands.ab2"
0003AC68 <internal_commands.ab2@1873> INCLUDE "internal_commands.ab2"
0003AC6C <internal_commands.ab2@1877> INCLUDE "internal_commands.ab2"
0003AC6E <internal_commands.ab2@1878> INCLUDE "internal_commands.ab2"
0003AC72 <internal_commands.ab2@1879> INCLUDE "internal_commands.ab2"
0003AC73 <internal_commands.ab2@1880> INCLUDE "internal_commands.ab2"
0003AC74 <internal_commands.ab2@1881> INCLUDE "internal_commands.ab2"
0003AC76 <internal_commands.ab2@1883> INCLUDE "internal_commands.ab2"
0003AC7A <internal_commands.ab2@1884> INCLUDE "internal_commands.ab2"
0003AC7C <internal_commands.ab2@1885> INCLUDE "internal_commands.ab2"
0003AC7E <internal_commands.ab2@1886> INCLUDE "internal_commands.ab2"
0003AC82 <internal_commands.ab2@1887> INCLUDE "internal_commands.ab2"
0003AC84 <internal_commands.ab2@1888> INCLUDE "internal_commands.ab2"
0003AC88 <internal_commands.ab2@1892> INCLUDE "internal_commands.ab2"
0003AC8A <internal_commands.ab2@1893> INCLUDE "internal_commands.ab2"
0003AC8E <internal_commands.ab2@1894> INCLUDE "internal_commands.ab2"
0003AC8F <internal_commands.ab2@1895> INCLUDE "internal_commands.ab2"
0003AC90 <internal_commands.ab2@1896> INCLUDE "internal_commands.ab2"
0003AC92 <internal_commands.ab2@1898> INCLUDE "internal_commands.ab2"
0003AC96 <internal_commands.ab2@1899> INCLUDE "internal_commands.ab2"
0003AC98 <internal_commands.ab2@1900> INCLUDE "internal_commands.ab2"
0003AC9A <internal_commands.ab2@1901> INCLUDE "internal_commands.ab2"
0003AC9E <internal_commands.ab2@1902> INCLUDE "internal_commands.ab2"
0003ACA0 <internal_commands.ab2@1903> INCLUDE "internal_commands.ab2"
0003ACA4 <internal_commands.ab2@1907> INCLUDE "internal_commands.ab2"
0003ACA6 <internal_commands.ab2@1908> INCLUDE "internal_commands.ab2"
0003ACAA <internal_commands.ab2@1909> INCLUDE "internal_commands.ab2"
0003ACAB <internal_commands.ab2@1910> INCLUDE "internal_commands.ab2"
0003ACAC <internal_commands.ab2@1911> INCLUDE "internal_commands.ab2"
0003ACAE <internal_commands.ab2@1913> INCLUDE "internal_commands.ab2"
0003ACB2 <internal_commands.ab2@1914> INCLUDE "internal_commands.ab2"
0003ACB4 <internal_commands.ab2@1915> INCLUDE "internal_commands.ab2"
0003ACB6 <internal_commands.ab2@1916> INCLUDE "internal_commands.ab2"
0003ACBA <internal_commands.ab2@1917> INCLUDE "internal_commands.ab2"
0003ACBC <internal_commands.ab2@1918> INCLUDE "internal_commands.ab2"
0003ACC0 <internal_commands.ab2@1922> INCLUDE "internal_commands.ab2"
0003ACC2 <internal_commands.ab2@1923> INCLUDE "internal_commands.ab2"
0003ACC6 <internal_commands.ab2@1924> INCLUDE "internal_commands.ab2"
0003ACC7 <internal_commands.ab2@1925> INCLUDE "internal_commands.ab2"
0003ACC8 <internal_commands.ab2@1926> INCLUDE "internal_commands.ab2"
0003ACCA <internal_commands.ab2@1928> INCLUDE "internal_commands.ab2"
0003ACCE <internal_commands.ab2@1929> INCLUDE "internal_commands.ab2"
0003ACD0 <internal_commands.ab2@1930> INCLUDE "internal_commands.ab2"
0003ACD2 <internal_commands.ab2@1931> INCLUDE "internal_commands.ab2"
0003ACD6 <internal_commands.ab2@1932> INCLUDE "internal_commands.ab2"
0003ACD8 <internal_commands.ab2@1933> INCLUDE "internal_commands.ab2"
0003ACDC <internal_commands.ab2@1937> INCLUDE "internal_commands.ab2"
0003ACDE <internal_commands.ab2@1938> INCLUDE "internal_commands.ab2"
0003ACE2 <internal_commands.ab2@1939> INCLUDE "internal_commands.ab2"
0003ACE3 <internal_commands.ab2@1940> INCLUDE "internal_commands.ab2"
0003ACE4 <internal_commands.ab2@1941> INCLUDE "internal_commands.ab2"
0003ACE6 <internal_commands.ab2@1943> INCLUDE "internal_commands.ab2"
0003ACEA <internal_commands.ab2@1944> INCLUDE "internal_commands.ab2"
0003ACEC <internal_commands.ab2@1945> INCLUDE "internal_commands.ab2"
0003ACEE <internal_commands.ab2@1946> INCLUDE "internal_commands.ab2"
0003ACF2 <internal_commands.ab2@1947> INCLUDE "internal_commands.ab2"
0003ACF4 <internal_commands.ab2@1948> INCLUDE "internal_commands.ab2"
0003ACF8 <internal_commands.ab2@1952> INCLUDE "internal_commands.ab2"
0003ACFA <internal_commands.ab2@1953> INCLUDE "internal_commands.ab2"
0003ACFE <internal_commands.ab2@1954> INCLUDE "internal_commands.ab2"
0003ACFF <internal_commands.ab2@1955> INCLUDE "internal_commands.ab2"
0003AD00 <internal_commands.ab2@1956> INCLUDE "internal_commands.ab2"
0003AD02 <internal_commands.ab2@1958> INCLUDE "internal_commands.ab2"
0003AD06 <internal_commands.ab2@1959> INCLUDE "internal_commands.ab2"
0003AD08 <internal_commands.ab2@1960> INCLUDE "internal_commands.ab2"
0003AD0A <internal_commands.ab2@1961> INCLUDE "internal_commands.ab2"
0003AD0E <internal_commands.ab2@1962> INCLUDE "internal_commands.ab2"
0003AD10 <internal_commands.ab2@1963> INCLUDE "internal_commands.ab2"
0003AD14 <internal_commands.ab2@1967> INCLUDE "internal_commands.ab2"
0003AD16 <internal_commands.ab2@1968> INCLUDE "internal_commands.ab2"
0003AD1A <internal_commands.ab2@1969> INCLUDE "internal_commands.ab2"
0003AD1B <internal_commands.ab2@1970> INCLUDE "internal_commands.ab2"
0003AD1C <internal_commands.ab2@1971> INCLUDE "internal_commands.ab2"
0003AD1E <internal_commands.ab2@1973> INCLUDE "internal_commands.ab2"
0003AD22 <internal_commands.ab2@1974> INCLUDE "internal_commands.ab2"
0003AD24 <internal_commands.ab2@1975> INCLUDE "internal_commands.ab2"
0003AD26 <internal_commands.ab2@1976> INCLUDE "internal_commands.ab2"
0003AD2A <internal_commands.ab2@1977> INCLUDE "internal_commands.ab2"
0003AD2C <internal_commands.ab2@1978> INCLUDE "internal_commands.ab2"
0003AD30 <internal_commands.ab2@1982> INCLUDE "internal_commands.ab2"
0003AD32 <internal_commands.ab2@1983> INCLUDE "internal_commands.ab2"
0003AD36 <internal_commands.ab2@1984> INCLUDE "internal_commands.ab2"
0003AD37 <internal_commands.ab2@1985> INCLUDE "internal_commands.ab2"
0003AD38 <internal_commands.ab2@1986> INCLUDE "internal_commands.ab2"
0003AD3A <internal_commands.ab2@1988> INCLUDE "internal_commands.ab2"
0003AD3E <internal_commands.ab2@1989> INCLUDE "internal_commands.ab2"
0003AD40 <internal_commands.ab2@1990> INCLUDE "internal_commands.ab2"
0003AD42 <internal_commands.ab2@1991> INCLUDE "internal_commands.ab2"
0003AD46 <internal_commands.ab2@1992> INCLUDE "internal_commands.ab2"
0003AD48 <internal_commands.ab2@1993> INCLUDE "internal_commands.ab2"
0003AD4C <internal_commands.ab2@1997> INCLUDE "internal_commands.ab2"
0003AD4E <internal_commands.ab2@1998> INCLUDE "internal_commands.ab2"
0003AD51 <internal_commands.ab2@1999> INCLUDE "internal_commands.ab2"
0003AD52 <internal_commands.ab2@2000> INCLUDE "internal_commands.ab2"
0003AD54 <internal_commands.ab2@2003> INCLUDE "internal_commands.ab2"
0003AD58 <internal_commands.ab2@2004> INCLUDE "internal_commands.ab2"
0003AD5A <internal_commands.ab2@2005> INCLUDE "internal_commands.ab2"
0003AD5C <internal_commands.ab2@2006> INCLUDE "internal_commands.ab2"
0003AD60 <internal_commands.ab2@2007> INCLUDE "internal_commands.ab2"
0003AD62 <internal_commands.ab2@2008> INCLUDE "internal_commands.ab2"
0003AD66 <internal_commands.ab2@2012> INCLUDE "internal_commands.ab2"
0003AD68 <internal_commands.ab2@2013> INCLUDE "internal_commands.ab2"
0003AD6B <internal_commands.ab2@2014> INCLUDE "internal_commands.ab2"
0003AD6C <internal_commands.ab2@2015> INCLUDE "internal_commands.ab2"
0003AD6E <internal_commands.ab2@2018> INCLUDE "internal_commands.ab2"
0003AD72 <internal_commands.ab2@2019> INCLUDE "internal_commands.ab2"
0003AD74 <internal_commands.ab2@2020> INCLUDE "internal_commands.ab2"
0003AD76 <internal_commands.ab2@2021> INCLUDE "internal_commands.ab2"
0003AD7A <internal_commands.ab2@2022> INCLUDE "internal_commands.ab2"
0003AD7C <internal_commands.ab2@2023> INCLUDE "internal_commands.ab2"
0003AD80 <internal_commands.ab2@2027> INCLUDE "internal_commands.ab2"
0003AD82 <internal_commands.ab2@2028> INCLUDE "internal_commands.ab2"
0003AD87 <internal_commands.ab2@2029> INCLUDE "internal_commands.ab2"
0003AD88 <internal_commands.ab2@2030> INCLUDE "internal_commands.ab2"
0003AD8A <internal_commands.ab2@2033> INCLUDE "internal_commands.ab2"
0003AD8E <internal_commands.ab2@2034> INCLUDE "internal_commands.ab2"
0003AD90 <internal_commands.ab2@2035> INCLUDE "internal_commands.ab2"
0003AD92 <internal_commands.ab2@2036> INCLUDE "internal_commands.ab2"
0003AD96 <internal_commands.ab2@2037> INCLUDE "internal_commands.ab2"
0003AD98 <internal_commands.ab2@2038> INCLUDE "internal_commands.ab2"
0003AD9C <internal_commands.ab2@2042> INCLUDE "internal_commands.ab2"
0003AD9E <internal_commands.ab2@2043> INCLUDE "internal_commands.ab2"
0003ADA2 <internal_commands.ab2@2044> INCLUDE "internal_commands.ab2"
0003ADA3 <internal_commands.ab2@2045> INCLUDE "internal_commands.ab2"
0003ADA4 <internal_commands.ab2@2046> INCLUDE "internal_commands.ab2"
0003ADA6 <internal_commands.ab2@2048> INCLUDE "internal_commands.ab2"
0003ADAA <internal_commands.ab2@2049> INCLUDE "internal_commands.ab2"
0003ADAC <internal_commands.ab2@2050> INCLUDE "internal_commands.ab2"
0003ADAE <internal_commands.ab2@2051> INCLUDE "internal_commands.ab2"
0003ADB2 <internal_commands.ab2@2052> INCLUDE "internal_commands.ab2"
0003ADB4 <internal_commands.ab2@2053> INCLUDE "internal_commands.ab2"
0003ADB8 <internal_commands.ab2@2057> INCLUDE "internal_commands.ab2"
0003ADBA <internal_commands.ab2@2058> INCLUDE "internal_commands.ab2"
0003ADBF <internal_commands.ab2@2059> INCLUDE "internal_commands.ab2"
0003ADC0 <internal_commands.ab2@2060> INCLUDE "internal_commands.ab2"
0003ADC2 <internal_commands.ab2@2063> INCLUDE "internal_commands.ab2"
0003ADC6 <internal_commands.ab2@2064> INCLUDE "internal_commands.ab2"
0003ADC8 <internal_commands.ab2@2065> INCLUDE "internal_commands.ab2"
0003ADCA <internal_commands.ab2@2066> INCLUDE "internal_commands.ab2"
0003ADCE <internal_commands.ab2@2067> INCLUDE "internal_commands.ab2"
0003ADD0 <internal_commands.ab2@2068> INCLUDE "internal_commands.ab2"
0003ADD4 <internal_commands.ab2@2072> INCLUDE "internal_commands.ab2"
0003ADD6 <internal_commands.ab2@2073> INCLUDE "internal_commands.ab2"
0003ADDB <internal_commands.ab2@2074> INCLUDE "internal_commands.ab2"
0003ADDC <internal_commands.ab2@2075> INCLUDE "internal_commands.ab2"
0003ADDE <internal_commands.ab2@2078> INCLUDE "internal_commands.ab2"
0003ADE2 <internal_commands.ab2@2079> INCLUDE "internal_commands.ab2"
0003ADE4 <internal_commands.ab2@2080> INCLUDE "internal_commands.ab2"
0003ADE6 <internal_commands.ab2@2081> INCLUDE "internal_commands.ab2"
0003ADEA <internal_commands.ab2@2082> INCLUDE "internal_commands.ab2"
0003ADEC <internal_commands.ab2@2083> INCLUDE "internal_commands.ab2"
0003ADF0 <internal_commands.ab2@2087> INCLUDE "internal_commands.ab2"
0003ADF2 <internal_commands.ab2@2088> INCLUDE "internal_commands.ab2"
0003ADF7 <internal_commands.ab2@2089> INCLUDE "internal_commands.ab2"
0003ADF8 <internal_commands.ab2@2090> INCLUDE "internal_commands.ab2"
0003ADFA <internal_commands.ab2@2093> INCLUDE "internal_commands.ab2"
0003ADFE <internal_commands.ab2@2094> INCLUDE "internal_commands.ab2"
0003AE00 <internal_commands.ab2@2095> INCLUDE "internal_commands.ab2"
0003AE02 <internal_commands.ab2@2096> INCLUDE "internal_commands.ab2"
0003AE06 <internal_commands.ab2@2097> INCLUDE "internal_commands.ab2"
0003AE08 <internal_commands.ab2@2098> INCLUDE "internal_commands.ab2"
0003AE0C <internal_commands.ab2@2102> INCLUDE "internal_commands.ab2"
0003AE0E <internal_commands.ab2@2103> INCLUDE "internal_commands.ab2"
0003AE13 <internal_commands.ab2@2104> INCLUDE "internal_commands.ab2"
0003AE14 <internal_commands.ab2@2105> INCLUDE "internal_commands.ab2"
0003AE16 <internal_commands.ab2@2108> INCLUDE "internal_commands.ab2"
0003AE1A <internal_commands.ab2@2109> INCLUDE "internal_commands.ab2"
0003AE1C <internal_commands.ab2@2110> INCLUDE "internal_commands.ab2"
0003AE1E <internal_commands.ab2@2111> INCLUDE "internal_commands.ab2"
0003AE22 <internal_commands.ab2@2112> INCLUDE "internal_commands.ab2"
0003AE24 <internal_commands.ab2@2113> INCLUDE "internal_commands.ab2"
0003AE28 <internal_commands.ab2@2117> INCLUDE "internal_commands.ab2"
0003AE2A <internal_commands.ab2@2118> INCLUDE "internal_commands.ab2"
0003AE2F <internal_commands.ab2@2119> INCLUDE "internal_commands.ab2"
0003AE30 <internal_commands.ab2@2120> INCLUDE "internal_commands.ab2"
0003AE32 <internal_commands.ab2@2123> INCLUDE "internal_commands.ab2"
0003AE36 <internal_commands.ab2@2124> INCLUDE "internal_commands.ab2"
0003AE38 <internal_commands.ab2@2125> INCLUDE "internal_commands.ab2"
0003AE3A <internal_commands.ab2@2126> INCLUDE "internal_commands.ab2"
0003AE3E <internal_commands.ab2@2127> INCLUDE "internal_commands.ab2"
0003AE40 <internal_commands.ab2@2128> INCLUDE "internal_commands.ab2"
0003AE44 <internal_commands.ab2@2132> INCLUDE "internal_commands.ab2"
0003AE46 <internal_commands.ab2@2133> INCLUDE "internal_commands.ab2"
0003AE4A <internal_commands.ab2@2134> INCLUDE "internal_commands.ab2"
0003AE4B <internal_commands.ab2@2135> INCLUDE "internal_commands.ab2"
0003AE4C <internal_commands.ab2@2136> INCLUDE "internal_commands.ab2"
0003AE4E <internal_commands.ab2@2138> INCLUDE "internal_commands.ab2"
0003AE52 <internal_commands.ab2@2139> INCLUDE "internal_commands.ab2"
0003AE54 <internal_commands.ab2@2140> INCLUDE "internal_commands.ab2"
0003AE56 <internal_commands.ab2@2141> INCLUDE "internal_commands.ab2"
0003AE5A <internal_commands.ab2@2142> INCLUDE "internal_commands.ab2"
0003AE5C <internal_commands.ab2@2143> INCLUDE "internal_commands.ab2"
0003AE60 <internal_commands.ab2@2147> INCLUDE "internal_commands.ab2"
0003AE62 <internal_commands.ab2@2148> INCLUDE "internal_commands.ab2"
0003AE67 <internal_commands.ab2@2149> INCLUDE "internal_commands.ab2"
0003AE68 <internal_commands.ab2@2150> INCLUDE "internal_commands.ab2"
0003AE6A <internal_commands.ab2@2153> INCLUDE "internal_commands.ab2"
0003AE6E <internal_commands.ab2@2154> INCLUDE "internal_commands.ab2"
0003AE70 <internal_commands.ab2@2155> INCLUDE "internal_commands.ab2"
0003AE72 <internal_commands.ab2@2156> INCLUDE "internal_commands.ab2"
0003AE76 <internal_commands.ab2@2157> INCLUDE "internal_commands.ab2"
0003AE78 <internal_commands.ab2@2158> INCLUDE "internal_commands.ab2"
0003AE7C <internal_commands.ab2@2162> INCLUDE "internal_commands.ab2"
0003AE7E <internal_commands.ab2@2163> INCLUDE "internal_commands.ab2"
0003AE84 <internal_commands.ab2@2164> INCLUDE "internal_commands.ab2"
0003AE85 <internal_commands.ab2@2165> INCLUDE "internal_commands.ab2"
0003AE86 <internal_commands.ab2@2166> INCLUDE "internal_commands.ab2"
0003AE88 <internal_commands.ab2@2168> INCLUDE "internal_commands.ab2"
0003AE8C <internal_commands.ab2@2169> INCLUDE "internal_commands.ab2"
0003AE8E <internal_commands.ab2@2170> INCLUDE "internal_commands.ab2"
0003AE90 <internal_commands.ab2@2171> INCLUDE "internal_commands.ab2"
0003AE94 <internal_commands.ab2@2172> INCLUDE "internal_commands.ab2"
0003AE96 <internal_commands.ab2@2173> INCLUDE "internal_commands.ab2"
0003AE9A <internal_commands.ab2@2177> INCLUDE "internal_commands.ab2"
0003AE9C <internal_commands.ab2@2178> INCLUDE "internal_commands.ab2"
0003AEA0 <internal_commands.ab2@2179> INCLUDE "internal_commands.ab2"
0003AEA1 <internal_commands.ab2@2180> INCLUDE "internal_commands.ab2"
0003AEA2 <internal_commands.ab2@2181> INCLUDE "internal_commands.ab2"
0003AEA4 <internal_commands.ab2@2183> INCLUDE "internal_commands.ab2"
0003AEA8 <internal_commands.ab2@2184> INCLUDE "internal_commands.ab2"
0003AEAA <internal_commands.ab2@2185> INCLUDE "internal_commands.ab2"
0003AEAC <internal_commands.ab2@2186> INCLUDE "internal_commands.ab2"
0003AEB0 <internal_commands.ab2@2187> INCLUDE "internal_commands.ab2"
0003AEB2 <internal_commands.ab2@2188> INCLUDE "internal_commands.ab2"
0003AEB6 <internal_commands.ab2@2192> INCLUDE "internal_commands.ab2"
0003AEB8 <internal_commands.ab2@2193> INCLUDE "internal_commands.ab2"
0003AEBD <internal_commands.ab2@2194> INCLUDE "internal_commands.ab2"
0003AEBE <internal_commands.ab2@2195> INCLUDE "internal_commands.ab2"
0003AEC0 <internal_commands.ab2@2198> INCLUDE "internal_commands.ab2"
0003AEC4 <internal_commands.ab2@2199> INCLUDE "internal_commands.ab2"
0003AEC6 <internal_commands.ab2@2200> INCLUDE "internal_commands.ab2"
0003AEC8 <internal_commands.ab2@2201> INCLUDE "internal_commands.ab2"
0003AECC <internal_commands.ab2@2202> INCLUDE "internal_commands.ab2"
0003AECE <internal_commands.ab2@2203> INCLUDE "internal_commands.ab2"
0003AED2 <internal_commands.ab2@2208> INCLUDE "internal_commands.ab2"
0003AED4 <internal_commands.ab2@2209> INCLUDE "internal_commands.ab2"
0003AEDB <internal_commands.ab2@2210> INCLUDE "internal_commands.ab2"
0003AEDC <internal_commands.ab2@2211> INCLUDE "internal_commands.ab2"
0003AEDE <internal_commands.ab2@2230> INCLUDE "internal_commands.ab2"
0003AEE0 <internal_commands.ab2@2231> INCLUDE "internal_commands.ab2"
0003AEE2 <internal_commands.ab2@2235> INCLUDE "internal_commands.ab2"
0003AEE4 <internal_commands.ab2@2236> INCLUDE "internal_commands.ab2"
0003AEE6 <internal_commands.ab2@2240> INCLUDE "internal_commands.ab2"
0003AEE8 <internal_commands.ab2@2241> INCLUDE "internal_commands.ab2"
0003AEEA <internal_commands.ab2@2245> INCLUDE "internal_commands.ab2"
0003AEEC <internal_commands.ab2@2246> INCLUDE "internal_commands.ab2"
0003AEEE <internal_commands.ab2@2251> INCLUDE "internal_commands.ab2"
0003AEF2 <internal_commands.ab2@2252> INCLUDE "internal_commands.ab2"
0003AEF4 <internal_commands.ab2@2253> INCLUDE "internal_commands.ab2"
0003AEF6 <internal_commands.ab2@2254> INCLUDE "internal_commands.ab2"
0003AEF8 <internal_commands.ab2@2255> INCLUDE "internal_commands.ab2"
0003AEFA <internal_commands.ab2@2256> INCLUDE "internal_commands.ab2"
0003AEFE <internal_commands.ab2@2257> INCLUDE "internal_commands.ab2"
0003AF04 <internal_commands.ab2@2260> INCLUDE "internal_commands.ab2"
0003AF08 <internal_commands.ab2@2261> INCLUDE "internal_commands.ab2"
0003AF0A <internal_commands.ab2@2262> INCLUDE "internal_commands.ab2"
0003AF0C <internal_commands.ab2@2263> INCLUDE "internal_commands.ab2"
0003AF0E <internal_commands.ab2@2264> INCLUDE "internal_commands.ab2"
0003AF10 <internal_commands.ab2@2265> INCLUDE "internal_commands.ab2"
0003AF12 <internal_commands.ab2@2266> INCLUDE "internal_commands.ab2"
0003AF14 <internal_commands.ab2@2273> INCLUDE "internal_commands.ab2"
0003AF18 <internal_commands.ab2@2274> INCLUDE "internal_commands.ab2"
0003AF1C <internal_commands.ab2@2275> INCLUDE "internal_commands.ab2"
0003AF20 <internal_commands.ab2@2276> INCLUDE "internal_commands.ab2"
0003AF24 <internal_commands.ab2@2277> INCLUDE "internal_commands.ab2"
0003AF28 <internal_commands.ab2@2278> INCLUDE "internal_commands.ab2"
0003AF2A <internal_commands.ab2@2281> INCLUDE "internal_commands.ab2"
0003AF2C <internal_commands.ab2@2282> INCLUDE "internal_commands.ab2"
0003AF30 <internal_commands.ab2@2283> INCLUDE "internal_commands.ab2"
0003AF34 <internal_commands.ab2@2284> INCLUDE "internal_commands.ab2"
0003AF38 <internal_commands.ab2@2285> INCLUDE "internal_commands.ab2"
0003AF3C <internal_commands.ab2@2286> INCLUDE "internal_commands.ab2"
0003AF3E <internal_commands.ab2@2289> INCLUDE "internal_commands.ab2"
0003AF40 <internal_commands.ab2@2290> INCLUDE "internal_commands.ab2"
0003AF44 <internal_commands.ab2@2291> INCLUDE "internal_commands.ab2"
0003AF48 <internal_commands.ab2@2292> INCLUDE "internal_commands.ab2"
0003AF4C <internal_commands.ab2@2293> INCLUDE "internal_commands.ab2"
0003AF50 <internal_commands.ab2@2294> INCLUDE "internal_commands.ab2"
0003AF52 <internal_commands.ab2@2295> INCLUDE "internal_commands.ab2"
0003AF54 <internal_commands.ab2@2298> INCLUDE "internal_commands.ab2"
0003AF56 <internal_commands.ab2@2299> INCLUDE "internal_commands.ab2"
0003AF5A <internal_commands.ab2@2300> INCLUDE "internal_commands.ab2"
0003AF5C <internal_commands.ab2@2302> INCLUDE "internal_commands.ab2"
0003AF60 <internal_commands.ab2@2303> INCLUDE "internal_commands.ab2"
0003AF62 <internal_commands.ab2@2307> INCLUDE "internal_commands.ab2"
0003AF66 <internal_commands.ab2@2308> INCLUDE "internal_commands.ab2"
0003AF68 <internal_commands.ab2@2309> INCLUDE "internal_commands.ab2"
0003AF6C <internal_commands.ab2@2310> INCLUDE "internal_commands.ab2"
0003AF70 <internal_commands.ab2@2311> INCLUDE "internal_commands.ab2"
0003AF74 <internal_commands.ab2@2312> INCLUDE "internal_commands.ab2"
0003AF78 <internal_commands.ab2@2316> INCLUDE "internal_commands.ab2"
0003AF7C <internal_commands.ab2@2317> INCLUDE "internal_commands.ab2"
0003AF80 <internal_commands.ab2@2319> INCLUDE "internal_commands.ab2"
0003AF84 <internal_commands.ab2@2320> INCLUDE "internal_commands.ab2"
0003AF88 <internal_commands.ab2@2321> INCLUDE "internal_commands.ab2"
0003AF8C <internal_commands.ab2@2322> INCLUDE "internal_commands.ab2"
0003AF90 <internal_commands.ab2@2323> INCLUDE "internal_commands.ab2"
0003AF94 <internal_commands.ab2@2324> INCLUDE "internal_commands.ab2"
0003AF98 <internal_commands.ab2@2325> INCLUDE "internal_commands.ab2"
0003AF9C <internal_commands.ab2@2326> INCLUDE "internal_commands.ab2"
0003AFA0 <internal_commands.ab2@2328> INCLUDE "internal_commands.ab2"
0003AFA4 <internal_commands.ab2@2331> INCLUDE "internal_commands.ab2"
0003AFA8 <internal_commands.ab2@2332> INCLUDE "internal_commands.ab2"
0003AFAC <internal_commands.ab2@2334> INCLUDE "internal_commands.ab2"
0003AFB0 <internal_commands.ab2@2335> INCLUDE "internal_commands.ab2"
0003AFB4 <internal_commands.ab2@2336> INCLUDE "internal_commands.ab2"
0003AFB8 <internal_commands.ab2@2337> INCLUDE "internal_commands.ab2"
0003AFBC <internal_commands.ab2@2338> INCLUDE "internal_commands.ab2"
0003AFC0 <internal_commands.ab2@2339> INCLUDE "internal_commands.ab2"
0003AFC4 <internal_commands.ab2@2340> INCLUDE "internal_commands.ab2"
0003AFC8 <internal_commands.ab2@2341> INCLUDE "internal_commands.ab2"
0003AFCC <internal_commands.ab2@2343> INCLUDE "internal_commands.ab2"
0003AFD0 <internal_commands.ab2@2346> INCLUDE "internal_commands.ab2"
0003AFD2 <internal_commands.ab2@2347> INCLUDE "internal_commands.ab2"
0003AFD6 <internal_commands.ab2@2348> INCLUDE "internal_commands.ab2"
0003AFDA <internal_commands.ab2@2349> INCLUDE "internal_commands.ab2"
0003AFDE <internal_commands.ab2@2350> INCLUDE "internal_commands.ab2"
0003AFE2 <internal_commands.ab2@2351> INCLUDE "internal_commands.ab2"
0003AFE6 <internal_commands.ab2@2352> INCLUDE "internal_commands.ab2"
0003AFEA <internal_commands.ab2@2353> INCLUDE "internal_commands.ab2"
0003AFEE <internal_commands.ab2@2356> INCLUDE "internal_commands.ab2"
0003AFF2 <internal_commands.ab2@2357> INCLUDE "internal_commands.ab2"
0003AFF6 <internal_commands.ab2@2358> INCLUDE "internal_commands.ab2"
0003AFF8 <internal_commands.ab2@2359> INCLUDE "internal_commands.ab2"
0003AFFA <internal_commands.ab2@2362> INCLUDE "internal_commands.ab2"
0003AFFC <internal_commands.ab2@2363> INCLUDE "internal_commands.ab2"
0003AFFE <internal_commands.ab2@2364> INCLUDE "internal_commands.ab2"
0003B000 <internal_commands.ab2@2365> INCLUDE "internal_commands.ab2"
0003B004 <internal_commands.ab2@2366> INCLUDE "internal_commands.ab2"
0003B008 <internal_commands.ab2@2369> INCLUDE "internal_commands.ab2"
0003B00C <internal_commands.ab2@2370> INCLUDE "internal_commands.ab2"
0003B010 <internal_commands.ab2@2371> INCLUDE "internal_commands.ab2"
0003B012 <internal_commands.ab2@2372> INCLUDE "internal_commands.ab2"
0003B016 <internal_commands.ab2@2373> INCLUDE "internal_commands.ab2"
0003B01A <internal_commands.ab2@2376> INCLUDE "internal_commands.ab2"
0003B01E <internal_commands.ab2@2379> INCLUDE "internal_commands.ab2"
0003B022 <internal_commands.ab2@2380> INCLUDE "internal_commands.ab2"
0003B024 <internal_commands.ab2@2381> INCLUDE "internal_commands.ab2"
0003B026 <internal_commands.ab2@2382> INCLUDE "internal_commands.ab2"
0003B02A <internal_commands.ab2@2383> INCLUDE "internal_commands.ab2"
0003B02E <internal_commands.ab2@2386> INCLUDE "internal_commands.ab2"
0003B032 <internal_commands.ab2@2387> INCLUDE "internal_commands.ab2"
0003B036 <internal_commands.ab2@2390> INCLUDE "internal_commands.ab2"
0003B03A <internal_commands.ab2@2393> INCLUDE "internal_commands.ab2"
0003B03E <internal_commands.ab2@2394> INCLUDE "internal_commands.ab2"
0003B040 <internal_commands.ab2@2395> INCLUDE "internal_commands.ab2"
0003B042 <internal_commands.ab2@2396> INCLUDE "internal_commands.ab2"
0003B046 <internal_commands.ab2@2397> INCLUDE "internal_commands.ab2"
0003B04A <internal_commands.ab2@2400> INCLUDE "internal_commands.ab2"
0003B04E <internal_commands.ab2@2401> INCLUDE "internal_commands.ab2"
0003B050 <internal_commands.ab2@2405> INCLUDE "internal_commands.ab2"
0003B054 <internal_commands.ab2@2406> INCLUDE "internal_commands.ab2"
0003B058 <internal_commands.ab2@2407> INCLUDE "internal_commands.ab2"
0003B05A <internal_commands.ab2@2408> INCLUDE "internal_commands.ab2"
0003B05E <internal_commands.ab2@2409> INCLUDE "internal_commands.ab2"
0003B062 <internal_commands.ab2@2410> INCLUDE "internal_commands.ab2"
0003B064 <internal_commands.ab2@2413> INCLUDE "internal_commands.ab2"
0003B068 <internal_commands.ab2@2414> INCLUDE "internal_commands.ab2"
0003B06C <internal_commands.ab2@2415> INCLUDE "internal_commands.ab2"
0003B070 <internal_commands.ab2@2416> INCLUDE "internal_commands.ab2"
0003B074 <internal_commands.ab2@2419> INCLUDE "internal_commands.ab2"
0003B078 <internal_commands.ab2@2420> INCLUDE "internal_commands.ab2"
0003B07A <internal_commands.ab2@2424> INCLUDE "internal_commands.ab2"
0003B07E <internal_commands.ab2@2425> INCLUDE "internal_commands.ab2"
0003B080 <internal_commands.ab2@2426> INCLUDE "internal_commands.ab2"
0003B082 <internal_commands.ab2@2427> INCLUDE "internal_commands.ab2"
0003B084 <internal_commands.ab2@2428> INCLUDE "internal_commands.ab2"
0003B088 <internal_commands.ab2@2429> INCLUDE "internal_commands.ab2"
0003B08C <internal_commands.ab2@2432> INCLUDE "internal_commands.ab2"
0003B090 <internal_commands.ab2@2433> INCLUDE "internal_commands.ab2"
0003B094 <internal_commands.ab2@2434> INCLUDE "internal_commands.ab2"
0003B098 <internal_commands.ab2@2435> INCLUDE "internal_commands.ab2"
0003B09C <internal_commands.ab2@2439> INCLUDE "internal_commands.ab2"
0003B0A0 <internal_commands.ab2@2440> INCLUDE "internal_commands.ab2"
0003B0A4 <internal_commands.ab2@2444> INCLUDE "internal_commands.ab2"
0003B0A8 <internal_commands.ab2@2445> INCLUDE "internal_commands.ab2"
0003B0AC <internal_commands.ab2@2449> INCLUDE "internal_commands.ab2"
0003B0B0 <internal_commands.ab2@2450> INCLUDE "internal_commands.ab2"
0003B0B4 <internal_commands.ab2@2454> INCLUDE "internal_commands.ab2"
0003B0B6 <internal_commands.ab2@2456> INCLUDE "internal_commands.ab2"
0003B0BA <internal_commands.ab2@2457> INCLUDE "internal_commands.ab2"
0003B0BE <internal_commands.ab2@2458> INCLUDE "internal_commands.ab2"
0003B0C0 <internal_commands.ab2@2459> INCLUDE "internal_commands.ab2"
0003B0C2 <internal_commands.ab2@2460> INCLUDE "internal_commands.ab2"
0003B0C4 <internal_commands.ab2@2461> INCLUDE "internal_commands.ab2"
0003B0C8 <internal_commands.ab2@2462> INCLUDE "internal_commands.ab2"
0003B0CC <internal_commands.ab2@2463> INCLUDE "internal_commands.ab2"
0003B0CE <internal_commands.ab2@2464> INCLUDE "internal_commands.ab2"
0003B0D2 <internal_commands.ab2@2465> INCLUDE "internal_commands.ab2"
0003B0D4 <internal_commands.ab2@2466> INCLUDE "internal_commands.ab2"
0003B0D6 <internal_commands.ab2@2467> INCLUDE "internal_commands.ab2"
0003B0D8 <internal_commands.ab2@2468> INCLUDE "internal_commands.ab2"
0003B0DC <internal_commands.ab2@2469> INCLUDE "internal_commands.ab2"
0003B0E0 <internal_commands.ab2@2470> INCLUDE "internal_commands.ab2"
0003B0E2 <internal_commands.ab2@2473> INCLUDE "internal_commands.ab2"
0003B0E4 <internal_commands.ab2@2474> INCLUDE "internal_commands.ab2"
0003B0E8 <internal_commands.ab2@2475> INCLUDE "internal_commands.ab2"
0003B0EC <internal_commands.ab2@2476> INCLUDE "internal_commands.ab2"
0003B0F0 <internal_commands.ab2@2477> INCLUDE "internal_commands.ab2"
0003B0F4 <internal_commands.ab2@2478> INCLUDE "internal_commands.ab2"
0003B0F6 <internal_commands.ab2@2479> INCLUDE "internal_commands.ab2"
0003B0FA <internal_commands.ab2@2480> INCLUDE "internal_commands.ab2"
0003B0FE <internal_commands.ab2@2481> INCLUDE "internal_commands.ab2"
0003B102 <internal_commands.ab2@2482> INCLUDE "internal_commands.ab2"
0003B104 <internal_commands.ab2@2483> INCLUDE "internal_commands.ab2"
0003B106 <internal_commands.ab2@2484> INCLUDE "internal_commands.ab2"
0003B108 <internal_commands.ab2@2485> INCLUDE "internal_commands.ab2"
0003B10A <internal_commands.ab2@2488> INCLUDE "internal_commands.ab2"
0003B10C <internal_commands.ab2@2489> INCLUDE "internal_commands.ab2"
0003B10E <internal_commands.ab2@2490> INCLUDE "internal_commands.ab2"
0003B112 <internal_commands.ab2@2491> INCLUDE "internal_commands.ab2"
0003B116 <internal_commands.ab2@2492> INCLUDE "internal_commands.ab2"
0003B118 <internal_commands.ab2@2496> INCLUDE "internal_commands.ab2"
0003B11C <internal_commands.ab2@2497> INCLUDE "internal_commands.ab2"
0003B11E <internal_commands.ab2@2498> INCLUDE "internal_commands.ab2"
0003B122 <internal_commands.ab2@2499> INCLUDE "internal_commands.ab2"
0003B126 <internal_commands.ab2@2500> INCLUDE "internal_commands.ab2"
0003B128 <internal_commands.ab2@2501> INCLUDE "internal_commands.ab2"
0003B12A <internal_commands.ab2@2504> INCLUDE "internal_commands.ab2"
0003B12C <internal_commands.ab2@2508> INCLUDE "internal_commands.ab2"
0003B130 <internal_commands.ab2@2509> INCLUDE "internal_commands.ab2"
0003B132 <internal_commands.ab2@2510> INCLUDE "internal_commands.ab2"
0003B136 <internal_commands.ab2@2511> INCLUDE "internal_commands.ab2"
0003B13A <internal_commands.ab2@2512> INCLUDE "internal_commands.ab2"
0003B13E <internal_commands.ab2@2513> INCLUDE "internal_commands.ab2"
0003B140 <internal_commands.ab2@2516> INCLUDE "internal_commands.ab2"
0003B144 <internal_commands.ab2@2520> INCLUDE "internal_commands.ab2"
0003B148 <internal_commands.ab2@2521> INCLUDE "internal_commands.ab2"
0003B14A <internal_commands.ab2@2522> INCLUDE "internal_commands.ab2"
0003B14E <internal_commands.ab2@2523> INCLUDE "internal_commands.ab2"
0003B152 <internal_commands.ab2@2524> INCLUDE "internal_commands.ab2"
0003B156 <internal_commands.ab2@2527> INCLUDE "internal_commands.ab2"
0003B15A <internal_commands.ab2@2528> INCLUDE "internal_commands.ab2"
0003B15E <internal_commands.ab2@2529> INCLUDE "internal_commands.ab2"
0003B162 <internal_commands.ab2@2530> INCLUDE "internal_commands.ab2"
0003B166 <internal_commands.ab2@2531> INCLUDE "internal_commands.ab2"
0003B16A <internal_commands.ab2@2538> INCLUDE "internal_commands.ab2"
0003B16C <internal_commands.ab2@2539> INCLUDE "internal_commands.ab2"
0003B171 <internal_commands.ab2@2540> INCLUDE "internal_commands.ab2"
0003B172 <internal_commands.ab2@2541> INCLUDE "internal_commands.ab2"
0003B176 <internal_commands.ab2@2545> INCLUDE "internal_commands.ab2"
0003B178 <internal_commands.ab2@2546> INCLUDE "internal_commands.ab2"
0003B17F <internal_commands.ab2@2547> INCLUDE "internal_commands.ab2"
0003B180 <internal_commands.ab2@2548> INCLUDE "internal_commands.ab2"
0003B184 <internal_commands.ab2@2552> INCLUDE "internal_commands.ab2"
0003B186 <internal_commands.ab2@2553> INCLUDE "internal_commands.ab2"
0003B18D <internal_commands.ab2@2554> INCLUDE "internal_commands.ab2"
0003B18E <internal_commands.ab2@2555> INCLUDE "internal_commands.ab2"
0003B192 <internal_commands.ab2@2559> INCLUDE "internal_commands.ab2"
0003B194 <internal_commands.ab2@2560> INCLUDE "internal_commands.ab2"
0003B19C <internal_commands.ab2@2561> INCLUDE "internal_commands.ab2"
0003B19D <internal_commands.ab2@2562> INCLUDE "internal_commands.ab2"
0003B19E <internal_commands.ab2@2563> INCLUDE "internal_commands.ab2"
0003B1A2 <internal_commands.ab2@2566> INCLUDE "internal_commands.ab2"
0003B1A4 <internal_commands.ab2@2567> INCLUDE "internal_commands.ab2"
0003B1A9 <internal_commands.ab2@2568> INCLUDE "internal_commands.ab2"
0003B1BD <internal_commands.ab2@2569> INCLUDE "internal_commands.ab2"
0003B1BE <internal_commands.ab2@2570> INCLUDE "internal_commands.ab2"
0003B1C2 <internal_commands.ab2@2573> INCLUDE "internal_commands.ab2"
0003B1C4 <internal_commands.ab2@2574> INCLUDE "internal_commands.ab2"
0003B1C8 <internal_commands.ab2@2575> INCLUDE "internal_commands.ab2"
0003B1C9 <internal_commands.ab2@2576> INCLUDE "internal_commands.ab2"
0003B1CA <internal_commands.ab2@2577> INCLUDE "internal_commands.ab2"
0003B1CE <internal_commands.ab2@2580> INCLUDE "internal_commands.ab2"
0003B1D0 <internal_commands.ab2@2581> INCLUDE "internal_commands.ab2"
0003B1D3 <internal_commands.ab2@2582> INCLUDE "internal_commands.ab2"
0003B1D4 <internal_commands.ab2@2583> INCLUDE "internal_commands.ab2"
0003B1D8 <internal_commands.ab2@2587> INCLUDE "internal_commands.ab2"
0003B1DA <internal_commands.ab2@2588> INCLUDE "internal_commands.ab2"
0003B1E1 <internal_commands.ab2@2589> INCLUDE "internal_commands.ab2"
0003B1E2 <internal_commands.ab2@2590> INCLUDE "internal_commands.ab2"
0003B1E6 <internal_commands.ab2@2594> INCLUDE "internal_commands.ab2"
0003B1E8 <internal_commands.ab2@2595> INCLUDE "internal_commands.ab2"
0003B1EE <internal_commands.ab2@2596> INCLUDE "internal_commands.ab2"
0003B1FB <internal_commands.ab2@2597> INCLUDE "internal_commands.ab2"
0003B1FC <internal_commands.ab2@2598> INCLUDE "internal_commands.ab2"
0003B200 <internal_commands.ab2@2601> INCLUDE "internal_commands.ab2"
0003B202 <internal_commands.ab2@2602> INCLUDE "internal_commands.ab2"
0003B209 <internal_commands.ab2@2603> INCLUDE "internal_commands.ab2"
0003B221 <internal_commands.ab2@2604> INCLUDE "internal_commands.ab2"
0003B222 <internal_commands.ab2@2605> INCLUDE "internal_commands.ab2"
0003B226 <internal_commands.ab2@2608> INCLUDE "internal_commands.ab2"
0003B228 <internal_commands.ab2@2609> INCLUDE "internal_commands.ab2"
0003B22C <internal_commands.ab2@2610> INCLUDE "internal_commands.ab2"
0003B24F <internal_commands.ab2@2611> INCLUDE "internal_commands.ab2"
0003B250 <internal_commands.ab2@2612> INCLUDE "internal_commands.ab2"
0003B254 <internal_commands.ab2@2615> INCLUDE "internal_commands.ab2"
0003B256 <internal_commands.ab2@2616> INCLUDE "internal_commands.ab2"
0003B25D <internal_commands.ab2@2617> INCLUDE "internal_commands.ab2"
0003B268 <internal_commands.ab2@2618> INCLUDE "internal_commands.ab2"
0003B26C <internal_commands.ab2@2622> INCLUDE "internal_commands.ab2"
0003B26E <internal_commands.ab2@2623> INCLUDE "internal_commands.ab2"
0003B274 <internal_commands.ab2@2624> INCLUDE "internal_commands.ab2"
0003B275 <internal_commands.ab2@2625> INCLUDE "internal_commands.ab2"
0003B276 <internal_commands.ab2@2626> INCLUDE "internal_commands.ab2"
0003B27A <internal_commands.ab2@2629> INCLUDE "internal_commands.ab2"
0003B27C <internal_commands.ab2@2630> INCLUDE "internal_commands.ab2"
0003B281 <internal_commands.ab2@2631> INCLUDE "internal_commands.ab2"
0003B282 <internal_commands.ab2@2632> INCLUDE "internal_commands.ab2"
0003B286 <internal_commands.ab2@2636> INCLUDE "internal_commands.ab2"
0003B288 <internal_commands.ab2@2637> INCLUDE "internal_commands.ab2"
0003B28F <internal_commands.ab2@2638> INCLUDE "internal_commands.ab2"
0003B2A1 <internal_commands.ab2@2639> INCLUDE "internal_commands.ab2"
0003B2A2 <internal_commands.ab2@2640> INCLUDE "internal_commands.ab2"
0003B2A6 <internal_commands.ab2@2643> INCLUDE "internal_commands.ab2"
0003B2A8 <internal_commands.ab2@2644> INCLUDE "internal_commands.ab2"
0003B2B2 <internal_commands.ab2@2645> INCLUDE "internal_commands.ab2"
0003B2B3 <internal_commands.ab2@2646> INCLUDE "internal_commands.ab2"
0003B2B4 <internal_commands.ab2@2647> INCLUDE "internal_commands.ab2"
0003B2B8 <internal_commands.ab2@2650> INCLUDE "internal_commands.ab2"
0003B2BA <internal_commands.ab2@2651> INCLUDE "internal_commands.ab2"
0003B2C2 <internal_commands.ab2@2652> INCLUDE "internal_commands.ab2"
0003B2CF <internal_commands.ab2@2653> INCLUDE "internal_commands.ab2"
0003B2D0 <internal_commands.ab2@2654> INCLUDE "internal_commands.ab2"
0003B2D4 <internal_commands.ab2@2657> INCLUDE "internal_commands.ab2"
0003B2D6 <internal_commands.ab2@2658> INCLUDE "internal_commands.ab2"
0003B2D9 <internal_commands.ab2@2659> INCLUDE "internal_commands.ab2"
0003B314 <internal_commands.ab2@2660> INCLUDE "internal_commands.ab2"
0003B318 <internal_commands.ab2@2664> INCLUDE "internal_commands.ab2"
0003B31A <internal_commands.ab2@2665> INCLUDE "internal_commands.ab2"
0003B31E <internal_commands.ab2@2666> INCLUDE "internal_commands.ab2"
0003B31F <internal_commands.ab2@2667> INCLUDE "internal_commands.ab2"
0003B320 <internal_commands.ab2@2668> INCLUDE "internal_commands.ab2"
0003B324 <internal_commands.ab2@2671> INCLUDE "internal_commands.ab2"
0003B326 <internal_commands.ab2@2672> INCLUDE "internal_commands.ab2"
0003B32E <internal_commands.ab2@2673> INCLUDE "internal_commands.ab2"
0003B32F <internal_commands.ab2@2674> INCLUDE "internal_commands.ab2"
0003B330 <internal_commands.ab2@2675> INCLUDE "internal_commands.ab2"
0003B334 <internal_commands.ab2@2678> INCLUDE "internal_commands.ab2"
0003B336 <internal_commands.ab2@2679> INCLUDE "internal_commands.ab2"
0003B33E <internal_commands.ab2@2680> INCLUDE "internal_commands.ab2"
0003B34E <internal_commands.ab2@2681> INCLUDE "internal_commands.ab2"
0003B352 <internal_commands.ab2@2685> INCLUDE "internal_commands.ab2"
0003B354 <internal_commands.ab2@2686> INCLUDE "internal_commands.ab2"
0003B35D <internal_commands.ab2@2687> INCLUDE "internal_commands.ab2"
0003B365 <internal_commands.ab2@2688> INCLUDE "internal_commands.ab2"
0003B366 <internal_commands.ab2@2689> INCLUDE "internal_commands.ab2"
0003B36A <internal_commands.ab2@2692> INCLUDE "internal_commands.ab2"
0003B36C <internal_commands.ab2@2693> INCLUDE "internal_commands.ab2"
0003B374 <internal_commands.ab2@2694> INCLUDE "internal_commands.ab2"
0003B37D <internal_commands.ab2@2695> INCLUDE "internal_commands.ab2"
0003B37E <internal_commands.ab2@2696> INCLUDE "internal_commands.ab2"
0003B382 <internal_commands.ab2@2699> INCLUDE "internal_commands.ab2"
0003B384 <internal_commands.ab2@2700> INCLUDE "internal_commands.ab2"
0003B38C <internal_commands.ab2@2701> INCLUDE "internal_commands.ab2"
0003B38D <internal_commands.ab2@2702> INCLUDE "internal_commands.ab2"
0003B38E <internal_commands.ab2@2703> INCLUDE "internal_commands.ab2"
0003B392 <internal_commands.ab2@2706> INCLUDE "internal_commands.ab2"
0003B394 <internal_commands.ab2@2707> INCLUDE "internal_commands.ab2"
0003B39A <internal_commands.ab2@2708> INCLUDE "internal_commands.ab2"
0003B39B <internal_commands.ab2@2709> INCLUDE "internal_commands.ab2"
0003B39C <internal_commands.ab2@2710> INCLUDE "internal_commands.ab2"
0003B3A0 <internal_commands.ab2@2713> INCLUDE "internal_commands.ab2"
0003B3A2 <internal_commands.ab2@2714> INCLUDE "internal_commands.ab2"
0003B3A9 <internal_commands.ab2@2715> INCLUDE "internal_commands.ab2"
0003B3AA <internal_commands.ab2@2716> INCLUDE "internal_commands.ab2"
0003B3AE <internal_commands.ab2@2720> INCLUDE "internal_commands.ab2"
0003B3B0 <internal_commands.ab2@2721> INCLUDE "internal_commands.ab2"
0003B3B7 <internal_commands.ab2@2722> INCLUDE "internal_commands.ab2"
0003B3B8 <internal_commands.ab2@2723> INCLUDE "internal_commands.ab2"
0003B3BC <internal_commands.ab2@2727> INCLUDE "internal_commands.ab2"
0003B3BE <internal_commands.ab2@2728> INCLUDE "internal_commands.ab2"
0003B3C5 <internal_commands.ab2@2729> INCLUDE "internal_commands.ab2"
0003B3C6 <internal_commands.ab2@2730> INCLUDE "internal_commands.ab2"
0003B3CA <internal_commands.ab2@2734> INCLUDE "internal_commands.ab2"
0003B3CC <internal_commands.ab2@2735> INCLUDE "internal_commands.ab2"
0003B3D3 <internal_commands.ab2@2736> INCLUDE "internal_commands.ab2"
0003B3D4 <internal_commands.ab2@2737> INCLUDE "internal_commands.ab2"
0003B3D8 <internal_commands.ab2@2741> INCLUDE "internal_commands.ab2"
0003B3DA <internal_commands.ab2@2742> INCLUDE "internal_commands.ab2"
0003B3DF <internal_commands.ab2@2743> INCLUDE "internal_commands.ab2"
0003B3F5 <internal_commands.ab2@2744> INCLUDE "internal_commands.ab2"
0003B3F6 <internal_commands.ab2@2745> INCLUDE "internal_commands.ab2"
0003B3FA <internal_commands.ab2@2748> INCLUDE "internal_commands.ab2"
0003B3FC <internal_commands.ab2@2749> INCLUDE "internal_commands.ab2"
0003B406 <internal_commands.ab2@2750> INCLUDE "internal_commands.ab2"
0003B407 <internal_commands.ab2@2751> INCLUDE "internal_commands.ab2"
0003B408 <internal_commands.ab2@2752> INCLUDE "internal_commands.ab2"
0003B40C <internal_commands.ab2@2755> INCLUDE "internal_commands.ab2"
0003B40E <internal_commands.ab2@2756> INCLUDE "internal_commands.ab2"
0003B419 <internal_commands.ab2@2757> INCLUDE "internal_commands.ab2"
0003B41A <internal_commands.ab2@2758> INCLUDE "internal_commands.ab2"
0003B41E <internal_commands.ab2@2762> INCLUDE "internal_commands.ab2"
0003B420 <internal_commands.ab2@2763> INCLUDE "internal_commands.ab2"
0003B42C <internal_commands.ab2@2764> INCLUDE "internal_commands.ab2"
0003B459 <internal_commands.ab2@2765> INCLUDE "internal_commands.ab2"
0003B45A <internal_commands.ab2@2766> INCLUDE "internal_commands.ab2"
0003B45E <internal_commands.ab2@2769> INCLUDE "internal_commands.ab2"
0003B460 <internal_commands.ab2@2770> INCLUDE "internal_commands.ab2"
0003B468 <internal_commands.ab2@2771> INCLUDE "internal_commands.ab2"
0003B49F <internal_commands.ab2@2772> INCLUDE "internal_commands.ab2"
0003B4A0 <internal_commands.ab2@2773> INCLUDE "internal_commands.ab2"
0003B4A4 <internal_commands.ab2@2776> INCLUDE "internal_commands.ab2"
0003B4A6 <internal_commands.ab2@2777> INCLUDE "internal_commands.ab2"
0003B4AE <internal_commands.ab2@2778> INCLUDE "internal_commands.ab2"
0003B4CD <internal_commands.ab2@2779> INCLUDE "internal_commands.ab2"
0003B4CE <internal_commands.ab2@2780> INCLUDE "internal_commands.ab2"
0003B4D2 <internal_commands.ab2@2783> INCLUDE "internal_commands.ab2"
0003B4D4 <internal_commands.ab2@2784> INCLUDE "internal_commands.ab2"
0003B4DB <internal_commands.ab2@2785> INCLUDE "internal_commands.ab2"
0003B511 <internal_commands.ab2@2786> INCLUDE "internal_commands.ab2"
0003B512 <internal_commands.ab2@2787> INCLUDE "internal_commands.ab2"
0003B516 <internal_commands.ab2@2790> INCLUDE "internal_commands.ab2"
0003B518 <internal_commands.ab2@2791> INCLUDE "internal_commands.ab2"
0003B521 <internal_commands.ab2@2792> INCLUDE "internal_commands.ab2"
0003B556 <internal_commands.ab2@2793> INCLUDE "internal_commands.ab2"
0003B55A <internal_commands.ab2@2797> INCLUDE "internal_commands.ab2"
0003B55C <internal_commands.ab2@2798> INCLUDE "internal_commands.ab2"
0003B56C <internal_commands.ab2@2799> INCLUDE "internal_commands.ab2"
0003B5A3 <internal_commands.ab2@2800> INCLUDE "internal_commands.ab2"
0003B5A4 <internal_commands.ab2@2801> INCLUDE "internal_commands.ab2"
0003B5A4 <AmiBlitz3.ab2@28329> INCLUDE "internal_commands.ab2"
0003B5A8 <AmiBlitz3.ab2@28334>            Dc.l cif_lt                                     ;ciflt
0003B5AC <AmiBlitz3.ab2@28335>            Dc.l cif_eq                                     ;cifeq
0003B5B0 <AmiBlitz3.ab2@28336>            Dc.l cif_gt                                     ;cifgt
0003B5B4 <AmiBlitz3.ab2@28337>            Ds.l 1                                          ;0
0003B5B8 <AmiBlitz3.ab2@28338>            Dc.l cif_le                                     ;cifle
0003B5BC <AmiBlitz3.ab2@28339>            Dc.l cif_ne                                     ;cifne
0003B5C0 <AmiBlitz3.ab2@28340>            Dc.l cif_le                                     ;cifge
0003B5C4 <AmiBlitz3.ab2@28341>            Ds.l 1                                          ;0
0003B5C8 <AmiBlitz3.ab2@28342>            Dc.l cif_ge                                     ;cifge
0003B5CC <AmiBlitz3.ab2@28343>            Dc.l cif_ne                                     ;cifne
0003B5D0 <AmiBlitz3.ab2@28344>            Dc.l cif_ge                                     ;cifge
0003B5D4 <AmiBlitz3.ab2@28345>            Ds.l 1                                          ;0
0003B5D8 <AmiBlitz3.ab2@28348>            Dc.l do_newtype                                 ;donewtype
0003B5DC <AmiBlitz3.ab2@28349>            Dc.l do_end                                     ;doend
0003B5E0 <AmiBlitz3.ab2@28350>            Dc.l do_let                                     ;dolet
0003B5E4 <AmiBlitz3.ab2@28351>            Dc.l do_dim                                     ;dodim
0003B5E8 <AmiBlitz3.ab2@28352>            Dc.l do_goto                                    ;dogoto
0003B5EC <AmiBlitz3.ab2@28353>            Dc.l do_gosub                                   ;dogosub
0003B5F0 <AmiBlitz3.ab2@28354>            Dc.l do_return                                  ;doreturn
0003B5F4 <AmiBlitz3.ab2@28355>            Dc.l do_statement                               ;dostatement
0003B5F8 <AmiBlitz3.ab2@28356>            Dc.l do_function                                ;dofunc
0003B5FC <AmiBlitz3.ab2@28357>            Dc.l do_mousewait                               ;domwait
0003B600 <AmiBlitz3.ab2@28358>            Dc.l do_if                                      ;doif
0003B604 <AmiBlitz3.ab2@28359>            Dc.l do_while                                   ;dowhile
0003B608 <AmiBlitz3.ab2@28360>            Dc.l do_Macro                                   ;domacro
0003B60C <AmiBlitz3.ab2@28361>            Dc.l do_select                                  ;doselect
0003B610 <AmiBlitz3.ab2@28362>            Dc.l do_case                                    ;docase
0003B614 <AmiBlitz3.ab2@28363>            Dc.l do_default                                 ;dodefault
0003B618 <AmiBlitz3.ab2@28364>            Dc.l do_AsmExit                                 ;doasmexit
0003B61C <AmiBlitz3.ab2@28365>            Dc.l do_xinclude                                ;doxinclude
0003B620 <AmiBlitz3.ab2@28366>            Dc.l do_INCLUDE                                 ;doinclude
0003B624 <AmiBlitz3.ab2@28367>            Dc.l do_syntax                                  ;syntaxerr
0003B628 <AmiBlitz3.ab2@28368>            Dc.l do_shared                                  ;doshared
0003B62C <AmiBlitz3.ab2@28369>            Dc.l do_for                                     ;dofor
0003B630 <AmiBlitz3.ab2@28370>            Dc.l do_next                                    ;donext
0003B634 <AmiBlitz3.ab2@28371>            Dc.l syntaxerr                                  ; To
0003B638 <AmiBlitz3.ab2@28372>            Dc.l syntaxerr                                  ; Step
0003B63C <AmiBlitz3.ab2@28373>            Dc.l do_data                                    ;dodata
0003B640 <AmiBlitz3.ab2@28374>            Dc.l do_read                                    ;doread
0003B644 <AmiBlitz3.ab2@28378>            Dc.l syntaxerr                                  ; CNIF
0003B648 <AmiBlitz3.ab2@28379>            Dc.l syntaxerr                                  ; CSIF
0003B64C <AmiBlitz3.ab2@28380>            Dc.l syntaxerr                                  ; CELSE
0003B650 <AmiBlitz3.ab2@28381>            Dc.l syntaxerr                                  ; CEND
0003B654 <AmiBlitz3.ab2@28382>            Dc.l do_cerr                                    ;docerr
0003B658 <AmiBlitz3.ab2@28383>            Dc.l do_then                                    ;dothen
0003B65C <AmiBlitz3.ab2@28384>            Dc.l do_else                                    ;doelse
0003B660 <AmiBlitz3.ab2@28385>            Dc.l do_even4                                   ;doeven4
0003B664 <AmiBlitz3.ab2@28386>            Dc.l do_even8                                   ;doeven8
0003B668 <AmiBlitz3.ab2@28388>            Dc.l do_dc                                      ;dodc
0003B66C <AmiBlitz3.ab2@28389>            Dc.l do_ds                                      ;dods
0003B670 <AmiBlitz3.ab2@28390>            Dc.l do_even                                    ;doeven
0003B674 <AmiBlitz3.ab2@28391>            Dc.l do_dcb                                     ;dodcb
0003B678 <AmiBlitz3.ab2@28392>            Dc.l do_setreg                                  ;dosetreg
0003B67C <AmiBlitz3.ab2@28393>            Dc.l do_IncBin                                  ;doincbin
0003B680 <AmiBlitz3.ab2@28394>            Dc.l do_free                                    ;dofree
0003B684 <AmiBlitz3.ab2@28395>            Dc.l do_use                                     ;douse
0003B688 <AmiBlitz3.ab2@28396>            Dc.l do_Stop                                    ;dostop
0003B68C <AmiBlitz3.ab2@28397>            Dc.l do_Cont                                    ;docont
0003B690 <AmiBlitz3.ab2@28398>            Dc.l syntaxerr                                  ;syntaxeer
0003B694 <AmiBlitz3.ab2@28399>            Dc.l do_SetInt                                  ;dosetint
0003B698 <AmiBlitz3.ab2@28400>            Dc.l do_ClrInt                                  ;doclrint
0003B69C <AmiBlitz3.ab2@28401>            Dc.l do_MaxLen                                  ;domaxlen
0003B6A0 <AmiBlitz3.ab2@28402>            Dc.l do_DEFTYPE                                 ;dodeftype
0003B6A4 <AmiBlitz3.ab2@28403>            Dc.l do_BLITZ                                   ;doblitz
0003B6A8 <AmiBlitz3.ab2@28404>            Dc.l do_AMIGA                                   ;doamiga
0003B6AC <AmiBlitz3.ab2@28405>            Dc.l do_QAMIGA                                  ;doqamiga
0003B6B0 <AmiBlitz3.ab2@28406>            Dc.l do_VWait                                   ;dovwait
0003B6B4 <AmiBlitz3.ab2@28407>            Dc.l do_LibJsr                                  ;dolibjsr
0003B6B8 <AmiBlitz3.ab2@28408>            Dc.l do_TokeJsr                                 ;dotokejsr
0003B6BC <AmiBlitz3.ab2@28409>            Dc.l do_BLibJsr                                 ;doblibjsr
0003B6C0 <AmiBlitz3.ab2@28410>            Dc.l _extb                                      ;syntaxerr
0003B6C4 <AmiBlitz3.ab2@28414>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003B6C8 <AmiBlitz3.ab2@28415>            Dc.l do_SetErr                                  ;doseterr
0003B6CC <AmiBlitz3.ab2@28416>            Dc.l do_ClrErr                                  ;doclrerr
0003B6D0 <AmiBlitz3.ab2@28417>            Dc.l syntaxerr                                  ;syntaxerr
0003B6D4 <AmiBlitz3.ab2@28418>            Dc.l do_ErrFail                                 ;doerrfail
0003B6D8 <AmiBlitz3.ab2@28419>            Dc.l syntaxerr
0003B6DC <AmiBlitz3.ab2@28420>            Dc.l syntaxerr                                  ;mod
0003B6E0 <AmiBlitz3.ab2@28421>            Dc.l syntaxerr                                  ;Pi
0003B6E4 <AmiBlitz3.ab2@28422>            Dc.l do_Repeat                                  ;dorepeat
0003B6E8 <AmiBlitz3.ab2@28423>            Dc.l do_Until                                   ;dountil
0003B6EC <AmiBlitz3.ab2@28424>            Dc.l do_PutReg                                  ;doputreg
0003B6F0 <AmiBlitz3.ab2@28425>            Dc.l do_Pop                                     ;dopop
0003B6F4 <AmiBlitz3.ab2@28426>            Dc.l do_INCDIR                                  ;doincdir
0003B6F8 <AmiBlitz3.ab2@28427>            Dc.l mydo_Endif2                                ;mydoendif2
0003B6FC <AmiBlitz3.ab2@28428>            Dc.l do_Wend                                    ;dowend
0003B700 <AmiBlitz3.ab2@28429>            Dc.l do_SysJsr                                  ;dosysjsr
0003B704 <AmiBlitz3.ab2@28430>            Dc.l do_WBStartup                               ;dowbstartup
0003B708 <AmiBlitz3.ab2@28431>            Dc.l syntaxerr
0003B70C <AmiBlitz3.ab2@28432>            Dc.l do_Ongo                                    ;doongo
0003B710 <AmiBlitz3.ab2@28433>            Dc.l syntaxerr
0003B714 <AmiBlitz3.ab2@28434>            Dc.l do_Forever                                 ;doforever
0003B718 <AmiBlitz3.ab2@28435>            Dc.l do_Restore                                 ;dorestore
0003B71C <AmiBlitz3.ab2@28436>            Dc.l do_Exchange                                ;doexchange
0003B720 <AmiBlitz3.ab2@28437>            Dc.l do_USEPATH                                 ;dousepath
0003B724 <AmiBlitz3.ab2@28438>            Dc.l do_CloseEd                                 ;doclosed
0003B728 <AmiBlitz3.ab2@28439>            Dc.l do_NoCli                                   ;donocli
0003B72C <AmiBlitz3.ab2@28440>            Dc.l syntaxerr                                  ;syntaxerr
0003B730 <AmiBlitz3.ab2@28441>            Dc.l syntaxerr                                  ;syntaxerr
0003B734 <AmiBlitz3.ab2@28442>            Dc.l syntaxerr                                  ;syntaxerr
0003B738 <AmiBlitz3.ab2@28443>            Dc.l syntaxerr                                  ;syntaxerr
0003B73C <AmiBlitz3.ab2@28444>            Dc.l syntaxerr                                  ;syntaxerr
0003B740 <AmiBlitz3.ab2@28445>            Dc.l do_runerrson                               ;dorunerrson
0003B744 <AmiBlitz3.ab2@28446>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003B748 <AmiBlitz3.ab2@28447>            Dc.l do_uselastpath
0003B74C <AmiBlitz3.ab2@28448>            Dc.l do_regload
0003B750 <AmiBlitz3.ab2@28449>            Dc.l do_regsave
0003B754 <AmiBlitz3.ab2@28450>            Dc.l do_Object
0003B758 <AmiBlitz3.ab2@28451>            Dc.l do_usepath2
0003B75C <AmiBlitz3.ab2@28452>            Dc.l do_LastRunErrsMode
0003B760 <AmiBlitz3.ab2@28475> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003B764 <AmiBlitz3.ab2@28476>            Dc.l menu_run
0003B768 <AmiBlitz3.ab2@28477>            Dc.l menu_createexecutable
0003B76C <AmiBlitz3.ab2@28478>            Dc.l menu_dummyfunc          ;was menu_compileroptions
0003B770 <AmiBlitz3.ab2@28479>            Dc.l menu_createresidentfile
0003B774 <AmiBlitz3.ab2@28480>            Dc.l menu_viewnewtypes
0003B778 <AmiBlitz3.ab2@28481>            Dc.l menu_simcliarguments
0003B77C <AmiBlitz3.ab2@28482>            Dc.l menu_dummyfunc          ;was menu_calculator
0003B780 <AmiBlitz3.ab2@28483>            Dc.l menu_reloadlibs
0003B784 <AmiBlitz3.ab2@28484>            Dc.l menu_loaddebugmodule
0003B788 <AmiBlitz3.ab2@28485>            Dc.l menu_dummyfunc
0003B78C <AmiBlitz3.ab2@28486>            Dc.l menu_newcreate
0003B790 <AmiBlitz3.ab2@28487>            Dc.l menu_dummyfunc
0003B794 <AmiBlitz3.ab2@28488>            Dc.l toggledebug
0003B798 <AmiBlitz3.ab2@28489>            Dc.l menu_dummyfunc
0003B79C <AmiBlitz3.ab2@28490>            Dc.l menu_dummyfunc
0003B7C6 <AmiBlitz3.ab2@28495>   !basic
0003B81C <AmiBlitz3.ab2@28496>   error{!TRANS{"Inavlid amiblitz3 menu item called!"} }
0003B83A <AmiBlitz3.ab2@28497>   !asm
0003B83C <AmiBlitz3.ab2@28498> RTS
0003B83D <AmiBlitz3.ab2@28504> set_autorun:               Dc.b $00
0003B842 <AmiBlitz3.ab2@28505> autorun:                   Dc.b $80,$01,$01,$00,$01
0003B843 <AmiBlitz3.ab2@28507> set_interruptcheck:        Dc.b $00
0003B848 <AmiBlitz3.ab2@28508> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003B849 <AmiBlitz3.ab2@28510> set_assemblercheck:        Ds.b 1
0003B84E <AmiBlitz3.ab2@28511> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003B84F <AmiBlitz3.ab2@28513> set_overflowcheck:         Ds.b 1
0003B854 <AmiBlitz3.ab2@28514> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003B85A <AmiBlitz3.ab2@28516> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003B860 <AmiBlitz3.ab2@28517> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003B866 <AmiBlitz3.ab2@28518> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003B868 <AmiBlitz3.ab2@28519> Even4
0003B874 <AmiBlitz3.ab2@28522> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003B87C <AmiBlitz3.ab2@28523>                            Dc.l $00000000,$00000000
0003B884 <AmiBlitz3.ab2@28524> tstsize1:                  Dc.l $00000100,$000003E9
0003B888 <AmiBlitz3.ab2@28525> tstsize2:                  Dc.l $00000100
0003B88C <AmiBlitz3.ab2@28526> tstend:                    Dc.l $000003EC
0003B894 <AmiBlitz3.ab2@28527> tstsize3:                  Ds.l 2
0003B898 <AmiBlitz3.ab2@28528> tstdone:                   Dc.l $000003F2
0003B89C <AmiBlitz3.ab2@28531> edstruct:                  Dc.l tokens                     ;data for ted
0003B8A0 <AmiBlitz3.ab2@28535>                            Dc.l 0
0003B8A4 <AmiBlitz3.ab2@28537>                            Dc.l read_xtrafile              ;load .xtra routine
0003B8A8 <AmiBlitz3.ab2@28538>                            Dc.l write_xtrafile             ;save .xtra routine
0003B8AC <AmiBlitz3.ab2@28539>                            Dc.l call_menuentry             ;Menu Routine
0003B8B0 <AmiBlitz3.ab2@28540>                            Ds.l 1                          ;cleanup (?)
0003B8B4 <AmiBlitz3.ab2@28541>                            Dc.b ":",34,".;"
0003B9B0 <AmiBlitz3.ab2@28544> 
0003BA90 <AmiBlitz3.ab2@28545>                            Ds.l 56
0003BA92 <AmiBlitz3.ab2@28550> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003BA96 <AmiBlitz3.ab2@28553> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003BA98 <AmiBlitz3.ab2@28554>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003BA9C <AmiBlitz3.ab2@28555>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BAA2 <AmiBlitz3.ab2@28559> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003BAA4 <AmiBlitz3.ab2@28563>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003BAA8 <AmiBlitz3.ab2@28566> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003BAAC <AmiBlitz3.ab2@28569> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003BAB0 <AmiBlitz3.ab2@28570>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003BAB2 <AmiBlitz3.ab2@28576>                            Dc.b $4A,$40                                             ;TST.W   D0
0003BAB4 <AmiBlitz3.ab2@28580>                            Dc.b $4A,$80                                             ;TST.L   D0
0003BAB6 <AmiBlitz3.ab2@28583> nops8:                     Dc.b $4E,$71                                             ;NOP
0003BAB8 <AmiBlitz3.ab2@28584>                            Dc.b $4E,$71                                             ;NOP
0003BABA <AmiBlitz3.ab2@28585>                            Dc.b $4E,$71                                             ;NOP
0003BABC <AmiBlitz3.ab2@28586>                            Dc.b $4E,$71                                             ;NOP
0003BABE <AmiBlitz3.ab2@28587> nops4:                     Dc.b $4E,$71                                             ;NOP
0003BAC0 <AmiBlitz3.ab2@28589>                            Dc.b $4E,$71                                             ;NOP
0003BAC2 <AmiBlitz3.ab2@28590>                            Dc.b $4E,$71                                             ;NOP
0003BAC4 <AmiBlitz3.ab2@28591>                            Dc.b $4E,$71                                             ;NOP
0003BAC8 <AmiBlitz3.ab2@28595> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003BACC <AmiBlitz3.ab2@28598> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003BACE <AmiBlitz3.ab2@28601> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003BAD0 <AmiBlitz3.ab2@28604> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BAD2 <AmiBlitz3.ab2@28605>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003BAD6 <AmiBlitz3.ab2@28606>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003BAD8 <AmiBlitz3.ab2@28607>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003BADA <AmiBlitz3.ab2@28613> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BADE <AmiBlitz3.ab2@28614>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003BAE0 <AmiBlitz3.ab2@28619> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BAE4 <AmiBlitz3.ab2@28620>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003BAE6 <AmiBlitz3.ab2@28624> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BAE8 <AmiBlitz3.ab2@28625>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003BAEC <AmiBlitz3.ab2@28631> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003BAEE <AmiBlitz3.ab2@28632>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003BAF2 <AmiBlitz3.ab2@28633>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003BAF6 <AmiBlitz3.ab2@28637> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003BAF8 <AmiBlitz3.ab2@28638>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003BAFC <AmiBlitz3.ab2@28639>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003BAFE <AmiBlitz3.ab2@28642> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003BB02 <AmiBlitz3.ab2@28645> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003BB06 <AmiBlitz3.ab2@28648> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003BB0A <AmiBlitz3.ab2@28651> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003BB0E <AmiBlitz3.ab2@28655>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BB10 <AmiBlitz3.ab2@28656>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003BB12 <AmiBlitz3.ab2@28657>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003BB16 <AmiBlitz3.ab2@28662>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BB18 <AmiBlitz3.ab2@28663>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003BB1A <AmiBlitz3.ab2@28664>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003BB1E <AmiBlitz3.ab2@28669>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BB20 <AmiBlitz3.ab2@28670>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003BB22 <AmiBlitz3.ab2@28671>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003BB26 <AmiBlitz3.ab2@28676>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BB28 <AmiBlitz3.ab2@28677>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BB2A <AmiBlitz3.ab2@28678>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003BB2E <AmiBlitz3.ab2@28679>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003BB30 <AmiBlitz3.ab2@28680>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003BB34 <AmiBlitz3.ab2@28685>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BB36 <AmiBlitz3.ab2@28686>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003BB3A <AmiBlitz3.ab2@28687>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003BB3C <AmiBlitz3.ab2@28688>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BB40 <AmiBlitz3.ab2@28689>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003BB42 <AmiBlitz3.ab2@28690>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BB44 <AmiBlitz3.ab2@28693>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003BB48 <AmiBlitz3.ab2@28698>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BB4A <AmiBlitz3.ab2@28699>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003BB4E <AmiBlitz3.ab2@28700>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003BB50 <AmiBlitz3.ab2@28701>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BB54 <AmiBlitz3.ab2@28702>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003BB56 <AmiBlitz3.ab2@28703>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BB58 <AmiBlitz3.ab2@28706>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003BB5C <AmiBlitz3.ab2@28711>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BB5E <AmiBlitz3.ab2@28712>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BB62 <AmiBlitz3.ab2@28713>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003BB64 <AmiBlitz3.ab2@28714>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BB68 <AmiBlitz3.ab2@28715>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003BB6A <AmiBlitz3.ab2@28716>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BB6C <AmiBlitz3.ab2@28719>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003BB70 <AmiBlitz3.ab2@28724>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BB72 <AmiBlitz3.ab2@28725>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BB76 <AmiBlitz3.ab2@28726>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003BB7C <AmiBlitz3.ab2@28727>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003BB80 <AmiBlitz3.ab2@28728>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003BB82 <AmiBlitz3.ab2@28729>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BB86 <AmiBlitz3.ab2@28736>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003BB88 <AmiBlitz3.ab2@28740> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003BB8A <AmiBlitz3.ab2@28743> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BB8E <AmiBlitz3.ab2@28746> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003BB90 <AmiBlitz3.ab2@28747> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003BB94 <AmiBlitz3.ab2@28750> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003BB96 <AmiBlitz3.ab2@28753> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BB9A <AmiBlitz3.ab2@28756> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003BB9C <AmiBlitz3.ab2@28760>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003BB9E <AmiBlitz3.ab2@28763> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003BBA0 <AmiBlitz3.ab2@28766> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BBA4 <AmiBlitz3.ab2@28769> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003BBA8 <AmiBlitz3.ab2@28772> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003BBAC <AmiBlitz3.ab2@28775> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003BBAE <AmiBlitz3.ab2@28778> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BBB0 <AmiBlitz3.ab2@28781> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003BBB4 <AmiBlitz3.ab2@28784> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003BBBA <AmiBlitz3.ab2@28785>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003BBBC <AmiBlitz3.ab2@28786>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BBC0 <AmiBlitz3.ab2@28790> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003BBC2 <AmiBlitz3.ab2@28791>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BBC4 <AmiBlitz3.ab2@28795> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003BBC8 <AmiBlitz3.ab2@28798> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003BBCA <AmiBlitz3.ab2@28802>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003BBCC <AmiBlitz3.ab2@28806>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BBCE <AmiBlitz3.ab2@28810>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003BBD2 <AmiBlitz3.ab2@28813> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003BBD6 <AmiBlitz3.ab2@28816> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003BBD8 <AmiBlitz3.ab2@28819> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003BBDA <AmiBlitz3.ab2@28822> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BBDC <AmiBlitz3.ab2@28825> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003BBE0 <AmiBlitz3.ab2@28828> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003BBE4 <AmiBlitz3.ab2@28831> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003BBE6 <AmiBlitz3.ab2@28834> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003BBE8 <AmiBlitz3.ab2@28838>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003BBEC <AmiBlitz3.ab2@28841>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BBEE <AmiBlitz3.ab2@28847>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003BBF2 <AmiBlitz3.ab2@28850>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BBF4 <AmiBlitz3.ab2@28856>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003BBF8 <AmiBlitz3.ab2@28860> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003BBFA <AmiBlitz3.ab2@28863> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003BBFC <AmiBlitz3.ab2@28867>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BBFE <AmiBlitz3.ab2@28871>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003BC04 <AmiBlitz3.ab2@28874> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003BC0A <AmiBlitz3.ab2@28877> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003BC12 <AmiBlitz3.ab2@28881> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003BC16 <AmiBlitz3.ab2@28882>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003BC18 <AmiBlitz3.ab2@28886> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003BC1C <AmiBlitz3.ab2@28889> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003BC20 <AmiBlitz3.ab2@28892> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003BC24 <AmiBlitz3.ab2@28895> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003BC28 <AmiBlitz3.ab2@28896> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003BC2C <AmiBlitz3.ab2@28900>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003BC30 <AmiBlitz3.ab2@28902>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003BC32 <AmiBlitz3.ab2@28905> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BC36 <AmiBlitz3.ab2@28908> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003BC38 <AmiBlitz3.ab2@28911> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003BC3A <AmiBlitz3.ab2@28912>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BC3C <AmiBlitz3.ab2@28913>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003BC40 <AmiBlitz3.ab2@28914> 
0003BC42 <AmiBlitz3.ab2@28915>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003BC44 <AmiBlitz3.ab2@28916>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003BC46 <AmiBlitz3.ab2@28917>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003BC4C <AmiBlitz3.ab2@28919>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003BC4E <AmiBlitz3.ab2@28924> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003BC50 <AmiBlitz3.ab2@28925>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003BC52 <AmiBlitz3.ab2@28929> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003BC56 <AmiBlitz3.ab2@28932> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003BC58 <AmiBlitz3.ab2@28935> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BC5A <AmiBlitz3.ab2@28939>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003BC5C <AmiBlitz3.ab2@28942> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003BC60 <AmiBlitz3.ab2@28945> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BC62 <AmiBlitz3.ab2@28946>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BC66 <AmiBlitz3.ab2@28950> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003BC6A <AmiBlitz3.ab2@28951> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003BC6E <AmiBlitz3.ab2@28955> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003BC72 <AmiBlitz3.ab2@28959> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003BC78 <AmiBlitz3.ab2@28963> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003BC7E <AmiBlitz3.ab2@28966> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003BC82 <AmiBlitz3.ab2@28970> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003BC86 <AmiBlitz3.ab2@28974>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003BC8A <AmiBlitz3.ab2@28975>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003BC90 <AmiBlitz3.ab2@28980>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003BC94 <AmiBlitz3.ab2@28985>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003BC96 <AmiBlitz3.ab2@28990>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003BC9A <AmiBlitz3.ab2@28994>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003BC9C <AmiBlitz3.ab2@28998> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003BC9E <AmiBlitz3.ab2@29001> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003BCA0 <AmiBlitz3.ab2@29002>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003BCA4 <AmiBlitz3.ab2@29006>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003BCA8 <AmiBlitz3.ab2@29010> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003BCAC <AmiBlitz3.ab2@29013> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003BCAE <AmiBlitz3.ab2@29016> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003BCB2 <AmiBlitz3.ab2@29019> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003BCB4 <AmiBlitz3.ab2@29022> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003BCBD <AmiBlitz3.ab2@29026>                            Dc.b "ram:test",0
0003BCBE <AmiBlitz3.ab2@29027> Even
0003BCC2 <AmiBlitz3.ab2@29031>                            Dc.l  0                          ;was  Ds.w 3 org source
0003BCC4 <AmiBlitz3.ab2@29033>                            Dc.w  0
0003BCC8 <AmiBlitz3.ab2@29036> _mathffpbase:              Ds.l 1                           ;maths org source
0003BCCA <AmiBlitz3.ab2@29037> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003BCCC <AmiBlitz3.ab2@29038> typelen:                   Ds.w 1
0003BCD0 <AmiBlitz3.ab2@29039> prevtype:                  Ds.l 1
0003BCD4 <AmiBlitz3.ab2@29040> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003BCD6 <AmiBlitz3.ab2@29041> lastchar:                  Ds.w 1
0003BCDA <AmiBlitz3.ab2@29042> thistype:                  Ds.l 1
0003BCDE <AmiBlitz3.ab2@29043> errstack:                  Ds.l 1
0003BCE2 <AmiBlitz3.ab2@29044> errcont:                   Ds.l 1
0003BCE4 <AmiBlitz3.ab2@29045> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003BCE6 <AmiBlitz3.ab2@29046> linesleft:                 Ds.w 1
0003BCEA <AmiBlitz3.ab2@29047> sourceline:                Ds.l 1                          ;thisitem org source
0003BCEE <AmiBlitz3.ab2@29048> varbase:                   Ds.l 1                          ;firstvar org source
0003BCF2 <AmiBlitz3.ab2@29049> alllocals:                 Ds.l 1
0003BCF6 <AmiBlitz3.ab2@29050> firstlocal:                Ds.l 1
0003BCFA <AmiBlitz3.ab2@29051> firstglob:                 Ds.l 1
0003BCFC <AmiBlitz3.ab2@29052> globalvarpointer:          Ds.w 1                          ;varoff org source
0003BCFE <AmiBlitz3.ab2@29053> locvaroff:                 Ds.w 1
0003BD02 <AmiBlitz3.ab2@29054> firstitem_:                 Ds.l 1
0003BD04 <AmiBlitz3.ab2@29055> numlines_org:              Ds.w 1                          ;numlines org source
0003BD06 <AmiBlitz3.ab2@29056> returncode_org:            Ds.w 1                          ;returncode org source
0003BD0A <AmiBlitz3.ab2@29057> firstiff:                  Ds.l 1                          ;firstif org source
0003BD0E <AmiBlitz3.ab2@29058> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003BF0E <AmiBlitz3.ab2@29059> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003BF1E <AmiBlitz3.ab2@29060> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003C11E <AmiBlitz3.ab2@29061> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003C31E <AmiBlitz3.ab2@29062> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003C51E <AmiBlitz3.ab2@29063> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003C522 <AmiBlitz3.ab2@29065> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003C722 <AmiBlitz3.ab2@29066> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003C922 <AmiBlitz3.ab2@29068> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003C926 <AmiBlitz3.ab2@29069> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003CB26 <AmiBlitz3.ab2@29070> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003CB2A <AmiBlitz3.ab2@29071> size_deflibs:              Ds.l 1                          ;deflibs org source
0003CD2A <AmiBlitz3.ab2@29072> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003CF2A <AmiBlitz3.ab2@29074> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003CF2E <AmiBlitz3.ab2@29075> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003D12E <AmiBlitz3.ab2@29077> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003D132 <AmiBlitz3.ab2@29083>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003D136 <AmiBlitz3.ab2@29084>   Dc.b $00,$00,$00,$00
0003D13A <AmiBlitz3.ab2@29085>   Dc.b $00,$19,$00,$11
0003D13E <AmiBlitz3.ab2@29086>   Dc.b $00,$2E,$00,$18
0003D142 <AmiBlitz3.ab2@29087>   Dc.b $00,$04,$00,$03
0003D146 <AmiBlitz3.ab2@29088>   Dc.b $00,$01,$00,$22
0003D14A <AmiBlitz3.ab2@29089>   Dc.b $73,$68,$00,$00
0003D14E <AmiBlitz3.ab2@29090>   Dc.b $00,$00,$00,$00
0003D152 <AmiBlitz3.ab2@29091>   Dc.b $00,$00,$00,$00
0003D156 <AmiBlitz3.ab2@29092>   Dc.b $00,$00,$00,$00
0003D15A <AmiBlitz3.ab2@29093>   Dc.b $00,$00,$00,$00
0003D15E <AmiBlitz3.ab2@29094>   Dc.b $00,$00,$00,$00
0003D162 <AmiBlitz3.ab2@29095>   Dc.b $03,$22,$00,$21
0003D166 <AmiBlitz3.ab2@29096>   Dc.b $3C,$28,$00,$22
0003D16A <AmiBlitz3.ab2@29097>   Dc.b $6E,$C0,$00,$00
0003D16E <AmiBlitz3.ab2@29098>   Dc.b $00,$12,$00,$00
0003D172 <AmiBlitz3.ab2@29099>   Dc.b $00,$0E,$00,$00
0003D176 <AmiBlitz3.ab2@29100>   Dc.b $00,$00,$00,$00
0003D17A <AmiBlitz3.ab2@29101>   Dc.b $00,$00,$00,$00
0003D17E <AmiBlitz3.ab2@29102>   Dc.b $00,$00,$00,$00
0003D182 <AmiBlitz3.ab2@29103>   Dc.b $00,$00,$00,$2E
0003D186 <AmiBlitz3.ab2@29104>   Dc.b $00,$17,$00,$02
0003D18A <AmiBlitz3.ab2@29105>   Dc.b $00,$01,$8E,$80
0003D18E <AmiBlitz3.ab2@29106>   Dc.b $03,$00,$00,$00
0003D192 <AmiBlitz3.ab2@29107>   Dc.b $00,$00,$FF,$FF
0003D196 <AmiBlitz3.ab2@29108>   Dc.b $FF,$FF,$FF,$FC
0003D19A <AmiBlitz3.ab2@29109>   Dc.b $80,$00,$00,$00
0003D19E <AmiBlitz3.ab2@29110>   Dc.b $00,$00,$80,$00
0003D1A2 <AmiBlitz3.ab2@29111>   Dc.b $00,$3F,$BB,$40
0003D1A6 <AmiBlitz3.ab2@29112>   Dc.b $80,$1F,$C0,$00
0003D1AA <AmiBlitz3.ab2@29113>   Dc.b $00,$00,$80,$3F
0003D1AE <AmiBlitz3.ab2@29114>   Dc.b $C0,$0F,$BB,$40
0003D1B2 <AmiBlitz3.ab2@29115>   Dc.b $80,$1F,$C0,$00
0003D1B6 <AmiBlitz3.ab2@29116>   Dc.b $00,$00,$8E,$00
0003D1BA <AmiBlitz3.ab2@29117>   Dc.b $F8,$00,$00,$00
0003D1BE <AmiBlitz3.ab2@29118>   Dc.b $8F,$01,$FF,$00
0003D1C2 <AmiBlitz3.ab2@29119>   Dc.b $3B,$40,$81,$E3
0003D1C6 <AmiBlitz3.ab2@29120>   Dc.b $F7,$C0,$00,$00
0003D1CA <AmiBlitz3.ab2@29121>   Dc.b $80,$7F,$F8,$70
0003D1CE <AmiBlitz3.ab2@29122>   Dc.b $3B,$40,$80,$0F
0003D1D2 <AmiBlitz3.ab2@29123>   Dc.b $7C,$E0,$00,$00
0003D1D6 <AmiBlitz3.ab2@29124>   Dc.b $80,$00,$FD,$80
0003D1DA <AmiBlitz3.ab2@29125>   Dc.b $00,$00,$80,$01
0003D1DE <AmiBlitz3.ab2@29126>   Dc.b $F6,$00,$FB,$40
0003D1E2 <AmiBlitz3.ab2@29127>   Dc.b $80,$03,$EF,$00
0003D1E6 <AmiBlitz3.ab2@29128>   Dc.b $00,$00,$80,$07
0003D1EA <AmiBlitz3.ab2@29129>   Dc.b $87,$80,$3B,$40
0003D1EE <AmiBlitz3.ab2@29130>   Dc.b $80,$0F,$01,$C0
0003D1F2 <AmiBlitz3.ab2@29131>   Dc.b $00,$00,$80,$03
0003D1F6 <AmiBlitz3.ab2@29132>   Dc.b $F0,$70,$1D,$40
0003D1FA <AmiBlitz3.ab2@29133>   Dc.b $80,$00,$18,$1C
0003D1FE <AmiBlitz3.ab2@29134>   Dc.b $00,$00,$80,$00
0003D202 <AmiBlitz3.ab2@29135>   Dc.b $10,$06,$03,$40
0003D206 <AmiBlitz3.ab2@29136>   Dc.b $80,$00,$20,$1F
0003D20A <AmiBlitz3.ab2@29137>   Dc.b $00,$00,$80,$00
0003D20E <AmiBlitz3.ab2@29138>   Dc.b $00,$00,$01,$40
0003D212 <AmiBlitz3.ab2@29139>   Dc.b $80,$00,$00,$00
0003D216 <AmiBlitz3.ab2@29140>   Dc.b $00,$00,$80,$00
0003D21A <AmiBlitz3.ab2@29141>   Dc.b $00,$00,$00,$00
0003D21E <AmiBlitz3.ab2@29142>   Dc.b $00,$00,$00,$00
0003D222 <AmiBlitz3.ab2@29143>   Dc.b $00,$00,$00,$00
0003D226 <AmiBlitz3.ab2@29144>   Dc.b $00,$00,$00,$04
0003D22A <AmiBlitz3.ab2@29145>   Dc.b $00,$3F,$FC,$01
0003D22E <AmiBlitz3.ab2@29146>   Dc.b $BB,$44,$00,$60
0003D232 <AmiBlitz3.ab2@29147>   Dc.b $FE,$00,$00,$04
0003D236 <AmiBlitz3.ab2@29148>   Dc.b $00,$CF,$FF,$01
0003D23A <AmiBlitz3.ab2@29149>   Dc.b $BB,$44,$1F,$EF
0003D23E <AmiBlitz3.ab2@29150>   Dc.b $FF,$00,$00,$04
0003D242 <AmiBlitz3.ab2@29151>   Dc.b $33,$FF,$FF,$E0
0003D246 <AmiBlitz3.ab2@29152>   Dc.b $00,$04,$37,$FE
0003D24A <AmiBlitz3.ab2@29153>   Dc.b $7F,$FC,$1B,$44
0003D24E <AmiBlitz3.ab2@29154>   Dc.b $0F,$9C,$FF,$FF
0003D252 <AmiBlitz3.ab2@29155>   Dc.b $00,$04,$03,$E3
0003D256 <AmiBlitz3.ab2@29156>   Dc.b $FF,$FF,$DB,$44
0003D25A <AmiBlitz3.ab2@29157>   Dc.b $00,$7F,$BF,$FF
0003D25E <AmiBlitz3.ab2@29158>   Dc.b $80,$04,$00,$0F
0003D262 <AmiBlitz3.ab2@29159>   Dc.b $3F,$FE,$00,$04
0003D266 <AmiBlitz3.ab2@29160>   Dc.b $00,$06,$7F,$F8
0003D26A <AmiBlitz3.ab2@29161>   Dc.b $1B,$44,$00,$0C
0003D26E <AmiBlitz3.ab2@29162>   Dc.b $F7,$FC,$00,$04
0003D272 <AmiBlitz3.ab2@29163>   Dc.b $00,$19,$F9,$FE
0003D276 <AmiBlitz3.ab2@29164>   Dc.b $1B,$44,$00,$33
0003D27A <AmiBlitz3.ab2@29165>   Dc.b $FE,$7F,$00,$04
0003D27E <AmiBlitz3.ab2@29166>   Dc.b $00,$0F,$FF,$BF
0003D282 <AmiBlitz3.ab2@29167>   Dc.b $CD,$44,$00,$03
0003D286 <AmiBlitz3.ab2@29168>   Dc.b $EF,$EF,$F0,$04
0003D28A <AmiBlitz3.ab2@29169>   Dc.b $00,$00,$7F,$DF
0003D28E <AmiBlitz3.ab2@29170>   Dc.b $FB,$44,$00,$00
0003D292 <AmiBlitz3.ab2@29171>   Dc.b $FF,$A7,$FC,$04
0003D296 <AmiBlitz3.ab2@29172>   Dc.b $00,$00,$7E,$3F
0003D29A <AmiBlitz3.ab2@29173>   Dc.b $FD,$44,$00,$00
0003D29E <AmiBlitz3.ab2@29174>   Dc.b $00,$00,$00,$04
0003D2A2 <AmiBlitz3.ab2@29175>   Dc.b $7F,$FF,$FF,$FF
0003D2A6 <AmiBlitz3.ab2@29176>   Dc.b $FF,$FC,$00,$00
0003D2AA <AmiBlitz3.ab2@29177>   Dc.b $00,$01,$00,$00
0003D2AD <AmiBlitz3.ab2@29178>   Dc.b $00,$00,$04
0003D2B3 <AmiBlitz3.ab2@29181> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003D2B4 <AmiBlitz3.ab2@29182> Even
0003D2B8 <AmiBlitz3.ab2@29184> sysdebug:            Dc.l $3F0
0003D2BC <AmiBlitz3.ab2@29188> exelock              Ds.l 1
0003D2C0 <AmiBlitz3.ab2@29192> includesourceline    Dc.l 0
0003D2C4 <AmiBlitz3.ab2@29193> linenum              Ds.l 1
0003D2C8 <AmiBlitz3.ab2@29194> globallinecount      Ds.l 1
0003D2E4 <AmiBlitz3.ab2@29195> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003D2E8 <AmiBlitz3.ab2@29196> calc_option          Dc.l 1
0003D2EC <AmiBlitz3.ab2@29197> versioninformation   Dc.l $00
0003D2F0 <AmiBlitz3.ab2@29198> number_of_builds     Dc.l $00
0003D2F4 <AmiBlitz3.ab2@29201> BSS
0003D2F6 <AmiBlitz3.ab2@29202> debugnest            Ds.w 1
0003D2FA <AmiBlitz3.ab2@29203> instringf            Ds.l 1
0003D2FE <AmiBlitz3.ab2@29204> funcscanon           Ds.l 1
0003D312 <AmiBlitz3.ab2@29205> storedebugmode       Ds.b 20
0003D316 <AmiBlitz3.ab2@29206> firsttimepref        Ds.l 1
0003D317 <AmiBlitz3.ab2@29207> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003D318 <AmiBlitz3.ab2@29208> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003D31A <AmiBlitz3.ab2@29209> nostringopt          Ds.w 1
0003D39A <AmiBlitz3.ab2@29210> path2:               Ds.l 32
0003D39E <AmiBlitz3.ab2@29211> typebase             Dc.l 0
0003D3A0 <AmiBlitz3.ab2@29212> doublepeek           Dc.w 0
0003D3A4 <AmiBlitz3.ab2@29213> lastoffset           Dc.l 0
0003D3A6 <AmiBlitz3.ab2@29214> firsttime            Dc.w 0
0003D3AA <AmiBlitz3.ab2@29215> lastdestpointer      Dc.l 0
0003D3AE <AmiBlitz3.ab2@29216> prevwritedat         Dc.l 0
0003D3B2 <AmiBlitz3.ab2@29217> lastsourceline       Dc.l 0
0003D3B6 <AmiBlitz3.ab2@29218> lastwritedat         Dc.l 0
0003D3B8 <AmiBlitz3.ab2@29219> makeexec             Dc.w 0
0003D3BA <AmiBlitz3.ab2@29220> makeexec_remember    Dc.w 0
0003D3BE <AmiBlitz3.ab2@29221> sharebase            Ds.l 1
0003D3C2 <AmiBlitz3.ab2@29222> tempa7               Ds.l 1
0003D3C4 <AmiBlitz3.ab2@29223> incnif               Ds.w 1
0003D3C8 <AmiBlitz3.ab2@29224> tempstore            Ds.l 1
0003D3CC <AmiBlitz3.ab2@29225> result               Ds.l 1
0003D3CE <AmiBlitz3.ab2@29226> automode             Ds.w 1
0003D3D0 <AmiBlitz3.ab2@29227> stackcorrect         Ds.w 1
0003D3D2 <AmiBlitz3.ab2@29228> formode              Ds.w 1
0003D3D6 <AmiBlitz3.ab2@29229> limitregs            Ds.l 1
0003D3D8 <AmiBlitz3.ab2@29230> onestep              Ds.w 1
0003D3DC <AmiBlitz3.ab2@29231> reqmode              Ds.l 1
0003D47C <AmiBlitz3.ab2@29232> inctab               Ds.l 40
0003D47E <AmiBlitz3.ab2@29233> funcoptimize         Ds.w 1
0003D482 <AmiBlitz3.ab2@29234> includeline          Ds.l 1
0003D486 <AmiBlitz3.ab2@29235> morememadd           Ds.l 1
0003D488 <AmiBlitz3.ab2@29236> objectcount          Ds.w 1
0003D48C <AmiBlitz3.ab2@29237> savefuncspace        Ds.l 1
0003D490 <AmiBlitz3.ab2@29238> lasttrap1            Ds.l 1
0003D494 <AmiBlitz3.ab2@29239> currentfunccall      Ds.l 1
0003D495 <AmiBlitz3.ab2@29240> skipfunc             Ds.b 1
0003D496 <AmiBlitz3.ab2@29241> resdisable           Ds.b 1
0003D497 <AmiBlitz3.ab2@29242> skiptoggle           Ds.b 1
0003D498 <AmiBlitz3.ab2@29243> developobject        Ds.b 1
0003D49A <AmiBlitz3.ab2@29244> iniffcommand         Ds.w 1
0003D49C <AmiBlitz3.ab2@29245> startoffsetmore      Ds.w 1
0003D49E <AmiBlitz3.ab2@29246> olddebugmode         Ds.w 1
0003D4A2 <AmiBlitz3.ab2@29247> fpucodeglobal        Ds.l 1
0003D4A6 <AmiBlitz3.ab2@29248> fpucodelocal         Ds.l 1
0003D4AA <AmiBlitz3.ab2@29249> maxregs              Ds.l 1
0003D4AE <AmiBlitz3.ab2@29250> fpucode              Ds.l 1
0003D4B0 <AmiBlitz3.ab2@29251> firstmline           Ds.w 1
0003D4F0 <AmiBlitz3.ab2@29252> regtable             Ds.l 16
0003D4F2 <AmiBlitz3.ab2@29253> exdebug              Ds.w 1
0003D4F4 <AmiBlitz3.ab2@29254> a2offset2            Ds.w 1
0003D4F8 <AmiBlitz3.ab2@29255> parnumtemp           Ds.l 1
0003D4F9 <AmiBlitz3.ab2@29256> doimmediate          Ds.b 1
0003D4FA <AmiBlitz3.ab2@29257> notypecheck          Ds.b 1
0003D4FC <AmiBlitz3.ab2@29258> vartype              Ds.w 1
0003D4FD <AmiBlitz3.ab2@29259> peekaddrsize         Ds.b 1
0003D4FE <AmiBlitz3.ab2@29260> declare2             Ds.b 1
0003D500 <AmiBlitz3.ab2@29261> parameternum         Ds.w 1
0003D504 <AmiBlitz3.ab2@29262> lasttoken            Ds.l 1
0003D506 <AmiBlitz3.ab2@29263> newvariable          Ds.w 1
0003D507 <AmiBlitz3.ab2@29264> declare              Ds.b 1
0003D508 <AmiBlitz3.ab2@29265> typecheck            Ds.b 1
0003D509 <AmiBlitz3.ab2@29266> nowdeclare           Ds.b 1
0003D50A <AmiBlitz3.ab2@29267> dimkeep              Ds.b 1
0003D50B <AmiBlitz3.ab2@29268> a4a5store            Ds.b 1
0003D50C <AmiBlitz3.ab2@29269> ___freetouse         Ds.b 1
0003D510 <AmiBlitz3.ab2@29270> firstiffstore        Ds.l 1
0003D514 <AmiBlitz3.ab2@29271> destpointer2         Ds.l 1
0003D518 <AmiBlitz3.ab2@29272> stackaddr            Ds.l 1
0003D61C <AmiBlitz3.ab2@29273> allowtab             Ds.b 260
0003D71C <AmiBlitz3.ab2@29274> templine             Ds.b 256
0003D71E <AmiBlitz3.ab2@29275> thenmode             Ds.w 1
0003D720 <AmiBlitz3.ab2@29276> temp                 Ds.w 1
0003D722 <AmiBlitz3.ab2@29277> tempregnum           Ds.w 1
0003D726 <AmiBlitz3.ab2@29279> numlines2            Ds.l 1
0003D72A <AmiBlitz3.ab2@29280> numlines             Ds.l 1
0003D72C <AmiBlitz3.ab2@29281> exmac                Ds.w 1
0003D72E <AmiBlitz3.ab2@29282> returncode           Ds.w 1
0003D732 <AmiBlitz3.ab2@29283> fp0iff               Ds.l 1
0003D736 <AmiBlitz3.ab2@29284> fp0addr              Ds.l 1
0003D738 <AmiBlitz3.ab2@29285> fp0mode              Ds.w 1
0003D73A <AmiBlitz3.ab2@29286> fp0var               Ds.w 1
0003D73C <AmiBlitz3.ab2@29287> fastfunc             Ds.w 1
0003D73E <AmiBlitz3.ab2@29288> retmode              Ds.w 1
0003D740 <AmiBlitz3.ab2@29289> parnum               Ds.w 1
0003D742 <AmiBlitz3.ab2@29290> regmask              Ds.w 1
0003D744 <AmiBlitz3.ab2@29291> regnumfunc           Ds.w 1
0003D746 <AmiBlitz3.ab2@29292> libmode              Ds.w 1
0003D74A <AmiBlitz3.ab2@29293> oldline              Ds.l 1
0003D74E <AmiBlitz3.ab2@29294> sourceline3          Ds.l 1
0003D816 <AmiBlitz3.ab2@29295> debugstore           Ds.b 200
0003D81A <AmiBlitz3.ab2@29296> deststore            Ds.l 1
0003D81E <AmiBlitz3.ab2@29298> loada                Ds.l 1
0003D822 <AmiBlitz3.ab2@29300> currtype             Ds.l 1
0003D826 <AmiBlitz3.ab2@29301> arrayoffset          Ds.l 1
0003D82A <AmiBlitz3.ab2@29302> lastlabel            Ds.l 1
0003D82E <AmiBlitz3.ab2@29303> curtemplabel         Ds.l 1
0003D832 <AmiBlitz3.ab2@29304> sourceline2          Ds.l 1
0003D932 <AmiBlitz3.ab2@29305> chartab              Ds.b 256
0003D9AA <AmiBlitz3.ab2@29306> tempspace            Ds.b 120
000BD9BA <AmiBlitz3.ab2@29307> instrtab             Ds.l 65538*2
000C59BA <AmiBlitz3.ab2@29309> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E59BE <AmiBlitz3.ab2@29310> replacedat           Ds.w 65538
000ED9BE <AmiBlitz3.ab2@29311> variablehash         Ds.l 8192
000ED9C2 <AmiBlitz3.ab2@29312> newinitaddr          Ds.l 1
000ED9C6 <AmiBlitz3.ab2@29313> realbssend           Ds.l 1
000ED9C8 <AmiBlitz3.ab2@29314> saved0               Ds.w 1
000EDA48 <AmiBlitz3.ab2@29315> lastpath             Ds.b 128
000EDAC8 <AmiBlitz3.ab2@29316> lastpath2            Ds.b 128
000EDB90 <AmiBlitz3.ab2@29317> fpustackbase         Ds.w 100
000EDB94 <AmiBlitz3.ab2@29318> 
000EDB96 <AmiBlitz3.ab2@29319> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EDB9A <AmiBlitz3.ab2@29320> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EDB9E <AmiBlitz3.ab2@29321> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EDBA2 <AmiBlitz3.ab2@29322> rightsidetype        Dc.l 0  ; same as above but right side
000EDBA6 <AmiBlitz3.ab2@29325> trap15temp           Ds.l 1
000EDBAA <AmiBlitz3.ab2@29326> trap15temp2          Ds.l 1
000EDBAE <AmiBlitz3.ab2@29327> templibend           Ds.l 1
000EDBB2 <AmiBlitz3.ab2@29328> tempdata1start       Ds.l 1
000EDBB6 <AmiBlitz3.ab2@29329> stacktrack           Ds.l 1
000EDBBA <AmiBlitz3.ab2@29330> pad                  Ds.l 1
000EDCBA <AmiBlitz3.ab2@29331> includetemp          Ds.b 256
000EE6BA <AmiBlitz3.ab2@29332> includetemp2         Ds.b 256*10
000EE6BC <AmiBlitz3.ab2@29333> funccall             Ds.w 1
000EE6C0 <AmiBlitz3.ab2@29336> ptr_resfile          Ds.l 1
000EE6C2 <AmiBlitz3.ab2@29337> CalculatorButtonBinFlag:    Ds.w 1
000EE6C4 <AmiBlitz3.ab2@29338> CalculatorButtonDecFlag:    Ds.w 1
000EE6C8 <AmiBlitz3.ab2@29339> ped_startup_addr:    Ds.l 1
000EE6C9 <AmiBlitz3.ab2@29340> start_without_libs:  Ds.b 1
000EE6CA <AmiBlitz3.ab2@29341> skip_bytes:          Ds.b 1
000EE6CE <AmiBlitz3.ab2@29342> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EE6D2 <AmiBlitz3.ab2@29343> beforeparameterfetch Ds.l 1
000EE6D6 <AmiBlitz3.ab2@29344> typetocast           Ds.l 1
000EE6D7 <AmiBlitz3.ab2@29345> iserror              Ds.b 1
000EE6D8 <AmiBlitz3.ab2@29346> Even
000EE6DC <AmiBlitz3.ab2@29348> CLIMode:             Dc.l 0
000EE6E0 <AmiBlitz3.ab2@29349> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
