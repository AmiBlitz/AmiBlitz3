00000008 <AmiBlitz3.ab2@0> 
00000014 <AmiBlitz3.ab2@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab2@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab2@65> !basic
000000AC <AmiBlitz3.ab2@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab2@71> CLIMode     = False
000000C8 <AmiBlitz3.ab2@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab2@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab2@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab2@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002F6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000037A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
000003E6 <error.include.bb2@127> XINCLUDE "dos.include.bb2"
00000400 <error.include.bb2@129> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@130> XINCLUDE "dos.include.bb2"
00000498 <error.include.bb2@131> XINCLUDE "dos.include.bb2"
000004A6 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
000004B4 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
000004C2 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
000004D0 <error.include.bb2@136> XINCLUDE "dos.include.bb2"
000004F8 <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000506 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
0000050E <error.include.bb2@139> XINCLUDE "dos.include.bb2"
00000540 <error.include.bb2@141> XINCLUDE "dos.include.bb2"
0000055A <error.include.bb2@146> XINCLUDE "dos.include.bb2"
00000592 <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000598 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005DC <error.include.bb2@149> XINCLUDE "dos.include.bb2"
00000624 <error.include.bb2@150> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@154> XINCLUDE "dos.include.bb2"
00000648 <error.include.bb2@156> XINCLUDE "dos.include.bb2"
00000692 <error.include.bb2@195> XINCLUDE "dos.include.bb2"
0000069A <error.include.bb2@197> XINCLUDE "dos.include.bb2"
00000706 <error.include.bb2@198> XINCLUDE "dos.include.bb2"
00000728 <error.include.bb2@199> XINCLUDE "dos.include.bb2"
00000788 <error.include.bb2@200> XINCLUDE "dos.include.bb2"
00000796 <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000007A4 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000007B2 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
000007C0 <error.include.bb2@205> XINCLUDE "dos.include.bb2"
00000820 <error.include.bb2@206> XINCLUDE "dos.include.bb2"
0000082E <error.include.bb2@207> XINCLUDE "dos.include.bb2"
00000864 <error.include.bb2@210> XINCLUDE "dos.include.bb2"
0000086E <error.include.bb2@214> XINCLUDE "dos.include.bb2"
0000088A <error.include.bb2@215> XINCLUDE "dos.include.bb2"
0000088A <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
0000088A <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
0000088A <useful.include.bb2@1> XINCLUDE "dos.include.bb2"
000008B8 <useful.include.bb2@252> XINCLUDE "dos.include.bb2"
000008C2 <useful.include.bb2@253> XINCLUDE "dos.include.bb2"
000008D6 <useful.include.bb2@254> XINCLUDE "dos.include.bb2"
000008DE <useful.include.bb2@255> XINCLUDE "dos.include.bb2"
00000906 <useful.include.bb2@256> XINCLUDE "dos.include.bb2"
0000092C <useful.include.bb2@257> XINCLUDE "dos.include.bb2"
0000094C <useful.include.bb2@260> XINCLUDE "dos.include.bb2"
0000095A <useful.include.bb2@261> XINCLUDE "dos.include.bb2"
00000980 <useful.include.bb2@262> XINCLUDE "dos.include.bb2"
00000988 <useful.include.bb2@264> XINCLUDE "dos.include.bb2"
00000990 <useful.include.bb2@265> XINCLUDE "dos.include.bb2"
00000996 <useful.include.bb2@266> XINCLUDE "dos.include.bb2"
000009B2 <useful.include.bb2@267> XINCLUDE "dos.include.bb2"
000009D6 <useful.include.bb2@268> XINCLUDE "dos.include.bb2"
000009EA <useful.include.bb2@269> XINCLUDE "dos.include.bb2"
000009F0 <useful.include.bb2@270> XINCLUDE "dos.include.bb2"
00000A3A <useful.include.bb2@271> XINCLUDE "dos.include.bb2"
00000A3C <useful.include.bb2@272> XINCLUDE "dos.include.bb2"
00000A4A <useful.include.bb2@274> XINCLUDE "dos.include.bb2"
00000A6A <useful.include.bb2@276> XINCLUDE "dos.include.bb2"
00000AC8 <useful.include.bb2@277> XINCLUDE "dos.include.bb2"
00000ACE <useful.include.bb2@278> XINCLUDE "dos.include.bb2"
00000ADC <useful.include.bb2@279> XINCLUDE "dos.include.bb2"
00000AF0 <useful.include.bb2@280> XINCLUDE "dos.include.bb2"
00000B02 <useful.include.bb2@281> XINCLUDE "dos.include.bb2"
00000B10 <useful.include.bb2@282> XINCLUDE "dos.include.bb2"
00000B16 <useful.include.bb2@283> XINCLUDE "dos.include.bb2"
00000B22 <useful.include.bb2@284> XINCLUDE "dos.include.bb2"
00000B36 <useful.include.bb2@287> XINCLUDE "dos.include.bb2"
00000B4A <useful.include.bb2@288> XINCLUDE "dos.include.bb2"
00000B5C <useful.include.bb2@289> XINCLUDE "dos.include.bb2"
00000B6A <useful.include.bb2@290> XINCLUDE "dos.include.bb2"
00000B88 <useful.include.bb2@291> XINCLUDE "dos.include.bb2"
00000B8E <useful.include.bb2@292> XINCLUDE "dos.include.bb2"
00000BA2 <useful.include.bb2@296> XINCLUDE "dos.include.bb2"
00000BAC <useful.include.bb2@297> XINCLUDE "dos.include.bb2"
00000BB4 <useful.include.bb2@298> XINCLUDE "dos.include.bb2"
00000BD2 <useful.include.bb2@299> XINCLUDE "dos.include.bb2"
00000BD8 <useful.include.bb2@300> XINCLUDE "dos.include.bb2"
00000C04 <useful.include.bb2@301> XINCLUDE "dos.include.bb2"
00000C0A <useful.include.bb2@303> XINCLUDE "dos.include.bb2"
00000C1C <useful.include.bb2@304> XINCLUDE "dos.include.bb2"
00000C34 <useful.include.bb2@305> XINCLUDE "dos.include.bb2"
00000C4C <useful.include.bb2@306> XINCLUDE "dos.include.bb2"
00000C6A <useful.include.bb2@307> XINCLUDE "dos.include.bb2"
00000C6C <useful.include.bb2@309> XINCLUDE "dos.include.bb2"
00000C7A <useful.include.bb2@310> XINCLUDE "dos.include.bb2"
00000CA0 <useful.include.bb2@311> XINCLUDE "dos.include.bb2"
00000D34 <useful.include.bb2@312> XINCLUDE "dos.include.bb2"
00000D42 <useful.include.bb2@314> XINCLUDE "dos.include.bb2"
00000D48 <useful.include.bb2@315> XINCLUDE "dos.include.bb2"
00000D72 <useful.include.bb2@316> XINCLUDE "dos.include.bb2"
00000D90 <useful.include.bb2@317> XINCLUDE "dos.include.bb2"
00000D90 <strptr.include.bb2@31> XINCLUDE "dos.include.bb2"
00000DBA <strptr.include.bb2@33> XINCLUDE "dos.include.bb2"
00000DD4 <strptr.include.bb2@84> XINCLUDE "dos.include.bb2"
00000DDE <strptr.include.bb2@85> XINCLUDE "dos.include.bb2"
00000E2E <strptr.include.bb2@86> XINCLUDE "dos.include.bb2"
00000E32 <strptr.include.bb2@88> XINCLUDE "dos.include.bb2"
00000E60 <strptr.include.bb2@137> XINCLUDE "dos.include.bb2"
00000E6A <strptr.include.bb2@138> XINCLUDE "dos.include.bb2"
00000EBA <strptr.include.bb2@139> XINCLUDE "dos.include.bb2"
00000ECE <strptr.include.bb2@140> XINCLUDE "dos.include.bb2"
00000EE0 <strptr.include.bb2@141> XINCLUDE "dos.include.bb2"
00000F08 <strptr.include.bb2@142> XINCLUDE "dos.include.bb2"
00000F12 <strptr.include.bb2@143> XINCLUDE "dos.include.bb2"
00000F20 <strptr.include.bb2@144> XINCLUDE "dos.include.bb2"
00000F2A <strptr.include.bb2@145> XINCLUDE "dos.include.bb2"
00000F52 <strptr.include.bb2@146> XINCLUDE "dos.include.bb2"
00000F6C <strptr.include.bb2@147> XINCLUDE "dos.include.bb2"
00000F84 <strptr.include.bb2@151> XINCLUDE "dos.include.bb2"
00000F9E <strptr.include.bb2@213> XINCLUDE "dos.include.bb2"
00000FA8 <strptr.include.bb2@214> XINCLUDE "dos.include.bb2"
00000FB6 <strptr.include.bb2@215> XINCLUDE "dos.include.bb2"
00000FE8 <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00001006 <strptr.include.bb2@218> XINCLUDE "dos.include.bb2"
00001010 <strptr.include.bb2@219> XINCLUDE "dos.include.bb2"
00001026 <strptr.include.bb2@221> XINCLUDE "dos.include.bb2"
00001030 <strptr.include.bb2@222> XINCLUDE "dos.include.bb2"
00001040 <strptr.include.bb2@223> XINCLUDE "dos.include.bb2"
00001048 <strptr.include.bb2@224> XINCLUDE "dos.include.bb2"
0000104A <strptr.include.bb2@226> XINCLUDE "dos.include.bb2"
00001078 <strptr.include.bb2@227> XINCLUDE "dos.include.bb2"
00001078 <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
0000108E <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
000010A8 <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
000010B2 <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
000010D4 <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
000010F8 <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
0000110A <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
00001122 <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
00001136 <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
00001148 <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
00001158 <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
0000115E <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
0000116E <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
0000117E <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
00001198 <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
0000119C <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
000011B6 <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
000011E6 <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
000011F0 <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
000011FA <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
0000121C <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
00001240 <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
00001252 <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
0000126A <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
0000127E <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
00001290 <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
000012A0 <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
000012A6 <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
000012B6 <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
000012C6 <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
000012E0 <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
000012E6 <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
000012EC <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
000012F0 <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
0000130A <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
00001312 <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
0000131C <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
00001332 <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
00001346 <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
0000136A <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
00001378 <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
00001382 <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
00001388 <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
00001392 <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
00001398 <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
000013B6 <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
000013BE <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
000013C8 <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
000013E6 <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
000013FC <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
00001410 <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
00001444 <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
00001452 <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
0000145C <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
00001462 <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
0000146C <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
00001470 <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
00001476 <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
00001490 <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
0000149A <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
000014A4 <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
000014BA <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
000014CA <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
000014D4 <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
000014DA <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
000014DE <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
00001500 <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
00001508 <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
00001522 <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
0000152C <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
00001542 <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
00001556 <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
000015AC <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
000015E6 <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
000015F8 <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
0000161A <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
00001620 <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
00001676 <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
000016B0 <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
000016B6 <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
000016F0 <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
0000172A <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
0000173C <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
00001746 <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
0000174C <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
00001756 <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
0000176A <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
000017B0 <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
000017B8 <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
000017D6 <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
00001802 <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
00001820 <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
0000183A <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
00001854 <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
000018D6 <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
000018EA <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
00001902 <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
00001908 <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
00001920 <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
00001936 <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
00001950 <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
00001964 <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
00001972 <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
000019C8 <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
000019FE <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
00001A2E <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
00001AB6 <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
00001ABC <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
00001ACA <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
00001B20 <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
00001B56 <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
00001B86 <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
00001B8C <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
00001BA6 <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00001BB4 <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
00001BEE <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
00001C24 <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
00001C54 <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
00001C62 <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
00001C6C <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
00001C72 <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
00001C7C <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00001C90 <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
00001C90 <dos.include.ab3@57> XINCLUDE "dos.include.bb2"
00001CA6 <dos.include.ab3@60> XINCLUDE "dos.include.bb2"
00001CAE <dos.include.ab3@78> XINCLUDE "dos.include.bb2"
00001CB6 <dos.include.ab3@79> XINCLUDE "dos.include.bb2"
00001CDE <dos.include.ab3@80> XINCLUDE "dos.include.bb2"
00001CE6 <dos.include.ab3@81> XINCLUDE "dos.include.bb2"
00001D0E <dos.include.ab3@82> XINCLUDE "dos.include.bb2"
00001D36 <dos.include.ab3@83> XINCLUDE "dos.include.bb2"
00001D5E <dos.include.ab3@84> XINCLUDE "dos.include.bb2"
00001D66 <dos.include.ab3@85> XINCLUDE "dos.include.bb2"
00001D6E <dos.include.ab3@86> XINCLUDE "dos.include.bb2"
00001D76 <dos.include.ab3@87> XINCLUDE "dos.include.bb2"
00001D7E <dos.include.ab3@88> XINCLUDE "dos.include.bb2"
00001D86 <dos.include.ab3@89> XINCLUDE "dos.include.bb2"
00001D8E <dos.include.ab3@90> XINCLUDE "dos.include.bb2"
00001D96 <dos.include.ab3@91> XINCLUDE "dos.include.bb2"
00001D9E <dos.include.ab3@92> XINCLUDE "dos.include.bb2"
00001DA6 <dos.include.ab3@93> XINCLUDE "dos.include.bb2"
00001DC6 <dos.include.ab3@94> XINCLUDE "dos.include.bb2"
00001DCE <dos.include.ab3@95> XINCLUDE "dos.include.bb2"
00001DD6 <dos.include.ab3@96> XINCLUDE "dos.include.bb2"
00001DFE <dos.include.ab3@98> XINCLUDE "dos.include.bb2"
00001E14 <dos.include.ab3@129> XINCLUDE "dos.include.bb2"
00001E20 <dos.include.ab3@130> XINCLUDE "dos.include.bb2"
00001E24 <dos.include.ab3@131> XINCLUDE "dos.include.bb2"
00001E3A <dos.include.ab3@144> XINCLUDE "dos.include.bb2"
00001E54 <dos.include.ab3@145> XINCLUDE "dos.include.bb2"
00001E6A <dos.include.ab3@146> XINCLUDE "dos.include.bb2"
00001E94 <dos.include.ab3@147> XINCLUDE "dos.include.bb2"
00001E9E <dos.include.ab3@148> XINCLUDE "dos.include.bb2"
00001EA4 <dos.include.ab3@149> XINCLUDE "dos.include.bb2"
00001EBA <dos.include.ab3@162> XINCLUDE "dos.include.bb2"
00001ED4 <dos.include.ab3@163> XINCLUDE "dos.include.bb2"
00001EEA <dos.include.ab3@164> XINCLUDE "dos.include.bb2"
00001F14 <dos.include.ab3@165> XINCLUDE "dos.include.bb2"
00001F1E <dos.include.ab3@166> XINCLUDE "dos.include.bb2"
00001F24 <dos.include.ab3@167> XINCLUDE "dos.include.bb2"
00001F4E <dos.include.ab3@183> XINCLUDE "dos.include.bb2"
00001F5A <dos.include.ab3@184> XINCLUDE "dos.include.bb2"
00001F7A <dos.include.ab3@185> XINCLUDE "dos.include.bb2"
00001F84 <dos.include.ab3@186> XINCLUDE "dos.include.bb2"
00001F94 <dos.include.ab3@187> XINCLUDE "dos.include.bb2"
00001FA4 <dos.include.ab3@188> XINCLUDE "dos.include.bb2"
00001FAE <dos.include.ab3@190> XINCLUDE "dos.include.bb2"
00001FC8 <dos.include.ab3@191> XINCLUDE "dos.include.bb2"
00001FDE <dos.include.ab3@429> XINCLUDE "dos.include.bb2"
00001FF0 <dos.include.ab3@431> XINCLUDE "dos.include.bb2"
0000206A <dos.include.ab3@432> XINCLUDE "dos.include.bb2"
00002094 <dos.include.ab3@433> XINCLUDE "dos.include.bb2"
000020AC <dos.include.ab3@434> XINCLUDE "dos.include.bb2"
000020C2 <dos.include.ab3@460> XINCLUDE "dos.include.bb2"
000020D4 <dos.include.ab3@461> XINCLUDE "dos.include.bb2"
000020D8 <dos.include.ab3@462> XINCLUDE "dos.include.bb2"
000020EE <dos.include.ab3@478> XINCLUDE "dos.include.bb2"
000020F0 <dos.include.ab3@479> XINCLUDE "dos.include.bb2"
0000212A <dos.include.ab3@540> XINCLUDE "dos.include.bb2"
0000215E <dos.include.ab3@542> XINCLUDE "dos.include.bb2"
00002184 <dos.include.ab3@543> XINCLUDE "dos.include.bb2"
000021A4 <dos.include.ab3@544> XINCLUDE "dos.include.bb2"
000021C4 <dos.include.ab3@545> XINCLUDE "dos.include.bb2"
000021EE <dos.include.ab3@660> XINCLUDE "dos.include.bb2"
00002204 <dos.include.ab3@661> XINCLUDE "dos.include.bb2"
0000220E <dos.include.ab3@662> XINCLUDE "dos.include.bb2"
00002236 <dos.include.ab3@663> XINCLUDE "dos.include.bb2"
0000223C <dos.include.ab3@664> XINCLUDE "dos.include.bb2"
00002264 <dos.include.ab3@665> XINCLUDE "dos.include.bb2"
0000228E <dos.include.ab3@667> XINCLUDE "dos.include.bb2"
000022AC <dos.include.ab3@668> XINCLUDE "dos.include.bb2"
000022D6 <dos.include.ab3@691> XINCLUDE "dos.include.bb2"
00002346 <dos.include.ab3@692> XINCLUDE "dos.include.bb2"
00002370 <dos.include.ab3@693> XINCLUDE "dos.include.bb2"
0000238E <dos.include.ab3@694> XINCLUDE "dos.include.bb2"
000023B8 <dos.include.ab3@729> XINCLUDE "dos.include.bb2"
000023D8 <dos.include.ab3@730> XINCLUDE "dos.include.bb2"
00002404 <dos.include.ab3@731> XINCLUDE "dos.include.bb2"
0000240E <dos.include.ab3@732> XINCLUDE "dos.include.bb2"
00002428 <dos.include.ab3@733> XINCLUDE "dos.include.bb2"
00002452 <dos.include.ab3@880> XINCLUDE "dos.include.bb2"
00002500 <dos.include.ab3@881> XINCLUDE "dos.include.bb2"
00002516 <dos.include.ab3@882> XINCLUDE "dos.include.bb2"
00002520 <dos.include.ab3@883> XINCLUDE "dos.include.bb2"
00002548 <dos.include.ab3@884> XINCLUDE "dos.include.bb2"
00002552 <dos.include.ab3@885> XINCLUDE "dos.include.bb2"
00002558 <dos.include.ab3@886> XINCLUDE "dos.include.bb2"
0000255E <dos.include.ab3@887> XINCLUDE "dos.include.bb2"
00002564 <dos.include.ab3@888> XINCLUDE "dos.include.bb2"
00002576 <dos.include.ab3@890> XINCLUDE "dos.include.bb2"
00002580 <dos.include.ab3@892> XINCLUDE "dos.include.bb2"
0000259A <dos.include.ab3@893> XINCLUDE "dos.include.bb2"
000025D8 <dos.include.ab3@914> XINCLUDE "dos.include.bb2"
000025E0 <dos.include.ab3@915> XINCLUDE "dos.include.bb2"
0000268E <dos.include.ab3@916> XINCLUDE "dos.include.bb2"
000026A2 <dos.include.ab3@917> XINCLUDE "dos.include.bb2"
000026E4 <dos.include.ab3@918> XINCLUDE "dos.include.bb2"
00002704 <dos.include.ab3@920> XINCLUDE "dos.include.bb2"
0000270E <dos.include.ab3@921> XINCLUDE "dos.include.bb2"
0000272A <dos.include.ab3@922> XINCLUDE "dos.include.bb2"
00002764 <dos.include.ab3@974> XINCLUDE "dos.include.bb2"
0000276C <dos.include.ab3@975> XINCLUDE "dos.include.bb2"
0000281A <dos.include.ab3@976> XINCLUDE "dos.include.bb2"
00002850 <dos.include.ab3@977> XINCLUDE "dos.include.bb2"
00002870 <dos.include.ab3@978> XINCLUDE "dos.include.bb2"
0000288E <dos.include.ab3@979> XINCLUDE "dos.include.bb2"
000028B2 <dos.include.ab3@980> XINCLUDE "dos.include.bb2"
000028BC <dos.include.ab3@982> XINCLUDE "dos.include.bb2"
000028D8 <dos.include.ab3@983> XINCLUDE "dos.include.bb2"
00002912 <dos.include.ab3@1000> XINCLUDE "dos.include.bb2"
000029C0 <dos.include.ab3@1001> XINCLUDE "dos.include.bb2"
000029F8 <dos.include.ab3@1002> XINCLUDE "dos.include.bb2"
00002A18 <dos.include.ab3@1003> XINCLUDE "dos.include.bb2"
00002A1E <dos.include.ab3@1004> XINCLUDE "dos.include.bb2"
00002A3E <dos.include.ab3@1005> XINCLUDE "dos.include.bb2"
00002A48 <dos.include.ab3@1006> XINCLUDE "dos.include.bb2"
00002A62 <dos.include.ab3@1007> XINCLUDE "dos.include.bb2"
00002A7A <dos.include.ab3@1008> XINCLUDE "dos.include.bb2"
00002A84 <dos.include.ab3@1011> XINCLUDE "dos.include.bb2"
00002AA0 <dos.include.ab3@1012> XINCLUDE "dos.include.bb2"
00002ACA <dos.include.ab3@1147> XINCLUDE "dos.include.bb2"
00002AD8 <dos.include.ab3@1149> XINCLUDE "dos.include.bb2"
00002B9E <dos.include.ab3@1150> XINCLUDE "dos.include.bb2"
00002BC8 <dos.include.ab3@1151> XINCLUDE "dos.include.bb2"
00002BF0 <dos.include.ab3@1153> XINCLUDE "dos.include.bb2"
00002C1A <dos.include.ab3@1154> XINCLUDE "dos.include.bb2"
00002C44 <dos.include.ab3@1156> XINCLUDE "dos.include.bb2"
00002C62 <dos.include.ab3@1157> XINCLUDE "dos.include.bb2"
00002C8C <dos.include.ab3@1175> XINCLUDE "dos.include.bb2"
00002CF8 <dos.include.ab3@1177> XINCLUDE "dos.include.bb2"
00002D20 <dos.include.ab3@1178> XINCLUDE "dos.include.bb2"
00002D2E <dos.include.ab3@1179> XINCLUDE "dos.include.bb2"
00002D62 <dos.include.ab3@1180> XINCLUDE "dos.include.bb2"
00002D70 <dos.include.ab3@1183> XINCLUDE "dos.include.bb2"
00002D92 <dos.include.ab3@1189> XINCLUDE "dos.include.bb2"
00002DA0 <dos.include.ab3@1193> XINCLUDE "dos.include.bb2"
00002DC4 <dos.include.ab3@1194> XINCLUDE "dos.include.bb2"
00002DEE <dos.include.ab3@1195> XINCLUDE "dos.include.bb2"
00002E18 <dos.include.ab3@1198> XINCLUDE "dos.include.bb2"
00002E36 <dos.include.ab3@1199> XINCLUDE "dos.include.bb2"
00002E60 <dos.include.ab3@1260> XINCLUDE "dos.include.bb2"
00002EB8 <dos.include.ab3@1261> XINCLUDE "dos.include.bb2"
00002EE2 <dos.include.ab3@1262> XINCLUDE "dos.include.bb2"
00002F00 <dos.include.ab3@1263> XINCLUDE "dos.include.bb2"
00002F16 <dos.include.ab3@1337> XINCLUDE "dos.include.bb2"
00002F1C <dos.include.ab3@1339> XINCLUDE "dos.include.bb2"
00002F26 <dos.include.ab3@1340> XINCLUDE "dos.include.bb2"
00002F30 <dos.include.ab3@1341> XINCLUDE "dos.include.bb2"
00002F4E <dos.include.ab3@1344> XINCLUDE "dos.include.bb2"
00002F54 <dos.include.ab3@1345> XINCLUDE "dos.include.bb2"
00002F5A <dos.include.ab3@1346> XINCLUDE "dos.include.bb2"
00002F6A <dos.include.ab3@1348> XINCLUDE "dos.include.bb2"
00002F70 <dos.include.ab3@1349> XINCLUDE "dos.include.bb2"
00002F78 <dos.include.ab3@1350> XINCLUDE "dos.include.bb2"
00002FA0 <dos.include.ab3@1351> XINCLUDE "dos.include.bb2"
00002FAA <dos.include.ab3@1352> XINCLUDE "dos.include.bb2"
00002FB4 <dos.include.ab3@1354> XINCLUDE "dos.include.bb2"
00002FC8 <dos.include.ab3@1355> XINCLUDE "dos.include.bb2"
00002FDE <dos.include.ab3@1460> XINCLUDE "dos.include.bb2"
00002FE4 <dos.include.ab3@1466> XINCLUDE "dos.include.bb2"
00003008 <dos.include.ab3@1467> XINCLUDE "dos.include.bb2"
0000302C <dos.include.ab3@1468> XINCLUDE "dos.include.bb2"
00003050 <dos.include.ab3@1469> XINCLUDE "dos.include.bb2"
00003056 <dos.include.ab3@1470> XINCLUDE "dos.include.bb2"
00003082 <dos.include.ab3@1471> XINCLUDE "dos.include.bb2"
00003084 <dos.include.ab3@1472> XINCLUDE "dos.include.bb2"
000030B2 <dos.include.ab3@1473> XINCLUDE "dos.include.bb2"
000030DC <dos.include.ab3@1489> XINCLUDE "dos.include.bb2"
00003160 <dos.include.ab3@1492> XINCLUDE "dos.include.bb2"
00003228 <dos.include.ab3@1493> XINCLUDE "dos.include.bb2"
00003232 <dos.include.ab3@1495> XINCLUDE "dos.include.bb2"
0000327C <dos.include.ab3@1496> XINCLUDE "dos.include.bb2"
000032C8 <dos.include.ab3@1498> XINCLUDE "dos.include.bb2"
00003300 <dos.include.ab3@1499> XINCLUDE "dos.include.bb2"
00003312 <dos.include.ab3@1500> XINCLUDE "dos.include.bb2"
00003328 <dos.include.ab3@1501> XINCLUDE "dos.include.bb2"
0000332E <dos.include.ab3@1502> XINCLUDE "dos.include.bb2"
00003344 <dos.include.ab3@1503> XINCLUDE "dos.include.bb2"
00003378 <dos.include.ab3@1505> XINCLUDE "dos.include.bb2"
0000337E <dos.include.ab3@1506> XINCLUDE "dos.include.bb2"
00003388 <dos.include.ab3@1508> XINCLUDE "dos.include.bb2"
000033A2 <dos.include.ab3@1509> XINCLUDE "dos.include.bb2"
000033EC <dos.include.ab3@1539> XINCLUDE "dos.include.bb2"
00003422 <dos.include.ab3@1541> XINCLUDE "dos.include.bb2"
00003446 <dos.include.ab3@1542> XINCLUDE "dos.include.bb2"
00003450 <dos.include.ab3@1543> XINCLUDE "dos.include.bb2"
00003478 <dos.include.ab3@1544> XINCLUDE "dos.include.bb2"
000034C0 <dos.include.ab3@1547> XINCLUDE "dos.include.bb2"
00003596 <dos.include.ab3@1549> XINCLUDE "dos.include.bb2"
000035C0 <dos.include.ab3@1550> XINCLUDE "dos.include.bb2"
000035E0 <dos.include.ab3@1551> XINCLUDE "dos.include.bb2"
0000361A <dos.include.ab3@1570> XINCLUDE "dos.include.bb2"
00003620 <dos.include.ab3@1572> XINCLUDE "dos.include.bb2"
00003626 <dos.include.ab3@1573> XINCLUDE "dos.include.bb2"
0000362E <dos.include.ab3@1574> XINCLUDE "dos.include.bb2"
00003664 <dos.include.ab3@1575> XINCLUDE "dos.include.bb2"
00003672 <dos.include.ab3@1576> XINCLUDE "dos.include.bb2"
0000367C <dos.include.ab3@1577> XINCLUDE "dos.include.bb2"
000036A8 <dos.include.ab3@1578> XINCLUDE "dos.include.bb2"
000036B6 <dos.include.ab3@1579> XINCLUDE "dos.include.bb2"
000036C0 <dos.include.ab3@1580> XINCLUDE "dos.include.bb2"
000036EE <dos.include.ab3@1582> XINCLUDE "dos.include.bb2"
0000376C <dos.include.ab3@1585> XINCLUDE "dos.include.bb2"
000037BE <dos.include.ab3@1588> XINCLUDE "dos.include.bb2"
000037D0 <dos.include.ab3@1589> XINCLUDE "dos.include.bb2"
0000383E <dos.include.ab3@1590> XINCLUDE "dos.include.bb2"
00003844 <dos.include.ab3@1591> XINCLUDE "dos.include.bb2"
00003890 <dos.include.ab3@1592> XINCLUDE "dos.include.bb2"
0000395E <dos.include.ab3@1596> XINCLUDE "dos.include.bb2"
00003A3E <dos.include.ab3@1597> XINCLUDE "dos.include.bb2"
00003AAA <dos.include.ab3@1599> XINCLUDE "dos.include.bb2"
00003AB0 <dos.include.ab3@1600> XINCLUDE "dos.include.bb2"
00003ACC <dos.include.ab3@1601> XINCLUDE "dos.include.bb2"
00003ADA <dos.include.ab3@1604> XINCLUDE "dos.include.bb2"
00003AE0 <dos.include.ab3@1605> XINCLUDE "dos.include.bb2"
00003AF2 <dos.include.ab3@1608> XINCLUDE "dos.include.bb2"
00003B08 <dos.include.ab3@1609> XINCLUDE "dos.include.bb2"
00003B12 <dos.include.ab3@1610> XINCLUDE "dos.include.bb2"
00003B2E <dos.include.ab3@1611> XINCLUDE "dos.include.bb2"
00003B58 <dos.include.ab3@2199> XINCLUDE "dos.include.bb2"
00003B6C <dos.include.ab3@2200> XINCLUDE "dos.include.bb2"
00003BAA <dos.include.ab3@2201> XINCLUDE "dos.include.bb2"
00003C90 <dos.include.ab3@2202> XINCLUDE "dos.include.bb2"
00003C96 <dos.include.ab3@2203> XINCLUDE "dos.include.bb2"
00003CE6 <dos.include.ab3@2204> XINCLUDE "dos.include.bb2"
00003D10 <dos.include.ab3@2205> XINCLUDE "dos.include.bb2"
00003D2E <dos.include.ab3@2206> XINCLUDE "dos.include.bb2"
00003D58 <dos.include.ab3@2230> XINCLUDE "dos.include.bb2"
00003D6C <dos.include.ab3@2231> XINCLUDE "dos.include.bb2"
00003DAA <dos.include.ab3@2232> XINCLUDE "dos.include.bb2"
00003E90 <dos.include.ab3@2233> XINCLUDE "dos.include.bb2"
00003E96 <dos.include.ab3@2234> XINCLUDE "dos.include.bb2"
00003F08 <dos.include.ab3@2235> XINCLUDE "dos.include.bb2"
00003F32 <dos.include.ab3@2236> XINCLUDE "dos.include.bb2"
00003F50 <dos.include.ab3@2237> XINCLUDE "dos.include.bb2"
00003F8A <dos.include.ab3@2263> XINCLUDE "dos.include.bb2"
00003FC2 <dos.include.ab3@2264> XINCLUDE "dos.include.bb2"
0000401A <dos.include.ab3@2265> XINCLUDE "dos.include.bb2"
0000407E <dos.include.ab3@2266> XINCLUDE "dos.include.bb2"
000040A8 <dos.include.ab3@2268> XINCLUDE "dos.include.bb2"
000040C8 <dos.include.ab3@2269> XINCLUDE "dos.include.bb2"
000040F2 <dos.include.ab3@2286> XINCLUDE "dos.include.bb2"
000040F8 <dos.include.ab3@2287> XINCLUDE "dos.include.bb2"
0000410E <dos.include.ab3@2288> XINCLUDE "dos.include.bb2"
00004118 <dos.include.ab3@2289> XINCLUDE "dos.include.bb2"
0000411E <dos.include.ab3@2290> XINCLUDE "dos.include.bb2"
0000412E <dos.include.ab3@2291> XINCLUDE "dos.include.bb2"
00004138 <dos.include.ab3@2293> XINCLUDE "dos.include.bb2"
00004152 <dos.include.ab3@2294> XINCLUDE "dos.include.bb2"
00004180 <dos.include.ab3@2528> XINCLUDE "dos.include.bb2"
000041A2 <dos.include.ab3@2529> XINCLUDE "dos.include.bb2"
000041AA <dos.include.ab3@2530> XINCLUDE "dos.include.bb2"
000041B8 <dos.include.ab3@2531> XINCLUDE "dos.include.bb2"
000041D2 <dos.include.ab3@2533> XINCLUDE "dos.include.bb2"
00004200 <dos.include.ab3@2552> XINCLUDE "dos.include.bb2"
00004214 <dos.include.ab3@2553> XINCLUDE "dos.include.bb2"
00004248 <dos.include.ab3@2554> XINCLUDE "dos.include.bb2"
00004262 <dos.include.ab3@2556> XINCLUDE "dos.include.bb2"
0000426A <dos.include.ab3@2557> XINCLUDE "dos.include.bb2"
00004278 <dos.include.ab3@2558> XINCLUDE "dos.include.bb2"
00004292 <dos.include.ab3@2560> XINCLUDE "dos.include.bb2"
000042BC <dos.include.ab3@2696> XINCLUDE "dos.include.bb2"
000042C8 <dos.include.ab3@2698> XINCLUDE "dos.include.bb2"
000042E8 <dos.include.ab3@2699> XINCLUDE "dos.include.bb2"
0000430E <dos.include.ab3@2700> XINCLUDE "dos.include.bb2"
0000433A <dos.include.ab3@2701> XINCLUDE "dos.include.bb2"
00004352 <dos.include.ab3@2702> XINCLUDE "dos.include.bb2"
00004360 <dos.include.ab3@2704> XINCLUDE "dos.include.bb2"
00004366 <dos.include.ab3@2705> XINCLUDE "dos.include.bb2"
00004372 <dos.include.ab3@2706> XINCLUDE "dos.include.bb2"
00004378 <dos.include.ab3@2708> XINCLUDE "dos.include.bb2"
00004384 <dos.include.ab3@2709> XINCLUDE "dos.include.bb2"
00004394 <dos.include.ab3@2711> XINCLUDE "dos.include.bb2"
0000439A <dos.include.ab3@2712> XINCLUDE "dos.include.bb2"
000043A6 <dos.include.ab3@2713> XINCLUDE "dos.include.bb2"
000043B0 <dos.include.ab3@2715> XINCLUDE "dos.include.bb2"
000043CA <dos.include.ab3@2716> XINCLUDE "dos.include.bb2"
000043CA <AmiBlitz3.ab2@79> XINCLUDE "dos.include.bb2"
000043D8 <AmiBlitz3.ab2@81> If dos_FromCLI{}
000043DE <AmiBlitz3.ab2@82>   CLIMode.l=True
000043EA <AmiBlitz3.ab2@83>   error_SetFlags{#error_stdout}
000043EA <common.ab3@1> XINCLUDE "/Shared/common.ab3"
00004412 <common.ab3@38> XINCLUDE "/Shared/common.ab3"
00004418 <common.ab3@250> XINCLUDE "/Shared/common.ab3"
0000441A <common.ab3@251> XINCLUDE "/Shared/common.ab3"
000045AA <common.ab3@252> XINCLUDE "/Shared/common.ab3"
000045AE <common.ab3@253> XINCLUDE "/Shared/common.ab3"
000045B2 <common.ab3@255> XINCLUDE "/Shared/common.ab3"
000045B6 <common.ab3@256> XINCLUDE "/Shared/common.ab3"
000045BA <common.ab3@258> XINCLUDE "/Shared/common.ab3"
000045BE <common.ab3@259> XINCLUDE "/Shared/common.ab3"
000045C2 <common.ab3@260> XINCLUDE "/Shared/common.ab3"
000045C6 <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000045CA <common.ab3@262> XINCLUDE "/Shared/common.ab3"
000045CE <common.ab3@263> XINCLUDE "/Shared/common.ab3"
000045D2 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
000045D6 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
000045DA <common.ab3@266> XINCLUDE "/Shared/common.ab3"
000045DE <common.ab3@268> XINCLUDE "/Shared/common.ab3"
000045E2 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000045E6 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000045EA <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000045EE <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000045F2 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000045F6 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000045FA <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000045FE <common.ab3@277> XINCLUDE "/Shared/common.ab3"
00004602 <common.ab3@278> XINCLUDE "/Shared/common.ab3"
00004606 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
0000460E <common.ab3@282> XINCLUDE "/Shared/common.ab3"
00004612 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
00004614 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
00004618 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
0000461A <common.ab3@286> XINCLUDE "/Shared/common.ab3"
0000461E <common.ab3@287> XINCLUDE "/Shared/common.ab3"
00004622 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
00004626 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
0000462A <common.ab3@290> XINCLUDE "/Shared/common.ab3"
0000462E <common.ab3@291> XINCLUDE "/Shared/common.ab3"
00004636 <common.ab3@292> XINCLUDE "/Shared/common.ab3"
0000463E <common.ab3@293> XINCLUDE "/Shared/common.ab3"
00004642 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
00004646 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
0000464A <common.ab3@296> XINCLUDE "/Shared/common.ab3"
0000464C <common.ab3@298> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004754 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004758 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
0000475A <common.ab3@303> XINCLUDE "/Shared/common.ab3"
0000475E <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004760 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004762 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004764 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
00004766 <common.ab3@308> XINCLUDE "/Shared/common.ab3"
00004768 <common.ab3@310> XINCLUDE "/Shared/common.ab3"
0000476A <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000476B <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000476C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000476E <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004770 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004772 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004774 <common.ab3@321> XINCLUDE "/Shared/common.ab3"
00004776 <common.ab3@323> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@325> XINCLUDE "/Shared/common.ab3"
0000477C <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000477E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004780 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004782 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004786 <common.ab3@334> XINCLUDE "/Shared/common.ab3"
00004788 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
0000478A <common.ab3@336> XINCLUDE "/Shared/common.ab3"
0000478E <common.ab3@339> XINCLUDE "/Shared/common.ab3"
00004790 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
00004792 <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004794 <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004796 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004798 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
0000479C <common.ab3@347> XINCLUDE "/Shared/common.ab3"
0000479E <common.ab3@348> XINCLUDE "/Shared/common.ab3"
000047A0 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
000047A2 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
000047A4 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
000047A8 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
000047AA <common.ab3@361> XINCLUDE "/Shared/common.ab3"
000047AC <common.ab3@363> XINCLUDE "/Shared/common.ab3"
000047AE <common.ab3@365> XINCLUDE "/Shared/common.ab3"
000047B0 <common.ab3@366> XINCLUDE "/Shared/common.ab3"
000047B2 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
000047B6 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
000047B8 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
000047BA <common.ab3@370> XINCLUDE "/Shared/common.ab3"
000047BC <common.ab3@371> XINCLUDE "/Shared/common.ab3"
000047BE <common.ab3@372> XINCLUDE "/Shared/common.ab3"
000047C0 <common.ab3@374> XINCLUDE "/Shared/common.ab3"
000047C2 <common.ab3@376> XINCLUDE "/Shared/common.ab3"
000047C4 <common.ab3@378> XINCLUDE "/Shared/common.ab3"
000047C8 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
000047CA <common.ab3@380> XINCLUDE "/Shared/common.ab3"
000047F8 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004802 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
00004806 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
00004808 <common.ab3@385> XINCLUDE "/Shared/common.ab3"
0000480A <common.ab3@386> XINCLUDE "/Shared/common.ab3"
0000480E <common.ab3@387> XINCLUDE "/Shared/common.ab3"
00004812 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
0000481B <common.ab3@389> XINCLUDE "/Shared/common.ab3"
0000481E <common.ab3@390> XINCLUDE "/Shared/common.ab3"
0000484B <common.ab3@391> XINCLUDE "/Shared/common.ab3"
0000488B <common.ab3@392> XINCLUDE "/Shared/common.ab3"
00004897 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048E7 <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048F3 <common.ab3@395> XINCLUDE "/Shared/common.ab3"
00004943 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
00004A3F <common.ab3@397> XINCLUDE "/Shared/common.ab3"
00004A41 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
00004B01 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
00004B41 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004B43 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004B44 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004B48 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004B4C <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004B50 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
00004B54 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004B58 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B5C <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004B60 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004B64 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004B68 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004B6C <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004B70 <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004B74 <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004B78 <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004B7C <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004B80 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004B84 <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004B88 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004B8C <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004B96 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004B9A <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004B9E <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004BA0 <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004BA2 <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004BC0 <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004BC4 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004BC6 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004BCA <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004BFE <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C02 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C10 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C22 <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004C24 <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004C38 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C64 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C7A <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004C90 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004C92 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004C94 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004CA0 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004CB8 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004CD6 <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004CDA <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004CDC <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004CE2 <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004CE6 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004CE8 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004CEC <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004CEE <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004CF4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004CF8 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004CFA <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004CFE <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004D00 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004D0A <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004D0C <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004D10 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004D12 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004D16 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004D18 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004D1C <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004D1E <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004D22 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004D24 <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004D28 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004D2A <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004D52 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004D68 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004D6C <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004D70 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004D78 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004D7C <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004D80 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004D84 <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004D85 <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004D87 <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004DA2 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004DA3 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004DA6 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004DAA <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004DAE <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004DB2 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004DBA <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004DC6 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004DD2 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004DDE <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004DE1 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004DE5 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004DE9 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004DED <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004DF1 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004DF6 <common.ab3@556> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@557> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004E02 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004E07 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004E08 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004E10 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004E12 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004E14 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004E18 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004E1C <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004E24 <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004E28 <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004E2C <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004E30 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004E38 <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004E3C <common.ab3@584> XINCLUDE "/Shared/common.ab3"
00004E40 <common.ab3@585> XINCLUDE "/Shared/common.ab3"
00004E44 <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004E4C <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004E50 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004E54 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004E58 <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004E5C <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004E60 <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004E64 <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004E64 <AmiBlitz3.ab2@86> XINCLUDE "/Shared/common.ab3"
00004E64 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E64 <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E82 <hashmap.include.bb2@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E8A <hashmap.include.bb2@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EB8 <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EE8 <hashmap.include.bb2@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EF8 <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F02 <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F08 <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F2A <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F48 <hashmap.include.bb2@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F5A <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F82 <hashmap.include.bb2@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F88 <hashmap.include.bb2@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FA2 <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FBA <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCC <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.bb2@53> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500E <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
0000501C <hashmap.include.bb2@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00005026 <hashmap.include.bb2@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00005038 <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00005072 <hashmap.include.bb2@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00005082 <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00005088 <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00005098 <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A8 <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B6 <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C6 <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
000050EA <hashmap.include.bb2@68> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F6 <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005104 <hashmap.include.bb2@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005112 <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005120 <hashmap.include.bb2@73> XINCLUDE "/Shared/preprocessor.include.ab3"
0000512E <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005164 <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00005172 <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00005182 <hashmap.include.bb2@77> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518E <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C2 <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051DC <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051FC <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005206 <hashmap.include.bb2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00005212 <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00005226 <hashmap.include.bb2@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00005258 <hashmap.include.bb2@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005270 <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
0000527C <hashmap.include.bb2@92> XINCLUDE "/Shared/preprocessor.include.ab3"
0000528A <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005298 <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A6 <hashmap.include.bb2@95> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B4 <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E8 <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EE <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
0000531C <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00005334 <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005352 <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005366 <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537E <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000053A6 <hashmap.include.bb2@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BE <hashmap.include.bb2@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000053CC <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000053DA <hashmap.include.bb2@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000053E8 <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053FC <hashmap.include.bb2@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00005450 <hashmap.include.bb2@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000547A <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000054BE <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000054DE <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000054F0 <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005514 <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005522 <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
0000557A <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C0 <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C6 <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CE <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F6 <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00005608 <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
0000561A <hashmap.include.bb2@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00005654 <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00005664 <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
0000566A <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000567A <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005680 <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00005686 <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569E <hashmap.include.bb2@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000056DC <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
000056FA <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572C <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00005740 <hashmap.include.bb2@145> XINCLUDE "/Shared/preprocessor.include.ab3"
00005754 <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576C <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005794 <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000579E <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000057AC <hashmap.include.bb2@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000057C4 <hashmap.include.bb2@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000057CA <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000057D2 <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057F2 <hashmap.include.bb2@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00005818 <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005822 <hashmap.include.bb2@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00005830 <hashmap.include.bb2@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583A <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00005866 <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000587A <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00005880 <hashmap.include.bb2@171> XINCLUDE "/Shared/preprocessor.include.ab3"
0000588E <hashmap.include.bb2@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C4 <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00005912 <hashmap.include.bb2@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593A <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00005954 <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005966 <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005970 <hashmap.include.bb2@182> XINCLUDE "/Shared/preprocessor.include.ab3"
0000598C <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000059B2 <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000059D0 <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000059F4 <hashmap.include.bb2@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A0E <hashmap.include.bb2@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A36 <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A54 <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A70 <hashmap.include.bb2@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A7E <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A92 <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AB4 <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD6 <hashmap.include.bb2@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AE4 <hashmap.include.bb2@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AFE <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B2E <hashmap.include.bb2@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B34 <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B62 <hashmap.include.bb2@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA4 <hashmap.include.bb2@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB4 <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BBE <hashmap.include.bb2@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BCE <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD4 <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE0 <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C14 <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C44 <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C7A <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C8E <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CA6 <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCE <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CFE <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1A <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D28 <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D3C <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D90 <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DBA <hashmap.include.bb2@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DFE <hashmap.include.bb2@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E24 <hashmap.include.bb2@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.bb2@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E66 <hashmap.include.bb2@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E84 <hashmap.include.bb2@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E8A <hashmap.include.bb2@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.bb2@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDE <hashmap.include.bb2@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F06 <hashmap.include.bb2@271> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2A <hashmap.include.bb2@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F80 <hashmap.include.bb2@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD2 <hashmap.include.bb2@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00006028 <hashmap.include.bb2@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00006038 <hashmap.include.bb2@280> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608A <hashmap.include.bb2@281> XINCLUDE "/Shared/preprocessor.include.ab3"
000060B2 <hashmap.include.bb2@282> XINCLUDE "/Shared/preprocessor.include.ab3"
000060D8 <hashmap.include.bb2@283> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.bb2@284> XINCLUDE "/Shared/preprocessor.include.ab3"
000060FA <hashmap.include.bb2@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00006122 <hashmap.include.bb2@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00006150 <hashmap.include.bb2@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00006178 <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00006180 <hashmap.include.bb2@291> XINCLUDE "/Shared/preprocessor.include.ab3"
000061A4 <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D8 <hashmap.include.bb2@294> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F4 <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
000061FE <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00006232 <hashmap.include.bb2@298> XINCLUDE "/Shared/preprocessor.include.ab3"
0000624E <hashmap.include.bb2@299> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625C <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
0000626A <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006288 <hashmap.include.bb2@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C6 <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00006322 <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639A <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000063F6 <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
000063FC <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006406 <hashmap.include.bb2@312> XINCLUDE "/Shared/preprocessor.include.ab3"
0000640C <hashmap.include.bb2@313> XINCLUDE "/Shared/preprocessor.include.ab3"
0000643A <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
00006440 <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00006460 <hashmap.include.bb2@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646A <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
0000647C <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000648C <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006496 <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
000064B0 <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
000064CA <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D2 <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D8 <hashmap.include.bb2@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000064E2 <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000064EA <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006568 <hashmap.include.bb2@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658E <hashmap.include.bb2@337> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D8 <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.bb2@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00006628 <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
0000663E <hashmap.include.bb2@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006652 <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000665C <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006680 <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000066B8 <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BE <hashmap.include.bb2@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000066CA <hashmap.include.bb2@351> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DE <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E8 <hashmap.include.bb2@355> XINCLUDE "/Shared/preprocessor.include.ab3"
00006710 <hashmap.include.bb2@356> XINCLUDE "/Shared/preprocessor.include.ab3"
00006738 <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000674A <hashmap.include.bb2@358> XINCLUDE "/Shared/preprocessor.include.ab3"
00006776 <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000067AA <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D6 <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006822 <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006832 <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00006838 <hashmap.include.bb2@366> XINCLUDE "/Shared/preprocessor.include.ab3"
00006844 <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00006872 <hashmap.include.bb2@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00006874 <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687A <hashmap.include.bb2@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00006884 <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000068AE <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B8 <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000068BE <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000068E8 <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F0 <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006910 <hashmap.include.bb2@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000691A <hashmap.include.bb2@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006990 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E4 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A02 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A26 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A40 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A74 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A8E <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE2 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFC <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B0C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B16 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B24 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B96 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BA0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BBC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BCA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C00 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C22 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C40 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C6E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C74 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C84 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C88 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9E <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CF2 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D08 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D18 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D34 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D50 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF8 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E14 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E30 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E68 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E84 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EBC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ED8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF4 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F10 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F2C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F48 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F64 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F80 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9C <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF0 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007028 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007044 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007060 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007098 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EC <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007108 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007124 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007140 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007178 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007194 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E8 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007204 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007220 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007258 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007274 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007290 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E4 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007300 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007338 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007354 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007370 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738C <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E0 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FC <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007418 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007434 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007450 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00007488 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F8 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007514 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007530 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007568 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00007584 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F4 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007610 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007648 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007664 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007680 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769C <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F0 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007728 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007744 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007760 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007798 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EC <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007808 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007824 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007840 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007878 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007894 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E8 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007904 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007920 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007958 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007974 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007990 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E4 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A00 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A38 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A54 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A70 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A8C <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE0 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFC <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B18 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B2A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B34 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B68 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B84 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE2 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BEC <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF6 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C48 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C64 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C72 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CCE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D40 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D4E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D54 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D5C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D62 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D7E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEA <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DFE <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E28 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E50 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E64 <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E86 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E8C <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E94 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9A <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EBC <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC6 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED4 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF2 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F00 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F08 <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0E <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F22 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F2C <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F3A <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F54 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F5A <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F62 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F68 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F7C <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F86 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8E <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA2 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB6 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FCA <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE8 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FF6 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008006 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
0000802E <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008050 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008064 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00008082 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008090 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B6 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DE <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008100 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008130 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
0000815E <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008190 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
0000819E <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A4 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B4 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000081BA <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E0 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008202 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000822A <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000824A <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000826C <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00008272 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00008280 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
0000828E <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00008294 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
0000829C <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000082BA <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CE <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000082DE <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F4 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000830C <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
00008328 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008332 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
0000834E <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008360 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
0000838E <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CA <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000083DA <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E0 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E6 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
000083FE <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000840E <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00008494 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084CE <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008504 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008514 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008522 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00008528 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008538 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008562 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00008568 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
00008594 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A4 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000085B4 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000085D2 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E0 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008616 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863A <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864E <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865E <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867C <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
0000868A <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000086AE <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D2 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E0 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000086EE <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000870E <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000871C <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008722 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00008728 <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008736 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008744 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008764 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008772 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008778 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00008788 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008792 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A6 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000087CC <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
000087EE <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008816 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000881C <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882A <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008830 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008844 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008854 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000886A <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008882 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
0000889E <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A8 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
000088F2 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
0000892E <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
0000893E <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894C <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008952 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008962 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
0000898C <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008992 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BE <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
000089CE <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DE <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
000089FC <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A0A <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A40 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A64 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A78 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A88 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AA6 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AB4 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AD8 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AFC <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B02 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B12 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B18 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3A <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B42 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B78 <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B94 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B9A <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BD0 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BEC <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C14 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C32 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C50 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C7E <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CE0 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CFA <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D14 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D1E <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D5C <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D60 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6A <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D98 <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DB8 <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DD0 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2E <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E5A <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E6C <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E7C <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E94 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9A <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ED4 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EDE <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EE4 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EEE <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F00 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F00 <AmiBlitz3.ab2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F00 <logging.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
00008F00 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
00008F24 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.bb2"
00008F2C <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.bb2"
00008F5A <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.bb2"
00008F88 <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.bb2"
00008FF8 <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.bb2"
00009006 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.bb2"
00009056 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.bb2"
00009056 <logging.include.ab3@7> XINCLUDE "PE/logging.include.bb2"
00009056 <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00009056 <asl.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
0000907A <asl.include.bb2@93> XINCLUDE "PE/logging.include.bb2"
000090A2 <asl.include.bb2@94> XINCLUDE "PE/logging.include.bb2"
000090C6 <asl.include.bb2@95> XINCLUDE "PE/logging.include.bb2"
000090F4 <asl.include.bb2@294> XINCLUDE "PE/logging.include.bb2"
00009312 <asl.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
00009340 <asl.include.bb2@298> XINCLUDE "PE/logging.include.bb2"
0000936C <asl.include.bb2@300> XINCLUDE "PE/logging.include.bb2"
000093A8 <asl.include.bb2@301> XINCLUDE "PE/logging.include.bb2"
000093D4 <asl.include.bb2@302> XINCLUDE "PE/logging.include.bb2"
00009400 <asl.include.bb2@303> XINCLUDE "PE/logging.include.bb2"
0000942C <asl.include.bb2@304> XINCLUDE "PE/logging.include.bb2"
00009458 <asl.include.bb2@305> XINCLUDE "PE/logging.include.bb2"
00009484 <asl.include.bb2@306> XINCLUDE "PE/logging.include.bb2"
000094B0 <asl.include.bb2@307> XINCLUDE "PE/logging.include.bb2"
000094DC <asl.include.bb2@308> XINCLUDE "PE/logging.include.bb2"
00009508 <asl.include.bb2@309> XINCLUDE "PE/logging.include.bb2"
00009592 <asl.include.bb2@311> XINCLUDE "PE/logging.include.bb2"
0000961C <asl.include.bb2@312> XINCLUDE "PE/logging.include.bb2"
000096BA <asl.include.bb2@313> XINCLUDE "PE/logging.include.bb2"
00009704 <asl.include.bb2@314> XINCLUDE "PE/logging.include.bb2"
00009744 <asl.include.bb2@315> XINCLUDE "PE/logging.include.bb2"
0000974A <asl.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
00009794 <asl.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
000097D4 <asl.include.bb2@320> XINCLUDE "PE/logging.include.bb2"
000097FE <asl.include.bb2@321> XINCLUDE "PE/logging.include.bb2"
00009804 <asl.include.bb2@322> XINCLUDE "PE/logging.include.bb2"
0000982E <asl.include.bb2@323> XINCLUDE "PE/logging.include.bb2"
00009858 <asl.include.bb2@325> XINCLUDE "PE/logging.include.bb2"
00009882 <asl.include.bb2@327> XINCLUDE "PE/logging.include.bb2"
0000988C <asl.include.bb2@328> XINCLUDE "PE/logging.include.bb2"
000098AA <asl.include.bb2@329> XINCLUDE "PE/logging.include.bb2"
000098CC <asl.include.bb2@330> XINCLUDE "PE/logging.include.bb2"
000098FA <asl.include.bb2@331> XINCLUDE "PE/logging.include.bb2"
00009928 <asl.include.bb2@332> XINCLUDE "PE/logging.include.bb2"
00009956 <asl.include.bb2@333> XINCLUDE "PE/logging.include.bb2"
0000999C <asl.include.bb2@336> XINCLUDE "PE/logging.include.bb2"
000099E2 <asl.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
00009A28 <asl.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
00009A60 <asl.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
00009B5E <asl.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
00009B7C <asl.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
00009B86 <asl.include.bb2@345> XINCLUDE "PE/logging.include.bb2"
00009BAC <asl.include.bb2@346> XINCLUDE "PE/logging.include.bb2"
00009BBE <asl.include.bb2@348> XINCLUDE "PE/logging.include.bb2"
00009BEC <asl.include.bb2@349> XINCLUDE "PE/logging.include.bb2"
00009C14 <asl.include.bb2@350> XINCLUDE "PE/logging.include.bb2"
00009C26 <asl.include.bb2@351> XINCLUDE "PE/logging.include.bb2"
00009C7C <asl.include.bb2@352> XINCLUDE "PE/logging.include.bb2"
00009CB2 <asl.include.bb2@353> XINCLUDE "PE/logging.include.bb2"
00009CC2 <asl.include.bb2@355> XINCLUDE "PE/logging.include.bb2"
00009CC8 <asl.include.bb2@356> XINCLUDE "PE/logging.include.bb2"
00009CDA <asl.include.bb2@357> XINCLUDE "PE/logging.include.bb2"
00009CE4 <asl.include.bb2@358> XINCLUDE "PE/logging.include.bb2"
00009D1E <asl.include.bb2@359> XINCLUDE "PE/logging.include.bb2"
00009D24 <asl.include.bb2@360> XINCLUDE "PE/logging.include.bb2"
00009D7C <asl.include.bb2@361> XINCLUDE "PE/logging.include.bb2"
00009D9A <asl.include.bb2@363> XINCLUDE "PE/logging.include.bb2"
00009DA0 <asl.include.bb2@366> XINCLUDE "PE/logging.include.bb2"
00009DB0 <asl.include.bb2@369> XINCLUDE "PE/logging.include.bb2"
00009DC0 <asl.include.bb2@370> XINCLUDE "PE/logging.include.bb2"
00009DD0 <asl.include.bb2@371> XINCLUDE "PE/logging.include.bb2"
00009DE0 <asl.include.bb2@372> XINCLUDE "PE/logging.include.bb2"
00009DF0 <asl.include.bb2@374> XINCLUDE "PE/logging.include.bb2"
00009DFA <asl.include.bb2@376> XINCLUDE "PE/logging.include.bb2"
00009E0E <asl.include.bb2@377> XINCLUDE "PE/logging.include.bb2"
00009E24 <asl.include.bb2@393> XINCLUDE "PE/logging.include.bb2"
00009E4C <asl.include.bb2@395> XINCLUDE "PE/logging.include.bb2"
00009E56 <asl.include.bb2@396> XINCLUDE "PE/logging.include.bb2"
00009E68 <asl.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
00009EA2 <asl.include.bb2@398> XINCLUDE "PE/logging.include.bb2"
00009EAC <asl.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
00009ED6 <asl.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
00009EEE <asl.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
00009F40 <asl.include.bb2@438> XINCLUDE "PE/logging.include.bb2"
00009F6E <asl.include.bb2@440> XINCLUDE "PE/logging.include.bb2"
0000A000 <asl.include.bb2@441> XINCLUDE "PE/logging.include.bb2"
0000A046 <asl.include.bb2@442> XINCLUDE "PE/logging.include.bb2"
0000A0D8 <asl.include.bb2@443> XINCLUDE "PE/logging.include.bb2"
0000A0F2 <asl.include.bb2@444> XINCLUDE "PE/logging.include.bb2"
0000A0F2 <file.include.bb2@57> XINCLUDE "PE/logging.include.bb2"
0000A108 <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
0000A11E <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
0000A134 <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
0000A14A <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
0000A156 <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
0000A162 <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
0000A16E <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
0000A17A <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
0000A1A2 <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
0000A1CA <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
0000A1F2 <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
0000A216 <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
0000A23A <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
0000A254 <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
0000A264 <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
0000A266 <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
0000A268 <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
0000A26A <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
0000A26C <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
0000A26E <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
0000A272 <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
0000A276 <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
0000A27A <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
0000A27C <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
0000A27E <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
0000A280 <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
0000A282 <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
0000A284 <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
0000A286 <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
0000A288 <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
0000A292 <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
0000A298 <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
0000A2B2 <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
0000A2D0 <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
0000A2D6 <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
0000A2F0 <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
0000A30C <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
0000A332 <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
0000A352 <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
0000A35C <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
0000A388 <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
0000A3AA <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
0000A3C4 <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
0000A3CA <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
0000A404 <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
0000A422 <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
0000A428 <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
0000A446 <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
0000A44C <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
0000A46E <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
0000A48E <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
0000A4C6 <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
0000A4E2 <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
0000A4E8 <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
0000A4EE <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
0000A4F4 <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
0000A4FA <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
0000A516 <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
0000A562 <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
0000A568 <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
0000A5A2 <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
0000A5AE <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
0000A5CA <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
0000A5D0 <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
0000A60A <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
0000A614 <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0000A61A <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
0000A638 <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
0000A666 <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
0000A66C <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0000A682 <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
0000A68A <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
0000A6E6 <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
0000A6F4 <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
0000A6FA <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
0000A72C <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
0000A736 <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
0000A73C <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
0000A756 <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
0000A768 <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
0000A7C6 <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
0000A800 <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
0000A83A <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
0000A858 <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
0000A876 <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
0000A88C <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
0000A8A8 <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
0000A8C2 <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
0000A940 <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
0000A952 <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
0000A968 <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
0000A992 <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
0000A99C <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
0000A9AC <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
0000A9B0 <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
0000A9DE <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
0000A9F8 <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
0000AA0A <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
0000AA2A <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
0000AA40 <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
0000AA78 <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
0000AAA2 <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
0000AACC <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
0000AAE4 <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
0000AAFA <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
0000AB42 <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
0000AB62 <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
0000AB6A <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
0000ABA8 <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
0000ABB4 <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
0000ABBE <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
0000ABD0 <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
0000ABD6 <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
0000ABE4 <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
0000AC0C <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
0000AC20 <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
0000AC48 <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
0000AC5C <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
0000AC84 <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
0000AC98 <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
0000ACC0 <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
0000ACC2 <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
0000ACE6 <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
0000AD1E <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
0000ADA8 <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
0000ADD0 <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
0000AE00 <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
0000AE38 <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
0000AE90 <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
0000AEE8 <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
0000AF68 <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
0000AF9C <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
0000AFD0 <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
0000AFD6 <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
0000AFE4 <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
0000B018 <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
0000B040 <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
0000B0F8 <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
0000B178 <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
0000B1AC <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
0000B1CC <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
0000B1D2 <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
0000B1D8 <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
0000B2A8 <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
0000B2BC <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
0000B374 <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
0000B3F4 <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
0000B4E4 <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
0000B4EE <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
0000B522 <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
0000B542 <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
0000B548 <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
0000B54E <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
0000B61E <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
0000B632 <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
0000B666 <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
0000B68E <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
0000B746 <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
0000B7C6 <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
0000B7FA <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
0000B81A <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
0000B820 <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
0000B826 <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
0000B8F6 <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
0000B90A <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
0000B9C2 <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
0000BA42 <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
0000BA76 <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
0000BA96 <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
0000BA9C <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
0000BAA2 <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
0000BB72 <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
0000BB78 <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
0000BBB2 <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
0000BBB4 <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
0000BBBA <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
0000BC52 <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
0000BC64 <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
0000BC7A <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
0000BCE4 <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
0000BD4E <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
0000BD68 <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
0000BD84 <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
0000BDA2 <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
0000BDBC <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
0000BDC6 <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
0000BDE2 <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
0000BE04 <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
0000BE0A <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
0000BE30 <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
0000BE4C <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
0000BE5E <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
0000BEBC <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
0000BEF4 <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
0000BEFA <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
0000BF42 <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
0000BF5C <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
0000BF6A <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
0000BF70 <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
0000BF76 <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
0000BF88 <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
0000C074 <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
0000C07A <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
0000C0C0 <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
0000C0CC <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
0000C132 <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
0000C178 <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
0000C1C0 <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
0000C228 <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
0000C22E <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
0000C268 <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
0000C26E <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
0000C2D0 <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
0000C2DA <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
0000C2EE <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
0000C308 <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
0000C30E <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
0000C334 <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
0000C350 <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
0000C3AE <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
0000C3B2 <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
0000C3D4 <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
0000C3DA <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
0000C3F6 <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
0000C416 <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
0000C454 <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
0000C4A2 <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
0000C4D8 <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
0000C4DE <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
0000C4E4 <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
0000C514 <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
0000C51A <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
0000C520 <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
0000C532 <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
0000C590 <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
0000C5C8 <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
0000C5CE <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
0000C616 <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
0000C630 <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
0000C63E <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
0000C644 <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
0000C64A <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
0000C65C <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
0000C662 <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
0000C668 <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
0000C6C6 <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
0000C70E <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
0000C718 <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
0000C71E <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
0000C738 <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
0000C73E <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
0000C786 <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
0000C7C4 <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
0000C7CE <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
0000C7D4 <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
0000C7FA <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
0000C800 <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
0000C826 <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
0000C886 <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
0000C8A0 <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
0000C8AA <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
0000C8C4 <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
0000C8CE <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
0000C8E6 <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
0000C916 <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
0000C932 <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
0000C940 <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
0000C946 <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
0000C980 <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
0000C98A <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
0000C990 <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
0000C9AE <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
0000C9B4 <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
0000C9C6 <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
0000C9D4 <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
0000C9F2 <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
0000CA28 <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
0000CA3A <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
0000CA84 <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
0000CB6E <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
0000CB8C <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
0000CBB2 <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
0000CBCE <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
0000CBFA <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
0000CC04 <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
0000CC32 <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
0000CC4C <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
0000CC68 <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
0000CC6E <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
0000CCA8 <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
0000CCAE <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
0000CCB4 <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
0000CCBA <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
0000CD5A <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
0000CD60 <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
0000CE02 <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
0000CE08 <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
0000CE42 <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
0000CE4C <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
0000CE52 <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
0000CE6C <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
0000CE8A <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
0000CE90 <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
0000CEAA <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
0000CECA <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
0000CF7E <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
0000CF84 <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
0000CF8A <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
0000CFB4 <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
0000CFC0 <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
0000CFC6 <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
0000CFE0 <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
0000CFE8 <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
0000CFF0 <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
0000D006 <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
0000D01E <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
0000D030 <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
0000D03C <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
0000D042 <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
0000D04A <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
0000D082 <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
0000D094 <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
0000D0B8 <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
0000D0CA <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
0000D0D6 <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
0000D0DC <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
0000D0EC <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
0000D10A <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
0000D11C <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
0000D168 <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
0000D16E <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
0000D198 <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
0000D1B0 <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
0000D1DE <file.include.bb2@1706> XINCLUDE "PE/logging.include.bb2"
0000D1F2 <file.include.bb2@1707> XINCLUDE "PE/logging.include.bb2"
0000D208 <file.include.bb2@1708> XINCLUDE "PE/logging.include.bb2"
0000D228 <file.include.bb2@1709> XINCLUDE "PE/logging.include.bb2"
0000D23E <file.include.bb2@1710> XINCLUDE "PE/logging.include.bb2"
0000D248 <file.include.bb2@1711> XINCLUDE "PE/logging.include.bb2"
0000D262 <file.include.bb2@1712> XINCLUDE "PE/logging.include.bb2"
0000D284 <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
0000D29C <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0000D2BE <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
0000D2C4 <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
0000D2F6 <file.include.bb2@1811> XINCLUDE "PE/logging.include.bb2"
0000D30A <file.include.bb2@1813> XINCLUDE "PE/logging.include.bb2"
0000D322 <file.include.bb2@1814> XINCLUDE "PE/logging.include.bb2"
0000D33A <file.include.bb2@1815> XINCLUDE "PE/logging.include.bb2"
0000D35A <file.include.bb2@1816> XINCLUDE "PE/logging.include.bb2"
0000D38A <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
0000D3BA <file.include.bb2@1818> XINCLUDE "PE/logging.include.bb2"
0000D3CC <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
0000D3D4 <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
0000D3FE <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
0000D408 <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
0000D422 <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
0000D43C <file.include.bb2@1841> XINCLUDE "PE/logging.include.bb2"
0000D45A <file.include.bb2@1843> XINCLUDE "PE/logging.include.bb2"
0000D47A <file.include.bb2@1844> XINCLUDE "PE/logging.include.bb2"
0000D4C4 <file.include.bb2@1845> XINCLUDE "PE/logging.include.bb2"
0000D4DE <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0000D4F0 <file.include.bb2@1847> XINCLUDE "PE/logging.include.bb2"
0000D526 <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
0000D538 <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
0000D540 <file.include.bb2@1850> XINCLUDE "PE/logging.include.bb2"
0000D568 <file.include.bb2@1851> XINCLUDE "PE/logging.include.bb2"
0000D56E <file.include.bb2@1853> XINCLUDE "PE/logging.include.bb2"
0000D596 <file.include.bb2@1854> XINCLUDE "PE/logging.include.bb2"
0000D5A6 <file.include.bb2@1856> XINCLUDE "PE/logging.include.bb2"
0000D5BA <file.include.bb2@1857> XINCLUDE "PE/logging.include.bb2"
0000D5D0 <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
0000D5E0 <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
0000D5E4 <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
0000D5FA <file.include.bb2@1894> XINCLUDE "PE/logging.include.bb2"
0000D624 <file.include.bb2@1896> XINCLUDE "PE/logging.include.bb2"
0000D62C <file.include.bb2@1897> XINCLUDE "PE/logging.include.bb2"
0000D62C <logging.include.ab3@9> XINCLUDE "PE/logging.include.bb2"
0000D6CA <logging.include.ab3@31> XINCLUDE "PE/logging.include.bb2"
0000D6D0 <logging.include.ab3@32> XINCLUDE "PE/logging.include.bb2"
0000D6D6 <logging.include.ab3@33> XINCLUDE "PE/logging.include.bb2"
0000D6DC <logging.include.ab3@34> XINCLUDE "PE/logging.include.bb2"
0000D716 <logging.include.ab3@125> XINCLUDE "PE/logging.include.bb2"
0000D748 <logging.include.ab3@127> XINCLUDE "PE/logging.include.bb2"
0000D756 <logging.include.ab3@128> XINCLUDE "PE/logging.include.bb2"
0000D786 <logging.include.ab3@129> XINCLUDE "PE/logging.include.bb2"
0000DAF6 <logging.include.ab3@130> XINCLUDE "PE/logging.include.bb2"
0000DB04 <logging.include.ab3@131> XINCLUDE "PE/logging.include.bb2"
0000DB0A <logging.include.ab3@132> XINCLUDE "PE/logging.include.bb2"
0000DD9C <logging.include.ab3@133> XINCLUDE "PE/logging.include.bb2"
0000DDB6 <logging.include.ab3@135> XINCLUDE "PE/logging.include.bb2"
0000DDF0 <logging.include.ab3@138> XINCLUDE "PE/logging.include.bb2"
0000DE42 <logging.include.ab3@139> XINCLUDE "PE/logging.include.bb2"
0000DE50 <logging.include.ab3@140> XINCLUDE "PE/logging.include.bb2"
0000DEA6 <logging.include.ab3@141> XINCLUDE "PE/logging.include.bb2"
0000DEAC <logging.include.ab3@142> XINCLUDE "PE/logging.include.bb2"
0000DF26 <logging.include.ab3@143> XINCLUDE "PE/logging.include.bb2"
0000DF9A <logging.include.ab3@144> XINCLUDE "PE/logging.include.bb2"
0000DFB4 <logging.include.ab3@146> XINCLUDE "PE/logging.include.bb2"
0000DFB4 <AmiBlitz3.ab2@89> XINCLUDE "PE/logging.include.bb2"
0000DFC0 <AmiBlitz3.ab2@90> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
0000DFC0 <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DFC0 <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DFC0 <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DFC0 <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DFE8 <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
0000E002 <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
0000E00C <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
0000E01E <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
0000E042 <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
0000E050 <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
0000E05C <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
0000E060 <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
0000E07E <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
0000E098 <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E0B8 <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E0C2 <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E0D0 <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E0DC <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E0EA <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
0000E0F6 <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E102 <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
0000E114 <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
0000E124 <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
0000E12E <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
0000E134 <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
0000E14E <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
0000E158 <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
0000E162 <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
0000E172 <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
0000E17C <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
0000E18E <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
0000E1A4 <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
0000E1AE <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
0000E1B4 <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
0000E1B8 <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
0000E1CE <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
0000E1D4 <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
0000E1DE <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
0000E214 <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
0000E21E <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
0000E222 <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
0000E250 <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
0000E250 <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
0000E26A <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
0000E274 <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E29C <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E2BE <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E2DA <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E2EA <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E2EE <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E308 <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
0000E328 <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
0000E332 <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
0000E34C <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
0000E35A <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
0000E368 <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
0000E376 <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
0000E384 <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
0000E390 <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
0000E39E <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
0000E3AC <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
0000E3BA <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
0000E3C8 <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
0000E3E2 <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
0000E3F0 <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
0000E400 <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
0000E410 <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
0000E420 <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
0000E42E <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
0000E438 <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
0000E43E <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
0000E45C <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
0000E462 <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
0000E46C <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
0000E48C <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
0000E4BA <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
0000E4D8 <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
0000E4E2 <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
0000E4F4 <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
0000E520 <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
0000E536 <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
0000E542 <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
0000E54E <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
0000E554 <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
0000E55A <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
0000E560 <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
0000E566 <prefixtree.include.bb2@179> XINCLUDE "translation.include.bb2"
0000E56C <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
0000E576 <prefixtree.include.bb2@183> XINCLUDE "translation.include.bb2"
0000E57C <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
0000E5AE <prefixtree.include.bb2@204> XINCLUDE "translation.include.bb2"
0000E5C8 <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
0000E5E0 <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
0000E5F4 <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
0000E644 <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
0000E664 <prefixtree.include.bb2@210> XINCLUDE "translation.include.bb2"
0000E678 <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
0000E686 <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
0000E692 <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
0000E69A <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
0000E6A2 <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
0000E6AA <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
0000E6B2 <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
0000E6B8 <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
0000E6C6 <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
0000E6E8 <prefixtree.include.bb2@221> XINCLUDE "translation.include.bb2"
0000E714 <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
0000E726 <prefixtree.include.bb2@224> XINCLUDE "translation.include.bb2"
0000E72C <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
0000E754 <prefixtree.include.bb2@227> XINCLUDE "translation.include.bb2"
0000E778 <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
0000E7A0 <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
0000E7D4 <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
0000E7E4 <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
0000E7EE <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
0000E7FC <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
0000E810 <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
0000E816 <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
0000E836 <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
0000E83C <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
0000E844 <prefixtree.include.bb2@239> XINCLUDE "translation.include.bb2"
0000E87E <prefixtree.include.bb2@241> XINCLUDE "translation.include.bb2"
0000E8A4 <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
0000E8BC <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
0000E8F0 <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
0000E8F8 <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
0000E906 <prefixtree.include.bb2@247> XINCLUDE "translation.include.bb2"
0000E90C <prefixtree.include.bb2@249> XINCLUDE "translation.include.bb2"
0000E924 <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
0000E92A <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
0000E930 <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
0000E94A <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
0000E950 <prefixtree.include.bb2@256> XINCLUDE "translation.include.bb2"
0000E956 <prefixtree.include.bb2@258> XINCLUDE "translation.include.bb2"
0000E95C <prefixtree.include.bb2@260> XINCLUDE "translation.include.bb2"
0000E96A <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
0000E978 <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
0000E9B2 <prefixtree.include.bb2@264> XINCLUDE "translation.include.bb2"
0000E9D8 <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
0000E9F0 <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
0000E9FC <prefixtree.include.bb2@269> XINCLUDE "translation.include.bb2"
0000EA08 <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
0000EA14 <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
0000EA20 <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
0000EA2C <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
0000EA36 <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
0000EA3E <prefixtree.include.bb2@276> XINCLUDE "translation.include.bb2"
0000EA58 <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
0000EA96 <prefixtree.include.bb2@324> XINCLUDE "translation.include.bb2"
0000EA9C <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
0000EADC <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
0000EB32 <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
0000EBA4 <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
0000EBB0 <prefixtree.include.bb2@330> XINCLUDE "translation.include.bb2"
0000EBBE <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
0000EC04 <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
0000EC4E <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
0000EC86 <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
0000ECDA <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
0000ECE0 <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
0000ECE6 <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
0000ECF4 <prefixtree.include.bb2@339> XINCLUDE "translation.include.bb2"
0000ECFC <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
0000ED36 <prefixtree.include.bb2@342> XINCLUDE "translation.include.bb2"
0000ED5C <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
0000ED74 <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
0000EDAA <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
0000EDC0 <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
0000EDCE <prefixtree.include.bb2@348> XINCLUDE "translation.include.bb2"
0000EDE6 <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
0000EE1E <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
0000EE44 <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
0000EE8C <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
0000EE92 <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
0000EEAC <prefixtree.include.bb2@355> XINCLUDE "translation.include.bb2"
0000EEB8 <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
0000EEBE <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
0000EEEA <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
0000EEFE <prefixtree.include.bb2@363> XINCLUDE "translation.include.bb2"
0000EF0C <prefixtree.include.bb2@365> XINCLUDE "translation.include.bb2"
0000EF14 <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
0000EF4E <prefixtree.include.bb2@368> XINCLUDE "translation.include.bb2"
0000EF74 <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
0000EF8C <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
0000EFC6 <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
0000EFF0 <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
0000F008 <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
0000F038 <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
0000F064 <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
0000F080 <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
0000F08E <prefixtree.include.bb2@378> XINCLUDE "translation.include.bb2"
0000F09C <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
0000F0DA <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
0000F116 <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
0000F182 <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
0000F1B0 <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
0000F1DE <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
0000F226 <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
0000F240 <prefixtree.include.bb2@388> XINCLUDE "translation.include.bb2"
0000F288 <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
0000F2A6 <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
0000F2C4 <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
0000F2DE <prefixtree.include.bb2@394> XINCLUDE "translation.include.bb2"
0000F2EA <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
0000F2F0 <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
0000F31C <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
0000F334 <prefixtree.include.bb2@399> XINCLUDE "translation.include.bb2"
0000F33A <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
0000F34E <prefixtree.include.bb2@403> XINCLUDE "translation.include.bb2"
0000F35C <prefixtree.include.bb2@405> XINCLUDE "translation.include.bb2"
0000F36A <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
0000F378 <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
0000F380 <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
0000F3A4 <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
0000F3CC <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
0000F3F4 <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
0000F460 <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
0000F470 <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
0000F49C <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
0000F4F2 <prefixtree.include.bb2@416> XINCLUDE "translation.include.bb2"
0000F500 <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
0000F50E <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
0000F514 <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
0000F568 <prefixtree.include.bb2@421> XINCLUDE "translation.include.bb2"
0000F5B8 <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
0000F608 <prefixtree.include.bb2@425> XINCLUDE "translation.include.bb2"
0000F65E <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
0000F6CA <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
0000F6D2 <prefixtree.include.bb2@431> XINCLUDE "translation.include.bb2"
0000F70C <prefixtree.include.bb2@433> XINCLUDE "translation.include.bb2"
0000F732 <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
0000F74A <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
0000F784 <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
0000F7AE <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
0000F7C6 <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
0000F7EA <prefixtree.include.bb2@440> XINCLUDE "translation.include.bb2"
0000F83E <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
0000F846 <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
0000F84C <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
0000F8AE <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
0000F8DA <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
0000F8F6 <prefixtree.include.bb2@448> XINCLUDE "translation.include.bb2"
0000F904 <prefixtree.include.bb2@450> XINCLUDE "translation.include.bb2"
0000F912 <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
0000F920 <prefixtree.include.bb2@453> XINCLUDE "translation.include.bb2"
0000F92E <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
0000F972 <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
0000F9DE <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
0000FA0C <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
0000FA20 <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
0000FA52 <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
0000FA9C <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
0000FAAC <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
0000FAE0 <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
0000FB02 <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
0000FB12 <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
0000FB1A <prefixtree.include.bb2@467> XINCLUDE "translation.include.bb2"
0000FB5E <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
0000FBCA <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
0000FBF8 <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
0000FC1C <prefixtree.include.bb2@472> XINCLUDE "translation.include.bb2"
0000FC60 <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
0000FCCC <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
0000FCFA <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
0000FD28 <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
0000FD30 <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
0000FD5E <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
0000FDD0 <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
0000FDD6 <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
0000FE04 <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
0000FE76 <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
0000FE94 <prefixtree.include.bb2@485> XINCLUDE "translation.include.bb2"
0000FEB8 <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
0000FED0 <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
0000FED6 <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
0000FEDC <prefixtree.include.bb2@491> XINCLUDE "translation.include.bb2"
0000FEDE <prefixtree.include.bb2@493> XINCLUDE "translation.include.bb2"
0000FEE8 <prefixtree.include.bb2@496> XINCLUDE "translation.include.bb2"
0000FF14 <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
0000FF36 <prefixtree.include.bb2@515> XINCLUDE "translation.include.bb2"
0000FF3E <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
0000FF44 <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
0000FF52 <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
0000FF8C <prefixtree.include.bb2@520> XINCLUDE "translation.include.bb2"
0000FFB2 <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
0000FFCA <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
00010004 <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
0001002E <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
00010046 <prefixtree.include.bb2@526> XINCLUDE "translation.include.bb2"
0001005E <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
00010096 <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
0001009E <prefixtree.include.bb2@530> XINCLUDE "translation.include.bb2"
000100D8 <prefixtree.include.bb2@532> XINCLUDE "translation.include.bb2"
000100EA <prefixtree.include.bb2@534> XINCLUDE "translation.include.bb2"
00010110 <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
00010126 <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
0001014C <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
00010160 <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
00010178 <prefixtree.include.bb2@540> XINCLUDE "translation.include.bb2"
0001018A <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
00010194 <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
000101A8 <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
000101C2 <prefixtree.include.bb2@560> XINCLUDE "translation.include.bb2"
000101E0 <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
000101F2 <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
00010210 <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
00010232 <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
0001024E <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
0001026E <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
00010278 <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
0001027E <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
00010288 <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
00010294 <prefixtree.include.bb2@571> XINCLUDE "translation.include.bb2"
0001029A <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
000102C8 <prefixtree.include.bb2@591> XINCLUDE "translation.include.bb2"
000102F0 <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
00010330 <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
00010348 <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
0001038E <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
000103B8 <prefixtree.include.bb2@598> XINCLUDE "translation.include.bb2"
000103E6 <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
00010400 <prefixtree.include.bb2@815> XINCLUDE "translation.include.bb2"
00010408 <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
00010420 <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
0001042A <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
0001043C <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
00010474 <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
00010482 <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
0001048E <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
000104AA <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
000104CC <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
000104EE <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
00010510 <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
00010532 <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
0001054E <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
0001056C <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
00010580 <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
00010586 <prefixtree.include.bb2@832> XINCLUDE "translation.include.bb2"
00010588 <prefixtree.include.bb2@834> XINCLUDE "translation.include.bb2"
0001058E <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
00010598 <prefixtree.include.bb2@837> XINCLUDE "translation.include.bb2"
0001059E <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
000105BC <prefixtree.include.bb2@856> XINCLUDE "translation.include.bb2"
000105C2 <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
000105E6 <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
00010604 <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
00010632 <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
00010660 <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
0001068E <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
000106BC <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
000106F0 <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
00010700 <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
0001070A <prefixtree.include.bb2@867> XINCLUDE "translation.include.bb2"
00010710 <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
00010710 <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
0001075A <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
0001077A <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
00010784 <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
00010798 <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
000107DE <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
00010824 <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
0001086A <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
00010874 <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
00010890 <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
000108BA <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
00010938 <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
000109B6 <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
00010A34 <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
00010AB2 <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
00010B30 <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
00010BAE <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
00010C2C <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
00010CAA <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
00010D28 <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
00010DA6 <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
00010E2A <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
00010E5A <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
00010EB6 <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
00010EE2 <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
00010FAC <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
00010FBA <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
00010FF8 <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
0001107C <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
000110A6 <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
000110C4 <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
000110DE <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
000110E8 <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
000110F4 <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
00011104 <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
00011114 <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
00011124 <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
00011134 <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
00011138 <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
00011176 <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
000111CE <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
0001122A <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
000112B4 <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
00011332 <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
0001134C <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
0001137A <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
000113B6 <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
00011484 <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
00011552 <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
0001159E <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
0001161C <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
0001169A <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
000116F8 <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
0001178E <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
000117C6 <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
00011824 <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
000118AC <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
000118B4 <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
0001191E <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
0001198A <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
000119C8 <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
00011A50 <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00011A7C <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00011AD8 <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00011BA0 <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00011C04 <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00011C0A <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00011C3E <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00011D0C <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
00011DDA <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
00011E04 <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
00011E22 <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
00011E50 <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
00011E8C <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
00011EFC <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
00011F04 <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
00011F56 <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
00011F7E <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
00011F96 <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
0001204A <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
00012058 <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
000120AE <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
0001210C <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
00012112 <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
00012196 <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
0001221A <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
0001229E <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
0001231C <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
0001239A <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
00012418 <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
00012496 <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
00012514 <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
00012592 <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
00012610 <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
0001263A <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
00012658 <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
00012686 <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
000126CA <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
000126D0 <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
000126EA <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
00012706 <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
0001273A <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
0001275E <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
00012786 <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
000127F2 <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
00012850 <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
000128AE <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
000128FA <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
00012954 <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
0001295A <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
00012960 <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
0001296A <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
00012974 <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
0001298E <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
000129BC <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
000129C2 <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
00012A06 <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
00012A20 <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
00012A30 <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
00012A3A <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
00012A46 <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
00012A50 <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
00012A74 <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
00012ABC <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
00012B04 <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
00012B4C <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
00012B62 <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
00012B76 <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
00012B80 <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
00012B8A <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
00012BA4 <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
00012BCE <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
00012C12 <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
00012C2C <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
00012C8A <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
00012CA4 <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
00012CBC <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
00012CC6 <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
00012CE2 <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
00012CF0 <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
00012CFC <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
00012D48 <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
00012D9A <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
00012DEC <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
00012E00 <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
00012E10 <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
00012E16 <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
00012E18 <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
00012E1E <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
00012E28 <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
00012E32 <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
00012E4C <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
00012E76 <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
00012E8C <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
00012E96 <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
00012F0E <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
00012F4A <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
00012F5A <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
00012F7A <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
00012F9A <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
00012FBA <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
00012FF0 <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
00013018 <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
00013050 <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
000130B4 <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
000130D4 <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
00013150 <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
00013188 <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
000131FE <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
0001321E <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
0001329A <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
000132D2 <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
00013348 <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
00013368 <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
000133E4 <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
00013410 <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
00013418 <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
0001345E <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
0001347E <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
00013488 <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
000134A0 <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
000134B0 <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
000134E8 <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
0001351A <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
0001352C <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
000135AE <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
000135B8 <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
000135EA <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
0001361C <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
00013648 <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
00013674 <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
00013696 <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
000136A0 <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
000136BA <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
000136BA <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
000136D0 <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
000136EC <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
000136EE <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
0001371C <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
0001371C <AmiBlitz3.ab2@93> XINCLUDE "translation.include.bb2"
0001371C <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
00013736 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
00013740 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013762 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
0001377A <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013794 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
000137C6 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
000137D0 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
000137D6 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
000137E8 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
0001385C <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013862 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
0001389C <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
000138A6 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
000138AC <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
000138C2 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
000138CC <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
000138E4 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
000138E6 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013914 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
0001392E <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013944 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013978 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
0001397C <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013996 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
000139AC <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
000139E0 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
000139E4 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
000139FE <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013A14 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013A48 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013A4C <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013A66 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013A7C <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013AB0 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013AB4 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013ACE <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013AE4 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013B18 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013B1C <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013B1C <AmiBlitz3.ab2@94> XINCLUDE "/Shared/ted.include.ab3"
00013B1C <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013B32 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013B48 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013B56 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013B64 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013B6E <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013B80 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013B92 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013B98 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013BD2 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013BD6 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013BEC <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013C02 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013C0E <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013C1A <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013C22 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013C2A <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013C2E <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013C58 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013C84 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013C96 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013CAE <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013CC4 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013CCA <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013D00 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013D38 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013D70 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013DA8 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013DE0 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013E18 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013E50 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00013E88 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00013EC0 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00013EF8 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
00013F30 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00013F68 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00013FA0 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00013FAA <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00013FB4 <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00013FBE <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00013FE8 <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
00013FF2 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
00013FF6 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
0001402A <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014030 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
0001406A <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00014070 <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
00014086 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014090 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014096 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
000140AC <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
000140B2 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000140F0 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000140F4 <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
000140FE <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
00014100 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
00014134 <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
00014144 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
0001414E <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
00014154 <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
0001416A <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000141A8 <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
000141AC <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
000141B4 <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000141F2 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
000141F4 <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000141F8 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
00014236 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
0001423A <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
00014278 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
0001427C <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
000142A6 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
000142B0 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
000142C4 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
000142EA <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
000142F0 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
000142FE <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
00014304 <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
0001433C <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
00014340 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
0001436A <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
00014370 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014390 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
0001439A <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
0001439E <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
000143A0 <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
000143BE <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
000143C0 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
000143C6 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
000143CC <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
000143F6 <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
00014426 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
0001442A <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
00014458 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
0001445C <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014482 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014492 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
0001449E <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
000144D8 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
000144E2 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
000144FC <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
0001451A <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014522 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
00014528 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
00014550 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
00014568 <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
000145B8 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
000145C6 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
000145CC <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
000145E0 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
000145F8 <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
0001465E <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
0001468E <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0001469C <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
000146A2 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
000146B0 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
000146B6 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
000146BC <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
000146CA <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
000146CC <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
000146D2 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
000146E8 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
000146F2 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
000146F8 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
00014722 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014760 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
00014764 <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
000147A2 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
000147A6 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
000147E4 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
000147E8 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
000147F0 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
000147F8 <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
0001483C <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
0001484E <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
0001485C <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
00014890 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
000148B4 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
000148BE <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
000148D8 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
000148EC <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
00014944 <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
000149E4 <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
000149EC <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014A24 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014A2A <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014A3A <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014A62 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014A8A <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014A92 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014A98 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014AA0 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014AC8 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014AD0 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014AD8 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014ADE <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014AE4 <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014AEA <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014AF0 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014AF6 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014AFC <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014B02 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014B08 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014B10 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014B18 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014B40 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014B46 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014B4C <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014B54 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014B74 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00014B84 <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
00014B94 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014BA4 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014BB4 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014BC4 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014BD4 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014BE4 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014BF4 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014C04 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014C14 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014C24 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014C34 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014C44 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014C54 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014C64 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014C74 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014C86 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
00014C98 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014CAA <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014CBC <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014CCE <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014CE0 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014CFE <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014D04 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014D0A <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
00014D34 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014D46 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014D7A <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
00014D92 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014DDE <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014DF0 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014E46 <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014EB8 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00014EBE <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
00014EF2 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00014F1A <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00014F42 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
00014F7C <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
00014F94 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00015018 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00015032 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
00015080 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
00015090 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
00015098 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
000150AC <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
000150F2 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000150F8 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
00015142 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000151AC <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00015212 <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
00015246 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
00015272 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
000152C0 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
000152E4 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
000152EA <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000152F8 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
00015356 <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
000153B4 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
000153DE <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000153E8 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
000153F0 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001542E <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
0001547A <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
0001548C <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
000154E2 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
0001555A <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
00015560 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
00015594 <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
000155BC <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
000155F2 <CLIModeSupport.ab3@352> XINCLUDE "CLIModeSupport.ab3"
00015600 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
0001560E <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
00015682 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00015688 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
000156D2 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
0001571C <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
0001574C <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
00015776 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
000157C8 <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
0001581E <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
0001586E <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000158D4 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015940 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
0001596C <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
0001599C <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015A18 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00015A48 <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015A78 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015AA8 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015AD8 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015B08 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015B38 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015B68 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015B98 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015BC8 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015BF8 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015C74 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015CA6 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015CD8 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015D08 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015D0E <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015D82 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015DEE <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015E00 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015E2E <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015E56 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00015E6A <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00015E94 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00015ED8 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00015EE8 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
00015EF8 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
00015EFE <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00015F0E <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
00015F1C <CLIModeSupport.ab3@400> XINCLUDE "CLIModeSupport.ab3"
00015F26 <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00015F5E <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00015F96 <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
00015FCE <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00015FDE <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
00016046 <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
0001607E <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
0001608E <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
0001609E <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
00016106 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001616E <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000161D6 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001623E <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000162A6 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001630E <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016376 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000163DE <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
000163EE <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00016426 <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
00016460 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
0001649A <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
000164D2 <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
000164F8 <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016500 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00016508 <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
00016510 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
00016518 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
0001652C <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
0001655A <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
00016574 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
00016582 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
000165EE <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00016614 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00016630 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001663A <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016644 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00016650 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001665E <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
0001666A <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000166A6 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000166C0 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
000166CE <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000166EE <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000166FC <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
0001670A <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00016710 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016720 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00016724 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00016758 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
0001678C <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
00016790 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
000167C4 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
000167C8 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000167FC <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
00016802 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00016838 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
0001686E <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
000168A4 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
000168DC <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016914 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
000169B4 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
000169F4 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016A2C <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016A4A <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016A4E <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016A54 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00016A5A <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00016A5E <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016A88 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016A9C <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016ADA <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016B0E <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00016B44 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016B9C <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00016BCA <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00016BCE <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00016C04 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016C32 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00016C60 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016C64 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016C9A <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016CC8 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00016CCC <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00016D30 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016D36 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00016D70 <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
00016D7A <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
00016D84 <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00016D9E <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00016DC8 <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00016DCE <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00016DEE <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00016DF8 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00016DFC <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00016DFE <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00016E1C <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00016E1E <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00016E24 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00016E2A <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00016E54 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00016E56 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
00016E84 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00016E88 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00016EB6 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00016EBA <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00016EE0 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00016EF0 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00016EF6 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00016EFC <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00016F36 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00016F40 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00016F5A <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00016F74 <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
00016F9E <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00016FCC <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00016FD6 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00016FEA <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00017026 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
00017062 <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
0001709E <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000170DA <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
00017116 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0001711C <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017156 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00017158 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00017176 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
0001717C <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
000171A6 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
000171A8 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
000171B2 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000171B8 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000171CA <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
000171FC <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00017206 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00017270 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
000172DA <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00017344 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000173AE <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
00017418 <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00017482 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
00017488 <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
000174F2 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0001755C <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00017566 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
000175D0 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
000175D8 <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
0001760A <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
00017632 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
00017638 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0001763E <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
00017644 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
0001764A <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
00017650 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001765A <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00017664 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
00017692 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
000176BE <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
000176C6 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000176FA <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0001770C <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
00017772 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
000177D8 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
000177DE <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
000177E6 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
000177E8 <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00017806 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00017844 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00017882 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00017888 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
0001788E <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00017894 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
0001789E <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
000178A4 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
000178AA <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
000178B0 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000178B6 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000178BA <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
000178C4 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000178C8 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000178F2 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
000178F4 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
000178FA <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
000178FE <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017904 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017908 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017962 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
00017974 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
000179A0 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017A46 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017A64 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00017A6A <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00017A94 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017A9E <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017AD0 <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00017AEA <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017AFE <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017B08 <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
00017B22 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00017B4C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017B70 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00017BAE <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00017BB2 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017BF0 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
00017BF4 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00017C32 <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
00017C70 <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00017C72 <CLIModeSupport.ab3@691> XINCLUDE "CLIModeSupport.ab3"
00017CA6 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00017CAC <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00017CF0 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00017D02 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00017D0A <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00017D10 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00017D1A <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00017D28 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00017D2E <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00017D56 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00017D70 <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00017D7A <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00017D80 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00017D9E <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00017DA8 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00017DAE <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00017DB4 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00017DBE <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00017DCC <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00017DD2 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00017DE2 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00017E0E <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00017E24 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00017E2E <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00017E34 <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00017E8C <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00017EFA <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00017F12 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00017F18 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
00017F50 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00017F7E <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00017FA8 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00017FB2 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00017FDA <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00018004 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
000180A6 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000180B4 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00018104 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00018114 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
000181DC <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00018210 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00018244 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00018278 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
000182AC <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000182E0 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
00018314 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00018348 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
0001837C <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
0001837E <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
000183BC <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
000183C0 <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
000183FE <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001843C <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
0001843E <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00018444 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00018448 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
0001844A <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
00018488 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000184C6 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000184C8 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
000184CA <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
000184CC <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000184D2 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000184D6 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
000184E6 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000184FE <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
00018516 <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
0001852E <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00018558 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00018582 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
000185B0 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
000185B4 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000185DC <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
000185DE <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
0001861C <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00018620 <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
0001865E <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00018662 <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
000186A0 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
000186A4 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
000186CA <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
000186F0 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00018716 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
0001873C <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00018762 <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
000187B8 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
0001880E <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
0001885C <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
000188B2 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
000188D8 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
000188FE <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00018924 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
0001897A <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
000189C8 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00018A82 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00018AD8 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018AFE <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00018B24 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018B4A <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00018BA0 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00018BF6 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00018C44 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00018C92 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018CE0 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018D2E <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018D7C <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00018DCA <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00018E18 <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
00018E3E <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00018E64 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00018E8A <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00018ED8 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00018F26 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018F7C <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00018FCA <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00019018 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00019066 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
0001908C <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
000190B2 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
000190D8 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00019110 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00019138 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
0001914C <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
000191C0 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00019206 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
000192B4 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00019320 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00019330 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00019356 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00019360 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
0001938A <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00019390 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
000193A0 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00019440 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00019480 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00019486 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000194E8 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
000194F2 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
000194FC <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00019516 <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00019538 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
0001955A <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
000195B4 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
000195D6 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00019630 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00019672 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00019678 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
00019686 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
0001968C <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000196A0 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
000196AA <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00019724 <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
0001972E <CLIModeSupport.ab3@926> XINCLUDE "CLIModeSupport.ab3"
00019734 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00019748 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00019752 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
000197D2 <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
000197DC <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
000197E2 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
000197F6 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00019800 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00019848 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019852 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00019858 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
0001986C <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019876 <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
000198BE <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
000198C8 <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
000198CE <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
000198E2 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
00019908 <CLIModeSupport.ab3@953> XINCLUDE "CLIModeSupport.ab3"
0001991C <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
00019942 <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
00019956 <CLIModeSupport.ab3@960> XINCLUDE "CLIModeSupport.ab3"
0001997C <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00019990 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
0001999A <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
000199C8 <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00019A18 <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00019A38 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00019A50 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00019B34 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00019B3E <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00019B44 <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00019B46 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00019B5A <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00019B8C <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00019B92 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00019BD6 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00019BE8 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00019BFA <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00019C04 <CLIModeSupport.ab3@983> XINCLUDE "CLIModeSupport.ab3"
00019C0A <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00019C14 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
00019C2E <CLIModeSupport.ab3@987> XINCLUDE "CLIModeSupport.ab3"
00019C2E <AmiBlitz3.ab2@95> XINCLUDE "CLIModeSupport.ab3"
00019CAE <AmiBlitz3.ab2@100> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
00019CE6 <AmiBlitz3.ab2@101> If dynassign <> ""
00019CFC <AmiBlitz3.ab2@102>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
00019D06 <AmiBlitz3.ab2@103>     If *AssignSema
00019D16 <AmiBlitz3.ab2@104>       ObtainSemaphoreShared_ *AssignSema
00019D1C <AmiBlitz3.ab2@105>     Else                                                        ; no, create one...
00019D3C <AmiBlitz3.ab2@106>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
00019D46 <AmiBlitz3.ab2@107>       If *AssignSema
00019D56 <AmiBlitz3.ab2@108>         InitSemaphore_ *AssignSema
00019D8A <AmiBlitz3.ab2@110>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
00019D9C <AmiBlitz3.ab2@111>         If *AssignSema\ss_Link\ln_Name
00019DD8 <AmiBlitz3.ab2@112>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
00019DE4 <AmiBlitz3.ab2@114>         *AssignSema\ss_Link\ln_Pri  = 1
00019DF0 <AmiBlitz3.ab2@115>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
00019E00 <AmiBlitz3.ab2@117>         AddSemaphore_ *AssignSema
00019E10 <AmiBlitz3.ab2@118>         ObtainSemaphoreShared_ *AssignSema
00019E5C <AmiBlitz3.ab2@124>   mydir.s = dos_GetProgDir{"Sys:"}
00019EBC <AmiBlitz3.ab2@125>   If dos_SetAssign{dynassign,mydir,False}
00019F50 <AmiBlitz3.ab2@126>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
00019F88 <AmiBlitz3.ab2@129>   Poke$ ?str_blitz3assign,dynassign
0001A00A <AmiBlitz3.ab2@130>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001A08C <AmiBlitz3.ab2@133>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001A10E <AmiBlitz3.ab2@134>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001A190 <AmiBlitz3.ab2@135>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001A212 <AmiBlitz3.ab2@136>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001A286 <AmiBlitz3.ab2@137>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001A2FA <AmiBlitz3.ab2@138>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001A36E <AmiBlitz3.ab2@139>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001A39C <AmiBlitz3.ab2@140>   dos_CreateDir{my_blitzlibsdir$}
0001A3C0 <AmiBlitz3.ab2@141>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001A3EE <AmiBlitz3.ab2@142>   dos_CreateDir{my_residentsdir$}
0001A41C <AmiBlitz3.ab2@143>   dos_CreateDir{my_systemdir$}
0001A4E6 <AmiBlitz3.ab2@149> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001A51E <AmiBlitz3.ab2@150> Poke.s ?str_pedfile,pedfile$
0001A55C <AmiBlitz3.ab2@152> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001A56C <AmiBlitz3.ab2@153>   Poke.b ?start_without_libs,1
0001A572 <AmiBlitz3.ab2@154> Else
0001A582 <AmiBlitz3.ab2@155>   Poke.b ?start_without_libs,0
0001A5A8 <AmiBlitz3.ab2@158> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001A5B4 <AmiBlitz3.ab2@162> dbg_fid.l = -1 ; no debug file id yet!
0001A5BE <AmiBlitz3.ab2@164> If CLIMode
0001A5C4 <AmiBlitz3.ab2@167>   err.l      = False                                       ; indicate that an error has occured
0001A5CA <AmiBlitz3.ab2@168>   showhelp.l = False                                       ; show the CLI tool's help
0001A622 <AmiBlitz3.ab2@171>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0001A64A <AmiBlitz3.ab2@172>   cli_sourcefile.s   = ""
0001A672 <AmiBlitz3.ab2@173>   cli_exefile.s      = ""
0001A69A <AmiBlitz3.ab2@174>   cli_savefile.s     = ""
0001A6C2 <AmiBlitz3.ab2@175>   cli_dumpfile.s     = ""
0001A6EA <AmiBlitz3.ab2@176>   cli_includepath.s  = ""
0001A712 <AmiBlitz3.ab2@177>   cli_blitzlibpath.s = ""
0001A718 <AmiBlitz3.ab2@178>   cli_debuginfo.l    = False
0001A71E <AmiBlitz3.ab2@179>   cli_run.l          = False
0001A726 <AmiBlitz3.ab2@180>   cli_dumpflags.l    = $FFFFFFFF
0001A74E <AmiBlitz3.ab2@181>   cli_info.s         = ""
0001A754 <AmiBlitz3.ab2@182>   cli_release.l      = False
0001A75E <AmiBlitz3.ab2@183>   cli_numargs.l      = dos_GetNumArgs{}
0001A764 <AmiBlitz3.ab2@184>   cli_gui.l          = False
0001A76C <AmiBlitz3.ab2@185>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
0001A774 <AmiBlitz3.ab2@186>   cli_verbose.l      = 1
0001A78C <AmiBlitz3.ab2@187>   If cli_numargs=0 Then showhelp=True
0001A7BC <AmiBlitz3.ab2@191>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001A808 <AmiBlitz3.ab2@192>     larg.s = LCase$(arg)                                   ; lower case the option string
0001A8D0 <AmiBlitz3.ab2@193>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001A906 <AmiBlitz3.ab2@194>     Select larg
0001A952 <AmiBlitz3.ab2@195>       Case "s" : larg="source"
0001A9A4 <AmiBlitz3.ab2@196>       Case "e" : larg="exe"
0001A9F6 <AmiBlitz3.ab2@197>       Case "d" : larg="debug"
0001AA48 <AmiBlitz3.ab2@198>       Case "r" : larg="release"
0001AA9A <AmiBlitz3.ab2@199>       Case "h" : larg="help"
0001AAEC <AmiBlitz3.ab2@200>       Case "v" : larg="verbose"
0001AAFA <AmiBlitz3.ab2@201>     End Select
0001AB30 <AmiBlitz3.ab2@203>     Select larg
0001AB84 <AmiBlitz3.ab2@204>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001ABDE <AmiBlitz3.ab2@205>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001AC38 <AmiBlitz3.ab2@206>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001AC68 <AmiBlitz3.ab2@207>       Case "debug"    : cli_debuginfo   = True
0001AC98 <AmiBlitz3.ab2@208>       Case "run"      : cli_run         = True
0001ACC8 <AmiBlitz3.ab2@209>       Case "release"  : cli_release     = True
0001ACF8 <AmiBlitz3.ab2@210>       Case "ped"      : cli_gui         = True
0001AD52 <AmiBlitz3.ab2@211>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001ADC4 <AmiBlitz3.ab2@212>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001ADF4 <AmiBlitz3.ab2@213>                         cli_dumpfile    = dos_GetNextArg{}
0001ADFC <AmiBlitz3.ab2@214>                         cli_dumpflags   = $0
0001AE5C <AmiBlitz3.ab2@215>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001AEBC <AmiBlitz3.ab2@216>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001AF1C <AmiBlitz3.ab2@217>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001AF7C <AmiBlitz3.ab2@218>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001AFDC <AmiBlitz3.ab2@219>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001B03C <AmiBlitz3.ab2@220>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001B09C <AmiBlitz3.ab2@221>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001B0FC <AmiBlitz3.ab2@222>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001B15C <AmiBlitz3.ab2@223>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001B16E <AmiBlitz3.ab2@224>                         If cli_dumpflags = $0
0001B174 <AmiBlitz3.ab2@225>                          err=True
0001B208 <AmiBlitz3.ab2@226>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001B262 <AmiBlitz3.ab2@228>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001B292 <AmiBlitz3.ab2@229>       Case "h"        : showhelp        = True             ; show the help and quit
0001B298 <AmiBlitz3.ab2@230>       Default
0001B2D0 <AmiBlitz3.ab2@231>         If arg><""
0001B364 <AmiBlitz3.ab2@232>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001B36A <AmiBlitz3.ab2@233>           err = True
0001B378 <AmiBlitz3.ab2@235>     End Select
0001B3C4 <AmiBlitz3.ab2@236>   Until arg = "" OR err=True          ; until we processed all arguments
0001B3E6 <AmiBlitz3.ab2@239>   If err><False OR showhelp = True
0001B3F0 <AmiBlitz3.ab2@240>     If showhelp
0001B452 <AmiBlitz3.ab2@241>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001B48A <AmiBlitz3.ab2@242>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001B4C2 <AmiBlitz3.ab2@243>     NPrint "\\nOptions:"
0001B4FA <AmiBlitz3.ab2@244>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001B532 <AmiBlitz3.ab2@245>     NPrint "  -(e)xe <file>       : output executable filename"
0001B56A <AmiBlitz3.ab2@246>     NPrint "  -(d)ebug            : compile with debug info"
0001B5A2 <AmiBlitz3.ab2@247>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001B5DA <AmiBlitz3.ab2@248>     NPrint "  -run                : run compiled program"
0001B612 <AmiBlitz3.ab2@249>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001B64A <AmiBlitz3.ab2@250>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001B682 <AmiBlitz3.ab2@251>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001B6BA <AmiBlitz3.ab2@252>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001B6F2 <AmiBlitz3.ab2@253>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001B72A <AmiBlitz3.ab2@254>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001B762 <AmiBlitz3.ab2@255>     NPrint "  -(h)elp             : show this help"
0001B79A <AmiBlitz3.ab2@256>     NPrint "\\nExample:"
0001B7D2 <AmiBlitz3.ab2@257>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001B80A <AmiBlitz3.ab2@258>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001B810 <AmiBlitz3.ab2@261>     Goto abnormal_exit
0001B82C <AmiBlitz3.ab2@264>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001B890 <AmiBlitz3.ab2@265>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001B8A0 <AmiBlitz3.ab2@268> Poke.l ?CLIMode,CLIMode
0001B8C4 <AmiBlitz3.ab2@299>   Dim incdim.s (#maxincludes)
0001B8E8 <AmiBlitz3.ab2@300>   Dim incline.l(#maxincludes)
0001B902 <AmiBlitz3.ab2@566> Function.s Get_Libinfo{addr_libnum.l}
0001B90E <AmiBlitz3.ab2@568>   lib_ab2.b = False : lib_os.b = False
0001B914 <AmiBlitz3.ab2@569>   addr_counter.l = addr_libnum
0001B91C <AmiBlitz3.ab2@570>   skip.l = 0
0001B92E <AmiBlitz3.ab2@571>   If addr_counter=0
0001B968 <AmiBlitz3.ab2@572>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001B986 <AmiBlitz3.ab2@573>     Function Return ""
0001B994 <AmiBlitz3.ab2@578>     mem.l = Peek.l(addr_counter)
0001B9A2 <AmiBlitz3.ab2@583>     addr_counter + 2
0001B9C2 <AmiBlitz3.ab2@584>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001B9DC <AmiBlitz3.ab2@585>     If (mem LSR 16) = $ffe2
0001B9E2 <AmiBlitz3.ab2@587>       lib_os = True
0001B9EA <AmiBlitz3.ab2@588>       skip = 10
0001BA30 <AmiBlitz3.ab2@589>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001BA74 <AmiBlitz3.ab2@591>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001BA8A <AmiBlitz3.ab2@593>   If (addr_counter>addr_libnum + $400)
0001BAA8 <AmiBlitz3.ab2@595>     Function Return ""
0001BAAE <AmiBlitz3.ab2@596>   Else
0001BAD2 <AmiBlitz3.ab2@597>     Function Return Peek$(addr_counter + skip)
0001BADC <AmiBlitz3.ab2@599> End Function
0001BAFA <AmiBlitz3.ab2@639>   !asm
0001BB00 <AmiBlitz3.ab2@640>   MOVEA.l _execbase,A6
0001BB04 <AmiBlitz3.ab2@641>   MOVEM.l d0/a0,-(a7)
0001BB06 <AmiBlitz3.ab2@643>   MOVEQ #127,d0
0001BB0C <AmiBlitz3.ab2@644>   LEA chartab,a0
0001BB12 <AmiBlitz3.ab2@647>     MOVE.b #1,128(a0)
0001BB14 <AmiBlitz3.ab2@648>     CLR.b (a0)+
0001BB18 <AmiBlitz3.ab2@649>   DBF d0,'l12
0001BB1E <AmiBlitz3.ab2@651>   LEA chartab,a0
0001BB22 <AmiBlitz3.ab2@652>   MOVE.b #1,(a0)
0001BB28 <AmiBlitz3.ab2@653>   MOVE.b #1,","(a0)
0001BB2E <AmiBlitz3.ab2@654>   MOVE.b #1,";"(a0)
0001BB34 <AmiBlitz3.ab2@655>   MOVE.b #1,":"(a0)
0001BB3A <AmiBlitz3.ab2@656>   MOVE.b #1,"("(a0)
0001BB40 <AmiBlitz3.ab2@657>   MOVE.b #1,")"(a0)
0001BB46 <AmiBlitz3.ab2@658>   MOVE.b #1,"="(a0)
0001BB4C <AmiBlitz3.ab2@659>   MOVE.b #1,"+"(a0)
0001BB52 <AmiBlitz3.ab2@660>   MOVE.b #1,"-"(a0)
0001BB58 <AmiBlitz3.ab2@661>   MOVE.b #1,"*"(a0)
0001BB5E <AmiBlitz3.ab2@662>   MOVE.b #1,"/"(a0)
0001BB64 <AmiBlitz3.ab2@663>   MOVE.b #1,"$"(a0)
0001BB6A <AmiBlitz3.ab2@664>   MOVE.b #1,"%"(a0)
0001BB70 <AmiBlitz3.ab2@665>   MOVE.b #1,"."(a0)
0001BB76 <AmiBlitz3.ab2@666>   MOVE.b #1,"["(a0)
0001BB7C <AmiBlitz3.ab2@667>   MOVE.b #1,"]"(a0)
0001BB82 <AmiBlitz3.ab2@668>   MOVE.b #1,"{"(a0)
0001BB88 <AmiBlitz3.ab2@669>   MOVE.b #1,"}"(a0)
0001BB8E <AmiBlitz3.ab2@670>   MOVE.b #1,"\"(a0)
0001BB94 <AmiBlitz3.ab2@671>   MOVE.b #1,">"(a0)
0001BB9A <AmiBlitz3.ab2@672>   MOVE.b #1,"<"(a0)
0001BBA0 <AmiBlitz3.ab2@673>   MOVE.b #1,"&"(a0)
0001BBA6 <AmiBlitz3.ab2@674>   MOVE.b #1,"|"(a0)
0001BBAC <AmiBlitz3.ab2@675>   MOVE.b #1,"^"(a0)
0001BBB2 <AmiBlitz3.ab2@676>   MOVE.b #1,$7e(a0)
0001BBB8 <AmiBlitz3.ab2@677>   MOVE.w #$0101,1(a0)
0001BBBE <AmiBlitz3.ab2@679>   LEA instrtab,a0
0001BBC4 <AmiBlitz3.ab2@680>   MOVE.l #labelhash-instrtab,d0
0001BBC6 <AmiBlitz3.ab2@681>   ASR.l #2,d0
0001BBC8 <AmiBlitz3.ab2@682>   SUBQ.l #1,d0
0001BBCA <AmiBlitz3.ab2@685>    CLR.l (a0)+
0001BBCC <AmiBlitz3.ab2@686>    SUBQ.l #1,d0
0001BBD0 <AmiBlitz3.ab2@687>   BNE 'l10
0001BBD6 <AmiBlitz3.ab2@689>   LEA allowtab,a0
0001BBDC <AmiBlitz3.ab2@690>   MOVE.l #255,d0
0001BBDE <AmiBlitz3.ab2@693>     CLR.b (a0)+
0001BBE2 <AmiBlitz3.ab2@694>   DBF d0,'la1
0001BBE8 <AmiBlitz3.ab2@696>   LEA allowtab,a0
0001BBEE <AmiBlitz3.ab2@697>   MOVE.b #1,$7d(a0)
0001BBF4 <AmiBlitz3.ab2@698>   MOVE.b #1,$7c(a0)
0001BBFA <AmiBlitz3.ab2@699>   MOVE.b #1,$44(a0)
0001BC00 <AmiBlitz3.ab2@700>   MOVE.b #1,$45(a0)
0001BC06 <AmiBlitz3.ab2@701>   MOVE.b #1,$b9(a0)
0001BC0C <AmiBlitz3.ab2@702>   MOVE.b #1,$89(a0)
0001BC12 <AmiBlitz3.ab2@703>   MOVE.b #1,$ce(a0)
0001BC18 <AmiBlitz3.ab2@704>   MOVE.b #1,$cf(a0)
0001BC1E <AmiBlitz3.ab2@705>   MOVE.b #1,$d0(a0)
0001BC24 <AmiBlitz3.ab2@706>   MOVE.b #1,$cd(a0)
0001BC26 <AmiBlitz3.ab2@707>   MOVEQ #0,d0
0001BC2C <AmiBlitz3.ab2@709>   MOVEA.l _execbase,a6
0001BC32 <AmiBlitz3.ab2@714>   MOVE.l #$10000,d0
0001BC38 <AmiBlitz3.ab2@715>   MOVE.l #80000,d1
0001BC3A <AmiBlitz3.ab2@716>   MOVE.l d1,d2
0001BC3E <AmiBlitz3.ab2@717>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001BC44 <AmiBlitz3.ab2@718>   MOVE.l d0,mempool
0001BC48 <AmiBlitz3.ab2@719>   MOVEM.l (a7)+,d0/a0
0001BC4E <AmiBlitz3.ab2@720>   TST.l mempool
0001BC52 <AmiBlitz3.ab2@721>   BEQ shutdown_compiler
0001BC56 <AmiBlitz3.ab2@723>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001BC5C <AmiBlitz3.ab2@724>   MOVE.l A4,ptr_ThisTask
0001BC60 <AmiBlitz3.ab2@726>   BSR.w open_doslibrary
0001BC64 <AmiBlitz3.ab2@727>   BEQ.w shutdown_compiler
0001BC6A <AmiBlitz3.ab2@729>   MOVE.l D2,stacksize
0001BC6C <AmiBlitz3.ab2@733>   MOVEQ.l #$00,D0
0001BC72 <AmiBlitz3.ab2@734>   LEA tokens,A0
0001BC74 <AmiBlitz3.ab2@737>     ADDQ.w #1,D0
0001BC76 <AmiBlitz3.ab2@738>     MOVE.l (A0),D1
0001BC7A <AmiBlitz3.ab2@739>     BEQ.w JL_0_2D1C
0001BC7C <AmiBlitz3.ab2@740>     MOVEA.l D1,A0
0001BC80 <AmiBlitz3.ab2@741> BRA.w JL_0_2D0E
0001BC86 <AmiBlitz3.ab2@744>   MOVE.l A0,end_of_tokenlist
0001BC8A <AmiBlitz3.ab2@746>   BSR.w makeasmtable
0001BC92 <AmiBlitz3.ab2@747>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001BC96 <AmiBlitz3.ab2@749>   BSR.w open_mathlibrary
0001BC9A <AmiBlitz3.ab2@750>   BEQ.w freemem_and_quit4
0001BCA0 <AmiBlitz3.ab2@752>   MOVE.l constmaxpc,D0
0001BCA2 <AmiBlitz3.ab2@753>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001BCA8 <AmiBlitz3.ab2@754>   MOVEA.l _execbase,A6
0001BCAC <AmiBlitz3.ab2@755>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001BCB2 <AmiBlitz3.ab2@756>   MOVE.l D0,constpcat
0001BCB6 <AmiBlitz3.ab2@757>   BEQ.w freemem_and_quit3
0001BCBC <AmiBlitz3.ab2@758>   ADD.l constmaxpc,D0
0001BCC2 <AmiBlitz3.ab2@759>   MOVE.l D0,constlibat
0001BCC8 <AmiBlitz3.ab2@761>   MOVE.l macrobuffer_size,D0
0001BCCE <AmiBlitz3.ab2@762>   CMP.l #40000,d0
0001BCD2 <AmiBlitz3.ab2@763>   BGE 'ok
0001BCD8 <AmiBlitz3.ab2@764>     MOVE.l #40000,d0
0001BCDE <AmiBlitz3.ab2@765>     MOVE.l d0,macrobuffer_size
0001BCE0 <AmiBlitz3.ab2@768>   ADDQ.l #4,d0
0001BCE2 <AmiBlitz3.ab2@769>   MOVEQ.l #$01,D1
0001BCE8 <AmiBlitz3.ab2@770>   MOVEA.l _execbase,A6
0001BCEC <AmiBlitz3.ab2@771>   JSR _AllocMem(A6)                                        ;macro mem
0001BCEE <AmiBlitz3.ab2@772>   MOVE.l d0,a0
0001BCF4 <AmiBlitz3.ab2@773>   MOVE.l macrobuffer_size,(a0)+
0001BCF6 <AmiBlitz3.ab2@774>   MOVE.l a0,d0
0001BCFC <AmiBlitz3.ab2@775>   MOVE.l D0,ptr_macrobuffer_begin
0001BD00 <AmiBlitz3.ab2@776>   BEQ.w freemem_and_quit2
0001BD06 <AmiBlitz3.ab2@777>   ADD.l macrobuffer_size,D0
0001BD0C <AmiBlitz3.ab2@778>   MOVE.l D0,ptr_macrobuffer_end
0001BD12 <AmiBlitz3.ab2@780>   TST.l CLIMode
0001BD16 <AmiBlitz3.ab2@781>   BEQ load_ped
0001BD40 <AmiBlitz3.ab2@784>   !basic
0001BD4A <AmiBlitz3.ab2@785>   succ.l = InitEmulatedPED{}
0001BD4E <AmiBlitz3.ab2@786>   GetD0 succ
0001BD6C <AmiBlitz3.ab2@787>   !asm
0001BD6E <AmiBlitz3.ab2@788>   TST.l d0
0001BD72 <AmiBlitz3.ab2@789>   BEQ freemem_and_quit
0001BD78 <AmiBlitz3.ab2@790> JMP skip_ped
0001BD7E <AmiBlitz3.ab2@795>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001BD84 <AmiBlitz3.ab2@796>   MOVEA.l _dosbase,A6
0001BD88 <AmiBlitz3.ab2@797>   JSR _LoadSeg(A6)
0001BD8E <AmiBlitz3.ab2@798>   MOVE.l D0,ptr_seg_ped
0001BD92 <AmiBlitz3.ab2@800>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001BD94 <AmiBlitz3.ab2@804>   MOVEA.l D0,A2
0001BD96 <AmiBlitz3.ab2@805>   ADDA.l A2,A2
0001BD98 <AmiBlitz3.ab2@806>   ADDA.l A2,A2
0001BD9E <AmiBlitz3.ab2@808>   LEA teddata,a1                                           ;lea edstruct,A1
0001BDA4 <AmiBlitz3.ab2@809>   MOVE.l #"TEDY",d1
0001BDA8 <AmiBlitz3.ab2@810>   JSR 4(A2)                                                ; Run PED
0001BDAE <AmiBlitz3.ab2@812>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001BDB4 <AmiBlitz3.ab2@813>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001BDF2 <AmiBlitz3.ab2@815>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001BDF6 <AmiBlitz3.ab2@816>   BEQ.w unload_ped
0001BDFA <AmiBlitz3.ab2@817> 
0001BDFE <AmiBlitz3.ab2@818>   BNE old_version_of_PED                                   ; no, than exit
0001BE3C <AmiBlitz3.ab2@824>   !ComData_GetL{comData_Magic,D0}
0001BE42 <AmiBlitz3.ab2@825>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001BE46 <AmiBlitz3.ab2@826>   BNE unload_ped
0001BE7E <AmiBlitz3.ab2@829>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001BEB6 <AmiBlitz3.ab2@830>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001BEEE <AmiBlitz3.ab2@831>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001BF26 <AmiBlitz3.ab2@832>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001BF5E <AmiBlitz3.ab2@833>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001BF96 <AmiBlitz3.ab2@834>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001BFCE <AmiBlitz3.ab2@835>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001C006 <AmiBlitz3.ab2@836>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001C03E <AmiBlitz3.ab2@837>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001C076 <AmiBlitz3.ab2@838>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001C0AE <AmiBlitz3.ab2@839>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001C0E6 <AmiBlitz3.ab2@840>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001C11E <AmiBlitz3.ab2@843>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001C156 <AmiBlitz3.ab2@844>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001C18E <AmiBlitz3.ab2@847>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001C1C6 <AmiBlitz3.ab2@848>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001C1FE <AmiBlitz3.ab2@850>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001C236 <AmiBlitz3.ab2@851>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001C26E <AmiBlitz3.ab2@853>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001C2A6 <AmiBlitz3.ab2@854>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001C2DE <AmiBlitz3.ab2@856>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001C316 <AmiBlitz3.ab2@857>   !ComData_SetL{comPtr_Stringbuffer_Long         ,#stringbuffer}
0001C34E <AmiBlitz3.ab2@858>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001C386 <AmiBlitz3.ab2@859>   !ComData_SetL{comPtr_Create_Iconfile_Byte      ,#create_iconfile}
0001C3BE <AmiBlitz3.ab2@860>   !ComData_SetL{comPtr_Make_Smallestcode_Byte    ,#make_smallestcode}
0001C3F6 <AmiBlitz3.ab2@861>   !ComData_SetL{comPtr_Link_Debuginfo_Byte       ,#link_debuginfo}
0001C42E <AmiBlitz3.ab2@862>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001C466 <AmiBlitz3.ab2@863>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001C49E <AmiBlitz3.ab2@864>   !ComData_SetL{comPtr_Interruptcheck_Byte       ,#interruptcheck}
0001C4D6 <AmiBlitz3.ab2@865>   !ComData_SetL{comPtr_Assemblercheck_Byte       ,#assemblercheck}
0001C50E <AmiBlitz3.ab2@866>   !ComData_SetL{comPtr_Overflowcheck_Byte        ,#overflowcheck}
0001C546 <AmiBlitz3.ab2@867>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001C57E <AmiBlitz3.ab2@868>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001C5B6 <AmiBlitz3.ab2@869>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001C5BC <AmiBlitz3.ab2@873>   CLR.w returncode_org
0001C5E6 <AmiBlitz3.ab2@875>   !basic
0001C5F0 <AmiBlitz3.ab2@876>   If CLIMode
0001C662 <AmiBlitz3.ab2@877>     If cli_verbose>=2 Then NPrint !TRANS{"Loading BlitzLibs."}
0001C680 <AmiBlitz3.ab2@879>   !asm
0001C686 <AmiBlitz3.ab2@883>   TST.b start_without_libs
0001C68A <AmiBlitz3.ab2@884>   BNE skip_loading_libs
0001C68E <AmiBlitz3.ab2@885>     BSR.w call_setpointerbusy
0001C698 <AmiBlitz3.ab2@886>     MOVE.l #$FFFFffff,linenumat
0001C69C <AmiBlitz3.ab2@887>     BSR.w get_libraries
0001C6A2 <AmiBlitz3.ab2@888>     JSR init_libraries
0001C6A6 <AmiBlitz3.ab2@889>     BSR.w init_buffers
0001C6AA <AmiBlitz3.ab2@890>     BSR.w call_setpointernormal
0001C6AC <AmiBlitz3.ab2@895>   MOVEQ.l #-$01,D0
0001C6B2 <AmiBlitz3.ab2@896>   MOVEA.l _execbase,A6
0001C6B6 <AmiBlitz3.ab2@897>   JSR _AllocSignal(A6)
0001C6BC <AmiBlitz3.ab2@898>   MOVE.l D0,signalNum
0001C6BE <AmiBlitz3.ab2@899>   MOVEQ.l #$00,D1
0001C6C0 <AmiBlitz3.ab2@900>   BSET D0,D1
0001C6C6 <AmiBlitz3.ab2@901>   MOVE.l D1,signals
0001C6CC <AmiBlitz3.ab2@905>   MOVE.l #str_defaultdbug,D1
0001C6D0 <AmiBlitz3.ab2@906>   MOVEA.l _dosbase(PC),A6
0001C6D4 <AmiBlitz3.ab2@907>   JSR _LoadSeg(A6)
0001C6DA <AmiBlitz3.ab2@908>   MOVE.l D0,ptr_seg_debugger
0001C6DC <AmiBlitz3.ab2@909>   TST.l d0
0001C6E0 <AmiBlitz3.ab2@910>   BNE ok_12
0001C70A <AmiBlitz3.ab2@911>     !basic
0001C76C <AmiBlitz3.ab2@912>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001C78A <AmiBlitz3.ab2@913>     !asm
0001C790 <AmiBlitz3.ab2@916>   TST.l CLIMode
0001C794 <AmiBlitz3.ab2@917>   BEQ run_ped
0001C7BE <AmiBlitz3.ab2@923>   !basic
0001C7C4 <AmiBlitz3.ab2@924>   err.l = False
0001C7F0 <AmiBlitz3.ab2@932>   If cli_sourcefile
0001C810 <AmiBlitz3.ab2@933>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001C81A <AmiBlitz3.ab2@934>     If lock
0001C83E <AmiBlitz3.ab2@935>       NameFromLock_ lock,&cli_tempstr,1024
0001C868 <AmiBlitz3.ab2@936>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001C878 <AmiBlitz3.ab2@937>       UnLock_ lock
0001C8A4 <AmiBlitz3.ab2@940>     If cli_exefile
0001C8F6 <AmiBlitz3.ab2@941>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001C94E <AmiBlitz3.ab2@942>       path.s = dos_PathPart{cli_exefile}
0001C96E <AmiBlitz3.ab2@943>       lock.l = Lock_(&path,#ACCESS_READ)
0001C978 <AmiBlitz3.ab2@944>       If lock
0001C99C <AmiBlitz3.ab2@945>         NameFromLock_ lock,&cli_tempstr,1024
0001C9C6 <AmiBlitz3.ab2@946>         path.s = Peek.s(&cli_tempstr)
0001CA74 <AmiBlitz3.ab2@947>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001CA84 <AmiBlitz3.ab2@948>         UnLock_ lock
0001CACE <AmiBlitz3.ab2@959>   If cli_verbose>=2 Then NPrint "Initializing token hashmap."
0001CB42 <AmiBlitz3.ab2@960> 
0001CB4C <AmiBlitz3.ab2@961>   *PreProcessor.preprocessor = preproc_Create{}
0001CB5C <AmiBlitz3.ab2@962>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001CB8E <AmiBlitz3.ab2@963>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001CBA2 <AmiBlitz3.ab2@964>   If *PreProcessor\tokens=#NULL
0001CC1C <AmiBlitz3.ab2@965>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001CC26 <AmiBlitz3.ab2@966>     preproc_QueryTokens{*PreProcessor}
0001CC58 <AmiBlitz3.ab2@967>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001CCA4 <AmiBlitz3.ab2@975>   If cli_sourcefile><"" AND err=False
0001CD4A <AmiBlitz3.ab2@976>     If cli_verbose>=2 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22."
0001CD7C <AmiBlitz3.ab2@977>     succ=LoadSource{cli_sourcefile}
0001CD86 <AmiBlitz3.ab2@978>     If succ
0001CDBE <AmiBlitz3.ab2@979> 
0001CE38 <AmiBlitz3.ab2@980>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0001CE72 <AmiBlitz3.ab2@981>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
0001CE7C <AmiBlitz3.ab2@983>         If comerr
0001CE82 <AmiBlitz3.ab2@985>         Else
0001CE88 <AmiBlitz3.ab2@989>     Else
0001CED8 <AmiBlitz3.ab2@990>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001CF24 <AmiBlitz3.ab2@994>   If cli_savefile><"" AND err=False
0001CF8C <AmiBlitz3.ab2@995>     If cli_verbose>=2 Then NPrint "Saving Sourcefiles as "+cli_savefile
0001CFBA <AmiBlitz3.ab2@996>     SaveSource{cli_savefile}
0001D006 <AmiBlitz3.ab2@999>   If cli_dumpfile><"" AND err=False
0001D050 <AmiBlitz3.ab2@1000>     If cli_verbose>=2 Then NPrint "Saving dumpfile."
0001D086 <AmiBlitz3.ab2@1001>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001D090 <AmiBlitz3.ab2@1004>   If cli_run
0001D0A4 <AmiBlitz3.ab2@1005>     If comerr=False
0001D0D0 <AmiBlitz3.ab2@1006>       If cli_exefile
0001D14A <AmiBlitz3.ab2@1007>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0001D178 <AmiBlitz3.ab2@1008>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0001D1C2 <AmiBlitz3.ab2@1010>       If cli_verbose>=1 Then NPrint "Running program..."
0001D1CC <AmiBlitz3.ab2@1011> 
0001D1CE <AmiBlitz3.ab2@1013>         CLR.l d0
0001D20C <AmiBlitz3.ab2@1014>         !ComData_GetB{comByte_RunningFlag,D0}
0001D210 <AmiBlitz3.ab2@1015>         running.l = PutD0
0001D22C <AmiBlitz3.ab2@1016>         If running Then Delay_ 50
0001D240 <AmiBlitz3.ab2@1018>       Until running=False
0001D254 <AmiBlitz3.ab2@1019>       If Peek.l(?_runerror)
0001D2A4 <AmiBlitz3.ab2@1020>         If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001D2B6 <AmiBlitz3.ab2@1031>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001D300 <AmiBlitz3.ab2@1032>   If cli_verbose>=2 Then NPrint "Exit AmiBlitz3."
0001D306 <AmiBlitz3.ab2@1033>   DeinitEmulatedPED{}
0001D324 <AmiBlitz3.ab2@1035>   !asm
0001D32A <AmiBlitz3.ab2@1036> JMP terminate_ab3
0001D330 <AmiBlitz3.ab2@1041>   MOVEA.l ped_startup_addr,A1
0001D336 <AmiBlitz3.ab2@1042>   LEA str_tempfilename,A0
0001D338 <AmiBlitz3.ab2@1043>   JSR (A1)
0001D33E <AmiBlitz3.ab2@1050>   MOVE.l signalNum,D0
0001D344 <AmiBlitz3.ab2@1051>   MOVEA.l _execbase,A6
0001D348 <AmiBlitz3.ab2@1052>   JSR _FreeSignal(A6)
0001D34E <AmiBlitz3.ab2@1054>   MOVE.l ptr_seg_debugger,D1
0001D352 <AmiBlitz3.ab2@1055>   BEQ.b skip_unload_debugger
0001D356 <AmiBlitz3.ab2@1056>     MOVEA.l _dosbase(PC),A6
0001D35A <AmiBlitz3.ab2@1057>     JSR _UnLoadSeg(A6)
0001D35E <AmiBlitz3.ab2@1060>   BSR.w Aclearallvars
0001D362 <AmiBlitz3.ab2@1061>   BSR.w free_residents
0001D368 <AmiBlitz3.ab2@1062>   JSR free_blitzlibs
0001D36E <AmiBlitz3.ab2@1065>   MOVE.l ptr_seg_ped,D1
0001D372 <AmiBlitz3.ab2@1066>   BEQ freemem_and_quit
0001D376 <AmiBlitz3.ab2@1067>   MOVEA.l _dosbase(PC),A6
0001D37A <AmiBlitz3.ab2@1068>   JSR _UnLoadSeg(A6)
0001D37E <AmiBlitz3.ab2@1069>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001D3A8 <AmiBlitz3.ab2@1072>   !basic
0001D46C <AmiBlitz3.ab2@1073> 
0001D48A <AmiBlitz3.ab2@1074>   !asm
0001D48E <AmiBlitz3.ab2@1075>   BRA freemem_and_quit
0001D4B8 <AmiBlitz3.ab2@1078>   !basic
0001D57C <AmiBlitz3.ab2@1079>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001D59A <AmiBlitz3.ab2@1080>   !asm
0001D59E <AmiBlitz3.ab2@1084>   BSR.w freeallox
0001D5A4 <AmiBlitz3.ab2@1085>   MOVEA.l ptr_macrobuffer_begin,A1
0001D5A6 <AmiBlitz3.ab2@1086>   MOVE.l -(a1),D0
0001D5A8 <AmiBlitz3.ab2@1087>   ADDQ.l #4,d0
0001D5AE <AmiBlitz3.ab2@1088>   MOVEA.l _execbase,A6
0001D5B2 <AmiBlitz3.ab2@1089>   JSR _FreeMem(A6)
0001D5B8 <AmiBlitz3.ab2@1092>   MOVEA.l _dosbase,A1
0001D5BE <AmiBlitz3.ab2@1093>   MOVEA.l _execbase,A6
0001D5C2 <AmiBlitz3.ab2@1094>   JSR _CloseLibrary(A6)
0001D5C8 <AmiBlitz3.ab2@1096>   MOVEA.l constpcat,A1
0001D5CE <AmiBlitz3.ab2@1097>   MOVE.l constmaxpc,D0
0001D5D4 <AmiBlitz3.ab2@1098>   MOVEA.l _execbase,A6
0001D5D8 <AmiBlitz3.ab2@1099>   JSR _FreeMem(A6)
0001D5DE <AmiBlitz3.ab2@1102>   MOVEA.l _mathffpbase,A1
0001D5E4 <AmiBlitz3.ab2@1103>   MOVEA.l _execbase,A6
0001D5E8 <AmiBlitz3.ab2@1104>   JSR _CloseLibrary(A6)
0001D5EE <AmiBlitz3.ab2@1114>     MOVEA.l _execbase,A6
0001D5F4 <AmiBlitz3.ab2@1115>     MOVE.l mempool,a0
0001D5F8 <AmiBlitz3.ab2@1116>     JSR _DeletePool(a6)
0001D5FE <AmiBlitz3.ab2@1117>     CLR.l pushat
0001D604 <AmiBlitz3.ab2@1124>   JSR free_unusedfunctions
0001D606 <AmiBlitz3.ab2@1125>   MOVEQ #0,d0
0001D614 <AmiBlitz3.ab2@1128>   !exitasm
0001D64C <AmiBlitz3.ab2@1129>   If dynassign<>""
0001D656 <AmiBlitz3.ab2@1130>     If *AssignSema
0001D666 <AmiBlitz3.ab2@1131>       ReleaseSemaphore_ *AssignSema
0001D67E <AmiBlitz3.ab2@1132>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001D712 <AmiBlitz3.ab2@1133>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001D74C <AmiBlitz3.ab2@1134>         dos_RemAssign{dynassign}
0001D75C <AmiBlitz3.ab2@1135>         RemSemaphore_ *AssignSema
0001D76C <AmiBlitz3.ab2@1136>         ReleaseSemaphore_ *AssignSema
0001D7A2 <AmiBlitz3.ab2@1137>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001D7B2 <AmiBlitz3.ab2@1138>         FreeVec_ *AssignSema
0001D7BA <AmiBlitz3.ab2@1139>         *AssignSema = #NULL
0001D7E8 <AmiBlitz3.ab2@1143>   SetCurrentDir{cli_path}
0001D80A <AmiBlitz3.ab2@1144>   !coutclose
0001D810 <AmiBlitz3.ab2@1145> End
0001D81C <AmiBlitz3.ab2@1150> str_doslibrary:     Dc.b "dos.library",0 : Even
0001D820 <AmiBlitz3.ab2@1151> _dosbase:           Ds.l 1
0001D826 <AmiBlitz3.ab2@1155>   MOVEA.l _execbase,A6
0001D82C <AmiBlitz3.ab2@1156>   LEA str_doslibrary,A1
0001D830 <AmiBlitz3.ab2@1157>   JSR _OldOpenLibrary(A6)
0001D836 <AmiBlitz3.ab2@1158>   MOVE.l D0,_dosbase
0001D838 <AmiBlitz3.ab2@1159> RTS
0001D83E <AmiBlitz3.ab2@1163>   MOVEA.l #str_mathffpname,A1
0001D844 <AmiBlitz3.ab2@1164>   MOVEA.l _execbase,A6
0001D848 <AmiBlitz3.ab2@1165>   JSR _OldOpenLibrary(A6)
0001D84E <AmiBlitz3.ab2@1166>   MOVE.l D0,_mathffpbase
0001D850 <AmiBlitz3.ab2@1167> RTS
0001D882 <AmiBlitz3.ab2@1173>   !ComData_JMP{comFunc_SetNormalPointer}
0001D8B4 <AmiBlitz3.ab2@1181>   !ComData_JMP{comFunc_SetBusyPointer}
0001D8DE <AmiBlitz3.ab2@1186>   !basic
0001D8E2 <AmiBlitz3.ab2@1187>   ab3save_filenameP.l = PutD0
0001D8EC <AmiBlitz3.ab2@1188>   If ab3save_filenameP
0001D914 <AmiBlitz3.ab2@1189>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001D942 <AmiBlitz3.ab2@1191>     SaveSource{ab3save_filename}
0001D948 <AmiBlitz3.ab2@1192>   Else
0001D982 <AmiBlitz3.ab2@1193>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001D9A0 <AmiBlitz3.ab2@1195>   !asm
0001D9A2 <AmiBlitz3.ab2@1196>   RTS
0001D9CC <AmiBlitz3.ab2@1199>   !basic
0001D9D0 <AmiBlitz3.ab2@1200>   ab3save_filenameP.l = PutD0
0001D9DA <AmiBlitz3.ab2@1201>   If ab3save_filenameP
0001DA02 <AmiBlitz3.ab2@1202>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DA30 <AmiBlitz3.ab2@1203>     LoadSource{ab3save_filename}
0001DA36 <AmiBlitz3.ab2@1204>   Else
0001DA70 <AmiBlitz3.ab2@1205>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001DA8E <AmiBlitz3.ab2@1207>   !asm
0001DA90 <AmiBlitz3.ab2@1208>   RTS
0001DABA <AmiBlitz3.ab2@1211>   !basic
0001DAC0 <AmiBlitz3.ab2@1212>   ClearSource{}
0001DADE <AmiBlitz3.ab2@1213>   !asm
0001DAE0 <AmiBlitz3.ab2@1214>   RTS
0001DB0A <AmiBlitz3.ab2@1217>   !basic
0001DB10 <AmiBlitz3.ab2@1218>   OpenConsoleFake{}
0001DB2E <AmiBlitz3.ab2@1219>   !asm
0001DB30 <AmiBlitz3.ab2@1220>   RTS
0001DB5A <AmiBlitz3.ab2@1224>   !basic
0001DB60 <AmiBlitz3.ab2@1225>   CloseConsoleFake{}
0001DB7E <AmiBlitz3.ab2@1226>   !asm
0001DB80 <AmiBlitz3.ab2@1227>   RTS
0001DB86 <AmiBlitz3.ab2@1231>   MOVE.w d6,menuitemdebug
0001DBB0 <AmiBlitz3.ab2@1232>   !basic
0001DBC2 <AmiBlitz3.ab2@1233>   menuitemx.l = Peek.w(?menuitemdebug)
0001DBE8 <AmiBlitz3.ab2@1234>   If menuitemx>16 OR  menuitemx<0
0001DC5C <AmiBlitz3.ab2@1235>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001DC64 <AmiBlitz3.ab2@1236>     menuitemx=0
0001DC74 <AmiBlitz3.ab2@1238>   Poke.w ?menuitemdebug,menuitemx
0001DC92 <AmiBlitz3.ab2@1239>   !asm
0001DC98 <AmiBlitz3.ab2@1240>   MOVE.w menuitemdebug,d6
0001DC9E <AmiBlitz3.ab2@1243>   MOVE.l A5,firstitem_
0001DCA4 <AmiBlitz3.ab2@1244>   MOVE.w D7,numlines_org
0001DCAA <AmiBlitz3.ab2@1245>   MOVE.l d7,numlines
0001DCAC <AmiBlitz3.ab2@1246>   LSL.w #2,D6
0001DCB2 <AmiBlitz3.ab2@1247>   LEA menu_items,A0
0001DCB6 <AmiBlitz3.ab2@1248>   MOVEA.l $0(A0,D6.W),A0
0001DCC0 <AmiBlitz3.ab2@1249>   MOVE.l #$FFFFffff,linenumat
0001DCCA <AmiBlitz3.ab2@1250>   MOVE.l #$FFFFffff,compilelinecounter
0001DCCC <AmiBlitz3.ab2@1254>   JSR (A0)
0001DCD2 <AmiBlitz3.ab2@1255>   MOVE.l compilelinecounter,D0
0001DCD4 <AmiBlitz3.ab2@1256> RTS
0001DCD8 <AmiBlitz3.ab2@1258> menuitemdebug: Dc.l 0
0001DCDC <AmiBlitz3.ab2@1260> mempool                Dc.l 0
0001DCF2 <AmiBlitz3.ab2@1261> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001DCF8 <AmiBlitz3.ab2@1262> dloaderr:             JSR handle_compileerror
0001DD14 <AmiBlitz3.ab2@1263>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001DD52 <AmiBlitz3.ab2@1271>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001DD58 <AmiBlitz3.ab2@1272>   LEA str_loaddebugmessage,A2
0001DD5E <AmiBlitz3.ab2@1273>   LEA str_blitz3assign,A0
0001DD64 <AmiBlitz3.ab2@1274>   LEA str_temp_debugmodulename,A1
0001DD66 <AmiBlitz3.ab2@1277>   JSR (A3)
0001DD6A <AmiBlitz3.ab2@1279>   BEQ.w menu_loaddebugmodule_noload
0001DD70 <AmiBlitz3.ab2@1280>   MOVE.l D0,ptr_temp_debugmodule
0001DD74 <AmiBlitz3.ab2@1281>   BSR.w call_setpointerbusy
0001DD7A <AmiBlitz3.ab2@1282>   MOVE.l A7,errstack
0001DD84 <AmiBlitz3.ab2@1283>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001DD8A <AmiBlitz3.ab2@1284>   MOVE.l ptr_temp_debugmodule,D1
0001DD8E <AmiBlitz3.ab2@1286>   MOVEA.l _dosbase(PC),A6
0001DD92 <AmiBlitz3.ab2@1287>   JSR _LoadSeg(A6)
0001DD94 <AmiBlitz3.ab2@1288>   MOVE.l D0,D7
0001DD98 <AmiBlitz3.ab2@1289>   BEQ.w dloaderr
0001DD9E <AmiBlitz3.ab2@1290>   MOVE.l ptr_seg_debugger,D1
0001DDA2 <AmiBlitz3.ab2@1291>   BEQ.b menu_loaddebugmodule_ndseg
0001DDA6 <AmiBlitz3.ab2@1292>   MOVEA.l _dosbase(PC),A6
0001DDAA <AmiBlitz3.ab2@1293>   JSR _UnLoadSeg(A6)
0001DDAE <AmiBlitz3.ab2@1294>   BSR.w call_setpointernormal
0001DDB4 <AmiBlitz3.ab2@1297>   MOVE.l D7,ptr_seg_debugger
0001DDB6 <AmiBlitz3.ab2@1300> RTS
0001DDD4 <AmiBlitz3.ab2@1303> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001DE94 <AmiBlitz3.ab2@1304> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001DF54 <AmiBlitz3.ab2@1305> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001DF58 <AmiBlitz3.ab2@1306> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001DF82 <AmiBlitz3.ab2@1310>   !basic
0001DFAC <AmiBlitz3.ab2@1311>   exepath.s = Peek.s(?exepath)
0001DFD6 <AmiBlitz3.ab2@1312>   exefile.s = Peek.s(?exefilename)
0001E056 <AmiBlitz3.ab2@1313>   exefile.s = dos_AddPart{exepath,exefile}
0001E08E <AmiBlitz3.ab2@1314>   Poke.s ?tempspace,exefile
0001E0AC <AmiBlitz3.ab2@1315>   !asm
0001E0B2 <AmiBlitz3.ab2@1336>   LEA tempspace,a0
0001E0B4 <AmiBlitz3.ab2@1337>   MOVE.l a0,d0
0001E0B8 <AmiBlitz3.ab2@1338> BRA newcreate2
0001E0E2 <AmiBlitz3.ab2@1344>   !basic
0001E10C <AmiBlitz3.ab2@1345>   request_exename.s = Peek.s(?str_request_exename )
0001E168 <AmiBlitz3.ab2@1346>   request_exename   = !TRANS{request_exename}
0001E16E <AmiBlitz3.ab2@1347>   GetD0 &request_exename
0001E18C <AmiBlitz3.ab2@1348>   !asm
0001E18E <AmiBlitz3.ab2@1349>   MOVE.l D0,A2
0001E1CC <AmiBlitz3.ab2@1352>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E1D2 <AmiBlitz3.ab2@1354>   LEA exepath,A0
0001E1D8 <AmiBlitz3.ab2@1355>   LEA exefilename,A1
0001E1DA <AmiBlitz3.ab2@1358>   JSR (A3)                                                 ;open ped filerequest
0001E1DE <AmiBlitz3.ab2@1359>   BEQ.w cancel_createexe
0001E1E8 <AmiBlitz3.ab2@1362>   ADD.l #1,number_of_builds
0001E1EE <AmiBlitz3.ab2@1365>   MOVE.l D0,ptr_newexefilename
0001E1F6 <AmiBlitz3.ab2@1366>   MOVE.w #-1,debugversion
0001E1FC <AmiBlitz3.ab2@1367>   MOVE.w set_make_smallestcode,-(A7)
0001E204 <AmiBlitz3.ab2@1371>     MOVE.w #1,makeexec
0001E20A <AmiBlitz3.ab2@1372>     JSR ab3_OpenDebugFile
0001E20E <AmiBlitz3.ab2@1373>     BSR.w startcompile
0001E214 <AmiBlitz3.ab2@1374>     JSR ab3_CloseDebugFile
0001E21E <AmiBlitz3.ab2@1375>     CMP.l #"NORE",reqmode
0001E222 <AmiBlitz3.ab2@1376>   BEQ 'l1
0001E228 <AmiBlitz3.ab2@1378>   TST.w anyerrs
0001E22C <AmiBlitz3.ab2@1379>   BNE.b menu_createexecutable__skip
0001E230 <AmiBlitz3.ab2@1380>   BSR.w savefile
0001E236 <AmiBlitz3.ab2@1383>   MOVE.w (A7)+,set_make_smallestcode
0001E238 <AmiBlitz3.ab2@1386> RTS
0001E240 <AmiBlitz3.ab2@1390>   MOVE.w #-1,flag_noPED
0001E242 <AmiBlitz3.ab2@1391> RTS
0001E24A <AmiBlitz3.ab2@1395>   MOVE.w #-1,flag_noCLI
0001E24C <AmiBlitz3.ab2@1396> RTS
0001E276 <AmiBlitz3.ab2@1399>   !basic
0001E29E <AmiBlitz3.ab2@1400>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001E2AE <AmiBlitz3.ab2@1401>     Poke.w ?word_WriteDebugFileNow,0
0001E2CC <AmiBlitz3.ab2@1402>   !asm
0001E2CE <AmiBlitz3.ab2@1403> RTS
0001E2F8 <AmiBlitz3.ab2@1406>   !basic
0001E308 <AmiBlitz3.ab2@1407>   Poke.w ?word_WriteDebugFileNow,0
0001E31A <AmiBlitz3.ab2@1408>   If dbg_fid>=0
0001E330 <AmiBlitz3.ab2@1409>     file_Close{dbg_fid} : dbg_fid = -1
0001E342 <AmiBlitz3.ab2@1411>   If dbg_fid.l<0
0001E344 <AmiBlitz3.ab2@1412>     CLR.l d0
0001E382 <AmiBlitz3.ab2@1413>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001E386 <AmiBlitz3.ab2@1414>     dbg_Create.l = PutD0
0001E390 <AmiBlitz3.ab2@1415>     If (dbg_Create) ; only when set!
0001E3A0 <AmiBlitz3.ab2@1416>       exefileP.l = Peek.l (?ptr_newexefilename)
0001E3C8 <AmiBlitz3.ab2@1417>       exefile.s = ""
0001E3FA <AmiBlitz3.ab2@1418>       If exefileP Then exefile.s = Peek.s(exefileP)
0001E432 <AmiBlitz3.ab2@1419>       If exefile><""
0001E488 <AmiBlitz3.ab2@1420>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001E49A <AmiBlitz3.ab2@1421>         If dbg_fid>=0
0001E4AC <AmiBlitz3.ab2@1422>           Poke.w ?word_WriteDebugFileNow,-1
0001E4B8 <AmiBlitz3.ab2@1425>       oldhunkoffset.l = -1
0001E4E0 <AmiBlitz3.ab2@1426>       oldfile.s       = ""
0001E4FE <AmiBlitz3.ab2@1429>   !asm
0001E500 <AmiBlitz3.ab2@1430> RTS
0001E506 <AmiBlitz3.ab2@1433> TST.w word_WriteDebugFileNow
0001E50A <AmiBlitz3.ab2@1434> BEQ 'skipdebugfile
0001E534 <AmiBlitz3.ab2@1435> !basic
0001E546 <AmiBlitz3.ab2@1436>   If dbg_fid>=0
0001E558 <AmiBlitz3.ab2@1437>     pass.l          = Peek.w(?pass)
0001E56A <AmiBlitz3.ab2@1438>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001E58E <AmiBlitz3.ab2@1439> 
0001E594 <AmiBlitz3.ab2@1440>       oldhunkoffset.l = hunkoffset.l
0001E5C8 <AmiBlitz3.ab2@1441>       oldfile.s       = codefile.s
0001E5E4 <AmiBlitz3.ab2@1442>       If Peek.w (?ininclude)>0
0001E5F4 <AmiBlitz3.ab2@1443>         codeline.l = Peek.l(?includeline);-1
0001E664 <AmiBlitz3.ab2@1444>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001E66A <AmiBlitz3.ab2@1445>       Else
0001E698 <AmiBlitz3.ab2@1446>         !ComData_LEA{comStr_SourceName,A0}
0001E69A <AmiBlitz3.ab2@1447>         MOVE.l A0,D0
0001E69E <AmiBlitz3.ab2@1448>         sourceP.l = PutD0
0001E6C6 <AmiBlitz3.ab2@1449>         codefile.s = Peek.s(sourceP)
0001E6D6 <AmiBlitz3.ab2@1450>         codeline.l = Peek.l(?linenumat)
0001E6FE <AmiBlitz3.ab2@1452>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001E752 <AmiBlitz3.ab2@1453>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001E762 <AmiBlitz3.ab2@1460>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001E76C <AmiBlitz3.ab2@1461>         If *sourceLine
0001E782 <AmiBlitz3.ab2@1462>           MaxLen detokenline.s = 65536
0001E7C4 <AmiBlitz3.ab2@1463>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001E7D4 <AmiBlitz3.ab2@1464>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001E800 <AmiBlitz3.ab2@1465>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001E82E <AmiBlitz3.ab2@1466>           If written>0 Then Poke.b &detokenline+written-1,0
0001E858 <AmiBlitz3.ab2@1467>           sourceLineText.s = Peek.s(&detokenline)
0001E85E <AmiBlitz3.ab2@1468>         Else
0001E886 <AmiBlitz3.ab2@1469>           sourceLineText = "NULL"
0001E94E <AmiBlitz3.ab2@1472>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001E96C <AmiBlitz3.ab2@1478> !asm
0001E96E <AmiBlitz3.ab2@1480> RTS
0001E970 <AmiBlitz3.ab2@1482> word_WriteDebugFileNow: Dc.w 0
0001E972 <AmiBlitz3.ab2@1484> flag_noPED:  Ds.w 1                                        ;closeed org source
0001E974 <AmiBlitz3.ab2@1485> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001E978 <AmiBlitz3.ab2@1489>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001E97E <AmiBlitz3.ab2@1490>   MOVEA.l _execbase,A6
0001E982 <AmiBlitz3.ab2@1491>   JSR _CacheClearU(A6)
0001E986 <AmiBlitz3.ab2@1492>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001E988 <AmiBlitz3.ab2@1493> RTS
0001E98C <AmiBlitz3.ab2@1496>   MOVEM.l A2-A3,-(A7)
0001E992 <AmiBlitz3.ab2@1497>   CLR.b doublepeek
0001E998 <AmiBlitz3.ab2@1498>   MOVE.l A5,lastsourcepos
0001E99E <AmiBlitz3.ab2@1499>    JSR getchar
0001E9A2 <AmiBlitz3.ab2@1500>   CMP.w #$2E,D0
0001E9A6 <AmiBlitz3.ab2@1501>    BEQ.w JL_0_49B4b
0001E9AC <AmiBlitz3.ab2@1502>   MOVEA.l defaulttype,A2
0001E9B0 <AmiBlitz3.ab2@1503>   CMP.w #$24,D0
0001E9B4 <AmiBlitz3.ab2@1504>    BNE.w JL_0_49CAb
0001E9B6 <AmiBlitz3.ab2@1505>   MOVEQ.l #$07,D1
0001E9BA <AmiBlitz3.ab2@1506> BRA.w JL_0_49DEb
0001E9C0 <AmiBlitz3.ab2@1509>   JSR getparameter2
0001E9C4 <AmiBlitz3.ab2@1510>   BEQ.w syntaxerrb
0001E9CA <AmiBlitz3.ab2@1511>   LEA newtypebase,A2
0001E9D0 <AmiBlitz3.ab2@1512>   JSR findtype
0001E9D4 <AmiBlitz3.ab2@1513>   BNE.w notypeerrb
0001E9DE <AmiBlitz3.ab2@1518>   MOVE.w oldqflag,instringon
0001E9E4 <AmiBlitz3.ab2@1519>   MOVEA.l lastsourcepos,A5
0001E9EA <AmiBlitz3.ab2@1521>   MOVE.l a2,functionreturntype
0001E9F2 <AmiBlitz3.ab2@1522>   CMPI.l #$100,$4(A2)
0001E9F6 <AmiBlitz3.ab2@1523>   BLE.w 'isvar
0001E9F8 <AmiBlitz3.ab2@1527>   MOVEQ #3,d1
0001E9FC <AmiBlitz3.ab2@1528>   BRA JL_0_49DEb
0001EA00 <AmiBlitz3.ab2@1535>   MOVE.w $6(A2),D1
0001EA06 <AmiBlitz3.ab2@1536>   CMP.w #8,8(a2)
0001EA0A <AmiBlitz3.ab2@1537>   BNE 'l1
0001EA12 <AmiBlitz3.ab2@1538>   MOVE.b #1,doublepeek
0001EA18 <AmiBlitz3.ab2@1541>   MOVE.w D1,convsize
0001EA1C <AmiBlitz3.ab2@1542>   MOVEM.l (A7)+,A2-A3
0001EA1E <AmiBlitz3.ab2@1543> RTS
0001EA24 <AmiBlitz3.ab2@1545> notypeerrb JMP notypeerr
0001EA2A <AmiBlitz3.ab2@1546> illtypeerrb JMP illtypeerr
0001EA30 <AmiBlitz3.ab2@1547> syntaxerrb JMP syntaxerr
0001EA3A <AmiBlitz3.ab2@1592>   ADD.l #1,number_of_builds
0001EA40 <AmiBlitz3.ab2@1594>   CLR.w debugversion
0001EA46 <AmiBlitz3.ab2@1595>   CLR.w flag_noPED
0001EA4C <AmiBlitz3.ab2@1596>   CLR.w flag_noCLI
0001EA54 <AmiBlitz3.ab2@1599>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0001EA58 <AmiBlitz3.ab2@1600>     BSR.w startcompile
0001EA62 <AmiBlitz3.ab2@1601>     CMP.l #"NORE",reqmode
0001EA66 <AmiBlitz3.ab2@1602>   BEQ 'l1
0001EA6C <AmiBlitz3.ab2@1605>   TST.w anyerrs
0001EA70 <AmiBlitz3.ab2@1606>    BNE.w JL_0_3482
0001EA74 <AmiBlitz3.ab2@1608>   MOVE.w flag_noPED(PC),D1
0001EA78 <AmiBlitz3.ab2@1609>    BEQ.w skip_closingGUI
0001EAAA <AmiBlitz3.ab2@1614>   !ComData_JSR{comFunc_CloseGUI}
0001EAAE <AmiBlitz3.ab2@1615> BRA.b runprogram
0001EAB2 <AmiBlitz3.ab2@1619>   BSR.w compilerequester
0001EAB8 <AmiBlitz3.ab2@1622>   MOVEA.l _dosbase,A6
0001EABE <AmiBlitz3.ab2@1623>   LEA exepath,a0
0001EAC0 <AmiBlitz3.ab2@1624>   MOVE.l a0,d1
0001EAC2 <AmiBlitz3.ab2@1625>   MOVEQ #-2,d2
0001EAC6 <AmiBlitz3.ab2@1626>   JSR _Lock(a6)                                            ;lock
0001EACC <AmiBlitz3.ab2@1627>   MOVE.l d0,exelock
0001EAD2 <AmiBlitz3.ab2@1628>   MOVE.l #0,d1
0001EAD6 <AmiBlitz3.ab2@1629>   JSR _CurrentDir(A6)
0001EADC <AmiBlitz3.ab2@1630>   MOVE.l D0,lock_currentdir
0001EADE <AmiBlitz3.ab2@1631>   MOVE.l D0,D1
0001EAE2 <AmiBlitz3.ab2@1632>   JSR _CurrentDir(A6)
0001EAE8 <AmiBlitz3.ab2@1633>   CLR.l ptr_exetask
0001EAEE <AmiBlitz3.ab2@1642>   MOVE.l #str_process_name,D1
0001EAF0 <AmiBlitz3.ab2@1643>   MOVEQ.l #$00,D2
0001EAF6 <AmiBlitz3.ab2@1644>   MOVE.l #proc_seglist,D3
0001EAF8 <AmiBlitz3.ab2@1645>   LSR.l #2,D3
0001EAFE <AmiBlitz3.ab2@1646>   MOVE.l stacksize,D4
0001EB04 <AmiBlitz3.ab2@1647>   MOVEA.l _dosbase,A6
0001EB08 <AmiBlitz3.ab2@1648>   JSR _CreateProc(A6)                                      ;runtask
0001EB0A <AmiBlitz3.ab2@1649>   TST.l D0
0001EB0E <AmiBlitz3.ab2@1650>    BEQ ErrorRunningProg
0001EB44 <AmiBlitz3.ab2@1652>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0001EB4A <AmiBlitz3.ab2@1654>   TST.w flag_noPED
0001EB4E <AmiBlitz3.ab2@1655>    BNE.b JL_0_344E
0001EB52 <AmiBlitz3.ab2@1656>   BSR.w close_compilewin
0001EB58 <AmiBlitz3.ab2@1659>   CLR.l firstlocal
0001EB5E <AmiBlitz3.ab2@1660>   CLR.l firstglob
0001EB62 <AmiBlitz3.ab2@1661>   MOVE.w flag_noPED(PC),D1
0001EB66 <AmiBlitz3.ab2@1662>   BEQ.w skip_openGUI
0001EB98 <AmiBlitz3.ab2@1666>   !ComData_JSR{comFunc_CreateGUI}
0001EB9A <AmiBlitz3.ab2@1675> RTS
0001EBA4 <AmiBlitz3.ab2@1678> MOVE.l #1,_runerror
0001EBA8 <AmiBlitz3.ab2@1679> BRA JL_0_344E
0001EBAC <AmiBlitz3.ab2@1681> _runerror: Dc.l 0
0001EBB0 <AmiBlitz3.ab2@1682> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0001EBB4 <AmiBlitz3.ab2@1683> ptr_exetask:        Ds.l 1                                          ;panictask org source
0001EBB8 <AmiBlitz3.ab2@1684> signalNum:          Ds.l 1                                          ;panicbit org source
0001EBBC <AmiBlitz3.ab2@1685> signals:            Ds.l 1                                          ;panicmask org source
0001EBD2 <AmiBlitz3.ab2@1687> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0001EBD7 <AmiBlitz3.ab2@1688>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0001EBD8 <AmiBlitz3.ab2@1689> Even4
0001EBDC <AmiBlitz3.ab2@1691> ptr_ThisTask:       Ds.l 1                                          ;length
0001EBE0 <AmiBlitz3.ab2@1692> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0001EBE6 <AmiBlitz3.ab2@1696>   MOVEA.l $4,A0
0001EBEE <AmiBlitz3.ab2@1697>   MOVE.l  $114(A0),ptr_exetask
0001EBF4 <AmiBlitz3.ab2@1699>   MOVEA.l _dosbase,A6
0001EBFA <AmiBlitz3.ab2@1700>   MOVE.l exelock,D1
0001EBFE <AmiBlitz3.ab2@1701>   JSR _CurrentDir(A6)
0001EC34 <AmiBlitz3.ab2@1706>   !ComData_SetB{comByte_RunningFlag,#1}
0001EC38 <AmiBlitz3.ab2@1712>   MOVE.w flag_noCLI(PC),D1
0001EC3C <AmiBlitz3.ab2@1713>    BNE.b skip_openconsole
0001EC6E <AmiBlitz3.ab2@1717>   !ComData_JSR{comFunc_OpenConsole}
0001EC72 <AmiBlitz3.ab2@1720>   BSR.w calcvbr
0001EC78 <AmiBlitz3.ab2@1721>   MOVEA.l vbr,A0
0001EC7E <AmiBlitz3.ab2@1726>   CLR.w dirmode
0001EC84 <AmiBlitz3.ab2@1727>   CLR.l firstglob
0001EC8A <AmiBlitz3.ab2@1728>   CLR.l firstlocal
0001EC90 <AmiBlitz3.ab2@1730>   MOVE.l stacksize,D2
0001EC96 <AmiBlitz3.ab2@1731>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0001EC9C <AmiBlitz3.ab2@1732>   LEA str_cliarguments,A0                                   ;cli arguement
0001ECA2 <AmiBlitz3.ab2@1733>   MOVEA.l destbufferstart,A1
0001ECA6 <AmiBlitz3.ab2@1734>   BSR.w Aclearcache
0001ECA8 <AmiBlitz3.ab2@1737>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0001ECAE <AmiBlitz3.ab2@1739>   MOVEA.l vbr,A0
0001ECB4 <AmiBlitz3.ab2@1741>   CLR.l firstglob
0001ECBA <AmiBlitz3.ab2@1742>   CLR.l firstlocal
0001ECC0 <AmiBlitz3.ab2@1743>   MOVEA.l _dosbase,A6
0001ECC6 <AmiBlitz3.ab2@1744>   MOVE.l exelock,d1
0001ECCA <AmiBlitz3.ab2@1745>   BEQ 'nolock
0001ECCE <AmiBlitz3.ab2@1746>   JSR _UnLock(a6)
0001ED04 <AmiBlitz3.ab2@1751>   !ComData_SetB{comByte_RunningFlag,#0}
0001ED08 <AmiBlitz3.ab2@1754>   MOVE.w flag_noCLI(PC),D1
0001ED0C <AmiBlitz3.ab2@1755>    BNE.b skip_closeconsole
0001ED3E <AmiBlitz3.ab2@1759>   !ComData_JSR{comFunc_CloseConsole}
0001ED46 <AmiBlitz3.ab2@1762>   MOVE.w #$0001,stopit
0001ED4A <AmiBlitz3.ab2@1763>   MOVE.l signals(PC),D0
0001ED50 <AmiBlitz3.ab2@1764>   MOVEA.l ptr_ThisTask,A1
0001ED56 <AmiBlitz3.ab2@1765>   MOVEA.l _execbase,A6
0001ED5A <AmiBlitz3.ab2@1766>   JSR _Signal(A6)
0001ED5C <AmiBlitz3.ab2@1767> RTS
0001ED62 <AmiBlitz3.ab2@1771>   MOVEA.l _execbase,A6
0001ED66 <AmiBlitz3.ab2@1772>   MOVE.w $128(A6),D0
0001ED68 <AmiBlitz3.ab2@1773>   MOVEQ.l #$00,D1
0001ED6C <AmiBlitz3.ab2@1774>   ANDI.w #$F,D0
0001ED70 <AmiBlitz3.ab2@1777>     BEQ.b calcvbr__skip
0001ED72 <AmiBlitz3.ab2@1778>     ADDQ.w #1,D1
0001ED74 <AmiBlitz3.ab2@1779>     LSR.w #1,D0
0001ED78 <AmiBlitz3.ab2@1780> BRA.b calcvbr_loop
0001ED7A <AmiBlitz3.ab2@1783>   MOVEQ.l #$00,D2
0001ED7E <AmiBlitz3.ab2@1784>   CMP.w #$2,D1
0001ED82 <AmiBlitz3.ab2@1785>    BCS.b calcvbr__skip2
0001ED88 <AmiBlitz3.ab2@1786>   MOVEA.l _execbase,A6
0001ED8C <AmiBlitz3.ab2@1787>   JSR _SuperState(A6)
0001ED90 <AmiBlitz3.ab2@1788>   Dc.l $4E7A2801                                           ;movec vbr,D2
0001ED94 <AmiBlitz3.ab2@1789>   JSR _UserState(A6)
0001ED9A <AmiBlitz3.ab2@1792>   MOVE.l D2,vbr
0001ED9C <AmiBlitz3.ab2@1793> RTS
0001EDA2 <AmiBlitz3.ab2@1797>   LEA instrtab,a0
0001EDA8 <AmiBlitz3.ab2@1798>   MOVE.l #labelhash-instrtab,d0
0001EDAA <AmiBlitz3.ab2@1799>   ASR.l #2,d0
0001EDAC <AmiBlitz3.ab2@1800>   SUBQ.l #1,d0
0001EDAE <AmiBlitz3.ab2@1803>   CLR.l (a0)+
0001EDB0 <AmiBlitz3.ab2@1804>   SUBQ.l #1,d0
0001EDB4 <AmiBlitz3.ab2@1805>   BNE 'l10
0001EDB8 <AmiBlitz3.ab2@1806>   BSR.w call_setpointerbusy
0001EDBC <AmiBlitz3.ab2@1807>   BSR.w free_userlibs
0001EDC0 <AmiBlitz3.ab2@1808>   BSR.w scan_for_userlibs
0001EDC4 <AmiBlitz3.ab2@1809>   BSR.w JL_0_7082
0001EDC8 <AmiBlitz3.ab2@1810> BRA.w call_setpointernormal
0001EDF2 <AmiBlitz3.ab2@1816>   !basic
0001EE2C <AmiBlitz3.ab2@1817>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
0001EE3C <AmiBlitz3.ab2@1819>   deflibNameP.l = Peek.l(?deflib)
0001EE46 <AmiBlitz3.ab2@1820>   If deflibNameP
0001EE78 <AmiBlitz3.ab2@1821>     If Peek.s(deflibNameP)<>""
0001EEC2 <AmiBlitz3.ab2@1822>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
0001EEC8 <AmiBlitz3.ab2@1823>     Else
0001EF02 <AmiBlitz3.ab2@1824>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001EF08 <AmiBlitz3.ab2@1826>   Else
0001EF42 <AmiBlitz3.ab2@1827>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001EF7C <AmiBlitz3.ab2@1828>     error{"INTERNAL: Invalid deflib name pointer!"}
0001EF9A <AmiBlitz3.ab2@1830>   !asm
0001EFA0 <AmiBlitz3.ab2@1835>   MOVE.l #str_path_userlibs,D1
0001EFA2 <AmiBlitz3.ab2@1836>   MOVEQ.l #-$02,D2
0001EFA8 <AmiBlitz3.ab2@1837>   MOVEA.l _dosbase,A6
0001EFAC <AmiBlitz3.ab2@1838>   JSR _Lock(A6)
0001EFAE <AmiBlitz3.ab2@1839>   MOVE.l D0,D7
0001EFB2 <AmiBlitz3.ab2@1840>    BEQ.w exit_get_libraries
0001EFB4 <AmiBlitz3.ab2@1841>   MOVE.l D7,D1
0001EFBA <AmiBlitz3.ab2@1842>   MOVE.l #ptr_parameterstore,D2
0001EFBE <AmiBlitz3.ab2@1843>   JSR _Examine(A6)
0001EFC0 <AmiBlitz3.ab2@1844>   TST.l D0
0001EFC4 <AmiBlitz3.ab2@1845>   BEQ.w unlock_and_exit_get_libraries
0001EFCA <AmiBlitz3.ab2@1846>   MOVE.l fib_DirEntryType,D0
0001EFCE <AmiBlitz3.ab2@1847>   BMI.w unlock_and_exit_get_libraries
0001EFD0 <AmiBlitz3.ab2@1852>     MOVE.l D7,D1
0001EFD6 <AmiBlitz3.ab2@1853>     MOVE.l #ptr_parameterstore,D2
0001EFDC <AmiBlitz3.ab2@1854>     MOVEA.l _dosbase,A6
0001EFE0 <AmiBlitz3.ab2@1855>     JSR _ExNext(A6)
0001EFE2 <AmiBlitz3.ab2@1856>     TST.l D0
0001EFE6 <AmiBlitz3.ab2@1857>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
0001EFEC <AmiBlitz3.ab2@1859>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
0001EFF0 <AmiBlitz3.ab2@1860>     BPL.w scan_libsdrawer                                  ; skip directories
0001EFF6 <AmiBlitz3.ab2@1862>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0001EFFA <AmiBlitz3.ab2@1863>     BSR.w check_for_infoextention
0001EFFE <AmiBlitz3.ab2@1864>     BEQ.w scan_libsdrawer
0001F004 <AmiBlitz3.ab2@1866>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0001F006 <AmiBlitz3.ab2@1867>     MOVEQ.l #$26,D0
0001F008 <AmiBlitz3.ab2@1868>     MOVEQ.l #$01,D1
0001F00E <AmiBlitz3.ab2@1869>     MOVE.l mempool,a0
0001F012 <AmiBlitz3.ab2@1870>     JSR _AllocPooled(a6)
0001F018 <AmiBlitz3.ab2@1872>     MOVEA.l _dosbase,A6
0001F01A <AmiBlitz3.ab2@1873>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0001F020 <AmiBlitz3.ab2@1876>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0001F022 <AmiBlitz3.ab2@1879>     MOVE.l (A0),D5
0001F026 <AmiBlitz3.ab2@1880>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0001F028 <AmiBlitz3.ab2@1881>     MOVEA.l D5,A2
0001F02A <AmiBlitz3.ab2@1882>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0001F030 <AmiBlitz3.ab2@1885>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0001F032 <AmiBlitz3.ab2@1888>       MOVEQ.l #$00,D0
0001F034 <AmiBlitz3.ab2@1889>       MOVE.b (A1)+,D0
0001F038 <AmiBlitz3.ab2@1890>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0001F03A <AmiBlitz3.ab2@1891>       MOVEQ.l #$00,D1
0001F03C <AmiBlitz3.ab2@1892>       MOVE.b (A2)+,D1
0001F040 <AmiBlitz3.ab2@1893>        BEQ.w JL_0_371C
0001F062 <AmiBlitz3.ab2@1894>       !compare1                                            ;bsr.w tstalpha
0001F066 <AmiBlitz3.ab2@1895>       BNE.w JL_0_3702
0001F06A <AmiBlitz3.ab2@1896>       ANDI.w #$DF,D0
0001F06C <AmiBlitz3.ab2@1899>       EXG.l D0,D1
0001F08E <AmiBlitz3.ab2@1900>       !compare1                                            ;bsr.w tstalpha
0001F092 <AmiBlitz3.ab2@1901>       BNE.w JL_0_3710
0001F096 <AmiBlitz3.ab2@1902>       ANDI.w #$DF,D0
0001F098 <AmiBlitz3.ab2@1905>       EXG.l D0,D1
0001F09A <AmiBlitz3.ab2@1906>       CMP.b D1,D0
0001F09E <AmiBlitz3.ab2@1907>     BEQ.w JL_0_36E6
0001F0A2 <AmiBlitz3.ab2@1908>     BCS.w JL_0_3722
0001F0A4 <AmiBlitz3.ab2@1911>     MOVEA.l D5,A0
0001F0A8 <AmiBlitz3.ab2@1912> BRA.w JL_0_36D6
0001F0AA <AmiBlitz3.ab2@1915>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
0001F0AC <AmiBlitz3.ab2@1916>     MOVE.l (A0),(A1)
0001F0AE <AmiBlitz3.ab2@1917>     MOVE.l A1,(A0)
0001F0B0 <AmiBlitz3.ab2@1918>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
0001F0B4 <AmiBlitz3.ab2@1919>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0001F0BA <AmiBlitz3.ab2@1920>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
0001F0BC <AmiBlitz3.ab2@1923>       MOVE.b (A0)+,(A1)+
0001F0C0 <AmiBlitz3.ab2@1924>     BNE.w JL_0_3734
0001F0C4 <AmiBlitz3.ab2@1925> BRA.w scan_libsdrawer
0001F0C6 <AmiBlitz3.ab2@1928>   MOVE.l D7,D1
0001F0CC <AmiBlitz3.ab2@1929>   MOVEA.l _dosbase,A6
0001F0D0 <AmiBlitz3.ab2@1930>   JSR _UnLock(A6)
0001F0D2 <AmiBlitz3.ab2@1931>   MOVEQ.l #-$01,D0
0001F0D4 <AmiBlitz3.ab2@1934> RTS
0001F0D6 <AmiBlitz3.ab2@1937>   MOVE.l D7,D1
0001F0DC <AmiBlitz3.ab2@1938>   MOVEA.l _dosbase,A6
0001F0E0 <AmiBlitz3.ab2@1939>   JSR _UnLock(A6)
0001F0E2 <AmiBlitz3.ab2@1940>   MOVEQ.l #$00,D0
0001F0E4 <AmiBlitz3.ab2@1941> RTS
0001F0EA <AmiBlitz3.ab2@1945>   MOVEA.l _execbase,A6
0001F0F0 <AmiBlitz3.ab2@1946>   MOVEA.l ptr_userlibs_list,A2
0001F0F6 <AmiBlitz3.ab2@1947>   CLR.l ptr_userlibs_list
0001F0FA <AmiBlitz3.ab2@1950>     CMPA.w #$0,A2
0001F0FE <AmiBlitz3.ab2@1951>     BEQ.w exit_free_userlib
0001F100 <AmiBlitz3.ab2@1952>       MOVEA.l A2,A1
0001F102 <AmiBlitz3.ab2@1953>       MOVEQ.l #$26,D0
0001F104 <AmiBlitz3.ab2@1954>       MOVEA.l (A2),A2
0001F10A <AmiBlitz3.ab2@1955>       MOVE.l mempool,a0
0001F110 <AmiBlitz3.ab2@1956>       MOVEA.l _execbase,A6
0001F114 <AmiBlitz3.ab2@1957>       JSR _FreePooled(A6)
0001F118 <AmiBlitz3.ab2@1958> BRA.w loop_free_userlib
0001F11A <AmiBlitz3.ab2@1961> RTS
0001F11C <AmiBlitz3.ab2@1964> pass:  Dc.w 0                                             ; smallpass org source
0001F11E <AmiBlitz3.ab2@1965> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
0001F124 <AmiBlitz3.ab2@1969>   MOVE.l A7,errstack                                      ;startcompile
0001F12A <AmiBlitz3.ab2@1978>   CLR.l reqmode
0001F134 <AmiBlitz3.ab2@1980>   MOVE.l #Aclearallvars,errcont
0001F13E <AmiBlitz3.ab2@1981>   MOVE.l #concomstack,concomsp
0001F142 <AmiBlitz3.ab2@1988>   MOVE.w #1450,D0
0001F144 <AmiBlitz3.ab2@1989>   LSR.w #3,D0
0001F146 <AmiBlitz3.ab2@1990>   SUBQ.w #7,D0                                             ; 173
0001F14C <AmiBlitz3.ab2@1991>   MOVE.w D0,progressbar_width
0001F14E <AmiBlitz3.ab2@1992>   SWAP D0
0001F150 <AmiBlitz3.ab2@1993>   CLR.w D0
0001F156 <AmiBlitz3.ab2@1994>   MOVE.l numlines,d1
0001F15A <AmiBlitz3.ab2@1995>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0001F15C <AmiBlitz3.ab2@1997>   TST.w D0
0001F160 <AmiBlitz3.ab2@1998>   BNE.w JL_0_37C0
0001F162 <AmiBlitz3.ab2@1999>   MOVEQ.l #-$01,D0
0001F168 <AmiBlitz3.ab2@2002>   MOVE.w D0,progress_per_line
0001F170 <AmiBlitz3.ab2@2010>   BTST #$7,use_debugger
0001F174 <AmiBlitz3.ab2@2012>   BNE 'debugon
0001F17A <AmiBlitz3.ab2@2013>   CLR.w debugmode
0001F17E <AmiBlitz3.ab2@2014> BRA.b 'debugoff
0001F184 <AmiBlitz3.ab2@2017>   SNE debugmode
0001F1BC <AmiBlitz3.ab2@2025>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F1C2 <AmiBlitz3.ab2@2028>   CLR.w dirmode                                            ;direct mode flag
0001F1C8 <AmiBlitz3.ab2@2029>   CLR.w ezerr                                              ;quiet error
0001F1CE <AmiBlitz3.ab2@2030>   CLR.l currentfunction
0001F1D4 <AmiBlitz3.ab2@2031>   CLR.w connest
0001F1DA <AmiBlitz3.ab2@2032>   CLR.w varmode
0001F1E0 <AmiBlitz3.ab2@2033>   CLR.w proceduremode
0001F1E6 <AmiBlitz3.ab2@2034>   CLR.w ininclude
0001F1EC <AmiBlitz3.ab2@2035>   CLR.w intstring
0001F1F2 <AmiBlitz3.ab2@2036>   CLR.w pass
0001F1FA <AmiBlitz3.ab2@2037>   MOVE.w #0,compiler_job
0001F200 <AmiBlitz3.ab2@2038>   CLR.l funcscanon
0001F206 <AmiBlitz3.ab2@2046>   CLR.l funcscanon
0001F20A <AmiBlitz3.ab2@2047>   BSR.w compileall
0001F210 <AmiBlitz3.ab2@2049>   MOVE.w dontwrite,d0
0001F214 <AmiBlitz3.ab2@2050>   CMP.w #1,d0
0001F218 <AmiBlitz3.ab2@2051>   BNE 'l3
0001F21E <AmiBlitz3.ab2@2052>   TST.l errorcounter
0001F222 <AmiBlitz3.ab2@2053>   BNE 'l3
0001F228 <AmiBlitz3.ab2@2054>   CLR.w dontwrite
0001F22C <AmiBlitz3.ab2@2055>   BSR compileall                                           ;if a function is not found
0001F232 <AmiBlitz3.ab2@2059>   TST.b funcoptimize
0001F238 <AmiBlitz3.ab2@2061>   LEA firstproc,a0
0001F23E <AmiBlitz3.ab2@2062>   CLR.l savefuncspace
0001F240 <AmiBlitz3.ab2@2063>   MOVE.l (a0),d0
0001F242 <AmiBlitz3.ab2@2067>     MOVE.l d0,a0
0001F246 <AmiBlitz3.ab2@2068>     BEQ 'out
0001F24A <AmiBlitz3.ab2@2069>     TST.b isfunc(a0)
0001F24E <AmiBlitz3.ab2@2070>     BNE 'nex
0001F252 <AmiBlitz3.ab2@2071>     MOVEM.l d2/a6/a0,-(a7)
0001F254 <AmiBlitz3.ab2@2073>     MOVEQ #0,d0
0001F258 <AmiBlitz3.ab2@2074>     MOVE.b $21+#funcentry_extend-1(a0),d0
0001F25C <AmiBlitz3.ab2@2075>     SUB.w #$21+#funcentry_extend,d0
0001F260 <AmiBlitz3.ab2@2076>     ADD.w #16,d0
0001F266 <AmiBlitz3.ab2@2077>     MOVE.l #$10000,d1
0001F268 <AmiBlitz3.ab2@2078>     MOVE.l d0,d2
0001F26E <AmiBlitz3.ab2@2079>     MOVEA.l _execbase,A6
0001F272 <AmiBlitz3.ab2@2080>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0001F274 <AmiBlitz3.ab2@2081>     MOVE.l d0,a1
0001F278 <AmiBlitz3.ab2@2082>     MOVE.l d2,4(a1)
0001F27E <AmiBlitz3.ab2@2083>     MOVE.l unusedfunc,(a1)
0001F284 <AmiBlitz3.ab2@2084>     MOVE.l d0,unusedfunc
0001F288 <AmiBlitz3.ab2@2085>     MOVEM.l (a7)+,a6/a0/d2
0001F28C <AmiBlitz3.ab2@2086>     MOVE.l isfunc+1(a0),d0
0001F28E <AmiBlitz3.ab2@2087>     ADDQ.l #6,d0
0001F294 <AmiBlitz3.ab2@2088>     ADD.l d0,savefuncspace
0001F298 <AmiBlitz3.ab2@2091>     MOVE.l d0,8(a1)
0001F29C <AmiBlitz3.ab2@2092>     LEA 12(a1),a1
0001F29E <AmiBlitz3.ab2@2093>     MOVE.l a0,-(a7)
0001F2A2 <AmiBlitz3.ab2@2094>     LEA $21+#funcentry_extend(a0),a0
0001F2A4 <AmiBlitz3.ab2@2097>       MOVE.b (a0)+,(a1)+
0001F2A8 <AmiBlitz3.ab2@2098>     BNE 'l1
0001F2AA <AmiBlitz3.ab2@2099>     MOVE.l (a7)+,a0
0001F2AC <AmiBlitz3.ab2@2102>     MOVE.l (a0),d0
0001F2B0 <AmiBlitz3.ab2@2103> BRA 'lr1
0001F2B8 <AmiBlitz3.ab2@2106>   BTST #$7,make_smallestcode
0001F2BC <AmiBlitz3.ab2@2107>   BEQ.b JL_0_3844                                           ;optimize for executable
0001F2C2 <AmiBlitz3.ab2@2108>   CLR.l morememadd
0001F2C6 <AmiBlitz3.ab2@2110>   BSR.w alloxadj
0001F2CA <AmiBlitz3.ab2@2111>   BEQ.w JL_0_388A
0001F2D0 <AmiBlitz3.ab2@2112>   ADDQ.w #1,pass
0001F2D4 <AmiBlitz3.ab2@2113>   BSR.w compileall
0001F2DA <AmiBlitz3.ab2@2116>   MOVE.w dontwrite,D1
0001F2DE <AmiBlitz3.ab2@2117>   BEQ.w JL_0_38A2
0001F2E2 <AmiBlitz3.ab2@2136> BRA.w JL_0_3896
0001F2EA <AmiBlitz3.ab2@2147>   MOVE.w #$FFFF,anyerrs
0001F2EE <AmiBlitz3.ab2@2148> BRA.w JL_0_38A2
0001F2F2 <AmiBlitz3.ab2@2151>   BSR.w alloxinc                                          ;increase all by 50%
0001F2F6 <AmiBlitz3.ab2@2152>   BEQ.w Aclearallvars
0001F2FA <AmiBlitz3.ab2@2153> BRA.w JL_0_3824
0001F2FE <AmiBlitz3.ab2@2165> BRA.w JL_0_38A6                                            ;???????
0001F304 <AmiBlitz3.ab2@2169>   JSR freereps
0001F30A <AmiBlitz3.ab2@2170>   JSR freesels
0001F310 <AmiBlitz3.ab2@2171>   JSR AJL_0_6DF2
0001F316 <AmiBlitz3.ab2@2172>   JSR freepends
0001F31C <AmiBlitz3.ab2@2173>   JSR freeifs
0001F322 <AmiBlitz3.ab2@2174>   JSR AJL_0_C188
0001F328 <AmiBlitz3.ab2@2175>   JSR AJL_0_C15C
0001F32E <AmiBlitz3.ab2@2176>   JSR AJL_0_D9BC
0001F334 <AmiBlitz3.ab2@2179> JMP cleartemplabel
0001F338 <AmiBlitz3.ab2@2182> mempool2:  Dc.l 0
0001F33E <AmiBlitz3.ab2@2186>   JSR Aclearcache
0001F346 <AmiBlitz3.ab2@2188>   BTST #$7,use_debugger
0001F34A <AmiBlitz3.ab2@2190>   BNE 'debugon
0001F350 <AmiBlitz3.ab2@2191>   CLR.w debugmode
0001F354 <AmiBlitz3.ab2@2192> BRA.b 'debugoff
0001F35A <AmiBlitz3.ab2@2195>   SNE debugmode
0001F392 <AmiBlitz3.ab2@2200>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F398 <AmiBlitz3.ab2@2202>   LEA regtable,a0
0001F39A <AmiBlitz3.ab2@2203>   MOVEQ #10,d0
0001F39C <AmiBlitz3.ab2@2206>     CLR.l (a0)+
0001F3A0 <AmiBlitz3.ab2@2207>   DBF d0,'l1
0001F3A6 <AmiBlitz3.ab2@2209>   LEA includetemp2,a0
0001F3A8 <AmiBlitz3.ab2@2210>   CLR.b (a0)
0001F3B2 <AmiBlitz3.ab2@2211>   MOVE.l #7,maxregs
0001F3B8 <AmiBlitz3.ab2@2212>   CLR.w debugnest
0001F3BE <AmiBlitz3.ab2@2213>   CLR.b funcparloop
0001F3C4 <AmiBlitz3.ab2@2214>   CLR.b nostringopt
0001F3CA <AmiBlitz3.ab2@2215>   CLR.b firsttime
0001F3D0 <AmiBlitz3.ab2@2216>   CLR.l lastdestpointer
0001F3D6 <AmiBlitz3.ab2@2217>   CLR.l lastwritedat
0001F3DC <AmiBlitz3.ab2@2218>   CLR.l prevwritedat
0001F3E2 <AmiBlitz3.ab2@2219>   CLR.l includeline
0001F3E8 <AmiBlitz3.ab2@2220>   CLR.b incnif
0001F3EE <AmiBlitz3.ab2@2221>   CLR.b formode
0001F3F4 <AmiBlitz3.ab2@2222>   CLR.b funccall
0001F3FA <AmiBlitz3.ab2@2223>   CLR.w objectcount
0001F400 <AmiBlitz3.ab2@2224>   CLR.b resdisable
0001F406 <AmiBlitz3.ab2@2225>   CLR.b developobject
0001F40C <AmiBlitz3.ab2@2226>   CLR.b optistring
0001F412 <AmiBlitz3.ab2@2227>   CLR.b optistring2
0001F418 <AmiBlitz3.ab2@2228>   CLR.b optiarray
0001F41E <AmiBlitz3.ab2@2229>   CLR.b quickadd
0001F424 <AmiBlitz3.ab2@2230>   CLR.w newmode
0001F42A <AmiBlitz3.ab2@2231>   CLR.w mode
0001F430 <AmiBlitz3.ab2@2232>   CLR.w string1
0001F436 <AmiBlitz3.ab2@2233>   CLR.b fastfunc
0001F43C <AmiBlitz3.ab2@2234>   CLR.w load_var_size
0001F442 <AmiBlitz3.ab2@2235>   CLR.w load_var_reg
0001F448 <AmiBlitz3.ab2@2236>   CLR.l load_var_addr
0001F44E <AmiBlitz3.ab2@2237>   CLR.w imm_size
0001F454 <AmiBlitz3.ab2@2238>   CLR.w imm_reg
0001F45A <AmiBlitz3.ab2@2239>   CLR.l imm_addr
0001F460 <AmiBlitz3.ab2@2240>   CLR.b _dcb
0001F466 <AmiBlitz3.ab2@2241>   CLR.l nohunkoffset
0001F46C <AmiBlitz3.ab2@2242>   CLR.b peekaddrsize
0001F472 <AmiBlitz3.ab2@2243>   CLR.b typecheck
0001F478 <AmiBlitz3.ab2@2244>   CLR.b declare2
0001F47E <AmiBlitz3.ab2@2245>   CLR.b declare
0001F484 <AmiBlitz3.ab2@2246>   CLR.l myoline                                          ;check
0001F48A <AmiBlitz3.ab2@2247>   CLR.l myline                                          ;check
0001F490 <AmiBlitz3.ab2@2248>   CLR.b newvariable
0001F496 <AmiBlitz3.ab2@2249>   CLR.b saved0
0001F49C <AmiBlitz3.ab2@2250>   CLR.l bsssize
0001F4A2 <AmiBlitz3.ab2@2251>   CLR.l chipsize
0001F4A8 <AmiBlitz3.ab2@2252>   CLR.b infunctioncode
0001F4AE <AmiBlitz3.ab2@2253>   CLR.l errorcounter
0001F4B8 <AmiBlitz3.ab2@2254>   MOVE.l #-1,bssstart
0001F4C2 <AmiBlitz3.ab2@2255>   MOVE.l #-1,bssend
0001F4CC <AmiBlitz3.ab2@2256>   MOVE.l #-1,chipstart
0001F4D6 <AmiBlitz3.ab2@2257>   MOVE.l #-1,chipend
0001F4DE <AmiBlitz3.ab2@2258>   MOVE.w #0,bssmode
0001F4E4 <AmiBlitz3.ab2@2259>   CLR.w a2offset
0001F4EA <AmiBlitz3.ab2@2260>   CLR.w fast
0001F4F0 <AmiBlitz3.ab2@2261>   CLR.w fpu
0001F4F6 <AmiBlitz3.ab2@2262>   CLR.b iee
0001F4FC <AmiBlitz3.ab2@2263>   CLR.w newsyntax
0001F500 <AmiBlitz3.ab2@2264>   BSR.w JL_0_38A6
0001F506 <AmiBlitz3.ab2@2265>   JSR AJL_0_7962
0001F50C <AmiBlitz3.ab2@2266>   JSR frallvars
0001F512 <AmiBlitz3.ab2@2267>   JSR fralltypes
0001F518 <AmiBlitz3.ab2@2268>   JSR freemacs
0001F51E <AmiBlitz3.ab2@2269>   JSR clearfunctionlist
0001F524 <AmiBlitz3.ab2@2270>   TST.w pass
0001F52A <AmiBlitz3.ab2@2272>   JSR clearlabels
0001F530 <AmiBlitz3.ab2@2273>   JSR clearhash
0001F536 <AmiBlitz3.ab2@2276>   LEA devo,a0
0001F53A <AmiBlitz3.ab2@2277>   MOVEM.l a0-a6/d0-d7,-(a7)
0001F540 <AmiBlitz3.ab2@2278>   LEA ptr_parameterstore,a1
0001F542 <AmiBlitz3.ab2@2281>     MOVE.b (a0)+,(a1)+
0001F546 <AmiBlitz3.ab2@2282>   BNE 'l1b
0001F548 <AmiBlitz3.ab2@2283>   MOVEQ #13,d2
0001F54E <AmiBlitz3.ab2@2284>   JSR findlabel2
0001F552 <AmiBlitz3.ab2@2285>   BNE 'd
0001F556 <AmiBlitz3.ab2@2286>   CLR.l 8(a2)
0001F55A <AmiBlitz3.ab2@2289>   MOVEM.l (a7)+,a0-a6/d0-d7
0001F584 <AmiBlitz3.ab2@2290>   !basic
0001F5F8 <AmiBlitz3.ab2@2291>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0001F616 <AmiBlitz3.ab2@2292>   !asm
0001F61C <AmiBlitz3.ab2@2293>   CLR.b returncode
0001F622 <AmiBlitz3.ab2@2294> JMP freeprocvs
0001F628 <AmiBlitz3.ab2@2298>   MOVE.l #bssstore-labelhash,d0
0001F62A <AmiBlitz3.ab2@2299>   ASR.l #2,d0
0001F630 <AmiBlitz3.ab2@2300>   LEA labelhash,a0
0001F632 <AmiBlitz3.ab2@2303>     CLR.l (a0)+
0001F634 <AmiBlitz3.ab2@2304>     SUBQ.l #1,d0
0001F638 <AmiBlitz3.ab2@2305>   BNE.s 'l10
0001F63E <AmiBlitz3.ab2@2307>   LEA labelbase,a1
0001F640 <AmiBlitz3.ab2@2308>   MOVE.l (a1),d0
0001F644 <AmiBlitz3.ab2@2309>   BEQ 'l11
0001F646 <AmiBlitz3.ab2@2312>     MOVE.l d0,a1
0001F64A <AmiBlitz3.ab2@2313>     TST.l 4(a1)
0001F64E <AmiBlitz3.ab2@2314>     BEQ 'l29
0001F652 <AmiBlitz3.ab2@2315>     LEA $13(a1),a0
0001F654 <AmiBlitz3.ab2@2316>     MOVEQ #0,d0
0001F656 <AmiBlitz3.ab2@2317>     MOVEQ #0,d1
0001F658 <AmiBlitz3.ab2@2320>       MOVE.b (a0)+,d1
0001F65C <AmiBlitz3.ab2@2321>       BEQ 'l12
0001F662 <AmiBlitz3.ab2@2322>       !hashalgo
0001F666 <AmiBlitz3.ab2@2323> BRA 'l13
0001F66C <AmiBlitz3.ab2@2326>     LEA labelhash,a0
0001F672 <AmiBlitz3.ab2@2327>     AND.l #hashsize,d0
0001F674 <AmiBlitz3.ab2@2328>      ASL.l #2,d0
0001F678 <AmiBlitz3.ab2@2329>     MOVE.l 0(a0,d0),d1                                     ;*4
0001F67C <AmiBlitz3.ab2@2330>     MOVE.l d1,$c(a1)
0001F680 <AmiBlitz3.ab2@2331>     MOVE.l a1,0(a0,d0)
0001F682 <AmiBlitz3.ab2@2334>     MOVE.l (a1),d0
0001F686 <AmiBlitz3.ab2@2335>   BNE 'l21
0001F688 <AmiBlitz3.ab2@2338> RTS
0001F68E <AmiBlitz3.ab2@2342>   MOVEA.l lastrestype,A0
0001F690 <AmiBlitz3.ab2@2343>   MOVEA.l (A0),A2
0001F692 <AmiBlitz3.ab2@2344>   CLR.l (A0)
0001F698 <AmiBlitz3.ab2@2345> JMP freetypes
0001F69E <AmiBlitz3.ab2@2349>   MOVEA.l varbase,A3
0001F6A4 <AmiBlitz3.ab2@2350>   CLR.l varbase
0001F6A8 <AmiBlitz3.ab2@2353>   CMPA.w #$0,A3
0001F6AC <AmiBlitz3.ab2@2354>   BEQ.w 'l20
0001F6AE <AmiBlitz3.ab2@2355>   MOVEA.l A3,A1
0001F6B0 <AmiBlitz3.ab2@2356>   MOVEA.l (A3),A3
0001F6B2 <AmiBlitz3.ab2@2357>   MOVEQ.l #$00,D0
0001F6B6 <AmiBlitz3.ab2@2358>   MOVE.b $E+4(A1),D0
0001F6BC <AmiBlitz3.ab2@2359>   MOVEA.l _execbase,A6
0001F6C2 <AmiBlitz3.ab2@2360>   MOVE.l mempool2,a0
0001F6C6 <AmiBlitz3.ab2@2361>   JSR _FreePooled(A6)
0001F6CA <AmiBlitz3.ab2@2362> BRA.w 'l10
0001F6CC <AmiBlitz3.ab2@2365> RTS
0001F6D2 <AmiBlitz3.ab2@2370>   LEA firstiff,A2
0001F6D4 <AmiBlitz3.ab2@2371>   MOVEQ.l #$0E,D2
0001F6DA <AmiBlitz3.ab2@2372> JMP freeslist
0001F6DC <AmiBlitz3.ab2@2378> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0001F6DE <AmiBlitz3.ab2@2379> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0001F6E4 <AmiBlitz3.ab2@2383>   CLR.w inmacro
0001F6EA <AmiBlitz3.ab2@2384>   ADDQ.l #1,globallinecount
0001F6F0 <AmiBlitz3.ab2@2385>   CLR.b nostringopt
0001F6F4 <AmiBlitz3.ab2@2386>   BSR.w JL_0_3CA4
0001F6FA <AmiBlitz3.ab2@2387>   CLR.w instringon
0001F700 <AmiBlitz3.ab2@2390>   TST.w ininclude
0001F704 <AmiBlitz3.ab2@2391>   BEQ.w JL_0_39B0
0001F70A <AmiBlitz3.ab2@2392>   ADDQ.l #1,includeline
0001F710 <AmiBlitz3.ab2@2393>     JSR ab3_WriteDebugFile
0001F716 <AmiBlitz3.ab2@2394>   JSR AJL_0_C09E
0001F71A <AmiBlitz3.ab2@2395>   BEQ.w JL_0_39B0
0001F720 <AmiBlitz3.ab2@2396>   MOVE.w ininclude,D0
0001F724 <AmiBlitz3.ab2@2397>   CMP.w #$4,D0
0001F728 <AmiBlitz3.ab2@2398>   BCC.w JL_0_39AC
0001F72A <AmiBlitz3.ab2@2399>   ADD.w D0,D0
0001F730 <AmiBlitz3.ab2@2400>   LEA progress_per_line,A0
0001F734 <AmiBlitz3.ab2@2401>   MOVE.w $0(A0,D0.W),D2
0001F738 <AmiBlitz3.ab2@2402>   CMP.w progressbar_width(PC),D2
0001F73C <AmiBlitz3.ab2@2403>   BCC.w JL_0_39AC
0001F740 <AmiBlitz3.ab2@2404>   ADDQ.w #1,$0(A0,D0.W)
0001F742 <AmiBlitz3.ab2@2405>   LSR.w #1,D0
0001F744 <AmiBlitz3.ab2@2406>   MOVE.l d0,d1
0001F746 <AmiBlitz3.ab2@2407>   EXT.l d1
0001F748 <AmiBlitz3.ab2@2408>   MOVE.l d2,d0
0001F74A <AmiBlitz3.ab2@2409>   EXT.l d0                                                 ;d0=x,d1=y
0001F750 <AmiBlitz3.ab2@2411>   JSR update_progressbar
0001F752 <AmiBlitz3.ab2@2414>   MOVEQ.l #-$01,D0
0001F754 <AmiBlitz3.ab2@2415> RTS
0001F75A <AmiBlitz3.ab2@2419>   MOVE.l titleat,D0
0001F75C <AmiBlitz3.ab2@2420>   MOVEQ.l #$00,D1
0001F762 <AmiBlitz3.ab2@2421>   MOVE.w progress_per_line,D1
0001F764 <AmiBlitz3.ab2@2422>   ADD.l D1,D0
0001F766 <AmiBlitz3.ab2@2423>   MOVE.l D0,D1
0001F768 <AmiBlitz3.ab2@2424>   SWAP D0
0001F76E <AmiBlitz3.ab2@2425>   CMP.w titleat,D0
0001F772 <AmiBlitz3.ab2@2426>    BEQ.w JL_0_39E4
0001F774 <AmiBlitz3.ab2@2429>   EXT.l d0
0001F776 <AmiBlitz3.ab2@2430>   MOVE.l d1,-(a7)
0001F77E <AmiBlitz3.ab2@2433>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
0001F784 <AmiBlitz3.ab2@2434>   JSR update_progressbar
0001F78C <AmiBlitz3.ab2@2435>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0001F78E <AmiBlitz3.ab2@2439>   MOVE.l (a7)+,d1
0001F794 <AmiBlitz3.ab2@2442>   MOVE.l D1,titleat
0001F79A <AmiBlitz3.ab2@2443>   ADDQ.l #1,linenumat
0001F7A0 <AmiBlitz3.ab2@2444>   CLR.w linedone
0001F7A6 <AmiBlitz3.ab2@2445>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0001F7AC <AmiBlitz3.ab2@2447>   SUBQ.l #1,numlines2
0001F7B0 <AmiBlitz3.ab2@2448>    BEQ.w JL_0_3A12
0001F7B6 <AmiBlitz3.ab2@2449>   MOVEA.l sourceline,A0
0001F7B8 <AmiBlitz3.ab2@2450>   MOVEA.l (A0),A0
0001F7BE <AmiBlitz3.ab2@2451>   MOVE.l A0,sourceline
0001F7C2 <AmiBlitz3.ab2@2452>   LEA $9(A0),A5
0001F7C4 <AmiBlitz3.ab2@2455> RTS
0001F7C6 <AmiBlitz3.ab2@2459>   MOVE.w D0,-(A7)
0001F7C8 <AmiBlitz3.ab2@2460>   MOVEQ.l #$03,D0
0001F7CA <AmiBlitz3.ab2@2463>     MOVE.w D1,D2
0001F7CE <AmiBlitz3.ab2@2464>     ANDI.w #$F,D2
0001F7D2 <AmiBlitz3.ab2@2465>     ADDI.w #$30,D2
0001F7D6 <AmiBlitz3.ab2@2466>     CMP.w #$3A,D2
0001F7DA <AmiBlitz3.ab2@2467>      BCS.w JL_0_3A2C
0001F7DC <AmiBlitz3.ab2@2468>     ADDQ.w #7,D2
0001F7E0 <AmiBlitz3.ab2@2471>     MOVE.b D2,$0(A0,D0.W)
0001F7E2 <AmiBlitz3.ab2@2472>     LSR.w #4,D1
0001F7E6 <AmiBlitz3.ab2@2473>   DBF D0,JL_0_3A18
0001F7E8 <AmiBlitz3.ab2@2475>   MOVE.w (A7)+,D0
0001F7EA <AmiBlitz3.ab2@2476> RTS
0001F7F0 <AmiBlitz3.ab2@2486>   MOVE.w skipcode,D1
0001F7F4 <AmiBlitz3.ab2@2487>   BNE.w JL_0_3A46
0001F7F6 <AmiBlitz3.ab2@2488> RTS
0001F7F8 <AmiBlitz3.ab2@2491>   MOVE.l A5,-(A7)
0001F7FA <AmiBlitz3.ab2@2492>   MOVEQ.l #$3A,D1                                          ;':'
0001F7FC <AmiBlitz3.ab2@2493>   MOVEQ.l #$21,D2                                          ;'!'
0001F7FE <AmiBlitz3.ab2@2494>   MOVEQ.l #$3B,D3                                          ;';'
0001F800 <AmiBlitz3.ab2@2495>   MOVEQ.l #$22,D4                                          ;'"'
0001F802 <AmiBlitz3.ab2@2498>   MOVE.b (A5)+,D0
0001F806 <AmiBlitz3.ab2@2499>    BEQ.w JL_0_3CA0
0001F80A <AmiBlitz3.ab2@2500>    BPL.w JL_0_3A60
0001F80C <AmiBlitz3.ab2@2501>   MOVE.b (A5)+,D0
0001F810 <AmiBlitz3.ab2@2502> BRA.w JL_0_3A50
0001F812 <AmiBlitz3.ab2@2505>   CMP.b D4,D0
0001F816 <AmiBlitz3.ab2@2506>    BNE.w JL_0_3A82
0001F818 <AmiBlitz3.ab2@2509>   MOVE.b (A5)+,D0
0001F81C <AmiBlitz3.ab2@2510>    BEQ.w notqerr
0001F820 <AmiBlitz3.ab2@2516>   CMP.b #$22,D0
0001F824 <AmiBlitz3.ab2@2517>    BNE.w JL_0_3A66
0001F828 <AmiBlitz3.ab2@2518> BRA.w JL_0_3A50
0001F82A <AmiBlitz3.ab2@2521>   CMP.b D1,D0
0001F82E <AmiBlitz3.ab2@2522>    BEQ.w JL_0_3CA0
0001F830 <AmiBlitz3.ab2@2523>   CMP.b D3,D0
0001F834 <AmiBlitz3.ab2@2524>    BEQ.w JL_0_3CA0
0001F836 <AmiBlitz3.ab2@2527>   CMP.b D2,D0
0001F83A <AmiBlitz3.ab2@2528>    BNE.w JL_0_3A50
0001F842 <AmiBlitz3.ab2@2529>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
0001F844 <AmiBlitz3.ab2@2530>   MOVEA.l A5,A3
0001F84A <AmiBlitz3.ab2@2531>    JSR getparameter2
0001F84E <AmiBlitz3.ab2@2532>    BNE.w JL_0_3AAC
0001F854 <AmiBlitz3.ab2@2533> JMP syntaxerr
0001F85E <AmiBlitz3.ab2@2538>    MOVE.w oldqflag,instringon
0001F864 <AmiBlitz3.ab2@2539>   MOVEA.l lastsourcepos,A5
0001F86A <AmiBlitz3.ab2@2540>    JSR findmac                                             ;find macro
0001F86E <AmiBlitz3.ab2@2541>    BEQ.w JL_0_3ABE
0001F874 <AmiBlitz3.ab2@2542> JMP nomacerr
0001F87A <AmiBlitz3.ab2@2545>   TST.b debugmode
0001F87E <AmiBlitz3.ab2@2546>   BEQ 'sk1
0001F882 <AmiBlitz3.ab2@2547>   MOVE.w #$4e71,d1
0001F888 <AmiBlitz3.ab2@2548>   JSR writeword
0001F88A <AmiBlitz3.ab2@2549>   MOVE.l a5,-(a7)
0001F88C <AmiBlitz3.ab2@2550>   MOVE.l a3,a5
0001F88E <AmiBlitz3.ab2@2551>   SUBQ.l #1,a5
0001F896 <AmiBlitz3.ab2@2552>   MOVE.w #$0,inmacro
0001F89A <AmiBlitz3.ab2@2553>   BSR debugstuffa
0001F8A2 <AmiBlitz3.ab2@2554>   MOVE.w #$FFFF,inmacro
0001F8A4 <AmiBlitz3.ab2@2555>   MOVE.l (a7)+,a5
0001F8A8 <AmiBlitz3.ab2@2556>   MOVE.w #$4e71,d1
0001F8AE <AmiBlitz3.ab2@2557>   JSR writeword
0001F8B0 <AmiBlitz3.ab2@2560>   MOVEA.l A5,A4
0001F8B4 <AmiBlitz3.ab2@2563>    CMP.b #" ",(a4)+
0001F8B8 <AmiBlitz3.ab2@2564>     BEQ 'l5a
0001F8BA <AmiBlitz3.ab2@2565>      SUBQ.l#1,a4
0001F8BE <AmiBlitz3.ab2@2566>      CMP.b #",",(a4)
0001F8C2 <AmiBlitz3.ab2@2567>     BEQ JL_0_3AEA
0001F8C4 <AmiBlitz3.ab2@2570>   MOVEQ.l #$00,D4
0001F8CA <AmiBlitz3.ab2@2571>   TST.b newsyntax
0001F8CE <AmiBlitz3.ab2@2572>   BEQ 'l10b
0001F8D2 <AmiBlitz3.ab2@2573>   MOVEM.l a0/d0,-(a7)
0001F8D6 <AmiBlitz3.ab2@2574>   MOVE.l 4(a2),a0
0001F8DA <AmiBlitz3.ab2@2575>   MOVE.w 8(a2),d0
0001F8DE <AmiBlitz3.ab2@2578>   CMP.b #"`",(a0)+
0001F8E2 <AmiBlitz3.ab2@2579>   BEQ 'x1
0001F8E4 <AmiBlitz3.ab2@2580>   SUBQ.w #1,d0
0001F8E8 <AmiBlitz3.ab2@2581>   BNE 'x2
0001F8EC <AmiBlitz3.ab2@2582> BRA 'x3
0001F8F0 <AmiBlitz3.ab2@2585>   MOVEM.l (a7)+,a0/d0
0001F8F4 <AmiBlitz3.ab2@2586> BRA 'l10
0001F8F8 <AmiBlitz3.ab2@2589>   MOVEM.l (a7)+,a0/d0
0001F8FC <AmiBlitz3.ab2@2590> BRA JL_0_3AEA
0001F900 <AmiBlitz3.ab2@2593>   CMPI.b #"{",(A4)
0001F904 <AmiBlitz3.ab2@2594>    BNE.w JL_0_3AEA
0001F906 <AmiBlitz3.ab2@2598>   ADDQ.l #1,a4
0001F90A <AmiBlitz3.ab2@2601>     CMP.b #" ",(a4)
0001F90E <AmiBlitz3.ab2@2602>     BEQ 'l5
0001F912 <AmiBlitz3.ab2@2603>     MOVEM.l a0/d0,-(a7)
0001F918 <AmiBlitz3.ab2@2604>     CLR.b exmac
0001F91E <AmiBlitz3.ab2@2605>     LEA chartab,a0
0001F920 <AmiBlitz3.ab2@2606>     MOVEQ #0,d0
0001F922 <AmiBlitz3.ab2@2607>     MOVE.b (a4),d0
0001F926 <AmiBlitz3.ab2@2608>     BMI 'm1
0001F92A <AmiBlitz3.ab2@2609>     TST.b 0(a0,d0)
0001F92E <AmiBlitz3.ab2@2610>     BEQ 'm1
0001F934 <AmiBlitz3.ab2@2611>     TST.b newsyntax
0001F938 <AmiBlitz3.ab2@2612>     BEQ 'ns1
0001F93C <AmiBlitz3.ab2@2613>     CMP.b #"#",d0
0001F940 <AmiBlitz3.ab2@2614>     BEQ 'm1
0001F944 <AmiBlitz3.ab2@2615>     CMP.b #"$",d0
0001F948 <AmiBlitz3.ab2@2616>     BEQ 'm1
0001F94C <AmiBlitz3.ab2@2617>     CMP.b #"-",d0
0001F950 <AmiBlitz3.ab2@2618>     BEQ 'm1
0001F954 <AmiBlitz3.ab2@2621>   CMP.b #",",d0
0001F958 <AmiBlitz3.ab2@2622>     BEQ 'm1
0001F95C <AmiBlitz3.ab2@2623>     CMP.b #"{",d0
0001F960 <AmiBlitz3.ab2@2624>     BNE 'm1b
0001F962 <AmiBlitz3.ab2@2625>     ADDQ.l #1,a4
0001F966 <AmiBlitz3.ab2@2626> BRA 'm1
0001F96C <AmiBlitz3.ab2@2629>   TST.b newsyntax
0001F970 <AmiBlitz3.ab2@2630>     BEQ 'm1
0001F978 <AmiBlitz3.ab2@2631>     MOVE.b #1,exmac
0001F97C <AmiBlitz3.ab2@2634>   MOVEM.l (a7)+,a0/d0
0001F982 <AmiBlitz3.ab2@2635>     TST.b exmac
0001F986 <AmiBlitz3.ab2@2636>     BNE JL_0_3AEA
0001F988 <AmiBlitz3.ab2@2643>   TST.b (a4)
0001F98C <AmiBlitz3.ab2@2644>   BEQ JL_0_3AEA
0001F992 <AmiBlitz3.ab2@2647>   MOVEA.l ptr_macrobuffer_begin,A0
0001F994 <AmiBlitz3.ab2@2650>   ADDQ.w #1,D4
0001F996 <AmiBlitz3.ab2@2651>   MOVE.l A4,(A0)
0001F99A <AmiBlitz3.ab2@2652>   CLR.w 4(a0)
0001F99E <AmiBlitz3.ab2@2653>    BSR.w JL_0_3CC6
0001F9A0 <AmiBlitz3.ab2@2655>   ADDQ.l #4,a0
0001F9A2 <AmiBlitz3.ab2@2659>   SUBQ.w #1,(a0)+
0001F9A6 <AmiBlitz3.ab2@2660>   CMP.b #$7D,D0
0001F9AA <AmiBlitz3.ab2@2661>   BEQ 'l10
0001F9AC <AmiBlitz3.ab2@2662>   TST.b d0
0001F9B0 <AmiBlitz3.ab2@2663>   BEQ 'l10
0001F9B4 <AmiBlitz3.ab2@2664> BRA JL_0_3AD0
0001F9BA <AmiBlitz3.ab2@2668>   CLR.l sourceline3
0001F9BC <AmiBlitz3.ab2@2669>   MOVEA.l A4,A5
0001F9C2 <AmiBlitz3.ab2@2672>   MOVE.w D4,numarg
0001F9C8 <AmiBlitz3.ab2@2679>   MOVE.l #$01,D1
0001F9CE <AmiBlitz3.ab2@2680>   MOVEA.l _execbase,A6
0001F9D4 <AmiBlitz3.ab2@2681>   MOVE.l mempool,a0
0001F9DA <AmiBlitz3.ab2@2682>   MOVE.l macrobuffer_size,D0
0001F9E0 <AmiBlitz3.ab2@2683>   CMP.l #40000,d0
0001F9E4 <AmiBlitz3.ab2@2684>   BGE 'l1m
0001F9EA <AmiBlitz3.ab2@2685>   MOVE.l #40000,d0
0001F9F0 <AmiBlitz3.ab2@2686>   MOVE.l d0,macrobuffer_size
0001F9F4 <AmiBlitz3.ab2@2689>   JSR _AllocPooled(a6)
0001F9FE <AmiBlitz3.ab2@2691>   MOVE.l myline,myoline
0001FA00 <AmiBlitz3.ab2@2694>   ADDQ.l #1,d0
0001FA06 <AmiBlitz3.ab2@2695>   MOVE.l D0,myline
0001FA08 <AmiBlitz3.ab2@2696>   MOVEA.l D0,A1
0001FA0E <AmiBlitz3.ab2@2697>   MOVE.b #":",-1(a1)
0001FA10 <AmiBlitz3.ab2@2698>   MOVEA.l A1,A6
0001FA16 <AmiBlitz3.ab2@2699>   ADDA.l macrobuffer_size,A6
0001FA18 <AmiBlitz3.ab2@2700>   MOVEA.l (A7)+,A0
0001FA1A <AmiBlitz3.ab2@2703>   CMPA.l A6,A1
0001FA1E <AmiBlitz3.ab2@2704>    BCC.w mbovererr
0001FA20 <AmiBlitz3.ab2@2705>   MOVE.b (A0)+,(a1)+
0001FA22 <AmiBlitz3.ab2@2706>   CMPA.l A3,A0
0001FA26 <AmiBlitz3.ab2@2707>    BCS.w JL_0_3B1E
0001FA28 <AmiBlitz3.ab2@2708>   SUBQ.w #1,A1
0001FA2C <AmiBlitz3.ab2@2709>   MOVE.w $8(A2),D1
0001FA30 <AmiBlitz3.ab2@2710>    BEQ.w JL_0_3C70
0001FA38 <AmiBlitz3.ab2@2711>   MOVE.w $A(A2),macnum
0001FA3C <AmiBlitz3.ab2@2712>   ADDQ.w #1,$A(A2)
0001FA40 <AmiBlitz3.ab2@2713>   MOVEA.l $4(A2),A2
0001FA42 <AmiBlitz3.ab2@2714>   SUBQ.w #1,D1
0001FA48 <AmiBlitz3.ab2@2715>   CLR.b firstmline
0001FA4A <AmiBlitz3.ab2@2718>     MOVEQ.l #$00,D0
0001FA4C <AmiBlitz3.ab2@2719>     MOVE.b (A2)+,D0
0001FA52 <AmiBlitz3.ab2@2720>     TST.b firstmline
0001FA56 <AmiBlitz3.ab2@2721>     BNE 'c1
0001FA5A <AmiBlitz3.ab2@2722>     CMP.b #$22,d0
0001FA5E <AmiBlitz3.ab2@2723>     BNE 's1
0001FA66 <AmiBlitz3.ab2@2724>     MOVE.b #1,firstmline
0001FA6A <AmiBlitz3.ab2@2727>     CMP.b #":",d0
0001FA6E <AmiBlitz3.ab2@2728>     BNE 'm1
0001FA76 <AmiBlitz3.ab2@2729>     MOVE.b #1,firstmline
0001FA7A <AmiBlitz3.ab2@2732>     CMP.b #";",d0
0001FA7E <AmiBlitz3.ab2@2733>     BNE 'c1
0001FA80 <AmiBlitz3.ab2@2736>     SUBQ.w #1,d1                                           ;filter out comment
0001FA82 <AmiBlitz3.ab2@2737>     MOVE.b (a2)+,d0
0001FA88 <AmiBlitz3.ab2@2738>     CMP.w #":@",-1(a2)
0001FA8C <AmiBlitz3.ab2@2739>     BEQ 'c2
0001FA8E <AmiBlitz3.ab2@2740>     TST.w d1
0001FA92 <AmiBlitz3.ab2@2741>     BNE 'l1
0001FA96 <AmiBlitz3.ab2@2742>   BRA JL_0_3C6C
0001FA9C <AmiBlitz3.ab2@2745>     CMP.b #":",1(a2)
0001FAA0 <AmiBlitz3.ab2@2746>       BNE 'l1
0001FAA2 <AmiBlitz3.ab2@2747>       ADDQ #2,a2
0001FAA4 <AmiBlitz3.ab2@2748>       SUBQ #3,d1
0001FAA6 <AmiBlitz3.ab2@2749>       MOVE.b (a2)+,d0
0001FAAE <AmiBlitz3.ab2@2750>       MOVE.b #1,firstmline
0001FAB2 <AmiBlitz3.ab2@2753>     CMP.b #"`",D0
0001FAB6 <AmiBlitz3.ab2@2754>      BNE.w JL_0_3C56
0001FAB8 <AmiBlitz3.ab2@2755>     SUBQ.w #1,D1
0001FABA <AmiBlitz3.ab2@2756>     MOVE.b (A2)+,D0
0001FABE <AmiBlitz3.ab2@2757>     CMP.w #$7B,D0
0001FAC2 <AmiBlitz3.ab2@2758>      BEQ.w JL_0_3BB6
0001FAC6 <AmiBlitz3.ab2@2759>     CMP.w #$40,D0
0001FACA <AmiBlitz3.ab2@2760>      BNE.w JL_0_3B82
0001FACC <AmiBlitz3.ab2@2761>     MOVEQ.l #$00,D2
0001FAD2 <AmiBlitz3.ab2@2762>     MOVE.w macnum,D2
0001FAD4 <AmiBlitz3.ab2@2763>     MOVEA.l A1,A0
0001FAD6 <AmiBlitz3.ab2@2764>     MOVE.w D1,-(A7)
0001FADC <AmiBlitz3.ab2@2765>      JSR makelong
0001FADE <AmiBlitz3.ab2@2766>     MOVEA.l A0,A1
0001FAE0 <AmiBlitz3.ab2@2767>     MOVE.w (A7)+,D1
0001FAE4 <AmiBlitz3.ab2@2768>   BRA.w JL_0_3C6C
0001FAE8 <AmiBlitz3.ab2@2771>     ORI.w #$20,D0
0001FAEC <AmiBlitz3.ab2@2772>     CMP.w #$7A,D0
0001FAF0 <AmiBlitz3.ab2@2773>      BCS.w JL_0_3B94
0001FAF6 <AmiBlitz3.ab2@2774>   JMP ilconsterr
0001FAFA <AmiBlitz3.ab2@2777>     SUBI.w #$30,D0
0001FAFE <AmiBlitz3.ab2@2778>     CMP.w #$A,D0
0001FB02 <AmiBlitz3.ab2@2779>      BCS.w JL_0_3BF2
0001FB06 <AmiBlitz3.ab2@2780>     SUBI.w #$27,D0
0001FB0A <AmiBlitz3.ab2@2781>     CMP.w #$A,D0
0001FB0E <AmiBlitz3.ab2@2782>      BCC.w JL_0_3BB2
0001FB14 <AmiBlitz3.ab2@2783>   JMP ilconsterr
0001FB18 <AmiBlitz3.ab2@2786>   BRA.w JL_0_3BF2
0001FB1A <AmiBlitz3.ab2@2789>     MOVE.l A5,-(A7)
0001FB1E <AmiBlitz3.ab2@2790>     MOVEM.l D1/A1-A2/A6,-(A7)
0001FB20 <AmiBlitz3.ab2@2791>     MOVEA.l A2,A5
0001FB26 <AmiBlitz3.ab2@2792>      JSR AJL_0_BF6E
0001FB2A <AmiBlitz3.ab2@2793>     CMP.w #$7D,D0
0001FB2E <AmiBlitz3.ab2@2794>      BEQ.w JL_0_3BD2
0001FB34 <AmiBlitz3.ab2@2795>   JMP syntaxerr
0001FB38 <AmiBlitz3.ab2@2798>     MOVEM.l (A7)+,D1/A1-A2/A6
0001FB3A <AmiBlitz3.ab2@2799>     MOVE.l A5,D2
0001FB3C <AmiBlitz3.ab2@2800>     SUB.l A2,D2
0001FB3E <AmiBlitz3.ab2@2801>     SUB.w D2,D1
0001FB40 <AmiBlitz3.ab2@2802>     MOVEA.l A5,A2
0001FB46 <AmiBlitz3.ab2@2803>     CLR.w instringon
0001FB48 <AmiBlitz3.ab2@2804>     MOVEA.l (A7)+,A5
0001FB4A <AmiBlitz3.ab2@2805>     MOVE.l D3,D0
0001FB4E <AmiBlitz3.ab2@2806>     BPL.w JL_0_3BF2
0001FB54 <AmiBlitz3.ab2@2807>   JMP ilconsterr
0001FB56 <AmiBlitz3.ab2@2810>     SUBQ.w #1,D0
0001FB5A <AmiBlitz3.ab2@2811>      BPL.w JL_0_3C20
0001FB60 <AmiBlitz3.ab2@2815>     MOVE.w numarg,D0
0001FB64 <AmiBlitz3.ab2@2816>     DIVU #$A,D0
0001FB68 <AmiBlitz3.ab2@2817>     ADDI.w #$30,D0
0001FB6A <AmiBlitz3.ab2@2818>     CMPA.l A6,A1
0001FB6E <AmiBlitz3.ab2@2819>      BCC.w mbovererr
0001FB70 <AmiBlitz3.ab2@2820>     MOVE.b D0,(A1)+
0001FB72 <AmiBlitz3.ab2@2821>     SWAP D0
0001FB76 <AmiBlitz3.ab2@2822>     ADDI.w #$30,D0
0001FB78 <AmiBlitz3.ab2@2823>     CMPA.l A6,A1
0001FB7C <AmiBlitz3.ab2@2824>      BCC.w mbovererr
0001FB7E <AmiBlitz3.ab2@2825>     MOVE.b D0,(A1)+
0001FB82 <AmiBlitz3.ab2@2826>   BRA.w JL_0_3C6C
0001FB88 <AmiBlitz3.ab2@2832>     CMP.w numarg,D0
0001FB8C <AmiBlitz3.ab2@2833>      BCC.w JL_0_3C6C
0001FB8E <AmiBlitz3.ab2@2834>     LSL.w #1,D0
0001FB90 <AmiBlitz3.ab2@2835>     MOVE.w D0,D4
0001FB92 <AmiBlitz3.ab2@2836>     LSL.w #1,D0
0001FB94 <AmiBlitz3.ab2@2837>     ADD.w D4,D0
0001FB9A <AmiBlitz3.ab2@2838>     MOVEA.l ptr_macrobuffer_begin,A0
0001FB9C <AmiBlitz3.ab2@2839>     ADDA.w D0,A0
0001FBA0 <AmiBlitz3.ab2@2840>     MOVE.w $4(A0),D4
0001FBA4 <AmiBlitz3.ab2@2841>      BEQ.w JL_0_3C6C
0001FBA6 <AmiBlitz3.ab2@2842>     MOVEA.l (A0),A0
0001FBA8 <AmiBlitz3.ab2@2843>     SUBQ.w #1,D4
0001FBAA <AmiBlitz3.ab2@2846>       CMPA.l A6,A1
0001FBAE <AmiBlitz3.ab2@2847>        BCC.w mbovererr
0001FBB2 <AmiBlitz3.ab2@2848>       CMP.w #"@@",(a0)
0001FBB6 <AmiBlitz3.ab2@2849>        BNE 'l10
0001FBBC <AmiBlitz3.ab2@2850>       TST.w ininclude
0001FBC0 <AmiBlitz3.ab2@2851>        BNE errorjoin
0001FBC6 <AmiBlitz3.ab2@2854>       MOVE.l sourceline,a0
0001FBC8 <AmiBlitz3.ab2@2855>       MOVE.l (a0),a0
0001FBCE <AmiBlitz3.ab2@2856>       CMP.l #0,a0
0001FBD2 <AmiBlitz3.ab2@2857>       BNE 'l11
0001FBD4 <AmiBlitz3.ab2@2858>       MOVEQ #0,d0
0001FBDA <AmiBlitz3.ab2@2859>       JSR error
0001FBE0 <AmiBlitz3.ab2@2862>       MOVE.l a0,sourceline
0001FBE6 <AmiBlitz3.ab2@2863>       ADDQ.l #1,linenumat
0001FBEA <AmiBlitz3.ab2@2864>       LEA 9(a0),a0
0001FBEC <AmiBlitz3.ab2@2865>       MOVE.l a0,-(a7)
0001FBF0 <AmiBlitz3.ab2@2868>       CMP.b #" ",(a0)+
0001FBF4 <AmiBlitz3.ab2@2869>        BEQ 'l110
0001FBFA <AmiBlitz3.ab2@2870>       CMP.b #";",-1(a0)
0001FBFC <AmiBlitz3.ab2@2871>       MOVE.l (a7)+,a0
0001FC00 <AmiBlitz3.ab2@2872>        BEQ 'l111
0001FC02 <AmiBlitz3.ab2@2873>       SUBQ.l #1,d4
0001FC04 <AmiBlitz3.ab2@2876>       MOVE.b (A0)+,(A1)+
0001FC08 <AmiBlitz3.ab2@2877>     DBF D4,JL_0_3C46
0001FC0C <AmiBlitz3.ab2@2879>   BRA.w JL_0_3C6C
0001FC0E <AmiBlitz3.ab2@2882>     CMPA.l A6,A1
0001FC12 <AmiBlitz3.ab2@2883>      BCC.w mbovererr
0001FC14 <AmiBlitz3.ab2@2884>     MOVE.b D0,(A1)+
0001FC18 <AmiBlitz3.ab2@2885>      BPL.w JL_0_3C6C
0001FC1A <AmiBlitz3.ab2@2886>     CMPA.l A6,A1
0001FC1E <AmiBlitz3.ab2@2887>      BCC.w mbovererr
0001FC20 <AmiBlitz3.ab2@2888>     MOVE.b (A2)+,(A1)+
0001FC22 <AmiBlitz3.ab2@2889>     SUBQ.w #1,D1
0001FC26 <AmiBlitz3.ab2@2892>   DBF D1,JL_0_3B48
0001FC28 <AmiBlitz3.ab2@2902>   CMPA.l A6,A1
0001FC2C <AmiBlitz3.ab2@2903>    BCC.w mbovererr
0001FC2E <AmiBlitz3.ab2@2904>   MOVE.b (A5)+,(A1)+
0001FC32 <AmiBlitz3.ab2@2905>    BNE.w JL_0_3C70
0001FC38 <AmiBlitz3.ab2@2906>   MOVEA.l myline,A5
0001FC3E <AmiBlitz3.ab2@2907>   MOVE.l myoline,D0
0001FC42 <AmiBlitz3.ab2@2908>    BEQ.w JL_0_3C9C
0001FC44 <AmiBlitz3.ab2@2909>   SUBQ.l #1,d0
0001FC46 <AmiBlitz3.ab2@2910>   MOVEA.l D0,A1
0001FC4C <AmiBlitz3.ab2@2911>   MOVE.l macrobuffer_size,D0
0001FC52 <AmiBlitz3.ab2@2912>   MOVEA.l _execbase,A6
0001FC58 <AmiBlitz3.ab2@2913>   MOVE.l mempool,a0
0001FC5C <AmiBlitz3.ab2@2914>   JSR _FreePooled(A6)
0001FC60 <AmiBlitz3.ab2@2917> BRA.w JL_0_3A46
0001FC62 <AmiBlitz3.ab2@2920>   MOVEA.l (A7)+,A5
0001FC64 <AmiBlitz3.ab2@2921> RTS
0001FC6A <AmiBlitz3.ab2@2925>   MOVE.l myline,D0
0001FC6E <AmiBlitz3.ab2@2926>   BEQ.w JL_0_3CC4
0001FC70 <AmiBlitz3.ab2@2927>   SUBQ.l #1,d0
0001FC76 <AmiBlitz3.ab2@2928>   CLR.l myline
0001FC78 <AmiBlitz3.ab2@2929>   MOVEA.l D0,A1
0001FC7E <AmiBlitz3.ab2@2930>   MOVE.l macrobuffer_size,D0
0001FC84 <AmiBlitz3.ab2@2931>   MOVEA.l _execbase,A6
0001FC8A <AmiBlitz3.ab2@2932>   MOVE.l mempool,a0
0001FC8E <AmiBlitz3.ab2@2933> JMP _FreePooled(A6)
0001FC90 <AmiBlitz3.ab2@2936> RTS
0001FC92 <AmiBlitz3.ab2@2940>   MOVEQ.l #$00,D2
0001FC96 <AmiBlitz3.ab2@2943>   ADDQ.w #1,4(a0)
0001FC98 <AmiBlitz3.ab2@2944>    MOVE.b (A4)+,D0
0001FC9C <AmiBlitz3.ab2@2946>    BEQ exit1
0001FCA0 <AmiBlitz3.ab2@2947>    BPL.w JL_0_3CD8
0001FCA4 <AmiBlitz3.ab2@2948>   ADDQ.w #1,4(a0)
0001FCA6 <AmiBlitz3.ab2@2949>   ADDQ.w #1,A4
0001FCAA <AmiBlitz3.ab2@2950> BRA.w JL_0_3CC8
0001FCB0 <AmiBlitz3.ab2@2953>    TST.w instringon
0001FCB4 <AmiBlitz3.ab2@2954>    BNE 'lnom
0001FCB8 <AmiBlitz3.ab2@2955>    CMP.b #";",d0
0001FCBC <AmiBlitz3.ab2@2956>    BEQ exit2
0001FCC0 <AmiBlitz3.ab2@2957>    CMP.b #":",d0
0001FCC4 <AmiBlitz3.ab2@2958>    BEQ exit2
0001FCC8 <AmiBlitz3.ab2@2961>   CMP.b #$22,D0
0001FCCC <AmiBlitz3.ab2@2962>    BNE.w JL_0_3CEA
0001FCD2 <AmiBlitz3.ab2@2963>   NOT.w instringon
0001FCD6 <AmiBlitz3.ab2@2964> BRA.w JL_0_3CC8
0001FCDC <AmiBlitz3.ab2@2968>   TST.w instringon
0001FCE0 <AmiBlitz3.ab2@2969>    BNE.w JL_0_3CC8
0001FCE4 <AmiBlitz3.ab2@2970>    CMP.b #"@",d0
0001FCE8 <AmiBlitz3.ab2@2971>    BNE 'l10
0001FCEC <AmiBlitz3.ab2@2972>    CMP.b #"@",(a4)
0001FCF0 <AmiBlitz3.ab2@2973>    BNE 'l10
0001FCF6 <AmiBlitz3.ab2@2974>    TST.w ininclude
0001FCFA <AmiBlitz3.ab2@2975>    BNE errorjoin
0001FD00 <AmiBlitz3.ab2@2976>    MOVE.l sourceline3,a4
0001FD06 <AmiBlitz3.ab2@2977>    CMP.l #0,a4
0001FD0A <AmiBlitz3.ab2@2978>    BNE 'l11
0001FD10 <AmiBlitz3.ab2@2979>    MOVE.l sourceline,a4
0001FD12 <AmiBlitz3.ab2@2982>   MOVE.l (a4),a4
0001FD18 <AmiBlitz3.ab2@2983>       CMP.l #0,a4
0001FD1C <AmiBlitz3.ab2@2984>       BNE 'l12
0001FD1E <AmiBlitz3.ab2@2985>       MOVEQ #0,d0
0001FD24 <AmiBlitz3.ab2@2986>       JSR error
0001FD2A <AmiBlitz3.ab2@2989>    MOVE.l a4,sourceline3
0001FD2E <AmiBlitz3.ab2@2990>    LEA 9(a4),a4
0001FD30 <AmiBlitz3.ab2@2991>    MOVEQ #",",d0
0001FD34 <AmiBlitz3.ab2@2994>   CMP.b #$2C,D0
0001FD38 <AmiBlitz3.ab2@2995>    BNE.w JL_0_3D06
0001FD3A <AmiBlitz3.ab2@2996>   TST.w D2
0001FD3E <AmiBlitz3.ab2@2997>    BEQ.w JL_0_3D30
0001FD42 <AmiBlitz3.ab2@2998> BRA.w JL_0_3CC8
0001FD46 <AmiBlitz3.ab2@3002>    CMP.b #$7B,D0                                           ;"{"
0001FD4A <AmiBlitz3.ab2@3003>    BEQ.w 'l10
0001FD4E <AmiBlitz3.ab2@3004>   CMP.b #$28,D0                                            ;"("
0001FD52 <AmiBlitz3.ab2@3007>    BNE.w JL_0_3D14
0001FD54 <AmiBlitz3.ab2@3008>   ADDQ.w #1,D2
0001FD58 <AmiBlitz3.ab2@3009> BRA.w JL_0_3CC8
0001FD5C <AmiBlitz3.ab2@3012>   CMP.b #$7D,D0                                           ;"}"
0001FD60 <AmiBlitz3.ab2@3013>    BNE.w JL_0_3D22
0001FD62 <AmiBlitz3.ab2@3014>  TST.w D2
0001FD66 <AmiBlitz3.ab2@3015>    BEQ.w JL_0_3D30
0001FD6A <AmiBlitz3.ab2@3019>    CMP.b #$7D,D0                                           ;"}"
0001FD6E <AmiBlitz3.ab2@3020>    BEQ.w 'l10
0001FD72 <AmiBlitz3.ab2@3021>   CMP.b #$29,D0                                            ;")"
0001FD76 <AmiBlitz3.ab2@3024>    BNE.w JL_0_3CC8
0001FD78 <AmiBlitz3.ab2@3025>   SUBQ.w #1,D2
0001FD7C <AmiBlitz3.ab2@3026> BRA.w JL_0_3CC8
0001FD7E <AmiBlitz3.ab2@3029> RTS
0001FD80 <AmiBlitz3.ab2@3033>       SUBQ.l #1,a4
0001FD86 <AmiBlitz3.ab2@3034>       CLR.l sourceline3
0001FD88 <AmiBlitz3.ab2@3035> RTS
0001FD8A <AmiBlitz3.ab2@3039>       MOVEQ #0,d0
0001FD8C <AmiBlitz3.ab2@3040>       SUBQ.l #1,a4
0001FD92 <AmiBlitz3.ab2@3041>       CLR.l sourceline3
0001FD94 <AmiBlitz3.ab2@3042> RTS
0001FD98 <AmiBlitz3.ab2@3046>   CMP.b #$7B,D0                                            ;"{"
0001FD9C <AmiBlitz3.ab2@3047>   BEQ.w JL_0_3D3E
0001FDA0 <AmiBlitz3.ab2@3048>   CMP.b #$28,D0                                            ;"("
0001FDA2 <AmiBlitz3.ab2@3051> RTS
0001FDA6 <AmiBlitz3.ab2@3055>   CMP.b #$7D,D0                                            ;"}"
0001FDAA <AmiBlitz3.ab2@3056>   BEQ.w JL_0_3D4C
0001FDAE <AmiBlitz3.ab2@3057>   CMP.b #$29,D0                                            ;")"
0001FDB0 <AmiBlitz3.ab2@3060> RTS
0001FDB2 <AmiBlitz3.ab2@3064> stopit:     Ds.w 1
0001FDB4 <AmiBlitz3.ab2@3065> clrreq:     Ds.w 1
0001FDB8 <AmiBlitz3.ab2@3086>   MOVE.w clrreq(PC),D0
0001FDBC <AmiBlitz3.ab2@3087>    BEQ.w close_compilewin__skip
0001FDEE <AmiBlitz3.ab2@3089> 
0001FDF4 <AmiBlitz3.ab2@3091>   LEA clrreq,a0
0001FDF6 <AmiBlitz3.ab2@3092>   NOT.w (a0)                                               ;reass
0001FDFC <AmiBlitz3.ab2@3093>   MOVEA.l ptr_ThisTask,A0
0001FE00 <AmiBlitz3.ab2@3094>   CLR.l $1E(A0)
0001FE04 <AmiBlitz3.ab2@3095>   CLR.l $2A(A0)
0001FE06 <AmiBlitz3.ab2@3098> RTS
0001FE08 <AmiBlitz3.ab2@3101> intsused:  Ds.w 1
0001FE10 <AmiBlitz3.ab2@3105>   MOVE.w #-1,blitzoff
0001FE16 <AmiBlitz3.ab2@3106>   CLR.w intsused
0001FE1C <AmiBlitz3.ab2@3107>   CLR.w anyerrs
0001FE22 <AmiBlitz3.ab2@3108>   CLR.w blitzmode
0001FE28 <AmiBlitz3.ab2@3109>   CLR.w dontwrite                                              ;nomemleft
0001FE2E <AmiBlitz3.ab2@3110>   CLR.w constmode
0001FE34 <AmiBlitz3.ab2@3111>   CLR.w cmake
0001FE3A <AmiBlitz3.ab2@3112>   CLR.w cfetchmode
0001FE40 <AmiBlitz3.ab2@3113>   CLR.l intdata1
0001FE46 <AmiBlitz3.ab2@3114>   CLR.w fuckpos
0001FE4C <AmiBlitz3.ab2@3115>   CLR.w procnum
0001FE52 <AmiBlitz3.ab2@3116>   CLR.w procnum2
0001FE58 <AmiBlitz3.ab2@3117>   CLR.w dfetch
0001FE5E <AmiBlitz3.ab2@3118>   CLR.l titleat
0001FE64 <AmiBlitz3.ab2@3119>   CLR.b usedpath
0001FE6A <AmiBlitz3.ab2@3120>   CLR.b path2
0001FE70 <AmiBlitz3.ab2@3121>   CLR.w inerr
0001FE76 <AmiBlitz3.ab2@3122>   CLR.w intlevel
0001FE7C <AmiBlitz3.ab2@3123>   CLR.l cont_pc
0001FE82 <AmiBlitz3.ab2@3124>   CLR.l cont_pc2
0001FE88 <AmiBlitz3.ab2@3125>   CLR.l lastcontlink
0001FE92 <AmiBlitz3.ab2@3126>   MOVE.l destbufferstart,destpointer
0001FE9C <AmiBlitz3.ab2@3127>   MOVE.l destbufferstart,bigpc
0001FEA6 <AmiBlitz3.ab2@3128>   MOVE.l destbufferend,libend
0001FEB0 <AmiBlitz3.ab2@3129>   MOVE.l data1start,data1
0001FEBA <AmiBlitz3.ab2@3130>   MOVE.l data2at,data2
0001FEC2 <AmiBlitz3.ab2@3131>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
0001FECA <AmiBlitz3.ab2@3132>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
0001FED0 <AmiBlitz3.ab2@3133>   CLR.w oldvcodelen
0001FED6 <AmiBlitz3.ab2@3134>   CLR.b lastgloballabel                                    ;lastbiglab org source
0001FED8 <AmiBlitz3.ab2@3135> RTS
0001FEDA <AmiBlitz3.ab2@3138> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
0001FEE0 <AmiBlitz3.ab2@3142>   LEA  clrreq,a1
0001FEE4 <AmiBlitz3.ab2@3143>   MOVE.w #2000,(a1)
0001FF0E <AmiBlitz3.ab2@3144>   !basic
0001FF24 <AmiBlitz3.ab2@3145> 
0001FF74 <AmiBlitz3.ab2@3146>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
0001FF7C <AmiBlitz3.ab2@3147>   calcpro.l      = 0
0001FF84 <AmiBlitz3.ab2@3148>   calcpro_old.l  = 0
0001FF90 <AmiBlitz3.ab2@3149>   typ_old.l      = -1
0001FF9C <AmiBlitz3.ab2@3150>   pass_old.l     = -1
0001FFA2 <AmiBlitz3.ab2@3151>   update_comstatus_gui.b = True ; for the first
0001FFDC <AmiBlitz3.ab2@3153>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00020016 <AmiBlitz3.ab2@3154>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00020034 <AmiBlitz3.ab2@3155>   !asm
00020066 <AmiBlitz3.ab2@3156> 
0002006C <AmiBlitz3.ab2@3158>   CLR.w stopit
0002006E <AmiBlitz3.ab2@3159> RTS
00020074 <AmiBlitz3.ab2@3163>   CLR.w storedebugmode
0002007A <AmiBlitz3.ab2@3164>   CLR.b iserror
0002007E <AmiBlitz3.ab2@3165>   BSR.w compilerequester
00020088 <AmiBlitz3.ab2@3167>   MOVE.l #0,globallinecount
0002008E <AmiBlitz3.ab2@3168>   JSR check_of_same_source
00020092 <AmiBlitz3.ab2@3169>   BSR.w call_setpointerbusy
00020096 <AmiBlitz3.ab2@3170>   BSR.w setcvars
0002009E <AmiBlitz3.ab2@3171>   MOVE.w #$8000,globalvarpointer
000200A8 <AmiBlitz3.ab2@3172>   MOVE.l #newtype_quick,defaulttype
000200AE <AmiBlitz3.ab2@3173>   MOVE.l A7,passstack
000200B8 <AmiBlitz3.ab2@3174>   MOVE.l #firstitem_,sourceline
000200C2 <AmiBlitz3.ab2@3175>   MOVE.w numlines_org,linesleft
000200CC <AmiBlitz3.ab2@3176>   MOVE.l numlines,numlines2
000200D2 <AmiBlitz3.ab2@3177>   ADDQ.w #1,linesleft
000200D8 <AmiBlitz3.ab2@3178>   ADDQ.l #1,numlines2
000200E2 <AmiBlitz3.ab2@3179>   MOVE.l #-1,linenumat
000200E6 <AmiBlitz3.ab2@3180>   BSR.w resetlibs
000200EA <AmiBlitz3.ab2@3181>   BSR.w Aclearallvars
000200F0 <AmiBlitz3.ab2@3182>   LEA progress_per_line+2,A0
000200F2 <AmiBlitz3.ab2@3183>   MOVEQ.l #$03,D0
000200F4 <AmiBlitz3.ab2@3186>     CLR.w (A0)+
000200F8 <AmiBlitz3.ab2@3187>   DBF D0,JL_0_40EC
000200FE <AmiBlitz3.ab2@3190>   LEA _include,a0
00020102 <AmiBlitz3.ab2@3191>   MOVEM.l a0-a6/d0-d7,-(a7)
00020108 <AmiBlitz3.ab2@3192>   LEA ptr_parameterstore,a1
0002010A <AmiBlitz3.ab2@3195>     MOVE.b (a0)+,(a1)+
0002010E <AmiBlitz3.ab2@3196>   BNE 'l1b
00020110 <AmiBlitz3.ab2@3198>   MOVEQ #9,d2
00020116 <AmiBlitz3.ab2@3199>   JSR findlabel2
0002011A <AmiBlitz3.ab2@3200>   BNE 'd
00020122 <AmiBlitz3.ab2@3201>   MOVE.l #0,8(a2)
00020126 <AmiBlitz3.ab2@3202>   MOVEM.l (a7)+,a0-a6/d0-d7
0002012A <AmiBlitz3.ab2@3203> BRA 'd2
00020130 <AmiBlitz3.ab2@3206>   JSR addlabelhash
00020138 <AmiBlitz3.ab2@3207>   MOVE.l #$1,$4(A2)
00020140 <AmiBlitz3.ab2@3208>   MOVE.l #0,8(a2)
00020144 <AmiBlitz3.ab2@3209>   MOVEM.l (a7)+,a0-a6/d0-d7
0002014A <AmiBlitz3.ab2@3212>   LEA _debug,a0
0002014E <AmiBlitz3.ab2@3213>   MOVEM.l a0-a6/d0-d7,-(a7)
00020154 <AmiBlitz3.ab2@3214>   LEA ptr_parameterstore,a1
00020156 <AmiBlitz3.ab2@3217>     MOVE.b (a0)+,(a1)+
0002015A <AmiBlitz3.ab2@3218>   BNE 'l9b
0002015C <AmiBlitz3.ab2@3220>   MOVEQ #7,d2
00020162 <AmiBlitz3.ab2@3221>   JSR findlabel2
00020166 <AmiBlitz3.ab2@3222>   BNE 'd9
0002016A <AmiBlitz3.ab2@3223>   MOVE.b debugmode(PC),D0
0002016C <AmiBlitz3.ab2@3224>   EXT.w d0
0002016E <AmiBlitz3.ab2@3225>   EXT.l d0
00020172 <AmiBlitz3.ab2@3226>   MOVE.l d0,8(a2)
00020176 <AmiBlitz3.ab2@3227>   MOVEM.l (a7)+,a0-a6/d0-d7
0002017A <AmiBlitz3.ab2@3228> BRA 'd9b
00020180 <AmiBlitz3.ab2@3231>   JSR addlabelhash
00020188 <AmiBlitz3.ab2@3232>   MOVE.l #$1,$4(A2)
0002018C <AmiBlitz3.ab2@3233>   MOVE.b debugmode(PC),D0
0002018E <AmiBlitz3.ab2@3234>   EXT.w d0
00020190 <AmiBlitz3.ab2@3235>   EXT.l d0
00020194 <AmiBlitz3.ab2@3236>   MOVE.l d0,8(a2)
00020198 <AmiBlitz3.ab2@3237>   MOVEM.l (a7)+,a0-a6/d0-d7
0002019E <AmiBlitz3.ab2@3240>   MOVE.l #firstitem_,a0
000201A0 <AmiBlitz3.ab2@3241>   MOVE.l (a0),a0
000201A4 <AmiBlitz3.ab2@3242>   LEA 9(a0),a0
000201AC <AmiBlitz3.ab2@3243>   MOVE.w #0,exdebug
000201B2 <AmiBlitz3.ab2@3244>   TST.b debugmode
000201B6 <AmiBlitz3.ab2@3245>    BEQ 'l10
000201B8 <AmiBlitz3.ab2@3248>   MOVE.b (a0)+,d0
000201BC <AmiBlitz3.ab2@3249>    BEQ 'l10
000201C0 <AmiBlitz3.ab2@3250>   CMP.b #$20,d0
000201C4 <AmiBlitz3.ab2@3251>    BEQ 'l2
000201C6 <AmiBlitz3.ab2@3252>   SUBQ.l #1,a0
000201CC <AmiBlitz3.ab2@3253>   CMP.l #"DEBU",(a0)
000201D0 <AmiBlitz3.ab2@3254>    BNE 'l10
000201D6 <AmiBlitz3.ab2@3255>   CMP.b #"G",4(a0)
000201DA <AmiBlitz3.ab2@3256>    BNE 'l10
000201E2 <AmiBlitz3.ab2@3257>   MOVE.w #$0,debugversion
000201EA <AmiBlitz3.ab2@3258>   MOVE.b #1,exdebug
000201F0 <AmiBlitz3.ab2@3261>   LEA nops4,A0
000201F6 <AmiBlitz3.ab2@3262>   LEA dataget,A1
000201FC <AmiBlitz3.ab2@3263>   JSR pokecode2                                            ;write intro nops
00020202 <AmiBlitz3.ab2@3264>   MOVE.l #$01010101,d1
00020208 <AmiBlitz3.ab2@3265>   JSR writedatalong                                        ;for the 4 tempregs
0002020E <AmiBlitz3.ab2@3266>   JSR writedatalong
00020214 <AmiBlitz3.ab2@3267>   JSR writedatalong
0002021A <AmiBlitz3.ab2@3268>   JSR writedatalong
00020220 <AmiBlitz3.ab2@3269>   TST.b saved0
00020224 <AmiBlitz3.ab2@3270>    BEQ 'l1
0002022A <AmiBlitz3.ab2@3271>   MOVE.l #$4e714e71,d1
00020230 <AmiBlitz3.ab2@3272>   JSR writelong                                            ;add 2 nops
00020236 <AmiBlitz3.ab2@3273>   MOVE.l #$4e714e71,d1
0002023C <AmiBlitz3.ab2@3274>   JSR writelong                                            ;add 2 nops
00020242 <AmiBlitz3.ab2@3275>   MOVE.l #$4e714e71,d1
00020248 <AmiBlitz3.ab2@3276>   JSR writelong                                            ;add 2 nops
0002024E <AmiBlitz3.ab2@3277>    MOVE.l #$4e714e71,d1
00020254 <AmiBlitz3.ab2@3278>   JSR writelong                                            ;add 2 nops
00020258 <AmiBlitz3.ab2@3281>   MOVE.b debugmode(PC),D1
0002025C <AmiBlitz3.ab2@3282>    BEQ.b JL_0_4132
00020266 <AmiBlitz3.ab2@3283>   MOVE.b debugmode,storedebugmode
0002026A <AmiBlitz3.ab2@3284>   MOVE.w #$FFDC,D1
0002026E <AmiBlitz3.ab2@3285>    BSR.w uselib
00020274 <AmiBlitz3.ab2@3286>   TST.w debugversion                                       ;make a version for debugger
00020278 <AmiBlitz3.ab2@3287>    BNE.b JL_0_412A
0002027C <AmiBlitz3.ab2@3291>   MOVE.w #$FA3C,D1
00020280 <AmiBlitz3.ab2@3292>    BSR.w uselib
00020284 <AmiBlitz3.ab2@3293>   MOVE.w #$0001,D1
00020288 <AmiBlitz3.ab2@3294>    BSR.w uselib
0002028C <AmiBlitz3.ab2@3295> BRA.b JL_0_4132
00020290 <AmiBlitz3.ab2@3298>   MOVE.w #$FA32,D1
00020294 <AmiBlitz3.ab2@3299>   BSR.w uselib
00020298 <AmiBlitz3.ab2@3302>   BSR.w nextline
0002029E <AmiBlitz3.ab2@3303>   CLR.l linenum
000202A4 <AmiBlitz3.ab2@3304>   CLR.l stacktrack
000202AA <AmiBlitz3.ab2@3307>   ADDQ.l #1,linenum
000202B4 <AmiBlitz3.ab2@3308>   MOVE.l destpointer,destpointer2
000202BA <AmiBlitz3.ab2@3309>   MOVE.l a5,sourceline2
000202BE <AmiBlitz3.ab2@3310>   BSR.w compile_line                                        ;compile pass
000202C2 <AmiBlitz3.ab2@3313>   BSR.w nextline
000202C6 <AmiBlitz3.ab2@3314>    BNE.w JL_0_4136
000202CA <AmiBlitz3.ab2@3315>   BSR.w JUMP_do_runerrson
000202CE <AmiBlitz3.ab2@3316>   BSR.w pointchk
000202D4 <AmiBlitz3.ab2@3317>   TST.b objectcount
000202D8 <AmiBlitz3.ab2@3318>    BNE macenderr
000202DE <AmiBlitz3.ab2@3319>   CLR.l linenumat
000202E2 <AmiBlitz3.ab2@3320>   BSR.w errchx2
000202EC <AmiBlitz3.ab2@3321>   CMP.l #-1,bssend
000202F0 <AmiBlitz3.ab2@3322>    BNE 'l30
000202FA <AmiBlitz3.ab2@3323>   MOVE.l destpointer,bssend                                ;compile end
00020300 <AmiBlitz3.ab2@3326>   MOVE.l destpointer,d0
0002030A <AmiBlitz3.ab2@3327>   CMP.l #-1,bssstart
0002030E <AmiBlitz3.ab2@3328>   BNE 'lnf6
00020318 <AmiBlitz3.ab2@3329>   CMP.l #-1,chipstart
0002031C <AmiBlitz3.ab2@3330>   BNE 'lnf6
00020320 <AmiBlitz3.ab2@3331> BRA 'leven4
00020326 <AmiBlitz3.ab2@3334>   MOVE.l destpointer,d1
00020328 <AmiBlitz3.ab2@3335>   ADDQ.l #3,d1
0002032E <AmiBlitz3.ab2@3336>   AND.l #$fffffffc,d1                                      ;bug ?
00020334 <AmiBlitz3.ab2@3337>   MOVE.l d1,destpointer
0002033E <AmiBlitz3.ab2@3340>   MOVE.l destpointer,codeend
00020348 <AmiBlitz3.ab2@3341>   CMP.l #-1,chipend
0002034C <AmiBlitz3.ab2@3342>   BNE 'l31
00020356 <AmiBlitz3.ab2@3343>   MOVE.l destpointer,chipend
0002035C <AmiBlitz3.ab2@3346>   MOVE.l destpointer,d1
0002035E <AmiBlitz3.ab2@3347>   ADDQ.l #1,d1
00020364 <AmiBlitz3.ab2@3348>   AND.l #$fffffffe,d1                                     ;new evenexit
0002036A <AmiBlitz3.ab2@3349>   MOVE.l d1,destpointer
0002036E <AmiBlitz3.ab2@3350>   MOVE.b debugmode(PC),D1
00020372 <AmiBlitz3.ab2@3351>    BEQ.b JL_0_4180
00020376 <AmiBlitz3.ab2@3352>    BSR.w debugstuff
0002037A <AmiBlitz3.ab2@3353>   MOVE.w #$C300,D1
00020380 <AmiBlitz3.ab2@3354>    JSR Atokejsr
00020384 <AmiBlitz3.ab2@3355>    BSR.w debugstuff
00020388 <AmiBlitz3.ab2@3356>   MOVE.l eopcode(PC),D1
0002038E <AmiBlitz3.ab2@3357>    JSR writelong
00020392 <AmiBlitz3.ab2@3358>   MOVE.l lastcontlink(PC),D1
00020396 <AmiBlitz3.ab2@3359>    BEQ.b JL_0_4180
00020398 <AmiBlitz3.ab2@3360>   MOVEA.l D1,A0
0002039C <AmiBlitz3.ab2@3361>   CLR.w $6(A0)
000203A6 <AmiBlitz3.ab2@3367>   MOVE.l destpointer,endop                                ;where end goes...
000203AC <AmiBlitz3.ab2@3369>   TST.w blitzmode
000203B0 <AmiBlitz3.ab2@3370>   BEQ.w JL_0_4198
000203B4 <AmiBlitz3.ab2@3371>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
000203BA <AmiBlitz3.ab2@3374>   TST.w intsused
000203BE <AmiBlitz3.ab2@3375>   BEQ.b JL_0_41AA
000203C2 <AmiBlitz3.ab2@3376>   MOVE.w #$C105,D1                                        ;interupts off!
000203C8 <AmiBlitz3.ab2@3377>   JSR tokejsr2
000203CC <AmiBlitz3.ab2@3380>   BSR.w calcstatic
000203D2 <AmiBlitz3.ab2@3381>   MOVE.w D4,numstatic
000203D8 <AmiBlitz3.ab2@3382>   MOVE.l D3,staticdata
000203DC <AmiBlitz3.ab2@3383>    BSR.w calcmaxs
000203E2 <AmiBlitz3.ab2@3385>   TST.l tokeslist
000203E6 <AmiBlitz3.ab2@3386>    BEQ.b JL_0_41F8
000203EC <AmiBlitz3.ab2@3387>   MOVE.w gotocode,D1                                       ;jmp!
000203F2 <AmiBlitz3.ab2@3388>    JSR writeword
000203FC <AmiBlitz3.ab2@3389>   MOVE.l destpointer,endjmpat
00020400 <AmiBlitz3.ab2@3390>    BSR.w addoff
00020406 <AmiBlitz3.ab2@3391>    JSR writelong                                           
0002040A <AmiBlitz3.ab2@3393>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00020410 <AmiBlitz3.ab2@3397>   TST.w dontwrite
00020414 <AmiBlitz3.ab2@3398>    BNE.b JL_0_41F8
00020418 <AmiBlitz3.ab2@3399>   MOVEA.l endjmpat(PC),A4
0002041E <AmiBlitz3.ab2@3400>   MOVE.l destpointer,(A4)
00020424 <AmiBlitz3.ab2@3403>   TST.b returncode
00020428 <AmiBlitz3.ab2@3404>   BEQ 'l2
0002042C <AmiBlitz3.ab2@3405>   MOVE.w #$2e80,d1
00020432 <AmiBlitz3.ab2@3406>   JSR writeword
00020438 <AmiBlitz3.ab2@3409>   JSR JL_0_B98A
0002043E <AmiBlitz3.ab2@3410>   TST.b returncode
00020442 <AmiBlitz3.ab2@3411>   BEQ 'l3
00020446 <AmiBlitz3.ab2@3412>   MOVE.w #$4e75,d1
0002044C <AmiBlitz3.ab2@3413>   JSR writeword
00020450 <AmiBlitz3.ab2@3414> BRA 'l1
00020456 <AmiBlitz3.ab2@3417>   MOVE.l #$70004E75,D1
0002045C <AmiBlitz3.ab2@3418>   JSR writelong                                            ;write moveq #0,d0:rts
00020462 <AmiBlitz3.ab2@3421>   JSR JL_0_B73E
00020466 <AmiBlitz3.ab2@3422>   BSR.w asmfixer
0002046A <AmiBlitz3.ab2@3423>   BSR.w close_compilewin
0002046E <AmiBlitz3.ab2@3424> BRA.w call_setpointernormal
00020474 <AmiBlitz3.ab2@3428> JMP do_runerrson
00020476 <AmiBlitz3.ab2@3432> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00020478 <AmiBlitz3.ab2@3433>             Dc.b $4E,$40                                   ;TRAP  #00
0002047C <AmiBlitz3.ab2@3435> endjmpat:   Ds.l 1
00020482 <AmiBlitz3.ab2@3439>   MOVEA.l newtype_string,A2
00020488 <AmiBlitz3.ab2@3440>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
0002048C <AmiBlitz3.ab2@3443>     CMPA.w #$0,A2
00020490 <AmiBlitz3.ab2@3444>      BEQ.w pointchk_done
00020494 <AmiBlitz3.ab2@3445>     CMP.l $4(A2),D0
00020498 <AmiBlitz3.ab2@3446>      BNE.w pointchk_next
000204A0 <AmiBlitz3.ab2@3447>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
000204A4 <AmiBlitz3.ab2@3448> BRA.w notypeerr
000204A6 <AmiBlitz3.ab2@3451>     MOVEA.l (A2),A2
000204AA <AmiBlitz3.ab2@3452> BRA.w pointchk_loop
000204AC <AmiBlitz3.ab2@3455> RTS
000204B2 <AmiBlitz3.ab2@3459>   LEA labelbase,A2
000204B4 <AmiBlitz3.ab2@3463>   MOVE.l (A2),D0                                           ;testlabels
000204B8 <AmiBlitz3.ab2@3464>    BEQ.w errchx2_done
000204BA <AmiBlitz3.ab2@3465>   MOVEA.l D0,A2
000204BE <AmiBlitz3.ab2@3466>   MOVE.l $4(A2),D0
000204C2 <AmiBlitz3.ab2@3467>   BTST #$0,D0
000204C6 <AmiBlitz3.ab2@3468>    BNE.w errchx2_loop
000204CA <AmiBlitz3.ab2@3469>   MOVE.l $8(A2),D0
000204CE <AmiBlitz3.ab2@3470>    BNE.w errchx2_loop
000204D6 <AmiBlitz3.ab2@3471>   MOVE.w $10(A2),linenumat+2
000204D8 <AmiBlitz3.ab2@3472>   MOVEQ #0,d0
000204DC <AmiBlitz3.ab2@3473>   MOVE.b $12(a2),d0
000204E4 <AmiBlitz3.ab2@3474>   MOVE.w 0(a2,d0),linenumat
000204EA <AmiBlitz3.ab2@3475> JMP nolaberr                                               ;label not found
000204F0 <AmiBlitz3.ab2@3478>   MOVE.l concomsp,D0
000204F6 <AmiBlitz3.ab2@3479>   CMP.l #concomstack,D0
000204FA <AmiBlitz3.ab2@3480>    BNE.w chxerr4
00020500 <AmiBlitz3.ab2@3481>   MOVE.w connest,D1
00020504 <AmiBlitz3.ab2@3482>    BNE.w chxerr4
00020506 <AmiBlitz3.ab2@3485>   MOVE.l D1,-(A7)
0002050C <AmiBlitz3.ab2@3486>   MOVE.l firstsel,D1
00020510 <AmiBlitz3.ab2@3487>    BNE.w errchx_err1
00020516 <AmiBlitz3.ab2@3488>   MOVE.l firstrep,D1
0002051A <AmiBlitz3.ab2@3489>    BNE.w errchx_err2
00020520 <AmiBlitz3.ab2@3490>   MOVE.w intstring,D1
00020524 <AmiBlitz3.ab2@3491>    BNE.w errchx_err3
00020528 <AmiBlitz3.ab2@3492>   MOVE.l 4(a7),d1
0002052E <AmiBlitz3.ab2@3493>   MOVE.w proceduremode,D1
00020532 <AmiBlitz3.ab2@3494>    BNE.w errchx_err6
00020538 <AmiBlitz3.ab2@3495>   MOVE.l firstiff,d1
0002053C <AmiBlitz3.ab2@3496>    BNE errchx_err5
00020542 <AmiBlitz3.ab2@3497>   MOVE.l firstfor,D1
00020546 <AmiBlitz3.ab2@3498>    BNE.w errchx_err7
00020548 <AmiBlitz3.ab2@3499>   MOVE.l (A7)+,D1
0002054A <AmiBlitz3.ab2@3500> RTS
00020554 <AmiBlitz3.ab2@3504>   MOVE.l sellineat,linenumat
0002055A <AmiBlitz3.ab2@3505> JMP selerrz
00020564 <AmiBlitz3.ab2@3508>   MOVE.l replineat,linenumat
0002056A <AmiBlitz3.ab2@3509> JMP unterr3
00020574 <AmiBlitz3.ab2@3512>   MOVE.l intlineat,linenumat
0002057A <AmiBlitz3.ab2@3513> JMP interr2
00020584 <AmiBlitz3.ab2@3516>   MOVE.l iflineat,linenumat
0002058A <AmiBlitz3.ab2@3517> JMP noenderr
00020594 <AmiBlitz3.ab2@3520>   MOVE.l prolineat,linenumat
0002059A <AmiBlitz3.ab2@3521> JMP nopenderr
000205A4 <AmiBlitz3.ab2@3524>   MOVE.l forlineat,linenumat
000205AA <AmiBlitz3.ab2@3525> JMP nonexterr
000205B4 <AmiBlitz3.ab2@3528>   MOVE.l ciflineat,linenumat
000205BA <AmiBlitz3.ab2@3529> JMP nocenderr
000205C4 <AmiBlitz3.ab2@3533>   MOVE.l data1,maxsat
000205C6 <AmiBlitz3.ab2@3534>   MOVEQ.l #$00,D4
000205CC <AmiBlitz3.ab2@3535>   MOVEA.l libpointer,A2
000205D0 <AmiBlitz3.ab2@3538>     CMPA.w #$0,A2
000205D4 <AmiBlitz3.ab2@3539>      BEQ.w calcmaxs_done
000205D8 <AmiBlitz3.ab2@3540>     TST.w $C(A2)
000205DC <AmiBlitz3.ab2@3541>      BPL.w calcmaxs_next
000205E0 <AmiBlitz3.ab2@3542>     MOVE.l $12(A2),D0
000205E4 <AmiBlitz3.ab2@3543>     TST.w -$2(A2,D0.L)
000205E8 <AmiBlitz3.ab2@3544>      BEQ.w calcmaxs_next
000205EA <AmiBlitz3.ab2@3545>     ADDQ.w #1,D4
000205EE <AmiBlitz3.ab2@3546>     MOVE.w -$6(A2,D0.L),D1
000205F2 <AmiBlitz3.ab2@3547>     BSR.w pokedata1
000205F4 <AmiBlitz3.ab2@3548>     MOVEQ.l #$01,D1
000205F8 <AmiBlitz3.ab2@3549>     MOVE.w -$2(A2,D0.L),D2
000205FA <AmiBlitz3.ab2@3550>     LSL.w D2,D1
000205FE <AmiBlitz3.ab2@3551>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00020602 <AmiBlitz3.ab2@3552>     BSR.w writedatalong
00020604 <AmiBlitz3.ab2@3555>     MOVEA.l (A2),A2
00020608 <AmiBlitz3.ab2@3556> BRA.w calcmaxs_loop
0002060E <AmiBlitz3.ab2@3559>   MOVE.w D4,maxsused
00020612 <AmiBlitz3.ab2@3560>    BEQ.w calcmaxs_done2
00020616 <AmiBlitz3.ab2@3561>   MOVE.w #$FFFA,D1                                         ;;use memlib
0002061A <AmiBlitz3.ab2@3562> BRA.w uselib
0002061C <AmiBlitz3.ab2@3565> RTS
00020622 <AmiBlitz3.ab2@3569>    MOVE.l a7,stackaddr
00020626 <AmiBlitz3.ab2@3570>    BSR.w compile_term
0002062A <AmiBlitz3.ab2@3571>    BSR.w reget
0002062E <AmiBlitz3.ab2@3572>    BNE.w illeolerr
00020634 <AmiBlitz3.ab2@3573>    TST.w dontwrite
00020638 <AmiBlitz3.ab2@3574>    BNE 'l1
0002063E <AmiBlitz3.ab2@3575>    TST.l stacktrack
00020642 <AmiBlitz3.ab2@3576>    BNE errormsg_stack
00020646 <AmiBlitz3.ab2@3579>    CMP.w #-$7FDE,D0
0002064A <AmiBlitz3.ab2@3580>    BNE.w compile_line_notelse
00020650 <AmiBlitz3.ab2@3581>    JSR do_else2
00020654 <AmiBlitz3.ab2@3582> BRA.w compile_line
00020656 <AmiBlitz3.ab2@3585>   TST.w D0
0002065A <AmiBlitz3.ab2@3586>   BNE.w compile_line
00020660 <AmiBlitz3.ab2@3591>   MOVE.l firstiff,D0
00020664 <AmiBlitz3.ab2@3592>    BEQ.w compile_line_done
00020666 <AmiBlitz3.ab2@3593>   MOVEA.l D0,A0
0002066A <AmiBlitz3.ab2@3594>   MOVE.w $C(A0),D1
0002066E <AmiBlitz3.ab2@3595>    BPL.w compile_line_done
00020672 <AmiBlitz3.ab2@3599>   BCLR #$F,D1
00020678 <AmiBlitz3.ab2@3600>    JSR AJL_0_D7B8
0002067E <AmiBlitz3.ab2@3601>    JSR AJL_0_D81C
00020682 <AmiBlitz3.ab2@3602> BRA.w compile_line_unthen
00020684 <AmiBlitz3.ab2@3605> RTS
0002068A <AmiBlitz3.ab2@3609>   LEA lastgloballabel,A0
0002068C <AmiBlitz3.ab2@3610>   TST.b (A0)
00020690 <AmiBlitz3.ab2@3611>    BEQ.w nolocerr
00020696 <AmiBlitz3.ab2@3612>   LEA ptr_parameterstore,A1
00020698 <AmiBlitz3.ab2@3613>   MOVEQ.l #$00,D2
0002069A <AmiBlitz3.ab2@3616>   ADDQ.w #1,D2
0002069C <AmiBlitz3.ab2@3617>   MOVE.b (A0)+,(A1)+
000206A0 <AmiBlitz3.ab2@3618>    BNE.w createlab_loop
000206A6 <AmiBlitz3.ab2@3619>   MOVE.b #$27,-$1(A1)
000206A8 <AmiBlitz3.ab2@3620>   MOVE.w D2,-(A7)
000206AE <AmiBlitz3.ab2@3621>    JSR makename4
000206B0 <AmiBlitz3.ab2@3622>   CMP.w (A7)+,D2
000206B4 <AmiBlitz3.ab2@3623>    BEQ.w syntaxerr
000206B6 <AmiBlitz3.ab2@3624>    TST.w d0
000206BA <AmiBlitz3.ab2@3625>    BPL createlab_done
000206C2 <AmiBlitz3.ab2@3626>    MOVE.w #$3a,lastchar
000206C4 <AmiBlitz3.ab2@3627>    SUBQ.l #2,a5
000206C6 <AmiBlitz3.ab2@3630> RTS
000206D0 <AmiBlitz3.ab2@3634>   MOVE.l #forthstack,forthsp
000206DA <AmiBlitz3.ab2@3635>   MOVE.l #precstack,precsp
000206DC <AmiBlitz3.ab2@3636> RTS
000206DE <AmiBlitz3.ab2@3643>   MOVEQ.l #$00,D4
00020708 <AmiBlitz3.ab2@3646>   !basic
0002074A <AmiBlitz3.ab2@3647> 
0002075A <AmiBlitz3.ab2@3649>   If (c_abort = 1)           ; check if set
0002075C <AmiBlitz3.ab2@3650>     MOVEQ.l #-$01,d4
00020762 <AmiBlitz3.ab2@3651>     MOVE.w D4,stopit
00020780 <AmiBlitz3.ab2@3652>     !asm
00020784 <AmiBlitz3.ab2@3653>     BRA chkrealstop__skip
000207A2 <AmiBlitz3.ab2@3655>   !asm
000207A4 <AmiBlitz3.ab2@3656>   MOVEQ.l #$00,D6
000207A6 <AmiBlitz3.ab2@3657>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
000207A8 <AmiBlitz3.ab2@3661> RTS
000207AC <AmiBlitz3.ab2@3665>   MOVE.w stopit(PC),D0
000207B0 <AmiBlitz3.ab2@3666>   BEQ chkstop__chk
000207B6 <AmiBlitz3.ab2@3667>   SUBQ.w #1,stopit
000207B8 <AmiBlitz3.ab2@3671> RTS
000207C0 <AmiBlitz3.ab2@3674>   MOVE.w #2000,stopit
000207C4 <AmiBlitz3.ab2@3675>   BSR.w chkrealstop
000207C8 <AmiBlitz3.ab2@3676>   BEQ.b chkstop__rts
000207CC <AmiBlitz3.ab2@3678>   BSR.w close_compilewin
000207D0 <AmiBlitz3.ab2@3679>   BSR.w call_setpointernormal
000207D6 <AmiBlitz3.ab2@3681>   MOVEA.l errstack,A7
000207DC <AmiBlitz3.ab2@3682>   MOVEA.l errcont,A0
000207E4 <AmiBlitz3.ab2@3683>   MOVE.w #-1,anyerrs
000207E6 <AmiBlitz3.ab2@3684> JMP (A0)
000207EA <AmiBlitz3.ab2@3687> d_pc:           Ds.l 1
000207EE <AmiBlitz3.ab2@3688> d_bigpc:        Ds.l 1
000207F0 <AmiBlitz3.ab2@3689> d_nomemleft:    Ds.w 1
000207F4 <AmiBlitz3.ab2@3690> cont_pc:        Ds.l 1
000207F8 <AmiBlitz3.ab2@3691> cont_pc2:       Ds.l 1
000207FC <AmiBlitz3.ab2@3692> lastcontlink:   Ds.l 1
00020800 <AmiBlitz3.ab2@3696>   ORI.w #$4E40,D1
00020804 <AmiBlitz3.ab2@3697> BRA.w JUMP_writeword
0002080A <AmiBlitz3.ab2@3701>   TST.b debugmode
0002080E <AmiBlitz3.ab2@3702>   BEQ.w debugstuff__rts
00020814 <AmiBlitz3.ab2@3709>   TST.w dirmode                                            ;or while in direct mode...
00020818 <AmiBlitz3.ab2@3710>    BNE debugstuff__rts
00020822 <AmiBlitz3.ab2@3711>   MOVE.l destpointer,d_pc
0002082C <AmiBlitz3.ab2@3712>   MOVE.l bigpc,d_bigpc
00020836 <AmiBlitz3.ab2@3713>   MOVE.w dontwrite,d_nomemleft
0002083A <AmiBlitz3.ab2@3714>   MOVEM.l D0-D1,-(A7)
0002083C <AmiBlitz3.ab2@3715>   MOVEQ.l #$01,D1
00020840 <AmiBlitz3.ab2@3716>    BSR.w writetrap                                         ;write the adress to sourceline
00020846 <AmiBlitz3.ab2@3720>    MOVE.l destpointer,D0
0002084C <AmiBlitz3.ab2@3721>   MOVE.l cont_pc,D1
00020852 <AmiBlitz3.ab2@3722>   MOVE.l D0,cont_pc
00020858 <AmiBlitz3.ab2@3723>   MOVE.l D1,cont_pc2
0002085C <AmiBlitz3.ab2@3724>    BEQ.b debugstuff__skip
00020862 <AmiBlitz3.ab2@3725>   TST.w dontwrite
00020866 <AmiBlitz3.ab2@3726>    BNE.b debugstuff__skip
00020868 <AmiBlitz3.ab2@3727>   MOVEA.l D1,A4
0002086A <AmiBlitz3.ab2@3728>   SUB.l A4,D0
0002086E <AmiBlitz3.ab2@3729>   MOVE.w D0,$6(A4)
00020874 <AmiBlitz3.ab2@3730>   MOVE.l A4,lastcontlink
0002087A <AmiBlitz3.ab2@3733>   TST.w ininclude
00020880 <AmiBlitz3.ab2@3735>   TST.w makeexec
00020884 <AmiBlitz3.ab2@3736>   BEQ 'l1
0002088A <AmiBlitz3.ab2@3737>   TST.w exdebug
0002088E <AmiBlitz3.ab2@3738>   BEQ 'noinc
00020892 <AmiBlitz3.ab2@3741>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00020898 <AmiBlitz3.ab2@3742>   MOVE.l data1,d1
0002089E <AmiBlitz3.ab2@3743>   TST.b firsttime
000208A2 <AmiBlitz3.ab2@3744>   BNE 'nofirst
000208AA <AmiBlitz3.ab2@3745>   MOVE.b #1,firsttime
000208B0 <AmiBlitz3.ab2@3746>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
000208B6 <AmiBlitz3.ab2@3747>   JSR writedatalong
000208BC <AmiBlitz3.ab2@3748>   MOVE.l #"AmiB",d1
000208C2 <AmiBlitz3.ab2@3749>   JSR writedatalong
000208C8 <AmiBlitz3.ab2@3750>   MOVE.l destbufferstart,d1
000208CE <AmiBlitz3.ab2@3751>   JSR writedatalong
000208D4 <AmiBlitz3.ab2@3752>   TST.w dontwrite
000208D8 <AmiBlitz3.ab2@3753>   BNE 'nohunk
000208DE <AmiBlitz3.ab2@3754>   MOVE.l data1,d1
000208E0 <AmiBlitz3.ab2@3755>   SUBQ.l #4,d1
000208E6 <AmiBlitz3.ab2@3756>   SUB.l destbufferstart,d1
000208E8 <AmiBlitz3.ab2@3757>   MOVE.l d1,d2
000208EE <AmiBlitz3.ab2@3758>   JSR addhunkoffset
000208F4 <AmiBlitz3.ab2@3761>   MOVE.l destpointer,d2
000208FA <AmiBlitz3.ab2@3762>   MOVE.l data1,d1
00020900 <AmiBlitz3.ab2@3765>   MOVE.l destpointer,d2
00020902 <AmiBlitz3.ab2@3766>   MOVE.l d1,d3
00020908 <AmiBlitz3.ab2@3767>   SUB.l destbufferstart,d1
0002090E <AmiBlitz3.ab2@3768>   OR.l #$80000000,d1
00020914 <AmiBlitz3.ab2@3769>   JSR writelong
0002091A <AmiBlitz3.ab2@3770>   TST.w inmacro
0002091E <AmiBlitz3.ab2@3771>   BEQ 'sc1
00020924 <AmiBlitz3.ab2@3772>   MOVE.l myline,a0
00020928 <AmiBlitz3.ab2@3774> BRA 'inc2
0002092E <AmiBlitz3.ab2@3776>  'sc1  TST.w ininclude
00020932 <AmiBlitz3.ab2@3777>   BEQ 'inc
00020938 <AmiBlitz3.ab2@3778>   MOVE.l includesourceline,a0
0002093C <AmiBlitz3.ab2@3779> BRA 'inc2
00020942 <AmiBlitz3.ab2@3782>   MOVE.l sourceline,a0
00020946 <AmiBlitz3.ab2@3783>   LEA 9(a0),a0
00020948 <AmiBlitz3.ab2@3786>   MOVE.l d1,d2
0002094A <AmiBlitz3.ab2@3787>   MOVE.l A5,D1
0002094C <AmiBlitz3.ab2@3788>   SUB.l a0,D1
00020952 <AmiBlitz3.ab2@3789>   ADD.l #9,d1
00020956 <AmiBlitz3.ab2@3790>   BSR.w JUMP_writeword
0002095C <AmiBlitz3.ab2@3791>   CMP.l #9,d1
00020960 <AmiBlitz3.ab2@3792>   BEQ 'pos1
00020966 <AmiBlitz3.ab2@3793>   TST.w dontwrite
0002096A <AmiBlitz3.ab2@3794>   BNE 'nopad
00020970 <AmiBlitz3.ab2@3795>   MOVE.l lastsourceline,d1
00020974 <AmiBlitz3.ab2@3796>   MOVE.l d1,-6(a4)
00020978 <AmiBlitz3.ab2@3797> BRA 'nopad
0002097E <AmiBlitz3.ab2@3800>   MOVE.l d2,lastsourceline
00020988 <AmiBlitz3.ab2@3801>    MOVE.l destpointer,lastdestpointer
0002098A <AmiBlitz3.ab2@3802>    MOVEQ #0,d1
00020990 <AmiBlitz3.ab2@3803>   MOVE.l data1,d2
00020996 <AmiBlitz3.ab2@3804>   SUB.l destbufferstart,d2
0002099C <AmiBlitz3.ab2@3805>   JSR writedatalong
000209A2 <AmiBlitz3.ab2@3806>   TST.w dontwrite
000209A6 <AmiBlitz3.ab2@3807>   BNE 'no2
000209AC <AmiBlitz3.ab2@3808>   JSR addhunkoffset
000209B2 <AmiBlitz3.ab2@3811>   MOVE.l data1,d2
000209B8 <AmiBlitz3.ab2@3812>   SUB.l destbufferstart,d2
000209BE <AmiBlitz3.ab2@3813>   JSR writedatalong
000209C4 <AmiBlitz3.ab2@3814>   TST.w dontwrite
000209C8 <AmiBlitz3.ab2@3815>   BNE 'no
000209CE <AmiBlitz3.ab2@3816>   JSR addhunkoffset
000209D4 <AmiBlitz3.ab2@3817>   MOVE.l lastwritedat,a1
000209DA <AmiBlitz3.ab2@3818>   CMP.l #0,a1
000209DE <AmiBlitz3.ab2@3819>   BEQ 'no
000209E0 <AmiBlitz3.ab2@3820>   MOVE.l d3,(a1)
000209E8 <AmiBlitz3.ab2@3821>   MOVE.l prevwritedat,4(a1)
000209F2 <AmiBlitz3.ab2@3822>   MOVE.l lastwritedat,prevwritedat
000209F8 <AmiBlitz3.ab2@3825>   MOVE.l d3,lastwritedat
000209FA <AmiBlitz3.ab2@3826>   MOVEQ #4,d1
000209FE <AmiBlitz3.ab2@3827>   BSR pokedata1b
00020A00 <AmiBlitz3.ab2@3830>   MOVE.b (a0)+,d1
00020A04 <AmiBlitz3.ab2@3831>   BEQ 'done
00020A08 <AmiBlitz3.ab2@3832>   BSR pokedata1b
00020A0C <AmiBlitz3.ab2@3833> BRA 'loop
00020A0E <AmiBlitz3.ab2@3836>   MOVEQ #0,d1
00020A12 <AmiBlitz3.ab2@3837>   BSR pokedata1b
00020A18 <AmiBlitz3.ab2@3838>   MOVE.l data1,d1
00020A1C <AmiBlitz3.ab2@3839>   BTST #0,d1
00020A20 <AmiBlitz3.ab2@3840>   BEQ 'nopad
00020A22 <AmiBlitz3.ab2@3841>   MOVEQ #0,d1
00020A26 <AmiBlitz3.ab2@3842>   BSR pokedata1b
00020A2A <AmiBlitz3.ab2@3845>   MOVEM.l (a7)+,a0-a1/d2/d3
00020A2E <AmiBlitz3.ab2@3846> BRA 'noinc2
00020A34 <AmiBlitz3.ab2@3849>   MOVE.l sourceline,D1
00020A3A <AmiBlitz3.ab2@3851>   JSR writelong
00020A3C <AmiBlitz3.ab2@3852>   MOVE.l A5,D1
00020A42 <AmiBlitz3.ab2@3853>   SUB.l sourceline,D1
00020A48 <AmiBlitz3.ab2@3855>   JSR writeword
00020A4A <AmiBlitz3.ab2@3858>   MOVEQ.l #$00,D1
00020A50 <AmiBlitz3.ab2@3859>   JSR writeword                                            ; was: BSR.w writeword
00020A54 <AmiBlitz3.ab2@3860>   MOVEM.l (A7)+,D0-D1
00020A56 <AmiBlitz3.ab2@3863> RTS
00020A5C <AmiBlitz3.ab2@3867>   TST.b debugmode                                          ;extern debug
00020A60 <AmiBlitz3.ab2@3868>    BEQ.b undodebug__rts
00020A66 <AmiBlitz3.ab2@3869>   TST.b dirmode
00020A6A <AmiBlitz3.ab2@3870>   BNE undodebug__rts
00020A74 <AmiBlitz3.ab2@3875>   MOVE.w d_nomemleft,dontwrite
00020A7E <AmiBlitz3.ab2@3876>   MOVE.l d_bigpc,bigpc
00020A88 <AmiBlitz3.ab2@3877>   MOVE.l d_pc,destpointer
00020A92 <AmiBlitz3.ab2@3878>   MOVE.l cont_pc2,cont_pc
00020A94 <AmiBlitz3.ab2@3881> RTS
00020A9E <AmiBlitz3.ab2@3885>   MOVE.l #forthstack,forthsp
00020AA8 <AmiBlitz3.ab2@3886>   MOVE.l #precstack,precsp
00020AAE <AmiBlitz3.ab2@3887>   CLR.w regnum
00020AB4 <AmiBlitz3.ab2@3888>   CLR.w nonew
00020ABA <AmiBlitz3.ab2@3889>   CLR.w sbasegot
00020AC4 <AmiBlitz3.ab2@3890>   MOVE.w varcodelen,oldvcodelen
00020ACA <AmiBlitz3.ab2@3891>   CLR.w varcodelen
00020AD2 <AmiBlitz3.ab2@3892>   MOVE.w #-1,lasta6
00020AD4 <AmiBlitz3.ab2@3893> RTS
00020ADA <AmiBlitz3.ab2@3897>   TST.w linemode
00020ADE <AmiBlitz3.ab2@3898>   BMI.b smode__skip
00020AE2 <AmiBlitz3.ab2@3899>   BSR.w undodebug
00020AE8 <AmiBlitz3.ab2@3900>   MOVE.w linemode,D1
00020AEA <AmiBlitz3.ab2@3901>   ADDQ.w #4,A7
00020AEC <AmiBlitz3.ab2@3902>   LSL.w #2,D1
00020AF2 <AmiBlitz3.ab2@3903>   LEA modetable,A0
00020AF6 <AmiBlitz3.ab2@3904>   MOVEA.l $0(A0,D1.W),A0
00020AFA <AmiBlitz3.ab2@3905>   BSR.w reget
00020AFC <AmiBlitz3.ab2@3908> JMP (A0)                                                   ;jumptokenroutine
00020AFE <AmiBlitz3.ab2@3911> RTS
00020B06 <AmiBlitz3.ab2@3916>   MOVE.w #0,leaa0a0+2
00020B0C <AmiBlitz3.ab2@3917>   CLR.b nowdeclare
00020B12 <AmiBlitz3.ab2@3918>   CLR.b notypecheck
00020B18 <AmiBlitz3.ab2@3919>   CLR.l lasttoken
00020B1E <AmiBlitz3.ab2@3920>   CLR.b doimmediate
00020B24 <AmiBlitz3.ab2@3921>   CLR.w vartype
00020B2A <AmiBlitz3.ab2@3922>   CLR.w regnumfunc
00020B30 <AmiBlitz3.ab2@3923>   CLR.b optistring
00020B36 <AmiBlitz3.ab2@3924>   CLR.b iniffcommand
00020B3C <AmiBlitz3.ab2@3925>   CLR.w instringon  ; new
00020B42 <AmiBlitz3.ab2@3926>   CLR.b funccall
00020B48 <AmiBlitz3.ab2@3927>   CLR.l currentfunccall
00020B4E <AmiBlitz3.ab2@3928>   CLR.l leftsidetype
00020B54 <AmiBlitz3.ab2@3929>   CLR.l rightsidetype
00020B5A <AmiBlitz3.ab2@3930>   CLR.b peekaddrsize
00020B60 <AmiBlitz3.ab2@3931>   CLR.b blitzparloop
00020B66 <AmiBlitz3.ab2@3932>   CLR.b funcparloop
00020B6C <AmiBlitz3.ab2@3933>   TST.b debugmode
00020B70 <AmiBlitz3.ab2@3934>    BEQ 'fpu
00020B7A <AmiBlitz3.ab2@3940>   MOVE.b fpu,iee
00020B7E <AmiBlitz3.ab2@3941>   MOVE.w stopit(PC),D0
00020B82 <AmiBlitz3.ab2@3942>   BNE chkstop_chkb
00020B86 <AmiBlitz3.ab2@3943>   BSR.w chkstop                                          ; message here
00020B8C <AmiBlitz3.ab2@3946>   SUBQ.w #1,stopit
00020B90 <AmiBlitz3.ab2@3949>   BSR.w findmacro                                          ;macro
00020B96 <AmiBlitz3.ab2@4003>   TST.b debugmode
00020B9A <AmiBlitz3.ab2@4004>    BEQ.s 'l10
00020BA0 <AmiBlitz3.ab2@4005>   TST.b exdebug
00020BA4 <AmiBlitz3.ab2@4006>   BEQ 'l10a
00020BA6 <AmiBlitz3.ab2@4007>   MOVE.w (a5),d0
00020BAA <AmiBlitz3.ab2@4008>   CMP.w #$8025,d0
00020BAE <AmiBlitz3.ab2@4009>    BEQ 'l10
00020BB2 <AmiBlitz3.ab2@4012>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00020BB6 <AmiBlitz3.ab2@4016>   BSR.w get1bytemain                                       ;gettokenmain
00020BBA <AmiBlitz3.ab2@4017>    BEQ.w undodebug
00020BBE <AmiBlitz3.ab2@4018>   CMP.w #$002b,d0                                            ;check for + cast sign
00020BC2 <AmiBlitz3.ab2@4019>     BNE 'lb2
00020BC6 <AmiBlitz3.ab2@4020>     BSR.w get1bytemain
00020BCE <AmiBlitz3.ab2@4021>     MOVE.b #1,notypecheck
00020BD8 <AmiBlitz3.ab2@4029>   MOVE.l #forthstack,forthsp
00020BE2 <AmiBlitz3.ab2@4030>   MOVE.l #precstack,precsp
00020BE8 <AmiBlitz3.ab2@4031>   CLR.w regnum
00020BEE <AmiBlitz3.ab2@4032>   CLR.w nonew
00020BF4 <AmiBlitz3.ab2@4033>   CLR.w sbasegot
00020BFE <AmiBlitz3.ab2@4034>   MOVE.w varcodelen,oldvcodelen
00020C04 <AmiBlitz3.ab2@4036>   CLR.w varcodelen
00020C0C <AmiBlitz3.ab2@4037>   MOVE.w #$FFFF,lasta6
00020C10 <AmiBlitz3.ab2@4039>   BSR.w smode
00020C12 <AmiBlitz3.ab2@4040>   TST.w D0
00020C16 <AmiBlitz3.ab2@4041>   BMI.w get_tokencode
00020C1A <AmiBlitz3.ab2@4042>   CMP.w #$2E,D0
00020C1E <AmiBlitz3.ab2@4043>    BEQ.w JL_0_4644                                         ;shortlist
00020C22 <AmiBlitz3.ab2@4044>   CMP.w #"#",D0
00020C26 <AmiBlitz3.ab2@4045>    BEQ.w JL_0_4718                                         ;constant found
00020C2A <AmiBlitz3.ab2@4046>   CMP.w #$27,D0
00020C2E <AmiBlitz3.ab2@4047>    BEQ.w JL_0_4638                                         ;local label
00020C34 <AmiBlitz3.ab2@4048>   MOVE.l A5,letstart
00020C3A <AmiBlitz3.ab2@4049>   JSR getparameter
00020C3E <AmiBlitz3.ab2@4050>   BSR.w reget
00020C42 <AmiBlitz3.ab2@4051>    BEQ.w JL_0_4658                                         ;label found
00020C46 <AmiBlitz3.ab2@4052>   CMP.w #$7B,D0
00020C4A <AmiBlitz3.ab2@4053>    BEQ.w JL_0_475C
00020C4C <AmiBlitz3.ab2@4054>   TST.w d0
00020C50 <AmiBlitz3.ab2@4055>    BPL 'll1
00020C56 <AmiBlitz3.ab2@4056>   TST.b newsyntax
00020C5A <AmiBlitz3.ab2@4057>    BEQ 'll1
00020C60 <AmiBlitz3.ab2@4058>   LEA allowtab,a0
00020C62 <AmiBlitz3.ab2@4059>   MOVEQ #0,d1
00020C64 <AmiBlitz3.ab2@4060>   MOVE.b d0,d1
00020C68 <AmiBlitz3.ab2@4061>   TST.b 0(a0,d1.w)
00020C6C <AmiBlitz3.ab2@4062>    BNE 'll1
00020C6E <AmiBlitz3.ab2@4063>   SUBQ.l #2,a5
00020C76 <AmiBlitz3.ab2@4064>   MOVE.w #":",lastchar                                     ;no doublepoint
00020C7A <AmiBlitz3.ab2@4065> BRA JL_0_4658
00020C82 <AmiBlitz3.ab2@4068>   CMP.l #"equ ",-1(a5)
00020C86 <AmiBlitz3.ab2@4069>    BEQ 'll4
00020C8E <AmiBlitz3.ab2@4070>   CMP.l #"EQU ",-1(a5)
00020C92 <AmiBlitz3.ab2@4071>    BNE 'll2
00020C94 <AmiBlitz3.ab2@4074>   ADDQ.l #2,a5
00020C98 <AmiBlitz3.ab2@4075>   BSR.w findlabel2
00020C9C <AmiBlitz3.ab2@4076>   BEQ.w 'lf1
00020CA0 <AmiBlitz3.ab2@4077>   BSR.w addlabelhash
00020CA8 <AmiBlitz3.ab2@4078>   MOVE.l #$1,$4(A2)
00020CB0 <AmiBlitz3.ab2@4081>   CMPI.l #$1,$4(A2)
00020CB4 <AmiBlitz3.ab2@4082>    BNE.w illconerr
00020CB8 <AmiBlitz3.ab2@4083>   BSR get1bytemain
00020CBA <AmiBlitz3.ab2@4084>   MOVE.l A2,-(A7)
00020CBC <AmiBlitz3.ab2@4095>   SUBQ.l #1,a5
00020CBE <AmiBlitz3.ab2@4098>   SUBQ.l #1,a5
00020CC4 <AmiBlitz3.ab2@4099>   JSR AJL_0_BF6E
00020CC6 <AmiBlitz3.ab2@4100>   MOVEA.l (A7)+,A2
00020CCA <AmiBlitz3.ab2@4101>   MOVE.l D3,$8(A2)
00020CCC <AmiBlitz3.ab2@4102>   RTS
00020CD0 <AmiBlitz3.ab2@4103>   BSR get1bytemain
00020CD8 <AmiBlitz3.ab2@4106>   CMP.l #"SET ",-1(a5)
00020CDC <AmiBlitz3.ab2@4107>   BNE 'll3
00020CE0 <AmiBlitz3.ab2@4108> BRA 'll4
00020CE6 <AmiBlitz3.ab2@4111> JMP AJL_0_DEA6
00020CEA <AmiBlitz3.ab2@4114>   CMP.w #-$7FDE,D0
00020CEE <AmiBlitz3.ab2@4115>   BEQ.w get_tokencode
00020CF2 <AmiBlitz3.ab2@4116> BRA.w undodebug
00020CF6 <AmiBlitz3.ab2@4119>   BSR.w undodebug
00020CFA <AmiBlitz3.ab2@4120>   BSR.w createlab
00020CFE <AmiBlitz3.ab2@4121> BRA.w JL_0_466E
00020D02 <AmiBlitz3.ab2@4124>   BSR.w get1bytemain
00020D06 <AmiBlitz3.ab2@4125>    BEQ.w JL_0_462C
00020D0A <AmiBlitz3.ab2@4126>   CMP.w #"'",D0
00020D0E <AmiBlitz3.ab2@4127>    BEQ.w JL_0_4638
00020D12 <AmiBlitz3.ab2@4128>    BSR.w makename2
00020D14 <AmiBlitz3.ab2@4129>    TST.w d0
00020D18 <AmiBlitz3.ab2@4130>    BPL 'll1
00020D1A <AmiBlitz3.ab2@4131>    SUBQ.l #2,a5
00020D22 <AmiBlitz3.ab2@4132>    MOVE.w #":",lastchar
00020D26 <AmiBlitz3.ab2@4133> BRA JL_0_4658                                              ;????
00020D2A <AmiBlitz3.ab2@4137>   BSR.w undodebug
00020D30 <AmiBlitz3.ab2@4138>   LEA ptr_parameterstore,A0
00020D36 <AmiBlitz3.ab2@4139>   LEA lastgloballabel,A1
00020D38 <AmiBlitz3.ab2@4142>   MOVE.b (A0)+,(A1)+
00020D3C <AmiBlitz3.ab2@4143>    BNE.w JL_0_4668
00020D40 <AmiBlitz3.ab2@4146>   BSR.w findlabel2
00020D44 <AmiBlitz3.ab2@4147>    BEQ.w JL_0_4698
00020D48 <AmiBlitz3.ab2@4148>    BSR.w addlabelhash
00020D4C <AmiBlitz3.ab2@4151>   CLR.l $4(A2)
00020D54 <AmiBlitz3.ab2@4152>   MOVE.l destpointer,$8(A2)
00020D5C <AmiBlitz3.ab2@4155>   MOVE.w procnum,$10(A2)
00020D5E <AmiBlitz3.ab2@4156> RTS
00020D62 <AmiBlitz3.ab2@4160>   MOVE.l $4(A2),D0
00020D66 <AmiBlitz3.ab2@4161>   BTST #$0,D0
00020D6A <AmiBlitz3.ab2@4162>    BNE.w illlaberr
00020D70 <AmiBlitz3.ab2@4163>   TST.w pass
00020D74 <AmiBlitz3.ab2@4165>   MOVE.l $8(A2),D0
00020D78 <AmiBlitz3.ab2@4166>    BNE.w duplaberr
00020D80 <AmiBlitz3.ab2@4167>   MOVE.w procnum,$10(A2)
00020D84 <AmiBlitz3.ab2@4168>   MOVEA.l $4(A2),A3
00020D8A <AmiBlitz3.ab2@4169>   MOVEA.l _execbase,A6
00020D8E <AmiBlitz3.ab2@4172>   CMPA.w #$0,A3
00020D92 <AmiBlitz3.ab2@4173>    BEQ.w JL_0_467A
00020D96 <AmiBlitz3.ab2@4174>     MOVE.l $4(A2),D1
00020D9A <AmiBlitz3.ab2@4175>     BTST #$0,D1
00020D9E <AmiBlitz3.ab2@4176>     BNE.w illlaberr
00020DA2 <AmiBlitz3.ab2@4177>   MOVE.w $8(A3),D1
00020DA6 <AmiBlitz3.ab2@4178>   CMP.w $10(A2),D1
00020DAA <AmiBlitz3.ab2@4179>    BEQ.w JL_0_46DC
00020DB0 <AmiBlitz3.ab2@4180>    TST.b newsyntax
00020DB4 <AmiBlitz3.ab2@4181>    BEQ 'l1
00020DB8 <AmiBlitz3.ab2@4182> BRA.w JL_0_46DC                                            ;label context out of range fix
00020DC0 <AmiBlitz3.ab2@4187>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00020DC4 <AmiBlitz3.ab2@4188> BRA.w referr
00020DCA <AmiBlitz3.ab2@4191>   MOVE.w dontwrite,D1
00020DCE <AmiBlitz3.ab2@4192>    BNE.w JL_0_4706
00020DD2 <AmiBlitz3.ab2@4193>   MOVEA.l $4(A3),A1
00020DD8 <AmiBlitz3.ab2@4194>   BTST #$0,$7(A3)
00020DDC <AmiBlitz3.ab2@4195>    BEQ.w JL_0_4700
00020DDE <AmiBlitz3.ab2@4196>   SUBQ.w #1,A1
00020DE4 <AmiBlitz3.ab2@4197>   MOVE.l data2,(A1)
00020DE8 <AmiBlitz3.ab2@4198> BRA.w JL_0_4706
00020DEE <AmiBlitz3.ab2@4201>   MOVE.l destpointer,(A1)
00020DF0 <AmiBlitz3.ab2@4204>   MOVEA.l A3,A1
00020DF2 <AmiBlitz3.ab2@4205>   MOVEA.l (A3),A3
00020DF6 <AmiBlitz3.ab2@4206>   MOVE.l A3,$4(A2)
00020DF8 <AmiBlitz3.ab2@4207>   MOVEQ.l #$0C+2,D0
00020DFE <AmiBlitz3.ab2@4208>   MOVE.l mempool,a0
00020E04 <AmiBlitz3.ab2@4209>   MOVEA.l _execbase,A6
00020E08 <AmiBlitz3.ab2@4210>   JSR _FreePooled(A6)
00020E0C <AmiBlitz3.ab2@4211> BRA.w JL_0_46BC
00020E16 <AmiBlitz3.ab2@4216>    MOVE.l #forthstack,forthsp
00020E20 <AmiBlitz3.ab2@4217>   MOVE.l #precstack,precsp
00020E24 <AmiBlitz3.ab2@4218>    BSR.w getparameter2
00020E28 <AmiBlitz3.ab2@4221>   BSR.w findlabel2
00020E2C <AmiBlitz3.ab2@4222>    BEQ.w JL_0_4738
00020E30 <AmiBlitz3.ab2@4223>    BSR.w addlabelhash
00020E38 <AmiBlitz3.ab2@4224>   MOVE.l #$1,$4(A2)
00020E3C <AmiBlitz3.ab2@4225> BRA.w JL_0_4744
00020E44 <AmiBlitz3.ab2@4228>   CMPI.l #$1,$4(A2)
00020E48 <AmiBlitz3.ab2@4229>    BNE.w illconerr
00020E4C <AmiBlitz3.ab2@4238>   CMP.w #$3D,D0
00020E50 <AmiBlitz3.ab2@4239>   BEQ.w JL_0_474E
00020E52 <AmiBlitz3.ab2@4240> RTS
00020E54 <AmiBlitz3.ab2@4244>   MOVE.l A2,-(A7)
00020E5A <AmiBlitz3.ab2@4245>   JSR AJL_0_BF6E
00020E5C <AmiBlitz3.ab2@4246>   MOVEA.l (A7)+,A2
00020E60 <AmiBlitz3.ab2@4247>   MOVE.l D3,$8(A2)                                         ;store constant
00020E68 <AmiBlitz3.ab2@4248>   CMP.w #$0a,lastchar
00020E6C <AmiBlitz3.ab2@4249>   BNE 'l1
00020E74 <AmiBlitz3.ab2@4250>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00020E76 <AmiBlitz3.ab2@4253> RTS
00020E7A <AmiBlitz3.ab2@4256>   BSR.w findproc                                           ;write statement call
00020E7E <AmiBlitz3.ab2@4257>   BEQ _state
00020E84 <AmiBlitz3.ab2@4258>   TST.l unusedfunc
00020E88 <AmiBlitz3.ab2@4259>   BEQ noprocerr
00020E8E <AmiBlitz3.ab2@4261>   JSR gotoendsource
00020E92 <AmiBlitz3.ab2@4264>   TST.b $5(A2)
00020E98 <AmiBlitz3.ab2@4266>   MOVE.l a2,currentfunccall
00020EA0 <AmiBlitz3.ab2@4267>   MOVE.b #1,funccall
00020EA6 <AmiBlitz3.ab2@4268>   MOVE.b #1,isfunc(a2)
00020EAA <AmiBlitz3.ab2@4269>   MOVE.l $E(A2),-(A7)
00020EAC <AmiBlitz3.ab2@4270>   MOVEQ.l #$00,D0
00020EB0 <AmiBlitz3.ab2@4271>   MOVE.b $4(A2),D0
00020EB6 <AmiBlitz3.ab2@4272>   MOVE.l d0,parnumtemp
00020EBA <AmiBlitz3.ab2@4273>   BEQ.w JL_0_4786
00020EBE <AmiBlitz3.ab2@4274>   TST.b $20(a2)                                            ;increase if morepar
00020EC2 <AmiBlitz3.ab2@4275>   BNE 'no0par
00020EC4 <AmiBlitz3.ab2@4276>   MOVE.l a5,a4
00020EC8 <AmiBlitz3.ab2@4279>   CMP.b #$20,(a4)+
00020ECC <AmiBlitz3.ab2@4280>   BEQ 'l1
00020ED2 <AmiBlitz3.ab2@4281>   CMP.b #"}",-1(a4)
00020ED6 <AmiBlitz3.ab2@4282>   BNE  'no0par                                             ;statementcall pars
00020ED8 <AmiBlitz3.ab2@4283>   MOVEQ #0,d0
00020EDC <AmiBlitz3.ab2@4286>   LEA $16(A2),A1
00020EDE <AmiBlitz3.ab2@4289>   MOVE.l d1,-(a7)
00020EE0 <AmiBlitz3.ab2@4290>   MOVE.b (a1),d2
00020EE2 <AmiBlitz3.ab2@4291>   MOVE.l d0,d1
00020EE6 <AmiBlitz3.ab2@4292>   CMP.w #4,d2
00020EEA <AmiBlitz3.ab2@4293>   BNE 'l1b
00020EF0 <AmiBlitz3.ab2@4294>   ADD.l #$203c,d1
00020EF6 <AmiBlitz3.ab2@4296>   JSR writeword
00020EFC <AmiBlitz3.ab2@4297>   MOVE.l #$ffff0000,d1
00020F02 <AmiBlitz3.ab2@4299>   JSR writelong
00020F06 <AmiBlitz3.ab2@4300> BRA 'l2b
00020F0C <AmiBlitz3.ab2@4303>   TST.b fpu
00020F10 <AmiBlitz3.ab2@4304>   BNE 'l1c
00020F14 <AmiBlitz3.ab2@4305>   CMP.w #5,d2
00020F18 <AmiBlitz3.ab2@4306>   BNE 'l1c
00020F1E <AmiBlitz3.ab2@4307>   ADD.l #$203c,d1
00020F24 <AmiBlitz3.ab2@4309>   JSR writeword
00020F2A <AmiBlitz3.ab2@4310>   MOVE.l #$800000c1,d1
00020F30 <AmiBlitz3.ab2@4312>   JSR writelong
00020F34 <AmiBlitz3.ab2@4313> BRA 'l2b
00020F3A <AmiBlitz3.ab2@4316>   ADD.l #$70ff,d1
00020F40 <AmiBlitz3.ab2@4318>   JSR writeword
00020F46 <AmiBlitz3.ab2@4319>   MOVE.l #$f23c5000,d1
00020F48 <AmiBlitz3.ab2@4320>   MOVE.l d0,d2
00020F4A <AmiBlitz3.ab2@4321>   ASR.l #2,d2
00020F4C <AmiBlitz3.ab2@4322>   ADD.l d2,d1
00020F52 <AmiBlitz3.ab2@4324>   JSR writelong
00020F56 <AmiBlitz3.ab2@4325>   MOVE.w #$ffff,d1
00020F5C <AmiBlitz3.ab2@4327>   JSR writeword
00020F5E <AmiBlitz3.ab2@4330>   MOVE.l (a7)+,d1
00020F60 <AmiBlitz3.ab2@4331>   ADDQ.l #1,a1
00020F66 <AmiBlitz3.ab2@4332>   ADD.l #$0200,d0
00020F6C <AmiBlitz3.ab2@4333>   CMP.l #$0e00,d0
00020F70 <AmiBlitz3.ab2@4334>    BEQ syntaxerr
00020F72 <AmiBlitz3.ab2@4335>   TST.b (a1)
00020F76 <AmiBlitz3.ab2@4336>    BNE 'again
00020F7A <AmiBlitz3.ab2@4337> BRA JL_0_4786
00020F84 <AmiBlitz3.ab2@4340>   MOVE.w a2offset,a2offset2
00020F88 <AmiBlitz3.ab2@4341>   LEA $16(A2),A2
00020F8E <AmiBlitz3.ab2@4342>   MOVE.b funcparloop,-(a7)
00020F96 <AmiBlitz3.ab2@4343>   MOVE.b #1,funcparloop
00020F9C <AmiBlitz3.ab2@4344>   MOVE.b blitzparloop,-(a7)
00020FA2 <AmiBlitz3.ab2@4345>   CLR.b blitzparloop
00020FA6 <AmiBlitz3.ab2@4346>   BSR.w fetchpees2
00020FAC <AmiBlitz3.ab2@4347>   MOVE.b (a7)+,blitzparloop
00020FB2 <AmiBlitz3.ab2@4348>   MOVE.b (a7)+,funcparloop
00020FB6 <AmiBlitz3.ab2@4349> BRA.w JL_0_478A
00020FBA <AmiBlitz3.ab2@4352>   BSR.w get1bytemain
00020FBE <AmiBlitz3.ab2@4355>   CMP.w #$7D,D0
00020FC2 <AmiBlitz3.ab2@4356>    BNE.w morepar_                                          ;syntax error morepar
00020FC8 <AmiBlitz3.ab2@4357>    JSR chkstak
00020FCA <AmiBlitz3.ab2@4358>   MOVE.l (A7)+,D1
00020FD0 <AmiBlitz3.ab2@4374>    JSR JL_0_AFCA
00020FD6 <AmiBlitz3.ab2@4396>   CLR.b funccall
00020FDA <AmiBlitz3.ab2@4397> BRA.w get1bytemain
00020FE0 <AmiBlitz3.ab2@4401>   MOVE.l d0,lasttoken
00020FE4 <AmiBlitz3.ab2@4402>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00020FE8 <AmiBlitz3.ab2@4403>   BNE 'l2
00020FEC <AmiBlitz3.ab2@4404>    MOVE.w #$dd05,d0
00020FF0 <AmiBlitz3.ab2@4407>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00020FF4 <AmiBlitz3.ab2@4408>   BNE 'l3
00020FF8 <AmiBlitz3.ab2@4409>    MOVE.w #$dd06,d0
00020FFC <AmiBlitz3.ab2@4412>   CMP.w #-$7FC4,D0
00021000 <AmiBlitz3.ab2@4413>   BCS.w JL_0_47C4
00021004 <AmiBlitz3.ab2@4414>     CMP.w #-$7F4D,D0
00021008 <AmiBlitz3.ab2@4415>     BCC.w JL_0_47C4
00021010 <AmiBlitz3.ab2@4416>       BTST #$7,assemblercheck                              ;inline Assembler checking
00021014 <AmiBlitz3.ab2@4417>       BNE.b JL_0_47C0
0002101A <AmiBlitz3.ab2@4418>         TST.b debugmode
0002101E <AmiBlitz3.ab2@4419>         BEQ.b 'l10
00021028 <AmiBlitz3.ab2@4424>           MOVE.w d_nomemleft,dontwrite
00021032 <AmiBlitz3.ab2@4425>           MOVE.l d_bigpc,bigpc
0002103C <AmiBlitz3.ab2@4426>           MOVE.l d_pc,destpointer
00021046 <AmiBlitz3.ab2@4427>           MOVE.l cont_pc2,cont_pc
0002104A <AmiBlitz3.ab2@4433> BRA.w JL_0_612C
0002104E <AmiBlitz3.ab2@4436>   BCLR #$F,D0
00021050 <AmiBlitz3.ab2@4437>   MOVE.w D0,D1
00021054 <AmiBlitz3.ab2@4438>   ANDI.w #$7F00,D1
00021058 <AmiBlitz3.ab2@4439>   BNE.w JL_0_4856
0002105C <AmiBlitz3.ab2@4440>     CMP.w #$B3,D0                                          ;intern Instructions
00021060 <AmiBlitz3.ab2@4441>     BCS.w JL_0_47F2
00021064 <AmiBlitz3.ab2@4442>       SUBI.w #$77,D0
00021068 <AmiBlitz3.ab2@4443>       CMP.w #$4B,D0
0002106C <AmiBlitz3.ab2@4444>       BEQ.w JL_0_4830
00021070 <AmiBlitz3.ab2@4445>         CMP.w #$46,D0
00021074 <AmiBlitz3.ab2@4446>         BEQ.w JL_0_4830
00021078 <AmiBlitz3.ab2@4447> BRA.w JL_0_4834                                            ; change tokennum
0002107C <AmiBlitz3.ab2@4450>     CMP.w #$38,D0
00021080 <AmiBlitz3.ab2@4451>      BEQ.w JL_0_4830
00021084 <AmiBlitz3.ab2@4452>     CMP.w #$39,D0
00021088 <AmiBlitz3.ab2@4453>      BEQ.w JL_0_4830
0002108C <AmiBlitz3.ab2@4454>     CMP.w #$D,D0
00021090 <AmiBlitz3.ab2@4455>      BEQ.w JL_0_4830
00021094 <AmiBlitz3.ab2@4456>     CMP.w #$12,D0
00021098 <AmiBlitz3.ab2@4457>      BEQ.w JL_0_4830
0002109C <AmiBlitz3.ab2@4458>     CMP.w #$13,D0
000210A0 <AmiBlitz3.ab2@4459>      BEQ.w JL_0_4830
000210A4 <AmiBlitz3.ab2@4460>     CMP.w #$1A,D0
000210A8 <AmiBlitz3.ab2@4461>      BEQ.w JL_0_4830
000210AC <AmiBlitz3.ab2@4462>     CMP.w #$2A,D0
000210B0 <AmiBlitz3.ab2@4463>      BHI.w JL_0_4834
000210B4 <AmiBlitz3.ab2@4464>     CMP.w #$23,D0
000210B8 <AmiBlitz3.ab2@4465>      BCS.b JL_0_4834
000210BC <AmiBlitz3.ab2@4468>   BSR.w undodebug
000210BE <AmiBlitz3.ab2@4471>   SUBQ.w #1,D0
000210C0 <AmiBlitz3.ab2@4472>   LSL.w #2,D0
000210C6 <AmiBlitz3.ab2@4479>   LEA instructionbase,A0
000210CA <AmiBlitz3.ab2@4480>   MOVEA.l $0(A0,D0.W),A0
000210CC <AmiBlitz3.ab2@4481>   MOVE.l A0,-(A7)
000210D0 <AmiBlitz3.ab2@4482> BRA.w get1bytemain
000210D2 <AmiBlitz3.ab2@4488>   MOVE.w D0,D1
000210D6 <AmiBlitz3.ab2@4489>    BSR.w searchinstr
000210DC <AmiBlitz3.ab2@4490>    TST.b newmode
000210E0 <AmiBlitz3.ab2@4491>    BNE compile_term
000210E6 <AmiBlitz3.ab2@4492>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
000210EA <AmiBlitz3.ab2@4493>    BNE.w stamigalib
000210F0 <AmiBlitz3.ab2@4494>   BTST #$0,$1(A3)
000210F4 <AmiBlitz3.ab2@4495>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
000210F8 <AmiBlitz3.ab2@4496>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
000210FC <AmiBlitz3.ab2@4497>    BSR.w JL_0_66F6
00021102 <AmiBlitz3.ab2@4503>   MOVE.w numreps,-(A7)
00021108 <AmiBlitz3.ab2@4504>   MOVE.w userp,-(A7)
0002110E <AmiBlitz3.ab2@4505>   MOVE.w a2offset,-(A7)
00021110 <AmiBlitz3.ab2@4506>   MOVE.l A2,-(A7)                                          ;recurs.
0002111A <AmiBlitz3.ab2@4507>   MOVE.w convsize,userp
0002111E <AmiBlitz3.ab2@4508>   LEA $6(A3),A1
00021120 <AmiBlitz3.ab2@4512>    MOVE.w (A1),D2
00021124 <AmiBlitz3.ab2@4513>    BMI.w SERR                                              ;statement syntax error
00021128 <AmiBlitz3.ab2@4514>   ANDI.w #$FF,D2
0002112A <AmiBlitz3.ab2@4515>   CMP.w D2,D1
0002112E <AmiBlitz3.ab2@4516>    BEQ.w JL_0_48E0
00021132 <AmiBlitz3.ab2@4517>    BCS.w JL_0_48CC
00021134 <AmiBlitz3.ab2@4518>   MOVE.b (A1),D3
00021138 <AmiBlitz3.ab2@4519>   ANDI.w #$7,D3
0002113C <AmiBlitz3.ab2@4520>    BEQ.w JL_0_48CC
0002113E <AmiBlitz3.ab2@4521>   MOVE.w D2,D4
00021140 <AmiBlitz3.ab2@4522>   SUB.w D3,D4
00021142 <AmiBlitz3.ab2@4523>   MOVEQ.l #$00,D5
00021144 <AmiBlitz3.ab2@4524>   MOVE.w D1,D5
00021146 <AmiBlitz3.ab2@4525>   SUB.w D4,D5
00021148 <AmiBlitz3.ab2@4526>   DIVU D3,D5
0002114A <AmiBlitz3.ab2@4527>   SWAP D5
0002114C <AmiBlitz3.ab2@4528>   TST.w D5
00021150 <AmiBlitz3.ab2@4529>    BEQ.w JL_0_48E0
00021152 <AmiBlitz3.ab2@4532>   ADDQ.w #2,A1
00021154 <AmiBlitz3.ab2@4533>   ADDA.w D2,A1
00021158 <AmiBlitz3.ab2@4534>    BSR.w aligna1
0002115C <AmiBlitz3.ab2@4535>    BSR.w skiplibreg
00021160 <AmiBlitz3.ab2@4536>   LEA $C(A1),A1
00021164 <AmiBlitz3.ab2@4537> BRA.w JL_0_489A
00021166 <AmiBlitz3.ab2@4540>   MOVE.w (a3),d2
0002116A <AmiBlitz3.ab2@4541>   BTST #1,d2
0002116E <AmiBlitz3.ab2@4542>   BEQ statement_
00021172 <AmiBlitz3.ab2@4543>   CMP.w #1,d1
00021176 <AmiBlitz3.ab2@4544>   BEQ statement_
0002117A <AmiBlitz3.ab2@4547>   CMP.b #$20,(a5)+
0002117E <AmiBlitz3.ab2@4548>   BEQ 'l2
00021184 <AmiBlitz3.ab2@4549>   CMP.b #"(",-2(a5)
00021188 <AmiBlitz3.ab2@4550>   BNE 'l1
0002118C <AmiBlitz3.ab2@4551> BRA parameter_
00021190 <AmiBlitz3.ab2@4554> BRA inbrackets_
00021192 <AmiBlitz3.ab2@4557>   MOVE.b (A1),D2
00021194 <AmiBlitz3.ab2@4558>   LSL.w #8,D2
00021196 <AmiBlitz3.ab2@4559>   OR.w D2,D1
00021198 <AmiBlitz3.ab2@4560>   MOVE.l A1,-(A7)
0002119E <AmiBlitz3.ab2@4561>   CLR.w a2offset
000211A0 <AmiBlitz3.ab2@4562>   TST.w D1
000211A4 <AmiBlitz3.ab2@4563>    BEQ.w JL_0_4900
000211A8 <AmiBlitz3.ab2@4564>   LEA $2(A1),A2
000211AE <AmiBlitz3.ab2@4566>   MOVE.l lasttoken,-(a7)
000211B4 <AmiBlitz3.ab2@4567>   CLR.l lasttoken
000211B8 <AmiBlitz3.ab2@4568>   BSR.w fetchlibps
000211BE <AmiBlitz3.ab2@4569>   MOVE.l (a7)+,lasttoken
000211C2 <AmiBlitz3.ab2@4570> BRA.w JL_0_4904
000211C6 <AmiBlitz3.ab2@4573>   BSR.w get1bytemain
000211C8 <AmiBlitz3.ab2@4576>   MOVEA.l (A7)+,A1
000211CA <AmiBlitz3.ab2@4577>   MOVEA.l (A7)+,A2
000211D0 <AmiBlitz3.ab2@4578>   MOVE.w a2offset,D1
000211D4 <AmiBlitz3.ab2@4579>    BEQ.w JL_0_493A
000211DA <AmiBlitz3.ab2@4580>   MOVE.w D1,preplibst+2
000211E0 <AmiBlitz3.ab2@4581>   MOVE.l preplibst,D1
000211E6 <AmiBlitz3.ab2@4582>    JSR writelong                                           ;write array offset stack correct
000211F0 <AmiBlitz3.ab2@4583>   MOVE.w numreps,movenumrep+2
000211F4 <AmiBlitz3.ab2@4584>    BEQ.w JL_0_493A
000211FA <AmiBlitz3.ab2@4585>   MOVE.l movenumrep,D1
00021200 <AmiBlitz3.ab2@4586>    JSR writelong
00021206 <AmiBlitz3.ab2@4590>   JSR userjsr
0002120C <AmiBlitz3.ab2@4593>   MOVE.w a2offset,D1
00021210 <AmiBlitz3.ab2@4594>    BEQ.w JL_0_4974
00021214 <AmiBlitz3.ab2@4595>   CMP.w #$8,D1
00021218 <AmiBlitz3.ab2@4596>    BHI.w JL_0_4964
0002121C <AmiBlitz3.ab2@4597>   ANDI.w #$7,D1
0002121E <AmiBlitz3.ab2@4598>   LSL.w #8,D1
00021220 <AmiBlitz3.ab2@4599>   LSL.w #1,D1
00021224 <AmiBlitz3.ab2@4600>   ORI.w #$504F,D1
0002122A <AmiBlitz3.ab2@4602>   JSR writeword
0002122E <AmiBlitz3.ab2@4603> BRA.w JL_0_4974
00021234 <AmiBlitz3.ab2@4606>   MOVE.w D1,fixlibst+2
0002123A <AmiBlitz3.ab2@4607>   MOVE.l fixlibst,D1
00021240 <AmiBlitz3.ab2@4608>   JSR writelong
00021246 <AmiBlitz3.ab2@4611>   MOVE.w (A7)+,a2offset
0002124C <AmiBlitz3.ab2@4612>   MOVE.w (A7)+,userp
00021252 <AmiBlitz3.ab2@4613>   MOVE.w (A7)+,numreps
00021256 <AmiBlitz3.ab2@4614> BRA.w reget
0002125A <AmiBlitz3.ab2@4618>   MOVEM.l A2-A3,-(A7)
00021260 <AmiBlitz3.ab2@4619>   CLR.b doublepeek
00021266 <AmiBlitz3.ab2@4620>   MOVE.l A5,lastsourcepos
0002126A <AmiBlitz3.ab2@4621>    BSR.w getchar
0002126E <AmiBlitz3.ab2@4622>   CMP.w #$2E,D0
00021272 <AmiBlitz3.ab2@4623>    BEQ.w JL_0_49B4
00021278 <AmiBlitz3.ab2@4624>   MOVEA.l defaulttype,A2
0002127C <AmiBlitz3.ab2@4625>   CMP.w #$24,D0
00021280 <AmiBlitz3.ab2@4626>    BNE.w JL_0_49CA
00021282 <AmiBlitz3.ab2@4627>   MOVEQ.l #$07,D1
00021286 <AmiBlitz3.ab2@4628> BRA.w JL_0_49DE
0002128A <AmiBlitz3.ab2@4631>   BSR.w getparameter2
0002128E <AmiBlitz3.ab2@4632>   BEQ.w syntaxerr
00021294 <AmiBlitz3.ab2@4633>   LEA newtypebase,A2
00021298 <AmiBlitz3.ab2@4634>   BSR.w findtype
0002129C <AmiBlitz3.ab2@4635>   BNE.w notypeerr
000212A6 <AmiBlitz3.ab2@4639>   MOVE.w oldqflag,instringon
000212AC <AmiBlitz3.ab2@4640>   MOVEA.l lastsourcepos,A5
000212B0 <AmiBlitz3.ab2@4645>   MOVE.w $6(A2),D1
000212B6 <AmiBlitz3.ab2@4646>   CMP.w #8,8(a2)
000212BA <AmiBlitz3.ab2@4647>   BNE 'l1
000212C2 <AmiBlitz3.ab2@4648>   MOVE.b #1,doublepeek
000212C8 <AmiBlitz3.ab2@4652>   MOVE.w D1,convsize
000212CC <AmiBlitz3.ab2@4653>   MOVEM.l (A7)+,A2-A3
000212CE <AmiBlitz3.ab2@4654> RTS
000212D4 <AmiBlitz3.ab2@4659>   BTST #$3,$1(A3)
000212D8 <AmiBlitz3.ab2@4660>   BEQ.w JL_0_4A06
000212DC <AmiBlitz3.ab2@4661>   BSR.w AJL_0_498A                                         ;read peek/poke size
000212E0 <AmiBlitz3.ab2@4663>   ORI.w #$7000,D1
000212E6 <AmiBlitz3.ab2@4664>   JSR writeword
000212EC <AmiBlitz3.ab2@4665>   ADDQ.w #1,regnum
000212EE <AmiBlitz3.ab2@4668> RTS
000212F0 <AmiBlitz3.ab2@4674>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
000212F2 <AmiBlitz3.ab2@4675>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
000212F4 <AmiBlitz3.ab2@4676>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
000212F6 <AmiBlitz3.ab2@4680> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
000212F8 <AmiBlitz3.ab2@4681>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
000212FA <AmiBlitz3.ab2@4682>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
000212FC <AmiBlitz3.ab2@4686> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
000212FE <AmiBlitz3.ab2@4687>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00021300 <AmiBlitz3.ab2@4688>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00021302 <AmiBlitz3.ab2@4692> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00021304 <AmiBlitz3.ab2@4695> srctype:    Ds.w 1
00021308 <AmiBlitz3.ab2@4700>   BSR.w excget
0002130C <AmiBlitz3.ab2@4701>   CMP.w #$2C,D0
00021310 <AmiBlitz3.ab2@4702>    BNE.w syntaxerr
00021316 <AmiBlitz3.ab2@4703>   MOVE.b D2,srctype
0002131C <AmiBlitz3.ab2@4704>   MOVE.w pusha2,D1
00021322 <AmiBlitz3.ab2@4705>   JSR writeword
00021326 <AmiBlitz3.ab2@4706>   BSR.w get1bytemain
0002132A <AmiBlitz3.ab2@4707>   BSR.w excget
00021330 <AmiBlitz3.ab2@4708>   CMP.b srctype,D2
00021334 <AmiBlitz3.ab2@4709>    BNE.w excerr2
0002133A <AmiBlitz3.ab2@4710>   MOVE.w pulla1,D1
00021340 <AmiBlitz3.ab2@4711>    JSR writeword
00021344 <AmiBlitz3.ab2@4712>   CMP.b #$2,D2
00021348 <AmiBlitz3.ab2@4713>    BCS.w JL_0_4B2A
0002134C <AmiBlitz3.ab2@4714>    BEQ.w JL_0_4B1E
00021350 <AmiBlitz3.ab2@4715>   LEA swapl(PC),A0
00021354 <AmiBlitz3.ab2@4716>   LEA swaplf(PC),A1
0002135A <AmiBlitz3.ab2@4717> JMP pokecode
0002135E <AmiBlitz3.ab2@4720>   LEA swapw(PC),A0
00021362 <AmiBlitz3.ab2@4721>   LEA swapwf(PC),A1
00021368 <AmiBlitz3.ab2@4722> JMP pokecode
0002136C <AmiBlitz3.ab2@4725>   LEA swapb(PC),A0
00021370 <AmiBlitz3.ab2@4726>   LEA swapbf(PC),A1
00021376 <AmiBlitz3.ab2@4727> JMP pokecode
0002137C <AmiBlitz3.ab2@4731>   JSR getparameter
00021380 <AmiBlitz3.ab2@4732>   BSR.w JL_0_8E3C
00021384 <AmiBlitz3.ab2@4733>   BSR.w calcvar
00021388 <AmiBlitz3.ab2@4734>   BTST #$E,D2
0002138C <AmiBlitz3.ab2@4735>    BEQ.w JL_0_4B4E
00021390 <AmiBlitz3.ab2@4736>   MOVE.b #$4,D2
00021392 <AmiBlitz3.ab2@4739>   TST.b D2
00021396 <AmiBlitz3.ab2@4740>    BEQ.w excerr
0002139A <AmiBlitz3.ab2@4741>   BTST #$F,D2
0002139E <AmiBlitz3.ab2@4742>    BNE.w JL_0_4B6A
000213A4 <AmiBlitz3.ab2@4743>   MOVE.w leaamp,D1
000213AA <AmiBlitz3.ab2@4744>    JSR pokewda5s
000213AC <AmiBlitz3.ab2@4745>   MOVE.w D3,D1
000213B2 <AmiBlitz3.ab2@4746> JMP writeword
000213B4 <AmiBlitz3.ab2@4749> RTS
000213BA <AmiBlitz3.ab2@4755>   MOVE.l mempool,a0
000213C0 <AmiBlitz3.ab2@4756>   MOVEA.l _execbase,A6
000213C4 <AmiBlitz3.ab2@4757> JMP _AllocPooled(a6)
000213C8 <AmiBlitz3.ab2@4764>   MOVE.w #$BF00,D1
000213CE <AmiBlitz3.ab2@4765> JMP Atokejsr
000213D2 <AmiBlitz3.ab2@4769>   CMP.w #-$7FFA,D0
000213D6 <AmiBlitz3.ab2@4770>    BEQ.w popreturn
000213DA <AmiBlitz3.ab2@4771>   CMP.w #-$7FEA,D0
000213DE <AmiBlitz3.ab2@4772>    BEQ.w popnext2
000213E2 <AmiBlitz3.ab2@4773>   CMP.w #-$7FF2,D0
000213E6 <AmiBlitz3.ab2@4774>    BEQ.w popselect2
000213EA <AmiBlitz3.ab2@4775>   CMP.w #-$7FF5,D0
000213EE <AmiBlitz3.ab2@4776>    BEQ.w get1bytemain
000213F2 <AmiBlitz3.ab2@4777>   CMP.w #-$7FF4,D0
000213F6 <AmiBlitz3.ab2@4778>    BEQ.w get1bytemain
000213FA <AmiBlitz3.ab2@4779>   CMP.w #-$7FEC,D0
000213FE <AmiBlitz3.ab2@4780>    BEQ.w get1bytemain
00021402 <AmiBlitz3.ab2@4781>   CMP.w #-$7F45,D0
00021406 <AmiBlitz3.ab2@4782>    BEQ.w get1bytemain
0002140A <AmiBlitz3.ab2@4783> BRA.w syntaxerr
00021410 <AmiBlitz3.ab2@4786>   TST.b debugmode
00021414 <AmiBlitz3.ab2@4787>    BEQ.w popreturn__norerr
00021418 <AmiBlitz3.ab2@4788>   LEA popreturn__rfix(PC),A0
0002141C <AmiBlitz3.ab2@4789>   LEA popreturn__rfixf(PC),A1
00021422 <AmiBlitz3.ab2@4790>    JSR pokecode
00021426 <AmiBlitz3.ab2@4791>   MOVE.w #$C305,D1
0002142C <AmiBlitz3.ab2@4792>    JSR Atokejsr
00021430 <AmiBlitz3.ab2@4793>   MOVE.w popreturn__rfix2(PC),D1
00021436 <AmiBlitz3.ab2@4795>    JSR writeword
0002143A <AmiBlitz3.ab2@4796> BRA.w get1bytemain
00021440 <AmiBlitz3.ab2@4800>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00021444 <AmiBlitz3.ab2@4801>   BEQ.w popreturn__rfix2
0002144A <AmiBlitz3.ab2@4804>   JSR $20000                                               ;reass
0002144C <AmiBlitz3.ab2@4807>   ADDQ.w #6,A7
00021450 <AmiBlitz3.ab2@4811>   MOVE.w popreturn__sfix(PC),D1
00021456 <AmiBlitz3.ab2@4812>   JSR writeword
0002145A <AmiBlitz3.ab2@4813> BRA.w get1bytemain
0002145C <AmiBlitz3.ab2@4818>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00021462 <AmiBlitz3.ab2@4823>   MOVE.l firstfor,D0
00021466 <AmiBlitz3.ab2@4824>    BEQ.w noforerr
00021468 <AmiBlitz3.ab2@4825>   MOVEA.l D0,A2
0002146C <AmiBlitz3.ab2@4826>    BSR.w get1bytemain
00021470 <AmiBlitz3.ab2@4827>   BSR.w popnext
00021476 <AmiBlitz3.ab2@4830>   TST.b debugmode
0002147A <AmiBlitz3.ab2@4831>    BEQ.w popnext3__ner
00021480 <AmiBlitz3.ab2@4832>   MOVE.l nextfixw2,D1
00021486 <AmiBlitz3.ab2@4833>   CMPI.w #$3,$C(A2)
0002148A <AmiBlitz3.ab2@4834>    BCS.w writelong2
00021490 <AmiBlitz3.ab2@4835>   MOVE.l nextfixl2,D1
00021496 <AmiBlitz3.ab2@4836> writelong2 JMP  writelong
0002149C <AmiBlitz3.ab2@4839>   CMPI.w #$3,$C(A2)
000214A0 <AmiBlitz3.ab2@4840>    BCS.w popnext3__skip2
000214A6 <AmiBlitz3.ab2@4841>   MOVE.l nextfixl,D1
000214AC <AmiBlitz3.ab2@4842>   JMP writelong
000214B2 <AmiBlitz3.ab2@4845>   MOVE.w nextfixw,D1
000214B8 <AmiBlitz3.ab2@4846> JMP writeword
000214BC <AmiBlitz3.ab2@4850>   MOVE.w $C(A2),D0
000214C2 <AmiBlitz3.ab2@4851>   TST.b debugmode
000214C6 <AmiBlitz3.ab2@4852>    BEQ.w popnext__norunerr
000214CA <AmiBlitz3.ab2@4853>   MOVE.w #$C306,D1
000214CE <AmiBlitz3.ab2@4854>   CMP.w #$3,D0
000214D2 <AmiBlitz3.ab2@4855>    BCS.w popnext__oktc
000214D4 <AmiBlitz3.ab2@4856>   ADDQ.w #1,D1
000214D6 <AmiBlitz3.ab2@4859>   MOVE.l A2,-(A7)
000214DC <AmiBlitz3.ab2@4860>   JSR Atokejsr
000214DE <AmiBlitz3.ab2@4861>   MOVEA.l (A7)+,A2
000214E0 <AmiBlitz3.ab2@4864> RTS
000214E6 <AmiBlitz3.ab2@4868>   MOVE.l firstsel,D0
000214EA <AmiBlitz3.ab2@4869>    BEQ.w eselerr
000214EC <AmiBlitz3.ab2@4870>   MOVEA.l D0,A2
000214F0 <AmiBlitz3.ab2@4871>    BSR.w get1bytemain
000214F4 <AmiBlitz3.ab2@4874>   MOVE.w $C(A2),D2
000214FA <AmiBlitz3.ab2@4875>   TST.b debugmode
000214FE <AmiBlitz3.ab2@4876>    BEQ.w popselect__norerr
00021502 <AmiBlitz3.ab2@4877>   MOVE.w #$C313,D1
00021506 <AmiBlitz3.ab2@4878>   CMP.w #$3,D2
0002150A <AmiBlitz3.ab2@4879>    BCS.w popselect__chkit
0002150C <AmiBlitz3.ab2@4880>   ADDQ.w #1,D1
00021512 <AmiBlitz3.ab2@4883>   JSR Atokejsr                                             ;make sure next thing on stack
00021514 <AmiBlitz3.ab2@4887>   MOVEQ.l #$02,D1
00021518 <AmiBlitz3.ab2@4888>   CMP.w #$3,D2
0002151C <AmiBlitz3.ab2@4889>    BCS.w popselect__doit
0002151E <AmiBlitz3.ab2@4890>   MOVEQ.l #$04,D1
00021522 <AmiBlitz3.ab2@4891>   CMP.w #$7,D2
00021526 <AmiBlitz3.ab2@4892>    BCS.w popselect__doit
0002152C <AmiBlitz3.ab2@4893>   LEA endselstr,A0
00021532 <AmiBlitz3.ab2@4894>   LEA endselstrf,A1
00021538 <AmiBlitz3.ab2@4895>   TST.b debugmode
0002153C <AmiBlitz3.ab2@4896>    BEQ.w popselect__norerr3
00021542 <AmiBlitz3.ab2@4897>   LEA endselstrf2,A1
00021548 <AmiBlitz3.ab2@4900>   JSR pokecode
0002154C <AmiBlitz3.ab2@4901>   MOVE.w #$C003,D1                                         ;global freemem
00021552 <AmiBlitz3.ab2@4902> JMP Atokejsr
00021558 <AmiBlitz3.ab2@4905>   TST.b debugmode
0002155C <AmiBlitz3.ab2@4906>    BEQ.w popselect__norerr2
0002155E <AmiBlitz3.ab2@4907>   ADDQ.w #2,D1                                             ;for the "sE"
00021560 <AmiBlitz3.ab2@4910>   LSL.w #8,D1
00021562 <AmiBlitz3.ab2@4911>   LSL.w #1,D1
00021568 <AmiBlitz3.ab2@4912>   OR.w endsel,D1
0002156E <AmiBlitz3.ab2@4913> JMP writeword
00021572 <AmiBlitz3.ab2@4916> firstrep:    Ds.l 1
00021576 <AmiBlitz3.ab2@4917> replineat:   Ds.l 1
0002157C <AmiBlitz3.ab2@4926>   CLR.l fp0addr
00021586 <AmiBlitz3.ab2@4927>   MOVE.l linenumat,replineat
00021588 <AmiBlitz3.ab2@4928>   MOVEQ.l #$08,D0
0002158E <AmiBlitz3.ab2@4929>   MOVEA.l _execbase,A6
00021594 <AmiBlitz3.ab2@4930>   MOVE.l mempool,a0
00021598 <AmiBlitz3.ab2@4931>   JSR _AllocPooled(a6)
0002159A <AmiBlitz3.ab2@4933>   MOVEA.l D0,A0
0002159E <AmiBlitz3.ab2@4934>   MOVE.l firstrep(PC),(A0)
000215A4 <AmiBlitz3.ab2@4935>   MOVE.l A0,firstrep
000215AC <AmiBlitz3.ab2@4936>   MOVE.l destpointer,$4(A0)
000215AE <AmiBlitz3.ab2@4937> RTS
000215B4 <AmiBlitz3.ab2@4940> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
000215B8 <AmiBlitz3.ab2@4943>   LEA str_temp(PC),A1
000215BA <AmiBlitz3.ab2@4944>   CLR.w (A1)
000215BE <AmiBlitz3.ab2@4945>   CLR.l $2(A1)
000215C0 <AmiBlitz3.ab2@4948>   MOVEQ.l #$04,D0
000215C4 <AmiBlitz3.ab2@4951>     MOVE.b $1(A1),(A1)+
000215C8 <AmiBlitz3.ab2@4952>   DBF D0,check_for_infoextention__loop
000215CC <AmiBlitz3.ab2@4957>   LEA str_temp(PC),A1
000215CE <AmiBlitz3.ab2@4958>   MOVE.b (A0),D0
000215D2 <AmiBlitz3.ab2@4959>   ORI.b #$20,D0
000215D6 <AmiBlitz3.ab2@4960>   MOVE.b D0,$5(A1)
000215D8 <AmiBlitz3.ab2@4961>   TST.b (A0)+
000215DC <AmiBlitz3.ab2@4962>    BNE.w check_for_infoextention__loop2
000215E0 <AmiBlitz3.ab2@4963>   CMPI.w #$2E69,(A1)+                                      ;".i"
000215E4 <AmiBlitz3.ab2@4964>    BNE.w check_for_infoextention__no
000215EA <AmiBlitz3.ab2@4965>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
000215EC <AmiBlitz3.ab2@4968> RTS
000215F0 <AmiBlitz3.ab2@4972>   BPL.w gettokeps__evaltoke
000215F2 <AmiBlitz3.ab2@4973>   MOVE.w D0,D1
000215F6 <AmiBlitz3.ab2@4974>   ANDI.w #$7F80,D1
000215FA <AmiBlitz3.ab2@4975>    BEQ.w tokeerr
000215FE <AmiBlitz3.ab2@4976>   BCLR #$F,D0
00021600 <AmiBlitz3.ab2@4977>   MOVE.w D0,D4                                             ;got toke number
00021604 <AmiBlitz3.ab2@4978>   BSR.w get1bytemain
00021608 <AmiBlitz3.ab2@4979> BRA.w gettokeps__gotnum
0002160E <AmiBlitz3.ab2@4982>   JSR JL_0_BF6A
00021614 <AmiBlitz3.ab2@4983>   CMP.l #MaxWord,D3
00021618 <AmiBlitz3.ab2@4984>    BHI.w tokeerr
0002161A <AmiBlitz3.ab2@4985>   TST.w D6
0002161E <AmiBlitz3.ab2@4986>    BNE.w tokeerr
00021620 <AmiBlitz3.ab2@4987>   MOVE.w D3,D4
00021622 <AmiBlitz3.ab2@4990>   MOVEQ.l #$00,D5
00021626 <AmiBlitz3.ab2@4991>   CMP.w #$2C,D0
0002162A <AmiBlitz3.ab2@4992>    BNE.w gettokeps__gotfrom
0002162C <AmiBlitz3.ab2@4993>   MOVE.w D4,-(A7)
00021632 <AmiBlitz3.ab2@4994>    JSR AJL_0_BF6E
00021638 <AmiBlitz3.ab2@4995>   CMP.l #MaxWord,D3
0002163C <AmiBlitz3.ab2@4996>    BHI.w tokeerr
0002163E <AmiBlitz3.ab2@4997>   TST.w D6
00021642 <AmiBlitz3.ab2@4998>    BNE.w tokeerr
00021644 <AmiBlitz3.ab2@4999>   MOVE.w D3,D5
00021646 <AmiBlitz3.ab2@5000>   MOVE.w (A7)+,D4
00021648 <AmiBlitz3.ab2@5003> RTS                                                        ;d4=toke, d5=form
0002164A <AmiBlitz3.ab2@5007>   TST.w D0
0002164E <AmiBlitz3.ab2@5008>    BSR.w gettokeps
00021652 <AmiBlitz3.ab2@5009>   MOVE.w #$4EB9,D1
00021658 <AmiBlitz3.ab2@5010>   JSR writeword
0002165C <AmiBlitz3.ab2@5011>   BSR.w addoff
0002165E <AmiBlitz3.ab2@5012>   MOVE.w D5,D1
00021662 <AmiBlitz3.ab2@5013>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00021664 <AmiBlitz3.ab2@5014>   SWAP D1
00021666 <AmiBlitz3.ab2@5015>   MOVE.w D4,D1
0002166C <AmiBlitz3.ab2@5016> JMP writelong
0002166E <AmiBlitz3.ab2@5020>   TST.w D0
00021672 <AmiBlitz3.ab2@5021>    BSR.w gettokeps
00021676 <AmiBlitz3.ab2@5022>   MOVE.w #$4EB9,D1
0002167C <AmiBlitz3.ab2@5023>   JSR writeword
00021680 <AmiBlitz3.ab2@5024>   BSR.w addoff
00021682 <AmiBlitz3.ab2@5025>   MOVE.w D5,D1
00021686 <AmiBlitz3.ab2@5026>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00021688 <AmiBlitz3.ab2@5027>   SWAP D1
0002168A <AmiBlitz3.ab2@5028>   MOVE.w D4,D1
00021690 <AmiBlitz3.ab2@5029>   JMP writelong
00021696 <AmiBlitz3.ab2@5033>   JSR JL_0_BF6A
0002169C <AmiBlitz3.ab2@5034>   CMP.l #$10000,D3
000216A0 <AmiBlitz3.ab2@5035>    BCC.w tokeerr
000216A2 <AmiBlitz3.ab2@5036>   MOVE.w D3,D1
000216A8 <AmiBlitz3.ab2@5037> JMP Atokejsr
000216AC <AmiBlitz3.ab2@5041>   BSR.w gettokeps
000216B0 <AmiBlitz3.ab2@5042>   MOVE.w #$4EB9,D1
000216B6 <AmiBlitz3.ab2@5043>   JSR writeword
000216BC <AmiBlitz3.ab2@5044>   MOVE.l destpointer,D3
000216C4 <AmiBlitz3.ab2@5045>   BTST #$7,blitzmode
000216C8 <AmiBlitz3.ab2@5046>    BEQ.w do_TokeJsr__inamiga
000216CC <AmiBlitz3.ab2@5047>   BSET #$E,D5
000216D0 <AmiBlitz3.ab2@5050>   BSR.w JL_0_6E86
000216D4 <AmiBlitz3.ab2@5051>   BSR.w addoff
000216DA <AmiBlitz3.ab2@5052>   JMP writelong
000216DE <AmiBlitz3.ab2@5056>   BEQ.w do_VWait__zero
000216E0 <AmiBlitz3.ab2@5057>   MOVEQ.l #$02,D2                                          ;get a word
000216E6 <AmiBlitz3.ab2@5059>   JSR bakeval
000216EA <AmiBlitz3.ab2@5060>   MOVE.w fvwait(PC),D1
000216EE <AmiBlitz3.ab2@5061> BRA.w do_VWait__vcont
000216F2 <AmiBlitz3.ab2@5064>   MOVE.w #$7000,D1                                         ;moveq #0,d0
000216F8 <AmiBlitz3.ab2@5067>   JSR writeword
000216FC <AmiBlitz3.ab2@5068>   MOVE.w #$C104,D1
00021702 <AmiBlitz3.ab2@5069> JMP Atokejsr
00021704 <AmiBlitz3.ab2@5073>   SUBQ.w #1,D0
0002170A <AmiBlitz3.ab2@5076>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
0002170E <AmiBlitz3.ab2@5079>   Dc.l $426d0001                                           ;clr.w $0(A5)
00021712 <AmiBlitz3.ab2@5083>   MOVE.b debugmode(PC),D1
00021716 <AmiBlitz3.ab2@5084>   BEQ.b debugmode_codelabel__skip
0002171A <AmiBlitz3.ab2@5085>   MOVE.w #$D500,D1
00021720 <AmiBlitz3.ab2@5086> JMP Atokejsr
00021722 <AmiBlitz3.ab2@5089> RTS
0002172A <AmiBlitz3.ab2@5093>   BSET #$0,blitzmode
00021732 <AmiBlitz3.ab2@5094>   BSET #$7,blitzmode
00021736 <AmiBlitz3.ab2@5095>   MOVE.w #$C200,D1
0002173C <AmiBlitz3.ab2@5096>   JSR Atokejsr
00021742 <AmiBlitz3.ab2@5097>   TST.b debugmode
00021746 <AmiBlitz3.ab2@5098>    BEQ.w do_BLITZ__done
0002174A <AmiBlitz3.ab2@5099>   MOVE.w cgoblitz(PC),D1
00021750 <AmiBlitz3.ab2@5100>   JSR writeword
00021752 <AmiBlitz3.ab2@5101>   MOVEQ.l #-$01,D1
00021758 <AmiBlitz3.ab2@5102>   JSR writeword
0002175E <AmiBlitz3.ab2@5103>   JSR getbbase
00021764 <AmiBlitz3.ab2@5104>   JSR writeword
00021768 <AmiBlitz3.ab2@5107> BRA.w debugmode_codelabel
0002176C <AmiBlitz3.ab2@5111>   MOVE.w #$C201,D1
00021770 <AmiBlitz3.ab2@5112> BRA.w do_AMIGA__toamode
00021774 <AmiBlitz3.ab2@5116>   MOVE.W  #$C202,D1
0002177C <AmiBlitz3.ab2@5119>   BSET #$0,blitzmode
00021784 <AmiBlitz3.ab2@5120>   BCLR #$7,blitzmode
0002178A <AmiBlitz3.ab2@5121>   JSR Atokejsr
00021790 <AmiBlitz3.ab2@5122>   TST.b debugmode
00021794 <AmiBlitz3.ab2@5123>    BEQ.w do_AMIGA__done
00021798 <AmiBlitz3.ab2@5124>   MOVE.w cgoamiga(PC),D1
0002179E <AmiBlitz3.ab2@5125>   JSR writeword
000217A4 <AmiBlitz3.ab2@5126>   JSR getbbase
000217AA <AmiBlitz3.ab2@5127>   JSR writeword
000217AE <AmiBlitz3.ab2@5130> BRA.w debugmode_codelabel
000217B2 <AmiBlitz3.ab2@5134>   MOVEM.l D2-D7/A2-A4,-(A7)
000217B6 <AmiBlitz3.ab2@5137>   MOVEM.l (A7)+,D2-D7/A2-A4
000217BC <AmiBlitz3.ab2@5141>   JSR JL_0_BF6A
000217C2 <AmiBlitz3.ab2@5142>   CMP.l #$E,D3
000217C6 <AmiBlitz3.ab2@5143>    BCC.w interr4
000217CA <AmiBlitz3.ab2@5144>   MOVE.w #$7000,D1
000217CC <AmiBlitz3.ab2@5145>   OR.w D3,D1
000217D2 <AmiBlitz3.ab2@5146>   JSR writeword
000217D6 <AmiBlitz3.ab2@5147>   MOVE.w #$C101,D1
000217DC <AmiBlitz3.ab2@5148> JMP Atokejsr                                               ;clear the interupt
000217DE <AmiBlitz3.ab2@5151> inerr:       Ds.w 1                                        ;flag - in error trap mode
000217E2 <AmiBlitz3.ab2@5152> errjmp:      Ds.l 1                                        ;where err jump is
000217E6 <AmiBlitz3.ab2@5153> errcode:     Ds.l 1
000217EA <AmiBlitz3.ab2@5157>   MOVE.W  #$D202,D1
000217F0 <AmiBlitz3.ab2@5158> JMP Atokejsr                                               ;BRA.W Atokejsr
000217F4 <AmiBlitz3.ab2@5162>   MOVE.w inerr(PC),D1
000217F8 <AmiBlitz3.ab2@5163>    BEQ.w errerr3
000217FE <AmiBlitz3.ab2@5164>   CLR.w inerr
00021804 <AmiBlitz3.ab2@5165>   MOVE.w dontwrite,D1
00021808 <AmiBlitz3.ab2@5166>    BNE.w doendseterr__skip
0002180C <AmiBlitz3.ab2@5167>   MOVEA.l errjmp(PC),A0
00021812 <AmiBlitz3.ab2@5168>   MOVE.l destpointer,(A0)
00021816 <AmiBlitz3.ab2@5171> BRA.w get1bytemain
0002181A <AmiBlitz3.ab2@5175>   MOVE.w #$D205,D1
00021820 <AmiBlitz3.ab2@5176> JMP Atokejsr
00021826 <AmiBlitz3.ab2@5180>   MOVE.w proceduremode,D1
0002182A <AmiBlitz3.ab2@5181>    BNE.w errerr1
0002182E <AmiBlitz3.ab2@5182>   MOVE.w inerr(PC),D1
00021832 <AmiBlitz3.ab2@5183>    BNE.w errerr2
00021838 <AmiBlitz3.ab2@5184>   LEA inerr,a0
0002183A <AmiBlitz3.ab2@5185>   NOT.w (a0)                                               ;reass
0002183E <AmiBlitz3.ab2@5186>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00021844 <AmiBlitz3.ab2@5187>   JSR writeword
0002184E <AmiBlitz3.ab2@5188>   MOVE.l destpointer,errcode
00021852 <AmiBlitz3.ab2@5189>   BSR.w addoff
00021856 <AmiBlitz3.ab2@5190>   BSR.w writelong
0002185A <AmiBlitz3.ab2@5191>   MOVE.w #$D201,D1
00021860 <AmiBlitz3.ab2@5192>   JSR Atokejsr
00021864 <AmiBlitz3.ab2@5193>   MOVE.w #$4EF9,D1                                         ;JMP
00021868 <AmiBlitz3.ab2@5194>   BSR.w writeword
00021872 <AmiBlitz3.ab2@5195>   MOVE.l destpointer,errjmp
00021876 <AmiBlitz3.ab2@5196>   BSR.w addoff
0002187A <AmiBlitz3.ab2@5197>   BSR.w writelong
00021880 <AmiBlitz3.ab2@5198>   MOVE.w dontwrite,D1
00021884 <AmiBlitz3.ab2@5199>    BNE.w do_SetErr__skip
00021888 <AmiBlitz3.ab2@5200>   MOVEA.l errcode(PC),A0
0002188E <AmiBlitz3.ab2@5201>   MOVE.l destpointer,(A0)
00021890 <AmiBlitz3.ab2@5204> RTS
00021894 <AmiBlitz3.ab2@5207> intlineat:  Ds.l 1
00021896 <AmiBlitz3.ab2@5211>   MOVEQ.l #-$01,D1                                        ;type - need new string space
0002189A <AmiBlitz3.ab2@5212>   BSR.w errchx
000218A0 <AmiBlitz3.ab2@5213>   MOVE.w D1,intstring
000218AA <AmiBlitz3.ab2@5214>   MOVE.l linenumat,intlineat
000218B0 <AmiBlitz3.ab2@5215>   JSR JL_0_BF6A                                           ;get constant - int level
000218B6 <AmiBlitz3.ab2@5216>   CMP.l #$E,D3
000218BA <AmiBlitz3.ab2@5217>    BCC.w interr4
000218C0 <AmiBlitz3.ab2@5218>   ST intsused
000218C6 <AmiBlitz3.ab2@5219>   MOVE.w D3,intlevel
000218CA <AmiBlitz3.ab2@5220>   MOVE.w #$7000,D1
000218CC <AmiBlitz3.ab2@5221>   OR.w D3,D1                                              
000218D0 <AmiBlitz3.ab2@5222>   BSR.w writeword                                         ;moveq #x,d0
000218D4 <AmiBlitz3.ab2@5223>   MOVE.w #$223C,D1                                        ;move.l #x,d1
000218D8 <AmiBlitz3.ab2@5224>   BSR.w writeword
000218DC <AmiBlitz3.ab2@5225>   BSR.w addoff
000218E2 <AmiBlitz3.ab2@5226>   MOVE.l destpointer,-(A7)
000218E6 <AmiBlitz3.ab2@5227>   BSR.w writelong
000218EA <AmiBlitz3.ab2@5228>   MOVE.w #$C100,D1
000218F0 <AmiBlitz3.ab2@5229>   JSR Atokejsr
000218F4 <AmiBlitz3.ab2@5230>   MOVE.w #$4EF9,D1                                        ;jmp
000218F8 <AmiBlitz3.ab2@5231>   BSR.w writeword
000218FC <AmiBlitz3.ab2@5232>   BSR.w addoff
00021906 <AmiBlitz3.ab2@5233>   MOVE.l destpointer,intjmpat
0002190A <AmiBlitz3.ab2@5234>   BSR.w writelong
0002190C <AmiBlitz3.ab2@5235>   MOVEA.l (A7)+,A0
00021912 <AmiBlitz3.ab2@5236>   MOVE.w dontwrite,D1
00021916 <AmiBlitz3.ab2@5237>   BNE.w do_SetInt__dontpoke
0002191C <AmiBlitz3.ab2@5238>   MOVE.l destpointer,(A0)
00021920 <AmiBlitz3.ab2@5241>   MOVE.l intstart0(PC),D1
00021924 <AmiBlitz3.ab2@5242>   BSR.w writelong
0002192A <AmiBlitz3.ab2@5243>   TST.b debugmode
0002192E <AmiBlitz3.ab2@5244>    BEQ.w do_SetInt__norerr
00021930 <AmiBlitz3.ab2@5248>   MOVEQ.l #$02,D1
00021934 <AmiBlitz3.ab2@5249>   BSR.w writetrap
00021938 <AmiBlitz3.ab2@5250>   BSR.w addoff
00021942 <AmiBlitz3.ab2@5251>   MOVE.l destpointer,intcleanat
00021946 <AmiBlitz3.ab2@5252>   BSR.w writelong
0002194C <AmiBlitz3.ab2@5253>   MOVE.w intlevel,D1
00021950 <AmiBlitz3.ab2@5254>   BSR.w writeword
00021954 <AmiBlitz3.ab2@5255>   MOVE.w #$C30B,D1                                         ;disable stack checks
0002195A <AmiBlitz3.ab2@5256>   JSR Atokejsr
0002195E <AmiBlitz3.ab2@5259>   MOVE.w #$FED3,D1
00021962 <AmiBlitz3.ab2@5260>   BSR.w uselib
00021966 <AmiBlitz3.ab2@5261>   MOVE.w #$C102,D1
0002196C <AmiBlitz3.ab2@5262>   JSR Atokejsr
00021974 <AmiBlitz3.ab2@5263>   MOVE.w #-1,lasta6
0002197E <AmiBlitz3.ab2@5264>   MOVE.l linenumat,intline
00021980 <AmiBlitz3.ab2@5265> RTS
00021982 <AmiBlitz3.ab2@5269>             Ds.w 1                                         ;??looks like obsolved data??
00021986 <AmiBlitz3.ab2@5271> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
0002198A <AmiBlitz3.ab2@5273> intjmpat:   Ds.l 1
0002198E <AmiBlitz3.ab2@5274> intline:    Ds.l 1
00021990 <AmiBlitz3.ab2@5275> intstring:  Ds.w 1                                         ;flag 0 = no setint
00021992 <AmiBlitz3.ab2@5278> intlevel:   Ds.w 1
00021996 <AmiBlitz3.ab2@5279> intcleanat: Ds.l 1
0002199A <AmiBlitz3.ab2@5280> ret15add:   Ds.l 1
0002199C <AmiBlitz3.ab2@5281> ret15cc:    Ds.w 1
000219A4 <AmiBlitz3.ab2@5285>   ADDI.l #$12,$2(A7)
000219AC <AmiBlitz3.ab2@5286>   MOVE.l $2(A7),ret15add
000219B2 <AmiBlitz3.ab2@5287>   MOVE.w (A7),ret15cc
000219BA <AmiBlitz3.ab2@5288>   MOVE.l #directdo,$2(A7)
000219BC <AmiBlitz3.ab2@5289> RTE
000219C0 <AmiBlitz3.ab2@5298>   MOVE.l ret15add(PC),-(A7)
000219C4 <AmiBlitz3.ab2@5299>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
000219C8 <AmiBlitz3.ab2@5300>   MOVEM.l D0-D7/A0-A6,-(A7)
000219D2 <AmiBlitz3.ab2@5301>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
000219DC <AmiBlitz3.ab2@5302>   MOVE.l destbufferstart,trap15temp2
000219E6 <AmiBlitz3.ab2@5303>   MOVE.l libend,templibend
000219F0 <AmiBlitz3.ab2@5304>   MOVE.l data1start,tempdata1start
000219F6 <AmiBlitz3.ab2@5305>   CLR.l hunkoffsetcounter
000219FC <AmiBlitz3.ab2@5307>   MOVE.l directbuffer,a0
00021A02 <AmiBlitz3.ab2@5311>   MOVE.l a0,destbufferstart
00021A08 <AmiBlitz3.ab2@5312>   ADD.l #3900,a0
00021A0E <AmiBlitz3.ab2@5313>   MOVE.l a0,destbufferend
00021A14 <AmiBlitz3.ab2@5314>   TST.b exdebug
00021A18 <AmiBlitz3.ab2@5315>   BEQ 'l1
00021A1E <AmiBlitz3.ab2@5316>   MOVE.l a0,libend
00021A24 <AmiBlitz3.ab2@5317>   ADD.l #4000,a0
00021A2A <AmiBlitz3.ab2@5318>   MOVE.l a0,data1start
00021A34 <AmiBlitz3.ab2@5321>   MOVE.l #dircont,errcont
00021A3A <AmiBlitz3.ab2@5322>   MOVE.l A7,errstack
00021A42 <AmiBlitz3.ab2@5323>   MOVE.w #$FFFF,dirmode
00021A46 <AmiBlitz3.ab2@5325>     MOVEA.l ret15add(PC),A1
00021A4C <AmiBlitz3.ab2@5326>     MOVE.w -(A1),blitzmode
00021A4E <AmiBlitz3.ab2@5327>     CLR.l -(A1)
00021A54 <AmiBlitz3.ab2@5328>     MOVE.l -(A1),firstglob
00021A5A <AmiBlitz3.ab2@5329>     MOVE.l -(A1),firstlocal
00021A60 <AmiBlitz3.ab2@5331>   CLR.w proceduremode
00021A66 <AmiBlitz3.ab2@5332>   MOVE.l firstglob,D0
00021A6C <AmiBlitz3.ab2@5333>   OR.l firstlocal,D0
00021A70 <AmiBlitz3.ab2@5334>   BEQ.b directdo__skip
00021A76 <AmiBlitz3.ab2@5335>   NOT.w proceduremode
00021A78 <AmiBlitz3.ab2@5338>   MOVEA.l -(A1),A0                                         ;address of string
00021A7A <AmiBlitz3.ab2@5342>   MOVE.l A0,-(A7)
00021AB8 <AmiBlitz3.ab2@5345>   !ComData_GetL{comFunc_DebugTrap,A1}
00021ABA <AmiBlitz3.ab2@5348>   JSR (A1)                                                 ;tokenise line.....
00021ABC <AmiBlitz3.ab2@5349>   MOVEA.l (A7)+,A5
00021AC6 <AmiBlitz3.ab2@5350>   MOVE.l directbuffer,destpointer
00021ACC <AmiBlitz3.ab2@5351>   TST.b exdebug
00021AD0 <AmiBlitz3.ab2@5352>   BEQ 'noexdebug
00021AD2 <AmiBlitz3.ab2@5353>   MOVE.l a5,a0
00021AD8 <AmiBlitz3.ab2@5354>   MOVE.l #200,d0
00021ADE <AmiBlitz3.ab2@5357>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00021AE2 <AmiBlitz3.ab2@5358>   DBF d0,'l1
00021AE8 <AmiBlitz3.ab2@5363>   MOVE.l destpointer,a0
00021AEC <AmiBlitz3.ab2@5364>   MOVE.w #$207c,(a0)+
00021AEE <AmiBlitz3.ab2@5365>   MOVE.l a5,d0
00021AF4 <AmiBlitz3.ab2@5366>   ADD.l #$206,d0                                           ;constant from debuglib
00021AF6 <AmiBlitz3.ab2@5367>   MOVE.l d0,(a0)+
00021AFC <AmiBlitz3.ab2@5368>   MOVE.l a0,destpointer
00021AFE <AmiBlitz3.ab2@5369>   MOVE.l a5,a0
00021B02 <AmiBlitz3.ab2@5370>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00021B08 <AmiBlitz3.ab2@5371>   MOVE.l #"$520",(a0)+
00021B0C <AmiBlitz3.ab2@5372>   MOVE.w #"4:",(a0)+
00021B12 <AmiBlitz3.ab2@5375>   CLR.w dontwrite
00021B1A <AmiBlitz3.ab2@5376>   MOVE.w #$FFFF,lasta6
00021B1E <AmiBlitz3.ab2@5377>   BSR.w compile_line                                        ;.....compile it
00021B24 <AmiBlitz3.ab2@5378>   TST.b exdebug
00021B28 <AmiBlitz3.ab2@5379>   BEQ 'noexdebug2
00021B2E <AmiBlitz3.ab2@5380>   JSR JL_0_6C76
00021B34 <AmiBlitz3.ab2@5383>   CLR.w proceduremode
00021B38 <AmiBlitz3.ab2@5384>   BSR.w errchx
00021B3C <AmiBlitz3.ab2@5385>   MOVE.w #$4EF9,D1
00021B40 <AmiBlitz3.ab2@5386>   BSR.w writeword                                          ;JMP
00021B44 <AmiBlitz3.ab2@5387>   MOVE.l ret15add(PC),D1
00021B48 <AmiBlitz3.ab2@5388>   BSR.w writelong                                          ;jmp to done
00021B4E <AmiBlitz3.ab2@5389>   MOVE.w dontwrite,D0
00021B52 <AmiBlitz3.ab2@5390>    BNE.w nodirmem
00021B5A <AmiBlitz3.ab2@5391>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00021B60 <AmiBlitz3.ab2@5394>   CLR.w dirmode
00021B66 <AmiBlitz3.ab2@5395>   MOVE.w ret15cc(PC),$3C(A7)
00021B70 <AmiBlitz3.ab2@5396>   MOVE.l trap15temp,destbufferend
00021B7A <AmiBlitz3.ab2@5397>   MOVE.l trap15temp2,destbufferstart
00021B84 <AmiBlitz3.ab2@5398>   MOVE.l tempdata1start,data1start
00021B8E <AmiBlitz3.ab2@5399>   MOVE.l templibend,libend
00021B92 <AmiBlitz3.ab2@5400>   MOVEM.l (A7)+,D0-D7/A0-A6
00021B96 <AmiBlitz3.ab2@5401>   BSR.w Aclearcache                                        ;selden used
00021B98 <AmiBlitz3.ab2@5402> RTR
00021B9C <AmiBlitz3.ab2@5405>   MOVEA.l ret15add(PC),A0
00021B9E <AmiBlitz3.ab2@5406>   SUBQ.w #2,A0
00021BA0 <AmiBlitz3.ab2@5407>   MOVE.l D0,-(A0)
00021BA4 <AmiBlitz3.ab2@5408> BRA.w direxit
00021BA8 <AmiBlitz3.ab2@5412>   MOVE.w $6(A3),D1
00021BAC <AmiBlitz3.ab2@5413>   BSR.w uselib                                             ;get lib for base address
00021BB0 <AmiBlitz3.ab2@5414>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00021BB2 <AmiBlitz3.ab2@5415>   ADDQ.w #8,A3
00021BB4 <AmiBlitz3.ab2@5416>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00021BB6 <AmiBlitz3.ab2@5417>   MOVE.l A3,-(A7)
00021BB8 <AmiBlitz3.ab2@5421>   MOVEQ.l #$00,D3
00021BBE <AmiBlitz3.ab2@5422>   JSR checka4a5
00021BC0 <AmiBlitz3.ab2@5424>   MOVE.b (A3)+,D1
00021BC4 <AmiBlitz3.ab2@5425>    BMI.w stamigalib__done
00021BC6 <AmiBlitz3.ab2@5426>   MOVEQ.l #$03,D2
00021BC8 <AmiBlitz3.ab2@5427>   ADDQ.w #1,D3
00021BCC <AmiBlitz3.ab2@5428>   MOVEM.l D3/A3,-(A7)
00021BD2 <AmiBlitz3.ab2@5429>   MOVE.b funcparloop,-(a7)
00021BDA <AmiBlitz3.ab2@5430>   MOVE.b #0,funcparloop
00021BE0 <AmiBlitz3.ab2@5431>   MOVE.l leftsidetype,-(a7)
00021BE6 <AmiBlitz3.ab2@5432>   MOVE.l rightsidetype,-(a7)
00021BEC <AmiBlitz3.ab2@5433>   CLR.l leftsidetype
00021BF2 <AmiBlitz3.ab2@5434>   CLR.l rightsidetype
00021BF8 <AmiBlitz3.ab2@5435>   MOVE.b blitzparloop,-(a7)
00021C00 <AmiBlitz3.ab2@5436>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00021C06 <AmiBlitz3.ab2@5437>   JSR peval
00021C0C <AmiBlitz3.ab2@5438>   MOVE.b (a7)+,blitzparloop
00021C12 <AmiBlitz3.ab2@5439>   MOVE.l (a7)+,rightsidetype
00021C18 <AmiBlitz3.ab2@5440>   MOVE.l (a7)+,leftsidetype
00021C1E <AmiBlitz3.ab2@5441>   MOVE.b (a7)+,funcparloop
00021C22 <AmiBlitz3.ab2@5442>   MOVEM.l (A7)+,D3/A3
00021C26 <AmiBlitz3.ab2@5443>   CMP.w #$2C,D0
00021C2A <AmiBlitz3.ab2@5444>    BEQ.w stamigalib__loop
00021C2C <AmiBlitz3.ab2@5445>   TST.b (A3)
00021C30 <AmiBlitz3.ab2@5446>    BPL.w syntaxerr
00021C32 <AmiBlitz3.ab2@5449>   MOVEA.l (A7)+,A3
00021C34 <AmiBlitz3.ab2@5450>   SUBQ.w #1,D3
00021C38 <AmiBlitz3.ab2@5451>    BPL.w stamigalib__toend
00021C3C <AmiBlitz3.ab2@5452>    BSR.w get1bytemain                                      ;no pars - get :
00021C40 <AmiBlitz3.ab2@5453> BRA.w stamigalib__nopars
00021C42 <AmiBlitz3.ab2@5456>   TST.b (A3)+                                              ;go to end of params
00021C46 <AmiBlitz3.ab2@5457>    BPL.w stamigalib__toend
00021C48 <AmiBlitz3.ab2@5458>   SUBQ.w #1,A3
00021C4A <AmiBlitz3.ab2@5461>    MOVEQ.l #$00,D1
00021C4C <AmiBlitz3.ab2@5462>    MOVE.b -(A3),D1
00021C50 <AmiBlitz3.ab2@5463>    BTST #$4,D1
00021C54 <AmiBlitz3.ab2@5464>     BNE.w stamigalib__addreg
00021C56 <AmiBlitz3.ab2@5465>    LSL.w #8,D1
00021C58 <AmiBlitz3.ab2@5466>    LSL.w #1,D1
00021C5C <AmiBlitz3.ab2@5467>    ORI.w #$201F,D1
00021C60 <AmiBlitz3.ab2@5468>  BRA.w stamigalib__gotit
00021C64 <AmiBlitz3.ab2@5471>    ANDI.w #$7,D1
00021C66 <AmiBlitz3.ab2@5472>    LSL.w #8,D1
00021C68 <AmiBlitz3.ab2@5473>    LSL.w #1,D1
00021C6C <AmiBlitz3.ab2@5474>    ORI.w #$205F,D1
00021C70 <AmiBlitz3.ab2@5477>     BSR.w writeword
00021C74 <AmiBlitz3.ab2@5478>   DBF D3,stamigalib__loop2
00021C7A <AmiBlitz3.ab2@5481>   MOVE.w (A7)+,libjsr+2
00021C80 <AmiBlitz3.ab2@5482>   MOVE.w (A7)+,libbase+2
00021C86 <AmiBlitz3.ab2@5483>   MOVE.l libbase,D1
00021C8A <AmiBlitz3.ab2@5484>    BSR.w writelong
00021C90 <AmiBlitz3.ab2@5485>   MOVE.l libjsr,D1
00021C96 <AmiBlitz3.ab2@5486>   JSR writelong
00021C9C <AmiBlitz3.ab2@5487>   JSR restorea4a5
00021C9E <AmiBlitz3.ab2@5488>   RTS
00021CA4 <AmiBlitz3.ab2@5491>   MOVE.l data1,D4
00021CAA <AmiBlitz3.ab2@5492>   SUB.l data1start,D4
00021CB0 <AmiBlitz3.ab2@5493>   ADD.l #10000,d4
00021CB6 <AmiBlitz3.ab2@5494>   MOVE.l libend,D3
00021CBC <AmiBlitz3.ab2@5495>   SUB.l destbufferend,D3
00021CC2 <AmiBlitz3.ab2@5496>   ADD.l #40000,d3
00021CC8 <AmiBlitz3.ab2@5497>   MOVE.l bigpc,D2
00021CCE <AmiBlitz3.ab2@5498>   SUB.l destbufferstart,D2
00021CD4 <AmiBlitz3.ab2@5499>   ADD.l #20000,d2
00021CDA <AmiBlitz3.ab2@5500>   MOVE.l databuffer,D5
00021CE0 <AmiBlitz3.ab2@5501>   ADD.l #10000,D5
00021CE4 <AmiBlitz3.ab2@5502> BRA newallox
00021CEA <AmiBlitz3.ab2@5506>   MOVE.l objectbuffer,D2
00021CEC <AmiBlitz3.ab2@5507>   LSR.l #1,D2
00021CF2 <AmiBlitz3.ab2@5508>   ADD.l objectbuffer,D2
00021CF8 <AmiBlitz3.ab2@5509>   MOVE.l libsbuffer,D3
00021CFA <AmiBlitz3.ab2@5510>   LSR.l #1,D3
00021D00 <AmiBlitz3.ab2@5511>   ADD.l libsbuffer,D3
00021D06 <AmiBlitz3.ab2@5512>   MOVE.l systembuffer,D4
00021D08 <AmiBlitz3.ab2@5513>   LSR.l #1,D4
00021D0E <AmiBlitz3.ab2@5514>   ADD.l systembuffer,D4
00021D14 <AmiBlitz3.ab2@5515>   MOVE.l databuffer,D5
00021D16 <AmiBlitz3.ab2@5516>   LSR.l #1,D5
00021D1C <AmiBlitz3.ab2@5517>   ADD.l databuffer,D5
00021D20 <AmiBlitz3.ab2@5518> BRA.w newallox
00021D26 <AmiBlitz3.ab2@5522>   MOVE.l bigpc,D2
00021D2C <AmiBlitz3.ab2@5523>   SUB.l destbufferstart,D2                                     ;size of object buffer
00021D32 <AmiBlitz3.ab2@5524>   SUB.l savefuncspace,d2
00021D38 <AmiBlitz3.ab2@5526>   TST.w debugversion
00021D3C <AmiBlitz3.ab2@5527>    BNE.b alloxadj__skip
00021D42 <AmiBlitz3.ab2@5528>   ADDI.l #$800,D2
00021D48 <AmiBlitz3.ab2@5531>   MOVE.l libend,D3
00021D4E <AmiBlitz3.ab2@5532>   SUB.l destbufferend,D3
00021D54 <AmiBlitz3.ab2@5534>   MOVE.l data1,D4
00021D5A <AmiBlitz3.ab2@5535>   SUB.l data1start,D4
00021D60 <AmiBlitz3.ab2@5537>   MOVE.l data2,D5
00021D66 <AmiBlitz3.ab2@5538>   SUB.l data2at,D5
00021D6C <AmiBlitz3.ab2@5540>   CLR.l morememadd
00021D70 <AmiBlitz3.ab2@5543>   BSR.w makeallox
00021D74 <AmiBlitz3.ab2@5544>   BNE.w newallox__done
00021D78 <AmiBlitz3.ab2@5545> BRA.w init_buffers
00021D7A <AmiBlitz3.ab2@5548> RTS
00021D80 <AmiBlitz3.ab2@5552>   MOVEA.l _execbase,A6
00021D86 <AmiBlitz3.ab2@5553>   MOVE.l objlen,D0
00021D8A <AmiBlitz3.ab2@5554>   BEQ.w freeallox__skip
00021D90 <AmiBlitz3.ab2@5555>   CLR.l objlen
00021D96 <AmiBlitz3.ab2@5556>   MOVEA.l destbufferstart,A1
00021D9C <AmiBlitz3.ab2@5557>   MOVE.l mempool,a0
00021DA0 <AmiBlitz3.ab2@5558> JMP _FreeVec(A6)
00021DA2 <AmiBlitz3.ab2@5561> RTS
00021DA8 <AmiBlitz3.ab2@5565>   MOVE.l objectbuffer,D2
00021DAE <AmiBlitz3.ab2@5566>   MOVE.l libsbuffer,D3
00021DB4 <AmiBlitz3.ab2@5567>   MOVE.l systembuffer,D4
00021DBA <AmiBlitz3.ab2@5568>   MOVE.l databuffer,D5
00021DC2 <AmiBlitz3.ab2@5571>   MOVE.w #$FFFF,anyerrs
00021DC6 <AmiBlitz3.ab2@5572>   BSR.w freeallox
00021DC8 <AmiBlitz3.ab2@5576>   ADDQ.l #1,D2
00021DCC <AmiBlitz3.ab2@5577>   BCLR #$0,D2
00021DCE <AmiBlitz3.ab2@5578>   ADDQ.l #1,D3
00021DD2 <AmiBlitz3.ab2@5579>   BCLR #$0,D3
00021DD4 <AmiBlitz3.ab2@5580>   ADDQ.l #1,D4
00021DD8 <AmiBlitz3.ab2@5581>   BCLR #$0,D4
00021DDA <AmiBlitz3.ab2@5582>   TST.l d5
00021DDE <AmiBlitz3.ab2@5583>   BNE 'l1
00021DE0 <AmiBlitz3.ab2@5586>   ADDQ.l #1,D5
00021DE4 <AmiBlitz3.ab2@5587>   BCLR #$0,D5
00021DE6 <AmiBlitz3.ab2@5588>   MOVE.l D2,D0
00021DE8 <AmiBlitz3.ab2@5589>   ADD.l D3,D0
00021DEA <AmiBlitz3.ab2@5590>   ADD.l D4,D0
00021DEC <AmiBlitz3.ab2@5591>   ADD.l D5,D0
00021DF2 <AmiBlitz3.ab2@5592>   ADD.l #moremem,d0
00021DF4 <AmiBlitz3.ab2@5593>   MOVE.l D0,D6
00021DFA <AmiBlitz3.ab2@5594>   MOVE.l #MemfPublic_MemfClear,D1
00021E00 <AmiBlitz3.ab2@5595>   MOVE.l mempool,a0
00021E06 <AmiBlitz3.ab2@5596>   MOVEA.l _execbase,A6
00021E0A <AmiBlitz3.ab2@5597>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00021E0C <AmiBlitz3.ab2@5599>   TST.l D0
00021E10 <AmiBlitz3.ab2@5600>   BEQ.w exit_initbuffers
00021E16 <AmiBlitz3.ab2@5601>   MOVE.l D6,objlen
00021E1C <AmiBlitz3.ab2@5602>   MOVE.l D2,objectbuffer
00021E22 <AmiBlitz3.ab2@5603>   MOVE.l D3,libsbuffer
00021E28 <AmiBlitz3.ab2@5604>   MOVE.l D4,systembuffer
00021E2E <AmiBlitz3.ab2@5605>   MOVE.l D5,databuffer
00021E34 <AmiBlitz3.ab2@5606>   MOVE.l D0,destbufferstart
00021E68 <AmiBlitz3.ab2@5609>   !ComData_SetL{comPtr_DestBufferStart,D0}
00021E6A <AmiBlitz3.ab2@5610>   ADD.l D2,D0
00021E70 <AmiBlitz3.ab2@5611>   MOVE.l D0,destbufferend
00021E72 <AmiBlitz3.ab2@5612>   ADD.l D3,D0
00021E78 <AmiBlitz3.ab2@5613>   MOVE.l D0,data1start
00021E7A <AmiBlitz3.ab2@5614>   ADD.l D4,D0
00021E80 <AmiBlitz3.ab2@5615>   MOVE.l D0,data2at
00021E82 <AmiBlitz3.ab2@5616>   ADD.l D5,D0
00021E88 <AmiBlitz3.ab2@5617>   MOVE.l D0,allat
00021E8A <AmiBlitz3.ab2@5620> RTS
00021E8E <AmiBlitz3.ab2@5624>   Dc.b $00,$00,$00,$01                                     ;         1
00021E92 <AmiBlitz3.ab2@5625>   Dc.b $00,$00,$00,$0A                                     ;        10
00021E96 <AmiBlitz3.ab2@5626>   Dc.b $00,$00,$00,$64                                     ;       100
00021E9A <AmiBlitz3.ab2@5627>   Dc.b $00,$00,$03,$E8                                     ;      1000
00021E9E <AmiBlitz3.ab2@5628>   Dc.b $00,$00,$27,$10                                     ;     10000
00021EA2 <AmiBlitz3.ab2@5629>   Dc.b $00,$01,$86,$A0                                     ;    100000
00021EA6 <AmiBlitz3.ab2@5630>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00021EAA <AmiBlitz3.ab2@5631>   Dc.b $00,$98,$96,$80                                     ;  10000000
00021EAE <AmiBlitz3.ab2@5632>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00021EB2 <AmiBlitz3.ab2@5633>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00021EB4 <AmiBlitz3.ab2@5637>   MOVEQ.l #$00,D1                                          ;no zero printed
00021EB6 <AmiBlitz3.ab2@5638>   MOVEQ.l #$24,D3                                          ; "$"
00021EB8 <AmiBlitz3.ab2@5641>   MOVEQ.l #$30,D4                                          ; "0"
00021EBC <AmiBlitz3.ab2@5644>     CMP.l divisors(PC,D3.W),D2
00021EC0 <AmiBlitz3.ab2@5645>     BCS.w makelong__skip
00021EC4 <AmiBlitz3.ab2@5646>     SUB.l divisors(PC,D3.W),D2
00021EC6 <AmiBlitz3.ab2@5647>     ADDQ.w #1,D4
00021ECA <AmiBlitz3.ab2@5648> BRA.w makelong__loop2
00021ECE <AmiBlitz3.ab2@5651>   CMP.b #"0",D4
00021ED2 <AmiBlitz3.ab2@5652>   BNE.w makelong__doit
00021ED4 <AmiBlitz3.ab2@5653>   TST.w D1
00021ED8 <AmiBlitz3.ab2@5654>   BEQ.w makelong__skip2
00021EDA <AmiBlitz3.ab2@5657>   MOVE.b D4,(A0)+
00021EDC <AmiBlitz3.ab2@5658>   MOVEQ.l #$01,D1
00021EDE <AmiBlitz3.ab2@5661>   SUBQ.w #4,D3
00021EE2 <AmiBlitz3.ab2@5662>   BPL.w makelong__loop
00021EE4 <AmiBlitz3.ab2@5663>   TST.w D1
00021EE8 <AmiBlitz3.ab2@5664>   BNE.w makelong__skip3
00021EEC <AmiBlitz3.ab2@5665>   MOVE.b #"0",(A0)+
00021EEE <AmiBlitz3.ab2@5668>   CLR.b (A0)
00021EF0 <AmiBlitz3.ab2@5669> RTS
00021F10 <AmiBlitz3.ab2@5672> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00021FD0 <AmiBlitz3.ab2@5673> str_residentpath:       Ds.l 48                                                ;respath org source
00022090 <AmiBlitz3.ab2@5674> str_residentname:       Ds.l 48                                                ;resname org source
00022096 <AmiBlitz3.ab2@5678>   MOVE.l macrobase,D0
0002209A <AmiBlitz3.ab2@5679>    BNE.w create_residentfile
000220A0 <AmiBlitz3.ab2@5680>   MOVE.l newtype_string,D0
000220A4 <AmiBlitz3.ab2@5681>    BNE.w create_residentfile
000220AA <AmiBlitz3.ab2@5682>   MOVEA.l labelbase,A2
000220AE <AmiBlitz3.ab2@5685>     CMPA.w #$0,A2
000220B2 <AmiBlitz3.ab2@5686>      BEQ.w menu_createresidentfile__err
000220BA <AmiBlitz3.ab2@5687>     CMPI.l #$1,$4(A2)
000220BE <AmiBlitz3.ab2@5688>      BEQ.w create_residentfile
000220C0 <AmiBlitz3.ab2@5689>     MOVEA.l (A2),A2
000220C4 <AmiBlitz3.ab2@5690> BRA.w menu_createresidentfile__loop
000220EE <AmiBlitz3.ab2@5693>   !basic
00022150 <AmiBlitz3.ab2@5694> 
0002216E <AmiBlitz3.ab2@5695>   !asm
00022170 <AmiBlitz3.ab2@5696> RTS
000221AE <AmiBlitz3.ab2@5702>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000221B4 <AmiBlitz3.ab2@5703>   LEA str_residentrequester,A2
000221BA <AmiBlitz3.ab2@5704>   LEA str_residentpath,A0
000221C0 <AmiBlitz3.ab2@5705>   LEA str_residentname,A1
000221EA <AmiBlitz3.ab2@5706>   !basic
00022222 <AmiBlitz3.ab2@5707>     Poke$ ?str_residentpath,my_residentsdir$
0002224E <AmiBlitz3.ab2@5708>     Poke$ ?str_residentname,".res"
0002226C <AmiBlitz3.ab2@5709>   !asm
0002226E <AmiBlitz3.ab2@5712>   JSR (A3)
00022272 <AmiBlitz3.ab2@5714>   BEQ.w menu_createresidentfile__err
00022274 <AmiBlitz3.ab2@5717>   MOVE.l D0,D1
0002227A <AmiBlitz3.ab2@5718>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002227E <AmiBlitz3.ab2@5719>   MOVEA.l _dosbase(PC),A6
00022282 <AmiBlitz3.ab2@5720>   JSR _Open(A6)
00022284 <AmiBlitz3.ab2@5721>   MOVE.l D0,D7                                             ;handle
00022288 <AmiBlitz3.ab2@5722>   BEQ.w menu_createresidentfile__err
0002228C <AmiBlitz3.ab2@5723>   MOVEM.l d2-d7/a0-a6,-(a7)
00022292 <AmiBlitz3.ab2@5724>   LEA devo,a0
00022298 <AmiBlitz3.ab2@5725>   LEA ptr_parameterstore,a1
0002229A <AmiBlitz3.ab2@5728>     MOVE.b (a0)+,(a1)+
0002229E <AmiBlitz3.ab2@5729>   BNE 'l1
000222A0 <AmiBlitz3.ab2@5730>   MOVEQ #13,d2
000222A6 <AmiBlitz3.ab2@5731>   JSR findlabel2
000222AA <AmiBlitz3.ab2@5732>   BNE 'd
000222AE <AmiBlitz3.ab2@5733>   TST.l 8(a2)
000222B2 <AmiBlitz3.ab2@5734>   BEQ 'd2
000222DC <AmiBlitz3.ab2@5735>   !basic
0002233E <AmiBlitz3.ab2@5736>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
0002235C <AmiBlitz3.ab2@5737>   !asm
00022360 <AmiBlitz3.ab2@5738>   MOVEM.l (a7)+,d2-d7/a0-a6
00022364 <AmiBlitz3.ab2@5739>   MOVEA.l _dosbase(PC),A6
00022366 <AmiBlitz3.ab2@5740>   MOVE.l d7,d1
0002236A <AmiBlitz3.ab2@5741>   JSR _Close(a6)
0002236E <AmiBlitz3.ab2@5742> BRA menu_createresidentfile__err
00022372 <AmiBlitz3.ab2@5746>   MOVEM.l (a7)+,d2-d7/a0-a6
00022376 <AmiBlitz3.ab2@5747>   BSR.w call_setpointerbusy
0002237A <AmiBlitz3.ab2@5749>   BSR.w AJL_0_7962
0002237C <AmiBlitz3.ab2@5750>   MOVE.l D7,D1
00022382 <AmiBlitz3.ab2@5751>   MOVE.l #tsthead,D2                                       ;header
00022384 <AmiBlitz3.ab2@5752>   MOVEQ.l #$20,D3
00022388 <AmiBlitz3.ab2@5753>   MOVEA.l _dosbase(PC),A6
0002238C <AmiBlitz3.ab2@5754>   JSR _Write(A6)
0002238E <AmiBlitz3.ab2@5755>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00022392 <AmiBlitz3.ab2@5756>   BSR.w restypes
00022396 <AmiBlitz3.ab2@5757>   BSR.w resmacs
0002239A <AmiBlitz3.ab2@5758>   BSR.w resconsts
0002239C <AmiBlitz3.ab2@5759>   MOVE.l D6,D3
0002239E <AmiBlitz3.ab2@5760>   ADDQ.l #3,D3
000223A4 <AmiBlitz3.ab2@5761>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
000223A6 <AmiBlitz3.ab2@5762>   MOVE.l D3,-(A7)
000223A8 <AmiBlitz3.ab2@5763>   SUB.l D6,D3
000223AC <AmiBlitz3.ab2@5764>   BEQ.w menu_createresidentfile__noalign
000223B2 <AmiBlitz3.ab2@5765>   MOVE.l #writelist,D2
000223B4 <AmiBlitz3.ab2@5766>   MOVE.l D7,D1
000223BA <AmiBlitz3.ab2@5767>   MOVEA.l _dosbase,A6
000223BE <AmiBlitz3.ab2@5768>   JSR _Write(A6)
000223C8 <AmiBlitz3.ab2@5771>    MOVE.l hunkoffsetcounter,tstsize3
000223CC <AmiBlitz3.ab2@5772>    BEQ.w menu_createresidentfile__skip2a
000223CE <AmiBlitz3.ab2@5773>   MOVE.l D7,D1
000223D4 <AmiBlitz3.ab2@5774>   MOVE.l #tstend,D2
000223D6 <AmiBlitz3.ab2@5775>   MOVEQ.l #$0C,D3
000223DC <AmiBlitz3.ab2@5776>   MOVEA.l _dosbase,A6
000223E0 <AmiBlitz3.ab2@5777>    JSR _Write(A6)
000223E6 <AmiBlitz3.ab2@5781>   MOVEA.l hunkoffsetbase,A2
000223EA <AmiBlitz3.ab2@5784>   CMPA.w #$0,A2
000223EE <AmiBlitz3.ab2@5785>    BEQ.w menu_createresidentfile__skip2
000223F2 <AmiBlitz3.ab2@5786>   LEA $4(A2),A1
000223F4 <AmiBlitz3.ab2@5787>   MOVE.l D7,D1
000223F6 <AmiBlitz3.ab2@5788>   MOVE.l A1,D2
000223F8 <AmiBlitz3.ab2@5789>   MOVEQ.l #$04,D3
000223FE <AmiBlitz3.ab2@5790>   MOVEA.l _dosbase,A6
00022402 <AmiBlitz3.ab2@5791>    JSR _Write(A6)
00022404 <AmiBlitz3.ab2@5792>   MOVEA.l (A2),A2
00022408 <AmiBlitz3.ab2@5793> BRA.w menu_createresidentfile__oloop
0002240A <AmiBlitz3.ab2@5796>   MOVE.l D7,D1
00022410 <AmiBlitz3.ab2@5797>   MOVE.l #zero,D2
00022412 <AmiBlitz3.ab2@5798>   MOVEQ.l #$04,D3
00022418 <AmiBlitz3.ab2@5799>   MOVEA.l _dosbase,A6
0002241C <AmiBlitz3.ab2@5800>   JSR _Write(A6)
0002241E <AmiBlitz3.ab2@5803>   MOVE.l D7,D1
00022424 <AmiBlitz3.ab2@5804>   MOVE.l #tstdone,D2
00022426 <AmiBlitz3.ab2@5805>   MOVEQ.l #$04,D3
0002242C <AmiBlitz3.ab2@5806>   MOVEA.l _dosbase,A6
00022430 <AmiBlitz3.ab2@5807>    JSR _Write(A6)
00022432 <AmiBlitz3.ab2@5808>   MOVE.l (A7)+,D0
00022434 <AmiBlitz3.ab2@5809>   LSR.l #2,D0
0002243A <AmiBlitz3.ab2@5810>   MOVE.l D0,temp1
0002243C <AmiBlitz3.ab2@5811>   MOVE.l D7,D1
0002243E <AmiBlitz3.ab2@5812>   MOVEQ.l #$14,D2
00022440 <AmiBlitz3.ab2@5813>   MOVEQ.l #-$01,D3
00022444 <AmiBlitz3.ab2@5814>   JSR _Seek(A6)
00022446 <AmiBlitz3.ab2@5815>   MOVE.l D7,D1
0002244C <AmiBlitz3.ab2@5816>   MOVE.l #temp1,D2
0002244E <AmiBlitz3.ab2@5817>   MOVEQ.l #$04,D3
00022452 <AmiBlitz3.ab2@5818>    JSR _Write(A6)
00022454 <AmiBlitz3.ab2@5819>   MOVE.l D7,D1
00022456 <AmiBlitz3.ab2@5820>   MOVEQ.l #$1C,D2
00022458 <AmiBlitz3.ab2@5821>   MOVEQ.l #-$01,D3
0002245C <AmiBlitz3.ab2@5822>    JSR _Seek(A6)
0002245E <AmiBlitz3.ab2@5823>   MOVE.l D7,D1
00022464 <AmiBlitz3.ab2@5824>   MOVE.l #temp1,D2
00022466 <AmiBlitz3.ab2@5825>   MOVEQ.l #$04,D3
0002246A <AmiBlitz3.ab2@5826>    JSR _Write(A6)
0002246C <AmiBlitz3.ab2@5827>   MOVE.l D7,D1
00022470 <AmiBlitz3.ab2@5828>    JSR _Close(A6)
00022474 <AmiBlitz3.ab2@5829> BRA.w call_setpointernormal
00022476 <AmiBlitz3.ab2@5833>   ADDQ.w #5,D1
00022478 <AmiBlitz3.ab2@5834>   ADDQ.b #8,D0
0002247C <AmiBlitz3.ab2@5837>     CMPA.w #$0,A2
00022480 <AmiBlitz3.ab2@5838>     BEQ.w writelist__done
00022484 <AmiBlitz3.ab2@5839>      BSR.w writeitem
00022486 <AmiBlitz3.ab2@5840>     MOVEA.l (A2),A2
0002248A <AmiBlitz3.ab2@5841> BRA.w writelist__loop
0002248C <AmiBlitz3.ab2@5844> RTS
0002248E <AmiBlitz3.ab2@5847>   MOVEQ.l #$00,D3
00022492 <AmiBlitz3.ab2@5848>   MOVE.b $0(A2,D5.W),D3
00022494 <AmiBlitz3.ab2@5849>   ADDQ.w #1,D3
00022498 <AmiBlitz3.ab2@5850>   BCLR #$0,D3                                              ;word align
0002249A <AmiBlitz3.ab2@5851>   MOVE.l (A2),-(A7)
0002249E <AmiBlitz3.ab2@5852>    BEQ.w writeitem__skip
000224A2 <AmiBlitz3.ab2@5853>    BSR.w resoff
000224A4 <AmiBlitz3.ab2@5854>   ADD.l D3,D6
000224A6 <AmiBlitz3.ab2@5855>   MOVE.l D6,(A2)
000224A8 <AmiBlitz3.ab2@5856>   SUB.l D3,D6
000224AA <AmiBlitz3.ab2@5859>    ADD.l D3,D6
000224AC <AmiBlitz3.ab2@5860>   MOVE.l A2,D2
000224AE <AmiBlitz3.ab2@5861>   MOVE.l D7,D1
000224B4 <AmiBlitz3.ab2@5862>   MOVEA.l _dosbase,A6
000224B8 <AmiBlitz3.ab2@5863>    JSR _Write(A6)
000224BA <AmiBlitz3.ab2@5864>   MOVE.l (A7)+,(A2)
000224BC <AmiBlitz3.ab2@5865> RTS
000224BE <AmiBlitz3.ab2@5868>   MOVE.l D6,D2
000224C2 <AmiBlitz3.ab2@5869> BRA.w addhunkoffset
000224C6 <AmiBlitz3.ab2@5873>     CMPA.w #$0,A2
000224CA <AmiBlitz3.ab2@5874>      BEQ.w writeoffs__done
000224D0 <AmiBlitz3.ab2@5875>     MOVEA.l newtypebase,A1
000224D2 <AmiBlitz3.ab2@5876>     MOVEQ.l #$00,D1
000224D6 <AmiBlitz3.ab2@5879>       CMPA.w #$0,A1
000224DA <AmiBlitz3.ab2@5880>       BEQ.w writeoffs__found
000224DE <AmiBlitz3.ab2@5881>       CMPA.l $A(A2),A1
000224E2 <AmiBlitz3.ab2@5882>        BEQ.w writeoffs__found
000224E4 <AmiBlitz3.ab2@5883>       ADDQ.w #1,D1
000224E6 <AmiBlitz3.ab2@5884>       MOVEA.l (A1),A1
000224EA <AmiBlitz3.ab2@5885> BRA.w writeoffs__loop2
000224EE <AmiBlitz3.ab2@5888>     MOVE.w $A(A2),-(A7)
000224F2 <AmiBlitz3.ab2@5889>     MOVE.w D1,$A(A2)
000224F6 <AmiBlitz3.ab2@5890>      BSR.w writeitem
000224FA <AmiBlitz3.ab2@5891>     MOVE.w (A7)+,$A(A2)
000224FC <AmiBlitz3.ab2@5892>     MOVEA.l (A2),A2
00022500 <AmiBlitz3.ab2@5893> BRA.w writeoffs
00022502 <AmiBlitz3.ab2@5896> RTS
00022504 <AmiBlitz3.ab2@5900>   MOVEQ.l #$00,D0
00022508 <AmiBlitz3.ab2@5903>   CMPA.w #$0,A2
0002250C <AmiBlitz3.ab2@5904>    BEQ.w countem__done
0002250E <AmiBlitz3.ab2@5905>   ADDQ.w #1,D0
00022510 <AmiBlitz3.ab2@5906>   MOVEA.l (A2),A2
00022514 <AmiBlitz3.ab2@5907> BRA.w countem__loop
0002251A <AmiBlitz3.ab2@5910>   MOVE.w D0,temp1
0002251C <AmiBlitz3.ab2@5911>   MOVE.l D7,D1
00022522 <AmiBlitz3.ab2@5912>   MOVE.l #temp1,D2
00022524 <AmiBlitz3.ab2@5913>   MOVEQ.l #$02,D3
00022526 <AmiBlitz3.ab2@5914>   ADDQ.l #2,D6
0002252C <AmiBlitz3.ab2@5915>   MOVEA.l _dosbase,A6
00022530 <AmiBlitz3.ab2@5916> JMP _Write(A6)
00022536 <AmiBlitz3.ab2@5920>    TST.b resdisable
0002253A <AmiBlitz3.ab2@5921>    BEQ resmacs__l1
00022540 <AmiBlitz3.ab2@5922>    MOVE.l currentmacroaddr,a3
00022546 <AmiBlitz3.ab2@5923>    CMP.l #0,a3
0002254A <AmiBlitz3.ab2@5924>    BEQ resmacs__l1
0002254C <AmiBlitz3.ab2@5925>    MOVE.l (a3),a3
00022550 <AmiBlitz3.ab2@5926> BRA resmacs__l2
00022556 <AmiBlitz3.ab2@5929>   MOVEA.l macrobase,A3                                     ;??begin org code??
00022558 <AmiBlitz3.ab2@5932>   MOVEA.l A3,A2
0002255C <AmiBlitz3.ab2@5933>   BSR.w countem
00022560 <AmiBlitz3.ab2@5936>    CMPA.w #$0,A3
00022564 <AmiBlitz3.ab2@5937>    BEQ.w resmacs__done
00022566 <AmiBlitz3.ab2@5938>   MOVE.l D6,D5
00022568 <AmiBlitz3.ab2@5939>   MOVE.l (A3),-(A7)
0002256C <AmiBlitz3.ab2@5940>   MOVE.l $4(A3),-(A7)
0002256E <AmiBlitz3.ab2@5941>   MOVEQ.l #$00,D3
00022572 <AmiBlitz3.ab2@5942>   MOVE.b $C(A3),D3
00022574 <AmiBlitz3.ab2@5943>   ADDQ.w #1,D3
00022578 <AmiBlitz3.ab2@5944>   BCLR #$0,D3
0002257A <AmiBlitz3.ab2@5945>   ADD.l D3,D6                                              ;add len of struct
0002257E <AmiBlitz3.ab2@5946>   TST.w $8(A3)
00022582 <AmiBlitz3.ab2@5947>    BEQ.w resmacs__notext
00022586 <AmiBlitz3.ab2@5948>   MOVE.l D6,$4(A3)
00022588 <AmiBlitz3.ab2@5949>   MOVE.l D5,D2
0002258A <AmiBlitz3.ab2@5950>   ADDQ.l #4,D2
0002258E <AmiBlitz3.ab2@5951>    BSR.w addhunkoffset
00022590 <AmiBlitz3.ab2@5954>   MOVEQ.l #$00,D4
00022594 <AmiBlitz3.ab2@5955>   MOVE.w $8(A3),D4
00022596 <AmiBlitz3.ab2@5956>   ADDQ.w #1,D4
0002259A <AmiBlitz3.ab2@5957>   BCLR #$0,D4
0002259C <AmiBlitz3.ab2@5958>   ADD.l D4,D6
0002259E <AmiBlitz3.ab2@5959>   TST.l (A3)
000225A2 <AmiBlitz3.ab2@5960>    BEQ.w resmacs__nomore
000225A4 <AmiBlitz3.ab2@5961>   MOVE.l D6,(A3)
000225A6 <AmiBlitz3.ab2@5962>   MOVE.l D5,D2
000225AA <AmiBlitz3.ab2@5963>    BSR.w addhunkoffset
000225AC <AmiBlitz3.ab2@5966>   MOVE.l A3,D2
000225AE <AmiBlitz3.ab2@5967>   MOVE.l D7,D1
000225B4 <AmiBlitz3.ab2@5969>    MOVEA.l _dosbase,A6
000225B8 <AmiBlitz3.ab2@5970>    JSR _Write(a6)
000225BA <AmiBlitz3.ab2@5971>   TST.l D4
000225BE <AmiBlitz3.ab2@5972>    BEQ.w resmacs__skip
000225C0 <AmiBlitz3.ab2@5973>   MOVE.l (A7),D2
000225C2 <AmiBlitz3.ab2@5974>   MOVE.l D4,D3
000225C4 <AmiBlitz3.ab2@5975>   MOVE.l D7,D1
000225CA <AmiBlitz3.ab2@5977>     MOVEA.l _dosbase,A6
000225CE <AmiBlitz3.ab2@5978>    JSR _Write(A6)
000225D2 <AmiBlitz3.ab2@5981>   MOVE.l (A7)+,$4(A3)
000225D4 <AmiBlitz3.ab2@5982>   MOVE.l (A7)+,(A3)
000225D6 <AmiBlitz3.ab2@5983>   MOVEA.l (A3),A3
000225DA <AmiBlitz3.ab2@5984> BRA.w resmacs__loop
000225DC <AmiBlitz3.ab2@5987> RTS
000225E2 <AmiBlitz3.ab2@5991>   TST.b resdisable
000225E6 <AmiBlitz3.ab2@5992>   BEQ restypes__l1
000225EC <AmiBlitz3.ab2@5993>   MOVE.l lastrestype,a3
000225F2 <AmiBlitz3.ab2@5994>   CMP.l #0,a3
000225F6 <AmiBlitz3.ab2@5995>   BEQ restypes__l1
000225F8 <AmiBlitz3.ab2@5996>   MOVE.l (a3),a3
000225FC <AmiBlitz3.ab2@5997> BRA restypes__l2
00022602 <AmiBlitz3.ab2@6000>   MOVEA.l newtype_string,A3
00022604 <AmiBlitz3.ab2@6003>   MOVEA.l A3,A2
00022608 <AmiBlitz3.ab2@6004>    BSR.w countem
0002260C <AmiBlitz3.ab2@6007>    CMPA.w #$0,A3
00022610 <AmiBlitz3.ab2@6008>    BEQ.w restypes__done
00022612 <AmiBlitz3.ab2@6009>   MOVE.l D6,-(A7)
00022616 <AmiBlitz3.ab2@6010>   MOVEA.l $4(A3),A2
00022618 <AmiBlitz3.ab2@6011>   MOVEQ.l #$0E,D5
0002261C <AmiBlitz3.ab2@6012>    BSR.w writeoffs
0002261E <AmiBlitz3.ab2@6013>   MOVE.l (A7)+,D0
00022622 <AmiBlitz3.ab2@6014>   MOVE.l $4(A3),-(A7)
00022626 <AmiBlitz3.ab2@6015>   MOVE.l D0,$4(A3)
00022628 <AmiBlitz3.ab2@6016>   MOVE.l D6,D2
0002262A <AmiBlitz3.ab2@6017>   ADDQ.l #4,D2
0002262E <AmiBlitz3.ab2@6018>    BSR.w addhunkoffset
00022630 <AmiBlitz3.ab2@6019>   MOVEQ.l #$00,D3
00022634 <AmiBlitz3.ab2@6020>   MOVE.b $A(A3),D3
00022636 <AmiBlitz3.ab2@6021>   ADDQ.w #1,D3
0002263A <AmiBlitz3.ab2@6022>   BCLR #$0,D3
0002263C <AmiBlitz3.ab2@6023>   ADD.l D3,D6
0002263E <AmiBlitz3.ab2@6024>   MOVE.l A3,D2
00022640 <AmiBlitz3.ab2@6025>   MOVE.l D7,D1
00022646 <AmiBlitz3.ab2@6027>     MOVEA.l _dosbase,A6
0002264A <AmiBlitz3.ab2@6028>     JSR _Write(A6)
0002264E <AmiBlitz3.ab2@6029>   MOVE.l (A7)+,$4(A3)
00022650 <AmiBlitz3.ab2@6030>   MOVEA.l (A3),A3
00022654 <AmiBlitz3.ab2@6031> BRA.w restypes__loop
00022656 <AmiBlitz3.ab2@6034> RTS
0002265C <AmiBlitz3.ab2@6038>    TST.b resdisable
00022660 <AmiBlitz3.ab2@6039>    BEQ resconsts__l1
00022666 <AmiBlitz3.ab2@6040>    MOVE.l currentlabeladdr,a2
0002266C <AmiBlitz3.ab2@6041>    CMP.l #0,a2
00022670 <AmiBlitz3.ab2@6042>    BEQ resconsts__l1
00022672 <AmiBlitz3.ab2@6043>    MOVE.l (a2),a2
00022676 <AmiBlitz3.ab2@6044> BRA resconsts__l2
0002267C <AmiBlitz3.ab2@6047>    MOVEA.l labelbase,A2
0002267E <AmiBlitz3.ab2@6050>    MOVEQ.l #$00,D0
00022682 <AmiBlitz3.ab2@6053>    CMPA.w #$0,A2
00022686 <AmiBlitz3.ab2@6054>    BEQ.w resconsts__done
0002268E <AmiBlitz3.ab2@6055>   CMPI.l #$1,$4(A2)
00022692 <AmiBlitz3.ab2@6056>    BNE.w resconsts__next
00022694 <AmiBlitz3.ab2@6057>   ADDQ.w #1,D0
00022696 <AmiBlitz3.ab2@6060>   MOVEA.l (A2),A2
0002269A <AmiBlitz3.ab2@6061> BRA.w resconsts__loop
000226A0 <AmiBlitz3.ab2@6064>   MOVE.w D0,temp1
000226A2 <AmiBlitz3.ab2@6065>   MOVE.l D7,D1
000226A8 <AmiBlitz3.ab2@6066>   MOVE.l #temp1,D2
000226AA <AmiBlitz3.ab2@6067>   MOVEQ.l #$02,D3
000226AC <AmiBlitz3.ab2@6068>   ADDQ.l #2,D6
000226B2 <AmiBlitz3.ab2@6070>     MOVEA.l _dosbase,A6
000226B6 <AmiBlitz3.ab2@6071>     JSR _Write(A6)
000226BC <AmiBlitz3.ab2@6072>    TST.b resdisable
000226C0 <AmiBlitz3.ab2@6073>    BEQ resconsts__done_l1
000226C6 <AmiBlitz3.ab2@6074>    MOVE.l currentlabeladdr,a2
000226CC <AmiBlitz3.ab2@6075>    CMP.l #0,a2
000226D0 <AmiBlitz3.ab2@6076>    BEQ resconsts__done_l1
000226D2 <AmiBlitz3.ab2@6077>    MOVE.l (a2),a2
000226D6 <AmiBlitz3.ab2@6078> BRA resconsts__loop2
000226DC <AmiBlitz3.ab2@6081>    MOVEA.l labelbase,A2                                    ;write resident labels
000226E0 <AmiBlitz3.ab2@6084>    CMPA.w #$0,A2
000226E4 <AmiBlitz3.ab2@6085>    BEQ.w resconsts__done2
000226EC <AmiBlitz3.ab2@6086>   CMPI.l #$1,$4(A2)
000226F0 <AmiBlitz3.ab2@6087>    BNE.w resconsts__next2
000226F2 <AmiBlitz3.ab2@6088>    MOVEQ.l #$00,D3
000226F6 <AmiBlitz3.ab2@6089>   MOVE.b $12(A2),D3                                        ;length
000226F8 <AmiBlitz3.ab2@6090>   ADDQ.w #1,D3
000226FC <AmiBlitz3.ab2@6091>   BCLR #$0,D3
000226FE <AmiBlitz3.ab2@6092>   MOVE.l D6,D2
00022700 <AmiBlitz3.ab2@6093>   ADD.l D3,D6
00022702 <AmiBlitz3.ab2@6096>   MOVE.l (A2),-(A7)
00022704 <AmiBlitz3.ab2@6097>   TST.l (A2)
00022708 <AmiBlitz3.ab2@6098>    BEQ.w resconsts__nonext
0002270A <AmiBlitz3.ab2@6099>   MOVE.l D6,(A2)
0002270E <AmiBlitz3.ab2@6100>    BSR.w addhunkoffset
00022710 <AmiBlitz3.ab2@6103>   MOVE.l A2,D2
00022712 <AmiBlitz3.ab2@6104>   MOVE.l D7,D1
00022718 <AmiBlitz3.ab2@6106>     MOVEA.l _dosbase,A6
0002271C <AmiBlitz3.ab2@6107>     JSR _Write(A6)
0002271E <AmiBlitz3.ab2@6108>   MOVE.l (A7)+,(A2)
00022720 <AmiBlitz3.ab2@6111>   MOVEA.l (A2),A2
00022724 <AmiBlitz3.ab2@6112> BRA.w resconsts__loop2
00022726 <AmiBlitz3.ab2@6115> RTS
00022750 <AmiBlitz3.ab2@6119>    !basic
00022756 <AmiBlitz3.ab2@6120>     MOVE.l ptr_resfile,d0
00022766 <AmiBlitz3.ab2@6121>     resfileP.l = Peek.l(?ptr_resfile)
00022770 <AmiBlitz3.ab2@6122>     If resfileP
00022798 <AmiBlitz3.ab2@6123>       resfile$ = Peek.s(resfileP)
000227E4 <AmiBlitz3.ab2@6124>       tests.b = Instr(resfile$,"/")
00022830 <AmiBlitz3.ab2@6125>       testc.b = Instr(resfile$,":")
00022852 <AmiBlitz3.ab2@6126>       If tests=0 AND testc=0
000228D2 <AmiBlitz3.ab2@6127>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
000228E4 <AmiBlitz3.ab2@6128>         Poke.l ?ptr_resfile,&resfile$
000228EA <AmiBlitz3.ab2@6130>     Else
00022924 <AmiBlitz3.ab2@6131>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00022942 <AmiBlitz3.ab2@6133>    !asm
00022944 <AmiBlitz3.ab2@6134> RTS
0002294A <AmiBlitz3.ab2@6138> 
00022950 <AmiBlitz3.ab2@6139>   MOVE.l A7,errstack
0002295A <AmiBlitz3.ab2@6142>   MOVE.l #next_resentry,errcont
00022962 <AmiBlitz3.ab2@6143>   MOVE.w #$FFFF,ezerr
00022966 <AmiBlitz3.ab2@6144>   BSR.w Aclearallvars
0002296A <AmiBlitz3.ab2@6145>   BSR.w free_residents
00022970 <AmiBlitz3.ab2@6147>   LEA residents_table,A5
00022972 <AmiBlitz3.ab2@6148>   MOVEQ.l #$07,D6
00022974 <AmiBlitz3.ab2@6151>     TST.b (A5)
00022978 <AmiBlitz3.ab2@6152>     BEQ.w next_resentry
0002297E <AmiBlitz3.ab2@6153>     MOVE.l A5,ptr_resfile
00022982 <AmiBlitz3.ab2@6154>     BSR check_residentpath
00022988 <AmiBlitz3.ab2@6155>     MOVE.l ptr_resfile,d1
0002298E <AmiBlitz3.ab2@6156>     MOVEA.l _dosbase,A6
00022992 <AmiBlitz3.ab2@6157>     JSR _LoadSeg(A6)
00022996 <AmiBlitz3.ab2@6158>     MOVE.l D0,$40(A5)
0002299A <AmiBlitz3.ab2@6159>     BNE.w reloadresident__yeah
0002299E <AmiBlitz3.ab2@6160>     BSR.w reserr
000229A0 <AmiBlitz3.ab2@6163>     MOVEA.l D0,A3
000229A2 <AmiBlitz3.ab2@6164>     ADDA.l A3,A3
000229A4 <AmiBlitz3.ab2@6165>     ADDA.l A3,A3
000229A6 <AmiBlitz3.ab2@6166>     ADDQ.w #4,A3                                           ;start of res
000229AA <AmiBlitz3.ab2@6167>     BSR.w JL_0_5A9E
000229AE <AmiBlitz3.ab2@6168>     BSR.w JL_0_5A62                                        ;add macros to list
000229B2 <AmiBlitz3.ab2@6169>     BSR.w JL_0_5A32                                        ;read labels
000229B6 <AmiBlitz3.ab2@6172>     LEA ResidentEntryStep(A5),A5       ;$44
000229BA <AmiBlitz3.ab2@6173>   DBF D6,reloadresident__loop
000229C4 <AmiBlitz3.ab2@6178>   MOVE.l #free_residents,errcont
000229CA <AmiBlitz3.ab2@6180>   MOVEA.l newtype_string,A3
000229CC <AmiBlitz3.ab2@6181>   MOVEQ.l #$0B,D7
000229D0 <AmiBlitz3.ab2@6182>   BSR.w checkclash
000229D6 <AmiBlitz3.ab2@6184>   MOVEA.l macrobase,A3
000229D8 <AmiBlitz3.ab2@6185>   MOVEQ.l #$d,D7
000229DC <AmiBlitz3.ab2@6186>   BSR.w checkclash
000229E2 <AmiBlitz3.ab2@6188>   MOVEA.l firstconst,A3
000229E4 <AmiBlitz3.ab2@6189>   MOVEQ.l #$19,D7
000229E8 <AmiBlitz3.ab2@6190>   BSR.w checkclash
000229EA <AmiBlitz3.ab2@6193> RTS
000229EC <AmiBlitz3.ab2@6197>   MOVEA.l A3,A4
000229F0 <AmiBlitz3.ab2@6200>     CMPA.w #$0,A4
000229F4 <AmiBlitz3.ab2@6201>     BEQ.w checkclash__done
000229FA <AmiBlitz3.ab2@6203>     LEA ptr_parameterstore,A0
000229FE <AmiBlitz3.ab2@6204>     LEA $0(A4,D7.W),A1
00022A00 <AmiBlitz3.ab2@6205>     MOVEQ.l #-$01,D2
00022A02 <AmiBlitz3.ab2@6208>       ADDQ.w #1,D2
00022A04 <AmiBlitz3.ab2@6209>       MOVE.b (A1)+,(A0)+
00022A08 <AmiBlitz3.ab2@6210>     BNE.w checkclash__loop2
00022A0A <AmiBlitz3.ab2@6211>     MOVEA.l A3,A2
00022A0E <AmiBlitz3.ab2@6214>     BSR.w findlab
00022A12 <AmiBlitz3.ab2@6215>     BNE.w checkclash__next                                  ;not found
00022A14 <AmiBlitz3.ab2@6216>     CMPA.l A2,A4
00022A18 <AmiBlitz3.ab2@6217>     BEQ.w checkclash__l1
00022A1A <AmiBlitz3.ab2@6218>     MOVE.l a1,a5
00022A1E <AmiBlitz3.ab2@6219> BRA clasherr
00022A22 <AmiBlitz3.ab2@6222> BRA.w checkclash__more
00022A24 <AmiBlitz3.ab2@6225>     MOVEA.l (A4),A4
00022A28 <AmiBlitz3.ab2@6226> BRA.w checkclash__loop
00022A2A <AmiBlitz3.ab2@6229> RTS
00022A30 <AmiBlitz3.ab2@6233>   MOVEA.l _dosbase,A6
00022A36 <AmiBlitz3.ab2@6235>   LEA newtype_string,A0
00022A3C <AmiBlitz3.ab2@6236>   MOVE.l A0,lastrestype
00022A3E <AmiBlitz3.ab2@6237>   CLR.l (A0)
00022A44 <AmiBlitz3.ab2@6239>   LEA macrobase,A0
00022A4A <AmiBlitz3.ab2@6240>   MOVE.l A0,currentmacroaddr
00022A4C <AmiBlitz3.ab2@6241>   CLR.l (A0)
00022A52 <AmiBlitz3.ab2@6243>   LEA labelbase,A0
00022A58 <AmiBlitz3.ab2@6244>   MOVE.l A0,currentlabeladdr
00022A5A <AmiBlitz3.ab2@6245>   CLR.l (A0)
00022A60 <AmiBlitz3.ab2@6246>   CLR.w rescnt
00022A98 <AmiBlitz3.ab2@6250>   !ComData_SetB{comByte_DebugMode,debugmode}
00022A9E <AmiBlitz3.ab2@6253>   LEA residents_table,A2
00022AA0 <AmiBlitz3.ab2@6254>   MOVEQ.l #$07,D2
00022AA4 <AmiBlitz3.ab2@6257>      MOVE.l $40(A2),D1
00022AA8 <AmiBlitz3.ab2@6258>      BEQ.w free_residents__next
00022AAC <AmiBlitz3.ab2@6259>       CLR.l $40(A2)
00022AB2 <AmiBlitz3.ab2@6260>       MOVEA.l _dosbase,A6
00022AB6 <AmiBlitz3.ab2@6261>       JSR _UnLoadSeg(A6)
00022ABA <AmiBlitz3.ab2@6264>      LEA ResidentEntryStep(A2),A2   ; $44
00022ABE <AmiBlitz3.ab2@6265>    DBF D2,free_residents__loop
00022AC0 <AmiBlitz3.ab2@6267> RTS
00022AC2 <AmiBlitz3.ab2@6271>   MOVE.w (A3)+,D1
00022AC6 <AmiBlitz3.ab2@6272>   BEQ.w JL_0_5A60
00022ACC <AmiBlitz3.ab2@6273>   MOVEA.l currentlabeladdr,A2
00022ACE <AmiBlitz3.ab2@6274>   MOVE.l A3,(A2)
00022AD0 <AmiBlitz3.ab2@6275>   SUBQ.w #1,D1
00022AD2 <AmiBlitz3.ab2@6278>     MOVEA.l A3,A2
00022AD4 <AmiBlitz3.ab2@6279>     MOVEA.l (A3),A3
00022AD8 <AmiBlitz3.ab2@6280>   DBF D1,JL_0_5A42
00022ADA <AmiBlitz3.ab2@6282>   CLR.l (a2)                                               ;bugfix for object
00022AE0 <AmiBlitz3.ab2@6283>   MOVE.l A2,currentlabeladdr
00022AE2 <AmiBlitz3.ab2@6284>   MOVEA.l A2,A3
00022AE4 <AmiBlitz3.ab2@6285>   MOVEQ.l #$00,D0
00022AE8 <AmiBlitz3.ab2@6286>   MOVE.b $12(A3),D0
00022AEA <AmiBlitz3.ab2@6287>   ADDQ.w #1,D0
00022AEE <AmiBlitz3.ab2@6288>   BCLR #$0,D0
00022AF0 <AmiBlitz3.ab2@6289>   ADDA.w D0,A3
00022AF2 <AmiBlitz3.ab2@6292> RTS
00022AF4 <AmiBlitz3.ab2@6296>   MOVE.w (A3)+,D1
00022AF8 <AmiBlitz3.ab2@6297>   BEQ.w JL_0_5A9C
00022AFE <AmiBlitz3.ab2@6299>   MOVEA.l currentmacroaddr,A2
00022B00 <AmiBlitz3.ab2@6300>   MOVE.l A3,(A2)
00022B02 <AmiBlitz3.ab2@6301>   SUBQ.w #1,D1
00022B04 <AmiBlitz3.ab2@6304>     MOVEA.l A3,A2
00022B06 <AmiBlitz3.ab2@6305>     MOVEA.l (A3),A3
00022B0A <AmiBlitz3.ab2@6306>   DBF D1,JL_0_5A72
00022B10 <AmiBlitz3.ab2@6308>   MOVE.l A2,currentmacroaddr
00022B12 <AmiBlitz3.ab2@6309>   MOVEA.l A2,A3
00022B14 <AmiBlitz3.ab2@6310>   MOVEQ.l #$00,D0
00022B18 <AmiBlitz3.ab2@6311>   MOVE.b $C(A3),D0
00022B1A <AmiBlitz3.ab2@6312>   ADDQ.w #1,D0
00022B1E <AmiBlitz3.ab2@6313>   BCLR #$0,D0
00022B22 <AmiBlitz3.ab2@6314>   MOVE.w $8(A3),D1
00022B24 <AmiBlitz3.ab2@6315>   ADDQ.w #1,D1
00022B28 <AmiBlitz3.ab2@6316>   BCLR #$0,D1
00022B2A <AmiBlitz3.ab2@6317>   ADDA.w D0,A3
00022B2C <AmiBlitz3.ab2@6318>   ADDA.w D1,A3
00022B2E <AmiBlitz3.ab2@6321> RTS
00022B30 <AmiBlitz3.ab2@6325>   MOVE.w (A3)+,D1
00022B34 <AmiBlitz3.ab2@6326>   BEQ.w JL_0_5B38
00022B36 <AmiBlitz3.ab2@6327>   MOVE.w D1,-(A7)
00022B38 <AmiBlitz3.ab2@6328>   SUBQ.w #1,D1
00022B3E <AmiBlitz3.ab2@6329>   MOVEA.l lastrestype,A2
00022B40 <AmiBlitz3.ab2@6330>   MOVE.l A2,-(A7)
00022B42 <AmiBlitz3.ab2@6333>       MOVE.l (A3),D0
00022B46 <AmiBlitz3.ab2@6334>       BEQ.w JL_0_5ABC
00022B48 <AmiBlitz3.ab2@6335>       MOVEA.l D0,A3
00022B4C <AmiBlitz3.ab2@6336> BRA.w JL_0_5AB0
00022B50 <AmiBlitz3.ab2@6339>       MOVE.b $E(A3),D0
00022B52 <AmiBlitz3.ab2@6340>       ADDQ.w #1,D0
00022B56 <AmiBlitz3.ab2@6341>       BCLR #$0,D0
00022B58 <AmiBlitz3.ab2@6342>       ADDA.w D0,A3
00022B5A <AmiBlitz3.ab2@6343>       MOVE.l A3,(A2)
00022B5C <AmiBlitz3.ab2@6344>       MOVEA.l A3,A2
00022B5E <AmiBlitz3.ab2@6345>       MOVEQ.l #$00,D0
00022B62 <AmiBlitz3.ab2@6346>       MOVE.b $A(A3),D0
00022B64 <AmiBlitz3.ab2@6347>       ADDQ.w #1,D0
00022B68 <AmiBlitz3.ab2@6348>       BCLR #$0,D0
00022B6A <AmiBlitz3.ab2@6349>       ADDA.w D0,A3
00022B6E <AmiBlitz3.ab2@6350>   DBF D1,JL_0_5AB0
00022B70 <AmiBlitz3.ab2@6352>   MOVEA.l (A7)+,A0
00022B72 <AmiBlitz3.ab2@6353>   MOVEA.l (A0),A0
00022B76 <AmiBlitz3.ab2@6356>     CMPA.w #$0,A0
00022B7A <AmiBlitz3.ab2@6357>     BEQ.w JL_0_5B2A
00022B7E <AmiBlitz3.ab2@6358>     MOVEA.l $4(A0),A1
00022B82 <AmiBlitz3.ab2@6361>     CMPA.w #$0,A1
00022B86 <AmiBlitz3.ab2@6362>     BEQ.w JL_0_5B24
00022B8A <AmiBlitz3.ab2@6363>     MOVE.w $A(A1),D0
00022B90 <AmiBlitz3.ab2@6364>     MOVEA.l newtypebase,A4
00022B94 <AmiBlitz3.ab2@6365>     CMP.w #$7,D0
00022B98 <AmiBlitz3.ab2@6366>     BCS.w JL_0_5B0E
00022B9E <AmiBlitz3.ab2@6367>     SUB.w rescnt,D0
00022BA0 <AmiBlitz3.ab2@6370>     SUBQ.w #1,D0
00022BA4 <AmiBlitz3.ab2@6371>     BMI.w JL_0_5B1A
00022BA6 <AmiBlitz3.ab2@6374>        MOVEA.l (A4),A4
00022BAA <AmiBlitz3.ab2@6375>   DBF D0,JL_0_5B14
00022BAE <AmiBlitz3.ab2@6378>     MOVE.l A4,$A(A1)
00022BB0 <AmiBlitz3.ab2@6379>     MOVEA.l (A1),A1
00022BB4 <AmiBlitz3.ab2@6380> BRA.w JL_0_5AEE
00022BB6 <AmiBlitz3.ab2@6383>     MOVEA.l (A0),A0
00022BBA <AmiBlitz3.ab2@6384> BRA.w JL_0_5AE2
00022BBC <AmiBlitz3.ab2@6387>   MOVE.w (A7)+,D0
00022BC2 <AmiBlitz3.ab2@6388>   ADD.w D0,rescnt
00022BC8 <AmiBlitz3.ab2@6389>   MOVE.l A2,lastrestype
00022BCA <AmiBlitz3.ab2@6392> RTS
00022BD0 <AmiBlitz3.ab2@6396>   LEA tokens,A0
00022BD4 <AmiBlitz3.ab2@6397>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00022BD6 <AmiBlitz3.ab2@6400>     MOVEA.l (A0),A0
00022BDA <AmiBlitz3.ab2@6401>   DBF D0,JL_0_5BD0
00022BE0 <AmiBlitz3.ab2@6403>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00022BE4 <AmiBlitz3.ab2@6404>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00022BE8 <AmiBlitz3.ab2@6407>       LEA $6(A0),A2
00022BEA <AmiBlitz3.ab2@6410>         TST.b (A2)+
00022BEE <AmiBlitz3.ab2@6411>       BNE.w JL_0_5BE4
00022BF0 <AmiBlitz3.ab2@6414>         TST.b (A2)+
00022BF4 <AmiBlitz3.ab2@6415>       BNE.w JL_0_5BEA
00022BF6 <AmiBlitz3.ab2@6417>       ADDQ.w #1,A2
00022BF8 <AmiBlitz3.ab2@6418>       EXG.l D1,A2
00022BFC <AmiBlitz3.ab2@6419>       BCLR #$0,D1
00022BFE <AmiBlitz3.ab2@6420>       EXG.l D1,A2
00022C00 <AmiBlitz3.ab2@6421>       MOVE.l A2,(A1)+
00022C02 <AmiBlitz3.ab2@6422>       MOVEA.l (A0),A0
00022C06 <AmiBlitz3.ab2@6423>   DBF D0,JL_0_5BE0
00022C08 <AmiBlitz3.ab2@6424> RTS
00022C0C <AmiBlitz3.ab2@6428>   BSR.w asmconst
00022C0E <AmiBlitz3.ab2@6429>   MOVEQ.l #$0B,D5
00022C10 <AmiBlitz3.ab2@6430> RTS
00022C12 <AmiBlitz3.ab2@6433> unmove:  Ds.w 1
00022C16 <AmiBlitz3.ab2@6437>   MOVE.w #$48E7,D1
00022C1A <AmiBlitz3.ab2@6438>   BSR.w writeword                                          ;movem.l -(a7)
00022C1E <AmiBlitz3.ab2@6439>   MOVE.w #$000F,D2
00022C20 <AmiBlitz3.ab2@6440>   SUB.w D4,D2
00022C22 <AmiBlitz3.ab2@6441>   MOVEQ.l #-$01,D1
00022C24 <AmiBlitz3.ab2@6442>   BCLR D2,D1
00022C28 <AmiBlitz3.ab2@6443>   BSR.w writeword
00022C2A <AmiBlitz3.ab2@6444>   MOVEQ.l #-$01,D1
00022C2C <AmiBlitz3.ab2@6445>   BCLR D4,D1
00022C32 <AmiBlitz3.ab2@6446>   MOVE.w D1,unmove
00022C34 <AmiBlitz3.ab2@6447> RTS
00022C38 <AmiBlitz3.ab2@6451>   MOVE.w #$4CDF,D1
00022C3C <AmiBlitz3.ab2@6452>   BSR.w writeword
00022C40 <AmiBlitz3.ab2@6453>   MOVE.w unmove(PC),D1
00022C44 <AmiBlitz3.ab2@6454> BRA.w writeword
00022C48 <AmiBlitz3.ab2@6467>   BSR.w JL_0_5D22
00022C4C <AmiBlitz3.ab2@6468>   CMP.w #$2C,D0                                            ;#','
00022C50 <AmiBlitz3.ab2@6469>    BNE.w syntaxerr
00022C56 <AmiBlitz3.ab2@6470>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00022C5A <AmiBlitz3.ab2@6471>    BSR.w writelong
00022C5C <AmiBlitz3.ab2@6472>   MOVE.w D4,D1
00022C60 <AmiBlitz3.ab2@6473>   ORI.w #$2F00,D1
00022C64 <AmiBlitz3.ab2@6474>    BSR.w writeword
00022C68 <AmiBlitz3.ab2@6475>    BSR.w get1bytemain
00022C6C <AmiBlitz3.ab2@6476>    BSR.w getparameter
00022C70 <AmiBlitz3.ab2@6477>    BSR.w JL_0_8E3C
00022C74 <AmiBlitz3.ab2@6478>    BSR.w calcvar
00022C78 <AmiBlitz3.ab2@6479>    BTST #$E,D2
00022C7C <AmiBlitz3.ab2@6480>    BEQ.w JL_0_5C80
00022C80 <AmiBlitz3.ab2@6483>    MOVE.b #$3,D2
00022C84 <AmiBlitz3.ab2@6484> BRA.w JL_0_5C8E
00022C86 <AmiBlitz3.ab2@6487>   TST.b D2
00022C8A <AmiBlitz3.ab2@6488>    BEQ.w JL_0_5C78
00022C8E <AmiBlitz3.ab2@6489>   CMP.b #$7,D2
00022C92 <AmiBlitz3.ab2@6490>    BEQ.w JL_0_5C78
00022C96 <AmiBlitz3.ab2@6493>   BTST #$F,D2
00022C9A <AmiBlitz3.ab2@6494>    BNE.w JL_0_5CA4
00022C9E <AmiBlitz3.ab2@6495>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00022CA2 <AmiBlitz3.ab2@6496>    BSR.w writeword
00022CA4 <AmiBlitz3.ab2@6497>   MOVE.w D3,D1
00022CA8 <AmiBlitz3.ab2@6498>    BSR.w writeword
00022CAC <AmiBlitz3.ab2@6501>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00022CB0 <AmiBlitz3.ab2@6502>    BSR.w writeword
00022CB4 <AmiBlitz3.ab2@6503>   MOVE.w #$1480,D1
00022CB8 <AmiBlitz3.ab2@6504>   CMP.b #$1,D2
00022CBC <AmiBlitz3.ab2@6505>    BEQ.w JL_0_5CC8
00022CC0 <AmiBlitz3.ab2@6506>   EORI.w #$3000,D1
00022CC4 <AmiBlitz3.ab2@6507>   CMP.b #$2,D2
00022CC8 <AmiBlitz3.ab2@6508>    BNE.w JL_0_5CC8
00022CCC <AmiBlitz3.ab2@6509>   ORI.w #$1000,D1
00022CD0 <AmiBlitz3.ab2@6512>   BSR.w writeword
00022CD6 <AmiBlitz3.ab2@6513>   MOVE.l #$4CDF7FFF,D1
00022CDA <AmiBlitz3.ab2@6514> BRA.w writelong
00022CDE <AmiBlitz3.ab2@6518>   BSR.w JL_0_5D22
00022CE2 <AmiBlitz3.ab2@6519>   CMP.w #$2C,D0
00022CE6 <AmiBlitz3.ab2@6520>    BNE.w syntaxerr
00022CEA <AmiBlitz3.ab2@6521>    BSR.w regmovems
00022CEC <AmiBlitz3.ab2@6522>   MOVE.w D4,-(A7)
00022CEE <AmiBlitz3.ab2@6523>   MOVEQ.l #$03,D2
00022CF2 <AmiBlitz3.ab2@6524>    BSR.w eval
00022CF4 <AmiBlitz3.ab2@6525>   MOVE.w (A7)+,D1
00022CF8 <AmiBlitz3.ab2@6526>    BEQ.w JL_0_5D1A
00022CFC <AmiBlitz3.ab2@6527>   CMP.w #$8,D1
00022D00 <AmiBlitz3.ab2@6528>    BCC.w JL_0_5D0C
00022D02 <AmiBlitz3.ab2@6529>   LSL.w #8,D1
00022D04 <AmiBlitz3.ab2@6530>   LSL.w #1,D1
00022D08 <AmiBlitz3.ab2@6531>   ORI.w #$2000,D1
00022D0C <AmiBlitz3.ab2@6532>    BSR.w writeword
00022D10 <AmiBlitz3.ab2@6533> BRA.w JL_0_5D1A
00022D12 <AmiBlitz3.ab2@6536>   SUBQ.w #8,D1
00022D14 <AmiBlitz3.ab2@6537>   LSL.w #8,D1
00022D16 <AmiBlitz3.ab2@6538>   LSL.w #1,D1
00022D1A <AmiBlitz3.ab2@6539>   ORI.w #$2040,D1
00022D1E <AmiBlitz3.ab2@6540>   BSR.w writeword
00022D22 <AmiBlitz3.ab2@6543> BRA.w dounmove
00022D26 <AmiBlitz3.ab2@6547>   BSR.w get1bytemain
00022D2A <AmiBlitz3.ab2@6550>   ORI.w #$20,D0
00022D2E <AmiBlitz3.ab2@6551>   CMP.w #$64,D0
00022D32 <AmiBlitz3.ab2@6552>    BEQ.w JL_0_5D4E
00022D36 <AmiBlitz3.ab2@6553>   CMP.w #$61,D0
00022D3A <AmiBlitz3.ab2@6554>    BNE.w syntaxerr
00022D3E <AmiBlitz3.ab2@6555>    BSR.w JL_0_5D4E
00022D40 <AmiBlitz3.ab2@6556>   ADDQ.w #8,D4
00022D42 <AmiBlitz3.ab2@6557> RTS
00022D6E <AmiBlitz3.ab2@6561>   !fget                                                   ;bsr.w get1bytemain
00022D72 <AmiBlitz3.ab2@6563>   ORI.w #$20,D0
00022D76 <AmiBlitz3.ab2@6566>   CMP.w #$61,D0
00022D7A <AmiBlitz3.ab2@6567>   BNE.w syntaxerr
00022DA6 <AmiBlitz3.ab2@6570>   !fget                                                    ;bsr.w get1bytemain
00022DAA <AmiBlitz3.ab2@6571>   SUBI.w #$30,D0
00022DAE <AmiBlitz3.ab2@6572>    BMI.w syntaxerr
00022DB2 <AmiBlitz3.ab2@6573>   CMP.w #$7,D0
00022DB6 <AmiBlitz3.ab2@6574>    BHI.w syntaxerr
00022DB8 <AmiBlitz3.ab2@6575>   MOVE.w D0,D4
00022DE4 <AmiBlitz3.ab2@6576>   !fget
00022DE6 <AmiBlitz3.ab2@6577> RTS                                                        ;bra.w get1bytemain
00022DE8 <AmiBlitz3.ab2@6581>   ADDQ.w #8,D4
00022DEA <AmiBlitz3.ab2@6584>   MOVEQ.l #$00,D5
00022DEE <AmiBlitz3.ab2@6585>   SUBI.w #$30,D4
00022DF2 <AmiBlitz3.ab2@6588>   CMP.w #$2D,D0
00022DF6 <AmiBlitz3.ab2@6589>    BEQ.w JL_0_5D9E
00022DFA <AmiBlitz3.ab2@6590>   CMP.w #$2F,D0
00022DFE <AmiBlitz3.ab2@6591>    BEQ.w JL_0_5D8C
00022E02 <AmiBlitz3.ab2@6592> BRA.w syntaxerr
00022E04 <AmiBlitz3.ab2@6595>   BSET D4,D5
00022E06 <AmiBlitz3.ab2@6598>   MOVE.w D5,D4
00022E08 <AmiBlitz3.ab2@6599>   MOVEQ.l #$0F,D5
00022E0A <AmiBlitz3.ab2@6600> RTS
00022E0C <AmiBlitz3.ab2@6603>   BSET D4,D5
00022E10 <AmiBlitz3.ab2@6604>   BSR.w JL_0_5D1E
00022E22 <AmiBlitz3.ab2@6605>   !compare3                                                ;bsr.w JL_0_5FC0
00022E26 <AmiBlitz3.ab2@6606>   BNE.w JL_0_5D70
00022E2A <AmiBlitz3.ab2@6607> BRA.w JL_0_5D84
00022E2C <AmiBlitz3.ab2@6610>   MOVE.w D4,D1
00022E30 <AmiBlitz3.ab2@6611>    BSR.w JL_0_5D1E
00022E32 <AmiBlitz3.ab2@6612>   CMP.w D4,D1
00022E36 <AmiBlitz3.ab2@6613>    BLS.w JL_0_5DAC
00022E38 <AmiBlitz3.ab2@6614>   EXG.l D4,D1
00022E3A <AmiBlitz3.ab2@6617>   BSET D1,D5
00022E3C <AmiBlitz3.ab2@6618>   ADDQ.w #1,D1
00022E3E <AmiBlitz3.ab2@6619>   CMP.w D4,D1
00022E42 <AmiBlitz3.ab2@6620>    BLS.w JL_0_5DAC
00022E54 <AmiBlitz3.ab2@6621>   !compare3                                                ;bsr.w JL_0_5FC0
00022E58 <AmiBlitz3.ab2@6622>   BNE.w JL_0_5D70
00022E5C <AmiBlitz3.ab2@6623> BRA.w JL_0_5D86
00022E5E <AmiBlitz3.ab2@6626>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00022E8A <AmiBlitz3.ab2@6627>    !fget
00022E8E <AmiBlitz3.ab2@6628>   CMP.w #$23,D0
00022E92 <AmiBlitz3.ab2@6629>    BEQ.w getimm
00022E96 <AmiBlitz3.ab2@6630>   CMP.w #$28,D0
00022E9A <AmiBlitz3.ab2@6631>    BEQ.w JL_0_5DFE
00022E9E <AmiBlitz3.ab2@6632>   CMP.w #$2D,D0
00022EA2 <AmiBlitz3.ab2@6633>    BNE.w JL_0_5E20
00022ECE <AmiBlitz3.ab2@6634>    !fget                                                   ;bsr.w get1bytemain       -(
00022ED2 <AmiBlitz3.ab2@6635>   CMP.w #$28,D0
00022ED6 <AmiBlitz3.ab2@6636>    BNE.w JL_0_5F4E
00022EDA <AmiBlitz3.ab2@6637>    BSR.w JL_0_5D3E
00022EDE <AmiBlitz3.ab2@6638>   CMP.w #$29,D0
00022EE2 <AmiBlitz3.ab2@6639>    BNE.w syntaxerr
00022EE4 <AmiBlitz3.ab2@6640>   MOVEQ.l #$04,D5
00022F10 <AmiBlitz3.ab2@6641>   !fget                                                    ;bsr.w get1bytemain
00022F12 <AmiBlitz3.ab2@6642> RTS
00022F16 <AmiBlitz3.ab2@6646>   BSR.w JL_0_5D3E
00022F1A <AmiBlitz3.ab2@6647>   CMP.w #$29,D0
00022F1E <AmiBlitz3.ab2@6648>    BNE.w syntaxerr
00022F4A <AmiBlitz3.ab2@6649>   !fget                                                    ;bsr.w get1bytemain
00022F4E <AmiBlitz3.ab2@6650>   CMP.w #$2B,D0
00022F52 <AmiBlitz3.ab2@6651>    BEQ.w JL_0_5E1A
00022F54 <AmiBlitz3.ab2@6652>   MOVEQ.l #$02,D5
00022F56 <AmiBlitz3.ab2@6653> RTS
00022F58 <AmiBlitz3.ab2@6657>   MOVEQ.l #$03,D5
00022F84 <AmiBlitz3.ab2@6658>   !fget                                                    ;bra.w get1bytemain
00022F86 <AmiBlitz3.ab2@6659> RTS
00022F8A <AmiBlitz3.ab2@6663>   ORI.w #$20,D0
00022F8C <AmiBlitz3.ab2@6664>   MOVE.w D0,D1                                            
00022FB8 <AmiBlitz3.ab2@6665>    !fget                                                   ;bsr.w get1bytemain
00022FBC <AmiBlitz3.ab2@6666>   CMP.w #$64,D1
00022FC0 <AmiBlitz3.ab2@6667>    BNE.w JL_0_5E6C
00022FC4 <AmiBlitz3.ab2@6668>   CMP.w #$30,D0
00022FC8 <AmiBlitz3.ab2@6669>    BCS.w JL_0_5EAE
00022FCC <AmiBlitz3.ab2@6670>   CMP.w #$37,D0
00022FD0 <AmiBlitz3.ab2@6671>    BHI.w JL_0_5EAE
00022FD2 <AmiBlitz3.ab2@6672>   MOVE.w D0,D4
00022FFE <AmiBlitz3.ab2@6673>    !fget                                                   ;bsr.w get1bytemain
00023010 <AmiBlitz3.ab2@6674>    !compare3                                               ;bsr.w JL_0_5FC0
00023014 <AmiBlitz3.ab2@6675>    BEQ.w JL_0_5E64
00023018 <AmiBlitz3.ab2@6676>   CMP.w #$2D,D0
0002301C <AmiBlitz3.ab2@6677>    BEQ.w JL_0_5D6A
00023020 <AmiBlitz3.ab2@6678>   CMP.w #$2F,D0
00023024 <AmiBlitz3.ab2@6679>    BEQ.w JL_0_5D6A
00023028 <AmiBlitz3.ab2@6680> BRA.w JL_0_5EB8
0002302A <AmiBlitz3.ab2@6683>   MOVEQ.l #$00,D5
0002302E <AmiBlitz3.ab2@6684>   SUBI.w #$30,D4
00023030 <AmiBlitz3.ab2@6685> RTS
00023034 <AmiBlitz3.ab2@6688>    CMP.w #$61,D1
00023038 <AmiBlitz3.ab2@6689>    BNE.w JL_0_5EAE
0002303C <AmiBlitz3.ab2@6690>   CMP.w #$30,D0
00023040 <AmiBlitz3.ab2@6691>    BCS.w JL_0_5EAE
00023044 <AmiBlitz3.ab2@6692>   CMP.w #$37,D0
00023048 <AmiBlitz3.ab2@6693>    BHI.w JL_0_5EAE
0002304A <AmiBlitz3.ab2@6694>   MOVE.w D0,D4
00023076 <AmiBlitz3.ab2@6695>    !fget                                                   ;bsr.w get1bytemain
00023088 <AmiBlitz3.ab2@6696>    !compare3                                               ;bsr.w JL_0_5FC0
0002308C <AmiBlitz3.ab2@6697>    BEQ.w JL_0_5EA6
00023090 <AmiBlitz3.ab2@6698>   CMP.w #$2D,D0
00023094 <AmiBlitz3.ab2@6699>    BEQ.w JL_0_5D68                                         ;movem
00023098 <AmiBlitz3.ab2@6700>   CMP.w #$2F,D0
0002309C <AmiBlitz3.ab2@6701>    BEQ.w JL_0_5D68
000230A0 <AmiBlitz3.ab2@6702> BRA.w JL_0_5EB8
000230A2 <AmiBlitz3.ab2@6705>   MOVEQ.l #1,d5
000230A6 <AmiBlitz3.ab2@6706>   SUBI.w #$30,D4
000230AA <AmiBlitz3.ab2@6708> BRA 'l10
000230AC <AmiBlitz3.ab2@6709>   ADDQ.w #8,d4
000230AE <AmiBlitz3.ab2@6710>   MOVEQ #0,d5
000230B0 <AmiBlitz3.ab2@6711>   BSET d4,d5
000230B2 <AmiBlitz3.ab2@6712>   MOVE.w d5,d4
000230B4 <AmiBlitz3.ab2@6713>   MOVEQ.l #$0f,D5                                          ;01
000230B6 <AmiBlitz3.ab2@6716> RTS
000230BA <AmiBlitz3.ab2@6720>   ORI.w #$20,D0
000230BC <AmiBlitz3.ab2@6721>   MOVE.w D0,D4
000230E8 <AmiBlitz3.ab2@6722>    !fget                                                   ;bsr.w get1bytemain
000230FA <AmiBlitz3.ab2@6725>   !compare3                                                ;bsr.w JL_0_5FC0
000230FE <AmiBlitz3.ab2@6726>    BNE.w JL_0_5EF2
00023102 <AmiBlitz3.ab2@6727>   CMP.w #$73,D1
00023106 <AmiBlitz3.ab2@6728>    BNE.w JL_0_5EF2
0002310A <AmiBlitz3.ab2@6729>   CMP.w #$70,D4
0002310E <AmiBlitz3.ab2@6730>    BNE.w JL_0_5EDE
00023120 <AmiBlitz3.ab2@6731>    !compare3                                               ;bsr.w JL_0_5FC0
00023124 <AmiBlitz3.ab2@6732>    BNE.w JL_0_5F4E
00023126 <AmiBlitz3.ab2@6733>   MOVEQ.l #$07,D4
00023128 <AmiBlitz3.ab2@6734>   MOVEQ.l #$01,D5
0002312A <AmiBlitz3.ab2@6735> RTS
0002312E <AmiBlitz3.ab2@6739>   CMP.w #$72,D4
00023132 <AmiBlitz3.ab2@6740>    BNE.w JL_0_5F4E
00023144 <AmiBlitz3.ab2@6741>    !compare3                                               ;bsr.w JL_0_5FC0
00023148 <AmiBlitz3.ab2@6742>    BNE.w JL_0_5F4E
0002314A <AmiBlitz3.ab2@6743>   MOVEQ.l #$0D,D5
0002314C <AmiBlitz3.ab2@6744> RTS
00023150 <AmiBlitz3.ab2@6748>   ORI.w #$20,D0
00023154 <AmiBlitz3.ab2@6749>   CMP.w #$63,D1
00023158 <AmiBlitz3.ab2@6750>    BNE.w JL_0_5F22
0002315C <AmiBlitz3.ab2@6751>   CMP.w #$63,D4
00023160 <AmiBlitz3.ab2@6752>    BNE.w JL_0_5F4E
00023164 <AmiBlitz3.ab2@6753>   CMP.w #$72,D0
00023168 <AmiBlitz3.ab2@6754>    BNE.w JL_0_5F4E
0002316C <AmiBlitz3.ab2@6755>    BSR.w get1bytemain                                      ;??wy not !fget
00023170 <AmiBlitz3.ab2@6756>    BEQ.w JL_0_5F1E
00023174 <AmiBlitz3.ab2@6757>   CMP.w #$2C,D0
00023178 <AmiBlitz3.ab2@6758>    BNE.w JL_0_5F4E
0002317A <AmiBlitz3.ab2@6761>   MOVEQ.l #$0C,D5
0002317C <AmiBlitz3.ab2@6762> RTS
00023180 <AmiBlitz3.ab2@6766>   CMP.w #$75,D1
00023184 <AmiBlitz3.ab2@6767>    BNE.w JL_0_5F4E
00023188 <AmiBlitz3.ab2@6768>   CMP.w #$73,D4
0002318C <AmiBlitz3.ab2@6769>    BNE.w JL_0_5F4E
00023190 <AmiBlitz3.ab2@6770>   CMP.w #$70,D0
00023194 <AmiBlitz3.ab2@6771>    BNE.w JL_0_5F4E
00023198 <AmiBlitz3.ab2@6772>    BSR.w get1bytemain                                      ;??wy not !fget
0002319C <AmiBlitz3.ab2@6773>    BEQ.w JL_0_5F4A
000231A0 <AmiBlitz3.ab2@6774>   CMP.w #$2C,D0
000231A4 <AmiBlitz3.ab2@6775>    BNE.w JL_0_5F4E
000231A6 <AmiBlitz3.ab2@6778>   MOVEQ.l #$0E,D5
000231A8 <AmiBlitz3.ab2@6779> RTS
000231AA <AmiBlitz3.ab2@6783>   MOVEA.l A4,A5
000231AE <AmiBlitz3.ab2@6784>    BSR.w asmconst
000231C0 <AmiBlitz3.ab2@6785>    !compare3                                               ;bsr.w JL_0_5FC0
000231C4 <AmiBlitz3.ab2@6786>    BEQ.w JL_0_5FB8
000231C8 <AmiBlitz3.ab2@6787>   CMP.w #$2E,D0
000231CC <AmiBlitz3.ab2@6788>    BEQ.w JL_0_5FA0
000231D0 <AmiBlitz3.ab2@6789>   CMP.w #$28,D0
000231D4 <AmiBlitz3.ab2@6790>    BNE.w syntaxerr
000231D8 <AmiBlitz3.ab2@6791>    BSR.w get1bytemain                                      ;??wy not !fget
000231DC <AmiBlitz3.ab2@6792>   ORI.w #$20,D0
000231E0 <AmiBlitz3.ab2@6793>   CMP.w #$70,D0
000231E4 <AmiBlitz3.ab2@6794>    BNE.w JL_0_5F98
000231E8 <AmiBlitz3.ab2@6795>    BSR.w get1bytemain                                      ;??wy not !fget
000231EC <AmiBlitz3.ab2@6796>   ORI.w #$20,D0
000231F0 <AmiBlitz3.ab2@6797>   CMP.w #$63,D0
000231F4 <AmiBlitz3.ab2@6798>    BNE.w syntaxerr
000231F8 <AmiBlitz3.ab2@6799>    BSR.w get1bytemain                                      ;??wy not !fget
000231FC <AmiBlitz3.ab2@6800>    BSR.w JL_0_5FD4
000231FE <AmiBlitz3.ab2@6801>   ADDQ.w #4,D5
00023200 <AmiBlitz3.ab2@6802> RTS
00023204 <AmiBlitz3.ab2@6806>   BSR.w JL_0_5D46
00023208 <AmiBlitz3.ab2@6807> BRA.w JL_0_5FD4
0002320C <AmiBlitz3.ab2@6811>    BSR.w get1bytemain                                     ;??wy not !fget
00023210 <AmiBlitz3.ab2@6812>   ORI.w #$20,D0
00023214 <AmiBlitz3.ab2@6813>   CMP.w #$77,D0
00023218 <AmiBlitz3.ab2@6814>    BEQ.w JL_0_5FBC
0002321C <AmiBlitz3.ab2@6815>   CMP.w #$6C,D0
00023220 <AmiBlitz3.ab2@6816>    BNE.w syntaxerr
00023222 <AmiBlitz3.ab2@6819>   MOVEQ.l #$08,D5
00023224 <AmiBlitz3.ab2@6820> RTS
00023226 <AmiBlitz3.ab2@6824>   MOVEQ.l #$07,D5
00023228 <AmiBlitz3.ab2@6825> RTS
0002322A <AmiBlitz3.ab2@6829>   TST.w D0
0002322E <AmiBlitz3.ab2@6830>    BEQ.w JL_0_5FD2
00023232 <AmiBlitz3.ab2@6831>   CMP.w #$3A,D0
00023236 <AmiBlitz3.ab2@6832>    BEQ.w JL_0_5FD2
0002323A <AmiBlitz3.ab2@6833>   CMP.w #$2C,D0
0002323C <AmiBlitz3.ab2@6836> RTS
00023240 <AmiBlitz3.ab2@6840>   CMP.w #$2C,D0
00023244 <AmiBlitz3.ab2@6841>    BNE.w JL_0_6054
00023248 <AmiBlitz3.ab2@6842>    BSR.w get1bytemain                                      ;??wy not !fget
0002324C <AmiBlitz3.ab2@6843>   ORI.w #$20,D0
0002324E <AmiBlitz3.ab2@6844>   MOVEQ.l #$00,D1
00023252 <AmiBlitz3.ab2@6845>   CMP.w #$64,D0
00023256 <AmiBlitz3.ab2@6846>    BEQ.w JL_0_5FFA
0002325A <AmiBlitz3.ab2@6847>   CMP.w #$61,D0
0002325E <AmiBlitz3.ab2@6848>    BNE.w syntaxerr
00023262 <AmiBlitz3.ab2@6849>   BSET #$F,D1
00023266 <AmiBlitz3.ab2@6852>    BSR.w get1bytemain                                      ;??wy not !fget
0002326A <AmiBlitz3.ab2@6853>   SUBI.w #$30,D0
0002326E <AmiBlitz3.ab2@6854>    BMI.w syntaxerr
00023272 <AmiBlitz3.ab2@6855>   CMP.w #$7,D0
00023276 <AmiBlitz3.ab2@6856>    BHI.w syntaxerr
00023278 <AmiBlitz3.ab2@6857>   LSL.w #8,D0
0002327A <AmiBlitz3.ab2@6858>   LSL.w #4,D0
0002327C <AmiBlitz3.ab2@6859>   OR.w D0,D1
00023280 <AmiBlitz3.ab2@6860>    BSR.w get1bytemain                                      ;??wy not !fget
00023284 <AmiBlitz3.ab2@6861>   CMP.w #$2E,D0
00023288 <AmiBlitz3.ab2@6862>    BNE.w JL_0_6040
0002328C <AmiBlitz3.ab2@6863>    BSR.w get1bytemain                                      ;??wy not !fget
00023290 <AmiBlitz3.ab2@6864>   ORI.w #$20,D0
00023294 <AmiBlitz3.ab2@6865>   CMP.w #$77,D0
00023298 <AmiBlitz3.ab2@6866>    BEQ.w JL_0_603C
0002329C <AmiBlitz3.ab2@6867>   CMP.w #$6C,D0
000232A0 <AmiBlitz3.ab2@6868>    BNE.w syntaxerr
000232A4 <AmiBlitz3.ab2@6869>   BSET #$B,D1
000232A8 <AmiBlitz3.ab2@6872>    BSR.w get1bytemain                                      ;??wy not !fget
000232AC <AmiBlitz3.ab2@6875>    CMP.b #"*",d0                                           ;020 * Mode
000232B0 <AmiBlitz3.ab2@6876>             BNE 'l1
000232B4 <AmiBlitz3.ab2@6877>             BSR.w get1bytemain                             ;??wy not !fget
000232B8 <AmiBlitz3.ab2@6878>             CMP.b #"2",d0
000232BC <AmiBlitz3.ab2@6879>             BNE 'l2
000232C0 <AmiBlitz3.ab2@6880>             OR.w #$200,d1
000232C4 <AmiBlitz3.ab2@6881> BRA 'l1b
000232C8 <AmiBlitz3.ab2@6884>             CMP.b #"4",d0
000232CC <AmiBlitz3.ab2@6885>             BNE 'l3
000232D0 <AmiBlitz3.ab2@6886>             OR.w #$400,d1
000232D4 <AmiBlitz3.ab2@6887> BRA 'l1b
000232D8 <AmiBlitz3.ab2@6890>             CMP.b #"8",d0
000232DC <AmiBlitz3.ab2@6891>             BNE syntaxerr
000232E0 <AmiBlitz3.ab2@6892>             OR.w #$600,d1
000232E4 <AmiBlitz3.ab2@6895>         BSR.w get1bytemain                                 ;??wy not !fget
000232E8 <AmiBlitz3.ab2@6898>   CMP.w #$29,D0
000232EC <AmiBlitz3.ab2@6899>    BNE.w syntaxerr
000232F2 <AmiBlitz3.ab2@6900>   MOVE.w D1,extraword
000232F4 <AmiBlitz3.ab2@6901>   MOVEQ.l #$06,D5
000232F8 <AmiBlitz3.ab2@6902> BRA.w get1bytemain                                         ;??wy not !fget
000232FC <AmiBlitz3.ab2@6906>   CMP.w #")",D0                                            ;")"
00023300 <AmiBlitz3.ab2@6907>    BNE.w errorbracketmiss                                  ; was syntax error
00023302 <AmiBlitz3.ab2@6908>   MOVEQ.l #$05,D5
00023306 <AmiBlitz3.ab2@6909> BRA.w get1bytemain                                         ;??wy not !fget
0002330C <AmiBlitz3.ab2@6916>   MOVEA.l asmbuff,A0
00023312 <AmiBlitz3.ab2@6917>   MOVE.w ininclude,D1
00023318 <AmiBlitz3.ab2@6918>   OR.w inmacro,D1
0002331A <AmiBlitz3.ab2@6919>   MOVE.w D1,(A0)+                                          ;flag!
0002331E <AmiBlitz3.ab2@6920>    BNE.w copyconst
00023320 <AmiBlitz3.ab2@6921>   MOVE.l A5,-(A7)
00023324 <AmiBlitz3.ab2@6922>    BSR.w copyconst
0002332A <AmiBlitz3.ab2@6923>   MOVEA.l asmbuff,A0
0002332E <AmiBlitz3.ab2@6924>   CMP.w #$4,D1
00023332 <AmiBlitz3.ab2@6925>    BLS.w asmconst__leave
00023338 <AmiBlitz3.ab2@6926>   TST.w lc
0002333C <AmiBlitz3.ab2@6927>    BNE.w asmconst__leave
0002333E <AmiBlitz3.ab2@6928>   ADDQ.w #2,A0
00023340 <AmiBlitz3.ab2@6929>   MOVE.l (A7)+,(A0)+
00023342 <AmiBlitz3.ab2@6930>   CLR.b (A0)
0002334A <AmiBlitz3.ab2@6931>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
0002334C <AmiBlitz3.ab2@6932> RTS
0002334E <AmiBlitz3.ab2@6936>   NOT.w (A0)
00023350 <AmiBlitz3.ab2@6937>   ADDQ.w #4,A7
00023352 <AmiBlitz3.ab2@6938> RTS
00023354 <AmiBlitz3.ab2@6941> lc:  Ds.w 1
0002335A <AmiBlitz3.ab2@6945>   CLR.w lc
0002335C <AmiBlitz3.ab2@6946>   MOVEQ.l #$00,D1
0002335E <AmiBlitz3.ab2@6949>    ADDQ.w #1,D1                                            ;label name
0002338A <AmiBlitz3.ab2@6950>    !fget                                                   ;bsr.w get1bytemain
0002338E <AmiBlitz3.ab2@6951>    BEQ.w copyconst__done
00023392 <AmiBlitz3.ab2@6952>    CMP.w #$22,d0
00023396 <AmiBlitz3.ab2@6953>    BNE.s copyconst__loop_l10
0002339C <AmiBlitz3.ab2@6954>    NOT.w instringon
000233A0 <AmiBlitz3.ab2@6957>    CMP.w #":",d0
000233A4 <AmiBlitz3.ab2@6958>    BNE.s copyconst__loop_l11
000233AA <AmiBlitz3.ab2@6959>    TST.w instringon
000233AE <AmiBlitz3.ab2@6960>    BEQ copyconst__done
000233B0 <AmiBlitz3.ab2@6963>   TST.w D0
000233B4 <AmiBlitz3.ab2@6964>   BPL.w copyconst__notmi
000233B6 <AmiBlitz3.ab2@6965>   MOVE.w D0,-(A7)
000233B8 <AmiBlitz3.ab2@6966>   LSR.w #8,D0
000233BA <AmiBlitz3.ab2@6967>   MOVE.b D0,(A0)+
000233BC <AmiBlitz3.ab2@6968>   MOVE.w (A7)+,D0
000233BE <AmiBlitz3.ab2@6969>   MOVE.b D0,(A0)+
000233C0 <AmiBlitz3.ab2@6970>   ADDQ.w #1,D1
000233C4 <AmiBlitz3.ab2@6971> BRA.s copyconst__loop
000233CA <AmiBlitz3.ab2@6974>    TST.w instringon
000233CE <AmiBlitz3.ab2@6975>    BNE.w copyconst__putbyte
000233D4 <AmiBlitz3.ab2@6976>    TST.b _dcb
000233D8 <AmiBlitz3.ab2@6977>    BNE copyconst__notmi_l10
000233DC <AmiBlitz3.ab2@6978>    CMP.w #$28,D0
000233E0 <AmiBlitz3.ab2@6979>    BEQ.w copyconst__done
000233E4 <AmiBlitz3.ab2@6982>    CMP.w #$2C,D0
000233E8 <AmiBlitz3.ab2@6983>    BEQ.w copyconst__done
000233EC <AmiBlitz3.ab2@6984>    CMP.b #"'",D0
000233F0 <AmiBlitz3.ab2@6985>    BNE.w copyconst__putbyte
000233F6 <AmiBlitz3.ab2@6986>    MOVE.w D0,lc                                     ;locallabels
000233F8 <AmiBlitz3.ab2@6987>    MOVE.l A1,-(A7)
000233FE <AmiBlitz3.ab2@6988>    LEA lastgloballabel,A1
00023400 <AmiBlitz3.ab2@6989>    TST.b (A1)
00023404 <AmiBlitz3.ab2@6990>    BEQ.w nolocerr
00023406 <AmiBlitz3.ab2@6993>   ADDQ.w #1,D1
00023408 <AmiBlitz3.ab2@6994>   MOVE.b (A1)+,(A0)+
0002340C <AmiBlitz3.ab2@6995>    BNE.w copyconst__cloop
0002340E <AmiBlitz3.ab2@6996>   SUBQ.w #1,D1
00023410 <AmiBlitz3.ab2@6997>   SUBQ.w #1,A0
00023412 <AmiBlitz3.ab2@6998>   MOVEA.l (A7)+,A1
00023414 <AmiBlitz3.ab2@7001>   MOVE.b D0,(A0)+
00023418 <AmiBlitz3.ab2@7002> BRA.w copyconst__loop
0002341A <AmiBlitz3.ab2@7005>   CLR.b (A0)
00023420 <AmiBlitz3.ab2@7006>   MOVE.w D1,asmlen2
00023422 <AmiBlitz3.ab2@7007> RTS
00023428 <AmiBlitz3.ab2@7012>   CMP.l #$80ad,d0
0002342C <AmiBlitz3.ab2@7013>   BNE.s 'l12
00023432 <AmiBlitz3.ab2@7014> JMP bssseg
00023438 <AmiBlitz3.ab2@7017>   CMP.l #$807f,d0
0002343C <AmiBlitz3.ab2@7018>     BNE.s 'l13
00023442 <AmiBlitz3.ab2@7019> JMP chipseg
00023448 <AmiBlitz3.ab2@7022>   ADDQ.l #1,destpointer                                    ;even
00023450 <AmiBlitz3.ab2@7023>   BCLR #$0,destpointer+3
00023454 <AmiBlitz3.ab2@7024>   SUBI.w #$803C,D0
00023456 <AmiBlitz3.ab2@7025>   LSL.w #2,D0
0002345C <AmiBlitz3.ab2@7026>   MOVEA.l #asmpnts,A0
00023460 <AmiBlitz3.ab2@7027>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00023466 <AmiBlitz3.ab2@7028>   MOVE.w D0,temp1
00023468 <AmiBlitz3.ab2@7029>   MOVE.l A0,-(A7)
0002346A <AmiBlitz3.ab2@7030>   MOVEQ.l #$01,D1
00023496 <AmiBlitz3.ab2@7031>    !fget                                                   ;bsr.w get1bytemain
0002349A <AmiBlitz3.ab2@7032>   CMP.w #$2E,D0
0002349E <AmiBlitz3.ab2@7033>    BNE.w JL_0_6184
000234CA <AmiBlitz3.ab2@7034>   !fget                                                    ;bsr.w get1bytemain
000234CE <AmiBlitz3.ab2@7035>   ORI.w #$20,D0
000234D2 <AmiBlitz3.ab2@7036>   CMP.w #$77,D0                                            ;long
000234D6 <AmiBlitz3.ab2@7037>    BEQ.w JL_0_618A
000234DA <AmiBlitz3.ab2@7038>   CMP.w #$62,D0                                            ;byte
000234DE <AmiBlitz3.ab2@7039>    BEQ.w JL_0_617A
000234E2 <AmiBlitz3.ab2@7040>   CMP.w #$6C,D0                                            ;word
000234E6 <AmiBlitz3.ab2@7041>    BEQ.w JL_0_6196
000234EA <AmiBlitz3.ab2@7042>   CMP.w #"s",d0
000234EE <AmiBlitz3.ab2@7043>   BNE syntaxerr
000234F2 <AmiBlitz3.ab2@7044> BRA.w JL_0_617A
000234F4 <AmiBlitz3.ab2@7047>   MOVEQ.l #$00,D1
000234F8 <AmiBlitz3.ab2@7048>   MOVE.w $8(A0),D0
000234FC <AmiBlitz3.ab2@7049> BRA.w JL_0_619E
000234FE <AmiBlitz3.ab2@7052>   MOVEQ.l #$04,D1
00023502 <AmiBlitz3.ab2@7053> BRA.w JL_0_61AE
00023504 <AmiBlitz3.ab2@7056>   MOVEQ.l #$04,D1
00023508 <AmiBlitz3.ab2@7057>   MOVE.w $8(A0),D0
0002350A <AmiBlitz3.ab2@7058>   LSR.w #4,D0
0002350E <AmiBlitz3.ab2@7059> BRA.w JL_0_619E
00023510 <AmiBlitz3.ab2@7062>   MOVEQ.l #$08,D1
00023514 <AmiBlitz3.ab2@7063>   MOVE.w $8(A0),D0
00023516 <AmiBlitz3.ab2@7064>   LSR.w #8,D0
0002351A <AmiBlitz3.ab2@7067>    ANDI.w #$F,D0
0002351E <AmiBlitz3.ab2@7068>   CMP.w #$F,D0
00023522 <AmiBlitz3.ab2@7069>    BNE.w 'cl60
0002352A <AmiBlitz3.ab2@7072>    CMP.l #"MULS",-6(a0)
0002352E <AmiBlitz3.ab2@7073>    BNE 'c20
00023534 <AmiBlitz3.ab2@7074>    MOVE.l #$4c000800,d1
0002353A <AmiBlitz3.ab2@7075> JMP do32
00023542 <AmiBlitz3.ab2@7078>    CMP.l #"MULU",-6(a0)
00023546 <AmiBlitz3.ab2@7079>    BNE 'c30
0002354C <AmiBlitz3.ab2@7080>    MOVE.l #$4c000000,d1
00023552 <AmiBlitz3.ab2@7081> JMP do32
0002355A <AmiBlitz3.ab2@7084>    CMP.l #"DIVS",-6(a0)
0002355E <AmiBlitz3.ab2@7085>    BNE 'c40
00023564 <AmiBlitz3.ab2@7086>    MOVE.l #$4c400800,d1
0002356A <AmiBlitz3.ab2@7087> JMP do32
00023572 <AmiBlitz3.ab2@7090>    CMP.l #"DIVU",-6(a0)
00023576 <AmiBlitz3.ab2@7091>    BNE 'c50
0002357C <AmiBlitz3.ab2@7092>    MOVE.l #$4c400000,d1
00023582 <AmiBlitz3.ab2@7093> JMP do32
00023586 <AmiBlitz3.ab2@7096> BRA illsizeerr
000235B2 <AmiBlitz3.ab2@7099>   !fget                                                    ;bsr.w get1bytemain
000235B8 <AmiBlitz3.ab2@7102>   MOVE.w D1,asmsize
000235BA <AmiBlitz3.ab2@7103>   MOVEQ.l #-$01,D3
000235BE <AmiBlitz3.ab2@7104>    BSR.w reget
000235C2 <AmiBlitz3.ab2@7105>    BEQ.w JL_0_6200
000235CC <AmiBlitz3.ab2@7106>   MOVE.l #ptr_parameterstore,asmbuff
000235D6 <AmiBlitz3.ab2@7108>    MOVE.w oldqflag,instringon
000235DC <AmiBlitz3.ab2@7109>   MOVEA.l lastsourcepos,A5
000235E0 <AmiBlitz3.ab2@7110>    BSR.w JL_0_5DC2
000235E2 <AmiBlitz3.ab2@7111>   MOVE.l D4,D2                                             ;to src
000235E4 <AmiBlitz3.ab2@7112>   MOVE.l D5,D3
000235EE <AmiBlitz3.ab2@7113>   MOVE.w asmlen2,asmlen
000235F0 <AmiBlitz3.ab2@7114>   MOVEQ.l #-$01,D5
000235FA <AmiBlitz3.ab2@7115>   MOVE.w extraword,extraword2
000235FE <AmiBlitz3.ab2@7116>   CMP.w #$2C,D0                                            ;','
00023602 <AmiBlitz3.ab2@7117>    BNE.w JL_0_6200
0002360C <AmiBlitz3.ab2@7118>   MOVE.l #namebuff2,asmbuff
00023610 <AmiBlitz3.ab2@7119>    BSR.w JL_0_5DC2                                         ;dest
00023612 <AmiBlitz3.ab2@7122>   MOVEA.l (A7)+,A0
00023618 <AmiBlitz3.ab2@7123>   MOVEA.l destpointer,A1
0002361A <AmiBlitz3.ab2@7124>   MOVEA.l A1,A4
0002361C <AmiBlitz3.ab2@7125>   ADDQ.w #2,A1
0002361E <AmiBlitz3.ab2@7126>   MOVE.w (A0),D1
00023620 <AmiBlitz3.ab2@7127>   TST.w D3
00023624 <AmiBlitz3.ab2@7128>    BMI.w JL_0_639E
00023628 <AmiBlitz3.ab2@7129>   MOVE.w $E(A0),D0
0002362C <AmiBlitz3.ab2@7130>    BPL.w JL_0_6264
00023630 <AmiBlitz3.ab2@7131>   BTST #$0,D0
00023634 <AmiBlitz3.ab2@7132>    BEQ.w JL_0_6240
00023638 <AmiBlitz3.ab2@7133>   CMP.w #$1,D5
0002363C <AmiBlitz3.ab2@7134>    BNE.w JL_0_6240
00023640 <AmiBlitz3.ab2@7135>   CMP.w #$E,D3
00023644 <AmiBlitz3.ab2@7136>    BEQ.w JL_0_6264
0002364A <AmiBlitz3.ab2@7137>   MOVE.w temp1,D0
0002364C <AmiBlitz3.ab2@7138>   ADDQ.w #4,D0
00023650 <AmiBlitz3.ab2@7139> BRA.w JL_0_6256
00023654 <AmiBlitz3.ab2@7142>   BTST #$1,D0
00023658 <AmiBlitz3.ab2@7143>    BEQ.w JL_0_6264
0002365C <AmiBlitz3.ab2@7144>   CMP.w #$B,D3
00023660 <AmiBlitz3.ab2@7145>    BNE.w JL_0_6264
00023666 <AmiBlitz3.ab2@7146>   MOVE.w temp1,D0
00023668 <AmiBlitz3.ab2@7149>   ADDQ.w #4,D0
0002366E <AmiBlitz3.ab2@7150>   MOVEA.l #asmpnts,A0
00023672 <AmiBlitz3.ab2@7151>   MOVEA.l $0(A0,D0.W),A0
00023674 <AmiBlitz3.ab2@7152>   MOVE.w (A0),D1
0002367E <AmiBlitz3.ab2@7155>   MOVE.l #ptr_parameterstore,buff1
00023688 <AmiBlitz3.ab2@7156>   MOVE.l #namebuff2,buff2
0002368C <AmiBlitz3.ab2@7157>   MOVE.l $A(A0),D0
00023690 <AmiBlitz3.ab2@7158>    BEQ.w JL_0_62DC
00023692 <AmiBlitz3.ab2@7159>   MOVEA.l D0,A3
00023698 <AmiBlitz3.ab2@7160>   MOVE.w asmsize,D6
0002369A <AmiBlitz3.ab2@7163>    JSR (A3)
0002369E <AmiBlitz3.ab2@7164>    BPL.w JL_0_629A
000236A2 <AmiBlitz3.ab2@7165>   CMP.w #-$2,D0
000236A6 <AmiBlitz3.ab2@7166>    BEQ.w illsizeerr
000236AA <AmiBlitz3.ab2@7167> BRA.w illeaerr
000236AE <AmiBlitz3.ab2@7170>   BEQ.w JL_0_62DC
000236B0 <AmiBlitz3.ab2@7171>   EXG.l D2,D4
000236B2 <AmiBlitz3.ab2@7172>   EXG.l D3,D5
000236B8 <AmiBlitz3.ab2@7173>   MOVE.l extraword,D6
000236BA <AmiBlitz3.ab2@7174>   SWAP D6
000236C0 <AmiBlitz3.ab2@7175>   MOVE.l D6,extraword
000236CA <AmiBlitz3.ab2@7176>   MOVE.l #namebuff2,buff1
000236D4 <AmiBlitz3.ab2@7177>   MOVE.l #ptr_parameterstore,buff2
000236DA <AmiBlitz3.ab2@7178>   MOVE.w asmlen,D6
000236E0 <AmiBlitz3.ab2@7179>   MOVE.w asmlen2,D7
000236E6 <AmiBlitz3.ab2@7180>   MOVE.w D6,asmlen2
000236EC <AmiBlitz3.ab2@7181>   MOVE.w D7,asmlen
000236F6 <AmiBlitz3.ab2@7184>   MOVE.l buff1,asmbuff
000236FA <AmiBlitz3.ab2@7185>   MOVE.w $E(A0),D0
000236FE <AmiBlitz3.ab2@7186>    BEQ.w JL_0_6348
00023702 <AmiBlitz3.ab2@7187>    BMI.w JL_0_6348
00023706 <AmiBlitz3.ab2@7188>    CMP.w #$7000,d1
0002370A <AmiBlitz3.ab2@7189>    BNE 'skip
0002370E <AmiBlitz3.ab2@7190>    CMP.w #$b,d3
00023712 <AmiBlitz3.ab2@7191>    BNE illeaerr
00023716 <AmiBlitz3.ab2@7194>    CMP.w #$1,D0
0002371A <AmiBlitz3.ab2@7195>    BNE.w JL_0_630E
0002371E <AmiBlitz3.ab2@7196>    CMP.w #$B,D3
00023722 <AmiBlitz3.ab2@7197>    BNE.w JL_0_6348
00023726 <AmiBlitz3.ab2@7200>    BSR.w insasm
00023728 <AmiBlitz3.ab2@7201>   MOVE.w D4,D2
0002372A <AmiBlitz3.ab2@7202>   MOVE.w D5,D3
0002372E <AmiBlitz3.ab2@7203> BRA.w JL_0_6364
00023732 <AmiBlitz3.ab2@7206>    CMP.w #$2,D0
00023736 <AmiBlitz3.ab2@7207>    BNE.w JL_0_6324
0002373A <AmiBlitz3.ab2@7208>   CMP.w #$8,D3
0002373E <AmiBlitz3.ab2@7209>    BNE.w illeaerr
00023740 <AmiBlitz3.ab2@7210>   MOVEQ.l #$09,D3
00023744 <AmiBlitz3.ab2@7211> BRA.w JL_0_6348
00023748 <AmiBlitz3.ab2@7214>    CMP.w #$3,D0
0002374C <AmiBlitz3.ab2@7215>    BEQ.w JL_0_6302
00023750 <AmiBlitz3.ab2@7216>   CMP.w #$4,D0
00023754 <AmiBlitz3.ab2@7217>    BEQ.w JL_0_6302
00023758 <AmiBlitz3.ab2@7218>   CMP.w #$5,D0
0002375C <AmiBlitz3.ab2@7219>    BNE.w JL_0_6348
00023760 <AmiBlitz3.ab2@7220>   CMP.w #$8,D5
00023764 <AmiBlitz3.ab2@7221>    BNE.w illeaerr
00023766 <AmiBlitz3.ab2@7222>   OR.w D2,D1
00023768 <AmiBlitz3.ab2@7223>   MOVEQ.l #$09,D5
0002376C <AmiBlitz3.ab2@7226>   MOVE.w $2(A0),D6
00023770 <AmiBlitz3.ab2@7227>   MOVE.b $6(A0),D7
00023774 <AmiBlitz3.ab2@7228>   MOVEM.l D4-D5,-(A7)
0002377A <AmiBlitz3.ab2@7229>   MOVE.w extraword2,D4
0002377E <AmiBlitz3.ab2@7230>    BSR.w doea
00023782 <AmiBlitz3.ab2@7231>   MOVEM.l (A7)+,D2-D3
00023784 <AmiBlitz3.ab2@7232>   TST.w D3
00023788 <AmiBlitz3.ab2@7235>     BMI.w JL_0_6392
0002378E <AmiBlitz3.ab2@7236>   MOVE.w extraword,D4
00023792 <AmiBlitz3.ab2@7237>   MOVE.w $4(A0),D6
00023796 <AmiBlitz3.ab2@7238>   MOVE.b $7(A0),D7
000237A0 <AmiBlitz3.ab2@7239>   MOVE.l buff2,asmbuff
000237AA <AmiBlitz3.ab2@7240>   MOVE.w asmlen2,asmlen
000237AE <AmiBlitz3.ab2@7241>    BSR.w doea
000237B2 <AmiBlitz3.ab2@7242> BRA.w JL_0_63AA
000237B6 <AmiBlitz3.ab2@7245>   MOVE.w $4(A0),D0
000237BA <AmiBlitz3.ab2@7246>    BNE.w illeaerr
000237BE <AmiBlitz3.ab2@7247> BRA.w JL_0_63AA
000237C2 <AmiBlitz3.ab2@7251>   MOVE.w $2(A0),D0
000237C6 <AmiBlitz3.ab2@7252>   OR.w $4(A0),D0
000237CA <AmiBlitz3.ab2@7253>    BNE.w illeaerr
000237CE <AmiBlitz3.ab2@7256>   MOVE.w $8(A0),D0
000237D2 <AmiBlitz3.ab2@7257>   ANDI.w #$F000,D0
000237D6 <AmiBlitz3.ab2@7258>   CMP.w #-$1000,D0
000237DA <AmiBlitz3.ab2@7259>    BEQ.w JL_0_63D2
000237DC <AmiBlitz3.ab2@7260>   LSR.w #8,D0
000237DE <AmiBlitz3.ab2@7261>   LSR.w #4,D0
000237E2 <AmiBlitz3.ab2@7262>   MOVE.w $8(A0),D2
000237E8 <AmiBlitz3.ab2@7263>   MOVE.w asmsize,D3
000237EA <AmiBlitz3.ab2@7264>   LSR.w D3,D2
000237EE <AmiBlitz3.ab2@7265>   ANDI.w #$F,D2
000237F0 <AmiBlitz3.ab2@7266>   LSL.w D0,D2
000237F2 <AmiBlitz3.ab2@7267>   OR.w D2,D1
000237F8 <AmiBlitz3.ab2@7270>   CMPA.l destbufferend,A4
000237FC <AmiBlitz3.ab2@7271>    BCS.w JL_0_63E8
00023804 <AmiBlitz3.ab2@7273>   MOVE.w #$FFFF,dontwrite
00023808 <AmiBlitz3.ab2@7274> BRA.w JL_0_63EA
0002380A <AmiBlitz3.ab2@7277>   MOVE.w D1,(A4)
00023810 <AmiBlitz3.ab2@7280>   MOVE.l A1,destpointer
00023812 <AmiBlitz3.ab2@7281> RTS
00023818 <AmiBlitz3.ab2@7285>   MOVE.l destpointer,-(A7)
0002381E <AmiBlitz3.ab2@7286>   MOVE.l A1,destpointer
00023822 <AmiBlitz3.ab2@7287>    BSR.w addoff
00023828 <AmiBlitz3.ab2@7288>   MOVEA.l destpointer,A1
0002382E <AmiBlitz3.ab2@7289>   MOVE.l (A7)+,destpointer
00023830 <AmiBlitz3.ab2@7290> RTS
00023834 <AmiBlitz3.ab2@7294>   MOVEM.l d2-d6,-(a7)
0002383A <AmiBlitz3.ab2@7295>   JSR stripspaces
0002383E <AmiBlitz3.ab2@7296>   CMP.b #"d",(a5)+
00023842 <AmiBlitz3.ab2@7297>   BNE noreg
00023844 <AmiBlitz3.ab2@7298>   MOVE.b (a5)+,d0
00023848 <AmiBlitz3.ab2@7299>   CMP.b #$30,d0
0002384C <AmiBlitz3.ab2@7300>   BLT noreg
00023850 <AmiBlitz3.ab2@7301>   CMP.b #$37,d0
00023854 <AmiBlitz3.ab2@7302>   BGT noreg
00023858 <AmiBlitz3.ab2@7303>   SUB.b #$30,d0
0002385A <AmiBlitz3.ab2@7304>   MOVEQ #0,d3
0002385C <AmiBlitz3.ab2@7305>   MOVE.b d0,d3                                             ;reg1
0002385E <AmiBlitz3.ab2@7306>   ASL.l #8,d3
00023860 <AmiBlitz3.ab2@7307>   ASL.l #8,d3
00023866 <AmiBlitz3.ab2@7308>   JSR stripspaces
0002386A <AmiBlitz3.ab2@7309>   CMP.b #",",(a5)+
0002386E <AmiBlitz3.ab2@7310>   BNE noreg
00023874 <AmiBlitz3.ab2@7311>   JSR stripspaces
00023878 <AmiBlitz3.ab2@7312>   CMP.b #"d",(a5)+
0002387C <AmiBlitz3.ab2@7313>   BNE noreg
0002387E <AmiBlitz3.ab2@7314>   MOVE.b (a5)+,d0
00023882 <AmiBlitz3.ab2@7315>   CMP.b #$30,d0
00023886 <AmiBlitz3.ab2@7316>   BLT noreg
0002388A <AmiBlitz3.ab2@7317>   CMP.b #$37,d0
0002388E <AmiBlitz3.ab2@7318>   BGT noreg
00023892 <AmiBlitz3.ab2@7319>   SUB.b #$30,d0
00023894 <AmiBlitz3.ab2@7320>   MOVEQ #0,d4
00023896 <AmiBlitz3.ab2@7321>   MOVE.b d0,d4                                             ;reg2
00023898 <AmiBlitz3.ab2@7322>   ASL.l #8,d4
0002389A <AmiBlitz3.ab2@7323>   ASL.l #4,d4
0002389C <AmiBlitz3.ab2@7324>   OR.b d0,d1
0002389E <AmiBlitz3.ab2@7325>   OR.l d3,d1
000238A0 <AmiBlitz3.ab2@7326>   OR.l d4,d1
000238A6 <AmiBlitz3.ab2@7327>   JSR writelong
000238AA <AmiBlitz3.ab2@7328>   MOVEM.l (a7)+,d2-d6
000238AE <AmiBlitz3.ab2@7329>   MOVEM.l d1/a1-a3,-(a7)
000238B2 <AmiBlitz3.ab2@7330> BRA exit
000238B6 <AmiBlitz3.ab2@7334>   MOVEM.l (a7)+,d2-d6
000238BC <AmiBlitz3.ab2@7335>   LEA errtext,a0
000238BE <AmiBlitz3.ab2@7336>   MOVE.l a0,-(a7)
000238C4 <AmiBlitz3.ab2@7337> JMP handle_compileerror
000238CA <AmiBlitz3.ab2@7346>   MOVE.w dontwrite,D1
000238CE <AmiBlitz3.ab2@7347>    BNE.w asmfixer__done
000238D6 <AmiBlitz3.ab2@7348>   BTST #$7,make_smallestcode
000238DA <AmiBlitz3.ab2@7349>    BEQ.w asmfixer__go
000238DE <AmiBlitz3.ab2@7350>   MOVE.w pass(PC),D1
000238E2 <AmiBlitz3.ab2@7351>    BEQ.w asmfixer__done
000238E8 <AmiBlitz3.ab2@7354>   MOVEA.l templabel,A2                                     ;insert labels in Code
000238F0 <AmiBlitz3.ab2@7355>   MOVE.b #1,curtemplabel
000238F8 <AmiBlitz3.ab2@7356>   MOVE.w #$FFFF,constmode
000238FE <AmiBlitz3.ab2@7357>   CLR.w regnum
00023908 <AmiBlitz3.ab2@7358>           MOVE.l #forthstack,forthsp
00023912 <AmiBlitz3.ab2@7359>           MOVE.l #precstack,precsp
00023916 <AmiBlitz3.ab2@7360>    BSR.w prepstack
00023918 <AmiBlitz3.ab2@7363>   MOVE.l A2,-(A7)
0002391C <AmiBlitz3.ab2@7364>    BSR.w chkstop
0002391E <AmiBlitz3.ab2@7365>   MOVEA.l (A7)+,A2
00023922 <AmiBlitz3.ab2@7366>   CMPA.w #$0,A2
00023926 <AmiBlitz3.ab2@7367>    BEQ.w asmfixer__done2
0002392C <AmiBlitz3.ab2@7368>    CLR.b iee
00023932 <AmiBlitz3.ab2@7369>   MOVE.l A2,asmbuff
00023936 <AmiBlitz3.ab2@7370>   LEA $10(A2),A5
0002393A <AmiBlitz3.ab2@7371>   TST.b $F(A2)
0002393E <AmiBlitz3.ab2@7372>    BNE.w asmfixer__skipo
00023940 <AmiBlitz3.ab2@7373>   MOVEA.l (A5),A5                                          ;pointer to real text
00023946 <AmiBlitz3.ab2@7376>    CLR.w asmtype
0002394A <AmiBlitz3.ab2@7377>    CMP.b #".",(a5)
0002394E <AmiBlitz3.ab2@7378>    BNE.s asmfixer__skipo_l10
00023950 <AmiBlitz3.ab2@7379>    MOVE.l a2,-(a7)
00023952 <AmiBlitz3.ab2@7380>    ADDQ.l #1,a5
00023958 <AmiBlitz3.ab2@7381>    LEA newtypebase,a2
0002395C <AmiBlitz3.ab2@7382>    BSR getparameter2
00023960 <AmiBlitz3.ab2@7383>    BEQ.w syntaxerr
00023964 <AmiBlitz3.ab2@7384>    BSR findtype
00023968 <AmiBlitz3.ab2@7385>    BNE.w notypeerr
0002396C <AmiBlitz3.ab2@7386>    LEA $4(a2),a2
00023970 <AmiBlitz3.ab2@7387>    BSR getparameter2
00023974 <AmiBlitz3.ab2@7388>    BEQ.w syntaxerr
00023978 <AmiBlitz3.ab2@7389>    BSR.w findvariable2
0002397C <AmiBlitz3.ab2@7390>    BNE.w notypeerr
00023980 <AmiBlitz3.ab2@7391>    MOVE.w $4(a2),d3
00023982 <AmiBlitz3.ab2@7392>    EXT.l d3
00023986 <AmiBlitz3.ab2@7393> BRA asmfixer__skipo_l30b
0002398A <AmiBlitz3.ab2@7396>   CMP.b #"\",(a5)
0002398E <AmiBlitz3.ab2@7397>     BNE asmfixer__skipo_l20
00023990 <AmiBlitz3.ab2@7398>     ADDQ.l #1,a5
00023992 <AmiBlitz3.ab2@7399>    MOVE.l a2,-(a7)
00023994 <AmiBlitz3.ab2@7400>    MOVE.l a5,a4
0002399A <AmiBlitz3.ab2@7401>    LEA usedpath,a5
0002399E <AmiBlitz3.ab2@7402>    CMP.b #"*",(a5)
000239A2 <AmiBlitz3.ab2@7403>    BNE asmfixer__skipo_lm1
000239A4 <AmiBlitz3.ab2@7404>    ADDQ.l #1,a5
000239A8 <AmiBlitz3.ab2@7407>    BSR.w getparameter2
000239AC <AmiBlitz3.ab2@7408>    BEQ.w syntaxerr
000239B2 <AmiBlitz3.ab2@7409>    LEA varbase,A2
000239BA <AmiBlitz3.ab2@7410>    MOVE.b #1,newvariable
000239BE <AmiBlitz3.ab2@7411>    BSR.w findvariable
000239C4 <AmiBlitz3.ab2@7412>    CLR.b newvariable
000239CA <AmiBlitz3.ab2@7413>    CMP.l #-1,d0
000239CE <AmiBlitz3.ab2@7414>    BEQ.w notypeerr
000239D0 <AmiBlitz3.ab2@7415>    MOVE.l a4,a5
000239D4 <AmiBlitz3.ab2@7416>    MOVE.l $a(a2),a2
000239D8 <AmiBlitz3.ab2@7417>    LEA $4(a2),a2
000239DC <AmiBlitz3.ab2@7418>    BSR getparameter2
000239E0 <AmiBlitz3.ab2@7419>    BEQ.w syntaxerr
000239E4 <AmiBlitz3.ab2@7420>    BSR.w findvariable2
000239E8 <AmiBlitz3.ab2@7421>    BNE.w notypeerr
000239EC <AmiBlitz3.ab2@7422>   MOVE.w $4(A2),D3
000239EE <AmiBlitz3.ab2@7423>   EXT.l D3
000239F4 <AmiBlitz3.ab2@7426>    CMP.b #"[",-1(a5)
000239F8 <AmiBlitz3.ab2@7427>    BNE asmfixer__skipo_l30c
000239FA <AmiBlitz3.ab2@7428>    MOVEQ #0,d0
000239FC <AmiBlitz3.ab2@7429>    MOVE.b (a5)+,d0
000239FE <AmiBlitz3.ab2@7430>    MOVE.l d3,-(a7)
00023A00 <AmiBlitz3.ab2@7431>    MOVEQ #0,d3
00023A06 <AmiBlitz3.ab2@7432>    JSR atoi
00023A08 <AmiBlitz3.ab2@7433>    MOVE.l (a7)+,d1
00023A0C <AmiBlitz3.ab2@7434>    MOVE.l $a(a2),a2
00023A10 <AmiBlitz3.ab2@7435>    MOVE.w 8(a2),d0
00023A12 <AmiBlitz3.ab2@7436>    MULS d0,d3
00023A14 <AmiBlitz3.ab2@7437>    ADD.l d1,d3
00023A16 <AmiBlitz3.ab2@7440>   MOVE.l (a7)+,a2
00023A1A <AmiBlitz3.ab2@7441> BRA asmfixer__oko
00023A20 <AmiBlitz3.ab2@7444>   CMP.w #$c,$8(a2)
00023A24 <AmiBlitz3.ab2@7445>      BEQ asmfixer__skipo_lf1
00023A2A <AmiBlitz3.ab2@7446>      CMP.w #$d,$8(a2)
00023A2E <AmiBlitz3.ab2@7447>      BEQ asmfixer__skipo_lf1
00023A34 <AmiBlitz3.ab2@7450>   JSR AJL_0_BF6E
00023A3A <AmiBlitz3.ab2@7453>   MOVEA.l asmbuff,A2
00023A3E <AmiBlitz3.ab2@7454>    BEQ.w asmfixer__oko
00023A42 <AmiBlitz3.ab2@7455>   CMP.w #$28,D0
00023A46 <AmiBlitz3.ab2@7456>    BEQ.w asmfixer__oko
00023A4A <AmiBlitz3.ab2@7457>   CMP.w #$2C,D0
00023A4E <AmiBlitz3.ab2@7458>    BEQ.w asmfixer__oko
00023A52 <AmiBlitz3.ab2@7459> BRA.w syntaxerr
00023A5A <AmiBlitz3.ab2@7462>   MOVE.b #1,iee
00023A5E <AmiBlitz3.ab2@7463> BRA asmfixer__skipo_lf2
00023A62 <AmiBlitz3.ab2@7466>   MOVEA.l $4(A2),A1
00023A66 <AmiBlitz3.ab2@7468>   MOVE.w $8(A2),D1                                         ;labelmode
00023A6A <AmiBlitz3.ab2@7469>   CMP.w #$5,D1
00023A6E <AmiBlitz3.ab2@7470>    BNE.w asmfixer__notdan
00023A72 <AmiBlitz3.ab2@7473>    BSR.w chkword                                         ;word
00023A74 <AmiBlitz3.ab2@7476>   MOVE.w D3,(A1)
00023A78 <AmiBlitz3.ab2@7477> BRA.w asmfixer__next
00023A7C <AmiBlitz3.ab2@7480>   CMP.w #$6,D1
00023A80 <AmiBlitz3.ab2@7481>    BNE.w asmfixer__notdanxi
00023A84 <AmiBlitz3.ab2@7484>    BSR.w chkbyte                                         ;byte
00023A88 <AmiBlitz3.ab2@7487>   MOVE.b D3,$1(A1)
00023A8C <AmiBlitz3.ab2@7488> BRA.w asmfixer__next
00023A90 <AmiBlitz3.ab2@7491>    CMP.w #$11,D1                                           ;byte
00023A94 <AmiBlitz3.ab2@7492>    BEQ.w asmfixer__isbyte2
00023A98 <AmiBlitz3.ab2@7493>    CMP.w #$c,d1
00023A9C <AmiBlitz3.ab2@7494>    BEQ asmfixer__single1
00023AA0 <AmiBlitz3.ab2@7495>    CMP.w #$d,d1
00023AA4 <AmiBlitz3.ab2@7496>    BEQ asmfixer__double1
00023AA8 <AmiBlitz3.ab2@7497>   CMP.w #$7,D1
00023AAC <AmiBlitz3.ab2@7498>    BEQ.w asmfixer__word                                    ;word
00023AB0 <AmiBlitz3.ab2@7499>   CMP.w #$8,D1
00023AB4 <AmiBlitz3.ab2@7500>    BNE.w asmfixer__notabsl
00023ABA <AmiBlitz3.ab2@7503>   MOVE.w asmtype,D1                                        ;long
00023ABE <AmiBlitz3.ab2@7504>    BEQ.w asmfixer__notpcrel
00023AC2 <AmiBlitz3.ab2@7505>      BSR.w asmoff
00023AC4 <AmiBlitz3.ab2@7508>   MOVE.l D3,(A1)
00023AC8 <AmiBlitz3.ab2@7509> BRA.w asmfixer__next
00023ACE <AmiBlitz3.ab2@7513>   fmove.s fp0,0(a1)
00023AD2 <AmiBlitz3.ab2@7514> BRA.w asmfixer__next
00023AD8 <AmiBlitz3.ab2@7518>   fmove.d fp0,0(a1)
00023ADC <AmiBlitz3.ab2@7519> BRA.w asmfixer__next
00023AE0 <AmiBlitz3.ab2@7523>   CMP.w #$9,D1
00023AE4 <AmiBlitz3.ab2@7524>    BNE.w asmfixer__notdpc
00023AE6 <AmiBlitz3.ab2@7525>   SUB.l A1,D3                                              ;branchword
00023AEA <AmiBlitz3.ab2@7526>    BSR.w chkword
00023AEC <AmiBlitz3.ab2@7527>   MOVE.w D3,(A1)
00023AF0 <AmiBlitz3.ab2@7528> BRA.w asmfixer__next
00023AF4 <AmiBlitz3.ab2@7532>   CMP.w #$A,D1
00023AF8 <AmiBlitz3.ab2@7533>    BNE.w asmfixer__imm
00023AFA <AmiBlitz3.ab2@7534>   SUB.l A1,D3                                              ;branchbyte
00023AFE <AmiBlitz3.ab2@7535> BRA.w asmfixer__isbyte
00023B02 <AmiBlitz3.ab2@7539>   CMP.w #$11,d1
00023B06 <AmiBlitz3.ab2@7540>   BLE asmfixer__imm_org
00023B08 <AmiBlitz3.ab2@7541>   MOVE.l a3,-(a7)
00023B0E <AmiBlitz3.ab2@7542>   LEA pluginbase,a3
00023B12 <AmiBlitz3.ab2@7543>   MOVE.l 8(a2),a0
00023B14 <AmiBlitz3.ab2@7544>   JSR (a0)                                                 ;hook
00023B16 <AmiBlitz3.ab2@7545>   MOVE.l (a7)+,a3
00023B1A <AmiBlitz3.ab2@7546> BRA asmfixer__next
00023B1E <AmiBlitz3.ab2@7549>   MOVE.w $A(A2),D0
00023B22 <AmiBlitz3.ab2@7550>    BEQ.w asmfixer__noflag
00023B26 <AmiBlitz3.ab2@7551>   CMP.w #$1,D0
00023B2A <AmiBlitz3.ab2@7552>    BEQ.w asmfixer__tocount
00023B2E <AmiBlitz3.ab2@7553>   CMP.w #$3,D0
00023B32 <AmiBlitz3.ab2@7554>    BEQ.w asmfixer__tomoveq
00023B36 <AmiBlitz3.ab2@7555>   CMP.w #$4,D0
00023B3A <AmiBlitz3.ab2@7556>    BEQ.w asmfixer__totrap
00023B3E <AmiBlitz3.ab2@7559>   CMP.w #$B,D1                                             ;long
00023B42 <AmiBlitz3.ab2@7560>    BEQ.w asmfixer__isabsl
00023B46 <AmiBlitz3.ab2@7561> BRA asmfixer__word2                                              ;word
00023B4C <AmiBlitz3.ab2@7564>   CMP.l #$F,D3
00023B50 <AmiBlitz3.ab2@7565>    BHI.w illtraperr
00023B52 <AmiBlitz3.ab2@7566>   OR.b D3,-(A1)
00023B56 <AmiBlitz3.ab2@7567> BRA.w asmfixer__next
00023B5C <AmiBlitz3.ab2@7570>   CMP.l #$8,D3
00023B60 <AmiBlitz3.ab2@7571>    BHI.w illimmerr
00023B62 <AmiBlitz3.ab2@7572>   TST.l D3
00023B66 <AmiBlitz3.ab2@7573>    BEQ.w illimmerr
00023B6A <AmiBlitz3.ab2@7574>   ANDI.w #$7,D3
00023B6C <AmiBlitz3.ab2@7575>   LSL.w #8,D3
00023B6E <AmiBlitz3.ab2@7576>   LSL.w #1,D3
00023B70 <AmiBlitz3.ab2@7577>   OR.w D3,-(A1)
00023B74 <AmiBlitz3.ab2@7578> BRA.w asmfixer__next
00023B78 <AmiBlitz3.ab2@7581>    BSR.w chkbyte
00023B7A <AmiBlitz3.ab2@7582>   MOVE.b D3,-(A1)
00023B7C <AmiBlitz3.ab2@7585>   MOVEA.l (A2),A2
00023B80 <AmiBlitz3.ab2@7586> BRA.w asmfixer__loop
00023B86 <AmiBlitz3.ab2@7589>   CLR.w constmode
00023B8C <AmiBlitz3.ab2@7592>   CLR.b curtemplabel
00023B8E <AmiBlitz3.ab2@7593> RTS
00023B90 <AmiBlitz3.ab2@7602>   BTST D3,D6
00023B94 <AmiBlitz3.ab2@7603>    BEQ.w illeaerr
00023B98 <AmiBlitz3.ab2@7604>    BSR.w makemode
00023B9C <AmiBlitz3.ab2@7605>   CMP.w #$7,D3
00023BA0 <AmiBlitz3.ab2@7606>    BCS.w doea__skip
00023BA2 <AmiBlitz3.ab2@7607>   MOVE.w D3,D2
00023BA4 <AmiBlitz3.ab2@7608>   SUBQ.w #7,D2
00023BA8 <AmiBlitz3.ab2@7609>   CMP.w #$5,D2
00023BAC <AmiBlitz3.ab2@7610>    BCS.w doea__skip0
00023BAE <AmiBlitz3.ab2@7611>   MOVEQ.l #$04,D2
00023BB0 <AmiBlitz3.ab2@7614>   MOVEQ.l #$07,D3
00023BB2 <AmiBlitz3.ab2@7617>   MOVE.b D7,D0
00023BB6 <AmiBlitz3.ab2@7618>   ANDI.w #$F,D0
00023BBA <AmiBlitz3.ab2@7619>   CMP.w #$F,D0
00023BBE <AmiBlitz3.ab2@7620>    BEQ.w doea__skip2
00023BC0 <AmiBlitz3.ab2@7621>   LSL.w D0,D3
00023BC2 <AmiBlitz3.ab2@7622>   OR.w D3,D1
00023BC4 <AmiBlitz3.ab2@7625>   LSR.w #4,D7
00023BC8 <AmiBlitz3.ab2@7626>   ANDI.w #$F,D7
00023BCC <AmiBlitz3.ab2@7627>   CMP.w #$F,D7
00023BD0 <AmiBlitz3.ab2@7628>    BEQ.w doea__skip3
00023BD2 <AmiBlitz3.ab2@7629>   LSL.w D7,D2
00023BD4 <AmiBlitz3.ab2@7630>   OR.w D2,D1
00023BD6 <AmiBlitz3.ab2@7633> RTS
00023BDC <AmiBlitz3.ab2@7637>   CMP.l #$7F,D3
00023BE0 <AmiBlitz3.ab2@7638>    BGT.w illdiserr
00023BE6 <AmiBlitz3.ab2@7639>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00023BEA <AmiBlitz3.ab2@7640>    BLT.w illdiserr
00023BEC <AmiBlitz3.ab2@7641> RTS
00023BF2 <AmiBlitz3.ab2@7645>   CMP.l #$7fff,D3
00023BF6 <AmiBlitz3.ab2@7646>    BGT.w illdiserr
00023BFC <AmiBlitz3.ab2@7647>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00023C00 <AmiBlitz3.ab2@7648>    BLT.w illdiserr
00023C02 <AmiBlitz3.ab2@7649> RTS
00023C04 <AmiBlitz3.ab2@7654>   MOVE.b (a5)+,d0
00023C06 <AmiBlitz3.ab2@7655>   CMP.b d1,d0
00023C0A <AmiBlitz3.ab2@7656>   BEQ 'll10
00023C0C <AmiBlitz3.ab2@7657>   TST.b d0
00023C10 <AmiBlitz3.ab2@7658>   BNE 'll20
00023C12 <AmiBlitz3.ab2@7661>   SUBQ #1,a5
00023C14 <AmiBlitz3.ab2@7662> RTS
00023C16 <AmiBlitz3.ab2@7667>   MOVE.b (a5)+,d0
00023C1A <AmiBlitz3.ab2@7668>   CMP.b #",",d0
00023C1E <AmiBlitz3.ab2@7669>   BEQ 'll10
00023C22 <AmiBlitz3.ab2@7670>   CMP.b #";",d0
00023C26 <AmiBlitz3.ab2@7671>   BEQ 'll10
00023C2A <AmiBlitz3.ab2@7672>  CMP.b #":",d0
00023C2E <AmiBlitz3.ab2@7673>   BEQ 'll10
00023C30 <AmiBlitz3.ab2@7676>   TST.b d0
00023C34 <AmiBlitz3.ab2@7677>   BNE 'll20
00023C36 <AmiBlitz3.ab2@7680>   SUBQ #1,a5
00023C38 <AmiBlitz3.ab2@7681> RTS
00023C3A <AmiBlitz3.ab2@7685>   ADD.l a2,d1
00023C40 <AmiBlitz3.ab2@7686>   LEA tempspace,a1
00023C42 <AmiBlitz3.ab2@7687>   MOVE.l d1,a0
00023C44 <AmiBlitz3.ab2@7690>   MOVE.b (a0)+,(a1)+
00023C48 <AmiBlitz3.ab2@7691>   BNE.s 'l10
00023C4A <AmiBlitz3.ab2@7692>   SUBQ.l #1,a0
00023C4C <AmiBlitz3.ab2@7693>   SUBQ.l #1,a1
00023C4E <AmiBlitz3.ab2@7696>   MOVE.b (a5)+,(a1)+
00023C52 <AmiBlitz3.ab2@7697>   BNE.s 'l20
00023C54 <AmiBlitz3.ab2@7698>   CLR.b (a1)
00023C5A <AmiBlitz3.ab2@7699>   LEA tempspace,a5
00023C5C <AmiBlitz3.ab2@7700> RTS
00023C60 <AmiBlitz3.ab2@7704>   MOVEM.l D1-D2/A0,-(A7)
00023C62 <AmiBlitz3.ab2@7705>   MOVE.l d0,d2
00023C64 <AmiBlitz3.ab2@7706>   MOVEQ #0,d1
00023C66 <AmiBlitz3.ab2@7707>   MOVE.l a5,a4
00023C68 <AmiBlitz3.ab2@7710>   ADDQ.l #1,d1
00023C6A <AmiBlitz3.ab2@7711>   MOVE.b (a5)+,d0
00023C6E <AmiBlitz3.ab2@7712>   CMP.b #",",d0
00023C72 <AmiBlitz3.ab2@7713>   BEQ 'll10
00023C76 <AmiBlitz3.ab2@7714>   CMP.b #";",d0
00023C7A <AmiBlitz3.ab2@7715>   BEQ 'll10
00023C7E <AmiBlitz3.ab2@7716>   CMP.b #":",d0
00023C82 <AmiBlitz3.ab2@7717>   BEQ 'll10
00023C86 <AmiBlitz3.ab2@7718>   CMP.b #"(",d0
00023C8A <AmiBlitz3.ab2@7719>   BEQ 'll10
00023C8C <AmiBlitz3.ab2@7720>   TST.b d0
00023C90 <AmiBlitz3.ab2@7721>   BNE 'll20
00023C92 <AmiBlitz3.ab2@7724>   SUBQ #1,a5
00023C96 <AmiBlitz3.ab2@7725>   CMP.b #"'",(a4)
00023C9A <AmiBlitz3.ab2@7726>   BEQ 'llocal
00023CA0 <AmiBlitz3.ab2@7727>   TST.w inmacro
00023CA4 <AmiBlitz3.ab2@7728>   BNE 'lmacro
00023CA6 <AmiBlitz3.ab2@7729>   MOVEQ.l #$14+4,D0
00023CA8 <AmiBlitz3.ab2@7730>   ADD.l d1,d0
00023CAA <AmiBlitz3.ab2@7731>   MOVE.l d1,-(a7)
00023CAC <AmiBlitz3.ab2@7732>   MOVEQ.l #$01,D1
00023CB2 <AmiBlitz3.ab2@7733>   MOVEA.l _execbase,A6
00023CB8 <AmiBlitz3.ab2@7734>   MOVE.l mempool2,a0
00023CBC <AmiBlitz3.ab2@7735>   JSR _AllocPooled(a6)
00023CBE <AmiBlitz3.ab2@7737>   MOVE.l (a7)+,d1
00023CC0 <AmiBlitz3.ab2@7738>   TST.l d0
00023CC4 <AmiBlitz3.ab2@7739>   BEQ nomemory
00023CC6 <AmiBlitz3.ab2@7740>   MOVEA.l D0,A0
00023CCE <AmiBlitz3.ab2@7742>   MOVE.w linenumat+2,$A(A0)
00023CD4 <AmiBlitz3.ab2@7744>   MOVE.l templabel,(A0)
00023CDA <AmiBlitz3.ab2@7745>   MOVE.l A0,templabel
00023CE2 <AmiBlitz3.ab2@7746>   MOVE.l destpointer,$4(A0)
00023CE6 <AmiBlitz3.ab2@7747>   MOVE.l d2,$8(A0)
00023CEA <AmiBlitz3.ab2@7748>   LEA $E(A0),A0
00023CEE <AmiBlitz3.ab2@7749>   MOVE.b #$14,(A0)+
00023CF0 <AmiBlitz3.ab2@7750>   CLR.b (a0)+
00023CF2 <AmiBlitz3.ab2@7752>   MOVE.l a0,d2
00023CF4 <AmiBlitz3.ab2@7753>   ADDQ.l #4,d2
00023CF6 <AmiBlitz3.ab2@7754>   MOVE.l d2,(a0)+
00023CF8 <AmiBlitz3.ab2@7757>   MOVE.b (a4)+,(a0)+
00023CFA <AmiBlitz3.ab2@7758>   SUBQ.l #1,d1
00023CFE <AmiBlitz3.ab2@7759>   BNE 'lc1
00023D00 <AmiBlitz3.ab2@7760>   CLR.b (a0)+
00023D06 <AmiBlitz3.ab2@7761>   MOVE.w linenumat,(a0)
00023D0A <AmiBlitz3.ab2@7762>   MOVEM.l (A7)+,D1-D2/A0
00023D0C <AmiBlitz3.ab2@7763> RTS
00023D0E <AmiBlitz3.ab2@7766>   MOVEQ.l #$10+2,D0
00023D10 <AmiBlitz3.ab2@7767>   ADD.l d1,d0
00023D14 <AmiBlitz3.ab2@7768>   MOVEM.l a4/d3,-(a7)
00023D16 <AmiBlitz3.ab2@7769>   MOVE.l d1,d3
00023D18 <AmiBlitz3.ab2@7770>   MOVEQ.l #$01,D1
00023D1E <AmiBlitz3.ab2@7771>   MOVEA.l _execbase,A6
00023D24 <AmiBlitz3.ab2@7772>   MOVE.l mempool2,a0
00023D28 <AmiBlitz3.ab2@7773>   JSR _AllocPooled(a6)
00023D2A <AmiBlitz3.ab2@7775>   TST.l d0
00023D2E <AmiBlitz3.ab2@7776>   BEQ nomemory
00023D30 <AmiBlitz3.ab2@7777>   MOVEA.l D0,A0
00023D38 <AmiBlitz3.ab2@7780>   MOVE.w linenumat+2,$C(A0)
00023D3E <AmiBlitz3.ab2@7781>   MOVE.l templabel,(A0)
00023D44 <AmiBlitz3.ab2@7782>   MOVE.l A0,templabel
00023D4C <AmiBlitz3.ab2@7783>   MOVE.l destpointer,$4(A0)
00023D50 <AmiBlitz3.ab2@7784>   MOVE.l d2,$8(A0)
00023D54 <AmiBlitz3.ab2@7785>   LEA $E(A0),A0
00023D56 <AmiBlitz3.ab2@7786>   MOVE.b d3,(A0)+
00023D5C <AmiBlitz3.ab2@7787>   ADD.b #$10,-1(a0)
00023D60 <AmiBlitz3.ab2@7788>   MOVE.b #$1,(a0)+
00023D62 <AmiBlitz3.ab2@7789>   SUBQ.w #1,d3
00023D64 <AmiBlitz3.ab2@7792>   MOVE.b (a4)+,(a0)+
00023D66 <AmiBlitz3.ab2@7793>   SUBQ.l #1,d3
00023D6A <AmiBlitz3.ab2@7794>   BNE.s 'lm2
00023D6C <AmiBlitz3.ab2@7795>   CLR.b (a0)+
00023D72 <AmiBlitz3.ab2@7796>   MOVE.w linenumat,(a0)
00023D76 <AmiBlitz3.ab2@7797>   MOVEM.l (a7)+,d3/a4
00023D7A <AmiBlitz3.ab2@7798>   MOVEM.l (A7)+,D1-D2/A0
00023D7C <AmiBlitz3.ab2@7799> RTS
00023D82 <AmiBlitz3.ab2@7802>   LEA lastgloballabel,a1
00023D84 <AmiBlitz3.ab2@7805>   ADDQ.l #1,d1
00023D86 <AmiBlitz3.ab2@7806>   TST.b (a1)+
00023D8A <AmiBlitz3.ab2@7807>   BNE.s 'll11
00023D8C <AmiBlitz3.ab2@7808>   MOVEQ.l #$10+2,D0
00023D8E <AmiBlitz3.ab2@7809>   ADD.l d1,d0
00023D92 <AmiBlitz3.ab2@7810>   MOVEM.l a4/d3,-(a7)
00023D94 <AmiBlitz3.ab2@7811>   MOVE.l d1,d3
00023D96 <AmiBlitz3.ab2@7812>   MOVEQ.l #$01,D1
00023D9C <AmiBlitz3.ab2@7813>   MOVEA.l _execbase,A6
00023DA2 <AmiBlitz3.ab2@7814>   MOVE.l mempool2,a0
00023DA6 <AmiBlitz3.ab2@7815>   JSR _AllocPooled(a6)
00023DA8 <AmiBlitz3.ab2@7817>   TST.l d0
00023DAC <AmiBlitz3.ab2@7818>   BEQ nomemory
00023DAE <AmiBlitz3.ab2@7819>   MOVEA.l D0,A0
00023DB6 <AmiBlitz3.ab2@7822>   MOVE.w linenumat+2,$C(A0)
00023DBC <AmiBlitz3.ab2@7823>   MOVE.l templabel,(A0)
00023DC2 <AmiBlitz3.ab2@7824>   MOVE.l A0,templabel
00023DCA <AmiBlitz3.ab2@7825>   MOVE.l destpointer,$4(A0)
00023DCE <AmiBlitz3.ab2@7826>   MOVE.l d2,$8(A0)
00023DD2 <AmiBlitz3.ab2@7827>   LEA $E(A0),A0
00023DD4 <AmiBlitz3.ab2@7828>   MOVE.b d3,(A0)+
00023DDA <AmiBlitz3.ab2@7829>   ADD.b #$10,-1(a0)
00023DDE <AmiBlitz3.ab2@7830>   MOVE.b #$1,(a0)+
00023DE0 <AmiBlitz3.ab2@7831>   SUBQ.w #1,d3
00023DE6 <AmiBlitz3.ab2@7832>   LEA lastgloballabel,a1
00023DE8 <AmiBlitz3.ab2@7835>   SUBQ.l #1,d3
00023DEA <AmiBlitz3.ab2@7836>   MOVE.b (a1)+,(a0)+
00023DEE <AmiBlitz3.ab2@7837>   BNE.s 'lm3
00023DF0 <AmiBlitz3.ab2@7838>   SUBQ.l #1,a0
00023DF2 <AmiBlitz3.ab2@7841>   MOVE.b (a4)+,(a0)+
00023DF4 <AmiBlitz3.ab2@7842>   SUBQ.l #1,d3
00023DF8 <AmiBlitz3.ab2@7843>   BNE.s 'lm1
00023DFA <AmiBlitz3.ab2@7844>   CLR.b (a0)+
00023E00 <AmiBlitz3.ab2@7845>   MOVE.w linenumat,(a0)
00023E04 <AmiBlitz3.ab2@7846>   MOVEM.l (a7)+,d3/a4
00023E08 <AmiBlitz3.ab2@7847>   MOVEM.l (A7)+,D1-D2/A0
00023E0A <AmiBlitz3.ab2@7848> RTS
00023E34 <AmiBlitz3.ab2@7852>   !basic
00023E96 <AmiBlitz3.ab2@7853>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00023EA8 <AmiBlitz3.ab2@7854>   loop Delay_ 1
00023EAE <AmiBlitz3.ab2@7855> Goto loop
00023EB2 <AmiBlitz3.ab2@7859>   MOVEM.l D0-D2/A0,-(A7)
00023EB6 <AmiBlitz3.ab2@7860>   MOVE.w $E(A0),-(A7)
00023EBA <AmiBlitz3.ab2@7861>    BPL.w insasm__ok
00023EBC <AmiBlitz3.ab2@7862>   CLR.w (A7)
00023EBE <AmiBlitz3.ab2@7865>   MOVE.l A1,-(A7)
00023EC0 <AmiBlitz3.ab2@7866>   MOVEQ.l #$10+2,D0
00023EC6 <AmiBlitz3.ab2@7867>   ADD.w asmlen,D0
00023EC8 <AmiBlitz3.ab2@7868>   MOVE.w D0,D2
00023ECA <AmiBlitz3.ab2@7869>   MOVEQ.l #$01,D1
00023ED0 <AmiBlitz3.ab2@7870>   MOVEA.l _execbase,A6
00023ED6 <AmiBlitz3.ab2@7871>   MOVE.l mempool2,a0
00023EDA <AmiBlitz3.ab2@7872>   JSR _AllocPooled(a6)
00023EDC <AmiBlitz3.ab2@7874>   MOVEA.l D0,A0
00023EE4 <AmiBlitz3.ab2@7877>   MOVE.w linenumat+2,$C(A0)
00023EEA <AmiBlitz3.ab2@7878>   MOVE.l templabel,(A0)
00023EF0 <AmiBlitz3.ab2@7879>   MOVE.l A0,templabel
00023EF4 <AmiBlitz3.ab2@7880>   MOVE.l (A7),$4(A0)
00023EF8 <AmiBlitz3.ab2@7881>   MOVE.w d3,$8(A0)
00023EFE <AmiBlitz3.ab2@7882>   MOVE.w $4(A7),$A(A0)
00023F02 <AmiBlitz3.ab2@7883>   LEA $E(A0),A0
00023F04 <AmiBlitz3.ab2@7884>   MOVE.b D2,(A0)+                                           ;length
00023F0A <AmiBlitz3.ab2@7885>   MOVEA.l asmbuff,A1
00023F0C <AmiBlitz3.ab2@7886>   ADDQ.w #1,A1
00023F0E <AmiBlitz3.ab2@7887>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00023F12 <AmiBlitz3.ab2@7888>    BNE.w insasm__loop
00023F14 <AmiBlitz3.ab2@7889>   MOVE.l (A1)+,(A0)+
00023F1A <AmiBlitz3.ab2@7890>   MOVE.w linenumat,(a0)
00023F1E <AmiBlitz3.ab2@7891> BRA.w insasm__loopdone
00023F20 <AmiBlitz3.ab2@7894>    MOVE.b (A1)+,(A0)+
00023F24 <AmiBlitz3.ab2@7895>    BNE.w insasm__loop
00023F2A <AmiBlitz3.ab2@7896>    MOVE.w linenumat,(a0)
00023F2C <AmiBlitz3.ab2@7899>   MOVEA.l (A7)+,A1
00023F2E <AmiBlitz3.ab2@7900>   ADDQ.w #2,A7
00023F32 <AmiBlitz3.ab2@7901>   MOVEM.l (A7)+,D0-D2/A0
00023F34 <AmiBlitz3.ab2@7902> RTS
00023F38 <AmiBlitz3.ab2@7906>   CMP.w #$5,D3
00023F3C <AmiBlitz3.ab2@7907>    BCS.w makemode__done
00023F40 <AmiBlitz3.ab2@7908>   CMP.w #$B,D3
00023F44 <AmiBlitz3.ab2@7909>    BHI.w makemode__done2
00023F48 <AmiBlitz3.ab2@7910>    BEQ.w makemode__imm
00023F4C <AmiBlitz3.ab2@7911>    BSR.w insasm
00023F50 <AmiBlitz3.ab2@7912>   CMP.w #$5,D3
00023F54 <AmiBlitz3.ab2@7913>    BEQ.w makemode__word
00023F58 <AmiBlitz3.ab2@7914>   CMP.w #$6,D3
00023F5C <AmiBlitz3.ab2@7915>    BEQ.w makemode__dxi
00023F60 <AmiBlitz3.ab2@7916>   CMP.w #$7,D3
00023F64 <AmiBlitz3.ab2@7917>    BEQ.w makemode__word
00023F68 <AmiBlitz3.ab2@7918>   CMP.w #$8,D3
00023F6C <AmiBlitz3.ab2@7919>    BEQ.w makemode__long
00023F70 <AmiBlitz3.ab2@7920>   CMP.w #$9,D3
00023F74 <AmiBlitz3.ab2@7921>    BEQ.w makemode__word
00023F7A <AmiBlitz3.ab2@7925>   CMPA.l destbufferend,A1
00023F7E <AmiBlitz3.ab2@7926>    BCS.w makemode__ok7
00023F80 <AmiBlitz3.ab2@7927>   ADDQ.w #2,A1
00023F82 <AmiBlitz3.ab2@7928> RTS
00023F84 <AmiBlitz3.ab2@7931>   MOVE.w D4,(A1)+
00023F86 <AmiBlitz3.ab2@7932> RTS
00023F8E <AmiBlitz3.ab2@7935>   CMPI.w #$8,asmsize
00023F92 <AmiBlitz3.ab2@7936>    BCC.w makemode__immlong
00023F94 <AmiBlitz3.ab2@7937>   MOVEQ.l #$10,D3
00023F98 <AmiBlitz3.ab2@7938>    BSR.w insasm
00023F9A <AmiBlitz3.ab2@7939>   MOVEQ.l #$0B,D3
00023F9E <AmiBlitz3.ab2@7940> BRA.w makemode__word
00023FA2 <AmiBlitz3.ab2@7943>   BSR.w insasm
00023FA4 <AmiBlitz3.ab2@7946>   ADDQ.w #2,A1
00023FA6 <AmiBlitz3.ab2@7949>   ADDQ.w #2,A1
00023FA8 <AmiBlitz3.ab2@7950> RTS
00023FAC <AmiBlitz3.ab2@7953>   CMP.w #$F,D3
00023FB0 <AmiBlitz3.ab2@7954>    BNE.w makemode__done
00023FB6 <AmiBlitz3.ab2@7955>   CMPA.l destbufferend,A1
00023FBA <AmiBlitz3.ab2@7956>    BCS.w makemode__ok3
00023FBC <AmiBlitz3.ab2@7957>   ADDQ.w #2,A1
00023FBE <AmiBlitz3.ab2@7958>   ADDQ.w #4,A7
00023FC0 <AmiBlitz3.ab2@7959> RTS
00023FC2 <AmiBlitz3.ab2@7962>   MOVE.w D2,(A1)+
00023FC4 <AmiBlitz3.ab2@7963>   ADDQ.w #4,A7
00023FC6 <AmiBlitz3.ab2@7966> RTS
00023FCA <AmiBlitz3.ab2@7970>   BSR.w storeloc
00023FD4 <AmiBlitz3.ab2@7971>   MOVE.l linenumat,oldline
00023FD6 <AmiBlitz3.ab2@7972>   MOVEQ.l #$00,D1
00023FDA <AmiBlitz3.ab2@7973>    BSR.w get1bytemain
00023FDE <AmiBlitz3.ab2@7974>    BEQ.w JL_0_676E
00023FE0 <AmiBlitz3.ab2@7975>   MOVEQ.l #$00,D3
00023FE4 <AmiBlitz3.ab2@7976> BRA.w JL_0_6726
00023FE8 <AmiBlitz3.ab2@7979>    BSR.w get1bytemain
00023FEC <AmiBlitz3.ab2@7980>    BNE.w JL_0_671C
00023FEE <AmiBlitz3.ab2@7983>   TST.w D3
00023FF2 <AmiBlitz3.ab2@7984>    BNE.w brackets_                                         ;syntax error brackets
00023FF6 <AmiBlitz3.ab2@7985> BRA.w JL_0_676C
00023FFC <AmiBlitz3.ab2@7988>    MOVE.w instringon,D4
00024000 <AmiBlitz3.ab2@7990>      BEQ JL_0_6726
00024002 <AmiBlitz3.ab2@7993>     MOVEQ #0,d0
00024004 <AmiBlitz3.ab2@7994>      MOVE.b (a5)+,d0                                       ;fix "ue"
0002400A <AmiBlitz3.ab2@7995>      MOVE.w d0,lastchar
0002400E <AmiBlitz3.ab2@7996>      BEQ ready
00024012 <AmiBlitz3.ab2@7997>      CMP.b #$22,d0
00024016 <AmiBlitz3.ab2@7998>      BNE 'l1
0002401C <AmiBlitz3.ab2@7999>      NOT.w instringon
00024020 <AmiBlitz3.ab2@8000> BRA JL_0_670A
00024024 <AmiBlitz3.ab2@8003>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00024028 <AmiBlitz3.ab2@8004>            BNE 'l10
0002402C <AmiBlitz3.ab2@8005>            CMP.b #"@",(a5)
00024030 <AmiBlitz3.ab2@8006>            BNE 'l10
00024036 <AmiBlitz3.ab2@8009>            TST.w ininclude
0002403A <AmiBlitz3.ab2@8010>            BNE 'inc
00024040 <AmiBlitz3.ab2@8011>            MOVE.l sourceline3,a5
00024046 <AmiBlitz3.ab2@8012>            CMP.l #0,a5
0002404A <AmiBlitz3.ab2@8013>            BNE 'l11t
00024050 <AmiBlitz3.ab2@8014>            MOVEA.l sourceline,A5
00024052 <AmiBlitz3.ab2@8017>            MOVEA.l (A5),A5
00024058 <AmiBlitz3.ab2@8018>            CMP.l #0,a5
0002405C <AmiBlitz3.ab2@8019>            BEQ JL_0_676C
00024062 <AmiBlitz3.ab2@8020>            MOVE.l a5,sourceline3
00024066 <AmiBlitz3.ab2@8021>            LEA $9(A5),A5
0002406A <AmiBlitz3.ab2@8022> BRA 'l11
0002406C <AmiBlitz3.ab2@8025>            ADDQ.l #1,a5
0002406E <AmiBlitz3.ab2@8026>            TST.b (a5)
00024072 <AmiBlitz3.ab2@8027>            BNE 'inc
00024074 <AmiBlitz3.ab2@8031>            ADDQ.l #1,a5
00024076 <AmiBlitz3.ab2@8032>            TST.b (a5)
0002407A <AmiBlitz3.ab2@8033>            BEQ illeolerr
0002407C <AmiBlitz3.ab2@8034>            MOVE.l a5,-(a7)
00024080 <AmiBlitz3.ab2@8037>       CMP.b #" ",(a5)+
00024084 <AmiBlitz3.ab2@8038>       BEQ 'l110
0002408A <AmiBlitz3.ab2@8039>        CMP.b #";",-1(a5)
0002408C <AmiBlitz3.ab2@8040>        MOVE.l (a7)+,a5
00024090 <AmiBlitz3.ab2@8041>        BEQ 'l111
00024094 <AmiBlitz3.ab2@8042> BRA JL_0_670A
00024098 <AmiBlitz3.ab2@8045>    CMP.w #$29,D0
0002409C <AmiBlitz3.ab2@8046>    BNE.w JL_0_673A
0002409E <AmiBlitz3.ab2@8047>   TST.w D3
000240A2 <AmiBlitz3.ab2@8048>    BEQ.w JL_0_676C
000240A4 <AmiBlitz3.ab2@8051>   SUBQ.w #1,D3
000240A8 <AmiBlitz3.ab2@8052> BRA.w JL_0_670A
000240AC <AmiBlitz3.ab2@8055>    CMP.w #$7D,D0
000240B0 <AmiBlitz3.ab2@8056>    BEQ.w JL_0_6734
000240B4 <AmiBlitz3.ab2@8057>   CMP.w #$28,D0
000240B8 <AmiBlitz3.ab2@8058>    BNE.w JL_0_6750
000240BA <AmiBlitz3.ab2@8061>    ADDQ.w #1,D3
000240BE <AmiBlitz3.ab2@8062> BRA.w JL_0_670A
000240C2 <AmiBlitz3.ab2@8065>   CMP.w #$7B,D0
000240C6 <AmiBlitz3.ab2@8066>    BEQ.w JL_0_674A
000240CA <AmiBlitz3.ab2@8067>   CMP.w #$2C,D0
000240CE <AmiBlitz3.ab2@8068>    BNE.w JL_0_670A
000240D0 <AmiBlitz3.ab2@8069>   TST.w D3
000240D4 <AmiBlitz3.ab2@8070>    BNE.w JL_0_670A
000240D6 <AmiBlitz3.ab2@8071>   ADDQ.w #1,D1
000240DA <AmiBlitz3.ab2@8072> BRA.w JL_0_670A
000240DC <AmiBlitz3.ab2@8075>   ADDQ.w #1,D1
000240E2 <AmiBlitz3.ab2@8078>   CLR.l sourceline3
000240EC <AmiBlitz3.ab2@8079>   MOVE.l oldline,linenumat
000240F0 <AmiBlitz3.ab2@8080> BRA.w resloc
000240F6 <AmiBlitz3.ab2@8084>    CLR.w numreps
000240F8 <AmiBlitz3.ab2@8085>   MOVE.w D1,D0
000240FC <AmiBlitz3.ab2@8086>   ANDI.w #$FF00,D0
00024100 <AmiBlitz3.ab2@8087>    BEQ.w fetchlibps__noreps
00024102 <AmiBlitz3.ab2@8088>   LSR.w #8,D0
00024104 <AmiBlitz3.ab2@8089>   LSR.w #4,D0
00024108 <AmiBlitz3.ab2@8090>    BEQ.w fetchlibps__skip
0002410A <AmiBlitz3.ab2@8091>   SUB.b D0,D1
00024114 <AmiBlitz3.ab2@8092>    MOVE.w regnum,regnumfunc
0002411A <AmiBlitz3.ab2@8093>    MOVE.b funcparloop,-(a7)
00024122 <AmiBlitz3.ab2@8094>    MOVE.b #0,funcparloop
00024128 <AmiBlitz3.ab2@8095>    MOVE.l leftsidetype,-(a7)
0002412E <AmiBlitz3.ab2@8096>    MOVE.l rightsidetype,-(a7)
00024134 <AmiBlitz3.ab2@8097>    CLR.l leftsidetype
0002413A <AmiBlitz3.ab2@8098>    CLR.l rightsidetype
00024140 <AmiBlitz3.ab2@8099>    MOVE.b blitzparloop,-(a7)
00024148 <AmiBlitz3.ab2@8100>    MOVE.b #1,blitzparloop
0002414C <AmiBlitz3.ab2@8101>    BSR.w fetchpees2
00024152 <AmiBlitz3.ab2@8102>    MOVE.b (a7)+,blitzparloop
00024158 <AmiBlitz3.ab2@8103>    MOVE.l (a7)+,rightsidetype
0002415E <AmiBlitz3.ab2@8104>    MOVE.l (a7)+,leftsidetype
00024164 <AmiBlitz3.ab2@8105>    MOVE.b (a7)+,funcparloop
00024168 <AmiBlitz3.ab2@8106>   CMP.w #$2C,D0
0002416C <AmiBlitz3.ab2@8107>    BNE.w syntaxerr
0002416E <AmiBlitz3.ab2@8110>   MOVE.w D1,D2
00024170 <AmiBlitz3.ab2@8111>   LSR.w #8,D2
00024174 <AmiBlitz3.ab2@8112>   ANDI.w #$7,D2
00024176 <AmiBlitz3.ab2@8115>    CMP.b D2,D1
0002417A <AmiBlitz3.ab2@8116>    BCS.w fetchlibps__repsdone
0002417C <AmiBlitz3.ab2@8117>   SUB.b D2,D1
00024180 <AmiBlitz3.ab2@8118>   MOVEM.l D2/A2,-(A7)
00024182 <AmiBlitz3.ab2@8119>   MOVE.w D2,D0
00024188 <AmiBlitz3.ab2@8120>   MOVE.b funcparloop,-(a7)
00024190 <AmiBlitz3.ab2@8121>   MOVE.b #0,funcparloop
00024196 <AmiBlitz3.ab2@8122>   MOVE.l leftsidetype,-(a7)
0002419C <AmiBlitz3.ab2@8123>   MOVE.l rightsidetype,-(a7)
000241A2 <AmiBlitz3.ab2@8124>   CLR.l leftsidetype
000241A8 <AmiBlitz3.ab2@8125>   CLR.l rightsidetype
000241AE <AmiBlitz3.ab2@8126>   MOVE.b blitzparloop,-(a7)
000241B6 <AmiBlitz3.ab2@8127>   MOVE.b #1,blitzparloop
000241BA <AmiBlitz3.ab2@8128>   BSR.w fetchpees4
000241C0 <AmiBlitz3.ab2@8129>   MOVE.b (a7)+,blitzparloop
000241C6 <AmiBlitz3.ab2@8130>   MOVE.l (a7)+,rightsidetype
000241CC <AmiBlitz3.ab2@8131>   MOVE.l (a7)+,leftsidetype
000241D2 <AmiBlitz3.ab2@8132>   MOVE.b (a7)+,funcparloop
000241D6 <AmiBlitz3.ab2@8133>   MOVEM.l (A7)+,D2/A2
000241DC <AmiBlitz3.ab2@8134>   ADDQ.w #1,numreps
000241E0 <AmiBlitz3.ab2@8135> BRA.w fetchlibps__rloop
000241E6 <AmiBlitz3.ab2@8138>    MOVE.w numreps,D3
000241EA <AmiBlitz3.ab2@8139>    BEQ.w syntaxerr
000241EC <AmiBlitz3.ab2@8140>   ADDA.w D2,A2
000241F0 <AmiBlitz3.ab2@8141>   ANDI.w #$FF,D1
000241F4 <AmiBlitz3.ab2@8142>    BEQ.w fetchlibps__done
000241F8 <AmiBlitz3.ab2@8143>   CMP.w #$2C,D0
000241FC <AmiBlitz3.ab2@8144>    BNE.w syntaxerr
000241FE <AmiBlitz3.ab2@8147>    MOVE.w D1,D0
00024202 <AmiBlitz3.ab2@8148>    BNE.w fetchpees2b
00024204 <AmiBlitz3.ab2@8151> RTS
0002420A <AmiBlitz3.ab2@8154>   MOVE.b funcparloop,-(a7)
00024210 <AmiBlitz3.ab2@8155>   MOVE.l leftsidetype,-(a7)
00024216 <AmiBlitz3.ab2@8156>   MOVE.l rightsidetype,-(a7)
0002421C <AmiBlitz3.ab2@8157>   CLR.l leftsidetype
00024222 <AmiBlitz3.ab2@8158>   CLR.l rightsidetype
0002422A <AmiBlitz3.ab2@8159>   MOVE.b #0,funcparloop
00024230 <AmiBlitz3.ab2@8160>   MOVE.b blitzparloop,-(a7)
00024238 <AmiBlitz3.ab2@8161>   MOVE.b #1,blitzparloop
0002423C <AmiBlitz3.ab2@8162>   BSR.w fetchpees2
00024242 <AmiBlitz3.ab2@8163>   MOVE.b (a7)+,blitzparloop
00024248 <AmiBlitz3.ab2@8164>   MOVE.l (a7)+,rightsidetype
0002424E <AmiBlitz3.ab2@8165>   MOVE.l (a7)+,leftsidetype
00024254 <AmiBlitz3.ab2@8166>   MOVE.b (a7)+,funcparloop
00024256 <AmiBlitz3.ab2@8167> RTS
0002425A <AmiBlitz3.ab2@8171> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
0002425C <AmiBlitz3.ab2@8174> partostack:  Ds.w 1                                        ;pmode org source
0002425E <AmiBlitz3.ab2@8178>   MOVEQ.l #$01,D2
00024262 <AmiBlitz3.ab2@8179> BRA.w fetchpees3
00024264 <AmiBlitz3.ab2@8182>   MOVEQ.l #$00,D2
00024268 <AmiBlitz3.ab2@8185>   ANDI.w #$F,D0
0002426E <AmiBlitz3.ab2@8193>   CLR.w parnum
00024270 <AmiBlitz3.ab2@8194>   MOVE.w D1,-(A7)
00024274 <AmiBlitz3.ab2@8195>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
0002427A <AmiBlitz3.ab2@8196>   MOVE.w D2,partostack
0002427C <AmiBlitz3.ab2@8197>   MOVE.w D0,-(A7)
00024280 <AmiBlitz3.ab2@8198>   CMP.w #"@@",(a5)                                         ;was l15
00024284 <AmiBlitz3.ab2@8199>   BNE fetchpees__loop
0002428A <AmiBlitz3.ab2@8200>   TST.w ininclude                                          ;merge macrolines
0002428E <AmiBlitz3.ab2@8201>   BNE errorjoin
00024294 <AmiBlitz3.ab2@8202>        MOVEA.l sourceline,A5
00024296 <AmiBlitz3.ab2@8205>            MOVEA.l (A5),A5
0002429C <AmiBlitz3.ab2@8206>            MOVE.l a5,sourceline
000242A0 <AmiBlitz3.ab2@8207>            LEA $9(A5),A5
000242A6 <AmiBlitz3.ab2@8208>            ADDQ.l #1,linenumat
000242A8 <AmiBlitz3.ab2@8212>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
000242AC <AmiBlitz3.ab2@8213>    BNE.w fetchpees__skip0
000242B2 <AmiBlitz3.ab2@8214>   MOVE.w userp,D2                                          ;user selected type
000242B4 <AmiBlitz3.ab2@8216>    MOVE.l A2,-(A7)
000242BA <AmiBlitz3.ab2@8217>    ADDQ.w #1,parnum
000242C0 <AmiBlitz3.ab2@8218>    TST.b funccall
000242C4 <AmiBlitz3.ab2@8219>    BEQ fetchpees__skip0_l1
000242CC <AmiBlitz3.ab2@8220>    CMP.w #6,parnum
000242D0 <AmiBlitz3.ab2@8221>    BLE fetchpees__skip0_l1
000242D4 <AmiBlitz3.ab2@8222>    CMP.w #7,d2
000242DA <AmiBlitz3.ab2@8228>    TST.b fpu
000242DE <AmiBlitz3.ab2@8229>    BEQ fetchpees__skip0_old
000242E4 <AmiBlitz3.ab2@8230>    TST.w regnumfunc
000242E8 <AmiBlitz3.ab2@8231>    BEQ fetchpees__skip0_old
000242EE <AmiBlitz3.ab2@8232>    CMP.w #$48e7,-4(a4)
000242F2 <AmiBlitz3.ab2@8233>    BNE fetchpees__skip0_old
000242F4 <AmiBlitz3.ab2@8234>    MOVEQ #0,d1
000242FA <AmiBlitz3.ab2@8235>    MOVE.w regnum,d1
00024300 <AmiBlitz3.ab2@8236>    CMP regnumfunc,d1                                       ;fpu reg function save
00024304 <AmiBlitz3.ab2@8237>    BGE fetchpees__skip0_old
00024306 <AmiBlitz3.ab2@8238>    ASL.w #7,d1
00024308 <AmiBlitz3.ab2@8239>    MOVE.l d0,-(a7)
0002430E <AmiBlitz3.ab2@8240>    MOVE.w regnumfunc,d0
00024314 <AmiBlitz3.ab2@8241>    CLR.w regmask
0002431A <AmiBlitz3.ab2@8243>    BSET d0,regmask
0002431C <AmiBlitz3.ab2@8244>    SUBQ #1,d0
00024320 <AmiBlitz3.ab2@8245>    BNE fetchpees__skip0_loop
00024322 <AmiBlitz3.ab2@8246>     MOVEQ #0,d0
00024328 <AmiBlitz3.ab2@8249>       BTST d0,regmask
0002432C <AmiBlitz3.ab2@8250>       BEQ fetchpees__skip0_noa7
0002432E <AmiBlitz3.ab2@8251>       MOVEQ #0,d1
00024330 <AmiBlitz3.ab2@8252>       MOVE.w d0,d1
00024332 <AmiBlitz3.ab2@8253>       SUBQ.w #1,d1
00024334 <AmiBlitz3.ab2@8254>       ASL #7,d1
0002433A <AmiBlitz3.ab2@8255>       OR.l #$f2277400,d1                                   ;fmove.d
0002433E <AmiBlitz3.ab2@8257>       BSR writelong
00024344 <AmiBlitz3.ab2@8259>       ADDQ.l #2,stacktrack
0002434A <AmiBlitz3.ab2@8260>       MOVE.l stacktrack,d1
00024350 <AmiBlitz3.ab2@8261>       CMP.l #180,d1
00024354 <AmiBlitz3.ab2@8262>       BGT conmemerr                                        ;formel too complex
00024356 <AmiBlitz3.ab2@8263>       MOVE.l a0,-(a7)
0002435C <AmiBlitz3.ab2@8264>       LEA fpustackbase,a0
00024364 <AmiBlitz3.ab2@8265>       MOVE.w regmask,0(a0,d1)
00024366 <AmiBlitz3.ab2@8266>       MOVE.l (a7)+,a0
00024368 <AmiBlitz3.ab2@8269>       ADDQ.w #1,d0
0002436E <AmiBlitz3.ab2@8270>       CMP.w regnumfunc,d0
00024372 <AmiBlitz3.ab2@8271>       BLE fetchpees__skip0_loop2
00024374 <AmiBlitz3.ab2@8274>       MOVE.l (a7)+,d0
0002437A <AmiBlitz3.ab2@8277>      MOVE.l currentfunccall,-(a7)
00024380 <AmiBlitz3.ab2@8278>      MOVE.w parnum,-(a7)
00024386 <AmiBlitz3.ab2@8279>      TST.l rightsidetype
0002438A <AmiBlitz3.ab2@8280>      BSR.w JL_0_6836
00024390 <AmiBlitz3.ab2@8281>      MOVE.w (a7)+,parnum
00024396 <AmiBlitz3.ab2@8283>    MOVE.l (a7)+,currentfunccall
0002439C <AmiBlitz3.ab2@8285>    TST.b typecheck                            ;typecheck for function call
000243A0 <AmiBlitz3.ab2@8286>    BEQ 'notypecheck
000243A6 <AmiBlitz3.ab2@8287>    TST.b notypecheck
000243AA <AmiBlitz3.ab2@8288>    BNE 'notypecheck
000243B0 <AmiBlitz3.ab2@8289>    TST.b blitzparloop
000243B4 <AmiBlitz3.ab2@8290>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
000243BE <AmiBlitz3.ab2@8291>    CMP.l #0,currentfunccall
000243C2 <AmiBlitz3.ab2@8292>    BEQ 'isblitzlibcall
000243C6 <AmiBlitz3.ab2@8293>    MOVEM.l a0/a1,-(a7)
000243CC <AmiBlitz3.ab2@8294>    MOVE.l currentfunccall,a0
000243D2 <AmiBlitz3.ab2@8295>    MOVE.w parnum,d1
000243D8 <AmiBlitz3.ab2@8296>    TST.b isconstantvalue
000243DC <AmiBlitz3.ab2@8297>    BEQ 'noconstant
000243E6 <AmiBlitz3.ab2@8298>    CMP.l #0,lastconstantvalue
000243EA <AmiBlitz3.ab2@8299>    BEQ 'isnull
000243EE <AmiBlitz3.ab2@8301>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000243F4 <AmiBlitz3.ab2@8302>    CMP.l #0,a0
000243F8 <AmiBlitz3.ab2@8303>    BEQ 'notype
00024400 <AmiBlitz3.ab2@8304>    CMP.l #$100,4(a0)
00024404 <AmiBlitz3.ab2@8305>    BLE 'notype
0002440A <AmiBlitz3.ab2@8306>    MOVE.l lasttoken,d1
0002440E <AmiBlitz3.ab2@8307>    CMP.w #$b581,d1                   ; ok, when token for null
00024412 <AmiBlitz3.ab2@8308>    BEQ 'isnull
00024418 <AmiBlitz3.ab2@8309>    TST.l typetocast
0002441C <AmiBlitz3.ab2@8310>    BEQ 'nocast
00024422 <AmiBlitz3.ab2@8311>    MOVE.l typetocast,a1
00024426 <AmiBlitz3.ab2@8312>    BRA 'typecheck
0002442C <AmiBlitz3.ab2@8314>    MOVE.l rightsidetype,a1
00024432 <AmiBlitz3.ab2@8315>    CMP.l #0,a1
00024436 <AmiBlitz3.ab2@8316>    BEQ 'notype
0002443E <AmiBlitz3.ab2@8317> 'typecheck   CMP.l #$100,4(a1)
00024440 <AmiBlitz3.ab2@8319>    CMP.l a0,a1
00024444 <AmiBlitz3.ab2@8320>    BEQ 'ok
0002444C <AmiBlitz3.ab2@8322>    CMP.l #$100,4(a1)                 ; is a type here
00024450 <AmiBlitz3.ab2@8323>    BLE 'error
00024454 <AmiBlitz3.ab2@8324>    MOVE.l 4(a1),a1                   ; load the address of type.
00024458 <AmiBlitz3.ab2@8325>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0002445C <AmiBlitz3.ab2@8326>    BEQ 'ok
00024462 <AmiBlitz3.ab2@8327> 'error: JMP   error_convert_types    ; for syntax 4
00024468 <AmiBlitz3.ab2@8331>    CLR.l typetocast
0002446C <AmiBlitz3.ab2@8332>    MOVEM.l (a7)+,a0/a1
00024472 <AmiBlitz3.ab2@8336>    CLR.l lastfunction
00024478 <AmiBlitz3.ab2@8337>    TST.b fpu
0002447C <AmiBlitz3.ab2@8338>    BEQ fetchpees__skip0_noprint
0002447E <AmiBlitz3.ab2@8339>   MOVE.l (a7),a2
00024480 <AmiBlitz3.ab2@8340>   ADDQ.l #1,a2
00024484 <AmiBlitz3.ab2@8341>    CMP.b #5,d2
00024488 <AmiBlitz3.ab2@8342>   BNE fetchpees__skip0_noprint
0002448E <AmiBlitz3.ab2@8343>   CMP.b #$5d,24(a2)
00024492 <AmiBlitz3.ab2@8344>   BNE fetchpees__skip0_noprint
00024498 <AmiBlitz3.ab2@8345>   CMP.b #$81,25(a2)
0002449C <AmiBlitz3.ab2@8346>   BLT fetchpees__skip0_noprint
000244A2 <AmiBlitz3.ab2@8347>   CMP.b #$86,25(a2)
000244A6 <AmiBlitz3.ab2@8348>   BEQ fetchpees__skip0_ok
000244AC <AmiBlitz3.ab2@8349>   CMP.b #$87,25(a2)
000244B0 <AmiBlitz3.ab2@8350>   BEQ fetchpees__skip0_ok
000244B6 <AmiBlitz3.ab2@8351>   CMP.b #$88,25(a2)
000244BA <AmiBlitz3.ab2@8352>   BEQ fetchpees__skip0_ok
000244C0 <AmiBlitz3.ab2@8353>   CMP.b #$83,25(a2)
000244C4 <AmiBlitz3.ab2@8354>   BGT fetchpees__skip0_noprint
000244CA <AmiBlitz3.ab2@8357>   MOVE.l destpointer,a4
000244D0 <AmiBlitz3.ab2@8358>   CMP.w #$2f00,-2(a4)
000244D4 <AmiBlitz3.ab2@8359>   BNE fetchpees__skip0_noprint
000244DA <AmiBlitz3.ab2@8360>   SUBQ.l #2,destpointer
000244E0 <AmiBlitz3.ab2@8362>   MOVE.l #$f2277400,d1
000244E4 <AmiBlitz3.ab2@8363>   BSR writelong                                            ;fmove.d fp0,-(a7)
000244EA <AmiBlitz3.ab2@8364>   ADDQ #4,a2offset
000244F0 <AmiBlitz3.ab2@8382>   CLR.b optistring
000244F2 <AmiBlitz3.ab2@8383>   MOVEA.l (A7)+,A2
000244F6 <AmiBlitz3.ab2@8384>    CMP.w #"@",d0
000244FA <AmiBlitz3.ab2@8385>   BNE fetchpees__skip0_l10
000244FE <AmiBlitz3.ab2@8386>    CMP.b #"@",(a5)
00024502 <AmiBlitz3.ab2@8387>   BNE fetchpees__skip0_l10
00024508 <AmiBlitz3.ab2@8388>   TST.w ininclude
0002450C <AmiBlitz3.ab2@8389>   BNE errorjoin
00024512 <AmiBlitz3.ab2@8390>   MOVEA.l sourceline,A5
00024514 <AmiBlitz3.ab2@8391>            MOVEA.l (A5),A5
0002451A <AmiBlitz3.ab2@8392>            MOVE.l a5,sourceline
00024520 <AmiBlitz3.ab2@8393>            ADDQ.l #1,linenumat
00024524 <AmiBlitz3.ab2@8394>            LEA $9(A5),A5
00024526 <AmiBlitz3.ab2@8395>            MOVEQ #0,d0
0002452A <AmiBlitz3.ab2@8396>            BSR get1bytemain
0002452E <AmiBlitz3.ab2@8399>    CMP.b #32,(a5)+ ;for space after a ,
00024532 <AmiBlitz3.ab2@8400>    BEQ fetchpees__skip0_l10:
00024534 <AmiBlitz3.ab2@8401>    SUBQ.l #1,a5
00024538 <AmiBlitz3.ab2@8403>    CMP.w #"@@",(a5)                                        ;if merge
0002453C <AmiBlitz3.ab2@8404>    BNE fetchpees__skip0_l15
00024540 <AmiBlitz3.ab2@8405>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00024546 <AmiBlitz3.ab2@8406>    JSR mergeline
0002454A <AmiBlitz3.ab2@8407>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
0002454C <AmiBlitz3.ab2@8427>       SUBQ.w #1,(A7)
00024550 <AmiBlitz3.ab2@8428>    BEQ.w fetchpees__done
00024554 <AmiBlitz3.ab2@8430>     CMP.w #$2C,D0
00024558 <AmiBlitz3.ab2@8432>    BNE overloadfunc
0002455C <AmiBlitz3.ab2@8433> BRA.w fetchpees__loop
0002455E <AmiBlitz3.ab2@8436>   ADDQ.w #2,A7
00024564 <AmiBlitz3.ab2@8437>   MOVE.w (A7)+,partostack
00024566 <AmiBlitz3.ab2@8438>   MOVE.w (A7)+,D1
0002456C <AmiBlitz3.ab2@8439>   CLR.b isconstantvalue
00024576 <AmiBlitz3.ab2@8440>   MOVE.l currentfunccall,lastfunction
0002457C <AmiBlitz3.ab2@8441>   CLR.b funccall
00024582 <AmiBlitz3.ab2@8442>   CLR.l currentfunccall
00024584 <AmiBlitz3.ab2@8443> RTS
0002458A <AmiBlitz3.ab2@8447>   CLR.b funccall
00024590 <AmiBlitz3.ab2@8448>   MOVE.w regnum,d1
00024596 <AmiBlitz3.ab2@8449>   MOVE.l currentfunccall,a4
0002459A <AmiBlitz3.ab2@8450>   CMP.b $20(a4),d1                                         ;increase if more pars
0002459E <AmiBlitz3.ab2@8451>   BLT notparerr
000245A0 <AmiBlitz3.ab2@8454>   MOVE.b (a2)+,d2
000245A8 <AmiBlitz3.ab2@8455>   ADD.w #1,parnum
000245AE <AmiBlitz3.ab2@8456>   TST.b fpu
000245B2 <AmiBlitz3.ab2@8457>   BEQ 'nofpu
000245B6 <AmiBlitz3.ab2@8458>   CMP.b #5,d2
000245BA <AmiBlitz3.ab2@8459>   BNE 'nofpu
000245BC <AmiBlitz3.ab2@8460>   MOVEQ #0,d1
000245C2 <AmiBlitz3.ab2@8461>   MOVE.w regnum,d1
000245CA <AmiBlitz3.ab2@8462>   CMP.w #6,regnum
000245CE <AmiBlitz3.ab2@8463>   BLT 'nostack2
000245D2 <AmiBlitz3.ab2@8468>   MOVE.w #$2c3c,d1
000245D6 <AmiBlitz3.ab2@8469>   BSR writeword
000245DC <AmiBlitz3.ab2@8470>   MOVE.l #$bf800000,d1
000245E0 <AmiBlitz3.ab2@8471>   BSR writelong
000245E4 <AmiBlitz3.ab2@8472>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000245EA <AmiBlitz3.ab2@8473>   ADD.w parnum,d1
000245F0 <AmiBlitz3.ab2@8474>   JSR Atokejsr
000245F6 <AmiBlitz3.ab2@8475>   TST.w dontwrite
000245FA <AmiBlitz3.ab2@8476>   BNE 'l1
00024600 <AmiBlitz3.ab2@8477>   MOVE.l data1start,d1
00024606 <AmiBlitz3.ab2@8478>   MOVE.l destpointer,a4
0002460A <AmiBlitz3.ab2@8479>   ADD.l d1,-4(a4)
00024610 <AmiBlitz3.ab2@8480>   MOVE.l destpointer,d1
00024612 <AmiBlitz3.ab2@8481>   SUBQ.l #4,d1
00024618 <AmiBlitz3.ab2@8482>   SUB.l destbufferstart,d1
0002461A <AmiBlitz3.ab2@8483>   MOVE.l d2,-(a7)
0002461C <AmiBlitz3.ab2@8484>   MOVE.l d1,d2
00024622 <AmiBlitz3.ab2@8485>   JSR addhunkoffset
00024624 <AmiBlitz3.ab2@8486>   MOVE.l (a7)+,d2
00024628 <AmiBlitz3.ab2@8487> BRA 'l1
0002462A <AmiBlitz3.ab2@8490>   ASL.l #7,d1
00024630 <AmiBlitz3.ab2@8491>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00024634 <AmiBlitz3.ab2@8492>   BSR writelong
00024636 <AmiBlitz3.ab2@8493>   MOVEQ #-1,d1                                             ;-1
0002463A <AmiBlitz3.ab2@8494>   BSR writeword
0002463E <AmiBlitz3.ab2@8495> BRA 'l1
00024644 <AmiBlitz3.ab2@8498>   MOVE.w regnum,d1
0002464C <AmiBlitz3.ab2@8499>   CMP.w #6,regnum
00024650 <AmiBlitz3.ab2@8500>   BLT 'nostack
00024654 <AmiBlitz3.ab2@8505>   CMP.b #2,d2
00024658 <AmiBlitz3.ab2@8506>   BGT 'nw
0002465C <AmiBlitz3.ab2@8507> BRA 'nos
00024660 <AmiBlitz3.ab2@8516>   CMP.w #7,d2
00024664 <AmiBlitz3.ab2@8517>   BNE 'nos
0002466A <AmiBlitz3.ab2@8518>   ADDQ #4,a2offset
00024670 <AmiBlitz3.ab2@8520>     MOVE.l #$48780000,d1
00024674 <AmiBlitz3.ab2@8521>     BSR writelong
0002467A <AmiBlitz3.ab2@8522>     ADDQ.w #4,a2offset
0002467E <AmiBlitz3.ab2@8523>     MOVE.w #$2f3c,d1
00024682 <AmiBlitz3.ab2@8524>     BSR writeword
00024688 <AmiBlitz3.ab2@8525>     MOVE.l #-1,d1
0002468C <AmiBlitz3.ab2@8526>     BSR writelong
00024690 <AmiBlitz3.ab2@8527>   BRA 'l1
00024694 <AmiBlitz3.ab2@8531>   CMP.b #4,d2
00024698 <AmiBlitz3.ab2@8532>       BNE 'noq
0002469C <AmiBlitz3.ab2@8533>       MOVE.w #$2c3c,d1
000246A0 <AmiBlitz3.ab2@8534>       BSR writeword
000246A6 <AmiBlitz3.ab2@8535>       MOVE.l #$ffff0000,d1
000246AA <AmiBlitz3.ab2@8536>       BSR writelong
000246AE <AmiBlitz3.ab2@8537> BRA 'noq2
000246B2 <AmiBlitz3.ab2@8540>      CMP.b #5,d2
000246B6 <AmiBlitz3.ab2@8541>      BNE 'nof
000246BA <AmiBlitz3.ab2@8542>       MOVE.w #$2c3c,d1
000246BE <AmiBlitz3.ab2@8543>       BSR writeword
000246C4 <AmiBlitz3.ab2@8544>       MOVE.l #$800000c1,d1
000246C8 <AmiBlitz3.ab2@8545>       BSR writelong
000246CC <AmiBlitz3.ab2@8546> BRA 'noq2
000246D0 <AmiBlitz3.ab2@8549>   MOVE.w #$7cff,d1
000246D4 <AmiBlitz3.ab2@8550>   BSR writeword
000246D8 <AmiBlitz3.ab2@8553>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000246DE <AmiBlitz3.ab2@8554>   ADD.w parnum,d1
000246E4 <AmiBlitz3.ab2@8555>   JSR Atokejsr
000246EA <AmiBlitz3.ab2@8556>    TST.w dontwrite
000246EE <AmiBlitz3.ab2@8557>    BNE 'l1
000246F4 <AmiBlitz3.ab2@8558>    MOVE.l data1start,d1
000246FA <AmiBlitz3.ab2@8559>    MOVE.l destpointer,a4
000246FE <AmiBlitz3.ab2@8560>    ADD.l d1,-4(a4)
00024704 <AmiBlitz3.ab2@8561>    MOVE.l destpointer,d1
00024706 <AmiBlitz3.ab2@8562>    SUBQ.l #4,d1
0002470C <AmiBlitz3.ab2@8563>    SUB.l destbufferstart,d1
0002470E <AmiBlitz3.ab2@8564>    MOVE.l d2,-(a7)
00024710 <AmiBlitz3.ab2@8565>    MOVE.l d1,d2
00024716 <AmiBlitz3.ab2@8566>    JSR addhunkoffset
00024718 <AmiBlitz3.ab2@8567>    MOVE.l (a7)+,d2
0002471C <AmiBlitz3.ab2@8568> BRA 'l1
0002471E <AmiBlitz3.ab2@8571>   ASL.l #8,d1
00024720 <AmiBlitz3.ab2@8572>   ASL.l #1,d1
00024726 <AmiBlitz3.ab2@8573>   OR.l #$203c,d1                                           ;-1
0002472A <AmiBlitz3.ab2@8574>   BSR writeword
00024730 <AmiBlitz3.ab2@8575>   MOVE.l #-1,d1
00024734 <AmiBlitz3.ab2@8576>   CMP.b #4,d2
00024738 <AmiBlitz3.ab2@8577>   BNE 'nq1
0002473E <AmiBlitz3.ab2@8578>   MOVE.l #$ffff0000,d1
00024742 <AmiBlitz3.ab2@8581>   CMP.b #5,d2
00024746 <AmiBlitz3.ab2@8582>   BNE 'nof2
0002474C <AmiBlitz3.ab2@8583>   TST.b fpu
00024750 <AmiBlitz3.ab2@8584>   BNE 'nof2
00024756 <AmiBlitz3.ab2@8585>   MOVE.l #$800000c1,d1
0002475A <AmiBlitz3.ab2@8588>    BSR writelong
0002475E <AmiBlitz3.ab2@8589>    CMP.b #7,d2
00024762 <AmiBlitz3.ab2@8590>    BNE 'l1
00024768 <AmiBlitz3.ab2@8592>      MOVE.l #$48780000,d1
0002476C <AmiBlitz3.ab2@8593>      BSR writelong
00024772 <AmiBlitz3.ab2@8595>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00024778 <AmiBlitz3.ab2@8596>    MOVE.l #$594f,d1                                        ; subq #4,a7
0002477C <AmiBlitz3.ab2@8597>    BSR writeword
0002477E <AmiBlitz3.ab2@8600>    SUBQ.w #1,(A7)
00024782 <AmiBlitz3.ab2@8601>    BEQ.w fetchpees__done
00024788 <AmiBlitz3.ab2@8602>    ADDQ.w #1,regnum
0002478C <AmiBlitz3.ab2@8603> BRA 'ol2
0002478E <AmiBlitz3.ab2@8606>    MOVE.w D2,D1
00024792 <AmiBlitz3.ab2@8607>    ANDI.w #$40,D1
00024798 <AmiBlitz3.ab2@8608>    MOVE.b D1,partostack
0002479A <AmiBlitz3.ab2@8609>    TST.b D2
0002479E <AmiBlitz3.ab2@8610>     BMI.w handlevara
000247A2 <AmiBlitz3.ab2@8611>    BTST #$5,D2
000247A6 <AmiBlitz3.ab2@8612>     BNE.w handlearr
000247AC <AmiBlitz3.ab2@8613>     MOVE.w regnumstore,-(a7)
000247B2 <AmiBlitz3.ab2@8614>     MOVE.w tempregnum,-(a7)
000247B8 <AmiBlitz3.ab2@8615>     MOVE.w parnum,-(a7)
000247BC <AmiBlitz3.ab2@8616>     BSR.w getap                                        ;recursive entry
000247C2 <AmiBlitz3.ab2@8617>     MOVE.w (a7)+,parnum
000247C8 <AmiBlitz3.ab2@8618>     MOVE.w (a7)+,tempregnum
000247CE <AmiBlitz3.ab2@8619>     MOVE.w (a7)+,regnumstore
000247D2 <AmiBlitz3.ab2@8622>     MOVE.w partostack(PC),D1
000247D6 <AmiBlitz3.ab2@8623>     BEQ.w JL_0_6886
000247DC <AmiBlitz3.ab2@8626>    ADDQ.w #4,a2offset
000247E2 <AmiBlitz3.ab2@8629>    MOVE.w pushdn,D1
000247E8 <AmiBlitz3.ab2@8630>    OR.w regnum,D1
000247EC <AmiBlitz3.ab2@8631>    CMP.w #$3,D2
000247F0 <AmiBlitz3.ab2@8632>     BCC.w JL_0_6880
000247F6 <AmiBlitz3.ab2@8633>    SUBQ.w #2,a2offset
000247FA <AmiBlitz3.ab2@8634>    ORI.w #$1000,D1
000247FE <AmiBlitz3.ab2@8635>    BSR.w writeword
00024800 <AmiBlitz3.ab2@8636> RTS
00024804 <AmiBlitz3.ab2@8639>   CMP.b #7,d2
00024808 <AmiBlitz3.ab2@8640>    BNE 'l10
00024810 <AmiBlitz3.ab2@8641>    CMP.b #2,optistring
00024816 <AmiBlitz3.ab2@8645>   TST.b iee
0002481A <AmiBlitz3.ab2@8646>   BEQ 'old
0002481E <AmiBlitz3.ab2@8647>   CMP.b #5,d2
00024822 <AmiBlitz3.ab2@8648>   BNE 'old
00024826 <AmiBlitz3.ab2@8651>   BSR.w writeword                                          ;write val to stack
00024828 <AmiBlitz3.ab2@8652> RTS
0002482E <AmiBlitz3.ab2@8655>   SUBQ.w #4,a2offset
00024830 <AmiBlitz3.ab2@8656> RTS
00024836 <AmiBlitz3.ab2@8659>   ADDQ.w #1,regnum
00024838 <AmiBlitz3.ab2@8660> RTS
0002483A <AmiBlitz3.ab2@8664>   MOVEQ.l #$03,D2
0002483E <AmiBlitz3.ab2@8665> BRA.w JL_0_6854
00024842 <AmiBlitz3.ab2@8669>   ANDI.w #$7,D2
00024844 <AmiBlitz3.ab2@8670>   MOVE.w D2,-(A7)
00024848 <AmiBlitz3.ab2@8671>    BSR.w JL_0_A916
0002484C <AmiBlitz3.ab2@8672>   CMP.b #$7,D2                                             ;ignore pnt to $
00024850 <AmiBlitz3.ab2@8673>    BEQ.w JL_0_68C0
00024854 <AmiBlitz3.ab2@8674>   BTST #$E,D2
00024858 <AmiBlitz3.ab2@8675>    BEQ.w JL_0_68B6
0002485C <AmiBlitz3.ab2@8676>   MOVE.b #$3,D2                                            ;pointer to long
00024860 <AmiBlitz3.ab2@8677> BRA.w JL_0_68C0
00024862 <AmiBlitz3.ab2@8680>    TST.b D2
00024866 <AmiBlitz3.ab2@8681>    BNE.w JL_0_68C0
0002486A <AmiBlitz3.ab2@8682>   MOVE.b #$3,D2
0002486C <AmiBlitz3.ab2@8685>   MOVE.w (A7)+,D3
0002486E <AmiBlitz3.ab2@8686>   TST.b D3
00024872 <AmiBlitz3.ab2@8687>    BEQ.w JL_0_68D2
00024874 <AmiBlitz3.ab2@8688>   CMP.b D2,D3
00024878 <AmiBlitz3.ab2@8689>    BEQ.w putalp
0002487C <AmiBlitz3.ab2@8690> BRA.w mismatcherr
00024882 <AmiBlitz3.ab2@8693>   ADDQ.w #2,a2offset
00024886 <AmiBlitz3.ab2@8694>   MOVE.w ptype(PC),D1
0002488A <AmiBlitz3.ab2@8695>    BSR.w writeword
0002488C <AmiBlitz3.ab2@8696>   MOVEQ.l #$00,D1
0002488E <AmiBlitz3.ab2@8697>   MOVE.b D2,D1
00024892 <AmiBlitz3.ab2@8698>    BSR.w writeword
00024896 <AmiBlitz3.ab2@8699> BRA.w putalp
00024898 <AmiBlitz3.ab2@8702>    MOVE.w D2,-(A7)
0002489C <AmiBlitz3.ab2@8703>    BSR.w JL_0_694E
000248A2 <AmiBlitz3.ab2@8704>   BTST #$4,$1(A7)
000248A6 <AmiBlitz3.ab2@8705>    BEQ.w JL_0_6900
000248AA <AmiBlitz3.ab2@8706>    BSR.w JL_0_699A
000248B0 <AmiBlitz3.ab2@8709>    BTST #$3,$1(A7)
000248B4 <AmiBlitz3.ab2@8710>    BEQ.w JL_0_690E
000248B8 <AmiBlitz3.ab2@8711>    BSR.w sendtype
000248BA <AmiBlitz3.ab2@8714>    MOVE.w (A7)+,D2
000248BE <AmiBlitz3.ab2@8715> BRA.w get1bytemain
000248C4 <AmiBlitz3.ab2@8718>   MOVE.w regnum,D1
000248C6 <AmiBlitz3.ab2@8719>   LSL.w #8,D1
000248C8 <AmiBlitz3.ab2@8720>   LSL.w #1,D1
000248CC <AmiBlitz3.ab2@8721>   ORI.w #$7000,D1
000248D2 <AmiBlitz3.ab2@8722>   BTST #$0,$7(A3)
000248D6 <AmiBlitz3.ab2@8723>    BNE.w JL_0_6946                                         ;A Pointer
000248DE <AmiBlitz3.ab2@8724>   CMPI.l #$100,$4(A2)
000248E2 <AmiBlitz3.ab2@8725>    BCC.w arrerr1                                           ;illegal type to send
000248E6 <AmiBlitz3.ab2@8726>   MOVE.b $7(A2),D1
000248EA <AmiBlitz3.ab2@8729>   BSR.w writeword                                          ;moveq #type,d regat
000248EC <AmiBlitz3.ab2@8730>   MOVEQ.l #$02,D2                                          ;just a word.
000248F0 <AmiBlitz3.ab2@8731> BRA.w JL_0_685C
000248F4 <AmiBlitz3.ab2@8734>   MOVE.b #$3,D1
000248F8 <AmiBlitz3.ab2@8735> BRA.w JL_0_693C
000248FC <AmiBlitz3.ab2@8739>    BSR.w get1bytemain                                      ;write array paramter code
00024900 <AmiBlitz3.ab2@8740>    BSR.w getparameter
00024908 <AmiBlitz3.ab2@8741>   BTST #$1,flagmask+1
0002490C <AmiBlitz3.ab2@8742>    BEQ.w syntaxerr
00024910 <AmiBlitz3.ab2@8743>    BSR.w JL_0_8E3C
00024914 <AmiBlitz3.ab2@8744>    BSR.w get1bytemain
00024918 <AmiBlitz3.ab2@8745>   CMP.w #$29,D0                                            ;we just want a() or whatever
0002491C <AmiBlitz3.ab2@8746>    BNE.w syntaxerr
00024922 <AmiBlitz3.ab2@8747>   MOVE.w notshared,D1
00024926 <AmiBlitz3.ab2@8748>    BNE.w noarrayerr
0002492C <AmiBlitz3.ab2@8749>   MOVE.w regnum,D1
0002492E <AmiBlitz3.ab2@8750>   LSL.w #8,D1
00024930 <AmiBlitz3.ab2@8751>   LSL.w #1,D1
00024934 <AmiBlitz3.ab2@8752>   OR.w fbase(PC),D1
0002493A <AmiBlitz3.ab2@8753>    TST.b varmode
0002493E <AmiBlitz3.ab2@8754>    BEQ 'l1
00024942 <AmiBlitz3.ab2@8755>    BCLR #0,d1
00024946 <AmiBlitz3.ab2@8758>    BSR.w writeword
0002494A <AmiBlitz3.ab2@8759>   MOVE.w $4(A3),D1
0002494E <AmiBlitz3.ab2@8760>    BSR.w writeword
00024952 <AmiBlitz3.ab2@8761> BRA.w putalp
00024958 <AmiBlitz3.ab2@8765>   MOVE.w regnum,D1
0002495A <AmiBlitz3.ab2@8766>   LSL.w #8,D1
0002495C <AmiBlitz3.ab2@8767>   LSL.w #1,D1
00024960 <AmiBlitz3.ab2@8768>   OR.w fbase(PC),D1
00024966 <AmiBlitz3.ab2@8769>    TST.b varmode
0002496A <AmiBlitz3.ab2@8770>    BEQ 'l1
0002496E <AmiBlitz3.ab2@8771>    BCLR #0,d1
00024972 <AmiBlitz3.ab2@8774>    BSR.w writeword
00024976 <AmiBlitz3.ab2@8775>   MOVE.w $8(A3),D1
00024978 <AmiBlitz3.ab2@8776>   LSL.w #2,D1
0002497E <AmiBlitz3.ab2@8777>   MOVE.w varmode,D2
00024982 <AmiBlitz3.ab2@8778>    BEQ.w JL_0_69BE
00024984 <AmiBlitz3.ab2@8779>   NEG.w D1
00024988 <AmiBlitz3.ab2@8782>    ADD.w $4(A3),D1
0002498C <AmiBlitz3.ab2@8783>    BSR.w writeword
00024992 <AmiBlitz3.ab2@8784>   MOVE.w regnum,D1
00024994 <AmiBlitz3.ab2@8785>   LSL.w #8,D1
00024996 <AmiBlitz3.ab2@8786>   LSL.w #1,D1
0002499A <AmiBlitz3.ab2@8787>   MOVE.w partostack(PC),D2
0002499E <AmiBlitz3.ab2@8788>    BNE.w JL_0_69F4
000249A6 <AmiBlitz3.ab2@8789>   CMPI.w #$7,regnum
000249AA <AmiBlitz3.ab2@8790>    BCC.w JL_0_69F4
000249AE <AmiBlitz3.ab2@8791>   OR.w pushlast(PC),D1
000249B4 <AmiBlitz3.ab2@8792>   MOVE.w regnum,D2
000249B6 <AmiBlitz3.ab2@8793>   SUBQ.w #1,D2
000249B8 <AmiBlitz3.ab2@8794>   OR.w D2,D1
000249BC <AmiBlitz3.ab2@8795> BRA.w JL_0_69F8
000249C0 <AmiBlitz3.ab2@8798>   OR.w pushadd(PC),D1
000249C4 <AmiBlitz3.ab2@8801>   BSR.w writeword
000249CC <AmiBlitz3.ab2@8802>   MOVE.b #$1,partostack
000249D0 <AmiBlitz3.ab2@8803> BRA.w putalp
000249D4 <AmiBlitz3.ab2@8807> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
000249D6 <AmiBlitz3.ab2@8808> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
000249D8 <AmiBlitz3.ab2@8809> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
000249DC <AmiBlitz3.ab2@8814>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
000249E0 <AmiBlitz3.ab2@8815>    BEQ.w evalu2
000249E4 <AmiBlitz3.ab2@8816> BRA.w eval
000249EA <AmiBlitz3.ab2@8820>   MOVEA.l libpointer,A1
000249EE <AmiBlitz3.ab2@8823>    CMPA.w #$0,A1
000249F2 <AmiBlitz3.ab2@8824>    BEQ.w resetlibs__done
000249F8 <AmiBlitz3.ab2@8825>   MOVE.w #-1,$A(A1)
000249FE <AmiBlitz3.ab2@8826>   BCLR #$7,$C(A1)
00024A00 <AmiBlitz3.ab2@8827>   MOVEA.l (A1),A1
00024A04 <AmiBlitz3.ab2@8828> BRA.w resetlibs__loop
00024A06 <AmiBlitz3.ab2@8831> RTS
00024A0A <AmiBlitz3.ab2@8835>   MOVE.w #$FFFE,D1
00024A0E <AmiBlitz3.ab2@8838>    BSR.w JL_0_6F38
00024A14 <AmiBlitz3.ab2@8841>   TST.w cfetchmode
00024A18 <AmiBlitz3.ab2@8842>    BEQ.w uselib3__noconst
00024A1E <AmiBlitz3.ab2@8843>   BTST #$6,$C(A1)
00024A22 <AmiBlitz3.ab2@8844>    BNE.w uselib3__constok
00024A26 <AmiBlitz3.ab2@8845> BRA.w badconerr                                            ;Can't use this Library!
00024A28 <AmiBlitz3.ab2@8848> RTS
00024A2E <AmiBlitz3.ab2@8851>    BSET #$7,$C(A1)
00024A32 <AmiBlitz3.ab2@8852>    BNE.w JL_0_6C74                                         ;already done....
00024A38 <AmiBlitz3.ab2@8853>    CMPI.w #-1,$A(A1)
00024A3C <AmiBlitz3.ab2@8854>    BNE.w JL_0_6C74                                         ;something already here
00024A42 <AmiBlitz3.ab2@8858>    TST.w dirmode
00024A46 <AmiBlitz3.ab2@8859>    BEQ.b JL_0_6A86
00024A4C <AmiBlitz3.ab2@8860>    TST.b exdebug
00024A50 <AmiBlitz3.ab2@8861>    BEQ 'l1
00024A54 <AmiBlitz3.ab2@8862> BRA.b JL_0_6A86
00024A5A <AmiBlitz3.ab2@8865>   BCLR #$7,$C(A1)
00024A5E <AmiBlitz3.ab2@8866> BRA.w dirliberr
00024A64 <AmiBlitz3.ab2@8869>   MOVE.b debugmode,-(a7)
00024A68 <AmiBlitz3.ab2@8870>   MOVEM.l D1/A0/A2,-(A7)
00024A70 <AmiBlitz3.ab2@8876>   BTST #$7,use_debugger
00024A74 <AmiBlitz3.ab2@8877>   BNE 'debugon
00024A76 <AmiBlitz3.ab2@8878>   CLR.w D1
00024A7A <AmiBlitz3.ab2@8879> BRA.b 'debugoff
00024A7C <AmiBlitz3.ab2@8882>   SNE D1
00024A82 <AmiBlitz3.ab2@8885>   MOVE.b d1,debugmode
00024A84 <AmiBlitz3.ab2@8889>   MOVEA.l A1,A0
00024A88 <AmiBlitz3.ab2@8890>   ADDA.l $12(A1),A0
00024A8C <AmiBlitz3.ab2@8891>   TST.w -$2(A0)
00024A90 <AmiBlitz3.ab2@8892>    BEQ.w JL_0_6AD2
00024A94 <AmiBlitz3.ab2@8893>   MOVEM.l A0-A1,-(A7)
00024A98 <AmiBlitz3.ab2@8894>   MOVE.w #$FB4F,D1
00024A9C <AmiBlitz3.ab2@8895>    BSR.w uselib
00024AA0 <AmiBlitz3.ab2@8896>   MOVEM.l (A7)+,A0-A1
00024AA6 <AmiBlitz3.ab2@8897>   ADDQ.w #1,globalvarpointer
00024AAE <AmiBlitz3.ab2@8898>   BCLR #$0,globalvarpointer+1
00024AB6 <AmiBlitz3.ab2@8899>   MOVE.w globalvarpointer,-$6(A0)
00024ABC <AmiBlitz3.ab2@8900>   ADDQ.w #4,globalvarpointer
00024AC0 <AmiBlitz3.ab2@8901>   TST.l -$E(A0)
00024AC4 <AmiBlitz3.ab2@8902>    BEQ.w JL_0_6AD2
00024ACA <AmiBlitz3.ab2@8903>   ADDQ.w #4,globalvarpointer
00024AD2 <AmiBlitz3.ab2@8906>   MOVE.l libend,$28(A1)
00024AD4 <AmiBlitz3.ab2@8907>   MOVEA.l A1,A0
00024AD8 <AmiBlitz3.ab2@8908>   ADDA.l $12(A1),A0
00024ADA <AmiBlitz3.ab2@8909>   MOVE.l A1,D1
00024ADE <AmiBlitz3.ab2@8910>   ADD.l $6(A1),D1
00024AE2 <AmiBlitz3.ab2@8911>   TST.l $2C(A1)
00024AE6 <AmiBlitz3.ab2@8912>    BEQ.w JL_0_6AFE
00024AEC <AmiBlitz3.ab2@8914>   TST.b debugmode
00024AF0 <AmiBlitz3.ab2@8915>    BNE.w JL_0_6AFE
00024AF2 <AmiBlitz3.ab2@8916>   MOVE.l A1,D1
00024AF6 <AmiBlitz3.ab2@8917>   ADD.l $2C(A1),D1
00024AFC <AmiBlitz3.ab2@8920>   MOVEA.l libend,A2
00024B02 <AmiBlitz3.ab2@8923>   CMPA.l data1start,A2
00024B06 <AmiBlitz3.ab2@8924>    BCS.w JL_0_6B24
00024B0E <AmiBlitz3.ab2@8925>   MOVE.w #$FFFF,dontwrite
00024B10 <AmiBlitz3.ab2@8928>   ADDQ.w #2,A0
00024B12 <AmiBlitz3.ab2@8929>   ADDQ.w #2,A2
00024B14 <AmiBlitz3.ab2@8930>   CMPA.l D1,A0
00024B18 <AmiBlitz3.ab2@8931>    BCS.w JL_0_6B16
00024B1C <AmiBlitz3.ab2@8932> BRA.w JL_0_6B2C
00024B1E <AmiBlitz3.ab2@8935>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00024B20 <AmiBlitz3.ab2@8936>   CMPA.l D1,A0
00024B24 <AmiBlitz3.ab2@8937>    BCS.w JL_0_6B04
00024B2A <AmiBlitz3.ab2@8940>   MOVE.l A2,libend
00024B2E <AmiBlitz3.ab2@8941>   MOVE.l $20(A1),D1
00024B32 <AmiBlitz3.ab2@8942>    BEQ.w JL_0_6BB8
00024B36 <AmiBlitz3.ab2@8943>   MOVEM.l D0/D2-D3,-(A7)
00024B3A <AmiBlitz3.ab2@8944>   MOVEA.l $24(A1),A0
00024B3C <AmiBlitz3.ab2@8945>   MOVEQ.l #$00,D3
00024B3E <AmiBlitz3.ab2@8948>   MOVE.l (A0)+,D2
00024B42 <AmiBlitz3.ab2@8949>   TST.l $2C(A1)
00024B46 <AmiBlitz3.ab2@8950>    BEQ.w JL_0_6B60
00024B4C <AmiBlitz3.ab2@8951>   TST.b debugmode
00024B50 <AmiBlitz3.ab2@8952>    BNE.w JL_0_6B60
00024B54 <AmiBlitz3.ab2@8953>   CMP.l $2C(A1),D2
00024B58 <AmiBlitz3.ab2@8954>    BCC.w JL_0_6BA0
00024B5C <AmiBlitz3.ab2@8957>   TST.w $0(A1,D2.L)
00024B60 <AmiBlitz3.ab2@8958>    BPL.w JL_0_6B72
00024B62 <AmiBlitz3.ab2@8959>   TST.l D3
00024B66 <AmiBlitz3.ab2@8960>    BNE.w JL_0_6B72
00024B68 <AmiBlitz3.ab2@8961>   MOVE.l A0,D0
00024B6A <AmiBlitz3.ab2@8962>   MOVE.l D1,D3
00024B6E <AmiBlitz3.ab2@8965>   SUB.l $12(A1),D2
00024B72 <AmiBlitz3.ab2@8966>    BMI.w JL_0_6BA0
00024B76 <AmiBlitz3.ab2@8967>   ADD.l $28(A1),D2
00024B78 <AmiBlitz3.ab2@8968>   MOVE.l D2,-(A7)
00024B7E <AmiBlitz3.ab2@8969>   SUB.l destbufferstart,D2
00024B82 <AmiBlitz3.ab2@8970>    BSR.w addhunkoffset
00024B84 <AmiBlitz3.ab2@8971>   MOVEA.l (A7)+,A2
00024B8A <AmiBlitz3.ab2@8972>   TST.w dontwrite
00024B8E <AmiBlitz3.ab2@8973>    BNE.w JL_0_6BA0
00024B92 <AmiBlitz3.ab2@8974>   MOVE.l $28(A1),D2
00024B96 <AmiBlitz3.ab2@8975>   SUB.l $12(A1),D2
00024B98 <AmiBlitz3.ab2@8976>   ADD.l D2,(A2)
00024B9A <AmiBlitz3.ab2@8979>    SUBQ.l #1,D1
00024B9E <AmiBlitz3.ab2@8980>    BNE.w JL_0_6B44
00024BA0 <AmiBlitz3.ab2@8981>   MOVE.l D3,D2
00024BA4 <AmiBlitz3.ab2@8982>    BEQ.w JL_0_6BB4
00024BA6 <AmiBlitz3.ab2@8983>   MOVEA.l D0,A2
00024BA8 <AmiBlitz3.ab2@8984>   SUBQ.w #4,A2
00024BAC <AmiBlitz3.ab2@8985>    BSR.w JL_0_6E34
00024BB0 <AmiBlitz3.ab2@8988>    MOVEM.l (A7)+,D0/D2-D3
00024BB4 <AmiBlitz3.ab2@8991>    MOVEM.l (A7)+,D1/A0/A2
00024BB8 <AmiBlitz3.ab2@8992>   MOVEM.l D1-D2,-(A7)
00024BBC <AmiBlitz3.ab2@8993>   TST.w $1A(A1)
00024BC0 <AmiBlitz3.ab2@8994>    BNE.w JL_0_6BD0
00024BC4 <AmiBlitz3.ab2@8995>   CLR.w $A(A1)
00024BC8 <AmiBlitz3.ab2@8996> BRA.w JL_0_6C5E
00024BCE <AmiBlitz3.ab2@8999>   ADDQ.w #1,globalvarpointer
00024BD6 <AmiBlitz3.ab2@9000>   BCLR #$0,globalvarpointer+1
00024BDE <AmiBlitz3.ab2@9001>   MOVE.w globalvarpointer,$A(A1)
00024BE2 <AmiBlitz3.ab2@9002>   CMP.w #-$12D,D1
00024BE6 <AmiBlitz3.ab2@9003>    BNE.w JL_0_6C16
00024BEE <AmiBlitz3.ab2@9004>   MOVE.w $A(A1),movestdn+2
00024BF6 <AmiBlitz3.ab2@9005>   MOVE.w $A(A1),pusha3+2
00024BFE <AmiBlitz3.ab2@9006>   MOVE.w $A(A1),pusha32+2
00024C06 <AmiBlitz3.ab2@9007>   MOVE.w $A(A1),pulla3+2
00024C0E <AmiBlitz3.ab2@9008>   MOVE.w $A(A1),geta3+2
00024C12 <AmiBlitz3.ab2@9011>    CMP.w #-$3E9,D1
00024C16 <AmiBlitz3.ab2@9012>    BNE.w JL_0_6C3E
00024C1E <AmiBlitz3.ab2@9013>   MOVE.w $A(A1),dataget+2
00024C26 <AmiBlitz3.ab2@9014>   MOVE.w $A(A1),dataput+2
00024C2E <AmiBlitz3.ab2@9015>   MOVE.w $A(A1),rescode+6
00024C36 <AmiBlitz3.ab2@9016>   MOVE.w $A(A1),rescode2+2
00024C3C <AmiBlitz3.ab2@9019>   ADDQ.w #2,globalvarpointer
00024C40 <AmiBlitz3.ab2@9020>   TST.w $1A(A1)
00024C44 <AmiBlitz3.ab2@9021>    BMI.w JL_0_6C52
00024C4A <AmiBlitz3.ab2@9022>   ADDQ.w #2,globalvarpointer
00024C4E <AmiBlitz3.ab2@9025>   MOVEM.l D1/A1,-(A7)
00024C52 <AmiBlitz3.ab2@9026>   BSR.w uselib2
00024C56 <AmiBlitz3.ab2@9027>   MOVEM.l (A7)+,D1/A1
00024C58 <AmiBlitz3.ab2@9030>   MOVE.w D1,D2
00024C5C <AmiBlitz3.ab2@9031>   MOVE.l $16(A1),D1
00024C60 <AmiBlitz3.ab2@9032>    BSR.w uselib2_org
00024C64 <AmiBlitz3.ab2@9033>   MOVE.l $1C(A1),D1
00024C68 <AmiBlitz3.ab2@9034>    BSR.w uselib2_org
00024C6C <AmiBlitz3.ab2@9035>   MOVEM.l (A7)+,D1-D2
00024C72 <AmiBlitz3.ab2@9037>   MOVE.b (a7)+,debugmode
00024C74 <AmiBlitz3.ab2@9040> RTS
00024C76 <AmiBlitz3.ab2@9044>   MOVEQ.l #$00,D2
00024C7C <AmiBlitz3.ab2@9047>   MOVEA.l tokeslist,A2
00024C7E <AmiBlitz3.ab2@9048>   CMPA.l D2,A2
00024C82 <AmiBlitz3.ab2@9049>    BEQ.w JL_0_6CE0
00024C84 <AmiBlitz3.ab2@9050>   MOVE.l A2,-(A7)
00024C86 <AmiBlitz3.ab2@9053>   MOVEQ.l #$00,D3
00024C8A <AmiBlitz3.ab2@9056>   MOVEA.l $8(A2),A3
00024C8C <AmiBlitz3.ab2@9057>   CMPA.l D3,A3
00024C90 <AmiBlitz3.ab2@9058>    BEQ.w JL_0_6CD2
00024C92 <AmiBlitz3.ab2@9059>   MOVE.l A3,-(A7)
00024C96 <AmiBlitz3.ab2@9060>   MOVEM.l D2-D3/A2-A3,-(A7)
00024C9A <AmiBlitz3.ab2@9061>   MOVE.w $4(A2),D1
00024C9E <AmiBlitz3.ab2@9062>   MOVE.w $6(A2),D2
00024CA2 <AmiBlitz3.ab2@9063>    BSR.w JL_0_6CE2
00024CA6 <AmiBlitz3.ab2@9064>   MOVEM.l (A7)+,D2-D3/A2-A3
00024CAC <AmiBlitz3.ab2@9065>   MOVE.w dontwrite,D0
00024CB0 <AmiBlitz3.ab2@9066>    BEQ.w JL_0_6CBE
00024CB2 <AmiBlitz3.ab2@9069>   MOVEA.l (A3),A3
00024CB4 <AmiBlitz3.ab2@9070>   CMPA.l D3,A3
00024CB8 <AmiBlitz3.ab2@9071>    BNE.w JL_0_6CB2
00024CBC <AmiBlitz3.ab2@9072> BRA.w JL_0_6CCC
00024CC0 <AmiBlitz3.ab2@9075>   MOVEA.l $4(A3),A0
00024CC2 <AmiBlitz3.ab2@9076>   MOVE.l D7,(A0)
00024CC4 <AmiBlitz3.ab2@9077>   MOVEA.l (A3),A3
00024CC6 <AmiBlitz3.ab2@9078>   CMPA.l D3,A3
00024CCA <AmiBlitz3.ab2@9079>    BNE.w JL_0_6CBE
00024CCC <AmiBlitz3.ab2@9082>   MOVE.l (A7)+,D3
00024CD0 <AmiBlitz3.ab2@9083> BRA.w JL_0_6C88
00024CD2 <AmiBlitz3.ab2@9086>    MOVEA.l (A2),A2
00024CD4 <AmiBlitz3.ab2@9087>   CMPA.l D2,A2
00024CD8 <AmiBlitz3.ab2@9088>    BNE.w JL_0_6C86
00024CDA <AmiBlitz3.ab2@9089>   MOVE.l (A7)+,D2
00024CDE <AmiBlitz3.ab2@9090> BRA.w JL_0_6C78
00024CE0 <AmiBlitz3.ab2@9093> RTS
00024CE2 <AmiBlitz3.ab2@9097>   MOVE.w D2,-(A7)
00024CE6 <AmiBlitz3.ab2@9098>    BSR.w searchinstr
00024CE8 <AmiBlitz3.ab2@9099>   MOVE.w (A7)+,D2
00024CF0 <AmiBlitz3.ab2@9100>   BCLR #$7,blitzmode
00024CF4 <AmiBlitz3.ab2@9101>   BCLR #$E,D2
00024CF8 <AmiBlitz3.ab2@9102>    BEQ.w JL_0_6D02
00024D00 <AmiBlitz3.ab2@9103>   BSET #$7,blitzmode
00024D02 <AmiBlitz3.ab2@9106>   TST.w (A3)
00024D06 <AmiBlitz3.ab2@9107>    BEQ.w JL_0_6DAC
00024D0C <AmiBlitz3.ab2@9108>   BTST #$2,$1(A3)
00024D10 <AmiBlitz3.ab2@9109>    BNE.w tokeerr
00024D16 <AmiBlitz3.ab2@9110>   BTST #$3,$1(A3)
00024D1A <AmiBlitz3.ab2@9111>    BNE.w tokeerr
00024D1E <AmiBlitz3.ab2@9112>   LEA $6(A3),A3
00024D20 <AmiBlitz3.ab2@9115>   MOVE.w (A3)+,D0
00024D24 <AmiBlitz3.ab2@9116>    BMI.w tokeerr
00024D28 <AmiBlitz3.ab2@9117>   ANDI.w #$FF,D0
00024D2A <AmiBlitz3.ab2@9118>   ADDA.w D0,A3
00024D2C <AmiBlitz3.ab2@9119>   ADDQ.w #1,A3
00024D2E <AmiBlitz3.ab2@9120>   EXG.l D0,A3
00024D32 <AmiBlitz3.ab2@9121>   BCLR #$0,D0
00024D34 <AmiBlitz3.ab2@9122>   EXG.l D0,A3
00024D36 <AmiBlitz3.ab2@9123>   SUBQ.w #1,D2
00024D3A <AmiBlitz3.ab2@9124>    BPL.w JL_0_6D98
00024D3C <AmiBlitz3.ab2@9125>   TST.w (A3)
00024D40 <AmiBlitz3.ab2@9126>    BNE.w JL_0_6D76
00024D44 <AmiBlitz3.ab2@9127>   MOVE.l $2(A3),D0
00024D48 <AmiBlitz3.ab2@9128>   OR.l $A(A3),D0
00024D4C <AmiBlitz3.ab2@9129>    BNE.w JL_0_6D76
00024D52 <AmiBlitz3.ab2@9130>   BTST #$0,$9(A3)
00024D56 <AmiBlitz3.ab2@9131>    BNE.w JL_0_6D76
00024D5A <AmiBlitz3.ab2@9132>   MOVE.l $6(A3),D7
00024D5E <AmiBlitz3.ab2@9133>   MOVE.w $0(A2,D7.L),D0
00024D62 <AmiBlitz3.ab2@9134>   ANDI.w #$F000,D0
00024D66 <AmiBlitz3.ab2@9135>   CMP.w #-$6000,D0
00024D6A <AmiBlitz3.ab2@9136>    BEQ.w JL_0_6D76
00024D6E <AmiBlitz3.ab2@9139>   SUB.l $12(A2),D7
00024D72 <AmiBlitz3.ab2@9140>   ADD.l $28(A2),D7
00024D74 <AmiBlitz3.ab2@9141> RTS
00024D7A <AmiBlitz3.ab2@9145>   LEA cutejsr,A0
00024D80 <AmiBlitz3.ab2@9148>   MOVE.l destpointer,-(A7)
00024D88 <AmiBlitz3.ab2@9149>   MOVE.w #$FFFF,lasta6
00024D8A <AmiBlitz3.ab2@9152>    JSR (A0)
00024D8E <AmiBlitz3.ab2@9153>   MOVE.w #$4E75,D1
00024D92 <AmiBlitz3.ab2@9154>    BSR.w writeword
00024D94 <AmiBlitz3.ab2@9155>   MOVE.l (A7)+,D7
00024D96 <AmiBlitz3.ab2@9156> RTS
00024D98 <AmiBlitz3.ab2@9160>   TST.w (A3)+
00024D9C <AmiBlitz3.ab2@9161>    BEQ.w JL_0_6DA4
00024D9E <AmiBlitz3.ab2@9162>   ADDQ.w #2,A3
00024DA2 <AmiBlitz3.ab2@9163> BRA.w JL_0_6D98
00024DA6 <AmiBlitz3.ab2@9166>   LEA $C(A3),A3
00024DAA <AmiBlitz3.ab2@9167> BRA.w JL_0_6D20
00024DAC <AmiBlitz3.ab2@9171>   TST.w D2
00024DB0 <AmiBlitz3.ab2@9172>    BNE.w tokeerr
00024DB4 <AmiBlitz3.ab2@9173>   TST.w $6(A3)
00024DB8 <AmiBlitz3.ab2@9174>    BNE.w JL_0_6DE4
00024DBC <AmiBlitz3.ab2@9175>   MOVE.l $8(A3),D0
00024DC0 <AmiBlitz3.ab2@9176>   OR.l $10(A3),D0
00024DC4 <AmiBlitz3.ab2@9177>    BNE.w JL_0_6DE4
00024DCA <AmiBlitz3.ab2@9178>   BTST #$0,$F(A3)
00024DCE <AmiBlitz3.ab2@9179>    BNE.w JL_0_6DE4
00024DD2 <AmiBlitz3.ab2@9180>   MOVE.l $C(A3),D7
00024DD6 <AmiBlitz3.ab2@9181>   MOVE.w $0(A2,D7.L),D0
00024DDA <AmiBlitz3.ab2@9182>   ANDI.w #$F000,D0
00024DDE <AmiBlitz3.ab2@9183>   CMP.w #-$6000,D0
00024DE2 <AmiBlitz3.ab2@9184>    BNE.w JL_0_6D6C
00024DE4 <AmiBlitz3.ab2@9187>   MOVE.l A3,D1
00024DE6 <AmiBlitz3.ab2@9188>   SUB.l A2,D1
00024DEC <AmiBlitz3.ab2@9189>   LEA Amakelibsub,A0
00024DF0 <AmiBlitz3.ab2@9190> BRA.w JL_0_6D7C
00024DF6 <AmiBlitz3.ab2@9194>   MOVEA.l _execbase,A6
00024DFC <AmiBlitz3.ab2@9195>   MOVEA.l tokeslist,A2
00024E02 <AmiBlitz3.ab2@9196>   CLR.l tokeslist
00024E06 <AmiBlitz3.ab2@9199>     CMPA.w #$0,A2
00024E0A <AmiBlitz3.ab2@9200>      BEQ.w JL_0_6E32
00024E0E <AmiBlitz3.ab2@9201>     MOVEA.l $8(A2),A3
00024E12 <AmiBlitz3.ab2@9204>       CMPA.w #$0,A3
00024E16 <AmiBlitz3.ab2@9205>        BEQ.w JL_0_6E24
00024E18 <AmiBlitz3.ab2@9206>       MOVEA.l A3,A1
00024E1A <AmiBlitz3.ab2@9207>       MOVEA.l (A3),A3
00024E1C <AmiBlitz3.ab2@9208>       MOVEQ.l #$08,D0
00024E22 <AmiBlitz3.ab2@9209>       MOVE.l mempool,a0
00024E28 <AmiBlitz3.ab2@9210>       MOVEA.l _execbase,A6
00024E2C <AmiBlitz3.ab2@9211>       JSR _FreePooled(A6)
00024E30 <AmiBlitz3.ab2@9212> BRA.w JL_0_6E0E
00024E32 <AmiBlitz3.ab2@9215>     MOVEA.l A2,A1
00024E34 <AmiBlitz3.ab2@9216>     MOVEA.l (A2),A2
00024E36 <AmiBlitz3.ab2@9217>     MOVEQ.l #$0C,D0
00024E3C <AmiBlitz3.ab2@9218>     MOVE.l mempool,a0
00024E42 <AmiBlitz3.ab2@9219>     MOVEA.l _execbase,A6
00024E46 <AmiBlitz3.ab2@9220>     JSR _FreePooled(A6)
00024E4A <AmiBlitz3.ab2@9221> BRA.w JL_0_6E02
00024E4C <AmiBlitz3.ab2@9224> RTS
00024E50 <AmiBlitz3.ab2@9228>   MOVEM.l D3-D5/A1-A6,-(A7)
00024E52 <AmiBlitz3.ab2@9229>   MOVEA.l A1,A4
00024E54 <AmiBlitz3.ab2@9232>   MOVE.l (A2)+,D3
00024E58 <AmiBlitz3.ab2@9233>   MOVE.w $0(A4,D3.L),D5
00024E5C <AmiBlitz3.ab2@9234>    BPL.w JL_0_6E7A
00024E60 <AmiBlitz3.ab2@9235>   TST.l $2C(A4)
00024E64 <AmiBlitz3.ab2@9236>    BEQ.w JL_0_6E5E
00024E6A <AmiBlitz3.ab2@9237>   TST.b debugmode
00024E6E <AmiBlitz3.ab2@9238>    BNE.w JL_0_6E5E
00024E72 <AmiBlitz3.ab2@9239>   CMP.l $2C(A4),D3
00024E76 <AmiBlitz3.ab2@9240>    BCC.w JL_0_6E7A
00024E7A <AmiBlitz3.ab2@9243>   BCLR #$F,D5
00024E7E <AmiBlitz3.ab2@9244>   MOVE.w $2(A4,D3.L),D4
00024E82 <AmiBlitz3.ab2@9245>   SUB.l $12(A4),D3
00024E86 <AmiBlitz3.ab2@9246>   ADD.l $28(A4),D3
00024E8A <AmiBlitz3.ab2@9247>   MOVEM.l D2/A2/A4,-(A7)
00024E8E <AmiBlitz3.ab2@9248>    BSR.w JL_0_6E86
00024E92 <AmiBlitz3.ab2@9249>   MOVEM.l (A7)+,D2/A2/A4
00024E94 <AmiBlitz3.ab2@9252>   SUBQ.l #1,D2
00024E98 <AmiBlitz3.ab2@9253>    BNE.w JL_0_6E3A
00024E9C <AmiBlitz3.ab2@9254>   MOVEM.l (A7)+,D3-D5/A1-A6
00024E9E <AmiBlitz3.ab2@9255> RTS
00024EA4 <AmiBlitz3.ab2@9259>   LEA tokeslist,A3
00024EAA <AmiBlitz3.ab2@9260>   MOVEA.l _execbase,A6
00024EAC <AmiBlitz3.ab2@9263>   MOVE.l (A3),D0
00024EB0 <AmiBlitz3.ab2@9264>    BEQ.w JL_0_6EAC
00024EB2 <AmiBlitz3.ab2@9265>   MOVEA.l D0,A3
00024EB6 <AmiBlitz3.ab2@9266>   CMP.w $4(A3),D4
00024EBA <AmiBlitz3.ab2@9267>    BNE.w JL_0_6E90
00024EBE <AmiBlitz3.ab2@9268>   CMP.w $6(A3),D5
00024EC2 <AmiBlitz3.ab2@9269>    BNE.w JL_0_6E90
00024EC6 <AmiBlitz3.ab2@9270> BRA.w JL_0_6ED0
00024EC8 <AmiBlitz3.ab2@9273>   MOVEQ.l #$0C,D0
00024ECA <AmiBlitz3.ab2@9274>   MOVEQ.l #$01,D1
00024ED0 <AmiBlitz3.ab2@9275>   MOVE.l mempool,a0
00024ED4 <AmiBlitz3.ab2@9276>   JSR _AllocPooled(a6)
00024ED6 <AmiBlitz3.ab2@9278>   MOVEA.l D0,A3
00024EDC <AmiBlitz3.ab2@9279>   MOVE.l tokeslist,(A3)
00024EE2 <AmiBlitz3.ab2@9280>   MOVE.l A3,tokeslist
00024EE6 <AmiBlitz3.ab2@9281>   MOVE.w D4,$4(A3)
00024EEA <AmiBlitz3.ab2@9282>   MOVE.w D5,$6(A3)
00024EEE <AmiBlitz3.ab2@9283>   CLR.l $8(A3)
00024EF0 <AmiBlitz3.ab2@9286>   MOVEQ.l #$08,D0
00024EF2 <AmiBlitz3.ab2@9287>   MOVEQ.l #$01,D1
00024EF8 <AmiBlitz3.ab2@9288>   MOVE.l mempool,a0
00024EFC <AmiBlitz3.ab2@9289>   JSR _AllocPooled(a6)
00024EFE <AmiBlitz3.ab2@9291>   MOVEA.l D0,A0
00024F02 <AmiBlitz3.ab2@9292>   MOVE.l D3,$4(A0)
00024F06 <AmiBlitz3.ab2@9293>   MOVE.l $8(A3),(A0)
00024F0A <AmiBlitz3.ab2@9294>   MOVE.l A0,$8(A3)
00024F0C <AmiBlitz3.ab2@9295>   MOVE.w D4,D1
00024F10 <AmiBlitz3.ab2@9296> BRA.w searchinstr
00024F14 <AmiBlitz3.ab2@9299> tokeslist: Ds.l 1
00024F18 <AmiBlitz3.ab2@9312>   BEQ.w uselib2_org__skip
00024F1A <AmiBlitz3.ab2@9313>   MOVE.l A1,-(A7)
00024F1C <AmiBlitz3.ab2@9314>   ADDA.l D1,A1
00024F1E <AmiBlitz3.ab2@9315>   ADDQ.w #6,A1
00024F20 <AmiBlitz3.ab2@9318>     MOVE.w (A1)+,D1
00024F24 <AmiBlitz3.ab2@9319>     BEQ.w uselib2_org__done
00024F26 <AmiBlitz3.ab2@9320>     CMP.w D2,D1
00024F2A <AmiBlitz3.ab2@9321>     BEQ.w uselib2_org__skip2
00024F2C <AmiBlitz3.ab2@9322>     MOVE.l A1,-(A7)
00024F30 <AmiBlitz3.ab2@9323>     BSR.w uselib
00024F32 <AmiBlitz3.ab2@9324>     MOVEA.l (A7)+,A1
00024F34 <AmiBlitz3.ab2@9327>     ADDQ.w #2,A1
00024F38 <AmiBlitz3.ab2@9328> BRA.w uselib2_org__loop
00024F3A <AmiBlitz3.ab2@9331>   MOVEA.l (A7)+,A1
00024F3C <AmiBlitz3.ab2@9334> RTS
00024F42 <AmiBlitz3.ab2@9338>   MOVEA.l libpointer,A1
00024F46 <AmiBlitz3.ab2@9341>   CMPA.w #$0,A1
00024F4A <AmiBlitz3.ab2@9342>    BEQ.b JL_0_6F36
00024F4E <AmiBlitz3.ab2@9343>   CMP.w $4(A1),D1
00024F52 <AmiBlitz3.ab2@9344>    BEQ.w JL_0_6F34
00024F54 <AmiBlitz3.ab2@9345>   MOVEA.l (A1),A1
00024F58 <AmiBlitz3.ab2@9346> BRA.w JL_0_6F20
00024F5A <AmiBlitz3.ab2@9349>   MOVEQ.l #-$01,D1
00024F5C <AmiBlitz3.ab2@9352> RTS
00024F60 <AmiBlitz3.ab2@9356>   MOVEM.l d0/a2,-(a7)
00024F62 <AmiBlitz3.ab2@9357>   MOVEQ #0,d0
00024F68 <AmiBlitz3.ab2@9358>   LEA instrtab+4,a2
00024F6A <AmiBlitz3.ab2@9359>   MOVE.w d1,d0
00024F6C <AmiBlitz3.ab2@9360>   ASL.l #3,d0
00024F70 <AmiBlitz3.ab2@9361>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00024F76 <AmiBlitz3.ab2@9362>   CMP.l #0,a1
00024F7A <AmiBlitz3.ab2@9363>   BNE JL_0_6F54b
00024F80 <AmiBlitz3.ab2@9365>   MOVEA.l libpointer,A1
00024F84 <AmiBlitz3.ab2@9368>     CMPA.w #$0,A1
00024F88 <AmiBlitz3.ab2@9369>     BEQ.w noliberr
00024F8C <AmiBlitz3.ab2@9370>     CMP.w $4(A1),D1
00024F90 <AmiBlitz3.ab2@9371>     BEQ.w JL_0_6F54
00024F92 <AmiBlitz3.ab2@9372>    MOVEA.l (A1),A1
00024F96 <AmiBlitz3.ab2@9373> BRA.w JL_0_6F3E
00024F9A <AmiBlitz3.ab2@9376>   MOVE.l a1,0(a2,d0.l)
00024F9E <AmiBlitz3.ab2@9379>   MOVEM.l (a7)+,d0/a2
00024FA0 <AmiBlitz3.ab2@9380> RTS
00024FA4 <AmiBlitz3.ab2@9383>   MOVEM.l d0-d1/a1,-(a7)
00024FA6 <AmiBlitz3.ab2@9384>   MOVEQ #0,d0
00024FAC <AmiBlitz3.ab2@9385>   LEA instrtab,a1
00024FAE <AmiBlitz3.ab2@9386>   MOVE.w d1,d0
00024FB0 <AmiBlitz3.ab2@9387>   ASL.l #3,d0
00024FB4 <AmiBlitz3.ab2@9388>   MOVE.l 0(a1,d0.l),a3
00024FB8 <AmiBlitz3.ab2@9389>   MOVE.l 4(a1,d0.l),a2
00024FBE <AmiBlitz3.ab2@9390>   CMP.l #0,a3
00024FC2 <AmiBlitz3.ab2@9391>   BNE JL_0_6F92b
00024FC8 <AmiBlitz3.ab2@9393>   MOVEA.l libpointer,A2
00024FCC <AmiBlitz3.ab2@9396>   CMPA.w #$0,A2
00024FD0 <AmiBlitz3.ab2@9397>   BEQ.w notokerr
00024FD4 <AmiBlitz3.ab2@9398>   CMP.w $E(A2),D1
00024FD8 <AmiBlitz3.ab2@9399>   BCS.w JL_0_6FB8
00024FDC <AmiBlitz3.ab2@9400>   CMP.w $10(A2),D1
00024FE0 <AmiBlitz3.ab2@9401>   BCC.w JL_0_6FB8
00024FE4 <AmiBlitz3.ab2@9402>   LEA $30(A2),A3
00024FE8 <AmiBlitz3.ab2@9403>   TST.w $4(A2)
00024FEC <AmiBlitz3.ab2@9404>   BPL.w JL_0_6FA6
00024FF0 <AmiBlitz3.ab2@9407>     CMP.w $E(A2),D1
00024FF4 <AmiBlitz3.ab2@9408>     BEQ.w JL_0_6F92
00024FF6 <AmiBlitz3.ab2@9409>     SUBQ.w #1,D1
00024FFA <AmiBlitz3.ab2@9410>     MOVEA.l $2(A3),A3
00024FFE <AmiBlitz3.ab2@9411> BRA.w JL_0_6F80
00025002 <AmiBlitz3.ab2@9414>   MOVE.l a3,0(a1,d0.l)
00025006 <AmiBlitz3.ab2@9415>   MOVE.l a2,4(a1,d0.l)
0002500A <AmiBlitz3.ab2@9418>   MOVEM.l (a7)+,d0-d1/a1
0002500E <AmiBlitz3.ab2@9419>   MOVEM.l D1/A1-a3,-(A7)
00025012 <AmiBlitz3.ab2@9420>   CMP.w #1,(a3)
00025016 <AmiBlitz3.ab2@9421>   BNE.s ex10
0002501E <AmiBlitz3.ab2@9422>   CMP.l #$12345678,$e(a3)
00025022 <AmiBlitz3.ab2@9423>   BNE.s ex10
00025028 <AmiBlitz3.ab2@9424>   CMP.w #$ffff,$16(a3)
0002502C <AmiBlitz3.ab2@9425>   BNE.s ex10
00025030 <AmiBlitz3.ab2@9426>   MOVE.l $12(a3),d1
00025034 <AmiBlitz3.ab2@9427>   BEQ.s ex10
0002503A <AmiBlitz3.ab2@9428>   LEA pluginbase,a3
0002503E <AmiBlitz3.ab2@9430> JMP 0(a2,d1.l)                                             ;plugin
00025042 <AmiBlitz3.ab2@9433>   MOVEM.l (A7)+,D1/A1-a3
00025048 <AmiBlitz3.ab2@9434>   JSR stripspaces
0002504A <AmiBlitz3.ab2@9435>   MOVEQ #0,d0
0002504C <AmiBlitz3.ab2@9436>   MOVE.b (a5)+,d0
00025052 <AmiBlitz3.ab2@9437>   MOVE.w d0,lastchar
00025054 <AmiBlitz3.ab2@9438>   ADDQ.l #4,a7
00025056 <AmiBlitz3.ab2@9439> RTS
00025058 <AmiBlitz3.ab2@9443>   MOVEA.l A2,A1
0002505E <AmiBlitz3.ab2@9444>   CLR.b newmode
00025062 <AmiBlitz3.ab2@9445>   MOVE.w $4(A1),D1
00025066 <AmiBlitz3.ab2@9448>   BSR.w uselib3
0002506A <AmiBlitz3.ab2@9449>   MOVEM.l (A7)+,D1/A1-a3
0002506C <AmiBlitz3.ab2@9450> RTS
00025072 <AmiBlitz3.ab2@9453>   MOVE.w globalvarpointer,-(a7)
0002507A <AmiBlitz3.ab2@9454>   MOVE.w #$8004,globalvarpointer
0002507E <AmiBlitz3.ab2@9455>   BSR.w uselib3
00025084 <AmiBlitz3.ab2@9456>   MOVE.w (a7)+,globalvarpointer
00025088 <AmiBlitz3.ab2@9457>   MOVEM.l (A7)+,D1/A1-a3
0002508A <AmiBlitz3.ab2@9458> RTS
0002508E <AmiBlitz3.ab2@9461>     CMP.w $E(A2),D1
00025092 <AmiBlitz3.ab2@9462>     BEQ.w JL_0_6F92
00025094 <AmiBlitz3.ab2@9463>     SUBQ.w #1,D1
00025098 <AmiBlitz3.ab2@9464>     MOVEA.l $2(A3),A3
0002509C <AmiBlitz3.ab2@9465> BRA.w JL_0_6FA6
0002509E <AmiBlitz3.ab2@9468>   MOVEA.l (A2),A2
000250A2 <AmiBlitz3.ab2@9469> BRA.w JL_0_6F5C
000250A8 <AmiBlitz3.ab2@9472> JMP writeword
000250AC <AmiBlitz3.ab2@9475> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
000250B0 <AmiBlitz3.ab2@9476> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
000250B4 <AmiBlitz3.ab2@9477> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
000250B6 <AmiBlitz3.ab2@9483>   TST.l D0
000250BA <AmiBlitz3.ab2@9484>   BEQ.w exit_loadlibsfile
000250BC <AmiBlitz3.ab2@9485>     MOVE.l D0,D6                                           ;d6=len
000250C2 <AmiBlitz3.ab2@9486>     MOVEA.l _dosbase,A6
000250C8 <AmiBlitz3.ab2@9487>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000250CC <AmiBlitz3.ab2@9488>     JSR _Open(A6)
000250CE <AmiBlitz3.ab2@9489>     MOVE.l D0,D7
000250D2 <AmiBlitz3.ab2@9490>     BEQ.w exit_loadlibsfile
000250D4 <AmiBlitz3.ab2@9491>       MOVE.l D6,D0
000250D6 <AmiBlitz3.ab2@9492>       MOVEQ.l #$01,D1
000250DC <AmiBlitz3.ab2@9493>       MOVEA.l _execbase,A6
000250E2 <AmiBlitz3.ab2@9494>       MOVE.l mempool,a0
000250E6 <AmiBlitz3.ab2@9495>       JSR _AllocPooled(a6)
000250E8 <AmiBlitz3.ab2@9496>       MOVE.l D0,D5                                         ;start address
000250EA <AmiBlitz3.ab2@9498>       MOVE.l D7,D1                                         ; handle
000250EC <AmiBlitz3.ab2@9499>       MOVE.l D5,D2                                         ; buffer addr
000250EE <AmiBlitz3.ab2@9500>       MOVE.l D6,D3                                         ; size
000250F4 <AmiBlitz3.ab2@9501>       MOVEA.l _dosbase,A6
000250F8 <AmiBlitz3.ab2@9502>       JSR _Read(A6)
000250FA <AmiBlitz3.ab2@9503>       MOVE.l D7,D1
000250FE <AmiBlitz3.ab2@9504>       JSR _Close(A6)
00025100 <AmiBlitz3.ab2@9506>       MOVEA.l D5,A0                                        ; buffer addr
00025102 <AmiBlitz3.ab2@9512>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00025106 <AmiBlitz3.ab2@9513>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
0002510A <AmiBlitz3.ab2@9514>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
0002510C <AmiBlitz3.ab2@9515>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0002510E <AmiBlitz3.ab2@9516>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00025110 <AmiBlitz3.ab2@9517>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00025114 <AmiBlitz3.ab2@9518>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00025116 <AmiBlitz3.ab2@9519>           ADD.l D0,D0                                      ;   verdoppele D0
00025118 <AmiBlitz3.ab2@9520>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
0002511C <AmiBlitz3.ab2@9521>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00025120 <AmiBlitz3.ab2@9522>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00025124 <AmiBlitz3.ab2@9523>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00025126 <AmiBlitz3.ab2@9524>           CMPA.l A0,A2
0002512A <AmiBlitz3.ab2@9525>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00025130 <AmiBlitz3.ab2@9526>             MOVE.l -$8(A2),$20(A1)                         ;
00025134 <AmiBlitz3.ab2@9527>             MOVE.l A2,$24(A1)                              ;
00025138 <AmiBlitz3.ab2@9528> BRA.w JL_0_7010
0002513A <AmiBlitz3.ab2@9531>       MOVE.l D5,D0
0002513C <AmiBlitz3.ab2@9534> RTS
00025166 <AmiBlitz3.ab2@9538>   !basic
000251DA <AmiBlitz3.ab2@9539>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
0002520E <AmiBlitz3.ab2@9540>    dos_Delete{tempmapping$}
00025252 <AmiBlitz3.ab2@9541>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00025270 <AmiBlitz3.ab2@9542>   !asm
00025276 <AmiBlitz3.ab2@9544>   LEA libpointer,A3
0002527C <AmiBlitz3.ab2@9548>   MOVE.l size_deflibs,D0
00025282 <AmiBlitz3.ab2@9549>   MOVE.l deflib,d1
00025286 <AmiBlitz3.ab2@9550>   BEQ 'l1
0002528A <AmiBlitz3.ab2@9551> BRA 'l2
00025290 <AmiBlitz3.ab2@9554>   MOVE.l #str_path_deflibs,D1
00025294 <AmiBlitz3.ab2@9557>   BSR.w load_libsfile
0002529A <AmiBlitz3.ab2@9558>   MOVE.l D0,ptr_deflibs
000252A0 <AmiBlitz3.ab2@9561>   MOVE.l size_acidlibs,D0
000252A6 <AmiBlitz3.ab2@9562>   MOVE.l #str_path_acidlibs,D1
000252AA <AmiBlitz3.ab2@9563>   BSR.w load_libsfile
000252B0 <AmiBlitz3.ab2@9564>   MOVE.l D0,ptr_acidlibs
000252B2 <AmiBlitz3.ab2@9568>   CLR.l (A3)
000252B8 <AmiBlitz3.ab2@9569>   MOVE.l A3,ptr_userlibs
000252BE <AmiBlitz3.ab2@9574>   LEA str_libfilename,A0
000252C4 <AmiBlitz3.ab2@9575>   LEA str_path_userlibs,A1
000252C6 <AmiBlitz3.ab2@9578>     MOVE.b (A1)+,(A0)+
000252CA <AmiBlitz3.ab2@9579>   BNE.b JL_0_708E
000252CC <AmiBlitz3.ab2@9581>   SUBQ.w #1,A0
000252D0 <AmiBlitz3.ab2@9582>   MOVE.b #$2F,(A0)+
000252D2 <AmiBlitz3.ab2@9585>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
000252D8 <AmiBlitz3.ab2@9587>   LEA ptr_userlibs_list,A2
000252DE <AmiBlitz3.ab2@9588>   MOVEA.l ptr_userlibs,A3
000252E4 <AmiBlitz3.ab2@9589>   MOVEA.l _dosbase,A6
000252E6 <AmiBlitz3.ab2@9594>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
000252EA <AmiBlitz3.ab2@9595>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
000252EC <AmiBlitz3.ab2@9597>       CLR.l (A3)
000252EE <AmiBlitz3.ab2@9598>       ADDQ.w #4,A7
00025318 <AmiBlitz3.ab2@9599>       !basic
0002532C <AmiBlitz3.ab2@9600>       If fid<>-1
00025336 <AmiBlitz3.ab2@9601>         file_Close{fid}
00025342 <AmiBlitz3.ab2@9602>         fid = -1
00025360 <AmiBlitz3.ab2@9604>       !asm
00025364 <AmiBlitz3.ab2@9605> BRA.w process_libraries
00025366 <AmiBlitz3.ab2@9608>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
0002536A <AmiBlitz3.ab2@9609>       TST.w $4(A2)                                         ; naechste addresse pruefen
0002536E <AmiBlitz3.ab2@9610>     BEQ.b JL_0_70BA
00025372 <AmiBlitz3.ab2@9612>     LEA $6(A2),A1
00025374 <AmiBlitz3.ab2@9613>     MOVEA.l (A7),A0
00025376 <AmiBlitz3.ab2@9616>       MOVE.b (A1)+,(A0)+
0002537A <AmiBlitz3.ab2@9617>     BNE.w JL_0_70D4
0002537C <AmiBlitz3.ab2@9621>     MOVE.l A0,-(A7)
00025382 <AmiBlitz3.ab2@9622>     MOVE.l #str_libfilename,D1
00025384 <AmiBlitz3.ab2@9623>     MOVEQ.l #-$02,D2
0002538A <AmiBlitz3.ab2@9624>     MOVEA.l _dosbase,A6
0002538E <AmiBlitz3.ab2@9625>      JSR _Lock(A6)
00025390 <AmiBlitz3.ab2@9626>     MOVE.l D0,D1
00025394 <AmiBlitz3.ab2@9627>      BEQ.w JL_0_7156
00025396 <AmiBlitz3.ab2@9628>     MOVEA.l (A7),A0
0002539C <AmiBlitz3.ab2@9629>     MOVE.b #$2F,-$1(A0)
0002539E <AmiBlitz3.ab2@9632>     MOVE.l D1,-(A7)
000253A4 <AmiBlitz3.ab2@9633>     MOVE.l #ptr_parameterstore,D2
000253AA <AmiBlitz3.ab2@9634>     MOVEA.l _dosbase,A6
000253AE <AmiBlitz3.ab2@9635>     JSR _Examine(A6)
000253B0 <AmiBlitz3.ab2@9636>     TST.l D0
000253B4 <AmiBlitz3.ab2@9637>      BEQ.w JL_0_7150
000253BA <AmiBlitz3.ab2@9640>     LEA fib_FileName,A0
000253BE <AmiBlitz3.ab2@9641>     BSR.w check_for_infoextention
000253C2 <AmiBlitz3.ab2@9642>     BEQ.w JL_0_7150
000253EC <AmiBlitz3.ab2@9645>     !basic
00025470 <AmiBlitz3.ab2@9646>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002548E <AmiBlitz3.ab2@9647>     !asm
00025494 <AmiBlitz3.ab2@9648>     MOVE.l #str_libfilename,D1
00025498 <AmiBlitz3.ab2@9649>     BSR.w open_userlibfile
0002549A <AmiBlitz3.ab2@9652>     MOVE.l (A7)+,D1
000254A0 <AmiBlitz3.ab2@9653>     MOVEA.l _dosbase,A6
000254A4 <AmiBlitz3.ab2@9654>     JSR _UnLock(A6)
000254A6 <AmiBlitz3.ab2@9657>     ADDQ.w #4,A7
000254AA <AmiBlitz3.ab2@9658> BRA.w JL_0_70BA
000254B0 <AmiBlitz3.ab2@9661>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000254B6 <AmiBlitz3.ab2@9662>   MOVEA.l _dosbase,A6
000254BA <AmiBlitz3.ab2@9663>    JSR _Open(A6)
000254BC <AmiBlitz3.ab2@9664>   MOVE.l D0,D7
000254C0 <AmiBlitz3.ab2@9665>    BEQ.w exit_userlibfile
000254C2 <AmiBlitz3.ab2@9668>   MOVE.l D7,D1                                             ; filehandle
000254C8 <AmiBlitz3.ab2@9669>   MOVE.l #optstuff,D2                                     ; buffer
000254CE <AmiBlitz3.ab2@9670>   MOVEA.l _dosbase,A6
000254D0 <AmiBlitz3.ab2@9671>   MOVEQ.l #$20,D3                                          ; size
000254D4 <AmiBlitz3.ab2@9672>   JSR _Read(A6)
000254DA <AmiBlitz3.ab2@9675>   MOVE.l optstuff+28,D6
000254DC <AmiBlitz3.ab2@9676>   LSL.l #2,D6
000254DE <AmiBlitz3.ab2@9677>   MOVE.l D6,D0
000254E0 <AmiBlitz3.ab2@9678>   MOVEQ.l #$01,D1
000254E6 <AmiBlitz3.ab2@9679>   MOVEA.l _execbase,A6
000254EC <AmiBlitz3.ab2@9680>   MOVE.l mempool,a0
000254F0 <AmiBlitz3.ab2@9681>   JSR _AllocPooled(a6)
000254F2 <AmiBlitz3.ab2@9682>   MOVEA.l D0,A5
000254F8 <AmiBlitz3.ab2@9685>   MOVEA.l _dosbase,A6
000254FA <AmiBlitz3.ab2@9686>   MOVE.l D7,D1                                             ; filehandle
000254FC <AmiBlitz3.ab2@9687>   MOVE.l A5,D2                                             ; buffer
000254FE <AmiBlitz3.ab2@9688>   MOVE.l D6,D3                                             ; size
00025502 <AmiBlitz3.ab2@9689>    JSR _Read(A6)
00025504 <AmiBlitz3.ab2@9690>   MOVE.l A5,(A3)
00025506 <AmiBlitz3.ab2@9692>   MOVE.l A5,d0
00025508 <AmiBlitz3.ab2@9694>   MOVEA.l A5,A3
0002550C <AmiBlitz3.ab2@9695>   MOVE.l D6,$6(A5)
00025510 <AmiBlitz3.ab2@9696>   CLR.l $20(A5)
0002553A <AmiBlitz3.ab2@9698>   !basic
00025544 <AmiBlitz3.ab2@9700>   addr_libnum.l = PutD0 + 4
00025558 <AmiBlitz3.ab2@9701>   If fid<>-1
000255F8 <AmiBlitz3.ab2@9702>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
0002562A <AmiBlitz3.ab2@9703>     file_WriteLine{fid,currentlib$}
00025648 <AmiBlitz3.ab2@9705>   !asm
0002564A <AmiBlitz3.ab2@9708>   MOVE.l D7,D1                                             ; filehandle
00025650 <AmiBlitz3.ab2@9709>   MOVE.l #optstuff,D2                                     ; buffer
00025652 <AmiBlitz3.ab2@9710>   MOVEQ.l #$0C,D3                                          ; size
00025658 <AmiBlitz3.ab2@9711>   MOVEA.l _dosbase,A6
0002565C <AmiBlitz3.ab2@9712>    JSR _Read(A6)
00025662 <AmiBlitz3.ab2@9714>   CMP.l #$C,D0
00025666 <AmiBlitz3.ab2@9715>    BCS.w close_and_exit_userlibfile
0002566C <AmiBlitz3.ab2@9718>   MOVE.l optstuff+4,D0
00025670 <AmiBlitz3.ab2@9719>   MOVE.l D0,$20(A5)
00025672 <AmiBlitz3.ab2@9720>   LSL.l #2,D0
00025674 <AmiBlitz3.ab2@9721>   MOVE.l D0,D5
00025676 <AmiBlitz3.ab2@9722>   MOVEQ.l #$01,D1
0002567C <AmiBlitz3.ab2@9723>   MOVEA.l _execbase,A6
00025682 <AmiBlitz3.ab2@9724>   MOVE.l mempool,a0
00025686 <AmiBlitz3.ab2@9725>   JSR _AllocPooled(a6)
0002568C <AmiBlitz3.ab2@9727>   MOVEA.l _dosbase,A6
00025690 <AmiBlitz3.ab2@9728>   MOVE.l D0,$24(A5)
00025692 <AmiBlitz3.ab2@9729>   MOVE.l D7,D1
00025694 <AmiBlitz3.ab2@9730>   MOVE.l D0,D2
00025696 <AmiBlitz3.ab2@9731>   MOVE.l D5,D3
0002569A <AmiBlitz3.ab2@9732>   JSR _Read(A6)
0002569C <AmiBlitz3.ab2@9735>   MOVE.l D7,D1
000256A2 <AmiBlitz3.ab2@9736>   MOVEA.l _dosbase,A6
000256A6 <AmiBlitz3.ab2@9737> JMP _Close(A6)
000256A8 <AmiBlitz3.ab2@9740> RTS
000256AE <AmiBlitz3.ab2@9746>   CLR.w number_of_objects
000256B4 <AmiBlitz3.ab2@9747>   MOVEA.l end_of_tokenlist,A3
000256BA <AmiBlitz3.ab2@9748>   MOVEA.l libpointer,A2
000256BE <AmiBlitz3.ab2@9751>     CMPA.w #$0,A2
000256C2 <AmiBlitz3.ab2@9752>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
000256C6 <AmiBlitz3.ab2@9754>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
000256CA <AmiBlitz3.ab2@9755>     BMI.w JL_0_7226
000256CC <AmiBlitz3.ab2@9756>       LSL.w #7,D7
000256CE <AmiBlitz3.ab2@9757>       ADDQ.w #1,D7
000256D2 <AmiBlitz3.ab2@9758>       MOVE.w D7,$E(A2)
000256D6 <AmiBlitz3.ab2@9761>     LEA $30(A2),A1
000256DC <AmiBlitz3.ab2@9762>     LEA temp1,A4
000256DE <AmiBlitz3.ab2@9765>       MOVE.w (A1),D0
000256E2 <AmiBlitz3.ab2@9766>       BMI.w JL_0_72AE
000256E4 <AmiBlitz3.ab2@9767>       MOVE.l A1,(A4)
000256E6 <AmiBlitz3.ab2@9768>       MOVEA.l A1,A4
000256E8 <AmiBlitz3.ab2@9769>       ADDQ.w #2,A4
000256EA <AmiBlitz3.ab2@9770>       ADDQ.w #6,A1
000256EE <AmiBlitz3.ab2@9771>       CMP.w #$8,D0
000256F2 <AmiBlitz3.ab2@9772>       BEQ.w JL_0_7290
000256F6 <AmiBlitz3.ab2@9773>         ANDI.w #$F,D0
000256FA <AmiBlitz3.ab2@9774>         BNE.w JL_0_725C
000256FE <AmiBlitz3.ab2@9775>           BSR.w skiplibreg
00025702 <AmiBlitz3.ab2@9776>           LEA $C(A1),A1
00025704 <AmiBlitz3.ab2@9777>           ADDQ.w #1,D7
00025708 <AmiBlitz3.ab2@9778> BRA.w JL_0_7230
0002570C <AmiBlitz3.ab2@9781>     BTST #$2,D0
00025710 <AmiBlitz3.ab2@9782>     BEQ.w JL_0_7274
00025712 <AmiBlitz3.ab2@9783>       ADDQ.w #4,A1
00025714 <AmiBlitz3.ab2@9786>         TST.b (A1)+
00025718 <AmiBlitz3.ab2@9787>       BPL.w JL_0_7266
0002571C <AmiBlitz3.ab2@9788>       BSR.w aligna1
00025720 <AmiBlitz3.ab2@9789> BRA.w JL_0_7290
00025722 <AmiBlitz3.ab2@9792>       MOVE.w (A1)+,D0
00025726 <AmiBlitz3.ab2@9793>       BMI.w JL_0_7290
0002572A <AmiBlitz3.ab2@9794>       ANDI.w #$FF,D0
0002572C <AmiBlitz3.ab2@9795>       ADDA.w D0,A1
00025730 <AmiBlitz3.ab2@9796>       BSR.w aligna1
00025734 <AmiBlitz3.ab2@9797>       BSR.w skiplibreg
00025738 <AmiBlitz3.ab2@9798>       LEA $C(A1),A1
0002573C <AmiBlitz3.ab2@9799> BRA.w JL_0_7274
0002573E <AmiBlitz3.ab2@9802>     MOVE.l A1,(A3)
00025740 <AmiBlitz3.ab2@9803>     MOVEA.l A1,A3
00025742 <AmiBlitz3.ab2@9804>     ADDQ.w #4,A1
00025744 <AmiBlitz3.ab2@9805>     MOVE.w D7,(A1)+
00025746 <AmiBlitz3.ab2@9808>       TST.b (A1)+
0002574A <AmiBlitz3.ab2@9809>     BNE.w JL_0_7298
0002574C <AmiBlitz3.ab2@9812>       TST.b (A1)+
00025750 <AmiBlitz3.ab2@9813>     BNE.w JL_0_729E
00025754 <AmiBlitz3.ab2@9815>     BSR.w aligna1
00025756 <AmiBlitz3.ab2@9816>     ADDQ.w #1,D7
0002575A <AmiBlitz3.ab2@9817> BRA.w JL_0_7230
0002575E <AmiBlitz3.ab2@9820>     TST.w $4(A2)
00025762 <AmiBlitz3.ab2@9821>      BMI.w JL_0_72BA
00025766 <AmiBlitz3.ab2@9822>     MOVE.w D7,$10(A2)
00025768 <AmiBlitz3.ab2@9825>     ADDQ.w #2,A1
0002576A <AmiBlitz3.ab2@9826>     TST.l (A1)+
0002576E <AmiBlitz3.ab2@9827>      BEQ.w JL_0_72CC
00025774 <AmiBlitz3.ab2@9828>     ADDQ.w #1,number_of_objects
00025778 <AmiBlitz3.ab2@9829>     LEA $16(A1),A1
0002577A <AmiBlitz3.ab2@9832>     SUBA.l A2,A1
0002577E <AmiBlitz3.ab2@9833>     MOVE.l A1,$12(A2)
00025780 <AmiBlitz3.ab2@9834>     MOVEA.l (A2),A2
00025784 <AmiBlitz3.ab2@9835> BRA.w JL_0_720E
00025786 <AmiBlitz3.ab2@9838>   CLR.l (A3)
0002578C <AmiBlitz3.ab2@9839>   MOVE.l A7,errstack
00025796 <AmiBlitz3.ab2@9840>   MOVE.l #AL_0_730E,errcont
0002579E <AmiBlitz3.ab2@9841>   MOVE.w #$FFFF,ezerr
000257A2 <AmiBlitz3.ab2@9842>   MOVE.w #$FFFA,D1
000257A6 <AmiBlitz3.ab2@9843>    BSR.w JL_0_6F38
000257AC <AmiBlitz3.ab2@9844>   MOVE.l A1,tempvm
000257B0 <AmiBlitz3.ab2@9845>   MOVE.w #$FDA7,D1
000257B4 <AmiBlitz3.ab2@9846>    BSR.w JL_0_6F38
000257BA <AmiBlitz3.ab2@9847>   MOVE.l A1,ffplib
000257BC <AmiBlitz3.ab2@9850> RTS
000257C0 <AmiBlitz3.ab2@9853> ffplib:  Ds.l 1
000257C2 <AmiBlitz3.ab2@9857>     TST.w (A1)+
000257C6 <AmiBlitz3.ab2@9858>     BEQ.w JL_0_7320
000257C8 <AmiBlitz3.ab2@9859>     ADDQ.w #2,A1
000257CC <AmiBlitz3.ab2@9860> BRA.w skiplibreg
000257CE <AmiBlitz3.ab2@9863> RTS
000257D0 <AmiBlitz3.ab2@9867>   EXG.l A1,A0
000257D4 <AmiBlitz3.ab2@9868>   BSR.w aligna1
000257D6 <AmiBlitz3.ab2@9869>   EXG.l A1,A0
000257D8 <AmiBlitz3.ab2@9870> RTS
000257DA <AmiBlitz3.ab2@9873>   EXG.l D0,A1
000257DC <AmiBlitz3.ab2@9874>   ADDQ.l #1,D0
000257E0 <AmiBlitz3.ab2@9875>   BCLR #$0,D0
000257E2 <AmiBlitz3.ab2@9876>   EXG.l D0,A1
000257E4 <AmiBlitz3.ab2@9877> RTS
000257EA <AmiBlitz3.ab2@9881>   MOVEA.l _execbase,A6
000257F0 <AmiBlitz3.ab2@9882>   MOVEA.l ptr_userlibs,A2
000257F2 <AmiBlitz3.ab2@9883>   MOVE.l (A2),D0
000257F4 <AmiBlitz3.ab2@9884>   CLR.l (A2)
000257F6 <AmiBlitz3.ab2@9885>   MOVEA.l D0,A2
000257FA <AmiBlitz3.ab2@9888>     CMPA.w #$0,A2
000257FE <AmiBlitz3.ab2@9889>     BEQ.w free_userlib
00025802 <AmiBlitz3.ab2@9891>     MOVE.l $20(A2),D0
00025806 <AmiBlitz3.ab2@9892>     BEQ.b JL_0_7360
00025808 <AmiBlitz3.ab2@9893>       LSL.l #2,D0
0002580E <AmiBlitz3.ab2@9894>       MOVE.l mempool,a0
00025812 <AmiBlitz3.ab2@9895>       MOVEA.l $24(A2),A1
00025816 <AmiBlitz3.ab2@9896>       JSR _FreePooled(A6)
00025818 <AmiBlitz3.ab2@9899>     MOVEA.l A2,A1
0002581C <AmiBlitz3.ab2@9900>     MOVE.l $6(A1),D0
00025822 <AmiBlitz3.ab2@9901>     MOVE.l mempool,a0
00025824 <AmiBlitz3.ab2@9902>     MOVEA.l (A2),A2
0002582A <AmiBlitz3.ab2@9903>     MOVEA.l _execbase,A6
0002582E <AmiBlitz3.ab2@9904>     JSR _FreePooled(A6)
00025832 <AmiBlitz3.ab2@9905> BRA.w JL_0_7348
00025836 <AmiBlitz3.ab2@9909>   BSR.w free_userlibs
0002583C <AmiBlitz3.ab2@9910>   MOVEA.l _execbase,A6
00025842 <AmiBlitz3.ab2@9911>   CLR.l libpointer
00025848 <AmiBlitz3.ab2@9912>   MOVEA.l end_of_tokenlist,A0
0002584A <AmiBlitz3.ab2@9913>   CLR.l (A0)
00025850 <AmiBlitz3.ab2@9915>   MOVE.l size_acidlibs,D0
00025854 <AmiBlitz3.ab2@9916>   BEQ.b JL_0_73A2
0002585A <AmiBlitz3.ab2@9917>     MOVE.l ptr_acidlibs,D1
0002585E <AmiBlitz3.ab2@9918>     BEQ.b JL_0_73A2
00025864 <AmiBlitz3.ab2@9919>       CLR.l ptr_acidlibs
00025866 <AmiBlitz3.ab2@9920>       MOVEA.l D1,A1
0002586C <AmiBlitz3.ab2@9921>       MOVE.l mempool,a0
00025872 <AmiBlitz3.ab2@9922>       MOVEA.l _execbase,A6
00025876 <AmiBlitz3.ab2@9923>       JSR _FreePooled(A6)                                 ; free acidlibs
0002587C <AmiBlitz3.ab2@9926>   MOVE.l size_deflibs,D0
00025880 <AmiBlitz3.ab2@9927>   BEQ.b JL_0_73BE
00025886 <AmiBlitz3.ab2@9928>     MOVE.l ptr_deflibs,D1
0002588A <AmiBlitz3.ab2@9929>     BEQ.b JL_0_73BE
00025890 <AmiBlitz3.ab2@9930>       CLR.l ptr_deflibs                                    ; d0: memorySize
00025892 <AmiBlitz3.ab2@9931>       MOVEA.l D1,A1                                        ; a1: memory
00025898 <AmiBlitz3.ab2@9932>       MOVE.l mempool,a0                                    ; a0: poolHeader
0002589E <AmiBlitz3.ab2@9933>       MOVEA.l _execbase,A6
000258A2 <AmiBlitz3.ab2@9934>       JSR _FreePooled(A6)                                  ; free deflibs
000258A4 <AmiBlitz3.ab2@9937> RTS
000258AA <AmiBlitz3.ab2@9941>   MOVEA.l currentmacroaddr,A0
000258AC <AmiBlitz3.ab2@9942>   MOVEA.l (A0),A2
000258AE <AmiBlitz3.ab2@9943>   CLR.l (A0)
000258B4 <AmiBlitz3.ab2@9944>   MOVEA.l _execbase,A6
000258B8 <AmiBlitz3.ab2@9947>     CMPA.w #$0,A2
000258BC <AmiBlitz3.ab2@9948>     BEQ.w JL_0_73FA
000258BE <AmiBlitz3.ab2@9949>     MOVEQ.l #$00,D0
000258C2 <AmiBlitz3.ab2@9950>     MOVE.w $8(A2),D0
000258C6 <AmiBlitz3.ab2@9951>     BEQ.w JL_0_73E8
000258CA <AmiBlitz3.ab2@9952>     MOVEA.l $4(A2),A1
000258D0 <AmiBlitz3.ab2@9953>     MOVE.l mempool,a0
000258D4 <AmiBlitz3.ab2@9954>     JSR _FreePooled(A6)
000258D6 <AmiBlitz3.ab2@9957>     MOVEA.l A2,A1
000258D8 <AmiBlitz3.ab2@9958>     MOVEA.l (A2),A2
000258DA <AmiBlitz3.ab2@9959>     MOVEQ.l #$00,D0
000258DE <AmiBlitz3.ab2@9960>     MOVE.b $C(A1),D0
000258E4 <AmiBlitz3.ab2@9961>     MOVE.l mempool2,a0
000258E8 <AmiBlitz3.ab2@9962>     JSR _FreePooled(A6)
000258EC <AmiBlitz3.ab2@9963> BRA.w JL_0_73CE
000258EE <AmiBlitz3.ab2@9966> RTS
000258F4 <AmiBlitz3.ab2@9970>   MOVEA.l templabel,A2
000258FA <AmiBlitz3.ab2@9971>   CLR.l templabel
000258FC <AmiBlitz3.ab2@9972> RTS
00025902 <AmiBlitz3.ab2@9975>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00025906 <AmiBlitz3.ab2@9978>     CMPA.w #$0,A2
0002590A <AmiBlitz3.ab2@9979>     BEQ.w JL_0_7426
0002590C <AmiBlitz3.ab2@9980>     MOVEQ.l #$00,D0
00025910 <AmiBlitz3.ab2@9981>     MOVE.b $E(A2),D0                                       ;labeltemp
00025912 <AmiBlitz3.ab2@9982>     MOVEA.l A2,A1
00025914 <AmiBlitz3.ab2@9983>     MOVEA.l (A2),A2
0002591A <AmiBlitz3.ab2@9984>     MOVE.l mempool2,a0
0002591E <AmiBlitz3.ab2@9986> BRA.w JL_0_740C
00025920 <AmiBlitz3.ab2@9989> RTS
00025926 <AmiBlitz3.ab2@9993>   MOVEA.l data1,A4
0002592C <AmiBlitz3.ab2@9994>   CMPA.l data2at,A4
00025930 <AmiBlitz3.ab2@9995>   BCC.w JL_0_7442
00025932 <AmiBlitz3.ab2@9996>     MOVE.b D1,(A4)+
00025938 <AmiBlitz3.ab2@9997>     MOVE.l A4,data1
0002593A <AmiBlitz3.ab2@9998> RTS
00025942 <AmiBlitz3.ab2@10001>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00025948 <AmiBlitz3.ab2@10002>   ADDQ.l #1,data1
0002594A <AmiBlitz3.ab2@10003> RTS
0002594C <AmiBlitz3.ab2@10007>   SWAP D1
00025950 <AmiBlitz3.ab2@10008>   BSR.w pokedata1
00025952 <AmiBlitz3.ab2@10009>   SWAP D1
00025958 <AmiBlitz3.ab2@10012>   MOVEA.l data1,A4
0002595E <AmiBlitz3.ab2@10013>   CMPA.l data2at,A4
00025962 <AmiBlitz3.ab2@10014>    BCC.w JL_0_7474
00025964 <AmiBlitz3.ab2@10015>   MOVE.w D1,(A4)+
0002596A <AmiBlitz3.ab2@10016>   MOVE.l A4,data1
0002596C <AmiBlitz3.ab2@10017> RTS
00025974 <AmiBlitz3.ab2@10020>   MOVE.w #$FFFF,dontwrite
0002597A <AmiBlitz3.ab2@10021>   ADDQ.l #2,data1
0002597C <AmiBlitz3.ab2@10022> RTS
00025982 <AmiBlitz3.ab2@10026>   MOVE.l data1,D3                                      ;write local string/type allocs
00025984 <AmiBlitz3.ab2@10027>   MOVEQ.l #$00,D4
00025988 <AmiBlitz3.ab2@10030>   CMPA.w #$0,A2
0002598C <AmiBlitz3.ab2@10031>    BEQ.w JL_0_74CAc
00025990 <AmiBlitz3.ab2@10032>   TST.w $6(A2)
00025994 <AmiBlitz3.ab2@10033>    BNE.w JL_0_74C4c
00025998 <AmiBlitz3.ab2@10034>   MOVEA.l $A(A2),A3
000259A0 <AmiBlitz3.ab2@10035>   CMPI.l #$100,$4(A3)
000259A4 <AmiBlitz3.ab2@10036>    BCS.w JL_0_74C4c
000259A8 <AmiBlitz3.ab2@10037>   MOVE.w $4(A2),D1
000259AC <AmiBlitz3.ab2@10038>    BSR.w pokedata1
000259B0 <AmiBlitz3.ab2@10039>   MOVE.w $8(A3),D1
000259B4 <AmiBlitz3.ab2@10040>    BSR.w pokedata1
000259B6 <AmiBlitz3.ab2@10041>   ADDQ.w #1,D4
000259B8 <AmiBlitz3.ab2@10044>    MOVEA.l (A2),A2
000259BC <AmiBlitz3.ab2@10045> BRA.w JL_0_7492c
000259BE <AmiBlitz3.ab2@10048>    TST.w D4
000259C2 <AmiBlitz3.ab2@10049>    BEQ.w JL_0_74E0
000259C6 <AmiBlitz3.ab2@10050>   MOVE.w #$FF37,D1
000259CA <AmiBlitz3.ab2@10051>    BSR.w uselib
000259CE <AmiBlitz3.ab2@10052>   MOVE.w #$FFFA,D1
000259D2 <AmiBlitz3.ab2@10053> BRA.w uselib
000259D8 <AmiBlitz3.ab2@10061>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
000259DE <AmiBlitz3.ab2@10064>   MOVE.l data1,D3
000259E0 <AmiBlitz3.ab2@10065>   MOVEQ.l #$00,D4
000259E6 <AmiBlitz3.ab2@10066>   TST.b iserror
000259EA <AmiBlitz3.ab2@10067>   BEQ JL_0_7492
000259EC <AmiBlitz3.ab2@10068>   RTS
000259F0 <AmiBlitz3.ab2@10070>    CMPA.w #$0,A2
000259F4 <AmiBlitz3.ab2@10071>    BEQ.w JL_0_74CA
000259F8 <AmiBlitz3.ab2@10072>   TST.w $6(A2)
000259FC <AmiBlitz3.ab2@10073>    BNE.w JL_0_74C4
00025A00 <AmiBlitz3.ab2@10074>   MOVEA.l $A(A2),A3
00025A08 <AmiBlitz3.ab2@10075>   CMPI.l #$100,$4(A3)
00025A0C <AmiBlitz3.ab2@10076>    BCS.w JL_0_74C4
00025A10 <AmiBlitz3.ab2@10077>   MOVE.w $4(A2),D1
00025A14 <AmiBlitz3.ab2@10078>    BSR.w pokedata1
00025A18 <AmiBlitz3.ab2@10079>   MOVE.w $8(A3),D1
00025A1C <AmiBlitz3.ab2@10080>    BSR.w pokedata1
00025A1E <AmiBlitz3.ab2@10081>   ADDQ.w #1,D4
00025A20 <AmiBlitz3.ab2@10084>   MOVEA.l (A2),A2
00025A24 <AmiBlitz3.ab2@10085> BRA.w JL_0_7492
00025A2A <AmiBlitz3.ab2@10089>   MOVEA.l sharebase,A2
00025A2E <AmiBlitz3.ab2@10092>   CMPA.w #$0,A2
00025A32 <AmiBlitz3.ab2@10093>    BEQ.w JL_0_74CAb
00025A36 <AmiBlitz3.ab2@10095>   TST.w $6(A2)
00025A3A <AmiBlitz3.ab2@10096>    BNE.w JL_0_74C4b
00025A3E <AmiBlitz3.ab2@10097>   MOVEA.l $A(A2),A3
00025A46 <AmiBlitz3.ab2@10098>   CMPI.l #$100,$4(A3)
00025A4A <AmiBlitz3.ab2@10099>    BCS.w JL_0_74C4b
00025A4E <AmiBlitz3.ab2@10100>   MOVE.w $4(A2),D1
00025A52 <AmiBlitz3.ab2@10101>    BSR.w pokedata1
00025A56 <AmiBlitz3.ab2@10102>   MOVE.w $8(A3),D1
00025A5A <AmiBlitz3.ab2@10103>    BSR.w pokedata1
00025A5C <AmiBlitz3.ab2@10104>   ADDQ.w #1,D4
00025A5E <AmiBlitz3.ab2@10107>   MOVEA.l (A2),A2
00025A62 <AmiBlitz3.ab2@10108> BRA.w JL_0_7492b
00025A64 <AmiBlitz3.ab2@10111>    TST.w D4
00025A68 <AmiBlitz3.ab2@10112>    BEQ.w JL_0_74E0
00025A6C <AmiBlitz3.ab2@10113>   MOVE.w #$FF37,D1
00025A70 <AmiBlitz3.ab2@10114>    BSR.w uselib                                            ;use statics lib
00025A74 <AmiBlitz3.ab2@10115>   MOVE.w #$FFFA,D1                                         ;use memlib
00025A78 <AmiBlitz3.ab2@10116> BRA.w uselib
00025A7A <AmiBlitz3.ab2@10119> RTS
00025A80 <AmiBlitz3.ab2@10123>   MOVE.w numtoa2,D1
00025A84 <AmiBlitz3.ab2@10124>    BSR.w writeword
00025A88 <AmiBlitz3.ab2@10125>    BSR.w addoff
00025A8A <AmiBlitz3.ab2@10126>   MOVE.l D3,D1
00025A8E <AmiBlitz3.ab2@10127>    BSR.w writelong
00025A90 <AmiBlitz3.ab2@10128>   SUBQ.w #1,D4
00025A96 <AmiBlitz3.ab2@10129>   MOVE.w D4,endarray+2
00025A9C <AmiBlitz3.ab2@10130>   MOVE.l endarray,D1
00025AA0 <AmiBlitz3.ab2@10131> BRA.w writelong
00025AA2 <AmiBlitz3.ab2@10135>   MOVE.l D3,-(A7)
00025AA8 <AmiBlitz3.ab2@10138>   MOVEA.l _dosbase,A6
00025AAC <AmiBlitz3.ab2@10139>   JSR _Write(a6)
00025AAE <AmiBlitz3.ab2@10141>   CMP.l (A7)+,D0
00025AB2 <AmiBlitz3.ab2@10142>    BNE.w JL_0_7516
00025AB4 <AmiBlitz3.ab2@10143> RTS
00025AB6 <AmiBlitz3.ab2@10146>   MOVE.l D7,D1
00025ABC <AmiBlitz3.ab2@10148>   MOVEA.l _dosbase,A6
00025AC0 <AmiBlitz3.ab2@10149>   JSR _Close(a6)
00025AC6 <AmiBlitz3.ab2@10152> JMP error_create_exe
00025ACC <AmiBlitz3.ab2@10161>   MOVE.l A7,errstack
00025AD0 <AmiBlitz3.ab2@10162>   MOVEM.l d2-d7/a2-a6,-(a7)
00025ADA <AmiBlitz3.ab2@10163>   MOVE.l #AL_0_7790,errcont
00025AE0 <AmiBlitz3.ab2@10164>    JSR call_setpointerbusy
00025AE8 <AmiBlitz3.ab2@10165>   MOVE.w #$FFFF,anyerrs
00025AF2 <AmiBlitz3.ab2@10166>   CMP.l #-1,chipstart
00025AF6 <AmiBlitz3.ab2@10167>   BEQ 'l01
00025AFC <AmiBlitz3.ab2@10168>   MOVE.l chipend,d1
00025AFE <AmiBlitz3.ab2@10169>   ADDQ.l #3,d1
00025B04 <AmiBlitz3.ab2@10170>   AND.l #$fffffffc,d1                                      ;bug
00025B0A <AmiBlitz3.ab2@10171>   MOVE.l d1,chipend
00025B0C <AmiBlitz3.ab2@10172>   MOVE.l d1,a1
00025B12 <AmiBlitz3.ab2@10173>   MOVE.l chipstart,a0
00025B14 <AmiBlitz3.ab2@10174>   MOVE.l a1,d1
00025B16 <AmiBlitz3.ab2@10175>   SUB.l a0,d1
00025B1C <AmiBlitz3.ab2@10176>   MOVE.l d1,chipsize
00025B26 <AmiBlitz3.ab2@10179>   CMP.l #-1,bssstart
00025B2A <AmiBlitz3.ab2@10180>   BEQ 'l11
00025B30 <AmiBlitz3.ab2@10181>   MOVE.l realbssend,a1
00025B36 <AmiBlitz3.ab2@10182>   MOVE.l bssstart,a0
00025B38 <AmiBlitz3.ab2@10183>   MOVE.l a1,d1
00025B3A <AmiBlitz3.ab2@10184>   SUB.l a0,d1
00025B40 <AmiBlitz3.ab2@10185>   MOVE.l d1,bsssize
00025B44 <AmiBlitz3.ab2@10186>   BEQ 'l11
00025B46 <AmiBlitz3.ab2@10189>   TST.b (a0)+
00025B4A <AmiBlitz3.ab2@10190>   BEQ 'l31
00025B50 <AmiBlitz3.ab2@10191>   TST.b debugmode
00025B54 <AmiBlitz3.ab2@10192>   BEQ 'l1
00025B5A <AmiBlitz3.ab2@10193>   TST.b exdebug
00025B5E <AmiBlitz3.ab2@10194>   BNE 'l31
00025B64 <AmiBlitz3.ab2@10197>   MOVE.l #nodata,-(a7)
00025B6A <AmiBlitz3.ab2@10198> JMP handle_compileerror
00025B6C <AmiBlitz3.ab2@10201>   CMP.l a0,a1
00025B70 <AmiBlitz3.ab2@10202>   BGT 'l32
00025B76 <AmiBlitz3.ab2@10203>   MOVE.l bssend,d1
00025B78 <AmiBlitz3.ab2@10204>   ADDQ.l #3,d1
00025B7E <AmiBlitz3.ab2@10205>   AND.l #$fffffffc,d1                                      ;bug
00025B84 <AmiBlitz3.ab2@10206>   MOVE.l d1,bssend
00025B86 <AmiBlitz3.ab2@10207>   MOVE.l d1,a1
00025B8C <AmiBlitz3.ab2@10208>   MOVE.l bssstart,a0
00025B8E <AmiBlitz3.ab2@10209>   MOVE.l a1,d1
00025B90 <AmiBlitz3.ab2@10210>   SUB.l a0,d1
00025B96 <AmiBlitz3.ab2@10211>   MOVE.l d1,bsssize
00025B9A <AmiBlitz3.ab2@10214>   MOVEM.l d5-d7/d3,-(a7)
00025BA0 <AmiBlitz3.ab2@10215>   MOVE.w dontwrite,D1
00025BA4 <AmiBlitz3.ab2@10216>   BNE.w JL_0_757C
00025BAA <AmiBlitz3.ab2@10217>   MOVE.l chipsize,d5
00025BB0 <AmiBlitz3.ab2@10218>   MOVE.l bsssize,d3
00025BB6 <AmiBlitz3.ab2@10219>   MOVE.l chipstart,d7
00025BBC <AmiBlitz3.ab2@10220>   MOVE.l bssstart,d6
00025BC2 <AmiBlitz3.ab2@10221>   MOVEA.l hunkoffsetbase,A2
00025BC8 <AmiBlitz3.ab2@10222>   MOVEA.l destbufferstart,A1
00025BCA <AmiBlitz3.ab2@10223>   MOVE.l A1,D2
00025BD0 <AmiBlitz3.ab2@10224>   ADD.l noinits,D2
00025BD6 <AmiBlitz3.ab2@10225>   CLR.l hunkoffsetnum
00025BDA <AmiBlitz3.ab2@10228>   CMPA.w #$0,A2
00025BDE <AmiBlitz3.ab2@10229>    BEQ.w JL_0_757C
00025BE2 <AmiBlitz3.ab2@10230>   MOVE.l $4(A2),D0
00025BE6 <AmiBlitz3.ab2@10231>    LEA $0(a1,d0.l),a0
00025BE8 <AmiBlitz3.ab2@10232>    MOVE.l (a0),d1
00025BEA <AmiBlitz3.ab2@10233>   TST.l d1
00025BEE <AmiBlitz3.ab2@10234>    BMI.w 'lm1
00025BF6 <AmiBlitz3.ab2@10235>   MOVE.b #0,newhunk
00025C00 <AmiBlitz3.ab2@10236>   CMP.l #-1,chipstart
00025C04 <AmiBlitz3.ab2@10237>   BEQ 'l10
00025C0A <AmiBlitz3.ab2@10238>   CMP.l chipstart,d1
00025C0E <AmiBlitz3.ab2@10239>   BLT 'l10
00025C16 <AmiBlitz3.ab2@10240>   MOVE.b #1,newhunk
00025C1C <AmiBlitz3.ab2@10241>   CMP.l chipend,d1
00025C20 <AmiBlitz3.ab2@10242>   BGE 'l110
00025C22 <AmiBlitz3.ab2@10243>   SUB.l d7,(a0)
00025C2A <AmiBlitz3.ab2@10244>   ADD.l #$80000000,4(a2)
00025C2E <AmiBlitz3.ab2@10245> BRA JL_0_7576
00025C32 <AmiBlitz3.ab2@10248>   SUB.l d5,0(a0)
00025C3C <AmiBlitz3.ab2@10251>   CMP.l #-1,bssstart
00025C40 <AmiBlitz3.ab2@10252>     BEQ 'l11
00025C46 <AmiBlitz3.ab2@10253>   CMP.l bssstart,d1
00025C4A <AmiBlitz3.ab2@10254>   BLT 'l11
00025C50 <AmiBlitz3.ab2@10255>   CMP.l bssend,d1
00025C54 <AmiBlitz3.ab2@10256>   BGE 'l111
00025C5A <AmiBlitz3.ab2@10257>   TST.b newhunk
00025C5E <AmiBlitz3.ab2@10258>   BEQ 'ln1
00025C60 <AmiBlitz3.ab2@10259>   ADD.l d5,(a0)
00025C62 <AmiBlitz3.ab2@10262>   SUB.l d6,(a0)
00025C6A <AmiBlitz3.ab2@10263>   ADD.l #$40000000,4(a2)
00025C6E <AmiBlitz3.ab2@10264> BRA JL_0_7576
00025C72 <AmiBlitz3.ab2@10267>   SUB.l d3,0(a0)
00025C74 <AmiBlitz3.ab2@10270>   SUB.l D2,(A0)
00025C7A <AmiBlitz3.ab2@10273>   ADDQ.l #1,hunkoffsetnum
00025C7C <AmiBlitz3.ab2@10276>    MOVEA.l (A2),A2
00025C80 <AmiBlitz3.ab2@10277> BRA.w JL_0_755E
00025C84 <AmiBlitz3.ab2@10281>   MOVEM.l (a7)+,d5-d7/d3
00025C8A <AmiBlitz3.ab2@10282>   MOVE.l ptr_newexefilename,D1
00025C90 <AmiBlitz3.ab2@10283>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00025C96 <AmiBlitz3.ab2@10284>   MOVEA.l _dosbase,A6
00025C9A <AmiBlitz3.ab2@10285>    JSR _Open(A6)
00025C9C <AmiBlitz3.ab2@10286>   MOVE.l D0,D7
00025CA0 <AmiBlitz3.ab2@10287>    BEQ.w execerr
00025CA6 <AmiBlitz3.ab2@10288>   MOVE.l objlen,D0
00025CAC <AmiBlitz3.ab2@10289>   SUB.l #moremem,d0
00025CB2 <AmiBlitz3.ab2@10290>   SUB.l noinits,D0
00025CBC <AmiBlitz3.ab2@10291>   CMP.l #-1,bssstart
00025CC0 <AmiBlitz3.ab2@10292>   BEQ 'l60
00025CC6 <AmiBlitz3.ab2@10293>   SUB.l bsssize,d0
00025CCC <AmiBlitz3.ab2@10294>   SUB.l chipsize,d0
00025CD0 <AmiBlitz3.ab2@10295> BRA.s 'l61
00025CDA <AmiBlitz3.ab2@10298>   CMP.l #-1,chipstart
00025CDE <AmiBlitz3.ab2@10299>   BEQ 'l61
00025CE4 <AmiBlitz3.ab2@10300>   SUB.l bsssize,d0
00025CEA <AmiBlitz3.ab2@10301>   SUB.l chipsize,d0
00025CEC <AmiBlitz3.ab2@10304>   ADDQ.l #3,D0
00025CEE <AmiBlitz3.ab2@10305>   LSR.l #2,D0
00025CF4 <AmiBlitz3.ab2@10306>   MOVE.l D0,tstsize1
00025CFA <AmiBlitz3.ab2@10307>   MOVE.l D0,tstsize2
00025CFC <AmiBlitz3.ab2@10308>   MOVE.l D7,D1
00025D02 <AmiBlitz3.ab2@10309>   MOVE.l #tsthead,D2                                      ;hunkbegin
00025D04 <AmiBlitz3.ab2@10310>   MOVEQ.l #$20,D3
00025D0E <AmiBlitz3.ab2@10311>   CMP.l #-1,bssstart
00025D12 <AmiBlitz3.ab2@10312>   BEQ 'lb1
00025D1C <AmiBlitz3.ab2@10313>   CMP.l #-1,chipstart
00025D20 <AmiBlitz3.ab2@10314>   BEQ 'lb1
00025D2A <AmiBlitz3.ab2@10315>   MOVE.l #1,bssnum
00025D34 <AmiBlitz3.ab2@10316>   MOVE.l #2,chipnum
00025D36 <AmiBlitz3.ab2@10317>   MOVEQ.l #$28,D3
00025D3C <AmiBlitz3.ab2@10318>   MOVE.l bsssize,d2
00025D3E <AmiBlitz3.ab2@10319>   ADDQ.l #3,d2
00025D40 <AmiBlitz3.ab2@10320>   ASR.l #2,d2
00025D46 <AmiBlitz3.ab2@10321>   MOVE.l d2,hunkend+8
00025D4C <AmiBlitz3.ab2@10322>   MOVE.l d2,bsssize3
00025D52 <AmiBlitz3.ab2@10323>   MOVE.l chipsize,d2
00025D54 <AmiBlitz3.ab2@10324>   ADDQ.l #3,d2
00025D56 <AmiBlitz3.ab2@10325>   ASR.l #2,d2
00025D5C <AmiBlitz3.ab2@10326>   MOVE.l d2,chipsize2
00025D66 <AmiBlitz3.ab2@10327>   ADD.l #$40000000,chipsize2
00025D6C <AmiBlitz3.ab2@10328>   MOVE.l d2,hunkend2+8
00025D72 <AmiBlitz3.ab2@10329>   MOVE.l D0,tstsize1c
00025D78 <AmiBlitz3.ab2@10330>   MOVE.l D0,tstsize2c
00025D7E <AmiBlitz3.ab2@10331>   MOVE.l #hunkbegin2,d2
00025D82 <AmiBlitz3.ab2@10332> BRA 'l100
00025D8C <AmiBlitz3.ab2@10335>   CMP.l #-1,bssstart
00025D90 <AmiBlitz3.ab2@10336>   BEQ 'l10
00025D9A <AmiBlitz3.ab2@10337>   MOVE.l #1,bssnum
00025D9C <AmiBlitz3.ab2@10338>   MOVEQ.l #$24,D3
00025DA2 <AmiBlitz3.ab2@10339>   MOVE.l bsssize,d2
00025DA4 <AmiBlitz3.ab2@10340>   ADDQ.l #3,d2
00025DA6 <AmiBlitz3.ab2@10341>   ASR.l #2,d2
00025DAC <AmiBlitz3.ab2@10342>   MOVE.l d2,hunkend+8
00025DB2 <AmiBlitz3.ab2@10343>   MOVE.l d2,bsssize2
00025DB8 <AmiBlitz3.ab2@10344>   MOVE.l D0,tstsize1b
00025DBE <AmiBlitz3.ab2@10345>   MOVE.l D0,tstsize2b
00025DC4 <AmiBlitz3.ab2@10346>   MOVE.l #hunkbegin,d2
00025DCE <AmiBlitz3.ab2@10349>   CMP.l #-1,chipstart
00025DD2 <AmiBlitz3.ab2@10350>   BEQ 'l100
00025DDC <AmiBlitz3.ab2@10351>   MOVE.l #1,chipnum
00025DDE <AmiBlitz3.ab2@10352>   MOVEQ.l #$24,D3
00025DE4 <AmiBlitz3.ab2@10353>   MOVE.l chipsize,d2
00025DE6 <AmiBlitz3.ab2@10354>   ADDQ.l #3,d2
00025DE8 <AmiBlitz3.ab2@10355>   ASR.l #2,d2
00025DEE <AmiBlitz3.ab2@10356>   MOVE.l d2,hunkend2+8
00025DF4 <AmiBlitz3.ab2@10357>   MOVE.l d2,bsssize2
00025DFE <AmiBlitz3.ab2@10358>   ADD.l #$40000000,bsssize2
00025E04 <AmiBlitz3.ab2@10359>   MOVE.l D0,tstsize1b
00025E0A <AmiBlitz3.ab2@10360>   MOVE.l D0,tstsize2b
00025E10 <AmiBlitz3.ab2@10361>   MOVE.l #hunkbegin,d2
00025E14 <AmiBlitz3.ab2@10364>    BSR.w mywrite
00025E1A <AmiBlitz3.ab2@10365>   MOVE.l destbufferstart,D2
00025E20 <AmiBlitz3.ab2@10366>   ADD.l noinits,D2
00025E26 <AmiBlitz3.ab2@10367>   MOVE.l objlen,D3
00025E2C <AmiBlitz3.ab2@10368>   SUB.l #moremem,d3
00025E32 <AmiBlitz3.ab2@10369>   SUB.l noinits,D3
00025E3C <AmiBlitz3.ab2@10370>   CMP.l #-1,bssstart
00025E40 <AmiBlitz3.ab2@10371>   BNE 'l40
00025E4A <AmiBlitz3.ab2@10372>   CMP.l #-1,chipstart
00025E4E <AmiBlitz3.ab2@10373>   BNE 'l40
00025E52 <AmiBlitz3.ab2@10374> BRA 'l41
00025E58 <AmiBlitz3.ab2@10377>   MOVE.l codeend,d1
00025E5A <AmiBlitz3.ab2@10378>     SUB.l d2,d1
00025E5C <AmiBlitz3.ab2@10379>     MOVE.l d1,d3
00025E62 <AmiBlitz3.ab2@10380>   SUB.l bsssize,d3
00025E68 <AmiBlitz3.ab2@10381>   SUB.l chipsize,d3
00025E6A <AmiBlitz3.ab2@10382>   MOVE.l D7,D1
00025E6E <AmiBlitz3.ab2@10383>   BSR.w mywrite
00025E74 <AmiBlitz3.ab2@10384>   MOVE.l objlen,D3
00025E7A <AmiBlitz3.ab2@10385>   SUB.l #moremem,d3
00025E80 <AmiBlitz3.ab2@10386>   SUB.l noinits,D3
00025E82 <AmiBlitz3.ab2@10387>   MOVE.l d3,d1
00025E88 <AmiBlitz3.ab2@10388>   MOVE.l destbufferstart,D2
00025E8E <AmiBlitz3.ab2@10389>   ADD.l noinits,D2
00025E90 <AmiBlitz3.ab2@10390>   ADD.l d2,d1
00025E96 <AmiBlitz3.ab2@10391>   SUB.l codeend,d1
00025E98 <AmiBlitz3.ab2@10392>   MOVE.l d1,d3
00025E9E <AmiBlitz3.ab2@10393>   MOVE.l codeend,d2
00025EA0 <AmiBlitz3.ab2@10396>   MOVE.l d2,d1
00025EA2 <AmiBlitz3.ab2@10397>   ADD.l d3,d1
00025EA4 <AmiBlitz3.ab2@10398>   ADDQ.l #3,D1
00025EAA <AmiBlitz3.ab2@10399>   ANDI.l #$FFFFFFFC,D1
00025EAC <AmiBlitz3.ab2@10400>   SUB.l d2,d1
00025EAE <AmiBlitz3.ab2@10401>   MOVE.l d1,d3
00025EB0 <AmiBlitz3.ab2@10402>   MOVE.l D7,D1
00025EB4 <AmiBlitz3.ab2@10403>    BSR.w mywrite
00025EBE <AmiBlitz3.ab2@10404>   MOVE.l hunkoffsetcounter,tstsize3
00025EC2 <AmiBlitz3.ab2@10405>    BEQ.w JL_0_7646
00025EC4 <AmiBlitz3.ab2@10406>   MOVE.l D7,D1
00025ECA <AmiBlitz3.ab2@10407>   MOVE.l #tstend,D2
00025ECC <AmiBlitz3.ab2@10408>   MOVEQ.l #$04,D3
00025ED0 <AmiBlitz3.ab2@10409>    BSR.w mywrite
00025ED6 <AmiBlitz3.ab2@10410>    MOVEA.l _execbase,A6
00025EDC <AmiBlitz3.ab2@10411>    MOVE.l hunkoffsetcounter,d0
00025EDE <AmiBlitz3.ab2@10412>    ASL.l #2,d0
00025EE4 <AmiBlitz3.ab2@10413>    ADD.l #12,d0
00025EE6 <AmiBlitz3.ab2@10414>    MOVEQ #0,d1
00025EEA <AmiBlitz3.ab2@10415>    JSR _AllocMem(a6)
00025EEC <AmiBlitz3.ab2@10416>    TST.l d0
00025EF0 <AmiBlitz3.ab2@10417>    BEQ nomem
00025EF6 <AmiBlitz3.ab2@10418>    MOVE.l noinits,D4
00025EF8 <AmiBlitz3.ab2@10419>    MOVE.l d5,-(a7)
00025EFA <AmiBlitz3.ab2@10420>    MOVE.l d0,d5
00025EFC <AmiBlitz3.ab2@10421>    MOVE.l d0,a1
00025F02 <AmiBlitz3.ab2@10422>    MOVEA.l hunkoffsetbase,A2
00025F0A <AmiBlitz3.ab2@10423>    MOVE.b #0,newhunk
00025F0E <AmiBlitz3.ab2@10426>   CMPA.w #$0,A2
00025F12 <AmiBlitz3.ab2@10427>    BEQ.w savehunk
00025F18 <AmiBlitz3.ab2@10428>   MOVE.l destbufferstart,D2
00025F1E <AmiBlitz3.ab2@10429>   ADD.l noinits,D2
00025F22 <AmiBlitz3.ab2@10430>   MOVE.l  $4(A2),d1
00025F26 <AmiBlitz3.ab2@10431>   BTST #31,d1
00025F2A <AmiBlitz3.ab2@10432>   BEQ 'lh1
00025F32 <AmiBlitz3.ab2@10433>   MOVE.b #1,newhunk
00025F36 <AmiBlitz3.ab2@10434> BRA 'lh3
00025F3A <AmiBlitz3.ab2@10437>   BTST #30,d1
00025F3E <AmiBlitz3.ab2@10438>   BEQ 'lh2
00025F46 <AmiBlitz3.ab2@10439>   MOVE.b #1,newhunk
00025F4A <AmiBlitz3.ab2@10440> BRA 'lh3
00025F4C <AmiBlitz3.ab2@10443>   ADD.l d1,d2
00025F52 <AmiBlitz3.ab2@10444>   CMP.l chipend,d2
00025F56 <AmiBlitz3.ab2@10445>   BLT 'l100
00025F5C <AmiBlitz3.ab2@10446>   SUB.l chipsize,d1
00025F62 <AmiBlitz3.ab2@10449>   CMP.l bssend,d2
00025F66 <AmiBlitz3.ab2@10450>   BLT 'l101
00025F6C <AmiBlitz3.ab2@10451>   SUB.l bsssize,d1
00025F6E <AmiBlitz3.ab2@10454>   MOVE.l d1,(a1)
00025F70 <AmiBlitz3.ab2@10455>   SUB.l D4,(A1)+
00025F72 <AmiBlitz3.ab2@10458>   MOVEA.l (A2),A2
00025F76 <AmiBlitz3.ab2@10459> BRA.w menu_createresidentfile__oloopb
00025F78 <AmiBlitz3.ab2@10463>   MOVE.l D7,D1
00025F7E <AmiBlitz3.ab2@10464>   MOVEA.l _dosbase,A6
00025F88 <AmiBlitz3.ab2@10465>   MOVE.l hunkoffsetnum,tstsize3
00025F8C <AmiBlitz3.ab2@10466>   BEQ 'ln1
00025F92 <AmiBlitz3.ab2@10467>   MOVE.l #tstend+4,d2
00025F94 <AmiBlitz3.ab2@10468>     MOVEQ #8,d3
00025F98 <AmiBlitz3.ab2@10469>    JSR _Write(A6)
00025F9A <AmiBlitz3.ab2@10470>   MOVE.l d7,d1
00025FA0 <AmiBlitz3.ab2@10471>   MOVE.l hunkoffsetnum,d3
00025FA2 <AmiBlitz3.ab2@10472>   ASL.l #2,d3
00025FA4 <AmiBlitz3.ab2@10473>   MOVE.l d5,D2
00025FA8 <AmiBlitz3.ab2@10474>   JSR _Write(a6)
00025FAE <AmiBlitz3.ab2@10477>   TST.b newhunk
00025FB2 <AmiBlitz3.ab2@10478>   BEQ 'l10
00025FB8 <AmiBlitz3.ab2@10479>   MOVEA.l hunkoffsetbase,A2
00025FBA <AmiBlitz3.ab2@10480>   MOVE.l d5,a0
00025FBC <AmiBlitz3.ab2@10481>   ADDQ #8,a0
00025FC4 <AmiBlitz3.ab2@10482>   MOVE.l bssnum,-4(a0)
00025FC6 <AmiBlitz3.ab2@10483>   MOVEQ #0,d6
00025FCA <AmiBlitz3.ab2@10486>   CMPA.w #$0,A2
00025FCE <AmiBlitz3.ab2@10487>    BEQ.w 'lh3
00025FD4 <AmiBlitz3.ab2@10488>   MOVE.l destbufferstart,D2
00025FDA <AmiBlitz3.ab2@10489>   ADD.l noinits,D2
00025FDE <AmiBlitz3.ab2@10490>   MOVE.l  $4(A2),d1
00025FE2 <AmiBlitz3.ab2@10491>   BTST #30,d1
00025FE6 <AmiBlitz3.ab2@10492>   BEQ 'lh1
00025FEA <AmiBlitz3.ab2@10493>   BCLR #30,d1
00025FEC <AmiBlitz3.ab2@10494>   MOVE.l d1,(a0)
00025FEE <AmiBlitz3.ab2@10495>   SUB.l D4,(A0)+
00025FF0 <AmiBlitz3.ab2@10496>   ADDQ.l #1,d6
00025FF2 <AmiBlitz3.ab2@10499>   MOVE.l (a2),a2
00025FF6 <AmiBlitz3.ab2@10500> BRA 'lh2
00025FF8 <AmiBlitz3.ab2@10503>   TST.l d6
00025FFC <AmiBlitz3.ab2@10504>     BEQ 'lh10
00025FFE <AmiBlitz3.ab2@10505>     MOVE.l d5,a0
00026000 <AmiBlitz3.ab2@10506>     MOVE.l d6,(a0)
00026002 <AmiBlitz3.ab2@10507>     MOVE.l d7,d1
00026004 <AmiBlitz3.ab2@10508>     MOVE.l d5,d2
00026006 <AmiBlitz3.ab2@10509>     MOVE.l d6,d3
00026008 <AmiBlitz3.ab2@10510>     ASL.l #2,d3
0002600A <AmiBlitz3.ab2@10511>     ADDQ.l #8,d3
0002600E <AmiBlitz3.ab2@10512>     BSR.w mywrite
00026014 <AmiBlitz3.ab2@10515>   MOVEA.l hunkoffsetbase,A2
00026016 <AmiBlitz3.ab2@10516>   MOVE.l d5,a0
00026018 <AmiBlitz3.ab2@10517>   ADDQ #8,a0
00026020 <AmiBlitz3.ab2@10518>   MOVE.l chipnum,-4(a0)
00026022 <AmiBlitz3.ab2@10519>   MOVEQ #0,d6
00026026 <AmiBlitz3.ab2@10522>   CMPA.w #$0,A2
0002602A <AmiBlitz3.ab2@10523>    BEQ.w 'lh30
00026030 <AmiBlitz3.ab2@10524>   MOVE.l destbufferstart,D2
00026036 <AmiBlitz3.ab2@10525>   ADD.l noinits,D2
0002603A <AmiBlitz3.ab2@10526>   MOVE.l  $4(A2),d1
0002603E <AmiBlitz3.ab2@10527>   BTST #31,d1
00026042 <AmiBlitz3.ab2@10528>   BEQ 'lh11
00026046 <AmiBlitz3.ab2@10529>   BCLR #31,d1
00026048 <AmiBlitz3.ab2@10530>   MOVE.l d1,(a0)
0002604A <AmiBlitz3.ab2@10531>   SUB.l D4,(A0)+
0002604C <AmiBlitz3.ab2@10532>   ADDQ.l #1,d6
0002604E <AmiBlitz3.ab2@10535>   MOVE.l (a2),a2
00026052 <AmiBlitz3.ab2@10536> BRA 'lh20
00026054 <AmiBlitz3.ab2@10539>   TST.l d6
00026058 <AmiBlitz3.ab2@10540>     BEQ 'l10
0002605A <AmiBlitz3.ab2@10541>     MOVE.l d5,a0
0002605C <AmiBlitz3.ab2@10542>     MOVE.l d6,(a0)
0002605E <AmiBlitz3.ab2@10543>     MOVE.l d7,d1
00026060 <AmiBlitz3.ab2@10544>     MOVE.l d5,d2
00026062 <AmiBlitz3.ab2@10545>     MOVE.l d6,d3
00026064 <AmiBlitz3.ab2@10546>     ASL.l #2,d3
00026066 <AmiBlitz3.ab2@10547>     ADDQ.l #8,d3
0002606A <AmiBlitz3.ab2@10548>     BSR.w mywrite
00026070 <AmiBlitz3.ab2@10552>    MOVEA.l _execbase,A6
00026076 <AmiBlitz3.ab2@10553>    MOVE.l hunkoffsetcounter,d0
00026078 <AmiBlitz3.ab2@10554>    ASL.l #2,d0
0002607E <AmiBlitz3.ab2@10555>    ADD.l #12,d0
00026080 <AmiBlitz3.ab2@10556>    MOVE.l d5,a1
00026084 <AmiBlitz3.ab2@10557>    JSR _FreeMem(a6)
0002608A <AmiBlitz3.ab2@10558>    MOVEA.l _dosbase,A6
0002608C <AmiBlitz3.ab2@10559>    MOVE.l (a7)+,d5
00026090 <AmiBlitz3.ab2@10560> BRA JL_0_7632
00026096 <AmiBlitz3.ab2@10564>   MOVEA.l hunkoffsetbase,A2
0002609C <AmiBlitz3.ab2@10565>   MOVE.l noinits,D4
000260A0 <AmiBlitz3.ab2@10568>   CMPA.w #$0,A2                                            ;write hunkoffsets
000260A4 <AmiBlitz3.ab2@10569>   BEQ.w JL_0_7632
000260A8 <AmiBlitz3.ab2@10570>   LEA $4(A2),A1
000260AA <AmiBlitz3.ab2@10571>   SUB.l D4,(A1)
000260AC <AmiBlitz3.ab2@10572>   MOVE.l D7,D1
000260AE <AmiBlitz3.ab2@10573>   MOVE.l A1,D2
000260B0 <AmiBlitz3.ab2@10574>   MOVEQ.l #$04,D3
000260B4 <AmiBlitz3.ab2@10575>   BSR.w mywrite
000260B8 <AmiBlitz3.ab2@10576>   ADD.l D4,$4(A2)
000260BA <AmiBlitz3.ab2@10577>   MOVEA.l (A2),A2
000260BE <AmiBlitz3.ab2@10578> BRA.w JL_0_7610
000260C4 <AmiBlitz3.ab2@10581>   CLR.l tstsize3
000260C6 <AmiBlitz3.ab2@10582>   MOVE.l D7,D1
000260CC <AmiBlitz3.ab2@10583>   MOVE.l #tstsize3,D2
000260CE <AmiBlitz3.ab2@10584>   MOVEQ.l #$04,D3
000260D2 <AmiBlitz3.ab2@10585>    BSR.w mywrite
000260DA <AmiBlitz3.ab2@10588>   BTST #$7,link_debuginfo
000260DE <AmiBlitz3.ab2@10589>    BEQ.w JL_0_7706
000260E4 <AmiBlitz3.ab2@10590>   MOVE.l #sysdebug,D2                                      ;debughunks
000260E6 <AmiBlitz3.ab2@10591>   MOVEQ.l #$04,D3
000260E8 <AmiBlitz3.ab2@10592>   MOVE.l D7,D1
000260EC <AmiBlitz3.ab2@10593>    BSR.w mywrite
000260F2 <AmiBlitz3.ab2@10594>   MOVEA.l labelbase,A2
000260F6 <AmiBlitz3.ab2@10597>   CMPA.w #$0,A2
000260FA <AmiBlitz3.ab2@10598>    BEQ.w JL_0_76F8
00026100 <AmiBlitz3.ab2@10599>   BTST #$0,$7(A2)
00026104 <AmiBlitz3.ab2@10600>    BEQ.w JL_0_7682
0002610C <AmiBlitz3.ab2@10601>   CMPI.l #$1,$4(A2)
00026110 <AmiBlitz3.ab2@10603>   BRA.w JL_0_76F2                                            ;only addr labels
00026112 <AmiBlitz3.ab2@10605>   MOVEQ.l #$00,D4
00026116 <AmiBlitz3.ab2@10606>   MOVE.b $12(A2),D4
0002611A <AmiBlitz3.ab2@10607>   SUBI.w #$13,D4
0002611C <AmiBlitz3.ab2@10608>   ADDQ.w #2,D4
00026120 <AmiBlitz3.ab2@10609>   ANDI.w #$FFFC,D4
00026122 <AmiBlitz3.ab2@10610>   MOVE.l D4,D5
00026124 <AmiBlitz3.ab2@10611>   LSR.w #2,D5
0002612A <AmiBlitz3.ab2@10612>   MOVE.l D5,temp1
0002612C <AmiBlitz3.ab2@10613>   LSL.w #2,D5
00026132 <AmiBlitz3.ab2@10614>   MOVE.l #temp1,a1
00026138 <AmiBlitz3.ab2@10616>   LEA debugstore,a0
0002613A <AmiBlitz3.ab2@10617>   MOVE.l (a1),(a0)+
0002613C <AmiBlitz3.ab2@10618>   MOVEQ.l #$04,D3
00026140 <AmiBlitz3.ab2@10621>   LEA $13(A2),A1
00026142 <AmiBlitz3.ab2@10622>   MOVE.l d4,d1
00026144 <AmiBlitz3.ab2@10623>   SUBQ.l #1,d1
00026146 <AmiBlitz3.ab2@10626>     MOVE.b (a1)+,d0
0002614A <AmiBlitz3.ab2@10627>     BEQ 'l21
0002614E <AmiBlitz3.ab2@10628>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00026152 <AmiBlitz3.ab2@10629>     BNE 'ok
00026156 <AmiBlitz3.ab2@10630>     MOVE.b #"_",d0
00026158 <AmiBlitz3.ab2@10631> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
0002615C <AmiBlitz3.ab2@10632>   DBF d1,'l10
00026160 <AmiBlitz3.ab2@10634> BRA 'l22
00026162 <AmiBlitz3.ab2@10637>       CLR.b (a0)+
00026166 <AmiBlitz3.ab2@10638>   DBF d1,'l21
00026168 <AmiBlitz3.ab2@10641>   ADD.l d4,d3
0002616A <AmiBlitz3.ab2@10646>   SUB.l D4,D5
0002616E <AmiBlitz3.ab2@10647>    BEQ.w JL_0_76CE
00026174 <AmiBlitz3.ab2@10648>   MOVE.l #zero,a1
00026176 <AmiBlitz3.ab2@10650>   MOVE.l (a1),(a0)+
00026178 <AmiBlitz3.ab2@10652>   ADD.l d5,d3
0002617C <AmiBlitz3.ab2@10657>   MOVE.l $8(A2),D2
00026182 <AmiBlitz3.ab2@10658>   SUB.l destbufferstart,D2
00026188 <AmiBlitz3.ab2@10659>   SUB.l noinits,D2
0002618E <AmiBlitz3.ab2@10660>   MOVE.l D2,temp1
00026194 <AmiBlitz3.ab2@10661>   MOVE.l #temp1,a1
00026196 <AmiBlitz3.ab2@10663>   MOVE.l (a1),(a0)+
0002619C <AmiBlitz3.ab2@10664>   ADD.l #4,d3
000261A2 <AmiBlitz3.ab2@10665>   LEA debugstore,a0
000261A4 <AmiBlitz3.ab2@10666>   MOVE.l a0,d2
000261A6 <AmiBlitz3.ab2@10668>   MOVE.l D7,D1
000261AA <AmiBlitz3.ab2@10669>   BSR.w mywrite
000261AC <AmiBlitz3.ab2@10672>   MOVEA.l (A2),A2
000261B0 <AmiBlitz3.ab2@10673> BRA.w JL_0_7664
000261B6 <AmiBlitz3.ab2@10677>   MOVE.l #zero,D2
000261B8 <AmiBlitz3.ab2@10678>   MOVEQ.l #$04,D3
000261BA <AmiBlitz3.ab2@10679>   MOVE.l D7,D1
000261BE <AmiBlitz3.ab2@10680>   BSR.w mywrite
000261C0 <AmiBlitz3.ab2@10683>   MOVE.l D7,D1
000261C6 <AmiBlitz3.ab2@10684>   MOVE.l #tstdone,D2                                      ;hunkend
000261C8 <AmiBlitz3.ab2@10685>   MOVEQ.l #$04,D3
000261D2 <AmiBlitz3.ab2@10686>   CMPI.l #-1,bssstart
000261D6 <AmiBlitz3.ab2@10687>   BEQ 'l10
000261D8 <AmiBlitz3.ab2@10688>   MOVEQ #16,d3
000261DE <AmiBlitz3.ab2@10689>   MOVE.l #hunkend,d2
000261E8 <AmiBlitz3.ab2@10690>   CMPI.l #-1,chipstart
000261EC <AmiBlitz3.ab2@10691>   BEQ 'l10
000261EE <AmiBlitz3.ab2@10692>   MOVE.l d7,d1
000261F0 <AmiBlitz3.ab2@10693>   MOVEQ #12,d3
000261F4 <AmiBlitz3.ab2@10694>   BSR.w mywrite
000261FE <AmiBlitz3.ab2@10697>   CMPI.l #-1,chipstart
00026202 <AmiBlitz3.ab2@10698>   BEQ 'l11
00026204 <AmiBlitz3.ab2@10699>   MOVEQ #12,d3
0002620A <AmiBlitz3.ab2@10700>   MOVE.l #hunkend2,d2
0002620C <AmiBlitz3.ab2@10701>   MOVE.l d7,d1
00026210 <AmiBlitz3.ab2@10702>   BSR.w mywrite
00026212 <AmiBlitz3.ab2@10703>   MOVE.l d7,d1
00026218 <AmiBlitz3.ab2@10704>   MOVE.l chipstart,d2
0002621E <AmiBlitz3.ab2@10705>   MOVE.l chipsize,d3
00026222 <AmiBlitz3.ab2@10706>   BSR.w mywrite
00026224 <AmiBlitz3.ab2@10707>   MOVEQ #4,d3
0002622A <AmiBlitz3.ab2@10708>   MOVE.l #hunkend,d2
0002622C <AmiBlitz3.ab2@10709>   MOVE.l d7,d1
00026230 <AmiBlitz3.ab2@10712>   BSR.w mywrite
00026232 <AmiBlitz3.ab2@10713>   MOVE.l D7,D1
00026238 <AmiBlitz3.ab2@10714>   MOVEA.l _dosbase,A6
0002623C <AmiBlitz3.ab2@10715>   JSR _Close(A6)
00026244 <AmiBlitz3.ab2@10720>   BTST #$7,create_iconfile
00026248 <AmiBlitz3.ab2@10721>    BEQ.w skip_createicon
0002624E <AmiBlitz3.ab2@10723>   MOVEA.l ptr_newexefilename,A0
00026250 <AmiBlitz3.ab2@10726>     TST.b (A0)+
00026254 <AmiBlitz3.ab2@10727>   BNE.w JL_0_772C
00026256 <AmiBlitz3.ab2@10728>   SUBQ.w #1,A0
00026258 <AmiBlitz3.ab2@10729>   MOVE.l A0,-(A7)
0002625E <AmiBlitz3.ab2@10730>   LEA str_infoextention2,A1
00026260 <AmiBlitz3.ab2@10733>     MOVE.b (A1)+,(A0)+
00026264 <AmiBlitz3.ab2@10734>   BNE.w JL_0_773A
0002626A <AmiBlitz3.ab2@10736>   MOVE.l ptr_newexefilename,D1
0002626C <AmiBlitz3.ab2@10737>   MOVEQ.l #-$02,D2
00026272 <AmiBlitz3.ab2@10738>   MOVEA.l _dosbase,A6
00026276 <AmiBlitz3.ab2@10739>   JSR _Lock(A6)
00026278 <AmiBlitz3.ab2@10740>   MOVE.l D0,D1
0002627C <AmiBlitz3.ab2@10741>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00026280 <AmiBlitz3.ab2@10742>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00026284 <AmiBlitz3.ab2@10743> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
0002628A <AmiBlitz3.ab2@10746>   MOVE.l ptr_newexefilename,D1
00026290 <AmiBlitz3.ab2@10747>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00026296 <AmiBlitz3.ab2@10748>   MOVEA.l _dosbase,A6
0002629A <AmiBlitz3.ab2@10749>    JSR _Open(A6)
0002629C <AmiBlitz3.ab2@10750>   MOVE.l D0,D7
000262A0 <AmiBlitz3.ab2@10751>    BEQ.w JL_0_7788
000262A6 <AmiBlitz3.ab2@10752>   MOVE.l #icongfx_data,D2                                  ; icon graphics
000262AC <AmiBlitz3.ab2@10753>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
000262AE <AmiBlitz3.ab2@10754>   MOVE.l D7,D1
000262B4 <AmiBlitz3.ab2@10755>   MOVEA.l _dosbase,A6
000262B8 <AmiBlitz3.ab2@10756>   JSR _Write(A6)
000262BA <AmiBlitz3.ab2@10757>   MOVE.l D7,D1
000262BE <AmiBlitz3.ab2@10758>   JSR _Close(A6)
000262C0 <AmiBlitz3.ab2@10761>   MOVEA.l (A7)+,A0
000262C2 <AmiBlitz3.ab2@10762>   CLR.b (A0)
000262C8 <AmiBlitz3.ab2@10767>   TST.b exdebug
000262CC <AmiBlitz3.ab2@10768>    BEQ JL_0_757Cb
000262D2 <AmiBlitz3.ab2@10769>   MOVE.w dontwrite,D1
000262D6 <AmiBlitz3.ab2@10770>   BNE.w JL_0_757Cb
000262DC <AmiBlitz3.ab2@10771>   MOVE.l chipsize,d5
000262E2 <AmiBlitz3.ab2@10772>   MOVE.l bsssize,d3
000262E8 <AmiBlitz3.ab2@10773>   MOVE.l chipstart,d7
000262EE <AmiBlitz3.ab2@10774>   MOVE.l bssstart,d6
000262F4 <AmiBlitz3.ab2@10775>   MOVEA.l hunkoffsetbase,A2
000262FA <AmiBlitz3.ab2@10776>   MOVEA.l destbufferstart,A1
000262FC <AmiBlitz3.ab2@10777>   MOVE.l A1,D2
00026302 <AmiBlitz3.ab2@10778>   ADD.l noinits,D2
00026308 <AmiBlitz3.ab2@10779>   CLR.l hunkoffsetnum
0002630C <AmiBlitz3.ab2@10782>   CMPA.w #$0,A2
00026310 <AmiBlitz3.ab2@10783>    BEQ.w JL_0_757Cb
00026314 <AmiBlitz3.ab2@10784>   MOVE.l $4(A2),D0
00026318 <AmiBlitz3.ab2@10785>    LEA $0(a1,d0.l),a0
0002631A <AmiBlitz3.ab2@10786>    MOVE.l (a0),d1
0002631C <AmiBlitz3.ab2@10787>   TST.l d1
00026320 <AmiBlitz3.ab2@10788>    BMI.w 'lm1
00026328 <AmiBlitz3.ab2@10789>   MOVE.b #0,newhunk
00026332 <AmiBlitz3.ab2@10790>   CMP.l #-1,chipstart
00026336 <AmiBlitz3.ab2@10791>   BEQ 'l10
0002633C <AmiBlitz3.ab2@10792>   CMP.l chipstart,d1
00026340 <AmiBlitz3.ab2@10793>   BLT 'l10
00026348 <AmiBlitz3.ab2@10794>   MOVE.b #1,newhunk
0002634E <AmiBlitz3.ab2@10795>   CMP.l chipend,d1
00026352 <AmiBlitz3.ab2@10796>   BGE 'l110
00026354 <AmiBlitz3.ab2@10797>   ADD.l d7,(a0)
0002635C <AmiBlitz3.ab2@10798>   ADD.l #$80000000,4(a2)
00026360 <AmiBlitz3.ab2@10799> BRA JL_0_7576b
00026364 <AmiBlitz3.ab2@10802>   ADD.l d5,0(a0)
0002636E <AmiBlitz3.ab2@10805>   CMP.l #-1,bssstart
00026372 <AmiBlitz3.ab2@10806>     BEQ 'l11
00026378 <AmiBlitz3.ab2@10807>   CMP.l bssstart,d1
0002637C <AmiBlitz3.ab2@10808>   BLT 'l11
00026382 <AmiBlitz3.ab2@10809>   CMP.l bssend,d1
00026386 <AmiBlitz3.ab2@10810>   BGE 'l111
0002638C <AmiBlitz3.ab2@10811>   TST.b newhunk
00026390 <AmiBlitz3.ab2@10812>   BEQ 'ln1
00026392 <AmiBlitz3.ab2@10813>   ADD.l d5,(a0)
00026394 <AmiBlitz3.ab2@10816>   ADD.l d6,(a0)
0002639C <AmiBlitz3.ab2@10817>   ADD.l #$40000000,4(a2)
000263A0 <AmiBlitz3.ab2@10818> BRA JL_0_7576b
000263A4 <AmiBlitz3.ab2@10821>   ADD.l d3,0(a0)
000263A6 <AmiBlitz3.ab2@10824>   ADD.l D2,(A0)                                            ;only normal code offsets restore
000263AC <AmiBlitz3.ab2@10827>   ADDQ.l #1,hunkoffsetnum
000263AE <AmiBlitz3.ab2@10830>   MOVEA.l (A2),A2
000263B2 <AmiBlitz3.ab2@10831> BRA.w JL_0_755Eb
000263B8 <AmiBlitz3.ab2@10834>   JSR call_setpointernormal
000263BC <AmiBlitz3.ab2@10835>   MOVEM.l (a7)+,d2-d7/a2-a6
000263BE <AmiBlitz3.ab2@10837> RTS
000263C0 <AmiBlitz3.ab2@10841>   MOVE.l D2,-(A7)
000263C6 <AmiBlitz3.ab2@10842>   MOVE.l destpointer,D2
000263CC <AmiBlitz3.ab2@10843>   SUB.l destbufferstart,D2
000263D0 <AmiBlitz3.ab2@10844>   BSR.w addhunkoffset
000263D2 <AmiBlitz3.ab2@10845>   MOVE.l (A7)+,D2
000263D4 <AmiBlitz3.ab2@10846> RTS
000263D8 <AmiBlitz3.ab2@10850>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000263DE <AmiBlitz3.ab2@10851>   TST.b nohunkoffset
000263E2 <AmiBlitz3.ab2@10852>   BNE 'l10
000263E4 <AmiBlitz3.ab2@10853>   MOVEQ.l #$8,D0
000263E6 <AmiBlitz3.ab2@10854>   MOVEQ.l #$01,D1
000263EC <AmiBlitz3.ab2@10855>   MOVEA.l _execbase,A6
000263F2 <AmiBlitz3.ab2@10856>   MOVE.l mempool2,a0
000263F6 <AmiBlitz3.ab2@10857>   JSR _AllocPooled(a6)
000263FC <AmiBlitz3.ab2@10859>   ADDQ.l #1,hunkoffsetcounter
000263FE <AmiBlitz3.ab2@10860>   MOVEA.l D0,A0
00026404 <AmiBlitz3.ab2@10861>   MOVE.l hunkoffsetbase,(A0)
0002640A <AmiBlitz3.ab2@10862>   MOVE.l A0,hunkoffsetbase
0002640E <AmiBlitz3.ab2@10863>   MOVE.l D2,$4(A0)
00026412 <AmiBlitz3.ab2@10866>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00026414 <AmiBlitz3.ab2@10867> RTS
0002641A <AmiBlitz3.ab2@10871>   CLR.l hunkoffsetbase
00026420 <AmiBlitz3.ab2@10872>   MOVEA.l _execbase,A6
00026426 <AmiBlitz3.ab2@10873>   MOVEA.l hunkoffsetbase,A2
0002642A <AmiBlitz3.ab2@10876>     CMPA.w #$0,A2
0002642E <AmiBlitz3.ab2@10877>      BEQ.w JL_0_7988
00026430 <AmiBlitz3.ab2@10878>     MOVEA.l A2,A1
00026432 <AmiBlitz3.ab2@10879>     MOVEQ.l #$08,D0
00026434 <AmiBlitz3.ab2@10880>     MOVEA.l (A2),A2
0002643A <AmiBlitz3.ab2@10881>     MOVE.l mempool2,a0
0002643E <AmiBlitz3.ab2@10882>     JSR _FreePooled(A6)
00026442 <AmiBlitz3.ab2@10883> BRA.w JL_0_7972
00026448 <AmiBlitz3.ab2@10886>   CLR.l hunkoffsetcounter
0002644A <AmiBlitz3.ab2@10887> RTS
00026462 <AmiBlitz3.ab2@10890> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00026466 <AmiBlitz3.ab2@10891> cmakea5:    Ds.l 1
00026468 <AmiBlitz3.ab2@10892> cmake:      Ds.w 1
000264E8 <AmiBlitz3.ab2@10893> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000264EE <AmiBlitz3.ab2@10897>   MOVE.l A5,lastsourcepos
000264F8 <AmiBlitz3.ab2@10898>   MOVE.w instringon,oldqflag
000264FA <AmiBlitz3.ab2@10902>   MOVEQ.l #$00,D0
000264FC <AmiBlitz3.ab2@10903>   MOVE.b (A5)+,D0
00026500 <AmiBlitz3.ab2@10904>    BEQ getcharb__donea
00026504 <AmiBlitz3.ab2@10905>   BPL getcharb__stuffa
00026506 <AmiBlitz3.ab2@10906>   LSL.l #8,D0
00026508 <AmiBlitz3.ab2@10907>   MOVE.b (A5)+,D0
0002650A <AmiBlitz3.ab2@10908>   MOVE.l a1,-(a7)
00026510 <AmiBlitz3.ab2@10909>   LEA replacedat,a1
00026514 <AmiBlitz3.ab2@10910>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00026518 <AmiBlitz3.ab2@10911>   BEQ getchar__l10
0002651C <AmiBlitz3.ab2@10912>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
0002651E <AmiBlitz3.ab2@10916>   MOVE.l (a7)+,a1
00026522 <AmiBlitz3.ab2@10917> BRA getchar__weiter
00026526 <AmiBlitz3.ab2@10920>   CMP.w #$22,D0
0002652A <AmiBlitz3.ab2@10921>    BEQ.b swapquotea
0002652E <AmiBlitz3.ab2@10922>   CMP.w #$3B,D0
00026532 <AmiBlitz3.ab2@10923>    BNE.b getcharb__donea
00026538 <AmiBlitz3.ab2@10924>   TST.w instringon
0002653C <AmiBlitz3.ab2@10925>    BNE.b getcharb__donea
0002653E <AmiBlitz3.ab2@10928>   MOVE.b (A5)+,D0
00026542 <AmiBlitz3.ab2@10929>              BEQ getchar__l1
00026546 <AmiBlitz3.ab2@10930>              CMP.b #":",d0
0002654A <AmiBlitz3.ab2@10931>              BNE getcharb__loopa                                ;:@
0002654E <AmiBlitz3.ab2@10932>              CMP.b #"@",(a5)
00026552 <AmiBlitz3.ab2@10933>              BNE getcharb__loopa
00026554 <AmiBlitz3.ab2@10934>              ADDQ #1,a5
0002655A <AmiBlitz3.ab2@10937>   MOVE.w D0,lastchar
0002655E <AmiBlitz3.ab2@10940> BRA.s getchar__weiter
00026564 <AmiBlitz3.ab2@10943>   NOT.w instringon
0002656A <AmiBlitz3.ab2@10946>    MOVE.w D0,lastchar
0002656E <AmiBlitz3.ab2@10947>    BEQ.w getchar__done
00026572 <AmiBlitz3.ab2@10948>    BPL.w getchar__done2
00026576 <AmiBlitz3.ab2@10949>   CMP.w #-$7FE4,D0                                         ;cnif
0002657A <AmiBlitz3.ab2@10950>    BEQ.w getchar__cnif
0002657E <AmiBlitz3.ab2@10951>   CMP.w #-$7FE3,D0                                         ;csif
00026582 <AmiBlitz3.ab2@10952>    BEQ.w getchar__csif
00026586 <AmiBlitz3.ab2@10953>   CMP.w #-$7FE2,D0                                         ;celse
0002658A <AmiBlitz3.ab2@10954>    BEQ.w getchar__celse
0002658E <AmiBlitz3.ab2@10955>   CMP.w #-$7FE1,D0                                         ;cend
00026592 <AmiBlitz3.ab2@10956>    BEQ.w getchar__cend
00026598 <AmiBlitz3.ab2@10959>   TST.w skipcode
0002659C <AmiBlitz3.ab2@10960>    BEQ.w getchar
000265A0 <AmiBlitz3.ab2@10961>   CMP.w #$7E,D0
000265A4 <AmiBlitz3.ab2@10962>    BEQ.w getchar__cmake                                         ;tilde
000265A8 <AmiBlitz3.ab2@10963>   CMP.w #$2,D0
000265AC <AmiBlitz3.ab2@10964>    BNE.w getchar__notunpath
000265B2 <AmiBlitz3.ab2@10965>   MOVEA.l usedfrom,A5
000265B8 <AmiBlitz3.ab2@10966>   CLR.l usedfrom
000265BC <AmiBlitz3.ab2@10967> BRA.w getchar
000265C0 <AmiBlitz3.ab2@10970>   CMP.w #$1,D0
000265C4 <AmiBlitz3.ab2@10971>    BNE.w getchar__done
000265C8 <AmiBlitz3.ab2@10975>   MOVEA.l cmakea5(PC),A5
000265CC <AmiBlitz3.ab2@10976> BRA.w getchar
000265D2 <AmiBlitz3.ab2@10979>   TST.w cmake
000265D6 <AmiBlitz3.ab2@10980>    BNE.w getchar__done
000265DA <AmiBlitz3.ab2@10982>   MOVEM.l D0-D7/A0-A6,-(A7)
000265E0 <AmiBlitz3.ab2@10983>   LEA cmake,a0                                         ;reass
000265E2 <AmiBlitz3.ab2@10984>   NOT.w (a0)
000265E6 <AmiBlitz3.ab2@10985>   LEA cmakebak(PC),A0
000265EC <AmiBlitz3.ab2@10986>   LEA ptr_parameterstore,A1
000265EE <AmiBlitz3.ab2@10987>   MOVEQ.l #$1F,D0
000265F0 <AmiBlitz3.ab2@10990>     MOVE.l (A1)+,(A0)+
000265F4 <AmiBlitz3.ab2@10991>   DBF D0,getchar__cmloop
000265FA <AmiBlitz3.ab2@10994>    JSR AJL_0_BF6E
000265FE <AmiBlitz3.ab2@10995>   CMP.w #$7E,D0
00026602 <AmiBlitz3.ab2@10996>    BNE.w syntaxerr
00026608 <AmiBlitz3.ab2@10997>   MOVE.l A5,cmakea5                                      ;tilde
0002660C <AmiBlitz3.ab2@10998>   LEA cmakebuff(PC),A0
0002660E <AmiBlitz3.ab2@10999>   MOVE.l D3,D2
00026612 <AmiBlitz3.ab2@11000>   BSR.w makelong
00026614 <AmiBlitz3.ab2@11001>   ADDQ.b #1,(A0)
0002661A <AmiBlitz3.ab2@11002>   LEA cmake,a0
0002661C <AmiBlitz3.ab2@11003>   NOT.w (a0)                                               ;reass
00026620 <AmiBlitz3.ab2@11004>   LEA cmakebak(PC),A0
00026626 <AmiBlitz3.ab2@11005>   LEA ptr_parameterstore,A1
00026628 <AmiBlitz3.ab2@11006>   MOVEQ.l #$1F,D0
0002662A <AmiBlitz3.ab2@11009>     MOVE.l (A0)+,(A1)+
0002662E <AmiBlitz3.ab2@11010>   DBF D0,getchar__cmloop2
00026632 <AmiBlitz3.ab2@11012>   MOVEM.l (A7)+,D0-D7/A0-A6
00026636 <AmiBlitz3.ab2@11013>   LEA cmakebuff(PC),A5
0002663A <AmiBlitz3.ab2@11014> BRA.w getchar
0002663C <AmiBlitz3.ab2@11017> RTS
00026646 <AmiBlitz3.ab2@11021>   MOVE.l linenumat,ciflineat                               ;csif
0002664C <AmiBlitz3.ab2@11022>   TST.w skipcode
00026650 <AmiBlitz3.ab2@11023>    BEQ.w getchar__incnest
00026654 <AmiBlitz3.ab2@11024>    BSR.w get1bytemain
00026656 <AmiBlitz3.ab2@11025>    MOVE.l a1,-(a7)
0002665C <AmiBlitz3.ab2@11026>    JSR JL_0_C492
0002665E <AmiBlitz3.ab2@11027>    MOVE.l (a7)+,a1
00026662 <AmiBlitz3.ab2@11028> BRA.w getchar
0002666C <AmiBlitz3.ab2@11031>   MOVE.l linenumat,ciflineat                               ;cnif
00026672 <AmiBlitz3.ab2@11032>   TST.w skipcode
00026676 <AmiBlitz3.ab2@11033>    BEQ.w getchar__incnest
0002667A <AmiBlitz3.ab2@11034>    BSR.w get1bytemain
0002667E <AmiBlitz3.ab2@11035>    CMP.b #"@",d0
00026682 <AmiBlitz3.ab2@11036>    BNE getchar__cnif_ok2
00026686 <AmiBlitz3.ab2@11037>    BSR.w get1bytemain
0002668E <AmiBlitz3.ab2@11038>    MOVE.b #1,incnif
00026694 <AmiBlitz3.ab2@11039>    JSR findconstant2
00026698 <AmiBlitz3.ab2@11040>    BEQ getchar__cnif_ok2
0002669E <AmiBlitz3.ab2@11043>    MOVE.w fast,-(a7)
000266A4 <AmiBlitz3.ab2@11044>    CLR.b fast
000266A6 <AmiBlitz3.ab2@11045>    MOVE.l a1,-(a7)
000266AC <AmiBlitz3.ab2@11046>    JSR JL_0_C47E
000266B2 <AmiBlitz3.ab2@11047>    CLR.b incnif
000266B4 <AmiBlitz3.ab2@11048>    MOVE.l (a7)+,a1
000266BA <AmiBlitz3.ab2@11049>    MOVE.w (a7)+,fast
000266BE <AmiBlitz3.ab2@11050> BRA.w getchar
000266C4 <AmiBlitz3.ab2@11053>   ADDQ.w #1,connest
000266C8 <AmiBlitz3.ab2@11054> BRA.w getchar
000266CE <AmiBlitz3.ab2@11057>   MOVE.w connest,D0                                      ;celse
000266D2 <AmiBlitz3.ab2@11058>    BNE.w getchar
000266D8 <AmiBlitz3.ab2@11059>   NOT.w skipcode
000266DC <AmiBlitz3.ab2@11060> BRA.w getchar
000266E2 <AmiBlitz3.ab2@11063>   SUBQ.w #1,connest                                      ;cend
000266E6 <AmiBlitz3.ab2@11064>    BPL.w getchar
000266EC <AmiBlitz3.ab2@11065>   ADDQ.w #1,connest
000266F2 <AmiBlitz3.ab2@11066>   MOVEA.l concomsp,A0
000266F8 <AmiBlitz3.ab2@11067>   CMPA.l #concomstack,A0
000266FC <AmiBlitz3.ab2@11068>    BEQ.w nociferr
000266FE <AmiBlitz3.ab2@11069>   SUBQ.w #2,A0
00026704 <AmiBlitz3.ab2@11070>   MOVE.l A0,concomsp
0002670A <AmiBlitz3.ab2@11071>   MOVE.w (A0),skipcode
0002670E <AmiBlitz3.ab2@11072> BRA.w getchar
00026712 <AmiBlitz3.ab2@11075> ciflineat:   Ds.l 1
00026714 <AmiBlitz3.ab2@11083>   MOVEQ.l #$00,D0
00026716 <AmiBlitz3.ab2@11084>   MOVE.b (A5)+,D0
0002671A <AmiBlitz3.ab2@11085>    BEQ.b getcharb__done
0002671E <AmiBlitz3.ab2@11086>    BPL.b getcharb__stuff
00026720 <AmiBlitz3.ab2@11087>   LSL.w #8,D0
00026722 <AmiBlitz3.ab2@11088>   MOVE.b (A5)+,D0
00026724 <AmiBlitz3.ab2@11089> RTS
00026728 <AmiBlitz3.ab2@11092>   CMP.w #$22,D0
0002672C <AmiBlitz3.ab2@11093>    BEQ.b swapquote
00026730 <AmiBlitz3.ab2@11094>   CMP.w #$3B,D0
00026734 <AmiBlitz3.ab2@11095>    BNE.b getcharb__done
0002673A <AmiBlitz3.ab2@11096>   TST.w instringon
0002673E <AmiBlitz3.ab2@11097>    BNE.b getcharb__done
00026740 <AmiBlitz3.ab2@11100>   MOVE.b (A5)+,D0
00026744 <AmiBlitz3.ab2@11101>             BEQ getcharb__loop_l1
00026748 <AmiBlitz3.ab2@11102>             CMP.b #":",d0
0002674C <AmiBlitz3.ab2@11103>             BNE getcharb__loop
00026750 <AmiBlitz3.ab2@11104>             CMP.b #"@",(a5)
00026754 <AmiBlitz3.ab2@11105>             BNE getcharb__loop
0002675A <AmiBlitz3.ab2@11108>   MOVE.w D0,lastchar
0002675C <AmiBlitz3.ab2@11111> RTS
00026762 <AmiBlitz3.ab2@11114>   NOT.w instringon
00026764 <AmiBlitz3.ab2@11115> RTS
00026768 <AmiBlitz3.ab2@11119>   BSR.w getchar
0002676E <AmiBlitz3.ab2@11120>   TST.w instringon
00026772 <AmiBlitz3.ab2@11121>    BNE.w get1byte__skip
00026776 <AmiBlitz3.ab2@11122>   CMP.w #$20,D0
0002677A <AmiBlitz3.ab2@11123>    BEQ.w get1byte_
0002677C <AmiBlitz3.ab2@11126> RTS
00026796 <AmiBlitz3.ab2@11129> gs:        Ds.w 13                                         ;ds.b 26  org source
0002679A <AmiBlitz3.ab2@11130>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
0002679C <AmiBlitz3.ab2@11131>            Dc.b $C4,$DC
000267A0 <AmiBlitz3.ab2@11137>   BSR.w getchar
000267A6 <AmiBlitz3.ab2@11138>   TST.w instringon
000267AA <AmiBlitz3.ab2@11139>    BNE.w gchar2
000267AE <AmiBlitz3.ab2@11140>   CMP.w #$20,D0
000267B2 <AmiBlitz3.ab2@11141>    BEQ.w get1bytemain
000267B4 <AmiBlitz3.ab2@11143>   TST.w D0
000267B8 <AmiBlitz3.ab2@11146>   BEQ.b get1bytemain__zero
000267BE <AmiBlitz3.ab2@11147>   TST.w instringon
000267C2 <AmiBlitz3.ab2@11148>    BEQ.b get1bytemain__noqoute
000267C6 <AmiBlitz3.ab2@11149>   CMP.b #$20,D0
000267CA <AmiBlitz3.ab2@11150>    BCC.b get1bytemain__skip
000267CE <AmiBlitz3.ab2@11151>   MOVE.b gs(PC,D0.W),D0
000267D0 <AmiBlitz3.ab2@11152> RTS
000267D4 <AmiBlitz3.ab2@11155>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
000267D8 <AmiBlitz3.ab2@11156>    BEQ.b get1bytemain__zero
000267DC <AmiBlitz3.ab2@11157>   CMP.w #$3A,D0
000267E0 <AmiBlitz3.ab2@11158>    BEQ.b get1bytemain__zero
000267E2 <AmiBlitz3.ab2@11161>   TST.w D0
000267E4 <AmiBlitz3.ab2@11164> RTS
000267EA <AmiBlitz3.ab2@11168>   MOVE.w lastchar,D0
000267EE <AmiBlitz3.ab2@11169> BRA.w gchar2
000267F8 <AmiBlitz3.ab2@11173>   MOVE.w oldqflag,instringon
000267FE <AmiBlitz3.ab2@11174>   MOVEA.l lastsourcepos,A5
00026800 <AmiBlitz3.ab2@11175> RTS
00026806 <AmiBlitz3.ab2@11179>   MOVE.w D0,locchar
0002680C <AmiBlitz3.ab2@11180>   MOVE.l A5,locloc
0002680E <AmiBlitz3.ab2@11181> RTS
00026814 <AmiBlitz3.ab2@11185>   MOVEA.l locloc,A5
0002681A <AmiBlitz3.ab2@11186>   MOVE.w locchar,D0
00026820 <AmiBlitz3.ab2@11187>   MOVE.w D0,lastchar
00026822 <AmiBlitz3.ab2@11188> RTS
00026822 <internal_errormsg.ab2@1> XINCLUDE "internal_errormsg.ab2"
0002686A <internal_errormsg.ab2@9> XINCLUDE "internal_errormsg.ab2"
000268BC <internal_errormsg.ab2@10> XINCLUDE "internal_errormsg.ab2"
000268FA <internal_errormsg.ab2@11> XINCLUDE "internal_errormsg.ab2"
00026938 <internal_errormsg.ab2@12> XINCLUDE "internal_errormsg.ab2"
00026962 <internal_errormsg.ab2@13> XINCLUDE "internal_errormsg.ab2"
00026992 <internal_errormsg.ab2@14> XINCLUDE "internal_errormsg.ab2"
000269DC <internal_errormsg.ab2@15> XINCLUDE "internal_errormsg.ab2"
00026A62 <internal_errormsg.ab2@16> XINCLUDE "internal_errormsg.ab2"
00026AC4 <internal_errormsg.ab2@17> XINCLUDE "internal_errormsg.ab2"
00026B0C <internal_errormsg.ab2@18> XINCLUDE "internal_errormsg.ab2"
00026B5E <internal_errormsg.ab2@19> XINCLUDE "internal_errormsg.ab2"
00026BA8 <internal_errormsg.ab2@20> XINCLUDE "internal_errormsg.ab2"
00026BF6 <internal_errormsg.ab2@21> XINCLUDE "internal_errormsg.ab2"
00026C2C <internal_errormsg.ab2@22> XINCLUDE "internal_errormsg.ab2"
00026C5A <internal_errormsg.ab2@23> XINCLUDE "internal_errormsg.ab2"
00026C74 <internal_errormsg.ab2@24> XINCLUDE "internal_errormsg.ab2"
00026C92 <internal_errormsg.ab2@25> XINCLUDE "internal_errormsg.ab2"
00026D10 <internal_errormsg.ab2@26> XINCLUDE "internal_errormsg.ab2"
00026D3A <internal_errormsg.ab2@27> XINCLUDE "internal_errormsg.ab2"
00026D60 <internal_errormsg.ab2@28> XINCLUDE "internal_errormsg.ab2"
00026D80 <internal_errormsg.ab2@29> XINCLUDE "internal_errormsg.ab2"
00026D9E <internal_errormsg.ab2@30> XINCLUDE "internal_errormsg.ab2"
00026DBE <internal_errormsg.ab2@31> XINCLUDE "internal_errormsg.ab2"
00026DE6 <internal_errormsg.ab2@32> XINCLUDE "internal_errormsg.ab2"
00026E10 <internal_errormsg.ab2@33> XINCLUDE "internal_errormsg.ab2"
00026E12 <internal_errormsg.ab2@36> XINCLUDE "internal_errormsg.ab2"
00026E2E <internal_errormsg.ab2@39> XINCLUDE "internal_errormsg.ab2"
00026E54 <internal_errormsg.ab2@40> XINCLUDE "internal_errormsg.ab2"
00026E6C <internal_errormsg.ab2@41> XINCLUDE "internal_errormsg.ab2"
00026ECA <internal_errormsg.ab2@42> XINCLUDE "internal_errormsg.ab2"
00026EEC <internal_errormsg.ab2@43> XINCLUDE "internal_errormsg.ab2"
00026F12 <internal_errormsg.ab2@44> XINCLUDE "internal_errormsg.ab2"
00026F3A <internal_errormsg.ab2@45> XINCLUDE "internal_errormsg.ab2"
00026F5A <internal_errormsg.ab2@46> XINCLUDE "internal_errormsg.ab2"
00026F7E <internal_errormsg.ab2@47> XINCLUDE "internal_errormsg.ab2"
00026FC4 <internal_errormsg.ab2@48> XINCLUDE "internal_errormsg.ab2"
00026FE8 <internal_errormsg.ab2@49> XINCLUDE "internal_errormsg.ab2"
0002700C <internal_errormsg.ab2@50> XINCLUDE "internal_errormsg.ab2"
0002702C <internal_errormsg.ab2@51> XINCLUDE "internal_errormsg.ab2"
00027050 <internal_errormsg.ab2@52> XINCLUDE "internal_errormsg.ab2"
00027072 <internal_errormsg.ab2@53> XINCLUDE "internal_errormsg.ab2"
0002709E <internal_errormsg.ab2@54> XINCLUDE "internal_errormsg.ab2"
000270C4 <internal_errormsg.ab2@55> XINCLUDE "internal_errormsg.ab2"
000270CE <internal_errormsg.ab2@58> XINCLUDE "internal_errormsg.ab2"
000270F4 <internal_errormsg.ab2@59> XINCLUDE "internal_errormsg.ab2"
00027146 <internal_errormsg.ab2@61> XINCLUDE "internal_errormsg.ab2"
000271B0 <internal_errormsg.ab2@62> XINCLUDE "internal_errormsg.ab2"
0002720E <internal_errormsg.ab2@63> XINCLUDE "internal_errormsg.ab2"
0002727C <internal_errormsg.ab2@64> XINCLUDE "internal_errormsg.ab2"
000272B8 <internal_errormsg.ab2@65> XINCLUDE "internal_errormsg.ab2"
000272D6 <internal_errormsg.ab2@66> XINCLUDE "internal_errormsg.ab2"
000272FC <internal_errormsg.ab2@67> XINCLUDE "internal_errormsg.ab2"
0002732C <internal_errormsg.ab2@68> XINCLUDE "internal_errormsg.ab2"
00027350 <internal_errormsg.ab2@69> XINCLUDE "internal_errormsg.ab2"
0002737E <internal_errormsg.ab2@70> XINCLUDE "internal_errormsg.ab2"
000273A2 <internal_errormsg.ab2@71> XINCLUDE "internal_errormsg.ab2"
000273B8 <internal_errormsg.ab2@72> XINCLUDE "internal_errormsg.ab2"
000273CE <internal_errormsg.ab2@73> XINCLUDE "internal_errormsg.ab2"
000273D4 <internal_errormsg.ab2@76> XINCLUDE "internal_errormsg.ab2"
000273DC <internal_errormsg.ab2@78> XINCLUDE "internal_errormsg.ab2"
000273DE <internal_errormsg.ab2@79> XINCLUDE "internal_errormsg.ab2"
000273E2 <internal_errormsg.ab2@80> XINCLUDE "internal_errormsg.ab2"
000273EA <internal_errormsg.ab2@81> XINCLUDE "internal_errormsg.ab2"
000273EC <internal_errormsg.ab2@82> XINCLUDE "internal_errormsg.ab2"
00027426 <internal_errormsg.ab2@84> XINCLUDE "internal_errormsg.ab2"
00027452 <internal_errormsg.ab2@85> XINCLUDE "internal_errormsg.ab2"
00027482 <internal_errormsg.ab2@86> XINCLUDE "internal_errormsg.ab2"
000274BA <internal_errormsg.ab2@87> XINCLUDE "internal_errormsg.ab2"
00027514 <internal_errormsg.ab2@88> XINCLUDE "internal_errormsg.ab2"
00027516 <internal_errormsg.ab2@92> XINCLUDE "internal_errormsg.ab2"
0002751A <internal_errormsg.ab2@93> XINCLUDE "internal_errormsg.ab2"
0002751E <internal_errormsg.ab2@94> XINCLUDE "internal_errormsg.ab2"
00027522 <internal_errormsg.ab2@95> XINCLUDE "internal_errormsg.ab2"
00027526 <internal_errormsg.ab2@96> XINCLUDE "internal_errormsg.ab2"
0002752A <internal_errormsg.ab2@97> XINCLUDE "internal_errormsg.ab2"
0002752E <internal_errormsg.ab2@98> XINCLUDE "internal_errormsg.ab2"
00027532 <internal_errormsg.ab2@99> XINCLUDE "internal_errormsg.ab2"
00027536 <internal_errormsg.ab2@100> XINCLUDE "internal_errormsg.ab2"
0002753A <internal_errormsg.ab2@101> XINCLUDE "internal_errormsg.ab2"
0002753E <internal_errormsg.ab2@102> XINCLUDE "internal_errormsg.ab2"
0002757C <internal_errormsg.ab2@103> XINCLUDE "internal_errormsg.ab2"
000275AE <internal_errormsg.ab2@105> XINCLUDE "internal_errormsg.ab2"
000275CC <internal_errormsg.ab2@106> XINCLUDE "internal_errormsg.ab2"
000275F6 <internal_errormsg.ab2@107> XINCLUDE "internal_errormsg.ab2"
00027612 <internal_errormsg.ab2@108> XINCLUDE "internal_errormsg.ab2"
0002762C <internal_errormsg.ab2@109> XINCLUDE "internal_errormsg.ab2"
0002764A <internal_errormsg.ab2@110> XINCLUDE "internal_errormsg.ab2"
0002766E <internal_errormsg.ab2@111> XINCLUDE "internal_errormsg.ab2"
00027670 <internal_errormsg.ab2@114> XINCLUDE "internal_errormsg.ab2"
000276C2 <internal_errormsg.ab2@115> XINCLUDE "internal_errormsg.ab2"
000276EA <internal_errormsg.ab2@117> XINCLUDE "internal_errormsg.ab2"
00027712 <internal_errormsg.ab2@118> XINCLUDE "internal_errormsg.ab2"
0002772E <internal_errormsg.ab2@122> XINCLUDE "internal_errormsg.ab2"
0002774E <internal_errormsg.ab2@123> XINCLUDE "internal_errormsg.ab2"
00027766 <internal_errormsg.ab2@124> XINCLUDE "internal_errormsg.ab2"
000277AA <internal_errormsg.ab2@125> XINCLUDE "internal_errormsg.ab2"
000277F2 <internal_errormsg.ab2@126> XINCLUDE "internal_errormsg.ab2"
0002781C <internal_errormsg.ab2@127> XINCLUDE "internal_errormsg.ab2"
00027846 <internal_errormsg.ab2@128> XINCLUDE "internal_errormsg.ab2"
00027860 <internal_errormsg.ab2@132> XINCLUDE "internal_errormsg.ab2"
0002788A <internal_errormsg.ab2@133> XINCLUDE "internal_errormsg.ab2"
000278DE <internal_errormsg.ab2@134> XINCLUDE "internal_errormsg.ab2"
0002792A <internal_errormsg.ab2@135> XINCLUDE "internal_errormsg.ab2"
00027962 <internal_errormsg.ab2@136> XINCLUDE "internal_errormsg.ab2"
00027968 <internal_errormsg.ab2@139> XINCLUDE "internal_errormsg.ab2"
00027976 <internal_errormsg.ab2@141> XINCLUDE "internal_errormsg.ab2"
000279A6 <internal_errormsg.ab2@144> XINCLUDE "internal_errormsg.ab2"
000279DA <internal_errormsg.ab2@145> XINCLUDE "internal_errormsg.ab2"
00027A40 <internal_errormsg.ab2@146> XINCLUDE "internal_errormsg.ab2"
00027A5E <internal_errormsg.ab2@147> XINCLUDE "internal_errormsg.ab2"
00027AD8 <internal_errormsg.ab2@148> XINCLUDE "internal_errormsg.ab2"
00027B00 <internal_errormsg.ab2@149> XINCLUDE "internal_errormsg.ab2"
00027B16 <internal_errormsg.ab2@150> XINCLUDE "internal_errormsg.ab2"
00027B2A <internal_errormsg.ab2@151> XINCLUDE "internal_errormsg.ab2"
00027B2C <internal_errormsg.ab2@154> XINCLUDE "internal_errormsg.ab2"
00027B2D <internal_errormsg.ab2@155> XINCLUDE "internal_errormsg.ab2"
00027B2E <internal_errormsg.ab2@156> XINCLUDE "internal_errormsg.ab2"
00027B4E <internal_errormsg.ab2@158> XINCLUDE "internal_errormsg.ab2"
00027B54 <internal_errormsg.ab2@161> XINCLUDE "internal_errormsg.ab2"
00027B66 <internal_errormsg.ab2@163> XINCLUDE "internal_errormsg.ab2"
00027B9A <internal_errormsg.ab2@166> XINCLUDE "internal_errormsg.ab2"
00027BB2 <internal_errormsg.ab2@167> XINCLUDE "internal_errormsg.ab2"
00027BCE <internal_errormsg.ab2@168> XINCLUDE "internal_errormsg.ab2"
00027BE6 <internal_errormsg.ab2@169> XINCLUDE "internal_errormsg.ab2"
00027C06 <internal_errormsg.ab2@170> XINCLUDE "internal_errormsg.ab2"
00027C26 <internal_errormsg.ab2@171> XINCLUDE "internal_errormsg.ab2"
00027C4C <internal_errormsg.ab2@172> XINCLUDE "internal_errormsg.ab2"
00027C62 <internal_errormsg.ab2@173> XINCLUDE "internal_errormsg.ab2"
00027C7E <internal_errormsg.ab2@174> XINCLUDE "internal_errormsg.ab2"
00027CA8 <internal_errormsg.ab2@175> XINCLUDE "internal_errormsg.ab2"
00027CC0 <internal_errormsg.ab2@176> XINCLUDE "internal_errormsg.ab2"
00027CDC <internal_errormsg.ab2@177> XINCLUDE "internal_errormsg.ab2"
00027CFC <internal_errormsg.ab2@178> XINCLUDE "internal_errormsg.ab2"
00027D14 <internal_errormsg.ab2@179> XINCLUDE "internal_errormsg.ab2"
00027D18 <internal_errormsg.ab2@182> XINCLUDE "internal_errormsg.ab2"
00027D1E <internal_errormsg.ab2@183> XINCLUDE "internal_errormsg.ab2"
00027D24 <internal_errormsg.ab2@184> XINCLUDE "internal_errormsg.ab2"
00027D39 <internal_errormsg.ab2@185> XINCLUDE "internal_errormsg.ab2"
00027D3F <internal_errormsg.ab2@187> XINCLUDE "internal_errormsg.ab2"
00027D40 <internal_errormsg.ab2@188> XINCLUDE "internal_errormsg.ab2"
00027D44 <internal_errormsg.ab2@191> XINCLUDE "internal_errormsg.ab2"
00027D4A <internal_errormsg.ab2@192> XINCLUDE "internal_errormsg.ab2"
00027D50 <internal_errormsg.ab2@193> XINCLUDE "internal_errormsg.ab2"
00027D63 <internal_errormsg.ab2@194> XINCLUDE "internal_errormsg.ab2"
00027D69 <internal_errormsg.ab2@196> XINCLUDE "internal_errormsg.ab2"
00027D6A <internal_errormsg.ab2@197> XINCLUDE "internal_errormsg.ab2"
00027D88 <internal_errormsg.ab2@199> XINCLUDE "internal_errormsg.ab2"
00027DA0 <internal_errormsg.ab2@200> XINCLUDE "internal_errormsg.ab2"
00027DBC <internal_errormsg.ab2@201> XINCLUDE "internal_errormsg.ab2"
00027DE6 <internal_errormsg.ab2@202> XINCLUDE "internal_errormsg.ab2"
00027E00 <internal_errormsg.ab2@203> XINCLUDE "internal_errormsg.ab2"
00027E20 <internal_errormsg.ab2@204> XINCLUDE "internal_errormsg.ab2"
00027E3E <internal_errormsg.ab2@205> XINCLUDE "internal_errormsg.ab2"
00027E6C <internal_errormsg.ab2@206> XINCLUDE "internal_errormsg.ab2"
00027E76 <internal_errormsg.ab2@209> XINCLUDE "internal_errormsg.ab2"
00027EA8 <internal_errormsg.ab2@210> XINCLUDE "internal_errormsg.ab2"
00027EC6 <internal_errormsg.ab2@212> XINCLUDE "internal_errormsg.ab2"
00027EE4 <internal_errormsg.ab2@213> XINCLUDE "internal_errormsg.ab2"
00027F04 <internal_errormsg.ab2@214> XINCLUDE "internal_errormsg.ab2"
00027F2A <internal_errormsg.ab2@215> XINCLUDE "internal_errormsg.ab2"
00027F50 <internal_errormsg.ab2@216> XINCLUDE "internal_errormsg.ab2"
00027F78 <internal_errormsg.ab2@217> XINCLUDE "internal_errormsg.ab2"
00027F96 <internal_errormsg.ab2@218> XINCLUDE "internal_errormsg.ab2"
00027FB6 <internal_errormsg.ab2@219> XINCLUDE "internal_errormsg.ab2"
00027FD0 <internal_errormsg.ab2@220> XINCLUDE "internal_errormsg.ab2"
00027FF2 <internal_errormsg.ab2@221> XINCLUDE "internal_errormsg.ab2"
00028010 <internal_errormsg.ab2@222> XINCLUDE "internal_errormsg.ab2"
00028032 <internal_errormsg.ab2@223> XINCLUDE "internal_errormsg.ab2"
00028056 <internal_errormsg.ab2@224> XINCLUDE "internal_errormsg.ab2"
0002805C <internal_errormsg.ab2@227> XINCLUDE "internal_errormsg.ab2"
00028078 <internal_errormsg.ab2@228> XINCLUDE "internal_errormsg.ab2"
00028094 <internal_errormsg.ab2@230> XINCLUDE "internal_errormsg.ab2"
000280B2 <internal_errormsg.ab2@231> XINCLUDE "internal_errormsg.ab2"
000280D0 <internal_errormsg.ab2@232> XINCLUDE "internal_errormsg.ab2"
0002811E <internal_errormsg.ab2@233> XINCLUDE "internal_errormsg.ab2"
0002813C <internal_errormsg.ab2@234> XINCLUDE "internal_errormsg.ab2"
0002815A <internal_errormsg.ab2@235> XINCLUDE "internal_errormsg.ab2"
00028174 <internal_errormsg.ab2@236> XINCLUDE "internal_errormsg.ab2"
000281C0 <internal_errormsg.ab2@237> XINCLUDE "internal_errormsg.ab2"
000281E6 <internal_errormsg.ab2@238> XINCLUDE "internal_errormsg.ab2"
00028206 <internal_errormsg.ab2@239> XINCLUDE "internal_errormsg.ab2"
00028228 <internal_errormsg.ab2@240> XINCLUDE "internal_errormsg.ab2"
00028244 <internal_errormsg.ab2@241> XINCLUDE "internal_errormsg.ab2"
0002826A <internal_errormsg.ab2@242> XINCLUDE "internal_errormsg.ab2"
00028286 <internal_errormsg.ab2@243> XINCLUDE "internal_errormsg.ab2"
000282A4 <internal_errormsg.ab2@244> XINCLUDE "internal_errormsg.ab2"
000282CC <internal_errormsg.ab2@245> XINCLUDE "internal_errormsg.ab2"
000282E8 <internal_errormsg.ab2@246> XINCLUDE "internal_errormsg.ab2"
000282F8 <internal_errormsg.ab2@247> XINCLUDE "internal_errormsg.ab2"
0002831A <internal_errormsg.ab2@248> XINCLUDE "internal_errormsg.ab2"
0002831E <internal_errormsg.ab2@251> XINCLUDE "internal_errormsg.ab2"
00028320 <internal_errormsg.ab2@254> XINCLUDE "internal_errormsg.ab2"
0002833A <internal_errormsg.ab2@255> XINCLUDE "internal_errormsg.ab2"
0002835E <internal_errormsg.ab2@257> XINCLUDE "internal_errormsg.ab2"
0002837E <internal_errormsg.ab2@258> XINCLUDE "internal_errormsg.ab2"
000283B0 <internal_errormsg.ab2@259> XINCLUDE "internal_errormsg.ab2"
0002840E <internal_errormsg.ab2@260> XINCLUDE "internal_errormsg.ab2"
00028446 <internal_errormsg.ab2@261> XINCLUDE "internal_errormsg.ab2"
00028484 <internal_errormsg.ab2@262> XINCLUDE "internal_errormsg.ab2"
000284BA <internal_errormsg.ab2@263> XINCLUDE "internal_errormsg.ab2"
000284EC <internal_errormsg.ab2@264> XINCLUDE "internal_errormsg.ab2"
00028510 <internal_errormsg.ab2@265> XINCLUDE "internal_errormsg.ab2"
00028534 <internal_errormsg.ab2@266> XINCLUDE "internal_errormsg.ab2"
0002857E <internal_errormsg.ab2@267> XINCLUDE "internal_errormsg.ab2"
000285A6 <internal_errormsg.ab2@268> XINCLUDE "internal_errormsg.ab2"
000285F0 <internal_errormsg.ab2@269> XINCLUDE "internal_errormsg.ab2"
00028630 <internal_errormsg.ab2@270> XINCLUDE "internal_errormsg.ab2"
00028630 <AmiBlitz3.ab2@11192> XINCLUDE "internal_errormsg.ab2"
00028632 <AmiBlitz3.ab2@11196> ezerr:   Ds.w 1                                            ;for simple errors
00028638 <AmiBlitz3.ab2@11202>    MOVE.l myline,d0
0002863C <AmiBlitz3.ab2@11203>   BNE handle_compileerror__l2
00028642 <AmiBlitz3.ab2@11205>     MOVE.l a5,lastsourcepos
00028644 <AmiBlitz3.ab2@11207>     SUBA.l a5,a5
0002864A <AmiBlitz3.ab2@11209>   TST.l usedfrom
0002864E <AmiBlitz3.ab2@11210>   BEQ handle_compileerror__org
00028654 <AmiBlitz3.ab2@11211>     MOVEA.l usedfrom,a5
0002865A <AmiBlitz3.ab2@11214>   TST.w dirmode
0002865E <AmiBlitz3.ab2@11215>   BNE.b handle_compileerror__quiet
00028664 <AmiBlitz3.ab2@11216>     JSR call_setpointernormal
00028668 <AmiBlitz3.ab2@11217>     MOVE.w ezerr(PC),D0
0002866C <AmiBlitz3.ab2@11218>     BNE.w handle_compileerror__skip
00028672 <AmiBlitz3.ab2@11219>       MOVE.w cfetchmode,D0
00028676 <AmiBlitz3.ab2@11220>       BEQ.w handle_compileerror__skip2
00028680 <AmiBlitz3.ab2@11221>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00028686 <AmiBlitz3.ab2@11224>   MOVE.w constmode,D0
0002868A <AmiBlitz3.ab2@11225>   BEQ.b handle_compileerror__skip3
0002868E <AmiBlitz3.ab2@11226>     BSR.w asmerr2
00028694 <AmiBlitz3.ab2@11229>   MOVE.l firstlocal,D1
0002869A <AmiBlitz3.ab2@11230>   OR.l firstglob,D1
0002869E <AmiBlitz3.ab2@11231>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
000286A4 <AmiBlitz3.ab2@11232>     JSR JL_0_DB5C
000286AC <AmiBlitz3.ab2@11235>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
000286B6 <AmiBlitz3.ab2@11236>   CMP.l #"NORE",reqmode                                    ;for used functions
000286BA <AmiBlitz3.ab2@11237>   BEQ handle_compileerror__notproc_l1
000286C4 <AmiBlitz3.ab2@11238>     MOVE.l linenumat,compilelinecounter
000286CA <AmiBlitz3.ab2@11241>   JSR close_compilewin
000286CC <AmiBlitz3.ab2@11244>   MOVEA.l (A7)+,A0
000286D6 <AmiBlitz3.ab2@11245>   CMP.l #maxerrorcount,errorcounter
000286DA <AmiBlitz3.ab2@11246>   BLT 'lesserror
000286E0 <AmiBlitz3.ab2@11247>   LEA errorlimit_text,a0
000286E6 <AmiBlitz3.ab2@11249>   ADDQ.l #1,errorcounter
000286EC <AmiBlitz3.ab2@11250>   JSR errorstringparse
000286F6 <AmiBlitz3.ab2@11251>   CMP.l #"NORE",reqmode                                    ;for used functions
000286FA <AmiBlitz3.ab2@11252>   BEQ handle_compileerror__skip_Lxx2
00028700 <AmiBlitz3.ab2@11253>   TST.l CLIMode
00028704 <AmiBlitz3.ab2@11254>   BNE 'climode_output
0002870A <AmiBlitz3.ab2@11256>     JSR save_errorfile
0002870E <AmiBlitz3.ab2@11257>     BRA 'end_output
00028714 <AmiBlitz3.ab2@11259>     JSR stdout_error
0002871E <AmiBlitz3.ab2@11261>      CMP.l #maxerrorcount,errorcounter
00028722 <AmiBlitz3.ab2@11262>      BGT 'end_output
00028728 <AmiBlitz3.ab2@11263>     MOVE.l lastsourcepos,a5
0002872A <AmiBlitz3.ab2@11264> 'loop TST.b (a5)
0002872E <AmiBlitz3.ab2@11265>       BEQ 'ok2
00028730 <AmiBlitz3.ab2@11266>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00028734 <AmiBlitz3.ab2@11267>     BEQ 'ok
00028738 <AmiBlitz3.ab2@11268>     CMP.b #":",d0
0002873C <AmiBlitz3.ab2@11269>     BEQ 'ok
00028740 <AmiBlitz3.ab2@11270>     BRA 'loop
00028742 <AmiBlitz3.ab2@11271> 'ok SUBQ.l #1,a5
0002874A <AmiBlitz3.ab2@11272> 'ok2 MOVE.w #0,lastchar
00028752 <AmiBlitz3.ab2@11273>     MOVE.b #1,iserror
00028758 <AmiBlitz3.ab2@11274>     MOVE.l stackaddr,a7
0002875A <AmiBlitz3.ab2@11275>     RTS
0002875C <AmiBlitz3.ab2@11281>   MOVE.l A0,-(a7)
0002879A <AmiBlitz3.ab2@11282>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002879C <AmiBlitz3.ab2@11283>   MOVE.l (a7)+,A0
000287A0 <AmiBlitz3.ab2@11285>   MOVEM.l d6/D7/A6,-(A7)
000287A6 <AmiBlitz3.ab2@11286>   MOVE.l includeline,d7
000287AC <AmiBlitz3.ab2@11287>   MOVE.l #"INLN",a6
000287B6 <AmiBlitz3.ab2@11288>   MOVE.l errstack,tempa7
000287B8 <AmiBlitz3.ab2@11289>   JSR (A1)
000287BC <AmiBlitz3.ab2@11291>   MOVEM.l (A7)+,D7/d6/A6
000287C2 <AmiBlitz3.ab2@11294>   MOVE.l tempa7,a7
000287C8 <AmiBlitz3.ab2@11295>   MOVEA.l errcont,A0
000287CA <AmiBlitz3.ab2@11297> RTS
000287D0 <AmiBlitz3.ab2@11300>   MOVEA.l errstack,A7
000287D6 <AmiBlitz3.ab2@11301>   MOVEA.l errcont,A0
000287D8 <AmiBlitz3.ab2@11303> RTS
000287DA <AmiBlitz3.ab2@11306>   MOVE.l (A7),D0
000287E0 <AmiBlitz3.ab2@11307>   MOVEA.l errstack,A7
000287E6 <AmiBlitz3.ab2@11308>   MOVEA.l errcont,A0
000287E8 <AmiBlitz3.ab2@11309> JMP (A0)
000287EC <AmiBlitz3.ab2@11315>   CMP.w #$7A,D0                                            ;'z'
000287F0 <AmiBlitz3.ab2@11316>    BHI.w tstalpha__no
000287F4 <AmiBlitz3.ab2@11317>   CMP.w #$41,D0                                            ;'A'
000287F8 <AmiBlitz3.ab2@11318>    BCS.w tstalpha__no
000287FC <AmiBlitz3.ab2@11319>   CMP.w #$61,D0                                            ;'a'
00028800 <AmiBlitz3.ab2@11320>    BCC.w tstalpha__yes
00028804 <AmiBlitz3.ab2@11321>   CMP.w #$5A,D0                                            ;'Z'
00028808 <AmiBlitz3.ab2@11322>    BHI.w tstalpha__no
0002880A <AmiBlitz3.ab2@11325>   CMP.w D0,D0
0002880C <AmiBlitz3.ab2@11328> RTS
00028810 <AmiBlitz3.ab2@11336>   CMP.w #$30,D0                                            ;'0'
00028814 <AmiBlitz3.ab2@11337>    BCS.w tstnum__skip
00028818 <AmiBlitz3.ab2@11338>   CMP.w #$39,D0                                            ;'9'
0002881C <AmiBlitz3.ab2@11339>    BHI.w tstnum__skip                                     
0002881E <AmiBlitz3.ab2@11340>   CMP.w D0,D0
00028820 <AmiBlitz3.ab2@11343> RTS
00028842 <AmiBlitz3.ab2@11349>   !compare1                                                ;bsr.w tstalpha
00028846 <AmiBlitz3.ab2@11350>    BEQ.w tstlab__skip
00028858 <AmiBlitz3.ab2@11351>   !compare2                                                ;bsr.w tstnum2
0002885C <AmiBlitz3.ab2@11352>    BEQ.w tstlab__skip
00028860 <AmiBlitz3.ab2@11353>   CMP.w #$5F,D0                                            ;'_'
00028864 <AmiBlitz3.ab2@11354>    BEQ.w tstlab__skip
00028868 <AmiBlitz3.ab2@11355>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002886A <AmiBlitz3.ab2@11358> RTS
00028874 <AmiBlitz3.ab2@11363>   MOVE.w oldqflag,instringon
0002887A <AmiBlitz3.ab2@11364>   MOVEA.l lastsourcepos,A5
00028880 <AmiBlitz3.ab2@11367>   MOVE.l a5,beforeparameterfetch
00028886 <AmiBlitz3.ab2@11368>   LEA ptr_parameterstore,A1
00028888 <AmiBlitz3.ab2@11371>   MOVEQ.l #$00,D2
0002888E <AmiBlitz3.ab2@11374>   LEA chartab,a0
00028890 <AmiBlitz3.ab2@11375>   MOVEQ #0,d0
00028896 <AmiBlitz3.ab2@11376>   MOVE.l A5,lastsourcepos
000288A0 <AmiBlitz3.ab2@11377>   MOVE.w instringon,oldqflag
000288A2 <AmiBlitz3.ab2@11380>     MOVE.b (a5)+,d0
000288A6 <AmiBlitz3.ab2@11381>   CMP.b #$20,d0                                            ;space deftype
000288AA <AmiBlitz3.ab2@11382>   BEQ makename4__retry
000288B0 <AmiBlitz3.ab2@11384>   MOVE.w d0,lastchar
000288B4 <AmiBlitz3.ab2@11385>   TST.b 0(a0,d0.w)
000288B8 <AmiBlitz3.ab2@11386>   BNE makename__done
000288BA <AmiBlitz3.ab2@11395>   MOVE.b D0,(A1)+
000288BC <AmiBlitz3.ab2@11396>   ADDQ.l #1,D2
000288C2 <AmiBlitz3.ab2@11397>   MOVE.l A5,lastsourcepos
000288C4 <AmiBlitz3.ab2@11400>   MOVE.b (a5)+,d0
000288CA <AmiBlitz3.ab2@11401>   MOVE.b d0,lastchar+1
000288CE <AmiBlitz3.ab2@11402>   CMP.b #$20,d0
000288D2 <AmiBlitz3.ab2@11403>   BEQ makename__loop_l20
000288D6 <AmiBlitz3.ab2@11405>   TST.b 0(a0,d0)
000288DA <AmiBlitz3.ab2@11406>   BEQ makename__loop
000288DE <AmiBlitz3.ab2@11407>   CMP.b #2,d0
000288E2 <AmiBlitz3.ab2@11408>   BNE makename__loop_lf1
000288E8 <AmiBlitz3.ab2@11409>   MOVEA.l usedfrom,A5
000288EE <AmiBlitz3.ab2@11410>   CLR.l usedfrom
000288F2 <AmiBlitz3.ab2@11411> BRA makename__loop_ln1
000288F6 <AmiBlitz3.ab2@11414>   CMP.b #1,d0
000288FA <AmiBlitz3.ab2@11415>   BNE makename__loop_l20
000288FE <AmiBlitz3.ab2@11416>   MOVEA.l cmakea5(PC),A5
00028902 <AmiBlitz3.ab2@11417> BRA makename__loop_ln1
00028906 <AmiBlitz3.ab2@11420>   CMP.b #$7e,d0
0002890A <AmiBlitz3.ab2@11421>             BNE makename__loop_lt
00028910 <AmiBlitz3.ab2@11422>             TST.w cmake
00028914 <AmiBlitz3.ab2@11423>             BNE.w makename__loop_a1
00028916 <AmiBlitz3.ab2@11424>             SUBQ.l #1,a5
0002891A <AmiBlitz3.ab2@11425>             BSR.w get1bytemain
0002891E <AmiBlitz3.ab2@11426> BRA makename__loop
00028922 <AmiBlitz3.ab2@11430> BRA makename__loop_gpex
00028926 <AmiBlitz3.ab2@11434>   BSR.w getchar
00028948 <AmiBlitz3.ab2@11435>    !compare1                                               ;bsr.w tstalpha
0002894C <AmiBlitz3.ab2@11436>    BEQ.w makename__loop_getp1
0002895E <AmiBlitz3.ab2@11437>    !compare2                                               ;bsr.w tstnum
00028962 <AmiBlitz3.ab2@11438>    BEQ.w makename__loop_getp1
00028966 <AmiBlitz3.ab2@11439>   CMP.w #$5F,D0                                            ;'_'
0002896A <AmiBlitz3.ab2@11440>    BEQ.w makename__loop_getp1
0002896E <AmiBlitz3.ab2@11441>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028972 <AmiBlitz3.ab2@11445>       BNE makename__loop_gpex
00028976 <AmiBlitz3.ab2@11446>       CMP.b #$20,d0
0002897A <AmiBlitz3.ab2@11447>       BNE.w makename__loop
0002897C <AmiBlitz3.ab2@11450>      TST.b d0
00028980 <AmiBlitz3.ab2@11451>      BPL makename__loop_l10
00028982 <AmiBlitz3.ab2@11452>      SUBQ.l #1,a5
00028986 <AmiBlitz3.ab2@11453>      BSR get1byte_
0002898A <AmiBlitz3.ab2@11456>    CMP.w #$20,D0
0002898E <AmiBlitz3.ab2@11457>    BNE.w makename__done
00028990 <AmiBlitz3.ab2@11458>    MOVEQ #0,d0
00028996 <AmiBlitz3.ab2@11459>   MOVE.l a5,lastsourcepos
00028998 <AmiBlitz3.ab2@11462>   MOVE.b (a5)+,d0                                          ;neuneu
0002899C <AmiBlitz3.ab2@11463>   BPL makename__loop_l101:
0002899E <AmiBlitz3.ab2@11464>   ASL.w #8,d0
000289A0 <AmiBlitz3.ab2@11465>   MOVE.b (a5)+,d0
000289A6 <AmiBlitz3.ab2@11468>   TST.w instringon
000289AA <AmiBlitz3.ab2@11469>   BNE makename__loop_l102
000289AE <AmiBlitz3.ab2@11470>   CMP.b #$20,d0
000289B2 <AmiBlitz3.ab2@11471>   BEQ makename__loop_l103
000289B6 <AmiBlitz3.ab2@11472>   CMP.b #";",d0
000289BA <AmiBlitz3.ab2@11473>   BNE makename__loop_l102
000289BC <AmiBlitz3.ab2@11476>   MOVE.b (A5)+,D0
000289C0 <AmiBlitz3.ab2@11477>              BEQ makename__loop_l1
000289C4 <AmiBlitz3.ab2@11478>              CMP.b #":",d0
000289C8 <AmiBlitz3.ab2@11479>              BNE makename__loop_lr                         ;:@
000289CC <AmiBlitz3.ab2@11480>              CMP.b #"@",(a5)
000289D0 <AmiBlitz3.ab2@11481>              BNE makename__loop_lr
000289D2 <AmiBlitz3.ab2@11482>              ADDQ #1,a5
000289D8 <AmiBlitz3.ab2@11486>   MOVE.w d0,lastchar
000289DC <AmiBlitz3.ab2@11490>   CMP.b #";",d0
000289E0 <AmiBlitz3.ab2@11491>   BEQ makename__done_l11
000289E2 <AmiBlitz3.ab2@11492>   CLR.b (A1)
000289E4 <AmiBlitz3.ab2@11494>   TST.w D2
000289E6 <AmiBlitz3.ab2@11495> RTS
000289E8 <AmiBlitz3.ab2@11498>   CLR.b (a1)
000289EA <AmiBlitz3.ab2@11499>   MOVEQ #0,d0
000289F0 <AmiBlitz3.ab2@11500>   MOVE.w d0,lastchar
000289F2 <AmiBlitz3.ab2@11502>   TST.w D2
000289F4 <AmiBlitz3.ab2@11503> RTS
000289F6 <AmiBlitz3.ab2@11509>   MOVE.l (A2),D0
000289FA <AmiBlitz3.ab2@11512>   BEQ.w findlast__here
000289FC <AmiBlitz3.ab2@11513>   MOVEA.l D0,A2
00028A00 <AmiBlitz3.ab2@11514> BRA.w findlast__loop
00028A04 <AmiBlitz3.ab2@11517> BRA.w reget
00028A06 <AmiBlitz3.ab2@11523>   MOVE.l (A2),-(A7)
00028A0A <AmiBlitz3.ab2@11524>   BSR.w addlabel
00028A0C <AmiBlitz3.ab2@11525>   MOVE.l (A7)+,(A2)
00028A0E <AmiBlitz3.ab2@11526> RTS
00028A14 <AmiBlitz3.ab2@11531>   CLR.l fp0addr
00028A1A <AmiBlitz3.ab2@11532>   TST.w dirmode
00028A1E <AmiBlitz3.ab2@11533>    BNE.w illdirerr
00028A20 <AmiBlitz3.ab2@11534>   MOVEQ.l #$00,D0
00028A22 <AmiBlitz3.ab2@11535>   MOVE.w D7,D0
00028A24 <AmiBlitz3.ab2@11536>   ADD.w D2,D0
00028A26 <AmiBlitz3.ab2@11537>   ADDQ.w #1,D0
00028A28 <AmiBlitz3.ab2@11538>   MOVE.w D0,D2
00028A2A <AmiBlitz3.ab2@11539>   ADDQ.l #2,d0
00028A2C <AmiBlitz3.ab2@11540>   MOVEQ.l #$01,D1
00028A32 <AmiBlitz3.ab2@11541>   MOVEA.l _execbase,A6
00028A38 <AmiBlitz3.ab2@11542>   MOVE.l mempool2,a0
00028A3C <AmiBlitz3.ab2@11543>   JSR _AllocPooled(a6)
00028A42 <AmiBlitz3.ab2@11545>   MOVE.l lastlabel,a2
00028A44 <AmiBlitz3.ab2@11546>   MOVE.l D0,(A2)
00028A46 <AmiBlitz3.ab2@11547>   MOVE.l d0,a0
00028A48 <AmiBlitz3.ab2@11548>   CLR.l (a0)
00028A4E <AmiBlitz3.ab2@11549>   MOVE.l a0,lastlabel
00028A50 <AmiBlitz3.ab2@11550>   MOVE.l d0,A2
00028A54 <AmiBlitz3.ab2@11551>   LEA -$1(A0,D7.W),A0
00028A56 <AmiBlitz3.ab2@11552>   MOVE.b D2,(A0)+
00028A5C <AmiBlitz3.ab2@11553>   LEA ptr_parameterstore,A1
00028A5E <AmiBlitz3.ab2@11554>   MOVEQ #0,d0
00028A60 <AmiBlitz3.ab2@11555>   MOVEQ #0,d1
00028A62 <AmiBlitz3.ab2@11558>   MOVE.b (A1)+,d1
00028A66 <AmiBlitz3.ab2@11559>    BEQ 'l1
00028A6C <AmiBlitz3.ab2@11560>    !hashalgo
00028A6E <AmiBlitz3.ab2@11561>    MOVE.b d1,(A0)+
00028A72 <AmiBlitz3.ab2@11562> BRA addlabel_loop2a
00028A74 <AmiBlitz3.ab2@11565>    CLR.b (a0)+
00028A7A <AmiBlitz3.ab2@11566>    LEA labelhash,a0
00028A80 <AmiBlitz3.ab2@11567>    AND.l #hashsize,d0
00028A82 <AmiBlitz3.ab2@11568>    ASL.l #2,d0
00028A86 <AmiBlitz3.ab2@11569>    MOVE.l 0(a0,d0),d1
00028A8A <AmiBlitz3.ab2@11570>    MOVE.l d1,$c(a2)
00028A8E <AmiBlitz3.ab2@11571>    MOVE.l a2,0(a0,d0)
00028A90 <AmiBlitz3.ab2@11572>    MOVEQ #0,d0
00028A94 <AmiBlitz3.ab2@11573> BRA.w reget
00028A9A <AmiBlitz3.ab2@11577>    TST.b newvariable
00028A9E <AmiBlitz3.ab2@11578>    BNE addlabel
00028AA4 <AmiBlitz3.ab2@11581>   TST.w dirmode
00028AA8 <AmiBlitz3.ab2@11582>    BNE.w illdirerr
00028AAA <AmiBlitz3.ab2@11583>   MOVEQ.l #$00,D0
00028AAC <AmiBlitz3.ab2@11584>   MOVE.w D7,D0
00028AAE <AmiBlitz3.ab2@11585>   ADD.w D2,D0
00028AB0 <AmiBlitz3.ab2@11586>   ADDQ.w #1,D0
00028AB2 <AmiBlitz3.ab2@11587>   MOVE.w D0,D2
00028AB4 <AmiBlitz3.ab2@11588>   MOVEQ.l #$01,D1
00028ABA <AmiBlitz3.ab2@11589>   MOVEA.l _execbase,A6
00028AC0 <AmiBlitz3.ab2@11590>   MOVE.l mempool2,a0
00028AC4 <AmiBlitz3.ab2@11591>   JSR _AllocPooled(a6)
00028AC6 <AmiBlitz3.ab2@11592>   MOVEA.l D0,A0
00028ACC <AmiBlitz3.ab2@11594>   LEA varbase,a2
00028ACE <AmiBlitz3.ab2@11595>   MOVE.l (a2),(a0)
00028AD0 <AmiBlitz3.ab2@11596>   MOVE.l A0,(A2)
00028AD2 <AmiBlitz3.ab2@11597>   MOVEA.l A0,A2
00028AD6 <AmiBlitz3.ab2@11598>   LEA -$1(A0,D7.W),A0
00028AD8 <AmiBlitz3.ab2@11599>   MOVE.b D2,(A0)+
00028ADE <AmiBlitz3.ab2@11600>   LEA ptr_parameterstore,A1
00028AE0 <AmiBlitz3.ab2@11601>   MOVEQ #0,d0
00028AE2 <AmiBlitz3.ab2@11602>   MOVEQ #0,d1
00028AE4 <AmiBlitz3.ab2@11605>   MOVE.b (A1)+,d1
00028AE8 <AmiBlitz3.ab2@11606>    BEQ 'l12
00028AEE <AmiBlitz3.ab2@11607>    !hashalgo
00028AF0 <AmiBlitz3.ab2@11608>    MOVE.b d1,(A0)+
00028AF4 <AmiBlitz3.ab2@11609> BRA 'l11
00028AF6 <AmiBlitz3.ab2@11612>   CLR.b (a0)+
00028AFC <AmiBlitz3.ab2@11613>   LEA variablehash,a0
00028B02 <AmiBlitz3.ab2@11614>    AND.l #hashsize,d0
00028B04 <AmiBlitz3.ab2@11615>    ASL.l #2,d0
00028B08 <AmiBlitz3.ab2@11616>    MOVE.l 0(a0,d0),d1
00028B0C <AmiBlitz3.ab2@11617>    MOVE.l d1,$e(a2)
00028B10 <AmiBlitz3.ab2@11618>    MOVE.l a2,0(a0,d0)
00028B12 <AmiBlitz3.ab2@11619>    MOVEQ #0,d0
00028B16 <AmiBlitz3.ab2@11620> BRA.w reget
00028B1C <AmiBlitz3.ab2@11624>   TST.w dirmode
00028B20 <AmiBlitz3.ab2@11625>    BNE.w illdirerr
00028B22 <AmiBlitz3.ab2@11632>   MOVEQ.l #$00,D0
00028B24 <AmiBlitz3.ab2@11633>   MOVE.w D7,D0
00028B26 <AmiBlitz3.ab2@11634>   ADD.w D2,D0
00028B28 <AmiBlitz3.ab2@11635>   ADDQ.w #1,D0
00028B2A <AmiBlitz3.ab2@11636>   MOVE.w D0,D2
00028B2C <AmiBlitz3.ab2@11637>   MOVEQ.l #$01,D1
00028B32 <AmiBlitz3.ab2@11638>   MOVEA.l _execbase,A6
00028B38 <AmiBlitz3.ab2@11639>   MOVE.l mempool2,a0
00028B3C <AmiBlitz3.ab2@11640>   JSR _AllocPooled(a6)
00028B3E <AmiBlitz3.ab2@11642>   MOVEA.l D0,A0
00028B40 <AmiBlitz3.ab2@11643>   MOVE.l A0,(A2)
00028B42 <AmiBlitz3.ab2@11644>   CLR.l (a0)
00028B46 <AmiBlitz3.ab2@11645>   CLR.l 8(a0)                                              ;clear next
00028B48 <AmiBlitz3.ab2@11646>   MOVEA.l A0,A2
00028B4C <AmiBlitz3.ab2@11647>   LEA -$1(A0,D7.W),A0
00028B4E <AmiBlitz3.ab2@11648>   MOVE.b D2,(A0)+                                          ;put in struct length
00028B54 <AmiBlitz3.ab2@11649>   LEA ptr_parameterstore,A1
00028B56 <AmiBlitz3.ab2@11650>   MOVEQ #0,d0
00028B58 <AmiBlitz3.ab2@11651>   MOVEQ #0,d1
00028B5A <AmiBlitz3.ab2@11654>   MOVE.b (A1)+,d1
00028B5C <AmiBlitz3.ab2@11657>   MOVE.b d1,(A0)+
00028B60 <AmiBlitz3.ab2@11658>   BNE.w addlabel_loop2
00028B64 <AmiBlitz3.ab2@11659> BRA.w reget
00028B66 <AmiBlitz3.ab2@11663>   MOVEQ.l #$13,D7
00028B6C <AmiBlitz3.ab2@11664>   LEA constantbase,A2
00028B70 <AmiBlitz3.ab2@11665> BRA.w findlab
00028B72 <AmiBlitz3.ab2@11669>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
00028B78 <AmiBlitz3.ab2@11670>   LEA xinclude_base,A2
00028B7C <AmiBlitz3.ab2@11671> BRA.w findlab
00028B7E <AmiBlitz3.ab2@11675>   MOVEQ.l #$09,D7
00028B84 <AmiBlitz3.ab2@11676>   LEA firstconst,A2
00028B88 <AmiBlitz3.ab2@11677> BRA.w findlab
00028B8A <AmiBlitz3.ab2@11681>   MOVEQ.l #$0d,D7                                          ;find macro
00028B90 <AmiBlitz3.ab2@11682>   LEA macrobase,A2
00028B94 <AmiBlitz3.ab2@11683> BRA.w findlab
00028B9A <AmiBlitz3.ab2@11687>   LEA labelhash,A2
00028B9C <AmiBlitz3.ab2@11688>   MOVEQ.l #$13,D7
00028B9E <AmiBlitz3.ab2@11689>   EXT.l d2
00028BA4 <AmiBlitz3.ab2@11690>   LEA ptr_parameterstore,A0
00028BA6 <AmiBlitz3.ab2@11691>   MOVEQ #0,d0
00028BA8 <AmiBlitz3.ab2@11692>   MOVEQ #0,d1
00028BAA <AmiBlitz3.ab2@11695>     MOVE.b (a0)+,d1
00028BAE <AmiBlitz3.ab2@11696>     BEQ 'l15
00028BB4 <AmiBlitz3.ab2@11697>     !hashalgo
00028BB8 <AmiBlitz3.ab2@11698> BRA 'l20
00028BBE <AmiBlitz3.ab2@11701>   AND.l #hashsize,d0
00028BC0 <AmiBlitz3.ab2@11702>   ASL.l #2,d0
00028BC4 <AmiBlitz3.ab2@11703>   MOVE.l 0(a2,d0),d0
00028BC8 <AmiBlitz3.ab2@11704> BRA 'l11
00028BCC <AmiBlitz3.ab2@11707>   MOVE.l $c(A2),D0                                         ;find label
00028BD0 <AmiBlitz3.ab2@11710>   BEQ findlab__no
00028BD2 <AmiBlitz3.ab2@11711>   MOVEA.l D0,A2
00028BD4 <AmiBlitz3.ab2@11712>   MOVEQ.l #$00,D0
00028BD8 <AmiBlitz3.ab2@11713>   MOVE.b -$1(A2,D7.l),D0
00028BDE <AmiBlitz3.ab2@11714>   LEA ptr_parameterstore,A0
00028BE0 <AmiBlitz3.ab2@11715>   SUB.l D7,D0
00028BE2 <AmiBlitz3.ab2@11716>   SUBQ.l #1,D0
00028BE4 <AmiBlitz3.ab2@11717>   CMP.l D0,D2
00028BE8 <AmiBlitz3.ab2@11718>    BNE.b 'l10
00028BEC <AmiBlitz3.ab2@11719>   LEA $0(A2,D7.W),A1
00028BEE <AmiBlitz3.ab2@11720>   SUBQ.l #1,D0
00028BF0 <AmiBlitz3.ab2@11723>     MOVE.b (a1)+,d1
00028BF2 <AmiBlitz3.ab2@11724>     CMP.b (a0)+,d1
00028BF6 <AmiBlitz3.ab2@11726>     BNE.b 'l10
00028BFA <AmiBlitz3.ab2@11727>   DBF D0,'l201
00028BFE <AmiBlitz3.ab2@11729>   BSR.w reget
00028C00 <AmiBlitz3.ab2@11730>   CMP.w D0,D0
00028C02 <AmiBlitz3.ab2@11731> RTS
00028C04 <AmiBlitz3.ab2@11735>   MOVEQ.l #$0B,D7
00028C08 <AmiBlitz3.ab2@11736> BRA.w findlab
00028C0E <AmiBlitz3.ab2@11740>   LEA firstproc,A2
00028C14 <AmiBlitz3.ab2@11741>   MOVE.l #$21+#funcentry_extend,D7
00028C18 <AmiBlitz3.ab2@11742> BRA findlab
00028C1E <AmiBlitz3.ab2@11746>   LEA firstfor,A2
00028C20 <AmiBlitz3.ab2@11747>   MOVEQ.l #$11,D7
00028C24 <AmiBlitz3.ab2@11748> BRA.w findlab
00028C26 <AmiBlitz3.ab2@11752>   MOVEQ.l #$0F,D7
00028C2A <AmiBlitz3.ab2@11753> BRA.w findlab
00028C2C <AmiBlitz3.ab2@11757>   MOVEQ.l #$0F+4,D7
00028C32 <AmiBlitz3.ab2@11758>   TST.b newvariable
00028C36 <AmiBlitz3.ab2@11759>    BNE.w findlab
00028C3C <AmiBlitz3.ab2@11760>   LEA variablehash,A2
00028C42 <AmiBlitz3.ab2@11761>   LEA ptr_parameterstore,A0
00028C44 <AmiBlitz3.ab2@11762>   MOVEQ #0,d0
00028C46 <AmiBlitz3.ab2@11763>   MOVEQ #0,d1
00028C48 <AmiBlitz3.ab2@11766>     MOVE.b (a0)+,d1
00028C4C <AmiBlitz3.ab2@11767>     BEQ 'l15
00028C52 <AmiBlitz3.ab2@11768>     !hashalgo
00028C56 <AmiBlitz3.ab2@11769> BRA 'l20
00028C5C <AmiBlitz3.ab2@11772>   AND.l #hashsize,d0
00028C5E <AmiBlitz3.ab2@11773>   ASL.l #2,d0
00028C62 <AmiBlitz3.ab2@11774>   MOVE.l 0(a2,d0),d0
00028C66 <AmiBlitz3.ab2@11775> BRA 'l11
00028C6A <AmiBlitz3.ab2@11778>   MOVE.l $e(A2),D0                                         ;find label
00028C6E <AmiBlitz3.ab2@11781>   BEQ findlab__no
00028C70 <AmiBlitz3.ab2@11782>   MOVEA.l D0,A2
00028C72 <AmiBlitz3.ab2@11783>   MOVEQ.l #$00,D0
00028C76 <AmiBlitz3.ab2@11784>   MOVE.b -$1(A2,D7.W),D0
00028C7C <AmiBlitz3.ab2@11785>   LEA ptr_parameterstore,A0
00028C7E <AmiBlitz3.ab2@11786>   SUB.w D7,D0
00028C80 <AmiBlitz3.ab2@11787>   SUBQ.l #1,D0
00028C82 <AmiBlitz3.ab2@11788>   CMP.w D0,D2
00028C86 <AmiBlitz3.ab2@11789>    BNE.b 'l10
00028C8A <AmiBlitz3.ab2@11790>   LEA $0(A2,D7.W),A1
00028C8C <AmiBlitz3.ab2@11791>   SUBQ.l #1,D0
00028C8E <AmiBlitz3.ab2@11794>     MOVE.b (a1)+,d1
00028C90 <AmiBlitz3.ab2@11795>     CMP.b (a0)+,d1
00028C94 <AmiBlitz3.ab2@11797>     BNE.b 'l10
00028C98 <AmiBlitz3.ab2@11798>   DBF D0,'l201
00028C9C <AmiBlitz3.ab2@11800>   BSR.w reget
00028C9E <AmiBlitz3.ab2@11801>   CMP.w D0,D0
00028CA0 <AmiBlitz3.ab2@11802> RTS
00028CA2 <AmiBlitz3.ab2@11815>     MOVE.l (A2),D0                                         ;find label
00028CA6 <AmiBlitz3.ab2@11816>      BEQ.b findlab__no
00028CA8 <AmiBlitz3.ab2@11817>     MOVEA.l D0,A2
00028CAA <AmiBlitz3.ab2@11818>     MOVEQ.l #$00,D0
00028CAE <AmiBlitz3.ab2@11819>     MOVE.b -$1(A2,D7.W),D0
00028CB0 <AmiBlitz3.ab2@11820>     SUB.l D7,D0
00028CB2 <AmiBlitz3.ab2@11821>     SUBQ.l #1,D0
00028CB4 <AmiBlitz3.ab2@11822>   CMP.w D0,D2
00028CB8 <AmiBlitz3.ab2@11823>   BNE.b findlab__loop
00028CBC <AmiBlitz3.ab2@11825>   LEA $0(A2,D7.W),A1
00028CC2 <AmiBlitz3.ab2@11826>   LEA ptr_parameterstore,A0
00028CC4 <AmiBlitz3.ab2@11827>   SUBQ.l #1,D0
00028CC6 <AmiBlitz3.ab2@11830>     MOVE.b (a1)+,d1
00028CC8 <AmiBlitz3.ab2@11831>     CMP.b (a0)+,d1
00028CCC <AmiBlitz3.ab2@11833>     BNE.b findlab__loop
00028CD0 <AmiBlitz3.ab2@11834>   DBF D0,findlab__loop2
00028CD4 <AmiBlitz3.ab2@11836>   BSR.w reget
00028CD6 <AmiBlitz3.ab2@11837>   CMP.w D0,D0
00028CD8 <AmiBlitz3.ab2@11838> RTS
00028CDC <AmiBlitz3.ab2@11841>   BSR.w reget
00028CDE <AmiBlitz3.ab2@11842>   MOVEQ.l #-$01,D1
00028CE0 <AmiBlitz3.ab2@11843> RTS
00028CE6 <AmiBlitz3.ab2@11847>   MOVEA.l alllocals,A4
00028CEC <AmiBlitz3.ab2@11848>   CLR.l alllocals
00028CF0 <AmiBlitz3.ab2@11852>     CMPA.w #$0,A4
00028CF4 <AmiBlitz3.ab2@11853>      BEQ.b freeprocvs__done
00028CF8 <AmiBlitz3.ab2@11854>     MOVEA.l $4(A4),A3
00028CFC <AmiBlitz3.ab2@11856>     MOVEA.l $8(A4),A3
00028CFE <AmiBlitz3.ab2@11858>     MOVEA.l A4,A1
00028D00 <AmiBlitz3.ab2@11859>     MOVEA.l (A4),A4
00028D02 <AmiBlitz3.ab2@11860>     MOVEQ.l #$0C,D0
00028D08 <AmiBlitz3.ab2@11861>     MOVEA.l _execbase,A6
00028D0E <AmiBlitz3.ab2@11862>     MOVE.l mempool,a0
00028D12 <AmiBlitz3.ab2@11863>     JSR _FreePooled(A6)
00028D16 <AmiBlitz3.ab2@11864> BRA.b freeprocvs__loop
00028D1C <AmiBlitz3.ab2@11867>   CLR.l firstglob                                          ;fix 2*aclearallvar called
00028D22 <AmiBlitz3.ab2@11868>   CLR.l firstlocal
00028D28 <AmiBlitz3.ab2@11869>   CLR.l sharebase
00028D2E <AmiBlitz3.ab2@11870>   TST.l mempool2
00028D32 <AmiBlitz3.ab2@11871>   BEQ freeprocvs__done_l10
00028D38 <AmiBlitz3.ab2@11873>   MOVEA.l _execbase,A6
00028D3E <AmiBlitz3.ab2@11874>   MOVE.l mempool2,a0
00028D44 <AmiBlitz3.ab2@11875>   CLR.l mempool2
00028D48 <AmiBlitz3.ab2@11876>   JSR _DeletePool(a6)
00028D4E <AmiBlitz3.ab2@11879>   MOVE.l _execbase,a6
00028D54 <AmiBlitz3.ab2@11880>   MOVE.l #$10000,d0
00028D5A <AmiBlitz3.ab2@11881>   MOVE.l #80000,d1
00028D5C <AmiBlitz3.ab2@11882>   MOVE.l d1,d2
00028D60 <AmiBlitz3.ab2@11883>   JSR _CreatePool(a6)
00028D66 <AmiBlitz3.ab2@11884>   MOVE.l d0,mempool2
00028D68 <AmiBlitz3.ab2@11885> RTS
00028D6C <AmiBlitz3.ab2@11889>   CMPA.w #$0,A3
00028D70 <AmiBlitz3.ab2@11890>    BEQ.w freevars__done
00028D72 <AmiBlitz3.ab2@11891>   MOVEA.l A3,A1
00028D74 <AmiBlitz3.ab2@11892>   MOVEA.l (A3),A3
00028D76 <AmiBlitz3.ab2@11893>   MOVEQ.l #$00,D0
00028D7A <AmiBlitz3.ab2@11894>   MOVE.b $E(A1),D0
00028D80 <AmiBlitz3.ab2@11895>   MOVEA.l _execbase,A6
00028D86 <AmiBlitz3.ab2@11896>   MOVE.l mempool2,a0
00028D8A <AmiBlitz3.ab2@11897>   JSR _FreePooled(A6)
00028D8E <AmiBlitz3.ab2@11898> BRA.w freevars
00028D92 <AmiBlitz3.ab2@11901>     CMPA.w #$0,A3
00028D96 <AmiBlitz3.ab2@11902>      BEQ.w freevars__done
00028D98 <AmiBlitz3.ab2@11903>     MOVEA.l A3,A1
00028D9A <AmiBlitz3.ab2@11904>     MOVEA.l (A3),A3
00028D9C <AmiBlitz3.ab2@11905>     MOVEQ.l #$00,D0
00028DA0 <AmiBlitz3.ab2@11906>     MOVE.b $E+4(A1),D0
00028DA6 <AmiBlitz3.ab2@11907>     MOVEA.l _execbase,A6
00028DAC <AmiBlitz3.ab2@11908>     MOVE.l mempool2,a0
00028DB0 <AmiBlitz3.ab2@11909>     JSR _FreePooled(A6)
00028DB4 <AmiBlitz3.ab2@11910> BRA.w freevarsb
00028DB6 <AmiBlitz3.ab2@11913> RTS
00028DBC <AmiBlitz3.ab2@11917>   MOVEA.l currentlabeladdr,A0
00028DC2 <AmiBlitz3.ab2@11918>   MOVE.l a0,lastlabel
00028DC4 <AmiBlitz3.ab2@11919>   MOVEA.l (A0),A2
00028DC6 <AmiBlitz3.ab2@11920>   CLR.l (A0)
00028DCC <AmiBlitz3.ab2@11921>   MOVEA.l _execbase,A6
00028DD0 <AmiBlitz3.ab2@11924>   CMPA.w #$0,A2
00028DD4 <AmiBlitz3.ab2@11925>    BEQ.w clearlabels__done
00028DD8 <AmiBlitz3.ab2@11926>   MOVE.l $4(A2),D0
00028DDC <AmiBlitz3.ab2@11927>   BTST #$0,D0
00028DE0 <AmiBlitz3.ab2@11928>    BNE.w clearlabels__skip
00028DE2 <AmiBlitz3.ab2@11929>   MOVEA.l D0,A3
00028DE6 <AmiBlitz3.ab2@11932>     CMPA.w #$0,A3
00028DEA <AmiBlitz3.ab2@11933>      BEQ.w clearlabels__skip
00028DEC <AmiBlitz3.ab2@11934>     MOVEA.l A3,A1
00028DEE <AmiBlitz3.ab2@11935>     MOVEA.l (A3),A3
00028DF0 <AmiBlitz3.ab2@11936>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
00028DF6 <AmiBlitz3.ab2@11937>     MOVE.l mempool,a0
00028DFA <AmiBlitz3.ab2@11938>     JSR _FreePooled(A6)
00028DFE <AmiBlitz3.ab2@11939> BRA.w clearlabels__loop2
00028E00 <AmiBlitz3.ab2@11942>   MOVEQ.l #$00,D0
00028E04 <AmiBlitz3.ab2@11943>   MOVE.b $12(A2),D0
00028E06 <AmiBlitz3.ab2@11944>   MOVEA.l A2,A1
00028E08 <AmiBlitz3.ab2@11945>   MOVEA.l (A2),A2
00028E0E <AmiBlitz3.ab2@11946>   MOVE.l mempool2,a0
00028E12 <AmiBlitz3.ab2@11948> BRA.w clearlabels__loop
00028E14 <AmiBlitz3.ab2@11951> RTS
00028E1A <AmiBlitz3.ab2@11955>   MOVEA.l firstpend,A3
00028E20 <AmiBlitz3.ab2@11956>   CLR.l firstpend
00028E26 <AmiBlitz3.ab2@11957>   MOVEA.l _execbase,A6
00028E2A <AmiBlitz3.ab2@11960>     CMPA.w #$0,A3
00028E2E <AmiBlitz3.ab2@11961>      BEQ.w freepends__done
00028E30 <AmiBlitz3.ab2@11962>     MOVEA.l A3,A1
00028E32 <AmiBlitz3.ab2@11963>     MOVEQ.l #$08,D0
00028E34 <AmiBlitz3.ab2@11964>     MOVEA.l (A3),A3
00028E3A <AmiBlitz3.ab2@11965>     MOVE.l mempool,a0
00028E3E <AmiBlitz3.ab2@11966>     JSR _FreePooled(A6)
00028E42 <AmiBlitz3.ab2@11967> BRA.w fpnd2
00028E44 <AmiBlitz3.ab2@11970> RTS
00028E4A <AmiBlitz3.ab2@11974>   MOVEA.l firstproc,A2
00028E50 <AmiBlitz3.ab2@11975>   CLR.l firstproc
00028E56 <AmiBlitz3.ab2@11976>   MOVEA.l _execbase,A6
00028E5A <AmiBlitz3.ab2@11979>     CMPA.w #$0,A2
00028E5E <AmiBlitz3.ab2@11980>      BEQ.w clearfunctionlist__done
00028E60 <AmiBlitz3.ab2@11981>     MOVEA.l A2,A1
00028E62 <AmiBlitz3.ab2@11982>     MOVEA.l (A2),A2
00028E64 <AmiBlitz3.ab2@11983>     MOVEQ.l #$00,D0
00028E68 <AmiBlitz3.ab2@11984>     MOVE.b $20+#funcentry_extend(A1),D0
00028E6E <AmiBlitz3.ab2@11985>     MOVE.l mempool2,a0
00028E72 <AmiBlitz3.ab2@11986>     JSR _FreePooled(A6)
00028E76 <AmiBlitz3.ab2@11987> BRA.w clearfunctionlist__loop
00028E78 <AmiBlitz3.ab2@11990> RTS
00028E7C <AmiBlitz3.ab2@11994>   CMPA.w #$0,A2
00028E80 <AmiBlitz3.ab2@11995>    BEQ.w freetypes__done
00028E84 <AmiBlitz3.ab2@11996>   MOVEA.l $4(A2),A3
00028E88 <AmiBlitz3.ab2@11997>   CMPA.w #$FF,A3
00028E8C <AmiBlitz3.ab2@11998>    BEQ.w freetypes__noway
00028E90 <AmiBlitz3.ab2@12002>    BSR.w freevars
00028E92 <AmiBlitz3.ab2@12005>     MOVEA.l A2,A1
00028E94 <AmiBlitz3.ab2@12006>     MOVEA.l (A2),A2
00028E96 <AmiBlitz3.ab2@12007>     MOVEQ.l #$00,D0
00028E9A <AmiBlitz3.ab2@12008>     MOVE.b $A(A1),D0
00028EA0 <AmiBlitz3.ab2@12009>     MOVEA.l _execbase,A6
00028EA6 <AmiBlitz3.ab2@12010>     MOVE.l mempool2,a0
00028EAA <AmiBlitz3.ab2@12011>     JSR _FreePooled(A6)
00028EAE <AmiBlitz3.ab2@12012> BRA.w freetypes
00028EB0 <AmiBlitz3.ab2@12015> RTS
00028EB6 <AmiBlitz3.ab2@12019>   JSR uselib2
00028EBC <AmiBlitz3.ab2@12021>   CLR.w notshared
00028EC2 <AmiBlitz3.ab2@12022>   CLR.w varmode
00028EC8 <AmiBlitz3.ab2@12023>   MOVE.w proceduremode,D1
00028ECC <AmiBlitz3.ab2@12024>    BNE.w JL_0_8F4E
00028ED2 <AmiBlitz3.ab2@12025>   LEA varbase,A2
00028ED8 <AmiBlitz3.ab2@12026>   LEA ptr_parameterstore,a0
00028EDC <AmiBlitz3.ab2@12027>   CMP.b #$22,(a0)
00028EE0 <AmiBlitz3.ab2@12028>   BNE JL_0_8E5E
00028EE2 <AmiBlitz3.ab2@12029>   MOVEQ #0,d0
00028EE8 <AmiBlitz3.ab2@12030> JMP error
00028EEC <AmiBlitz3.ab2@12033>   BSR.w findvariable
00028EF0 <AmiBlitz3.ab2@12036>   BNE.w JL_0_8E7E
00028EF6 <AmiBlitz3.ab2@12039>   MOVE.b flagmask+1,D1
00028EFA <AmiBlitz3.ab2@12040>   MOVE.b $7(A2),D3
00028EFC <AmiBlitz3.ab2@12041>   EOR.b D3,D1
00028F00 <AmiBlitz3.ab2@12042>   BNE 'l2
00028F08 <AmiBlitz3.ab2@12043>   CMP.b #2,nowdeclare
00028F0C <AmiBlitz3.ab2@12044>   BEQ errormsg_declaredtwice
00028F10 <AmiBlitz3.ab2@12045> BRA.w JL_0_8FA8
00028F14 <AmiBlitz3.ab2@12048>   BSR.w findlab
00028F18 <AmiBlitz3.ab2@12049>   BNE 'l1
00028F20 <AmiBlitz3.ab2@12050>   CMP.b #2,nowdeclare
00028F24 <AmiBlitz3.ab2@12051>   BEQ errormsg_declaredtwice
00028F26 <AmiBlitz3.ab2@12052>   CMP.w d0,d0
00028F2A <AmiBlitz3.ab2@12055> BRA.w JL_0_8E62
00028F2C <AmiBlitz3.ab2@12058>    MOVE.l a2,-(a7)
00028F32 <AmiBlitz3.ab2@12059>    LEA sharebase,a2
00028F34 <AmiBlitz3.ab2@12060>    MOVEQ #$f+4,d7
00028F38 <AmiBlitz3.ab2@12061>    BSR.w findlab
00028F3C <AmiBlitz3.ab2@12062>    BEQ 'l2x
00028F3E <AmiBlitz3.ab2@12063>    MOVE.l (a7)+,a2
00028F42 <AmiBlitz3.ab2@12064> BRA 'cont
00028F44 <AmiBlitz3.ab2@12067>   ADDQ.l #4,a7
00028F4A <AmiBlitz3.ab2@12068>   CLR.w varmode
00028F50 <AmiBlitz3.ab2@12069>   MOVE.b flagmask+1,D1
00028F54 <AmiBlitz3.ab2@12070>   MOVE.b $7(A2),D3
00028F56 <AmiBlitz3.ab2@12071>   EOR.b D3,D1
00028F5A <AmiBlitz3.ab2@12072>   BNE vardeclareerr
00028F5E <AmiBlitz3.ab2@12073> BRA JL_0_8FA8
00028F64 <AmiBlitz3.ab2@12076>    MOVE.w nonew,D1
00028F68 <AmiBlitz3.ab2@12077>    BNE.w nonewerr
00028F6E <AmiBlitz3.ab2@12078>    TST.b nowdeclare
00028F72 <AmiBlitz3.ab2@12079>    BNE 'l2
00028F78 <AmiBlitz3.ab2@12080>    TST.b declare2
00028F7C <AmiBlitz3.ab2@12081>    BEQ 'l1
00028F80 <AmiBlitz3.ab2@12082>    CMP.b #$2e,d0
00028F84 <AmiBlitz3.ab2@12083>    BEQ 'l2
00028F88 <AmiBlitz3.ab2@12084>    CMP.b #"$",d0
00028F8C <AmiBlitz3.ab2@12085>    BEQ 'l2
00028F90 <AmiBlitz3.ab2@12086> BRA vardeclareerr
00028F96 <AmiBlitz3.ab2@12089>   TST.b declare
00028F9A <AmiBlitz3.ab2@12090>    BNE vardeclareerr
00028F9E <AmiBlitz3.ab2@12093>   BSR.w addvariable
00028FA4 <AmiBlitz3.ab2@12094>   NOT.w notshared
00028FA6 <AmiBlitz3.ab2@12095>   MOVEA.l A2,A3
00028FAC <AmiBlitz3.ab2@12096>   MOVEA.l defaulttype,A2
00028FB0 <AmiBlitz3.ab2@12097>   CMP.w #$2E,D0
00028FB4 <AmiBlitz3.ab2@12098>    BEQ.w JL_0_8EB8
00028FB8 <AmiBlitz3.ab2@12099>   CMP.w #$24,D0
00028FBC <AmiBlitz3.ab2@12100>    BNE.w JL_0_8ECA
00028FC2 <AmiBlitz3.ab2@12101>   LEA newtype_string,A2
00028FC6 <AmiBlitz3.ab2@12102>    BSR.w get1bytemain
00028FCA <AmiBlitz3.ab2@12103> BRA.w JL_0_8ECA
00028FD0 <AmiBlitz3.ab2@12106> JMP JUMP_notypeerr
00028FD4 <AmiBlitz3.ab2@12109>    BSR.w getparameter2
00028FDA <AmiBlitz3.ab2@12110>   LEA newtypebase,A2
00028FDE <AmiBlitz3.ab2@12111>    BSR.w findtype
00028FE2 <AmiBlitz3.ab2@12112>    BNE.w notypeerr3
00028FE8 <AmiBlitz3.ab2@12115>   CMPA.l #newtype_byte,A2
00028FEC <AmiBlitz3.ab2@12116>    BEQ.w JL_0_8EECb
00028FF2 <AmiBlitz3.ab2@12117>   MOVE.w varmode,D1
00028FF6 <AmiBlitz3.ab2@12118>    BNE.w JL_0_8EE4b
00028FFC <AmiBlitz3.ab2@12119>   ADDQ.w #1,globalvarpointer
00029004 <AmiBlitz3.ab2@12122>   BCLR #$0,globalvarpointer+1
00029008 <AmiBlitz3.ab2@12125>   MOVE.l A2,$A(A3)
00029010 <AmiBlitz3.ab2@12126>   MOVE.w flagmask,$6(A3)                                  ;??????????
00029012 <AmiBlitz3.ab2@12128>   MOVEQ.l #$04,D1
0002901A <AmiBlitz3.ab2@12129>   BTST #$0,flagmask+1
0002901E <AmiBlitz3.ab2@12130>    BNE.w JL_0_8F22b
00029026 <AmiBlitz3.ab2@12131>   BTST #$1,flagmask+1
0002902A <AmiBlitz3.ab2@12132>    BNE.w JL_0_8F22b
00029032 <AmiBlitz3.ab2@12133>   CMPI.l #$100,$4(A2)
00029036 <AmiBlitz3.ab2@12134>    BCC.w JL_0_8F22b
0002903A <AmiBlitz3.ab2@12135>   MOVE.w $8(A2),D1
00029040 <AmiBlitz3.ab2@12138>   TST.w varmode
00029044 <AmiBlitz3.ab2@12139> BRA.w JL_0_8F3E
00029048 <AmiBlitz3.ab2@12148>   BSR.w getparameter2
0002904E <AmiBlitz3.ab2@12149>   LEA newtypebase,A2
00029052 <AmiBlitz3.ab2@12150>    BSR.w findtype
00029056 <AmiBlitz3.ab2@12151>    BNE.w notypeerr
0002905C <AmiBlitz3.ab2@12154>   CMPA.l #newtype_byte,A2
00029060 <AmiBlitz3.ab2@12155>    BEQ.w JL_0_8EEC
00029066 <AmiBlitz3.ab2@12156>   MOVE.w varmode,D1
0002906A <AmiBlitz3.ab2@12157>    BNE.w JL_0_8EE4
00029070 <AmiBlitz3.ab2@12158>   ADDQ.w #1,globalvarpointer
00029078 <AmiBlitz3.ab2@12161>   BCLR #$0,globalvarpointer+1
0002907C <AmiBlitz3.ab2@12164>   MOVE.l A2,$A(A3)
00029084 <AmiBlitz3.ab2@12165>   MOVE.w flagmask,$6(A3)                                  ;??????????
00029086 <AmiBlitz3.ab2@12166>   MOVEQ.l #$04,D1
0002908E <AmiBlitz3.ab2@12167>   BTST #$0,flagmask+1
00029092 <AmiBlitz3.ab2@12168>    BNE.w JL_0_8F22
0002909A <AmiBlitz3.ab2@12169>   BTST #$1,flagmask+1
0002909E <AmiBlitz3.ab2@12170>    BNE.w JL_0_8F22
000290A6 <AmiBlitz3.ab2@12171>   CMPI.l #$100,$4(A2)
000290AA <AmiBlitz3.ab2@12172>    BCC.w JL_0_8F22
000290AE <AmiBlitz3.ab2@12173>   MOVE.w $8(A2),D1
000290B4 <AmiBlitz3.ab2@12176>   TST.w varmode
000290B8 <AmiBlitz3.ab2@12177>    BEQ.w JL_0_8F3E
000290BA <AmiBlitz3.ab2@12178>   NEG.w D1
000290C0 <AmiBlitz3.ab2@12179>   ADD.w D1,globalvarpointer
000290C8 <AmiBlitz3.ab2@12180>   MOVE.w globalvarpointer,$4(A3)
000290CA <AmiBlitz3.ab2@12181> RTS
000290D2 <AmiBlitz3.ab2@12184>   MOVE.w globalvarpointer,$4(A3)
000290D8 <AmiBlitz3.ab2@12185>   ADD.w D1,globalvarpointer
000290DA <AmiBlitz3.ab2@12186> RTS
000290E0 <AmiBlitz3.ab2@12190>   LEA firstglob,A2
000290E4 <AmiBlitz3.ab2@12191>    BSR.w findvariable2
000290E8 <AmiBlitz3.ab2@12194>   BNE.w JL_0_8F74
000290EE <AmiBlitz3.ab2@12195>   MOVE.b flagmask+1,D1
000290F2 <AmiBlitz3.ab2@12196>   MOVE.b $7(A2),D3
000290F4 <AmiBlitz3.ab2@12197>   EOR.b D3,D1
000290F8 <AmiBlitz3.ab2@12198>    BEQ.w JL_0_8FA8
000290FC <AmiBlitz3.ab2@12199>    BSR.w findlab
00029100 <AmiBlitz3.ab2@12200> BRA.w JL_0_8F58
00029108 <AmiBlitz3.ab2@12203>   MOVE.w #$FFFF,varmode
0002910E <AmiBlitz3.ab2@12204>   MOVE.w globalvarpointer,-(A7)
00029118 <AmiBlitz3.ab2@12205>   MOVE.w locvaroff,globalvarpointer
0002911E <AmiBlitz3.ab2@12206>   LEA firstlocal,A2
00029126 <AmiBlitz3.ab2@12207>   MOVE.b #1,newvariable
0002912A <AmiBlitz3.ab2@12208>    BSR.w JL_0_8E5E
00029130 <AmiBlitz3.ab2@12209>   CLR.b newvariable
0002913A <AmiBlitz3.ab2@12210>   MOVE.w globalvarpointer,locvaroff
00029140 <AmiBlitz3.ab2@12211>   MOVE.w (A7)+,globalvarpointer
00029142 <AmiBlitz3.ab2@12212> RTS
00029144 <AmiBlitz3.ab2@12215>   MOVEA.l A2,A3
00029148 <AmiBlitz3.ab2@12216>   CMP.w #$2E,D0
0002914C <AmiBlitz3.ab2@12217>    BEQ.w JL_0_8FCE
00029150 <AmiBlitz3.ab2@12218>   CMP.w #$24,D0
00029154 <AmiBlitz3.ab2@12219>    BNE.w JL_0_8FE8
0002915C <AmiBlitz3.ab2@12220>   CMPI.l #newtype_string,$A(A3)
00029160 <AmiBlitz3.ab2@12221>    BNE.w rongtypeerr
00029164 <AmiBlitz3.ab2@12222>    BSR.w get1bytemain
00029168 <AmiBlitz3.ab2@12223> BRA.w JL_0_8FE8
0002916C <AmiBlitz3.ab2@12226>    BSR.w getparameter2
00029172 <AmiBlitz3.ab2@12227>   LEA newtypebase,A2
00029176 <AmiBlitz3.ab2@12228>    BSR.w findtype
0002917A <AmiBlitz3.ab2@12229>    BNE.w notypeerr
0002917E <AmiBlitz3.ab2@12230>   CMPA.l $A(A3),A2
00029182 <AmiBlitz3.ab2@12231>    BNE.w rongtypeerr
0002918A <AmiBlitz3.ab2@12233>   BTST #$0,flagmask+1
0002918E <AmiBlitz3.ab2@12234>    BEQ.w JL_0_8FFE
00029194 <AmiBlitz3.ab2@12235>   BTST #$0,$7(A3)
00029198 <AmiBlitz3.ab2@12236>    BEQ.w pointerr
0002919C <AmiBlitz3.ab2@12239>   MOVEA.l $A(A3),A2
0002919E <AmiBlitz3.ab2@12240> RTS
000291A0 <AmiBlitz3.ab2@12244>    TST.l D3                                                ;newtype >32kb  .w to .l
000291A4 <AmiBlitz3.ab2@12245>    BEQ.w JL_0_9042
000291AE <AmiBlitz3.ab2@12246>    MOVE.l destpointer,loada
000291B2 <AmiBlitz3.ab2@12249> BRA JL_0_9032
000291B6 <AmiBlitz3.ab2@12251>   CMP.w #$9,D3                                             ;_addq_arrays
000291BA <AmiBlitz3.ab2@12252>    BCC.w JL_0_9032
000291C0 <AmiBlitz3.ab2@12253>   MOVE.w d3,arrayoffset
000291C4 <AmiBlitz3.ab2@12254>   ANDI.w #$7,D3
000291C6 <AmiBlitz3.ab2@12255>   LSL.w #8,D3
000291C8 <AmiBlitz3.ab2@12256>   LSL.w #1,D3
000291D0 <AmiBlitz3.ab2@12257>   ANDI.w #$F1FF,addqa0
000291D6 <AmiBlitz3.ab2@12258>   OR.w D3,addqa0
000291DC <AmiBlitz3.ab2@12259>   MOVE.w addqa0,D1
000291E0 <AmiBlitz3.ab2@12260> BRA.w writeword
000291E6 <AmiBlitz3.ab2@12263>   CMP.l #$7fff,d3                                          ;>32kb newtypes
000291EA <AmiBlitz3.ab2@12264>   BGT longoffset
000291F0 <AmiBlitz3.ab2@12265>   MOVE.w D3,leaa0a0+2
000291F6 <AmiBlitz3.ab2@12266>   MOVE.w d3,arrayoffset
000291FC <AmiBlitz3.ab2@12267>   MOVE.l leaa0a0,D1
00029200 <AmiBlitz3.ab2@12268>   BSR.w writelong
00029202 <AmiBlitz3.ab2@12271> RTS
00029206 <AmiBlitz3.ab2@12274>    MOVE.w #$d5fc,d1
0002920A <AmiBlitz3.ab2@12275>    BSR writeword
0002920C <AmiBlitz3.ab2@12276>    MOVE.l d3,d1
00029210 <AmiBlitz3.ab2@12277>    BSR.w writelong
00029212 <AmiBlitz3.ab2@12278> RTS
00029216 <AmiBlitz3.ab2@12282>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002921A <AmiBlitz3.ab2@12285>    BCS.w arrchk3                                           
00029220 <AmiBlitz3.ab2@12286>    JSR $20000                                              ;jsr 0
00029226 <AmiBlitz3.ab2@12292>   TST.b fast
0002922A <AmiBlitz3.ab2@12293>   BEQ 'l1
0002922C <AmiBlitz3.ab2@12294>    MOVEQ #0,d1                                             ;faster arrays
00029232 <AmiBlitz3.ab2@12295>    MOVE.w regnum,d2
00029234 <AmiBlitz3.ab2@12296>    MOVE.w d2,d1
00029236 <AmiBlitz3.ab2@12297>    LSL.w #8,d1
00029238 <AmiBlitz3.ab2@12298>    LSL.w #4,d1
0002923A <AmiBlitz3.ab2@12299>    ADD.w d2,d1
00029240 <AmiBlitz3.ab2@12300>    OR.l #$4c2d0000,d1
00029246 <AmiBlitz3.ab2@12301>    TST.w varmode
0002924A <AmiBlitz3.ab2@12302>    BEQ 'l1a
0002924E <AmiBlitz3.ab2@12303>    BCLR #16,d1
00029252 <AmiBlitz3.ab2@12306>    BSR writelong
00029256 <AmiBlitz3.ab2@12307>    MOVE.w $4(A7),D1
0002925A <AmiBlitz3.ab2@12308>    BSR.w writeword
00029260 <AmiBlitz3.ab2@12309>    MOVE.w regnum,D1
00029262 <AmiBlitz3.ab2@12310>   SUBQ.w #1,D1
00029264 <AmiBlitz3.ab2@12311>   LSL.w #8,D1
00029266 <AmiBlitz3.ab2@12312>   LSL.w #1,D1
0002926A <AmiBlitz3.ab2@12313>   ORI.w #$D080,D1
00029270 <AmiBlitz3.ab2@12314>   OR.w regnum,D1
00029274 <AmiBlitz3.ab2@12315>    BSR.w writeword
00029276 <AmiBlitz3.ab2@12316> RTS
0002927C <AmiBlitz3.ab2@12319>   MOVE.w regnum,D2
00029280 <AmiBlitz3.ab2@12320>   MOVE.w arrmul1(PC),D1
00029282 <AmiBlitz3.ab2@12321>   OR.w D2,D1
00029284 <AmiBlitz3.ab2@12322>   SUBQ.w #1,D1
00029288 <AmiBlitz3.ab2@12323>    BSR.w writeword
0002928C <AmiBlitz3.ab2@12324>   MOVE.w arrmul2(PC),D1
0002928E <AmiBlitz3.ab2@12325>   OR.w D2,D1
00029290 <AmiBlitz3.ab2@12326>   MOVE.w D2,D3
00029292 <AmiBlitz3.ab2@12327>   SUBQ.w #1,D3
00029294 <AmiBlitz3.ab2@12328>   LSL.w #8,D3
00029296 <AmiBlitz3.ab2@12329>   LSL.w #1,D3
00029298 <AmiBlitz3.ab2@12330>   OR.w D3,D1
0002929C <AmiBlitz3.ab2@12331>    BSR.w writeword
000292A0 <AmiBlitz3.ab2@12332>   MOVE.w arrmul3(PC),D1
000292A2 <AmiBlitz3.ab2@12333>   MOVE.w D2,D3
000292A4 <AmiBlitz3.ab2@12334>   LSL.w #8,D3
000292A6 <AmiBlitz3.ab2@12335>   LSL.w #1,D3
000292A8 <AmiBlitz3.ab2@12336>   OR.w D3,D1
000292AC <AmiBlitz3.ab2@12337>    BSR.w pokewda5s
000292B0 <AmiBlitz3.ab2@12338>   MOVE.w $4(A7),D1
000292B2 <AmiBlitz3.ab2@12339>   ADDQ.w #2,D1
000292B6 <AmiBlitz3.ab2@12340>    BSR.w writeword
000292BA <AmiBlitz3.ab2@12341>   MOVE.w arrmul4(PC),D1
000292BC <AmiBlitz3.ab2@12342>   MOVE.w D2,D3
000292BE <AmiBlitz3.ab2@12343>   SUBQ.w #1,D3
000292C0 <AmiBlitz3.ab2@12344>   LSL.w #8,D3
000292C2 <AmiBlitz3.ab2@12345>   LSL.w #1,D3
000292C4 <AmiBlitz3.ab2@12346>   OR.w D3,D1
000292C8 <AmiBlitz3.ab2@12347>    BSR.w pokewda5s
000292CC <AmiBlitz3.ab2@12348>   MOVE.w $4(A7),D1
000292D0 <AmiBlitz3.ab2@12349>    BSR.w writeword
000292D4 <AmiBlitz3.ab2@12350>   MOVE.w arrmul5(PC),D1
000292D6 <AmiBlitz3.ab2@12351>   OR.w D2,D1
000292D8 <AmiBlitz3.ab2@12352>   SUBQ.w #1,D1
000292DC <AmiBlitz3.ab2@12353>    BSR.w writeword
000292E0 <AmiBlitz3.ab2@12354>   MOVE.w arrmul6(PC),D1
000292E2 <AmiBlitz3.ab2@12355>   OR.w D2,D1
000292E4 <AmiBlitz3.ab2@12356>   SUBQ.w #1,D1
000292E8 <AmiBlitz3.ab2@12357>    BSR.w writeword
000292EC <AmiBlitz3.ab2@12358>   MOVE.w arrmul7(PC),D1
000292EE <AmiBlitz3.ab2@12359>   OR.w D2,D1
000292F0 <AmiBlitz3.ab2@12360>   SUBQ.w #1,D1
000292F2 <AmiBlitz3.ab2@12361>   MOVE.w D2,D3
000292F4 <AmiBlitz3.ab2@12362>   LSL.w #8,D3
000292F6 <AmiBlitz3.ab2@12363>   LSL.w #1,D3
000292F8 <AmiBlitz3.ab2@12364>   OR.w D3,D1
000292FC <AmiBlitz3.ab2@12365>    BSR.w writeword
00029300 <AmiBlitz3.ab2@12366>   MOVE.w arrmul8(PC),D1
00029302 <AmiBlitz3.ab2@12367>   MOVE.w D2,D3
00029304 <AmiBlitz3.ab2@12368>   SUBQ.w #1,D3
00029306 <AmiBlitz3.ab2@12369>   LSL.w #8,D3
00029308 <AmiBlitz3.ab2@12370>   LSL.w #1,D3
0002930A <AmiBlitz3.ab2@12371>   OR.w D3,D1
0002930E <AmiBlitz3.ab2@12372>    BSR.w writeword
00029314 <AmiBlitz3.ab2@12373>   MOVE.w regnum,D1
00029316 <AmiBlitz3.ab2@12374>   SUBQ.w #1,D1
00029318 <AmiBlitz3.ab2@12375>   LSL.w #8,D1
0002931A <AmiBlitz3.ab2@12376>   LSL.w #1,D1
0002931E <AmiBlitz3.ab2@12377>   ORI.w #$D080,D1
00029324 <AmiBlitz3.ab2@12378>   OR.w regnum,D1
00029328 <AmiBlitz3.ab2@12379> BRA.w writeword
0002932A <AmiBlitz3.ab2@12387> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002932C <AmiBlitz3.ab2@12388> arrmul2:   MOVE  d0,d0
00029330 <AmiBlitz3.ab2@12389> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
00029334 <AmiBlitz3.ab2@12390> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
00029336 <AmiBlitz3.ab2@12392> arrmul5:   SWAP d0
00029338 <AmiBlitz3.ab2@12393> arrmul6:   CLR d0
0002933A <AmiBlitz3.ab2@12394> arrmul7:   ADD.l d0,d0
0002933C <AmiBlitz3.ab2@12395> arrmul8:   MOVE.l (a7)+,d0
00029340 <AmiBlitz3.ab2@12400> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
00029344 <AmiBlitz3.ab2@12401> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
00029346 <AmiBlitz3.ab2@12402> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002934C <AmiBlitz3.ab2@12420>   CLR.l lastoffset_org
00029352 <AmiBlitz3.ab2@12421>   BTST #$1,$7(A3)
00029356 <AmiBlitz3.ab2@12422>    BEQ.w calcvar__notarr
0002935C <AmiBlitz3.ab2@12423>   MOVE.w notshared,D1
00029360 <AmiBlitz3.ab2@12424>    BNE.w noarrerr
00029364 <AmiBlitz3.ab2@12425>    BSR.w get1bytemain
00029368 <AmiBlitz3.ab2@12426>   CMP.w #$29,D0
0002936C <AmiBlitz3.ab2@12427>    BNE.w calcvar__notalist
00029372 <AmiBlitz3.ab2@12428>   BTST #$0,$6(A3)
00029376 <AmiBlitz3.ab2@12429>    BEQ.w nolisterr
0002937E <AmiBlitz3.ab2@12430>   MOVE.w $4(A3),listcode1+2
00029382 <AmiBlitz3.ab2@12431>   MOVE.l listcode1(PC),D1
00029386 <AmiBlitz3.ab2@12432>    BSR.w pokela5s
0002938A <AmiBlitz3.ab2@12433>   MOVE.l listcode2(PC),D1
0002938E <AmiBlitz3.ab2@12434>    BSR.w writelong
00029394 <AmiBlitz3.ab2@12435>   TST.b debugmode
00029398 <AmiBlitz3.ab2@12436>    BEQ.w calcvar__nolrerr
0002939A <AmiBlitz3.ab2@12440>   MOVE.l A2,-(A7)
0002939E <AmiBlitz3.ab2@12441>   MOVE.w #$C315,D1
000293A2 <AmiBlitz3.ab2@12442>    BSR.w Atokejsr
000293A4 <AmiBlitz3.ab2@12443>   MOVEA.l (A7)+,A2
000293A8 <AmiBlitz3.ab2@12446>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
000293AC <AmiBlitz3.ab2@12448>    BSR.w writeword
000293B0 <AmiBlitz3.ab2@12449> BRA.w calcvar__normalar
000293B2 <AmiBlitz3.ab2@12452> calcvar__listoff:   Ds.w 1
000293B8 <AmiBlitz3.ab2@12456>   CLR.w calcvar__listoff
000293BE <AmiBlitz3.ab2@12457>   BTST #$0,$6(A3)
000293C2 <AmiBlitz3.ab2@12458>    BEQ.w calcvar__knop
000293CA <AmiBlitz3.ab2@12459>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
000293CE <AmiBlitz3.ab2@12462>   MOVEM.l A2-A3,-(A7)
000293D4 <AmiBlitz3.ab2@12463>   MOVE.w varmode,-(A7)
000293D8 <AmiBlitz3.ab2@12464>   MOVE.w $8(A3),-(A7)                                       ;number of dims
000293DC <AmiBlitz3.ab2@12465>   MOVE.w $4(A3),-(A7)                                       ;varoff
000293DE <AmiBlitz3.ab2@12466>   MOVE.l A2,-(A7)
000293E4 <AmiBlitz3.ab2@12467>   MOVE.w flagmask,-(A7)
000293EE <AmiBlitz3.ab2@12469>   MOVE.w oldqflag,instringon
000293F4 <AmiBlitz3.ab2@12470>   MOVEA.l lastsourcepos,A5
000293F8 <AmiBlitz3.ab2@12471>    BSR.w arreval
000293FE <AmiBlitz3.ab2@12472>   MOVE.w (A7)+,flagmask
00029406 <AmiBlitz3.ab2@12473>   MOVE.w $8(A7),varmode
0002940C <AmiBlitz3.ab2@12474>   TST.b debugmode
00029410 <AmiBlitz3.ab2@12475>    BEQ.w calcvar__noszchk
00029412 <AmiBlitz3.ab2@12479>   MOVEA.l (A7)+,A2
00029414 <AmiBlitz3.ab2@12480>   MOVEQ.l #$04,D1
0002941C <AmiBlitz3.ab2@12481>   BTST #$0,flagmask+1                                      ;pointer?
00029420 <AmiBlitz3.ab2@12482>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
00029424 <AmiBlitz3.ab2@12483>   MOVE.w $8(A2),D1
00029428 <AmiBlitz3.ab2@12486>   ADD.w calcvar__listoff(PC),D1
0002942C <AmiBlitz3.ab2@12487>   BSR.w JL_0_B6DE
00029432 <AmiBlitz3.ab2@12488>   ADDQ.w #1,regnum
00029434 <AmiBlitz3.ab2@12491>   ADDQ.w #4,(A7)
00029438 <AmiBlitz3.ab2@12492>   TST.w $4(A7)
0002943C <AmiBlitz3.ab2@12493>    BEQ.w calcvar__isglob
0002943E <AmiBlitz3.ab2@12494>   SUBQ.w #8,(A7)                                           ;range check local array
00029444 <AmiBlitz3.ab2@12497>   TST.b debugmode
00029448 <AmiBlitz3.ab2@12498>    BEQ.w calcvar__noer1
0002944E <AmiBlitz3.ab2@12499>   MOVE.w regnum,D1
00029450 <AmiBlitz3.ab2@12500>   SUBQ.w #1,D1
00029452 <AmiBlitz3.ab2@12501>   LSL.w #8,D1
00029454 <AmiBlitz3.ab2@12502>   LSL.w #1,D1
00029458 <AmiBlitz3.ab2@12503>   OR.w zarrchk(PC),D1
0002945C <AmiBlitz3.ab2@12504>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002945E <AmiBlitz3.ab2@12505>   MOVE.w (A7),D1
00029462 <AmiBlitz3.ab2@12506>    BSR.w writeword
00029466 <AmiBlitz3.ab2@12507>   MOVE.l arrchk2(PC),D1
0002946A <AmiBlitz3.ab2@12508>    BSR.w writelong
0002946E <AmiBlitz3.ab2@12509>   MOVE.w #$C309,D1
00029472 <AmiBlitz3.ab2@12510>    BSR.w Atokejsr
00029476 <AmiBlitz3.ab2@12513>   SUBQ.w #1,$2(A7)
0002947A <AmiBlitz3.ab2@12514>    BEQ.w calcvar__ardone
0002947E <AmiBlitz3.ab2@12515>   CMP.w #$2C,D0
00029482 <AmiBlitz3.ab2@12516>    BNE.w syntaxerr
00029488 <AmiBlitz3.ab2@12517>    TST.b fast
0002948C <AmiBlitz3.ab2@12518>    BNE 'l1
00029490 <AmiBlitz3.ab2@12519>    BSR.w arrevalchk
00029494 <AmiBlitz3.ab2@12520> BRA 'l2
00029498 <AmiBlitz3.ab2@12523>   BSR arreval
000294A0 <AmiBlitz3.ab2@12526>   MOVE.w $4(A7),varmode
000294A4 <AmiBlitz3.ab2@12527>   BSR.w JL_0_9052
000294A8 <AmiBlitz3.ab2@12528> BRA.w calcvar__arloop
000294AC <AmiBlitz3.ab2@12532>   CMP.w #$29,D0
000294B0 <AmiBlitz3.ab2@12533>    BNE.w syntaxerr
000294B6 <AmiBlitz3.ab2@12534>   SUBQ.w #1,regnum
000294B8 <AmiBlitz3.ab2@12535>   ADDQ.w #6,A7
000294BC <AmiBlitz3.ab2@12536>   MOVEM.l (A7)+,A2-A3
000294C4 <AmiBlitz3.ab2@12537>   MOVE.w $4(A3),movea5a0+2
000294CA <AmiBlitz3.ab2@12538>   MOVE.l movea5a0,D1
000294CE <AmiBlitz3.ab2@12539>    BSR.w pokela5s
000294D4 <AmiBlitz3.ab2@12540>   MOVE.w regnum,D1
000294D8 <AmiBlitz3.ab2@12541>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
000294DC <AmiBlitz3.ab2@12542>    BSR.w writeword
000294E2 <AmiBlitz3.ab2@12543>   BTST #$0,$6(A3)
000294E6 <AmiBlitz3.ab2@12544>    BEQ.w calcvar__normalar
000294EA <AmiBlitz3.ab2@12548>   MOVE.w listarfix(PC),D1
000294EE <AmiBlitz3.ab2@12549>    BSR.w writeword
000294F2 <AmiBlitz3.ab2@12552>   BSR.w get1bytemain
000294F8 <AmiBlitz3.ab2@12556>   BTST #$0,$7(A3)
000294FC <AmiBlitz3.ab2@12557>    BEQ.w calcvar__noppnt
00029500 <AmiBlitz3.ab2@12558>   CMP.w #$5C,D0
00029504 <AmiBlitz3.ab2@12559>    BNE.w calcvar__pmskip
00029508 <AmiBlitz3.ab2@12560>   MOVE.w calcvar__pfix(PC),D1
0002950C <AmiBlitz3.ab2@12561>    BSR.w writeword
00029510 <AmiBlitz3.ab2@12564>   MOVE.w #$8000,D2
00029514 <AmiBlitz3.ab2@12565> BRA.w calcvar__loopml
00029518 <AmiBlitz3.ab2@12568>   MOVE.w #$C000,D2
0002951C <AmiBlitz3.ab2@12569> BRA.w calcvar__loopml
0002951E <AmiBlitz3.ab2@12573> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
00029522 <AmiBlitz3.ab2@12578>   CMP.w #$28,D0
00029526 <AmiBlitz3.ab2@12579>    BEQ.w noarrerr
0002952E <AmiBlitz3.ab2@12580>   CMPI.l #$100,$4(A2)
00029532 <AmiBlitz3.ab2@12581>    BCS.w calcvar__simpvar
00029538 <AmiBlitz3.ab2@12582>   BTST #$0,$7(A3)
0002953C <AmiBlitz3.ab2@12583>    BEQ.w calcvar__notap
00029540 <AmiBlitz3.ab2@12587>   CMP.w #$5C,D0
00029544 <AmiBlitz3.ab2@12588>    BEQ.w calcvar__notap
00029546 <AmiBlitz3.ab2@12589>   MOVEQ.l #$00,D2
0002954A <AmiBlitz3.ab2@12590> BRA.w calcvar__simpvar2
0002954E <AmiBlitz3.ab2@12593>   MOVE.w #$8000,D2
00029556 <AmiBlitz3.ab2@12594>   MOVE.w $4(A3),movea5a0+2
0002955C <AmiBlitz3.ab2@12595>   MOVE.l movea5a0,D1
00029560 <AmiBlitz3.ab2@12596>    BSR.w pokela5s                                         ;move.l x(a5),a2
00029566 <AmiBlitz3.ab2@12598>    TST.b debugmode
0002956A <AmiBlitz3.ab2@12599>    BEQ.w 'skip
0002956E <AmiBlitz3.ab2@12600>    MOVE.w #$c320,D1
00029574 <AmiBlitz3.ab2@12601>    JSR Atokejsr
00029576 <AmiBlitz3.ab2@12605>   MOVEQ.l #$00,D3
0002957A <AmiBlitz3.ab2@12608>   CMP.w #$5C,D0
0002957E <AmiBlitz3.ab2@12609>    BNE.w calcvar__done
00029586 <AmiBlitz3.ab2@12610>   CMPI.l #$100,$4(A2)
0002958A <AmiBlitz3.ab2@12611>    BCS.w rongtypeerr
0002958C <AmiBlitz3.ab2@12612>   MOVE.w D2,-(A7)
00029590 <AmiBlitz3.ab2@12613>    BSR.w getparameter2
00029594 <AmiBlitz3.ab2@12614>    BEQ.w syntaxerr
00029596 <AmiBlitz3.ab2@12615>   ADDQ.w #4,A2
0002959A <AmiBlitz3.ab2@12616>    BSR.w findvariable2
0002959E <AmiBlitz3.ab2@12617>    BNE.w noofferr
000295A0 <AmiBlitz3.ab2@12618>   MOVE.w (A7)+,D2
000295A2 <AmiBlitz3.ab2@12619>   MOVEA.l A2,A3                                             ;pointer to offset
000295A6 <AmiBlitz3.ab2@12620>   MOVEA.l $A(A3),A2                                         ;pointer to type
000295A8 <AmiBlitz3.ab2@12621>   MOVEQ #0,d1
000295AC <AmiBlitz3.ab2@12622>   MOVE.w 4(a3),d1
000295AE <AmiBlitz3.ab2@12623>   ADD.l d1,d3
000295B4 <AmiBlitz3.ab2@12625>   MOVE.l A3,lastoffset_org
000295B8 <AmiBlitz3.ab2@12626>   CMP.w #$5B,D0
000295BC <AmiBlitz3.ab2@12627>    BNE.w calcvar__realdone
000295C2 <AmiBlitz3.ab2@12628>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
000295C6 <AmiBlitz3.ab2@12629>    BEQ.w rongtypeerr
000295CA <AmiBlitz3.ab2@12630>    BSR.w JL_0_9004
000295CE <AmiBlitz3.ab2@12631>   MOVEM.l A2-A3,-(A7)
000295D4 <AmiBlitz3.ab2@12632>   MOVE.w varmode,-(A7)
000295DA <AmiBlitz3.ab2@12633>   MOVE.l lastoffset_org,-(A7)
000295E0 <AmiBlitz3.ab2@12634>   MOVE.w pusha2,D1
000295E4 <AmiBlitz3.ab2@12635>    BSR.w writeword
000295E6 <AmiBlitz3.ab2@12636>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
000295F0 <AmiBlitz3.ab2@12637>   MOVE.l destpointer,deststore
000295F6 <AmiBlitz3.ab2@12638>    MOVE.l rightsidetype,-(a7)
000295FC <AmiBlitz3.ab2@12639>    MOVE.l leftsidetype,-(a7)
00029602 <AmiBlitz3.ab2@12640>    CLR.l rightsidetype
00029608 <AmiBlitz3.ab2@12641>    CLR.l leftsidetype
0002960C <AmiBlitz3.ab2@12642>    BSR.w eval
00029612 <AmiBlitz3.ab2@12643>    MOVE.l (a7)+,rightsidetype
00029618 <AmiBlitz3.ab2@12644>    MOVE.l (a7)+,leftsidetype
0002961C <AmiBlitz3.ab2@12645>   CMP.w #$5D,D0
00029620 <AmiBlitz3.ab2@12646>    BNE.w syntaxerr
00029626 <AmiBlitz3.ab2@12647>   TST.b fast                                               ;a2,-(a7) array
0002962A <AmiBlitz3.ab2@12648>   BEQ calcvar__loop0_l10
00029630 <AmiBlitz3.ab2@12652>   MOVE.l destpointer,d1
00029636 <AmiBlitz3.ab2@12653>   SUB.l deststore,d1
0002963C <AmiBlitz3.ab2@12654>   CMP.l #4,d1
00029640 <AmiBlitz3.ab2@12655>   BNE calcvar__loop0_l10
00029646 <AmiBlitz3.ab2@12656>   MOVE.l destpointer,a4
0002964C <AmiBlitz3.ab2@12657>   MOVE.l -4(a4),-6(a4)
00029652 <AmiBlitz3.ab2@12658>   SUBQ.l #2,destpointer
00029658 <AmiBlitz3.ab2@12659>   CLR.l imm_addr
0002965E <AmiBlitz3.ab2@12660>   CLR.l load_var_addr
00029662 <AmiBlitz3.ab2@12661> BRA calcvar__loop0_l20
00029668 <AmiBlitz3.ab2@12664>   MOVE.w pulla2,D1
0002966C <AmiBlitz3.ab2@12665>    BSR.w writeword
00029672 <AmiBlitz3.ab2@12668>   MOVE.l (A7)+,lastoffset_org
00029678 <AmiBlitz3.ab2@12669>   MOVE.w (A7)+,varmode
0002967C <AmiBlitz3.ab2@12670>   MOVEM.l (A7)+,A2-A3
00029682 <AmiBlitz3.ab2@12676>   TST.w debugmode
00029686 <AmiBlitz3.ab2@12677>    BEQ.b calcvar__nobchk
0002968A <AmiBlitz3.ab2@12678>   MOVE.w $8(A3),D1
0002968E <AmiBlitz3.ab2@12679>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
00029694 <AmiBlitz3.ab2@12683>   MOVE.w D1,brchkcode+2
0002969A <AmiBlitz3.ab2@12684>   MOVE.w regnum,D1
0002969C <AmiBlitz3.ab2@12685>   LSL.w #8,D1
0002969E <AmiBlitz3.ab2@12686>   LSL.w #1,D1
000296A2 <AmiBlitz3.ab2@12687>   OR.w brchkcode0(PC),D1
000296A8 <AmiBlitz3.ab2@12688>   MOVE.w D1,brchkcode
000296AC <AmiBlitz3.ab2@12689>   MOVE.l brchkcode(PC),D1
000296B0 <AmiBlitz3.ab2@12690>    BSR.w writelong
000296B4 <AmiBlitz3.ab2@12691>   MOVE.l brchkcode+4(PC),D1
000296B8 <AmiBlitz3.ab2@12692>    BSR.w writelong
000296BC <AmiBlitz3.ab2@12693>   MOVE.w brchkcode+8(PC),D1
000296C0 <AmiBlitz3.ab2@12694>    BSR.w writeword
000296C2 <AmiBlitz3.ab2@12697>   MOVEQ.l #$04,D1
000296C8 <AmiBlitz3.ab2@12698>   BTST #$0,$7(A3)
000296CC <AmiBlitz3.ab2@12699>    BNE.w calcvar__dothemul
000296D0 <AmiBlitz3.ab2@12700>   MOVE.w $8(A2),D1
000296D4 <AmiBlitz3.ab2@12703>   BSR.w JL_0_B6DE
000296DA <AmiBlitz3.ab2@12704>   MOVE.w addrega2,D1
000296E0 <AmiBlitz3.ab2@12705>   OR.w regnum,D1
000296E4 <AmiBlitz3.ab2@12706>    OR.w #$100,d1                                           ;>32kb types
000296E8 <AmiBlitz3.ab2@12707>    BSR.w writeword
000296EC <AmiBlitz3.ab2@12708>    BSR.w get1bytemain
000296EE <AmiBlitz3.ab2@12709>   MOVEQ.l #$00,D3
000296F2 <AmiBlitz3.ab2@12710>   MOVE.w #$8000,D2
000296F8 <AmiBlitz3.ab2@12713>   BTST #$0,$7(A3)
000296FC <AmiBlitz3.ab2@12714>    BNE.w calcvar__pointer
00029700 <AmiBlitz3.ab2@12715> BRA.w calcvar__loop0
00029704 <AmiBlitz3.ab2@12719>  CMP.w #$5C,D0
00029708 <AmiBlitz3.ab2@12720>    BNE.w calcvar__done3
0002970A <AmiBlitz3.ab2@12721>   TST.w D3
0002970E <AmiBlitz3.ab2@12722>    BNE.w calcvar__pskip
00029714 <AmiBlitz3.ab2@12723>   MOVE.w movea0,D1
00029718 <AmiBlitz3.ab2@12724>    BSR.w writeword
0002971C <AmiBlitz3.ab2@12725> BRA.w calcvar__pmore
00029722 <AmiBlitz3.ab2@12728>   MOVE.w D3,movea0a0+2
00029728 <AmiBlitz3.ab2@12729>   MOVE.l movea0a0,D1
0002972C <AmiBlitz3.ab2@12730>    BSR.w writelong
00029732 <AmiBlitz3.ab2@12733>   BTST #$2,$7(A3)
00029736 <AmiBlitz3.ab2@12734>    BEQ.w calcvar__loopml
0002973C <AmiBlitz3.ab2@12735>   MOVE.l adda0a0,D1
00029740 <AmiBlitz3.ab2@12736>    BSR.w writelong
00029744 <AmiBlitz3.ab2@12737> BRA.w calcvar__loopml
00029748 <AmiBlitz3.ab2@12740>   BSET #$E,D2
0002974E <AmiBlitz3.ab2@12741>   BTST #$2,$7(A3)
00029752 <AmiBlitz3.ab2@12742>    BNE.w calcvar__done
00029756 <AmiBlitz3.ab2@12743>   BSET #$D,D2
0002975E <AmiBlitz3.ab2@12746>   CMPI.l #$100,$4(A2)
00029762 <AmiBlitz3.ab2@12747>    BCC.w calcvar__done2
00029766 <AmiBlitz3.ab2@12748>   MOVE.b $7(A2),D2
0002976A <AmiBlitz3.ab2@12751> BRA.w JL_0_9004
0002976E <AmiBlitz3.ab2@12754>   MOVE.w $6(A2),D2
00029772 <AmiBlitz3.ab2@12757>   MOVE.w $4(A3),D3
00029778 <AmiBlitz3.ab2@12758>   BTST #$0,$7(A3)
0002977C <AmiBlitz3.ab2@12759>    BEQ.w calcvar__nopoint
00029780 <AmiBlitz3.ab2@12760>   BSET #$E,D2
00029782 <AmiBlitz3.ab2@12763> RTS
00029786 <AmiBlitz3.ab2@12767> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002978A <AmiBlitz3.ab2@12768> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002978C <AmiBlitz3.ab2@12769>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002978E <AmiBlitz3.ab2@12770>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
00029790 <AmiBlitz3.ab2@12771>              Dc.b $4E,$40                                  ;TRAP    #00
00029796 <AmiBlitz3.ab2@12779>   TST.w varmode
0002979A <AmiBlitz3.ab2@12780>    BEQ.w writeword
0002979E <AmiBlitz3.ab2@12781>   BCLR #$0,D1
000297A2 <AmiBlitz3.ab2@12782> BRA.w writeword
000297A8 <AmiBlitz3.ab2@12785>   TST.w varmode
000297AC <AmiBlitz3.ab2@12786>    BEQ.w writeword
000297B0 <AmiBlitz3.ab2@12787>   BCLR #$9,D1
000297B4 <AmiBlitz3.ab2@12788> BRA.w writeword
000297BA <AmiBlitz3.ab2@12791>   TST.w proceduremode
000297BE <AmiBlitz3.ab2@12792>    BEQ.w writelong
000297C2 <AmiBlitz3.ab2@12793>   BCLR #$19,D1
000297C6 <AmiBlitz3.ab2@12794> BRA.w writelong
000297CC <AmiBlitz3.ab2@12797>   TST.w varmode
000297D0 <AmiBlitz3.ab2@12798>   BEQ.w writelong
000297D4 <AmiBlitz3.ab2@12799>   BCLR #$10,D1
000297DA <AmiBlitz3.ab2@12802>   ADDQ.l #1,destpointer
000297E2 <AmiBlitz3.ab2@12803>   BCLR #$0,destpointer+3
000297E8 <AmiBlitz3.ab2@12804>   MOVEA.l destpointer,A4
000297EE <AmiBlitz3.ab2@12805>   CMPA.l destbufferend,A4
000297F2 <AmiBlitz3.ab2@12806>    BCC.w writeword__overa
000297F4 <AmiBlitz3.ab2@12807>   MOVE.l D1,(A4)+
000297FA <AmiBlitz3.ab2@12810>   MOVE.l A4,destpointer
000297FE <AmiBlitz3.ab2@12811>   CMPA.l bigpc(PC),A4
00029802 <AmiBlitz3.ab2@12812>    BHI.w writeword__nbp
00029804 <AmiBlitz3.ab2@12813> RTS
0002980C <AmiBlitz3.ab2@12816>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029812 <AmiBlitz3.ab2@12817>   CLR.b fast
00029818 <AmiBlitz3.ab2@12818>   CLR.b fpu
0002981E <AmiBlitz3.ab2@12819>   CLR.b iee
00029820 <AmiBlitz3.ab2@12820>   ADDQ.w #4,A4
00029824 <AmiBlitz3.ab2@12821> BRA.w writeword__msa
0002982A <AmiBlitz3.ab2@12827>   ADDQ.l #1,destpointer
00029832 <AmiBlitz3.ab2@12828>   BCLR #$0,destpointer+3
00029838 <AmiBlitz3.ab2@12829>   MOVEA.l destpointer,A4
0002983E <AmiBlitz3.ab2@12830>   CMPA.l destbufferend,A4
00029842 <AmiBlitz3.ab2@12831>    BCC.w writeword__over
00029844 <AmiBlitz3.ab2@12832>   MOVE.w D1,(A4)+
0002984A <AmiBlitz3.ab2@12835>   MOVE.l A4,destpointer
0002984E <AmiBlitz3.ab2@12836>   CMPA.l bigpc(PC),A4
00029852 <AmiBlitz3.ab2@12837>    BHI.w writeword__nbp
00029854 <AmiBlitz3.ab2@12838> RTS
0002985A <AmiBlitz3.ab2@12841>   ADDQ.l #1,destpointer
00029862 <AmiBlitz3.ab2@12842>   BCLR #$0,destpointer+3
00029868 <AmiBlitz3.ab2@12843>   MOVEA.l destpointer,A4
0002986E <AmiBlitz3.ab2@12844>   CMPA.l destbufferend,A4
00029872 <AmiBlitz3.ab2@12845>    BCC.w writeword__over
00029874 <AmiBlitz3.ab2@12846>   MOVE.w D1,(A4)+
0002987A <AmiBlitz3.ab2@12847>   MOVE.l A4,destpointer
0002987E <AmiBlitz3.ab2@12848>   CMPA.l bigpc(PC),A4
00029882 <AmiBlitz3.ab2@12849>    BHI.w writeword__nbp
00029884 <AmiBlitz3.ab2@12850> RTS
0002988A <AmiBlitz3.ab2@12853>   TST.w cfetchmode
0002988E <AmiBlitz3.ab2@12854>   BNE.w writeword__nbp2
00029894 <AmiBlitz3.ab2@12855>   MOVE.l A4,bigpc
00029896 <AmiBlitz3.ab2@12858> RTS
0002989E <AmiBlitz3.ab2@12861>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
000298A0 <AmiBlitz3.ab2@12862>   ADDQ.w #2,A4
000298A6 <AmiBlitz3.ab2@12863>   CLR.b fast
000298AC <AmiBlitz3.ab2@12864>   CLR.b fpu
000298B2 <AmiBlitz3.ab2@12865>   CLR.b iee
000298B6 <AmiBlitz3.ab2@12866> BRA.w writeword__ms
000298BC <AmiBlitz3.ab2@12870>   MOVEA.l destpointer,A4
000298C2 <AmiBlitz3.ab2@12871>   CMPA.l destbufferend,A4
000298C6 <AmiBlitz3.ab2@12872>    BCC.w writebyte__over
000298C8 <AmiBlitz3.ab2@12873>   MOVE.b D1,(A4)+
000298CE <AmiBlitz3.ab2@12876>   MOVE.l A4,destpointer
000298D2 <AmiBlitz3.ab2@12877>   CMPA.l bigpc(PC),A4
000298D6 <AmiBlitz3.ab2@12878>    BHI.w writebyte__nbp
000298D8 <AmiBlitz3.ab2@12879> RTS
000298DE <AmiBlitz3.ab2@12882>   TST.w cfetchmode
000298E2 <AmiBlitz3.ab2@12883>    BNE.w writebyte__nbp2
000298E8 <AmiBlitz3.ab2@12884>   MOVE.l A4,bigpc
000298EA <AmiBlitz3.ab2@12887> RTS
000298F2 <AmiBlitz3.ab2@12890>   MOVE.w #-1,dontwrite
000298F4 <AmiBlitz3.ab2@12891>   ADDQ.w #1,A4
000298FA <AmiBlitz3.ab2@12892>   CLR.b fast
00029900 <AmiBlitz3.ab2@12893>   CLR.b fpu
00029906 <AmiBlitz3.ab2@12894>   CLR.b iee
0002990A <AmiBlitz3.ab2@12895> BRA.w writebyte__ms
0002990E <AmiBlitz3.ab2@12898> bigpc:   Ds.l 1
00029910 <AmiBlitz3.ab2@12902>   MOVE.w (A0)+,D1
00029914 <AmiBlitz3.ab2@12903>   BSR.w writeword
00029916 <AmiBlitz3.ab2@12906>     CMPA.l A1,A0
0002991A <AmiBlitz3.ab2@12907>     BCC.w pokecode__done
0002991C <AmiBlitz3.ab2@12908>       MOVE.w (A0)+,D1
00029920 <AmiBlitz3.ab2@12909>       BSR.w writeword
00029924 <AmiBlitz3.ab2@12910> BRA.w pokecode__loop
00029926 <AmiBlitz3.ab2@12913> RTS
00029928 <AmiBlitz3.ab2@12916>   MOVE.w (A0)+,D1
0002992C <AmiBlitz3.ab2@12917>   BSR.w writeword
0002992E <AmiBlitz3.ab2@12918>   CMPA.l A1,A0
00029932 <AmiBlitz3.ab2@12919>   BCS.w pokecode2
00029934 <AmiBlitz3.ab2@12920> RTS
0002993A <AmiBlitz3.ab2@12926>   TST.b iniffcommand
0002993E <AmiBlitz3.ab2@12927>   BEQ 'l1
00029942 <AmiBlitz3.ab2@12928>     MOVE.w #$4880,D1
00029948 <AmiBlitz3.ab2@12929>     OR.w regnum,D1
0002994C <AmiBlitz3.ab2@12930>     BSR writeword
0002994E <AmiBlitz3.ab2@12933> RTS
00029952 <AmiBlitz3.ab2@12936>   BSR.w convert_byte_to_word
00029958 <AmiBlitz3.ab2@12939>   TST.b iee
0002995C <AmiBlitz3.ab2@12940>   BEQ 'old
00029960 <AmiBlitz3.ab2@12941>   CMP.b #5,d2
00029964 <AmiBlitz3.ab2@12942>   BEQ wtof
00029968 <AmiBlitz3.ab2@12945>   MOVE.w #$48C0,D1
0002996E <AmiBlitz3.ab2@12946>   OR.w regnum,D1
00029972 <AmiBlitz3.ab2@12947> BRA.w writeword
00029974 <AmiBlitz3.ab2@12950>   MOVEQ #0,d0
0002997A <AmiBlitz3.ab2@12951>   MOVE.w regnum,d0
0002997C <AmiBlitz3.ab2@12952>   ASL.l #7,d0
00029982 <AmiBlitz3.ab2@12953>   MOVE.l #$f2005000,d1
00029984 <AmiBlitz3.ab2@12954>   OR.l d0,d1
00029986 <AmiBlitz3.ab2@12955>   ASL.l #1,d0
00029988 <AmiBlitz3.ab2@12956>   ASL.l #8,d0
0002998A <AmiBlitz3.ab2@12957>   OR.l d0,d1
0002998E <AmiBlitz3.ab2@12958> BRA writelong
00029992 <AmiBlitz3.ab2@12962>   BSR.w convert_byte_to_word
00029996 <AmiBlitz3.ab2@12965>   MOVE.w #$4840,D1
0002999C <AmiBlitz3.ab2@12966>   OR.w regnum,D1
000299A0 <AmiBlitz3.ab2@12967>    BSR.w writeword
000299A4 <AmiBlitz3.ab2@12968>   MOVE.w #$4240,D1
000299AA <AmiBlitz3.ab2@12969>   OR.w regnum,D1
000299AE <AmiBlitz3.ab2@12970> BRA.w writeword
000299B2 <AmiBlitz3.ab2@12974>   CMP.w #$ffdc,d1
000299B6 <AmiBlitz3.ab2@12975>   BNE 'negfpu
000299B8 <AmiBlitz3.ab2@12976>   MOVEQ #0,d0
000299BE <AmiBlitz3.ab2@12977>   MOVE.w regnum,d0
000299C0 <AmiBlitz3.ab2@12978>   ASL.l #7,d0
000299C6 <AmiBlitz3.ab2@12979>   MOVE.l #$f2004000,d1
000299C8 <AmiBlitz3.ab2@12980>   OR.l d0,d1
000299CA <AmiBlitz3.ab2@12981>   ASL.l #1,d0
000299CC <AmiBlitz3.ab2@12982>   ASL.l #8,d0
000299CE <AmiBlitz3.ab2@12983>   OR.l d0,d1
000299D2 <AmiBlitz3.ab2@12984> BRA writelong
000299D4 <AmiBlitz3.ab2@12988>   MOVEQ #0,d1
000299DA <AmiBlitz3.ab2@12989>   MOVE.w regnum,d1                                         ;fpu neg
000299DC <AmiBlitz3.ab2@12990>   ASL.l #7,d1
000299E2 <AmiBlitz3.ab2@12991>   OR.l #$f200001a,d1
000299E4 <AmiBlitz3.ab2@12992>   MOVE.l d0,-(a7)
000299E6 <AmiBlitz3.ab2@12993>   MOVEQ #0,d0
000299EC <AmiBlitz3.ab2@12994>   MOVE.w regnum,d0
000299EE <AmiBlitz3.ab2@12995>   ASL.l #8,d0
000299F0 <AmiBlitz3.ab2@12996>   ASL.l #2,d0
000299F2 <AmiBlitz3.ab2@12997>   OR.l d0,d1
000299F4 <AmiBlitz3.ab2@12998>   MOVE.l (a7)+,d0
000299F8 <AmiBlitz3.ab2@12999> BRA writelong
000299FE <AmiBlitz3.ab2@13002>    TST.b iee
00029A02 <AmiBlitz3.ab2@13003>    BNE wtof
00029A06 <AmiBlitz3.ab2@13004>    BSR.w convert_byte_to_long
00029A0A <AmiBlitz3.ab2@13007>    MOVE.w #$FFDC,D1
00029A10 <AmiBlitz3.ab2@13010>    TST.b iee
00029A14 <AmiBlitz3.ab2@13011>    BNE ltof
00029A1A <AmiBlitz3.ab2@13012>    MOVE.w D1,libjsr+2
00029A1E <AmiBlitz3.ab2@13013>    BSR.w JL_0_AD40
00029A20 <AmiBlitz3.ab2@13014>   MOVE.l D4,D1
00029A24 <AmiBlitz3.ab2@13015>    BSR.w JL_0_AD38
00029A28 <AmiBlitz3.ab2@13016>   MOVE.w #$C900,D1
00029A2C <AmiBlitz3.ab2@13017>    BSR.w Atokejsr
00029A30 <AmiBlitz3.ab2@13018>    BSR.w JL_0_A352
00029A36 <AmiBlitz3.ab2@13019>   MOVE.l libjsr,D1
00029A3A <AmiBlitz3.ab2@13020>    BSR.w writelong
00029A3E <AmiBlitz3.ab2@13021>    BSR.w JL_0_A36E
00029A40 <AmiBlitz3.ab2@13022>   MOVE.l D5,D1
00029A44 <AmiBlitz3.ab2@13023> BRA.w JL_0_AD38
00029A46 <AmiBlitz3.ab2@13026> RTS
00029A4A <AmiBlitz3.ab2@13029>   MOVE.w #$C317,D1
00029A50 <AmiBlitz3.ab2@13030>   TST.b typecheck
00029A54 <AmiBlitz3.ab2@13031>   BEQ 'l1
00029A5A <AmiBlitz3.ab2@13032>    TST.b notypecheck
00029A5E <AmiBlitz3.ab2@13033>    BNE 'l1
00029A64 <AmiBlitz3.ab2@13034>    TST.l lasttoken
00029A6A <AmiBlitz3.ab2@13041>   TST.b debugmode
00029A6E <AmiBlitz3.ab2@13042>    BEQ.w JL_0_9696
00029A76 <AmiBlitz3.ab2@13043>   BTST #$7,overflowcheck
00029A7A <AmiBlitz3.ab2@13044>    BEQ.w JL_0_9696
00029A80 <AmiBlitz3.ab2@13045>   TST.w cfetchmode
00029A84 <AmiBlitz3.ab2@13046>    BNE.w JL_0_9696
00029A8A <AmiBlitz3.ab2@13047>   TST.w regnum
00029A8E <AmiBlitz3.ab2@13048>    BEQ.w JL_0_968A
00029A90 <AmiBlitz3.ab2@13049>   MOVE.w D1,-(A7)
00029A94 <AmiBlitz3.ab2@13050>   MOVE.w JL_0_9698(PC),D1
00029A98 <AmiBlitz3.ab2@13051>    BSR.w writeword
00029A9E <AmiBlitz3.ab2@13052>   MOVE.w regnum,D1
00029AA2 <AmiBlitz3.ab2@13053>   OR.w L_0_969C(PC),D1
00029AA6 <AmiBlitz3.ab2@13054>    BSR.w writeword
00029AA8 <AmiBlitz3.ab2@13055>   MOVE.w (A7)+,D1
00029AAC <AmiBlitz3.ab2@13056>    BSR.w JL_0_968A
00029AB0 <AmiBlitz3.ab2@13057>   MOVE.w L_0_969A(PC),D1
00029AB4 <AmiBlitz3.ab2@13058> BRA.w writeword
00029AB8 <AmiBlitz3.ab2@13062>   MOVEM.l D0-D7/A0-A6,-(A7)
00029ABC <AmiBlitz3.ab2@13063>    BSR.w Atokejsr
00029AC0 <AmiBlitz3.ab2@13064>   MOVEM.l (A7)+,D0-D7/A0-A6
00029AC2 <AmiBlitz3.ab2@13067> RTS
00029AC4 <AmiBlitz3.ab2@13070>   MOVE.l D0,-(A7)
00029AC6 <AmiBlitz3.ab2@13073>   MOVE.l (A7)+,D0
00029AC8 <AmiBlitz3.ab2@13076>   MOVE.l D0,D0
00029ACC <AmiBlitz3.ab2@13079>   BSR.w convert_word_to_long
00029AD2 <AmiBlitz3.ab2@13080>   TST.b iee
00029AD6 <AmiBlitz3.ab2@13081>   BEQ 'old
00029ADA <AmiBlitz3.ab2@13082>   CMP.b #5,d2
00029ADE <AmiBlitz3.ab2@13083>   BNE 'old
00029AE0 <AmiBlitz3.ab2@13084> RTS
00029AE4 <AmiBlitz3.ab2@13087> BRA.w JL_0_9600
00029AE8 <AmiBlitz3.ab2@13091>   MOVE.w #$C316,D1
00029AEE <AmiBlitz3.ab2@13092>   TST.b typecheck
00029AF2 <AmiBlitz3.ab2@13093>   BEQ 'l1
00029AF8 <AmiBlitz3.ab2@13094>   TST.b peekaddrsize
00029AFC <AmiBlitz3.ab2@13095>   BNE 'l1
00029B02 <AmiBlitz3.ab2@13096>   TST.b notypecheck
00029B06 <AmiBlitz3.ab2@13097>   BNE 'l1
00029B0C <AmiBlitz3.ab2@13098>   TST.l lasttoken
00029B10 <AmiBlitz3.ab2@13104> BRA.w JL_0_963A
00029B14 <AmiBlitz3.ab2@13108>   MOVE.w #$C318,D1
00029B1A <AmiBlitz3.ab2@13109>   TST.b typecheck
00029B1E <AmiBlitz3.ab2@13110>   BEQ 'l1
00029B24 <AmiBlitz3.ab2@13111>   TST.b peekaddrsize
00029B28 <AmiBlitz3.ab2@13112>   BNE 'l1
00029B2E <AmiBlitz3.ab2@13113>   TST.b notypecheck
00029B32 <AmiBlitz3.ab2@13114>   BNE 'l1
00029B38 <AmiBlitz3.ab2@13115>   TST.l lasttoken
00029B3C <AmiBlitz3.ab2@13121> BRA.w JL_0_963A
00029B40 <AmiBlitz3.ab2@13125>   MOVE.w #$C318,D1
00029B46 <AmiBlitz3.ab2@13126>   TST.b typecheck
00029B4A <AmiBlitz3.ab2@13127>   BEQ 'l1
00029B50 <AmiBlitz3.ab2@13128>   TST.b notypecheck
00029B54 <AmiBlitz3.ab2@13129>   BNE 'l1
00029B5A <AmiBlitz3.ab2@13130>   TST.l lasttoken
00029B5E <AmiBlitz3.ab2@13136>   BSR.w JL_0_963A
00029B62 <AmiBlitz3.ab2@13137> BRA.w convert_word_to_quick
00029B66 <AmiBlitz3.ab2@13141> BRA.w JL_0_9600
00029B68 <AmiBlitz3.ab2@13145> RTS
00029B6C <AmiBlitz3.ab2@13149>   MOVE.w #$C319,D1
00029B72 <AmiBlitz3.ab2@13150>   TST.b typecheck
00029B76 <AmiBlitz3.ab2@13151>   BEQ 'l1
00029B7C <AmiBlitz3.ab2@13152>   TST.b notypecheck
00029B80 <AmiBlitz3.ab2@13153>   BNE 'l1
00029B86 <AmiBlitz3.ab2@13154>   TST.l lasttoken
00029B8A <AmiBlitz3.ab2@13161>   BSR.w JL_0_963A
00029B8E <AmiBlitz3.ab2@13164>   MOVE.w #$4240,D1
00029B94 <AmiBlitz3.ab2@13165>   OR.w regnum,D1
00029B98 <AmiBlitz3.ab2@13166>   BSR.w writeword
00029B9C <AmiBlitz3.ab2@13167>   MOVE.w #$4840,D1
00029BA2 <AmiBlitz3.ab2@13168>   OR.w regnum,D1
00029BA6 <AmiBlitz3.ab2@13169> BRA.w writeword
00029BAA <AmiBlitz3.ab2@13173> BRA.w JL_0_96D0
00029BAE <AmiBlitz3.ab2@13177>   BSR.w JL_0_96D0
00029BB2 <AmiBlitz3.ab2@13178> BRA.w convert_word_to_long
00029BB4 <AmiBlitz3.ab2@13183>   MOVEQ #0,d0
00029BBA <AmiBlitz3.ab2@13184>   MOVE.w regnum,d0
00029BBC <AmiBlitz3.ab2@13185>   ASL.l #7,d0
00029BC2 <AmiBlitz3.ab2@13186>   MOVE.l #$f2004000,d1
00029BC4 <AmiBlitz3.ab2@13187>   OR.l d0,d1
00029BC6 <AmiBlitz3.ab2@13188>   ASL.l #1,d0
00029BC8 <AmiBlitz3.ab2@13189>   ASL.l #8,d0
00029BCA <AmiBlitz3.ab2@13190>   OR.l d0,d1
00029BCE <AmiBlitz3.ab2@13191>   BSR writelong
00029BD4 <AmiBlitz3.ab2@13192>   MOVE.w regnum,d0
00029BD6 <AmiBlitz3.ab2@13193>   ASL.l #7,d0
00029BDC <AmiBlitz3.ab2@13194>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
00029BDE <AmiBlitz3.ab2@13195>   OR.w d0,d1
00029BE2 <AmiBlitz3.ab2@13196>   BSR writelong
00029BE8 <AmiBlitz3.ab2@13197>   MOVE.l #$37800000,d1
00029BEC <AmiBlitz3.ab2@13198>   BSR writelong
00029BEE <AmiBlitz3.ab2@13199> RTS
00029BF4 <AmiBlitz3.ab2@13203>   TST.b iee
00029BF8 <AmiBlitz3.ab2@13204>   BNE qtof
00029BFC <AmiBlitz3.ab2@13205>   MOVE.w #$D300,D1
00029BFE <AmiBlitz3.ab2@13208>   MOVE.w D1,-(A7)
00029C02 <AmiBlitz3.ab2@13209>    BSR.w JL_0_AD40
00029C04 <AmiBlitz3.ab2@13210>   MOVE.l D4,D1
00029C08 <AmiBlitz3.ab2@13211>    BSR.w JL_0_AD38
00029C0C <AmiBlitz3.ab2@13212>    BSR.w JL_0_A352
00029C0E <AmiBlitz3.ab2@13213>   MOVE.w (A7)+,D1
00029C12 <AmiBlitz3.ab2@13214>    BSR.w Atokejsr
00029C16 <AmiBlitz3.ab2@13215>    BSR.w JL_0_A36E
00029C18 <AmiBlitz3.ab2@13216>   MOVE.l D5,D1
00029C1C <AmiBlitz3.ab2@13217> BRA.w JL_0_AD38
00029C1E <AmiBlitz3.ab2@13221> RTS
00029C24 <AmiBlitz3.ab2@13224>   TST.b typecheck
00029C28 <AmiBlitz3.ab2@13225>   BEQ 'l1
00029C2E <AmiBlitz3.ab2@13226>   TST.b notypecheck
00029C32 <AmiBlitz3.ab2@13227>   BNE 'l1
00029C38 <AmiBlitz3.ab2@13228>   TST.l lasttoken
00029C3E <AmiBlitz3.ab2@13233>   TST.b iee
00029C42 <AmiBlitz3.ab2@13234>   BNE ftol
00029C46 <AmiBlitz3.ab2@13235>   MOVE.w #$C31A,D1
00029C4A <AmiBlitz3.ab2@13236>   BSR.w JL_0_963A
00029C4E <AmiBlitz3.ab2@13237>   BSR.w JL_0_974A
00029C52 <AmiBlitz3.ab2@13238> BRA.w convert_long_to_byte
00029C54 <AmiBlitz3.ab2@13242> RTS
00029C5A <AmiBlitz3.ab2@13245>   TST.b typecheck
00029C5E <AmiBlitz3.ab2@13246>   BEQ 'l1
00029C64 <AmiBlitz3.ab2@13247>   TST.b notypecheck
00029C68 <AmiBlitz3.ab2@13248>   BNE 'l1
00029C6E <AmiBlitz3.ab2@13249>   TST.l lasttoken
00029C74 <AmiBlitz3.ab2@13254>   TST.b iee
00029C78 <AmiBlitz3.ab2@13255>   BNE ftol
00029C7C <AmiBlitz3.ab2@13256>   MOVE.w #$C31B,D1
00029C80 <AmiBlitz3.ab2@13257>   BSR.w JL_0_963A
00029C84 <AmiBlitz3.ab2@13258>   BSR.w JL_0_974A
00029C88 <AmiBlitz3.ab2@13259> BRA.w convert_long_to_word
00029C8A <AmiBlitz3.ab2@13263> RTS
00029C90 <AmiBlitz3.ab2@13266>   TST.b iee
00029C94 <AmiBlitz3.ab2@13267>   BNE ftol
00029C98 <AmiBlitz3.ab2@13268>   MOVE.w #$C31C,D1
00029C9C <AmiBlitz3.ab2@13269>   BSR.w JL_0_963A
00029CA0 <AmiBlitz3.ab2@13272>   MOVE.w #$FFE2,D1
00029CA4 <AmiBlitz3.ab2@13273> BRA.w JL_0_9604
00029CA6 <AmiBlitz3.ab2@13276>   MOVE.l d0,-(a7)
00029CA8 <AmiBlitz3.ab2@13277>   MOVEQ #0,d0
00029CAE <AmiBlitz3.ab2@13278>   MOVE.w regnum,d0
00029CB0 <AmiBlitz3.ab2@13279>   ASL.l #7,d0
00029CB6 <AmiBlitz3.ab2@13280>   MOVE.l #$f2006000,d1
00029CB8 <AmiBlitz3.ab2@13281>   OR.l d0,d1
00029CBA <AmiBlitz3.ab2@13282>   ASL.l #1,d0
00029CBC <AmiBlitz3.ab2@13283>   ASL.l #8,d0
00029CBE <AmiBlitz3.ab2@13284>   OR.l d0,d1
00029CC0 <AmiBlitz3.ab2@13285>   MOVE.l (a7)+,d0
00029CC4 <AmiBlitz3.ab2@13286> BRA writelong
00029CC6 <AmiBlitz3.ab2@13290>   MOVE.l d0,-(a7)
00029CC8 <AmiBlitz3.ab2@13291>   MOVEQ #0,d0
00029CCE <AmiBlitz3.ab2@13292>   MOVE.l #$f23c4023,d1
00029CD4 <AmiBlitz3.ab2@13293>   MOVE.w regnum,d0
00029CD6 <AmiBlitz3.ab2@13294>   ASL.l #7,d0
00029CD8 <AmiBlitz3.ab2@13295>   OR.l d0,d1
00029CDC <AmiBlitz3.ab2@13296>   BSR writelong
00029CE2 <AmiBlitz3.ab2@13297>   MOVE.l #$00010000,d1
00029CE6 <AmiBlitz3.ab2@13298>   BSR writelong
00029CEC <AmiBlitz3.ab2@13299>   MOVE.w regnum,d0
00029CEE <AmiBlitz3.ab2@13300>   ASL.l #7,d0
00029CF4 <AmiBlitz3.ab2@13301>   MOVE.l #$f2006000,d1
00029CF6 <AmiBlitz3.ab2@13302>   OR.l d0,d1
00029CF8 <AmiBlitz3.ab2@13303>   ASL.l #1,d0
00029CFA <AmiBlitz3.ab2@13304>   ASL.l #8,d0
00029CFC <AmiBlitz3.ab2@13305>   OR.l d0,d1
00029D00 <AmiBlitz3.ab2@13306>   BSR writelong
00029D02 <AmiBlitz3.ab2@13307>   MOVE.l (a7)+,d0
00029D04 <AmiBlitz3.ab2@13308> RTS
00029D06 <AmiBlitz3.ab2@13312> RTS
00029D0C <AmiBlitz3.ab2@13316>   TST.b iee
00029D10 <AmiBlitz3.ab2@13317>   BNE ftoq
00029D14 <AmiBlitz3.ab2@13318>   MOVE.w #$C31B,D1
00029D18 <AmiBlitz3.ab2@13319>   BSR.w JL_0_963A
00029D1C <AmiBlitz3.ab2@13320>   MOVE.w #$D301,D1
00029D20 <AmiBlitz3.ab2@13321> BRA.w JL_0_96FC
00029D26 <AmiBlitz3.ab2@13327>    TST.b blitzparloop
00029D2A <AmiBlitz3.ab2@13328>    BNE 'l1
00029D30 <AmiBlitz3.ab2@13329>    TST.b funcparloop
00029D34 <AmiBlitz3.ab2@13330>    BNE 'l1
00029D38 <AmiBlitz3.ab2@13331>    BRA error_convert_types
00029D40 <AmiBlitz3.ab2@13334>   CMP.b #2,optistring
00029D44 <AmiBlitz3.ab2@13335>   BEQ JLrts
00029D4A <AmiBlitz3.ab2@13336>   MOVE.w stol,D1
00029D4E <AmiBlitz3.ab2@13337>   BSR.w writeword
00029D56 <AmiBlitz3.ab2@13338>   CMPI.w #$2,sbgot
00029D5A <AmiBlitz3.ab2@13339>   BCS.w sbtolong
00029D5E <AmiBlitz3.ab2@13340>   MOVE.w ceos(PC),D1
00029D62 <AmiBlitz3.ab2@13341>   BSR.w writeword
00029D68 <AmiBlitz3.ab2@13344>   MOVE.w regnum,D1
00029D6A <AmiBlitz3.ab2@13345>   LSL.w #8,D1
00029D6C <AmiBlitz3.ab2@13346>   LSL.w #1,D1
00029D74 <AmiBlitz3.ab2@13347>   CMPI.w #$2,sbgot
00029D78 <AmiBlitz3.ab2@13348>   BCS.w JL_0_98E8
00029D7E <AmiBlitz3.ab2@13349>   MOVE.w a2offset,D3
00029D84 <AmiBlitz3.ab2@13350>   SUB.w thisstuse,D3
00029D88 <AmiBlitz3.ab2@13351>   CMP.w #$6,D3
00029D8C <AmiBlitz3.ab2@13352>   BNE.w JL_0_98D4b
00029D92 <AmiBlitz3.ab2@13353>   OR.w movestst2,D1
00029D96 <AmiBlitz3.ab2@13354>   BSR.w writeword
00029D9C <AmiBlitz3.ab2@13355>   LEA movestst2+2,A0
00029DA2 <AmiBlitz3.ab2@13356>   LEA movestst2f,A1
00029DA6 <AmiBlitz3.ab2@13357> BRA.w pokecode2
00029DAC <AmiBlitz3.ab2@13361>   OR.w movea7dn,D1
00029DB0 <AmiBlitz3.ab2@13362>   BSR.w writeword
00029DB6 <AmiBlitz3.ab2@13363>   MOVE.l #0,D1
00029DBA <AmiBlitz3.ab2@13364> BRA.w writeword
00029DC0 <AmiBlitz3.ab2@13368>   ADDQ.w #1,fuckpos
00029DC4 <AmiBlitz3.ab2@13369>   BSR.w writeconvertcode
00029DCA <AmiBlitz3.ab2@13370>   SUBQ.w #1,fuckpos
00029DCC <AmiBlitz3.ab2@13372> RTS
00029DCE <AmiBlitz3.ab2@13376>   MOVE.w D3,D1
00029DD2 <AmiBlitz3.ab2@13377>   CMP.w #7,d1
00029DD6 <AmiBlitz3.ab2@13378>   BLE 'ok
00029DDC <AmiBlitz3.ab2@13379>   JMP errorinternalconvert
00029DDE <AmiBlitz3.ab2@13380> 'ok  SUBQ.w #1,D1
00029DE2 <AmiBlitz3.ab2@13381>   MULU #$7,D1
00029DE4 <AmiBlitz3.ab2@13382>   ADD.w D2,D1
00029DE6 <AmiBlitz3.ab2@13383>   SUBQ.w #1,D1
00029DE8 <AmiBlitz3.ab2@13384>   LSL.w #2,D1
00029DEE <AmiBlitz3.ab2@13385>   LEA convtable,A0
00029DF2 <AmiBlitz3.ab2@13386>   MOVE.l $0(A0,D1.W),D1
00029DF6 <AmiBlitz3.ab2@13387>   BEQ.w JL_0_97A2
00029DF8 <AmiBlitz3.ab2@13388>     MOVEA.l D1,A0
00029DFC <AmiBlitz3.ab2@13389>     CMP.b #$ff,d3
00029E00 <AmiBlitz3.ab2@13390>     BEQ JL_0_97A2
00029E02 <AmiBlitz3.ab2@13391> JMP (A0)
00029E04 <AmiBlitz3.ab2@13394> RTS
00029E08 <AmiBlitz3.ab2@13397> usedfrom:  Ds.l 1
00029E0C <AmiBlitz3.ab2@13404>   CMP.w #"\",D0
00029E10 <AmiBlitz3.ab2@13405>   BNE.w JL_0_97C2
00029E14 <AmiBlitz3.ab2@13406>     CMP.b #"\",(a5)
00029E18 <AmiBlitz3.ab2@13407>     BNE 'first
00029E1E <AmiBlitz3.ab2@13408>       MOVE.l A5,usedfrom
00029E24 <AmiBlitz3.ab2@13409>       LEA path2,A5
00029E28 <AmiBlitz3.ab2@13410> BRA 'g1
00029E2A <AmiBlitz3.ab2@13413>     SUBQ.w #1,A5
00029E30 <AmiBlitz3.ab2@13414>   MOVE.l A5,usedfrom
00029E36 <AmiBlitz3.ab2@13415>   LEA usedpath,A5                                          ;read path
00029E3A <AmiBlitz3.ab2@13418>   BSR.w get1bytemain
00029E40 <AmiBlitz3.ab2@13421>   CLR.w flagmask
00029E44 <AmiBlitz3.ab2@13422>   CMP.w #$2A,D0
00029E48 <AmiBlitz3.ab2@13423>    BNE.w JL_0_983A
00029E50 <AmiBlitz3.ab2@13424>   MOVE.w #$0001,flagmask
00029E54 <AmiBlitz3.ab2@13426>    BSR.w getparameter2
00029E58 <AmiBlitz3.ab2@13429>    BEQ.w syntaxerr
00029E5C <AmiBlitz3.ab2@13430>   CMP.w #$28,D0
00029E60 <AmiBlitz3.ab2@13431>    BEQ.w JL_0_9830
00029E64 <AmiBlitz3.ab2@13432>   CMP.w #$2E,D0
00029E68 <AmiBlitz3.ab2@13433>    BEQ.w JL_0_980C
00029E6C <AmiBlitz3.ab2@13434>   CMP.w #$24,D0
00029E70 <AmiBlitz3.ab2@13435>    BNE.w JL_0_9838
00029E78 <AmiBlitz3.ab2@13436>   ORI.w #$8,flagmask
00029E7C <AmiBlitz3.ab2@13437>    BSR.w storeloc
00029E80 <AmiBlitz3.ab2@13438>    BSR.w get1bytemain
00029E84 <AmiBlitz3.ab2@13439> BRA.w JL_0_9822
00029E88 <AmiBlitz3.ab2@13443>   BSR.w storeloc
00029E8A <AmiBlitz3.ab2@13444>   MOVE.w D2,-(A7)
00029E90 <AmiBlitz3.ab2@13445>   LEA namebuff2,A1
00029E94 <AmiBlitz3.ab2@13446>    BSR.w makename3
00029E98 <AmiBlitz3.ab2@13447>    BEQ.w syntaxerr
00029E9A <AmiBlitz3.ab2@13448>   MOVE.w (A7)+,D2
00029E9C <AmiBlitz3.ab2@13451>    MOVE.w D0,D1
00029EA0 <AmiBlitz3.ab2@13452>    BSR.w resloc
00029EA4 <AmiBlitz3.ab2@13453>    CMP.w #$28,D1
00029EA8 <AmiBlitz3.ab2@13454>    BNE.w JL_0_9838
00029EB0 <AmiBlitz3.ab2@13457>   ORI.w #$2,flagmask
00029EB2 <AmiBlitz3.ab2@13460> RTS
00029EB6 <AmiBlitz3.ab2@13464>   CMP.w #$40,D0
00029EBA <AmiBlitz3.ab2@13465>    BNE.w JL_0_984E
00029EC2 <AmiBlitz3.ab2@13466>   MOVE.w #$0005,flagmask
00029EC6 <AmiBlitz3.ab2@13467> BRA.w JL_0_97D8
00029ECA <AmiBlitz3.ab2@13471>   BSR.w makename2
00029ECE <AmiBlitz3.ab2@13472> BRA.w JL_0_97DC
00029ED2 <AmiBlitz3.ab2@13476>   MOVE.w #$FED3,D1
00029ED6 <AmiBlitz3.ab2@13477>    BSR.w uselib
00029EDC <AmiBlitz3.ab2@13478>   LEA pusha3,A0
00029EE2 <AmiBlitz3.ab2@13479>   LEA pusha3f,A1
00029EE6 <AmiBlitz3.ab2@13480> BRA.w pokecode
00029EEA <AmiBlitz3.ab2@13484>   MOVE.w #$FED3,D1
00029EEE <AmiBlitz3.ab2@13485>    BSR.w uselib
00029EF4 <AmiBlitz3.ab2@13486>   LEA pulla3,A0
00029EFA <AmiBlitz3.ab2@13487>   LEA pulla3f,A1
00029EFE <AmiBlitz3.ab2@13488> BRA.w pokecode
00029F00 <AmiBlitz3.ab2@13492> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
00029F08 <AmiBlitz3.ab2@13497>     CMP.b #2,optistring
00029F0C <AmiBlitz3.ab2@13498>    BEQ 'l10
00029F10 <AmiBlitz3.ab2@13499>    MOVE.w ceos(PC),D1
00029F14 <AmiBlitz3.ab2@13500>    BSR.w writeword                                         ;clr.b (a3)
00029F1A <AmiBlitz3.ab2@13503>   MOVE.w regnum,D1
00029F1C <AmiBlitz3.ab2@13504>   LSL.w #8,D1
00029F1E <AmiBlitz3.ab2@13505>   LSL.w #1,D1
00029F26 <AmiBlitz3.ab2@13506>   CMPI.w #$2,sbgot
00029F2A <AmiBlitz3.ab2@13507>    BCS.w JL_0_98E8
00029F30 <AmiBlitz3.ab2@13508>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
00029F36 <AmiBlitz3.ab2@13509>   SUB.w thisstuse,D3
00029F3A <AmiBlitz3.ab2@13510>   CMP.w #$6,D3
00029F3E <AmiBlitz3.ab2@13511>    BNE.w JL_0_98D4
00029F44 <AmiBlitz3.ab2@13512>   OR.w movestst2,D1
00029F48 <AmiBlitz3.ab2@13513>    BSR.w writeword
00029F4E <AmiBlitz3.ab2@13514>   LEA movestst2+2,A0
00029F54 <AmiBlitz3.ab2@13515>   LEA movestst2f,A1
00029F58 <AmiBlitz3.ab2@13516> BRA.w pokecode2
00029F5E <AmiBlitz3.ab2@13520>    OR.w movea7dn,D1
00029F62 <AmiBlitz3.ab2@13521>    BSR.w writeword
00029F68 <AmiBlitz3.ab2@13522>   MOVE.l movea7dn+2,D1
00029F6C <AmiBlitz3.ab2@13534>   BSR writelong
00029F74 <AmiBlitz3.ab2@13537>    CMP.w #6,regnum
00029F78 <AmiBlitz3.ab2@13538>    BEQ 'l1
00029F7E <AmiBlitz3.ab2@13539>    TST.w stackpar
00029F82 <AmiBlitz3.ab2@13540>    BNE 'l1
00029F88 <AmiBlitz3.ab2@13541>    TST.b funcparloop
00029F8C <AmiBlitz3.ab2@13542>    BEQ 'l1
00029F92 <AmiBlitz3.ab2@13543>    MOVE.l #$48780000,d1
00029F96 <AmiBlitz3.ab2@13544>    BSR writelong
00029F98 <AmiBlitz3.ab2@13548> RTS
00029F9A <AmiBlitz3.ab2@13553>      MOVE.l d1,-(a7)
00029FA2 <AmiBlitz3.ab2@13554>      CMP.w #6,regnum
00029FA6 <AmiBlitz3.ab2@13555>      BEQ 'l1
00029FAC <AmiBlitz3.ab2@13556>      TST.w stackpar
00029FB0 <AmiBlitz3.ab2@13557>      BNE 'l1
00029FB6 <AmiBlitz3.ab2@13558>      TST.b funcparloop
00029FBA <AmiBlitz3.ab2@13559>      BEQ 'l1
00029FC0 <AmiBlitz3.ab2@13560>      MOVE.l #$48780000,d1
00029FC4 <AmiBlitz3.ab2@13561>      BSR writelong
00029FC6 <AmiBlitz3.ab2@13564>      MOVE.l (a7)+,d1
00029FCC <AmiBlitz3.ab2@13566>    OR.w movestdn,D1
00029FD0 <AmiBlitz3.ab2@13567>    BSR.w writeword
00029FD4 <AmiBlitz3.ab2@13568>   MOVE.w #$FED3,D1
00029FD8 <AmiBlitz3.ab2@13569>    BSR.w uselib
00029FDC <AmiBlitz3.ab2@13570>   MOVE.w $A(A1),D1
00029FE0 <AmiBlitz3.ab2@13571> BRA.w writeword
00029FE2 <AmiBlitz3.ab2@13574> unknown:    Ds.w 1
00029FE8 <AmiBlitz3.ab2@13577> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
00029FEC <AmiBlitz3.ab2@13578> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
00029FF2 <AmiBlitz3.ab2@13579>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
00029FF8 <AmiBlitz3.ab2@13585>   TST.b debugmode
00029FFC <AmiBlitz3.ab2@13586>   BEQ.w sharreval
0002A000 <AmiBlitz3.ab2@13587>  BSR.w arreval
0002A004 <AmiBlitz3.ab2@13590>   MOVE.w somecode(PC),D1
0002A00A <AmiBlitz3.ab2@13591>   OR.w regnum,D1
0002A00E <AmiBlitz3.ab2@13592>    BSR.w writeword
0002A010 <AmiBlitz3.ab2@13593>   MOVEQ.l #$01,D1
0002A012 <AmiBlitz3.ab2@13594>   SWAP D1
0002A016 <AmiBlitz3.ab2@13595>    BSR.w writelong
0002A01A <AmiBlitz3.ab2@13596>   MOVE.l somecode2(PC),D1
0002A01E <AmiBlitz3.ab2@13597>    BSR.w writelong
0002A022 <AmiBlitz3.ab2@13598>   MOVE.w #$C309,D1
0002A026 <AmiBlitz3.ab2@13599> BRA.w Atokejsr
0002A028 <AmiBlitz3.ab2@13603>   MOVEQ.l #$02,D2
0002A02A <AmiBlitz3.ab2@13604>   MOVEQ.l #$00,D1
0002A02C <AmiBlitz3.ab2@13605>   MOVEQ.l #$00,D3
0002A030 <AmiBlitz3.ab2@13606> BRA.w maineval2
0002A032 <AmiBlitz3.ab2@13610>   MOVEQ.l #$03,D2
0002A034 <AmiBlitz3.ab2@13611>   MOVEQ.l #$00,D1
0002A036 <AmiBlitz3.ab2@13612>   MOVEQ.l #$00,D3
0002A03C <AmiBlitz3.ab2@13613>   MOVE.b notypecheck,-(a7)
0002A044 <AmiBlitz3.ab2@13614>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002A04A <AmiBlitz3.ab2@13615>   JSR maineval2
0002A050 <AmiBlitz3.ab2@13616>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002A052 <AmiBlitz3.ab2@13617>   RTS
0002A05C <AmiBlitz3.ab2@13621>   MOVE.w oldqflag,instringon
0002A062 <AmiBlitz3.ab2@13622>   MOVEA.l lastsourcepos,A5
0002A064 <AmiBlitz3.ab2@13623>   MOVEQ.l #-$01,D1
0002A066 <AmiBlitz3.ab2@13624>   MOVEQ.l #-$01,D3
0002A06A <AmiBlitz3.ab2@13625> BRA.w peval
0002A074 <AmiBlitz3.ab2@13630>   MOVE.w oldqflag,instringon
0002A07A <AmiBlitz3.ab2@13631>   MOVEA.l lastsourcepos,A5
0002A07C <AmiBlitz3.ab2@13634>   MOVEQ.l #-$01,D1
0002A07E <AmiBlitz3.ab2@13635>   MOVEQ.l #$00,D3
0002A084 <AmiBlitz3.ab2@13636>   MOVE.l leftsidetype,-(a7)
0002A08A <AmiBlitz3.ab2@13637>   MOVE.l rightsidetype,-(a7)
0002A090 <AmiBlitz3.ab2@13638>   CLR.l leftsidetype
0002A096 <AmiBlitz3.ab2@13639>   CLR.l rightsidetype
0002A09C <AmiBlitz3.ab2@13640>   JSR maineval
0002A0A2 <AmiBlitz3.ab2@13641>   MOVE.l (a7)+,rightsidetype
0002A0A8 <AmiBlitz3.ab2@13642>   MOVE.l (a7)+,leftsidetype
0002A0AA <AmiBlitz3.ab2@13643>   RTS
0002A0B4 <AmiBlitz3.ab2@13647>   MOVE.w oldqflag,instringon
0002A0BA <AmiBlitz3.ab2@13648>   MOVEA.l lastsourcepos,A5
0002A0BC <AmiBlitz3.ab2@13649>   MOVEQ.l #$00,D1
0002A0BE <AmiBlitz3.ab2@13650>   MOVEQ.l #-$01,D3
0002A0C2 <AmiBlitz3.ab2@13651> BRA.w maineval
0002A0C4 <AmiBlitz3.ab2@13655>   MOVEQ.l #$01,D1
0002A0C6 <AmiBlitz3.ab2@13656>   MOVEQ.l #-$01,D3
0002A0CA <AmiBlitz3.ab2@13657> BRA.w maineval
0002A0D4 <AmiBlitz3.ab2@13662>   MOVE.w oldqflag,instringon
0002A0DA <AmiBlitz3.ab2@13663>   MOVEA.l lastsourcepos,A5
0002A0DC <AmiBlitz3.ab2@13666>   MOVEQ.l #$00,D1                                        ;no push
0002A0DE <AmiBlitz3.ab2@13667>   MOVEQ.l #$00,D3
0002A0E6 <AmiBlitz3.ab2@13688>    CMPI.w #$6,regnum
0002A0EA <AmiBlitz3.ab2@13689>    BCS.w maineval2
0002A0EC <AmiBlitz3.ab2@13690>    MOVEQ #0,d1
0002A0F2 <AmiBlitz3.ab2@13691>    MOVE.l destpointer,a4
0002A0F8 <AmiBlitz3.ab2@13693>    CMPA.l destbufferend,A4
0002A0FC <AmiBlitz3.ab2@13694>    BCC.w maineval__l2
0002A102 <AmiBlitz3.ab2@13696>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002A106 <AmiBlitz3.ab2@13698>    BNE maineval__l2
0002A10A <AmiBlitz3.ab2@13702> BRA maineval__l1
0002A10C <AmiBlitz3.ab2@13705>   MOVEQ.l #-$01,D1
0002A114 <AmiBlitz3.ab2@13708>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002A11A <AmiBlitz3.ab2@13711>   MOVE.w thisstuse,-(A7)
0002A124 <AmiBlitz3.ab2@13712>   MOVE.w a2offset,thisstuse
0002A12A <AmiBlitz3.ab2@13713>   MOVE.w stackpar,-(A7)
0002A130 <AmiBlitz3.ab2@13714>   MOVE.w D1,stackpar
0002A136 <AmiBlitz3.ab2@13715>   MOVE.w sbgot,-(A7)
0002A13C <AmiBlitz3.ab2@13716>   CLR.w sbgot
0002A140 <AmiBlitz3.ab2@13717>   MOVE.w unknown(PC),-(A7)
0002A146 <AmiBlitz3.ab2@13718>   MOVE.w D3,unknown
0002A148 <AmiBlitz3.ab2@13719>   MOVE.w D2,-(a7)
0002A14E <AmiBlitz3.ab2@13720>   MOVE.w d2,mode
0002A152 <AmiBlitz3.ab2@13721>    BSR.w eval3
0002A154 <AmiBlitz3.ab2@13722>   MOVE.w (a7)+,d3
0002A158 <AmiBlitz3.ab2@13723>    BEQ.w maineval__noconv
0002A15C <AmiBlitz3.ab2@13724>   MOVE.w unknown(PC),D1
0002A160 <AmiBlitz3.ab2@13725>    BNE.w maineval__noconv
0002A162 <AmiBlitz3.ab2@13726>   EXG.l D2,D3
0002A164 <AmiBlitz3.ab2@13727>    MOVE.l a2,-(a7)
0002A16A <AmiBlitz3.ab2@13728>    TST.b curtemplabel
0002A16E <AmiBlitz3.ab2@13729>    BEQ maineval2__l10
0002A174 <AmiBlitz3.ab2@13730>    MOVE.l asmbuff,a2
0002A17A <AmiBlitz3.ab2@13731>    CMP.w #$c,$8(a2)
0002A17E <AmiBlitz3.ab2@13732>    BEQ maineval2__l20
0002A184 <AmiBlitz3.ab2@13733>    CMP.w #$d,$8(a2)
0002A188 <AmiBlitz3.ab2@13734>    BEQ maineval2__l20
0002A18A <AmiBlitz3.ab2@13737>   CMP.w d2,d3
0002A18E <AmiBlitz3.ab2@13738>   BEQ maineval2__l20
0002A192 <AmiBlitz3.ab2@13739>   BSR.w writeconvertcode
0002A198 <AmiBlitz3.ab2@13740>   CLR.b doimmediate
0002A19A <AmiBlitz3.ab2@13743>   MOVE.l (a7)+,a2
0002A1A0 <AmiBlitz3.ab2@13746>   MOVE.w (A7)+,unknown
0002A1A6 <AmiBlitz3.ab2@13747>   MOVE.w stackpar,D1
0002A1AA <AmiBlitz3.ab2@13748>    BEQ.w maineval__skipme
0002A1AE <AmiBlitz3.ab2@13749>    BMI.w maineval__skipme
0002A1B4 <AmiBlitz3.ab2@13753>   MOVE.w regnum,D1
0002A1B6 <AmiBlitz3.ab2@13754>   LSL.w #8,D1
0002A1B8 <AmiBlitz3.ab2@13755>   LSL.w #1,D1
0002A1BC <AmiBlitz3.ab2@13756>   CMP.w #$7,D2
0002A1C0 <AmiBlitz3.ab2@13757>    BNE.w maineval__hi1
0002A1C8 <AmiBlitz3.ab2@13758>    CMP.b #2,optistring
0002A1CC <AmiBlitz3.ab2@13759>    BEQ maineval__hi1a
0002A1CE <AmiBlitz3.ab2@13760>   MOVE.w D1,-(A7)
0002A1D4 <AmiBlitz3.ab2@13761>   OR.w getstlen,D1
0002A1D8 <AmiBlitz3.ab2@13762>    BSR.w writeword
0002A1DA <AmiBlitz3.ab2@13763>   MOVE.w (A7)+,D1
0002A1E0 <AmiBlitz3.ab2@13766>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002A1E4 <AmiBlitz3.ab2@13770>   MOVE.w #$3f3c,d1
0002A1E8 <AmiBlitz3.ab2@13771>    BSR.w writeword
0002A1EA <AmiBlitz3.ab2@13775>   MOVE.w d2,d1
0002A1F0 <AmiBlitz3.ab2@13776>   MOVE.w d1,libmode
0002A1F4 <AmiBlitz3.ab2@13777>    BSR.w writeword
0002A1F8 <AmiBlitz3.ab2@13778>   CMP.w #$7,D2
0002A1FC <AmiBlitz3.ab2@13779>    BNE.w maineval__skipme
0002A202 <AmiBlitz3.ab2@13780>   MOVE.w putstlen,D1
0002A208 <AmiBlitz3.ab2@13781>   OR.w regnum,D1
0002A20C <AmiBlitz3.ab2@13782>    BSR.w writeword
0002A210 <AmiBlitz3.ab2@13785>    CMP.w #$7,D2
0002A214 <AmiBlitz3.ab2@13786>    BNE.w maineval__notst
0002A21C <AmiBlitz3.ab2@13797>    CMP.b #2,optistring
0002A220 <AmiBlitz3.ab2@13798>    BEQ maineval__skipme_l10
0002A226 <AmiBlitz3.ab2@13799>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002A22A <AmiBlitz3.ab2@13800>    BSR.w sbtolong
0002A22E <AmiBlitz3.ab2@13801> BRA.w maineval__notst2
0002A236 <AmiBlitz3.ab2@13805>     CMP.w #6,regnum
0002A23A <AmiBlitz3.ab2@13806>     BEQ maineval__skipme_l10_l1
0002A240 <AmiBlitz3.ab2@13807>     TST.b funcparloop
0002A244 <AmiBlitz3.ab2@13808>     BEQ maineval__skipme_l10_l1
0002A24A <AmiBlitz3.ab2@13809>     MOVE.l #$48780000,d1
0002A24E <AmiBlitz3.ab2@13810>     BSR writelong
0002A252 <AmiBlitz3.ab2@13813> BRA.w maineval__notst2
0002A258 <AmiBlitz3.ab2@13816>   ADDQ.w #2,a2offset
0002A25C <AmiBlitz3.ab2@13817> BRA maineval__skipme
0002A264 <AmiBlitz3.ab2@13820>   CMPI.w #$2,sbgot
0002A268 <AmiBlitz3.ab2@13821>    BCS.w maineval__notst2                                         ;correct stack
0002A26C <AmiBlitz3.ab2@13822>   MOVE.w ststfix(PC),D1
0002A270 <AmiBlitz3.ab2@13823>    BSR.w writeword
0002A276 <AmiBlitz3.ab2@13826>   MOVE.w (A7)+,sbgot
0002A27C <AmiBlitz3.ab2@13827>   MOVE.w stackpar,D1
0002A280 <AmiBlitz3.ab2@13828>    BPL.w maineval__skip
0002A284 <AmiBlitz3.ab2@13829>    CMP.b #7,d2
0002A288 <AmiBlitz3.ab2@13830>    BEQ maineval__notst2_l1
0002A28E <AmiBlitz3.ab2@13831>   TST.b funcparloop
0002A292 <AmiBlitz3.ab2@13832>   BEQ maineval__notst2_l1
0002A296 <AmiBlitz3.ab2@13833>   CMP.b #5,d2
0002A29A <AmiBlitz3.ab2@13834>   BNE maineval__notst2_skip
0002A2A0 <AmiBlitz3.ab2@13835>   TST.b fpu
0002A2A4 <AmiBlitz3.ab2@13836>   BEQ maineval__notst2_skip
0002A2AA <AmiBlitz3.ab2@13837>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002A2B0 <AmiBlitz3.ab2@13838>   JSR writelong
0002A2B4 <AmiBlitz3.ab2@13841>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002A2BA <AmiBlitz3.ab2@13842>   ADD.w parnum,d1
0002A2C0 <AmiBlitz3.ab2@13843>   JSR Atokejsr
0002A2C6 <AmiBlitz3.ab2@13844>    TST.w dontwrite
0002A2CA <AmiBlitz3.ab2@13845>    BNE maineval__notst2_l1
0002A2D0 <AmiBlitz3.ab2@13846>    MOVE.l data1start,d1
0002A2D6 <AmiBlitz3.ab2@13847>    MOVE.l destpointer,a4
0002A2DA <AmiBlitz3.ab2@13848>    ADD.l d1,-4(a4)
0002A2E0 <AmiBlitz3.ab2@13849>    MOVE.l destpointer,d1
0002A2E2 <AmiBlitz3.ab2@13850>    SUBQ.l #4,d1
0002A2E8 <AmiBlitz3.ab2@13851>    SUB.l destbufferstart,d1
0002A2EA <AmiBlitz3.ab2@13852>    MOVE.l d2,-(a7)
0002A2EC <AmiBlitz3.ab2@13853>    MOVE.l d1,d2
0002A2F2 <AmiBlitz3.ab2@13854>    JSR addhunkoffset
0002A2F4 <AmiBlitz3.ab2@13855>    MOVE.l (a7)+,d2
0002A2F8 <AmiBlitz3.ab2@13856> BRA maineval__skip
0002A2FE <AmiBlitz3.ab2@13859>   ADDQ.w #2,a2offset
0002A304 <AmiBlitz3.ab2@13860>   MOVE.w pushd0wd,D1
0002A308 <AmiBlitz3.ab2@13861>   CMP.w #$3,D2                                             ;write parameter to stack
0002A30C <AmiBlitz3.ab2@13862>    BCS.w maineval__ok
0002A312 <AmiBlitz3.ab2@13863>   ADDQ.w #2,a2offset
0002A318 <AmiBlitz3.ab2@13864>   TST.b fpu
0002A31C <AmiBlitz3.ab2@13865>   BEQ maineval__notst2_nofpu
0002A320 <AmiBlitz3.ab2@13866>   CMP.w #5,d2
0002A324 <AmiBlitz3.ab2@13867>   BNE maineval__notst2_nofpu
0002A326 <AmiBlitz3.ab2@13868>   MOVEQ #0,d1
0002A32C <AmiBlitz3.ab2@13869>   MOVE.w regnum,d1
0002A32E <AmiBlitz3.ab2@13870>   ASL.l #7,d1
0002A334 <AmiBlitz3.ab2@13871>   OR.l #$f2276400,d1
0002A338 <AmiBlitz3.ab2@13872>   BSR writelong
0002A33C <AmiBlitz3.ab2@13873> BRA maineval__skip
0002A342 <AmiBlitz3.ab2@13876>   MOVE.w pushd0l,D1
0002A348 <AmiBlitz3.ab2@13879>    OR.w regnum,D1
0002A34C <AmiBlitz3.ab2@13880>    BSR.w writeword                                         ;nat
0002A352 <AmiBlitz3.ab2@13883>   MOVE.w (A7)+,stackpar
0002A358 <AmiBlitz3.ab2@13884>   MOVE.w (A7)+,thisstuse
0002A35A <AmiBlitz3.ab2@13885> RTS
0002A35C <AmiBlitz3.ab2@13888> thisstuse: Ds.w 1
0002A35E <AmiBlitz3.ab2@13891> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002A360 <AmiBlitz3.ab2@13892> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002A364 <AmiBlitz3.ab2@13897>   BSR.w eval4
0002A36E <AmiBlitz3.ab2@13898>   SUBI.l #$12,forthsp
0002A370 <AmiBlitz3.ab2@13899> RTS
0002A372 <AmiBlitz3.ab2@13903>   MOVEQ.l #$01,D1
0002A376 <AmiBlitz3.ab2@13905>       MOVEA.l precsp(PC),A1
0002A378 <AmiBlitz3.ab2@13906>       MOVE.l A0,(A1)+
0002A37A <AmiBlitz3.ab2@13907>       MOVE.w D1,(A1)+
0002A380 <AmiBlitz3.ab2@13908>       MOVE.l A1,precsp
0002A384 <AmiBlitz3.ab2@13909>    BSR.w calcloop
0002A386 <AmiBlitz3.ab2@13910>   TST.w D1
0002A38A <AmiBlitz3.ab2@13911>    BNE.w syntaxerr
0002A390 <AmiBlitz3.ab2@13912>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002A392 <AmiBlitz3.ab2@13913> RTS
0002A396 <AmiBlitz3.ab2@13918>   BSR.w JL_0_9C24
0002A39A <AmiBlitz3.ab2@13921>   MOVEA.l precsp(PC),A1
0002A39C <AmiBlitz3.ab2@13922>   CMP.w -(A1),D1
0002A3A0 <AmiBlitz3.ab2@13923>    BHI.w JL_0_9B0A
0002A3A2 <AmiBlitz3.ab2@13924> RTS
0002A3A6 <AmiBlitz3.ab2@13929>   MOVEA.l precsp(PC),A1
0002A3A8 <AmiBlitz3.ab2@13930>   MOVE.l A0,(A1)+
0002A3AA <AmiBlitz3.ab2@13931>   MOVE.w D1,(A1)+
0002A3B0 <AmiBlitz3.ab2@13932>   MOVE.l A1,precsp
0002A3B2 <AmiBlitz3.ab2@13933>   MOVE.w D2,-(A7)
0002A3B8 <AmiBlitz3.ab2@13934>   ADDQ.w #1,regnum
0002A3BC <AmiBlitz3.ab2@13935>    BSR.w calcloop               ;constant optimizer
0002A3C2 <AmiBlitz3.ab2@13936>   SUBQ.w #1,regnum
0002A3C4 <AmiBlitz3.ab2@13937>   MOVE.w (A7)+,D3
0002A3C8 <AmiBlitz3.ab2@13938>   MOVEM.l D1/A0,-(A7)
0002A3CC <AmiBlitz3.ab2@13939>    BEQ.w JL_0_9B2E
0002A3D0 <AmiBlitz3.ab2@13940>    BSR.w JL_0_9770
0002A3D4 <AmiBlitz3.ab2@13943>   BSR.w popprec
0002A3D8 <AmiBlitz3.ab2@13944>   BSR.w writecode
0002A3DC <AmiBlitz3.ab2@13945>   MOVEA.l forthsp(PC),A0
0002A3E0 <AmiBlitz3.ab2@13946>   MOVE.w -$2(A0),D1
0002A3E4 <AmiBlitz3.ab2@13947>   OR.w -$14(A0),D1
0002A3E8 <AmiBlitz3.ab2@13948>   MOVE.w D1,-$14(A0)
0002A3EC <AmiBlitz3.ab2@13949>    BNE.w JL_0_9C0E
0002A3F2 <AmiBlitz3.ab2@13950>   MOVE.w dontwrite,D1
0002A3F6 <AmiBlitz3.ab2@13951>    BNE.w JL_0_9C0E
0002A3FA <AmiBlitz3.ab2@13952>    MOVEA.l -$24(A0),A0
0002A536 <AmiBlitz3.ab2@13954>  !newcalc
0002A53A <AmiBlitz3.ab2@13955>    BEQ 'l10
0002A53E <AmiBlitz3.ab2@13956>    MOVEA.l forthsp(PC),A0
0002A546 <AmiBlitz3.ab2@13957>    MOVE.w -$18(A0),lasta6
0002A54E <AmiBlitz3.ab2@13958>    MOVE.l -$1C(A0),lasta6
0002A552 <AmiBlitz3.ab2@13959>    MOVEA.l -$24(A0),A0
0002A558 <AmiBlitz3.ab2@13960>    MOVE.l A0,destpointer
0002A55E <AmiBlitz3.ab2@13961>    MOVEA.l _mathffpbase,A6
0002A564 <AmiBlitz3.ab2@13962>    MOVEA.l ffplib,A1
0002A568 <AmiBlitz3.ab2@13963> BRA cont1
0002A56C <AmiBlitz3.ab2@13966>   MOVE.w #$2000,D1
0002A572 <AmiBlitz3.ab2@13967>   OR.w regnum,D1
0002A576 <AmiBlitz3.ab2@13968>    BSR.w writeword
0002A578 <AmiBlitz3.ab2@13969>     MOVEQ #0,d1
0002A57E <AmiBlitz3.ab2@13970>     MOVE.w regnum,D1
0002A580 <AmiBlitz3.ab2@13971>     ASL.l #8,d1
0002A582 <AmiBlitz3.ab2@13972>     ASL.l #2,d1
0002A588 <AmiBlitz3.ab2@13973>     OR.l #$f2000000,d1
0002A58C <AmiBlitz3.ab2@13974>     BSR writelong
0002A590 <AmiBlitz3.ab2@13975>   MOVE.w #$4E75,D1
0002A594 <AmiBlitz3.ab2@13976>    BSR.w writeword
0002A59C <AmiBlitz3.ab2@13977>   MOVE.w -$18(A0),lasta6
0002A5A4 <AmiBlitz3.ab2@13978>   MOVE.l -$1C(A0),lasta6
0002A5A8 <AmiBlitz3.ab2@13979>   MOVEA.l -$24(A0),A0
0002A5AE <AmiBlitz3.ab2@13980>   MOVE.l A0,destpointer
0002A5B2 <AmiBlitz3.ab2@13981>   MOVEM.l D2/A5,-(A7)
0002A5B8 <AmiBlitz3.ab2@13982>   MOVEA.l _mathffpbase,A6
0002A5BE <AmiBlitz3.ab2@13983>   MOVEA.l ffplib,A1
0002A5C2 <AmiBlitz3.ab2@13984>   MOVE.w $A(A1),D0
0002A5C8 <AmiBlitz3.ab2@13985>   LEA _mathffpbase,A5
0002A5CA <AmiBlitz3.ab2@13986>   SUBA.w D0,A5
0002A5D0 <AmiBlitz3.ab2@13987>   JSR Aclearcache                                          ;neg +
0002A5D6 <AmiBlitz3.ab2@13988>   CLR.l load_var_addr
0002A5DC <AmiBlitz3.ab2@13989>   CLR.l imm_addr
0002A5E2 <AmiBlitz3.ab2@13990>   TST.w dontwrite
0002A5E6 <AmiBlitz3.ab2@13991>   BNE '1
0002A5E8 <AmiBlitz3.ab2@13992>   JSR (A0)                                                 ;calc constant inline expression
0002A5EC <AmiBlitz3.ab2@13995>   MOVEM.l (A7)+,D2/A5
0002A5F2 <AmiBlitz3.ab2@13998>   MOVE.b d2,isconstantvalue
0002A5F8 <AmiBlitz3.ab2@13999>   MOVE.l d0,lastconstantvalue
0002A5FE <AmiBlitz3.ab2@14000>   MOVE.w regnum,D1
0002A600 <AmiBlitz3.ab2@14001>   LSL.w #8,D1
0002A602 <AmiBlitz3.ab2@14002>   LSL.w #1,D1
0002A606 <AmiBlitz3.ab2@14003>   ORI.w #$203C,D1
0002A60A <AmiBlitz3.ab2@14004>   CMP.w #$3,D2
0002A60E <AmiBlitz3.ab2@14005>    BCC.w JL_0_9BCE
0002A612 <AmiBlitz3.ab2@14006>   ORI.w #$1000,D1
0002A616 <AmiBlitz3.ab2@14007>    BSR.w writeword
0002A618 <AmiBlitz3.ab2@14008>   MOVE.w D0,D1
0002A61C <AmiBlitz3.ab2@14009>    BSR.w writeword
0002A620 <AmiBlitz3.ab2@14010> BRA.w JL_0_9BD8
0002A626 <AmiBlitz3.ab2@14014>   TST.b iee                                                ;fpu constant
0002A62A <AmiBlitz3.ab2@14015>   BEQ 'l10
0002A62E <AmiBlitz3.ab2@14016>   CMP.b #5,d2
0002A632 <AmiBlitz3.ab2@14017>   BNE 'l10
0002A634 <AmiBlitz3.ab2@14018>   MOVEQ #0,d1
0002A63A <AmiBlitz3.ab2@14019>   MOVE.w regnum,D1
0002A63C <AmiBlitz3.ab2@14020>   ASL.l #7,d1
0002A642 <AmiBlitz3.ab2@14021>   OR.l #$f23c5400,d1
0002A646 <AmiBlitz3.ab2@14022>   BSR writelong
0002A648 <AmiBlitz3.ab2@14023>   SUBQ.l #8,a7
0002A64E <AmiBlitz3.ab2@14024>   fmove.d fp0,0(a7)
0002A650 <AmiBlitz3.ab2@14025>   MOVE.l (a7)+,d1
0002A654 <AmiBlitz3.ab2@14026>   BSR writelong
0002A656 <AmiBlitz3.ab2@14027>   MOVE.l (a7)+,d1
0002A65A <AmiBlitz3.ab2@14028>   BSR writelong
0002A65E <AmiBlitz3.ab2@14029> BRA JL_0_9BD8
0002A662 <AmiBlitz3.ab2@14032>   BSR.w writeword
0002A664 <AmiBlitz3.ab2@14033>   MOVE.l D0,D1
0002A668 <AmiBlitz3.ab2@14034>   BSR.w writelong
0002A66C <AmiBlitz3.ab2@14037>   MOVEA.l forthsp(PC),A0
0002A670 <AmiBlitz3.ab2@14038>   MOVEA.l -$20(A0),A3
0002A676 <AmiBlitz3.ab2@14039>   MOVEA.l hunkoffsetbase,A2
0002A67C <AmiBlitz3.ab2@14040>   MOVE.l A3,hunkoffsetbase
0002A682 <AmiBlitz3.ab2@14041>   MOVEA.l _execbase,A6
0002A684 <AmiBlitz3.ab2@14044>   CMPA.l A3,A2
0002A688 <AmiBlitz3.ab2@14045>   BEQ.w JL_0_9C0A
0002A68E <AmiBlitz3.ab2@14046>   SUBQ.l #1,hunkoffsetcounter
0002A690 <AmiBlitz3.ab2@14047>   MOVEA.l A2,A1
0002A692 <AmiBlitz3.ab2@14048>   MOVEA.l (A2),A2
0002A694 <AmiBlitz3.ab2@14049>   MOVEQ.l #$8,D0
0002A69A <AmiBlitz3.ab2@14050>   MOVE.l mempool2,a0
0002A69E <AmiBlitz3.ab2@14051>    JSR _FreePooled(A6)
0002A6A2 <AmiBlitz3.ab2@14052> BRA.w JL_0_9BF0
0002A6A6 <AmiBlitz3.ab2@14056>   MOVEA.l forthsp(PC),A0
0002A6AA <AmiBlitz3.ab2@14059>   LEA -$12(A0),A0
0002A6B0 <AmiBlitz3.ab2@14060>   MOVE.l A0,forthsp
0002A6B4 <AmiBlitz3.ab2@14061>   MOVEM.l (A7)+,D1/A0
0002A6B8 <AmiBlitz3.ab2@14062>   BSR.w reget
0002A6BC <AmiBlitz3.ab2@14063> BRA.w JL_0_9AFE
0002A6C0 <AmiBlitz3.ab2@14067>   BSR.w JL_0_A386
0002A6C2 <AmiBlitz3.ab2@14068>   TST.w d0
0002A6C6 <AmiBlitz3.ab2@14069>   BEQ JL_0_9C42
0002A6CA <AmiBlitz3.ab2@14070>   CMP.b #",",d0
0002A6CE <AmiBlitz3.ab2@14071>   BEQ JL_0_9C42
0002A6D2 <AmiBlitz3.ab2@14072>   CMP.b #"@",d0                                            ;expandline @@
0002A6D6 <AmiBlitz3.ab2@14073>   BEQ JL_0_9C42
0002A6DC <AmiBlitz3.ab2@14074>   LEA operators,A0
0002A6DE <AmiBlitz3.ab2@14077>    TST.w (A0)
0002A6E2 <AmiBlitz3.ab2@14078>    BEQ.w JL_0_9C42
0002A6E4 <AmiBlitz3.ab2@14079>   CMP.w (A0),D0
0002A6E8 <AmiBlitz3.ab2@14080>    BEQ.w JL_0_9C46a
0002A6EC <AmiBlitz3.ab2@14081>   LEA $20(A0),A0
0002A6F0 <AmiBlitz3.ab2@14082> BRA.w JL_0_9C2E
0002A6F2 <AmiBlitz3.ab2@14086>   MOVEQ.l #$00,D1
0002A6F4 <AmiBlitz3.ab2@14087> RTS
0002A6F8 <AmiBlitz3.ab2@14091>   CMP.w #$3C,D0
0002A6FC <AmiBlitz3.ab2@14092>    BNE.w JL_0_9C70
0002A700 <AmiBlitz3.ab2@14093>    BSR.w get1bytemain
0002A704 <AmiBlitz3.ab2@14094>   CMP.w #$3D,D0
0002A708 <AmiBlitz3.ab2@14095>    BNE.w JL_0_9C64
0002A70E <AmiBlitz3.ab2@14096>   LEA ople,A0
0002A712 <AmiBlitz3.ab2@14097> BRA.w JL_0_9CCA
0002A716 <AmiBlitz3.ab2@14101>   CMP.w #$3E,D0
0002A71A <AmiBlitz3.ab2@14102>    BNE.w JL_0_9C96
0002A71E <AmiBlitz3.ab2@14103> BRA.w JL_0_9CC4
0002A722 <AmiBlitz3.ab2@14107>   CMP.w #$3E,D0
0002A726 <AmiBlitz3.ab2@14108>    BNE.w JL_0_9C9E
0002A72A <AmiBlitz3.ab2@14109>    BSR.w get1bytemain
0002A72E <AmiBlitz3.ab2@14110>   CMP.w #$3D,D0
0002A732 <AmiBlitz3.ab2@14111>    BNE.w JL_0_9C8E
0002A738 <AmiBlitz3.ab2@14112>   LEA opge,A0
0002A73C <AmiBlitz3.ab2@14113> BRA.w JL_0_9CCA
0002A740 <AmiBlitz3.ab2@14117>   CMP.w #$3C,D0
0002A744 <AmiBlitz3.ab2@14118>    BEQ.w JL_0_9CC4
0002A74E <AmiBlitz3.ab2@14122>     MOVE.w oldqflag,instringon
0002A754 <AmiBlitz3.ab2@14123>     MOVEA.l lastsourcepos,A5
0002A758 <AmiBlitz3.ab2@14124> BRA.w JL_0_9CCA
0002A75C <AmiBlitz3.ab2@14128>   CMP.w #$3D,D0
0002A760 <AmiBlitz3.ab2@14129>    BNE.w JL_0_9CCA
0002A764 <AmiBlitz3.ab2@14130>    BSR.w get1bytemain
0002A768 <AmiBlitz3.ab2@14131>   CMP.w #$3E,D0
0002A76C <AmiBlitz3.ab2@14132>    BNE.w JL_0_9CBC
0002A772 <AmiBlitz3.ab2@14133>   LEA opge,A0
0002A776 <AmiBlitz3.ab2@14134> BRA.w JL_0_9CCA
0002A77A <AmiBlitz3.ab2@14138>   CMP.w #$3C,D0
0002A77E <AmiBlitz3.ab2@14139>   BNE.w JL_0_9C96
0002A784 <AmiBlitz3.ab2@14142>   LEA opne,A0
0002A788 <AmiBlitz3.ab2@14145>   MOVE.w $1E(A0),D1
0002A78A <AmiBlitz3.ab2@14146> RTS
0002A78C <AmiBlitz3.ab2@14153>   MOVE.w d2,d1
0002A78E <AmiBlitz3.ab2@14154>   SUBQ.w #1,D1
0002A792 <AmiBlitz3.ab2@14155>    BMI.w illoperr
0002A794 <AmiBlitz3.ab2@14156>   LSL.w #2,D1
0002A798 <AmiBlitz3.ab2@14157>   MOVE.l $2(A0,D1.W),D1
0002A79C <AmiBlitz3.ab2@14158>    BEQ.w illoperr
0002A79E <AmiBlitz3.ab2@14159>   MOVEA.l D1,A0
0002A7A0 <AmiBlitz3.ab2@14162> JMP (A0)
0002A7A4 <AmiBlitz3.ab2@14178>   MOVEA.l precsp(PC),A1
0002A7AA <AmiBlitz3.ab2@14179>   CMPA.l #precstackf,A1
0002A7AE <AmiBlitz3.ab2@14180>    BCC.w pserr
0002A7B0 <AmiBlitz3.ab2@14181>   MOVE.w -(A1),D1
0002A7B2 <AmiBlitz3.ab2@14182>   MOVEA.l -(A1),A0
0002A7B8 <AmiBlitz3.ab2@14183>   MOVE.l A1,precsp
0002A7BA <AmiBlitz3.ab2@14184> RTS
0002A7BE <AmiBlitz3.ab2@14187> precsp:      Dc.l precstack
0002A8BA <AmiBlitz3.ab2@14188> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002A93E <AmiBlitz3.ab2@14189>              Ds.l 33
0002A940 <AmiBlitz3.ab2@14195> mseq:  SEQ D0
0002A942 <AmiBlitz3.ab2@14196> msne:    SNE D0
0002A944 <AmiBlitz3.ab2@14197> mslt:    SLT D0
0002A946 <AmiBlitz3.ab2@14198> msle:    SLE D0
0002A948 <AmiBlitz3.ab2@14199> msgt:    SGT D0
0002A94A <AmiBlitz3.ab2@14200> msge:    SGE D0
0002A94C <AmiBlitz3.ab2@14202> cmp0:    CMP.b D0,D0
0002A94E <AmiBlitz3.ab2@14203> cmp1:    CMP.w D0,D0
0002A950 <AmiBlitz3.ab2@14204> cmp2:    CMP.l D0,D0
0002A954 <AmiBlitz3.ab2@14208>   MOVE.w cmp0(PC),D1
0002A958 <AmiBlitz3.ab2@14209> BRA.w doeqcmp2                                            ;writecompare
0002A95C <AmiBlitz3.ab2@14213>   MOVE.w cmp0(PC),D1
0002A960 <AmiBlitz3.ab2@14214> BRA.w donecmp2
0002A964 <AmiBlitz3.ab2@14218>   MOVE.w cmp0(PC),D1
0002A968 <AmiBlitz3.ab2@14219> BRA.w doltcmp2
0002A96C <AmiBlitz3.ab2@14223>   MOVE.w cmp0(PC),D1
0002A970 <AmiBlitz3.ab2@14224> BRA.w dolecmp2
0002A974 <AmiBlitz3.ab2@14228>   MOVE.w cmp0(PC),D1
0002A978 <AmiBlitz3.ab2@14229> BRA.w dogtcmp2
0002A97C <AmiBlitz3.ab2@14234>   MOVE.w cmp0(PC),D1
0002A980 <AmiBlitz3.ab2@14235> BRA.w dogecmp2
0002A984 <AmiBlitz3.ab2@14239>   MOVE.w cmp1(PC),D1
0002A988 <AmiBlitz3.ab2@14240> BRA.w doeqcmp2
0002A98C <AmiBlitz3.ab2@14244>   MOVE.w cmp1(PC),D1
0002A990 <AmiBlitz3.ab2@14245> BRA.w donecmp2
0002A994 <AmiBlitz3.ab2@14249>   MOVE.w cmp1(PC),D1
0002A998 <AmiBlitz3.ab2@14250> BRA.w doltcmp2
0002A99C <AmiBlitz3.ab2@14254>   MOVE.w cmp1(PC),D1
0002A9A0 <AmiBlitz3.ab2@14255> BRA.w dolecmp2
0002A9A4 <AmiBlitz3.ab2@14259>   MOVE.w cmp1(PC),D1
0002A9A8 <AmiBlitz3.ab2@14260> BRA.w dogtcmp2
0002A9AC <AmiBlitz3.ab2@14265>   MOVE.w cmp1(PC),D1
0002A9B0 <AmiBlitz3.ab2@14266> BRA.w dogecmp2
0002A9B4 <AmiBlitz3.ab2@14270>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002A9B8 <AmiBlitz3.ab2@14271> BRA doeqcmp2
0002A9BC <AmiBlitz3.ab2@14274>   MOVE.w cmp2(PC),D1
0002A9C0 <AmiBlitz3.ab2@14275> BRA donecmp2
0002A9C4 <AmiBlitz3.ab2@14279>   MOVE.w cmp2(PC),D1
0002A9C8 <AmiBlitz3.ab2@14280> BRA.w doltcmp2
0002A9CC <AmiBlitz3.ab2@14284>   MOVE.w cmp2(PC),D1
0002A9D0 <AmiBlitz3.ab2@14285> BRA.w dolecmp2
0002A9D4 <AmiBlitz3.ab2@14289>   MOVE.w cmp2(PC),D1
0002A9D8 <AmiBlitz3.ab2@14290> BRA.w dogtcmp2
0002A9DC <AmiBlitz3.ab2@14294>   MOVE.w cmp2(PC),D1
0002A9E0 <AmiBlitz3.ab2@14295> BRA.w dogecmp2
0002A9E2 <AmiBlitz3.ab2@14298> cfregat:  Ds.w 1
0002A9E8 <AmiBlitz3.ab2@14302>   MOVE.w D1,libjsr+2
0002A9EC <AmiBlitz3.ab2@14303>    BSR.w JL_0_AD40
0002A9EE <AmiBlitz3.ab2@14304>   MOVE.l D4,D1
0002A9F2 <AmiBlitz3.ab2@14305>    BSR.w JL_0_AD38
0002A9F6 <AmiBlitz3.ab2@14306>   MOVE.w #$C900,D1
0002A9FA <AmiBlitz3.ab2@14307>    BSR.w Atokejsr
0002A9FE <AmiBlitz3.ab2@14308>    BSR.w JL_0_A352
0002AA04 <AmiBlitz3.ab2@14309>   MOVE.l libjsr,D1
0002AA08 <AmiBlitz3.ab2@14310>    BSR.w writelong
0002AA12 <AmiBlitz3.ab2@14311>   MOVE.w regnum,cfregat
0002AA18 <AmiBlitz3.ab2@14312>   CLR.w regnum
0002AA1A <AmiBlitz3.ab2@14313> RTS
0002AA24 <AmiBlitz3.ab2@14317>   MOVE.w cfregat,regnum
0002AA28 <AmiBlitz3.ab2@14318>    BSR.w JL_0_A36E
0002AA2A <AmiBlitz3.ab2@14319>   MOVE.l D5,D1
0002AA2E <AmiBlitz3.ab2@14320> BRA.w JL_0_AD38
0002AA30 <AmiBlitz3.ab2@14324>    MOVEQ.l #-$2A,D1
0002AA36 <AmiBlitz3.ab2@14325>    TST.b fpu
0002AA3A <AmiBlitz3.ab2@14326>    BEQ do_equal_float__nofpu
0002AA3C <AmiBlitz3.ab2@14327>    MOVEQ #0,d1
0002AA42 <AmiBlitz3.ab2@14328>    MOVE.w regnum,d1
0002AA44 <AmiBlitz3.ab2@14329>    MOVE.l d1,d2
0002AA46 <AmiBlitz3.ab2@14330>    ASL.l #7,d1
0002AA48 <AmiBlitz3.ab2@14331>    ADDQ  #1,d2
0002AA4A <AmiBlitz3.ab2@14332>    ASL.l #8,d2
0002AA4C <AmiBlitz3.ab2@14333>    ASL.l #2,d2
0002AA4E <AmiBlitz3.ab2@14334>    OR.l d2,d1
0002AA54 <AmiBlitz3.ab2@14335>    OR.l #$f2000038,d1
0002AA5A <AmiBlitz3.ab2@14336>    JSR writelong
0002AA5E <AmiBlitz3.ab2@14337>    MOVE.w #$f240,d1
0002AA64 <AmiBlitz3.ab2@14338>    OR.w regnum,d1
0002AA68 <AmiBlitz3.ab2@14339>    BSR writeword
0002AA6A <AmiBlitz3.ab2@14340>    MOVEQ.l #1,d2
0002AA6E <AmiBlitz3.ab2@14341>    MOVE.w #1,d1                                            ;fpu comp fseq
0002AA72 <AmiBlitz3.ab2@14342>    BSR writeword
0002AA74 <AmiBlitz3.ab2@14343> RTS
0002AA78 <AmiBlitz3.ab2@14346>    BSR.w docflib
0002AA7C <AmiBlitz3.ab2@14347>    BSR.w doeqcmp
0002AA80 <AmiBlitz3.ab2@14348> BRA.w docflib2
0002AA82 <AmiBlitz3.ab2@14352>   MOVEQ.l #-$2A,D1
0002AA88 <AmiBlitz3.ab2@14353>   TST.b fpu
0002AA8C <AmiBlitz3.ab2@14354>    BEQ do_not_equal_float__nofpu
0002AA8E <AmiBlitz3.ab2@14355>    MOVEQ #0,d1
0002AA94 <AmiBlitz3.ab2@14356>    MOVE.w regnum,d1
0002AA96 <AmiBlitz3.ab2@14357>    MOVE.l d1,d2
0002AA98 <AmiBlitz3.ab2@14358>    ASL.l #7,d1
0002AA9A <AmiBlitz3.ab2@14359>    ADDQ  #1,d2
0002AA9C <AmiBlitz3.ab2@14360>    ASL.l #8,d2
0002AA9E <AmiBlitz3.ab2@14361>    ASL.l #2,d2
0002AAA0 <AmiBlitz3.ab2@14362>    OR.l d2,d1
0002AAA6 <AmiBlitz3.ab2@14363>    OR.l #$f2000038,d1
0002AAAC <AmiBlitz3.ab2@14364>    JSR writelong
0002AAB0 <AmiBlitz3.ab2@14365>    MOVE.w #$f240,d1
0002AAB6 <AmiBlitz3.ab2@14366>    OR.w regnum,d1
0002AABA <AmiBlitz3.ab2@14367>    BSR writeword
0002AAC0 <AmiBlitz3.ab2@14368>    MOVE.l #1,d2
0002AAC4 <AmiBlitz3.ab2@14369>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002AAC8 <AmiBlitz3.ab2@14370>    BSR writeword
0002AACA <AmiBlitz3.ab2@14371> RTS
0002AACE <AmiBlitz3.ab2@14374>    BSR.w docflib
0002AAD2 <AmiBlitz3.ab2@14375>    BSR.w donecmp
0002AAD6 <AmiBlitz3.ab2@14376> BRA.w docflib2
0002AAD8 <AmiBlitz3.ab2@14380>   MOVEQ.l #-$2A,D1
0002AADE <AmiBlitz3.ab2@14381>     TST.b fpu
0002AAE2 <AmiBlitz3.ab2@14382>    BEQ do_littler_float__nofpu
0002AAE4 <AmiBlitz3.ab2@14383>    MOVEQ #0,d1
0002AAEA <AmiBlitz3.ab2@14384>    MOVE.w regnum,d1
0002AAEC <AmiBlitz3.ab2@14385>    MOVE.l d1,d2
0002AAEE <AmiBlitz3.ab2@14386>    ASL.l #7,d1
0002AAF0 <AmiBlitz3.ab2@14387>    ADDQ  #1,d2
0002AAF2 <AmiBlitz3.ab2@14388>    ASL.l #8,d2
0002AAF4 <AmiBlitz3.ab2@14389>    ASL.l #2,d2
0002AAF6 <AmiBlitz3.ab2@14390>    OR.l d2,d1
0002AAFC <AmiBlitz3.ab2@14391>    OR.l #$f2000038,d1
0002AB02 <AmiBlitz3.ab2@14392>    JSR writelong
0002AB06 <AmiBlitz3.ab2@14393>    MOVE.w #$f240,d1
0002AB0C <AmiBlitz3.ab2@14394>    OR.w regnum,d1
0002AB10 <AmiBlitz3.ab2@14395>    BSR writeword
0002AB16 <AmiBlitz3.ab2@14396>    MOVE.l #$1,d2
0002AB1A <AmiBlitz3.ab2@14397>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002AB1E <AmiBlitz3.ab2@14398>    BSR writeword
0002AB20 <AmiBlitz3.ab2@14399> RTS
0002AB24 <AmiBlitz3.ab2@14402>    BSR.w docflib
0002AB28 <AmiBlitz3.ab2@14403>    BSR.w doltcmp
0002AB2C <AmiBlitz3.ab2@14404> BRA.w docflib2
0002AB2E <AmiBlitz3.ab2@14408>   MOVEQ.l #-$2A,D1
0002AB34 <AmiBlitz3.ab2@14409>   TST.b fpu
0002AB38 <AmiBlitz3.ab2@14410>    BEQ do_littler_equal_float__nofpu
0002AB3A <AmiBlitz3.ab2@14411>    MOVEQ #0,d1
0002AB40 <AmiBlitz3.ab2@14412>    MOVE.w regnum,d1
0002AB42 <AmiBlitz3.ab2@14413>    MOVE.l d1,d2
0002AB44 <AmiBlitz3.ab2@14414>    ASL.l #7,d1
0002AB46 <AmiBlitz3.ab2@14415>    ADDQ  #1,d2
0002AB48 <AmiBlitz3.ab2@14416>    ASL.l #8,d2
0002AB4A <AmiBlitz3.ab2@14417>    ASL.l #2,d2
0002AB4C <AmiBlitz3.ab2@14418>    OR.l d2,d1
0002AB52 <AmiBlitz3.ab2@14419>    OR.l #$f2000038,d1
0002AB58 <AmiBlitz3.ab2@14420>    JSR writelong
0002AB5C <AmiBlitz3.ab2@14421>    MOVE.w #$f240,d1
0002AB62 <AmiBlitz3.ab2@14422>    OR.w regnum,d1
0002AB66 <AmiBlitz3.ab2@14423>    BSR writeword
0002AB6C <AmiBlitz3.ab2@14424>    MOVE.l #1,d2
0002AB70 <AmiBlitz3.ab2@14425>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002AB74 <AmiBlitz3.ab2@14426>    BSR writeword
0002AB76 <AmiBlitz3.ab2@14427> RTS
0002AB7A <AmiBlitz3.ab2@14430>    BSR.w docflib
0002AB7E <AmiBlitz3.ab2@14431>    BSR.w dolecmp
0002AB82 <AmiBlitz3.ab2@14432> BRA.w docflib2
0002AB84 <AmiBlitz3.ab2@14436>   MOVEQ.l #-$2A,D1
0002AB8A <AmiBlitz3.ab2@14437>    TST.b fpu
0002AB8E <AmiBlitz3.ab2@14438>    BEQ do_greater_float__nofpu
0002AB90 <AmiBlitz3.ab2@14439>     MOVEQ #0,d1
0002AB96 <AmiBlitz3.ab2@14440>    MOVE.w regnum,d1
0002AB98 <AmiBlitz3.ab2@14441>    MOVE.l d1,d2
0002AB9A <AmiBlitz3.ab2@14442>    ASL.l #7,d1
0002AB9C <AmiBlitz3.ab2@14443>    ADDQ  #1,d2
0002AB9E <AmiBlitz3.ab2@14444>    ASL.l #8,d2
0002ABA0 <AmiBlitz3.ab2@14445>    ASL.l #2,d2
0002ABA2 <AmiBlitz3.ab2@14446>    OR.l d2,d1
0002ABA8 <AmiBlitz3.ab2@14447>    OR.l #$f2000038,d1
0002ABAE <AmiBlitz3.ab2@14448>    JSR writelong
0002ABB2 <AmiBlitz3.ab2@14449>    MOVE.w #$f240,d1
0002ABB8 <AmiBlitz3.ab2@14450>    OR.w regnum,d1
0002ABBC <AmiBlitz3.ab2@14451>    BSR writeword
0002ABC2 <AmiBlitz3.ab2@14452>    MOVE.l #1,d2
0002ABC6 <AmiBlitz3.ab2@14453>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002ABCA <AmiBlitz3.ab2@14454>    BSR writeword
0002ABCC <AmiBlitz3.ab2@14455> RTS
0002ABD0 <AmiBlitz3.ab2@14458>    BSR.w docflib
0002ABD4 <AmiBlitz3.ab2@14459>    BSR.w dogtcmp
0002ABD8 <AmiBlitz3.ab2@14460> BRA.w docflib2
0002ABDA <AmiBlitz3.ab2@14464>   MOVEQ.l #-$2A,D1
0002ABE0 <AmiBlitz3.ab2@14465>  TST.b fpu
0002ABE4 <AmiBlitz3.ab2@14466>    BEQ do_greater_equal_float__nofpu
0002ABE6 <AmiBlitz3.ab2@14467>    MOVEQ #0,d1
0002ABEC <AmiBlitz3.ab2@14468>    MOVE.w regnum,d1
0002ABEE <AmiBlitz3.ab2@14469>    MOVE.l d1,d2
0002ABF0 <AmiBlitz3.ab2@14470>    ASL.l #7,d1
0002ABF2 <AmiBlitz3.ab2@14471>    ADDQ  #1,d2
0002ABF4 <AmiBlitz3.ab2@14472>    ASL.l #8,d2
0002ABF6 <AmiBlitz3.ab2@14473>    ASL.l #2,d2
0002ABF8 <AmiBlitz3.ab2@14474>    OR.l d2,d1
0002ABFE <AmiBlitz3.ab2@14475>    OR.l #$f2000038,d1
0002AC04 <AmiBlitz3.ab2@14476>    JSR writelong
0002AC08 <AmiBlitz3.ab2@14477>    MOVE.w #$f240,d1
0002AC0E <AmiBlitz3.ab2@14478>    OR.w regnum,d1
0002AC12 <AmiBlitz3.ab2@14479>    BSR writeword
0002AC18 <AmiBlitz3.ab2@14480>    MOVE.l #1,d2
0002AC1C <AmiBlitz3.ab2@14481>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002AC20 <AmiBlitz3.ab2@14482>    BSR writeword
0002AC22 <AmiBlitz3.ab2@14483> RTS
0002AC26 <AmiBlitz3.ab2@14486>    BSR.w docflib
0002AC2A <AmiBlitz3.ab2@14487>    BSR.w dogecmp
0002AC2E <AmiBlitz3.ab2@14488> BRA.w docflib2
0002AC34 <AmiBlitz3.ab2@14493>   MOVE.l #$CE00,D1
0002AC3A <AmiBlitz3.ab2@14494>    MOVE.l d1,lastinstruction
0002AC3E <AmiBlitz3.ab2@14495>    BSR.w Atokejsr
0002AC42 <AmiBlitz3.ab2@14496> BRA.w doeqcmp
0002AC48 <AmiBlitz3.ab2@14500>   MOVE.l #$CE00,D1
0002AC4E <AmiBlitz3.ab2@14501>    MOVE.l d1,lastinstruction
0002AC52 <AmiBlitz3.ab2@14502>    BSR.w Atokejsr
0002AC56 <AmiBlitz3.ab2@14503> BRA.w donecmp
0002AC5C <AmiBlitz3.ab2@14507>   MOVE.l #$CE00,D1
0002AC62 <AmiBlitz3.ab2@14508>    MOVE.l d1,lastinstruction
0002AC66 <AmiBlitz3.ab2@14509>    BSR.w Atokejsr
0002AC6A <AmiBlitz3.ab2@14510> BRA.w doltcmp
0002AC70 <AmiBlitz3.ab2@14514>   MOVE.l #$CE00,D1
0002AC76 <AmiBlitz3.ab2@14515>    MOVE.l d1,lastinstruction
0002AC7A <AmiBlitz3.ab2@14516>    BSR.w Atokejsr
0002AC7E <AmiBlitz3.ab2@14517> BRA.w dolecmp
0002AC84 <AmiBlitz3.ab2@14521>   MOVE.l #$CE00,D1
0002AC8A <AmiBlitz3.ab2@14522>    MOVE.l d1,lastinstruction
0002AC8E <AmiBlitz3.ab2@14523>    BSR.w Atokejsr
0002AC92 <AmiBlitz3.ab2@14524> BRA.w dogtcmp
0002AC98 <AmiBlitz3.ab2@14528>   MOVE.l #$CE00,D1
0002AC9E <AmiBlitz3.ab2@14529>    MOVE.l d1,lastinstruction
0002ACA2 <AmiBlitz3.ab2@14530>    BSR.w Atokejsr
0002ACA6 <AmiBlitz3.ab2@14531> BRA.w dogecmp
0002ACAC <AmiBlitz3.ab2@14536>   TST.b fast                                               ;compare
0002ACB0 <AmiBlitz3.ab2@14537>   BEQ cmpit__org
0002ACB6 <AmiBlitz3.ab2@14541>   MOVE.l destpointer,a0
0002ACBC <AmiBlitz3.ab2@14542>   SUB.l imm_addr,a0
0002ACC2 <AmiBlitz3.ab2@14543>   CMP.l #6,a0
0002ACC6 <AmiBlitz3.ab2@14544>   BNE cmpit__l11
0002ACCC <AmiBlitz3.ab2@14545>   MOVE.l imm_addr,a0
0002ACD4 <AmiBlitz3.ab2@14546>   CMP.w #$223c,imm_addr
0002ACD8 <AmiBlitz3.ab2@14547>   BNE cmpit__org
0002ACDE <AmiBlitz3.ab2@14548>   ADD.w #$8e80,-6(a4)
0002ACE4 <AmiBlitz3.ab2@14551>   CLR.l imm_addr
0002ACE6 <AmiBlitz3.ab2@14552> RTS
0002ACEC <AmiBlitz3.ab2@14555>   CMP.l #4,a0
0002ACF0 <AmiBlitz3.ab2@14556>   BNE cmpit__l10
0002ACF4 <AmiBlitz3.ab2@14557>   CMP.b #2,d3
0002ACF8 <AmiBlitz3.ab2@14558>   BNE cmpit__l11b
0002ACFE <AmiBlitz3.ab2@14559>   ADD.w #$7e40,-4(a4)
0002AD00 <AmiBlitz3.ab2@14560> RTS
0002AD06 <AmiBlitz3.ab2@14563>  ADD.w #$7e00,-4(a4)
0002AD08 <AmiBlitz3.ab2@14564> RTS
0002AD0E <AmiBlitz3.ab2@14567>    MOVE.l destpointer,a0
0002AD14 <AmiBlitz3.ab2@14568>    SUB.l load_var_addr,a0
0002AD18 <AmiBlitz3.ab2@14569>    CMP.w #4,a0
0002AD1C <AmiBlitz3.ab2@14570>    BNE cmpit__org
0002AD20 <AmiBlitz3.ab2@14571>    CMP.b #3,d3
0002AD24 <AmiBlitz3.ab2@14572>    BCS cmpit__lv1
0002AD2A <AmiBlitz3.ab2@14573>    CLR.l load_var_addr
0002AD30 <AmiBlitz3.ab2@14574>    ADD.w #$9080-$200,-4(a4)
0002AD32 <AmiBlitz3.ab2@14575> RTS
0002AD36 <AmiBlitz3.ab2@14578>   CMP.b #2,d3
0002AD3A <AmiBlitz3.ab2@14579>    BNE cmpit__org
0002AD40 <AmiBlitz3.ab2@14580>    CLR.l load_var_addr
0002AD46 <AmiBlitz3.ab2@14581>    ADD.w #$8040-$200,-4(a4)
0002AD48 <AmiBlitz3.ab2@14582> RTS
0002AD4E <AmiBlitz3.ab2@14585>   MOVE.w regnum,D3
0002AD50 <AmiBlitz3.ab2@14586>   OR.w D3,D1
0002AD52 <AmiBlitz3.ab2@14587>   LSL.w #8,D3
0002AD54 <AmiBlitz3.ab2@14588>   LSL.w #1,D3
0002AD56 <AmiBlitz3.ab2@14589>   OR.w D3,D1
0002AD58 <AmiBlitz3.ab2@14590>   ADDQ.w #1,D1
0002AD5C <AmiBlitz3.ab2@14591> BRA.w writeword
0002AD60 <AmiBlitz3.ab2@14595>    BSR.w cmpit
0002AD64 <AmiBlitz3.ab2@14598>    MOVE.w mseq(PC),D1
0002AD68 <AmiBlitz3.ab2@14599> BRA.w cpoke
0002AD6C <AmiBlitz3.ab2@14603>   BSR.w cmpit
0002AD70 <AmiBlitz3.ab2@14606>   MOVE.w msne(PC),D1
0002AD74 <AmiBlitz3.ab2@14607> BRA.w cpoke
0002AD78 <AmiBlitz3.ab2@14611>   BSR.w cmpit
0002AD7C <AmiBlitz3.ab2@14614>    MOVE.w mslt(PC),D1
0002AD80 <AmiBlitz3.ab2@14615> BRA.w cpoke
0002AD84 <AmiBlitz3.ab2@14619>    BSR.w cmpit
0002AD88 <AmiBlitz3.ab2@14622>    MOVE.w msle(PC),D1
0002AD8C <AmiBlitz3.ab2@14623> BRA.w cpoke
0002AD90 <AmiBlitz3.ab2@14627>    BSR.w cmpit
0002AD94 <AmiBlitz3.ab2@14630>    MOVE.w msgt(PC),D1
0002AD98 <AmiBlitz3.ab2@14631> BRA.w cpoke
0002AD9C <AmiBlitz3.ab2@14635>   BSR.w cmpit
0002ADA0 <AmiBlitz3.ab2@14638>    MOVE.w msge(PC),D1
0002ADA6 <AmiBlitz3.ab2@14641>    OR.w regnum,D1
0002ADAA <AmiBlitz3.ab2@14642>    CMP.w #5,d2
0002ADAE <AmiBlitz3.ab2@14643>    BNE cpoke__nod0
0002ADB2 <AmiBlitz3.ab2@14644>    CMP.w #5,d3
0002ADB6 <AmiBlitz3.ab2@14645>    BNE cpoke__nod0
0002ADB8 <AmiBlitz3.ab2@14646>    MOVE.l d1,-(a7)
0002ADBE <AmiBlitz3.ab2@14647>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002ADC2 <AmiBlitz3.ab2@14648>    BSR writelong
0002ADC4 <AmiBlitz3.ab2@14649>    MOVE.l (a7)+,d1
0002ADC8 <AmiBlitz3.ab2@14652>    BSR.w writeword                                         ;writeseq
0002ADCA <AmiBlitz3.ab2@14653>    MOVEQ.l #1,d2
0002ADD0 <AmiBlitz3.ab2@14654>    MOVE.l lasttoken,d1
0002ADD6 <AmiBlitz3.ab2@14655>     TST.b fast
0002ADDA <AmiBlitz3.ab2@14656>     BEQ.s cpoke__l11
0002ADE0 <AmiBlitz3.ab2@14657>    CMP.l #$800b,d1
0002ADE4 <AmiBlitz3.ab2@14658>    BEQ cpoke__l10
0002ADE8 <AmiBlitz3.ab2@14661>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002ADEE <AmiBlitz3.ab2@14662>   OR.w regnum,D1
0002ADF2 <AmiBlitz3.ab2@14663>    BSR.w writeword                                         ;writeext.w
0002ADF4 <AmiBlitz3.ab2@14664>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002ADF6 <AmiBlitz3.ab2@14667> RTS
0002ADFA <AmiBlitz3.ab2@14672>   MOVE.w #$D040,D1
0002ADFC <AmiBlitz3.ab2@14673>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002AE00 <AmiBlitz3.ab2@14674> BRA.w doplus2
0002AE04 <AmiBlitz3.ab2@14678>   MOVE.w #$D040,D1
0002AE06 <AmiBlitz3.ab2@14679>   MOVEQ.l #$03,D2                                          ;now a long
0002AE0A <AmiBlitz3.ab2@14680>    BSR.w doplus2
0002AE0E <AmiBlitz3.ab2@14681> BRA.w convert_word_to_long
0002AE12 <AmiBlitz3.ab2@14685>   MOVE.w #$D080,D1                                         ;writeaddlong
0002AE14 <AmiBlitz3.ab2@14688>   MOVE.w d1,a1
0002AE1A <AmiBlitz3.ab2@14689>   TST.b fast
0002AE1E <AmiBlitz3.ab2@14690>   BEQ doplus2__l10
0002AE20 <AmiBlitz3.ab2@14694>   ASR.w #8,d1
0002AE24 <AmiBlitz3.ab2@14695>   CMP.b #$90,d1
0002AE28 <AmiBlitz3.ab2@14696>   BEQ doplus2__sub1
0002AE2C <AmiBlitz3.ab2@14697>   CMP.b #$d0,d1
0002AE30 <AmiBlitz3.ab2@14698>   BNE doplus2__l10
0002AE34 <AmiBlitz3.ab2@14699>   CMP.b #3,d3
0002AE38 <AmiBlitz3.ab2@14700>   BCS doplus2__lq10
0002AE3E <AmiBlitz3.ab2@14701>   TST.b quickadd
0002AE44 <AmiBlitz3.ab2@14705>    MOVE.l destpointer,a0
0002AE4A <AmiBlitz3.ab2@14706>    CLR.b quickadd
0002AE50 <AmiBlitz3.ab2@14707>    CLR.l load_var_addr
0002AE56 <AmiBlitz3.ab2@14708>    SUB.l imm_addr,a0
0002AE5A <AmiBlitz3.ab2@14709>    CMP.w #6,a0
0002AE5E <AmiBlitz3.ab2@14710>    BEQ doplus2__li10
0002AE62 <AmiBlitz3.ab2@14711>    CMP.w #4,a0
0002AE66 <AmiBlitz3.ab2@14712>    BNE.s doplus2__li1
0002AE6C <AmiBlitz3.ab2@14713>    CLR.l imm_addr
0002AE72 <AmiBlitz3.ab2@14714>    ADD.w #$a040-$200,-4(a4)
0002AE74 <AmiBlitz3.ab2@14715> RTS
0002AE76 <AmiBlitz3.ab2@14718>    MOVE.l a4,a0
0002AE7C <AmiBlitz3.ab2@14719>    SUB.l load_var_addr,a0
0002AE82 <AmiBlitz3.ab2@14720>    CMP.l #$a,a0
0002AE86 <AmiBlitz3.ab2@14721>    BNE doplus2__l10e
0002AE8C <AmiBlitz3.ab2@14722>    CLR.l load_var_addr
0002AE90 <AmiBlitz3.ab2@14723>    MOVE.w -$8(a4),d1
0002AE96 <AmiBlitz3.ab2@14724>    MOVE.l -$4(a4),-$8(a4)
0002AE9A <AmiBlitz3.ab2@14725>    MOVE.w d1,-$4(a4)
0002AEA0 <AmiBlitz3.ab2@14726>    SUB.w #$1980,-$a(a4)
0002AEA6 <AmiBlitz3.ab2@14727>    SUBQ.l #2,destpointer
0002AEA8 <AmiBlitz3.ab2@14728> RTS
0002AEAE <AmiBlitz3.ab2@14731>   CLR.b quickadd
0002AEB2 <AmiBlitz3.ab2@14732> BRA doplus2__l10
0002AEB8 <AmiBlitz3.ab2@14735>    CLR.l imm_addr
0002AEBC <AmiBlitz3.ab2@14736>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002AEC0 <AmiBlitz3.ab2@14737>    BNE doplus2__doit
0002AEC6 <AmiBlitz3.ab2@14738>    SUBQ.l #6,destpointer
0002AEC8 <AmiBlitz3.ab2@14739> RTS
0002AECE <AmiBlitz3.ab2@14742>    ADD.w #$b080-$200,-6(a4)
0002AED0 <AmiBlitz3.ab2@14743> RTS
0002AED6 <AmiBlitz3.ab2@14746>    MOVE.l destpointer,a0
0002AEDC <AmiBlitz3.ab2@14747>    SUB.l load_var_addr,a0
0002AEE0 <AmiBlitz3.ab2@14748>    CMP.w #4,a0
0002AEE4 <AmiBlitz3.ab2@14749>    BNE doplus2__l10
0002AEE8 <AmiBlitz3.ab2@14750>    CMP.b #3,d3
0002AEEC <AmiBlitz3.ab2@14751>    BNE doplus2__lv1
0002AEF2 <AmiBlitz3.ab2@14752>    CLR.l load_var_addr
0002AEF8 <AmiBlitz3.ab2@14753>    ADD.w #$b080-$200,-4(a4)
0002AEFA <AmiBlitz3.ab2@14754> RTS
0002AEFE <AmiBlitz3.ab2@14757>   CMP.b #2,d3
0002AF02 <AmiBlitz3.ab2@14758>   BNE doplus2__l10
0002AF08 <AmiBlitz3.ab2@14759>   CLR.l load_var_addr
0002AF0E <AmiBlitz3.ab2@14760>   ADD.w #$a040-$200,-4(a4)
0002AF10 <AmiBlitz3.ab2@14761> RTS
0002AF16 <AmiBlitz3.ab2@14764>   MOVE.w regnum,D3
0002AF18 <AmiBlitz3.ab2@14765>   MOVE.w a1,d1
0002AF1A <AmiBlitz3.ab2@14766>   OR.w D3,D1
0002AF1C <AmiBlitz3.ab2@14767>   ADDQ.w #1,D1
0002AF1E <AmiBlitz3.ab2@14768>   LSL.w #8,D3
0002AF20 <AmiBlitz3.ab2@14769>   LSL.w #1,D3
0002AF22 <AmiBlitz3.ab2@14770>   OR.w D3,D1
0002AF26 <AmiBlitz3.ab2@14771> BRA.w writeword
0002AF2A <AmiBlitz3.ab2@14774>    CMP.b #3,d3
0002AF2E <AmiBlitz3.ab2@14775>    BCS doplus2__sub1_lq10
0002AF34 <AmiBlitz3.ab2@14776>    TST.b quickadd
0002AF3A <AmiBlitz3.ab2@14780>    MOVE.l destpointer,a0
0002AF40 <AmiBlitz3.ab2@14781>    CLR.b quickadd
0002AF46 <AmiBlitz3.ab2@14782>    CLR.l load_var_addr
0002AF4C <AmiBlitz3.ab2@14783>    SUB.l imm_addr,a0
0002AF50 <AmiBlitz3.ab2@14784>    CMP.w #6,a0
0002AF54 <AmiBlitz3.ab2@14785>    BEQ doplus2__sub1_li10
0002AF58 <AmiBlitz3.ab2@14786>    CMP.w #4,a0
0002AF5C <AmiBlitz3.ab2@14787>    BNE.s doplus2__sub1_li1
0002AF62 <AmiBlitz3.ab2@14788>    CLR.l imm_addr
0002AF68 <AmiBlitz3.ab2@14789>    ADD.w #$6040-$200,-4(a4)
0002AF6A <AmiBlitz3.ab2@14790> RTS
0002AF6C <AmiBlitz3.ab2@14793>    MOVE.l a4,a0
0002AF72 <AmiBlitz3.ab2@14794>     SUB.l load_var_addr,a0
0002AF78 <AmiBlitz3.ab2@14795>     CMP.l #$a,a0
0002AF7C <AmiBlitz3.ab2@14796>     BNE doplus2__sub1_l10e
0002AF82 <AmiBlitz3.ab2@14797>    CLR.l load_var_addr
0002AF86 <AmiBlitz3.ab2@14798>    MOVE.w -$8(a4),d1
0002AF8C <AmiBlitz3.ab2@14799>    MOVE.l -$4(a4),-$8(a4)
0002AF90 <AmiBlitz3.ab2@14800>    MOVE.w d1,-$4(a4)
0002AF96 <AmiBlitz3.ab2@14801>    SUB.w #$1b80,-$a(a4)
0002AF9C <AmiBlitz3.ab2@14802>    SUBQ.l #2,destpointer
0002AF9E <AmiBlitz3.ab2@14803> RTS
0002AFA4 <AmiBlitz3.ab2@14806>   CLR.b quickadd
0002AFA8 <AmiBlitz3.ab2@14807> BRA doplus2__sub1_l10
0002AFAE <AmiBlitz3.ab2@14810>    CLR.l imm_addr
0002AFB4 <AmiBlitz3.ab2@14811>    ADD.w #$7080-$200,-6(a4)
0002AFB6 <AmiBlitz3.ab2@14812> RTS
0002AFBC <AmiBlitz3.ab2@14815>    MOVE.l destpointer,a0
0002AFC2 <AmiBlitz3.ab2@14816>    SUB.l load_var_addr,a0
0002AFC6 <AmiBlitz3.ab2@14817>    CMP.w #4,a0
0002AFCA <AmiBlitz3.ab2@14818>    BNE doplus2__sub1_l10
0002AFCE <AmiBlitz3.ab2@14819>    CMP.b #3,d3
0002AFD2 <AmiBlitz3.ab2@14820>    BNE doplus2__sub1_lv1
0002AFD8 <AmiBlitz3.ab2@14821>    CLR.l load_var_addr
0002AFDE <AmiBlitz3.ab2@14822>    ADD.w #$7080-$200,-4(a4)
0002AFE0 <AmiBlitz3.ab2@14823> RTS
0002AFE4 <AmiBlitz3.ab2@14826>    CMP.b #2,d3
0002AFE8 <AmiBlitz3.ab2@14827>    BNE doplus2__sub1_l10
0002AFEE <AmiBlitz3.ab2@14828>    CLR.l load_var_addr
0002AFF4 <AmiBlitz3.ab2@14829>    ADD.w #$6040-$200,-4(a4)
0002AFF6 <AmiBlitz3.ab2@14830> RTS
0002AFFC <AmiBlitz3.ab2@14833>   MOVE.w regnum,D3
0002AFFE <AmiBlitz3.ab2@14834>   MOVE.w a1,d1
0002B000 <AmiBlitz3.ab2@14835>   OR.w D3,D1
0002B002 <AmiBlitz3.ab2@14836>   ADDQ.w #1,D1
0002B004 <AmiBlitz3.ab2@14837>   LSL.w #8,D3
0002B006 <AmiBlitz3.ab2@14838>   LSL.w #1,D3
0002B008 <AmiBlitz3.ab2@14839>   OR.w D3,D1
0002B00C <AmiBlitz3.ab2@14840> BRA.w writeword
0002B00E <AmiBlitz3.ab2@14844>   MOVEQ #0,d0
0002B014 <AmiBlitz3.ab2@14845>   MOVE.w regnum,d0
0002B016 <AmiBlitz3.ab2@14846>   ADDQ #1,d0
0002B018 <AmiBlitz3.ab2@14847>   ASL.w #8,d0
0002B01A <AmiBlitz3.ab2@14848>   ASL.w #2,d0
0002B020 <AmiBlitz3.ab2@14849>   MOVE.l #$f2000022,d1                                     ;fpu add
0002B022 <AmiBlitz3.ab2@14850>   OR.l d0,d1
0002B028 <AmiBlitz3.ab2@14851>   MOVE.w regnum,d0
0002B02A <AmiBlitz3.ab2@14852>   ASL.w #7,d0
0002B02C <AmiBlitz3.ab2@14853>   OR.l d0,d1
0002B030 <AmiBlitz3.ab2@14854> BRA.w writelong
0002B036 <AmiBlitz3.ab2@14860>   TST.b iee
0002B03A <AmiBlitz3.ab2@14861>   BNE do_plus_float__fadd1
0002B03E <AmiBlitz3.ab2@14862>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002B044 <AmiBlitz3.ab2@14865>    MOVE.w D1,libjsr+2
0002B048 <AmiBlitz3.ab2@14866>    BSR.w JL_0_AD40
0002B04A <AmiBlitz3.ab2@14867>   MOVE.l D4,D1
0002B04E <AmiBlitz3.ab2@14868>    BSR.w JL_0_AD38
0002B052 <AmiBlitz3.ab2@14869>   MOVE.w #$C900,D1
0002B056 <AmiBlitz3.ab2@14870>    BSR.w Atokejsr
0002B05A <AmiBlitz3.ab2@14871>    BSR.w JL_0_A352
0002B060 <AmiBlitz3.ab2@14872>   MOVE.l libjsr,D1
0002B064 <AmiBlitz3.ab2@14873>    BSR.w writelong
0002B068 <AmiBlitz3.ab2@14874>    BSR.w JL_0_A36E
0002B06A <AmiBlitz3.ab2@14875>   MOVE.l D5,D1
0002B06E <AmiBlitz3.ab2@14876> BRA.w JL_0_AD38
0002B074 <AmiBlitz3.ab2@14880>   MOVE.w regnum,D1
0002B076 <AmiBlitz3.ab2@14881>   LSL.w #8,D1
0002B078 <AmiBlitz3.ab2@14882>   LSL.w #1,D1
0002B07A <AmiBlitz3.ab2@14883>   MOVE.w D1,-(A7)
0002B07E <AmiBlitz3.ab2@14884>   CMP.w #3072,d1
0002B082 <AmiBlitz3.ab2@14885>   BEQ 'l1
0002B088 <AmiBlitz3.ab2@14886>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002B08C <AmiBlitz3.ab2@14887> BRA 'l2
0002B090 <AmiBlitz3.ab2@14890>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002B094 <AmiBlitz3.ab2@14893>    BSR.w writeword
0002B096 <AmiBlitz3.ab2@14894>   MOVE.w (A7)+,D1
0002B09C <AmiBlitz3.ab2@14895>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002B0A0 <AmiBlitz3.ab2@14896> BRA.w writeword
0002B0A4 <AmiBlitz3.ab2@14902>   MOVE.w #$9040,D1
0002B0A8 <AmiBlitz3.ab2@14903> BRA.w doplus2
0002B0AC <AmiBlitz3.ab2@14907>   MOVE.w #$9040,D1
0002B0B0 <AmiBlitz3.ab2@14908> BRA.w doplus2
0002B0B4 <AmiBlitz3.ab2@14912>   MOVE.w #$9080,D1
0002B0B8 <AmiBlitz3.ab2@14913> BRA.w doplus2
0002B0BE <AmiBlitz3.ab2@14917>    TST.b iee
0002B0C2 <AmiBlitz3.ab2@14918>     BNE do_minus_float__fs1
0002B0C6 <AmiBlitz3.ab2@14919>   MOVE.w #$FFB8,D1                                         ;floatsub
0002B0CA <AmiBlitz3.ab2@14920> BRA.w doflib
0002B0CC <AmiBlitz3.ab2@14923>   MOVEQ #0,d0
0002B0D2 <AmiBlitz3.ab2@14924>   MOVE.w regnum,d0
0002B0D4 <AmiBlitz3.ab2@14925>   ADDQ #1,d0
0002B0D6 <AmiBlitz3.ab2@14926>   ASL.w #8,d0
0002B0D8 <AmiBlitz3.ab2@14927>   ASL.w #2,d0
0002B0DE <AmiBlitz3.ab2@14928>   MOVE.l #$f2000028,d1
0002B0E0 <AmiBlitz3.ab2@14929>   OR.l d0,d1
0002B0E6 <AmiBlitz3.ab2@14930>   MOVE.w regnum,d0
0002B0E8 <AmiBlitz3.ab2@14931>   ASL.w #7,d0
0002B0EA <AmiBlitz3.ab2@14932>   OR.l d0,d1
0002B0EE <AmiBlitz3.ab2@14933> BRA.w writelong
0002B0F2 <AmiBlitz3.ab2@14939>   MOVE.w #$C1C0,D1
0002B0F4 <AmiBlitz3.ab2@14940>   MOVEQ.l #$02,D2                                          ;now a word
0002B0F8 <AmiBlitz3.ab2@14941> BRA.w doplus2
0002B0FC <AmiBlitz3.ab2@14945>   MOVE.w #$C1C0,D1
0002B0FE <AmiBlitz3.ab2@14946>   MOVEQ.l #$03,D2                                          ;now a long.
0002B102 <AmiBlitz3.ab2@14947> BRA.w doplus2
0002B106 <AmiBlitz3.ab2@14951>   MOVE.w #$CA00,D1                                         ;quickmul
0002B10A <AmiBlitz3.ab2@14952> BRA.w domylib
0002B110 <AmiBlitz3.ab2@14956>   TST.b fast
0002B114 <AmiBlitz3.ab2@14957>   BNE.s 'l10
0002B118 <AmiBlitz3.ab2@14958>   MOVE.w #$CA01,D1                                         ;writelongmul
0002B11C <AmiBlitz3.ab2@14959> BRA.w domylib
0002B122 <AmiBlitz3.ab2@14968>    MOVE.l destpointer,a0
0002B128 <AmiBlitz3.ab2@14969>    SUB.l imm_addr,a0
0002B12C <AmiBlitz3.ab2@14970>    CMP.w #6,a0
0002B130 <AmiBlitz3.ab2@14971>    BNE 'li1
0002B132 <AmiBlitz3.ab2@14972>    MOVEQ.l #2,d1
0002B134 <AmiBlitz3.ab2@14973>    MOVEQ #1,d3
0002B138 <AmiBlitz3.ab2@14976>   CMP.l -4(a4),d1
0002B13C <AmiBlitz3.ab2@14977>    BEQ 'oklsl
0002B13E <AmiBlitz3.ab2@14978>     LSL.l #1,d1
0002B144 <AmiBlitz3.ab2@14979>     ADD.l #1,d3
0002B14A <AmiBlitz3.ab2@14980>     CMP.l #9,d3
0002B14E <AmiBlitz3.ab2@14981>     BNE 'ag
0002B152 <AmiBlitz3.ab2@14982>    MOVE.w -2(a4),d1
0002B156 <AmiBlitz3.ab2@14983>    BSR writeword
0002B15C <AmiBlitz3.ab2@14984>    MOVE.w -6(a4),-4(a4)
0002B164 <AmiBlitz3.ab2@14985>    MOVE.l #$4c3c0800,-8(a4)
0002B16A <AmiBlitz3.ab2@14986>    MOVE.w regnum,D3
0002B16E <AmiBlitz3.ab2@14987>    MULS #$1000,D3
0002B172 <AmiBlitz3.ab2@14988>    OR.w D3,-6(a4)
0002B178 <AmiBlitz3.ab2@14989>    CLR.l load_var_addr
0002B17E <AmiBlitz3.ab2@14990>    CLR.l imm_addr
0002B182 <AmiBlitz3.ab2@14991> BRA 'li3
0002B186 <AmiBlitz3.ab2@14994>    CMP.w #8,d3
0002B18A <AmiBlitz3.ab2@14995>    BEQ 'ok
0002B18C <AmiBlitz3.ab2@14996>    ASL.l #1,d3
0002B18E <AmiBlitz3.ab2@14997>    ASL.l #8,d3
0002B192 <AmiBlitz3.ab2@14998>    MOVE.w #$e188,d1
0002B194 <AmiBlitz3.ab2@14999>    OR.w d3,d1
0002B198 <AmiBlitz3.ab2@15000>    MOVE.w d1,-6(a4)
0002B19C <AmiBlitz3.ab2@15001> BRA 'okls
0002B1A2 <AmiBlitz3.ab2@15004>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002B1A8 <AmiBlitz3.ab2@15007>   MOVE.w regnum,d3
0002B1AC <AmiBlitz3.ab2@15008>    OR.b d3,-5(a4)
0002B1B2 <AmiBlitz3.ab2@15009>    SUBQ.l #4,destpointer
0002B1B8 <AmiBlitz3.ab2@15010>    CLR.l load_var_addr
0002B1BE <AmiBlitz3.ab2@15011>    CLR.l imm_addr
0002B1C2 <AmiBlitz3.ab2@15012> BRA 'li3
0002B1C8 <AmiBlitz3.ab2@15015>    MOVE.l destpointer,a0
0002B1CE <AmiBlitz3.ab2@15016>    SUB.l load_var_addr,a0
0002B1D2 <AmiBlitz3.ab2@15017>    CMP.w #4,a0
0002B1D6 <AmiBlitz3.ab2@15018>    BNE 'li2
0002B1DA <AmiBlitz3.ab2@15019>    MOVE.w -2(a4),d1
0002B1DE <AmiBlitz3.ab2@15020>    BSR writeword
0002B1E4 <AmiBlitz3.ab2@15021>    MOVE.b #$4c,-6(a4)
0002B1EA <AmiBlitz3.ab2@15022>    MOVE.w #$0800,-4(a4)
0002B1F0 <AmiBlitz3.ab2@15023>    MOVE.w regnum,D3
0002B1F4 <AmiBlitz3.ab2@15024>    MULS #$1000,d3
0002B1F8 <AmiBlitz3.ab2@15025>    OR.w D3,-4(a4)
0002B1FC <AmiBlitz3.ab2@15026> BRA 'li3
0002B202 <AmiBlitz3.ab2@15029>    MOVE.l #$4c010800,d1
0002B208 <AmiBlitz3.ab2@15030>    MOVE.w regnum,D3
0002B20A <AmiBlitz3.ab2@15031>    EXT.l d3
0002B20E <AmiBlitz3.ab2@15032>    MULS #$1000,d3
0002B210 <AmiBlitz3.ab2@15033>    OR.w D3,d1
0002B214 <AmiBlitz3.ab2@15034>    MULS #$10,d3
0002B216 <AmiBlitz3.ab2@15035>    ADD.l d3,d1
0002B21A <AmiBlitz3.ab2@15036>    BSR writelong
0002B21C <AmiBlitz3.ab2@15041> RTS
0002B21E <AmiBlitz3.ab2@15045>   MOVE.w D1,-(A7)
0002B222 <AmiBlitz3.ab2@15046>    BSR.w JL_0_AD40
0002B224 <AmiBlitz3.ab2@15047>   MOVE.l D4,D1
0002B228 <AmiBlitz3.ab2@15048>    BSR.w JL_0_AD38
0002B22C <AmiBlitz3.ab2@15049>    BSR.w JL_0_A352
0002B22E <AmiBlitz3.ab2@15050>   MOVEQ #0,d1
0002B230 <AmiBlitz3.ab2@15051>   MOVE.w (A7)+,D1
0002B236 <AmiBlitz3.ab2@15052>   MOVE.l d1,lastinstruction
0002B23A <AmiBlitz3.ab2@15053>    BSR.w Atokejsr
0002B23E <AmiBlitz3.ab2@15054>    BSR.w JL_0_A36E
0002B240 <AmiBlitz3.ab2@15055>   MOVE.l D5,D1
0002B244 <AmiBlitz3.ab2@15056> BRA.w JL_0_AD38
0002B24A <AmiBlitz3.ab2@15060>    TST.b iee
0002B24E <AmiBlitz3.ab2@15061>     BNE fm1
0002B252 <AmiBlitz3.ab2@15062>  MOVE.w #$FFB2,D1                                          ;floatmul
0002B256 <AmiBlitz3.ab2@15063> BRA.w doflib
0002B258 <AmiBlitz3.ab2@15066>   MOVEQ #0,d0
0002B25E <AmiBlitz3.ab2@15067>  MOVE.w regnum,d0
0002B260 <AmiBlitz3.ab2@15068>  ADDQ #1,d0
0002B262 <AmiBlitz3.ab2@15069>  ASL.w #8,d0
0002B264 <AmiBlitz3.ab2@15070>  ASL.w #2,d0
0002B26A <AmiBlitz3.ab2@15071>  MOVE.l #$f2000023,d1
0002B26C <AmiBlitz3.ab2@15072>  OR.l d0,d1
0002B272 <AmiBlitz3.ab2@15073>  MOVE.w regnum,d0
0002B274 <AmiBlitz3.ab2@15074>  ASL.w #7,d0
0002B276 <AmiBlitz3.ab2@15075>  OR.l d0,d1
0002B27A <AmiBlitz3.ab2@15076> BRA.w writelong
0002B27C <AmiBlitz3.ab2@15080>   MOVE.w D2,-(A7)                                          ;dopow
0002B27E <AmiBlitz3.ab2@15081>   MOVE.w D2,D3
0002B280 <AmiBlitz3.ab2@15082>   MOVEQ.l #$05,D2
0002B284 <AmiBlitz3.ab2@15083>    BSR.w JL_0_9770
0002B28A <AmiBlitz3.ab2@15084>   ADDQ.w #1,regnum
0002B28C <AmiBlitz3.ab2@15085>   MOVE.w (A7)+,D3
0002B28E <AmiBlitz3.ab2@15086>   MOVEQ.l #$05,D2
0002B292 <AmiBlitz3.ab2@15087>    BSR.w writeconvertcode
0002B298 <AmiBlitz3.ab2@15088>   SUBQ.w #1,regnum
0002B29C <AmiBlitz3.ab2@15089>    BSR.w nocando
0002B2A2 <AmiBlitz3.ab2@15090>    TST.b fpu
0002B2A6 <AmiBlitz3.ab2@15091>    BEQ 'old
0002B2A8 <AmiBlitz3.ab2@15092>    MOVEQ #0,d1
0002B2AE <AmiBlitz3.ab2@15093>    MOVE.w regnum,d1
0002B2B0 <AmiBlitz3.ab2@15094>   MOVE.l d1,d0
0002B2B2 <AmiBlitz3.ab2@15095>   ASL.w #7,d1
0002B2B4 <AmiBlitz3.ab2@15096>   ASL.w #8,d0
0002B2B6 <AmiBlitz3.ab2@15097>   ASL.w #2,d0
0002B2B8 <AmiBlitz3.ab2@15098>   OR.w d0,d1
0002B2BA <AmiBlitz3.ab2@15099>   MOVE.l d1,-(a7)
0002B2C0 <AmiBlitz3.ab2@15101>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002B2C4 <AmiBlitz3.ab2@15102>    BSR writelong
0002B2CA <AmiBlitz3.ab2@15103>    MOVE.w regnum,d0
0002B2CC <AmiBlitz3.ab2@15104>  ADDQ #1,d0
0002B2CE <AmiBlitz3.ab2@15105>  ASL.w #8,d0
0002B2D0 <AmiBlitz3.ab2@15106>  ASL.w #2,d0
0002B2D6 <AmiBlitz3.ab2@15107>  MOVE.l #$f2000023,d1
0002B2D8 <AmiBlitz3.ab2@15108>  OR.l d0,d1
0002B2DE <AmiBlitz3.ab2@15109>  MOVE.w regnum,d0
0002B2E0 <AmiBlitz3.ab2@15110>  ASL.w #7,d0
0002B2E2 <AmiBlitz3.ab2@15111>  OR.l d0,d1
0002B2E8 <AmiBlitz3.ab2@15112>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002B2EC <AmiBlitz3.ab2@15113>    BSR writelong
0002B2EE <AmiBlitz3.ab2@15114>    MOVE.l (a7)+,d1
0002B2F4 <AmiBlitz3.ab2@15116>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002B2F8 <AmiBlitz3.ab2@15117>    BSR writelong
0002B2FA <AmiBlitz3.ab2@15118> RTS
0002B2FE <AmiBlitz3.ab2@15121>   MOVE.w #$6001,D1
0002B302 <AmiBlitz3.ab2@15122> BRA.w domylib
0002B306 <AmiBlitz3.ab2@15128>   MOVEA.l forthsp(PC),A0
0002B30A <AmiBlitz3.ab2@15129>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002B30C <AmiBlitz3.ab2@15130> RTS
0002B310 <AmiBlitz3.ab2@15136>   MOVE.w #$D400,D1
0002B314 <AmiBlitz3.ab2@15137> BRA.w domylib
0002B318 <AmiBlitz3.ab2@15141>   MOVE.w #$D401,D1
0002B31C <AmiBlitz3.ab2@15142> BRA.w domylib
0002B320 <AmiBlitz3.ab2@15146>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002B324 <AmiBlitz3.ab2@15147>   MOVE.w #$D402,D1
0002B328 <AmiBlitz3.ab2@15148> BRA.w domylib
0002B32C <AmiBlitz3.ab2@15152>   MOVE.w #$D403,D1
0002B32E <AmiBlitz3.ab2@15153>   MOVEQ.l #$02,D2                                          ;now a word.
0002B332 <AmiBlitz3.ab2@15154> BRA.w domylib
0002B336 <AmiBlitz3.ab2@15158>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002B33C <AmiBlitz3.ab2@15159>   TST.b fpu
0002B340 <AmiBlitz3.ab2@15160>   BEQ 'old
0002B342 <AmiBlitz3.ab2@15161>   MOVEQ #0,d1
0002B348 <AmiBlitz3.ab2@15162>   MOVE.w regnum,d1                                         ;fpu mod
0002B34A <AmiBlitz3.ab2@15163>   MOVE.l d1,d0
0002B34C <AmiBlitz3.ab2@15164>   ADDQ.l #1,d1
0002B34E <AmiBlitz3.ab2@15165>   ASL.l #7,d0
0002B350 <AmiBlitz3.ab2@15166>   ASL.l #8,d1
0002B352 <AmiBlitz3.ab2@15167>   ASL.l #2,d1
0002B354 <AmiBlitz3.ab2@15168>   OR.l d0,d1
0002B356 <AmiBlitz3.ab2@15169>   MOVE.l d0,-(a7)
0002B35C <AmiBlitz3.ab2@15170>   OR.l #$f2000021,d1
0002B360 <AmiBlitz3.ab2@15171>   BSR writelong
0002B362 <AmiBlitz3.ab2@15172>   MOVE.l (a7)+,d0
0002B364 <AmiBlitz3.ab2@15173>  RTS
0002B368 <AmiBlitz3.ab2@15176>   MOVE.w #$D404,D1
0002B36A <AmiBlitz3.ab2@15177>   MOVEQ.l #$03,D2                                          ;now a long
0002B36E <AmiBlitz3.ab2@15178> BRA.w domylib
0002B372 <AmiBlitz3.ab2@15186>   MOVE.w #$48C0,D1
0002B378 <AmiBlitz3.ab2@15187>   OR.w regnum,D1
0002B37C <AmiBlitz3.ab2@15188>    BSR.w writeword
0002B37E <AmiBlitz3.ab2@15189>   ADDQ.w #1,D1
0002B382 <AmiBlitz3.ab2@15190>    BSR.w writeword
0002B386 <AmiBlitz3.ab2@15193>    MOVE.w #$48C0,D1
0002B38C <AmiBlitz3.ab2@15194>   OR.w regnum,D1
0002B390 <AmiBlitz3.ab2@15195>    BSR.w writeword
0002B394 <AmiBlitz3.ab2@15196>   MOVE.w #$81C0,D1
0002B398 <AmiBlitz3.ab2@15197> BRA.w doplus2
0002B39E <AmiBlitz3.ab2@15201>   TST.b fast
0002B3A2 <AmiBlitz3.ab2@15202>   BNE.s 'l10
0002B3A6 <AmiBlitz3.ab2@15203>   MOVE.w #$CB01,D1
0002B3AA <AmiBlitz3.ab2@15204> BRA.w domylib
0002B3AE <AmiBlitz3.ab2@15210>   BSR.w JL_0_AD40
0002B3B0 <AmiBlitz3.ab2@15211>   MOVE.l D4,D1
0002B3B4 <AmiBlitz3.ab2@15212>    BSR.w JL_0_AD38
0002B3B8 <AmiBlitz3.ab2@15213>    BSR.w JL_0_A352
0002B3BE <AmiBlitz3.ab2@15227>    MOVE.l #$4c410800,d1
0002B3C2 <AmiBlitz3.ab2@15228>    BSR writelong
0002B3C6 <AmiBlitz3.ab2@15231>   MOVE.w #$4e71,d1
0002B3CA <AmiBlitz3.ab2@15233>    BSR.w JL_0_A36E
0002B3CC <AmiBlitz3.ab2@15234>   MOVE.l D5,D1
0002B3D0 <AmiBlitz3.ab2@15235> BRA.w JL_0_AD38
0002B3D4 <AmiBlitz3.ab2@15238>     CMP.w #8,d3
0002B3D8 <AmiBlitz3.ab2@15239>     BEQ 'ok
0002B3DA <AmiBlitz3.ab2@15240>     ASL.l #1,d3
0002B3DC <AmiBlitz3.ab2@15241>     ASL.l #8,d3
0002B3E0 <AmiBlitz3.ab2@15242>     MOVE.w #$e080,d1
0002B3E2 <AmiBlitz3.ab2@15243>     OR.w d3,d1
0002B3E6 <AmiBlitz3.ab2@15244> BRA 'oklsr2
0002B3EA <AmiBlitz3.ab2@15247>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002B3F0 <AmiBlitz3.ab2@15250>      SUBQ.l #6,destpointer
0002B3F4 <AmiBlitz3.ab2@15251>      BSR writeword
0002B3F6 <AmiBlitz3.ab2@15252>      MOVE.l (a7)+,d3
0002B3F8 <AmiBlitz3.ab2@15253>      MOVEQ #0,d1
0002B3FE <AmiBlitz3.ab2@15254>      CLR.l load_var_addr
0002B404 <AmiBlitz3.ab2@15255>      CLR.l imm_addr
0002B408 <AmiBlitz3.ab2@15256> BRA JL_0_AD38
0002B40C <AmiBlitz3.ab2@15260>   MOVE.w #$CB00,D1                                         ;quickdiv
0002B410 <AmiBlitz3.ab2@15261> BRA.w domylib
0002B416 <AmiBlitz3.ab2@15265>    TST.b iee
0002B41A <AmiBlitz3.ab2@15266>    BNE fdiv1
0002B41E <AmiBlitz3.ab2@15267>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002B422 <AmiBlitz3.ab2@15268> BRA.w doflib
0002B424 <AmiBlitz3.ab2@15272>   MOVEQ #0,d0
0002B42A <AmiBlitz3.ab2@15273>   MOVE.w regnum,d0
0002B42C <AmiBlitz3.ab2@15274>   ADDQ #1,d0
0002B42E <AmiBlitz3.ab2@15275>   ASL.w #8,d0
0002B430 <AmiBlitz3.ab2@15276>   ASL.w #2,d0
0002B436 <AmiBlitz3.ab2@15277>   MOVE.l #$f2000020,d1                                     ;fpu div
0002B438 <AmiBlitz3.ab2@15278>   OR.l d0,d1
0002B43E <AmiBlitz3.ab2@15279>   MOVE.w regnum,d0
0002B440 <AmiBlitz3.ab2@15280>   ASL.w #7,d0
0002B442 <AmiBlitz3.ab2@15281>   OR.l d0,d1
0002B446 <AmiBlitz3.ab2@15282> BRA.w writelong
0002B44A <AmiBlitz3.ab2@15286>   MOVE.w #$C000,D1
0002B44E <AmiBlitz3.ab2@15287> BRA.w doplus2
0002B452 <AmiBlitz3.ab2@15291>   MOVE.w #$C040,D1
0002B456 <AmiBlitz3.ab2@15292> BRA.w doplus2
0002B45A <AmiBlitz3.ab2@15296>   MOVE.w #$C080,D1
0002B45E <AmiBlitz3.ab2@15297> BRA.w doplus2
0002B462 <AmiBlitz3.ab2@15301>   MOVE.w #$8000,D1
0002B466 <AmiBlitz3.ab2@15302> BRA.w doplus2
0002B46A <AmiBlitz3.ab2@15306>   MOVE.w #$8040,D1
0002B46E <AmiBlitz3.ab2@15307> BRA.w doplus2
0002B472 <AmiBlitz3.ab2@15311>   MOVE.w #$8080,D1
0002B476 <AmiBlitz3.ab2@15312> BRA.w doplus2
0002B47A <AmiBlitz3.ab2@15316>   MOVE.w #$B100,D1
0002B480 <AmiBlitz3.ab2@15319>    MOVE.w regnum,D3
0002B482 <AmiBlitz3.ab2@15320>   OR.w D3,D1
0002B484 <AmiBlitz3.ab2@15321>   ADDQ.w #1,D3
0002B486 <AmiBlitz3.ab2@15322>   LSL.w #8,D3
0002B488 <AmiBlitz3.ab2@15323>   LSL.w #1,D3
0002B48A <AmiBlitz3.ab2@15324>   OR.w D3,D1
0002B48E <AmiBlitz3.ab2@15325> BRA.w writeword
0002B492 <AmiBlitz3.ab2@15329>   MOVE.w #$B140,D1
0002B496 <AmiBlitz3.ab2@15330> BRA.w JL_0_A25C
0002B49A <AmiBlitz3.ab2@15334>   MOVE.w #$B180,D1
0002B49E <AmiBlitz3.ab2@15335> BRA.w JL_0_A25C
0002B4A2 <AmiBlitz3.ab2@15339>   MOVE.w #$E1A8,D1
0002B4A6 <AmiBlitz3.ab2@15340> BRA.w JL_0_A298
0002B4AA <AmiBlitz3.ab2@15344>   MOVE.w #$E0A8,D1
0002B4AE <AmiBlitz3.ab2@15345> BRA.w JL_0_A298
0002B4B2 <AmiBlitz3.ab2@15349>   MOVE.w #$E0A0,D1
0002B4B6 <AmiBlitz3.ab2@15350> BRA.w JL_0_A298
0002B4B8 <AmiBlitz3.ab2@15354>   MOVE.w D1,-(A7)
0002B4BE <AmiBlitz3.ab2@15355>   ADDQ.w #1,regnum
0002B4C0 <AmiBlitz3.ab2@15356>   MOVE.w D2,-(A7)
0002B4C2 <AmiBlitz3.ab2@15357>   MOVE.w D2,D3
0002B4C4 <AmiBlitz3.ab2@15358>   MOVEQ.l #$02,D2
0002B4C8 <AmiBlitz3.ab2@15363>    BSR.w writeconvertcode
0002B4CA <AmiBlitz3.ab2@15365>   MOVE.w (A7)+,D2
0002B4D0 <AmiBlitz3.ab2@15366>   SUBQ.w #1,regnum
0002B4D4 <AmiBlitz3.ab2@15367>   CMP.w #$4,D2
0002B4D8 <AmiBlitz3.ab2@15368>    BEQ.w JL_0_A2C2
0002B4DA <AmiBlitz3.ab2@15369>   MOVE.w D2,D3
0002B4DC <AmiBlitz3.ab2@15370>   MOVEQ.l #$03,D2
0002B4E0 <AmiBlitz3.ab2@15371>    BSR.w JL_0_9770
0002B4E2 <AmiBlitz3.ab2@15374>    MOVE.w (A7)+,D1
0002B4E8 <AmiBlitz3.ab2@15375>   MOVE.w regnum,D3
0002B4EA <AmiBlitz3.ab2@15376>   OR.w D3,D1
0002B4EC <AmiBlitz3.ab2@15377>   ADDQ.w #1,D3
0002B4EE <AmiBlitz3.ab2@15378>   LSL.w #8,D3
0002B4F0 <AmiBlitz3.ab2@15379>   LSL.w #1,D3
0002B4F2 <AmiBlitz3.ab2@15380>   OR.w D3,D1
0002B4F6 <AmiBlitz3.ab2@15381> BRA.w writeword
0002B4FA <AmiBlitz3.ab2@15385>   MOVE.w #$0100,D1
0002B4FE <AmiBlitz3.ab2@15386>    BSR.w JL_0_A31C
0002B504 <AmiBlitz3.ab2@15387>   MOVE.w regnum,D1
0002B508 <AmiBlitz3.ab2@15388>   ORI.w #$56C0,D1
0002B50C <AmiBlitz3.ab2@15389>    BSR.w writeword
0002B512 <AmiBlitz3.ab2@15390>   MOVE.w regnum,D1
0002B516 <AmiBlitz3.ab2@15391>   ORI.w #$4880,D1
0002B51A <AmiBlitz3.ab2@15392>    BSR.w writeword
0002B51C <AmiBlitz3.ab2@15393>   MOVEQ.l #$02,D2
0002B51E <AmiBlitz3.ab2@15394> RTS
0002B522 <AmiBlitz3.ab2@15398>   MOVE.w #$01C0,D1
0002B526 <AmiBlitz3.ab2@15401>    BSR.w JL_0_A31C
0002B528 <AmiBlitz3.ab2@15402>   MOVEQ.l #$03,D2
0002B52A <AmiBlitz3.ab2@15403> RTS
0002B52E <AmiBlitz3.ab2@15407>   MOVE.w #$0180,D1
0002B532 <AmiBlitz3.ab2@15408> BRA.w JL_0_A304
0002B536 <AmiBlitz3.ab2@15412>   MOVE.w #$0140,D1
0002B53A <AmiBlitz3.ab2@15413> BRA.w JL_0_A304
0002B53C <AmiBlitz3.ab2@15417>   MOVE.w D1,-(A7)
0002B53E <AmiBlitz3.ab2@15418>   MOVE.w D2,-(A7)
0002B540 <AmiBlitz3.ab2@15419>   MOVE.w D2,D3
0002B542 <AmiBlitz3.ab2@15420>   MOVEQ.l #$03,D2
0002B546 <AmiBlitz3.ab2@15421>    BSR.w JL_0_9770
0002B548 <AmiBlitz3.ab2@15422>   MOVE.w (A7)+,D3
0002B54A <AmiBlitz3.ab2@15423>   MOVEQ.l #$01,D2
0002B550 <AmiBlitz3.ab2@15424>   ADDQ.w #1,regnum
0002B554 <AmiBlitz3.ab2@15425>    BSR.w writeconvertcode
0002B55A <AmiBlitz3.ab2@15426>   SUBQ.w #1,regnum
0002B560 <AmiBlitz3.ab2@15427>   MOVE.w regnum,D1
0002B562 <AmiBlitz3.ab2@15428>   MOVE.w D1,D2
0002B564 <AmiBlitz3.ab2@15429>   ADDQ.w #1,D2
0002B566 <AmiBlitz3.ab2@15430>   LSL.w #8,D2
0002B568 <AmiBlitz3.ab2@15431>   LSL.w #1,D2
0002B56A <AmiBlitz3.ab2@15432>   OR.w (A7)+,D1
0002B56C <AmiBlitz3.ab2@15433>   OR.w D2,D1
0002B570 <AmiBlitz3.ab2@15434> BRA.w writeword
0002B576 <AmiBlitz3.ab2@15438>   MOVE.w regnum,D1
0002B57A <AmiBlitz3.ab2@15439>    BEQ.w JL_0_A36C
0002B57E <AmiBlitz3.ab2@15440>   ORI.w #$2000,D1
0002B582 <AmiBlitz3.ab2@15441>    BSR.w writeword
0002B586 <AmiBlitz3.ab2@15442>   ADDI.w #$201,D1
0002B58A <AmiBlitz3.ab2@15443>    BSR.w writeword
0002B58C <AmiBlitz3.ab2@15446> RTS
0002B592 <AmiBlitz3.ab2@15450>   MOVE.w regnum,D1
0002B596 <AmiBlitz3.ab2@15451>    BEQ.w JL_0_A384
0002B598 <AmiBlitz3.ab2@15452>   LSL.w #8,D1
0002B59A <AmiBlitz3.ab2@15453>   LSL.w #1,D1
0002B59E <AmiBlitz3.ab2@15454>   ORI.w #$2000,D1
0002B5A2 <AmiBlitz3.ab2@15455>    BSR.w writeword
0002B5A4 <AmiBlitz3.ab2@15458> RTS
0002B5AA <AmiBlitz3.ab2@15462>    CLR.b isconstantvalue
0002B5B0 <AmiBlitz3.ab2@15463>    CLR.l lastconstantvalue
0002B5B8 <AmiBlitz3.ab2@15464>    CMPI.w #$7,regnum
0002B5BC <AmiBlitz3.ab2@15465>    BCS.w JL_0_A6B4
0002B5C2 <AmiBlitz3.ab2@15466>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002B5C6 <AmiBlitz3.ab2@15467>   BSR writelong
0002B5CA <AmiBlitz3.ab2@15468>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002B5CE <AmiBlitz3.ab2@15470>   CMP.w #$3,D2
0002B5D2 <AmiBlitz3.ab2@15471>    BCS.w JL_0_A3A2
0002B5D6 <AmiBlitz3.ab2@15472>   MOVE.w #$2F06,D1
0002B5DA <AmiBlitz3.ab2@15475>   BSR.w writeword
0002B5DC <AmiBlitz3.ab2@15476>   MOVE.w D1,-(A7)
0002B5E2 <AmiBlitz3.ab2@15477>   SUBQ.w #1,regnum
0002B5E6 <AmiBlitz3.ab2@15478>    BSR.w JL_0_A6B4
0002B5EC <AmiBlitz3.ab2@15479>   ADDQ.w #1,regnum
0002B5F2 <AmiBlitz3.ab2@15480>   MOVE.l #$f2001b80,d1
0002B5F6 <AmiBlitz3.ab2@15481>   BSR writelong
0002B5FA <AmiBlitz3.ab2@15482>   MOVE.w #$3E06,D1
0002B5FE <AmiBlitz3.ab2@15483>   CMP.w #$3,D2
0002B602 <AmiBlitz3.ab2@15484>    BCS.w JL_0_A3C8
0002B606 <AmiBlitz3.ab2@15485>   MOVE.w #$2E06,D1
0002B60A <AmiBlitz3.ab2@15488>   BSR.w writeword
0002B60C <AmiBlitz3.ab2@15489>   MOVE.w (A7)+,D1
0002B610 <AmiBlitz3.ab2@15490>   ANDI.w #$F000,D1
0002B614 <AmiBlitz3.ab2@15491>   ORI.w #$C1F,D1
0002B61A <AmiBlitz3.ab2@15492>   JSR writeword
0002B620 <AmiBlitz3.ab2@15493>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002B624 <AmiBlitz3.ab2@15494> BRA writelong
0002B628 <AmiBlitz3.ab2@15498>   BSR.w JL_0_A6B4
0002B62C <AmiBlitz3.ab2@15499>   MOVE.w #$4440,D1
0002B630 <AmiBlitz3.ab2@15500>   CMP.w #$3,D2
0002B634 <AmiBlitz3.ab2@15501>    BCS.w JL_0_A406
0002B638 <AmiBlitz3.ab2@15502>   MOVE.w #$4480,D1
0002B63C <AmiBlitz3.ab2@15503>   CMP.w #$5,D2
0002B640 <AmiBlitz3.ab2@15504>    BCS.w JL_0_A406
0002B644 <AmiBlitz3.ab2@15505>   CMP.w #$6,D2
0002B648 <AmiBlitz3.ab2@15506>    BCC.w illoperr
0002B64C <AmiBlitz3.ab2@15507>   MOVE.w #$FFC4,D1
0002B650 <AmiBlitz3.ab2@15508> BRA.w JL_0_9604
0002B656 <AmiBlitz3.ab2@15511>   OR.w regnum,D1                                           ;negate
0002B65C <AmiBlitz3.ab2@15512>   CLR.l imm_addr
0002B660 <AmiBlitz3.ab2@15513> BRA.w writeword
0002B664 <AmiBlitz3.ab2@15517>    BSR.w eval4
0002B668 <AmiBlitz3.ab2@15518>   CMP.w #")",D0
0002B66C <AmiBlitz3.ab2@15519>    BEQ.w JL_0_A424
0002B670 <AmiBlitz3.ab2@15520>   CMP.w #"}",D0
0002B674 <AmiBlitz3.ab2@15521>    BNE.w brackets_                                         ;syntax error brackets
0002B678 <AmiBlitz3.ab2@15524> BRA.w get1bytemain
0002B67C <AmiBlitz3.ab2@15528>    BSR.w eval4
0002B680 <AmiBlitz3.ab2@15529>   CMP.w #$5,D2
0002B684 <AmiBlitz3.ab2@15530>    BCC.w illoperr
0002B68A <AmiBlitz3.ab2@15531>   MOVE.w regnum,D1
0002B68E <AmiBlitz3.ab2@15532>   ORI.w #$4640,D1
0002B692 <AmiBlitz3.ab2@15533>   CMP.w #$3,D2
0002B696 <AmiBlitz3.ab2@15534>    BCS.w writeword
0002B69A <AmiBlitz3.ab2@15535>   EORI.w #$C0,D1
0002B69E <AmiBlitz3.ab2@15536> BRA.w writeword
0002B6A0 <AmiBlitz3.ab2@15540>   MOVEQ.l #$05,D2                                          ;fpu pi
0002B6A6 <AmiBlitz3.ab2@15541>    TST.b fpu
0002B6AA <AmiBlitz3.ab2@15542>   BEQ 'old
0002B6B0 <AmiBlitz3.ab2@15543> JMP fpupi
0002B6B6 <AmiBlitz3.ab2@15546>   MOVE.w regnum,D1
0002B6B8 <AmiBlitz3.ab2@15547>   LSL.w #8,D1
0002B6BA <AmiBlitz3.ab2@15548>   LSL.w #1,D1
0002B6BE <AmiBlitz3.ab2@15549>   ORI.w #$203C,D1
0002B6C2 <AmiBlitz3.ab2@15550>    BSR.w writeword
0002B6C8 <AmiBlitz3.ab2@15551>   MOVE.l #$C90FDA42,D1
0002B6CC <AmiBlitz3.ab2@15552>    BSR.w writelong
0002B6D0 <AmiBlitz3.ab2@15553> BRA.w get1bytemain
0002B7CC <AmiBlitz3.ab2@15561> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002B8C8 <AmiBlitz3.ab2@15562>              Ds.l 63
0002B910 <AmiBlitz3.ab2@15563>              Ds.l 18
0002B914 <AmiBlitz3.ab2@15564> forthsp:     Dc.l forthstack
0002B940 <AmiBlitz3.ab2@15569>    !fget
0002B944 <AmiBlitz3.ab2@15570>    CMP.b #$7e,d0
0002B948 <AmiBlitz3.ab2@15571>    BNE 'noc
0002B94A <AmiBlitz3.ab2@15572>    SUBQ.l #1,a5
0002B94E <AmiBlitz3.ab2@15573>    BSR get1bytemain
0002B952 <AmiBlitz3.ab2@15576>    CMP.b #"#",d0
0002B956 <AmiBlitz3.ab2@15577>    BNE 'ld1
0002B95A <AmiBlitz3.ab2@15578>    CMP.b #$22,(a5)
0002B95E <AmiBlitz3.ab2@15579>    BNE 'ld1
0002B964 <AmiBlitz3.ab2@15580>    JSR addimmi
0002B968 <AmiBlitz3.ab2@15583>    CMP.b #$22,d0
0002B96C <AmiBlitz3.ab2@15584>    BNE 'l11
0002B972 <AmiBlitz3.ab2@15594>    NOT.w instringon
0002B974 <AmiBlitz3.ab2@15597>    TST.b d0
0002B978 <AmiBlitz3.ab2@15598>    BPL 'l10
0002B97A <AmiBlitz3.ab2@15599>    LSL.w #8,d0
0002B97C <AmiBlitz3.ab2@15600>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002B982 <AmiBlitz3.ab2@15601>    MOVE.l d0,lasttoken
0002B988 <AmiBlitz3.ab2@15602>    MOVE.w d0,lastchar
0002B98E <AmiBlitz3.ab2@15603>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002B992 <AmiBlitz3.ab2@15605>   CMP.w #"(",D0
0002B996 <AmiBlitz3.ab2@15606>    BEQ.w checkcast2
0002B99A <AmiBlitz3.ab2@15607> nocast CMP.w #"{",D0
0002B99E <AmiBlitz3.ab2@15608>    BEQ.w JL_0_A410
0002B9A2 <AmiBlitz3.ab2@15609>   CMP.w #$2D,D0
0002B9A6 <AmiBlitz3.ab2@15610>    BEQ.w JL_0_A3DA
0002B9AA <AmiBlitz3.ab2@15611>   CMP.w #-$7F77,D0
0002B9AE <AmiBlitz3.ab2@15612>    BEQ.w JL_0_A428
0002B9B2 <AmiBlitz3.ab2@15613>   MOVEA.l forthsp(PC),A1
0002B9B8 <AmiBlitz3.ab2@15614>   CMPA.l #forthsp,A1
0002B9BC <AmiBlitz3.ab2@15615>    BCC.w conmemerr
0002B9C2 <AmiBlitz3.ab2@15616>   MOVE.l destpointer,(A1)+
0002B9C8 <AmiBlitz3.ab2@15617>   MOVE.l hunkoffsetbase,(A1)+
0002B9CE <AmiBlitz3.ab2@15618>   MOVE.l lasta6,(A1)+
0002B9D4 <AmiBlitz3.ab2@15619>   MOVE.w lasta6,(A1)+
0002B9D6 <AmiBlitz3.ab2@15620>   CLR.w (A1)+
0002B9D8 <AmiBlitz3.ab2@15621>   CLR.w (A1)+
0002B9DE <AmiBlitz3.ab2@15622>   MOVE.l A1,forthsp
0002B9F0 <AmiBlitz3.ab2@15624>    !compare2
0002B9F4 <AmiBlitz3.ab2@15625>    BEQ.w JL_0_B224
0002B9F8 <AmiBlitz3.ab2@15626>   CMP.w #".",D0
0002B9FC <AmiBlitz3.ab2@15627>    BEQ.w JL_0_B21E
0002BA00 <AmiBlitz3.ab2@15628>   CMP.w #"#",D0
0002BA04 <AmiBlitz3.ab2@15629>    BEQ.w get_constant
0002BA08 <AmiBlitz3.ab2@15630>   CMP.w #"$",D0
0002BA0C <AmiBlitz3.ab2@15631>    BEQ.w get_hexconstant
0002BA10 <AmiBlitz3.ab2@15632>   CMP.w #"%",D0
0002BA14 <AmiBlitz3.ab2@15633>    BEQ.w JL_0_A8C0
0002BA18 <AmiBlitz3.ab2@15634>   CMP.w #-$7FD1,D0
0002BA1C <AmiBlitz3.ab2@15635>    BEQ.w _SizeOf
0002BA20 <AmiBlitz3.ab2@15636>   CMP.w #-$7F46,D0
0002BA24 <AmiBlitz3.ab2@15637>    BEQ.w JL_0_A44E
0002BA28 <AmiBlitz3.ab2@15638>   CMP.w #-$7F3B,D0
0002BA2C <AmiBlitz3.ab2@15639>    BEQ.w JL_0_A83C
0002BA30 <AmiBlitz3.ab2@15640>   CMP.w #-$7F3A,D0
0002BA34 <AmiBlitz3.ab2@15641>    BEQ.w JL_0_A846
0002BA3A <AmiBlitz3.ab2@15642>   MOVE.w constmode,D1
0002BA3E <AmiBlitz3.ab2@15643>    BEQ.w JL_0_A776
0002BA60 <AmiBlitz3.ab2@15644>    !compare1                                               ;bsr.w tstalpha
0002BA64 <AmiBlitz3.ab2@15645>    BEQ.w JL_0_AF22
0002BA68 <AmiBlitz3.ab2@15646>   CMP.w #$5F,D0
0002BA6C <AmiBlitz3.ab2@15647>    BEQ.w JL_0_AF22
0002BA70 <AmiBlitz3.ab2@15648>   CMP.w #$22,D0
0002BA74 <AmiBlitz3.ab2@15649>    BEQ.w JL_0_AF00
0002BA78 <AmiBlitz3.ab2@15650> BRA.w syntaxerr
0002BA7E <AmiBlitz3.ab2@15652> checkcast2 JMP checkcast
0002BA84 <AmiBlitz3.ab2@15655>   MOVE.w cfetchmode,D1
0002BA88 <AmiBlitz3.ab2@15656>   BEQ.w JL_0_A784
0002BA8C <AmiBlitz3.ab2@15657> BRA.w badconerr
0002BA92 <AmiBlitz3.ab2@15660> JMP syntaxerropt4
0002BA94 <AmiBlitz3.ab2@15664>   NOT.w -(A1)
0002BAB6 <AmiBlitz3.ab2@15665>   !compare1                                                ;bsr.w tstalpha
0002BABA <AmiBlitz3.ab2@15666>    BEQ.w JL_0_AF4C
0002BABE <AmiBlitz3.ab2@15667>   CMP.w #$2A,D0
0002BAC2 <AmiBlitz3.ab2@15668>    BEQ.w JL_0_AF4C
0002BAC6 <AmiBlitz3.ab2@15669>   CMP.w #$5C,D0
0002BACA <AmiBlitz3.ab2@15670>    BEQ.w JL_0_AF4C
0002BACE <AmiBlitz3.ab2@15671>   CMP.w #$22,D0
0002BAD2 <AmiBlitz3.ab2@15672>    BEQ.w JL_0_ADC0
0002BAD6 <AmiBlitz3.ab2@15673>   BTST #$F,D0
0002BADA <AmiBlitz3.ab2@15674>    BNE.w JL_0_AAF2
0002BADE <AmiBlitz3.ab2@15675>   CMP.w #"&",D0
0002BAE2 <AmiBlitz3.ab2@15676>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002BAE6 <AmiBlitz3.ab2@15677>   CMP.w #"?",D0
0002BAEA <AmiBlitz3.ab2@15678>    BEQ.w JL_0_AED4
0002BAEE <AmiBlitz3.ab2@15681>   CMP.b #"@",d0
0002BAF2 <AmiBlitz3.ab2@15682>    BNE syntaxerr
0002BAF8 <AmiBlitz3.ab2@15683>   TST.b newsyntax
0002BAFC <AmiBlitz3.ab2@15684>    BEQ JUMP_syntaxerropt4
0002BB02 <AmiBlitz3.ab2@15685>   MOVE.w regnum,D1
0002BB04 <AmiBlitz3.ab2@15686>   LSL.w #8,D1
0002BB06 <AmiBlitz3.ab2@15687>   LSL.w #1,D1
0002BB0A <AmiBlitz3.ab2@15688>   ORI.w #$203C,D1
0002BB0E <AmiBlitz3.ab2@15689>   BSR.w writeword
0002BB12 <AmiBlitz3.ab2@15690>   CMP.b #$22,(a5)
0002BB16 <AmiBlitz3.ab2@15691>    BNE syntaxerr
0002BB18 <AmiBlitz3.ab2@15692>   ADDQ #1,a5
0002BB1A <AmiBlitz3.ab2@15693>   MOVEQ #0,d0
0002BB1E <AmiBlitz3.ab2@15694>   CMP.b #1,d2
0002BB22 <AmiBlitz3.ab2@15695>    BEQ 'l3b
0002BB26 <AmiBlitz3.ab2@15696>   CMP.b #2,d2
0002BB2A <AmiBlitz3.ab2@15697>    BEQ 'l2b
0002BB2E <AmiBlitz3.ab2@15698>   CMP.b #4,d2
0002BB32 <AmiBlitz3.ab2@15699>    BEQ error_convert_types
0002BB34 <AmiBlitz3.ab2@15700>   MOVE.b (a5)+,d0
0002BB38 <AmiBlitz3.ab2@15701>   BEQ syntaxerr
0002BB3C <AmiBlitz3.ab2@15702>   CMP.b #$22,d0
0002BB40 <AmiBlitz3.ab2@15703>   BNE 'l1
0002BB44 <AmiBlitz3.ab2@15704>     MOVE.b #0,d0
0002BB48 <AmiBlitz3.ab2@15705> BRA 'do
0002BB4A <AmiBlitz3.ab2@15708>   ASL.l #8,d0
0002BB4C <AmiBlitz3.ab2@15709>   MOVE.b (a5)+,d0
0002BB50 <AmiBlitz3.ab2@15710>   BEQ syntaxerr
0002BB54 <AmiBlitz3.ab2@15711>   CMP.b #$22,d0
0002BB58 <AmiBlitz3.ab2@15712>   BNE 'l2
0002BB5C <AmiBlitz3.ab2@15713>     MOVE.b #0,d0
0002BB5E <AmiBlitz3.ab2@15714>     ASR.l #8,d0
0002BB62 <AmiBlitz3.ab2@15715> BRA 'do
0002BB64 <AmiBlitz3.ab2@15718>   ASL.l #8,d0
0002BB66 <AmiBlitz3.ab2@15721>   MOVE.b (a5)+,d0
0002BB6A <AmiBlitz3.ab2@15722>    BEQ syntaxerr
0002BB6E <AmiBlitz3.ab2@15723>    CMP.b #$22,d0
0002BB72 <AmiBlitz3.ab2@15724>    BNE 'l3
0002BB76 <AmiBlitz3.ab2@15725>    MOVE.b #0,d0
0002BB78 <AmiBlitz3.ab2@15726>    ASR.l #8,d0
0002BB7C <AmiBlitz3.ab2@15727> BRA 'do
0002BB7E <AmiBlitz3.ab2@15730>   ASL.l #8,d0
0002BB80 <AmiBlitz3.ab2@15733>   MOVE.b (a5)+,d0
0002BB84 <AmiBlitz3.ab2@15734>    BEQ syntaxerr
0002BB88 <AmiBlitz3.ab2@15735>    CMP.b #$22,d0
0002BB8C <AmiBlitz3.ab2@15736>    BNE 'l4
0002BB90 <AmiBlitz3.ab2@15737>    MOVE.b #0,d0
0002BB92 <AmiBlitz3.ab2@15738>    ASR.l #8,d0
0002BB96 <AmiBlitz3.ab2@15739> BRA 'do
0002BB9A <AmiBlitz3.ab2@15742>    CMP.b #$22,(a5)+
0002BB9E <AmiBlitz3.ab2@15743>    BNE JUMP_error4char
0002BBA0 <AmiBlitz3.ab2@15746>   MOVE.l d0,d1
0002BBA4 <AmiBlitz3.ab2@15747>     BSR writelong
0002BBA8 <AmiBlitz3.ab2@15748>     BSR get1bytemain
0002BBAA <AmiBlitz3.ab2@15749> RTS
0002BBAE <AmiBlitz3.ab2@15753>   BSR.w get1bytemain
0002BBB2 <AmiBlitz3.ab2@15754>   CMP.w #$2E,D0
0002BBB6 <AmiBlitz3.ab2@15755>    BEQ.b JL_0_A7F4
0002BBC0 <AmiBlitz3.ab2@15757>   MOVE.w oldqflag,instringon
0002BBC6 <AmiBlitz3.ab2@15758>   MOVEA.l lastsourcepos,A5
0002BBC8 <AmiBlitz3.ab2@15759>   MOVE.w D2,-(A7)
0002BBCC <AmiBlitz3.ab2@15760>    BSR.w getparameter2
0002BBD0 <AmiBlitz3.ab2@15761>    BEQ.w syntaxerr
0002BBD6 <AmiBlitz3.ab2@15762>   LEA varbase,A2
0002BBDA <AmiBlitz3.ab2@15763>    BSR.w findvariable
0002BBDE <AmiBlitz3.ab2@15764>    BNE.w notypeerr
0002BBE2 <AmiBlitz3.ab2@15765>   MOVE.w $4(A2),D3
0002BBE4 <AmiBlitz3.ab2@15766>   EXT.l D3
0002BBE6 <AmiBlitz3.ab2@15767>   MOVE.w (A7)+,D2
0002BBEA <AmiBlitz3.ab2@15768> BRA.w JL_0_B46E
0002BBEC <AmiBlitz3.ab2@15772>   MOVE.w D2,-(A7)
0002BBF0 <AmiBlitz3.ab2@15773>    BSR.w getparameter2
0002BBF4 <AmiBlitz3.ab2@15774>    BEQ.w syntaxerr
0002BBFA <AmiBlitz3.ab2@15775>   LEA newtypebase,A2
0002BBFE <AmiBlitz3.ab2@15776>    BSR.w findtype
0002BC02 <AmiBlitz3.ab2@15777>    BNE.w notypeerr
0002BC04 <AmiBlitz3.ab2@15778>   MOVEQ.l #$00,D3
0002BC08 <AmiBlitz3.ab2@15779>   CMP.w #$5C,D0
0002BC0C <AmiBlitz3.ab2@15780>    BNE.w JL_0_A832
0002BC10 <AmiBlitz3.ab2@15781>    BSR.w getparameter2
0002BC14 <AmiBlitz3.ab2@15782>    BEQ.w syntaxerr
0002BC18 <AmiBlitz3.ab2@15783>   LEA $4(A2),A2
0002BC1C <AmiBlitz3.ab2@15784>    BSR.w findvariable2
0002BC20 <AmiBlitz3.ab2@15785>    BNE.w noofferr
0002BC24 <AmiBlitz3.ab2@15786>   MOVE.w $4(A2),D3
0002BC28 <AmiBlitz3.ab2@15787> BRA.w JL_0_A836
0002BC2C <AmiBlitz3.ab2@15791>   MOVE.w $8(A2),D3
0002BC2E <AmiBlitz3.ab2@15794>   MOVE.w (A7)+,D2
0002BC32 <AmiBlitz3.ab2@15795> BRA.w JL_0_B46E
0002BC34 <AmiBlitz3.ab2@15799>   MOVEQ.l #-$01,D3
0002BC38 <AmiBlitz3.ab2@15800>    BSR.w get1bytemain
0002BC3C <AmiBlitz3.ab2@15801> BRA.w JL_0_B46E
0002BC3E <AmiBlitz3.ab2@15805>   MOVEQ.l #$00,D3
0002BC42 <AmiBlitz3.ab2@15806>    BSR.w get1bytemain
0002BC46 <AmiBlitz3.ab2@15807> BRA.w JL_0_B46E
0002BC4A <AmiBlitz3.ab2@15811>   CMP.w #$30,D0
0002BC4E <AmiBlitz3.ab2@15812>    BCS.w JL_0_A876
0002BC52 <AmiBlitz3.ab2@15813>   CMP.w #$39,D0
0002BC56 <AmiBlitz3.ab2@15814>    BLS.w JL_0_A874
0002BC5A <AmiBlitz3.ab2@15815>   ANDI.w #$FFDF,D0
0002BC5E <AmiBlitz3.ab2@15816>   CMP.w #$46,D0
0002BC62 <AmiBlitz3.ab2@15817>    BHI.w JL_0_A876
0002BC66 <AmiBlitz3.ab2@15818>   CMP.w #$41,D0
0002BC6A <AmiBlitz3.ab2@15819>    BCS.w JL_0_A876
0002BC6C <AmiBlitz3.ab2@15822>    CMP.w D0,D0
0002BC6E <AmiBlitz3.ab2@15825> RTS
0002BC72 <AmiBlitz3.ab2@15829>   CMP.w #$31,D0
0002BC76 <AmiBlitz3.ab2@15830>    BEQ.w JL_0_A884
0002BC7A <AmiBlitz3.ab2@15831>   CMP.w #$30,D0
0002BC7C <AmiBlitz3.ab2@15834> RTS
0002BC7E <AmiBlitz3.ab2@15838>    MOVEQ #0,d0
0002BC80 <AmiBlitz3.ab2@15839>    MOVE.b (a5)+,d0
0002BC82 <AmiBlitz3.ab2@15840>    MOVE.b (a5)+,d0
0002BC86 <AmiBlitz3.ab2@15841>    BSR ishex
0002BC8A <AmiBlitz3.ab2@15842>    BNE syntaxerr
0002BC8E <AmiBlitz3.ab2@15843>    SUBI.w #$30,D0
0002BC92 <AmiBlitz3.ab2@15844>    CMP.w #$9,D0
0002BC96 <AmiBlitz3.ab2@15845>    BLS.w 'l1
0002BC98 <AmiBlitz3.ab2@15846>    SUBQ.w #7,D0
0002BC9A <AmiBlitz3.ab2@15849>    MOVE.l d0,d1
0002BC9C <AmiBlitz3.ab2@15850>    MOVE.b (a5)+,d0
0002BCA0 <AmiBlitz3.ab2@15851>      BSR ishex
0002BCA4 <AmiBlitz3.ab2@15852>     BNE syntaxerr
0002BCA6 <AmiBlitz3.ab2@15853>     LSL.l #4,d1
0002BCAA <AmiBlitz3.ab2@15854>     SUBI.w #$30,D0
0002BCAE <AmiBlitz3.ab2@15855>    CMP.w #$9,D0
0002BCB2 <AmiBlitz3.ab2@15856>    BLS.w 'l2
0002BCB4 <AmiBlitz3.ab2@15857>    SUBQ.w #7,D0
0002BCB6 <AmiBlitz3.ab2@15860>   ADD.l d1,d0
0002BCB8 <AmiBlitz3.ab2@15861> RTS
0002BCBC <AmiBlitz3.ab2@15865>    BSR.w get1bytemain
0002BCC0 <AmiBlitz3.ab2@15866>    BSR.w ishex
0002BCC4 <AmiBlitz3.ab2@15867>    BNE.w syntaxerr
0002BCC6 <AmiBlitz3.ab2@15868>   MOVEQ.l #$00,D3
0002BCCA <AmiBlitz3.ab2@15869>   CMP.w #5,d2
0002BCCE <AmiBlitz3.ab2@15870>   BNE JL_0_A894
0002BCD4 <AmiBlitz3.ab2@15871>   CMP.l #newtype_double,a2
0002BCD8 <AmiBlitz3.ab2@15872>   BEQ 'doit
0002BCDE <AmiBlitz3.ab2@15873>   CMP.l #newtype_float,a2
0002BCE2 <AmiBlitz3.ab2@15874>   BNE JL_0_A894
0002BCEA <AmiBlitz3.ab2@15877>    fmove.s #0,fp0
0002BCF0 <AmiBlitz3.ab2@15879>   TST.b fpu
0002BCF4 <AmiBlitz3.ab2@15880>   BEQ JL_0_A894
0002BCFA <AmiBlitz3.ab2@15881>   fmove.w #16,fp1
0002BCFE <AmiBlitz3.ab2@15882>   fmul.x fp1,fp0
0002BD02 <AmiBlitz3.ab2@15883>   SUBI.w #$30,D0
0002BD06 <AmiBlitz3.ab2@15884>   CMP.w #$9,D0
0002BD0A <AmiBlitz3.ab2@15885>    BLS.w JL_0_A8AEa
0002BD0C <AmiBlitz3.ab2@15886>   SUBQ.w #7,D0
0002BD10 <AmiBlitz3.ab2@15889>    fmove.w d0,fp1
0002BD14 <AmiBlitz3.ab2@15890>    fadd.x fp1,fp0
0002BD18 <AmiBlitz3.ab2@15891>    BSR.w get1bytemain
0002BD1C <AmiBlitz3.ab2@15892>    BSR.w ishex
0002BD20 <AmiBlitz3.ab2@15893>    BEQ.w JL_0_A894a
0002BD24 <AmiBlitz3.ab2@15894> BRA.w nofpregload
0002BD2A <AmiBlitz3.ab2@15898>   CMP.l #$10000000,D3
0002BD2E <AmiBlitz3.ab2@15899>    BCC.w overerr
0002BD30 <AmiBlitz3.ab2@15900>   LSL.l #4,D3
0002BD34 <AmiBlitz3.ab2@15901>   SUBI.w #$30,D0
0002BD38 <AmiBlitz3.ab2@15902>   CMP.w #$9,D0
0002BD3C <AmiBlitz3.ab2@15903>    BLS.w JL_0_A8AE
0002BD3E <AmiBlitz3.ab2@15904>   SUBQ.w #7,D0
0002BD40 <AmiBlitz3.ab2@15907>   OR.w D0,D3
0002BD44 <AmiBlitz3.ab2@15908>    BSR.w get1bytemain
0002BD48 <AmiBlitz3.ab2@15909>    BSR.w ishex
0002BD4C <AmiBlitz3.ab2@15910>    BEQ.w JL_0_A894
0002BD50 <AmiBlitz3.ab2@15911> BRA.w JL_0_B46E
0002BD54 <AmiBlitz3.ab2@15915>    BSR.w get1bytemain
0002BD58 <AmiBlitz3.ab2@15916>    BSR.w JL_0_A878
0002BD5C <AmiBlitz3.ab2@15917>    BNE.w syntaxerr
0002BD5E <AmiBlitz3.ab2@15918>    MOVEQ.l #$00,D3
0002BD60 <AmiBlitz3.ab2@15921>    LSL.l #1,D3
0002BD64 <AmiBlitz3.ab2@15922>    BCS.w overerr
0002BD68 <AmiBlitz3.ab2@15923>   SUBI.w #$30,D0
0002BD6A <AmiBlitz3.ab2@15924>   OR.w D0,D3
0002BD6E <AmiBlitz3.ab2@15925>    BSR.w get1bytemain
0002BD72 <AmiBlitz3.ab2@15926>    BSR.w JL_0_A878
0002BD76 <AmiBlitz3.ab2@15927>    BEQ.w JL_0_A8CE
0002BD7A <AmiBlitz3.ab2@15928> BRA.w JL_0_B46E
0002BD7C <AmiBlitz3.ab2@15932>    MOVE.w d2,-(A7)
0002BD84 <AmiBlitz3.ab2@15933>    MOVE.b #0,automode
0002BD88 <AmiBlitz3.ab2@15934>    CMP.b #"@",(a5)
0002BD8C <AmiBlitz3.ab2@15935>    BNE 'l1
0002BD8E <AmiBlitz3.ab2@15936>    ADDQ.l #1,a5
0002BD96 <AmiBlitz3.ab2@15937>    MOVE.b #1,automode
0002BD9A <AmiBlitz3.ab2@15938>    BSR getparameter2
0002BD9E <AmiBlitz3.ab2@15939>    BSR findlabel2
0002BDA2 <AmiBlitz3.ab2@15940>    BNE 'addit
0002BDA6 <AmiBlitz3.ab2@15941> BRA errormsg_autocount
0002BDAA <AmiBlitz3.ab2@15944>   BSR.w addlabelhash
0002BDB2 <AmiBlitz3.ab2@15945>   MOVE.l #$1,$4(A2)
0002BDB6 <AmiBlitz3.ab2@15946>   MOVEM.l a2/a5,-(a7)
0002BDBC <AmiBlitz3.ab2@15947>   MOVE.w lastchar,-(a7)
0002BDC2 <AmiBlitz3.ab2@15948>   LEA autostorename,a5
0002BDC6 <AmiBlitz3.ab2@15949>   BSR getparameter2
0002BDCA <AmiBlitz3.ab2@15950>   BSR findlabel2
0002BDCE <AmiBlitz3.ab2@15951>   BEQ 'found
0002BDD2 <AmiBlitz3.ab2@15952>   BSR.w addlabelhash
0002BDDA <AmiBlitz3.ab2@15953>   MOVE.l #$1,$4(A2)
0002BDE2 <AmiBlitz3.ab2@15954>   MOVE.l #0,8(a2)
0002BDE4 <AmiBlitz3.ab2@15957>    MOVE.w (a7)+,d0
0002BDEA <AmiBlitz3.ab2@15958>    MOVE.w d0,lastchar
0002BDEE <AmiBlitz3.ab2@15959>   MOVE.l 8(a2),d3
0002BDF6 <AmiBlitz3.ab2@15960>   ADD.l #1,8(a2)
0002BDFA <AmiBlitz3.ab2@15961>   MOVEM.l (a7)+,a2/a5
0002BDFE <AmiBlitz3.ab2@15962>   MOVE.l d3,8(a2)
0002BE02 <AmiBlitz3.ab2@15963>   MOVE.l $8(A2),D3
0002BE06 <AmiBlitz3.ab2@15964> BRA.l 'l3
0002BE0A <AmiBlitz3.ab2@15967>   BSR.w getparameter2
0002BE10 <AmiBlitz3.ab2@15968>     TST.b incnif
0002BE14 <AmiBlitz3.ab2@15969>     BEQ 'lc1
0002BE18 <AmiBlitz3.ab2@15970>     BSR.w findlabel2
0002BE1C <AmiBlitz3.ab2@15971>     BNE 'l5
0002BE1E <AmiBlitz3.ab2@15972>     MOVEQ #1,d3
0002BE20 <AmiBlitz3.ab2@15973>     MOVE.w (A7)+,D2
0002BE24 <AmiBlitz3.ab2@15974> BRA JL_0_B46E
0002BE26 <AmiBlitz3.ab2@15977>   MOVEQ #0,d3
0002BE28 <AmiBlitz3.ab2@15978>     MOVE.w (A7)+,D2
0002BE2C <AmiBlitz3.ab2@15979> BRA JL_0_B46E
0002BE30 <AmiBlitz3.ab2@15982>    BSR.w findlabel2
0002BE34 <AmiBlitz3.ab2@15983>    BNE.w cnferr
0002BE3C <AmiBlitz3.ab2@15986>    CMPI.l #$1,$4(A2)
0002BE40 <AmiBlitz3.ab2@15987>    BNE.w cnferr
0002BE44 <AmiBlitz3.ab2@15989>    MOVE.l $8(A2),D3
0002BE46 <AmiBlitz3.ab2@15990>    MOVE.w (A7)+,D2
0002BE4A <AmiBlitz3.ab2@15991> BRA.w JL_0_B46E
0002BE50 <AmiBlitz3.ab2@15995>   CLR.w vartype
0002BE58 <AmiBlitz3.ab2@15996>   MOVE.b #3,peekaddrsize
0002BE5C <AmiBlitz3.ab2@15997>   BSR.w JL_0_A916
0002BE62 <AmiBlitz3.ab2@15998>   MOVE.l a2,rightsidetype
0002BE64 <AmiBlitz3.ab2@15999>   MOVEQ.l #$03,D2
0002BE66 <AmiBlitz3.ab2@16000> RTS
0002BE6A <AmiBlitz3.ab2@16004>    BSR.w get1bytemain
0002BE7C <AmiBlitz3.ab2@16005>    !compare2
0002BE80 <AmiBlitz3.ab2@16006>    BEQ andop2
0002BE84 <AmiBlitz3.ab2@16007>    BSR.w getparameter
0002BE88 <AmiBlitz3.ab2@16008>    BSR.w JL_0_8E3C
0002BE8C <AmiBlitz3.ab2@16009>    BSR.w calcvar
0002BE90 <AmiBlitz3.ab2@16010>   CMP.b #$7,D2
0002BE94 <AmiBlitz3.ab2@16011>    BNE.w JL_0_A960
0002BE98 <AmiBlitz3.ab2@16012>   BTST #$F,D2
0002BE9C <AmiBlitz3.ab2@16013>    BNE.w JL_0_A94A
0002BEA2 <AmiBlitz3.ab2@16014>   MOVE.w D3,stamp2+2
0002BEA8 <AmiBlitz3.ab2@16015>   MOVE.l stamp2,D1
0002BEAC <AmiBlitz3.ab2@16016>    BSR.w pokela5s
0002BEB0 <AmiBlitz3.ab2@16017> BRA.w JL_0_A978
0002BEB6 <AmiBlitz3.ab2@16021>   MOVE.w regnum,D1
0002BEB8 <AmiBlitz3.ab2@16022>   LSL.w #8,D1
0002BEBA <AmiBlitz3.ab2@16023>   LSL.w #1,D1
0002BEC0 <AmiBlitz3.ab2@16024>   OR.w stamp,D1
0002BEC4 <AmiBlitz3.ab2@16025>    BSR.w writeword
0002BEC6 <AmiBlitz3.ab2@16026> RTS
0002BECA <AmiBlitz3.ab2@16030>   BTST #$F,D2
0002BECE <AmiBlitz3.ab2@16031>    BNE.w JL_0_A978
0002BED4 <AmiBlitz3.ab2@16032>   MOVE.w D3,leaamp+2
0002BEDA <AmiBlitz3.ab2@16033>   MOVE.l leaamp,D1
0002BEDE <AmiBlitz3.ab2@16034>    BSR.w pokela5s
0002BEE4 <AmiBlitz3.ab2@16037>   MOVE.w regnum,D1
0002BEE6 <AmiBlitz3.ab2@16038>   LSL.w #8,D1
0002BEE8 <AmiBlitz3.ab2@16039>   LSL.w #1,D1
0002BEEE <AmiBlitz3.ab2@16040>   OR.w leaamp2,D1
0002BEF2 <AmiBlitz3.ab2@16041> BRA.w writeword
0002BEF6 <AmiBlitz3.ab2@16045>   MOVE.w #$D200,D1
0002BEFA <AmiBlitz3.ab2@16046>    BSR.w Atokejsr
0002BEFC <AmiBlitz3.ab2@16047>   MOVEQ.l #$03,D2
0002BEFE <AmiBlitz3.ab2@16048> RTS
0002BF02 <AmiBlitz3.ab2@16052> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002BF04 <AmiBlitz3.ab2@16053>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002BF06 <AmiBlitz3.ab2@16054>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002BF0A <AmiBlitz3.ab2@16060>    BSR.w get1bytemain
0002BF0C <AmiBlitz3.ab2@16061>   MOVE.w D0,D1
0002BF10 <AmiBlitz3.ab2@16062>    BPL.w syntaxerr
0002BF12 <AmiBlitz3.ab2@16063>   MOVE.w D2,-(A7)
0002BF16 <AmiBlitz3.ab2@16064>   BCLR #$F,D1
0002BF1A <AmiBlitz3.ab2@16065>    BSR.w searchinstr
0002BF1E <AmiBlitz3.ab2@16066>   MOVE.l $12(A2),D0
0002BF22 <AmiBlitz3.ab2@16067>   TST.w -$2(A2,D0.L)
0002BF26 <AmiBlitz3.ab2@16068>    BEQ.w freeerr
0002BF28 <AmiBlitz3.ab2@16069>   MOVE.w (A7)+,D2
0002BF2A <AmiBlitz3.ab2@16070> RTS
0002BF2E <AmiBlitz3.ab2@16074>   MOVE.l $0(A5),D0
0002BF32 <AmiBlitz3.ab2@16075>    BNE.b ucodeskip
0002BF34 <AmiBlitz3.ab2@16076>   MOVEQ.l #-$01,D0
0002BF38 <AmiBlitz3.ab2@16077> BRA.b usedcodef
0002BF3C <AmiBlitz3.ab2@16080>   SUB.l $0(A5),D0
0002BF3E <AmiBlitz3.ab2@16083>   LSR.w #8,D0
0002BF42 <AmiBlitz3.ab2@16088>    MOVE.l $0(A5),D0
0002BF46 <AmiBlitz3.ab2@16089>    BNE.b ucodeskip2
0002BF48 <AmiBlitz3.ab2@16090>   MOVEQ.l #-$01,D0
0002BF4C <AmiBlitz3.ab2@16091> BRA.b usedcode2f
0002BF50 <AmiBlitz3.ab2@16094>   SUB.l $0(A5),D0                                          ;usedcode2
0002BF52 <AmiBlitz3.ab2@16095>   LSR.w #8,D0
0002BF54 <AmiBlitz3.ab2@16098>   LSR.w #8,D0
0002BF56 <AmiBlitz3.ab2@16103>   MOVE.l D0,-(A7)
0002BF58 <AmiBlitz3.ab2@16106>   MOVE.l (A7)+,D0
0002BF5A <AmiBlitz3.ab2@16109>   MOVE.l D0,D0
0002BF5E <AmiBlitz3.ab2@16115>   BSR.w JL_0_A9A0
0002BF62 <AmiBlitz3.ab2@16117>   MOVE.w -$2(A2,D0.L),D3
0002BF66 <AmiBlitz3.ab2@16118>   CMP.w #$9,D3
0002BF6A <AmiBlitz3.ab2@16119>    BCC.w doused__skip
0002BF6E <AmiBlitz3.ab2@16123>   LEA usedcode(PC),A0
0002BF72 <AmiBlitz3.ab2@16124>   LEA usedcodef(PC),A1
0002BF78 <AmiBlitz3.ab2@16126>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002BF7C <AmiBlitz3.ab2@16127>   ANDI.w #$7,D3
0002BF7E <AmiBlitz3.ab2@16128>   LSL.w #8,D3
0002BF80 <AmiBlitz3.ab2@16129>   LSL.w #1,D3
0002BF84 <AmiBlitz3.ab2@16130>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002BF88 <AmiBlitz3.ab2@16131> BRA.w doused__skip2
0002BF8C <AmiBlitz3.ab2@16136>   LEA usedcode2(PC),A0
0002BF90 <AmiBlitz3.ab2@16137>   LEA usedcode2f(PC),A1
0002BF96 <AmiBlitz3.ab2@16139>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002BF98 <AmiBlitz3.ab2@16140>   SUBQ.w #8,D3
0002BF9A <AmiBlitz3.ab2@16141>   LSL.w #8,D3
0002BF9C <AmiBlitz3.ab2@16142>   LSL.w #1,D3
0002BFA0 <AmiBlitz3.ab2@16143>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002BFA4 <AmiBlitz3.ab2@16146>   MOVE.w -$6(A2,D0.L),D3
0002BFA8 <AmiBlitz3.ab2@16147>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002BFAA <AmiBlitz3.ab2@16148>   ADDQ.w #4,D3
0002BFAE <AmiBlitz3.ab2@16149>   MOVE.w D3,$2(A0)
0002BFB4 <AmiBlitz3.ab2@16150>   MOVE.w regnum,D1
0002BFB8 <AmiBlitz3.ab2@16151>    BEQ.w doused__skip3
0002BFBC <AmiBlitz3.ab2@16152>   MOVE.w usedprep(PC),D1
0002BFC0 <AmiBlitz3.ab2@16153>    BSR.w writeword
0002BFC4 <AmiBlitz3.ab2@16156>   BSR.w pokecode
0002BFCA <AmiBlitz3.ab2@16157>   MOVE.w regnum,D1
0002BFCE <AmiBlitz3.ab2@16158>    BEQ.w doused__skip4
0002BFD0 <AmiBlitz3.ab2@16159>   LSL.w #8,D1
0002BFD2 <AmiBlitz3.ab2@16160>   LSL.w #1,D1
0002BFD6 <AmiBlitz3.ab2@16161>   OR.w usedfix(PC),D1
0002BFDA <AmiBlitz3.ab2@16162>    BSR.w writeword
0002BFDE <AmiBlitz3.ab2@16163>   MOVE.w useddone(PC),D1
0002BFE2 <AmiBlitz3.ab2@16164>    BSR.w writeword
0002BFE4 <AmiBlitz3.ab2@16167>    MOVEQ.l #$02,D2
0002BFE8 <AmiBlitz3.ab2@16168> BRA.w get1bytemain
0002BFEC <AmiBlitz3.ab2@16176>    BSR.w JL_0_A9A0
0002BFEE <AmiBlitz3.ab2@16178>   MOVEQ.l #$00,D3
0002BFF2 <AmiBlitz3.ab2@16179>   MOVE.w -$4(A2,D0.L),D3
0002BFF6 <AmiBlitz3.ab2@16180>    BSR.w get1bytemain
0002BFFA <AmiBlitz3.ab2@16181> BRA.w JL_0_B46E
0002BFFE <AmiBlitz3.ab2@16188>    BSR.w get1bytemain
0002C000 <AmiBlitz3.ab2@16189>   MOVE.w D0,-(A7)
0002C004 <AmiBlitz3.ab2@16190>    BSR.w get1bytemain
0002C008 <AmiBlitz3.ab2@16191>   CMP.w #$28,D0
0002C00C <AmiBlitz3.ab2@16192>    BNE.w syntaxerr
0002C00E <AmiBlitz3.ab2@16193>   MOVE.w (A7)+,D0
0002C012 <AmiBlitz3.ab2@16194>    BSR.w JL_0_C340
0002C016 <AmiBlitz3.ab2@16195>    BSR.w reget
0002C01A <AmiBlitz3.ab2@16196>   CMP.w #$29,D0
0002C01E <AmiBlitz3.ab2@16197>    BNE.w syntaxerr
0002C022 <AmiBlitz3.ab2@16201>   LEA addrcode(PC),A0
0002C026 <AmiBlitz3.ab2@16202>   LEA addrcodef(PC),A1
0002C02C <AmiBlitz3.ab2@16203>   MOVE.w -$6(A2),$2(A0)
0002C030 <AmiBlitz3.ab2@16204>   MOVE.w $4(A0),D1
0002C034 <AmiBlitz3.ab2@16205>   ANDI.w #$FFF8,D1
0002C03A <AmiBlitz3.ab2@16206>   OR.w regnum,D1
0002C03E <AmiBlitz3.ab2@16207>   MOVE.w D1,$4(A0)
0002C042 <AmiBlitz3.ab2@16208>   MOVE.w $6(A0),D1
0002C046 <AmiBlitz3.ab2@16209>   ANDI.w #$F1FF,D1
0002C04C <AmiBlitz3.ab2@16210>   MOVE.w regnum,D0
0002C04E <AmiBlitz3.ab2@16211>   LSL.w #8,D0
0002C050 <AmiBlitz3.ab2@16212>   LSL.w #1,D0
0002C052 <AmiBlitz3.ab2@16213>   OR.w D0,D1
0002C056 <AmiBlitz3.ab2@16214>   MOVE.w D1,$6(A0)
0002C05A <AmiBlitz3.ab2@16215>    BSR.w pokecode
0002C05C <AmiBlitz3.ab2@16216>   MOVEQ.l #$03,D2
0002C060 <AmiBlitz3.ab2@16217> BRA.w get1bytemain
0002C064 <AmiBlitz3.ab2@16221>   CMP.w #-$7F4D,D0
0002C068 <AmiBlitz3.ab2@16222>    BHI.w JL_0_AAFE
0002C06C <AmiBlitz3.ab2@16223> BRA.w syntaxerr
0002C070 <AmiBlitz3.ab2@16230> .do_null   CMP.w #$b581,d0
0002C074 <AmiBlitz3.ab2@16231>    BNE 'nonull
0002C07A <AmiBlitz3.ab2@16232>    MOVE.l d0,lastinstruction
0002C07E <AmiBlitz3.ab2@16233>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002C084 <AmiBlitz3.ab2@16234>    MOVE.w regnum,d0
0002C086 <AmiBlitz3.ab2@16235>    ASL.l #7,d0
0002C088 <AmiBlitz3.ab2@16236>    ASL.l #2,d0
0002C08A <AmiBlitz3.ab2@16237>    OR.l d0,d1
0002C08E <AmiBlitz3.ab2@16238>    BSR writeword
0002C094 <AmiBlitz3.ab2@16239>    JSR get1bytemain
0002C096 <AmiBlitz3.ab2@16240>    RTS
0002C09A <AmiBlitz3.ab2@16242> 'nonull CMP.w #$c982,d0
0002C09E <AmiBlitz3.ab2@16243>        BNE nonew_
0002C0A0 <AmiBlitz3.ab2@16245>   MOVE.l a5,-(a7)
0002C0A6 <AmiBlitz3.ab2@16246>   MOVE.w lastchar,-(a7)
0002C0AC <AmiBlitz3.ab2@16247>   JSR get1bytemain
0002C0B0 <AmiBlitz3.ab2@16248>   CMP.w #"(",d0                                             ; use oldcode
0002C0B4 <AmiBlitz3.ab2@16249>   BNE 'newcode
0002C0BA <AmiBlitz3.ab2@16250>   JSR get1bytemain
0002C0BE <AmiBlitz3.ab2@16251>   CMP.w #")",d0
0002C0C2 <AmiBlitz3.ab2@16252>   BEQ 'newcode
0002C0C8 <AmiBlitz3.ab2@16253>   MOVE.w (a7)+,lastchar
0002C0CA <AmiBlitz3.ab2@16254>   MOVE.l (a7)+,a5
0002C0D0 <AmiBlitz3.ab2@16255>   MOVE.w lastchar,d0
0002C0D4 <AmiBlitz3.ab2@16256>   BRA nonew_
0002C0D6 <AmiBlitz3.ab2@16257> 'newcode  MOVE.l a0,-(a7)
0002C0DC <AmiBlitz3.ab2@16258>   TST.b blitzparloop
0002C0E0 <AmiBlitz3.ab2@16259>   BNE 'err
0002C0E6 <AmiBlitz3.ab2@16260>   TST.b funcparloop
0002C0EA <AmiBlitz3.ab2@16261>   BNE 'err
0002C0EE <AmiBlitz3.ab2@16262>   BRA 'ok
0002C0F4 <AmiBlitz3.ab2@16263> 'err JMP errornewnotincalls
0002C0FA <AmiBlitz3.ab2@16264> 'ok  MOVE.l #$203c0000,d1
0002C0FE <AmiBlitz3.ab2@16265>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002C100 <AmiBlitz3.ab2@16266>   MOVEQ #0,d1
0002C104 <AmiBlitz3.ab2@16267>   MOVE.w 8(a0),d1
0002C108 <AmiBlitz3.ab2@16268>   BSR writeword
0002C10C <AmiBlitz3.ab2@16269>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002C110 <AmiBlitz3.ab2@16270>   BSR writeword
0002C114 <AmiBlitz3.ab2@16271>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002C118 <AmiBlitz3.ab2@16272>   BSR.w tokejsr2
0002C11A <AmiBlitz3.ab2@16273>   MOVE.l (a7)+,a0
0002C11C <AmiBlitz3.ab2@16274>   ADDQ.l #6,a7                      ; a5 need not restore
0002C120 <AmiBlitz3.ab2@16275>   CMP.w #")",d0
0002C124 <AmiBlitz3.ab2@16276>   BNE 'nobracket
0002C12A <AmiBlitz3.ab2@16277>   JSR get1bytemain
0002C12C <AmiBlitz3.ab2@16278> 'nobracket  RTS
0002C130 <AmiBlitz3.ab2@16280> nonew_  CMP.w #-$7F4A,D0
0002C134 <AmiBlitz3.ab2@16281>    BEQ.w JL_0_A98C
0002C138 <AmiBlitz3.ab2@16282>   CMP.w #-$7F48,D0
0002C13C <AmiBlitz3.ab2@16283>    BEQ.w doaddr
0002C140 <AmiBlitz3.ab2@16284>   CMP.w #-$7F3C,D0
0002C144 <AmiBlitz3.ab2@16285>    BEQ.w domaximum
0002C148 <AmiBlitz3.ab2@16286>   CMP.w #-$7F2F,D0
0002C14C <AmiBlitz3.ab2@16287>    BEQ.w doused
0002C14E <AmiBlitz3.ab2@16288>   MOVE.w D2,-(A7)
0002C150 <AmiBlitz3.ab2@16289>   MOVE.w D0,D1
0002C154 <AmiBlitz3.ab2@16290>   BCLR #$F,D1
0002C158 <AmiBlitz3.ab2@16292>    BSR.w searchinstr
0002C15A <AmiBlitz3.ab2@16293>   MOVE.w (A3),D1
0002C15E <AmiBlitz3.ab2@16294>   BTST #$1,D1
0002C162 <AmiBlitz3.ab2@16295>    BEQ.w noreturn_                                         ;syntax error noreturn
0002C166 <AmiBlitz3.ab2@16296>   BTST #$2,D1
0002C16A <AmiBlitz3.ab2@16297>    BNE.w JL_0_AC1A
0002C16C <AmiBlitz3.ab2@16298>   LSR.w #8,D1
0002C172 <AmiBlitz3.ab2@16299>   BTST #$3,$1(A3)
0002C176 <AmiBlitz3.ab2@16300>    BEQ.w JL_0_AB4C
0002C17C <AmiBlitz3.ab2@16301>    JSR AJL_0_498A
0002C182 <AmiBlitz3.ab2@16304>    CLR.l rightsidetype
0002C184 <AmiBlitz3.ab2@16305>    MOVE.w D1,-(A7)                                         ;is library instruction
0002C188 <AmiBlitz3.ab2@16306>   CMP.w #$7,D1
0002C18C <AmiBlitz3.ab2@16307>    BNE.w JL_0_AB5E
0002C18E <AmiBlitz3.ab2@16308>   MOVE.l A2,-(A7)
0002C192 <AmiBlitz3.ab2@16309>    BSR.w makesbase
0002C194 <AmiBlitz3.ab2@16310>   MOVEA.l (A7)+,A2
0002C198 <AmiBlitz3.ab2@16313>     BSR.w JL_0_AFA2
0002C19A <AmiBlitz3.ab2@16314>   MOVE.w D3,-(A7)
0002C19E <AmiBlitz3.ab2@16315>    BSR.w get1bytemain
0002C1A0 <AmiBlitz3.ab2@16316>   MOVEQ.l #$00,D1
0002C1A4 <AmiBlitz3.ab2@16317>   CMP.w #$28,D0
0002C1A8 <AmiBlitz3.ab2@16318>    BNE.w JL_0_AB80
0002C1AE <AmiBlitz3.ab2@16319>    JSR JL_0_66F6
0002C1B0 <AmiBlitz3.ab2@16320>   TST.w D1
0002C1B4 <AmiBlitz3.ab2@16321>    BEQ.w syntaxerr
0002C1B8 <AmiBlitz3.ab2@16322> BRA.w JL_0_AB84
0002C1C2 <AmiBlitz3.ab2@16327>   MOVE.w oldqflag,instringon
0002C1C8 <AmiBlitz3.ab2@16328>   MOVEA.l lastsourcepos,A5
0002C1CE <AmiBlitz3.ab2@16331>    MOVE.w regnum,-(A7)
0002C1D8 <AmiBlitz3.ab2@16332>    MOVE.w regnum,regnumstore
0002C1DE <AmiBlitz3.ab2@16333>    TST.b fpu
0002C1E2 <AmiBlitz3.ab2@16334>             BEQ 'nofloat
0002C1E8 <AmiBlitz3.ab2@16335>             CMP.w #$ffff,28(a3)
0002C1EC <AmiBlitz3.ab2@16336>             BNE 'nofloat
0002C1F2 <AmiBlitz3.ab2@16337>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002C1F6 <AmiBlitz3.ab2@16338>             BEQ 'nofloat
0002C1FC <AmiBlitz3.ab2@16339>             CMP.w #$3c02,34(a3)                            ;int skip
0002C200 <AmiBlitz3.ab2@16340>             BEQ 'quick
0002C204 <AmiBlitz3.ab2@16341>             CMP.b #5,(a3)
0002C208 <AmiBlitz3.ab2@16342>             BNE 'nofloat
0002C20E <AmiBlitz3.ab2@16345>             CLR.l load_var_addr
0002C212 <AmiBlitz3.ab2@16346> BRA 'isfpu
0002C218 <AmiBlitz3.ab2@16349>    CLR.w regnum
0002C21A <AmiBlitz3.ab2@16352>    MOVE.w D1,-(A7)
0002C220 <AmiBlitz3.ab2@16353>   BTST #$3,$1(A3)
0002C224 <AmiBlitz3.ab2@16354>    BEQ.w JL_0_ABB0
0002C228 <AmiBlitz3.ab2@16373>   MOVE.w $6(A7),D1
0002C22E <AmiBlitz3.ab2@16374>   MOVE.w d1,peeksize
0002C232 <AmiBlitz3.ab2@16384>   ORI.w #$7000,D1
0002C236 <AmiBlitz3.ab2@16385>   BSR.w writeword                                          ;write peekmode
0002C23C <AmiBlitz3.ab2@16388>   ADDQ.w #1,regnum
0002C23E <AmiBlitz3.ab2@16389>   MOVE.w (A7),D1
0002C246 <AmiBlitz3.ab2@16392>   MOVE.w 2(a7),tempregnum
0002C24C <AmiBlitz3.ab2@16393>   JSR JL_0_4878
0002C24E <AmiBlitz3.ab2@16394>   TST.w (A7)+
0002C252 <AmiBlitz3.ab2@16395>   BEQ.w JL_0_ABC6
0002C256 <AmiBlitz3.ab2@16396>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002C25A <AmiBlitz3.ab2@16397>   BNE.w errorbracketmiss                                    ; was syntax error
0002C260 <AmiBlitz3.ab2@16398>   CLR.l lasttoken
0002C264 <AmiBlitz3.ab2@16399>   BSR.w get1bytemain
0002C266 <AmiBlitz3.ab2@16402>    MOVE.w (A7)+,D1
0002C26C <AmiBlitz3.ab2@16403>   MOVE.w D1,regnum
0002C270 <AmiBlitz3.ab2@16404>    BEQ.w JL_0_ABDE
0002C276 <AmiBlitz3.ab2@16405>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002C27A <AmiBlitz3.ab2@16406>    BNE 'noval
0002C280 <AmiBlitz3.ab2@16407>    TST.b fpu
0002C284 <AmiBlitz3.ab2@16408>    BEQ 'noval
0002C28A <AmiBlitz3.ab2@16409>    CLR.l load_var_addr
0002C28C <AmiBlitz3.ab2@16410>    MOVEQ #0,d1
0002C292 <AmiBlitz3.ab2@16411>    MOVE.w regnum,d1
0002C294 <AmiBlitz3.ab2@16412>    LSL.l #7,d1
0002C29A <AmiBlitz3.ab2@16413>    OR.l #$f2000000,d1
0002C29E <AmiBlitz3.ab2@16414>    BSR writelong
0002C2A2 <AmiBlitz3.ab2@16415> BRA JL_0_ABDE
0002C2A8 <AmiBlitz3.ab2@16419>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002C2AC <AmiBlitz3.ab2@16420>    BEQ 'quick
0002C2B0 <AmiBlitz3.ab2@16421>    CMP.b #5,d2
0002C2B4 <AmiBlitz3.ab2@16422>    BNE 'nofpu
0002C2BA <AmiBlitz3.ab2@16423>    TST.b fpu
0002C2BE <AmiBlitz3.ab2@16424>    BEQ 'nofpu
0002C2C4 <AmiBlitz3.ab2@16429>    CLR.l load_var_addr
0002C2C8 <AmiBlitz3.ab2@16430> BRA JL_0_ABDE
0002C2CA <AmiBlitz3.ab2@16433>   LSL.w #8,D1
0002C2CC <AmiBlitz3.ab2@16434>   LSL.w #1,D1
0002C2D0 <AmiBlitz3.ab2@16435>   ORI.w #$2000,D1
0002C2D4 <AmiBlitz3.ab2@16436>   BSR.w writeword                                          ;write move.l d0,dx
0002C2DA <AmiBlitz3.ab2@16437>   TST.b fpu
0002C2DE <AmiBlitz3.ab2@16438>   BEQ JL_0_ABDE
0002C2E0 <AmiBlitz3.ab2@16439>   MOVEQ #0,d1
0002C2E6 <AmiBlitz3.ab2@16440>   MOVE.w regnum,d1
0002C2E8 <AmiBlitz3.ab2@16441>   LSL.l #7,d1
0002C2EE <AmiBlitz3.ab2@16442>   OR.l #$f2000000,d1
0002C2F0 <AmiBlitz3.ab2@16446>        MOVE.w (A7)+,D3
0002C2F4 <AmiBlitz3.ab2@16447>        BEQ.w JL_0_ABFC
0002C2FA <AmiBlitz3.ab2@16448>        TST.b fpu
0002C2FE <AmiBlitz3.ab2@16449>        BEQ 'nofpu
0002C300 <AmiBlitz3.ab2@16450>       MOVE.l d0,-(a7)
0002C302 <AmiBlitz3.ab2@16451>        MOVE.l a0,-(a7)
0002C308 <AmiBlitz3.ab2@16452>        MOVE.l stacktrack,d1
0002C30E <AmiBlitz3.ab2@16453>        LEA fpustackbase,a0
0002C316 <AmiBlitz3.ab2@16454>        MOVE.w 0(a0,d1),regmask
0002C318 <AmiBlitz3.ab2@16455>        MOVE.l (a7)+,a0
0002C31C <AmiBlitz3.ab2@16456>       MOVE.w #8,d0
0002C320 <AmiBlitz3.ab2@16459>       BEQ 'ready
0002C326 <AmiBlitz3.ab2@16460>       BTST d0,regmask
0002C32A <AmiBlitz3.ab2@16461>       BEQ 'noa7
0002C32C <AmiBlitz3.ab2@16462>       MOVEQ #0,d1
0002C32E <AmiBlitz3.ab2@16463>       MOVE.w d0,d1
0002C330 <AmiBlitz3.ab2@16464>       SUBQ.w #1,d1
0002C332 <AmiBlitz3.ab2@16465>       ASL #7,d1
0002C338 <AmiBlitz3.ab2@16467>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002C33C <AmiBlitz3.ab2@16468>       BSR writelong
0002C342 <AmiBlitz3.ab2@16469>       SUBQ.l #2,stacktrack
0002C344 <AmiBlitz3.ab2@16472>       SUBQ.w #1,d0
0002C348 <AmiBlitz3.ab2@16473>       BNE 'loop
0002C34A <AmiBlitz3.ab2@16476>       MOVE.l (a7)+,d0
0002C350 <AmiBlitz3.ab2@16477>       SUBQ.l #2,stacktrack                                 ;int track
0002C354 <AmiBlitz3.ab2@16480>    MOVE.w #$4CDF,D1
0002C358 <AmiBlitz3.ab2@16481>    BSR.w writeword                                         ;write movem.l (a7)+,
0002C35A <AmiBlitz3.ab2@16482>   MOVEQ.l #$00,D1
0002C35C <AmiBlitz3.ab2@16483>   MOVEQ.l #$0F,D4
0002C35E <AmiBlitz3.ab2@16486>     LSL.w #1,D3
0002C360 <AmiBlitz3.ab2@16487>     ROXR.w #1,D1
0002C364 <AmiBlitz3.ab2@16488>   DBF D4,JL_0_ABF0
0002C368 <AmiBlitz3.ab2@16490>    BSR.w writeword
0002C36E <AmiBlitz3.ab2@16491>    TST.b fast
0002C372 <AmiBlitz3.ab2@16492>    BEQ JL_0_ABFC
0002C378 <AmiBlitz3.ab2@16493>    TST.w regnum
0002C37C <AmiBlitz3.ab2@16494>    BEQ JL_0_ABFC
0002C382 <AmiBlitz3.ab2@16495>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002C386 <AmiBlitz3.ab2@16496>    BNE 'l1
0002C38C <AmiBlitz3.ab2@16497>    MOVE.w regnum,d1
0002C38E <AmiBlitz3.ab2@16498>    ASL.l #8,d1
0002C390 <AmiBlitz3.ab2@16499>    ASL.l #1,d1
0002C394 <AmiBlitz3.ab2@16500>    OR.w #$70ff,d1
0002C39E <AmiBlitz3.ab2@16501>    SUB.l #12,destpointer
0002C3A2 <AmiBlitz3.ab2@16502>    BSR writeword
0002C3A8 <AmiBlitz3.ab2@16505>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002C3AC <AmiBlitz3.ab2@16506>    BNE 'l2
0002C3B2 <AmiBlitz3.ab2@16507>     MOVE.w regnum,d1
0002C3B4 <AmiBlitz3.ab2@16508>     ASL.l #8,d1
0002C3B6 <AmiBlitz3.ab2@16509>     ASL.l #1,d1
0002C3BA <AmiBlitz3.ab2@16510>     OR.w #$7000,d1
0002C3C4 <AmiBlitz3.ab2@16511>     SUB.l #12,destpointer
0002C3C8 <AmiBlitz3.ab2@16512>     BSR writeword
0002C3CA <AmiBlitz3.ab2@16516>    MOVE.w (A7)+,D2
0002C3CE <AmiBlitz3.ab2@16517>   CMP.w #$7,D2                                             ;destination var type
0002C3D2 <AmiBlitz3.ab2@16518>    BNE.w JL_0_AC16
0002C3D8 <AmiBlitz3.ab2@16519>   MOVE.w putstlen,D1
0002C3DE <AmiBlitz3.ab2@16520>   OR.w regnum,D1
0002C3E2 <AmiBlitz3.ab2@16521>    BSR.w writeword
0002C3E6 <AmiBlitz3.ab2@16524> BRA.w JL_0_AF66
0002C3EA <AmiBlitz3.ab2@16529>   MOVE.w $6(A3),D1
0002C3EE <AmiBlitz3.ab2@16530>    BSR.w uselib
0002C3F2 <AmiBlitz3.ab2@16531>    BSR.w JL_0_AD40
0002C3F4 <AmiBlitz3.ab2@16532>   MOVE.l D4,D1
0002C3F6 <AmiBlitz3.ab2@16533>   MOVE.l D5,-(A7)
0002C3FA <AmiBlitz3.ab2@16534>    BSR.w JL_0_AD38
0002C3FE <AmiBlitz3.ab2@16535>   MOVE.w $A(A1),-(A7)
0002C400 <AmiBlitz3.ab2@16536>   ADDQ.w #8,A3
0002C402 <AmiBlitz3.ab2@16537>   MOVE.w (A3)+,-(A7)
0002C404 <AmiBlitz3.ab2@16538>   MOVE.l A3,-(A7)
0002C408 <AmiBlitz3.ab2@16539>    BSR.w get1bytemain
0002C40A <AmiBlitz3.ab2@16540>   MOVE.w D0,-(A7)
0002C40C <AmiBlitz3.ab2@16541>   MOVEQ.l #$00,D3
0002C412 <AmiBlitz3.ab2@16542>   JSR checka4a5
0002C414 <AmiBlitz3.ab2@16544>   MOVE.b (A3)+,D1
0002C418 <AmiBlitz3.ab2@16545>    BMI.w JL_0_AC6A
0002C41A <AmiBlitz3.ab2@16546>   MOVEQ.l #$03,D2
0002C41C <AmiBlitz3.ab2@16547>   ADDQ.w #1,D3
0002C420 <AmiBlitz3.ab2@16548>   MOVEM.l D3/A3,-(A7)
0002C426 <AmiBlitz3.ab2@16549>   MOVE.b funcparloop,-(a7)
0002C42C <AmiBlitz3.ab2@16550>   CLR.b funcparloop
0002C432 <AmiBlitz3.ab2@16551>   MOVE.b blitzparloop,-(a7)
0002C43A <AmiBlitz3.ab2@16552>   MOVE.b #1,blitzparloop
0002C440 <AmiBlitz3.ab2@16553>   MOVE.l lasttoken,-(a7)
0002C446 <AmiBlitz3.ab2@16554>   MOVE.l leftsidetype,-(a7)
0002C44C <AmiBlitz3.ab2@16555>   MOVE.l rightsidetype,-(a7)
0002C450 <AmiBlitz3.ab2@16556>   BSR.w peval
0002C456 <AmiBlitz3.ab2@16557>   MOVE.l (a7)+,rightsidetype
0002C45C <AmiBlitz3.ab2@16558>   MOVE.l (a7)+,leftsidetype
0002C462 <AmiBlitz3.ab2@16559>   MOVE.l (a7)+,lasttoken
0002C468 <AmiBlitz3.ab2@16560>   MOVE.b (a7)+,blitzparloop
0002C46E <AmiBlitz3.ab2@16561>   MOVE.b (a7)+,funcparloop
0002C474 <AmiBlitz3.ab2@16562>   SUBQ.w #4,a2offset
0002C478 <AmiBlitz3.ab2@16563>   MOVEM.l (A7)+,D3/A3
0002C47C <AmiBlitz3.ab2@16564>   CMP.w #$2C,D0
0002C480 <AmiBlitz3.ab2@16565>    BEQ.w JL_0_AC40
0002C482 <AmiBlitz3.ab2@16566>   TST.b (A3)
0002C486 <AmiBlitz3.ab2@16567>    BPL.w syntaxerr
0002C488 <AmiBlitz3.ab2@16570>   MOVE.w (A7)+,D1
0002C48C <AmiBlitz3.ab2@16571>    BSR.w JL_0_AD04
0002C48E <AmiBlitz3.ab2@16572>   MOVEA.l (A7)+,A3
0002C490 <AmiBlitz3.ab2@16573>   SUBQ.w #1,D3
0002C494 <AmiBlitz3.ab2@16574>    BMI.w JL_0_ACBE
0002C496 <AmiBlitz3.ab2@16577>   TST.b (A3)+
0002C49A <AmiBlitz3.ab2@16578>    BPL.w JL_0_AC78
0002C49C <AmiBlitz3.ab2@16579>   SUBQ.w #1,A3
0002C49E <AmiBlitz3.ab2@16582>     MOVEQ.l #$00,D1
0002C4A0 <AmiBlitz3.ab2@16583>     MOVE.b -(A3),D1
0002C4A4 <AmiBlitz3.ab2@16584>     BTST #$4,D1
0002C4A8 <AmiBlitz3.ab2@16585>      BNE.w JL_0_ACAA
0002C4AE <AmiBlitz3.ab2@16586>     CMP.w regnum,D1
0002C4B2 <AmiBlitz3.ab2@16587>      BCC.w JL_0_AC9E
0002C4B4 <AmiBlitz3.ab2@16588>     BSET D1,D5
0002C4B6 <AmiBlitz3.ab2@16589>     MOVEQ.l #$0F,D0
0002C4B8 <AmiBlitz3.ab2@16590>     SUB.w D1,D0
0002C4BA <AmiBlitz3.ab2@16591>     BSET D0,D4
0002C4BC <AmiBlitz3.ab2@16594>     LSL.w #8,D1
0002C4BE <AmiBlitz3.ab2@16595>     LSL.w #1,D1
0002C4C2 <AmiBlitz3.ab2@16596>     ORI.w #$201F,D1
0002C4C6 <AmiBlitz3.ab2@16597>   BRA.w JL_0_ACB6
0002C4CA <AmiBlitz3.ab2@16600>     ANDI.w #$7,D1
0002C4CC <AmiBlitz3.ab2@16601>     LSL.w #8,D1
0002C4CE <AmiBlitz3.ab2@16602>     LSL.w #1,D1
0002C4D2 <AmiBlitz3.ab2@16603>     ORI.w #$205F,D1
0002C4D6 <AmiBlitz3.ab2@16606>      BSR.w writeword
0002C4DA <AmiBlitz3.ab2@16607>   DBF D3,JL_0_AC80
0002C4E0 <AmiBlitz3.ab2@16610>   MOVE.w (A7)+,libjsr+2
0002C4E6 <AmiBlitz3.ab2@16611>   MOVE.w (A7)+,libbase+2
0002C4EC <AmiBlitz3.ab2@16612>   MOVE.l libbase,D1
0002C4F0 <AmiBlitz3.ab2@16613>    BSR.w writelong
0002C4F6 <AmiBlitz3.ab2@16614>   MOVE.l libjsr,D1
0002C4FA <AmiBlitz3.ab2@16615>    BSR.w writelong
0002C500 <AmiBlitz3.ab2@16616>   MOVE.w regnum,D1
0002C504 <AmiBlitz3.ab2@16617>    BEQ.w JL_0_ACF4
0002C506 <AmiBlitz3.ab2@16618>   LSL.w #8,D1
0002C508 <AmiBlitz3.ab2@16619>   LSL.w #1,D1
0002C50C <AmiBlitz3.ab2@16620>   ORI.w #$2000,D1
0002C510 <AmiBlitz3.ab2@16621>    BSR.w writeword
0002C512 <AmiBlitz3.ab2@16624>   MOVE.l (A7)+,D1
0002C516 <AmiBlitz3.ab2@16625>    BSR.w JL_0_AD38
0002C51C <AmiBlitz3.ab2@16626>    JSR restorea4a5
0002C51E <AmiBlitz3.ab2@16627>   MOVEQ.l #$03,D2
0002C522 <AmiBlitz3.ab2@16628>    BSR.w reget
0002C526 <AmiBlitz3.ab2@16629> BRA.w JL_0_AF66
0002C528 <AmiBlitz3.ab2@16632>   TST.w D3
0002C52C <AmiBlitz3.ab2@16633>    BEQ.w JL_0_AD1E
0002C530 <AmiBlitz3.ab2@16634>   CMP.w #$28,D1
0002C534 <AmiBlitz3.ab2@16635>    BNE.w syntaxerr
0002C538 <AmiBlitz3.ab2@16636>   CMP.w #$29,D0
0002C53C <AmiBlitz3.ab2@16637>    BNE.w syntaxerr
0002C540 <AmiBlitz3.ab2@16638> BRA.w get1bytemain
0002C544 <AmiBlitz3.ab2@16641>   CMP.w #$28,D1
0002C548 <AmiBlitz3.ab2@16642>    BNE.w JL_0_AD36
0002C54C <AmiBlitz3.ab2@16643>    BSR.w get1bytemain
0002C550 <AmiBlitz3.ab2@16644>   CMP.w #$29,D0
0002C554 <AmiBlitz3.ab2@16645>    BNE.w syntaxerr
0002C558 <AmiBlitz3.ab2@16646> BRA.w get1bytemain
0002C55A <AmiBlitz3.ab2@16649> RTS
0002C55C <AmiBlitz3.ab2@16652>   TST.w D1
0002C560 <AmiBlitz3.ab2@16653>    BNE.w writelong
0002C562 <AmiBlitz3.ab2@16654> RTS
0002C566 <AmiBlitz3.ab2@16658>   MOVE.w #$48E7,D4
0002C568 <AmiBlitz3.ab2@16659>   SWAP D4
0002C56A <AmiBlitz3.ab2@16660>   CLR.w D4
0002C56E <AmiBlitz3.ab2@16661>   MOVE.w #$4CDF,D5
0002C570 <AmiBlitz3.ab2@16662>   SWAP D5
0002C572 <AmiBlitz3.ab2@16663>   CLR.w D5
0002C578 <AmiBlitz3.ab2@16664>   MOVE.w regnum,D1
0002C57C <AmiBlitz3.ab2@16665>    BEQ.w JL_0_AD74
0002C580 <AmiBlitz3.ab2@16666>   BSET #$F,D4
0002C584 <AmiBlitz3.ab2@16667>   BSET #$0,D5
0002C588 <AmiBlitz3.ab2@16668>   CMP.w #$2,D1
0002C58C <AmiBlitz3.ab2@16669>    BCS.w JL_0_AD72
0002C590 <AmiBlitz3.ab2@16672>   BSET #$E,D4
0002C594 <AmiBlitz3.ab2@16673>   BSET #$1,D5
0002C596 <AmiBlitz3.ab2@16676> RTS
0002C59C <AmiBlitz3.ab2@16679>   TST.w fuckpos
0002C5A0 <AmiBlitz3.ab2@16680>   BNE.w JL_0_AD6A
0002C5A2 <AmiBlitz3.ab2@16681> RTS
0002C5A4 <AmiBlitz3.ab2@16684> fuckpos:  Ds.w 1
0002C5AA <AmiBlitz3.ab2@16688>   MOVE.w sbasegot,D1
0002C5AE <AmiBlitz3.ab2@16689>    BEQ.w makesbase__skip
0002C5B2 <AmiBlitz3.ab2@16693>   MOVE.w sbgot(PC),D1
0002C5B6 <AmiBlitz3.ab2@16694>    BNE.w makesbase__skip2
0002C5BE <AmiBlitz3.ab2@16698>   MOVE.w #$0002,sbgot
0002C5C4 <AmiBlitz3.ab2@16699>   MOVE.w movea3a7,D1
0002C5C8 <AmiBlitz3.ab2@16700> BRA.w writeword
0002C5CA <AmiBlitz3.ab2@16703> RTS
0002C5D2 <AmiBlitz3.ab2@16708>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002C5D8 <AmiBlitz3.ab2@16711>   MOVE.l #$C601,D1
0002C5E0 <AmiBlitz3.ab2@16712>   MOVE.w #-1,sbasegot
0002C5E6 <AmiBlitz3.ab2@16713>   MOVE.l d1,lastinstruction
0002C5EA <AmiBlitz3.ab2@16714>   BSR.w Atokejsr
0002C5EC <AmiBlitz3.ab2@16715> RTS
0002C5F6 <AmiBlitz3.ab2@16720>   MOVE.l data1,litdata1
0002C5FC <AmiBlitz3.ab2@16721>   TST.b fast
0002C600 <AmiBlitz3.ab2@16722>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002C604 <AmiBlitz3.ab2@16726> BRA 'l50                                                   ;to deactivate
0002C60A <AmiBlitz3.ab2@16732>   TST.b optistring
0002C60E <AmiBlitz3.ab2@16733>   BNE.s 'l21
0002C614 <AmiBlitz3.ab2@16734>   CLR.b string1
0002C61C <AmiBlitz3.ab2@16735>   MOVE.b #1,optistring
0002C622 <AmiBlitz3.ab2@16736>   TST.b nostringopt
0002C626 <AmiBlitz3.ab2@16737>   BNE 'l21
0002C628 <AmiBlitz3.ab2@16738>   MOVE.l a5,a4
0002C62A <AmiBlitz3.ab2@16739>   SUBQ.l #1,a4
0002C62C <AmiBlitz3.ab2@16742>     TST.b (a4)
0002C630 <AmiBlitz3.ab2@16743>     BMI 'l19a
0002C634 <AmiBlitz3.ab2@16744>     BEQ.s 'l20
0002C638 <AmiBlitz3.ab2@16745>     CMP.b #$22,(a4)
0002C63C <AmiBlitz3.ab2@16746>     BEQ.s 'l19
0002C642 <AmiBlitz3.ab2@16749>     TST.w string1
0002C646 <AmiBlitz3.ab2@16750>     BNE 'l11
0002C64A <AmiBlitz3.ab2@16751>     CMP.b #":",(a4)
0002C64E <AmiBlitz3.ab2@16752>     BEQ.s 'l20
0002C652 <AmiBlitz3.ab2@16753>     CMP.b #";",(a4)
0002C656 <AmiBlitz3.ab2@16754>     BEQ.s 'l20
0002C65A <AmiBlitz3.ab2@16755>     CMP.b #"+",(a4)
0002C65E <AmiBlitz3.ab2@16756>     BEQ.s 'l21
0002C662 <AmiBlitz3.ab2@16757>     CMP.b #",",(a4)
0002C666 <AmiBlitz3.ab2@16758>     BEQ.s 'l20                                             ;was l21
0002C66A <AmiBlitz3.ab2@16759>     CMP.b #")",(a4)
0002C66E <AmiBlitz3.ab2@16760>     BEQ.s 'l20                                             ;was l21
0002C670 <AmiBlitz3.ab2@16763>     ADDQ.l #1,a4
0002C674 <AmiBlitz3.ab2@16764> BRA.s 'l10
0002C67C <AmiBlitz3.ab2@16767>   BCHG #0,string1
0002C680 <AmiBlitz3.ab2@16768> BRA 'l18
0002C682 <AmiBlitz3.ab2@16771>   ADDQ.l #1,a4
0002C684 <AmiBlitz3.ab2@16772>   TST.b (a4)
0002C688 <AmiBlitz3.ab2@16773>   BEQ 'l21
0002C68C <AmiBlitz3.ab2@16774> BRA 'l11
0002C68E <AmiBlitz3.ab2@16777>   MOVE.l a5,a4
0002C690 <AmiBlitz3.ab2@16778>   SUBQ.l #1,a4
0002C694 <AmiBlitz3.ab2@16781>   CMP.b #$20,-(a4)
0002C698 <AmiBlitz3.ab2@16782>   BEQ 'll1
0002C69C <AmiBlitz3.ab2@16783>   CMP.b #"+",(a4)
0002C6A0 <AmiBlitz3.ab2@16784>   BEQ 'l21
0002C6A8 <AmiBlitz3.ab2@16799>   MOVE.b #2,optistring
0002C6B0 <AmiBlitz3.ab2@16802>   CMP.b #2,optistring
0002C6B4 <AmiBlitz3.ab2@16803>   BEQ.s 'l100
0002C6B8 <AmiBlitz3.ab2@16806>   BSR.w makesbase
0002C6BC <AmiBlitz3.ab2@16807>   BSR.w pokedata1                                          ;writestringsizespace
0002C6C0 <AmiBlitz3.ab2@16808>   BSR.w pokedata1
0002C6C2 <AmiBlitz3.ab2@16811>   MOVEQ.l #$00,D2
0002C6C8 <AmiBlitz3.ab2@16814>     MOVE.l a5,lastsourcepos
0002C6CA <AmiBlitz3.ab2@16815>     MOVEQ #0,d0
0002C6CC <AmiBlitz3.ab2@16816>     MOVE.b (a5)+,d0
0002C6CE <AmiBlitz3.ab2@16817>     TST.w D0
0002C6D2 <AmiBlitz3.ab2@16818>      BEQ.w notqerr
0002C6D6 <AmiBlitz3.ab2@16819>     CMP.w #$22,D0                                          ; --- " ---
0002C6DA <AmiBlitz3.ab2@16820>      BEQ.w JL_0_ADF6
0002C6DE <AmiBlitz3.ab2@16821>     CMP.b #"\",d0
0002C6E2 <AmiBlitz3.ab2@16822>      BNE 'l1
0002C6E6 <AmiBlitz3.ab2@16823>     CMP.b #"\",(a5)
0002C6EA <AmiBlitz3.ab2@16824>      BNE 'l1
0002C6F0 <AmiBlitz3.ab2@16825>     TST.b newsyntax
0002C6F4 <AmiBlitz3.ab2@16826>      BEQ 'l1
0002C6FA <AmiBlitz3.ab2@16827>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002C6FE <AmiBlitz3.ab2@16828>     BNE 'l2
0002C700 <AmiBlitz3.ab2@16829>     ADDQ #2,a5
0002C702 <AmiBlitz3.ab2@16832>     ADDQ.w #1,D2
0002C704 <AmiBlitz3.ab2@16833>     MOVE.w D0,D1
0002C708 <AmiBlitz3.ab2@16834>     BSR.w pokedata1b                                        ;writestring
0002C70C <AmiBlitz3.ab2@16835> BRA.w writestring
0002C712 <AmiBlitz3.ab2@16838>     JSR check_newconstants
0002C716 <AmiBlitz3.ab2@16839> BRA writestring
0002C71C <AmiBlitz3.ab2@16842>   NOT instringon
0002C722 <AmiBlitz3.ab2@16843>   MOVE.w dontwrite,D1
0002C726 <AmiBlitz3.ab2@16844>   BNE.w JL_0_AE0A
0002C72E <AmiBlitz3.ab2@16845>   CMP.b #2,optistring
0002C732 <AmiBlitz3.ab2@16846>   BEQ 'l10
0002C738 <AmiBlitz3.ab2@16847>     MOVEA.l litdata1,A0
0002C73A <AmiBlitz3.ab2@16848>     CLR.w (A0)+                                            ;writesize
0002C73C <AmiBlitz3.ab2@16849>     MOVE.w D2,(A0)
0002C740 <AmiBlitz3.ab2@16853>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002C746 <AmiBlitz3.ab2@16854>   ADDQ.l #1,data1
0002C74E <AmiBlitz3.ab2@16855>   BCLR #$0,data1+3
0002C750 <AmiBlitz3.ab2@16856>   MOVEQ.l #$07,D2
0002C754 <AmiBlitz3.ab2@16857> BRA.w get1bytemain
0002C758 <AmiBlitz3.ab2@16861>   BSR.w makename2
0002C75C <AmiBlitz3.ab2@16862>   BSR.w findlabel2
0002C760 <AmiBlitz3.ab2@16863>   BEQ.w JL_0_AE4A
0002C764 <AmiBlitz3.ab2@16864>   BSR.w addlabelhash
0002C768 <AmiBlitz3.ab2@16865>   CLR.l $4(A2)
0002C76C <AmiBlitz3.ab2@16866>   CLR.l $8(A2)
0002C774 <AmiBlitz3.ab2@16868>   MOVE.w linenumat+2,$10(A2)
0002C77A <AmiBlitz3.ab2@16869>   MOVE.w linenumat,d0
0002C77C <AmiBlitz3.ab2@16870>   MOVEQ #0,d1
0002C780 <AmiBlitz3.ab2@16871>   MOVE.b -1(a2,d7),d1
0002C784 <AmiBlitz3.ab2@16872>   MOVE.w d0,0(a2,d1)
0002C788 <AmiBlitz3.ab2@16873> BRA.w JL_0_AE52
0002C78C <AmiBlitz3.ab2@16876>   TST.l $8(A2)
0002C790 <AmiBlitz3.ab2@16877>   BNE.w JL_0_AE88
0002C796 <AmiBlitz3.ab2@16880>   MOVEA.l _execbase,A6
0002C798 <AmiBlitz3.ab2@16881>   MOVEQ.l #$0C+2,D0
0002C79A <AmiBlitz3.ab2@16882>   MOVEQ.l #$01,D1
0002C7A0 <AmiBlitz3.ab2@16883>   MOVE.l mempool,a0
0002C7A4 <AmiBlitz3.ab2@16884>   JSR _AllocPooled(a6)
0002C7A6 <AmiBlitz3.ab2@16886>   MOVEA.l D0,A0
0002C7AA <AmiBlitz3.ab2@16887>   MOVE.l $4(A2),(A0)
0002C7AE <AmiBlitz3.ab2@16888>   MOVE.l A0,$4(A2)
0002C7B6 <AmiBlitz3.ab2@16889>   MOVE.l destpointer,$4(A0)
0002C7BA <AmiBlitz3.ab2@16890>   ADDQ.l #2,$4(A0)
0002C7C2 <AmiBlitz3.ab2@16891>   MOVE.w procnum,$8(A0)
0002C7CA <AmiBlitz3.ab2@16892>   MOVE.w linenumat+2,$A(A0)
0002C7D2 <AmiBlitz3.ab2@16893>   MOVE.w linenumat,$c(a0)
0002C7D4 <AmiBlitz3.ab2@16894> RTS
0002C7D8 <AmiBlitz3.ab2@16897>   MOVE.l $4(A2),D1
0002C7DC <AmiBlitz3.ab2@16898>   BTST #$0,D1
0002C7E0 <AmiBlitz3.ab2@16899>    BNE.w illlaberr
0002C7E6 <AmiBlitz3.ab2@16900>   MOVE.w procnum,D1
0002C7EA <AmiBlitz3.ab2@16901>   CMP.w $10(A2),D1
0002C7EE <AmiBlitz3.ab2@16902>    BNE.w referr
0002C7F0 <AmiBlitz3.ab2@16903> RTS
0002C7F2 <AmiBlitz3.ab2@16907>   MOVE.w D0,-(A7)
0002C7FA <AmiBlitz3.ab2@16908>   CMP.b #2,optistring
0002C7FE <AmiBlitz3.ab2@16909>   BEQ 'l10
0002C804 <AmiBlitz3.ab2@16912>   MOVE.w numtoa0,D1
0002C808 <AmiBlitz3.ab2@16913>    BSR.w writeword
0002C80C <AmiBlitz3.ab2@16914>    BSR.w addoff
0002C812 <AmiBlitz3.ab2@16915>   MOVE.l litdata1,D1
0002C816 <AmiBlitz3.ab2@16916>    BSR.w writelong
0002C81C <AmiBlitz3.ab2@16917>   MOVE.w pushlen,D1
0002C820 <AmiBlitz3.ab2@16918>    BSR.w writeword
0002C824 <AmiBlitz3.ab2@16919>   MOVE.w #$C600,D1
0002C828 <AmiBlitz3.ab2@16920>    BSR.w Atokejsr
0002C82A <AmiBlitz3.ab2@16921>   MOVE.w (A7)+,D0
0002C82C <AmiBlitz3.ab2@16922> RTS
0002C82E <AmiBlitz3.ab2@16925>   MOVEQ #0,d1
0002C832 <AmiBlitz3.ab2@16926>   BSR.w pokedata1b
0002C838 <AmiBlitz3.ab2@16927>   MOVE.l destpointer,a4
0002C83C <AmiBlitz3.ab2@16928>   MOVE.w #$203c,d1
0002C842 <AmiBlitz3.ab2@16929>   TST.w mode
0002C846 <AmiBlitz3.ab2@16930>   BNE 'lm10
0002C84C <AmiBlitz3.ab2@16931>    ADDQ.w #4,a2offset
0002C850 <AmiBlitz3.ab2@16932>   MOVE.w #$2f3c,d1
0002C856 <AmiBlitz3.ab2@16935>   TST.w mode
0002C85A <AmiBlitz3.ab2@16936>   BEQ 'lm3
0002C860 <AmiBlitz3.ab2@16937>   MOVE.w regnum,D0
0002C862 <AmiBlitz3.ab2@16938>   LSL.w #8,D0
0002C864 <AmiBlitz3.ab2@16939>   LSL.w #1,D0
0002C866 <AmiBlitz3.ab2@16940>   OR.w d0,d1
0002C86A <AmiBlitz3.ab2@16941>   BSR writeword
0002C86E <AmiBlitz3.ab2@16942>   BSR.w addoff
0002C874 <AmiBlitz3.ab2@16943>   MOVE.l litdata1,D1
0002C878 <AmiBlitz3.ab2@16944>   BSR.w writelong
0002C880 <AmiBlitz3.ab2@16945>   CMP.w #3,mode
0002C884 <AmiBlitz3.ab2@16946>   BEQ 'l30
0002C88A <AmiBlitz3.ab2@16947>    ADDQ.w #4,a2offset
0002C88E <AmiBlitz3.ab2@16948>   MOVE.w #$4878,D1
0002C892 <AmiBlitz3.ab2@16949>   BSR.w writeword
0002C894 <AmiBlitz3.ab2@16950>   MOVE.l d2,d1
0002C898 <AmiBlitz3.ab2@16951>   BSR writeword
0002C89A <AmiBlitz3.ab2@16954>   MOVE.w (A7)+,D0
0002C89C <AmiBlitz3.ab2@16955> RTS
0002C8A2 <AmiBlitz3.ab2@16958>   MOVE.l #$3f3c0007,d1
0002C8A6 <AmiBlitz3.ab2@16959>   BSR writelong
0002C8AC <AmiBlitz3.ab2@16960>   MOVE.w regnum,D1
0002C8AE <AmiBlitz3.ab2@16961>   LSL.w #8,D1
0002C8B0 <AmiBlitz3.ab2@16962>   LSL.w #1,D1
0002C8B4 <AmiBlitz3.ab2@16963>   ORI.w #$2f3c,d1
0002C8B8 <AmiBlitz3.ab2@16964>   BSR writeword
0002C8BE <AmiBlitz3.ab2@16965>    ADDQ.w #4,a2offset
0002C8C0 <AmiBlitz3.ab2@16966>   MOVE.l d2,d1
0002C8C4 <AmiBlitz3.ab2@16967>   BSR writelong
0002C8C8 <AmiBlitz3.ab2@16968>   MOVE.w #$2f3c,d1
0002C8CC <AmiBlitz3.ab2@16969>   BSR writeword
0002C8D0 <AmiBlitz3.ab2@16970>   BSR.w addoff
0002C8D6 <AmiBlitz3.ab2@16971>   MOVE.l litdata1,D1
0002C8DA <AmiBlitz3.ab2@16972>   BSR.w writelong
0002C8DC <AmiBlitz3.ab2@16973>   MOVE.w (A7)+,D0
0002C8DE <AmiBlitz3.ab2@16974> RTS
0002C8E2 <AmiBlitz3.ab2@16978>   BSR.w get1bytemain
0002C8E6 <AmiBlitz3.ab2@16979>    BSR.w JL_0_AE22
0002C8EC <AmiBlitz3.ab2@16980>   MOVE.w regnum,D1
0002C8EE <AmiBlitz3.ab2@16981>   LSL.w #8,D1
0002C8F0 <AmiBlitz3.ab2@16982>   LSL.w #1,D1
0002C8F4 <AmiBlitz3.ab2@16983>   ORI.w #$203C,D1
0002C8F8 <AmiBlitz3.ab2@16984>    BSR.w writeword
0002C8FC <AmiBlitz3.ab2@16985>    BSR.w addoff
0002C900 <AmiBlitz3.ab2@16986>   MOVE.l $8(A2),D1
0002C904 <AmiBlitz3.ab2@16987>    BSR.w writelong
0002C906 <AmiBlitz3.ab2@16988>   MOVEQ.l #$03,D2
0002C90C <AmiBlitz3.ab2@16989>   CLR.b peekaddrsize
0002C910 <AmiBlitz3.ab2@16990> BRA.w reget
0002C912 <AmiBlitz3.ab2@16993>   MOVEQ.l #$00,D3
0002C916 <AmiBlitz3.ab2@16996>   BSR.w get1bytemain
0002C91A <AmiBlitz3.ab2@16997>    BEQ.w syntaxerr
0002C91E <AmiBlitz3.ab2@16998>   CMP.w #$22,D0
0002C922 <AmiBlitz3.ab2@16999>    BEQ.w JL_0_AF1A
0002C924 <AmiBlitz3.ab2@17000>   LSL.l #8,D3
0002C926 <AmiBlitz3.ab2@17001>   MOVE.b D0,D3
0002C92A <AmiBlitz3.ab2@17002> BRA.w JL_0_AF02
0002C92E <AmiBlitz3.ab2@17005>   BSR.w get1bytemain
0002C932 <AmiBlitz3.ab2@17006> BRA.w JL_0_B46E
0002C934 <AmiBlitz3.ab2@17009>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002C938 <AmiBlitz3.ab2@17010>    BSR.w makename2
0002C93C <AmiBlitz3.ab2@17011>    BSR.w findlabel2
0002C940 <AmiBlitz3.ab2@17012>    BEQ.w 'l10
0002C946 <AmiBlitz3.ab2@17013>    LEA ptr_parameterstore,a0
0002C94C <AmiBlitz3.ab2@17014>    CMP.b #"@",-1(a0,d2.w)
0002C950 <AmiBlitz3.ab2@17015>    BNE cnferr
0002C954 <AmiBlitz3.ab2@17016>    CLR.b -1(a0,d2.w)
0002C956 <AmiBlitz3.ab2@17017>    SUBQ.l #1,d2
0002C95C <AmiBlitz3.ab2@17018>    LEA varbase,a2
0002C960 <AmiBlitz3.ab2@17019>    BSR findvariable
0002C964 <AmiBlitz3.ab2@17020>    BNE cnferr
0002C968 <AmiBlitz3.ab2@17021>    CMP.b #"\",d0
0002C96C <AmiBlitz3.ab2@17022>    BNE 'l6
0002C972 <AmiBlitz3.ab2@17023>    ADDQ #1,lastsourcepos
0002C976 <AmiBlitz3.ab2@17024>    MOVE.l $a(a2),a2
0002C978 <AmiBlitz3.ab2@17025>    ADDQ.l #4,a2
0002C97C <AmiBlitz3.ab2@17026>    BSR.w makename2
0002C980 <AmiBlitz3.ab2@17027>    BSR findvariable2
0002C984 <AmiBlitz3.ab2@17028>    BNE cnferr
0002C988 <AmiBlitz3.ab2@17029> BRA.s 'l6                                                  ;???
0002C98C <AmiBlitz3.ab2@17032>    MOVE.w $4(a2),d3
0002C98E <AmiBlitz3.ab2@17033>    EXT.l d3
0002C992 <AmiBlitz3.ab2@17034> BRA JL_0_AF46
0002C996 <AmiBlitz3.ab2@17037>   MOVE.l $8(A2),D3
0002C99E <AmiBlitz3.ab2@17038>   CMPI.l #$1,$4(A2)
0002C9A2 <AmiBlitz3.ab2@17039>    BEQ.w JL_0_AF46
0002C9A8 <AmiBlitz3.ab2@17040>   NOT.w asmtype
0002C9AA <AmiBlitz3.ab2@17043>   MOVE.w (A7)+,D2
0002C9AE <AmiBlitz3.ab2@17044> BRA.w JL_0_B46E
0002C9B0 <AmiBlitz3.ab2@17048>   MOVE.w D2,-(A7)
0002C9B4 <AmiBlitz3.ab2@17049>    BSR.w getparameter
0002C9B8 <AmiBlitz3.ab2@17050>   CMP.w #"{",D0                                          ;test if var = function{}
0002C9BC <AmiBlitz3.ab2@17051>    BEQ.w isfunction
0002C9C0 <AmiBlitz3.ab2@17052>    BSR.w JL_0_8E3C
0002C9C4 <AmiBlitz3.ab2@17054>    BSR.w calcvar                                         ;getvaroffset+type
0002C9C8 <AmiBlitz3.ab2@17055>    BSR.w JL_0_B150
0002C9CE <AmiBlitz3.ab2@17056>    MOVE.l a2,rightsidetype
0002C9D4 <AmiBlitz3.ab2@17067>    TST.b typecheck
0002C9D8 <AmiBlitz3.ab2@17068>    BEQ JL_0_AF66
0002C9E2 <AmiBlitz3.ab2@17069>    CMP.l #$da01,lasttoken                                  ;poke
0002C9E6 <AmiBlitz3.ab2@17070>    BEQ 'l1
0002C9F0 <AmiBlitz3.ab2@17071>    CMP.l #$da02,lasttoken                                  ;peek
0002C9F4 <AmiBlitz3.ab2@17072>    BNE 'l2
0002C9FC <AmiBlitz3.ab2@17075>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002CA00 <AmiBlitz3.ab2@17076>    BNE JL_0_AF66
0002CA06 <AmiBlitz3.ab2@17077>    MOVE.b d2,peekaddrsize
0002CA0A <AmiBlitz3.ab2@17078>    BRA JL_0_AF66
0002CA10 <AmiBlitz3.ab2@17081>   CLR.b peekaddrsize
0002CA14 <AmiBlitz3.ab2@17084>   CMP.w #$1,D2
0002CA18 <AmiBlitz3.ab2@17085>    BNE.w JL_0_AF7C
0002CA1E <AmiBlitz3.ab2@17086>   MOVE.w regnum,D1
0002CA22 <AmiBlitz3.ab2@17087>   ORI.w #$4880,D1
0002CA26 <AmiBlitz3.ab2@17088>    BSR.w writeword
0002CA28 <AmiBlitz3.ab2@17091>   MOVE.w (A7)+,D3
0002CA2C <AmiBlitz3.ab2@17092>    BEQ.w JL_0_AF9E
0002CA32 <AmiBlitz3.ab2@17093>    MOVE.l lastinstructionaddr,a0
0002CA36 <AmiBlitz3.ab2@17094>   CMP.w #$3,D3
0002CA3A <AmiBlitz3.ab2@17095>    BNE.w JL_0_AF92
0002CA3E <AmiBlitz3.ab2@17096>   CMP.w #$4,D2
0002CA42 <AmiBlitz3.ab2@17097>    BEQ.w JL_0_AF98
0002CA44 <AmiBlitz3.ab2@17100>   CMP.w D2,D3
0002CA48 <AmiBlitz3.ab2@17101>    BLS.w JL_0_AF9E
0002CA4A <AmiBlitz3.ab2@17104>   EXG.l D2,D3
0002CA4C <AmiBlitz3.ab2@17105>   MOVE.l a0,-(a7)
0002CA52 <AmiBlitz3.ab2@17106>   TST.b typecheck
0002CA56 <AmiBlitz3.ab2@17107>   BEQ 'ok
0002CA5C <AmiBlitz3.ab2@17108>   TST.b notypecheck
0002CA60 <AmiBlitz3.ab2@17109>   BNE 'ok
0002CA66 <AmiBlitz3.ab2@17110>   MOVE.l leftsidetype,a0
0002CA70 <AmiBlitz3.ab2@17111>   CMP.l #0,leftsidetype
0002CA74 <AmiBlitz3.ab2@17112>   BEQ 'ok
0002CA7C <AmiBlitz3.ab2@17113>   CMP.l #$100,4(a0)
0002CA80 <AmiBlitz3.ab2@17114>   BLE 'ok
0002CA84 <AmiBlitz3.ab2@17115>   CMP.b #3,d3
0002CA88 <AmiBlitz3.ab2@17116>   BEQ 'ok
0002CA8C <AmiBlitz3.ab2@17117>   CMP.b #7,d3
0002CA90 <AmiBlitz3.ab2@17118>   BEQ 'ok
0002CA96 <AmiBlitz3.ab2@17119>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002CA98 <AmiBlitz3.ab2@17121>   MOVE.l (a7)+,a0
0002CA9C <AmiBlitz3.ab2@17122>   BSR.w writeconvertcode         ;called from var assign
0002CAA0 <AmiBlitz3.ab2@17125> BRA.w reget
0002CAA2 <AmiBlitz3.ab2@17128>   MOVEQ.l #$00,D3
0002CAA8 <AmiBlitz3.ab2@17129>   MOVE.w regnum,D1
0002CAAC <AmiBlitz3.ab2@17130>    BEQ.w JL_0_AFC8
0002CAAE <AmiBlitz3.ab2@17131>   SUBQ.w #1,D1
0002CAB0 <AmiBlitz3.ab2@17134>      LSR.l #1,D3
0002CAB4 <AmiBlitz3.ab2@17135>      BSET #$F,D3
0002CAB8 <AmiBlitz3.ab2@17136>   DBF D1,JL_0_AFB0b
0002CABE <AmiBlitz3.ab2@17138>    TST.b fpu
0002CAC2 <AmiBlitz3.ab2@17139>    BEQ 'l1
0002CAC8 <AmiBlitz3.ab2@17140>    ADDQ.l #2,stacktrack                                    ;intern command
0002CACA <AmiBlitz3.ab2@17141>     MOVE.l a0,-(a7)
0002CAD0 <AmiBlitz3.ab2@17142>     MOVE.l stacktrack,d1
0002CAD6 <AmiBlitz3.ab2@17143>     LEA fpustackbase,a0
0002CADA <AmiBlitz3.ab2@17144>     CLR.w 0(a0,d1)
0002CAE0 <AmiBlitz3.ab2@17145>     CLR.w regmask
0002CAE2 <AmiBlitz3.ab2@17146>     MOVE.l (a7)+,a0
0002CAE6 <AmiBlitz3.ab2@17149>   MOVE.w #$48E7,D1
0002CAEA <AmiBlitz3.ab2@17150>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CAEC <AmiBlitz3.ab2@17151>   MOVE.w D3,D1
0002CAF0 <AmiBlitz3.ab2@17152> BRA.w writeword
0002CAF2 <AmiBlitz3.ab2@17157>   MOVEQ.l #$00,D3
0002CAF8 <AmiBlitz3.ab2@17158>   MOVE.w regnum,D1
0002CAFC <AmiBlitz3.ab2@17159>    BEQ.w JL_0_AFC8
0002CAFE <AmiBlitz3.ab2@17160>   SUBQ.w #1,D1
0002CB00 <AmiBlitz3.ab2@17163>     LSR.l #1,D3
0002CB04 <AmiBlitz3.ab2@17164>     BSET #$F,D3
0002CB08 <AmiBlitz3.ab2@17165>   DBF D1,JL_0_AFB0
0002CB0E <AmiBlitz3.ab2@17167>    TST.b fpu
0002CB12 <AmiBlitz3.ab2@17168>    BEQ 'l1
0002CB18 <AmiBlitz3.ab2@17169>    ADDQ.l #2,stacktrack                                    ;intern command
0002CB1A <AmiBlitz3.ab2@17170>     MOVE.l a0,-(a7)
0002CB20 <AmiBlitz3.ab2@17171>     MOVE.l stacktrack,d1
0002CB26 <AmiBlitz3.ab2@17172>     LEA fpustackbase,a0
0002CB2A <AmiBlitz3.ab2@17173>     CLR.w 0(a0,d1)
0002CB2E <AmiBlitz3.ab2@17174>    CMP.b #5,(a3)                                           ;result float ?
0002CB32 <AmiBlitz3.ab2@17175>     BNE 'nofpu
0002CB3C <AmiBlitz3.ab2@17177>     MOVE.w regnum,regnumfunc
0002CB42 <AmiBlitz3.ab2@17180>   CLR.w regmask
0002CB44 <AmiBlitz3.ab2@17181>     MOVE.l (a7)+,a0
0002CB48 <AmiBlitz3.ab2@17184>   MOVE.w #$48E7,D1
0002CB4C <AmiBlitz3.ab2@17185>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CB4E <AmiBlitz3.ab2@17186>   MOVE.w D3,D1
0002CB52 <AmiBlitz3.ab2@17187> BRA.w writeword
0002CB54 <AmiBlitz3.ab2@17190> RTS
0002CB56 <AmiBlitz3.ab2@17194>   MOVE.l D1,-(A7)
0002CB5A <AmiBlitz3.ab2@17195>   MOVE.w #$4EB9,D1
0002CB5E <AmiBlitz3.ab2@17196>    BSR.w writeword
0002CB62 <AmiBlitz3.ab2@17197>    BSR.w addoff
0002CB64 <AmiBlitz3.ab2@17198>   MOVE.l (A7)+,D1
0002CB68 <AmiBlitz3.ab2@17199> BRA.w writelong
0002CB6C <AmiBlitz3.ab2@17203>    BSR.w findproc                                          ;write function call
0002CB70 <AmiBlitz3.ab2@17204>    BEQ 'l1
0002CB76 <AmiBlitz3.ab2@17205>    TST.l unusedfunc
0002CB7A <AmiBlitz3.ab2@17206>    BEQ noprocerr
0002CB80 <AmiBlitz3.ab2@17208>    JSR gotoendsource
0002CB88 <AmiBlitz3.ab2@17211>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002CB8E <AmiBlitz3.ab2@17212>   TST.l typetocast
0002CB92 <AmiBlitz3.ab2@17213>   BEQ 'nocast
0002CB9C <AmiBlitz3.ab2@17214>   MOVE.l typetocast,rightsidetype
0002CBA2 <AmiBlitz3.ab2@17215>   CLR.l typetocast
0002CBA4 <AmiBlitz3.ab2@17216>   MOVE.l a1,-(a7)
0002CBAA <AmiBlitz3.ab2@17217>   MOVE.l rightsidetype,a1
0002CBB0 <AmiBlitz3.ab2@17218>   CMP.l leftsidetype,a1
0002CBB4 <AmiBlitz3.ab2@17219>   BEQ 'ok
0002CBBA <AmiBlitz3.ab2@17220>   JMP errorconvertreturntype2
0002CBBC <AmiBlitz3.ab2@17221> 'ok  MOVE.l (a7)+,a1
0002CBBE <AmiBlitz3.ab2@17223>   MOVEQ.l #$00,D1
0002CBC2 <AmiBlitz3.ab2@17224>   MOVE.b $5(A2),D1
0002CBC8 <AmiBlitz3.ab2@17225>   MOVE.b d1,retmode
0002CBCC <AmiBlitz3.ab2@17226>    BMI.w illprocerr
0002CBD2 <AmiBlitz3.ab2@17227>    MOVE.b #1,isfunc(a2)
0002CBD4 <AmiBlitz3.ab2@17228>   MOVE.w D1,-(A7)
0002CBD6 <AmiBlitz3.ab2@17229>   MOVEQ.l #$00,D1
0002CBDA <AmiBlitz3.ab2@17230>   MOVE.b $4(A2),D1
0002CBDC <AmiBlitz3.ab2@17231>   LSR.w #4,D1
0002CBE0 <AmiBlitz3.ab2@17232>    BEQ.w JL_0_B006
0002CBE2 <AmiBlitz3.ab2@17233>   LSL.w #2,D1
0002CBE8 <AmiBlitz3.ab2@17234>   SUB.w D1,a2offset
0002CBEC <AmiBlitz3.ab2@17237>   CMPI.w #$7,(A7)
0002CBF0 <AmiBlitz3.ab2@17238>    BNE.b JL_0_B014
0002CBF2 <AmiBlitz3.ab2@17239>   MOVE.l A2,-(A7)
0002CBF6 <AmiBlitz3.ab2@17240>    BSR.w makesbase
0002CBF8 <AmiBlitz3.ab2@17241>   MOVEA.l (A7)+,A2
0002CBFE <AmiBlitz3.ab2@17244>   MOVE.w sbasegot,-(A7)
0002CC02 <AmiBlitz3.ab2@17245>    BEQ.b JL_0_B020
0002CC06 <AmiBlitz3.ab2@17246>    BSR.w dopusha3
0002CC0A <AmiBlitz3.ab2@17249>   BSR.w JL_0_AFA2func
0002CC0C <AmiBlitz3.ab2@17250>   MOVE.w D3,-(A7)
0002CC10 <AmiBlitz3.ab2@17251>   MOVE.l $E(A2),D1
0002CC14 <AmiBlitz3.ab2@17252>   TST.b $20(a2)                                            ;increase if morepar
0002CC18 <AmiBlitz3.ab2@17253>   BNE 'no0par
0002CC1A <AmiBlitz3.ab2@17254>   MOVE.l a5,a4
0002CC1E <AmiBlitz3.ab2@17257>   CMP.b #$20,(a4)+
0002CC22 <AmiBlitz3.ab2@17258>   BEQ 'l1
0002CC28 <AmiBlitz3.ab2@17259>   CMP.b #"}",-1(a4)
0002CC2C <AmiBlitz3.ab2@17260>   BNE  'no0par
0002CC2E <AmiBlitz3.ab2@17261>   MOVEQ #0,d0
0002CC32 <AmiBlitz3.ab2@17264>   LEA $16(A2),A1
0002CC34 <AmiBlitz3.ab2@17267>   MOVE.l d1,-(a7)
0002CC36 <AmiBlitz3.ab2@17268>   MOVE.b (a1),d2
0002CC38 <AmiBlitz3.ab2@17269>   MOVE.l d0,d1
0002CC3C <AmiBlitz3.ab2@17270>   CMP.w #4,d2
0002CC40 <AmiBlitz3.ab2@17271>   BNE 'l1b
0002CC46 <AmiBlitz3.ab2@17272>   ADD.l #$203c,d1
0002CC4A <AmiBlitz3.ab2@17273>   BSR writeword
0002CC50 <AmiBlitz3.ab2@17274>   MOVE.l #$ffff0000,d1
0002CC54 <AmiBlitz3.ab2@17275>   BSR writelong
0002CC58 <AmiBlitz3.ab2@17276> BRA 'l2b
0002CC5E <AmiBlitz3.ab2@17279>    TST.b fpu
0002CC62 <AmiBlitz3.ab2@17280>    BNE 'l1c
0002CC66 <AmiBlitz3.ab2@17281>    CMP.w #5,d2
0002CC6A <AmiBlitz3.ab2@17282>    BNE 'l1c
0002CC70 <AmiBlitz3.ab2@17283>    ADD.l #$203c,d1
0002CC74 <AmiBlitz3.ab2@17284>    BSR writeword
0002CC7A <AmiBlitz3.ab2@17285>    MOVE.l #$800000c1,d1
0002CC7E <AmiBlitz3.ab2@17286>    BSR writelong
0002CC82 <AmiBlitz3.ab2@17287> BRA 'l2b
0002CC88 <AmiBlitz3.ab2@17290>   ADD.l #$70ff,d1
0002CC8C <AmiBlitz3.ab2@17291>   BSR writeword
0002CC90 <AmiBlitz3.ab2@17292>   CMP.w #7,d2
0002CC94 <AmiBlitz3.ab2@17293>   BNE 'l1d
0002CC9A <AmiBlitz3.ab2@17294>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002CC9E <AmiBlitz3.ab2@17295>   BSR writelong
0002CCA0 <AmiBlitz3.ab2@17296>   MOVEQ #0,d1
0002CCA4 <AmiBlitz3.ab2@17297>   BSR writeword
0002CCAA <AmiBlitz3.ab2@17298>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002CCAE <AmiBlitz3.ab2@17299>   BSR writelong
0002CCB0 <AmiBlitz3.ab2@17300>   MOVEQ #0,d1
0002CCB4 <AmiBlitz3.ab2@17301>   BSR writeword
0002CCBA <AmiBlitz3.ab2@17303> 'l1d  MOVE.l #$f23c5000,d1
0002CCBC <AmiBlitz3.ab2@17304>   MOVE.l d0,d2
0002CCBE <AmiBlitz3.ab2@17305>   ASR.l #2,d2
0002CCC0 <AmiBlitz3.ab2@17306>   ADD.l d2,d1
0002CCC4 <AmiBlitz3.ab2@17307>   BSR writelong
0002CCC8 <AmiBlitz3.ab2@17308>   MOVE.w #$ffff,d1
0002CCCC <AmiBlitz3.ab2@17309>   BSR writeword
0002CCCE <AmiBlitz3.ab2@17313>   MOVE.l (a7)+,d1
0002CCD0 <AmiBlitz3.ab2@17314>      ADDQ.l #1,a1
0002CCD6 <AmiBlitz3.ab2@17315>      ADD.l #$0200,d0
0002CCDC <AmiBlitz3.ab2@17316>      CMP.l #$0e00,d0
0002CCE0 <AmiBlitz3.ab2@17317>      BEQ syntaxerr
0002CCE2 <AmiBlitz3.ab2@17318>      TST.b (a1)
0002CCE6 <AmiBlitz3.ab2@17319>      BNE 'again
0002CCEA <AmiBlitz3.ab2@17320> BRA 'p1
0002CCEE <AmiBlitz3.ab2@17323>   TST.b $4(A2)
0002CCF2 <AmiBlitz3.ab2@17324>    BNE.w JL_0_B03E
0002CCF6 <AmiBlitz3.ab2@17327>   BSR.w JL_0_AFCA
0002CCFA <AmiBlitz3.ab2@17328>    BSR.w get1bytemain
0002CCFE <AmiBlitz3.ab2@17329> BRA.w JL_0_B06C
0002CD04 <AmiBlitz3.ab2@17333>   MOVE.w regnum,-(A7)
0002CD0E <AmiBlitz3.ab2@17334>   MOVE.w regnum,regnumfunc
0002CD10 <AmiBlitz3.ab2@17337>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002CD18 <AmiBlitz3.ab2@17338>   MOVE.b #1,funccall
0002CD1A <AmiBlitz3.ab2@17339>   MOVEQ.l #$00,D0
0002CD1E <AmiBlitz3.ab2@17340>   MOVE.b $4(A2),D0
0002CD28 <AmiBlitz3.ab2@17341>   MOVE.w a2offset,a2offset2
0002CD30 <AmiBlitz3.ab2@17342>   MOVE.b 5(a2),retmode
0002CD36 <AmiBlitz3.ab2@17343>   MOVE.l a2,currentfunccall
0002CD3A <AmiBlitz3.ab2@17344>   LEA $16(A2),A2
0002CD40 <AmiBlitz3.ab2@17345>   CLR.w regnum
0002CD46 <AmiBlitz3.ab2@17346>   CLR.w regmask
0002CD4C <AmiBlitz3.ab2@17347>   MOVE.b isconstantvalue,-(a7)
0002CD52 <AmiBlitz3.ab2@17348>   MOVE.b funcparloop,-(a7)
0002CD5A <AmiBlitz3.ab2@17349>   MOVE.b #1,funcparloop
0002CD60 <AmiBlitz3.ab2@17350>   MOVE.l rightsidetype,-(a7)
0002CD66 <AmiBlitz3.ab2@17351>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002CD6C <AmiBlitz3.ab2@17352>   MOVE.b blitzparloop,-(a7)
0002CD72 <AmiBlitz3.ab2@17353>   CLR.b blitzparloop
0002CD78 <AmiBlitz3.ab2@17354>   JSR fetchpees2
0002CD7E <AmiBlitz3.ab2@17355>   MOVE.b (a7)+,blitzparloop
0002CD84 <AmiBlitz3.ab2@17356>   MOVE.l (a7)+,leftsidetype
0002CD8A <AmiBlitz3.ab2@17357>   MOVE.l (a7)+,rightsidetype
0002CD90 <AmiBlitz3.ab2@17358>   MOVE.b (a7)+,funcparloop
0002CD96 <AmiBlitz3.ab2@17359>   MOVE.b (a7)+,isconstantvalue
0002CD9C <AmiBlitz3.ab2@17360>   JSR chkstak
0002CD9E <AmiBlitz3.ab2@17361>   MOVE.l (A7)+,D1
0002CDA2 <AmiBlitz3.ab2@17377>    BTST #0,d1
0002CDA6 <AmiBlitz3.ab2@17378>    BNE intern1
0002CDAA <AmiBlitz3.ab2@17379>    BSR.w JL_0_AFCA
0002CDB0 <AmiBlitz3.ab2@17401>   MOVE.w (A7)+,regnum
0002CDB4 <AmiBlitz3.ab2@17404>   CMP.w #"}",D0
0002CDB8 <AmiBlitz3.ab2@17405>    BNE.w errorbracketmiss2
0002CDBA <AmiBlitz3.ab2@17406>    MOVEQ #0,d1                                            ; end of function call pars
0002CDC0 <AmiBlitz3.ab2@17407>   MOVE.w regnum,D1
0002CDC4 <AmiBlitz3.ab2@17408>    BEQ.w JL_0_B08A
0002CDCA <AmiBlitz3.ab2@17409>    TST.b fpu
0002CDCE <AmiBlitz3.ab2@17410>    BEQ 'old
0002CDD6 <AmiBlitz3.ab2@17411>    CMP.b #5,retmode
0002CDDA <AmiBlitz3.ab2@17412>    BNE 'old
0002CDDC <AmiBlitz3.ab2@17413>    ASL.l #7,d1
0002CDE2 <AmiBlitz3.ab2@17414>    OR.l #$f2000000,d1
0002CDE6 <AmiBlitz3.ab2@17415>    BSR writelong
0002CDEA <AmiBlitz3.ab2@17416> BRA JL_0_B08A
0002CDEC <AmiBlitz3.ab2@17418>  'old  LSL.w #8,D1
0002CDEE <AmiBlitz3.ab2@17419>   LSL.w #1,D1
0002CDF2 <AmiBlitz3.ab2@17420>   ORI.w #$2000,D1
0002CDF6 <AmiBlitz3.ab2@17421>    BSR.w writeword
0002CDF8 <AmiBlitz3.ab2@17424>    MOVE.w (A7)+,D3
0002CDFC <AmiBlitz3.ab2@17425>    BEQ.w JL_0_B0A8
0002CE02 <AmiBlitz3.ab2@17426>    TST.b fpu
0002CE06 <AmiBlitz3.ab2@17427>    BEQ 'old
0002CE08 <AmiBlitz3.ab2@17428>    MOVE.l d0,-(a7)
0002CE0C <AmiBlitz3.ab2@17429>    MOVE.w #8,d0
0002CE0E <AmiBlitz3.ab2@17430>    MOVE.l a0,-(a7)
0002CE14 <AmiBlitz3.ab2@17431>    MOVE.l stacktrack,d1
0002CE1A <AmiBlitz3.ab2@17432>    LEA fpustackbase,a0
0002CE22 <AmiBlitz3.ab2@17433>    MOVE.w 0(a0,d1),regmask
0002CE24 <AmiBlitz3.ab2@17434>    MOVE.l (a7)+,a0
0002CE28 <AmiBlitz3.ab2@17437>   BEQ 'ready
0002CE2E <AmiBlitz3.ab2@17438>    BTST d0,regmask
0002CE32 <AmiBlitz3.ab2@17439>    BEQ 'noa7
0002CE34 <AmiBlitz3.ab2@17440>    MOVEQ #0,d1
0002CE36 <AmiBlitz3.ab2@17441>    MOVE.w d0,d1
0002CE38 <AmiBlitz3.ab2@17442>    SUBQ.w #1,d1
0002CE3A <AmiBlitz3.ab2@17443>    ASL #7,d1
0002CE40 <AmiBlitz3.ab2@17445>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002CE44 <AmiBlitz3.ab2@17446>    BSR writelong
0002CE4A <AmiBlitz3.ab2@17447>    SUBQ.l #2,stacktrack
0002CE4C <AmiBlitz3.ab2@17450>    SUBQ.w #1,d0
0002CE50 <AmiBlitz3.ab2@17451>    BNE 'loop
0002CE56 <AmiBlitz3.ab2@17454>   SUBQ.l #2,stacktrack                                     ;integer sub
0002CE58 <AmiBlitz3.ab2@17455>   MOVE.l (a7)+,d0
0002CE5C <AmiBlitz3.ab2@17458>   MOVE.w #$4CDF,D1
0002CE60 <AmiBlitz3.ab2@17459>    BSR.w writeword
0002CE62 <AmiBlitz3.ab2@17460>   MOVEQ.l #$00,D1
0002CE64 <AmiBlitz3.ab2@17461>   MOVEQ.l #$0F,D4
0002CE66 <AmiBlitz3.ab2@17464>     LSL.w #1,D3
0002CE68 <AmiBlitz3.ab2@17465>     ROXR.w #1,D1
0002CE6C <AmiBlitz3.ab2@17466>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002CE70 <AmiBlitz3.ab2@17468>     BSR.w writeword
0002CE76 <AmiBlitz3.ab2@17469>    CLR.w regnumfunc
0002CE78 <AmiBlitz3.ab2@17472>   MOVE.w (A7)+,D1
0002CE7C <AmiBlitz3.ab2@17473>    BEQ.b JL_0_B0D2
0002CE80 <AmiBlitz3.ab2@17474>   CMPI.w #$7,(A7)
0002CE84 <AmiBlitz3.ab2@17475>    BEQ.b JL_0_B0C4
0002CE8A <AmiBlitz3.ab2@17476>   LEA geta3,A0
0002CE90 <AmiBlitz3.ab2@17477>   LEA numtoa0,A1
0002CE94 <AmiBlitz3.ab2@17478>    BSR.w pokecode
0002CE98 <AmiBlitz3.ab2@17479> BRA.b JL_0_B0CE
0002CE9E <AmiBlitz3.ab2@17482>   MOVE.w deca3,D1
0002CEA2 <AmiBlitz3.ab2@17483>    BSR.w writeword
0002CEA6 <AmiBlitz3.ab2@17486>   BSR.w dopulla3                                           ;fix up string base
0002CEA8 <AmiBlitz3.ab2@17489>   MOVE.w (A7)+,D2                                          ;what it returns!
0002CEAC <AmiBlitz3.ab2@17490>   CMP.w #$7,D2
0002CEB0 <AmiBlitz3.ab2@17491>    BNE.w JL_0_B0EC
0002CEB6 <AmiBlitz3.ab2@17492>   MOVE.w putstlen,D1
0002CEBC <AmiBlitz3.ab2@17493>   OR.w regnum,D1
0002CEC0 <AmiBlitz3.ab2@17494>    BSR.w writeword
0002CEC4 <AmiBlitz3.ab2@17497>   BSR.w get1bytemain
0002CEC8 <AmiBlitz3.ab2@17498> BRA.w JL_0_AF66
0002CECA <AmiBlitz3.ab2@17502> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002CED2 <AmiBlitz3.ab2@17507>   CMP.b #2,optistring
0002CED6 <AmiBlitz3.ab2@17508>   BEQ fs2
0002CEDA <AmiBlitz3.ab2@17509>   BSR.w makesbase                                          ;writestringvariable
0002CEDE <AmiBlitz3.ab2@17510>   BTST #$F,D2
0002CEE2 <AmiBlitz3.ab2@17511>    BNE.w JL_0_B112
0002CEE8 <AmiBlitz3.ab2@17512>   MOVE.w D3,leaa5d3a2+2
0002CEEE <AmiBlitz3.ab2@17513>   MOVE.l leaa5d3a2,D1
0002CEF2 <AmiBlitz3.ab2@17514>    BSR.w pokela5s
0002CEF8 <AmiBlitz3.ab2@17517>   MOVE.w regnum,D1
0002CEFA <AmiBlitz3.ab2@17518>   LSL.w #8,D1
0002CEFC <AmiBlitz3.ab2@17519>   LSL.w #1,D1
0002CF00 <AmiBlitz3.ab2@17520>   ORI.w #$7000,D1
0002CF06 <AmiBlitz3.ab2@17521>   LEA stvarget2,A0
0002CF08 <AmiBlitz3.ab2@17522>   MOVE.w D1,(A0)
0002CF0E <AmiBlitz3.ab2@17523>   MOVE.w regnum,D1
0002CF14 <AmiBlitz3.ab2@17524>   ANDI.w #$FFF8,$2(A0)
0002CF18 <AmiBlitz3.ab2@17525>   OR.w D1,$2(A0)
0002CF1E <AmiBlitz3.ab2@17526>   LEA stvarget2f,A1
0002CF22 <AmiBlitz3.ab2@17527>    BSR.w pokecode
0002CF26 <AmiBlitz3.ab2@17528>   MOVE.w #$C600,D1
0002CF2A <AmiBlitz3.ab2@17529>    BSR.w Atokejsr
0002CF2C <AmiBlitz3.ab2@17530>   MOVEQ.l #$07,D2
0002CF30 <AmiBlitz3.ab2@17531> BRA.w reget
0002CF36 <AmiBlitz3.ab2@17534>      TST.w stackpar
0002CF3A <AmiBlitz3.ab2@17535>      BMI 'l10
0002CF40 <AmiBlitz3.ab2@17536>      MOVE.l #$3f3c0007,d1
0002CF46 <AmiBlitz3.ab2@17537>      ADDQ.w #2,a2offset
0002CF4A <AmiBlitz3.ab2@17538>      BSR writelong
0002CF4E <AmiBlitz3.ab2@17541>   MOVE.w #$4878,d1
0002CF54 <AmiBlitz3.ab2@17542>      CLR.w stackpar
0002CF58 <AmiBlitz3.ab2@17543>      BSR writeword
0002CF5C <AmiBlitz3.ab2@17544>      MOVE.w #$0,d1
0002CF60 <AmiBlitz3.ab2@17545>      BSR writeword
0002CF64 <AmiBlitz3.ab2@17546>      MOVE.w #$246d,d1
0002CF68 <AmiBlitz3.ab2@17547>      BSR writeword
0002CF6A <AmiBlitz3.ab2@17548>      MOVE.w d3,d1
0002CF6E <AmiBlitz3.ab2@17549>      BSR writeword
0002CF74 <AmiBlitz3.ab2@17550>      MOVE.l #$4a926704,d1
0002CF78 <AmiBlitz3.ab2@17551>      BSR writelong
0002CF7E <AmiBlitz3.ab2@17552>      MOVE.l #$2eaafffc,d1
0002CF82 <AmiBlitz3.ab2@17553>      BSR writelong
0002CF86 <AmiBlitz3.ab2@17554>      MOVE.w #$2f0a,d1
0002CF8C <AmiBlitz3.ab2@17555>      ADDQ.w #8,a2offset
0002CF90 <AmiBlitz3.ab2@17556>      BSR writeword
0002CF94 <AmiBlitz3.ab2@17557> BRA.w reget
0002CF98 <AmiBlitz3.ab2@17560>   CMP.b #$7,D2                                             ;load basic var
0002CF9C <AmiBlitz3.ab2@17561>    BEQ.w JL_0_B0F6
0002CFA2 <AmiBlitz3.ab2@17563>    TST.b iee
0002CFA6 <AmiBlitz3.ab2@17564>    BEQ 'noiee
0002CFAA <AmiBlitz3.ab2@17565>    CMP.b #5,d2
0002CFAE <AmiBlitz3.ab2@17566>    BNE 'noiee
0002CFB0 <AmiBlitz3.ab2@17567>    MOVE.l d0,-(a7)                                         ;fpu load var
0002CFB4 <AmiBlitz3.ab2@17568>    BTST #15,d2
0002CFB8 <AmiBlitz3.ab2@17569>    BEQ 'var
0002CFBE <AmiBlitz3.ab2@17570>    CMP.l #$7fff,d3
0002CFC2 <AmiBlitz3.ab2@17571>    BGT 'longoffset
0002CFC8 <AmiBlitz3.ab2@17572>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002CFCA <AmiBlitz3.ab2@17573>    TST.w d3                                                ;offset =0
0002CFCE <AmiBlitz3.ab2@17574>    BNE 'offset
0002CFD4 <AmiBlitz3.ab2@17577>   MOVE.l #$f2124400,d1
0002CFD6 <AmiBlitz3.ab2@17578>    MOVEQ #0,d3
0002CFDA <AmiBlitz3.ab2@17579> BRA 'glob
0002CFE0 <AmiBlitz3.ab2@17582>   SUBQ.l #4,destpointer
0002CFE4 <AmiBlitz3.ab2@17583> BRA 'glob
0002CFEA <AmiBlitz3.ab2@17586>   TST.b fast
0002CFEE <AmiBlitz3.ab2@17587>    BEQ 'nofastload
0002CFF4 <AmiBlitz3.ab2@17588>    TST.w regnum
0002CFF8 <AmiBlitz3.ab2@17589>    BNE 'nofastload
0002CFFE <AmiBlitz3.ab2@17590>    CMP.l fp0addr,a4
0002D002 <AmiBlitz3.ab2@17591>    BNE 'nofastload
0002D008 <AmiBlitz3.ab2@17592>    MOVE.l fp0iff,d1
0002D00E <AmiBlitz3.ab2@17593>    CMP.l firstiff,d1
0002D012 <AmiBlitz3.ab2@17594>    BNE 'nofastload
0002D018 <AmiBlitz3.ab2@17595>    MOVE.w varmode,d1
0002D01E <AmiBlitz3.ab2@17596>    CMP.w fp0mode,d1
0002D022 <AmiBlitz3.ab2@17597>    BNE 'nofastload
0002D028 <AmiBlitz3.ab2@17598>    CMP.w fp0var,d3
0002D02C <AmiBlitz3.ab2@17599>    BNE 'nofastload
0002D030 <AmiBlitz3.ab2@17600>    BCLR #16,d2
0002D032 <AmiBlitz3.ab2@17601>    MOVE.l (a7)+,d0
0002D034 <AmiBlitz3.ab2@17602> RTS
0002D036 <AmiBlitz3.ab2@17605>    MOVEQ #0,d0
0002D03C <AmiBlitz3.ab2@17606>    MOVE.w regnum,d0
0002D042 <AmiBlitz3.ab2@17607>    CMP.l maxregs,d0
0002D046 <AmiBlitz3.ab2@17608>    BLE 'ok
0002D04C <AmiBlitz3.ab2@17609>    LEA cmplxerr,a0
0002D04E <AmiBlitz3.ab2@17610>   MOVE.l a0,-(a7)
0002D054 <AmiBlitz3.ab2@17611> JMP handle_compileerror
0002D05A <AmiBlitz3.ab2@17614>    LEA regtable,a4
0002D05C <AmiBlitz3.ab2@17615>    TST.l (a4)
0002D060 <AmiBlitz3.ab2@17616>    BEQ 'noreg
0002D064 <AmiBlitz3.ab2@17617>    CMP.w 0+4(a4),d3
0002D068 <AmiBlitz3.ab2@17618>    BNE 'doreg1
0002D06E <AmiBlitz3.ab2@17619>    MOVE.l #$f2001c00,d1
0002D074 <AmiBlitz3.ab2@17620>    MOVE.w regnum,d0
0002D076 <AmiBlitz3.ab2@17621>    ASL.w #7,d0
0002D078 <AmiBlitz3.ab2@17622>    OR.w d0,d1
0002D07C <AmiBlitz3.ab2@17623>    BSR writelong
0002D07E <AmiBlitz3.ab2@17624>    MOVE.l (a7)+,d0
0002D080 <AmiBlitz3.ab2@17625> RTS
0002D084 <AmiBlitz3.ab2@17628>   CMP.w 8+4(a4),d3
0002D088 <AmiBlitz3.ab2@17629>    BNE 'doreg2
0002D08E <AmiBlitz3.ab2@17630>    MOVE.l #$f2001800,d1
0002D094 <AmiBlitz3.ab2@17631>    MOVE.w regnum,d0
0002D096 <AmiBlitz3.ab2@17632>    ASL.w #7,d0
0002D098 <AmiBlitz3.ab2@17633>    OR.w d0,d1
0002D09C <AmiBlitz3.ab2@17634>    BSR writelong
0002D09E <AmiBlitz3.ab2@17635>    MOVE.l (a7)+,d0
0002D0A0 <AmiBlitz3.ab2@17636> RTS
0002D0A4 <AmiBlitz3.ab2@17639>   CMP.w 16+4(a4),d3
0002D0A8 <AmiBlitz3.ab2@17640>    BNE 'doreg3
0002D0AE <AmiBlitz3.ab2@17641>    MOVE.l #$f2001400,d1
0002D0B4 <AmiBlitz3.ab2@17642>    MOVE.w regnum,d0
0002D0B6 <AmiBlitz3.ab2@17643>    ASL.w #7,d0
0002D0B8 <AmiBlitz3.ab2@17644>    OR.w d0,d1
0002D0BC <AmiBlitz3.ab2@17645>    BSR  writelong
0002D0BE <AmiBlitz3.ab2@17646>    MOVE.l (a7)+,d0
0002D0C0 <AmiBlitz3.ab2@17647> RTS
0002D0C4 <AmiBlitz3.ab2@17650>   CMP.w 24+4(a4),d3
0002D0C8 <AmiBlitz3.ab2@17651>    BNE 'doreg4
0002D0CE <AmiBlitz3.ab2@17652>    MOVE.l #$f2001000,d1
0002D0D4 <AmiBlitz3.ab2@17653>    MOVE.w regnum,d0
0002D0D6 <AmiBlitz3.ab2@17654>    ASL.w #7,d0
0002D0D8 <AmiBlitz3.ab2@17655>    OR.w d0,d1
0002D0DC <AmiBlitz3.ab2@17656>    BSR writelong
0002D0DE <AmiBlitz3.ab2@17657>    MOVE.l (a7)+,d0
0002D0E0 <AmiBlitz3.ab2@17658> RTS
0002D0E4 <AmiBlitz3.ab2@17661>    CMP.w 32+4(a4),d3
0002D0E8 <AmiBlitz3.ab2@17662>    BNE 'noreg
0002D0EE <AmiBlitz3.ab2@17663>    MOVE.l #$f2000c00,d1
0002D0F4 <AmiBlitz3.ab2@17664>    MOVE.w regnum,d0
0002D0F6 <AmiBlitz3.ab2@17665>    ASL.w #7,d0
0002D0F8 <AmiBlitz3.ab2@17666>    OR.w d0,d1
0002D0FC <AmiBlitz3.ab2@17667>    BSR writelong
0002D0FE <AmiBlitz3.ab2@17668>    MOVE.l (a7)+,d0
0002D100 <AmiBlitz3.ab2@17669> RTS
0002D106 <AmiBlitz3.ab2@17672>    MOVE.l #$f22d4400,d1                                    ;var
0002D10C <AmiBlitz3.ab2@17673>    TST.w varmode
0002D110 <AmiBlitz3.ab2@17674>   BEQ 'glob
0002D114 <AmiBlitz3.ab2@17675>   BCLR #16,d1                                              ;local
0002D116 <AmiBlitz3.ab2@17678>    MOVEQ #0,d0
0002D11C <AmiBlitz3.ab2@17679>    MOVE.w regnum,d0
0002D120 <AmiBlitz3.ab2@17680>    CMP.w #7,d0
0002D124 <AmiBlitz3.ab2@17681>    BLE 'ok2
0002D12A <AmiBlitz3.ab2@17682>    LEA cmplxerr,a0
0002D12C <AmiBlitz3.ab2@17683>   MOVE.l a0,-(a7)
0002D132 <AmiBlitz3.ab2@17684> JMP handle_compileerror
0002D134 <AmiBlitz3.ab2@17687>      ASL.w #7,d0
0002D136 <AmiBlitz3.ab2@17688>    OR.l d0,d1
0002D13E <AmiBlitz3.ab2@17689>    CMP.l #doublecheck,8(a2)
0002D142 <AmiBlitz3.ab2@17690>    BNE 'dbl
0002D148 <AmiBlitz3.ab2@17691>    OR.l #$00001000,d1
0002D14C <AmiBlitz3.ab2@17694>   BSR writelong
0002D14E <AmiBlitz3.ab2@17695>    MOVE.l (a7)+,d0
0002D152 <AmiBlitz3.ab2@17696>    AND.w #$ff,d2
0002D154 <AmiBlitz3.ab2@17697>    MOVE.w d3,d1
0002D158 <AmiBlitz3.ab2@17698>    BEQ 'nooffs
0002D15C <AmiBlitz3.ab2@17699> BRA writeword
0002D15E <AmiBlitz3.ab2@17704> RTS
0002D164 <AmiBlitz3.ab2@17707>   MOVE.w regnum,D1
0002D16A <AmiBlitz3.ab2@17708>   MOVE.w d1,load_var_reg
0002D16C <AmiBlitz3.ab2@17709>   LSL.w #8,D1
0002D176 <AmiBlitz3.ab2@17710>   MOVE.l destpointer,load_var_addr
0002D17C <AmiBlitz3.ab2@17711>   MOVE.w d2,load_var_size
0002D17E <AmiBlitz3.ab2@17712>   LSL.w #1,D1
0002D182 <AmiBlitz3.ab2@17713>   BTST #$E,D2
0002D186 <AmiBlitz3.ab2@17714>    BNE.w JL_0_B17A
0002D188 <AmiBlitz3.ab2@17715>   TST.b D2
0002D18C <AmiBlitz3.ab2@17716>    BNE.w JL_0_B17E
0002D18E <AmiBlitz3.ab2@17717>   MOVEQ.l #$03,D2
0002D192 <AmiBlitz3.ab2@17718>   ORI.w #$200A,D1
0002D196 <AmiBlitz3.ab2@17719> BRA.w writeword
0002D19A <AmiBlitz3.ab2@17722>   MOVE.b #$3,D2
0002D19E <AmiBlitz3.ab2@17725>   BTST #$F,D2
0002D1A2 <AmiBlitz3.ab2@17726>    BEQ.w JL_0_B19A                                         ;loadarray
0002D1A8 <AmiBlitz3.ab2@17727>    TST.b fast                                              ;lea->move xx(a2)
0002D1AC <AmiBlitz3.ab2@17728>    BEQ 'la10
0002D1B2 <AmiBlitz3.ab2@17733>    CLR.l load_var_addr
0002D1B6 <AmiBlitz3.ab2@17734> BRA 'la10
0002D1BE <AmiBlitz3.ab2@17736>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002D1C2 <AmiBlitz3.ab2@17737>    BNE 'la10
0002D1C8 <AmiBlitz3.ab2@17738>    TST.b optiarray
0002D1CC <AmiBlitz3.ab2@17739>    BNE 'la10
0002D1D2 <AmiBlitz3.ab2@17740>    MOVE.l destpointer,a4
0002D1D8 <AmiBlitz3.ab2@17741>    SUB.l loada,a4
0002D1DC <AmiBlitz3.ab2@17742>    CMP.w #4,a4
0002D1E0 <AmiBlitz3.ab2@17743>    BEQ 'la100
0002D1E4 <AmiBlitz3.ab2@17744>    CMP.w #2,a4
0002D1E8 <AmiBlitz3.ab2@17745>    BNE 'la10
0002D1EE <AmiBlitz3.ab2@17746>    MOVE.l destpointer,a4
0002D1F2 <AmiBlitz3.ab2@17747>    CMP.b #3,d2
0002D1F6 <AmiBlitz3.ab2@17748>    BCS 'la110
0002D1FC <AmiBlitz3.ab2@17749>    MOVE.w #$202a,-2(a4)
0002D200 <AmiBlitz3.ab2@17750>    OR.w d1,-2(a4)
0002D206 <AmiBlitz3.ab2@17751>    MOVE.w arrayoffset,d1
0002D20A <AmiBlitz3.ab2@17752>    BSR writeword
0002D20E <AmiBlitz3.ab2@17753> BRA JL_0_B194
0002D212 <AmiBlitz3.ab2@17756>    CMP.b #2,d2
0002D216 <AmiBlitz3.ab2@17757>    BNE 'la120
0002D21C <AmiBlitz3.ab2@17758>     MOVE.w #$302a,-2(a4)
0002D220 <AmiBlitz3.ab2@17759>    OR.w d1,-2(a4)
0002D226 <AmiBlitz3.ab2@17761>    MOVE.w arrayoffset,d1
0002D22A <AmiBlitz3.ab2@17762>    BSR writeword
0002D22E <AmiBlitz3.ab2@17763> BRA JL_0_B194
0002D232 <AmiBlitz3.ab2@17766>   CMP.b #1,d2
0002D236 <AmiBlitz3.ab2@17767>    BNE.s 'la10
0002D23C <AmiBlitz3.ab2@17768>     MOVE.w #$102a,-2(a4)
0002D240 <AmiBlitz3.ab2@17769>    OR.w d1,-2(a4)
0002D246 <AmiBlitz3.ab2@17770>    MOVE.w arrayoffset,d1
0002D24A <AmiBlitz3.ab2@17771>    BSR writeword
0002D24E <AmiBlitz3.ab2@17772> BRA JL_0_B194
0002D254 <AmiBlitz3.ab2@17775>   MOVE.l destpointer,a4
0002D25A <AmiBlitz3.ab2@17776>    CMP.w #$45ea,-2(a4)
0002D25E <AmiBlitz3.ab2@17777>    BNE 'la10
0002D262 <AmiBlitz3.ab2@17778>    CMP.b #3,d2
0002D266 <AmiBlitz3.ab2@17779>    BCS 'la11
0002D26C <AmiBlitz3.ab2@17780>    MOVE.w #$202a,-4(a4)
0002D270 <AmiBlitz3.ab2@17781>    OR.w d1,-4(a4)
0002D274 <AmiBlitz3.ab2@17782> BRA JL_0_B194
0002D278 <AmiBlitz3.ab2@17785>    CMP.b #2,d2
0002D27C <AmiBlitz3.ab2@17786>    BNE 'la12
0002D282 <AmiBlitz3.ab2@17787>     MOVE.w #$302a,-4(a4)
0002D286 <AmiBlitz3.ab2@17788>    OR.w d1,-4(a4)
0002D28A <AmiBlitz3.ab2@17789> BRA JL_0_B194
0002D28E <AmiBlitz3.ab2@17792>   CMP.b #1,d2
0002D292 <AmiBlitz3.ab2@17793>    BNE.s 'la10
0002D298 <AmiBlitz3.ab2@17794>     MOVE.w #$102a,-4(a4)
0002D29C <AmiBlitz3.ab2@17795>    OR.w d1,-4(a4)
0002D2A0 <AmiBlitz3.ab2@17796> BRA JL_0_B194
0002D2A6 <AmiBlitz3.ab2@17799>    OR.w movea2dn,D1
0002D2AA <AmiBlitz3.ab2@17800>    BSR.w JL_0_B1B2
0002D2AE <AmiBlitz3.ab2@17801>    BSR.w writeword
0002D2B2 <AmiBlitz3.ab2@17804>   ANDI.w #$FF,D2
0002D2B4 <AmiBlitz3.ab2@17805> RTS
0002D2BA <AmiBlitz3.ab2@17809>    MOVE.l destpointer,a4
0002D2C2 <AmiBlitz3.ab2@17810>    MOVE.l #$f22a4400,-4(a4)
0002D2C8 <AmiBlitz3.ab2@17811>    MOVE.w arrayoffset,d1
0002D2CC <AmiBlitz3.ab2@17812> BRA writeword
0002D2D2 <AmiBlitz3.ab2@17816>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002D2D6 <AmiBlitz3.ab2@17817>    BSR.w JL_0_B1B2
0002D2DA <AmiBlitz3.ab2@17818>    BSR.w pokewda5s
0002D2DC <AmiBlitz3.ab2@17819>   MOVE.w D3,D1
0002D2E0 <AmiBlitz3.ab2@17820>    BSR.w writeword
0002D2E4 <AmiBlitz3.ab2@17821> BRA.w JL_0_B194
0002D2E8 <AmiBlitz3.ab2@17824>   BTST #$E,D2
0002D2EC <AmiBlitz3.ab2@17825>    BNE.w JL_0_B1CA
0002D2F0 <AmiBlitz3.ab2@17826>   CMP.b #$1,D2
0002D2F4 <AmiBlitz3.ab2@17827>    BEQ.w JL_0_B1CC
0002D2F8 <AmiBlitz3.ab2@17828>   CMP.b #$2,D2
0002D2FC <AmiBlitz3.ab2@17829>    BEQ.w JL_0_B1D2
0002D2FE <AmiBlitz3.ab2@17832> RTS
0002D302 <AmiBlitz3.ab2@17835>   EORI.w #$3000,D1
0002D304 <AmiBlitz3.ab2@17836> RTS
0002D308 <AmiBlitz3.ab2@17839>   ORI.w #$1000,D1
0002D30A <AmiBlitz3.ab2@17840> RTS
0002D312 <AmiBlitz3.ab2@17844>   MOVE.w #$FFFF,dfetch
0002D316 <AmiBlitz3.ab2@17845>   BSR.w get1bytemain
0002D31A <AmiBlitz3.ab2@17846>   CMP.w #$2D,D0
0002D31E <AmiBlitz3.ab2@17847>    BNE.w JL_0_B206
0002D322 <AmiBlitz3.ab2@17848>   BSR.w get1bytemain
0002D326 <AmiBlitz3.ab2@17849>   BSR.w JL_0_B206
0002D32A <AmiBlitz3.ab2@17850>   CMP.w #$5,D2
0002D32E <AmiBlitz3.ab2@17851>    BCC.w JL_0_B200
0002D330 <AmiBlitz3.ab2@17852>   NEG.l D0
0002D332 <AmiBlitz3.ab2@17853> RTS
0002D338 <AmiBlitz3.ab2@17856>   TST.b fpu
0002D33C <AmiBlitz3.ab2@17857>   BEQ 'noneg
0002D340 <AmiBlitz3.ab2@17858>   fneg.x fp0
0002D342 <AmiBlitz3.ab2@17859> RTS
0002D346 <AmiBlitz3.ab2@17862>   BCHG #$7,D0
0002D348 <AmiBlitz3.ab2@17863> RTS
0002D34C <AmiBlitz3.ab2@17866>   CMP.w #$24,D0
0002D350 <AmiBlitz3.ab2@17867>    BEQ.w get_hexconstant
0002D354 <AmiBlitz3.ab2@17868>   CMP.w #$25,D0
0002D358 <AmiBlitz3.ab2@17869>    BEQ.w JL_0_A8C0
0002D35C <AmiBlitz3.ab2@17870>   CMP.w #$2E,D0
0002D360 <AmiBlitz3.ab2@17871>    BNE.w JL_0_B224
0002D362 <AmiBlitz3.ab2@17874>   MOVEQ.l #$00,D3
0002D366 <AmiBlitz3.ab2@17875> BRA.w JL_0_B272
0002D368 <AmiBlitz3.ab2@17878>   MOVEQ.l #$00,D3                                          ;number
0002D36C <AmiBlitz3.ab2@17879>    BSR.w atoi
0002D370 <AmiBlitz3.ab2@17880>   CMP.w #$2E,D0
0002D374 <AmiBlitz3.ab2@17881>    BEQ.w JL_0_B268
0002D378 <AmiBlitz3.ab2@17882>   ORI.w #$20,D0
0002D37C <AmiBlitz3.ab2@17883>   CMP.w #$65,D0
0002D380 <AmiBlitz3.ab2@17884>    BNE.w JL_0_B46E
0002D386 <AmiBlitz3.ab2@17885>   CMP.l #$800000,D3
0002D38A <AmiBlitz3.ab2@17886>    BCC.w overerr
0002D38C <AmiBlitz3.ab2@17887>   MOVEQ.l #-$01,D6
0002D390 <AmiBlitz3.ab2@17888>   fmove.l d3,fp0
0002D392 <AmiBlitz3.ab2@17889>   MOVE.l D3,D0
0002D398 <AmiBlitz3.ab2@17890>   MOVEA.l _mathffpbase,A6
0002D39C <AmiBlitz3.ab2@17891>    JSR -$24(A6)
0002D39E <AmiBlitz3.ab2@17892>   MOVE.l D0,D3
0002D3A2 <AmiBlitz3.ab2@17893>    BSR.w JL_0_B2E6
0002D3A6 <AmiBlitz3.ab2@17894>    BSR.w reget
0002D3AA <AmiBlitz3.ab2@17895>    BSR.w JL_0_B480
0002D3AE <AmiBlitz3.ab2@17896> BRA.w JL_0_B3DC
0002D3B2 <AmiBlitz3.ab2@17899>   CMP.b #4,d2
0002D3B6 <AmiBlitz3.ab2@17900>   BEQ 'l4
0002D3BA <AmiBlitz3.ab2@17901>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002D3C0 <AmiBlitz3.ab2@17904>    TST.b fpu
0002D3C4 <AmiBlitz3.ab2@17905>    BNE 'l1
0002D3CA <AmiBlitz3.ab2@17906>    CMP.l #$800000,D3
0002D3CE <AmiBlitz3.ab2@17907>    BCC.w overerr
0002D3D2 <AmiBlitz3.ab2@17908> BRA JL_0_B272
0002D3D8 <AmiBlitz3.ab2@17911>   CMP.l #$7fffffff,d3
0002D3DC <AmiBlitz3.ab2@17912>     BCC.w overerr
0002D3DE <AmiBlitz3.ab2@17915>   MOVEQ.l #-$01,D6
0002D3E0 <AmiBlitz3.ab2@17916>   MOVE.l D3,D0
0002D3E4 <AmiBlitz3.ab2@17917>   fmove.l d3,fp0
0002D3EA <AmiBlitz3.ab2@17918>   MOVEA.l _mathffpbase,A6
0002D3EE <AmiBlitz3.ab2@17919>    JSR -$24(A6)                                            ;integer to ffp
0002D3F0 <AmiBlitz3.ab2@17920>   MOVE.l D0,-(A7)
0002D3F4 <AmiBlitz3.ab2@17921>    BSR.w get1bytemain
0002D3F8 <AmiBlitz3.ab2@17922>    BSR.w tstnum
0002D3FC <AmiBlitz3.ab2@17923>    BNE.w syntaxerr
0002D3FE <AmiBlitz3.ab2@17924>   MOVEQ.l #$00,D3
0002D402 <AmiBlitz3.ab2@17925>    BSR.w atoi
0002D404 <AmiBlitz3.ab2@17926>   TST.l D3
0002D408 <AmiBlitz3.ab2@17927>    BEQ.w JL_0_B2E0
0002D40E <AmiBlitz3.ab2@17928>   TST.b fpu
0002D412 <AmiBlitz3.ab2@17929>   BNE 'l1
0002D418 <AmiBlitz3.ab2@17930>   CMP.l #$800000,D3
0002D41C <AmiBlitz3.ab2@17931>    BCC.w overerr
0002D420 <AmiBlitz3.ab2@17932> BRA 'l2
0002D426 <AmiBlitz3.ab2@17935>   CMP.l #$7fffffff,d3
0002D42A <AmiBlitz3.ab2@17936>   BCC overerr
0002D42E <AmiBlitz3.ab2@17939>   fmove.l d5,fp1
0002D430 <AmiBlitz3.ab2@17940>   MOVE.l D5,D0
0002D434 <AmiBlitz3.ab2@17941>    JSR -$24(A6)
0002D436 <AmiBlitz3.ab2@17942>   MOVE.l D0,D5
0002D43A <AmiBlitz3.ab2@17943>   fmove.l d3,fp2
0002D43C <AmiBlitz3.ab2@17944>   MOVE.l D3,D0
0002D440 <AmiBlitz3.ab2@17945>    JSR -$24(A6)
0002D444 <AmiBlitz3.ab2@17946>   fdiv.x fp1,fp2
0002D446 <AmiBlitz3.ab2@17947>   MOVE.l D5,D1
0002D44A <AmiBlitz3.ab2@17948>    JSR -$54(A6)
0002D44E <AmiBlitz3.ab2@17949>   fadd.x fp2,fp0
0002D450 <AmiBlitz3.ab2@17950>   MOVE.l (A7)+,D1
0002D454 <AmiBlitz3.ab2@17951>    JSR -$42(A6)
0002D456 <AmiBlitz3.ab2@17952>   MOVE.l D0,D3
0002D45A <AmiBlitz3.ab2@17953>    BSR.w reget
0002D45E <AmiBlitz3.ab2@17954>   ORI.w #$20,D0
0002D462 <AmiBlitz3.ab2@17955>   CMP.w #$65,D0
0002D466 <AmiBlitz3.ab2@17956>    BNE.w JL_0_B2D4
0002D46A <AmiBlitz3.ab2@17957>    BSR.w JL_0_B2E6
0002D46E <AmiBlitz3.ab2@17960>    BSR.w reget
0002D472 <AmiBlitz3.ab2@17961>    BSR.w JL_0_B480
0002D476 <AmiBlitz3.ab2@17962> BRA.w JL_0_B3DC
0002D478 <AmiBlitz3.ab2@17965>   MOVE.l (A7)+,D3
0002D47C <AmiBlitz3.ab2@17966> BRA.w JL_0_B2D4
0002D480 <AmiBlitz3.ab2@17969>   BSR.w get1bytemain
0002D484 <AmiBlitz3.ab2@17970>   CMP.w #$2B,D0
0002D488 <AmiBlitz3.ab2@17971>    BEQ.w JL_0_B30E
0002D48C <AmiBlitz3.ab2@17972>   CMP.w #$2D,D0
0002D490 <AmiBlitz3.ab2@17973>    BNE.w JL_0_B312
0002D494 <AmiBlitz3.ab2@17974>    BSR.w get1bytemain
0002D498 <AmiBlitz3.ab2@17975>    BSR.w getsign
0002D49A <AmiBlitz3.ab2@17976>   MOVE.l D3,D0
0002D49E <AmiBlitz3.ab2@17977>   fdiv.x fp1,fp0
0002D4A0 <AmiBlitz3.ab2@17978>   MOVE.l D4,D1
0002D4A4 <AmiBlitz3.ab2@17979>    JSR -$54(A6)
0002D4A6 <AmiBlitz3.ab2@17980>   MOVE.l D0,D3
0002D4A8 <AmiBlitz3.ab2@17981> RTS
0002D4AC <AmiBlitz3.ab2@17984>   BSR.w get1bytemain
0002D4B0 <AmiBlitz3.ab2@17987>   BSR.w getsign
0002D4B4 <AmiBlitz3.ab2@17988>   fmul.x fp1,fp0
0002D4B6 <AmiBlitz3.ab2@17989>   MOVE.l D3,D0
0002D4B8 <AmiBlitz3.ab2@17990>   MOVE.l D4,D1
0002D4BC <AmiBlitz3.ab2@17991>    JSR -$4E(A6)
0002D4BE <AmiBlitz3.ab2@17992>   MOVE.l D0,D3
0002D4C0 <AmiBlitz3.ab2@17993> RTS
0002D4C4 <AmiBlitz3.ab2@17996>   BSR.w tstnum
0002D4C8 <AmiBlitz3.ab2@17997>    BNE.w syntaxerr
0002D4CA <AmiBlitz3.ab2@17998>   MOVE.w D0,D4
0002D4CE <AmiBlitz3.ab2@17999>   SUBI.w #$30,D4
0002D4D2 <AmiBlitz3.ab2@18000>    BSR.w get1bytemain
0002D4D6 <AmiBlitz3.ab2@18001>    BSR.w tstnum
0002D4DA <AmiBlitz3.ab2@18002>    BNE.w getsign__skip
0002D4DE <AmiBlitz3.ab2@18003>   MULU #$A,D4
0002D4E2 <AmiBlitz3.ab2@18004>   SUBI.w #$30,D0
0002D4E4 <AmiBlitz3.ab2@18005>   ADD.w D0,D4
0002D4E8 <AmiBlitz3.ab2@18006>    BSR.w get1bytemain
0002D4EC <AmiBlitz3.ab2@18009>   CMP.w #$12,D4
0002D4F0 <AmiBlitz3.ab2@18010>    BHI.w overerr
0002D4F2 <AmiBlitz3.ab2@18011>   LSL.w #3,D4
0002D4F8 <AmiBlitz3.ab2@18012>   LEA fputab,a0
0002D4FA <AmiBlitz3.ab2@18013>   ADD.l d4,a0
0002D500 <AmiBlitz3.ab2@18014>   fmove.d 0(a0),fp1
0002D502 <AmiBlitz3.ab2@18015>   LSR.w #1,d4
0002D506 <AmiBlitz3.ab2@18016>   MOVE.l facts(PC,D4.W),D4
0002D508 <AmiBlitz3.ab2@18017> RTS
0002D550 <AmiBlitz3.ab2@18021>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002D554 <AmiBlitz3.ab2@18026>   Dc.l $80000041
0002D558 <AmiBlitz3.ab2@18027>   Dc.l $A0000044
0002D55C <AmiBlitz3.ab2@18028>   Dc.l $C8000047
0002D560 <AmiBlitz3.ab2@18029>   Dc.l $FA00004A
0002D564 <AmiBlitz3.ab2@18030>   Dc.l $9C40004E
0002D568 <AmiBlitz3.ab2@18031>   Dc.l $C3500051
0002D56C <AmiBlitz3.ab2@18032>   Dc.l $F4240054
0002D570 <AmiBlitz3.ab2@18033>   Dc.l $98968058
0002D574 <AmiBlitz3.ab2@18034>   Dc.l $BEBC205B
0002D578 <AmiBlitz3.ab2@18035>   Dc.l $EE6B285E
0002D57C <AmiBlitz3.ab2@18036>   Dc.l $9502F962
0002D580 <AmiBlitz3.ab2@18037>   Dc.l $BA43B765
0002D584 <AmiBlitz3.ab2@18038>   Dc.l $E8D4A568
0002D588 <AmiBlitz3.ab2@18039>   Dc.l $9184E76C
0002D58C <AmiBlitz3.ab2@18040>   Dc.l $B5E6A96F
0002D590 <AmiBlitz3.ab2@18041>   Dc.l $E35F2972
0002D594 <AmiBlitz3.ab2@18042>   Dc.l $8E1BCA76
0002D598 <AmiBlitz3.ab2@18043>   Dc.l $B1A2BD79
0002D59C <AmiBlitz3.ab2@18044>   Dc.l $DE0B6C7C
0002D59E <AmiBlitz3.ab2@18048>   MOVEQ.l #$01,D5
0002D5A0 <AmiBlitz3.ab2@18051>   LSL.l #1,D5
0002D5A2 <AmiBlitz3.ab2@18052>   MOVE.l D5,D1
0002D5A4 <AmiBlitz3.ab2@18053>   LSL.l #2,D5
0002D5A6 <AmiBlitz3.ab2@18054>   ADD.l D1,D5                                              ;divisor for frac convert!
0002D5A8 <AmiBlitz3.ab2@18055>   LSL.l #1,D3
0002D5AC <AmiBlitz3.ab2@18056>    BCS.w overerr
0002D5AE <AmiBlitz3.ab2@18057>   MOVE.l D3,D1
0002D5B0 <AmiBlitz3.ab2@18058>   LSL.l #1,D3
0002D5B4 <AmiBlitz3.ab2@18059>    BCS.w overerr
0002D5B6 <AmiBlitz3.ab2@18060>   LSL.l #1,D3
0002D5BA <AmiBlitz3.ab2@18061>    BCS.w overerr
0002D5BC <AmiBlitz3.ab2@18062>   ADD.l D1,D3
0002D5C0 <AmiBlitz3.ab2@18063>   SUBI.w #$30,D0
0002D5C2 <AmiBlitz3.ab2@18064>   ADD.l D0,D3
0002D5EE <AmiBlitz3.ab2@18065>    !fget                                                   ;bsr.w get1bytemain
0002D5F2 <AmiBlitz3.ab2@18066>    CMP.b #1,d0
0002D5F6 <AmiBlitz3.ab2@18067>    BNE 'cm1
0002D5F8 <AmiBlitz3.ab2@18068>    SUBQ.l #1,a5
0002D5FC <AmiBlitz3.ab2@18069>    BSR get1bytemain                                        ;??wy not !fget
0002D600 <AmiBlitz3.ab2@18072>   CMP.b #$7e,d0
0002D604 <AmiBlitz3.ab2@18073>    BNE 'cm2
0002D606 <AmiBlitz3.ab2@18074>    SUBQ.l #1,a5
0002D60A <AmiBlitz3.ab2@18075>    BSR get1bytemain
0002D60C <AmiBlitz3.ab2@18078>   TST.b d0
0002D610 <AmiBlitz3.ab2@18079>    BPL 'l10
0002D612 <AmiBlitz3.ab2@18080>    LSL.w #8,d0
0002D614 <AmiBlitz3.ab2@18081>    MOVE.b (a5)+,d0
0002D61A <AmiBlitz3.ab2@18082>    MOVE.w d0,lastchar
0002D62C <AmiBlitz3.ab2@18085>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002D630 <AmiBlitz3.ab2@18086>    BEQ.w atoi__loop
0002D632 <AmiBlitz3.ab2@18087> RTS
0002D634 <AmiBlitz3.ab2@18090> dfetch:  Ds.w 1                                            ;fetching data?
0002D638 <AmiBlitz3.ab2@18094>   MOVE.w dfetch(PC),D1
0002D63C <AmiBlitz3.ab2@18095>    BEQ.w JL_0_B3EC
0002D642 <AmiBlitz3.ab2@18096>   CLR.w dfetch
0002D644 <AmiBlitz3.ab2@18097> RTS
0002D64A <AmiBlitz3.ab2@18100>   MOVE.b d2,isconstantvalue
0002D650 <AmiBlitz3.ab2@18101>   MOVE.l d0,lastconstantvalue
0002D656 <AmiBlitz3.ab2@18102>   MOVE.w d2,imm_size
0002D660 <AmiBlitz3.ab2@18103>   MOVE.w regnum,imm_reg
0002D66A <AmiBlitz3.ab2@18104>   MOVE.l destpointer,imm_addr                           ; long
0002D66E <AmiBlitz3.ab2@18105>   CMP.w #$3,D2
0002D672 <AmiBlitz3.ab2@18106>   BEQ.w JL_0_B434
0002D676 <AmiBlitz3.ab2@18107>   CMP.w #$5,D2                                          ;float
0002D67A <AmiBlitz3.ab2@18108>   BEQ.w JL_0_B434
0002D67E <AmiBlitz3.ab2@18109>   CMP.w #$1,D2
0002D682 <AmiBlitz3.ab2@18110>   BEQ.w JL_0_B418
0002D686 <AmiBlitz3.ab2@18111>   CMP.w #$2,D2
0002D68A <AmiBlitz3.ab2@18112>   BEQ.w JL_0_B418
0002D68E <AmiBlitz3.ab2@18113>   CMP.w #$4,D2
0002D692 <AmiBlitz3.ab2@18114>   BEQ.w JL_0_B434
0002D696 <AmiBlitz3.ab2@18116> BRA.w mismatcherr
0002D69C <AmiBlitz3.ab2@18119>   MOVE.w regnum,D1
0002D69E <AmiBlitz3.ab2@18120>   LSL.w #8,D1
0002D6A0 <AmiBlitz3.ab2@18121>   LSL.w #1,D1
0002D6A4 <AmiBlitz3.ab2@18122>   ORI.w #$303C,D1
0002D6A8 <AmiBlitz3.ab2@18123>    BSR.w writeword
0002D6AA <AmiBlitz3.ab2@18124>   MOVE.w D0,D1
0002D6AE <AmiBlitz3.ab2@18125>    BSR.w writeword
0002D6B2 <AmiBlitz3.ab2@18126> BRA.w reget
0002D6B4 <AmiBlitz3.ab2@18129>   MOVEQ #0,d1
0002D6BA <AmiBlitz3.ab2@18130>   MOVE.w regnum,D1
0002D6C0 <AmiBlitz3.ab2@18131>   TST.b fpu
0002D6C4 <AmiBlitz3.ab2@18132>   BEQ 'f1
0002D6C8 <AmiBlitz3.ab2@18133>   CMP.w #5,d2
0002D6CC <AmiBlitz3.ab2@18134>   BEQ 'l10
0002D6D0 <AmiBlitz3.ab2@18135> BRA 'f2
0002D6D6 <AmiBlitz3.ab2@18138>   TST.b iee
0002D6DA <AmiBlitz3.ab2@18139>   BNE 'l10
0002D6DC <AmiBlitz3.ab2@18142>   LSL.w #8,D1
0002D6DE <AmiBlitz3.ab2@18143>   LSL.w #1,D1
0002D6E2 <AmiBlitz3.ab2@18144>   ORI.w #$203C,D1
0002D6E6 <AmiBlitz3.ab2@18145>    BSR.w writeword
0002D6E8 <AmiBlitz3.ab2@18146>   MOVE.l D0,D1
0002D6EC <AmiBlitz3.ab2@18147>    BSR.w writelong
0002D6F0 <AmiBlitz3.ab2@18148> BRA.w reget
0002D6F2 <AmiBlitz3.ab2@18151>   MOVEQ #5,d2
0002D6F4 <AmiBlitz3.ab2@18152>   ASL.l #7,d1
0002D6F6 <AmiBlitz3.ab2@18153>   SUBQ.l #8,a7
0002D6FC <AmiBlitz3.ab2@18158>       OR.l #$f23c4400,d1                                   ;fmove.s
0002D702 <AmiBlitz3.ab2@18159>        fmove.s fp0,0(a7)
0002D706 <AmiBlitz3.ab2@18161>   BSR writelong
0002D708 <AmiBlitz3.ab2@18162>   MOVE.l (a7)+,d1
0002D70C <AmiBlitz3.ab2@18163>   BSR writelong
0002D70E <AmiBlitz3.ab2@18164>   MOVE.l (a7)+,d1
0002D712 <AmiBlitz3.ab2@18168> BRA.w reget
0002D714 <AmiBlitz3.ab2@18174>  MOVE.l D3,D0
0002D716 <AmiBlitz3.ab2@18175>   TST.w D6
0002D71A <AmiBlitz3.ab2@18176>    BEQ.w JL_0_B46C
0002D720 <AmiBlitz3.ab2@18177>   MOVEA.l _mathffpbase,A6
0002D724 <AmiBlitz3.ab2@18178>    JSR -$1E(A6)
0002D728 <AmiBlitz3.ab2@18179>    BVC.w JL_0_B46C
0002D72A <AmiBlitz3.ab2@18180>   ADDQ.w #4,A7
0002D72E <AmiBlitz3.ab2@18181> BRA.w JL_0_B5A0
0002D730 <AmiBlitz3.ab2@18184> RTS
0002D732 <AmiBlitz3.ab2@18188>   MOVEQ.l #$00,D6
0002D736 <AmiBlitz3.ab2@18189>    fmove.l d3,fp0
0002D73A <AmiBlitz3.ab2@18192>   BSR.w JL_0_B480
0002D73E <AmiBlitz3.ab2@18193> BRA.w JL_0_B3DC
0002D740 <AmiBlitz3.ab2@18196>   MOVE.w D2,-(A7)
0002D744 <AmiBlitz3.ab2@18197>    BSR.w JL_0_BF6A
0002D746 <AmiBlitz3.ab2@18198>   MOVE.w (A7)+,D2
0002D748 <AmiBlitz3.ab2@18201>   TST.w D2
0002D74C <AmiBlitz3.ab2@18202>    BNE.w JL_0_B498
0002D74E <AmiBlitz3.ab2@18203>   TST.w D6
0002D752 <AmiBlitz3.ab2@18204>    BEQ.w JL_0_B492
0002D754 <AmiBlitz3.ab2@18205>   MOVEQ.l #$04,D2
0002D758 <AmiBlitz3.ab2@18206> BRA.w JL_0_B510
0002D75A <AmiBlitz3.ab2@18209>   MOVEQ.l #$02,D2
0002D75E <AmiBlitz3.ab2@18210> BRA.w JL_0_B4C4
0002D762 <AmiBlitz3.ab2@18213>   CMP.w #$1,D2
0002D766 <AmiBlitz3.ab2@18214>    BEQ.w JL_0_B4C4
0002D76A <AmiBlitz3.ab2@18215>   CMP.w #$2,D2
0002D76E <AmiBlitz3.ab2@18216>    BEQ.w JL_0_B4F8
0002D772 <AmiBlitz3.ab2@18217>   CMP.w #$3,D2
0002D776 <AmiBlitz3.ab2@18218>    BEQ.w JL_0_B57A
0002D77A <AmiBlitz3.ab2@18219>   CMP.w #$4,D2
0002D77E <AmiBlitz3.ab2@18220>    BEQ.w JL_0_B506
0002D782 <AmiBlitz3.ab2@18221>   CMP.w #$5,D2
0002D786 <AmiBlitz3.ab2@18222>    BEQ.w JL_0_B586
0002D78A <AmiBlitz3.ab2@18223> BRA.w mismatcherr
0002D78E <AmiBlitz3.ab2@18226>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002D794 <AmiBlitz3.ab2@18227>   CMP.l #$7f,D0
0002D798 <AmiBlitz3.ab2@18228>    BGT.w JL_0_B4DC
0002D79E <AmiBlitz3.ab2@18229>   CMP.l #$FFFFFF80,D0
0002D7A2 <AmiBlitz3.ab2@18230>    BGE.w JL_0_B59E
0002D7A4 <AmiBlitz3.ab2@18233>   MOVEQ.l #$02,D2                                          ;was 2 before
0002D7AA <AmiBlitz3.ab2@18234>   CMP.l #$7fff,D0
0002D7AE <AmiBlitz3.ab2@18235>    BGT.w JL_0_B4F2
0002D7B4 <AmiBlitz3.ab2@18236>   CMP.l #$FFFF8000,D0
0002D7B8 <AmiBlitz3.ab2@18237>    BGE.w JL_0_B59E
0002D7BA <AmiBlitz3.ab2@18240>   MOVEQ.l #$03,D2
0002D7BE <AmiBlitz3.ab2@18241> BRA.w JL_0_B59E
0002D7C0 <AmiBlitz3.ab2@18267>   TST.w D6
0002D7C4 <AmiBlitz3.ab2@18268>    BNE.w JL_0_B510
0002D7C8 <AmiBlitz3.ab2@18269>    BSR.w JL_0_B450
0002D7CC <AmiBlitz3.ab2@18270> BRA.w JL_0_B4DC
0002D7D0 <AmiBlitz3.ab2@18273>   BSR.w JL_0_B450
0002D7D2 <AmiBlitz3.ab2@18274>   TST.w D6
0002D7D6 <AmiBlitz3.ab2@18275>   BEQ.w JL_0_B560
0002D7DC <AmiBlitz3.ab2@18278>   CMP.l #MaxWordSgnd,D0
0002D7E0 <AmiBlitz3.ab2@18279>    BGT.w JL_0_B5A0
0002D7E6 <AmiBlitz3.ab2@18280>   CMP.l #$FFFF8000,D0
0002D7EA <AmiBlitz3.ab2@18281>    BLT.w JL_0_B5A0
0002D7EC <AmiBlitz3.ab2@18282>   MOVE.w D0,-(A7)
0002D7F0 <AmiBlitz3.ab2@18283>    JSR -$24(A6)
0002D7F2 <AmiBlitz3.ab2@18284>   MOVE.l D0,D1
0002D7F4 <AmiBlitz3.ab2@18285>   MOVE.l D3,D0
0002D7F8 <AmiBlitz3.ab2@18286>    JSR -$48(A6)
0002D7FE <AmiBlitz3.ab2@18287>   MOVE.l #$80000051,D1
0002D802 <AmiBlitz3.ab2@18288>    JSR -$4E(A6)
0002D806 <AmiBlitz3.ab2@18289>    JSR -$1E(A6)
0002D80A <AmiBlitz3.ab2@18290>    BEQ.w JL_0_B55A
0002D810 <AmiBlitz3.ab2@18291>   CMP.l #$10000,D0
0002D814 <AmiBlitz3.ab2@18292>    BCC.w JL_0_B55A
0002D816 <AmiBlitz3.ab2@18293>   MOVE.w D0,D1
0002D818 <AmiBlitz3.ab2@18294>   MOVE.w (A7)+,D0
0002D81A <AmiBlitz3.ab2@18295>   SWAP D0
0002D81C <AmiBlitz3.ab2@18296>   MOVE.w D1,D0
0002D820 <AmiBlitz3.ab2@18297> BRA.w JL_0_B59E
0002D822 <AmiBlitz3.ab2@18300>   ADDQ.w #2,A7
0002D826 <AmiBlitz3.ab2@18301> BRA.w JL_0_B5A0
0002D82C <AmiBlitz3.ab2@18304>   CMP.l #MaxWordSgnd,D0
0002D830 <AmiBlitz3.ab2@18305>    BGT.w JL_0_B4F2
0002D836 <AmiBlitz3.ab2@18306>   CMP.l #$FFFF8000,D0
0002D83A <AmiBlitz3.ab2@18307>    BLT.w JL_0_B4F2
0002D83C <AmiBlitz3.ab2@18308>   SWAP D0
0002D840 <AmiBlitz3.ab2@18309> BRA.w JL_0_B59E
0002D842 <AmiBlitz3.ab2@18312>   TST.w D6
0002D846 <AmiBlitz3.ab2@18313>   BNE.w JL_0_B5A0
0002D848 <AmiBlitz3.ab2@18314>   MOVE.l D3,D0
0002D84C <AmiBlitz3.ab2@18315> BRA.w JL_0_B59E
0002D84E <AmiBlitz3.ab2@18318>   TST.w D6
0002D852 <AmiBlitz3.ab2@18319>   BNE.w JL_0_B5A0
0002D854 <AmiBlitz3.ab2@18320>   MOVE.l D3,D0
0002D85A <AmiBlitz3.ab2@18321>   MOVEA.l _mathffpbase,A6
0002D85E <AmiBlitz3.ab2@18322>   JSR -$24(A6)
0002D860 <AmiBlitz3.ab2@18323>   MOVE.l D0,D3
0002D864 <AmiBlitz3.ab2@18324> BRA.w JL_0_B5A0
0002D866 <AmiBlitz3.ab2@18327> RTS
0002D868 <AmiBlitz3.ab2@18330>   MOVEQ.l #$05,D2
0002D86A <AmiBlitz3.ab2@18331>   MOVE.l D3,D0
0002D86C <AmiBlitz3.ab2@18332> RTS
0002D870 <AmiBlitz3.ab2@18336>             Ds.l 1                                         ;??Looks like unused data??
0002D874 <AmiBlitz3.ab2@18337> pushpc:     Ds.l 1
0002D878 <AmiBlitz3.ab2@18338> pushoff:    Ds.l 1
0002D87C <AmiBlitz3.ab2@18339> pushdooff:  Ds.l 1
0002D87E <AmiBlitz3.ab2@18340> pushclen:   Ds.w 1
0002D882 <AmiBlitz3.ab2@18341> pushat:     Ds.l 1
0002D88C <AmiBlitz3.ab2@18345>   MOVE.l destpointer,pushpc
0002D896 <AmiBlitz3.ab2@18346>   MOVE.l hunkoffsetbase,pushoff
0002D898 <AmiBlitz3.ab2@18347> RTS
0002D89C <AmiBlitz3.ab2@18351>   MOVEM.l D0-D1/A0-A1,-(A7)
0002D8A2 <AmiBlitz3.ab2@18352>   MOVE.l destpointer,D0
0002D8A6 <AmiBlitz3.ab2@18353>   MOVE.l pushpc(PC),D1
0002D8AC <AmiBlitz3.ab2@18354>   MOVE.l D1,destpointer
0002D8AE <AmiBlitz3.ab2@18355>   SUB.l D1,D0
0002D8B4 <AmiBlitz3.ab2@18356>   MOVE.w D0,pushclen
0002D8B8 <AmiBlitz3.ab2@18357>    BEQ.w JL_0_B636
0002D8BE <AmiBlitz3.ab2@18358>   MOVE.w dontwrite,D1
0002D8C2 <AmiBlitz3.ab2@18359>    BNE.w JL_0_B636
0002D8CA <AmiBlitz3.ab2@18360>    CMP.w #1000,pushclen
0002D8CE <AmiBlitz3.ab2@18361>    BGE conmemerr
0002D8D4 <AmiBlitz3.ab2@18362>    MOVE.l pushat,d0
0002D8D8 <AmiBlitz3.ab2@18363>    BNE 'nomem
0002D8DE <AmiBlitz3.ab2@18364>    MOVE.l #1024,d0
0002D8E0 <AmiBlitz3.ab2@18365>   MOVEQ.l #$01,D1
0002D8E6 <AmiBlitz3.ab2@18366>   MOVEA.l _execbase,A6
0002D8EC <AmiBlitz3.ab2@18367>   MOVE.l mempool,a0
0002D8F0 <AmiBlitz3.ab2@18368>   JSR _AllocPooled(a6)
0002D8F6 <AmiBlitz3.ab2@18370>   MOVE.l D0,pushat
0002D8F8 <AmiBlitz3.ab2@18373>   MOVEA.l D0,A0
0002D8FE <AmiBlitz3.ab2@18374>   MOVEA.l pushpc,A1
0002D904 <AmiBlitz3.ab2@18375>   MOVE.l A1,destpointer
0002D90A <AmiBlitz3.ab2@18376>   MOVE.w pushclen,D0
0002D90C <AmiBlitz3.ab2@18377>   LSR.w #1,D0
0002D90E <AmiBlitz3.ab2@18378>   SUBQ.w #1,D0
0002D910 <AmiBlitz3.ab2@18381>     MOVE.w (A1)+,(A0)+
0002D914 <AmiBlitz3.ab2@18382>   DBF D0,JL_0_B626
0002D91E <AmiBlitz3.ab2@18384>    MOVE.l hunkoffsetbase,pushdooff
0002D922 <AmiBlitz3.ab2@18387>   MOVEM.l (A7)+,D0-D1/A0-A1
0002D924 <AmiBlitz3.ab2@18388> RTS
0002D928 <AmiBlitz3.ab2@18392>   MOVEM.l D0-D1/A0-A1,-(A7)
0002D92A <AmiBlitz3.ab2@18393>   MOVEQ.l #$00,D0
0002D930 <AmiBlitz3.ab2@18394>   MOVE.w pushclen,D0
0002D934 <AmiBlitz3.ab2@18395>    BEQ.w JL_0_B6D8
0002D93A <AmiBlitz3.ab2@18396>   MOVE.l destpointer,D1
0002D940 <AmiBlitz3.ab2@18397>   ADD.l D0,destpointer
0002D946 <AmiBlitz3.ab2@18398>   TST.w dontwrite
0002D94A <AmiBlitz3.ab2@18399>    BNE.w JL_0_B6D8
0002D94C <AmiBlitz3.ab2@18400>   LSR.w #1,D0
0002D94E <AmiBlitz3.ab2@18401>   SUBQ.w #1,D0
0002D950 <AmiBlitz3.ab2@18402>   MOVEA.l D1,A1
0002D956 <AmiBlitz3.ab2@18403>   MOVEA.l pushat,A0
0002D95C <AmiBlitz3.ab2@18406>     CMPA.l destbufferend,A1
0002D960 <AmiBlitz3.ab2@18407>     BCS.w JL_0_B684
0002D968 <AmiBlitz3.ab2@18409>     MOVE.w #$FFFF,dontwrite
0002D96C <AmiBlitz3.ab2@18410>   BRA.w JL_0_B6D8
0002D96E <AmiBlitz3.ab2@18413>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002D972 <AmiBlitz3.ab2@18414>   DBF D0,JL_0_B66E
0002D978 <AmiBlitz3.ab2@18416>   SUB.l pushpc,D1
0002D97C <AmiBlitz3.ab2@18417>   BEQ.w JL_0_B6C2
0002D982 <AmiBlitz3.ab2@18418>   MOVEA.l pushdooff,A0
0002D988 <AmiBlitz3.ab2@18421>   CMPA.l pushoff,A0
0002D98C <AmiBlitz3.ab2@18422>   BEQ.w JL_0_B6C2
0002D990 <AmiBlitz3.ab2@18423>   MOVEA.l $4(A0),A1
0002D996 <AmiBlitz3.ab2@18424>   ADDA.l destbufferstart,A1
0002D99C <AmiBlitz3.ab2@18425>   CMPA.l destbufferend,A1
0002D9A0 <AmiBlitz3.ab2@18426>   BCC.w JL_0_B6BC
0002D9A4 <AmiBlitz3.ab2@18427>   ADD.l D1,$4(A0)
0002D9A6 <AmiBlitz3.ab2@18430>   MOVEA.l (A0),A0
0002D9AA <AmiBlitz3.ab2@18431> BRA.w JL_0_B69A
0002D9B0 <AmiBlitz3.ab2@18434>   MOVEA.l pushat,A1
0002D9B2 <AmiBlitz3.ab2@18435>   MOVEQ.l #$00,D0
0002D9B8 <AmiBlitz3.ab2@18436>   MOVE.w pushclen,D0
0002D9BE <AmiBlitz3.ab2@18437>   MOVEA.l _execbase,A6
0002D9C4 <AmiBlitz3.ab2@18438>   MOVE.l mempool,a0
0002D9C8 <AmiBlitz3.ab2@18442>   MOVEM.l (A7)+,D0-D1/A0-A1
0002D9CA <AmiBlitz3.ab2@18443> RTS
0002D9CC <AmiBlitz3.ab2@18446>   MOVE.l D1,-(A7)                                          ;array mul
0002D9CE <AmiBlitz3.ab2@18447>   MOVEQ.l #$00,D2
0002D9D0 <AmiBlitz3.ab2@18448>   MOVEQ.l #$0F,D3
0002D9D2 <AmiBlitz3.ab2@18451>     LSL.w #1,D1
0002D9D6 <AmiBlitz3.ab2@18452>     BCC.w JL_0_B6EE
0002D9D8 <AmiBlitz3.ab2@18453>     ADDQ.w #1,D2
0002D9DA <AmiBlitz3.ab2@18454>     MOVE.w D3,D4
0002D9DE <AmiBlitz3.ab2@18457>   DBF D3,JL_0_B6E4
0002D9E0 <AmiBlitz3.ab2@18459>   SUBQ.w #1,D2
0002D9E4 <AmiBlitz3.ab2@18460>    BNE.w JL_0_B726
0002D9E6 <AmiBlitz3.ab2@18461>   ADDQ.w #4,A7
0002D9E8 <AmiBlitz3.ab2@18462>   MOVE.w D4,D1
0002D9EC <AmiBlitz3.ab2@18463>    BEQ.w JL_0_B724
0002D9F0 <AmiBlitz3.ab2@18464>   CMP.w #$8,D1
0002D9F4 <AmiBlitz3.ab2@18465>    BCS.w JL_0_B712
0002D9F8 <AmiBlitz3.ab2@18466>   SUBI.w #$8,D1
0002D9FC <AmiBlitz3.ab2@18467>    BSR.w JL_0_B712
0002D9FE <AmiBlitz3.ab2@18468>   MOVEQ.l #$00,D1
0002DA00 <AmiBlitz3.ab2@18471>   LSL.w #8,D1
0002DA02 <AmiBlitz3.ab2@18472>   LSL.w #1,D1
0002DA06 <AmiBlitz3.ab2@18473>   ORI.w #$E188,D1
0002DA0C <AmiBlitz3.ab2@18474>   OR.w regnum,D1
0002DA10 <AmiBlitz3.ab2@18475> BRA.w writeword
0002DA12 <AmiBlitz3.ab2@18478> RTS
0002DA14 <AmiBlitz3.ab2@18481>   MOVEQ #0,d1
0002DA1A <AmiBlitz3.ab2@18482>   MOVE.w regnum,D1
0002DA1C <AmiBlitz3.ab2@18483>   LSL.l #8,D1
0002DA1E <AmiBlitz3.ab2@18485>   LSL.l #4,d1
0002DA24 <AmiBlitz3.ab2@18487>   OR.l #$4c3c0000,d1
0002DA2A <AmiBlitz3.ab2@18488>   OR.w regnum,d1
0002DA2E <AmiBlitz3.ab2@18489>   BSR.w writelong
0002DA30 <AmiBlitz3.ab2@18490>   MOVE.l (A7)+,D1
0002DA34 <AmiBlitz3.ab2@18492> BRA writelong
0002DA3A <AmiBlitz3.ab2@18495>   MOVE.l destpointer,-(A7)
0002DA3C <AmiBlitz3.ab2@18496>   MOVEQ.l #-$01,D7
0002DA40 <AmiBlitz3.ab2@18499>     BSR.w findhilib
0002DA44 <AmiBlitz3.ab2@18500>      BEQ.w JL_0_B8A4
0002DA48 <AmiBlitz3.ab2@18501>     TST.w $C(A2)
0002DA4C <AmiBlitz3.ab2@18502>      BPL.w JL_0_B746
0002DA50 <AmiBlitz3.ab2@18504>     MOVE.l $16(A2),D1
0002DA54 <AmiBlitz3.ab2@18505>     BEQ.w JL_0_B746
0002DA58 <AmiBlitz3.ab2@18507>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002DA5C <AmiBlitz3.ab2@18508>     CMP.w #-$2,D1
0002DA60 <AmiBlitz3.ab2@18509>      BNE.w JL_0_B772
0002DA64 <AmiBlitz3.ab2@18510>     BSR.w makevsize
0002DA68 <AmiBlitz3.ab2@18511> BRA.w JL_0_B7FE
0002DA6C <AmiBlitz3.ab2@18514>     CMP.w #-$5C4,D1
0002DA70 <AmiBlitz3.ab2@18515>      BNE.w JL_0_B790
0002DA74 <AmiBlitz3.ab2@18516>     MOVE.w #$7000,D1
0002DA7C <AmiBlitz3.ab2@18517>     BTST #$7,autorun
0002DA7E <AmiBlitz3.ab2@18518>     SNE D1
0002DA82 <AmiBlitz3.ab2@18519>     BSR.w writeword
0002DA86 <AmiBlitz3.ab2@18520> BRA.w JL_0_B7FE
0002DA8A <AmiBlitz3.ab2@18523>     CMP.w #-$12D,D1
0002DA8E <AmiBlitz3.ab2@18524>      BNE.w JL_0_B7A0
0002DA92 <AmiBlitz3.ab2@18525>     BSR.w makessize
0002DA96 <AmiBlitz3.ab2@18526> BRA.w JL_0_B7FE
0002DA9A <AmiBlitz3.ab2@18529>     CMP.w #-$1F5,D1
0002DA9E <AmiBlitz3.ab2@18530>      BNE.w JL_0_B7C2
0002DAA2 <AmiBlitz3.ab2@18531>     MOVE.w #$203C,D1
0002DAA6 <AmiBlitz3.ab2@18532>     BSR.w writeword
0002DAAA <AmiBlitz3.ab2@18533>     BSR.w addoff
0002DAB0 <AmiBlitz3.ab2@18534>     MOVE.l endop,D1
0002DAB4 <AmiBlitz3.ab2@18535>     BSR.w writelong
0002DAB8 <AmiBlitz3.ab2@18536> BRA.w JL_0_B7FE
0002DABC <AmiBlitz3.ab2@18539>     CMP.w #-$3E9,D1
0002DAC0 <AmiBlitz3.ab2@18540>      BNE.w JL_0_B7E4
0002DAC4 <AmiBlitz3.ab2@18541>     MOVE.w #$203C,D1
0002DAC8 <AmiBlitz3.ab2@18542>     BSR.w writeword
0002DACC <AmiBlitz3.ab2@18543>     BSR.w addoff
0002DAD2 <AmiBlitz3.ab2@18544>     MOVE.l data2at,D1
0002DAD6 <AmiBlitz3.ab2@18545>     BSR.w writelong
0002DADA <AmiBlitz3.ab2@18546> BRA.w JL_0_B7FE
0002DADE <AmiBlitz3.ab2@18549>     CMP.w #$1,D1
0002DAE2 <AmiBlitz3.ab2@18550>      BNE.w JL_0_B7FE
0002DAE6 <AmiBlitz3.ab2@18551>     MOVE.w #$203C,D1
0002DAEA <AmiBlitz3.ab2@18552>     BSR.w writeword
0002DAF0 <AmiBlitz3.ab2@18553>     MOVE.l ptr_seg_debugger,D1
0002DAF4 <AmiBlitz3.ab2@18554>     BSR.w writelong
0002DAF8 <AmiBlitz3.ab2@18557>     MOVE.l $16(A2),D1
0002DB00 <AmiBlitz3.ab2@18558>     MOVE.w #$FFFF,lasta6
0002DB04 <AmiBlitz3.ab2@18559>     BSR.w Amakelibsub
0002DB0A <AmiBlitz3.ab2@18560>     CMPI.w #$FFFE,$4(A2)
0002DB0E <AmiBlitz3.ab2@18561>      BNE.w JL_0_B83A
0002DB14 <AmiBlitz3.ab2@18562>     MOVE.l intdata1,D1
0002DB18 <AmiBlitz3.ab2@18563>      BEQ.w JL_0_B83A
0002DB1E <AmiBlitz3.ab2@18564>     MOVE.w putidata1,D1
0002DB22 <AmiBlitz3.ab2@18565>     BSR.w writeword
0002DB26 <AmiBlitz3.ab2@18566>     BSR.w addoff
0002DB2C <AmiBlitz3.ab2@18567>     MOVE.l intdata1,D1
0002DB30 <AmiBlitz3.ab2@18568>     BSR.w writelong
0002DB34 <AmiBlitz3.ab2@18571>     MOVE.w #$2B40,D1
0002DB38 <AmiBlitz3.ab2@18572>     TST.w $1A(A2)
0002DB3C <AmiBlitz3.ab2@18573>      BEQ.w JL_0_B746
0002DB40 <AmiBlitz3.ab2@18574>      BPL.w JL_0_B84E
0002DB44 <AmiBlitz3.ab2@18575>     MOVE.w #$3B40,D1
0002DB48 <AmiBlitz3.ab2@18578>     BSR.w writeword
0002DB4C <AmiBlitz3.ab2@18579>     MOVE.w $A(A2),D1
0002DB50 <AmiBlitz3.ab2@18580>      BSR.w writeword
0002DB56 <AmiBlitz3.ab2@18581>     CMPI.w #$FFFA,$4(A2)
0002DB5A <AmiBlitz3.ab2@18582>      BNE.w JL_0_B746
0002DB5C <AmiBlitz3.ab2@18583>     MOVE.w D7,-(A7)
0002DB62 <AmiBlitz3.ab2@18584>     MOVE.w numstatic,D4
0002DB66 <AmiBlitz3.ab2@18585>      BEQ.w JL_0_B882
0002DB6C <AmiBlitz3.ab2@18586>     MOVE.l staticdata,D3
0002DB72 <AmiBlitz3.ab2@18587>      JSR datastart
0002DB76 <AmiBlitz3.ab2@18588>     MOVE.w #$C500,D1
0002DB7A <AmiBlitz3.ab2@18589>      BSR.w tokejsr2
0002DB80 <AmiBlitz3.ab2@18592>     MOVE.w maxsused,D4
0002DB84 <AmiBlitz3.ab2@18593>      BEQ.w JL_0_B89E
0002DB8A <AmiBlitz3.ab2@18594>     MOVE.l maxsat,D3
0002DB90 <AmiBlitz3.ab2@18595>      JSR datastart
0002DB94 <AmiBlitz3.ab2@18596>     MOVE.w #$CF00,D1
0002DB98 <AmiBlitz3.ab2@18597>      BSR.w tokejsr2
0002DB9A <AmiBlitz3.ab2@18600>     MOVE.w (A7)+,D7
0002DB9E <AmiBlitz3.ab2@18601> BRA.w JL_0_B746
0002DBA4 <AmiBlitz3.ab2@18604>   MOVE.l destpointer,D1
0002DBA6 <AmiBlitz3.ab2@18605>   CMP.l (A7),D1
0002DBAA <AmiBlitz3.ab2@18606>    BNE.w JL_0_B8BC
0002DBB2 <AmiBlitz3.ab2@18607>   MOVE.w #$0008,noinits+2
0002DBB6 <AmiBlitz3.ab2@18608> BRA.w JL_0_B8E6
0002DBBC <AmiBlitz3.ab2@18611>   CLR.w noinits+2
0002DBC2 <AmiBlitz3.ab2@18612>   MOVE.w dontwrite,D1
0002DBC6 <AmiBlitz3.ab2@18613>    BNE.w JL_0_B8DE
0002DBCC <AmiBlitz3.ab2@18614>   TST.l newinitaddr
0002DBD0 <AmiBlitz3.ab2@18615>    BEQ 'l10
0002DBD6 <AmiBlitz3.ab2@18616>   MOVE.l newinitaddr,D2
0002DBDC <AmiBlitz3.ab2@18617>   SUB.l destbufferstart,D2
0002DBDE <AmiBlitz3.ab2@18618>   ADDQ.l #2,d2
0002DBE4 <AmiBlitz3.ab2@18619>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002DBE8 <AmiBlitz3.ab2@18621>   MOVE.w #$4EB9,(A0)+
0002DBEA <AmiBlitz3.ab2@18622>   MOVE.l (A7),(A0)+
0002DBEE <AmiBlitz3.ab2@18624> BRA 'l20
0002DBF4 <AmiBlitz3.ab2@18627>   MOVEA.l destbufferstart,A0                               ;write initcode
0002DBFA <AmiBlitz3.ab2@18628>   TST.b saved0
0002DBFE <AmiBlitz3.ab2@18629>   BEQ 'l1
0002DC02 <AmiBlitz3.ab2@18630>   MOVE.w #$23c0,(a0)+
0002DC04 <AmiBlitz3.ab2@18631>   MOVE.l a0,a1
0002DC06 <AmiBlitz3.ab2@18632>   ADDQ.l #6,a1
0002DC08 <AmiBlitz3.ab2@18633>   MOVE.l a1,(a0)+
0002DC0A <AmiBlitz3.ab2@18634>   MOVEQ.l #$02,D2
0002DC0E <AmiBlitz3.ab2@18635>   BSR.w addhunkoffset
0002DC12 <AmiBlitz3.ab2@18636>   MOVE.w #$6004,(a0)+
0002DC18 <AmiBlitz3.ab2@18637>   MOVE.l #$4e714e71,(a0)+
0002DC1C <AmiBlitz3.ab2@18640>   MOVE.w #$4EB9,(A0)+
0002DC1E <AmiBlitz3.ab2@18641>   MOVE.l (A7),(A0)+
0002DC20 <AmiBlitz3.ab2@18642>   MOVEQ #2,d2
0002DC26 <AmiBlitz3.ab2@18643>   TST.b saved0
0002DC2A <AmiBlitz3.ab2@18644>   BEQ 'l20
0002DC2C <AmiBlitz3.ab2@18645>   MOVEQ.l #14,D2
0002DC30 <AmiBlitz3.ab2@18648>   BSR.w addhunkoffset
0002DC34 <AmiBlitz3.ab2@18649>   MOVE.w #$2039,(a0)+
0002DC36 <AmiBlitz3.ab2@18650>   MOVE.l a1,(a0)+
0002DC38 <AmiBlitz3.ab2@18651>   MOVEQ.l #20,d2
0002DC3C <AmiBlitz3.ab2@18654>   BSR.w addhunkoffset
0002DC40 <AmiBlitz3.ab2@18657>   MOVE.w #$4E75,D1
0002DC44 <AmiBlitz3.ab2@18658>   BSR.w writeword
0002DC46 <AmiBlitz3.ab2@18661>   ADDQ.w #4,A7
0002DC48 <AmiBlitz3.ab2@18662> RTS
0002DC4C <AmiBlitz3.ab2@18667>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002DC52 <AmiBlitz3.ab2@18669>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002DC58 <AmiBlitz3.ab2@18671>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002DC5E <AmiBlitz3.ab2@18676>   MOVE.l stringbuffer,D1
0002DC62 <AmiBlitz3.ab2@18677> BRA.w makesize
0002DC64 <AmiBlitz3.ab2@18680>   MOVEQ.l #$00,D1
0002DC6A <AmiBlitz3.ab2@18681>   MOVE.w globalvarpointer,D1
0002DC6E <AmiBlitz3.ab2@18682>   SUBI.w #$8000,D1
0002DC72 <AmiBlitz3.ab2@18683>   BNE.w makesize
0002DC74 <AmiBlitz3.ab2@18684>     MOVEQ.l #$08,D1
0002DC76 <AmiBlitz3.ab2@18687>   MOVE.l D1,-(A7)
0002DC7A <AmiBlitz3.ab2@18688>   MOVE.w #$203C,D1
0002DC7E <AmiBlitz3.ab2@18689>   BSR.w writeword
0002DC80 <AmiBlitz3.ab2@18690>   MOVE.l (A7)+,D1
0002DC84 <AmiBlitz3.ab2@18691> BRA.w writelong
0002DC86 <AmiBlitz3.ab2@18699>   MOVEQ.l #$00,D1
0002DC8C <AmiBlitz3.ab2@18700>   MOVEA.l libpointer,A1
0002DC90 <AmiBlitz3.ab2@18703>     CMPA.w #$0,A1
0002DC94 <AmiBlitz3.ab2@18704>     BEQ.w findhilib__done
0002DC98 <AmiBlitz3.ab2@18705>       CMP.w $4(A1),D7
0002DC9C <AmiBlitz3.ab2@18706>       BLS.w findhilib__next
0002DCA0 <AmiBlitz3.ab2@18707>         CMP.w $4(A1),D1
0002DCA4 <AmiBlitz3.ab2@18708>         BCC.w findhilib__next
0002DCA8 <AmiBlitz3.ab2@18709>           MOVE.w $4(A1),D1
0002DCAA <AmiBlitz3.ab2@18710>           MOVEA.l A1,A2
0002DCAC <AmiBlitz3.ab2@18713>     MOVEA.l (A1),A1
0002DCB0 <AmiBlitz3.ab2@18714> BRA.w findhilib__loop
0002DCB2 <AmiBlitz3.ab2@18717>   MOVE.w D1,D7
0002DCB4 <AmiBlitz3.ab2@18718> RTS
0002DCB6 <AmiBlitz3.ab2@18726>   MOVEQ.l #-$01,D1
0002DCBC <AmiBlitz3.ab2@18727>   MOVEA.l libpointer,A1
0002DCC0 <AmiBlitz3.ab2@18730>     CMPA.w #$0,A1
0002DCC4 <AmiBlitz3.ab2@18731>      BEQ.w findlolib__done
0002DCC8 <AmiBlitz3.ab2@18732>     CMP.w $4(A1),D7
0002DCCC <AmiBlitz3.ab2@18733>      BCC.w findlolib__next
0002DCD0 <AmiBlitz3.ab2@18734>     CMP.w $4(A1),D1
0002DCD4 <AmiBlitz3.ab2@18735>      BLS.w findlolib__next
0002DCD8 <AmiBlitz3.ab2@18736>     MOVE.w $4(A1),D1
0002DCDA <AmiBlitz3.ab2@18737>     MOVEA.l A1,A2
0002DCDC <AmiBlitz3.ab2@18740>     MOVEA.l (A1),A1
0002DCE0 <AmiBlitz3.ab2@18741> BRA.w findlolib__loop
0002DCE2 <AmiBlitz3.ab2@18744>   MOVE.w D1,D7
0002DCE6 <AmiBlitz3.ab2@18745>   CMP.w #-$1,D1
0002DCE8 <AmiBlitz3.ab2@18746> RTS
0002DCEE <AmiBlitz3.ab2@18750>   ADDQ.w #1,globalvarpointer
0002DCF6 <AmiBlitz3.ab2@18751>   BCLR #$0,globalvarpointer+1
0002DCF8 <AmiBlitz3.ab2@18752>   MOVEQ.l #$00,D7
0002DCFC <AmiBlitz3.ab2@18755>     BSR.w findlolib
0002DD00 <AmiBlitz3.ab2@18756>     BEQ.w JL_0_BA74
0002DD04 <AmiBlitz3.ab2@18757>     TST.w $C(A2)
0002DD08 <AmiBlitz3.ab2@18758>     BPL.w JL_0_B99A
0002DD0A <AmiBlitz3.ab2@18759>     MOVEA.l A2,A1
0002DD0E <AmiBlitz3.ab2@18760>     ADDA.l $12(A1),A1
0002DD12 <AmiBlitz3.ab2@18761>     TST.w -$2(A1)
0002DD16 <AmiBlitz3.ab2@18762>     BEQ.w JL_0_BA34
0002DD1A <AmiBlitz3.ab2@18763>     MOVE.l -$A(A1),D1
0002DD1E <AmiBlitz3.ab2@18764>     LEA $6(A2,D1.L),A3
0002DD20 <AmiBlitz3.ab2@18767>       TST.w (A3)+
0002DD24 <AmiBlitz3.ab2@18768>       BEQ.w JL_0_B9CC
0002DD26 <AmiBlitz3.ab2@18769>         ADDQ.w #2,A3
0002DD2A <AmiBlitz3.ab2@18770> BRA.w JL_0_B9C0
0002DD2E <AmiBlitz3.ab2@18773>     TST.l $4(A3)
0002DD32 <AmiBlitz3.ab2@18774>     BEQ.w JL_0_BA34
0002DD36 <AmiBlitz3.ab2@18775>       MOVE.w freemax(PC),D1
0002DD3A <AmiBlitz3.ab2@18776>       BSR.w writeword
0002DD3E <AmiBlitz3.ab2@18777>       MOVE.w -$4(A1),D1
0002DD42 <AmiBlitz3.ab2@18778>       BSR.w writeword
0002DD48 <AmiBlitz3.ab2@18779>       MOVE.l free,D1
0002DD4C <AmiBlitz3.ab2@18780>       MOVE.w -$6(A1),D1
0002DD50 <AmiBlitz3.ab2@18781>       BSR.w writelong
0002DD56 <AmiBlitz3.ab2@18782>       MOVE.l destpointer,-(A7)
0002DD58 <AmiBlitz3.ab2@18783>       MOVEQ.l #$01,D1
0002DD5C <AmiBlitz3.ab2@18784>       MOVE.w -$2(A1),D2
0002DD5E <AmiBlitz3.ab2@18785>       LSL.w D2,D1
0002DD60 <AmiBlitz3.ab2@18786>       MOVE.w D1,-(A7)
0002DD64 <AmiBlitz3.ab2@18787>       MOVE.l -$A(A1),D1
0002DD68 <AmiBlitz3.ab2@18788>       BSR.w Amakelibsub
0002DD6C <AmiBlitz3.ab2@18789>       MOVE.w freemax3(PC),D1
0002DD70 <AmiBlitz3.ab2@18790>       BSR.w writeword
0002DD72 <AmiBlitz3.ab2@18791>       MOVE.w (A7)+,D1
0002DD76 <AmiBlitz3.ab2@18792>       BSR.w writeword
0002DD7A <AmiBlitz3.ab2@18793>       MOVE.l freemax2(PC),D1
0002DD7E <AmiBlitz3.ab2@18794>       BSR.w writelong
0002DD80 <AmiBlitz3.ab2@18795>       MOVE.l (A7)+,D1
0002DD86 <AmiBlitz3.ab2@18796>       SUB.l destpointer,D1
0002DD8A <AmiBlitz3.ab2@18797>       BSR.w writeword
0002DD8E <AmiBlitz3.ab2@18798>       MOVE.w freemax4(PC),D1
0002DD92 <AmiBlitz3.ab2@18799>       BSR.w writeword
0002DD96 <AmiBlitz3.ab2@18802>     MOVE.l $1C(A2),D1
0002DD9A <AmiBlitz3.ab2@18803>     BEQ.w JL_0_B99A
0002DD9E <AmiBlitz3.ab2@18805>     MOVE.w $4(A2),D1
0002DDA2 <AmiBlitz3.ab2@18806>     CMP.w #-$2,D1
0002DDA6 <AmiBlitz3.ab2@18807>     BNE.w JL_0_BA50
0002DDAA <AmiBlitz3.ab2@18808>       BSR.w makevsize
0002DDAE <AmiBlitz3.ab2@18809> BRA.w JL_0_BA60
0002DDB2 <AmiBlitz3.ab2@18812>     CMP.w #-$12D,D1
0002DDB6 <AmiBlitz3.ab2@18813>     BNE.w JL_0_BA60
0002DDBA <AmiBlitz3.ab2@18814>       BSR.w makessize
0002DDBE <AmiBlitz3.ab2@18815> BRA.w JL_0_BA60
0002DDC2 <AmiBlitz3.ab2@18818>     MOVE.l $1C(A2),D1
0002DDCA <AmiBlitz3.ab2@18819>     MOVE.w #$FFFF,lasta6
0002DDCE <AmiBlitz3.ab2@18820>     BSR.w Amakelibsub
0002DDD2 <AmiBlitz3.ab2@18821> BRA.w JL_0_B99A
0002DDD4 <AmiBlitz3.ab2@18824> RTS
0002DDD8 <AmiBlitz3.ab2@18828> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002DDDA <AmiBlitz3.ab2@18830> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002DDDE <AmiBlitz3.ab2@18831>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002DDE0 <AmiBlitz3.ab2@18832> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002DDE4 <AmiBlitz3.ab2@18833> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002DDEA <AmiBlitz3.ab2@18838>   TST.b debugmode
0002DDEE <AmiBlitz3.ab2@18839>    BEQ.b chkstak__skip
0002DDF4 <AmiBlitz3.ab2@18840>   TST.w debugversion
0002DDF8 <AmiBlitz3.ab2@18841>    BNE.b chkstak__skip
0002DDFC <AmiBlitz3.ab2@18842>   MOVE.w #$C308,D1
0002DE00 <AmiBlitz3.ab2@18843> BRA.w Atokejsr
0002DE02 <AmiBlitz3.ab2@18846> RTS
0002DE0A <AmiBlitz3.ab2@18850>   MOVE.w #$FFFF,lasta6
0002DE0E <AmiBlitz3.ab2@18855>   MOVEM.l D0-d7/A0-a6,-(A7)
0002DE16 <AmiBlitz3.ab2@18856>   MOVE.b #1,nostringopt
0002DE1C <AmiBlitz3.ab2@18857>   JSR searchinstr
0002DE1E <AmiBlitz3.ab2@18858>   MOVE.l A3,D1
0002DE20 <AmiBlitz3.ab2@18859>   SUB.l A2,D1
0002DE24 <AmiBlitz3.ab2@18860>   BSR.w Amakelibsub
0002DE28 <AmiBlitz3.ab2@18861>   MOVEM.l (A7)+,d0-d7/a0-a6
0002DE2A <AmiBlitz3.ab2@18862> RTS
0002DE30 <AmiBlitz3.ab2@18869>   MOVE.l libisat,-(A7)                                   ;library write
0002DE36 <AmiBlitz3.ab2@18870>   MOVE.l A2,libisat
0002DE38 <AmiBlitz3.ab2@18872>   MOVEA.l A1,A2
0002DE3A <AmiBlitz3.ab2@18873>   MOVE.w (A2)+,D1
0002DE40 <AmiBlitz3.ab2@18874>   MOVE.l a2,lastinstructionaddr
0002DE44 <AmiBlitz3.ab2@18875>   ANDI.w #$FF,D1
0002DE46 <AmiBlitz3.ab2@18876>   ADDA.w D1,A2
0002DE48 <AmiBlitz3.ab2@18877>   EXG.l D0,A2
0002DE4A <AmiBlitz3.ab2@18878>   ADDQ.l #1,D0
0002DE4E <AmiBlitz3.ab2@18879>   BCLR #$0,D0
0002DE50 <AmiBlitz3.ab2@18880>   EXG.l D0,A2
0002DE54 <AmiBlitz3.ab2@18881> BRA.w JL_0_BB08
0002DE5A <AmiBlitz3.ab2@18885>   MOVE.l libisat,-(A7)
0002DE60 <AmiBlitz3.ab2@18886>   MOVE.l A2,libisat
0002DE62 <AmiBlitz3.ab2@18887>   MOVEA.l A3,A2
0002DE66 <AmiBlitz3.ab2@18888> BRA.w JL_0_BB08
0002DE68 <AmiBlitz3.ab2@18892>   MOVE.l a1,-(a7)
0002DE6A <AmiBlitz3.ab2@18895>   MOVE.l d0,a0
0002DE6E <AmiBlitz3.ab2@18896>   MOVE.l $a(a0),d0
0002DE70 <AmiBlitz3.ab2@18897>   MOVE.l d0,a1
0002DE78 <AmiBlitz3.ab2@18898>   CMP.l #8,4(a1)
0002DE7C <AmiBlitz3.ab2@18899>   BLE 'norec
0002DE7E <AmiBlitz3.ab2@18900>   MOVE.l a0,-(a7)
0002DE84 <AmiBlitz3.ab2@18901>   MOVE.l typebase,-(a7)
0002DE86 <AmiBlitz3.ab2@18902>   MOVEQ #0,d0
0002DE8A <AmiBlitz3.ab2@18903>   MOVE.w 4(a0),d0
0002DE90 <AmiBlitz3.ab2@18904>   ADD.l d0,typebase
0002DE94 <AmiBlitz3.ab2@18905>   MOVE.l $4(a1),d0
0002DE98 <AmiBlitz3.ab2@18906>   BSR scantype
0002DE9E <AmiBlitz3.ab2@18907>   MOVE.l (a7)+,typebase
0002DEA0 <AmiBlitz3.ab2@18908>   MOVE.l (a7)+,a0
0002DEA6 <AmiBlitz3.ab2@18911>   CMP.l #newtype_string,d0
0002DEAA <AmiBlitz3.ab2@18912>   BNE 'nostring
0002DEB0 <AmiBlitz3.ab2@18913>   ADDQ #2,a2offset
0002DEB6 <AmiBlitz3.ab2@18914>   MOVE.l #$3f3c0000,d1
0002DEB8 <AmiBlitz3.ab2@18915>   MOVEQ #0,d0
0002DEBC <AmiBlitz3.ab2@18916>   MOVE.w 4(a0),d0
0002DEC2 <AmiBlitz3.ab2@18917>   ADD.l typebase,d0
0002DEC4 <AmiBlitz3.ab2@18918>   MOVE.w d0,d1
0002DEC8 <AmiBlitz3.ab2@18919>   BSR writelong
0002DECE <AmiBlitz3.ab2@18920>   TST.b debugmode
0002DED2 <AmiBlitz3.ab2@18921>   BEQ 'l1a
0002DED4 <AmiBlitz3.ab2@18922>   MOVE.l d1,-(a7)
0002DEDA <AmiBlitz3.ab2@18923>   MOVE.l #$c308,d1
0002DEE0 <AmiBlitz3.ab2@18924>   JSR Atokejsr
0002DEE2 <AmiBlitz3.ab2@18925>   MOVE.l (a7)+,d1
0002DEE6 <AmiBlitz3.ab2@18928>   TST.w 8(a0)
0002DEEA <AmiBlitz3.ab2@18929>   BEQ 'nostring
0002DEEE <AmiBlitz3.ab2@18930>   MOVEM.l d2/d3,-(a7)
0002DEF0 <AmiBlitz3.ab2@18931>   MOVE.l d1,d2
0002DEF2 <AmiBlitz3.ab2@18932>   MOVEQ #0,d3
0002DEF6 <AmiBlitz3.ab2@18933>   MOVE.w 8(a0),d3
0002DEF8 <AmiBlitz3.ab2@18934>   SUBQ.l #1,d3
0002DEFC <AmiBlitz3.ab2@18935>   BEQ 'nostring2
0002DEFE <AmiBlitz3.ab2@18938>   ADDQ.l #4,d2
0002DF00 <AmiBlitz3.ab2@18939>   MOVE.l d2,d1
0002DF04 <AmiBlitz3.ab2@18940>   BSR writelong
0002DF0A <AmiBlitz3.ab2@18941>   TST.b debugmode
0002DF0E <AmiBlitz3.ab2@18942>   BEQ 'l1
0002DF14 <AmiBlitz3.ab2@18943>   MOVE.l #$c308,d1
0002DF1A <AmiBlitz3.ab2@18944>   JSR Atokejsr
0002DF20 <AmiBlitz3.ab2@18947>   ADDQ #2,a2offset
0002DF22 <AmiBlitz3.ab2@18948>   SUBQ.l #1,d3
0002DF26 <AmiBlitz3.ab2@18949>   BNE 'loop
0002DF2A <AmiBlitz3.ab2@18952>   MOVEM.l (a7)+,d2/d3
0002DF2C <AmiBlitz3.ab2@18955>   MOVE.l (a0),d0
0002DF30 <AmiBlitz3.ab2@18956>   BNE 'more
0002DF32 <AmiBlitz3.ab2@18957>   MOVE.l (a7)+,a1
0002DF34 <AmiBlitz3.ab2@18958> RTS
0002DF38 <AmiBlitz3.ab2@18961> libisat:   Ds.l 1
0002DF3E <AmiBlitz3.ab2@18967>   MOVE.l libisat,-(A7)                                   
0002DF44 <AmiBlitz3.ab2@18968>   MOVE.l A2,libisat
0002DF48 <AmiBlitz3.ab2@18969>   LEA $6(A2,D1.L),A2
0002DF50 <AmiBlitz3.ab2@18973>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002DF54 <AmiBlitz3.ab2@18974>   BEQ 'dowritevar
0002DF5C <AmiBlitz3.ab2@18975>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002DF60 <AmiBlitz3.ab2@18976>   BEQ 'dowritevar
0002DF68 <AmiBlitz3.ab2@18977>   CMP.l #$3e175265,$1c(a2)
0002DF6C <AmiBlitz3.ab2@18978>   BEQ 'dowritevar
0002DF74 <AmiBlitz3.ab2@18979>   CMP.l #$3e165772,$1c(a2)
0002DF78 <AmiBlitz3.ab2@18980>   BNE 'nowritef
0002DF7C <AmiBlitz3.ab2@18983>   MOVEM.l a0-a2/d2,-(a7)
0002DF7E <AmiBlitz3.ab2@18984>   MOVEQ #0,d1
0002DF88 <AmiBlitz3.ab2@18985>   MOVE.l #0,typebase
0002DF8C <AmiBlitz3.ab2@18986>   MOVE.l $a(a3),a0
0002DF90 <AmiBlitz3.ab2@18987>   MOVE.l $4(a0),d0
0002DF96 <AmiBlitz3.ab2@18988>   CMP.l #8,d0
0002DF9A <AmiBlitz3.ab2@18989>   BLE 'notype
0002DF9E <AmiBlitz3.ab2@18990>   BSR scantype
0002DFA4 <AmiBlitz3.ab2@18993>   MOVE.l #$3f3c0000,d1
0002DFAA <AmiBlitz3.ab2@18994>   MOVE.w a2offset,d1
0002DFAE <AmiBlitz3.ab2@18995>   BSR writelong
0002DFB4 <AmiBlitz3.ab2@18996>   MOVE.l #$3f3c0000,d1
0002DFB8 <AmiBlitz3.ab2@18997>   MOVE.l $a(a3),a0
0002DFBC <AmiBlitz3.ab2@18998>   MOVE.w 8(a0),d1
0002DFC0 <AmiBlitz3.ab2@18999>   BSR writelong
0002DFC6 <AmiBlitz3.ab2@19000>   MOVE.l #$3f3cab12,d1
0002DFCA <AmiBlitz3.ab2@19001>   BSR writelong
0002DFD0 <AmiBlitz3.ab2@19002>   ADDQ.w #6,a2offset
0002DFD4 <AmiBlitz3.ab2@19003>   MOVEM.l (a7)+,a0-a2/d2
0002DFDA <AmiBlitz3.ab2@19006>   TST.b fpu
0002DFDE <AmiBlitz3.ab2@19007>   BEQ 'nofpu2
0002DFE6 <AmiBlitz3.ab2@19008>   CMP.l #$496e7400,$1a(a2)
0002DFEA <AmiBlitz3.ab2@19009>   BNE 'noint
0002DFEC <AmiBlitz3.ab2@19010>   MOVEQ #0,d1
0002DFF2 <AmiBlitz3.ab2@19011>   SUBQ.l #8,destpointer                                    ;fpu int
0002DFF8 <AmiBlitz3.ab2@19012>   CLR.w a2offset
0002DFFC <AmiBlitz3.ab2@19013>   CMP.b #2,d2
0002E000 <AmiBlitz3.ab2@19014>   BGT 'noword
0002E004 <AmiBlitz3.ab2@19015>   MOVE.w #$48c0,d1
0002E00A <AmiBlitz3.ab2@19016>   OR.w regnumstore,d1
0002E00E <AmiBlitz3.ab2@19017>   BSR writeword
0002E012 <AmiBlitz3.ab2@19018> BRA 'exit2
0002E016 <AmiBlitz3.ab2@19021>    CMP.b #3,d2
0002E01A <AmiBlitz3.ab2@19022>         BNE 'nolong
0002E01E <AmiBlitz3.ab2@19023> BRA 'exit2
0002E022 <AmiBlitz3.ab2@19026>    CMP.b #4,d2
0002E026 <AmiBlitz3.ab2@19027>         BNE 'noquick
0002E02A <AmiBlitz3.ab2@19028>         MOVE.w #$e080,d1
0002E030 <AmiBlitz3.ab2@19029>         OR.w regnumstore,d1
0002E034 <AmiBlitz3.ab2@19030>         BSR writeword
0002E038 <AmiBlitz3.ab2@19031>         MOVE.w #$e080,d1
0002E03E <AmiBlitz3.ab2@19032>         OR.w regnumstore,d1
0002E042 <AmiBlitz3.ab2@19033>         BSR writeword
0002E046 <AmiBlitz3.ab2@19034> BRA 'exit2
0002E048 <AmiBlitz3.ab2@19037>         MOVEQ #0,d0
0002E04A <AmiBlitz3.ab2@19038>         MOVEQ #0,d1
0002E050 <AmiBlitz3.ab2@19039>         MOVE.w regnumstore,d0
0002E052 <AmiBlitz3.ab2@19040>         ASL.l #7,d0
0002E058 <AmiBlitz3.ab2@19041>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002E05A <AmiBlitz3.ab2@19042>         OR.l d0,d1
0002E060 <AmiBlitz3.ab2@19044>         MOVE.l #$3f000000,d1
0002E062 <AmiBlitz3.ab2@19046>         MOVEQ #0,d0
0002E064 <AmiBlitz3.ab2@19047>         MOVEQ #0,d1
0002E06A <AmiBlitz3.ab2@19048>         MOVE.w regnumstore,d0
0002E06C <AmiBlitz3.ab2@19049>         ASL.l #7,d0
0002E06E <AmiBlitz3.ab2@19050>         MOVE.l d0,d1
0002E074 <AmiBlitz3.ab2@19051>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002E076 <AmiBlitz3.ab2@19052>         ASL.l #3,d0
0002E078 <AmiBlitz3.ab2@19053>         OR.l d0,d1
0002E07C <AmiBlitz3.ab2@19054>         BSR writelong
0002E07E <AmiBlitz3.ab2@19055>         MOVEQ #0,d0
0002E084 <AmiBlitz3.ab2@19056>         MOVE.w regnumstore,d0
0002E086 <AmiBlitz3.ab2@19057>         ASL.l #7,d0
0002E08C <AmiBlitz3.ab2@19058>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002E08E <AmiBlitz3.ab2@19059>         OR.l d0,d1
0002E090 <AmiBlitz3.ab2@19060>         ASL.l #1,d0
0002E092 <AmiBlitz3.ab2@19061>         ASL.l #8,d0
0002E094 <AmiBlitz3.ab2@19062>         OR.l d0,d1
0002E098 <AmiBlitz3.ab2@19063> BRA 'exit
0002E09E <AmiBlitz3.ab2@19066>   CMP.w #$3c01,24(a2)
0002E0A2 <AmiBlitz3.ab2@19067>   BNE 'noval
0002E0A4 <AmiBlitz3.ab2@19068>   MOVE.l a2,-(a7)
0002E0A8 <AmiBlitz3.ab2@19069>   BSR.w JL_0_BB14
0002E0AA <AmiBlitz3.ab2@19070>   MOVE.l (a7)+,a2
0002E0AE <AmiBlitz3.ab2@19071> BRA 'exit2
0002E0B6 <AmiBlitz3.ab2@19088>   CMP.l #$41627300,$1a(a2)
0002E0BA <AmiBlitz3.ab2@19089>   BNE 'noabs
0002E0BC <AmiBlitz3.ab2@19090>   MOVEQ #0,d1
0002E0C2 <AmiBlitz3.ab2@19091>   MOVE.w regnumstore,d1
0002E0C4 <AmiBlitz3.ab2@19092>   MOVE.w d1,d0
0002E0C6 <AmiBlitz3.ab2@19093>   ASL.w #7,d1
0002E0C8 <AmiBlitz3.ab2@19094>   ASL.w #8,d0
0002E0CA <AmiBlitz3.ab2@19095>   ASL.w #2,d0
0002E0CC <AmiBlitz3.ab2@19096>   OR.w d0,d1
0002E0D2 <AmiBlitz3.ab2@19097>   SUBQ.l #8,destpointer                                    ;fpu abs
0002E0D6 <AmiBlitz3.ab2@19098>   MOVEM.l d3/d1,-(a7)
0002E0DA <AmiBlitz3.ab2@19099>   MOVE.w #5,d3
0002E0DC <AmiBlitz3.ab2@19100>   EXG d2,d3
0002E0E2 <AmiBlitz3.ab2@19101>   MOVE.w regnum,-(a7)
0002E0EC <AmiBlitz3.ab2@19102>   MOVE.w regnumstore,regnum
0002E0F0 <AmiBlitz3.ab2@19103>   BSR writeconvertcode
0002E0F6 <AmiBlitz3.ab2@19104>   MOVE.w (a7)+,regnum
0002E0F8 <AmiBlitz3.ab2@19105>   EXG d2,d3
0002E0FC <AmiBlitz3.ab2@19106>   MOVEM.l (a7)+,d3/d1
0002E102 <AmiBlitz3.ab2@19107>   OR.l #$f2000018,d1
0002E108 <AmiBlitz3.ab2@19108>   CLR.w a2offset
0002E10C <AmiBlitz3.ab2@19109> BRA 'exit
0002E110 <AmiBlitz3.ab2@19112>   CMP.b #5,d2
0002E114 <AmiBlitz3.ab2@19113>   BNE 'nofpu2
0002E118 <AmiBlitz3.ab2@19114>   MOVE.b 24(a2),d0
0002E11C <AmiBlitz3.ab2@19115>   CMP.b #$60,d0                                            ;nolib $edxx
0002E120 <AmiBlitz3.ab2@19116>   BNE 'nofpu
0002E122 <AmiBlitz3.ab2@19117>   MOVEQ #0,d1
0002E128 <AmiBlitz3.ab2@19118>   MOVE.w regnumstore,d1
0002E12A <AmiBlitz3.ab2@19119>   MOVE.w d1,d0
0002E12C <AmiBlitz3.ab2@19120>   ASL.w #7,d1
0002E12E <AmiBlitz3.ab2@19121>   ASL.w #8,d0
0002E130 <AmiBlitz3.ab2@19122>   ASL.w #2,d0
0002E132 <AmiBlitz3.ab2@19123>   OR.w d0,d1
0002E136 <AmiBlitz3.ab2@19124>   MOVE.b 25(a2),d0
0002E13A <AmiBlitz3.ab2@19125>   CMP.b #5,d0
0002E13E <AmiBlitz3.ab2@19126>   BNE 'nocos
0002E144 <AmiBlitz3.ab2@19127>   OR.l #$f200001d,d1                                       ;fpu cos
0002E148 <AmiBlitz3.ab2@19128> BRA 'exit
0002E14C <AmiBlitz3.ab2@19131>   CMP.b #$c,d0
0002E150 <AmiBlitz3.ab2@19132>   BNE 'nosqr
0002E156 <AmiBlitz3.ab2@19133>   OR.l #$f2000004,d1                                       ;fpu sqr
0002E15A <AmiBlitz3.ab2@19134> BRA 'exit
0002E15E <AmiBlitz3.ab2@19137>   CMP.b #$d,d0
0002E162 <AmiBlitz3.ab2@19138>   BNE 'notan
0002E168 <AmiBlitz3.ab2@19139>   OR.l #$f200000f,d1                                       ;fpu tan
0002E16C <AmiBlitz3.ab2@19140> BRA 'exit
0002E170 <AmiBlitz3.ab2@19143>   CMP.b #$a,d0
0002E174 <AmiBlitz3.ab2@19144>   BNE 'nosin
0002E17A <AmiBlitz3.ab2@19145>   OR.l #$f200000e,d1                                       ;fpu sin
0002E17E <AmiBlitz3.ab2@19146> BRA 'exit
0002E182 <AmiBlitz3.ab2@19149>   CMP.b #$3,d0
0002E186 <AmiBlitz3.ab2@19150>   BNE 'noasin
0002E18C <AmiBlitz3.ab2@19151>   OR.l #$f200000c,d1                                       ;fpu asin
0002E190 <AmiBlitz3.ab2@19152> BRA 'exit
0002E194 <AmiBlitz3.ab2@19155>   CMP.b #$2,d0
0002E198 <AmiBlitz3.ab2@19156>   BNE 'noacos
0002E19E <AmiBlitz3.ab2@19157>   OR.l #$f200001c,d1                                       ;fpu acos
0002E1A2 <AmiBlitz3.ab2@19158> BRA 'exit
0002E1A6 <AmiBlitz3.ab2@19161>   CMP.b #$4,d0
0002E1AA <AmiBlitz3.ab2@19162>   BNE 'noatan
0002E1B0 <AmiBlitz3.ab2@19163>   OR.l #$f200000a,d1                                       ;fpu atan
0002E1B4 <AmiBlitz3.ab2@19164> BRA 'exit
0002E1B8 <AmiBlitz3.ab2@19167>   CMP.b #$e,d0
0002E1BC <AmiBlitz3.ab2@19168>   BNE 'nohtan
0002E1C2 <AmiBlitz3.ab2@19169>   OR.l #$f2000009,d1                                       ;fpu htan
0002E1C6 <AmiBlitz3.ab2@19170> BRA 'exit
0002E1CA <AmiBlitz3.ab2@19173>   CMP.b #$6,d0
0002E1CE <AmiBlitz3.ab2@19174>   BNE 'nohcos
0002E1D4 <AmiBlitz3.ab2@19175>   OR.l #$f2000019,d1                                       ;fpu hcos
0002E1D8 <AmiBlitz3.ab2@19176> BRA 'exit
0002E1DC <AmiBlitz3.ab2@19179>   CMP.b #$b,d0
0002E1E0 <AmiBlitz3.ab2@19180>   BNE 'nohsin
0002E1E6 <AmiBlitz3.ab2@19181>   OR.l #$f2000002,d1                                       ;fpu hsin
0002E1EA <AmiBlitz3.ab2@19182> BRA 'exit
0002E1EE <AmiBlitz3.ab2@19185>   CMP.b #$9,d0
0002E1F2 <AmiBlitz3.ab2@19186>   BNE 'nolog
0002E1F8 <AmiBlitz3.ab2@19187>   OR.l #$f2000014,d1                                       ;fpu log
0002E1FC <AmiBlitz3.ab2@19188> BRA 'exit
0002E200 <AmiBlitz3.ab2@19191>   CMP.b #$8,d0
0002E204 <AmiBlitz3.ab2@19192>   BNE 'nolog10
0002E20A <AmiBlitz3.ab2@19193>   OR.l #$f2000015,d1                                       ;fpu log10
0002E20E <AmiBlitz3.ab2@19194> BRA 'exit
0002E212 <AmiBlitz3.ab2@19197>   CMP.b #$7,d0
0002E216 <AmiBlitz3.ab2@19198>   BNE 'noexp
0002E21C <AmiBlitz3.ab2@19199>   OR.l #$f2000010,d1                                       ;fpu exp
0002E220 <AmiBlitz3.ab2@19200> BRA 'exit
0002E226 <AmiBlitz3.ab2@19203>   LEA fpuerr,a0
0002E228 <AmiBlitz3.ab2@19204>   MOVE.l a0,-(a7)
0002E22E <AmiBlitz3.ab2@19205> JMP handle_compileerror
0002E232 <AmiBlitz3.ab2@19209>   CMP.b #$3c,d0
0002E236 <AmiBlitz3.ab2@19210>   BNE 'nofpu2
0002E238 <AmiBlitz3.ab2@19211>   MOVEQ #0,d1
0002E23E <AmiBlitz3.ab2@19212>       MOVE.w regnumstore,d1
0002E240 <AmiBlitz3.ab2@19213>       MOVE.w d1,d0
0002E242 <AmiBlitz3.ab2@19214>       ASL.w #7,d1
0002E244 <AmiBlitz3.ab2@19215>       ASL.w #8,d0
0002E246 <AmiBlitz3.ab2@19216>       ASL.w #2,d0
0002E248 <AmiBlitz3.ab2@19217>       OR.w d0,d1
0002E24E <AmiBlitz3.ab2@19218>       CMP.b #$03,25(a2)
0002E252 <AmiBlitz3.ab2@19219>       BNE 'nosgn
0002E258 <AmiBlitz3.ab2@19222>       SUBQ.l #8,destpointer                                ;fpu sgn
0002E25E <AmiBlitz3.ab2@19223>         OR.l #$f200003a,d1
0002E262 <AmiBlitz3.ab2@19224>         BSR writelong
0002E268 <AmiBlitz3.ab2@19225>         CLR.w a2offset
0002E26E <AmiBlitz3.ab2@19226>          MOVE.l #$F28E0006,d1
0002E272 <AmiBlitz3.ab2@19227>          BSR writelong
0002E278 <AmiBlitz3.ab2@19228>   MOVE.l #$7000600a,d1
0002E27C <AmiBlitz3.ab2@19229>   BSR writelong
0002E282 <AmiBlitz3.ab2@19230>   MOVE.l #$70014840,d1
0002E286 <AmiBlitz3.ab2@19231>   BSR writelong
0002E28C <AmiBlitz3.ab2@19232>   MOVE.l #$F292,d1
0002E290 <AmiBlitz3.ab2@19233>   BSR writeword
0002E296 <AmiBlitz3.ab2@19234>   MOVE.l #$000470FF,d1
0002E29A <AmiBlitz3.ab2@19235> BRA 'exit
0002E2A2 <AmiBlitz3.ab2@19238>   CMP.l #"Frac",$1a(a2)
0002E2A6 <AmiBlitz3.ab2@19239>   BNE 'nofrac
0002E2AC <AmiBlitz3.ab2@19240> JMP notwork
0002E2B0 <AmiBlitz3.ab2@19281> BRA 'exit
0002E2B4 <AmiBlitz3.ab2@19285>   BSR.w JL_0_BB14                                          ;write lib code
0002E2BA <AmiBlitz3.ab2@19286>   MOVE.l (A7)+,libisat
0002E2BC <AmiBlitz3.ab2@19287> RTS
0002E2C0 <AmiBlitz3.ab2@19290>   BSR writelong
0002E2C6 <AmiBlitz3.ab2@19293>   MOVE.l (A7)+,libisat
0002E2C8 <AmiBlitz3.ab2@19294> RTS
0002E2CC <AmiBlitz3.ab2@19298>   BSR.w fetchregs
0002E2D2 <AmiBlitz3.ab2@19299>   TST.b debugmode
0002E2D6 <AmiBlitz3.ab2@19300>    BEQ.w JL_0_BB76
0002E2D8 <AmiBlitz3.ab2@19301>   MOVE.l (A2),D1
0002E2DC <AmiBlitz3.ab2@19302>   OR.l $8(A2),D1
0002E2E0 <AmiBlitz3.ab2@19303>   BCLR #$0,D1
0002E2E2 <AmiBlitz3.ab2@19304>   TST.l D1
0002E2E6 <AmiBlitz3.ab2@19305>    BEQ.w JL_0_BB76
0002E2E8 <AmiBlitz3.ab2@19306>   MOVE.l (A2)+,D1
0002E2EC <AmiBlitz3.ab2@19307>   BTST #$0,D1
0002E2F0 <AmiBlitz3.ab2@19308>    BEQ.w JL_0_BB60
0002E2F6 <AmiBlitz3.ab2@19309>   TST.w blitzmode
0002E2FA <AmiBlitz3.ab2@19310>    BPL.w blitzerr
0002E300 <AmiBlitz3.ab2@19311>   TST.b debugmode
0002E304 <AmiBlitz3.ab2@19312>    BEQ.w JL_0_BB5C
0002E306 <AmiBlitz3.ab2@19313>   MOVE.l D1,-(A7)
0002E30A <AmiBlitz3.ab2@19314>   MOVE.w #$C311,D1
0002E30E <AmiBlitz3.ab2@19315>    BSR.w makebtst
0002E310 <AmiBlitz3.ab2@19316>   MOVE.l (A7)+,D1
0002E314 <AmiBlitz3.ab2@19319>   BCLR #$0,D1
0002E316 <AmiBlitz3.ab2@19322>   TST.l D1
0002E31A <AmiBlitz3.ab2@19323>    BSR.w JL_0_BBC6
0002E31C <AmiBlitz3.ab2@19324>   MOVE.l (A2)+,D1
0002E320 <AmiBlitz3.ab2@19325>    BSR.w JL_0_BB98
0002E322 <AmiBlitz3.ab2@19326>   MOVE.l (A2)+,D1
0002E326 <AmiBlitz3.ab2@19327>    BSR.w JL_0_BBC6
0002E32A <AmiBlitz3.ab2@19328> BRA.w JL_0_BB90
0002E330 <AmiBlitz3.ab2@19331>   BTST #$0,$3(A2)
0002E334 <AmiBlitz3.ab2@19332>    BEQ.w JL_0_BB88
0002E338 <AmiBlitz3.ab2@19333>   MOVE.w blitzmode(PC),D1
0002E33C <AmiBlitz3.ab2@19334>    BPL.w blitzerr
0002E340 <AmiBlitz3.ab2@19337>   MOVE.l $4(A2),D1
0002E344 <AmiBlitz3.ab2@19338>    BSR.w JL_0_BB98
0002E34A <AmiBlitz3.ab2@19341>   MOVEA.l libisat,A2
0002E34C <AmiBlitz3.ab2@19342> RTS
0002E350 <AmiBlitz3.ab2@19345>   BTST #$0,D1
0002E354 <AmiBlitz3.ab2@19346>    BEQ.w JL_0_BBC4
0002E35A <AmiBlitz3.ab2@19347>   TST.w blitzmode
0002E35E <AmiBlitz3.ab2@19348>    BMI.w amigaerr
0002E364 <AmiBlitz3.ab2@19349>   TST.b debugmode
0002E368 <AmiBlitz3.ab2@19350>    BEQ.w JL_0_BBC0
0002E36A <AmiBlitz3.ab2@19351>   MOVE.l D1,-(A7)
0002E36E <AmiBlitz3.ab2@19352>   MOVE.w #$C312,D1
0002E372 <AmiBlitz3.ab2@19353>    BSR.w makebtst
0002E374 <AmiBlitz3.ab2@19354>   MOVE.l (A7)+,D1
0002E378 <AmiBlitz3.ab2@19357>   BCLR #$0,D1
0002E37A <AmiBlitz3.ab2@19360>   TST.l D1
0002E37E <AmiBlitz3.ab2@19363>    BEQ.w JL_0_BBD2
0002E380 <AmiBlitz3.ab2@19364>   MOVE.l A1,-(A7)
0002E384 <AmiBlitz3.ab2@19365>    BSR.w JL_0_BBD4
0002E386 <AmiBlitz3.ab2@19366>   MOVEA.l (A7)+,A1
0002E388 <AmiBlitz3.ab2@19369> RTS
0002E38E <AmiBlitz3.ab2@19372>   MOVEA.l libisat,A0
0002E394 <AmiBlitz3.ab2@19373>   TST.w cfetchmode
0002E398 <AmiBlitz3.ab2@19374>    BEQ.w JL_0_BBF6
0002E39A <AmiBlitz3.ab2@19375>   ADD.l A0,D1
0002E39C <AmiBlitz3.ab2@19376>   MOVE.l D1,-(A7)
0002E3A0 <AmiBlitz3.ab2@19377>   MOVE.w #$4EB9,D1
0002E3A4 <AmiBlitz3.ab2@19378>    BSR.w writeword
0002E3A6 <AmiBlitz3.ab2@19379>   MOVE.l (A7)+,D1
0002E3AA <AmiBlitz3.ab2@19380> BRA.w writelong
0002E3AE <AmiBlitz3.ab2@19383>   LEA $0(A0,D1.L),A1
0002E3B4 <AmiBlitz3.ab2@19384>   CLR.w inline
0002E3B8 <AmiBlitz3.ab2@19387>   CMPI.b #$A0,(A1)+
0002E3BC <AmiBlitz3.ab2@19388>    BNE.w JL_0_BC68
0002E3BE <AmiBlitz3.ab2@19389>   TST.b (A1)+
0002E3C2 <AmiBlitz3.ab2@19390>    BEQ.w JL_0_BC18
0002E3C8 <AmiBlitz3.ab2@19391>   CMPI.b #$1,-$1(A1)
0002E3CC <AmiBlitz3.ab2@19392>    BEQ.w JL_0_BC24
0002E3D2 <AmiBlitz3.ab2@19395>   MOVE.w (A1)+,inline
0002E3D4 <AmiBlitz3.ab2@19396>   ADDQ.l #4,D1
0002E3D8 <AmiBlitz3.ab2@19397> BRA.w JL_0_BC00
0002E3DE <AmiBlitz3.ab2@19400>   TST.w blitzmode
0002E3E2 <AmiBlitz3.ab2@19401>    BPL.w JL_0_BC4A
0002E3E8 <AmiBlitz3.ab2@19402>   TST.b debugmode
0002E3EC <AmiBlitz3.ab2@19403>    BEQ.w JL_0_BC40
0002E3F0 <AmiBlitz3.ab2@19404>   MOVE.w #$C311,D1
0002E3F4 <AmiBlitz3.ab2@19405>    BSR.w makebtst
0002E3F6 <AmiBlitz3.ab2@19408>   MOVE.l (A1)+,D1
0002E3FA <AmiBlitz3.ab2@19409>   LEA $0(A0,D1.L),A1
0002E3FE <AmiBlitz3.ab2@19410> BRA.w JL_0_BC00
0002E404 <AmiBlitz3.ab2@19413>   TST.b debugmode
0002E408 <AmiBlitz3.ab2@19414>    BEQ.w JL_0_BC60
0002E40A <AmiBlitz3.ab2@19415>   MOVE.l D1,-(A7)
0002E40E <AmiBlitz3.ab2@19416>   MOVE.w #$C312,D1
0002E412 <AmiBlitz3.ab2@19417>    BSR.w makebtst
0002E414 <AmiBlitz3.ab2@19418>   MOVE.l (A7)+,D1
0002E416 <AmiBlitz3.ab2@19421>   ADDQ.w #4,A1
0002E418 <AmiBlitz3.ab2@19422>   ADDQ.l #6,D1
0002E41C <AmiBlitz3.ab2@19423> BRA.w JL_0_BC00
0002E422 <AmiBlitz3.ab2@19426>   TST.w inline
0002E426 <AmiBlitz3.ab2@19427>    BEQ.w JL_0_BC7E
0002E428 <AmiBlitz3.ab2@19428>   SUBQ.w #1,A1
0002E42A <AmiBlitz3.ab2@19429>   MOVEA.l A1,A0
0002E42E <AmiBlitz3.ab2@19430>   ADDA.w inline(PC),A1
0002E432 <AmiBlitz3.ab2@19431> BRA.w pokecode2
0002E436 <AmiBlitz3.ab2@19434>   MOVEM.l a0/D1,-(A7)
0002E43C <AmiBlitz3.ab2@19435>   TST.w debugversion
0002E440 <AmiBlitz3.ab2@19436>   BEQ 'l11
0002E448 <AmiBlitz3.ab2@19437>   BTST #$7,link_debuginfo
0002E44C <AmiBlitz3.ab2@19438>   BEQ.w 'l11
0002E452 <AmiBlitz3.ab2@19439>   MOVE.l lastinstruction,d1
0002E456 <AmiBlitz3.ab2@19440>   BEQ 'l11
0002E45C <AmiBlitz3.ab2@19441>   CLR.l lastinstruction
0002E462 <AmiBlitz3.ab2@19442>   CMP.l #$e000,d1
0002E466 <AmiBlitz3.ab2@19443>   BGE 'ln99
0002E46C <AmiBlitz3.ab2@19444>   LEA notf,a0
0002E472 <AmiBlitz3.ab2@19445>   CMP.l #$c601,d1
0002E476 <AmiBlitz3.ab2@19446>   BNE 'ln1
0002E47C <AmiBlitz3.ab2@19447>   LEA strcpy,a0
0002E480 <AmiBlitz3.ab2@19448> BRA 'ln3
0002E486 <AmiBlitz3.ab2@19451>   CMP.l #$c700,d1
0002E48A <AmiBlitz3.ab2@19452>   BNE 'ln2
0002E490 <AmiBlitz3.ab2@19453>   LEA strvar,a0
0002E494 <AmiBlitz3.ab2@19454> BRA 'ln3
0002E49A <AmiBlitz3.ab2@19457>   CMP.l #$ce00,d1
0002E49E <AmiBlitz3.ab2@19458>   BNE 'ln4
0002E4A4 <AmiBlitz3.ab2@19459>   LEA strcmp,a0
0002E4A8 <AmiBlitz3.ab2@19460> BRA 'ln3
0002E4AE <AmiBlitz3.ab2@19463>   CMP.l #$ca00,d1
0002E4B2 <AmiBlitz3.ab2@19464>   BNE 'ln5
0002E4B8 <AmiBlitz3.ab2@19465>   LEA qmul,a0
0002E4BC <AmiBlitz3.ab2@19466> BRA 'ln3
0002E4C2 <AmiBlitz3.ab2@19469>   CMP.l #$d000,d1
0002E4C6 <AmiBlitz3.ab2@19470>      BNE 'ln6
0002E4CC <AmiBlitz3.ab2@19471>      LEA _MaxLen,a0
0002E4D0 <AmiBlitz3.ab2@19472> BRA 'ln3
0002E4D6 <AmiBlitz3.ab2@19475>   CMP.l #$cb00,d1
0002E4DA <AmiBlitz3.ab2@19476>   BNE 'ln3
0002E4E0 <AmiBlitz3.ab2@19477>   LEA qdiv,a0
0002E4E4 <AmiBlitz3.ab2@19478> BRA 'ln3
0002E4E6 <AmiBlitz3.ab2@19481>   MOVE.l d1,a0
0002E4EA <AmiBlitz3.ab2@19482>   LEA $8(a0),a0
0002E4EE <AmiBlitz3.ab2@19485>   CMP.w #$ffff,(a0)+
0002E4F2 <AmiBlitz3.ab2@19486>   BNE 'l1
0002E4F6 <AmiBlitz3.ab2@19487>   LEA 6(a0),a0
0002E4FA <AmiBlitz3.ab2@19490>   MOVEM.l a1/a2/d7/d2,-(a7)
0002E4FC <AmiBlitz3.ab2@19491>   MOVEQ #0,d2
0002E502 <AmiBlitz3.ab2@19492>   LEA ptr_parameterstore,a1
0002E504 <AmiBlitz3.ab2@19495>   ADDQ.l #1,d2
0002E506 <AmiBlitz3.ab2@19496>   MOVE.b (a0)+,d0
0002E50A <AmiBlitz3.ab2@19497> 
0002E50E <AmiBlitz3.ab2@19498>   BNE 'nodollar
0002E512 <AmiBlitz3.ab2@19499>   MOVE.b #"S",d0
0002E516 <AmiBlitz3.ab2@19501>   CMP.b #"?",d0
0002E51A <AmiBlitz3.ab2@19502>   BEQ 'nolabelwrite
0002E51C <AmiBlitz3.ab2@19503>   MOVE.b d0,(a1)+
0002E520 <AmiBlitz3.ab2@19504>   BNE 'l2
0002E526 <AmiBlitz3.ab2@19505>   MOVE.w #"__",-1(a1)
0002E528 <AmiBlitz3.ab2@19506>   ADDQ.l #2,d2
0002E52C <AmiBlitz3.ab2@19507>   CLR.b 1(a1)
0002E532 <AmiBlitz3.ab2@19508>   JSR findlabel2
0002E536 <AmiBlitz3.ab2@19509>   BEQ 'l3
0002E53C <AmiBlitz3.ab2@19510>   JSR addlabelhash
0002E540 <AmiBlitz3.ab2@19513>   CLR.l 4(a2)
0002E544 <AmiBlitz3.ab2@19514>   MOVE.l $14(a7),a0
0002E548 <AmiBlitz3.ab2@19515>   MOVE.l $10(a7),d1
0002E54C <AmiBlitz3.ab2@19516>   SUB.l $12(a0),d1
0002E550 <AmiBlitz3.ab2@19517>   ADD.l $28(a0),d1
0002E554 <AmiBlitz3.ab2@19518>   MOVE.l d1,8(a2)
0002E558 <AmiBlitz3.ab2@19519> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002E55E <AmiBlitz3.ab2@19522>   TST.b typecheck
0002E562 <AmiBlitz3.ab2@19523>   BEQ 'p1
0002E568 <AmiBlitz3.ab2@19524>   MOVE.l lasttoken,d1
0002E56E <AmiBlitz3.ab2@19525>   CMP.l #$da01,d1                                          ;poke
0002E572 <AmiBlitz3.ab2@19526>   BEQ 'lp1
0002E578 <AmiBlitz3.ab2@19527>   CMP.l #$da02,d1                                          ;peek
0002E57C <AmiBlitz3.ab2@19528>   BNE 'p1
0002E582 <AmiBlitz3.ab2@19531>   TST.b peekaddrsize
0002E586 <AmiBlitz3.ab2@19532>   BEQ 'p1
0002E58E <AmiBlitz3.ab2@19533>   CMP.b #3,peekaddrsize
0002E592 <AmiBlitz3.ab2@19534>   BNE errormsg_onlylong
0002E598 <AmiBlitz3.ab2@19535>   CLR.b peekaddrsize
0002E59E <AmiBlitz3.ab2@19543>    TST.b fpu
0002E5A2 <AmiBlitz3.ab2@19544>   BNE 'optf
0002E5A8 <AmiBlitz3.ab2@19545>   TST.b fast
0002E5AC <AmiBlitz3.ab2@19546>   BEQ JL11a2
0002E5B4 <AmiBlitz3.ab2@19553>   CMP.l #"Poke",20(a2)                                     ;poke
0002E5B8 <AmiBlitz3.ab2@19554>   BNE peekopt
0002E5BC <AmiBlitz3.ab2@19555>   TST.b 24(a2)
0002E5C0 <AmiBlitz3.ab2@19556>   BNE peekopt
0002E5C4 <AmiBlitz3.ab2@19557>   CMP.b #3,d2
0002E5C8 <AmiBlitz3.ab2@19558>   BNE 'lw1
0002E5CE <AmiBlitz3.ab2@19561>   MOVE.l #$21821990,d1
0002E5D2 <AmiBlitz3.ab2@19562> BRA.s 'lpx
0002E5D6 <AmiBlitz3.ab2@19565>   CMP.b #2,d2
0002E5DA <AmiBlitz3.ab2@19566>   BNE 'lb1
0002E5E0 <AmiBlitz3.ab2@19567>   MOVE.l #$31821990,d1
0002E5E4 <AmiBlitz3.ab2@19568> BRA.s 'lpx
0002E5E8 <AmiBlitz3.ab2@19571>   CMP.b #1,d2
0002E5EC <AmiBlitz3.ab2@19572>   BNE 'lp3
0002E5F2 <AmiBlitz3.ab2@19573>   MOVE.l #$11821990,d1
0002E5F6 <AmiBlitz3.ab2@19574> BRA.s 'lpx
0002E5FA <AmiBlitz3.ab2@19577>   CMP.b #5,d2
0002E5FE <AmiBlitz3.ab2@19578>     BNE JL11a2
0002E604 <AmiBlitz3.ab2@19579>     TST.b fpu
0002E608 <AmiBlitz3.ab2@19580>     BEQ 'll1
0002E60E <AmiBlitz3.ab2@19581>      MOVE.l destpointer,a4
0002E616 <AmiBlitz3.ab2@19582>     CMP.l #$f22d4500,-6(a4)
0002E61A <AmiBlitz3.ab2@19583>     BNE 'noglob
0002E620 <AmiBlitz3.ab2@19584>     TST.b doublepeek
0002E624 <AmiBlitz3.ab2@19585>     BNE 'noglob
0002E62A <AmiBlitz3.ab2@19586>     MOVE.w -2(a4),-4(a4)
0002E630 <AmiBlitz3.ab2@19587>     MOVE.w #$21ad,-6(a4)
0002E636 <AmiBlitz3.ab2@19588>     MOVE.w #$1990,-2(a4)
0002E63E <AmiBlitz3.ab2@19589>     MOVE.w #9,peeksize
0002E640 <AmiBlitz3.ab2@19590>     ADDQ #8,a7
0002E642 <AmiBlitz3.ab2@19591> RTS
0002E64A <AmiBlitz3.ab2@19594>     CMP.l #$f22c4500,-6(a4)
0002E64E <AmiBlitz3.ab2@19595>     BNE 'nolocal
0002E654 <AmiBlitz3.ab2@19596>     MOVE.w -2(a4),-4(a4)
0002E65A <AmiBlitz3.ab2@19597>     TST.b doublepeek                                       ;dont move longfix on double floats
0002E65E <AmiBlitz3.ab2@19598>     BNE 'nolocal
0002E664 <AmiBlitz3.ab2@19599>     MOVE.w #$21ac,-6(a4)
0002E66A <AmiBlitz3.ab2@19600>     MOVE.w #$1990,-2(a4)
0002E672 <AmiBlitz3.ab2@19601>     MOVE.w #9,peeksize
0002E674 <AmiBlitz3.ab2@19602>     ADDQ #8,a7
0002E676 <AmiBlitz3.ab2@19603> RTS
0002E67A <AmiBlitz3.ab2@19606>     MOVE.w #$f230,d1
0002E67E <AmiBlitz3.ab2@19607>     BSR writeword
0002E684 <AmiBlitz3.ab2@19608>   MOVE.l #$65001990,d1
0002E68A <AmiBlitz3.ab2@19609>   TST.b doublepeek
0002E68E <AmiBlitz3.ab2@19610>   BEQ 'lpx
0002E694 <AmiBlitz3.ab2@19611>   OR.l   #$10000000,d1
0002E696 <AmiBlitz3.ab2@19615>   ADDQ #8,a7
0002E69E <AmiBlitz3.ab2@19616>   MOVE.w #9,peeksize
0002E6A2 <AmiBlitz3.ab2@19617> BRA writelong
0002E6AA <AmiBlitz3.ab2@19620>   CMP.l #"Peek",20(a2)
0002E6AE <AmiBlitz3.ab2@19621>   BNE 'l10
0002E6B2 <AmiBlitz3.ab2@19622>   TST.b 24(a2)
0002E6B6 <AmiBlitz3.ab2@19623>   BNE 'l10
0002E6BE <AmiBlitz3.ab2@19624>   CMP.w #7,peeksize
0002E6C2 <AmiBlitz3.ab2@19625>   BEQ 'l10
0002E6CA <AmiBlitz3.ab2@19626>    CMP.w #3,peeksize
0002E6CE <AmiBlitz3.ab2@19627>    BNE.s 'lw1
0002E6D4 <AmiBlitz3.ab2@19630>   MOVE.l #$20301990,d1
0002E6D8 <AmiBlitz3.ab2@19631> BRA exitjsr
0002E6E0 <AmiBlitz3.ab2@19634>   CMP.w #2,peeksize
0002E6E4 <AmiBlitz3.ab2@19635>    BNE.s 'lb1
0002E6EA <AmiBlitz3.ab2@19636>    MOVE.l #$30301990,d1
0002E6EE <AmiBlitz3.ab2@19637> BRA exitjsr
0002E6F6 <AmiBlitz3.ab2@19640>   CMP.w #1,peeksize
0002E6FA <AmiBlitz3.ab2@19641>    BNE.s 'lf1
0002E700 <AmiBlitz3.ab2@19642>    MOVE.l #$10301990,d1
0002E704 <AmiBlitz3.ab2@19643> BRA exitjsr
0002E70C <AmiBlitz3.ab2@19646>   CMP.w #5,peeksize
0002E710 <AmiBlitz3.ab2@19647>    BNE 'l10
0002E716 <AmiBlitz3.ab2@19648>    TST.b fpu
0002E71A <AmiBlitz3.ab2@19649>    BEQ 'll1
0002E71E <AmiBlitz3.ab2@19650>    MOVE.w #$f230,d1
0002E722 <AmiBlitz3.ab2@19651>    BSR writeword
0002E724 <AmiBlitz3.ab2@19652>    MOVEQ #0,d1
0002E72A <AmiBlitz3.ab2@19653>    MOVE.w tempregnum,d1
0002E72C <AmiBlitz3.ab2@19654>    ASL.l #7,d1
0002E72E <AmiBlitz3.ab2@19655>    ASL.l #8,d1
0002E730 <AmiBlitz3.ab2@19656>    ASL.l #8,d1
0002E736 <AmiBlitz3.ab2@19657>    ADD.l #$44001990,d1
0002E73C <AmiBlitz3.ab2@19658>     TST.b doublepeek
0002E740 <AmiBlitz3.ab2@19659>     BEQ 'lpx2
0002E746 <AmiBlitz3.ab2@19660>     OR.l   #$10000000,d1
0002E74A <AmiBlitz3.ab2@19662> BRA exitjsr
0002E74E <AmiBlitz3.ab2@19666>   MOVE.w #$4EB9,D1
0002E752 <AmiBlitz3.ab2@19667>    BSR.w writeword                                         ;writesysjsr
0002E756 <AmiBlitz3.ab2@19668>   MOVEM.l (A7)+,a0/D1
0002E75C <AmiBlitz3.ab2@19669>    JSR addoff
0002E760 <AmiBlitz3.ab2@19670>   SUB.l $12(A0),D1
0002E764 <AmiBlitz3.ab2@19671>   ADD.l $28(A0),D1
0002E768 <AmiBlitz3.ab2@19672> BRA.w writelong
0002E76A <AmiBlitz3.ab2@19677>   MOVE.w D1,-(A7)
0002E76E <AmiBlitz3.ab2@19678>   MOVE.w tstmode(PC),D1
0002E772 <AmiBlitz3.ab2@19679>    BSR.w writeword
0002E776 <AmiBlitz3.ab2@19680>    BSR.w getbbase
0002E77A <AmiBlitz3.ab2@19681>    BSR.w writeword
0002E77C <AmiBlitz3.ab2@19682>   MOVE.w (A7)+,D1
0002E780 <AmiBlitz3.ab2@19683>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002E784 <AmiBlitz3.ab2@19684>    BSR.w Atokejsr
0002E788 <AmiBlitz3.ab2@19685>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002E78A <AmiBlitz3.ab2@19686> RTS
0002E78E <AmiBlitz3.ab2@19694>   MOVE.w blitzoff(PC),D1
0002E792 <AmiBlitz3.ab2@19695>   CMP.w #-$1,D1
0002E796 <AmiBlitz3.ab2@19696>    BNE.w getbbase__done
0002E79C <AmiBlitz3.ab2@19697>   ADDQ.w #1,globalvarpointer
0002E7A4 <AmiBlitz3.ab2@19698>   BCLR #$0,globalvarpointer+1
0002E7AA <AmiBlitz3.ab2@19699>   MOVE.w globalvarpointer,D1
0002E7B0 <AmiBlitz3.ab2@19700>   MOVE.w D1,blitzoff
0002E7B6 <AmiBlitz3.ab2@19701>   ADDQ.w #2,globalvarpointer
0002E7B8 <AmiBlitz3.ab2@19704> RTS
0002E7BC <AmiBlitz3.ab2@19708> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002E7BE <AmiBlitz3.ab2@19711> inline:     Ds.w 1
0002E7C0 <AmiBlitz3.ab2@19712> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002E7C2 <AmiBlitz3.ab2@19713> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002E7C4 <AmiBlitz3.ab2@19717>   MOVE.w (A2)+,D1
0002E7C8 <AmiBlitz3.ab2@19718>    BEQ.w fetchregs__done
0002E7CA <AmiBlitz3.ab2@19719>   MOVE.w (A2)+,D2
0002E7CE <AmiBlitz3.ab2@19720>    BSR.w toreg
0002E7D2 <AmiBlitz3.ab2@19721> BRA.w fetchregs
0002E7D4 <AmiBlitz3.ab2@19724> RTS
0002E7D8 <AmiBlitz3.ab2@19729>   CMP.w #-$100,D2
0002E7DC <AmiBlitz3.ab2@19730>    BCC.w toreg__yeah
0002E7E0 <AmiBlitz3.ab2@19732>   BCLR #$F,D2
0002E7E4 <AmiBlitz3.ab2@19733>    BEQ.w toreg__nobm
0002E7EA <AmiBlitz3.ab2@19735>   TST.w blitzmode
0002E7EE <AmiBlitz3.ab2@19736>    BMI.w toreg__yeah
0002E7F0 <AmiBlitz3.ab2@19737> RTS
0002E7F4 <AmiBlitz3.ab2@19740>   BCLR #$E,D2
0002E7F8 <AmiBlitz3.ab2@19741>    BEQ.w toreg__yeah
0002E7FE <AmiBlitz3.ab2@19743>   TST.w blitzmode
0002E802 <AmiBlitz3.ab2@19744>    BPL.w toreg__yeah
0002E804 <AmiBlitz3.ab2@19745> RTS
0002E80A <AmiBlitz3.ab2@19748>   JSR uselib
0002E80C <AmiBlitz3.ab2@19749>   TST.b D2
0002E810 <AmiBlitz3.ab2@19750>    BEQ.w toreg__norm
0002E814 <AmiBlitz3.ab2@19751>   CMP.b #$4,D2
0002E818 <AmiBlitz3.ab2@19752>    BNE.w toreg__suv
0002E81C <AmiBlitz3.ab2@19753>   MOVE.w #$0004,-(A7)
0002E822 <AmiBlitz3.ab2@19754>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002E826 <AmiBlitz3.ab2@19755> BRA.w toreg__sendmd
0002E82A <AmiBlitz3.ab2@19758>   CMP.b #$3,D2
0002E82E <AmiBlitz3.ab2@19759>    BNE.w toreg__notnmax
0002E830 <AmiBlitz3.ab2@19760>   CLR.w -(A7)
0002E836 <AmiBlitz3.ab2@19761>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002E838 <AmiBlitz3.ab2@19767>   LSR.w #8,D2
0002E83C <AmiBlitz3.ab2@19768>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002E840 <AmiBlitz3.ab2@19769>   BTST #$7,D2
0002E844 <AmiBlitz3.ab2@19770>    BEQ.w toreg__skipad
0002E848 <AmiBlitz3.ab2@19771>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002E84C <AmiBlitz3.ab2@19772>   CMP.w #$16,D2
0002E850 <AmiBlitz3.ab2@19773>    BNE.w toreg__skipad
0002E858 <AmiBlitz3.ab2@19774>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002E85C <AmiBlitz3.ab2@19777>   ANDI.w #$7,D2
0002E85E <AmiBlitz3.ab2@19778>   LSL.w #8,D2
0002E860 <AmiBlitz3.ab2@19779>   LSL.w #1,D2
0002E862 <AmiBlitz3.ab2@19780>   OR.w D2,D1
0002E866 <AmiBlitz3.ab2@19781>    BSR.w writeword
0002E86A <AmiBlitz3.ab2@19782>   MOVE.l $12(A1),D1
0002E86C <AmiBlitz3.ab2@19783>   ADD.l (A7)+,D1
0002E870 <AmiBlitz3.ab2@19784>   MOVE.w $0(A1,D1.L),D1
0002E872 <AmiBlitz3.ab2@19785>   ADD.w (A7)+,D1
0002E876 <AmiBlitz3.ab2@19786> BRA.w writeword
0002E878 <AmiBlitz3.ab2@19789>   MOVE.w D2,-(A7)
0002E87A <AmiBlitz3.ab2@19790>   LSR.w #8,D2
0002E87E <AmiBlitz3.ab2@19791>   CMP.w #$16,D2
0002E882 <AmiBlitz3.ab2@19792>    BNE.w toreg__isnta6
0002E88A <AmiBlitz3.ab2@19793>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002E88E <AmiBlitz3.ab2@19796>   MOVE.l $12(A1),D1                                        ;objectspace
0002E892 <AmiBlitz3.ab2@19797>   MOVE.w -$6(A1,D1.L),-(A7)
0002E896 <AmiBlitz3.ab2@19798>    BSR.w makeregop
0002E89A <AmiBlitz3.ab2@19799>    BSR.w writeword
0002E89C <AmiBlitz3.ab2@19800>   MOVE.w (A7)+,D1
0002E89E <AmiBlitz3.ab2@19801>   MOVE.w (A7)+,D2
0002E8A0 <AmiBlitz3.ab2@19802>   TST.b D2
0002E8A4 <AmiBlitz3.ab2@19803>    BPL.w toreg__skippy1
0002E8A8 <AmiBlitz3.ab2@19808>    BSR.w writeword                                         ;move.l x(a5),dn
0002E8AA <AmiBlitz3.ab2@19809>   MOVE.w D2,-(A7)                                          ;store reg used
0002E8AE <AmiBlitz3.ab2@19811>   ADDA.l $12(A1),A1
0002E8B0 <AmiBlitz3.ab2@19812>   MOVE.b D2,D1
0002E8B4 <AmiBlitz3.ab2@19813>   ANDI.w #$7,D1
0002E8BA <AmiBlitz3.ab2@19815>   TST.b debugmode
0002E8BE <AmiBlitz3.ab2@19816>    BEQ.w toreg__norerr
0002E8C0 <AmiBlitz3.ab2@19818>   MOVE.w D1,-(A7)
0002E8C2 <AmiBlitz3.ab2@19819>   LSL.w #8,D1
0002E8C4 <AmiBlitz3.ab2@19820>   LSL.w #1,D1
0002E8C8 <AmiBlitz3.ab2@19821>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002E8CC <AmiBlitz3.ab2@19822>    BSR.w writeword
0002E8D0 <AmiBlitz3.ab2@19823>   MOVE.w -$4(A1),D1
0002E8D4 <AmiBlitz3.ab2@19824>    BSR.w writeword
0002E8D8 <AmiBlitz3.ab2@19825>   MOVE.l maxchk(PC),D1                                  ;bcs
0002E8DC <AmiBlitz3.ab2@19826>    BSR.w writelong
0002E8DE <AmiBlitz3.ab2@19827>   MOVE.l A2,-(A7)
0002E8E2 <AmiBlitz3.ab2@19828>   MOVE.w #$C30A,D1
0002E8E6 <AmiBlitz3.ab2@19829>    BSR.w Atokejsr
0002E8E8 <AmiBlitz3.ab2@19830>   MOVEA.l (A7)+,A2
0002E8EA <AmiBlitz3.ab2@19831>   MOVE.w (A7)+,D1
0002E8EE <AmiBlitz3.ab2@19834>   MOVE.w -$2(A1),D2                                        ;shift amount
0002E8F2 <AmiBlitz3.ab2@19837>   CMP.w #$9,D2
0002E8F6 <AmiBlitz3.ab2@19838>    BCS.w toreg__simp
0002E8FA <AmiBlitz3.ab2@19839>   MOVEM.w D1-D2,-(A7)
0002E8FC <AmiBlitz3.ab2@19841>   MOVEQ.l #$00,D2                                          ;!!!!!
0002E8FE <AmiBlitz3.ab2@19843>   LSL.w #8,D2
0002E900 <AmiBlitz3.ab2@19844>   LSL.w #1,D2
0002E902 <AmiBlitz3.ab2@19845>   OR.w D2,D1
0002E906 <AmiBlitz3.ab2@19846>   OR.w lsldn(PC),D1
0002E90A <AmiBlitz3.ab2@19847>    BSR.w writeword
0002E90E <AmiBlitz3.ab2@19848>   MOVEM.w (A7)+,D1-D2
0002E910 <AmiBlitz3.ab2@19849>   SUBQ.w #8,D2
0002E914 <AmiBlitz3.ab2@19850> BRA.w toreg__shloop
0002E916 <AmiBlitz3.ab2@19853>   MOVE.w D1,-(A7)
0002E91A <AmiBlitz3.ab2@19854>   OR.w #$48c0,d1
0002E91E <AmiBlitz3.ab2@19855>   BSR writeword
0002E920 <AmiBlitz3.ab2@19856>   MOVE.w (a7),d1
0002E922 <AmiBlitz3.ab2@19857>   TST.w D2
0002E926 <AmiBlitz3.ab2@19858>   BEQ.w toreg__simp2
0002E92A <AmiBlitz3.ab2@19860>   ANDI.w #$7,D2                                            ;?????
0002E92C <AmiBlitz3.ab2@19862>   LSL.w #8,D2
0002E92E <AmiBlitz3.ab2@19863>   LSL.w #1,D2
0002E930 <AmiBlitz3.ab2@19864>   OR.w D2,D1
0002E934 <AmiBlitz3.ab2@19865>   OR.w lsldn(PC),D1
0002E938 <AmiBlitz3.ab2@19866>    BSR.w writeword
0002E93A <AmiBlitz3.ab2@19872>   MOVE.w (A7)+,D1
0002E93E <AmiBlitz3.ab2@19873>   ANDI.w #$7,D1
0002E942 <AmiBlitz3.ab2@19874>   OR.w maxdo(PC),D1
0002E944 <AmiBlitz3.ab2@19875>   MOVE.w (A7)+,D2
0002E946 <AmiBlitz3.ab2@19876>   LSL.w #1,D2
0002E94A <AmiBlitz3.ab2@19877>   ANDI.w #$E00,D2
0002E94C <AmiBlitz3.ab2@19878>   OR.w D2,D1
0002E950 <AmiBlitz3.ab2@19879> BRA.w writeword
0002E954 <AmiBlitz3.ab2@19882>   CMP.b #$1,D2
0002E958 <AmiBlitz3.ab2@19883>    BEQ.w toreg__skippy
0002E95A <AmiBlitz3.ab2@19887>   ADDQ.w #4,D1
0002E960 <AmiBlitz3.ab2@19889>   TST.b debugmode
0002E964 <AmiBlitz3.ab2@19890>    BEQ.w toreg__skippy
0002E968 <AmiBlitz3.ab2@19892>    BSR.w writeword
0002E96A <AmiBlitz3.ab2@19893>   SWAP D1
0002E96E <AmiBlitz3.ab2@19894>   MOVE.w toreg__theretest(PC),D1
0002E970 <AmiBlitz3.ab2@19895>   SWAP D1
0002E974 <AmiBlitz3.ab2@19896>    BSR.w writelong
0002E978 <AmiBlitz3.ab2@19897>   MOVE.l toreg__theretest+4(PC),D1
0002E97C <AmiBlitz3.ab2@19898>    BSR.w writelong
0002E980 <AmiBlitz3.ab2@19899>   MOVE.l toreg__theretest+8(PC),D1
0002E984 <AmiBlitz3.ab2@19900> BRA.w writelong
0002E988 <AmiBlitz3.ab2@19903> BRA.w writeword
0002E98C <AmiBlitz3.ab2@19908>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0002E990 <AmiBlitz3.ab2@19909>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0002E992 <AmiBlitz3.ab2@19910>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0002E994 <AmiBlitz3.ab2@19911>             Dc.b $4E,$40                                   ;TRAP   #00
0002E996 <AmiBlitz3.ab2@19916>   LSR.w #8,D2
0002E99A <AmiBlitz3.ab2@19917>   CMP.b #$16,D2
0002E99E <AmiBlitz3.ab2@19918>    BNE.w toreg__nota6
0002E9A2 <AmiBlitz3.ab2@19919>   MOVE.w $A(A1),D1
0002E9A8 <AmiBlitz3.ab2@19920>   CMP.w lasta6,D1
0002E9AC <AmiBlitz3.ab2@19921>    BEQ.w toreg__sk
0002E9B2 <AmiBlitz3.ab2@19922>   MOVE.w D1,lasta6
0002E9B6 <AmiBlitz3.ab2@19925>    BSR.w makeregop
0002E9BA <AmiBlitz3.ab2@19926>   TST.w $1A(A1)
0002E9BE <AmiBlitz3.ab2@19927>    BPL.w toreg__long
0002E9C2 <AmiBlitz3.ab2@19928>   CMP.w stackop(PC),D1
0002E9C6 <AmiBlitz3.ab2@19929>    BNE.w toreg__notst
0002E9CC <AmiBlitz3.ab2@19930>   SUBQ.w #2,a2offset
0002E9D0 <AmiBlitz3.ab2@19933>    ORI.w #$1000,D1
0002E9D4 <AmiBlitz3.ab2@19936>    BSR.w writeword
0002E9D8 <AmiBlitz3.ab2@19937>   MOVE.w $A(A1),D1
0002E9DC <AmiBlitz3.ab2@19938>    BSR.w writeword
0002E9DE <AmiBlitz3.ab2@19941> RTS
0002E9E0 <AmiBlitz3.ab2@19945> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0002E9E4 <AmiBlitz3.ab2@19946> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0002E9EA <AmiBlitz3.ab2@19947>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0002E9EC <AmiBlitz3.ab2@19950> 
0002E9EE <AmiBlitz3.ab2@19953>             Dc.b $00,$00
0002E9F2 <AmiBlitz3.ab2@19954> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0002E9F6 <AmiBlitz3.ab2@19961>   CMP.b #$FF,D2
0002E9FA <AmiBlitz3.ab2@19962>    BNE.w makeregop__notst
0002E9FE <AmiBlitz3.ab2@19963>   MOVE.w stackop(PC),D1
0002EA04 <AmiBlitz3.ab2@19964>   ADDQ.w #4,a2offset
0002EA06 <AmiBlitz3.ab2@19965> RTS
0002EA08 <AmiBlitz3.ab2@19968>   MOVE.l A3,-(A7)
0002EA0E <AmiBlitz3.ab2@19969>   LEA regtransd,A3
0002EA12 <AmiBlitz3.ab2@19970>   BTST #$4,D2
0002EA16 <AmiBlitz3.ab2@19971>    BEQ.w makeregop__skip
0002EA1C <AmiBlitz3.ab2@19972>   LEA regtransa,A3
0002EA20 <AmiBlitz3.ab2@19975>   ANDI.w #$7,D2
0002EA22 <AmiBlitz3.ab2@19976>   MOVE.w D2,D1
0002EA24 <AmiBlitz3.ab2@19977>   LSL.w #8,D1
0002EA26 <AmiBlitz3.ab2@19978>   LSL.w #1,D1
0002EA28 <AmiBlitz3.ab2@19979>   OR.w (A3),D1
0002EA2A <AmiBlitz3.ab2@19980>   MOVEA.l (A7)+,A3
0002EA2C <AmiBlitz3.ab2@19981> RTS
0002EA30 <AmiBlitz3.ab2@19987>   CMP.w #$3C,D0
0002EA34 <AmiBlitz3.ab2@19988>    BCS.w ifchar__no
0002EA38 <AmiBlitz3.ab2@19989>   CMP.w #$3E,D0
0002EA3C <AmiBlitz3.ab2@19990>    BHI.w ifchar__no
0002EA40 <AmiBlitz3.ab2@19991>   SUBI.w #$3C,D0
0002EA42 <AmiBlitz3.ab2@19992>   CMP.w D0,D0
0002EA44 <AmiBlitz3.ab2@19995> RTS
0002EA4E <AmiBlitz3.ab2@20000>   MOVE.w oldqflag,instringon
0002EA54 <AmiBlitz3.ab2@20001>   MOVEA.l lastsourcepos,A5
0002EA5A <AmiBlitz3.ab2@20006>   MOVE.w regnum,-(A7)
0002EA60 <AmiBlitz3.ab2@20007>   CLR.w regnum
0002EA66 <AmiBlitz3.ab2@20008>   MOVE.l destpointer,-(A7)
0002EA6C <AmiBlitz3.ab2@20009>   MOVE.l destbufferend,-(A7)
0002EA72 <AmiBlitz3.ab2@20010>   MOVE.w dontwrite,-(A7)
0002EA78 <AmiBlitz3.ab2@20011>   MOVE.w lasta6,-(A7)
0002EA7E <AmiBlitz3.ab2@20012>   MOVE.w cfetchmode,-(A7)
0002EA82 <AmiBlitz3.ab2@20013>    BNE.w JL_0_BFB6
0002EA8C <AmiBlitz3.ab2@20014>   MOVE.l destbufferend,oldlibat
0002EA92 <AmiBlitz3.ab2@20015>   MOVEA.l constpcat,A0
0002EA98 <AmiBlitz3.ab2@20016>   MOVE.l A0,destpointer
0002EA9C <AmiBlitz3.ab2@20017> BRA.w JL_0_BFBC
0002EAA2 <AmiBlitz3.ab2@20020>   MOVEA.l destpointer,A0
0002EAA4 <AmiBlitz3.ab2@20023>   MOVE.l A0,-(A7)
0002EAAE <AmiBlitz3.ab2@20024>   MOVE.l constlibat,destbufferend
0002EAB4 <AmiBlitz3.ab2@20025>   CLR.w dontwrite
0002EABC <AmiBlitz3.ab2@20027>   MOVE.w #$FFFF,lasta6
0002EAC4 <AmiBlitz3.ab2@20028>   MOVE.w #$FFFF,cfetchmode
0002EAC8 <AmiBlitz3.ab2@20030>     BSR.w arreval
0002EACA <AmiBlitz3.ab2@20031>    MOVE.l (a7),a0
0002EC06 <AmiBlitz3.ab2@20033>  !newcalc
0002EC0A <AmiBlitz3.ab2@20034>    BEQ 'l10
0002EC0C <AmiBlitz3.ab2@20035>    MOVE.l d0,d3
0002EC0E <AmiBlitz3.ab2@20036>    MOVEA.l (A7)+,A0
0002EC12 <AmiBlitz3.ab2@20037> BRA bc1
0002EC16 <AmiBlitz3.ab2@20040>    MOVE.w #$2600,D1
0002EC1C <AmiBlitz3.ab2@20041>   OR.w regnum,D1
0002EC20 <AmiBlitz3.ab2@20042>    BSR.w writeword
0002EC24 <AmiBlitz3.ab2@20043>   MOVE.w #$4E75,D1
0002EC28 <AmiBlitz3.ab2@20044>    BSR.w writeword
0002EC2E <AmiBlitz3.ab2@20045>   MOVE.w dontwrite,D1
0002EC32 <AmiBlitz3.ab2@20046>    BNE.w conmemerr
0002EC34 <AmiBlitz3.ab2@20047>   MOVEA.l (A7)+,A0
0002EC36 <AmiBlitz3.ab2@20048>   NOP
0002EC3C <AmiBlitz3.ab2@20049>    JSR Aclearcache                                         ;simple expression
0002EC3E <AmiBlitz3.ab2@20052>    JSR (A0)                                                ;writeresult
0002EC44 <AmiBlitz3.ab2@20055>   MOVE.w (A7)+,cfetchmode
0002EC4A <AmiBlitz3.ab2@20056>   MOVE.w (A7)+,lasta6
0002EC50 <AmiBlitz3.ab2@20057>   MOVE.w (A7)+,dontwrite
0002EC56 <AmiBlitz3.ab2@20058>   MOVE.l (A7)+,destbufferend
0002EC5C <AmiBlitz3.ab2@20059>   MOVE.l (A7)+,destpointer
0002EC62 <AmiBlitz3.ab2@20060>   MOVE.w (A7)+,regnum
0002EC68 <AmiBlitz3.ab2@20063> JMP reget
0002EC6C <AmiBlitz3.ab2@20066> oldlibat:   Ds.l 1
0002EC72 <AmiBlitz3.ab2@20070>   LEA incdir,A0
0002EC76 <AmiBlitz3.ab2@20073>   CMP.w #$22,D0
0002EC7A <AmiBlitz3.ab2@20074>    BEQ.w JL_0_C052
0002EC7C <AmiBlitz3.ab2@20075>   MOVE.b D0,(A0)+
0002EC7E <AmiBlitz3.ab2@20076>   TST.w D0
0002EC82 <AmiBlitz3.ab2@20077>    BEQ.w JL_0_C05A
0002EC86 <AmiBlitz3.ab2@20078>    BMI.w syntaxerr
0002EC8C <AmiBlitz3.ab2@20081>   JSR get1bytemain                                         ;_long
0002EC90 <AmiBlitz3.ab2@20082> BRA.w JL_0_C03E
0002EC92 <AmiBlitz3.ab2@20085> RTS
0002EC98 <AmiBlitz3.ab2@20089>   LEA ptr_parameterstore,A1                                ;getparameter
0002EC9E <AmiBlitz3.ab2@20090>   LEA incdir,A0
0002ECA0 <AmiBlitz3.ab2@20091>   MOVEQ.l #-$01,D2
0002ECA2 <AmiBlitz3.ab2@20094>     ADDQ.w #1,D2
0002ECA4 <AmiBlitz3.ab2@20095>     MOVE.b (A0)+,(A1)+
0002ECA8 <AmiBlitz3.ab2@20096>   BNE.w JL_0_C06A
0002ECAA <AmiBlitz3.ab2@20097>   SUBQ.w #1,A1
0002ECB4 <AmiBlitz3.ab2@20099>   MOVE.w oldqflag,instringon
0002ECBA <AmiBlitz3.ab2@20100>   MOVEA.l lastsourcepos,A5
0002ECC0 <AmiBlitz3.ab2@20104>   JSR get1bytemain
0002ECC2 <AmiBlitz3.ab2@20105>   TST.w D0
0002ECC6 <AmiBlitz3.ab2@20106>    BMI.w syntaxerr
0002ECCA <AmiBlitz3.ab2@20107>   CMP.b #$22,D0
0002ECCE <AmiBlitz3.ab2@20108>    BEQ.w JL_0_C078
0002ECD0 <AmiBlitz3.ab2@20109>   MOVE.b D0,(A1)+
0002ECD4 <AmiBlitz3.ab2@20110>    BEQ.w JL_0_C096
0002ECD6 <AmiBlitz3.ab2@20111>   ADDQ.w #1,D2
0002ECDA <AmiBlitz3.ab2@20112> BRA.w JL_0_C078
0002ECDC <AmiBlitz3.ab2@20115>   TST.w D2
0002ECE0 <AmiBlitz3.ab2@20116>    BEQ.w syntaxerr
0002ECE2 <AmiBlitz3.ab2@20117> RTS
0002ECE8 <AmiBlitz3.ab2@20121>   MOVEA.l constantbase,A2
0002ECEC <AmiBlitz3.ab2@20122>   MOVEA.l $E(A2),A5
0002ECF2 <AmiBlitz3.ab2@20123>   MOVE.l a5,includesourceline
0002ECF8 <AmiBlitz3.ab2@20124>   LEA inctab,a0
0002ECFE <AmiBlitz3.ab2@20125>   MOVE.w ininclude,d0
0002ED02 <AmiBlitz3.ab2@20126>   MOVE.l $0(a0,d0*4),d0
0002ED06 <AmiBlitz3.ab2@20127>   MOVEA.l $4(A2),A0
0002ED0A <AmiBlitz3.ab2@20129>   LEA $0(A0,D0.l),A0
0002ED0C <AmiBlitz3.ab2@20130>   MOVEA.l A5,A1
0002ED0E <AmiBlitz3.ab2@20133>     CMPA.l A0,A1
0002ED12 <AmiBlitz3.ab2@20134>      BCC.w JL_0_C0C6
0002ED14 <AmiBlitz3.ab2@20135>   TST.b (A1)+
0002ED18 <AmiBlitz3.ab2@20136>   BNE.w JL_0_C0B6
0002ED1C <AmiBlitz3.ab2@20137> BRA.w JL_0_C112
0002ED20 <AmiBlitz3.ab2@20140>   MOVEA.l $4(A2),A1
0002ED22 <AmiBlitz3.ab2@20143>   CMPA.l A0,A5
0002ED26 <AmiBlitz3.ab2@20144>   BCC.w JL_0_C0D6
0002ED28 <AmiBlitz3.ab2@20145>   MOVE.b (A5)+,(A1)+
0002ED2C <AmiBlitz3.ab2@20146> BRA.w JL_0_C0CA
0002ED2E <AmiBlitz3.ab2@20149>   MOVE.l A1,D0
0002ED32 <AmiBlitz3.ab2@20150>   SUB.l $4(A2),D0
0002ED38 <AmiBlitz3.ab2@20151>   LEA inctab,a0
0002ED3A <AmiBlitz3.ab2@20152>   MOVEQ #0,d1
0002ED40 <AmiBlitz3.ab2@20153>   MOVE.w ininclude,d1
0002ED44 <AmiBlitz3.ab2@20154>   MOVE.l d0,0(a0,d1*4)
0002ED4A <AmiBlitz3.ab2@20156>   MOVEA.l _dosbase,A6
0002ED4E <AmiBlitz3.ab2@20157>   MOVE.l $8(A2),D1
0002ED50 <AmiBlitz3.ab2@20158>   MOVE.l A1,D2
0002ED56 <AmiBlitz3.ab2@20159>   MOVE.l D2,include_base
0002ED5C <AmiBlitz3.ab2@20161>   MOVE.l #$10000000,d3                                     ;load whole file
0002ED5E <AmiBlitz3.ab2@20162>   SUB.l D0,D3
0002ED62 <AmiBlitz3.ab2@20163>    JSR _Read(A6)
0002ED64 <AmiBlitz3.ab2@20164>   TST.l D0
0002ED68 <AmiBlitz3.ab2@20165>    BMI.w error_reading_file
0002ED6C <AmiBlitz3.ab2@20166>    BEQ.w JL_0_C120
0002ED72 <AmiBlitz3.ab2@20167>    MOVE.l D0,include_length
0002EDB4 <AmiBlitz3.ab2@20168>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002EDDE <AmiBlitz3.ab2@20169>    !basic
0002EDEE <AmiBlitz3.ab2@20170>    ilen.l  = Peek.l(?include_length)
0002EDFE <AmiBlitz3.ab2@20171>    ibase.l = Peek.l(?include_base)
0002EE0E <AmiBlitz3.ab2@20172>    ido.l   = Peek.l(?include_process)
0002EE1E <AmiBlitz3.ab2@20173>    *tn.preprocessor = Peek.l(?include_preprocessor)
0002EE28 <AmiBlitz3.ab2@20174>    If ido
0002EE3A <AmiBlitz3.ab2@20175>      ioffset.l = SkipXtraHeader{ibase,ilen}
0002EE60 <AmiBlitz3.ab2@20176>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0002EE72 <AmiBlitz3.ab2@20177>      If nilen>0
0002EE82 <AmiBlitz3.ab2@20181>        Poke.l ?include_length,nilen
0002EEA0 <AmiBlitz3.ab2@20184>    !asm
0002EEAA <AmiBlitz3.ab2@20185>    MOVE.l #0,include_process
0002EEB0 <AmiBlitz3.ab2@20186>    MOVE.l include_length,D0
0002EEB6 <AmiBlitz3.ab2@20187>    LEA inctab,a0
0002EEB8 <AmiBlitz3.ab2@20188>    MOVEQ #0,d1
0002EEBE <AmiBlitz3.ab2@20189>    MOVE.w ininclude,d1
0002EEC2 <AmiBlitz3.ab2@20190>    ADD.l d0,0(a0,d1*4)
0002EEC6 <AmiBlitz3.ab2@20192>   MOVEA.l $4(A2),A5
0002EECA <AmiBlitz3.ab2@20194>    MOVE.l 0(a0,d1*4),d0
0002EECE <AmiBlitz3.ab2@20195>   CLR.b $0(A5,D0.l)
0002EED0 <AmiBlitz3.ab2@20198>   MOVEA.l A5,A0
0002EED2 <AmiBlitz3.ab2@20201>     TST.b (A0)+
0002EED6 <AmiBlitz3.ab2@20202>   BNE.w JL_0_C114
0002EEDA <AmiBlitz3.ab2@20203>   MOVE.l A0,$E(A2)
0002EEDC <AmiBlitz3.ab2@20204> RTS
0002EEE0 <AmiBlitz3.ab2@20207> include_length:        Dc.l 0                              ; for tokenizer!
0002EEE4 <AmiBlitz3.ab2@20208> include_base:          Dc.l 0
0002EEE8 <AmiBlitz3.ab2@20209> include_process:       Dc.l 0
0002EEEC <AmiBlitz3.ab2@20210> include_preprocessor:  Dc.l 0
0002EEF0 <AmiBlitz3.ab2@20214>   MOVE.l $8(A2),D1
0002EEF6 <AmiBlitz3.ab2@20216>   MOVEA.l _dosbase,A6
0002EEFA <AmiBlitz3.ab2@20217>   JSR _Close(a6)
0002EF00 <AmiBlitz3.ab2@20218>   MOVEA.l _execbase,A6
0002EF04 <AmiBlitz3.ab2@20219>   MOVEA.l $4(A2),A1
0002EF0A <AmiBlitz3.ab2@20220>   MOVE.l #$400*8,D0                                        ;exit include
0002EF0E <AmiBlitz3.ab2@20222>   JSR _FreeVec(a6)
0002EF14 <AmiBlitz3.ab2@20225>   MOVE.l (A2),constantbase
0002EF16 <AmiBlitz3.ab2@20226>   MOVEA.l A2,A1
0002EF18 <AmiBlitz3.ab2@20227>   MOVEQ.l #$00,D0
0002EF1C <AmiBlitz3.ab2@20228>   MOVE.b $12(A2),D0
0002EF22 <AmiBlitz3.ab2@20229>   MOVEA.l _execbase,A6
0002EF28 <AmiBlitz3.ab2@20230>   MOVE.l mempool2,a0
0002EF2C <AmiBlitz3.ab2@20231>   JSR _FreePooled(A6)
0002EF32 <AmiBlitz3.ab2@20232>   JSR zero_includename
0002EF38 <AmiBlitz3.ab2@20233>   SUBQ.w #1,ininclude
0002EF3C <AmiBlitz3.ab2@20234>   BNE.w AJL_0_C09E
0002EF42 <AmiBlitz3.ab2@20237>   LEA _include,a0
0002EF46 <AmiBlitz3.ab2@20238>   MOVEM.l a0-a6/d0-d7,-(a7)
0002EF4C <AmiBlitz3.ab2@20239>   LEA ptr_parameterstore,a1
0002EF4E <AmiBlitz3.ab2@20242>     MOVE.b (a0)+,(a1)+
0002EF52 <AmiBlitz3.ab2@20243>   BNE 'l1b
0002EF54 <AmiBlitz3.ab2@20244>   MOVEQ #9,d2
0002EF5A <AmiBlitz3.ab2@20245>   JSR findlabel2
0002EF5E <AmiBlitz3.ab2@20246>   BNE 'd
0002EF62 <AmiBlitz3.ab2@20247>   CLR.l 8(a2)
0002EF66 <AmiBlitz3.ab2@20250>   MOVEM.l (a7)+,a0-a6/d0-d7
0002EF68 <AmiBlitz3.ab2@20251> RTS
0002EF6E <AmiBlitz3.ab2@20255>   MOVE.l unusedfunc,d0
0002EF72 <AmiBlitz3.ab2@20256>   BEQ 'noclear
0002EF76 <AmiBlitz3.ab2@20257>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0002EF78 <AmiBlitz3.ab2@20260>     MOVE.l d0,a1
0002EF7C <AmiBlitz3.ab2@20261>     MOVE.l 4(a1),d0
0002EF7E <AmiBlitz3.ab2@20262>     MOVE.l (a1),d2
0002EF84 <AmiBlitz3.ab2@20263>     MOVE.l _execbase,a6
0002EF88 <AmiBlitz3.ab2@20264>     JSR _FreeMem(a6)
0002EF8A <AmiBlitz3.ab2@20265>     MOVE.l d2,d0
0002EF8E <AmiBlitz3.ab2@20266>   BNE 'f1
0002EF94 <AmiBlitz3.ab2@20267>   CLR.l unusedfunc
0002EF98 <AmiBlitz3.ab2@20268>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0002EF9A <AmiBlitz3.ab2@20271> RTS
0002EFA0 <AmiBlitz3.ab2@20275>   MOVEA.l xinclude_base,A2
0002EFA6 <AmiBlitz3.ab2@20276>   CLR.l xinclude_base
0002EFAA <AmiBlitz3.ab2@20279>     CMPA.w #$0,A2
0002EFAE <AmiBlitz3.ab2@20280>      BEQ.w JL_0_C186
0002EFB0 <AmiBlitz3.ab2@20281>     MOVEQ.l #$00,D0
0002EFB4 <AmiBlitz3.ab2@20282>     MOVE.b 4+8(A2),D0
0002EFB6 <AmiBlitz3.ab2@20283>     MOVEA.l A2,A1
0002EFB8 <AmiBlitz3.ab2@20284>     MOVEA.l (A2),A2
0002EFBE <AmiBlitz3.ab2@20285>     MOVEA.l _execbase,A6
0002EFC4 <AmiBlitz3.ab2@20286>     MOVE.l mempool2,a0
0002EFC8 <AmiBlitz3.ab2@20287>     JSR _FreePooled(A6)
0002EFCC <AmiBlitz3.ab2@20288> BRA.w JL_0_C168
0002EFCE <AmiBlitz3.ab2@20291> RTS
0002EFD4 <AmiBlitz3.ab2@20295>   MOVEA.l constantbase,A2
0002EFDA <AmiBlitz3.ab2@20296>   CLR.l constantbase
0002EFDE <AmiBlitz3.ab2@20299>     CMPA.w #$0,A2
0002EFE2 <AmiBlitz3.ab2@20300>      BEQ.w JL_0_C1DC
0002EFE6 <AmiBlitz3.ab2@20301>     MOVE.l $8(A2),D1
0002EFEA <AmiBlitz3.ab2@20302>      BEQ.w JL_0_C1AE
0002EFF0 <AmiBlitz3.ab2@20303>     MOVEA.l _dosbase,A6
0002EFF4 <AmiBlitz3.ab2@20304>      JSR _Close(A6)
0002EFF8 <AmiBlitz3.ab2@20307>     MOVE.l $4(A2),D0
0002EFFC <AmiBlitz3.ab2@20308>      BEQ.w JL_0_C1C6
0002EFFE <AmiBlitz3.ab2@20309>     MOVEA.l D0,A1
0002F004 <AmiBlitz3.ab2@20310>     MOVE.l #$400*8,D0
0002F00A <AmiBlitz3.ab2@20311>     MOVEA.l _execbase,A6
0002F010 <AmiBlitz3.ab2@20312>     MOVE.l mempool,a0
0002F014 <AmiBlitz3.ab2@20313>     JSR _FreeVec(a6)
0002F016 <AmiBlitz3.ab2@20316>     MOVEQ.l #$00,D0
0002F01A <AmiBlitz3.ab2@20317>     MOVE.b $12(A2),D0
0002F01C <AmiBlitz3.ab2@20318>     MOVEA.l A2,A1
0002F01E <AmiBlitz3.ab2@20319>     MOVEA.l (A2),A2
0002F024 <AmiBlitz3.ab2@20320>     MOVEA.l _execbase,A6
0002F02A <AmiBlitz3.ab2@20321>     MOVE.l mempool2,a0
0002F02E <AmiBlitz3.ab2@20322>     JSR _FreePooled(A6)
0002F032 <AmiBlitz3.ab2@20323> BRA.w JL_0_C194
0002F034 <AmiBlitz3.ab2@20326> RTS
0002F036 <AmiBlitz3.ab2@20330>   SWAP D0
0002F03A <AmiBlitz3.ab2@20331>    BSR.w JL_0_C1E6
0002F03C <AmiBlitz3.ab2@20332>   SWAP D0
0002F042 <AmiBlitz3.ab2@20335>   MOVEA.l data2,A4
0002F048 <AmiBlitz3.ab2@20336>   CMPA.l allat,A4
0002F04C <AmiBlitz3.ab2@20337>    BCC.w JL_0_C200
0002F04E <AmiBlitz3.ab2@20338>   MOVE.w D0,(A4)+
0002F054 <AmiBlitz3.ab2@20339>   MOVE.l A4,data2
0002F056 <AmiBlitz3.ab2@20340> RTS
0002F05E <AmiBlitz3.ab2@20343>   MOVE.w #$FFFF,dontwrite
0002F064 <AmiBlitz3.ab2@20344>   ADDQ.l #2,data2
0002F066 <AmiBlitz3.ab2@20345> RTS
0002F06C <AmiBlitz3.ab2@20349>   MOVEA.l data2,A4
0002F072 <AmiBlitz3.ab2@20350>   CMPA.l allat,A4
0002F076 <AmiBlitz3.ab2@20351>    BCC.w JL_0_C22A
0002F078 <AmiBlitz3.ab2@20352>   MOVE.b D0,(A4)+
0002F07E <AmiBlitz3.ab2@20353>   MOVE.l A4,data2
0002F080 <AmiBlitz3.ab2@20354> RTS
0002F088 <AmiBlitz3.ab2@20357>   MOVE.w #$FFFF,dontwrite
0002F08E <AmiBlitz3.ab2@20358>   ADDQ.l #1,data2
0002F090 <AmiBlitz3.ab2@20359> RTS
0002F094 <AmiBlitz3.ab2@20363>   CMP.w #$22,D0
0002F098 <AmiBlitz3.ab2@20364>    BNE.w syntaxerr
0002F09E <AmiBlitz3.ab2@20368>   JSR get1bytemain
0002F0A2 <AmiBlitz3.ab2@20369>   CMP.b #$22,D0
0002F0A6 <AmiBlitz3.ab2@20370>    BEQ.w JL_0_C25A
0002F0A8 <AmiBlitz3.ab2@20371>   TST.w D0
0002F0AC <AmiBlitz3.ab2@20372>    BEQ.w syntaxerr
0002F0AE <AmiBlitz3.ab2@20373>   MOVE.b D0,(A0)+
0002F0B2 <AmiBlitz3.ab2@20374> BRA.w JL_0_C242
0002F0B4 <AmiBlitz3.ab2@20377>   CLR.b (A0)
0002F0B6 <AmiBlitz3.ab2@20378> RTS
0002F0B8 <AmiBlitz3.ab2@20381>   TST.l D3
0002F0BA <AmiBlitz3.ab2@20382> RTS
0002F0C0 <AmiBlitz3.ab2@20385>   LEA ptr_parameterstore,A0
0002F0C6 <AmiBlitz3.ab2@20386>   LEA namebuff2,A1
0002F0C8 <AmiBlitz3.ab2@20389>     MOVE.b (A0)+,D0
0002F0CC <AmiBlitz3.ab2@20390>     BEQ.w JL_0_C27C
0002F0CE <AmiBlitz3.ab2@20391>   CMP.b (A1)+,D0
0002F0D2 <AmiBlitz3.ab2@20392>   BEQ.w JL_0_C26E
0002F0D4 <AmiBlitz3.ab2@20393> RTS
0002F0D6 <AmiBlitz3.ab2@20396>   TST.b (A1)
0002F0DA <AmiBlitz3.ab2@20397>   BNE.w JL_0_C284
0002F0DC <AmiBlitz3.ab2@20398> RTS
0002F0E0 <AmiBlitz3.ab2@20401>   CMP.w #$1,D0
0002F0E2 <AmiBlitz3.ab2@20402> RTS
0002F0E6 <AmiBlitz3.ab2@20406>   CMP.w #$2E,D0                                            ;dodeftype
0002F0EA <AmiBlitz3.ab2@20407>    BNE.w syntaxerr
0002F0EE <AmiBlitz3.ab2@20408>   BSR.w getparameter2
0002F0F4 <AmiBlitz3.ab2@20409>   LEA newtypebase,A2
0002F0F8 <AmiBlitz3.ab2@20410>   BSR.w findtype
0002F0FC <AmiBlitz3.ab2@20411>    BNE.w notypeerr
0002F102 <AmiBlitz3.ab2@20412>   TST.b declare
0002F106 <AmiBlitz3.ab2@20413>    BNE 'l1
0002F10C <AmiBlitz3.ab2@20414>   TST.b declare2
0002F110 <AmiBlitz3.ab2@20415>    BEQ 'l2
0002F118 <AmiBlitz3.ab2@20418>   MOVE.b #2,nowdeclare
0002F11E <AmiBlitz3.ab2@20422>   JSR reget
0002F122 <AmiBlitz3.ab2@20423>    BNE.w JL_0_C2B4
0002F128 <AmiBlitz3.ab2@20424>   MOVE.l A2,defaulttype
0002F12A <AmiBlitz3.ab2@20425> RTS
0002F130 <AmiBlitz3.ab2@20428>   MOVE.l defaulttype,-(A7)
0002F136 <AmiBlitz3.ab2@20429>   MOVE.l A2,defaulttype
0002F13A <AmiBlitz3.ab2@20432>   BSR.w getparameter
0002F13E <AmiBlitz3.ab2@20433>    BSR.w JL_0_8E3C
0002F142 <AmiBlitz3.ab2@20434>   CMP.w #$2C,D0
0002F146 <AmiBlitz3.ab2@20435>    BNE.w JL_0_C2D8
0002F14C <AmiBlitz3.ab2@20436>    JSR get1bytemain                                        ; was BSR.w
0002F150 <AmiBlitz3.ab2@20437> BRA.w JL_0_C2C0
0002F156 <AmiBlitz3.ab2@20440>   MOVE.l (A7)+,defaulttype
0002F158 <AmiBlitz3.ab2@20441> RTS
0002F15C <AmiBlitz3.ab2@20445>   LEA $4(A5),A2                                            ;fehler function
0002F15E <AmiBlitz3.ab2@20448>   MOVE.l A2,D0
0002F162 <AmiBlitz3.ab2@20451>   BSR.w getparameter
0002F166 <AmiBlitz3.ab2@20452>   BSR.w JL_0_8E3C
0002F16A <AmiBlitz3.ab2@20453>   BSR.w calcvar
0002F16E <AmiBlitz3.ab2@20454>   CMP.b #$7,D2
0002F172 <AmiBlitz3.ab2@20455>    BNE.w mismatcherr
0002F176 <AmiBlitz3.ab2@20456>   MOVE.w varmode(PC),-(A7)
0002F17A <AmiBlitz3.ab2@20457>   CMP.w #$3D,D0
0002F17E <AmiBlitz3.ab2@20458>    BNE.w syntaxerr
0002F182 <AmiBlitz3.ab2@20459>   BTST #$F,D2
0002F186 <AmiBlitz3.ab2@20460>    BNE.w JL_0_C31C
0002F18A <AmiBlitz3.ab2@20461>   MOVE.w JL_0_C2E0(PC),D1
0002F18E <AmiBlitz3.ab2@20462>   BSR.w pokewda5s
0002F190 <AmiBlitz3.ab2@20463>   MOVE.w D3,D1
0002F194 <AmiBlitz3.ab2@20464>   BSR.w writeword
0002F198 <AmiBlitz3.ab2@20467>   MOVE.w L_0_C2E4(PC),D1
0002F19C <AmiBlitz3.ab2@20468>   BSR.w writeword
0002F1A2 <AmiBlitz3.ab2@20469>   ADDQ.w #1,regnum
0002F1A4 <AmiBlitz3.ab2@20470>   MOVEQ.l #$03,D2
0002F1A8 <AmiBlitz3.ab2@20471>   BSR.w eval
0002F1AE <AmiBlitz3.ab2@20472>   MOVE.l #$D000,D1
0002F1B4 <AmiBlitz3.ab2@20473>   MOVE.l d1,lastinstruction
0002F1B6 <AmiBlitz3.ab2@20474>   TST.w (A7)+
0002F1BA <AmiBlitz3.ab2@20475>    BEQ.w Atokejsr
0002F1BC <AmiBlitz3.ab2@20476>   ADDQ.w #1,D1
0002F1C0 <AmiBlitz3.ab2@20477> BRA.w Atokejsr
0002F1C2 <AmiBlitz3.ab2@20481>   MOVE.w D0,D1
0002F1C6 <AmiBlitz3.ab2@20482>    BPL.w syntaxerr
0002F1CA <AmiBlitz3.ab2@20483>   BCLR #$F,D1
0002F1D0 <AmiBlitz3.ab2@20484>    JSR searchinstr
0002F1D4 <AmiBlitz3.ab2@20485>   MOVE.l $12(A2),D0
0002F1D8 <AmiBlitz3.ab2@20486>   TST.w -$2(A2,D0.L)
0002F1DC <AmiBlitz3.ab2@20487>    BEQ.w freeerr
0002F1DE <AmiBlitz3.ab2@20488>   MOVEQ.l #$02,D2
0002F1E0 <AmiBlitz3.ab2@20489>   MOVE.l A2,-(A7)
0002F1E4 <AmiBlitz3.ab2@20490>    BSR.w eval
0002F1E6 <AmiBlitz3.ab2@20491>   MOVEA.l (A7)+,A2
0002F1EC <AmiBlitz3.ab2@20492>   MOVE.l A2,mymaxlib
0002F1F0 <AmiBlitz3.ab2@20493>   ADDA.l $12(A2),A2
0002F1F6 <AmiBlitz3.ab2@20494>   TST.b debugmode
0002F1FA <AmiBlitz3.ab2@20495>    BEQ.w JL_0_C3A8
0002F200 <AmiBlitz3.ab2@20496>   MOVE.w regnum,D1
0002F202 <AmiBlitz3.ab2@20497>   LSL.w #8,D1
0002F204 <AmiBlitz3.ab2@20498>   LSL.w #1,D1
0002F208 <AmiBlitz3.ab2@20499>   ORI.w #$B07C,D1
0002F20C <AmiBlitz3.ab2@20500>    BSR.w writeword
0002F210 <AmiBlitz3.ab2@20501>   MOVE.w -$4(A2),D1
0002F214 <AmiBlitz3.ab2@20502>    BSR.w writeword
0002F21A <AmiBlitz3.ab2@20503>   MOVE.l maxchk,D1
0002F21E <AmiBlitz3.ab2@20504>    BSR.w writelong
0002F220 <AmiBlitz3.ab2@20505>   MOVE.l A2,-(A7)
0002F224 <AmiBlitz3.ab2@20506>   MOVE.w #$C30A,D1
0002F228 <AmiBlitz3.ab2@20507>    BSR.w Atokejsr
0002F22A <AmiBlitz3.ab2@20508>   MOVEA.l (A7)+,A2
0002F22E <AmiBlitz3.ab2@20511>   MOVE.w -$2(A2),D2
0002F234 <AmiBlitz3.ab2@20514>   MOVE.w regnum,D1
0002F23A <AmiBlitz3.ab2@20515>   OR.w lslimm,D1
0002F23E <AmiBlitz3.ab2@20516>   CMP.w #$8,D2
0002F242 <AmiBlitz3.ab2@20517>    BCS.w JL_0_C3CE
0002F246 <AmiBlitz3.ab2@20518>    BSR.w writeword
0002F248 <AmiBlitz3.ab2@20519>   SUBQ.w #8,D2
0002F24C <AmiBlitz3.ab2@20520>    BNE.w JL_0_C3AC
0002F250 <AmiBlitz3.ab2@20521> BRA.w JL_0_C3DA
0002F252 <AmiBlitz3.ab2@20524>   MOVE.w D2,D0
0002F254 <AmiBlitz3.ab2@20525>   LSL.w #8,D0
0002F256 <AmiBlitz3.ab2@20526>   LSL.w #1,D0
0002F258 <AmiBlitz3.ab2@20527>   OR.w D0,D1
0002F25C <AmiBlitz3.ab2@20528>   BSR.w writeword
0002F25E <AmiBlitz3.ab2@20531> RTS
0002F262 <AmiBlitz3.ab2@20536>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0002F264 <AmiBlitz3.ab2@20537>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0002F268 <AmiBlitz3.ab2@20541> mymaxlib:  Ds.l 1
0002F26C <AmiBlitz3.ab2@20545>   BSR.w JL_0_C340
0002F270 <AmiBlitz3.ab2@20546>   LEA free(PC),A0
0002F274 <AmiBlitz3.ab2@20547>   LEA freef(PC),A1
0002F27A <AmiBlitz3.ab2@20548>   MOVE.w -$6(A2),$2(A0)
0002F27E <AmiBlitz3.ab2@20549>   BSR.w pokecode
0002F282 <AmiBlitz3.ab2@20550>   MOVE.l -$A(A2),D1
0002F286 <AmiBlitz3.ab2@20553>   BEQ.w nosuperr
0002F28A <AmiBlitz3.ab2@20554>   MOVEA.l mymaxlib(PC),A2
0002F28E <AmiBlitz3.ab2@20555> BRA.w Amakelibsub
0002F292 <AmiBlitz3.ab2@20560>   BSR.w JL_0_C340
0002F298 <AmiBlitz3.ab2@20561>   LEA use,A0
0002F29E <AmiBlitz3.ab2@20562>   LEA usef,A1
0002F2A4 <AmiBlitz3.ab2@20563>   MOVE.w -$6(A2),$2(A0)
0002F2AA <AmiBlitz3.ab2@20564>   MOVE.w -$6(A2),-$2(A1)
0002F2AE <AmiBlitz3.ab2@20565>   ADDQ.w #4,-$2(A1)
0002F2B2 <AmiBlitz3.ab2@20566>   BSR.w pokecode
0002F2B6 <AmiBlitz3.ab2@20567>   MOVE.l -$E(A2),D1
0002F2BA <AmiBlitz3.ab2@20568> BRA.w maxjsr
0002F2C0 <AmiBlitz3.ab2@20572>   JSR get1bytemain
0002F2C6 <AmiBlitz3.ab2@20576>   MOVE.l firstiff,D0
0002F2CA <AmiBlitz3.ab2@20577>    BEQ.w noiferr
0002F2CC <AmiBlitz3.ab2@20578>   MOVEA.l D0,A0
0002F2D2 <AmiBlitz3.ab2@20579>   CMPI.b #$1,$D(A0)
0002F2D6 <AmiBlitz3.ab2@20580>    BEQ.w illelseerr
0002F2DA <AmiBlitz3.ab2@20581>   MOVE.w #$6000,D1
0002F2E0 <AmiBlitz3.ab2@20583>     TST.b fast
0002F2E4 <AmiBlitz3.ab2@20584>     BEQ 'l1
0002F2EA <AmiBlitz3.ab2@20585>     OR.l #$ff,d1
0002F2EE <AmiBlitz3.ab2@20586>     BSR writeword
0002F2F0 <AmiBlitz3.ab2@20590>   SWAP D1
0002F2F4 <AmiBlitz3.ab2@20591>   BSR.w writelong
0002F2F6 <AmiBlitz3.ab2@20592>   MOVEQ.l #$00,D1
0002F2FA <AmiBlitz3.ab2@20593>   BSR.w AJL_0_D7B8
0002F302 <AmiBlitz3.ab2@20594>   MOVE.l destpointer,$8(A0)
0002F306 <AmiBlitz3.ab2@20595> BRA.w do_then
0002F30C <AmiBlitz3.ab2@20599>   LEA ptr_parameterstore,A0
0002F30E <AmiBlitz3.ab2@20600>   MOVE.l A0,-(A7)
0002F312 <AmiBlitz3.ab2@20601>   BSR.w JL_0_C23A
0002F316 <AmiBlitz3.ab2@20602> BRA.w handle_compileerror
0002F31A <AmiBlitz3.ab2@20606>   BSR.w JL_0_BF6A
0002F31C <AmiBlitz3.ab2@20607>   MOVEQ.l #$05,D1
0002F326 <AmiBlitz3.ab2@20609>   MOVE.w oldqflag,instringon
0002F32C <AmiBlitz3.ab2@20610>   MOVEA.l lastsourcepos,A5
0002F332 <AmiBlitz3.ab2@20611>   LEA AJL_0_C25E,A0
0002F336 <AmiBlitz3.ab2@20612> BRA.w JL_0_C4B4
0002F33C <AmiBlitz3.ab2@20616>   LEA ptr_parameterstore,A0
0002F340 <AmiBlitz3.ab2@20617>   BSR.w JL_0_C23A
0002F346 <AmiBlitz3.ab2@20618>   JSR get1bytemain
0002F34A <AmiBlitz3.ab2@20619>   BSR.w JL_0_CCA8
0002F350 <AmiBlitz3.ab2@20620>   LEA namebuff2,A0
0002F354 <AmiBlitz3.ab2@20621>   BSR.w JL_0_C23A
0002F35A <AmiBlitz3.ab2@20622>   LEA AJL_0_C262,A0
0002F35C <AmiBlitz3.ab2@20625>   LSL.w #2,D1
0002F362 <AmiBlitz3.ab2@20626>   LEA CIF_branches,A1
0002F366 <AmiBlitz3.ab2@20627>   MOVE.l $0(A1,D1.W),-(A7)
0002F368 <AmiBlitz3.ab2@20628>   MOVEQ.l #-$01,D1
0002F36A <AmiBlitz3.ab2@20631>   JSR (A0)
0002F36C <AmiBlitz3.ab2@20632>   MOVEA.l (A7)+,A1
0002F36E <AmiBlitz3.ab2@20635> JMP (A1)
0002F372 <AmiBlitz3.ab2@20639>   BEQ.w JL_0_C4F6
0002F376 <AmiBlitz3.ab2@20640> BRA.w JL_0_C4F4
0002F37A <AmiBlitz3.ab2@20644>   BNE.w JL_0_C4F6
0002F37E <AmiBlitz3.ab2@20645> BRA.w JL_0_C4F4
0002F382 <AmiBlitz3.ab2@20649>   BLT.w JL_0_C4F6
0002F386 <AmiBlitz3.ab2@20650> BRA.w JL_0_C4F4
0002F38A <AmiBlitz3.ab2@20654>   BLE.w JL_0_C4F6
0002F38E <AmiBlitz3.ab2@20655> BRA.w JL_0_C4F4
0002F392 <AmiBlitz3.ab2@20659>   BGT.w JL_0_C4F6
0002F396 <AmiBlitz3.ab2@20660> BRA.w JL_0_C4F4
0002F39A <AmiBlitz3.ab2@20664>   BGE.w JL_0_C4F6
0002F39C <AmiBlitz3.ab2@20667>   MOVEQ.l #$00,D1
0002F3A2 <AmiBlitz3.ab2@20670>   MOVEA.l concomsp,A0
0002F3A8 <AmiBlitz3.ab2@20671>   MOVE.w skipcode,(A0)+
0002F3AE <AmiBlitz3.ab2@20672>   MOVE.l A0,concomsp
0002F3B4 <AmiBlitz3.ab2@20673>   MOVE.w D1,skipcode
0002F3BA <AmiBlitz3.ab2@20674>   JSR get1bytemain
0002F3BE <AmiBlitz3.ab2@20675>    BNE.w syntaxerr
0002F3C4 <AmiBlitz3.ab2@20676> JMP bakup
0002F3CC <AmiBlitz3.ab2@20680> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0002F3D0 <AmiBlitz3.ab2@20681> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0002F3D4 <AmiBlitz3.ab2@20688>   MOVE.w #$FC17,D1
0002F3DA <AmiBlitz3.ab2@20689>   JSR uselib
0002F3E0 <AmiBlitz3.ab2@20691>   JSR reget
0002F3E4 <AmiBlitz3.ab2@20692>    BEQ.w do_Restore__resbeg
0002F3E8 <AmiBlitz3.ab2@20693>   BSR.w JL_0_AE22                                          ;get label name!
0002F3EC <AmiBlitz3.ab2@20694>   MOVE.w rescode(PC),D1
0002F3F0 <AmiBlitz3.ab2@20695>   BSR.w writeword
0002F3F6 <AmiBlitz3.ab2@20696>   JSR addoff                                               ;add offset
0002F3FA <AmiBlitz3.ab2@20697>   MOVE.l $C(A2),D1
0002F3FE <AmiBlitz3.ab2@20698>   BSR.w writelong
0002F402 <AmiBlitz3.ab2@20699>   MOVE.w rescode+6(PC),D1
0002F406 <AmiBlitz3.ab2@20700>   BSR.w writeword
0002F40A <AmiBlitz3.ab2@20701>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0002F40E <AmiBlitz3.ab2@20702>   BEQ.w do_Restore__no
0002F410 <AmiBlitz3.ab2@20704>   MOVEA.l D1,A1
0002F414 <AmiBlitz3.ab2@20705>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0002F416 <AmiBlitz3.ab2@20706> RTS
0002F418 <AmiBlitz3.ab2@20711> RTS
0002F41C <AmiBlitz3.ab2@20714>   MOVE.w #$CD00,D1
0002F422 <AmiBlitz3.ab2@20715>   JSR Atokejsr
0002F426 <AmiBlitz3.ab2@20716>   MOVE.l rescode2(PC),D1
0002F42C <AmiBlitz3.ab2@20717> JMP writelong
0002F430 <AmiBlitz3.ab2@20721>   MOVE.w #$FC17,D1
0002F436 <AmiBlitz3.ab2@20722>   JSR uselib
0002F43C <AmiBlitz3.ab2@20725>   MOVE.l dataget,D1
0002F440 <AmiBlitz3.ab2@20726>   BSR.w writelong
0002F444 <AmiBlitz3.ab2@20727>   BSR.w getparameter
0002F448 <AmiBlitz3.ab2@20728>   BSR.w JL_0_8E3C
0002F44C <AmiBlitz3.ab2@20729>   BSR.w calcvar
0002F450 <AmiBlitz3.ab2@20730>   BTST #$E,D2
0002F454 <AmiBlitz3.ab2@20731>    BEQ.w JL_0_C5A6
0002F458 <AmiBlitz3.ab2@20732>   MOVE.b #$6,D2
0002F45A <AmiBlitz3.ab2@20735>   TST.b D2
0002F45E <AmiBlitz3.ab2@20736>    BEQ.w noleterr
0002F464 <AmiBlitz3.ab2@20737>   TST.b debugmode
0002F468 <AmiBlitz3.ab2@20738>    BEQ.w JL_0_C5D0
0002F46C <AmiBlitz3.ab2@20739>   MOVE.w #$7000,D1
0002F46E <AmiBlitz3.ab2@20740>   MOVE.b D2,D1
0002F472 <AmiBlitz3.ab2@20741>   ANDI.b #$F,D1
0002F476 <AmiBlitz3.ab2@20742>   BSR.w writeword
0002F47A <AmiBlitz3.ab2@20743>   MOVE.w #$C310,D1
0002F47C <AmiBlitz3.ab2@20744>   MOVE.w D2,-(A7)
0002F480 <AmiBlitz3.ab2@20745>   BSR.w Atokejsr
0002F482 <AmiBlitz3.ab2@20746>   MOVE.w (A7)+,D2
0002F486 <AmiBlitz3.ab2@20749>   CMP.b #$7,D2
0002F48A <AmiBlitz3.ab2@20750>    BEQ.w JL_0_C684
0002F48E <AmiBlitz3.ab2@20751>   CMP.b #$1,D2
0002F492 <AmiBlitz3.ab2@20752>    BNE.w JL_0_C62A
0002F498 <AmiBlitz3.ab2@20753>   LEA dataletb2,A0
0002F49E <AmiBlitz3.ab2@20754>   LEA dataletb2f,A1
0002F4A2 <AmiBlitz3.ab2@20755>   BTST #$F,D2
0002F4A6 <AmiBlitz3.ab2@20756>    BEQ.w JL_0_C5FC
0002F4AA <AmiBlitz3.ab2@20757>   BSR.w pokecode
0002F4AE <AmiBlitz3.ab2@20758> BRA.w JL_0_C668
0002F4B4 <AmiBlitz3.ab2@20761>   LEA dataletb,A0
0002F4BA <AmiBlitz3.ab2@20762>   LEA dataletbf,A1
0002F4C0 <AmiBlitz3.ab2@20763>   TST.w varmode
0002F4C4 <AmiBlitz3.ab2@20764>    BEQ.w JL_0_C61E
0002F4CA <AmiBlitz3.ab2@20765>   LEA dataletbl,A0
0002F4D0 <AmiBlitz3.ab2@20766>   LEA dataletblf,A1
0002F4D4 <AmiBlitz3.ab2@20769>   MOVE.w D3,$4(A0)
0002F4D8 <AmiBlitz3.ab2@20770>   BSR.w pokecode
0002F4DC <AmiBlitz3.ab2@20771> BRA.w JL_0_C668
0002F4E2 <AmiBlitz3.ab2@20774>   LEA dataletw,A0
0002F4E6 <AmiBlitz3.ab2@20775>   CMP.b #$3,D2
0002F4EA <AmiBlitz3.ab2@20776>    BCS.w JL_0_C63E
0002F4F0 <AmiBlitz3.ab2@20777>   LEA dataletl,A0
0002F4F4 <AmiBlitz3.ab2@20780>   BTST #$F,D2
0002F4F8 <AmiBlitz3.ab2@20781>    BEQ.w JL_0_C652
0002F4FC <AmiBlitz3.ab2@20782>   MOVE.w $4(A0),D1
0002F500 <AmiBlitz3.ab2@20783>    BSR.w writeword
0002F504 <AmiBlitz3.ab2@20784> BRA.w JL_0_C668
0002F50A <AmiBlitz3.ab2@20787>   TST.w varmode
0002F50E <AmiBlitz3.ab2@20788>    BEQ.w JL_0_C65E
0002F510 <AmiBlitz3.ab2@20789>   ADDQ.w #6,A0
0002F514 <AmiBlitz3.ab2@20792>   MOVE.w D3,$2(A0)
0002F516 <AmiBlitz3.ab2@20793>   MOVE.l (A0),D1
0002F51A <AmiBlitz3.ab2@20794>   BSR.w writelong
0002F520 <AmiBlitz3.ab2@20797>   MOVE.l dataput,D1
0002F524 <AmiBlitz3.ab2@20798>    BSR.w writelong
0002F528 <AmiBlitz3.ab2@20799>   CMP.w #$2C,D0
0002F52C <AmiBlitz3.ab2@20800>    BEQ.w JL_0_C67C
0002F52E <AmiBlitz3.ab2@20801> RTS
0002F534 <AmiBlitz3.ab2@20804>   JSR get1bytemain
0002F538 <AmiBlitz3.ab2@20805> BRA.w JL_0_C584
0002F53E <AmiBlitz3.ab2@20809>   MOVE.w stlenget,D1
0002F542 <AmiBlitz3.ab2@20810>    BSR.w writeword
0002F546 <AmiBlitz3.ab2@20811>   BTST #$F,D2
0002F54A <AmiBlitz3.ab2@20812>    BNE.w JL_0_C6C0
0002F550 <AmiBlitz3.ab2@20813>   TST.w varmode
0002F554 <AmiBlitz3.ab2@20814>    BEQ.w JL_0_C6B0
0002F55A <AmiBlitz3.ab2@20815>   MOVE.w D3,leaampl+2
0002F560 <AmiBlitz3.ab2@20816>   MOVE.l leaampl,D1
0002F564 <AmiBlitz3.ab2@20817> BRA.w JL_0_C6BC
0002F56A <AmiBlitz3.ab2@20820>   MOVE.w D3,leaamp+2
0002F570 <AmiBlitz3.ab2@20821>   MOVE.l leaamp,D1
0002F574 <AmiBlitz3.ab2@20824>   BSR.w writelong
0002F578 <AmiBlitz3.ab2@20827>   MOVE.w #$C701,D1
0002F57E <AmiBlitz3.ab2@20828>   MOVE.w varmode,D2
0002F582 <AmiBlitz3.ab2@20829>    BEQ.w JL_0_C6D0
0002F584 <AmiBlitz3.ab2@20830>   SUBQ.w #1,D1
0002F588 <AmiBlitz3.ab2@20833>   BSR.w Atokejsr
0002F590 <AmiBlitz3.ab2@20834>   MOVE.w #$FFFF,lasta6
0002F596 <AmiBlitz3.ab2@20835>   LEA stalign,A0
0002F59C <AmiBlitz3.ab2@20836>   LEA stalignf,A1
0002F5A0 <AmiBlitz3.ab2@20837>   BSR.w pokecode
0002F5A4 <AmiBlitz3.ab2@20838> BRA.w JL_0_C668
0002F5A8 <AmiBlitz3.ab2@20842>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0002F5AC <AmiBlitz3.ab2@20843>    BNE.w JL_0_C720
0002F5B2 <AmiBlitz3.ab2@20844>   JSR get1bytemain
0002F5B6 <AmiBlitz3.ab2@20845>   CMP.w #$77,D0
0002F5BA <AmiBlitz3.ab2@20846>    BEQ.w JL_0_C71C
0002F5BE <AmiBlitz3.ab2@20847>   CMP.w #$62,D0
0002F5C2 <AmiBlitz3.ab2@20848>    BEQ.w JL_0_C718
0002F5C6 <AmiBlitz3.ab2@20849>   CMP.w #"s",d0
0002F5CA <AmiBlitz3.ab2@20850>   BEQ single3
0002F5CE <AmiBlitz3.ab2@20851>   CMP.w #"d",d0
0002F5D2 <AmiBlitz3.ab2@20852>   BEQ double3
0002F5D6 <AmiBlitz3.ab2@20853>   CMP.w #$6C,D0
0002F5DA <AmiBlitz3.ab2@20854>    BNE.w syntaxerr
0002F5DC <AmiBlitz3.ab2@20855>   MOVEQ.l #$02,D1
0002F5DE <AmiBlitz3.ab2@20856> RTS
0002F5E6 <AmiBlitz3.ab2@20860>   MOVE.b #1,iee
0002F5E8 <AmiBlitz3.ab2@20861>   MOVEQ.l #$3,d1
0002F5EA <AmiBlitz3.ab2@20862> RTS
0002F5F2 <AmiBlitz3.ab2@20866>   MOVE.b #1,iee
0002F5F4 <AmiBlitz3.ab2@20867>   MOVEQ.l #$4,d1
0002F5F6 <AmiBlitz3.ab2@20868> RTS
0002F5F8 <AmiBlitz3.ab2@20872>   MOVEQ.l #$00,D1
0002F5FA <AmiBlitz3.ab2@20873> RTS
0002F5FC <AmiBlitz3.ab2@20877>   MOVEQ.l #$01,D1
0002F5FE <AmiBlitz3.ab2@20878> RTS
0002F600 <AmiBlitz3.ab2@20882>   MOVEQ.l #$01,D1
0002F606 <AmiBlitz3.ab2@20883> JMP bakup
0002F60A <AmiBlitz3.ab2@20887>   BSR.w JL_0_C6F0
0002F60C <AmiBlitz3.ab2@20889>   MOVE.w D1,-(A7)
0002F610 <AmiBlitz3.ab2@20890>    BSR.w AJL_0_BF6E
0002F614 <AmiBlitz3.ab2@20891>   CMP.w #$2C,D0
0002F618 <AmiBlitz3.ab2@20892>    BNE.w syntaxerr
0002F61A <AmiBlitz3.ab2@20893>   MOVE.l D3,-(A7)
0002F61E <AmiBlitz3.ab2@20894>    BSR.w AJL_0_BF6E
0002F620 <AmiBlitz3.ab2@20895>   MOVE.l D3,D1
0002F622 <AmiBlitz3.ab2@20896>   MOVE.l (A7)+,D3
0002F624 <AmiBlitz3.ab2@20897>   MOVE.w (A7)+,D2
0002F628 <AmiBlitz3.ab2@20898>    BEQ.w JL_0_C774
0002F62C <AmiBlitz3.ab2@20902>   CMP.w #$1,D2
0002F630 <AmiBlitz3.ab2@20903>    BEQ.w JL_0_C768
0002F632 <AmiBlitz3.ab2@20906>   SWAP D1
0002F636 <AmiBlitz3.ab2@20907>    BSR.w writeword
0002F638 <AmiBlitz3.ab2@20908>   SWAP D1
0002F63C <AmiBlitz3.ab2@20909>    BSR.w writeword
0002F63E <AmiBlitz3.ab2@20910>   SUBQ.l #1,D3
0002F642 <AmiBlitz3.ab2@20911>    BNE.w JL_0_C754
0002F644 <AmiBlitz3.ab2@20912> RTS
0002F648 <AmiBlitz3.ab2@20915>    BSR.w writeword
0002F64A <AmiBlitz3.ab2@20916>   SUBQ.l #1,D3
0002F64E <AmiBlitz3.ab2@20917>    BNE.w JL_0_C768
0002F650 <AmiBlitz3.ab2@20918> RTS
0002F654 <AmiBlitz3.ab2@20921>    BSR.w writebyte
0002F656 <AmiBlitz3.ab2@20922>   SUBQ.l #1,D3
0002F65A <AmiBlitz3.ab2@20923>    BNE.w JL_0_C774
0002F65C <AmiBlitz3.ab2@20924> RTS
0002F660 <AmiBlitz3.ab2@20928>   BSR.w JL_0_C6F0                                          ;definestorage
0002F662 <AmiBlitz3.ab2@20929>   MOVE.w D1,-(A7)
0002F666 <AmiBlitz3.ab2@20930>   BSR.w AJL_0_BF6E
0002F668 <AmiBlitz3.ab2@20931>   MOVE.w (A7)+,D1
0002F66A <AmiBlitz3.ab2@20932>   LSL.l D1,D3
0002F66C <AmiBlitz3.ab2@20933>   MOVE.l d3,d0
0002F670 <AmiBlitz3.ab2@20934>   BEQ 'll5
0002F672 <AmiBlitz3.ab2@20935>   MOVEQ #0,d1
0002F678 <AmiBlitz3.ab2@20938>     JSR writebyte
0002F67A <AmiBlitz3.ab2@20939>     SUBQ.l #1,d3
0002F67E <AmiBlitz3.ab2@20940>   BNE.s 'll10
0002F680 <AmiBlitz3.ab2@20943> RTS
0002F682 <AmiBlitz3.ab2@20947>   MOVE.w D0,-(A7)
0002F688 <AmiBlitz3.ab2@20948>   LEA dummyasm,A0
0002F68E <AmiBlitz3.ab2@20949>   MOVEA.l destpointer,A1
0002F698 <AmiBlitz3.ab2@20950>   MOVE.w asmlen2,asmlen
0002F69E <AmiBlitz3.ab2@20951>   JSR insasm
0002F6A0 <AmiBlitz3.ab2@20952>   MOVE.w (A7)+,D0
0002F6A2 <AmiBlitz3.ab2@20953> RTS
0002F6A6 <AmiBlitz3.ab2@20957>   BSR.w JL_0_C6F0
0002F6B0 <AmiBlitz3.ab2@20959>   MOVE.l #ptr_parameterstore,asmbuff
0002F6B2 <AmiBlitz3.ab2@20960>   TST.w D1
0002F6B6 <AmiBlitz3.ab2@20961>    BEQ.w JL_0_C7EE
0002F6BA <AmiBlitz3.ab2@20962>   CMP.w #$1,D1
0002F6BE <AmiBlitz3.ab2@20963>    BEQ.w JL_0_C844
0002F6C2 <AmiBlitz3.ab2@20964>   CMP.w #$2,d1
0002F6C6 <AmiBlitz3.ab2@20965>    BEQ long
0002F6CA <AmiBlitz3.ab2@20966>   CMP.w #$3,d1
0002F6CE <AmiBlitz3.ab2@20967>    BEQ single
0002F6D0 <AmiBlitz3.ab2@20968>    MOVEQ.l #$0d,D3
0002F6D6 <AmiBlitz3.ab2@20974>    JSR asmconst
0002F6DA <AmiBlitz3.ab2@20975>    BSR.w JL_0_C796
0002F6DE <AmiBlitz3.ab2@20976>    BSR.w writelong
0002F6E2 <AmiBlitz3.ab2@20977>    BSR   writelong
0002F6E6 <AmiBlitz3.ab2@20978>   CMP.w #$2C,D0
0002F6EA <AmiBlitz3.ab2@20979>    BEQ.w JL_0_C7D8b
0002F6EC <AmiBlitz3.ab2@20980> RTS
0002F6EE <AmiBlitz3.ab2@20984>   MOVEQ.l #$0B,D3
0002F6F6 <AmiBlitz3.ab2@20988>   MOVE.b #1,_dcb
0002F6FC <AmiBlitz3.ab2@20991>   JSR asmconst
0002F702 <AmiBlitz3.ab2@20992>   CLR.b _dcb
0002F706 <AmiBlitz3.ab2@20993>   BSR.w JL_0_C796
0002F70A <AmiBlitz3.ab2@20994>   BSR writebyte
0002F70E <AmiBlitz3.ab2@20995>   BSR writebyte
0002F712 <AmiBlitz3.ab2@20996>   BSR writebyte                                            ;long
0002F716 <AmiBlitz3.ab2@20997>   BSR writebyte
0002F71A <AmiBlitz3.ab2@20998>   CMP.w #$2C,D0
0002F71E <AmiBlitz3.ab2@20999>    BEQ.w JL_0_C7D8
0002F720 <AmiBlitz3.ab2@21000> RTS
0002F722 <AmiBlitz3.ab2@21004>   MOVEQ.l #$0c,D3
0002F72A <AmiBlitz3.ab2@21008>   MOVE.b #1,_dcb
0002F730 <AmiBlitz3.ab2@21011>   JSR asmconst
0002F736 <AmiBlitz3.ab2@21012>   CLR.b _dcb
0002F73A <AmiBlitz3.ab2@21013>   BSR.w JL_0_C796
0002F73E <AmiBlitz3.ab2@21014>   BSR.w writebyte
0002F742 <AmiBlitz3.ab2@21015>   BSR.w writebyte
0002F746 <AmiBlitz3.ab2@21016>   BSR.w writebyte
0002F74A <AmiBlitz3.ab2@21017>   BSR.w writebyte
0002F74E <AmiBlitz3.ab2@21018>   CMP.w #$2C,D0
0002F752 <AmiBlitz3.ab2@21019>    BEQ.w JL_0_C7D8a
0002F754 <AmiBlitz3.ab2@21020> RTS
0002F756 <AmiBlitz3.ab2@21025>   MOVEQ.l #$11,D3
0002F75C <AmiBlitz3.ab2@21028>   JSR get1bytemain
0002F760 <AmiBlitz3.ab2@21029>   CMP.w #$22,D0
0002F764 <AmiBlitz3.ab2@21030>    BNE.w JL_0_C81E
0002F766 <AmiBlitz3.ab2@21033>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0002F76A <AmiBlitz3.ab2@21034>    BEQ.w syntaxerr
0002F76E <AmiBlitz3.ab2@21035>   CMP.w #$22,D0
0002F772 <AmiBlitz3.ab2@21036>    BEQ.w JL_0_C816
0002F776 <AmiBlitz3.ab2@21037>   CMP.b #"\",d0
0002F77A <AmiBlitz3.ab2@21038>    BNE 'n1
0002F77E <AmiBlitz3.ab2@21039>   CMP.b #"\",(a5)
0002F782 <AmiBlitz3.ab2@21040>    BEQ 'do1
0002F784 <AmiBlitz3.ab2@21043>   MOVE.w D0,D1
0002F788 <AmiBlitz3.ab2@21044>   BSR.w writebyte
0002F78C <AmiBlitz3.ab2@21045> BRA.w JL_0_C7FC
0002F794 <AmiBlitz3.ab2@21048>   CMP.l #"__DA",1(a5)
0002F798 <AmiBlitz3.ab2@21049>    BNE 'nodate1
0002F7A0 <AmiBlitz3.ab2@21050>   CMP.l #"TE__",5(a5)
0002F7A4 <AmiBlitz3.ab2@21051>    BEQ 'c1
0002F7AC <AmiBlitz3.ab2@21052>   CMP.l #"TE_G",5(a5)
0002F7B0 <AmiBlitz3.ab2@21053>    BNE 'nodate1
0002F7B8 <AmiBlitz3.ab2@21054>   CMP.l #"ER__",9(a5)
0002F7BC <AmiBlitz3.ab2@21055>    BNE 'nodate1
0002F7C2 <AmiBlitz3.ab2@21056>   JSR compiledatedc_ger
0002F7C6 <AmiBlitz3.ab2@21057> BRA 'n1
0002F7CC <AmiBlitz3.ab2@21060>   JSR compiledatedc
0002F7D0 <AmiBlitz3.ab2@21061> BRA 'n1
0002F7D8 <AmiBlitz3.ab2@21064>   CMP.l #"__VE",1(a5)
0002F7DC <AmiBlitz3.ab2@21065>    BNE 'n1
0002F7E2 <AmiBlitz3.ab2@21066>   CMP.w #"R_",5(a5)
0002F7E6 <AmiBlitz3.ab2@21067>    BNE 'n1
0002F7EC <AmiBlitz3.ab2@21068>   JSR version_string_dc
0002F7F0 <AmiBlitz3.ab2@21069> BRA.w JL_0_C7FC
0002F7F6 <AmiBlitz3.ab2@21073>   CLR.w instringon
0002F7FC <AmiBlitz3.ab2@21074>   JSR get1bytemain
0002F800 <AmiBlitz3.ab2@21075> BRA.w JL_0_C83A
0002F80A <AmiBlitz3.ab2@21080>    MOVE.w oldqflag,instringon
0002F810 <AmiBlitz3.ab2@21081>   MOVEA.l lastsourcepos,A5
0002F816 <AmiBlitz3.ab2@21082>    JSR asmconst
0002F81C <AmiBlitz3.ab2@21083>   SUBQ.l #1,destpointer
0002F820 <AmiBlitz3.ab2@21084>    BSR.w JL_0_C796
0002F826 <AmiBlitz3.ab2@21085>   ADDQ.l #1,destpointer
0002F82A <AmiBlitz3.ab2@21086>    BSR.w writebyte
0002F82E <AmiBlitz3.ab2@21089>   CMP.w #$2C,D0
0002F832 <AmiBlitz3.ab2@21090>    BEQ.w JL_0_C7F0
0002F834 <AmiBlitz3.ab2@21091> RTS
0002F836 <AmiBlitz3.ab2@21095>   MOVEQ.l #$10,D3
0002F83E <AmiBlitz3.ab2@21101>   MOVE.b #1,_dcb
0002F844 <AmiBlitz3.ab2@21102>   JSR asmconst
0002F84A <AmiBlitz3.ab2@21103>   CLR.b _dcb
0002F84E <AmiBlitz3.ab2@21104>   BSR.w JL_0_C796
0002F852 <AmiBlitz3.ab2@21105>   BSR.w writebyte
0002F856 <AmiBlitz3.ab2@21106>   BSR.w writebyte
0002F85A <AmiBlitz3.ab2@21107>   CMP.w #$2C,D0
0002F85E <AmiBlitz3.ab2@21108>    BEQ.w JL_0_C84A
0002F860 <AmiBlitz3.ab2@21109> RTS
0002F866 <AmiBlitz3.ab2@21113>   ADDQ.l #3,destpointer
0002F86E <AmiBlitz3.ab2@21114>   ANDI.w #$FFFC,destpointer+2
0002F870 <AmiBlitz3.ab2@21115> RTS
0002F876 <AmiBlitz3.ab2@21119>   ADDQ.l #7,destpointer
0002F87E <AmiBlitz3.ab2@21120>   ANDI.w #$FFF8,destpointer+2
0002F880 <AmiBlitz3.ab2@21121> RTS
0002F886 <AmiBlitz3.ab2@21125>   ADDQ.l #1,destpointer                                    ;even
0002F88E <AmiBlitz3.ab2@21126>   BCLR #$0,destpointer+3
0002F890 <AmiBlitz3.ab2@21127> RTS
0002F892 <AmiBlitz3.ab2@21130> datasize: Ds.w 1
0002F898 <AmiBlitz3.ab2@21140>   TST.b debugmode
0002F89C <AmiBlitz3.ab2@21141>   BEQ.w pdt__skip
0002F8A0 <AmiBlitz3.ab2@21142>   MOVE.w #$4420,D0                                         ;'D '
0002F8A4 <AmiBlitz3.ab2@21143>   MOVE.b datasize+1(PC),D0
0002F8A8 <AmiBlitz3.ab2@21144> BRA.w JL_0_C1E6
0002F8AA <AmiBlitz3.ab2@21147> RTS
0002F8AE <AmiBlitz3.ab2@21151>   MOVE.w #$FC17,D1
0002F8B4 <AmiBlitz3.ab2@21152>    JSR uselib
0002F8BE <AmiBlitz3.ab2@21154>    MOVE.w oldqflag,instringon
0002F8C4 <AmiBlitz3.ab2@21155>   MOVEA.l lastsourcepos,A5
0002F8CA <AmiBlitz3.ab2@21156>    JSR AJL_0_498A
0002F8D0 <AmiBlitz3.ab2@21157>   MOVE.w D1,datasize
0002F8D4 <AmiBlitz3.ab2@21158>   CMP.w #$7,D1
0002F8D8 <AmiBlitz3.ab2@21159>    BEQ.w JL_0_C944
0002F8DA <AmiBlitz3.ab2@21160>   MOVE.w D1,-(A7)
0002F8DE <AmiBlitz3.ab2@21163>   BSR.w pdt
0002F8E0 <AmiBlitz3.ab2@21164>   MOVE.w (A7),D2
0002F8E4 <AmiBlitz3.ab2@21165>    BSR.w JL_0_B1D8
0002F8E6 <AmiBlitz3.ab2@21166>   CMP.w (A7),D2                                            ;datamode
0002F8EA <AmiBlitz3.ab2@21167>    BEQ.w JL_0_C920
0002F8EC <AmiBlitz3.ab2@21168>   MOVE.w D2,D1
0002F8EE <AmiBlitz3.ab2@21169>   MOVE.w (A7),D2
0002F8F2 <AmiBlitz3.ab2@21170>   CMP.w #$2,D2
0002F8F6 <AmiBlitz3.ab2@21171>    BNE.w JL_0_C8FE
0002F8FA <AmiBlitz3.ab2@21172>   CMP.w #$3,D1
0002F8FE <AmiBlitz3.ab2@21173>    BNE.w baddaterr
0002F904 <AmiBlitz3.ab2@21174>   CMP.l #$10000,D3
0002F908 <AmiBlitz3.ab2@21175>    BCC.w baddaterr
0002F90C <AmiBlitz3.ab2@21176> BRA.w JL_0_C920
0002F910 <AmiBlitz3.ab2@21179>   CMP.w #$1,D2
0002F914 <AmiBlitz3.ab2@21180>    BNE.w JL_0_C91C
0002F918 <AmiBlitz3.ab2@21181>   CMP.w #$2,D1
0002F91C <AmiBlitz3.ab2@21182>    BNE.w baddaterr
0002F922 <AmiBlitz3.ab2@21183>   CMP.l #$100,D3
0002F926 <AmiBlitz3.ab2@21184>    BCC.w baddaterr
0002F92A <AmiBlitz3.ab2@21185> BRA.w JL_0_C920
0002F92E <AmiBlitz3.ab2@21188> BRA.w baddaterr
0002F932 <AmiBlitz3.ab2@21191>   CMP.w #$3,D2
0002F936 <AmiBlitz3.ab2@21192>   BCC.w JL_0_C930
0002F93A <AmiBlitz3.ab2@21193>   BSR.w JL_0_C1E6
0002F93E <AmiBlitz3.ab2@21194> BRA.w JL_0_C934
0002F944 <AmiBlitz3.ab2@21197>   TST.b iee
0002F948 <AmiBlitz3.ab2@21198>   BEQ 'old
0002F94C <AmiBlitz3.ab2@21199>   CMP.b #5,d2
0002F950 <AmiBlitz3.ab2@21200>   BNE 'old
0002F954 <AmiBlitz3.ab2@21201>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
0002F958 <AmiBlitz3.ab2@21205>   BSR.w JL_0_C1DE                                          ;write data >3
0002F95E <AmiBlitz3.ab2@21208>   JSR reget
0002F962 <AmiBlitz3.ab2@21209>   CMP.w #$2C,D0
0002F966 <AmiBlitz3.ab2@21210>    BEQ.w JL_0_C8CC
0002F968 <AmiBlitz3.ab2@21211>   ADDQ.w #2,A7
0002F96A <AmiBlitz3.ab2@21212> RTS
0002F96E <AmiBlitz3.ab2@21215>    BSR.w pdt
0002F974 <AmiBlitz3.ab2@21216>   MOVE.l data2,-(A7)
0002F978 <AmiBlitz3.ab2@21217>    BSR.w JL_0_C1DE
0002F97A <AmiBlitz3.ab2@21218>   MOVEQ.l #$00,D1
0002F980 <AmiBlitz3.ab2@21219>    JSR get1bytemain
0002F984 <AmiBlitz3.ab2@21220>    BEQ.w JL_0_C9A6
0002F988 <AmiBlitz3.ab2@21221>   CMP.w #$22,D0
0002F98C <AmiBlitz3.ab2@21222>    BEQ.w JL_0_C988
0002F990 <AmiBlitz3.ab2@21223>   CMP.w #$2C,D0
0002F994 <AmiBlitz3.ab2@21224>    BEQ.w JL_0_C9A6
0002F998 <AmiBlitz3.ab2@21227>    BSR.w JL_0_C210
0002F99A <AmiBlitz3.ab2@21228>   ADDQ.w #1,D1
0002F9A0 <AmiBlitz3.ab2@21229>    JSR getchar
0002F9A2 <AmiBlitz3.ab2@21230>   TST.w D0
0002F9A6 <AmiBlitz3.ab2@21231>    BEQ.w JL_0_C9A6
0002F9AA <AmiBlitz3.ab2@21232>   CMP.w #$2C,D0
0002F9AE <AmiBlitz3.ab2@21233>    BEQ.w JL_0_C9A6
0002F9B2 <AmiBlitz3.ab2@21234> BRA.w JL_0_C96C
0002F9B4 <AmiBlitz3.ab2@21238>    MOVEQ #0,d0
0002F9B6 <AmiBlitz3.ab2@21239>    MOVE.b (a5)+,d0
0002F9BA <AmiBlitz3.ab2@21240>    BEQ.w notqerr2
0002F9BE <AmiBlitz3.ab2@21241>   CMP.w #$22,D0
0002F9C2 <AmiBlitz3.ab2@21242>    BEQ.w JL_0_C9A2
0002F9C6 <AmiBlitz3.ab2@21243>    BSR.w JL_0_C210
0002F9C8 <AmiBlitz3.ab2@21244>   ADDQ.w #1,D1
0002F9CC <AmiBlitz3.ab2@21245> BRA.w JL_0_C988
0002F9D2 <AmiBlitz3.ab2@21246> notqerr2 JMP notqerr
0002F9D8 <AmiBlitz3.ab2@21248>   CLR.w instringon
0002F9DE <AmiBlitz3.ab2@21249>   JSR get1bytemain
0002F9E0 <AmiBlitz3.ab2@21252>   MOVEA.l (A7)+,A0
0002F9E6 <AmiBlitz3.ab2@21253>   MOVE.w dontwrite,D2
0002F9EA <AmiBlitz3.ab2@21254>    BNE.w JL_0_C9B4
0002F9EC <AmiBlitz3.ab2@21255>   MOVE.l D1,(A0)
0002F9F2 <AmiBlitz3.ab2@21258>   ADDQ.l #1,data2
0002F9FA <AmiBlitz3.ab2@21259>   BCLR #$0,data2+3
0002F9FE <AmiBlitz3.ab2@21260>   CMP.w #$2C,D0
0002FA02 <AmiBlitz3.ab2@21261>    BEQ.w JL_0_C944
0002FA04 <AmiBlitz3.ab2@21262> RTS
0002FA0A <AmiBlitz3.ab2@21266> JMP vardeclareerr
0002FA10 <AmiBlitz3.ab2@21269>   MOVE.w proceduremode,D1                                  ;doshared
0002FA14 <AmiBlitz3.ab2@21271>   BNE.w 'l1
0002FA16 <AmiBlitz3.ab2@21272>   MOVE.w D1,-(A7)
0002FA1C <AmiBlitz3.ab2@21273>   CLR.w proceduremode
0002FA22 <AmiBlitz3.ab2@21276>   LEA varbase,a2
0002FA26 <AmiBlitz3.ab2@21277>   BSR.w getparameter
0002FA28 <AmiBlitz3.ab2@21278>   MOVE.w d2,-(a7)
0002FA2E <AmiBlitz3.ab2@21279>    JSR findvariable
0002FA32 <AmiBlitz3.ab2@21280>    BEQ 'checkdim
0002FA38 <AmiBlitz3.ab2@21281>    LEA sharebase,a2
0002FA3A <AmiBlitz3.ab2@21282>    MOVEQ #$f+4,d7
0002FA3E <AmiBlitz3.ab2@21283>    BSR.w findlab                                         ;find var
0002FA42 <AmiBlitz3.ab2@21284>    BEQ.b dupsherr
0002FA46 <AmiBlitz3.ab2@21285>    BSR addlabel
0002FA4A <AmiBlitz3.ab2@21286>    CMP.b #".",d0
0002FA4E <AmiBlitz3.ab2@21287>    BNE JUMP_vardeclareerr
0002FA50 <AmiBlitz3.ab2@21288>    MOVE.l a2,a3
0002FA56 <AmiBlitz3.ab2@21289>    JSR JL_0_8EB8b
0002FA58 <AmiBlitz3.ab2@21320>   MOVE.w (a7)+,d2
0002FA5C <AmiBlitz3.ab2@21321>    CMP.b #",",d0
0002FA60 <AmiBlitz3.ab2@21322>    BNE 'ret
0002FA66 <AmiBlitz3.ab2@21323>    JSR get1bytemain
0002FA6A <AmiBlitz3.ab2@21324> BRA 'again2
0002FA70 <AmiBlitz3.ab2@21327>   MOVE.w (A7)+,proceduremode
0002FA72 <AmiBlitz3.ab2@21328> RTS
0002FA78 <AmiBlitz3.ab2@21335>    CMP.w #2,6(a2)
0002FA7C <AmiBlitz3.ab2@21336>    BEQ 'do
0002FA82 <AmiBlitz3.ab2@21337>    CMP.w #$102,6(a2)
0002FA86 <AmiBlitz3.ab2@21338>    BEQ 'do
0002FA8C <AmiBlitz3.ab2@21339> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0002FA92 <AmiBlitz3.ab2@21342>   LEA varbase,a0
0002FA94 <AmiBlitz3.ab2@21345>   MOVE.l (A0),D0                                           ;find label
0002FA98 <AmiBlitz3.ab2@21346>    BEQ.b 'z1
0002FA9A <AmiBlitz3.ab2@21347>    CMP.l d0,a2
0002FA9E <AmiBlitz3.ab2@21348>    BEQ 'z1
0002FAA0 <AmiBlitz3.ab2@21349>    MOVE.l d0,a0
0002FAA4 <AmiBlitz3.ab2@21350> BRA 'm1
0002FAA6 <AmiBlitz3.ab2@21353>   MOVE.l (a2),d1
0002FAA8 <AmiBlitz3.ab2@21354>     MOVE.l d1,(a0)
0002FAAA <AmiBlitz3.ab2@21355>     CLR.l (a2)
0002FAB0 <AmiBlitz3.ab2@21356>     LEA sharebase,a0
0002FAB2 <AmiBlitz3.ab2@21357>     MOVE.l (a0),(a2)
0002FAB4 <AmiBlitz3.ab2@21358>     MOVE.l a2,(a0)
0002FABA <AmiBlitz3.ab2@21359>     JSR get1bytemain
0002FAC0 <AmiBlitz3.ab2@21360>     JSR get1bytemain
0002FAC4 <AmiBlitz3.ab2@21361> BRA 'domore
0002FACC <AmiBlitz3.ab2@21364>   MOVE.b #1,nowdeclare
0002FACE <AmiBlitz3.ab2@21365>   MOVE.w D1,-(A7)
0002FAD4 <AmiBlitz3.ab2@21366>   CLR.w proceduremode
0002FAD8 <AmiBlitz3.ab2@21369>    BSR.w getparameter
0002FADA <AmiBlitz3.ab2@21370>   MOVE.w D2,-(A7)
0002FAE0 <AmiBlitz3.ab2@21371>   LEA firstglob,A2
0002FAE4 <AmiBlitz3.ab2@21372>    BSR.w findvariable2
0002FAE8 <AmiBlitz3.ab2@21373>    BNE.b JL_0_CA06
0002FAEE <AmiBlitz3.ab2@21376>   MOVE.b flagmask+1,D1
0002FAF2 <AmiBlitz3.ab2@21377>   MOVE.b $7(A2),D3
0002FAF4 <AmiBlitz3.ab2@21378>   EOR.b D3,D1
0002FAF8 <AmiBlitz3.ab2@21379>    BEQ.w dupsherr
0002FAFC <AmiBlitz3.ab2@21380>    BSR.w findlab
0002FB00 <AmiBlitz3.ab2@21381>    BEQ.b JL_0_C9F0
0002FB04 <AmiBlitz3.ab2@21384>    BSR.w addlabel
0002FB06 <AmiBlitz3.ab2@21385>   MOVE.w (A7)+,D2
0002FB08 <AmiBlitz3.ab2@21386>   MOVE.l A2,-(A7)
0002FB0C <AmiBlitz3.ab2@21387>    BSR.w JL_0_8E3C
0002FB0E <AmiBlitz3.ab2@21388>   MOVEA.l (A7)+,A2
0002FB10 <AmiBlitz3.ab2@21389>   MOVEQ.l #$04,D1
0002FB12 <AmiBlitz3.ab2@21390>   ADDQ.w #4,A2
0002FB14 <AmiBlitz3.ab2@21391>   ADDQ.w #4,A3
0002FB16 <AmiBlitz3.ab2@21394>     MOVE.w (A3)+,(A2)+
0002FB1A <AmiBlitz3.ab2@21395>   DBF D1,JL_0_CA1A
0002FB22 <AmiBlitz3.ab2@21397>   BTST #$1,flagmask+1
0002FB26 <AmiBlitz3.ab2@21398>    BEQ.w JL_0_CA3C
0002FB2C <AmiBlitz3.ab2@21399>    JSR get1bytemain
0002FB30 <AmiBlitz3.ab2@21400>   CMP.w #$29,D0
0002FB34 <AmiBlitz3.ab2@21401>    BNE.w syntaxerrc
0002FB3A <AmiBlitz3.ab2@21402>    JSR get1bytemain
0002FB3E <AmiBlitz3.ab2@21405>    CMP.w #$2C,D0
0002FB42 <AmiBlitz3.ab2@21406>    BNE.w JL_0_CA4C
0002FB48 <AmiBlitz3.ab2@21407>    JSR get1bytemain
0002FB4C <AmiBlitz3.ab2@21408> BRA.w JL_0_C9DE
0002FB52 <AmiBlitz3.ab2@21411>   MOVE.w (A7)+,proceduremode
0002FB54 <AmiBlitz3.ab2@21412> RTS
0002FB5A <AmiBlitz3.ab2@21414> syntaxerrc JMP syntaxerr
0002FB5E <AmiBlitz3.ab2@21417>    BSR.w JL_0_C05C
0002FB64 <AmiBlitz3.ab2@21418>    JSR check_incdir                                        ; ergebnis in d2
0002FB6A <AmiBlitz3.ab2@21420>    LEA ptr_parameterstore,a1
0002FB6C <AmiBlitz3.ab2@21421>    MOVE.l d2,-(a7)
0002FB72 <AmiBlitz3.ab2@21422>    LEA includetemp,a0                                      ; filename in includetemp packen
0002FB74 <AmiBlitz3.ab2@21425>      MOVE.b (a1)+,(a0)+
0002FB78 <AmiBlitz3.ab2@21426>    BNE 'l4
0002FB7E <AmiBlitz3.ab2@21428>    LEA ptr_parameterstore,a1
0002FB80 <AmiBlitz3.ab2@21429>    MOVE.l a1,a0
0002FB82 <AmiBlitz3.ab2@21432>     TST.b (a0)+
0002FB86 <AmiBlitz3.ab2@21433>    BNE 'l1
0002FB88 <AmiBlitz3.ab2@21436>      MOVE.b -(a0),d0
0002FB8C <AmiBlitz3.ab2@21437>      CMP.b #":",d0
0002FB90 <AmiBlitz3.ab2@21438>       BEQ 'out
0002FB94 <AmiBlitz3.ab2@21439>      CMP.b #"/",d0
0002FB98 <AmiBlitz3.ab2@21440>       BEQ 'out
0002FB9A <AmiBlitz3.ab2@21441>      CMP.l a1,a0
0002FB9E <AmiBlitz3.ab2@21442>       BEQ 'out2
0002FBA2 <AmiBlitz3.ab2@21443> BRA 'l2
0002FBA4 <AmiBlitz3.ab2@21446>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0002FBA6 <AmiBlitz3.ab2@21449>    MOVEQ.l #-$01,D2
0002FBA8 <AmiBlitz3.ab2@21452>      ADDQ.w #1,D2
0002FBAA <AmiBlitz3.ab2@21453>      MOVE.b (a0)+,(a1)+
0002FBAE <AmiBlitz3.ab2@21454>    BNE 'l3
0002FBB0 <AmiBlitz3.ab2@21455>    CLR.b (a1)+
0002FBB6 <AmiBlitz3.ab2@21457>    LEA ptr_parameterstore,a1
0002FBBA <AmiBlitz3.ab2@21458>    BSR.w findxinc                                         ;find include
0002FBBE <AmiBlitz3.ab2@21459>     BEQ.w 'outb
0002FBC0 <AmiBlitz3.ab2@21461>    MOVE.w D2,-(A7)
0002FBC4 <AmiBlitz3.ab2@21462>    BSR.w addlabel
0002FBC6 <AmiBlitz3.ab2@21463>    MOVE.w (A7)+,D2
0002FBCC <AmiBlitz3.ab2@21465>    LEA ptr_parameterstore,a1
0002FBD2 <AmiBlitz3.ab2@21466>    LEA includetemp,a0                                      ; namen in includetemp schreiben
0002FBD4 <AmiBlitz3.ab2@21469>     MOVE.b (a0)+,(a1)+
0002FBD8 <AmiBlitz3.ab2@21470>    BNE 'l4b
0002FBDA <AmiBlitz3.ab2@21472>    MOVE.l (a7)+,d2
0002FBE0 <AmiBlitz3.ab2@21473>    LEA ptr_parameterstore,a1
0002FBE4 <AmiBlitz3.ab2@21474> BRA.w JL_0_CB18
0002FBEA <AmiBlitz3.ab2@21477>    LEA ptr_parameterstore,a1
0002FBF0 <AmiBlitz3.ab2@21478>    LEA includetemp,a0
0002FBF2 <AmiBlitz3.ab2@21481>     MOVE.b (a0)+,(a1)+
0002FBF6 <AmiBlitz3.ab2@21482>    BNE 'l4b2
0002FBF8 <AmiBlitz3.ab2@21484>    MOVE.l (a7)+,d2
0002FBFE <AmiBlitz3.ab2@21485>    LEA ptr_parameterstore,a1
0002FC00 <AmiBlitz3.ab2@21488> RTS
0002FC04 <AmiBlitz3.ab2@21492>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
0002FC0A <AmiBlitz3.ab2@21494>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
0002FC10 <AmiBlitz3.ab2@21496>   MOVEA.l _dosbase,A6
0002FC12 <AmiBlitz3.ab2@21497>   MOVE.l D0,D7                                                 ; store Lockpointer
0002FC16 <AmiBlitz3.ab2@21498>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
0002FC18 <AmiBlitz3.ab2@21499>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
0002FC1E <AmiBlitz3.ab2@21500>   MOVE.l ptr_macrobuffer_begin,D2
0002FC22 <AmiBlitz3.ab2@21501>    JSR _Examine(A6)
0002FC28 <AmiBlitz3.ab2@21502>   MOVEA.l ptr_macrobuffer_begin,A0
0002FC2C <AmiBlitz3.ab2@21503>   MOVE.l $4(A0),D0
0002FC30 <AmiBlitz3.ab2@21504>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
0002FC34 <AmiBlitz3.ab2@21505>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
0002FC36 <AmiBlitz3.ab2@21506>   MOVE.l D7,D1                                                 ; begin unlock the file
0002FC3A <AmiBlitz3.ab2@21507>    JSR _UnLock(A6)
0002FC40 <AmiBlitz3.ab2@21509>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
0002FC46 <AmiBlitz3.ab2@21510>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
0002FC4A <AmiBlitz3.ab2@21511>    JSR _Open(A6)
0002FC4C <AmiBlitz3.ab2@21512>   MOVE.l D0,D7
0002FC50 <AmiBlitz3.ab2@21513>    BEQ.w error_cant_open_include
0002FC56 <AmiBlitz3.ab2@21514>   MOVE.l destpointer,D0
0002FC58 <AmiBlitz3.ab2@21515>   ADD.l D3,D0
0002FC5E <AmiBlitz3.ab2@21516>   CMP.l destbufferend,D0
0002FC62 <AmiBlitz3.ab2@21517>    BHI.w JL_0_CAF6
0002FC68 <AmiBlitz3.ab2@21518>   MOVE.l destpointer,D2
0002FC6A <AmiBlitz3.ab2@21519>   MOVE.l D7,D1
0002FC6E <AmiBlitz3.ab2@21520>    JSR _Read(A6)
0002FC74 <AmiBlitz3.ab2@21521>   CMP.l #$FFFFFFFF,D0
0002FC78 <AmiBlitz3.ab2@21522>    BEQ.w error_reading_file
0002FC7E <AmiBlitz3.ab2@21523>   ADD.l D0,destpointer
0002FC82 <AmiBlitz3.ab2@21524> BRA.w JL_0_CB04
0002FC8A <AmiBlitz3.ab2@21527>   MOVE.w #$FFFF,dontwrite
0002FC90 <AmiBlitz3.ab2@21528>   MOVE.l D0,destpointer
0002FC92 <AmiBlitz3.ab2@21531>   MOVE.l D7,D1
0002FC96 <AmiBlitz3.ab2@21532> JMP _Close(A6)
0002FC9C <AmiBlitz3.ab2@21536> JMP illdirerr
0002FCA2 <AmiBlitz3.ab2@21539>   TST.w dirmode                                            ;include  open
0002FCA6 <AmiBlitz3.ab2@21540>    BNE.w JUMP_illdirerr
0002FCAA <AmiBlitz3.ab2@21541>   BSR.w JL_0_C05C
0002FCB0 <AmiBlitz3.ab2@21542>   JSR check_incdir
0002FCB4 <AmiBlitz3.ab2@21545>   BSR.w findconstant
0002FCB8 <AmiBlitz3.ab2@21546>    BEQ.w alincerr
0002FCBE <AmiBlitz3.ab2@21548>   LEA constantbase,A2
0002FCC2 <AmiBlitz3.ab2@21549>   BSR.w addhere2
0002FCC6 <AmiBlitz3.ab2@21550>   CLR.w $C(A2)
0002FCCA <AmiBlitz3.ab2@21551>   CLR.l $4(A2)
0002FCD0 <AmiBlitz3.ab2@21553>   MOVE.l #ptr_parameterstore,D1
0002FCD2 <AmiBlitz3.ab2@21554>   MOVE.l d1,a0
0002FCD8 <AmiBlitz3.ab2@21555>   LEA includetemp2,a1
0002FCDA <AmiBlitz3.ab2@21558>     MOVE.b (a0)+,(a1)+
0002FCDE <AmiBlitz3.ab2@21559>   BNE 'l1
0002FCE4 <AmiBlitz3.ab2@21560>   JSR save_includename
0002FCEE <AmiBlitz3.ab2@21561>   MOVE.l #0,include_process
0002FCF6 <AmiBlitz3.ab2@21563>   CMP.l #$62623200,-4(a0)                                  ;.bb2
0002FCFA <AmiBlitz3.ab2@21564>   BEQ 'ok
0002FD02 <AmiBlitz3.ab2@21565>   CMP.l #$61623300,-4(a0)                                  ;.ab3
0002FD06 <AmiBlitz3.ab2@21566>   BEQ 'ok_tokenize
0002FD0E <AmiBlitz3.ab2@21567>   CMP.l #$61623200,-4(a0)                                  ;.ab2
0002FD12 <AmiBlitz3.ab2@21568>   BEQ 'ok_tokenize
0002FD1A <AmiBlitz3.ab2@21569>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
0002FD1E <AmiBlitz3.ab2@21570>   BEQ 'ok
0002FD24 <AmiBlitz3.ab2@21571> JMP errortoken                                             ;can only include
0002FD2E <AmiBlitz3.ab2@21574>    MOVE.l #-1,include_process                              ; must tokenize the include
0002FD34 <AmiBlitz3.ab2@21577>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002FD3A <AmiBlitz3.ab2@21578>   MOVEA.l _dosbase,A6
0002FD3E <AmiBlitz3.ab2@21579>   JSR _Open(A6)
0002FD42 <AmiBlitz3.ab2@21580>   MOVE.l D0,$8(A2)
0002FD46 <AmiBlitz3.ab2@21581>   BEQ.w error_cant_open_include
0002FD4C <AmiBlitz3.ab2@21582>   CLR.l includeline
0002FD50 <AmiBlitz3.ab2@21583>   MOVE.l 8(a2),d1
0002FD52 <AmiBlitz3.ab2@21584>   MOVE.l d3,-(a7)
0002FD54 <AmiBlitz3.ab2@21585>   MOVEQ #0,d2
0002FD56 <AmiBlitz3.ab2@21586>   MOVEQ #1,d3
0002FD5A <AmiBlitz3.ab2@21587>   JSR _Seek(a6)                                            ; -66
0002FD5E <AmiBlitz3.ab2@21588>   MOVE.l 8(a2),d1
0002FD60 <AmiBlitz3.ab2@21589>   MOVEQ #0,d2
0002FD62 <AmiBlitz3.ab2@21590>   MOVEQ #-1,d3
0002FD66 <AmiBlitz3.ab2@21591>   JSR _Seek(a6)                                            ; -66
0002FD68 <AmiBlitz3.ab2@21592>   MOVE.l (a7)+,d3
0002FD6A <AmiBlitz3.ab2@21593>   ADDQ.l #4,d0
0002FD70 <AmiBlitz3.ab2@21595>   MOVE.l #$10000,D1
0002FD76 <AmiBlitz3.ab2@21596>   MOVEA.l _execbase,A6
0002FD7A <AmiBlitz3.ab2@21599>   JSR _AllocVec(a6)
0002FD7E <AmiBlitz3.ab2@21601>   MOVE.l D0,$4(A2)
0002FD82 <AmiBlitz3.ab2@21602>   MOVE.l D0,$E(A2)
0002FD84 <AmiBlitz3.ab2@21603>   MOVEA.l D0,A5
0002FD8A <AmiBlitz3.ab2@21610>   ADDQ.w #1,ininclude                                      ;enter include
0002FD90 <AmiBlitz3.ab2@21613>   LEA _include,a0
0002FD94 <AmiBlitz3.ab2@21614>   MOVEM.l a0-a6/d0-d7,-(a7)
0002FD9A <AmiBlitz3.ab2@21615>   LEA ptr_parameterstore,a1
0002FD9C <AmiBlitz3.ab2@21618>     MOVE.b (a0)+,(a1)+
0002FDA0 <AmiBlitz3.ab2@21619>   BNE 'l1b
0002FDA2 <AmiBlitz3.ab2@21621>   MOVEQ #9,d2
0002FDA8 <AmiBlitz3.ab2@21622>   JSR findlabel2
0002FDAC <AmiBlitz3.ab2@21623>   BNE 'd
0002FDB4 <AmiBlitz3.ab2@21624>   MOVE.l #1,8(a2)
0002FDB8 <AmiBlitz3.ab2@21625>   MOVEM.l (a7)+,a0-a6/d0-d7
0002FDBC <AmiBlitz3.ab2@21626> BRA 'd2
0002FDC2 <AmiBlitz3.ab2@21629>   JSR addlabelhash
0002FDCA <AmiBlitz3.ab2@21630>   MOVE.l #$1,$4(A2)
0002FDD2 <AmiBlitz3.ab2@21631>   MOVE.l #1,8(a2)
0002FDD6 <AmiBlitz3.ab2@21632>   MOVEM.l (a7)+,a0-a6/d0-d7
0002FDDC <AmiBlitz3.ab2@21635>   LEA inctab,a0
0002FDDE <AmiBlitz3.ab2@21636>   MOVEQ #0,d1
0002FDE4 <AmiBlitz3.ab2@21637>   MOVE.w ininclude,d1
0002FDE8 <AmiBlitz3.ab2@21638>   CLR.l $0(a0,d1*4)
0002FDEE <AmiBlitz3.ab2@21639>   MOVEA.l passstack,A7
0002FDF4 <AmiBlitz3.ab2@21640> JMP AJL_0_413A
0002FDFA <AmiBlitz3.ab2@21642> JUMP_dupmacerr JMP dupmacerr
0002FDFC <AmiBlitz3.ab2@21644> coolnest:   Ds.w 1
0002FE00 <AmiBlitz3.ab2@21645> macline:    Ds.l 1
0002FE0A <AmiBlitz3.ab2@21649>   MOVE.l linenumat,macline
0002FE0E <AmiBlitz3.ab2@21650>    BSR.w makename2
0002FE12 <AmiBlitz3.ab2@21651>    BEQ.w JUMP_syntaxerr
0002FE18 <AmiBlitz3.ab2@21653>    CLR.b thenmode
0002FE22 <AmiBlitz3.ab2@21655>    MOVE.w oldqflag,instringon
0002FE28 <AmiBlitz3.ab2@21656>   MOVEA.l lastsourcepos,A5
0002FE2C <AmiBlitz3.ab2@21657>    BSR.w findmac
0002FE30 <AmiBlitz3.ab2@21658>    BEQ.w JUMP_dupmacerr
0002FE34 <AmiBlitz3.ab2@21659>    BSR.w addlabel
0002FE38 <AmiBlitz3.ab2@21660>   CLR.w $A(A2)
0002FE3E <AmiBlitz3.ab2@21661>   MOVEA.l ptr_macrobuffer_begin,A0
0002FE40 <AmiBlitz3.ab2@21662>   MOVEQ.l #$00,D2
0002FE46 <AmiBlitz3.ab2@21663>   CLR.w coolnest
0002FE48 <AmiBlitz3.ab2@21666>   MOVE.b (a5),d0
0002FE4C <AmiBlitz3.ab2@21667>      BEQ 'l3
0002FE50 <AmiBlitz3.ab2@21668>      CMP.b #" ",d0
0002FE54 <AmiBlitz3.ab2@21669>       BNE 'l2                                              ;space macro
0002FE56 <AmiBlitz3.ab2@21670>       ADDQ.l #1,a5
0002FE5A <AmiBlitz3.ab2@21671> BRA 'l1
0002FE5E <AmiBlitz3.ab2@21674>    CMP.b #";",d0
0002FE62 <AmiBlitz3.ab2@21675>       BNE 'l3
0002FE64 <AmiBlitz3.ab2@21678>    MOVE.b (a5),d0
0002FE68 <AmiBlitz3.ab2@21679>       BEQ 'l5
0002FE6C <AmiBlitz3.ab2@21680>       BSR.w JL_0_CC98                                      ;add comment
0002FE6E <AmiBlitz3.ab2@21681>       ADDQ.l #1,a5
0002FE72 <AmiBlitz3.ab2@21682> BRA 'l4
0002FE76 <AmiBlitz3.ab2@21685>    MOVE.b #":",d0
0002FE7A <AmiBlitz3.ab2@21686>       BSR.w JL_0_CC98
0002FE7E <AmiBlitz3.ab2@21687>       MOVE.b #"@",d0
0002FE82 <AmiBlitz3.ab2@21688>       BSR.w JL_0_CC98
0002FE8A <AmiBlitz3.ab2@21691>    MOVE.b #0,temp
0002FE92 <AmiBlitz3.ab2@21692>       MOVE.b #0,thenmode
0002FE98 <AmiBlitz3.ab2@21695>   JSR getcharb
0002FE9A <AmiBlitz3.ab2@21696>   TST.w D0
0002FE9E <AmiBlitz3.ab2@21697>    BNE.w JL_0_CBDE
0002FEA2 <AmiBlitz3.ab2@21698>   MOVEM.l D2/A0/A2,-(A7)
0002FEA8 <AmiBlitz3.ab2@21699>   CMP.w #"@@",-3(a5)
0002FEAC <AmiBlitz3.ab2@21700>   BNE 'l2a
0002FEB2 <AmiBlitz3.ab2@21701>   JSR nextline
0002FEB6 <AmiBlitz3.ab2@21702>   BEQ.w JUMP_macenderr
0002FEBA <AmiBlitz3.ab2@21703>   MOVEM.l (A7)+,D2/A0/A2
0002FEBE <AmiBlitz3.ab2@21704> BRA.w JL_0_CBB6
0002FEC4 <AmiBlitz3.ab2@21707>    JSR nextline
0002FEC8 <AmiBlitz3.ab2@21708>    BEQ.w JUMP_macenderr
0002FECC <AmiBlitz3.ab2@21709>   MOVEM.l (A7)+,D2/A0/A2
0002FECE <AmiBlitz3.ab2@21710>   TST.w D2
0002FED2 <AmiBlitz3.ab2@21711>    BEQ.w JL_0_CBB6
0002FED4 <AmiBlitz3.ab2@21714>   MOVE.b (a5),d0
0002FED8 <AmiBlitz3.ab2@21715>       CMP.b #" ",d0
0002FEDC <AmiBlitz3.ab2@21716>       BNE 'l1
0002FEDE <AmiBlitz3.ab2@21717>       ADDQ.w #1,a5
0002FEE2 <AmiBlitz3.ab2@21718> BRA 'l2
0002FEE8 <AmiBlitz3.ab2@21721>   TST.b thenmode
0002FEEC <AmiBlitz3.ab2@21722>      BEQ 'l3
0002FEEE <AmiBlitz3.ab2@21723>      MOVEQ #":",d0
0002FEF2 <AmiBlitz3.ab2@21724>      BSR.w JL_0_CC98
0002FEF6 <AmiBlitz3.ab2@21725>      MOVE.w #-$7FFE,D0                                     ;write end if
0002FEFA <AmiBlitz3.ab2@21726>      BSR macputw
0002FEFE <AmiBlitz3.ab2@21727>      MOVE.w #$800b,d0
0002FF02 <AmiBlitz3.ab2@21728>      BSR.w macputw
0002FF08 <AmiBlitz3.ab2@21729>      CLR.b thenmode
0002FF0A <AmiBlitz3.ab2@21732>    MOVEQ.l #$3A,D0
0002FF12 <AmiBlitz3.ab2@21733>      MOVE.b #1,temp
0002FF16 <AmiBlitz3.ab2@21735> BRA.w JL_0_CC2A
0002FF1A <AmiBlitz3.ab2@21739>   BPL.w JL_0_CC2A
0002FF1E <AmiBlitz3.ab2@21740>   CMP.w #-$7FF3,D0                                         ;macro ?
0002FF22 <AmiBlitz3.ab2@21741>    BNE.w JL_0_CBF4
0002FF28 <AmiBlitz3.ab2@21742>   ADDQ.w #1,coolnest
0002FF2C <AmiBlitz3.ab2@21743> BRA.w JL_0_CC22
0002FF32 <AmiBlitz3.ab2@21745> JUMP_macnesterr JMP macnesterr
0002FF36 <AmiBlitz3.ab2@21748>   CMP.w #$80d7,d0                                          ;object ?
0002FF3A <AmiBlitz3.ab2@21749>     BNE 'l1x
0002FF40 <AmiBlitz3.ab2@21750>     TST.b objectcount
0002FF44 <AmiBlitz3.ab2@21751>     BNE JUMP_macnesterr
0002FF48 <AmiBlitz3.ab2@21754>   CMP.w #$8021,d0
0002FF4C <AmiBlitz3.ab2@21755>     BNE 'nothen
0002FF54 <AmiBlitz3.ab2@21756>     MOVE.b #1,thenmode
0002FF5A <AmiBlitz3.ab2@21759>   TST.b thenmode
0002FF5E <AmiBlitz3.ab2@21760>         BEQ 'l1
0002FF62 <AmiBlitz3.ab2@21761>    CMP.w #$8002,d0                                         ;end if
0002FF66 <AmiBlitz3.ab2@21762>    BNE 'l1
0002FF6A <AmiBlitz3.ab2@21763>    MOVEM.l d0/a5,-(a7)
0002FF70 <AmiBlitz3.ab2@21764>    JSR get1bytemain
0002FF72 <AmiBlitz3.ab2@21765>    MOVE.w d0,d1
0002FF76 <AmiBlitz3.ab2@21766>    MOVEM.l (a7)+,a5/d0
0002FF7A <AmiBlitz3.ab2@21767>    CMP.w #$800b,d1
0002FF7E <AmiBlitz3.ab2@21768>    BNE 'l1
0002FF84 <AmiBlitz3.ab2@21769>    CLR.b thenmode
0002FF88 <AmiBlitz3.ab2@21772>    CMP.w #-$7FFE,D0                                        ;end ?
0002FF8C <AmiBlitz3.ab2@21773>    BNE.w JL_0_CC22
0002FF8E <AmiBlitz3.ab2@21774>    MOVE.l a5,-(a7)
0002FF94 <AmiBlitz3.ab2@21775>    JSR get1bytemain
0002FF96 <AmiBlitz3.ab2@21776>    MOVE.l (a7)+,a5
0002FF98 <AmiBlitz3.ab2@21777>    TST.w d0
0002FF9C <AmiBlitz3.ab2@21778>    BEQ 'doend
0002FFA0 <AmiBlitz3.ab2@21779>    CMP.w #":",d0
0002FFA4 <AmiBlitz3.ab2@21780>    BEQ 'doend
0002FFA8 <AmiBlitz3.ab2@21781>    CMP.w #";",d0
0002FFAC <AmiBlitz3.ab2@21782>    BEQ 'doend
0002FFAE <AmiBlitz3.ab2@21783>    MOVE.l a5,-(a7)
0002FFB4 <AmiBlitz3.ab2@21784>    JSR get1bytemain
0002FFB8 <AmiBlitz3.ab2@21785>    MOVE.l -1(a5),d0
0002FFBA <AmiBlitz3.ab2@21786>    MOVE.l (a7)+,a5
0002FFC0 <AmiBlitz3.ab2@21787>    CMP.l #"noa7",d0
0002FFC4 <AmiBlitz3.ab2@21788>    BEQ 'doend
0002FFC8 <AmiBlitz3.ab2@21789> BRA 'morechar
0002FFCC <AmiBlitz3.ab2@21792>   MOVE.w #$8002,D0
0002FFD0 <AmiBlitz3.ab2@21793>    BSR.w macputw
0002FFD4 <AmiBlitz3.ab2@21794> BRA JL_0_CBB6
0002FFDA <AmiBlitz3.ab2@21797>   JSR get1bytemain
0002FFDE <AmiBlitz3.ab2@21798>    CMP.w #-$7FF3,D0                                        ;end macro
0002FFE2 <AmiBlitz3.ab2@21799>    BEQ.w 'lo1
0002FFE6 <AmiBlitz3.ab2@21800>   CMP.w #$80d7,d0                                          ;end object
0002FFEA <AmiBlitz3.ab2@21801>   BNE JL_0_CC12
0002FFF0 <AmiBlitz3.ab2@21802>   SUBQ.b #1,objectcount
0002FFF6 <AmiBlitz3.ab2@21803>   TST.b developobject
0002FFFA <AmiBlitz3.ab2@21804>   BEQ 'lo1
0002FFFE <AmiBlitz3.ab2@21805>   BSR skiprest
00030000 <AmiBlitz3.ab2@21806> RTS
00030006 <AmiBlitz3.ab2@21809>   SUBQ.w #1,coolnest
0003000A <AmiBlitz3.ab2@21810>    BMI.w JL_0_CC32
0003000C <AmiBlitz3.ab2@21813>   MOVE.w D0,-(A7)
00030010 <AmiBlitz3.ab2@21814>   MOVE.w #$8002,D0
00030014 <AmiBlitz3.ab2@21815>    BSR.w macputw
00030016 <AmiBlitz3.ab2@21816>   MOVE.w (A7)+,D0
0003001A <AmiBlitz3.ab2@21817> BRA.w JL_0_CC22
0003001E <AmiBlitz3.ab2@21820>   BSR.w macputw
00030022 <AmiBlitz3.ab2@21821> BRA.w JL_0_CBB6
00030028 <AmiBlitz3.ab2@21823> JUMP_macenderr JMP macenderr
0003002E <AmiBlitz3.ab2@21826>     CMP.w #"@@",-1(a5)                                     ;merge lines
00030032 <AmiBlitz3.ab2@21827>     BNE 'no
00030036 <AmiBlitz3.ab2@21828>      MOVEM.l D2/A0/A2,-(A7)
0003003C <AmiBlitz3.ab2@21829>    JSR nextline
00030040 <AmiBlitz3.ab2@21830>    BEQ.w JUMP_macenderr
00030044 <AmiBlitz3.ab2@21831>   MOVEM.l (A7)+,D2/A0/A2
00030046 <AmiBlitz3.ab2@21832>     TST.w D2
0003004A <AmiBlitz3.ab2@21833>    BEQ.w JL_0_CBB6
0003004E <AmiBlitz3.ab2@21834> BRA JL_0_CBB6
00030052 <AmiBlitz3.ab2@21838>   BSR.w JL_0_CC98
00030056 <AmiBlitz3.ab2@21839> BRA.w JL_0_CBB6
00030058 <AmiBlitz3.ab2@21842>   ADDQ.w #4,A7
0003005A <AmiBlitz3.ab2@21843>   MOVE.l A0,D0
00030060 <AmiBlitz3.ab2@21844>   SUB.l ptr_macrobuffer_begin,D0
00030064 <AmiBlitz3.ab2@21847>    BEQ.w JL_0_CC5E
00030068 <AmiBlitz3.ab2@21848>   CMPI.b #":",-(A0)
0003006C <AmiBlitz3.ab2@21849>    BNE.w JL_0_CC5E
00030070 <AmiBlitz3.ab2@21850>   CMP.w #$1,D0
00030074 <AmiBlitz3.ab2@21851>    BEQ.w JL_0_CC58
00030078 <AmiBlitz3.ab2@21852>   TST.b -$1(A0)
0003007C <AmiBlitz3.ab2@21853>    BMI.w JL_0_CC5E
0003007E <AmiBlitz3.ab2@21856>   SUBQ.w #1,D0
00030082 <AmiBlitz3.ab2@21857> BRA.w JL_0_CC3C
00030086 <AmiBlitz3.ab2@21860>   MOVE.w D0,$8(A2)
0003008A <AmiBlitz3.ab2@21861>    BEQ.w JL_0_CC8E
0003008C <AmiBlitz3.ab2@21862>   MOVEQ.l #$01,D1
00030092 <AmiBlitz3.ab2@21863>   MOVEA.l _execbase,A6
00030098 <AmiBlitz3.ab2@21864>   MOVE.l mempool,a0
0003009C <AmiBlitz3.ab2@21865>   JSR _AllocPooled(a6)
0003009E <AmiBlitz3.ab2@21867>   MOVEA.l D0,A0
000300A2 <AmiBlitz3.ab2@21868>   MOVE.l A0,$4(A2)
000300A6 <AmiBlitz3.ab2@21869>   MOVE.w $8(A2),D1
000300AA <AmiBlitz3.ab2@21870>    BEQ.w JL_0_CC8E
000300AC <AmiBlitz3.ab2@21871>   SUBQ.w #1,D1
000300B2 <AmiBlitz3.ab2@21872>   MOVEA.l ptr_macrobuffer_begin,A1
000300B4 <AmiBlitz3.ab2@21875>     MOVE.b (A1)+,(A0)+
000300B8 <AmiBlitz3.ab2@21876>   DBF D1,JL_0_CC88
000300BE <AmiBlitz3.ab2@21879> JMP get1bytemain
000300C0 <AmiBlitz3.ab2@21883>   MOVE.w D0,D1
000300C2 <AmiBlitz3.ab2@21884>   LSR.w #8,D1
000300C4 <AmiBlitz3.ab2@21885>   MOVE.b D1,(A0)+
000300C6 <AmiBlitz3.ab2@21888>   MOVEQ.l #-$01,D2
000300C8 <AmiBlitz3.ab2@21889>   MOVE.b D0,(A0)+
000300CE <AmiBlitz3.ab2@21890>   CMPA.l ptr_macrobuffer_end,A0
000300D2 <AmiBlitz3.ab2@21891>    BCC.w macbigerr2
000300D4 <AmiBlitz3.ab2@21892> RTS
000300DA <AmiBlitz3.ab2@21893> macbigerr2 JMP macbigerr
000300DC <AmiBlitz3.ab2@21896>   MOVE.l d0,-(a7)
000300DE <AmiBlitz3.ab2@21897>   MOVEQ #0,d0
000300E4 <AmiBlitz3.ab2@21898>   CLR.b skiptoggle
000300E6 <AmiBlitz3.ab2@21901>     MOVE.b (a5),d0
000300EA <AmiBlitz3.ab2@21902>     BEQ 'l3
000300EE <AmiBlitz3.ab2@21903>     CMP.b #";",d0
000300F2 <AmiBlitz3.ab2@21904>     BNE 'l2
000300FA <AmiBlitz3.ab2@21905>     MOVE.b #1,skiptoggle
00030100 <AmiBlitz3.ab2@21908>     TST.b skiptoggle
00030104 <AmiBlitz3.ab2@21909>     BNE 'l4
00030108 <AmiBlitz3.ab2@21910>     CMP.b #":",d0
0003010C <AmiBlitz3.ab2@21911>     BEQ 'l3
0003010E <AmiBlitz3.ab2@21914>     ADDQ #1,a5
00030112 <AmiBlitz3.ab2@21915> BRA 'loop
00030118 <AmiBlitz3.ab2@21918>   MOVE.w d0,lastchar
0003011A <AmiBlitz3.ab2@21919>   MOVE.l (a7)+,d0
0003011C <AmiBlitz3.ab2@21920> RTS
00030120 <AmiBlitz3.ab2@21924>   BSR.w ifchar
00030124 <AmiBlitz3.ab2@21925>    BNE.w JUMP_syntaxerr
00030126 <AmiBlitz3.ab2@21926>   MOVE.w D0,D1
0003012C <AmiBlitz3.ab2@21927>   JSR get1bytemain
00030130 <AmiBlitz3.ab2@21928>   BSR.w ifchar
00030134 <AmiBlitz3.ab2@21929>    BNE.w JL_0_CCDA
00030136 <AmiBlitz3.ab2@21930>   ADDQ.w #1,D0
00030138 <AmiBlitz3.ab2@21931>   MOVE.w D0,D2
0003013A <AmiBlitz3.ab2@21932>   ADD.w D0,D0
0003013C <AmiBlitz3.ab2@21933>   ADD.w D2,D0
0003013E <AmiBlitz3.ab2@21934>   ADD.w D0,D1
00030140 <AmiBlitz3.ab2@21935>   MOVE.w D1,D0
00030144 <AmiBlitz3.ab2@21936>   ANDI.w #$3,D0
00030148 <AmiBlitz3.ab2@21937>   CMP.w #$3,D0
0003014C <AmiBlitz3.ab2@21938>    BEQ.w JUMP_syntaxerr
00030152 <AmiBlitz3.ab2@21940>   JSR get1bytemain
00030154 <AmiBlitz3.ab2@21943> RTS
00030156 <AmiBlitz3.ab2@21949> thetst1:  TST.b D0
00030158 <AmiBlitz3.ab2@21950> thetst2:  TST.w D0
0003015A <AmiBlitz3.ab2@21951> thetst3:  TST.l D0
0003015C <AmiBlitz3.ab2@21952> thetst4:  TST.l (A7)+                                      ;Any Length?
00030160 <AmiBlitz3.ab2@21953> thetst5:  JSR _Reschedule(A6)
00030164 <AmiBlitz3.ab2@21955> posbr:    BEQ.w posbr
00030168 <AmiBlitz3.ab2@21956> negbr:    BNE.w negbr
0003016A <AmiBlitz3.ab2@21960>   MOVEQ.l #-$01,D2
0003016E <AmiBlitz3.ab2@21961> BRA.w JL_0_D04C
00030174 <AmiBlitz3.ab2@21965>   CLR.l fp0addr
00030176 <AmiBlitz3.ab2@21966>   MOVEQ.l #$01,D1                                          ;while flag
00030178 <AmiBlitz3.ab2@21967>   MOVEQ.l #$00,D2                                          ;negate flag
0003017C <AmiBlitz3.ab2@21968> BRA.w JL_0_D04E
00030182 <AmiBlitz3.ab2@21972>   LEA firstrep,A2
00030184 <AmiBlitz3.ab2@21973>   MOVEQ.l #$08,D2
00030188 <AmiBlitz3.ab2@21974> BRA.w freeslist
0003018C <AmiBlitz3.ab2@21978>   LEA firstsel(PC),A2
0003018E <AmiBlitz3.ab2@21979>   MOVEQ.l #$0E,D2
00030190 <AmiBlitz3.ab2@21984>   MOVEQ.l #$00,D3
00030192 <AmiBlitz3.ab2@21992>   MOVE.l (A2),D0
00030194 <AmiBlitz3.ab2@21993>   CLR.l (A2)
00030196 <AmiBlitz3.ab2@21994>   MOVEA.l D0,A2
0003019C <AmiBlitz3.ab2@21995>   MOVEA.l _execbase,A6
000301A0 <AmiBlitz3.ab2@21998>     CMPA.w #$0,A2
000301A4 <AmiBlitz3.ab2@21999>      BEQ.w freelist__done
000301A6 <AmiBlitz3.ab2@22000>     TST.w D3
000301AA <AmiBlitz3.ab2@22001>      BEQ.w freelist__skip
000301AE <AmiBlitz3.ab2@22002>     MOVEM.l D2-D3/A2,-(A7)
000301B0 <AmiBlitz3.ab2@22003>     ADDA.w D3,A2
000301B2 <AmiBlitz3.ab2@22004>     MOVE.l D4,D2
000301B6 <AmiBlitz3.ab2@22005>     BSR.w freeslist
000301BA <AmiBlitz3.ab2@22006>     MOVEM.l (A7)+,D2-D3/A2
000301BC <AmiBlitz3.ab2@22009>     MOVEA.l A2,A1
000301BE <AmiBlitz3.ab2@22010>     MOVE.l D2,D0
000301C0 <AmiBlitz3.ab2@22011>     MOVEA.l (A2),A2
000301C6 <AmiBlitz3.ab2@22012>     MOVE.l mempool,a0
000301CA <AmiBlitz3.ab2@22013>     JSR _FreePooled(A6)
000301CE <AmiBlitz3.ab2@22014> BRA.w freelist__loop
000301D0 <AmiBlitz3.ab2@22017> RTS
000301D6 <AmiBlitz3.ab2@22020> JMP eselerr
000301DA <AmiBlitz3.ab2@22023> firstsel:  Ds.l 1
000301DE <AmiBlitz3.ab2@22026> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
000301E0 <AmiBlitz3.ab2@22029> selpushw:   MOVE.w D0,-(A7)
000301E2 <AmiBlitz3.ab2@22031> selpushl:   MOVE.l D0,-(A7)
000301E6 <AmiBlitz3.ab2@22033> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
000301EA <AmiBlitz3.ab2@22036> selcomb:    ANDI.w #$FF,D0
000301EC <AmiBlitz3.ab2@22037> selcomw:    CMP.w (A7),D0
000301EE <AmiBlitz3.ab2@22039> selcoml:    CMP.l (A7),D0
000301F2 <AmiBlitz3.ab2@22041> selbne:     BNE.w selbne
000301F4 <AmiBlitz3.ab2@22043> endsel:     ADDQ.w #8,A7
000301F8 <AmiBlitz3.ab2@22049>   MOVE.l firstsel(PC),D0                                  
000301FC <AmiBlitz3.ab2@22050>    BEQ.w JUMP_eselerr
000301FE <AmiBlitz3.ab2@22051>   MOVEA.l D0,A2
00030202 <AmiBlitz3.ab2@22052>    BSR.w JL_0_CDFC
00030208 <AmiBlitz3.ab2@22055>   MOVEA.l _execbase,A6
0003020C <AmiBlitz3.ab2@22058>   MOVE.l $4(A2),D0
00030210 <AmiBlitz3.ab2@22059>    BEQ.w doendsel__done
00030212 <AmiBlitz3.ab2@22060>   MOVEA.l D0,A3
00030216 <AmiBlitz3.ab2@22061>   MOVEA.l $4(A3),A0
0003021C <AmiBlitz3.ab2@22062>   MOVE.l destpointer,D1
0003021E <AmiBlitz3.ab2@22063>   SUB.l A0,D1
00030224 <AmiBlitz3.ab2@22065>     TST.b fast
00030228 <AmiBlitz3.ab2@22066>     BEQ doendsel__loop_l1
0003022E <AmiBlitz3.ab2@22067>     MOVE.w dontwrite,D0
00030232 <AmiBlitz3.ab2@22068>     BNE.w doendsel__skip
00030234 <AmiBlitz3.ab2@22069>     ADDQ.l #2,d1
00030238 <AmiBlitz3.ab2@22070>     MOVE.l d1,-2(a0)
0003023C <AmiBlitz3.ab2@22071>   BRA doendsel__skip
00030242 <AmiBlitz3.ab2@22075>   TST.w dontwrite
00030246 <AmiBlitz3.ab2@22076>      BNE.w doendsel__skip
0003024C <AmiBlitz3.ab2@22077>   CMP.l #MaxWordSgnd,D1
00030250 <AmiBlitz3.ab2@22078>    BHI.w JUMP_cbraerr
00030252 <AmiBlitz3.ab2@22079>   MOVE.w D1,(A0)
00030256 <AmiBlitz3.ab2@22082>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00030258 <AmiBlitz3.ab2@22083>   MOVEA.l A3,A1
0003025A <AmiBlitz3.ab2@22084>   MOVEQ.l #$08,D0
00030260 <AmiBlitz3.ab2@22085>   MOVE.l mempool,a0
00030264 <AmiBlitz3.ab2@22086>    JSR _FreePooled(A6)
00030268 <AmiBlitz3.ab2@22087> BRA.w doendsel__loop
0003026E <AmiBlitz3.ab2@22090>   JSR popselect                                            ;fix stack on select
00030272 <AmiBlitz3.ab2@22091>   MOVEA.l firstsel(PC),A1
00030278 <AmiBlitz3.ab2@22092>   MOVE.l (A1),firstsel
0003027A <AmiBlitz3.ab2@22093>   MOVEQ.l #$0E,D0
00030280 <AmiBlitz3.ab2@22094>   MOVEA.l _execbase,A6
00030286 <AmiBlitz3.ab2@22095>   MOVE.l mempool,a0
0003028A <AmiBlitz3.ab2@22096>   JSR _FreePooled(A6)
00030290 <AmiBlitz3.ab2@22097> JMP get1bytemain
00030292 <AmiBlitz3.ab2@22101>   MOVEA.l (A7)+,A1
00030294 <AmiBlitz3.ab2@22102>   SUBQ.w #8,A1
00030296 <AmiBlitz3.ab2@22103>   MOVEQ.l #$09,D0
00030298 <AmiBlitz3.ab2@22104>   ADD.l (A1),D0
0003029A <AmiBlitz3.ab2@22107>   ADDQ.w #2,A7                                             ;for runtime errs!
0003029E <AmiBlitz3.ab2@22112>   MOVE.l firstsel(PC),D0
000302A2 <AmiBlitz3.ab2@22113>    BEQ.w JUMP_defaerr
000302A4 <AmiBlitz3.ab2@22114>   MOVEA.l D0,A2
000302A8 <AmiBlitz3.ab2@22115>   BSR.w JL_0_CE26
000302AC <AmiBlitz3.ab2@22116>   BSR.w JL_0_CDFC
000302B0 <AmiBlitz3.ab2@22117>   CLR.l $8(A2)
000302B4 <AmiBlitz3.ab2@22118>   MOVE.w $C(A2),D2
000302B8 <AmiBlitz3.ab2@22119> BRA.w JL_0_CE5E
000302BE <AmiBlitz3.ab2@22122> JMP defaerr
000302C2 <AmiBlitz3.ab2@22125>   MOVE.l $8(A2),D0
000302C6 <AmiBlitz3.ab2@22126>    BEQ.w JL_0_CE24
000302C8 <AmiBlitz3.ab2@22127>   MOVEA.l D0,A0
000302CE <AmiBlitz3.ab2@22128>   MOVE.l destpointer,D1
000302D0 <AmiBlitz3.ab2@22129>   SUB.l A0,D1
000302D6 <AmiBlitz3.ab2@22131>     TST.b fast
000302DA <AmiBlitz3.ab2@22132>     BEQ 'l1
000302E0 <AmiBlitz3.ab2@22133>     TST.w dontwrite
000302E4 <AmiBlitz3.ab2@22134>     BNE.w JL_0_CE24
000302E6 <AmiBlitz3.ab2@22135>     ADDQ.l #2,d1
000302EA <AmiBlitz3.ab2@22136>     MOVE.l D1,-2(A0)
000302EE <AmiBlitz3.ab2@22137>   BRA JL_0_CE24
000302F4 <AmiBlitz3.ab2@22141>   TST.w dontwrite
000302F8 <AmiBlitz3.ab2@22142>      BNE.w JL_0_CE24
000302FE <AmiBlitz3.ab2@22143>    CMP.l #MaxWordSgnd,D1
00030302 <AmiBlitz3.ab2@22144>    BHI.w JUMP_cbraerr
00030304 <AmiBlitz3.ab2@22145>   MOVE.w D1,(A0)
00030306 <AmiBlitz3.ab2@22148> RTS
0003030C <AmiBlitz3.ab2@22151> JMP cbraerr
00030310 <AmiBlitz3.ab2@22155>   MOVE.l $8(A2),D0
00030314 <AmiBlitz3.ab2@22156>    BEQ.w JL_0_CE5C
00030316 <AmiBlitz3.ab2@22157>   MOVEA.l D0,A3
0003031A <AmiBlitz3.ab2@22158>   MOVE.w #$6000,D1
00030320 <AmiBlitz3.ab2@22160>    TST.b fast
00030324 <AmiBlitz3.ab2@22161>    BEQ 'l1
0003032A <AmiBlitz3.ab2@22162>    OR.l #$ff,d1
0003032E <AmiBlitz3.ab2@22163>    BSR writeword
00030332 <AmiBlitz3.ab2@22167>   BSR.w writeword
00030334 <AmiBlitz3.ab2@22168>   MOVEQ.l #$08,D0
00030336 <AmiBlitz3.ab2@22169>   MOVEQ.l #$01,D1
0003033C <AmiBlitz3.ab2@22170>   MOVEA.l _execbase,A6
00030342 <AmiBlitz3.ab2@22171>   MOVE.l mempool,a0
00030346 <AmiBlitz3.ab2@22172>   JSR _AllocPooled(a6)
00030348 <AmiBlitz3.ab2@22174>   MOVEA.l D0,A0
0003034C <AmiBlitz3.ab2@22175>   MOVE.l $4(A2),(A0)
00030350 <AmiBlitz3.ab2@22176>   MOVE.l A0,$4(A2)
00030358 <AmiBlitz3.ab2@22177>   MOVE.l destpointer,$4(A0)
0003035C <AmiBlitz3.ab2@22178> BRA.w writeword
0003035E <AmiBlitz3.ab2@22181> RTS
00030364 <AmiBlitz3.ab2@22185>   TST.b debugmode
00030368 <AmiBlitz3.ab2@22186>    BEQ.w JL_0_CE7A
0003036C <AmiBlitz3.ab2@22187>   MOVE.w #$C313,D1
00030370 <AmiBlitz3.ab2@22188>   CMP.w #$3,D2
00030374 <AmiBlitz3.ab2@22189>    BCS.w JL_0_CE76
00030376 <AmiBlitz3.ab2@22190>   ADDQ.w #1,D1
0003037A <AmiBlitz3.ab2@22193> BRA.w Atokejsr
0003037C <AmiBlitz3.ab2@22196> RTS
00030382 <AmiBlitz3.ab2@22200> JMP caseerr
00030386 <AmiBlitz3.ab2@22203>   MOVE.l firstsel(PC),D0
0003038A <AmiBlitz3.ab2@22204>    BEQ.w JUMP_caseerr
0003038C <AmiBlitz3.ab2@22205>   MOVEA.l D0,A2
00030390 <AmiBlitz3.ab2@22206>    BSR.w JL_0_CE26
00030394 <AmiBlitz3.ab2@22207>    BSR.w JL_0_CDFC
00030398 <AmiBlitz3.ab2@22208>   MOVE.w $C(A2),D2
0003039A <AmiBlitz3.ab2@22209>   MOVE.w D2,-(A7)
0003039E <AmiBlitz3.ab2@22210>    BSR.w JL_0_CE5E
000303A0 <AmiBlitz3.ab2@22211>   MOVE.w (A7),D2
000303A4 <AmiBlitz3.ab2@22212>    BSR.w bakeval
000303A6 <AmiBlitz3.ab2@22213>   MOVE.w (A7)+,D2
000303AA <AmiBlitz3.ab2@22214>   LEA selcomb(PC),A0
000303AE <AmiBlitz3.ab2@22215>   LEA selcombf(PC),A1
000303B2 <AmiBlitz3.ab2@22216>   CMP.w #$1,D2
000303B6 <AmiBlitz3.ab2@22217>    BEQ.w JL_0_CED8
000303BA <AmiBlitz3.ab2@22218>   LEA selcomw(PC),A0
000303BE <AmiBlitz3.ab2@22219>   CMP.w #$2,D2
000303C2 <AmiBlitz3.ab2@22220>    BEQ.w JL_0_CED8
000303C6 <AmiBlitz3.ab2@22221>   LEA selcoml(PC),A0
000303CA <AmiBlitz3.ab2@22222>   LEA selcomlf(PC),A1
000303CE <AmiBlitz3.ab2@22223>   CMP.w #$7,D2
000303D2 <AmiBlitz3.ab2@22224>    BCS.w JL_0_CED8
000303D6 <AmiBlitz3.ab2@22226>   MOVE.w #$CE01,D1
000303DA <AmiBlitz3.ab2@22227>    BSR.w Atokejsr
000303DE <AmiBlitz3.ab2@22228> BRA.w JL_0_CEDC
000303E2 <AmiBlitz3.ab2@22231>   BSR.w pokecode
000303E6 <AmiBlitz3.ab2@22234>   MOVE.w selbne(PC),D1
000303EC <AmiBlitz3.ab2@22236>     TST.b fast
000303F0 <AmiBlitz3.ab2@22237>     BEQ 'l1
000303F6 <AmiBlitz3.ab2@22238>     ORI.l #$ff,d1
000303FA <AmiBlitz3.ab2@22239>     BSR writeword
000303FE <AmiBlitz3.ab2@22242>   BSR.w writeword
00030402 <AmiBlitz3.ab2@22243>   MOVEA.l firstsel(PC),A0
0003040A <AmiBlitz3.ab2@22244>   MOVE.l destpointer,$8(A0)
0003040E <AmiBlitz3.ab2@22245> BRA.w writeword
00030412 <AmiBlitz3.ab2@22249> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00030414 <AmiBlitz3.ab2@22250> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00030418 <AmiBlitz3.ab2@22253> sellineat:  Ds.l 1
0003041E <AmiBlitz3.ab2@22259>   TST.b debugmode
00030422 <AmiBlitz3.ab2@22260>    BEQ.w JL_0_CF0E
00030426 <AmiBlitz3.ab2@22261>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
0003042A <AmiBlitz3.ab2@22262>    BSR.w writelong
00030434 <AmiBlitz3.ab2@22265>   MOVE.l linenumat,sellineat
0003043E <AmiBlitz3.ab2@22267>    MOVE.l destpointer,pushpc
00030448 <AmiBlitz3.ab2@22268>   MOVE.l hunkoffsetbase,pushoff
0003044A <AmiBlitz3.ab2@22269>   MOVEQ.l #$00,D2
0003044E <AmiBlitz3.ab2@22270>    BSR.w bakevalu                                          ;Evaluate
00030452 <AmiBlitz3.ab2@22271>    BSR.w JL_0_B5D2
00030456 <AmiBlitz3.ab2@22272>   CMP.w #$7,D2
0003045A <AmiBlitz3.ab2@22273>    BNE.w JL_0_CF36
0003045E <AmiBlitz3.ab2@22274>   MOVE.w clrst(PC),D1
00030462 <AmiBlitz3.ab2@22275>    BSR.w writeword
00030466 <AmiBlitz3.ab2@22278>    BSR.w JL_0_B63C
0003046A <AmiBlitz3.ab2@22279>   LEA selpushb(PC),A0
0003046E <AmiBlitz3.ab2@22280>   LEA selpushbf(PC),A1
00030472 <AmiBlitz3.ab2@22281>   CMP.w #$1,D2
00030476 <AmiBlitz3.ab2@22282>    BEQ.w JL_0_CF88
0003047A <AmiBlitz3.ab2@22283>   LEA selpushw(PC),A0
0003047E <AmiBlitz3.ab2@22284>   CMP.w #$2,D2
00030482 <AmiBlitz3.ab2@22285>    BEQ.w JL_0_CF88
00030486 <AmiBlitz3.ab2@22286>   LEA selpushl(PC),A0
0003048A <AmiBlitz3.ab2@22287>   LEA selpushlf(PC),A1
0003048E <AmiBlitz3.ab2@22288>   CMP.w #$7,D2
00030492 <AmiBlitz3.ab2@22289>    BCS.w JL_0_CF88
00030498 <AmiBlitz3.ab2@22291>   MOVE.w moved0a3,D1                                       ;d0 to a3!
0003049C <AmiBlitz3.ab2@22292>    BSR.w writeword
000304A0 <AmiBlitz3.ab2@22293>   LEA selpushs(PC),A0
000304A4 <AmiBlitz3.ab2@22294>   LEA selpushsf(PC),A1
000304A8 <AmiBlitz3.ab2@22295>    BSR.w pokecode
000304AC <AmiBlitz3.ab2@22296>   MOVE.w #$C701,D1
000304B0 <AmiBlitz3.ab2@22297>    BSR.w Atokejsr
000304B4 <AmiBlitz3.ab2@22298> BRA.w JL_0_CF8C
000304B8 <AmiBlitz3.ab2@22301>   BSR.w pokecode
000304BA <AmiBlitz3.ab2@22304>   MOVEQ.l #$0E,D0
000304BC <AmiBlitz3.ab2@22305>   MOVEQ.l #$01,D1
000304C2 <AmiBlitz3.ab2@22306>   MOVEA.l _execbase,A6
000304C8 <AmiBlitz3.ab2@22308>   MOVE.l mempool,a0
000304CC <AmiBlitz3.ab2@22309>   JSR _AllocPooled(a6)
000304CE <AmiBlitz3.ab2@22310>   MOVEA.l D0,A0
000304D2 <AmiBlitz3.ab2@22311>   MOVE.l firstsel(PC),(A0)
000304D8 <AmiBlitz3.ab2@22312>   MOVE.l A0,firstsel
000304DC <AmiBlitz3.ab2@22313>   CLR.l $4(A0)
000304E0 <AmiBlitz3.ab2@22314>   CLR.l $8(A0)
000304E4 <AmiBlitz3.ab2@22315>   MOVE.w D2,$C(A0)
000304E6 <AmiBlitz3.ab2@22316> RTS
000304EC <AmiBlitz3.ab2@22320>   MOVE.l firstrep,D0
000304F0 <AmiBlitz3.ab2@22321>    BEQ.w JUMP_unterr1
000304F4 <AmiBlitz3.ab2@22322>   MOVE.w #$6000,D1
000304F8 <AmiBlitz3.ab2@22323>   BSR.w writeword
000304FA <AmiBlitz3.ab2@22324>   MOVEA.l D0,A0
000304FE <AmiBlitz3.ab2@22325>   MOVE.l $4(A0),D1
00030504 <AmiBlitz3.ab2@22326>   SUB.l destpointer,D1
00030506 <AmiBlitz3.ab2@22327>   TST.w D1
0003050A <AmiBlitz3.ab2@22328>    BPL.w JUMP_unterr2
0003050E <AmiBlitz3.ab2@22329>   BSR.w writeword
00030514 <AmiBlitz3.ab2@22330>   MOVEA.l _execbase,A6
00030518 <AmiBlitz3.ab2@22331> BRA.w JL_0_D036
0003051E <AmiBlitz3.ab2@22334> JMP unterr2
00030524 <AmiBlitz3.ab2@22337> JMP unterr1
0003052A <AmiBlitz3.ab2@22341>   MOVE.l firstrep,D0
0003052E <AmiBlitz3.ab2@22342>    BEQ.w JUMP_unterr1
00030532 <AmiBlitz3.ab2@22343>   BSR.w do_if
00030538 <AmiBlitz3.ab2@22344>   JSR reget
0003053C <AmiBlitz3.ab2@22345>    BNE.w JUMP_syntaxerr
00030542 <AmiBlitz3.ab2@22346>   MOVE.w dontwrite,D1
00030546 <AmiBlitz3.ab2@22347>    BNE.w JL_0_D020
0003054C <AmiBlitz3.ab2@22348>   MOVEA.l firstrep,A0
00030552 <AmiBlitz3.ab2@22349>   MOVEA.l destpointer,A1
00030558 <AmiBlitz3.ab2@22351>     TST.b fast
0003055C <AmiBlitz3.ab2@22352>     BEQ 'l1
0003055E <AmiBlitz3.ab2@22353>     SUBQ.w #4,a1
00030562 <AmiBlitz3.ab2@22354>     MOVE.l $4(A0),D2
00030564 <AmiBlitz3.ab2@22355>     SUB.l A1,D2
00030566 <AmiBlitz3.ab2@22356>     MOVE.l d2,(a1)
0003056A <AmiBlitz3.ab2@22357>   BRA JL_0_D020
0003056C <AmiBlitz3.ab2@22361>   SUBQ.w #2,A1
00030570 <AmiBlitz3.ab2@22362>   MOVE.l $4(A0),D2
00030572 <AmiBlitz3.ab2@22363>   SUB.l A1,D2
00030574 <AmiBlitz3.ab2@22364>   TST.w D2
00030578 <AmiBlitz3.ab2@22365>    BPL.w JUMP_unterr2
0003057A <AmiBlitz3.ab2@22366>   MOVE.w D2,(A1)
00030580 <AmiBlitz3.ab2@22369>   MOVEA.l firstiff,A1
00030586 <AmiBlitz3.ab2@22370>   MOVE.l (A1),firstiff
00030588 <AmiBlitz3.ab2@22371>   MOVEQ.l #$0E,D0
0003058E <AmiBlitz3.ab2@22372>   MOVEA.l _execbase,A6
00030594 <AmiBlitz3.ab2@22373>   MOVE.l mempool,a0
00030598 <AmiBlitz3.ab2@22374>   JSR _FreePooled(A6)
0003059E <AmiBlitz3.ab2@22377>   MOVEA.l firstrep,A1
000305A4 <AmiBlitz3.ab2@22378>   MOVE.l (A1),firstrep
000305A6 <AmiBlitz3.ab2@22379>   MOVEQ.l #$08,D0
000305AC <AmiBlitz3.ab2@22380>   MOVE.l mempool,a0
000305B0 <AmiBlitz3.ab2@22381> JMP _FreePooled(A6)
000305B4 <AmiBlitz3.ab2@22384> iflineat:   Ds.l 1
000305B6 <AmiBlitz3.ab2@22388>   MOVEQ.l #$00,D2
000305BC <AmiBlitz3.ab2@22389>   TST.b fast
000305C0 <AmiBlitz3.ab2@22390>   BEQ 'l1
000305C8 <AmiBlitz3.ab2@22391>   MOVE.b #1,nostringopt
000305D0 <AmiBlitz3.ab2@22392>   MOVE.b #1,iniffcommand
000305D2 <AmiBlitz3.ab2@22396>   MOVEQ.l #$00,D1
000305D4 <AmiBlitz3.ab2@22399>   MOVE.w D1,-(A7)
000305DA <AmiBlitz3.ab2@22400>   MOVE.l destpointer,-(A7)
000305DC <AmiBlitz3.ab2@22401>   MOVE.w D2,-(A7)
000305E6 <AmiBlitz3.ab2@22402>   MOVE.l linenumat,iflineat
000305E8 <AmiBlitz3.ab2@22403>   MOVEQ.l #$00,D2
000305F2 <AmiBlitz3.ab2@22404>   MOVE.b optistring,optistring2
000305FA <AmiBlitz3.ab2@22405>   MOVE.b #1,optistring
000305FE <AmiBlitz3.ab2@22406>   BSR.w bakevalu
00030608 <AmiBlitz3.ab2@22407>   MOVE.b optistring2,optistring
0003060C <AmiBlitz3.ab2@22408>   CMP.w #$5,D2
00030610 <AmiBlitz3.ab2@22409>    BEQ.w JL_0_D09C
00030614 <AmiBlitz3.ab2@22410>   MOVE.w thetst1(PC),D1
00030618 <AmiBlitz3.ab2@22411>   CMP.w #$1,D2
0003061C <AmiBlitz3.ab2@22412>    BEQ.w writebranchcode
00030620 <AmiBlitz3.ab2@22413>   MOVE.w thetst2(PC),D1
00030624 <AmiBlitz3.ab2@22414>   CMP.w #$2,D2
00030628 <AmiBlitz3.ab2@22415>    BEQ.w writebranchcode
0003062C <AmiBlitz3.ab2@22416>   MOVE.w thetst4(PC),D1
00030630 <AmiBlitz3.ab2@22417>   CMP.w #$7,D2
00030634 <AmiBlitz3.ab2@22418>    BEQ.w writebranchcode
00030638 <AmiBlitz3.ab2@22419>   MOVE.w thetst3(PC),D1
0003063C <AmiBlitz3.ab2@22420> BRA.w writebranchcode
00030642 <AmiBlitz3.ab2@22423>   TST.b fpu
00030646 <AmiBlitz3.ab2@22424>   BEQ 'dofpu
0003064C <AmiBlitz3.ab2@22425>   MOVE.l #$f200003a,d1
00030650 <AmiBlitz3.ab2@22426>   BSR writelong
00030654 <AmiBlitz3.ab2@22427>   MOVE.w #$f2c1,d1
00030658 <AmiBlitz3.ab2@22428>   BSR writeword
0003065C <AmiBlitz3.ab2@22429>   BSR writelong
0003065E <AmiBlitz3.ab2@22430>   ADDQ.l #2,a7
00030662 <AmiBlitz3.ab2@22431> BRA.w br2
00030666 <AmiBlitz3.ab2@22434>    MOVE.w #$C900,D1
0003066A <AmiBlitz3.ab2@22435>    BSR.w Atokejsr
0003066E <AmiBlitz3.ab2@22436>   MOVE.l thetst5(PC),D1
00030672 <AmiBlitz3.ab2@22437>    BSR.w writelong
00030676 <AmiBlitz3.ab2@22438> BRA.w JL_0_D0B4
0003067C <AmiBlitz3.ab2@22442>          CLR.b iniffcommand
00030682 <AmiBlitz3.ab2@22443>          TST.b fast                                        ;branchcode
00030686 <AmiBlitz3.ab2@22444>          BEQ b6
0003068C <AmiBlitz3.ab2@22445>          TST.b fpu
00030690 <AmiBlitz3.ab2@22446>          BEQ 'nofpu
00030696 <AmiBlitz3.ab2@22450>           MOVE.l destpointer,a0
0003069C <AmiBlitz3.ab2@22451>          SUB.l load_var_addr,a0
000306A2 <AmiBlitz3.ab2@22452>          CMP.l #4,a0
000306A6 <AmiBlitz3.ab2@22453>          BEQ 'nofpu
000306AE <AmiBlitz3.ab2@22454>          CMP.l #$f2400014,-4(a4)                           ;<
000306B2 <AmiBlitz3.ab2@22455>          BNE 'nolt
000306B8 <AmiBlitz3.ab2@22456>          SUBQ.l #2,destpointer
000306BE <AmiBlitz3.ab2@22457>          MOVE.w #$f293,-4(a4)                              ;
000306C2 <AmiBlitz3.ab2@22458> BRA 'brf
000306CA <AmiBlitz3.ab2@22461>   CMP.l #$f2400015,-4(a4)                                  ;<=
000306CE <AmiBlitz3.ab2@22462>          BNE 'nole
000306D4 <AmiBlitz3.ab2@22463>          SUBQ.l #2,destpointer
000306DA <AmiBlitz3.ab2@22464>          MOVE.w #$f292,-4(a4)
000306DE <AmiBlitz3.ab2@22465> BRA 'brf
000306E6 <AmiBlitz3.ab2@22468>   CMP.l #$f2400013,-4(a4)                                  ;=>
000306EA <AmiBlitz3.ab2@22469>          BNE 'noge
000306F0 <AmiBlitz3.ab2@22470>          SUBQ.l #2,destpointer
000306F6 <AmiBlitz3.ab2@22471>          MOVE.w #$f294,-4(a4)
000306FA <AmiBlitz3.ab2@22472> BRA 'brf
00030702 <AmiBlitz3.ab2@22475>   CMP.l #$f2400012,-4(a4)                                  ;>
00030706 <AmiBlitz3.ab2@22476>          BNE 'nogt
0003070C <AmiBlitz3.ab2@22477>          SUBQ.l #2,destpointer
00030712 <AmiBlitz3.ab2@22478>          MOVE.w #$f295,-4(a4)
00030716 <AmiBlitz3.ab2@22479> BRA 'brf
0003071E <AmiBlitz3.ab2@22482>   CMP.l #$f2400001,-4(a4)                                  ;=
00030722 <AmiBlitz3.ab2@22483>          BNE 'noeq
00030728 <AmiBlitz3.ab2@22484>          SUBQ.l #2,destpointer
0003072E <AmiBlitz3.ab2@22485>          MOVE.w #$f28e,-4(a4)
00030732 <AmiBlitz3.ab2@22486> BRA 'brf
0003073A <AmiBlitz3.ab2@22489>   CMP.l #$f240000e,-4(a4)                                  ;<>
0003073E <AmiBlitz3.ab2@22490>          BNE 'none
00030744 <AmiBlitz3.ab2@22491>          SUBQ.l #2,destpointer
0003074A <AmiBlitz3.ab2@22492>          MOVE.w #$f281,-4(a4)
0003074C <AmiBlitz3.ab2@22495>   ADDQ.l #2,a7
00030752 <AmiBlitz3.ab2@22497>     TST.b fast
00030756 <AmiBlitz3.ab2@22498>     BEQ 'l1
0003075C <AmiBlitz3.ab2@22499>     OR.b #$40,-3(a4)
00030760 <AmiBlitz3.ab2@22500>     BSR writeword
00030764 <AmiBlitz3.ab2@22504>  BSR writeword
00030768 <AmiBlitz3.ab2@22505> BRA.s br2
0003076E <AmiBlitz3.ab2@22509>   MOVE.l destpointer,a0
00030774 <AmiBlitz3.ab2@22510>          SUB.l load_var_addr,a0
0003077A <AmiBlitz3.ab2@22511>          CMP.l #4,a0
0003077E <AmiBlitz3.ab2@22512>          BEQ JL_0_D0B4
00030784 <AmiBlitz3.ab2@22513>          CMP.w #$4eb9,-6(a4)
00030788 <AmiBlitz3.ab2@22514>          BEQ b6
0003078E <AmiBlitz3.ab2@22515>          CMP.w #$5ec0,-2(a4)                               ;>
00030792 <AmiBlitz3.ab2@22516>      BNE.s 'lb1
00030798 <AmiBlitz3.ab2@22517>          MOVE.w #$6f00,-2(a4)                              ;ble
0003079C <AmiBlitz3.ab2@22518> BRA.s br
000307A2 <AmiBlitz3.ab2@22521>  CMP.w #$5dc0,-2(a4)                                       ;<
000307A6 <AmiBlitz3.ab2@22522>   BNE.s 'lb2
000307AC <AmiBlitz3.ab2@22523>          MOVE.w #$6c00,-2(a4)                              ;bge
000307B0 <AmiBlitz3.ab2@22524> BRA.s br
000307B6 <AmiBlitz3.ab2@22527>   CMP.w #$57c0,-2(a4)                                      ;=
000307BA <AmiBlitz3.ab2@22528>   BNE.s 'lb3
000307C0 <AmiBlitz3.ab2@22529>          MOVE.w #$6600,-2(a4)                              ;bne
000307C4 <AmiBlitz3.ab2@22530> BRA.s br
000307CA <AmiBlitz3.ab2@22533>   CMP.w #$56c0,-2(a4)                                      ;<>
000307CE <AmiBlitz3.ab2@22534>   BNE.s 'lb4
000307D4 <AmiBlitz3.ab2@22535>          MOVE.w #$6700,-2(a4)                              ;beq
000307D8 <AmiBlitz3.ab2@22536> BRA.s br
000307DE <AmiBlitz3.ab2@22539>   CMP.w #$5cc0,-2(a4)                                      ;>=
000307E2 <AmiBlitz3.ab2@22540>   BNE.s 'lb5
000307E8 <AmiBlitz3.ab2@22541>          MOVE.w #$6d00,-2(a4)                              ;blt
000307EC <AmiBlitz3.ab2@22542> BRA.s br
000307F2 <AmiBlitz3.ab2@22545>   CMP.w #$5fc0,-2(a4)                                      ;<=
000307F6 <AmiBlitz3.ab2@22546>         BNE.s b6
000307FC <AmiBlitz3.ab2@22547>          MOVE.w #$6e00,-2(a4)                              ;bgt
000307FE <AmiBlitz3.ab2@22550>   TST.w (a7)+
00030804 <AmiBlitz3.ab2@22552>         TST.b fast
00030808 <AmiBlitz3.ab2@22553>         BEQ 'l1
0003080E <AmiBlitz3.ab2@22554>         OR.b #$ff,-1(a4)                                   ;long branches
00030812 <AmiBlitz3.ab2@22555>         BSR writeword
00030816 <AmiBlitz3.ab2@22559>         BSR writeword
0003081A <AmiBlitz3.ab2@22560> BRA.s br2
0003081E <AmiBlitz3.ab2@22563>   BSR.w writeword
00030822 <AmiBlitz3.ab2@22566>   MOVE.l posbr(PC),D1
00030824 <AmiBlitz3.ab2@22567>   TST.w (A7)+
00030828 <AmiBlitz3.ab2@22568>    BEQ.w JL_0_D0C2
0003082C <AmiBlitz3.ab2@22569>   MOVE.l negbr(PC),D1
00030832 <AmiBlitz3.ab2@22572>   TST.b fast
00030836 <AmiBlitz3.ab2@22573>            BEQ 'l1
0003083C <AmiBlitz3.ab2@22574>            OR.l #$00ff0000,d1
00030840 <AmiBlitz3.ab2@22575>            BSR writelong
00030844 <AmiBlitz3.ab2@22576>            BSR writeword
00030848 <AmiBlitz3.ab2@22577> BRA br2
0003084C <AmiBlitz3.ab2@22580>   BSR.w writelong
0003084E <AmiBlitz3.ab2@22583>  MOVEQ.l #$0E,D0
00030850 <AmiBlitz3.ab2@22584>   MOVEQ.l #$01,D1
00030856 <AmiBlitz3.ab2@22585>   MOVEA.l _execbase,A6
0003085C <AmiBlitz3.ab2@22587>   MOVE.l mempool,a0
00030860 <AmiBlitz3.ab2@22588>   JSR _AllocPooled(a6)
00030862 <AmiBlitz3.ab2@22589>   MOVEA.l D0,A0
00030868 <AmiBlitz3.ab2@22590>   MOVE.l firstiff,(A0)
0003086E <AmiBlitz3.ab2@22591>   MOVE.l A0,firstiff
00030872 <AmiBlitz3.ab2@22592>   MOVE.l (A7)+,$4(A0)
0003087A <AmiBlitz3.ab2@22593>   MOVE.l destpointer,$8(A0)
0003087E <AmiBlitz3.ab2@22594>   MOVE.w (A7)+,$C(A0)
00030884 <AmiBlitz3.ab2@22595>    JSR reget
00030888 <AmiBlitz3.ab2@22596>    BEQ.w JL_0_D10C
0003088E <AmiBlitz3.ab2@22597>   BSET #$7,$C(A0)
00030898 <AmiBlitz3.ab2@22601>   MOVE.w oldqflag,instringon
0003089E <AmiBlitz3.ab2@22602>   MOVEA.l lastsourcepos,A5
000308A6 <AmiBlitz3.ab2@22603>   MOVE.w #$003A,lastchar
000308A8 <AmiBlitz3.ab2@22606> RTS
000308AC <AmiBlitz3.ab2@22610>   CMP.w #$1,D0
000308B0 <AmiBlitz3.ab2@22611>    BLT.w JL_0_D128
000308B4 <AmiBlitz3.ab2@22612>   CMP.w #$0,D0
000308B8 <AmiBlitz3.ab2@22613>    BGT.w JL_0_D128
000308BA <AmiBlitz3.ab2@22614>   ADD.w D0,D0
000308BC <AmiBlitz3.ab2@22615>   ADD.w D0,D0
000308C0 <AmiBlitz3.ab2@22616>   MOVEA.l JL_0_D128(PC,D0.W),A0
000308C2 <AmiBlitz3.ab2@22619> JMP (A0)
000308C6 <AmiBlitz3.ab2@22622> BRA.w JL_0_D128
000308CA <AmiBlitz3.ab2@22626>   CMP.w #$1,D0
000308CE <AmiBlitz3.ab2@22627>    BLT.w JL_0_D146
000308D2 <AmiBlitz3.ab2@22628>   CMP.w #$0,D0
000308D6 <AmiBlitz3.ab2@22629>    BGT.w JL_0_D146
000308D8 <AmiBlitz3.ab2@22630>   ADD.w D0,D0
000308DA <AmiBlitz3.ab2@22631>   ADD.w D0,D0
000308DE <AmiBlitz3.ab2@22632>   MOVEA.l JL_0_D146(PC,D0.W),A0
000308E0 <AmiBlitz3.ab2@22635>   JSR (A0)
000308E4 <AmiBlitz3.ab2@22638> BRA.w JL_0_D146
000308E8 <AmiBlitz3.ab2@22642>   CMP.w #$1,D0
000308EC <AmiBlitz3.ab2@22643>    BLT.w JL_0_D168
000308F0 <AmiBlitz3.ab2@22644>   CMP.w #$0,D0
000308F4 <AmiBlitz3.ab2@22645>    BGT.w JL_0_D168
000308F6 <AmiBlitz3.ab2@22646>   ADD.w D0,D0
000308F8 <AmiBlitz3.ab2@22647>   ADD.w D0,D0
000308FC <AmiBlitz3.ab2@22648>   MOVEA.l JL_0_D168(PC,D0.W),A0
00030900 <AmiBlitz3.ab2@22651>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00030902 <AmiBlitz3.ab2@22654>    JSR (A0)
00030906 <AmiBlitz3.ab2@22657> BRA.w JL_0_D168
00030908 <AmiBlitz3.ab2@22660> labcnt:   Ds.w 1
0003090A <AmiBlitz3.ab2@22667>   MOVEQ.l #$02,D2
0003090E <AmiBlitz3.ab2@22668>    BSR.w bakeval
00030912 <AmiBlitz3.ab2@22669>   LEA JL_0_D10E(PC),A0
00030916 <AmiBlitz3.ab2@22670>   LEA JL_0_D12C(PC),A1
0003091A <AmiBlitz3.ab2@22671>   MOVE.w #$001A,D1
0003091E <AmiBlitz3.ab2@22672>   CMP.w #-$7FFB,D0
00030922 <AmiBlitz3.ab2@22673>    BEQ.w JL_0_D1B6
00030926 <AmiBlitz3.ab2@22674>   CMP.w #-$7FFA,D0
0003092A <AmiBlitz3.ab2@22675>    BNE.w JUMP_syntaxerr
0003092E <AmiBlitz3.ab2@22676>   LEA JL_0_D12C(PC),A0
00030932 <AmiBlitz3.ab2@22677>   LEA JL_0_D14A(PC),A1
00030936 <AmiBlitz3.ab2@22678>   MOVE.w #$001A,D1
0003093C <AmiBlitz3.ab2@22679>   TST.b debugmode
00030940 <AmiBlitz3.ab2@22680>    BEQ.b JL_0_D1B6
00030946 <AmiBlitz3.ab2@22681>    JSR chkstak
0003094A <AmiBlitz3.ab2@22682>   LEA JL_0_D14A(PC),A0
0003094E <AmiBlitz3.ab2@22683>   LEA labcnt(PC),A1
00030952 <AmiBlitz3.ab2@22684>   MOVE.w #$001E,D1
00030954 <AmiBlitz3.ab2@22687>   MOVE.w D1,-(A7)
0003095A <AmiBlitz3.ab2@22688>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
0003095E <AmiBlitz3.ab2@22689>    BSR.w pokecode
00030964 <AmiBlitz3.ab2@22690>   CLR.w labcnt
0003096A <AmiBlitz3.ab2@22695>    JSR get1bytemain
00030970 <AmiBlitz3.ab2@22696>   SUBQ.l #2,destpointer                                    ;for makealab!
00030974 <AmiBlitz3.ab2@22697>    BSR.w JL_0_AE22
0003097A <AmiBlitz3.ab2@22698>   ADDQ.l #2,destpointer
00030980 <AmiBlitz3.ab2@22699>    JSR addoff
00030984 <AmiBlitz3.ab2@22700>   MOVE.l $8(A2),D1
00030988 <AmiBlitz3.ab2@22701>    BSR.w writelong
0003098E <AmiBlitz3.ab2@22702>   ADDQ.w #1,labcnt
00030994 <AmiBlitz3.ab2@22703>    JSR reget
00030998 <AmiBlitz3.ab2@22704>   CMP.w #$2C,D0
0003099C <AmiBlitz3.ab2@22705>    BEQ.w JL_0_D1C8
0003099E <AmiBlitz3.ab2@22706>   MOVEA.l (A7)+,A0
000309A0 <AmiBlitz3.ab2@22707>   MOVE.w (A7)+,D2
000309A6 <AmiBlitz3.ab2@22708>   MOVE.w dontwrite,D1
000309AA <AmiBlitz3.ab2@22709>    BNE.w JL_0_D21A
000309AE <AmiBlitz3.ab2@22710>   MOVE.w labcnt(PC),D1
000309B2 <AmiBlitz3.ab2@22711>   MOVE.w D1,$A(A0)
000309B4 <AmiBlitz3.ab2@22712>   ADD.w D1,D1
000309B6 <AmiBlitz3.ab2@22713>   ADD.w D1,D1
000309B8 <AmiBlitz3.ab2@22714>   ADDQ.w #2,D1
000309BC <AmiBlitz3.ab2@22715>   MOVE.w D1,$2(A0,D2.W)
000309BE <AmiBlitz3.ab2@22718> RTS
000309C4 <AmiBlitz3.ab2@22722>   TST.b debugmode
000309C8 <AmiBlitz3.ab2@22723>    BEQ.w JL_0_D236
000309CE <AmiBlitz3.ab2@22724>    JSR chkstak
000309D4 <AmiBlitz3.ab2@22725>   MOVE.l AL_0_D162,D1
000309D8 <AmiBlitz3.ab2@22726>    BSR.w writelong
000309DE <AmiBlitz3.ab2@22728>   MOVE.w gosubcode,D1
000309E2 <AmiBlitz3.ab2@22729> BRA.w JL_0_D246
000309E8 <AmiBlitz3.ab2@22733>   MOVE.w gotocode,D1
000309EA <AmiBlitz3.ab2@22736>   MOVE.w D1,-(A7)
000309EE <AmiBlitz3.ab2@22737>    BSR.w JL_0_AE22
000309F0 <AmiBlitz3.ab2@22738>   MOVE.w (A7)+,D1
000309F4 <AmiBlitz3.ab2@22739>    BSR.w writeword
000309FA <AmiBlitz3.ab2@22740>    JSR addoff
000309FE <AmiBlitz3.ab2@22741>   MOVE.l $8(A2),D1
00030A02 <AmiBlitz3.ab2@22742> BRA.w writelong
00030A08 <AmiBlitz3.ab2@22746>   MOVE.w proceduremode,D1
00030A0C <AmiBlitz3.ab2@22747>    BEQ.w JUMP_badpenderr
00030A10 <AmiBlitz3.ab2@22748>   MOVE.w #$4EF9,D1
00030A14 <AmiBlitz3.ab2@22749>    BSR.w writeword
00030A1A <AmiBlitz3.ab2@22750>    JSR addoff
00030A20 <AmiBlitz3.ab2@22751>   MOVEA.l _execbase,A6
00030A22 <AmiBlitz3.ab2@22752>   MOVEQ.l #$08,D0
00030A24 <AmiBlitz3.ab2@22753>   MOVEQ.l #$01,D1
00030A2A <AmiBlitz3.ab2@22755>   MOVE.l mempool,a0
00030A2E <AmiBlitz3.ab2@22756>   JSR _AllocPooled(a6)
00030A30 <AmiBlitz3.ab2@22757>   MOVEA.l D0,A0
00030A36 <AmiBlitz3.ab2@22758>   MOVE.l firstpend,(A0)
00030A3C <AmiBlitz3.ab2@22759>   MOVE.l A0,firstpend
00030A44 <AmiBlitz3.ab2@22760>   MOVE.l destpointer,$4(A0)
00030A48 <AmiBlitz3.ab2@22761> BRA.w writelong
00030A4C <AmiBlitz3.ab2@22765>   BSR.w do_AsmExit
00030A52 <AmiBlitz3.ab2@22766> JMP get1bytemain
00030A5A <AmiBlitz3.ab2@22770>   MOVE.b #1,nostringopt
00030A5E <AmiBlitz3.ab2@22771>   MOVEM.l a0/a1/d1,-(a7)
00030A64 <AmiBlitz3.ab2@22772>   MOVEA.l currentfunction,A0
00030A6A <AmiBlitz3.ab2@22773>     CMP.l #0,a0
00030A6E <AmiBlitz3.ab2@22774>     BNE 'l1
00030A74 <AmiBlitz3.ab2@22775>     JMP errorasmexit
00030A76 <AmiBlitz3.ab2@22776> 'l1 MOVEQ.l #$00,D2
00030A7A <AmiBlitz3.ab2@22777>   MOVE.b $5(A0),D2
00030A7E <AmiBlitz3.ab2@22778>   BSR.w eval
00030A84 <AmiBlitz3.ab2@22780>   MOVEA.l currentfunction,A0
00030A88 <AmiBlitz3.ab2@22781>   MOVE.l funcstruct_returntype(a0),a0
00030A8E <AmiBlitz3.ab2@22782>   CMP.l #0,a0
00030A92 <AmiBlitz3.ab2@22783>   BEQ 'isstatement
00030A9A <AmiBlitz3.ab2@22784>   CMP.l #$100,4(a0)
00030A9E <AmiBlitz3.ab2@22785>   BLT.w 'isvar
00030AA0 <AmiBlitz3.ab2@22786>   MOVE.l a2,a1
00030AA6 <AmiBlitz3.ab2@22787>   TST.l typetocast
00030AAA <AmiBlitz3.ab2@22788>   BEQ 'nocast
00030AB0 <AmiBlitz3.ab2@22789>   MOVE.l typetocast,a1
00030AB2 <AmiBlitz3.ab2@22790> 'nocast  CMP.l a0,a1
00030AB6 <AmiBlitz3.ab2@22791>   BEQ 'ok
00030ABC <AmiBlitz3.ab2@22792>   CLR.l typetocast
00030AC2 <AmiBlitz3.ab2@22793>   MOVE.l lasttoken,d1
00030AC6 <AmiBlitz3.ab2@22794>   CMP.w #$b581,d1                   ; ok, when token for null
00030ACA <AmiBlitz3.ab2@22795>   BEQ 'isnull
00030AD0 <AmiBlitz3.ab2@22796> 'error  JMP errorconvertreturntype
00030AD4 <AmiBlitz3.ab2@22803>   MOVEM.l (a7)+,a0/a1/d1
00030AD8 <AmiBlitz3.ab2@22804> BRA.w do_AsmExit
00030ADE <AmiBlitz3.ab2@22806> error_convert_types2 JMP error_convert_types
00030AE4 <AmiBlitz3.ab2@22819>   TST.b debugmode
00030AE8 <AmiBlitz3.ab2@22820>    BEQ.w JL_0_D2CA
00030AEC <AmiBlitz3.ab2@22821>   MOVE.w #$C305,D1
00030AF0 <AmiBlitz3.ab2@22822> BRA.w Atokejsr
00030AF4 <AmiBlitz3.ab2@22825>   MOVE.w #$4E75,D1
00030AF8 <AmiBlitz3.ab2@22826> BRA.w writeword
00030AFC <AmiBlitz3.ab2@22829> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00030B00 <AmiBlitz3.ab2@22830> proclocals:  Ds.l 1                                        ;for debugga!
00030B02 <AmiBlitz3.ab2@22831> procnum:     Ds.w 1
00030B04 <AmiBlitz3.ab2@22832> procnum2:    Ds.w 1
00030B08 <AmiBlitz3.ab2@22833> prolineat:   Ds.l 1
00030B0E <AmiBlitz3.ab2@22837>    TST.w proceduremode
00030B12 <AmiBlitz3.ab2@22838>    BGT JUMP_sreterr
00030B16 <AmiBlitz3.ab2@22839>    CMP.w #-$7FF9,D0
00030B1A <AmiBlitz3.ab2@22840>    BEQ.w JL_0_D29C
00030B1C <AmiBlitz3.ab2@22841>    MOVEQ.l #-$01,D1
00030B20 <AmiBlitz3.ab2@22842> BRA.w do_function2
00030B26 <AmiBlitz3.ab2@22845> JMP sreterr
00030B2C <AmiBlitz3.ab2@22849>   CLR.b skipfunc
00030B32 <AmiBlitz3.ab2@22850>   TST.l unusedfunc
00030B36 <AmiBlitz3.ab2@22851>   BEQ 'ex
00030B3A <AmiBlitz3.ab2@22852>   MOVEM.l d0-d7/a0-a6,-(a7)
00030B40 <AmiBlitz3.ab2@22853>   MOVE.l unusedfunc,d1
00030B46 <AmiBlitz3.ab2@22854>   LEA ptr_parameterstore,a5
00030B48 <AmiBlitz3.ab2@22857>   MOVE.l d1,a0
00030B4C <AmiBlitz3.ab2@22858>   LEA 12(a0),a2
00030B4E <AmiBlitz3.ab2@22859>   MOVE.l a5,a1
00030B50 <AmiBlitz3.ab2@22861>   CMPM.b (a1)+,(a2)+
00030B54 <AmiBlitz3.ab2@22862>   BNE 'neq
00030B56 <AmiBlitz3.ab2@22863>   TST.b (a2)
00030B5A <AmiBlitz3.ab2@22864>   BNE 'ch
00030B5C <AmiBlitz3.ab2@22865>   TST.b (a1)
00030B60 <AmiBlitz3.ab2@22866>   BNE 'neq
00030B68 <AmiBlitz3.ab2@22867>   MOVE.b #1,skipfunc
00030B6C <AmiBlitz3.ab2@22868> BRA 'out
00030B6E <AmiBlitz3.ab2@22871>   MOVE.l (a0),d1
00030B72 <AmiBlitz3.ab2@22872>   BNE 'ag
00030B76 <AmiBlitz3.ab2@22875>   MOVEM.l (a7)+,d0-d7/a0-a6
00030B78 <AmiBlitz3.ab2@22878> RTS
00030B7E <AmiBlitz3.ab2@22882> JMP dupprocerr
00030B84 <AmiBlitz3.ab2@22885> JMP illprocperr
00030B8C <AmiBlitz3.ab2@22892>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00030B90 <AmiBlitz3.ab2@22893>    BEQ JUMP_sreterr
00030B94 <AmiBlitz3.ab2@22894>   CMP.w #-$7FF9,D0
00030B98 <AmiBlitz3.ab2@22895>    BEQ.w do_function_return
00030BA2 <AmiBlitz3.ab2@22898>   MOVE.w oldqflag,instringon
00030BA8 <AmiBlitz3.ab2@22899>   MOVEA.l lastsourcepos,A5
00030BAE <AmiBlitz3.ab2@22900>   JSR getfunctionreturntype
00030BB4 <AmiBlitz3.ab2@22901>   JSR get1bytemain
00030BBA <AmiBlitz3.ab2@22904>   TST.b declare
00030BBE <AmiBlitz3.ab2@22905>   BEQ 'l1
00030BC6 <AmiBlitz3.ab2@22906>   MOVE.b #1,nowdeclare
00030BCC <AmiBlitz3.ab2@22909>   JSR errchx                                           ;writejumpoverfunction
00030BD2 <AmiBlitz3.ab2@22912>   CLR.b fastfunc
00030BDC <AmiBlitz3.ab2@22913>   MOVE.l firstiff,firstiffstore
00030BE4 <AmiBlitz3.ab2@22914>   CMP.l #"FAST",-1(a5)
00030BE8 <AmiBlitz3.ab2@22915>   BNE 'nofast
00030BEE <AmiBlitz3.ab2@22916>   CMP.b #" ",3(a5)
00030BF2 <AmiBlitz3.ab2@22917>   BNE 'nofast
00030BF4 <AmiBlitz3.ab2@22918>   ADDQ.l #3,a5
00030BF8 <AmiBlitz3.ab2@22921>     CMP.b #" ",(a5)
00030BFC <AmiBlitz3.ab2@22922>      BNE 'x1
00030BFE <AmiBlitz3.ab2@22923>     ADDQ #1,a5
00030C02 <AmiBlitz3.ab2@22924> BRA 'x2
00030C08 <AmiBlitz3.ab2@22927>   MOVE.l a5,lastsourcepos
00030C10 <AmiBlitz3.ab2@22928>   MOVE.b #1,fastfunc
00030C18 <AmiBlitz3.ab2@22931>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00030C1C <AmiBlitz3.ab2@22932> BRA 'noopt
00030C22 <AmiBlitz3.ab2@22934>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00030C26 <AmiBlitz3.ab2@22935>   BNE 'noopt
00030C28 <AmiBlitz3.ab2@22936>   ADDQ.l #4,a5
00030C2C <AmiBlitz3.ab2@22939>     CMP.b #" ",(a5)
00030C30 <AmiBlitz3.ab2@22940>      BNE 'x1b
00030C32 <AmiBlitz3.ab2@22941>     ADDQ #1,a5
00030C36 <AmiBlitz3.ab2@22942> BRA 'x2b
00030C3C <AmiBlitz3.ab2@22945>   MOVE.l a5,lastsourcepos
00030C42 <AmiBlitz3.ab2@22947>   JSR makename2
00030C46 <AmiBlitz3.ab2@22948> BRA 'l1
00030C4C <AmiBlitz3.ab2@22952>   JSR makename2
00030C52 <AmiBlitz3.ab2@22953>   JSR checkused
00030C58 <AmiBlitz3.ab2@22954>   TST.b skipfunc
00030C5C <AmiBlitz3.ab2@22955>    BEQ 'l1
00030C62 <AmiBlitz3.ab2@22956>   JSR skipme
00030C68 <AmiBlitz3.ab2@22957>   CLR.b fastfunc
00030C6A <AmiBlitz3.ab2@22958> RTS
00030C74 <AmiBlitz3.ab2@22961>   MOVE.l linenumat,prolineat
00030C7A <AmiBlitz3.ab2@22962>   ADDQ.w #1,procnum2
00030C82 <AmiBlitz3.ab2@22963>   MOVE.w procnum2(PC),procnum
00030C88 <AmiBlitz3.ab2@22964>   MOVE.w D1,proceduremode
00030C8E <AmiBlitz3.ab2@22965>   CLR.w locvaroff
00030C92 <AmiBlitz3.ab2@22966>   CMP.w #$7B,D0
00030C96 <AmiBlitz3.ab2@22967>    BNE.w JUMP_syntaxerr
00030C9E <AmiBlitz3.ab2@22968>    MOVE.b #1,infunctioncode
00030CA4 <AmiBlitz3.ab2@22969>   MOVEA.l tempvm,A0
00030CAC <AmiBlitz3.ab2@22970>   MOVE.w $C(A0),memlibstat
00030CB2 <AmiBlitz3.ab2@22971>   BCLR #$7,$C(A0)                                          ;Bit out of range
00030CB6 <AmiBlitz3.ab2@22972>   MOVE.w #$4EF9,D1
00030CBA <AmiBlitz3.ab2@22973>    BSR.w writeword
00030CC0 <AmiBlitz3.ab2@22974>    JSR addoff
00030CC4 <AmiBlitz3.ab2@22975>    BSR.w writelong
00030CCA <AmiBlitz3.ab2@22976>    JSR findproc                                          ;findproc function
00030CCE <AmiBlitz3.ab2@22977>    BEQ.w JUMP_dupprocerr
00030CD4 <AmiBlitz3.ab2@22978>    JSR addlabel
00030CDA <AmiBlitz3.ab2@22979>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00030CE0 <AmiBlitz3.ab2@22980>    MOVE.b #0,isfunc(a2)
00030CE8 <AmiBlitz3.ab2@22981>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00030CF0 <AmiBlitz3.ab2@22982>   MOVE.l destpointer,$E(A2)
00030CF6 <AmiBlitz3.ab2@22983>   MOVE.l A2,currentfunction
00030CFC <AmiBlitz3.ab2@22984>   LEA nops8,A0
00030D02 <AmiBlitz3.ab2@22985>   LEA dataget,A1
00030D06 <AmiBlitz3.ab2@22986>    BSR.w pokecode2
00030D0C <AmiBlitz3.ab2@22987>   TST.b debugmode
00030D10 <AmiBlitz3.ab2@22988>    BEQ.b JL_0_D3AA
00030D12 <AmiBlitz3.ab2@22989>   MOVEQ.l #$04,D1
00030D18 <AmiBlitz3.ab2@22990>    JSR writetrap
00030D22 <AmiBlitz3.ab2@22991>   MOVE.l destpointer,proclocals
00030D26 <AmiBlitz3.ab2@22992>    BSR.w writelong
00030D2A <AmiBlitz3.ab2@22993>    BSR.w writelong
00030D2E <AmiBlitz3.ab2@22996>    LEA $16(A2),A4
00030D36 <AmiBlitz3.ab2@22997>   MOVE.b proceduremode+1,$5(A2)
00030D38 <AmiBlitz3.ab2@22998>   MOVEQ.l #$00,D6
00030D3A <AmiBlitz3.ab2@22999>   MOVEQ.l #$00,D5
00030D40 <AmiBlitz3.ab2@23000>    JSR get1bytemain
00030D44 <AmiBlitz3.ab2@23001>   CMP.w #$7D,D0
00030D48 <AmiBlitz3.ab2@23002>    BEQ.w JL_0_D466
00030D4C <AmiBlitz3.ab2@23005>    CMP.b #"@",d0
00030D50 <AmiBlitz3.ab2@23006>    BNE 'l2
00030D52 <AmiBlitz3.ab2@23007>    MOVE.l a0,-(a7)
00030D58 <AmiBlitz3.ab2@23008>    MOVE.l currentfunction,a0
00030D5E <AmiBlitz3.ab2@23009>    CMP.b #31,$20(a0)                                       ;increase if morepars
00030D62 <AmiBlitz3.ab2@23010>    BNE 'l1
00030D66 <AmiBlitz3.ab2@23011>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00030D6C <AmiBlitz3.ab2@23014>    JSR get1bytemain
00030D6E <AmiBlitz3.ab2@23015>    MOVE.l (a7)+,a0
00030D72 <AmiBlitz3.ab2@23018>    BSR.w getparameter
00030D76 <AmiBlitz3.ab2@23019>    BSR.w JL_0_8E3C
00030D7E <AmiBlitz3.ab2@23020>   CMPI.l #$7,$4(A2)
00030D82 <AmiBlitz3.ab2@23021>    BNE.w JL_0_D3F6
00030D88 <AmiBlitz3.ab2@23022>   LEA stbuff,A0
00030D8A <AmiBlitz3.ab2@23023>   MOVE.w D5,D1
00030D8C <AmiBlitz3.ab2@23024>   LSL.w #2,D1
00030D90 <AmiBlitz3.ab2@23025>   MOVE.w D6,$0(A0,D1.W)
00030D96 <AmiBlitz3.ab2@23026>   MOVE.w $4(A3),$2(A0,D1.W)
00030D98 <AmiBlitz3.ab2@23027>   ADDQ.w #1,D5
00030D9A <AmiBlitz3.ab2@23028>   MOVEQ.l #$07,D2
00030D9E <AmiBlitz3.ab2@23029> BRA.w JL_0_D442
00030DA4 <AmiBlitz3.ab2@23032> JMP toovarerr
00030DA8 <AmiBlitz3.ab2@23035>   MOVE.w #$2940,D1
00030DAA <AmiBlitz3.ab2@23036>   MOVEQ.l #$03,D2
00030DB2 <AmiBlitz3.ab2@23037>   BTST #$0,flagmask+1
00030DB6 <AmiBlitz3.ab2@23038>    BNE.w JL_0_D430
00030DBE <AmiBlitz3.ab2@23039>   CMPI.l #$100,$4(A2)
00030DC2 <AmiBlitz3.ab2@23040>    BCC.w JUMP_illprocperr
00030DC6 <AmiBlitz3.ab2@23041>   MOVE.w $6(A2),D2
00030DCA <AmiBlitz3.ab2@23042>   CMP.w #$2,D2
00030DCE <AmiBlitz3.ab2@23043>    BHI.w JL_0_D430
00030DD2 <AmiBlitz3.ab2@23044>    BEQ.w JL_0_D42C
00030DD6 <AmiBlitz3.ab2@23045>   EORI.w #$3000,D1
00030DDA <AmiBlitz3.ab2@23046> BRA.w JL_0_D430
00030DE0 <AmiBlitz3.ab2@23049> JMP more6pard
00030DE4 <AmiBlitz3.ab2@23052>   ORI.w #$1000,D1
00030DE6 <AmiBlitz3.ab2@23055>   OR.w D6,D1
00030DEC <AmiBlitz3.ab2@23056>   TST.b fpu
00030DF0 <AmiBlitz3.ab2@23057>   BEQ 'nofpu
00030DF4 <AmiBlitz3.ab2@23058>   CMP.b #5,d2
00030DF8 <AmiBlitz3.ab2@23059>   BNE 'nofpu
00030DFC <AmiBlitz3.ab2@23060>   CMP.w #6,d6
00030E00 <AmiBlitz3.ab2@23061>   BLT 'l10a
00030E06 <AmiBlitz3.ab2@23062>   CMP.l #newtype_double,a2
00030E0A <AmiBlitz3.ab2@23063>   BEQ JUMP_more6pard
00030E0E <AmiBlitz3.ab2@23064> BRA 'nofpu
00030E14 <AmiBlitz3.ab2@23067>   MOVE.l #$f22c6400,d1
00030E18 <AmiBlitz3.ab2@23068>   MOVEM.l d0/a4,-(a7)
00030E1A <AmiBlitz3.ab2@23069>   MOVE.l d6,d0
00030E1C <AmiBlitz3.ab2@23070>   ASL.l #7,d0
00030E1E <AmiBlitz3.ab2@23071>   OR.w d0,d1
00030E24 <AmiBlitz3.ab2@23072>   CMP.l #newtype_double,a2
00030E28 <AmiBlitz3.ab2@23073>   BNE 'l1
00030E2E <AmiBlitz3.ab2@23074>   OR.l #$1000,d1
00030E32 <AmiBlitz3.ab2@23077>   BSR writelong
00030E36 <AmiBlitz3.ab2@23078>   MOVE.w 4(a3),d1
00030E3A <AmiBlitz3.ab2@23079>   BSR writeword
00030E3E <AmiBlitz3.ab2@23080>   MOVEM.l (a7)+,a4/d0
00030E42 <AmiBlitz3.ab2@23081> BRA JL_0_D442
00030E44 <AmiBlitz3.ab2@23084>   MOVE.l A4,-(A7)
00030E48 <AmiBlitz3.ab2@23085>    CMP.w #6,d6
00030E4C <AmiBlitz3.ab2@23086>    BLT 'l10
00030E50 <AmiBlitz3.ab2@23087>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00030E52 <AmiBlitz3.ab2@23088>    ADD.w d6,d1
00030E58 <AmiBlitz3.ab2@23089>    JSR Atokejsr
00030E5E <AmiBlitz3.ab2@23090>    TST.w dontwrite
00030E62 <AmiBlitz3.ab2@23091>    BNE 'l10
00030E68 <AmiBlitz3.ab2@23092>    MOVE.l data1start,d1
00030E6E <AmiBlitz3.ab2@23093>    MOVE.l destpointer,a4
00030E72 <AmiBlitz3.ab2@23094>    ADD.l d1,-6(a4)
00030E78 <AmiBlitz3.ab2@23095>    MOVE.l destpointer,d1
00030E7A <AmiBlitz3.ab2@23096>    SUBQ.l #6,d1
00030E80 <AmiBlitz3.ab2@23097>    SUB.l destbufferstart,d1
00030E82 <AmiBlitz3.ab2@23099>    MOVE.l d2,-(a7)
00030E84 <AmiBlitz3.ab2@23100>    MOVE.l d1,d2
00030E8A <AmiBlitz3.ab2@23101>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00030E8C <AmiBlitz3.ab2@23102>    MOVE.l (a7)+,d2
00030E92 <AmiBlitz3.ab2@23103>    MOVE.l destpointer,a4
00030E96 <AmiBlitz3.ab2@23104>    CMP.w #2,d2
00030E9A <AmiBlitz3.ab2@23105>    BNE 'nw1
00030EA0 <AmiBlitz3.ab2@23107>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00030EA8 <AmiBlitz3.ab2@23108>    ADD.l #2,-6(a4)
00030EAC <AmiBlitz3.ab2@23111>    CMP.w #1,d2
00030EB0 <AmiBlitz3.ab2@23112>    BNE 'nb
00030EB6 <AmiBlitz3.ab2@23113>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00030EBE <AmiBlitz3.ab2@23114>    ADD.l #3,-6(a4)
00030EC4 <AmiBlitz3.ab2@23117>    MOVE.w $4(a3),-2(a4)
00030EC8 <AmiBlitz3.ab2@23118> BRA 'ne1
00030ECC <AmiBlitz3.ab2@23121>   BSR.w writeword                                          ;write storeparameter
00030ED0 <AmiBlitz3.ab2@23124>   MOVE.w $4(A3),D1
00030ED4 <AmiBlitz3.ab2@23125>    BSR.w writeword
00030ED6 <AmiBlitz3.ab2@23128>   MOVEA.l (A7)+,A4
00030EDC <AmiBlitz3.ab2@23131>   CLR.l functionreturntype
00030EDE <AmiBlitz3.ab2@23132>   ADDQ.w #1,D6
00030EE2 <AmiBlitz3.ab2@23133>   CMP.w #11,D6                                             ;max function parameters
00030EE6 <AmiBlitz3.ab2@23134>    BCC.w JUMP_toovarerr
00030EEC <AmiBlitz3.ab2@23135>   MOVE.l currentfunction,a0
00030EF0 <AmiBlitz3.ab2@23136>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00030EF2 <AmiBlitz3.ab2@23137>   MOVE.b D2,(A4)+
00030EF6 <AmiBlitz3.ab2@23138>   CMP.w #$2C,D0
00030EFA <AmiBlitz3.ab2@23139>    BNE.w JL_0_D45E
00030F00 <AmiBlitz3.ab2@23140>    JSR get1bytemain
00030F04 <AmiBlitz3.ab2@23152> BRA.w JL_0_D3C6
00030F08 <AmiBlitz3.ab2@23155>   CMP.w #$7D,D0
00030F0C <AmiBlitz3.ab2@23156>    BNE.w JUMP_syntaxerr
00030F12 <AmiBlitz3.ab2@23159>   MOVEA.l currentfunction,A2
00030F14 <AmiBlitz3.ab2@23160>   LSL.w #4,D5
00030F16 <AmiBlitz3.ab2@23161>   OR.w D5,D6
00030F1A <AmiBlitz3.ab2@23162>   MOVE.b D6,$4(A2)
00030F1C <AmiBlitz3.ab2@23163>   LSR.w #4,D6
00030F20 <AmiBlitz3.ab2@23164>    BEQ.w JL_0_D4C4
00030F26 <AmiBlitz3.ab2@23165>   LEA stbuff,A0
00030F28 <AmiBlitz3.ab2@23166>   SUBQ.w #1,D6
00030F2A <AmiBlitz3.ab2@23169>     MOVE.w D6,D1                                           ;function stringpars
00030F2C <AmiBlitz3.ab2@23170>     LSL.w #2,D1                                            ;stringsize was 2
00030F2E <AmiBlitz3.ab2@23172>       LSL.w #1,d1
00030F30 <AmiBlitz3.ab2@23173>       ADDQ.w #4,d1
00030F32 <AmiBlitz3.ab2@23175>     ADDQ.w #8,D1
00030F38 <AmiBlitz3.ab2@23176>     MOVE.w D1,funcst+2
00030F3E <AmiBlitz3.ab2@23177>     MOVE.l funcst,D1
00030F42 <AmiBlitz3.ab2@23178>     BSR.w writelong
00030F44 <AmiBlitz3.ab2@23179>     MOVE.w (A0)+,D1
00030F48 <AmiBlitz3.ab2@23180>     CMP.b #5,d1
00030F4C <AmiBlitz3.ab2@23181>     BLE 's1
00030F50 <AmiBlitz3.ab2@23182>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00030F54 <AmiBlitz3.ab2@23183>     BSR writeinstruction
00030F56 <AmiBlitz3.ab2@23184>     MOVE.w D6,D1                                           ;function stringpars
00030F58 <AmiBlitz3.ab2@23185>     LSL.w #2,D1                                            ;stringsize was 2
00030F5A <AmiBlitz3.ab2@23187>       LSL.w #1,d1
00030F5C <AmiBlitz3.ab2@23189>     ADDQ.w #8,D1
00030F60 <AmiBlitz3.ab2@23190>     BSR writeword
00030F64 <AmiBlitz3.ab2@23191>   BRA 's2
00030F6A <AmiBlitz3.ab2@23194>     OR.w movedna3,D1
00030F6E <AmiBlitz3.ab2@23195>      BSR.w writeword
00030F74 <AmiBlitz3.ab2@23198>     MOVE.w (A0)+,least+2
00030F7A <AmiBlitz3.ab2@23199>     MOVE.l least,D1
00030F7E <AmiBlitz3.ab2@23200>      BSR.w writelong
00030F80 <AmiBlitz3.ab2@23201>     MOVE.l A0,-(A7)
00030F84 <AmiBlitz3.ab2@23202>     MOVE.w #$C700,D1
00030F88 <AmiBlitz3.ab2@23203>      BSR.w Atokejsr
00030F8A <AmiBlitz3.ab2@23204>     MOVEA.l (A7)+,A0
00030F8E <AmiBlitz3.ab2@23205>   DBF D6,JL_0_D482
00030F94 <AmiBlitz3.ab2@23208> JMP get1bytemain
00030F9A <AmiBlitz3.ab2@23212>   MOVE.w dontwrite,D1
00030F9E <AmiBlitz3.ab2@23213>    BNE.w JL_0_D4F6
00030FA4 <AmiBlitz3.ab2@23214>   MOVE.l destpointer,-(A7)
00030FAA <AmiBlitz3.ab2@23215>   MOVE.l A0,destpointer
00030FB0 <AmiBlitz3.ab2@23216>   MOVE.l linksize,D1
00030FB4 <AmiBlitz3.ab2@23217>    BSR.w writelong                                         ;writefunctions jumppos
00030FBA <AmiBlitz3.ab2@23218>    TST.b fastfunc
00030FBE <AmiBlitz3.ab2@23219>    BNE 'skip
00030FC2 <AmiBlitz3.ab2@23220>   MOVE.w #$CC00,D1
00030FC6 <AmiBlitz3.ab2@23221>    BSR.w tokejsr2                                          ;write clearvars
00030FCC <AmiBlitz3.ab2@23224>   MOVE.l (A7)+,destpointer
00030FCE <AmiBlitz3.ab2@23227> RTS
00030FD4 <AmiBlitz3.ab2@23231>   MOVEA.l currentfunction,A2
00030FD8 <AmiBlitz3.ab2@23232>   MOVEA.l $E(A2),A0
00030FDC <AmiBlitz3.ab2@23233>   MOVE.w $6(A2),D1
00030FE0 <AmiBlitz3.ab2@23234>    BEQ.w JL_0_D538
00030FE6 <AmiBlitz3.ab2@23235>   MOVE.w D1,linksize+2
00030FEA <AmiBlitz3.ab2@23236>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00030FEE <AmiBlitz3.ab2@23237>    BNE.w JL_0_D522
00030FF0 <AmiBlitz3.ab2@23238>   ADDQ.w #6,A0
00030FF4 <AmiBlitz3.ab2@23239>   MOVE.l A0,$E(A2)
00030FF8 <AmiBlitz3.ab2@23240> BRA.w JL_0_D4C8
00030FFA <AmiBlitz3.ab2@23243>   MOVE.l A0,-(A7)
00030FFE <AmiBlitz3.ab2@23244>    BSR.w JL_0_D4C8
00031000 <AmiBlitz3.ab2@23245>   MOVEA.l (A7)+,A0
00031004 <AmiBlitz3.ab2@23246>   LEA $A(A0),A0
0003100A <AmiBlitz3.ab2@23247>   MOVEA.l currentfunction,A2
0003100E <AmiBlitz3.ab2@23248> BRA.w JL_0_D54A
00031012 <AmiBlitz3.ab2@23251>   MOVE.w $8(A2),D1
00031016 <AmiBlitz3.ab2@23252>    BNE.w JL_0_D54A
0003101A <AmiBlitz3.ab2@23253>   LEA $10(A0),A0
0003101E <AmiBlitz3.ab2@23254>   MOVE.l A0,$E(A2)
00031020 <AmiBlitz3.ab2@23255> RTS
00031026 <AmiBlitz3.ab2@23259> JMP errormsg_nofast
0003102C <AmiBlitz3.ab2@23262>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00031030 <AmiBlitz3.ab2@23263>    BNE.w JL_0_D580
00031036 <AmiBlitz3.ab2@23264>    TST.b fastfunc
0003103A <AmiBlitz3.ab2@23265>    BNE JUMP_errormsg_nofast
00031040 <AmiBlitz3.ab2@23266>   MOVE.l destpointer,-(A7)
00031046 <AmiBlitz3.ab2@23267>   MOVE.l A0,destpointer
0003104A <AmiBlitz3.ab2@23268>   MOVE.w #$4EB9,D1
0003104E <AmiBlitz3.ab2@23269>    BSR.w writeword
00031054 <AmiBlitz3.ab2@23270>    JSR addoff
00031058 <AmiBlitz3.ab2@23271>    BSR.w writelong
0003105A <AmiBlitz3.ab2@23272>   MOVEA.l (A7)+,A0
00031060 <AmiBlitz3.ab2@23273>   MOVEA.l destpointer,A1
00031062 <AmiBlitz3.ab2@23274>   MOVE.l A0,-(A1)
00031068 <AmiBlitz3.ab2@23275>   MOVE.l A0,destpointer
0003106C <AmiBlitz3.ab2@23278>   MOVE.w $8(A2),D4
00031070 <AmiBlitz3.ab2@23279>    BPL.w JL_0_D59E
00031074 <AmiBlitz3.ab2@23280>   MOVE.w #$C004,D1
00031078 <AmiBlitz3.ab2@23281>    BSR.w tokejsr2
0003107E <AmiBlitz3.ab2@23282>   MOVEA.l currentfunction,A2
00031082 <AmiBlitz3.ab2@23283>   MOVE.w $8(A2),D4
00031086 <AmiBlitz3.ab2@23284>   ANDI.w #$7FFF,D4
0003108A <AmiBlitz3.ab2@23287>    BEQ.w JL_0_D5E0
0003108E <AmiBlitz3.ab2@23288>   MOVE.b $4(A2),D1
00031092 <AmiBlitz3.ab2@23289>   ANDI.w #$F,D1
00031094 <AmiBlitz3.ab2@23290>   MOVE.w D1,-(A7)
00031098 <AmiBlitz3.ab2@23291>   CMP.w #$5,D1
0003109C <AmiBlitz3.ab2@23292>    BCS.w JL_0_D5BC
000310A0 <AmiBlitz3.ab2@23293>   MOVE.w #$2F04,D1
000310A4 <AmiBlitz3.ab2@23294>    BSR.w writeword
000310AA <AmiBlitz3.ab2@23297>   MOVE.l locdatast,D3
000310B0 <AmiBlitz3.ab2@23298>    JSR datastart
000310B4 <AmiBlitz3.ab2@23299>   MOVE.w #$C501,D1
000310B8 <AmiBlitz3.ab2@23300>    BSR.w tokejsr2
000310BA <AmiBlitz3.ab2@23301>   MOVE.w (A7)+,D1
000310BE <AmiBlitz3.ab2@23302>   CMP.w #$5,D1
000310C2 <AmiBlitz3.ab2@23303>    BCS.w JL_0_D5E0
000310C6 <AmiBlitz3.ab2@23304>   MOVE.w #$281F,D1
000310CA <AmiBlitz3.ab2@23305>    BSR.w writeword
000310CE <AmiBlitz3.ab2@23307>   MOVE.w #$4E75,D1
000310D2 <AmiBlitz3.ab2@23308> BRA.w writeword
000310D8 <AmiBlitz3.ab2@23312>   LEA mwait,A0
000310DE <AmiBlitz3.ab2@23313>   LEA mwaitf,A1
000310E2 <AmiBlitz3.ab2@23314> BRA.w pokecode
000310E8 <AmiBlitz3.ab2@23318> JMP laberr
000310EC <AmiBlitz3.ab2@23321>   CMP.w #$2E,D0
000310F0 <AmiBlitz3.ab2@23322>   BNE.w JUMP_syntaxerr
000310F6 <AmiBlitz3.ab2@23323>   JSR getparameter2
000310FA <AmiBlitz3.ab2@23324>   BEQ.w JUMP_laberr
00031100 <AmiBlitz3.ab2@23325>   LEA newtypebase,A2
00031106 <AmiBlitz3.ab2@23326>   JSR findtype
0003110A <AmiBlitz3.ab2@23327>   BNE.w JL_0_D626
00031112 <AmiBlitz3.ab2@23328>   CMPI.l #MaxByte,$4(A2)
00031116 <AmiBlitz3.ab2@23329>   BNE.w JUMP_typeerr
0003111A <AmiBlitz3.ab2@23330> BRA.w JL_0_D62A
00031120 <AmiBlitz3.ab2@23333> JMP typeerr
00031126 <AmiBlitz3.ab2@23336>   JSR addlabel
0003112A <AmiBlitz3.ab2@23339>   CLR.l $4(A2)
00031130 <AmiBlitz3.ab2@23340>   MOVE.l A2,thistype
00031136 <AmiBlitz3.ab2@23341>   CLR.l prevtype
0003113C <AmiBlitz3.ab2@23342>   CLR.w typelen
00031142 <AmiBlitz3.ab2@23343>   CLR.w linemode
00031148 <AmiBlitz3.ab2@23344>   JSR reget
0003114C <AmiBlitz3.ab2@23345>   BNE.w typemode
0003114E <AmiBlitz3.ab2@23346> RTS
00031152 <AmiBlitz3.ab2@23349>   CMP.w #-$7FFE,D0
00031156 <AmiBlitz3.ab2@23350>   BEQ.w JL_0_D82E
00031160 <AmiBlitz3.ab2@23352>   MOVE.w oldqflag,instringon
00031166 <AmiBlitz3.ab2@23353>   MOVEA.l lastsourcepos,A5
00031168 <AmiBlitz3.ab2@23354>   MOVEQ.l #$00,D6
0003116C <AmiBlitz3.ab2@23355>   CMP.w #$2A,D0
00031170 <AmiBlitz3.ab2@23356>   BNE.w JL_0_D670
00031172 <AmiBlitz3.ab2@23357>   MOVEQ.l #$01,D6
00031178 <AmiBlitz3.ab2@23358>   JSR get1bytemain
0003117C <AmiBlitz3.ab2@23359> BRA.w JL_0_D67E
00031180 <AmiBlitz3.ab2@23362>   CMP.w #$40,D0
00031184 <AmiBlitz3.ab2@23363>   BNE.w JL_0_D67E
00031186 <AmiBlitz3.ab2@23364>   MOVEQ.l #$05,D6
0003118C <AmiBlitz3.ab2@23365>   JSR get1bytemain
00031192 <AmiBlitz3.ab2@23368>   MOVE.w D6,flagmask
00031198 <AmiBlitz3.ab2@23369>   JSR getparameter2
0003119C <AmiBlitz3.ab2@23370>   BEQ.w JUMP_syntaxerr
000311A2 <AmiBlitz3.ab2@23371>   MOVEA.l thistype,A2
000311A4 <AmiBlitz3.ab2@23372>   ADDQ.w #4,A2
000311AA <AmiBlitz3.ab2@23373>   JSR findvariable2
000311AE <AmiBlitz3.ab2@23374>   BEQ.w JUMP_dupofferr
000311B4 <AmiBlitz3.ab2@23375>   JSR addlabel
000311B6 <AmiBlitz3.ab2@23376>   MOVE.l A2,-(A7)
000311BA <AmiBlitz3.ab2@23377>   CMP.w #$2E,D0
000311BE <AmiBlitz3.ab2@23378>    BEQ.w JL_0_D6CE
000311C2 <AmiBlitz3.ab2@23379>   CMP.w #$24,D0
000311C6 <AmiBlitz3.ab2@23380>    BNE.w JL_0_D6C0
000311CC <AmiBlitz3.ab2@23381>   MOVE.l #newtype_string,D2
000311D2 <AmiBlitz3.ab2@23382>    JSR get1bytemain
000311D6 <AmiBlitz3.ab2@23383> BRA.w JL_0_D710
000311DC <AmiBlitz3.ab2@23386> JMP dupofferr
000311E2 <AmiBlitz3.ab2@23389>   MOVE.l prevtype,D2
000311E6 <AmiBlitz3.ab2@23390>   BEQ.w JUMP_notypeerr
000311EA <AmiBlitz3.ab2@23391> BRA.w JL_0_D706
000311F0 <AmiBlitz3.ab2@23394> JMP notypeerr
000311F6 <AmiBlitz3.ab2@23397>   JSR getparameter2
000311FA <AmiBlitz3.ab2@23398>    BEQ.w JUMP_syntaxerr
00031200 <AmiBlitz3.ab2@23399>   LEA newtypebase,A2
00031206 <AmiBlitz3.ab2@23400>    JSR findtype
0003120A <AmiBlitz3.ab2@23401>    BEQ.w JL_0_D704
00031212 <AmiBlitz3.ab2@23402>   BTST #$0,flagmask+1
00031216 <AmiBlitz3.ab2@23403>    BEQ.w JUMP_notypeerr
0003121C <AmiBlitz3.ab2@23404>   JSR addlabel
00031224 <AmiBlitz3.ab2@23407>   MOVE.w linenumat+2,$8(A2)
0003122C <AmiBlitz3.ab2@23408>   MOVE.l #MaxByte,$4(A2)
0003122E <AmiBlitz3.ab2@23411>   MOVE.l A2,D2
00031234 <AmiBlitz3.ab2@23414>   CMP.l #newtype_byte,D2
00031238 <AmiBlitz3.ab2@23415>    BEQ.w JL_0_D71E
0003123E <AmiBlitz3.ab2@23418>   ADDQ.w #1,typelen
00031246 <AmiBlitz3.ab2@23419>   BCLR #$0,typelen+1
00031248 <AmiBlitz3.ab2@23422>   MOVEQ.l #$00,D3
0003124A <AmiBlitz3.ab2@23423>   MOVEA.l D2,A2
00031250 <AmiBlitz3.ab2@23424>   MOVE.l A2,prevtype
00031254 <AmiBlitz3.ab2@23425>   MOVE.w $8(A2),D3
00031256 <AmiBlitz3.ab2@23426>   MOVEA.l (A7)+,A2
0003125A <AmiBlitz3.ab2@23427>   MOVE.l D2,$A(A2)
0003125C <AmiBlitz3.ab2@23428>   MOVEQ.l #$00,D4
00031262 <AmiBlitz3.ab2@23429>   MOVE.w typelen,D4
00031266 <AmiBlitz3.ab2@23430>   MOVE.w D4,$4(A2)
0003126E <AmiBlitz3.ab2@23431>   BTST #$0,flagmask+1
00031272 <AmiBlitz3.ab2@23432>    BEQ.w JL_0_D74C
00031274 <AmiBlitz3.ab2@23433>   MOVEQ.l #$04,D3
00031278 <AmiBlitz3.ab2@23436>   CMP.w #$5B,D0
0003127C <AmiBlitz3.ab2@23437>    BNE.w JL_0_D782
00031280 <AmiBlitz3.ab2@23438>   MOVEM.l D3-D4/A2,-(A7)
00031284 <AmiBlitz3.ab2@23439>    BSR.w AJL_0_BF6E
00031288 <AmiBlitz3.ab2@23440>   CMP.w #$5D,D0
0003128C <AmiBlitz3.ab2@23441>    BNE.w JUMP_syntaxerr
0003128E <AmiBlitz3.ab2@23442>   TST.w D6
00031292 <AmiBlitz3.ab2@23443>    BNE.w JUMP_fpconerr
00031294 <AmiBlitz3.ab2@23444>   MOVE.l D3,D1
00031298 <AmiBlitz3.ab2@23445>   MOVEM.l (A7)+,D3-D4/A2
0003129E <AmiBlitz3.ab2@23446>    JSR get1bytemain
000312A2 <AmiBlitz3.ab2@23447>   MOVE.w D1,$8(A2)
000312A6 <AmiBlitz3.ab2@23448>   MULU.l d1,d3                                             ;>32k fix was mulu.w
000312AE <AmiBlitz3.ab2@23449>   ORI.w #$2,flagmask
000312B0 <AmiBlitz3.ab2@23452>   ADD.l D3,D4
000312B6 <AmiBlitz3.ab2@23455>     CMP.l #65532,d4
000312BA <AmiBlitz3.ab2@23460>   BCC JUMP_toolongerr
000312C2 <AmiBlitz3.ab2@23461>   MOVE.w flagmask,$6(A2)
000312C8 <AmiBlitz3.ab2@23462>   MOVE.w D4,typelen
000312CA <AmiBlitz3.ab2@23463> RTS
000312D0 <AmiBlitz3.ab2@23466> JMP badenderr
000312D6 <AmiBlitz3.ab2@23469> JMP noiferr
000312DC <AmiBlitz3.ab2@23472> JMP toolongerr
000312E2 <AmiBlitz3.ab2@23475> JMP fpconerr
000312E8 <AmiBlitz3.ab2@23478>   MOVE.l firstiff,D0
000312EC <AmiBlitz3.ab2@23479>    BEQ.w JUMP_noiferr
000312EE <AmiBlitz3.ab2@23480>   MOVEA.l D0,A0
000312F2 <AmiBlitz3.ab2@23481>   MOVE.w $C(A0),D0
000312F6 <AmiBlitz3.ab2@23482>   ANDI.w #$FF,D0
000312F8 <AmiBlitz3.ab2@23483>   CMP.w D0,D1
000312FC <AmiBlitz3.ab2@23484>    BNE.w JUMP_badenderr
00031300 <AmiBlitz3.ab2@23487>   CMP.w #$1,D1
00031304 <AmiBlitz3.ab2@23488>   BNE.w JL_0_D7D8
00031308 <AmiBlitz3.ab2@23489>   MOVE.w #$6000,D1
0003130E <AmiBlitz3.ab2@23492>     TST.b fast
00031312 <AmiBlitz3.ab2@23493>     BEQ 'l1
00031318 <AmiBlitz3.ab2@23494>     OR.l #$ff,d1
0003131C <AmiBlitz3.ab2@23498>   BSR.w writeword
00031322 <AmiBlitz3.ab2@23499>   MOVEA.l destpointer,A1
00031326 <AmiBlitz3.ab2@23500>   MOVE.l $4(A0),D1
00031328 <AmiBlitz3.ab2@23501>   SUB.l A1,D1
0003132E <AmiBlitz3.ab2@23504>     TST.b fast
00031332 <AmiBlitz3.ab2@23505>     BEQ 'l2
00031336 <AmiBlitz3.ab2@23506>     BSR writelong
0003133A <AmiBlitz3.ab2@23507>   BRA JL_0_D7D8
0003133E <AmiBlitz3.ab2@23511>   BSR.w writeword
00031342 <AmiBlitz3.ab2@23514>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00031348 <AmiBlitz3.ab2@23515>   MOVE.l destpointer,D1
0003134A <AmiBlitz3.ab2@23516>   SUB.l A1,D1
00031350 <AmiBlitz3.ab2@23519>     TST.b fast
00031354 <AmiBlitz3.ab2@23520>     BEQ 'l1
00031356 <AmiBlitz3.ab2@23521>     ADDQ.l #4,D1
0003135C <AmiBlitz3.ab2@23522>     MOVE.w dontwrite,D0
00031360 <AmiBlitz3.ab2@23523>     BNE.w JL_0_D7FE
00031364 <AmiBlitz3.ab2@23524>     MOVE.l d1,-$4(a1)
00031368 <AmiBlitz3.ab2@23525>   BRA JL_0_D7FE
0003136A <AmiBlitz3.ab2@23529>   ADDQ.l #2,d1
00031370 <AmiBlitz3.ab2@23530>   TST.w dontwrite
00031374 <AmiBlitz3.ab2@23531>   BNE JL_0_D7FE
0003137A <AmiBlitz3.ab2@23532>   CMP.l #MinWordSgnd,D1
0003137E <AmiBlitz3.ab2@23533>   BCC.w JUMP_bigiferr
00031382 <AmiBlitz3.ab2@23534>   MOVE.w D1,-$2(A1)
00031384 <AmiBlitz3.ab2@23537> RTS
0003138A <AmiBlitz3.ab2@23540> JMP bigiferr
00031394 <AmiBlitz3.ab2@23545>   MOVE.w oldqflag,instringon
0003139A <AmiBlitz3.ab2@23546>   MOVEA.l lastsourcepos,A5
0003139C <AmiBlitz3.ab2@23549>   MOVEQ.l #$01,D1
000313A0 <AmiBlitz3.ab2@23550> BRA.w JL_0_D810
000313AA <AmiBlitz3.ab2@23554>   MOVE.w oldqflag,instringon
000313B0 <AmiBlitz3.ab2@23555>   MOVEA.l lastsourcepos,A5
000313B2 <AmiBlitz3.ab2@23558>   MOVEQ.l #$00,D1
000313B6 <AmiBlitz3.ab2@23561>   BSR.w JL_0_D79E
000313BA <AmiBlitz3.ab2@23562>   BSR.w AJL_0_D81C
000313C0 <AmiBlitz3.ab2@23563> JMP get1bytemain
000313C6 <AmiBlitz3.ab2@23566>   MOVE.l (A0),firstiff
000313C8 <AmiBlitz3.ab2@23567>   MOVEA.l A0,A1
000313CA <AmiBlitz3.ab2@23568>   MOVEQ.l #$0E,D0
000313D0 <AmiBlitz3.ab2@23569>   MOVEA.l _execbase,A6
000313D6 <AmiBlitz3.ab2@23570>   MOVE.l mempool,a0
000313DA <AmiBlitz3.ab2@23571> JMP _FreePooled(A6)
000313E0 <AmiBlitz3.ab2@23575>   JSR get1bytemain
000313E4 <AmiBlitz3.ab2@23578>   BEQ.w JL_0_D980
000313EC <AmiBlitz3.ab2@23579>   CMP.l #"noa7",-1(a5)
000313F0 <AmiBlitz3.ab2@23580>   BNE 'l1
000313F6 <AmiBlitz3.ab2@23581>   JSR get1bytemain
000313FC <AmiBlitz3.ab2@23582>   JSR get1bytemain
00031402 <AmiBlitz3.ab2@23583>   JSR get1bytemain
0003140A <AmiBlitz3.ab2@23584>   MOVE.w #$3a,lastchar
0003140E <AmiBlitz3.ab2@23585> BRA JL_0_D980
00031414 <AmiBlitz3.ab2@23588>   CMP.w #"d0",-1(a5)
00031418 <AmiBlitz3.ab2@23589>   BNE 'l2
00031420 <AmiBlitz3.ab2@23590>   MOVE.b #1,returncode
00031426 <AmiBlitz3.ab2@23591>   CLR.w lastchar
0003142A <AmiBlitz3.ab2@23592> BRA JL_0_D980
0003142E <AmiBlitz3.ab2@23595>   CMP.w #$80d7,d0
00031432 <AmiBlitz3.ab2@23596>   BNE JL_0_D836
00031438 <AmiBlitz3.ab2@23597>   JSR skiprest
0003143A <AmiBlitz3.ab2@23598> RTS
0003143E <AmiBlitz3.ab2@23601>   BSR.w JL_0_D844
00031444 <AmiBlitz3.ab2@23602>   JSR reget
00031448 <AmiBlitz3.ab2@23603>   BNE.w JL_0_D836
0003144A <AmiBlitz3.ab2@23604> RTS
0003144E <AmiBlitz3.ab2@23607>   CMP.w #-$7FFF,D0
00031452 <AmiBlitz3.ab2@23608>    BNE.w JL_0_D87E
00031458 <AmiBlitz3.ab2@23609>   MOVE.w linemode,D1
0003145C <AmiBlitz3.ab2@23610>    BNE.w JUMP_modeerr
00031462 <AmiBlitz3.ab2@23611>   ADDQ.w #1,typelen
0003146A <AmiBlitz3.ab2@23612>   BCLR #$0,typelen+1
00031470 <AmiBlitz3.ab2@23613>   MOVEA.l thistype,A0
00031478 <AmiBlitz3.ab2@23614>   MOVE.w typelen,$8(A0)
00031480 <AmiBlitz3.ab2@23615>   MOVE.w #$FFFF,linemode
00031486 <AmiBlitz3.ab2@23616> JMP get1bytemain
0003148C <AmiBlitz3.ab2@23619> JMP modeerr
00031490 <AmiBlitz3.ab2@23622>   CMP.w #-$7FF5,D0
00031494 <AmiBlitz3.ab2@23623>    BEQ.w JL_0_D80E
00031498 <AmiBlitz3.ab2@23624>   CMP.w #-$7FF4,D0
0003149C <AmiBlitz3.ab2@23625>    BEQ.w JL_0_D804
000314A0 <AmiBlitz3.ab2@23626>   CMP.w #-$7FF8,D0
000314A4 <AmiBlitz3.ab2@23627>    BNE.w JL_0_D89A
000314A8 <AmiBlitz3.ab2@23630> BRA.w JL_0_D9E8
000314AE <AmiBlitz3.ab2@23633> JMP interr3
000314B2 <AmiBlitz3.ab2@23636>   CMP.w #-$7FF7,D0
000314B6 <AmiBlitz3.ab2@23637>    BNE.w JL_0_D8C8
000314BC <AmiBlitz3.ab2@23638>    TST.b fpu
000314C0 <AmiBlitz3.ab2@23639>    BEQ 'nof
000314C6 <AmiBlitz3.ab2@23640>    MOVEA.l currentfunction,A0
000314CC <AmiBlitz3.ab2@23641>    CMP.l #0,a0
000314D0 <AmiBlitz3.ab2@23642>    BEQ 'nof
000314D6 <AmiBlitz3.ab2@23643>    CMP.b #5,$5(a0)
000314DA <AmiBlitz3.ab2@23644>     BNE 'nof
000314E0 <AmiBlitz3.ab2@23645>    MOVE.l #$f23c5000,d1
000314E4 <AmiBlitz3.ab2@23646>    BSR writelong
000314E8 <AmiBlitz3.ab2@23647>    MOVE.w #0,d1
000314EC <AmiBlitz3.ab2@23648>    BSR writeword
000314F0 <AmiBlitz3.ab2@23651>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
000314F4 <AmiBlitz3.ab2@23652>    BSR.w writeword
000314FA <AmiBlitz3.ab2@23653>   MOVEA.l currentfunction,A0
00031500 <AmiBlitz3.ab2@23654>   CMP.l #0,a0
00031504 <AmiBlitz3.ab2@23655>   BEQ JL_0_D896
0003150A <AmiBlitz3.ab2@23656>   MOVE.l destpointer,d1
0003150E <AmiBlitz3.ab2@23657>   SUB.l $e(a0),d1
00031512 <AmiBlitz3.ab2@23658>   MOVE.l d1,isfunc+1(a0)
00031518 <AmiBlitz3.ab2@23659>   CMPI.b #$7,$5(A0)
0003151C <AmiBlitz3.ab2@23660>    BNE.w JL_0_D896
00031522 <AmiBlitz3.ab2@23661>   MOVE.w putstlen,D1
00031526 <AmiBlitz3.ab2@23662>    BSR.w writeword
0003152A <AmiBlitz3.ab2@23663> BRA.w JL_0_D896
00031530 <AmiBlitz3.ab2@23666> JMP interr
00031534 <AmiBlitz3.ab2@23669>  CMP.w #-$7FD0,D0
00031538 <AmiBlitz3.ab2@23670>    BNE.w JL_0_D966
0003153E <AmiBlitz3.ab2@23671>   MOVE.w proceduremode,D1
00031542 <AmiBlitz3.ab2@23672>    BNE.w JUMP_interr3
00031548 <AmiBlitz3.ab2@23673>   TST.b debugmode
0003154C <AmiBlitz3.ab2@23674>    BEQ.w JL_0_D90A
0003154E <AmiBlitz3.ab2@23675>   MOVEQ.l #$03,D1
00031554 <AmiBlitz3.ab2@23676>    JSR writetrap
0003155A <AmiBlitz3.ab2@23677>   MOVE.w dontwrite,D1
0003155E <AmiBlitz3.ab2@23678>    BNE.w JL_0_D90A
00031564 <AmiBlitz3.ab2@23679>   MOVEA.l intcleanat,A0
0003156A <AmiBlitz3.ab2@23680>   MOVE.l destpointer,(A0)
0003156E <AmiBlitz3.ab2@23681>   MOVE.w #$C30C,D1
00031572 <AmiBlitz3.ab2@23682>    BSR.w Atokejsr
00031578 <AmiBlitz3.ab2@23685>   MOVE.w intstring,D1
0003157C <AmiBlitz3.ab2@23686>    BEQ.w JUMP_interr
00031580 <AmiBlitz3.ab2@23687>    BPL.w JL_0_D934
00031586 <AmiBlitz3.ab2@23688>   MOVE.w intlevel,D1
0003158A <AmiBlitz3.ab2@23689>   ORI.w #$7200,D1
0003158E <AmiBlitz3.ab2@23690>    BSR.w writeword
00031592 <AmiBlitz3.ab2@23691>   MOVE.w #$C103,D1
00031596 <AmiBlitz3.ab2@23692>    BSR.w Atokejsr
0003159C <AmiBlitz3.ab2@23693>   CLR.w intlevel
000315A2 <AmiBlitz3.ab2@23696>  CLR.w intstring
000315A8 <AmiBlitz3.ab2@23697>   MOVE.l intfin,D1
000315AC <AmiBlitz3.ab2@23698>    BSR.w writelong
000315B2 <AmiBlitz3.ab2@23699>   MOVE.l #$70004E75,D1
000315B6 <AmiBlitz3.ab2@23700>    BSR.w writelong
000315BC <AmiBlitz3.ab2@23701>   MOVE.w dontwrite,D1
000315C0 <AmiBlitz3.ab2@23702>    BNE.w JL_0_D962
000315C6 <AmiBlitz3.ab2@23703>   MOVEA.l intjmpat,A0
000315CA <AmiBlitz3.ab2@23704>   MOVE.l destpointer(PC),(A0)
000315D0 <AmiBlitz3.ab2@23707> JMP get1bytemain
000315D4 <AmiBlitz3.ab2@23711>   CMP.w #-$7FF2,D0
000315D8 <AmiBlitz3.ab2@23712>    BEQ.w doendsel
000315DC <AmiBlitz3.ab2@23713>   CMP.w #-$7F4C,D0
000315E0 <AmiBlitz3.ab2@23714>    BNE.w JL_0_D97C
000315E6 <AmiBlitz3.ab2@23715> JMP doendseterr
000315EC <AmiBlitz3.ab2@23719> JMP syntaxerr
000315F2 <AmiBlitz3.ab2@23723>   TST.w dirmode
000315F6 <AmiBlitz3.ab2@23724>   BNE.w JUMP_baddirerr
000315FA <AmiBlitz3.ab2@23725>   MOVE.w #$C800,D1
00031600 <AmiBlitz3.ab2@23726>   JSR Atokejsr                                            ;end
00031608 <AmiBlitz3.ab2@23727>   CMP.l #"noa7",-4(a5)
0003160C <AmiBlitz3.ab2@23728>   BNE 'l10
00031612 <AmiBlitz3.ab2@23729>   TST.w dontwrite
00031616 <AmiBlitz3.ab2@23730>   BNE 'l10
0003161C <AmiBlitz3.ab2@23731>   MOVE.l destpointer,d1
0003161E <AmiBlitz3.ab2@23732>   SUBQ.l #4,d1
00031620 <AmiBlitz3.ab2@23733>   MOVE.l a0,-(a7)
00031622 <AmiBlitz3.ab2@23734>   MOVE.l d1,a0
00031624 <AmiBlitz3.ab2@23735>   MOVE.l (a0),a0
0003162A <AmiBlitz3.ab2@23736>   MOVE.l #$60000002,(a0)+
0003162E <AmiBlitz3.ab2@23737>   MOVE.w #$588f,(a0)
00031630 <AmiBlitz3.ab2@23738>   MOVE.l (a7)+,a0
00031632 <AmiBlitz3.ab2@23741> RTS
00031638 <AmiBlitz3.ab2@23745>   TST.w dirmode                                            ;stop
0003163C <AmiBlitz3.ab2@23746>   BNE.w JUMP_baddirerr
0003163E <AmiBlitz3.ab2@23747>   MOVE.w d0,d1
00031642 <AmiBlitz3.ab2@23748>   BEQ 'l10
00031646 <AmiBlitz3.ab2@23749>   CMP.b #$3a,d0
0003164A <AmiBlitz3.ab2@23750>   BEQ 'l10
00031650 <AmiBlitz3.ab2@23751>   JSR get1bytemain
00031656 <AmiBlitz3.ab2@23754>   TST.b debugmode
0003165A <AmiBlitz3.ab2@23755>   BEQ.w newstop
0003165E <AmiBlitz3.ab2@23756>   MOVE.w #$D501,D1
00031662 <AmiBlitz3.ab2@23757> BRA.w Atokejsr
00031664 <AmiBlitz3.ab2@23761>     RTS
00031666 <AmiBlitz3.ab2@23763>   MOVE.w d1,d0
0003166A <AmiBlitz3.ab2@23764>   BEQ 'l10
0003166E <AmiBlitz3.ab2@23765>   CMP.b #$3a,d0
00031672 <AmiBlitz3.ab2@23766>   BEQ 'l10
00031676 <AmiBlitz3.ab2@23767>   SUB.b #$30,d0
0003167A <AmiBlitz3.ab2@23768>   MOVE.w #$4e40,d1
0003167E <AmiBlitz3.ab2@23769> BRA 'l11
00031682 <AmiBlitz3.ab2@23772>   MOVE.w #$4e4a,d1
00031686 <AmiBlitz3.ab2@23773> BRA writeword
00031688 <AmiBlitz3.ab2@23776>   ADD.b d0,d1
0003168C <AmiBlitz3.ab2@23777> BRA writeword
00031692 <AmiBlitz3.ab2@23781> JMP badconterr
00031696 <AmiBlitz3.ab2@23784>   MOVE.w #$4E71,D1
0003169A <AmiBlitz3.ab2@23785> BRA.w writeword
000316A0 <AmiBlitz3.ab2@23788>   MOVEA.l firstfor,A2
000316A6 <AmiBlitz3.ab2@23789>   CLR.l firstfor
000316AC <AmiBlitz3.ab2@23790>   MOVEA.l _execbase,A6
000316B0 <AmiBlitz3.ab2@23793>   CMPA.w #$0,A2
000316B4 <AmiBlitz3.ab2@23794>   BEQ.w JL_0_D9E6
000316B6 <AmiBlitz3.ab2@23795>   MOVEA.l A2,A1
000316B8 <AmiBlitz3.ab2@23796>   MOVEA.l (A1),A2
000316BA <AmiBlitz3.ab2@23797>   MOVEQ.l #$00,D0
000316C0 <AmiBlitz3.ab2@23798>   MOVE.l mempool2,a0
000316C4 <AmiBlitz3.ab2@23799>   MOVE.b $10(A1),D0
000316C8 <AmiBlitz3.ab2@23800>   JSR _FreePooled(A6)                                      ;freememfor_error
000316CC <AmiBlitz3.ab2@23801> BRA.w JL_0_D9CC
000316CE <AmiBlitz3.ab2@23804> RTS
000316D4 <AmiBlitz3.ab2@23808> JMP badpenderr
000316DA <AmiBlitz3.ab2@23814>   MOVE.w proceduremode,D1
000316DE <AmiBlitz3.ab2@23815>    BEQ.w JUMP_badpenderr
000316E4 <AmiBlitz3.ab2@23817>   MOVE.w dontwrite,D1
000316E8 <AmiBlitz3.ab2@23818>    BNE.w JL_0_DA1A
000316EE <AmiBlitz3.ab2@23819>   MOVEA.l firstpend,A2
000316F2 <AmiBlitz3.ab2@23822>   CMPA.w #$0,A2
000316F6 <AmiBlitz3.ab2@23823>    BEQ.w JL_0_DA1A
000316FA <AmiBlitz3.ab2@23824>   MOVEA.l $4(A2),A0
00031700 <AmiBlitz3.ab2@23825>   MOVE.l destpointer,(A0)
00031702 <AmiBlitz3.ab2@23826>   MOVEA.l (A2),A2
00031706 <AmiBlitz3.ab2@23827> BRA.w JL_0_DA02
0003170C <AmiBlitz3.ab2@23830>   TST.b debugmode
00031710 <AmiBlitz3.ab2@23831>    BEQ.b JL_0_DA2A
00031712 <AmiBlitz3.ab2@23832>   MOVEQ.l #$05,D1
00031718 <AmiBlitz3.ab2@23833>   JSR writetrap
0003171E <AmiBlitz3.ab2@23836>   MOVEA.l firstlocal,A2                                    ;firstlocal
00031724 <AmiBlitz3.ab2@23837>   JSR calcstatic2b                                           ;calcstatic
0003172A <AmiBlitz3.ab2@23838>   MOVEA.l currentfunction,A0
00031730 <AmiBlitz3.ab2@23839>   MOVE.l destpointer,d1
00031734 <AmiBlitz3.ab2@23840>   SUB.l $e(a0),d1
00031738 <AmiBlitz3.ab2@23841>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
0003173C <AmiBlitz3.ab2@23842>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00031742 <AmiBlitz3.ab2@23843>   MOVE.l D3,locdatast
00031748 <AmiBlitz3.ab2@23844>   MOVEA.l tempvm,A1
0003174E <AmiBlitz3.ab2@23845>  CLR.b infunctioncode
00031754 <AmiBlitz3.ab2@23846>   MOVE.l firstiffstore,d1
0003175A <AmiBlitz3.ab2@23847>   CMP.l firstiff,d1
0003175E <AmiBlitz3.ab2@23848>   BNE JUMP_noenderr
00031762 <AmiBlitz3.ab2@23849>   TST.w $C(A1)                                             ;dim
00031766 <AmiBlitz3.ab2@23850>    BPL.w JL_0_DA64
0003176C <AmiBlitz3.ab2@23851>  BSET #$7,$8(A0)
00031770 <AmiBlitz3.ab2@23852>   MOVE.w #$C005,D1
00031774 <AmiBlitz3.ab2@23853>    BSR.w tokejsr2                                          ;writefreememstatement
00031778 <AmiBlitz3.ab2@23854> BRA.w JL_0_DA6C
0003177E <AmiBlitz3.ab2@23857> JMP noenderr
00031786 <AmiBlitz3.ab2@23860>   MOVE.w memlibstat,$C(A1)
0003178C <AmiBlitz3.ab2@23863>   MOVEA.l currentfunction,A0
00031790 <AmiBlitz3.ab2@23864>   MOVE.l $E(A0),-(A7)
00031798 <AmiBlitz3.ab2@23865>   MOVE.w locvaroff,$6(A0)
0003179E <AmiBlitz3.ab2@23866>   BCLR #$1,$7(A0)
000317A4 <AmiBlitz3.ab2@23867>   BCLR #$0,$7(A0)
000317AA <AmiBlitz3.ab2@23868>   CMPI.b #$7,$5(A0)
000317AE <AmiBlitz3.ab2@23869>    BNE.w JL_0_DA9E
000317B4 <AmiBlitz3.ab2@23870>   MOVE.w getstlen,D1
000317B8 <AmiBlitz3.ab2@23871>    BSR.w writeword
000317BC <AmiBlitz3.ab2@23874>   TST.w $6(A0)
000317C0 <AmiBlitz3.ab2@23875>    BEQ.w JL_0_DAB8
000317C4 <AmiBlitz3.ab2@23876>   MOVE.w #$FC7B,D1
000317CA <AmiBlitz3.ab2@23877>    JSR uselib
000317D0 <AmiBlitz3.ab2@23878>   MOVE.w unlinka4,D1
000317D4 <AmiBlitz3.ab2@23879>    BSR.w writeword
000317DA <AmiBlitz3.ab2@23882>   MOVEA.l currentfunction,A0
000317DC <AmiBlitz3.ab2@23883>   MOVEQ.l #$00,D1
000317E0 <AmiBlitz3.ab2@23884>   MOVE.b $4(A0),D1
000317E2 <AmiBlitz3.ab2@23885>   LSR.w #4,D1
000317E6 <AmiBlitz3.ab2@23886>    BEQ.w JL_0_DB24
000317E8 <AmiBlitz3.ab2@23888>      LSL.w #1,d1
000317EC <AmiBlitz3.ab2@23890>   CMP.w #$1,D1
000317F0 <AmiBlitz3.ab2@23891>    BNE.w JL_0_DAE0
000317F6 <AmiBlitz3.ab2@23892>   MOVE.w fix1,D1
000317FA <AmiBlitz3.ab2@23893>    BSR.w writeword
000317FE <AmiBlitz3.ab2@23894> BRA.w JL_0_DB24
00031800 <AmiBlitz3.ab2@23897>   LSL.w #2,D1
00031802 <AmiBlitz3.ab2@23898>   MOVE.w D1,-(A7)
00031808 <AmiBlitz3.ab2@23899>   MOVE.w D1,moverts+2
0003180E <AmiBlitz3.ab2@23900>   MOVE.l moverts,D1
00031814 <AmiBlitz3.ab2@23901>    JSR writelong
00031816 <AmiBlitz3.ab2@23902>   MOVE.w (A7)+,D1
0003181A <AmiBlitz3.ab2@23903>   CMP.w #$8,D1
0003181E <AmiBlitz3.ab2@23904>    BHI.w JL_0_DB14
00031822 <AmiBlitz3.ab2@23905>   ANDI.w #$7,D1
00031824 <AmiBlitz3.ab2@23906>   LSL.w #8,D1
00031826 <AmiBlitz3.ab2@23907>   LSL.w #1,D1
0003182C <AmiBlitz3.ab2@23908>   OR.w fixq,D1
00031832 <AmiBlitz3.ab2@23909>    JSR writeword
00031836 <AmiBlitz3.ab2@23910> BRA.w JL_0_DB24
0003183C <AmiBlitz3.ab2@23914>    MOVE.w D1,fixstack+2
00031842 <AmiBlitz3.ab2@23915>   MOVE.l fixstack,D1
00031848 <AmiBlitz3.ab2@23916>    JSR writelong
0003184C <AmiBlitz3.ab2@23919>    BSR.w JL_0_D2CA
00031850 <AmiBlitz3.ab2@23920>    BSR.w JL_0_D4F8
00031852 <AmiBlitz3.ab2@23921>   MOVEA.l (A7)+,A0
00031858 <AmiBlitz3.ab2@23922>   MOVE.w dontwrite,D1
0003185C <AmiBlitz3.ab2@23923>    BNE.w JL_0_DB3E
00031862 <AmiBlitz3.ab2@23924>   MOVE.l destpointer,-(A0)
00031868 <AmiBlitz3.ab2@23927>   CLR.w proceduremode
0003186E <AmiBlitz3.ab2@23928>   CLR.l currentfunction
00031874 <AmiBlitz3.ab2@23929>   CLR.w procnum
00031878 <AmiBlitz3.ab2@23930>    BSR.w JL_0_DB5C
0003187E <AmiBlitz3.ab2@23931>    JSR freepends
00031884 <AmiBlitz3.ab2@23932> JMP get1bytemain
00031886 <AmiBlitz3.ab2@23935>   MOVEQ.l #$0C,D0
00031888 <AmiBlitz3.ab2@23936>   MOVEQ.l #$01,D1
0003188E <AmiBlitz3.ab2@23937>   MOVEA.l _execbase,A6
00031894 <AmiBlitz3.ab2@23939>   MOVE.l mempool,a0
00031898 <AmiBlitz3.ab2@23940>   JSR _AllocPooled(a6)
0003189A <AmiBlitz3.ab2@23941>   MOVEA.l D0,A0
000318A0 <AmiBlitz3.ab2@23942>   MOVE.l alllocals,(A0)
000318A6 <AmiBlitz3.ab2@23943>   MOVE.l A0,alllocals
000318AC <AmiBlitz3.ab2@23944>   MOVE.l firstlocal,D0
000318B2 <AmiBlitz3.ab2@23945>   CLR.l firstlocal
000318B6 <AmiBlitz3.ab2@23946>   MOVE.l D0,$4(A0)
000318BC <AmiBlitz3.ab2@23947>   MOVE.l firstglob,D1
000318C2 <AmiBlitz3.ab2@23948>   CLR.l firstglob
000318C6 <AmiBlitz3.ab2@23949>   MOVE.l D1,$8(A0)
000318CC <AmiBlitz3.ab2@23950>   TST.b debugmode
000318D0 <AmiBlitz3.ab2@23951>    BEQ.b JL_0_DBB0
000318D6 <AmiBlitz3.ab2@23952>   TST.w dontwrite
000318DA <AmiBlitz3.ab2@23953>    BNE.b JL_0_DBB0
000318DE <AmiBlitz3.ab2@23954>   MOVEA.l proclocals(PC),A0
000318E0 <AmiBlitz3.ab2@23955>   MOVE.l D0,(A0)+
000318E2 <AmiBlitz3.ab2@23956>   MOVE.l D1,(A0)
000318E4 <AmiBlitz3.ab2@23959> RTS
000318EA <AmiBlitz3.ab2@23962> JMP baddirerr
000318F0 <AmiBlitz3.ab2@23966>   TST.w dirmode
000318F4 <AmiBlitz3.ab2@23967>    BNE.w JUMP_baddirerr
000318FA <AmiBlitz3.ab2@23968>   MOVE.l firstfor,D1
000318FE <AmiBlitz3.ab2@23969>    BEQ.w JUMP_noforerr
00031904 <AmiBlitz3.ab2@23970>   JSR reget
00031908 <AmiBlitz3.ab2@23971>    BEQ.w JL_0_DC18
0003190C <AmiBlitz3.ab2@23974>   BSR.w getparameter
00031910 <AmiBlitz3.ab2@23975>   MOVEA.l firstfor(PC),A2
00031912 <AmiBlitz3.ab2@23976>   MOVEQ.l #$00,D1
00031916 <AmiBlitz3.ab2@23977>   MOVE.b $10(A2),D1
0003191A <AmiBlitz3.ab2@23978>   SUBI.w #$12,D1
0003191C <AmiBlitz3.ab2@23979>   CMP.w D1,D2
00031920 <AmiBlitz3.ab2@23980>    BNE.w JUMP_noforerr
00031924 <AmiBlitz3.ab2@23981>   LEA ptr_parameterstore(PC),A0
00031928 <AmiBlitz3.ab2@23982>   LEA $11(A2),A1
0003192A <AmiBlitz3.ab2@23983>   SUBQ.w #1,D2
0003192C <AmiBlitz3.ab2@23986>     CMPM.b (A0)+,(A1)+
00031930 <AmiBlitz3.ab2@23987>     BNE.w JUMP_noforerr
00031934 <AmiBlitz3.ab2@23988>   DBF D2,JL_0_DBF0
00031938 <AmiBlitz3.ab2@23990>    BSR.w JL_0_DC1A
0003193E <AmiBlitz3.ab2@23991>    JSR reget
00031942 <AmiBlitz3.ab2@23992>    BEQ.w JL_0_DC16
00031946 <AmiBlitz3.ab2@23993>   CMP.w #$2C,D0
0003194A <AmiBlitz3.ab2@23994>    BNE.w JUMP_syntaxerr
00031950 <AmiBlitz3.ab2@23995>    JSR get1bytemain
00031954 <AmiBlitz3.ab2@23996> BRA.w JL_0_DBCE
0003195A <AmiBlitz3.ab2@23999> JMP noforerr
0003195C <AmiBlitz3.ab2@24002> RTS
00031960 <AmiBlitz3.ab2@24006>   MOVE.l 8(a7),a2
00031964 <AmiBlitz3.ab2@24007>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00031968 <AmiBlitz3.ab2@24008>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
0003196C <AmiBlitz3.ab2@24009>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
0003196E <AmiBlitz3.ab2@24013>   MOVEA.l D1,A2
00031974 <AmiBlitz3.ab2@24016>   JSR popnext                                           ;error checking for next.
00031978 <AmiBlitz3.ab2@24017>   MOVE.w $C(A2),D0
0003197E <AmiBlitz3.ab2@24018>   LEA nextb,A0
00031984 <AmiBlitz3.ab2@24019>   LEA nextbf,A1
00031988 <AmiBlitz3.ab2@24020>   CMP.w #$1,D0
0003198C <AmiBlitz3.ab2@24021>    BEQ.w JL_0_DC74
00031992 <AmiBlitz3.ab2@24022>   LEA nextw,A0
00031998 <AmiBlitz3.ab2@24023>   LEA nextwf,A1
0003199C <AmiBlitz3.ab2@24024>   CMP.w #$2,D0
000319A0 <AmiBlitz3.ab2@24025>    BEQ.w JL_0_DC74
000319A6 <AmiBlitz3.ab2@24026>   LEA nextl,A0
000319AC <AmiBlitz3.ab2@24027>   LEA nextlf,A1
000319B0 <AmiBlitz3.ab2@24028>   CMP.w #$5,D0
000319B4 <AmiBlitz3.ab2@24029>    BNE.w JL_0_DC74
000319BA <AmiBlitz3.ab2@24030>    TST.b fpu
000319BE <AmiBlitz3.ab2@24031>    BEQ 'old
000319C4 <AmiBlitz3.ab2@24032>    LEA fpu2dats,a0                                         ;fpu next code
000319CA <AmiBlitz3.ab2@24033>    LEA fpu2date,a1
000319CE <AmiBlitz3.ab2@24034> BRA JL_0_DC74
000319D2 <AmiBlitz3.ab2@24037>   MOVE.w #$C900,D1
000319D6 <AmiBlitz3.ab2@24038>    BSR.w Atokejsr
000319DC <AmiBlitz3.ab2@24039>   LEA nextf,A0
000319E2 <AmiBlitz3.ab2@24040>   LEA nextff,A1
000319E8 <AmiBlitz3.ab2@24043>   JSR pokecode
000319EE <AmiBlitz3.ab2@24044>     TST.b fast                                             ;fast for next deactivate
000319F2 <AmiBlitz3.ab2@24045> BRA 'l1
000319F8 <AmiBlitz3.ab2@24047>     TST.b onestep
000319FC <AmiBlitz3.ab2@24048>     BEQ 'l1
00031A02 <AmiBlitz3.ab2@24049>     CLR.b onestep
00031A08 <AmiBlitz3.ab2@24050>     SUBQ.l #4,destpointer
00031A0C <AmiBlitz3.ab2@24051>     MOVE.w #$5292,d1
00031A12 <AmiBlitz3.ab2@24052>     JSR writeword
00031A16 <AmiBlitz3.ab2@24055>   MOVE.l JL_0_DCF4(PC),D1
00031A1C <AmiBlitz3.ab2@24056>    JSR writelong
00031A22 <AmiBlitz3.ab2@24057>   MOVEA.l firstfor,A2
00031A28 <AmiBlitz3.ab2@24058>   MOVE.l (A2),firstfor
00031A2C <AmiBlitz3.ab2@24059>   MOVEA.l $8(A2),A0
00031A32 <AmiBlitz3.ab2@24060>   MOVEA.l destpointer,A1
00031A34 <AmiBlitz3.ab2@24061>   MOVE.l A1,D1
00031A36 <AmiBlitz3.ab2@24062>   SUB.l A0,D1
00031A38 <AmiBlitz3.ab2@24063>   ADDQ.l #2,D1
00031A3E <AmiBlitz3.ab2@24064>   CMP.l #MinWordSgnd,D1
00031A42 <AmiBlitz3.ab2@24065>    BCC.w JUMP_bigforerr
00031A48 <AmiBlitz3.ab2@24066>   TST.w dontwrite
00031A4C <AmiBlitz3.ab2@24067>    BNE.w JL_0_DCB4
00031A50 <AmiBlitz3.ab2@24068>   MOVE.w D1,-$2(A0)
00031A52 <AmiBlitz3.ab2@24071>   MOVE.l A1,D1
00031A56 <AmiBlitz3.ab2@24072>   SUB.l $4(A2),D1
00031A58 <AmiBlitz3.ab2@24073>   SUBQ.l #6,D1
00031A5E <AmiBlitz3.ab2@24074>   CMP.l #MinWordSgnd,D1
00031A62 <AmiBlitz3.ab2@24075>    BCC.w JUMP_bigforerr
00031A68 <AmiBlitz3.ab2@24076>   TST.w dontwrite
00031A6C <AmiBlitz3.ab2@24077>    BNE.w JL_0_DCD6
00031A6E <AmiBlitz3.ab2@24078>   NEG.w D1
00031A72 <AmiBlitz3.ab2@24079>   MOVE.w D1,-$2(A1)
00031A78 <AmiBlitz3.ab2@24082>   JSR popnext3
00031A7E <AmiBlitz3.ab2@24083>   MOVEA.l _execbase,A6
00031A80 <AmiBlitz3.ab2@24084>   MOVEA.l A2,A1
00031A82 <AmiBlitz3.ab2@24085>   MOVEQ.l #$00,D0
00031A86 <AmiBlitz3.ab2@24086>   MOVE.b $10(A1),D0
00031A8C <AmiBlitz3.ab2@24087>   MOVE.l mempool2,a0
00031A90 <AmiBlitz3.ab2@24088>   JSR _FreePooled(A6)
00031A96 <AmiBlitz3.ab2@24089> JMP reget
00031A9C <AmiBlitz3.ab2@24092> JMP notallowd
00031AA2 <AmiBlitz3.ab2@24095> JMP bigforerr
00031AA6 <AmiBlitz3.ab2@24102>   MOVE.w #$664F,-(A7)
00031AAA <AmiBlitz3.ab2@24105> BRA.w JL_0_DCF4
00031AB0 <AmiBlitz3.ab2@24108> JMP error_dublicate_for
00031AB4 <AmiBlitz3.ab2@24111> forlineat:   Ds.l 1
00031AB6 <AmiBlitz3.ab2@24112> fortemp:     Ds.w 1
00031ABC <AmiBlitz3.ab2@24119>   CLR.l fp0addr
00031AC2 <AmiBlitz3.ab2@24120>   TST.w dirmode
00031AC6 <AmiBlitz3.ab2@24121>    BNE.w JUMP_baddirerr
00031AD0 <AmiBlitz3.ab2@24122>   MOVE.l linenumat,forlineat
00031AD6 <AmiBlitz3.ab2@24126>   MOVE.l A5,letstart
00031ADA <AmiBlitz3.ab2@24127>   BSR.w getparameter
00031AE0 <AmiBlitz3.ab2@24128>   MOVE.w D2,fortemp
00031AE6 <AmiBlitz3.ab2@24129>   JSR findfor
00031AEA <AmiBlitz3.ab2@24130>    BEQ.w JUMP_error_dublicate_for
00031AF0 <AmiBlitz3.ab2@24131>   LEA firstfor,A2
00031AF6 <AmiBlitz3.ab2@24132>   JSR addhere2
00031AF8 <AmiBlitz3.ab2@24133>   MOVE.l A2,-(A7)
00031AFE <AmiBlitz3.ab2@24134>   TST.b debugmode
00031B02 <AmiBlitz3.ab2@24135>    BEQ.b JL_0_DD4C
00031B08 <AmiBlitz3.ab2@24136>   JSR chkstak
00031B0E <AmiBlitz3.ab2@24137>   MOVE.l AJL_0_DCF0,D1
00031B14 <AmiBlitz3.ab2@24138>   JSR  writelong
00031B18 <AmiBlitz3.ab2@24141>   MOVE.w fortemp(PC),D2
00031B20 <AmiBlitz3.ab2@24142>   MOVE.b #1,formode
00031B24 <AmiBlitz3.ab2@24143>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00031B2A <AmiBlitz3.ab2@24144>   CLR.b formode
00031B2E <AmiBlitz3.ab2@24145>   CMP.w #-$7FE8,D0
00031B32 <AmiBlitz3.ab2@24146>    BNE.w JUMP_syntaxerr
00031B38 <AmiBlitz3.ab2@24147>   MOVE.w commode,D1
00031B3C <AmiBlitz3.ab2@24148>    BNE.w JUMP_syntaxerr
00031B40 <AmiBlitz3.ab2@24149>   CMP.b #$6,D2
00031B44 <AmiBlitz3.ab2@24150>    BCC.w JUMP_badforerr
00031B48 <AmiBlitz3.ab2@24151>   BTST #$F,D2
00031B4C <AmiBlitz3.ab2@24152>    BNE.w JL_0_DD86
00031B52 <AmiBlitz3.ab2@24153>   MOVE.w leaamp,D1
00031B58 <AmiBlitz3.ab2@24154>   JSR pokewda5s
00031B5A <AmiBlitz3.ab2@24155>   MOVE.w D3,D1
00031B60 <AmiBlitz3.ab2@24156>   JSR  writeword
00031B66 <AmiBlitz3.ab2@24159>   MOVE.w pushindex,D1
00031B6C <AmiBlitz3.ab2@24160>   JSR  writeword
00031B70 <AmiBlitz3.ab2@24161>   ANDI.w #$FF,D2
00031B72 <AmiBlitz3.ab2@24163>   MOVEA.l (A7),A1
00031B76 <AmiBlitz3.ab2@24164>   MOVE.w D2,$C(A1)
00031B78 <AmiBlitz3.ab2@24165>   MOVE.w D2,-(A7)
00031B7C <AmiBlitz3.ab2@24166>    BSR.w eval
00031B82 <AmiBlitz3.ab2@24167>    CLR.b onestep
00031B86 <AmiBlitz3.ab2@24168>    CMP.w #$8019,d0
00031B8A <AmiBlitz3.ab2@24169>    BEQ 'l1
00031B92 <AmiBlitz3.ab2@24170>    MOVE.b #1,onestep
00031B94 <AmiBlitz3.ab2@24173>   MOVE.w (A7),D2
00031B9A <AmiBlitz3.ab2@24174>   MOVE.w pushd0l,D1
00031B9E <AmiBlitz3.ab2@24175>   CMP.w #$3,D2
00031BA2 <AmiBlitz3.ab2@24176>    BCC.w JL_0_DDB6
00031BA8 <AmiBlitz3.ab2@24177>   MOVE.w pushd0wd,D1
00031BAA <AmiBlitz3.ab2@24180>    MOVE.w D1,-(A7)
00031BB0 <AmiBlitz3.ab2@24181>    TST.b fpu
00031BB4 <AmiBlitz3.ab2@24182>    BEQ 'old
00031BB8 <AmiBlitz3.ab2@24183>    CMP.b #5,d2
00031BBC <AmiBlitz3.ab2@24184>    BNE 'old
00031BC2 <AmiBlitz3.ab2@24185>    MOVE.l #$f2276400,d1
00031BC8 <AmiBlitz3.ab2@24187>    JSR writelong
00031BCC <AmiBlitz3.ab2@24188> BRA 'weit
00031BD2 <AmiBlitz3.ab2@24191>    JSR  writeword                                          ;fpu for end value
00031BD6 <AmiBlitz3.ab2@24194>   CMP.w #-$7FE7,D0
00031BDA <AmiBlitz3.ab2@24195>    BNE.w JL_0_DDCC
00031BDE <AmiBlitz3.ab2@24196>    BSR.w eval
00031BE4 <AmiBlitz3.ab2@24197>    TST.b fpu
00031BE8 <AmiBlitz3.ab2@24198>    BEQ JL_0_DE0C
00031BEC <AmiBlitz3.ab2@24199>    CMP.b #5,d2
00031BF0 <AmiBlitz3.ab2@24200>    BNE JL_0_DE0C
00031BF6 <AmiBlitz3.ab2@24201>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00031BFC <AmiBlitz3.ab2@24203>   JSR writelong
00031BFE <AmiBlitz3.ab2@24206>    MOVE.w (a7)+,d1
00031C02 <AmiBlitz3.ab2@24207> BRA fpur
00031C06 <AmiBlitz3.ab2@24210>   CMP.w #$4,D2
00031C0A <AmiBlitz3.ab2@24211>    BCC.w JL_0_DDE0
00031C0E <AmiBlitz3.ab2@24212>   MOVE.w #$7001,D1
00031C14 <AmiBlitz3.ab2@24213>   JSR writeword
00031C18 <AmiBlitz3.ab2@24214> BRA.w JL_0_DE0C
00031C1E <AmiBlitz3.ab2@24217> JMP badforerr
00031C22 <AmiBlitz3.ab2@24220>   BNE.w JL_0_DDFA
00031C26 <AmiBlitz3.ab2@24221>   MOVE.w #$7001,D1
00031C2C <AmiBlitz3.ab2@24222>   JSR writeword
00031C32 <AmiBlitz3.ab2@24223>   MOVE.w swapd0,D1
00031C38 <AmiBlitz3.ab2@24224>   JSR writeword
00031C3C <AmiBlitz3.ab2@24225> BRA.w JL_0_DE0C
00031C42 <AmiBlitz3.ab2@24228>   TST.b fpu
00031C46 <AmiBlitz3.ab2@24229>    BEQ 'old
00031C4A <AmiBlitz3.ab2@24230>   CMP.b #5,d2
00031C4E <AmiBlitz3.ab2@24231>    BNE 'old
00031C54 <AmiBlitz3.ab2@24232>   MOVE.l #$f23c5000,d1
00031C5A <AmiBlitz3.ab2@24233>   JSR writelong
00031C5E <AmiBlitz3.ab2@24234>   MOVE.w #$1,d1
00031C64 <AmiBlitz3.ab2@24235>   JSR writeword
00031C6A <AmiBlitz3.ab2@24236>   MOVE.l #$f2276400,d1
00031C70 <AmiBlitz3.ab2@24237>   JSR writelong
00031C72 <AmiBlitz3.ab2@24238>   MOVE.w (a7)+,d1
00031C76 <AmiBlitz3.ab2@24239> BRA fpur
00031C7A <AmiBlitz3.ab2@24242>   MOVE.w #$203C,D1                                         ;write step 1
00031C80 <AmiBlitz3.ab2@24243>   JSR writeword
00031C86 <AmiBlitz3.ab2@24244>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
00031C8C <AmiBlitz3.ab2@24245>   JSR writelong
00031C8E <AmiBlitz3.ab2@24248>   MOVE.w (A7)+,D1
00031C94 <AmiBlitz3.ab2@24249>   JSR writeword                                            ;push step on stack
00031C96 <AmiBlitz3.ab2@24252>   MOVE.w (A7)+,D2
00031C98 <AmiBlitz3.ab2@24253>   MOVEA.l (A7),A1
00031CA0 <AmiBlitz3.ab2@24254>   MOVE.l destpointer,$4(A1)
00031CA6 <AmiBlitz3.ab2@24255>   LEA forcompb,A0
00031CAC <AmiBlitz3.ab2@24256>   LEA forcompbf,A1
00031CB0 <AmiBlitz3.ab2@24257>   CMP.w #$1,D2
00031CB4 <AmiBlitz3.ab2@24258>    BEQ.w JL_0_DE7E
00031CBA <AmiBlitz3.ab2@24259>   LEA forcompw,A0
00031CC0 <AmiBlitz3.ab2@24260>   LEA forcompwf,A1
00031CC4 <AmiBlitz3.ab2@24261>   CMP.w #$2,D2
00031CC8 <AmiBlitz3.ab2@24262>    BEQ.w JL_0_DE7E
00031CCE <AmiBlitz3.ab2@24263>   LEA forcompl,A0
00031CD4 <AmiBlitz3.ab2@24264>   LEA forcomplf,A1
00031CD8 <AmiBlitz3.ab2@24265>   CMP.w #$5,D2
00031CDC <AmiBlitz3.ab2@24266>    BNE.w JL_0_DE7E
00031CE2 <AmiBlitz3.ab2@24267>   TST.b fpu
00031CE6 <AmiBlitz3.ab2@24268>    BEQ 'old
00031CEC <AmiBlitz3.ab2@24269>   LEA fpu_start,a0
00031CF2 <AmiBlitz3.ab2@24270>   LEA fpu_end,a1
00031CF8 <AmiBlitz3.ab2@24271>   JSR pokecode
00031CFC <AmiBlitz3.ab2@24272> BRA fpu3
00031D02 <AmiBlitz3.ab2@24275>   LEA forcompf,A0                                         ;
00031D08 <AmiBlitz3.ab2@24276>   LEA forcompff,A1
00031D0E <AmiBlitz3.ab2@24277>   JSR pokecode
00031D12 <AmiBlitz3.ab2@24278>   MOVE.w #$C900,D1
00031D16 <AmiBlitz3.ab2@24279>   BSR.w Atokejsr
00031D1C <AmiBlitz3.ab2@24280>   LEA forcompf2,A0
00031D22 <AmiBlitz3.ab2@24281>   LEA forcompf2f,A1
00031D28 <AmiBlitz3.ab2@24284>   JSR pokecode
00031D2E <AmiBlitz3.ab2@24285>   TST.b fast                                               ;fast for next
00031D32 <AmiBlitz3.ab2@24286>    BEQ 's1
00031D36 <AmiBlitz3.ab2@24287>   CMP.w #3,d2
00031D3A <AmiBlitz3.ab2@24288>    BNE 's1
00031D40 <AmiBlitz3.ab2@24289>   TST.b onestep
00031D44 <AmiBlitz3.ab2@24290>    BEQ 's1
00031D4E <AmiBlitz3.ab2@24291>   SUB.l #10,destpointer
00031D52 <AmiBlitz3.ab2@24292>   MOVE.w #$b081,d1
00031D58 <AmiBlitz3.ab2@24293>   JSR writeword
00031D5C <AmiBlitz3.ab2@24297>   MOVE.l thebgt(PC),D1
00031D62 <AmiBlitz3.ab2@24298>   JSR writelong
00031D64 <AmiBlitz3.ab2@24301>   MOVEA.l (A7)+,A1
00031D6C <AmiBlitz3.ab2@24302>   MOVE.l destpointer,$8(A1)
00031D72 <AmiBlitz3.ab2@24303> JMP reget
00031D76 <AmiBlitz3.ab2@24306>   MOVEA.l 8(a7),a2
00031D7A <AmiBlitz3.ab2@24307>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00031D80 <AmiBlitz3.ab2@24308>   fmove.s 4(a7),fp1
00031D84 <AmiBlitz3.ab2@24309>   BTST.b #7,(a7)
00031D88 <AmiBlitz3.ab2@24310>   BNE 'negi
00031D8C <AmiBlitz3.ab2@24311>   fcmp.x fp1,fp0
00031D90 <AmiBlitz3.ab2@24312> BRA 'negi2
00031D94 <AmiBlitz3.ab2@24315>   fcmp.x fp0,fp1
00031D98 <AmiBlitz3.ab2@24318>   Dc.l $f2920000                                           ;fbgt.w
00031D9C <AmiBlitz3.ab2@24322>   BGT.w thebgt
00031DA2 <AmiBlitz3.ab2@24325>   MOVE.l A5,letstart
00031DA6 <AmiBlitz3.ab2@24326>   BSR.w getparameter
00031DB0 <AmiBlitz3.ab2@24332>   MOVE.l destpointer,pushpc
00031DBA <AmiBlitz3.ab2@24333>   MOVE.l hunkoffsetbase,pushoff
00031DC0 <AmiBlitz3.ab2@24334>   CLR.l rightsidetype
00031DC8 <AmiBlitz3.ab2@24335>   MOVE.w #$0001,regnum
00031DCE <AmiBlitz3.ab2@24336>   JSR JL_0_8E3C
00031DD4 <AmiBlitz3.ab2@24337>   JSR calcvar
00031DDA <AmiBlitz3.ab2@24338>   TST.b formode
00031DDE <AmiBlitz3.ab2@24339>   BEQ 'lf1
00031DE4 <AmiBlitz3.ab2@24340>   CMP.l #newtype_double,A2
00031DE8 <AmiBlitz3.ab2@24341>   BEQ JUMP_notallowd
00031DEE <AmiBlitz3.ab2@24342>   MOVE.l a2,currtype
00031DF4 <AmiBlitz3.ab2@24345>   CLR.w startoffsetmore
00031DF8 <AmiBlitz3.ab2@24346>   CMP.w #$3d,d0
00031DFC <AmiBlitz3.ab2@24347>   BNE 'l1a
00031E00 <AmiBlitz3.ab2@24348>   BTST #15,d2
00031E04 <AmiBlitz3.ab2@24349>   BEQ 'l1a
00031E08 <AmiBlitz3.ab2@24350>   CMP.b #1,d2
00031E0C <AmiBlitz3.ab2@24351>   BNE 'l1a
00031E16 <AmiBlitz3.ab2@24352>   MOVE.w leaa0a0+2,startoffsetmore
00031E1C <AmiBlitz3.ab2@24355>   CLR.w regnum
00031E20 <AmiBlitz3.ab2@24356>   BSR.w JL_0_B5D2
00031E26 <AmiBlitz3.ab2@24357>   CLR.w commode
00031E2C <AmiBlitz3.ab2@24358>   CLR.w stackcorrect
00031E32 <AmiBlitz3.ab2@24359>   CLR.w pcodd
00031E38 <AmiBlitz3.ab2@24360>   MOVE.w startoffsetmore,d1
00031E3C <AmiBlitz3.ab2@24361>   BTST #0,d1
00031E40 <AmiBlitz3.ab2@24362>   BEQ 'l2a
00031E48 <AmiBlitz3.ab2@24363>   MOVE.w #1,pcodd
00031E4C <AmiBlitz3.ab2@24366>   CMP.w #$3D,D0                                            ;=
00031E50 <AmiBlitz3.ab2@24367>   BEQ.w JL_0_DEE0
00031E52 <AmiBlitz3.ab2@24370>   MOVE.b (a5)+,d1
00031E56 <AmiBlitz3.ab2@24371>   BEQ 'l10
00031E5A <AmiBlitz3.ab2@24372>   CMP.b #":",d1
00031E5E <AmiBlitz3.ab2@24373>   BEQ 'l10
00031E62 <AmiBlitz3.ab2@24374>   CMP.b #";",d1
00031E66 <AmiBlitz3.ab2@24375>   BEQ 'l10
00031E6A <AmiBlitz3.ab2@24376>   CMP.b #"0",d1
00031E6E <AmiBlitz3.ab2@24377>   BLT 'l11
00031E72 <AmiBlitz3.ab2@24378>   CMP.b #"9",d1
00031E76 <AmiBlitz3.ab2@24379>   BGT 'l11
00031E7A <AmiBlitz3.ab2@24380> BRA.s 'l1
00031E82 <AmiBlitz3.ab2@24383>   MOVE.b #1,quickadd
00031E88 <AmiBlitz3.ab2@24386>   MOVEA.l letstart,A5
00031E8A <AmiBlitz3.ab2@24387>   SUBQ.w #1,A5
00031E8E <AmiBlitz3.ab2@24390>   CMP.b #$7,D2
00031E92 <AmiBlitz3.ab2@24391>    BNE.w JL_0_DF8A
00031E96 <AmiBlitz3.ab2@24397>   MOVEM.w D2-D3,-(A7)
00031E9C <AmiBlitz3.ab2@24398>   MOVE.l lastoffset_org,-(A7)
00031EA2 <AmiBlitz3.ab2@24399>   MOVE.w varmode,-(A7)
00031EAC <AmiBlitz3.ab2@24401>    MOVE.l #forthstack,forthsp
00031EB6 <AmiBlitz3.ab2@24402>    MOVE.l #precstack,precsp
00031EBC <AmiBlitz3.ab2@24403>    CLR.w regnum
00031EC2 <AmiBlitz3.ab2@24404>    CLR.w nonew
00031EC8 <AmiBlitz3.ab2@24405>    CLR.w sbasegot
00031ED2 <AmiBlitz3.ab2@24406>    MOVE.w varcodelen,oldvcodelen
00031ED8 <AmiBlitz3.ab2@24407>    CLR.w varcodelen
00031EE0 <AmiBlitz3.ab2@24408>    MOVE.w #$FFFF,lasta6
00031EE2 <AmiBlitz3.ab2@24411>   MOVEQ.l #$07,D2
00031EE6 <AmiBlitz3.ab2@24412>    BSR.w eval
00031EEC <AmiBlitz3.ab2@24413>   MOVE.w (A7)+,varmode
00031EF2 <AmiBlitz3.ab2@24414>   MOVE.l (A7)+,lastoffset_org
00031EF8 <AmiBlitz3.ab2@24415>   MOVE.w moved0a3,D1
00031EFE <AmiBlitz3.ab2@24416>    JSR writeword
00031F04 <AmiBlitz3.ab2@24417>   MOVE.w commode,D1
00031F08 <AmiBlitz3.ab2@24418>    BEQ.w JL_0_DF38
00031F0E <AmiBlitz3.ab2@24419>   LEA pulla2st,A0
00031F14 <AmiBlitz3.ab2@24420>   LEA pulla2stf,A1
00031F1A <AmiBlitz3.ab2@24421>    JSR pokecode
00031F1E <AmiBlitz3.ab2@24422> BRA.w JL_0_DF3C
00031F22 <AmiBlitz3.ab2@24425>   BSR.w JL_0_B63C
00031F26 <AmiBlitz3.ab2@24428>   MOVEM.w (A7)+,D2-D3
00031F2A <AmiBlitz3.ab2@24429>   BTST #$F,D2
00031F2E <AmiBlitz3.ab2@24430>   BNE.w JL_0_DF58
00031F34 <AmiBlitz3.ab2@24431>     MOVE.w D3,leaa5d3a2+2
00031F3A <AmiBlitz3.ab2@24432>     MOVE.l leaa5d3a2,D1
00031F40 <AmiBlitz3.ab2@24433>     JSR pokela5s
00031F44 <AmiBlitz3.ab2@24436>   MOVE.w #$FE6F,D1
00031F4A <AmiBlitz3.ab2@24437>   JSR uselib
00031F50 <AmiBlitz3.ab2@24438>   MOVE.l #$C700,D1
00031F56 <AmiBlitz3.ab2@24439>   MOVE.l d1,lastinstruction
00031F5C <AmiBlitz3.ab2@24440>   MOVE.w varmode,D2
00031F60 <AmiBlitz3.ab2@24441>   BNE.w JL_0_DF70
00031F62 <AmiBlitz3.ab2@24442>     ADDQ.w #1,D1
00031F66 <AmiBlitz3.ab2@24445>   BSR.w Atokejsr
00031F6A <AmiBlitz3.ab2@24446>   CMP.w #$2C,D0
00031F6E <AmiBlitz3.ab2@24447>   BNE.w JL_0_E0C6
00031F74 <AmiBlitz3.ab2@24449>   MOVE.w addq4a2,D1
00031F7A <AmiBlitz3.ab2@24450>   JSR writeword
00031F7E <AmiBlitz3.ab2@24451> BRA.w JL_0_E018
00031F84 <AmiBlitz3.ab2@24454> JMP error4char
00031F8A <AmiBlitz3.ab2@24457> JMP error_convert_types
00031F8E <AmiBlitz3.ab2@24461>    BTST #$E,D2
00031F92 <AmiBlitz3.ab2@24462>    BNE.w JL_0_DF9C
00031F94 <AmiBlitz3.ab2@24463>   TST.b D2
00031F98 <AmiBlitz3.ab2@24464>    BEQ.w JUMP_noleterr
00031F9E <AmiBlitz3.ab2@24465>    TST.b newsyntax
00031FA2 <AmiBlitz3.ab2@24466>    BEQ JL_0_DFA0
00031FA6 <AmiBlitz3.ab2@24469>    CMP.w #$4022,(a5)
00031FAA <AmiBlitz3.ab2@24470>    BNE JL_0_DFA0
00031FB0 <AmiBlitz3.ab2@24471>    CMP.l #3,d2
00031FB4 <AmiBlitz3.ab2@24472>    BNE  JUMP_error_convert_types
00031FB6 <AmiBlitz3.ab2@24473>    ADDQ #2,a5
00031FB8 <AmiBlitz3.ab2@24474>    MOVEQ #0,d0
00031FBA <AmiBlitz3.ab2@24475>    MOVE.b (a5)+,d0
00031FBE <AmiBlitz3.ab2@24476>    BEQ JL_0_DFA0
00031FC2 <AmiBlitz3.ab2@24477>    CMP.b #$22,d0
00031FC6 <AmiBlitz3.ab2@24478>    BNE 'l1
00031FCA <AmiBlitz3.ab2@24479>    MOVE.b #0,d0
00031FCE <AmiBlitz3.ab2@24480> BRA 'do
00031FD0 <AmiBlitz3.ab2@24483>   ASL.l #8,d0
00031FD2 <AmiBlitz3.ab2@24484>    MOVE.b (a5)+,d0
00031FD6 <AmiBlitz3.ab2@24485>    BEQ JL_0_DFA0
00031FDA <AmiBlitz3.ab2@24486>    CMP.b #$22,d0
00031FDE <AmiBlitz3.ab2@24487>    BNE 'l2
00031FE2 <AmiBlitz3.ab2@24488>    MOVE.b #0,d0
00031FE4 <AmiBlitz3.ab2@24489>    ASR.l #8,d0
00031FE8 <AmiBlitz3.ab2@24490> BRA 'do
00031FEA <AmiBlitz3.ab2@24493>   ASL.l #8,d0
00031FEC <AmiBlitz3.ab2@24494>     MOVE.b (a5)+,d0
00031FF0 <AmiBlitz3.ab2@24495>    BEQ JL_0_DFA0
00031FF4 <AmiBlitz3.ab2@24496>    CMP.b #$22,d0
00031FF8 <AmiBlitz3.ab2@24497>    BNE 'l3
00031FFC <AmiBlitz3.ab2@24498>    MOVE.b #0,d0
00031FFE <AmiBlitz3.ab2@24499>    ASR.l #8,d0
00032002 <AmiBlitz3.ab2@24500> BRA 'do
00032004 <AmiBlitz3.ab2@24503>   ASL.l #8,d0
00032006 <AmiBlitz3.ab2@24504>     MOVE.b (a5)+,d0
0003200A <AmiBlitz3.ab2@24505>    BEQ JL_0_DFA0
0003200E <AmiBlitz3.ab2@24506>    CMP.b #$22,d0
00032012 <AmiBlitz3.ab2@24507>    BNE 'l4
00032016 <AmiBlitz3.ab2@24508>    MOVE.b #0,d0
00032018 <AmiBlitz3.ab2@24509>    ASR.l #8,d0
0003201C <AmiBlitz3.ab2@24510> BRA 'do
00032020 <AmiBlitz3.ab2@24513>    CMP.b #$22,(a5)+
00032024 <AmiBlitz3.ab2@24514>    BNE JUMP_error4char
00032028 <AmiBlitz3.ab2@24517>   MOVE.w #$2b7c,d1
0003202E <AmiBlitz3.ab2@24518>    TST.w varmode
00032032 <AmiBlitz3.ab2@24519>    BEQ 'g3
00032036 <AmiBlitz3.ab2@24520>    BCLR #9,d1
0003203C <AmiBlitz3.ab2@24523>     JSR writeword
0003203E <AmiBlitz3.ab2@24524>     MOVE.l d0,d1
00032044 <AmiBlitz3.ab2@24525>     JSR writelong
00032046 <AmiBlitz3.ab2@24526>     MOVE.w d3,d1
0003204C <AmiBlitz3.ab2@24527>     JSR writeword
00032052 <AmiBlitz3.ab2@24528>     JSR get1bytemain
00032054 <AmiBlitz3.ab2@24529> RTS
0003205A <AmiBlitz3.ab2@24535> JMP noleterr
00032060 <AmiBlitz3.ab2@24539>   MOVE.w d2,vartype
00032064 <AmiBlitz3.ab2@24540>   MOVE.b #$3,D2
00032068 <AmiBlitz3.ab2@24543>   CMP.b #5,d2
0003206C <AmiBlitz3.ab2@24544>   BNE 'l1
00032072 <AmiBlitz3.ab2@24545>   MOVE.l a2,currtype
00032076 <AmiBlitz3.ab2@24549>   MOVEM.w D2-D3,-(A7)
0003207C <AmiBlitz3.ab2@24550>   MOVE.w varmode,-(A7)
00032082 <AmiBlitz3.ab2@24551>   MOVE.l a2,leftsidetype
00032086 <AmiBlitz3.ab2@24552>   BTST #$f,d2
0003208A <AmiBlitz3.ab2@24553>   BEQ 'nomultiassign
00032090 <AmiBlitz3.ab2@24554>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00032094 <AmiBlitz3.ab2@24555> 'nomultiassign  ANDI.w #$FF,D2
0003209A <AmiBlitz3.ab2@24556>   MOVE.l lastoffset_org,-(A7)
0003209E <AmiBlitz3.ab2@24557>   BSR.w eval                                ; calc right side of var assign
000320A2 <AmiBlitz3.ab2@24559>   MOVEM.l a0/a1,-(a7)
000320A8 <AmiBlitz3.ab2@24560>   MOVE.l leftsidetype,a0
000320AE <AmiBlitz3.ab2@24561>   CMP.l #0,a0
000320B2 <AmiBlitz3.ab2@24562>   BEQ 'nocheck
000320BA <AmiBlitz3.ab2@24563>   CMP.l #$100,4(a0)
000320BE <AmiBlitz3.ab2@24564>   BLE 'nocheck
000320C4 <AmiBlitz3.ab2@24565>   TST.l typetocast
000320C8 <AmiBlitz3.ab2@24566>   BEQ 'nocast
000320CE <AmiBlitz3.ab2@24567>   MOVE.l typetocast,a1
000320D2 <AmiBlitz3.ab2@24568>   BRA 'typecheck
000320D8 <AmiBlitz3.ab2@24569> 'nocast  TST.l rightsidetype
000320DC <AmiBlitz3.ab2@24570>   BEQ 'nocheck
000320E2 <AmiBlitz3.ab2@24571>   MOVE.l rightsidetype,a1
000320EA <AmiBlitz3.ab2@24572>   CMP.l #$100,4(a1)
000320EE <AmiBlitz3.ab2@24573>   BGE 'typecheck
000320F6 <AmiBlitz3.ab2@24574>   CMP.l #$3,4(a1)
000320FA <AmiBlitz3.ab2@24575>   BEQ 'ok                              ;long assign is allow with this codelines
000320FE <AmiBlitz3.ab2@24576>   BRA 'error
00032104 <AmiBlitz3.ab2@24578>   TST.b typecheck
00032108 <AmiBlitz3.ab2@24579>   BEQ 'nocheck
0003210E <AmiBlitz3.ab2@24580>   TST.b notypecheck
00032112 <AmiBlitz3.ab2@24581>   BNE 'ok
00032114 <AmiBlitz3.ab2@24582>   CMP.l a0,a1
00032118 <AmiBlitz3.ab2@24583>   BEQ 'ok
0003211C <AmiBlitz3.ab2@24585>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00032120 <AmiBlitz3.ab2@24586>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00032124 <AmiBlitz3.ab2@24587>   BEQ 'ok
0003212A <AmiBlitz3.ab2@24589>  JMP   error_convert_types     ;for syntax 4  = typecheck
00032130 <AmiBlitz3.ab2@24592>    CLR.l typetocast
00032134 <AmiBlitz3.ab2@24593>    MOVEM.l (a7)+, a0/a1
0003213A <AmiBlitz3.ab2@24594>   MOVE.l (A7)+,lastoffset_org
00032140 <AmiBlitz3.ab2@24595>   MOVE.w commode,D1
00032144 <AmiBlitz3.ab2@24596>    BNE.w JL_0_DFCC
00032148 <AmiBlitz3.ab2@24597>    BSR.w JL_0_B63C
0003214E <AmiBlitz3.ab2@24600>   MOVE.w (A7)+,varmode
00032152 <AmiBlitz3.ab2@24601>   MOVEM.w (A7)+,D2-D3
00032156 <AmiBlitz3.ab2@24603>   MOVE.w #$2B40,D1
0003215C <AmiBlitz3.ab2@24604>   MOVE.w varmode,D4
00032160 <AmiBlitz3.ab2@24605>    BEQ.w JL_0_DFE8
00032164 <AmiBlitz3.ab2@24606>   BCLR #$9,D1
00032168 <AmiBlitz3.ab2@24609>   BTST #$F,D2
0003216C <AmiBlitz3.ab2@24610>    BEQ.w JL_0_E090
00032172 <AmiBlitz3.ab2@24611>    TST.b stackcorrect
00032176 <AmiBlitz3.ab2@24612>    BNE 'st1
0003217C <AmiBlitz3.ab2@24613>   MOVE.w commode,D1
00032180 <AmiBlitz3.ab2@24614>    BEQ.w JL_0_E004
00032186 <AmiBlitz3.ab2@24617>   MOVE.w pulla2,D1
0003218C <AmiBlitz3.ab2@24618>    JSR writeword
00032190 <AmiBlitz3.ab2@24621>   MOVE.w #$2480,D1
00032194 <AmiBlitz3.ab2@24622>    MOVEM.l a0/d0,-(a7)
0003219A <AmiBlitz3.ab2@24623>    MOVEA.l lastoffset_org,A0
0003219C <AmiBlitz3.ab2@24624>    MOVE.l A0,D0
000321A0 <AmiBlitz3.ab2@24625>    BEQ.w 'skip
000321A2 <AmiBlitz3.ab2@24626>    MOVEA.l D0,A0
000321AA <AmiBlitz3.ab2@24627>    MOVE.l $A(A0),currtype
000321AE <AmiBlitz3.ab2@24630>   MOVEM.l (a7)+,a0/d0
000321B2 <AmiBlitz3.ab2@24631>   CMP.w #$2C,D0
000321B6 <AmiBlitz3.ab2@24632>    BNE.w JL_0_E090
000321BA <AmiBlitz3.ab2@24633>     MOVE.w #$24C0,D1
000321BE <AmiBlitz3.ab2@24634>    BSR.w JL_0_E090                                         ;write store
000321C4 <AmiBlitz3.ab2@24637>    MOVE.l lastoffset_org,D0
000321CC <AmiBlitz3.ab2@24641>   MOVE.w #$FFFF,commode
000321D2 <AmiBlitz3.ab2@24642>   CLR.w varcodelen
000321DA <AmiBlitz3.ab2@24643>   MOVE.b #1,optiarray
000321E0 <AmiBlitz3.ab2@24644>   MOVE.w pusha2,D1
000321E6 <AmiBlitz3.ab2@24645>    JSR writeword
000321EC <AmiBlitz3.ab2@24646>   TST.l lastoffset_org
000321F0 <AmiBlitz3.ab2@24647>   BEQ dimmore
000321F6 <AmiBlitz3.ab2@24648>   MOVEA.l lastoffset_org,A0
000321F8 <AmiBlitz3.ab2@24649>   MOVE.l (A0),D0
000321FC <AmiBlitz3.ab2@24650>    BEQ.w JUMP_comerr
000321FE <AmiBlitz3.ab2@24651>   MOVEA.l D0,A0
00032204 <AmiBlitz3.ab2@24652>   MOVE.l A0,lastoffset_org
0003220A <AmiBlitz3.ab2@24653>   BTST #$1,$7(A0)
0003220E <AmiBlitz3.ab2@24654>    BNE.w JUMP_nocomerr
00032212 <AmiBlitz3.ab2@24655>   MOVEA.l $A(A0),A1
00032216 <AmiBlitz3.ab2@24656>   MOVE.l $4(A1),D2
0003221C <AmiBlitz3.ab2@24659>   BTST #$0,$7(A0)
00032220 <AmiBlitz3.ab2@24660>    BNE.w JL_0_E078
00032226 <AmiBlitz3.ab2@24661>   CMP.l #$100,D2
0003222A <AmiBlitz3.ab2@24662>    BCC.l JUMP_nocomerr
0003222E <AmiBlitz3.ab2@24663> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00032234 <AmiBlitz3.ab2@24666>         CLR.b optiarray
00032238 <AmiBlitz3.ab2@24667>         CMP.w #"@@",(a5)
0003223C <AmiBlitz3.ab2@24668>         BEQ 'n1
00032240 <AmiBlitz3.ab2@24669> BRA 'd1
00032246 <AmiBlitz3.ab2@24672>   JSR nextline
00032248 <AmiBlitz3.ab2@24673>         MOVE.l a5,-(a7)
0003224A <AmiBlitz3.ab2@24676>   MOVE.b (a5)+,d0
0003224E <AmiBlitz3.ab2@24677>         CMP.b #$20,d0
00032252 <AmiBlitz3.ab2@24678>         BEQ 'l2
00032254 <AmiBlitz3.ab2@24679>         MOVE.l (a7)+,a5
00032258 <AmiBlitz3.ab2@24680>         CMP.b #";",d0
0003225C <AmiBlitz3.ab2@24681>         BEQ 'n1
00032262 <AmiBlitz3.ab2@24684>         TST.w debugmode
00032266 <AmiBlitz3.ab2@24685>         BEQ JL_0_DEE0
00032268 <AmiBlitz3.ab2@24686>         MOVE.l a0,-(a7)
0003226E <AmiBlitz3.ab2@24687>         MOVE.l pushat,a0
00032274 <AmiBlitz3.ab2@24688>         CMP.l #0,a0
00032278 <AmiBlitz3.ab2@24689>         BNE 'o1
0003227C <AmiBlitz3.ab2@24690> BRA 'skip
00032284 <AmiBlitz3.ab2@24693>         ADD.l #1,2(a0)
0003228A <AmiBlitz3.ab2@24696>   CLR.w commode
00032292 <AmiBlitz3.ab2@24697>         MOVE.b #1,stackcorrect
00032294 <AmiBlitz3.ab2@24698>         MOVE.l (a7)+,a0
0003229A <AmiBlitz3.ab2@24699> JMP JL_0_DEE0
000322A0 <AmiBlitz3.ab2@24702> JMP nocomerr
000322A6 <AmiBlitz3.ab2@24705>   CMP.l #$100,D2
000322AA <AmiBlitz3.ab2@24706>    BCS.w JL_0_E084
000322AC <AmiBlitz3.ab2@24707>   MOVEQ.l #$00,D2
000322B0 <AmiBlitz3.ab2@24710>   BSET #$E,D2
000322B4 <AmiBlitz3.ab2@24713>   BSET #$F,D2
000322B8 <AmiBlitz3.ab2@24714> BRA.w JL_0_DEE0
000322BE <AmiBlitz3.ab2@24717>    MOVE.l destpointer,a4
000322C6 <AmiBlitz3.ab2@24718>    MOVE.l #$f22a6400,-4(a4)
000322CC <AmiBlitz3.ab2@24719>    MOVE.w arrayoffset,d1
000322D2 <AmiBlitz3.ab2@24720> JMP writeword
000322D8 <AmiBlitz3.ab2@24723> JMP comerr
000322DE <AmiBlitz3.ab2@24726>    TST.b fpu
000322E2 <AmiBlitz3.ab2@24727>    BEQ 'nofloat
000322E6 <AmiBlitz3.ab2@24728>    CMP.b #5,d2
000322EA <AmiBlitz3.ab2@24729>    BNE 'nofloat
000322F0 <AmiBlitz3.ab2@24730>    CLR.w fp0var
000322F6 <AmiBlitz3.ab2@24731>    LEA regtable,a4
000322F8 <AmiBlitz3.ab2@24732>    TST.l (a4)
000322FC <AmiBlitz3.ab2@24733>    BEQ 'noreg
00032300 <AmiBlitz3.ab2@24734>    BTST #15,d2                                             ;regvars
00032304 <AmiBlitz3.ab2@24735>    BNE 'noreg
00032308 <AmiBlitz3.ab2@24736>    CMP.w 0+4(a4),d3
0003230C <AmiBlitz3.ab2@24737>    BNE 'doreg1
00032312 <AmiBlitz3.ab2@24738>    MOVE.l #$f2000380,d1
00032318 <AmiBlitz3.ab2@24739>    MOVE.w regnum,d0
0003231C <AmiBlitz3.ab2@24740>    BNE 'noopt
00032322 <AmiBlitz3.ab2@24746>    MOVE.l destpointer,a4
0003232A <AmiBlitz3.ab2@24747>    CMP.l #$f2001c80,-8(a4)
0003232E <AmiBlitz3.ab2@24748>    BNE 'noopt
00032336 <AmiBlitz3.ab2@24749>    CMP.l #$f2000422,-4(a4)
0003233A <AmiBlitz3.ab2@24750>    BNE 'noopt
00032340 <AmiBlitz3.ab2@24751>    MOVE.l #$f20003a2,d1
0003234A <AmiBlitz3.ab2@24752>    SUB.l #8,destpointer
0003234C <AmiBlitz3.ab2@24755>    ASL.w #7,d0
0003234E <AmiBlitz3.ab2@24756>    OR.w d0,d1
00032354 <AmiBlitz3.ab2@24757>    JSR writelong
00032356 <AmiBlitz3.ab2@24758> RTS
0003235A <AmiBlitz3.ab2@24761>   CMP.w 8+4(a4),d3
0003235E <AmiBlitz3.ab2@24762>    BNE 'doreg2
00032364 <AmiBlitz3.ab2@24763>    MOVE.l #$f2000300,d1
0003236A <AmiBlitz3.ab2@24764>    MOVE.w regnum,d0
0003236C <AmiBlitz3.ab2@24765>    ASL.w #7,d0
0003236E <AmiBlitz3.ab2@24766>    OR.w d0,d1
00032374 <AmiBlitz3.ab2@24767>    JSR writelong
00032376 <AmiBlitz3.ab2@24768> RTS
0003237A <AmiBlitz3.ab2@24771>   CMP.w 16+4(a4),d3
0003237E <AmiBlitz3.ab2@24772>    BNE 'doreg3
00032384 <AmiBlitz3.ab2@24773>    MOVE.l #$f2000280,d1
0003238A <AmiBlitz3.ab2@24774>    MOVE.w regnum,d0
0003238C <AmiBlitz3.ab2@24775>    ASL.w #7,d0
0003238E <AmiBlitz3.ab2@24776>    OR.w d0,d1
00032394 <AmiBlitz3.ab2@24777>    JSR  writelong
00032396 <AmiBlitz3.ab2@24778>  RTS
0003239A <AmiBlitz3.ab2@24781>   CMP.w 24+4(a4),d3
0003239E <AmiBlitz3.ab2@24782>    BNE 'doreg4
000323A4 <AmiBlitz3.ab2@24783>    MOVE.l #$f2000200,d1
000323AA <AmiBlitz3.ab2@24784>    MOVE.w regnum,d0
000323AC <AmiBlitz3.ab2@24785>    ASL.w #7,d0
000323AE <AmiBlitz3.ab2@24786>    OR.w d0,d1
000323B4 <AmiBlitz3.ab2@24787>    JSR writelong
000323B6 <AmiBlitz3.ab2@24788> RTS
000323BA <AmiBlitz3.ab2@24791>   CMP.w 32+4(a4),d3
000323BE <AmiBlitz3.ab2@24792>    BNE 'noreg
000323C4 <AmiBlitz3.ab2@24793>    MOVE.l #$f2000180,d1
000323CA <AmiBlitz3.ab2@24794>    MOVE.w regnum,d0
000323CC <AmiBlitz3.ab2@24795>    ASL.w #7,d0
000323CE <AmiBlitz3.ab2@24796>    OR.w d0,d1
000323D4 <AmiBlitz3.ab2@24797>    JSR writelong
000323D6 <AmiBlitz3.ab2@24798> RTS
000323DC <AmiBlitz3.ab2@24801>    TST.w regnum
000323E0 <AmiBlitz3.ab2@24802>    BNE 'nofp0
000323E6 <AmiBlitz3.ab2@24803>    MOVE.l destpointer ,a4
000323EE <AmiBlitz3.ab2@24804>    CMP.l #$f2304400,-6(a4)
000323F2 <AmiBlitz3.ab2@24805>    BNE 'do
000323F8 <AmiBlitz3.ab2@24806>    CMP.w #$1990,-2(a4)
000323FC <AmiBlitz3.ab2@24807>    BNE 'do
00032400 <AmiBlitz3.ab2@24808>    BTST #15,d2                                             ;types ?
00032404 <AmiBlitz3.ab2@24809>    BNE 'do
0003240A <AmiBlitz3.ab2@24810>   MOVE.l #$2b701990,d1                                     ;var
00032410 <AmiBlitz3.ab2@24811>   TST.w varmode
00032414 <AmiBlitz3.ab2@24812>   BEQ 'glob1
00032418 <AmiBlitz3.ab2@24813>   BCLR #25,d1
0003241C <AmiBlitz3.ab2@24816>   MOVE.l d1,-6(a4)
00032420 <AmiBlitz3.ab2@24817>   MOVE.w d3,-2(a4)
00032426 <AmiBlitz3.ab2@24818>   CLR.w fp0var
0003242E <AmiBlitz3.ab2@24819>   MOVE.w #$ffff,fp0mode
00032430 <AmiBlitz3.ab2@24820> RTS
00032438 <AmiBlitz3.ab2@24823>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003243C <AmiBlitz3.ab2@24824>    BNE 'do3
00032446 <AmiBlitz3.ab2@24825>    CMP.l #newtype_double,currtype
0003244A <AmiBlitz3.ab2@24826>    BEQ 'do4
0003244E <AmiBlitz3.ab2@24829>   MOVE.w #$2b6d,d1
00032454 <AmiBlitz3.ab2@24830>    TST.w varmode
00032458 <AmiBlitz3.ab2@24831>    BEQ 'g2
0003245C <AmiBlitz3.ab2@24832>     BCLR #9,d1
00032460 <AmiBlitz3.ab2@24835>     CMP.w #$2b6d,d1
00032464 <AmiBlitz3.ab2@24836>     BNE 'd1
00032468 <AmiBlitz3.ab2@24837>     CMP.w -2(a4),d3
0003246C <AmiBlitz3.ab2@24838>     BNE 'd1
00032472 <AmiBlitz3.ab2@24839>     SUBQ.l #6,destpointer
00032476 <AmiBlitz3.ab2@24840> BRA 'd12
0003247A <AmiBlitz3.ab2@24843>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00032480 <AmiBlitz3.ab2@24844>     MOVE.w -2(a4),-4(a4)
00032484 <AmiBlitz3.ab2@24845>     MOVE.w d3,-2(a4)
0003248A <AmiBlitz3.ab2@24848>   CLR.w fp0var
00032492 <AmiBlitz3.ab2@24849>     MOVE.w #$ffff,fp0mode
00032494 <AmiBlitz3.ab2@24850> RTS
0003249C <AmiBlitz3.ab2@24853>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
000324A0 <AmiBlitz3.ab2@24854>    BNE 'do4
000324A4 <AmiBlitz3.ab2@24855>    MOVE.w #$2b6c,d1
000324AA <AmiBlitz3.ab2@24856>       TST.w varmode
000324AE <AmiBlitz3.ab2@24857>    BEQ 'g3
000324B2 <AmiBlitz3.ab2@24858>    BCLR #9,d1
000324B6 <AmiBlitz3.ab2@24861>   MOVE.w d1,-6(a4)
000324BC <AmiBlitz3.ab2@24862>     MOVE.w -2(a4),-4(a4)
000324C0 <AmiBlitz3.ab2@24863>     MOVE.w d3,-2(a4)
000324C6 <AmiBlitz3.ab2@24864>     CLR.w fp0var
000324CE <AmiBlitz3.ab2@24865>     MOVE.w #$ffff,fp0mode
000324D0 <AmiBlitz3.ab2@24866> RTS
000324D6 <AmiBlitz3.ab2@24869>   MOVE.w d3,fp0var
000324E0 <AmiBlitz3.ab2@24870>    MOVE.w varmode,fp0mode
000324E2 <AmiBlitz3.ab2@24871>    ADDQ.l #6,a4
000324E8 <AmiBlitz3.ab2@24872>    MOVE.l a4,fp0addr
000324F2 <AmiBlitz3.ab2@24873>    MOVE.l firstiff,fp0iff
000324F6 <AmiBlitz3.ab2@24876>   MOVEM.l d0/d4,-(a7)
000324F8 <AmiBlitz3.ab2@24877>    MOVEQ #0,d0
000324FE <AmiBlitz3.ab2@24878>     MOVE.w regnum,d0
00032500 <AmiBlitz3.ab2@24879>    ASL.w #7,d0                                             ;fpu store var
00032504 <AmiBlitz3.ab2@24880>   BTST #15,d2
00032508 <AmiBlitz3.ab2@24881>    BEQ 'var
0003250A <AmiBlitz3.ab2@24882>    MOVE.w d1,d4
0003250E <AmiBlitz3.ab2@24883>    CMP.w #$24c0,d4
00032512 <AmiBlitz3.ab2@24884>    BNE 'nopl
00032518 <AmiBlitz3.ab2@24885>    MOVE.l #$f21a6400,d1
0003251A <AmiBlitz3.ab2@24886>    MOVEQ #0,d3
0003251E <AmiBlitz3.ab2@24887> BRA 'glob
00032524 <AmiBlitz3.ab2@24891>   MOVE.l #$f2126400,d1
00032526 <AmiBlitz3.ab2@24892>    TST.w d3                                                ;offset =0
0003252A <AmiBlitz3.ab2@24893>    BNE 'offset
00032530 <AmiBlitz3.ab2@24894>    MOVE.l #$f2126400,d1
00032532 <AmiBlitz3.ab2@24902>    MOVEQ #0,d3
00032536 <AmiBlitz3.ab2@24903> BRA 'glob
0003253C <AmiBlitz3.ab2@24906>   MOVE.l #$f22d6400,d1                                     ;var
00032542 <AmiBlitz3.ab2@24907>   TST.w varmode
00032546 <AmiBlitz3.ab2@24908>   BEQ 'glob
0003254A <AmiBlitz3.ab2@24909>   BCLR #16,d1
0003254C <AmiBlitz3.ab2@24910>  'glob OR.l d0,d1
00032556 <AmiBlitz3.ab2@24913>   CMP.l #newtype_double,currtype
0003255A <AmiBlitz3.ab2@24914>   BNE 'dbl1
00032560 <AmiBlitz3.ab2@24915>   OR.l #$00001000,d1
00032566 <AmiBlitz3.ab2@24918>   JSR writelong
0003256C <AmiBlitz3.ab2@24919>   CLR.l currtype
00032570 <AmiBlitz3.ab2@24920>   MOVEM.l (a7)+,d0/d4
00032572 <AmiBlitz3.ab2@24921>   MOVE.l d3,d1
00032576 <AmiBlitz3.ab2@24922>   BEQ 'nooffs
0003257C <AmiBlitz3.ab2@24923> JMP writeword
0003257E <AmiBlitz3.ab2@24926> RTS
00032584 <AmiBlitz3.ab2@24940>     TST.b fast                                             ;write lea->xx(a2)
00032588 <AmiBlitz3.ab2@24941>    BEQ 'la10
0003258E <AmiBlitz3.ab2@24945>    TST.b quickadd
00032594 <AmiBlitz3.ab2@24947>      CLR.b quickadd
00032598 <AmiBlitz3.ab2@24948>    CMP.w #$2480,d1
0003259C <AmiBlitz3.ab2@24949>    BNE 'la10
000325A2 <AmiBlitz3.ab2@24950>    TST.b optiarray
000325A6 <AmiBlitz3.ab2@24951>    BNE 'la10
000325AC <AmiBlitz3.ab2@24952>    MOVE.l destpointer,a4
000325B2 <AmiBlitz3.ab2@24953>    CMP.w #$45ea,-4(a4)
000325B6 <AmiBlitz3.ab2@24954>    BNE 'la10
000325BE <AmiBlitz3.ab2@24955>    CMP.w #8,pushclen
000325C2 <AmiBlitz3.ab2@24956>    BEQ 'la100
000325CA <AmiBlitz3.ab2@24957>    CMP.w #6,pushclen
000325CE <AmiBlitz3.ab2@24958>    BNE 'la10
000325D2 <AmiBlitz3.ab2@24959>    CMP.b #3,d2
000325D6 <AmiBlitz3.ab2@24960>    BCS 'la110
000325DC <AmiBlitz3.ab2@24962>    MOVE.w #$2540,-2(a4)
000325E2 <AmiBlitz3.ab2@24963>    MOVE.w arrayoffset,d1
000325E8 <AmiBlitz3.ab2@24964> JMP writeword
000325EE <AmiBlitz3.ab2@24967>    CLR.b quickadd
000325F0 <AmiBlitz3.ab2@24968> RTS
000325F4 <AmiBlitz3.ab2@24971>    CMP.b #2,d2
000325F8 <AmiBlitz3.ab2@24972>    BNE 'la120
000325FE <AmiBlitz3.ab2@24973>     MOVE.w #$3540,-2(a4)
00032604 <AmiBlitz3.ab2@24974>    MOVE.w arrayoffset,d1
0003260A <AmiBlitz3.ab2@24975> JMP writeword
0003260E <AmiBlitz3.ab2@24978>   CMP.b #1,d2
00032612 <AmiBlitz3.ab2@24979>    BNE.s 'la10
00032618 <AmiBlitz3.ab2@24980>     MOVE.w #$1540,-2(a4)
0003261E <AmiBlitz3.ab2@24981>    MOVE.w arrayoffset,d1
00032624 <AmiBlitz3.ab2@24982> JMP writeword
00032628 <AmiBlitz3.ab2@24985>    CMP.b #3,d2
0003262C <AmiBlitz3.ab2@24986>    BCS 'la11
00032632 <AmiBlitz3.ab2@24987>    MOVE.w #$2540,-4(a4)
00032634 <AmiBlitz3.ab2@24988> RTS
00032638 <AmiBlitz3.ab2@24991>    CMP.b #2,d2
0003263C <AmiBlitz3.ab2@24992>    BNE 'la12
00032642 <AmiBlitz3.ab2@24993>     MOVE.w #$3540,-4(a4)
00032644 <AmiBlitz3.ab2@24994> RTS
00032648 <AmiBlitz3.ab2@24996>  'la12 CMP.b #1,d2
0003264C <AmiBlitz3.ab2@24997>    BNE.s 'la10
00032652 <AmiBlitz3.ab2@24998>     MOVE.w #$1540,-4(a4)
00032654 <AmiBlitz3.ab2@24999> RTS
0003265A <AmiBlitz3.ab2@25002>   CLR.b optiarray
0003265E <AmiBlitz3.ab2@25003>    CMP.b #$1,D2
00032662 <AmiBlitz3.ab2@25004>    BEQ.w JL_0_E0AC
00032666 <AmiBlitz3.ab2@25005>    BSR.w varalign
0003266A <AmiBlitz3.ab2@25006>    CMP.b #$3,D2
0003266E <AmiBlitz3.ab2@25007>    BCC.w writevarlong
00032674 <AmiBlitz3.ab2@25008>    TST.b fast                                              ;optiimmi
00032678 <AmiBlitz3.ab2@25009>    BEQ 'l10b
0003267E <AmiBlitz3.ab2@25014>    MOVE.l destpointer,a0
00032684 <AmiBlitz3.ab2@25015>    SUB.l imm_addr,a0
0003268A <AmiBlitz3.ab2@25016>    CMP.l #4,a0
0003268E <AmiBlitz3.ab2@25017>    BNE 'l10
00032694 <AmiBlitz3.ab2@25018>    CLR.l imm_addr
0003269A <AmiBlitz3.ab2@25019>    MOVE.l destpointer,a4
0003269E <AmiBlitz3.ab2@25020>    OR.w #$107c,d1
000326A2 <AmiBlitz3.ab2@25021>    MOVE.w d1,-4(a4)
000326A4 <AmiBlitz3.ab2@25022>     MOVE.w D3,D1
000326AA <AmiBlitz3.ab2@25023> JMP writeword
000326B0 <AmiBlitz3.ab2@25026>   MOVE.l destpointer,a0
000326B6 <AmiBlitz3.ab2@25027>   SUB.l load_var_addr,a0
000326BC <AmiBlitz3.ab2@25028>   CMP.l #4,a0
000326C0 <AmiBlitz3.ab2@25029>   BNE 'l10b
000326C6 <AmiBlitz3.ab2@25030>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
000326CA <AmiBlitz3.ab2@25031>   BNE 'l10b
000326D0 <AmiBlitz3.ab2@25033>   CLR.l load_var_addr
000326D6 <AmiBlitz3.ab2@25034>   MOVE.l destpointer,a4
000326DA <AmiBlitz3.ab2@25035>   OR.w #$102d,d1
000326DE <AmiBlitz3.ab2@25036>   MOVE.w d1,-4(a4)
000326E0 <AmiBlitz3.ab2@25037>   MOVE.w d3,d1
000326E6 <AmiBlitz3.ab2@25038> JMP writeword
000326EA <AmiBlitz3.ab2@25041>   ORI.w #$1000,D1                                          ;word
000326EE <AmiBlitz3.ab2@25042> BRA.w writestorevar
000326F4 <AmiBlitz3.ab2@25046>    TST.b fast                                              ;optiimmi
000326F8 <AmiBlitz3.ab2@25047>    BEQ 'l10b
000326FE <AmiBlitz3.ab2@25052>    MOVE.l destpointer,a0
00032704 <AmiBlitz3.ab2@25053>    SUB.l imm_addr,a0
0003270A <AmiBlitz3.ab2@25054>    CMP.l #4,a0
0003270E <AmiBlitz3.ab2@25055>    BNE 'l10
00032714 <AmiBlitz3.ab2@25056>    CLR.l imm_addr
0003271A <AmiBlitz3.ab2@25057>    MOVE.l destpointer,a4
0003271E <AmiBlitz3.ab2@25058>    OR.w #$7c,d1
00032722 <AmiBlitz3.ab2@25059>    EORI #$3000,d1
00032726 <AmiBlitz3.ab2@25060>    MOVE.w d1,-4(a4)
00032728 <AmiBlitz3.ab2@25061>       MOVE.w D3,D1
0003272E <AmiBlitz3.ab2@25062> JMP writeword
00032734 <AmiBlitz3.ab2@25065>   MOVE.l destpointer,a0
0003273A <AmiBlitz3.ab2@25066>   SUB.l load_var_addr,a0
00032740 <AmiBlitz3.ab2@25067>   CMP.l #4,a0
00032744 <AmiBlitz3.ab2@25068>   BNE 'l10b
0003274A <AmiBlitz3.ab2@25069>   CLR.l load_var_addr
00032750 <AmiBlitz3.ab2@25070>   MOVE.l destpointer,a4
00032756 <AmiBlitz3.ab2@25071>    CMP.w #$1b6d,-4(a4)
0003275A <AmiBlitz3.ab2@25072>    BNE 'l10b
0003275E <AmiBlitz3.ab2@25073>    OR.w #$2d,d1
00032762 <AmiBlitz3.ab2@25074>    EORI #$3000,d1
00032766 <AmiBlitz3.ab2@25075>    MOVE.w d1,-4(a4)
00032768 <AmiBlitz3.ab2@25076>   MOVE.w d3,d1
0003276E <AmiBlitz3.ab2@25077> JMP writeword
00032774 <AmiBlitz3.ab2@25080>   ADDQ.w #1,pcodd                                          ;byte
00032778 <AmiBlitz3.ab2@25081>   EORI.w #$3000,D1
0003277E <AmiBlitz3.ab2@25084>   JSR writeword
00032782 <AmiBlitz3.ab2@25085>   BTST #$7,D1
00032786 <AmiBlitz3.ab2@25086>    BNE JL_0_E0C6
00032788 <AmiBlitz3.ab2@25087>   MOVE.w D3,D1
0003278E <AmiBlitz3.ab2@25088> JMP writeword
00032794 <AmiBlitz3.ab2@25091>    TST.b fast                                              ;optiimmi
00032798 <AmiBlitz3.ab2@25092>    BEQ 'l10b
0003279E <AmiBlitz3.ab2@25096>    MOVE.l destpointer,a0
000327A4 <AmiBlitz3.ab2@25097>    SUB.l imm_addr,a0
000327AA <AmiBlitz3.ab2@25098>    CMP.l #6,a0
000327AE <AmiBlitz3.ab2@25099>    BNE 'l10
000327B4 <AmiBlitz3.ab2@25100>    CLR.l imm_addr
000327BA <AmiBlitz3.ab2@25101>    MOVE.l destpointer,a4
000327BE <AmiBlitz3.ab2@25102>    OR.w #$7c,d1
000327C2 <AmiBlitz3.ab2@25103>    MOVE.w d1,-6(a4)
000327C4 <AmiBlitz3.ab2@25104>     MOVE.w D3,D1
000327CA <AmiBlitz3.ab2@25105> JMP writeword
000327D0 <AmiBlitz3.ab2@25108>   MOVE.l destpointer,a0
000327D6 <AmiBlitz3.ab2@25109>   SUB.l load_var_addr,a0
000327DC <AmiBlitz3.ab2@25110>   CMP.l #4,a0
000327E0 <AmiBlitz3.ab2@25111>   BNE 'l10b
000327E6 <AmiBlitz3.ab2@25112>   CLR.l load_var_addr
000327EC <AmiBlitz3.ab2@25113>   MOVE.l destpointer,a4
000327F2 <AmiBlitz3.ab2@25114>   CMP.w #$245f,-2(a4)
000327F6 <AmiBlitz3.ab2@25115>   BEQ 'l10b
000327FA <AmiBlitz3.ab2@25116>   OR.w #$28,d1
000327FE <AmiBlitz3.ab2@25117>   OR.w d1,-4(a4)
00032804 <AmiBlitz3.ab2@25118>   CMP.w #$2b6d,-4(a4)
00032808 <AmiBlitz3.ab2@25119>   BNE 'd1
0003280C <AmiBlitz3.ab2@25120>   CMP.w -2(a4),d3
00032810 <AmiBlitz3.ab2@25121>   BNE 'd1
00032816 <AmiBlitz3.ab2@25122>   SUBQ.l #4,destpointer
00032818 <AmiBlitz3.ab2@25123> RTS
0003281A <AmiBlitz3.ab2@25126>   MOVE.w d3,d1
00032820 <AmiBlitz3.ab2@25127> JMP writeword
00032826 <AmiBlitz3.ab2@25130>   JSR writeword
0003282A <AmiBlitz3.ab2@25131>   BTST #$7,D1
0003282E <AmiBlitz3.ab2@25132>    BNE.b JL_0_E0C6
00032830 <AmiBlitz3.ab2@25133>   MOVE.w D3,D1
00032836 <AmiBlitz3.ab2@25134> JMP writeword
00032838 <AmiBlitz3.ab2@25137> RTS
0003283A <AmiBlitz3.ab2@25141>   MOVE.w D1,-(A7)
0003283E <AmiBlitz3.ab2@25142>   MOVE.w pcodd(PC),D1
00032840 <AmiBlitz3.ab2@25143>   LSR.w #1,D1
00032844 <AmiBlitz3.ab2@25144>    BCC.b JL_0_E0E2
0003284A <AmiBlitz3.ab2@25145>   CLR.w pcodd
00032850 <AmiBlitz3.ab2@25146>   MOVE.w add1a2,D1
00032856 <AmiBlitz3.ab2@25147>    JSR writeword
00032858 <AmiBlitz3.ab2@25150>   MOVE.w (A7)+,D1
0003285A <AmiBlitz3.ab2@25151> RTS
0003285C <AmiBlitz3.ab2@25155> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
0003285E <AmiBlitz3.ab2@25158> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00032860 <AmiBlitz3.ab2@25159> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00032862 <AmiBlitz3.ab2@25160> listsize:  Ds.w 1
00032868 <AmiBlitz3.ab2@25164>   ADDQ.w #1,regnum
00032870 <AmiBlitz3.ab2@25165>   MOVE.b #1,nowdeclare
00032876 <AmiBlitz3.ab2@25166>   CLR.b dimkeep
0003287E <AmiBlitz3.ab2@25167>    CMP.l #"KEEP",-1(a5)
00032882 <AmiBlitz3.ab2@25168>   BNE 'nokeep
00032888 <AmiBlitz3.ab2@25169>   CMP.b #" ",3(a5)
0003288C <AmiBlitz3.ab2@25170>   BNE 'nokeep
0003288E <AmiBlitz3.ab2@25171>   ADDQ.l #3,a5
00032892 <AmiBlitz3.ab2@25174>     CMP.b #" ",(a5)
00032896 <AmiBlitz3.ab2@25175>     BNE '1
00032898 <AmiBlitz3.ab2@25176>    ADDQ #1,a5
0003289C <AmiBlitz3.ab2@25177> BRA '2
000328A2 <AmiBlitz3.ab2@25180>   MOVE.l a5,lastsourcepos
000328AA <AmiBlitz3.ab2@25181>   MOVE.b #1,dimkeep
000328AE <AmiBlitz3.ab2@25189>   MOVE.w #$FF9A,D1
000328B4 <AmiBlitz3.ab2@25190>   JSR uselib
000328BA <AmiBlitz3.ab2@25193>   CLR.w listadd
000328BE <AmiBlitz3.ab2@25194>   CMP.w #-$7F4D,D0
000328C2 <AmiBlitz3.ab2@25195>    BNE.w JL_0_E11E
000328CA <AmiBlitz3.ab2@25196>   MOVE.w #$0008,listadd
000328CE <AmiBlitz3.ab2@25197>   MOVE.w #$FFFA,D1
000328D4 <AmiBlitz3.ab2@25198>    JSR uselib
000328DA <AmiBlitz3.ab2@25199>    JSR get1bytemain
000328E0 <AmiBlitz3.ab2@25202>   CLR.w nonew
000328E6 <AmiBlitz3.ab2@25203>    JSR getparameter
000328EE <AmiBlitz3.ab2@25204>   BTST #$1,flagmask+1
000328F2 <AmiBlitz3.ab2@25205>    BEQ.w JUMP_syntaxerr
000328F8 <AmiBlitz3.ab2@25206>    JSR JL_0_8E3C
000328FE <AmiBlitz3.ab2@25207>   MOVE.w notshared,D1
00032902 <AmiBlitz3.ab2@25208>    BNE.w JL_0_E198
0003290A <AmiBlitz3.ab2@25209>   MOVE.w $8(A3),temp1
00032910 <AmiBlitz3.ab2@25210>   MOVE.w proceduremode,D2
00032914 <AmiBlitz3.ab2@25211>    BNE.w JL_0_E176
0003291A <AmiBlitz3.ab2@25212>   MOVE.w globalvarpointer,-(A7)
00032922 <AmiBlitz3.ab2@25213>   MOVE.w $4(A3),globalvarpointer
00032928 <AmiBlitz3.ab2@25214>   ADDQ.w #4,globalvarpointer
0003292C <AmiBlitz3.ab2@25215>    BSR.w write_dim_code
00032932 <AmiBlitz3.ab2@25216>   MOVE.w (A7)+,globalvarpointer
00032936 <AmiBlitz3.ab2@25217> BRA.w JL_0_E1BA
0003293C <AmiBlitz3.ab2@25228>   MOVE.w globalvarpointer,-(A7)
00032942 <AmiBlitz3.ab2@25229>             MOVE.w proceduremode,-(a7)
00032948 <AmiBlitz3.ab2@25230>             CLR.w proceduremode
00032950 <AmiBlitz3.ab2@25231>   MOVE.w $4(A3),globalvarpointer
00032956 <AmiBlitz3.ab2@25232>   ADDQ.w #4,globalvarpointer
0003295A <AmiBlitz3.ab2@25233>    BSR.w write_dim_code
00032960 <AmiBlitz3.ab2@25234>    MOVE.w (a7)+,proceduremode
00032966 <AmiBlitz3.ab2@25235>   MOVE.w (A7)+,globalvarpointer
0003296A <AmiBlitz3.ab2@25236> BRA.w JL_0_E1BA
00032972 <AmiBlitz3.ab2@25239>   MOVE.w #$FFFF,temp1
00032976 <AmiBlitz3.ab2@25240>   MOVE.w listadd(PC),D1
0003297A <AmiBlitz3.ab2@25241>    BEQ.w JL_0_E1B6
00032982 <AmiBlitz3.ab2@25242>   MOVE.w #$4000,temp1
00032988 <AmiBlitz3.ab2@25243>   BSET #$0,$6(A3)
0003298E <AmiBlitz3.ab2@25246>         TST.w proceduremode
00032992 <AmiBlitz3.ab2@25247>        BNE 'l1
00032998 <AmiBlitz3.ab2@25248>        MOVE.w locvaroff,-(a7)
0003299C <AmiBlitz3.ab2@25251>   BSR.w write_dim_code
000329A2 <AmiBlitz3.ab2@25252>         TST.w proceduremode
000329A6 <AmiBlitz3.ab2@25253>         BNE JL_0_E1BA
000329AC <AmiBlitz3.ab2@25254>        MOVE.w (A7)+,locvaroff
000329B2 <AmiBlitz3.ab2@25257>   JSR get1bytemain
000329B6 <AmiBlitz3.ab2@25258>   CMP.w #$2C,D0
000329BA <AmiBlitz3.ab2@25259>    BNE.w JL_0_E1CE
000329C0 <AmiBlitz3.ab2@25260>    JSR get1bytemain
000329C4 <AmiBlitz3.ab2@25261> BRA.w JL_0_E0FC
000329C6 <AmiBlitz3.ab2@25264> RTS
000329CE <AmiBlitz3.ab2@25267>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
000329D4 <AmiBlitz3.ab2@25268>   MOVE.w beginarr,D1
000329DA <AmiBlitz3.ab2@25269>    JSR writeword
000329DC <AmiBlitz3.ab2@25270>   MOVEQ.l #$00,D1
000329E2 <AmiBlitz3.ab2@25271>    JSR writeword
000329E4 <AmiBlitz3.ab2@25272>   MOVEQ.l #$04,D1
000329EC <AmiBlitz3.ab2@25273>   BTST #$0,flagmask+1
000329F0 <AmiBlitz3.ab2@25274>    BNE.w write_dim_code__pointer
000329F4 <AmiBlitz3.ab2@25275>   MOVE.w $8(A2),D1
000329F8 <AmiBlitz3.ab2@25278>   ADD.w listadd(PC),D1                                     ;size of one element.
000329FE <AmiBlitz3.ab2@25279>   MOVE.w D1,listsize
00032A04 <AmiBlitz3.ab2@25280>    JSR writeword
00032A0A <AmiBlitz3.ab2@25281>   CLR.w temp2                                              ;# dim's got
00032A0C <AmiBlitz3.ab2@25282>   MOVE.l A3,-(A7)
00032A12 <AmiBlitz3.ab2@25285>   ADDQ.w #1,temp2
00032A14 <AmiBlitz3.ab2@25286>   MOVEQ.l #$03,D2                                          ;get word
00032A1A <AmiBlitz3.ab2@25287>   MOVE.w notshared,-(a7)
00032A20 <AmiBlitz3.ab2@25288>    JSR eval
00032A26 <AmiBlitz3.ab2@25289>   MOVE.w (a7)+,notshared
00032A2C <AmiBlitz3.ab2@25290>   TST.b debugmode
00032A30 <AmiBlitz3.ab2@25291>    BEQ.w write_dim_code__norerr0
00032A34 <AmiBlitz3.ab2@25292>   MOVE.w #$C30F,D1
00032A38 <AmiBlitz3.ab2@25298>       MOVE.w #$5281,d1
00032A3E <AmiBlitz3.ab2@25299>       JSR writeword
00032A44 <AmiBlitz3.ab2@25300>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00032A4A <AmiBlitz3.ab2@25301>       JSR writelong
00032A50 <AmiBlitz3.ab2@25302>   MOVE.w proceduremode,D2
00032A54 <AmiBlitz3.ab2@25303>    BEQ.w write_dim_code__global
00032A5A <AmiBlitz3.ab2@25304>   SUBQ.w #4,locvaroff
00032A64 <AmiBlitz3.ab2@25305>   MOVE.w locvaroff,putarr+2
00032A68 <AmiBlitz3.ab2@25306> BRA.w write_dim_code__doit
00032A6E <AmiBlitz3.ab2@25309> JMP syntaxerr
00032A78 <AmiBlitz3.ab2@25312>   MOVE.w globalvarpointer,putarr+2
00032A7E <AmiBlitz3.ab2@25313>   ADDQ.w #4,globalvarpointer
00032A84 <AmiBlitz3.ab2@25316>   TST.b dimkeep
00032A88 <AmiBlitz3.ab2@25317>            BEQ write_dim_code__doit_l1
00032A8A <AmiBlitz3.ab2@25318>       MOVEQ #0,d1
00032A90 <AmiBlitz3.ab2@25319>       MOVE.w putarr+2,d1
00032A96 <AmiBlitz3.ab2@25320>       OR.l  #$222d0000,d1
00032A9C <AmiBlitz3.ab2@25321>       MOVE.w proceduremode,D2
00032AA0 <AmiBlitz3.ab2@25322>       BEQ write_dim_code__doit_l2
00032AA6 <AmiBlitz3.ab2@25323>       TST.w notshared
00032AAA <AmiBlitz3.ab2@25324>       BEQ write_dim_code__doit_l2
00032AB0 <AmiBlitz3.ab2@25325>       SUB.l #$00010000,d1
00032AB6 <AmiBlitz3.ab2@25328>   JSR writelong
00032ABC <AmiBlitz3.ab2@25331>   MOVE.l putarr,D1
00032AC2 <AmiBlitz3.ab2@25332>       TST.w notshared
00032AC6 <AmiBlitz3.ab2@25333>       BNE write_dim_code__doit_l1a
00032ACC <AmiBlitz3.ab2@25334>       JSR writelong
00032AD0 <AmiBlitz3.ab2@25335> BRA write_dim_code__doit_l4
00032AD6 <AmiBlitz3.ab2@25338>   JSR pokela5d
00032ADA <AmiBlitz3.ab2@25341>   CMP.w #$2C,D0
00032ADE <AmiBlitz3.ab2@25342>    BEQ.w write_dim_code__loop
00032AE2 <AmiBlitz3.ab2@25343>   CMP.w #$29,D0
00032AE6 <AmiBlitz3.ab2@25344>    BNE.w JUMP_syntaxerr
00032AE8 <AmiBlitz3.ab2@25345>   MOVEA.l (A7)+,A3
00032AEE <AmiBlitz3.ab2@25346>   MOVE.w temp1,D1
00032AF2 <AmiBlitz3.ab2@25347>    BMI.w write_dim_code__nocare
00032AF6 <AmiBlitz3.ab2@25351>   BTST #$E,D1
00032AFA <AmiBlitz3.ab2@25352>    BEQ.w write_dim_code__notl
00032B02 <AmiBlitz3.ab2@25353>   CMPI.w #$1,temp2
00032B06 <AmiBlitz3.ab2@25354>    BNE.w JUMP_redimerr
00032B0A <AmiBlitz3.ab2@25355> BRA.w write_dim_code__nocare
00032B10 <AmiBlitz3.ab2@25358> JMP redimerr
00032B16 <AmiBlitz3.ab2@25361>   CMP.w temp2,D1
00032B1A <AmiBlitz3.ab2@25362>    BNE.w JUMP_redimerr                                      ;range too long
00032B20 <AmiBlitz3.ab2@25365>   LEA globalvarpointer,A0
00032B26 <AmiBlitz3.ab2@25366>   MOVE.w proceduremode,D1
00032B2A <AmiBlitz3.ab2@25367>   BEQ.w write_dim_code__gskip
00032B30 <AmiBlitz3.ab2@25368>   LEA locvaroff,A0
00032B36 <AmiBlitz3.ab2@25371>   MOVE.W  extraword,(A0)
00032B3A <AmiBlitz3.ab2@25372>   BRA.W   write_dim_code__care
00032B42 <AmiBlitz3.ab2@25375>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00032B48 <AmiBlitz3.ab2@25378>   LEA doarr,A0
00032B4E <AmiBlitz3.ab2@25379>   MOVE.w $4(A3),$2(A0)
00032B56 <AmiBlitz3.ab2@25380>   MOVE.w putarr+2,$6(A0)
00032B58 <AmiBlitz3.ab2@25381>   MOVE.l (A0)+,D1
00032B5E <AmiBlitz3.ab2@25382>    JSR writelong
00032B60 <AmiBlitz3.ab2@25383>   MOVE.l (A0),D1
00032B66 <AmiBlitz3.ab2@25384>    JSR writelong
00032B6C <AmiBlitz3.ab2@25385>    TST.b dimkeep
00032B70 <AmiBlitz3.ab2@25386>   BNE write_dim_code__care_l3
00032B74 <AmiBlitz3.ab2@25389>   MOVE.w #$C400,D1
00032B78 <AmiBlitz3.ab2@25390> BRA write_dim_code__care_l2
00032B7C <AmiBlitz3.ab2@25393>   MOVE.w #$C405,d1
00032B82 <AmiBlitz3.ab2@25396>   MOVE.w proceduremode,D2
00032B86 <AmiBlitz3.ab2@25397>    BEQ.w write_dim_code__isg
00032B8C <AmiBlitz3.ab2@25398>    TST.w notshared
00032B90 <AmiBlitz3.ab2@25399>    BEQ write_dim_code__isg
00032B92 <AmiBlitz3.ab2@25400>   ADDQ.w #1,D1
00032B96 <AmiBlitz3.ab2@25403>   MOVE.w listadd(PC),D2
00032B9A <AmiBlitz3.ab2@25404>    BEQ.w write_dim_code__isrg
00032B9C <AmiBlitz3.ab2@25405>   MOVE.w D1,-(A7)
00032BA0 <AmiBlitz3.ab2@25406>   MOVE.w setles(PC),D1
00032BA6 <AmiBlitz3.ab2@25407>    JSR writeword
00032BAA <AmiBlitz3.ab2@25408>   MOVE.w listsize(PC),D1
00032BB0 <AmiBlitz3.ab2@25409>    JSR writeword
00032BB2 <AmiBlitz3.ab2@25410>   MOVE.w (A7)+,D1
00032BB4 <AmiBlitz3.ab2@25411>   ADDQ.w #3,D1
00032BB8 <AmiBlitz3.ab2@25414> BRA.w Atokejsr
00032BBE <AmiBlitz3.ab2@25421>     MOVE.l #$f23c4400,d1
00032BC4 <AmiBlitz3.ab2@25423>   MOVE.w regnum,d0
00032BC6 <AmiBlitz3.ab2@25424>   ASL.w #7,d0
00032BC8 <AmiBlitz3.ab2@25425>   OR.w d0,d1
00032BCE <AmiBlitz3.ab2@25426>   JSR writelong
00032BD4 <AmiBlitz3.ab2@25432>     MOVE.l #$40490fd9,d1
00032BDA <AmiBlitz3.ab2@25434>   JSR writelong
00032BE0 <AmiBlitz3.ab2@25435> JMP get1bytemain
00032BE4 <AmiBlitz3.ab2@25439> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00032BE8 <AmiBlitz3.ab2@25446> vbr:                Ds.l 1
00032BEA <AmiBlitz3.ab2@25447> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00032BF0 <AmiBlitz3.ab2@25449> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00032BF4 <AmiBlitz3.ab2@25453> constpcat:          Ds.l 1
00032BF8 <AmiBlitz3.ab2@25454> constlibat:         Ds.l 1
00032BFC <AmiBlitz3.ab2@25455> constmaxpc:         Dc.l $400
00032C00 <AmiBlitz3.ab2@25457> stacksize:          Dc.l 32768                           ;stackfuck org source
00032C04 <AmiBlitz3.ab2@25458> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00032C08 <AmiBlitz3.ab2@25459> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00032C0C <AmiBlitz3.ab2@25460> lastrestype:        Dc.l newtype_string
00032C0E <AmiBlitz3.ab2@25461> rescnt:             Ds.w 1                               ;# resident
00032C10 <AmiBlitz3.ab2@25462> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00032C14 <AmiBlitz3.ab2@25463> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00032C16 <AmiBlitz3.ab2@25464> linedone:           Ds.w 1
00032C2C <AmiBlitz3.ab2@25465> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00032C30 <AmiBlitz3.ab2@25474>   Dc.l 0                                        ; bytetobyte
00032C34 <AmiBlitz3.ab2@25475>   Dc.l convert_byte_to_word                     ; bytetoword
00032C38 <AmiBlitz3.ab2@25476>   Dc.l convert_byte_to_long                     ; bytetolong
00032C3C <AmiBlitz3.ab2@25477>   Dc.l convert_byte_to_quick                    ; bytetoquick
00032C40 <AmiBlitz3.ab2@25478>   Dc.l convert_byte_to_float                    ; bytetofloat
00032C44 <AmiBlitz3.ab2@25479>   Dc.l convert_byte_to_long                     ; bytetolong
00032C48 <AmiBlitz3.ab2@25480>   Dc.l error_convert_types                      ; noconerr
00032C4C <AmiBlitz3.ab2@25483>   Dc.l convert_word_to_byte                     ; wordtobyte
00032C50 <AmiBlitz3.ab2@25484>   Dc.l 0                                        ; wordtoword
00032C54 <AmiBlitz3.ab2@25485>   Dc.l convert_word_to_long                     ; wordtolong
00032C58 <AmiBlitz3.ab2@25486>   Dc.l convert_word_to_quick                    ; wordtoquick
00032C5C <AmiBlitz3.ab2@25487>   Dc.l convert_word_to_float                    ; wordtofloat
00032C60 <AmiBlitz3.ab2@25488>   Dc.l convert_word_to_long                     ; wordtolong
00032C64 <AmiBlitz3.ab2@25489>   Dc.l error_convert_types                      ; noconerr
00032C68 <AmiBlitz3.ab2@25492>   Dc.l convert_long_to_byte                     ; longtobyte
00032C6C <AmiBlitz3.ab2@25493>   Dc.l convert_long_to_word                     ; longtoword
00032C70 <AmiBlitz3.ab2@25494>   Dc.l 0                                        ; longtolong
00032C74 <AmiBlitz3.ab2@25495>   Dc.l convert_long_to_quick                    ; longtoquick
00032C78 <AmiBlitz3.ab2@25496>   Dc.l convert_long_to_float                    ; longtofloat
00032C7C <AmiBlitz3.ab2@25497>   Dc.l 0                                        ; longtolong
00032C80 <AmiBlitz3.ab2@25498>   Dc.l error_convert_types                      ; noconerr
00032C84 <AmiBlitz3.ab2@25501>   Dc.l convert_quick_to_byte                    ; quicktobyte
00032C88 <AmiBlitz3.ab2@25502>   Dc.l convert_quick_to_word                    ; quicktoword
00032C8C <AmiBlitz3.ab2@25503>   Dc.l convert_quick_to_long                    ; quicktolong
00032C90 <AmiBlitz3.ab2@25504>   Dc.l 0                                        ; quicktoquick
00032C94 <AmiBlitz3.ab2@25505>   Dc.l convert_quick_to_float                   ; quicktofloat
00032C98 <AmiBlitz3.ab2@25506>   Dc.l convert_quick_to_long                    ; quicktolong
00032C9C <AmiBlitz3.ab2@25507>   Dc.l error_convert_types                      ; noconerr
00032CA0 <AmiBlitz3.ab2@25510>   Dc.l convert_float_to_byte                    ; floattobyte
00032CA4 <AmiBlitz3.ab2@25511>   Dc.l convert_float_to_word                    ; floattoword
00032CA8 <AmiBlitz3.ab2@25512>   Dc.l convert_float_to_long                    ; floattolong
00032CAC <AmiBlitz3.ab2@25513>   Dc.l convert_float_to_quick                   ; floattoquick
00032CB0 <AmiBlitz3.ab2@25514>   Dc.l 0                                        ; floattofloat
00032CB4 <AmiBlitz3.ab2@25515>   Dc.l convert_float_to_long                    ; floattolong
00032CB8 <AmiBlitz3.ab2@25516>   Dc.l error_convert_types                      ; noconerr
00032CBC <AmiBlitz3.ab2@25519>   Dc.l convert_long_to_byte                     ; longtobyte
00032CC0 <AmiBlitz3.ab2@25520>   Dc.l convert_long_to_word                     ; longtoword
00032CC4 <AmiBlitz3.ab2@25521>   Dc.l 0                                        ; longtolong
00032CC8 <AmiBlitz3.ab2@25522>   Dc.l convert_long_to_quick                    ; longtoquick
00032CCC <AmiBlitz3.ab2@25523>   Dc.l convert_long_to_float                    ; longtofloat
00032CD0 <AmiBlitz3.ab2@25524>   Dc.l 0                                        ; longtolong
00032CD4 <AmiBlitz3.ab2@25525>   Dc.l error_convert_types                      ; noconerr
00032CD8 <AmiBlitz3.ab2@25528>   Dc.l error_convert_types                      ; noconerr
00032CDC <AmiBlitz3.ab2@25529>   Dc.l error_convert_types                      ; noconerr
00032CE0 <AmiBlitz3.ab2@25530>   Dc.l string_to_long                           ; stringtolong
00032CE4 <AmiBlitz3.ab2@25531>   Dc.l error_convert_types                      ; noconerr
00032CE8 <AmiBlitz3.ab2@25532>   Dc.l error_convert_types                      ; noconerr
00032CEC <AmiBlitz3.ab2@25533>   Dc.l string_to_long                           ; stringtolong
00032CF0 <AmiBlitz3.ab2@25534>   Ds.l 1
00032CF2 <AmiBlitz3.ab2@25540>   Dc.b $00,$2B                                  ;+ ; add
00032CF6 <AmiBlitz3.ab2@25541>   Dc.l do_plus_byte                             ;doplusb
00032CFA <AmiBlitz3.ab2@25542>   Dc.l do_plus_word                             ;doplusw
00032CFE <AmiBlitz3.ab2@25543>   Dc.l do_plus_long                             ;doplusl
00032D02 <AmiBlitz3.ab2@25544>   Dc.l do_plus_long                             ;doplusl
00032D06 <AmiBlitz3.ab2@25545>   Dc.l do_plus_float                            ;doplusf
00032D0A <AmiBlitz3.ab2@25546>   Ds.l 1
00032D0E <AmiBlitz3.ab2@25547>   Dc.l add_strings                              ;addstrings
00032D10 <AmiBlitz3.ab2@25548>   Dc.b $0B,$B8
00032D12 <AmiBlitz3.ab2@25550>   Dc.b $00,$2D                                  ;- ; sub
00032D16 <AmiBlitz3.ab2@25551>   Dc.l do_minus_byte                            ;dominusb
00032D1A <AmiBlitz3.ab2@25552>   Dc.l do_minus_word                            ;dominusw
00032D1E <AmiBlitz3.ab2@25553>   Dc.l do_minus_long                            ;dominusl
00032D22 <AmiBlitz3.ab2@25554>   Dc.l do_minus_long                            ;dominusl
00032D26 <AmiBlitz3.ab2@25555>   Dc.l do_minus_float                           ;dominusf
00032D2E <AmiBlitz3.ab2@25556>   Ds.l 2
00032D30 <AmiBlitz3.ab2@25557>   Dc.b $0B,$B8
00032D32 <AmiBlitz3.ab2@25559>   Dc.b $00,$2A                                  ;* ; mul
00032D36 <AmiBlitz3.ab2@25560>   Dc.l do_times_byte                            ;dotimesb
00032D3A <AmiBlitz3.ab2@25561>   Dc.l do_times_word                            ;dotimesw
00032D3E <AmiBlitz3.ab2@25562>   Dc.l do_times_long                            ;dotimesl
00032D42 <AmiBlitz3.ab2@25563>   Dc.l do_times_quick                           ;dotimesq
00032D46 <AmiBlitz3.ab2@25564>   Dc.l do_times_float                           ;dotimesf
00032D4E <AmiBlitz3.ab2@25565>   Ds.l 2
00032D50 <AmiBlitz3.ab2@25566>   Dc.b $0F,$A0
00032D52 <AmiBlitz3.ab2@25568>   Dc.b $00,$2F                                  ;/ ; div
00032D56 <AmiBlitz3.ab2@25569>   Dc.l do_Div_byte                              ;dodivb
00032D5A <AmiBlitz3.ab2@25570>   Dc.l do_Div_word                              ;dodivb
00032D5E <AmiBlitz3.ab2@25571>   Dc.l do_Div_long                              ;dodivl
00032D62 <AmiBlitz3.ab2@25572>   Dc.l do_Div_quick                             ;dodivq
00032D66 <AmiBlitz3.ab2@25573>   Dc.l do_Div_float                             ;dodivf
00032D6E <AmiBlitz3.ab2@25574>   Ds.l 2
00032D70 <AmiBlitz3.ab2@25575>   Dc.b $0F,$A0
00032D72 <AmiBlitz3.ab2@25577>   Dc.b $00,$26                                  ;& ; & int
00032D76 <AmiBlitz3.ab2@25578>   Dc.l do_AND_byte                              ;doandb
00032D7A <AmiBlitz3.ab2@25579>   Dc.l do_AND_word                              ;doandw
00032D7E <AmiBlitz3.ab2@25580>   Dc.l do_AND_long                              ;doandl
00032D82 <AmiBlitz3.ab2@25581>   Dc.l do_AND_long                              ;doandl
00032D8E <AmiBlitz3.ab2@25582>   Ds.l 3
00032D90 <AmiBlitz3.ab2@25583>   Dc.b $13,$88
00032D92 <AmiBlitz3.ab2@25585>   Dc.b $00,$7C                                  ;| ;or int ;
00032D96 <AmiBlitz3.ab2@25586>   Dc.l do_OR_byte                               ;doorb
00032D9A <AmiBlitz3.ab2@25587>   Dc.l do_OR_word                               ;doorw
00032D9E <AmiBlitz3.ab2@25588>   Dc.l do_OR_long                               ;doorl
00032DA2 <AmiBlitz3.ab2@25589>   Dc.l do_OR_long                               ;doorl
00032DAE <AmiBlitz3.ab2@25590>   Ds.l 3
00032DB0 <AmiBlitz3.ab2@25591>   Dc.b $13,$88
00032DB2 <AmiBlitz3.ab2@25593>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00032DB6 <AmiBlitz3.ab2@25594>   Dc.l do_AND_byte                              ;doandb
00032DBA <AmiBlitz3.ab2@25595>   Dc.l do_AND_word                              ;doandw
00032DBE <AmiBlitz3.ab2@25596>   Dc.l do_AND_long                              ;doandl
00032DC2 <AmiBlitz3.ab2@25597>   Dc.l do_AND_long                              ;doandl
00032DCE <AmiBlitz3.ab2@25598>   Ds.l 3
00032DD0 <AmiBlitz3.ab2@25599>   Dc.b $03,$E8
00032DD2 <AmiBlitz3.ab2@25601>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00032DD6 <AmiBlitz3.ab2@25602>   Dc.l do_OR_byte                               ;doorb
00032DDA <AmiBlitz3.ab2@25603>   Dc.l do_OR_word                               ;doorw
00032DDE <AmiBlitz3.ab2@25604>   Dc.l do_OR_long                               ;doorl
00032DE2 <AmiBlitz3.ab2@25605>   Dc.l do_OR_long                               ;doorl
00032DEE <AmiBlitz3.ab2@25606>   Ds.l 3
00032DF0 <AmiBlitz3.ab2@25607>   Dc.b $03,$E8
00032DF2 <AmiBlitz3.ab2@25609>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00032DF6 <AmiBlitz3.ab2@25610>   Dc.l do_EOR_byte                              ;doeorb
00032DFA <AmiBlitz3.ab2@25611>   Dc.l do_EOR_word                              ;doeorw
00032DFE <AmiBlitz3.ab2@25612>   Dc.l do_EOR_long                              ;doeorl
00032E02 <AmiBlitz3.ab2@25613>   Dc.l do_EOR_long                              ;doeorl
00032E0E <AmiBlitz3.ab2@25614>   Ds.l 3
00032E10 <AmiBlitz3.ab2@25615>   Dc.b $03,$E8
00032E12 <AmiBlitz3.ab2@25617>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00032E16 <AmiBlitz3.ab2@25618>   Dc.l do_LSL                                   ;dolslb
00032E1A <AmiBlitz3.ab2@25619>   Dc.l do_LSL                                   ;dolslw
00032E1E <AmiBlitz3.ab2@25620>   Dc.l do_LSL                                   ;dolsll
00032E22 <AmiBlitz3.ab2@25621>   Dc.l do_LSL                                   ;dolsll
00032E2E <AmiBlitz3.ab2@25622>   Ds.l 3
00032E30 <AmiBlitz3.ab2@25623>   Dc.b $17,$70
00032E32 <AmiBlitz3.ab2@25625>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00032E36 <AmiBlitz3.ab2@25626>   Dc.l do_LSL                                   ;dolslb
00032E3A <AmiBlitz3.ab2@25627>   Dc.l do_LSL                                   ;dolslw
00032E3E <AmiBlitz3.ab2@25628>   Dc.l do_LSL                                   ;dolsll
00032E42 <AmiBlitz3.ab2@25629>   Dc.l do_LSL                                   ;dolsll
00032E4E <AmiBlitz3.ab2@25630>   Ds.l 3
00032E50 <AmiBlitz3.ab2@25631>   Dc.b $17,$70
00032E52 <AmiBlitz3.ab2@25633>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00032E56 <AmiBlitz3.ab2@25634>   Dc.l do_LSR                                   ;dolsrb
00032E5A <AmiBlitz3.ab2@25635>   Dc.l do_LSR                                   ;dolsrw
00032E5E <AmiBlitz3.ab2@25636>   Dc.l do_LSR                                   ;dolsrl
00032E62 <AmiBlitz3.ab2@25637>   Dc.l do_LSR                                   ;dolsrl
00032E6E <AmiBlitz3.ab2@25638>   Ds.l 3
00032E70 <AmiBlitz3.ab2@25639>   Dc.b $17,$70
00032E72 <AmiBlitz3.ab2@25641>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00032E76 <AmiBlitz3.ab2@25642>   Dc.l do_ASR                                   ;doasrb
00032E7A <AmiBlitz3.ab2@25643>   Dc.l do_ASR                                   ;doasrw
00032E7E <AmiBlitz3.ab2@25644>   Dc.l do_ASR                                   ;doasrl
00032E82 <AmiBlitz3.ab2@25645>   Dc.l do_ASR                                   ;doasrl
00032E8E <AmiBlitz3.ab2@25646>   Ds.l 3
00032E90 <AmiBlitz3.ab2@25647>   Dc.b $17,$70
00032E92 <AmiBlitz3.ab2@25649>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00032E96 <AmiBlitz3.ab2@25650>   Dc.l do_mod_byte                              ;domodb
00032E9A <AmiBlitz3.ab2@25651>   Dc.l do_mod_word                              ;domodw
00032E9E <AmiBlitz3.ab2@25652>   Dc.l do_mod_long                              ;domodl
00032EA2 <AmiBlitz3.ab2@25653>   Dc.l do_mod_quick                             ;domodq
00032EA6 <AmiBlitz3.ab2@25654>   Dc.l do_mod_float                             ;domodf
00032EAE <AmiBlitz3.ab2@25655>   Ds.l 2
00032EB0 <AmiBlitz3.ab2@25656>   Dc.b $13,$88
00032EB2 <AmiBlitz3.ab2@25659>   Dc.b $00,$5E                                  ;^
00032EB6 <AmiBlitz3.ab2@25660>   Dc.l do_pow                                   ;dopow
00032EBA <AmiBlitz3.ab2@25661>   Dc.l do_pow                                   ;dopow
00032EBE <AmiBlitz3.ab2@25662>   Dc.l do_pow                                   ;dopow
00032EC2 <AmiBlitz3.ab2@25663>   Dc.l do_pow                                   ;dopow
00032EC6 <AmiBlitz3.ab2@25664>   Dc.l do_pow                                   ;dopow
00032ECE <AmiBlitz3.ab2@25665>   Ds.l 2
00032ED0 <AmiBlitz3.ab2@25666>   Dc.b $1B,$58                                  ;7000
00032ED2 <AmiBlitz3.ab2@25669>   Dc.b $00,$3D                                  ;=
00032ED6 <AmiBlitz3.ab2@25670>   Dc.l do_equal_byte                            ;doeqb
00032EDA <AmiBlitz3.ab2@25671>   Dc.l do_equal_word                            ;doeqw
00032EDE <AmiBlitz3.ab2@25672>   Dc.l do_equal_long                            ;doeql
00032EE2 <AmiBlitz3.ab2@25673>   Dc.l do_equal_long                            ;doeql
00032EE6 <AmiBlitz3.ab2@25674>   Dc.l do_equal_float                           ;doeqf
00032EEA <AmiBlitz3.ab2@25675>   Dc.l do_equal_long                            ;doeql
00032EEE <AmiBlitz3.ab2@25676>   Dc.l do_equal_string                          ;doeqs
00032EF0 <AmiBlitz3.ab2@25677>   Dc.b $07,$D0                                  ;2000
00032EF2 <AmiBlitz3.ab2@25680>   Dc.b $3C,$3E                                  ;<>
00032EF6 <AmiBlitz3.ab2@25681>   Dc.l do_not_equal_byte                        ;doneb
00032EFA <AmiBlitz3.ab2@25682>   Dc.l do_not_equal_word                        ;donew
00032EFE <AmiBlitz3.ab2@25683>   Dc.l do_not_equal_long                        ;donel
00032F02 <AmiBlitz3.ab2@25684>   Dc.l do_not_equal_long                        ;donel
00032F06 <AmiBlitz3.ab2@25685>   Dc.l do_not_equal_float                       ;donef
00032F0A <AmiBlitz3.ab2@25686>   Dc.l do_not_equal_long                        ;donel
00032F0E <AmiBlitz3.ab2@25687>   Dc.l do_not_equal_string                      ;dones
00032F10 <AmiBlitz3.ab2@25688>   Dc.b $07,$D0                                  ;2000
00032F12 <AmiBlitz3.ab2@25691>   Dc.b $00,$3C                                  ;<
00032F16 <AmiBlitz3.ab2@25692>   Dc.l do_littler_byte                          ;doltb
00032F1A <AmiBlitz3.ab2@25693>   Dc.l do_littler_word                          ;doltw
00032F1E <AmiBlitz3.ab2@25694>   Dc.l do_littler_long                          ;doltl
00032F22 <AmiBlitz3.ab2@25695>   Dc.l do_littler_long                          ;doltl
00032F26 <AmiBlitz3.ab2@25696>   Dc.l do_littler_float                         ;doltf
00032F2A <AmiBlitz3.ab2@25697>   Dc.l do_littler_long                          ;doltl
00032F2E <AmiBlitz3.ab2@25698>   Dc.l do_littler_string                        ;dolts
00032F30 <AmiBlitz3.ab2@25699>   Dc.b $07,$D0                                  ;2000
00032F32 <AmiBlitz3.ab2@25702>   Dc.b $3C,$3D                                  ;<=
00032F36 <AmiBlitz3.ab2@25703>   Dc.l do_littler_equal_byte                    ;doleb
00032F3A <AmiBlitz3.ab2@25704>   Dc.l do_littler_equal_word                    ;doleb
00032F3E <AmiBlitz3.ab2@25705>   Dc.l do_littler_equal_long                    ;dolel
00032F42 <AmiBlitz3.ab2@25706>   Dc.l do_littler_equal_long                    ;dolel
00032F46 <AmiBlitz3.ab2@25707>   Dc.l do_littler_equal_float                   ;dolef
00032F4A <AmiBlitz3.ab2@25708>   Dc.l do_littler_equal_long                    ;dolel
00032F4E <AmiBlitz3.ab2@25709>   Dc.l do_littler_equal_string                  ;doles
00032F50 <AmiBlitz3.ab2@25710>   Dc.b $07,$D0                                  ;2000
00032F52 <AmiBlitz3.ab2@25713>   Dc.b $00,$3E                                  ;>
00032F56 <AmiBlitz3.ab2@25714>   Dc.l do_greater_byte                          ;dogtb
00032F5A <AmiBlitz3.ab2@25715>   Dc.l do_greater_word                          ;dogtw
00032F5E <AmiBlitz3.ab2@25716>   Dc.l do_greater_long                          ;dogtl
00032F62 <AmiBlitz3.ab2@25717>   Dc.l do_greater_long                          ;dogtl
00032F66 <AmiBlitz3.ab2@25718>   Dc.l do_greater_float                         ;dogtf
00032F6A <AmiBlitz3.ab2@25719>   Dc.l do_greater_long                          ;dogtl
00032F6E <AmiBlitz3.ab2@25720>   Dc.l do_greater_string                        ;dogts
00032F70 <AmiBlitz3.ab2@25721>   Dc.b $07,$D0                                  ;2000
00032F72 <AmiBlitz3.ab2@25724>   Dc.b $3E,$3D                                  ;>=
00032F76 <AmiBlitz3.ab2@25725>   Dc.l do_greater_equal_byte                    ;dogeb
00032F7A <AmiBlitz3.ab2@25726>   Dc.l do_greater_equal_word                    ;dogew
00032F7E <AmiBlitz3.ab2@25727>   Dc.l do_greater_equal_long                    ;dogel
00032F82 <AmiBlitz3.ab2@25728>   Dc.l do_greater_equal_long                    ;dogel
00032F86 <AmiBlitz3.ab2@25729>   Dc.l do_greater_equal_float                   ;dogef
00032F8A <AmiBlitz3.ab2@25730>   Dc.l do_greater_equal_long                    ;dogel
00032F8E <AmiBlitz3.ab2@25731>   Dc.l do_greater_equal_string                  ;doges
00032F90 <AmiBlitz3.ab2@25732>   Dc.b $07,$D0                                  ;2000
00032F92 <AmiBlitz3.ab2@25734>   Dc.b $80,$CD                                  ;$8000+26+tnum
00032F96 <AmiBlitz3.ab2@25735>   Dc.l _BitTst
00032F9A <AmiBlitz3.ab2@25736>   Dc.l _BitTst
00032F9E <AmiBlitz3.ab2@25737>   Dc.l _BitTst
00032FA2 <AmiBlitz3.ab2@25738>   Dc.l _BitTst
00032FAE <AmiBlitz3.ab2@25739>   Ds.l 3
00032FB0 <AmiBlitz3.ab2@25740>   Dc.b $1F,$40                                  ;8000
00032FB2 <AmiBlitz3.ab2@25742>   Dc.b $80,$CE                                  ;$8000+27+tnum
00032FB6 <AmiBlitz3.ab2@25743>   Dc.l _BitSet
00032FBA <AmiBlitz3.ab2@25744>   Dc.l _BitSet
00032FBE <AmiBlitz3.ab2@25745>   Dc.l _BitSet
00032FC2 <AmiBlitz3.ab2@25746>   Dc.l _BitSet
00032FCE <AmiBlitz3.ab2@25747>   Ds.l 3
00032FD0 <AmiBlitz3.ab2@25748>   Dc.b $1F,$40                                  ;8000
00032FD2 <AmiBlitz3.ab2@25750>   Dc.b $80,$CF                                  ;$8000+28+tnum
00032FD6 <AmiBlitz3.ab2@25751>   Dc.l _BitClr
00032FDA <AmiBlitz3.ab2@25752>   Dc.l _BitClr
00032FDE <AmiBlitz3.ab2@25753>   Dc.l _BitClr
00032FE2 <AmiBlitz3.ab2@25754>   Dc.l _BitClr
00032FEE <AmiBlitz3.ab2@25755>   Ds.l 3
00032FF0 <AmiBlitz3.ab2@25756>   Dc.b $1F,$40                                  ;8000
00032FF2 <AmiBlitz3.ab2@25758>   Dc.b $80,$D0                                  ;$8000+29+tnum
00032FF6 <AmiBlitz3.ab2@25759>   Dc.l _BitChg
00032FFA <AmiBlitz3.ab2@25760>   Dc.l _BitChg
00032FFE <AmiBlitz3.ab2@25761>   Dc.l _BitChg
00033002 <AmiBlitz3.ab2@25762>   Dc.l _BitChg
0003300E <AmiBlitz3.ab2@25763>   Ds.l 3
00033010 <AmiBlitz3.ab2@25764>   Dc.b $1F,$40                                  ;8000
00033012 <AmiBlitz3.ab2@25766>   Dc.b $00,$00
00033016 <AmiBlitz3.ab2@25771> modetable:   Dc.l typemode
0003301A <AmiBlitz3.ab2@25774> newtypebase: Dc.l newtype_byte
00033022 <AmiBlitz3.ab2@25777>   Dc.l newtype_word,$01                                    
00033024 <AmiBlitz3.ab2@25778>   Dc.w $0001
00033028 <AmiBlitz3.ab2@25779>   Dc.b 13,"b",0,0
00033030 <AmiBlitz3.ab2@25782>   Dc.l newtype_long,$02
00033032 <AmiBlitz3.ab2@25783>   Dc.w $0002
00033036 <AmiBlitz3.ab2@25784>   Dc.b 13,"w",0,0
0003303E <AmiBlitz3.ab2@25787>   Dc.l newtype_quick,$03                                   
00033040 <AmiBlitz3.ab2@25788>   Dc.w $0004
00033044 <AmiBlitz3.ab2@25789>   Dc.b 13,"l",0,0
0003304C <AmiBlitz3.ab2@25792>   Dc.l newtype_float,$04                                   
0003304E <AmiBlitz3.ab2@25793>   Dc.w $0004
00033052 <AmiBlitz3.ab2@25794>   Dc.b 13,"q",0,0
0003305A <AmiBlitz3.ab2@25798>   Dc.l newtype_double,$05                                  ;make problems on old residents
0003305C <AmiBlitz3.ab2@25799>   Dc.w $0004
00033060 <AmiBlitz3.ab2@25800>   Dc.b 13,"f",0,0
00033068 <AmiBlitz3.ab2@25803>   Dc.l newtype_double,$06
0003306A <AmiBlitz3.ab2@25804>   Dc.w $0004
0003306E <AmiBlitz3.ab2@25805>   Dc.b 13,"a",0,0
00033076 <AmiBlitz3.ab2@25808>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00033078 <AmiBlitz3.ab2@25809>   Dc.w $0008
0003307C <AmiBlitz3.ab2@25810>   Dc.b 13,"d",0,0
00033084 <AmiBlitz3.ab2@25814>   Dc.l $0000000,$07                                        ;stringtype
00033086 <AmiBlitz3.ab2@25815>   Dc.w $0004
0003308A <AmiBlitz3.ab2@25816>   Dc.b 13,"s",0,0
00033092 <AmiBlitz3.ab2@25819>   Dc.l $00,$00
00033094 <AmiBlitz3.ab2@25820>   Dc.w $0000
00033098 <AmiBlitz3.ab2@25821>   Dc.b $01,$00,$00,$00
000330F8 <AmiBlitz3.ab2@25824> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
000330FA <AmiBlitz3.ab2@25828> dirmode:              Ds.w 1                               ;shows if directmode is on
000330FE <AmiBlitz3.ab2@25830>                       Ds.l 1                               ;int org source ;intuition!
00033100 <AmiBlitz3.ab2@25831> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00033104 <AmiBlitz3.ab2@25832> maxsat:               Ds.l 1                               ;data1 info pos
00033106 <AmiBlitz3.ab2@25833> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00033108 <AmiBlitz3.ab2@25835> maxsused:             Ds.w 1                               ;maximums used in prog
0003310A <AmiBlitz3.ab2@25839> dark:                 Ds.w 1                               ;dark compile?
0003310C <AmiBlitz3.ab2@25840> qlab:                 Ds.w 1                               ;quick lab allocate
00033110 <AmiBlitz3.ab2@25841> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00033112 <AmiBlitz3.ab2@25846> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00033114 <AmiBlitz3.ab2@25847> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00033118 <AmiBlitz3.ab2@25848> noinits:              Ds.l 1                               ;flag for if we have any init routines!
0003311C <AmiBlitz3.ab2@25850> letstart:             Ds.l 1
0003311E <AmiBlitz3.ab2@25851> dontwrite:            Ds.w 1                               ;nomemleft org source
0003319E <AmiBlitz3.ab2@25852> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
000331A2 <AmiBlitz3.ab2@25854> locdatast:            Ds.l 1
000331A6 <AmiBlitz3.ab2@25855> firstpend:            Ds.l 1
000331AA <AmiBlitz3.ab2@25859> data2at:              Ds.l 1
000331AE <AmiBlitz3.ab2@25860> data2:                Ds.l 1
000331B2 <AmiBlitz3.ab2@25861> data1start:           Ds.l 1                               ;data1at org source
000331B6 <AmiBlitz3.ab2@25862> data1:                Ds.l 1                               ;pc for initialized data!
000331BA <AmiBlitz3.ab2@25863> destbufferstart:      Ds.l 1                               ;pcat org source
000331BE <AmiBlitz3.ab2@25867> destbufferend:        Ds.l 1                               ;libat org source
000331C2 <AmiBlitz3.ab2@25868> libend:               Ds.l 1                               ;lib org source
000331C6 <AmiBlitz3.ab2@25869> allat:                Ds.l 1                               ;highest allocmemd location for code
000331D0 <AmiBlitz3.ab2@25870> dummyasm:             Dc.w 0,0,0,0,0
000331D4 <AmiBlitz3.ab2@25871>                       Dc.l 0
000331D6 <AmiBlitz3.ab2@25872>                       Dc.w 0
000331DA <AmiBlitz3.ab2@25876> buff1:                Ds.l 1                               ;buffer for text get
000331DE <AmiBlitz3.ab2@25877> buff2:                Ds.l 1                               ;ditto for dest
000331E0 <AmiBlitz3.ab2@25878> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
000331E2 <AmiBlitz3.ab2@25879> asmtype:              Ds.w 1                               ;0=contains no prog reference
000331E4 <AmiBlitz3.ab2@25880> extraword:            Ds.w 1                               ;the extension word for assembler
000331E6 <AmiBlitz3.ab2@25881> extraword2:           Ds.w 1                               ;ditto
000331E8 <AmiBlitz3.ab2@25882> asmsize:              Ds.w 1
000331EC <AmiBlitz3.ab2@25883> asmbuff:              Ds.l 1
000331EE <AmiBlitz3.ab2@25884> asmlen:               Ds.w 1                               ;first (src) text len
000331F0 <AmiBlitz3.ab2@25885> asmlen2:              Ds.w 1                               ;second (dest)
000331F4 <AmiBlitz3.ab2@25886> templabel:            Ds.l 1                               ;linked list of expressions to resolve
000331F6 <AmiBlitz3.ab2@25889> macnum:               Ds.w 1
000331FA <AmiBlitz3.ab2@25891>                       Dc.l 0                               ;address of next 0 in include fil
000331FE <AmiBlitz3.ab2@25892> titleat:              Ds.l 1                               ;5 longs for compile streaks
00033208 <AmiBlitz3.ab2@25893> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
0003320A <AmiBlitz3.ab2@25894> connest:              Ds.w 1                               ;conditional nest level
0003320E <AmiBlitz3.ab2@25895> firstconst:           Ds.l 1                               ;first constant (#a)
00033210 <AmiBlitz3.ab2@25896> numarg:               Ds.w 1                               ;number of macro arguements
00033214 <AmiBlitz3.ab2@25897> myoline:              Ds.l 1                               ;macro done yet?
00033218 <AmiBlitz3.ab2@25898> myline:               Ds.l 1                               ;pointer to some memory to create
0003321C <AmiBlitz3.ab2@25901>                       Ds.l 1
0003325C <AmiBlitz3.ab2@25902> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00033260 <AmiBlitz3.ab2@25903> concomsp:             Dc.l concomstack                     ;stack pointer
00033262 <AmiBlitz3.ab2@25904> oldqflag:             Ds.w 1
00033266 <AmiBlitz3.ab2@25907>                       Ds.l 1
00033268 <AmiBlitz3.ab2@25909>                       Ds.w 1
0003326C <AmiBlitz3.ab2@25910> firstfor:             Ds.l 1                               ;first for
0003326E <AmiBlitz3.ab2@25911> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00033270 <AmiBlitz3.ab2@25912> sbgot:                Ds.w 1                               ;flag for string got 2
00033272 <AmiBlitz3.ab2@25913> convsize:             Ds.w 1                               ;usertype org source
00033274 <AmiBlitz3.ab2@25914> userp:                Ds.w 1
00033278 <AmiBlitz3.ab2@25919> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
0003327A <AmiBlitz3.ab2@25920> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
0003327C <AmiBlitz3.ab2@25921> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00033280 <AmiBlitz3.ab2@25923> locloc:               Ds.l 1
00033282 <AmiBlitz3.ab2@25924> locchar:              Ds.w 1
00033302 <AmiBlitz3.ab2@25925> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00033304 <AmiBlitz3.ab2@25926> commode:              Ds.w 1                               ;in comma mode...
00033308 <AmiBlitz3.ab2@25927> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
0003330C <AmiBlitz3.ab2@25928> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00033310 <AmiBlitz3.ab2@25929> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00033312 <AmiBlitz3.ab2@25931>                       Ds.w 1                               ;opt reset offset
00033412 <AmiBlitz3.ab2@25933>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00033512 <AmiBlitz3.ab2@25935>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00033514 <AmiBlitz3.ab2@25936> varcodelen:           Ds.w 1                               ;and length
00033516 <AmiBlitz3.ab2@25938>                       Ds.w 1
0003351C <AmiBlitz3.ab2@25939> oldvcodelen:          Ds.w 3                               ;old varcodelen
00033520 <AmiBlitz3.ab2@25943> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00033522 <AmiBlitz3.ab2@25944> memlibstat:           Ds.w 1                               ;status of memory library during
00033524 <AmiBlitz3.ab2@25947>                       Dc.w 0
00033526 <AmiBlitz3.ab2@25949>                       Dc.w 0
00033528 <AmiBlitz3.ab2@25951> varmode:              Ds.w 1                               ;0 a5 pointer to global
0003352C <AmiBlitz3.ab2@25953> currentfunction:      Ds.l 1                               ;thisproc org source
00033530 <AmiBlitz3.ab2@25954> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00033532 <AmiBlitz3.ab2@25955> 
00033534 <AmiBlitz3.ab2@25957> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00033538 <AmiBlitz3.ab2@25958> passstack:            Ds.l 1
0003353C <AmiBlitz3.ab2@25959> zero:                 Ds.l 1                               ;ZERO!
0003353E <AmiBlitz3.ab2@25960> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00033542 <AmiBlitz3.ab2@25962> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00033546 <AmiBlitz3.ab2@25963> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00033548 <AmiBlitz3.ab2@25964> lasta6:               Dc.w $FFFF                           ;-1 org source
0003354A <AmiBlitz3.ab2@25965> instringon:           Ds.w 1                               ;quoteflag org source
0003354E <AmiBlitz3.ab2@25966> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00033552 <AmiBlitz3.ab2@25967> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00033556 <AmiBlitz3.ab2@25968> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
0003355A <AmiBlitz3.ab2@25969> endop:                Ds.l 1                               ;end of program pc - before finishups!
0003355E <AmiBlitz3.ab2@25970> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00033562 <AmiBlitz3.ab2@25971> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00033564 <AmiBlitz3.ab2@25972> numstatic:            Ds.w 1                               ;number of static structs
00033568 <AmiBlitz3.ab2@25973> staticdata:           Ds.l 1                               ;data1 val for statics
0003356C <AmiBlitz3.ab2@25974> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
0003356E <AmiBlitz3.ab2@25975> sbasegot:             Ds.w 1                               ;string base got?
00033572 <AmiBlitz3.ab2@25976> litdata1:             Ds.l 1
00033576 <AmiBlitz3.ab2@25980> objlen:               Ds.l 1
0003357A <AmiBlitz3.ab2@25981> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
0003357E <AmiBlitz3.ab2@25982> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00033580 <AmiBlitz3.ab2@25984> flagmask:             Ds.w 1                               ;mask for flag of variable when
00033582 <AmiBlitz3.ab2@25986> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00033584 <AmiBlitz3.ab2@25987> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00033588 <AmiBlitz3.ab2@25988> temp1:                Ds.l 1
0003358C <AmiBlitz3.ab2@25989> temp2:                Ds.l 1
00033590 <AmiBlitz3.ab2@25991> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00033594 <AmiBlitz3.ab2@25992> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00033608 <AmiBlitz3.ab2@25993> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
0003360C <AmiBlitz3.ab2@25994> fib_Size:             Ds.l 1                               ;namebuff+124 org source
0003368C <AmiBlitz3.ab2@25996> namebuff2:            Ds.b 128
00033694 <AmiBlitz3.ab2@25997>                       Ds.b 8                               ;for fileinfoblock
000336D4 <AmiBlitz3.ab2@26000> optstuff:             Ds.b 64                              ;temp opt make buffer
00033712 <AmiBlitz3.ab2@26008>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00033718 <AmiBlitz3.ab2@26009>   MOVE.l #1000,D0
0003371A <AmiBlitz3.ab2@26010>   JSR (A1)
0003371C <AmiBlitz3.ab2@26011> RTS
0003371E <AmiBlitz3.ab2@26017>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00033722 <AmiBlitz3.ab2@26018>   Dc.l xtra_versionnumber                                  ; vers org source
00033726 <AmiBlitz3.ab2@26019>   Dc.l create_iconfile                                     ; create icon for executable
0003372A <AmiBlitz3.ab2@26020>   Ds.l 1
0003372C <AmiBlitz3.ab2@26022>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00033730 <AmiBlitz3.ab2@26025>   Dc.l set_use_debugger
00033734 <AmiBlitz3.ab2@26026>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00033738 <AmiBlitz3.ab2@26027>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
0003373C <AmiBlitz3.ab2@26028>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00033740 <AmiBlitz3.ab2@26029>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00033744 <AmiBlitz3.ab2@26030>   Dc.l set_make_smallestcode
00033748 <AmiBlitz3.ab2@26031>   Dc.l set_link_debuginfo
0003374C <AmiBlitz3.ab2@26032>   Dc.l set_autorun
00033750 <AmiBlitz3.ab2@26033>   Dc.l set_interruptcheck
00033754 <AmiBlitz3.ab2@26034>   Dc.l set_assemblercheck
00033758 <AmiBlitz3.ab2@26036>   Dc.l set_overflowcheck
0003375C <AmiBlitz3.ab2@26037>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00033760 <AmiBlitz3.ab2@26038>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00033764 <AmiBlitz3.ab2@26039>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00033768 <AmiBlitz3.ab2@26042>   Ds.l 1
0003376A <AmiBlitz3.ab2@26044>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
0003376E <AmiBlitz3.ab2@26051>   Dc.l objectbuffer
00033772 <AmiBlitz3.ab2@26052>   Dc.l libsbuffer
00033776 <AmiBlitz3.ab2@26053>   Dc.l systembuffer
0003377A <AmiBlitz3.ab2@26054>   Dc.l databuffer
0003377E <AmiBlitz3.ab2@26055>   Dc.l macrobuffer_size
00033782 <AmiBlitz3.ab2@26056>   Dc.l stringbuffer
00033786 <AmiBlitz3.ab2@26059>   Ds.l 1
00033788 <AmiBlitz3.ab2@26063>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00033790 <AmiBlitz3.ab2@26064>   Dc.l residents_table,0
00033792 <AmiBlitz3.ab2@26068>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
0003379A <AmiBlitz3.ab2@26069>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
0003379C <AmiBlitz3.ab2@26070>   Ds.w 1
00033898 <AmiBlitz3.ab2@26074>   Ds.l 63
00033994 <AmiBlitz3.ab2@26075>   Ds.l 63
00033A90 <AmiBlitz3.ab2@26076>   Ds.l 63
00033B72 <AmiBlitz3.ab2@26077>   Ds.w 113
00033B74 <AmiBlitz3.ab2@26080> comsettings_message:  Ds.w 1                               ;allchg org source
00033B76 <AmiBlitz3.ab2@26081> xtra_versionnumber:   Ds.w 1                               ;vers org source
00033B7C <AmiBlitz3.ab2@26085>   CLR.b exefilename
00033B7E <AmiBlitz3.ab2@26086>   TST.l d0
00033B82 <AmiBlitz3.ab2@26087>   BNE read_xtrafile__l10
00033B84 <AmiBlitz3.ab2@26088> RTS
00033B8A <AmiBlitz3.ab2@26091>   JSR free_residents                                       ;jsr freeres2 org source
00033B90 <AmiBlitz3.ab2@26092> 
00033B96 <AmiBlitz3.ab2@26093>   LEA ptr_xtradata,A2
00033B98 <AmiBlitz3.ab2@26094>   MOVEQ.l #$00,D4
00033B9A <AmiBlitz3.ab2@26097>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00033B9E <AmiBlitz3.ab2@26098>     BEQ.b read_xtrafile__done
00033BA0 <AmiBlitz3.ab2@26101>     MOVE.l (A2)+,D2
00033BA4 <AmiBlitz3.ab2@26102>   BEQ.b read_xtrafile__loop
00033BA6 <AmiBlitz3.ab2@26104>   MOVE.l D4,D3
00033BA8 <AmiBlitz3.ab2@26105>   MOVE.l D7,D1
00033BAC <AmiBlitz3.ab2@26106>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033BAE <AmiBlitz3.ab2@26107>   TST.l D0
00033BB2 <AmiBlitz3.ab2@26108>   BNE.b read_xtrafile__loop2
00033BB6 <AmiBlitz3.ab2@26109> BRA.w read_xtrafile__done2
00033BBC <AmiBlitz3.ab2@26112>   TST.b xtra_versionnumber
00033BC0 <AmiBlitz3.ab2@26113>    BNE.b read_xtrafile__nover0
00033BC8 <AmiBlitz3.ab2@26114>   MOVE.w #$0080,set_autorun                                ;auto run on
00033BD2 <AmiBlitz3.ab2@26115>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00033BD8 <AmiBlitz3.ab2@26116>   CLR.w set_assemblercheck                                 ;assembler checking off
00033BE2 <AmiBlitz3.ab2@26117>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00033BE6 <AmiBlitz3.ab2@26118> BRA.b read_xtrafile__ver0
00033BE8 <AmiBlitz3.ab2@26121>   MOVE.l D7,D1                                             ;load cli arg!
00033BEE <AmiBlitz3.ab2@26122>   MOVE.l #str_cliarguments,D2
00033BF4 <AmiBlitz3.ab2@26123>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00033BF8 <AmiBlitz3.ab2@26124>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033BFE <AmiBlitz3.ab2@26125>   MOVE.l #str_cliarguments,A0
00033C04 <AmiBlitz3.ab2@26126>   ADDA.l #115,A0
00033C0A <AmiBlitz3.ab2@26127>   MOVE.l #0,(a0) ; terminate it!
00033C0C <AmiBlitz3.ab2@26129>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00033C12 <AmiBlitz3.ab2@26130>   MOVE.l #stacksize,D2
00033C18 <AmiBlitz3.ab2@26131>   MOVE.l #4,D3
00033C1C <AmiBlitz3.ab2@26132>   JSR _Read(A6)
00033C26 <AmiBlitz3.ab2@26133>   CMP.l ##MIN_STACKSIZE,stacksize
00033C2A <AmiBlitz3.ab2@26134>   BGE 'stackok
00033C34 <AmiBlitz3.ab2@26135>   MOVE.l ##MIN_STACKSIZE,stacksize
00033C36 <AmiBlitz3.ab2@26138>   MOVE.l D7,D1
00033C3C <AmiBlitz3.ab2@26139>   MOVE.l #versioninformation,D2
00033C42 <AmiBlitz3.ab2@26140>   MOVE.l #4,D3
00033C46 <AmiBlitz3.ab2@26141>   JSR _Read(A6)
00033C48 <AmiBlitz3.ab2@26143>   MOVE.l D7,D1
00033C4E <AmiBlitz3.ab2@26144>   MOVE.l #number_of_builds,D2
00033C54 <AmiBlitz3.ab2@26145>   MOVE.l #4,D3
00033C58 <AmiBlitz3.ab2@26146>   JSR _Read(A6)
00033C5E <AmiBlitz3.ab2@26152>   MOVE.l A7,errstack
00033C68 <AmiBlitz3.ab2@26153>   MOVE.l #read_xtrafile__done2,errcont
00033C70 <AmiBlitz3.ab2@26154>   MOVE.w #$FFFF,ezerr
00033C76 <AmiBlitz3.ab2@26157>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00033C78 <AmiBlitz3.ab2@26158>     MOVEQ.l #$04,D3
00033C7A <AmiBlitz3.ab2@26159>     MOVE.l D7,D1
00033C7E <AmiBlitz3.ab2@26160>     JSR _Read(A6)
00033C80 <AmiBlitz3.ab2@26161>     TST.l D0
00033C84 <AmiBlitz3.ab2@26162>     BEQ.b read_xtrafile__done2
00033C8A <AmiBlitz3.ab2@26163>     MOVE.w temp1,D1
00033C8C <AmiBlitz3.ab2@26164>     TST.w d1                                               ;new
00033C90 <AmiBlitz3.ab2@26165>     BEQ read_xtrafile__done2                                         ;new
00033C96 <AmiBlitz3.ab2@26166>      JSR AJL_0_6F1A
00033C9C <AmiBlitz3.ab2@26168>     CMP.l #0,a1
00033CA0 <AmiBlitz3.ab2@26169>     BEQ read_xtrafile__dloop
00033CA4 <AmiBlitz3.ab2@26170>     MOVE.l $12(A1),D0
00033CAC <AmiBlitz3.ab2@26171>     MOVE.w temp1+2,-$4(A1,D0.L)
00033CB0 <AmiBlitz3.ab2@26172> BRA.b read_xtrafile__dloop
00033CB4 <AmiBlitz3.ab2@26178>   LEA residents_table(PC),A0
00033CB6 <AmiBlitz3.ab2@26179>   MOVEQ.l #$07,D0
00033CBA <AmiBlitz3.ab2@26182>     CLR.l $40(A0)
00033CBE <AmiBlitz3.ab2@26183>     LEA ResidentEntryStep(A0),A0   ; $44
00033CC2 <AmiBlitz3.ab2@26184>   DBF D0,read_xtrafile__loop3
00033CC6 <AmiBlitz3.ab2@26186>   MOVEM.l D7/A6,-(A7)
00033CCC <AmiBlitz3.ab2@26187>   JSR init_buffers
00033CD2 <AmiBlitz3.ab2@26188>   JSR reloadresident
00033CD6 <AmiBlitz3.ab2@26189>   MOVEM.l (A7)+,D7/A6
00033CD8 <AmiBlitz3.ab2@26190> RTS
00033CE0 <AmiBlitz3.ab2@26194>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00033CE6 <AmiBlitz3.ab2@26203>   LEA ptr_xtradata,A2
00033CE8 <AmiBlitz3.ab2@26204>   MOVEQ.l #$00,D4
00033CEA <AmiBlitz3.ab2@26208>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00033CEE <AmiBlitz3.ab2@26209>   BEQ.b write_xtrafile__done
00033CF0 <AmiBlitz3.ab2@26212>    MOVE.l (A2)+,D2
00033CF4 <AmiBlitz3.ab2@26213>    BEQ.b write_xtrafile__loop
00033CF6 <AmiBlitz3.ab2@26215>    MOVE.l D4,D3
00033CF8 <AmiBlitz3.ab2@26216>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00033CFC <AmiBlitz3.ab2@26217>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00033D00 <AmiBlitz3.ab2@26218> BRA.b write_xtrafile__loop2
00033D02 <AmiBlitz3.ab2@26221>   MOVE.l D7,D1
00033D08 <AmiBlitz3.ab2@26222>   MOVE.l #str_cliarguments,D2
00033D0E <AmiBlitz3.ab2@26223>   MOVE.l #116,D3
00033D12 <AmiBlitz3.ab2@26224>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00033D14 <AmiBlitz3.ab2@26226>   MOVE.l D7,D1
00033D1A <AmiBlitz3.ab2@26227>   MOVE.l #stacksize,D2
00033D20 <AmiBlitz3.ab2@26228>   MOVE.l #4,D3
00033D24 <AmiBlitz3.ab2@26229>   JSR _Write(A6)
00033D26 <AmiBlitz3.ab2@26231>   MOVE.l D7,D1
00033D2C <AmiBlitz3.ab2@26232>   MOVE.l #versioninformation,D2
00033D32 <AmiBlitz3.ab2@26233>   MOVE.l #4,D3
00033D36 <AmiBlitz3.ab2@26234>   JSR _Write(A6)
00033D38 <AmiBlitz3.ab2@26236>   MOVE.l D7,D1
00033D3E <AmiBlitz3.ab2@26237>   MOVE.l #number_of_builds,D2
00033D44 <AmiBlitz3.ab2@26238>   MOVE.l #4,D3
00033D48 <AmiBlitz3.ab2@26239>   JSR _Write(A6)
00033D4E <AmiBlitz3.ab2@26245>   LEA libpointer,A2
00033D50 <AmiBlitz3.ab2@26248>     MOVE.l (A2),D0
00033D54 <AmiBlitz3.ab2@26249>     BEQ.w write_xtrafile__done2
00033D56 <AmiBlitz3.ab2@26250>     MOVEA.l D0,A2
00033D5A <AmiBlitz3.ab2@26251>     MOVE.l $12(A2),D4
00033D5E <AmiBlitz3.ab2@26252>     TST.w -$2(A2,D4.L)
00033D62 <AmiBlitz3.ab2@26253>     BEQ.w write_xtrafile__loop3
00033D66 <AmiBlitz3.ab2@26255>     LEA $4(A2),A0
00033D68 <AmiBlitz3.ab2@26256>     MOVE.l A0,D2
00033D6A <AmiBlitz3.ab2@26257>     MOVEQ.l #$02,D3
00033D6C <AmiBlitz3.ab2@26258>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00033D70 <AmiBlitz3.ab2@26259>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00033D74 <AmiBlitz3.ab2@26261>     LEA -$4(A2,D4.L),A0
00033D76 <AmiBlitz3.ab2@26262>     MOVE.l A0,D2
00033D78 <AmiBlitz3.ab2@26263>     MOVEQ.l #$02,D3
00033D7A <AmiBlitz3.ab2@26264>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00033D7E <AmiBlitz3.ab2@26265>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00033D82 <AmiBlitz3.ab2@26266> BRA.w write_xtrafile__loop3
00033D88 <AmiBlitz3.ab2@26271>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00033D8A <AmiBlitz3.ab2@26272>   MOVE.l A2,D2           ; move the address to d2
00033D90 <AmiBlitz3.ab2@26273>   MOVE.l #4,D3           ; we only need 4 bytes to save
00033D92 <AmiBlitz3.ab2@26274>   MOVE.l D7,D1           ; we set the file handle
00033D96 <AmiBlitz3.ab2@26275>   JSR _Write(A6)         ; and we write it.
00033D98 <AmiBlitz3.ab2@26277> RTS
00033D9E <AmiBlitz3.ab2@26282>   LEA optssave,A0                      ; backup address
00033DA4 <AmiBlitz3.ab2@26283>   LEA ptr_xtradata,A1                  ; source address
00033DA6 <AmiBlitz3.ab2@26286>   MOVE.w (A1)+,D0                                          ;length of data move
00033DAA <AmiBlitz3.ab2@26287>   BEQ.b 'backupdone
00033DAC <AmiBlitz3.ab2@26288>   SUBQ.w #1,D0
00033DAE <AmiBlitz3.ab2@26291>     MOVE.l (A1)+,D1
00033DB2 <AmiBlitz3.ab2@26292>     BEQ.b 'backuploop
00033DB4 <AmiBlitz3.ab2@26293>     MOVEA.l D1,A2
00033DB6 <AmiBlitz3.ab2@26294>     MOVE.w D0,D1
00033DB8 <AmiBlitz3.ab2@26297>       MOVE.b (A2)+,(A0)+
00033DBC <AmiBlitz3.ab2@26298>   DBF D1,'backuploop3
00033DC0 <AmiBlitz3.ab2@26300> BRA.w 'backuploop2
00033DC6 <AmiBlitz3.ab2@26304>   LEA bufferlist,A1
00033DC8 <AmiBlitz3.ab2@26307>     MOVE.l (A1)+,D2
00033DCC <AmiBlitz3.ab2@26308>     BEQ.b 'loop4done
00033DCE <AmiBlitz3.ab2@26310>     MOVEA.l D2,A0
00033DD0 <AmiBlitz3.ab2@26311>     MOVE.l (A0),D2
00033DD2 <AmiBlitz3.ab2@26312>     ADDQ.w #8,A0
00033DD8 <AmiBlitz3.ab2@26313>     JSR makelong
00033DDC <AmiBlitz3.ab2@26314> BRA.b 'loop4
00033DE2 <AmiBlitz3.ab2@26317>   CLR.w state_of_residents                                 ;resident change
00033DE8 <AmiBlitz3.ab2@26318>   CLR.w comsettings_message                                ;alloc change
00033DEE <AmiBlitz3.ab2@26319>   CLR.w maxobject_pos
00033DF0 <AmiBlitz3.ab2@26320> RTS   ; new tomsmart1
00033DF6 <AmiBlitz3.ab2@26324>   LEA optssave,A0
00033DFC <AmiBlitz3.ab2@26325>   LEA ptr_xtradata,A1
00033DFE <AmiBlitz3.ab2@26328>   MOVE.w (A1)+,D0
00033E02 <AmiBlitz3.ab2@26329>   BEQ.b 'restoredone
00033E04 <AmiBlitz3.ab2@26330>   SUBQ.w #1,D0
00033E06 <AmiBlitz3.ab2@26333>     MOVE.l (A1)+,D1
00033E0A <AmiBlitz3.ab2@26334>     BEQ.b 'restoreloop1
00033E0C <AmiBlitz3.ab2@26335>     MOVEA.l D1,A2
00033E0E <AmiBlitz3.ab2@26336>     MOVE.w D0,D1
00033E10 <AmiBlitz3.ab2@26339>       MOVE.b (A0)+,(A2)+
00033E14 <AmiBlitz3.ab2@26340>   DBF D1,'restoreloop3
00033E18 <AmiBlitz3.ab2@26342> BRA.b 'restoreloop2
00033E1A <AmiBlitz3.ab2@26345> RTS
00033E20 <AmiBlitz3.ab2@26349>   JSR free_residents                    ; first free the allready loaded residents
00033E26 <AmiBlitz3.ab2@26350>   JSR Clear_Residents_table             ; second clear the complete resident table
00033E28 <AmiBlitz3.ab2@26351> RTS
00033E30 <AmiBlitz3.ab2@26355>   MOVE.w #$FFFF,state_of_residents
00033E36 <AmiBlitz3.ab2@26356>   MOVE.w state_of_residents,D0
00033E3C <AmiBlitz3.ab2@26357>   JSR reloadresident
00033E3E <AmiBlitz3.ab2@26358> RTS
00033E40 <AmiBlitz3.ab2@26363>   MOVE.l d0,a1
00033E46 <AmiBlitz3.ab2@26364>   MOVEA.l libpointer,A2
00033E4A <AmiBlitz3.ab2@26367>     MOVE.l $12(A2),D0
00033E4E <AmiBlitz3.ab2@26368>     TST.w -$2(A2,D0.L)
00033E52 <AmiBlitz3.ab2@26369>      BEQ.w JL_0_102AAa
00033E54 <AmiBlitz3.ab2@26370>     SUBQ.w #1,D1
00033E58 <AmiBlitz3.ab2@26371>      BPL.w JL_0_102AAa
00033E5C <AmiBlitz3.ab2@26372>     MOVEA.l -$1A(A2,D0.L),A3
00033E5E <AmiBlitz3.ab2@26373>     ADDA.l A2,A3
00033E60 <AmiBlitz3.ab2@26376>       MOVE.b (A3)+,(A1)+
00033E64 <AmiBlitz3.ab2@26377>     BNE.w JL_0_10294a
00033E66 <AmiBlitz3.ab2@26379>     CLR.b -(A1)
00033E6A <AmiBlitz3.ab2@26380>     MOVE.w -$4(A2,D0.L),D0
00033E70 <AmiBlitz3.ab2@26381>     AND.l #$ffff,d0
00033E72 <AmiBlitz3.ab2@26382> RTS
00033E74 <AmiBlitz3.ab2@26385>     MOVEA.l (A2),A2
00033E78 <AmiBlitz3.ab2@26386> BRA.w JL_0_1027Ca
00033E88 <AmiBlitz3.ab2@26391> str_maxobjects_name:   Dc.b "              ",0 : Even
00033E98 <AmiBlitz3.ab2@26392> str_maxobjects_name2:  Dc.b "              ",0 : Even
00033E9C <AmiBlitz3.ab2@26393> objectbuffer:          Dc.l $00004000
00033EA0 <AmiBlitz3.ab2@26394>                        Dc.l $00000000
00033EAC <AmiBlitz3.ab2@26395> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00033EB0 <AmiBlitz3.ab2@26397> libsbuffer:            Dc.l $00008000
00033EB4 <AmiBlitz3.ab2@26398>                        Dc.l $00000000
00033EC0 <AmiBlitz3.ab2@26399> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00033EC4 <AmiBlitz3.ab2@26401> systembuffer:          Dc.l $00001000                      ; systen buffer
00033EC8 <AmiBlitz3.ab2@26402>                        Dc.l $00000000
00033ED4 <AmiBlitz3.ab2@26403> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00033ED8 <AmiBlitz3.ab2@26405> databuffer:            Dc.l $00001000                      ; data buffer
00033EDC <AmiBlitz3.ab2@26406>                        Dc.l $00000000
00033EE8 <AmiBlitz3.ab2@26407> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00033EEC <AmiBlitz3.ab2@26409> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
00033EF0 <AmiBlitz3.ab2@26410>                        Dc.l $00000000
00033EFC <AmiBlitz3.ab2@26411> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
00033F00 <AmiBlitz3.ab2@26413> stringbuffer:          Dc.l $00002800                      ; string buffer
00033F04 <AmiBlitz3.ab2@26414>                        Dc.l $00000000
00033F10 <AmiBlitz3.ab2@26415> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00033F12 <AmiBlitz3.ab2@26417> maxobjects_value:      Dc.w $0064
00033F16 <AmiBlitz3.ab2@26418>                        Dc.l $00000000
00033F22 <AmiBlitz3.ab2@26419> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00033F24 <AmiBlitz3.ab2@26421> maxobjects_value2:     Dc.w $0014
00033F26 <AmiBlitz3.ab2@26422>                        Dc.w $0000
00033F32 <AmiBlitz3.ab2@26424> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00033F33 <AmiBlitz3.ab2@26428> set_create_iconfile:   Dc.b $00
00033F36 <AmiBlitz3.ab2@26429> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00033F38 <AmiBlitz3.ab2@26430>                        Dc.b $00,$01
00033F39 <AmiBlitz3.ab2@26432> set_use_debugger:      Dc.b $00                            ; Flags.w
00033F3C <AmiBlitz3.ab2@26433> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00033F3E <AmiBlitz3.ab2@26434>                        Dc.b $00,$01                        ; GadgetType.w
00033F42 <AmiBlitz3.ab2@26435> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00033F46 <AmiBlitz3.ab2@26436> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00033F4A <AmiBlitz3.ab2@26437> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00033F4C <AmiBlitz3.ab2@26438> AL_0_11094:            Ds.w 1
00033F4D <AmiBlitz3.ab2@26440> set_make_smallestcode: Ds.b 1
00033F50 <AmiBlitz3.ab2@26441> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00033F52 <AmiBlitz3.ab2@26442>                        Dc.b $00,$01
00033F53 <AmiBlitz3.ab2@26443> set_link_debuginfo:    Ds.b 1
00033F56 <AmiBlitz3.ab2@26444> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00033F58 <AmiBlitz3.ab2@26445>                        Dc.b $00,$01
00034178 <AmiBlitz3.ab2@26450>   Ds.l 136         ;resident files STEP $44 piece 8
000341F8 <AmiBlitz3.ab2@26455> str_calcexpression:        Ds.l 32
000341FC <AmiBlitz3.ab2@26456> destbufferend_backup_calc: Ds.l 1
00034206 <AmiBlitz3.ab2@26461>   MOVE.l destbufferend,destbufferend_backup_calc
0003420C <AmiBlitz3.ab2@26462>   MOVE.l A7,errstack
00034216 <AmiBlitz3.ab2@26463>   MOVE.l #Calc_Error_Exit,errcont
00034240 <AmiBlitz3.ab2@26470>   !basic         ; get the flage for the conversion form the editor
00034284 <AmiBlitz3.ab2@26471>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
000342C8 <AmiBlitz3.ab2@26472>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
000342E6 <AmiBlitz3.ab2@26473>   !asm
000342EC <AmiBlitz3.ab2@26475>   LEA str_calcexpression,A0
000342F2 <AmiBlitz3.ab2@26483>   JSR setcvars
000342F8 <AmiBlitz3.ab2@26484>   JSR setsvars
000342FE <AmiBlitz3.ab2@26485>   CLR.w connest
00034304 <AmiBlitz3.ab2@26486>   LEA str_calcexpression,A5
0003430A <AmiBlitz3.ab2@26487>   JSR AJL_0_BF6E
00034310 <AmiBlitz3.ab2@26488>   LEA str_calcexpression,A0
00034312 <AmiBlitz3.ab2@26489>   TST.l D3
00034316 <AmiBlitz3.ab2@26490>    BPL.w JL_0_11AE8
0003431A <AmiBlitz3.ab2@26491>   MOVE.b #$2D,(A0)+
0003431C <AmiBlitz3.ab2@26492>   NEG.l D3
00034324 <AmiBlitz3.ab2@26495>   CMPI.w #$80,CalculatorButtonDecFlag
00034328 <AmiBlitz3.ab2@26496>    BEQ.w JL_0_11B74
0003432A <AmiBlitz3.ab2@26497>   MOVEQ.l #$00,D1
00034332 <AmiBlitz3.ab2@26498>   CMPI.w #$80,CalculatorButtonBinFlag
00034336 <AmiBlitz3.ab2@26499>    BNE.w JL_0_11B36
00034338 <AmiBlitz3.ab2@26500>   MOVEQ.l #$1F,D0
0003433C <AmiBlitz3.ab2@26501>   MOVE.b #$25,(A0)+
0003433E <AmiBlitz3.ab2@26504>       LSL.l #1,D3
00034342 <AmiBlitz3.ab2@26505>        BCC.w JL_0_11B18
00034346 <AmiBlitz3.ab2@26506>       MOVE.b #"1",(A0)+
00034348 <AmiBlitz3.ab2@26507>       MOVEQ.l #-$01,D1
0003434C <AmiBlitz3.ab2@26508>   BRA.w JL_0_11B22
0003434E <AmiBlitz3.ab2@26511>       TST.w D1
00034352 <AmiBlitz3.ab2@26512>       BEQ.w JL_0_11B22
00034356 <AmiBlitz3.ab2@26513>       MOVE.b #"0",(A0)+
0003435A <AmiBlitz3.ab2@26516>  DBF D0,JL_0_11B08
0003435C <AmiBlitz3.ab2@26519>   TST.w D1
00034360 <AmiBlitz3.ab2@26520>   BNE.w JL_0_11B30
00034364 <AmiBlitz3.ab2@26521>   MOVE.b #"0",(A0)+
00034366 <AmiBlitz3.ab2@26524>   CLR.b (A0)
0003436A <AmiBlitz3.ab2@26525> BRA.w JL_0_11B7C
0003436C <AmiBlitz3.ab2@26528>   MOVEQ.l #$07,D0
00034370 <AmiBlitz3.ab2@26529>   MOVE.b #$24,(A0)+
00034372 <AmiBlitz3.ab2@26532>     MOVE.l D3,D2
00034374 <AmiBlitz3.ab2@26533>     SWAP D2
00034376 <AmiBlitz3.ab2@26534>     LSR.w #8,D2
00034378 <AmiBlitz3.ab2@26535>     LSR.w #4,D2
0003437C <AmiBlitz3.ab2@26536>     ADDI.w #$30,D2
00034380 <AmiBlitz3.ab2@26537>     CMP.w #$3A,D2
00034384 <AmiBlitz3.ab2@26538>      BCS.w JL_0_11B52
00034386 <AmiBlitz3.ab2@26539>     ADDQ.w #7,D2
0003438A <AmiBlitz3.ab2@26542>     CMP.w #$30,D2
0003438E <AmiBlitz3.ab2@26543>     BEQ.w JL_0_11B62
00034390 <AmiBlitz3.ab2@26544>     MOVE.b D2,(A0)+
00034392 <AmiBlitz3.ab2@26545>     MOVEQ.l #-$01,D1
00034396 <AmiBlitz3.ab2@26546>   BRA.w JL_0_11B6A
00034398 <AmiBlitz3.ab2@26549>     TST.w D1
0003439C <AmiBlitz3.ab2@26550>      BEQ.w JL_0_11B6A
0003439E <AmiBlitz3.ab2@26551>     MOVE.b D2,(A0)+
000343A0 <AmiBlitz3.ab2@26554>     LSL.l #4,D3
000343A4 <AmiBlitz3.ab2@26555>  DBF D0,JL_0_11B3C
000343A8 <AmiBlitz3.ab2@26557> BRA.w JL_0_11B26
000343AA <AmiBlitz3.ab2@26560>   MOVE.l D3,D2
000343B0 <AmiBlitz3.ab2@26561>   JSR makelong
000343BA <AmiBlitz3.ab2@26568>   MOVE.l destbufferend_backup_calc,destbufferend
000343BC <AmiBlitz3.ab2@26570> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
000344BB <AmiBlitz3.ab2@26574> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000344BC <AmiBlitz3.ab2@26576> Even
000344FA <AmiBlitz3.ab2@26581>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00034500 <AmiBlitz3.ab2@26582>   MOVE.l #1001,D0
00034506 <AmiBlitz3.ab2@26583>   MOVE.l #str_cliarguments,D1
00034508 <AmiBlitz3.ab2@26584>   JSR (A1)
0003450A <AmiBlitz3.ab2@26585> RTS
0003450C <AmiBlitz3.ab2@26590>     MOVE.b (a5)+,d0
00034510 <AmiBlitz3.ab2@26591>     BEQ 'l2
00034514 <AmiBlitz3.ab2@26592>     CMP.b #$80,d0
00034518 <AmiBlitz3.ab2@26593>     BNE 'l1
0003451A <AmiBlitz3.ab2@26594>     MOVE.b (a5)+,d0
0003451E <AmiBlitz3.ab2@26595>     BEQ 'l2
00034522 <AmiBlitz3.ab2@26596>     CMP.b #$02,d0
00034526 <AmiBlitz3.ab2@26597>   BNE 'l1
0003452A <AmiBlitz3.ab2@26600>     CMP.b #$20,(a5)+
0003452E <AmiBlitz3.ab2@26601>   BEQ 'l3
00034530 <AmiBlitz3.ab2@26602>   SUBQ.l #1,a5
00034532 <AmiBlitz3.ab2@26603>   TST.b (a5)
00034536 <AmiBlitz3.ab2@26604>   BEQ 'l2
0003453A <AmiBlitz3.ab2@26605>   CMP.w #$8008,(a5)
0003453E <AmiBlitz3.ab2@26606>   BEQ 'l4
00034542 <AmiBlitz3.ab2@26607>   CMP.w #$8009,(a5)
00034546 <AmiBlitz3.ab2@26608>   BEQ 'l4
0003454A <AmiBlitz3.ab2@26609> BRA 'l1
0003454C <AmiBlitz3.ab2@26612>   ADDQ.l #2,a5
00034552 <AmiBlitz3.ab2@26613>   JSR skiprest
00034554 <AmiBlitz3.ab2@26614> RTS
0003455A <AmiBlitz3.ab2@26617>   JSR nextline
0003455E <AmiBlitz3.ab2@26618>   BNE 'l1
00034560 <AmiBlitz3.ab2@26619> RTS
0003458A <AmiBlitz3.ab2@26623>   !basic
00034594 <AmiBlitz3.ab2@26624>   DateFormat 1
000345A2 <AmiBlitz3.ab2@26625>   i.l=SystemDate
000345C8 <AmiBlitz3.ab2@26626>   a$=Date$ (i)
00034646 <AmiBlitz3.ab2@26627>   a$=Replace$(a$,"/",".")
0003464C <AmiBlitz3.ab2@26628>   GetD0 &a$
0003464E <AmiBlitz3.ab2@26629>   MOVEQ #8,d2
00034650 <AmiBlitz3.ab2@26630>   MOVE.l d0,a0
00034652 <AmiBlitz3.ab2@26633>     MOVE.b (a0)+,d1
00034658 <AmiBlitz3.ab2@26634>     JSR pokedata1b
0003465C <AmiBlitz3.ab2@26635>  DBF d2,'l1
0003465E <AmiBlitz3.ab2@26637>   MOVEQ #0,d0
00034660 <AmiBlitz3.ab2@26638>   MOVE.b (a0)+,d0
0003467E <AmiBlitz3.ab2@26639>   !asm
00034684 <AmiBlitz3.ab2@26640>   ADD.l #9,d2
0003468A <AmiBlitz3.ab2@26641>   ADD.l #9,a5
0003468C <AmiBlitz3.ab2@26642> RTS
000346B6 <AmiBlitz3.ab2@26646>   !basic
000346C0 <AmiBlitz3.ab2@26647>   DateFormat 0
000346CE <AmiBlitz3.ab2@26648>   i.l=SystemDate
000346F4 <AmiBlitz3.ab2@26649>   a$=Date$ (i)
00034772 <AmiBlitz3.ab2@26650>   a$=Replace$(a$,"/",".")
00034778 <AmiBlitz3.ab2@26651>   GetD0 &a$
0003477A <AmiBlitz3.ab2@26652>   MOVEQ #8,d2
0003477C <AmiBlitz3.ab2@26653>   MOVE.l d0,a0
0003477E <AmiBlitz3.ab2@26656>     MOVE.b (a0)+,d1
00034784 <AmiBlitz3.ab2@26657>     JSR pokedata1b
00034788 <AmiBlitz3.ab2@26658>  DBF d2,'l1
0003478A <AmiBlitz3.ab2@26660>   MOVEQ #0,d0
0003478C <AmiBlitz3.ab2@26661>   MOVE.b (a0)+,d0
000347AA <AmiBlitz3.ab2@26662>   !asm
000347B0 <AmiBlitz3.ab2@26663>   ADD.l #9,d2
000347B6 <AmiBlitz3.ab2@26664>   ADD.l #13,a5
000347B8 <AmiBlitz3.ab2@26665> RTS
000347E2 <AmiBlitz3.ab2@26669>   !basic
000347EC <AmiBlitz3.ab2@26670>   DateFormat 1
000347FA <AmiBlitz3.ab2@26671>   i.l = SystemDate
00034820 <AmiBlitz3.ab2@26672>   a$ = Date$ (i)
0003489E <AmiBlitz3.ab2@26673>   a$ = Replace$(a$,"/",".")
000348A4 <AmiBlitz3.ab2@26674>   GetD0 &a$
000348A6 <AmiBlitz3.ab2@26675>   MOVEQ #8,d2
000348A8 <AmiBlitz3.ab2@26676>   MOVE.l d0,a0
000348AA <AmiBlitz3.ab2@26679>     MOVE.b (a0)+,d1
000348B0 <AmiBlitz3.ab2@26680>     JSR writebyte
000348B4 <AmiBlitz3.ab2@26681>  DBF d2,'l1
000348B6 <AmiBlitz3.ab2@26683>   MOVEQ #0,d0
000348B8 <AmiBlitz3.ab2@26684>   MOVE.b (a0)+,d0
000348D6 <AmiBlitz3.ab2@26685>   !asm
000348DC <AmiBlitz3.ab2@26686>   ADD.l #9,a5
000348DE <AmiBlitz3.ab2@26687> RTS
00034908 <AmiBlitz3.ab2@26691>   !basic
00034912 <AmiBlitz3.ab2@26692>   DateFormat 0
00034920 <AmiBlitz3.ab2@26693>   i.l=SystemDate
00034946 <AmiBlitz3.ab2@26694>   a$=Date$ (i)
000349C4 <AmiBlitz3.ab2@26695>   a$=Replace$(a$,"/",".")
000349CA <AmiBlitz3.ab2@26696>   GetD0 &a$
000349CC <AmiBlitz3.ab2@26697>   MOVEQ #8,d2
000349CE <AmiBlitz3.ab2@26698>   MOVE.l d0,a0
000349D0 <AmiBlitz3.ab2@26701>     MOVE.b (a0)+,d1
000349D6 <AmiBlitz3.ab2@26702>     JSR writebyte
000349DA <AmiBlitz3.ab2@26703>  DBF d2,'l1
000349DC <AmiBlitz3.ab2@26705>   MOVEQ #0,d0
000349DE <AmiBlitz3.ab2@26706>   MOVE.b (a0)+,d0
000349FC <AmiBlitz3.ab2@26707>   !asm
00034A02 <AmiBlitz3.ab2@26708>   ADD.l #13,a5
00034A04 <AmiBlitz3.ab2@26709> RTS
00034A06 <AmiBlitz3.ab2@26713>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00034A08 <AmiBlitz3.ab2@26714>   MOVE.l a5,d0
00034A32 <AmiBlitz3.ab2@26715>   !basic
00034A36 <AmiBlitz3.ab2@26716>   _myD0.l = PutD0
00034A40 <AmiBlitz3.ab2@26717>   If _myD0
00034A86 <AmiBlitz3.ab2@26718>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034AD8 <AmiBlitz3.ab2@26719>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00034ADE <AmiBlitz3.ab2@26720>   Else
00034B18 <AmiBlitz3.ab2@26721>     error{"INTERNAL: Invalid pointer in version_string!"}
00034B28 <AmiBlitz3.ab2@26726>   actual_version.l = Peek.l(?versioninformation)
00034B38 <AmiBlitz3.ab2@26727>   actual_build.l   = Peek.l(?number_of_builds)
00034B5C <AmiBlitz3.ab2@26729>   Format "00"
00034B92 <AmiBlitz3.ab2@26730>   Select verstring$
00034BB6 <AmiBlitz3.ab2@26732>     Case "VER_MAJOR"
00034BF2 <AmiBlitz3.ab2@26733>      put_versionstr$ = Str$(actual_version LSR 24)
00034C1C <AmiBlitz3.ab2@26735>     Case "VER_MINOR"
00034C60 <AmiBlitz3.ab2@26736>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00034C8A <AmiBlitz3.ab2@26738>     Case "VER_PATCH"
00034CCE <AmiBlitz3.ab2@26739>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00034CF8 <AmiBlitz3.ab2@26741>     Case "VER_BUILD"
00034D1C <AmiBlitz3.ab2@26742>      Format ""
00034D50 <AmiBlitz3.ab2@26743>      put_versionstr$ = Str$(actual_build)
00034D56 <AmiBlitz3.ab2@26745>     Default
00034D7E <AmiBlitz3.ab2@26746>      put_versionstr$ = "{unknown compilerconstant}"
00034D8C <AmiBlitz3.ab2@26749>   End Select
00034DB0 <AmiBlitz3.ab2@26750>   Format ""
00034DC0 <AmiBlitz3.ab2@26752>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00034DC2 <AmiBlitz3.ab2@26753>   MOVE.l d0,d2
00034DC4 <AmiBlitz3.ab2@26754>   MOVE.l d2,-(a7)
00034DC8 <AmiBlitz3.ab2@26755>   SUB #1,d2
00034DCE <AmiBlitz3.ab2@26757>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00034DD0 <AmiBlitz3.ab2@26758>   MOVE.l d0,a0
00034DD2 <AmiBlitz3.ab2@26761>     MOVE.b (a0)+,d1
00034DD8 <AmiBlitz3.ab2@26762>     JSR pokedata1b
00034DDC <AmiBlitz3.ab2@26763>  DBF d2,'l1
00034DDE <AmiBlitz3.ab2@26765>   MOVEQ #0,d0
00034DFC <AmiBlitz3.ab2@26766>   !asm
00034DFE <AmiBlitz3.ab2@26767>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00034E00 <AmiBlitz3.ab2@26768>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00034E02 <AmiBlitz3.ab2@26769>   ADD.l d0,d2
00034E08 <AmiBlitz3.ab2@26770>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00034E0A <AmiBlitz3.ab2@26771>   MOVEQ #0,d0
00034E0C <AmiBlitz3.ab2@26772> RTS
00034E0E <AmiBlitz3.ab2@26776>   MOVE.l a5,d0
00034E38 <AmiBlitz3.ab2@26777>   !basic
00034E3C <AmiBlitz3.ab2@26778>   _myD0.l = PutD0
00034E46 <AmiBlitz3.ab2@26779>   If _myD0
00034E8C <AmiBlitz3.ab2@26780>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034EDE <AmiBlitz3.ab2@26781>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00034EE4 <AmiBlitz3.ab2@26782>   Else
00034F1E <AmiBlitz3.ab2@26783>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00034F2E <AmiBlitz3.ab2@26788>   actual_version.l = Peek.l(?versioninformation)
00034F3E <AmiBlitz3.ab2@26789>   actual_build.l   = Peek.l(?number_of_builds)
00034F62 <AmiBlitz3.ab2@26791>   Format ""
00034F98 <AmiBlitz3.ab2@26792>   Select verstring$
00034FBC <AmiBlitz3.ab2@26794>     Case "VER_MAJOR"
00034FF8 <AmiBlitz3.ab2@26795>      put_versionstr$ = Str$(actual_version LSR 24)
00035022 <AmiBlitz3.ab2@26797>     Case "VER_MINOR"
00035066 <AmiBlitz3.ab2@26798>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00035090 <AmiBlitz3.ab2@26800>     Case "VER_PATCH"
000350D4 <AmiBlitz3.ab2@26801>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000350FE <AmiBlitz3.ab2@26803>     Case "VER_BUILD"
00035122 <AmiBlitz3.ab2@26804>      Format ""
00035156 <AmiBlitz3.ab2@26805>      put_versionstr$ = Str$(actual_build)
0003515C <AmiBlitz3.ab2@26807>     Default
00035184 <AmiBlitz3.ab2@26808>      put_versionstr$ = "{unknown compilerconstant}"
00035192 <AmiBlitz3.ab2@26810>   End Select
000351B6 <AmiBlitz3.ab2@26811>   Format ""
000351CC <AmiBlitz3.ab2@26813>   GetD0 FLen(put_versionstr$)-1
000351CE <AmiBlitz3.ab2@26814>   MOVE.l d0,d2
000351D4 <AmiBlitz3.ab2@26816>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000351D6 <AmiBlitz3.ab2@26817>   MOVE.l d0,a0
000351D8 <AmiBlitz3.ab2@26820>     MOVE.b (a0)+,d1
000351DE <AmiBlitz3.ab2@26821>     JSR writebyte
000351E2 <AmiBlitz3.ab2@26822>  DBF d2,'l1
000351E4 <AmiBlitz3.ab2@26824>   MOVEQ #0,d0
000351E6 <AmiBlitz3.ab2@26825>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00035204 <AmiBlitz3.ab2@26826>   !asm
0003520A <AmiBlitz3.ab2@26827>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003520C <AmiBlitz3.ab2@26828> RTS
0003520E <AmiBlitz3.ab2@26930>  MOVE.l a5,-(a7)
0003523A <AmiBlitz3.ab2@26931>  !fget
0003523E <AmiBlitz3.ab2@26932>  CMP.w #".",d0
00035242 <AmiBlitz3.ab2@26933>  BNE 'skip
00035246 <AmiBlitz3.ab2@26934>  MOVEM.l a2/d2,-(a7)
0003524C <AmiBlitz3.ab2@26935>  LEA newtypebase,a2
00035252 <AmiBlitz3.ab2@26936>  JSR getparameter2
00035256 <AmiBlitz3.ab2@26937>  BEQ.w JUMP_syntaxerr
0003525C <AmiBlitz3.ab2@26938>  JSR findtype
00035260 <AmiBlitz3.ab2@26939>  BNE.w JUMP_notypeerr
00035266 <AmiBlitz3.ab2@26940>  MOVE.l a2,typetocast
0003526A <AmiBlitz3.ab2@26941>  MOVEM.l (a7)+,a2/d2
0003526E <AmiBlitz3.ab2@26942>  CMP.w #")",d0
00035272 <AmiBlitz3.ab2@26943>  BNE JUMP_errorbracketmiss
00035274 <AmiBlitz3.ab2@26944>  ADDQ.l #4,a7
000352A0 <AmiBlitz3.ab2@26945>  !fget
000352A6 <AmiBlitz3.ab2@26946>  JMP nocast
000352A8 <AmiBlitz3.ab2@26948> 'skip MOVE.l (a7)+,a5
000352AE <AmiBlitz3.ab2@26949>  JMP JL_0_A410
000352B4 <AmiBlitz3.ab2@26951> JUMP_errorbracketmiss JMP errorbracketmiss
000352DE <AmiBlitz3.ab2@26953> Function.l ab3_GetIncludeLock{filename.s}
000352FE <AmiBlitz3.ab2@26954>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00035356 <AmiBlitz3.ab2@26955>   ex.s       = dos_GetExt{filename}
0003536A <AmiBlitz3.ab2@26957>   If incLock = False
000353DE <AmiBlitz3.ab2@26958>     filename = dos_SetExt{filename,"ab3"}
000353FE <AmiBlitz3.ab2@26959>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00035412 <AmiBlitz3.ab2@26962>   If incLock = False
00035486 <AmiBlitz3.ab2@26963>     filename = dos_SetExt{filename,"ab2"}
000354A6 <AmiBlitz3.ab2@26964>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000354BA <AmiBlitz3.ab2@26967>   If incLock = False
0003552E <AmiBlitz3.ab2@26968>     filename = dos_SetExt{filename,"bb2"}
0003554E <AmiBlitz3.ab2@26969>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00035562 <AmiBlitz3.ab2@26972>   If incLock = False
000355F4 <AmiBlitz3.ab2@26973>     filename = dos_SetExt{filename,ex+".ab3"}
00035614 <AmiBlitz3.ab2@26974>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00035628 <AmiBlitz3.ab2@26977>   If incLock = False
0003569C <AmiBlitz3.ab2@26978>     filename = dos_SetExt{filename,"ab2"}
000356BC <AmiBlitz3.ab2@26979>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
000356D0 <AmiBlitz3.ab2@26982>   If incLock = False
00035744 <AmiBlitz3.ab2@26983>     filename = dos_SetExt{filename,"bb2"}
00035764 <AmiBlitz3.ab2@26984>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
0003576E <AmiBlitz3.ab2@26987>  Function Return incLock
00035788 <AmiBlitz3.ab2@26988> End Function
000357B2 <AmiBlitz3.ab2@26992>   !basic
000357DC <AmiBlitz3.ab2@26993>   incString.s = Peek$(?ptr_parameterstore)
0003580A <AmiBlitz3.ab2@26995>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003580E <AmiBlitz3.ab2@26996>   incDirP.l   = PutD0                                       ;    "
00035836 <AmiBlitz3.ab2@26997>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000358B6 <AmiBlitz3.ab2@26998>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000358E8 <AmiBlitz3.ab2@26999>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
000358FC <AmiBlitz3.ab2@27001>   If incLock = False ; not found => check default Include Directory
0003590C <AmiBlitz3.ab2@27002>     incDirP.l = Peek.l(?incd)
00035916 <AmiBlitz3.ab2@27003>     If incDirP
0003593E <AmiBlitz3.ab2@27004>       incDir_.s = Peek.s(incDirP)
00035944 <AmiBlitz3.ab2@27005>     Else
000359AE <AmiBlitz3.ab2@27006>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035A2E <AmiBlitz3.ab2@27008>     incFile.s = dos_AddPart{incDir_,incString}
00035A60 <AmiBlitz3.ab2@27009>     incLock.l = ab3_GetIncludeLock{incFile}
00035A74 <AmiBlitz3.ab2@27012>   If incLock = False ; not found => check relative to current source
00035A8C <AmiBlitz3.ab2@27013>     incDepth.l = Peek.w(?ininclude)-1
00035AB2 <AmiBlitz3.ab2@27014>     If incDepth >= 0 AND incDepth < #maxincludes
00035B12 <AmiBlitz3.ab2@27015>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00035B92 <AmiBlitz3.ab2@27016>       incFile.s = dos_AddPart{incDir_,incString}
00035BC4 <AmiBlitz3.ab2@27017>       incLock.l = ab3_GetIncludeLock{incFile}
00035BD8 <AmiBlitz3.ab2@27021>   If incLock = False ; still not found => check default Include Directory and name only
00035BE8 <AmiBlitz3.ab2@27022>     incDirP.l = Peek.l(?incd)
00035BF2 <AmiBlitz3.ab2@27023>     If incDirP
00035C1A <AmiBlitz3.ab2@27024>       incDir_.s = Peek.s(incDirP)
00035C20 <AmiBlitz3.ab2@27025>     Else
00035C8A <AmiBlitz3.ab2@27026>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035D38 <AmiBlitz3.ab2@27028>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00035D6A <AmiBlitz3.ab2@27029>     incLock.l = ab3_GetIncludeLock{incFile}
00035D74 <AmiBlitz3.ab2@27032>   If incLock
00035D8A <AmiBlitz3.ab2@27033>     MaxLen incFile = 1024
00035DAE <AmiBlitz3.ab2@27034>     NameFromLock_ incLock,&incFile,1024
00035DD8 <AmiBlitz3.ab2@27035>     incFile = Peek.s(&incFile)
00035E10 <AmiBlitz3.ab2@27036>     Poke$ ?ptr_parameterstore,incFile
00035E24 <AmiBlitz3.ab2@27037>     i = FLen(incFile)
00035E30 <AmiBlitz3.ab2@27038>     GetReg d0,i
00035E36 <AmiBlitz3.ab2@27039>     MOVE.l d0,tempstore
00035E46 <AmiBlitz3.ab2@27040>     UnLock_ incLock
00035E64 <AmiBlitz3.ab2@27043>   !asm
00035E6A <AmiBlitz3.ab2@27044>   TST.l tempstore
00035E6E <AmiBlitz3.ab2@27045>    BEQ 'l1
00035E74 <AmiBlitz3.ab2@27046>   MOVE.l tempstore,d2
00035E76 <AmiBlitz3.ab2@27049> RTS
00035EA0 <AmiBlitz3.ab2@27053>   !basic
00035ECA <AmiBlitz3.ab2@27054>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00035EF8 <AmiBlitz3.ab2@27055>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00035EFC <AmiBlitz3.ab2@27056>   incDirP.l   = PutD0                                       ;    "
00035F24 <AmiBlitz3.ab2@27057>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00035FA4 <AmiBlitz3.ab2@27058>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00035FC4 <AmiBlitz3.ab2@27059>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00035FD8 <AmiBlitz3.ab2@27061>   If incLock = False                                        ; not found => try orignal string only to find
00035FF8 <AmiBlitz3.ab2@27062>     incLock.l = Lock_(&incString,#ACCESS_READ)
00036002 <AmiBlitz3.ab2@27065>   If incLock                                                ; found => store full path
00036018 <AmiBlitz3.ab2@27066>     MaxLen incFile = 1024
0003603C <AmiBlitz3.ab2@27067>     NameFromLock_ incLock,&incFile,1024
00036066 <AmiBlitz3.ab2@27068>     incFile = Peek.s(&incFile)
0003609E <AmiBlitz3.ab2@27069>     Poke$ ?ptr_parameterstore,incFile
000360AA <AmiBlitz3.ab2@27072> 
000360C8 <AmiBlitz3.ab2@27073>   !asm
000360CA <AmiBlitz3.ab2@27074> RTS
000360D0 <AmiBlitz3.ab2@27085>   JSR Aclearallvars
000360D6 <AmiBlitz3.ab2@27086>   JSR free_unusedfunctions
000360E0 <AmiBlitz3.ab2@27101>   MOVE.l #"NORE",reqmode
000360E6 <AmiBlitz3.ab2@27102> JSR handle_compileerror
000360E8 <AmiBlitz3.ab2@27105>   MOVE.l d0,-(a7)
000360EA <AmiBlitz3.ab2@27106>   MOVE.l a5,d0
000360F4 <AmiBlitz3.ab2@27107>   !basica7
000360F8 <AmiBlitz3.ab2@27108>   i.l = PutD0
00036102 <AmiBlitz3.ab2@27109>   If i
0003612A <AmiBlitz3.ab2@27110>     a$ = Peek$(i)
0003615C <AmiBlitz3.ab2@27111>     b$ = Peeks$(i-7,7)
00036294 <AmiBlitz3.ab2@27113> 
0003629A <AmiBlitz3.ab2@27114>     MOVE.l d0,result
0003629E <AmiBlitz3.ab2@27116>   !asma7
000362A0 <AmiBlitz3.ab2@27117>   MOVE.l (a7)+,d0
000362A2 <AmiBlitz3.ab2@27118> RTS
000362CC <AmiBlitz3.ab2@27122>   !basic
000362FA <AmiBlitz3.ab2@27123>   !ComData_LEA{comStr_CurrentDir,D0}
000362FE <AmiBlitz3.ab2@27124>   currentDirP.l = PutD0
0003632C <AmiBlitz3.ab2@27126>   !ComData_LEA{comStr_SourceName,D0}
00036330 <AmiBlitz3.ab2@27127>   fileNameP.l = PutD0
00036358 <AmiBlitz3.ab2@27129>   check_dirname$  = Peek$(currentDirP)
00036380 <AmiBlitz3.ab2@27130>   check_filename$ = Peek$(fileNameP)
00036406 <AmiBlitz3.ab2@27131>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
0003640C <AmiBlitz3.ab2@27132>     JSR free_unusedfunctions
00036456 <AmiBlitz3.ab2@27134>   olddirname$ = Peek$(check_dirname$)
000364A0 <AmiBlitz3.ab2@27135>   oldfilename$ = Peek$(check_filename$)
000364CA <AmiBlitz3.ab2@27136>   For i = 0 To #maxincludes-1
000364DE <AmiBlitz3.ab2@27137>     incline(i) = 0
000364EE <AmiBlitz3.ab2@27138>   Next
0003650C <AmiBlitz3.ab2@27139>   !asm
0003650E <AmiBlitz3.ab2@27140> RTS
00036510 <AmiBlitz3.ab2@27144>   MOVEQ #0,d1
00036512 <AmiBlitz3.ab2@27147>   MOVE.b (a5)+,d0
00036516 <AmiBlitz3.ab2@27148>   BEQ 'er1
0003651A <AmiBlitz3.ab2@27149>   CMP.b #$20,d0
0003651E <AmiBlitz3.ab2@27150>   BEQ 'l1
00036520 <AmiBlitz3.ab2@27151>   ADDQ #1,d1
00036524 <AmiBlitz3.ab2@27152>   CMP.b #$22,d0
00036528 <AmiBlitz3.ab2@27153>   BNE 'l1
0003652A <AmiBlitz3.ab2@27154> RTS
00036530 <AmiBlitz3.ab2@27157> JMP syntaxerr
00036554 <AmiBlitz3.ab2@27168> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00036572 <AmiBlitz3.ab2@27169> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00036578 <AmiBlitz3.ab2@27174>   TST.b exdebug
0003657C <AmiBlitz3.ab2@27175>   BNE 'l10
00036582 <AmiBlitz3.ab2@27176>   MOVE.l #$4e71,d1
00036588 <AmiBlitz3.ab2@27177>   JSR writeword
0003658E <AmiBlitz3.ab2@27178>   MOVE.l destpointer,d0
00036590 <AmiBlitz3.ab2@27179>   MOVE.l d0,d1
00036592 <AmiBlitz3.ab2@27180>   ADDQ.l #3,d1
00036598 <AmiBlitz3.ab2@27181>   AND.l #$fffffffc,d1
0003659E <AmiBlitz3.ab2@27182>   MOVE.l d1,destpointer
000365A4 <AmiBlitz3.ab2@27183>   SUB.l destpointer,d0
000365A8 <AmiBlitz3.ab2@27184>   BEQ 'lnf1
000365B2 <AmiBlitz3.ab2@27185>   CMP.l #-1,bssstart
000365B6 <AmiBlitz3.ab2@27186>   BNE 'lnf1
000365C0 <AmiBlitz3.ab2@27187>   CMP.l #-1,chipstart
000365C4 <AmiBlitz3.ab2@27188>   BNE 'lnf1
000365CA <AmiBlitz3.ab2@27189>   MOVE.l destpointer,a4
000365D0 <AmiBlitz3.ab2@27190>   TST.w dontwrite
000365D4 <AmiBlitz3.ab2@27191>   BNE 'lnf1
000365DA <AmiBlitz3.ab2@27192>   MOVE.w #$4e71,-2(a4)
000365E4 <AmiBlitz3.ab2@27195>   CMP.l #-1,bssstart
000365E8 <AmiBlitz3.ab2@27196>   BEQ 'l11
000365EE <AmiBlitz3.ab2@27197>   MOVE.l #erro1t,-(a7)
000365F4 <AmiBlitz3.ab2@27198> JMP handle_compileerror
000365FE <AmiBlitz3.ab2@27201>   MOVE.l destpointer,bssstart
00036606 <AmiBlitz3.ab2@27202>   MOVE.b #1,bssmode
0003660C <AmiBlitz3.ab2@27205>   TST.b chipmode
00036610 <AmiBlitz3.ab2@27206>   BEQ 'l10
0003661A <AmiBlitz3.ab2@27207>   MOVE.l destpointer,chipend
00036620 <AmiBlitz3.ab2@27208>   CLR.b chipmode
00036626 <AmiBlitz3.ab2@27211>   JSR get1bytemain
00036628 <AmiBlitz3.ab2@27212> RTS
0003662E <AmiBlitz3.ab2@27216>    TST.b exdebug
00036632 <AmiBlitz3.ab2@27217>   BNE 'x1
00036638 <AmiBlitz3.ab2@27218>   MOVE.l destpointer,d0
0003663E <AmiBlitz3.ab2@27219>   MOVE.l d0,realbssend
00036644 <AmiBlitz3.ab2@27220>   MOVE.l #$4e71,d1
0003664A <AmiBlitz3.ab2@27221>   JSR writeword
00036650 <AmiBlitz3.ab2@27222>   MOVE.l destpointer,d0
00036652 <AmiBlitz3.ab2@27223>   MOVE.l d0,d1
00036654 <AmiBlitz3.ab2@27224>   ADDQ.l #3,d1
0003665A <AmiBlitz3.ab2@27225>   AND.l #$fffffffc,d1
00036660 <AmiBlitz3.ab2@27226>   MOVE.l d1,destpointer
00036666 <AmiBlitz3.ab2@27227>   SUB.l destpointer,d0
0003666A <AmiBlitz3.ab2@27228>   BEQ 'lnf1
00036670 <AmiBlitz3.ab2@27229>   MOVE.l destpointer,a4
0003667A <AmiBlitz3.ab2@27230>   CMP.l #-1,bssstart
0003667E <AmiBlitz3.ab2@27231>   BNE 'lnf1
00036688 <AmiBlitz3.ab2@27232>   CMP.l #-1,chipstart
0003668C <AmiBlitz3.ab2@27233>   BNE 'lnf1
00036692 <AmiBlitz3.ab2@27234>   TST.w dontwrite
00036696 <AmiBlitz3.ab2@27235>   BNE 'lnf1
0003669C <AmiBlitz3.ab2@27236>   MOVE.w #$4e71,-2(a4)
000366A2 <AmiBlitz3.ab2@27239>   TST.b bssmode
000366A6 <AmiBlitz3.ab2@27240>   BEQ 'l10
000366B0 <AmiBlitz3.ab2@27241>   MOVE.l destpointer,bssend
000366B6 <AmiBlitz3.ab2@27242>   CLR.b bssmode
000366C0 <AmiBlitz3.ab2@27247>   CMP.l #-1,chipstart
000366C4 <AmiBlitz3.ab2@27248>   BEQ 'l11
000366CA <AmiBlitz3.ab2@27249>   MOVE.l #erro1t,-(a7)
000366D0 <AmiBlitz3.ab2@27250> JMP handle_compileerror
000366DA <AmiBlitz3.ab2@27253>   MOVE.l destpointer,chipstart
000366E2 <AmiBlitz3.ab2@27254>   MOVE.b #1,chipmode
000366E8 <AmiBlitz3.ab2@27257>   JSR get1bytemain
000366EA <AmiBlitz3.ab2@27258> RTS
00036714 <AmiBlitz3.ab2@27262>   !basic
00036726 <AmiBlitz3.ab2@27272>   i.l = Peek.w(?ininclude)
0003674C <AmiBlitz3.ab2@27273>   If i>=0 AND i<#maxincludes
0003677E <AmiBlitz3.ab2@27274>     incdim (i) = Peek.s(?includetemp2)
00036798 <AmiBlitz3.ab2@27275>     incline(i) = Peek.l(?includeline)
000367A2 <AmiBlitz3.ab2@27277>     If CLIMode
00036850 <AmiBlitz3.ab2@27278>       If cli_verbose>=2 Then NPrint "  -> Compiling ",incdim(i),"..."
0003686E <AmiBlitz3.ab2@27282>   !asm
00036870 <AmiBlitz3.ab2@27283> RTS
0003689A <AmiBlitz3.ab2@27287>   !basic
000368AC <AmiBlitz3.ab2@27288>   i.l = Peek.w(?ininclude)
000368D2 <AmiBlitz3.ab2@27289>   If i>=0 AND i<#maxincludes
00036902 <AmiBlitz3.ab2@27290>     incdim (i) = ""
00036916 <AmiBlitz3.ab2@27291>     incline(i) = 0
0003694E <AmiBlitz3.ab2@27292>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
0003696C <AmiBlitz3.ab2@27294>   !asm
0003696E <AmiBlitz3.ab2@27295> RTS
00036974 <AmiBlitz3.ab2@27299>   LEA replacedat,a0
00036978 <AmiBlitz3.ab2@27300>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
0003697A <AmiBlitz3.ab2@27301> RTS
00036980 <AmiBlitz3.ab2@27305>   TST.b fpu
00036984 <AmiBlitz3.ab2@27306>   BEQ 'l1
0003698E <AmiBlitz3.ab2@27309>   MOVE.l destpointer,newinitaddr
00036994 <AmiBlitz3.ab2@27310>   JSR writeword
0003699A <AmiBlitz3.ab2@27311>   JSR writelong
0003699C <AmiBlitz3.ab2@27312> RTS
0003699E <AmiBlitz3.ab2@27317>   TST.b (a5)
000369A2 <AmiBlitz3.ab2@27318>    BEQ.s 'll20
000369A6 <AmiBlitz3.ab2@27319>   CMP.b #$20,(a5)
000369AA <AmiBlitz3.ab2@27320>    BNE.s 'll10
000369AC <AmiBlitz3.ab2@27321>   ADDQ.l #1,a5
000369B0 <AmiBlitz3.ab2@27322> BRA.s 'll21
000369B4 <AmiBlitz3.ab2@27325>   CMP.b #";",(a5)
000369B8 <AmiBlitz3.ab2@27326>   BNE.s 'll20
000369BA <AmiBlitz3.ab2@27329>   TST.b (a5)+
000369BE <AmiBlitz3.ab2@27330>   BEQ.s 'll23
000369C2 <AmiBlitz3.ab2@27331> BRA.s 'll25
000369C4 <AmiBlitz3.ab2@27334>   SUBQ.l #1,a5
000369C6 <AmiBlitz3.ab2@27337> RTS
000369CA <AmiBlitz3.ab2@27341>   MOVEM.l a2/d2,-(a7)
000369CC <AmiBlitz3.ab2@27342>   MOVEQ #0,d2
000369D2 <AmiBlitz3.ab2@27343>   LEA ptr_parameterstore,a0
000369D8 <AmiBlitz3.ab2@27344>   LEA chartab,a2
000369DA <AmiBlitz3.ab2@27347>   MOVE.b (a5),d0
000369DE <AmiBlitz3.ab2@27348>   TST.b 0(a2,d0)
000369E2 <AmiBlitz3.ab2@27349>   BNE 'l10
000369E4 <AmiBlitz3.ab2@27350>   ADDQ.l #1,a5
000369E6 <AmiBlitz3.ab2@27351>   MOVE.b d0,(a0)+
000369E8 <AmiBlitz3.ab2@27352>   ADDQ.l #1,d2
000369EC <AmiBlitz3.ab2@27353> BRA fc2
000369EE <AmiBlitz3.ab2@27356>   CLR.b (a0)+
000369F4 <AmiBlitz3.ab2@27357>   JSR findlabel2
000369F6 <AmiBlitz3.ab2@27358>   MOVE.l a2,a0
000369FA <AmiBlitz3.ab2@27359>   MOVEM.l (a7)+,a2/d2
000369FC <AmiBlitz3.ab2@27360> RTS
000369FE <AmiBlitz3.ab2@27364>   TST.l d0
00036A02 <AmiBlitz3.ab2@27365>   BNE 'l10
00036A08 <AmiBlitz3.ab2@27366>     MOVE.l #syntax_,-(a7)
00036A0E <AmiBlitz3.ab2@27367> JMP handle_compileerror
00036A14 <AmiBlitz3.ab2@27370>   CMP.l #1,d0
00036A18 <AmiBlitz3.ab2@27371>   BNE 'l20
00036A1E <AmiBlitz3.ab2@27372>     MOVE.l #overflow,-(a7)
00036A24 <AmiBlitz3.ab2@27373> JMP handle_compileerror
00036A26 <AmiBlitz3.ab2@27376>   ADD.l a2,d0
00036A28 <AmiBlitz3.ab2@27377>   MOVE.l d0,-(a7)
00036A2E <AmiBlitz3.ab2@27378> JMP handle_compileerror
00036A34 <AmiBlitz3.ab2@27382>   JMP _return
00036A3A <AmiBlitz3.ab2@27383>   JMP _return
00036A40 <AmiBlitz3.ab2@27384>   JMP _return
00036A46 <AmiBlitz3.ab2@27385>   JMP _return
00036A4C <AmiBlitz3.ab2@27386>   JMP _return
00036A52 <AmiBlitz3.ab2@27387>   JMP _return
00036A58 <AmiBlitz3.ab2@27388>   JMP _return
00036A5E <AmiBlitz3.ab2@27389>   JMP _return
00036A64 <AmiBlitz3.ab2@27390>   JMP _return
00036A6A <AmiBlitz3.ab2@27391>   JMP _return
00036A70 <AmiBlitz3.ab2@27392>   JMP Atokejsr
00036A76 <AmiBlitz3.ab2@27393>   JMP writeinit
00036A7C <AmiBlitz3.ab2@27394>   JMP macroexecute
00036A82 <AmiBlitz3.ab2@27395>   JMP findnext
00036A88 <AmiBlitz3.ab2@27396>   JMP replacelib
00036A8E <AmiBlitz3.ab2@27397>   JMP findconstant2
00036A94 <AmiBlitz3.ab2@27398>   JMP findchar                                             ;char in d1
00036A9A <AmiBlitz3.ab2@27399>   JMP stripspaces
00036AA0 <AmiBlitz3.ab2@27400>   JMP calc                                                 ;d0 varmode
00036AA6 <AmiBlitz3.ab2@27401>   JMP error
00036AAC <AmiBlitz3.ab2@27402>   JMP writelong                                            ;d1 value
00036AB2 <AmiBlitz3.ab2@27403>   JMP writeword                                            ;d1 value
00036AB8 <AmiBlitz3.ab2@27404>   JMP writebyte                                            ;d1 value
00036ABE <AmiBlitz3.ab2@27405> JMP exit
00036AC2 <AmiBlitz3.ab2@27409>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00036AC4 <AmiBlitz3.ab2@27412>   fast            Dc.w 0
00036AC6 <AmiBlitz3.ab2@27413>   fpu             Dc.w 0
00036AC8 <AmiBlitz3.ab2@27414>   newsyntax       Dc.w 0
00036AC9 <AmiBlitz3.ab2@27416>   optistring      Dc.b 0
00036ACA <AmiBlitz3.ab2@27417>   optistring2     Dc.b 0
00036ACB <AmiBlitz3.ab2@27418>   optiarray       Dc.b 0
00036ACC <AmiBlitz3.ab2@27419>   quickadd        Dc.b 0
00036ACE <AmiBlitz3.ab2@27420>   newmode         Dc.w 0
00036AD0 <AmiBlitz3.ab2@27421>   mode            Dc.w 0
00036AD2 <AmiBlitz3.ab2@27422>   string1         Dc.w 0
00036AD4 <AmiBlitz3.ab2@27423>   load_var_size   Dc.w 0
00036AD6 <AmiBlitz3.ab2@27424>   load_var_reg    Dc.w 0
00036ADA <AmiBlitz3.ab2@27425>   load_var_addr   Dc.l 0
00036ADC <AmiBlitz3.ab2@27426>   imm_size        Dc.w 0
00036ADE <AmiBlitz3.ab2@27427>   imm_reg         Dc.w 0
00036AE2 <AmiBlitz3.ab2@27428>   imm_addr        Dc.l 0
00036AE3 <AmiBlitz3.ab2@27429>   iee             Dc.b 0
00036AE4 <AmiBlitz3.ab2@27430>   _dcb            Dc.b 0
00036AE8 <AmiBlitz3.ab2@27431>   nohunkoffset    Dc.l 0
00036AEC <AmiBlitz3.ab2@27434> teddata:        Dc.l tokens
00036AF0 <AmiBlitz3.ab2@27435>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00036AF4 <AmiBlitz3.ab2@27436>                 Dc.l read_xtrafile
00036AF8 <AmiBlitz3.ab2@27437>                 Dc.l write_xtrafile
00036AFC <AmiBlitz3.ab2@27438>                 Dc.l call_menuentry                        ; compile AND RUN ?
00036B00 <AmiBlitz3.ab2@27439>                 Dc.l 0
00036B04 <AmiBlitz3.ab2@27440>                 Dc.b ":",34,".;"
00036B08 <AmiBlitz3.ab2@27441>                 Dc.l "NEW1"
00036B0C <AmiBlitz3.ab2@27442>                 Dc.l newtypebase
00036B10 <AmiBlitz3.ab2@27443> realconstbase:  Dc.l labelbase
00036B14 <AmiBlitz3.ab2@27444> deflib          Dc.l 0
00036B18 <AmiBlitz3.ab2@27445> incd            Dc.l 0
00036B1C <AmiBlitz3.ab2@27446>                 Dc.l 0
00036B20 <AmiBlitz3.ab2@27447>                 Dc.l 0
00036B24 <AmiBlitz3.ab2@27448>                 Dc.l 0
00036B26 <AmiBlitz3.ab2@27449> _return         RTS
00036B27 <AmiBlitz3.ab2@27450>                 Dc.b 0
00036F27 <AmiBlitz3.ab2@27451> chartab2        Ds.l 256
00036F2B <AmiBlitz3.ab2@27452> codeend         Dc.l 0
00036F2F <AmiBlitz3.ab2@27453> hunkoffsetnum   Dc.l 0
00036F33 <AmiBlitz3.ab2@27454> chipsize        Dc.l 0
00036F37 <AmiBlitz3.ab2@27455> bsssize         Dc.l 0
00036F3B <AmiBlitz3.ab2@27456> bssstart        Dc.l -1
00036F3F <AmiBlitz3.ab2@27457> bssend          Dc.l -1
00036F43 <AmiBlitz3.ab2@27458> chipstart       Dc.l -1
00036F47 <AmiBlitz3.ab2@27459> chipend         Dc.l -1
00036F48 <AmiBlitz3.ab2@27460> bssmode         Dc.b 0
00036F49 <AmiBlitz3.ab2@27461> chipmode        Dc.b 0
00036F4A <AmiBlitz3.ab2@27462> newhunk         Dc.b 0
00036F4E <AmiBlitz3.ab2@27463> bssnum          Dc.l 0
00036F52 <AmiBlitz3.ab2@27464> chipnum         Dc.l 0
00036F56 <AmiBlitz3.ab2@27465> lastinstruction Dc.l 0
00036F5A <AmiBlitz3.ab2@27466> lastinstructionaddr Dc.l 0
00036F6E <AmiBlitz3.ab2@27467> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00036F72 <AmiBlitz3.ab2@27468> tstsize1b:      Ds.l 1
00036F76 <AmiBlitz3.ab2@27469> bsssize2        Dc.l 1
00036F7A <AmiBlitz3.ab2@27470>                 Dc.l $03E9
00036F7E <AmiBlitz3.ab2@27471> tstsize2b:      Dc.l $100
00036F92 <AmiBlitz3.ab2@27472> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00036F96 <AmiBlitz3.ab2@27473> tstsize1c:      Ds.l 1
00036F9A <AmiBlitz3.ab2@27474> bsssize3        Dc.l 1
00036F9E <AmiBlitz3.ab2@27475> chipsize2       Dc.l 1
00036FA2 <AmiBlitz3.ab2@27476>                 Dc.l $3e9
00036FA6 <AmiBlitz3.ab2@27477> tstsize2c       Dc.l 0
00036FB6 <AmiBlitz3.ab2@27478> hunkend         Dc.l $3f2,$3eb,0,$3f2
00036FC6 <AmiBlitz3.ab2@27479> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00036FCD <AmiBlitz3.ab2@27480> strcpy          Dc.b "strcpy",0
00036FD4 <AmiBlitz3.ab2@27481> strcmp          Dc.b "strcmp",0
00036FDB <AmiBlitz3.ab2@27482> strvar          Dc.b "strvar",0
00036FE0 <AmiBlitz3.ab2@27483> qmul            Dc.b "qmul",0
00036FE5 <AmiBlitz3.ab2@27484> qdiv            Dc.b "qdiv",0
00036FEC <AmiBlitz3.ab2@27485> _MaxLen         Dc.b "maxlen",0
00036FF1 <AmiBlitz3.ab2@27486> notf            Dc.b "????",0
00037014 <AmiBlitz3.ab2@27488> errtext         Dc.b "only reg addressing Mode supported",0
0003703E <AmiBlitz3.ab2@27489> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00037080 <AmiBlitz3.ab2@27490> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00037082 <AmiBlitz3.ab2@27491> peeksize        Dc.w 0
00037086 <AmiBlitz3.ab2@27493> mainstart       Dc.l 0
00037087 <AmiBlitz3.ab2@27495> infunctioncode  Dc.b 0
00037089 <AmiBlitz3.ab2@27496> regnumstore     Dc.w 0
000370B6 <AmiBlitz3.ab2@27497>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000370BE <AmiBlitz3.ab2@27498> testcode        Dc.b "print i",0
00037122 <AmiBlitz3.ab2@27499>                 Ds.b 100
00037130 <AmiBlitz3.ab2@27500> devo            Dc.b "developobject",0 : Even
00037142 <AmiBlitz3.ab2@27501> autostorename   Dc.b "__autoconstantnum",0
0003714C <AmiBlitz3.ab2@27502> _include        Dc.b "__include",0
00037154 <AmiBlitz3.ab2@27503> _debug          Dc.b "__debug",0
00037158 <AmiBlitz3.ab2@27504> unusedfunc      Dc.l 0
0003715A <AmiBlitz3.ab2@27508> MOVE.l a0,d0
00037184 <AmiBlitz3.ab2@27509> !basic
00037188 <AmiBlitz3.ab2@27510> *olderror.l= PutD0
000371E2 <AmiBlitz3.ab2@27511> 
0003727E <AmiBlitz3.ab2@27512> 
00037292 <AmiBlitz3.ab2@27513>         If Peek.l (?beforeparameterfetch)
000372A8 <AmiBlitz3.ab2@27514>           MaxLen detokenline.s = 65536
000372EA <AmiBlitz3.ab2@27515>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000372FA <AmiBlitz3.ab2@27516>          *tn.preprocessor = Peek.l(?include_preprocessor)
00037324 <AmiBlitz3.ab2@27517>           written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0003734C <AmiBlitz3.ab2@27518>           If written>0 Then Poke.b &detokenline+written,0
00037376 <AmiBlitz3.ab2@27519>           sourceLineText.s = Peek.s(&detokenline)
0003737C <AmiBlitz3.ab2@27520>         Else
000373A4 <AmiBlitz3.ab2@27521>           sourceLineText = "NULL"
000373F6 <AmiBlitz3.ab2@27523> error$=error$+sourceLineText
000373FC <AmiBlitz3.ab2@27524> GetD0 &error$
0003741A <AmiBlitz3.ab2@27525> !asm
0003741C <AmiBlitz3.ab2@27526> MOVE.l d0,a0
0003741E <AmiBlitz3.ab2@27527> RTS
00037420 <AmiBlitz3.ab2@27531>   MOVE.l a0,-(a7)
00037422 <AmiBlitz3.ab2@27532>   MOVE.l a0,d0
00037424 <AmiBlitz3.ab2@27533>   MOVE.l a5,a0                                             ;macro title
0003744E <AmiBlitz3.ab2@27534>   !basic
00037452 <AmiBlitz3.ab2@27535>   i = PutD0
00037454 <AmiBlitz3.ab2@27536>   MOVEQ #20,d0
00037456 <AmiBlitz3.ab2@27539>     MOVE.b -(a0),d1
0003745A <AmiBlitz3.ab2@27540>     BEQ 'l1
0003745E <AmiBlitz3.ab2@27541>     CMP.b #":",d1
00037462 <AmiBlitz3.ab2@27542>     BEQ 'l1
00037464 <AmiBlitz3.ab2@27543>     SUBQ.l #1,d0
00037468 <AmiBlitz3.ab2@27544>     BNE 'l2
0003746A <AmiBlitz3.ab2@27547>   ADDQ #1,a0
0003746C <AmiBlitz3.ab2@27548>   MOVE.l a0,d0
00037470 <AmiBlitz3.ab2@27549>   i2.l = PutD0
0003748C <AmiBlitz3.ab2@27550>   If Peek.w (?ininclude)>0
000374E6 <AmiBlitz3.ab2@27551>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000374F6 <AmiBlitz3.ab2@27552>     errorline.l = Peek.l(?includeline);-1
0003751E <AmiBlitz3.ab2@27553>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00037548 <AmiBlitz3.ab2@27554>     errorfile.s = Peek.s(?includetemp2)
0003754E <AmiBlitz3.ab2@27555>   Else
00037586 <AmiBlitz3.ab2@27556>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
0003759C <AmiBlitz3.ab2@27557>     errorline.l = Peek.l(?compilelinecounter) + 1
000375D0 <AmiBlitz3.ab2@27558>     errorfile.s = cli_sourcefile
000375DA <AmiBlitz3.ab2@27561>   If i
0003767E <AmiBlitz3.ab2@27562>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00037684 <AmiBlitz3.ab2@27563>   Else
000376AC <AmiBlitz3.ab2@27564>     errortext.s = "???"
0003781E <AmiBlitz3.ab2@27567>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," <",errorfile,"@",errorline,">\\1b[0m ",errortext
0003783C <AmiBlitz3.ab2@27571>   !asm
0003783E <AmiBlitz3.ab2@27572>   MOVE.l (a7)+,a0
00037840 <AmiBlitz3.ab2@27573> RTS
00037842 <AmiBlitz3.ab2@27577>   MOVE.l a0,-(a7)
00037844 <AmiBlitz3.ab2@27578>   MOVE.l a0,d0
00037846 <AmiBlitz3.ab2@27579>   MOVE.l a5,a0                                             ;macro title
00037870 <AmiBlitz3.ab2@27580>   !basic
00037874 <AmiBlitz3.ab2@27581>   i = PutD0
00037876 <AmiBlitz3.ab2@27582>   MOVEQ #20,d0
00037878 <AmiBlitz3.ab2@27585>     MOVE.b -(a0),d1
0003787C <AmiBlitz3.ab2@27586>     BEQ 'l1
00037880 <AmiBlitz3.ab2@27587>     CMP.b #":",d1
00037884 <AmiBlitz3.ab2@27588>     BEQ 'l1
00037886 <AmiBlitz3.ab2@27589>     SUBQ.l #1,d0
0003788A <AmiBlitz3.ab2@27590>     BNE 'l2
0003788C <AmiBlitz3.ab2@27593>   ADDQ #1,a0
0003788E <AmiBlitz3.ab2@27594>   MOVE.l a0,d0
00037892 <AmiBlitz3.ab2@27595>   i2.l = PutD0
00037916 <AmiBlitz3.ab2@27596>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
0003792A <AmiBlitz3.ab2@27597>   If fid <> -1
00037946 <AmiBlitz3.ab2@27598>     If Peek.w (?ininclude)>0
000379A0 <AmiBlitz3.ab2@27599>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
000379A6 <AmiBlitz3.ab2@27600>     Else
000379D2 <AmiBlitz3.ab2@27601>       Poke$(?includetemp2),""
000379FC <AmiBlitz3.ab2@27603>     a$ = Peek$(?includetemp2)
00037A6E <AmiBlitz3.ab2@27604>     x$ = Replace$(Peek$(i),"\\0a","\n")
00037AA0 <AmiBlitz3.ab2@27605>     file_WriteLine{fid,x$}
00037AEA <AmiBlitz3.ab2@27606>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00037B16 <AmiBlitz3.ab2@27607>     If a$
00037B48 <AmiBlitz3.ab2@27608>       file_WriteLine{fid,a$}
00037B92 <AmiBlitz3.ab2@27609>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00037BBA <AmiBlitz3.ab2@27610>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00037BC0 <AmiBlitz3.ab2@27611>     Else
00037BE6 <AmiBlitz3.ab2@27612>       file_WriteLine{fid,"none"}
00037C16 <AmiBlitz3.ab2@27614>     file_WriteLine{fid,Peek$(i2)}
00037C6C <AmiBlitz3.ab2@27615>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00037CB6 <AmiBlitz3.ab2@27616>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00037CC0 <AmiBlitz3.ab2@27617>     file_Close{fid}
00037CDE <AmiBlitz3.ab2@27619>   !asm
00037CE0 <AmiBlitz3.ab2@27620>   MOVE.l (a7)+,a0
00037CE2 <AmiBlitz3.ab2@27621> RTS
00037D0C <AmiBlitz3.ab2@27625>   !basic
00037D10 <AmiBlitz3.ab2@27626>   progress.l     = PutD0
00037D22 <AmiBlitz3.ab2@27627>   total.l        = Peek.w(?progressbar_width)
00037D40 <AmiBlitz3.ab2@27628>   calcpro        = (progress * 100) / total +1
00037D52 <AmiBlitz3.ab2@27629>   pass.l         = Peek.w(?pass)
00037D64 <AmiBlitz3.ab2@27630>   typ.l          = Peek.w(?compiler_job)
00037D82 <AmiBlitz3.ab2@27633> If (pass><pass_old OR typ><typ_old)
00037D88 <AmiBlitz3.ab2@27634>     pass_old = pass
00037D8E <AmiBlitz3.ab2@27635>     typ_old  = typ
00037D94 <AmiBlitz3.ab2@27636>     update_comstatus_gui = True
00037DA6 <AmiBlitz3.ab2@27637>     If typ=0
00037E86 <AmiBlitz3.ab2@27638>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00037E8E <AmiBlitz3.ab2@27639>       calcpro = 0  ; set gauge to 0
00037EA0 <AmiBlitz3.ab2@27641>     If typ=1
00037F80 <AmiBlitz3.ab2@27642>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00037F88 <AmiBlitz3.ab2@27643>       calcpro = 0  ; set gauge to 0
00037FDE <AmiBlitz3.ab2@27645>     If cli_verbose>=2 Then NPrint comstatusstr
00037FEC <AmiBlitz3.ab2@27648>   If (calcpro >< calcpro_old)
00038040 <AmiBlitz3.ab2@27649>     If cli_verbose>=3 Then NPrint calcpro,"% compiled..."
00038046 <AmiBlitz3.ab2@27650>     calcpro_old = calcpro
0003804C <AmiBlitz3.ab2@27651>     update_comstatus_gui = True
00038066 <AmiBlitz3.ab2@27654>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00038084 <AmiBlitz3.ab2@27655>     !asm
000380B6 <AmiBlitz3.ab2@27656> 
000380E0 <AmiBlitz3.ab2@27657>     !basic
000380E6 <AmiBlitz3.ab2@27658>     update_comstatus_gui  = False ; because we update the gui
00038104 <AmiBlitz3.ab2@27660>   !asm
00038106 <AmiBlitz3.ab2@27661> RTS
0003810C <AmiBlitz3.ab2@27666>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00038112 <AmiBlitz3.ab2@27667>   LEA maxobjects_value,A3                                  ;current value
00038118 <AmiBlitz3.ab2@27668>   MOVEA.l libpointer,A2
0003811C <AmiBlitz3.ab2@27671>   CMPA.w #$0,A2
00038120 <AmiBlitz3.ab2@27672>   BEQ.w menu4c__igotb
00038122 <AmiBlitz3.ab2@27673>   MOVEA.l A2,A1
00038126 <AmiBlitz3.ab2@27674>   ADDA.l $12(A1),A1
0003812A <AmiBlitz3.ab2@27675>   TST.w -$2(A1)
0003812E <AmiBlitz3.ab2@27676>   BEQ.w JL_0_FFF6b
00038130 <AmiBlitz3.ab2@27677>   SUBQ.w #1,D5
00038134 <AmiBlitz3.ab2@27678>   BMI.w JL_0_FFFCb
00038136 <AmiBlitz3.ab2@27681>   MOVEA.l (A2),A2
0003813A <AmiBlitz3.ab2@27682> BRA.w JL_0_FFDAb
0003813E <AmiBlitz3.ab2@27685>   MOVE.w (A3),-$4(A1)
00038140 <AmiBlitz3.ab2@27688> RTS
00038146 <AmiBlitz3.ab2@27692>   MOVE.w debugnest,d0
0003814C <AmiBlitz3.ab2@27693>   LEA storedebugmode, a0
00038154 <AmiBlitz3.ab2@27694>   MOVE.b 0(a0,d0.w),debugmode
0003815A <AmiBlitz3.ab2@27695>   TST.w debugnest
0003815E <AmiBlitz3.ab2@27696>   BEQ JUMP_unpairrunerrs
00038164 <AmiBlitz3.ab2@27697>   SUBQ.w #1,debugnest
00038166 <AmiBlitz3.ab2@27698> RTS
0003816C <AmiBlitz3.ab2@27701> JMP runerrsoverflow
00038172 <AmiBlitz3.ab2@27704> JMP unpairrunerrs
0003817A <AmiBlitz3.ab2@27708>   BCHG #$7,use_debugger
00038182 <AmiBlitz3.ab2@27710>   BTST #$7,use_debugger
00038186 <AmiBlitz3.ab2@27711>   BNE 'debugon
0003818C <AmiBlitz3.ab2@27712>   CLR.w debugmode
00038190 <AmiBlitz3.ab2@27713> BRA.b 'debugoff
00038196 <AmiBlitz3.ab2@27716>   SNE debugmode
00038198 <AmiBlitz3.ab2@27719>   MOVE.l a0,-(a7)
000381D0 <AmiBlitz3.ab2@27722>   !ComData_SetB{comByte_DebugMode,debugmode}
000381D2 <AmiBlitz3.ab2@27727>   MOVE.l (a7)+,a0
000381D4 <AmiBlitz3.ab2@27728> RTS
000381DC <AmiBlitz3.ab2@27733>   BTST #$7,use_debugger
000381E0 <AmiBlitz3.ab2@27734>   BNE 'debugon
000381E6 <AmiBlitz3.ab2@27735>   CLR.w debugmode
000381EA <AmiBlitz3.ab2@27736> BRA.b 'debugoff
000381F0 <AmiBlitz3.ab2@27739>   SNE debugmode
000381F2 <AmiBlitz3.ab2@27742> RTS
000381F8 <AmiBlitz3.ab2@27746>   ADDQ.w #1,debugnest
000381FE <AmiBlitz3.ab2@27747>   MOVE.w debugnest,d0
00038202 <AmiBlitz3.ab2@27748>   CMP.w #18,d0
00038206 <AmiBlitz3.ab2@27749>    BGE JUMP_runerrsoverflow
0003820C <AmiBlitz3.ab2@27750>   LEA storedebugmode, a0
00038214 <AmiBlitz3.ab2@27751>   MOVE.b debugmode,0( a0,d0.w)
0003821A <AmiBlitz3.ab2@27754>   SF debugmode
0003821C <AmiBlitz3.ab2@27755> RTS
0003829C <AmiBlitz3.ab2@27758> usedpath:  Ds.l 32
000382A0 <AmiBlitz3.ab2@27762>   BEQ.w JUMP_syntaxerr
000382A6 <AmiBlitz3.ab2@27763>   LEA lastpath,A0
000382AA <AmiBlitz3.ab2@27764>   MOVEM.l a0-a1/d0,-(a7)
000382B0 <AmiBlitz3.ab2@27765>   LEA lastpath2,a1
000382B2 <AmiBlitz3.ab2@27768>     MOVE.b (a0)+,(a1)+
000382B6 <AmiBlitz3.ab2@27769>   BNE 'l2
000382BA <AmiBlitz3.ab2@27770>   MOVEM.l (a7)+,a0-a1/d0
000382BE <AmiBlitz3.ab2@27771>   LEA usedpath(PC),A0
000382C2 <AmiBlitz3.ab2@27772>   MOVEM.l a0-a1/d0,-(a7)
000382C8 <AmiBlitz3.ab2@27773>   LEA lastpath,a1
000382CA <AmiBlitz3.ab2@27776>     MOVE.b (a0)+,(a1)+
000382CE <AmiBlitz3.ab2@27777>   BNE 'l1
000382D2 <AmiBlitz3.ab2@27778>   MOVEM.l (a7)+,a0-a1/d0
000382D4 <AmiBlitz3.ab2@27781>   TST.w D0
000382D8 <AmiBlitz3.ab2@27782>    BMI.w JUMP_syntaxerr
000382DA <AmiBlitz3.ab2@27783>   MOVE.b D0,(A0)+
000382DE <AmiBlitz3.ab2@27784>   BSR.w JUMP_get1bytemain
000382E2 <AmiBlitz3.ab2@27785>    BNE.w JL_0_4AA8
000382E6 <AmiBlitz3.ab2@27786>   MOVE.b #$2,(A0)
000382E8 <AmiBlitz3.ab2@27787> RTS
000382EC <AmiBlitz3.ab2@27791>   BEQ.w JUMP_syntaxerr
000382F2 <AmiBlitz3.ab2@27792>   LEA path2,A0
000382F4 <AmiBlitz3.ab2@27802>   TST.w D0
000382F8 <AmiBlitz3.ab2@27803>    BMI.w JUMP_syntaxerr
000382FA <AmiBlitz3.ab2@27804>   MOVE.b D0,(A0)+
000382FE <AmiBlitz3.ab2@27805>   BSR.w JUMP_get1bytemain
00038302 <AmiBlitz3.ab2@27806>    BNE.w JL_0_4AA8b
00038306 <AmiBlitz3.ab2@27807>   MOVE.b #$2,(A0)
00038308 <AmiBlitz3.ab2@27808> RTS
0003830E <AmiBlitz3.ab2@27817> JMP errormsg_reg
00038318 <AmiBlitz3.ab2@27821>   MOVE.l #$f22d6780,fpucodeglobal
00038322 <AmiBlitz3.ab2@27822>   MOVE.l #$f22c6780,fpucodelocal
00038328 <AmiBlitz3.ab2@27823>   LEA regtable,a0
00038332 <AmiBlitz3.ab2@27824>   MOVE.l #7,maxregs
00038334 <AmiBlitz3.ab2@27827>   MOVE.l (a0),d0
00038338 <AmiBlitz3.ab2@27828>   BEQ 'e1
0003833A <AmiBlitz3.ab2@27829>   CLR.l (a0)
0003833E <AmiBlitz3.ab2@27830>   MOVE.w 4(a0),d0
00038348 <AmiBlitz3.ab2@27831>   MOVE.l fpucodeglobal,fpucode
0003834C <AmiBlitz3.ab2@27832>   TST.w 6(a0)
00038350 <AmiBlitz3.ab2@27833>   BEQ 'glob
0003835A <AmiBlitz3.ab2@27834>   MOVE.l fpucodelocal,fpucode
00038360 <AmiBlitz3.ab2@27837>   MOVE.l fpucode,d1
00038366 <AmiBlitz3.ab2@27838>   JSR writelong
00038370 <AmiBlitz3.ab2@27839>   SUB.l #$80,fpucodelocal
0003837A <AmiBlitz3.ab2@27840>   SUB.l #$80,fpucodeglobal
0003837C <AmiBlitz3.ab2@27841>   MOVE.w d0,d1
00038382 <AmiBlitz3.ab2@27842>   JSR writeword
00038384 <AmiBlitz3.ab2@27843>   ADDQ #8,a0
00038388 <AmiBlitz3.ab2@27844> BRA 'again
0003838A <AmiBlitz3.ab2@27847> RTS
00038390 <AmiBlitz3.ab2@27854> JMP notypeerr
00038396 <AmiBlitz3.ab2@27857> JMP illtypeerr
000383A0 <AmiBlitz3.ab2@27860>   MOVE.l #$f22d4780,fpucodeglobal
000383AA <AmiBlitz3.ab2@27861>   MOVE.l #$f22c4780,fpucodelocal
000383B0 <AmiBlitz3.ab2@27862>   LEA regtable,a0
000383B2 <AmiBlitz3.ab2@27863>   TST.l (a0)
000383B6 <AmiBlitz3.ab2@27864>    BNE JUMP_errormsg_reg
000383B8 <AmiBlitz3.ab2@27865>   MOVE.l d7,-(a7)
000383BA <AmiBlitz3.ab2@27866>   SUBQ.l #1,a5
000383C0 <AmiBlitz3.ab2@27869>   JSR getparameter2
000383C4 <AmiBlitz3.ab2@27870>   BEQ.w 'nopar
000383CA <AmiBlitz3.ab2@27871>   MOVE.w d0,lastchar
000383D0 <AmiBlitz3.ab2@27872>   JSR findvariable
000383D4 <AmiBlitz3.ab2@27873>   BNE 'islocal
000383DE <AmiBlitz3.ab2@27874>   MOVE.l fpucodeglobal,fpucode
000383E8 <AmiBlitz3.ab2@27875>   MOVE.l #3,maxregs
000383EA <AmiBlitz3.ab2@27876>   MOVEQ #0,d7
000383F2 <AmiBlitz3.ab2@27879>   CMP.l #newtype_float,$a(a2)                              ;is float type
000383F6 <AmiBlitz3.ab2@27880>    BEQ 'doit
000383FE <AmiBlitz3.ab2@27881>   CMP.l #newtype_double,$a(a2)
00038402 <AmiBlitz3.ab2@27882>    BNE JUMP_illtypeerr
00038408 <AmiBlitz3.ab2@27885>   LEA regtable,a0
0003840A <AmiBlitz3.ab2@27886>   MOVEQ #0,d0
0003840C <AmiBlitz3.ab2@27889>   TST.l (a0)
00038410 <AmiBlitz3.ab2@27890>    BEQ 'store
00038412 <AmiBlitz3.ab2@27891>   ADDQ.l #4,d0
00038414 <AmiBlitz3.ab2@27892>   ADDQ.l #8,a0
0003841A <AmiBlitz3.ab2@27893>   CMP.l #16,d0
0003841E <AmiBlitz3.ab2@27894>    BCS 'loop
00038428 <AmiBlitz3.ab2@27895>   MOVE.l #2,maxregs
0003842E <AmiBlitz3.ab2@27896>   CMP.l #20,d0
00038432 <AmiBlitz3.ab2@27897>    BCS 'loop
0003843C <AmiBlitz3.ab2@27898>   MOVE.l #1,maxregs
00038442 <AmiBlitz3.ab2@27899>   CMP.l #24,d0
00038446 <AmiBlitz3.ab2@27900>    BCS 'loop
0003844C <AmiBlitz3.ab2@27901> JMP toovarerr
00038452 <AmiBlitz3.ab2@27904>   TST.b fpu
00038456 <AmiBlitz3.ab2@27905>    BEQ 'nofpu
00038458 <AmiBlitz3.ab2@27906>   MOVE.l a2,(a0)
0003845E <AmiBlitz3.ab2@27907>   MOVE.w 4(a2),4(a0)
00038462 <AmiBlitz3.ab2@27908>   MOVE.w d7,6(a0)
00038468 <AmiBlitz3.ab2@27909>   MOVE.l fpucode,d1
00038472 <AmiBlitz3.ab2@27910>   SUB.l #$80,fpucodeglobal
0003847C <AmiBlitz3.ab2@27911>   SUB.l #$80,fpucodelocal
00038482 <AmiBlitz3.ab2@27912>   JSR writelong
00038486 <AmiBlitz3.ab2@27913>   MOVE.w 4(a2),d1
0003848C <AmiBlitz3.ab2@27914>   JSR writeword
00038492 <AmiBlitz3.ab2@27917>   MOVE.w lastchar,d0
00038496 <AmiBlitz3.ab2@27918>   CMP.w #":",d0
0003849A <AmiBlitz3.ab2@27919>    BEQ 'nopar
0003849C <AmiBlitz3.ab2@27920>   TST.w d0
000384A0 <AmiBlitz3.ab2@27921>    BEQ 'nopar
000384A4 <AmiBlitz3.ab2@27922>   CMP.w #",",d0
000384A8 <AmiBlitz3.ab2@27923>   BNE JUMP_syntaxerr
000384AC <AmiBlitz3.ab2@27924> BRA 'l2
000384AE <AmiBlitz3.ab2@27927>    MOVE.l (a7)+,d7
000384B0 <AmiBlitz3.ab2@27928> RTS
000384B2 <AmiBlitz3.ab2@27931>   MOVEQ #1,d7
000384BA <AmiBlitz3.ab2@27932>   MOVE.b #1,newvariable
000384C0 <AmiBlitz3.ab2@27933>   LEA firstlocal,a2
000384C6 <AmiBlitz3.ab2@27934>   JSR findvariable
000384CC <AmiBlitz3.ab2@27935>   CLR.b newvariable
000384D2 <AmiBlitz3.ab2@27936>   CMP.l #-1,d0
000384D6 <AmiBlitz3.ab2@27937>   BEQ.w JUMP_notypeerr2
000384E0 <AmiBlitz3.ab2@27938>   MOVE.l fpucodelocal,fpucode
000384E4 <AmiBlitz3.ab2@27939> BRA 'go
000384E8 <AmiBlitz3.ab2@27942>   CMP.b #".",d0
000384EC <AmiBlitz3.ab2@27943>    BNE 'l1
000384F0 <AmiBlitz3.ab2@27944>   BSR JUMP_get1bytemain
000384F4 <AmiBlitz3.ab2@27945>   BSR JUMP_get1bytemain
000384F8 <AmiBlitz3.ab2@27948>   ORI .b #$20,d0
000384FC <AmiBlitz3.ab2@27949>   CMP.b #"d",d0
00038500 <AmiBlitz3.ab2@27950>    BNE JUMP_illeaerr
00038504 <AmiBlitz3.ab2@27951>   BSR JUMP_get1bytemain
00038508 <AmiBlitz3.ab2@27952>   SUB.b #$30,d0
0003850C <AmiBlitz3.ab2@27953>   CMP.b #$7,d0
00038510 <AmiBlitz3.ab2@27954>    BGT JUMP_syntaxerr
00038514 <AmiBlitz3.ab2@27955>   MOVE.w #$49c0,d1
00038516 <AmiBlitz3.ab2@27956>   ADD.b d0,d1
0003851C <AmiBlitz3.ab2@27957>   JSR writeword
00038520 <AmiBlitz3.ab2@27958>   BSR JUMP_get1bytemain
00038522 <AmiBlitz3.ab2@27959> RTS
00038528 <AmiBlitz3.ab2@27963>   LEA lastpath,a0
0003852C <AmiBlitz3.ab2@27964>   LEA usedpath(PC),A1
0003852E <AmiBlitz3.ab2@27967>     MOVE.b (a0)+,(a1)+
00038532 <AmiBlitz3.ab2@27968>   BNE 'l1
00038538 <AmiBlitz3.ab2@27970>   LEA lastpath2,a0
0003853E <AmiBlitz3.ab2@27971>   LEA lastpath,A1
00038540 <AmiBlitz3.ab2@27974>     MOVE.b (a0)+,(a1)+
00038544 <AmiBlitz3.ab2@27975>   BNE 'l2
00038546 <AmiBlitz3.ab2@27976> RTS
0003854C <AmiBlitz3.ab2@27980>   TST.b objectcount
00038550 <AmiBlitz3.ab2@27981>   BEQ 'l2a
00038556 <AmiBlitz3.ab2@27982> JMP macnesterr
0003855C <AmiBlitz3.ab2@27985>   LEA devo,a0
00038562 <AmiBlitz3.ab2@27986>   ADDQ.b #1,objectcount
00038566 <AmiBlitz3.ab2@27987>   MOVEM.l a1/d2,-(a7)
0003856C <AmiBlitz3.ab2@27988>   LEA ptr_parameterstore,a1
0003856E <AmiBlitz3.ab2@27991>     MOVE.b (a0)+,(a1)+
00038572 <AmiBlitz3.ab2@27992>   BNE 'l1
00038574 <AmiBlitz3.ab2@27994>   MOVEQ #13,d2
0003857A <AmiBlitz3.ab2@27995>   JSR findlabel2
0003857E <AmiBlitz3.ab2@27996>   BNE 'd
00038582 <AmiBlitz3.ab2@27997>   TST.l 8(a2)
00038586 <AmiBlitz3.ab2@27998>   BEQ 'd
0003858C <AmiBlitz3.ab2@27999>   SUBQ.b #1,objectcount
00038590 <AmiBlitz3.ab2@28000>   MOVEM.l (a7)+,a1/d2
00038596 <AmiBlitz3.ab2@28001>   JSR skiprest
0003859E <AmiBlitz3.ab2@28002>   MOVE.b #1,developobject
000385A0 <AmiBlitz3.ab2@28003> RTS
000385A4 <AmiBlitz3.ab2@28006>   MOVEM.l (a7)+,a1/d2
000385AC <AmiBlitz3.ab2@28007>   MOVE.b #1,resdisable
000385B2 <AmiBlitz3.ab2@28010>   CLR.b developobject
000385B8 <AmiBlitz3.ab2@28011> JMP do_Macro
000385BE <AmiBlitz3.ab2@28015> JMP illeaerr
000385C4 <AmiBlitz3.ab2@28019>   CLR.b typecheck
000385CA <AmiBlitz3.ab2@28020>   CLR.b declare
000385D0 <AmiBlitz3.ab2@28021>   CLR.b declare2
000385D4 <AmiBlitz3.ab2@28022>   SUB.b #$30,d0
000385D8 <AmiBlitz3.ab2@28023>   BTST #0,d0
000385DC <AmiBlitz3.ab2@28024>   BEQ 'l1
000385E4 <AmiBlitz3.ab2@28025>   MOVE.b #1,declare
000385E8 <AmiBlitz3.ab2@28028>   BTST #1,d0
000385EC <AmiBlitz3.ab2@28029>   BEQ 'l2
000385F4 <AmiBlitz3.ab2@28030>   MOVE.b #1,declare2
000385F8 <AmiBlitz3.ab2@28033>   BTST #2,d0
000385FC <AmiBlitz3.ab2@28034>   BEQ 'l3
00038604 <AmiBlitz3.ab2@28035>   MOVE.b #1,typecheck
00038608 <AmiBlitz3.ab2@28037>   BSR.w JUMP_get1bytemain
0003860A <AmiBlitz3.ab2@28038> RTS
00038610 <AmiBlitz3.ab2@28041> JMP get1bytemain
0003863A <AmiBlitz3.ab2@28045>   !basic
0003865A <AmiBlitz3.ab2@28047>   FillMem ?residents_table,?residents_table_end-?residents_table,0
00038678 <AmiBlitz3.ab2@28048>   !asm
0003867A <AmiBlitz3.ab2@28049> Return
0003867C <AmiBlitz3.ab2@28054>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003867E <AmiBlitz3.ab2@28055>   ADDQ #1,a5
00038680 <AmiBlitz3.ab2@28056>   MOVE.l a5,-(a7)
000386AA <AmiBlitz3.ab2@28057>   !basic
000386B0 <AmiBlitz3.ab2@28058>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
000386BA <AmiBlitz3.ab2@28059>   If _myD0
000386FA <AmiBlitz3.ab2@28060>     newconst$ = UCase$(Peek.s(_myD0))
00038700 <AmiBlitz3.ab2@28061>   Else
0003873A <AmiBlitz3.ab2@28062>     error{"INTERNAL: invalid pointer in check_newconstants!"}
00038762 <AmiBlitz3.ab2@28063>     nwconst$="xxx"
0003878A <AmiBlitz3.ab2@28065>   condata$ =""
0003879A <AmiBlitz3.ab2@28066>   Poke.b ?skip_bytes,0
000387F6 <AmiBlitz3.ab2@28067>   If Left$(newconst$,2) = "__"
00038850 <AmiBlitz3.ab2@28068>     Select Mid$(newconst$,3,4)
00038874 <AmiBlitz3.ab2@28070>      Case "DATE"
000388CE <AmiBlitz3.ab2@28071>       Select Mid$(newconst$,3,6)
0003890C <AmiBlitz3.ab2@28072>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00038950 <AmiBlitz3.ab2@28073>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003895E <AmiBlitz3.ab2@28074>       End Select
0003896C <AmiBlitz3.ab2@28075>       i.l=SystemDate
00038992 <AmiBlitz3.ab2@28076>       condata$ = Date$ (i)
00038A10 <AmiBlitz3.ab2@28077>       condata$ = Replace$(condata$,"/",".")
00038A3A <AmiBlitz3.ab2@28079>      Case "VER_"
00038A4A <AmiBlitz3.ab2@28082>       actual_version.l = Peek.l(?versioninformation)
00038A5A <AmiBlitz3.ab2@28083>       actual_build.l   = Peek.l(?number_of_builds)
00038A7E <AmiBlitz3.ab2@28085>       Format ""
00038AD8 <AmiBlitz3.ab2@28086>       Select Mid$(newconst$,3,9)
00038AFC <AmiBlitz3.ab2@28088>        Case "VER_MAJOR"
00038B38 <AmiBlitz3.ab2@28089>         condata$ = Str$(actual_version LSR 24)
00038B62 <AmiBlitz3.ab2@28091>        Case "VER_MINOR"
00038BA6 <AmiBlitz3.ab2@28092>         condata$ = Str$((actual_version LSL 8) LSR 24)
00038BD0 <AmiBlitz3.ab2@28094>        Case "VER_PATCH"
00038C14 <AmiBlitz3.ab2@28095>         condata$ = Str$((actual_version LSL 16) LSR 24 )
00038C3E <AmiBlitz3.ab2@28097>        Case "VER_BUILD"
00038C62 <AmiBlitz3.ab2@28098>         Format ""
00038C96 <AmiBlitz3.ab2@28099>         condata$ = Str$(actual_build)
00038C9C <AmiBlitz3.ab2@28101>        Default
00038CC4 <AmiBlitz3.ab2@28102>         condata$ = "{unknown compiler constant}"
00038CD2 <AmiBlitz3.ab2@28104>       End Select
00038CF6 <AmiBlitz3.ab2@28105>       Format ""
00038D06 <AmiBlitz3.ab2@28106>       Poke.b ?skip_bytes,11
00038D30 <AmiBlitz3.ab2@28108>      Case "THIS"
00038D8A <AmiBlitz3.ab2@28109>       Select Mid$(newconst$,3,9)
00038DAE <AmiBlitz3.ab2@28111>        Case "THIS_FUNC"
00038DBE <AmiBlitz3.ab2@28112>         Poke.b ?skip_bytes,15
00038DDE <AmiBlitz3.ab2@28113>         If Peek.l(?currentfunction)<>0
00038E2A <AmiBlitz3.ab2@28114>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
00038E30 <AmiBlitz3.ab2@28115>         Else
00038E58 <AmiBlitz3.ab2@28116>           condata$ = "GLOBAL"
00038E82 <AmiBlitz3.ab2@28119>        Case "THIS_INCL"
00038E92 <AmiBlitz3.ab2@28120>         Poke.b ?skip_bytes,14
00038EB2 <AmiBlitz3.ab2@28121>         If Peek.l(?includetemp2)<>0
00038F00 <AmiBlitz3.ab2@28122>           condata$ = dos_FilePart{Peek$(?includetemp2)}
00038F2A <AmiBlitz3.ab2@28125>        Case "THIS_POIN"
00038F3A <AmiBlitz3.ab2@28126>         Poke.b ?skip_bytes,14
00038F5A <AmiBlitz3.ab2@28127>         If Peek.l(?currentfunction)<>0
00038F88 <AmiBlitz3.ab2@28128>           condata$ = Hex$(Peek.l(?currentfunction))
00038F96 <AmiBlitz3.ab2@28131>       End Select
00038FC0 <AmiBlitz3.ab2@28133>      Case "CODE"
00038FD0 <AmiBlitz3.ab2@28134>       Poke.b ?skip_bytes,10
00039032 <AmiBlitz3.ab2@28135>       If Mid$(newconst$,3,8) = "CODELINE"
0003906E <AmiBlitz3.ab2@28136>         condata$ = Str$(Peek.l(?globallinecount))
0003907C <AmiBlitz3.ab2@28139>     End Select
00039082 <AmiBlitz3.ab2@28141>   Else
000390D6 <AmiBlitz3.ab2@28142>     Select Left$(newconst$,1)
000390FA <AmiBlitz3.ab2@28144>      Case "R"
0003910A <AmiBlitz3.ab2@28145>       Poke.b ?skip_bytes,3
00039182 <AmiBlitz3.ab2@28146>       For i = 1 To Vallong(Mid$(newconst$,2,2))
00039202 <AmiBlitz3.ab2@28147>         condata$ = condata$ + Mid$(newconst$,4,1)
00039212 <AmiBlitz3.ab2@28148>       Next
0003923C <AmiBlitz3.ab2@28150>      Case "N"
0003924C <AmiBlitz3.ab2@28151>       Poke.b ?skip_bytes,1
00039270 <AmiBlitz3.ab2@28152>       condata$ = Chr$(10)
00039276 <AmiBlitz3.ab2@28154>      Default
00039288 <AmiBlitz3.ab2@28155>       char1.b = Peek.b(&newconst$)
000392A0 <AmiBlitz3.ab2@28156>       char2.b = Peek.b(&newconst$+1)
000392AC <AmiBlitz3.ab2@28157>       nibble1.l = -1
000392B8 <AmiBlitz3.ab2@28158>       nibble2.l = -1
000392F6 <AmiBlitz3.ab2@28160>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
00039334 <AmiBlitz3.ab2@28161>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
00039378 <AmiBlitz3.ab2@28163>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
000393BC <AmiBlitz3.ab2@28164>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
00039400 <AmiBlitz3.ab2@28166>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
00039444 <AmiBlitz3.ab2@28167>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003946A <AmiBlitz3.ab2@28169>       If nibble1>=0 AND nibble2>=0
00039480 <AmiBlitz3.ab2@28170>         newchar.l = (nibble1 LSL 4) + (nibble2)
000394A4 <AmiBlitz3.ab2@28171>         condata$ = Chr$(newchar)
000394B4 <AmiBlitz3.ab2@28172>         Poke.b ?skip_bytes,2
000394C2 <AmiBlitz3.ab2@28175>     End Select
00039522 <AmiBlitz3.ab2@28177>   If condata$ = "" AND Peek.b(?skip_bytes)=0
00039648 <AmiBlitz3.ab2@28178>     !cout{"detected unknown const: " + newconst$}
0003967C <AmiBlitz3.ab2@28179>     condata$ = newconst$
00039692 <AmiBlitz3.ab2@28182>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
00039694 <AmiBlitz3.ab2@28183>   MOVE.l d0,d2
00039696 <AmiBlitz3.ab2@28184>   MOVE.l d2,-(a7)
0003969C <AmiBlitz3.ab2@28186>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003969E <AmiBlitz3.ab2@28187>   MOVE.l d0,a0
000396A0 <AmiBlitz3.ab2@28190>     MOVE.b (a0)+,d1
000396A6 <AmiBlitz3.ab2@28191>     JSR pokedata1b
000396AA <AmiBlitz3.ab2@28192>  DBF d2,'l1
000396C8 <AmiBlitz3.ab2@28194>   !asm
000396CA <AmiBlitz3.ab2@28195>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
000396CC <AmiBlitz3.ab2@28196>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
000396CE <AmiBlitz3.ab2@28197>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
000396D4 <AmiBlitz3.ab2@28198>   ADD.l #1,d2
000396DA <AmiBlitz3.ab2@28200>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
000396E0 <AmiBlitz3.ab2@28201>   MOVE.b skip_bytes,D0
000396E2 <AmiBlitz3.ab2@28202>   ADD.l D0,a5
000396E4 <AmiBlitz3.ab2@28203> RTS
000396E8 <AmiBlitz3.ab2@28278> MOVEM.l a3/d1,-(a7)
000396EE <AmiBlitz3.ab2@28280> CLR.b a4a5store
000396F0 <AmiBlitz3.ab2@28281> 'continue: MOVE.b (a3)+,d1
000396F4 <AmiBlitz3.ab2@28282> CMP.b #$15,d1
000396F8 <AmiBlitz3.ab2@28283> BEQ 'find
000396FC <AmiBlitz3.ab2@28284> CMP.b #$14,d1
00039700 <AmiBlitz3.ab2@28285> BEQ 'find
00039704 <AmiBlitz3.ab2@28286> CMP.b #$ff,d1
00039708 <AmiBlitz3.ab2@28287> BNE 'continue
0003970C <AmiBlitz3.ab2@28288> BRA 'notfind
00039712 <AmiBlitz3.ab2@28290> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
00039718 <AmiBlitz3.ab2@28291> JSR writelong
00039720 <AmiBlitz3.ab2@28292> MOVE.b #1,a4a5store
00039724 <AmiBlitz3.ab2@28293> 'notfind: MOVEM.l (a7)+,a3/d1
00039726 <AmiBlitz3.ab2@28294> RTS
0003972C <AmiBlitz3.ab2@28297> TST.b a4a5store
00039730 <AmiBlitz3.ab2@28298> BEQ 'no
00039736 <AmiBlitz3.ab2@28299> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003973C <AmiBlitz3.ab2@28300> JSR writelong
00039742 <AmiBlitz3.ab2@28301> CLR.b a4a5store
00039744 <AmiBlitz3.ab2@28302> 'no RTS
00039744 <internal_commands.ab2@1> INCLUDE "internal_commands.ab2"
00039748 <internal_commands.ab2@13> INCLUDE "internal_commands.ab2"
0003974A <internal_commands.ab2@15> INCLUDE "internal_commands.ab2"
00039752 <internal_commands.ab2@16> INCLUDE "internal_commands.ab2"
0003975E <internal_commands.ab2@17> INCLUDE "internal_commands.ab2"
00039762 <internal_commands.ab2@21> INCLUDE "internal_commands.ab2"
00039764 <internal_commands.ab2@22> INCLUDE "internal_commands.ab2"
00039768 <internal_commands.ab2@23> INCLUDE "internal_commands.ab2"
000397B1 <internal_commands.ab2@24> INCLUDE "internal_commands.ab2"
000397B2 <internal_commands.ab2@25> INCLUDE "internal_commands.ab2"
000397B6 <internal_commands.ab2@28> INCLUDE "internal_commands.ab2"
000397B8 <internal_commands.ab2@29> INCLUDE "internal_commands.ab2"
000397BC <internal_commands.ab2@30> INCLUDE "internal_commands.ab2"
000397D8 <internal_commands.ab2@31> INCLUDE "internal_commands.ab2"
000397DC <internal_commands.ab2@35> INCLUDE "internal_commands.ab2"
000397DE <internal_commands.ab2@36> INCLUDE "internal_commands.ab2"
000397E2 <internal_commands.ab2@37> INCLUDE "internal_commands.ab2"
0003983F <internal_commands.ab2@38> INCLUDE "internal_commands.ab2"
00039840 <internal_commands.ab2@39> INCLUDE "internal_commands.ab2"
00039844 <internal_commands.ab2@42> INCLUDE "internal_commands.ab2"
00039846 <internal_commands.ab2@43> INCLUDE "internal_commands.ab2"
0003984B <internal_commands.ab2@44> INCLUDE "internal_commands.ab2"
0003985B <internal_commands.ab2@45> INCLUDE "internal_commands.ab2"
0003985C <internal_commands.ab2@46> INCLUDE "internal_commands.ab2"
00039860 <internal_commands.ab2@49> INCLUDE "internal_commands.ab2"
00039862 <internal_commands.ab2@50> INCLUDE "internal_commands.ab2"
00039868 <internal_commands.ab2@51> INCLUDE "internal_commands.ab2"
00039878 <internal_commands.ab2@52> INCLUDE "internal_commands.ab2"
0003987C <internal_commands.ab2@56> INCLUDE "internal_commands.ab2"
0003987E <internal_commands.ab2@57> INCLUDE "internal_commands.ab2"
00039885 <internal_commands.ab2@58> INCLUDE "internal_commands.ab2"
00039886 <internal_commands.ab2@59> INCLUDE "internal_commands.ab2"
0003988A <internal_commands.ab2@63> INCLUDE "internal_commands.ab2"
0003988C <internal_commands.ab2@64> INCLUDE "internal_commands.ab2"
00039896 <internal_commands.ab2@65> INCLUDE "internal_commands.ab2"
000398C9 <internal_commands.ab2@66> INCLUDE "internal_commands.ab2"
000398CA <internal_commands.ab2@67> INCLUDE "internal_commands.ab2"
000398CE <internal_commands.ab2@70> INCLUDE "internal_commands.ab2"
000398D0 <internal_commands.ab2@71> INCLUDE "internal_commands.ab2"
000398D9 <internal_commands.ab2@72> INCLUDE "internal_commands.ab2"
00039914 <internal_commands.ab2@73> INCLUDE "internal_commands.ab2"
00039918 <internal_commands.ab2@77> INCLUDE "internal_commands.ab2"
0003991A <internal_commands.ab2@78> INCLUDE "internal_commands.ab2"
00039924 <internal_commands.ab2@79> INCLUDE "internal_commands.ab2"
00039925 <internal_commands.ab2@80> INCLUDE "internal_commands.ab2"
00039926 <internal_commands.ab2@81> INCLUDE "internal_commands.ab2"
0003992A <internal_commands.ab2@84> INCLUDE "internal_commands.ab2"
0003992C <internal_commands.ab2@85> INCLUDE "internal_commands.ab2"
0003992F <internal_commands.ab2@86> INCLUDE "internal_commands.ab2"
00039946 <internal_commands.ab2@87> INCLUDE "internal_commands.ab2"
0003994A <internal_commands.ab2@91> INCLUDE "internal_commands.ab2"
0003994C <internal_commands.ab2@92> INCLUDE "internal_commands.ab2"
00039952 <internal_commands.ab2@93> INCLUDE "internal_commands.ab2"
0003995F <internal_commands.ab2@94> INCLUDE "internal_commands.ab2"
00039960 <internal_commands.ab2@95> INCLUDE "internal_commands.ab2"
00039964 <internal_commands.ab2@98> INCLUDE "internal_commands.ab2"
00039966 <internal_commands.ab2@99> INCLUDE "internal_commands.ab2"
0003996C <internal_commands.ab2@100> INCLUDE "internal_commands.ab2"
00039978 <internal_commands.ab2@101> INCLUDE "internal_commands.ab2"
0003997C <internal_commands.ab2@105> INCLUDE "internal_commands.ab2"
0003997E <internal_commands.ab2@106> INCLUDE "internal_commands.ab2"
00039985 <internal_commands.ab2@107> INCLUDE "internal_commands.ab2"
00039992 <internal_commands.ab2@108> INCLUDE "internal_commands.ab2"
00039996 <internal_commands.ab2@112> INCLUDE "internal_commands.ab2"
00039998 <internal_commands.ab2@113> INCLUDE "internal_commands.ab2"
0003999D <internal_commands.ab2@114> INCLUDE "internal_commands.ab2"
000399AA <internal_commands.ab2@115> INCLUDE "internal_commands.ab2"
000399AE <internal_commands.ab2@119> INCLUDE "internal_commands.ab2"
000399B0 <internal_commands.ab2@120> INCLUDE "internal_commands.ab2"
000399B8 <internal_commands.ab2@121> INCLUDE "internal_commands.ab2"
000399B9 <internal_commands.ab2@122> INCLUDE "internal_commands.ab2"
000399BA <internal_commands.ab2@123> INCLUDE "internal_commands.ab2"
000399BE <internal_commands.ab2@126> INCLUDE "internal_commands.ab2"
000399C0 <internal_commands.ab2@127> INCLUDE "internal_commands.ab2"
000399C8 <internal_commands.ab2@128> INCLUDE "internal_commands.ab2"
000399C9 <internal_commands.ab2@129> INCLUDE "internal_commands.ab2"
000399CA <internal_commands.ab2@130> INCLUDE "internal_commands.ab2"
000399CE <internal_commands.ab2@133> INCLUDE "internal_commands.ab2"
000399D0 <internal_commands.ab2@134> INCLUDE "internal_commands.ab2"
000399D9 <internal_commands.ab2@135> INCLUDE "internal_commands.ab2"
000399E4 <internal_commands.ab2@136> INCLUDE "internal_commands.ab2"
000399E8 <internal_commands.ab2@140> INCLUDE "internal_commands.ab2"
000399EA <internal_commands.ab2@141> INCLUDE "internal_commands.ab2"
000399F2 <internal_commands.ab2@142> INCLUDE "internal_commands.ab2"
000399FD <internal_commands.ab2@143> INCLUDE "internal_commands.ab2"
000399FE <internal_commands.ab2@144> INCLUDE "internal_commands.ab2"
00039A02 <internal_commands.ab2@147> INCLUDE "internal_commands.ab2"
00039A04 <internal_commands.ab2@148> INCLUDE "internal_commands.ab2"
00039A0B <internal_commands.ab2@149> INCLUDE "internal_commands.ab2"
00039A6D <internal_commands.ab2@150> INCLUDE "internal_commands.ab2"
00039A6E <internal_commands.ab2@151> INCLUDE "internal_commands.ab2"
00039A72 <internal_commands.ab2@154> INCLUDE "internal_commands.ab2"
00039A74 <internal_commands.ab2@155> INCLUDE "internal_commands.ab2"
00039A7B <internal_commands.ab2@156> INCLUDE "internal_commands.ab2"
00039A8A <internal_commands.ab2@157> INCLUDE "internal_commands.ab2"
00039A8E <internal_commands.ab2@161> INCLUDE "internal_commands.ab2"
00039A90 <internal_commands.ab2@162> INCLUDE "internal_commands.ab2"
00039A94 <internal_commands.ab2@163> INCLUDE "internal_commands.ab2"
00039ACA <internal_commands.ab2@164> INCLUDE "internal_commands.ab2"
00039ACE <internal_commands.ab2@168> INCLUDE "internal_commands.ab2"
00039AD0 <internal_commands.ab2@169> INCLUDE "internal_commands.ab2"
00039AD5 <internal_commands.ab2@170> INCLUDE "internal_commands.ab2"
00039AE4 <internal_commands.ab2@171> INCLUDE "internal_commands.ab2"
00039AE8 <internal_commands.ab2@175> INCLUDE "internal_commands.ab2"
00039AEA <internal_commands.ab2@176> INCLUDE "internal_commands.ab2"
00039AED <internal_commands.ab2@177> INCLUDE "internal_commands.ab2"
00039B0E <internal_commands.ab2@178> INCLUDE "internal_commands.ab2"
00039B12 <internal_commands.ab2@182> INCLUDE "internal_commands.ab2"
00039B14 <internal_commands.ab2@183> INCLUDE "internal_commands.ab2"
00039B19 <internal_commands.ab2@184> INCLUDE "internal_commands.ab2"
00039B25 <internal_commands.ab2@185> INCLUDE "internal_commands.ab2"
00039B26 <internal_commands.ab2@186> INCLUDE "internal_commands.ab2"
00039B2A <internal_commands.ab2@189> INCLUDE "internal_commands.ab2"
00039B2C <internal_commands.ab2@190> INCLUDE "internal_commands.ab2"
00039B31 <internal_commands.ab2@191> INCLUDE "internal_commands.ab2"
00039B48 <internal_commands.ab2@192> INCLUDE "internal_commands.ab2"
00039B4C <internal_commands.ab2@196> INCLUDE "internal_commands.ab2"
00039B4E <internal_commands.ab2@197> INCLUDE "internal_commands.ab2"
00039B53 <internal_commands.ab2@198> INCLUDE "internal_commands.ab2"
00039B62 <internal_commands.ab2@199> INCLUDE "internal_commands.ab2"
00039B66 <internal_commands.ab2@203> INCLUDE "internal_commands.ab2"
00039B68 <internal_commands.ab2@204> INCLUDE "internal_commands.ab2"
00039B6D <internal_commands.ab2@205> INCLUDE "internal_commands.ab2"
00039B8C <internal_commands.ab2@206> INCLUDE "internal_commands.ab2"
00039B90 <internal_commands.ab2@210> INCLUDE "internal_commands.ab2"
00039B92 <internal_commands.ab2@211> INCLUDE "internal_commands.ab2"
00039B97 <internal_commands.ab2@212> INCLUDE "internal_commands.ab2"
00039BB6 <internal_commands.ab2@213> INCLUDE "internal_commands.ab2"
00039BBA <internal_commands.ab2@217> INCLUDE "internal_commands.ab2"
00039BBC <internal_commands.ab2@218> INCLUDE "internal_commands.ab2"
00039BC2 <internal_commands.ab2@219> INCLUDE "internal_commands.ab2"
00039BC3 <internal_commands.ab2@220> INCLUDE "internal_commands.ab2"
00039BC4 <internal_commands.ab2@221> INCLUDE "internal_commands.ab2"
00039BC8 <internal_commands.ab2@224> INCLUDE "internal_commands.ab2"
00039BCA <internal_commands.ab2@225> INCLUDE "internal_commands.ab2"
00039BCF <internal_commands.ab2@226> INCLUDE "internal_commands.ab2"
00039BD0 <internal_commands.ab2@227> INCLUDE "internal_commands.ab2"
00039BD4 <internal_commands.ab2@231> INCLUDE "internal_commands.ab2"
00039BD6 <internal_commands.ab2@232> INCLUDE "internal_commands.ab2"
00039BDB <internal_commands.ab2@233> INCLUDE "internal_commands.ab2"
00039BE8 <internal_commands.ab2@234> INCLUDE "internal_commands.ab2"
00039BEC <internal_commands.ab2@238> INCLUDE "internal_commands.ab2"
00039BEE <internal_commands.ab2@239> INCLUDE "internal_commands.ab2"
00039BF3 <internal_commands.ab2@240> INCLUDE "internal_commands.ab2"
00039C02 <internal_commands.ab2@241> INCLUDE "internal_commands.ab2"
00039C06 <internal_commands.ab2@245> INCLUDE "internal_commands.ab2"
00039C08 <internal_commands.ab2@246> INCLUDE "internal_commands.ab2"
00039C0D <internal_commands.ab2@247> INCLUDE "internal_commands.ab2"
00039C1C <internal_commands.ab2@248> INCLUDE "internal_commands.ab2"
00039C20 <internal_commands.ab2@252> INCLUDE "internal_commands.ab2"
00039C22 <internal_commands.ab2@253> INCLUDE "internal_commands.ab2"
00039C28 <internal_commands.ab2@254> INCLUDE "internal_commands.ab2"
00039C45 <internal_commands.ab2@255> INCLUDE "internal_commands.ab2"
00039C46 <internal_commands.ab2@256> INCLUDE "internal_commands.ab2"
00039C4A <internal_commands.ab2@259> INCLUDE "internal_commands.ab2"
00039C4C <internal_commands.ab2@260> INCLUDE "internal_commands.ab2"
00039C52 <internal_commands.ab2@261> INCLUDE "internal_commands.ab2"
00039C6F <internal_commands.ab2@262> INCLUDE "internal_commands.ab2"
00039C70 <internal_commands.ab2@263> INCLUDE "internal_commands.ab2"
00039C74 <internal_commands.ab2@266> INCLUDE "internal_commands.ab2"
00039C76 <internal_commands.ab2@267> INCLUDE "internal_commands.ab2"
00039C79 <internal_commands.ab2@268> INCLUDE "internal_commands.ab2"
00039C90 <internal_commands.ab2@269> INCLUDE "internal_commands.ab2"
00039C94 <internal_commands.ab2@273> INCLUDE "internal_commands.ab2"
00039C96 <internal_commands.ab2@274> INCLUDE "internal_commands.ab2"
00039C99 <internal_commands.ab2@275> INCLUDE "internal_commands.ab2"
00039CA8 <internal_commands.ab2@276> INCLUDE "internal_commands.ab2"
00039CAC <internal_commands.ab2@280> INCLUDE "internal_commands.ab2"
00039CAE <internal_commands.ab2@281> INCLUDE "internal_commands.ab2"
00039CB3 <internal_commands.ab2@282> INCLUDE "internal_commands.ab2"
00039CB4 <internal_commands.ab2@283> INCLUDE "internal_commands.ab2"
00039CB8 <internal_commands.ab2@287> INCLUDE "internal_commands.ab2"
00039CBA <internal_commands.ab2@288> INCLUDE "internal_commands.ab2"
00039CBE <internal_commands.ab2@289> INCLUDE "internal_commands.ab2"
00039CD3 <internal_commands.ab2@290> INCLUDE "internal_commands.ab2"
00039CD4 <internal_commands.ab2@291> INCLUDE "internal_commands.ab2"
00039CD8 <internal_commands.ab2@294> INCLUDE "internal_commands.ab2"
00039CDA <internal_commands.ab2@295> INCLUDE "internal_commands.ab2"
00039CE1 <internal_commands.ab2@296> INCLUDE "internal_commands.ab2"
00039CFA <internal_commands.ab2@297> INCLUDE "internal_commands.ab2"
00039CFE <internal_commands.ab2@301> INCLUDE "internal_commands.ab2"
00039D00 <internal_commands.ab2@302> INCLUDE "internal_commands.ab2"
00039D07 <internal_commands.ab2@303> INCLUDE "internal_commands.ab2"
00039D12 <internal_commands.ab2@304> INCLUDE "internal_commands.ab2"
00039D16 <internal_commands.ab2@308> INCLUDE "internal_commands.ab2"
00039D18 <internal_commands.ab2@309> INCLUDE "internal_commands.ab2"
00039D1D <internal_commands.ab2@310> INCLUDE "internal_commands.ab2"
00039D34 <internal_commands.ab2@311> INCLUDE "internal_commands.ab2"
00039D38 <internal_commands.ab2@315> INCLUDE "internal_commands.ab2"
00039D3A <internal_commands.ab2@316> INCLUDE "internal_commands.ab2"
00039D3E <internal_commands.ab2@317> INCLUDE "internal_commands.ab2"
00039D55 <internal_commands.ab2@318> INCLUDE "internal_commands.ab2"
00039D56 <internal_commands.ab2@319> INCLUDE "internal_commands.ab2"
00039D5A <internal_commands.ab2@322> INCLUDE "internal_commands.ab2"
00039D5C <internal_commands.ab2@323> INCLUDE "internal_commands.ab2"
00039D61 <internal_commands.ab2@324> INCLUDE "internal_commands.ab2"
00039D62 <internal_commands.ab2@325> INCLUDE "internal_commands.ab2"
00039D66 <internal_commands.ab2@329> INCLUDE "internal_commands.ab2"
00039D68 <internal_commands.ab2@330> INCLUDE "internal_commands.ab2"
00039D6D <internal_commands.ab2@331> INCLUDE "internal_commands.ab2"
00039D71 <internal_commands.ab2@332> INCLUDE "internal_commands.ab2"
00039D72 <internal_commands.ab2@333> INCLUDE "internal_commands.ab2"
00039D76 <internal_commands.ab2@336> INCLUDE "internal_commands.ab2"
00039D78 <internal_commands.ab2@337> INCLUDE "internal_commands.ab2"
00039D7F <internal_commands.ab2@338> INCLUDE "internal_commands.ab2"
00039D97 <internal_commands.ab2@339> INCLUDE "internal_commands.ab2"
00039D98 <internal_commands.ab2@340> INCLUDE "internal_commands.ab2"
00039D9C <internal_commands.ab2@343> INCLUDE "internal_commands.ab2"
00039D9E <internal_commands.ab2@344> INCLUDE "internal_commands.ab2"
00039DA5 <internal_commands.ab2@345> INCLUDE "internal_commands.ab2"
00039DAA <internal_commands.ab2@346> INCLUDE "internal_commands.ab2"
00039DAE <internal_commands.ab2@350> INCLUDE "internal_commands.ab2"
00039DB0 <internal_commands.ab2@351> INCLUDE "internal_commands.ab2"
00039DB7 <internal_commands.ab2@352> INCLUDE "internal_commands.ab2"
00039DBC <internal_commands.ab2@353> INCLUDE "internal_commands.ab2"
00039DC0 <internal_commands.ab2@357> INCLUDE "internal_commands.ab2"
00039DC2 <internal_commands.ab2@358> INCLUDE "internal_commands.ab2"
00039DC9 <internal_commands.ab2@359> INCLUDE "internal_commands.ab2"
00039DE4 <internal_commands.ab2@360> INCLUDE "internal_commands.ab2"
00039DE8 <internal_commands.ab2@364> INCLUDE "internal_commands.ab2"
00039DEA <internal_commands.ab2@365> INCLUDE "internal_commands.ab2"
00039DF2 <internal_commands.ab2@366> INCLUDE "internal_commands.ab2"
00039E0B <internal_commands.ab2@367> INCLUDE "internal_commands.ab2"
00039E0C <internal_commands.ab2@368> INCLUDE "internal_commands.ab2"
00039E10 <internal_commands.ab2@371> INCLUDE "internal_commands.ab2"
00039E12 <internal_commands.ab2@372> INCLUDE "internal_commands.ab2"
00039E18 <internal_commands.ab2@373> INCLUDE "internal_commands.ab2"
00039E19 <internal_commands.ab2@374> INCLUDE "internal_commands.ab2"
00039E1A <internal_commands.ab2@375> INCLUDE "internal_commands.ab2"
00039E1E <internal_commands.ab2@378> INCLUDE "internal_commands.ab2"
00039E20 <internal_commands.ab2@379> INCLUDE "internal_commands.ab2"
00039E26 <internal_commands.ab2@380> INCLUDE "internal_commands.ab2"
00039E27 <internal_commands.ab2@381> INCLUDE "internal_commands.ab2"
00039E28 <internal_commands.ab2@382> INCLUDE "internal_commands.ab2"
00039E2C <internal_commands.ab2@385> INCLUDE "internal_commands.ab2"
00039E2E <internal_commands.ab2@386> INCLUDE "internal_commands.ab2"
00039E35 <internal_commands.ab2@387> INCLUDE "internal_commands.ab2"
00039E36 <internal_commands.ab2@388> INCLUDE "internal_commands.ab2"
00039E3A <internal_commands.ab2@392> INCLUDE "internal_commands.ab2"
00039E3C <internal_commands.ab2@393> INCLUDE "internal_commands.ab2"
00039E42 <internal_commands.ab2@394> INCLUDE "internal_commands.ab2"
00039E4B <internal_commands.ab2@395> INCLUDE "internal_commands.ab2"
00039E4C <internal_commands.ab2@396> INCLUDE "internal_commands.ab2"
00039E50 <internal_commands.ab2@399> INCLUDE "internal_commands.ab2"
00039E52 <internal_commands.ab2@400> INCLUDE "internal_commands.ab2"
00039E5A <internal_commands.ab2@401> INCLUDE "internal_commands.ab2"
00039E67 <internal_commands.ab2@402> INCLUDE "internal_commands.ab2"
00039E68 <internal_commands.ab2@403> INCLUDE "internal_commands.ab2"
00039E6C <internal_commands.ab2@406> INCLUDE "internal_commands.ab2"
00039E6E <internal_commands.ab2@407> INCLUDE "internal_commands.ab2"
00039E76 <internal_commands.ab2@408> INCLUDE "internal_commands.ab2"
00039E83 <internal_commands.ab2@409> INCLUDE "internal_commands.ab2"
00039E84 <internal_commands.ab2@410> INCLUDE "internal_commands.ab2"
00039E88 <internal_commands.ab2@413> INCLUDE "internal_commands.ab2"
00039E8A <internal_commands.ab2@414> INCLUDE "internal_commands.ab2"
00039E92 <internal_commands.ab2@415> INCLUDE "internal_commands.ab2"
00039E9F <internal_commands.ab2@416> INCLUDE "internal_commands.ab2"
00039EA0 <internal_commands.ab2@417> INCLUDE "internal_commands.ab2"
00039EA4 <internal_commands.ab2@420> INCLUDE "internal_commands.ab2"
00039EA6 <internal_commands.ab2@421> INCLUDE "internal_commands.ab2"
00039EAB <internal_commands.ab2@422> INCLUDE "internal_commands.ab2"
00039EAC <internal_commands.ab2@423> INCLUDE "internal_commands.ab2"
00039EB0 <internal_commands.ab2@437> INCLUDE "internal_commands.ab2"
00039EB2 <internal_commands.ab2@438> INCLUDE "internal_commands.ab2"
00039EB7 <internal_commands.ab2@439> INCLUDE "internal_commands.ab2"
00039EB8 <internal_commands.ab2@440> INCLUDE "internal_commands.ab2"
00039EBA <internal_commands.ab2@443> INCLUDE "internal_commands.ab2"
00039EBE <internal_commands.ab2@444> INCLUDE "internal_commands.ab2"
00039EC0 <internal_commands.ab2@445> INCLUDE "internal_commands.ab2"
00039EC2 <internal_commands.ab2@446> INCLUDE "internal_commands.ab2"
00039EC6 <internal_commands.ab2@447> INCLUDE "internal_commands.ab2"
00039EC8 <internal_commands.ab2@448> INCLUDE "internal_commands.ab2"
00039ECC <internal_commands.ab2@452> INCLUDE "internal_commands.ab2"
00039ECE <internal_commands.ab2@453> INCLUDE "internal_commands.ab2"
00039ED2 <internal_commands.ab2@454> INCLUDE "internal_commands.ab2"
00039ED3 <internal_commands.ab2@455> INCLUDE "internal_commands.ab2"
00039ED4 <internal_commands.ab2@456> INCLUDE "internal_commands.ab2"
00039ED6 <internal_commands.ab2@458> INCLUDE "internal_commands.ab2"
00039EDA <internal_commands.ab2@459> INCLUDE "internal_commands.ab2"
00039EDC <internal_commands.ab2@460> INCLUDE "internal_commands.ab2"
00039EDE <internal_commands.ab2@461> INCLUDE "internal_commands.ab2"
00039EE2 <internal_commands.ab2@462> INCLUDE "internal_commands.ab2"
00039EE4 <internal_commands.ab2@463> INCLUDE "internal_commands.ab2"
00039EE8 <internal_commands.ab2@467> INCLUDE "internal_commands.ab2"
00039EEA <internal_commands.ab2@468> INCLUDE "internal_commands.ab2"
00039EEF <internal_commands.ab2@469> INCLUDE "internal_commands.ab2"
00039EF0 <internal_commands.ab2@470> INCLUDE "internal_commands.ab2"
00039EF2 <internal_commands.ab2@473> INCLUDE "internal_commands.ab2"
00039EF6 <internal_commands.ab2@474> INCLUDE "internal_commands.ab2"
00039EF8 <internal_commands.ab2@475> INCLUDE "internal_commands.ab2"
00039EFA <internal_commands.ab2@476> INCLUDE "internal_commands.ab2"
00039EFE <internal_commands.ab2@477> INCLUDE "internal_commands.ab2"
00039F00 <internal_commands.ab2@478> INCLUDE "internal_commands.ab2"
00039F04 <internal_commands.ab2@482> INCLUDE "internal_commands.ab2"
00039F06 <internal_commands.ab2@483> INCLUDE "internal_commands.ab2"
00039F0B <internal_commands.ab2@484> INCLUDE "internal_commands.ab2"
00039F0C <internal_commands.ab2@485> INCLUDE "internal_commands.ab2"
00039F0E <internal_commands.ab2@488> INCLUDE "internal_commands.ab2"
00039F12 <internal_commands.ab2@489> INCLUDE "internal_commands.ab2"
00039F14 <internal_commands.ab2@490> INCLUDE "internal_commands.ab2"
00039F16 <internal_commands.ab2@491> INCLUDE "internal_commands.ab2"
00039F1A <internal_commands.ab2@492> INCLUDE "internal_commands.ab2"
00039F1C <internal_commands.ab2@493> INCLUDE "internal_commands.ab2"
00039F20 <internal_commands.ab2@497> INCLUDE "internal_commands.ab2"
00039F22 <internal_commands.ab2@498> INCLUDE "internal_commands.ab2"
00039F27 <internal_commands.ab2@499> INCLUDE "internal_commands.ab2"
00039F28 <internal_commands.ab2@500> INCLUDE "internal_commands.ab2"
00039F2A <internal_commands.ab2@503> INCLUDE "internal_commands.ab2"
00039F2E <internal_commands.ab2@504> INCLUDE "internal_commands.ab2"
00039F30 <internal_commands.ab2@505> INCLUDE "internal_commands.ab2"
00039F32 <internal_commands.ab2@506> INCLUDE "internal_commands.ab2"
00039F36 <internal_commands.ab2@507> INCLUDE "internal_commands.ab2"
00039F38 <internal_commands.ab2@508> INCLUDE "internal_commands.ab2"
00039F3C <internal_commands.ab2@512> INCLUDE "internal_commands.ab2"
00039F3E <internal_commands.ab2@513> INCLUDE "internal_commands.ab2"
00039F43 <internal_commands.ab2@514> INCLUDE "internal_commands.ab2"
00039F44 <internal_commands.ab2@515> INCLUDE "internal_commands.ab2"
00039F46 <internal_commands.ab2@518> INCLUDE "internal_commands.ab2"
00039F4A <internal_commands.ab2@519> INCLUDE "internal_commands.ab2"
00039F4C <internal_commands.ab2@520> INCLUDE "internal_commands.ab2"
00039F4E <internal_commands.ab2@521> INCLUDE "internal_commands.ab2"
00039F52 <internal_commands.ab2@522> INCLUDE "internal_commands.ab2"
00039F54 <internal_commands.ab2@523> INCLUDE "internal_commands.ab2"
00039F58 <internal_commands.ab2@527> INCLUDE "internal_commands.ab2"
00039F5A <internal_commands.ab2@528> INCLUDE "internal_commands.ab2"
00039F5E <internal_commands.ab2@529> INCLUDE "internal_commands.ab2"
00039F5F <internal_commands.ab2@530> INCLUDE "internal_commands.ab2"
00039F60 <internal_commands.ab2@531> INCLUDE "internal_commands.ab2"
00039F62 <internal_commands.ab2@533> INCLUDE "internal_commands.ab2"
00039F66 <internal_commands.ab2@534> INCLUDE "internal_commands.ab2"
00039F68 <internal_commands.ab2@535> INCLUDE "internal_commands.ab2"
00039F6A <internal_commands.ab2@536> INCLUDE "internal_commands.ab2"
00039F6E <internal_commands.ab2@537> INCLUDE "internal_commands.ab2"
00039F70 <internal_commands.ab2@538> INCLUDE "internal_commands.ab2"
00039F74 <internal_commands.ab2@542> INCLUDE "internal_commands.ab2"
00039F76 <internal_commands.ab2@543> INCLUDE "internal_commands.ab2"
00039F7B <internal_commands.ab2@544> INCLUDE "internal_commands.ab2"
00039F7C <internal_commands.ab2@545> INCLUDE "internal_commands.ab2"
00039F7E <internal_commands.ab2@548> INCLUDE "internal_commands.ab2"
00039F82 <internal_commands.ab2@549> INCLUDE "internal_commands.ab2"
00039F84 <internal_commands.ab2@550> INCLUDE "internal_commands.ab2"
00039F86 <internal_commands.ab2@551> INCLUDE "internal_commands.ab2"
00039F8A <internal_commands.ab2@552> INCLUDE "internal_commands.ab2"
00039F8C <internal_commands.ab2@553> INCLUDE "internal_commands.ab2"
00039F90 <internal_commands.ab2@557> INCLUDE "internal_commands.ab2"
00039F92 <internal_commands.ab2@558> INCLUDE "internal_commands.ab2"
00039F96 <internal_commands.ab2@559> INCLUDE "internal_commands.ab2"
00039F97 <internal_commands.ab2@560> INCLUDE "internal_commands.ab2"
00039F98 <internal_commands.ab2@561> INCLUDE "internal_commands.ab2"
00039F9A <internal_commands.ab2@563> INCLUDE "internal_commands.ab2"
00039F9E <internal_commands.ab2@564> INCLUDE "internal_commands.ab2"
00039FA0 <internal_commands.ab2@565> INCLUDE "internal_commands.ab2"
00039FA2 <internal_commands.ab2@566> INCLUDE "internal_commands.ab2"
00039FA6 <internal_commands.ab2@567> INCLUDE "internal_commands.ab2"
00039FA8 <internal_commands.ab2@568> INCLUDE "internal_commands.ab2"
00039FAC <internal_commands.ab2@572> INCLUDE "internal_commands.ab2"
00039FAE <internal_commands.ab2@573> INCLUDE "internal_commands.ab2"
00039FB2 <internal_commands.ab2@574> INCLUDE "internal_commands.ab2"
00039FB3 <internal_commands.ab2@575> INCLUDE "internal_commands.ab2"
00039FB4 <internal_commands.ab2@576> INCLUDE "internal_commands.ab2"
00039FB6 <internal_commands.ab2@578> INCLUDE "internal_commands.ab2"
00039FBA <internal_commands.ab2@579> INCLUDE "internal_commands.ab2"
00039FBC <internal_commands.ab2@580> INCLUDE "internal_commands.ab2"
00039FBE <internal_commands.ab2@581> INCLUDE "internal_commands.ab2"
00039FC2 <internal_commands.ab2@582> INCLUDE "internal_commands.ab2"
00039FC4 <internal_commands.ab2@583> INCLUDE "internal_commands.ab2"
00039FC8 <internal_commands.ab2@587> INCLUDE "internal_commands.ab2"
00039FCA <internal_commands.ab2@588> INCLUDE "internal_commands.ab2"
00039FCE <internal_commands.ab2@589> INCLUDE "internal_commands.ab2"
00039FCF <internal_commands.ab2@590> INCLUDE "internal_commands.ab2"
00039FD0 <internal_commands.ab2@591> INCLUDE "internal_commands.ab2"
00039FD2 <internal_commands.ab2@593> INCLUDE "internal_commands.ab2"
00039FD6 <internal_commands.ab2@594> INCLUDE "internal_commands.ab2"
00039FD8 <internal_commands.ab2@595> INCLUDE "internal_commands.ab2"
00039FDA <internal_commands.ab2@596> INCLUDE "internal_commands.ab2"
00039FDE <internal_commands.ab2@597> INCLUDE "internal_commands.ab2"
00039FE0 <internal_commands.ab2@598> INCLUDE "internal_commands.ab2"
00039FE4 <internal_commands.ab2@602> INCLUDE "internal_commands.ab2"
00039FE6 <internal_commands.ab2@603> INCLUDE "internal_commands.ab2"
00039FEA <internal_commands.ab2@604> INCLUDE "internal_commands.ab2"
00039FEB <internal_commands.ab2@605> INCLUDE "internal_commands.ab2"
00039FEC <internal_commands.ab2@606> INCLUDE "internal_commands.ab2"
00039FEE <internal_commands.ab2@608> INCLUDE "internal_commands.ab2"
00039FF2 <internal_commands.ab2@609> INCLUDE "internal_commands.ab2"
00039FF4 <internal_commands.ab2@610> INCLUDE "internal_commands.ab2"
00039FF6 <internal_commands.ab2@611> INCLUDE "internal_commands.ab2"
00039FFA <internal_commands.ab2@612> INCLUDE "internal_commands.ab2"
00039FFC <internal_commands.ab2@613> INCLUDE "internal_commands.ab2"
0003A000 <internal_commands.ab2@617> INCLUDE "internal_commands.ab2"
0003A002 <internal_commands.ab2@618> INCLUDE "internal_commands.ab2"
0003A006 <internal_commands.ab2@619> INCLUDE "internal_commands.ab2"
0003A007 <internal_commands.ab2@620> INCLUDE "internal_commands.ab2"
0003A008 <internal_commands.ab2@621> INCLUDE "internal_commands.ab2"
0003A00A <internal_commands.ab2@623> INCLUDE "internal_commands.ab2"
0003A00E <internal_commands.ab2@624> INCLUDE "internal_commands.ab2"
0003A010 <internal_commands.ab2@625> INCLUDE "internal_commands.ab2"
0003A012 <internal_commands.ab2@626> INCLUDE "internal_commands.ab2"
0003A016 <internal_commands.ab2@627> INCLUDE "internal_commands.ab2"
0003A018 <internal_commands.ab2@628> INCLUDE "internal_commands.ab2"
0003A01C <internal_commands.ab2@632> INCLUDE "internal_commands.ab2"
0003A01E <internal_commands.ab2@633> INCLUDE "internal_commands.ab2"
0003A022 <internal_commands.ab2@634> INCLUDE "internal_commands.ab2"
0003A023 <internal_commands.ab2@635> INCLUDE "internal_commands.ab2"
0003A024 <internal_commands.ab2@636> INCLUDE "internal_commands.ab2"
0003A026 <internal_commands.ab2@638> INCLUDE "internal_commands.ab2"
0003A02A <internal_commands.ab2@639> INCLUDE "internal_commands.ab2"
0003A02C <internal_commands.ab2@640> INCLUDE "internal_commands.ab2"
0003A02E <internal_commands.ab2@641> INCLUDE "internal_commands.ab2"
0003A032 <internal_commands.ab2@642> INCLUDE "internal_commands.ab2"
0003A034 <internal_commands.ab2@643> INCLUDE "internal_commands.ab2"
0003A038 <internal_commands.ab2@647> INCLUDE "internal_commands.ab2"
0003A03A <internal_commands.ab2@648> INCLUDE "internal_commands.ab2"
0003A03E <internal_commands.ab2@649> INCLUDE "internal_commands.ab2"
0003A03F <internal_commands.ab2@650> INCLUDE "internal_commands.ab2"
0003A040 <internal_commands.ab2@651> INCLUDE "internal_commands.ab2"
0003A042 <internal_commands.ab2@653> INCLUDE "internal_commands.ab2"
0003A046 <internal_commands.ab2@654> INCLUDE "internal_commands.ab2"
0003A048 <internal_commands.ab2@655> INCLUDE "internal_commands.ab2"
0003A04A <internal_commands.ab2@656> INCLUDE "internal_commands.ab2"
0003A04E <internal_commands.ab2@657> INCLUDE "internal_commands.ab2"
0003A050 <internal_commands.ab2@658> INCLUDE "internal_commands.ab2"
0003A054 <internal_commands.ab2@662> INCLUDE "internal_commands.ab2"
0003A056 <internal_commands.ab2@663> INCLUDE "internal_commands.ab2"
0003A05A <internal_commands.ab2@664> INCLUDE "internal_commands.ab2"
0003A05B <internal_commands.ab2@665> INCLUDE "internal_commands.ab2"
0003A05C <internal_commands.ab2@666> INCLUDE "internal_commands.ab2"
0003A05E <internal_commands.ab2@668> INCLUDE "internal_commands.ab2"
0003A062 <internal_commands.ab2@669> INCLUDE "internal_commands.ab2"
0003A064 <internal_commands.ab2@670> INCLUDE "internal_commands.ab2"
0003A066 <internal_commands.ab2@671> INCLUDE "internal_commands.ab2"
0003A06A <internal_commands.ab2@672> INCLUDE "internal_commands.ab2"
0003A06C <internal_commands.ab2@673> INCLUDE "internal_commands.ab2"
0003A070 <internal_commands.ab2@677> INCLUDE "internal_commands.ab2"
0003A072 <internal_commands.ab2@678> INCLUDE "internal_commands.ab2"
0003A076 <internal_commands.ab2@679> INCLUDE "internal_commands.ab2"
0003A077 <internal_commands.ab2@680> INCLUDE "internal_commands.ab2"
0003A078 <internal_commands.ab2@681> INCLUDE "internal_commands.ab2"
0003A07A <internal_commands.ab2@683> INCLUDE "internal_commands.ab2"
0003A07E <internal_commands.ab2@684> INCLUDE "internal_commands.ab2"
0003A080 <internal_commands.ab2@685> INCLUDE "internal_commands.ab2"
0003A082 <internal_commands.ab2@686> INCLUDE "internal_commands.ab2"
0003A086 <internal_commands.ab2@687> INCLUDE "internal_commands.ab2"
0003A088 <internal_commands.ab2@688> INCLUDE "internal_commands.ab2"
0003A08C <internal_commands.ab2@692> INCLUDE "internal_commands.ab2"
0003A08E <internal_commands.ab2@693> INCLUDE "internal_commands.ab2"
0003A092 <internal_commands.ab2@694> INCLUDE "internal_commands.ab2"
0003A093 <internal_commands.ab2@695> INCLUDE "internal_commands.ab2"
0003A094 <internal_commands.ab2@696> INCLUDE "internal_commands.ab2"
0003A096 <internal_commands.ab2@698> INCLUDE "internal_commands.ab2"
0003A09A <internal_commands.ab2@699> INCLUDE "internal_commands.ab2"
0003A09C <internal_commands.ab2@700> INCLUDE "internal_commands.ab2"
0003A09E <internal_commands.ab2@701> INCLUDE "internal_commands.ab2"
0003A0A2 <internal_commands.ab2@702> INCLUDE "internal_commands.ab2"
0003A0A4 <internal_commands.ab2@703> INCLUDE "internal_commands.ab2"
0003A0A8 <internal_commands.ab2@707> INCLUDE "internal_commands.ab2"
0003A0AA <internal_commands.ab2@708> INCLUDE "internal_commands.ab2"
0003A0AE <internal_commands.ab2@709> INCLUDE "internal_commands.ab2"
0003A0AF <internal_commands.ab2@710> INCLUDE "internal_commands.ab2"
0003A0B0 <internal_commands.ab2@711> INCLUDE "internal_commands.ab2"
0003A0B2 <internal_commands.ab2@713> INCLUDE "internal_commands.ab2"
0003A0B6 <internal_commands.ab2@714> INCLUDE "internal_commands.ab2"
0003A0B8 <internal_commands.ab2@715> INCLUDE "internal_commands.ab2"
0003A0BA <internal_commands.ab2@716> INCLUDE "internal_commands.ab2"
0003A0BE <internal_commands.ab2@717> INCLUDE "internal_commands.ab2"
0003A0C0 <internal_commands.ab2@718> INCLUDE "internal_commands.ab2"
0003A0C4 <internal_commands.ab2@722> INCLUDE "internal_commands.ab2"
0003A0C6 <internal_commands.ab2@723> INCLUDE "internal_commands.ab2"
0003A0CA <internal_commands.ab2@724> INCLUDE "internal_commands.ab2"
0003A0CB <internal_commands.ab2@725> INCLUDE "internal_commands.ab2"
0003A0CC <internal_commands.ab2@726> INCLUDE "internal_commands.ab2"
0003A0CE <internal_commands.ab2@728> INCLUDE "internal_commands.ab2"
0003A0D2 <internal_commands.ab2@729> INCLUDE "internal_commands.ab2"
0003A0D4 <internal_commands.ab2@730> INCLUDE "internal_commands.ab2"
0003A0D6 <internal_commands.ab2@731> INCLUDE "internal_commands.ab2"
0003A0DA <internal_commands.ab2@732> INCLUDE "internal_commands.ab2"
0003A0DC <internal_commands.ab2@733> INCLUDE "internal_commands.ab2"
0003A0E0 <internal_commands.ab2@737> INCLUDE "internal_commands.ab2"
0003A0E2 <internal_commands.ab2@738> INCLUDE "internal_commands.ab2"
0003A0E6 <internal_commands.ab2@739> INCLUDE "internal_commands.ab2"
0003A0E7 <internal_commands.ab2@740> INCLUDE "internal_commands.ab2"
0003A0E8 <internal_commands.ab2@741> INCLUDE "internal_commands.ab2"
0003A0EA <internal_commands.ab2@743> INCLUDE "internal_commands.ab2"
0003A0EE <internal_commands.ab2@744> INCLUDE "internal_commands.ab2"
0003A0F0 <internal_commands.ab2@745> INCLUDE "internal_commands.ab2"
0003A0F2 <internal_commands.ab2@746> INCLUDE "internal_commands.ab2"
0003A0F6 <internal_commands.ab2@747> INCLUDE "internal_commands.ab2"
0003A0F8 <internal_commands.ab2@748> INCLUDE "internal_commands.ab2"
0003A0FC <internal_commands.ab2@752> INCLUDE "internal_commands.ab2"
0003A0FE <internal_commands.ab2@753> INCLUDE "internal_commands.ab2"
0003A102 <internal_commands.ab2@754> INCLUDE "internal_commands.ab2"
0003A103 <internal_commands.ab2@755> INCLUDE "internal_commands.ab2"
0003A104 <internal_commands.ab2@756> INCLUDE "internal_commands.ab2"
0003A106 <internal_commands.ab2@758> INCLUDE "internal_commands.ab2"
0003A10A <internal_commands.ab2@759> INCLUDE "internal_commands.ab2"
0003A10C <internal_commands.ab2@760> INCLUDE "internal_commands.ab2"
0003A10E <internal_commands.ab2@761> INCLUDE "internal_commands.ab2"
0003A112 <internal_commands.ab2@762> INCLUDE "internal_commands.ab2"
0003A114 <internal_commands.ab2@763> INCLUDE "internal_commands.ab2"
0003A118 <internal_commands.ab2@767> INCLUDE "internal_commands.ab2"
0003A11A <internal_commands.ab2@768> INCLUDE "internal_commands.ab2"
0003A11E <internal_commands.ab2@769> INCLUDE "internal_commands.ab2"
0003A11F <internal_commands.ab2@770> INCLUDE "internal_commands.ab2"
0003A120 <internal_commands.ab2@771> INCLUDE "internal_commands.ab2"
0003A122 <internal_commands.ab2@773> INCLUDE "internal_commands.ab2"
0003A126 <internal_commands.ab2@774> INCLUDE "internal_commands.ab2"
0003A128 <internal_commands.ab2@775> INCLUDE "internal_commands.ab2"
0003A12A <internal_commands.ab2@776> INCLUDE "internal_commands.ab2"
0003A12E <internal_commands.ab2@777> INCLUDE "internal_commands.ab2"
0003A130 <internal_commands.ab2@778> INCLUDE "internal_commands.ab2"
0003A134 <internal_commands.ab2@782> INCLUDE "internal_commands.ab2"
0003A136 <internal_commands.ab2@783> INCLUDE "internal_commands.ab2"
0003A13A <internal_commands.ab2@784> INCLUDE "internal_commands.ab2"
0003A13B <internal_commands.ab2@785> INCLUDE "internal_commands.ab2"
0003A13C <internal_commands.ab2@786> INCLUDE "internal_commands.ab2"
0003A13E <internal_commands.ab2@788> INCLUDE "internal_commands.ab2"
0003A142 <internal_commands.ab2@789> INCLUDE "internal_commands.ab2"
0003A144 <internal_commands.ab2@790> INCLUDE "internal_commands.ab2"
0003A146 <internal_commands.ab2@791> INCLUDE "internal_commands.ab2"
0003A14A <internal_commands.ab2@792> INCLUDE "internal_commands.ab2"
0003A14C <internal_commands.ab2@793> INCLUDE "internal_commands.ab2"
0003A150 <internal_commands.ab2@797> INCLUDE "internal_commands.ab2"
0003A152 <internal_commands.ab2@798> INCLUDE "internal_commands.ab2"
0003A157 <internal_commands.ab2@799> INCLUDE "internal_commands.ab2"
0003A158 <internal_commands.ab2@800> INCLUDE "internal_commands.ab2"
0003A15A <internal_commands.ab2@803> INCLUDE "internal_commands.ab2"
0003A15E <internal_commands.ab2@804> INCLUDE "internal_commands.ab2"
0003A160 <internal_commands.ab2@805> INCLUDE "internal_commands.ab2"
0003A162 <internal_commands.ab2@806> INCLUDE "internal_commands.ab2"
0003A166 <internal_commands.ab2@807> INCLUDE "internal_commands.ab2"
0003A168 <internal_commands.ab2@808> INCLUDE "internal_commands.ab2"
0003A16C <internal_commands.ab2@812> INCLUDE "internal_commands.ab2"
0003A16E <internal_commands.ab2@813> INCLUDE "internal_commands.ab2"
0003A173 <internal_commands.ab2@814> INCLUDE "internal_commands.ab2"
0003A174 <internal_commands.ab2@815> INCLUDE "internal_commands.ab2"
0003A176 <internal_commands.ab2@818> INCLUDE "internal_commands.ab2"
0003A17A <internal_commands.ab2@819> INCLUDE "internal_commands.ab2"
0003A17C <internal_commands.ab2@820> INCLUDE "internal_commands.ab2"
0003A17E <internal_commands.ab2@821> INCLUDE "internal_commands.ab2"
0003A182 <internal_commands.ab2@822> INCLUDE "internal_commands.ab2"
0003A184 <internal_commands.ab2@823> INCLUDE "internal_commands.ab2"
0003A188 <internal_commands.ab2@827> INCLUDE "internal_commands.ab2"
0003A18A <internal_commands.ab2@828> INCLUDE "internal_commands.ab2"
0003A18F <internal_commands.ab2@829> INCLUDE "internal_commands.ab2"
0003A190 <internal_commands.ab2@830> INCLUDE "internal_commands.ab2"
0003A192 <internal_commands.ab2@833> INCLUDE "internal_commands.ab2"
0003A196 <internal_commands.ab2@834> INCLUDE "internal_commands.ab2"
0003A198 <internal_commands.ab2@835> INCLUDE "internal_commands.ab2"
0003A19A <internal_commands.ab2@836> INCLUDE "internal_commands.ab2"
0003A19E <internal_commands.ab2@837> INCLUDE "internal_commands.ab2"
0003A1A0 <internal_commands.ab2@838> INCLUDE "internal_commands.ab2"
0003A1A4 <internal_commands.ab2@842> INCLUDE "internal_commands.ab2"
0003A1A6 <internal_commands.ab2@843> INCLUDE "internal_commands.ab2"
0003A1AB <internal_commands.ab2@844> INCLUDE "internal_commands.ab2"
0003A1AC <internal_commands.ab2@845> INCLUDE "internal_commands.ab2"
0003A1AE <internal_commands.ab2@848> INCLUDE "internal_commands.ab2"
0003A1B2 <internal_commands.ab2@849> INCLUDE "internal_commands.ab2"
0003A1B4 <internal_commands.ab2@850> INCLUDE "internal_commands.ab2"
0003A1B6 <internal_commands.ab2@851> INCLUDE "internal_commands.ab2"
0003A1BA <internal_commands.ab2@852> INCLUDE "internal_commands.ab2"
0003A1BC <internal_commands.ab2@853> INCLUDE "internal_commands.ab2"
0003A1C0 <internal_commands.ab2@857> INCLUDE "internal_commands.ab2"
0003A1C2 <internal_commands.ab2@858> INCLUDE "internal_commands.ab2"
0003A1C6 <internal_commands.ab2@859> INCLUDE "internal_commands.ab2"
0003A1C7 <internal_commands.ab2@860> INCLUDE "internal_commands.ab2"
0003A1C8 <internal_commands.ab2@861> INCLUDE "internal_commands.ab2"
0003A1CA <internal_commands.ab2@863> INCLUDE "internal_commands.ab2"
0003A1CE <internal_commands.ab2@864> INCLUDE "internal_commands.ab2"
0003A1D0 <internal_commands.ab2@865> INCLUDE "internal_commands.ab2"
0003A1D2 <internal_commands.ab2@866> INCLUDE "internal_commands.ab2"
0003A1D6 <internal_commands.ab2@867> INCLUDE "internal_commands.ab2"
0003A1D8 <internal_commands.ab2@868> INCLUDE "internal_commands.ab2"
0003A1DC <internal_commands.ab2@872> INCLUDE "internal_commands.ab2"
0003A1DE <internal_commands.ab2@873> INCLUDE "internal_commands.ab2"
0003A1E2 <internal_commands.ab2@874> INCLUDE "internal_commands.ab2"
0003A1E3 <internal_commands.ab2@875> INCLUDE "internal_commands.ab2"
0003A1E4 <internal_commands.ab2@876> INCLUDE "internal_commands.ab2"
0003A1E6 <internal_commands.ab2@878> INCLUDE "internal_commands.ab2"
0003A1EA <internal_commands.ab2@879> INCLUDE "internal_commands.ab2"
0003A1EC <internal_commands.ab2@880> INCLUDE "internal_commands.ab2"
0003A1EE <internal_commands.ab2@881> INCLUDE "internal_commands.ab2"
0003A1F2 <internal_commands.ab2@882> INCLUDE "internal_commands.ab2"
0003A1F4 <internal_commands.ab2@883> INCLUDE "internal_commands.ab2"
0003A1F8 <internal_commands.ab2@887> INCLUDE "internal_commands.ab2"
0003A1FA <internal_commands.ab2@888> INCLUDE "internal_commands.ab2"
0003A1FE <internal_commands.ab2@889> INCLUDE "internal_commands.ab2"
0003A1FF <internal_commands.ab2@890> INCLUDE "internal_commands.ab2"
0003A200 <internal_commands.ab2@891> INCLUDE "internal_commands.ab2"
0003A202 <internal_commands.ab2@893> INCLUDE "internal_commands.ab2"
0003A206 <internal_commands.ab2@894> INCLUDE "internal_commands.ab2"
0003A208 <internal_commands.ab2@895> INCLUDE "internal_commands.ab2"
0003A20A <internal_commands.ab2@896> INCLUDE "internal_commands.ab2"
0003A20E <internal_commands.ab2@897> INCLUDE "internal_commands.ab2"
0003A210 <internal_commands.ab2@898> INCLUDE "internal_commands.ab2"
0003A214 <internal_commands.ab2@902> INCLUDE "internal_commands.ab2"
0003A216 <internal_commands.ab2@903> INCLUDE "internal_commands.ab2"
0003A21A <internal_commands.ab2@904> INCLUDE "internal_commands.ab2"
0003A21B <internal_commands.ab2@905> INCLUDE "internal_commands.ab2"
0003A21C <internal_commands.ab2@906> INCLUDE "internal_commands.ab2"
0003A21E <internal_commands.ab2@908> INCLUDE "internal_commands.ab2"
0003A222 <internal_commands.ab2@909> INCLUDE "internal_commands.ab2"
0003A224 <internal_commands.ab2@910> INCLUDE "internal_commands.ab2"
0003A226 <internal_commands.ab2@911> INCLUDE "internal_commands.ab2"
0003A22A <internal_commands.ab2@912> INCLUDE "internal_commands.ab2"
0003A22C <internal_commands.ab2@913> INCLUDE "internal_commands.ab2"
0003A230 <internal_commands.ab2@917> INCLUDE "internal_commands.ab2"
0003A232 <internal_commands.ab2@918> INCLUDE "internal_commands.ab2"
0003A236 <internal_commands.ab2@919> INCLUDE "internal_commands.ab2"
0003A237 <internal_commands.ab2@920> INCLUDE "internal_commands.ab2"
0003A238 <internal_commands.ab2@921> INCLUDE "internal_commands.ab2"
0003A23A <internal_commands.ab2@923> INCLUDE "internal_commands.ab2"
0003A23E <internal_commands.ab2@924> INCLUDE "internal_commands.ab2"
0003A240 <internal_commands.ab2@925> INCLUDE "internal_commands.ab2"
0003A242 <internal_commands.ab2@926> INCLUDE "internal_commands.ab2"
0003A246 <internal_commands.ab2@927> INCLUDE "internal_commands.ab2"
0003A248 <internal_commands.ab2@928> INCLUDE "internal_commands.ab2"
0003A24C <internal_commands.ab2@932> INCLUDE "internal_commands.ab2"
0003A24E <internal_commands.ab2@933> INCLUDE "internal_commands.ab2"
0003A253 <internal_commands.ab2@934> INCLUDE "internal_commands.ab2"
0003A254 <internal_commands.ab2@935> INCLUDE "internal_commands.ab2"
0003A256 <internal_commands.ab2@938> INCLUDE "internal_commands.ab2"
0003A25A <internal_commands.ab2@939> INCLUDE "internal_commands.ab2"
0003A25C <internal_commands.ab2@940> INCLUDE "internal_commands.ab2"
0003A25E <internal_commands.ab2@941> INCLUDE "internal_commands.ab2"
0003A262 <internal_commands.ab2@942> INCLUDE "internal_commands.ab2"
0003A264 <internal_commands.ab2@943> INCLUDE "internal_commands.ab2"
0003A268 <internal_commands.ab2@947> INCLUDE "internal_commands.ab2"
0003A26A <internal_commands.ab2@948> INCLUDE "internal_commands.ab2"
0003A26F <internal_commands.ab2@949> INCLUDE "internal_commands.ab2"
0003A270 <internal_commands.ab2@950> INCLUDE "internal_commands.ab2"
0003A272 <internal_commands.ab2@953> INCLUDE "internal_commands.ab2"
0003A276 <internal_commands.ab2@954> INCLUDE "internal_commands.ab2"
0003A278 <internal_commands.ab2@955> INCLUDE "internal_commands.ab2"
0003A27A <internal_commands.ab2@956> INCLUDE "internal_commands.ab2"
0003A27E <internal_commands.ab2@957> INCLUDE "internal_commands.ab2"
0003A280 <internal_commands.ab2@958> INCLUDE "internal_commands.ab2"
0003A284 <internal_commands.ab2@962> INCLUDE "internal_commands.ab2"
0003A286 <internal_commands.ab2@963> INCLUDE "internal_commands.ab2"
0003A28B <internal_commands.ab2@964> INCLUDE "internal_commands.ab2"
0003A28C <internal_commands.ab2@965> INCLUDE "internal_commands.ab2"
0003A28E <internal_commands.ab2@968> INCLUDE "internal_commands.ab2"
0003A292 <internal_commands.ab2@969> INCLUDE "internal_commands.ab2"
0003A294 <internal_commands.ab2@970> INCLUDE "internal_commands.ab2"
0003A296 <internal_commands.ab2@971> INCLUDE "internal_commands.ab2"
0003A29A <internal_commands.ab2@972> INCLUDE "internal_commands.ab2"
0003A29C <internal_commands.ab2@973> INCLUDE "internal_commands.ab2"
0003A2A0 <internal_commands.ab2@977> INCLUDE "internal_commands.ab2"
0003A2A2 <internal_commands.ab2@978> INCLUDE "internal_commands.ab2"
0003A2A7 <internal_commands.ab2@979> INCLUDE "internal_commands.ab2"
0003A2A8 <internal_commands.ab2@980> INCLUDE "internal_commands.ab2"
0003A2AA <internal_commands.ab2@983> INCLUDE "internal_commands.ab2"
0003A2AE <internal_commands.ab2@984> INCLUDE "internal_commands.ab2"
0003A2B0 <internal_commands.ab2@985> INCLUDE "internal_commands.ab2"
0003A2B2 <internal_commands.ab2@986> INCLUDE "internal_commands.ab2"
0003A2B6 <internal_commands.ab2@987> INCLUDE "internal_commands.ab2"
0003A2B8 <internal_commands.ab2@988> INCLUDE "internal_commands.ab2"
0003A2BC <internal_commands.ab2@992> INCLUDE "internal_commands.ab2"
0003A2BE <internal_commands.ab2@993> INCLUDE "internal_commands.ab2"
0003A2C3 <internal_commands.ab2@994> INCLUDE "internal_commands.ab2"
0003A2C4 <internal_commands.ab2@995> INCLUDE "internal_commands.ab2"
0003A2C6 <internal_commands.ab2@998> INCLUDE "internal_commands.ab2"
0003A2CA <internal_commands.ab2@999> INCLUDE "internal_commands.ab2"
0003A2CC <internal_commands.ab2@1000> INCLUDE "internal_commands.ab2"
0003A2CE <internal_commands.ab2@1001> INCLUDE "internal_commands.ab2"
0003A2D2 <internal_commands.ab2@1002> INCLUDE "internal_commands.ab2"
0003A2D4 <internal_commands.ab2@1003> INCLUDE "internal_commands.ab2"
0003A2D8 <internal_commands.ab2@1007> INCLUDE "internal_commands.ab2"
0003A2DA <internal_commands.ab2@1008> INCLUDE "internal_commands.ab2"
0003A2DF <internal_commands.ab2@1009> INCLUDE "internal_commands.ab2"
0003A2E0 <internal_commands.ab2@1010> INCLUDE "internal_commands.ab2"
0003A2E2 <internal_commands.ab2@1013> INCLUDE "internal_commands.ab2"
0003A2E6 <internal_commands.ab2@1014> INCLUDE "internal_commands.ab2"
0003A2E8 <internal_commands.ab2@1015> INCLUDE "internal_commands.ab2"
0003A2EA <internal_commands.ab2@1016> INCLUDE "internal_commands.ab2"
0003A2EE <internal_commands.ab2@1017> INCLUDE "internal_commands.ab2"
0003A2F0 <internal_commands.ab2@1018> INCLUDE "internal_commands.ab2"
0003A2F4 <internal_commands.ab2@1022> INCLUDE "internal_commands.ab2"
0003A2F6 <internal_commands.ab2@1023> INCLUDE "internal_commands.ab2"
0003A2FB <internal_commands.ab2@1024> INCLUDE "internal_commands.ab2"
0003A2FC <internal_commands.ab2@1025> INCLUDE "internal_commands.ab2"
0003A2FE <internal_commands.ab2@1028> INCLUDE "internal_commands.ab2"
0003A302 <internal_commands.ab2@1029> INCLUDE "internal_commands.ab2"
0003A304 <internal_commands.ab2@1030> INCLUDE "internal_commands.ab2"
0003A306 <internal_commands.ab2@1031> INCLUDE "internal_commands.ab2"
0003A30A <internal_commands.ab2@1032> INCLUDE "internal_commands.ab2"
0003A30C <internal_commands.ab2@1033> INCLUDE "internal_commands.ab2"
0003A310 <internal_commands.ab2@1037> INCLUDE "internal_commands.ab2"
0003A312 <internal_commands.ab2@1038> INCLUDE "internal_commands.ab2"
0003A317 <internal_commands.ab2@1039> INCLUDE "internal_commands.ab2"
0003A318 <internal_commands.ab2@1040> INCLUDE "internal_commands.ab2"
0003A31A <internal_commands.ab2@1043> INCLUDE "internal_commands.ab2"
0003A31E <internal_commands.ab2@1044> INCLUDE "internal_commands.ab2"
0003A320 <internal_commands.ab2@1045> INCLUDE "internal_commands.ab2"
0003A322 <internal_commands.ab2@1046> INCLUDE "internal_commands.ab2"
0003A326 <internal_commands.ab2@1047> INCLUDE "internal_commands.ab2"
0003A328 <internal_commands.ab2@1048> INCLUDE "internal_commands.ab2"
0003A32C <internal_commands.ab2@1052> INCLUDE "internal_commands.ab2"
0003A32E <internal_commands.ab2@1053> INCLUDE "internal_commands.ab2"
0003A333 <internal_commands.ab2@1054> INCLUDE "internal_commands.ab2"
0003A334 <internal_commands.ab2@1055> INCLUDE "internal_commands.ab2"
0003A336 <internal_commands.ab2@1058> INCLUDE "internal_commands.ab2"
0003A33A <internal_commands.ab2@1059> INCLUDE "internal_commands.ab2"
0003A33C <internal_commands.ab2@1060> INCLUDE "internal_commands.ab2"
0003A33E <internal_commands.ab2@1061> INCLUDE "internal_commands.ab2"
0003A342 <internal_commands.ab2@1062> INCLUDE "internal_commands.ab2"
0003A344 <internal_commands.ab2@1063> INCLUDE "internal_commands.ab2"
0003A348 <internal_commands.ab2@1067> INCLUDE "internal_commands.ab2"
0003A34A <internal_commands.ab2@1068> INCLUDE "internal_commands.ab2"
0003A34F <internal_commands.ab2@1069> INCLUDE "internal_commands.ab2"
0003A350 <internal_commands.ab2@1070> INCLUDE "internal_commands.ab2"
0003A352 <internal_commands.ab2@1073> INCLUDE "internal_commands.ab2"
0003A356 <internal_commands.ab2@1074> INCLUDE "internal_commands.ab2"
0003A358 <internal_commands.ab2@1075> INCLUDE "internal_commands.ab2"
0003A35A <internal_commands.ab2@1076> INCLUDE "internal_commands.ab2"
0003A35E <internal_commands.ab2@1077> INCLUDE "internal_commands.ab2"
0003A360 <internal_commands.ab2@1078> INCLUDE "internal_commands.ab2"
0003A364 <internal_commands.ab2@1082> INCLUDE "internal_commands.ab2"
0003A366 <internal_commands.ab2@1083> INCLUDE "internal_commands.ab2"
0003A36B <internal_commands.ab2@1084> INCLUDE "internal_commands.ab2"
0003A36C <internal_commands.ab2@1085> INCLUDE "internal_commands.ab2"
0003A36E <internal_commands.ab2@1088> INCLUDE "internal_commands.ab2"
0003A372 <internal_commands.ab2@1089> INCLUDE "internal_commands.ab2"
0003A374 <internal_commands.ab2@1090> INCLUDE "internal_commands.ab2"
0003A376 <internal_commands.ab2@1091> INCLUDE "internal_commands.ab2"
0003A37A <internal_commands.ab2@1092> INCLUDE "internal_commands.ab2"
0003A37C <internal_commands.ab2@1093> INCLUDE "internal_commands.ab2"
0003A380 <internal_commands.ab2@1097> INCLUDE "internal_commands.ab2"
0003A382 <internal_commands.ab2@1098> INCLUDE "internal_commands.ab2"
0003A387 <internal_commands.ab2@1099> INCLUDE "internal_commands.ab2"
0003A388 <internal_commands.ab2@1100> INCLUDE "internal_commands.ab2"
0003A38A <internal_commands.ab2@1103> INCLUDE "internal_commands.ab2"
0003A38E <internal_commands.ab2@1104> INCLUDE "internal_commands.ab2"
0003A390 <internal_commands.ab2@1105> INCLUDE "internal_commands.ab2"
0003A392 <internal_commands.ab2@1106> INCLUDE "internal_commands.ab2"
0003A396 <internal_commands.ab2@1107> INCLUDE "internal_commands.ab2"
0003A398 <internal_commands.ab2@1108> INCLUDE "internal_commands.ab2"
0003A39C <internal_commands.ab2@1112> INCLUDE "internal_commands.ab2"
0003A39E <internal_commands.ab2@1113> INCLUDE "internal_commands.ab2"
0003A3A3 <internal_commands.ab2@1114> INCLUDE "internal_commands.ab2"
0003A3A4 <internal_commands.ab2@1115> INCLUDE "internal_commands.ab2"
0003A3A6 <internal_commands.ab2@1118> INCLUDE "internal_commands.ab2"
0003A3AA <internal_commands.ab2@1119> INCLUDE "internal_commands.ab2"
0003A3AC <internal_commands.ab2@1120> INCLUDE "internal_commands.ab2"
0003A3AE <internal_commands.ab2@1121> INCLUDE "internal_commands.ab2"
0003A3B2 <internal_commands.ab2@1122> INCLUDE "internal_commands.ab2"
0003A3B4 <internal_commands.ab2@1123> INCLUDE "internal_commands.ab2"
0003A3B8 <internal_commands.ab2@1127> INCLUDE "internal_commands.ab2"
0003A3BA <internal_commands.ab2@1128> INCLUDE "internal_commands.ab2"
0003A3BF <internal_commands.ab2@1129> INCLUDE "internal_commands.ab2"
0003A3C0 <internal_commands.ab2@1130> INCLUDE "internal_commands.ab2"
0003A3C2 <internal_commands.ab2@1133> INCLUDE "internal_commands.ab2"
0003A3C6 <internal_commands.ab2@1134> INCLUDE "internal_commands.ab2"
0003A3C8 <internal_commands.ab2@1135> INCLUDE "internal_commands.ab2"
0003A3CA <internal_commands.ab2@1136> INCLUDE "internal_commands.ab2"
0003A3CE <internal_commands.ab2@1137> INCLUDE "internal_commands.ab2"
0003A3D0 <internal_commands.ab2@1138> INCLUDE "internal_commands.ab2"
0003A3D4 <internal_commands.ab2@1142> INCLUDE "internal_commands.ab2"
0003A3D6 <internal_commands.ab2@1143> INCLUDE "internal_commands.ab2"
0003A3DB <internal_commands.ab2@1144> INCLUDE "internal_commands.ab2"
0003A3DC <internal_commands.ab2@1145> INCLUDE "internal_commands.ab2"
0003A3DE <internal_commands.ab2@1148> INCLUDE "internal_commands.ab2"
0003A3E2 <internal_commands.ab2@1149> INCLUDE "internal_commands.ab2"
0003A3E4 <internal_commands.ab2@1150> INCLUDE "internal_commands.ab2"
0003A3E6 <internal_commands.ab2@1151> INCLUDE "internal_commands.ab2"
0003A3EA <internal_commands.ab2@1152> INCLUDE "internal_commands.ab2"
0003A3EC <internal_commands.ab2@1153> INCLUDE "internal_commands.ab2"
0003A3F0 <internal_commands.ab2@1157> INCLUDE "internal_commands.ab2"
0003A3F2 <internal_commands.ab2@1158> INCLUDE "internal_commands.ab2"
0003A3F7 <internal_commands.ab2@1159> INCLUDE "internal_commands.ab2"
0003A3F8 <internal_commands.ab2@1160> INCLUDE "internal_commands.ab2"
0003A3FA <internal_commands.ab2@1163> INCLUDE "internal_commands.ab2"
0003A3FE <internal_commands.ab2@1164> INCLUDE "internal_commands.ab2"
0003A400 <internal_commands.ab2@1165> INCLUDE "internal_commands.ab2"
0003A402 <internal_commands.ab2@1166> INCLUDE "internal_commands.ab2"
0003A406 <internal_commands.ab2@1167> INCLUDE "internal_commands.ab2"
0003A408 <internal_commands.ab2@1168> INCLUDE "internal_commands.ab2"
0003A40C <internal_commands.ab2@1172> INCLUDE "internal_commands.ab2"
0003A40E <internal_commands.ab2@1173> INCLUDE "internal_commands.ab2"
0003A413 <internal_commands.ab2@1174> INCLUDE "internal_commands.ab2"
0003A414 <internal_commands.ab2@1175> INCLUDE "internal_commands.ab2"
0003A416 <internal_commands.ab2@1178> INCLUDE "internal_commands.ab2"
0003A41A <internal_commands.ab2@1179> INCLUDE "internal_commands.ab2"
0003A41C <internal_commands.ab2@1180> INCLUDE "internal_commands.ab2"
0003A41E <internal_commands.ab2@1181> INCLUDE "internal_commands.ab2"
0003A422 <internal_commands.ab2@1182> INCLUDE "internal_commands.ab2"
0003A424 <internal_commands.ab2@1183> INCLUDE "internal_commands.ab2"
0003A428 <internal_commands.ab2@1186> INCLUDE "internal_commands.ab2"
0003A42A <internal_commands.ab2@1187> INCLUDE "internal_commands.ab2"
0003A42E <internal_commands.ab2@1188> INCLUDE "internal_commands.ab2"
0003A42F <internal_commands.ab2@1189> INCLUDE "internal_commands.ab2"
0003A430 <internal_commands.ab2@1190> INCLUDE "internal_commands.ab2"
0003A432 <internal_commands.ab2@1192> INCLUDE "internal_commands.ab2"
0003A436 <internal_commands.ab2@1193> INCLUDE "internal_commands.ab2"
0003A438 <internal_commands.ab2@1194> INCLUDE "internal_commands.ab2"
0003A43A <internal_commands.ab2@1195> INCLUDE "internal_commands.ab2"
0003A43E <internal_commands.ab2@1196> INCLUDE "internal_commands.ab2"
0003A440 <internal_commands.ab2@1197> INCLUDE "internal_commands.ab2"
0003A444 <internal_commands.ab2@1201> INCLUDE "internal_commands.ab2"
0003A446 <internal_commands.ab2@1202> INCLUDE "internal_commands.ab2"
0003A44B <internal_commands.ab2@1203> INCLUDE "internal_commands.ab2"
0003A44C <internal_commands.ab2@1204> INCLUDE "internal_commands.ab2"
0003A44E <internal_commands.ab2@1207> INCLUDE "internal_commands.ab2"
0003A452 <internal_commands.ab2@1208> INCLUDE "internal_commands.ab2"
0003A454 <internal_commands.ab2@1209> INCLUDE "internal_commands.ab2"
0003A456 <internal_commands.ab2@1210> INCLUDE "internal_commands.ab2"
0003A45A <internal_commands.ab2@1211> INCLUDE "internal_commands.ab2"
0003A45C <internal_commands.ab2@1212> INCLUDE "internal_commands.ab2"
0003A460 <internal_commands.ab2@1216> INCLUDE "internal_commands.ab2"
0003A462 <internal_commands.ab2@1217> INCLUDE "internal_commands.ab2"
0003A466 <internal_commands.ab2@1218> INCLUDE "internal_commands.ab2"
0003A467 <internal_commands.ab2@1219> INCLUDE "internal_commands.ab2"
0003A468 <internal_commands.ab2@1220> INCLUDE "internal_commands.ab2"
0003A46A <internal_commands.ab2@1222> INCLUDE "internal_commands.ab2"
0003A46E <internal_commands.ab2@1223> INCLUDE "internal_commands.ab2"
0003A470 <internal_commands.ab2@1224> INCLUDE "internal_commands.ab2"
0003A472 <internal_commands.ab2@1225> INCLUDE "internal_commands.ab2"
0003A476 <internal_commands.ab2@1226> INCLUDE "internal_commands.ab2"
0003A478 <internal_commands.ab2@1227> INCLUDE "internal_commands.ab2"
0003A47C <internal_commands.ab2@1231> INCLUDE "internal_commands.ab2"
0003A47E <internal_commands.ab2@1232> INCLUDE "internal_commands.ab2"
0003A483 <internal_commands.ab2@1233> INCLUDE "internal_commands.ab2"
0003A484 <internal_commands.ab2@1234> INCLUDE "internal_commands.ab2"
0003A486 <internal_commands.ab2@1237> INCLUDE "internal_commands.ab2"
0003A48A <internal_commands.ab2@1238> INCLUDE "internal_commands.ab2"
0003A48C <internal_commands.ab2@1239> INCLUDE "internal_commands.ab2"
0003A48E <internal_commands.ab2@1240> INCLUDE "internal_commands.ab2"
0003A492 <internal_commands.ab2@1241> INCLUDE "internal_commands.ab2"
0003A494 <internal_commands.ab2@1242> INCLUDE "internal_commands.ab2"
0003A498 <internal_commands.ab2@1246> INCLUDE "internal_commands.ab2"
0003A49A <internal_commands.ab2@1247> INCLUDE "internal_commands.ab2"
0003A49F <internal_commands.ab2@1248> INCLUDE "internal_commands.ab2"
0003A4A0 <internal_commands.ab2@1249> INCLUDE "internal_commands.ab2"
0003A4A2 <internal_commands.ab2@1252> INCLUDE "internal_commands.ab2"
0003A4A6 <internal_commands.ab2@1253> INCLUDE "internal_commands.ab2"
0003A4A8 <internal_commands.ab2@1254> INCLUDE "internal_commands.ab2"
0003A4AA <internal_commands.ab2@1255> INCLUDE "internal_commands.ab2"
0003A4AE <internal_commands.ab2@1256> INCLUDE "internal_commands.ab2"
0003A4B0 <internal_commands.ab2@1257> INCLUDE "internal_commands.ab2"
0003A4B4 <internal_commands.ab2@1261> INCLUDE "internal_commands.ab2"
0003A4B6 <internal_commands.ab2@1262> INCLUDE "internal_commands.ab2"
0003A4BA <internal_commands.ab2@1263> INCLUDE "internal_commands.ab2"
0003A4BB <internal_commands.ab2@1264> INCLUDE "internal_commands.ab2"
0003A4BC <internal_commands.ab2@1265> INCLUDE "internal_commands.ab2"
0003A4BE <internal_commands.ab2@1267> INCLUDE "internal_commands.ab2"
0003A4C2 <internal_commands.ab2@1268> INCLUDE "internal_commands.ab2"
0003A4C4 <internal_commands.ab2@1269> INCLUDE "internal_commands.ab2"
0003A4C6 <internal_commands.ab2@1270> INCLUDE "internal_commands.ab2"
0003A4CA <internal_commands.ab2@1271> INCLUDE "internal_commands.ab2"
0003A4CC <internal_commands.ab2@1272> INCLUDE "internal_commands.ab2"
0003A4D0 <internal_commands.ab2@1276> INCLUDE "internal_commands.ab2"
0003A4D2 <internal_commands.ab2@1277> INCLUDE "internal_commands.ab2"
0003A4D7 <internal_commands.ab2@1278> INCLUDE "internal_commands.ab2"
0003A4D8 <internal_commands.ab2@1279> INCLUDE "internal_commands.ab2"
0003A4DA <internal_commands.ab2@1282> INCLUDE "internal_commands.ab2"
0003A4DE <internal_commands.ab2@1283> INCLUDE "internal_commands.ab2"
0003A4E0 <internal_commands.ab2@1284> INCLUDE "internal_commands.ab2"
0003A4E2 <internal_commands.ab2@1285> INCLUDE "internal_commands.ab2"
0003A4E6 <internal_commands.ab2@1286> INCLUDE "internal_commands.ab2"
0003A4E8 <internal_commands.ab2@1287> INCLUDE "internal_commands.ab2"
0003A4EC <internal_commands.ab2@1291> INCLUDE "internal_commands.ab2"
0003A4EE <internal_commands.ab2@1292> INCLUDE "internal_commands.ab2"
0003A4F2 <internal_commands.ab2@1293> INCLUDE "internal_commands.ab2"
0003A4F3 <internal_commands.ab2@1294> INCLUDE "internal_commands.ab2"
0003A4F4 <internal_commands.ab2@1295> INCLUDE "internal_commands.ab2"
0003A4F6 <internal_commands.ab2@1297> INCLUDE "internal_commands.ab2"
0003A4FA <internal_commands.ab2@1298> INCLUDE "internal_commands.ab2"
0003A4FC <internal_commands.ab2@1299> INCLUDE "internal_commands.ab2"
0003A4FE <internal_commands.ab2@1300> INCLUDE "internal_commands.ab2"
0003A502 <internal_commands.ab2@1301> INCLUDE "internal_commands.ab2"
0003A504 <internal_commands.ab2@1302> INCLUDE "internal_commands.ab2"
0003A508 <internal_commands.ab2@1306> INCLUDE "internal_commands.ab2"
0003A50A <internal_commands.ab2@1307> INCLUDE "internal_commands.ab2"
0003A50E <internal_commands.ab2@1308> INCLUDE "internal_commands.ab2"
0003A50F <internal_commands.ab2@1309> INCLUDE "internal_commands.ab2"
0003A510 <internal_commands.ab2@1310> INCLUDE "internal_commands.ab2"
0003A512 <internal_commands.ab2@1312> INCLUDE "internal_commands.ab2"
0003A516 <internal_commands.ab2@1313> INCLUDE "internal_commands.ab2"
0003A518 <internal_commands.ab2@1314> INCLUDE "internal_commands.ab2"
0003A51A <internal_commands.ab2@1315> INCLUDE "internal_commands.ab2"
0003A51E <internal_commands.ab2@1316> INCLUDE "internal_commands.ab2"
0003A520 <internal_commands.ab2@1317> INCLUDE "internal_commands.ab2"
0003A524 <internal_commands.ab2@1321> INCLUDE "internal_commands.ab2"
0003A526 <internal_commands.ab2@1322> INCLUDE "internal_commands.ab2"
0003A52E <internal_commands.ab2@1323> INCLUDE "internal_commands.ab2"
0003A52F <internal_commands.ab2@1324> INCLUDE "internal_commands.ab2"
0003A530 <internal_commands.ab2@1325> INCLUDE "internal_commands.ab2"
0003A532 <internal_commands.ab2@1327> INCLUDE "internal_commands.ab2"
0003A536 <internal_commands.ab2@1328> INCLUDE "internal_commands.ab2"
0003A538 <internal_commands.ab2@1329> INCLUDE "internal_commands.ab2"
0003A53A <internal_commands.ab2@1330> INCLUDE "internal_commands.ab2"
0003A53E <internal_commands.ab2@1331> INCLUDE "internal_commands.ab2"
0003A540 <internal_commands.ab2@1332> INCLUDE "internal_commands.ab2"
0003A544 <internal_commands.ab2@1336> INCLUDE "internal_commands.ab2"
0003A546 <internal_commands.ab2@1337> INCLUDE "internal_commands.ab2"
0003A54A <internal_commands.ab2@1338> INCLUDE "internal_commands.ab2"
0003A54B <internal_commands.ab2@1339> INCLUDE "internal_commands.ab2"
0003A54C <internal_commands.ab2@1340> INCLUDE "internal_commands.ab2"
0003A54E <internal_commands.ab2@1342> INCLUDE "internal_commands.ab2"
0003A552 <internal_commands.ab2@1343> INCLUDE "internal_commands.ab2"
0003A554 <internal_commands.ab2@1344> INCLUDE "internal_commands.ab2"
0003A556 <internal_commands.ab2@1345> INCLUDE "internal_commands.ab2"
0003A55A <internal_commands.ab2@1346> INCLUDE "internal_commands.ab2"
0003A55C <internal_commands.ab2@1347> INCLUDE "internal_commands.ab2"
0003A560 <internal_commands.ab2@1351> INCLUDE "internal_commands.ab2"
0003A562 <internal_commands.ab2@1352> INCLUDE "internal_commands.ab2"
0003A566 <internal_commands.ab2@1353> INCLUDE "internal_commands.ab2"
0003A567 <internal_commands.ab2@1354> INCLUDE "internal_commands.ab2"
0003A568 <internal_commands.ab2@1355> INCLUDE "internal_commands.ab2"
0003A56A <internal_commands.ab2@1357> INCLUDE "internal_commands.ab2"
0003A56E <internal_commands.ab2@1358> INCLUDE "internal_commands.ab2"
0003A570 <internal_commands.ab2@1359> INCLUDE "internal_commands.ab2"
0003A572 <internal_commands.ab2@1360> INCLUDE "internal_commands.ab2"
0003A576 <internal_commands.ab2@1361> INCLUDE "internal_commands.ab2"
0003A578 <internal_commands.ab2@1362> INCLUDE "internal_commands.ab2"
0003A57C <internal_commands.ab2@1366> INCLUDE "internal_commands.ab2"
0003A57E <internal_commands.ab2@1367> INCLUDE "internal_commands.ab2"
0003A582 <internal_commands.ab2@1368> INCLUDE "internal_commands.ab2"
0003A583 <internal_commands.ab2@1369> INCLUDE "internal_commands.ab2"
0003A584 <internal_commands.ab2@1370> INCLUDE "internal_commands.ab2"
0003A586 <internal_commands.ab2@1372> INCLUDE "internal_commands.ab2"
0003A58A <internal_commands.ab2@1373> INCLUDE "internal_commands.ab2"
0003A58C <internal_commands.ab2@1374> INCLUDE "internal_commands.ab2"
0003A58E <internal_commands.ab2@1375> INCLUDE "internal_commands.ab2"
0003A592 <internal_commands.ab2@1376> INCLUDE "internal_commands.ab2"
0003A594 <internal_commands.ab2@1377> INCLUDE "internal_commands.ab2"
0003A598 <internal_commands.ab2@1381> INCLUDE "internal_commands.ab2"
0003A59A <internal_commands.ab2@1382> INCLUDE "internal_commands.ab2"
0003A59F <internal_commands.ab2@1383> INCLUDE "internal_commands.ab2"
0003A5A0 <internal_commands.ab2@1384> INCLUDE "internal_commands.ab2"
0003A5A2 <internal_commands.ab2@1387> INCLUDE "internal_commands.ab2"
0003A5A6 <internal_commands.ab2@1388> INCLUDE "internal_commands.ab2"
0003A5A8 <internal_commands.ab2@1389> INCLUDE "internal_commands.ab2"
0003A5AA <internal_commands.ab2@1390> INCLUDE "internal_commands.ab2"
0003A5AE <internal_commands.ab2@1391> INCLUDE "internal_commands.ab2"
0003A5B0 <internal_commands.ab2@1392> INCLUDE "internal_commands.ab2"
0003A5B4 <internal_commands.ab2@1396> INCLUDE "internal_commands.ab2"
0003A5B6 <internal_commands.ab2@1397> INCLUDE "internal_commands.ab2"
0003A5BA <internal_commands.ab2@1398> INCLUDE "internal_commands.ab2"
0003A5BB <internal_commands.ab2@1399> INCLUDE "internal_commands.ab2"
0003A5BC <internal_commands.ab2@1400> INCLUDE "internal_commands.ab2"
0003A5BE <internal_commands.ab2@1402> INCLUDE "internal_commands.ab2"
0003A5C2 <internal_commands.ab2@1403> INCLUDE "internal_commands.ab2"
0003A5C4 <internal_commands.ab2@1404> INCLUDE "internal_commands.ab2"
0003A5C6 <internal_commands.ab2@1405> INCLUDE "internal_commands.ab2"
0003A5CA <internal_commands.ab2@1406> INCLUDE "internal_commands.ab2"
0003A5CC <internal_commands.ab2@1407> INCLUDE "internal_commands.ab2"
0003A5D0 <internal_commands.ab2@1411> INCLUDE "internal_commands.ab2"
0003A5D2 <internal_commands.ab2@1412> INCLUDE "internal_commands.ab2"
0003A5D6 <internal_commands.ab2@1413> INCLUDE "internal_commands.ab2"
0003A5D7 <internal_commands.ab2@1414> INCLUDE "internal_commands.ab2"
0003A5D8 <internal_commands.ab2@1415> INCLUDE "internal_commands.ab2"
0003A5DA <internal_commands.ab2@1417> INCLUDE "internal_commands.ab2"
0003A5DE <internal_commands.ab2@1418> INCLUDE "internal_commands.ab2"
0003A5E0 <internal_commands.ab2@1419> INCLUDE "internal_commands.ab2"
0003A5E2 <internal_commands.ab2@1420> INCLUDE "internal_commands.ab2"
0003A5E6 <internal_commands.ab2@1421> INCLUDE "internal_commands.ab2"
0003A5E8 <internal_commands.ab2@1422> INCLUDE "internal_commands.ab2"
0003A5EC <internal_commands.ab2@1426> INCLUDE "internal_commands.ab2"
0003A5EE <internal_commands.ab2@1427> INCLUDE "internal_commands.ab2"
0003A5F3 <internal_commands.ab2@1428> INCLUDE "internal_commands.ab2"
0003A5F4 <internal_commands.ab2@1429> INCLUDE "internal_commands.ab2"
0003A5F6 <internal_commands.ab2@1432> INCLUDE "internal_commands.ab2"
0003A5FA <internal_commands.ab2@1433> INCLUDE "internal_commands.ab2"
0003A5FC <internal_commands.ab2@1434> INCLUDE "internal_commands.ab2"
0003A5FE <internal_commands.ab2@1435> INCLUDE "internal_commands.ab2"
0003A602 <internal_commands.ab2@1436> INCLUDE "internal_commands.ab2"
0003A604 <internal_commands.ab2@1437> INCLUDE "internal_commands.ab2"
0003A608 <internal_commands.ab2@1441> INCLUDE "internal_commands.ab2"
0003A60A <internal_commands.ab2@1442> INCLUDE "internal_commands.ab2"
0003A60F <internal_commands.ab2@1443> INCLUDE "internal_commands.ab2"
0003A610 <internal_commands.ab2@1444> INCLUDE "internal_commands.ab2"
0003A612 <internal_commands.ab2@1447> INCLUDE "internal_commands.ab2"
0003A616 <internal_commands.ab2@1448> INCLUDE "internal_commands.ab2"
0003A618 <internal_commands.ab2@1449> INCLUDE "internal_commands.ab2"
0003A61A <internal_commands.ab2@1450> INCLUDE "internal_commands.ab2"
0003A61E <internal_commands.ab2@1451> INCLUDE "internal_commands.ab2"
0003A620 <internal_commands.ab2@1452> INCLUDE "internal_commands.ab2"
0003A624 <internal_commands.ab2@1457> INCLUDE "internal_commands.ab2"
0003A626 <internal_commands.ab2@1458> INCLUDE "internal_commands.ab2"
0003A62C <internal_commands.ab2@1459> INCLUDE "internal_commands.ab2"
0003A62D <internal_commands.ab2@1460> INCLUDE "internal_commands.ab2"
0003A62E <internal_commands.ab2@1461> INCLUDE "internal_commands.ab2"
0003A630 <internal_commands.ab2@1463> INCLUDE "internal_commands.ab2"
0003A634 <internal_commands.ab2@1464> INCLUDE "internal_commands.ab2"
0003A636 <internal_commands.ab2@1465> INCLUDE "internal_commands.ab2"
0003A638 <internal_commands.ab2@1466> INCLUDE "internal_commands.ab2"
0003A63C <internal_commands.ab2@1467> INCLUDE "internal_commands.ab2"
0003A63E <internal_commands.ab2@1468> INCLUDE "internal_commands.ab2"
0003A642 <internal_commands.ab2@1472> INCLUDE "internal_commands.ab2"
0003A644 <internal_commands.ab2@1473> INCLUDE "internal_commands.ab2"
0003A64A <internal_commands.ab2@1474> INCLUDE "internal_commands.ab2"
0003A64B <internal_commands.ab2@1475> INCLUDE "internal_commands.ab2"
0003A64C <internal_commands.ab2@1476> INCLUDE "internal_commands.ab2"
0003A64E <internal_commands.ab2@1478> INCLUDE "internal_commands.ab2"
0003A652 <internal_commands.ab2@1479> INCLUDE "internal_commands.ab2"
0003A654 <internal_commands.ab2@1480> INCLUDE "internal_commands.ab2"
0003A656 <internal_commands.ab2@1481> INCLUDE "internal_commands.ab2"
0003A65A <internal_commands.ab2@1482> INCLUDE "internal_commands.ab2"
0003A65C <internal_commands.ab2@1483> INCLUDE "internal_commands.ab2"
0003A660 <internal_commands.ab2@1487> INCLUDE "internal_commands.ab2"
0003A662 <internal_commands.ab2@1488> INCLUDE "internal_commands.ab2"
0003A668 <internal_commands.ab2@1489> INCLUDE "internal_commands.ab2"
0003A669 <internal_commands.ab2@1490> INCLUDE "internal_commands.ab2"
0003A66A <internal_commands.ab2@1491> INCLUDE "internal_commands.ab2"
0003A66C <internal_commands.ab2@1493> INCLUDE "internal_commands.ab2"
0003A670 <internal_commands.ab2@1494> INCLUDE "internal_commands.ab2"
0003A672 <internal_commands.ab2@1495> INCLUDE "internal_commands.ab2"
0003A674 <internal_commands.ab2@1496> INCLUDE "internal_commands.ab2"
0003A678 <internal_commands.ab2@1497> INCLUDE "internal_commands.ab2"
0003A67A <internal_commands.ab2@1498> INCLUDE "internal_commands.ab2"
0003A67E <internal_commands.ab2@1502> INCLUDE "internal_commands.ab2"
0003A680 <internal_commands.ab2@1503> INCLUDE "internal_commands.ab2"
0003A685 <internal_commands.ab2@1504> INCLUDE "internal_commands.ab2"
0003A686 <internal_commands.ab2@1505> INCLUDE "internal_commands.ab2"
0003A688 <internal_commands.ab2@1508> INCLUDE "internal_commands.ab2"
0003A68C <internal_commands.ab2@1509> INCLUDE "internal_commands.ab2"
0003A68E <internal_commands.ab2@1510> INCLUDE "internal_commands.ab2"
0003A690 <internal_commands.ab2@1511> INCLUDE "internal_commands.ab2"
0003A694 <internal_commands.ab2@1512> INCLUDE "internal_commands.ab2"
0003A696 <internal_commands.ab2@1513> INCLUDE "internal_commands.ab2"
0003A69A <internal_commands.ab2@1517> INCLUDE "internal_commands.ab2"
0003A69C <internal_commands.ab2@1518> INCLUDE "internal_commands.ab2"
0003A6A1 <internal_commands.ab2@1519> INCLUDE "internal_commands.ab2"
0003A6A2 <internal_commands.ab2@1520> INCLUDE "internal_commands.ab2"
0003A6A4 <internal_commands.ab2@1523> INCLUDE "internal_commands.ab2"
0003A6A8 <internal_commands.ab2@1524> INCLUDE "internal_commands.ab2"
0003A6AA <internal_commands.ab2@1525> INCLUDE "internal_commands.ab2"
0003A6AC <internal_commands.ab2@1526> INCLUDE "internal_commands.ab2"
0003A6B0 <internal_commands.ab2@1527> INCLUDE "internal_commands.ab2"
0003A6B2 <internal_commands.ab2@1528> INCLUDE "internal_commands.ab2"
0003A6B6 <internal_commands.ab2@1532> INCLUDE "internal_commands.ab2"
0003A6B8 <internal_commands.ab2@1533> INCLUDE "internal_commands.ab2"
0003A6BD <internal_commands.ab2@1534> INCLUDE "internal_commands.ab2"
0003A6BE <internal_commands.ab2@1535> INCLUDE "internal_commands.ab2"
0003A6C0 <internal_commands.ab2@1538> INCLUDE "internal_commands.ab2"
0003A6C4 <internal_commands.ab2@1539> INCLUDE "internal_commands.ab2"
0003A6C6 <internal_commands.ab2@1540> INCLUDE "internal_commands.ab2"
0003A6C8 <internal_commands.ab2@1541> INCLUDE "internal_commands.ab2"
0003A6CC <internal_commands.ab2@1542> INCLUDE "internal_commands.ab2"
0003A6CE <internal_commands.ab2@1543> INCLUDE "internal_commands.ab2"
0003A6D2 <internal_commands.ab2@1547> INCLUDE "internal_commands.ab2"
0003A6D4 <internal_commands.ab2@1548> INCLUDE "internal_commands.ab2"
0003A6D8 <internal_commands.ab2@1549> INCLUDE "internal_commands.ab2"
0003A6D9 <internal_commands.ab2@1550> INCLUDE "internal_commands.ab2"
0003A6DA <internal_commands.ab2@1551> INCLUDE "internal_commands.ab2"
0003A6DC <internal_commands.ab2@1553> INCLUDE "internal_commands.ab2"
0003A6E0 <internal_commands.ab2@1554> INCLUDE "internal_commands.ab2"
0003A6E2 <internal_commands.ab2@1555> INCLUDE "internal_commands.ab2"
0003A6E4 <internal_commands.ab2@1556> INCLUDE "internal_commands.ab2"
0003A6E8 <internal_commands.ab2@1557> INCLUDE "internal_commands.ab2"
0003A6EA <internal_commands.ab2@1558> INCLUDE "internal_commands.ab2"
0003A6EE <internal_commands.ab2@1562> INCLUDE "internal_commands.ab2"
0003A6F0 <internal_commands.ab2@1563> INCLUDE "internal_commands.ab2"
0003A6F5 <internal_commands.ab2@1564> INCLUDE "internal_commands.ab2"
0003A6F6 <internal_commands.ab2@1565> INCLUDE "internal_commands.ab2"
0003A6F8 <internal_commands.ab2@1568> INCLUDE "internal_commands.ab2"
0003A6FC <internal_commands.ab2@1569> INCLUDE "internal_commands.ab2"
0003A6FE <internal_commands.ab2@1570> INCLUDE "internal_commands.ab2"
0003A700 <internal_commands.ab2@1571> INCLUDE "internal_commands.ab2"
0003A704 <internal_commands.ab2@1572> INCLUDE "internal_commands.ab2"
0003A706 <internal_commands.ab2@1573> INCLUDE "internal_commands.ab2"
0003A70A <internal_commands.ab2@1577> INCLUDE "internal_commands.ab2"
0003A70C <internal_commands.ab2@1578> INCLUDE "internal_commands.ab2"
0003A710 <internal_commands.ab2@1579> INCLUDE "internal_commands.ab2"
0003A711 <internal_commands.ab2@1580> INCLUDE "internal_commands.ab2"
0003A712 <internal_commands.ab2@1581> INCLUDE "internal_commands.ab2"
0003A714 <internal_commands.ab2@1583> INCLUDE "internal_commands.ab2"
0003A718 <internal_commands.ab2@1584> INCLUDE "internal_commands.ab2"
0003A71A <internal_commands.ab2@1585> INCLUDE "internal_commands.ab2"
0003A71C <internal_commands.ab2@1586> INCLUDE "internal_commands.ab2"
0003A720 <internal_commands.ab2@1587> INCLUDE "internal_commands.ab2"
0003A722 <internal_commands.ab2@1588> INCLUDE "internal_commands.ab2"
0003A726 <internal_commands.ab2@1592> INCLUDE "internal_commands.ab2"
0003A728 <internal_commands.ab2@1593> INCLUDE "internal_commands.ab2"
0003A72C <internal_commands.ab2@1594> INCLUDE "internal_commands.ab2"
0003A72D <internal_commands.ab2@1595> INCLUDE "internal_commands.ab2"
0003A72E <internal_commands.ab2@1596> INCLUDE "internal_commands.ab2"
0003A730 <internal_commands.ab2@1598> INCLUDE "internal_commands.ab2"
0003A734 <internal_commands.ab2@1599> INCLUDE "internal_commands.ab2"
0003A736 <internal_commands.ab2@1600> INCLUDE "internal_commands.ab2"
0003A738 <internal_commands.ab2@1601> INCLUDE "internal_commands.ab2"
0003A73C <internal_commands.ab2@1602> INCLUDE "internal_commands.ab2"
0003A73E <internal_commands.ab2@1603> INCLUDE "internal_commands.ab2"
0003A742 <internal_commands.ab2@1607> INCLUDE "internal_commands.ab2"
0003A744 <internal_commands.ab2@1608> INCLUDE "internal_commands.ab2"
0003A747 <internal_commands.ab2@1609> INCLUDE "internal_commands.ab2"
0003A748 <internal_commands.ab2@1610> INCLUDE "internal_commands.ab2"
0003A74A <internal_commands.ab2@1613> INCLUDE "internal_commands.ab2"
0003A74E <internal_commands.ab2@1614> INCLUDE "internal_commands.ab2"
0003A750 <internal_commands.ab2@1615> INCLUDE "internal_commands.ab2"
0003A752 <internal_commands.ab2@1616> INCLUDE "internal_commands.ab2"
0003A756 <internal_commands.ab2@1617> INCLUDE "internal_commands.ab2"
0003A758 <internal_commands.ab2@1618> INCLUDE "internal_commands.ab2"
0003A75C <internal_commands.ab2@1622> INCLUDE "internal_commands.ab2"
0003A75E <internal_commands.ab2@1623> INCLUDE "internal_commands.ab2"
0003A762 <internal_commands.ab2@1624> INCLUDE "internal_commands.ab2"
0003A763 <internal_commands.ab2@1625> INCLUDE "internal_commands.ab2"
0003A764 <internal_commands.ab2@1626> INCLUDE "internal_commands.ab2"
0003A766 <internal_commands.ab2@1628> INCLUDE "internal_commands.ab2"
0003A76A <internal_commands.ab2@1629> INCLUDE "internal_commands.ab2"
0003A76C <internal_commands.ab2@1630> INCLUDE "internal_commands.ab2"
0003A76E <internal_commands.ab2@1631> INCLUDE "internal_commands.ab2"
0003A772 <internal_commands.ab2@1632> INCLUDE "internal_commands.ab2"
0003A774 <internal_commands.ab2@1633> INCLUDE "internal_commands.ab2"
0003A778 <internal_commands.ab2@1637> INCLUDE "internal_commands.ab2"
0003A77A <internal_commands.ab2@1638> INCLUDE "internal_commands.ab2"
0003A77E <internal_commands.ab2@1639> INCLUDE "internal_commands.ab2"
0003A77F <internal_commands.ab2@1640> INCLUDE "internal_commands.ab2"
0003A780 <internal_commands.ab2@1641> INCLUDE "internal_commands.ab2"
0003A782 <internal_commands.ab2@1643> INCLUDE "internal_commands.ab2"
0003A786 <internal_commands.ab2@1644> INCLUDE "internal_commands.ab2"
0003A788 <internal_commands.ab2@1645> INCLUDE "internal_commands.ab2"
0003A78A <internal_commands.ab2@1646> INCLUDE "internal_commands.ab2"
0003A78E <internal_commands.ab2@1647> INCLUDE "internal_commands.ab2"
0003A790 <internal_commands.ab2@1648> INCLUDE "internal_commands.ab2"
0003A794 <internal_commands.ab2@1652> INCLUDE "internal_commands.ab2"
0003A796 <internal_commands.ab2@1653> INCLUDE "internal_commands.ab2"
0003A79C <internal_commands.ab2@1654> INCLUDE "internal_commands.ab2"
0003A79D <internal_commands.ab2@1655> INCLUDE "internal_commands.ab2"
0003A79E <internal_commands.ab2@1656> INCLUDE "internal_commands.ab2"
0003A7A0 <internal_commands.ab2@1658> INCLUDE "internal_commands.ab2"
0003A7A4 <internal_commands.ab2@1659> INCLUDE "internal_commands.ab2"
0003A7A6 <internal_commands.ab2@1660> INCLUDE "internal_commands.ab2"
0003A7A8 <internal_commands.ab2@1661> INCLUDE "internal_commands.ab2"
0003A7AC <internal_commands.ab2@1662> INCLUDE "internal_commands.ab2"
0003A7AE <internal_commands.ab2@1663> INCLUDE "internal_commands.ab2"
0003A7B2 <internal_commands.ab2@1667> INCLUDE "internal_commands.ab2"
0003A7B4 <internal_commands.ab2@1668> INCLUDE "internal_commands.ab2"
0003A7B8 <internal_commands.ab2@1669> INCLUDE "internal_commands.ab2"
0003A7B9 <internal_commands.ab2@1670> INCLUDE "internal_commands.ab2"
0003A7BA <internal_commands.ab2@1671> INCLUDE "internal_commands.ab2"
0003A7BC <internal_commands.ab2@1673> INCLUDE "internal_commands.ab2"
0003A7C0 <internal_commands.ab2@1674> INCLUDE "internal_commands.ab2"
0003A7C2 <internal_commands.ab2@1675> INCLUDE "internal_commands.ab2"
0003A7C4 <internal_commands.ab2@1676> INCLUDE "internal_commands.ab2"
0003A7C8 <internal_commands.ab2@1677> INCLUDE "internal_commands.ab2"
0003A7CA <internal_commands.ab2@1678> INCLUDE "internal_commands.ab2"
0003A7CE <internal_commands.ab2@1682> INCLUDE "internal_commands.ab2"
0003A7D0 <internal_commands.ab2@1683> INCLUDE "internal_commands.ab2"
0003A7D4 <internal_commands.ab2@1684> INCLUDE "internal_commands.ab2"
0003A7D5 <internal_commands.ab2@1685> INCLUDE "internal_commands.ab2"
0003A7D6 <internal_commands.ab2@1686> INCLUDE "internal_commands.ab2"
0003A7D8 <internal_commands.ab2@1688> INCLUDE "internal_commands.ab2"
0003A7DC <internal_commands.ab2@1689> INCLUDE "internal_commands.ab2"
0003A7DE <internal_commands.ab2@1690> INCLUDE "internal_commands.ab2"
0003A7E0 <internal_commands.ab2@1691> INCLUDE "internal_commands.ab2"
0003A7E4 <internal_commands.ab2@1692> INCLUDE "internal_commands.ab2"
0003A7E6 <internal_commands.ab2@1693> INCLUDE "internal_commands.ab2"
0003A7EA <internal_commands.ab2@1697> INCLUDE "internal_commands.ab2"
0003A7EC <internal_commands.ab2@1698> INCLUDE "internal_commands.ab2"
0003A7F1 <internal_commands.ab2@1699> INCLUDE "internal_commands.ab2"
0003A7F2 <internal_commands.ab2@1700> INCLUDE "internal_commands.ab2"
0003A7F4 <internal_commands.ab2@1703> INCLUDE "internal_commands.ab2"
0003A7F8 <internal_commands.ab2@1704> INCLUDE "internal_commands.ab2"
0003A7FA <internal_commands.ab2@1705> INCLUDE "internal_commands.ab2"
0003A7FC <internal_commands.ab2@1706> INCLUDE "internal_commands.ab2"
0003A800 <internal_commands.ab2@1707> INCLUDE "internal_commands.ab2"
0003A802 <internal_commands.ab2@1708> INCLUDE "internal_commands.ab2"
0003A806 <internal_commands.ab2@1712> INCLUDE "internal_commands.ab2"
0003A808 <internal_commands.ab2@1713> INCLUDE "internal_commands.ab2"
0003A80D <internal_commands.ab2@1714> INCLUDE "internal_commands.ab2"
0003A80E <internal_commands.ab2@1715> INCLUDE "internal_commands.ab2"
0003A810 <internal_commands.ab2@1718> INCLUDE "internal_commands.ab2"
0003A814 <internal_commands.ab2@1719> INCLUDE "internal_commands.ab2"
0003A816 <internal_commands.ab2@1720> INCLUDE "internal_commands.ab2"
0003A818 <internal_commands.ab2@1721> INCLUDE "internal_commands.ab2"
0003A81C <internal_commands.ab2@1722> INCLUDE "internal_commands.ab2"
0003A81E <internal_commands.ab2@1723> INCLUDE "internal_commands.ab2"
0003A822 <internal_commands.ab2@1727> INCLUDE "internal_commands.ab2"
0003A824 <internal_commands.ab2@1728> INCLUDE "internal_commands.ab2"
0003A828 <internal_commands.ab2@1729> INCLUDE "internal_commands.ab2"
0003A829 <internal_commands.ab2@1730> INCLUDE "internal_commands.ab2"
0003A82A <internal_commands.ab2@1731> INCLUDE "internal_commands.ab2"
0003A82C <internal_commands.ab2@1733> INCLUDE "internal_commands.ab2"
0003A830 <internal_commands.ab2@1734> INCLUDE "internal_commands.ab2"
0003A832 <internal_commands.ab2@1735> INCLUDE "internal_commands.ab2"
0003A834 <internal_commands.ab2@1736> INCLUDE "internal_commands.ab2"
0003A838 <internal_commands.ab2@1737> INCLUDE "internal_commands.ab2"
0003A83A <internal_commands.ab2@1738> INCLUDE "internal_commands.ab2"
0003A83E <internal_commands.ab2@1742> INCLUDE "internal_commands.ab2"
0003A840 <internal_commands.ab2@1743> INCLUDE "internal_commands.ab2"
0003A844 <internal_commands.ab2@1744> INCLUDE "internal_commands.ab2"
0003A845 <internal_commands.ab2@1745> INCLUDE "internal_commands.ab2"
0003A846 <internal_commands.ab2@1746> INCLUDE "internal_commands.ab2"
0003A848 <internal_commands.ab2@1748> INCLUDE "internal_commands.ab2"
0003A84C <internal_commands.ab2@1749> INCLUDE "internal_commands.ab2"
0003A84E <internal_commands.ab2@1750> INCLUDE "internal_commands.ab2"
0003A850 <internal_commands.ab2@1751> INCLUDE "internal_commands.ab2"
0003A854 <internal_commands.ab2@1752> INCLUDE "internal_commands.ab2"
0003A856 <internal_commands.ab2@1753> INCLUDE "internal_commands.ab2"
0003A85A <internal_commands.ab2@1757> INCLUDE "internal_commands.ab2"
0003A85C <internal_commands.ab2@1758> INCLUDE "internal_commands.ab2"
0003A860 <internal_commands.ab2@1759> INCLUDE "internal_commands.ab2"
0003A861 <internal_commands.ab2@1760> INCLUDE "internal_commands.ab2"
0003A862 <internal_commands.ab2@1761> INCLUDE "internal_commands.ab2"
0003A864 <internal_commands.ab2@1763> INCLUDE "internal_commands.ab2"
0003A868 <internal_commands.ab2@1764> INCLUDE "internal_commands.ab2"
0003A86A <internal_commands.ab2@1765> INCLUDE "internal_commands.ab2"
0003A86C <internal_commands.ab2@1766> INCLUDE "internal_commands.ab2"
0003A870 <internal_commands.ab2@1767> INCLUDE "internal_commands.ab2"
0003A872 <internal_commands.ab2@1768> INCLUDE "internal_commands.ab2"
0003A876 <internal_commands.ab2@1772> INCLUDE "internal_commands.ab2"
0003A878 <internal_commands.ab2@1773> INCLUDE "internal_commands.ab2"
0003A87D <internal_commands.ab2@1774> INCLUDE "internal_commands.ab2"
0003A87E <internal_commands.ab2@1775> INCLUDE "internal_commands.ab2"
0003A880 <internal_commands.ab2@1778> INCLUDE "internal_commands.ab2"
0003A884 <internal_commands.ab2@1779> INCLUDE "internal_commands.ab2"
0003A886 <internal_commands.ab2@1780> INCLUDE "internal_commands.ab2"
0003A888 <internal_commands.ab2@1781> INCLUDE "internal_commands.ab2"
0003A88C <internal_commands.ab2@1782> INCLUDE "internal_commands.ab2"
0003A88E <internal_commands.ab2@1783> INCLUDE "internal_commands.ab2"
0003A892 <internal_commands.ab2@1787> INCLUDE "internal_commands.ab2"
0003A894 <internal_commands.ab2@1788> INCLUDE "internal_commands.ab2"
0003A898 <internal_commands.ab2@1789> INCLUDE "internal_commands.ab2"
0003A899 <internal_commands.ab2@1790> INCLUDE "internal_commands.ab2"
0003A89A <internal_commands.ab2@1791> INCLUDE "internal_commands.ab2"
0003A89C <internal_commands.ab2@1793> INCLUDE "internal_commands.ab2"
0003A8A0 <internal_commands.ab2@1794> INCLUDE "internal_commands.ab2"
0003A8A2 <internal_commands.ab2@1795> INCLUDE "internal_commands.ab2"
0003A8A4 <internal_commands.ab2@1796> INCLUDE "internal_commands.ab2"
0003A8A8 <internal_commands.ab2@1797> INCLUDE "internal_commands.ab2"
0003A8AA <internal_commands.ab2@1798> INCLUDE "internal_commands.ab2"
0003A8AE <internal_commands.ab2@1802> INCLUDE "internal_commands.ab2"
0003A8B0 <internal_commands.ab2@1803> INCLUDE "internal_commands.ab2"
0003A8B4 <internal_commands.ab2@1804> INCLUDE "internal_commands.ab2"
0003A8B5 <internal_commands.ab2@1805> INCLUDE "internal_commands.ab2"
0003A8B6 <internal_commands.ab2@1806> INCLUDE "internal_commands.ab2"
0003A8B8 <internal_commands.ab2@1808> INCLUDE "internal_commands.ab2"
0003A8BC <internal_commands.ab2@1809> INCLUDE "internal_commands.ab2"
0003A8BE <internal_commands.ab2@1810> INCLUDE "internal_commands.ab2"
0003A8C0 <internal_commands.ab2@1811> INCLUDE "internal_commands.ab2"
0003A8C4 <internal_commands.ab2@1812> INCLUDE "internal_commands.ab2"
0003A8C6 <internal_commands.ab2@1813> INCLUDE "internal_commands.ab2"
0003A8CA <internal_commands.ab2@1817> INCLUDE "internal_commands.ab2"
0003A8CC <internal_commands.ab2@1818> INCLUDE "internal_commands.ab2"
0003A8D0 <internal_commands.ab2@1819> INCLUDE "internal_commands.ab2"
0003A8D1 <internal_commands.ab2@1820> INCLUDE "internal_commands.ab2"
0003A8D2 <internal_commands.ab2@1821> INCLUDE "internal_commands.ab2"
0003A8D4 <internal_commands.ab2@1823> INCLUDE "internal_commands.ab2"
0003A8D8 <internal_commands.ab2@1824> INCLUDE "internal_commands.ab2"
0003A8DA <internal_commands.ab2@1825> INCLUDE "internal_commands.ab2"
0003A8DC <internal_commands.ab2@1826> INCLUDE "internal_commands.ab2"
0003A8E0 <internal_commands.ab2@1827> INCLUDE "internal_commands.ab2"
0003A8E2 <internal_commands.ab2@1828> INCLUDE "internal_commands.ab2"
0003A8E6 <internal_commands.ab2@1832> INCLUDE "internal_commands.ab2"
0003A8E8 <internal_commands.ab2@1833> INCLUDE "internal_commands.ab2"
0003A8EC <internal_commands.ab2@1834> INCLUDE "internal_commands.ab2"
0003A8ED <internal_commands.ab2@1835> INCLUDE "internal_commands.ab2"
0003A8EE <internal_commands.ab2@1836> INCLUDE "internal_commands.ab2"
0003A8F0 <internal_commands.ab2@1838> INCLUDE "internal_commands.ab2"
0003A8F4 <internal_commands.ab2@1839> INCLUDE "internal_commands.ab2"
0003A8F6 <internal_commands.ab2@1840> INCLUDE "internal_commands.ab2"
0003A8F8 <internal_commands.ab2@1841> INCLUDE "internal_commands.ab2"
0003A8FC <internal_commands.ab2@1842> INCLUDE "internal_commands.ab2"
0003A8FE <internal_commands.ab2@1843> INCLUDE "internal_commands.ab2"
0003A902 <internal_commands.ab2@1847> INCLUDE "internal_commands.ab2"
0003A904 <internal_commands.ab2@1848> INCLUDE "internal_commands.ab2"
0003A908 <internal_commands.ab2@1849> INCLUDE "internal_commands.ab2"
0003A909 <internal_commands.ab2@1850> INCLUDE "internal_commands.ab2"
0003A90A <internal_commands.ab2@1851> INCLUDE "internal_commands.ab2"
0003A90C <internal_commands.ab2@1853> INCLUDE "internal_commands.ab2"
0003A910 <internal_commands.ab2@1854> INCLUDE "internal_commands.ab2"
0003A912 <internal_commands.ab2@1855> INCLUDE "internal_commands.ab2"
0003A914 <internal_commands.ab2@1856> INCLUDE "internal_commands.ab2"
0003A918 <internal_commands.ab2@1857> INCLUDE "internal_commands.ab2"
0003A91A <internal_commands.ab2@1858> INCLUDE "internal_commands.ab2"
0003A91E <internal_commands.ab2@1862> INCLUDE "internal_commands.ab2"
0003A920 <internal_commands.ab2@1863> INCLUDE "internal_commands.ab2"
0003A924 <internal_commands.ab2@1864> INCLUDE "internal_commands.ab2"
0003A925 <internal_commands.ab2@1865> INCLUDE "internal_commands.ab2"
0003A926 <internal_commands.ab2@1866> INCLUDE "internal_commands.ab2"
0003A928 <internal_commands.ab2@1868> INCLUDE "internal_commands.ab2"
0003A92C <internal_commands.ab2@1869> INCLUDE "internal_commands.ab2"
0003A92E <internal_commands.ab2@1870> INCLUDE "internal_commands.ab2"
0003A930 <internal_commands.ab2@1871> INCLUDE "internal_commands.ab2"
0003A934 <internal_commands.ab2@1872> INCLUDE "internal_commands.ab2"
0003A936 <internal_commands.ab2@1873> INCLUDE "internal_commands.ab2"
0003A93A <internal_commands.ab2@1877> INCLUDE "internal_commands.ab2"
0003A93C <internal_commands.ab2@1878> INCLUDE "internal_commands.ab2"
0003A940 <internal_commands.ab2@1879> INCLUDE "internal_commands.ab2"
0003A941 <internal_commands.ab2@1880> INCLUDE "internal_commands.ab2"
0003A942 <internal_commands.ab2@1881> INCLUDE "internal_commands.ab2"
0003A944 <internal_commands.ab2@1883> INCLUDE "internal_commands.ab2"
0003A948 <internal_commands.ab2@1884> INCLUDE "internal_commands.ab2"
0003A94A <internal_commands.ab2@1885> INCLUDE "internal_commands.ab2"
0003A94C <internal_commands.ab2@1886> INCLUDE "internal_commands.ab2"
0003A950 <internal_commands.ab2@1887> INCLUDE "internal_commands.ab2"
0003A952 <internal_commands.ab2@1888> INCLUDE "internal_commands.ab2"
0003A956 <internal_commands.ab2@1892> INCLUDE "internal_commands.ab2"
0003A958 <internal_commands.ab2@1893> INCLUDE "internal_commands.ab2"
0003A95C <internal_commands.ab2@1894> INCLUDE "internal_commands.ab2"
0003A95D <internal_commands.ab2@1895> INCLUDE "internal_commands.ab2"
0003A95E <internal_commands.ab2@1896> INCLUDE "internal_commands.ab2"
0003A960 <internal_commands.ab2@1898> INCLUDE "internal_commands.ab2"
0003A964 <internal_commands.ab2@1899> INCLUDE "internal_commands.ab2"
0003A966 <internal_commands.ab2@1900> INCLUDE "internal_commands.ab2"
0003A968 <internal_commands.ab2@1901> INCLUDE "internal_commands.ab2"
0003A96C <internal_commands.ab2@1902> INCLUDE "internal_commands.ab2"
0003A96E <internal_commands.ab2@1903> INCLUDE "internal_commands.ab2"
0003A972 <internal_commands.ab2@1907> INCLUDE "internal_commands.ab2"
0003A974 <internal_commands.ab2@1908> INCLUDE "internal_commands.ab2"
0003A978 <internal_commands.ab2@1909> INCLUDE "internal_commands.ab2"
0003A979 <internal_commands.ab2@1910> INCLUDE "internal_commands.ab2"
0003A97A <internal_commands.ab2@1911> INCLUDE "internal_commands.ab2"
0003A97C <internal_commands.ab2@1913> INCLUDE "internal_commands.ab2"
0003A980 <internal_commands.ab2@1914> INCLUDE "internal_commands.ab2"
0003A982 <internal_commands.ab2@1915> INCLUDE "internal_commands.ab2"
0003A984 <internal_commands.ab2@1916> INCLUDE "internal_commands.ab2"
0003A988 <internal_commands.ab2@1917> INCLUDE "internal_commands.ab2"
0003A98A <internal_commands.ab2@1918> INCLUDE "internal_commands.ab2"
0003A98E <internal_commands.ab2@1922> INCLUDE "internal_commands.ab2"
0003A990 <internal_commands.ab2@1923> INCLUDE "internal_commands.ab2"
0003A994 <internal_commands.ab2@1924> INCLUDE "internal_commands.ab2"
0003A995 <internal_commands.ab2@1925> INCLUDE "internal_commands.ab2"
0003A996 <internal_commands.ab2@1926> INCLUDE "internal_commands.ab2"
0003A998 <internal_commands.ab2@1928> INCLUDE "internal_commands.ab2"
0003A99C <internal_commands.ab2@1929> INCLUDE "internal_commands.ab2"
0003A99E <internal_commands.ab2@1930> INCLUDE "internal_commands.ab2"
0003A9A0 <internal_commands.ab2@1931> INCLUDE "internal_commands.ab2"
0003A9A4 <internal_commands.ab2@1932> INCLUDE "internal_commands.ab2"
0003A9A6 <internal_commands.ab2@1933> INCLUDE "internal_commands.ab2"
0003A9AA <internal_commands.ab2@1937> INCLUDE "internal_commands.ab2"
0003A9AC <internal_commands.ab2@1938> INCLUDE "internal_commands.ab2"
0003A9B0 <internal_commands.ab2@1939> INCLUDE "internal_commands.ab2"
0003A9B1 <internal_commands.ab2@1940> INCLUDE "internal_commands.ab2"
0003A9B2 <internal_commands.ab2@1941> INCLUDE "internal_commands.ab2"
0003A9B4 <internal_commands.ab2@1943> INCLUDE "internal_commands.ab2"
0003A9B8 <internal_commands.ab2@1944> INCLUDE "internal_commands.ab2"
0003A9BA <internal_commands.ab2@1945> INCLUDE "internal_commands.ab2"
0003A9BC <internal_commands.ab2@1946> INCLUDE "internal_commands.ab2"
0003A9C0 <internal_commands.ab2@1947> INCLUDE "internal_commands.ab2"
0003A9C2 <internal_commands.ab2@1948> INCLUDE "internal_commands.ab2"
0003A9C6 <internal_commands.ab2@1952> INCLUDE "internal_commands.ab2"
0003A9C8 <internal_commands.ab2@1953> INCLUDE "internal_commands.ab2"
0003A9CC <internal_commands.ab2@1954> INCLUDE "internal_commands.ab2"
0003A9CD <internal_commands.ab2@1955> INCLUDE "internal_commands.ab2"
0003A9CE <internal_commands.ab2@1956> INCLUDE "internal_commands.ab2"
0003A9D0 <internal_commands.ab2@1958> INCLUDE "internal_commands.ab2"
0003A9D4 <internal_commands.ab2@1959> INCLUDE "internal_commands.ab2"
0003A9D6 <internal_commands.ab2@1960> INCLUDE "internal_commands.ab2"
0003A9D8 <internal_commands.ab2@1961> INCLUDE "internal_commands.ab2"
0003A9DC <internal_commands.ab2@1962> INCLUDE "internal_commands.ab2"
0003A9DE <internal_commands.ab2@1963> INCLUDE "internal_commands.ab2"
0003A9E2 <internal_commands.ab2@1967> INCLUDE "internal_commands.ab2"
0003A9E4 <internal_commands.ab2@1968> INCLUDE "internal_commands.ab2"
0003A9E8 <internal_commands.ab2@1969> INCLUDE "internal_commands.ab2"
0003A9E9 <internal_commands.ab2@1970> INCLUDE "internal_commands.ab2"
0003A9EA <internal_commands.ab2@1971> INCLUDE "internal_commands.ab2"
0003A9EC <internal_commands.ab2@1973> INCLUDE "internal_commands.ab2"
0003A9F0 <internal_commands.ab2@1974> INCLUDE "internal_commands.ab2"
0003A9F2 <internal_commands.ab2@1975> INCLUDE "internal_commands.ab2"
0003A9F4 <internal_commands.ab2@1976> INCLUDE "internal_commands.ab2"
0003A9F8 <internal_commands.ab2@1977> INCLUDE "internal_commands.ab2"
0003A9FA <internal_commands.ab2@1978> INCLUDE "internal_commands.ab2"
0003A9FE <internal_commands.ab2@1982> INCLUDE "internal_commands.ab2"
0003AA00 <internal_commands.ab2@1983> INCLUDE "internal_commands.ab2"
0003AA04 <internal_commands.ab2@1984> INCLUDE "internal_commands.ab2"
0003AA05 <internal_commands.ab2@1985> INCLUDE "internal_commands.ab2"
0003AA06 <internal_commands.ab2@1986> INCLUDE "internal_commands.ab2"
0003AA08 <internal_commands.ab2@1988> INCLUDE "internal_commands.ab2"
0003AA0C <internal_commands.ab2@1989> INCLUDE "internal_commands.ab2"
0003AA0E <internal_commands.ab2@1990> INCLUDE "internal_commands.ab2"
0003AA10 <internal_commands.ab2@1991> INCLUDE "internal_commands.ab2"
0003AA14 <internal_commands.ab2@1992> INCLUDE "internal_commands.ab2"
0003AA16 <internal_commands.ab2@1993> INCLUDE "internal_commands.ab2"
0003AA1A <internal_commands.ab2@1997> INCLUDE "internal_commands.ab2"
0003AA1C <internal_commands.ab2@1998> INCLUDE "internal_commands.ab2"
0003AA1F <internal_commands.ab2@1999> INCLUDE "internal_commands.ab2"
0003AA20 <internal_commands.ab2@2000> INCLUDE "internal_commands.ab2"
0003AA22 <internal_commands.ab2@2003> INCLUDE "internal_commands.ab2"
0003AA26 <internal_commands.ab2@2004> INCLUDE "internal_commands.ab2"
0003AA28 <internal_commands.ab2@2005> INCLUDE "internal_commands.ab2"
0003AA2A <internal_commands.ab2@2006> INCLUDE "internal_commands.ab2"
0003AA2E <internal_commands.ab2@2007> INCLUDE "internal_commands.ab2"
0003AA30 <internal_commands.ab2@2008> INCLUDE "internal_commands.ab2"
0003AA34 <internal_commands.ab2@2012> INCLUDE "internal_commands.ab2"
0003AA36 <internal_commands.ab2@2013> INCLUDE "internal_commands.ab2"
0003AA39 <internal_commands.ab2@2014> INCLUDE "internal_commands.ab2"
0003AA3A <internal_commands.ab2@2015> INCLUDE "internal_commands.ab2"
0003AA3C <internal_commands.ab2@2018> INCLUDE "internal_commands.ab2"
0003AA40 <internal_commands.ab2@2019> INCLUDE "internal_commands.ab2"
0003AA42 <internal_commands.ab2@2020> INCLUDE "internal_commands.ab2"
0003AA44 <internal_commands.ab2@2021> INCLUDE "internal_commands.ab2"
0003AA48 <internal_commands.ab2@2022> INCLUDE "internal_commands.ab2"
0003AA4A <internal_commands.ab2@2023> INCLUDE "internal_commands.ab2"
0003AA4E <internal_commands.ab2@2027> INCLUDE "internal_commands.ab2"
0003AA50 <internal_commands.ab2@2028> INCLUDE "internal_commands.ab2"
0003AA55 <internal_commands.ab2@2029> INCLUDE "internal_commands.ab2"
0003AA56 <internal_commands.ab2@2030> INCLUDE "internal_commands.ab2"
0003AA58 <internal_commands.ab2@2033> INCLUDE "internal_commands.ab2"
0003AA5C <internal_commands.ab2@2034> INCLUDE "internal_commands.ab2"
0003AA5E <internal_commands.ab2@2035> INCLUDE "internal_commands.ab2"
0003AA60 <internal_commands.ab2@2036> INCLUDE "internal_commands.ab2"
0003AA64 <internal_commands.ab2@2037> INCLUDE "internal_commands.ab2"
0003AA66 <internal_commands.ab2@2038> INCLUDE "internal_commands.ab2"
0003AA6A <internal_commands.ab2@2042> INCLUDE "internal_commands.ab2"
0003AA6C <internal_commands.ab2@2043> INCLUDE "internal_commands.ab2"
0003AA70 <internal_commands.ab2@2044> INCLUDE "internal_commands.ab2"
0003AA71 <internal_commands.ab2@2045> INCLUDE "internal_commands.ab2"
0003AA72 <internal_commands.ab2@2046> INCLUDE "internal_commands.ab2"
0003AA74 <internal_commands.ab2@2048> INCLUDE "internal_commands.ab2"
0003AA78 <internal_commands.ab2@2049> INCLUDE "internal_commands.ab2"
0003AA7A <internal_commands.ab2@2050> INCLUDE "internal_commands.ab2"
0003AA7C <internal_commands.ab2@2051> INCLUDE "internal_commands.ab2"
0003AA80 <internal_commands.ab2@2052> INCLUDE "internal_commands.ab2"
0003AA82 <internal_commands.ab2@2053> INCLUDE "internal_commands.ab2"
0003AA86 <internal_commands.ab2@2057> INCLUDE "internal_commands.ab2"
0003AA88 <internal_commands.ab2@2058> INCLUDE "internal_commands.ab2"
0003AA8D <internal_commands.ab2@2059> INCLUDE "internal_commands.ab2"
0003AA8E <internal_commands.ab2@2060> INCLUDE "internal_commands.ab2"
0003AA90 <internal_commands.ab2@2063> INCLUDE "internal_commands.ab2"
0003AA94 <internal_commands.ab2@2064> INCLUDE "internal_commands.ab2"
0003AA96 <internal_commands.ab2@2065> INCLUDE "internal_commands.ab2"
0003AA98 <internal_commands.ab2@2066> INCLUDE "internal_commands.ab2"
0003AA9C <internal_commands.ab2@2067> INCLUDE "internal_commands.ab2"
0003AA9E <internal_commands.ab2@2068> INCLUDE "internal_commands.ab2"
0003AAA2 <internal_commands.ab2@2072> INCLUDE "internal_commands.ab2"
0003AAA4 <internal_commands.ab2@2073> INCLUDE "internal_commands.ab2"
0003AAA9 <internal_commands.ab2@2074> INCLUDE "internal_commands.ab2"
0003AAAA <internal_commands.ab2@2075> INCLUDE "internal_commands.ab2"
0003AAAC <internal_commands.ab2@2078> INCLUDE "internal_commands.ab2"
0003AAB0 <internal_commands.ab2@2079> INCLUDE "internal_commands.ab2"
0003AAB2 <internal_commands.ab2@2080> INCLUDE "internal_commands.ab2"
0003AAB4 <internal_commands.ab2@2081> INCLUDE "internal_commands.ab2"
0003AAB8 <internal_commands.ab2@2082> INCLUDE "internal_commands.ab2"
0003AABA <internal_commands.ab2@2083> INCLUDE "internal_commands.ab2"
0003AABE <internal_commands.ab2@2087> INCLUDE "internal_commands.ab2"
0003AAC0 <internal_commands.ab2@2088> INCLUDE "internal_commands.ab2"
0003AAC5 <internal_commands.ab2@2089> INCLUDE "internal_commands.ab2"
0003AAC6 <internal_commands.ab2@2090> INCLUDE "internal_commands.ab2"
0003AAC8 <internal_commands.ab2@2093> INCLUDE "internal_commands.ab2"
0003AACC <internal_commands.ab2@2094> INCLUDE "internal_commands.ab2"
0003AACE <internal_commands.ab2@2095> INCLUDE "internal_commands.ab2"
0003AAD0 <internal_commands.ab2@2096> INCLUDE "internal_commands.ab2"
0003AAD4 <internal_commands.ab2@2097> INCLUDE "internal_commands.ab2"
0003AAD6 <internal_commands.ab2@2098> INCLUDE "internal_commands.ab2"
0003AADA <internal_commands.ab2@2102> INCLUDE "internal_commands.ab2"
0003AADC <internal_commands.ab2@2103> INCLUDE "internal_commands.ab2"
0003AAE1 <internal_commands.ab2@2104> INCLUDE "internal_commands.ab2"
0003AAE2 <internal_commands.ab2@2105> INCLUDE "internal_commands.ab2"
0003AAE4 <internal_commands.ab2@2108> INCLUDE "internal_commands.ab2"
0003AAE8 <internal_commands.ab2@2109> INCLUDE "internal_commands.ab2"
0003AAEA <internal_commands.ab2@2110> INCLUDE "internal_commands.ab2"
0003AAEC <internal_commands.ab2@2111> INCLUDE "internal_commands.ab2"
0003AAF0 <internal_commands.ab2@2112> INCLUDE "internal_commands.ab2"
0003AAF2 <internal_commands.ab2@2113> INCLUDE "internal_commands.ab2"
0003AAF6 <internal_commands.ab2@2117> INCLUDE "internal_commands.ab2"
0003AAF8 <internal_commands.ab2@2118> INCLUDE "internal_commands.ab2"
0003AAFD <internal_commands.ab2@2119> INCLUDE "internal_commands.ab2"
0003AAFE <internal_commands.ab2@2120> INCLUDE "internal_commands.ab2"
0003AB00 <internal_commands.ab2@2123> INCLUDE "internal_commands.ab2"
0003AB04 <internal_commands.ab2@2124> INCLUDE "internal_commands.ab2"
0003AB06 <internal_commands.ab2@2125> INCLUDE "internal_commands.ab2"
0003AB08 <internal_commands.ab2@2126> INCLUDE "internal_commands.ab2"
0003AB0C <internal_commands.ab2@2127> INCLUDE "internal_commands.ab2"
0003AB0E <internal_commands.ab2@2128> INCLUDE "internal_commands.ab2"
0003AB12 <internal_commands.ab2@2132> INCLUDE "internal_commands.ab2"
0003AB14 <internal_commands.ab2@2133> INCLUDE "internal_commands.ab2"
0003AB18 <internal_commands.ab2@2134> INCLUDE "internal_commands.ab2"
0003AB19 <internal_commands.ab2@2135> INCLUDE "internal_commands.ab2"
0003AB1A <internal_commands.ab2@2136> INCLUDE "internal_commands.ab2"
0003AB1C <internal_commands.ab2@2138> INCLUDE "internal_commands.ab2"
0003AB20 <internal_commands.ab2@2139> INCLUDE "internal_commands.ab2"
0003AB22 <internal_commands.ab2@2140> INCLUDE "internal_commands.ab2"
0003AB24 <internal_commands.ab2@2141> INCLUDE "internal_commands.ab2"
0003AB28 <internal_commands.ab2@2142> INCLUDE "internal_commands.ab2"
0003AB2A <internal_commands.ab2@2143> INCLUDE "internal_commands.ab2"
0003AB2E <internal_commands.ab2@2147> INCLUDE "internal_commands.ab2"
0003AB30 <internal_commands.ab2@2148> INCLUDE "internal_commands.ab2"
0003AB35 <internal_commands.ab2@2149> INCLUDE "internal_commands.ab2"
0003AB36 <internal_commands.ab2@2150> INCLUDE "internal_commands.ab2"
0003AB38 <internal_commands.ab2@2153> INCLUDE "internal_commands.ab2"
0003AB3C <internal_commands.ab2@2154> INCLUDE "internal_commands.ab2"
0003AB3E <internal_commands.ab2@2155> INCLUDE "internal_commands.ab2"
0003AB40 <internal_commands.ab2@2156> INCLUDE "internal_commands.ab2"
0003AB44 <internal_commands.ab2@2157> INCLUDE "internal_commands.ab2"
0003AB46 <internal_commands.ab2@2158> INCLUDE "internal_commands.ab2"
0003AB4A <internal_commands.ab2@2162> INCLUDE "internal_commands.ab2"
0003AB4C <internal_commands.ab2@2163> INCLUDE "internal_commands.ab2"
0003AB52 <internal_commands.ab2@2164> INCLUDE "internal_commands.ab2"
0003AB53 <internal_commands.ab2@2165> INCLUDE "internal_commands.ab2"
0003AB54 <internal_commands.ab2@2166> INCLUDE "internal_commands.ab2"
0003AB56 <internal_commands.ab2@2168> INCLUDE "internal_commands.ab2"
0003AB5A <internal_commands.ab2@2169> INCLUDE "internal_commands.ab2"
0003AB5C <internal_commands.ab2@2170> INCLUDE "internal_commands.ab2"
0003AB5E <internal_commands.ab2@2171> INCLUDE "internal_commands.ab2"
0003AB62 <internal_commands.ab2@2172> INCLUDE "internal_commands.ab2"
0003AB64 <internal_commands.ab2@2173> INCLUDE "internal_commands.ab2"
0003AB68 <internal_commands.ab2@2177> INCLUDE "internal_commands.ab2"
0003AB6A <internal_commands.ab2@2178> INCLUDE "internal_commands.ab2"
0003AB6E <internal_commands.ab2@2179> INCLUDE "internal_commands.ab2"
0003AB6F <internal_commands.ab2@2180> INCLUDE "internal_commands.ab2"
0003AB70 <internal_commands.ab2@2181> INCLUDE "internal_commands.ab2"
0003AB72 <internal_commands.ab2@2183> INCLUDE "internal_commands.ab2"
0003AB76 <internal_commands.ab2@2184> INCLUDE "internal_commands.ab2"
0003AB78 <internal_commands.ab2@2185> INCLUDE "internal_commands.ab2"
0003AB7A <internal_commands.ab2@2186> INCLUDE "internal_commands.ab2"
0003AB7E <internal_commands.ab2@2187> INCLUDE "internal_commands.ab2"
0003AB80 <internal_commands.ab2@2188> INCLUDE "internal_commands.ab2"
0003AB84 <internal_commands.ab2@2192> INCLUDE "internal_commands.ab2"
0003AB86 <internal_commands.ab2@2193> INCLUDE "internal_commands.ab2"
0003AB8B <internal_commands.ab2@2194> INCLUDE "internal_commands.ab2"
0003AB8C <internal_commands.ab2@2195> INCLUDE "internal_commands.ab2"
0003AB8E <internal_commands.ab2@2198> INCLUDE "internal_commands.ab2"
0003AB92 <internal_commands.ab2@2199> INCLUDE "internal_commands.ab2"
0003AB94 <internal_commands.ab2@2200> INCLUDE "internal_commands.ab2"
0003AB96 <internal_commands.ab2@2201> INCLUDE "internal_commands.ab2"
0003AB9A <internal_commands.ab2@2202> INCLUDE "internal_commands.ab2"
0003AB9C <internal_commands.ab2@2203> INCLUDE "internal_commands.ab2"
0003ABA0 <internal_commands.ab2@2208> INCLUDE "internal_commands.ab2"
0003ABA2 <internal_commands.ab2@2209> INCLUDE "internal_commands.ab2"
0003ABA9 <internal_commands.ab2@2210> INCLUDE "internal_commands.ab2"
0003ABAA <internal_commands.ab2@2211> INCLUDE "internal_commands.ab2"
0003ABAC <internal_commands.ab2@2230> INCLUDE "internal_commands.ab2"
0003ABAE <internal_commands.ab2@2231> INCLUDE "internal_commands.ab2"
0003ABB0 <internal_commands.ab2@2235> INCLUDE "internal_commands.ab2"
0003ABB2 <internal_commands.ab2@2236> INCLUDE "internal_commands.ab2"
0003ABB4 <internal_commands.ab2@2240> INCLUDE "internal_commands.ab2"
0003ABB6 <internal_commands.ab2@2241> INCLUDE "internal_commands.ab2"
0003ABB8 <internal_commands.ab2@2245> INCLUDE "internal_commands.ab2"
0003ABBA <internal_commands.ab2@2246> INCLUDE "internal_commands.ab2"
0003ABBC <internal_commands.ab2@2251> INCLUDE "internal_commands.ab2"
0003ABC0 <internal_commands.ab2@2252> INCLUDE "internal_commands.ab2"
0003ABC2 <internal_commands.ab2@2253> INCLUDE "internal_commands.ab2"
0003ABC4 <internal_commands.ab2@2254> INCLUDE "internal_commands.ab2"
0003ABC6 <internal_commands.ab2@2255> INCLUDE "internal_commands.ab2"
0003ABC8 <internal_commands.ab2@2256> INCLUDE "internal_commands.ab2"
0003ABCC <internal_commands.ab2@2257> INCLUDE "internal_commands.ab2"
0003ABD2 <internal_commands.ab2@2260> INCLUDE "internal_commands.ab2"
0003ABD6 <internal_commands.ab2@2261> INCLUDE "internal_commands.ab2"
0003ABD8 <internal_commands.ab2@2262> INCLUDE "internal_commands.ab2"
0003ABDA <internal_commands.ab2@2263> INCLUDE "internal_commands.ab2"
0003ABDC <internal_commands.ab2@2264> INCLUDE "internal_commands.ab2"
0003ABDE <internal_commands.ab2@2265> INCLUDE "internal_commands.ab2"
0003ABE0 <internal_commands.ab2@2266> INCLUDE "internal_commands.ab2"
0003ABE2 <internal_commands.ab2@2273> INCLUDE "internal_commands.ab2"
0003ABE6 <internal_commands.ab2@2274> INCLUDE "internal_commands.ab2"
0003ABEA <internal_commands.ab2@2275> INCLUDE "internal_commands.ab2"
0003ABEE <internal_commands.ab2@2276> INCLUDE "internal_commands.ab2"
0003ABF2 <internal_commands.ab2@2277> INCLUDE "internal_commands.ab2"
0003ABF6 <internal_commands.ab2@2278> INCLUDE "internal_commands.ab2"
0003ABF8 <internal_commands.ab2@2281> INCLUDE "internal_commands.ab2"
0003ABFA <internal_commands.ab2@2282> INCLUDE "internal_commands.ab2"
0003ABFE <internal_commands.ab2@2283> INCLUDE "internal_commands.ab2"
0003AC02 <internal_commands.ab2@2284> INCLUDE "internal_commands.ab2"
0003AC06 <internal_commands.ab2@2285> INCLUDE "internal_commands.ab2"
0003AC0A <internal_commands.ab2@2286> INCLUDE "internal_commands.ab2"
0003AC0C <internal_commands.ab2@2289> INCLUDE "internal_commands.ab2"
0003AC0E <internal_commands.ab2@2290> INCLUDE "internal_commands.ab2"
0003AC12 <internal_commands.ab2@2291> INCLUDE "internal_commands.ab2"
0003AC16 <internal_commands.ab2@2292> INCLUDE "internal_commands.ab2"
0003AC1A <internal_commands.ab2@2293> INCLUDE "internal_commands.ab2"
0003AC1E <internal_commands.ab2@2294> INCLUDE "internal_commands.ab2"
0003AC20 <internal_commands.ab2@2295> INCLUDE "internal_commands.ab2"
0003AC22 <internal_commands.ab2@2298> INCLUDE "internal_commands.ab2"
0003AC24 <internal_commands.ab2@2299> INCLUDE "internal_commands.ab2"
0003AC28 <internal_commands.ab2@2300> INCLUDE "internal_commands.ab2"
0003AC2A <internal_commands.ab2@2302> INCLUDE "internal_commands.ab2"
0003AC2E <internal_commands.ab2@2303> INCLUDE "internal_commands.ab2"
0003AC30 <internal_commands.ab2@2307> INCLUDE "internal_commands.ab2"
0003AC34 <internal_commands.ab2@2308> INCLUDE "internal_commands.ab2"
0003AC36 <internal_commands.ab2@2309> INCLUDE "internal_commands.ab2"
0003AC3A <internal_commands.ab2@2310> INCLUDE "internal_commands.ab2"
0003AC3E <internal_commands.ab2@2311> INCLUDE "internal_commands.ab2"
0003AC42 <internal_commands.ab2@2312> INCLUDE "internal_commands.ab2"
0003AC46 <internal_commands.ab2@2316> INCLUDE "internal_commands.ab2"
0003AC4A <internal_commands.ab2@2317> INCLUDE "internal_commands.ab2"
0003AC4E <internal_commands.ab2@2319> INCLUDE "internal_commands.ab2"
0003AC52 <internal_commands.ab2@2320> INCLUDE "internal_commands.ab2"
0003AC56 <internal_commands.ab2@2321> INCLUDE "internal_commands.ab2"
0003AC5A <internal_commands.ab2@2322> INCLUDE "internal_commands.ab2"
0003AC5E <internal_commands.ab2@2323> INCLUDE "internal_commands.ab2"
0003AC62 <internal_commands.ab2@2324> INCLUDE "internal_commands.ab2"
0003AC66 <internal_commands.ab2@2325> INCLUDE "internal_commands.ab2"
0003AC6A <internal_commands.ab2@2326> INCLUDE "internal_commands.ab2"
0003AC6E <internal_commands.ab2@2328> INCLUDE "internal_commands.ab2"
0003AC72 <internal_commands.ab2@2331> INCLUDE "internal_commands.ab2"
0003AC76 <internal_commands.ab2@2332> INCLUDE "internal_commands.ab2"
0003AC7A <internal_commands.ab2@2334> INCLUDE "internal_commands.ab2"
0003AC7E <internal_commands.ab2@2335> INCLUDE "internal_commands.ab2"
0003AC82 <internal_commands.ab2@2336> INCLUDE "internal_commands.ab2"
0003AC86 <internal_commands.ab2@2337> INCLUDE "internal_commands.ab2"
0003AC8A <internal_commands.ab2@2338> INCLUDE "internal_commands.ab2"
0003AC8E <internal_commands.ab2@2339> INCLUDE "internal_commands.ab2"
0003AC92 <internal_commands.ab2@2340> INCLUDE "internal_commands.ab2"
0003AC96 <internal_commands.ab2@2341> INCLUDE "internal_commands.ab2"
0003AC9A <internal_commands.ab2@2343> INCLUDE "internal_commands.ab2"
0003AC9E <internal_commands.ab2@2346> INCLUDE "internal_commands.ab2"
0003ACA0 <internal_commands.ab2@2347> INCLUDE "internal_commands.ab2"
0003ACA4 <internal_commands.ab2@2348> INCLUDE "internal_commands.ab2"
0003ACA8 <internal_commands.ab2@2349> INCLUDE "internal_commands.ab2"
0003ACAC <internal_commands.ab2@2350> INCLUDE "internal_commands.ab2"
0003ACB0 <internal_commands.ab2@2351> INCLUDE "internal_commands.ab2"
0003ACB4 <internal_commands.ab2@2352> INCLUDE "internal_commands.ab2"
0003ACB8 <internal_commands.ab2@2353> INCLUDE "internal_commands.ab2"
0003ACBC <internal_commands.ab2@2356> INCLUDE "internal_commands.ab2"
0003ACC0 <internal_commands.ab2@2357> INCLUDE "internal_commands.ab2"
0003ACC4 <internal_commands.ab2@2358> INCLUDE "internal_commands.ab2"
0003ACC6 <internal_commands.ab2@2359> INCLUDE "internal_commands.ab2"
0003ACC8 <internal_commands.ab2@2362> INCLUDE "internal_commands.ab2"
0003ACCA <internal_commands.ab2@2363> INCLUDE "internal_commands.ab2"
0003ACCC <internal_commands.ab2@2364> INCLUDE "internal_commands.ab2"
0003ACCE <internal_commands.ab2@2365> INCLUDE "internal_commands.ab2"
0003ACD2 <internal_commands.ab2@2366> INCLUDE "internal_commands.ab2"
0003ACD6 <internal_commands.ab2@2369> INCLUDE "internal_commands.ab2"
0003ACDA <internal_commands.ab2@2370> INCLUDE "internal_commands.ab2"
0003ACDE <internal_commands.ab2@2371> INCLUDE "internal_commands.ab2"
0003ACE0 <internal_commands.ab2@2372> INCLUDE "internal_commands.ab2"
0003ACE4 <internal_commands.ab2@2373> INCLUDE "internal_commands.ab2"
0003ACE8 <internal_commands.ab2@2376> INCLUDE "internal_commands.ab2"
0003ACEC <internal_commands.ab2@2379> INCLUDE "internal_commands.ab2"
0003ACF0 <internal_commands.ab2@2380> INCLUDE "internal_commands.ab2"
0003ACF2 <internal_commands.ab2@2381> INCLUDE "internal_commands.ab2"
0003ACF4 <internal_commands.ab2@2382> INCLUDE "internal_commands.ab2"
0003ACF8 <internal_commands.ab2@2383> INCLUDE "internal_commands.ab2"
0003ACFC <internal_commands.ab2@2386> INCLUDE "internal_commands.ab2"
0003AD00 <internal_commands.ab2@2387> INCLUDE "internal_commands.ab2"
0003AD04 <internal_commands.ab2@2390> INCLUDE "internal_commands.ab2"
0003AD08 <internal_commands.ab2@2393> INCLUDE "internal_commands.ab2"
0003AD0C <internal_commands.ab2@2394> INCLUDE "internal_commands.ab2"
0003AD0E <internal_commands.ab2@2395> INCLUDE "internal_commands.ab2"
0003AD10 <internal_commands.ab2@2396> INCLUDE "internal_commands.ab2"
0003AD14 <internal_commands.ab2@2397> INCLUDE "internal_commands.ab2"
0003AD18 <internal_commands.ab2@2400> INCLUDE "internal_commands.ab2"
0003AD1C <internal_commands.ab2@2401> INCLUDE "internal_commands.ab2"
0003AD1E <internal_commands.ab2@2405> INCLUDE "internal_commands.ab2"
0003AD22 <internal_commands.ab2@2406> INCLUDE "internal_commands.ab2"
0003AD26 <internal_commands.ab2@2407> INCLUDE "internal_commands.ab2"
0003AD28 <internal_commands.ab2@2408> INCLUDE "internal_commands.ab2"
0003AD2C <internal_commands.ab2@2409> INCLUDE "internal_commands.ab2"
0003AD30 <internal_commands.ab2@2410> INCLUDE "internal_commands.ab2"
0003AD32 <internal_commands.ab2@2413> INCLUDE "internal_commands.ab2"
0003AD36 <internal_commands.ab2@2414> INCLUDE "internal_commands.ab2"
0003AD3A <internal_commands.ab2@2415> INCLUDE "internal_commands.ab2"
0003AD3E <internal_commands.ab2@2416> INCLUDE "internal_commands.ab2"
0003AD42 <internal_commands.ab2@2419> INCLUDE "internal_commands.ab2"
0003AD46 <internal_commands.ab2@2420> INCLUDE "internal_commands.ab2"
0003AD48 <internal_commands.ab2@2424> INCLUDE "internal_commands.ab2"
0003AD4C <internal_commands.ab2@2425> INCLUDE "internal_commands.ab2"
0003AD4E <internal_commands.ab2@2426> INCLUDE "internal_commands.ab2"
0003AD50 <internal_commands.ab2@2427> INCLUDE "internal_commands.ab2"
0003AD52 <internal_commands.ab2@2428> INCLUDE "internal_commands.ab2"
0003AD56 <internal_commands.ab2@2429> INCLUDE "internal_commands.ab2"
0003AD5A <internal_commands.ab2@2432> INCLUDE "internal_commands.ab2"
0003AD5E <internal_commands.ab2@2433> INCLUDE "internal_commands.ab2"
0003AD62 <internal_commands.ab2@2434> INCLUDE "internal_commands.ab2"
0003AD66 <internal_commands.ab2@2435> INCLUDE "internal_commands.ab2"
0003AD6A <internal_commands.ab2@2439> INCLUDE "internal_commands.ab2"
0003AD6E <internal_commands.ab2@2440> INCLUDE "internal_commands.ab2"
0003AD72 <internal_commands.ab2@2444> INCLUDE "internal_commands.ab2"
0003AD76 <internal_commands.ab2@2445> INCLUDE "internal_commands.ab2"
0003AD7A <internal_commands.ab2@2449> INCLUDE "internal_commands.ab2"
0003AD7E <internal_commands.ab2@2450> INCLUDE "internal_commands.ab2"
0003AD82 <internal_commands.ab2@2454> INCLUDE "internal_commands.ab2"
0003AD84 <internal_commands.ab2@2456> INCLUDE "internal_commands.ab2"
0003AD88 <internal_commands.ab2@2457> INCLUDE "internal_commands.ab2"
0003AD8C <internal_commands.ab2@2458> INCLUDE "internal_commands.ab2"
0003AD8E <internal_commands.ab2@2459> INCLUDE "internal_commands.ab2"
0003AD90 <internal_commands.ab2@2460> INCLUDE "internal_commands.ab2"
0003AD92 <internal_commands.ab2@2461> INCLUDE "internal_commands.ab2"
0003AD96 <internal_commands.ab2@2462> INCLUDE "internal_commands.ab2"
0003AD9A <internal_commands.ab2@2463> INCLUDE "internal_commands.ab2"
0003AD9C <internal_commands.ab2@2464> INCLUDE "internal_commands.ab2"
0003ADA0 <internal_commands.ab2@2465> INCLUDE "internal_commands.ab2"
0003ADA2 <internal_commands.ab2@2466> INCLUDE "internal_commands.ab2"
0003ADA4 <internal_commands.ab2@2467> INCLUDE "internal_commands.ab2"
0003ADA6 <internal_commands.ab2@2468> INCLUDE "internal_commands.ab2"
0003ADAA <internal_commands.ab2@2469> INCLUDE "internal_commands.ab2"
0003ADAE <internal_commands.ab2@2470> INCLUDE "internal_commands.ab2"
0003ADB0 <internal_commands.ab2@2473> INCLUDE "internal_commands.ab2"
0003ADB2 <internal_commands.ab2@2474> INCLUDE "internal_commands.ab2"
0003ADB6 <internal_commands.ab2@2475> INCLUDE "internal_commands.ab2"
0003ADBA <internal_commands.ab2@2476> INCLUDE "internal_commands.ab2"
0003ADBE <internal_commands.ab2@2477> INCLUDE "internal_commands.ab2"
0003ADC2 <internal_commands.ab2@2478> INCLUDE "internal_commands.ab2"
0003ADC4 <internal_commands.ab2@2479> INCLUDE "internal_commands.ab2"
0003ADC8 <internal_commands.ab2@2480> INCLUDE "internal_commands.ab2"
0003ADCC <internal_commands.ab2@2481> INCLUDE "internal_commands.ab2"
0003ADD0 <internal_commands.ab2@2482> INCLUDE "internal_commands.ab2"
0003ADD2 <internal_commands.ab2@2483> INCLUDE "internal_commands.ab2"
0003ADD4 <internal_commands.ab2@2484> INCLUDE "internal_commands.ab2"
0003ADD6 <internal_commands.ab2@2485> INCLUDE "internal_commands.ab2"
0003ADD8 <internal_commands.ab2@2488> INCLUDE "internal_commands.ab2"
0003ADDA <internal_commands.ab2@2489> INCLUDE "internal_commands.ab2"
0003ADDC <internal_commands.ab2@2490> INCLUDE "internal_commands.ab2"
0003ADE0 <internal_commands.ab2@2491> INCLUDE "internal_commands.ab2"
0003ADE4 <internal_commands.ab2@2492> INCLUDE "internal_commands.ab2"
0003ADE6 <internal_commands.ab2@2496> INCLUDE "internal_commands.ab2"
0003ADEA <internal_commands.ab2@2497> INCLUDE "internal_commands.ab2"
0003ADEC <internal_commands.ab2@2498> INCLUDE "internal_commands.ab2"
0003ADF0 <internal_commands.ab2@2499> INCLUDE "internal_commands.ab2"
0003ADF4 <internal_commands.ab2@2500> INCLUDE "internal_commands.ab2"
0003ADF6 <internal_commands.ab2@2501> INCLUDE "internal_commands.ab2"
0003ADF8 <internal_commands.ab2@2504> INCLUDE "internal_commands.ab2"
0003ADFA <internal_commands.ab2@2508> INCLUDE "internal_commands.ab2"
0003ADFE <internal_commands.ab2@2509> INCLUDE "internal_commands.ab2"
0003AE00 <internal_commands.ab2@2510> INCLUDE "internal_commands.ab2"
0003AE04 <internal_commands.ab2@2511> INCLUDE "internal_commands.ab2"
0003AE08 <internal_commands.ab2@2512> INCLUDE "internal_commands.ab2"
0003AE0C <internal_commands.ab2@2513> INCLUDE "internal_commands.ab2"
0003AE0E <internal_commands.ab2@2516> INCLUDE "internal_commands.ab2"
0003AE12 <internal_commands.ab2@2520> INCLUDE "internal_commands.ab2"
0003AE16 <internal_commands.ab2@2521> INCLUDE "internal_commands.ab2"
0003AE18 <internal_commands.ab2@2522> INCLUDE "internal_commands.ab2"
0003AE1C <internal_commands.ab2@2523> INCLUDE "internal_commands.ab2"
0003AE20 <internal_commands.ab2@2524> INCLUDE "internal_commands.ab2"
0003AE24 <internal_commands.ab2@2527> INCLUDE "internal_commands.ab2"
0003AE28 <internal_commands.ab2@2528> INCLUDE "internal_commands.ab2"
0003AE2C <internal_commands.ab2@2529> INCLUDE "internal_commands.ab2"
0003AE30 <internal_commands.ab2@2530> INCLUDE "internal_commands.ab2"
0003AE34 <internal_commands.ab2@2531> INCLUDE "internal_commands.ab2"
0003AE38 <internal_commands.ab2@2538> INCLUDE "internal_commands.ab2"
0003AE3A <internal_commands.ab2@2539> INCLUDE "internal_commands.ab2"
0003AE3F <internal_commands.ab2@2540> INCLUDE "internal_commands.ab2"
0003AE40 <internal_commands.ab2@2541> INCLUDE "internal_commands.ab2"
0003AE44 <internal_commands.ab2@2545> INCLUDE "internal_commands.ab2"
0003AE46 <internal_commands.ab2@2546> INCLUDE "internal_commands.ab2"
0003AE4D <internal_commands.ab2@2547> INCLUDE "internal_commands.ab2"
0003AE4E <internal_commands.ab2@2548> INCLUDE "internal_commands.ab2"
0003AE52 <internal_commands.ab2@2552> INCLUDE "internal_commands.ab2"
0003AE54 <internal_commands.ab2@2553> INCLUDE "internal_commands.ab2"
0003AE5B <internal_commands.ab2@2554> INCLUDE "internal_commands.ab2"
0003AE5C <internal_commands.ab2@2555> INCLUDE "internal_commands.ab2"
0003AE60 <internal_commands.ab2@2559> INCLUDE "internal_commands.ab2"
0003AE62 <internal_commands.ab2@2560> INCLUDE "internal_commands.ab2"
0003AE6A <internal_commands.ab2@2561> INCLUDE "internal_commands.ab2"
0003AE6B <internal_commands.ab2@2562> INCLUDE "internal_commands.ab2"
0003AE6C <internal_commands.ab2@2563> INCLUDE "internal_commands.ab2"
0003AE70 <internal_commands.ab2@2566> INCLUDE "internal_commands.ab2"
0003AE72 <internal_commands.ab2@2567> INCLUDE "internal_commands.ab2"
0003AE77 <internal_commands.ab2@2568> INCLUDE "internal_commands.ab2"
0003AE8B <internal_commands.ab2@2569> INCLUDE "internal_commands.ab2"
0003AE8C <internal_commands.ab2@2570> INCLUDE "internal_commands.ab2"
0003AE90 <internal_commands.ab2@2573> INCLUDE "internal_commands.ab2"
0003AE92 <internal_commands.ab2@2574> INCLUDE "internal_commands.ab2"
0003AE96 <internal_commands.ab2@2575> INCLUDE "internal_commands.ab2"
0003AE97 <internal_commands.ab2@2576> INCLUDE "internal_commands.ab2"
0003AE98 <internal_commands.ab2@2577> INCLUDE "internal_commands.ab2"
0003AE9C <internal_commands.ab2@2580> INCLUDE "internal_commands.ab2"
0003AE9E <internal_commands.ab2@2581> INCLUDE "internal_commands.ab2"
0003AEA1 <internal_commands.ab2@2582> INCLUDE "internal_commands.ab2"
0003AEA2 <internal_commands.ab2@2583> INCLUDE "internal_commands.ab2"
0003AEA6 <internal_commands.ab2@2587> INCLUDE "internal_commands.ab2"
0003AEA8 <internal_commands.ab2@2588> INCLUDE "internal_commands.ab2"
0003AEAF <internal_commands.ab2@2589> INCLUDE "internal_commands.ab2"
0003AEB0 <internal_commands.ab2@2590> INCLUDE "internal_commands.ab2"
0003AEB4 <internal_commands.ab2@2594> INCLUDE "internal_commands.ab2"
0003AEB6 <internal_commands.ab2@2595> INCLUDE "internal_commands.ab2"
0003AEBC <internal_commands.ab2@2596> INCLUDE "internal_commands.ab2"
0003AEC9 <internal_commands.ab2@2597> INCLUDE "internal_commands.ab2"
0003AECA <internal_commands.ab2@2598> INCLUDE "internal_commands.ab2"
0003AECE <internal_commands.ab2@2601> INCLUDE "internal_commands.ab2"
0003AED0 <internal_commands.ab2@2602> INCLUDE "internal_commands.ab2"
0003AED7 <internal_commands.ab2@2603> INCLUDE "internal_commands.ab2"
0003AEEF <internal_commands.ab2@2604> INCLUDE "internal_commands.ab2"
0003AEF0 <internal_commands.ab2@2605> INCLUDE "internal_commands.ab2"
0003AEF4 <internal_commands.ab2@2608> INCLUDE "internal_commands.ab2"
0003AEF6 <internal_commands.ab2@2609> INCLUDE "internal_commands.ab2"
0003AEFA <internal_commands.ab2@2610> INCLUDE "internal_commands.ab2"
0003AF1D <internal_commands.ab2@2611> INCLUDE "internal_commands.ab2"
0003AF1E <internal_commands.ab2@2612> INCLUDE "internal_commands.ab2"
0003AF22 <internal_commands.ab2@2615> INCLUDE "internal_commands.ab2"
0003AF24 <internal_commands.ab2@2616> INCLUDE "internal_commands.ab2"
0003AF2B <internal_commands.ab2@2617> INCLUDE "internal_commands.ab2"
0003AF36 <internal_commands.ab2@2618> INCLUDE "internal_commands.ab2"
0003AF3A <internal_commands.ab2@2622> INCLUDE "internal_commands.ab2"
0003AF3C <internal_commands.ab2@2623> INCLUDE "internal_commands.ab2"
0003AF42 <internal_commands.ab2@2624> INCLUDE "internal_commands.ab2"
0003AF43 <internal_commands.ab2@2625> INCLUDE "internal_commands.ab2"
0003AF44 <internal_commands.ab2@2626> INCLUDE "internal_commands.ab2"
0003AF48 <internal_commands.ab2@2629> INCLUDE "internal_commands.ab2"
0003AF4A <internal_commands.ab2@2630> INCLUDE "internal_commands.ab2"
0003AF4F <internal_commands.ab2@2631> INCLUDE "internal_commands.ab2"
0003AF50 <internal_commands.ab2@2632> INCLUDE "internal_commands.ab2"
0003AF54 <internal_commands.ab2@2636> INCLUDE "internal_commands.ab2"
0003AF56 <internal_commands.ab2@2637> INCLUDE "internal_commands.ab2"
0003AF5D <internal_commands.ab2@2638> INCLUDE "internal_commands.ab2"
0003AF6F <internal_commands.ab2@2639> INCLUDE "internal_commands.ab2"
0003AF70 <internal_commands.ab2@2640> INCLUDE "internal_commands.ab2"
0003AF74 <internal_commands.ab2@2643> INCLUDE "internal_commands.ab2"
0003AF76 <internal_commands.ab2@2644> INCLUDE "internal_commands.ab2"
0003AF80 <internal_commands.ab2@2645> INCLUDE "internal_commands.ab2"
0003AF81 <internal_commands.ab2@2646> INCLUDE "internal_commands.ab2"
0003AF82 <internal_commands.ab2@2647> INCLUDE "internal_commands.ab2"
0003AF86 <internal_commands.ab2@2650> INCLUDE "internal_commands.ab2"
0003AF88 <internal_commands.ab2@2651> INCLUDE "internal_commands.ab2"
0003AF90 <internal_commands.ab2@2652> INCLUDE "internal_commands.ab2"
0003AF9D <internal_commands.ab2@2653> INCLUDE "internal_commands.ab2"
0003AF9E <internal_commands.ab2@2654> INCLUDE "internal_commands.ab2"
0003AFA2 <internal_commands.ab2@2657> INCLUDE "internal_commands.ab2"
0003AFA4 <internal_commands.ab2@2658> INCLUDE "internal_commands.ab2"
0003AFA7 <internal_commands.ab2@2659> INCLUDE "internal_commands.ab2"
0003AFE2 <internal_commands.ab2@2660> INCLUDE "internal_commands.ab2"
0003AFE6 <internal_commands.ab2@2664> INCLUDE "internal_commands.ab2"
0003AFE8 <internal_commands.ab2@2665> INCLUDE "internal_commands.ab2"
0003AFEC <internal_commands.ab2@2666> INCLUDE "internal_commands.ab2"
0003AFED <internal_commands.ab2@2667> INCLUDE "internal_commands.ab2"
0003AFEE <internal_commands.ab2@2668> INCLUDE "internal_commands.ab2"
0003AFF2 <internal_commands.ab2@2671> INCLUDE "internal_commands.ab2"
0003AFF4 <internal_commands.ab2@2672> INCLUDE "internal_commands.ab2"
0003AFFC <internal_commands.ab2@2673> INCLUDE "internal_commands.ab2"
0003AFFD <internal_commands.ab2@2674> INCLUDE "internal_commands.ab2"
0003AFFE <internal_commands.ab2@2675> INCLUDE "internal_commands.ab2"
0003B002 <internal_commands.ab2@2678> INCLUDE "internal_commands.ab2"
0003B004 <internal_commands.ab2@2679> INCLUDE "internal_commands.ab2"
0003B00C <internal_commands.ab2@2680> INCLUDE "internal_commands.ab2"
0003B01C <internal_commands.ab2@2681> INCLUDE "internal_commands.ab2"
0003B020 <internal_commands.ab2@2685> INCLUDE "internal_commands.ab2"
0003B022 <internal_commands.ab2@2686> INCLUDE "internal_commands.ab2"
0003B02B <internal_commands.ab2@2687> INCLUDE "internal_commands.ab2"
0003B033 <internal_commands.ab2@2688> INCLUDE "internal_commands.ab2"
0003B034 <internal_commands.ab2@2689> INCLUDE "internal_commands.ab2"
0003B038 <internal_commands.ab2@2692> INCLUDE "internal_commands.ab2"
0003B03A <internal_commands.ab2@2693> INCLUDE "internal_commands.ab2"
0003B042 <internal_commands.ab2@2694> INCLUDE "internal_commands.ab2"
0003B04B <internal_commands.ab2@2695> INCLUDE "internal_commands.ab2"
0003B04C <internal_commands.ab2@2696> INCLUDE "internal_commands.ab2"
0003B050 <internal_commands.ab2@2699> INCLUDE "internal_commands.ab2"
0003B052 <internal_commands.ab2@2700> INCLUDE "internal_commands.ab2"
0003B05A <internal_commands.ab2@2701> INCLUDE "internal_commands.ab2"
0003B05B <internal_commands.ab2@2702> INCLUDE "internal_commands.ab2"
0003B05C <internal_commands.ab2@2703> INCLUDE "internal_commands.ab2"
0003B060 <internal_commands.ab2@2706> INCLUDE "internal_commands.ab2"
0003B062 <internal_commands.ab2@2707> INCLUDE "internal_commands.ab2"
0003B068 <internal_commands.ab2@2708> INCLUDE "internal_commands.ab2"
0003B069 <internal_commands.ab2@2709> INCLUDE "internal_commands.ab2"
0003B06A <internal_commands.ab2@2710> INCLUDE "internal_commands.ab2"
0003B06E <internal_commands.ab2@2713> INCLUDE "internal_commands.ab2"
0003B070 <internal_commands.ab2@2714> INCLUDE "internal_commands.ab2"
0003B077 <internal_commands.ab2@2715> INCLUDE "internal_commands.ab2"
0003B078 <internal_commands.ab2@2716> INCLUDE "internal_commands.ab2"
0003B07C <internal_commands.ab2@2720> INCLUDE "internal_commands.ab2"
0003B07E <internal_commands.ab2@2721> INCLUDE "internal_commands.ab2"
0003B085 <internal_commands.ab2@2722> INCLUDE "internal_commands.ab2"
0003B086 <internal_commands.ab2@2723> INCLUDE "internal_commands.ab2"
0003B08A <internal_commands.ab2@2727> INCLUDE "internal_commands.ab2"
0003B08C <internal_commands.ab2@2728> INCLUDE "internal_commands.ab2"
0003B093 <internal_commands.ab2@2729> INCLUDE "internal_commands.ab2"
0003B094 <internal_commands.ab2@2730> INCLUDE "internal_commands.ab2"
0003B098 <internal_commands.ab2@2734> INCLUDE "internal_commands.ab2"
0003B09A <internal_commands.ab2@2735> INCLUDE "internal_commands.ab2"
0003B0A1 <internal_commands.ab2@2736> INCLUDE "internal_commands.ab2"
0003B0A2 <internal_commands.ab2@2737> INCLUDE "internal_commands.ab2"
0003B0A6 <internal_commands.ab2@2741> INCLUDE "internal_commands.ab2"
0003B0A8 <internal_commands.ab2@2742> INCLUDE "internal_commands.ab2"
0003B0AD <internal_commands.ab2@2743> INCLUDE "internal_commands.ab2"
0003B0C3 <internal_commands.ab2@2744> INCLUDE "internal_commands.ab2"
0003B0C4 <internal_commands.ab2@2745> INCLUDE "internal_commands.ab2"
0003B0C8 <internal_commands.ab2@2748> INCLUDE "internal_commands.ab2"
0003B0CA <internal_commands.ab2@2749> INCLUDE "internal_commands.ab2"
0003B0D4 <internal_commands.ab2@2750> INCLUDE "internal_commands.ab2"
0003B0D5 <internal_commands.ab2@2751> INCLUDE "internal_commands.ab2"
0003B0D6 <internal_commands.ab2@2752> INCLUDE "internal_commands.ab2"
0003B0DA <internal_commands.ab2@2755> INCLUDE "internal_commands.ab2"
0003B0DC <internal_commands.ab2@2756> INCLUDE "internal_commands.ab2"
0003B0E7 <internal_commands.ab2@2757> INCLUDE "internal_commands.ab2"
0003B0E8 <internal_commands.ab2@2758> INCLUDE "internal_commands.ab2"
0003B0EC <internal_commands.ab2@2762> INCLUDE "internal_commands.ab2"
0003B0EE <internal_commands.ab2@2763> INCLUDE "internal_commands.ab2"
0003B0FA <internal_commands.ab2@2764> INCLUDE "internal_commands.ab2"
0003B127 <internal_commands.ab2@2765> INCLUDE "internal_commands.ab2"
0003B128 <internal_commands.ab2@2766> INCLUDE "internal_commands.ab2"
0003B12C <internal_commands.ab2@2769> INCLUDE "internal_commands.ab2"
0003B12E <internal_commands.ab2@2770> INCLUDE "internal_commands.ab2"
0003B136 <internal_commands.ab2@2771> INCLUDE "internal_commands.ab2"
0003B16D <internal_commands.ab2@2772> INCLUDE "internal_commands.ab2"
0003B16E <internal_commands.ab2@2773> INCLUDE "internal_commands.ab2"
0003B172 <internal_commands.ab2@2776> INCLUDE "internal_commands.ab2"
0003B174 <internal_commands.ab2@2777> INCLUDE "internal_commands.ab2"
0003B17C <internal_commands.ab2@2778> INCLUDE "internal_commands.ab2"
0003B19B <internal_commands.ab2@2779> INCLUDE "internal_commands.ab2"
0003B19C <internal_commands.ab2@2780> INCLUDE "internal_commands.ab2"
0003B1A0 <internal_commands.ab2@2783> INCLUDE "internal_commands.ab2"
0003B1A2 <internal_commands.ab2@2784> INCLUDE "internal_commands.ab2"
0003B1A9 <internal_commands.ab2@2785> INCLUDE "internal_commands.ab2"
0003B1DF <internal_commands.ab2@2786> INCLUDE "internal_commands.ab2"
0003B1E0 <internal_commands.ab2@2787> INCLUDE "internal_commands.ab2"
0003B1E4 <internal_commands.ab2@2790> INCLUDE "internal_commands.ab2"
0003B1E6 <internal_commands.ab2@2791> INCLUDE "internal_commands.ab2"
0003B1EF <internal_commands.ab2@2792> INCLUDE "internal_commands.ab2"
0003B224 <internal_commands.ab2@2793> INCLUDE "internal_commands.ab2"
0003B228 <internal_commands.ab2@2797> INCLUDE "internal_commands.ab2"
0003B22A <internal_commands.ab2@2798> INCLUDE "internal_commands.ab2"
0003B23A <internal_commands.ab2@2799> INCLUDE "internal_commands.ab2"
0003B271 <internal_commands.ab2@2800> INCLUDE "internal_commands.ab2"
0003B272 <internal_commands.ab2@2801> INCLUDE "internal_commands.ab2"
0003B272 <AmiBlitz3.ab2@28306> INCLUDE "internal_commands.ab2"
0003B276 <AmiBlitz3.ab2@28311>            Dc.l cif_lt                                     ;ciflt
0003B27A <AmiBlitz3.ab2@28312>            Dc.l cif_eq                                     ;cifeq
0003B27E <AmiBlitz3.ab2@28313>            Dc.l cif_gt                                     ;cifgt
0003B282 <AmiBlitz3.ab2@28314>            Ds.l 1                                          ;0
0003B286 <AmiBlitz3.ab2@28315>            Dc.l cif_le                                     ;cifle
0003B28A <AmiBlitz3.ab2@28316>            Dc.l cif_ne                                     ;cifne
0003B28E <AmiBlitz3.ab2@28317>            Dc.l cif_le                                     ;cifge
0003B292 <AmiBlitz3.ab2@28318>            Ds.l 1                                          ;0
0003B296 <AmiBlitz3.ab2@28319>            Dc.l cif_ge                                     ;cifge
0003B29A <AmiBlitz3.ab2@28320>            Dc.l cif_ne                                     ;cifne
0003B29E <AmiBlitz3.ab2@28321>            Dc.l cif_ge                                     ;cifge
0003B2A2 <AmiBlitz3.ab2@28322>            Ds.l 1                                          ;0
0003B2A6 <AmiBlitz3.ab2@28325>            Dc.l do_newtype                                 ;donewtype
0003B2AA <AmiBlitz3.ab2@28326>            Dc.l do_end                                     ;doend
0003B2AE <AmiBlitz3.ab2@28327>            Dc.l do_let                                     ;dolet
0003B2B2 <AmiBlitz3.ab2@28328>            Dc.l do_dim                                     ;dodim
0003B2B6 <AmiBlitz3.ab2@28329>            Dc.l do_goto                                    ;dogoto
0003B2BA <AmiBlitz3.ab2@28330>            Dc.l do_gosub                                   ;dogosub
0003B2BE <AmiBlitz3.ab2@28331>            Dc.l do_return                                  ;doreturn
0003B2C2 <AmiBlitz3.ab2@28332>            Dc.l do_statement                               ;dostatement
0003B2C6 <AmiBlitz3.ab2@28333>            Dc.l do_function                                ;dofunc
0003B2CA <AmiBlitz3.ab2@28334>            Dc.l do_mousewait                               ;domwait
0003B2CE <AmiBlitz3.ab2@28335>            Dc.l do_if                                      ;doif
0003B2D2 <AmiBlitz3.ab2@28336>            Dc.l do_while                                   ;dowhile
0003B2D6 <AmiBlitz3.ab2@28337>            Dc.l do_Macro                                   ;domacro
0003B2DA <AmiBlitz3.ab2@28338>            Dc.l do_select                                  ;doselect
0003B2DE <AmiBlitz3.ab2@28339>            Dc.l do_case                                    ;docase
0003B2E2 <AmiBlitz3.ab2@28340>            Dc.l do_default                                 ;dodefault
0003B2E6 <AmiBlitz3.ab2@28341>            Dc.l do_AsmExit                                 ;doasmexit
0003B2EA <AmiBlitz3.ab2@28342>            Dc.l do_xinclude                                ;doxinclude
0003B2EE <AmiBlitz3.ab2@28343>            Dc.l do_INCLUDE                                 ;doinclude
0003B2F2 <AmiBlitz3.ab2@28344>            Dc.l do_syntax                                  ;syntaxerr
0003B2F6 <AmiBlitz3.ab2@28345>            Dc.l do_shared                                  ;doshared
0003B2FA <AmiBlitz3.ab2@28346>            Dc.l do_for                                     ;dofor
0003B2FE <AmiBlitz3.ab2@28347>            Dc.l do_next                                    ;donext
0003B302 <AmiBlitz3.ab2@28348>            Dc.l syntaxerr                                  ; To
0003B306 <AmiBlitz3.ab2@28349>            Dc.l syntaxerr                                  ; Step
0003B30A <AmiBlitz3.ab2@28350>            Dc.l do_data                                    ;dodata
0003B30E <AmiBlitz3.ab2@28351>            Dc.l do_read                                    ;doread
0003B312 <AmiBlitz3.ab2@28355>            Dc.l syntaxerr                                  ; CNIF
0003B316 <AmiBlitz3.ab2@28356>            Dc.l syntaxerr                                  ; CSIF
0003B31A <AmiBlitz3.ab2@28357>            Dc.l syntaxerr                                  ; CELSE
0003B31E <AmiBlitz3.ab2@28358>            Dc.l syntaxerr                                  ; CEND
0003B322 <AmiBlitz3.ab2@28359>            Dc.l do_cerr                                    ;docerr
0003B326 <AmiBlitz3.ab2@28360>            Dc.l do_then                                    ;dothen
0003B32A <AmiBlitz3.ab2@28361>            Dc.l do_else                                    ;doelse
0003B32E <AmiBlitz3.ab2@28362>            Dc.l do_even4                                   ;doeven4
0003B332 <AmiBlitz3.ab2@28363>            Dc.l do_even8                                   ;doeven8
0003B336 <AmiBlitz3.ab2@28365>            Dc.l do_dc                                      ;dodc
0003B33A <AmiBlitz3.ab2@28366>            Dc.l do_ds                                      ;dods
0003B33E <AmiBlitz3.ab2@28367>            Dc.l do_even                                    ;doeven
0003B342 <AmiBlitz3.ab2@28368>            Dc.l do_dcb                                     ;dodcb
0003B346 <AmiBlitz3.ab2@28369>            Dc.l do_setreg                                  ;dosetreg
0003B34A <AmiBlitz3.ab2@28370>            Dc.l do_IncBin                                  ;doincbin
0003B34E <AmiBlitz3.ab2@28371>            Dc.l do_free                                    ;dofree
0003B352 <AmiBlitz3.ab2@28372>            Dc.l do_use                                     ;douse
0003B356 <AmiBlitz3.ab2@28373>            Dc.l do_Stop                                    ;dostop
0003B35A <AmiBlitz3.ab2@28374>            Dc.l do_Cont                                    ;docont
0003B35E <AmiBlitz3.ab2@28375>            Dc.l syntaxerr                                  ;syntaxeer
0003B362 <AmiBlitz3.ab2@28376>            Dc.l do_SetInt                                  ;dosetint
0003B366 <AmiBlitz3.ab2@28377>            Dc.l do_ClrInt                                  ;doclrint
0003B36A <AmiBlitz3.ab2@28378>            Dc.l do_MaxLen                                  ;domaxlen
0003B36E <AmiBlitz3.ab2@28379>            Dc.l do_DEFTYPE                                 ;dodeftype
0003B372 <AmiBlitz3.ab2@28380>            Dc.l do_BLITZ                                   ;doblitz
0003B376 <AmiBlitz3.ab2@28381>            Dc.l do_AMIGA                                   ;doamiga
0003B37A <AmiBlitz3.ab2@28382>            Dc.l do_QAMIGA                                  ;doqamiga
0003B37E <AmiBlitz3.ab2@28383>            Dc.l do_VWait                                   ;dovwait
0003B382 <AmiBlitz3.ab2@28384>            Dc.l do_LibJsr                                  ;dolibjsr
0003B386 <AmiBlitz3.ab2@28385>            Dc.l do_TokeJsr                                 ;dotokejsr
0003B38A <AmiBlitz3.ab2@28386>            Dc.l do_BLibJsr                                 ;doblibjsr
0003B38E <AmiBlitz3.ab2@28387>            Dc.l _extb                                      ;syntaxerr
0003B392 <AmiBlitz3.ab2@28391>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003B396 <AmiBlitz3.ab2@28392>            Dc.l do_SetErr                                  ;doseterr
0003B39A <AmiBlitz3.ab2@28393>            Dc.l do_ClrErr                                  ;doclrerr
0003B39E <AmiBlitz3.ab2@28394>            Dc.l syntaxerr                                  ;syntaxerr
0003B3A2 <AmiBlitz3.ab2@28395>            Dc.l do_ErrFail                                 ;doerrfail
0003B3A6 <AmiBlitz3.ab2@28396>            Dc.l syntaxerr
0003B3AA <AmiBlitz3.ab2@28397>            Dc.l syntaxerr                                  ;mod
0003B3AE <AmiBlitz3.ab2@28398>            Dc.l syntaxerr                                  ;Pi
0003B3B2 <AmiBlitz3.ab2@28399>            Dc.l do_Repeat                                  ;dorepeat
0003B3B6 <AmiBlitz3.ab2@28400>            Dc.l do_Until                                   ;dountil
0003B3BA <AmiBlitz3.ab2@28401>            Dc.l do_PutReg                                  ;doputreg
0003B3BE <AmiBlitz3.ab2@28402>            Dc.l do_Pop                                     ;dopop
0003B3C2 <AmiBlitz3.ab2@28403>            Dc.l do_INCDIR                                  ;doincdir
0003B3C6 <AmiBlitz3.ab2@28404>            Dc.l mydo_Endif2                                ;mydoendif2
0003B3CA <AmiBlitz3.ab2@28405>            Dc.l do_Wend                                    ;dowend
0003B3CE <AmiBlitz3.ab2@28406>            Dc.l do_SysJsr                                  ;dosysjsr
0003B3D2 <AmiBlitz3.ab2@28407>            Dc.l do_WBStartup                               ;dowbstartup
0003B3D6 <AmiBlitz3.ab2@28408>            Dc.l syntaxerr
0003B3DA <AmiBlitz3.ab2@28409>            Dc.l do_Ongo                                    ;doongo
0003B3DE <AmiBlitz3.ab2@28410>            Dc.l syntaxerr
0003B3E2 <AmiBlitz3.ab2@28411>            Dc.l do_Forever                                 ;doforever
0003B3E6 <AmiBlitz3.ab2@28412>            Dc.l do_Restore                                 ;dorestore
0003B3EA <AmiBlitz3.ab2@28413>            Dc.l do_Exchange                                ;doexchange
0003B3EE <AmiBlitz3.ab2@28414>            Dc.l do_USEPATH                                 ;dousepath
0003B3F2 <AmiBlitz3.ab2@28415>            Dc.l do_CloseEd                                 ;doclosed
0003B3F6 <AmiBlitz3.ab2@28416>            Dc.l do_NoCli                                   ;donocli
0003B3FA <AmiBlitz3.ab2@28417>            Dc.l syntaxerr                                  ;syntaxerr
0003B3FE <AmiBlitz3.ab2@28418>            Dc.l syntaxerr                                  ;syntaxerr
0003B402 <AmiBlitz3.ab2@28419>            Dc.l syntaxerr                                  ;syntaxerr
0003B406 <AmiBlitz3.ab2@28420>            Dc.l syntaxerr                                  ;syntaxerr
0003B40A <AmiBlitz3.ab2@28421>            Dc.l syntaxerr                                  ;syntaxerr
0003B40E <AmiBlitz3.ab2@28422>            Dc.l do_runerrson                               ;dorunerrson
0003B412 <AmiBlitz3.ab2@28423>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003B416 <AmiBlitz3.ab2@28424>            Dc.l do_uselastpath
0003B41A <AmiBlitz3.ab2@28425>            Dc.l do_regload
0003B41E <AmiBlitz3.ab2@28426>            Dc.l do_regsave
0003B422 <AmiBlitz3.ab2@28427>            Dc.l do_Object
0003B426 <AmiBlitz3.ab2@28428>            Dc.l do_usepath2
0003B42A <AmiBlitz3.ab2@28429>            Dc.l do_LastRunErrsMode
0003B42E <AmiBlitz3.ab2@28452> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003B432 <AmiBlitz3.ab2@28453>            Dc.l menu_run
0003B436 <AmiBlitz3.ab2@28454>            Dc.l menu_createexecutable
0003B43A <AmiBlitz3.ab2@28455>            Dc.l menu_dummyfunc          ;was menu_compileroptions
0003B43E <AmiBlitz3.ab2@28456>            Dc.l menu_createresidentfile
0003B442 <AmiBlitz3.ab2@28457>            Dc.l menu_viewnewtypes
0003B446 <AmiBlitz3.ab2@28458>            Dc.l menu_simcliarguments
0003B44A <AmiBlitz3.ab2@28459>            Dc.l menu_dummyfunc          ;was menu_calculator
0003B44E <AmiBlitz3.ab2@28460>            Dc.l menu_reloadlibs
0003B452 <AmiBlitz3.ab2@28461>            Dc.l menu_loaddebugmodule
0003B456 <AmiBlitz3.ab2@28462>            Dc.l menu_dummyfunc
0003B45A <AmiBlitz3.ab2@28463>            Dc.l menu_newcreate
0003B45E <AmiBlitz3.ab2@28464>            Dc.l menu_dummyfunc
0003B462 <AmiBlitz3.ab2@28465>            Dc.l toggledebug
0003B466 <AmiBlitz3.ab2@28466>            Dc.l menu_dummyfunc
0003B46A <AmiBlitz3.ab2@28467>            Dc.l menu_dummyfunc
0003B46C <AmiBlitz3.ab2@28468> Even4
0003B496 <AmiBlitz3.ab2@28472>   !basic
0003B4F8 <AmiBlitz3.ab2@28473>   error{!TRANS{"Inavlid amiblitz3 menu item called!"} }
0003B516 <AmiBlitz3.ab2@28474>   !asm
0003B518 <AmiBlitz3.ab2@28475> RTS
0003B519 <AmiBlitz3.ab2@28481> set_autorun:               Dc.b $00
0003B51E <AmiBlitz3.ab2@28482> autorun:                   Dc.b $80,$01,$01,$00,$01
0003B51F <AmiBlitz3.ab2@28484> set_interruptcheck:        Dc.b $00
0003B524 <AmiBlitz3.ab2@28485> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003B525 <AmiBlitz3.ab2@28487> set_assemblercheck:        Ds.b 1
0003B52A <AmiBlitz3.ab2@28488> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003B52B <AmiBlitz3.ab2@28490> set_overflowcheck:         Ds.b 1
0003B530 <AmiBlitz3.ab2@28491> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003B536 <AmiBlitz3.ab2@28493> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003B53C <AmiBlitz3.ab2@28494> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003B542 <AmiBlitz3.ab2@28495> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003B544 <AmiBlitz3.ab2@28496> Even4
0003B550 <AmiBlitz3.ab2@28499> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003B558 <AmiBlitz3.ab2@28500>                            Dc.l $00000000,$00000000
0003B560 <AmiBlitz3.ab2@28501> tstsize1:                  Dc.l $00000100,$000003E9
0003B564 <AmiBlitz3.ab2@28502> tstsize2:                  Dc.l $00000100
0003B568 <AmiBlitz3.ab2@28503> tstend:                    Dc.l $000003EC
0003B570 <AmiBlitz3.ab2@28504> tstsize3:                  Ds.l 2
0003B574 <AmiBlitz3.ab2@28505> tstdone:                   Dc.l $000003F2
0003B578 <AmiBlitz3.ab2@28508> edstruct:                  Dc.l tokens                     ;data for ted
0003B57C <AmiBlitz3.ab2@28512>                            Dc.l 0
0003B580 <AmiBlitz3.ab2@28514>                            Dc.l read_xtrafile              ;load .xtra routine
0003B584 <AmiBlitz3.ab2@28515>                            Dc.l write_xtrafile             ;save .xtra routine
0003B588 <AmiBlitz3.ab2@28516>                            Dc.l call_menuentry             ;Menu Routine
0003B58C <AmiBlitz3.ab2@28517>                            Ds.l 1                          ;cleanup (?)
0003B590 <AmiBlitz3.ab2@28518>                            Dc.b ":",34,".;"
0003B68C <AmiBlitz3.ab2@28521> 
0003B76C <AmiBlitz3.ab2@28522>                            Ds.l 56
0003B76E <AmiBlitz3.ab2@28527> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003B772 <AmiBlitz3.ab2@28530> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003B774 <AmiBlitz3.ab2@28531>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003B778 <AmiBlitz3.ab2@28532>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003B77E <AmiBlitz3.ab2@28536> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003B780 <AmiBlitz3.ab2@28540>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003B784 <AmiBlitz3.ab2@28543> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003B788 <AmiBlitz3.ab2@28546> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003B78C <AmiBlitz3.ab2@28547>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003B78E <AmiBlitz3.ab2@28553>                            Dc.b $4A,$40                                             ;TST.W   D0
0003B790 <AmiBlitz3.ab2@28557>                            Dc.b $4A,$80                                             ;TST.L   D0
0003B792 <AmiBlitz3.ab2@28560> nops8:                     Dc.b $4E,$71                                             ;NOP
0003B794 <AmiBlitz3.ab2@28561>                            Dc.b $4E,$71                                             ;NOP
0003B796 <AmiBlitz3.ab2@28562>                            Dc.b $4E,$71                                             ;NOP
0003B798 <AmiBlitz3.ab2@28563>                            Dc.b $4E,$71                                             ;NOP
0003B79A <AmiBlitz3.ab2@28564> nops4:                     Dc.b $4E,$71                                             ;NOP
0003B79C <AmiBlitz3.ab2@28566>                            Dc.b $4E,$71                                             ;NOP
0003B79E <AmiBlitz3.ab2@28567>                            Dc.b $4E,$71                                             ;NOP
0003B7A0 <AmiBlitz3.ab2@28568>                            Dc.b $4E,$71                                             ;NOP
0003B7A4 <AmiBlitz3.ab2@28572> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003B7A8 <AmiBlitz3.ab2@28575> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003B7AA <AmiBlitz3.ab2@28578> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003B7AC <AmiBlitz3.ab2@28581> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B7AE <AmiBlitz3.ab2@28582>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003B7B2 <AmiBlitz3.ab2@28583>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003B7B4 <AmiBlitz3.ab2@28584>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003B7B6 <AmiBlitz3.ab2@28590> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B7BA <AmiBlitz3.ab2@28591>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003B7BC <AmiBlitz3.ab2@28596> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B7C0 <AmiBlitz3.ab2@28597>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003B7C2 <AmiBlitz3.ab2@28601> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B7C4 <AmiBlitz3.ab2@28602>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003B7C8 <AmiBlitz3.ab2@28608> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003B7CA <AmiBlitz3.ab2@28609>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003B7CE <AmiBlitz3.ab2@28610>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003B7D2 <AmiBlitz3.ab2@28614> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003B7D4 <AmiBlitz3.ab2@28615>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003B7D8 <AmiBlitz3.ab2@28616>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003B7DA <AmiBlitz3.ab2@28619> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003B7DE <AmiBlitz3.ab2@28622> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003B7E2 <AmiBlitz3.ab2@28625> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003B7E6 <AmiBlitz3.ab2@28628> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003B7EA <AmiBlitz3.ab2@28632>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B7EC <AmiBlitz3.ab2@28633>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003B7EE <AmiBlitz3.ab2@28634>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003B7F2 <AmiBlitz3.ab2@28639>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B7F4 <AmiBlitz3.ab2@28640>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003B7F6 <AmiBlitz3.ab2@28641>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003B7FA <AmiBlitz3.ab2@28646>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B7FC <AmiBlitz3.ab2@28647>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003B7FE <AmiBlitz3.ab2@28648>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003B802 <AmiBlitz3.ab2@28653>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B804 <AmiBlitz3.ab2@28654>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B806 <AmiBlitz3.ab2@28655>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003B80A <AmiBlitz3.ab2@28656>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003B80C <AmiBlitz3.ab2@28657>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003B810 <AmiBlitz3.ab2@28662>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B812 <AmiBlitz3.ab2@28663>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003B816 <AmiBlitz3.ab2@28664>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003B818 <AmiBlitz3.ab2@28665>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003B81C <AmiBlitz3.ab2@28666>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003B81E <AmiBlitz3.ab2@28667>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B820 <AmiBlitz3.ab2@28670>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003B824 <AmiBlitz3.ab2@28675>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B826 <AmiBlitz3.ab2@28676>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003B82A <AmiBlitz3.ab2@28677>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003B82C <AmiBlitz3.ab2@28678>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003B830 <AmiBlitz3.ab2@28679>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003B832 <AmiBlitz3.ab2@28680>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B834 <AmiBlitz3.ab2@28683>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003B838 <AmiBlitz3.ab2@28688>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B83A <AmiBlitz3.ab2@28689>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B83E <AmiBlitz3.ab2@28690>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003B840 <AmiBlitz3.ab2@28691>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003B844 <AmiBlitz3.ab2@28692>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003B846 <AmiBlitz3.ab2@28693>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B848 <AmiBlitz3.ab2@28696>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003B84C <AmiBlitz3.ab2@28701>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003B84E <AmiBlitz3.ab2@28702>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B852 <AmiBlitz3.ab2@28703>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003B858 <AmiBlitz3.ab2@28704>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003B85C <AmiBlitz3.ab2@28705>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003B85E <AmiBlitz3.ab2@28706>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003B862 <AmiBlitz3.ab2@28713>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003B864 <AmiBlitz3.ab2@28717> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003B866 <AmiBlitz3.ab2@28720> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003B86A <AmiBlitz3.ab2@28723> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003B86C <AmiBlitz3.ab2@28724> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003B870 <AmiBlitz3.ab2@28727> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003B872 <AmiBlitz3.ab2@28730> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B876 <AmiBlitz3.ab2@28733> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003B878 <AmiBlitz3.ab2@28737>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003B87A <AmiBlitz3.ab2@28740> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003B87C <AmiBlitz3.ab2@28743> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B880 <AmiBlitz3.ab2@28746> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003B884 <AmiBlitz3.ab2@28749> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003B888 <AmiBlitz3.ab2@28752> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003B88A <AmiBlitz3.ab2@28755> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B88C <AmiBlitz3.ab2@28758> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003B890 <AmiBlitz3.ab2@28761> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003B896 <AmiBlitz3.ab2@28762>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003B898 <AmiBlitz3.ab2@28763>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B89C <AmiBlitz3.ab2@28767> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003B89E <AmiBlitz3.ab2@28768>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B8A0 <AmiBlitz3.ab2@28772> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003B8A4 <AmiBlitz3.ab2@28775> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003B8A6 <AmiBlitz3.ab2@28779>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003B8A8 <AmiBlitz3.ab2@28783>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B8AA <AmiBlitz3.ab2@28787>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003B8AE <AmiBlitz3.ab2@28790> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003B8B2 <AmiBlitz3.ab2@28793> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003B8B4 <AmiBlitz3.ab2@28796> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003B8B6 <AmiBlitz3.ab2@28799> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B8B8 <AmiBlitz3.ab2@28802> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003B8BC <AmiBlitz3.ab2@28805> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003B8C0 <AmiBlitz3.ab2@28808> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003B8C2 <AmiBlitz3.ab2@28811> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003B8C4 <AmiBlitz3.ab2@28815>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003B8C8 <AmiBlitz3.ab2@28818>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003B8CA <AmiBlitz3.ab2@28824>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003B8CE <AmiBlitz3.ab2@28827>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003B8D0 <AmiBlitz3.ab2@28833>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003B8D4 <AmiBlitz3.ab2@28837> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003B8D6 <AmiBlitz3.ab2@28840> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003B8D8 <AmiBlitz3.ab2@28844>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003B8DA <AmiBlitz3.ab2@28848>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003B8E0 <AmiBlitz3.ab2@28851> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003B8E6 <AmiBlitz3.ab2@28854> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003B8EE <AmiBlitz3.ab2@28858> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003B8F2 <AmiBlitz3.ab2@28859>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003B8F4 <AmiBlitz3.ab2@28863> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003B8F8 <AmiBlitz3.ab2@28866> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003B8FC <AmiBlitz3.ab2@28869> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003B900 <AmiBlitz3.ab2@28872> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003B904 <AmiBlitz3.ab2@28873> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003B908 <AmiBlitz3.ab2@28877>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003B90C <AmiBlitz3.ab2@28879>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003B90E <AmiBlitz3.ab2@28882> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003B912 <AmiBlitz3.ab2@28885> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003B914 <AmiBlitz3.ab2@28888> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003B916 <AmiBlitz3.ab2@28889>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003B918 <AmiBlitz3.ab2@28890>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003B91C <AmiBlitz3.ab2@28891> 
0003B91E <AmiBlitz3.ab2@28892>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003B920 <AmiBlitz3.ab2@28893>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003B922 <AmiBlitz3.ab2@28894>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003B928 <AmiBlitz3.ab2@28896>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003B92A <AmiBlitz3.ab2@28901> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003B92C <AmiBlitz3.ab2@28902>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003B92E <AmiBlitz3.ab2@28906> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003B932 <AmiBlitz3.ab2@28909> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003B934 <AmiBlitz3.ab2@28912> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003B936 <AmiBlitz3.ab2@28916>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003B938 <AmiBlitz3.ab2@28919> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003B93C <AmiBlitz3.ab2@28922> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003B93E <AmiBlitz3.ab2@28923>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003B942 <AmiBlitz3.ab2@28927> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003B946 <AmiBlitz3.ab2@28928> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003B94A <AmiBlitz3.ab2@28932> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003B94E <AmiBlitz3.ab2@28936> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003B954 <AmiBlitz3.ab2@28940> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003B95A <AmiBlitz3.ab2@28943> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003B95E <AmiBlitz3.ab2@28947> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003B962 <AmiBlitz3.ab2@28951>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003B966 <AmiBlitz3.ab2@28952>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003B96C <AmiBlitz3.ab2@28957>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003B970 <AmiBlitz3.ab2@28962>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003B972 <AmiBlitz3.ab2@28967>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003B976 <AmiBlitz3.ab2@28971>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003B978 <AmiBlitz3.ab2@28975> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003B97A <AmiBlitz3.ab2@28978> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003B97C <AmiBlitz3.ab2@28979>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003B980 <AmiBlitz3.ab2@28983>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003B984 <AmiBlitz3.ab2@28987> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003B988 <AmiBlitz3.ab2@28990> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003B98A <AmiBlitz3.ab2@28993> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003B98E <AmiBlitz3.ab2@28996> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003B990 <AmiBlitz3.ab2@28999> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003B999 <AmiBlitz3.ab2@29003>                            Dc.b "ram:test",0
0003B99A <AmiBlitz3.ab2@29004> Even
0003B99E <AmiBlitz3.ab2@29008>                            Dc.l  0                          ;was  Ds.w 3 org source
0003B9A0 <AmiBlitz3.ab2@29010>                            Dc.w  0
0003B9A4 <AmiBlitz3.ab2@29013> _mathffpbase:              Ds.l 1                           ;maths org source
0003B9A6 <AmiBlitz3.ab2@29014> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003B9A8 <AmiBlitz3.ab2@29015> typelen:                   Ds.w 1
0003B9AC <AmiBlitz3.ab2@29016> prevtype:                  Ds.l 1
0003B9B0 <AmiBlitz3.ab2@29017> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003B9B2 <AmiBlitz3.ab2@29018> lastchar:                  Ds.w 1
0003B9B6 <AmiBlitz3.ab2@29019> thistype:                  Ds.l 1
0003B9BA <AmiBlitz3.ab2@29020> errstack:                  Ds.l 1
0003B9BE <AmiBlitz3.ab2@29021> errcont:                   Ds.l 1
0003B9C0 <AmiBlitz3.ab2@29022> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003B9C2 <AmiBlitz3.ab2@29023> linesleft:                 Ds.w 1
0003B9C6 <AmiBlitz3.ab2@29024> sourceline:                Ds.l 1                          ;thisitem org source
0003B9CA <AmiBlitz3.ab2@29025> varbase:                   Ds.l 1                          ;firstvar org source
0003B9CE <AmiBlitz3.ab2@29026> alllocals:                 Ds.l 1
0003B9D2 <AmiBlitz3.ab2@29027> firstlocal:                Ds.l 1
0003B9D6 <AmiBlitz3.ab2@29028> firstglob:                 Ds.l 1
0003B9D8 <AmiBlitz3.ab2@29029> globalvarpointer:          Ds.w 1                          ;varoff org source
0003B9DA <AmiBlitz3.ab2@29030> locvaroff:                 Ds.w 1
0003B9DE <AmiBlitz3.ab2@29031> firstitem_:                 Ds.l 1
0003B9E0 <AmiBlitz3.ab2@29032> numlines_org:              Ds.w 1                          ;numlines org source
0003B9E2 <AmiBlitz3.ab2@29033> returncode_org:            Ds.w 1                          ;returncode org source
0003B9E6 <AmiBlitz3.ab2@29034> firstiff:                  Ds.l 1                          ;firstif org source
0003B9EA <AmiBlitz3.ab2@29035> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003BBEA <AmiBlitz3.ab2@29036> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003BBFA <AmiBlitz3.ab2@29037> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003BDFA <AmiBlitz3.ab2@29038> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003BFFA <AmiBlitz3.ab2@29039> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003C1FA <AmiBlitz3.ab2@29040> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003C1FE <AmiBlitz3.ab2@29042> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003C3FE <AmiBlitz3.ab2@29043> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003C5FE <AmiBlitz3.ab2@29045> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003C602 <AmiBlitz3.ab2@29046> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003C802 <AmiBlitz3.ab2@29047> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003C806 <AmiBlitz3.ab2@29048> size_deflibs:              Ds.l 1                          ;deflibs org source
0003CA06 <AmiBlitz3.ab2@29049> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003CC06 <AmiBlitz3.ab2@29051> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003CC0A <AmiBlitz3.ab2@29052> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003CE0A <AmiBlitz3.ab2@29054> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003CE0E <AmiBlitz3.ab2@29060>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003CE12 <AmiBlitz3.ab2@29061>   Dc.b $00,$00,$00,$00
0003CE16 <AmiBlitz3.ab2@29062>   Dc.b $00,$19,$00,$11
0003CE1A <AmiBlitz3.ab2@29063>   Dc.b $00,$2E,$00,$18
0003CE1E <AmiBlitz3.ab2@29064>   Dc.b $00,$04,$00,$03
0003CE22 <AmiBlitz3.ab2@29065>   Dc.b $00,$01,$00,$22
0003CE26 <AmiBlitz3.ab2@29066>   Dc.b $73,$68,$00,$00
0003CE2A <AmiBlitz3.ab2@29067>   Dc.b $00,$00,$00,$00
0003CE2E <AmiBlitz3.ab2@29068>   Dc.b $00,$00,$00,$00
0003CE32 <AmiBlitz3.ab2@29069>   Dc.b $00,$00,$00,$00
0003CE36 <AmiBlitz3.ab2@29070>   Dc.b $00,$00,$00,$00
0003CE3A <AmiBlitz3.ab2@29071>   Dc.b $00,$00,$00,$00
0003CE3E <AmiBlitz3.ab2@29072>   Dc.b $03,$22,$00,$21
0003CE42 <AmiBlitz3.ab2@29073>   Dc.b $3C,$28,$00,$22
0003CE46 <AmiBlitz3.ab2@29074>   Dc.b $6E,$C0,$00,$00
0003CE4A <AmiBlitz3.ab2@29075>   Dc.b $00,$12,$00,$00
0003CE4E <AmiBlitz3.ab2@29076>   Dc.b $00,$0E,$00,$00
0003CE52 <AmiBlitz3.ab2@29077>   Dc.b $00,$00,$00,$00
0003CE56 <AmiBlitz3.ab2@29078>   Dc.b $00,$00,$00,$00
0003CE5A <AmiBlitz3.ab2@29079>   Dc.b $00,$00,$00,$00
0003CE5E <AmiBlitz3.ab2@29080>   Dc.b $00,$00,$00,$2E
0003CE62 <AmiBlitz3.ab2@29081>   Dc.b $00,$17,$00,$02
0003CE66 <AmiBlitz3.ab2@29082>   Dc.b $00,$01,$8E,$80
0003CE6A <AmiBlitz3.ab2@29083>   Dc.b $03,$00,$00,$00
0003CE6E <AmiBlitz3.ab2@29084>   Dc.b $00,$00,$FF,$FF
0003CE72 <AmiBlitz3.ab2@29085>   Dc.b $FF,$FF,$FF,$FC
0003CE76 <AmiBlitz3.ab2@29086>   Dc.b $80,$00,$00,$00
0003CE7A <AmiBlitz3.ab2@29087>   Dc.b $00,$00,$80,$00
0003CE7E <AmiBlitz3.ab2@29088>   Dc.b $00,$3F,$BB,$40
0003CE82 <AmiBlitz3.ab2@29089>   Dc.b $80,$1F,$C0,$00
0003CE86 <AmiBlitz3.ab2@29090>   Dc.b $00,$00,$80,$3F
0003CE8A <AmiBlitz3.ab2@29091>   Dc.b $C0,$0F,$BB,$40
0003CE8E <AmiBlitz3.ab2@29092>   Dc.b $80,$1F,$C0,$00
0003CE92 <AmiBlitz3.ab2@29093>   Dc.b $00,$00,$8E,$00
0003CE96 <AmiBlitz3.ab2@29094>   Dc.b $F8,$00,$00,$00
0003CE9A <AmiBlitz3.ab2@29095>   Dc.b $8F,$01,$FF,$00
0003CE9E <AmiBlitz3.ab2@29096>   Dc.b $3B,$40,$81,$E3
0003CEA2 <AmiBlitz3.ab2@29097>   Dc.b $F7,$C0,$00,$00
0003CEA6 <AmiBlitz3.ab2@29098>   Dc.b $80,$7F,$F8,$70
0003CEAA <AmiBlitz3.ab2@29099>   Dc.b $3B,$40,$80,$0F
0003CEAE <AmiBlitz3.ab2@29100>   Dc.b $7C,$E0,$00,$00
0003CEB2 <AmiBlitz3.ab2@29101>   Dc.b $80,$00,$FD,$80
0003CEB6 <AmiBlitz3.ab2@29102>   Dc.b $00,$00,$80,$01
0003CEBA <AmiBlitz3.ab2@29103>   Dc.b $F6,$00,$FB,$40
0003CEBE <AmiBlitz3.ab2@29104>   Dc.b $80,$03,$EF,$00
0003CEC2 <AmiBlitz3.ab2@29105>   Dc.b $00,$00,$80,$07
0003CEC6 <AmiBlitz3.ab2@29106>   Dc.b $87,$80,$3B,$40
0003CECA <AmiBlitz3.ab2@29107>   Dc.b $80,$0F,$01,$C0
0003CECE <AmiBlitz3.ab2@29108>   Dc.b $00,$00,$80,$03
0003CED2 <AmiBlitz3.ab2@29109>   Dc.b $F0,$70,$1D,$40
0003CED6 <AmiBlitz3.ab2@29110>   Dc.b $80,$00,$18,$1C
0003CEDA <AmiBlitz3.ab2@29111>   Dc.b $00,$00,$80,$00
0003CEDE <AmiBlitz3.ab2@29112>   Dc.b $10,$06,$03,$40
0003CEE2 <AmiBlitz3.ab2@29113>   Dc.b $80,$00,$20,$1F
0003CEE6 <AmiBlitz3.ab2@29114>   Dc.b $00,$00,$80,$00
0003CEEA <AmiBlitz3.ab2@29115>   Dc.b $00,$00,$01,$40
0003CEEE <AmiBlitz3.ab2@29116>   Dc.b $80,$00,$00,$00
0003CEF2 <AmiBlitz3.ab2@29117>   Dc.b $00,$00,$80,$00
0003CEF6 <AmiBlitz3.ab2@29118>   Dc.b $00,$00,$00,$00
0003CEFA <AmiBlitz3.ab2@29119>   Dc.b $00,$00,$00,$00
0003CEFE <AmiBlitz3.ab2@29120>   Dc.b $00,$00,$00,$00
0003CF02 <AmiBlitz3.ab2@29121>   Dc.b $00,$00,$00,$04
0003CF06 <AmiBlitz3.ab2@29122>   Dc.b $00,$3F,$FC,$01
0003CF0A <AmiBlitz3.ab2@29123>   Dc.b $BB,$44,$00,$60
0003CF0E <AmiBlitz3.ab2@29124>   Dc.b $FE,$00,$00,$04
0003CF12 <AmiBlitz3.ab2@29125>   Dc.b $00,$CF,$FF,$01
0003CF16 <AmiBlitz3.ab2@29126>   Dc.b $BB,$44,$1F,$EF
0003CF1A <AmiBlitz3.ab2@29127>   Dc.b $FF,$00,$00,$04
0003CF1E <AmiBlitz3.ab2@29128>   Dc.b $33,$FF,$FF,$E0
0003CF22 <AmiBlitz3.ab2@29129>   Dc.b $00,$04,$37,$FE
0003CF26 <AmiBlitz3.ab2@29130>   Dc.b $7F,$FC,$1B,$44
0003CF2A <AmiBlitz3.ab2@29131>   Dc.b $0F,$9C,$FF,$FF
0003CF2E <AmiBlitz3.ab2@29132>   Dc.b $00,$04,$03,$E3
0003CF32 <AmiBlitz3.ab2@29133>   Dc.b $FF,$FF,$DB,$44
0003CF36 <AmiBlitz3.ab2@29134>   Dc.b $00,$7F,$BF,$FF
0003CF3A <AmiBlitz3.ab2@29135>   Dc.b $80,$04,$00,$0F
0003CF3E <AmiBlitz3.ab2@29136>   Dc.b $3F,$FE,$00,$04
0003CF42 <AmiBlitz3.ab2@29137>   Dc.b $00,$06,$7F,$F8
0003CF46 <AmiBlitz3.ab2@29138>   Dc.b $1B,$44,$00,$0C
0003CF4A <AmiBlitz3.ab2@29139>   Dc.b $F7,$FC,$00,$04
0003CF4E <AmiBlitz3.ab2@29140>   Dc.b $00,$19,$F9,$FE
0003CF52 <AmiBlitz3.ab2@29141>   Dc.b $1B,$44,$00,$33
0003CF56 <AmiBlitz3.ab2@29142>   Dc.b $FE,$7F,$00,$04
0003CF5A <AmiBlitz3.ab2@29143>   Dc.b $00,$0F,$FF,$BF
0003CF5E <AmiBlitz3.ab2@29144>   Dc.b $CD,$44,$00,$03
0003CF62 <AmiBlitz3.ab2@29145>   Dc.b $EF,$EF,$F0,$04
0003CF66 <AmiBlitz3.ab2@29146>   Dc.b $00,$00,$7F,$DF
0003CF6A <AmiBlitz3.ab2@29147>   Dc.b $FB,$44,$00,$00
0003CF6E <AmiBlitz3.ab2@29148>   Dc.b $FF,$A7,$FC,$04
0003CF72 <AmiBlitz3.ab2@29149>   Dc.b $00,$00,$7E,$3F
0003CF76 <AmiBlitz3.ab2@29150>   Dc.b $FD,$44,$00,$00
0003CF7A <AmiBlitz3.ab2@29151>   Dc.b $00,$00,$00,$04
0003CF7E <AmiBlitz3.ab2@29152>   Dc.b $7F,$FF,$FF,$FF
0003CF82 <AmiBlitz3.ab2@29153>   Dc.b $FF,$FC,$00,$00
0003CF86 <AmiBlitz3.ab2@29154>   Dc.b $00,$01,$00,$00
0003CF89 <AmiBlitz3.ab2@29155>   Dc.b $00,$00,$04
0003CF8F <AmiBlitz3.ab2@29158> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003CFE7 <AmiBlitz3.ab2@29159> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003CFE8 <AmiBlitz3.ab2@29160> Even
0003CFEC <AmiBlitz3.ab2@29162> sysdebug:            Dc.l $3F0
0003CFF0 <AmiBlitz3.ab2@29166> exelock              Ds.l 1
0003CFF4 <AmiBlitz3.ab2@29170> includesourceline    Dc.l 0
0003CFF8 <AmiBlitz3.ab2@29171> linenum              Ds.l 1
0003CFFC <AmiBlitz3.ab2@29172> globallinecount      Ds.l 1
0003D018 <AmiBlitz3.ab2@29173> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003D01C <AmiBlitz3.ab2@29174> calc_option          Dc.l 1
0003D020 <AmiBlitz3.ab2@29175> versioninformation   Dc.l $00
0003D024 <AmiBlitz3.ab2@29176> number_of_builds     Dc.l $00
0003D028 <AmiBlitz3.ab2@29179> BSS
0003D02A <AmiBlitz3.ab2@29180> debugnest            Ds.w 1
0003D02E <AmiBlitz3.ab2@29181> instringf            Ds.l 1
0003D032 <AmiBlitz3.ab2@29182> funcscanon           Ds.l 1
0003D046 <AmiBlitz3.ab2@29183> storedebugmode       Ds.b 20
0003D04A <AmiBlitz3.ab2@29184> firsttimepref        Ds.l 1
0003D04B <AmiBlitz3.ab2@29185> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003D04C <AmiBlitz3.ab2@29186> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003D04E <AmiBlitz3.ab2@29187> nostringopt          Ds.w 1
0003D0CE <AmiBlitz3.ab2@29188> path2:               Ds.l 32
0003D0D2 <AmiBlitz3.ab2@29189> typebase             Dc.l 0
0003D0D4 <AmiBlitz3.ab2@29190> doublepeek           Dc.w 0
0003D0D8 <AmiBlitz3.ab2@29191> lastoffset           Dc.l 0
0003D0DA <AmiBlitz3.ab2@29192> firsttime            Dc.w 0
0003D0DE <AmiBlitz3.ab2@29193> lastdestpointer      Dc.l 0
0003D0E2 <AmiBlitz3.ab2@29194> prevwritedat         Dc.l 0
0003D0E6 <AmiBlitz3.ab2@29195> lastsourceline       Dc.l 0
0003D0EA <AmiBlitz3.ab2@29196> lastwritedat         Dc.l 0
0003D0EC <AmiBlitz3.ab2@29197> makeexec             Dc.w 0
0003D0EE <AmiBlitz3.ab2@29198> makeexec_remember    Dc.w 0
0003D0F2 <AmiBlitz3.ab2@29199> sharebase            Ds.l 1
0003D0F6 <AmiBlitz3.ab2@29200> tempa7               Ds.l 1
0003D0F8 <AmiBlitz3.ab2@29201> incnif               Ds.w 1
0003D0FC <AmiBlitz3.ab2@29202> tempstore            Ds.l 1
0003D100 <AmiBlitz3.ab2@29203> result               Ds.l 1
0003D102 <AmiBlitz3.ab2@29204> automode             Ds.w 1
0003D104 <AmiBlitz3.ab2@29205> stackcorrect         Ds.w 1
0003D106 <AmiBlitz3.ab2@29206> formode              Ds.w 1
0003D10A <AmiBlitz3.ab2@29207> limitregs            Ds.l 1
0003D10C <AmiBlitz3.ab2@29208> onestep              Ds.w 1
0003D110 <AmiBlitz3.ab2@29209> reqmode              Ds.l 1
0003D1B0 <AmiBlitz3.ab2@29210> inctab               Ds.l 40
0003D1B2 <AmiBlitz3.ab2@29211> funcoptimize         Ds.w 1
0003D1B6 <AmiBlitz3.ab2@29212> includeline          Ds.l 1
0003D1BA <AmiBlitz3.ab2@29213> morememadd           Ds.l 1
0003D1BC <AmiBlitz3.ab2@29214> objectcount          Ds.w 1
0003D1C0 <AmiBlitz3.ab2@29215> savefuncspace        Ds.l 1
0003D1C4 <AmiBlitz3.ab2@29216> lasttrap1            Ds.l 1
0003D1C8 <AmiBlitz3.ab2@29217> currentfunccall      Ds.l 1
0003D1C9 <AmiBlitz3.ab2@29218> skipfunc             Ds.b 1
0003D1CA <AmiBlitz3.ab2@29219> resdisable           Ds.b 1
0003D1CB <AmiBlitz3.ab2@29220> skiptoggle           Ds.b 1
0003D1CC <AmiBlitz3.ab2@29221> developobject        Ds.b 1
0003D1CE <AmiBlitz3.ab2@29222> iniffcommand         Ds.w 1
0003D1D0 <AmiBlitz3.ab2@29223> startoffsetmore      Ds.w 1
0003D1D2 <AmiBlitz3.ab2@29224> olddebugmode         Ds.w 1
0003D1D6 <AmiBlitz3.ab2@29225> fpucodeglobal        Ds.l 1
0003D1DA <AmiBlitz3.ab2@29226> fpucodelocal         Ds.l 1
0003D1DE <AmiBlitz3.ab2@29227> maxregs              Ds.l 1
0003D1E2 <AmiBlitz3.ab2@29228> fpucode              Ds.l 1
0003D1E4 <AmiBlitz3.ab2@29229> firstmline           Ds.w 1
0003D224 <AmiBlitz3.ab2@29230> regtable             Ds.l 16
0003D226 <AmiBlitz3.ab2@29231> exdebug              Ds.w 1
0003D228 <AmiBlitz3.ab2@29232> a2offset2            Ds.w 1
0003D22C <AmiBlitz3.ab2@29233> parnumtemp           Ds.l 1
0003D22D <AmiBlitz3.ab2@29234> doimmediate          Ds.b 1
0003D22E <AmiBlitz3.ab2@29235> notypecheck          Ds.b 1
0003D230 <AmiBlitz3.ab2@29236> vartype              Ds.w 1
0003D231 <AmiBlitz3.ab2@29237> peekaddrsize         Ds.b 1
0003D232 <AmiBlitz3.ab2@29238> declare2             Ds.b 1
0003D234 <AmiBlitz3.ab2@29239> parameternum         Ds.w 1
0003D238 <AmiBlitz3.ab2@29240> lasttoken            Ds.l 1
0003D23A <AmiBlitz3.ab2@29241> newvariable          Ds.w 1
0003D23B <AmiBlitz3.ab2@29242> declare              Ds.b 1
0003D23C <AmiBlitz3.ab2@29243> typecheck            Ds.b 1
0003D23D <AmiBlitz3.ab2@29244> nowdeclare           Ds.b 1
0003D23E <AmiBlitz3.ab2@29245> dimkeep              Ds.b 1
0003D23F <AmiBlitz3.ab2@29246> a4a5store            Ds.b 1
0003D240 <AmiBlitz3.ab2@29247> ___freetouse         Ds.b 1
0003D244 <AmiBlitz3.ab2@29248> firstiffstore        Ds.l 1
0003D248 <AmiBlitz3.ab2@29249> destpointer2         Ds.l 1
0003D24C <AmiBlitz3.ab2@29250> stackaddr            Ds.l 1
0003D350 <AmiBlitz3.ab2@29251> allowtab             Ds.b 260
0003D450 <AmiBlitz3.ab2@29252> templine             Ds.b 256
0003D452 <AmiBlitz3.ab2@29253> thenmode             Ds.w 1
0003D454 <AmiBlitz3.ab2@29254> temp                 Ds.w 1
0003D456 <AmiBlitz3.ab2@29255> tempregnum           Ds.w 1
0003D45A <AmiBlitz3.ab2@29257> numlines2            Ds.l 1
0003D45E <AmiBlitz3.ab2@29258> numlines             Ds.l 1
0003D460 <AmiBlitz3.ab2@29259> exmac                Ds.w 1
0003D462 <AmiBlitz3.ab2@29260> returncode           Ds.w 1
0003D466 <AmiBlitz3.ab2@29261> fp0iff               Ds.l 1
0003D46A <AmiBlitz3.ab2@29262> fp0addr              Ds.l 1
0003D46C <AmiBlitz3.ab2@29263> fp0mode              Ds.w 1
0003D46E <AmiBlitz3.ab2@29264> fp0var               Ds.w 1
0003D470 <AmiBlitz3.ab2@29265> fastfunc             Ds.w 1
0003D472 <AmiBlitz3.ab2@29266> retmode              Ds.w 1
0003D474 <AmiBlitz3.ab2@29267> parnum               Ds.w 1
0003D476 <AmiBlitz3.ab2@29268> regmask              Ds.w 1
0003D478 <AmiBlitz3.ab2@29269> regnumfunc           Ds.w 1
0003D47A <AmiBlitz3.ab2@29270> libmode              Ds.w 1
0003D47E <AmiBlitz3.ab2@29271> oldline              Ds.l 1
0003D482 <AmiBlitz3.ab2@29272> sourceline3          Ds.l 1
0003D54A <AmiBlitz3.ab2@29273> debugstore           Ds.b 200
0003D54E <AmiBlitz3.ab2@29274> deststore            Ds.l 1
0003D552 <AmiBlitz3.ab2@29276> loada                Ds.l 1
0003D556 <AmiBlitz3.ab2@29278> currtype             Ds.l 1
0003D55A <AmiBlitz3.ab2@29279> arrayoffset          Ds.l 1
0003D55E <AmiBlitz3.ab2@29280> lastlabel            Ds.l 1
0003D562 <AmiBlitz3.ab2@29281> curtemplabel         Ds.l 1
0003D566 <AmiBlitz3.ab2@29282> sourceline2          Ds.l 1
0003D666 <AmiBlitz3.ab2@29283> chartab              Ds.b 256
0003D6DE <AmiBlitz3.ab2@29284> tempspace            Ds.b 120
000BD6EE <AmiBlitz3.ab2@29285> instrtab             Ds.l 65538*2
000C56EE <AmiBlitz3.ab2@29287> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E56F2 <AmiBlitz3.ab2@29288> replacedat           Ds.w 65538
000ED6F2 <AmiBlitz3.ab2@29289> variablehash         Ds.l 8192
000ED6F6 <AmiBlitz3.ab2@29290> newinitaddr          Ds.l 1
000ED6FA <AmiBlitz3.ab2@29291> realbssend           Ds.l 1
000ED6FC <AmiBlitz3.ab2@29292> saved0               Ds.w 1
000ED77C <AmiBlitz3.ab2@29293> lastpath             Ds.b 128
000ED7FC <AmiBlitz3.ab2@29294> lastpath2            Ds.b 128
000ED8C4 <AmiBlitz3.ab2@29295> fpustackbase         Ds.w 100
000ED8C8 <AmiBlitz3.ab2@29296> 
000ED8CA <AmiBlitz3.ab2@29297> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000ED8CE <AmiBlitz3.ab2@29298> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000ED8D2 <AmiBlitz3.ab2@29299> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000ED8D6 <AmiBlitz3.ab2@29300> rightsidetype        Dc.l 0  ; same as above but right side
000ED8DA <AmiBlitz3.ab2@29303> trap15temp           Ds.l 1
000ED8DE <AmiBlitz3.ab2@29304> trap15temp2          Ds.l 1
000ED8E2 <AmiBlitz3.ab2@29305> templibend           Ds.l 1
000ED8E6 <AmiBlitz3.ab2@29306> tempdata1start       Ds.l 1
000ED8EA <AmiBlitz3.ab2@29307> stacktrack           Ds.l 1
000ED8EE <AmiBlitz3.ab2@29308> pad                  Ds.l 1
000ED9EE <AmiBlitz3.ab2@29309> includetemp          Ds.b 256
000EE3EE <AmiBlitz3.ab2@29310> includetemp2         Ds.b 256*10
000EE3F0 <AmiBlitz3.ab2@29311> funccall             Ds.w 1
000EE3F4 <AmiBlitz3.ab2@29314> ptr_resfile          Ds.l 1
000EE3F6 <AmiBlitz3.ab2@29315> CalculatorButtonBinFlag:    Ds.w 1
000EE3F8 <AmiBlitz3.ab2@29316> CalculatorButtonDecFlag:    Ds.w 1
000EE3FC <AmiBlitz3.ab2@29317> ped_startup_addr:    Ds.l 1
000EE3FD <AmiBlitz3.ab2@29318> start_without_libs:  Ds.b 1
000EE3FE <AmiBlitz3.ab2@29319> skip_bytes:          Ds.b 1
000EE402 <AmiBlitz3.ab2@29320> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EE406 <AmiBlitz3.ab2@29321> beforeparameterfetch Ds.l 1
000EE40A <AmiBlitz3.ab2@29322> typetocast           Ds.l 1
000EE40E <AmiBlitz3.ab2@29323> errorcounter         Ds.l 1
000EE40F <AmiBlitz3.ab2@29324> iserror              Ds.b 1
000EE410 <AmiBlitz3.ab2@29325> Even
000EE414 <AmiBlitz3.ab2@29327> CLIMode:             Dc.l 0
000EE418 <AmiBlitz3.ab2@29328> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
