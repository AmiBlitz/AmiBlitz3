00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@289> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@290> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@294> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@304> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@306> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@316> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@317> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@324> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@325> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@326> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@333> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@339> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@344> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@349> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@350> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@351> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@302> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@303> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@304> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@305> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@307> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@308> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1173> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1174> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1175> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1177> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1178> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1180> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1181> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1199> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1201> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1202> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1204> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1217> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1218> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1219> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1225> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1226> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1298> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1299> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1300> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1301> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1375> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1377> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1378> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1379> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1382> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1383> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1384> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1386> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1387> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1388> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1389> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1390> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1392> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1393> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1498> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1504> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1505> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1508> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1511> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1527> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1530> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1531> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1533> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1534> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1536> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1537> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1538> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1539> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1540> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1541> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1543> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1544> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1546> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1547> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1577> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1579> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1580> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1581> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1582> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1585> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1608> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1612> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1616> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1617> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1620> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1626> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1627> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1628> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1629> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1630> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1634> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1635> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1637> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1638> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1639> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1642> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1643> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1646> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1647> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1648> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1649> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2244> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2245> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2246> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2247> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2248> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2249> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2250> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2251> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2275> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2276> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2277> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2278> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2279> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2280> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2281> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2282> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2314> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2331> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2332> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2333> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2334> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2335> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2336> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2338> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2339> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2581> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2605> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2606> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2607> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2609> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2610> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2611> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2613> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2749> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2751> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2752> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2753> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2754> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2755> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2757> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2758> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2759> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2761> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2762> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2764> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2765> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2766> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2768> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2769> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@49> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@262> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@263> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@297> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@301> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@308> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@310> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@311> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@312> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@320> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@323> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@331> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@333> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@338> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@351> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@357> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@360> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@364> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@370> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@376> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@385> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@391> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@403> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@569> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE1 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EE2 <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EE6 <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EEC <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F3E <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F3E <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F3E <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F5C <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F92 <hashmap.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FC2 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD2 <hashmap.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDC <hashmap.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE2 <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00005004 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00005024 <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00005036 <hashmap.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
0000505E <hashmap.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00005064 <hashmap.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
0000507E <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00005098 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AA <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B8 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050EC <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FA <hashmap.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00005104 <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00005116 <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005150 <hashmap.include.ab3@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005160 <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005166 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005176 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00005182 <hashmap.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005190 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A0 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C0 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CC <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051DA <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E8 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F6 <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005204 <hashmap.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00005236 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00005244 <hashmap.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00005254 <hashmap.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525E <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005278 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00005292 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AC <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052CC <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D6 <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E2 <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F6 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005328 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005340 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
0000534C <hashmap.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
0000535A <hashmap.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005368 <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00005372 <hashmap.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005380 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053AA <hashmap.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B4 <hashmap.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BA <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053E8 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00005402 <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00005422 <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00005436 <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
0000544E <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00005476 <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005490 <hashmap.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
0000549E <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054AC <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054BA <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CE <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005522 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000554C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005590 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B0 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C2 <hashmap.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055E6 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F4 <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000564C <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005692 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005698 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569E <hashmap.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000056C6 <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EA <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005724 <hashmap.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00005734 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573A <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574A <hashmap.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005750 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00005756 <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576E <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057AC <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057C8 <hashmap.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000057FA <hashmap.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
0000580E <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00005822 <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583A <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00005862 <hashmap.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586C <hashmap.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000587A <hashmap.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00005892 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00005898 <hashmap.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A0 <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C0 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058E6 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F0 <hashmap.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FE <hashmap.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005908 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005934 <hashmap.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005948 <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
0000594E <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595C <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005992 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E0 <hashmap.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A08 <hashmap.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A22 <hashmap.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A34 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3E <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A5A <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A84 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA0 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AC2 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF0 <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B0A <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B32 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4E <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B6A <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B78 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B8C <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BAE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD0 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BDE <hashmap.include.ab3@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BFE <hashmap.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C2E <hashmap.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C34 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C68 <hashmap.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CAA <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CBA <hashmap.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC4 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDA <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE2 <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE8 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D16 <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D48 <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D80 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D94 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAC <hashmap.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DD4 <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E06 <hashmap.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E22 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E30 <hashmap.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E44 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E98 <hashmap.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EC2 <hashmap.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F06 <hashmap.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2C <hashmap.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F32 <hashmap.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F50 <hashmap.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F6E <hashmap.include.ab3@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F8C <hashmap.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F92 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FB4 <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FE2 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
0000600A <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000602E <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006084 <hashmap.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000060D6 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
0000612C <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000613C <hashmap.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000618E <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061B6 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061DC <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F8 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006200 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006228 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
00006256 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000627E <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006286 <hashmap.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000062AA <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062DE <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000062FA <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006304 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006318 <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006338 <hashmap.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00006354 <hashmap.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00006362 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006370 <hashmap.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00006376 <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638E <hashmap.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639E <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063CC <hashmap.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006428 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
0000649E <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000064FA <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006500 <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
0000650A <hashmap.include.ab3@351> XINCLUDE "/Shared/preprocessor.include.ab3"
00006510 <hashmap.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
0000653E <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00006544 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
00006564 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
0000656E <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006580 <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006590 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659A <hashmap.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000065B4 <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000065CE <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D4 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065DA <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E4 <hashmap.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00006614 <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661A <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
0000662E <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
0000666A <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006690 <hashmap.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000669E <hashmap.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DA <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066EE <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
0000672A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006740 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00006754 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675E <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006782 <hashmap.include.ab3@394> XINCLUDE "/Shared/preprocessor.include.ab3"
000067BA <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C0 <hashmap.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C8 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DC <hashmap.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E6 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
0000680E <hashmap.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
00006836 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006848 <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00006874 <hashmap.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000068A8 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068D4 <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006920 <hashmap.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00006930 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
00006936 <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693E <hashmap.include.ab3@413> XINCLUDE "/Shared/preprocessor.include.ab3"
0000696C <hashmap.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
0000696E <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00006974 <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697E <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000069A8 <hashmap.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <hashmap.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B8 <hashmap.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E2 <hashmap.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <hashmap.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A08 <hashmap.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A12 <hashmap.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A20 <hashmap.include.ab3@436> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A30 <hashmap.include.ab3@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <hashmap.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A54 <hashmap.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A54 <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A6E <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A88 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AAA <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ADC <preprocessor.include.ab3@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE0 <preprocessor.include.ab3@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFA <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B14 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1E <preprocessor.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B34 <preprocessor.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B38 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B52 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B6C <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B86 <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAA <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB0 <preprocessor.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDA <preprocessor.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BF4 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C04 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0E <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1C <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C3E <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C72 <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C8E <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C98 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB4 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC2 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CD6 <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CF8 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D1A <preprocessor.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D38 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D66 <preprocessor.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6C <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D7C <preprocessor.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D80 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D96 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DB6 <preprocessor.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC0 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DEA <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E00 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E10 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E2C <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E48 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E64 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E80 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E9C <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EB8 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ED4 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF0 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F0C <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F28 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F44 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F60 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F7C <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F98 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB4 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD0 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FEC <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00007008 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00007024 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007040 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
0000705C <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00007078 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007094 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B0 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000070CC <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000070E8 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007104 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007120 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
0000713C <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007158 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007174 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007190 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000071AC <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000071C8 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E4 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007200 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
0000721C <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007238 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007254 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007270 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000728C <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000072A8 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C4 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E0 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000072FC <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007318 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00007334 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007350 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
0000736C <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007388 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A4 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C0 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000073DC <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000073F8 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
00007414 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007430 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
0000744C <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007468 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007484 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A0 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000074BC <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000074D8 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F4 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007510 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
0000752C <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007548 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007564 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007580 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
0000759C <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000075B8 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D4 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F0 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000760C <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007628 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00007644 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007660 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
0000767C <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
00007698 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B4 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D0 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000076EC <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007708 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00007724 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007740 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000775C <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007778 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007794 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B0 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000077CC <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000077E8 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007804 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007820 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000783C <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007858 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007874 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007890 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000078AC <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000078C8 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E4 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007900 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000791C <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007938 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007954 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007970 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
0000798C <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000079A8 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C4 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E0 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
000079FC <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A18 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A34 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A50 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A6C <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A88 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA4 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC0 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ADC <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AF8 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B14 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B30 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B4C <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B68 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B84 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA0 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BBC <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BD8 <preprocessor.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF4 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C10 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C18 <preprocessor.include.ab3@213> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C22 <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2C <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C32 <preprocessor.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C60 <preprocessor.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C7C <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAE <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB8 <preprocessor.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CDA <preprocessor.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE4 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEE <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF8 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D12 <preprocessor.include.ab3@263> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D40 <preprocessor.include.ab3@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D5C <preprocessor.include.ab3@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@269> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA4 <preprocessor.include.ab3@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DC6 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEC <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E32 <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E38 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E46 <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4C <preprocessor.include.ab3@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E54 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E62 <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E76 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9C <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC4 <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECE <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE2 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF6 <preprocessor.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F06 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F20 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F4E <preprocessor.include.ab3@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F62 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8A <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F90 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F9E <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC6 <preprocessor.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD0 <preprocessor.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDE <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FFC <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000800A <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00008018 <preprocessor.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
0000802C <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00008036 <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00008044 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
0000805E <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00008064 <preprocessor.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00008072 <preprocessor.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
00008086 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00008090 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00008098 <preprocessor.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AC <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000080D4 <preprocessor.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F2 <preprocessor.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00008100 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008110 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008138 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000815A <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000816E <preprocessor.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
0000818C <preprocessor.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000819A <preprocessor.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C0 <preprocessor.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E8 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
0000820A <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823A <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008268 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000829A <preprocessor.include.ab3@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A8 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000082AE <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000082BE <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C4 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EA <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
0000830C <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008334 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008354 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008376 <preprocessor.include.ab3@373> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837C <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000838A <preprocessor.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00008398 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839E <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A6 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C4 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000083D8 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E8 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000083FE <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008416 <preprocessor.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00008432 <preprocessor.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843C <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008458 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000846A <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00008498 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084D4 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E4 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EA <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F0 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008508 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008518 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000859E <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085D8 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
0000860E <preprocessor.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
0000861E <preprocessor.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
0000862C <preprocessor.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00008632 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008642 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866C <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008672 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869E <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000086AE <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000086BE <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000086DC <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000086EA <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008720 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008744 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008758 <preprocessor.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00008768 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008786 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00008794 <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000087B8 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DC <preprocessor.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000087EA <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F8 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008818 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008826 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882C <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00008832 <preprocessor.include.ab3@438> XINCLUDE "/Shared/preprocessor.include.ab3"
00008840 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884E <preprocessor.include.ab3@441> XINCLUDE "/Shared/preprocessor.include.ab3"
0000886E <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
0000887C <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
00008882 <preprocessor.include.ab3@444> XINCLUDE "/Shared/preprocessor.include.ab3"
000088AC <preprocessor.include.ab3@447> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BC <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C6 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000088DA <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008900 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008922 <preprocessor.include.ab3@458> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894A <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
00008950 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895E <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
00008964 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008978 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008988 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899E <preprocessor.include.ab3@466> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B6 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D2 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DC <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F8 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A26 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A62 <preprocessor.include.ab3@473> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A72 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A80 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A86 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A96 <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC0 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC6 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF2 <preprocessor.include.ab3@481> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B02 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B12 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B30 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3E <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B74 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B98 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAC <preprocessor.include.ab3@492> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBC <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BDA <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE8 <preprocessor.include.ab3@496> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0C <preprocessor.include.ab3@497> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C30 <preprocessor.include.ab3@498> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C36 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C46 <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4C <preprocessor.include.ab3@504> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C6E <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C76 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAC <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC8 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCE <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D04 <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D20 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D48 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D66 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D84 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DB2 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E14 <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2E <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E48 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E52 <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E90 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E94 <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9E <preprocessor.include.ab3@532> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EEC <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F04 <preprocessor.include.ab3@535> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F62 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8E <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA0 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FB0 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FC8 <preprocessor.include.ab3@540> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FCE <preprocessor.include.ab3@542> XINCLUDE "/Shared/preprocessor.include.ab3"
00009008 <preprocessor.include.ab3@543> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <preprocessor.include.ab3@545> XINCLUDE "/Shared/preprocessor.include.ab3"
00009018 <preprocessor.include.ab3@546> XINCLUDE "/Shared/preprocessor.include.ab3"
00009022 <preprocessor.include.ab3@547> XINCLUDE "/Shared/preprocessor.include.ab3"
00009034 <preprocessor.include.ab3@548> XINCLUDE "/Shared/preprocessor.include.ab3"
00009034 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009034 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009034 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009058 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00009060 <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000908E <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090BC <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000912C <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
0000913A <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
0000918A <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000918A <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
0000918A <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000918A <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091AE <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091D6 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
000091FA <asl.include.ab3@96> XINCLUDE "PE/logging.include.ab3"
00009228 <asl.include.ab3@295> XINCLUDE "PE/logging.include.ab3"
00009446 <asl.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
00009474 <asl.include.ab3@299> XINCLUDE "PE/logging.include.ab3"
000094A0 <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000094DC <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009508 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
00009534 <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
00009560 <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
0000958C <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095B8 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000095E4 <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
00009610 <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
0000963C <asl.include.ab3@310> XINCLUDE "PE/logging.include.ab3"
000096C6 <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
00009750 <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
000097EE <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009838 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
00009878 <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000987E <asl.include.ab3@317> XINCLUDE "PE/logging.include.ab3"
000098C8 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009908 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009932 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009938 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
00009962 <asl.include.ab3@324> XINCLUDE "PE/logging.include.ab3"
0000998C <asl.include.ab3@326> XINCLUDE "PE/logging.include.ab3"
000099B6 <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099C0 <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099DE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A00 <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A2E <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A5C <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009A8A <asl.include.ab3@334> XINCLUDE "PE/logging.include.ab3"
00009AD0 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B16 <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B5C <asl.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
00009B94 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009C92 <asl.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
00009CB0 <asl.include.ab3@344> XINCLUDE "PE/logging.include.ab3"
00009CBA <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CE0 <asl.include.ab3@347> XINCLUDE "PE/logging.include.ab3"
00009CF2 <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D20 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D48 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009D5A <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DB0 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DE6 <asl.include.ab3@354> XINCLUDE "PE/logging.include.ab3"
00009DF6 <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009DFC <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E0E <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E18 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E52 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009E58 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009EB0 <asl.include.ab3@362> XINCLUDE "PE/logging.include.ab3"
00009ECE <asl.include.ab3@364> XINCLUDE "PE/logging.include.ab3"
00009ED4 <asl.include.ab3@367> XINCLUDE "PE/logging.include.ab3"
00009EE4 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009EF4 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F04 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F14 <asl.include.ab3@373> XINCLUDE "PE/logging.include.ab3"
00009F24 <asl.include.ab3@375> XINCLUDE "PE/logging.include.ab3"
00009F2E <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F42 <asl.include.ab3@378> XINCLUDE "PE/logging.include.ab3"
00009F58 <asl.include.ab3@394> XINCLUDE "PE/logging.include.ab3"
00009F80 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F8A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009F9C <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FD6 <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009FE0 <asl.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A00A <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A022 <asl.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A074 <asl.include.ab3@439> XINCLUDE "PE/logging.include.ab3"
0000A0A2 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A134 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A17A <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A20C <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A226 <asl.include.ab3@445> XINCLUDE "PE/logging.include.ab3"
0000A226 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A23C <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A252 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A268 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A27E <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A28A <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A296 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2A2 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2AE <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2D6 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2FE <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A326 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A34A <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A36E <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A388 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A39C <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A39E <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3A2 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3A6 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3AA <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3B0 <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3B4 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3C6 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3CC <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3E6 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A404 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A40A <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A424 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A440 <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A466 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A486 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A490 <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4BC <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4DE <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4F8 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4FE <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A538 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A556 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A55C <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A57A <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A580 <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5A2 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5C2 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5FA <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A616 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A61C <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A622 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A628 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A62E <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A64A <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A696 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A69C <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6D6 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6E2 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6FE <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A704 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A73E <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A748 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A74E <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A76C <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A79A <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A7A0 <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7B6 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7BE <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A81A <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A828 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A82E <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A860 <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A86A <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A870 <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A88A <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A89C <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8FA <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A934 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A96E <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A98C <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9AA <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9C0 <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9DC <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9F6 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA74 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA86 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA9C <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAC6 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AAD0 <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AAE0 <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAE4 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB12 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB2C <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB3E <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB5E <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB74 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABAC <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABD6 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AC00 <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC18 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC2E <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC76 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC96 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC9E <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACDC <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACE8 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACF2 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD04 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD0A <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD18 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD40 <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD54 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD7C <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD90 <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADB8 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADCC <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADF4 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADF6 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE1A <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE52 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEDC <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF04 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF34 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF6C <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFC4 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B01C <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B09C <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0D0 <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B104 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B10A <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B118 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B14C <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B174 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B22C <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2AC <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2E0 <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B300 <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B306 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B30C <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3DC <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3F0 <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4A8 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B528 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B618 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B622 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B656 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B676 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B67C <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B682 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B752 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B766 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B79A <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7C2 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B87A <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8FA <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B92E <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B94E <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B954 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B95A <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA2A <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA3E <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAF6 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB76 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBAA <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBCA <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBD0 <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBD6 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCA6 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCAC <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCE6 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCE8 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCEE <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD86 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD98 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDAE <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE18 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE82 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE9C <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEB8 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BED6 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEF0 <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BEFA <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF16 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF38 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF3E <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF64 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF80 <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF92 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFF0 <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C028 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C02E <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C076 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C090 <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C09E <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0A4 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0AA <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0BC <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1A8 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1AE <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1F4 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C200 <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C266 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2AC <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2F4 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C35C <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C362 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C39C <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3A2 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C404 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C40E <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C422 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C43C <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C442 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C468 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C484 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4E2 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4E6 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C508 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C50E <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C52A <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C54A <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C588 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5D6 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C60C <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C612 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C618 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C648 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C64E <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C654 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C666 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6C4 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6FC <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C702 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C74A <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C764 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C772 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C778 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C77E <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C790 <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C796 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C79C <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7FA <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C842 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C84C <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C852 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C86C <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C872 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8BA <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8F8 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C902 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C908 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C92E <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C934 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C95A <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9BA <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9D4 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9DE <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9F8 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA02 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA1A <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA4A <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA66 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA74 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA7A <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CAB4 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CABE <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAC4 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAE2 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAE8 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAFA <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB08 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB26 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB5C <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB6E <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBB8 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCA2 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCC0 <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCE6 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD02 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD2E <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD38 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD66 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD80 <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD9C <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDA2 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDDC <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDE2 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDE8 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDEE <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE8E <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE94 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF36 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF3C <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF76 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF80 <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF86 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CFA0 <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFBE <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFC4 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFDE <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFFE <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0B2 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0B8 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0BE <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0E8 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0F4 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0FA <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D114 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D124 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D13A <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D152 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D164 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D170 <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D176 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D17E <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1B6 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1C8 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1EC <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1FE <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D20A <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D210 <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D220 <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D23E <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D250 <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D29C <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2A2 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2CC <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2E4 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D312 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D326 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D33C <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D35C <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D372 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D37C <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D396 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3B8 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3D0 <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3F2 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3F8 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D42A <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D43E <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D456 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D46E <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D48E <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4BE <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4EE <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D500 <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D508 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D532 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D53C <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D556 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D570 <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D58E <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5AE <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5F8 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D612 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D624 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D65A <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D66C <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D674 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D69C <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6A2 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6CA <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6DA <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6EE <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D704 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D714 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D718 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D72E <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D758 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D760 <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D760 <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7FE <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D804 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D80A <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D810 <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D84A <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D87C <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D88A <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8BA <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC2A <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC38 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC3E <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DED0 <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEEA <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF24 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF76 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF84 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFDA <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFE0 <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E05A <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0CE <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0E8 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0E8 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0E8 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E8 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E8 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E8 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E110 <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E12A <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E134 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E146 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E16A <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E178 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E184 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E188 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1A6 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1C0 <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1E0 <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1EA <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1F8 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E204 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E212 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E21E <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E22A <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E23C <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E24C <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E256 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E25C <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E276 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E280 <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E28A <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E29A <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2A4 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2B6 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2CC <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2D6 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2DC <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2E0 <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2F6 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2FC <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E306 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E33C <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E346 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E34A <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E378 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E378 <prefixtree.include.ab3@156> XINCLUDE "translation.include.ab3"
0000E392 <prefixtree.include.ab3@221> XINCLUDE "translation.include.ab3"
0000E39C <prefixtree.include.ab3@223> XINCLUDE "translation.include.ab3"
0000E3C4 <prefixtree.include.ab3@224> XINCLUDE "translation.include.ab3"
0000E3E6 <prefixtree.include.ab3@225> XINCLUDE "translation.include.ab3"
0000E3FE <prefixtree.include.ab3@226> XINCLUDE "translation.include.ab3"
0000E414 <prefixtree.include.ab3@227> XINCLUDE "translation.include.ab3"
0000E418 <prefixtree.include.ab3@230> XINCLUDE "translation.include.ab3"
0000E432 <prefixtree.include.ab3@283> XINCLUDE "translation.include.ab3"
0000E452 <prefixtree.include.ab3@284> XINCLUDE "translation.include.ab3"
0000E45C <prefixtree.include.ab3@285> XINCLUDE "translation.include.ab3"
0000E476 <prefixtree.include.ab3@286> XINCLUDE "translation.include.ab3"
0000E484 <prefixtree.include.ab3@287> XINCLUDE "translation.include.ab3"
0000E492 <prefixtree.include.ab3@288> XINCLUDE "translation.include.ab3"
0000E4A0 <prefixtree.include.ab3@289> XINCLUDE "translation.include.ab3"
0000E4AE <prefixtree.include.ab3@290> XINCLUDE "translation.include.ab3"
0000E4BA <prefixtree.include.ab3@291> XINCLUDE "translation.include.ab3"
0000E4C4 <prefixtree.include.ab3@292> XINCLUDE "translation.include.ab3"
0000E4D2 <prefixtree.include.ab3@293> XINCLUDE "translation.include.ab3"
0000E4E0 <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E4EE <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E508 <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E516 <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E536 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E546 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E55E <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E564 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E582 <prefixtree.include.ab3@322> XINCLUDE "translation.include.ab3"
0000E588 <prefixtree.include.ab3@323> XINCLUDE "translation.include.ab3"
0000E592 <prefixtree.include.ab3@324> XINCLUDE "translation.include.ab3"
0000E5B2 <prefixtree.include.ab3@325> XINCLUDE "translation.include.ab3"
0000E5E0 <prefixtree.include.ab3@326> XINCLUDE "translation.include.ab3"
0000E5FE <prefixtree.include.ab3@327> XINCLUDE "translation.include.ab3"
0000E608 <prefixtree.include.ab3@328> XINCLUDE "translation.include.ab3"
0000E61A <prefixtree.include.ab3@329> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@330> XINCLUDE "translation.include.ab3"
0000E65C <prefixtree.include.ab3@331> XINCLUDE "translation.include.ab3"
0000E668 <prefixtree.include.ab3@333> XINCLUDE "translation.include.ab3"
0000E674 <prefixtree.include.ab3@334> XINCLUDE "translation.include.ab3"
0000E67A <prefixtree.include.ab3@335> XINCLUDE "translation.include.ab3"
0000E680 <prefixtree.include.ab3@336> XINCLUDE "translation.include.ab3"
0000E686 <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E6BE <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E6CA <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6D4 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6DA <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E70C <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E728 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E742 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E756 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E7A6 <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E7C8 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E7DC <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E7EA <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E7F6 <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E7FE <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E806 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E80E <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E81C <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E82A <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E84C <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E878 <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E88A <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E890 <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E8B8 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E8DC <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E904 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E938 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E948 <prefixtree.include.ab3@392> XINCLUDE "translation.include.ab3"
0000E952 <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E960 <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E97A <prefixtree.include.ab3@396> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E9A0 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E9A8 <prefixtree.include.ab3@400> XINCLUDE "translation.include.ab3"
0000E9E2 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA08 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA20 <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA54 <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA5C <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA70 <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA8E <prefixtree.include.ab3@412> XINCLUDE "translation.include.ab3"
0000EA94 <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EAAE <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EAB4 <prefixtree.include.ab3@417> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@419> XINCLUDE "translation.include.ab3"
0000EAC0 <prefixtree.include.ab3@421> XINCLUDE "translation.include.ab3"
0000EACE <prefixtree.include.ab3@422> XINCLUDE "translation.include.ab3"
0000EADC <prefixtree.include.ab3@423> XINCLUDE "translation.include.ab3"
0000EB16 <prefixtree.include.ab3@425> XINCLUDE "translation.include.ab3"
0000EB3C <prefixtree.include.ab3@426> XINCLUDE "translation.include.ab3"
0000EB54 <prefixtree.include.ab3@427> XINCLUDE "translation.include.ab3"
0000EB60 <prefixtree.include.ab3@430> XINCLUDE "translation.include.ab3"
0000EB6C <prefixtree.include.ab3@431> XINCLUDE "translation.include.ab3"
0000EB78 <prefixtree.include.ab3@432> XINCLUDE "translation.include.ab3"
0000EB84 <prefixtree.include.ab3@433> XINCLUDE "translation.include.ab3"
0000EB90 <prefixtree.include.ab3@434> XINCLUDE "translation.include.ab3"
0000EB9A <prefixtree.include.ab3@435> XINCLUDE "translation.include.ab3"
0000EBA2 <prefixtree.include.ab3@437> XINCLUDE "translation.include.ab3"
0000EBBC <prefixtree.include.ab3@438> XINCLUDE "translation.include.ab3"
0000EBFA <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EC00 <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EC66 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000ECA6 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000ECFC <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000ED6E <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000ED7A <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000ED88 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EDCE <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EE18 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EE50 <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EEAA <prefixtree.include.ab3@499> XINCLUDE "translation.include.ab3"
0000EEB0 <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EEBE <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EEC6 <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000EF00 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EF26 <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000EF3E <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000EF74 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000EF8A <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000EF98 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000EFB0 <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000EFE8 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F00E <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F056 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F05C <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F076 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F082 <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F088 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F0B4 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F0C8 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F0D6 <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F0DE <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F118 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F13E <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F156 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F190 <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F1BA <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F1D2 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F202 <prefixtree.include.ab3@537> XINCLUDE "translation.include.ab3"
0000F22E <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F24A <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F258 <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F266 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F2A4 <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F2E0 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F34C <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F37A <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F3A8 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F3F0 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F40A <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F452 <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F470 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F48E <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F4A8 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F4B4 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F4BA <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F4E6 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F4FE <prefixtree.include.ab3@562> XINCLUDE "translation.include.ab3"
0000F504 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F518 <prefixtree.include.ab3@566> XINCLUDE "translation.include.ab3"
0000F526 <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F534 <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F542 <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F54A <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F576 <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F59E <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F5C6 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F632 <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F642 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F66E <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000F6C4 <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F6D2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F6E0 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000F6E6 <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000F73A <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000F85A <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000F8AA <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000F900 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000F96C <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000F974 <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000F9AE <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000F9D4 <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000F9EC <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FA26 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FA50 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FA68 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FA8C <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FAE0 <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FAEE <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FB50 <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FB7C <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FB98 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FBA6 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FBB4 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FBC2 <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FBD0 <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FC14 <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FC80 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FCAE <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FCC2 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0000FCF4 <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0000FD3E <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
0000FD4E <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
0000FD82 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0000FDA4 <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0000FDB4 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
0000FDBC <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0000FE00 <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0000FE6C <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
0000FE9A <prefixtree.include.ab3@632> XINCLUDE "translation.include.ab3"
0000FEBE <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0000FF02 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
0000FF6E <prefixtree.include.ab3@636> XINCLUDE "translation.include.ab3"
0000FF9C <prefixtree.include.ab3@637> XINCLUDE "translation.include.ab3"
0000FFCA <prefixtree.include.ab3@638> XINCLUDE "translation.include.ab3"
0000FFD2 <prefixtree.include.ab3@639> XINCLUDE "translation.include.ab3"
00010000 <prefixtree.include.ab3@640> XINCLUDE "translation.include.ab3"
00010072 <prefixtree.include.ab3@641> XINCLUDE "translation.include.ab3"
00010078 <prefixtree.include.ab3@642> XINCLUDE "translation.include.ab3"
000100A6 <prefixtree.include.ab3@643> XINCLUDE "translation.include.ab3"
00010118 <prefixtree.include.ab3@644> XINCLUDE "translation.include.ab3"
00010136 <prefixtree.include.ab3@647> XINCLUDE "translation.include.ab3"
0001015A <prefixtree.include.ab3@648> XINCLUDE "translation.include.ab3"
00010172 <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
00010178 <prefixtree.include.ab3@650> XINCLUDE "translation.include.ab3"
0001017E <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
00010180 <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
0001018A <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
000101B6 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101D8 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
000101E6 <prefixtree.include.ab3@680> XINCLUDE "translation.include.ab3"
000101F4 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
0001022E <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010254 <prefixtree.include.ab3@684> XINCLUDE "translation.include.ab3"
0001026C <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
000102A6 <prefixtree.include.ab3@686> XINCLUDE "translation.include.ab3"
000102D0 <prefixtree.include.ab3@687> XINCLUDE "translation.include.ab3"
000102E8 <prefixtree.include.ab3@689> XINCLUDE "translation.include.ab3"
00010300 <prefixtree.include.ab3@690> XINCLUDE "translation.include.ab3"
00010338 <prefixtree.include.ab3@691> XINCLUDE "translation.include.ab3"
00010340 <prefixtree.include.ab3@693> XINCLUDE "translation.include.ab3"
0001037A <prefixtree.include.ab3@695> XINCLUDE "translation.include.ab3"
0001038C <prefixtree.include.ab3@697> XINCLUDE "translation.include.ab3"
000103B2 <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
000103C8 <prefixtree.include.ab3@699> XINCLUDE "translation.include.ab3"
000103EE <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
00010402 <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
0001041A <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
0001042C <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
00010436 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
0001044A <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
00010464 <prefixtree.include.ab3@726> XINCLUDE "translation.include.ab3"
00010480 <prefixtree.include.ab3@728> XINCLUDE "translation.include.ab3"
00010492 <prefixtree.include.ab3@729> XINCLUDE "translation.include.ab3"
000104AE <prefixtree.include.ab3@730> XINCLUDE "translation.include.ab3"
000104EA <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
00010506 <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
00010526 <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
00010530 <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
00010536 <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010540 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010548 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
0001054E <prefixtree.include.ab3@740> XINCLUDE "translation.include.ab3"
0001057C <prefixtree.include.ab3@759> XINCLUDE "translation.include.ab3"
000105A4 <prefixtree.include.ab3@760> XINCLUDE "translation.include.ab3"
000105E4 <prefixtree.include.ab3@761> XINCLUDE "translation.include.ab3"
000105FC <prefixtree.include.ab3@762> XINCLUDE "translation.include.ab3"
00010642 <prefixtree.include.ab3@763> XINCLUDE "translation.include.ab3"
0001066C <prefixtree.include.ab3@766> XINCLUDE "translation.include.ab3"
0001069A <prefixtree.include.ab3@767> XINCLUDE "translation.include.ab3"
000106B4 <prefixtree.include.ab3@966> XINCLUDE "translation.include.ab3"
000106BA <prefixtree.include.ab3@967> XINCLUDE "translation.include.ab3"
000106D2 <prefixtree.include.ab3@968> XINCLUDE "translation.include.ab3"
000106DC <prefixtree.include.ab3@969> XINCLUDE "translation.include.ab3"
000106EE <prefixtree.include.ab3@970> XINCLUDE "translation.include.ab3"
00010726 <prefixtree.include.ab3@971> XINCLUDE "translation.include.ab3"
00010734 <prefixtree.include.ab3@972> XINCLUDE "translation.include.ab3"
00010740 <prefixtree.include.ab3@973> XINCLUDE "translation.include.ab3"
0001075C <prefixtree.include.ab3@974> XINCLUDE "translation.include.ab3"
0001077E <prefixtree.include.ab3@975> XINCLUDE "translation.include.ab3"
000107A0 <prefixtree.include.ab3@976> XINCLUDE "translation.include.ab3"
000107C2 <prefixtree.include.ab3@977> XINCLUDE "translation.include.ab3"
000107E4 <prefixtree.include.ab3@978> XINCLUDE "translation.include.ab3"
00010800 <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
0001081E <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
00010832 <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
00010838 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
0001083A <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
00010840 <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
0001084A <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010850 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
0001086E <prefixtree.include.ab3@1007> XINCLUDE "translation.include.ab3"
00010874 <prefixtree.include.ab3@1008> XINCLUDE "translation.include.ab3"
00010898 <prefixtree.include.ab3@1009> XINCLUDE "translation.include.ab3"
000108B6 <prefixtree.include.ab3@1010> XINCLUDE "translation.include.ab3"
000108E4 <prefixtree.include.ab3@1011> XINCLUDE "translation.include.ab3"
00010912 <prefixtree.include.ab3@1012> XINCLUDE "translation.include.ab3"
00010940 <prefixtree.include.ab3@1013> XINCLUDE "translation.include.ab3"
0001096E <prefixtree.include.ab3@1014> XINCLUDE "translation.include.ab3"
000109A2 <prefixtree.include.ab3@1015> XINCLUDE "translation.include.ab3"
000109B2 <prefixtree.include.ab3@1016> XINCLUDE "translation.include.ab3"
000109BC <prefixtree.include.ab3@1018> XINCLUDE "translation.include.ab3"
000109C2 <prefixtree.include.ab3@1019> XINCLUDE "translation.include.ab3"
000109C2 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A0C <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A2C <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A36 <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A4A <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A90 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010AD6 <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B1C <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B26 <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B42 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B6C <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BEA <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C68 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CE6 <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D64 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DE2 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E60 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EDE <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F5C <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FDA <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00011058 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110DC <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
0001110C <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011168 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011194 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
0001125E <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
0001126C <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112AA <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
0001132E <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011358 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
00011376 <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011390 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001139A <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113A6 <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113B6 <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113C6 <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113D6 <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113E6 <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113EA <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011428 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011480 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114DC <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
00011566 <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115E4 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000115FE <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
0001162C <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011668 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
00011736 <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
00011804 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011850 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118CE <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
0001194C <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119AA <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A40 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A78 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011AD6 <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B5E <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B66 <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD0 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C3C <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C7A <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D02 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D2E <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D8A <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E52 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EB6 <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EBC <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF0 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FBE <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
0001208C <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120B6 <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120D4 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00012102 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
0001213E <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121AE <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121B6 <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
00012208 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012230 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012248 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000122FC <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
0001230A <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012360 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123BE <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123C4 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012448 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124CC <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012550 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125CE <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
0001264C <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126CA <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012748 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127C6 <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012844 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128C2 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128EC <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
0001290A <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012938 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
0001297C <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012982 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
0001299C <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129B8 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129EC <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A10 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A38 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AA4 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B02 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B60 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BAC <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C06 <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C0C <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C12 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C1C <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C26 <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C40 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C6E <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C74 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CB8 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CD2 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CE2 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CEC <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CF8 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D02 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D26 <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D6E <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DB6 <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012DFE <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E14 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E28 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E32 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E3C <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E56 <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E80 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EC4 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EDE <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F3C <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F56 <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F6E <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F78 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F94 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FA2 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FAE <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FFA <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
0001304C <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
0001309E <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130B2 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130C2 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130C8 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130CA <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D0 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130DA <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130E4 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
000130FE <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013128 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
0001313E <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013148 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C0 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000131FC <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
0001320C <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
0001322C <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
0001324C <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
0001326C <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132A2 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132CA <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
00013302 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
00013366 <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
00013386 <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
00013402 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001343A <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B0 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D0 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
0001354C <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013584 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135FA <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001361A <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
00013696 <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136C2 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136CA <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013710 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013730 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001373A <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013752 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013762 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001379A <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137CC <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137DE <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013860 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001386A <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
0001389C <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138CE <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138FA <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
00013926 <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013948 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013952 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
0001396C <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
0001396C <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013982 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
0001399E <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A0 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139CE <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139CE <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139CE <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139E8 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139F2 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A14 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A2C <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A46 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A78 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A82 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A88 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A9A <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B0E <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B14 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B4E <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B58 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B5E <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B74 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B7E <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B96 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B98 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BC6 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE0 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BF6 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C2A <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C2E <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C48 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C5E <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C92 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C96 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB0 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CC6 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CFA <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013CFE <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D18 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D2E <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D62 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D66 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D80 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D96 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DCA <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DE4 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DFA <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E08 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E16 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E20 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E32 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E44 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E4A <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E84 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E88 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013E9E <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EB4 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC0 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ECC <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013ED4 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EDC <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE0 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F0A <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F36 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F48 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F60 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F76 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F7C <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FB2 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FEA <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014022 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
0001405A <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014092 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140CA <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00014102 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001413A <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014172 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141AA <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141E2 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001421A <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014252 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014286 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00014290 <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
0001429A <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
000142A4 <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142CE <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142D8 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142DC <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014310 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
0001432E <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
00014338 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
00014344 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
0001434A <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
00014356 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001435C <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014368 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
0001436E <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
00014374 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143AE <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
000143B4 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143CA <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143D4 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143DA <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143E0 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143E1 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143E2 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143E3 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143E4 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143E6 <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000143E8 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@123> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143F2 <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143F4 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
000143FE <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
0001440E <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
00014412 <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
00014414 <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
00014418 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
0001441A <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
0001441C <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
0001441E <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
00014422 <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001442A <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014430 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014436 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
0001443A <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014440 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014446 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0001444A <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
0001444E <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014454 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014458 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0001445E <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
00014464 <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014468 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
0001446E <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014472 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
00014478 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
0001447C <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014484 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
00014488 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
000144AE <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000144B2 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000144B8 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
000144BA <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
000144BE <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
000144C2 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
000144C6 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
000144CA <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
000144CE <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
000144DA <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
000144E0 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
000144E2 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
000144E6 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
000144EA <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
000144F2 <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
000144F6 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
000144FA <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
000144FE <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014502 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014506 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
0001450A <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014516 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
0001451A <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014522 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
0001452A <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014530 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014536 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
0001453A <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014546 <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
0001454A <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00014554 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014558 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
0001455E <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014564 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
0001456A <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
0001456E <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014570 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
0001457C <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00014580 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
00014586 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
0001458A <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00014594 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
0001459A <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
0001459E <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000145A4 <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000145AA <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000145AE <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000145B4 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000145BE <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
000145C2 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000145C8 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
000145CC <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
000145D2 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000145D6 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000145DA <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
000145DC <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000145E0 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
000145E6 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000145EA <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00014608 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
0001460A <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
0001460C <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00014614 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00014624 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00014630 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00014634 <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
0001465A <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
0001465E <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
00014662 <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00014664 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
0001467C <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
00014682 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
000146C0 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
000146CE <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
000146D0 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00014704 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00014714 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00014716 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001474E <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00014786 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000147BE <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000147C8 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000147CE <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000147E4 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00014822 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00014826 <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
0001482E <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
0001486C <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
0001486E <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
00014872 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
000148B0 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000148B4 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000148F2 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
000148F6 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014920 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
0001492A <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
0001493E <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00014964 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
0001496A <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014978 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
0001497E <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
000149B6 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
000149BA <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
000149E4 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
000149EA <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014A0A <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014A14 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014A18 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014A1A <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00014A38 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014A3A <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014A40 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014A46 <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00014A70 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00014A72 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014AA0 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014AA4 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014AD2 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00014AD6 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00014AFC <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014B0C <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014B12 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014B18 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014B52 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014B5C <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014B76 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00014B94 <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014B9C <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00014BA2 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00014BA8 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00014BCA <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00014BE2 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00014C08 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00014C32 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00014C40 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00014C46 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00014C5A <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00014C72 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00014C80 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00014C94 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00014CCA <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00014CD8 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00014D08 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00014D16 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00014D1C <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00014D2A <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00014D30 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00014D36 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00014D44 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00014D46 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00014D4C <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00014D62 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
00014D6C <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00014D72 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00014D9C <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
00014DDA <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00014DDE <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00014E1C <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00014E20 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00014E5E <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00014E62 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00014E6A <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00014EB6 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
00014EC8 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
00014ED6 <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
00014F0A <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
00014F2E <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
00014F38 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
00014F52 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00014F66 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00014FBE <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
0001505E <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00015066 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
0001509E <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000150A4 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
000150B4 <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
000150DC <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
00015104 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
0001510C <CLIModeSupport.ab3@591> XINCLUDE "CLIModeSupport.ab3"
00015112 <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
0001511A <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
00015122 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
0001514A <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
00015152 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
0001515A <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
00015160 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
00015166 <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
0001516C <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
00015172 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
00015178 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
0001517E <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
00015184 <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
0001518A <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
00015192 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0001519A <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000151C2 <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000151C8 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
000151CE <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
000151D6 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
000151F6 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
00015206 <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
00015216 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
00015226 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
00015236 <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00015246 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
00015256 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
00015266 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00015276 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
00015286 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00015296 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
000152A6 <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
000152B6 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
000152C6 <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
000152D6 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
000152E6 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000152F6 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
0001530A <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
0001531C <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
0001532E <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015340 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00015352 <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015358 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
0001536A <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
0001537C <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
0001538E <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000153A0 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000153B2 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000153C4 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000153E2 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
000153E8 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
000153EE <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015418 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
0001542A <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
0001545E <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00015476 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000154C2 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000154D4 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
0001552A <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
0001559C <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
000155A2 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
000155D6 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
000155FE <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00015626 <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00015660 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00015678 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
000156FC <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
00015716 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
00015764 <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
00015774 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
0001577C <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00015790 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
000157D6 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000157DC <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00015826 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00015890 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
000158F6 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
0001592A <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00015956 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
000159A4 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000159C8 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
000159CE <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000159DC <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00015A3A <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00015A98 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00015AC2 <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00015ACC <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00015AD4 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00015B12 <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00015B5E <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00015B70 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00015BC6 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00015C3E <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00015C44 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00015C78 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00015CA0 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00015CD6 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00015CE4 <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00015CF2 <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00015D66 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00015D6C <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00015DB6 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00015E00 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00015E30 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00015E60 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00015E8A <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00015EDC <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00015F32 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00015F82 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00015FE8 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00016054 <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016080 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000160B0 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
0001612C <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
0001615C <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
0001618C <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
000161BC <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
000161EC <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
0001621C <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
0001624C <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
0001627C <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
000162AC <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
000162DC <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
0001630C <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016388 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
000163BA <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000163EC <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
0001641C <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00016422 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00016496 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00016502 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00016514 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00016542 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
0001656A <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
0001657E <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000165A8 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000165EC <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
000165FC <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
0001660C <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00016612 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
00016622 <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016630 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001663A <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00016672 <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
000166AA <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000166E2 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000166F2 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
0001675A <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00016792 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000167A2 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000167B2 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
0001681A <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00016882 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000168EA <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
00016952 <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000169BA <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00016A22 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00016A8A <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00016AF2 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00016B02 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00016B3A <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00016B74 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00016BAE <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
00016BE6 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00016C02 <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
00016C3A <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00016C60 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00016C68 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00016C70 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00016C78 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00016C80 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00016C94 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00016CC2 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00016CDC <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00016CEA <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00016D56 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00016D7C <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00016D98 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00016DA2 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00016DAC <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00016DB8 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00016DC6 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00016DD2 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00016E0E <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00016E28 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00016E36 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00016E56 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00016E64 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00016E72 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00016E78 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00016E88 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00016E8C <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00016EC0 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00016EF4 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00016EF8 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00016F2C <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00016F30 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00016F64 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00016F6A <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00016FA0 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00016FD6 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
0001700C <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00017044 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
0001707C <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
0001711C <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
0001715C <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00017192 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000171C8 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00017200 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
0001721E <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00017222 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00017228 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
0001722E <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00017234 <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00017238 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00017262 <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00017276 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000172B4 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
000172E8 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
0001731E <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00017376 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
000173A4 <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
000173A8 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
000173DE <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
0001740C <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
0001743A <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
0001743E <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
00017474 <CLIModeSupport.ab3@866> XINCLUDE "CLIModeSupport.ab3"
000174A2 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
000174A6 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
0001750A <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
00017510 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
0001754A <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
00017554 <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
0001755E <CLIModeSupport.ab3@879> XINCLUDE "CLIModeSupport.ab3"
00017578 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
000175A2 <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
000175A8 <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
000175C8 <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
000175D2 <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
000175D6 <CLIModeSupport.ab3@887> XINCLUDE "CLIModeSupport.ab3"
000175D8 <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
000175F6 <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
000175F8 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
000175FE <CLIModeSupport.ab3@891> XINCLUDE "CLIModeSupport.ab3"
00017604 <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
0001762E <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
0001765E <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
00017662 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017690 <CLIModeSupport.ab3@898> XINCLUDE "CLIModeSupport.ab3"
00017694 <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000176BA <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
000176CA <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
000176D0 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
000176D6 <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00017710 <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
0001771A <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017734 <CLIModeSupport.ab3@907> XINCLUDE "CLIModeSupport.ab3"
00017752 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
0001777C <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
000177AA <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
0001783A <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
00017844 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017858 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00017894 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
000178D0 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
0001790C <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
00017948 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
00017984 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
0001798A <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000179C4 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
000179D6 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
000179E6 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
000179F2 <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00017A0C <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
00017A0E <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017A2C <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00017A32 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017A5C <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017A5E <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00017A68 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00017A6E <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00017A80 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00017ABA <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
00017AD4 <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00017AE8 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00017B52 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00017B58 <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00017BC2 <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00017BD6 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00017C40 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00017C76 <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00017C7C <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00017CE6 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00017CFA <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00017D30 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00017D36 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00017D6C <CLIModeSupport.ab3@983> XINCLUDE "CLIModeSupport.ab3"
00017D80 <CLIModeSupport.ab3@987> XINCLUDE "CLIModeSupport.ab3"
00017DEA <CLIModeSupport.ab3@988> XINCLUDE "CLIModeSupport.ab3"
00017DF0 <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00017E5A <CLIModeSupport.ab3@990> XINCLUDE "CLIModeSupport.ab3"
00017E6E <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
00017EA4 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00017EAA <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00017EE0 <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
00017EFA <CLIModeSupport.ab3@1001> XINCLUDE "CLIModeSupport.ab3"
00017F0E <CLIModeSupport.ab3@1003> XINCLUDE "CLIModeSupport.ab3"
00017F78 <CLIModeSupport.ab3@1004> XINCLUDE "CLIModeSupport.ab3"
00017F7E <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
00017FE8 <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
00017FFC <CLIModeSupport.ab3@1009> XINCLUDE "CLIModeSupport.ab3"
00018066 <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
0001806C <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
000180D6 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
000180EA <CLIModeSupport.ab3@1015> XINCLUDE "CLIModeSupport.ab3"
00018154 <CLIModeSupport.ab3@1016> XINCLUDE "CLIModeSupport.ab3"
0001815A <CLIModeSupport.ab3@1017> XINCLUDE "CLIModeSupport.ab3"
000181C4 <CLIModeSupport.ab3@1018> XINCLUDE "CLIModeSupport.ab3"
000181D8 <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
00018242 <CLIModeSupport.ab3@1022> XINCLUDE "CLIModeSupport.ab3"
00018248 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
000182B2 <CLIModeSupport.ab3@1024> XINCLUDE "CLIModeSupport.ab3"
000182C4 <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
000182D4 <CLIModeSupport.ab3@1030> XINCLUDE "CLIModeSupport.ab3"
000182DE <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
00018348 <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
0001834E <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
00018354 <CLIModeSupport.ab3@1036> XINCLUDE "CLIModeSupport.ab3"
000183BE <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
000183C6 <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
000183D0 <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
0001843A <CLIModeSupport.ab3@1042> XINCLUDE "CLIModeSupport.ab3"
00018470 <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000184AE <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000184B2 <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
000184E8 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
000184EE <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
000184F4 <CLIModeSupport.ab3@1048> XINCLUDE "CLIModeSupport.ab3"
0001855E <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
00018594 <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
0001859A <CLIModeSupport.ab3@1053> XINCLUDE "CLIModeSupport.ab3"
000185C8 <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
000185CC <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
000185F4 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
000185FA <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018600 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
00018606 <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
00018610 <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001861A <CLIModeSupport.ab3@1066> XINCLUDE "CLIModeSupport.ab3"
00018648 <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
00018674 <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
0001867C <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
000186E2 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
00018716 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001871C <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
0001879C <CLIModeSupport.ab3@1077> XINCLUDE "CLIModeSupport.ab3"
000187AE <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
00018814 <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
0001887A <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
00018880 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
00018888 <CLIModeSupport.ab3@1083> XINCLUDE "CLIModeSupport.ab3"
0001888A <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
000188A8 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
000188E6 <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
00018924 <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
0001892A <CLIModeSupport.ab3@1092> XINCLUDE "CLIModeSupport.ab3"
00018930 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
00018936 <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
00018940 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
00018946 <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
0001894C <CLIModeSupport.ab3@1099> XINCLUDE "CLIModeSupport.ab3"
00018952 <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
00018958 <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
0001895C <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
00018966 <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
0001896A <CLIModeSupport.ab3@1104> XINCLUDE "CLIModeSupport.ab3"
00018994 <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
00018996 <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
0001899C <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
000189A0 <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
000189A6 <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
000189AA <CLIModeSupport.ab3@1114> XINCLUDE "CLIModeSupport.ab3"
000189BA <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018A14 <CLIModeSupport.ab3@1117> XINCLUDE "CLIModeSupport.ab3"
00018A26 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018A90 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018A96 <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
00018AE0 <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
00018AEE <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018B1A <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00018BC0 <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
00018BDE <CLIModeSupport.ab3@1128> XINCLUDE "CLIModeSupport.ab3"
00018BE4 <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
00018C0E <CLIModeSupport.ab3@1130> XINCLUDE "CLIModeSupport.ab3"
00018C14 <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
00018C4C <CLIModeSupport.ab3@1133> XINCLUDE "CLIModeSupport.ab3"
00018C58 <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
00018C72 <CLIModeSupport.ab3@1137> XINCLUDE "CLIModeSupport.ab3"
00018C7E <CLIModeSupport.ab3@1139> XINCLUDE "CLIModeSupport.ab3"
00018C98 <CLIModeSupport.ab3@1141> XINCLUDE "CLIModeSupport.ab3"
00018CC2 <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
00018CE6 <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
00018D24 <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
00018D28 <CLIModeSupport.ab3@1148> XINCLUDE "CLIModeSupport.ab3"
00018D66 <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
00018D6A <CLIModeSupport.ab3@1151> XINCLUDE "CLIModeSupport.ab3"
00018DA8 <CLIModeSupport.ab3@1154> XINCLUDE "CLIModeSupport.ab3"
00018DE6 <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
00018DE8 <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
00018E1C <CLIModeSupport.ab3@1157> XINCLUDE "CLIModeSupport.ab3"
00018E22 <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
00018E66 <CLIModeSupport.ab3@1160> XINCLUDE "CLIModeSupport.ab3"
00018E78 <CLIModeSupport.ab3@1161> XINCLUDE "CLIModeSupport.ab3"
00018E80 <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
00018E86 <CLIModeSupport.ab3@1164> XINCLUDE "CLIModeSupport.ab3"
00018E90 <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
00018E9E <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00018EA4 <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
00018ECC <CLIModeSupport.ab3@1169> XINCLUDE "CLIModeSupport.ab3"
00018EE6 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
00018EF0 <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
00018EF6 <CLIModeSupport.ab3@1172> XINCLUDE "CLIModeSupport.ab3"
00018F14 <CLIModeSupport.ab3@1174> XINCLUDE "CLIModeSupport.ab3"
00018F1E <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
00018F24 <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
00018F2A <CLIModeSupport.ab3@1177> XINCLUDE "CLIModeSupport.ab3"
00018F34 <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00018F42 <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
00018F48 <CLIModeSupport.ab3@1180> XINCLUDE "CLIModeSupport.ab3"
00018F58 <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
00018F84 <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
00018F9A <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
00018FA4 <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
00018FAA <CLIModeSupport.ab3@1186> XINCLUDE "CLIModeSupport.ab3"
00019002 <CLIModeSupport.ab3@1188> XINCLUDE "CLIModeSupport.ab3"
00019070 <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
00019088 <CLIModeSupport.ab3@1191> XINCLUDE "CLIModeSupport.ab3"
0001908E <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000190C6 <CLIModeSupport.ab3@1193> XINCLUDE "CLIModeSupport.ab3"
000190F4 <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
0001911E <CLIModeSupport.ab3@1196> XINCLUDE "CLIModeSupport.ab3"
00019128 <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
00019150 <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
0001917A <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
0001921C <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
0001922A <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
0001927A <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
0001928A <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019352 <CLIModeSupport.ab3@1205> XINCLUDE "CLIModeSupport.ab3"
00019386 <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
000193BA <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
000193EE <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019422 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
00019456 <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
0001948A <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
000194BE <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
000194F2 <CLIModeSupport.ab3@1214> XINCLUDE "CLIModeSupport.ab3"
000194F4 <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019532 <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
00019536 <CLIModeSupport.ab3@1218> XINCLUDE "CLIModeSupport.ab3"
00019574 <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
000195B2 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
000195B4 <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
000195BA <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
000195BE <CLIModeSupport.ab3@1225> XINCLUDE "CLIModeSupport.ab3"
000195C0 <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
000195FE <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
0001963C <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
0001963E <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
00019640 <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
00019642 <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
00019648 <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
0001964C <CLIModeSupport.ab3@1234> XINCLUDE "CLIModeSupport.ab3"
0001965C <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
00019674 <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
0001968C <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
000196A4 <CLIModeSupport.ab3@1239> XINCLUDE "CLIModeSupport.ab3"
000196CE <CLIModeSupport.ab3@1241> XINCLUDE "CLIModeSupport.ab3"
000196F8 <CLIModeSupport.ab3@1242> XINCLUDE "CLIModeSupport.ab3"
00019726 <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
0001972A <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
00019752 <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
00019754 <CLIModeSupport.ab3@1247> XINCLUDE "CLIModeSupport.ab3"
00019792 <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
00019796 <CLIModeSupport.ab3@1249> XINCLUDE "CLIModeSupport.ab3"
000197D4 <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
000197D8 <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
00019816 <CLIModeSupport.ab3@1252> XINCLUDE "CLIModeSupport.ab3"
0001981A <CLIModeSupport.ab3@1253> XINCLUDE "CLIModeSupport.ab3"
00019858 <CLIModeSupport.ab3@1255> XINCLUDE "CLIModeSupport.ab3"
0001985C <CLIModeSupport.ab3@1256> XINCLUDE "CLIModeSupport.ab3"
00019882 <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
000198A8 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
000198CE <CLIModeSupport.ab3@1260> XINCLUDE "CLIModeSupport.ab3"
000198F4 <CLIModeSupport.ab3@1261> XINCLUDE "CLIModeSupport.ab3"
0001991A <CLIModeSupport.ab3@1262> XINCLUDE "CLIModeSupport.ab3"
00019970 <CLIModeSupport.ab3@1263> XINCLUDE "CLIModeSupport.ab3"
000199C6 <CLIModeSupport.ab3@1264> XINCLUDE "CLIModeSupport.ab3"
00019A14 <CLIModeSupport.ab3@1265> XINCLUDE "CLIModeSupport.ab3"
00019A6A <CLIModeSupport.ab3@1266> XINCLUDE "CLIModeSupport.ab3"
00019A90 <CLIModeSupport.ab3@1267> XINCLUDE "CLIModeSupport.ab3"
00019AB6 <CLIModeSupport.ab3@1268> XINCLUDE "CLIModeSupport.ab3"
00019ADC <CLIModeSupport.ab3@1269> XINCLUDE "CLIModeSupport.ab3"
00019B32 <CLIModeSupport.ab3@1270> XINCLUDE "CLIModeSupport.ab3"
00019B80 <CLIModeSupport.ab3@1271> XINCLUDE "CLIModeSupport.ab3"
00019BCE <CLIModeSupport.ab3@1272> XINCLUDE "CLIModeSupport.ab3"
00019C88 <CLIModeSupport.ab3@1273> XINCLUDE "CLIModeSupport.ab3"
00019CDE <CLIModeSupport.ab3@1274> XINCLUDE "CLIModeSupport.ab3"
00019D04 <CLIModeSupport.ab3@1275> XINCLUDE "CLIModeSupport.ab3"
00019D2A <CLIModeSupport.ab3@1276> XINCLUDE "CLIModeSupport.ab3"
00019D50 <CLIModeSupport.ab3@1277> XINCLUDE "CLIModeSupport.ab3"
00019DA6 <CLIModeSupport.ab3@1278> XINCLUDE "CLIModeSupport.ab3"
00019DFC <CLIModeSupport.ab3@1279> XINCLUDE "CLIModeSupport.ab3"
00019E4A <CLIModeSupport.ab3@1280> XINCLUDE "CLIModeSupport.ab3"
00019E98 <CLIModeSupport.ab3@1281> XINCLUDE "CLIModeSupport.ab3"
00019EE6 <CLIModeSupport.ab3@1282> XINCLUDE "CLIModeSupport.ab3"
00019F34 <CLIModeSupport.ab3@1283> XINCLUDE "CLIModeSupport.ab3"
00019F82 <CLIModeSupport.ab3@1284> XINCLUDE "CLIModeSupport.ab3"
00019FD0 <CLIModeSupport.ab3@1285> XINCLUDE "CLIModeSupport.ab3"
0001A01E <CLIModeSupport.ab3@1286> XINCLUDE "CLIModeSupport.ab3"
0001A044 <CLIModeSupport.ab3@1287> XINCLUDE "CLIModeSupport.ab3"
0001A06A <CLIModeSupport.ab3@1288> XINCLUDE "CLIModeSupport.ab3"
0001A090 <CLIModeSupport.ab3@1289> XINCLUDE "CLIModeSupport.ab3"
0001A0DE <CLIModeSupport.ab3@1290> XINCLUDE "CLIModeSupport.ab3"
0001A12C <CLIModeSupport.ab3@1291> XINCLUDE "CLIModeSupport.ab3"
0001A182 <CLIModeSupport.ab3@1292> XINCLUDE "CLIModeSupport.ab3"
0001A1D0 <CLIModeSupport.ab3@1293> XINCLUDE "CLIModeSupport.ab3"
0001A21E <CLIModeSupport.ab3@1294> XINCLUDE "CLIModeSupport.ab3"
0001A26C <CLIModeSupport.ab3@1295> XINCLUDE "CLIModeSupport.ab3"
0001A292 <CLIModeSupport.ab3@1296> XINCLUDE "CLIModeSupport.ab3"
0001A2B8 <CLIModeSupport.ab3@1297> XINCLUDE "CLIModeSupport.ab3"
0001A2DE <CLIModeSupport.ab3@1298> XINCLUDE "CLIModeSupport.ab3"
0001A316 <CLIModeSupport.ab3@1299> XINCLUDE "CLIModeSupport.ab3"
0001A33E <CLIModeSupport.ab3@1300> XINCLUDE "CLIModeSupport.ab3"
0001A352 <CLIModeSupport.ab3@1301> XINCLUDE "CLIModeSupport.ab3"
0001A3C6 <CLIModeSupport.ab3@1302> XINCLUDE "CLIModeSupport.ab3"
0001A40C <CLIModeSupport.ab3@1303> XINCLUDE "CLIModeSupport.ab3"
0001A4BA <CLIModeSupport.ab3@1304> XINCLUDE "CLIModeSupport.ab3"
0001A526 <CLIModeSupport.ab3@1305> XINCLUDE "CLIModeSupport.ab3"
0001A536 <CLIModeSupport.ab3@1306> XINCLUDE "CLIModeSupport.ab3"
0001A55C <CLIModeSupport.ab3@1308> XINCLUDE "CLIModeSupport.ab3"
0001A566 <CLIModeSupport.ab3@1310> XINCLUDE "CLIModeSupport.ab3"
0001A590 <CLIModeSupport.ab3@1311> XINCLUDE "CLIModeSupport.ab3"
0001A596 <CLIModeSupport.ab3@1312> XINCLUDE "CLIModeSupport.ab3"
0001A5A6 <CLIModeSupport.ab3@1314> XINCLUDE "CLIModeSupport.ab3"
0001A646 <CLIModeSupport.ab3@1316> XINCLUDE "CLIModeSupport.ab3"
0001A686 <CLIModeSupport.ab3@1317> XINCLUDE "CLIModeSupport.ab3"
0001A68C <CLIModeSupport.ab3@1319> XINCLUDE "CLIModeSupport.ab3"
0001A6EE <CLIModeSupport.ab3@1320> XINCLUDE "CLIModeSupport.ab3"
0001A6F8 <CLIModeSupport.ab3@1322> XINCLUDE "CLIModeSupport.ab3"
0001A702 <CLIModeSupport.ab3@1324> XINCLUDE "CLIModeSupport.ab3"
0001A71C <CLIModeSupport.ab3@1325> XINCLUDE "CLIModeSupport.ab3"
0001A73E <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001A760 <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001A7BA <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001A7DC <CLIModeSupport.ab3@1404> XINCLUDE "CLIModeSupport.ab3"
0001A7FE <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001A858 <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001A89A <CLIModeSupport.ab3@1407> XINCLUDE "CLIModeSupport.ab3"
0001A8A0 <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001A8AE <CLIModeSupport.ab3@1410> XINCLUDE "CLIModeSupport.ab3"
0001A8B4 <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001A8C8 <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001A8D2 <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001A94C <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001A956 <CLIModeSupport.ab3@1416> XINCLUDE "CLIModeSupport.ab3"
0001A95C <CLIModeSupport.ab3@1417> XINCLUDE "CLIModeSupport.ab3"
0001A970 <CLIModeSupport.ab3@1420> XINCLUDE "CLIModeSupport.ab3"
0001A97A <CLIModeSupport.ab3@1421> XINCLUDE "CLIModeSupport.ab3"
0001A9FA <CLIModeSupport.ab3@1422> XINCLUDE "CLIModeSupport.ab3"
0001AA04 <CLIModeSupport.ab3@1423> XINCLUDE "CLIModeSupport.ab3"
0001AA0A <CLIModeSupport.ab3@1424> XINCLUDE "CLIModeSupport.ab3"
0001AA1E <CLIModeSupport.ab3@1427> XINCLUDE "CLIModeSupport.ab3"
0001AA28 <CLIModeSupport.ab3@1428> XINCLUDE "CLIModeSupport.ab3"
0001AA70 <CLIModeSupport.ab3@1429> XINCLUDE "CLIModeSupport.ab3"
0001AA7E <CLIModeSupport.ab3@1430> XINCLUDE "CLIModeSupport.ab3"
0001AAA4 <CLIModeSupport.ab3@1431> XINCLUDE "CLIModeSupport.ab3"
0001AAAE <CLIModeSupport.ab3@1432> XINCLUDE "CLIModeSupport.ab3"
0001AB18 <CLIModeSupport.ab3@1433> XINCLUDE "CLIModeSupport.ab3"
0001ABEA <CLIModeSupport.ab3@1434> XINCLUDE "CLIModeSupport.ab3"
0001ABF4 <CLIModeSupport.ab3@1435> XINCLUDE "CLIModeSupport.ab3"
0001ABFA <CLIModeSupport.ab3@1436> XINCLUDE "CLIModeSupport.ab3"
0001AC04 <CLIModeSupport.ab3@1438> XINCLUDE "CLIModeSupport.ab3"
0001AC0A <CLIModeSupport.ab3@1439> XINCLUDE "CLIModeSupport.ab3"
0001AC1E <CLIModeSupport.ab3@1442> XINCLUDE "CLIModeSupport.ab3"
0001AC28 <CLIModeSupport.ab3@1443> XINCLUDE "CLIModeSupport.ab3"
0001AC70 <CLIModeSupport.ab3@1444> XINCLUDE "CLIModeSupport.ab3"
0001AC7A <CLIModeSupport.ab3@1445> XINCLUDE "CLIModeSupport.ab3"
0001AC80 <CLIModeSupport.ab3@1446> XINCLUDE "CLIModeSupport.ab3"
0001AC94 <CLIModeSupport.ab3@1449> XINCLUDE "CLIModeSupport.ab3"
0001ACBA <CLIModeSupport.ab3@1450> XINCLUDE "CLIModeSupport.ab3"
0001ACCE <CLIModeSupport.ab3@1453> XINCLUDE "CLIModeSupport.ab3"
0001ACF4 <CLIModeSupport.ab3@1454> XINCLUDE "CLIModeSupport.ab3"
0001AD08 <CLIModeSupport.ab3@1457> XINCLUDE "CLIModeSupport.ab3"
0001AD2E <CLIModeSupport.ab3@1458> XINCLUDE "CLIModeSupport.ab3"
0001AD42 <CLIModeSupport.ab3@1461> XINCLUDE "CLIModeSupport.ab3"
0001AD4C <CLIModeSupport.ab3@1462> XINCLUDE "CLIModeSupport.ab3"
0001AD7A <CLIModeSupport.ab3@1463> XINCLUDE "CLIModeSupport.ab3"
0001ADCA <CLIModeSupport.ab3@1464> XINCLUDE "CLIModeSupport.ab3"
0001ADEA <CLIModeSupport.ab3@1465> XINCLUDE "CLIModeSupport.ab3"
0001AE02 <CLIModeSupport.ab3@1466> XINCLUDE "CLIModeSupport.ab3"
0001AEE6 <CLIModeSupport.ab3@1467> XINCLUDE "CLIModeSupport.ab3"
0001AEF0 <CLIModeSupport.ab3@1468> XINCLUDE "CLIModeSupport.ab3"
0001AEF6 <CLIModeSupport.ab3@1469> XINCLUDE "CLIModeSupport.ab3"
0001AEF8 <CLIModeSupport.ab3@1471> XINCLUDE "CLIModeSupport.ab3"
0001AF0C <CLIModeSupport.ab3@1472> XINCLUDE "CLIModeSupport.ab3"
0001AF3E <CLIModeSupport.ab3@1475> XINCLUDE "CLIModeSupport.ab3"
0001AF44 <CLIModeSupport.ab3@1476> XINCLUDE "CLIModeSupport.ab3"
0001AF88 <CLIModeSupport.ab3@1477> XINCLUDE "CLIModeSupport.ab3"
0001AF9A <CLIModeSupport.ab3@1478> XINCLUDE "CLIModeSupport.ab3"
0001AFAC <CLIModeSupport.ab3@1479> XINCLUDE "CLIModeSupport.ab3"
0001AFB6 <CLIModeSupport.ab3@1480> XINCLUDE "CLIModeSupport.ab3"
0001AFBC <CLIModeSupport.ab3@1481> XINCLUDE "CLIModeSupport.ab3"
0001AFC6 <CLIModeSupport.ab3@1483> XINCLUDE "CLIModeSupport.ab3"
0001AFE0 <CLIModeSupport.ab3@1484> XINCLUDE "CLIModeSupport.ab3"
0001AFE0 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001B060 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001B098 <AmiBlitz3.ab3@99> If dynassign <> ""
0001B0AE <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001B0B8 <AmiBlitz3.ab3@101>     If *AssignSema
0001B0C8 <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001B0CE <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B0EE <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B0F8 <AmiBlitz3.ab3@105>       If *AssignSema
0001B108 <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B13C <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B14E <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B18A <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B196 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B1A2 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B1B2 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B1C2 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B20E <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B26E <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B302 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B33A <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B3BC <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B43E <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B4C0 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B542 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B5C4 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B638 <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B6AC <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B720 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B74E <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B772 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B7A0 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B7CE <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B898 <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B8D0 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B90E <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B91E <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B924 <AmiBlitz3.ab3@152> Else
0001B934 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B972 <AmiBlitz3.ab3@156> If dos_GetToolState{"ONEPASSCOMPILING"} = -1
0001B978 <AmiBlitz3.ab3@157>   OnePassCompiling.l = True
0001B97E <AmiBlitz3.ab3@158> Else
0001B984 <AmiBlitz3.ab3@159>   OnePassCompiling   = False
0001B9AA <AmiBlitz3.ab3@162> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B9D8 <AmiBlitz3.ab3@167> If ( FindResident_("MorphOS") )
0001B9E8 <AmiBlitz3.ab3@168>   Poke.b ?MorphOS,1      ; set it to use CacheClear_E
0001B9EE <AmiBlitz3.ab3@169> Else
0001B9FE <AmiBlitz3.ab3@170>   Poke.b ?MorphOS,0      ; set it to use CacheClear_U
0001BA04 <AmiBlitz3.ab3@175>  releaseexe.l               = False
0001BA0A <AmiBlitz3.ab3@176>  releasedbg_save.w          = 0
0001BA10 <AmiBlitz3.ab3@177>  releasemakesmall_save.b    = 0
0001BA16 <AmiBlitz3.ab3@178>  releasefuncoptimize_save.b = 0
0001BA1C <AmiBlitz3.ab3@179>  releasedebugger_save.b     = 0
0001BA32 <AmiBlitz3.ab3@182> 
0001BA82 <AmiBlitz3.ab3@183>  comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
0001BA8A <AmiBlitz3.ab3@184>  calcpro.l      = 0
0001BA92 <AmiBlitz3.ab3@185>  calcpro_old.l  = 0
0001BA9E <AmiBlitz3.ab3@186>  typ_old.l      = -1
0001BAAA <AmiBlitz3.ab3@187>  pass_old.l     = -1
0001BAB0 <AmiBlitz3.ab3@188>  update_comstatus_gui.b = False ; for the first
0001BAC6 <AmiBlitz3.ab3@192> MaxLen dbg_detokenlinesBuffer.s = #MAX_dbg_detokenlinesBufferSize
0001BAD2 <AmiBlitz3.ab3@193> dbg_fid.l = -1 ; no debug file id yet!
0001BAE4 <AmiBlitz3.ab3@196> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001BAEE <AmiBlitz3.ab3@198> If CLIMode
0001BAF4 <AmiBlitz3.ab3@201>   err.l      = False                                       ; indicate that an error has occured
0001BAFA <AmiBlitz3.ab3@202>   showhelp.l = False                                       ; show the CLI tool's help
0001BB52 <AmiBlitz3.ab3@205>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001BB7A <AmiBlitz3.ab3@206>   cli_sourcefile.s    = ""
0001BBA2 <AmiBlitz3.ab3@207>   cli_exefile.s       = ""
0001BBCA <AmiBlitz3.ab3@208>   cli_savefile.s      = ""
0001BBF2 <AmiBlitz3.ab3@209>   cli_dumpfile.s      = ""
0001BC1A <AmiBlitz3.ab3@210>   cli_includepath.s   = ""
0001BC42 <AmiBlitz3.ab3@211>   cli_blitzlibpath.s  = ""
0001BC48 <AmiBlitz3.ab3@212>   cli_debuginfo.l     = False
0001BC4E <AmiBlitz3.ab3@213>   cli_run.l           = False
0001BC56 <AmiBlitz3.ab3@214>   cli_dumpflags.l     = $FFFFFFFF
0001BC7E <AmiBlitz3.ab3@215>   cli_info.s          = ""
0001BC84 <AmiBlitz3.ab3@216>   cli_release.l       = False
0001BC8E <AmiBlitz3.ab3@217>   cli_numargs.l       = dos_GetNumArgs{}
0001BC94 <AmiBlitz3.ab3@218>   cli_gui.l           = False
0001BC9C <AmiBlitz3.ab3@219>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BCA4 <AmiBlitz3.ab3@220>   cli_verbose.l       = 1
0001BCAC <AmiBlitz3.ab3@221>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BCB4 <AmiBlitz3.ab3@222>   cli_comstrbufsize.l = 0
0001BCBC <AmiBlitz3.ab3@223>   cli_exestacksize.l  = 0
0001BCC4 <AmiBlitz3.ab3@224>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BCCA <AmiBlitz3.ab3@225>   OnePassCompiling    = False
0001BCE2 <AmiBlitz3.ab3@226>   If cli_numargs=0 Then showhelp=True
0001BD12 <AmiBlitz3.ab3@230>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BD5E <AmiBlitz3.ab3@231>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BE26 <AmiBlitz3.ab3@232>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BE5C <AmiBlitz3.ab3@233>     Select larg
0001BEA8 <AmiBlitz3.ab3@234>       Case "s" : larg="source"
0001BEFA <AmiBlitz3.ab3@235>       Case "e" : larg="exe"
0001BF4C <AmiBlitz3.ab3@236>       Case "d" : larg="debug"
0001BF9E <AmiBlitz3.ab3@237>       Case "r" : larg="release"
0001BFF0 <AmiBlitz3.ab3@238>       Case "h" : larg="help"
0001C042 <AmiBlitz3.ab3@239>       Case "v" : larg="verbose"
0001C094 <AmiBlitz3.ab3@240>       Case "1" : larg="1pass"
0001C0A2 <AmiBlitz3.ab3@241>     End Select
0001C0D8 <AmiBlitz3.ab3@243>     Select larg
0001C12C <AmiBlitz3.ab3@244>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001C186 <AmiBlitz3.ab3@245>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001C1E0 <AmiBlitz3.ab3@246>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001C210 <AmiBlitz3.ab3@247>       Case "debug"    : cli_debuginfo   = True
0001C240 <AmiBlitz3.ab3@248>       Case "run"      : cli_run         = True
0001C270 <AmiBlitz3.ab3@249>       Case "release"  : cli_release     = True
0001C2A0 <AmiBlitz3.ab3@250>       Case "ped"      : cli_gui         = True
0001C2FA <AmiBlitz3.ab3@251>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C36C <AmiBlitz3.ab3@252>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C39C <AmiBlitz3.ab3@253>                         cli_dumpfile    = dos_GetNextArg{}
0001C3A4 <AmiBlitz3.ab3@254>                         cli_dumpflags   = $0
0001C404 <AmiBlitz3.ab3@255>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C464 <AmiBlitz3.ab3@256>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C4C4 <AmiBlitz3.ab3@257>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C524 <AmiBlitz3.ab3@258>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C584 <AmiBlitz3.ab3@259>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C5E4 <AmiBlitz3.ab3@260>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C644 <AmiBlitz3.ab3@261>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C6A4 <AmiBlitz3.ab3@262>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C704 <AmiBlitz3.ab3@263>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C716 <AmiBlitz3.ab3@264>                         If cli_dumpflags = $0
0001C71C <AmiBlitz3.ab3@265>                          err=True
0001C7B0 <AmiBlitz3.ab3@266>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C822 <AmiBlitz3.ab3@269>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C82A <AmiBlitz3.ab3@270>                         cli_comflags.l  = $0
0001C88A <AmiBlitz3.ab3@271>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C8EA <AmiBlitz3.ab3@272>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C94A <AmiBlitz3.ab3@273>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C9AA <AmiBlitz3.ab3@274> 
0001CA0A <AmiBlitz3.ab3@275>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001CA24 <AmiBlitz3.ab3@276>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001CA2A <AmiBlitz3.ab3@277>                           err=True                                                                ; no
0001CABE <AmiBlitz3.ab3@278>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001CAC4 <AmiBlitz3.ab3@279>                         Else
0001CAD2 <AmiBlitz3.ab3@280>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001CB44 <AmiBlitz3.ab3@283>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001CB4C <AmiBlitz3.ab3@284>                         cli_dbgflags.l  = $0
0001CBAC <AmiBlitz3.ab3@285>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001CC0C <AmiBlitz3.ab3@286>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CC6C <AmiBlitz3.ab3@287>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CCCC <AmiBlitz3.ab3@288>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CCE6 <AmiBlitz3.ab3@289>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CCEC <AmiBlitz3.ab3@290>                           err=True                                                                ; no
0001CD80 <AmiBlitz3.ab3@291>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CD86 <AmiBlitz3.ab3@292>                         Else
0001CD94 <AmiBlitz3.ab3@293>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CDEE <AmiBlitz3.ab3@295>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CE48 <AmiBlitz3.ab3@296>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CEA2 <AmiBlitz3.ab3@297> 
0001CEC8 <AmiBlitz3.ab3@298>                          If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CED8 <AmiBlitz3.ab3@299>                            Poke.l ?maxerrorcount,cli_maxerrors
0001CF08 <AmiBlitz3.ab3@301>       Case "1pass"     : OnePassCompiling = True   ; added to use big buffers for compile so only 1 pass is needed  tomsmart1
0001CF62 <AmiBlitz3.ab3@302>       Case "verbose"   : cli_verbose      = Vallong(dos_GetNextArg{})
0001CF92 <AmiBlitz3.ab3@303>       Case "help"      : showhelp         = True             ; show the help and quit
0001CF98 <AmiBlitz3.ab3@304>       Default
0001CFD0 <AmiBlitz3.ab3@305>         If arg><""
0001D064 <AmiBlitz3.ab3@306>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001D06A <AmiBlitz3.ab3@307>           err = True
0001D078 <AmiBlitz3.ab3@309>     End Select
0001D0C4 <AmiBlitz3.ab3@310>   Until arg = "" OR err=True          ; until we processed all arguments
0001D0E6 <AmiBlitz3.ab3@313>   If err><False OR showhelp = True
0001D0F0 <AmiBlitz3.ab3@314>     If showhelp
0001D152 <AmiBlitz3.ab3@315>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001D18A <AmiBlitz3.ab3@316>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001D1C2 <AmiBlitz3.ab3@317>     NPrint "\\nOptions:"
0001D1FA <AmiBlitz3.ab3@318>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001D232 <AmiBlitz3.ab3@319>     NPrint "  -(e)xe <file>       : output executable filename"
0001D26A <AmiBlitz3.ab3@320>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D2A2 <AmiBlitz3.ab3@321>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D2DA <AmiBlitz3.ab3@322>     NPrint "  -run                : run compiled program"
0001D312 <AmiBlitz3.ab3@323>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D34A <AmiBlitz3.ab3@324>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D382 <AmiBlitz3.ab3@325>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D3BA <AmiBlitz3.ab3@326>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D3F2 <AmiBlitz3.ab3@327>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D42A <AmiBlitz3.ab3@328>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D462 <AmiBlitz3.ab3@329>     NPrint "  -maxerrors <n>      : set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D49A <AmiBlitz3.ab3@330>     NPrint "  -(1)pass            : use large buffers for compile"
0001D4D2 <AmiBlitz3.ab3@331>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D50A <AmiBlitz3.ab3@332>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D542 <AmiBlitz3.ab3@333>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D57A <AmiBlitz3.ab3@334>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D5B2 <AmiBlitz3.ab3@335>     NPrint "  -(h)elp             : show this help"
0001D5EA <AmiBlitz3.ab3@336>     NPrint "\\nExample:"
0001D622 <AmiBlitz3.ab3@337>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D65A <AmiBlitz3.ab3@338>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D660 <AmiBlitz3.ab3@341>     Goto abnormal_exit
0001D67C <AmiBlitz3.ab3@344>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D6E0 <AmiBlitz3.ab3@345>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D6F0 <AmiBlitz3.ab3@348> Poke.l ?CLIMode,CLIMode
0001D714 <AmiBlitz3.ab3@383>   Dim incdim.s (#maxincludes)
0001D738 <AmiBlitz3.ab3@384>   Dim incline.l(#maxincludes)
0001D752 <AmiBlitz3.ab3@652> Function.s Get_Libinfo{addr_libnum.l}
0001D75E <AmiBlitz3.ab3@654>   lib_ab2.b = False : lib_os.b = False
0001D764 <AmiBlitz3.ab3@655>   addr_counter.l = addr_libnum
0001D76C <AmiBlitz3.ab3@656>   skip.l = 0
0001D77E <AmiBlitz3.ab3@657>   If addr_counter=0
0001D7B8 <AmiBlitz3.ab3@658>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D7D6 <AmiBlitz3.ab3@659>     Function Return ""
0001D7E4 <AmiBlitz3.ab3@664>     mem.l = Peek.l(addr_counter)
0001D7F2 <AmiBlitz3.ab3@669>     addr_counter + 2
0001D812 <AmiBlitz3.ab3@670>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D82C <AmiBlitz3.ab3@671>     If (mem LSR 16) = $ffe2
0001D832 <AmiBlitz3.ab3@673>       lib_os = True
0001D83A <AmiBlitz3.ab3@674>       skip = 10
0001D880 <AmiBlitz3.ab3@675>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D8C4 <AmiBlitz3.ab3@677>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D8DA <AmiBlitz3.ab3@679>   If (addr_counter>addr_libnum + $400)
0001D8F8 <AmiBlitz3.ab3@681>     Function Return ""
0001D8FE <AmiBlitz3.ab3@682>   Else
0001D922 <AmiBlitz3.ab3@683>     Function Return Peek$(addr_counter + skip)
0001D92C <AmiBlitz3.ab3@685> End Function
0001D94A <AmiBlitz3.ab3@730>   !asm
0001D950 <AmiBlitz3.ab3@731>   MOVEA.l _execbase,A6
0001D954 <AmiBlitz3.ab3@732>   MOVEM.l d0/a0,-(a7)
0001D956 <AmiBlitz3.ab3@734>   MOVEQ #127,d0
0001D95C <AmiBlitz3.ab3@735>   LEA chartab,a0
0001D962 <AmiBlitz3.ab3@738>     MOVE.b #1,128(a0)
0001D964 <AmiBlitz3.ab3@739>     CLR.b (a0)+
0001D968 <AmiBlitz3.ab3@740>   DBF d0,'l12
0001D96E <AmiBlitz3.ab3@742>   LEA chartab,a0
0001D972 <AmiBlitz3.ab3@743>   MOVE.b #1,(a0)
0001D978 <AmiBlitz3.ab3@744>   MOVE.b #1,","(a0)
0001D97E <AmiBlitz3.ab3@745>   MOVE.b #1,";"(a0)
0001D984 <AmiBlitz3.ab3@746>   MOVE.b #1,":"(a0)
0001D98A <AmiBlitz3.ab3@747>   MOVE.b #1,"("(a0)
0001D990 <AmiBlitz3.ab3@748>   MOVE.b #1,")"(a0)
0001D996 <AmiBlitz3.ab3@749>   MOVE.b #1,"="(a0)
0001D99C <AmiBlitz3.ab3@750>   MOVE.b #1,"+"(a0)
0001D9A2 <AmiBlitz3.ab3@751>   MOVE.b #1,"-"(a0)
0001D9A8 <AmiBlitz3.ab3@752>   MOVE.b #1,"*"(a0)
0001D9AE <AmiBlitz3.ab3@753>   MOVE.b #1,"/"(a0)
0001D9B4 <AmiBlitz3.ab3@754>   MOVE.b #1,"$"(a0)
0001D9BA <AmiBlitz3.ab3@755>   MOVE.b #1,"%"(a0)
0001D9C0 <AmiBlitz3.ab3@756>   MOVE.b #1,"."(a0)
0001D9C6 <AmiBlitz3.ab3@757>   MOVE.b #1,"["(a0)
0001D9CC <AmiBlitz3.ab3@758>   MOVE.b #1,"]"(a0)
0001D9D2 <AmiBlitz3.ab3@759>   MOVE.b #1,"{"(a0)
0001D9D8 <AmiBlitz3.ab3@760>   MOVE.b #1,"}"(a0)
0001D9DE <AmiBlitz3.ab3@761>   MOVE.b #1,"\"(a0)
0001D9E4 <AmiBlitz3.ab3@762>   MOVE.b #1,">"(a0)
0001D9EA <AmiBlitz3.ab3@763>   MOVE.b #1,"<"(a0)
0001D9F0 <AmiBlitz3.ab3@764>   MOVE.b #1,"&"(a0)
0001D9F6 <AmiBlitz3.ab3@765>   MOVE.b #1,"|"(a0)
0001D9FC <AmiBlitz3.ab3@766>   MOVE.b #1,"^"(a0)
0001DA02 <AmiBlitz3.ab3@767>   MOVE.b #1,$7e(a0)
0001DA08 <AmiBlitz3.ab3@768>   MOVE.w #$0101,1(a0)
0001DA0E <AmiBlitz3.ab3@770>   LEA instrtab,a0
0001DA14 <AmiBlitz3.ab3@771>   MOVE.l #labelhash-instrtab,d0
0001DA16 <AmiBlitz3.ab3@772>   ASR.l #2,d0
0001DA18 <AmiBlitz3.ab3@773>   SUBQ.l #1,d0
0001DA1A <AmiBlitz3.ab3@776>    CLR.l (a0)+
0001DA1C <AmiBlitz3.ab3@777>    SUBQ.l #1,d0
0001DA20 <AmiBlitz3.ab3@778>   BNE 'l10
0001DA26 <AmiBlitz3.ab3@780>   LEA allowtab,a0
0001DA2C <AmiBlitz3.ab3@781>   MOVE.l #255,d0
0001DA2E <AmiBlitz3.ab3@784>     CLR.b (a0)+
0001DA32 <AmiBlitz3.ab3@785>   DBF d0,'la1
0001DA38 <AmiBlitz3.ab3@787>   LEA allowtab,a0
0001DA3E <AmiBlitz3.ab3@788>   MOVE.b #1,$7d(a0)
0001DA44 <AmiBlitz3.ab3@789>   MOVE.b #1,$7c(a0)
0001DA4A <AmiBlitz3.ab3@790>   MOVE.b #1,$44(a0)
0001DA50 <AmiBlitz3.ab3@791>   MOVE.b #1,$45(a0)
0001DA56 <AmiBlitz3.ab3@792>   MOVE.b #1,$b9(a0)
0001DA5C <AmiBlitz3.ab3@793>   MOVE.b #1,$89(a0)
0001DA62 <AmiBlitz3.ab3@794>   MOVE.b #1,$ce(a0)
0001DA68 <AmiBlitz3.ab3@795>   MOVE.b #1,$cf(a0)
0001DA6E <AmiBlitz3.ab3@796>   MOVE.b #1,$d0(a0)
0001DA74 <AmiBlitz3.ab3@797>   MOVE.b #1,$cd(a0)
0001DA76 <AmiBlitz3.ab3@798>   MOVEQ #0,d0
0001DA7C <AmiBlitz3.ab3@800>   MOVEA.l _execbase,a6
0001DA82 <AmiBlitz3.ab3@805>   MOVE.l #$10000,d0
0001DA88 <AmiBlitz3.ab3@806>   MOVE.l #80000,d1
0001DA8A <AmiBlitz3.ab3@807>   MOVE.l d1,d2
0001DA8E <AmiBlitz3.ab3@808>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001DA94 <AmiBlitz3.ab3@809>   MOVE.l d0,mempool
0001DA98 <AmiBlitz3.ab3@810>   MOVEM.l (a7)+,d0/a0
0001DA9E <AmiBlitz3.ab3@811>   TST.l mempool
0001DAA2 <AmiBlitz3.ab3@812>   BEQ shutdown_compiler
0001DAA6 <AmiBlitz3.ab3@814>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001DAAC <AmiBlitz3.ab3@815>   MOVE.l A4,ptr_ThisTask
0001DAB0 <AmiBlitz3.ab3@817>   BSR.w open_doslibrary
0001DAB4 <AmiBlitz3.ab3@818>   BEQ.w shutdown_compiler
0001DABA <AmiBlitz3.ab3@820>   MOVE.l D2,stacksize
0001DABC <AmiBlitz3.ab3@827>   MOVEQ.l #$00,D0
0001DAC2 <AmiBlitz3.ab3@828>   LEA tokens,A0
0001DAC4 <AmiBlitz3.ab3@831>     ADDQ.w #1,D0
0001DAC6 <AmiBlitz3.ab3@832>     MOVE.l (A0),D1
0001DACA <AmiBlitz3.ab3@833>     BEQ.w 'gotlast
0001DACC <AmiBlitz3.ab3@834>     MOVEA.l D1,A0
0001DAD0 <AmiBlitz3.ab3@835>  BRA.w 'loop
0001DAD6 <AmiBlitz3.ab3@838>   MOVE.l A0,end_of_tokenlist
0001DADA <AmiBlitz3.ab3@840>   BSR.w makeasmtable
0001DAE2 <AmiBlitz3.ab3@842>   MOVE.w #$FFFF,returncode_org    ; was -1                         ;#-1,returncode
0001DAE6 <AmiBlitz3.ab3@844>   BSR.w open_mathlibrary
0001DAEA <AmiBlitz3.ab3@845>   BEQ.w freemem_and_quit4
0001DAF0 <AmiBlitz3.ab3@847>   MOVE.l constmaxpc,D0
0001DAF2 <AmiBlitz3.ab3@848>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001DAF8 <AmiBlitz3.ab3@849>   MOVEA.l _execbase,A6
0001DAFC <AmiBlitz3.ab3@850>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001DB02 <AmiBlitz3.ab3@851>   MOVE.l D0,constpcat
0001DB06 <AmiBlitz3.ab3@852>   BEQ.w freemem_and_quit3
0001DB0C <AmiBlitz3.ab3@853>   ADD.l constmaxpc,D0
0001DB12 <AmiBlitz3.ab3@854>   MOVE.l D0,constlibat
0001DB18 <AmiBlitz3.ab3@856>   MOVE.l macrobuffer_size,D0
0001DB1E <AmiBlitz3.ab3@858>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001DB22 <AmiBlitz3.ab3@859>   BGE 'ok
0001DB28 <AmiBlitz3.ab3@860>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001DB2E <AmiBlitz3.ab3@861>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001DB30 <AmiBlitz3.ab3@864>   ADDQ.l #4,d0
0001DB32 <AmiBlitz3.ab3@866>   MOVEQ.l #$01,D1
0001DB38 <AmiBlitz3.ab3@867>   MOVEA.l _execbase,A6
0001DB3C <AmiBlitz3.ab3@868>   JSR _AllocMem(A6)                                        ;macro mem
0001DB3E <AmiBlitz3.ab3@870>   MOVE.l d0,a0
0001DB44 <AmiBlitz3.ab3@871>   MOVE.l macrobuffer_size,(a0)+
0001DB46 <AmiBlitz3.ab3@872>   MOVE.l a0,d0
0001DB4C <AmiBlitz3.ab3@874>   MOVE.l D0,ptr_macrobuffer_begin
0001DB50 <AmiBlitz3.ab3@875>   BEQ.w freemem_and_quit2
0001DB56 <AmiBlitz3.ab3@876>   ADD.l macrobuffer_size,D0
0001DB5C <AmiBlitz3.ab3@877>   MOVE.l D0,ptr_macrobuffer_end
0001DB62 <AmiBlitz3.ab3@880>   TST.l CLIMode
0001DB66 <AmiBlitz3.ab3@881>   BEQ load_ped
0001DB90 <AmiBlitz3.ab3@884>   !basic
0001DB9A <AmiBlitz3.ab3@885>   succ.l = InitEmulatedPED{}
0001DB9E <AmiBlitz3.ab3@886>   GetD0 succ
0001DBBC <AmiBlitz3.ab3@887>   !asm
0001DBBE <AmiBlitz3.ab3@888>   TST.l d0
0001DBC2 <AmiBlitz3.ab3@889>   BEQ freemem_and_quit
0001DBC8 <AmiBlitz3.ab3@890> JMP skip_ped
0001DBCE <AmiBlitz3.ab3@896>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001DBD4 <AmiBlitz3.ab3@897>   MOVEA.l _dosbase,A6
0001DBD8 <AmiBlitz3.ab3@898>   JSR _LoadSeg(A6)
0001DBDE <AmiBlitz3.ab3@899>   MOVE.l D0,ptr_seg_ped
0001DBE2 <AmiBlitz3.ab3@901>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001DBE4 <AmiBlitz3.ab3@905>   MOVEA.l D0,A2
0001DBE6 <AmiBlitz3.ab3@906>   ADDA.l A2,A2
0001DBE8 <AmiBlitz3.ab3@907>   ADDA.l A2,A2
0001DBEE <AmiBlitz3.ab3@909>   LEA teddata,a1                                           ;lea edstruct,A1
0001DBF4 <AmiBlitz3.ab3@910>   MOVE.l #"TEDY",d1
0001DBF8 <AmiBlitz3.ab3@911>   JSR 4(A2)                                                ; Run PED
0001DBFE <AmiBlitz3.ab3@913>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001DC04 <AmiBlitz3.ab3@914>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001DC42 <AmiBlitz3.ab3@916>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001DC46 <AmiBlitz3.ab3@917>   BEQ.w unload_ped
0001DC4A <AmiBlitz3.ab3@918> 
0001DC4E <AmiBlitz3.ab3@919>   BNE old_version_of_PED                                   ; no, than exit
0001DC8C <AmiBlitz3.ab3@925>   !ComData_GetL{comData_Magic,D0}
0001DC92 <AmiBlitz3.ab3@926>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001DC96 <AmiBlitz3.ab3@927>   BNE unload_ped
0001DCCE <AmiBlitz3.ab3@930>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DD06 <AmiBlitz3.ab3@931>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DD3E <AmiBlitz3.ab3@932>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DD76 <AmiBlitz3.ab3@933>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DDAE <AmiBlitz3.ab3@934>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DDE6 <AmiBlitz3.ab3@935>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DE1E <AmiBlitz3.ab3@936>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DE56 <AmiBlitz3.ab3@937>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DE8E <AmiBlitz3.ab3@938>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DEC6 <AmiBlitz3.ab3@939>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DEFE <AmiBlitz3.ab3@940>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DF36 <AmiBlitz3.ab3@941>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DF6E <AmiBlitz3.ab3@944>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DFA6 <AmiBlitz3.ab3@945>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DFDE <AmiBlitz3.ab3@948>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001E016 <AmiBlitz3.ab3@949>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001E04E <AmiBlitz3.ab3@951>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001E086 <AmiBlitz3.ab3@952>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001E0BE <AmiBlitz3.ab3@954>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001E0F6 <AmiBlitz3.ab3@955>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001E12E <AmiBlitz3.ab3@957>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001E166 <AmiBlitz3.ab3@958>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001E19E <AmiBlitz3.ab3@959>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001E1D6 <AmiBlitz3.ab3@960>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001E20E <AmiBlitz3.ab3@961>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001E246 <AmiBlitz3.ab3@962>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001E27E <AmiBlitz3.ab3@963>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E2B6 <AmiBlitz3.ab3@964>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E2EE <AmiBlitz3.ab3@965>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E326 <AmiBlitz3.ab3@966>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E35E <AmiBlitz3.ab3@967>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E396 <AmiBlitz3.ab3@968>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E3CE <AmiBlitz3.ab3@969>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E406 <AmiBlitz3.ab3@970>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E43E <AmiBlitz3.ab3@973>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E444 <AmiBlitz3.ab3@975>   CLR.w returncode_org
0001E46E <AmiBlitz3.ab3@977>   !basic
0001E478 <AmiBlitz3.ab3@978>   If CLIMode
0001E4EA <AmiBlitz3.ab3@979>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E508 <AmiBlitz3.ab3@981>   !asm
0001E50E <AmiBlitz3.ab3@985>   TST.b start_without_libs
0001E512 <AmiBlitz3.ab3@986>   BNE 'skip_loading_libs
0001E516 <AmiBlitz3.ab3@988>     BSR.w call_setpointerbusy
0001E520 <AmiBlitz3.ab3@989>     MOVE.l #$FFFFffff,linenumat   ; was -1
0001E524 <AmiBlitz3.ab3@990>     BSR.w get_libraries
0001E52A <AmiBlitz3.ab3@991>     JSR init_libraries
0001E52E <AmiBlitz3.ab3@992>     BSR.w init_buffers
0001E532 <AmiBlitz3.ab3@993>     BSR.w call_setpointernormal
0001E534 <AmiBlitz3.ab3@1001>   MOVEQ.l #-$01,D0
0001E53A <AmiBlitz3.ab3@1002>   MOVEA.l _execbase,A6
0001E53E <AmiBlitz3.ab3@1003>   JSR _AllocSignal(A6)
0001E544 <AmiBlitz3.ab3@1004>   MOVE.l D0,signalNum
0001E546 <AmiBlitz3.ab3@1005>   MOVEQ.l #$00,D1
0001E548 <AmiBlitz3.ab3@1006>   BSET D0,D1
0001E54E <AmiBlitz3.ab3@1007>   MOVE.l D1,signals
0001E554 <AmiBlitz3.ab3@1014>   MOVE.l #str_defaultdbug,D1
0001E558 <AmiBlitz3.ab3@1015>   MOVEA.l _dosbase(PC),A6
0001E55C <AmiBlitz3.ab3@1016>   JSR _LoadSeg(A6)
0001E562 <AmiBlitz3.ab3@1017>   MOVE.l D0,ptr_seg_debugger
0001E564 <AmiBlitz3.ab3@1020>   TST.l d0
0001E568 <AmiBlitz3.ab3@1021>   BNE 'ok_12
0001E592 <AmiBlitz3.ab3@1022>     !basic
0001E5F4 <AmiBlitz3.ab3@1023>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E612 <AmiBlitz3.ab3@1024>     !asm
0001E618 <AmiBlitz3.ab3@1027>   TST.l CLIMode
0001E61C <AmiBlitz3.ab3@1028>   BEQ run_ped
0001E646 <AmiBlitz3.ab3@1034>   !basic
0001E64C <AmiBlitz3.ab3@1035>   err.l = False
0001E678 <AmiBlitz3.ab3@1043>   If cli_sourcefile
0001E698 <AmiBlitz3.ab3@1044>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E6A2 <AmiBlitz3.ab3@1045>     If lock
0001E6C6 <AmiBlitz3.ab3@1046>       NameFromLock_ lock,&cli_tempstr,1024
0001E6F0 <AmiBlitz3.ab3@1047>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E700 <AmiBlitz3.ab3@1048>       UnLock_ lock
0001E72C <AmiBlitz3.ab3@1051>     If cli_exefile
0001E77E <AmiBlitz3.ab3@1052>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E7D6 <AmiBlitz3.ab3@1053>       path.s = dos_PathPart{cli_exefile}
0001E7F6 <AmiBlitz3.ab3@1054>       lock.l = Lock_(&path,#ACCESS_READ)
0001E800 <AmiBlitz3.ab3@1055>       If lock
0001E824 <AmiBlitz3.ab3@1056>         NameFromLock_ lock,&cli_tempstr,1024
0001E84E <AmiBlitz3.ab3@1057>         path.s = Peek.s(&cli_tempstr)
0001E8FC <AmiBlitz3.ab3@1058>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E90C <AmiBlitz3.ab3@1059>         UnLock_ lock
0001E956 <AmiBlitz3.ab3@1070>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E9CA <AmiBlitz3.ab3@1071> 
0001E9D4 <AmiBlitz3.ab3@1072>   *PreProcessor.preprocessor = preproc_Create{}
0001E9E4 <AmiBlitz3.ab3@1073>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001EA16 <AmiBlitz3.ab3@1074>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001EA2C <AmiBlitz3.ab3@1075>   If *PreProcessor\tokens=Null
0001EAA6 <AmiBlitz3.ab3@1076>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001EAB0 <AmiBlitz3.ab3@1077>     preproc_QueryTokens{*PreProcessor}
0001EAE2 <AmiBlitz3.ab3@1078>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001EB2E <AmiBlitz3.ab3@1086>   If cli_sourcefile><"" AND err=False
0001EBD4 <AmiBlitz3.ab3@1087>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001EC06 <AmiBlitz3.ab3@1088>     succ=LoadSource{cli_sourcefile}
0001EC10 <AmiBlitz3.ab3@1089>     If succ
0001EC48 <AmiBlitz3.ab3@1090> 
0001ECC2 <AmiBlitz3.ab3@1091>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001ED04 <AmiBlitz3.ab3@1092> 
0001ED0E <AmiBlitz3.ab3@1094>         If comerr
0001ED14 <AmiBlitz3.ab3@1096>         Else
0001ED1A <AmiBlitz3.ab3@1100>     Else
0001ED6A <AmiBlitz3.ab3@1101>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EDB6 <AmiBlitz3.ab3@1105>   If cli_savefile><"" AND err=False
0001EE30 <AmiBlitz3.ab3@1106>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EE5E <AmiBlitz3.ab3@1107>     SaveSource{cli_savefile}
0001EEAA <AmiBlitz3.ab3@1110>   If cli_dumpfile><"" AND err=False
0001EEF4 <AmiBlitz3.ab3@1111>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EF2A <AmiBlitz3.ab3@1112>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EF34 <AmiBlitz3.ab3@1115>   If cli_run
0001EF48 <AmiBlitz3.ab3@1116>     If comerr=False
0001EF74 <AmiBlitz3.ab3@1117>       If cli_exefile
0001EFEE <AmiBlitz3.ab3@1118>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001F024 <AmiBlitz3.ab3@1119> 
0001F06E <AmiBlitz3.ab3@1121>       If cli_verbose>=1 Then NPrint "Running program..."
0001F07C <AmiBlitz3.ab3@1122> 
0001F07E <AmiBlitz3.ab3@1124>         CLR.l d0
0001F0BC <AmiBlitz3.ab3@1125>         !ComData_GetB{comByte_RunningFlag,D0}
0001F0C0 <AmiBlitz3.ab3@1126>         running.l = PutD0
0001F0DC <AmiBlitz3.ab3@1127>         If running Then Delay_ 50
0001F0F0 <AmiBlitz3.ab3@1129>       Until running=False
0001F104 <AmiBlitz3.ab3@1130>       If Peek.l(?_runerror)
0001F154 <AmiBlitz3.ab3@1131>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001F164 <AmiBlitz3.ab3@1142>   preproc_Free{*PreProcessor} : *PreProcessor=Null
0001F1AE <AmiBlitz3.ab3@1143>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001F1B4 <AmiBlitz3.ab3@1144>   DeinitEmulatedPED{}
0001F1D2 <AmiBlitz3.ab3@1146>   !asm
0001F1D8 <AmiBlitz3.ab3@1147> JMP terminate_ab3
0001F1DE <AmiBlitz3.ab3@1153>   MOVEA.l ped_startup_addr,A1
0001F1E4 <AmiBlitz3.ab3@1154>   LEA str_tempfilename,A0
0001F1E6 <AmiBlitz3.ab3@1155>   JSR (A1)            ;goto editor with filename!
0001F1EC <AmiBlitz3.ab3@1162>   MOVE.l signalNum,D0
0001F1F2 <AmiBlitz3.ab3@1163>   MOVEA.l _execbase,A6
0001F1F6 <AmiBlitz3.ab3@1164>   JSR _FreeSignal(A6)
0001F1FC <AmiBlitz3.ab3@1166>   MOVE.l ptr_seg_debugger,D1
0001F200 <AmiBlitz3.ab3@1167>   BEQ.b 'noseg
0001F204 <AmiBlitz3.ab3@1168>     MOVEA.l _dosbase(PC),A6
0001F208 <AmiBlitz3.ab3@1169>     JSR _UnLoadSeg(A6)
0001F20C <AmiBlitz3.ab3@1172>   BSR.w Aclearallvars
0001F210 <AmiBlitz3.ab3@1173>   BSR.w free_residents
0001F216 <AmiBlitz3.ab3@1174>   JSR free_blitzlibs
0001F21C <AmiBlitz3.ab3@1177>   MOVE.l ptr_seg_ped,D1
0001F220 <AmiBlitz3.ab3@1178>   BEQ freemem_and_quit
0001F224 <AmiBlitz3.ab3@1179>   MOVEA.l _dosbase(PC),A6
0001F228 <AmiBlitz3.ab3@1180>   JSR _UnLoadSeg(A6)
0001F22C <AmiBlitz3.ab3@1181>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001F256 <AmiBlitz3.ab3@1184>   !basic
0001F31A <AmiBlitz3.ab3@1185> 
0001F338 <AmiBlitz3.ab3@1186>   !asm
0001F33C <AmiBlitz3.ab3@1187>   BRA freemem_and_quit
0001F366 <AmiBlitz3.ab3@1190>   !basic
0001F42A <AmiBlitz3.ab3@1191>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F448 <AmiBlitz3.ab3@1192>   !asm
0001F44C <AmiBlitz3.ab3@1196>   BSR.w freeallox
0001F452 <AmiBlitz3.ab3@1198>   MOVEA.l ptr_macrobuffer_begin,A1
0001F454 <AmiBlitz3.ab3@1200>   MOVE.l -(a1),D0
0001F456 <AmiBlitz3.ab3@1201>   ADDQ.l #4,d0
0001F45C <AmiBlitz3.ab3@1203>   MOVEA.l _execbase,A6
0001F460 <AmiBlitz3.ab3@1204>   JSR _FreeMem(A6)
0001F466 <AmiBlitz3.ab3@1207>   MOVEA.l _dosbase,A1
0001F46C <AmiBlitz3.ab3@1208>   MOVEA.l _execbase,A6
0001F470 <AmiBlitz3.ab3@1209>   JSR _CloseLibrary(A6)
0001F476 <AmiBlitz3.ab3@1211>   MOVEA.l constpcat,A1
0001F47C <AmiBlitz3.ab3@1212>   MOVE.l constmaxpc,D0
0001F482 <AmiBlitz3.ab3@1213>   MOVEA.l _execbase,A6
0001F486 <AmiBlitz3.ab3@1214>   JSR _FreeMem(A6)
0001F48C <AmiBlitz3.ab3@1217>   MOVEA.l _mathffpbase,A1
0001F492 <AmiBlitz3.ab3@1218>   MOVEA.l _execbase,A6
0001F496 <AmiBlitz3.ab3@1219>   JSR _CloseLibrary(A6)
0001F49C <AmiBlitz3.ab3@1223>   TST.l mempool2                    ; test if mempool2 is allocated
0001F4A0 <AmiBlitz3.ab3@1224>   BEQ shutdown_compiler             ; no jump
0001F4A6 <AmiBlitz3.ab3@1225>   MOVEA.l _execbase,A6              ; yes delete it to free the memory
0001F4AC <AmiBlitz3.ab3@1226>   MOVE.l mempool2,a0
0001F4B0 <AmiBlitz3.ab3@1227>   JSR _DeletePool(a6)
0001F4B6 <AmiBlitz3.ab3@1228>   CLR.l mempool2
0001F4BC <AmiBlitz3.ab3@1231>   MOVEA.l _execbase,A6
0001F4C2 <AmiBlitz3.ab3@1232>   MOVE.l mempool,a0
0001F4C6 <AmiBlitz3.ab3@1233>   JSR _DeletePool(a6)
0001F4CC <AmiBlitz3.ab3@1234>   CLR.l pushat
0001F4D2 <AmiBlitz3.ab3@1235>   CLR.l mempool
0001F4D8 <AmiBlitz3.ab3@1237>   JSR free_unusedfunctions
0001F4DA <AmiBlitz3.ab3@1238>   MOVEQ #0,d0
0001F4E8 <AmiBlitz3.ab3@1241>   !exitasm
0001F520 <AmiBlitz3.ab3@1242>   If dynassign<>""
0001F52A <AmiBlitz3.ab3@1243>     If *AssignSema
0001F53A <AmiBlitz3.ab3@1244>       ReleaseSemaphore_ *AssignSema
0001F552 <AmiBlitz3.ab3@1245>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F5E6 <AmiBlitz3.ab3@1246>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F620 <AmiBlitz3.ab3@1247>         dos_RemAssign{dynassign}
0001F630 <AmiBlitz3.ab3@1248>         RemSemaphore_ *AssignSema
0001F640 <AmiBlitz3.ab3@1249>         ReleaseSemaphore_ *AssignSema
0001F672 <AmiBlitz3.ab3@1250>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = Null
0001F682 <AmiBlitz3.ab3@1251>         FreeVec_ *AssignSema
0001F688 <AmiBlitz3.ab3@1252>         *AssignSema = Null
0001F6B6 <AmiBlitz3.ab3@1256>   SetCurrentDir{cli_path}
0001F6D8 <AmiBlitz3.ab3@1257>   !coutclose
0001F6DE <AmiBlitz3.ab3@1258> End
0001F6EA <AmiBlitz3.ab3@1262> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F6EE <AmiBlitz3.ab3@1263> _dosbase:           Ds.l 1
0001F6F4 <AmiBlitz3.ab3@1267>   MOVEA.l _execbase,A6
0001F6FA <AmiBlitz3.ab3@1268>   LEA str_doslibrary,A1
0001F6FE <AmiBlitz3.ab3@1269>   JSR _OldOpenLibrary(A6)
0001F704 <AmiBlitz3.ab3@1270>   MOVE.l D0,_dosbase
0001F706 <AmiBlitz3.ab3@1271> RTS
0001F70C <AmiBlitz3.ab3@1275>   MOVEA.l #str_mathffpname,A1
0001F712 <AmiBlitz3.ab3@1276>   MOVEA.l _execbase,A6
0001F716 <AmiBlitz3.ab3@1277>   JSR _OldOpenLibrary(A6)
0001F71C <AmiBlitz3.ab3@1278>   MOVE.l D0,_mathffpbase
0001F71E <AmiBlitz3.ab3@1279> RTS
0001F750 <AmiBlitz3.ab3@1286> !ComData_JMP{comFunc_SetNormalPointer}
0001F782 <AmiBlitz3.ab3@1293> !ComData_JMP{comFunc_SetBusyPointer}
0001F7AC <AmiBlitz3.ab3@1297>   !basic
0001F7B0 <AmiBlitz3.ab3@1298>   ab3save_filenameP.l = PutD0
0001F7BA <AmiBlitz3.ab3@1299>   If ab3save_filenameP
0001F7E2 <AmiBlitz3.ab3@1300>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F810 <AmiBlitz3.ab3@1302>     SaveSource{ab3save_filename}
0001F816 <AmiBlitz3.ab3@1303>   Else
0001F850 <AmiBlitz3.ab3@1304>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F86E <AmiBlitz3.ab3@1306>   !asm
0001F870 <AmiBlitz3.ab3@1307>   RTS
0001F89A <AmiBlitz3.ab3@1310>   !basic
0001F89E <AmiBlitz3.ab3@1311>   ab3save_filenameP.l = PutD0
0001F8A8 <AmiBlitz3.ab3@1312>   If ab3save_filenameP
0001F8D0 <AmiBlitz3.ab3@1313>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F8FE <AmiBlitz3.ab3@1314>     LoadSource{ab3save_filename}
0001F904 <AmiBlitz3.ab3@1315>   Else
0001F93E <AmiBlitz3.ab3@1316>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F95C <AmiBlitz3.ab3@1318>   !asm
0001F95E <AmiBlitz3.ab3@1319>   RTS
0001F988 <AmiBlitz3.ab3@1322>   !basic
0001F98E <AmiBlitz3.ab3@1323>   ClearSource{}
0001F9AC <AmiBlitz3.ab3@1324>   !asm
0001F9AE <AmiBlitz3.ab3@1325>   RTS
0001F9D8 <AmiBlitz3.ab3@1328>   !basic
0001F9DE <AmiBlitz3.ab3@1329>   OpenConsoleFake{}
0001F9FC <AmiBlitz3.ab3@1330>   !asm
0001F9FE <AmiBlitz3.ab3@1331>   RTS
0001FA28 <AmiBlitz3.ab3@1335>   !basic
0001FA2E <AmiBlitz3.ab3@1336>   CloseConsoleFake{}
0001FA4C <AmiBlitz3.ab3@1337>   !asm
0001FA4E <AmiBlitz3.ab3@1338>   RTS
0001FA54 <AmiBlitz3.ab3@1343>   MOVE.w d6,menuitemdebug
0001FA7E <AmiBlitz3.ab3@1344>   !basic
0001FA90 <AmiBlitz3.ab3@1345>   menuitemx.l = Peek.w(?menuitemdebug)
0001FAB6 <AmiBlitz3.ab3@1346>   If menuitemx>16 OR  menuitemx<0
0001FB2A <AmiBlitz3.ab3@1347>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001FB32 <AmiBlitz3.ab3@1348>     menuitemx=0
0001FB42 <AmiBlitz3.ab3@1350>   Poke.w ?menuitemdebug,menuitemx
0001FB60 <AmiBlitz3.ab3@1351>   !asm
0001FB66 <AmiBlitz3.ab3@1352>   MOVE.w menuitemdebug,d6
0001FB6C <AmiBlitz3.ab3@1356>   MOVE.l A5,firstitem_
0001FB72 <AmiBlitz3.ab3@1357>   MOVE.w D7,numlines_org
0001FB78 <AmiBlitz3.ab3@1359>   MOVE.l d7,numlines
0001FB7A <AmiBlitz3.ab3@1361>   LSL.w #2,D6
0001FB80 <AmiBlitz3.ab3@1362>   LEA menu_items,A0
0001FB84 <AmiBlitz3.ab3@1363>   MOVEA.l $0(A0,D6.W),A0
0001FB8E <AmiBlitz3.ab3@1364>   MOVE.l #$FFFFffff,linenumat             ; was -1
0001FB98 <AmiBlitz3.ab3@1365>   MOVE.l #$FFFFffff,compilelinecounter    ; was -1
0001FB9A <AmiBlitz3.ab3@1366>   JSR (A0)                              ; jsr to the function for the menuitem
0001FBA0 <AmiBlitz3.ab3@1367>   MOVE.l compilelinecounter,D0
0001FBA2 <AmiBlitz3.ab3@1368> RTS
0001FBA6 <AmiBlitz3.ab3@1370> menuitemdebug: Dc.l 0
0001FBAA <AmiBlitz3.ab3@1372> mempool                Dc.l 0
0001FBC0 <AmiBlitz3.ab3@1373> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even        ; was dtext org source
0001FBC6 <AmiBlitz3.ab3@1374> dloaderr:              JSR handle_compileerror
0001FBE2 <AmiBlitz3.ab3@1375>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001FC20 <AmiBlitz3.ab3@1383>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FC26 <AmiBlitz3.ab3@1384>   LEA str_loaddebugmessage,A2
0001FC2C <AmiBlitz3.ab3@1385>   LEA str_blitz3assign,A0
0001FC32 <AmiBlitz3.ab3@1386>   LEA str_temp_debugmodulename,A1
0001FC34 <AmiBlitz3.ab3@1387>   JSR (A3)                                                  ;open ped filerequest
0001FC38 <AmiBlitz3.ab3@1388>   BEQ.w nodload
0001FC3E <AmiBlitz3.ab3@1393>   MOVE.l D0,ptr_temp_debugmodule
0001FC42 <AmiBlitz3.ab3@1394>   BSR.w call_setpointerbusy
0001FC48 <AmiBlitz3.ab3@1396> 
0001FC4E <AmiBlitz3.ab3@1398>   MOVE.l A7,errstack
0001FC58 <AmiBlitz3.ab3@1399>   MOVE.l #nodload,errcont
0001FC5E <AmiBlitz3.ab3@1400>   MOVE.l ptr_temp_debugmodule,D1
0001FC62 <AmiBlitz3.ab3@1402>   MOVEA.l _dosbase(PC),A6
0001FC66 <AmiBlitz3.ab3@1403>   JSR _LoadSeg(A6)
0001FC68 <AmiBlitz3.ab3@1404>   MOVE.l D0,D7
0001FC6C <AmiBlitz3.ab3@1405>   BEQ.w dloaderr
0001FC72 <AmiBlitz3.ab3@1406>   MOVE.l ptr_seg_debugger,D1
0001FC76 <AmiBlitz3.ab3@1407>   BEQ.b 'ndseg
0001FC7A <AmiBlitz3.ab3@1408>   MOVEA.l _dosbase(PC),A6
0001FC7E <AmiBlitz3.ab3@1409>   JSR _UnLoadSeg(A6)
0001FC82 <AmiBlitz3.ab3@1410>   BSR.w call_setpointernormal
0001FC88 <AmiBlitz3.ab3@1413>   MOVE.l D7,ptr_seg_debugger
0001FC8A <AmiBlitz3.ab3@1416> RTS
0001FCA8 <AmiBlitz3.ab3@1419> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FD68 <AmiBlitz3.ab3@1420> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FE28 <AmiBlitz3.ab3@1421> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FE2C <AmiBlitz3.ab3@1422> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FE56 <AmiBlitz3.ab3@1426>   !basic
0001FE80 <AmiBlitz3.ab3@1427>   exepath.s = Peek.s(?exepath)
0001FEAA <AmiBlitz3.ab3@1428>   exefile.s = Peek.s(?exefilename)
0001FEE2 <AmiBlitz3.ab3@1429>   If exefile <> ""                                         ; test if we have a filename
0001FF1A <AmiBlitz3.ab3@1430>     If exepath <> ""                                       ; yes we have a filename ,test if we have a path
0001FF5E <AmiBlitz3.ab3@1431>       If dos_Exist{exepath}= False Then Goto nonexistpath  ; yes we have a path, test if he exist
0001FFDE <AmiBlitz3.ab3@1433>     exefile.s = dos_AddPart{exepath,exefile}               ; combinat path and filename
00020016 <AmiBlitz3.ab3@1434>     Poke.s ?tempspace,exefile
00020034 <AmiBlitz3.ab3@1435>     !asm
0002003A <AmiBlitz3.ab3@1456>     LEA tempspace,a0
0002003C <AmiBlitz3.ab3@1457>     MOVE.l a0,d0
00020040 <AmiBlitz3.ab3@1458>    BRA newcreate2                                         ; jump to the compile
0002005E <AmiBlitz3.ab3@1462>    !asm
00020088 <AmiBlitz3.ab3@1468>   !basic
000200B2 <AmiBlitz3.ab3@1469>   request_exename.s = Peek.s(?str_request_exename )
0002010E <AmiBlitz3.ab3@1470>   request_exename   = !TRANS{request_exename}
00020114 <AmiBlitz3.ab3@1471>   GetD0 &request_exename
00020132 <AmiBlitz3.ab3@1472>   !asm
00020134 <AmiBlitz3.ab3@1473>   MOVE.l D0,A2
00020172 <AmiBlitz3.ab3@1477>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00020178 <AmiBlitz3.ab3@1479>   LEA exepath,A0
0002017E <AmiBlitz3.ab3@1480>   LEA exefilename,A1
00020180 <AmiBlitz3.ab3@1481>   JSR (A3)                                                 ;open ped filerequest
00020184 <AmiBlitz3.ab3@1483>   BEQ.w cancel_createexe    ; was 'err
0002018E <AmiBlitz3.ab3@1487>   ADD.l #1,number_of_builds
00020194 <AmiBlitz3.ab3@1491>   MOVE.l D0,ptr_newexefilename
0002019C <AmiBlitz3.ab3@1492>   MOVE.w #-1,debugversion
000201A4 <AmiBlitz3.ab3@1498>     MOVE.w #1,makeexec
000201AA <AmiBlitz3.ab3@1499>     JSR ab3_OpenDebugFile
000201AE <AmiBlitz3.ab3@1501>     BSR.w startcompile
000201B4 <AmiBlitz3.ab3@1503>     JSR ab3_CloseDebugFile
000201BE <AmiBlitz3.ab3@1505>     CMP.l #"NORE",reqmode
000201C2 <AmiBlitz3.ab3@1506>   BEQ 'l1
000201C8 <AmiBlitz3.ab3@1508>   TST.w anyerrs
000201CC <AmiBlitz3.ab3@1509>   BNE.b 'skip
000201D0 <AmiBlitz3.ab3@1510>   BSR.w savefile
000201D2 <AmiBlitz3.ab3@1516> RTS
000201DA <AmiBlitz3.ab3@1520>   MOVE.w #-1,flag_noPED
000201DC <AmiBlitz3.ab3@1521> RTS
000201E4 <AmiBlitz3.ab3@1525>   MOVE.w #-1,flag_noCLI
000201E6 <AmiBlitz3.ab3@1526> RTS
00020210 <AmiBlitz3.ab3@1530>   !basic
00020222 <AmiBlitz3.ab3@1531>     If dbg_fid>=0
00020234 <AmiBlitz3.ab3@1532> 
00020248 <AmiBlitz3.ab3@1533>         file_WriteMem{dbg_fid,&dbg_detokenlinesBuffer,fillcount} ; yes save it
00020250 <AmiBlitz3.ab3@1534>         fillcount = 0                                            ; set it back to zero bytes
0002025A <AmiBlitz3.ab3@1536>       file_Close{dbg_fid}
00020266 <AmiBlitz3.ab3@1537>       dbg_fid = -1
00020276 <AmiBlitz3.ab3@1539>     Poke.w ?word_WriteDebugFileNow,0
00020294 <AmiBlitz3.ab3@1540>   !asm
00020296 <AmiBlitz3.ab3@1541> RTS
0002029A <AmiBlitz3.ab3@1545>   BSR ab3_CloseDebugFile     ; remove double code and replaced it with a call of the subroutine  tomsmart1
000202C4 <AmiBlitz3.ab3@1546>   !basic
000202D6 <AmiBlitz3.ab3@1547>     If dbg_fid.l<0
000202D8 <AmiBlitz3.ab3@1548>       CLR.l d0
00020316 <AmiBlitz3.ab3@1549>       !ComData_GetW{comWord_CreateDebugFile,D0}
0002031A <AmiBlitz3.ab3@1550>       dbg_Create.l = PutD0
00020324 <AmiBlitz3.ab3@1551>       If (dbg_Create) ; only when set!
00020334 <AmiBlitz3.ab3@1552>         exefileP.l = Peek.l (?ptr_newexefilename)
0002035C <AmiBlitz3.ab3@1553>         exefile.s = ""
0002038E <AmiBlitz3.ab3@1554>         If exefileP Then exefile.s = Peek.s(exefileP)
000203C6 <AmiBlitz3.ab3@1555>         If exefile><""
0002041C <AmiBlitz3.ab3@1556>           dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0002042E <AmiBlitz3.ab3@1557>           If dbg_fid>=0
00020440 <AmiBlitz3.ab3@1558>             Poke.w ?word_WriteDebugFileNow,-1
0002044C <AmiBlitz3.ab3@1561>         oldhunkoffset.l = -1
00020474 <AmiBlitz3.ab3@1562>         oldfile.s       = ""
0002047C <AmiBlitz3.ab3@1563>         fillcount       = 0       ; set it to zero bytes in the buffer
0002049A <AmiBlitz3.ab3@1566>   !asm
0002049C <AmiBlitz3.ab3@1567> RTS
000204A2 <AmiBlitz3.ab3@1571>   TST.w word_WriteDebugFileNow
000204A6 <AmiBlitz3.ab3@1572>   BEQ 'skipdebugfile
000204D0 <AmiBlitz3.ab3@1573>   !basic
000204E2 <AmiBlitz3.ab3@1574>     If dbg_fid>=0
000204F4 <AmiBlitz3.ab3@1575>       pass.l          = Peek.w(?pass)
00020506 <AmiBlitz3.ab3@1576>       makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0002052A <AmiBlitz3.ab3@1577> 
00020530 <AmiBlitz3.ab3@1578>         oldhunkoffset.l = hunkoffset.l
00020564 <AmiBlitz3.ab3@1579>         oldfile.s       = codefile.s
00020580 <AmiBlitz3.ab3@1580>         If Peek.w (?ininclude)>0
00020590 <AmiBlitz3.ab3@1581>           codeline.l = Peek.l(?includeline);-1
00020600 <AmiBlitz3.ab3@1582>           codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
00020606 <AmiBlitz3.ab3@1583>         Else
00020634 <AmiBlitz3.ab3@1584>           !ComData_LEA{comStr_SourceName,A0}
00020636 <AmiBlitz3.ab3@1585>           MOVE.l A0,D0
0002063A <AmiBlitz3.ab3@1586>           sourceP.l = PutD0
00020662 <AmiBlitz3.ab3@1587>           codefile.s = Peek.s(sourceP)
00020672 <AmiBlitz3.ab3@1588>           codeline.l = Peek.l(?linenumat)
0002069A <AmiBlitz3.ab3@1590>         hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
000206EE <AmiBlitz3.ab3@1591>         If oldhunkoffset><hunkoffset OR oldfile><codefile
00020790 <AmiBlitz3.ab3@1592>           linebegintext.s = Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "
000207A4 <AmiBlitz3.ab3@1593>           linebeginlen.l  = FLen(linebegintext)
000207E2 <AmiBlitz3.ab3@1594>           Poke.s &dbg_detokenlinesBuffer+fillcount,linebegintext           ; copy the begin of the line text to the buffer
000207F0 <AmiBlitz3.ab3@1595>           fillcount + linebeginlen
00020800 <AmiBlitz3.ab3@1597>           *sourceLine.SourceLine_t = Peek.l(?sourceline)
0002080A <AmiBlitz3.ab3@1598>           If *sourceLine
0002084C <AmiBlitz3.ab3@1599>             !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002085C <AmiBlitz3.ab3@1600>             *tn.preprocessor = Peek.l(?include_preprocessor)
0002088E <AmiBlitz3.ab3@1601>             written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&dbg_detokenlinesBuffer+fillcount,*sourceLine\CharLength}
000208A0 <AmiBlitz3.ab3@1602>             If written>0
000208AE <AmiBlitz3.ab3@1603>               written-1
000208BC <AmiBlitz3.ab3@1605>             fillcount + written                                            ; added the dekotenline size to the count
000208C2 <AmiBlitz3.ab3@1606>           Else
000208F4 <AmiBlitz3.ab3@1607>             Poke.s &dbg_detokenlinesBuffer+fillcount,"NULL"                ; copy it to the buffer
00020902 <AmiBlitz3.ab3@1608>             fillcount + 4                                                  ; added the size to the count
00020918 <AmiBlitz3.ab3@1611>           Poke.b &dbg_detokenlinesBuffer+fillcount,10                      ; copy line end (return) in to the buffer
00020926 <AmiBlitz3.ab3@1612>           fillcount +1                                                     ; count +1
00020938 <AmiBlitz3.ab3@1614>           If fillcount >= (#MAX_dbg_detokenlinesBufferSize - #MAX_Columns) ; check if we have no room for a nother line
0002094C <AmiBlitz3.ab3@1615>             file_WriteMem{dbg_fid,&dbg_detokenlinesBuffer,fillcount}       ; no room write the buffer it do disk
00020954 <AmiBlitz3.ab3@1616>             fillcount = 0                                                  ; set it back to zero bytes
00020972 <AmiBlitz3.ab3@1622>   !asm
00020974 <AmiBlitz3.ab3@1625> RTS
00020976 <AmiBlitz3.ab3@1627> word_WriteDebugFileNow: Dc.w 0
00020978 <AmiBlitz3.ab3@1631> flag_noPED:  Ds.w 1                                        ;closeed org source
0002097A <AmiBlitz3.ab3@1632> flag_noCLI:  Ds.w 1                                        ;nocli org source
0002097E <AmiBlitz3.ab3@1636>   MOVEM.l A2-A3,-(A7)
00020984 <AmiBlitz3.ab3@1637>   CLR.b doublepeek
0002098A <AmiBlitz3.ab3@1638>   MOVE.l A5,lastsourcepos
00020990 <AmiBlitz3.ab3@1639>    JSR getchar
00020994 <AmiBlitz3.ab3@1640>   CMP.w #$2E,D0              ;'.'
00020998 <AmiBlitz3.ab3@1641>    BEQ.w 'ok
0002099E <AmiBlitz3.ab3@1642>   MOVEA.l defaulttype,A2
000209A2 <AmiBlitz3.ab3@1643>   CMP.w #$24,D0              ;'$'
000209A6 <AmiBlitz3.ab3@1644>    BNE.w 'none
000209A8 <AmiBlitz3.ab3@1645>   MOVEQ.l #$07,D1
000209AC <AmiBlitz3.ab3@1646>  BRA.w 'skip
000209B2 <AmiBlitz3.ab3@1649>   JSR getparameter2
000209B6 <AmiBlitz3.ab3@1650>   BEQ.w JUMP_syntaxerr1
000209BC <AmiBlitz3.ab3@1651>   LEA newtypebase,A2
000209C2 <AmiBlitz3.ab3@1652>   JSR findtype
000209C6 <AmiBlitz3.ab3@1653>   BNE.w JUMP_notypeerr1
000209D0 <AmiBlitz3.ab3@1658>   MOVE.w oldqflag,instringon
000209D6 <AmiBlitz3.ab3@1659>   MOVEA.l lastsourcepos,A5
000209DC <AmiBlitz3.ab3@1661>   MOVE.l a2,functionreturntype
000209E4 <AmiBlitz3.ab3@1662>   CMPI.l #$100,$4(A2)
000209E8 <AmiBlitz3.ab3@1663>   BLE.w 'isvar
000209EA <AmiBlitz3.ab3@1667>   MOVEQ #3,d1
000209EE <AmiBlitz3.ab3@1668>   BRA 'skip
000209F2 <AmiBlitz3.ab3@1678>   MOVE.w $6(A2),D1
000209F8 <AmiBlitz3.ab3@1680>   CMP.w #8,8(a2)
000209FC <AmiBlitz3.ab3@1681>   BNE 'l1
00020A04 <AmiBlitz3.ab3@1682>   MOVE.b #1,doublepeek
00020A0A <AmiBlitz3.ab3@1687>   MOVE.w D1,convsize
00020A0E <AmiBlitz3.ab3@1688>   MOVEM.l (A7)+,A2-A3
00020A10 <AmiBlitz3.ab3@1689> RTS
00020A16 <AmiBlitz3.ab3@1691> JUMP_notypeerr1  JMP notypeerr
00020A1C <AmiBlitz3.ab3@1692> JUMP_illtypeerr1 JMP illtypeerr
00020A22 <AmiBlitz3.ab3@1693> JUMP_syntaxerr1  JMP syntaxerr
00020A26 <AmiBlitz3.ab3@1698>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00020A2C <AmiBlitz3.ab3@1699>   MOVEA.l _execbase,A6
00020A32 <AmiBlitz3.ab3@1700>   TST.b MorphOS                    ; test if we have MorphOS ( 0 no, 1 yes)
00020A36 <AmiBlitz3.ab3@1701>    BEQ 'useclearU                  ; if we have 0 = No MorpOS then jump
00020A38 <AmiBlitz3.ab3@1703>   MOVEQ.l #8,d1
00020A3E <AmiBlitz3.ab3@1704>   MOVE.l #200,d0
00020A42 <AmiBlitz3.ab3@1705>   JSR _CacheClearE(A6)
00020A46 <AmiBlitz3.ab3@1706>  BRA 'exit
00020A4A <AmiBlitz3.ab3@1745>   JSR _CacheClearU(A6)
00020A4E <AmiBlitz3.ab3@1748>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00020A50 <AmiBlitz3.ab3@1749> RTS
00020A5A <AmiBlitz3.ab3@1757>   ADD.l #1,number_of_builds
00020A60 <AmiBlitz3.ab3@1759>   CLR.w debugversion
00020A66 <AmiBlitz3.ab3@1760>   CLR.w flag_noPED
00020A6C <AmiBlitz3.ab3@1761>   CLR.w flag_noCLI
00020A74 <AmiBlitz3.ab3@1765>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020A78 <AmiBlitz3.ab3@1767>     BSR.w startcompile
00020A82 <AmiBlitz3.ab3@1769>     CMP.l #"NORE",reqmode
00020A86 <AmiBlitz3.ab3@1770>   BEQ 'l1
00020A8C <AmiBlitz3.ab3@1776>   TST.w anyerrs
00020A90 <AmiBlitz3.ab3@1777>    BNE.w 'dontrun
00020A94 <AmiBlitz3.ab3@1779>   MOVE.w flag_noPED(PC),D1
00020A98 <AmiBlitz3.ab3@1780>    BEQ.w 'noclose
00020ACA <AmiBlitz3.ab3@1784>   !ComData_JSR{comFunc_CloseGUI}
00020ACE <AmiBlitz3.ab3@1785>  BRA.b 'runprogram
00020AD2 <AmiBlitz3.ab3@1789>   BSR.w compilerequester
00020AD8 <AmiBlitz3.ab3@1794>   MOVEA.l _dosbase,A6
00020ADE <AmiBlitz3.ab3@1796>   LEA exepath,a0
00020AE0 <AmiBlitz3.ab3@1797>   MOVE.l a0,d1
00020AE2 <AmiBlitz3.ab3@1798>   MOVEQ #-2,d2
00020AE6 <AmiBlitz3.ab3@1799>   JSR _Lock(a6)                                            ;lock
00020AEC <AmiBlitz3.ab3@1800>   MOVE.l d0,exelock
00020AF2 <AmiBlitz3.ab3@1802>   MOVE.l #0,d1
00020AF6 <AmiBlitz3.ab3@1803>   JSR _CurrentDir(A6)
00020AFC <AmiBlitz3.ab3@1804>   MOVE.l D0,lock_currentdir
00020AFE <AmiBlitz3.ab3@1805>   MOVE.l D0,D1
00020B02 <AmiBlitz3.ab3@1806>   JSR _CurrentDir(A6)
00020B08 <AmiBlitz3.ab3@1808>   CLR.l ptr_exetask
00020B0E <AmiBlitz3.ab3@1817>   MOVE.l #str_process_name,D1
00020B10 <AmiBlitz3.ab3@1818>   MOVEQ.l #$00,D2
00020B16 <AmiBlitz3.ab3@1819>   MOVE.l #proc_seglist,D3
00020B18 <AmiBlitz3.ab3@1820>   LSR.l #2,D3
00020B1E <AmiBlitz3.ab3@1821>   MOVE.l stacksize,D4
00020B24 <AmiBlitz3.ab3@1822>   MOVEA.l _dosbase,A6
00020B28 <AmiBlitz3.ab3@1823>   JSR _CreateProc(A6)                                      ;runtask
00020B2A <AmiBlitz3.ab3@1824>   TST.l D0
00020B2E <AmiBlitz3.ab3@1825>    BEQ 'ErrorRunningProg
00020B64 <AmiBlitz3.ab3@1830>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020B6A <AmiBlitz3.ab3@1834>   TST.w flag_noPED
00020B6E <AmiBlitz3.ab3@1835>    BNE.b 'fatal
00020B72 <AmiBlitz3.ab3@1836>   BSR.w close_compilewin
00020B78 <AmiBlitz3.ab3@1839>   CLR.l firstlocal
00020B7E <AmiBlitz3.ab3@1840>   CLR.l firstglob
00020B82 <AmiBlitz3.ab3@1842>   MOVE.w flag_noPED(PC),D1
00020B86 <AmiBlitz3.ab3@1843>   BEQ.w 'noopen         ;skip_openGUI
00020BB8 <AmiBlitz3.ab3@1847>   !ComData_JSR{comFunc_CreateGUI}
00020BBA <AmiBlitz3.ab3@1857>  RTS
00020BC4 <AmiBlitz3.ab3@1861>   MOVE.l #1,_runerror
00020BC8 <AmiBlitz3.ab3@1862> BRA 'fatal
00020BCC <AmiBlitz3.ab3@1866> _runerror: Dc.l 0
00020BD0 <AmiBlitz3.ab3@1867> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00020BD4 <AmiBlitz3.ab3@1868> ptr_exetask:        Ds.l 1                                          ;panictask org source
00020BD8 <AmiBlitz3.ab3@1869> signalNum:          Ds.l 1                                          ;panicbit org source
00020BDC <AmiBlitz3.ab3@1870> signals:            Ds.l 1                                          ;panicmask org source
00020BF2 <AmiBlitz3.ab3@1872> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
00020BF7 <AmiBlitz3.ab3@1873>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00020BF8 <AmiBlitz3.ab3@1874> Even4
00020BFC <AmiBlitz3.ab3@1876> ptr_ThisTask:       Ds.l 1                                          ;length
00020C00 <AmiBlitz3.ab3@1877> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00020C06 <AmiBlitz3.ab3@1881>   MOVEA.l $4,A0
00020C0E <AmiBlitz3.ab3@1882>   MOVE.l  $114(A0),ptr_exetask
00020C14 <AmiBlitz3.ab3@1884>   MOVEA.l _dosbase,A6
00020C1A <AmiBlitz3.ab3@1885>   MOVE.l exelock,D1
00020C1E <AmiBlitz3.ab3@1886>   JSR _CurrentDir(A6)
00020C54 <AmiBlitz3.ab3@1892>   !ComData_SetB{comByte_RunningFlag,#1}
00020C58 <AmiBlitz3.ab3@1899>   MOVE.w flag_noCLI(PC),D1
00020C5C <AmiBlitz3.ab3@1900>    BNE.b 'skip_openconsole
00020C8E <AmiBlitz3.ab3@1904>   !ComData_JSR{comFunc_OpenConsole}
00020C92 <AmiBlitz3.ab3@1907>   BSR.w calcvbr
00020C98 <AmiBlitz3.ab3@1908>   MOVEA.l vbr,A0
00020C9E <AmiBlitz3.ab3@1913>   CLR.w dirmode
00020CA4 <AmiBlitz3.ab3@1914>   CLR.l firstglob
00020CAA <AmiBlitz3.ab3@1915>   CLR.l firstlocal
00020CB0 <AmiBlitz3.ab3@1919>   MOVE.l stacksize,D2
00020CB6 <AmiBlitz3.ab3@1920>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020CBC <AmiBlitz3.ab3@1921>   LEA str_cliarguments,A0                                   ;cli arguement
00020CC2 <AmiBlitz3.ab3@1922>   MOVEA.l destbufferstart,A1
00020CC6 <AmiBlitz3.ab3@1924>   BSR.w Aclearcache
00020CC8 <AmiBlitz3.ab3@1928>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00020CCE <AmiBlitz3.ab3@1931>   MOVEA.l vbr,A0
00020CD4 <AmiBlitz3.ab3@1933>   CLR.l firstglob
00020CDA <AmiBlitz3.ab3@1934>   CLR.l firstlocal
00020CE0 <AmiBlitz3.ab3@1935>   MOVEA.l _dosbase,A6
00020CE6 <AmiBlitz3.ab3@1936>   MOVE.l exelock,d1
00020CEA <AmiBlitz3.ab3@1937>   BEQ 'nolock
00020CEE <AmiBlitz3.ab3@1938>   JSR _UnLock(a6)
00020D24 <AmiBlitz3.ab3@1943>   !ComData_SetB{comByte_RunningFlag,#0}
00020D28 <AmiBlitz3.ab3@1947>   MOVE.w flag_noCLI(PC),D1
00020D2C <AmiBlitz3.ab3@1948>    BNE.b 'skip_closeconsole
00020D5E <AmiBlitz3.ab3@1952>   !ComData_JSR{comFunc_CloseConsole}
00020D66 <AmiBlitz3.ab3@1955>   MOVE.w #$0001,stopit      ;ended OK!
00020D6A <AmiBlitz3.ab3@1956>   MOVE.l signals(PC),D0
00020D70 <AmiBlitz3.ab3@1957>   MOVEA.l ptr_ThisTask,A1
00020D76 <AmiBlitz3.ab3@1958>   MOVEA.l _execbase,A6
00020D7A <AmiBlitz3.ab3@1959>   JSR _Signal(A6)
00020D7C <AmiBlitz3.ab3@1960> RTS
00020D82 <AmiBlitz3.ab3@1964>   MOVEA.l _execbase,A6
00020D86 <AmiBlitz3.ab3@1965>   MOVE.w $128(A6),D0
00020D88 <AmiBlitz3.ab3@1966>   MOVEQ.l #$00,D1
00020D8C <AmiBlitz3.ab3@1967>   ANDI.w #$F,D0
00020D90 <AmiBlitz3.ab3@1970>     BEQ.b 'skip
00020D92 <AmiBlitz3.ab3@1971>     ADDQ.w #1,D1
00020D94 <AmiBlitz3.ab3@1972>     LSR.w #1,D0
00020D98 <AmiBlitz3.ab3@1973>  BRA.b 'loop
00020D9A <AmiBlitz3.ab3@1976>   MOVEQ.l #$00,D2
00020D9E <AmiBlitz3.ab3@1977>   CMP.w #$2,D1
00020DA2 <AmiBlitz3.ab3@1978>    BCS.b 'skip2
00020DA8 <AmiBlitz3.ab3@1979>   MOVEA.l _execbase,A6
00020DAC <AmiBlitz3.ab3@1980>   JSR _SuperState(A6)
00020DB0 <AmiBlitz3.ab3@1981>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020DB4 <AmiBlitz3.ab3@1982>   JSR _UserState(A6)
00020DBA <AmiBlitz3.ab3@1985>   MOVE.l D2,vbr
00020DBC <AmiBlitz3.ab3@1986> RTS
00020DC2 <AmiBlitz3.ab3@1991>   LEA instrtab,a0
00020DC8 <AmiBlitz3.ab3@1992>   MOVE.l #labelhash-instrtab,d0
00020DCA <AmiBlitz3.ab3@1993>   ASR.l #2,d0
00020DCC <AmiBlitz3.ab3@1994>   SUBQ.l #1,d0
00020DCE <AmiBlitz3.ab3@1997>   CLR.l (a0)+
00020DD0 <AmiBlitz3.ab3@1998>   SUBQ.l #1,d0
00020DD4 <AmiBlitz3.ab3@1999>   BNE 'l10
00020DD8 <AmiBlitz3.ab3@2001>   BSR.w call_setpointerbusy
00020DDC <AmiBlitz3.ab3@2002>   BSR.w free_userlibs
00020DE0 <AmiBlitz3.ab3@2003>   BSR.w scan_for_userlibs
00020DE4 <AmiBlitz3.ab3@2004>   BSR.w loadblitzlibs
00020DE8 <AmiBlitz3.ab3@2005> BRA.w call_setpointernormal
00020E12 <AmiBlitz3.ab3@2017>   !basic
00020E4C <AmiBlitz3.ab3@2018>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020E5C <AmiBlitz3.ab3@2020>   deflibNameP.l = Peek.l(?deflib)
00020E66 <AmiBlitz3.ab3@2021>   If deflibNameP
00020E98 <AmiBlitz3.ab3@2022>     If Peek.s(deflibNameP)<>""
00020EE2 <AmiBlitz3.ab3@2023>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020EE8 <AmiBlitz3.ab3@2024>     Else
00020F22 <AmiBlitz3.ab3@2025>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020F28 <AmiBlitz3.ab3@2027>   Else
00020F62 <AmiBlitz3.ab3@2028>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020F9C <AmiBlitz3.ab3@2029>     error{"INTERNAL: Invalid deflib name pointer!"}
00020FBA <AmiBlitz3.ab3@2031>   !asm
00020FC0 <AmiBlitz3.ab3@2037>   MOVE.l #str_path_userlibs,D1
00020FC2 <AmiBlitz3.ab3@2038>   MOVEQ.l #-$02,D2
00020FC8 <AmiBlitz3.ab3@2039>   MOVEA.l _dosbase,A6
00020FCC <AmiBlitz3.ab3@2040>   JSR _Lock(A6)
00020FCE <AmiBlitz3.ab3@2041>   MOVE.l D0,D7
00020FD2 <AmiBlitz3.ab3@2042>    BEQ.w 'done     ;exit_get_libraries
00020FD4 <AmiBlitz3.ab3@2044>   MOVE.l D7,D1
00020FDA <AmiBlitz3.ab3@2045>   MOVE.l #ptr_parameterstore,D2
00020FDE <AmiBlitz3.ab3@2046>   JSR _Examine(A6)
00020FE0 <AmiBlitz3.ab3@2047>   TST.l D0
00020FE4 <AmiBlitz3.ab3@2048>   BEQ.w 'done2   ;unlock_and_exit_get_libraries
00020FEA <AmiBlitz3.ab3@2049>   MOVE.l fib_DirEntryType,D0
00020FEE <AmiBlitz3.ab3@2050>   BMI.w 'done2   ;unlock_and_exit_get_libraries
00020FF0 <AmiBlitz3.ab3@2058>     MOVE.l D7,D1
00020FF6 <AmiBlitz3.ab3@2059>     MOVE.l #ptr_parameterstore,D2
00020FFC <AmiBlitz3.ab3@2060>     MOVEA.l _dosbase,A6
00021000 <AmiBlitz3.ab3@2061>     JSR _ExNext(A6)
00021002 <AmiBlitz3.ab3@2062>     TST.l D0
00021006 <AmiBlitz3.ab3@2063>      BEQ.w 'ok    ;exit_scan_libsdrawer                            ; kein weiteres File
0002100C <AmiBlitz3.ab3@2065>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00021010 <AmiBlitz3.ab3@2066>     BPL.w 'loop    ;scan_libsdrawer                                  ; skip directories
00021016 <AmiBlitz3.ab3@2068>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0002101A <AmiBlitz3.ab3@2069>     BSR.w check_for_infoextention
0002101E <AmiBlitz3.ab3@2070>     BEQ.w 'loop    ;scan_libsdrawer
00021024 <AmiBlitz3.ab3@2072>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00021026 <AmiBlitz3.ab3@2073>     MOVEQ.l #$26,D0
00021028 <AmiBlitz3.ab3@2074>     MOVEQ.l #$01,D1
0002102E <AmiBlitz3.ab3@2076>     MOVE.l mempool,a0
00021032 <AmiBlitz3.ab3@2077>     JSR _AllocPooled(a6)
00021038 <AmiBlitz3.ab3@2080>     MOVEA.l _dosbase,A6
0002103A <AmiBlitz3.ab3@2082>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00021040 <AmiBlitz3.ab3@2084>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00021042 <AmiBlitz3.ab3@2087>     MOVE.l (A0),D5
00021046 <AmiBlitz3.ab3@2088>      BEQ.w 'here                                       ; kein pointer da? kann springe weiter
00021048 <AmiBlitz3.ab3@2089>     MOVEA.l D5,A2
0002104A <AmiBlitz3.ab3@2090>     ADDQ.w #6,A2                                       ; 6 bytes weiter gehen, um dateinamen zu speichern
00021050 <AmiBlitz3.ab3@2092>     LEA fib_FileName,A1    ;filename                  ; vergleich, ob Dateiname schon in der liste ist
00021052 <AmiBlitz3.ab3@2095>       MOVEQ.l #$00,D0
00021054 <AmiBlitz3.ab3@2096>       MOVE.b (A1)+,D0
00021058 <AmiBlitz3.ab3@2097>        BEQ.w 'here         ;I'm shorter                ; dateiname komplett, dann weiter
0002105A <AmiBlitz3.ab3@2098>       MOVEQ.l #$00,D1
0002105C <AmiBlitz3.ab3@2099>       MOVE.b (A2)+,D1
00021060 <AmiBlitz3.ab3@2100>        BEQ.w 'next         ;I'm longer
00021082 <AmiBlitz3.ab3@2102>       !compare1                                            ;bsr.w tstalpha
00021086 <AmiBlitz3.ab3@2104>       BNE.w 'acskip
0002108A <AmiBlitz3.ab3@2105>       ANDI.w #$DF,D0       ; was 255-32
0002108C <AmiBlitz3.ab3@2108>       EXG.l D0,D1
000210AE <AmiBlitz3.ab3@2110>       !compare1                                            ;bsr.w tstalpha
000210B2 <AmiBlitz3.ab3@2112>       BNE.w 'acskip2
000210B6 <AmiBlitz3.ab3@2113>       ANDI.w #$DF,D0        ; was 255-32
000210B8 <AmiBlitz3.ab3@2116>       EXG.l D0,D1
000210BA <AmiBlitz3.ab3@2117>       CMP.b D1,D0
000210BE <AmiBlitz3.ab3@2118>     BEQ.w 'comloop
000210C2 <AmiBlitz3.ab3@2119>     BCS.w 'here             ;I'm less than
000210C4 <AmiBlitz3.ab3@2122>     MOVEA.l D5,A0
000210C8 <AmiBlitz3.ab3@2123>  BRA.w 'insloop
000210CA <AmiBlitz3.ab3@2126>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
000210CC <AmiBlitz3.ab3@2127>     MOVE.l (A0),(A1)            ;next of last is next of me
000210CE <AmiBlitz3.ab3@2128>     MOVE.l A1,(A0)              ;I am next of last
000210D0 <AmiBlitz3.ab3@2129>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
000210D4 <AmiBlitz3.ab3@2130>     MOVE.w #$FFFF,(A1)+         ; was - 1;set 'Used' flag  ; $FFFF schreiben
000210DA <AmiBlitz3.ab3@2131>     MOVEA.l #fib_FileName,A0    ; was #namebuff+8,         ; dateinamen in die liste kopieren
000210DC <AmiBlitz3.ab3@2134>       MOVE.b (A0)+,(A1)+
000210E0 <AmiBlitz3.ab3@2135>     BNE.w 'coploop
000210E4 <AmiBlitz3.ab3@2136>  BRA.w 'loop    ;scan_libsdrawer
000210E6 <AmiBlitz3.ab3@2139>   MOVE.l D7,D1
000210EC <AmiBlitz3.ab3@2140>   MOVEA.l _dosbase,A6
000210F0 <AmiBlitz3.ab3@2141>   JSR _UnLock(A6)
000210F2 <AmiBlitz3.ab3@2142>   MOVEQ.l #-$01,D0
000210F4 <AmiBlitz3.ab3@2145>  RTS
000210F6 <AmiBlitz3.ab3@2148>   MOVE.l D7,D1
000210FC <AmiBlitz3.ab3@2149>   MOVEA.l _dosbase,A6
00021100 <AmiBlitz3.ab3@2150>   JSR _UnLock(A6)
00021102 <AmiBlitz3.ab3@2151>   MOVEQ.l #$00,D0
00021104 <AmiBlitz3.ab3@2152> RTS
0002110A <AmiBlitz3.ab3@2157>   MOVEA.l _execbase,A6
00021110 <AmiBlitz3.ab3@2158>   MOVEA.l ptr_userlibs_list,A2
00021116 <AmiBlitz3.ab3@2159>   CLR.l ptr_userlibs_list
0002111A <AmiBlitz3.ab3@2162>     CMPA.w #$0,A2
0002111E <AmiBlitz3.ab3@2163>     BEQ.w 'done
00021120 <AmiBlitz3.ab3@2164>       MOVEA.l A2,A1
00021122 <AmiBlitz3.ab3@2165>       MOVEQ.l #$26,D0
00021124 <AmiBlitz3.ab3@2166>       MOVEA.l (A2),A2
0002112A <AmiBlitz3.ab3@2168>       MOVE.l mempool,a0
00021130 <AmiBlitz3.ab3@2169>       MOVEA.l _execbase,A6
00021134 <AmiBlitz3.ab3@2170>       JSR _FreePooled(A6)
00021138 <AmiBlitz3.ab3@2173>  BRA.w 'loop
0002113A <AmiBlitz3.ab3@2176> RTS
0002113C <AmiBlitz3.ab3@2180> pass:  Dc.w 0                                             ; smallpass org source
0002113E <AmiBlitz3.ab3@2181> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00021144 <AmiBlitz3.ab3@2187>   MOVE.l A7,errstack                                      ;startcompile
00021148 <AmiBlitz3.ab3@2189>   !regs2stack
00021150 <AmiBlitz3.ab3@2190>   BTST #$7,make_smallestcode       ; test if makesmall is set
00021154 <AmiBlitz3.ab3@2191>   BNE 'nobigallox                  ; yes makesmall is set, we don't change the buffers
0002115A <AmiBlitz3.ab3@2192>     JSR bigallox                   ; no try to make big buffers for 1 pass compile
0002115E <AmiBlitz3.ab3@2195>   !stack2regs
00021164 <AmiBlitz3.ab3@2206>   CLR.l reqmode
0002116E <AmiBlitz3.ab3@2208>   MOVE.l #Aclearallvars,errcont
00021178 <AmiBlitz3.ab3@2209>   MOVE.l #concomstack,concomsp
0002117C <AmiBlitz3.ab3@2218>   MOVE.w #1450,D0
0002117E <AmiBlitz3.ab3@2220>   LSR.w #3,D0
00021180 <AmiBlitz3.ab3@2221>   SUBQ.w #7,D0                                             ; 173
00021186 <AmiBlitz3.ab3@2222>   MOVE.w D0,progressbar_width
00021188 <AmiBlitz3.ab3@2223>   SWAP D0
0002118A <AmiBlitz3.ab3@2224>   CLR.w D0
00021190 <AmiBlitz3.ab3@2225>   MOVE.l numlines,d1           ; was divu numlines,d0
00021194 <AmiBlitz3.ab3@2226>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00021196 <AmiBlitz3.ab3@2228>   TST.w D0
0002119A <AmiBlitz3.ab3@2229>   BNE.w 'ok
0002119C <AmiBlitz3.ab3@2230>   MOVEQ.l #-$01,D0
000211A2 <AmiBlitz3.ab3@2233>   MOVE.w D0,progress_per_line
000211AA <AmiBlitz3.ab3@2243>   BTST #$7,use_debugger
000211AE <AmiBlitz3.ab3@2246>   BNE 'debugon
000211B4 <AmiBlitz3.ab3@2247>   CLR.w debugmode
000211B8 <AmiBlitz3.ab3@2248>  BRA.b 'debugoff
000211BE <AmiBlitz3.ab3@2251>   SNE debugmode
000211F6 <AmiBlitz3.ab3@2259>   !ComData_SetB{comByte_DebugMode,debugmode}
000211FC <AmiBlitz3.ab3@2262>   CLR.w dirmode           ;direct mode flag                                  ;direct mode flag
00021202 <AmiBlitz3.ab3@2263>   CLR.w ezerr             ;quiet error                                 ;quiet error
00021208 <AmiBlitz3.ab3@2264>   CLR.l currentfunction
0002120E <AmiBlitz3.ab3@2265>   CLR.w connest
00021214 <AmiBlitz3.ab3@2266>   CLR.w varmode
0002121A <AmiBlitz3.ab3@2267>   CLR.w proceduremode
00021220 <AmiBlitz3.ab3@2268>   CLR.w ininclude
00021226 <AmiBlitz3.ab3@2269>   CLR.w intstring
0002122C <AmiBlitz3.ab3@2270>   CLR.w pass
00021234 <AmiBlitz3.ab3@2272>   MOVE.w #0,compiler_job
0002123A <AmiBlitz3.ab3@2273>   CLR.l errorcounter
00021240 <AmiBlitz3.ab3@2274> 
00021246 <AmiBlitz3.ab3@2286>   CLR.l funcscanon
0002124A <AmiBlitz3.ab3@2288>   BSR.w compileall
00021250 <AmiBlitz3.ab3@2290>   ADDQ.w #1,pass
00021254 <AmiBlitz3.ab3@2291> 
0002127E <AmiBlitz3.ab3@2292>   !basic
00021286 <AmiBlitz3.ab3@2293>   samesize.l = 0
000212AE <AmiBlitz3.ab3@2294>   needsize0.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)
000212CC <AmiBlitz3.ab3@2295>   !asm
000212D0 <AmiBlitz3.ab3@2296>   !stack2regs
000212D6 <AmiBlitz3.ab3@2298>   TST.l errorcounter
000212DA <AmiBlitz3.ab3@2299>   BEQ 'skiperrorstop
000212DC <AmiBlitz3.ab3@2300>  RTS
000212E2 <AmiBlitz3.ab3@2303>   MOVE.w dontwrite_nomemleft,d0
000212E6 <AmiBlitz3.ab3@2304>   CMP.w #1,d0
000212EA <AmiBlitz3.ab3@2305>   BNE 'l3
000212F0 <AmiBlitz3.ab3@2306>   TST.l errorcounter
000212F4 <AmiBlitz3.ab3@2307>   BNE 'l3
000212FA <AmiBlitz3.ab3@2308>   CLR.w dontwrite_nomemleft
00021300 <AmiBlitz3.ab3@2309> 
00021304 <AmiBlitz3.ab3@2310>   BSR compileall                                           ;if a function is not found
0002130A <AmiBlitz3.ab3@2311>   ADDQ.w #1,pass
00021348 <AmiBlitz3.ab3@2315>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
0002134C <AmiBlitz3.ab3@2316>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00021352 <AmiBlitz3.ab3@2317>   LEA firstproc,a0
00021358 <AmiBlitz3.ab3@2318>   CLR.l savefuncspace
0002135A <AmiBlitz3.ab3@2319>   MOVE.l (a0),d0
0002135C <AmiBlitz3.ab3@2323>     MOVE.l d0,a0
00021360 <AmiBlitz3.ab3@2324>     BEQ 'out
00021364 <AmiBlitz3.ab3@2325>     TST.b isfunc(a0)
00021368 <AmiBlitz3.ab3@2326>     BNE 'nex
0002136C <AmiBlitz3.ab3@2327>     MOVEM.l d2/a6/a0,-(a7)
0002136E <AmiBlitz3.ab3@2329>     MOVEQ #0,d0
00021372 <AmiBlitz3.ab3@2330>     MOVE.b $21+#funcentry_extend-1(a0),d0
00021376 <AmiBlitz3.ab3@2331>     SUB.w #$21+#funcentry_extend,d0
0002137A <AmiBlitz3.ab3@2332>     ADD.w #16,d0
00021380 <AmiBlitz3.ab3@2333>     MOVE.l #$10000,d1
00021382 <AmiBlitz3.ab3@2334>     MOVE.l d0,d2
00021388 <AmiBlitz3.ab3@2335>     MOVEA.l _execbase,A6
0002138C <AmiBlitz3.ab3@2336>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0002138E <AmiBlitz3.ab3@2337>     MOVE.l d0,a1
00021392 <AmiBlitz3.ab3@2338>     MOVE.l d2,4(a1)
00021398 <AmiBlitz3.ab3@2339>     MOVE.l unusedfunc,(a1)
0002139E <AmiBlitz3.ab3@2340>     MOVE.l d0,unusedfunc
000213A2 <AmiBlitz3.ab3@2341>     MOVEM.l (a7)+,a6/a0/d2
000213A6 <AmiBlitz3.ab3@2342>     MOVE.l isfunc+1(a0),d0
000213A8 <AmiBlitz3.ab3@2343>     ADDQ.l #6,d0
000213AE <AmiBlitz3.ab3@2344>     ADD.l d0,savefuncspace
000213B2 <AmiBlitz3.ab3@2347>     MOVE.l d0,8(a1)
000213B6 <AmiBlitz3.ab3@2348>     LEA 12(a1),a1
000213B8 <AmiBlitz3.ab3@2349>     MOVE.l a0,-(a7)
000213BC <AmiBlitz3.ab3@2350>     LEA $21+#funcentry_extend(a0),a0
000213BE <AmiBlitz3.ab3@2353>       MOVE.b (a0)+,(a1)+
000213C2 <AmiBlitz3.ab3@2354>     BNE 'l1
000213C4 <AmiBlitz3.ab3@2355>     MOVE.l (a7)+,a0
000213C6 <AmiBlitz3.ab3@2358>     MOVE.l (a0),d0
000213CA <AmiBlitz3.ab3@2359>  BRA 'lr1
000213D2 <AmiBlitz3.ab3@2362>   BTST #$7,make_smallestcode
000213D6 <AmiBlitz3.ab3@2363>   BEQ.b 'nosmall                                           ;optimize for executable
000213DC <AmiBlitz3.ab3@2365>   CLR.l morememadd
000213E0 <AmiBlitz3.ab3@2369>   BSR.w alloxadj
000213E4 <AmiBlitz3.ab3@2370>   BEQ.w 'anerr
000213EA <AmiBlitz3.ab3@2372> 
000213EE <AmiBlitz3.ab3@2373>   BSR.w compileall
000213F4 <AmiBlitz3.ab3@2375>   ADDQ.w #1,pass
000213F8 <AmiBlitz3.ab3@2376> 
00021422 <AmiBlitz3.ab3@2377>   !basic
00021436 <AmiBlitz3.ab3@2378>   If releaseexe = True                                       ; test if we creat a releas exe
0002145E <AmiBlitz3.ab3@2379>     needsize1.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)   ; get the size form the last compile
0002147C <AmiBlitz3.ab3@2380> 
000214B2 <AmiBlitz3.ab3@2381>       !ComData_SetW{comWord_CreateDebugFile,#1}              ; set create .dbg file to one
000214D0 <AmiBlitz3.ab3@2382>       !asm
000214D6 <AmiBlitz3.ab3@2383>       JSR ab3_OpenDebugFile                                  ; open the .dbg flie
000214DA <AmiBlitz3.ab3@2384>       !stack2regs
000214DE <AmiBlitz3.ab3@2385>       BSR compileall                                         ; compile for the last time to creat the dbg file
000214E2 <AmiBlitz3.ab3@2386>       !regs2stack
0002150C <AmiBlitz3.ab3@2387>       !basic
0002151A <AmiBlitz3.ab3@2389>     If needsize1 < needsize0   ; test if the needed size is smaller then the compile befor
00021520 <AmiBlitz3.ab3@2390>       needsize0 = needsize1    ; yes the new size is that the old size
0002153E <AmiBlitz3.ab3@2391>       !asm
00021542 <AmiBlitz3.ab3@2392>       !stack2regs
00021546 <AmiBlitz3.ab3@2393>       BRA 'l3                  ; back to the funcscan and compile again
00021564 <AmiBlitz3.ab3@2396>   !asm
00021568 <AmiBlitz3.ab3@2397>   !stack2regs
0002156E <AmiBlitz3.ab3@2401>   MOVE.w dontwrite_nomemleft,D1
00021572 <AmiBlitz3.ab3@2402>   BEQ.w 'dosave
00021576 <AmiBlitz3.ab3@2423>  BRA.w 'inc     ; was beq
0002157E <AmiBlitz3.ab3@2437>   MOVE.w #$FFFF,anyerrs        ; was -1
00021582 <AmiBlitz3.ab3@2438>  BRA.w 'dosave
00021586 <AmiBlitz3.ab3@2441>   BSR.w alloxinc                                          ;increase all by 50%
0002158A <AmiBlitz3.ab3@2442>   BEQ.w Aclearallvars
00021590 <AmiBlitz3.ab3@2443> 
00021594 <AmiBlitz3.ab3@2444>  BRA.w 'retry
00021598 <AmiBlitz3.ab3@2457> BRA.w qfree        ;used to go after beq .nosave                          ;???????
0002159E <AmiBlitz3.ab3@2463>   JSR freereps
000215A4 <AmiBlitz3.ab3@2464>   JSR freesels
000215AA <AmiBlitz3.ab3@2465>   JSR freetlist
000215B0 <AmiBlitz3.ab3@2466>   JSR freepends
000215B6 <AmiBlitz3.ab3@2467>   JSR freeifs
000215BC <AmiBlitz3.ab3@2468>   JSR freeincs
000215C2 <AmiBlitz3.ab3@2469>   JSR freexincs
000215C8 <AmiBlitz3.ab3@2470>   JSR freefors
000215CE <AmiBlitz3.ab3@2471> JMP cleartemplabel
000215D2 <AmiBlitz3.ab3@2474> mempool2:  Dc.l 0
000215D8 <AmiBlitz3.ab3@2479>   JSR Aclearcache
000215E0 <AmiBlitz3.ab3@2481>   BTST #$7,use_debugger
000215E4 <AmiBlitz3.ab3@2483>   BNE 'debugon
000215EA <AmiBlitz3.ab3@2484>   CLR.w debugmode
000215EE <AmiBlitz3.ab3@2485>  BRA.b 'debugoff
000215F4 <AmiBlitz3.ab3@2488>   SNE debugmode
0002162C <AmiBlitz3.ab3@2493>   !ComData_SetB{comByte_DebugMode,debugmode}
00021632 <AmiBlitz3.ab3@2495>   LEA regtable,a0
00021634 <AmiBlitz3.ab3@2496>   MOVEQ #10,d0
00021636 <AmiBlitz3.ab3@2499>     CLR.l (a0)+
0002163A <AmiBlitz3.ab3@2500>   DBF d0,'l1
00021640 <AmiBlitz3.ab3@2502>   LEA includetemp2,a0
00021642 <AmiBlitz3.ab3@2503>   CLR.b (a0)
0002164C <AmiBlitz3.ab3@2504>   MOVE.l #7,maxregs
00021652 <AmiBlitz3.ab3@2505>   CLR.w debugnest
00021658 <AmiBlitz3.ab3@2506>   CLR.b funcparloop
0002165E <AmiBlitz3.ab3@2507>   CLR.b nostringopt
00021664 <AmiBlitz3.ab3@2508>   CLR.b firsttime
0002166A <AmiBlitz3.ab3@2509>   CLR.l lastdestpointer
00021670 <AmiBlitz3.ab3@2510>   CLR.l lastwritedat
00021676 <AmiBlitz3.ab3@2511>   CLR.l prevwritedat
0002167C <AmiBlitz3.ab3@2512>   CLR.l includeline
00021682 <AmiBlitz3.ab3@2513>   CLR.b incnif
00021688 <AmiBlitz3.ab3@2514>   CLR.b formode
0002168E <AmiBlitz3.ab3@2515>   CLR.b funccall
00021694 <AmiBlitz3.ab3@2516>   CLR.w objectcount
0002169A <AmiBlitz3.ab3@2517>   CLR.b resdisable
000216A0 <AmiBlitz3.ab3@2518>   CLR.b developobject
000216A6 <AmiBlitz3.ab3@2519>   CLR.b optistring
000216AC <AmiBlitz3.ab3@2520>   CLR.b optistring2
000216B2 <AmiBlitz3.ab3@2521>   CLR.b optiarray
000216B8 <AmiBlitz3.ab3@2522>   CLR.b quickadd
000216BE <AmiBlitz3.ab3@2523>   CLR.w newmode
000216C4 <AmiBlitz3.ab3@2524>   CLR.w mode
000216CA <AmiBlitz3.ab3@2525>   CLR.w string1
000216D0 <AmiBlitz3.ab3@2526>   CLR.b fastfunc
000216D6 <AmiBlitz3.ab3@2527>   CLR.w load_var_size
000216DC <AmiBlitz3.ab3@2528>   CLR.w load_var_reg
000216E2 <AmiBlitz3.ab3@2529>   CLR.l load_var_addr
000216E8 <AmiBlitz3.ab3@2530>   CLR.w imm_size
000216EE <AmiBlitz3.ab3@2531>   CLR.w imm_reg
000216F4 <AmiBlitz3.ab3@2532>   CLR.l imm_addr
000216FA <AmiBlitz3.ab3@2533>   CLR.b _dcb
00021700 <AmiBlitz3.ab3@2534>   CLR.l nohunkoffset
00021706 <AmiBlitz3.ab3@2535>   CLR.b peekaddrsize
0002170C <AmiBlitz3.ab3@2536>   CLR.b typecheck
00021712 <AmiBlitz3.ab3@2537>   CLR.b declare2
00021718 <AmiBlitz3.ab3@2538>   CLR.b declare
0002171E <AmiBlitz3.ab3@2539>   CLR.l myoline                                          ;check
00021724 <AmiBlitz3.ab3@2540>   CLR.l myline                                          ;check
0002172A <AmiBlitz3.ab3@2541>   CLR.b newvariable
00021730 <AmiBlitz3.ab3@2542>   CLR.b saved0
00021736 <AmiBlitz3.ab3@2543>   CLR.l bsssize
0002173C <AmiBlitz3.ab3@2544>   CLR.l chipsize
00021742 <AmiBlitz3.ab3@2545>   CLR.b infunctioncode
00021748 <AmiBlitz3.ab3@2546>   CLR.l errorcounter
00021752 <AmiBlitz3.ab3@2547>   MOVE.l #-1,bssstart
0002175C <AmiBlitz3.ab3@2548>   MOVE.l #-1,bssend
00021766 <AmiBlitz3.ab3@2549>   MOVE.l #-1,chipstart
00021770 <AmiBlitz3.ab3@2550>   MOVE.l #-1,chipend
00021778 <AmiBlitz3.ab3@2551>   MOVE.w #0,bssmode
0002177E <AmiBlitz3.ab3@2552>   CLR.w a2offset
00021784 <AmiBlitz3.ab3@2553>   CLR.w fast
0002178A <AmiBlitz3.ab3@2554>   CLR.w fpu
00021790 <AmiBlitz3.ab3@2555>   CLR.b iee
00021796 <AmiBlitz3.ab3@2556>   CLR.w newsyntax
0002179A <AmiBlitz3.ab3@2558>   BSR.w qfree
000217A0 <AmiBlitz3.ab3@2559>   JSR killoffs              ;free up DOS offset table
000217A6 <AmiBlitz3.ab3@2560>   JSR frallvars               ;free up Global vars
000217AC <AmiBlitz3.ab3@2561>   JSR fralltypes              ;free up all types
000217B2 <AmiBlitz3.ab3@2562>   JSR freemacs                ;free up actual macro defines.
000217B8 <AmiBlitz3.ab3@2563>   JSR clearfunctionlist       ;free up states/funcs
000217BE <AmiBlitz3.ab3@2565>   TST.w pass                  
000217C4 <AmiBlitz3.ab3@2568>   JSR clearlabels             ;free up labels
000217CA <AmiBlitz3.ab3@2570>   JSR clearhash
000217D0 <AmiBlitz3.ab3@2573>   LEA devo,a0
000217D4 <AmiBlitz3.ab3@2574>   MOVEM.l a0-a6/d0-d7,-(a7)
000217DA <AmiBlitz3.ab3@2575>   LEA ptr_parameterstore,a1
000217DC <AmiBlitz3.ab3@2578>     MOVE.b (a0)+,(a1)+
000217E0 <AmiBlitz3.ab3@2579>   BNE 'l1b
000217E2 <AmiBlitz3.ab3@2580>   MOVEQ #13,d2
000217E8 <AmiBlitz3.ab3@2581>   JSR findlabel2
000217EC <AmiBlitz3.ab3@2582>   BNE 'd
000217F0 <AmiBlitz3.ab3@2583>   CLR.l 8(a2)
000217F4 <AmiBlitz3.ab3@2586>   MOVEM.l (a7)+,a0-a6/d0-d7
0002181E <AmiBlitz3.ab3@2587>   !basic
00021892 <AmiBlitz3.ab3@2588>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
000218B0 <AmiBlitz3.ab3@2589>   !asm
000218B6 <AmiBlitz3.ab3@2590>   CLR.b returncode
000218BC <AmiBlitz3.ab3@2592> JMP freeprocvs                     ;free up outstanding proc stuff
000218C2 <AmiBlitz3.ab3@2596>   MOVE.l #bssstore-labelhash,d0
000218C4 <AmiBlitz3.ab3@2597>   ASR.l #2,d0
000218CA <AmiBlitz3.ab3@2598>   LEA labelhash,a0
000218CC <AmiBlitz3.ab3@2601>     CLR.l (a0)+
000218CE <AmiBlitz3.ab3@2602>     SUBQ.l #1,d0
000218D2 <AmiBlitz3.ab3@2603>   BNE.s 'l10
000218D8 <AmiBlitz3.ab3@2605>   LEA labelbase,a1
000218DA <AmiBlitz3.ab3@2606>   MOVE.l (a1),d0
000218DE <AmiBlitz3.ab3@2607>   BEQ 'l11
000218E0 <AmiBlitz3.ab3@2610>     MOVE.l d0,a1
000218E4 <AmiBlitz3.ab3@2611>     TST.l 4(a1)
000218E8 <AmiBlitz3.ab3@2612>     BEQ 'l29
000218EC <AmiBlitz3.ab3@2613>     LEA $13(a1),a0
000218EE <AmiBlitz3.ab3@2614>     MOVEQ #0,d0
000218F0 <AmiBlitz3.ab3@2615>     MOVEQ #0,d1
000218F2 <AmiBlitz3.ab3@2618>       MOVE.b (a0)+,d1
000218F6 <AmiBlitz3.ab3@2619>       BEQ 'l12
000218FC <AmiBlitz3.ab3@2620>       !hashalgo
00021900 <AmiBlitz3.ab3@2621>  BRA 'l13
00021906 <AmiBlitz3.ab3@2624>     LEA labelhash,a0
0002190C <AmiBlitz3.ab3@2625>     AND.l #hashsize,d0
0002190E <AmiBlitz3.ab3@2626>      ASL.l #2,d0
00021912 <AmiBlitz3.ab3@2627>     MOVE.l 0(a0,d0),d1                                     ;*4
00021916 <AmiBlitz3.ab3@2628>     MOVE.l d1,$c(a1)
0002191A <AmiBlitz3.ab3@2629>     MOVE.l a1,0(a0,d0)
0002191C <AmiBlitz3.ab3@2632>     MOVE.l (a1),d0
00021920 <AmiBlitz3.ab3@2633>   BNE 'l21
00021922 <AmiBlitz3.ab3@2636> RTS
00021928 <AmiBlitz3.ab3@2640>   MOVEA.l lastrestype,A0
0002192A <AmiBlitz3.ab3@2641>   MOVEA.l (A0),A2
0002192C <AmiBlitz3.ab3@2642>   CLR.l (A0)
00021932 <AmiBlitz3.ab3@2643> JMP freetypes
00021938 <AmiBlitz3.ab3@2647>   MOVEA.l varbase,A3
0002193E <AmiBlitz3.ab3@2648>   CLR.l varbase
00021942 <AmiBlitz3.ab3@2652>   CMPA.w #$0,A3
00021946 <AmiBlitz3.ab3@2653>   BEQ.w 'l20
00021948 <AmiBlitz3.ab3@2654>   MOVEA.l A3,A1
0002194A <AmiBlitz3.ab3@2655>   MOVEA.l (A3),A3
0002194C <AmiBlitz3.ab3@2656>   MOVEQ.l #$00,D0
00021950 <AmiBlitz3.ab3@2657>   MOVE.b $E+4(A1),D0
00021956 <AmiBlitz3.ab3@2658>   MOVEA.l _execbase,A6
0002195C <AmiBlitz3.ab3@2659>   MOVE.l mempool2,a0
00021960 <AmiBlitz3.ab3@2660>   JSR _FreePooled(A6)
00021964 <AmiBlitz3.ab3@2661>  BRA.w 'l10
00021966 <AmiBlitz3.ab3@2664> RTS
0002196C <AmiBlitz3.ab3@2670>   LEA firstiff,A2
0002196E <AmiBlitz3.ab3@2671>   MOVEQ.l #$0E,D2
00021974 <AmiBlitz3.ab3@2672> JMP freeslist
00021976 <AmiBlitz3.ab3@2678> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00021978 <AmiBlitz3.ab3@2679> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0002197E <AmiBlitz3.ab3@2686>   CLR.w inmacro
00021984 <AmiBlitz3.ab3@2688>   ADDQ.l #1,globallinecount
0002198A <AmiBlitz3.ab3@2689>   CLR.b nostringopt
0002198E <AmiBlitz3.ab3@2691>   BSR.w freembuff
00021994 <AmiBlitz3.ab3@2692>   CLR.w instringon
0002199A <AmiBlitz3.ab3@2697>   TST.w ininclude
0002199E <AmiBlitz3.ab3@2698>   BEQ.w 'skip3
000219A4 <AmiBlitz3.ab3@2700>   ADDQ.l #1,includeline
000219AA <AmiBlitz3.ab3@2701>     JSR ab3_WriteDebugFile
000219B0 <AmiBlitz3.ab3@2703>   JSR readinc
000219B4 <AmiBlitz3.ab3@2704>   BEQ.w 'skip3
000219BA <AmiBlitz3.ab3@2708>   MOVE.w ininclude,D0
000219BE <AmiBlitz3.ab3@2709>   CMP.w #$4,D0
000219C2 <AmiBlitz3.ab3@2710>   BCC.w 'stskip
000219C4 <AmiBlitz3.ab3@2711>   ADD.w D0,D0
000219CA <AmiBlitz3.ab3@2712>   LEA progress_per_line,A0
000219CE <AmiBlitz3.ab3@2713>   MOVE.w $0(A0,D0.W),D2     ;offset in line
000219D2 <AmiBlitz3.ab3@2714>   CMP.w progressbar_width(PC),D2
000219D6 <AmiBlitz3.ab3@2715>   BCC.w 'stskip
000219DA <AmiBlitz3.ab3@2716>   ADDQ.w #1,$0(A0,D0.W)
000219DC <AmiBlitz3.ab3@2718>   LSR.w #1,D0
000219DE <AmiBlitz3.ab3@2720>   MOVE.l d0,d1
000219E0 <AmiBlitz3.ab3@2721>   EXT.l d1
000219E2 <AmiBlitz3.ab3@2722>   MOVE.l d2,d0
000219E4 <AmiBlitz3.ab3@2723>   EXT.l d0                                                 ;d0=x,d1=y
000219EA <AmiBlitz3.ab3@2725>   JSR update_progressbar
000219EC <AmiBlitz3.ab3@2729>   MOVEQ.l #-$01,D0
000219EE <AmiBlitz3.ab3@2730>  RTS
000219F4 <AmiBlitz3.ab3@2735>   MOVE.l titleat,D0
000219F6 <AmiBlitz3.ab3@2736>   MOVEQ.l #$00,D1
000219FC <AmiBlitz3.ab3@2737>   MOVE.w progress_per_line,D1
000219FE <AmiBlitz3.ab3@2738>   ADD.l D1,D0
00021A00 <AmiBlitz3.ab3@2739>   MOVE.l D0,D1
00021A02 <AmiBlitz3.ab3@2740>   SWAP D0
00021A08 <AmiBlitz3.ab3@2741>   CMP.w titleat,D0
00021A0C <AmiBlitz3.ab3@2742>    BEQ.w 'skip3a
00021A0E <AmiBlitz3.ab3@2747>   EXT.l d0
00021A10 <AmiBlitz3.ab3@2748>   MOVE.l d1,-(a7)
00021A18 <AmiBlitz3.ab3@2751>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00021A1E <AmiBlitz3.ab3@2752>   JSR update_progressbar
00021A26 <AmiBlitz3.ab3@2753>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00021A28 <AmiBlitz3.ab3@2759>   MOVE.l (a7)+,d1
00021A2E <AmiBlitz3.ab3@2763>   MOVE.l D1,titleat
00021A34 <AmiBlitz3.ab3@2766>   ADDQ.l #1,linenumat
00021A3A <AmiBlitz3.ab3@2767>   CLR.w linedone
00021A40 <AmiBlitz3.ab3@2769>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
00021A46 <AmiBlitz3.ab3@2775>   SUBQ.l #1,numlines2
00021A4A <AmiBlitz3.ab3@2777>    BEQ.w 'skip
00021A50 <AmiBlitz3.ab3@2778>   MOVEA.l sourceline,A0
00021A52 <AmiBlitz3.ab3@2779>   MOVEA.l (A0),A0
00021A58 <AmiBlitz3.ab3@2780>   MOVE.l A0,sourceline
00021A5C <AmiBlitz3.ab3@2781>   LEA $9(A0),A5
00021A5E <AmiBlitz3.ab3@2784> RTS
00021A60 <AmiBlitz3.ab3@2788>   MOVE.w D0,-(A7)
00021A62 <AmiBlitz3.ab3@2789>   MOVEQ.l #$03,D0
00021A64 <AmiBlitz3.ab3@2792>     MOVE.w D1,D2
00021A68 <AmiBlitz3.ab3@2793>     ANDI.w #$F,D2
00021A6C <AmiBlitz3.ab3@2794>     ADDI.w #$30,D2
00021A70 <AmiBlitz3.ab3@2795>     CMP.w #$3A,D2
00021A74 <AmiBlitz3.ab3@2796>      BCS.w 'skip
00021A76 <AmiBlitz3.ab3@2797>     ADDQ.w #7,D2
00021A7A <AmiBlitz3.ab3@2800>     MOVE.b D2,$0(A0,D0.W)
00021A7C <AmiBlitz3.ab3@2801>     LSR.w #4,D1
00021A80 <AmiBlitz3.ab3@2802>   DBF D0,'loop
00021A82 <AmiBlitz3.ab3@2804>   MOVE.w (A7)+,D0
00021A84 <AmiBlitz3.ab3@2805> RTS
00021A8A <AmiBlitz3.ab3@2815>   MOVE.w skipcode,D1
00021A8E <AmiBlitz3.ab3@2816>   BNE.w 'loop0
00021A90 <AmiBlitz3.ab3@2817>  RTS
00021A92 <AmiBlitz3.ab3@2820>   MOVE.l A5,-(A7)
00021A94 <AmiBlitz3.ab3@2821>   MOVEQ.l #$3A,D1      ;':'
00021A96 <AmiBlitz3.ab3@2822>   MOVEQ.l #$21,D2      ;'!'
00021A98 <AmiBlitz3.ab3@2823>   MOVEQ.l #$3B,D3      ;';'
00021A9A <AmiBlitz3.ab3@2824>   MOVEQ.l #$22,D4      ;'"'
00021A9C <AmiBlitz3.ab3@2827>   MOVE.b (A5)+,D0
00021AA0 <AmiBlitz3.ab3@2828>    BEQ.w 'done
00021AA4 <AmiBlitz3.ab3@2829>    BPL.w 'test
00021AA6 <AmiBlitz3.ab3@2830>   MOVE.b (A5)+,D0
00021AAA <AmiBlitz3.ab3@2831>  BRA.w 'loop
00021AAC <AmiBlitz3.ab3@2834>   CMP.b D4,D0
00021AB0 <AmiBlitz3.ab3@2835>    BNE.w 'notq
00021AB2 <AmiBlitz3.ab3@2838>   MOVE.b (A5)+,D0
00021AB6 <AmiBlitz3.ab3@2839>    BEQ.w notqerr
00021ABA <AmiBlitz3.ab3@2845>   CMP.b #$22,D0        ;'"'
00021ABE <AmiBlitz3.ab3@2846>    BNE.w 'qloop
00021AC2 <AmiBlitz3.ab3@2847>  BRA.w 'loop
00021AC4 <AmiBlitz3.ab3@2850>   CMP.b D1,D0
00021AC8 <AmiBlitz3.ab3@2851>    BEQ.w 'done
00021ACA <AmiBlitz3.ab3@2852>   CMP.b D3,D0
00021ACE <AmiBlitz3.ab3@2853>    BEQ.w 'done       ;macro character!
00021AD0 <AmiBlitz3.ab3@2854>   CMP.b D2,D0
00021AD4 <AmiBlitz3.ab3@2855>    BNE.w 'loop
00021ADC <AmiBlitz3.ab3@2859>   MOVE.w #$FFFF,inmacro    ; was -1                                ; no runtimecheck in macros
00021ADE <AmiBlitz3.ab3@2860>   MOVEA.l A5,A3
00021AE4 <AmiBlitz3.ab3@2862>    JSR getparameter2
00021AE8 <AmiBlitz3.ab3@2863>    BNE.w 'fkitme
00021AEE <AmiBlitz3.ab3@2864>  JMP syntaxerr
00021AF8 <AmiBlitz3.ab3@2869>    MOVE.w oldqflag,instringon
00021AFE <AmiBlitz3.ab3@2870>   MOVEA.l lastsourcepos,A5
00021B04 <AmiBlitz3.ab3@2873>    JSR findmac                                             ;find macro
00021B08 <AmiBlitz3.ab3@2874>    BEQ.w 'kl1
00021B0E <AmiBlitz3.ab3@2875>  JMP nomacerr
00021B14 <AmiBlitz3.ab3@2879>   TST.b debugmode
00021B18 <AmiBlitz3.ab3@2880>   BEQ 'sk1
00021B1C <AmiBlitz3.ab3@2881>   MOVE.w #$4e71,d1
00021B22 <AmiBlitz3.ab3@2882>   JSR writeword
00021B24 <AmiBlitz3.ab3@2883>   MOVE.l a5,-(a7)
00021B26 <AmiBlitz3.ab3@2884>   MOVE.l a3,a5
00021B28 <AmiBlitz3.ab3@2885>   SUBQ.l #1,a5
00021B30 <AmiBlitz3.ab3@2886>   MOVE.w #$0,inmacro
00021B34 <AmiBlitz3.ab3@2887>   BSR debugstuffa
00021B3C <AmiBlitz3.ab3@2888>   MOVE.w #$FFFF,inmacro
00021B3E <AmiBlitz3.ab3@2889>   MOVE.l (a7)+,a5
00021B42 <AmiBlitz3.ab3@2890>   MOVE.w #$4e71,d1
00021B48 <AmiBlitz3.ab3@2891>   JSR writeword
00021B4A <AmiBlitz3.ab3@2895>   MOVEA.l A5,A4            ;start of parameters!
00021B4E <AmiBlitz3.ab3@2899>    CMP.b #" ",(a4)+
00021B52 <AmiBlitz3.ab3@2900>     BEQ 'l5a
00021B54 <AmiBlitz3.ab3@2901>      SUBQ.l#1,a4
00021B58 <AmiBlitz3.ab3@2902>      CMP.b #",",(a4)
00021B5C <AmiBlitz3.ab3@2903>     BEQ 'nops
00021B5E <AmiBlitz3.ab3@2907>   MOVEQ.l #$00,D4          ;narg=0
00021B64 <AmiBlitz3.ab3@2909>   TST.b newsyntax
00021B68 <AmiBlitz3.ab3@2910>   BEQ 'l10b
00021B6C <AmiBlitz3.ab3@2911>   MOVEM.l a0/d0,-(a7)
00021B70 <AmiBlitz3.ab3@2912>   MOVE.l 4(a2),a0
00021B74 <AmiBlitz3.ab3@2913>   MOVE.w 8(a2),d0
00021B78 <AmiBlitz3.ab3@2916>   CMP.b #"`",(a0)+
00021B7C <AmiBlitz3.ab3@2917>   BEQ 'x1
00021B7E <AmiBlitz3.ab3@2918>   SUBQ.w #1,d0
00021B82 <AmiBlitz3.ab3@2919>   BNE 'x2
00021B86 <AmiBlitz3.ab3@2920>  BRA 'x3
00021B8A <AmiBlitz3.ab3@2923>   MOVEM.l (a7)+,a0/d0
00021B8E <AmiBlitz3.ab3@2924>  BRA 'l10
00021B92 <AmiBlitz3.ab3@2927>   MOVEM.l (a7)+,a0/d0
00021B96 <AmiBlitz3.ab3@2928>  BRA 'nops
00021B9A <AmiBlitz3.ab3@2932>   CMPI.b #"{",(A4)
00021B9E <AmiBlitz3.ab3@2933>    BNE.w 'nops
00021BA0 <AmiBlitz3.ab3@2938>   ADDQ.l #1,a4
00021BA4 <AmiBlitz3.ab3@2941>     CMP.b #" ",(a4)
00021BA8 <AmiBlitz3.ab3@2942>     BEQ 'l5
00021BAC <AmiBlitz3.ab3@2943>     MOVEM.l a0/d0,-(a7)
00021BB2 <AmiBlitz3.ab3@2944>     CLR.b exmac
00021BB8 <AmiBlitz3.ab3@2945>     LEA chartab,a0
00021BBA <AmiBlitz3.ab3@2946>     MOVEQ #0,d0
00021BBC <AmiBlitz3.ab3@2947>     MOVE.b (a4),d0
00021BC0 <AmiBlitz3.ab3@2948>     BMI 'm1
00021BC4 <AmiBlitz3.ab3@2949>     TST.b 0(a0,d0)
00021BC8 <AmiBlitz3.ab3@2950>     BEQ 'm1
00021BCE <AmiBlitz3.ab3@2951>     TST.b newsyntax
00021BD2 <AmiBlitz3.ab3@2952>     BEQ 'ns1
00021BD6 <AmiBlitz3.ab3@2953>     CMP.b #"#",d0
00021BDA <AmiBlitz3.ab3@2954>     BEQ 'm1
00021BDE <AmiBlitz3.ab3@2955>     CMP.b #"$",d0
00021BE2 <AmiBlitz3.ab3@2956>     BEQ 'm1
00021BE6 <AmiBlitz3.ab3@2957>     CMP.b #"-",d0
00021BEA <AmiBlitz3.ab3@2958>     BEQ 'm1
00021BEE <AmiBlitz3.ab3@2961>   CMP.b #",",d0
00021BF2 <AmiBlitz3.ab3@2962>     BEQ 'm1
00021BF6 <AmiBlitz3.ab3@2963>     CMP.b #"{",d0
00021BFA <AmiBlitz3.ab3@2964>     BNE 'm1b
00021BFC <AmiBlitz3.ab3@2965>     ADDQ.l #1,a4
00021C00 <AmiBlitz3.ab3@2966>  BRA 'm1
00021C06 <AmiBlitz3.ab3@2969>   TST.b newsyntax
00021C0A <AmiBlitz3.ab3@2970>     BEQ 'm1
00021C12 <AmiBlitz3.ab3@2971>     MOVE.b #1,exmac
00021C16 <AmiBlitz3.ab3@2974>   MOVEM.l (a7)+,a0/d0
00021C1C <AmiBlitz3.ab3@2975>     TST.b exmac
00021C20 <AmiBlitz3.ab3@2976>     BNE 'nops
00021C22 <AmiBlitz3.ab3@2983>   TST.b (a4)
00021C26 <AmiBlitz3.ab3@2984>   BEQ 'nops
00021C2C <AmiBlitz3.ab3@2988>   MOVEA.l ptr_macrobuffer_begin,A0    ;start of parameter collect
00021C2E <AmiBlitz3.ab3@2991>   ADDQ.w #1,D4                        ;another p
00021C30 <AmiBlitz3.ab3@2992>   MOVE.l A4,(A0)
00021C34 <AmiBlitz3.ab3@2994>   CLR.w 4(a0)
00021C38 <AmiBlitz3.ab3@2996>    BSR.w findit
00021C3A <AmiBlitz3.ab3@2999>   ADDQ.l #4,a0
00021C3C <AmiBlitz3.ab3@3005>   SUBQ.w #1,(a0)+
00021C40 <AmiBlitz3.ab3@3007>   CMP.b #$7D,D0     ;'}'
00021C44 <AmiBlitz3.ab3@3009>   BEQ 'l10b1
00021C46 <AmiBlitz3.ab3@3010>   TST.b d0
00021C4A <AmiBlitz3.ab3@3011>   BEQ 'l10b1
00021C4E <AmiBlitz3.ab3@3012>  BRA 'ppl
00021C54 <AmiBlitz3.ab3@3018>   CLR.l sourceline3
00021C56 <AmiBlitz3.ab3@3020>   MOVEA.l A4,A5
00021C5C <AmiBlitz3.ab3@3023>   MOVE.w D4,numarg
00021C62 <AmiBlitz3.ab3@3034>   MOVE.l #$01,D1
00021C68 <AmiBlitz3.ab3@3035>   MOVEA.l _execbase,A6
00021C6E <AmiBlitz3.ab3@3037>   MOVE.l mempool,a0
00021C74 <AmiBlitz3.ab3@3038>   MOVE.l macrobuffer_size,D0
00021C7A <AmiBlitz3.ab3@3039>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021C7E <AmiBlitz3.ab3@3040>   BGE 'l1mc
00021C84 <AmiBlitz3.ab3@3041>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021C8A <AmiBlitz3.ab3@3042>   MOVE.l d0,macrobuffer_size
00021C8E <AmiBlitz3.ab3@3045>   JSR _AllocPooled(a6)
00021C98 <AmiBlitz3.ab3@3049>   MOVE.l myline,myoline
00021C9A <AmiBlitz3.ab3@3053>   ADDQ.l #1,d0
00021CA0 <AmiBlitz3.ab3@3055>   MOVE.l D0,myline
00021CA2 <AmiBlitz3.ab3@3056>   MOVEA.l D0,A1
00021CA8 <AmiBlitz3.ab3@3058>   MOVE.b #":",-1(a1)
00021CAA <AmiBlitz3.ab3@3060>   MOVEA.l A1,A6
00021CB0 <AmiBlitz3.ab3@3061>   ADDA.l macrobuffer_size,A6   ;end of macro buffer
00021CB2 <AmiBlitz3.ab3@3063>   MOVEA.l (A7)+,A0             ;start of the line
00021CB4 <AmiBlitz3.ab3@3066>   CMPA.l A6,A1
00021CB8 <AmiBlitz3.ab3@3067>    BCC.w mbovererr
00021CBA <AmiBlitz3.ab3@3068>   MOVE.b (A0)+,(a1)+
00021CBC <AmiBlitz3.ab3@3069>   CMPA.l A3,A0
00021CC0 <AmiBlitz3.ab3@3070>    BCS.w 'loop2
00021CC2 <AmiBlitz3.ab3@3071>   SUBQ.w #1,A1                 ;back over '#'
00021CC6 <AmiBlitz3.ab3@3073>   MOVE.w $8(A2),D1             ;mac len
00021CCA <AmiBlitz3.ab3@3074>    BEQ.w 'loop4
00021CD2 <AmiBlitz3.ab3@3075>   MOVE.w $A(A2),macnum
00021CD6 <AmiBlitz3.ab3@3076>   ADDQ.w #1,$A(A2)
00021CDA <AmiBlitz3.ab3@3077>   MOVEA.l $4(A2),A2
00021CDC <AmiBlitz3.ab3@3078>   SUBQ.w #1,D1
00021CE2 <AmiBlitz3.ab3@3080>   CLR.b firstmline
00021CE4 <AmiBlitz3.ab3@3084>     MOVEQ.l #$00,D0
00021CE6 <AmiBlitz3.ab3@3085>     MOVE.b (A2)+,D0
00021CEC <AmiBlitz3.ab3@3087>     TST.b firstmline
00021CF0 <AmiBlitz3.ab3@3088>     BNE 'c1
00021CF4 <AmiBlitz3.ab3@3089>     CMP.b #$22,d0         ;'"'
00021CF8 <AmiBlitz3.ab3@3090>     BNE 's1
00021D00 <AmiBlitz3.ab3@3091>     MOVE.b #1,firstmline
00021D04 <AmiBlitz3.ab3@3094>     CMP.b #":",d0
00021D08 <AmiBlitz3.ab3@3095>     BNE 'm1a
00021D10 <AmiBlitz3.ab3@3096>     MOVE.b #1,firstmline
00021D14 <AmiBlitz3.ab3@3099>     CMP.b #";",d0
00021D18 <AmiBlitz3.ab3@3100>     BNE 'c1
00021D1A <AmiBlitz3.ab3@3103>     SUBQ.w #1,d1                                           ;filter out comment
00021D1C <AmiBlitz3.ab3@3104>     MOVE.b (a2)+,d0
00021D22 <AmiBlitz3.ab3@3105>     CMP.w #":@",-1(a2)
00021D26 <AmiBlitz3.ab3@3106>     BEQ 'c2
00021D28 <AmiBlitz3.ab3@3107>     TST.w d1
00021D2C <AmiBlitz3.ab3@3108>     BNE 'l1d
00021D30 <AmiBlitz3.ab3@3109>    BRA 'oky2
00021D36 <AmiBlitz3.ab3@3112>     CMP.b #":",1(a2)
00021D3A <AmiBlitz3.ab3@3113>       BNE 'l1d
00021D3C <AmiBlitz3.ab3@3114>       ADDQ #2,a2
00021D3E <AmiBlitz3.ab3@3115>       SUBQ #3,d1
00021D40 <AmiBlitz3.ab3@3116>       MOVE.b (a2)+,d0
00021D48 <AmiBlitz3.ab3@3117>       MOVE.b #1,firstmline
00021D4C <AmiBlitz3.ab3@3121>     CMP.b #"`",D0
00021D50 <AmiBlitz3.ab3@3122>      BNE.w 'oky
00021D52 <AmiBlitz3.ab3@3123>     SUBQ.w #1,D1
00021D54 <AmiBlitz3.ab3@3124>     MOVE.b (A2)+,D0
00021D58 <AmiBlitz3.ab3@3125>     CMP.w #$7B,D0       ;'{'
00021D5C <AmiBlitz3.ab3@3126>      BEQ.w 'evalit
00021D60 <AmiBlitz3.ab3@3127>     CMP.w #$40,D0       ;'@'
00021D64 <AmiBlitz3.ab3@3128>      BNE.w 'notnum
00021D66 <AmiBlitz3.ab3@3132>     MOVEQ.l #$00,D2
00021D6C <AmiBlitz3.ab3@3133>     MOVE.w macnum,D2
00021D6E <AmiBlitz3.ab3@3134>     MOVEA.l A1,A0
00021D70 <AmiBlitz3.ab3@3135>     MOVE.w D1,-(A7)
00021D76 <AmiBlitz3.ab3@3136>      JSR makelong
00021D78 <AmiBlitz3.ab3@3137>     MOVEA.l A0,A1
00021D7A <AmiBlitz3.ab3@3138>     MOVE.w (A7)+,D1
00021D7E <AmiBlitz3.ab3@3140>    BRA.w 'oky2
00021D82 <AmiBlitz3.ab3@3143>     ORI.w #$20,D0
00021D86 <AmiBlitz3.ab3@3144>     CMP.w #$7A,D0       ;'z'
00021D8A <AmiBlitz3.ab3@3145>      BCS.w 'fkit
00021D90 <AmiBlitz3.ab3@3146>    JMP ilconsterr
00021D94 <AmiBlitz3.ab3@3149>     SUBI.w #$30,D0
00021D98 <AmiBlitz3.ab3@3150>     CMP.w #$A,D0
00021D9C <AmiBlitz3.ab3@3151>      BCS.w 'itsgot
00021DA0 <AmiBlitz3.ab3@3153>     SUBI.w #$27,D0
00021DA4 <AmiBlitz3.ab3@3154>     CMP.w #$A,D0
00021DA8 <AmiBlitz3.ab3@3155>      BCC.w 'fkit2
00021DAE <AmiBlitz3.ab3@3156>    JMP ilconsterr
00021DB2 <AmiBlitz3.ab3@3159>    BRA.w 'itsgot
00021DB4 <AmiBlitz3.ab3@3162>     MOVE.l A5,-(A7)
00021DB8 <AmiBlitz3.ab3@3163>     MOVEM.l D1/A1-A2/A6,-(A7)
00021DBA <AmiBlitz3.ab3@3164>     MOVEA.l A2,A5
00021DC0 <AmiBlitz3.ab3@3165>      JSR evalconst2
00021DC4 <AmiBlitz3.ab3@3166>     CMP.w #$7D,D0      ;'}'
00021DC8 <AmiBlitz3.ab3@3167>      BEQ.w 'allisok
00021DCE <AmiBlitz3.ab3@3168>    JMP syntaxerr
00021DD2 <AmiBlitz3.ab3@3171>     MOVEM.l (A7)+,D1/A1-A2/A6
00021DD4 <AmiBlitz3.ab3@3172>     MOVE.l A5,D2
00021DD6 <AmiBlitz3.ab3@3173>     SUB.l A2,D2
00021DD8 <AmiBlitz3.ab3@3174>     SUB.w D2,D1
00021DDA <AmiBlitz3.ab3@3175>     MOVEA.l A5,A2
00021DE0 <AmiBlitz3.ab3@3177>     CLR.w instringon
00021DE2 <AmiBlitz3.ab3@3178>     MOVEA.l (A7)+,A5
00021DE4 <AmiBlitz3.ab3@3180>     MOVE.l D3,D0
00021DE8 <AmiBlitz3.ab3@3181>     BPL.w 'itsgot
00021DEE <AmiBlitz3.ab3@3182>    JMP ilconsterr
00021DF0 <AmiBlitz3.ab3@3185>     SUBQ.w #1,D0
00021DF4 <AmiBlitz3.ab3@3186>      BPL.w 'ok
00021DFA <AmiBlitz3.ab3@3190>     MOVE.w numarg,D0
00021DFE <AmiBlitz3.ab3@3191>     DIVU #$A,D0
00021E02 <AmiBlitz3.ab3@3192>     ADDI.w #$30,D0
00021E04 <AmiBlitz3.ab3@3193>     CMPA.l A6,A1
00021E08 <AmiBlitz3.ab3@3194>      BCC.w mbovererr
00021E0A <AmiBlitz3.ab3@3195>     MOVE.b D0,(A1)+
00021E0C <AmiBlitz3.ab3@3196>     SWAP D0
00021E10 <AmiBlitz3.ab3@3197>     ADDI.w #$30,D0
00021E12 <AmiBlitz3.ab3@3198>     CMPA.l A6,A1
00021E16 <AmiBlitz3.ab3@3199>      BCC.w mbovererr
00021E18 <AmiBlitz3.ab3@3200>     MOVE.b D0,(A1)+
00021E1C <AmiBlitz3.ab3@3201>    BRA.w 'oky2
00021E22 <AmiBlitz3.ab3@3207>     CMP.w numarg,D0
00021E26 <AmiBlitz3.ab3@3208>      BCC.w 'oky2
00021E28 <AmiBlitz3.ab3@3209>     LSL.w #1,D0
00021E2A <AmiBlitz3.ab3@3210>     MOVE.w D0,D4
00021E2C <AmiBlitz3.ab3@3211>     LSL.w #1,D0
00021E2E <AmiBlitz3.ab3@3212>     ADD.w D4,D0          ;*6
00021E34 <AmiBlitz3.ab3@3213>     MOVEA.l ptr_macrobuffer_begin,A0
00021E36 <AmiBlitz3.ab3@3214>     ADDA.w D0,A0
00021E3A <AmiBlitz3.ab3@3215>     MOVE.w $4(A0),D4     ;len of replacetext
00021E3E <AmiBlitz3.ab3@3216>      BEQ.w 'oky2
00021E40 <AmiBlitz3.ab3@3217>     MOVEA.l (A0),A0
00021E42 <AmiBlitz3.ab3@3218>     SUBQ.w #1,D4
00021E44 <AmiBlitz3.ab3@3221>       CMPA.l A6,A1
00021E48 <AmiBlitz3.ab3@3222>        BCC.w mbovererr
00021E4C <AmiBlitz3.ab3@3224>       CMP.w #"@@",(a0)
00021E50 <AmiBlitz3.ab3@3225>        BNE 'l10e
00021E56 <AmiBlitz3.ab3@3226>       TST.w ininclude
00021E5A <AmiBlitz3.ab3@3227>        BNE errorjoin
00021E60 <AmiBlitz3.ab3@3230>       MOVE.l sourceline,a0
00021E62 <AmiBlitz3.ab3@3231>       MOVE.l (a0),a0
00021E68 <AmiBlitz3.ab3@3232>       CMP.l #0,a0
00021E6C <AmiBlitz3.ab3@3233>       BNE 'l11e
00021E6E <AmiBlitz3.ab3@3234>       MOVEQ #0,d0
00021E74 <AmiBlitz3.ab3@3235>       JSR error
00021E7A <AmiBlitz3.ab3@3238>       MOVE.l a0,sourceline
00021E80 <AmiBlitz3.ab3@3239>       ADDQ.l #1,linenumat
00021E84 <AmiBlitz3.ab3@3240>       LEA 9(a0),a0
00021E86 <AmiBlitz3.ab3@3241>       MOVE.l a0,-(a7)
00021E8A <AmiBlitz3.ab3@3244>       CMP.b #" ",(a0)+
00021E8E <AmiBlitz3.ab3@3245>        BEQ 'l110e
00021E94 <AmiBlitz3.ab3@3246>       CMP.b #";",-1(a0)
00021E96 <AmiBlitz3.ab3@3247>       MOVE.l (a7)+,a0
00021E9A <AmiBlitz3.ab3@3248>        BEQ 'l111e
00021E9C <AmiBlitz3.ab3@3249>       SUBQ.l #1,d4
00021E9E <AmiBlitz3.ab3@3253>       MOVE.b (A0)+,(A1)+
00021EA2 <AmiBlitz3.ab3@3254>     DBF D4,'plp
00021EA6 <AmiBlitz3.ab3@3256>     BRA.w 'oky2
00021EA8 <AmiBlitz3.ab3@3259>     CMPA.l A6,A1
00021EAC <AmiBlitz3.ab3@3260>      BCC.w mbovererr
00021EAE <AmiBlitz3.ab3@3261>     MOVE.b D0,(A1)+
00021EB2 <AmiBlitz3.ab3@3262>      BPL.w 'oky2
00021EB4 <AmiBlitz3.ab3@3263>     CMPA.l A6,A1
00021EB8 <AmiBlitz3.ab3@3264>      BCC.w mbovererr
00021EBA <AmiBlitz3.ab3@3265>     MOVE.b (A2)+,(A1)+
00021EBC <AmiBlitz3.ab3@3266>     SUBQ.w #1,D1
00021EC0 <AmiBlitz3.ab3@3269>    DBF D1,'loop3
00021EC2 <AmiBlitz3.ab3@3279>   CMPA.l A6,A1
00021EC6 <AmiBlitz3.ab3@3280>    BCC.w mbovererr
00021EC8 <AmiBlitz3.ab3@3281>   MOVE.b (A5)+,(A1)+
00021ECC <AmiBlitz3.ab3@3282>    BNE.w 'loop4
00021ED2 <AmiBlitz3.ab3@3284>   MOVEA.l myline,A5
00021ED8 <AmiBlitz3.ab3@3286>   MOVE.l myoline,D0
00021EDC <AmiBlitz3.ab3@3287>    BEQ.w 'skip3
00021EDE <AmiBlitz3.ab3@3289>   SUBQ.l #1,d0
00021EE0 <AmiBlitz3.ab3@3291>   MOVEA.l D0,A1
00021EE6 <AmiBlitz3.ab3@3292>   MOVE.l macrobuffer_size,D0
00021EEC <AmiBlitz3.ab3@3293>   MOVEA.l _execbase,A6
00021EF2 <AmiBlitz3.ab3@3295>   MOVE.l mempool,a0
00021EF6 <AmiBlitz3.ab3@3296>   JSR _FreePooled(A6)
00021EFA <AmiBlitz3.ab3@3301>  BRA.w 'loop0
00021EFC <AmiBlitz3.ab3@3304>   MOVEA.l (A7)+,A5
00021EFE <AmiBlitz3.ab3@3305> RTS
00021F04 <AmiBlitz3.ab3@3309>   MOVE.l myline,D0
00021F08 <AmiBlitz3.ab3@3310>   BEQ.w 'no
00021F0A <AmiBlitz3.ab3@3312>   SUBQ.l #1,d0
00021F10 <AmiBlitz3.ab3@3314>   CLR.l myline
00021F12 <AmiBlitz3.ab3@3315>   MOVEA.l D0,A1
00021F18 <AmiBlitz3.ab3@3316>   MOVE.l macrobuffer_size,D0
00021F1E <AmiBlitz3.ab3@3317>   MOVEA.l _execbase,A6
00021F24 <AmiBlitz3.ab3@3319>   MOVE.l mempool,a0
00021F28 <AmiBlitz3.ab3@3320>  JMP _FreePooled(A6)
00021F2A <AmiBlitz3.ab3@3325> RTS
00021F2C <AmiBlitz3.ab3@3331>   MOVEQ.l #$00,D2    ;no nesting
00021F30 <AmiBlitz3.ab3@3335>   ADDQ.w #1,4(a0)
00021F32 <AmiBlitz3.ab3@3337>    MOVE.b (A4)+,D0
00021F36 <AmiBlitz3.ab3@3340>    BEQ exit1
00021F3A <AmiBlitz3.ab3@3342>    BPL.w 'tst
00021F3E <AmiBlitz3.ab3@3344>   ADDQ.w #1,4(a0)
00021F40 <AmiBlitz3.ab3@3346>   ADDQ.w #1,A4
00021F44 <AmiBlitz3.ab3@3347>  BRA.w 'loop
00021F4A <AmiBlitz3.ab3@3351>    TST.w instringon
00021F4E <AmiBlitz3.ab3@3352>    BNE 'lnom
00021F52 <AmiBlitz3.ab3@3353>    CMP.b #";",d0
00021F56 <AmiBlitz3.ab3@3354>    BEQ exit2
00021F5A <AmiBlitz3.ab3@3355>    CMP.b #":",d0
00021F5E <AmiBlitz3.ab3@3356>    BEQ exit2
00021F62 <AmiBlitz3.ab3@3360>   CMP.b #$22,D0           ;'"'
00021F66 <AmiBlitz3.ab3@3361>    BNE.w 'notq
00021F6C <AmiBlitz3.ab3@3362>   NOT.w instringon
00021F70 <AmiBlitz3.ab3@3363>  BRA.w 'loop
00021F76 <AmiBlitz3.ab3@3366>   TST.w instringon
00021F7A <AmiBlitz3.ab3@3367>    BNE.w 'loop
00021F7E <AmiBlitz3.ab3@3369>    CMP.b #"@",d0
00021F82 <AmiBlitz3.ab3@3370>    BNE 'l10
00021F86 <AmiBlitz3.ab3@3371>    CMP.b #"@",(a4)
00021F8A <AmiBlitz3.ab3@3372>    BNE 'l10
00021F90 <AmiBlitz3.ab3@3373>    TST.w ininclude
00021F94 <AmiBlitz3.ab3@3374>    BNE errorjoin
00021F9A <AmiBlitz3.ab3@3375>    MOVE.l sourceline3,a4
00021FA0 <AmiBlitz3.ab3@3376>    CMP.l #0,a4
00021FA4 <AmiBlitz3.ab3@3377>    BNE 'l11
00021FAA <AmiBlitz3.ab3@3378>    MOVE.l sourceline,a4
00021FAC <AmiBlitz3.ab3@3381>   MOVE.l (a4),a4
00021FB2 <AmiBlitz3.ab3@3382>       CMP.l #0,a4
00021FB6 <AmiBlitz3.ab3@3383>       BNE 'l12
00021FB8 <AmiBlitz3.ab3@3384>       MOVEQ #0,d0
00021FBE <AmiBlitz3.ab3@3385>       JSR error
00021FC4 <AmiBlitz3.ab3@3388>    MOVE.l a4,sourceline3
00021FC8 <AmiBlitz3.ab3@3389>    LEA 9(a4),a4
00021FCA <AmiBlitz3.ab3@3390>    MOVEQ #",",d0
00021FCE <AmiBlitz3.ab3@3394>   CMP.b #$2C,D0       ;','
00021FD2 <AmiBlitz3.ab3@3395>    BNE.w 'notc
00021FD4 <AmiBlitz3.ab3@3396>   TST.w D2
00021FD8 <AmiBlitz3.ab3@3397>    BEQ.w 'done
00021FDC <AmiBlitz3.ab3@3398>  BRA.w 'loop
00021FE0 <AmiBlitz3.ab3@3403>    CMP.b #$7B,D0      ; same as itisopen                                     ;"{"
00021FE4 <AmiBlitz3.ab3@3404>    BEQ.w 'l10b
00021FE8 <AmiBlitz3.ab3@3405>   CMP.b #$28,D0                                            ;"("
00021FEC <AmiBlitz3.ab3@3409>    BNE.w 'noto
00021FEE <AmiBlitz3.ab3@3410>   ADDQ.w #1,D2
00021FF2 <AmiBlitz3.ab3@3411>  BRA.w 'loop
00021FF6 <AmiBlitz3.ab3@3414>   CMP.b #$7D,D0       ;'}'                                    ;"}"
00021FFA <AmiBlitz3.ab3@3415>    BNE.w 'notcb
00021FFC <AmiBlitz3.ab3@3416>  TST.w D2
00022000 <AmiBlitz3.ab3@3417>    BEQ.w 'done
00022004 <AmiBlitz3.ab3@3422>    CMP.b #$7D,D0     ; same as isitclose                                       ;"}"
00022008 <AmiBlitz3.ab3@3423>    BEQ.w 'l10a
0002200C <AmiBlitz3.ab3@3424>   CMP.b #$29,D0                                            ;")"
00022010 <AmiBlitz3.ab3@3428>    BNE.w 'loop
00022012 <AmiBlitz3.ab3@3429>   SUBQ.w #1,D2
00022016 <AmiBlitz3.ab3@3430> BRA.w 'loop
00022018 <AmiBlitz3.ab3@3433> RTS
0002201A <AmiBlitz3.ab3@3438>       SUBQ.l #1,a4
00022020 <AmiBlitz3.ab3@3439>       CLR.l sourceline3
00022022 <AmiBlitz3.ab3@3440> RTS
00022024 <AmiBlitz3.ab3@3444>       MOVEQ #0,d0
00022026 <AmiBlitz3.ab3@3445>       SUBQ.l #1,a4
0002202C <AmiBlitz3.ab3@3446>       CLR.l sourceline3
0002202E <AmiBlitz3.ab3@3447> RTS
00022032 <AmiBlitz3.ab3@3452>   CMP.b #$7B,D0        ;'{'                                     ;"{"
00022036 <AmiBlitz3.ab3@3453>   BEQ.w 'yes
0002203A <AmiBlitz3.ab3@3454>   CMP.b #$28,D0        ;'('                                    ;"("
0002203C <AmiBlitz3.ab3@3457> RTS
00022040 <AmiBlitz3.ab3@3461>   CMP.b #$7D,D0         ;'}'                                   ;"}"
00022044 <AmiBlitz3.ab3@3462>   BEQ.w 'yes
00022048 <AmiBlitz3.ab3@3463>   CMP.b #$29,D0         ;')'                                   ;")"
0002204A <AmiBlitz3.ab3@3466> RTS
0002204C <AmiBlitz3.ab3@3470> stopit:     Ds.w 1
0002204E <AmiBlitz3.ab3@3471> clrreq:     Ds.w 1
00022052 <AmiBlitz3.ab3@3493>   MOVE.w clrreq(PC),D0
00022056 <AmiBlitz3.ab3@3494>    BEQ.w 'skip
0002205C <AmiBlitz3.ab3@3498>   LEA clrreq,a0
0002205E <AmiBlitz3.ab3@3499>   NOT.w (a0)                                               ;reass
00022064 <AmiBlitz3.ab3@3500>   MOVEA.l ptr_ThisTask,A0
00022068 <AmiBlitz3.ab3@3501>   CLR.l $1E(A0)
0002206C <AmiBlitz3.ab3@3502>   CLR.l $2A(A0)
0002206E <AmiBlitz3.ab3@3505> RTS
00022070 <AmiBlitz3.ab3@3508> intsused:  Ds.w 1
00022078 <AmiBlitz3.ab3@3512>   MOVE.w #-1,blitzoff
0002207E <AmiBlitz3.ab3@3513>   CLR.w intsused
00022084 <AmiBlitz3.ab3@3514>   CLR.w anyerrs
0002208A <AmiBlitz3.ab3@3515>   CLR.w blitzmode
00022090 <AmiBlitz3.ab3@3516>   CLR.w dontwrite_nomemleft                                              ;nomemleft
00022096 <AmiBlitz3.ab3@3517>   CLR.w constmode
0002209C <AmiBlitz3.ab3@3518>   CLR.w cmake
000220A2 <AmiBlitz3.ab3@3519>   CLR.w cfetchmode
000220A8 <AmiBlitz3.ab3@3520>   CLR.l intdata1
000220AE <AmiBlitz3.ab3@3521>   CLR.w fuckpos
000220B4 <AmiBlitz3.ab3@3522>   CLR.w procnum
000220BA <AmiBlitz3.ab3@3523>   CLR.w procnum2
000220C0 <AmiBlitz3.ab3@3524>   CLR.w dfetch
000220C6 <AmiBlitz3.ab3@3525>   CLR.l titleat
000220CC <AmiBlitz3.ab3@3526>   CLR.b usedpath
000220D2 <AmiBlitz3.ab3@3527>   CLR.b path2
000220D8 <AmiBlitz3.ab3@3528>   CLR.w inerr
000220DE <AmiBlitz3.ab3@3529>   CLR.w intlevel
000220E4 <AmiBlitz3.ab3@3530>   CLR.l cont_pc
000220EA <AmiBlitz3.ab3@3531>   CLR.l cont_pc2
000220F0 <AmiBlitz3.ab3@3532>   CLR.l lastcontlink
000220FA <AmiBlitz3.ab3@3534>   MOVE.l destbufferstart,destpointer
00022104 <AmiBlitz3.ab3@3535>   MOVE.l destbufferstart,bigpc
0002210E <AmiBlitz3.ab3@3536>   MOVE.l destbufferend,libend
00022118 <AmiBlitz3.ab3@3537>   MOVE.l data1start,data1
00022122 <AmiBlitz3.ab3@3538>   MOVE.l data2at,data2
0002212A <AmiBlitz3.ab3@3540>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00022132 <AmiBlitz3.ab3@3541>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00022138 <AmiBlitz3.ab3@3542>   CLR.w oldvcodelen
0002213E <AmiBlitz3.ab3@3543>   CLR.b lastgloballabel                                    ;lastbiglab org source
00022140 <AmiBlitz3.ab3@3545> RTS
00022142 <AmiBlitz3.ab3@3548> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00022148 <AmiBlitz3.ab3@3552>   LEA  clrreq,a1
0002214C <AmiBlitz3.ab3@3553>   MOVE.w #2000,(a1)
00022176 <AmiBlitz3.ab3@3554>   !basic
000221C6 <AmiBlitz3.ab3@3555>   comstatusstr  = !TRANS{"Initializing Compiler..."} ;default settings
000221CE <AmiBlitz3.ab3@3556>   calcpro       = 0
000221D6 <AmiBlitz3.ab3@3557>   calcpro_old   = 0
000221E2 <AmiBlitz3.ab3@3558>   typ_old       = -1
000221EE <AmiBlitz3.ab3@3559>   pass_old      = -1
000221F4 <AmiBlitz3.ab3@3560>   update_comstatus_gui = True ; for the first
0002222E <AmiBlitz3.ab3@3562>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00022268 <AmiBlitz3.ab3@3563>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00022286 <AmiBlitz3.ab3@3564>   !asm
0002228C <AmiBlitz3.ab3@3567>   CLR.w stopit
0002228E <AmiBlitz3.ab3@3568> RTS
00022294 <AmiBlitz3.ab3@3575>   CLR.w storedebugmode
0002229A <AmiBlitz3.ab3@3576>   CLR.b iserror
0002229E <AmiBlitz3.ab3@3578>   BSR.w compilerequester
000222A8 <AmiBlitz3.ab3@3580>   MOVE.l #0,globallinecount
000222AE <AmiBlitz3.ab3@3581>   JSR check_of_same_source
000222B2 <AmiBlitz3.ab3@3584>   BSR.w call_setpointerbusy
000222B6 <AmiBlitz3.ab3@3586>   BSR.w setcvars
000222BE <AmiBlitz3.ab3@3588>   MOVE.w #$8000,globalvarpointer
000222C8 <AmiBlitz3.ab3@3589>   MOVE.l #newtype_quick,defaulttype
000222CE <AmiBlitz3.ab3@3591>   MOVE.l A7,passstack
000222D8 <AmiBlitz3.ab3@3592>   MOVE.l #firstitem_,sourceline
000222E2 <AmiBlitz3.ab3@3593>   MOVE.w numlines_org,linesleft
000222EC <AmiBlitz3.ab3@3595>   MOVE.l numlines,numlines2
000222F2 <AmiBlitz3.ab3@3597>   ADDQ.w #1,linesleft
000222F8 <AmiBlitz3.ab3@3598>   ADDQ.l #1,numlines2
00022302 <AmiBlitz3.ab3@3599>   MOVE.l #-1,linenumat
00022306 <AmiBlitz3.ab3@3601>   BSR.w resetlibs
0002230A <AmiBlitz3.ab3@3602>   BSR.w Aclearallvars
00022310 <AmiBlitz3.ab3@3604>   LEA progress_per_line+2,A0
00022312 <AmiBlitz3.ab3@3605>   MOVEQ.l #$03,D0
00022314 <AmiBlitz3.ab3@3608>     CLR.w (A0)+
00022318 <AmiBlitz3.ab3@3609>   DBF D0,'okloop
0002231E <AmiBlitz3.ab3@3613>   LEA _include,a0
00022322 <AmiBlitz3.ab3@3614>   MOVEM.l a0-a6/d0-d7,-(a7)
00022328 <AmiBlitz3.ab3@3615>   LEA ptr_parameterstore,a1
0002232A <AmiBlitz3.ab3@3618>     MOVE.b (a0)+,(a1)+
0002232E <AmiBlitz3.ab3@3619>   BNE 'l1b
00022330 <AmiBlitz3.ab3@3621>   MOVEQ #9,d2
00022336 <AmiBlitz3.ab3@3622>   JSR findlabel2
0002233A <AmiBlitz3.ab3@3623>   BNE 'd
00022342 <AmiBlitz3.ab3@3624>   MOVE.l #0,8(a2)
00022346 <AmiBlitz3.ab3@3625>   MOVEM.l (a7)+,a0-a6/d0-d7
0002234A <AmiBlitz3.ab3@3626>  BRA 'd2
00022350 <AmiBlitz3.ab3@3629>   JSR addlabelhash
00022358 <AmiBlitz3.ab3@3630>   MOVE.l #$1,$4(A2)
00022360 <AmiBlitz3.ab3@3631>   MOVE.l #0,8(a2)
00022364 <AmiBlitz3.ab3@3632>   MOVEM.l (a7)+,a0-a6/d0-d7
0002236A <AmiBlitz3.ab3@3635>   LEA _debug,a0
0002236E <AmiBlitz3.ab3@3636>   MOVEM.l a0-a6/d0-d7,-(a7)
00022374 <AmiBlitz3.ab3@3637>   LEA ptr_parameterstore,a1
00022376 <AmiBlitz3.ab3@3640>     MOVE.b (a0)+,(a1)+
0002237A <AmiBlitz3.ab3@3641>   BNE 'l9b
0002237C <AmiBlitz3.ab3@3643>   MOVEQ #7,d2
00022382 <AmiBlitz3.ab3@3644>   JSR findlabel2
00022386 <AmiBlitz3.ab3@3645>   BNE 'd9
0002238A <AmiBlitz3.ab3@3646>   MOVE.b debugmode(PC),D0
0002238C <AmiBlitz3.ab3@3647>   EXT.w d0
0002238E <AmiBlitz3.ab3@3648>   EXT.l d0
00022392 <AmiBlitz3.ab3@3649>   MOVE.l d0,8(a2)
00022396 <AmiBlitz3.ab3@3650>   MOVEM.l (a7)+,a0-a6/d0-d7
0002239A <AmiBlitz3.ab3@3651>  BRA 'd9b
000223A0 <AmiBlitz3.ab3@3654>   JSR addlabelhash
000223A8 <AmiBlitz3.ab3@3655>   MOVE.l #$1,$4(A2)
000223AC <AmiBlitz3.ab3@3656>   MOVE.b debugmode(PC),D0
000223AE <AmiBlitz3.ab3@3657>   EXT.w d0
000223B0 <AmiBlitz3.ab3@3658>   EXT.l d0
000223B4 <AmiBlitz3.ab3@3659>   MOVE.l d0,8(a2)
000223B8 <AmiBlitz3.ab3@3660>   MOVEM.l (a7)+,a0-a6/d0-d7
000223BE <AmiBlitz3.ab3@3663>   MOVE.l #firstitem_,a0
000223C0 <AmiBlitz3.ab3@3664>   MOVE.l (a0),a0
000223C4 <AmiBlitz3.ab3@3665>   LEA 9(a0),a0
000223CC <AmiBlitz3.ab3@3666>   MOVE.w #0,exdebug
000223D2 <AmiBlitz3.ab3@3667>   TST.b debugmode
000223D6 <AmiBlitz3.ab3@3668>    BEQ 'l10
000223D8 <AmiBlitz3.ab3@3671>   MOVE.b (a0)+,d0
000223DC <AmiBlitz3.ab3@3672>    BEQ 'l10
000223E0 <AmiBlitz3.ab3@3673>   CMP.b #$20,d0
000223E4 <AmiBlitz3.ab3@3674>    BEQ 'l2
000223E6 <AmiBlitz3.ab3@3675>   SUBQ.l #1,a0
000223EC <AmiBlitz3.ab3@3676>   CMP.l #"DEBU",(a0)
000223F0 <AmiBlitz3.ab3@3677>    BNE 'l10
000223F6 <AmiBlitz3.ab3@3678>   CMP.b #"G",4(a0)
000223FA <AmiBlitz3.ab3@3679>    BNE 'l10
00022402 <AmiBlitz3.ab3@3680>   MOVE.w #$0,debugversion
0002240A <AmiBlitz3.ab3@3681>   MOVE.b #1,exdebug
00022410 <AmiBlitz3.ab3@3688>   LEA nops4,A0
00022416 <AmiBlitz3.ab3@3689>   LEA nopsf,A1
0002241C <AmiBlitz3.ab3@3690>   JSR pokecode2                                            ;write intro nops
00022422 <AmiBlitz3.ab3@3692>   MOVE.l #$01010101,d1
00022428 <AmiBlitz3.ab3@3693>   JSR writedatalong                                        ;for the 4 tempregs
0002242E <AmiBlitz3.ab3@3694>   JSR writedatalong
00022434 <AmiBlitz3.ab3@3695>   JSR writedatalong
0002243A <AmiBlitz3.ab3@3696>   JSR writedatalong
00022440 <AmiBlitz3.ab3@3697>   TST.b saved0
00022444 <AmiBlitz3.ab3@3698>    BEQ 'l1
0002244A <AmiBlitz3.ab3@3699>   MOVE.l #$4e714e71,d1
00022450 <AmiBlitz3.ab3@3700>   JSR writelong                                            ;add 2 nops
00022456 <AmiBlitz3.ab3@3701>   MOVE.l #$4e714e71,d1
0002245C <AmiBlitz3.ab3@3702>   JSR writelong                                            ;add 2 nops
00022462 <AmiBlitz3.ab3@3703>   MOVE.l #$4e714e71,d1
00022468 <AmiBlitz3.ab3@3704>   JSR writelong                                            ;add 2 nops
0002246E <AmiBlitz3.ab3@3705>    MOVE.l #$4e714e71,d1
00022474 <AmiBlitz3.ab3@3706>   JSR writelong                                            ;add 2 nops
00022478 <AmiBlitz3.ab3@3710>   MOVE.b debugmode(PC),D1
0002247C <AmiBlitz3.ab3@3711>    BEQ.b 'dskip
00022486 <AmiBlitz3.ab3@3712>   MOVE.b debugmode,storedebugmode
0002248A <AmiBlitz3.ab3@3714>   MOVE.w #$FFDC,D1        ;#runerrlib,
0002248E <AmiBlitz3.ab3@3715>    BSR.w uselib
00022494 <AmiBlitz3.ab3@3717>   TST.w debugversion                                       ;make a version for debugger
00022498 <AmiBlitz3.ab3@3718>    BNE.b 'exec
0002249C <AmiBlitz3.ab3@3722>   MOVE.w #$FA3C,D1        ;#debuglib,
000224A0 <AmiBlitz3.ab3@3723>    BSR.w uselib
000224A4 <AmiBlitz3.ab3@3724>   MOVE.w #$0001,D1        ;#dhandlerlib,
000224A8 <AmiBlitz3.ab3@3725>    BSR.w uselib
000224AC <AmiBlitz3.ab3@3726>  BRA.b 'dskip
000224B0 <AmiBlitz3.ab3@3731>   MOVE.w #$FA32,D1        ;#rundebuglib,
000224B4 <AmiBlitz3.ab3@3732>   BSR.w uselib
000224B8 <AmiBlitz3.ab3@3735>   BSR.w nextline
000224BE <AmiBlitz3.ab3@3737>   CLR.l linenum
000224C4 <AmiBlitz3.ab3@3738>   CLR.l stacktrack
000224CA <AmiBlitz3.ab3@3744>   ADDQ.l #1,linenum
000224D4 <AmiBlitz3.ab3@3745>   MOVE.l destpointer,destpointer2
000224DA <AmiBlitz3.ab3@3746>   MOVE.l a5,sourceline2
000224DE <AmiBlitz3.ab3@3748>   BSR.w compile_line                                        ;compile pass
000224E2 <AmiBlitz3.ab3@3752>   BSR.w nextline
000224E6 <AmiBlitz3.ab3@3753>    BNE.w passloop
000224EA <AmiBlitz3.ab3@3754>   BSR.w JUMP_do_runerrson
000224EE <AmiBlitz3.ab3@3755>   BSR.w pointchk
000224F4 <AmiBlitz3.ab3@3757>   TST.b objectcount
000224F8 <AmiBlitz3.ab3@3758>    BNE macenderr
000224FE <AmiBlitz3.ab3@3760>   CLR.l linenumat
00022502 <AmiBlitz3.ab3@3761>   BSR.w errchx2
0002250C <AmiBlitz3.ab3@3763>   CMP.l #-1,bssend
00022510 <AmiBlitz3.ab3@3764>    BNE 'l30
0002251A <AmiBlitz3.ab3@3765>   MOVE.l destpointer,bssend                                ;compile end
00022520 <AmiBlitz3.ab3@3768>   MOVE.l destpointer,d0
0002252A <AmiBlitz3.ab3@3769>   CMP.l #-1,bssstart
0002252E <AmiBlitz3.ab3@3770>   BNE 'lnf6
00022538 <AmiBlitz3.ab3@3771>   CMP.l #-1,chipstart
0002253C <AmiBlitz3.ab3@3772>   BNE 'lnf6
00022540 <AmiBlitz3.ab3@3773>  BRA 'leven4
00022546 <AmiBlitz3.ab3@3776>   MOVE.l destpointer,d1
00022548 <AmiBlitz3.ab3@3777>   ADDQ.l #3,d1
0002254E <AmiBlitz3.ab3@3778>   AND.l #$fffffffc,d1                                      ;bug ?
00022554 <AmiBlitz3.ab3@3779>   MOVE.l d1,destpointer
0002255E <AmiBlitz3.ab3@3782>   MOVE.l destpointer,codeend
00022568 <AmiBlitz3.ab3@3783>   CMP.l #-1,chipend
0002256C <AmiBlitz3.ab3@3784>   BNE 'l31
00022576 <AmiBlitz3.ab3@3785>   MOVE.l destpointer,chipend
0002257C <AmiBlitz3.ab3@3788>   MOVE.l destpointer,d1
0002257E <AmiBlitz3.ab3@3789>   ADDQ.l #1,d1
00022584 <AmiBlitz3.ab3@3790>   AND.l #$fffffffe,d1                                     ;new evenexit
0002258A <AmiBlitz3.ab3@3791>   MOVE.l d1,destpointer
0002258E <AmiBlitz3.ab3@3794>   MOVE.b debugmode(PC),D1
00022592 <AmiBlitz3.ab3@3795>    BEQ.b 'nodb
00022596 <AmiBlitz3.ab3@3797>    BSR.w debugstuff
0002259A <AmiBlitz3.ab3@3798>   MOVE.w #$C300,D1        ;#finalscheck,
000225A0 <AmiBlitz3.ab3@3799>    JSR Atokejsr
000225A4 <AmiBlitz3.ab3@3801>    BSR.w debugstuff
000225A8 <AmiBlitz3.ab3@3802>   MOVE.l eopcode(PC),D1
000225AE <AmiBlitz3.ab3@3803>    JSR writelong
000225B2 <AmiBlitz3.ab3@3804>   MOVE.l lastcontlink(PC),D1
000225B6 <AmiBlitz3.ab3@3805>    BEQ.b 'nocl
000225B8 <AmiBlitz3.ab3@3806>   MOVEA.l D1,A0
000225BC <AmiBlitz3.ab3@3807>   CLR.w $6(A0)
000225C6 <AmiBlitz3.ab3@3814>   MOVE.l destpointer,endop                                ;where end goes...
000225CC <AmiBlitz3.ab3@3816>   TST.w blitzmode
000225D0 <AmiBlitz3.ab3@3817>   BEQ.w 'nobl
000225D4 <AmiBlitz3.ab3@3818>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
000225DA <AmiBlitz3.ab3@3821>   TST.w intsused
000225DE <AmiBlitz3.ab3@3822>   BEQ.b 'noints
000225E2 <AmiBlitz3.ab3@3823>   MOVE.w #$C105,D1                                        ;interupts off!
000225E8 <AmiBlitz3.ab3@3824>   JSR tokejsr2
000225EC <AmiBlitz3.ab3@3827>   BSR.w calcstatic
000225F2 <AmiBlitz3.ab3@3828>   MOVE.w D4,numstatic
000225F8 <AmiBlitz3.ab3@3829>   MOVE.l D3,staticdata
000225FC <AmiBlitz3.ab3@3830>    BSR.w calcmaxs
00022602 <AmiBlitz3.ab3@3832>   TST.l tokeslist
00022606 <AmiBlitz3.ab3@3833>    BEQ.b 'skipjsrs
0002260C <AmiBlitz3.ab3@3835>   MOVE.w gotocode,D1                                       ;jmp!
00022612 <AmiBlitz3.ab3@3836>    JSR writeword
0002261C <AmiBlitz3.ab3@3837>   MOVE.l destpointer,endjmpat
00022620 <AmiBlitz3.ab3@3838>    BSR.w addoff
00022626 <AmiBlitz3.ab3@3839>    JSR writelong                                           
0002262A <AmiBlitz3.ab3@3841>    BSR.w fixjsrs                                         ;has to be done before finits!
00022630 <AmiBlitz3.ab3@3845>   TST.w dontwrite_nomemleft
00022634 <AmiBlitz3.ab3@3846>    BNE.b 'skipjsrs
00022638 <AmiBlitz3.ab3@3847>   MOVEA.l endjmpat(PC),A4
0002263E <AmiBlitz3.ab3@3848>   MOVE.l destpointer,(A4)
00022644 <AmiBlitz3.ab3@3852>   TST.b returncode
00022648 <AmiBlitz3.ab3@3853>   BEQ 'l2
0002264C <AmiBlitz3.ab3@3854>   MOVE.w #$2e80,d1
00022652 <AmiBlitz3.ab3@3855>   JSR writeword
00022658 <AmiBlitz3.ab3@3859>   JSR makefinits
0002265E <AmiBlitz3.ab3@3861>   TST.b returncode
00022662 <AmiBlitz3.ab3@3862>   BEQ 'l3
00022666 <AmiBlitz3.ab3@3863>   MOVE.w #$4e75,d1
0002266C <AmiBlitz3.ab3@3864>   JSR writeword
00022670 <AmiBlitz3.ab3@3865>  BRA 'l1
00022676 <AmiBlitz3.ab3@3869>   MOVE.l #$70004E75,D1
0002267C <AmiBlitz3.ab3@3870>   JSR writelong                                            ;write moveq #0,d0:rts
00022682 <AmiBlitz3.ab3@3873>   JSR makeinits
00022686 <AmiBlitz3.ab3@3874>   BSR.w asmfixer
0002268A <AmiBlitz3.ab3@3876>   BSR.w close_compilewin
0002268E <AmiBlitz3.ab3@3877> BRA.w call_setpointernormal
00022694 <AmiBlitz3.ab3@3880> JUMP_do_runerrson JMP do_runerrson
00022696 <AmiBlitz3.ab3@3884> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00022698 <AmiBlitz3.ab3@3885>             Dc.b $4E,$40                                   ;TRAP  #00
0002269C <AmiBlitz3.ab3@3887> endjmpat:   Ds.l 1
000226A2 <AmiBlitz3.ab3@3891>   MOVEA.l newtype_string,A2
000226A8 <AmiBlitz3.ab3@3892>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
000226AC <AmiBlitz3.ab3@3895>     CMPA.w #$0,A2
000226B0 <AmiBlitz3.ab3@3896>      BEQ.w 'done
000226B4 <AmiBlitz3.ab3@3897>     CMP.l $4(A2),D0
000226B8 <AmiBlitz3.ab3@3898>      BNE.w 'next
000226C0 <AmiBlitz3.ab3@3899>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
000226C4 <AmiBlitz3.ab3@3900>  BRA.w notypeerr
000226C6 <AmiBlitz3.ab3@3903>     MOVEA.l (A2),A2
000226CA <AmiBlitz3.ab3@3904>  BRA.w 'loop
000226CC <AmiBlitz3.ab3@3907> RTS
000226D2 <AmiBlitz3.ab3@3911>   LEA labelbase,A2
000226D4 <AmiBlitz3.ab3@3915>   MOVE.l (A2),D0                                           ;testlabels
000226D8 <AmiBlitz3.ab3@3916>    BEQ.w 'done
000226DA <AmiBlitz3.ab3@3917>   MOVEA.l D0,A2
000226DE <AmiBlitz3.ab3@3918>   MOVE.l $4(A2),D0
000226E2 <AmiBlitz3.ab3@3919>   BTST #$0,D0
000226E6 <AmiBlitz3.ab3@3920>    BNE.w 'loop
000226EA <AmiBlitz3.ab3@3921>   MOVE.l $8(A2),D0
000226EE <AmiBlitz3.ab3@3922>    BNE.w 'loop
000226F6 <AmiBlitz3.ab3@3923>   MOVE.w $10(A2),linenumat+2
000226F8 <AmiBlitz3.ab3@3924>   MOVEQ #0,d0
000226FC <AmiBlitz3.ab3@3925>   MOVE.b $12(a2),d0
00022704 <AmiBlitz3.ab3@3926>   MOVE.w 0(a2,d0),linenumat
0002270A <AmiBlitz3.ab3@3927>  JMP nolaberr                                               ;label not found
00022710 <AmiBlitz3.ab3@3930>   MOVE.l concomsp,D0
00022716 <AmiBlitz3.ab3@3931>   CMP.l #concomstack,D0
0002271A <AmiBlitz3.ab3@3932>    BNE.w chxerr4
00022720 <AmiBlitz3.ab3@3933>   MOVE.w connest,D1
00022724 <AmiBlitz3.ab3@3934>    BNE.w chxerr4
00022726 <AmiBlitz3.ab3@3938>   MOVE.l D1,-(A7)
0002272C <AmiBlitz3.ab3@3939>   MOVE.l firstsel,D1
00022730 <AmiBlitz3.ab3@3940>    BNE.w 'err1
00022736 <AmiBlitz3.ab3@3941>   MOVE.l firstrep,D1
0002273A <AmiBlitz3.ab3@3942>    BNE.w 'err2
00022740 <AmiBlitz3.ab3@3943>   MOVE.w intstring,D1
00022744 <AmiBlitz3.ab3@3944>    BNE.w 'err3
00022748 <AmiBlitz3.ab3@3945>   MOVE.l 4(a7),d1
0002274E <AmiBlitz3.ab3@3946>   MOVE.w proceduremode,D1
00022752 <AmiBlitz3.ab3@3947>    BNE.w 'err6
00022758 <AmiBlitz3.ab3@3948>   MOVE.l firstiff,d1
0002275C <AmiBlitz3.ab3@3949>    BNE 'err5
00022762 <AmiBlitz3.ab3@3950>   MOVE.l firstfor,D1
00022766 <AmiBlitz3.ab3@3951>    BNE.w 'err7
00022768 <AmiBlitz3.ab3@3952>   MOVE.l (A7)+,D1
0002276A <AmiBlitz3.ab3@3953>  RTS
00022774 <AmiBlitz3.ab3@3956>   MOVE.l sellineat,linenumat
0002277A <AmiBlitz3.ab3@3957>  JMP selerrz
00022784 <AmiBlitz3.ab3@3960>   MOVE.l replineat,linenumat
0002278A <AmiBlitz3.ab3@3961>  JMP unterr3
00022794 <AmiBlitz3.ab3@3964>   MOVE.l intlineat,linenumat
0002279A <AmiBlitz3.ab3@3965>  JMP interr2
000227A4 <AmiBlitz3.ab3@3968>   MOVE.l iflineat,linenumat
000227AA <AmiBlitz3.ab3@3969>  JMP noenderr
000227B4 <AmiBlitz3.ab3@3972>   MOVE.l prolineat,linenumat
000227BA <AmiBlitz3.ab3@3973>  JMP nopenderr
000227C4 <AmiBlitz3.ab3@3976>   MOVE.l forlineat,linenumat
000227CA <AmiBlitz3.ab3@3977> JMP nonexterr
000227D4 <AmiBlitz3.ab3@3981>   MOVE.l ciflineat,linenumat
000227DA <AmiBlitz3.ab3@3982> JMP nocenderr
000227E4 <AmiBlitz3.ab3@3986>   MOVE.l data1,maxsat
000227E6 <AmiBlitz3.ab3@3987>   MOVEQ.l #$00,D4
000227EC <AmiBlitz3.ab3@3988>   MOVEA.l libpointer,A2
000227F0 <AmiBlitz3.ab3@3991>     CMPA.w #$0,A2
000227F4 <AmiBlitz3.ab3@3992>      BEQ.w 'done
000227F8 <AmiBlitz3.ab3@3993>     TST.w $C(A2)
000227FC <AmiBlitz3.ab3@3994>      BPL.w 'next
00022800 <AmiBlitz3.ab3@3995>     MOVE.l $12(A2),D0
00022804 <AmiBlitz3.ab3@3996>     TST.w -$2(A2,D0.L)
00022808 <AmiBlitz3.ab3@3997>      BEQ.w 'next
0002280A <AmiBlitz3.ab3@3999>     ADDQ.w #1,D4
0002280E <AmiBlitz3.ab3@4000>     MOVE.w -$6(A2,D0.L),D1
00022812 <AmiBlitz3.ab3@4001>     BSR.w pokedata1
00022814 <AmiBlitz3.ab3@4002>     MOVEQ.l #$01,D1
00022818 <AmiBlitz3.ab3@4003>     MOVE.w -$2(A2,D0.L),D2
0002281A <AmiBlitz3.ab3@4004>     LSL.w D2,D1
0002281E <AmiBlitz3.ab3@4005>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00022822 <AmiBlitz3.ab3@4006>     BSR.w writedatalong
00022824 <AmiBlitz3.ab3@4009>     MOVEA.l (A2),A2
00022828 <AmiBlitz3.ab3@4010>  BRA.w 'loop
0002282E <AmiBlitz3.ab3@4013>   MOVE.w D4,maxsused
00022832 <AmiBlitz3.ab3@4014>    BEQ.w 'done2
00022836 <AmiBlitz3.ab3@4015>   MOVE.w #$FFFA,D1       ;was #65530    ;use memlib                                  ;;use memlib
0002283A <AmiBlitz3.ab3@4016> BRA.w uselib
0002283C <AmiBlitz3.ab3@4019> RTS
00022842 <AmiBlitz3.ab3@4025>    MOVE.l a7,stackaddr
00022846 <AmiBlitz3.ab3@4027>    BSR.w compile_term
0002284A <AmiBlitz3.ab3@4028>    BSR.w reget
0002284E <AmiBlitz3.ab3@4029>    BNE.w illeolerr
00022854 <AmiBlitz3.ab3@4031>    TST.w dontwrite_nomemleft
00022858 <AmiBlitz3.ab3@4032>    BNE 'l1
0002285E <AmiBlitz3.ab3@4033>    TST.l stacktrack
00022862 <AmiBlitz3.ab3@4034>    BNE errormsg_stack
00022866 <AmiBlitz3.ab3@4038>    CMP.w #-$7FDE,D0            ; was #$8000+34
0002286A <AmiBlitz3.ab3@4039>    BNE.w 'notelse
00022870 <AmiBlitz3.ab3@4040>    JSR do_else2
00022874 <AmiBlitz3.ab3@4041>  BRA.w compile_line
00022876 <AmiBlitz3.ab3@4044>   TST.w D0
0002287A <AmiBlitz3.ab3@4045>   BNE.w compile_line
00022880 <AmiBlitz3.ab3@4051>   MOVE.l firstiff,D0
00022884 <AmiBlitz3.ab3@4052>    BEQ.w 'done
00022886 <AmiBlitz3.ab3@4053>   MOVEA.l D0,A0
0002288A <AmiBlitz3.ab3@4054>   MOVE.w $C(A0),D1
0002288E <AmiBlitz3.ab3@4055>    BPL.w 'done
00022892 <AmiBlitz3.ab3@4059>   BCLR #$F,D1
00022898 <AmiBlitz3.ab3@4060>    JSR doendif2
0002289E <AmiBlitz3.ab3@4061>    JSR freetheifz
000228A2 <AmiBlitz3.ab3@4062> BRA.w 'unthen
000228A4 <AmiBlitz3.ab3@4065> RTS
000228AA <AmiBlitz3.ab3@4069>   LEA lastgloballabel,A0
000228AC <AmiBlitz3.ab3@4070>   TST.b (A0)
000228B0 <AmiBlitz3.ab3@4071>   BEQ.w nolocerr
000228B6 <AmiBlitz3.ab3@4072>   LEA ptr_parameterstore,A1
000228B8 <AmiBlitz3.ab3@4073>   MOVEQ.l #$00,D2
000228BA <AmiBlitz3.ab3@4076>   ADDQ.w #1,D2
000228BC <AmiBlitz3.ab3@4077>   MOVE.b (A0)+,(A1)+
000228C0 <AmiBlitz3.ab3@4078>    BNE.w 'loop
000228C6 <AmiBlitz3.ab3@4079>   MOVE.b #$27,-$1(A1)
000228C8 <AmiBlitz3.ab3@4080>   MOVE.w D2,-(A7)
000228CE <AmiBlitz3.ab3@4081>    JSR makename4
000228D0 <AmiBlitz3.ab3@4082>   CMP.w (A7)+,D2
000228D4 <AmiBlitz3.ab3@4083>    BEQ.w syntaxerr
000228D6 <AmiBlitz3.ab3@4084>    TST.w d0
000228DA <AmiBlitz3.ab3@4085>    BPL 'done
000228E2 <AmiBlitz3.ab3@4086>    MOVE.w #$3a,lastchar
000228E4 <AmiBlitz3.ab3@4087>    SUBQ.l #2,a5
000228E6 <AmiBlitz3.ab3@4090> RTS
000228F0 <AmiBlitz3.ab3@4094>   MOVE.l #forthstack,forthsp
000228FA <AmiBlitz3.ab3@4095>   MOVE.l #precstack,precsp
000228FC <AmiBlitz3.ab3@4096> RTS
000228FE <AmiBlitz3.ab3@4103>   MOVEQ.l #$00,D4
00022928 <AmiBlitz3.ab3@4106>   !basic
0002296A <AmiBlitz3.ab3@4107> 
0002297A <AmiBlitz3.ab3@4109>   If (c_abort = 1)           ; check if set
0002297C <AmiBlitz3.ab3@4110>     MOVEQ.l #-$01,d4
00022982 <AmiBlitz3.ab3@4111>     MOVE.w D4,stopit
000229A0 <AmiBlitz3.ab3@4112>     !asm
000229A4 <AmiBlitz3.ab3@4113>     BRA 'skip
000229C2 <AmiBlitz3.ab3@4115>   !asm
000229C4 <AmiBlitz3.ab3@4116>   MOVEQ.l #$00,D6
000229C6 <AmiBlitz3.ab3@4117>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
000229C8 <AmiBlitz3.ab3@4121> RTS
000229CC <AmiBlitz3.ab3@4125>   MOVE.w stopit(PC),D0
000229D0 <AmiBlitz3.ab3@4126>   BEQ 'chk
000229D6 <AmiBlitz3.ab3@4128>   SUBQ.w #1,stopit
000229D8 <AmiBlitz3.ab3@4133>  RTS
000229E0 <AmiBlitz3.ab3@4137>   MOVE.w #2000,stopit
000229E4 <AmiBlitz3.ab3@4139>   BSR.w chkrealstop
000229E8 <AmiBlitz3.ab3@4140>   BEQ.b 'rts
000229EC <AmiBlitz3.ab3@4143>   BSR.w close_compilewin
000229F0 <AmiBlitz3.ab3@4144>   BSR.w call_setpointernormal
000229F6 <AmiBlitz3.ab3@4146>   MOVEA.l errstack,A7
000229FC <AmiBlitz3.ab3@4147>   MOVEA.l errcont,A0
00022A04 <AmiBlitz3.ab3@4148>   MOVE.w #-1,anyerrs
00022A06 <AmiBlitz3.ab3@4149> JMP (A0)
00022A0A <AmiBlitz3.ab3@4152> d_pc:           Ds.l 1
00022A0E <AmiBlitz3.ab3@4153> d_bigpc:        Ds.l 1
00022A10 <AmiBlitz3.ab3@4154> d_nomemleft:    Ds.w 1
00022A14 <AmiBlitz3.ab3@4155> cont_pc:        Ds.l 1
00022A18 <AmiBlitz3.ab3@4156> cont_pc2:       Ds.l 1
00022A1C <AmiBlitz3.ab3@4157> lastcontlink:   Ds.l 1
00022A20 <AmiBlitz3.ab3@4161>   ORI.w #$4E40,D1
00022A24 <AmiBlitz3.ab3@4162> BRA.w JUMP_writeword
00022A2A <AmiBlitz3.ab3@4166>   TST.b debugmode
00022A2E <AmiBlitz3.ab3@4167>   BEQ.w debugstuffa_rts
00022A34 <AmiBlitz3.ab3@4178>   TST.w dirmode                                            ;or while in direct mode...
00022A38 <AmiBlitz3.ab3@4179>    BNE debugstuffa_rts
00022A42 <AmiBlitz3.ab3@4181>   MOVE.l destpointer,d_pc
00022A4C <AmiBlitz3.ab3@4182>   MOVE.l bigpc,d_bigpc
00022A56 <AmiBlitz3.ab3@4183>   MOVE.w dontwrite_nomemleft,d_nomemleft
00022A5A <AmiBlitz3.ab3@4185>   MOVEM.l D0-D1,-(A7)
00022A5C <AmiBlitz3.ab3@4187>   MOVEQ.l #$01,D1
00022A60 <AmiBlitz3.ab3@4188>    BSR.w writetrap                                         ;write the adress to sourceline
00022A66 <AmiBlitz3.ab3@4192>    MOVE.l destpointer,D0
00022A6C <AmiBlitz3.ab3@4193>   MOVE.l cont_pc,D1
00022A72 <AmiBlitz3.ab3@4194>   MOVE.l D0,cont_pc
00022A78 <AmiBlitz3.ab3@4195>   MOVE.l D1,cont_pc2
00022A7C <AmiBlitz3.ab3@4196>    BEQ.b 'skip
00022A82 <AmiBlitz3.ab3@4198>   TST.w dontwrite_nomemleft
00022A86 <AmiBlitz3.ab3@4199>    BNE.b 'skip
00022A88 <AmiBlitz3.ab3@4201>   MOVEA.l D1,A4
00022A8A <AmiBlitz3.ab3@4202>   SUB.l A4,D0
00022A8E <AmiBlitz3.ab3@4203>   MOVE.w D0,$6(A4)
00022A94 <AmiBlitz3.ab3@4204>   MOVE.l A4,lastcontlink
00022A9A <AmiBlitz3.ab3@4208>   TST.w ininclude
00022AA0 <AmiBlitz3.ab3@4210>   TST.w makeexec
00022AA4 <AmiBlitz3.ab3@4211>   BEQ 'l1
00022AAA <AmiBlitz3.ab3@4212>   TST.w exdebug
00022AAE <AmiBlitz3.ab3@4213>   BEQ 'noinc
00022AB2 <AmiBlitz3.ab3@4216>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00022AB8 <AmiBlitz3.ab3@4217>   MOVE.l data1,d1
00022ABE <AmiBlitz3.ab3@4218>   TST.b firsttime
00022AC2 <AmiBlitz3.ab3@4219>   BNE 'nofirst
00022ACA <AmiBlitz3.ab3@4220>   MOVE.b #1,firsttime
00022AD0 <AmiBlitz3.ab3@4221>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022AD6 <AmiBlitz3.ab3@4222>   JSR writedatalong
00022ADC <AmiBlitz3.ab3@4223>   MOVE.l #"AmiB",d1
00022AE2 <AmiBlitz3.ab3@4224>   JSR writedatalong
00022AE8 <AmiBlitz3.ab3@4225>   MOVE.l destbufferstart,d1
00022AEE <AmiBlitz3.ab3@4226>   JSR writedatalong
00022AF4 <AmiBlitz3.ab3@4227>   TST.w dontwrite_nomemleft
00022AF8 <AmiBlitz3.ab3@4228>   BNE 'nohunk
00022AFE <AmiBlitz3.ab3@4229>   MOVE.l data1,d1
00022B00 <AmiBlitz3.ab3@4230>   SUBQ.l #4,d1
00022B06 <AmiBlitz3.ab3@4231>   SUB.l destbufferstart,d1
00022B08 <AmiBlitz3.ab3@4232>   MOVE.l d1,d2
00022B0E <AmiBlitz3.ab3@4233>   JSR addhunkoffset
00022B14 <AmiBlitz3.ab3@4236>   MOVE.l destpointer,d2
00022B1A <AmiBlitz3.ab3@4237>   MOVE.l data1,d1
00022B20 <AmiBlitz3.ab3@4240>   MOVE.l destpointer,d2
00022B22 <AmiBlitz3.ab3@4241>   MOVE.l d1,d3
00022B28 <AmiBlitz3.ab3@4242>   SUB.l destbufferstart,d1
00022B2E <AmiBlitz3.ab3@4243>   OR.l #$80000000,d1
00022B34 <AmiBlitz3.ab3@4244>   JSR writelong
00022B3A <AmiBlitz3.ab3@4245>   TST.w inmacro
00022B3E <AmiBlitz3.ab3@4246>   BEQ 'sc1
00022B44 <AmiBlitz3.ab3@4247>   MOVE.l myline,a0
00022B48 <AmiBlitz3.ab3@4249>  BRA 'inc2
00022B4E <AmiBlitz3.ab3@4252>   TST.w ininclude
00022B52 <AmiBlitz3.ab3@4253>   BEQ 'inc
00022B58 <AmiBlitz3.ab3@4254>   MOVE.l includesourceline,a0
00022B5C <AmiBlitz3.ab3@4255>  BRA 'inc2
00022B62 <AmiBlitz3.ab3@4258>   MOVE.l sourceline,a0
00022B66 <AmiBlitz3.ab3@4259>   LEA 9(a0),a0
00022B68 <AmiBlitz3.ab3@4262>   MOVE.l d1,d2
00022B6A <AmiBlitz3.ab3@4263>   MOVE.l A5,D1
00022B6C <AmiBlitz3.ab3@4264>   SUB.l a0,D1
00022B72 <AmiBlitz3.ab3@4265>   ADD.l #9,d1
00022B76 <AmiBlitz3.ab3@4266>   BSR.w JUMP_writeword
00022B7C <AmiBlitz3.ab3@4267>   CMP.l #9,d1
00022B80 <AmiBlitz3.ab3@4268>   BEQ 'pos1
00022B86 <AmiBlitz3.ab3@4269>   TST.w dontwrite_nomemleft
00022B8A <AmiBlitz3.ab3@4270>   BNE 'nopad
00022B90 <AmiBlitz3.ab3@4271>   MOVE.l lastsourceline,d1
00022B94 <AmiBlitz3.ab3@4272>   MOVE.l d1,-6(a4)
00022B98 <AmiBlitz3.ab3@4273>  BRA 'nopad
00022B9E <AmiBlitz3.ab3@4276>   MOVE.l d2,lastsourceline
00022BA8 <AmiBlitz3.ab3@4277>    MOVE.l destpointer,lastdestpointer
00022BAA <AmiBlitz3.ab3@4278>    MOVEQ #0,d1
00022BB0 <AmiBlitz3.ab3@4279>   MOVE.l data1,d2
00022BB6 <AmiBlitz3.ab3@4280>   SUB.l destbufferstart,d2
00022BBC <AmiBlitz3.ab3@4281>   JSR writedatalong
00022BC2 <AmiBlitz3.ab3@4282>   TST.w dontwrite_nomemleft
00022BC6 <AmiBlitz3.ab3@4283>   BNE 'no2
00022BCC <AmiBlitz3.ab3@4284>   JSR addhunkoffset
00022BD2 <AmiBlitz3.ab3@4287>   MOVE.l data1,d2
00022BD8 <AmiBlitz3.ab3@4288>   SUB.l destbufferstart,d2
00022BDE <AmiBlitz3.ab3@4289>   JSR writedatalong
00022BE4 <AmiBlitz3.ab3@4290>   TST.w dontwrite_nomemleft
00022BE8 <AmiBlitz3.ab3@4291>   BNE 'no
00022BEE <AmiBlitz3.ab3@4292>   JSR addhunkoffset
00022BF4 <AmiBlitz3.ab3@4293>   MOVE.l lastwritedat,a1
00022BFA <AmiBlitz3.ab3@4294>   CMP.l #0,a1
00022BFE <AmiBlitz3.ab3@4295>   BEQ 'no
00022C00 <AmiBlitz3.ab3@4296>   MOVE.l d3,(a1)
00022C08 <AmiBlitz3.ab3@4297>   MOVE.l prevwritedat,4(a1)
00022C12 <AmiBlitz3.ab3@4298>   MOVE.l lastwritedat,prevwritedat
00022C18 <AmiBlitz3.ab3@4301>   MOVE.l d3,lastwritedat
00022C1A <AmiBlitz3.ab3@4302>   MOVEQ #4,d1
00022C1E <AmiBlitz3.ab3@4303>   BSR pokedata1b
00022C20 <AmiBlitz3.ab3@4306>   MOVE.b (a0)+,d1
00022C24 <AmiBlitz3.ab3@4307>   BEQ 'done
00022C28 <AmiBlitz3.ab3@4308>   BSR pokedata1b
00022C2C <AmiBlitz3.ab3@4309>  BRA 'loop
00022C2E <AmiBlitz3.ab3@4312>   MOVEQ #0,d1
00022C32 <AmiBlitz3.ab3@4313>   BSR pokedata1b
00022C38 <AmiBlitz3.ab3@4314>   MOVE.l data1,d1
00022C3C <AmiBlitz3.ab3@4315>   BTST #0,d1
00022C40 <AmiBlitz3.ab3@4316>   BEQ 'nopad
00022C42 <AmiBlitz3.ab3@4317>   MOVEQ #0,d1
00022C46 <AmiBlitz3.ab3@4318>   BSR pokedata1b
00022C4A <AmiBlitz3.ab3@4321>   MOVEM.l (a7)+,a0-a1/d2/d3
00022C4E <AmiBlitz3.ab3@4322>  BRA 'noinc2
00022C54 <AmiBlitz3.ab3@4326>   MOVE.l sourceline,D1
00022C5A <AmiBlitz3.ab3@4327>   JSR writelong
00022C5C <AmiBlitz3.ab3@4328>   MOVE.l A5,D1
00022C62 <AmiBlitz3.ab3@4329>   SUB.l sourceline,D1
00022C68 <AmiBlitz3.ab3@4330>   JSR writeword
00022C6A <AmiBlitz3.ab3@4333>   MOVEQ.l #$00,D1
00022C70 <AmiBlitz3.ab3@4334>   JSR writeword          ;next cont goes here!                                  ; was: BSR.w writeword
00022C74 <AmiBlitz3.ab3@4336>   MOVEM.l (A7)+,D0-D1
00022C76 <AmiBlitz3.ab3@4339> RTS
00022C7C <AmiBlitz3.ab3@4343>   TST.b debugmode                                          ;extern debug
00022C80 <AmiBlitz3.ab3@4344>    BEQ.b 'rts
00022C86 <AmiBlitz3.ab3@4345>   TST.b dirmode
00022C8A <AmiBlitz3.ab3@4346>   BNE 'rts
00022C94 <AmiBlitz3.ab3@4354>   MOVE.w d_nomemleft,dontwrite_nomemleft
00022C9E <AmiBlitz3.ab3@4355>   MOVE.l d_bigpc,bigpc
00022CA8 <AmiBlitz3.ab3@4356>   MOVE.l d_pc,destpointer
00022CB2 <AmiBlitz3.ab3@4357>   MOVE.l cont_pc2,cont_pc
00022CB4 <AmiBlitz3.ab3@4360> RTS
00022CBE <AmiBlitz3.ab3@4365>   MOVE.l #forthstack,forthsp
00022CC8 <AmiBlitz3.ab3@4366>   MOVE.l #precstack,precsp
00022CCE <AmiBlitz3.ab3@4367>   CLR.w regnum
00022CD4 <AmiBlitz3.ab3@4368>   CLR.w nonew
00022CDA <AmiBlitz3.ab3@4369>   CLR.w sbasegot
00022CE4 <AmiBlitz3.ab3@4370>   MOVE.w varcodelen,oldvcodelen
00022CEA <AmiBlitz3.ab3@4371>   CLR.w varcodelen
00022CF2 <AmiBlitz3.ab3@4372>   MOVE.w #-1,lasta6
00022CF4 <AmiBlitz3.ab3@4373> RTS
00022CFA <AmiBlitz3.ab3@4377>   TST.w linemode
00022CFE <AmiBlitz3.ab3@4378>   BMI.b 'skip
00022D02 <AmiBlitz3.ab3@4379>   BSR.w undodebug
00022D08 <AmiBlitz3.ab3@4380>   MOVE.w linemode,D1
00022D0A <AmiBlitz3.ab3@4381>   ADDQ.w #4,A7
00022D0C <AmiBlitz3.ab3@4382>   LSL.w #2,D1
00022D12 <AmiBlitz3.ab3@4383>   LEA modetable,A0
00022D16 <AmiBlitz3.ab3@4384>   MOVEA.l $0(A0,D1.W),A0
00022D1A <AmiBlitz3.ab3@4385>   BSR.w reget
00022D1C <AmiBlitz3.ab3@4386>  JMP (A0)                                                   ;jumptokenroutine
00022D1E <AmiBlitz3.ab3@4389> RTS
00022D26 <AmiBlitz3.ab3@4397>   MOVE.w #0,leaa0a0+2
00022D2C <AmiBlitz3.ab3@4398>   CLR.b nowdeclare
00022D32 <AmiBlitz3.ab3@4399>   CLR.b notypecheck
00022D38 <AmiBlitz3.ab3@4400>   CLR.l lasttoken
00022D3E <AmiBlitz3.ab3@4401>   CLR.b doimmediate
00022D44 <AmiBlitz3.ab3@4402>   CLR.w vartype
00022D4A <AmiBlitz3.ab3@4403>   CLR.w regnumfunc
00022D50 <AmiBlitz3.ab3@4404>   CLR.b optistring
00022D56 <AmiBlitz3.ab3@4405>   CLR.b iniffcommand
00022D5C <AmiBlitz3.ab3@4406>   CLR.w instringon  ; new
00022D62 <AmiBlitz3.ab3@4407>   CLR.b funccall
00022D68 <AmiBlitz3.ab3@4408>   CLR.l currentfunccall
00022D6E <AmiBlitz3.ab3@4409>   CLR.l leftsidetype
00022D74 <AmiBlitz3.ab3@4410>   CLR.l rightsidetype
00022D7A <AmiBlitz3.ab3@4411>   CLR.w leftsideflagmask
00022D80 <AmiBlitz3.ab3@4412>   CLR.w rightsideflagmask
00022D86 <AmiBlitz3.ab3@4413>   CLR.b peekaddrsize
00022D8C <AmiBlitz3.ab3@4414>   CLR.b blitzparloop
00022D92 <AmiBlitz3.ab3@4415>   CLR.b funcparloop
00022D98 <AmiBlitz3.ab3@4416>   CLR.w parnum           ;7.2014
00022D9E <AmiBlitz3.ab3@4417>   TST.b debugmode
00022DA2 <AmiBlitz3.ab3@4418>    BEQ 'fpu
00022DAC <AmiBlitz3.ab3@4424>   MOVE.b fpu,iee
00022DB0 <AmiBlitz3.ab3@4425>   MOVE.w stopit(PC),D0
00022DB4 <AmiBlitz3.ab3@4426>   BNE 'chkstop_chkb
00022DB8 <AmiBlitz3.ab3@4428>   BSR.w chkstop                                          ; message here
00022DBE <AmiBlitz3.ab3@4432>   SUBQ.w #1,stopit
00022DC2 <AmiBlitz3.ab3@4436>   BSR.w findmacro                                          ;macro
00022DC8 <AmiBlitz3.ab3@4498>   TST.b debugmode
00022DCC <AmiBlitz3.ab3@4499>    BEQ.s 'l10
00022DD2 <AmiBlitz3.ab3@4500>   TST.b exdebug
00022DD6 <AmiBlitz3.ab3@4501>   BEQ 'l10a
00022DD8 <AmiBlitz3.ab3@4502>   MOVE.w (a5),d0
00022DDC <AmiBlitz3.ab3@4503>   CMP.w #$8025,d0
00022DE0 <AmiBlitz3.ab3@4504>    BEQ 'l10
00022DE4 <AmiBlitz3.ab3@4507>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022DE8 <AmiBlitz3.ab3@4511>   BSR.w get1bytemain                                       ;gettokenmain
00022DEC <AmiBlitz3.ab3@4512>    BEQ.w undodebug
00022DF0 <AmiBlitz3.ab3@4513>   CMP.w #$002b,d0                                            ;check for + cast sign
00022DF4 <AmiBlitz3.ab3@4514>     BNE 'lb2
00022DF8 <AmiBlitz3.ab3@4515>     BSR.w get1bytemain
00022E00 <AmiBlitz3.ab3@4516>     MOVE.b #1,notypecheck
00022E0A <AmiBlitz3.ab3@4527>   MOVE.l #forthstack,forthsp
00022E14 <AmiBlitz3.ab3@4528>   MOVE.l #precstack,precsp
00022E1A <AmiBlitz3.ab3@4529>   CLR.w regnum
00022E20 <AmiBlitz3.ab3@4530>   CLR.w nonew
00022E26 <AmiBlitz3.ab3@4531>   CLR.w sbasegot
00022E30 <AmiBlitz3.ab3@4532>   MOVE.w varcodelen,oldvcodelen
00022E36 <AmiBlitz3.ab3@4534>   CLR.w varcodelen
00022E3E <AmiBlitz3.ab3@4535>   MOVE.w #$FFFF,lasta6
00022E42 <AmiBlitz3.ab3@4538>   BSR.w smode
00022E44 <AmiBlitz3.ab3@4541>   TST.w D0                 ; was behind cmp ... and befor handleascii in org source
00022E48 <AmiBlitz3.ab3@4542>   BMI.w get_tokencode      ; "
00022E4C <AmiBlitz3.ab3@4544>   CMP.w #$2E,D0            ;'.'
00022E50 <AmiBlitz3.ab3@4545>    BEQ.w handlemouse                                         ;shortlist
00022E54 <AmiBlitz3.ab3@4546>   CMP.w #"#",D0
00022E58 <AmiBlitz3.ab3@4547>    BEQ.w handleconst                                         ;constant found
00022E5C <AmiBlitz3.ab3@4548>   CMP.w #$27,D0            ;'''  ; was #loclabch
00022E60 <AmiBlitz3.ab3@4549>    BEQ.w handlelocal                                            ;local label
00022E66 <AmiBlitz3.ab3@4552>   MOVE.l A5,letstart
00022E6C <AmiBlitz3.ab3@4553>   JSR getparameter
00022E70 <AmiBlitz3.ab3@4554>   BSR.w reget
00022E74 <AmiBlitz3.ab3@4555>    BEQ.w handlelabel                                         ;label found
00022E78 <AmiBlitz3.ab3@4556>   CMP.w #$7B,D0         ;'{'
00022E7C <AmiBlitz3.ab3@4557>    BEQ.w handleproc
00022E7E <AmiBlitz3.ab3@4559>   TST.w d0
00022E82 <AmiBlitz3.ab3@4560>    BPL 'll1
00022E88 <AmiBlitz3.ab3@4561>   TST.b newsyntax
00022E8C <AmiBlitz3.ab3@4562>    BEQ 'll1
00022E92 <AmiBlitz3.ab3@4563>   LEA allowtab,a0
00022E94 <AmiBlitz3.ab3@4564>   MOVEQ #0,d1
00022E96 <AmiBlitz3.ab3@4565>   MOVE.b d0,d1
00022E9A <AmiBlitz3.ab3@4566>   TST.b 0(a0,d1.w)
00022E9E <AmiBlitz3.ab3@4567>    BNE 'll1
00022EA0 <AmiBlitz3.ab3@4568>   SUBQ.l #2,a5
00022EA8 <AmiBlitz3.ab3@4569>   MOVE.w #":",lastchar                                     ;no doublepoint
00022EAC <AmiBlitz3.ab3@4570>  BRA handlelabel
00022EB4 <AmiBlitz3.ab3@4573>   CMP.l #"equ ",-1(a5)
00022EB8 <AmiBlitz3.ab3@4574>    BEQ 'll4
00022EC0 <AmiBlitz3.ab3@4575>   CMP.l #"EQU ",-1(a5)
00022EC4 <AmiBlitz3.ab3@4576>    BNE 'll2
00022EC6 <AmiBlitz3.ab3@4579>   ADDQ.l #2,a5
00022ECA <AmiBlitz3.ab3@4580>   BSR.w findlabel2
00022ECE <AmiBlitz3.ab3@4581>   BEQ.w 'lf1
00022ED2 <AmiBlitz3.ab3@4582>   BSR.w addlabelhash
00022EDA <AmiBlitz3.ab3@4583>   MOVE.l #$1,$4(A2)
00022EE2 <AmiBlitz3.ab3@4586>   CMPI.l #$1,$4(A2)
00022EE6 <AmiBlitz3.ab3@4587>    BNE.w illconerr
00022EEA <AmiBlitz3.ab3@4588>   BSR get1bytemain
00022EEC <AmiBlitz3.ab3@4589>   MOVE.l A2,-(A7)
00022EEE <AmiBlitz3.ab3@4600>   SUBQ.l #1,a5
00022EF0 <AmiBlitz3.ab3@4603>   SUBQ.l #1,a5
00022EF6 <AmiBlitz3.ab3@4604>   JSR evalconst2
00022EF8 <AmiBlitz3.ab3@4605>   MOVEA.l (A7)+,A2
00022EFC <AmiBlitz3.ab3@4606>   MOVE.l D3,$8(A2)
00022EFE <AmiBlitz3.ab3@4607>   RTS
00022F02 <AmiBlitz3.ab3@4608>   BSR get1bytemain
00022F0A <AmiBlitz3.ab3@4611>   CMP.l #"SET ",-1(a5)
00022F0E <AmiBlitz3.ab3@4612>   BNE 'll3
00022F12 <AmiBlitz3.ab3@4613>  BRA 'll4
00022F18 <AmiBlitz3.ab3@4617> JMP dolet2
00022F1C <AmiBlitz3.ab3@4621>   CMP.w #-$7FDE,D0    ; was #$8000+34,
00022F20 <AmiBlitz3.ab3@4622>   BEQ.w get_tokencode
00022F24 <AmiBlitz3.ab3@4623> BRA.w undodebug       ;!*!*!
00022F28 <AmiBlitz3.ab3@4627>   BSR.w undodebug    ;!***!
00022F2C <AmiBlitz3.ab3@4628>   BSR.w createlab
00022F30 <AmiBlitz3.ab3@4629> BRA.w handlelab2
00022F34 <AmiBlitz3.ab3@4633>   BSR.w get1bytemain
00022F38 <AmiBlitz3.ab3@4634>    BEQ.w handleeol     ;syntaxerr
00022F3C <AmiBlitz3.ab3@4635>   CMP.w #"'",D0        ; was #loclabch
00022F40 <AmiBlitz3.ab3@4636>    BEQ.w handlelocal
00022F44 <AmiBlitz3.ab3@4637>    BSR.w makename2
00022F46 <AmiBlitz3.ab3@4639>    TST.w d0
00022F4A <AmiBlitz3.ab3@4640>    BPL handlelabel
00022F4C <AmiBlitz3.ab3@4641>    SUBQ.l #2,a5
00022F54 <AmiBlitz3.ab3@4642>    MOVE.w #":",lastchar
00022F58 <AmiBlitz3.ab3@4643> BRA handlelabel                                              ;????
00022F5C <AmiBlitz3.ab3@4650>   BSR.w undodebug      ;!***!
00022F62 <AmiBlitz3.ab3@4652>   LEA ptr_parameterstore,A0
00022F68 <AmiBlitz3.ab3@4653>   LEA lastgloballabel,A1
00022F6A <AmiBlitz3.ab3@4656>   MOVE.b (A0)+,(A1)+
00022F6E <AmiBlitz3.ab3@4657>    BNE.w 'coplab
00022F72 <AmiBlitz3.ab3@4661>   BSR.w findlabel2
00022F76 <AmiBlitz3.ab3@4662>    BEQ.w 'found
00022F7A <AmiBlitz3.ab3@4664>    BSR.w addlabelhash
00022F7E <AmiBlitz3.ab3@4667>   CLR.l $4(A2)                ;no refs
00022F86 <AmiBlitz3.ab3@4668>   MOVE.l destpointer,$8(A2)   ;pc of label.
00022F8E <AmiBlitz3.ab3@4673>   MOVE.w procnum,$10(A2)
00022F90 <AmiBlitz3.ab3@4674>  RTS
00022F94 <AmiBlitz3.ab3@4677>   MOVE.l $4(A2),D0
00022F98 <AmiBlitz3.ab3@4678>   BTST #$0,D0
00022F9C <AmiBlitz3.ab3@4679>    BNE.w illlaberr
00022FA2 <AmiBlitz3.ab3@4681>   TST.w pass
00022FA6 <AmiBlitz3.ab3@4684>   MOVE.l $8(A2),D0
00022FAA <AmiBlitz3.ab3@4685>    BNE.w duplaberr
00022FB2 <AmiBlitz3.ab3@4686>   MOVE.w procnum,$10(A2)
00022FB6 <AmiBlitz3.ab3@4690>   MOVEA.l $4(A2),A3      ;start of refs list
00022FBC <AmiBlitz3.ab3@4691>   MOVEA.l _execbase,A6
00022FC0 <AmiBlitz3.ab3@4694>   CMPA.w #$0,A3
00022FC4 <AmiBlitz3.ab3@4695>    BEQ.w 'done
00022FC8 <AmiBlitz3.ab3@4697>     MOVE.l $4(A2),D1
00022FCC <AmiBlitz3.ab3@4698>     BTST #$0,D1
00022FD0 <AmiBlitz3.ab3@4699>     BNE.w illlaberr
00022FD4 <AmiBlitz3.ab3@4701>   MOVE.w $8(A3),D1
00022FD8 <AmiBlitz3.ab3@4702>   CMP.w $10(A2),D1
00022FDC <AmiBlitz3.ab3@4703>    BEQ.w 'isok
00022FE2 <AmiBlitz3.ab3@4705>    TST.b newsyntax
00022FE6 <AmiBlitz3.ab3@4706>    BEQ 'l1
00022FEA <AmiBlitz3.ab3@4707>  BRA.w 'isok                                            ;label context out of range fix
00022FF2 <AmiBlitz3.ab3@4713>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022FF6 <AmiBlitz3.ab3@4714>  BRA.w referr
00022FFC <AmiBlitz3.ab3@4717>   MOVE.w dontwrite_nomemleft,D1
00023000 <AmiBlitz3.ab3@4718>    BNE.w 'isaskip
00023004 <AmiBlitz3.ab3@4719>   MOVEA.l $4(A3),A1
0002300A <AmiBlitz3.ab3@4720>   BTST #$0,$7(A3)
0002300E <AmiBlitz3.ab3@4721>    BEQ.w 'pcref
00023010 <AmiBlitz3.ab3@4725>   SUBQ.w #1,A1
00023016 <AmiBlitz3.ab3@4726>   MOVE.l data2,(A1)
0002301A <AmiBlitz3.ab3@4727>  BRA.w 'isaskip
00023020 <AmiBlitz3.ab3@4730>   MOVE.l destpointer,(A1)
00023022 <AmiBlitz3.ab3@4733>   MOVEA.l A3,A1
00023024 <AmiBlitz3.ab3@4734>   MOVEA.l (A3),A3
00023028 <AmiBlitz3.ab3@4735>   MOVE.l A3,$4(A2)     ;new first.
0002302A <AmiBlitz3.ab3@4736>   MOVEQ.l #$0C+2,D0    ; was #12
00023030 <AmiBlitz3.ab3@4739>   MOVE.l mempool,a0
00023036 <AmiBlitz3.ab3@4740>   MOVEA.l _execbase,A6
0002303A <AmiBlitz3.ab3@4741>   JSR _FreePooled(A6)
0002303E <AmiBlitz3.ab3@4743>  BRA.w 'floop
00023048 <AmiBlitz3.ab3@4749>    MOVE.l #forthstack,forthsp
00023052 <AmiBlitz3.ab3@4750>   MOVE.l #precstack,precsp
00023056 <AmiBlitz3.ab3@4752>    BSR.w getparameter2
0002305A <AmiBlitz3.ab3@4756>   BSR.w findlabel2
0002305E <AmiBlitz3.ab3@4757>    BEQ.w 'cfound
00023062 <AmiBlitz3.ab3@4758>    BSR.w addlabelhash
0002306A <AmiBlitz3.ab3@4759>   MOVE.l #$1,$4(A2)
0002306E <AmiBlitz3.ab3@4760>  BRA.w 'cn
00023076 <AmiBlitz3.ab3@4763>   CMPI.l #$1,$4(A2)
0002307A <AmiBlitz3.ab3@4764>    BNE.w illconerr
0002307E <AmiBlitz3.ab3@4775>   CMP.w #$3D,D0         ;'='
00023082 <AmiBlitz3.ab3@4776>   BEQ.w 'asscon
00023084 <AmiBlitz3.ab3@4777>  RTS
00023086 <AmiBlitz3.ab3@4780>   MOVE.l A2,-(A7)
0002308C <AmiBlitz3.ab3@4781>   JSR evalconst2
0002308E <AmiBlitz3.ab3@4782>   MOVEA.l (A7)+,A2
00023092 <AmiBlitz3.ab3@4783>   MOVE.l D3,$8(A2)                                         ;store constant
0002309A <AmiBlitz3.ab3@4785>   CMP.w #$0a,lastchar
0002309E <AmiBlitz3.ab3@4786>   BNE 'l1
000230A6 <AmiBlitz3.ab3@4787>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
000230A8 <AmiBlitz3.ab3@4791> RTS
000230AC <AmiBlitz3.ab3@4797>   BSR.w findproc                                           ;write statement call
000230B0 <AmiBlitz3.ab3@4799>   BEQ '_state
000230B6 <AmiBlitz3.ab3@4800>   TST.l unusedfunc
000230BA <AmiBlitz3.ab3@4802>   BEQ noprocerr          ; was bne
000230C0 <AmiBlitz3.ab3@4805>   JSR gotoendsource
000230C4 <AmiBlitz3.ab3@4809>   TST.b $5(A2)
000230CA <AmiBlitz3.ab3@4812>   MOVE.l a2,currentfunccall
000230D2 <AmiBlitz3.ab3@4813>   MOVE.b #1,funccall
000230D8 <AmiBlitz3.ab3@4814>   MOVE.b #1,isfunc(a2)
000230DC <AmiBlitz3.ab3@4816>   MOVE.l $E(A2),-(A7)         ;pc of proc.
000230DE <AmiBlitz3.ab3@4817>   MOVEQ.l #$00,D0
000230E2 <AmiBlitz3.ab3@4818>   MOVE.b $4(A2),D0
000230E8 <AmiBlitz3.ab3@4819>   MOVE.l d0,parnumtemp
000230EC <AmiBlitz3.ab3@4820>   BEQ.w 'nopars
000230F0 <AmiBlitz3.ab3@4822>   TST.b $20(a2)                                            ;increase if morepar
000230F4 <AmiBlitz3.ab3@4823>   BNE 'no0par
000230F6 <AmiBlitz3.ab3@4824>   MOVE.l a5,a4
000230FA <AmiBlitz3.ab3@4827>   CMP.b #$20,(a4)+
000230FE <AmiBlitz3.ab3@4828>   BEQ 'l1
00023104 <AmiBlitz3.ab3@4829>   CMP.b #"}",-1(a4)
00023108 <AmiBlitz3.ab3@4830>   BNE  'no0par                                             ;statementcall pars
0002310A <AmiBlitz3.ab3@4831>   MOVEQ #0,d0
0002310E <AmiBlitz3.ab3@4835>   LEA $16(A2),A1            ;pointer to var desc list
00023110 <AmiBlitz3.ab3@4839>   MOVE.l d1,-(a7)
00023112 <AmiBlitz3.ab3@4840>   MOVE.b (a1),d2
00023114 <AmiBlitz3.ab3@4841>   MOVE.l d0,d1
00023118 <AmiBlitz3.ab3@4842>   CMP.w #4,d2
0002311C <AmiBlitz3.ab3@4843>   BNE 'l1b
00023122 <AmiBlitz3.ab3@4844>   ADD.l #$203c,d1
00023128 <AmiBlitz3.ab3@4845>   JSR writeword
0002312E <AmiBlitz3.ab3@4846>   MOVE.l #$ffff0000,d1
00023134 <AmiBlitz3.ab3@4847>   JSR writelong
00023138 <AmiBlitz3.ab3@4848>  BRA 'l2b
0002313E <AmiBlitz3.ab3@4851>   TST.b fpu
00023142 <AmiBlitz3.ab3@4852>   BNE 'l1c
00023146 <AmiBlitz3.ab3@4853>   CMP.w #5,d2
0002314A <AmiBlitz3.ab3@4854>   BNE 'l1c
00023150 <AmiBlitz3.ab3@4855>   ADD.l #$203c,d1
00023156 <AmiBlitz3.ab3@4856>   JSR writeword
0002315C <AmiBlitz3.ab3@4857>   MOVE.l #$800000c1,d1
00023162 <AmiBlitz3.ab3@4858>   JSR writelong
00023166 <AmiBlitz3.ab3@4859>  BRA 'l2b
0002316C <AmiBlitz3.ab3@4862>   ADD.l #$70ff,d1
00023172 <AmiBlitz3.ab3@4863>   JSR writeword
00023178 <AmiBlitz3.ab3@4864>   MOVE.l #$f23c5000,d1
0002317A <AmiBlitz3.ab3@4865>   MOVE.l d0,d2
0002317C <AmiBlitz3.ab3@4866>   ASR.l #2,d2
0002317E <AmiBlitz3.ab3@4867>   ADD.l d2,d1
00023184 <AmiBlitz3.ab3@4868>   JSR writelong
00023188 <AmiBlitz3.ab3@4869>   MOVE.w #$ffff,d1
0002318E <AmiBlitz3.ab3@4870>   JSR writeword
00023190 <AmiBlitz3.ab3@4873>   MOVE.l (a7)+,d1
00023192 <AmiBlitz3.ab3@4874>   ADDQ.l #1,a1
00023198 <AmiBlitz3.ab3@4875>   ADD.l #$0200,d0
0002319E <AmiBlitz3.ab3@4876>   CMP.l #$0e00,d0
000231A2 <AmiBlitz3.ab3@4877>    BEQ syntaxerr
000231A4 <AmiBlitz3.ab3@4878>   TST.b (a1)
000231A8 <AmiBlitz3.ab3@4879>    BNE 'again
000231AC <AmiBlitz3.ab3@4880>  BRA 'nopars
000231B6 <AmiBlitz3.ab3@4883>   MOVE.w a2offset,a2offset2
000231BA <AmiBlitz3.ab3@4884>   LEA $16(A2),A2
000231C0 <AmiBlitz3.ab3@4885>   MOVE.b funcparloop,-(a7)
000231C8 <AmiBlitz3.ab3@4886>   MOVE.b #1,funcparloop
000231CE <AmiBlitz3.ab3@4887>   MOVE.b blitzparloop,-(a7)
000231D4 <AmiBlitz3.ab3@4888>   CLR.b blitzparloop
000231D8 <AmiBlitz3.ab3@4890>   BSR.w fetchpees2
000231DE <AmiBlitz3.ab3@4892>   MOVE.b (a7)+,blitzparloop
000231E4 <AmiBlitz3.ab3@4893>   MOVE.b (a7)+,funcparloop
000231E8 <AmiBlitz3.ab3@4895>  BRA.w 'nopars3
000231EC <AmiBlitz3.ab3@4899>   BSR.w get1bytemain
000231F0 <AmiBlitz3.ab3@4902>   CMP.w #$7D,D0        ;'}'
000231F4 <AmiBlitz3.ab3@4903>    BNE.w morepar_                                          ;syntax error morepar
000231FA <AmiBlitz3.ab3@4904>    JSR chkstak
000231FC <AmiBlitz3.ab3@4905>   MOVE.l (A7)+,D1
00023202 <AmiBlitz3.ab3@4923>    JSR makefjsr
00023208 <AmiBlitz3.ab3@4946>   CLR.b funccall
0002320C <AmiBlitz3.ab3@4948> BRA.w get1bytemain
00023212 <AmiBlitz3.ab3@4955>   MOVE.l d0,lasttoken
00023216 <AmiBlitz3.ab3@4956>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
0002321A <AmiBlitz3.ab3@4957>   BNE 'l2
0002321E <AmiBlitz3.ab3@4958>    MOVE.w #$dd05,d0
00023222 <AmiBlitz3.ab3@4961>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00023226 <AmiBlitz3.ab3@4962>   BNE 'l3
0002322A <AmiBlitz3.ab3@4963>    MOVE.w #$dd06,d0
0002322E <AmiBlitz3.ab3@4967>   CMP.w #-$7FC4,D0               ; was #$8000+fnum,
00023232 <AmiBlitz3.ab3@4968>   BCS.w 'nono
00023236 <AmiBlitz3.ab3@4969>     CMP.w #-$7F4D,D0             ; was #$8000+tnum,
0002323A <AmiBlitz3.ab3@4970>     BCC.w 'nono
00023242 <AmiBlitz3.ab3@4972>       BTST #$7,assemblercheck    ; was optreq2ga3+13                            ;inline Assembler checking
00023246 <AmiBlitz3.ab3@4973>       BNE.b 'asmok
0002324C <AmiBlitz3.ab3@4975>         TST.b debugmode
00023250 <AmiBlitz3.ab3@4976>         BEQ.b 'l10
0002325A <AmiBlitz3.ab3@4981>           MOVE.w d_nomemleft,dontwrite_nomemleft
00023264 <AmiBlitz3.ab3@4982>           MOVE.l d_bigpc,bigpc
0002326E <AmiBlitz3.ab3@4983>           MOVE.l d_pc,destpointer
00023278 <AmiBlitz3.ab3@4984>           MOVE.l cont_pc2,cont_pc
0002327C <AmiBlitz3.ab3@4992>  BRA.w asmit   ;assemble the bastard
00023280 <AmiBlitz3.ab3@4999>   BCLR #$F,D0
00023282 <AmiBlitz3.ab3@5000>   MOVE.w D0,D1
00023286 <AmiBlitz3.ab3@5001>   ANDI.w #$7F00,D1
0002328A <AmiBlitz3.ab3@5002>   BNE.w handlelib
0002328E <AmiBlitz3.ab3@5004>     CMP.w #$B3,D0        ; was #tnum,                                  ;intern Instructions
00023292 <AmiBlitz3.ab3@5005>     BCS.w 'isokat
00023296 <AmiBlitz3.ab3@5007>       SUBI.w #$77,D0     ; was #tnum-fnum,
0002329A <AmiBlitz3.ab3@5008>       CMP.w #$4B,D0      ; was #fnum+15
0002329E <AmiBlitz3.ab3@5009>       BEQ.w 'noerr
000232A2 <AmiBlitz3.ab3@5010>         CMP.w #$46,D0    ; was #fnum+10,
000232A6 <AmiBlitz3.ab3@5011>         BEQ.w 'noerr
000232AA <AmiBlitz3.ab3@5012>  BRA.w 'doerr                                            ; change tokennum
000232AE <AmiBlitz3.ab3@5015>     CMP.w #$38,D0        ;check for things which don't want
000232B2 <AmiBlitz3.ab3@5016>      BEQ.w 'noerr        ;error checking...
000232B6 <AmiBlitz3.ab3@5017>     CMP.w #$39,D0
000232BA <AmiBlitz3.ab3@5018>      BEQ.w 'noerr
000232BE <AmiBlitz3.ab3@5019>     CMP.w #$D,D0
000232C2 <AmiBlitz3.ab3@5020>      BEQ.w 'noerr
000232C6 <AmiBlitz3.ab3@5021>     CMP.w #$12,D0
000232CA <AmiBlitz3.ab3@5022>      BEQ.w 'noerr
000232CE <AmiBlitz3.ab3@5023>     CMP.w #$13,D0
000232D2 <AmiBlitz3.ab3@5024>      BEQ.w 'noerr
000232D6 <AmiBlitz3.ab3@5025>     CMP.w #$1A,D0
000232DA <AmiBlitz3.ab3@5026>      BEQ.w 'noerr
000232DE <AmiBlitz3.ab3@5027>     CMP.w #$2A,D0
000232E2 <AmiBlitz3.ab3@5028>      BHI.w 'doerr
000232E6 <AmiBlitz3.ab3@5029>     CMP.w #$23,D0
000232EA <AmiBlitz3.ab3@5030>      BCS.b 'doerr
000232EE <AmiBlitz3.ab3@5033>   BSR.w undodebug
000232F0 <AmiBlitz3.ab3@5036>   SUBQ.w #1,D0
000232F2 <AmiBlitz3.ab3@5037>   LSL.w #2,D0
000232F8 <AmiBlitz3.ab3@5047>   LEA instructionbase,A0
000232FC <AmiBlitz3.ab3@5048>   MOVEA.l $0(A0,D0.W),A0
000232FE <AmiBlitz3.ab3@5049>   MOVE.l A0,-(A7)
00023302 <AmiBlitz3.ab3@5050> BRA.w get1bytemain
00023304 <AmiBlitz3.ab3@5056>   MOVE.w D0,D1
00023308 <AmiBlitz3.ab3@5057>    BSR.w searchinstr    ;toke stuff in a3
0002330E <AmiBlitz3.ab3@5059>    TST.b newmode
00023312 <AmiBlitz3.ab3@5060>    BNE compile_term
00023318 <AmiBlitz3.ab3@5062>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
0002331C <AmiBlitz3.ab3@5063>    BNE.w stamigalib
00023322 <AmiBlitz3.ab3@5064>   BTST #$0,$1(A3)
00023326 <AmiBlitz3.ab3@5065>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
0002332A <AmiBlitz3.ab3@5067>    BSR.w sizespec                                         ;does it need a size specifier?
0002332E <AmiBlitz3.ab3@5068>    BSR.w countpees
00023334 <AmiBlitz3.ab3@5074>   MOVE.w numreps,-(A7)
0002333A <AmiBlitz3.ab3@5075>   MOVE.w userp,-(A7)
00023340 <AmiBlitz3.ab3@5076>   MOVE.w a2offset,-(A7)
00023342 <AmiBlitz3.ab3@5077>   MOVE.l A2,-(A7)                                          ;recurs.
0002334C <AmiBlitz3.ab3@5078>   MOVE.w convsize,userp
00023350 <AmiBlitz3.ab3@5079>   LEA $6(A3),A1
00023352 <AmiBlitz3.ab3@5084>    MOVE.w (A1),D2
00023356 <AmiBlitz3.ab3@5085>    BMI.w 'SERR                                              ;statement syntax error
0002335A <AmiBlitz3.ab3@5086>   ANDI.w #$FF,D2
0002335C <AmiBlitz3.ab3@5087>   CMP.w D2,D1
00023360 <AmiBlitz3.ab3@5088>    BEQ.w 'found
00023364 <AmiBlitz3.ab3@5089>    BCS.w 'next
00023366 <AmiBlitz3.ab3@5090>   MOVE.b (A1),D3
0002336A <AmiBlitz3.ab3@5091>   ANDI.w #$7,D3
0002336E <AmiBlitz3.ab3@5092>    BEQ.w 'next
00023370 <AmiBlitz3.ab3@5093>   MOVE.w D2,D4
00023372 <AmiBlitz3.ab3@5094>   SUB.w D3,D4
00023374 <AmiBlitz3.ab3@5095>   MOVEQ.l #$00,D5
00023376 <AmiBlitz3.ab3@5096>   MOVE.w D1,D5
00023378 <AmiBlitz3.ab3@5097>   SUB.w D4,D5
0002337A <AmiBlitz3.ab3@5098>   DIVU D3,D5
0002337C <AmiBlitz3.ab3@5099>   SWAP D5
0002337E <AmiBlitz3.ab3@5100>   TST.w D5
00023382 <AmiBlitz3.ab3@5101>    BEQ.w 'found
00023384 <AmiBlitz3.ab3@5104>   ADDQ.w #2,A1
00023386 <AmiBlitz3.ab3@5105>   ADDA.w D2,A1
0002338A <AmiBlitz3.ab3@5106>    BSR.w aligna1
0002338E <AmiBlitz3.ab3@5107>    BSR.w skiplibreg
00023392 <AmiBlitz3.ab3@5108>   LEA $C(A1),A1
00023396 <AmiBlitz3.ab3@5109>  BRA.w 'loop
00023398 <AmiBlitz3.ab3@5113>   MOVE.w (a3),d2
0002339C <AmiBlitz3.ab3@5114>   BTST #1,d2
000233A0 <AmiBlitz3.ab3@5115>   BEQ statement_
000233A4 <AmiBlitz3.ab3@5116>   CMP.w #1,d1
000233A8 <AmiBlitz3.ab3@5117>   BEQ statement_
000233AC <AmiBlitz3.ab3@5120>   CMP.b #$20,(a5)+
000233B0 <AmiBlitz3.ab3@5121>   BEQ 'l2
000233B6 <AmiBlitz3.ab3@5122>   CMP.b #"(",-2(a5)
000233BA <AmiBlitz3.ab3@5123>   BNE 'l1
000233BE <AmiBlitz3.ab3@5124>  BRA parameter_
000233C2 <AmiBlitz3.ab3@5127>  BRA inbrackets_
000233C4 <AmiBlitz3.ab3@5131>   MOVE.b (A1),D2
000233C6 <AmiBlitz3.ab3@5132>   LSL.w #8,D2
000233C8 <AmiBlitz3.ab3@5133>   OR.w D2,D1
000233CA <AmiBlitz3.ab3@5134>   MOVE.l A1,-(A7)
000233D0 <AmiBlitz3.ab3@5135>   CLR.w a2offset
000233D2 <AmiBlitz3.ab3@5136>   TST.w D1
000233D6 <AmiBlitz3.ab3@5137>    BEQ.w 'nopees
000233DA <AmiBlitz3.ab3@5138>   LEA $2(A1),A2
000233E0 <AmiBlitz3.ab3@5140>   MOVE.l lasttoken,-(a7)
000233E6 <AmiBlitz3.ab3@5141>   CLR.l lasttoken
000233EA <AmiBlitz3.ab3@5143>   BSR.w fetchlibps
000233F0 <AmiBlitz3.ab3@5145>   MOVE.l (a7)+,lasttoken
000233F4 <AmiBlitz3.ab3@5147>  BRA.w 'skip
000233F8 <AmiBlitz3.ab3@5150>   BSR.w get1bytemain
000233FA <AmiBlitz3.ab3@5153>   MOVEA.l (A7)+,A1
000233FC <AmiBlitz3.ab3@5154>   MOVEA.l (A7)+,A2
00023402 <AmiBlitz3.ab3@5155>   MOVE.w a2offset,D1
00023406 <AmiBlitz3.ab3@5156>    BEQ.w 'skip2
0002340C <AmiBlitz3.ab3@5157>   MOVE.w D1,preplibst+2
00023412 <AmiBlitz3.ab3@5158>   MOVE.l preplibst,D1
00023418 <AmiBlitz3.ab3@5159>    JSR writelong                                           ;write array offset stack correct
00023422 <AmiBlitz3.ab3@5160>   MOVE.w numreps,movenumrep+2
00023426 <AmiBlitz3.ab3@5161>    BEQ.w 'skip2
0002342C <AmiBlitz3.ab3@5162>   MOVE.l movenumrep,D1
00023432 <AmiBlitz3.ab3@5163>    JSR writelong
00023438 <AmiBlitz3.ab3@5167>   JSR userjsr
0002343E <AmiBlitz3.ab3@5172>   MOVE.w a2offset,D1
00023442 <AmiBlitz3.ab3@5173>    BEQ.w 'skip3
00023446 <AmiBlitz3.ab3@5174>   CMP.w #$8,D1
0002344A <AmiBlitz3.ab3@5175>    BHI.w 'skip4
0002344E <AmiBlitz3.ab3@5176>   ANDI.w #$7,D1
00023450 <AmiBlitz3.ab3@5177>   LSL.w #8,D1
00023452 <AmiBlitz3.ab3@5178>   LSL.w #1,D1
00023456 <AmiBlitz3.ab3@5179>   ORI.w #$504F,D1       ;addq #x,a7
0002345C <AmiBlitz3.ab3@5180>   JSR writeword
00023460 <AmiBlitz3.ab3@5181>  BRA.w 'skip3
00023466 <AmiBlitz3.ab3@5184>   MOVE.w D1,fixlibst+2
0002346C <AmiBlitz3.ab3@5185>   MOVE.l fixlibst,D1
00023472 <AmiBlitz3.ab3@5186>   JSR writelong
00023478 <AmiBlitz3.ab3@5189>   MOVE.w (A7)+,a2offset
0002347E <AmiBlitz3.ab3@5190>   MOVE.w (A7)+,userp
00023484 <AmiBlitz3.ab3@5191>   MOVE.w (A7)+,numreps
00023488 <AmiBlitz3.ab3@5192> BRA.w reget
0002348C <AmiBlitz3.ab3@5196>   MOVEM.l A2-A3,-(A7)
00023492 <AmiBlitz3.ab3@5198>   CLR.b doublepeek
00023498 <AmiBlitz3.ab3@5200>   MOVE.l A5,lastsourcepos
0002349C <AmiBlitz3.ab3@5201>    BSR.w getchar          ;','
000234A0 <AmiBlitz3.ab3@5202>   CMP.w #$2E,D0
000234A4 <AmiBlitz3.ab3@5203>    BEQ.w 'ok1
000234AA <AmiBlitz3.ab3@5204>   MOVEA.l defaulttype,A2
000234AE <AmiBlitz3.ab3@5205>   CMP.w #$24,D0           ;'$'
000234B2 <AmiBlitz3.ab3@5206>    BNE.w 'none
000234B4 <AmiBlitz3.ab3@5207>   MOVEQ.l #$07,D1
000234B8 <AmiBlitz3.ab3@5208>  BRA.w 'skip
000234BC <AmiBlitz3.ab3@5211>   BSR.w getparameter2
000234C0 <AmiBlitz3.ab3@5212>   BEQ.w syntaxerr
000234C6 <AmiBlitz3.ab3@5213>   LEA newtypebase,A2
000234CA <AmiBlitz3.ab3@5214>   BSR.w findtype
000234CE <AmiBlitz3.ab3@5215>   BNE.w notypeerr
000234D8 <AmiBlitz3.ab3@5220>   MOVE.w oldqflag,instringon
000234DE <AmiBlitz3.ab3@5221>   MOVEA.l lastsourcepos,A5
000234E2 <AmiBlitz3.ab3@5229>   MOVE.w $6(A2),D1
000234E8 <AmiBlitz3.ab3@5231>   CMP.w #8,8(a2)
000234EC <AmiBlitz3.ab3@5232>   BNE 'l1
000234F4 <AmiBlitz3.ab3@5233>   MOVE.b #1,doublepeek
000234FA <AmiBlitz3.ab3@5238>   MOVE.w D1,convsize
000234FE <AmiBlitz3.ab3@5239>   MOVEM.l (A7)+,A2-A3
00023500 <AmiBlitz3.ab3@5240> RTS
00023506 <AmiBlitz3.ab3@5245>   BTST #$3,$1(A3)
0002350A <AmiBlitz3.ab3@5246>   BEQ.w 'skip
0002350E <AmiBlitz3.ab3@5247>   BSR.w sizespec2                                         ;read peek/poke size
00023512 <AmiBlitz3.ab3@5249>   ORI.w #$7000,D1
00023518 <AmiBlitz3.ab3@5250>   JSR writeword
0002351E <AmiBlitz3.ab3@5251>   ADDQ.w #1,regnum
00023520 <AmiBlitz3.ab3@5254> RTS
00023522 <AmiBlitz3.ab3@5261>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00023524 <AmiBlitz3.ab3@5262>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00023526 <AmiBlitz3.ab3@5263>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00023528 <AmiBlitz3.ab3@5267> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
0002352A <AmiBlitz3.ab3@5268>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
0002352C <AmiBlitz3.ab3@5269>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
0002352E <AmiBlitz3.ab3@5273> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00023530 <AmiBlitz3.ab3@5274>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00023532 <AmiBlitz3.ab3@5275>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00023534 <AmiBlitz3.ab3@5279> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00023536 <AmiBlitz3.ab3@5282> srctype:    Ds.w 1
0002353A <AmiBlitz3.ab3@5287>   BSR.w excget
0002353E <AmiBlitz3.ab3@5288>   CMP.w #$2C,D0     ;','
00023542 <AmiBlitz3.ab3@5289>    BNE.w syntaxerr
00023548 <AmiBlitz3.ab3@5290>   MOVE.b D2,srctype
0002354E <AmiBlitz3.ab3@5291>   MOVE.w pusha2,D1
00023554 <AmiBlitz3.ab3@5292>   JSR writeword
00023558 <AmiBlitz3.ab3@5293>   BSR.w get1bytemain
0002355C <AmiBlitz3.ab3@5294>   BSR.w excget
00023562 <AmiBlitz3.ab3@5295>   CMP.b srctype,D2
00023566 <AmiBlitz3.ab3@5296>    BNE.w excerr2
0002356C <AmiBlitz3.ab3@5297>   MOVE.w pulla1,D1
00023572 <AmiBlitz3.ab3@5298>    JSR writeword
00023576 <AmiBlitz3.ab3@5300>   CMP.b #$2,D2
0002357A <AmiBlitz3.ab3@5301>    BCS.w 'byte
0002357E <AmiBlitz3.ab3@5302>    BEQ.w 'word
00023582 <AmiBlitz3.ab3@5303>   LEA swapl(PC),A0
00023586 <AmiBlitz3.ab3@5304>   LEA swaplf(PC),A1
0002358C <AmiBlitz3.ab3@5305>  JMP pokecode
00023590 <AmiBlitz3.ab3@5308>   LEA swapw(PC),A0
00023594 <AmiBlitz3.ab3@5309>   LEA swapwf(PC),A1
0002359A <AmiBlitz3.ab3@5310>  JMP pokecode
0002359E <AmiBlitz3.ab3@5313>   LEA swapb(PC),A0
000235A2 <AmiBlitz3.ab3@5314>   LEA swapbf(PC),A1
000235A8 <AmiBlitz3.ab3@5315> JMP pokecode
000235AE <AmiBlitz3.ab3@5319>   JSR getparameter
000235B2 <AmiBlitz3.ab3@5320>   BSR.w fetchvars
000235B8 <AmiBlitz3.ab3@5321>   JSR calcvar
000235BC <AmiBlitz3.ab3@5322>   BTST #$E,D2
000235C0 <AmiBlitz3.ab3@5323>    BEQ.w 'skip
000235C4 <AmiBlitz3.ab3@5324>   MOVE.b #$4,D2
000235C6 <AmiBlitz3.ab3@5327>   TST.b D2
000235CA <AmiBlitz3.ab3@5328>    BEQ.w excerr
000235CE <AmiBlitz3.ab3@5329>   BTST #$F,D2
000235D2 <AmiBlitz3.ab3@5330>    BNE.w 'done
000235D8 <AmiBlitz3.ab3@5331>   MOVE.w leaamp,D1
000235DE <AmiBlitz3.ab3@5332>    JSR pokewda5s
000235E0 <AmiBlitz3.ab3@5333>   MOVE.w D3,D1
000235E6 <AmiBlitz3.ab3@5334>  JMP writeword
000235E8 <AmiBlitz3.ab3@5337> RTS
000235EE <AmiBlitz3.ab3@5346>   MOVE.l mempool,a0
000235F4 <AmiBlitz3.ab3@5347>   MOVEA.l _execbase,A6
000235F8 <AmiBlitz3.ab3@5348> JMP _AllocPooled(a6)
000235FC <AmiBlitz3.ab3@5353>   MOVE.w #$BF00,D1       ; was #wbstart
00023602 <AmiBlitz3.ab3@5354> JMP Atokejsr
00023606 <AmiBlitz3.ab3@5358>   CMP.w #-$7FFA,D0       ; was  #$8006
0002360A <AmiBlitz3.ab3@5359>    BEQ.w popreturn
0002360E <AmiBlitz3.ab3@5360>   CMP.w #-$7FEA,D0       ; was  #$8000+22,
00023612 <AmiBlitz3.ab3@5361>    BEQ.w popnext2
00023616 <AmiBlitz3.ab3@5362>   CMP.w #-$7FF2,D0       ; was  #$8000+14,
0002361A <AmiBlitz3.ab3@5363>    BEQ.w popselect2
0002361E <AmiBlitz3.ab3@5365>   CMP.w #-$7FF5,D0       ; was  #$8000+11
00023622 <AmiBlitz3.ab3@5366>    BEQ.w get1bytemain
00023626 <AmiBlitz3.ab3@5367>   CMP.w #-$7FF4,D0       ; was  #$8000+12
0002362A <AmiBlitz3.ab3@5368>    BEQ.w get1bytemain
0002362E <AmiBlitz3.ab3@5369>   CMP.w #-$7FEC,D0       ; was  #$8000+20
00023632 <AmiBlitz3.ab3@5370>    BEQ.w get1bytemain
00023636 <AmiBlitz3.ab3@5371>   CMP.w #-$7F45,D0       ; was  #$8000+tnum+8
0002363A <AmiBlitz3.ab3@5372>    BEQ.w get1bytemain
0002363E <AmiBlitz3.ab3@5373> BRA.w syntaxerr
00023644 <AmiBlitz3.ab3@5377>   TST.b debugmode
00023648 <AmiBlitz3.ab3@5378>    BEQ.w 'norerr
0002364C <AmiBlitz3.ab3@5379>   LEA 'rfix(PC),A0
00023650 <AmiBlitz3.ab3@5380>   LEA 'rfixf(PC),A1
00023656 <AmiBlitz3.ab3@5381>    JSR pokecode
0002365A <AmiBlitz3.ab3@5382>   MOVE.w #$C305,D1
00023660 <AmiBlitz3.ab3@5383>    JSR Atokejsr
00023664 <AmiBlitz3.ab3@5384>   MOVE.w 'rfix2(PC),D1
0002366A <AmiBlitz3.ab3@5386>    JSR writeword
0002366E <AmiBlitz3.ab3@5387>  BRA.w get1bytemain
00023674 <AmiBlitz3.ab3@5390>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00023678 <AmiBlitz3.ab3@5391>   BEQ.w 'rfix2
0002367E <AmiBlitz3.ab3@5394>   JSR $20000                                               ;reass
00023680 <AmiBlitz3.ab3@5397>   ADDQ.w #6,A7
00023684 <AmiBlitz3.ab3@5400>   MOVE.w 'sfix(PC),D1
0002368A <AmiBlitz3.ab3@5401>   JSR writeword
0002368E <AmiBlitz3.ab3@5402> BRA.w get1bytemain
00023690 <AmiBlitz3.ab3@5407>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00023696 <AmiBlitz3.ab3@5412>   MOVE.l firstfor,D0
0002369A <AmiBlitz3.ab3@5413>    BEQ.w noforerr
0002369C <AmiBlitz3.ab3@5414>   MOVEA.l D0,A2
000236A0 <AmiBlitz3.ab3@5415>    BSR.w get1bytemain
000236A4 <AmiBlitz3.ab3@5416>   BSR.w popnext
000236AA <AmiBlitz3.ab3@5419>   TST.b debugmode
000236AE <AmiBlitz3.ab3@5420>    BEQ.w 'ner
000236B4 <AmiBlitz3.ab3@5421>   MOVE.l nextfixw2,D1
000236BA <AmiBlitz3.ab3@5422>   CMPI.w #$3,$C(A2)
000236BE <AmiBlitz3.ab3@5423>    BCS.w 'writelong2
000236C4 <AmiBlitz3.ab3@5424>   MOVE.l nextfixl2,D1
000236CA <AmiBlitz3.ab3@5427>   JMP  writelong
000236D0 <AmiBlitz3.ab3@5430>   CMPI.w #$3,$C(A2)
000236D4 <AmiBlitz3.ab3@5431>    BCS.w 'skip2
000236DA <AmiBlitz3.ab3@5432>   MOVE.l nextfixl,D1
000236E0 <AmiBlitz3.ab3@5433>   JMP writelong
000236E6 <AmiBlitz3.ab3@5436>   MOVE.w nextfixw,D1
000236EC <AmiBlitz3.ab3@5437> JMP writeword
000236F0 <AmiBlitz3.ab3@5442>   MOVE.w $C(A2),D0
000236F6 <AmiBlitz3.ab3@5443>   TST.b debugmode
000236FA <AmiBlitz3.ab3@5444>    BEQ.w 'norunerr
000236FE <AmiBlitz3.ab3@5445>   MOVE.w #$C306,D1
00023702 <AmiBlitz3.ab3@5446>   CMP.w #$3,D0
00023706 <AmiBlitz3.ab3@5447>    BCS.w 'oktc
00023708 <AmiBlitz3.ab3@5448>   ADDQ.w #1,D1
0002370A <AmiBlitz3.ab3@5451>   MOVE.l A2,-(A7)
00023710 <AmiBlitz3.ab3@5452>   JSR Atokejsr
00023712 <AmiBlitz3.ab3@5453>   MOVEA.l (A7)+,A2
00023714 <AmiBlitz3.ab3@5456> RTS
0002371A <AmiBlitz3.ab3@5460>   MOVE.l firstsel,D0
0002371E <AmiBlitz3.ab3@5461>    BEQ.w eselerr
00023720 <AmiBlitz3.ab3@5462>   MOVEA.l D0,A2
00023724 <AmiBlitz3.ab3@5463>    BSR.w get1bytemain
00023728 <AmiBlitz3.ab3@5466>   MOVE.w $C(A2),D2
0002372E <AmiBlitz3.ab3@5467>   TST.b debugmode
00023732 <AmiBlitz3.ab3@5468>    BEQ.w 'norerr
00023736 <AmiBlitz3.ab3@5469>   MOVE.w #$C313,D1
0002373A <AmiBlitz3.ab3@5470>   CMP.w #$3,D2
0002373E <AmiBlitz3.ab3@5471>    BCS.w 'chkit
00023740 <AmiBlitz3.ab3@5472>   ADDQ.w #1,D1
00023746 <AmiBlitz3.ab3@5475>   JSR Atokejsr                                             ;make sure next thing on stack
00023748 <AmiBlitz3.ab3@5479>   MOVEQ.l #$02,D1
0002374C <AmiBlitz3.ab3@5480>   CMP.w #$3,D2
00023750 <AmiBlitz3.ab3@5481>    BCS.w 'doit
00023752 <AmiBlitz3.ab3@5482>   MOVEQ.l #$04,D1
00023756 <AmiBlitz3.ab3@5483>   CMP.w #$7,D2
0002375A <AmiBlitz3.ab3@5484>    BCS.w 'doit
00023760 <AmiBlitz3.ab3@5485>   LEA endselstr,A0
00023766 <AmiBlitz3.ab3@5486>   LEA endselstrf,A1
0002376C <AmiBlitz3.ab3@5487>   TST.b debugmode
00023770 <AmiBlitz3.ab3@5488>    BEQ.w 'norerr3
00023776 <AmiBlitz3.ab3@5489>   LEA endselstrf2,A1
0002377C <AmiBlitz3.ab3@5492>   JSR pokecode
00023780 <AmiBlitz3.ab3@5493>   MOVE.w #$C003,D1                                         ;global freemem
00023786 <AmiBlitz3.ab3@5494>  JMP Atokejsr
0002378C <AmiBlitz3.ab3@5497>   TST.b debugmode
00023790 <AmiBlitz3.ab3@5498>    BEQ.w 'norerr2
00023792 <AmiBlitz3.ab3@5499>   ADDQ.w #2,D1                                             ;for the "sE"
00023794 <AmiBlitz3.ab3@5502>   LSL.w #8,D1
00023796 <AmiBlitz3.ab3@5503>   LSL.w #1,D1
0002379C <AmiBlitz3.ab3@5504>   OR.w endsel,D1
000237A2 <AmiBlitz3.ab3@5505> JMP writeword
000237A6 <AmiBlitz3.ab3@5508> firstrep:    Ds.l 1
000237AA <AmiBlitz3.ab3@5509> replineat:   Ds.l 1
000237B0 <AmiBlitz3.ab3@5518>   CLR.l fp0addr
000237BA <AmiBlitz3.ab3@5519>   MOVE.l linenumat,replineat
000237BC <AmiBlitz3.ab3@5520>   MOVEQ.l #$08,D0
000237C2 <AmiBlitz3.ab3@5521>   MOVEA.l _execbase,A6
000237C8 <AmiBlitz3.ab3@5522>   MOVE.l mempool,a0
000237CC <AmiBlitz3.ab3@5523>   JSR _AllocPooled(a6)
000237CE <AmiBlitz3.ab3@5525>   MOVEA.l D0,A0
000237D2 <AmiBlitz3.ab3@5526>   MOVE.l firstrep(PC),(A0)
000237D8 <AmiBlitz3.ab3@5527>   MOVE.l A0,firstrep
000237E0 <AmiBlitz3.ab3@5528>   MOVE.l destpointer,$4(A0)
000237E2 <AmiBlitz3.ab3@5529> RTS
000237E8 <AmiBlitz3.ab3@5532> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
000237EC <AmiBlitz3.ab3@5535>   LEA str_temp(PC),A1
000237EE <AmiBlitz3.ab3@5536>   CLR.w (A1)
000237F2 <AmiBlitz3.ab3@5537>   CLR.l $2(A1)
000237F4 <AmiBlitz3.ab3@5540>   MOVEQ.l #$04,D0
000237F8 <AmiBlitz3.ab3@5543>     MOVE.b $1(A1),(A1)+
000237FC <AmiBlitz3.ab3@5544>   DBF D0,'loop
00023800 <AmiBlitz3.ab3@5549>   LEA str_temp(PC),A1
00023802 <AmiBlitz3.ab3@5550>   MOVE.b (A0),D0
00023806 <AmiBlitz3.ab3@5551>   ORI.b #$20,D0
0002380A <AmiBlitz3.ab3@5552>   MOVE.b D0,$5(A1)
0002380C <AmiBlitz3.ab3@5553>   TST.b (A0)+
00023810 <AmiBlitz3.ab3@5554>    BNE.w 'loop2
00023814 <AmiBlitz3.ab3@5555>   CMPI.w #$2E69,(A1)+                                      ;".i"
00023818 <AmiBlitz3.ab3@5556>    BNE.w 'no
0002381E <AmiBlitz3.ab3@5557>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00023820 <AmiBlitz3.ab3@5560> RTS
00023824 <AmiBlitz3.ab3@5564>   BPL.w 'evaltoke
00023826 <AmiBlitz3.ab3@5565>   MOVE.w D0,D1
0002382A <AmiBlitz3.ab3@5566>   ANDI.w #$7F80,D1
0002382E <AmiBlitz3.ab3@5567>    BEQ.w tokeerr
00023832 <AmiBlitz3.ab3@5568>   BCLR #$F,D0
00023834 <AmiBlitz3.ab3@5569>   MOVE.w D0,D4                                             ;got toke number
00023838 <AmiBlitz3.ab3@5570>   BSR.w get1bytemain
0002383C <AmiBlitz3.ab3@5571>  BRA.w 'gotnum
00023842 <AmiBlitz3.ab3@5574>   JSR evalconst
00023848 <AmiBlitz3.ab3@5575>   CMP.l #MaxWord,D3
0002384C <AmiBlitz3.ab3@5576>    BHI.w tokeerr
0002384E <AmiBlitz3.ab3@5577>   TST.w D6
00023852 <AmiBlitz3.ab3@5578>    BNE.w tokeerr
00023854 <AmiBlitz3.ab3@5579>   MOVE.w D3,D4
00023856 <AmiBlitz3.ab3@5582>   MOVEQ.l #$00,D5
0002385A <AmiBlitz3.ab3@5583>   CMP.w #$2C,D0
0002385E <AmiBlitz3.ab3@5584>    BNE.w 'gotfrom
00023860 <AmiBlitz3.ab3@5585>   MOVE.w D4,-(A7)
00023866 <AmiBlitz3.ab3@5586>    JSR evalconst2
0002386C <AmiBlitz3.ab3@5587>   CMP.l #MaxWord,D3
00023870 <AmiBlitz3.ab3@5588>    BHI.w tokeerr
00023872 <AmiBlitz3.ab3@5589>   TST.w D6
00023876 <AmiBlitz3.ab3@5590>    BNE.w tokeerr
00023878 <AmiBlitz3.ab3@5591>   MOVE.w D3,D5
0002387A <AmiBlitz3.ab3@5592>   MOVE.w (A7)+,D4
0002387C <AmiBlitz3.ab3@5595> RTS                                                        ;d4=toke, d5=form
0002387E <AmiBlitz3.ab3@5599>   TST.w D0
00023882 <AmiBlitz3.ab3@5600>    BSR.w gettokeps
00023886 <AmiBlitz3.ab3@5601>   MOVE.w #$4EB9,D1
0002388C <AmiBlitz3.ab3@5602>   JSR writeword
00023890 <AmiBlitz3.ab3@5603>   BSR.w addoff
00023892 <AmiBlitz3.ab3@5604>   MOVE.w D5,D1
00023896 <AmiBlitz3.ab3@5605>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00023898 <AmiBlitz3.ab3@5606>   SWAP D1
0002389A <AmiBlitz3.ab3@5607>   MOVE.w D4,D1
000238A0 <AmiBlitz3.ab3@5608> JMP writelong
000238A2 <AmiBlitz3.ab3@5612>   TST.w D0
000238A6 <AmiBlitz3.ab3@5613>    BSR.w gettokeps
000238AA <AmiBlitz3.ab3@5614>   MOVE.w #$4EB9,D1
000238B0 <AmiBlitz3.ab3@5615>   JSR writeword
000238B4 <AmiBlitz3.ab3@5616>   BSR.w addoff
000238B6 <AmiBlitz3.ab3@5617>   MOVE.w D5,D1
000238BA <AmiBlitz3.ab3@5618>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
000238BC <AmiBlitz3.ab3@5619>   SWAP D1
000238BE <AmiBlitz3.ab3@5620>   MOVE.w D4,D1
000238C4 <AmiBlitz3.ab3@5621>   JMP writelong
000238CA <AmiBlitz3.ab3@5625>   JSR evalconst
000238D0 <AmiBlitz3.ab3@5626>   CMP.l #$10000,D3
000238D4 <AmiBlitz3.ab3@5627>    BCC.w tokeerr
000238D6 <AmiBlitz3.ab3@5628>   MOVE.w D3,D1
000238DC <AmiBlitz3.ab3@5629> JMP Atokejsr
000238E0 <AmiBlitz3.ab3@5633>   BSR.w gettokeps
000238E4 <AmiBlitz3.ab3@5634>   MOVE.w #$4EB9,D1
000238EA <AmiBlitz3.ab3@5635>   JSR writeword
000238F0 <AmiBlitz3.ab3@5636>   MOVE.l destpointer,D3
000238F8 <AmiBlitz3.ab3@5637>   BTST #$7,blitzmode
000238FC <AmiBlitz3.ab3@5638>    BEQ.w 'inamiga
00023900 <AmiBlitz3.ab3@5639>   BSET #$E,D5
00023904 <AmiBlitz3.ab3@5642>   BSR.w maketjsr
00023908 <AmiBlitz3.ab3@5643>   BSR.w addoff
0002390E <AmiBlitz3.ab3@5644> JMP writelong
00023912 <AmiBlitz3.ab3@5648>   BEQ.w 'zero
00023914 <AmiBlitz3.ab3@5649>   MOVEQ.l #$02,D2                                          ;get a word
0002391A <AmiBlitz3.ab3@5651>   JSR bakeval
0002391E <AmiBlitz3.ab3@5652>   MOVE.w fvwait(PC),D1
00023922 <AmiBlitz3.ab3@5653>  BRA.w 'vcont
00023926 <AmiBlitz3.ab3@5656>   MOVE.w #$7000,D1                                         ;moveq #0,d0
0002392C <AmiBlitz3.ab3@5659>   JSR writeword
00023930 <AmiBlitz3.ab3@5660>   MOVE.w #$C104,D1
00023936 <AmiBlitz3.ab3@5661> JMP Atokejsr
00023938 <AmiBlitz3.ab3@5665>   SUBQ.w #1,D0
0002393E <AmiBlitz3.ab3@5668>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00023942 <AmiBlitz3.ab3@5671>   Dc.l $426d0001                                           ;clr.w $0(A5)
00023946 <AmiBlitz3.ab3@5675>   MOVE.b debugmode(PC),D1
0002394A <AmiBlitz3.ab3@5676>   BEQ.b 'skip
0002394E <AmiBlitz3.ab3@5677>   MOVE.w #$D500,D1
00023954 <AmiBlitz3.ab3@5678> JMP Atokejsr
00023956 <AmiBlitz3.ab3@5681> RTS
0002395E <AmiBlitz3.ab3@5685>   BSET #$0,blitzmode
00023966 <AmiBlitz3.ab3@5686>   BSET #$7,blitzmode
0002396A <AmiBlitz3.ab3@5687>   MOVE.w #$C200,D1
00023970 <AmiBlitz3.ab3@5688>   JSR Atokejsr
00023976 <AmiBlitz3.ab3@5689>   TST.b debugmode
0002397A <AmiBlitz3.ab3@5690>    BEQ.w 'done
0002397E <AmiBlitz3.ab3@5691>   MOVE.w cgoblitz(PC),D1
00023984 <AmiBlitz3.ab3@5692>   JSR writeword
00023986 <AmiBlitz3.ab3@5693>   MOVEQ.l #-$01,D1
0002398C <AmiBlitz3.ab3@5694>   JSR writeword
00023992 <AmiBlitz3.ab3@5695>   JSR getbbase
00023998 <AmiBlitz3.ab3@5696>   JSR writeword
0002399C <AmiBlitz3.ab3@5699> BRA.w debugmode_codelabel
000239A0 <AmiBlitz3.ab3@5703>   MOVE.w #$C201,D1
000239A4 <AmiBlitz3.ab3@5704> BRA.w do_AMIGA_toamode
000239A8 <AmiBlitz3.ab3@5707>   MOVE.W  #$C202,D1
000239B0 <AmiBlitz3.ab3@5710>   BSET #$0,blitzmode
000239B8 <AmiBlitz3.ab3@5711>   BCLR #$7,blitzmode
000239BE <AmiBlitz3.ab3@5712>   JSR Atokejsr
000239C4 <AmiBlitz3.ab3@5713>   TST.b debugmode
000239C8 <AmiBlitz3.ab3@5714>    BEQ.w 'done
000239CC <AmiBlitz3.ab3@5715>   MOVE.w cgoamiga(PC),D1
000239D2 <AmiBlitz3.ab3@5716>   JSR writeword
000239D8 <AmiBlitz3.ab3@5717>   JSR getbbase
000239DE <AmiBlitz3.ab3@5718>   JSR writeword
000239E2 <AmiBlitz3.ab3@5721> BRA.w debugmode_codelabel
000239E6 <AmiBlitz3.ab3@5725>   MOVEM.l D2-D7/A2-A4,-(A7)
000239EA <AmiBlitz3.ab3@5728>   MOVEM.l (A7)+,D2-D7/A2-A4
000239F0 <AmiBlitz3.ab3@5732>   JSR evalconst
000239F6 <AmiBlitz3.ab3@5733>   CMP.l #$E,D3
000239FA <AmiBlitz3.ab3@5734>    BCC.w interr4
000239FE <AmiBlitz3.ab3@5735>   MOVE.w #$7000,D1
00023A00 <AmiBlitz3.ab3@5736>   OR.w D3,D1
00023A06 <AmiBlitz3.ab3@5737>   JSR writeword
00023A0A <AmiBlitz3.ab3@5738>   MOVE.w #$C101,D1
00023A10 <AmiBlitz3.ab3@5739> JMP Atokejsr                                               ;clear the interupt
00023A12 <AmiBlitz3.ab3@5742> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023A16 <AmiBlitz3.ab3@5743> errjmp:      Ds.l 1                                        ;where err jump is
00023A1A <AmiBlitz3.ab3@5744> errcode:     Ds.l 1
00023A1E <AmiBlitz3.ab3@5748>   MOVE.W  #$D202,D1
00023A24 <AmiBlitz3.ab3@5749> JMP Atokejsr                                               ;BRA.W Atokejsr
00023A28 <AmiBlitz3.ab3@5753>   MOVE.w inerr(PC),D1
00023A2C <AmiBlitz3.ab3@5754>    BEQ.w errerr3
00023A32 <AmiBlitz3.ab3@5755>   CLR.w inerr
00023A38 <AmiBlitz3.ab3@5756>   MOVE.w dontwrite_nomemleft,D1
00023A3C <AmiBlitz3.ab3@5757>    BNE.w 'skip
00023A40 <AmiBlitz3.ab3@5758>   MOVEA.l errjmp(PC),A0
00023A46 <AmiBlitz3.ab3@5759>   MOVE.l destpointer,(A0)
00023A4A <AmiBlitz3.ab3@5762> BRA.w get1bytemain
00023A4E <AmiBlitz3.ab3@5766>   MOVE.w #$D205,D1
00023A54 <AmiBlitz3.ab3@5767> JMP Atokejsr
00023A5A <AmiBlitz3.ab3@5771>   MOVE.w proceduremode,D1
00023A5E <AmiBlitz3.ab3@5772>    BNE.w errerr1
00023A62 <AmiBlitz3.ab3@5773>   MOVE.w inerr(PC),D1
00023A66 <AmiBlitz3.ab3@5774>    BNE.w errerr2
00023A6C <AmiBlitz3.ab3@5775>   LEA inerr,a0
00023A6E <AmiBlitz3.ab3@5776>   NOT.w (a0)                                               ;reass
00023A72 <AmiBlitz3.ab3@5777>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00023A78 <AmiBlitz3.ab3@5778>   JSR writeword
00023A82 <AmiBlitz3.ab3@5779>   MOVE.l destpointer,errcode
00023A86 <AmiBlitz3.ab3@5780>   BSR.w addoff
00023A8C <AmiBlitz3.ab3@5781>   JSR writelong
00023A90 <AmiBlitz3.ab3@5782>   MOVE.w #$D201,D1
00023A96 <AmiBlitz3.ab3@5783>   JSR Atokejsr
00023A9A <AmiBlitz3.ab3@5784>   MOVE.w #$4EF9,D1                                         ;JMP
00023AA0 <AmiBlitz3.ab3@5785>   JSR writeword
00023AAA <AmiBlitz3.ab3@5786>   MOVE.l destpointer,errjmp
00023AAE <AmiBlitz3.ab3@5787>   BSR.w addoff
00023AB4 <AmiBlitz3.ab3@5788>   JSR writelong
00023ABA <AmiBlitz3.ab3@5789>   MOVE.w dontwrite_nomemleft,D1
00023ABE <AmiBlitz3.ab3@5790>    BNE.w 'skip
00023AC2 <AmiBlitz3.ab3@5791>   MOVEA.l errcode(PC),A0
00023AC8 <AmiBlitz3.ab3@5792>   MOVE.l destpointer,(A0)
00023ACA <AmiBlitz3.ab3@5795> RTS
00023ACE <AmiBlitz3.ab3@5798> intlineat:  Ds.l 1
00023AD0 <AmiBlitz3.ab3@5802>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00023AD4 <AmiBlitz3.ab3@5803>   BSR.w errchx
00023ADA <AmiBlitz3.ab3@5804>   MOVE.w D1,intstring
00023AE4 <AmiBlitz3.ab3@5805>   MOVE.l linenumat,intlineat
00023AEA <AmiBlitz3.ab3@5806>   JSR evalconst                                           ;get constant - int level
00023AF0 <AmiBlitz3.ab3@5807>   CMP.l #$E,D3
00023AF4 <AmiBlitz3.ab3@5808>    BCC.w interr4
00023AFA <AmiBlitz3.ab3@5809>   ST intsused
00023B00 <AmiBlitz3.ab3@5810>   MOVE.w D3,intlevel
00023B04 <AmiBlitz3.ab3@5811>   MOVE.w #$7000,D1
00023B06 <AmiBlitz3.ab3@5812>   OR.w D3,D1                                              
00023B0C <AmiBlitz3.ab3@5813>   JSR writeword                                         ;moveq #x,d0
00023B10 <AmiBlitz3.ab3@5814>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00023B16 <AmiBlitz3.ab3@5815>   JSR writeword
00023B1A <AmiBlitz3.ab3@5816>   BSR.w addoff
00023B20 <AmiBlitz3.ab3@5817>   MOVE.l destpointer,-(A7)
00023B24 <AmiBlitz3.ab3@5818>   BSR.w writelong
00023B28 <AmiBlitz3.ab3@5819>   MOVE.w #$C100,D1
00023B2E <AmiBlitz3.ab3@5820>   JSR Atokejsr
00023B32 <AmiBlitz3.ab3@5821>   MOVE.w #$4EF9,D1                                        ;jmp
00023B38 <AmiBlitz3.ab3@5822>   JSR writeword
00023B3C <AmiBlitz3.ab3@5823>   BSR.w addoff
00023B46 <AmiBlitz3.ab3@5824>   MOVE.l destpointer,intjmpat
00023B4A <AmiBlitz3.ab3@5825>   BSR.w writelong
00023B4C <AmiBlitz3.ab3@5826>   MOVEA.l (A7)+,A0
00023B52 <AmiBlitz3.ab3@5827>   MOVE.w dontwrite_nomemleft,D1
00023B56 <AmiBlitz3.ab3@5828>   BNE.w 'dontpoke
00023B5C <AmiBlitz3.ab3@5829>   MOVE.l destpointer,(A0)
00023B60 <AmiBlitz3.ab3@5832>   MOVE.l intstart0(PC),D1
00023B64 <AmiBlitz3.ab3@5833>   BSR.w writelong
00023B6A <AmiBlitz3.ab3@5834>   TST.b debugmode
00023B6E <AmiBlitz3.ab3@5835>    BEQ.w 'norerr
00023B70 <AmiBlitz3.ab3@5839>   MOVEQ.l #$02,D1
00023B74 <AmiBlitz3.ab3@5840>   BSR.w writetrap
00023B78 <AmiBlitz3.ab3@5841>   BSR.w addoff
00023B82 <AmiBlitz3.ab3@5842>   MOVE.l destpointer,intcleanat
00023B86 <AmiBlitz3.ab3@5843>   BSR.w writelong
00023B8C <AmiBlitz3.ab3@5844>   MOVE.w intlevel,D1
00023B90 <AmiBlitz3.ab3@5845>   BSR.w writeword
00023B94 <AmiBlitz3.ab3@5846>   MOVE.w #$C30B,D1                                         ;disable stack checks
00023B9A <AmiBlitz3.ab3@5847>   JSR Atokejsr
00023B9E <AmiBlitz3.ab3@5850>   MOVE.w #$FED3,D1
00023BA2 <AmiBlitz3.ab3@5851>   BSR.w uselib
00023BA6 <AmiBlitz3.ab3@5852>   MOVE.w #$C102,D1
00023BAC <AmiBlitz3.ab3@5853>   JSR Atokejsr
00023BB4 <AmiBlitz3.ab3@5854>   MOVE.w #-1,lasta6
00023BBE <AmiBlitz3.ab3@5855>   MOVE.l linenumat,intline
00023BC0 <AmiBlitz3.ab3@5856> RTS
00023BC2 <AmiBlitz3.ab3@5860>             Ds.w 1                                         ;??looks like obsolved data??
00023BC6 <AmiBlitz3.ab3@5862> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00023BCA <AmiBlitz3.ab3@5864> intjmpat:   Ds.l 1
00023BCE <AmiBlitz3.ab3@5865> intline:    Ds.l 1
00023BD0 <AmiBlitz3.ab3@5866> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023BD2 <AmiBlitz3.ab3@5869> intlevel:   Ds.w 1
00023BD6 <AmiBlitz3.ab3@5870> intcleanat: Ds.l 1
00023BDA <AmiBlitz3.ab3@5871> ret15add:   Ds.l 1
00023BDC <AmiBlitz3.ab3@5872> ret15cc:    Ds.w 1
00023BE4 <AmiBlitz3.ab3@5876>   ADDI.l #$12,$2(A7)
00023BEC <AmiBlitz3.ab3@5877>   MOVE.l $2(A7),ret15add
00023BF2 <AmiBlitz3.ab3@5878>   MOVE.w (A7),ret15cc
00023BFA <AmiBlitz3.ab3@5879>   MOVE.l #directdo,$2(A7)
00023BFC <AmiBlitz3.ab3@5880> RTE
00023C00 <AmiBlitz3.ab3@5889>   MOVE.l ret15add(PC),-(A7)
00023C04 <AmiBlitz3.ab3@5890>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023C08 <AmiBlitz3.ab3@5891>   MOVEM.l D0-D7/A0-A6,-(A7)
00023C12 <AmiBlitz3.ab3@5892>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023C1C <AmiBlitz3.ab3@5893>   MOVE.l destbufferstart,trap15temp2
00023C26 <AmiBlitz3.ab3@5894>   MOVE.l libend,templibend
00023C30 <AmiBlitz3.ab3@5895>   MOVE.l data1start,tempdata1start
00023C36 <AmiBlitz3.ab3@5896>   CLR.l hunkoffsetcounter
00023C3C <AmiBlitz3.ab3@5898>   MOVE.l directbuffer,a0
00023C42 <AmiBlitz3.ab3@5902>   MOVE.l a0,destbufferstart
00023C48 <AmiBlitz3.ab3@5903>   ADD.l #3900,a0
00023C4E <AmiBlitz3.ab3@5904>   MOVE.l a0,destbufferend
00023C54 <AmiBlitz3.ab3@5905>   TST.b exdebug
00023C58 <AmiBlitz3.ab3@5906>   BEQ 'l1
00023C5E <AmiBlitz3.ab3@5907>   MOVE.l a0,libend
00023C64 <AmiBlitz3.ab3@5908>   ADD.l #4000,a0
00023C6A <AmiBlitz3.ab3@5909>   MOVE.l a0,data1start
00023C74 <AmiBlitz3.ab3@5912>   MOVE.l #'dircont,errcont
00023C7A <AmiBlitz3.ab3@5913> 
00023C80 <AmiBlitz3.ab3@5914>   MOVE.l A7,errstack
00023C88 <AmiBlitz3.ab3@5915>   MOVE.w #$FFFF,dirmode
00023C8C <AmiBlitz3.ab3@5917>     MOVEA.l ret15add(PC),A1
00023C92 <AmiBlitz3.ab3@5918>     MOVE.w -(A1),blitzmode
00023C94 <AmiBlitz3.ab3@5919>     CLR.l -(A1)
00023C9A <AmiBlitz3.ab3@5920>     MOVE.l -(A1),firstglob
00023CA0 <AmiBlitz3.ab3@5921>     MOVE.l -(A1),firstlocal
00023CA6 <AmiBlitz3.ab3@5923>   CLR.w proceduremode
00023CAC <AmiBlitz3.ab3@5924>   MOVE.l firstglob,D0
00023CB2 <AmiBlitz3.ab3@5925>   OR.l firstlocal,D0
00023CB6 <AmiBlitz3.ab3@5926>   BEQ.b 'skip
00023CBC <AmiBlitz3.ab3@5927>   NOT.w proceduremode
00023CBE <AmiBlitz3.ab3@5930>   MOVEA.l -(A1),A0                                         ;address of string
00023CC0 <AmiBlitz3.ab3@5934>   MOVE.l A0,-(A7)
00023CFE <AmiBlitz3.ab3@5937>   !ComData_GetL{comFunc_DebugTrap,A1}
00023D00 <AmiBlitz3.ab3@5938>   JSR (A1)                                                 ;tokenise line.....
00023D02 <AmiBlitz3.ab3@5940>   MOVEA.l (A7)+,A5
00023D0C <AmiBlitz3.ab3@5941>   MOVE.l directbuffer,destpointer
00023D12 <AmiBlitz3.ab3@5942>   TST.b exdebug
00023D16 <AmiBlitz3.ab3@5943>   BEQ 'noexdebug
00023D18 <AmiBlitz3.ab3@5944>   MOVE.l a5,a0
00023D1E <AmiBlitz3.ab3@5945>   MOVE.l #200,d0
00023D24 <AmiBlitz3.ab3@5948>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023D28 <AmiBlitz3.ab3@5949>   DBF d0,'l2
00023D2E <AmiBlitz3.ab3@5954>   MOVE.l destpointer,a0
00023D32 <AmiBlitz3.ab3@5955>   MOVE.w #$207c,(a0)+
00023D34 <AmiBlitz3.ab3@5956>   MOVE.l a5,d0
00023D3A <AmiBlitz3.ab3@5957>   ADD.l #$206,d0                                           ;constant from debuglib
00023D3C <AmiBlitz3.ab3@5958>   MOVE.l d0,(a0)+
00023D42 <AmiBlitz3.ab3@5959>   MOVE.l a0,destpointer
00023D44 <AmiBlitz3.ab3@5960>   MOVE.l a5,a0
00023D48 <AmiBlitz3.ab3@5961>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023D4E <AmiBlitz3.ab3@5962>   MOVE.l #"$520",(a0)+
00023D52 <AmiBlitz3.ab3@5963>   MOVE.w #"4:",(a0)+
00023D58 <AmiBlitz3.ab3@5966>   CLR.w dontwrite_nomemleft
00023D60 <AmiBlitz3.ab3@5967>   MOVE.w #$FFFF,lasta6
00023D64 <AmiBlitz3.ab3@5968>   BSR.w compile_line                                        ;.....compile it
00023D6A <AmiBlitz3.ab3@5969>   TST.b exdebug
00023D6E <AmiBlitz3.ab3@5970>   BEQ 'noexdebug2
00023D74 <AmiBlitz3.ab3@5971>   JSR fixjsrs
00023D7A <AmiBlitz3.ab3@5974>   CLR.w proceduremode
00023D7E <AmiBlitz3.ab3@5975>   BSR.w errchx
00023D82 <AmiBlitz3.ab3@5976>   MOVE.w #$4EF9,D1
00023D86 <AmiBlitz3.ab3@5977>   BSR.w writeword                                          ;JMP
00023D8A <AmiBlitz3.ab3@5978>   MOVE.l ret15add(PC),D1
00023D8E <AmiBlitz3.ab3@5979>   BSR.w writelong                                          ;jmp to done
00023D94 <AmiBlitz3.ab3@5980>   MOVE.w dontwrite_nomemleft,D0
00023D98 <AmiBlitz3.ab3@5981>    BNE.w nodirmem
00023DA0 <AmiBlitz3.ab3@5982>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00023DA6 <AmiBlitz3.ab3@5985>   CLR.w dirmode
00023DAC <AmiBlitz3.ab3@5986>   MOVE.w ret15cc(PC),$3C(A7)
00023DB6 <AmiBlitz3.ab3@5987>   MOVE.l trap15temp,destbufferend
00023DC0 <AmiBlitz3.ab3@5988>   MOVE.l trap15temp2,destbufferstart
00023DCA <AmiBlitz3.ab3@5989>   MOVE.l tempdata1start,data1start
00023DD4 <AmiBlitz3.ab3@5990>   MOVE.l templibend,libend
00023DD8 <AmiBlitz3.ab3@5991>   MOVEM.l (A7)+,D0-D7/A0-A6
00023DDC <AmiBlitz3.ab3@5992>   BSR.w Aclearcache                                        ;selden used
00023DDE <AmiBlitz3.ab3@5993> RTR
00023DE2 <AmiBlitz3.ab3@5996>   MOVEA.l ret15add(PC),A0
00023DE4 <AmiBlitz3.ab3@5997>   SUBQ.w #2,A0
00023DE6 <AmiBlitz3.ab3@5998>   MOVE.l D0,-(A0)
00023DEA <AmiBlitz3.ab3@5999> BRA.w 'direxit
00023DEE <AmiBlitz3.ab3@6003>   MOVE.w $6(A3),D1
00023DF2 <AmiBlitz3.ab3@6004>   BSR.w uselib                                             ;get lib for base address
00023DF6 <AmiBlitz3.ab3@6005>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023DF8 <AmiBlitz3.ab3@6006>   ADDQ.w #8,A3
00023DFA <AmiBlitz3.ab3@6007>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023DFC <AmiBlitz3.ab3@6008>   MOVE.l A3,-(A7)
00023DFE <AmiBlitz3.ab3@6012>   MOVEQ.l #$00,D3
00023E04 <AmiBlitz3.ab3@6014>   JSR checka4a5
00023E06 <AmiBlitz3.ab3@6018>   MOVE.b (A3)+,D1
00023E0A <AmiBlitz3.ab3@6019>    BMI.w 'done
00023E0C <AmiBlitz3.ab3@6020>   MOVEQ.l #$03,D2
00023E0E <AmiBlitz3.ab3@6021>   ADDQ.w #1,D3
00023E12 <AmiBlitz3.ab3@6022>   MOVEM.l D3/A3,-(A7)
00023E18 <AmiBlitz3.ab3@6024>   MOVE.b funcparloop,-(a7)
00023E20 <AmiBlitz3.ab3@6025>   MOVE.b #0,funcparloop
00023E26 <AmiBlitz3.ab3@6026>   MOVE.l leftsidetype,-(a7)
00023E2C <AmiBlitz3.ab3@6027>   MOVE.l rightsidetype,-(a7)
00023E32 <AmiBlitz3.ab3@6028>   MOVE.w leftsideflagmask,-(a7)
00023E38 <AmiBlitz3.ab3@6029>   MOVE.w rightsideflagmask,-(a7)
00023E3E <AmiBlitz3.ab3@6030>   CLR.l leftsidetype
00023E44 <AmiBlitz3.ab3@6031>   CLR.l rightsidetype
00023E4A <AmiBlitz3.ab3@6032>   CLR.w leftsideflagmask
00023E50 <AmiBlitz3.ab3@6033>   CLR.w rightsideflagmask
00023E56 <AmiBlitz3.ab3@6034>   MOVE.b blitzparloop,-(a7)
00023E5E <AmiBlitz3.ab3@6035>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023E64 <AmiBlitz3.ab3@6037>   JSR peval
00023E6A <AmiBlitz3.ab3@6039>   MOVE.b (a7)+,blitzparloop
00023E70 <AmiBlitz3.ab3@6040>   MOVE.w (a7)+,rightsideflagmask
00023E76 <AmiBlitz3.ab3@6041>   MOVE.w (a7)+,leftsideflagmask
00023E7C <AmiBlitz3.ab3@6042>   MOVE.l (a7)+,rightsidetype
00023E82 <AmiBlitz3.ab3@6043>   MOVE.l (a7)+,leftsidetype
00023E88 <AmiBlitz3.ab3@6044>   MOVE.b (a7)+,funcparloop
00023E8C <AmiBlitz3.ab3@6045>   MOVEM.l (A7)+,D3/A3
00023E90 <AmiBlitz3.ab3@6047>   CMP.w #$2C,D0     ; ','
00023E94 <AmiBlitz3.ab3@6048>    BEQ.w 'loop
00023E96 <AmiBlitz3.ab3@6049>   TST.b (A3)
00023E9A <AmiBlitz3.ab3@6050>    BPL.w syntaxerr
00023E9C <AmiBlitz3.ab3@6053>   MOVEA.l (A7)+,A3
00023E9E <AmiBlitz3.ab3@6054>   SUBQ.w #1,D3
00023EA2 <AmiBlitz3.ab3@6055>    BPL.w 'toend
00023EA6 <AmiBlitz3.ab3@6056>    BSR.w get1bytemain                                      ;no pars - get :
00023EAA <AmiBlitz3.ab3@6057>  BRA.w 'nopars
00023EAC <AmiBlitz3.ab3@6060>   TST.b (A3)+                                              ;go to end of params
00023EB0 <AmiBlitz3.ab3@6061>    BPL.w 'toend
00023EB2 <AmiBlitz3.ab3@6062>   SUBQ.w #1,A3
00023EB4 <AmiBlitz3.ab3@6065>    MOVEQ.l #$00,D1
00023EB6 <AmiBlitz3.ab3@6066>    MOVE.b -(A3),D1
00023EBA <AmiBlitz3.ab3@6067>    BTST #$4,D1
00023EBE <AmiBlitz3.ab3@6068>     BNE.w 'addreg
00023EC0 <AmiBlitz3.ab3@6069>    LSL.w #8,D1
00023EC2 <AmiBlitz3.ab3@6070>    LSL.w #1,D1
00023EC6 <AmiBlitz3.ab3@6071>    ORI.w #$201F,D1
00023ECA <AmiBlitz3.ab3@6072>  BRA.w 'gotit
00023ECE <AmiBlitz3.ab3@6075>    ANDI.w #$7,D1
00023ED0 <AmiBlitz3.ab3@6076>    LSL.w #8,D1
00023ED2 <AmiBlitz3.ab3@6077>    LSL.w #1,D1
00023ED6 <AmiBlitz3.ab3@6078>    ORI.w #$205F,D1
00023EDA <AmiBlitz3.ab3@6081>     BSR.w writeword
00023EDE <AmiBlitz3.ab3@6082>   DBF D3,'loop2
00023EE4 <AmiBlitz3.ab3@6085>   MOVE.w (A7)+,libjsr+2
00023EEA <AmiBlitz3.ab3@6086>   MOVE.w (A7)+,libbase+2
00023EF0 <AmiBlitz3.ab3@6087>   MOVE.l libbase,D1
00023EF4 <AmiBlitz3.ab3@6088>    BSR.w writelong
00023EFA <AmiBlitz3.ab3@6089>   MOVE.l libjsr,D1
00023F00 <AmiBlitz3.ab3@6090>   JSR writelong
00023F06 <AmiBlitz3.ab3@6092>   JSR restorea4a5
00023F08 <AmiBlitz3.ab3@6094> RTS
00023F0E <AmiBlitz3.ab3@6101>   MOVE.l data1,D4
00023F14 <AmiBlitz3.ab3@6102>   SUB.l data1start,D4
00023F1A <AmiBlitz3.ab3@6103>   ADD.l #10000,d4
00023F20 <AmiBlitz3.ab3@6104>   MOVE.l libend,D3
00023F26 <AmiBlitz3.ab3@6105>   SUB.l destbufferend,D3
00023F2C <AmiBlitz3.ab3@6106>   ADD.l #40000,d3
00023F32 <AmiBlitz3.ab3@6107>   MOVE.l bigpc,D2
00023F38 <AmiBlitz3.ab3@6108>   SUB.l destbufferstart,D2
00023F3E <AmiBlitz3.ab3@6109>   ADD.l #20000,d2
00023F44 <AmiBlitz3.ab3@6110>   MOVE.l databuffer,D5
00023F4A <AmiBlitz3.ab3@6111>   ADD.l #10000,D5
00023F4E <AmiBlitz3.ab3@6112>  BRA newallox
00023F54 <AmiBlitz3.ab3@6115>   MOVE.l objectbuffer,D2       ;??Looks like unused code??
00023F56 <AmiBlitz3.ab3@6116>   LSR.l #1,D2
00023F5C <AmiBlitz3.ab3@6117>   ADD.l objectbuffer,D2
00023F62 <AmiBlitz3.ab3@6119>   MOVE.l libsbuffer,D3
00023F64 <AmiBlitz3.ab3@6120>   LSR.l #1,D3
00023F6A <AmiBlitz3.ab3@6121>   ADD.l libsbuffer,D3
00023F70 <AmiBlitz3.ab3@6123>   MOVE.l systembuffer,D4
00023F72 <AmiBlitz3.ab3@6124>   LSR.l #1,D4
00023F78 <AmiBlitz3.ab3@6125>   ADD.l systembuffer,D4
00023F7E <AmiBlitz3.ab3@6127>   MOVE.l databuffer,D5
00023F80 <AmiBlitz3.ab3@6128>   LSR.l #1,D5
00023F86 <AmiBlitz3.ab3@6129>   ADD.l databuffer,D5
00023F8A <AmiBlitz3.ab3@6131> BRA.w newallox
00023F90 <AmiBlitz3.ab3@6135>   MOVE.l bigpc,D2
00023F96 <AmiBlitz3.ab3@6136>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023F9C <AmiBlitz3.ab3@6137>   SUB.l savefuncspace,d2
00023FA2 <AmiBlitz3.ab3@6139>   TST.w debugversion
00023FA6 <AmiBlitz3.ab3@6140>    BNE.b 'skip
00023FAC <AmiBlitz3.ab3@6141>   ADDI.l #$800,D2
00023FB2 <AmiBlitz3.ab3@6144>   MOVE.l libend,D3
00023FB8 <AmiBlitz3.ab3@6145>   SUB.l destbufferend,D3
00023FBE <AmiBlitz3.ab3@6149>   MOVE.l data1,D4
00023FC4 <AmiBlitz3.ab3@6150>   SUB.l data1start,D4
00023FCA <AmiBlitz3.ab3@6154>   MOVE.l data2,D5
00023FD0 <AmiBlitz3.ab3@6155>   SUB.l data2at,D5
00023FD6 <AmiBlitz3.ab3@6158>   CLR.l morememadd
00023FDA <AmiBlitz3.ab3@6162>   BSR.w makeallox
00023FDE <AmiBlitz3.ab3@6163>   BNE.w 'done
00023FE2 <AmiBlitz3.ab3@6164>  BRA.w init_buffers
00023FE4 <AmiBlitz3.ab3@6167> RTS
00023FEA <AmiBlitz3.ab3@6171>   MOVEA.l _execbase,A6
00023FF0 <AmiBlitz3.ab3@6172>   MOVE.l objlen,D0
00023FF4 <AmiBlitz3.ab3@6173>   BEQ.w 'skip
00023FFA <AmiBlitz3.ab3@6174>   CLR.l objlen
00024000 <AmiBlitz3.ab3@6175>   MOVEA.l destbufferstart,A1
00024006 <AmiBlitz3.ab3@6177>   MOVE.l mempool,a0
0002400A <AmiBlitz3.ab3@6178> JMP _FreeVec(A6)
0002400C <AmiBlitz3.ab3@6183> RTS
00024012 <AmiBlitz3.ab3@6187>   MOVE.l objectbuffer,D2
00024018 <AmiBlitz3.ab3@6188>   MOVE.l libsbuffer,D3
0002401E <AmiBlitz3.ab3@6189>   MOVE.l systembuffer,D4
00024024 <AmiBlitz3.ab3@6190>   MOVE.l databuffer,D5
0002402C <AmiBlitz3.ab3@6195>   MOVE.w #$FFFF,anyerrs      ; was -1
00024030 <AmiBlitz3.ab3@6196>   BSR.w freeallox
00024032 <AmiBlitz3.ab3@6200>   ADDQ.l #1,D2
00024036 <AmiBlitz3.ab3@6201>   BCLR #$0,D2
00024038 <AmiBlitz3.ab3@6202>   ADDQ.l #1,D3
0002403C <AmiBlitz3.ab3@6203>   BCLR #$0,D3
0002403E <AmiBlitz3.ab3@6204>   ADDQ.l #1,D4
00024042 <AmiBlitz3.ab3@6205>   BCLR #$0,D4
00024044 <AmiBlitz3.ab3@6207>   TST.l d5        ; ??? make no sence ??
00024048 <AmiBlitz3.ab3@6208>   BNE 'l1
0002404A <AmiBlitz3.ab3@6212>   ADDQ.l #1,D5
0002404E <AmiBlitz3.ab3@6213>   BCLR #$0,D5
00024050 <AmiBlitz3.ab3@6215>   MOVE.l D2,D0
00024052 <AmiBlitz3.ab3@6216>   ADD.l D3,D0
00024054 <AmiBlitz3.ab3@6217>   ADD.l D4,D0
00024056 <AmiBlitz3.ab3@6218>   ADD.l D5,D0
0002405C <AmiBlitz3.ab3@6220>   ADD.l #moremem,d0
0002405E <AmiBlitz3.ab3@6222>   MOVE.l D0,D6
00024064 <AmiBlitz3.ab3@6223>   MOVE.l #MemfPublic_MemfClear,D1
0002406A <AmiBlitz3.ab3@6225>   MOVE.l mempool,a0
00024070 <AmiBlitz3.ab3@6226>   MOVEA.l _execbase,A6
00024074 <AmiBlitz3.ab3@6227>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00024076 <AmiBlitz3.ab3@6230>   TST.l D0
0002407A <AmiBlitz3.ab3@6231>   BEQ.w 'done
00024080 <AmiBlitz3.ab3@6232>   MOVE.l D6,objlen
00024086 <AmiBlitz3.ab3@6233>   MOVE.l D2,objectbuffer
0002408C <AmiBlitz3.ab3@6234>   MOVE.l D3,libsbuffer
00024092 <AmiBlitz3.ab3@6235>   MOVE.l D4,systembuffer
00024098 <AmiBlitz3.ab3@6236>   MOVE.l D5,databuffer
0002409E <AmiBlitz3.ab3@6237>   MOVE.l D0,destbufferstart
000240D2 <AmiBlitz3.ab3@6241>   !ComData_SetL{comPtr_DestBufferStart,D0}
000240D4 <AmiBlitz3.ab3@6243>   ADD.l D2,D0
000240DA <AmiBlitz3.ab3@6244>   MOVE.l D0,destbufferend
000240DC <AmiBlitz3.ab3@6245>   ADD.l D3,D0
000240E2 <AmiBlitz3.ab3@6246>   MOVE.l D0,data1start
000240E4 <AmiBlitz3.ab3@6247>   ADD.l D4,D0
000240EA <AmiBlitz3.ab3@6248>   MOVE.l D0,data2at
000240EC <AmiBlitz3.ab3@6249>   ADD.l D5,D0
000240F2 <AmiBlitz3.ab3@6250>   MOVE.l D0,allat
000240F4 <AmiBlitz3.ab3@6253> RTS
000240F8 <AmiBlitz3.ab3@6257>   Dc.b $00,$00,$00,$01                                     ;         1
000240FC <AmiBlitz3.ab3@6258>   Dc.b $00,$00,$00,$0A                                     ;        10
00024100 <AmiBlitz3.ab3@6259>   Dc.b $00,$00,$00,$64                                     ;       100
00024104 <AmiBlitz3.ab3@6260>   Dc.b $00,$00,$03,$E8                                     ;      1000
00024108 <AmiBlitz3.ab3@6261>   Dc.b $00,$00,$27,$10                                     ;     10000
0002410C <AmiBlitz3.ab3@6262>   Dc.b $00,$01,$86,$A0                                     ;    100000
00024110 <AmiBlitz3.ab3@6263>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00024114 <AmiBlitz3.ab3@6264>   Dc.b $00,$98,$96,$80                                     ;  10000000
00024118 <AmiBlitz3.ab3@6265>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
0002411C <AmiBlitz3.ab3@6266>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
0002411E <AmiBlitz3.ab3@6270>   MOVEQ.l #$00,D1                                          ;no zero printed
00024120 <AmiBlitz3.ab3@6271>   MOVEQ.l #$24,D3                                          ; "$"
00024122 <AmiBlitz3.ab3@6274>   MOVEQ.l #$30,D4                                          ; "0"
00024126 <AmiBlitz3.ab3@6277>     CMP.l divisors(PC,D3.W),D2
0002412A <AmiBlitz3.ab3@6278>     BCS.w 'skip
0002412E <AmiBlitz3.ab3@6279>     SUB.l divisors(PC,D3.W),D2
00024130 <AmiBlitz3.ab3@6280>     ADDQ.w #1,D4
00024134 <AmiBlitz3.ab3@6281>  BRA.w 'loop2
00024138 <AmiBlitz3.ab3@6284>   CMP.b #"0",D4
0002413C <AmiBlitz3.ab3@6285>   BNE.w 'doit
0002413E <AmiBlitz3.ab3@6286>   TST.w D1
00024142 <AmiBlitz3.ab3@6287>   BEQ.w 'skip2
00024144 <AmiBlitz3.ab3@6290>   MOVE.b D4,(A0)+
00024146 <AmiBlitz3.ab3@6291>   MOVEQ.l #$01,D1
00024148 <AmiBlitz3.ab3@6294>   SUBQ.w #4,D3
0002414C <AmiBlitz3.ab3@6295>   BPL.w 'loop
0002414E <AmiBlitz3.ab3@6296>   TST.w D1
00024152 <AmiBlitz3.ab3@6297>   BNE.w 'skip3
00024156 <AmiBlitz3.ab3@6298>   MOVE.b #"0",(A0)+
00024158 <AmiBlitz3.ab3@6301>   CLR.b (A0)
0002415A <AmiBlitz3.ab3@6302> RTS
0002417A <AmiBlitz3.ab3@6305> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
0002423A <AmiBlitz3.ab3@6306> str_residentpath:       Ds.l 48                                                ;respath org source
000242FA <AmiBlitz3.ab3@6307> str_residentname:       Ds.l 48                                                ;resname org source
00024300 <AmiBlitz3.ab3@6313>   MOVE.l macrobase,D0
00024304 <AmiBlitz3.ab3@6314>    BNE.w 'skip
0002430A <AmiBlitz3.ab3@6315>   MOVE.l newtype_string,D0
0002430E <AmiBlitz3.ab3@6316>    BNE.w 'skip
00024314 <AmiBlitz3.ab3@6317>   MOVEA.l labelbase,A2
00024318 <AmiBlitz3.ab3@6320>     CMPA.w #$0,A2
0002431C <AmiBlitz3.ab3@6321>      BEQ.w 'err
00024324 <AmiBlitz3.ab3@6322>     CMPI.l #$1,$4(A2)
00024328 <AmiBlitz3.ab3@6323>      BEQ.w 'skip
0002432A <AmiBlitz3.ab3@6324>     MOVEA.l (A2),A2
0002432E <AmiBlitz3.ab3@6325>  BRA.w 'loop
00024358 <AmiBlitz3.ab3@6329>   !basic
000243BA <AmiBlitz3.ab3@6330> 
000243D8 <AmiBlitz3.ab3@6331>   !asm
000243DA <AmiBlitz3.ab3@6333>  RTS
00024418 <AmiBlitz3.ab3@6338>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0002441E <AmiBlitz3.ab3@6339>   LEA str_residentrequester,A2
00024424 <AmiBlitz3.ab3@6340>   LEA str_residentpath,A0
0002442A <AmiBlitz3.ab3@6341>   LEA str_residentname,A1
00024454 <AmiBlitz3.ab3@6343>   !basic
0002448C <AmiBlitz3.ab3@6344>     Poke$ ?str_residentpath,my_residentsdir$
000244B8 <AmiBlitz3.ab3@6345>     Poke$ ?str_residentname,".res"
000244D6 <AmiBlitz3.ab3@6346>   !asm
000244D8 <AmiBlitz3.ab3@6348>   JSR (A3)                                                 ;open ped filerequest
000244DC <AmiBlitz3.ab3@6349>   BEQ.w 'err
000244DE <AmiBlitz3.ab3@6353>   MOVE.l D0,D1
000244E4 <AmiBlitz3.ab3@6354>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000244E8 <AmiBlitz3.ab3@6355>   MOVEA.l _dosbase(PC),A6
000244EC <AmiBlitz3.ab3@6356>   JSR _Open(A6)
000244EE <AmiBlitz3.ab3@6357>   MOVE.l D0,D7               ;handle                                ;handle
000244F2 <AmiBlitz3.ab3@6358>   BEQ.w 'err
000244F6 <AmiBlitz3.ab3@6360>   MOVEM.l d2-d7/a0-a6,-(a7)
000244FC <AmiBlitz3.ab3@6361>   LEA devo,a0
00024502 <AmiBlitz3.ab3@6362>   LEA ptr_parameterstore,a1
00024504 <AmiBlitz3.ab3@6365>     MOVE.b (a0)+,(a1)+
00024508 <AmiBlitz3.ab3@6366>   BNE 'l1
0002450A <AmiBlitz3.ab3@6367>   MOVEQ #13,d2
00024510 <AmiBlitz3.ab3@6368>   JSR findlabel2
00024514 <AmiBlitz3.ab3@6369>   BNE 'd
00024518 <AmiBlitz3.ab3@6370>   TST.l 8(a2)
0002451C <AmiBlitz3.ab3@6371>   BEQ 'd2
00024546 <AmiBlitz3.ab3@6372>   !basic
000245A8 <AmiBlitz3.ab3@6373>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000245C6 <AmiBlitz3.ab3@6374>   !asm
000245CA <AmiBlitz3.ab3@6375>   MOVEM.l (a7)+,d2-d7/a0-a6
000245CE <AmiBlitz3.ab3@6376>   MOVEA.l _dosbase(PC),A6
000245D0 <AmiBlitz3.ab3@6377>   MOVE.l d7,d1
000245D4 <AmiBlitz3.ab3@6378>   JSR _Close(a6)
000245D8 <AmiBlitz3.ab3@6379>  BRA 'err
000245DC <AmiBlitz3.ab3@6383>   MOVEM.l (a7)+,d2-d7/a0-a6
000245E0 <AmiBlitz3.ab3@6385>   BSR.w call_setpointerbusy
000245E4 <AmiBlitz3.ab3@6387>   BSR.w killoffs
000245E6 <AmiBlitz3.ab3@6389>   MOVE.l D7,D1
000245EC <AmiBlitz3.ab3@6390>   MOVE.l #tsthead,D2        ;header                               ;header
000245EE <AmiBlitz3.ab3@6391>   MOVEQ.l #$20,D3
000245F2 <AmiBlitz3.ab3@6392>   MOVEA.l _dosbase(PC),A6
000245F6 <AmiBlitz3.ab3@6393>   JSR _Write(A6)
000245F8 <AmiBlitz3.ab3@6395>   MOVEQ.l #$00,D6           ;offset from start of file!                               ;offset from start of file!
000245FC <AmiBlitz3.ab3@6396>   BSR.w restypes
00024600 <AmiBlitz3.ab3@6397>   BSR.w resmacs
00024604 <AmiBlitz3.ab3@6398>   BSR.w resconsts
00024606 <AmiBlitz3.ab3@6400>   MOVE.l D6,D3
00024608 <AmiBlitz3.ab3@6401>   ADDQ.l #3,D3
0002460E <AmiBlitz3.ab3@6402>   ANDI.l #$FFFFFFFC,D3      ;long word align                               ;long word align
00024610 <AmiBlitz3.ab3@6403>   MOVE.l D3,-(A7)
00024612 <AmiBlitz3.ab3@6404>   SUB.l D6,D3
00024616 <AmiBlitz3.ab3@6405>   BEQ.w 'noalign
0002461C <AmiBlitz3.ab3@6406>   MOVE.l #writelist,D2      ; was #hello,
0002461E <AmiBlitz3.ab3@6407>   MOVE.l D7,D1
00024624 <AmiBlitz3.ab3@6408>   MOVEA.l _dosbase,A6
00024628 <AmiBlitz3.ab3@6409>   JSR _Write(A6)
00024632 <AmiBlitz3.ab3@6412>    MOVE.l hunkoffsetcounter,tstsize3
00024636 <AmiBlitz3.ab3@6413>    BEQ.w 'skip2a
00024638 <AmiBlitz3.ab3@6414>   MOVE.l D7,D1
0002463E <AmiBlitz3.ab3@6415>   MOVE.l #tstend,D2
00024640 <AmiBlitz3.ab3@6416>   MOVEQ.l #$0C,D3
00024646 <AmiBlitz3.ab3@6417>   MOVEA.l _dosbase,A6
0002464A <AmiBlitz3.ab3@6418>    JSR _Write(A6)
00024650 <AmiBlitz3.ab3@6422>   MOVEA.l hunkoffsetbase,A2
00024654 <AmiBlitz3.ab3@6425>   CMPA.w #$0,A2
00024658 <AmiBlitz3.ab3@6426>    BEQ.w 'skip2
0002465C <AmiBlitz3.ab3@6427>   LEA $4(A2),A1
0002465E <AmiBlitz3.ab3@6428>   MOVE.l D7,D1
00024660 <AmiBlitz3.ab3@6429>   MOVE.l A1,D2
00024662 <AmiBlitz3.ab3@6430>   MOVEQ.l #$04,D3
00024668 <AmiBlitz3.ab3@6431>   MOVEA.l _dosbase,A6
0002466C <AmiBlitz3.ab3@6432>    JSR _Write(A6)
0002466E <AmiBlitz3.ab3@6433>   MOVEA.l (A2),A2
00024672 <AmiBlitz3.ab3@6434>  BRA.w 'oloop
00024674 <AmiBlitz3.ab3@6437>   MOVE.l D7,D1
0002467A <AmiBlitz3.ab3@6438>   MOVE.l #zero,D2
0002467C <AmiBlitz3.ab3@6439>   MOVEQ.l #$04,D3
00024682 <AmiBlitz3.ab3@6440>   MOVEA.l _dosbase,A6
00024686 <AmiBlitz3.ab3@6441>   JSR _Write(A6)
00024688 <AmiBlitz3.ab3@6444>   MOVE.l D7,D1
0002468E <AmiBlitz3.ab3@6445>   MOVE.l #tstdone,D2
00024690 <AmiBlitz3.ab3@6446>   MOVEQ.l #$04,D3
00024696 <AmiBlitz3.ab3@6447>   MOVEA.l _dosbase,A6
0002469A <AmiBlitz3.ab3@6448>    JSR _Write(A6)
0002469C <AmiBlitz3.ab3@6449>   MOVE.l (A7)+,D0
0002469E <AmiBlitz3.ab3@6450>   LSR.l #2,D0
000246A4 <AmiBlitz3.ab3@6451>   MOVE.l D0,temp1
000246A6 <AmiBlitz3.ab3@6453>   MOVE.l D7,D1
000246A8 <AmiBlitz3.ab3@6454>   MOVEQ.l #$14,D2
000246AA <AmiBlitz3.ab3@6455>   MOVEQ.l #-$01,D3
000246AE <AmiBlitz3.ab3@6456>   JSR _Seek(A6)
000246B0 <AmiBlitz3.ab3@6457>   MOVE.l D7,D1
000246B6 <AmiBlitz3.ab3@6458>   MOVE.l #temp1,D2
000246B8 <AmiBlitz3.ab3@6459>   MOVEQ.l #$04,D3
000246BC <AmiBlitz3.ab3@6460>    JSR _Write(A6)
000246BE <AmiBlitz3.ab3@6461>   MOVE.l D7,D1
000246C0 <AmiBlitz3.ab3@6462>   MOVEQ.l #$1C,D2
000246C2 <AmiBlitz3.ab3@6463>   MOVEQ.l #-$01,D3
000246C6 <AmiBlitz3.ab3@6464>    JSR _Seek(A6)
000246C8 <AmiBlitz3.ab3@6465>   MOVE.l D7,D1
000246CE <AmiBlitz3.ab3@6466>   MOVE.l #temp1,D2
000246D0 <AmiBlitz3.ab3@6467>   MOVEQ.l #$04,D3
000246D4 <AmiBlitz3.ab3@6468>    JSR _Write(A6)
000246D6 <AmiBlitz3.ab3@6470>   MOVE.l D7,D1
000246DA <AmiBlitz3.ab3@6471>    JSR _Close(A6)
000246DE <AmiBlitz3.ab3@6472> BRA.w call_setpointernormal
000246E0 <AmiBlitz3.ab3@6478>   ADDQ.w #5,D1
000246E2 <AmiBlitz3.ab3@6479>   ADDQ.b #8,D0
000246E6 <AmiBlitz3.ab3@6483>     CMPA.w #$0,A2
000246EA <AmiBlitz3.ab3@6484>     BEQ.w 'done
000246EE <AmiBlitz3.ab3@6485>      BSR.w writeitem
000246F0 <AmiBlitz3.ab3@6486>     MOVEA.l (A2),A2
000246F4 <AmiBlitz3.ab3@6487>  BRA.w 'loop
000246F6 <AmiBlitz3.ab3@6490> RTS
000246F8 <AmiBlitz3.ab3@6494>   MOVEQ.l #$00,D3
000246FC <AmiBlitz3.ab3@6495>   MOVE.b $0(A2,D5.W),D3
000246FE <AmiBlitz3.ab3@6496>   ADDQ.w #1,D3
00024702 <AmiBlitz3.ab3@6497>   BCLR #$0,D3                                              ;word align
00024704 <AmiBlitz3.ab3@6498>   MOVE.l (A2),-(A7)
00024708 <AmiBlitz3.ab3@6499>    BEQ.w 'skip
0002470C <AmiBlitz3.ab3@6500>    BSR.w 'resoff
0002470E <AmiBlitz3.ab3@6501>   ADD.l D3,D6
00024710 <AmiBlitz3.ab3@6502>   MOVE.l D6,(A2)
00024712 <AmiBlitz3.ab3@6503>   SUB.l D3,D6
00024714 <AmiBlitz3.ab3@6506>    ADD.l D3,D6
00024716 <AmiBlitz3.ab3@6507>   MOVE.l A2,D2
00024718 <AmiBlitz3.ab3@6508>   MOVE.l D7,D1
0002471E <AmiBlitz3.ab3@6509>   MOVEA.l _dosbase,A6
00024722 <AmiBlitz3.ab3@6510>    JSR _Write(A6)
00024724 <AmiBlitz3.ab3@6511>   MOVE.l (A7)+,(A2)
00024726 <AmiBlitz3.ab3@6512>  RTS
00024728 <AmiBlitz3.ab3@6515>   MOVE.l D6,D2
0002472C <AmiBlitz3.ab3@6516> BRA.w addhunkoffset
00024730 <AmiBlitz3.ab3@6523>     CMPA.w #$0,A2
00024734 <AmiBlitz3.ab3@6524>      BEQ.w 'done
0002473A <AmiBlitz3.ab3@6525>     MOVEA.l newtypebase,A1
0002473C <AmiBlitz3.ab3@6526>     MOVEQ.l #$00,D1
00024740 <AmiBlitz3.ab3@6529>       CMPA.w #$0,A1
00024744 <AmiBlitz3.ab3@6530>       BEQ.w 'found
00024748 <AmiBlitz3.ab3@6531>       CMPA.l $A(A2),A1
0002474C <AmiBlitz3.ab3@6532>        BEQ.w 'found
0002474E <AmiBlitz3.ab3@6533>       ADDQ.w #1,D1
00024750 <AmiBlitz3.ab3@6534>       MOVEA.l (A1),A1
00024754 <AmiBlitz3.ab3@6535>  BRA.w 'loop2
00024758 <AmiBlitz3.ab3@6538>     MOVE.w $A(A2),-(A7)
0002475C <AmiBlitz3.ab3@6539>     MOVE.w D1,$A(A2)
00024760 <AmiBlitz3.ab3@6540>      BSR.w writeitem
00024764 <AmiBlitz3.ab3@6541>     MOVE.w (A7)+,$A(A2)
00024766 <AmiBlitz3.ab3@6542>     MOVEA.l (A2),A2
0002476A <AmiBlitz3.ab3@6543>  BRA.w 'loop
0002476C <AmiBlitz3.ab3@6546> RTS
0002476E <AmiBlitz3.ab3@6550>   MOVEQ.l #$00,D0
00024772 <AmiBlitz3.ab3@6553>   CMPA.w #$0,A2
00024776 <AmiBlitz3.ab3@6554>    BEQ.w 'done
00024778 <AmiBlitz3.ab3@6555>   ADDQ.w #1,D0
0002477A <AmiBlitz3.ab3@6556>   MOVEA.l (A2),A2
0002477E <AmiBlitz3.ab3@6557>  BRA.w 'loop
00024784 <AmiBlitz3.ab3@6560>   MOVE.w D0,temp1
00024786 <AmiBlitz3.ab3@6561>   MOVE.l D7,D1
0002478C <AmiBlitz3.ab3@6562>   MOVE.l #temp1,D2
0002478E <AmiBlitz3.ab3@6563>   MOVEQ.l #$02,D3
00024790 <AmiBlitz3.ab3@6564>   ADDQ.l #2,D6
00024796 <AmiBlitz3.ab3@6565>   MOVEA.l _dosbase,A6
0002479A <AmiBlitz3.ab3@6566> JMP _Write(A6)
000247A0 <AmiBlitz3.ab3@6573>    TST.b resdisable
000247A4 <AmiBlitz3.ab3@6574>    BEQ 'l1
000247AA <AmiBlitz3.ab3@6575>    MOVE.l currentmacroaddr,a3
000247B0 <AmiBlitz3.ab3@6576>    CMP.l #0,a3
000247B4 <AmiBlitz3.ab3@6577>    BEQ 'l1
000247B6 <AmiBlitz3.ab3@6578>    MOVE.l (a3),a3
000247BA <AmiBlitz3.ab3@6579>  BRA 'l2
000247C0 <AmiBlitz3.ab3@6583>   MOVEA.l macrobase,A3                                     ;??begin org code??
000247C2 <AmiBlitz3.ab3@6586>   MOVEA.l A3,A2
000247C6 <AmiBlitz3.ab3@6587>   BSR.w countem
000247CA <AmiBlitz3.ab3@6590>    CMPA.w #$0,A3
000247CE <AmiBlitz3.ab3@6591>    BEQ.w 'done
000247D0 <AmiBlitz3.ab3@6592>   MOVE.l D6,D5
000247D2 <AmiBlitz3.ab3@6593>   MOVE.l (A3),-(A7)
000247D6 <AmiBlitz3.ab3@6594>   MOVE.l $4(A3),-(A7)
000247D8 <AmiBlitz3.ab3@6595>   MOVEQ.l #$00,D3
000247DC <AmiBlitz3.ab3@6596>   MOVE.b $C(A3),D3
000247DE <AmiBlitz3.ab3@6597>   ADDQ.w #1,D3
000247E2 <AmiBlitz3.ab3@6598>   BCLR #$0,D3
000247E4 <AmiBlitz3.ab3@6599>   ADD.l D3,D6                                              ;add len of struct
000247E8 <AmiBlitz3.ab3@6600>   TST.w $8(A3)
000247EC <AmiBlitz3.ab3@6601>    BEQ.w 'notext
000247F0 <AmiBlitz3.ab3@6602>   MOVE.l D6,$4(A3)
000247F2 <AmiBlitz3.ab3@6603>   MOVE.l D5,D2
000247F4 <AmiBlitz3.ab3@6604>   ADDQ.l #4,D2
000247F8 <AmiBlitz3.ab3@6605>    BSR.w addhunkoffset
000247FA <AmiBlitz3.ab3@6608>   MOVEQ.l #$00,D4
000247FE <AmiBlitz3.ab3@6609>   MOVE.w $8(A3),D4
00024800 <AmiBlitz3.ab3@6610>   ADDQ.w #1,D4
00024804 <AmiBlitz3.ab3@6611>   BCLR #$0,D4
00024806 <AmiBlitz3.ab3@6612>   ADD.l D4,D6
00024808 <AmiBlitz3.ab3@6613>   TST.l (A3)
0002480C <AmiBlitz3.ab3@6614>    BEQ.w 'nomore
0002480E <AmiBlitz3.ab3@6615>   MOVE.l D6,(A3)
00024810 <AmiBlitz3.ab3@6616>   MOVE.l D5,D2
00024814 <AmiBlitz3.ab3@6617>    BSR.w addhunkoffset
00024816 <AmiBlitz3.ab3@6620>   MOVE.l A3,D2
00024818 <AmiBlitz3.ab3@6621>   MOVE.l D7,D1
0002481E <AmiBlitz3.ab3@6622>    MOVEA.l _dosbase,A6
00024822 <AmiBlitz3.ab3@6623>    JSR _Write(a6)
00024824 <AmiBlitz3.ab3@6624>   TST.l D4
00024828 <AmiBlitz3.ab3@6625>    BEQ.w 'skip
0002482A <AmiBlitz3.ab3@6626>   MOVE.l (A7),D2
0002482C <AmiBlitz3.ab3@6627>   MOVE.l D4,D3
0002482E <AmiBlitz3.ab3@6628>   MOVE.l D7,D1
00024834 <AmiBlitz3.ab3@6629>     MOVEA.l _dosbase,A6
00024838 <AmiBlitz3.ab3@6630>    JSR _Write(A6)
0002483C <AmiBlitz3.ab3@6633>   MOVE.l (A7)+,$4(A3)
0002483E <AmiBlitz3.ab3@6634>   MOVE.l (A7)+,(A3)
00024840 <AmiBlitz3.ab3@6635>   MOVEA.l (A3),A3
00024844 <AmiBlitz3.ab3@6636>  BRA.w 'loop
00024846 <AmiBlitz3.ab3@6639> RTS
0002484C <AmiBlitz3.ab3@6644>   TST.b resdisable
00024850 <AmiBlitz3.ab3@6645>   BEQ 'l1
00024856 <AmiBlitz3.ab3@6646>   MOVE.l lastrestype,a3
0002485C <AmiBlitz3.ab3@6647>   CMP.l #0,a3
00024860 <AmiBlitz3.ab3@6648>   BEQ 'l1
00024862 <AmiBlitz3.ab3@6649>   MOVE.l (a3),a3
00024866 <AmiBlitz3.ab3@6650>  BRA 'l2
0002486C <AmiBlitz3.ab3@6654>   MOVEA.l newtype_string,A3
0002486E <AmiBlitz3.ab3@6657>   MOVEA.l A3,A2
00024872 <AmiBlitz3.ab3@6658>    BSR.w countem
00024876 <AmiBlitz3.ab3@6661>    CMPA.w #$0,A3
0002487A <AmiBlitz3.ab3@6662>    BEQ.w 'done
0002487C <AmiBlitz3.ab3@6663>   MOVE.l D6,-(A7)
00024880 <AmiBlitz3.ab3@6664>   MOVEA.l $4(A3),A2
00024882 <AmiBlitz3.ab3@6665>   MOVEQ.l #$0E,D5
00024886 <AmiBlitz3.ab3@6666>    BSR.w writeoffs
00024888 <AmiBlitz3.ab3@6668>   MOVE.l (A7)+,D0
0002488C <AmiBlitz3.ab3@6669>   MOVE.l $4(A3),-(A7)
00024890 <AmiBlitz3.ab3@6670>   MOVE.l D0,$4(A3)
00024892 <AmiBlitz3.ab3@6671>   MOVE.l D6,D2
00024894 <AmiBlitz3.ab3@6672>   ADDQ.l #4,D2
00024898 <AmiBlitz3.ab3@6673>    BSR.w addhunkoffset
0002489A <AmiBlitz3.ab3@6674>   MOVEQ.l #$00,D3
0002489E <AmiBlitz3.ab3@6675>   MOVE.b $A(A3),D3
000248A0 <AmiBlitz3.ab3@6676>   ADDQ.w #1,D3
000248A4 <AmiBlitz3.ab3@6677>   BCLR #$0,D3
000248A6 <AmiBlitz3.ab3@6678>   ADD.l D3,D6
000248A8 <AmiBlitz3.ab3@6679>   MOVE.l A3,D2
000248AA <AmiBlitz3.ab3@6680>   MOVE.l D7,D1
000248B0 <AmiBlitz3.ab3@6681>     MOVEA.l _dosbase,A6
000248B4 <AmiBlitz3.ab3@6682>     JSR _Write(A6)
000248B8 <AmiBlitz3.ab3@6683>   MOVE.l (A7)+,$4(A3)
000248BA <AmiBlitz3.ab3@6684>   MOVEA.l (A3),A3
000248BE <AmiBlitz3.ab3@6685>  BRA.w 'loop
000248C0 <AmiBlitz3.ab3@6688> RTS
000248C6 <AmiBlitz3.ab3@6693>    TST.b resdisable
000248CA <AmiBlitz3.ab3@6694>    BEQ 'l1
000248D0 <AmiBlitz3.ab3@6695>    MOVE.l currentlabeladdr,a2
000248D6 <AmiBlitz3.ab3@6696>    CMP.l #0,a2
000248DA <AmiBlitz3.ab3@6697>    BEQ 'l1
000248DC <AmiBlitz3.ab3@6698>    MOVE.l (a2),a2
000248E0 <AmiBlitz3.ab3@6699>  BRA 'l2
000248E6 <AmiBlitz3.ab3@6703>    MOVEA.l labelbase,A2
000248E8 <AmiBlitz3.ab3@6706>    MOVEQ.l #$00,D0
000248EC <AmiBlitz3.ab3@6709>    CMPA.w #$0,A2
000248F0 <AmiBlitz3.ab3@6710>    BEQ.w 'done
000248F8 <AmiBlitz3.ab3@6711>   CMPI.l #$1,$4(A2)
000248FC <AmiBlitz3.ab3@6712>    BNE.w 'next
000248FE <AmiBlitz3.ab3@6713>   ADDQ.w #1,D0
00024900 <AmiBlitz3.ab3@6716>   MOVEA.l (A2),A2
00024904 <AmiBlitz3.ab3@6717>  BRA.w 'loop
0002490A <AmiBlitz3.ab3@6720>   MOVE.w D0,temp1
0002490C <AmiBlitz3.ab3@6721>   MOVE.l D7,D1
00024912 <AmiBlitz3.ab3@6722>   MOVE.l #temp1,D2
00024914 <AmiBlitz3.ab3@6723>   MOVEQ.l #$02,D3
00024916 <AmiBlitz3.ab3@6724>   ADDQ.l #2,D6
0002491C <AmiBlitz3.ab3@6725>     MOVEA.l _dosbase,A6
00024920 <AmiBlitz3.ab3@6726>     JSR _Write(A6)
00024926 <AmiBlitz3.ab3@6728>    TST.b resdisable
0002492A <AmiBlitz3.ab3@6729>    BEQ 'done_l1
00024930 <AmiBlitz3.ab3@6730>    MOVE.l currentlabeladdr,a2
00024936 <AmiBlitz3.ab3@6731>    CMP.l #0,a2
0002493A <AmiBlitz3.ab3@6732>    BEQ 'done_l1
0002493C <AmiBlitz3.ab3@6733>    MOVE.l (a2),a2
00024940 <AmiBlitz3.ab3@6734>  BRA 'loop2
00024946 <AmiBlitz3.ab3@6738>    MOVEA.l labelbase,A2                                    ;write resident labels
0002494A <AmiBlitz3.ab3@6741>    CMPA.w #$0,A2
0002494E <AmiBlitz3.ab3@6742>    BEQ.w 'done2
00024956 <AmiBlitz3.ab3@6743>   CMPI.l #$1,$4(A2)
0002495A <AmiBlitz3.ab3@6744>    BNE.w 'next2
0002495C <AmiBlitz3.ab3@6745>    MOVEQ.l #$00,D3
00024960 <AmiBlitz3.ab3@6746>   MOVE.b $12(A2),D3                                        ;length
00024962 <AmiBlitz3.ab3@6747>   ADDQ.w #1,D3
00024966 <AmiBlitz3.ab3@6748>   BCLR #$0,D3
00024968 <AmiBlitz3.ab3@6749>   MOVE.l D6,D2
0002496A <AmiBlitz3.ab3@6750>   ADD.l D3,D6
0002496C <AmiBlitz3.ab3@6751>   MOVE.l (A2),-(A7)
0002496E <AmiBlitz3.ab3@6752>   TST.l (A2)
00024972 <AmiBlitz3.ab3@6753>    BEQ.w 'nonext
00024974 <AmiBlitz3.ab3@6754>   MOVE.l D6,(A2)
00024978 <AmiBlitz3.ab3@6755>    BSR.w addhunkoffset
0002497A <AmiBlitz3.ab3@6758>   MOVE.l A2,D2
0002497C <AmiBlitz3.ab3@6759>   MOVE.l D7,D1
00024982 <AmiBlitz3.ab3@6760>     MOVEA.l _dosbase,A6
00024986 <AmiBlitz3.ab3@6761>     JSR _Write(A6)
00024988 <AmiBlitz3.ab3@6762>   MOVE.l (A7)+,(A2)
0002498A <AmiBlitz3.ab3@6765>   MOVEA.l (A2),A2
0002498E <AmiBlitz3.ab3@6766>  BRA.w 'loop2
00024990 <AmiBlitz3.ab3@6769> RTS
000249BA <AmiBlitz3.ab3@6774>    !basic
000249C0 <AmiBlitz3.ab3@6775>     MOVE.l ptr_resfile,d0
000249D0 <AmiBlitz3.ab3@6776>     resfileP.l = Peek.l(?ptr_resfile)
000249DA <AmiBlitz3.ab3@6777>     If resfileP
00024A02 <AmiBlitz3.ab3@6778>       resfile$ = Peek.s(resfileP)
00024A4E <AmiBlitz3.ab3@6779>       tests.b = Instr(resfile$,"/")
00024A9A <AmiBlitz3.ab3@6780>       testc.b = Instr(resfile$,":")
00024ABC <AmiBlitz3.ab3@6781>       If tests=0 AND testc=0
00024B3C <AmiBlitz3.ab3@6782>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024B4E <AmiBlitz3.ab3@6783>         Poke.l ?ptr_resfile,&resfile$
00024B54 <AmiBlitz3.ab3@6785>     Else
00024B8E <AmiBlitz3.ab3@6786>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00024BAC <AmiBlitz3.ab3@6788>    !asm
00024BAE <AmiBlitz3.ab3@6789> RTS
00024BB4 <AmiBlitz3.ab3@6796> 
00024BBA <AmiBlitz3.ab3@6797>   MOVE.l A7,errstack
00024BC4 <AmiBlitz3.ab3@6801>   MOVE.l #'next,errcont
00024BCC <AmiBlitz3.ab3@6802>   MOVE.w #$FFFF,ezerr         ; was -1
00024BD0 <AmiBlitz3.ab3@6804>   BSR.w Aclearallvars
00024BD4 <AmiBlitz3.ab3@6805>   BSR.w free_residents
00024BDA <AmiBlitz3.ab3@6807>   LEA residents_table,A5
00024BDC <AmiBlitz3.ab3@6808>   MOVEQ.l #$07,D6
00024BDE <AmiBlitz3.ab3@6811>     TST.b (A5)
00024BE2 <AmiBlitz3.ab3@6812>     BEQ.w 'next
00024BE8 <AmiBlitz3.ab3@6813>     MOVE.l A5,ptr_resfile
00024BEC <AmiBlitz3.ab3@6814>     BSR check_residentpath
00024BF2 <AmiBlitz3.ab3@6815>     MOVE.l ptr_resfile,d1
00024BF8 <AmiBlitz3.ab3@6816>     MOVEA.l _dosbase,A6
00024BFC <AmiBlitz3.ab3@6817>     JSR _LoadSeg(A6)
00024C00 <AmiBlitz3.ab3@6818>     MOVE.l D0,$40(A5)
00024C04 <AmiBlitz3.ab3@6819>     BNE.w 'yeah
00024C08 <AmiBlitz3.ab3@6821>     BSR.w reserr
00024C0A <AmiBlitz3.ab3@6825>     MOVEA.l D0,A3
00024C0C <AmiBlitz3.ab3@6826>     ADDA.l A3,A3
00024C0E <AmiBlitz3.ab3@6827>     ADDA.l A3,A3
00024C10 <AmiBlitz3.ab3@6828>     ADDQ.w #4,A3                                           ;start of res
00024C14 <AmiBlitz3.ab3@6830>     BSR.w fixtypes
00024C18 <AmiBlitz3.ab3@6831>     BSR.w fixmacs                                        ;add macros to list
00024C1C <AmiBlitz3.ab3@6832>     BSR.w fixconsts                                        ;read labels
00024C20 <AmiBlitz3.ab3@6835>     LEA ResidentEntryStep(A5),A5       ;$44
00024C24 <AmiBlitz3.ab3@6836>   DBF D6,'loop
00024C2E <AmiBlitz3.ab3@6841>   MOVE.l #free_residents,errcont
00024C34 <AmiBlitz3.ab3@6843>   MOVEA.l newtype_string,A3
00024C36 <AmiBlitz3.ab3@6844>   MOVEQ.l #$0B,D7
00024C3A <AmiBlitz3.ab3@6845>   BSR.w checkclash
00024C40 <AmiBlitz3.ab3@6847>   MOVEA.l macrobase,A3
00024C42 <AmiBlitz3.ab3@6848>   MOVEQ.l #$d,D7
00024C46 <AmiBlitz3.ab3@6849>   BSR.w checkclash
00024C4C <AmiBlitz3.ab3@6851>   MOVEA.l firstconst,A3
00024C4E <AmiBlitz3.ab3@6852>   MOVEQ.l #$19,D7
00024C52 <AmiBlitz3.ab3@6853>   BSR.w checkclash
00024C54 <AmiBlitz3.ab3@6856> RTS
00024C56 <AmiBlitz3.ab3@6860>   MOVEA.l A3,A4
00024C5A <AmiBlitz3.ab3@6863>     CMPA.w #$0,A4
00024C5E <AmiBlitz3.ab3@6864>     BEQ.w 'done
00024C64 <AmiBlitz3.ab3@6866>     LEA ptr_parameterstore,A0
00024C68 <AmiBlitz3.ab3@6867>     LEA $0(A4,D7.W),A1
00024C6A <AmiBlitz3.ab3@6868>     MOVEQ.l #-$01,D2
00024C6C <AmiBlitz3.ab3@6871>       ADDQ.w #1,D2
00024C6E <AmiBlitz3.ab3@6872>       MOVE.b (A1)+,(A0)+
00024C72 <AmiBlitz3.ab3@6873>     BNE.w 'loop2
00024C74 <AmiBlitz3.ab3@6874>     MOVEA.l A3,A2
00024C78 <AmiBlitz3.ab3@6877>     BSR.w findlab
00024C7C <AmiBlitz3.ab3@6878>     BNE.w 'next                                  ;not found
00024C7E <AmiBlitz3.ab3@6879>     CMPA.l A2,A4
00024C82 <AmiBlitz3.ab3@6881>     BEQ.w 'l1
00024C84 <AmiBlitz3.ab3@6882>     MOVE.l a1,a5
00024C88 <AmiBlitz3.ab3@6884>  BRA clasherr      ; was bne
00024C8C <AmiBlitz3.ab3@6887>  BRA.w 'more
00024C8E <AmiBlitz3.ab3@6890>     MOVEA.l (A4),A4
00024C92 <AmiBlitz3.ab3@6891>  BRA.w 'loop
00024C94 <AmiBlitz3.ab3@6894> RTS
00024C9A <AmiBlitz3.ab3@6898>   MOVEA.l _dosbase,A6
00024CA0 <AmiBlitz3.ab3@6900>   LEA newtype_string,A0
00024CA6 <AmiBlitz3.ab3@6901>   MOVE.l A0,lastrestype
00024CA8 <AmiBlitz3.ab3@6902>   CLR.l (A0)
00024CAE <AmiBlitz3.ab3@6904>   LEA macrobase,A0
00024CB4 <AmiBlitz3.ab3@6905>   MOVE.l A0,currentmacroaddr
00024CB6 <AmiBlitz3.ab3@6906>   CLR.l (A0)
00024CBC <AmiBlitz3.ab3@6908>   LEA labelbase,A0
00024CC2 <AmiBlitz3.ab3@6909>   MOVE.l A0,currentlabeladdr
00024CC4 <AmiBlitz3.ab3@6910>   CLR.l (A0)
00024CCA <AmiBlitz3.ab3@6911>   CLR.w rescnt
00024D02 <AmiBlitz3.ab3@6915>   !ComData_SetB{comByte_DebugMode,debugmode}
00024D08 <AmiBlitz3.ab3@6918>   LEA residents_table,A2
00024D0A <AmiBlitz3.ab3@6919>   MOVEQ.l #$07,D2
00024D0E <AmiBlitz3.ab3@6922>      MOVE.l $40(A2),D1
00024D12 <AmiBlitz3.ab3@6923>      BEQ.w 'next
00024D16 <AmiBlitz3.ab3@6924>       CLR.l $40(A2)
00024D1C <AmiBlitz3.ab3@6925>       MOVEA.l _dosbase,A6
00024D20 <AmiBlitz3.ab3@6926>       JSR _UnLoadSeg(A6)
00024D24 <AmiBlitz3.ab3@6929>      LEA ResidentEntryStep(A2),A2   ; $44
00024D28 <AmiBlitz3.ab3@6930>  DBF D2,'loop
00024D2A <AmiBlitz3.ab3@6932> RTS
00024D2C <AmiBlitz3.ab3@6936>   MOVE.w (A3)+,D1
00024D30 <AmiBlitz3.ab3@6937>   BEQ.w 'done
00024D36 <AmiBlitz3.ab3@6938>   MOVEA.l currentlabeladdr,A2
00024D38 <AmiBlitz3.ab3@6939>   MOVE.l A3,(A2)
00024D3A <AmiBlitz3.ab3@6940>   SUBQ.w #1,D1
00024D3C <AmiBlitz3.ab3@6943>     MOVEA.l A3,A2
00024D3E <AmiBlitz3.ab3@6944>     MOVEA.l (A3),A3
00024D42 <AmiBlitz3.ab3@6945>   DBF D1,'loop
00024D44 <AmiBlitz3.ab3@6948>   CLR.l (a2)                                               ;bugfix for object
00024D4A <AmiBlitz3.ab3@6950>   MOVE.l A2,currentlabeladdr
00024D4C <AmiBlitz3.ab3@6951>   MOVEA.l A2,A3
00024D4E <AmiBlitz3.ab3@6952>   MOVEQ.l #$00,D0
00024D52 <AmiBlitz3.ab3@6953>   MOVE.b $12(A3),D0
00024D54 <AmiBlitz3.ab3@6954>   ADDQ.w #1,D0
00024D58 <AmiBlitz3.ab3@6955>   BCLR #$0,D0
00024D5A <AmiBlitz3.ab3@6956>   ADDA.w D0,A3
00024D5C <AmiBlitz3.ab3@6959> RTS
00024D5E <AmiBlitz3.ab3@6963>   MOVE.w (A3)+,D1
00024D62 <AmiBlitz3.ab3@6964>   BEQ.w 'done
00024D68 <AmiBlitz3.ab3@6965>   MOVEA.l currentmacroaddr,A2
00024D6A <AmiBlitz3.ab3@6966>   MOVE.l A3,(A2)
00024D6C <AmiBlitz3.ab3@6967>   SUBQ.w #1,D1
00024D6E <AmiBlitz3.ab3@6970>     MOVEA.l A3,A2
00024D70 <AmiBlitz3.ab3@6971>     MOVEA.l (A3),A3
00024D74 <AmiBlitz3.ab3@6972>   DBF D1,'loop
00024D7A <AmiBlitz3.ab3@6974>   MOVE.l A2,currentmacroaddr
00024D7C <AmiBlitz3.ab3@6975>   MOVEA.l A2,A3
00024D7E <AmiBlitz3.ab3@6976>   MOVEQ.l #$00,D0
00024D82 <AmiBlitz3.ab3@6977>   MOVE.b $C(A3),D0
00024D84 <AmiBlitz3.ab3@6978>   ADDQ.w #1,D0
00024D88 <AmiBlitz3.ab3@6979>   BCLR #$0,D0
00024D8C <AmiBlitz3.ab3@6980>   MOVE.w $8(A3),D1
00024D8E <AmiBlitz3.ab3@6981>   ADDQ.w #1,D1
00024D92 <AmiBlitz3.ab3@6982>   BCLR #$0,D1
00024D94 <AmiBlitz3.ab3@6983>   ADDA.w D0,A3
00024D96 <AmiBlitz3.ab3@6984>   ADDA.w D1,A3
00024D98 <AmiBlitz3.ab3@6987> RTS
00024D9A <AmiBlitz3.ab3@6992>   MOVE.w (A3)+,D1            ;number of types to do
00024D9E <AmiBlitz3.ab3@6993>   BEQ.w 'done
00024DA0 <AmiBlitz3.ab3@6994>   MOVE.w D1,-(A7)
00024DA2 <AmiBlitz3.ab3@6995>   SUBQ.w #1,D1
00024DA8 <AmiBlitz3.ab3@6996>   MOVEA.l lastrestype,A2
00024DAA <AmiBlitz3.ab3@6997>   MOVE.l A2,-(A7)
00024DAC <AmiBlitz3.ab3@7000>       MOVE.l (A3),D0          ;skip through offsets
00024DB0 <AmiBlitz3.ab3@7001>       BEQ.w 'loopme
00024DB2 <AmiBlitz3.ab3@7002>       MOVEA.l D0,A3
00024DB6 <AmiBlitz3.ab3@7003>  BRA.w 'loop
00024DBA <AmiBlitz3.ab3@7006>       MOVE.b $E(A3),D0
00024DBC <AmiBlitz3.ab3@7007>       ADDQ.w #1,D0
00024DC0 <AmiBlitz3.ab3@7008>       BCLR #$0,D0
00024DC2 <AmiBlitz3.ab3@7009>       ADDA.w D0,A3            ;a3=type
00024DC4 <AmiBlitz3.ab3@7010>       MOVE.l A3,(A2)          ;link
00024DC6 <AmiBlitz3.ab3@7011>       MOVEA.l A3,A2
00024DC8 <AmiBlitz3.ab3@7012>       MOVEQ.l #$00,D0
00024DCC <AmiBlitz3.ab3@7013>       MOVE.b $A(A3),D0
00024DCE <AmiBlitz3.ab3@7014>       ADDQ.w #1,D0
00024DD2 <AmiBlitz3.ab3@7015>       BCLR #$0,D0
00024DD4 <AmiBlitz3.ab3@7016>       ADDA.w D0,A3            ;next offset
00024DD8 <AmiBlitz3.ab3@7017>   DBF D1,'loop
00024DDA <AmiBlitz3.ab3@7021>   MOVEA.l (A7)+,A0
00024DDC <AmiBlitz3.ab3@7022>   MOVEA.l (A0),A0
00024DE0 <AmiBlitz3.ab3@7025>     CMPA.w #$0,A0
00024DE4 <AmiBlitz3.ab3@7026>     BEQ.w 'fdone
00024DE8 <AmiBlitz3.ab3@7027>     MOVEA.l $4(A0),A1          ;first offset!
00024DEC <AmiBlitz3.ab3@7030>     CMPA.w #$0,A1
00024DF0 <AmiBlitz3.ab3@7031>     BEQ.w 'fofd
00024DF4 <AmiBlitz3.ab3@7033>     MOVE.w $A(A1),D0           ;number of type
00024DFA <AmiBlitz3.ab3@7034>     MOVEA.l newtypebase,A4
00024DFE <AmiBlitz3.ab3@7035>     CMP.w #$7,D0
00024E02 <AmiBlitz3.ab3@7036>     BCS.w 'fsys
00024E08 <AmiBlitz3.ab3@7037>     SUB.w rescnt,D0
00024E0A <AmiBlitz3.ab3@7040>     SUBQ.w #1,D0
00024E0E <AmiBlitz3.ab3@7041>     BMI.w 'fdone2
00024E10 <AmiBlitz3.ab3@7044>        MOVEA.l (A4),A4
00024E14 <AmiBlitz3.ab3@7045>   DBF D0,'floop3
00024E18 <AmiBlitz3.ab3@7048>     MOVE.l A4,$A(A1)
00024E1A <AmiBlitz3.ab3@7049>     MOVEA.l (A1),A1
00024E1E <AmiBlitz3.ab3@7050>  BRA.w 'floop2
00024E20 <AmiBlitz3.ab3@7053>     MOVEA.l (A0),A0
00024E24 <AmiBlitz3.ab3@7054>  BRA.w 'floop
00024E26 <AmiBlitz3.ab3@7057>   MOVE.w (A7)+,D0
00024E2C <AmiBlitz3.ab3@7058>   ADD.w D0,rescnt
00024E32 <AmiBlitz3.ab3@7059>   MOVE.l A2,lastrestype
00024E34 <AmiBlitz3.ab3@7062> RTS
00024E3A <AmiBlitz3.ab3@7069>   LEA tokens,A0
00024E3E <AmiBlitz3.ab3@7070>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024E40 <AmiBlitz3.ab3@7073>     MOVEA.l (A0),A0
00024E44 <AmiBlitz3.ab3@7074>   DBF D0,'loop
00024E4A <AmiBlitz3.ab3@7076>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024E4E <AmiBlitz3.ab3@7077>   MOVE.w #$0076,D0        ; was #tnum-fnum-1,                                 ; $0076 : 118 dec
00024E52 <AmiBlitz3.ab3@7080>       LEA $6(A0),A2
00024E54 <AmiBlitz3.ab3@7083>         TST.b (A2)+
00024E58 <AmiBlitz3.ab3@7084>       BNE.w 'loop3
00024E5A <AmiBlitz3.ab3@7087>         TST.b (A2)+
00024E5E <AmiBlitz3.ab3@7088>       BNE.w 'loop4
00024E60 <AmiBlitz3.ab3@7090>       ADDQ.w #1,A2
00024E62 <AmiBlitz3.ab3@7091>       EXG.l D1,A2
00024E66 <AmiBlitz3.ab3@7092>       BCLR #$0,D1
00024E68 <AmiBlitz3.ab3@7093>       EXG.l D1,A2
00024E6A <AmiBlitz3.ab3@7094>       MOVE.l A2,(A1)+
00024E6C <AmiBlitz3.ab3@7095>       MOVEA.l (A0),A0
00024E70 <AmiBlitz3.ab3@7096>   DBF D0,'loop2
00024E72 <AmiBlitz3.ab3@7097> RTS
00024E76 <AmiBlitz3.ab3@7101>   BSR.w asmconst
00024E78 <AmiBlitz3.ab3@7102>   MOVEQ.l #$0B,D5
00024E7A <AmiBlitz3.ab3@7103> RTS
00024E7C <AmiBlitz3.ab3@7106> unmove:  Ds.w 1
00024E80 <AmiBlitz3.ab3@7110>   MOVE.w #$48E7,D1
00024E84 <AmiBlitz3.ab3@7111>   BSR.w writeword                                          ;movem.l -(a7)
00024E88 <AmiBlitz3.ab3@7112>   MOVE.w #$000F,D2
00024E8A <AmiBlitz3.ab3@7113>   SUB.w D4,D2
00024E8C <AmiBlitz3.ab3@7114>   MOVEQ.l #-$01,D1
00024E8E <AmiBlitz3.ab3@7115>   BCLR D2,D1
00024E92 <AmiBlitz3.ab3@7116>   BSR.w writeword
00024E94 <AmiBlitz3.ab3@7117>   MOVEQ.l #-$01,D1
00024E96 <AmiBlitz3.ab3@7118>   BCLR D4,D1
00024E9C <AmiBlitz3.ab3@7119>   MOVE.w D1,unmove
00024E9E <AmiBlitz3.ab3@7120> RTS
00024EA2 <AmiBlitz3.ab3@7124>   MOVE.w #$4CDF,D1
00024EA6 <AmiBlitz3.ab3@7125>   BSR.w writeword
00024EAA <AmiBlitz3.ab3@7126>   MOVE.w unmove(PC),D1
00024EAE <AmiBlitz3.ab3@7127>  BRA.w writeword
00024EB2 <AmiBlitz3.ab3@7140>   BSR.w get_reg2
00024EB6 <AmiBlitz3.ab3@7141>   CMP.w #$2C,D0                                            ;#','
00024EBA <AmiBlitz3.ab3@7142>    BNE.w syntaxerr
00024EC0 <AmiBlitz3.ab3@7143>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024EC4 <AmiBlitz3.ab3@7144>    BSR.w writelong
00024EC6 <AmiBlitz3.ab3@7145>   MOVE.w D4,D1
00024ECA <AmiBlitz3.ab3@7146>   ORI.w #$2F00,D1
00024ECE <AmiBlitz3.ab3@7147>    BSR.w writeword
00024ED2 <AmiBlitz3.ab3@7149>    BSR.w get1bytemain
00024ED6 <AmiBlitz3.ab3@7150>    BSR.w getparameter
00024EDA <AmiBlitz3.ab3@7151>    BSR.w fetchvars
00024EDE <AmiBlitz3.ab3@7152>    BSR.w calcvar
00024EE2 <AmiBlitz3.ab3@7153>    BTST #$E,D2
00024EE6 <AmiBlitz3.ab3@7154>    BEQ.w 'notp
00024EEA <AmiBlitz3.ab3@7157>    MOVE.b #$3,D2
00024EEE <AmiBlitz3.ab3@7158>  BRA.w 'pd
00024EF0 <AmiBlitz3.ab3@7161>   TST.b D2
00024EF4 <AmiBlitz3.ab3@7162>    BEQ.w 'issa
00024EF8 <AmiBlitz3.ab3@7163>   CMP.b #$7,D2
00024EFC <AmiBlitz3.ab3@7164>    BEQ.w 'issa
00024F00 <AmiBlitz3.ab3@7167>   BTST #$F,D2
00024F04 <AmiBlitz3.ab3@7168>    BNE.w 'nsimp
00024F08 <AmiBlitz3.ab3@7169>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024F0C <AmiBlitz3.ab3@7170>    BSR.w writeword
00024F0E <AmiBlitz3.ab3@7171>   MOVE.w D3,D1
00024F12 <AmiBlitz3.ab3@7172>    BSR.w writeword
00024F16 <AmiBlitz3.ab3@7175>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00024F1A <AmiBlitz3.ab3@7176>    BSR.w writeword
00024F1E <AmiBlitz3.ab3@7177>   MOVE.w #$1480,D1
00024F22 <AmiBlitz3.ab3@7178>   CMP.b #$1,D2
00024F26 <AmiBlitz3.ab3@7179>    BEQ.w 'pg
00024F2A <AmiBlitz3.ab3@7180>   EORI.w #$3000,D1
00024F2E <AmiBlitz3.ab3@7181>   CMP.b #$2,D2
00024F32 <AmiBlitz3.ab3@7182>    BNE.w 'pg
00024F36 <AmiBlitz3.ab3@7183>   ORI.w #$1000,D1
00024F3A <AmiBlitz3.ab3@7186>   BSR.w writeword
00024F40 <AmiBlitz3.ab3@7187>   MOVE.l #$4CDF7FFF,D1
00024F44 <AmiBlitz3.ab3@7188> BRA.w writelong
00024F48 <AmiBlitz3.ab3@7192>   BSR.w get_reg2
00024F4C <AmiBlitz3.ab3@7193>   CMP.w #$2C,D0     ;','
00024F50 <AmiBlitz3.ab3@7194>    BNE.w syntaxerr
00024F54 <AmiBlitz3.ab3@7195>    BSR.w regmovems
00024F56 <AmiBlitz3.ab3@7196>   MOVE.w D4,-(A7)
00024F58 <AmiBlitz3.ab3@7197>   MOVEQ.l #$03,D2   ;get a long
00024F5C <AmiBlitz3.ab3@7198>    BSR.w eval
00024F5E <AmiBlitz3.ab3@7199>   MOVE.w (A7)+,D1
00024F62 <AmiBlitz3.ab3@7200>    BEQ.w 'done
00024F66 <AmiBlitz3.ab3@7201>   CMP.w #$8,D1
00024F6A <AmiBlitz3.ab3@7202>    BCC.w 'addreg
00024F6C <AmiBlitz3.ab3@7203>   LSL.w #8,D1
00024F6E <AmiBlitz3.ab3@7204>   LSL.w #1,D1
00024F72 <AmiBlitz3.ab3@7205>   ORI.w #$2000,D1
00024F76 <AmiBlitz3.ab3@7206>    BSR.w writeword
00024F7A <AmiBlitz3.ab3@7207>  BRA.w 'done
00024F7C <AmiBlitz3.ab3@7210>   SUBQ.w #8,D1
00024F7E <AmiBlitz3.ab3@7211>   LSL.w #8,D1
00024F80 <AmiBlitz3.ab3@7212>   LSL.w #1,D1
00024F84 <AmiBlitz3.ab3@7213>   ORI.w #$2040,D1
00024F88 <AmiBlitz3.ab3@7214>   BSR.w writeword
00024F8C <AmiBlitz3.ab3@7217> BRA.w dounmove
00024F90 <AmiBlitz3.ab3@7222>   BSR.w get1bytemain
00024F94 <AmiBlitz3.ab3@7225>   ORI.w #$20,D0
00024F98 <AmiBlitz3.ab3@7226>   CMP.w #$64,D0       ;'d'
00024F9C <AmiBlitz3.ab3@7227>    BEQ.w getan3
00024FA0 <AmiBlitz3.ab3@7228>   CMP.w #$61,D0       ;'a'
00024FA4 <AmiBlitz3.ab3@7229>    BNE.w syntaxerr
00024FA8 <AmiBlitz3.ab3@7230>    BSR.w getan3
00024FAA <AmiBlitz3.ab3@7231>   ADDQ.w #8,D4
00024FAC <AmiBlitz3.ab3@7232> RTS
00024FD8 <AmiBlitz3.ab3@7237>   !fget                                                   ;bsr.w get1bytemain
00024FDC <AmiBlitz3.ab3@7239>   ORI.w #$20,D0
00024FE0 <AmiBlitz3.ab3@7242>   CMP.w #$61,D0     ;'a'
00024FE4 <AmiBlitz3.ab3@7243>   BNE.w syntaxerr
00025010 <AmiBlitz3.ab3@7247>   !fget                                                    ;bsr.w get1bytemain
00025014 <AmiBlitz3.ab3@7249>   SUBI.w #$30,D0
00025018 <AmiBlitz3.ab3@7250>    BMI.w syntaxerr
0002501C <AmiBlitz3.ab3@7251>   CMP.w #$7,D0
00025020 <AmiBlitz3.ab3@7252>    BHI.w syntaxerr
00025022 <AmiBlitz3.ab3@7253>   MOVE.w D0,D4
0002504E <AmiBlitz3.ab3@7255>   !fget
00025050 <AmiBlitz3.ab3@7257> RTS                                                        ;bra.w get1bytemain
00025052 <AmiBlitz3.ab3@7261>   ADDQ.w #8,D4
00025054 <AmiBlitz3.ab3@7264>   MOVEQ.l #$00,D5    ;bits for reg
00025058 <AmiBlitz3.ab3@7265>   SUBI.w #$30,D4
0002505C <AmiBlitz3.ab3@7268>   CMP.w #$2D,D0      ;'-'
00025060 <AmiBlitz3.ab3@7269>    BEQ.w 'range
00025064 <AmiBlitz3.ab3@7270>   CMP.w #$2F,D0      ;'/'
00025068 <AmiBlitz3.ab3@7271>    BEQ.w 'one
0002506C <AmiBlitz3.ab3@7272>  BRA.w syntaxerr
0002506E <AmiBlitz3.ab3@7275>   BSET D4,D5
00025070 <AmiBlitz3.ab3@7278>   MOVE.w D5,D4
00025072 <AmiBlitz3.ab3@7279>   MOVEQ.l #$0F,D5
00025074 <AmiBlitz3.ab3@7280>  RTS
00025076 <AmiBlitz3.ab3@7283>   BSET D4,D5
0002507A <AmiBlitz3.ab3@7284>   BSR.w get_reg
0002508C <AmiBlitz3.ab3@7286>   !compare3                                                ;bsr.w tstend2
00025090 <AmiBlitz3.ab3@7288>   BNE.w 'loop
00025094 <AmiBlitz3.ab3@7289>  BRA.w 'done2
00025096 <AmiBlitz3.ab3@7292>   MOVE.w D4,D1    ;from
0002509A <AmiBlitz3.ab3@7293>    BSR.w get_reg
0002509C <AmiBlitz3.ab3@7294>   CMP.w D4,D1
000250A0 <AmiBlitz3.ab3@7295>    BLS.w 'loop2
000250A2 <AmiBlitz3.ab3@7296>   EXG.l D4,D1
000250A4 <AmiBlitz3.ab3@7299>   BSET D1,D5
000250A6 <AmiBlitz3.ab3@7300>   ADDQ.w #1,D1
000250A8 <AmiBlitz3.ab3@7301>   CMP.w D4,D1
000250AC <AmiBlitz3.ab3@7302>    BLS.w 'loop2
000250BE <AmiBlitz3.ab3@7304>   !compare3                                                ;bsr.w tstend2
000250C2 <AmiBlitz3.ab3@7306>   BNE.w 'loop
000250C6 <AmiBlitz3.ab3@7307> BRA.w 'done
000250C8 <AmiBlitz3.ab3@7313>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
000250F4 <AmiBlitz3.ab3@7315>    !fget
000250F8 <AmiBlitz3.ab3@7317>   CMP.w #$23,D0       ;'#'
000250FC <AmiBlitz3.ab3@7318>    BEQ.w getimm
00025100 <AmiBlitz3.ab3@7319>   CMP.w #$28,D0       ;'('
00025104 <AmiBlitz3.ab3@7320>    BEQ.w 'ind
00025108 <AmiBlitz3.ab3@7321>   CMP.w #$2D,D0       ;'-'
0002510C <AmiBlitz3.ab3@7322>    BNE.w 'more
00025138 <AmiBlitz3.ab3@7324>    !fget                                                   ;bsr.w get1bytemain       -(
0002513C <AmiBlitz3.ab3@7326>   CMP.w #$28,D0       ;'('
00025140 <AmiBlitz3.ab3@7327>    BNE.w 'notccr
00025144 <AmiBlitz3.ab3@7328>    BSR.w getan
00025148 <AmiBlitz3.ab3@7329>   CMP.w #$29,D0       ;')'
0002514C <AmiBlitz3.ab3@7330>    BNE.w syntaxerr
0002514E <AmiBlitz3.ab3@7331>   MOVEQ.l #$04,D5
0002517A <AmiBlitz3.ab3@7333>   !fget                                                    ;bsr.w get1bytemain  
0002517C <AmiBlitz3.ab3@7334>  RTS
00025180 <AmiBlitz3.ab3@7338>   BSR.w getan
00025184 <AmiBlitz3.ab3@7339>   CMP.w #$29,D0      ;')'
00025188 <AmiBlitz3.ab3@7340>    BNE.w syntaxerr
000251B4 <AmiBlitz3.ab3@7342>   !fget
000251B8 <AmiBlitz3.ab3@7344>   CMP.w #$2B,D0      ;'+'
000251BC <AmiBlitz3.ab3@7345>    BEQ.w 'postinc
000251BE <AmiBlitz3.ab3@7346>   MOVEQ.l #$02,D5
000251C0 <AmiBlitz3.ab3@7347>  RTS
000251C2 <AmiBlitz3.ab3@7350>   MOVEQ.l #$03,D5
000251EE <AmiBlitz3.ab3@7352>   !fget                                                    ;bra.w get1bytemain
000251F0 <AmiBlitz3.ab3@7353>  RTS
000251F4 <AmiBlitz3.ab3@7357>   ORI.w #$20,D0
000251F6 <AmiBlitz3.ab3@7358>   MOVE.w D0,D1      ;first
00025222 <AmiBlitz3.ab3@7360>    !fget                                                   ;bsr.w get1bytemain  ;get second
00025226 <AmiBlitz3.ab3@7362>   CMP.w #$64,D1     ;'d'
0002522A <AmiBlitz3.ab3@7363>    BNE.w 'notdn
0002522E <AmiBlitz3.ab3@7364>   CMP.w #$30,D0     ;'0'
00025232 <AmiBlitz3.ab3@7365>    BCS.w 'notan
00025236 <AmiBlitz3.ab3@7366>   CMP.w #$37,D0     ;'7'
0002523A <AmiBlitz3.ab3@7367>    BHI.w 'notan
0002523C <AmiBlitz3.ab3@7368>   MOVE.w D0,D4
00025268 <AmiBlitz3.ab3@7370>    !fget                                                   ;bsr.w get1bytemain
0002527A <AmiBlitz3.ab3@7371>    !compare3                                               ;bsr.w tstend2
0002527E <AmiBlitz3.ab3@7373>    BEQ.w 'dn
00025282 <AmiBlitz3.ab3@7374>   CMP.w #$2D,D0     ;'-'
00025286 <AmiBlitz3.ab3@7375>    BEQ.w getmovem
0002528A <AmiBlitz3.ab3@7376>   CMP.w #$2F,D0     ;'/'
0002528E <AmiBlitz3.ab3@7377>    BEQ.w getmovem
00025292 <AmiBlitz3.ab3@7378>  BRA.w 'notan2
00025294 <AmiBlitz3.ab3@7381>   MOVEQ.l #$00,D5
00025298 <AmiBlitz3.ab3@7382>   SUBI.w #$30,D4
0002529A <AmiBlitz3.ab3@7383>  RTS
0002529E <AmiBlitz3.ab3@7386>    CMP.w #$61,D1    ;'a'
000252A2 <AmiBlitz3.ab3@7387>    BNE.w 'notan
000252A6 <AmiBlitz3.ab3@7389>   CMP.w #$30,D0     ;'0'
000252AA <AmiBlitz3.ab3@7390>    BCS.w 'notan
000252AE <AmiBlitz3.ab3@7391>   CMP.w #$37,D0     ;'7'
000252B2 <AmiBlitz3.ab3@7392>    BHI.w 'notan
000252B4 <AmiBlitz3.ab3@7393>   MOVE.w D0,D4
000252E0 <AmiBlitz3.ab3@7395>    !fget                                                   ;bsr.w get1bytemain
000252F2 <AmiBlitz3.ab3@7396>    !compare3                                               ;bsr.w tstend2
000252F6 <AmiBlitz3.ab3@7398>    BEQ.w 'an
000252FA <AmiBlitz3.ab3@7399>   CMP.w #$2D,D0     ;'-'
000252FE <AmiBlitz3.ab3@7400>    BEQ.w getmovem2                                         ;movem
00025302 <AmiBlitz3.ab3@7401>   CMP.w #$2F,D0     ;'/'
00025306 <AmiBlitz3.ab3@7402>    BEQ.w getmovem2
0002530A <AmiBlitz3.ab3@7403>  BRA.w 'notan2
0002530C <AmiBlitz3.ab3@7409>   MOVEQ.l #1,d5
00025310 <AmiBlitz3.ab3@7410>   SUBI.w #$30,D4
00025314 <AmiBlitz3.ab3@7412>   BRA 'l10
00025316 <AmiBlitz3.ab3@7413>   ADDQ.w #8,d4                             ; ??? looks like dead code ???
00025318 <AmiBlitz3.ab3@7414>   MOVEQ #0,d5                              ;   "
0002531A <AmiBlitz3.ab3@7415>   BSET d4,d5                               ;   "
0002531C <AmiBlitz3.ab3@7416>   MOVE.w d5,d4                             ;   "
0002531E <AmiBlitz3.ab3@7417>   MOVEQ.l #$0f,D5                          ;   "             ;01
00025320 <AmiBlitz3.ab3@7421>  RTS
00025324 <AmiBlitz3.ab3@7424>   ORI.w #$20,D0
00025326 <AmiBlitz3.ab3@7425>   MOVE.w D0,D4
00025352 <AmiBlitz3.ab3@7426>    !fget                                                   ;bsr.w get1bytemain ;get third
00025364 <AmiBlitz3.ab3@7431>   !compare3                                                ;bsr.w tstend2
00025368 <AmiBlitz3.ab3@7433>    BNE.w 'notsx
0002536C <AmiBlitz3.ab3@7434>   CMP.w #$73,D1       ;'s'
00025370 <AmiBlitz3.ab3@7435>    BNE.w 'notsx
00025374 <AmiBlitz3.ab3@7436>   CMP.w #$70,D4       ;'p'
00025378 <AmiBlitz3.ab3@7437>    BNE.w 'notsp
0002538A <AmiBlitz3.ab3@7439>    !compare3                                               ;bsr.w tstend2
0002538E <AmiBlitz3.ab3@7441>    BNE.w 'notccr
00025390 <AmiBlitz3.ab3@7445>   MOVEQ.l #$07,D4
00025392 <AmiBlitz3.ab3@7446>   MOVEQ.l #$01,D5
00025394 <AmiBlitz3.ab3@7447>  RTS
00025398 <AmiBlitz3.ab3@7450>   CMP.w #$72,D4      ;'r'
0002539C <AmiBlitz3.ab3@7451>    BNE.w 'notccr
000253AE <AmiBlitz3.ab3@7453>    !compare3                                               ;bsr.w tstend2
000253B2 <AmiBlitz3.ab3@7455>    BNE.w 'notccr
000253B4 <AmiBlitz3.ab3@7456>   MOVEQ.l #$0D,D5
000253B6 <AmiBlitz3.ab3@7457>  RTS
000253BA <AmiBlitz3.ab3@7460>   ORI.w #$20,D0
000253BE <AmiBlitz3.ab3@7461>   CMP.w #$63,D1      ;'c'
000253C2 <AmiBlitz3.ab3@7462>    BNE.w 'notccr0
000253C6 <AmiBlitz3.ab3@7463>   CMP.w #$63,D4      ;'c'
000253CA <AmiBlitz3.ab3@7464>    BNE.w 'notccr
000253CE <AmiBlitz3.ab3@7465>   CMP.w #$72,D0      ;'r'
000253D2 <AmiBlitz3.ab3@7466>    BNE.w 'notccr
000253D6 <AmiBlitz3.ab3@7467>    BSR.w get1bytemain                                      ;??wy not !fget
000253DA <AmiBlitz3.ab3@7468>    BEQ.w 'ccr
000253DE <AmiBlitz3.ab3@7469>   CMP.w #$2C,D0
000253E2 <AmiBlitz3.ab3@7470>    BNE.w 'notccr
000253E4 <AmiBlitz3.ab3@7476>   MOVEQ.l #$0C,D5
000253E6 <AmiBlitz3.ab3@7477>  RTS
000253EA <AmiBlitz3.ab3@7480>   CMP.w #$75,D1      ;'u'
000253EE <AmiBlitz3.ab3@7481>    BNE.w 'notccr
000253F2 <AmiBlitz3.ab3@7482>   CMP.w #$73,D4      ;'s'
000253F6 <AmiBlitz3.ab3@7483>    BNE.w 'notccr
000253FA <AmiBlitz3.ab3@7484>   CMP.w #$70,D0      ;'p'
000253FE <AmiBlitz3.ab3@7485>    BNE.w 'notccr
00025402 <AmiBlitz3.ab3@7486>    BSR.w get1bytemain                                      ;??wy not !fget
00025406 <AmiBlitz3.ab3@7487>    BEQ.w 'usp
0002540A <AmiBlitz3.ab3@7488>   CMP.w #$2C,D0      ;','
0002540E <AmiBlitz3.ab3@7489>    BNE.w 'notccr
00025410 <AmiBlitz3.ab3@7492>   MOVEQ.l #$0E,D5
00025412 <AmiBlitz3.ab3@7493>  RTS
00025414 <AmiBlitz3.ab3@7499>   MOVEA.l A4,A5
00025418 <AmiBlitz3.ab3@7500>    BSR.w asmconst
0002542A <AmiBlitz3.ab3@7503>    !compare3                                               ;bsr.w tstend2
0002542E <AmiBlitz3.ab3@7505>    BEQ.w 'abs1
00025432 <AmiBlitz3.ab3@7506>   CMP.w #$2E,D0      ;'.'
00025436 <AmiBlitz3.ab3@7507>    BEQ.w 'absx
0002543A <AmiBlitz3.ab3@7508>   CMP.w #$28,D0      ;'('
0002543E <AmiBlitz3.ab3@7509>    BNE.w syntaxerr
00025442 <AmiBlitz3.ab3@7510>    BSR.w get1bytemain                                      ;??wy not !fget
00025446 <AmiBlitz3.ab3@7511>   ORI.w #$20,D0
0002544A <AmiBlitz3.ab3@7512>   CMP.w #$70,D0      ;'p'
0002544E <AmiBlitz3.ab3@7513>    BNE.w 'notpcrel
00025452 <AmiBlitz3.ab3@7514>    BSR.w get1bytemain                                      ;??wy not !fget
00025456 <AmiBlitz3.ab3@7515>   ORI.w #$20,D0
0002545A <AmiBlitz3.ab3@7516>   CMP.w #$63,D0      ;'c'
0002545E <AmiBlitz3.ab3@7517>    BNE.w syntaxerr
00025462 <AmiBlitz3.ab3@7518>    BSR.w get1bytemain                                      ;??wy not !fget
00025466 <AmiBlitz3.ab3@7519>    BSR.w getrest
00025468 <AmiBlitz3.ab3@7520>   ADDQ.w #4,D5
0002546A <AmiBlitz3.ab3@7521>  RTS
0002546E <AmiBlitz3.ab3@7524>   BSR.w getan2
00025472 <AmiBlitz3.ab3@7525>  BRA.w getrest
00025476 <AmiBlitz3.ab3@7528>    BSR.w get1bytemain                                     ;??wy not !fget
0002547A <AmiBlitz3.ab3@7529>   ORI.w #$20,D0
0002547E <AmiBlitz3.ab3@7530>   CMP.w #$77,D0      ;'w'
00025482 <AmiBlitz3.ab3@7531>    BEQ.w 'absw
00025486 <AmiBlitz3.ab3@7532>   CMP.w #$6C,D0      ;'l'
0002548A <AmiBlitz3.ab3@7533>    BNE.w syntaxerr
0002548C <AmiBlitz3.ab3@7536>   MOVEQ.l #$08,D5
0002548E <AmiBlitz3.ab3@7537>  RTS
00025490 <AmiBlitz3.ab3@7540>   MOVEQ.l #$07,D5
00025492 <AmiBlitz3.ab3@7541> RTS
00025494 <AmiBlitz3.ab3@7545>   TST.w D0
00025498 <AmiBlitz3.ab3@7546>    BEQ.w 'ok
0002549C <AmiBlitz3.ab3@7547>   CMP.w #$3A,D0       ;':'
000254A0 <AmiBlitz3.ab3@7548>    BEQ.w 'ok
000254A4 <AmiBlitz3.ab3@7549>   CMP.w #$2C,D0       ;','
000254A6 <AmiBlitz3.ab3@7552> RTS
000254AA <AmiBlitz3.ab3@7556>   CMP.w #$2C,D0       ;','
000254AE <AmiBlitz3.ab3@7557>    BNE.w 'dis
000254B2 <AmiBlitz3.ab3@7558>    BSR.w get1bytemain                                      ;??wy not !fget
000254B6 <AmiBlitz3.ab3@7559>   ORI.w #$20,D0
000254B8 <AmiBlitz3.ab3@7560>   MOVEQ.l #$00,D1
000254BC <AmiBlitz3.ab3@7561>   CMP.w #$64,D0       ;'d'
000254C0 <AmiBlitz3.ab3@7562>    BEQ.w 'ianxi
000254C4 <AmiBlitz3.ab3@7563>   CMP.w #$61,D0       ;'a'
000254C8 <AmiBlitz3.ab3@7564>    BNE.w syntaxerr
000254CC <AmiBlitz3.ab3@7565>   BSET #$F,D1
000254D0 <AmiBlitz3.ab3@7568>    BSR.w get1bytemain                                      ;??wy not !fget
000254D4 <AmiBlitz3.ab3@7569>   SUBI.w #$30,D0
000254D8 <AmiBlitz3.ab3@7570>    BMI.w syntaxerr
000254DC <AmiBlitz3.ab3@7571>   CMP.w #$7,D0
000254E0 <AmiBlitz3.ab3@7572>    BHI.w syntaxerr
000254E2 <AmiBlitz3.ab3@7573>   LSL.w #8,D0
000254E4 <AmiBlitz3.ab3@7574>   LSL.w #4,D0
000254E6 <AmiBlitz3.ab3@7575>   OR.w D0,D1
000254EA <AmiBlitz3.ab3@7576>    BSR.w get1bytemain                                      ;??wy not !fget
000254EE <AmiBlitz3.ab3@7577>   CMP.w #$2E,D0       ;'.'
000254F2 <AmiBlitz3.ab3@7578>    BNE.w 'ok2
000254F6 <AmiBlitz3.ab3@7579>    BSR.w get1bytemain                                      ;??wy not !fget
000254FA <AmiBlitz3.ab3@7580>   ORI.w #$20,D0
000254FE <AmiBlitz3.ab3@7581>   CMP.w #$77,D0       ;'w'
00025502 <AmiBlitz3.ab3@7582>    BEQ.w 'ok
00025506 <AmiBlitz3.ab3@7583>   CMP.w #$6C,D0       ;'l'
0002550A <AmiBlitz3.ab3@7584>    BNE.w syntaxerr
0002550E <AmiBlitz3.ab3@7585>   BSET #$B,D1
00025512 <AmiBlitz3.ab3@7588>    BSR.w get1bytemain                                      ;??wy not !fget
00025516 <AmiBlitz3.ab3@7592>    CMP.b #"*",d0                                            ;020 * Mode
0002551A <AmiBlitz3.ab3@7593>             BNE 'l1
0002551E <AmiBlitz3.ab3@7594>             BSR.w get1bytemain                             ;??wy not !fget
00025522 <AmiBlitz3.ab3@7595>             CMP.b #"2",d0
00025526 <AmiBlitz3.ab3@7596>             BNE 'l2
0002552A <AmiBlitz3.ab3@7597>             OR.w #$200,d1
0002552E <AmiBlitz3.ab3@7598>  BRA 'l1b
00025532 <AmiBlitz3.ab3@7601>             CMP.b #"4",d0
00025536 <AmiBlitz3.ab3@7602>             BNE 'l3
0002553A <AmiBlitz3.ab3@7603>             OR.w #$400,d1
0002553E <AmiBlitz3.ab3@7604>  BRA 'l1b
00025542 <AmiBlitz3.ab3@7607>             CMP.b #"8",d0
00025546 <AmiBlitz3.ab3@7608>             BNE syntaxerr
0002554A <AmiBlitz3.ab3@7609>             OR.w #$600,d1
0002554E <AmiBlitz3.ab3@7612>         BSR.w get1bytemain                                 ;??wy not !fget
00025552 <AmiBlitz3.ab3@7616>   CMP.w #$29,D0       ;')'
00025556 <AmiBlitz3.ab3@7617>    BNE.w syntaxerr
0002555C <AmiBlitz3.ab3@7618>   MOVE.w D1,extraword
0002555E <AmiBlitz3.ab3@7619>   MOVEQ.l #$06,D5
00025562 <AmiBlitz3.ab3@7620>  BRA.w get1bytemain                                         ;??wy not !fget
00025566 <AmiBlitz3.ab3@7623>   CMP.w #")",D0                                            ;")"
0002556A <AmiBlitz3.ab3@7624>    BNE.w errorbracketmiss                                  ; was syntax error
0002556C <AmiBlitz3.ab3@7625>   MOVEQ.l #$05,D5
00025570 <AmiBlitz3.ab3@7626> BRA.w get1bytemain                                         ;??wy not !fget
00025576 <AmiBlitz3.ab3@7633>   MOVEA.l asmbuff,A0
0002557C <AmiBlitz3.ab3@7634>   MOVE.w ininclude,D1
00025582 <AmiBlitz3.ab3@7635>   OR.w inmacro,D1
00025584 <AmiBlitz3.ab3@7636>   MOVE.w D1,(A0)+                                          ;flag!
00025588 <AmiBlitz3.ab3@7637>    BNE.w copyconst
0002558A <AmiBlitz3.ab3@7638>   MOVE.l A5,-(A7)
0002558E <AmiBlitz3.ab3@7639>    BSR.w copyconst
00025594 <AmiBlitz3.ab3@7640>   MOVEA.l asmbuff,A0
00025598 <AmiBlitz3.ab3@7641>   CMP.w #$4,D1
0002559C <AmiBlitz3.ab3@7642>    BLS.w 'leave
000255A2 <AmiBlitz3.ab3@7643>   TST.w lc
000255A6 <AmiBlitz3.ab3@7644>    BNE.w 'leave
000255A8 <AmiBlitz3.ab3@7645>   ADDQ.w #2,A0
000255AA <AmiBlitz3.ab3@7646>   MOVE.l (A7)+,(A0)+
000255AC <AmiBlitz3.ab3@7647>   CLR.b (A0)
000255B4 <AmiBlitz3.ab3@7648>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000255B6 <AmiBlitz3.ab3@7649>  RTS
000255B8 <AmiBlitz3.ab3@7652>   NOT.w (A0)
000255BA <AmiBlitz3.ab3@7653>   ADDQ.w #4,A7
000255BC <AmiBlitz3.ab3@7654> RTS
000255BE <AmiBlitz3.ab3@7657> lc:  Ds.w 1
000255C4 <AmiBlitz3.ab3@7661>   CLR.w lc
000255C6 <AmiBlitz3.ab3@7662>   MOVEQ.l #$00,D1
000255C8 <AmiBlitz3.ab3@7665>    ADDQ.w #1,D1                                            ;label name
000255F4 <AmiBlitz3.ab3@7667>    !fget                                                   ;bsr.w get1bytemain
000255F8 <AmiBlitz3.ab3@7669>    BEQ.w 'done
000255FC <AmiBlitz3.ab3@7672>    CMP.w #$22,d0
00025600 <AmiBlitz3.ab3@7673>    BNE.s 'loop_l10
00025606 <AmiBlitz3.ab3@7674>    NOT.w instringon
0002560A <AmiBlitz3.ab3@7677>    CMP.w #":",d0
0002560E <AmiBlitz3.ab3@7678>    BNE.s 'loop_l11
00025614 <AmiBlitz3.ab3@7679>    TST.w instringon
00025618 <AmiBlitz3.ab3@7680>    BEQ 'done
0002561A <AmiBlitz3.ab3@7684>   TST.w D0
0002561E <AmiBlitz3.ab3@7685>   BPL.w 'notmi
00025620 <AmiBlitz3.ab3@7686>   MOVE.w D0,-(A7)
00025622 <AmiBlitz3.ab3@7687>   LSR.w #8,D0
00025624 <AmiBlitz3.ab3@7688>   MOVE.b D0,(A0)+
00025626 <AmiBlitz3.ab3@7689>   MOVE.w (A7)+,D0
00025628 <AmiBlitz3.ab3@7690>   MOVE.b D0,(A0)+
0002562A <AmiBlitz3.ab3@7691>   ADDQ.w #1,D1
0002562E <AmiBlitz3.ab3@7692>  BRA.s 'loop
00025634 <AmiBlitz3.ab3@7695>    TST.w instringon
00025638 <AmiBlitz3.ab3@7696>    BNE.w 'putbyte
0002563E <AmiBlitz3.ab3@7698>    TST.b _dcb
00025642 <AmiBlitz3.ab3@7699>    BNE 'notmi_l10
00025646 <AmiBlitz3.ab3@7701>    CMP.w #$28,D0     ;'('
0002564A <AmiBlitz3.ab3@7702>    BEQ.w 'done
0002564E <AmiBlitz3.ab3@7706>    CMP.w #$2C,D0     ;','
00025652 <AmiBlitz3.ab3@7707>    BEQ.w 'done
00025656 <AmiBlitz3.ab3@7708>    CMP.b #"'",D0           ; was #loclabch
0002565A <AmiBlitz3.ab3@7709>    BNE.w 'putbyte
00025660 <AmiBlitz3.ab3@7710>    MOVE.w D0,lc                                     ;locallabels
00025662 <AmiBlitz3.ab3@7711>    MOVE.l A1,-(A7)
00025668 <AmiBlitz3.ab3@7712>    LEA lastgloballabel,A1
0002566A <AmiBlitz3.ab3@7713>    TST.b (A1)
0002566E <AmiBlitz3.ab3@7714>    BEQ.w nolocerr
00025670 <AmiBlitz3.ab3@7717>   ADDQ.w #1,D1
00025672 <AmiBlitz3.ab3@7718>   MOVE.b (A1)+,(A0)+
00025676 <AmiBlitz3.ab3@7719>    BNE.w 'cloop
00025678 <AmiBlitz3.ab3@7720>   SUBQ.w #1,D1
0002567A <AmiBlitz3.ab3@7721>   SUBQ.w #1,A0
0002567C <AmiBlitz3.ab3@7722>   MOVEA.l (A7)+,A1
0002567E <AmiBlitz3.ab3@7725>   MOVE.b D0,(A0)+
00025682 <AmiBlitz3.ab3@7726>  BRA.w 'loop
00025684 <AmiBlitz3.ab3@7729>   CLR.b (A0)
0002568A <AmiBlitz3.ab3@7730>   MOVE.w D1,asmlen2
0002568C <AmiBlitz3.ab3@7731> RTS
00025692 <AmiBlitz3.ab3@7737>   CMP.l #$80ad,d0      
00025696 <AmiBlitz3.ab3@7738>   BNE.s 'l12
0002569C <AmiBlitz3.ab3@7739>  JMP bssseg
000256A2 <AmiBlitz3.ab3@7742>   CMP.l #$807f,d0
000256A6 <AmiBlitz3.ab3@7743>     BNE.s 'l13
000256AC <AmiBlitz3.ab3@7744>  JMP chipseg
000256B2 <AmiBlitz3.ab3@7747>   ADDQ.l #1,destpointer                                    ;even
000256BA <AmiBlitz3.ab3@7748>   BCLR #$0,destpointer+3
000256BE <AmiBlitz3.ab3@7750>   SUBI.w #$803C,D0         ; was #$8000+fnum
000256C0 <AmiBlitz3.ab3@7751>   LSL.w #2,D0
000256C6 <AmiBlitz3.ab3@7752>   MOVEA.l #asmpnts,A0
000256CA <AmiBlitz3.ab3@7753>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000256D0 <AmiBlitz3.ab3@7754>   MOVE.w D0,temp1
000256D2 <AmiBlitz3.ab3@7755>   MOVE.l A0,-(A7)
000256D4 <AmiBlitz3.ab3@7757>   MOVEQ.l #$01,D1         ;word len (byte=0, long=2)
00025700 <AmiBlitz3.ab3@7759>    !fget                                                   ;bsr.w get1bytemain
00025704 <AmiBlitz3.ab3@7761>   CMP.w #$2E,D0           ;'.'
00025708 <AmiBlitz3.ab3@7762>    BNE.w 'dsize
00025734 <AmiBlitz3.ab3@7764>   !fget                                                    ;bsr.w get1bytemain
00025738 <AmiBlitz3.ab3@7766>   ORI.w #$20,D0
0002573C <AmiBlitz3.ab3@7767>   CMP.w #$77,D0           ;'w'                                  ;long
00025740 <AmiBlitz3.ab3@7768>    BEQ.w 'wsize
00025744 <AmiBlitz3.ab3@7769>   CMP.w #$62,D0           ;'b'                                 ;byte
00025748 <AmiBlitz3.ab3@7770>    BEQ.w 'bsize
0002574C <AmiBlitz3.ab3@7771>   CMP.w #$6C,D0           ;'l'                                 ;word
00025750 <AmiBlitz3.ab3@7773>    BEQ.w 'lsize
00025754 <AmiBlitz3.ab3@7774>   CMP.w #"s",d0
00025758 <AmiBlitz3.ab3@7776>   BNE syntaxerr
0002575C <AmiBlitz3.ab3@7777>  BRA.w 'bsize             ; was 'lsize org source
0002575E <AmiBlitz3.ab3@7780>   MOVEQ.l #$00,D1
00025762 <AmiBlitz3.ab3@7781>   MOVE.w $8(A0),D0
00025766 <AmiBlitz3.ab3@7782>  BRA.w 'tstsize
00025768 <AmiBlitz3.ab3@7785>   MOVEQ.l #$04,D1
0002576C <AmiBlitz3.ab3@7786>  BRA.w 'putsize
0002576E <AmiBlitz3.ab3@7789>   MOVEQ.l #$04,D1
00025772 <AmiBlitz3.ab3@7790>   MOVE.w $8(A0),D0
00025774 <AmiBlitz3.ab3@7791>   LSR.w #4,D0
00025778 <AmiBlitz3.ab3@7792>  BRA.w 'tstsize
0002577A <AmiBlitz3.ab3@7795>   MOVEQ.l #$08,D1
0002577E <AmiBlitz3.ab3@7796>   MOVE.w $8(A0),D0
00025780 <AmiBlitz3.ab3@7797>   LSR.w #8,D0
00025784 <AmiBlitz3.ab3@7800>    ANDI.w #$F,D0
00025788 <AmiBlitz3.ab3@7801>   CMP.w #$F,D0
0002578C <AmiBlitz3.ab3@7803>    BNE.w 'cl60
00025794 <AmiBlitz3.ab3@7806>    CMP.l #"MULS",-6(a0)
00025798 <AmiBlitz3.ab3@7807>    BNE 'c20
0002579E <AmiBlitz3.ab3@7808>    MOVE.l #$4c000800,d1
000257A4 <AmiBlitz3.ab3@7809>  JMP do32
000257AC <AmiBlitz3.ab3@7812>    CMP.l #"MULU",-6(a0)
000257B0 <AmiBlitz3.ab3@7813>    BNE 'c30
000257B6 <AmiBlitz3.ab3@7814>    MOVE.l #$4c000000,d1
000257BC <AmiBlitz3.ab3@7815>  JMP do32
000257C4 <AmiBlitz3.ab3@7818>    CMP.l #"DIVS",-6(a0)
000257C8 <AmiBlitz3.ab3@7819>    BNE 'c40
000257CE <AmiBlitz3.ab3@7820>    MOVE.l #$4c400800,d1
000257D4 <AmiBlitz3.ab3@7821>  JMP do32
000257DC <AmiBlitz3.ab3@7824>    CMP.l #"DIVU",-6(a0)
000257E0 <AmiBlitz3.ab3@7825>    BNE 'c50
000257E6 <AmiBlitz3.ab3@7826>    MOVE.l #$4c400000,d1
000257EC <AmiBlitz3.ab3@7827>  JMP do32
000257F0 <AmiBlitz3.ab3@7831>  BRA illsizeerr             ; in org source this was afte 'c160
0002581C <AmiBlitz3.ab3@7834>   !fget                                                    ;bsr.w get1bytemain
00025822 <AmiBlitz3.ab3@7837>   MOVE.w D1,asmsize
00025824 <AmiBlitz3.ab3@7838>   MOVEQ.l #-$01,D3
00025828 <AmiBlitz3.ab3@7839>    BSR.w reget
0002582C <AmiBlitz3.ab3@7840>    BEQ.w 'done0
00025836 <AmiBlitz3.ab3@7841>   MOVE.l #ptr_parameterstore,asmbuff
00025840 <AmiBlitz3.ab3@7844>    MOVE.w oldqflag,instringon
00025846 <AmiBlitz3.ab3@7845>   MOVEA.l lastsourcepos,A5
0002584A <AmiBlitz3.ab3@7847>    BSR.w getea
0002584C <AmiBlitz3.ab3@7848>   MOVE.l D4,D2                                              ;to src
0002584E <AmiBlitz3.ab3@7849>   MOVE.l D5,D3
00025858 <AmiBlitz3.ab3@7850>   MOVE.w asmlen2,asmlen
0002585A <AmiBlitz3.ab3@7851>   MOVEQ.l #-$01,D5
00025864 <AmiBlitz3.ab3@7852>   MOVE.w extraword,extraword2
00025868 <AmiBlitz3.ab3@7853>   CMP.w #$2C,D0                                             ;','
0002586C <AmiBlitz3.ab3@7854>    BNE.w 'done0
00025876 <AmiBlitz3.ab3@7855>   MOVE.l #namebuff2,asmbuff
0002587A <AmiBlitz3.ab3@7856>    BSR.w getea                                              ;dest
0002587C <AmiBlitz3.ab3@7863>   MOVEA.l (A7)+,A0
00025882 <AmiBlitz3.ab3@7867>   MOVEA.l destpointer,A1    ; pc
00025884 <AmiBlitz3.ab3@7869>   MOVEA.l A1,A4
00025886 <AmiBlitz3.ab3@7870>   ADDQ.w #2,A1
00025888 <AmiBlitz3.ab3@7871>   MOVE.w (A0),D1            ;opcode
0002588A <AmiBlitz3.ab3@7872>   TST.w D3
0002588E <AmiBlitz3.ab3@7873>    BMI.w 'none              ;no src/dest ea!
00025892 <AmiBlitz3.ab3@7877>   MOVE.w $E(A0),D0
00025896 <AmiBlitz3.ab3@7878>    BPL.w 'noia
0002589A <AmiBlitz3.ab3@7879>   BTST #$0,D0
0002589E <AmiBlitz3.ab3@7880>    BEQ.w 'noa
000258A2 <AmiBlitz3.ab3@7881>   CMP.w #$1,D5
000258A6 <AmiBlitz3.ab3@7882>    BNE.w 'noa
000258AA <AmiBlitz3.ab3@7883>   CMP.w #$E,D3
000258AE <AmiBlitz3.ab3@7884>    BEQ.w 'noia
000258B4 <AmiBlitz3.ab3@7885>   MOVE.w temp1,D0
000258B6 <AmiBlitz3.ab3@7886>   ADDQ.w #4,D0
000258BA <AmiBlitz3.ab3@7887>  BRA.w 'moveon
000258BE <AmiBlitz3.ab3@7890>   BTST #$1,D0
000258C2 <AmiBlitz3.ab3@7891>    BEQ.w 'noia
000258C6 <AmiBlitz3.ab3@7892>   CMP.w #$B,D3
000258CA <AmiBlitz3.ab3@7893>    BNE.w 'noia
000258D0 <AmiBlitz3.ab3@7894>   MOVE.w temp1,D0
000258D2 <AmiBlitz3.ab3@7897>   ADDQ.w #4,D0
000258D8 <AmiBlitz3.ab3@7898>   MOVEA.l #asmpnts,A0
000258DC <AmiBlitz3.ab3@7899>   MOVEA.l $0(A0,D0.W),A0
000258DE <AmiBlitz3.ab3@7900>   MOVE.w (A0),D1
000258E8 <AmiBlitz3.ab3@7903>   MOVE.l #ptr_parameterstore,buff1
000258F2 <AmiBlitz3.ab3@7904>   MOVE.l #namebuff2,buff2
000258F6 <AmiBlitz3.ab3@7905>   MOVE.l $A(A0),D0
000258FA <AmiBlitz3.ab3@7906>    BEQ.w 'nojsr
000258FC <AmiBlitz3.ab3@7907>   MOVEA.l D0,A3
00025902 <AmiBlitz3.ab3@7908>   MOVE.w asmsize,D6
00025904 <AmiBlitz3.ab3@7909>    JSR (A3)
00025908 <AmiBlitz3.ab3@7910>    BPL.w 'noerr
0002590C <AmiBlitz3.ab3@7911>   CMP.w #-$2,D0
00025910 <AmiBlitz3.ab3@7912>    BEQ.w illsizeerr
00025914 <AmiBlitz3.ab3@7913>  BRA.w illeaerr
00025918 <AmiBlitz3.ab3@7916>   BEQ.w 'nojsr
0002591A <AmiBlitz3.ab3@7918>   EXG.l D2,D4
0002591C <AmiBlitz3.ab3@7919>   EXG.l D3,D5
00025922 <AmiBlitz3.ab3@7921>   MOVE.l extraword,D6
00025924 <AmiBlitz3.ab3@7922>   SWAP D6
0002592A <AmiBlitz3.ab3@7923>   MOVE.l D6,extraword
00025934 <AmiBlitz3.ab3@7925>   MOVE.l #namebuff2,buff1
0002593E <AmiBlitz3.ab3@7926>   MOVE.l #ptr_parameterstore,buff2
00025944 <AmiBlitz3.ab3@7928>   MOVE.w asmlen,D6
0002594A <AmiBlitz3.ab3@7929>   MOVE.w asmlen2,D7
00025950 <AmiBlitz3.ab3@7930>   MOVE.w D6,asmlen2
00025956 <AmiBlitz3.ab3@7931>   MOVE.w D7,asmlen
00025960 <AmiBlitz3.ab3@7934>   MOVE.l buff1,asmbuff
00025964 <AmiBlitz3.ab3@7935>   MOVE.w $E(A0),D0
00025968 <AmiBlitz3.ab3@7936>    BEQ.w 'nothing
0002596C <AmiBlitz3.ab3@7937>    BMI.w 'nothing
00025970 <AmiBlitz3.ab3@7939>    CMP.w #$7000,d1
00025974 <AmiBlitz3.ab3@7940>    BNE 'skip
00025978 <AmiBlitz3.ab3@7941>    CMP.w #$b,d3
0002597C <AmiBlitz3.ab3@7942>    BNE illeaerr
00025980 <AmiBlitz3.ab3@7946>    CMP.w #$1,D0
00025984 <AmiBlitz3.ab3@7947>    BNE.w 'n1to8
00025988 <AmiBlitz3.ab3@7948>    CMP.w #$B,D3
0002598C <AmiBlitz3.ab3@7949>    BNE.w 'nothing
00025990 <AmiBlitz3.ab3@7952>    BSR.w insasm
00025992 <AmiBlitz3.ab3@7953>   MOVE.w D4,D2
00025994 <AmiBlitz3.ab3@7954>   MOVE.w D5,D3
00025998 <AmiBlitz3.ab3@7955>  BRA.w 'skipsrc2
0002599C <AmiBlitz3.ab3@7958>    CMP.w #$2,D0
000259A0 <AmiBlitz3.ab3@7959>    BNE.w 'notbcc
000259A4 <AmiBlitz3.ab3@7960>   CMP.w #$8,D3
000259A8 <AmiBlitz3.ab3@7961>    BNE.w illeaerr
000259AA <AmiBlitz3.ab3@7962>   MOVEQ.l #$09,D3
000259AE <AmiBlitz3.ab3@7963>  BRA.w 'nothing
000259B2 <AmiBlitz3.ab3@7966>    CMP.w #$3,D0
000259B6 <AmiBlitz3.ab3@7967>    BEQ.w 'skipsrc
000259BA <AmiBlitz3.ab3@7970>   CMP.w #$4,D0
000259BE <AmiBlitz3.ab3@7971>    BEQ.w 'skipsrc
000259C2 <AmiBlitz3.ab3@7974>   CMP.w #$5,D0
000259C6 <AmiBlitz3.ab3@7975>    BNE.w 'notdbf
000259CA <AmiBlitz3.ab3@7976>   CMP.w #$8,D5
000259CE <AmiBlitz3.ab3@7977>    BNE.w illeaerr
000259D0 <AmiBlitz3.ab3@7978>   OR.w D2,D1
000259D2 <AmiBlitz3.ab3@7979>   MOVEQ.l #$09,D5
000259D6 <AmiBlitz3.ab3@7983>   MOVE.w $2(A0),D6
000259DA <AmiBlitz3.ab3@7984>   MOVE.b $6(A0),D7
000259DE <AmiBlitz3.ab3@7985>   MOVEM.l D4-D5,-(A7)
000259E4 <AmiBlitz3.ab3@7986>   MOVE.w extraword2,D4
000259E8 <AmiBlitz3.ab3@7987>    BSR.w doea          ;do src
000259EC <AmiBlitz3.ab3@7989>   MOVEM.l (A7)+,D2-D3
000259EE <AmiBlitz3.ab3@7991>   TST.w D3
000259F2 <AmiBlitz3.ab3@7994>     BMI.w 'one
000259F8 <AmiBlitz3.ab3@7995>   MOVE.w extraword,D4
000259FC <AmiBlitz3.ab3@7996>   MOVE.w $4(A0),D6
00025A00 <AmiBlitz3.ab3@7997>   MOVE.b $7(A0),D7
00025A0A <AmiBlitz3.ab3@7998>   MOVE.l buff2,asmbuff
00025A14 <AmiBlitz3.ab3@7999>   MOVE.w asmlen2,asmlen
00025A18 <AmiBlitz3.ab3@8000>    BSR.w doea
00025A1C <AmiBlitz3.ab3@8001>  BRA.w 'putit
00025A20 <AmiBlitz3.ab3@8004>   MOVE.w $4(A0),D0
00025A24 <AmiBlitz3.ab3@8005>    BNE.w illeaerr
00025A28 <AmiBlitz3.ab3@8006>  BRA.w 'putit
00025A2C <AmiBlitz3.ab3@8009>   MOVE.w $2(A0),D0
00025A30 <AmiBlitz3.ab3@8010>   OR.w $4(A0),D0
00025A34 <AmiBlitz3.ab3@8011>    BNE.w illeaerr
00025A38 <AmiBlitz3.ab3@8016>   MOVE.w $8(A0),D0
00025A3C <AmiBlitz3.ab3@8017>   ANDI.w #$F000,D0
00025A40 <AmiBlitz3.ab3@8018>   CMP.w #-$1000,D0    ;was #$f000
00025A44 <AmiBlitz3.ab3@8019>    BEQ.w 'nosizep
00025A46 <AmiBlitz3.ab3@8020>   LSR.w #8,D0
00025A48 <AmiBlitz3.ab3@8021>   LSR.w #4,D0         ;shift for size
00025A4C <AmiBlitz3.ab3@8023>   MOVE.w $8(A0),D2
00025A52 <AmiBlitz3.ab3@8024>   MOVE.w asmsize,D3
00025A54 <AmiBlitz3.ab3@8025>   LSR.w D3,D2
00025A58 <AmiBlitz3.ab3@8026>   ANDI.w #$F,D2
00025A5A <AmiBlitz3.ab3@8027>   LSL.w D0,D2
00025A5C <AmiBlitz3.ab3@8028>   OR.w D2,D1          ;size into opcode
00025A62 <AmiBlitz3.ab3@8031>   CMPA.l destbufferend,A4
00025A66 <AmiBlitz3.ab3@8032>    BCS.w 'oky
00025A6E <AmiBlitz3.ab3@8033>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1
00025A72 <AmiBlitz3.ab3@8034>  BRA.w 'done
00025A74 <AmiBlitz3.ab3@8037>   MOVE.w D1,(A4)
00025A7A <AmiBlitz3.ab3@8040>   MOVE.l A1,destpointer
00025A7C <AmiBlitz3.ab3@8041> RTS
00025A82 <AmiBlitz3.ab3@8045>   MOVE.l destpointer,-(A7)
00025A88 <AmiBlitz3.ab3@8046>   MOVE.l A1,destpointer
00025A8C <AmiBlitz3.ab3@8047>    BSR.w addoff
00025A92 <AmiBlitz3.ab3@8048>   MOVEA.l destpointer,A1
00025A98 <AmiBlitz3.ab3@8049>   MOVE.l (A7)+,destpointer
00025A9A <AmiBlitz3.ab3@8050> RTS
00025A9E <AmiBlitz3.ab3@8054>   MOVEM.l d2-d6,-(a7)
00025AA4 <AmiBlitz3.ab3@8055>   JSR stripspaces
00025AA8 <AmiBlitz3.ab3@8056>   CMP.b #"d",(a5)+
00025AAC <AmiBlitz3.ab3@8057>   BNE noreg
00025AAE <AmiBlitz3.ab3@8058>   MOVE.b (a5)+,d0
00025AB2 <AmiBlitz3.ab3@8059>   CMP.b #$30,d0
00025AB6 <AmiBlitz3.ab3@8060>   BLT noreg
00025ABA <AmiBlitz3.ab3@8061>   CMP.b #$37,d0
00025ABE <AmiBlitz3.ab3@8062>   BGT noreg
00025AC2 <AmiBlitz3.ab3@8063>   SUB.b #$30,d0
00025AC4 <AmiBlitz3.ab3@8064>   MOVEQ #0,d3
00025AC6 <AmiBlitz3.ab3@8065>   MOVE.b d0,d3                                             ;reg1
00025AC8 <AmiBlitz3.ab3@8066>   ASL.l #8,d3
00025ACA <AmiBlitz3.ab3@8067>   ASL.l #8,d3
00025AD0 <AmiBlitz3.ab3@8068>   JSR stripspaces
00025AD4 <AmiBlitz3.ab3@8069>   CMP.b #",",(a5)+
00025AD8 <AmiBlitz3.ab3@8070>   BNE noreg
00025ADE <AmiBlitz3.ab3@8071>   JSR stripspaces
00025AE2 <AmiBlitz3.ab3@8072>   CMP.b #"d",(a5)+
00025AE6 <AmiBlitz3.ab3@8073>   BNE noreg
00025AE8 <AmiBlitz3.ab3@8074>   MOVE.b (a5)+,d0
00025AEC <AmiBlitz3.ab3@8075>   CMP.b #$30,d0
00025AF0 <AmiBlitz3.ab3@8076>   BLT noreg
00025AF4 <AmiBlitz3.ab3@8077>   CMP.b #$37,d0
00025AF8 <AmiBlitz3.ab3@8078>   BGT noreg
00025AFC <AmiBlitz3.ab3@8079>   SUB.b #$30,d0
00025AFE <AmiBlitz3.ab3@8080>   MOVEQ #0,d4
00025B00 <AmiBlitz3.ab3@8081>   MOVE.b d0,d4                                             ;reg2
00025B02 <AmiBlitz3.ab3@8082>   ASL.l #8,d4
00025B04 <AmiBlitz3.ab3@8083>   ASL.l #4,d4
00025B06 <AmiBlitz3.ab3@8084>   OR.b d0,d1
00025B08 <AmiBlitz3.ab3@8085>   OR.l d3,d1
00025B0A <AmiBlitz3.ab3@8086>   OR.l d4,d1
00025B10 <AmiBlitz3.ab3@8087>   JSR writelong
00025B14 <AmiBlitz3.ab3@8088>   MOVEM.l (a7)+,d2-d6
00025B18 <AmiBlitz3.ab3@8089>   MOVEM.l d1/a1-a3,-(a7)
00025B1C <AmiBlitz3.ab3@8090> BRA exit
00025B20 <AmiBlitz3.ab3@8094>   MOVEM.l (a7)+,d2-d6
00025B26 <AmiBlitz3.ab3@8095>   LEA errtext,a0
00025B28 <AmiBlitz3.ab3@8096>   MOVE.l a0,-(a7)
00025B2E <AmiBlitz3.ab3@8097> JMP handle_compileerror
00025B34 <AmiBlitz3.ab3@8102>   MOVE.w dontwrite_nomemleft,D1
00025B38 <AmiBlitz3.ab3@8103>    BNE.w 'done
00025B40 <AmiBlitz3.ab3@8104>   BTST #$7,make_smallestcode
00025B44 <AmiBlitz3.ab3@8105>    BEQ.w 'go
00025B48 <AmiBlitz3.ab3@8106>   MOVE.w pass(PC),D1
00025B4C <AmiBlitz3.ab3@8107>    BEQ.w 'done
00025B52 <AmiBlitz3.ab3@8110>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025B5A <AmiBlitz3.ab3@8111>   MOVE.b #1,curtemplabel
00025B62 <AmiBlitz3.ab3@8112>   MOVE.w #$FFFF,constmode
00025B68 <AmiBlitz3.ab3@8113>   CLR.w regnum
00025B72 <AmiBlitz3.ab3@8114>           MOVE.l #forthstack,forthsp
00025B7C <AmiBlitz3.ab3@8115>           MOVE.l #precstack,precsp
00025B80 <AmiBlitz3.ab3@8116>    BSR.w prepstack
00025B82 <AmiBlitz3.ab3@8119>   MOVE.l A2,-(A7)
00025B86 <AmiBlitz3.ab3@8120>    BSR.w chkstop
00025B88 <AmiBlitz3.ab3@8121>   MOVEA.l (A7)+,A2
00025B8C <AmiBlitz3.ab3@8122>   CMPA.w #$0,A2
00025B90 <AmiBlitz3.ab3@8123>    BEQ.w 'done2
00025B96 <AmiBlitz3.ab3@8124>    CLR.b iee
00025B9C <AmiBlitz3.ab3@8125>   MOVE.l A2,asmbuff
00025BA0 <AmiBlitz3.ab3@8126>   LEA $10(A2),A5
00025BA4 <AmiBlitz3.ab3@8127>   TST.b $F(A2)
00025BA8 <AmiBlitz3.ab3@8128>    BNE.w 'skipo
00025BAA <AmiBlitz3.ab3@8129>   MOVEA.l (A5),A5                                          ;pointer to real text
00025BB0 <AmiBlitz3.ab3@8132>    CLR.w asmtype
00025BB4 <AmiBlitz3.ab3@8133>    CMP.b #".",(a5)
00025BB8 <AmiBlitz3.ab3@8134>    BNE.s 'skipo_l10
00025BBA <AmiBlitz3.ab3@8135>    MOVE.l a2,-(a7)
00025BBC <AmiBlitz3.ab3@8136>    ADDQ.l #1,a5
00025BC2 <AmiBlitz3.ab3@8137>    LEA newtypebase,a2
00025BC6 <AmiBlitz3.ab3@8138>    BSR getparameter2
00025BCA <AmiBlitz3.ab3@8139>    BEQ.w syntaxerr
00025BCE <AmiBlitz3.ab3@8140>    BSR findtype
00025BD2 <AmiBlitz3.ab3@8141>    BNE.w notypeerr
00025BD6 <AmiBlitz3.ab3@8142>    LEA $4(a2),a2
00025BDA <AmiBlitz3.ab3@8143>    BSR getparameter2
00025BDE <AmiBlitz3.ab3@8144>    BEQ.w syntaxerr
00025BE2 <AmiBlitz3.ab3@8145>    BSR.w findvariable2
00025BE6 <AmiBlitz3.ab3@8146>    BNE.w notypeerr
00025BEA <AmiBlitz3.ab3@8147>    MOVE.w $4(a2),d3
00025BEC <AmiBlitz3.ab3@8148>    EXT.l d3
00025BF0 <AmiBlitz3.ab3@8149>  BRA 'skipo_l30b
00025BF4 <AmiBlitz3.ab3@8152>   CMP.b #"\",(a5)
00025BF8 <AmiBlitz3.ab3@8153>     BNE 'skipo_l20
00025BFA <AmiBlitz3.ab3@8154>     ADDQ.l #1,a5
00025BFC <AmiBlitz3.ab3@8155>    MOVE.l a2,-(a7)
00025BFE <AmiBlitz3.ab3@8156>    MOVE.l a5,a4
00025C04 <AmiBlitz3.ab3@8157>    LEA usedpath,a5
00025C08 <AmiBlitz3.ab3@8158>    CMP.b #"*",(a5)
00025C0C <AmiBlitz3.ab3@8159>    BNE 'skipo_lm1
00025C0E <AmiBlitz3.ab3@8160>    ADDQ.l #1,a5
00025C12 <AmiBlitz3.ab3@8163>    BSR.w getparameter2
00025C16 <AmiBlitz3.ab3@8164>    BEQ.w syntaxerr
00025C1C <AmiBlitz3.ab3@8165>    LEA varbase,A2
00025C24 <AmiBlitz3.ab3@8166>    MOVE.b #1,newvariable
00025C28 <AmiBlitz3.ab3@8167>    BSR.w findvariable
00025C2E <AmiBlitz3.ab3@8168>    CLR.b newvariable
00025C34 <AmiBlitz3.ab3@8169>    CMP.l #-1,d0
00025C38 <AmiBlitz3.ab3@8170>    BEQ.w notypeerr
00025C3A <AmiBlitz3.ab3@8171>    MOVE.l a4,a5
00025C3E <AmiBlitz3.ab3@8172>    MOVE.l $a(a2),a2
00025C42 <AmiBlitz3.ab3@8173>    LEA $4(a2),a2
00025C46 <AmiBlitz3.ab3@8174>    BSR getparameter2
00025C4A <AmiBlitz3.ab3@8175>    BEQ.w syntaxerr
00025C4E <AmiBlitz3.ab3@8176>    BSR.w findvariable2
00025C52 <AmiBlitz3.ab3@8177>    BNE.w notypeerr
00025C56 <AmiBlitz3.ab3@8178>   MOVE.w $4(A2),D3
00025C58 <AmiBlitz3.ab3@8179>   EXT.l D3
00025C5E <AmiBlitz3.ab3@8182>    CMP.b #"[",-1(a5)
00025C62 <AmiBlitz3.ab3@8183>    BNE 'skipo_l30c
00025C64 <AmiBlitz3.ab3@8184>    MOVEQ #0,d0
00025C66 <AmiBlitz3.ab3@8185>    MOVE.b (a5)+,d0
00025C68 <AmiBlitz3.ab3@8186>    MOVE.l d3,-(a7)
00025C6A <AmiBlitz3.ab3@8187>    MOVEQ #0,d3
00025C70 <AmiBlitz3.ab3@8188>    JSR atoi
00025C72 <AmiBlitz3.ab3@8189>    MOVE.l (a7)+,d1
00025C76 <AmiBlitz3.ab3@8190>    MOVE.l $a(a2),a2
00025C7A <AmiBlitz3.ab3@8191>    MOVE.w 8(a2),d0
00025C7C <AmiBlitz3.ab3@8192>    MULS d0,d3
00025C7E <AmiBlitz3.ab3@8193>    ADD.l d1,d3
00025C80 <AmiBlitz3.ab3@8196>   MOVE.l (a7)+,a2
00025C84 <AmiBlitz3.ab3@8197>  BRA 'oko
00025C8A <AmiBlitz3.ab3@8200>   CMP.w #$c,$8(a2)
00025C8E <AmiBlitz3.ab3@8201>      BEQ 'skipo_lf1
00025C94 <AmiBlitz3.ab3@8202>      CMP.w #$d,$8(a2)
00025C98 <AmiBlitz3.ab3@8203>      BEQ 'skipo_lf1
00025C9E <AmiBlitz3.ab3@8206>   JSR evalconst3
00025CA4 <AmiBlitz3.ab3@8209>   MOVEA.l asmbuff,A2
00025CA8 <AmiBlitz3.ab3@8210>    BEQ.w 'oko
00025CAC <AmiBlitz3.ab3@8211>   CMP.w #$28,D0
00025CB0 <AmiBlitz3.ab3@8212>    BEQ.w 'oko
00025CB4 <AmiBlitz3.ab3@8213>   CMP.w #$2C,D0
00025CB8 <AmiBlitz3.ab3@8214>    BEQ.w 'oko
00025CBC <AmiBlitz3.ab3@8215>  BRA.w syntaxerr
00025CC4 <AmiBlitz3.ab3@8218>   MOVE.b #1,iee
00025CC8 <AmiBlitz3.ab3@8219>  BRA 'skipo_lf2
00025CCC <AmiBlitz3.ab3@8222>   MOVEA.l $4(A2),A1
00025CD0 <AmiBlitz3.ab3@8224>   MOVE.w $8(A2),D1                                         ;labelmode
00025CD4 <AmiBlitz3.ab3@8225>   CMP.w #$5,D1
00025CD8 <AmiBlitz3.ab3@8226>    BNE.w 'notdan
00025CDC <AmiBlitz3.ab3@8229>    BSR.w chkword                                           ;word
00025CDE <AmiBlitz3.ab3@8232>   MOVE.w D3,(A1)
00025CE2 <AmiBlitz3.ab3@8233>  BRA.w 'next
00025CE6 <AmiBlitz3.ab3@8236>   CMP.w #$6,D1
00025CEA <AmiBlitz3.ab3@8237>    BNE.w 'notdanxi
00025CEE <AmiBlitz3.ab3@8240>    BSR.w chkbyte                                           ;byte
00025CF2 <AmiBlitz3.ab3@8243>   MOVE.b D3,$1(A1)
00025CF6 <AmiBlitz3.ab3@8244>  BRA.w 'next
00025CFA <AmiBlitz3.ab3@8247>    CMP.w #$11,D1                                           ;byte
00025CFE <AmiBlitz3.ab3@8248>    BEQ.w 'isbyte2
00025D02 <AmiBlitz3.ab3@8249>    CMP.w #$c,d1
00025D06 <AmiBlitz3.ab3@8250>    BEQ 'single1
00025D0A <AmiBlitz3.ab3@8251>    CMP.w #$d,d1
00025D0E <AmiBlitz3.ab3@8252>    BEQ 'double1
00025D12 <AmiBlitz3.ab3@8253>   CMP.w #$7,D1
00025D16 <AmiBlitz3.ab3@8254>    BEQ.w 'word                                             ;word
00025D1A <AmiBlitz3.ab3@8255>   CMP.w #$8,D1
00025D1E <AmiBlitz3.ab3@8256>    BNE.w 'notabsl
00025D24 <AmiBlitz3.ab3@8259>   MOVE.w asmtype,D1                                        ;long
00025D28 <AmiBlitz3.ab3@8260>    BEQ.w 'notpcrel
00025D2C <AmiBlitz3.ab3@8261>      BSR.w asmoff
00025D2E <AmiBlitz3.ab3@8264>   MOVE.l D3,(A1)
00025D32 <AmiBlitz3.ab3@8265>  BRA.w 'next
00025D38 <AmiBlitz3.ab3@8268>   fmove.s fp0,0(a1)
00025D3C <AmiBlitz3.ab3@8269>  BRA.w 'next
00025D42 <AmiBlitz3.ab3@8272>   fmove.d fp0,0(a1)
00025D46 <AmiBlitz3.ab3@8273>  BRA.w 'next
00025D4A <AmiBlitz3.ab3@8276>   CMP.w #$9,D1
00025D4E <AmiBlitz3.ab3@8277>    BNE.w 'notdpc
00025D50 <AmiBlitz3.ab3@8278>   SUB.l A1,D3                                              ;branchword
00025D54 <AmiBlitz3.ab3@8279>    BSR.w chkword
00025D56 <AmiBlitz3.ab3@8280>   MOVE.w D3,(A1)
00025D5A <AmiBlitz3.ab3@8281>  BRA.w 'next
00025D5E <AmiBlitz3.ab3@8284>   CMP.w #$A,D1
00025D62 <AmiBlitz3.ab3@8285>    BNE.w 'imm
00025D64 <AmiBlitz3.ab3@8286>   SUB.l A1,D3                                              ;branchbyte
00025D68 <AmiBlitz3.ab3@8287>  BRA.w 'isbyte
00025D6C <AmiBlitz3.ab3@8290>   CMP.w #$11,d1
00025D70 <AmiBlitz3.ab3@8291>   BLE 'imm_org
00025D72 <AmiBlitz3.ab3@8292>   MOVE.l a3,-(a7)
00025D78 <AmiBlitz3.ab3@8293>   LEA pluginbase,a3
00025D7C <AmiBlitz3.ab3@8294>   MOVE.l 8(a2),a0
00025D7E <AmiBlitz3.ab3@8295>   JSR (a0)                                                 ;hook
00025D80 <AmiBlitz3.ab3@8296>   MOVE.l (a7)+,a3
00025D84 <AmiBlitz3.ab3@8297>  BRA 'next
00025D88 <AmiBlitz3.ab3@8300>   MOVE.w $A(A2),D0
00025D8C <AmiBlitz3.ab3@8301>    BEQ.w 'noflag
00025D90 <AmiBlitz3.ab3@8302>   CMP.w #$1,D0
00025D94 <AmiBlitz3.ab3@8303>    BEQ.w 'tocount
00025D98 <AmiBlitz3.ab3@8304>   CMP.w #$3,D0
00025D9C <AmiBlitz3.ab3@8305>    BEQ.w 'tomoveq
00025DA0 <AmiBlitz3.ab3@8306>   CMP.w #$4,D0
00025DA4 <AmiBlitz3.ab3@8307>    BEQ.w 'totrap
00025DA8 <AmiBlitz3.ab3@8310>   CMP.w #$B,D1                                             ;long
00025DAC <AmiBlitz3.ab3@8311>    BEQ.w 'isabsl
00025DB0 <AmiBlitz3.ab3@8312>  BRA 'word2                                                ;word
00025DB6 <AmiBlitz3.ab3@8315>   CMP.l #$F,D3
00025DBA <AmiBlitz3.ab3@8316>    BHI.w illtraperr
00025DBC <AmiBlitz3.ab3@8317>   OR.b D3,-(A1)
00025DC0 <AmiBlitz3.ab3@8318>  BRA.w 'next
00025DC6 <AmiBlitz3.ab3@8321>   CMP.l #$8,D3
00025DCA <AmiBlitz3.ab3@8322>    BHI.w illimmerr
00025DCC <AmiBlitz3.ab3@8323>   TST.l D3
00025DD0 <AmiBlitz3.ab3@8324>    BEQ.w illimmerr
00025DD4 <AmiBlitz3.ab3@8325>   ANDI.w #$7,D3
00025DD6 <AmiBlitz3.ab3@8326>   LSL.w #8,D3
00025DD8 <AmiBlitz3.ab3@8327>   LSL.w #1,D3
00025DDA <AmiBlitz3.ab3@8328>   OR.w D3,-(A1)
00025DDE <AmiBlitz3.ab3@8329>  BRA.w 'next
00025DE2 <AmiBlitz3.ab3@8332>    BSR.w chkbyte
00025DE4 <AmiBlitz3.ab3@8333>   MOVE.b D3,-(A1)
00025DE6 <AmiBlitz3.ab3@8336>   MOVEA.l (A2),A2
00025DEA <AmiBlitz3.ab3@8337>  BRA.w 'loop
00025DF0 <AmiBlitz3.ab3@8340>   CLR.w constmode
00025DF6 <AmiBlitz3.ab3@8343>   CLR.b curtemplabel
00025DF8 <AmiBlitz3.ab3@8344> RTS
00025DFA <AmiBlitz3.ab3@8353>   BTST D3,D6
00025DFE <AmiBlitz3.ab3@8354>    BEQ.w illeaerr
00025E02 <AmiBlitz3.ab3@8355>    BSR.w makemode
00025E06 <AmiBlitz3.ab3@8356>   CMP.w #$7,D3
00025E0A <AmiBlitz3.ab3@8357>    BCS.w 'skip
00025E0C <AmiBlitz3.ab3@8358>   MOVE.w D3,D2
00025E0E <AmiBlitz3.ab3@8359>   SUBQ.w #7,D2
00025E12 <AmiBlitz3.ab3@8360>   CMP.w #$5,D2
00025E16 <AmiBlitz3.ab3@8361>    BCS.w 'skip0
00025E18 <AmiBlitz3.ab3@8362>   MOVEQ.l #$04,D2
00025E1A <AmiBlitz3.ab3@8365>   MOVEQ.l #$07,D3
00025E1C <AmiBlitz3.ab3@8368>   MOVE.b D7,D0
00025E20 <AmiBlitz3.ab3@8369>   ANDI.w #$F,D0
00025E24 <AmiBlitz3.ab3@8370>   CMP.w #$F,D0
00025E28 <AmiBlitz3.ab3@8371>    BEQ.w 'skip2
00025E2A <AmiBlitz3.ab3@8372>   LSL.w D0,D3
00025E2C <AmiBlitz3.ab3@8373>   OR.w D3,D1
00025E2E <AmiBlitz3.ab3@8376>   LSR.w #4,D7
00025E32 <AmiBlitz3.ab3@8377>   ANDI.w #$F,D7
00025E36 <AmiBlitz3.ab3@8378>   CMP.w #$F,D7
00025E3A <AmiBlitz3.ab3@8379>    BEQ.w 'skip3
00025E3C <AmiBlitz3.ab3@8380>   LSL.w D7,D2
00025E3E <AmiBlitz3.ab3@8381>   OR.w D2,D1
00025E40 <AmiBlitz3.ab3@8384> RTS
00025E46 <AmiBlitz3.ab3@8388>   CMP.l #$7F,D3
00025E4A <AmiBlitz3.ab3@8389>    BGT.w illdiserr
00025E50 <AmiBlitz3.ab3@8390>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025E54 <AmiBlitz3.ab3@8391>    BLT.w illdiserr
00025E56 <AmiBlitz3.ab3@8392> RTS
00025E5C <AmiBlitz3.ab3@8396>   CMP.l #$7fff,D3
00025E60 <AmiBlitz3.ab3@8397>    BGT.w illdiserr
00025E66 <AmiBlitz3.ab3@8398>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025E6A <AmiBlitz3.ab3@8399>    BLT.w illdiserr
00025E6C <AmiBlitz3.ab3@8400> RTS
00025E6E <AmiBlitz3.ab3@8405>   MOVE.b (a5)+,d0
00025E70 <AmiBlitz3.ab3@8406>   CMP.b d1,d0
00025E74 <AmiBlitz3.ab3@8407>   BEQ 'll10
00025E76 <AmiBlitz3.ab3@8408>   TST.b d0
00025E7A <AmiBlitz3.ab3@8409>   BNE 'll20
00025E7C <AmiBlitz3.ab3@8412>   SUBQ #1,a5
00025E7E <AmiBlitz3.ab3@8413> RTS
00025E80 <AmiBlitz3.ab3@8418>   MOVE.b (a5)+,d0
00025E84 <AmiBlitz3.ab3@8419>   CMP.b #",",d0
00025E88 <AmiBlitz3.ab3@8420>   BEQ 'll10
00025E8C <AmiBlitz3.ab3@8421>   CMP.b #";",d0
00025E90 <AmiBlitz3.ab3@8422>   BEQ 'll10
00025E94 <AmiBlitz3.ab3@8423>  CMP.b #":",d0
00025E98 <AmiBlitz3.ab3@8424>   BEQ 'll10
00025E9A <AmiBlitz3.ab3@8427>   TST.b d0
00025E9E <AmiBlitz3.ab3@8428>   BNE 'll20
00025EA0 <AmiBlitz3.ab3@8431>   SUBQ #1,a5
00025EA2 <AmiBlitz3.ab3@8432> RTS
00025EA4 <AmiBlitz3.ab3@8436>   ADD.l a2,d1
00025EAA <AmiBlitz3.ab3@8437>   LEA tempspace,a1
00025EAC <AmiBlitz3.ab3@8438>   MOVE.l d1,a0
00025EAE <AmiBlitz3.ab3@8441>   MOVE.b (a0)+,(a1)+
00025EB2 <AmiBlitz3.ab3@8442>   BNE.s 'l10
00025EB4 <AmiBlitz3.ab3@8443>   SUBQ.l #1,a0
00025EB6 <AmiBlitz3.ab3@8444>   SUBQ.l #1,a1
00025EB8 <AmiBlitz3.ab3@8447>   MOVE.b (a5)+,(a1)+
00025EBC <AmiBlitz3.ab3@8448>   BNE.s 'l20
00025EBE <AmiBlitz3.ab3@8449>   CLR.b (a1)
00025EC4 <AmiBlitz3.ab3@8450>   LEA tempspace,a5
00025EC6 <AmiBlitz3.ab3@8451> RTS
00025ECA <AmiBlitz3.ab3@8455>   MOVEM.l D1-D2/A0,-(A7)
00025ECC <AmiBlitz3.ab3@8456>   MOVE.l d0,d2
00025ECE <AmiBlitz3.ab3@8457>   MOVEQ #0,d1
00025ED0 <AmiBlitz3.ab3@8458>   MOVE.l a5,a4
00025ED2 <AmiBlitz3.ab3@8461>   ADDQ.l #1,d1
00025ED4 <AmiBlitz3.ab3@8462>   MOVE.b (a5)+,d0
00025ED8 <AmiBlitz3.ab3@8463>   CMP.b #",",d0
00025EDC <AmiBlitz3.ab3@8464>   BEQ 'll10
00025EE0 <AmiBlitz3.ab3@8465>   CMP.b #";",d0
00025EE4 <AmiBlitz3.ab3@8466>   BEQ 'll10
00025EE8 <AmiBlitz3.ab3@8467>   CMP.b #":",d0
00025EEC <AmiBlitz3.ab3@8468>   BEQ 'll10
00025EF0 <AmiBlitz3.ab3@8469>   CMP.b #"(",d0
00025EF4 <AmiBlitz3.ab3@8470>   BEQ 'll10
00025EF6 <AmiBlitz3.ab3@8471>   TST.b d0
00025EFA <AmiBlitz3.ab3@8472>   BNE 'll20
00025EFC <AmiBlitz3.ab3@8475>   SUBQ #1,a5
00025F00 <AmiBlitz3.ab3@8476>   CMP.b #"'",(a4)
00025F04 <AmiBlitz3.ab3@8477>   BEQ 'llocal
00025F0A <AmiBlitz3.ab3@8478>   TST.w inmacro
00025F0E <AmiBlitz3.ab3@8479>   BNE 'lmacro
00025F10 <AmiBlitz3.ab3@8480>   MOVEQ.l #$14+4,D0
00025F12 <AmiBlitz3.ab3@8481>   ADD.l d1,d0
00025F14 <AmiBlitz3.ab3@8482>   MOVE.l d1,-(a7)
00025F16 <AmiBlitz3.ab3@8483>   MOVEQ.l #$01,D1
00025F1C <AmiBlitz3.ab3@8484>   MOVEA.l _execbase,A6
00025F22 <AmiBlitz3.ab3@8485>   MOVE.l mempool2,a0
00025F26 <AmiBlitz3.ab3@8486>   JSR _AllocPooled(a6)
00025F28 <AmiBlitz3.ab3@8488>   MOVE.l (a7)+,d1
00025F2A <AmiBlitz3.ab3@8489>   TST.l d0
00025F2E <AmiBlitz3.ab3@8490>   BEQ nomemory
00025F30 <AmiBlitz3.ab3@8491>   MOVEA.l D0,A0
00025F38 <AmiBlitz3.ab3@8493>   MOVE.w linenumat+2,$A(A0)
00025F3E <AmiBlitz3.ab3@8495>   MOVE.l templabel,(A0)
00025F44 <AmiBlitz3.ab3@8496>   MOVE.l A0,templabel
00025F4C <AmiBlitz3.ab3@8497>   MOVE.l destpointer,$4(A0)
00025F50 <AmiBlitz3.ab3@8498>   MOVE.l d2,$8(A0)
00025F54 <AmiBlitz3.ab3@8499>   LEA $E(A0),A0
00025F58 <AmiBlitz3.ab3@8500>   MOVE.b #$14,(A0)+
00025F5A <AmiBlitz3.ab3@8501>   CLR.b (a0)+
00025F5C <AmiBlitz3.ab3@8503>   MOVE.l a0,d2
00025F5E <AmiBlitz3.ab3@8504>   ADDQ.l #4,d2
00025F60 <AmiBlitz3.ab3@8505>   MOVE.l d2,(a0)+
00025F62 <AmiBlitz3.ab3@8508>   MOVE.b (a4)+,(a0)+
00025F64 <AmiBlitz3.ab3@8509>   SUBQ.l #1,d1
00025F68 <AmiBlitz3.ab3@8510>   BNE 'lc1
00025F6A <AmiBlitz3.ab3@8511>   CLR.b (a0)+
00025F70 <AmiBlitz3.ab3@8512>   MOVE.w linenumat,(a0)
00025F74 <AmiBlitz3.ab3@8513>   MOVEM.l (A7)+,D1-D2/A0
00025F76 <AmiBlitz3.ab3@8514>  RTS
00025F78 <AmiBlitz3.ab3@8517>   MOVEQ.l #$10+2,D0
00025F7A <AmiBlitz3.ab3@8518>   ADD.l d1,d0
00025F7E <AmiBlitz3.ab3@8519>   MOVEM.l a4/d3,-(a7)
00025F80 <AmiBlitz3.ab3@8520>   MOVE.l d1,d3
00025F82 <AmiBlitz3.ab3@8521>   MOVEQ.l #$01,D1
00025F88 <AmiBlitz3.ab3@8522>   MOVEA.l _execbase,A6
00025F8E <AmiBlitz3.ab3@8523>   MOVE.l mempool2,a0
00025F92 <AmiBlitz3.ab3@8524>   JSR _AllocPooled(a6)
00025F94 <AmiBlitz3.ab3@8526>   TST.l d0
00025F98 <AmiBlitz3.ab3@8527>   BEQ nomemory
00025F9A <AmiBlitz3.ab3@8528>   MOVEA.l D0,A0
00025FA2 <AmiBlitz3.ab3@8531>   MOVE.w linenumat+2,$C(A0)
00025FA8 <AmiBlitz3.ab3@8532>   MOVE.l templabel,(A0)
00025FAE <AmiBlitz3.ab3@8533>   MOVE.l A0,templabel
00025FB6 <AmiBlitz3.ab3@8534>   MOVE.l destpointer,$4(A0)
00025FBA <AmiBlitz3.ab3@8535>   MOVE.l d2,$8(A0)
00025FBE <AmiBlitz3.ab3@8536>   LEA $E(A0),A0
00025FC0 <AmiBlitz3.ab3@8537>   MOVE.b d3,(A0)+
00025FC6 <AmiBlitz3.ab3@8538>   ADD.b #$10,-1(a0)
00025FCA <AmiBlitz3.ab3@8539>   MOVE.b #$1,(a0)+
00025FCC <AmiBlitz3.ab3@8540>   SUBQ.w #1,d3
00025FCE <AmiBlitz3.ab3@8543>   MOVE.b (a4)+,(a0)+
00025FD0 <AmiBlitz3.ab3@8544>   SUBQ.l #1,d3
00025FD4 <AmiBlitz3.ab3@8545>   BNE.s 'lm2
00025FD6 <AmiBlitz3.ab3@8546>   CLR.b (a0)+
00025FDC <AmiBlitz3.ab3@8547>   MOVE.w linenumat,(a0)
00025FE0 <AmiBlitz3.ab3@8548>   MOVEM.l (a7)+,d3/a4
00025FE4 <AmiBlitz3.ab3@8549>   MOVEM.l (A7)+,D1-D2/A0
00025FE6 <AmiBlitz3.ab3@8550>  RTS
00025FEC <AmiBlitz3.ab3@8553>   LEA lastgloballabel,a1
00025FEE <AmiBlitz3.ab3@8556>   ADDQ.l #1,d1
00025FF0 <AmiBlitz3.ab3@8557>   TST.b (a1)+
00025FF4 <AmiBlitz3.ab3@8558>   BNE.s 'll11
00025FF6 <AmiBlitz3.ab3@8559>   MOVEQ.l #$10+2,D0
00025FF8 <AmiBlitz3.ab3@8560>   ADD.l d1,d0
00025FFC <AmiBlitz3.ab3@8561>   MOVEM.l a4/d3,-(a7)
00025FFE <AmiBlitz3.ab3@8562>   MOVE.l d1,d3
00026000 <AmiBlitz3.ab3@8563>   MOVEQ.l #$01,D1
00026006 <AmiBlitz3.ab3@8564>   MOVEA.l _execbase,A6
0002600C <AmiBlitz3.ab3@8565>   MOVE.l mempool2,a0
00026010 <AmiBlitz3.ab3@8566>   JSR _AllocPooled(a6)
00026012 <AmiBlitz3.ab3@8568>   TST.l d0
00026016 <AmiBlitz3.ab3@8569>   BEQ nomemory
00026018 <AmiBlitz3.ab3@8570>   MOVEA.l D0,A0
00026020 <AmiBlitz3.ab3@8573>   MOVE.w linenumat+2,$C(A0)
00026026 <AmiBlitz3.ab3@8574>   MOVE.l templabel,(A0)
0002602C <AmiBlitz3.ab3@8575>   MOVE.l A0,templabel
00026034 <AmiBlitz3.ab3@8576>   MOVE.l destpointer,$4(A0)
00026038 <AmiBlitz3.ab3@8577>   MOVE.l d2,$8(A0)
0002603C <AmiBlitz3.ab3@8578>   LEA $E(A0),A0
0002603E <AmiBlitz3.ab3@8579>   MOVE.b d3,(A0)+
00026044 <AmiBlitz3.ab3@8580>   ADD.b #$10,-1(a0)
00026048 <AmiBlitz3.ab3@8581>   MOVE.b #$1,(a0)+
0002604A <AmiBlitz3.ab3@8582>   SUBQ.w #1,d3
00026050 <AmiBlitz3.ab3@8583>   LEA lastgloballabel,a1
00026052 <AmiBlitz3.ab3@8586>   SUBQ.l #1,d3
00026054 <AmiBlitz3.ab3@8587>   MOVE.b (a1)+,(a0)+
00026058 <AmiBlitz3.ab3@8588>   BNE.s 'lm3
0002605A <AmiBlitz3.ab3@8589>   SUBQ.l #1,a0
0002605C <AmiBlitz3.ab3@8592>   MOVE.b (a4)+,(a0)+
0002605E <AmiBlitz3.ab3@8593>   SUBQ.l #1,d3
00026062 <AmiBlitz3.ab3@8594>   BNE.s 'lm1
00026064 <AmiBlitz3.ab3@8595>   CLR.b (a0)+
0002606A <AmiBlitz3.ab3@8596>   MOVE.w linenumat,(a0)
0002606E <AmiBlitz3.ab3@8597>   MOVEM.l (a7)+,d3/a4
00026072 <AmiBlitz3.ab3@8598>   MOVEM.l (A7)+,D1-D2/A0
00026074 <AmiBlitz3.ab3@8599> RTS
0002609E <AmiBlitz3.ab3@8603>   !basic
00026100 <AmiBlitz3.ab3@8604>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00026112 <AmiBlitz3.ab3@8605>   loop Delay_ 1
00026118 <AmiBlitz3.ab3@8606> Goto loop
0002611C <AmiBlitz3.ab3@8610>   MOVEM.l D0-D2/A0,-(A7)
00026120 <AmiBlitz3.ab3@8611>   MOVE.w $E(A0),-(A7)
00026124 <AmiBlitz3.ab3@8612>    BPL.w 'ok
00026126 <AmiBlitz3.ab3@8613>   CLR.w (A7)
00026128 <AmiBlitz3.ab3@8616>   MOVE.l A1,-(A7)
0002612A <AmiBlitz3.ab3@8617>   MOVEQ.l #$10+2,D0
00026130 <AmiBlitz3.ab3@8618>   ADD.w asmlen,D0
00026132 <AmiBlitz3.ab3@8619>   MOVE.w D0,D2
00026134 <AmiBlitz3.ab3@8620>   MOVEQ.l #$01,D1
0002613A <AmiBlitz3.ab3@8621>   MOVEA.l _execbase,A6
00026140 <AmiBlitz3.ab3@8622>   MOVE.l mempool2,a0
00026144 <AmiBlitz3.ab3@8623>   JSR _AllocPooled(a6)
00026146 <AmiBlitz3.ab3@8625>   MOVEA.l D0,A0
0002614E <AmiBlitz3.ab3@8628>   MOVE.w linenumat+2,$C(A0)
00026154 <AmiBlitz3.ab3@8629>   MOVE.l templabel,(A0)
0002615A <AmiBlitz3.ab3@8630>   MOVE.l A0,templabel
0002615E <AmiBlitz3.ab3@8631>   MOVE.l (A7),$4(A0)
00026162 <AmiBlitz3.ab3@8632>   MOVE.w d3,$8(A0)
00026168 <AmiBlitz3.ab3@8633>   MOVE.w $4(A7),$A(A0)
0002616C <AmiBlitz3.ab3@8634>   LEA $E(A0),A0
0002616E <AmiBlitz3.ab3@8635>   MOVE.b D2,(A0)+                                           ;length
00026174 <AmiBlitz3.ab3@8636>   MOVEA.l asmbuff,A1
00026176 <AmiBlitz3.ab3@8637>   ADDQ.w #1,A1
00026178 <AmiBlitz3.ab3@8638>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
0002617C <AmiBlitz3.ab3@8639>    BNE.w 'loop
0002617E <AmiBlitz3.ab3@8640>   MOVE.l (A1)+,(A0)+
00026184 <AmiBlitz3.ab3@8641>   MOVE.w linenumat,(a0)
00026188 <AmiBlitz3.ab3@8642>  BRA.w 'loopdone
0002618A <AmiBlitz3.ab3@8645>    MOVE.b (A1)+,(A0)+
0002618E <AmiBlitz3.ab3@8646>    BNE.w 'loop
00026194 <AmiBlitz3.ab3@8647>    MOVE.w linenumat,(a0)
00026196 <AmiBlitz3.ab3@8650>   MOVEA.l (A7)+,A1
00026198 <AmiBlitz3.ab3@8651>   ADDQ.w #2,A7
0002619C <AmiBlitz3.ab3@8652>   MOVEM.l (A7)+,D0-D2/A0
0002619E <AmiBlitz3.ab3@8653> RTS
000261A2 <AmiBlitz3.ab3@8657>   CMP.w #$5,D3
000261A6 <AmiBlitz3.ab3@8658>    BCS.w 'done
000261AA <AmiBlitz3.ab3@8659>   CMP.w #$B,D3
000261AE <AmiBlitz3.ab3@8660>    BHI.w 'done2
000261B2 <AmiBlitz3.ab3@8661>    BEQ.w 'imm
000261B6 <AmiBlitz3.ab3@8662>    BSR.w insasm
000261BA <AmiBlitz3.ab3@8663>   CMP.w #$5,D3
000261BE <AmiBlitz3.ab3@8664>    BEQ.w 'word
000261C2 <AmiBlitz3.ab3@8665>   CMP.w #$6,D3
000261C6 <AmiBlitz3.ab3@8666>    BEQ.w 'dxi
000261CA <AmiBlitz3.ab3@8667>   CMP.w #$7,D3
000261CE <AmiBlitz3.ab3@8668>    BEQ.w 'word
000261D2 <AmiBlitz3.ab3@8669>   CMP.w #$8,D3
000261D6 <AmiBlitz3.ab3@8670>    BEQ.w 'long
000261DA <AmiBlitz3.ab3@8671>   CMP.w #$9,D3
000261DE <AmiBlitz3.ab3@8672>    BEQ.w 'word
000261E4 <AmiBlitz3.ab3@8676>   CMPA.l destbufferend,A1
000261E8 <AmiBlitz3.ab3@8677>    BCS.w 'ok7
000261EA <AmiBlitz3.ab3@8678>   ADDQ.w #2,A1
000261EC <AmiBlitz3.ab3@8679>  RTS
000261EE <AmiBlitz3.ab3@8682>   MOVE.w D4,(A1)+
000261F0 <AmiBlitz3.ab3@8683>  RTS
000261F8 <AmiBlitz3.ab3@8686>   CMPI.w #$8,asmsize
000261FC <AmiBlitz3.ab3@8687>    BCC.w 'immlong
000261FE <AmiBlitz3.ab3@8688>   MOVEQ.l #$10,D3
00026202 <AmiBlitz3.ab3@8689>    BSR.w insasm
00026204 <AmiBlitz3.ab3@8690>   MOVEQ.l #$0B,D3
00026208 <AmiBlitz3.ab3@8691>  BRA.w 'word
0002620C <AmiBlitz3.ab3@8694>   BSR.w insasm
0002620E <AmiBlitz3.ab3@8697>   ADDQ.w #2,A1
00026210 <AmiBlitz3.ab3@8700>   ADDQ.w #2,A1
00026212 <AmiBlitz3.ab3@8701>  RTS
00026216 <AmiBlitz3.ab3@8704>   CMP.w #$F,D3
0002621A <AmiBlitz3.ab3@8705>    BNE.w 'done
00026220 <AmiBlitz3.ab3@8706>   CMPA.l destbufferend,A1
00026224 <AmiBlitz3.ab3@8707>    BCS.w 'ok3
00026226 <AmiBlitz3.ab3@8708>   ADDQ.w #2,A1
00026228 <AmiBlitz3.ab3@8709>   ADDQ.w #4,A7
0002622A <AmiBlitz3.ab3@8710>  RTS
0002622C <AmiBlitz3.ab3@8713>   MOVE.w D2,(A1)+
0002622E <AmiBlitz3.ab3@8714>   ADDQ.w #4,A7
00026230 <AmiBlitz3.ab3@8717> RTS
00026234 <AmiBlitz3.ab3@8726>   BSR.w storeloc
0002623E <AmiBlitz3.ab3@8728>   MOVE.l linenumat,oldline
00026240 <AmiBlitz3.ab3@8730>   MOVEQ.l #$00,D1
00026244 <AmiBlitz3.ab3@8731>    BSR.w get1bytemain    ;eol?
00026248 <AmiBlitz3.ab3@8732>    BEQ.w 'done
0002624A <AmiBlitz3.ab3@8733>   MOVEQ.l #$00,D3
0002624E <AmiBlitz3.ab3@8734>  BRA.w 'skiphelp
00026252 <AmiBlitz3.ab3@8737>    BSR.w get1bytemain
00026256 <AmiBlitz3.ab3@8738>    BNE.w 'skip
00026258 <AmiBlitz3.ab3@8742>   TST.w D3
0002625C <AmiBlitz3.ab3@8743>    BNE.w brackets_                                         ;syntax error brackets
00026260 <AmiBlitz3.ab3@8744>  BRA.w 'done2
00026266 <AmiBlitz3.ab3@8747>    MOVE.w instringon,D4
0002626A <AmiBlitz3.ab3@8750>     BEQ 'skiphelp
0002626C <AmiBlitz3.ab3@8753>     MOVEQ #0,d0
0002626E <AmiBlitz3.ab3@8754>      MOVE.b (a5)+,d0                                       ;fix "ue"
00026274 <AmiBlitz3.ab3@8755>      MOVE.w d0,lastchar
00026278 <AmiBlitz3.ab3@8756>      BEQ 'ready
0002627C <AmiBlitz3.ab3@8757>      CMP.b #$22,d0
00026280 <AmiBlitz3.ab3@8758>      BNE 'l1
00026286 <AmiBlitz3.ab3@8759>      NOT.w instringon
0002628A <AmiBlitz3.ab3@8760>  BRA 'loop
0002628E <AmiBlitz3.ab3@8765>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00026292 <AmiBlitz3.ab3@8766>            BNE 'l10
00026296 <AmiBlitz3.ab3@8767>            CMP.b #"@",(a5)
0002629A <AmiBlitz3.ab3@8768>            BNE 'l10
000262A0 <AmiBlitz3.ab3@8771>            TST.w ininclude
000262A4 <AmiBlitz3.ab3@8772>            BNE 'inc
000262AA <AmiBlitz3.ab3@8773>            MOVE.l sourceline3,a5
000262B0 <AmiBlitz3.ab3@8774>            CMP.l #0,a5
000262B4 <AmiBlitz3.ab3@8775>            BNE 'l11t
000262BA <AmiBlitz3.ab3@8776>            MOVEA.l sourceline,A5
000262BC <AmiBlitz3.ab3@8779>            MOVEA.l (A5),A5
000262C2 <AmiBlitz3.ab3@8780>            CMP.l #0,a5
000262C6 <AmiBlitz3.ab3@8781>            BEQ 'done2
000262CC <AmiBlitz3.ab3@8782>            MOVE.l a5,sourceline3
000262D0 <AmiBlitz3.ab3@8783>            LEA $9(A5),A5
000262D4 <AmiBlitz3.ab3@8784>   BRA 'l11
000262D6 <AmiBlitz3.ab3@8787>            ADDQ.l #1,a5
000262D8 <AmiBlitz3.ab3@8788>            TST.b (a5)
000262DC <AmiBlitz3.ab3@8789>            BNE 'inc
000262DE <AmiBlitz3.ab3@8793>            ADDQ.l #1,a5
000262E0 <AmiBlitz3.ab3@8794>            TST.b (a5)
000262E4 <AmiBlitz3.ab3@8795>            BEQ illeolerr
000262E6 <AmiBlitz3.ab3@8796>            MOVE.l a5,-(a7)
000262EA <AmiBlitz3.ab3@8799>       CMP.b #" ",(a5)+
000262EE <AmiBlitz3.ab3@8800>       BEQ 'l110
000262F4 <AmiBlitz3.ab3@8801>        CMP.b #";",-1(a5)
000262F6 <AmiBlitz3.ab3@8802>        MOVE.l (a7)+,a5
000262FA <AmiBlitz3.ab3@8803>        BEQ 'l111
000262FE <AmiBlitz3.ab3@8804>   BRA 'loop
00026302 <AmiBlitz3.ab3@8808>    CMP.w #$29,D0      ;')'
00026306 <AmiBlitz3.ab3@8809>    BNE.w 'skip2
00026308 <AmiBlitz3.ab3@8810>   TST.w D3
0002630C <AmiBlitz3.ab3@8811>    BEQ.w 'done2
0002630E <AmiBlitz3.ab3@8814>   SUBQ.w #1,D3
00026312 <AmiBlitz3.ab3@8815>  BRA.w 'loop
00026316 <AmiBlitz3.ab3@8818>    CMP.w #$7D,D0      ;'}'
0002631A <AmiBlitz3.ab3@8819>    BEQ.w 'skip3
0002631E <AmiBlitz3.ab3@8820>   CMP.w #$28,D0       ;'('
00026322 <AmiBlitz3.ab3@8821>    BNE.w 'skip4a
00026324 <AmiBlitz3.ab3@8824>    ADDQ.w #1,D3
00026328 <AmiBlitz3.ab3@8825>  BRA.w 'loop
0002632C <AmiBlitz3.ab3@8828>   CMP.w #$7B,D0        ;'{'
00026330 <AmiBlitz3.ab3@8829>    BEQ.w 'skip4
00026334 <AmiBlitz3.ab3@8830>   CMP.w #$2C,D0        ;','
00026338 <AmiBlitz3.ab3@8831>    BNE.w 'loop
0002633A <AmiBlitz3.ab3@8832>   TST.w D3
0002633E <AmiBlitz3.ab3@8833>    BNE.w 'loop
00026340 <AmiBlitz3.ab3@8834>   ADDQ.w #1,D1
00026344 <AmiBlitz3.ab3@8835>  BRA.w 'loop
00026346 <AmiBlitz3.ab3@8838>   ADDQ.w #1,D1
0002634C <AmiBlitz3.ab3@8842>   CLR.l sourceline3
00026356 <AmiBlitz3.ab3@8843>   MOVE.l oldline,linenumat
0002635A <AmiBlitz3.ab3@8845> BRA.w resloc
00026360 <AmiBlitz3.ab3@8858>    CLR.w numreps
00026362 <AmiBlitz3.ab3@8859>   MOVE.w D1,D0
00026366 <AmiBlitz3.ab3@8860>   ANDI.w #$FF00,D0
0002636A <AmiBlitz3.ab3@8861>    BEQ.w 'noreps
0002636C <AmiBlitz3.ab3@8862>   LSR.w #8,D0
0002636E <AmiBlitz3.ab3@8863>   LSR.w #4,D0           ;d0= start of reps
00026372 <AmiBlitz3.ab3@8864>    BEQ.w 'skip
00026374 <AmiBlitz3.ab3@8865>   SUB.b D0,D1           ;new number to fetch
0002637E <AmiBlitz3.ab3@8867>    MOVE.w regnum,regnumfunc
00026384 <AmiBlitz3.ab3@8868>    MOVE.b funcparloop,-(a7)
0002638C <AmiBlitz3.ab3@8869>    MOVE.b #0,funcparloop
00026392 <AmiBlitz3.ab3@8870>    MOVE.l leftsidetype,-(a7)
00026398 <AmiBlitz3.ab3@8871>    MOVE.l rightsidetype,-(a7)
0002639E <AmiBlitz3.ab3@8872>    MOVE.w leftsideflagmask,-(a7)
000263A4 <AmiBlitz3.ab3@8873>    MOVE.w rightsideflagmask,-(a7)
000263AA <AmiBlitz3.ab3@8874>    CLR.l leftsidetype
000263B0 <AmiBlitz3.ab3@8875>    CLR.l rightsidetype
000263B6 <AmiBlitz3.ab3@8876>    CLR.w leftsideflagmask
000263BC <AmiBlitz3.ab3@8877>    CLR.w rightsideflagmask
000263C2 <AmiBlitz3.ab3@8878>    MOVE.b blitzparloop,-(a7)
000263CA <AmiBlitz3.ab3@8879>    MOVE.b #1,blitzparloop
000263CE <AmiBlitz3.ab3@8881>    BSR.w fetchpees2      ;fetch first parms
000263D4 <AmiBlitz3.ab3@8883>    MOVE.b (a7)+,blitzparloop
000263DA <AmiBlitz3.ab3@8884>    MOVE.w (a7)+,rightsideflagmask
000263E0 <AmiBlitz3.ab3@8885>    MOVE.w (a7)+,leftsideflagmask
000263E6 <AmiBlitz3.ab3@8886>    MOVE.l (a7)+,rightsidetype
000263EC <AmiBlitz3.ab3@8887>    MOVE.l (a7)+,leftsidetype
000263F2 <AmiBlitz3.ab3@8888>    MOVE.b (a7)+,funcparloop
000263F6 <AmiBlitz3.ab3@8890>   CMP.w #$2C,D0          ;','
000263FA <AmiBlitz3.ab3@8891>    BNE.w syntaxerr
000263FC <AmiBlitz3.ab3@8896>   MOVE.w D1,D2
000263FE <AmiBlitz3.ab3@8897>   LSR.w #8,D2
00026402 <AmiBlitz3.ab3@8898>   ANDI.w #$7,D2         ;# repeatable....
00026404 <AmiBlitz3.ab3@8901>    CMP.b D2,D1
00026408 <AmiBlitz3.ab3@8902>    BCS.w 'repsdone      ;all reps done....
0002640A <AmiBlitz3.ab3@8903>   SUB.b D2,D1
0002640E <AmiBlitz3.ab3@8904>   MOVEM.l D2/A2,-(A7)
00026410 <AmiBlitz3.ab3@8905>   MOVE.w D2,D0
00026416 <AmiBlitz3.ab3@8907>   MOVE.b funcparloop,-(a7)
0002641E <AmiBlitz3.ab3@8908>   MOVE.b #0,funcparloop
00026424 <AmiBlitz3.ab3@8909>   MOVE.l leftsidetype,-(a7)
0002642A <AmiBlitz3.ab3@8910>   MOVE.l rightsidetype,-(a7)
00026430 <AmiBlitz3.ab3@8911>   MOVE.w leftsideflagmask,-(a7)
00026436 <AmiBlitz3.ab3@8912>   MOVE.w rightsideflagmask,-(a7)
0002643C <AmiBlitz3.ab3@8913>   CLR.l leftsidetype
00026442 <AmiBlitz3.ab3@8914>   CLR.l rightsidetype
00026448 <AmiBlitz3.ab3@8915>   CLR.w leftsideflagmask
0002644E <AmiBlitz3.ab3@8916>   CLR.w rightsideflagmask
00026454 <AmiBlitz3.ab3@8917>   MOVE.b blitzparloop,-(a7)
0002645C <AmiBlitz3.ab3@8918>   MOVE.b #1,blitzparloop
00026460 <AmiBlitz3.ab3@8920>   BSR.w fetchpees4
00026466 <AmiBlitz3.ab3@8922>   MOVE.b (a7)+,blitzparloop
0002646C <AmiBlitz3.ab3@8923>   MOVE.w (a7)+,rightsideflagmask
00026472 <AmiBlitz3.ab3@8924>   MOVE.w (a7)+,leftsideflagmask
00026478 <AmiBlitz3.ab3@8925>   MOVE.l (a7)+,rightsidetype
0002647E <AmiBlitz3.ab3@8926>   MOVE.l (a7)+,leftsidetype
00026484 <AmiBlitz3.ab3@8927>   MOVE.b (a7)+,funcparloop
00026488 <AmiBlitz3.ab3@8929>   MOVEM.l (A7)+,D2/A2
0002648E <AmiBlitz3.ab3@8930>   ADDQ.w #1,numreps
00026492 <AmiBlitz3.ab3@8931>  BRA.w 'rloop
00026498 <AmiBlitz3.ab3@8934>    MOVE.w numreps,D3
0002649C <AmiBlitz3.ab3@8935>    BEQ.w syntaxerr
0002649E <AmiBlitz3.ab3@8936>   ADDA.w D2,A2
000264A2 <AmiBlitz3.ab3@8937>   ANDI.w #$FF,D1
000264A6 <AmiBlitz3.ab3@8938>    BEQ.w 'done
000264AA <AmiBlitz3.ab3@8945>   CMP.w #$2C,D0       ;','
000264AE <AmiBlitz3.ab3@8946>    BNE.w syntaxerr
000264B0 <AmiBlitz3.ab3@8949>    MOVE.w D1,D0
000264B4 <AmiBlitz3.ab3@8950>    BNE.w 'fetchpees2b
000264B6 <AmiBlitz3.ab3@8953>  RTS
000264BC <AmiBlitz3.ab3@8957>   MOVE.b funcparloop,-(a7)
000264C2 <AmiBlitz3.ab3@8958>   MOVE.l leftsidetype,-(a7)
000264C8 <AmiBlitz3.ab3@8959>   MOVE.l rightsidetype,-(a7)
000264CE <AmiBlitz3.ab3@8960>   MOVE.w leftsideflagmask,-(a7)
000264D4 <AmiBlitz3.ab3@8961>   MOVE.w rightsideflagmask,-(a7)
000264DA <AmiBlitz3.ab3@8962>   CLR.l leftsidetype
000264E0 <AmiBlitz3.ab3@8963>   CLR.l rightsidetype
000264E6 <AmiBlitz3.ab3@8964>   CLR.w leftsideflagmask
000264EC <AmiBlitz3.ab3@8965>   CLR.w rightsideflagmask
000264F4 <AmiBlitz3.ab3@8966>   MOVE.b #0,funcparloop
000264FA <AmiBlitz3.ab3@8967>   MOVE.b blitzparloop,-(a7)
00026502 <AmiBlitz3.ab3@8968>   MOVE.b #1,blitzparloop
00026506 <AmiBlitz3.ab3@8969>   BSR.w fetchpees2
0002650C <AmiBlitz3.ab3@8970>   MOVE.b (a7)+,blitzparloop
00026512 <AmiBlitz3.ab3@8971>   MOVE.w (a7)+,rightsideflagmask
00026518 <AmiBlitz3.ab3@8972>   MOVE.w (a7)+,leftsideflagmask
0002651E <AmiBlitz3.ab3@8973>   MOVE.l (a7)+,rightsidetype
00026524 <AmiBlitz3.ab3@8974>   MOVE.l (a7)+,leftsidetype
0002652A <AmiBlitz3.ab3@8975>   MOVE.b (a7)+,funcparloop
0002652C <AmiBlitz3.ab3@8976> RTS
00026530 <AmiBlitz3.ab3@8980> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00026532 <AmiBlitz3.ab3@8983> partostack:  Ds.w 1                                        ;pmode org source
00026534 <AmiBlitz3.ab3@8987>   MOVEQ.l #$01,D2
00026538 <AmiBlitz3.ab3@8988> BRA.w fetchpees3
0002653A <AmiBlitz3.ab3@8991>   MOVEQ.l #$00,D2
0002653E <AmiBlitz3.ab3@8994>   ANDI.w #$F,D0
00026544 <AmiBlitz3.ab3@9002>   CLR.w parnum
00026546 <AmiBlitz3.ab3@9003>   MOVE.w D1,-(A7)
0002654A <AmiBlitz3.ab3@9004>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00026550 <AmiBlitz3.ab3@9005>   MOVE.w D2,partostack
00026552 <AmiBlitz3.ab3@9006>   MOVE.w D0,-(A7)
00026556 <AmiBlitz3.ab3@9007>   CMP.w #"@@",(a5)                                        
0002655A <AmiBlitz3.ab3@9008>   BNE 'loop                                      ;was 'l15
00026560 <AmiBlitz3.ab3@9009>   TST.w ininclude                                          ;merge macrolines
00026564 <AmiBlitz3.ab3@9010>   BNE errorjoin
0002656A <AmiBlitz3.ab3@9011>        MOVEA.l sourceline,A5
0002656C <AmiBlitz3.ab3@9014>            MOVEA.l (A5),A5
00026572 <AmiBlitz3.ab3@9015>            MOVE.l a5,sourceline
00026576 <AmiBlitz3.ab3@9016>            LEA $9(A5),A5
0002657C <AmiBlitz3.ab3@9017>            ADDQ.l #1,linenumat
0002657E <AmiBlitz3.ab3@9020>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00026582 <AmiBlitz3.ab3@9021>    BNE.w 'skip0
00026588 <AmiBlitz3.ab3@9022>   MOVE.w userp,D2                                          ;user selected type
0002658A <AmiBlitz3.ab3@9025>    MOVE.l A2,-(A7)
00026590 <AmiBlitz3.ab3@9026>    ADDQ.w #1,parnum
00026596 <AmiBlitz3.ab3@9027>    TST.b funccall
0002659A <AmiBlitz3.ab3@9028>    BEQ 'skip0_l1
000265A2 <AmiBlitz3.ab3@9029>    CMP.w #6,parnum
000265A6 <AmiBlitz3.ab3@9030>    BLE 'skip0_l1
000265AA <AmiBlitz3.ab3@9031>    CMP.w #7,d2
000265B0 <AmiBlitz3.ab3@9037>    TST.b fpu
000265B4 <AmiBlitz3.ab3@9038>    BEQ 'skip0_old
000265BA <AmiBlitz3.ab3@9039>    TST.w regnumfunc
000265BE <AmiBlitz3.ab3@9040>    BEQ 'skip0_old
000265C4 <AmiBlitz3.ab3@9041>    CMP.w #$48e7,-4(a4)
000265C8 <AmiBlitz3.ab3@9042>    BNE 'skip0_old
000265CA <AmiBlitz3.ab3@9043>    MOVEQ #0,d1
000265D0 <AmiBlitz3.ab3@9044>    MOVE.w regnum,d1
000265D6 <AmiBlitz3.ab3@9045>    CMP regnumfunc,d1                                       ;fpu reg function save
000265DA <AmiBlitz3.ab3@9046>    BGE 'skip0_old
000265DC <AmiBlitz3.ab3@9047>    ASL.w #7,d1
000265DE <AmiBlitz3.ab3@9048>    MOVE.l d0,-(a7)
000265E4 <AmiBlitz3.ab3@9049>    MOVE.w regnumfunc,d0
000265EA <AmiBlitz3.ab3@9050>    CLR.w regmask
000265F0 <AmiBlitz3.ab3@9053>    BSET d0,regmask
000265F2 <AmiBlitz3.ab3@9054>    SUBQ #1,d0
000265F6 <AmiBlitz3.ab3@9055>    BNE 'skip0_loop
000265F8 <AmiBlitz3.ab3@9056>     MOVEQ #0,d0
000265FE <AmiBlitz3.ab3@9059>       BTST d0,regmask
00026602 <AmiBlitz3.ab3@9060>       BEQ 'skip0_noa7
00026604 <AmiBlitz3.ab3@9061>       MOVEQ #0,d1
00026606 <AmiBlitz3.ab3@9062>       MOVE.w d0,d1
00026608 <AmiBlitz3.ab3@9063>       SUBQ.w #1,d1
0002660A <AmiBlitz3.ab3@9064>       ASL #7,d1
00026610 <AmiBlitz3.ab3@9065>       OR.l #$f2277400,d1                                   ;fmove.d
00026614 <AmiBlitz3.ab3@9067>       BSR writelong
0002661A <AmiBlitz3.ab3@9069>       ADDQ.l #2,stacktrack
00026620 <AmiBlitz3.ab3@9070>       MOVE.l stacktrack,d1
00026626 <AmiBlitz3.ab3@9071>       CMP.l #180,d1
0002662A <AmiBlitz3.ab3@9072>       BGT conmemerr                                        ;formel too complex
0002662C <AmiBlitz3.ab3@9073>       MOVE.l a0,-(a7)
00026632 <AmiBlitz3.ab3@9074>       LEA fpustackbase,a0
0002663A <AmiBlitz3.ab3@9075>       MOVE.w regmask,0(a0,d1)
0002663C <AmiBlitz3.ab3@9076>       MOVE.l (a7)+,a0
0002663E <AmiBlitz3.ab3@9079>       ADDQ.w #1,d0
00026644 <AmiBlitz3.ab3@9080>       CMP.w regnumfunc,d0
00026648 <AmiBlitz3.ab3@9081>       BLE 'skip0_loop2
0002664A <AmiBlitz3.ab3@9084>       MOVE.l (a7)+,d0
00026650 <AmiBlitz3.ab3@9087>      MOVE.l currentfunccall,-(a7)
00026656 <AmiBlitz3.ab3@9088>      MOVE.w parnum,-(a7)
0002665C <AmiBlitz3.ab3@9089>      TST.l rightsidetype
00026660 <AmiBlitz3.ab3@9090>      BSR.w handlep
00026666 <AmiBlitz3.ab3@9091>      MOVE.w (a7)+,parnum
0002666C <AmiBlitz3.ab3@9093>    MOVE.l (a7)+,currentfunccall
00026672 <AmiBlitz3.ab3@9096>     TST.b typecheck                            ;typecheck for function call
00026676 <AmiBlitz3.ab3@9097>     BEQ 'notypecheck
0002667C <AmiBlitz3.ab3@9098>     TST.b notypecheck
00026680 <AmiBlitz3.ab3@9099>     BNE 'notypecheck
00026686 <AmiBlitz3.ab3@9100>     TST.b blitzparloop
0002668A <AmiBlitz3.ab3@9101>     BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00026694 <AmiBlitz3.ab3@9102>     CMP.l #0,currentfunccall
00026698 <AmiBlitz3.ab3@9103>     BEQ 'isblitzlibcall
0002669C <AmiBlitz3.ab3@9104>     MOVEM.l a0/a1,-(a7)
000266A2 <AmiBlitz3.ab3@9105>     MOVE.l currentfunccall,a0
000266A8 <AmiBlitz3.ab3@9106>     MOVE.w parnum,d1
000266AE <AmiBlitz3.ab3@9107>     TST.b isconstantvalue
000266B2 <AmiBlitz3.ab3@9108>     BEQ 'noconstant
000266BC <AmiBlitz3.ab3@9109>     CMP.l #0,lastconstantvalue
000266C0 <AmiBlitz3.ab3@9110>     BEQ 'isnull
000266C4 <AmiBlitz3.ab3@9113>     MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000266CA <AmiBlitz3.ab3@9114>     CMP.l #0,a0
000266CE <AmiBlitz3.ab3@9115>     BEQ 'notype
000266D6 <AmiBlitz3.ab3@9116>     CMP.l #$100,4(a0)
000266DA <AmiBlitz3.ab3@9117>     BLE 'notype
000266E0 <AmiBlitz3.ab3@9118>     MOVE.l lasttoken,d1
000266E4 <AmiBlitz3.ab3@9119>     CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
000266E8 <AmiBlitz3.ab3@9120>     BEQ 'isnull
000266EE <AmiBlitz3.ab3@9121>     TST.l typetocast
000266F2 <AmiBlitz3.ab3@9122>     BEQ 'nocast
000266F8 <AmiBlitz3.ab3@9123>     MOVE.l typetocast,a1
000266FC <AmiBlitz3.ab3@9124>     BRA 'typecheck
00026702 <AmiBlitz3.ab3@9127>     MOVE.l rightsidetype,a1
00026708 <AmiBlitz3.ab3@9128>     CMP.l #0,a1
0002670C <AmiBlitz3.ab3@9129>     BEQ 'notype
00026714 <AmiBlitz3.ab3@9131>   'typecheck   CMP.l #$100,4(a1)
00026716 <AmiBlitz3.ab3@9133>     CMP.l a0,a1
0002671A <AmiBlitz3.ab3@9134>     BEQ 'ok
00026722 <AmiBlitz3.ab3@9136>     CMP.l #$100,4(a1)                 ; is a type here
00026726 <AmiBlitz3.ab3@9137>     BLE 'error
0002672A <AmiBlitz3.ab3@9138>     MOVE.l 4(a1),a1                   ; load the address of type.
0002672E <AmiBlitz3.ab3@9139>     CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00026732 <AmiBlitz3.ab3@9140>     BEQ 'ok
00026738 <AmiBlitz3.ab3@9143>    JMP error_convert_types            ; for syntax 4
0002673E <AmiBlitz3.ab3@9148>     CLR.l typetocast
00026742 <AmiBlitz3.ab3@9149>     MOVEM.l (a7)+,a0/a1
00026748 <AmiBlitz3.ab3@9155>    CLR.l lastfunction
0002674E <AmiBlitz3.ab3@9156>    TST.b fpu
00026752 <AmiBlitz3.ab3@9157>    BEQ 'skip0_noprint
00026754 <AmiBlitz3.ab3@9158>   MOVE.l (a7),a2
00026756 <AmiBlitz3.ab3@9159>   ADDQ.l #1,a2
0002675A <AmiBlitz3.ab3@9160>    CMP.b #5,d2
0002675E <AmiBlitz3.ab3@9161>   BNE 'skip0_noprint
00026764 <AmiBlitz3.ab3@9162>   CMP.b #$5d,24(a2)
00026768 <AmiBlitz3.ab3@9163>   BNE 'skip0_noprint
0002676E <AmiBlitz3.ab3@9164>   CMP.b #$81,25(a2)
00026772 <AmiBlitz3.ab3@9165>   BLT 'skip0_noprint
00026778 <AmiBlitz3.ab3@9166>   CMP.b #$86,25(a2)
0002677C <AmiBlitz3.ab3@9167>   BEQ 'skip0_ok
00026782 <AmiBlitz3.ab3@9168>   CMP.b #$87,25(a2)
00026786 <AmiBlitz3.ab3@9169>   BEQ 'skip0_ok
0002678C <AmiBlitz3.ab3@9170>   CMP.b #$88,25(a2)
00026790 <AmiBlitz3.ab3@9171>   BEQ 'skip0_ok
00026796 <AmiBlitz3.ab3@9172>   CMP.b #$83,25(a2)
0002679A <AmiBlitz3.ab3@9173>   BGT 'skip0_noprint
000267A0 <AmiBlitz3.ab3@9176>   MOVE.l destpointer,a4
000267A6 <AmiBlitz3.ab3@9177>   CMP.w #$2f00,-2(a4)
000267AA <AmiBlitz3.ab3@9178>   BNE 'skip0_noprint
000267B0 <AmiBlitz3.ab3@9179>   SUBQ.l #2,destpointer
000267B6 <AmiBlitz3.ab3@9181>   MOVE.l #$f2277400,d1
000267BA <AmiBlitz3.ab3@9182>   BSR writelong                                            ;fmove.d fp0,-(a7)
000267C0 <AmiBlitz3.ab3@9183>   ADDQ #4,a2offset
000267C6 <AmiBlitz3.ab3@9200>   CLR.b optistring
000267C8 <AmiBlitz3.ab3@9201>   MOVEA.l (A7)+,A2
000267CC <AmiBlitz3.ab3@9202>    CMP.w #"@",d0
000267D0 <AmiBlitz3.ab3@9203>   BNE 'skip0_l10
000267D4 <AmiBlitz3.ab3@9204>    CMP.b #"@",(a5)
000267D8 <AmiBlitz3.ab3@9205>   BNE 'skip0_l10
000267DE <AmiBlitz3.ab3@9206>   TST.w ininclude
000267E2 <AmiBlitz3.ab3@9207>   BNE errorjoin
000267E8 <AmiBlitz3.ab3@9208>   MOVEA.l sourceline,A5
000267EA <AmiBlitz3.ab3@9209>            MOVEA.l (A5),A5
000267F0 <AmiBlitz3.ab3@9210>            MOVE.l a5,sourceline
000267F6 <AmiBlitz3.ab3@9211>            ADDQ.l #1,linenumat
000267FA <AmiBlitz3.ab3@9212>            LEA $9(A5),A5
000267FC <AmiBlitz3.ab3@9213>            MOVEQ #0,d0
00026800 <AmiBlitz3.ab3@9214>            BSR get1bytemain
00026804 <AmiBlitz3.ab3@9217>    CMP.b #32,(a5)+ ;for space after a ,
00026808 <AmiBlitz3.ab3@9218>    BEQ 'skip0_l10:
0002680A <AmiBlitz3.ab3@9219>    SUBQ.l #1,a5
0002680E <AmiBlitz3.ab3@9221>    CMP.w #"@@",(a5)                                        ;if merge
00026812 <AmiBlitz3.ab3@9222>    BNE 'skip0_l15
00026816 <AmiBlitz3.ab3@9223>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
0002681C <AmiBlitz3.ab3@9224>    JSR mergeline
00026820 <AmiBlitz3.ab3@9225>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00026822 <AmiBlitz3.ab3@9245>       SUBQ.w #1,(A7)
00026826 <AmiBlitz3.ab3@9246>    BEQ.w 'done
0002682A <AmiBlitz3.ab3@9248>     CMP.w #$2C,D0
0002682E <AmiBlitz3.ab3@9250>    BNE 'overloadfunc
00026832 <AmiBlitz3.ab3@9251>  BRA.w 'loop
00026834 <AmiBlitz3.ab3@9254>   ADDQ.w #2,A7
0002683A <AmiBlitz3.ab3@9255>   MOVE.w (A7)+,partostack
0002683C <AmiBlitz3.ab3@9256>   MOVE.w (A7)+,D1
00026842 <AmiBlitz3.ab3@9257>   CLR.b isconstantvalue
0002684C <AmiBlitz3.ab3@9258>   MOVE.l currentfunccall,lastfunction
00026852 <AmiBlitz3.ab3@9259>   CLR.b funccall
00026858 <AmiBlitz3.ab3@9260>   CLR.l currentfunccall
0002685A <AmiBlitz3.ab3@9261>  RTS
00026860 <AmiBlitz3.ab3@9264>   CLR.b funccall
00026866 <AmiBlitz3.ab3@9265>   MOVE.w regnum,d1
0002686C <AmiBlitz3.ab3@9266>   MOVE.l currentfunccall,a4
00026870 <AmiBlitz3.ab3@9267>   CMP.b $20(a4),d1                                         ;increase if more pars
00026874 <AmiBlitz3.ab3@9268>   BLT notparerr
00026876 <AmiBlitz3.ab3@9271>   MOVE.b (a2)+,d2
0002687E <AmiBlitz3.ab3@9272>   ADD.w #1,parnum
00026884 <AmiBlitz3.ab3@9273>   TST.b fpu
00026888 <AmiBlitz3.ab3@9274>   BEQ 'nofpu
0002688C <AmiBlitz3.ab3@9275>   CMP.b #5,d2
00026890 <AmiBlitz3.ab3@9276>   BNE 'nofpu
00026892 <AmiBlitz3.ab3@9277>   MOVEQ #0,d1
00026898 <AmiBlitz3.ab3@9278>   MOVE.w regnum,d1
000268A0 <AmiBlitz3.ab3@9279>   CMP.w #6,regnum
000268A4 <AmiBlitz3.ab3@9280>   BLT 'nostack2
000268A8 <AmiBlitz3.ab3@9287>   MOVE.w #$2c3c,d1
000268AC <AmiBlitz3.ab3@9288>   BSR writeword
000268B2 <AmiBlitz3.ab3@9289>   MOVE.l #$bf800000,d1
000268B6 <AmiBlitz3.ab3@9290>   BSR writelong
000268BA <AmiBlitz3.ab3@9291>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000268C0 <AmiBlitz3.ab3@9292>   ADD.w parnum,d1
000268C6 <AmiBlitz3.ab3@9293>   JSR Atokejsr
000268CC <AmiBlitz3.ab3@9294>   TST.w dontwrite_nomemleft
000268D0 <AmiBlitz3.ab3@9295>   BNE 'l1
000268D6 <AmiBlitz3.ab3@9296>   MOVE.l data1start,d1
000268DC <AmiBlitz3.ab3@9297>   MOVE.l destpointer,a4
000268E0 <AmiBlitz3.ab3@9298>   ADD.l d1,-4(a4)
000268E6 <AmiBlitz3.ab3@9299>   MOVE.l destpointer,d1
000268E8 <AmiBlitz3.ab3@9300>   SUBQ.l #4,d1
000268EE <AmiBlitz3.ab3@9301>   SUB.l destbufferstart,d1
000268F0 <AmiBlitz3.ab3@9302>   MOVE.l d2,-(a7)
000268F2 <AmiBlitz3.ab3@9303>   MOVE.l d1,d2
000268F8 <AmiBlitz3.ab3@9304>   JSR addhunkoffset
000268FA <AmiBlitz3.ab3@9305>   MOVE.l (a7)+,d2
000268FE <AmiBlitz3.ab3@9306>  BRA 'l1
00026900 <AmiBlitz3.ab3@9309>   ASL.l #7,d1
00026906 <AmiBlitz3.ab3@9310>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
0002690A <AmiBlitz3.ab3@9311>   BSR writelong
0002690C <AmiBlitz3.ab3@9312>   MOVEQ #-1,d1                                             ;-1
00026910 <AmiBlitz3.ab3@9313>   BSR writeword
00026914 <AmiBlitz3.ab3@9314>  BRA 'l1
0002691A <AmiBlitz3.ab3@9317>   MOVE.w regnum,d1
00026922 <AmiBlitz3.ab3@9318>   CMP.w #6,regnum
00026926 <AmiBlitz3.ab3@9319>   BLT 'nostack
0002692A <AmiBlitz3.ab3@9324>   CMP.b #2,d2
0002692E <AmiBlitz3.ab3@9325>   BGT 'nw
00026932 <AmiBlitz3.ab3@9326>  BRA 'nos
00026936 <AmiBlitz3.ab3@9335>   CMP.w #7,d2
0002693A <AmiBlitz3.ab3@9336>   BNE 'nos
00026940 <AmiBlitz3.ab3@9337>   ADDQ #4,a2offset
00026946 <AmiBlitz3.ab3@9340>     MOVE.l #$48780000,d1
0002694A <AmiBlitz3.ab3@9341>     BSR writelong
00026950 <AmiBlitz3.ab3@9342>     ADDQ.w #4,a2offset
00026954 <AmiBlitz3.ab3@9343>     MOVE.w #$2f3c,d1
00026958 <AmiBlitz3.ab3@9344>     BSR writeword
0002695E <AmiBlitz3.ab3@9345>     MOVE.l #-1,d1
00026962 <AmiBlitz3.ab3@9346>     BSR writelong
00026966 <AmiBlitz3.ab3@9347>    BRA 'l1
0002696A <AmiBlitz3.ab3@9351>   CMP.b #4,d2
0002696E <AmiBlitz3.ab3@9352>       BNE 'noq
00026972 <AmiBlitz3.ab3@9353>       MOVE.w #$2c3c,d1
00026976 <AmiBlitz3.ab3@9354>       BSR writeword
0002697C <AmiBlitz3.ab3@9355>       MOVE.l #$ffff0000,d1
00026980 <AmiBlitz3.ab3@9356>       BSR writelong
00026984 <AmiBlitz3.ab3@9357>  BRA 'noq2
00026988 <AmiBlitz3.ab3@9360>      CMP.b #5,d2
0002698C <AmiBlitz3.ab3@9361>      BNE 'nof
00026990 <AmiBlitz3.ab3@9362>       MOVE.w #$2c3c,d1
00026994 <AmiBlitz3.ab3@9363>       BSR writeword
0002699A <AmiBlitz3.ab3@9364>       MOVE.l #$800000c1,d1
0002699E <AmiBlitz3.ab3@9365>       BSR writelong
000269A2 <AmiBlitz3.ab3@9366>  BRA 'noq2
000269A6 <AmiBlitz3.ab3@9369>   MOVE.w #$7cff,d1
000269AA <AmiBlitz3.ab3@9370>   BSR writeword
000269AE <AmiBlitz3.ab3@9373>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000269B4 <AmiBlitz3.ab3@9374>   ADD.w parnum,d1
000269BA <AmiBlitz3.ab3@9375>   JSR Atokejsr
000269C0 <AmiBlitz3.ab3@9376>    TST.w dontwrite_nomemleft
000269C4 <AmiBlitz3.ab3@9377>    BNE 'l1
000269CA <AmiBlitz3.ab3@9378>    MOVE.l data1start,d1
000269D0 <AmiBlitz3.ab3@9379>    MOVE.l destpointer,a4
000269D4 <AmiBlitz3.ab3@9380>    ADD.l d1,-4(a4)
000269DA <AmiBlitz3.ab3@9381>    MOVE.l destpointer,d1
000269DC <AmiBlitz3.ab3@9382>    SUBQ.l #4,d1
000269E2 <AmiBlitz3.ab3@9383>    SUB.l destbufferstart,d1
000269E4 <AmiBlitz3.ab3@9384>    MOVE.l d2,-(a7)
000269E6 <AmiBlitz3.ab3@9385>    MOVE.l d1,d2
000269EC <AmiBlitz3.ab3@9386>    JSR addhunkoffset
000269EE <AmiBlitz3.ab3@9387>    MOVE.l (a7)+,d2
000269F2 <AmiBlitz3.ab3@9388>  BRA 'l1
000269F4 <AmiBlitz3.ab3@9391>   ASL.l #8,d1
000269F6 <AmiBlitz3.ab3@9392>   ASL.l #1,d1
000269FC <AmiBlitz3.ab3@9393>   OR.l #$203c,d1                                           ;-1
00026A00 <AmiBlitz3.ab3@9394>   BSR writeword
00026A06 <AmiBlitz3.ab3@9395>   MOVE.l #-1,d1
00026A0A <AmiBlitz3.ab3@9396>   CMP.b #4,d2
00026A0E <AmiBlitz3.ab3@9397>   BNE 'nq1
00026A14 <AmiBlitz3.ab3@9398>   MOVE.l #$ffff0000,d1
00026A18 <AmiBlitz3.ab3@9401>   CMP.b #5,d2
00026A1C <AmiBlitz3.ab3@9402>   BNE 'nof2
00026A22 <AmiBlitz3.ab3@9403>   TST.b fpu
00026A26 <AmiBlitz3.ab3@9404>   BNE 'nof2
00026A2C <AmiBlitz3.ab3@9405>   MOVE.l #$800000c1,d1
00026A30 <AmiBlitz3.ab3@9408>    BSR writelong
00026A34 <AmiBlitz3.ab3@9409>    CMP.b #7,d2
00026A38 <AmiBlitz3.ab3@9410>    BNE 'l1
00026A3E <AmiBlitz3.ab3@9412>      MOVE.l #$48780000,d1
00026A42 <AmiBlitz3.ab3@9413>      BSR writelong
00026A48 <AmiBlitz3.ab3@9415>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00026A4E <AmiBlitz3.ab3@9416>    MOVE.l #$594f,d1                                        ; subq #4,a7
00026A52 <AmiBlitz3.ab3@9417>    BSR writeword
00026A54 <AmiBlitz3.ab3@9420>    SUBQ.w #1,(A7)
00026A58 <AmiBlitz3.ab3@9421>    BEQ.w 'done
00026A5E <AmiBlitz3.ab3@9422>    ADDQ.w #1,regnum
00026A62 <AmiBlitz3.ab3@9423>  BRA 'ol2
00026A64 <AmiBlitz3.ab3@9436>    MOVE.w D2,D1
00026A68 <AmiBlitz3.ab3@9437>    ANDI.w #$40,D1          ;push bit
00026A6E <AmiBlitz3.ab3@9438>    MOVE.b D1,partostack
00026A70 <AmiBlitz3.ab3@9439>    TST.b D2
00026A74 <AmiBlitz3.ab3@9440>     BMI.w handlevara
00026A78 <AmiBlitz3.ab3@9441>    BTST #$5,D2
00026A7C <AmiBlitz3.ab3@9442>     BNE.w handlearr
00026A82 <AmiBlitz3.ab3@9447>     MOVE.w regnumstore,-(a7)
00026A88 <AmiBlitz3.ab3@9448>     MOVE.w tempregnum,-(a7)
00026A8E <AmiBlitz3.ab3@9449>     MOVE.w parnum,-(a7)
00026A92 <AmiBlitz3.ab3@9451>     BSR.w getap                                        ;recursive entry
00026A98 <AmiBlitz3.ab3@9453>     MOVE.w (a7)+,parnum
00026A9E <AmiBlitz3.ab3@9454>     MOVE.w (a7)+,tempregnum
00026AA4 <AmiBlitz3.ab3@9455>     MOVE.w (a7)+,regnumstore
00026AA8 <AmiBlitz3.ab3@9461>     MOVE.w partostack(PC),D1
00026AAC <AmiBlitz3.ab3@9462>     BEQ.w putapincreg
00026AB2 <AmiBlitz3.ab3@9466>    ADDQ.w #4,a2offset
00026AB8 <AmiBlitz3.ab3@9468>    MOVE.w pushdn,D1
00026ABE <AmiBlitz3.ab3@9469>    OR.w regnum,D1      ;push long
00026AC2 <AmiBlitz3.ab3@9470>    CMP.w #$3,D2
00026AC6 <AmiBlitz3.ab3@9471>     BCC.w 'skip
00026ACC <AmiBlitz3.ab3@9472>    SUBQ.w #2,a2offset
00026AD0 <AmiBlitz3.ab3@9473>    ORI.w #$1000,D1    ;push word only
00026AD4 <AmiBlitz3.ab3@9474>    BSR.w writeword
00026AD6 <AmiBlitz3.ab3@9475>  RTS
00026ADA <AmiBlitz3.ab3@9479>   CMP.b #7,d2
00026ADE <AmiBlitz3.ab3@9480>    BNE 'l10a
00026AE6 <AmiBlitz3.ab3@9481>    CMP.b #2,optistring
00026AEC <AmiBlitz3.ab3@9485>   TST.b iee
00026AF0 <AmiBlitz3.ab3@9486>   BEQ 'olda
00026AF4 <AmiBlitz3.ab3@9487>   CMP.b #5,d2
00026AF8 <AmiBlitz3.ab3@9488>   BNE 'olda
00026AFC <AmiBlitz3.ab3@9492>   BSR.w writeword                                          ;write val to stack
00026AFE <AmiBlitz3.ab3@9493>  RTS
00026B04 <AmiBlitz3.ab3@9497>   SUBQ.w #4,a2offset
00026B06 <AmiBlitz3.ab3@9498> RTS
00026B0C <AmiBlitz3.ab3@9503>   ADDQ.w #1,regnum
00026B0E <AmiBlitz3.ab3@9504> RTS
00026B10 <AmiBlitz3.ab3@9508>   MOVEQ.l #$03,D2
00026B14 <AmiBlitz3.ab3@9509> BRA.w putap
00026B18 <AmiBlitz3.ab3@9515>   ANDI.w #$7,D2
00026B1A <AmiBlitz3.ab3@9516>   MOVE.w D2,-(A7)
00026B1E <AmiBlitz3.ab3@9518>    BSR.w ampersand2  ;ignore pnt to $
00026B22 <AmiBlitz3.ab3@9520>   CMP.b #$7,D2                                             ;ignore pnt to $
00026B26 <AmiBlitz3.ab3@9521>    BEQ.w 'nop2
00026B2A <AmiBlitz3.ab3@9523>   BTST #$E,D2
00026B2E <AmiBlitz3.ab3@9524>    BEQ.w 'nop
00026B32 <AmiBlitz3.ab3@9525>   MOVE.b #$3,D2      ;pointer to long                                      ;pointer to long
00026B36 <AmiBlitz3.ab3@9526>  BRA.w 'nop2
00026B38 <AmiBlitz3.ab3@9529>    TST.b D2
00026B3C <AmiBlitz3.ab3@9530>    BNE.w 'nop2
00026B40 <AmiBlitz3.ab3@9531>   MOVE.b #$3,D2
00026B42 <AmiBlitz3.ab3@9534>   MOVE.w (A7)+,D3
00026B44 <AmiBlitz3.ab3@9535>   TST.b D3
00026B48 <AmiBlitz3.ab3@9536>    BEQ.w 'unp
00026B4A <AmiBlitz3.ab3@9537>   CMP.b D2,D3
00026B4E <AmiBlitz3.ab3@9538>    BEQ.w putalp
00026B52 <AmiBlitz3.ab3@9539>  BRA.w mismatcherr
00026B58 <AmiBlitz3.ab3@9542>   ADDQ.w #2,a2offset
00026B5C <AmiBlitz3.ab3@9543>   MOVE.w ptype(PC),D1
00026B60 <AmiBlitz3.ab3@9544>    BSR.w writeword
00026B62 <AmiBlitz3.ab3@9545>   MOVEQ.l #$00,D1
00026B64 <AmiBlitz3.ab3@9546>   MOVE.b D2,D1
00026B68 <AmiBlitz3.ab3@9547>    BSR.w writeword
00026B6C <AmiBlitz3.ab3@9548> BRA.w putalp
00026B6E <AmiBlitz3.ab3@9552>    MOVE.w D2,-(A7)
00026B72 <AmiBlitz3.ab3@9553>    BSR.w baseadd
00026B78 <AmiBlitz3.ab3@9554>   BTST #$4,$1(A7)
00026B7C <AmiBlitz3.ab3@9555>    BEQ.w 'nohigh
00026B80 <AmiBlitz3.ab3@9556>    BSR.w highadd
00026B86 <AmiBlitz3.ab3@9559>    BTST #$3,$1(A7)
00026B8A <AmiBlitz3.ab3@9560>    BEQ.w 'notype
00026B8E <AmiBlitz3.ab3@9561>    BSR.w sendtype
00026B90 <AmiBlitz3.ab3@9564>    MOVE.w (A7)+,D2
00026B94 <AmiBlitz3.ab3@9565> BRA.w get1bytemain
00026B9A <AmiBlitz3.ab3@9571>   MOVE.w regnum,D1
00026B9C <AmiBlitz3.ab3@9572>   LSL.w #8,D1
00026B9E <AmiBlitz3.ab3@9573>   LSL.w #1,D1
00026BA2 <AmiBlitz3.ab3@9574>   ORI.w #$7000,D1
00026BA8 <AmiBlitz3.ab3@9575>   BTST #$0,$7(A3)
00026BAC <AmiBlitz3.ab3@9576>    BNE.w 'isap         ;A Pointer
00026BB4 <AmiBlitz3.ab3@9577>   CMPI.l #$100,$4(A2)
00026BB8 <AmiBlitz3.ab3@9578>    BCC.w arrerr1       ;illegal type to send
00026BBC <AmiBlitz3.ab3@9579>   MOVE.b $7(A2),D1
00026BC0 <AmiBlitz3.ab3@9582>   BSR.w writeword      ;moveq #type,d regat
00026BC2 <AmiBlitz3.ab3@9583>   MOVEQ.l #$02,D2      ;just a word.
00026BC6 <AmiBlitz3.ab3@9584> BRA.w pushap
00026BCA <AmiBlitz3.ab3@9587>   MOVE.b #$3,D1
00026BCE <AmiBlitz3.ab3@9588> BRA.w 'putit
00026BD2 <AmiBlitz3.ab3@9594>    BSR.w get1bytemain                                      ;write array paramter code
00026BD6 <AmiBlitz3.ab3@9595>    BSR.w getparameter
00026BDE <AmiBlitz3.ab3@9596>   BTST #$1,flagmask+1
00026BE2 <AmiBlitz3.ab3@9597>    BEQ.w syntaxerr
00026BE6 <AmiBlitz3.ab3@9598>    BSR.w fetchvars
00026BEA <AmiBlitz3.ab3@9600>    BSR.w get1bytemain
00026BEE <AmiBlitz3.ab3@9601>   CMP.w #$29,D0          ;')'  ;we just want a() or whatever                                 ;we just want a() or whatever
00026BF2 <AmiBlitz3.ab3@9602>    BNE.w syntaxerr
00026BF8 <AmiBlitz3.ab3@9603>   MOVE.w notshared,D1
00026BFC <AmiBlitz3.ab3@9604>    BNE.w noarrayerr
00026C02 <AmiBlitz3.ab3@9605>   MOVE.w regnum,D1
00026C04 <AmiBlitz3.ab3@9606>   LSL.w #8,D1
00026C06 <AmiBlitz3.ab3@9607>   LSL.w #1,D1
00026C0A <AmiBlitz3.ab3@9608>   OR.w fbase(PC),D1
00026C10 <AmiBlitz3.ab3@9610>    TST.b varmode
00026C14 <AmiBlitz3.ab3@9611>    BEQ 'l1
00026C18 <AmiBlitz3.ab3@9612>    BCLR #0,d1
00026C1C <AmiBlitz3.ab3@9616>    BSR.w writeword
00026C20 <AmiBlitz3.ab3@9617>   MOVE.w $4(A3),D1
00026C24 <AmiBlitz3.ab3@9618>    BSR.w writeword
00026C28 <AmiBlitz3.ab3@9619> BRA.w putalp      ;OK, we've got da base reg.
00026C2E <AmiBlitz3.ab3@9625>   MOVE.w regnum,D1
00026C30 <AmiBlitz3.ab3@9626>   LSL.w #8,D1
00026C32 <AmiBlitz3.ab3@9627>   LSL.w #1,D1
00026C36 <AmiBlitz3.ab3@9628>   OR.w fbase(PC),D1
00026C3C <AmiBlitz3.ab3@9630>    TST.b varmode
00026C40 <AmiBlitz3.ab3@9631>    BEQ 'l1
00026C44 <AmiBlitz3.ab3@9632>    BCLR #0,d1
00026C48 <AmiBlitz3.ab3@9636>    BSR.w writeword
00026C4C <AmiBlitz3.ab3@9638>   MOVE.w $8(A3),D1
00026C4E <AmiBlitz3.ab3@9639>   LSL.w #2,D1
00026C54 <AmiBlitz3.ab3@9640>   MOVE.w varmode,D2
00026C58 <AmiBlitz3.ab3@9641>    BEQ.w 'isglob
00026C5A <AmiBlitz3.ab3@9642>   NEG.w D1
00026C5E <AmiBlitz3.ab3@9645>    ADD.w $4(A3),D1
00026C62 <AmiBlitz3.ab3@9646>    BSR.w writeword
00026C68 <AmiBlitz3.ab3@9647>   MOVE.w regnum,D1
00026C6A <AmiBlitz3.ab3@9648>   LSL.w #8,D1
00026C6C <AmiBlitz3.ab3@9649>   LSL.w #1,D1
00026C70 <AmiBlitz3.ab3@9651>   MOVE.w partostack(PC),D2
00026C74 <AmiBlitz3.ab3@9652>    BNE.w 'dopadd           ;we just pushed last parameter!
00026C7C <AmiBlitz3.ab3@9653>   CMPI.w #$7,regnum
00026C80 <AmiBlitz3.ab3@9654>    BCC.w 'dopadd           ;last was d6, it must have been
00026C84 <AmiBlitz3.ab3@9656>   OR.w pushlast(PC),D1
00026C8A <AmiBlitz3.ab3@9657>   MOVE.w regnum,D2
00026C8C <AmiBlitz3.ab3@9658>   SUBQ.w #1,D2
00026C8E <AmiBlitz3.ab3@9659>   OR.w D2,D1
00026C92 <AmiBlitz3.ab3@9660>  BRA.w 'pp
00026C96 <AmiBlitz3.ab3@9665>   OR.w pushadd(PC),D1
00026C9A <AmiBlitz3.ab3@9668>   BSR.w writeword
00026CA2 <AmiBlitz3.ab3@9669>   MOVE.b #$1,partostack
00026CA6 <AmiBlitz3.ab3@9670> BRA.w putalp
00026CAA <AmiBlitz3.ab3@9674> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00026CAC <AmiBlitz3.ab3@9675> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00026CAE <AmiBlitz3.ab3@9676> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026CB2 <AmiBlitz3.ab3@9681>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026CB6 <AmiBlitz3.ab3@9682>    BEQ.w evalu2
00026CBA <AmiBlitz3.ab3@9683> BRA.w eval
00026CC0 <AmiBlitz3.ab3@9687>   MOVEA.l libpointer,A1
00026CC4 <AmiBlitz3.ab3@9690>    CMPA.w #$0,A1
00026CC8 <AmiBlitz3.ab3@9691>    BEQ.w 'done
00026CCE <AmiBlitz3.ab3@9692>   MOVE.w #-1,$A(A1)
00026CD4 <AmiBlitz3.ab3@9693>   BCLR #$7,$C(A1)
00026CD6 <AmiBlitz3.ab3@9694>   MOVEA.l (A1),A1
00026CDA <AmiBlitz3.ab3@9695>  BRA.w 'loop
00026CDC <AmiBlitz3.ab3@9698> RTS
00026CE0 <AmiBlitz3.ab3@9702>   MOVE.w #$FFFE,D1       ;#allocvars
00026CE4 <AmiBlitz3.ab3@9706>    BSR.w findlib
00026CEA <AmiBlitz3.ab3@9709>   TST.w cfetchmode
00026CEE <AmiBlitz3.ab3@9710>    BEQ.w 'noconst
00026CF4 <AmiBlitz3.ab3@9711>   BTST #$6,$C(A1)
00026CF8 <AmiBlitz3.ab3@9712>    BNE.w 'constok
00026CFC <AmiBlitz3.ab3@9714>  BRA.w badconerr                                            ;Can't use this Library!
00026CFE <AmiBlitz3.ab3@9717>  RTS
00026D04 <AmiBlitz3.ab3@9720>    BSET #$7,$C(A1)
00026D08 <AmiBlitz3.ab3@9721>    BNE.w 'skip                                         ;already done....
00026D0E <AmiBlitz3.ab3@9722>    CMPI.w #-1,$A(A1)
00026D12 <AmiBlitz3.ab3@9723>    BNE.w 'skip                                         ;something already here
00026D18 <AmiBlitz3.ab3@9727>    TST.w dirmode
00026D1C <AmiBlitz3.ab3@9728>    BEQ.b 'oktouse
00026D22 <AmiBlitz3.ab3@9731>    TST.b exdebug
00026D26 <AmiBlitz3.ab3@9732>    BEQ 'l1
00026D2A <AmiBlitz3.ab3@9733>  BRA.b 'oktouse
00026D30 <AmiBlitz3.ab3@9737>   BCLR #$7,$C(A1)
00026D34 <AmiBlitz3.ab3@9738>  BRA.w dirliberr
00026D3A <AmiBlitz3.ab3@9742>   MOVE.b debugmode,-(a7)
00026D3E <AmiBlitz3.ab3@9744>   MOVEM.l D1/A0/A2,-(A7)
00026D46 <AmiBlitz3.ab3@9754>   BTST #$7,use_debugger
00026D4A <AmiBlitz3.ab3@9755>   BNE 'debugon
00026D4C <AmiBlitz3.ab3@9756>   CLR.w D1
00026D50 <AmiBlitz3.ab3@9757>  BRA.b 'debugoff
00026D52 <AmiBlitz3.ab3@9760>   SNE D1
00026D58 <AmiBlitz3.ab3@9763>   MOVE.b d1,debugmode
00026D5A <AmiBlitz3.ab3@9768>   MOVEA.l A1,A0
00026D5E <AmiBlitz3.ab3@9769>   ADDA.l $12(A1),A0
00026D62 <AmiBlitz3.ab3@9770>   TST.w -$2(A0)
00026D66 <AmiBlitz3.ab3@9771>    BEQ.w 'notmax
00026D6A <AmiBlitz3.ab3@9772>   MOVEM.l A0-A1,-(A7)
00026D6E <AmiBlitz3.ab3@9773>   MOVE.w #$FB4F,D1            ; #64335,
00026D72 <AmiBlitz3.ab3@9774>    BSR.w uselib
00026D76 <AmiBlitz3.ab3@9775>   MOVEM.l (A7)+,A0-A1
00026D7C <AmiBlitz3.ab3@9776>   ADDQ.w #1,globalvarpointer
00026D84 <AmiBlitz3.ab3@9777>   BCLR #$0,globalvarpointer+1
00026D8C <AmiBlitz3.ab3@9778>   MOVE.w globalvarpointer,-$6(A0)
00026D92 <AmiBlitz3.ab3@9779>   ADDQ.w #4,globalvarpointer
00026D96 <AmiBlitz3.ab3@9780>   TST.l -$E(A0)
00026D9A <AmiBlitz3.ab3@9781>    BEQ.w 'notmax
00026DA0 <AmiBlitz3.ab3@9782>   ADDQ.w #4,globalvarpointer
00026DA8 <AmiBlitz3.ab3@9785>   MOVE.l libend,$28(A1)      ;pc of lib
00026DAA <AmiBlitz3.ab3@9786>   MOVEA.l A1,A0
00026DAE <AmiBlitz3.ab3@9787>   ADDA.l $12(A1),A0          ;start of lib
00026DB0 <AmiBlitz3.ab3@9789>   MOVE.l A1,D1
00026DB4 <AmiBlitz3.ab3@9790>   ADD.l $6(A1),D1            ;end of lib
00026DB8 <AmiBlitz3.ab3@9791>   TST.l $2C(A1)
00026DBC <AmiBlitz3.ab3@9792>    BEQ.w 'nor
00026DC2 <AmiBlitz3.ab3@9793>   TST.b debugmode
00026DC6 <AmiBlitz3.ab3@9794>    BNE.w 'nor                ;errs turned on
00026DC8 <AmiBlitz3.ab3@9795>   MOVE.l A1,D1
00026DCC <AmiBlitz3.ab3@9796>   ADD.l $2C(A1),D1           ;copy only non-errchks
00026DD2 <AmiBlitz3.ab3@9799>   MOVEA.l libend,A2
00026DD8 <AmiBlitz3.ab3@9802>   CMPA.l data1start,A2
00026DDC <AmiBlitz3.ab3@9803>    BCS.w 'okp
00026DE4 <AmiBlitz3.ab3@9804>   MOVE.w #$FFFF,dontwrite_nomemleft     ; -1
00026DE6 <AmiBlitz3.ab3@9807>   ADDQ.w #2,A0
00026DE8 <AmiBlitz3.ab3@9808>   ADDQ.w #2,A2
00026DEA <AmiBlitz3.ab3@9809>   CMPA.l D1,A0
00026DEE <AmiBlitz3.ab3@9810>    BCS.w 'bad
00026DF2 <AmiBlitz3.ab3@9811>  BRA.w 'toreloc
00026DF4 <AmiBlitz3.ab3@9814>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026DF6 <AmiBlitz3.ab3@9815>   CMPA.l D1,A0
00026DFA <AmiBlitz3.ab3@9816>    BCS.w 'loop
00026E00 <AmiBlitz3.ab3@9819>   MOVE.l A2,libend
00026E04 <AmiBlitz3.ab3@9820>   MOVE.l $20(A1),D1
00026E08 <AmiBlitz3.ab3@9821>    BEQ.w 'noreloc
00026E0C <AmiBlitz3.ab3@9823>   MOVEM.l D0/D2-D3,-(A7)
00026E10 <AmiBlitz3.ab3@9824>   MOVEA.l $24(A1),A0         ;start of reloc table
00026E12 <AmiBlitz3.ab3@9825>   MOVEQ.l #$00,D3            ;no tokejsrs (yet!)
00026E14 <AmiBlitz3.ab3@9831>   MOVE.l (A0)+,D2
00026E18 <AmiBlitz3.ab3@9832>   TST.l $2C(A1)
00026E1C <AmiBlitz3.ab3@9833>    BEQ.w 'skipr
00026E22 <AmiBlitz3.ab3@9834>   TST.b debugmode
00026E26 <AmiBlitz3.ab3@9835>    BNE.w 'skipr
00026E2A <AmiBlitz3.ab3@9836>   CMP.l $2C(A1),D2
00026E2E <AmiBlitz3.ab3@9837>    BCC.w 'next
00026E32 <AmiBlitz3.ab3@9840>   TST.w $0(A1,D2.L)
00026E36 <AmiBlitz3.ab3@9841>    BPL.w 'notajsr
00026E38 <AmiBlitz3.ab3@9842>   TST.l D3
00026E3C <AmiBlitz3.ab3@9843>    BNE.w 'notajsr      ;already done...
00026E3E <AmiBlitz3.ab3@9844>   MOVE.l A0,D0
00026E40 <AmiBlitz3.ab3@9845>   MOVE.l D1,D3         ;number left to do!
00026E44 <AmiBlitz3.ab3@9848>   SUB.l $12(A1),D2
00026E48 <AmiBlitz3.ab3@9849>    BMI.w 'next
00026E4C <AmiBlitz3.ab3@9850>   ADD.l $28(A1),D2
00026E4E <AmiBlitz3.ab3@9851>   MOVE.l D2,-(A7)
00026E54 <AmiBlitz3.ab3@9852>   SUB.l destbufferstart,D2
00026E58 <AmiBlitz3.ab3@9853>    BSR.w addhunkoffset
00026E5A <AmiBlitz3.ab3@9854>   MOVEA.l (A7)+,A2
00026E60 <AmiBlitz3.ab3@9855>   TST.w dontwrite_nomemleft
00026E64 <AmiBlitz3.ab3@9856>    BNE.w 'next
00026E68 <AmiBlitz3.ab3@9857>   MOVE.l $28(A1),D2
00026E6C <AmiBlitz3.ab3@9858>   SUB.l $12(A1),D2
00026E6E <AmiBlitz3.ab3@9859>   ADD.l D2,(A2)
00026E70 <AmiBlitz3.ab3@9862>    SUBQ.l #1,D1
00026E74 <AmiBlitz3.ab3@9863>    BNE.w 'reloop
00026E76 <AmiBlitz3.ab3@9864>   MOVE.l D3,D2
00026E7A <AmiBlitz3.ab3@9865>    BEQ.w 'nohand
00026E7C <AmiBlitz3.ab3@9866>   MOVEA.l D0,A2
00026E7E <AmiBlitz3.ab3@9867>   SUBQ.w #4,A2
00026E82 <AmiBlitz3.ab3@9869>    BSR.w handlejsrs
00026E86 <AmiBlitz3.ab3@9872>    MOVEM.l (A7)+,D0/D2-D3
00026E8A <AmiBlitz3.ab3@9875>    MOVEM.l (A7)+,D1/A0/A2
00026E8E <AmiBlitz3.ab3@9877>   MOVEM.l D1-D2,-(A7)
00026E92 <AmiBlitz3.ab3@9878>   TST.w $1A(A1)
00026E96 <AmiBlitz3.ab3@9879>    BNE.w 'skip2a
00026E9A <AmiBlitz3.ab3@9880>   CLR.w $A(A1)
00026E9E <AmiBlitz3.ab3@9881>  BRA.w 'skip2
00026EA4 <AmiBlitz3.ab3@9884>   ADDQ.w #1,globalvarpointer
00026EAC <AmiBlitz3.ab3@9885>   BCLR #$0,globalvarpointer+1
00026EB4 <AmiBlitz3.ab3@9886>   MOVE.w globalvarpointer,$A(A1)
00026EB8 <AmiBlitz3.ab3@9888>   CMP.w #-$12D,D1            ; was  #65235,
00026EBC <AmiBlitz3.ab3@9889>    BNE.w 'nots1
00026EC4 <AmiBlitz3.ab3@9891>   MOVE.w $A(A1),movestdn+2
00026ECC <AmiBlitz3.ab3@9892>   MOVE.w $A(A1),pusha3+2
00026ED4 <AmiBlitz3.ab3@9893>   MOVE.w $A(A1),pusha32+2
00026EDC <AmiBlitz3.ab3@9894>   MOVE.w $A(A1),pulla3+2
00026EE4 <AmiBlitz3.ab3@9895>   MOVE.w $A(A1),geta3+2
00026EE8 <AmiBlitz3.ab3@9898>    CMP.w #-$3E9,D1           ; was #64535,
00026EEC <AmiBlitz3.ab3@9899>    BNE.w 'notd
00026EF4 <AmiBlitz3.ab3@9901>   MOVE.w $A(A1),dataget+2
00026EFC <AmiBlitz3.ab3@9902>   MOVE.w $A(A1),dataput+2
00026F04 <AmiBlitz3.ab3@9903>   MOVE.w $A(A1),rescode+6
00026F0C <AmiBlitz3.ab3@9904>   MOVE.w $A(A1),rescode2+2
00026F12 <AmiBlitz3.ab3@9907>   ADDQ.w #2,globalvarpointer
00026F16 <AmiBlitz3.ab3@9908>   TST.w $1A(A1)
00026F1A <AmiBlitz3.ab3@9909>    BMI.w 'jword
00026F20 <AmiBlitz3.ab3@9910>   ADDQ.w #2,globalvarpointer
00026F24 <AmiBlitz3.ab3@9913>   MOVEM.l D1/A1,-(A7)
00026F28 <AmiBlitz3.ab3@9914>   BSR.w usevars
00026F2C <AmiBlitz3.ab3@9915>   MOVEM.l (A7)+,D1/A1
00026F2E <AmiBlitz3.ab3@9918>   MOVE.w D1,D2
00026F32 <AmiBlitz3.ab3@9919>   MOVE.l $16(A1),D1
00026F36 <AmiBlitz3.ab3@9920>    BSR.w uselib2
00026F3A <AmiBlitz3.ab3@9921>   MOVE.l $1C(A1),D1
00026F3E <AmiBlitz3.ab3@9922>    BSR.w uselib2
00026F42 <AmiBlitz3.ab3@9923>   MOVEM.l (A7)+,D1-D2
00026F48 <AmiBlitz3.ab3@9925>   MOVE.b (a7)+,debugmode
00026F4A <AmiBlitz3.ab3@9928> RTS
00026F4C <AmiBlitz3.ab3@9935>   MOVEQ.l #$00,D2       ;do list till this...
00026F52 <AmiBlitz3.ab3@9938>   MOVEA.l tokeslist,A2
00026F54 <AmiBlitz3.ab3@9939>   CMPA.l D2,A2
00026F58 <AmiBlitz3.ab3@9940>    BEQ.w 'done
00026F5A <AmiBlitz3.ab3@9941>   MOVE.l A2,-(A7)       ;next till...
00026F5C <AmiBlitz3.ab3@9944>   MOVEQ.l #$00,D3
00026F60 <AmiBlitz3.ab3@9947>   MOVEA.l $8(A2),A3
00026F62 <AmiBlitz3.ab3@9948>   CMPA.l D3,A3
00026F66 <AmiBlitz3.ab3@9949>    BEQ.w 'done4
00026F68 <AmiBlitz3.ab3@9951>   MOVE.l A3,-(A7)
00026F6C <AmiBlitz3.ab3@9952>   MOVEM.l D2-D3/A2-A3,-(A7)
00026F70 <AmiBlitz3.ab3@9953>   MOVE.w $4(A2),D1
00026F74 <AmiBlitz3.ab3@9954>   MOVE.w $6(A2),D2
00026F78 <AmiBlitz3.ab3@9956>    BSR.w tokecode
00026F7C <AmiBlitz3.ab3@9958>   MOVEM.l (A7)+,D2-D3/A2-A3
00026F82 <AmiBlitz3.ab3@9960>   MOVE.w dontwrite_nomemleft,D0
00026F86 <AmiBlitz3.ab3@9961>    BEQ.w 'ok
00026F88 <AmiBlitz3.ab3@9964>   MOVEA.l (A3),A3
00026F8A <AmiBlitz3.ab3@9965>   CMPA.l D3,A3
00026F8E <AmiBlitz3.ab3@9966>    BNE.w 'loop5
00026F92 <AmiBlitz3.ab3@9967>  BRA.w 'skipz
00026F96 <AmiBlitz3.ab3@9970>   MOVEA.l $4(A3),A0
00026F98 <AmiBlitz3.ab3@9971>   MOVE.l D7,(A0)
00026F9A <AmiBlitz3.ab3@9972>   MOVEA.l (A3),A3
00026F9C <AmiBlitz3.ab3@9973>   CMPA.l D3,A3
00026FA0 <AmiBlitz3.ab3@9974>    BNE.w 'ok
00026FA2 <AmiBlitz3.ab3@9977>   MOVE.l (A7)+,D3
00026FA6 <AmiBlitz3.ab3@9978>  BRA.w 'loop3
00026FA8 <AmiBlitz3.ab3@9981>    MOVEA.l (A2),A2
00026FAA <AmiBlitz3.ab3@9982>   CMPA.l D2,A2
00026FAE <AmiBlitz3.ab3@9983>    BNE.w 'loop2
00026FB0 <AmiBlitz3.ab3@9984>   MOVE.l (A7)+,D2
00026FB4 <AmiBlitz3.ab3@9985>  BRA.w 'loop
00026FB6 <AmiBlitz3.ab3@9988> RTS
00026FB8 <AmiBlitz3.ab3@9996>   MOVE.w D2,-(A7)
00026FBC <AmiBlitz3.ab3@9997>    BSR.w searchinstr
00026FBE <AmiBlitz3.ab3@9998>   MOVE.w (A7)+,D2
00026FC6 <AmiBlitz3.ab3@10000>   BCLR #$7,blitzmode
00026FCA <AmiBlitz3.ab3@10001>   BCLR #$E,D2
00026FCE <AmiBlitz3.ab3@10002>    BEQ.w 'isamiga
00026FD6 <AmiBlitz3.ab3@10003>   BSET #$7,blitzmode
00026FD8 <AmiBlitz3.ab3@10006>   TST.w (A3)
00026FDC <AmiBlitz3.ab3@10007>    BEQ.w 'simple
00026FE2 <AmiBlitz3.ab3@10008>   BTST #$2,$1(A3)
00026FE6 <AmiBlitz3.ab3@10009>    BNE.w tokeerr
00026FEC <AmiBlitz3.ab3@10010>   BTST #$3,$1(A3)
00026FF0 <AmiBlitz3.ab3@10011>    BNE.w tokeerr
00026FF4 <AmiBlitz3.ab3@10015>   LEA $6(A3),A3     ;skip node
00026FF6 <AmiBlitz3.ab3@10018>   MOVE.w (A3)+,D0
00026FFA <AmiBlitz3.ab3@10019>    BMI.w tokeerr
00026FFE <AmiBlitz3.ab3@10020>   ANDI.w #$FF,D0
00027000 <AmiBlitz3.ab3@10021>   ADDA.w D0,A3
00027002 <AmiBlitz3.ab3@10022>   ADDQ.w #1,A3
00027004 <AmiBlitz3.ab3@10023>   EXG.l D0,A3
00027008 <AmiBlitz3.ab3@10024>   BCLR #$0,D0
0002700A <AmiBlitz3.ab3@10025>   EXG.l D0,A3
0002700C <AmiBlitz3.ab3@10026>   SUBQ.w #1,D2
00027010 <AmiBlitz3.ab3@10027>    BPL.w 'loop2
00027012 <AmiBlitz3.ab3@10029>   TST.w (A3)
00027016 <AmiBlitz3.ab3@10030>    BNE.w 'go4it          ;no libs to fetch....
0002701A <AmiBlitz3.ab3@10031>   MOVE.l $2(A3),D0
0002701E <AmiBlitz3.ab3@10032>   OR.l $A(A3),D0
00027022 <AmiBlitz3.ab3@10033>    BNE.w 'go4it          ;no error chx...
00027028 <AmiBlitz3.ab3@10034>   BTST #$0,$9(A3)
0002702C <AmiBlitz3.ab3@10035>    BNE.w 'go4it          ;ditto...
00027030 <AmiBlitz3.ab3@10036>   MOVE.l $6(A3),D7       ;sub offset
00027034 <AmiBlitz3.ab3@10037>   MOVE.w $0(A2,D7.L),D0
00027038 <AmiBlitz3.ab3@10038>   ANDI.w #$F000,D0
0002703C <AmiBlitz3.ab3@10039>   CMP.w #-$6000,D0
00027040 <AmiBlitz3.ab3@10040>    BEQ.w 'go4it
00027044 <AmiBlitz3.ab3@10043>   SUB.l $12(A2),D7
00027048 <AmiBlitz3.ab3@10044>   ADD.l $28(A2),D7
0002704A <AmiBlitz3.ab3@10045>  RTS
00027050 <AmiBlitz3.ab3@10048>   LEA cutejsr,A0
00027056 <AmiBlitz3.ab3@10052>   MOVE.l destpointer,-(A7)
0002705E <AmiBlitz3.ab3@10053>   MOVE.w #$FFFF,lasta6     ; was -1
00027060 <AmiBlitz3.ab3@10055>    JSR (A0)
00027064 <AmiBlitz3.ab3@10056>   MOVE.w #$4E75,D1
00027068 <AmiBlitz3.ab3@10057>    BSR.w writeword
0002706A <AmiBlitz3.ab3@10059>   MOVE.l (A7)+,D7
0002706C <AmiBlitz3.ab3@10060>  RTS
0002706E <AmiBlitz3.ab3@10063>   TST.w (A3)+
00027072 <AmiBlitz3.ab3@10064>    BEQ.w 'skip
00027074 <AmiBlitz3.ab3@10065>   ADDQ.w #2,A3
00027078 <AmiBlitz3.ab3@10066>  BRA.w 'loop2
0002707C <AmiBlitz3.ab3@10069>   LEA $C(A3),A3
00027080 <AmiBlitz3.ab3@10070>  BRA.w 'loop
00027082 <AmiBlitz3.ab3@10073>   TST.w D2
00027086 <AmiBlitz3.ab3@10074>    BNE.w tokeerr
0002708A <AmiBlitz3.ab3@10076>   TST.w $6(A3)
0002708E <AmiBlitz3.ab3@10077>    BNE.w 'be4it
00027092 <AmiBlitz3.ab3@10078>   MOVE.l $8(A3),D0
00027096 <AmiBlitz3.ab3@10079>   OR.l $10(A3),D0
0002709A <AmiBlitz3.ab3@10080>    BNE.w 'be4it
000270A0 <AmiBlitz3.ab3@10081>   BTST #$0,$F(A3)
000270A4 <AmiBlitz3.ab3@10082>    BNE.w 'be4it
000270A8 <AmiBlitz3.ab3@10083>   MOVE.l $C(A3),D7
000270AC <AmiBlitz3.ab3@10084>   MOVE.w $0(A2,D7.L),D0
000270B0 <AmiBlitz3.ab3@10085>   ANDI.w #$F000,D0
000270B4 <AmiBlitz3.ab3@10086>   CMP.w #-$6000,D0        ; was #$a000
000270B8 <AmiBlitz3.ab3@10087>    BNE.w 'penis
000270BA <AmiBlitz3.ab3@10090>   MOVE.l A3,D1
000270BC <AmiBlitz3.ab3@10091>   SUB.l A2,D1
000270C2 <AmiBlitz3.ab3@10092>   LEA Amakelibsub,A0
000270C6 <AmiBlitz3.ab3@10093> BRA.w 'putcode
000270CC <AmiBlitz3.ab3@10097>   MOVEA.l _execbase,A6
000270D2 <AmiBlitz3.ab3@10098>   MOVEA.l tokeslist,A2
000270D8 <AmiBlitz3.ab3@10099>   CLR.l tokeslist
000270DC <AmiBlitz3.ab3@10102>     CMPA.w #$0,A2
000270E0 <AmiBlitz3.ab3@10103>      BEQ.w 'done2
000270E4 <AmiBlitz3.ab3@10104>     MOVEA.l $8(A2),A3
000270E8 <AmiBlitz3.ab3@10107>       CMPA.w #$0,A3
000270EC <AmiBlitz3.ab3@10108>        BEQ.w 'done3
000270EE <AmiBlitz3.ab3@10109>       MOVEA.l A3,A1
000270F0 <AmiBlitz3.ab3@10110>       MOVEA.l (A3),A3
000270F2 <AmiBlitz3.ab3@10111>       MOVEQ.l #$08,D0
000270F8 <AmiBlitz3.ab3@10113>       MOVE.l mempool,a0
000270FE <AmiBlitz3.ab3@10114>       MOVEA.l _execbase,A6
00027102 <AmiBlitz3.ab3@10115>       JSR _FreePooled(A6)
00027106 <AmiBlitz3.ab3@10118>  BRA.w 'floop2
00027108 <AmiBlitz3.ab3@10121>     MOVEA.l A2,A1
0002710A <AmiBlitz3.ab3@10122>     MOVEA.l (A2),A2
0002710C <AmiBlitz3.ab3@10123>     MOVEQ.l #$0C,D0
00027112 <AmiBlitz3.ab3@10125>     MOVE.l mempool,a0
00027118 <AmiBlitz3.ab3@10126>     MOVEA.l _execbase,A6
0002711C <AmiBlitz3.ab3@10127>     JSR _FreePooled(A6)
00027120 <AmiBlitz3.ab3@10130>  BRA.w 'floop
00027122 <AmiBlitz3.ab3@10133> RTS
00027126 <AmiBlitz3.ab3@10139>   MOVEM.l D3-D5/A1-A6,-(A7)
00027128 <AmiBlitz3.ab3@10140>   MOVEA.l A1,A4
0002712A <AmiBlitz3.ab3@10143>   MOVE.l (A2)+,D3
0002712E <AmiBlitz3.ab3@10144>   MOVE.w $0(A4,D3.L),D5
00027132 <AmiBlitz3.ab3@10145>    BPL.w 'next
00027136 <AmiBlitz3.ab3@10147>   TST.l $2C(A4)
0002713A <AmiBlitz3.ab3@10148>    BEQ.w 'skipr
00027140 <AmiBlitz3.ab3@10149>   TST.b debugmode
00027144 <AmiBlitz3.ab3@10150>    BNE.w 'skipr
00027148 <AmiBlitz3.ab3@10151>   CMP.l $2C(A4),D3
0002714C <AmiBlitz3.ab3@10152>    BCC.w 'next
00027150 <AmiBlitz3.ab3@10155>   BCLR #$F,D5             ;to offset number
00027154 <AmiBlitz3.ab3@10156>   MOVE.w $2(A4,D3.L),D4
00027158 <AmiBlitz3.ab3@10157>   SUB.l $12(A4),D3
0002715C <AmiBlitz3.ab3@10158>   ADD.l $28(A4),D3
00027160 <AmiBlitz3.ab3@10160>   MOVEM.l D2/A2/A4,-(A7)
00027164 <AmiBlitz3.ab3@10161>    BSR.w maketjsr
00027168 <AmiBlitz3.ab3@10162>   MOVEM.l (A7)+,D2/A2/A4
0002716A <AmiBlitz3.ab3@10165>   SUBQ.l #1,D2
0002716E <AmiBlitz3.ab3@10166>    BNE.w 'loop
00027172 <AmiBlitz3.ab3@10168>   MOVEM.l (A7)+,D3-D5/A1-A6
00027174 <AmiBlitz3.ab3@10169> RTS
0002717A <AmiBlitz3.ab3@10177>   LEA tokeslist,A3
00027180 <AmiBlitz3.ab3@10178>   MOVEA.l _execbase,A6
00027182 <AmiBlitz3.ab3@10181>   MOVE.l (A3),D0
00027186 <AmiBlitz3.ab3@10182>    BEQ.w 'notfound
00027188 <AmiBlitz3.ab3@10183>   MOVEA.l D0,A3
0002718C <AmiBlitz3.ab3@10184>   CMP.w $4(A3),D4
00027190 <AmiBlitz3.ab3@10185>    BNE.w 'loop2
00027194 <AmiBlitz3.ab3@10186>   CMP.w $6(A3),D5
00027198 <AmiBlitz3.ab3@10187>    BNE.w 'loop2
0002719C <AmiBlitz3.ab3@10188>  BRA.w 'found
0002719E <AmiBlitz3.ab3@10193>   MOVEQ.l #$0C,D0
000271A0 <AmiBlitz3.ab3@10194>   MOVEQ.l #$01,D1
000271A6 <AmiBlitz3.ab3@10196>   MOVE.l mempool,a0
000271AA <AmiBlitz3.ab3@10197>   JSR _AllocPooled(a6)
000271AC <AmiBlitz3.ab3@10200>   MOVEA.l D0,A3
000271B2 <AmiBlitz3.ab3@10201>   MOVE.l tokeslist,(A3)
000271B8 <AmiBlitz3.ab3@10202>   MOVE.l A3,tokeslist
000271BC <AmiBlitz3.ab3@10203>   MOVE.w D4,$4(A3)
000271C0 <AmiBlitz3.ab3@10204>   MOVE.w D5,$6(A3)
000271C4 <AmiBlitz3.ab3@10205>   CLR.l $8(A3)
000271C6 <AmiBlitz3.ab3@10208>   MOVEQ.l #$08,D0
000271C8 <AmiBlitz3.ab3@10209>   MOVEQ.l #$01,D1
000271CE <AmiBlitz3.ab3@10211>   MOVE.l mempool,a0
000271D2 <AmiBlitz3.ab3@10212>   JSR _AllocPooled(a6)
000271D4 <AmiBlitz3.ab3@10215>   MOVEA.l D0,A0
000271D8 <AmiBlitz3.ab3@10216>   MOVE.l D3,$4(A0)
000271DC <AmiBlitz3.ab3@10217>   MOVE.l $8(A3),(A0)
000271E0 <AmiBlitz3.ab3@10218>   MOVE.l A0,$8(A3)
000271E2 <AmiBlitz3.ab3@10220>   MOVE.w D4,D1
000271E6 <AmiBlitz3.ab3@10221> BRA.w searchinstr       ;use this library - NOW!
000271EA <AmiBlitz3.ab3@10224> tokeslist: Ds.l 1
000271EE <AmiBlitz3.ab3@10237>   BEQ.w 'skip
000271F0 <AmiBlitz3.ab3@10238>   MOVE.l A1,-(A7)
000271F2 <AmiBlitz3.ab3@10239>   ADDA.l D1,A1
000271F4 <AmiBlitz3.ab3@10240>   ADDQ.w #6,A1
000271F6 <AmiBlitz3.ab3@10243>     MOVE.w (A1)+,D1
000271FA <AmiBlitz3.ab3@10244>     BEQ.w 'done
000271FC <AmiBlitz3.ab3@10245>     CMP.w D2,D1
00027200 <AmiBlitz3.ab3@10246>     BEQ.w 'skip2
00027202 <AmiBlitz3.ab3@10247>     MOVE.l A1,-(A7)
00027206 <AmiBlitz3.ab3@10248>     BSR.w uselib
00027208 <AmiBlitz3.ab3@10249>     MOVEA.l (A7)+,A1
0002720A <AmiBlitz3.ab3@10252>     ADDQ.w #2,A1
0002720E <AmiBlitz3.ab3@10253>  BRA.w 'loop
00027210 <AmiBlitz3.ab3@10256>   MOVEA.l (A7)+,A1
00027212 <AmiBlitz3.ab3@10259> RTS
00027218 <AmiBlitz3.ab3@10263>   MOVEA.l libpointer,A1
0002721C <AmiBlitz3.ab3@10266>   CMPA.w #$0,A1
00027220 <AmiBlitz3.ab3@10267>    BEQ.b 'rts
00027224 <AmiBlitz3.ab3@10268>   CMP.w $4(A1),D1
00027228 <AmiBlitz3.ab3@10269>    BEQ.w 'found
0002722A <AmiBlitz3.ab3@10270>   MOVEA.l (A1),A1
0002722E <AmiBlitz3.ab3@10271>  BRA.w 'loop
00027230 <AmiBlitz3.ab3@10274>   MOVEQ.l #-$01,D1
00027232 <AmiBlitz3.ab3@10277> RTS
00027236 <AmiBlitz3.ab3@10284>   MOVEM.l d0/a2,-(a7)
00027238 <AmiBlitz3.ab3@10285>   MOVEQ #0,d0
0002723E <AmiBlitz3.ab3@10286>   LEA instrtab+4,a2
00027240 <AmiBlitz3.ab3@10287>   MOVE.w d1,d0
00027242 <AmiBlitz3.ab3@10288>   ASL.l #3,d0
00027246 <AmiBlitz3.ab3@10289>   MOVE.l 0(a2,d0.l),a1                                     ;*8
0002724C <AmiBlitz3.ab3@10290>   CMP.l #0,a1
00027250 <AmiBlitz3.ab3@10291>   BNE 'foundb
00027256 <AmiBlitz3.ab3@10293>   MOVEA.l libpointer,A1
0002725A <AmiBlitz3.ab3@10296>     CMPA.w #$0,A1
0002725E <AmiBlitz3.ab3@10298>     BEQ.w noliberr
00027262 <AmiBlitz3.ab3@10300>     CMP.w $4(A1),D1
00027266 <AmiBlitz3.ab3@10301>     BEQ.w 'found
00027268 <AmiBlitz3.ab3@10302>    MOVEA.l (A1),A1
0002726C <AmiBlitz3.ab3@10303>  BRA.w 'loop
00027270 <AmiBlitz3.ab3@10307>   MOVE.l a1,0(a2,d0.l)
00027274 <AmiBlitz3.ab3@10310>   MOVEM.l (a7)+,d0/a2
00027276 <AmiBlitz3.ab3@10312> RTS
0002727A <AmiBlitz3.ab3@10322>   MOVEM.l d0-d1/a1,-(a7)
0002727C <AmiBlitz3.ab3@10323>   MOVEQ #0,d0
00027282 <AmiBlitz3.ab3@10324>   LEA instrtab,a1
00027284 <AmiBlitz3.ab3@10325>   MOVE.w d1,d0
00027286 <AmiBlitz3.ab3@10326>   ASL.l #3,d0
0002728A <AmiBlitz3.ab3@10327>   MOVE.l 0(a1,d0.l),a3
0002728E <AmiBlitz3.ab3@10328>   MOVE.l 4(a1,d0.l),a2
00027294 <AmiBlitz3.ab3@10329>   CMP.l #0,a3
00027298 <AmiBlitz3.ab3@10330>   BNE 'foundb
0002729E <AmiBlitz3.ab3@10333>   MOVEA.l libpointer,A2
000272A2 <AmiBlitz3.ab3@10336>   CMPA.w #$0,A2
000272A6 <AmiBlitz3.ab3@10337>   BEQ.w notokerr
000272AA <AmiBlitz3.ab3@10338>   CMP.w $E(A2),D1
000272AE <AmiBlitz3.ab3@10339>   BCS.w 'next
000272B2 <AmiBlitz3.ab3@10340>   CMP.w $10(A2),D1
000272B6 <AmiBlitz3.ab3@10341>   BCC.w 'next
000272BA <AmiBlitz3.ab3@10345>   LEA $30(A2),A3
000272BE <AmiBlitz3.ab3@10346>   TST.w $4(A2)
000272C2 <AmiBlitz3.ab3@10347>   BPL.w 'userlib
000272C6 <AmiBlitz3.ab3@10350>     CMP.w $E(A2),D1
000272CA <AmiBlitz3.ab3@10351>     BEQ.w 'found
000272CC <AmiBlitz3.ab3@10352>     SUBQ.w #1,D1
000272D0 <AmiBlitz3.ab3@10353>     MOVEA.l $2(A3),A3
000272D4 <AmiBlitz3.ab3@10354>  BRA.w 'loop2
000272D8 <AmiBlitz3.ab3@10358>   MOVE.l a3,0(a1,d0.l)
000272DC <AmiBlitz3.ab3@10359>   MOVE.l a2,4(a1,d0.l)
000272E0 <AmiBlitz3.ab3@10362>   MOVEM.l (a7)+,d0-d1/a1
000272E4 <AmiBlitz3.ab3@10364>   MOVEM.l D1/A1-a3,-(A7)      ; was  movem.l d1/a1,-(a7)
000272E8 <AmiBlitz3.ab3@10366>   CMP.w #1,(a3)
000272EC <AmiBlitz3.ab3@10367>   BNE.s 'ex10
000272F4 <AmiBlitz3.ab3@10368>   CMP.l #$12345678,$e(a3)
000272F8 <AmiBlitz3.ab3@10369>   BNE.s 'ex10
000272FE <AmiBlitz3.ab3@10370>   CMP.w #$ffff,$16(a3)
00027302 <AmiBlitz3.ab3@10371>   BNE.s 'ex10
00027306 <AmiBlitz3.ab3@10372>   MOVE.l $12(a3),d1
0002730A <AmiBlitz3.ab3@10373>   BEQ.s 'ex10
00027310 <AmiBlitz3.ab3@10374>   LEA pluginbase,a3
00027314 <AmiBlitz3.ab3@10376>  JMP 0(a2,d1.l)                                             ;plugin
00027316 <AmiBlitz3.ab3@10380>   MOVEA.l A2,A1
0002731C <AmiBlitz3.ab3@10382>   CLR.b newmode
00027320 <AmiBlitz3.ab3@10384>   MOVE.w $4(A1),D1       ;set lib#
00027324 <AmiBlitz3.ab3@10389>   BSR.w uselib3
00027328 <AmiBlitz3.ab3@10390>   MOVEM.l (A7)+,D1/A1-a3
0002732A <AmiBlitz3.ab3@10391>  RTS
00027330 <AmiBlitz3.ab3@10395>   MOVE.w globalvarpointer,-(a7)         ; "
00027338 <AmiBlitz3.ab3@10396>   MOVE.w #$8004,globalvarpointer        ; "
0002733C <AmiBlitz3.ab3@10397>   BSR.w uselib3                         ; "
00027342 <AmiBlitz3.ab3@10398>   MOVE.w (a7)+,globalvarpointer         ; "
00027346 <AmiBlitz3.ab3@10399>   MOVEM.l (A7)+,D1/A1-a3
00027348 <AmiBlitz3.ab3@10400>  RTS
0002734C <AmiBlitz3.ab3@10404>     CMP.w $E(A2),D1
00027350 <AmiBlitz3.ab3@10405>     BEQ.w 'found
00027352 <AmiBlitz3.ab3@10406>     SUBQ.w #1,D1
00027356 <AmiBlitz3.ab3@10407>     MOVEA.l $2(A3),A3
0002735A <AmiBlitz3.ab3@10408>  BRA.w 'userlib
0002735C <AmiBlitz3.ab3@10411>   MOVEA.l (A2),A2
00027360 <AmiBlitz3.ab3@10412> BRA.w 'loop
00027364 <AmiBlitz3.ab3@10416>   MOVEM.l (A7)+,D1/A1-a3
0002736A <AmiBlitz3.ab3@10417>   JSR stripspaces
0002736C <AmiBlitz3.ab3@10418>   MOVEQ #0,d0
0002736E <AmiBlitz3.ab3@10419>   MOVE.b (a5)+,d0
00027374 <AmiBlitz3.ab3@10420>   MOVE.w d0,lastchar
00027376 <AmiBlitz3.ab3@10421>   ADDQ.l #4,a7
00027378 <AmiBlitz3.ab3@10422> RTS
0002737E <AmiBlitz3.ab3@10425> JUMP_writeword JMP writeword
00027382 <AmiBlitz3.ab3@10428> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00027386 <AmiBlitz3.ab3@10429> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
0002738A <AmiBlitz3.ab3@10430> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
0002738C <AmiBlitz3.ab3@10440>   TST.l D0
00027390 <AmiBlitz3.ab3@10441>   BEQ.w 'rts
00027392 <AmiBlitz3.ab3@10442>     MOVE.l D0,D6                                           ;d6=len
00027398 <AmiBlitz3.ab3@10443>     MOVEA.l _dosbase,A6
0002739E <AmiBlitz3.ab3@10444>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000273A2 <AmiBlitz3.ab3@10445>     JSR _Open(A6)
000273A4 <AmiBlitz3.ab3@10446>     MOVE.l D0,D7
000273A8 <AmiBlitz3.ab3@10447>     BEQ.w 'rts
000273AA <AmiBlitz3.ab3@10448>       MOVE.l D6,D0
000273AC <AmiBlitz3.ab3@10449>       MOVEQ.l #$01,D1
000273B2 <AmiBlitz3.ab3@10450>       MOVEA.l _execbase,A6
000273B8 <AmiBlitz3.ab3@10453>       MOVE.l mempool,a0
000273BC <AmiBlitz3.ab3@10454>       JSR _AllocPooled(a6)
000273BE <AmiBlitz3.ab3@10456>       MOVE.l D0,D5                                         ;start address
000273C0 <AmiBlitz3.ab3@10458>       MOVE.l D7,D1                                         ; handle
000273C2 <AmiBlitz3.ab3@10459>       MOVE.l D5,D2                                         ; buffer addr
000273C4 <AmiBlitz3.ab3@10460>       MOVE.l D6,D3                                         ; size
000273CA <AmiBlitz3.ab3@10461>       MOVEA.l _dosbase,A6
000273CE <AmiBlitz3.ab3@10462>       JSR _Read(A6)
000273D0 <AmiBlitz3.ab3@10463>       MOVE.l D7,D1
000273D4 <AmiBlitz3.ab3@10464>       JSR _Close(A6)
000273D6 <AmiBlitz3.ab3@10466>       MOVEA.l D5,A0                                        ; buffer addr
000273D8 <AmiBlitz3.ab3@10472>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
000273DC <AmiBlitz3.ab3@10473>         BEQ.b 'linkdone                                    ; wenn <> 0, dann
000273E0 <AmiBlitz3.ab3@10474>           LEA $20(A0),A1  ;link in.                        ;   lade inhalt von D0+40bytes nach A1
000273E2 <AmiBlitz3.ab3@10475>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
000273E4 <AmiBlitz3.ab3@10476>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
000273E6 <AmiBlitz3.ab3@10477>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
000273EA <AmiBlitz3.ab3@10481>           MOVE.l -$4(A1),D0    ;number of longwords.       ;   hole die 4bytes vor nach D0
000273EC <AmiBlitz3.ab3@10482>           ADD.l D0,D0          ;to bytes...                ;   verdoppele D0
000273EE <AmiBlitz3.ab3@10483>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
000273F2 <AmiBlitz3.ab3@10484>           MOVE.l D0,$6(A1)     ;fix 1                      ;   schreibe D0 6bytes nach A1
000273F6 <AmiBlitz3.ab3@10485>           CLR.l $20(A1)        ;no relocs                  ;   loesche D0+40bytes
000273FA <AmiBlitz3.ab3@10486>           LEA $C(A1,D0.L),A2   ;reloc info.                ;   lade inhalt von (A1)+D0+$C nach A2
000273FC <AmiBlitz3.ab3@10487>           CMPA.l A0,A2         ;is it over?
00027400 <AmiBlitz3.ab3@10488>           BCC.b 'linkloop                                  ; wenn A0=>A2
00027406 <AmiBlitz3.ab3@10490>             MOVE.l -$8(A2),$20(A1)  ;number of relocs.     ;
0002740A <AmiBlitz3.ab3@10491>             MOVE.l A2,$24(A1)       ;pointer to relocs.    ;
0002740E <AmiBlitz3.ab3@10492>   BRA.w 'linkloop
00027410 <AmiBlitz3.ab3@10495>       MOVE.l D5,D0
00027412 <AmiBlitz3.ab3@10498> RTS
0002743C <AmiBlitz3.ab3@10503>   !basic
000274B0 <AmiBlitz3.ab3@10504>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
000274E4 <AmiBlitz3.ab3@10505>    dos_Delete{tempmapping$}
00027528 <AmiBlitz3.ab3@10506>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00027546 <AmiBlitz3.ab3@10507>   !asm
0002754C <AmiBlitz3.ab3@10509>   LEA libpointer,A3
00027552 <AmiBlitz3.ab3@10513>   MOVE.l size_deflibs,D0                 ; in org source was acid libs first
00027558 <AmiBlitz3.ab3@10514>   MOVE.l deflib,d1
0002755C <AmiBlitz3.ab3@10516>   BEQ 'l1
00027560 <AmiBlitz3.ab3@10517>  BRA 'l2
00027566 <AmiBlitz3.ab3@10520>   MOVE.l #str_path_deflibs,D1
0002756A <AmiBlitz3.ab3@10524>   BSR.w load_libsfile
00027570 <AmiBlitz3.ab3@10525>   MOVE.l D0,ptr_deflibs
00027576 <AmiBlitz3.ab3@10528>   MOVE.l size_acidlibs,D0               ; in org source was deflibs libs second
0002757C <AmiBlitz3.ab3@10529>   MOVE.l #str_path_acidlibs,D1
00027580 <AmiBlitz3.ab3@10530>   BSR.w load_libsfile
00027586 <AmiBlitz3.ab3@10531>   MOVE.l D0,ptr_acidlibs
00027588 <AmiBlitz3.ab3@10537>   CLR.l (A3)
0002758E <AmiBlitz3.ab3@10538>   MOVE.l A3,ptr_userlibs
00027594 <AmiBlitz3.ab3@10543>   LEA str_libfilename,A0
0002759A <AmiBlitz3.ab3@10544>   LEA str_path_userlibs,A1
0002759C <AmiBlitz3.ab3@10547>     MOVE.b (A1)+,(A0)+
000275A0 <AmiBlitz3.ab3@10548>   BNE.b 'loop0
000275A2 <AmiBlitz3.ab3@10551>   SUBQ.w #1,A0
000275A6 <AmiBlitz3.ab3@10552>   MOVE.b #$2F,(A0)+
000275A8 <AmiBlitz3.ab3@10556>   MOVE.l A0,-(A7) ;store first pos for chars        ; -- store str_path_userlibs in A7
000275AE <AmiBlitz3.ab3@10558>   LEA ptr_userlibs_list,A2   ;lib names!
000275B4 <AmiBlitz3.ab3@10559>   MOVEA.l ptr_userlibs,A3
000275BA <AmiBlitz3.ab3@10560>   MOVEA.l _dosbase,A6
000275BC <AmiBlitz3.ab3@10565>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
000275C0 <AmiBlitz3.ab3@10566>       BNE.b 'more                                      ; wenn nix drin, processing ueberspringen
000275C2 <AmiBlitz3.ab3@10568>       CLR.l (A3)
000275C4 <AmiBlitz3.ab3@10569>       ADDQ.w #4,A7
000275EE <AmiBlitz3.ab3@10571>       !basic
00027602 <AmiBlitz3.ab3@10572>       If fid<>-1
0002760C <AmiBlitz3.ab3@10573>         file_Close{fid}
00027618 <AmiBlitz3.ab3@10574>         fid = -1
00027636 <AmiBlitz3.ab3@10576>       !asm
0002763A <AmiBlitz3.ab3@10578>  BRA.w process_libraries
0002763C <AmiBlitz3.ab3@10581>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00027640 <AmiBlitz3.ab3@10582>       TST.w $4(A2)                                         ; naechste addresse pruefen
00027644 <AmiBlitz3.ab3@10583>     BEQ.b 'loop
00027648 <AmiBlitz3.ab3@10585>     LEA $6(A2),A1          ;add dir name to libsdir
0002764A <AmiBlitz3.ab3@10586>     MOVEA.l (A7),A0
0002764C <AmiBlitz3.ab3@10589>       MOVE.b (A1)+,(A0)+
00027650 <AmiBlitz3.ab3@10590>     BNE.w 'loop2
00027652 <AmiBlitz3.ab3@10594>     MOVE.l A0,-(A7)                  ;pointer for lib name
00027658 <AmiBlitz3.ab3@10596>     MOVE.l #str_libfilename,D1
0002765A <AmiBlitz3.ab3@10597>     MOVEQ.l #-$02,D2
00027660 <AmiBlitz3.ab3@10598>     MOVEA.l _dosbase,A6
00027664 <AmiBlitz3.ab3@10599>      JSR _Lock(A6)
00027666 <AmiBlitz3.ab3@10600>     MOVE.l D0,D1
0002766A <AmiBlitz3.ab3@10601>      BEQ.w 'exdone2
0002766C <AmiBlitz3.ab3@10602>     MOVEA.l (A7),A0
00027672 <AmiBlitz3.ab3@10603>     MOVE.b #$2F,-$1(A0)           ;#'/'
00027674 <AmiBlitz3.ab3@10606>     MOVE.l D1,-(A7)               ;lock
0002767A <AmiBlitz3.ab3@10607>     MOVE.l #ptr_parameterstore,D2
00027680 <AmiBlitz3.ab3@10608>     MOVEA.l _dosbase,A6
00027684 <AmiBlitz3.ab3@10609>     JSR _Examine(A6)
00027686 <AmiBlitz3.ab3@10610>     TST.l D0
0002768A <AmiBlitz3.ab3@10611>      BEQ.w 'exdone
00027690 <AmiBlitz3.ab3@10618>     LEA fib_FileName,A0
00027694 <AmiBlitz3.ab3@10619>     BSR.w check_for_infoextention
00027698 <AmiBlitz3.ab3@10620>     BEQ.w 'exdone
000276C2 <AmiBlitz3.ab3@10624>     !basic
00027746 <AmiBlitz3.ab3@10625>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00027764 <AmiBlitz3.ab3@10626>     !asm
0002776A <AmiBlitz3.ab3@10627>     MOVE.l #str_libfilename,D1
0002776E <AmiBlitz3.ab3@10628>     BSR.w open_userlibfile
00027770 <AmiBlitz3.ab3@10632>     MOVE.l (A7)+,D1
00027776 <AmiBlitz3.ab3@10633>     MOVEA.l _dosbase,A6
0002777A <AmiBlitz3.ab3@10634>     JSR _UnLock(A6)
0002777C <AmiBlitz3.ab3@10637>     ADDQ.w #4,A7    ;forget namepos
00027780 <AmiBlitz3.ab3@10638> BRA.w 'loop
00027786 <AmiBlitz3.ab3@10645>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002778C <AmiBlitz3.ab3@10646>   MOVEA.l _dosbase,A6
00027790 <AmiBlitz3.ab3@10647>    JSR _Open(A6)
00027792 <AmiBlitz3.ab3@10648>   MOVE.l D0,D7
00027796 <AmiBlitz3.ab3@10649>    BEQ.w 'openerr
00027798 <AmiBlitz3.ab3@10652>   MOVE.l D7,D1                                             ; filehandle
0002779E <AmiBlitz3.ab3@10653>   MOVE.l #optstuff,D2                                     ; buffer
000277A4 <AmiBlitz3.ab3@10654>   MOVEA.l _dosbase,A6
000277A6 <AmiBlitz3.ab3@10655>   MOVEQ.l #$20,D3                                          ; size
000277AA <AmiBlitz3.ab3@10656>   JSR _Read(A6)
000277B0 <AmiBlitz3.ab3@10659>   MOVE.l optstuff+28,D6      ;long words to read
000277B2 <AmiBlitz3.ab3@10660>   LSL.l #2,D6
000277B4 <AmiBlitz3.ab3@10661>   MOVE.l D6,D0
000277B6 <AmiBlitz3.ab3@10662>   MOVEQ.l #$01,D1
000277BC <AmiBlitz3.ab3@10663>   MOVEA.l _execbase,A6
000277C2 <AmiBlitz3.ab3@10666>   MOVE.l mempool,a0
000277C6 <AmiBlitz3.ab3@10667>   JSR _AllocPooled(a6)
000277C8 <AmiBlitz3.ab3@10669>   MOVEA.l D0,A5
000277CE <AmiBlitz3.ab3@10672>   MOVEA.l _dosbase,A6
000277D0 <AmiBlitz3.ab3@10673>   MOVE.l D7,D1                                             ; filehandle
000277D2 <AmiBlitz3.ab3@10674>   MOVE.l A5,D2                                             ; buffer
000277D4 <AmiBlitz3.ab3@10675>   MOVE.l D6,D3                                             ; size
000277D8 <AmiBlitz3.ab3@10676>    JSR _Read(A6)   ;read in struct
000277DA <AmiBlitz3.ab3@10678>   MOVE.l A5,(A3)
000277DC <AmiBlitz3.ab3@10681>   MOVE.l A5,d0
000277DE <AmiBlitz3.ab3@10684>   MOVEA.l A5,A3
000277E2 <AmiBlitz3.ab3@10685>   MOVE.l D6,$6(A5)
000277E6 <AmiBlitz3.ab3@10686>   CLR.l $20(A5)
00027810 <AmiBlitz3.ab3@10688>   !basic
0002781A <AmiBlitz3.ab3@10690>   addr_libnum.l = PutD0 + 4
0002782E <AmiBlitz3.ab3@10691>   If fid<>-1
000278CE <AmiBlitz3.ab3@10692>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00027900 <AmiBlitz3.ab3@10693>     file_WriteLine{fid,currentlib$}
0002791E <AmiBlitz3.ab3@10695>   !asm
00027920 <AmiBlitz3.ab3@10698>   MOVE.l D7,D1                                             ; filehandle
00027926 <AmiBlitz3.ab3@10699>   MOVE.l #optstuff,D2                                     ; buffer
00027928 <AmiBlitz3.ab3@10700>   MOVEQ.l #$0C,D3                                          ; size
0002792E <AmiBlitz3.ab3@10701>   MOVEA.l _dosbase,A6
00027932 <AmiBlitz3.ab3@10702>    JSR _Read(A6)
00027938 <AmiBlitz3.ab3@10705>   CMP.l #$C,D0
0002793C <AmiBlitz3.ab3@10706>    BCS.w 'closeup
00027942 <AmiBlitz3.ab3@10709>   MOVE.l optstuff+4,D0
00027946 <AmiBlitz3.ab3@10710>   MOVE.l D0,$20(A5)
00027948 <AmiBlitz3.ab3@10711>   LSL.l #2,D0
0002794A <AmiBlitz3.ab3@10712>   MOVE.l D0,D5             ;length of reloc info
0002794C <AmiBlitz3.ab3@10713>   MOVEQ.l #$01,D1
00027952 <AmiBlitz3.ab3@10714>   MOVEA.l _execbase,A6
00027958 <AmiBlitz3.ab3@10716>   MOVE.l mempool,a0
0002795C <AmiBlitz3.ab3@10717>   JSR _AllocPooled(a6)
00027962 <AmiBlitz3.ab3@10720>   MOVEA.l _dosbase,A6
00027966 <AmiBlitz3.ab3@10722>   MOVE.l D0,$24(A5)        ;pointer to reloc mem
00027968 <AmiBlitz3.ab3@10723>   MOVE.l D7,D1
0002796A <AmiBlitz3.ab3@10724>   MOVE.l D0,D2
0002796C <AmiBlitz3.ab3@10725>   MOVE.l D5,D3
00027970 <AmiBlitz3.ab3@10726>   JSR _Read(A6)
00027972 <AmiBlitz3.ab3@10729>   MOVE.l D7,D1
00027978 <AmiBlitz3.ab3@10730>   MOVEA.l _dosbase,A6
0002797C <AmiBlitz3.ab3@10731> JMP _Close(A6)
0002797E <AmiBlitz3.ab3@10734> RTS
00027984 <AmiBlitz3.ab3@10744>   CLR.w number_of_objects
0002798A <AmiBlitz3.ab3@10745>   MOVEA.l end_of_tokenlist,A3
00027990 <AmiBlitz3.ab3@10746>   MOVEA.l libpointer,A2
00027994 <AmiBlitz3.ab3@10749>     CMPA.w #$0,A2
00027998 <AmiBlitz3.ab3@10750>     BEQ.w 'done                                        ; <-- abbruch mit RTS
0002799C <AmiBlitz3.ab3@10752>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
000279A0 <AmiBlitz3.ab3@10753>     BMI.w 'syslib
000279A2 <AmiBlitz3.ab3@10754>       LSL.w #7,D7
000279A4 <AmiBlitz3.ab3@10755>       ADDQ.w #1,D7
000279A8 <AmiBlitz3.ab3@10756>       MOVE.w D7,$E(A2)
000279AC <AmiBlitz3.ab3@10759>     LEA $30(A2),A1
000279B2 <AmiBlitz3.ab3@10760>     LEA temp1,A4
000279B4 <AmiBlitz3.ab3@10763>       MOVE.w (A1),D0
000279B8 <AmiBlitz3.ab3@10764>       BMI.w 'next
000279BA <AmiBlitz3.ab3@10765>       MOVE.l A1,(A4)
000279BC <AmiBlitz3.ab3@10766>       MOVEA.l A1,A4      ;last link for subs
000279BE <AmiBlitz3.ab3@10767>       ADDQ.w #2,A4
000279C0 <AmiBlitz3.ab3@10768>       ADDQ.w #6,A1
000279C4 <AmiBlitz3.ab3@10769>       CMP.w #$8,D0
000279C8 <AmiBlitz3.ab3@10770>       BEQ.w 'addtoke
000279CC <AmiBlitz3.ab3@10771>         ANDI.w #$F,D0
000279D0 <AmiBlitz3.ab3@10772>         BNE.w 'something
000279D4 <AmiBlitz3.ab3@10776>           BSR.w skiplibreg
000279D8 <AmiBlitz3.ab3@10777>           LEA $C(A1),A1
000279DA <AmiBlitz3.ab3@10778>           ADDQ.w #1,D7   ;in case it's a user lib
000279DE <AmiBlitz3.ab3@10779>  BRA.w 'loop2
000279E2 <AmiBlitz3.ab3@10782>     BTST #$2,D0
000279E6 <AmiBlitz3.ab3@10783>     BEQ.w 'notalib
000279E8 <AmiBlitz3.ab3@10784>       ADDQ.w #4,A1
000279EA <AmiBlitz3.ab3@10787>         TST.b (A1)+
000279EE <AmiBlitz3.ab3@10788>       BPL.w 'alibloop
000279F2 <AmiBlitz3.ab3@10789>       BSR.w aligna1
000279F6 <AmiBlitz3.ab3@10790>  BRA.w 'addtoke
000279F8 <AmiBlitz3.ab3@10795>       MOVE.w (A1)+,D0
000279FC <AmiBlitz3.ab3@10796>       BMI.w 'addtoke
00027A00 <AmiBlitz3.ab3@10797>       ANDI.w #$FF,D0
00027A02 <AmiBlitz3.ab3@10798>       ADDA.w D0,A1
00027A06 <AmiBlitz3.ab3@10799>       BSR.w aligna1
00027A0A <AmiBlitz3.ab3@10800>       BSR.w skiplibreg
00027A0E <AmiBlitz3.ab3@10801>       LEA $C(A1),A1
00027A12 <AmiBlitz3.ab3@10802>  BRA.w 'stloop
00027A14 <AmiBlitz3.ab3@10805>     MOVE.l A1,(A3)
00027A16 <AmiBlitz3.ab3@10806>     MOVEA.l A1,A3
00027A18 <AmiBlitz3.ab3@10807>     ADDQ.w #4,A1
00027A1A <AmiBlitz3.ab3@10809>     MOVE.w D7,(A1)+
00027A1C <AmiBlitz3.ab3@10812>       TST.b (A1)+
00027A20 <AmiBlitz3.ab3@10813>     BNE.w 'tokeloop
00027A22 <AmiBlitz3.ab3@10816>       TST.b (A1)+
00027A26 <AmiBlitz3.ab3@10817>     BNE.w 'tokeloop2
00027A2A <AmiBlitz3.ab3@10818>     BSR.w aligna1
00027A2C <AmiBlitz3.ab3@10819>     ADDQ.w #1,D7
00027A30 <AmiBlitz3.ab3@10820>  BRA.w 'loop2
00027A34 <AmiBlitz3.ab3@10823>     TST.w $4(A2)
00027A38 <AmiBlitz3.ab3@10824>      BMI.w 'notulib
00027A3C <AmiBlitz3.ab3@10825>     MOVE.w D7,$10(A2)
00027A3E <AmiBlitz3.ab3@10828>     ADDQ.w #2,A1
00027A40 <AmiBlitz3.ab3@10829>     TST.l (A1)+
00027A44 <AmiBlitz3.ab3@10830>      BEQ.w 'nomax
00027A4A <AmiBlitz3.ab3@10831>     ADDQ.w #1,number_of_objects
00027A4E <AmiBlitz3.ab3@10832>     LEA $16(A1),A1
00027A50 <AmiBlitz3.ab3@10835>     SUBA.l A2,A1
00027A54 <AmiBlitz3.ab3@10836>     MOVE.l A1,$12(A2)
00027A56 <AmiBlitz3.ab3@10837>     MOVEA.l (A2),A2
00027A5A <AmiBlitz3.ab3@10838>  BRA.w 'loop
00027A5C <AmiBlitz3.ab3@10841>   CLR.l (A3)
00027A62 <AmiBlitz3.ab3@10843> 
00027A68 <AmiBlitz3.ab3@10845>   MOVE.l A7,errstack
00027A72 <AmiBlitz3.ab3@10846>   MOVE.l #'cont,errcont
00027A7A <AmiBlitz3.ab3@10847>   MOVE.w #$FFFF,ezerr       ; was -1
00027A7E <AmiBlitz3.ab3@10848>   MOVE.w #$FFFA,D1          ;#65530
00027A82 <AmiBlitz3.ab3@10849>    BSR.w findlib            ;get address of mem lib
00027A88 <AmiBlitz3.ab3@10850>   MOVE.l A1,tempvm
00027A8C <AmiBlitz3.ab3@10851>   MOVE.w #$FDA7,D1          ;#64935,
00027A90 <AmiBlitz3.ab3@10852>    BSR.w findlib
00027A96 <AmiBlitz3.ab3@10853>   MOVE.l A1,ffplib
00027A98 <AmiBlitz3.ab3@10856> RTS
00027A9C <AmiBlitz3.ab3@10859> ffplib:  Ds.l 1
00027A9E <AmiBlitz3.ab3@10863>     TST.w (A1)+
00027AA2 <AmiBlitz3.ab3@10864>     BEQ.w 'done
00027AA4 <AmiBlitz3.ab3@10865>     ADDQ.w #2,A1
00027AA8 <AmiBlitz3.ab3@10866>  BRA.w skiplibreg
00027AAA <AmiBlitz3.ab3@10869> RTS
00027AAC <AmiBlitz3.ab3@10873>   EXG.l A1,A0
00027AB0 <AmiBlitz3.ab3@10874>   BSR.w aligna1
00027AB2 <AmiBlitz3.ab3@10875>   EXG.l A1,A0
00027AB4 <AmiBlitz3.ab3@10876> RTS
00027AB6 <AmiBlitz3.ab3@10880>   EXG.l D0,A1
00027AB8 <AmiBlitz3.ab3@10881>   ADDQ.l #1,D0
00027ABC <AmiBlitz3.ab3@10882>   BCLR #$0,D0
00027ABE <AmiBlitz3.ab3@10883>   EXG.l D0,A1
00027AC0 <AmiBlitz3.ab3@10884> RTS
00027AC6 <AmiBlitz3.ab3@10888>   MOVEA.l _execbase,A6
00027ACC <AmiBlitz3.ab3@10889>   MOVEA.l ptr_userlibs,A2
00027ACE <AmiBlitz3.ab3@10890>   MOVE.l (A2),D0
00027AD0 <AmiBlitz3.ab3@10891>   CLR.l (A2)
00027AD2 <AmiBlitz3.ab3@10892>   MOVEA.l D0,A2
00027AD6 <AmiBlitz3.ab3@10895>     CMPA.w #$0,A2
00027ADA <AmiBlitz3.ab3@10896>     BEQ.w free_userlib
00027ADE <AmiBlitz3.ab3@10898>     MOVE.l $20(A2),D0
00027AE2 <AmiBlitz3.ab3@10899>     BEQ.b 'skip
00027AE4 <AmiBlitz3.ab3@10900>       LSL.l #2,D0
00027AEA <AmiBlitz3.ab3@10902>       MOVE.l mempool,a0
00027AEE <AmiBlitz3.ab3@10904>       MOVEA.l $24(A2),A1
00027AF2 <AmiBlitz3.ab3@10906>       JSR _FreePooled(A6)
00027AF4 <AmiBlitz3.ab3@10911>     MOVEA.l A2,A1
00027AF8 <AmiBlitz3.ab3@10912>     MOVE.l $6(A1),D0
00027AFE <AmiBlitz3.ab3@10914>     MOVE.l mempool,a0
00027B00 <AmiBlitz3.ab3@10916>     MOVEA.l (A2),A2
00027B06 <AmiBlitz3.ab3@10918>     MOVEA.l _execbase,A6
00027B0A <AmiBlitz3.ab3@10919>     JSR _FreePooled(A6)
00027B0E <AmiBlitz3.ab3@10922> BRA.w 'loop
00027B12 <AmiBlitz3.ab3@10926>   BSR.w free_userlibs
00027B18 <AmiBlitz3.ab3@10928>   MOVEA.l _execbase,A6
00027B1E <AmiBlitz3.ab3@10929>   CLR.l libpointer
00027B24 <AmiBlitz3.ab3@10930>   MOVEA.l end_of_tokenlist,A0
00027B26 <AmiBlitz3.ab3@10931>   CLR.l (A0)
00027B2C <AmiBlitz3.ab3@10933>   MOVE.l size_acidlibs,D0
00027B30 <AmiBlitz3.ab3@10934>   BEQ.b 'defskip
00027B36 <AmiBlitz3.ab3@10935>     MOVE.l ptr_acidlibs,D1
00027B3A <AmiBlitz3.ab3@10936>     BEQ.b 'defskip
00027B40 <AmiBlitz3.ab3@10937>       CLR.l ptr_acidlibs
00027B42 <AmiBlitz3.ab3@10938>       MOVEA.l D1,A1
00027B48 <AmiBlitz3.ab3@10940>       MOVE.l mempool,a0
00027B4E <AmiBlitz3.ab3@10941>       MOVEA.l _execbase,A6
00027B52 <AmiBlitz3.ab3@10942>       JSR _FreePooled(A6)                                 ; free acidlibs
00027B58 <AmiBlitz3.ab3@10947>   MOVE.l size_deflibs,D0
00027B5C <AmiBlitz3.ab3@10948>   BEQ.b 'acidskip
00027B62 <AmiBlitz3.ab3@10949>     MOVE.l ptr_deflibs,D1
00027B66 <AmiBlitz3.ab3@10950>     BEQ.b 'acidskip
00027B6C <AmiBlitz3.ab3@10951>       CLR.l ptr_deflibs                                    ; d0: memorySize
00027B6E <AmiBlitz3.ab3@10952>       MOVEA.l D1,A1                                        ; a1: memory
00027B74 <AmiBlitz3.ab3@10954>       MOVE.l mempool,a0                                    ; a0: poolHeader
00027B7A <AmiBlitz3.ab3@10955>       MOVEA.l _execbase,A6
00027B7E <AmiBlitz3.ab3@10956>       JSR _FreePooled(A6)                                  ; free deflibs
00027B80 <AmiBlitz3.ab3@10961> RTS
00027B86 <AmiBlitz3.ab3@10965>   MOVEA.l currentmacroaddr,A0
00027B88 <AmiBlitz3.ab3@10966>   MOVEA.l (A0),A2
00027B8A <AmiBlitz3.ab3@10967>   CLR.l (A0)
00027B90 <AmiBlitz3.ab3@10968>   MOVEA.l _execbase,A6
00027B94 <AmiBlitz3.ab3@10971>     CMPA.w #$0,A2
00027B98 <AmiBlitz3.ab3@10972>     BEQ.w 'done
00027B9A <AmiBlitz3.ab3@10973>     MOVEQ.l #$00,D0
00027B9E <AmiBlitz3.ab3@10974>     MOVE.w $8(A2),D0
00027BA2 <AmiBlitz3.ab3@10975>     BEQ.w 'skip
00027BA6 <AmiBlitz3.ab3@10976>     MOVEA.l $4(A2),A1
00027BAC <AmiBlitz3.ab3@10978>     MOVE.l mempool,a0
00027BB0 <AmiBlitz3.ab3@10979>     JSR _FreePooled(A6)
00027BB2 <AmiBlitz3.ab3@10984>     MOVEA.l A2,A1
00027BB4 <AmiBlitz3.ab3@10985>     MOVEA.l (A2),A2
00027BB6 <AmiBlitz3.ab3@10986>     MOVEQ.l #$00,D0
00027BBA <AmiBlitz3.ab3@10987>     MOVE.b $C(A1),D0
00027BC0 <AmiBlitz3.ab3@10989>     MOVE.l mempool2,a0
00027BC4 <AmiBlitz3.ab3@10990>     JSR _FreePooled(A6)
00027BC8 <AmiBlitz3.ab3@10994>  BRA.w 'loop
00027BCA <AmiBlitz3.ab3@10997> RTS
00027BD0 <AmiBlitz3.ab3@11001>   MOVEA.l templabel,A2
00027BD6 <AmiBlitz3.ab3@11002>   CLR.l templabel
00027BD8 <AmiBlitz3.ab3@11004> RTS
00027BDE <AmiBlitz3.ab3@11006>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027BE2 <AmiBlitz3.ab3@11009>     CMPA.w #$0,A2
00027BE6 <AmiBlitz3.ab3@11010>     BEQ.w 'done
00027BE8 <AmiBlitz3.ab3@11011>     MOVEQ.l #$00,D0
00027BEC <AmiBlitz3.ab3@11012>     MOVE.b $E(A2),D0                                       ;labeltemp
00027BEE <AmiBlitz3.ab3@11013>     MOVEA.l A2,A1
00027BF0 <AmiBlitz3.ab3@11014>     MOVEA.l (A2),A2
00027BF6 <AmiBlitz3.ab3@11016>     MOVE.l mempool2,a0
00027BFA <AmiBlitz3.ab3@11021>  BRA.w 'loop
00027BFC <AmiBlitz3.ab3@11024> RTS
00027C02 <AmiBlitz3.ab3@11028>   MOVEA.l data1,A4
00027C08 <AmiBlitz3.ab3@11029>   CMPA.l data2at,A4
00027C0C <AmiBlitz3.ab3@11030>   BCC.w 'over
00027C0E <AmiBlitz3.ab3@11031>     MOVE.b D1,(A4)+
00027C14 <AmiBlitz3.ab3@11032>     MOVE.l A4,data1
00027C16 <AmiBlitz3.ab3@11033>  RTS
00027C1E <AmiBlitz3.ab3@11036>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1                             ;move #-1, org source
00027C24 <AmiBlitz3.ab3@11037>   ADDQ.l #1,data1
00027C26 <AmiBlitz3.ab3@11038> RTS
00027C28 <AmiBlitz3.ab3@11042>   SWAP D1
00027C2C <AmiBlitz3.ab3@11043>   BSR.w pokedata1
00027C2E <AmiBlitz3.ab3@11044>   SWAP D1
00027C34 <AmiBlitz3.ab3@11047>   MOVEA.l data1,A4
00027C3A <AmiBlitz3.ab3@11048>   CMPA.l data2at,A4
00027C3E <AmiBlitz3.ab3@11049>    BCC.w 'over
00027C40 <AmiBlitz3.ab3@11050>   MOVE.w D1,(A4)+
00027C46 <AmiBlitz3.ab3@11051>   MOVE.l A4,data1
00027C48 <AmiBlitz3.ab3@11052>  RTS
00027C50 <AmiBlitz3.ab3@11055>   MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
00027C56 <AmiBlitz3.ab3@11056>   ADDQ.l #2,data1
00027C58 <AmiBlitz3.ab3@11057> RTS
00027C5E <AmiBlitz3.ab3@11061>   MOVE.l data1,D3                                      ;write local string/type allocs
00027C60 <AmiBlitz3.ab3@11062>   MOVEQ.l #$00,D4
00027C64 <AmiBlitz3.ab3@11065>   CMPA.w #$0,A2
00027C68 <AmiBlitz3.ab3@11066>    BEQ.w 'done
00027C6C <AmiBlitz3.ab3@11067>   TST.w $6(A2)
00027C70 <AmiBlitz3.ab3@11068>    BNE.w 'next
00027C74 <AmiBlitz3.ab3@11069>   MOVEA.l $A(A2),A3
00027C7C <AmiBlitz3.ab3@11070>   CMPI.l #$100,$4(A3)
00027C80 <AmiBlitz3.ab3@11071>    BCS.w 'next
00027C84 <AmiBlitz3.ab3@11072>   MOVE.w $4(A2),D1
00027C88 <AmiBlitz3.ab3@11073>    BSR.w pokedata1
00027C8C <AmiBlitz3.ab3@11074>   MOVE.w $8(A3),D1
00027C90 <AmiBlitz3.ab3@11075>    BSR.w pokedata1
00027C92 <AmiBlitz3.ab3@11076>   ADDQ.w #1,D4
00027C94 <AmiBlitz3.ab3@11079>    MOVEA.l (A2),A2
00027C98 <AmiBlitz3.ab3@11080>  BRA.w 'loop
00027C9A <AmiBlitz3.ab3@11083>    TST.w D4
00027C9E <AmiBlitz3.ab3@11084>    BEQ.w calcstatic2_skip
00027CA2 <AmiBlitz3.ab3@11085>   MOVE.w #$FF37,D1              ;#65335
00027CA6 <AmiBlitz3.ab3@11086>    BSR.w uselib                 ;use statics lib
00027CAA <AmiBlitz3.ab3@11087>   MOVE.w #$FFFA,D1              ;use memlib
00027CAE <AmiBlitz3.ab3@11088> BRA.w uselib
00027CB4 <AmiBlitz3.ab3@11097>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00027CBA <AmiBlitz3.ab3@11100>   MOVE.l data1,D3
00027CBC <AmiBlitz3.ab3@11101>   MOVEQ.l #$00,D4
00027CC2 <AmiBlitz3.ab3@11103>   TST.b iserror
00027CC6 <AmiBlitz3.ab3@11104>   BEQ 'loop
00027CC8 <AmiBlitz3.ab3@11105>   RTS
00027CCC <AmiBlitz3.ab3@11109>    CMPA.w #$0,A2
00027CD0 <AmiBlitz3.ab3@11110>    BEQ.w 'done
00027CD4 <AmiBlitz3.ab3@11111>   TST.w $6(A2)
00027CD8 <AmiBlitz3.ab3@11112>    BNE.w 'next
00027CDC <AmiBlitz3.ab3@11113>   MOVEA.l $A(A2),A3
00027CE4 <AmiBlitz3.ab3@11114>   CMPI.l #$100,$4(A3)
00027CE8 <AmiBlitz3.ab3@11115>    BCS.w 'next
00027CEC <AmiBlitz3.ab3@11116>   MOVE.w $4(A2),D1
00027CF0 <AmiBlitz3.ab3@11117>    BSR.w pokedata1
00027CF4 <AmiBlitz3.ab3@11118>   MOVE.w $8(A3),D1
00027CF8 <AmiBlitz3.ab3@11119>    BSR.w pokedata1
00027CFA <AmiBlitz3.ab3@11120>   ADDQ.w #1,D4
00027CFC <AmiBlitz3.ab3@11123>   MOVEA.l (A2),A2
00027D00 <AmiBlitz3.ab3@11124>  BRA.w 'loop
00027D06 <AmiBlitz3.ab3@11129>   MOVEA.l sharebase,A2  ; org  varbase
00027D0A <AmiBlitz3.ab3@11132>   CMPA.w #$0,A2
00027D0E <AmiBlitz3.ab3@11133>    BEQ.w 'doneb
00027D12 <AmiBlitz3.ab3@11135>   TST.w $6(A2)
00027D16 <AmiBlitz3.ab3@11136>    BNE.w 'nextb
00027D1A <AmiBlitz3.ab3@11137>   MOVEA.l $A(A2),A3
00027D22 <AmiBlitz3.ab3@11138>   CMPI.l #$100,$4(A3)
00027D26 <AmiBlitz3.ab3@11139>    BCS.w 'nextb
00027D2A <AmiBlitz3.ab3@11140>   MOVE.w $4(A2),D1
00027D2E <AmiBlitz3.ab3@11141>    BSR.w pokedata1
00027D32 <AmiBlitz3.ab3@11142>   MOVE.w $8(A3),D1
00027D36 <AmiBlitz3.ab3@11143>    BSR.w pokedata1
00027D38 <AmiBlitz3.ab3@11144>   ADDQ.w #1,D4
00027D3A <AmiBlitz3.ab3@11147>   MOVEA.l (A2),A2
00027D3E <AmiBlitz3.ab3@11148>  BRA.w 'loopb
00027D40 <AmiBlitz3.ab3@11152>    TST.w D4
00027D44 <AmiBlitz3.ab3@11153>    BEQ.w calcstatic2_skip
00027D48 <AmiBlitz3.ab3@11154>   MOVE.w #$FF37,D1      ;#65335
00027D4C <AmiBlitz3.ab3@11155>    BSR.w uselib         ;use statics lib                                   ;use statics lib
00027D50 <AmiBlitz3.ab3@11156>   MOVE.w #$FFFA,D1      ;use memlib                                   ;use memlib
00027D54 <AmiBlitz3.ab3@11157> BRA.w uselib
00027D56 <AmiBlitz3.ab3@11160> RTS
00027D5C <AmiBlitz3.ab3@11164>   MOVE.w numtoa2,D1
00027D60 <AmiBlitz3.ab3@11165>    BSR.w writeword
00027D64 <AmiBlitz3.ab3@11166>    BSR.w addoff
00027D66 <AmiBlitz3.ab3@11167>   MOVE.l D3,D1
00027D6A <AmiBlitz3.ab3@11168>    BSR.w writelong
00027D6C <AmiBlitz3.ab3@11169>   SUBQ.w #1,D4
00027D72 <AmiBlitz3.ab3@11170>   MOVE.w D4,endarray+2
00027D78 <AmiBlitz3.ab3@11171>   MOVE.l endarray,D1
00027D7C <AmiBlitz3.ab3@11172> BRA.w writelong
00027D7E <AmiBlitz3.ab3@11176>   MOVE.l D3,-(A7)
00027D84 <AmiBlitz3.ab3@11179>   MOVEA.l _dosbase,A6
00027D88 <AmiBlitz3.ab3@11181>   JSR _Write(a6)
00027D8A <AmiBlitz3.ab3@11182>   CMP.l (A7)+,D0
00027D8E <AmiBlitz3.ab3@11183>    BNE.w 'skip
00027D90 <AmiBlitz3.ab3@11184>  RTS
00027D92 <AmiBlitz3.ab3@11187>   MOVE.l D7,D1
00027D98 <AmiBlitz3.ab3@11190>   MOVEA.l _dosbase,A6
00027D9C <AmiBlitz3.ab3@11192>   JSR _Close(a6)
00027DA2 <AmiBlitz3.ab3@11195> JMP error_create_exe
00027DA8 <AmiBlitz3.ab3@11204> 
00027DAE <AmiBlitz3.ab3@11206>   MOVE.l A7,errstack
00027DB2 <AmiBlitz3.ab3@11208>   MOVEM.l d2-d7/a2-a6,-(a7)
00027DBC <AmiBlitz3.ab3@11210>   MOVE.l #'rts,errcont
00027DC2 <AmiBlitz3.ab3@11212>    JSR call_setpointerbusy
00027DCA <AmiBlitz3.ab3@11214>   MOVE.w #$FFFF,anyerrs   ; was -1
00027DD4 <AmiBlitz3.ab3@11216>   CMP.l #-1,chipstart
00027DD8 <AmiBlitz3.ab3@11217>   BEQ 'l01
00027DDE <AmiBlitz3.ab3@11218>   MOVE.l chipend,d1
00027DE0 <AmiBlitz3.ab3@11219>   ADDQ.l #3,d1
00027DE6 <AmiBlitz3.ab3@11220>   AND.l #$fffffffc,d1                                      ;bug
00027DEC <AmiBlitz3.ab3@11221>   MOVE.l d1,chipend
00027DEE <AmiBlitz3.ab3@11222>   MOVE.l d1,a1
00027DF4 <AmiBlitz3.ab3@11223>   MOVE.l chipstart,a0
00027DF6 <AmiBlitz3.ab3@11224>   MOVE.l a1,d1
00027DF8 <AmiBlitz3.ab3@11225>   SUB.l a0,d1
00027DFE <AmiBlitz3.ab3@11226>   MOVE.l d1,chipsize
00027E08 <AmiBlitz3.ab3@11229>   CMP.l #-1,bssstart
00027E0C <AmiBlitz3.ab3@11230>   BEQ 'l11
00027E12 <AmiBlitz3.ab3@11231>   MOVE.l realbssend,a1
00027E18 <AmiBlitz3.ab3@11232>   MOVE.l bssstart,a0
00027E1A <AmiBlitz3.ab3@11233>   MOVE.l a1,d1
00027E1C <AmiBlitz3.ab3@11234>   SUB.l a0,d1
00027E22 <AmiBlitz3.ab3@11235>   MOVE.l d1,bsssize
00027E26 <AmiBlitz3.ab3@11236>   BEQ 'l11
00027E28 <AmiBlitz3.ab3@11239>   TST.b (a0)+
00027E2C <AmiBlitz3.ab3@11240>   BEQ 'l31
00027E32 <AmiBlitz3.ab3@11241>   TST.b debugmode
00027E36 <AmiBlitz3.ab3@11242>   BEQ 'l1
00027E3C <AmiBlitz3.ab3@11243>   TST.b exdebug
00027E40 <AmiBlitz3.ab3@11244>   BNE 'l31
00027E46 <AmiBlitz3.ab3@11247>   MOVE.l #nodata,-(a7)
00027E4C <AmiBlitz3.ab3@11248>  JMP handle_compileerror
00027E4E <AmiBlitz3.ab3@11251>   CMP.l a0,a1
00027E52 <AmiBlitz3.ab3@11252>   BGT 'l32
00027E58 <AmiBlitz3.ab3@11253>   MOVE.l bssend,d1
00027E5A <AmiBlitz3.ab3@11254>   ADDQ.l #3,d1
00027E60 <AmiBlitz3.ab3@11255>   AND.l #$fffffffc,d1                                      ;bug
00027E66 <AmiBlitz3.ab3@11256>   MOVE.l d1,bssend
00027E68 <AmiBlitz3.ab3@11257>   MOVE.l d1,a1
00027E6E <AmiBlitz3.ab3@11258>   MOVE.l bssstart,a0
00027E70 <AmiBlitz3.ab3@11259>   MOVE.l a1,d1
00027E72 <AmiBlitz3.ab3@11260>   SUB.l a0,d1
00027E78 <AmiBlitz3.ab3@11261>   MOVE.l d1,bsssize
00027E7C <AmiBlitz3.ab3@11264>   MOVEM.l d5-d7/d3,-(a7)
00027E82 <AmiBlitz3.ab3@11266>   MOVE.w dontwrite_nomemleft,D1
00027E86 <AmiBlitz3.ab3@11267>   BNE.w 'fixdone
00027E8C <AmiBlitz3.ab3@11269>   MOVE.l chipsize,d5
00027E92 <AmiBlitz3.ab3@11270>   MOVE.l bsssize,d3
00027E98 <AmiBlitz3.ab3@11271>   MOVE.l chipstart,d7
00027E9E <AmiBlitz3.ab3@11272>   MOVE.l bssstart,d6
00027EA4 <AmiBlitz3.ab3@11274>   MOVEA.l hunkoffsetbase,A2
00027EAA <AmiBlitz3.ab3@11275>   MOVEA.l destbufferstart,A1
00027EAC <AmiBlitz3.ab3@11276>   MOVE.l A1,D2
00027EB2 <AmiBlitz3.ab3@11277>   ADD.l noinits,D2
00027EB8 <AmiBlitz3.ab3@11279>   CLR.l hunkoffsetnum
00027EBC <AmiBlitz3.ab3@11283>   CMPA.w #$0,A2
00027EC0 <AmiBlitz3.ab3@11284>    BEQ.w 'fixdone
00027EC4 <AmiBlitz3.ab3@11285>   MOVE.l $4(A2),D0
00027EC8 <AmiBlitz3.ab3@11287>    LEA $0(a1,d0.l),a0
00027ECA <AmiBlitz3.ab3@11288>    MOVE.l (a0),d1
00027ECC <AmiBlitz3.ab3@11289>   TST.l d1
00027ED0 <AmiBlitz3.ab3@11290>    BMI.w 'lm1a
00027ED8 <AmiBlitz3.ab3@11291>   MOVE.b #0,newhunk
00027EE2 <AmiBlitz3.ab3@11292>   CMP.l #-1,chipstart
00027EE6 <AmiBlitz3.ab3@11293>   BEQ 'l10a
00027EEC <AmiBlitz3.ab3@11294>   CMP.l chipstart,d1
00027EF0 <AmiBlitz3.ab3@11295>   BLT 'l10a
00027EF8 <AmiBlitz3.ab3@11296>   MOVE.b #1,newhunk
00027EFE <AmiBlitz3.ab3@11297>   CMP.l chipend,d1
00027F02 <AmiBlitz3.ab3@11298>   BGE 'l110a
00027F04 <AmiBlitz3.ab3@11299>   SUB.l d7,(a0)
00027F0C <AmiBlitz3.ab3@11300>   ADD.l #$80000000,4(a2)
00027F10 <AmiBlitz3.ab3@11301>  BRA 'noway
00027F14 <AmiBlitz3.ab3@11304>   SUB.l d5,0(a0)
00027F1E <AmiBlitz3.ab3@11307>   CMP.l #-1,bssstart
00027F22 <AmiBlitz3.ab3@11308>     BEQ 'l11a
00027F28 <AmiBlitz3.ab3@11309>   CMP.l bssstart,d1
00027F2C <AmiBlitz3.ab3@11310>   BLT 'l11a
00027F32 <AmiBlitz3.ab3@11311>   CMP.l bssend,d1
00027F36 <AmiBlitz3.ab3@11312>   BGE 'l111a
00027F3C <AmiBlitz3.ab3@11313>   TST.b newhunk
00027F40 <AmiBlitz3.ab3@11314>   BEQ 'ln1a
00027F42 <AmiBlitz3.ab3@11315>   ADD.l d5,(a0)
00027F44 <AmiBlitz3.ab3@11318>   SUB.l d6,(a0)
00027F4C <AmiBlitz3.ab3@11319>   ADD.l #$40000000,4(a2)
00027F50 <AmiBlitz3.ab3@11320>  BRA 'noway
00027F54 <AmiBlitz3.ab3@11323>   SUB.l d3,0(a0)
00027F56 <AmiBlitz3.ab3@11326>   SUB.l D2,(A0)
00027F5C <AmiBlitz3.ab3@11329>   ADDQ.l #1,hunkoffsetnum
00027F5E <AmiBlitz3.ab3@11333>    MOVEA.l (A2),A2
00027F62 <AmiBlitz3.ab3@11334>  BRA.w 'loop0
00027F66 <AmiBlitz3.ab3@11338>   MOVEM.l (a7)+,d5-d7/d3
00027F6C <AmiBlitz3.ab3@11340>   MOVE.l ptr_newexefilename,D1
00027F72 <AmiBlitz3.ab3@11341>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027F78 <AmiBlitz3.ab3@11342>   MOVEA.l _dosbase,A6
00027F7C <AmiBlitz3.ab3@11343>    JSR _Open(A6)
00027F7E <AmiBlitz3.ab3@11344>   MOVE.l D0,D7
00027F82 <AmiBlitz3.ab3@11345>    BEQ.w execerr
00027F88 <AmiBlitz3.ab3@11347>   MOVE.l objlen,D0
00027F8E <AmiBlitz3.ab3@11349>   SUB.l #moremem,d0
00027F94 <AmiBlitz3.ab3@11351>   SUB.l noinits,D0
00027F9E <AmiBlitz3.ab3@11353>   CMP.l #-1,bssstart
00027FA2 <AmiBlitz3.ab3@11354>   BEQ 'l60
00027FA8 <AmiBlitz3.ab3@11355>   SUB.l bsssize,d0
00027FAE <AmiBlitz3.ab3@11356>   SUB.l chipsize,d0
00027FB2 <AmiBlitz3.ab3@11357>  BRA.s 'l61
00027FBC <AmiBlitz3.ab3@11360>   CMP.l #-1,chipstart
00027FC0 <AmiBlitz3.ab3@11361>   BEQ 'l61
00027FC6 <AmiBlitz3.ab3@11362>   SUB.l bsssize,d0
00027FCC <AmiBlitz3.ab3@11363>   SUB.l chipsize,d0
00027FCE <AmiBlitz3.ab3@11367>   ADDQ.l #3,D0
00027FD0 <AmiBlitz3.ab3@11368>   LSR.l #2,D0
00027FD6 <AmiBlitz3.ab3@11369>   MOVE.l D0,tstsize1
00027FDC <AmiBlitz3.ab3@11370>   MOVE.l D0,tstsize2
00027FDE <AmiBlitz3.ab3@11371>   MOVE.l D7,D1
00027FE4 <AmiBlitz3.ab3@11372>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027FE6 <AmiBlitz3.ab3@11373>   MOVEQ.l #$20,D3
00027FF0 <AmiBlitz3.ab3@11375>   CMP.l #-1,bssstart
00027FF4 <AmiBlitz3.ab3@11376>   BEQ 'lb1
00027FFE <AmiBlitz3.ab3@11377>   CMP.l #-1,chipstart
00028002 <AmiBlitz3.ab3@11378>   BEQ 'lb1
0002800C <AmiBlitz3.ab3@11379>   MOVE.l #1,bssnum
00028016 <AmiBlitz3.ab3@11380>   MOVE.l #2,chipnum
00028018 <AmiBlitz3.ab3@11381>   MOVEQ.l #$28,D3
0002801E <AmiBlitz3.ab3@11382>   MOVE.l bsssize,d2
00028020 <AmiBlitz3.ab3@11383>   ADDQ.l #3,d2
00028022 <AmiBlitz3.ab3@11384>   ASR.l #2,d2
00028028 <AmiBlitz3.ab3@11385>   MOVE.l d2,hunkend+8
0002802E <AmiBlitz3.ab3@11386>   MOVE.l d2,bsssize3
00028034 <AmiBlitz3.ab3@11387>   MOVE.l chipsize,d2
00028036 <AmiBlitz3.ab3@11388>   ADDQ.l #3,d2
00028038 <AmiBlitz3.ab3@11389>   ASR.l #2,d2
0002803E <AmiBlitz3.ab3@11390>   MOVE.l d2,chipsize2
00028048 <AmiBlitz3.ab3@11391>   ADD.l #$40000000,chipsize2
0002804E <AmiBlitz3.ab3@11392>   MOVE.l d2,hunkend2+8
00028054 <AmiBlitz3.ab3@11393>   MOVE.l D0,tstsize1c
0002805A <AmiBlitz3.ab3@11394>   MOVE.l D0,tstsize2c
00028060 <AmiBlitz3.ab3@11395>   MOVE.l #hunkbegin2,d2
00028064 <AmiBlitz3.ab3@11396>  BRA 'l100b
0002806E <AmiBlitz3.ab3@11399>   CMP.l #-1,bssstart
00028072 <AmiBlitz3.ab3@11400>   BEQ 'l10b
0002807C <AmiBlitz3.ab3@11401>   MOVE.l #1,bssnum
0002807E <AmiBlitz3.ab3@11402>   MOVEQ.l #$24,D3
00028084 <AmiBlitz3.ab3@11403>   MOVE.l bsssize,d2
00028086 <AmiBlitz3.ab3@11404>   ADDQ.l #3,d2
00028088 <AmiBlitz3.ab3@11405>   ASR.l #2,d2
0002808E <AmiBlitz3.ab3@11406>   MOVE.l d2,hunkend+8
00028094 <AmiBlitz3.ab3@11407>   MOVE.l d2,bsssize2
0002809A <AmiBlitz3.ab3@11408>   MOVE.l D0,tstsize1b
000280A0 <AmiBlitz3.ab3@11409>   MOVE.l D0,tstsize2b
000280A6 <AmiBlitz3.ab3@11410>   MOVE.l #hunkbegin,d2
000280B0 <AmiBlitz3.ab3@11413>   CMP.l #-1,chipstart
000280B4 <AmiBlitz3.ab3@11414>   BEQ 'l100b
000280BE <AmiBlitz3.ab3@11415>   MOVE.l #1,chipnum
000280C0 <AmiBlitz3.ab3@11416>   MOVEQ.l #$24,D3
000280C6 <AmiBlitz3.ab3@11417>   MOVE.l chipsize,d2
000280C8 <AmiBlitz3.ab3@11418>   ADDQ.l #3,d2
000280CA <AmiBlitz3.ab3@11419>   ASR.l #2,d2
000280D0 <AmiBlitz3.ab3@11420>   MOVE.l d2,hunkend2+8
000280D6 <AmiBlitz3.ab3@11421>   MOVE.l d2,bsssize2
000280E0 <AmiBlitz3.ab3@11422>   ADD.l #$40000000,bsssize2
000280E6 <AmiBlitz3.ab3@11423>   MOVE.l D0,tstsize1b
000280EC <AmiBlitz3.ab3@11424>   MOVE.l D0,tstsize2b
000280F2 <AmiBlitz3.ab3@11425>   MOVE.l #hunkbegin,d2
000280F6 <AmiBlitz3.ab3@11429>    BSR.w mywrite
000280FC <AmiBlitz3.ab3@11431>   MOVE.l destbufferstart,D2
00028102 <AmiBlitz3.ab3@11432>   ADD.l noinits,D2
00028108 <AmiBlitz3.ab3@11433>   MOVE.l objlen,D3
0002810E <AmiBlitz3.ab3@11434>   SUB.l #moremem,d3
00028114 <AmiBlitz3.ab3@11435>   SUB.l noinits,D3
0002811E <AmiBlitz3.ab3@11437>   CMP.l #-1,bssstart
00028122 <AmiBlitz3.ab3@11438>   BNE 'l40
0002812C <AmiBlitz3.ab3@11439>   CMP.l #-1,chipstart
00028130 <AmiBlitz3.ab3@11440>   BNE 'l40
00028134 <AmiBlitz3.ab3@11441>  BRA 'l41
0002813A <AmiBlitz3.ab3@11444>   MOVE.l codeend,d1
0002813C <AmiBlitz3.ab3@11445>     SUB.l d2,d1
0002813E <AmiBlitz3.ab3@11446>     MOVE.l d1,d3
00028144 <AmiBlitz3.ab3@11447>   SUB.l bsssize,d3
0002814A <AmiBlitz3.ab3@11448>   SUB.l chipsize,d3
0002814C <AmiBlitz3.ab3@11449>   MOVE.l D7,D1
00028150 <AmiBlitz3.ab3@11450>   BSR.w mywrite
00028156 <AmiBlitz3.ab3@11451>   MOVE.l objlen,D3
0002815C <AmiBlitz3.ab3@11452>   SUB.l #moremem,d3
00028162 <AmiBlitz3.ab3@11453>   SUB.l noinits,D3
00028164 <AmiBlitz3.ab3@11454>   MOVE.l d3,d1
0002816A <AmiBlitz3.ab3@11455>   MOVE.l destbufferstart,D2
00028170 <AmiBlitz3.ab3@11456>   ADD.l noinits,D2
00028172 <AmiBlitz3.ab3@11457>   ADD.l d2,d1
00028178 <AmiBlitz3.ab3@11458>   SUB.l codeend,d1
0002817A <AmiBlitz3.ab3@11459>   MOVE.l d1,d3
00028180 <AmiBlitz3.ab3@11460>   MOVE.l codeend,d2
00028182 <AmiBlitz3.ab3@11463>   MOVE.l d2,d1
00028184 <AmiBlitz3.ab3@11464>   ADD.l d3,d1
00028186 <AmiBlitz3.ab3@11466>   ADDQ.l #3,D1
0002818C <AmiBlitz3.ab3@11467>   ANDI.l #$FFFFFFFC,D1
0002818E <AmiBlitz3.ab3@11469>   SUB.l d2,d1
00028190 <AmiBlitz3.ab3@11470>   MOVE.l d1,d3
00028192 <AmiBlitz3.ab3@11471>   MOVE.l D7,D1
00028196 <AmiBlitz3.ab3@11473>    BSR.w mywrite
000281A0 <AmiBlitz3.ab3@11475>   MOVE.l hunkoffsetcounter,tstsize3
000281A4 <AmiBlitz3.ab3@11476>    BEQ.w 'skip
000281A6 <AmiBlitz3.ab3@11477>   MOVE.l D7,D1
000281AC <AmiBlitz3.ab3@11478>   MOVE.l #tstend,D2
000281AE <AmiBlitz3.ab3@11479>   MOVEQ.l #$04,D3           ; was #12
000281B2 <AmiBlitz3.ab3@11480>    BSR.w mywrite
000281B8 <AmiBlitz3.ab3@11482>    MOVEA.l _execbase,A6
000281BE <AmiBlitz3.ab3@11483>    MOVE.l hunkoffsetcounter,d0
000281C0 <AmiBlitz3.ab3@11484>    ASL.l #2,d0
000281C6 <AmiBlitz3.ab3@11485>    ADD.l #12,d0
000281C8 <AmiBlitz3.ab3@11486>    MOVEQ #0,d1
000281CC <AmiBlitz3.ab3@11487>    JSR _AllocMem(a6)
000281CE <AmiBlitz3.ab3@11488>    TST.l d0
000281D2 <AmiBlitz3.ab3@11489>    BEQ 'nomem
000281D8 <AmiBlitz3.ab3@11490>    MOVE.l noinits,D4
000281DA <AmiBlitz3.ab3@11491>    MOVE.l d5,-(a7)
000281DC <AmiBlitz3.ab3@11492>    MOVE.l d0,d5
000281DE <AmiBlitz3.ab3@11493>    MOVE.l d0,a1
000281E4 <AmiBlitz3.ab3@11494>    MOVEA.l hunkoffsetbase,A2
000281EC <AmiBlitz3.ab3@11495>    MOVE.b #0,newhunk
000281F0 <AmiBlitz3.ab3@11498>   CMPA.w #$0,A2
000281F4 <AmiBlitz3.ab3@11499>    BEQ.w 'savehunk
000281FA <AmiBlitz3.ab3@11500>   MOVE.l destbufferstart,D2
00028200 <AmiBlitz3.ab3@11501>   ADD.l noinits,D2
00028204 <AmiBlitz3.ab3@11502>   MOVE.l  $4(A2),d1
00028208 <AmiBlitz3.ab3@11503>   BTST #31,d1
0002820C <AmiBlitz3.ab3@11504>   BEQ 'lh1
00028214 <AmiBlitz3.ab3@11505>   MOVE.b #1,newhunk
00028218 <AmiBlitz3.ab3@11506>  BRA 'lh3
0002821C <AmiBlitz3.ab3@11509>   BTST #30,d1
00028220 <AmiBlitz3.ab3@11510>   BEQ 'lh2
00028228 <AmiBlitz3.ab3@11511>   MOVE.b #1,newhunk
0002822C <AmiBlitz3.ab3@11512>  BRA 'lh3
0002822E <AmiBlitz3.ab3@11515>   ADD.l d1,d2
00028234 <AmiBlitz3.ab3@11516>   CMP.l chipend,d2
00028238 <AmiBlitz3.ab3@11517>   BLT 'l102c
0002823E <AmiBlitz3.ab3@11518>   SUB.l chipsize,d1
00028244 <AmiBlitz3.ab3@11521>   CMP.l bssend,d2
00028248 <AmiBlitz3.ab3@11522>   BLT 'l101c
0002824E <AmiBlitz3.ab3@11523>   SUB.l bsssize,d1
00028250 <AmiBlitz3.ab3@11526>   MOVE.l d1,(a1)
00028252 <AmiBlitz3.ab3@11527>   SUB.l D4,(A1)+
00028254 <AmiBlitz3.ab3@11530>   MOVEA.l (A2),A2
00028258 <AmiBlitz3.ab3@11531>  BRA.w 'oloopb
0002825A <AmiBlitz3.ab3@11534>   MOVE.l D7,D1
00028260 <AmiBlitz3.ab3@11535>   MOVEA.l _dosbase,A6
0002826A <AmiBlitz3.ab3@11536>   MOVE.l hunkoffsetnum,tstsize3
0002826E <AmiBlitz3.ab3@11537>   BEQ 'ln1c
00028274 <AmiBlitz3.ab3@11538>   MOVE.l #tstend+4,d2
00028276 <AmiBlitz3.ab3@11539>     MOVEQ #8,d3
0002827A <AmiBlitz3.ab3@11540>    JSR _Write(A6)
0002827C <AmiBlitz3.ab3@11541>   MOVE.l d7,d1
00028282 <AmiBlitz3.ab3@11542>   MOVE.l hunkoffsetnum,d3
00028284 <AmiBlitz3.ab3@11543>   ASL.l #2,d3
00028286 <AmiBlitz3.ab3@11544>   MOVE.l d5,D2
0002828A <AmiBlitz3.ab3@11545>   JSR _Write(a6)
00028290 <AmiBlitz3.ab3@11548>   TST.b newhunk
00028294 <AmiBlitz3.ab3@11549>   BEQ 'l10c
0002829A <AmiBlitz3.ab3@11550>   MOVEA.l hunkoffsetbase,A2
0002829C <AmiBlitz3.ab3@11551>   MOVE.l d5,a0
0002829E <AmiBlitz3.ab3@11552>   ADDQ #8,a0
000282A6 <AmiBlitz3.ab3@11553>   MOVE.l bssnum,-4(a0)
000282A8 <AmiBlitz3.ab3@11554>   MOVEQ #0,d6
000282AC <AmiBlitz3.ab3@11557>   CMPA.w #$0,A2
000282B0 <AmiBlitz3.ab3@11558>    BEQ.w 'lh3c
000282B6 <AmiBlitz3.ab3@11559>   MOVE.l destbufferstart,D2
000282BC <AmiBlitz3.ab3@11560>   ADD.l noinits,D2
000282C0 <AmiBlitz3.ab3@11561>   MOVE.l  $4(A2),d1
000282C4 <AmiBlitz3.ab3@11562>   BTST #30,d1
000282C8 <AmiBlitz3.ab3@11563>   BEQ 'lh1c
000282CC <AmiBlitz3.ab3@11564>   BCLR #30,d1
000282CE <AmiBlitz3.ab3@11565>   MOVE.l d1,(a0)
000282D0 <AmiBlitz3.ab3@11566>   SUB.l D4,(A0)+
000282D2 <AmiBlitz3.ab3@11567>   ADDQ.l #1,d6
000282D4 <AmiBlitz3.ab3@11570>   MOVE.l (a2),a2
000282D8 <AmiBlitz3.ab3@11571>  BRA 'lh2c
000282DA <AmiBlitz3.ab3@11574>   TST.l d6
000282DE <AmiBlitz3.ab3@11575>     BEQ 'lh10c
000282E0 <AmiBlitz3.ab3@11576>     MOVE.l d5,a0
000282E2 <AmiBlitz3.ab3@11577>     MOVE.l d6,(a0)
000282E4 <AmiBlitz3.ab3@11578>     MOVE.l d7,d1
000282E6 <AmiBlitz3.ab3@11579>     MOVE.l d5,d2
000282E8 <AmiBlitz3.ab3@11580>     MOVE.l d6,d3
000282EA <AmiBlitz3.ab3@11581>     ASL.l #2,d3
000282EC <AmiBlitz3.ab3@11582>     ADDQ.l #8,d3
000282F0 <AmiBlitz3.ab3@11583>     BSR.w mywrite
000282F6 <AmiBlitz3.ab3@11586>   MOVEA.l hunkoffsetbase,A2
000282F8 <AmiBlitz3.ab3@11587>   MOVE.l d5,a0
000282FA <AmiBlitz3.ab3@11588>   ADDQ #8,a0
00028302 <AmiBlitz3.ab3@11589>   MOVE.l chipnum,-4(a0)
00028304 <AmiBlitz3.ab3@11590>   MOVEQ #0,d6
00028308 <AmiBlitz3.ab3@11593>   CMPA.w #$0,A2
0002830C <AmiBlitz3.ab3@11594>    BEQ.w 'lh30c
00028312 <AmiBlitz3.ab3@11595>   MOVE.l destbufferstart,D2
00028318 <AmiBlitz3.ab3@11596>   ADD.l noinits,D2
0002831C <AmiBlitz3.ab3@11597>   MOVE.l  $4(A2),d1
00028320 <AmiBlitz3.ab3@11598>   BTST #31,d1
00028324 <AmiBlitz3.ab3@11599>   BEQ 'lh11c
00028328 <AmiBlitz3.ab3@11600>   BCLR #31,d1
0002832A <AmiBlitz3.ab3@11601>   MOVE.l d1,(a0)
0002832C <AmiBlitz3.ab3@11602>   SUB.l D4,(A0)+
0002832E <AmiBlitz3.ab3@11603>   ADDQ.l #1,d6
00028330 <AmiBlitz3.ab3@11606>   MOVE.l (a2),a2
00028334 <AmiBlitz3.ab3@11607>  BRA 'lh20c
00028336 <AmiBlitz3.ab3@11610>   TST.l d6
0002833A <AmiBlitz3.ab3@11611>     BEQ 'l10c
0002833C <AmiBlitz3.ab3@11612>     MOVE.l d5,a0
0002833E <AmiBlitz3.ab3@11613>     MOVE.l d6,(a0)
00028340 <AmiBlitz3.ab3@11614>     MOVE.l d7,d1
00028342 <AmiBlitz3.ab3@11615>     MOVE.l d5,d2
00028344 <AmiBlitz3.ab3@11616>     MOVE.l d6,d3
00028346 <AmiBlitz3.ab3@11617>     ASL.l #2,d3
00028348 <AmiBlitz3.ab3@11618>     ADDQ.l #8,d3
0002834C <AmiBlitz3.ab3@11619>     BSR.w mywrite
00028352 <AmiBlitz3.ab3@11623>    MOVEA.l _execbase,A6
00028358 <AmiBlitz3.ab3@11624>    MOVE.l hunkoffsetcounter,d0
0002835A <AmiBlitz3.ab3@11625>    ASL.l #2,d0
00028360 <AmiBlitz3.ab3@11626>    ADD.l #12,d0
00028362 <AmiBlitz3.ab3@11627>    MOVE.l d5,a1
00028366 <AmiBlitz3.ab3@11628>    JSR _FreeMem(a6)
0002836C <AmiBlitz3.ab3@11629>    MOVEA.l _dosbase,A6
0002836E <AmiBlitz3.ab3@11630>    MOVE.l (a7)+,d5
00028372 <AmiBlitz3.ab3@11631>  BRA 'skip2
00028378 <AmiBlitz3.ab3@11635>   MOVEA.l hunkoffsetbase,A2
0002837E <AmiBlitz3.ab3@11636>   MOVE.l noinits,D4
00028382 <AmiBlitz3.ab3@11639>   CMPA.w #$0,A2                                            ;write hunkoffsets
00028386 <AmiBlitz3.ab3@11640>   BEQ.w 'skip2
0002838A <AmiBlitz3.ab3@11641>   LEA $4(A2),A1
0002838C <AmiBlitz3.ab3@11642>   SUB.l D4,(A1)
0002838E <AmiBlitz3.ab3@11643>   MOVE.l D7,D1
00028390 <AmiBlitz3.ab3@11644>   MOVE.l A1,D2
00028392 <AmiBlitz3.ab3@11645>   MOVEQ.l #$04,D3
00028396 <AmiBlitz3.ab3@11646>   BSR.w mywrite
0002839A <AmiBlitz3.ab3@11648>   ADD.l D4,$4(A2)
0002839C <AmiBlitz3.ab3@11649>   MOVEA.l (A2),A2
000283A0 <AmiBlitz3.ab3@11650>  BRA.w 'loop
000283A6 <AmiBlitz3.ab3@11653>   CLR.l tstsize3
000283A8 <AmiBlitz3.ab3@11654>   MOVE.l D7,D1
000283AE <AmiBlitz3.ab3@11655>   MOVE.l #tstsize3,D2
000283B0 <AmiBlitz3.ab3@11656>   MOVEQ.l #$04,D3
000283B4 <AmiBlitz3.ab3@11657>    BSR.w mywrite
000283BC <AmiBlitz3.ab3@11660>   BTST #$7,link_debuginfo
000283C0 <AmiBlitz3.ab3@11661>    BEQ.w 'nodebug
000283C6 <AmiBlitz3.ab3@11663>   MOVE.l #sysdebug,D2                                      ;debughunks
000283C8 <AmiBlitz3.ab3@11664>   MOVEQ.l #$04,D3
000283CA <AmiBlitz3.ab3@11665>   MOVE.l D7,D1
000283CE <AmiBlitz3.ab3@11666>    BSR.w mywrite
000283D4 <AmiBlitz3.ab3@11668>   MOVEA.l labelbase,A2
000283D8 <AmiBlitz3.ab3@11671>   CMPA.w #$0,A2
000283DC <AmiBlitz3.ab3@11672>    BEQ.w 'dedone
000283E2 <AmiBlitz3.ab3@11673>   BTST #$0,$7(A2)
000283E6 <AmiBlitz3.ab3@11674>    BEQ.w 'dedeb
000283EE <AmiBlitz3.ab3@11675>   CMPI.l #$1,$4(A2)
000283F2 <AmiBlitz3.ab3@11678>   BRA.w 'denext                                            ;only addr labels
000283F4 <AmiBlitz3.ab3@11682>   MOVEQ.l #$00,D4
000283F8 <AmiBlitz3.ab3@11683>   MOVE.b $12(A2),D4
000283FC <AmiBlitz3.ab3@11684>   SUBI.w #$13,D4
000283FE <AmiBlitz3.ab3@11685>   ADDQ.w #2,D4
00028402 <AmiBlitz3.ab3@11686>   ANDI.w #$FFFC,D4     ;long align
00028404 <AmiBlitz3.ab3@11687>   MOVE.l D4,D5
00028406 <AmiBlitz3.ab3@11688>   LSR.w #2,D5
0002840C <AmiBlitz3.ab3@11689>   MOVE.l D5,temp1
0002840E <AmiBlitz3.ab3@11690>   LSL.w #2,D5          ;#bytes
00028414 <AmiBlitz3.ab3@11692>   MOVE.l #temp1,a1
0002841A <AmiBlitz3.ab3@11696>   LEA debugstore,a0
0002841C <AmiBlitz3.ab3@11697>   MOVE.l (a1),(a0)+
0002841E <AmiBlitz3.ab3@11699>   MOVEQ.l #$04,D3
00028422 <AmiBlitz3.ab3@11703>   LEA $13(A2),A1
00028424 <AmiBlitz3.ab3@11705>   MOVE.l d4,d1
00028426 <AmiBlitz3.ab3@11706>   SUBQ.l #1,d1
00028428 <AmiBlitz3.ab3@11709>     MOVE.b (a1)+,d0
0002842C <AmiBlitz3.ab3@11710>     BEQ 'l21d
00028430 <AmiBlitz3.ab3@11711>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00028434 <AmiBlitz3.ab3@11712>     BNE 'ok
00028438 <AmiBlitz3.ab3@11713>     MOVE.b #"_",d0
0002843A <AmiBlitz3.ab3@11716>    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
0002843E <AmiBlitz3.ab3@11717>   DBF d1,'l10d
00028442 <AmiBlitz3.ab3@11719>   BRA 'l22d
00028444 <AmiBlitz3.ab3@11722>       CLR.b (a0)+
00028448 <AmiBlitz3.ab3@11723>   DBF d1,'l21d
0002844A <AmiBlitz3.ab3@11726>   ADD.l d4,d3
0002844C <AmiBlitz3.ab3@11733>   SUB.l D4,D5
00028450 <AmiBlitz3.ab3@11734>    BEQ.w 'deoff
00028456 <AmiBlitz3.ab3@11736>   MOVE.l #zero,a1
00028458 <AmiBlitz3.ab3@11740>   MOVE.l (a1),(a0)+
0002845A <AmiBlitz3.ab3@11744>   ADD.l d5,d3
0002845E <AmiBlitz3.ab3@11750>   MOVE.l $8(A2),D2
00028464 <AmiBlitz3.ab3@11751>   SUB.l destbufferstart,D2
0002846A <AmiBlitz3.ab3@11752>   SUB.l noinits,D2
00028470 <AmiBlitz3.ab3@11753>   MOVE.l D2,temp1
00028476 <AmiBlitz3.ab3@11755>   MOVE.l #temp1,a1
00028478 <AmiBlitz3.ab3@11759>   MOVE.l (a1),(a0)+
0002847E <AmiBlitz3.ab3@11760>   ADD.l #4,d3
00028484 <AmiBlitz3.ab3@11761>   LEA debugstore,a0
00028486 <AmiBlitz3.ab3@11762>   MOVE.l a0,d2
00028488 <AmiBlitz3.ab3@11765>   MOVE.l D7,D1
0002848C <AmiBlitz3.ab3@11766>   BSR.w mywrite
0002848E <AmiBlitz3.ab3@11769>   MOVEA.l (A2),A2
00028492 <AmiBlitz3.ab3@11770>  BRA.w 'deloop
00028498 <AmiBlitz3.ab3@11773>   MOVE.l #zero,D2
0002849A <AmiBlitz3.ab3@11774>   MOVEQ.l #$04,D3
0002849C <AmiBlitz3.ab3@11775>   MOVE.l D7,D1
000284A0 <AmiBlitz3.ab3@11776>   BSR.w mywrite
000284A2 <AmiBlitz3.ab3@11779>   MOVE.l D7,D1
000284A8 <AmiBlitz3.ab3@11780>   MOVE.l #tstdone,D2                                      ;hunkend
000284AA <AmiBlitz3.ab3@11781>   MOVEQ.l #$04,D3
000284B4 <AmiBlitz3.ab3@11783>   CMPI.l #-1,bssstart
000284B8 <AmiBlitz3.ab3@11784>   BEQ 'l10e
000284BA <AmiBlitz3.ab3@11785>   MOVEQ #16,d3
000284C0 <AmiBlitz3.ab3@11786>   MOVE.l #hunkend,d2
000284CA <AmiBlitz3.ab3@11787>   CMPI.l #-1,chipstart
000284CE <AmiBlitz3.ab3@11788>   BEQ 'l10e
000284D0 <AmiBlitz3.ab3@11789>   MOVE.l d7,d1
000284D2 <AmiBlitz3.ab3@11790>   MOVEQ #12,d3
000284D6 <AmiBlitz3.ab3@11791>   BSR.w mywrite
000284E0 <AmiBlitz3.ab3@11794>   CMPI.l #-1,chipstart
000284E4 <AmiBlitz3.ab3@11795>   BEQ 'l11e
000284E6 <AmiBlitz3.ab3@11796>   MOVEQ #12,d3
000284EC <AmiBlitz3.ab3@11797>   MOVE.l #hunkend2,d2
000284EE <AmiBlitz3.ab3@11798>   MOVE.l d7,d1
000284F2 <AmiBlitz3.ab3@11799>   BSR.w mywrite
000284F4 <AmiBlitz3.ab3@11800>   MOVE.l d7,d1
000284FA <AmiBlitz3.ab3@11801>   MOVE.l chipstart,d2
00028500 <AmiBlitz3.ab3@11802>   MOVE.l chipsize,d3
00028504 <AmiBlitz3.ab3@11803>   BSR.w mywrite
00028506 <AmiBlitz3.ab3@11804>   MOVEQ #4,d3
0002850C <AmiBlitz3.ab3@11805>   MOVE.l #hunkend,d2
0002850E <AmiBlitz3.ab3@11806>   MOVE.l d7,d1
00028512 <AmiBlitz3.ab3@11810>   BSR.w mywrite
00028514 <AmiBlitz3.ab3@11811>   MOVE.l D7,D1
0002851A <AmiBlitz3.ab3@11812>   MOVEA.l _dosbase,A6
0002851E <AmiBlitz3.ab3@11813>   JSR _Close(A6)
00028526 <AmiBlitz3.ab3@11818>   BTST #$7,create_iconfile
0002852A <AmiBlitz3.ab3@11819>    BEQ.w 'done
00028530 <AmiBlitz3.ab3@11823>   MOVEA.l ptr_newexefilename,A0
00028532 <AmiBlitz3.ab3@11826>     TST.b (A0)+
00028536 <AmiBlitz3.ab3@11827>   BNE.w 'iloop
00028538 <AmiBlitz3.ab3@11828>   SUBQ.w #1,A0
0002853A <AmiBlitz3.ab3@11829>   MOVE.l A0,-(A7)        ;to later null out!
00028540 <AmiBlitz3.ab3@11830>   LEA str_infoextention2,A1
00028542 <AmiBlitz3.ab3@11833>     MOVE.b (A1)+,(A0)+
00028546 <AmiBlitz3.ab3@11834>   BNE.w 'iloop2
0002854C <AmiBlitz3.ab3@11836>   MOVE.l ptr_newexefilename,D1
0002854E <AmiBlitz3.ab3@11837>   MOVEQ.l #-$02,D2
00028554 <AmiBlitz3.ab3@11838>   MOVEA.l _dosbase,A6
00028558 <AmiBlitz3.ab3@11839>   JSR _Lock(A6)
0002855A <AmiBlitz3.ab3@11840>   MOVE.l D0,D1
0002855E <AmiBlitz3.ab3@11841>   BEQ.w 'dildo      ;not exist                                    ;no icon exit so jump to create one  tomsmart1
00028562 <AmiBlitz3.ab3@11842>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00028566 <AmiBlitz3.ab3@11843>  BRA.w 'ifail                                            ;and skip writing a Icon  tomsmart1
0002856C <AmiBlitz3.ab3@11846>   MOVE.l ptr_newexefilename,D1
00028572 <AmiBlitz3.ab3@11847>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00028578 <AmiBlitz3.ab3@11848>   MOVEA.l _dosbase,A6
0002857C <AmiBlitz3.ab3@11849>    JSR _Open(A6)
0002857E <AmiBlitz3.ab3@11850>   MOVE.l D0,D7
00028582 <AmiBlitz3.ab3@11851>    BEQ.w 'ifail
00028588 <AmiBlitz3.ab3@11852>   MOVE.l #icongfx_data,D2                                  ; icon graphics
0002858E <AmiBlitz3.ab3@11853>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00028590 <AmiBlitz3.ab3@11854>   MOVE.l D7,D1
00028596 <AmiBlitz3.ab3@11855>   MOVEA.l _dosbase,A6
0002859A <AmiBlitz3.ab3@11856>   JSR _Write(A6)
0002859C <AmiBlitz3.ab3@11857>   MOVE.l D7,D1
000285A0 <AmiBlitz3.ab3@11858>   JSR _Close(A6)
000285A2 <AmiBlitz3.ab3@11861>   MOVEA.l (A7)+,A0
000285A4 <AmiBlitz3.ab3@11862>   CLR.b (A0)
000285AA <AmiBlitz3.ab3@11868>   TST.b exdebug
000285AE <AmiBlitz3.ab3@11869>    BEQ 'fixdoneb
000285B4 <AmiBlitz3.ab3@11870>   MOVE.w dontwrite_nomemleft,D1
000285B8 <AmiBlitz3.ab3@11871>   BNE.w 'fixdoneb
000285BE <AmiBlitz3.ab3@11872>   MOVE.l chipsize,d5
000285C4 <AmiBlitz3.ab3@11873>   MOVE.l bsssize,d3
000285CA <AmiBlitz3.ab3@11874>   MOVE.l chipstart,d7
000285D0 <AmiBlitz3.ab3@11875>   MOVE.l bssstart,d6
000285D6 <AmiBlitz3.ab3@11876>   MOVEA.l hunkoffsetbase,A2
000285DC <AmiBlitz3.ab3@11877>   MOVEA.l destbufferstart,A1
000285DE <AmiBlitz3.ab3@11878>   MOVE.l A1,D2
000285E4 <AmiBlitz3.ab3@11879>   ADD.l noinits,D2
000285EA <AmiBlitz3.ab3@11880>   CLR.l hunkoffsetnum
000285EE <AmiBlitz3.ab3@11883>   CMPA.w #$0,A2
000285F2 <AmiBlitz3.ab3@11884>    BEQ.w 'fixdoneb
000285F6 <AmiBlitz3.ab3@11885>   MOVE.l $4(A2),D0
000285FA <AmiBlitz3.ab3@11886>    LEA $0(a1,d0.l),a0
000285FC <AmiBlitz3.ab3@11887>    MOVE.l (a0),d1
000285FE <AmiBlitz3.ab3@11888>   TST.l d1
00028602 <AmiBlitz3.ab3@11889>    BMI.w 'lm1f
0002860A <AmiBlitz3.ab3@11890>   MOVE.b #0,newhunk
00028614 <AmiBlitz3.ab3@11891>   CMP.l #-1,chipstart
00028618 <AmiBlitz3.ab3@11892>   BEQ 'l10f
0002861E <AmiBlitz3.ab3@11893>   CMP.l chipstart,d1
00028622 <AmiBlitz3.ab3@11894>   BLT 'l10f
0002862A <AmiBlitz3.ab3@11895>   MOVE.b #1,newhunk
00028630 <AmiBlitz3.ab3@11896>   CMP.l chipend,d1
00028634 <AmiBlitz3.ab3@11897>   BGE 'l110f
00028636 <AmiBlitz3.ab3@11898>   ADD.l d7,(a0)
0002863E <AmiBlitz3.ab3@11899>   ADD.l #$80000000,4(a2)
00028642 <AmiBlitz3.ab3@11900>  BRA 'nowayb
00028646 <AmiBlitz3.ab3@11903>   ADD.l d5,0(a0)
00028650 <AmiBlitz3.ab3@11906>   CMP.l #-1,bssstart
00028654 <AmiBlitz3.ab3@11907>     BEQ 'l11f
0002865A <AmiBlitz3.ab3@11908>   CMP.l bssstart,d1
0002865E <AmiBlitz3.ab3@11909>   BLT 'l11f
00028664 <AmiBlitz3.ab3@11910>   CMP.l bssend,d1
00028668 <AmiBlitz3.ab3@11911>   BGE 'l111f
0002866E <AmiBlitz3.ab3@11912>   TST.b newhunk
00028672 <AmiBlitz3.ab3@11913>   BEQ 'ln1f
00028674 <AmiBlitz3.ab3@11914>   ADD.l d5,(a0)
00028676 <AmiBlitz3.ab3@11917>   ADD.l d6,(a0)
0002867E <AmiBlitz3.ab3@11918>   ADD.l #$40000000,4(a2)
00028682 <AmiBlitz3.ab3@11919>  BRA 'nowayb
00028686 <AmiBlitz3.ab3@11922>   ADD.l d3,0(a0)
00028688 <AmiBlitz3.ab3@11925>   ADD.l D2,(A0)                                            ;only normal code offsets restore
0002868E <AmiBlitz3.ab3@11928>   ADDQ.l #1,hunkoffsetnum
00028690 <AmiBlitz3.ab3@11931>   MOVEA.l (A2),A2
00028694 <AmiBlitz3.ab3@11932>  BRA.w 'loop0b
0002869A <AmiBlitz3.ab3@11936>   JSR call_setpointernormal
0002869E <AmiBlitz3.ab3@11937>   MOVEM.l (a7)+,d2-d7/a2-a6
000286A0 <AmiBlitz3.ab3@11940> RTS
000286A2 <AmiBlitz3.ab3@11946>   MOVE.l D2,-(A7)
000286A8 <AmiBlitz3.ab3@11947>   MOVE.l destpointer,D2
000286AE <AmiBlitz3.ab3@11948>   SUB.l destbufferstart,D2
000286B2 <AmiBlitz3.ab3@11949>   BSR.w addhunkoffset
000286B4 <AmiBlitz3.ab3@11950>   MOVE.l (A7)+,D2
000286B6 <AmiBlitz3.ab3@11951> RTS
000286BA <AmiBlitz3.ab3@11957>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000286C0 <AmiBlitz3.ab3@11959>   TST.b nohunkoffset
000286C4 <AmiBlitz3.ab3@11960>   BNE 'l10
000286C6 <AmiBlitz3.ab3@11962>   MOVEQ.l #$8,D0
000286C8 <AmiBlitz3.ab3@11963>   MOVEQ.l #$01,D1
000286CE <AmiBlitz3.ab3@11964>   MOVEA.l _execbase,A6
000286D4 <AmiBlitz3.ab3@11966>   MOVE.l mempool2,a0
000286D8 <AmiBlitz3.ab3@11967>   JSR _AllocPooled(a6)
000286DE <AmiBlitz3.ab3@11971>   ADDQ.l #1,hunkoffsetcounter
000286E0 <AmiBlitz3.ab3@11972>   MOVEA.l D0,A0
000286E6 <AmiBlitz3.ab3@11973>   MOVE.l hunkoffsetbase,(A0)
000286EC <AmiBlitz3.ab3@11974>   MOVE.l A0,hunkoffsetbase
000286F0 <AmiBlitz3.ab3@11975>   MOVE.l D2,$4(A0)
000286F4 <AmiBlitz3.ab3@11980>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000286F6 <AmiBlitz3.ab3@11981> RTS
000286FC <AmiBlitz3.ab3@11987>   CLR.l hunkoffsetbase
00028702 <AmiBlitz3.ab3@11988>   MOVEA.l _execbase,A6
00028708 <AmiBlitz3.ab3@11989>   MOVEA.l hunkoffsetbase,A2
0002870C <AmiBlitz3.ab3@11992>     CMPA.w #$0,A2
00028710 <AmiBlitz3.ab3@11993>      BEQ.w 'skip
00028712 <AmiBlitz3.ab3@11994>     MOVEA.l A2,A1
00028714 <AmiBlitz3.ab3@11995>     MOVEQ.l #$08,D0
00028716 <AmiBlitz3.ab3@11996>     MOVEA.l (A2),A2
0002871C <AmiBlitz3.ab3@11998>     MOVE.l mempool2,a0
00028720 <AmiBlitz3.ab3@11999>     JSR _FreePooled(A6)
00028724 <AmiBlitz3.ab3@12002>  BRA.w 'loop
0002872A <AmiBlitz3.ab3@12005>   CLR.l hunkoffsetcounter
0002872C <AmiBlitz3.ab3@12006> RTS
00028744 <AmiBlitz3.ab3@12009> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00028748 <AmiBlitz3.ab3@12010> cmakea5:    Ds.l 1
0002874A <AmiBlitz3.ab3@12011> cmake:      Ds.w 1
000287CA <AmiBlitz3.ab3@12012> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000287D0 <AmiBlitz3.ab3@12016>   MOVE.l A5,lastsourcepos
000287DA <AmiBlitz3.ab3@12017>   MOVE.w instringon,oldqflag
000287DC <AmiBlitz3.ab3@12020>   MOVEQ.l #$00,D0
000287DE <AmiBlitz3.ab3@12021>   MOVE.b (A5)+,D0
000287E2 <AmiBlitz3.ab3@12022>    BEQ 'donea
000287E6 <AmiBlitz3.ab3@12023>   BPL 'stuffa
000287E8 <AmiBlitz3.ab3@12024>   LSL.l #8,D0
000287EA <AmiBlitz3.ab3@12025>   MOVE.b (A5)+,D0
000287EC <AmiBlitz3.ab3@12026>   MOVE.l a1,-(a7)
000287F2 <AmiBlitz3.ab3@12027>   LEA replacedat,a1
000287F6 <AmiBlitz3.ab3@12028>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
000287FA <AmiBlitz3.ab3@12029>   BEQ 'l10
000287FE <AmiBlitz3.ab3@12030>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00028800 <AmiBlitz3.ab3@12034>   MOVE.l (a7)+,a1
00028804 <AmiBlitz3.ab3@12035>  BRA 'weiter
00028808 <AmiBlitz3.ab3@12038>   CMP.w #$22,D0
0002880C <AmiBlitz3.ab3@12039>    BEQ.b 'swapquotea
00028810 <AmiBlitz3.ab3@12040>   CMP.w #$3B,D0
00028814 <AmiBlitz3.ab3@12041>    BNE.b 'donea
0002881A <AmiBlitz3.ab3@12042>   TST.w instringon
0002881E <AmiBlitz3.ab3@12043>    BNE.b 'donea
00028820 <AmiBlitz3.ab3@12046>   MOVE.b (A5)+,D0
00028824 <AmiBlitz3.ab3@12047>              BEQ 'l1
00028828 <AmiBlitz3.ab3@12048>              CMP.b #":",d0
0002882C <AmiBlitz3.ab3@12049>              BNE 'loopa                                ;:@
00028830 <AmiBlitz3.ab3@12050>              CMP.b #"@",(a5)
00028834 <AmiBlitz3.ab3@12051>              BNE 'loopa
00028836 <AmiBlitz3.ab3@12052>              ADDQ #1,a5
0002883C <AmiBlitz3.ab3@12055>   MOVE.w D0,lastchar
00028840 <AmiBlitz3.ab3@12058>  BRA.s 'weiter
00028846 <AmiBlitz3.ab3@12061>   NOT.w instringon
0002884C <AmiBlitz3.ab3@12064>    MOVE.w D0,lastchar
00028850 <AmiBlitz3.ab3@12065>    BEQ.w 'done
00028854 <AmiBlitz3.ab3@12066>    BPL.w 'done2
00028858 <AmiBlitz3.ab3@12067>   CMP.w #-$7FE4,D0                                         ;cnif
0002885C <AmiBlitz3.ab3@12068>    BEQ.w 'cnif
00028860 <AmiBlitz3.ab3@12069>   CMP.w #-$7FE3,D0                                         ;csif
00028864 <AmiBlitz3.ab3@12070>    BEQ.w 'csif
00028868 <AmiBlitz3.ab3@12071>   CMP.w #-$7FE2,D0                                         ;celse
0002886C <AmiBlitz3.ab3@12072>    BEQ.w 'celse
00028870 <AmiBlitz3.ab3@12073>   CMP.w #-$7FE1,D0                                         ;cend
00028874 <AmiBlitz3.ab3@12074>    BEQ.w 'cend
0002887A <AmiBlitz3.ab3@12077>   TST.w skipcode
0002887E <AmiBlitz3.ab3@12078>    BEQ.w getchar
00028882 <AmiBlitz3.ab3@12079>   CMP.w #$7E,D0
00028886 <AmiBlitz3.ab3@12080>    BEQ.w 'cmake                                            ;tilde
0002888A <AmiBlitz3.ab3@12081>   CMP.w #$2,D0
0002888E <AmiBlitz3.ab3@12082>    BNE.w 'notunpath
00028894 <AmiBlitz3.ab3@12083>   MOVEA.l usedfrom,A5
0002889A <AmiBlitz3.ab3@12084>   CLR.l usedfrom
0002889E <AmiBlitz3.ab3@12085>  BRA.w getchar
000288A2 <AmiBlitz3.ab3@12088>   CMP.w #$1,D0
000288A6 <AmiBlitz3.ab3@12089>    BNE.w 'done
000288AA <AmiBlitz3.ab3@12093>   MOVEA.l cmakea5(PC),A5
000288AE <AmiBlitz3.ab3@12094>  BRA.w getchar
000288B4 <AmiBlitz3.ab3@12097>   TST.w cmake
000288B8 <AmiBlitz3.ab3@12098>    BNE.w 'done
000288BC <AmiBlitz3.ab3@12100>   MOVEM.l D0-D7/A0-A6,-(A7)
000288C2 <AmiBlitz3.ab3@12101>   LEA cmake,a0                                            ;reass
000288C4 <AmiBlitz3.ab3@12102>   NOT.w (a0)
000288C8 <AmiBlitz3.ab3@12103>   LEA cmakebak(PC),A0
000288CE <AmiBlitz3.ab3@12104>   LEA ptr_parameterstore,A1
000288D0 <AmiBlitz3.ab3@12105>   MOVEQ.l #$1F,D0
000288D2 <AmiBlitz3.ab3@12108>     MOVE.l (A1)+,(A0)+
000288D6 <AmiBlitz3.ab3@12109>   DBF D0,'cmloop
000288DC <AmiBlitz3.ab3@12112>    JSR evalconst3
000288E0 <AmiBlitz3.ab3@12113>   CMP.w #$7E,D0
000288E4 <AmiBlitz3.ab3@12114>    BNE.w syntaxerr
000288EA <AmiBlitz3.ab3@12115>   MOVE.l A5,cmakea5                                      ;tilde
000288EE <AmiBlitz3.ab3@12116>   LEA cmakebuff(PC),A0
000288F0 <AmiBlitz3.ab3@12117>   MOVE.l D3,D2
000288F4 <AmiBlitz3.ab3@12118>   BSR.w makelong
000288F6 <AmiBlitz3.ab3@12119>   ADDQ.b #1,(A0)
000288FC <AmiBlitz3.ab3@12120>   LEA cmake,a0
000288FE <AmiBlitz3.ab3@12121>   NOT.w (a0)                                               ;reass
00028902 <AmiBlitz3.ab3@12122>   LEA cmakebak(PC),A0
00028908 <AmiBlitz3.ab3@12123>   LEA ptr_parameterstore,A1
0002890A <AmiBlitz3.ab3@12124>   MOVEQ.l #$1F,D0
0002890C <AmiBlitz3.ab3@12127>     MOVE.l (A0)+,(A1)+
00028910 <AmiBlitz3.ab3@12128>   DBF D0,'cmloop2
00028914 <AmiBlitz3.ab3@12130>   MOVEM.l (A7)+,D0-D7/A0-A6
00028918 <AmiBlitz3.ab3@12131>   LEA cmakebuff(PC),A5
0002891C <AmiBlitz3.ab3@12132>  BRA.w getchar
0002891E <AmiBlitz3.ab3@12135>  RTS
00028928 <AmiBlitz3.ab3@12138>   MOVE.l linenumat,ciflineat                               ;csif
0002892E <AmiBlitz3.ab3@12139>   TST.w skipcode
00028932 <AmiBlitz3.ab3@12140>    BEQ.w 'incnest
00028936 <AmiBlitz3.ab3@12141>    BSR.w get1bytemain
00028938 <AmiBlitz3.ab3@12142>    MOVE.l a1,-(a7)
0002893E <AmiBlitz3.ab3@12143>    JSR do_csif
00028940 <AmiBlitz3.ab3@12144>    MOVE.l (a7)+,a1
00028944 <AmiBlitz3.ab3@12145>  BRA.w getchar
0002894E <AmiBlitz3.ab3@12148>   MOVE.l linenumat,ciflineat                               ;cnif
00028954 <AmiBlitz3.ab3@12149>   TST.w skipcode
00028958 <AmiBlitz3.ab3@12150>    BEQ.w 'incnest
0002895C <AmiBlitz3.ab3@12151>    BSR.w get1bytemain
00028960 <AmiBlitz3.ab3@12152>    CMP.b #"@",d0
00028964 <AmiBlitz3.ab3@12153>    BNE 'cnif_ok2
00028968 <AmiBlitz3.ab3@12154>    BSR.w get1bytemain
00028970 <AmiBlitz3.ab3@12155>    MOVE.b #1,incnif
00028976 <AmiBlitz3.ab3@12156>    JSR findconstant2
0002897A <AmiBlitz3.ab3@12157>    BEQ 'cnif_ok2
00028980 <AmiBlitz3.ab3@12160>    MOVE.w fast,-(a7)
00028986 <AmiBlitz3.ab3@12161>    CLR.b fast
00028988 <AmiBlitz3.ab3@12162>    MOVE.l a1,-(a7)
0002898E <AmiBlitz3.ab3@12163>    JSR do_cnif
00028994 <AmiBlitz3.ab3@12164>    CLR.b incnif
00028996 <AmiBlitz3.ab3@12165>    MOVE.l (a7)+,a1
0002899C <AmiBlitz3.ab3@12166>    MOVE.w (a7)+,fast
000289A0 <AmiBlitz3.ab3@12167>  BRA.w getchar
000289A6 <AmiBlitz3.ab3@12170>   ADDQ.w #1,connest
000289AA <AmiBlitz3.ab3@12171>  BRA.w getchar
000289B0 <AmiBlitz3.ab3@12174>   MOVE.w connest,D0                                      ;celse
000289B4 <AmiBlitz3.ab3@12175>    BNE.w getchar
000289BA <AmiBlitz3.ab3@12176>   NOT.w skipcode
000289BE <AmiBlitz3.ab3@12177>  BRA.w getchar
000289C4 <AmiBlitz3.ab3@12180>   SUBQ.w #1,connest                                      ;cend
000289C8 <AmiBlitz3.ab3@12181>    BPL.w getchar
000289CE <AmiBlitz3.ab3@12182>   ADDQ.w #1,connest
000289D4 <AmiBlitz3.ab3@12183>   MOVEA.l concomsp,A0
000289DA <AmiBlitz3.ab3@12184>   CMPA.l #concomstack,A0
000289DE <AmiBlitz3.ab3@12185>    BEQ.w nociferr
000289E0 <AmiBlitz3.ab3@12186>   SUBQ.w #2,A0
000289E6 <AmiBlitz3.ab3@12187>   MOVE.l A0,concomsp
000289EC <AmiBlitz3.ab3@12188>   MOVE.w (A0),skipcode
000289F0 <AmiBlitz3.ab3@12189> BRA.w getchar
000289F4 <AmiBlitz3.ab3@12192> ciflineat:   Ds.l 1
000289F6 <AmiBlitz3.ab3@12200>   MOVEQ.l #$00,D0
000289F8 <AmiBlitz3.ab3@12201>   MOVE.b (A5)+,D0
000289FC <AmiBlitz3.ab3@12202>    BEQ.b 'done
00028A00 <AmiBlitz3.ab3@12203>    BPL.b 'stuff
00028A02 <AmiBlitz3.ab3@12204>   LSL.w #8,D0
00028A04 <AmiBlitz3.ab3@12205>   MOVE.b (A5)+,D0
00028A06 <AmiBlitz3.ab3@12206>  RTS
00028A0A <AmiBlitz3.ab3@12209>   CMP.w #$22,D0
00028A0E <AmiBlitz3.ab3@12210>    BEQ.b 'swapquote
00028A12 <AmiBlitz3.ab3@12211>   CMP.w #$3B,D0
00028A16 <AmiBlitz3.ab3@12212>    BNE.b 'done
00028A1C <AmiBlitz3.ab3@12213>   TST.w instringon
00028A20 <AmiBlitz3.ab3@12214>    BNE.b 'done
00028A22 <AmiBlitz3.ab3@12217>   MOVE.b (A5)+,D0
00028A26 <AmiBlitz3.ab3@12218>             BEQ 'loop_l1
00028A2A <AmiBlitz3.ab3@12219>             CMP.b #":",d0
00028A2E <AmiBlitz3.ab3@12220>             BNE 'loop
00028A32 <AmiBlitz3.ab3@12221>             CMP.b #"@",(a5)
00028A36 <AmiBlitz3.ab3@12222>             BNE 'loop
00028A3C <AmiBlitz3.ab3@12225>   MOVE.w D0,lastchar
00028A3E <AmiBlitz3.ab3@12228>  RTS
00028A44 <AmiBlitz3.ab3@12231>   NOT.w instringon
00028A46 <AmiBlitz3.ab3@12232> RTS
00028A4A <AmiBlitz3.ab3@12236>   BSR.w getchar
00028A50 <AmiBlitz3.ab3@12237>   TST.w instringon
00028A54 <AmiBlitz3.ab3@12238>    BNE.w 'skip
00028A58 <AmiBlitz3.ab3@12239>   CMP.w #$20,D0        ;' '
00028A5C <AmiBlitz3.ab3@12240>    BEQ.w get1byte_
00028A5E <AmiBlitz3.ab3@12243> RTS
00028A78 <AmiBlitz3.ab3@12246> gs:        Ds.w 13                                         ;ds.b 26  org source
00028A7C <AmiBlitz3.ab3@12247>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00028A7E <AmiBlitz3.ab3@12248>            Dc.b $C4,$DC
00028A82 <AmiBlitz3.ab3@12255>   BSR.w getchar
00028A88 <AmiBlitz3.ab3@12256>   TST.w instringon
00028A8C <AmiBlitz3.ab3@12257>    BNE.w gchar2
00028A90 <AmiBlitz3.ab3@12258>   CMP.w #$20,D0
00028A94 <AmiBlitz3.ab3@12259>    BEQ.w get1bytemain
00028A96 <AmiBlitz3.ab3@12261>   TST.w D0
00028A9A <AmiBlitz3.ab3@12264>   BEQ.b 'zero
00028AA0 <AmiBlitz3.ab3@12265>   TST.w instringon
00028AA4 <AmiBlitz3.ab3@12266>    BEQ.b 'noqoute
00028AA8 <AmiBlitz3.ab3@12267>   CMP.b #$20,D0           ;' '
00028AAC <AmiBlitz3.ab3@12268>    BCC.b 'skip
00028AB0 <AmiBlitz3.ab3@12269>   MOVE.b gs(PC,D0.W),D0
00028AB2 <AmiBlitz3.ab3@12270>  RTS
00028AB6 <AmiBlitz3.ab3@12273>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00028ABA <AmiBlitz3.ab3@12274>    BEQ.b 'zero
00028ABE <AmiBlitz3.ab3@12275>   CMP.w #$3A,D0           ;':'
00028AC2 <AmiBlitz3.ab3@12276>    BEQ.b 'zero
00028AC4 <AmiBlitz3.ab3@12279>   TST.w D0
00028AC6 <AmiBlitz3.ab3@12282> RTS
00028ACC <AmiBlitz3.ab3@12286>   MOVE.w lastchar,D0
00028AD0 <AmiBlitz3.ab3@12287> BRA.w gchar2
00028ADA <AmiBlitz3.ab3@12291>   MOVE.w oldqflag,instringon
00028AE0 <AmiBlitz3.ab3@12292>   MOVEA.l lastsourcepos,A5
00028AE2 <AmiBlitz3.ab3@12293> RTS
00028AE8 <AmiBlitz3.ab3@12297>   MOVE.w D0,locchar
00028AEE <AmiBlitz3.ab3@12298>   MOVE.l A5,locloc
00028AF0 <AmiBlitz3.ab3@12299> RTS
00028AF6 <AmiBlitz3.ab3@12303>   MOVEA.l locloc,A5
00028AFC <AmiBlitz3.ab3@12304>   MOVE.w locchar,D0
00028B02 <AmiBlitz3.ab3@12305>   MOVE.w D0,lastchar
00028B04 <AmiBlitz3.ab3@12306> RTS
00028B04 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00028B4C <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00028B9E <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00028BDC <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00028C1A <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00028C44 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00028C74 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00028CBE <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00028D44 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028DA6 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00028DEE <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028E40 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028EA2 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028EF0 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028F26 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00028F54 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00028F6E <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028F8C <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
0002900A <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00029034 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
0002905A <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
0002907A <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00029098 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
000290B8 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
000290E0 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
0002910A <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00029126 <internal_errormsg.ab3@34> XINCLUDE "internal_errormsg.ab3"
0002914C <internal_errormsg.ab3@35> XINCLUDE "internal_errormsg.ab3"
00029164 <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
000291C2 <internal_errormsg.ab3@37> XINCLUDE "internal_errormsg.ab3"
000291E4 <internal_errormsg.ab3@38> XINCLUDE "internal_errormsg.ab3"
0002920A <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
00029232 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00029252 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00029276 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
000292BC <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
000292E0 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00029304 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
00029324 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00029348 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
0002936A <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00029396 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
000293BC <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
000293C6 <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
000293EC <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
0002943E <internal_errormsg.ab3@56> XINCLUDE "internal_errormsg.ab3"
000294A8 <internal_errormsg.ab3@57> XINCLUDE "internal_errormsg.ab3"
00029506 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00029574 <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
000295B0 <internal_errormsg.ab3@60> XINCLUDE "internal_errormsg.ab3"
000295CE <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
000295F4 <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00029624 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00029648 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00029676 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
0002969A <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
000296B0 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
000296C6 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
000296CC <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
000296D4 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
000296D6 <internal_errormsg.ab3@75> XINCLUDE "internal_errormsg.ab3"
000296DA <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
000296E2 <internal_errormsg.ab3@77> XINCLUDE "internal_errormsg.ab3"
000296E4 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
0002971E <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
0002974A <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
0002977A <internal_errormsg.ab3@83> XINCLUDE "internal_errormsg.ab3"
000297B2 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
0002980C <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
0002980E <internal_errormsg.ab3@89> XINCLUDE "internal_errormsg.ab3"
00029812 <internal_errormsg.ab3@90> XINCLUDE "internal_errormsg.ab3"
00029816 <internal_errormsg.ab3@91> XINCLUDE "internal_errormsg.ab3"
0002981A <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
0002981E <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00029822 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00029826 <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
0002982A <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
0002982E <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00029832 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
00029836 <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00029874 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
000298A6 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
000298C4 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
000298EE <internal_errormsg.ab3@104> XINCLUDE "internal_errormsg.ab3"
0002990A <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00029924 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00029942 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00029966 <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00029968 <internal_errormsg.ab3@112> XINCLUDE "internal_errormsg.ab3"
000299BA <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
000299E2 <internal_errormsg.ab3@116> XINCLUDE "internal_errormsg.ab3"
00029A0A <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00029A26 <internal_errormsg.ab3@121> XINCLUDE "internal_errormsg.ab3"
00029A46 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00029A5E <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00029AA2 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00029AEA <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00029B14 <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029B3E <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00029B58 <internal_errormsg.ab3@131> XINCLUDE "internal_errormsg.ab3"
00029B82 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00029BD6 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029C22 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029C5A <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00029C60 <internal_errormsg.ab3@138> XINCLUDE "internal_errormsg.ab3"
00029C6E <internal_errormsg.ab3@142> XINCLUDE "internal_errormsg.ab3"
00029C9E <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00029CD2 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00029D38 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029D56 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00029DD0 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029DF8 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029E0E <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029E22 <internal_errormsg.ab3@152> XINCLUDE "internal_errormsg.ab3"
00029E42 <internal_errormsg.ab3@153> XINCLUDE "internal_errormsg.ab3"
00029E48 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00029E5A <internal_errormsg.ab3@160> XINCLUDE "internal_errormsg.ab3"
00029E8E <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029EA6 <internal_errormsg.ab3@164> XINCLUDE "internal_errormsg.ab3"
00029EC2 <internal_errormsg.ab3@165> XINCLUDE "internal_errormsg.ab3"
00029EDA <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00029EFA <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029F1A <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029F40 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029F56 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029F72 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00029F9C <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00029FB4 <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029FD0 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029FF0 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
0002A008 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
0002A00C <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
0002A012 <internal_errormsg.ab3@180> XINCLUDE "internal_errormsg.ab3"
0002A018 <internal_errormsg.ab3@181> XINCLUDE "internal_errormsg.ab3"
0002A02D <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
0002A033 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
0002A034 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
0002A038 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
0002A03E <internal_errormsg.ab3@189> XINCLUDE "internal_errormsg.ab3"
0002A044 <internal_errormsg.ab3@190> XINCLUDE "internal_errormsg.ab3"
0002A057 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
0002A05D <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
0002A05E <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
0002A07C <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
0002A094 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
0002A0B0 <internal_errormsg.ab3@198> XINCLUDE "internal_errormsg.ab3"
0002A0DA <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
0002A0F4 <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
0002A114 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
0002A132 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
0002A160 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
0002A16A <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
0002A19C <internal_errormsg.ab3@207> XINCLUDE "internal_errormsg.ab3"
0002A1BA <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
0002A1D8 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
0002A1F8 <internal_errormsg.ab3@211> XINCLUDE "internal_errormsg.ab3"
0002A21E <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
0002A244 <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
0002A26C <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
0002A28A <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
0002A2AA <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
0002A2C4 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
0002A2E6 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
0002A304 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
0002A326 <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
0002A34A <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
0002A350 <internal_errormsg.ab3@225> XINCLUDE "internal_errormsg.ab3"
0002A36C <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
0002A388 <internal_errormsg.ab3@229> XINCLUDE "internal_errormsg.ab3"
0002A3A6 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
0002A3C4 <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
0002A412 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
0002A430 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
0002A44E <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
0002A468 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
0002A4B4 <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
0002A4DA <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
0002A4FA <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
0002A51C <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
0002A538 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
0002A55E <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
0002A57A <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
0002A598 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002A5C0 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A5DC <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A5EC <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A60E <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A610 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A62A <internal_errormsg.ab3@253> XINCLUDE "internal_errormsg.ab3"
0002A64E <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A66E <internal_errormsg.ab3@256> XINCLUDE "internal_errormsg.ab3"
0002A6A0 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A6FE <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A736 <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A774 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A7AA <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A7DC <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A800 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A824 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A86E <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A896 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A8E0 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A920 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A920 <AmiBlitz3.ab3@12310> XINCLUDE "internal_errormsg.ab3"
0002A922 <AmiBlitz3.ab3@12314> ezerr:   Ds.w 1                                            ;for simple errors
0002A928 <AmiBlitz3.ab3@12321>    MOVE.l myline,d0
0002A92C <AmiBlitz3.ab3@12322>   BNE 'l2
0002A932 <AmiBlitz3.ab3@12325>     MOVE.l a5,lastsourcepos
0002A934 <AmiBlitz3.ab3@12328>     SUBA.l a5,a5
0002A93A <AmiBlitz3.ab3@12331>   TST.l usedfrom
0002A93E <AmiBlitz3.ab3@12332>   BEQ 'org
0002A944 <AmiBlitz3.ab3@12333>     MOVEA.l usedfrom,a5
0002A94A <AmiBlitz3.ab3@12337>   TST.w dirmode
0002A94E <AmiBlitz3.ab3@12338>   BNE.b 'quiet
0002A954 <AmiBlitz3.ab3@12340>     JSR call_setpointernormal
0002A958 <AmiBlitz3.ab3@12342>     MOVE.w ezerr(PC),D0
0002A95C <AmiBlitz3.ab3@12343>     BNE.w 'skip
0002A962 <AmiBlitz3.ab3@12344>       MOVE.w cfetchmode,D0
0002A966 <AmiBlitz3.ab3@12345>       BEQ.w 'skip2
0002A970 <AmiBlitz3.ab3@12346>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A976 <AmiBlitz3.ab3@12349>   MOVE.w constmode,D0
0002A97A <AmiBlitz3.ab3@12350>   BEQ.b 'skip3
0002A97E <AmiBlitz3.ab3@12351>     BSR.w asmerr2
0002A984 <AmiBlitz3.ab3@12354>   MOVE.l firstlocal,D1
0002A98A <AmiBlitz3.ab3@12355>   OR.l firstglob,D1
0002A98E <AmiBlitz3.ab3@12356>   BEQ.b 'notproc                                           ;?!?!?!
0002A994 <AmiBlitz3.ab3@12358> 
0002A998 <AmiBlitz3.ab3@12359>     BNE 'notproc                                           ; yes skip
0002A99E <AmiBlitz3.ab3@12361>       JSR droplocals                                        ; no free some data ????
0002A9A6 <AmiBlitz3.ab3@12364>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A9B0 <AmiBlitz3.ab3@12366>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A9B4 <AmiBlitz3.ab3@12367>   BEQ 'notproc_l1
0002A9BE <AmiBlitz3.ab3@12369>     MOVE.l linenumat,compilelinecounter
0002A9C4 <AmiBlitz3.ab3@12372>   JSR close_compilewin
0002A9C6 <AmiBlitz3.ab3@12375>   MOVEA.l (A7)+,A0
0002A9CC <AmiBlitz3.ab3@12377>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A9D2 <AmiBlitz3.ab3@12378>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A9D6 <AmiBlitz3.ab3@12379>   BLT 'lesserror
0002A9DC <AmiBlitz3.ab3@12380>   LEA errorlimit_text,a0
0002A9E2 <AmiBlitz3.ab3@12383>   ADDQ.l #1,errorcounter
0002A9E8 <AmiBlitz3.ab3@12384>   JSR errorstringparse
0002A9F2 <AmiBlitz3.ab3@12385>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A9F6 <AmiBlitz3.ab3@12386>   BEQ 'skip_Lxx2
0002A9FC <AmiBlitz3.ab3@12387>   TST.l CLIMode
0002AA00 <AmiBlitz3.ab3@12388>   BNE 'climode_output
0002AA06 <AmiBlitz3.ab3@12391>     JSR save_errorfile
0002AA0A <AmiBlitz3.ab3@12392>     BRA 'end_output
0002AA10 <AmiBlitz3.ab3@12395>     JSR stdout_error
0002AA16 <AmiBlitz3.ab3@12398>        MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002AA1C <AmiBlitz3.ab3@12399>        CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002AA20 <AmiBlitz3.ab3@12400>        BGT 'end_output
0002AA26 <AmiBlitz3.ab3@12401>       MOVE.l lastsourcepos,a5
0002AA28 <AmiBlitz3.ab3@12404>       TST.b (a5)
0002AA2C <AmiBlitz3.ab3@12405>         BEQ 'ok2
0002AA2E <AmiBlitz3.ab3@12406>       MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002AA32 <AmiBlitz3.ab3@12407>       BEQ 'ok
0002AA36 <AmiBlitz3.ab3@12408>       CMP.b #":",d0
0002AA3A <AmiBlitz3.ab3@12409>       BEQ 'ok
0002AA3E <AmiBlitz3.ab3@12410>       BRA 'loop
0002AA40 <AmiBlitz3.ab3@12413>     SUBQ.l #1,a5
0002AA48 <AmiBlitz3.ab3@12416>       MOVE.w #0,lastchar
0002AA50 <AmiBlitz3.ab3@12417>       MOVE.b #1,iserror
0002AA56 <AmiBlitz3.ab3@12418>       MOVE.l stackaddr,a7
0002AA58 <AmiBlitz3.ab3@12419>       RTS
0002AA5A <AmiBlitz3.ab3@12427>   MOVE.l A0,-(a7)
0002AA98 <AmiBlitz3.ab3@12428>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002AA9A <AmiBlitz3.ab3@12429>   MOVE.l (a7)+,A0
0002AA9E <AmiBlitz3.ab3@12431>   MOVEM.l d6/D7/A6,-(A7)
0002AAA4 <AmiBlitz3.ab3@12433>   MOVE.l includeline,d7
0002AAAA <AmiBlitz3.ab3@12434>   MOVE.l #"INLN",a6
0002AAB4 <AmiBlitz3.ab3@12435>   MOVE.l errstack,tempa7
0002AAB6 <AmiBlitz3.ab3@12437>   JSR (A1)                                                  ;open ped errorrequest
0002AABA <AmiBlitz3.ab3@12439>   MOVEM.l (A7)+,D7/d6/A6
0002AAC0 <AmiBlitz3.ab3@12443>   MOVE.l tempa7,a7
0002AAC6 <AmiBlitz3.ab3@12445>   MOVEA.l errcont,A0
0002AAC8 <AmiBlitz3.ab3@12448>  RTS
0002AACE <AmiBlitz3.ab3@12451>   MOVEA.l errstack,A7
0002AAD4 <AmiBlitz3.ab3@12452>   MOVEA.l errcont,A0
0002AAD6 <AmiBlitz3.ab3@12454>  RTS
0002AAD8 <AmiBlitz3.ab3@12458>   MOVE.l (A7),D0
0002AADE <AmiBlitz3.ab3@12459>   MOVEA.l errstack,A7
0002AAE4 <AmiBlitz3.ab3@12460>   MOVEA.l errcont,A0
0002AAE6 <AmiBlitz3.ab3@12461> JMP (A0)
0002AAEA <AmiBlitz3.ab3@12467>   CMP.w #$7A,D0                                            ;'z'
0002AAEE <AmiBlitz3.ab3@12468>    BHI.w 'no
0002AAF2 <AmiBlitz3.ab3@12469>   CMP.w #$41,D0                                            ;'A'
0002AAF6 <AmiBlitz3.ab3@12470>    BCS.w 'no
0002AAFA <AmiBlitz3.ab3@12471>   CMP.w #$61,D0                                            ;'a'
0002AAFE <AmiBlitz3.ab3@12472>    BCC.w 'yes
0002AB02 <AmiBlitz3.ab3@12473>   CMP.w #$5A,D0                                            ;'Z'
0002AB06 <AmiBlitz3.ab3@12474>    BHI.w 'no
0002AB08 <AmiBlitz3.ab3@12477>   CMP.w D0,D0
0002AB0A <AmiBlitz3.ab3@12480> RTS
0002AB0E <AmiBlitz3.ab3@12488>   CMP.w #$30,D0                                            ;'0'
0002AB12 <AmiBlitz3.ab3@12489>    BCS.w 'skip
0002AB16 <AmiBlitz3.ab3@12490>   CMP.w #$39,D0                                            ;'9'
0002AB1A <AmiBlitz3.ab3@12491>    BHI.w 'skip
0002AB1C <AmiBlitz3.ab3@12492>   CMP.w D0,D0
0002AB1E <AmiBlitz3.ab3@12495> RTS
0002AB40 <AmiBlitz3.ab3@12502>   !compare1                                                ;bsr.w tstalpha
0002AB44 <AmiBlitz3.ab3@12504>    BEQ.w 'skip
0002AB56 <AmiBlitz3.ab3@12506>   !compare2                                                ;bsr.w tstnum2
0002AB5A <AmiBlitz3.ab3@12508>    BEQ.w 'skip
0002AB5E <AmiBlitz3.ab3@12509>   CMP.w #$5F,D0                                            ;'_'
0002AB62 <AmiBlitz3.ab3@12510>    BEQ.w 'skip
0002AB66 <AmiBlitz3.ab3@12511>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AB68 <AmiBlitz3.ab3@12514> RTS
0002AB72 <AmiBlitz3.ab3@12520>   MOVE.w oldqflag,instringon
0002AB78 <AmiBlitz3.ab3@12521>   MOVEA.l lastsourcepos,A5
0002AB7E <AmiBlitz3.ab3@12530>   MOVE.l a5,beforeparameterfetch
0002AB84 <AmiBlitz3.ab3@12532>   LEA ptr_parameterstore,A1
0002AB86 <AmiBlitz3.ab3@12535>   MOVEQ.l #$00,D2
0002AB8C <AmiBlitz3.ab3@12539>   LEA chartab,a0
0002AB8E <AmiBlitz3.ab3@12540>   MOVEQ #0,d0
0002AB94 <AmiBlitz3.ab3@12541>   MOVE.l A5,lastsourcepos
0002AB9E <AmiBlitz3.ab3@12542>   MOVE.w instringon,oldqflag
0002ABA0 <AmiBlitz3.ab3@12545>     MOVE.b (a5)+,d0
0002ABA4 <AmiBlitz3.ab3@12546>   CMP.b #$20,d0                                            ;space deftype
0002ABA8 <AmiBlitz3.ab3@12547>   BEQ 'retry
0002ABAE <AmiBlitz3.ab3@12549>   MOVE.w d0,lastchar
0002ABB2 <AmiBlitz3.ab3@12550>   TST.b 0(a0,d0.w)
0002ABB6 <AmiBlitz3.ab3@12551>   BNE 'done
0002ABB8 <AmiBlitz3.ab3@12564>   MOVE.b D0,(A1)+
0002ABBA <AmiBlitz3.ab3@12565>   ADDQ.l #1,D2
0002ABC0 <AmiBlitz3.ab3@12568>   MOVE.l A5,lastsourcepos
0002ABC2 <AmiBlitz3.ab3@12571>   MOVE.b (a5)+,d0
0002ABC8 <AmiBlitz3.ab3@12572>   MOVE.b d0,lastchar+1
0002ABCC <AmiBlitz3.ab3@12573>   CMP.b #$20,d0
0002ABD0 <AmiBlitz3.ab3@12574>   BEQ 'loop_l20
0002ABD4 <AmiBlitz3.ab3@12576>   TST.b 0(a0,d0)
0002ABD8 <AmiBlitz3.ab3@12577>   BEQ 'loop
0002ABDC <AmiBlitz3.ab3@12578>   CMP.b #2,d0
0002ABE0 <AmiBlitz3.ab3@12579>   BNE 'loop_lf1
0002ABE6 <AmiBlitz3.ab3@12580>   MOVEA.l usedfrom,A5
0002ABEC <AmiBlitz3.ab3@12581>   CLR.l usedfrom
0002ABF0 <AmiBlitz3.ab3@12582>  BRA 'loop_ln1
0002ABF4 <AmiBlitz3.ab3@12585>   CMP.b #1,d0
0002ABF8 <AmiBlitz3.ab3@12586>   BNE 'loop_l20
0002ABFC <AmiBlitz3.ab3@12587>   MOVEA.l cmakea5(PC),A5
0002AC00 <AmiBlitz3.ab3@12588>  BRA 'loop_ln1
0002AC04 <AmiBlitz3.ab3@12591>   CMP.b #$7e,d0
0002AC08 <AmiBlitz3.ab3@12592>             BNE 'loop_lt
0002AC0E <AmiBlitz3.ab3@12593>             TST.w cmake
0002AC12 <AmiBlitz3.ab3@12594>             BNE.w 'loop_a1
0002AC14 <AmiBlitz3.ab3@12595>             SUBQ.l #1,a5
0002AC18 <AmiBlitz3.ab3@12596>             BSR.w get1bytemain
0002AC1C <AmiBlitz3.ab3@12597>  BRA 'loop
0002AC20 <AmiBlitz3.ab3@12601>  BRA 'loop_gpex
0002AC24 <AmiBlitz3.ab3@12605>   BSR.w getchar
0002AC46 <AmiBlitz3.ab3@12607>    !compare1                                               ;bsr.w tstalpha
0002AC4A <AmiBlitz3.ab3@12608>    BEQ.w 'loop_getp1
0002AC5C <AmiBlitz3.ab3@12609>    !compare2                                               ;bsr.w tstnum
0002AC60 <AmiBlitz3.ab3@12610>    BEQ.w 'loop_getp1
0002AC64 <AmiBlitz3.ab3@12611>   CMP.w #$5F,D0                                            ;'_'
0002AC68 <AmiBlitz3.ab3@12612>    BEQ.w 'loop_getp1
0002AC6C <AmiBlitz3.ab3@12613>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AC70 <AmiBlitz3.ab3@12617>       BNE 'loop_gpex
0002AC74 <AmiBlitz3.ab3@12618>       CMP.b #$20,d0
0002AC78 <AmiBlitz3.ab3@12620>       BNE.w 'loop
0002AC7A <AmiBlitz3.ab3@12623>      TST.b d0
0002AC7E <AmiBlitz3.ab3@12624>      BPL 'loop_l10
0002AC80 <AmiBlitz3.ab3@12625>      SUBQ.l #1,a5
0002AC84 <AmiBlitz3.ab3@12626>      BSR get1byte_
0002AC88 <AmiBlitz3.ab3@12634>    CMP.w #$20,D0
0002AC8C <AmiBlitz3.ab3@12635>    BNE.w 'done
0002AC8E <AmiBlitz3.ab3@12637>    MOVEQ #0,d0
0002AC94 <AmiBlitz3.ab3@12638>   MOVE.l a5,lastsourcepos
0002AC96 <AmiBlitz3.ab3@12641>   MOVE.b (a5)+,d0                                          ;neuneu
0002AC9A <AmiBlitz3.ab3@12642>   BPL 'loop_l101
0002AC9C <AmiBlitz3.ab3@12643>   ASL.w #8,d0
0002AC9E <AmiBlitz3.ab3@12644>   MOVE.b (a5)+,d0
0002ACA4 <AmiBlitz3.ab3@12647>   TST.w instringon
0002ACA8 <AmiBlitz3.ab3@12648>   BNE 'loop_l102
0002ACAC <AmiBlitz3.ab3@12649>   CMP.b #$20,d0
0002ACB0 <AmiBlitz3.ab3@12650>   BEQ 'loop_l103
0002ACB4 <AmiBlitz3.ab3@12651>   CMP.b #";",d0
0002ACB8 <AmiBlitz3.ab3@12652>   BNE 'loop_l102
0002ACBA <AmiBlitz3.ab3@12655>   MOVE.b (A5)+,D0
0002ACBE <AmiBlitz3.ab3@12656>              BEQ 'loop_l1
0002ACC2 <AmiBlitz3.ab3@12657>              CMP.b #":",d0
0002ACC6 <AmiBlitz3.ab3@12658>              BNE 'loop_lr                         ;:@
0002ACCA <AmiBlitz3.ab3@12659>              CMP.b #"@",(a5)
0002ACCE <AmiBlitz3.ab3@12660>              BNE 'loop_lr
0002ACD0 <AmiBlitz3.ab3@12661>              ADDQ #1,a5
0002ACD6 <AmiBlitz3.ab3@12665>   MOVE.w d0,lastchar
0002ACDA <AmiBlitz3.ab3@12671>   CMP.b #";",d0
0002ACDE <AmiBlitz3.ab3@12672>   BEQ 'done_l11
0002ACE0 <AmiBlitz3.ab3@12674>   CLR.b (A1)
0002ACE2 <AmiBlitz3.ab3@12678>   TST.w D2
0002ACE4 <AmiBlitz3.ab3@12679>  RTS
0002ACE6 <AmiBlitz3.ab3@12683>   CLR.b (a1)
0002ACE8 <AmiBlitz3.ab3@12684>   MOVEQ #0,d0
0002ACEE <AmiBlitz3.ab3@12685>   MOVE.w d0,lastchar
0002ACF0 <AmiBlitz3.ab3@12688>   TST.w D2
0002ACF2 <AmiBlitz3.ab3@12689> RTS
0002ACF4 <AmiBlitz3.ab3@12696>   MOVE.l (A2),D0
0002ACF8 <AmiBlitz3.ab3@12699>   BEQ.w 'here
0002ACFA <AmiBlitz3.ab3@12700>   MOVEA.l D0,A2
0002ACFE <AmiBlitz3.ab3@12701>  BRA.w 'loop
0002AD02 <AmiBlitz3.ab3@12704> BRA.w reget
0002AD04 <AmiBlitz3.ab3@12710>   MOVE.l (A2),-(A7)
0002AD08 <AmiBlitz3.ab3@12711>   BSR.w addlabel
0002AD0A <AmiBlitz3.ab3@12712>   MOVE.l (A7)+,(A2)
0002AD0C <AmiBlitz3.ab3@12713> RTS
0002AD12 <AmiBlitz3.ab3@12718>   CLR.l fp0addr
0002AD18 <AmiBlitz3.ab3@12719>   TST.w dirmode
0002AD1C <AmiBlitz3.ab3@12720>    BNE.w illdirerr
0002AD1E <AmiBlitz3.ab3@12721>   MOVEQ.l #$00,D0
0002AD20 <AmiBlitz3.ab3@12722>   MOVE.w D7,D0
0002AD22 <AmiBlitz3.ab3@12723>   ADD.w D2,D0
0002AD24 <AmiBlitz3.ab3@12724>   ADDQ.w #1,D0
0002AD26 <AmiBlitz3.ab3@12725>   MOVE.w D0,D2
0002AD28 <AmiBlitz3.ab3@12726>   ADDQ.l #2,d0
0002AD2A <AmiBlitz3.ab3@12727>   MOVEQ.l #$01,D1
0002AD30 <AmiBlitz3.ab3@12728>   MOVEA.l _execbase,A6
0002AD36 <AmiBlitz3.ab3@12729>   MOVE.l mempool2,a0
0002AD3A <AmiBlitz3.ab3@12730>   JSR _AllocPooled(a6)
0002AD40 <AmiBlitz3.ab3@12732>   MOVE.l lastlabel,a2
0002AD42 <AmiBlitz3.ab3@12733>   MOVE.l D0,(A2)
0002AD44 <AmiBlitz3.ab3@12734>   MOVE.l d0,a0
0002AD46 <AmiBlitz3.ab3@12735>   CLR.l (a0)
0002AD4C <AmiBlitz3.ab3@12736>   MOVE.l a0,lastlabel
0002AD4E <AmiBlitz3.ab3@12737>   MOVE.l d0,A2
0002AD52 <AmiBlitz3.ab3@12738>   LEA -$1(A0,D7.W),A0
0002AD54 <AmiBlitz3.ab3@12739>   MOVE.b D2,(A0)+
0002AD5A <AmiBlitz3.ab3@12740>   LEA ptr_parameterstore,A1
0002AD5C <AmiBlitz3.ab3@12741>   MOVEQ #0,d0
0002AD5E <AmiBlitz3.ab3@12742>   MOVEQ #0,d1
0002AD60 <AmiBlitz3.ab3@12745>   MOVE.b (A1)+,d1
0002AD64 <AmiBlitz3.ab3@12746>    BEQ 'l1
0002AD6A <AmiBlitz3.ab3@12747>    !hashalgo
0002AD6C <AmiBlitz3.ab3@12748>    MOVE.b d1,(A0)+
0002AD70 <AmiBlitz3.ab3@12749>  BRA 'loop2a
0002AD72 <AmiBlitz3.ab3@12752>    CLR.b (a0)+
0002AD78 <AmiBlitz3.ab3@12753>    LEA labelhash,a0
0002AD7E <AmiBlitz3.ab3@12754>    AND.l #hashsize,d0
0002AD80 <AmiBlitz3.ab3@12755>    ASL.l #2,d0
0002AD84 <AmiBlitz3.ab3@12756>    MOVE.l 0(a0,d0),d1
0002AD88 <AmiBlitz3.ab3@12757>    MOVE.l d1,$c(a2)
0002AD8C <AmiBlitz3.ab3@12758>    MOVE.l a2,0(a0,d0)
0002AD8E <AmiBlitz3.ab3@12759>    MOVEQ #0,d0
0002AD92 <AmiBlitz3.ab3@12760> BRA.w reget
0002AD98 <AmiBlitz3.ab3@12764>    TST.b newvariable
0002AD9C <AmiBlitz3.ab3@12765>    BNE addlabel
0002ADA2 <AmiBlitz3.ab3@12768>   TST.w dirmode
0002ADA6 <AmiBlitz3.ab3@12769>    BNE.w illdirerr
0002ADA8 <AmiBlitz3.ab3@12770>   MOVEQ.l #$00,D0
0002ADAA <AmiBlitz3.ab3@12771>   MOVE.w D7,D0
0002ADAC <AmiBlitz3.ab3@12772>   ADD.w D2,D0
0002ADAE <AmiBlitz3.ab3@12773>   ADDQ.w #1,D0
0002ADB0 <AmiBlitz3.ab3@12774>   MOVE.w D0,D2
0002ADB2 <AmiBlitz3.ab3@12775>   MOVEQ.l #$01,D1
0002ADB8 <AmiBlitz3.ab3@12776>   MOVEA.l _execbase,A6
0002ADBE <AmiBlitz3.ab3@12777>   MOVE.l mempool2,a0
0002ADC2 <AmiBlitz3.ab3@12778>   JSR _AllocPooled(a6)
0002ADC4 <AmiBlitz3.ab3@12779>   MOVEA.l D0,A0
0002ADCA <AmiBlitz3.ab3@12781>   LEA varbase,a2
0002ADCC <AmiBlitz3.ab3@12782>   MOVE.l (a2),(a0)
0002ADCE <AmiBlitz3.ab3@12783>   MOVE.l A0,(A2)
0002ADD0 <AmiBlitz3.ab3@12784>   MOVEA.l A0,A2
0002ADD4 <AmiBlitz3.ab3@12785>   LEA -$1(A0,D7.W),A0
0002ADD6 <AmiBlitz3.ab3@12786>   MOVE.b D2,(A0)+
0002ADDC <AmiBlitz3.ab3@12787>   LEA ptr_parameterstore,A1
0002ADDE <AmiBlitz3.ab3@12788>   MOVEQ #0,d0
0002ADE0 <AmiBlitz3.ab3@12789>   MOVEQ #0,d1
0002ADE2 <AmiBlitz3.ab3@12792>   MOVE.b (A1)+,d1
0002ADE6 <AmiBlitz3.ab3@12793>    BEQ 'l12
0002ADEC <AmiBlitz3.ab3@12794>    !hashalgo
0002ADEE <AmiBlitz3.ab3@12795>    MOVE.b d1,(A0)+
0002ADF2 <AmiBlitz3.ab3@12796>  BRA 'l11
0002ADF4 <AmiBlitz3.ab3@12799>   CLR.b (a0)+
0002ADFA <AmiBlitz3.ab3@12800>   LEA variablehash,a0
0002AE00 <AmiBlitz3.ab3@12801>    AND.l #hashsize,d0
0002AE02 <AmiBlitz3.ab3@12802>    ASL.l #2,d0
0002AE06 <AmiBlitz3.ab3@12803>    MOVE.l 0(a0,d0),d1
0002AE0A <AmiBlitz3.ab3@12804>    MOVE.l d1,$e(a2)
0002AE0E <AmiBlitz3.ab3@12805>    MOVE.l a2,0(a0,d0)
0002AE10 <AmiBlitz3.ab3@12806>    MOVEQ #0,d0
0002AE14 <AmiBlitz3.ab3@12807> BRA.w reget
0002AE1A <AmiBlitz3.ab3@12811>   TST.w dirmode
0002AE1E <AmiBlitz3.ab3@12812>    BNE.w illdirerr
0002AE20 <AmiBlitz3.ab3@12819>   MOVEQ.l #$00,D0
0002AE22 <AmiBlitz3.ab3@12820>   MOVE.w D7,D0
0002AE24 <AmiBlitz3.ab3@12821>   ADD.w D2,D0
0002AE26 <AmiBlitz3.ab3@12822>   ADDQ.w #1,D0
0002AE28 <AmiBlitz3.ab3@12823>   MOVE.w D0,D2
0002AE2A <AmiBlitz3.ab3@12824>   MOVEQ.l #$01,D1
0002AE30 <AmiBlitz3.ab3@12825>   MOVEA.l _execbase,A6
0002AE36 <AmiBlitz3.ab3@12827>   MOVE.l mempool2,a0
0002AE3A <AmiBlitz3.ab3@12828>   JSR _AllocPooled(a6)
0002AE3C <AmiBlitz3.ab3@12832>   MOVEA.l D0,A0
0002AE3E <AmiBlitz3.ab3@12833>   MOVE.l A0,(A2)
0002AE40 <AmiBlitz3.ab3@12834>   CLR.l (a0)              ;clear next
0002AE44 <AmiBlitz3.ab3@12836>   CLR.l 8(a0)
0002AE46 <AmiBlitz3.ab3@12837>   MOVEA.l A0,A2
0002AE4A <AmiBlitz3.ab3@12839>   LEA -$1(A0,D7.W),A0
0002AE4C <AmiBlitz3.ab3@12840>   MOVE.b D2,(A0)+          ;put in struct length
0002AE52 <AmiBlitz3.ab3@12841>   LEA ptr_parameterstore,A1
0002AE54 <AmiBlitz3.ab3@12843>   MOVEQ #0,d0
0002AE56 <AmiBlitz3.ab3@12844>   MOVEQ #0,d1
0002AE58 <AmiBlitz3.ab3@12848> 
0002AE5A <AmiBlitz3.ab3@12849>   MOVE.b d1,(A0)+       ; "
0002AE5E <AmiBlitz3.ab3@12850>   BNE.w 'loop2
0002AE62 <AmiBlitz3.ab3@12851> BRA.w reget
0002AE64 <AmiBlitz3.ab3@12855>   MOVEQ.l #$13,D7
0002AE6A <AmiBlitz3.ab3@12856>   LEA constantbase,A2
0002AE6E <AmiBlitz3.ab3@12857> BRA.w findlab
0002AE70 <AmiBlitz3.ab3@12861>   MOVEQ.l #$05+8,D7        ; was #5                                ;#5,d7 org source
0002AE76 <AmiBlitz3.ab3@12862>   LEA xinclude_base,A2
0002AE7A <AmiBlitz3.ab3@12863> BRA.w findlab
0002AE7C <AmiBlitz3.ab3@12867>   MOVEQ.l #$09,D7
0002AE82 <AmiBlitz3.ab3@12868>   LEA firstconst,A2
0002AE86 <AmiBlitz3.ab3@12869> BRA.w findlab
0002AE88 <AmiBlitz3.ab3@12873>   MOVEQ.l #$0d,D7                                          ;find macro
0002AE8E <AmiBlitz3.ab3@12874>   LEA macrobase,A2
0002AE92 <AmiBlitz3.ab3@12875> BRA.w findlab
0002AE98 <AmiBlitz3.ab3@12879>   LEA labelhash,A2
0002AE9A <AmiBlitz3.ab3@12880>   MOVEQ.l #$13,D7
0002AE9C <AmiBlitz3.ab3@12882>   EXT.l d2
0002AEA2 <AmiBlitz3.ab3@12883>   LEA ptr_parameterstore,A0
0002AEA4 <AmiBlitz3.ab3@12884>   MOVEQ #0,d0
0002AEA6 <AmiBlitz3.ab3@12885>   MOVEQ #0,d1
0002AEA8 <AmiBlitz3.ab3@12888>     MOVE.b (a0)+,d1
0002AEAC <AmiBlitz3.ab3@12889>     BEQ 'l15
0002AEB2 <AmiBlitz3.ab3@12890>     !hashalgo
0002AEB6 <AmiBlitz3.ab3@12891>  BRA 'l20
0002AEBC <AmiBlitz3.ab3@12894>   AND.l #hashsize,d0
0002AEBE <AmiBlitz3.ab3@12895>   ASL.l #2,d0
0002AEC2 <AmiBlitz3.ab3@12896>   MOVE.l 0(a2,d0),d0
0002AEC6 <AmiBlitz3.ab3@12897>  BRA 'l11
0002AECA <AmiBlitz3.ab3@12900>   MOVE.l $c(A2),D0          ;  begin copy of findlabel
0002AECE <AmiBlitz3.ab3@12903>   BEQ findlab_no
0002AED0 <AmiBlitz3.ab3@12904>   MOVEA.l D0,A2
0002AED2 <AmiBlitz3.ab3@12905>   MOVEQ.l #$00,D0
0002AED6 <AmiBlitz3.ab3@12906>   MOVE.b -$1(A2,D7.l),D0
0002AEDC <AmiBlitz3.ab3@12907>   LEA ptr_parameterstore,A0
0002AEDE <AmiBlitz3.ab3@12908>   SUB.l D7,D0
0002AEE0 <AmiBlitz3.ab3@12909>   SUBQ.l #1,D0
0002AEE2 <AmiBlitz3.ab3@12910>   CMP.l D0,D2
0002AEE6 <AmiBlitz3.ab3@12911>    BNE.b 'loop
0002AEEA <AmiBlitz3.ab3@12912>   LEA $0(A2,D7.W),A1
0002AEEC <AmiBlitz3.ab3@12913>   SUBQ.l #1,D0
0002AEEE <AmiBlitz3.ab3@12916>     MOVE.b (a1)+,d1
0002AEF0 <AmiBlitz3.ab3@12917>     CMP.b (a0)+,d1
0002AEF4 <AmiBlitz3.ab3@12919>     BNE.b 'loop
0002AEF8 <AmiBlitz3.ab3@12920>   DBF D0,'loop2
0002AEFC <AmiBlitz3.ab3@12922>   BSR.w reget
0002AEFE <AmiBlitz3.ab3@12923>   CMP.w D0,D0
0002AF00 <AmiBlitz3.ab3@12924> RTS                     ; end copy of findlab
0002AF02 <AmiBlitz3.ab3@12928>   MOVEQ.l #$0B,D7
0002AF06 <AmiBlitz3.ab3@12929> BRA.w findlab
0002AF0C <AmiBlitz3.ab3@12933>   LEA firstproc,A2
0002AF12 <AmiBlitz3.ab3@12934>   MOVE.l #$21+#funcentry_extend,D7    ; was #33,
0002AF16 <AmiBlitz3.ab3@12935> BRA findlab
0002AF1C <AmiBlitz3.ab3@12939>   LEA firstfor,A2
0002AF1E <AmiBlitz3.ab3@12940>   MOVEQ.l #$11,D7
0002AF22 <AmiBlitz3.ab3@12941> BRA.w findlab
0002AF24 <AmiBlitz3.ab3@12945>   MOVEQ.l #$0F,D7
0002AF28 <AmiBlitz3.ab3@12947> BRA.w findlab
0002AF2A <AmiBlitz3.ab3@12951>   MOVEQ.l #$0F+4,D7
0002AF30 <AmiBlitz3.ab3@12952>   TST.b newvariable
0002AF34 <AmiBlitz3.ab3@12953>    BNE.w findlab
0002AF3A <AmiBlitz3.ab3@12954>   LEA variablehash,A2
0002AF40 <AmiBlitz3.ab3@12955>   LEA ptr_parameterstore,A0
0002AF42 <AmiBlitz3.ab3@12956>   MOVEQ #0,d0
0002AF44 <AmiBlitz3.ab3@12957>   MOVEQ #0,d1
0002AF46 <AmiBlitz3.ab3@12960>     MOVE.b (a0)+,d1
0002AF4A <AmiBlitz3.ab3@12961>     BEQ 'l15
0002AF50 <AmiBlitz3.ab3@12962>     !hashalgo
0002AF54 <AmiBlitz3.ab3@12963>  BRA 'l20
0002AF5A <AmiBlitz3.ab3@12966>   AND.l #hashsize,d0
0002AF5C <AmiBlitz3.ab3@12967>   ASL.l #2,d0
0002AF60 <AmiBlitz3.ab3@12968>   MOVE.l 0(a2,d0),d0
0002AF64 <AmiBlitz3.ab3@12969>  BRA 'l11
0002AF68 <AmiBlitz3.ab3@12972>   MOVE.l $e(A2),D0                                         ;find label
0002AF6C <AmiBlitz3.ab3@12975>   BEQ findlab_no
0002AF6E <AmiBlitz3.ab3@12976>   MOVEA.l D0,A2
0002AF70 <AmiBlitz3.ab3@12977>   MOVEQ.l #$00,D0
0002AF74 <AmiBlitz3.ab3@12978>   MOVE.b -$1(A2,D7.W),D0
0002AF7A <AmiBlitz3.ab3@12979>   LEA ptr_parameterstore,A0
0002AF7C <AmiBlitz3.ab3@12980>   SUB.w D7,D0
0002AF7E <AmiBlitz3.ab3@12981>   SUBQ.l #1,D0
0002AF80 <AmiBlitz3.ab3@12982>   CMP.w D0,D2
0002AF84 <AmiBlitz3.ab3@12983>    BNE.b 'l10
0002AF88 <AmiBlitz3.ab3@12984>   LEA $0(A2,D7.W),A1
0002AF8A <AmiBlitz3.ab3@12985>   SUBQ.l #1,D0
0002AF8C <AmiBlitz3.ab3@12988>     MOVE.b (a1)+,d1
0002AF8E <AmiBlitz3.ab3@12989>     CMP.b (a0)+,d1
0002AF92 <AmiBlitz3.ab3@12991>     BNE.b 'l10
0002AF96 <AmiBlitz3.ab3@12992>   DBF D0,'l201
0002AF9A <AmiBlitz3.ab3@12994>   BSR.w reget
0002AF9C <AmiBlitz3.ab3@12995>   CMP.w D0,D0
0002AF9E <AmiBlitz3.ab3@12996> RTS
0002AFA0 <AmiBlitz3.ab3@13009>     MOVE.l (A2),D0                                         ;find label
0002AFA4 <AmiBlitz3.ab3@13010>      BEQ.b findlab_no
0002AFA6 <AmiBlitz3.ab3@13011>     MOVEA.l D0,A2
0002AFA8 <AmiBlitz3.ab3@13012>     MOVEQ.l #$00,D0
0002AFAC <AmiBlitz3.ab3@13013>     MOVE.b -$1(A2,D7.W),D0
0002AFAE <AmiBlitz3.ab3@13014>     SUB.l D7,D0
0002AFB0 <AmiBlitz3.ab3@13015>     SUBQ.l #1,D0
0002AFB2 <AmiBlitz3.ab3@13016>   CMP.w D0,D2
0002AFB6 <AmiBlitz3.ab3@13017>   BNE.b 'loop
0002AFBA <AmiBlitz3.ab3@13019>   LEA $0(A2,D7.W),A1
0002AFC0 <AmiBlitz3.ab3@13020>   LEA ptr_parameterstore,A0
0002AFC2 <AmiBlitz3.ab3@13021>   SUBQ.l #1,D0
0002AFC4 <AmiBlitz3.ab3@13025>     MOVE.b (a1)+,d1
0002AFC6 <AmiBlitz3.ab3@13026>     CMP.b (a0)+,d1
0002AFCA <AmiBlitz3.ab3@13029>     BNE.b 'loop
0002AFCE <AmiBlitz3.ab3@13030>   DBF D0,'loop2
0002AFD2 <AmiBlitz3.ab3@13032>   BSR.w reget
0002AFD4 <AmiBlitz3.ab3@13033>   CMP.w D0,D0
0002AFD6 <AmiBlitz3.ab3@13034>  RTS
0002AFDA <AmiBlitz3.ab3@13037>   BSR.w reget
0002AFDC <AmiBlitz3.ab3@13038>   MOVEQ.l #-$01,D1
0002AFDE <AmiBlitz3.ab3@13039> RTS
0002AFE4 <AmiBlitz3.ab3@13043>   MOVEA.l alllocals,A4
0002AFEA <AmiBlitz3.ab3@13044>   CLR.l alllocals
0002AFEE <AmiBlitz3.ab3@13050>     CMPA.w #$0,A4
0002AFF2 <AmiBlitz3.ab3@13051>      BEQ.b 'done
0002AFF6 <AmiBlitz3.ab3@13052>     MOVEA.l $4(A4),A3
0002AFFA <AmiBlitz3.ab3@13054>     MOVEA.l $8(A4),A3
0002AFFC <AmiBlitz3.ab3@13056>     MOVEA.l A4,A1
0002AFFE <AmiBlitz3.ab3@13057>     MOVEA.l (A4),A4
0002B000 <AmiBlitz3.ab3@13058>     MOVEQ.l #$0C,D0
0002B006 <AmiBlitz3.ab3@13059>     MOVEA.l _execbase,A6
0002B00C <AmiBlitz3.ab3@13061>     MOVE.l mempool,a0
0002B010 <AmiBlitz3.ab3@13062>     JSR _FreePooled(A6)
0002B014 <AmiBlitz3.ab3@13065>  BRA.b 'loop
0002B01A <AmiBlitz3.ab3@13069>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002B020 <AmiBlitz3.ab3@13070>   CLR.l firstlocal
0002B026 <AmiBlitz3.ab3@13071>   CLR.l sharebase
0002B02C <AmiBlitz3.ab3@13072>   TST.l mempool2
0002B030 <AmiBlitz3.ab3@13073>   BEQ 'done_l10
0002B036 <AmiBlitz3.ab3@13075>   MOVEA.l _execbase,A6
0002B03C <AmiBlitz3.ab3@13076>   MOVE.l mempool2,a0
0002B042 <AmiBlitz3.ab3@13077>   CLR.l mempool2
0002B046 <AmiBlitz3.ab3@13078>   JSR _DeletePool(a6)
0002B04C <AmiBlitz3.ab3@13081>   MOVE.l _execbase,a6
0002B052 <AmiBlitz3.ab3@13082>   MOVE.l #$10000,d0
0002B058 <AmiBlitz3.ab3@13083>   MOVE.l #80000,d1
0002B05A <AmiBlitz3.ab3@13084>   MOVE.l d1,d2
0002B05E <AmiBlitz3.ab3@13085>   JSR _CreatePool(a6)
0002B064 <AmiBlitz3.ab3@13086>   MOVE.l d0,mempool2
0002B066 <AmiBlitz3.ab3@13088> RTS
0002B06A <AmiBlitz3.ab3@13093>   CMPA.w #$0,A3
0002B06E <AmiBlitz3.ab3@13094>    BEQ.w 'done
0002B070 <AmiBlitz3.ab3@13095>   MOVEA.l A3,A1
0002B072 <AmiBlitz3.ab3@13096>   MOVEA.l (A3),A3
0002B074 <AmiBlitz3.ab3@13097>   MOVEQ.l #$00,D0
0002B078 <AmiBlitz3.ab3@13098>   MOVE.b $E(A1),D0
0002B07E <AmiBlitz3.ab3@13099>   MOVEA.l _execbase,A6
0002B084 <AmiBlitz3.ab3@13101>   MOVE.l mempool2,a0
0002B088 <AmiBlitz3.ab3@13102>   JSR _FreePooled(A6)
0002B08C <AmiBlitz3.ab3@13105>  BRA.w freevars
0002B090 <AmiBlitz3.ab3@13109>     CMPA.w #$0,A3
0002B094 <AmiBlitz3.ab3@13110>      BEQ.w 'done
0002B096 <AmiBlitz3.ab3@13111>     MOVEA.l A3,A1
0002B098 <AmiBlitz3.ab3@13112>     MOVEA.l (A3),A3
0002B09A <AmiBlitz3.ab3@13113>     MOVEQ.l #$00,D0
0002B09E <AmiBlitz3.ab3@13114>     MOVE.b $E+4(A1),D0
0002B0A4 <AmiBlitz3.ab3@13115>     MOVEA.l _execbase,A6
0002B0AA <AmiBlitz3.ab3@13116>     MOVE.l mempool2,a0
0002B0AE <AmiBlitz3.ab3@13117>     JSR _FreePooled(A6)
0002B0B2 <AmiBlitz3.ab3@13118>  BRA.w 'freevarsb
0002B0B4 <AmiBlitz3.ab3@13122> RTS
0002B0BA <AmiBlitz3.ab3@13128>   MOVEA.l currentlabeladdr,A0
0002B0C0 <AmiBlitz3.ab3@13129>   MOVE.l a0,lastlabel
0002B0C2 <AmiBlitz3.ab3@13130>   MOVEA.l (A0),A2
0002B0C4 <AmiBlitz3.ab3@13131>   CLR.l (A0)
0002B0CA <AmiBlitz3.ab3@13132>   MOVEA.l _execbase,A6
0002B0CE <AmiBlitz3.ab3@13135>   CMPA.w #$0,A2
0002B0D2 <AmiBlitz3.ab3@13136>    BEQ.w 'done
0002B0D6 <AmiBlitz3.ab3@13137>   MOVE.l $4(A2),D0
0002B0DA <AmiBlitz3.ab3@13138>   BTST #$0,D0
0002B0DE <AmiBlitz3.ab3@13139>    BNE.w 'skip
0002B0E0 <AmiBlitz3.ab3@13140>   MOVEA.l D0,A3
0002B0E4 <AmiBlitz3.ab3@13143>     CMPA.w #$0,A3
0002B0E8 <AmiBlitz3.ab3@13144>      BEQ.w 'skip
0002B0EA <AmiBlitz3.ab3@13145>     MOVEA.l A3,A1
0002B0EC <AmiBlitz3.ab3@13146>     MOVEA.l (A3),A3
0002B0EE <AmiBlitz3.ab3@13147>     MOVEQ.l #$0C+2,D0     ; was #12                                 ;cancel fix
0002B0F4 <AmiBlitz3.ab3@13149>     MOVE.l mempool,a0
0002B0F8 <AmiBlitz3.ab3@13150>     JSR _FreePooled(A6)
0002B0FC <AmiBlitz3.ab3@13153>  BRA.w 'loop2
0002B0FE <AmiBlitz3.ab3@13156>   MOVEQ.l #$00,D0
0002B102 <AmiBlitz3.ab3@13157>   MOVE.b $12(A2),D0
0002B104 <AmiBlitz3.ab3@13158>   MOVEA.l A2,A1
0002B106 <AmiBlitz3.ab3@13159>   MOVEA.l (A2),A2
0002B10C <AmiBlitz3.ab3@13161>   MOVE.l mempool2,a0
0002B110 <AmiBlitz3.ab3@13165>  BRA.w 'loop
0002B112 <AmiBlitz3.ab3@13168> RTS
0002B118 <AmiBlitz3.ab3@13172>   MOVEA.l firstpend,A3
0002B11E <AmiBlitz3.ab3@13173>   CLR.l firstpend
0002B124 <AmiBlitz3.ab3@13174>   MOVEA.l _execbase,A6
0002B128 <AmiBlitz3.ab3@13177>     CMPA.w #$0,A3
0002B12C <AmiBlitz3.ab3@13178>      BEQ.w 'done
0002B12E <AmiBlitz3.ab3@13179>     MOVEA.l A3,A1
0002B130 <AmiBlitz3.ab3@13180>     MOVEQ.l #$08,D0
0002B132 <AmiBlitz3.ab3@13181>     MOVEA.l (A3),A3
0002B138 <AmiBlitz3.ab3@13183>     MOVE.l mempool,a0
0002B13C <AmiBlitz3.ab3@13184>     JSR _FreePooled(A6)
0002B140 <AmiBlitz3.ab3@13187>  BRA.w 'fpnd2
0002B142 <AmiBlitz3.ab3@13190> RTS
0002B148 <AmiBlitz3.ab3@13196>   MOVEA.l firstproc,A2
0002B14E <AmiBlitz3.ab3@13197>   CLR.l firstproc
0002B154 <AmiBlitz3.ab3@13198>   MOVEA.l _execbase,A6
0002B158 <AmiBlitz3.ab3@13201>     CMPA.w #$0,A2
0002B15C <AmiBlitz3.ab3@13202>      BEQ.w 'done
0002B15E <AmiBlitz3.ab3@13203>     MOVEA.l A2,A1
0002B160 <AmiBlitz3.ab3@13204>     MOVEA.l (A2),A2
0002B162 <AmiBlitz3.ab3@13205>     MOVEQ.l #$00,D0
0002B166 <AmiBlitz3.ab3@13206>     MOVE.b $20+#funcentry_extend(A1),D0    ; was 32(a1),
0002B16C <AmiBlitz3.ab3@13208>     MOVE.l mempool2,a0
0002B170 <AmiBlitz3.ab3@13209>     JSR _FreePooled(A6)
0002B174 <AmiBlitz3.ab3@13212>  BRA.w 'loop
0002B176 <AmiBlitz3.ab3@13215> RTS
0002B17A <AmiBlitz3.ab3@13220>   CMPA.w #$0,A2
0002B17E <AmiBlitz3.ab3@13221>    BEQ.w 'done
0002B182 <AmiBlitz3.ab3@13222>   MOVEA.l $4(A2),A3
0002B186 <AmiBlitz3.ab3@13223>   CMPA.w #$FF,A3
0002B18A <AmiBlitz3.ab3@13224>    BEQ.w 'noway
0002B18E <AmiBlitz3.ab3@13228>    BSR.w freevars
0002B190 <AmiBlitz3.ab3@13231>     MOVEA.l A2,A1
0002B192 <AmiBlitz3.ab3@13232>     MOVEA.l (A2),A2
0002B194 <AmiBlitz3.ab3@13233>     MOVEQ.l #$00,D0
0002B198 <AmiBlitz3.ab3@13234>     MOVE.b $A(A1),D0
0002B19E <AmiBlitz3.ab3@13235>     MOVEA.l _execbase,A6
0002B1A4 <AmiBlitz3.ab3@13237>     MOVE.l mempool2,a0
0002B1A8 <AmiBlitz3.ab3@13238>     JSR _FreePooled(A6)
0002B1AC <AmiBlitz3.ab3@13241>  BRA.w freetypes
0002B1AE <AmiBlitz3.ab3@13244> RTS
0002B1B4 <AmiBlitz3.ab3@13253>   JSR usevars
0002B1BA <AmiBlitz3.ab3@13255>   CLR.w notshared
0002B1C0 <AmiBlitz3.ab3@13256>   CLR.w varmode           ;local mode
0002B1C6 <AmiBlitz3.ab3@13257>   MOVE.w proceduremode,D1
0002B1CA <AmiBlitz3.ab3@13258>    BNE.w fvarlocal
0002B1D0 <AmiBlitz3.ab3@13260>   LEA varbase,A2
0002B1D6 <AmiBlitz3.ab3@13262>   LEA ptr_parameterstore,a0
0002B1DA <AmiBlitz3.ab3@13263>   CMP.b #$22,(a0)
0002B1DE <AmiBlitz3.ab3@13264>   BNE fvarback
0002B1E0 <AmiBlitz3.ab3@13265>   MOVEQ #0,d0
0002B1E6 <AmiBlitz3.ab3@13266>  JMP error
0002B1EA <AmiBlitz3.ab3@13271>   BSR.w findvariable
0002B1EE <AmiBlitz3.ab3@13274>   BNE.w fvaradd
0002B1F4 <AmiBlitz3.ab3@13279>   MOVE.b flagmask+1,D1
0002B1F8 <AmiBlitz3.ab3@13280>   MOVE.b $7(A2),D3
0002B1FA <AmiBlitz3.ab3@13281>   EOR.b D3,D1
0002B1FE <AmiBlitz3.ab3@13283>   BNE 'l2
0002B206 <AmiBlitz3.ab3@13284>   CMP.b #2,nowdeclare
0002B20A <AmiBlitz3.ab3@13285>   BEQ errormsg_declaredtwice
0002B20E <AmiBlitz3.ab3@13286>  BRA.w fvarfound
0002B212 <AmiBlitz3.ab3@13290>   BSR.w findlab
0002B216 <AmiBlitz3.ab3@13292>   BNE 'l1
0002B21E <AmiBlitz3.ab3@13293>   CMP.b #2,nowdeclare
0002B222 <AmiBlitz3.ab3@13294>   BEQ errormsg_declaredtwice
0002B224 <AmiBlitz3.ab3@13295>   CMP.w d0,d0
0002B228 <AmiBlitz3.ab3@13299>  BRA.w 'more
0002B22A <AmiBlitz3.ab3@13303>    MOVE.l a2,-(a7)
0002B230 <AmiBlitz3.ab3@13304>    LEA sharebase,a2
0002B232 <AmiBlitz3.ab3@13305>    MOVEQ #$f+4,d7
0002B236 <AmiBlitz3.ab3@13306>    BSR.w findlab
0002B23A <AmiBlitz3.ab3@13307>    BEQ 'l2x
0002B23C <AmiBlitz3.ab3@13308>    MOVE.l (a7)+,a2
0002B240 <AmiBlitz3.ab3@13309>  BRA 'cont
0002B242 <AmiBlitz3.ab3@13312>   ADDQ.l #4,a7
0002B248 <AmiBlitz3.ab3@13313>   CLR.w varmode
0002B24E <AmiBlitz3.ab3@13314>   MOVE.b flagmask+1,D1
0002B252 <AmiBlitz3.ab3@13315>   MOVE.b $7(A2),D3
0002B254 <AmiBlitz3.ab3@13316>   EOR.b D3,D1
0002B258 <AmiBlitz3.ab3@13317>   BNE vardeclareerr
0002B25C <AmiBlitz3.ab3@13318>  BRA fvarfound
0002B262 <AmiBlitz3.ab3@13322>    MOVE.w nonew,D1
0002B266 <AmiBlitz3.ab3@13323>    BNE.w nonewerr
0002B26C <AmiBlitz3.ab3@13325>    TST.b nowdeclare
0002B270 <AmiBlitz3.ab3@13326>    BNE 'l2b
0002B276 <AmiBlitz3.ab3@13327>    TST.b declare2
0002B27A <AmiBlitz3.ab3@13328>    BEQ 'l1b
0002B27E <AmiBlitz3.ab3@13329>    CMP.b #$2e,d0
0002B282 <AmiBlitz3.ab3@13330>    BEQ 'l2b
0002B286 <AmiBlitz3.ab3@13331>    CMP.b #"$",d0
0002B28A <AmiBlitz3.ab3@13332>    BEQ 'l2b
0002B28E <AmiBlitz3.ab3@13333>  BRA vardeclareerr
0002B294 <AmiBlitz3.ab3@13336>   TST.b declare
0002B298 <AmiBlitz3.ab3@13337>    BNE vardeclareerr
0002B29C <AmiBlitz3.ab3@13341>   BSR.w addvariable      ;create var
0002B2A2 <AmiBlitz3.ab3@13342>   NOT.w notshared        ;set added flag
0002B2A4 <AmiBlitz3.ab3@13343>   MOVEA.l A2,A3
0002B2AA <AmiBlitz3.ab3@13344>   MOVEA.l defaulttype,A2
0002B2AE <AmiBlitz3.ab3@13345>   CMP.w #$2E,D0         ;'.'
0002B2B2 <AmiBlitz3.ab3@13346>    BEQ.w 'clapton
0002B2B6 <AmiBlitz3.ab3@13347>   CMP.w #$24,D0         ;'$'
0002B2BA <AmiBlitz3.ab3@13348>    BNE.w 'usedef
0002B2C0 <AmiBlitz3.ab3@13349>   LEA newtype_string,A2
0002B2C4 <AmiBlitz3.ab3@13350>    BSR.w get1bytemain
0002B2C8 <AmiBlitz3.ab3@13351>  BRA.w 'usedef
0002B2CC <AmiBlitz3.ab3@13354>   BSR.w getparameter2
0002B2D2 <AmiBlitz3.ab3@13355>   LEA newtypebase,A2
0002B2D6 <AmiBlitz3.ab3@13356>    BSR.w findtype
0002B2DA <AmiBlitz3.ab3@13357>    BNE.w notypeerr
0002B2E0 <AmiBlitz3.ab3@13360>   CMPA.l #newtype_byte,A2
0002B2E4 <AmiBlitz3.ab3@13361>    BEQ.w 'byte
0002B2EA <AmiBlitz3.ab3@13362>   MOVE.w varmode,D1
0002B2EE <AmiBlitz3.ab3@13363>    BNE.w 'pit
0002B2F4 <AmiBlitz3.ab3@13364>   ADDQ.w #1,globalvarpointer
0002B2FC <AmiBlitz3.ab3@13367>   BCLR #$0,globalvarpointer+1
0002B300 <AmiBlitz3.ab3@13370>   MOVE.l A2,$A(A3)           ;set type
0002B308 <AmiBlitz3.ab3@13371>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B30A <AmiBlitz3.ab3@13372>   MOVEQ.l #$04,D1
0002B312 <AmiBlitz3.ab3@13373>   BTST #$0,flagmask+1
0002B316 <AmiBlitz3.ab3@13374>    BNE.w 'skip3
0002B31E <AmiBlitz3.ab3@13375>   BTST #$1,flagmask+1
0002B322 <AmiBlitz3.ab3@13376>    BNE.w 'skip3
0002B32A <AmiBlitz3.ab3@13377>   CMPI.l #$100,$4(A2)
0002B32E <AmiBlitz3.ab3@13378>    BCC.w 'skip3
0002B332 <AmiBlitz3.ab3@13379>   MOVE.w $8(A2),D1
0002B338 <AmiBlitz3.ab3@13382>   TST.w varmode
0002B33C <AmiBlitz3.ab3@13383>    BEQ.w fvaradd_pit2
0002B33E <AmiBlitz3.ab3@13384>   NEG.w D1
0002B344 <AmiBlitz3.ab3@13385>   ADD.w D1,globalvarpointer
0002B34C <AmiBlitz3.ab3@13386>   MOVE.w globalvarpointer,$4(A3)
0002B34E <AmiBlitz3.ab3@13387>  RTS
0002B356 <AmiBlitz3.ab3@13390>   MOVE.w globalvarpointer,$4(A3)
0002B35C <AmiBlitz3.ab3@13391>   ADD.w D1,globalvarpointer
0002B35E <AmiBlitz3.ab3@13392> RTS
0002B362 <AmiBlitz3.ab3@13397>    BSR.w getparameter2
0002B368 <AmiBlitz3.ab3@13398>   LEA newtypebase,A2
0002B36C <AmiBlitz3.ab3@13399>    BSR.w findtype
0002B370 <AmiBlitz3.ab3@13400>    BNE.w notypeerr
0002B376 <AmiBlitz3.ab3@13403>   CMPA.l #newtype_byte,A2
0002B37A <AmiBlitz3.ab3@13404>    BEQ.w 'byte
0002B380 <AmiBlitz3.ab3@13405>   MOVE.w varmode,D1
0002B384 <AmiBlitz3.ab3@13406>    BNE.w 'pit
0002B38A <AmiBlitz3.ab3@13407>   ADDQ.w #1,globalvarpointer
0002B392 <AmiBlitz3.ab3@13410>   BCLR #$0,globalvarpointer+1
0002B396 <AmiBlitz3.ab3@13413>   MOVE.l A2,$A(A3)              ;set type
0002B39E <AmiBlitz3.ab3@13414>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B3A0 <AmiBlitz3.ab3@13416>   MOVEQ.l #$04,D1
0002B3A8 <AmiBlitz3.ab3@13417>   BTST #$0,flagmask+1
0002B3AC <AmiBlitz3.ab3@13418>    BNE.w 'skip3
0002B3B4 <AmiBlitz3.ab3@13419>   BTST #$1,flagmask+1
0002B3B8 <AmiBlitz3.ab3@13420>    BNE.w 'skip3
0002B3C0 <AmiBlitz3.ab3@13421>   CMPI.l #$100,$4(A2)
0002B3C4 <AmiBlitz3.ab3@13422>    BCC.w 'skip3
0002B3C8 <AmiBlitz3.ab3@13423>   MOVE.w $8(A2),D1
0002B3CE <AmiBlitz3.ab3@13426>   TST.w varmode
0002B3D2 <AmiBlitz3.ab3@13427> BRA.w fvaradd_pit2
0002B3D8 <AmiBlitz3.ab3@13437>   LEA firstglob,A2
0002B3DC <AmiBlitz3.ab3@13438>    BSR.w findvariable2
0002B3E0 <AmiBlitz3.ab3@13441>   BNE.w 'hendrix
0002B3E6 <AmiBlitz3.ab3@13442>   MOVE.b flagmask+1,D1
0002B3EA <AmiBlitz3.ab3@13443>   MOVE.b $7(A2),D3
0002B3EC <AmiBlitz3.ab3@13444>   EOR.b D3,D1
0002B3F0 <AmiBlitz3.ab3@13445>    BEQ.w fvarfound
0002B3F4 <AmiBlitz3.ab3@13446>    BSR.w findlab
0002B3F8 <AmiBlitz3.ab3@13447>  BRA.w 'more
0002B400 <AmiBlitz3.ab3@13450>   MOVE.w #$FFFF,varmode           ; was -1
0002B406 <AmiBlitz3.ab3@13451>   MOVE.w globalvarpointer,-(A7)
0002B410 <AmiBlitz3.ab3@13452>   MOVE.w locvaroff,globalvarpointer
0002B416 <AmiBlitz3.ab3@13453>   LEA firstlocal,A2
0002B41E <AmiBlitz3.ab3@13455>   MOVE.b #1,newvariable
0002B422 <AmiBlitz3.ab3@13457>    BSR.w fvarback
0002B428 <AmiBlitz3.ab3@13459>   CLR.b newvariable
0002B432 <AmiBlitz3.ab3@13461>   MOVE.w globalvarpointer,locvaroff
0002B438 <AmiBlitz3.ab3@13462>   MOVE.w (A7)+,globalvarpointer
0002B43A <AmiBlitz3.ab3@13463> RTS
0002B43C <AmiBlitz3.ab3@13467>   MOVEA.l A2,A3
0002B440 <AmiBlitz3.ab3@13471>   CMP.w #$2E,D0         ;'.'
0002B444 <AmiBlitz3.ab3@13472>    BEQ.w 'skipsh
0002B448 <AmiBlitz3.ab3@13473>   CMP.w #$24,D0         ;'$'
0002B44C <AmiBlitz3.ab3@13474>    BNE.w 'skip4
0002B454 <AmiBlitz3.ab3@13475>   CMPI.l #newtype_string,$A(A3)
0002B458 <AmiBlitz3.ab3@13476>    BNE.w rongtypeerr
0002B45C <AmiBlitz3.ab3@13477>    BSR.w get1bytemain
0002B460 <AmiBlitz3.ab3@13478>  BRA.w 'skip4
0002B464 <AmiBlitz3.ab3@13481>    BSR.w getparameter2
0002B46A <AmiBlitz3.ab3@13482>   LEA newtypebase,A2
0002B46E <AmiBlitz3.ab3@13483>    BSR.w findtype
0002B472 <AmiBlitz3.ab3@13484>    BNE.w notypeerr
0002B476 <AmiBlitz3.ab3@13485>   CMPA.l $A(A3),A2
0002B47A <AmiBlitz3.ab3@13486>    BNE.w rongtypeerr
0002B482 <AmiBlitz3.ab3@13489>   BTST #$0,flagmask+1
0002B486 <AmiBlitz3.ab3@13490>    BEQ.w 'skipz
0002B48C <AmiBlitz3.ab3@13492>   BTST #$0,$7(A3)
0002B490 <AmiBlitz3.ab3@13493>    BEQ.w pointerr
0002B494 <AmiBlitz3.ab3@13496>   MOVEA.l $A(A3),A2
0002B496 <AmiBlitz3.ab3@13497> RTS
0002B498 <AmiBlitz3.ab3@13501>    TST.l D3                                                ;newtype >32kb  .w to .l
0002B49C <AmiBlitz3.ab3@13502>    BEQ.w 'done2a
0002B4A6 <AmiBlitz3.ab3@13504>    MOVE.l destpointer,loada
0002B4AA <AmiBlitz3.ab3@13507>  BRA 'done3a
0002B4AE <AmiBlitz3.ab3@13510>   CMP.w #$9,D3                                             ;_addq_arrays
0002B4B2 <AmiBlitz3.ab3@13511>    BCC.w 'done3a
0002B4B8 <AmiBlitz3.ab3@13513>   MOVE.w d3,arrayoffset
0002B4BC <AmiBlitz3.ab3@13515>   ANDI.w #$7,D3
0002B4BE <AmiBlitz3.ab3@13516>   LSL.w #8,D3
0002B4C0 <AmiBlitz3.ab3@13517>   LSL.w #1,D3
0002B4C8 <AmiBlitz3.ab3@13518>   ANDI.w #$F1FF,addqa0
0002B4CE <AmiBlitz3.ab3@13519>   OR.w D3,addqa0
0002B4D4 <AmiBlitz3.ab3@13520>   MOVE.w addqa0,D1
0002B4D8 <AmiBlitz3.ab3@13521>  BRA.w writeword
0002B4DE <AmiBlitz3.ab3@13525>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002B4E2 <AmiBlitz3.ab3@13526>   BGT longoffset
0002B4E8 <AmiBlitz3.ab3@13528>   MOVE.w D3,leaa0a0+2
0002B4EE <AmiBlitz3.ab3@13530>   MOVE.w d3,arrayoffset
0002B4F4 <AmiBlitz3.ab3@13532>   MOVE.l leaa0a0,D1
0002B4F8 <AmiBlitz3.ab3@13533>   BSR.w writelong
0002B4FA <AmiBlitz3.ab3@13536> RTS
0002B4FE <AmiBlitz3.ab3@13540>    MOVE.w #$d5fc,d1
0002B502 <AmiBlitz3.ab3@13541>    BSR writeword
0002B504 <AmiBlitz3.ab3@13542>    MOVE.l d3,d1
0002B508 <AmiBlitz3.ab3@13543>    BSR.w writelong
0002B50A <AmiBlitz3.ab3@13544> RTS
0002B50E <AmiBlitz3.ab3@13548>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002B512 <AmiBlitz3.ab3@13551>    BCS.w arrchk3                                           
0002B518 <AmiBlitz3.ab3@13552>    JSR $20000                                              ;jsr 0
0002B51E <AmiBlitz3.ab3@13563>   TST.b fast
0002B522 <AmiBlitz3.ab3@13564>   BEQ 'l1
0002B524 <AmiBlitz3.ab3@13565>    MOVEQ #0,d1                                             ;faster arrays
0002B52A <AmiBlitz3.ab3@13566>    MOVE.w regnum,d2
0002B52C <AmiBlitz3.ab3@13567>    MOVE.w d2,d1
0002B52E <AmiBlitz3.ab3@13568>    LSL.w #8,d1
0002B530 <AmiBlitz3.ab3@13569>    LSL.w #4,d1
0002B532 <AmiBlitz3.ab3@13570>    ADD.w d2,d1
0002B538 <AmiBlitz3.ab3@13571>    OR.l #$4c2d0000,d1
0002B53E <AmiBlitz3.ab3@13572>    TST.w varmode
0002B542 <AmiBlitz3.ab3@13573>    BEQ 'l1a
0002B546 <AmiBlitz3.ab3@13574>    BCLR #16,d1
0002B54A <AmiBlitz3.ab3@13577>    BSR writelong
0002B54E <AmiBlitz3.ab3@13578>    MOVE.w $4(A7),D1
0002B552 <AmiBlitz3.ab3@13579>    BSR.w writeword
0002B558 <AmiBlitz3.ab3@13580>    MOVE.w regnum,D1
0002B55A <AmiBlitz3.ab3@13581>   SUBQ.w #1,D1
0002B55C <AmiBlitz3.ab3@13582>   LSL.w #8,D1
0002B55E <AmiBlitz3.ab3@13583>   LSL.w #1,D1
0002B562 <AmiBlitz3.ab3@13584>   ORI.w #$D080,D1
0002B568 <AmiBlitz3.ab3@13585>   OR.w regnum,D1
0002B56C <AmiBlitz3.ab3@13586>    BSR.w writeword
0002B56E <AmiBlitz3.ab3@13587>  RTS
0002B574 <AmiBlitz3.ab3@13591>   MOVE.w regnum,D2
0002B578 <AmiBlitz3.ab3@13593>   MOVE.w arrmul1(PC),D1
0002B57A <AmiBlitz3.ab3@13594>   OR.w D2,D1
0002B57C <AmiBlitz3.ab3@13595>   SUBQ.w #1,D1
0002B580 <AmiBlitz3.ab3@13596>    BSR.w writeword
0002B584 <AmiBlitz3.ab3@13597>   MOVE.w arrmul2(PC),D1
0002B586 <AmiBlitz3.ab3@13598>   OR.w D2,D1
0002B588 <AmiBlitz3.ab3@13599>   MOVE.w D2,D3
0002B58A <AmiBlitz3.ab3@13600>   SUBQ.w #1,D3
0002B58C <AmiBlitz3.ab3@13601>   LSL.w #8,D3
0002B58E <AmiBlitz3.ab3@13602>   LSL.w #1,D3
0002B590 <AmiBlitz3.ab3@13603>   OR.w D3,D1
0002B594 <AmiBlitz3.ab3@13604>    BSR.w writeword
0002B598 <AmiBlitz3.ab3@13605>   MOVE.w arrmul3(PC),D1
0002B59A <AmiBlitz3.ab3@13606>   MOVE.w D2,D3
0002B59C <AmiBlitz3.ab3@13607>   LSL.w #8,D3
0002B59E <AmiBlitz3.ab3@13608>   LSL.w #1,D3
0002B5A0 <AmiBlitz3.ab3@13609>   OR.w D3,D1
0002B5A4 <AmiBlitz3.ab3@13610>    BSR.w pokewda5s
0002B5A8 <AmiBlitz3.ab3@13611>   MOVE.w $4(A7),D1         ; was 4+0
0002B5AA <AmiBlitz3.ab3@13612>   ADDQ.w #2,D1
0002B5AE <AmiBlitz3.ab3@13613>    BSR.w writeword
0002B5B2 <AmiBlitz3.ab3@13615>   MOVE.w arrmul4(PC),D1
0002B5B4 <AmiBlitz3.ab3@13616>   MOVE.w D2,D3
0002B5B6 <AmiBlitz3.ab3@13617>   SUBQ.w #1,D3
0002B5B8 <AmiBlitz3.ab3@13618>   LSL.w #8,D3
0002B5BA <AmiBlitz3.ab3@13619>   LSL.w #1,D3
0002B5BC <AmiBlitz3.ab3@13620>   OR.w D3,D1
0002B5C0 <AmiBlitz3.ab3@13621>    BSR.w pokewda5s
0002B5C4 <AmiBlitz3.ab3@13622>   MOVE.w $4(A7),D1       ; was 4+0
0002B5C8 <AmiBlitz3.ab3@13623>    BSR.w writeword
0002B5CC <AmiBlitz3.ab3@13625>   MOVE.w arrmul5(PC),D1
0002B5CE <AmiBlitz3.ab3@13626>   OR.w D2,D1
0002B5D0 <AmiBlitz3.ab3@13627>   SUBQ.w #1,D1
0002B5D4 <AmiBlitz3.ab3@13628>    BSR.w writeword
0002B5D8 <AmiBlitz3.ab3@13629>   MOVE.w arrmul6(PC),D1
0002B5DA <AmiBlitz3.ab3@13630>   OR.w D2,D1
0002B5DC <AmiBlitz3.ab3@13631>   SUBQ.w #1,D1
0002B5E0 <AmiBlitz3.ab3@13632>    BSR.w writeword
0002B5E4 <AmiBlitz3.ab3@13633>   MOVE.w arrmul7(PC),D1
0002B5E6 <AmiBlitz3.ab3@13634>   OR.w D2,D1
0002B5E8 <AmiBlitz3.ab3@13635>   SUBQ.w #1,D1
0002B5EA <AmiBlitz3.ab3@13636>   MOVE.w D2,D3
0002B5EC <AmiBlitz3.ab3@13637>   LSL.w #8,D3
0002B5EE <AmiBlitz3.ab3@13638>   LSL.w #1,D3
0002B5F0 <AmiBlitz3.ab3@13639>   OR.w D3,D1
0002B5F4 <AmiBlitz3.ab3@13640>    BSR.w writeword
0002B5F8 <AmiBlitz3.ab3@13641>   MOVE.w arrmul8(PC),D1
0002B5FA <AmiBlitz3.ab3@13642>   MOVE.w D2,D3
0002B5FC <AmiBlitz3.ab3@13643>   SUBQ.w #1,D3
0002B5FE <AmiBlitz3.ab3@13644>   LSL.w #8,D3
0002B600 <AmiBlitz3.ab3@13645>   LSL.w #1,D3
0002B602 <AmiBlitz3.ab3@13646>   OR.w D3,D1
0002B606 <AmiBlitz3.ab3@13647>    BSR.w writeword
0002B60C <AmiBlitz3.ab3@13649>   MOVE.w regnum,D1
0002B60E <AmiBlitz3.ab3@13650>   SUBQ.w #1,D1
0002B610 <AmiBlitz3.ab3@13651>   LSL.w #8,D1
0002B612 <AmiBlitz3.ab3@13652>   LSL.w #1,D1
0002B616 <AmiBlitz3.ab3@13653>   ORI.w #$D080,D1
0002B61C <AmiBlitz3.ab3@13654>   OR.w regnum,D1
0002B620 <AmiBlitz3.ab3@13655> BRA.w writeword
0002B622 <AmiBlitz3.ab3@13663> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B624 <AmiBlitz3.ab3@13664> arrmul2:   MOVE  d0,d0
0002B628 <AmiBlitz3.ab3@13665> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B62C <AmiBlitz3.ab3@13666> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B62E <AmiBlitz3.ab3@13668> arrmul5:   SWAP d0
0002B630 <AmiBlitz3.ab3@13669> arrmul6:   CLR d0
0002B632 <AmiBlitz3.ab3@13670> arrmul7:   ADD.l d0,d0
0002B634 <AmiBlitz3.ab3@13671> arrmul8:   MOVE.l (a7)+,d0
0002B638 <AmiBlitz3.ab3@13676> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B63C <AmiBlitz3.ab3@13677> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B63E <AmiBlitz3.ab3@13678> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B644 <AmiBlitz3.ab3@13696>   CLR.l lastoffset_org
0002B64A <AmiBlitz3.ab3@13697>   BTST #$1,$7(A3)
0002B64E <AmiBlitz3.ab3@13698>    BEQ.w 'notarr
0002B654 <AmiBlitz3.ab3@13699>   MOVE.w notshared,D1
0002B658 <AmiBlitz3.ab3@13700>    BNE.w noarrerr
0002B65C <AmiBlitz3.ab3@13701>    BSR.w get1bytemain
0002B660 <AmiBlitz3.ab3@13702>   CMP.w #$29,D0
0002B664 <AmiBlitz3.ab3@13703>    BNE.w 'notalist
0002B66A <AmiBlitz3.ab3@13704>   BTST #$0,$6(A3)
0002B66E <AmiBlitz3.ab3@13705>    BEQ.w nolisterr
0002B676 <AmiBlitz3.ab3@13706>   MOVE.w $4(A3),listcode1+2
0002B67A <AmiBlitz3.ab3@13707>   MOVE.l listcode1(PC),D1
0002B67E <AmiBlitz3.ab3@13708>    BSR.w pokela5s
0002B682 <AmiBlitz3.ab3@13709>   MOVE.l listcode2(PC),D1
0002B686 <AmiBlitz3.ab3@13710>    BSR.w writelong
0002B68C <AmiBlitz3.ab3@13711>   TST.b debugmode
0002B690 <AmiBlitz3.ab3@13712>    BEQ.w 'nolrerr
0002B692 <AmiBlitz3.ab3@13716>   MOVE.l A2,-(A7)
0002B696 <AmiBlitz3.ab3@13717>   MOVE.w #$C315,D1
0002B69A <AmiBlitz3.ab3@13718>    BSR.w Atokejsr
0002B69C <AmiBlitz3.ab3@13719>   MOVEA.l (A7)+,A2
0002B6A0 <AmiBlitz3.ab3@13722>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B6A4 <AmiBlitz3.ab3@13724>    BSR.w writeword
0002B6A8 <AmiBlitz3.ab3@13725>  BRA.w 'normalar
0002B6AA <AmiBlitz3.ab3@13728>  'listoff:   Ds.w 1
0002B6B0 <AmiBlitz3.ab3@13731>   CLR.w 'listoff
0002B6B6 <AmiBlitz3.ab3@13732>   BTST #$0,$6(A3)
0002B6BA <AmiBlitz3.ab3@13733>    BEQ.w 'knop
0002B6C2 <AmiBlitz3.ab3@13734>   MOVE.w #$0008,'listoff                            ;adjust size of one element if list.
0002B6C6 <AmiBlitz3.ab3@13737>   MOVEM.l A2-A3,-(A7)
0002B6CC <AmiBlitz3.ab3@13738>   MOVE.w varmode,-(A7)
0002B6D0 <AmiBlitz3.ab3@13739>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B6D4 <AmiBlitz3.ab3@13740>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B6D6 <AmiBlitz3.ab3@13741>   MOVE.l A2,-(A7)
0002B6DC <AmiBlitz3.ab3@13742>   MOVE.w flagmask,-(A7)
0002B6E6 <AmiBlitz3.ab3@13744>   MOVE.w oldqflag,instringon
0002B6EC <AmiBlitz3.ab3@13745>   MOVEA.l lastsourcepos,A5
0002B6F0 <AmiBlitz3.ab3@13746>    BSR.w arreval
0002B6F6 <AmiBlitz3.ab3@13747>   MOVE.w (A7)+,flagmask
0002B6FE <AmiBlitz3.ab3@13748>   MOVE.w $8(A7),varmode
0002B704 <AmiBlitz3.ab3@13749>   TST.b debugmode
0002B708 <AmiBlitz3.ab3@13750>    BEQ.w 'noszchk
0002B70A <AmiBlitz3.ab3@13754>   MOVEA.l (A7)+,A2
0002B70C <AmiBlitz3.ab3@13755>   MOVEQ.l #$04,D1
0002B714 <AmiBlitz3.ab3@13756>   BTST #$0,flagmask+1                                      ;pointer?
0002B718 <AmiBlitz3.ab3@13757>    BNE.b 'domul                                          ;yes, then use 4 byte mul...
0002B71C <AmiBlitz3.ab3@13758>   MOVE.w $8(A2),D1
0002B720 <AmiBlitz3.ab3@13761>   ADD.w 'listoff(PC),D1
0002B724 <AmiBlitz3.ab3@13762>   BSR.w muld1
0002B72A <AmiBlitz3.ab3@13763>   ADDQ.w #1,regnum
0002B72C <AmiBlitz3.ab3@13766>   ADDQ.w #4,(A7)
0002B730 <AmiBlitz3.ab3@13767>   TST.w $4(A7)
0002B734 <AmiBlitz3.ab3@13768>    BEQ.w 'isglob
0002B736 <AmiBlitz3.ab3@13769>   SUBQ.w #8,(A7)                                           ;range check local array
0002B73C <AmiBlitz3.ab3@13772>   TST.b debugmode
0002B740 <AmiBlitz3.ab3@13773>    BEQ.w 'noer1
0002B746 <AmiBlitz3.ab3@13774>   MOVE.w regnum,D1
0002B748 <AmiBlitz3.ab3@13775>   SUBQ.w #1,D1
0002B74A <AmiBlitz3.ab3@13776>   LSL.w #8,D1
0002B74C <AmiBlitz3.ab3@13777>   LSL.w #1,D1
0002B750 <AmiBlitz3.ab3@13778>   OR.w zarrchk(PC),D1
0002B754 <AmiBlitz3.ab3@13779>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B756 <AmiBlitz3.ab3@13780>   MOVE.w (A7),D1
0002B75A <AmiBlitz3.ab3@13781>    BSR.w writeword
0002B75E <AmiBlitz3.ab3@13782>   MOVE.l arrchk2(PC),D1
0002B762 <AmiBlitz3.ab3@13783>    BSR.w writelong
0002B766 <AmiBlitz3.ab3@13784>   MOVE.w #$C309,D1
0002B76A <AmiBlitz3.ab3@13785>    BSR.w Atokejsr
0002B76E <AmiBlitz3.ab3@13788>   SUBQ.w #1,$2(A7)
0002B772 <AmiBlitz3.ab3@13789>    BEQ.w 'ardone
0002B776 <AmiBlitz3.ab3@13790>   CMP.w #$2C,D0
0002B77A <AmiBlitz3.ab3@13791>    BNE.w syntaxerr
0002B780 <AmiBlitz3.ab3@13792>    TST.b fast
0002B784 <AmiBlitz3.ab3@13793>    BNE 'l1
0002B788 <AmiBlitz3.ab3@13794>    BSR.w arrevalchk
0002B78C <AmiBlitz3.ab3@13795>  BRA 'l2
0002B790 <AmiBlitz3.ab3@13798>   BSR arreval
0002B798 <AmiBlitz3.ab3@13801>   MOVE.w $4(A7),varmode
0002B79C <AmiBlitz3.ab3@13802>   BSR.w makeamul
0002B7A0 <AmiBlitz3.ab3@13803>  BRA.w 'arloop
0002B7A4 <AmiBlitz3.ab3@13806>   CMP.w #$29,D0
0002B7A8 <AmiBlitz3.ab3@13807>    BNE.w syntaxerr
0002B7AE <AmiBlitz3.ab3@13808>   SUBQ.w #1,regnum
0002B7B0 <AmiBlitz3.ab3@13809>   ADDQ.w #6,A7
0002B7B4 <AmiBlitz3.ab3@13810>   MOVEM.l (A7)+,A2-A3
0002B7BC <AmiBlitz3.ab3@13811>   MOVE.w $4(A3),movea5a0+2
0002B7C2 <AmiBlitz3.ab3@13812>   MOVE.l movea5a0,D1
0002B7C6 <AmiBlitz3.ab3@13813>    BSR.w pokela5s
0002B7CC <AmiBlitz3.ab3@13814>   MOVE.w regnum,D1
0002B7D0 <AmiBlitz3.ab3@13815>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B7D4 <AmiBlitz3.ab3@13816>    BSR.w writeword
0002B7DA <AmiBlitz3.ab3@13817>   BTST #$0,$6(A3)
0002B7DE <AmiBlitz3.ab3@13818>    BEQ.w 'normalar
0002B7E2 <AmiBlitz3.ab3@13822>   MOVE.w listarfix(PC),D1
0002B7E6 <AmiBlitz3.ab3@13823>    BSR.w writeword
0002B7EA <AmiBlitz3.ab3@13826>   BSR.w get1bytemain
0002B7F0 <AmiBlitz3.ab3@13830>   BTST #$0,$7(A3)
0002B7F4 <AmiBlitz3.ab3@13831>    BEQ.w 'noppnt
0002B7F8 <AmiBlitz3.ab3@13832>   CMP.w #$5C,D0
0002B7FC <AmiBlitz3.ab3@13833>    BNE.w 'pmskip
0002B800 <AmiBlitz3.ab3@13834>   MOVE.w 'pfix(PC),D1
0002B804 <AmiBlitz3.ab3@13835>    BSR.w writeword
0002B808 <AmiBlitz3.ab3@13838>   MOVE.w #$8000,D2
0002B80C <AmiBlitz3.ab3@13839>  BRA.w 'loopml
0002B810 <AmiBlitz3.ab3@13842>   MOVE.w #$C000,D2
0002B814 <AmiBlitz3.ab3@13843>  BRA.w 'loopml
0002B816 <AmiBlitz3.ab3@13846>  'pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B81A <AmiBlitz3.ab3@13851>   CMP.w #$28,D0
0002B81E <AmiBlitz3.ab3@13852>    BEQ.w noarrerr
0002B826 <AmiBlitz3.ab3@13853>   CMPI.l #$100,$4(A2)
0002B82A <AmiBlitz3.ab3@13854>    BCS.w 'simpvar
0002B830 <AmiBlitz3.ab3@13855>   BTST #$0,$7(A3)
0002B834 <AmiBlitz3.ab3@13856>    BEQ.w 'notap
0002B838 <AmiBlitz3.ab3@13860>   CMP.w #$5C,D0
0002B83C <AmiBlitz3.ab3@13861>    BEQ.w 'notap
0002B83E <AmiBlitz3.ab3@13862>   MOVEQ.l #$00,D2
0002B842 <AmiBlitz3.ab3@13863>  BRA.w 'simpvar2
0002B846 <AmiBlitz3.ab3@13866>   MOVE.w #$8000,D2
0002B84E <AmiBlitz3.ab3@13867>   MOVE.w $4(A3),movea5a0+2
0002B854 <AmiBlitz3.ab3@13868>   MOVE.l movea5a0,D1
0002B858 <AmiBlitz3.ab3@13869>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B85E <AmiBlitz3.ab3@13871>    TST.b debugmode
0002B862 <AmiBlitz3.ab3@13872>    BEQ.w 'skip
0002B866 <AmiBlitz3.ab3@13873>    MOVE.w #$c320,D1
0002B86C <AmiBlitz3.ab3@13874>    JSR Atokejsr
0002B86E <AmiBlitz3.ab3@13878>   MOVEQ.l #$00,D3
0002B872 <AmiBlitz3.ab3@13881>   CMP.w #$5C,D0
0002B876 <AmiBlitz3.ab3@13882>    BNE.w 'done
0002B87E <AmiBlitz3.ab3@13883>   CMPI.l #$100,$4(A2)
0002B882 <AmiBlitz3.ab3@13884>    BCS.w rongtypeerr
0002B884 <AmiBlitz3.ab3@13885>   MOVE.w D2,-(A7)
0002B888 <AmiBlitz3.ab3@13886>    BSR.w getparameter2
0002B88C <AmiBlitz3.ab3@13887>    BEQ.w syntaxerr
0002B88E <AmiBlitz3.ab3@13888>   ADDQ.w #4,A2
0002B892 <AmiBlitz3.ab3@13889>    BSR.w findvariable2
0002B896 <AmiBlitz3.ab3@13890>    BNE.w noofferr
0002B898 <AmiBlitz3.ab3@13891>   MOVE.w (A7)+,D2
0002B89A <AmiBlitz3.ab3@13892>   MOVEA.l A2,A3                                             ;pointer to offset
0002B89E <AmiBlitz3.ab3@13893>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B8A0 <AmiBlitz3.ab3@13894>   MOVEQ #0,d1
0002B8A4 <AmiBlitz3.ab3@13895>   MOVE.w 4(a3),d1
0002B8A6 <AmiBlitz3.ab3@13896>   ADD.l d1,d3
0002B8AC <AmiBlitz3.ab3@13898>   MOVE.l A3,lastoffset_org
0002B8B0 <AmiBlitz3.ab3@13899>   CMP.w #$5B,D0
0002B8B4 <AmiBlitz3.ab3@13900>    BNE.w 'realdone
0002B8BA <AmiBlitz3.ab3@13901>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B8BE <AmiBlitz3.ab3@13902>    BEQ.w rongtypeerr
0002B8C2 <AmiBlitz3.ab3@13903>    BSR.w addd0a0
0002B8C6 <AmiBlitz3.ab3@13904>   MOVEM.l A2-A3,-(A7)
0002B8CC <AmiBlitz3.ab3@13905>   MOVE.w varmode,-(A7)
0002B8D2 <AmiBlitz3.ab3@13906>   MOVE.l lastoffset_org,-(A7)
0002B8D8 <AmiBlitz3.ab3@13907>   MOVE.w pusha2,D1
0002B8DC <AmiBlitz3.ab3@13908>   BSR.w writeword
0002B8DE <AmiBlitz3.ab3@13909>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B8E8 <AmiBlitz3.ab3@13910>   MOVE.l destpointer,deststore
0002B8EE <AmiBlitz3.ab3@13911>   MOVE.l leftsidetype,-(a7)
0002B8F4 <AmiBlitz3.ab3@13912>   MOVE.l rightsidetype,-(a7)
0002B8FA <AmiBlitz3.ab3@13914>   MOVE.w leftsideflagmask,-(a7)
0002B900 <AmiBlitz3.ab3@13915>   MOVE.w rightsideflagmask,-(a7)
0002B906 <AmiBlitz3.ab3@13916>   CLR.l rightsidetype
0002B90C <AmiBlitz3.ab3@13917>   CLR.l leftsidetype
0002B912 <AmiBlitz3.ab3@13918>   CLR.w leftsideflagmask
0002B918 <AmiBlitz3.ab3@13919>   CLR.w rightsideflagmask
0002B91C <AmiBlitz3.ab3@13920>   BSR.w eval
0002B922 <AmiBlitz3.ab3@13921>   MOVE.w (a7)+,rightsideflagmask
0002B928 <AmiBlitz3.ab3@13922>   MOVE.w (a7)+,leftsideflagmask
0002B92E <AmiBlitz3.ab3@13923>   MOVE.l (a7)+,rightsidetype
0002B934 <AmiBlitz3.ab3@13924>   MOVE.l (a7)+,leftsidetype
0002B938 <AmiBlitz3.ab3@13925>   CMP.w #$5D,D0
0002B93C <AmiBlitz3.ab3@13926>    BNE.w syntaxerr
0002B942 <AmiBlitz3.ab3@13927>   TST.b fast                                               ;a2,-(a7) array
0002B946 <AmiBlitz3.ab3@13928>   BEQ 'loop0_l10
0002B94C <AmiBlitz3.ab3@13934>   MOVE.l destpointer,d1
0002B952 <AmiBlitz3.ab3@13935>   SUB.l deststore,d1
0002B958 <AmiBlitz3.ab3@13936>   CMP.l #4,d1
0002B95C <AmiBlitz3.ab3@13937>   BNE 'loop0_l10
0002B962 <AmiBlitz3.ab3@13938>   MOVE.l destpointer,a4
0002B968 <AmiBlitz3.ab3@13939>   MOVE.l -4(a4),-6(a4)
0002B96E <AmiBlitz3.ab3@13940>   SUBQ.l #2,destpointer
0002B974 <AmiBlitz3.ab3@13941>   CLR.l imm_addr
0002B97A <AmiBlitz3.ab3@13942>   CLR.l load_var_addr
0002B97E <AmiBlitz3.ab3@13943>  BRA 'loop0_l20
0002B984 <AmiBlitz3.ab3@13946>   MOVE.w pulla2,D1
0002B988 <AmiBlitz3.ab3@13947>    BSR.w writeword
0002B98E <AmiBlitz3.ab3@13950>   MOVE.l (A7)+,lastoffset_org
0002B994 <AmiBlitz3.ab3@13951>   MOVE.w (A7)+,varmode
0002B998 <AmiBlitz3.ab3@13952>   MOVEM.l (A7)+,A2-A3
0002B99E <AmiBlitz3.ab3@13958>   TST.w debugmode
0002B9A2 <AmiBlitz3.ab3@13959>    BEQ.b 'nobchk
0002B9A6 <AmiBlitz3.ab3@13960>   MOVE.w $8(A3),D1
0002B9AA <AmiBlitz3.ab3@13961>    BEQ.b 'nobchk                                   ;no [0] checks!
0002B9B0 <AmiBlitz3.ab3@13965>   MOVE.w D1,brchkcode+2
0002B9B6 <AmiBlitz3.ab3@13966>   MOVE.w regnum,D1
0002B9B8 <AmiBlitz3.ab3@13967>   LSL.w #8,D1
0002B9BA <AmiBlitz3.ab3@13968>   LSL.w #1,D1
0002B9BE <AmiBlitz3.ab3@13969>   OR.w brchkcode0(PC),D1
0002B9C4 <AmiBlitz3.ab3@13970>   MOVE.w D1,brchkcode
0002B9C8 <AmiBlitz3.ab3@13971>   MOVE.l brchkcode(PC),D1
0002B9CC <AmiBlitz3.ab3@13972>    BSR.w writelong
0002B9D0 <AmiBlitz3.ab3@13973>   MOVE.l brchkcode+4(PC),D1
0002B9D4 <AmiBlitz3.ab3@13974>    BSR.w writelong
0002B9D8 <AmiBlitz3.ab3@13975>   MOVE.w brchkcode+8(PC),D1
0002B9DC <AmiBlitz3.ab3@13976>    BSR.w writeword
0002B9DE <AmiBlitz3.ab3@13979>   MOVEQ.l #$04,D1
0002B9E4 <AmiBlitz3.ab3@13980>   BTST #$0,$7(A3)
0002B9E8 <AmiBlitz3.ab3@13981>    BNE.w 'dothemul
0002B9EC <AmiBlitz3.ab3@13982>   MOVE.w $8(A2),D1
0002B9F0 <AmiBlitz3.ab3@13985>   BSR.w muld1
0002B9F6 <AmiBlitz3.ab3@13986>   MOVE.w addrega2,D1
0002B9FC <AmiBlitz3.ab3@13987>   OR.w regnum,D1
0002BA00 <AmiBlitz3.ab3@13988>    OR.w #$100,d1                                           ;>32kb types
0002BA04 <AmiBlitz3.ab3@13989>    BSR.w writeword
0002BA08 <AmiBlitz3.ab3@13990>    BSR.w get1bytemain
0002BA0A <AmiBlitz3.ab3@13991>   MOVEQ.l #$00,D3
0002BA0E <AmiBlitz3.ab3@13992>   MOVE.w #$8000,D2
0002BA14 <AmiBlitz3.ab3@13995>   BTST #$0,$7(A3)
0002BA18 <AmiBlitz3.ab3@13996>    BNE.w 'pointer
0002BA1C <AmiBlitz3.ab3@13997>  BRA.w 'loop0
0002BA20 <AmiBlitz3.ab3@14000>  CMP.w #$5C,D0
0002BA24 <AmiBlitz3.ab3@14001>    BNE.w 'done3
0002BA26 <AmiBlitz3.ab3@14002>   TST.w D3
0002BA2A <AmiBlitz3.ab3@14003>    BNE.w 'pskip
0002BA30 <AmiBlitz3.ab3@14004>   MOVE.w movea0,D1
0002BA34 <AmiBlitz3.ab3@14005>    BSR.w writeword
0002BA38 <AmiBlitz3.ab3@14006>  BRA.w 'pmore
0002BA3E <AmiBlitz3.ab3@14009>   MOVE.w D3,movea0a0+2
0002BA44 <AmiBlitz3.ab3@14010>   MOVE.l movea0a0,D1
0002BA48 <AmiBlitz3.ab3@14011>    BSR.w writelong
0002BA4E <AmiBlitz3.ab3@14014>   BTST #$2,$7(A3)
0002BA52 <AmiBlitz3.ab3@14015>    BEQ.w 'loopml
0002BA58 <AmiBlitz3.ab3@14016>   MOVE.l adda0a0,D1
0002BA5C <AmiBlitz3.ab3@14017>    BSR.w writelong
0002BA60 <AmiBlitz3.ab3@14018>  BRA.w 'loopml
0002BA64 <AmiBlitz3.ab3@14021>   BSET #$E,D2
0002BA6A <AmiBlitz3.ab3@14022>   BTST #$2,$7(A3)
0002BA6E <AmiBlitz3.ab3@14023>    BNE.w 'done
0002BA72 <AmiBlitz3.ab3@14024>   BSET #$D,D2
0002BA7A <AmiBlitz3.ab3@14027>   CMPI.l #$100,$4(A2)
0002BA7E <AmiBlitz3.ab3@14028>    BCC.w 'done2
0002BA82 <AmiBlitz3.ab3@14029>   MOVE.b $7(A2),D2
0002BA86 <AmiBlitz3.ab3@14032>  BRA.w addd0a0
0002BA8A <AmiBlitz3.ab3@14035>   MOVE.w $6(A2),D2
0002BA8E <AmiBlitz3.ab3@14038>   MOVE.w $4(A3),D3
0002BA94 <AmiBlitz3.ab3@14039>   BTST #$0,$7(A3)
0002BA98 <AmiBlitz3.ab3@14040>    BEQ.w 'nopoint
0002BA9C <AmiBlitz3.ab3@14041>   BSET #$E,D2
0002BA9E <AmiBlitz3.ab3@14044> RTS
0002BAA2 <AmiBlitz3.ab3@14048> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002BAA6 <AmiBlitz3.ab3@14049> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002BAA8 <AmiBlitz3.ab3@14050>              Dc.b $65,$04                                  ;BCS.B   brchkcode_ok
0002BAAA <AmiBlitz3.ab3@14051>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002BAAC <AmiBlitz3.ab3@14052>              Dc.b $4E,$40                                  ;TRAP    #00
0002BAB2 <AmiBlitz3.ab3@14060>   TST.w varmode
0002BAB6 <AmiBlitz3.ab3@14061>    BEQ.w writeword
0002BABA <AmiBlitz3.ab3@14062>   BCLR #$0,D1
0002BABE <AmiBlitz3.ab3@14063> BRA.w writeword
0002BAC4 <AmiBlitz3.ab3@14066>   TST.w varmode
0002BAC8 <AmiBlitz3.ab3@14067>    BEQ.w writeword
0002BACC <AmiBlitz3.ab3@14068>   BCLR #$9,D1
0002BAD0 <AmiBlitz3.ab3@14069> BRA.w writeword
0002BAD6 <AmiBlitz3.ab3@14072>   TST.w proceduremode
0002BADA <AmiBlitz3.ab3@14073>    BEQ.w writelong
0002BADE <AmiBlitz3.ab3@14074>   BCLR #$19,D1
0002BAE2 <AmiBlitz3.ab3@14075> BRA.w writelong
0002BAE8 <AmiBlitz3.ab3@14078>   TST.w varmode
0002BAEC <AmiBlitz3.ab3@14079>   BEQ.w writelong
0002BAF0 <AmiBlitz3.ab3@14080>   BCLR #$10,D1
0002BAF6 <AmiBlitz3.ab3@14088>   ADDQ.l #1,destpointer                                   ; this is a copy of the writewordcode
0002BAFE <AmiBlitz3.ab3@14089>   BCLR #$0,destpointer+3
0002BB04 <AmiBlitz3.ab3@14090>   MOVEA.l destpointer,A4
0002BB0A <AmiBlitz3.ab3@14091>   CMPA.l destbufferend,A4
0002BB0E <AmiBlitz3.ab3@14092>    BCC.w 'overa
0002BB10 <AmiBlitz3.ab3@14093>   MOVE.l D1,(A4)+
0002BB16 <AmiBlitz3.ab3@14096>   MOVE.l A4,destpointer
0002BB1A <AmiBlitz3.ab3@14097>   CMPA.l bigpc(PC),A4
0002BB1E <AmiBlitz3.ab3@14098>    BHI.w 'nbpa
0002BB20 <AmiBlitz3.ab3@14099>  RTS
0002BB26 <AmiBlitz3.ab3@14102>   TST.w cfetchmode                                         ; to complete the subroutine
0002BB2A <AmiBlitz3.ab3@14103>   BNE.w 'nbp2a                                             ;
0002BB30 <AmiBlitz3.ab3@14104>   MOVE.l A4,bigpc                                          ;
0002BB32 <AmiBlitz3.ab3@14107>  RTS
0002BB3A <AmiBlitz3.ab3@14110>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BB40 <AmiBlitz3.ab3@14111>   CLR.b fast
0002BB46 <AmiBlitz3.ab3@14112>   CLR.b fpu
0002BB4C <AmiBlitz3.ab3@14113>   CLR.b iee                                                ; in writeword this is #2
0002BB4E <AmiBlitz3.ab3@14114>   ADDQ.w #4,A4
0002BB52 <AmiBlitz3.ab3@14115> BRA.w 'msa
0002BB58 <AmiBlitz3.ab3@14134>   ADDQ.l #1,destpointer
0002BB60 <AmiBlitz3.ab3@14135>   BCLR #$0,destpointer+3
0002BB66 <AmiBlitz3.ab3@14136>   MOVEA.l destpointer,A4
0002BB6C <AmiBlitz3.ab3@14137>   CMPA.l destbufferend,A4
0002BB70 <AmiBlitz3.ab3@14138>    BCC.w 'over
0002BB72 <AmiBlitz3.ab3@14139>   MOVE.w D1,(A4)+
0002BB78 <AmiBlitz3.ab3@14142>   MOVE.l A4,destpointer
0002BB7C <AmiBlitz3.ab3@14143>   CMPA.l bigpc(PC),A4
0002BB80 <AmiBlitz3.ab3@14144>    BHI.w 'nbp
0002BB82 <AmiBlitz3.ab3@14145>  RTS
0002BB88 <AmiBlitz3.ab3@14148>   TST.w cfetchmode
0002BB8C <AmiBlitz3.ab3@14149>   BNE.w 'nbp2
0002BB92 <AmiBlitz3.ab3@14150>   MOVE.l A4,bigpc
0002BB94 <AmiBlitz3.ab3@14153>  RTS
0002BB9C <AmiBlitz3.ab3@14156>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BB9E <AmiBlitz3.ab3@14157>   ADDQ.w #2,A4
0002BBA4 <AmiBlitz3.ab3@14158>   CLR.b fast
0002BBAA <AmiBlitz3.ab3@14159>   CLR.b fpu
0002BBB0 <AmiBlitz3.ab3@14160>   CLR.b iee
0002BBB4 <AmiBlitz3.ab3@14161> BRA.w 'ms
0002BBBA <AmiBlitz3.ab3@14165>   MOVEA.l destpointer,A4
0002BBC0 <AmiBlitz3.ab3@14166>   CMPA.l destbufferend,A4
0002BBC4 <AmiBlitz3.ab3@14167>    BCC.w 'over
0002BBC6 <AmiBlitz3.ab3@14168>   MOVE.b D1,(A4)+
0002BBCC <AmiBlitz3.ab3@14171>   MOVE.l A4,destpointer
0002BBD0 <AmiBlitz3.ab3@14172>   CMPA.l bigpc(PC),A4
0002BBD4 <AmiBlitz3.ab3@14173>    BHI.w 'nbp
0002BBD6 <AmiBlitz3.ab3@14174>  RTS
0002BBDC <AmiBlitz3.ab3@14177>   TST.w cfetchmode
0002BBE0 <AmiBlitz3.ab3@14178>    BNE.w 'nbp2
0002BBE6 <AmiBlitz3.ab3@14179>   MOVE.l A4,bigpc
0002BBE8 <AmiBlitz3.ab3@14182>  RTS
0002BBF0 <AmiBlitz3.ab3@14185>   MOVE.w #-1,dontwrite_nomemleft
0002BBF2 <AmiBlitz3.ab3@14186>   ADDQ.w #1,A4
0002BBF8 <AmiBlitz3.ab3@14187>   CLR.b fast
0002BBFE <AmiBlitz3.ab3@14188>   CLR.b fpu
0002BC04 <AmiBlitz3.ab3@14189>   CLR.b iee
0002BC08 <AmiBlitz3.ab3@14190> BRA.w 'ms
0002BC0C <AmiBlitz3.ab3@14193> bigpc:   Ds.l 1
0002BC0E <AmiBlitz3.ab3@14197>   MOVE.w (A0)+,D1
0002BC12 <AmiBlitz3.ab3@14198>   BSR.w writeword
0002BC14 <AmiBlitz3.ab3@14201>     CMPA.l A1,A0
0002BC18 <AmiBlitz3.ab3@14202>     BCC.w 'done
0002BC1A <AmiBlitz3.ab3@14203>       MOVE.w (A0)+,D1
0002BC1E <AmiBlitz3.ab3@14204>       BSR.w writeword
0002BC22 <AmiBlitz3.ab3@14205>  BRA.w 'loop
0002BC24 <AmiBlitz3.ab3@14208> RTS
0002BC26 <AmiBlitz3.ab3@14212>   MOVE.w (A0)+,D1
0002BC2A <AmiBlitz3.ab3@14213>   BSR.w writeword
0002BC2C <AmiBlitz3.ab3@14214>   CMPA.l A1,A0
0002BC30 <AmiBlitz3.ab3@14215>   BCS.w pokecode2
0002BC32 <AmiBlitz3.ab3@14216> RTS
0002BC38 <AmiBlitz3.ab3@14223>   TST.b iniffcommand
0002BC3C <AmiBlitz3.ab3@14224>   BEQ 'l1
0002BC40 <AmiBlitz3.ab3@14225>     MOVE.w #$4880,D1
0002BC46 <AmiBlitz3.ab3@14226>     OR.w regnum,D1
0002BC4A <AmiBlitz3.ab3@14227>     BSR writeword
0002BC4C <AmiBlitz3.ab3@14231> RTS
0002BC50 <AmiBlitz3.ab3@14237>   BSR.w convert_byte_to_word
0002BC56 <AmiBlitz3.ab3@14241>   TST.b iee
0002BC5A <AmiBlitz3.ab3@14242>   BEQ 'old
0002BC5E <AmiBlitz3.ab3@14243>   CMP.b #5,d2
0002BC62 <AmiBlitz3.ab3@14244>   BEQ wtof
0002BC66 <AmiBlitz3.ab3@14248>   MOVE.w #$48C0,D1
0002BC6C <AmiBlitz3.ab3@14249>   OR.w regnum,D1
0002BC70 <AmiBlitz3.ab3@14250> BRA.w writeword
0002BC72 <AmiBlitz3.ab3@14254>   MOVEQ #0,d0
0002BC78 <AmiBlitz3.ab3@14255>   MOVE.w regnum,d0
0002BC7A <AmiBlitz3.ab3@14256>   ASL.l #7,d0
0002BC80 <AmiBlitz3.ab3@14257>   MOVE.l #$f2005000,d1
0002BC82 <AmiBlitz3.ab3@14258>   OR.l d0,d1
0002BC84 <AmiBlitz3.ab3@14259>   ASL.l #1,d0
0002BC86 <AmiBlitz3.ab3@14260>   ASL.l #8,d0
0002BC88 <AmiBlitz3.ab3@14261>   OR.l d0,d1
0002BC8C <AmiBlitz3.ab3@14262> BRA writelong
0002BC90 <AmiBlitz3.ab3@14266>   BSR.w convert_byte_to_word
0002BC94 <AmiBlitz3.ab3@14269>   MOVE.w #$4840,D1
0002BC9A <AmiBlitz3.ab3@14270>   OR.w regnum,D1
0002BC9E <AmiBlitz3.ab3@14271>    BSR.w writeword
0002BCA2 <AmiBlitz3.ab3@14272>   MOVE.w #$4240,D1
0002BCA8 <AmiBlitz3.ab3@14273>   OR.w regnum,D1
0002BCAC <AmiBlitz3.ab3@14274> BRA.w writeword
0002BCB0 <AmiBlitz3.ab3@14278>   CMP.w #$ffdc,d1
0002BCB4 <AmiBlitz3.ab3@14279>   BNE 'negfpu
0002BCB6 <AmiBlitz3.ab3@14280>   MOVEQ #0,d0
0002BCBC <AmiBlitz3.ab3@14281>   MOVE.w regnum,d0
0002BCBE <AmiBlitz3.ab3@14282>   ASL.l #7,d0
0002BCC4 <AmiBlitz3.ab3@14283>   MOVE.l #$f2004000,d1
0002BCC6 <AmiBlitz3.ab3@14284>   OR.l d0,d1
0002BCC8 <AmiBlitz3.ab3@14285>   ASL.l #1,d0
0002BCCA <AmiBlitz3.ab3@14286>   ASL.l #8,d0
0002BCCC <AmiBlitz3.ab3@14287>   OR.l d0,d1
0002BCD0 <AmiBlitz3.ab3@14288>  BRA writelong
0002BCD2 <AmiBlitz3.ab3@14291>   MOVEQ #0,d1
0002BCD8 <AmiBlitz3.ab3@14292>   MOVE.w regnum,d1                                         ;fpu neg
0002BCDA <AmiBlitz3.ab3@14293>   ASL.l #7,d1
0002BCE0 <AmiBlitz3.ab3@14294>   OR.l #$f200001a,d1
0002BCE2 <AmiBlitz3.ab3@14295>   MOVE.l d0,-(a7)
0002BCE4 <AmiBlitz3.ab3@14296>   MOVEQ #0,d0
0002BCEA <AmiBlitz3.ab3@14297>   MOVE.w regnum,d0
0002BCEC <AmiBlitz3.ab3@14298>   ASL.l #8,d0
0002BCEE <AmiBlitz3.ab3@14299>   ASL.l #2,d0
0002BCF0 <AmiBlitz3.ab3@14300>   OR.l d0,d1
0002BCF2 <AmiBlitz3.ab3@14301>   MOVE.l (a7)+,d0
0002BCF6 <AmiBlitz3.ab3@14302> BRA writelong
0002BCFC <AmiBlitz3.ab3@14308>    TST.b iee
0002BD00 <AmiBlitz3.ab3@14309>    BNE wtof
0002BD04 <AmiBlitz3.ab3@14311>    BSR.w convert_byte_to_long
0002BD08 <AmiBlitz3.ab3@14314>    MOVE.w #$FFDC,D1
0002BD0E <AmiBlitz3.ab3@14318>    TST.b iee
0002BD12 <AmiBlitz3.ab3@14319>    BNE ltof
0002BD18 <AmiBlitz3.ab3@14321>    MOVE.w D1,libjsr+2
0002BD1C <AmiBlitz3.ab3@14322>    BSR.w savereg
0002BD1E <AmiBlitz3.ab3@14323>   MOVE.l D4,D1
0002BD22 <AmiBlitz3.ab3@14324>    BSR.w pokemovem
0002BD26 <AmiBlitz3.ab3@14325>   MOVE.w #$C900,D1      ; #getffpbase,
0002BD2A <AmiBlitz3.ab3@14326>    BSR.w Atokejsr
0002BD2E <AmiBlitz3.ab3@14327>    BSR.w ritetod0
0002BD34 <AmiBlitz3.ab3@14328>   MOVE.l libjsr,D1
0002BD38 <AmiBlitz3.ab3@14329>    BSR.w writelong
0002BD3C <AmiBlitz3.ab3@14330>    BSR.w ritefromd0
0002BD3E <AmiBlitz3.ab3@14331>   MOVE.l D5,D1
0002BD42 <AmiBlitz3.ab3@14332> BRA.w pokemovem
0002BD44 <AmiBlitz3.ab3@14334> RTS ; dead old code
0002BD48 <AmiBlitz3.ab3@14337>   MOVE.w #$C317,D1     ;#wtobover
0002BD4E <AmiBlitz3.ab3@14339>   TST.b typecheck
0002BD52 <AmiBlitz3.ab3@14340>   BEQ 'l1
0002BD58 <AmiBlitz3.ab3@14341>    TST.b notypecheck
0002BD5C <AmiBlitz3.ab3@14342>    BNE 'l1
0002BD62 <AmiBlitz3.ab3@14343>    TST.l lasttoken
0002BD68 <AmiBlitz3.ab3@14353>   TST.b debugmode
0002BD6C <AmiBlitz3.ab3@14354>    BEQ.w 'skip
0002BD74 <AmiBlitz3.ab3@14355>   BTST #$7,overflowcheck      ;;*** was 7! overflow checking?
0002BD78 <AmiBlitz3.ab3@14356>    BEQ.w 'skip
0002BD7E <AmiBlitz3.ab3@14358>   TST.w cfetchmode
0002BD82 <AmiBlitz3.ab3@14359>    BNE.w 'skip
0002BD88 <AmiBlitz3.ab3@14361>   TST.w regnum
0002BD8C <AmiBlitz3.ab3@14362>    BEQ.w 'isok
0002BD8E <AmiBlitz3.ab3@14363>   MOVE.w D1,-(A7)
0002BD92 <AmiBlitz3.ab3@14364>   MOVE.w 'code1(PC),D1
0002BD96 <AmiBlitz3.ab3@14365>    BSR.w writeword
0002BD9C <AmiBlitz3.ab3@14366>   MOVE.w regnum,D1
0002BDA0 <AmiBlitz3.ab3@14367>   OR.w 'code3(PC),D1
0002BDA4 <AmiBlitz3.ab3@14368>    BSR.w writeword
0002BDA6 <AmiBlitz3.ab3@14369>   MOVE.w (A7)+,D1
0002BDAA <AmiBlitz3.ab3@14370>    BSR.w 'isok
0002BDAE <AmiBlitz3.ab3@14371>   MOVE.w 'code2(PC),D1
0002BDB2 <AmiBlitz3.ab3@14372>  BRA.w writeword
0002BDB6 <AmiBlitz3.ab3@14375>   MOVEM.l D0-D7/A0-A6,-(A7)
0002BDBA <AmiBlitz3.ab3@14376>    BSR.w Atokejsr
0002BDBE <AmiBlitz3.ab3@14377>   MOVEM.l (A7)+,D0-D7/A0-A6
0002BDC0 <AmiBlitz3.ab3@14380>  RTS
0002BDC2 <AmiBlitz3.ab3@14383>   MOVE.l D0,-(A7)
0002BDC4 <AmiBlitz3.ab3@14386>   MOVE.l (A7)+,D0
0002BDC6 <AmiBlitz3.ab3@14389>   MOVE.l D0,D0
0002BDCA <AmiBlitz3.ab3@14394>   BSR.w convert_word_to_long
0002BDD0 <AmiBlitz3.ab3@14396>   TST.b iee
0002BDD4 <AmiBlitz3.ab3@14397>   BEQ 'old
0002BDD8 <AmiBlitz3.ab3@14398>   CMP.b #5,d2
0002BDDC <AmiBlitz3.ab3@14399>   BNE 'old
0002BDDE <AmiBlitz3.ab3@14400>  RTS
0002BDE2 <AmiBlitz3.ab3@14404> BRA.w bytetof2
0002BDE6 <AmiBlitz3.ab3@14407>   MOVE.w #$C316,D1      ; #ltobover
0002BDEC <AmiBlitz3.ab3@14409>   TST.b typecheck
0002BDF0 <AmiBlitz3.ab3@14410>   BEQ 'l1
0002BDF6 <AmiBlitz3.ab3@14411>   TST.b peekaddrsize
0002BDFA <AmiBlitz3.ab3@14412>   BNE 'l1
0002BE00 <AmiBlitz3.ab3@14413>   TST.b notypecheck
0002BE04 <AmiBlitz3.ab3@14414>   BNE 'l1
0002BE0A <AmiBlitz3.ab3@14415>   TST.l lasttoken
0002BE0E <AmiBlitz3.ab3@14422> BRA.w overchk
0002BE12 <AmiBlitz3.ab3@14425>   MOVE.w #$C318,D1      ; #ltowover,
0002BE18 <AmiBlitz3.ab3@14427>   TST.b typecheck
0002BE1C <AmiBlitz3.ab3@14428>   BEQ 'l1
0002BE22 <AmiBlitz3.ab3@14429>   TST.b peekaddrsize
0002BE26 <AmiBlitz3.ab3@14430>   BNE 'l1
0002BE2C <AmiBlitz3.ab3@14431>   TST.b notypecheck
0002BE30 <AmiBlitz3.ab3@14432>   BNE 'l1
0002BE36 <AmiBlitz3.ab3@14433>   TST.l lasttoken
0002BE3A <AmiBlitz3.ab3@14440> BRA.w overchk
0002BE3E <AmiBlitz3.ab3@14443>   MOVE.w #$C318,D1      ;#ltowover,
0002BE44 <AmiBlitz3.ab3@14445>   TST.b typecheck
0002BE48 <AmiBlitz3.ab3@14446>   BEQ 'l1
0002BE4E <AmiBlitz3.ab3@14447>   TST.b notypecheck
0002BE52 <AmiBlitz3.ab3@14448>   BNE 'l1
0002BE58 <AmiBlitz3.ab3@14449>   TST.l lasttoken
0002BE5C <AmiBlitz3.ab3@14456>   BSR.w overchk
0002BE60 <AmiBlitz3.ab3@14457> BRA.w convert_word_to_quick
0002BE64 <AmiBlitz3.ab3@14460> BRA.w bytetof2
0002BE66 <AmiBlitz3.ab3@14462> RTS ; dead old code
0002BE6A <AmiBlitz3.ab3@14465>   MOVE.w #$C319,D1         ; #qtobover,
0002BE70 <AmiBlitz3.ab3@14467>   TST.b typecheck
0002BE74 <AmiBlitz3.ab3@14468>   BEQ 'l1
0002BE7A <AmiBlitz3.ab3@14469>   TST.b notypecheck
0002BE7E <AmiBlitz3.ab3@14470>   BNE 'l1
0002BE84 <AmiBlitz3.ab3@14471>   TST.l lasttoken
0002BE88 <AmiBlitz3.ab3@14478>   BSR.w overchk
0002BE8C <AmiBlitz3.ab3@14481>   MOVE.w #$4240,D1
0002BE92 <AmiBlitz3.ab3@14482>   OR.w regnum,D1
0002BE96 <AmiBlitz3.ab3@14483>   BSR.w writeword
0002BE9A <AmiBlitz3.ab3@14484>   MOVE.w #$4840,D1
0002BEA0 <AmiBlitz3.ab3@14485>   OR.w regnum,D1
0002BEA4 <AmiBlitz3.ab3@14486> BRA.w writeword
0002BEA8 <AmiBlitz3.ab3@14489> BRA.w quicktob2
0002BEAC <AmiBlitz3.ab3@14492>   BSR.w quicktob2
0002BEB0 <AmiBlitz3.ab3@14493> BRA.w convert_word_to_long
0002BEB2 <AmiBlitz3.ab3@14498>   MOVEQ #0,d0
0002BEB8 <AmiBlitz3.ab3@14499>   MOVE.w regnum,d0
0002BEBA <AmiBlitz3.ab3@14500>   ASL.l #7,d0
0002BEC0 <AmiBlitz3.ab3@14501>   MOVE.l #$f2004000,d1
0002BEC2 <AmiBlitz3.ab3@14502>   OR.l d0,d1
0002BEC4 <AmiBlitz3.ab3@14503>   ASL.l #1,d0
0002BEC6 <AmiBlitz3.ab3@14504>   ASL.l #8,d0
0002BEC8 <AmiBlitz3.ab3@14505>   OR.l d0,d1
0002BECC <AmiBlitz3.ab3@14506>   BSR writelong
0002BED2 <AmiBlitz3.ab3@14507>   MOVE.w regnum,d0
0002BED4 <AmiBlitz3.ab3@14508>   ASL.l #7,d0
0002BEDA <AmiBlitz3.ab3@14509>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002BEDC <AmiBlitz3.ab3@14510>   OR.w d0,d1
0002BEE0 <AmiBlitz3.ab3@14511>   BSR writelong
0002BEE6 <AmiBlitz3.ab3@14512>   MOVE.l #$37800000,d1
0002BEEA <AmiBlitz3.ab3@14513>   BSR writelong
0002BEEC <AmiBlitz3.ab3@14514> RTS
0002BEF2 <AmiBlitz3.ab3@14521>   TST.b iee
0002BEF6 <AmiBlitz3.ab3@14522>   BNE qtof
0002BEFA <AmiBlitz3.ab3@14524>   MOVE.w #$D300,D1       ; #qutofl,
0002BEFC <AmiBlitz3.ab3@14527>   MOVE.w D1,-(A7)
0002BF00 <AmiBlitz3.ab3@14528>    BSR.w savereg
0002BF02 <AmiBlitz3.ab3@14529>   MOVE.l D4,D1
0002BF06 <AmiBlitz3.ab3@14530>    BSR.w pokemovem
0002BF0A <AmiBlitz3.ab3@14532>    BSR.w ritetod0
0002BF0C <AmiBlitz3.ab3@14533>   MOVE.w (A7)+,D1
0002BF10 <AmiBlitz3.ab3@14534>    BSR.w Atokejsr
0002BF14 <AmiBlitz3.ab3@14536>    BSR.w ritefromd0
0002BF16 <AmiBlitz3.ab3@14537>   MOVE.l D5,D1
0002BF1A <AmiBlitz3.ab3@14538> BRA.w pokemovem
0002BF1C <AmiBlitz3.ab3@14540> RTS ; dead old code
0002BF22 <AmiBlitz3.ab3@14544>   TST.b typecheck
0002BF26 <AmiBlitz3.ab3@14545>   BEQ 'l1
0002BF2C <AmiBlitz3.ab3@14546>   TST.b notypecheck
0002BF30 <AmiBlitz3.ab3@14547>   BNE 'l1
0002BF36 <AmiBlitz3.ab3@14548>   TST.l lasttoken
0002BF3C <AmiBlitz3.ab3@14554>   TST.b iee
0002BF40 <AmiBlitz3.ab3@14555>   BNE ftol
0002BF44 <AmiBlitz3.ab3@14557>   MOVE.w #$C31A,D1       ; #ftobover
0002BF48 <AmiBlitz3.ab3@14558>   BSR.w overchk
0002BF4C <AmiBlitz3.ab3@14560>   BSR.w floattolong2
0002BF50 <AmiBlitz3.ab3@14561> BRA.w convert_long_to_byte
0002BF52 <AmiBlitz3.ab3@14563> RTS ; dead old code
0002BF58 <AmiBlitz3.ab3@14567>   TST.b typecheck
0002BF5C <AmiBlitz3.ab3@14568>   BEQ 'l1
0002BF62 <AmiBlitz3.ab3@14569>   TST.b notypecheck
0002BF66 <AmiBlitz3.ab3@14570>   BNE 'l1
0002BF6C <AmiBlitz3.ab3@14571>   TST.l lasttoken
0002BF72 <AmiBlitz3.ab3@14577>   TST.b iee
0002BF76 <AmiBlitz3.ab3@14578>   BNE ftol
0002BF7A <AmiBlitz3.ab3@14580>   MOVE.w #$C31B,D1         ; #ftowover
0002BF7E <AmiBlitz3.ab3@14581>   BSR.w overchk
0002BF82 <AmiBlitz3.ab3@14583>   BSR.w floattolong2
0002BF86 <AmiBlitz3.ab3@14584> BRA.w convert_long_to_word
0002BF88 <AmiBlitz3.ab3@14586> RTS  ; dead old code
0002BF8E <AmiBlitz3.ab3@14590>   TST.b iee
0002BF92 <AmiBlitz3.ab3@14591>   BNE ftol
0002BF96 <AmiBlitz3.ab3@14593>   MOVE.w #$C31C,D1     ; #ftolover,
0002BF9A <AmiBlitz3.ab3@14594>   BSR.w overchk
0002BF9E <AmiBlitz3.ab3@14597>   MOVE.w #$FFE2,D1     ; #-30,
0002BFA2 <AmiBlitz3.ab3@14598> BRA.w fdo2
0002BFA4 <AmiBlitz3.ab3@14602>   MOVE.l d0,-(a7)
0002BFA6 <AmiBlitz3.ab3@14603>   MOVEQ #0,d0
0002BFAC <AmiBlitz3.ab3@14604>   MOVE.w regnum,d0
0002BFAE <AmiBlitz3.ab3@14605>   ASL.l #7,d0
0002BFB4 <AmiBlitz3.ab3@14606>   MOVE.l #$f2006000,d1
0002BFB6 <AmiBlitz3.ab3@14607>   OR.l d0,d1
0002BFB8 <AmiBlitz3.ab3@14608>   ASL.l #1,d0
0002BFBA <AmiBlitz3.ab3@14609>   ASL.l #8,d0
0002BFBC <AmiBlitz3.ab3@14610>   OR.l d0,d1
0002BFBE <AmiBlitz3.ab3@14611>   MOVE.l (a7)+,d0
0002BFC2 <AmiBlitz3.ab3@14612> BRA writelong
0002BFC4 <AmiBlitz3.ab3@14616>   MOVE.l d0,-(a7)
0002BFC6 <AmiBlitz3.ab3@14617>   MOVEQ #0,d0
0002BFCC <AmiBlitz3.ab3@14618>   MOVE.l #$f23c4023,d1
0002BFD2 <AmiBlitz3.ab3@14619>   MOVE.w regnum,d0
0002BFD4 <AmiBlitz3.ab3@14620>   ASL.l #7,d0
0002BFD6 <AmiBlitz3.ab3@14621>   OR.l d0,d1
0002BFDA <AmiBlitz3.ab3@14622>   BSR writelong
0002BFE0 <AmiBlitz3.ab3@14623>   MOVE.l #$00010000,d1
0002BFE4 <AmiBlitz3.ab3@14624>   BSR writelong
0002BFEA <AmiBlitz3.ab3@14625>   MOVE.w regnum,d0
0002BFEC <AmiBlitz3.ab3@14626>   ASL.l #7,d0
0002BFF2 <AmiBlitz3.ab3@14627>   MOVE.l #$f2006000,d1
0002BFF4 <AmiBlitz3.ab3@14628>   OR.l d0,d1
0002BFF6 <AmiBlitz3.ab3@14629>   ASL.l #1,d0
0002BFF8 <AmiBlitz3.ab3@14630>   ASL.l #8,d0
0002BFFA <AmiBlitz3.ab3@14631>   OR.l d0,d1
0002BFFE <AmiBlitz3.ab3@14632>   BSR writelong
0002C000 <AmiBlitz3.ab3@14633>   MOVE.l (a7)+,d0
0002C002 <AmiBlitz3.ab3@14634> RTS
0002C004 <AmiBlitz3.ab3@14637> RTS         ; dead old code
0002C00A <AmiBlitz3.ab3@14644>   TST.b iee
0002C00E <AmiBlitz3.ab3@14645>   BNE ftoq
0002C012 <AmiBlitz3.ab3@14647>   MOVE.w #$C31B,D1    ; #ftowover,
0002C016 <AmiBlitz3.ab3@14648>   BSR.w overchk
0002C01A <AmiBlitz3.ab3@14650>   MOVE.w #$D301,D1    ; #fltoqu,
0002C01E <AmiBlitz3.ab3@14651> BRA.w qtof2
0002C024 <AmiBlitz3.ab3@14656>    TST.b blitzparloop
0002C028 <AmiBlitz3.ab3@14657>    BNE 'l1
0002C02E <AmiBlitz3.ab3@14658>    TST.b funcparloop
0002C032 <AmiBlitz3.ab3@14659>    BNE 'l1
0002C036 <AmiBlitz3.ab3@14660>    BRA error_convert_types
0002C03E <AmiBlitz3.ab3@14663>   CMP.b #2,optistring
0002C042 <AmiBlitz3.ab3@14664>   BEQ JLrts
0002C048 <AmiBlitz3.ab3@14666>   MOVE.w stol,D1
0002C04C <AmiBlitz3.ab3@14667>   BSR.w writeword
0002C054 <AmiBlitz3.ab3@14669>   CMPI.w #$2,sbgot
0002C058 <AmiBlitz3.ab3@14671>   BCS.w sbtolong                     ; was BRA
0002C05C <AmiBlitz3.ab3@14673>   MOVE.w ceos(PC),D1                 ; begin copy of sbtolong
0002C060 <AmiBlitz3.ab3@14674>   BSR.w writeword
0002C066 <AmiBlitz3.ab3@14676>   MOVE.w regnum,D1
0002C068 <AmiBlitz3.ab3@14677>   LSL.w #8,D1
0002C06A <AmiBlitz3.ab3@14678>   LSL.w #1,D1
0002C072 <AmiBlitz3.ab3@14679>   CMPI.w #$2,sbgot
0002C076 <AmiBlitz3.ab3@14680>   BCS.w sbtolong_skip2
0002C07C <AmiBlitz3.ab3@14681>   MOVE.w a2offset,D3
0002C082 <AmiBlitz3.ab3@14682>   SUB.w thisstuse,D3
0002C086 <AmiBlitz3.ab3@14683>   CMP.w #$6,D3
0002C08A <AmiBlitz3.ab3@14684>   BNE.w 'lenonly
0002C090 <AmiBlitz3.ab3@14685>   OR.w movestst2,D1
0002C094 <AmiBlitz3.ab3@14686>   BSR.w writeword
0002C09A <AmiBlitz3.ab3@14687>   LEA movestst2+2,A0
0002C0A0 <AmiBlitz3.ab3@14688>   LEA movestst2f,A1
0002C0A4 <AmiBlitz3.ab3@14689>  BRA.w pokecode2
0002C0AA <AmiBlitz3.ab3@14692>   OR.w movea7dn,D1
0002C0AE <AmiBlitz3.ab3@14693>   BSR.w writeword
0002C0B4 <AmiBlitz3.ab3@14694>   MOVE.l #0,D1
0002C0B8 <AmiBlitz3.ab3@14695> BRA.w writeword                      ; end of copy
0002C0BE <AmiBlitz3.ab3@14702>   ADDQ.w #1,fuckpos
0002C0C2 <AmiBlitz3.ab3@14703>   BSR.w writeconvertcode
0002C0C8 <AmiBlitz3.ab3@14704>   SUBQ.w #1,fuckpos
0002C0CA <AmiBlitz3.ab3@14708> RTS
0002C0CC <AmiBlitz3.ab3@14712>   MOVE.w D3,D1
0002C0D0 <AmiBlitz3.ab3@14714>   CMP.w #7,d1
0002C0D4 <AmiBlitz3.ab3@14715>   BLE 'ok
0002C0DA <AmiBlitz3.ab3@14716>   JMP errorinternalconvert
0002C0DC <AmiBlitz3.ab3@14720>   SUBQ.w #1,D1
0002C0E0 <AmiBlitz3.ab3@14721>   MULU #$7,D1
0002C0E2 <AmiBlitz3.ab3@14722>   ADD.w D2,D1
0002C0E4 <AmiBlitz3.ab3@14723>   SUBQ.w #1,D1
0002C0E6 <AmiBlitz3.ab3@14724>   LSL.w #2,D1
0002C0EC <AmiBlitz3.ab3@14725>   LEA convtable,A0
0002C0F0 <AmiBlitz3.ab3@14726>   MOVE.l $0(A0,D1.W),D1
0002C0F4 <AmiBlitz3.ab3@14727>   BEQ.w 'skip
0002C0F6 <AmiBlitz3.ab3@14728>     MOVEA.l D1,A0
0002C0FA <AmiBlitz3.ab3@14730>     CMP.b #$ff,d3
0002C0FE <AmiBlitz3.ab3@14731>     BEQ 'skip
0002C100 <AmiBlitz3.ab3@14733>  JMP (A0)
0002C102 <AmiBlitz3.ab3@14736> RTS
0002C106 <AmiBlitz3.ab3@14739> usedfrom:  Ds.l 1
0002C10A <AmiBlitz3.ab3@14746>   CMP.w #"\",D0
0002C10E <AmiBlitz3.ab3@14747>   BNE.w 'skip0
0002C112 <AmiBlitz3.ab3@14749>     CMP.b #"\",(a5)
0002C116 <AmiBlitz3.ab3@14750>     BNE 'first
0002C11C <AmiBlitz3.ab3@14751>       MOVE.l A5,usedfrom
0002C122 <AmiBlitz3.ab3@14752>       LEA path2,A5
0002C126 <AmiBlitz3.ab3@14753>  BRA 'g1
0002C128 <AmiBlitz3.ab3@14757>     SUBQ.w #1,A5
0002C12E <AmiBlitz3.ab3@14758>   MOVE.l A5,usedfrom
0002C134 <AmiBlitz3.ab3@14759>   LEA usedpath,A5                                          ;read path
0002C138 <AmiBlitz3.ab3@14764>   BSR.w get1bytemain
0002C13E <AmiBlitz3.ab3@14767>   CLR.w flagmask
0002C142 <AmiBlitz3.ab3@14768>   CMP.w #$2A,D0             ;'*'
0002C146 <AmiBlitz3.ab3@14769>    BNE.w 'skip
0002C14E <AmiBlitz3.ab3@14770>   MOVE.w #$0001,flagmask
0002C152 <AmiBlitz3.ab3@14773>    BSR.w getparameter2
0002C156 <AmiBlitz3.ab3@14776>    BEQ.w syntaxerr
0002C15A <AmiBlitz3.ab3@14777>   CMP.w #$28,D0             ;'('
0002C15E <AmiBlitz3.ab3@14778>    BEQ.w 'setmask
0002C162 <AmiBlitz3.ab3@14779>   CMP.w #$2E,D0             ;'.'
0002C166 <AmiBlitz3.ab3@14780>    BEQ.w 'morem
0002C16A <AmiBlitz3.ab3@14781>   CMP.w #$24,D0             ;'$'
0002C16E <AmiBlitz3.ab3@14782>    BNE.w 'done
0002C176 <AmiBlitz3.ab3@14783>   ORI.w #$8,flagmask
0002C17A <AmiBlitz3.ab3@14784>    BSR.w storeloc
0002C17E <AmiBlitz3.ab3@14785>    BSR.w get1bytemain
0002C182 <AmiBlitz3.ab3@14786>  BRA.w 'morez
0002C186 <AmiBlitz3.ab3@14790>   BSR.w storeloc
0002C188 <AmiBlitz3.ab3@14791>   MOVE.w D2,-(A7)
0002C18E <AmiBlitz3.ab3@14792>   LEA namebuff2,A1
0002C192 <AmiBlitz3.ab3@14793>    BSR.w makename3
0002C196 <AmiBlitz3.ab3@14794>    BEQ.w syntaxerr
0002C198 <AmiBlitz3.ab3@14795>   MOVE.w (A7)+,D2
0002C19A <AmiBlitz3.ab3@14798>    MOVE.w D0,D1
0002C19E <AmiBlitz3.ab3@14799>    BSR.w resloc
0002C1A2 <AmiBlitz3.ab3@14800>    CMP.w #$28,D1             ;'('
0002C1A6 <AmiBlitz3.ab3@14801>    BNE.w 'done
0002C1AE <AmiBlitz3.ab3@14804>   ORI.w #$2,flagmask
0002C1B0 <AmiBlitz3.ab3@14807>  RTS
0002C1B4 <AmiBlitz3.ab3@14810>   CMP.w #$40,D0              ;'@'
0002C1B8 <AmiBlitz3.ab3@14811>    BNE.w 'skip2
0002C1C0 <AmiBlitz3.ab3@14812>   MOVE.w #$0005,flagmask
0002C1C4 <AmiBlitz3.ab3@14813>  BRA.w 'more2
0002C1C8 <AmiBlitz3.ab3@14816>   BSR.w makename2
0002C1CC <AmiBlitz3.ab3@14817> BRA.w 'more
0002C1D0 <AmiBlitz3.ab3@14821>   MOVE.w #$FED3,D1          ; #65235
0002C1D4 <AmiBlitz3.ab3@14822>    BSR.w uselib
0002C1DA <AmiBlitz3.ab3@14823>   LEA pusha3,A0
0002C1E0 <AmiBlitz3.ab3@14824>   LEA pusha3f,A1
0002C1E4 <AmiBlitz3.ab3@14825> BRA.w pokecode
0002C1E8 <AmiBlitz3.ab3@14829>   MOVE.w #$FED3,D1          ; #65235
0002C1EC <AmiBlitz3.ab3@14830>    BSR.w uselib
0002C1F2 <AmiBlitz3.ab3@14831>   LEA pulla3,A0
0002C1F8 <AmiBlitz3.ab3@14832>   LEA pulla3f,A1
0002C1FC <AmiBlitz3.ab3@14833> BRA.w pokecode
0002C1FE <AmiBlitz3.ab3@14837> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002C206 <AmiBlitz3.ab3@14843>     CMP.b #2,optistring
0002C20A <AmiBlitz3.ab3@14844>    BEQ 'l10
0002C20E <AmiBlitz3.ab3@14846>    MOVE.w ceos(PC),D1
0002C212 <AmiBlitz3.ab3@14847>    BSR.w writeword                                         ;clr.b (a3)
0002C218 <AmiBlitz3.ab3@14852>   MOVE.w regnum,D1
0002C21A <AmiBlitz3.ab3@14853>   LSL.w #8,D1
0002C21C <AmiBlitz3.ab3@14854>   LSL.w #1,D1
0002C224 <AmiBlitz3.ab3@14855>   CMPI.w #$2,sbgot
0002C228 <AmiBlitz3.ab3@14856>    BCS.w sbtolong_skip2
0002C22E <AmiBlitz3.ab3@14857>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002C234 <AmiBlitz3.ab3@14858>   SUB.w thisstuse,D3
0002C238 <AmiBlitz3.ab3@14859>   CMP.w #$6,D3
0002C23C <AmiBlitz3.ab3@14860>    BNE.w 'lenonly
0002C242 <AmiBlitz3.ab3@14861>   OR.w movestst2,D1
0002C246 <AmiBlitz3.ab3@14862>    BSR.w writeword
0002C24C <AmiBlitz3.ab3@14863>   LEA movestst2+2,A0
0002C252 <AmiBlitz3.ab3@14864>   LEA movestst2f,A1
0002C256 <AmiBlitz3.ab3@14865>  BRA.w pokecode2
0002C25C <AmiBlitz3.ab3@14868>    OR.w movea7dn,D1
0002C260 <AmiBlitz3.ab3@14869>    BSR.w writeword
0002C266 <AmiBlitz3.ab3@14870>   MOVE.l movea7dn+2,D1
0002C26A <AmiBlitz3.ab3@14883>   BSR writelong
0002C272 <AmiBlitz3.ab3@14886>    CMP.w #6,regnum
0002C276 <AmiBlitz3.ab3@14887>    BEQ 'l1
0002C27C <AmiBlitz3.ab3@14888>    TST.w stackpar
0002C280 <AmiBlitz3.ab3@14889>    BNE 'l1
0002C286 <AmiBlitz3.ab3@14890>    TST.b funcparloop
0002C28A <AmiBlitz3.ab3@14891>    BEQ 'l1
0002C290 <AmiBlitz3.ab3@14892>    MOVE.l #$48780000,d1
0002C294 <AmiBlitz3.ab3@14893>    BSR writelong
0002C296 <AmiBlitz3.ab3@14897>  RTS
0002C298 <AmiBlitz3.ab3@14903>      MOVE.l d1,-(a7)
0002C2A0 <AmiBlitz3.ab3@14904>      CMP.w #6,regnum
0002C2A4 <AmiBlitz3.ab3@14905>      BEQ 'l1
0002C2AA <AmiBlitz3.ab3@14906>      TST.w stackpar
0002C2AE <AmiBlitz3.ab3@14907>      BNE 'l1
0002C2B4 <AmiBlitz3.ab3@14908>      TST.b funcparloop
0002C2B8 <AmiBlitz3.ab3@14909>      BEQ 'l1
0002C2BE <AmiBlitz3.ab3@14910>      MOVE.l #$48780000,d1
0002C2C2 <AmiBlitz3.ab3@14911>      BSR writelong
0002C2C4 <AmiBlitz3.ab3@14914>      MOVE.l (a7)+,d1
0002C2CA <AmiBlitz3.ab3@14917>    OR.w movestdn,D1
0002C2CE <AmiBlitz3.ab3@14918>    BSR.w writeword
0002C2D2 <AmiBlitz3.ab3@14919>   MOVE.w #$FED3,D1        ;#65235
0002C2D6 <AmiBlitz3.ab3@14920>    BSR.w uselib
0002C2DA <AmiBlitz3.ab3@14921>   MOVE.w $A(A1),D1
0002C2DE <AmiBlitz3.ab3@14922> BRA.w writeword
0002C2E0 <AmiBlitz3.ab3@14925> unknown:    Ds.w 1
0002C2E6 <AmiBlitz3.ab3@14928> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002C2EA <AmiBlitz3.ab3@14929> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002C2F0 <AmiBlitz3.ab3@14930>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002C2F6 <AmiBlitz3.ab3@14936>   TST.b debugmode
0002C2FA <AmiBlitz3.ab3@14937>   BEQ.w sharreval
0002C2FE <AmiBlitz3.ab3@14938>  BSR.w arreval
0002C302 <AmiBlitz3.ab3@14941>   MOVE.w somecode(PC),D1
0002C308 <AmiBlitz3.ab3@14942>   OR.w regnum,D1
0002C30C <AmiBlitz3.ab3@14943>    BSR.w writeword
0002C30E <AmiBlitz3.ab3@14944>   MOVEQ.l #$01,D1
0002C310 <AmiBlitz3.ab3@14945>   SWAP D1
0002C314 <AmiBlitz3.ab3@14946>    BSR.w writelong
0002C318 <AmiBlitz3.ab3@14947>   MOVE.l somecode2(PC),D1
0002C31C <AmiBlitz3.ab3@14948>    BSR.w writelong
0002C320 <AmiBlitz3.ab3@14949>   MOVE.w #$C309,D1     ; was #arrerr,
0002C324 <AmiBlitz3.ab3@14950> BRA.w Atokejsr
0002C326 <AmiBlitz3.ab3@14954>   MOVEQ.l #$02,D2
0002C328 <AmiBlitz3.ab3@14955>   MOVEQ.l #$00,D1
0002C32A <AmiBlitz3.ab3@14956>   MOVEQ.l #$00,D3
0002C32E <AmiBlitz3.ab3@14957> BRA.w maineval2
0002C330 <AmiBlitz3.ab3@14961>   MOVEQ.l #$03,D2           ;getlong
0002C332 <AmiBlitz3.ab3@14962>   MOVEQ.l #$00,D1           ;no push
0002C334 <AmiBlitz3.ab3@14963>   MOVEQ.l #$00,D3           ;and convert
0002C33A <AmiBlitz3.ab3@14964>   MOVE.b notypecheck,-(a7)
0002C342 <AmiBlitz3.ab3@14965>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002C348 <AmiBlitz3.ab3@14966>   JSR maineval2             ;2!* ;was bra
0002C34E <AmiBlitz3.ab3@14968>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002C350 <AmiBlitz3.ab3@14969> RTS
0002C35A <AmiBlitz3.ab3@14975>   MOVE.w oldqflag,instringon
0002C360 <AmiBlitz3.ab3@14976>   MOVEA.l lastsourcepos,A5
0002C362 <AmiBlitz3.ab3@14978>   MOVEQ.l #-$01,D1
0002C364 <AmiBlitz3.ab3@14979>   MOVEQ.l #-$01,D3
0002C368 <AmiBlitz3.ab3@14980> BRA.w peval
0002C372 <AmiBlitz3.ab3@14986>   MOVE.w oldqflag,instringon
0002C378 <AmiBlitz3.ab3@14987>   MOVEA.l lastsourcepos,A5
0002C37A <AmiBlitz3.ab3@14990>   MOVEQ.l #-$01,D1
0002C37C <AmiBlitz3.ab3@14991>   MOVEQ.l #$00,D3
0002C382 <AmiBlitz3.ab3@14993>   MOVE.l leftsidetype,-(a7)
0002C388 <AmiBlitz3.ab3@14994>   MOVE.l rightsidetype,-(a7)
0002C38E <AmiBlitz3.ab3@14995>   MOVE.w leftsideflagmask,-(a7)
0002C394 <AmiBlitz3.ab3@14996>   MOVE.w rightsideflagmask,-(a7)
0002C39A <AmiBlitz3.ab3@14997>   CLR.l leftsidetype
0002C3A0 <AmiBlitz3.ab3@14998>   CLR.l rightsidetype
0002C3A6 <AmiBlitz3.ab3@14999>   CLR.w leftsideflagmask
0002C3AC <AmiBlitz3.ab3@15000>   CLR.w rightsideflagmask
0002C3B2 <AmiBlitz3.ab3@15002>   JSR maineval                    ; was bra
0002C3B8 <AmiBlitz3.ab3@15004>   MOVE.w (a7)+,rightsideflagmask
0002C3BE <AmiBlitz3.ab3@15005>   MOVE.w (a7)+,leftsideflagmask
0002C3C4 <AmiBlitz3.ab3@15006>   MOVE.l (a7)+,rightsidetype
0002C3CA <AmiBlitz3.ab3@15007>   MOVE.l (a7)+,leftsidetype
0002C3CC <AmiBlitz3.ab3@15008> RTS
0002C3D6 <AmiBlitz3.ab3@15014>   MOVE.w oldqflag,instringon
0002C3DC <AmiBlitz3.ab3@15015>   MOVEA.l lastsourcepos,A5
0002C3DE <AmiBlitz3.ab3@15018>   MOVEQ.l #$00,D1
0002C3E0 <AmiBlitz3.ab3@15019>   MOVEQ.l #-$01,D3
0002C3E4 <AmiBlitz3.ab3@15020> BRA.w maineval
0002C3E6 <AmiBlitz3.ab3@15024>   MOVEQ.l #$01,D1
0002C3E8 <AmiBlitz3.ab3@15025>   MOVEQ.l #-$01,D3
0002C3EC <AmiBlitz3.ab3@15026> BRA.w maineval
0002C3F6 <AmiBlitz3.ab3@15032>   MOVE.w oldqflag,instringon
0002C3FC <AmiBlitz3.ab3@15033>   MOVEA.l lastsourcepos,A5
0002C3FE <AmiBlitz3.ab3@15037>   MOVEQ.l #$00,D1      ;no push
0002C400 <AmiBlitz3.ab3@15038>   MOVEQ.l #$00,D3
0002C408 <AmiBlitz3.ab3@15059>    CMPI.w #$6,regnum
0002C40C <AmiBlitz3.ab3@15060>    BCS.w maineval2
0002C40E <AmiBlitz3.ab3@15062>    MOVEQ #0,d1
0002C414 <AmiBlitz3.ab3@15063>    MOVE.l destpointer,a4
0002C41A <AmiBlitz3.ab3@15065>    CMPA.l destbufferend,A4
0002C41E <AmiBlitz3.ab3@15066>    BCC.w 'l2
0002C424 <AmiBlitz3.ab3@15068>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002C428 <AmiBlitz3.ab3@15070>    BNE 'l2
0002C42C <AmiBlitz3.ab3@15074> BRA 'l1
0002C42E <AmiBlitz3.ab3@15078>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002C436 <AmiBlitz3.ab3@15081>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002C43C <AmiBlitz3.ab3@15087>   MOVE.w thisstuse,-(A7)
0002C446 <AmiBlitz3.ab3@15088>   MOVE.w a2offset,thisstuse
0002C44C <AmiBlitz3.ab3@15090>   MOVE.w stackpar,-(A7)
0002C452 <AmiBlitz3.ab3@15091>   MOVE.w D1,stackpar
0002C458 <AmiBlitz3.ab3@15092>   MOVE.w sbgot,-(A7)
0002C45E <AmiBlitz3.ab3@15093>   CLR.w sbgot                ;not pushed yet
0002C462 <AmiBlitz3.ab3@15094>   MOVE.w unknown(PC),-(A7)
0002C468 <AmiBlitz3.ab3@15095>   MOVE.w D3,unknown
0002C46A <AmiBlitz3.ab3@15097>   MOVE.w D2,-(a7)
0002C470 <AmiBlitz3.ab3@15099>   MOVE.w d2,mode
0002C474 <AmiBlitz3.ab3@15101>    BSR.w eval3
0002C476 <AmiBlitz3.ab3@15102>   MOVE.w (a7)+,d3            ;type asked for
0002C47A <AmiBlitz3.ab3@15103>    BEQ.w 'noconv
0002C47E <AmiBlitz3.ab3@15104>   MOVE.w unknown(PC),D1
0002C482 <AmiBlitz3.ab3@15105>    BNE.w 'noconv
0002C484 <AmiBlitz3.ab3@15106>   EXG.l D2,D3
0002C486 <AmiBlitz3.ab3@15108>    MOVE.l a2,-(a7)
0002C48C <AmiBlitz3.ab3@15109>    TST.b curtemplabel
0002C490 <AmiBlitz3.ab3@15110>    BEQ 'l10
0002C496 <AmiBlitz3.ab3@15111>    MOVE.l asmbuff,a2
0002C49C <AmiBlitz3.ab3@15112>    CMP.w #$c,$8(a2)
0002C4A0 <AmiBlitz3.ab3@15113>    BEQ 'l20
0002C4A6 <AmiBlitz3.ab3@15114>    CMP.w #$d,$8(a2)
0002C4AA <AmiBlitz3.ab3@15115>    BEQ 'l20
0002C4AC <AmiBlitz3.ab3@15118>   CMP.w d2,d3
0002C4B0 <AmiBlitz3.ab3@15119>   BEQ 'l20
0002C4B4 <AmiBlitz3.ab3@15120>   BSR.w writeconvertcode
0002C4BA <AmiBlitz3.ab3@15121>   CLR.b doimmediate
0002C4BC <AmiBlitz3.ab3@15124>   MOVE.l (a7)+,a2
0002C4C2 <AmiBlitz3.ab3@15128>   MOVE.w (A7)+,unknown
0002C4C8 <AmiBlitz3.ab3@15129>   MOVE.w stackpar,D1
0002C4CC <AmiBlitz3.ab3@15130>    BEQ.w 'skipme
0002C4D0 <AmiBlitz3.ab3@15131>    BMI.w 'skipme
0002C4D6 <AmiBlitz3.ab3@15135>   MOVE.w regnum,D1
0002C4D8 <AmiBlitz3.ab3@15136>   LSL.w #8,D1
0002C4DA <AmiBlitz3.ab3@15137>   LSL.w #1,D1
0002C4DE <AmiBlitz3.ab3@15138>   CMP.w #$7,D2
0002C4E2 <AmiBlitz3.ab3@15139>    BNE.w 'hi1
0002C4EA <AmiBlitz3.ab3@15141>    CMP.b #2,optistring
0002C4EE <AmiBlitz3.ab3@15142>    BEQ 'hi1a
0002C4F0 <AmiBlitz3.ab3@15144>   MOVE.w D1,-(A7)
0002C4F6 <AmiBlitz3.ab3@15145>   OR.w getstlen,D1
0002C4FA <AmiBlitz3.ab3@15146>    BSR.w writeword
0002C4FC <AmiBlitz3.ab3@15147>   MOVE.w (A7)+,D1
0002C502 <AmiBlitz3.ab3@15150>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002C506 <AmiBlitz3.ab3@15155>   MOVE.w #$3f3c,d1
0002C50A <AmiBlitz3.ab3@15157>    BSR.w writeword
0002C50C <AmiBlitz3.ab3@15162>   MOVE.w d2,d1
0002C512 <AmiBlitz3.ab3@15163>   MOVE.w d1,libmode
0002C516 <AmiBlitz3.ab3@15165>    BSR.w writeword
0002C51A <AmiBlitz3.ab3@15167>   CMP.w #$7,D2
0002C51E <AmiBlitz3.ab3@15168>    BNE.w 'skipme
0002C524 <AmiBlitz3.ab3@15169>   MOVE.w putstlen,D1
0002C52A <AmiBlitz3.ab3@15170>   OR.w regnum,D1
0002C52E <AmiBlitz3.ab3@15171>    BSR.w writeword
0002C532 <AmiBlitz3.ab3@15174>    CMP.w #$7,D2
0002C536 <AmiBlitz3.ab3@15175>    BNE.w 'notst
0002C53E <AmiBlitz3.ab3@15188>    CMP.b #2,optistring
0002C542 <AmiBlitz3.ab3@15189>    BEQ 'skipme_l10
0002C548 <AmiBlitz3.ab3@15191>    ADDQ.w #4,a2offset     ;a length on da stack.....
0002C54C <AmiBlitz3.ab3@15192>    BSR.w sbtolong
0002C550 <AmiBlitz3.ab3@15193>  BRA.w 'notst2
0002C558 <AmiBlitz3.ab3@15198>     CMP.w #6,regnum
0002C55C <AmiBlitz3.ab3@15199>     BEQ 'skipme_l10_l1
0002C562 <AmiBlitz3.ab3@15200>     TST.b funcparloop
0002C566 <AmiBlitz3.ab3@15201>     BEQ 'skipme_l10_l1
0002C56C <AmiBlitz3.ab3@15202>     MOVE.l #$48780000,d1
0002C570 <AmiBlitz3.ab3@15203>     BSR writelong
0002C574 <AmiBlitz3.ab3@15207>  BRA.w 'notst2
0002C57A <AmiBlitz3.ab3@15210>   ADDQ.w #2,a2offset
0002C57E <AmiBlitz3.ab3@15211>  BRA 'skipme
0002C586 <AmiBlitz3.ab3@15215>   CMPI.w #$2,sbgot
0002C58A <AmiBlitz3.ab3@15216>    BCS.w 'notst2                                         ;correct stack
0002C58E <AmiBlitz3.ab3@15217>   MOVE.w ststfix(PC),D1
0002C592 <AmiBlitz3.ab3@15218>    BSR.w writeword
0002C598 <AmiBlitz3.ab3@15221>   MOVE.w (A7)+,sbgot
0002C59E <AmiBlitz3.ab3@15223>   MOVE.w stackpar,D1
0002C5A2 <AmiBlitz3.ab3@15224>    BPL.w 'skip
0002C5A6 <AmiBlitz3.ab3@15226>    CMP.b #7,d2
0002C5AA <AmiBlitz3.ab3@15227>    BEQ 'notst2_l1
0002C5B0 <AmiBlitz3.ab3@15228>   TST.b funcparloop
0002C5B4 <AmiBlitz3.ab3@15229>   BEQ 'notst2_l1
0002C5B8 <AmiBlitz3.ab3@15230>   CMP.b #5,d2
0002C5BC <AmiBlitz3.ab3@15231>   BNE 'notst2_skip
0002C5C2 <AmiBlitz3.ab3@15232>   TST.b fpu
0002C5C6 <AmiBlitz3.ab3@15233>   BEQ 'notst2_skip
0002C5CC <AmiBlitz3.ab3@15234>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C5D2 <AmiBlitz3.ab3@15235>   JSR writelong
0002C5D6 <AmiBlitz3.ab3@15238>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C5DC <AmiBlitz3.ab3@15239>   ADD.w parnum,d1
0002C5E2 <AmiBlitz3.ab3@15240>   JSR Atokejsr
0002C5E8 <AmiBlitz3.ab3@15241>    TST.w dontwrite_nomemleft
0002C5EC <AmiBlitz3.ab3@15242>    BNE 'notst2_l1
0002C5F2 <AmiBlitz3.ab3@15243>    MOVE.l data1start,d1
0002C5F8 <AmiBlitz3.ab3@15244>    MOVE.l destpointer,a4
0002C5FC <AmiBlitz3.ab3@15245>    ADD.l d1,-4(a4)
0002C602 <AmiBlitz3.ab3@15246>    MOVE.l destpointer,d1
0002C604 <AmiBlitz3.ab3@15247>    SUBQ.l #4,d1
0002C60A <AmiBlitz3.ab3@15248>    SUB.l destbufferstart,d1
0002C60C <AmiBlitz3.ab3@15249>    MOVE.l d2,-(a7)
0002C60E <AmiBlitz3.ab3@15250>    MOVE.l d1,d2
0002C614 <AmiBlitz3.ab3@15251>    JSR addhunkoffset
0002C616 <AmiBlitz3.ab3@15252>    MOVE.l (a7)+,d2
0002C61A <AmiBlitz3.ab3@15253>  BRA 'skip
0002C620 <AmiBlitz3.ab3@15257>   ADDQ.w #2,a2offset
0002C626 <AmiBlitz3.ab3@15258>   MOVE.w pushd0wd,D1
0002C62A <AmiBlitz3.ab3@15259>   CMP.w #$3,D2                                             ;write parameter to stack
0002C62E <AmiBlitz3.ab3@15260>    BCS.w 'ok
0002C634 <AmiBlitz3.ab3@15261>   ADDQ.w #2,a2offset
0002C63A <AmiBlitz3.ab3@15263>   TST.b fpu
0002C63E <AmiBlitz3.ab3@15264>   BEQ 'notst2_nofpu
0002C642 <AmiBlitz3.ab3@15265>   CMP.w #5,d2
0002C646 <AmiBlitz3.ab3@15266>   BNE 'notst2_nofpu
0002C648 <AmiBlitz3.ab3@15267>   MOVEQ #0,d1
0002C64E <AmiBlitz3.ab3@15268>   MOVE.w regnum,d1
0002C650 <AmiBlitz3.ab3@15269>   ASL.l #7,d1
0002C656 <AmiBlitz3.ab3@15270>   OR.l #$f2276400,d1
0002C65A <AmiBlitz3.ab3@15271>   BSR writelong
0002C65E <AmiBlitz3.ab3@15272>  BRA 'skip
0002C664 <AmiBlitz3.ab3@15276>   MOVE.w pushd0l,D1
0002C66A <AmiBlitz3.ab3@15279>    OR.w regnum,D1
0002C66E <AmiBlitz3.ab3@15280>    BSR.w writeword                                         ;nat
0002C674 <AmiBlitz3.ab3@15283>   MOVE.w (A7)+,stackpar
0002C67A <AmiBlitz3.ab3@15284>   MOVE.w (A7)+,thisstuse
0002C67C <AmiBlitz3.ab3@15285> RTS
0002C67E <AmiBlitz3.ab3@15288> thisstuse: Ds.w 1
0002C680 <AmiBlitz3.ab3@15291> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C682 <AmiBlitz3.ab3@15292> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C686 <AmiBlitz3.ab3@15297>   BSR.w eval4
0002C690 <AmiBlitz3.ab3@15298>   SUBI.l #$12,forthsp
0002C692 <AmiBlitz3.ab3@15299> RTS
0002C694 <AmiBlitz3.ab3@15303>   MOVEQ.l #$01,D1
0002C698 <AmiBlitz3.ab3@15306>       MOVEA.l precsp(PC),A1
0002C69A <AmiBlitz3.ab3@15307>       MOVE.l A0,(A1)+
0002C69C <AmiBlitz3.ab3@15308>       MOVE.w D1,(A1)+
0002C6A2 <AmiBlitz3.ab3@15309>       MOVE.l A1,precsp
0002C6A6 <AmiBlitz3.ab3@15311>    BSR.w calcloop
0002C6A8 <AmiBlitz3.ab3@15312>   TST.w D1
0002C6AC <AmiBlitz3.ab3@15313>    BNE.w syntaxerr
0002C6B2 <AmiBlitz3.ab3@15315>   SUBQ.l #6,precsp           ;pop the prec set up
0002C6B4 <AmiBlitz3.ab3@15316> RTS
0002C6B8 <AmiBlitz3.ab3@15320>   BSR.w eval2
0002C6BC <AmiBlitz3.ab3@15323>   MOVEA.l precsp(PC),A1
0002C6BE <AmiBlitz3.ab3@15324>   CMP.w -(A1),D1
0002C6C2 <AmiBlitz3.ab3@15325>    BHI.w 'higher
0002C6C4 <AmiBlitz3.ab3@15326>  RTS
0002C6C8 <AmiBlitz3.ab3@15332>   MOVEA.l precsp(PC),A1
0002C6CA <AmiBlitz3.ab3@15333>   MOVE.l A0,(A1)+
0002C6CC <AmiBlitz3.ab3@15334>   MOVE.w D1,(A1)+
0002C6D2 <AmiBlitz3.ab3@15335>   MOVE.l A1,precsp
0002C6D4 <AmiBlitz3.ab3@15337>   MOVE.w D2,-(A7)
0002C6DA <AmiBlitz3.ab3@15338>   ADDQ.w #1,regnum
0002C6DE <AmiBlitz3.ab3@15339>    BSR.w calcloop               ;constant optimizer
0002C6E4 <AmiBlitz3.ab3@15340>   SUBQ.w #1,regnum
0002C6E6 <AmiBlitz3.ab3@15341>   MOVE.w (A7)+,D3
0002C6EA <AmiBlitz3.ab3@15342>   MOVEM.l D1/A0,-(A7)
0002C6EE <AmiBlitz3.ab3@15343>    BEQ.w 'skip
0002C6F2 <AmiBlitz3.ab3@15344>    BSR.w convtypef     ;could possibly fuck regat+1 !
0002C6F6 <AmiBlitz3.ab3@15347>   BSR.w popprec
0002C6FA <AmiBlitz3.ab3@15348>   BSR.w writecode
0002C6FE <AmiBlitz3.ab3@15355>   MOVEA.l forthsp(PC),A0
0002C702 <AmiBlitz3.ab3@15356>   MOVE.w -$2(A0),D1
0002C706 <AmiBlitz3.ab3@15357>   OR.w -$14(A0),D1
0002C70A <AmiBlitz3.ab3@15358>   MOVE.w D1,-$14(A0)
0002C70E <AmiBlitz3.ab3@15359>    BNE.w 'no
0002C714 <AmiBlitz3.ab3@15360>   MOVE.w dontwrite_nomemleft,D1
0002C718 <AmiBlitz3.ab3@15361>    BNE.w 'no
0002C71C <AmiBlitz3.ab3@15368>    MOVEA.l -$24(A0),A0
0002C858 <AmiBlitz3.ab3@15370>   !newcalc
0002C85C <AmiBlitz3.ab3@15371>    BEQ 'l10
0002C860 <AmiBlitz3.ab3@15372>    MOVEA.l forthsp(PC),A0
0002C868 <AmiBlitz3.ab3@15373>    MOVE.w -$18(A0),lasta6
0002C870 <AmiBlitz3.ab3@15374>    MOVE.l -$1C(A0),lasta6
0002C874 <AmiBlitz3.ab3@15375>    MOVEA.l -$24(A0),A0
0002C87A <AmiBlitz3.ab3@15376>    MOVE.l A0,destpointer
0002C880 <AmiBlitz3.ab3@15377>    MOVEA.l _mathffpbase,A6
0002C886 <AmiBlitz3.ab3@15378>    MOVEA.l ffplib,A1
0002C88A <AmiBlitz3.ab3@15379>  BRA 'cont1
0002C88E <AmiBlitz3.ab3@15383>   MOVE.w #$2000,D1
0002C894 <AmiBlitz3.ab3@15384>   OR.w regnum,D1            ; was regat(pc),
0002C898 <AmiBlitz3.ab3@15385>    BSR.w writeword
0002C89A <AmiBlitz3.ab3@15387>     MOVEQ #0,d1
0002C8A0 <AmiBlitz3.ab3@15388>     MOVE.w regnum,D1
0002C8A2 <AmiBlitz3.ab3@15389>     ASL.l #8,d1
0002C8A4 <AmiBlitz3.ab3@15390>     ASL.l #2,d1
0002C8AA <AmiBlitz3.ab3@15391>     OR.l #$f2000000,d1
0002C8AE <AmiBlitz3.ab3@15392>     BSR writelong
0002C8B2 <AmiBlitz3.ab3@15394>   MOVE.w #$4E75,D1
0002C8B6 <AmiBlitz3.ab3@15395>    BSR.w writeword
0002C8BE <AmiBlitz3.ab3@15396>   MOVE.w -$18(A0),lasta6
0002C8C6 <AmiBlitz3.ab3@15397>   MOVE.l -$1C(A0),lasta6
0002C8CA <AmiBlitz3.ab3@15398>   MOVEA.l -$24(A0),A0
0002C8D0 <AmiBlitz3.ab3@15399>   MOVE.l A0,destpointer
0002C8D4 <AmiBlitz3.ab3@15401>   MOVEM.l D2/A5,-(A7)
0002C8DA <AmiBlitz3.ab3@15403>   MOVEA.l _mathffpbase,A6
0002C8E0 <AmiBlitz3.ab3@15404>   MOVEA.l ffplib,A1
0002C8E4 <AmiBlitz3.ab3@15405>   MOVE.w $A(A1),D0
0002C8EA <AmiBlitz3.ab3@15406>   LEA _mathffpbase,A5
0002C8EC <AmiBlitz3.ab3@15407>   SUBA.w D0,A5
0002C8F2 <AmiBlitz3.ab3@15409>   JSR Aclearcache                                          ;neg +
0002C8F8 <AmiBlitz3.ab3@15411>   CLR.l load_var_addr
0002C8FE <AmiBlitz3.ab3@15412>   CLR.l imm_addr
0002C904 <AmiBlitz3.ab3@15413>   TST.w dontwrite_nomemleft
0002C908 <AmiBlitz3.ab3@15414>   BNE '1
0002C90A <AmiBlitz3.ab3@15416>   JSR (A0)                                                 ;calc constant inline expression
0002C90E <AmiBlitz3.ab3@15420>   MOVEM.l (A7)+,D2/A5
0002C914 <AmiBlitz3.ab3@15427>   MOVE.b d2,isconstantvalue
0002C91A <AmiBlitz3.ab3@15428>   MOVE.l d0,lastconstantvalue
0002C920 <AmiBlitz3.ab3@15430>   MOVE.w regnum,D1
0002C922 <AmiBlitz3.ab3@15431>   LSL.w #8,D1
0002C924 <AmiBlitz3.ab3@15432>   LSL.w #1,D1
0002C928 <AmiBlitz3.ab3@15433>   ORI.w #$203C,D1      ;move.l #x,dn
0002C92C <AmiBlitz3.ab3@15434>   CMP.w #$3,D2
0002C930 <AmiBlitz3.ab3@15435>    BCC.w 'ok
0002C934 <AmiBlitz3.ab3@15436>   ORI.w #$1000,D1
0002C938 <AmiBlitz3.ab3@15437>    BSR.w writeword
0002C93A <AmiBlitz3.ab3@15438>   MOVE.w D0,D1
0002C93E <AmiBlitz3.ab3@15439>    BSR.w writeword
0002C942 <AmiBlitz3.ab3@15440>  BRA.w 'mode
0002C948 <AmiBlitz3.ab3@15444>   TST.b iee                                                ;fpu constant
0002C94C <AmiBlitz3.ab3@15445>   BEQ 'l10b
0002C950 <AmiBlitz3.ab3@15446>   CMP.b #5,d2
0002C954 <AmiBlitz3.ab3@15447>   BNE 'l10b
0002C956 <AmiBlitz3.ab3@15448>   MOVEQ #0,d1
0002C95C <AmiBlitz3.ab3@15449>   MOVE.w regnum,D1
0002C95E <AmiBlitz3.ab3@15450>   ASL.l #7,d1
0002C964 <AmiBlitz3.ab3@15451>   OR.l #$f23c5400,d1
0002C968 <AmiBlitz3.ab3@15452>   BSR writelong
0002C96A <AmiBlitz3.ab3@15453>   SUBQ.l #8,a7
0002C970 <AmiBlitz3.ab3@15454>   fmove.d fp0,0(a7)
0002C972 <AmiBlitz3.ab3@15455>   MOVE.l (a7)+,d1
0002C976 <AmiBlitz3.ab3@15456>   BSR writelong
0002C978 <AmiBlitz3.ab3@15457>   MOVE.l (a7)+,d1
0002C97C <AmiBlitz3.ab3@15458>   BSR writelong
0002C980 <AmiBlitz3.ab3@15459>  BRA 'mode
0002C984 <AmiBlitz3.ab3@15463>   BSR.w writeword
0002C986 <AmiBlitz3.ab3@15464>   MOVE.l D0,D1
0002C98A <AmiBlitz3.ab3@15465>   BSR.w writelong
0002C98E <AmiBlitz3.ab3@15472>   MOVEA.l forthsp(PC),A0
0002C992 <AmiBlitz3.ab3@15473>   MOVEA.l -$20(A0),A3
0002C998 <AmiBlitz3.ab3@15474>   MOVEA.l hunkoffsetbase,A2
0002C99E <AmiBlitz3.ab3@15475>   MOVE.l A3,hunkoffsetbase
0002C9A4 <AmiBlitz3.ab3@15476>   MOVEA.l _execbase,A6
0002C9A6 <AmiBlitz3.ab3@15479>   CMPA.l A3,A2
0002C9AA <AmiBlitz3.ab3@15480>   BEQ.w 'done
0002C9B0 <AmiBlitz3.ab3@15481>   SUBQ.l #1,hunkoffsetcounter
0002C9B2 <AmiBlitz3.ab3@15482>   MOVEA.l A2,A1
0002C9B4 <AmiBlitz3.ab3@15483>   MOVEA.l (A2),A2
0002C9B6 <AmiBlitz3.ab3@15484>   MOVEQ.l #$8,D0
0002C9BC <AmiBlitz3.ab3@15486>   MOVE.l mempool2,a0
0002C9C0 <AmiBlitz3.ab3@15487>    JSR _FreePooled(A6)
0002C9C4 <AmiBlitz3.ab3@15490>  BRA.w 'loop
0002C9C8 <AmiBlitz3.ab3@15493>   MOVEA.l forthsp(PC),A0
0002C9CC <AmiBlitz3.ab3@15496>   LEA -$12(A0),A0
0002C9D2 <AmiBlitz3.ab3@15497>   MOVE.l A0,forthsp
0002C9D6 <AmiBlitz3.ab3@15499>   MOVEM.l (A7)+,D1/A0
0002C9DA <AmiBlitz3.ab3@15500>   BSR.w reget
0002C9DE <AmiBlitz3.ab3@15501> BRA.w 'more
0002C9E2 <AmiBlitz3.ab3@15510>   BSR.w getelement
0002C9E4 <AmiBlitz3.ab3@15512>   TST.w d0
0002C9E8 <AmiBlitz3.ab3@15513>   BEQ 'done
0002C9EC <AmiBlitz3.ab3@15514>   CMP.b #",",d0
0002C9F0 <AmiBlitz3.ab3@15515>   BEQ 'done
0002C9F4 <AmiBlitz3.ab3@15516>   CMP.b #"@",d0                                            ;expandline @@
0002C9F8 <AmiBlitz3.ab3@15517>   BEQ 'done
0002C9FE <AmiBlitz3.ab3@15520>   LEA operators,A0
0002CA00 <AmiBlitz3.ab3@15523>    TST.w (A0)
0002CA04 <AmiBlitz3.ab3@15524>    BEQ.w 'done
0002CA06 <AmiBlitz3.ab3@15525>   CMP.w (A0),D0
0002CA0A <AmiBlitz3.ab3@15526>    BEQ.w 'found
0002CA0E <AmiBlitz3.ab3@15527>   LEA $20(A0),A0
0002CA12 <AmiBlitz3.ab3@15528>  BRA.w 'loop
0002CA14 <AmiBlitz3.ab3@15531>   MOVEQ.l #$00,D1
0002CA16 <AmiBlitz3.ab3@15532>  RTS
0002CA1A <AmiBlitz3.ab3@15535>   CMP.w #$3C,D0
0002CA1E <AmiBlitz3.ab3@15536>    BNE.w 'notlt
0002CA22 <AmiBlitz3.ab3@15537>    BSR.w get1bytemain
0002CA26 <AmiBlitz3.ab3@15538>   CMP.w #$3D,D0
0002CA2A <AmiBlitz3.ab3@15539>    BNE.w 'notlteq
0002CA30 <AmiBlitz3.ab3@15540>   LEA ople,A0
0002CA34 <AmiBlitz3.ab3@15541>  BRA.w 'found2
0002CA38 <AmiBlitz3.ab3@15544>   CMP.w #$3E,D0          ;'>'
0002CA3C <AmiBlitz3.ab3@15545>    BNE.w 'found3
0002CA40 <AmiBlitz3.ab3@15546>  BRA.w 'isne
0002CA44 <AmiBlitz3.ab3@15549>   CMP.w #$3E,D0          ;'>'
0002CA48 <AmiBlitz3.ab3@15550>    BNE.w 'notqt
0002CA4C <AmiBlitz3.ab3@15551>    BSR.w get1bytemain
0002CA50 <AmiBlitz3.ab3@15552>   CMP.w #$3D,D0          ;'='
0002CA54 <AmiBlitz3.ab3@15553>    BNE.w 'notgteq
0002CA5A <AmiBlitz3.ab3@15554>   LEA opge,A0
0002CA5E <AmiBlitz3.ab3@15555>  BRA.w 'found2
0002CA62 <AmiBlitz3.ab3@15558>   CMP.w #$3C,D0          ;'<'
0002CA66 <AmiBlitz3.ab3@15559>    BEQ.w 'isne
0002CA70 <AmiBlitz3.ab3@15564>     MOVE.w oldqflag,instringon
0002CA76 <AmiBlitz3.ab3@15565>     MOVEA.l lastsourcepos,A5
0002CA7A <AmiBlitz3.ab3@15567>  BRA.w 'found2
0002CA7E <AmiBlitz3.ab3@15570>   CMP.w #$3D,D0          ;'='
0002CA82 <AmiBlitz3.ab3@15571>    BNE.w 'found2
0002CA86 <AmiBlitz3.ab3@15572>    BSR.w get1bytemain
0002CA8A <AmiBlitz3.ab3@15573>   CMP.w #$3E,D0          ;'>'
0002CA8E <AmiBlitz3.ab3@15574>    BNE.w 'noteqgt
0002CA94 <AmiBlitz3.ab3@15575>   LEA opge,A0
0002CA98 <AmiBlitz3.ab3@15576>  BRA.w 'found2
0002CA9C <AmiBlitz3.ab3@15579>   CMP.w #$3C,D0          ;'<'
0002CAA0 <AmiBlitz3.ab3@15580>   BNE.w 'found3
0002CAA6 <AmiBlitz3.ab3@15583>   LEA opne,A0
0002CAAA <AmiBlitz3.ab3@15589>   MOVE.w $1E(A0),D1
0002CAAC <AmiBlitz3.ab3@15590> RTS
0002CAAE <AmiBlitz3.ab3@15599>   MOVE.w d2,d1
0002CAB0 <AmiBlitz3.ab3@15600>   SUBQ.w #1,D1
0002CAB4 <AmiBlitz3.ab3@15601>    BMI.w illoperr
0002CAB6 <AmiBlitz3.ab3@15602>   LSL.w #2,D1
0002CABA <AmiBlitz3.ab3@15603>   MOVE.l $2(A0,D1.W),D1
0002CABE <AmiBlitz3.ab3@15604>    BEQ.w illoperr
0002CAC0 <AmiBlitz3.ab3@15605>   MOVEA.l D1,A0
0002CAC2 <AmiBlitz3.ab3@15606> JMP (A0)
0002CAC6 <AmiBlitz3.ab3@15622>   MOVEA.l precsp(PC),A1
0002CACC <AmiBlitz3.ab3@15623>   CMPA.l #precstackf,A1
0002CAD0 <AmiBlitz3.ab3@15624>    BCC.w pserr
0002CAD2 <AmiBlitz3.ab3@15625>   MOVE.w -(A1),D1
0002CAD4 <AmiBlitz3.ab3@15626>   MOVEA.l -(A1),A0
0002CADA <AmiBlitz3.ab3@15627>   MOVE.l A1,precsp
0002CADC <AmiBlitz3.ab3@15628> RTS
0002CAE0 <AmiBlitz3.ab3@15631> precsp:      Dc.l precstack
0002CBDC <AmiBlitz3.ab3@15632> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002CC60 <AmiBlitz3.ab3@15633>              Ds.l 33
0002CC62 <AmiBlitz3.ab3@15639> mseq:  SEQ D0
0002CC64 <AmiBlitz3.ab3@15640> msne:    SNE D0
0002CC66 <AmiBlitz3.ab3@15641> mslt:    SLT D0
0002CC68 <AmiBlitz3.ab3@15642> msle:    SLE D0
0002CC6A <AmiBlitz3.ab3@15643> msgt:    SGT D0
0002CC6C <AmiBlitz3.ab3@15644> msge:    SGE D0
0002CC6E <AmiBlitz3.ab3@15646> cmp0:    CMP.b D0,D0
0002CC70 <AmiBlitz3.ab3@15647> cmp1:    CMP.w D0,D0
0002CC72 <AmiBlitz3.ab3@15648> cmp2:    CMP.l D0,D0
0002CC76 <AmiBlitz3.ab3@15652>   MOVE.w cmp0(PC),D1
0002CC7A <AmiBlitz3.ab3@15653> BRA.w doeqcmp2                                            ;writecompare
0002CC7E <AmiBlitz3.ab3@15657>   MOVE.w cmp0(PC),D1
0002CC82 <AmiBlitz3.ab3@15658> BRA.w donecmp2
0002CC86 <AmiBlitz3.ab3@15662>   MOVE.w cmp0(PC),D1
0002CC8A <AmiBlitz3.ab3@15663> BRA.w doltcmp2
0002CC8E <AmiBlitz3.ab3@15667>   MOVE.w cmp0(PC),D1
0002CC92 <AmiBlitz3.ab3@15668> BRA.w dolecmp2
0002CC96 <AmiBlitz3.ab3@15672>   MOVE.w cmp0(PC),D1
0002CC9A <AmiBlitz3.ab3@15673> BRA.w dogtcmp2
0002CC9E <AmiBlitz3.ab3@15678>   MOVE.w cmp0(PC),D1
0002CCA2 <AmiBlitz3.ab3@15679> BRA.w dogecmp2
0002CCA6 <AmiBlitz3.ab3@15683>   MOVE.w cmp1(PC),D1
0002CCAA <AmiBlitz3.ab3@15684> BRA.w doeqcmp2
0002CCAE <AmiBlitz3.ab3@15688>   MOVE.w cmp1(PC),D1
0002CCB2 <AmiBlitz3.ab3@15689> BRA.w donecmp2
0002CCB6 <AmiBlitz3.ab3@15693>   MOVE.w cmp1(PC),D1
0002CCBA <AmiBlitz3.ab3@15694> BRA.w doltcmp2
0002CCBE <AmiBlitz3.ab3@15698>   MOVE.w cmp1(PC),D1
0002CCC2 <AmiBlitz3.ab3@15699> BRA.w dolecmp2
0002CCC6 <AmiBlitz3.ab3@15703>   MOVE.w cmp1(PC),D1
0002CCCA <AmiBlitz3.ab3@15704> BRA.w dogtcmp2
0002CCCE <AmiBlitz3.ab3@15709>   MOVE.w cmp1(PC),D1
0002CCD2 <AmiBlitz3.ab3@15710> BRA.w dogecmp2
0002CCD6 <AmiBlitz3.ab3@15714>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002CCDA <AmiBlitz3.ab3@15715> BRA doeqcmp2
0002CCDE <AmiBlitz3.ab3@15718>   MOVE.w cmp2(PC),D1
0002CCE2 <AmiBlitz3.ab3@15719> BRA donecmp2
0002CCE6 <AmiBlitz3.ab3@15723>   MOVE.w cmp2(PC),D1
0002CCEA <AmiBlitz3.ab3@15724> BRA.w doltcmp2
0002CCEE <AmiBlitz3.ab3@15728>   MOVE.w cmp2(PC),D1
0002CCF2 <AmiBlitz3.ab3@15729> BRA.w dolecmp2
0002CCF6 <AmiBlitz3.ab3@15733>   MOVE.w cmp2(PC),D1
0002CCFA <AmiBlitz3.ab3@15734> BRA.w dogtcmp2
0002CCFE <AmiBlitz3.ab3@15738>   MOVE.w cmp2(PC),D1
0002CD02 <AmiBlitz3.ab3@15739> BRA.w dogecmp2
0002CD04 <AmiBlitz3.ab3@15742> cfregat:  Ds.w 1
0002CD0A <AmiBlitz3.ab3@15746>   MOVE.w D1,libjsr+2
0002CD0E <AmiBlitz3.ab3@15747>    BSR.w savereg
0002CD10 <AmiBlitz3.ab3@15748>   MOVE.l D4,D1
0002CD14 <AmiBlitz3.ab3@15749>    BSR.w pokemovem
0002CD18 <AmiBlitz3.ab3@15750>   MOVE.w #$C900,D1
0002CD1C <AmiBlitz3.ab3@15751>    BSR.w Atokejsr
0002CD20 <AmiBlitz3.ab3@15752>    BSR.w ritetod0
0002CD26 <AmiBlitz3.ab3@15753>   MOVE.l libjsr,D1
0002CD2A <AmiBlitz3.ab3@15754>    BSR.w writelong
0002CD34 <AmiBlitz3.ab3@15755>   MOVE.w regnum,cfregat
0002CD3A <AmiBlitz3.ab3@15756>   CLR.w regnum
0002CD3C <AmiBlitz3.ab3@15757> RTS
0002CD46 <AmiBlitz3.ab3@15761>   MOVE.w cfregat,regnum
0002CD4A <AmiBlitz3.ab3@15762>    BSR.w ritefromd0
0002CD4C <AmiBlitz3.ab3@15763>   MOVE.l D5,D1
0002CD50 <AmiBlitz3.ab3@15764> BRA.w pokemovem
0002CD52 <AmiBlitz3.ab3@15768>    MOVEQ.l #-$2A,D1
0002CD58 <AmiBlitz3.ab3@15769>    TST.b fpu
0002CD5C <AmiBlitz3.ab3@15770>    BEQ 'nofpu
0002CD5E <AmiBlitz3.ab3@15771>    MOVEQ #0,d1
0002CD64 <AmiBlitz3.ab3@15772>    MOVE.w regnum,d1
0002CD66 <AmiBlitz3.ab3@15773>    MOVE.l d1,d2
0002CD68 <AmiBlitz3.ab3@15774>    ASL.l #7,d1
0002CD6A <AmiBlitz3.ab3@15775>    ADDQ  #1,d2
0002CD6C <AmiBlitz3.ab3@15776>    ASL.l #8,d2
0002CD6E <AmiBlitz3.ab3@15777>    ASL.l #2,d2
0002CD70 <AmiBlitz3.ab3@15778>    OR.l d2,d1
0002CD76 <AmiBlitz3.ab3@15779>    OR.l #$f2000038,d1
0002CD7C <AmiBlitz3.ab3@15780>    JSR writelong
0002CD80 <AmiBlitz3.ab3@15781>    MOVE.w #$f240,d1
0002CD86 <AmiBlitz3.ab3@15782>    OR.w regnum,d1
0002CD8A <AmiBlitz3.ab3@15783>    BSR writeword
0002CD8C <AmiBlitz3.ab3@15784>    MOVEQ.l #1,d2
0002CD90 <AmiBlitz3.ab3@15785>    MOVE.w #1,d1                                            ;fpu comp fseq
0002CD94 <AmiBlitz3.ab3@15786>    BSR writeword
0002CD96 <AmiBlitz3.ab3@15787>  RTS
0002CD9A <AmiBlitz3.ab3@15790>    BSR.w docflib
0002CD9E <AmiBlitz3.ab3@15791>    BSR.w doeqcmp
0002CDA2 <AmiBlitz3.ab3@15792> BRA.w docflib2
0002CDA4 <AmiBlitz3.ab3@15796>   MOVEQ.l #-$2A,D1
0002CDAA <AmiBlitz3.ab3@15797>   TST.b fpu
0002CDAE <AmiBlitz3.ab3@15798>    BEQ 'nofpu
0002CDB0 <AmiBlitz3.ab3@15799>    MOVEQ #0,d1
0002CDB6 <AmiBlitz3.ab3@15800>    MOVE.w regnum,d1
0002CDB8 <AmiBlitz3.ab3@15801>    MOVE.l d1,d2
0002CDBA <AmiBlitz3.ab3@15802>    ASL.l #7,d1
0002CDBC <AmiBlitz3.ab3@15803>    ADDQ  #1,d2
0002CDBE <AmiBlitz3.ab3@15804>    ASL.l #8,d2
0002CDC0 <AmiBlitz3.ab3@15805>    ASL.l #2,d2
0002CDC2 <AmiBlitz3.ab3@15806>    OR.l d2,d1
0002CDC8 <AmiBlitz3.ab3@15807>    OR.l #$f2000038,d1
0002CDCE <AmiBlitz3.ab3@15808>    JSR writelong
0002CDD2 <AmiBlitz3.ab3@15809>    MOVE.w #$f240,d1
0002CDD8 <AmiBlitz3.ab3@15810>    OR.w regnum,d1
0002CDDC <AmiBlitz3.ab3@15811>    BSR writeword
0002CDE2 <AmiBlitz3.ab3@15812>    MOVE.l #1,d2
0002CDE6 <AmiBlitz3.ab3@15813>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002CDEA <AmiBlitz3.ab3@15814>    BSR writeword
0002CDEC <AmiBlitz3.ab3@15815>  RTS
0002CDF0 <AmiBlitz3.ab3@15818>    BSR.w docflib
0002CDF4 <AmiBlitz3.ab3@15819>    BSR.w donecmp
0002CDF8 <AmiBlitz3.ab3@15820> BRA.w docflib2
0002CDFA <AmiBlitz3.ab3@15824>   MOVEQ.l #-$2A,D1
0002CE00 <AmiBlitz3.ab3@15825>     TST.b fpu
0002CE04 <AmiBlitz3.ab3@15826>    BEQ 'nofpu
0002CE06 <AmiBlitz3.ab3@15827>    MOVEQ #0,d1
0002CE0C <AmiBlitz3.ab3@15828>    MOVE.w regnum,d1
0002CE0E <AmiBlitz3.ab3@15829>    MOVE.l d1,d2
0002CE10 <AmiBlitz3.ab3@15830>    ASL.l #7,d1
0002CE12 <AmiBlitz3.ab3@15831>    ADDQ  #1,d2
0002CE14 <AmiBlitz3.ab3@15832>    ASL.l #8,d2
0002CE16 <AmiBlitz3.ab3@15833>    ASL.l #2,d2
0002CE18 <AmiBlitz3.ab3@15834>    OR.l d2,d1
0002CE1E <AmiBlitz3.ab3@15835>    OR.l #$f2000038,d1
0002CE24 <AmiBlitz3.ab3@15836>    JSR writelong
0002CE28 <AmiBlitz3.ab3@15837>    MOVE.w #$f240,d1
0002CE2E <AmiBlitz3.ab3@15838>    OR.w regnum,d1
0002CE32 <AmiBlitz3.ab3@15839>    BSR writeword
0002CE38 <AmiBlitz3.ab3@15840>    MOVE.l #$1,d2
0002CE3C <AmiBlitz3.ab3@15841>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002CE40 <AmiBlitz3.ab3@15842>    BSR writeword
0002CE42 <AmiBlitz3.ab3@15843>  RTS
0002CE46 <AmiBlitz3.ab3@15846>    BSR.w docflib
0002CE4A <AmiBlitz3.ab3@15847>    BSR.w doltcmp
0002CE4E <AmiBlitz3.ab3@15848> BRA.w docflib2
0002CE50 <AmiBlitz3.ab3@15852>   MOVEQ.l #-$2A,D1
0002CE56 <AmiBlitz3.ab3@15853>   TST.b fpu
0002CE5A <AmiBlitz3.ab3@15854>    BEQ 'nofpu
0002CE5C <AmiBlitz3.ab3@15855>    MOVEQ #0,d1
0002CE62 <AmiBlitz3.ab3@15856>    MOVE.w regnum,d1
0002CE64 <AmiBlitz3.ab3@15857>    MOVE.l d1,d2
0002CE66 <AmiBlitz3.ab3@15858>    ASL.l #7,d1
0002CE68 <AmiBlitz3.ab3@15859>    ADDQ  #1,d2
0002CE6A <AmiBlitz3.ab3@15860>    ASL.l #8,d2
0002CE6C <AmiBlitz3.ab3@15861>    ASL.l #2,d2
0002CE6E <AmiBlitz3.ab3@15862>    OR.l d2,d1
0002CE74 <AmiBlitz3.ab3@15863>    OR.l #$f2000038,d1
0002CE7A <AmiBlitz3.ab3@15864>    JSR writelong
0002CE7E <AmiBlitz3.ab3@15865>    MOVE.w #$f240,d1
0002CE84 <AmiBlitz3.ab3@15866>    OR.w regnum,d1
0002CE88 <AmiBlitz3.ab3@15867>    BSR writeword
0002CE8E <AmiBlitz3.ab3@15868>    MOVE.l #1,d2
0002CE92 <AmiBlitz3.ab3@15869>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002CE96 <AmiBlitz3.ab3@15870>    BSR writeword
0002CE98 <AmiBlitz3.ab3@15871>  RTS
0002CE9C <AmiBlitz3.ab3@15874>    BSR.w docflib
0002CEA0 <AmiBlitz3.ab3@15875>    BSR.w dolecmp
0002CEA4 <AmiBlitz3.ab3@15876> BRA.w docflib2
0002CEA6 <AmiBlitz3.ab3@15880>   MOVEQ.l #-$2A,D1
0002CEAC <AmiBlitz3.ab3@15881>    TST.b fpu
0002CEB0 <AmiBlitz3.ab3@15882>    BEQ 'nofpu
0002CEB2 <AmiBlitz3.ab3@15883>     MOVEQ #0,d1
0002CEB8 <AmiBlitz3.ab3@15884>    MOVE.w regnum,d1
0002CEBA <AmiBlitz3.ab3@15885>    MOVE.l d1,d2
0002CEBC <AmiBlitz3.ab3@15886>    ASL.l #7,d1
0002CEBE <AmiBlitz3.ab3@15887>    ADDQ  #1,d2
0002CEC0 <AmiBlitz3.ab3@15888>    ASL.l #8,d2
0002CEC2 <AmiBlitz3.ab3@15889>    ASL.l #2,d2
0002CEC4 <AmiBlitz3.ab3@15890>    OR.l d2,d1
0002CECA <AmiBlitz3.ab3@15891>    OR.l #$f2000038,d1
0002CED0 <AmiBlitz3.ab3@15892>    JSR writelong
0002CED4 <AmiBlitz3.ab3@15893>    MOVE.w #$f240,d1
0002CEDA <AmiBlitz3.ab3@15894>    OR.w regnum,d1
0002CEDE <AmiBlitz3.ab3@15895>    BSR writeword
0002CEE4 <AmiBlitz3.ab3@15896>    MOVE.l #1,d2
0002CEE8 <AmiBlitz3.ab3@15897>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002CEEC <AmiBlitz3.ab3@15898>    BSR writeword
0002CEEE <AmiBlitz3.ab3@15899>  RTS
0002CEF2 <AmiBlitz3.ab3@15902>    BSR.w docflib
0002CEF6 <AmiBlitz3.ab3@15903>    BSR.w dogtcmp
0002CEFA <AmiBlitz3.ab3@15904> BRA.w docflib2
0002CEFC <AmiBlitz3.ab3@15908>   MOVEQ.l #-$2A,D1
0002CF02 <AmiBlitz3.ab3@15909>  TST.b fpu
0002CF06 <AmiBlitz3.ab3@15910>    BEQ 'nofpu
0002CF08 <AmiBlitz3.ab3@15911>    MOVEQ #0,d1
0002CF0E <AmiBlitz3.ab3@15912>    MOVE.w regnum,d1
0002CF10 <AmiBlitz3.ab3@15913>    MOVE.l d1,d2
0002CF12 <AmiBlitz3.ab3@15914>    ASL.l #7,d1
0002CF14 <AmiBlitz3.ab3@15915>    ADDQ  #1,d2
0002CF16 <AmiBlitz3.ab3@15916>    ASL.l #8,d2
0002CF18 <AmiBlitz3.ab3@15917>    ASL.l #2,d2
0002CF1A <AmiBlitz3.ab3@15918>    OR.l d2,d1
0002CF20 <AmiBlitz3.ab3@15919>    OR.l #$f2000038,d1
0002CF26 <AmiBlitz3.ab3@15920>    JSR writelong
0002CF2A <AmiBlitz3.ab3@15921>    MOVE.w #$f240,d1
0002CF30 <AmiBlitz3.ab3@15922>    OR.w regnum,d1
0002CF34 <AmiBlitz3.ab3@15923>    BSR writeword
0002CF3A <AmiBlitz3.ab3@15924>    MOVE.l #1,d2
0002CF3E <AmiBlitz3.ab3@15925>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002CF42 <AmiBlitz3.ab3@15926>    BSR writeword
0002CF44 <AmiBlitz3.ab3@15927>  RTS
0002CF48 <AmiBlitz3.ab3@15930>    BSR.w docflib
0002CF4C <AmiBlitz3.ab3@15931>    BSR.w dogecmp
0002CF50 <AmiBlitz3.ab3@15932> BRA.w docflib2
0002CF56 <AmiBlitz3.ab3@15937>   MOVE.l #$CE00,D1
0002CF5C <AmiBlitz3.ab3@15938>    MOVE.l d1,lastinstruction
0002CF60 <AmiBlitz3.ab3@15939>    BSR.w Atokejsr
0002CF64 <AmiBlitz3.ab3@15940> BRA.w doeqcmp
0002CF6A <AmiBlitz3.ab3@15944>   MOVE.l #$CE00,D1
0002CF70 <AmiBlitz3.ab3@15945>    MOVE.l d1,lastinstruction
0002CF74 <AmiBlitz3.ab3@15946>    BSR.w Atokejsr
0002CF78 <AmiBlitz3.ab3@15947> BRA.w donecmp
0002CF7E <AmiBlitz3.ab3@15951>   MOVE.l #$CE00,D1
0002CF84 <AmiBlitz3.ab3@15952>    MOVE.l d1,lastinstruction
0002CF88 <AmiBlitz3.ab3@15953>    BSR.w Atokejsr
0002CF8C <AmiBlitz3.ab3@15954> BRA.w doltcmp
0002CF92 <AmiBlitz3.ab3@15958>   MOVE.l #$CE00,D1
0002CF98 <AmiBlitz3.ab3@15959>    MOVE.l d1,lastinstruction
0002CF9C <AmiBlitz3.ab3@15960>    BSR.w Atokejsr
0002CFA0 <AmiBlitz3.ab3@15961> BRA.w dolecmp
0002CFA6 <AmiBlitz3.ab3@15965>   MOVE.l #$CE00,D1
0002CFAC <AmiBlitz3.ab3@15966>    MOVE.l d1,lastinstruction
0002CFB0 <AmiBlitz3.ab3@15967>    BSR.w Atokejsr
0002CFB4 <AmiBlitz3.ab3@15968> BRA.w dogtcmp
0002CFBA <AmiBlitz3.ab3@15972>   MOVE.l #$CE00,D1
0002CFC0 <AmiBlitz3.ab3@15973>    MOVE.l d1,lastinstruction
0002CFC4 <AmiBlitz3.ab3@15974>    BSR.w Atokejsr
0002CFC8 <AmiBlitz3.ab3@15975> BRA.w dogecmp
0002CFCE <AmiBlitz3.ab3@15980>   TST.b fast                                               ;compare
0002CFD2 <AmiBlitz3.ab3@15981>   BEQ 'org
0002CFD8 <AmiBlitz3.ab3@15985>   MOVE.l destpointer,a0
0002CFDE <AmiBlitz3.ab3@15986>   SUB.l imm_addr,a0
0002CFE4 <AmiBlitz3.ab3@15987>   CMP.l #6,a0
0002CFE8 <AmiBlitz3.ab3@15988>   BNE 'l11
0002CFEE <AmiBlitz3.ab3@15989>   MOVE.l imm_addr,a0
0002CFF6 <AmiBlitz3.ab3@15990>   CMP.w #$223c,imm_addr
0002CFFA <AmiBlitz3.ab3@15991>   BNE 'org
0002D000 <AmiBlitz3.ab3@15992>   ADD.w #$8e80,-6(a4)
0002D006 <AmiBlitz3.ab3@15995>   CLR.l imm_addr
0002D008 <AmiBlitz3.ab3@15996>  RTS
0002D00E <AmiBlitz3.ab3@15999>   CMP.l #4,a0
0002D012 <AmiBlitz3.ab3@16000>   BNE 'l10
0002D016 <AmiBlitz3.ab3@16001>   CMP.b #2,d3
0002D01A <AmiBlitz3.ab3@16002>   BNE 'l11b
0002D020 <AmiBlitz3.ab3@16003>   ADD.w #$7e40,-4(a4)
0002D022 <AmiBlitz3.ab3@16004>  RTS
0002D028 <AmiBlitz3.ab3@16007>   ADD.w #$7e00,-4(a4)
0002D02A <AmiBlitz3.ab3@16008>  RTS
0002D030 <AmiBlitz3.ab3@16011>    MOVE.l destpointer,a0
0002D036 <AmiBlitz3.ab3@16012>    SUB.l load_var_addr,a0
0002D03A <AmiBlitz3.ab3@16013>    CMP.w #4,a0
0002D03E <AmiBlitz3.ab3@16014>    BNE 'org
0002D042 <AmiBlitz3.ab3@16015>    CMP.b #3,d3
0002D046 <AmiBlitz3.ab3@16016>    BCS 'lv1
0002D04C <AmiBlitz3.ab3@16017>    CLR.l load_var_addr
0002D052 <AmiBlitz3.ab3@16018>    ADD.w #$9080-$200,-4(a4)
0002D054 <AmiBlitz3.ab3@16019>  RTS
0002D058 <AmiBlitz3.ab3@16022>   CMP.b #2,d3
0002D05C <AmiBlitz3.ab3@16023>    BNE 'org
0002D062 <AmiBlitz3.ab3@16024>    CLR.l load_var_addr
0002D068 <AmiBlitz3.ab3@16025>    ADD.w #$8040-$200,-4(a4)
0002D06A <AmiBlitz3.ab3@16026>  RTS
0002D070 <AmiBlitz3.ab3@16029>   MOVE.w regnum,D3
0002D072 <AmiBlitz3.ab3@16030>   OR.w D3,D1
0002D074 <AmiBlitz3.ab3@16031>   LSL.w #8,D3
0002D076 <AmiBlitz3.ab3@16032>   LSL.w #1,D3
0002D078 <AmiBlitz3.ab3@16033>   OR.w D3,D1
0002D07A <AmiBlitz3.ab3@16034>   ADDQ.w #1,D1
0002D07E <AmiBlitz3.ab3@16035> BRA.w writeword
0002D082 <AmiBlitz3.ab3@16039>    BSR.w cmpit
0002D086 <AmiBlitz3.ab3@16042>    MOVE.w mseq(PC),D1
0002D08A <AmiBlitz3.ab3@16043> BRA.w cpoke
0002D08E <AmiBlitz3.ab3@16047>   BSR.w cmpit
0002D092 <AmiBlitz3.ab3@16050>   MOVE.w msne(PC),D1
0002D096 <AmiBlitz3.ab3@16051> BRA.w cpoke
0002D09A <AmiBlitz3.ab3@16055>   BSR.w cmpit
0002D09E <AmiBlitz3.ab3@16058>    MOVE.w mslt(PC),D1
0002D0A2 <AmiBlitz3.ab3@16059> BRA.w cpoke
0002D0A6 <AmiBlitz3.ab3@16063>    BSR.w cmpit
0002D0AA <AmiBlitz3.ab3@16066>    MOVE.w msle(PC),D1
0002D0AE <AmiBlitz3.ab3@16067> BRA.w cpoke
0002D0B2 <AmiBlitz3.ab3@16071>    BSR.w cmpit
0002D0B6 <AmiBlitz3.ab3@16074>    MOVE.w msgt(PC),D1
0002D0BA <AmiBlitz3.ab3@16075> BRA.w cpoke
0002D0BE <AmiBlitz3.ab3@16079>   BSR.w cmpit
0002D0C2 <AmiBlitz3.ab3@16082>    MOVE.w msge(PC),D1
0002D0C8 <AmiBlitz3.ab3@16085>    OR.w regnum,D1
0002D0CC <AmiBlitz3.ab3@16086>    CMP.w #5,d2
0002D0D0 <AmiBlitz3.ab3@16087>    BNE 'nod0
0002D0D4 <AmiBlitz3.ab3@16088>    CMP.w #5,d3
0002D0D8 <AmiBlitz3.ab3@16089>    BNE 'nod0
0002D0DA <AmiBlitz3.ab3@16090>    MOVE.l d1,-(a7)
0002D0E0 <AmiBlitz3.ab3@16091>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002D0E4 <AmiBlitz3.ab3@16092>    BSR writelong
0002D0E6 <AmiBlitz3.ab3@16093>    MOVE.l (a7)+,d1
0002D0EA <AmiBlitz3.ab3@16096>    BSR.w writeword                                         ;writeseq
0002D0EC <AmiBlitz3.ab3@16097>    MOVEQ.l #1,d2
0002D0F2 <AmiBlitz3.ab3@16098>    MOVE.l lasttoken,d1
0002D0F8 <AmiBlitz3.ab3@16099>     TST.b fast
0002D0FC <AmiBlitz3.ab3@16100>     BEQ.s 'l11
0002D102 <AmiBlitz3.ab3@16101>    CMP.l #$800b,d1
0002D106 <AmiBlitz3.ab3@16102>    BEQ 'l10
0002D10A <AmiBlitz3.ab3@16105>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002D110 <AmiBlitz3.ab3@16106>   OR.w regnum,D1
0002D114 <AmiBlitz3.ab3@16107>    BSR.w writeword                                         ;writeext.w
0002D116 <AmiBlitz3.ab3@16108>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002D118 <AmiBlitz3.ab3@16111> RTS
0002D11C <AmiBlitz3.ab3@16116>   MOVE.w #$D040,D1
0002D11E <AmiBlitz3.ab3@16117>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002D122 <AmiBlitz3.ab3@16118> BRA.w doplus2
0002D126 <AmiBlitz3.ab3@16122>   MOVE.w #$D040,D1
0002D128 <AmiBlitz3.ab3@16123>   MOVEQ.l #$03,D2                                          ;now a long
0002D12C <AmiBlitz3.ab3@16124>    BSR.w doplus2
0002D130 <AmiBlitz3.ab3@16125> BRA.w convert_word_to_long
0002D134 <AmiBlitz3.ab3@16129>   MOVE.w #$D080,D1                                         ;writeaddlong
0002D136 <AmiBlitz3.ab3@16132>   MOVE.w d1,a1
0002D13C <AmiBlitz3.ab3@16133>   TST.b fast
0002D140 <AmiBlitz3.ab3@16134>   BEQ 'l10
0002D142 <AmiBlitz3.ab3@16138>   ASR.w #8,d1
0002D146 <AmiBlitz3.ab3@16139>   CMP.b #$90,d1
0002D14A <AmiBlitz3.ab3@16140>   BEQ 'sub1
0002D14E <AmiBlitz3.ab3@16141>   CMP.b #$d0,d1
0002D152 <AmiBlitz3.ab3@16142>   BNE 'l10
0002D156 <AmiBlitz3.ab3@16143>   CMP.b #3,d3
0002D15A <AmiBlitz3.ab3@16144>   BCS 'lq10
0002D160 <AmiBlitz3.ab3@16145>   TST.b quickadd
0002D166 <AmiBlitz3.ab3@16149>    MOVE.l destpointer,a0
0002D16C <AmiBlitz3.ab3@16150>    CLR.b quickadd
0002D172 <AmiBlitz3.ab3@16151>    CLR.l load_var_addr
0002D178 <AmiBlitz3.ab3@16152>    SUB.l imm_addr,a0
0002D17C <AmiBlitz3.ab3@16153>    CMP.w #6,a0
0002D180 <AmiBlitz3.ab3@16154>    BEQ 'li10
0002D184 <AmiBlitz3.ab3@16155>    CMP.w #4,a0
0002D188 <AmiBlitz3.ab3@16156>    BNE.s 'li1
0002D18E <AmiBlitz3.ab3@16157>    CLR.l imm_addr
0002D194 <AmiBlitz3.ab3@16158>    ADD.w #$a040-$200,-4(a4)
0002D196 <AmiBlitz3.ab3@16159>  RTS
0002D198 <AmiBlitz3.ab3@16162>    MOVE.l a4,a0
0002D19E <AmiBlitz3.ab3@16163>    SUB.l load_var_addr,a0
0002D1A4 <AmiBlitz3.ab3@16164>    CMP.l #$a,a0
0002D1A8 <AmiBlitz3.ab3@16165>    BNE 'l10e
0002D1AE <AmiBlitz3.ab3@16166>    CLR.l load_var_addr
0002D1B2 <AmiBlitz3.ab3@16167>    MOVE.w -$8(a4),d1
0002D1B8 <AmiBlitz3.ab3@16168>    MOVE.l -$4(a4),-$8(a4)
0002D1BC <AmiBlitz3.ab3@16169>    MOVE.w d1,-$4(a4)
0002D1C2 <AmiBlitz3.ab3@16170>    SUB.w #$1980,-$a(a4)
0002D1C8 <AmiBlitz3.ab3@16171>    SUBQ.l #2,destpointer
0002D1CA <AmiBlitz3.ab3@16172>  RTS
0002D1D0 <AmiBlitz3.ab3@16175>   CLR.b quickadd
0002D1D4 <AmiBlitz3.ab3@16176>  BRA 'l10
0002D1DA <AmiBlitz3.ab3@16179>    CLR.l imm_addr
0002D1DE <AmiBlitz3.ab3@16180>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002D1E2 <AmiBlitz3.ab3@16181>    BNE 'doit
0002D1E8 <AmiBlitz3.ab3@16182>    SUBQ.l #6,destpointer
0002D1EA <AmiBlitz3.ab3@16183>  RTS
0002D1F0 <AmiBlitz3.ab3@16186>    ADD.w #$b080-$200,-6(a4)
0002D1F2 <AmiBlitz3.ab3@16187>  RTS
0002D1F8 <AmiBlitz3.ab3@16190>    MOVE.l destpointer,a0
0002D1FE <AmiBlitz3.ab3@16191>    SUB.l load_var_addr,a0
0002D202 <AmiBlitz3.ab3@16192>    CMP.w #4,a0
0002D206 <AmiBlitz3.ab3@16193>    BNE 'l10
0002D20A <AmiBlitz3.ab3@16194>    CMP.b #3,d3
0002D20E <AmiBlitz3.ab3@16195>    BNE 'lv1
0002D214 <AmiBlitz3.ab3@16196>    CLR.l load_var_addr
0002D21A <AmiBlitz3.ab3@16197>    ADD.w #$b080-$200,-4(a4)
0002D21C <AmiBlitz3.ab3@16198>  RTS
0002D220 <AmiBlitz3.ab3@16201>   CMP.b #2,d3
0002D224 <AmiBlitz3.ab3@16202>   BNE 'l10
0002D22A <AmiBlitz3.ab3@16203>   CLR.l load_var_addr
0002D230 <AmiBlitz3.ab3@16204>   ADD.w #$a040-$200,-4(a4)
0002D232 <AmiBlitz3.ab3@16205>  RTS
0002D238 <AmiBlitz3.ab3@16208>   MOVE.w regnum,D3
0002D23A <AmiBlitz3.ab3@16209>   MOVE.w a1,d1
0002D23C <AmiBlitz3.ab3@16210>   OR.w D3,D1
0002D23E <AmiBlitz3.ab3@16211>   ADDQ.w #1,D1
0002D240 <AmiBlitz3.ab3@16212>   LSL.w #8,D3
0002D242 <AmiBlitz3.ab3@16213>   LSL.w #1,D3
0002D244 <AmiBlitz3.ab3@16214>   OR.w D3,D1
0002D248 <AmiBlitz3.ab3@16215>  BRA.w writeword
0002D24C <AmiBlitz3.ab3@16218>    CMP.b #3,d3
0002D250 <AmiBlitz3.ab3@16219>    BCS 'sub1_lq10
0002D256 <AmiBlitz3.ab3@16220>    TST.b quickadd
0002D25C <AmiBlitz3.ab3@16224>    MOVE.l destpointer,a0
0002D262 <AmiBlitz3.ab3@16225>    CLR.b quickadd
0002D268 <AmiBlitz3.ab3@16226>    CLR.l load_var_addr
0002D26E <AmiBlitz3.ab3@16227>    SUB.l imm_addr,a0
0002D272 <AmiBlitz3.ab3@16228>    CMP.w #6,a0
0002D276 <AmiBlitz3.ab3@16229>    BEQ 'sub1_li10
0002D27A <AmiBlitz3.ab3@16230>    CMP.w #4,a0
0002D27E <AmiBlitz3.ab3@16231>    BNE.s 'sub1_li1
0002D284 <AmiBlitz3.ab3@16232>    CLR.l imm_addr
0002D28A <AmiBlitz3.ab3@16233>    ADD.w #$6040-$200,-4(a4)
0002D28C <AmiBlitz3.ab3@16234>  RTS
0002D28E <AmiBlitz3.ab3@16237>    MOVE.l a4,a0
0002D294 <AmiBlitz3.ab3@16238>     SUB.l load_var_addr,a0
0002D29A <AmiBlitz3.ab3@16239>     CMP.l #$a,a0
0002D29E <AmiBlitz3.ab3@16240>     BNE 'sub1_l10e
0002D2A4 <AmiBlitz3.ab3@16241>    CLR.l load_var_addr
0002D2A8 <AmiBlitz3.ab3@16242>    MOVE.w -$8(a4),d1
0002D2AE <AmiBlitz3.ab3@16243>    MOVE.l -$4(a4),-$8(a4)
0002D2B2 <AmiBlitz3.ab3@16244>    MOVE.w d1,-$4(a4)
0002D2B8 <AmiBlitz3.ab3@16245>    SUB.w #$1b80,-$a(a4)
0002D2BE <AmiBlitz3.ab3@16246>    SUBQ.l #2,destpointer
0002D2C0 <AmiBlitz3.ab3@16247>  RTS
0002D2C6 <AmiBlitz3.ab3@16250>   CLR.b quickadd
0002D2CA <AmiBlitz3.ab3@16251>  BRA 'sub1_l10
0002D2D0 <AmiBlitz3.ab3@16254>    CLR.l imm_addr
0002D2D6 <AmiBlitz3.ab3@16255>    ADD.w #$7080-$200,-6(a4)
0002D2D8 <AmiBlitz3.ab3@16256>  RTS
0002D2DE <AmiBlitz3.ab3@16259>    MOVE.l destpointer,a0
0002D2E4 <AmiBlitz3.ab3@16260>    SUB.l load_var_addr,a0
0002D2E8 <AmiBlitz3.ab3@16261>    CMP.w #4,a0
0002D2EC <AmiBlitz3.ab3@16262>    BNE 'sub1_l10
0002D2F0 <AmiBlitz3.ab3@16263>    CMP.b #3,d3
0002D2F4 <AmiBlitz3.ab3@16264>    BNE 'sub1_lv1
0002D2FA <AmiBlitz3.ab3@16265>    CLR.l load_var_addr
0002D300 <AmiBlitz3.ab3@16266>    ADD.w #$7080-$200,-4(a4)
0002D302 <AmiBlitz3.ab3@16267>  RTS
0002D306 <AmiBlitz3.ab3@16270>    CMP.b #2,d3
0002D30A <AmiBlitz3.ab3@16271>    BNE 'sub1_l10
0002D310 <AmiBlitz3.ab3@16272>    CLR.l load_var_addr
0002D316 <AmiBlitz3.ab3@16273>    ADD.w #$6040-$200,-4(a4)
0002D318 <AmiBlitz3.ab3@16274>  RTS
0002D31E <AmiBlitz3.ab3@16277>   MOVE.w regnum,D3
0002D320 <AmiBlitz3.ab3@16278>   MOVE.w a1,d1
0002D322 <AmiBlitz3.ab3@16279>   OR.w D3,D1
0002D324 <AmiBlitz3.ab3@16280>   ADDQ.w #1,D1
0002D326 <AmiBlitz3.ab3@16281>   LSL.w #8,D3
0002D328 <AmiBlitz3.ab3@16282>   LSL.w #1,D3
0002D32A <AmiBlitz3.ab3@16283>   OR.w D3,D1
0002D32E <AmiBlitz3.ab3@16284> BRA.w writeword
0002D330 <AmiBlitz3.ab3@16288>   MOVEQ #0,d0
0002D336 <AmiBlitz3.ab3@16289>   MOVE.w regnum,d0
0002D338 <AmiBlitz3.ab3@16290>   ADDQ #1,d0
0002D33A <AmiBlitz3.ab3@16291>   ASL.w #8,d0
0002D33C <AmiBlitz3.ab3@16292>   ASL.w #2,d0
0002D342 <AmiBlitz3.ab3@16293>   MOVE.l #$f2000022,d1                                     ;fpu add
0002D344 <AmiBlitz3.ab3@16294>   OR.l d0,d1
0002D34A <AmiBlitz3.ab3@16295>   MOVE.w regnum,d0
0002D34C <AmiBlitz3.ab3@16296>   ASL.w #7,d0
0002D34E <AmiBlitz3.ab3@16297>   OR.l d0,d1
0002D352 <AmiBlitz3.ab3@16298> BRA.w writelong
0002D358 <AmiBlitz3.ab3@16305>   TST.b iee
0002D35C <AmiBlitz3.ab3@16306>   BNE do_plus_float_fadd1
0002D360 <AmiBlitz3.ab3@16307>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002D366 <AmiBlitz3.ab3@16310>    MOVE.w D1,libjsr+2
0002D36A <AmiBlitz3.ab3@16311>    BSR.w savereg
0002D36C <AmiBlitz3.ab3@16312>   MOVE.l D4,D1
0002D370 <AmiBlitz3.ab3@16313>    BSR.w pokemovem
0002D374 <AmiBlitz3.ab3@16314>   MOVE.w #$C900,D1
0002D378 <AmiBlitz3.ab3@16315>    BSR.w Atokejsr
0002D37C <AmiBlitz3.ab3@16316>    BSR.w ritetod0
0002D382 <AmiBlitz3.ab3@16317>   MOVE.l libjsr,D1
0002D386 <AmiBlitz3.ab3@16318>    BSR.w writelong
0002D38A <AmiBlitz3.ab3@16319>    BSR.w ritefromd0
0002D38C <AmiBlitz3.ab3@16320>   MOVE.l D5,D1
0002D390 <AmiBlitz3.ab3@16321> BRA.w pokemovem
0002D396 <AmiBlitz3.ab3@16325>   MOVE.w regnum,D1
0002D398 <AmiBlitz3.ab3@16326>   LSL.w #8,D1
0002D39A <AmiBlitz3.ab3@16327>   LSL.w #1,D1
0002D39C <AmiBlitz3.ab3@16328>   MOVE.w D1,-(A7)
0002D3A0 <AmiBlitz3.ab3@16329>   CMP.w #3072,d1
0002D3A4 <AmiBlitz3.ab3@16330>   BEQ 'l1
0002D3AA <AmiBlitz3.ab3@16331>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002D3AE <AmiBlitz3.ab3@16332> BRA 'l2
0002D3B2 <AmiBlitz3.ab3@16335>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002D3B6 <AmiBlitz3.ab3@16338>    BSR.w writeword
0002D3B8 <AmiBlitz3.ab3@16339>   MOVE.w (A7)+,D1
0002D3BE <AmiBlitz3.ab3@16340>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002D3C2 <AmiBlitz3.ab3@16341> BRA.w writeword
0002D3C6 <AmiBlitz3.ab3@16347>   MOVE.w #$9040,D1
0002D3CA <AmiBlitz3.ab3@16348> BRA.w doplus2
0002D3CE <AmiBlitz3.ab3@16352>   MOVE.w #$9040,D1
0002D3D2 <AmiBlitz3.ab3@16353> BRA.w doplus2
0002D3D6 <AmiBlitz3.ab3@16357>   MOVE.w #$9080,D1
0002D3DA <AmiBlitz3.ab3@16358> BRA.w doplus2
0002D3E0 <AmiBlitz3.ab3@16362>    TST.b iee
0002D3E4 <AmiBlitz3.ab3@16363>     BNE 'fs1
0002D3E8 <AmiBlitz3.ab3@16364>   MOVE.w #$FFB8,D1                                         ;floatsub
0002D3EC <AmiBlitz3.ab3@16365> BRA.w doflib
0002D3EE <AmiBlitz3.ab3@16368>   MOVEQ #0,d0
0002D3F4 <AmiBlitz3.ab3@16369>   MOVE.w regnum,d0
0002D3F6 <AmiBlitz3.ab3@16370>   ADDQ #1,d0
0002D3F8 <AmiBlitz3.ab3@16371>   ASL.w #8,d0
0002D3FA <AmiBlitz3.ab3@16372>   ASL.w #2,d0
0002D400 <AmiBlitz3.ab3@16373>   MOVE.l #$f2000028,d1
0002D402 <AmiBlitz3.ab3@16374>   OR.l d0,d1
0002D408 <AmiBlitz3.ab3@16375>   MOVE.w regnum,d0
0002D40A <AmiBlitz3.ab3@16376>   ASL.w #7,d0
0002D40C <AmiBlitz3.ab3@16377>   OR.l d0,d1
0002D410 <AmiBlitz3.ab3@16378> BRA.w writelong
0002D414 <AmiBlitz3.ab3@16384>   MOVE.w #$C1C0,D1
0002D416 <AmiBlitz3.ab3@16385>   MOVEQ.l #$02,D2                                          ;now a word
0002D41A <AmiBlitz3.ab3@16386> BRA.w doplus2
0002D41E <AmiBlitz3.ab3@16390>   MOVE.w #$C1C0,D1
0002D420 <AmiBlitz3.ab3@16391>   MOVEQ.l #$03,D2                                          ;now a long.
0002D424 <AmiBlitz3.ab3@16392> BRA.w doplus2
0002D428 <AmiBlitz3.ab3@16396>   MOVE.w #$CA00,D1                                         ;quickmul
0002D42C <AmiBlitz3.ab3@16397> BRA.w domylib
0002D432 <AmiBlitz3.ab3@16401>   TST.b fast
0002D436 <AmiBlitz3.ab3@16402>   BNE.s 'l10
0002D43A <AmiBlitz3.ab3@16403>   MOVE.w #$CA01,D1                                         ;writelongmul
0002D43E <AmiBlitz3.ab3@16404> BRA.w domylib
0002D444 <AmiBlitz3.ab3@16413>    MOVE.l destpointer,a0
0002D44A <AmiBlitz3.ab3@16414>    SUB.l imm_addr,a0
0002D44E <AmiBlitz3.ab3@16415>    CMP.w #6,a0
0002D452 <AmiBlitz3.ab3@16416>    BNE 'li1
0002D454 <AmiBlitz3.ab3@16417>    MOVEQ.l #2,d1
0002D456 <AmiBlitz3.ab3@16418>    MOVEQ #1,d3
0002D45A <AmiBlitz3.ab3@16421>   CMP.l -4(a4),d1
0002D45E <AmiBlitz3.ab3@16422>    BEQ 'oklsl
0002D460 <AmiBlitz3.ab3@16423>     LSL.l #1,d1
0002D466 <AmiBlitz3.ab3@16424>     ADD.l #1,d3
0002D46C <AmiBlitz3.ab3@16425>     CMP.l #9,d3
0002D470 <AmiBlitz3.ab3@16426>     BNE 'ag
0002D474 <AmiBlitz3.ab3@16427>    MOVE.w -2(a4),d1
0002D478 <AmiBlitz3.ab3@16428>    BSR writeword
0002D47E <AmiBlitz3.ab3@16429>    MOVE.w -6(a4),-4(a4)
0002D486 <AmiBlitz3.ab3@16430>    MOVE.l #$4c3c0800,-8(a4)
0002D48C <AmiBlitz3.ab3@16431>    MOVE.w regnum,D3
0002D490 <AmiBlitz3.ab3@16432>    MULS #$1000,D3
0002D494 <AmiBlitz3.ab3@16433>    OR.w D3,-6(a4)
0002D49A <AmiBlitz3.ab3@16434>    CLR.l load_var_addr
0002D4A0 <AmiBlitz3.ab3@16435>    CLR.l imm_addr
0002D4A4 <AmiBlitz3.ab3@16436> BRA 'li3
0002D4A8 <AmiBlitz3.ab3@16439>    CMP.w #8,d3
0002D4AC <AmiBlitz3.ab3@16440>    BEQ 'ok
0002D4AE <AmiBlitz3.ab3@16441>    ASL.l #1,d3
0002D4B0 <AmiBlitz3.ab3@16442>    ASL.l #8,d3
0002D4B4 <AmiBlitz3.ab3@16443>    MOVE.w #$e188,d1
0002D4B6 <AmiBlitz3.ab3@16444>    OR.w d3,d1
0002D4BA <AmiBlitz3.ab3@16445>    MOVE.w d1,-6(a4)
0002D4BE <AmiBlitz3.ab3@16446> BRA 'okls
0002D4C4 <AmiBlitz3.ab3@16449>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002D4CA <AmiBlitz3.ab3@16452>   MOVE.w regnum,d3
0002D4CE <AmiBlitz3.ab3@16453>    OR.b d3,-5(a4)
0002D4D4 <AmiBlitz3.ab3@16454>    SUBQ.l #4,destpointer
0002D4DA <AmiBlitz3.ab3@16455>    CLR.l load_var_addr
0002D4E0 <AmiBlitz3.ab3@16456>    CLR.l imm_addr
0002D4E4 <AmiBlitz3.ab3@16457> BRA 'li3
0002D4EA <AmiBlitz3.ab3@16460>    MOVE.l destpointer,a0
0002D4F0 <AmiBlitz3.ab3@16461>    SUB.l load_var_addr,a0
0002D4F4 <AmiBlitz3.ab3@16462>    CMP.w #4,a0
0002D4F8 <AmiBlitz3.ab3@16463>    BNE 'li2
0002D4FC <AmiBlitz3.ab3@16464>    MOVE.w -2(a4),d1
0002D500 <AmiBlitz3.ab3@16465>    BSR writeword
0002D506 <AmiBlitz3.ab3@16466>    MOVE.b #$4c,-6(a4)
0002D50C <AmiBlitz3.ab3@16467>    MOVE.w #$0800,-4(a4)
0002D512 <AmiBlitz3.ab3@16468>    MOVE.w regnum,D3
0002D516 <AmiBlitz3.ab3@16469>    MULS #$1000,d3
0002D51A <AmiBlitz3.ab3@16470>    OR.w D3,-4(a4)
0002D51E <AmiBlitz3.ab3@16471> BRA 'li3
0002D524 <AmiBlitz3.ab3@16474>    MOVE.l #$4c010800,d1
0002D52A <AmiBlitz3.ab3@16475>    MOVE.w regnum,D3
0002D52C <AmiBlitz3.ab3@16476>    EXT.l d3
0002D530 <AmiBlitz3.ab3@16477>    MULS #$1000,d3
0002D532 <AmiBlitz3.ab3@16478>    OR.w D3,d1
0002D536 <AmiBlitz3.ab3@16479>    MULS #$10,d3
0002D538 <AmiBlitz3.ab3@16480>    ADD.l d3,d1
0002D53C <AmiBlitz3.ab3@16481>    BSR writelong
0002D53E <AmiBlitz3.ab3@16486> RTS
0002D540 <AmiBlitz3.ab3@16490>   MOVE.w D1,-(A7)
0002D544 <AmiBlitz3.ab3@16491>    BSR.w savereg
0002D546 <AmiBlitz3.ab3@16492>   MOVE.l D4,D1
0002D54A <AmiBlitz3.ab3@16493>    BSR.w pokemovem
0002D54E <AmiBlitz3.ab3@16494>    BSR.w ritetod0
0002D550 <AmiBlitz3.ab3@16495>   MOVEQ #0,d1
0002D552 <AmiBlitz3.ab3@16496>   MOVE.w (A7)+,D1
0002D558 <AmiBlitz3.ab3@16497>   MOVE.l d1,lastinstruction
0002D55C <AmiBlitz3.ab3@16498>    BSR.w Atokejsr
0002D560 <AmiBlitz3.ab3@16499>    BSR.w ritefromd0
0002D562 <AmiBlitz3.ab3@16500>   MOVE.l D5,D1
0002D566 <AmiBlitz3.ab3@16501> BRA.w pokemovem
0002D56C <AmiBlitz3.ab3@16505>    TST.b iee
0002D570 <AmiBlitz3.ab3@16506>     BNE fm1
0002D574 <AmiBlitz3.ab3@16507>  MOVE.w #$FFB2,D1                                          ;floatmul
0002D578 <AmiBlitz3.ab3@16508> BRA.w doflib
0002D57A <AmiBlitz3.ab3@16511>   MOVEQ #0,d0
0002D580 <AmiBlitz3.ab3@16512>  MOVE.w regnum,d0
0002D582 <AmiBlitz3.ab3@16513>  ADDQ #1,d0
0002D584 <AmiBlitz3.ab3@16514>  ASL.w #8,d0
0002D586 <AmiBlitz3.ab3@16515>  ASL.w #2,d0
0002D58C <AmiBlitz3.ab3@16516>  MOVE.l #$f2000023,d1
0002D58E <AmiBlitz3.ab3@16517>  OR.l d0,d1
0002D594 <AmiBlitz3.ab3@16518>  MOVE.w regnum,d0
0002D596 <AmiBlitz3.ab3@16519>  ASL.w #7,d0
0002D598 <AmiBlitz3.ab3@16520>  OR.l d0,d1
0002D59C <AmiBlitz3.ab3@16521> BRA.w writelong
0002D59E <AmiBlitz3.ab3@16525>   MOVE.w D2,-(A7)                                          ;dopow
0002D5A0 <AmiBlitz3.ab3@16526>   MOVE.w D2,D3
0002D5A2 <AmiBlitz3.ab3@16527>   MOVEQ.l #$05,D2
0002D5A6 <AmiBlitz3.ab3@16528>    BSR.w convtypef
0002D5AC <AmiBlitz3.ab3@16529>   ADDQ.w #1,regnum
0002D5AE <AmiBlitz3.ab3@16530>   MOVE.w (A7)+,D3
0002D5B0 <AmiBlitz3.ab3@16531>   MOVEQ.l #$05,D2
0002D5B4 <AmiBlitz3.ab3@16532>    BSR.w writeconvertcode
0002D5BA <AmiBlitz3.ab3@16533>   SUBQ.w #1,regnum
0002D5BE <AmiBlitz3.ab3@16534>    BSR.w nocando
0002D5C4 <AmiBlitz3.ab3@16535>    TST.b fpu
0002D5C8 <AmiBlitz3.ab3@16536>    BEQ 'old
0002D5CA <AmiBlitz3.ab3@16537>    MOVEQ #0,d1
0002D5D0 <AmiBlitz3.ab3@16538>    MOVE.w regnum,d1
0002D5D2 <AmiBlitz3.ab3@16539>   MOVE.l d1,d0
0002D5D4 <AmiBlitz3.ab3@16540>   ASL.w #7,d1
0002D5D6 <AmiBlitz3.ab3@16541>   ASL.w #8,d0
0002D5D8 <AmiBlitz3.ab3@16542>   ASL.w #2,d0
0002D5DA <AmiBlitz3.ab3@16543>   OR.w d0,d1
0002D5DC <AmiBlitz3.ab3@16544>   MOVE.l d1,-(a7)
0002D5E2 <AmiBlitz3.ab3@16546>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D5E6 <AmiBlitz3.ab3@16547>    BSR writelong
0002D5EC <AmiBlitz3.ab3@16548>    MOVE.w regnum,d0
0002D5EE <AmiBlitz3.ab3@16549>  ADDQ #1,d0
0002D5F0 <AmiBlitz3.ab3@16550>  ASL.w #8,d0
0002D5F2 <AmiBlitz3.ab3@16551>  ASL.w #2,d0
0002D5F8 <AmiBlitz3.ab3@16552>  MOVE.l #$f2000023,d1
0002D5FA <AmiBlitz3.ab3@16553>  OR.l d0,d1
0002D600 <AmiBlitz3.ab3@16554>  MOVE.w regnum,d0
0002D602 <AmiBlitz3.ab3@16555>  ASL.w #7,d0
0002D604 <AmiBlitz3.ab3@16556>  OR.l d0,d1
0002D60A <AmiBlitz3.ab3@16557>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D60E <AmiBlitz3.ab3@16558>    BSR writelong
0002D610 <AmiBlitz3.ab3@16559>    MOVE.l (a7)+,d1
0002D616 <AmiBlitz3.ab3@16561>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D61A <AmiBlitz3.ab3@16562>    BSR writelong
0002D61C <AmiBlitz3.ab3@16563> RTS
0002D620 <AmiBlitz3.ab3@16566>   MOVE.w #$6001,D1
0002D624 <AmiBlitz3.ab3@16567> BRA.w domylib
0002D628 <AmiBlitz3.ab3@16573>   MOVEA.l forthsp(PC),A0
0002D62C <AmiBlitz3.ab3@16574>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D62E <AmiBlitz3.ab3@16575> RTS
0002D632 <AmiBlitz3.ab3@16581>   MOVE.w #$D400,D1
0002D636 <AmiBlitz3.ab3@16582> BRA.w domylib
0002D63A <AmiBlitz3.ab3@16586>   MOVE.w #$D401,D1
0002D63E <AmiBlitz3.ab3@16587> BRA.w domylib
0002D642 <AmiBlitz3.ab3@16591>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D646 <AmiBlitz3.ab3@16592>   MOVE.w #$D402,D1
0002D64A <AmiBlitz3.ab3@16593> BRA.w domylib
0002D64E <AmiBlitz3.ab3@16597>   MOVE.w #$D403,D1
0002D650 <AmiBlitz3.ab3@16598>   MOVEQ.l #$02,D2                                          ;now a word.
0002D654 <AmiBlitz3.ab3@16599> BRA.w domylib
0002D658 <AmiBlitz3.ab3@16603>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D65E <AmiBlitz3.ab3@16604>   TST.b fpu
0002D662 <AmiBlitz3.ab3@16605>   BEQ 'old
0002D664 <AmiBlitz3.ab3@16606>   MOVEQ #0,d1
0002D66A <AmiBlitz3.ab3@16607>   MOVE.w regnum,d1                                         ;fpu mod
0002D66C <AmiBlitz3.ab3@16608>   MOVE.l d1,d0
0002D66E <AmiBlitz3.ab3@16609>   ADDQ.l #1,d1
0002D670 <AmiBlitz3.ab3@16610>   ASL.l #7,d0
0002D672 <AmiBlitz3.ab3@16611>   ASL.l #8,d1
0002D674 <AmiBlitz3.ab3@16612>   ASL.l #2,d1
0002D676 <AmiBlitz3.ab3@16613>   OR.l d0,d1
0002D678 <AmiBlitz3.ab3@16614>   MOVE.l d0,-(a7)
0002D67E <AmiBlitz3.ab3@16615>   OR.l #$f2000021,d1
0002D682 <AmiBlitz3.ab3@16616>   BSR writelong
0002D684 <AmiBlitz3.ab3@16617>   MOVE.l (a7)+,d0
0002D686 <AmiBlitz3.ab3@16618>  RTS
0002D68A <AmiBlitz3.ab3@16621>   MOVE.w #$D404,D1
0002D68C <AmiBlitz3.ab3@16622>   MOVEQ.l #$03,D2                                          ;now a long
0002D690 <AmiBlitz3.ab3@16623> BRA.w domylib
0002D694 <AmiBlitz3.ab3@16631>   MOVE.w #$48C0,D1
0002D69A <AmiBlitz3.ab3@16632>   OR.w regnum,D1
0002D69E <AmiBlitz3.ab3@16633>    BSR.w writeword
0002D6A0 <AmiBlitz3.ab3@16634>   ADDQ.w #1,D1
0002D6A4 <AmiBlitz3.ab3@16635>    BSR.w writeword
0002D6A8 <AmiBlitz3.ab3@16638>    MOVE.w #$48C0,D1
0002D6AE <AmiBlitz3.ab3@16639>   OR.w regnum,D1
0002D6B2 <AmiBlitz3.ab3@16640>    BSR.w writeword
0002D6B6 <AmiBlitz3.ab3@16641>   MOVE.w #$81C0,D1
0002D6BA <AmiBlitz3.ab3@16642> BRA.w doplus2
0002D6C0 <AmiBlitz3.ab3@16646>   TST.b fast
0002D6C4 <AmiBlitz3.ab3@16647>   BNE.s 'l10
0002D6C8 <AmiBlitz3.ab3@16648>   MOVE.w #$CB01,D1
0002D6CC <AmiBlitz3.ab3@16649> BRA.w domylib
0002D6D0 <AmiBlitz3.ab3@16655>   BSR.w savereg
0002D6D2 <AmiBlitz3.ab3@16656>   MOVE.l D4,D1
0002D6D6 <AmiBlitz3.ab3@16657>    BSR.w pokemovem
0002D6DA <AmiBlitz3.ab3@16658>    BSR.w ritetod0
0002D6E0 <AmiBlitz3.ab3@16672>    MOVE.l #$4c410800,d1
0002D6E4 <AmiBlitz3.ab3@16673>    BSR writelong
0002D6E8 <AmiBlitz3.ab3@16676>   MOVE.w #$4e71,d1
0002D6EC <AmiBlitz3.ab3@16678>    BSR.w ritefromd0
0002D6EE <AmiBlitz3.ab3@16679>   MOVE.l D5,D1
0002D6F2 <AmiBlitz3.ab3@16680> BRA.w pokemovem
0002D6F6 <AmiBlitz3.ab3@16683>     CMP.w #8,d3
0002D6FA <AmiBlitz3.ab3@16684>     BEQ 'ok
0002D6FC <AmiBlitz3.ab3@16685>     ASL.l #1,d3
0002D6FE <AmiBlitz3.ab3@16686>     ASL.l #8,d3
0002D702 <AmiBlitz3.ab3@16687>     MOVE.w #$e080,d1
0002D704 <AmiBlitz3.ab3@16688>     OR.w d3,d1
0002D708 <AmiBlitz3.ab3@16689> BRA 'oklsr2
0002D70C <AmiBlitz3.ab3@16692>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D712 <AmiBlitz3.ab3@16695>      SUBQ.l #6,destpointer
0002D716 <AmiBlitz3.ab3@16696>      BSR writeword
0002D718 <AmiBlitz3.ab3@16697>      MOVE.l (a7)+,d3
0002D71A <AmiBlitz3.ab3@16698>      MOVEQ #0,d1
0002D720 <AmiBlitz3.ab3@16699>      CLR.l load_var_addr
0002D726 <AmiBlitz3.ab3@16700>      CLR.l imm_addr
0002D72A <AmiBlitz3.ab3@16701> BRA pokemovem
0002D72E <AmiBlitz3.ab3@16705>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D732 <AmiBlitz3.ab3@16706> BRA.w domylib
0002D738 <AmiBlitz3.ab3@16710>    TST.b iee
0002D73C <AmiBlitz3.ab3@16711>    BNE fdiv1
0002D740 <AmiBlitz3.ab3@16712>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D744 <AmiBlitz3.ab3@16713> BRA.w doflib
0002D746 <AmiBlitz3.ab3@16717>   MOVEQ #0,d0
0002D74C <AmiBlitz3.ab3@16718>   MOVE.w regnum,d0
0002D74E <AmiBlitz3.ab3@16719>   ADDQ #1,d0
0002D750 <AmiBlitz3.ab3@16720>   ASL.w #8,d0
0002D752 <AmiBlitz3.ab3@16721>   ASL.w #2,d0
0002D758 <AmiBlitz3.ab3@16722>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D75A <AmiBlitz3.ab3@16723>   OR.l d0,d1
0002D760 <AmiBlitz3.ab3@16724>   MOVE.w regnum,d0
0002D762 <AmiBlitz3.ab3@16725>   ASL.w #7,d0
0002D764 <AmiBlitz3.ab3@16726>   OR.l d0,d1
0002D768 <AmiBlitz3.ab3@16727> BRA.w writelong
0002D76C <AmiBlitz3.ab3@16731>   MOVE.w #$C000,D1
0002D770 <AmiBlitz3.ab3@16732> BRA.w doplus2
0002D774 <AmiBlitz3.ab3@16736>   MOVE.w #$C040,D1
0002D778 <AmiBlitz3.ab3@16737> BRA.w doplus2
0002D77C <AmiBlitz3.ab3@16741>   MOVE.w #$C080,D1
0002D780 <AmiBlitz3.ab3@16742> BRA.w doplus2
0002D784 <AmiBlitz3.ab3@16746>   MOVE.w #$8000,D1
0002D788 <AmiBlitz3.ab3@16747> BRA.w doplus2
0002D78C <AmiBlitz3.ab3@16751>   MOVE.w #$8040,D1
0002D790 <AmiBlitz3.ab3@16752> BRA.w doplus2
0002D794 <AmiBlitz3.ab3@16756>   MOVE.w #$8080,D1
0002D798 <AmiBlitz3.ab3@16757> BRA.w doplus2
0002D79C <AmiBlitz3.ab3@16761>   MOVE.w #$B100,D1
0002D7A2 <AmiBlitz3.ab3@16764>    MOVE.w regnum,D3
0002D7A4 <AmiBlitz3.ab3@16765>   OR.w D3,D1
0002D7A6 <AmiBlitz3.ab3@16766>   ADDQ.w #1,D3
0002D7A8 <AmiBlitz3.ab3@16767>   LSL.w #8,D3
0002D7AA <AmiBlitz3.ab3@16768>   LSL.w #1,D3
0002D7AC <AmiBlitz3.ab3@16769>   OR.w D3,D1
0002D7B0 <AmiBlitz3.ab3@16770> BRA.w writeword
0002D7B4 <AmiBlitz3.ab3@16774>   MOVE.w #$B140,D1
0002D7B8 <AmiBlitz3.ab3@16775> BRA.w doeor2
0002D7BC <AmiBlitz3.ab3@16779>   MOVE.w #$B180,D1
0002D7C0 <AmiBlitz3.ab3@16780> BRA.w doeor2
0002D7C4 <AmiBlitz3.ab3@16784>   MOVE.w #$E1A8,D1
0002D7C8 <AmiBlitz3.ab3@16785> BRA.w shpoke
0002D7CC <AmiBlitz3.ab3@16789>   MOVE.w #$E0A8,D1
0002D7D0 <AmiBlitz3.ab3@16790> BRA.w shpoke
0002D7D4 <AmiBlitz3.ab3@16794>   MOVE.w #$E0A0,D1
0002D7D8 <AmiBlitz3.ab3@16795> BRA.w shpoke
0002D7DA <AmiBlitz3.ab3@16799>   MOVE.w D1,-(A7)
0002D7E0 <AmiBlitz3.ab3@16800>   ADDQ.w #1,regnum   ;make second a word!
0002D7E2 <AmiBlitz3.ab3@16801>   MOVE.w D2,-(A7)
0002D7E4 <AmiBlitz3.ab3@16802>   MOVE.w D2,D3
0002D7E6 <AmiBlitz3.ab3@16803>   MOVEQ.l #$02,D2
0002D7EA <AmiBlitz3.ab3@16810>    BSR.w writeconvertcode
0002D7EC <AmiBlitz3.ab3@16814>   MOVE.w (A7)+,D2     ;type
0002D7F2 <AmiBlitz3.ab3@16815>   SUBQ.w #1,regnum
0002D7F6 <AmiBlitz3.ab3@16816>   CMP.w #$4,D2        ;don't fuck with quix
0002D7FA <AmiBlitz3.ab3@16817>    BEQ.w 'skip
0002D7FC <AmiBlitz3.ab3@16818>   MOVE.w D2,D3
0002D7FE <AmiBlitz3.ab3@16819>   MOVEQ.l #$03,D2
0002D802 <AmiBlitz3.ab3@16820>    BSR.w convtypef    ;make first (and current) a long
0002D804 <AmiBlitz3.ab3@16823>    MOVE.w (A7)+,D1
0002D80A <AmiBlitz3.ab3@16825>   MOVE.w regnum,D3
0002D80C <AmiBlitz3.ab3@16826>   OR.w D3,D1
0002D80E <AmiBlitz3.ab3@16827>   ADDQ.w #1,D3
0002D810 <AmiBlitz3.ab3@16828>   LSL.w #8,D3
0002D812 <AmiBlitz3.ab3@16829>   LSL.w #1,D3
0002D814 <AmiBlitz3.ab3@16830>   OR.w D3,D1
0002D818 <AmiBlitz3.ab3@16831> BRA.w writeword
0002D81C <AmiBlitz3.ab3@16835>   MOVE.w #$0100,D1
0002D820 <AmiBlitz3.ab3@16836>    BSR.w dothebit
0002D826 <AmiBlitz3.ab3@16838>   MOVE.w regnum,D1
0002D82A <AmiBlitz3.ab3@16839>   ORI.w #$56C0,D1    ;sne regat
0002D82E <AmiBlitz3.ab3@16840>    BSR.w writeword
0002D834 <AmiBlitz3.ab3@16842>   MOVE.w regnum,D1
0002D838 <AmiBlitz3.ab3@16843>   ORI.w #$4880,D1    ;ext.w D regat
0002D83C <AmiBlitz3.ab3@16844>    BSR.w writeword
0002D83E <AmiBlitz3.ab3@16846>   MOVEQ.l #$02,D2    ;type now WORD!
0002D840 <AmiBlitz3.ab3@16847> RTS
0002D844 <AmiBlitz3.ab3@16851>   MOVE.w #$01C0,D1
0002D848 <AmiBlitz3.ab3@16854>    BSR.w dothebit
0002D84A <AmiBlitz3.ab3@16856>   MOVEQ.l #$03,D2    ;type now LONG!
0002D84C <AmiBlitz3.ab3@16857> RTS
0002D850 <AmiBlitz3.ab3@16861>   MOVE.w #$0180,D1
0002D854 <AmiBlitz3.ab3@16862> BRA.w dothemip
0002D858 <AmiBlitz3.ab3@16866>   MOVE.w #$0140,D1
0002D85C <AmiBlitz3.ab3@16867> BRA.w dothemip
0002D85E <AmiBlitz3.ab3@16871>   MOVE.w D1,-(A7)
0002D860 <AmiBlitz3.ab3@16875>   MOVE.w D2,-(A7)
0002D862 <AmiBlitz3.ab3@16876>   MOVE.w D2,D3
0002D864 <AmiBlitz3.ab3@16877>   MOVEQ.l #$03,D2         ;first to long!
0002D868 <AmiBlitz3.ab3@16878>    BSR.w convtypef
0002D86A <AmiBlitz3.ab3@16880>   MOVE.w (A7)+,D3
0002D86C <AmiBlitz3.ab3@16881>   MOVEQ.l #$01,D2         ;second to byte!
0002D872 <AmiBlitz3.ab3@16882>   ADDQ.w #1,regnum
0002D876 <AmiBlitz3.ab3@16883>    BSR.w writeconvertcode
0002D87C <AmiBlitz3.ab3@16884>   SUBQ.w #1,regnum
0002D882 <AmiBlitz3.ab3@16886>   MOVE.w regnum,D1
0002D884 <AmiBlitz3.ab3@16887>   MOVE.w D1,D2
0002D886 <AmiBlitz3.ab3@16888>   ADDQ.w #1,D2
0002D888 <AmiBlitz3.ab3@16889>   LSL.w #8,D2
0002D88A <AmiBlitz3.ab3@16890>   LSL.w #1,D2
0002D88C <AmiBlitz3.ab3@16891>   OR.w (A7)+,D1
0002D88E <AmiBlitz3.ab3@16892>   OR.w D2,D1
0002D892 <AmiBlitz3.ab3@16893> BRA.w writeword        ;btst regat+1,regat
0002D898 <AmiBlitz3.ab3@16899>   MOVE.w regnum,D1
0002D89C <AmiBlitz3.ab3@16900>    BEQ.w 'skip
0002D8A0 <AmiBlitz3.ab3@16901>   ORI.w #$2000,D1
0002D8A4 <AmiBlitz3.ab3@16902>    BSR.w writeword
0002D8A8 <AmiBlitz3.ab3@16903>   ADDI.w #$201,D1
0002D8AC <AmiBlitz3.ab3@16904>    BSR.w writeword
0002D8AE <AmiBlitz3.ab3@16907> RTS
0002D8B4 <AmiBlitz3.ab3@16913>   MOVE.w regnum,D1
0002D8B8 <AmiBlitz3.ab3@16914>    BEQ.w 'skip
0002D8BA <AmiBlitz3.ab3@16915>   LSL.w #8,D1
0002D8BC <AmiBlitz3.ab3@16916>   LSL.w #1,D1
0002D8C0 <AmiBlitz3.ab3@16917>   ORI.w #$2000,D1
0002D8C4 <AmiBlitz3.ab3@16918>    BSR.w writeword
0002D8C6 <AmiBlitz3.ab3@16921> RTS
0002D8CC <AmiBlitz3.ab3@16926>    CLR.b isconstantvalue
0002D8D2 <AmiBlitz3.ab3@16927>    CLR.l lastconstantvalue
0002D8DA <AmiBlitz3.ab3@16929>    CMPI.w #$7,regnum
0002D8DE <AmiBlitz3.ab3@16930>    BCS.w getelement2
0002D8E4 <AmiBlitz3.ab3@16932>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D8E8 <AmiBlitz3.ab3@16933>   BSR writelong
0002D8EC <AmiBlitz3.ab3@16934>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D8F0 <AmiBlitz3.ab3@16937>   CMP.w #$3,D2
0002D8F4 <AmiBlitz3.ab3@16938>    BCS.w 'skip
0002D8F8 <AmiBlitz3.ab3@16939>   MOVE.w #$2F06,D1
0002D8FC <AmiBlitz3.ab3@16942>   BSR.w writeword
0002D8FE <AmiBlitz3.ab3@16943>   MOVE.w D1,-(A7)
0002D904 <AmiBlitz3.ab3@16945>   SUBQ.w #1,regnum
0002D908 <AmiBlitz3.ab3@16946>    BSR.w getelement2
0002D90E <AmiBlitz3.ab3@16947>   ADDQ.w #1,regnum
0002D914 <AmiBlitz3.ab3@16950>   MOVE.l #$f2001b80,d1
0002D918 <AmiBlitz3.ab3@16951>   BSR writelong
0002D91C <AmiBlitz3.ab3@16953>   MOVE.w #$3E06,D1
0002D920 <AmiBlitz3.ab3@16954>   CMP.w #$3,D2
0002D924 <AmiBlitz3.ab3@16955>    BCS.w 'skip2
0002D928 <AmiBlitz3.ab3@16956>   MOVE.w #$2E06,D1
0002D92C <AmiBlitz3.ab3@16959>   BSR.w writeword
0002D92E <AmiBlitz3.ab3@16961>   MOVE.w (A7)+,D1
0002D932 <AmiBlitz3.ab3@16962>   ANDI.w #$F000,D1
0002D936 <AmiBlitz3.ab3@16963>   ORI.w #$C1F,D1
0002D93C <AmiBlitz3.ab3@16964>   JSR writeword
0002D942 <AmiBlitz3.ab3@16966>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D946 <AmiBlitz3.ab3@16967> BRA writelong
0002D94A <AmiBlitz3.ab3@16972>   BSR.w getelement2
0002D94E <AmiBlitz3.ab3@16973>   MOVE.w #$4440,D1
0002D952 <AmiBlitz3.ab3@16974>   CMP.w #$3,D2
0002D956 <AmiBlitz3.ab3@16975>    BCS.w 'doneg
0002D95A <AmiBlitz3.ab3@16976>   MOVE.w #$4480,D1
0002D95E <AmiBlitz3.ab3@16977>   CMP.w #$5,D2
0002D962 <AmiBlitz3.ab3@16978>    BCS.w 'doneg
0002D966 <AmiBlitz3.ab3@16979>   CMP.w #$6,D2
0002D96A <AmiBlitz3.ab3@16980>    BCC.w illoperr
0002D96E <AmiBlitz3.ab3@16981>   MOVE.w #$FFC4,D1   ; was -60
0002D972 <AmiBlitz3.ab3@16982>  BRA.w fdo2
0002D978 <AmiBlitz3.ab3@16985>   OR.w regnum,D1                                           ;negate
0002D97E <AmiBlitz3.ab3@16987>   CLR.l imm_addr
0002D982 <AmiBlitz3.ab3@16989> BRA.w writeword
0002D986 <AmiBlitz3.ab3@16993>    BSR.w eval4
0002D98A <AmiBlitz3.ab3@16994>   CMP.w #")",D0
0002D98E <AmiBlitz3.ab3@16995>    BEQ.w 'done
0002D992 <AmiBlitz3.ab3@16996>   CMP.w #"}",D0
0002D996 <AmiBlitz3.ab3@16997>    BNE.w brackets_                                         ;syntax error brackets
0002D99A <AmiBlitz3.ab3@17000> BRA.w get1bytemain
0002D99E <AmiBlitz3.ab3@17006>    BSR.w eval4
0002D9A2 <AmiBlitz3.ab3@17007>   CMP.w #$5,D2
0002D9A6 <AmiBlitz3.ab3@17008>    BCC.w illoperr
0002D9AC <AmiBlitz3.ab3@17009>   MOVE.w regnum,D1
0002D9B0 <AmiBlitz3.ab3@17010>   ORI.w #$4640,D1     ;not.w
0002D9B4 <AmiBlitz3.ab3@17011>   CMP.w #$3,D2
0002D9B8 <AmiBlitz3.ab3@17012>    BCS.w writeword
0002D9BC <AmiBlitz3.ab3@17013>   EORI.w #$C0,D1
0002D9C0 <AmiBlitz3.ab3@17014> BRA.w writeword
0002D9C2 <AmiBlitz3.ab3@17018>   MOVEQ.l #$05,D2         ;return Pi.;move.l #x,dnf
0002D9C8 <AmiBlitz3.ab3@17020>    TST.b fpu
0002D9CC <AmiBlitz3.ab3@17021>   BEQ 'old
0002D9D2 <AmiBlitz3.ab3@17022> JMP fpupi
0002D9D8 <AmiBlitz3.ab3@17026>   MOVE.w regnum,D1
0002D9DA <AmiBlitz3.ab3@17027>   LSL.w #8,D1
0002D9DC <AmiBlitz3.ab3@17028>   LSL.w #1,D1
0002D9E0 <AmiBlitz3.ab3@17029>   ORI.w #$203C,D1
0002D9E4 <AmiBlitz3.ab3@17030>    BSR.w writeword      ;move.l #x,dn
0002D9EA <AmiBlitz3.ab3@17031>   MOVE.l #$C90FDA42,D1
0002D9EE <AmiBlitz3.ab3@17032>    BSR.w writelong
0002D9F2 <AmiBlitz3.ab3@17033> BRA.w get1bytemain
0002DAEE <AmiBlitz3.ab3@17041> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002DBEA <AmiBlitz3.ab3@17042>              Ds.l 63
0002DC32 <AmiBlitz3.ab3@17043>              Ds.l 18
0002DC36 <AmiBlitz3.ab3@17044> forthsp:     Dc.l forthstack
0002DC3C <AmiBlitz3.ab3@17047> JUMP_checkcast     JMP checkcast
0002DC42 <AmiBlitz3.ab3@17048> JUMP_syntaxerropt4 JMP syntaxerropt4
0002DC6E <AmiBlitz3.ab3@17056>    !fget
0002DC72 <AmiBlitz3.ab3@17057>    CMP.b #$7e,d0
0002DC76 <AmiBlitz3.ab3@17058>    BNE 'noc
0002DC78 <AmiBlitz3.ab3@17059>    SUBQ.l #1,a5
0002DC7C <AmiBlitz3.ab3@17060>    BSR get1bytemain
0002DC80 <AmiBlitz3.ab3@17063>    CMP.b #"#",d0
0002DC84 <AmiBlitz3.ab3@17064>    BNE 'ld1
0002DC88 <AmiBlitz3.ab3@17065>    CMP.b #$22,(a5)
0002DC8C <AmiBlitz3.ab3@17066>    BNE 'ld1
0002DC92 <AmiBlitz3.ab3@17067>    JSR addimmi
0002DC96 <AmiBlitz3.ab3@17070>    CMP.b #$22,d0
0002DC9A <AmiBlitz3.ab3@17071>    BNE 'l11
0002DCA0 <AmiBlitz3.ab3@17081>    NOT.w instringon
0002DCA2 <AmiBlitz3.ab3@17084>    TST.b d0
0002DCA6 <AmiBlitz3.ab3@17085>    BPL 'l10
0002DCA8 <AmiBlitz3.ab3@17086>    LSL.w #8,d0
0002DCAA <AmiBlitz3.ab3@17087>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002DCB0 <AmiBlitz3.ab3@17088>    MOVE.l d0,lasttoken
0002DCB6 <AmiBlitz3.ab3@17089>    MOVE.w d0,lastchar
0002DCBC <AmiBlitz3.ab3@17090>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002DCC2 <AmiBlitz3.ab3@17091>    CLR.w rightsideflagmask
0002DCC6 <AmiBlitz3.ab3@17095>   CMP.w #"(",D0
0002DCCA <AmiBlitz3.ab3@17096>    BEQ.w JUMP_checkcast                 ; was  beq bracket org source
0002DCCE <AmiBlitz3.ab3@17101>   CMP.w #"{",D0
0002DCD2 <AmiBlitz3.ab3@17102>    BEQ.w bracket
0002DCD6 <AmiBlitz3.ab3@17103>   CMP.w #$2D,D0         ;'-'
0002DCDA <AmiBlitz3.ab3@17104>    BEQ.w negate
0002DCDE <AmiBlitz3.ab3@17105>   CMP.w #-$7F77,D0      ; was #(opnot-opabcd)/$1c+$8000+fnum,
0002DCE2 <AmiBlitz3.ab3@17106>    BEQ.w notit
0002DCE6 <AmiBlitz3.ab3@17108>   MOVEA.l forthsp(PC),A1
0002DCEC <AmiBlitz3.ab3@17109>   CMPA.l #forthsp,A1
0002DCF0 <AmiBlitz3.ab3@17110>    BCC.w conmemerr
0002DCF6 <AmiBlitz3.ab3@17112>   MOVE.l destpointer,(A1)+
0002DCFC <AmiBlitz3.ab3@17113>   MOVE.l hunkoffsetbase,(A1)+
0002DD02 <AmiBlitz3.ab3@17114>   MOVE.l lasta6,(A1)+
0002DD08 <AmiBlitz3.ab3@17115>   MOVE.w lasta6,(A1)+
0002DD0A <AmiBlitz3.ab3@17116>   CLR.w (A1)+
0002DD0C <AmiBlitz3.ab3@17118>   CLR.w (A1)+
0002DD12 <AmiBlitz3.ab3@17119>   MOVE.l A1,forthsp
0002DD24 <AmiBlitz3.ab3@17125>    !compare2
0002DD28 <AmiBlitz3.ab3@17127>    BEQ.w fetchnum
0002DD2C <AmiBlitz3.ab3@17128>   CMP.w #".",D0
0002DD30 <AmiBlitz3.ab3@17129>    BEQ.w fetchfrac
0002DD34 <AmiBlitz3.ab3@17130>   CMP.w #"#",D0
0002DD38 <AmiBlitz3.ab3@17131>    BEQ.w get_constant
0002DD3C <AmiBlitz3.ab3@17132>   CMP.w #"$",D0
0002DD40 <AmiBlitz3.ab3@17133>    BEQ.w get_hexconstant
0002DD44 <AmiBlitz3.ab3@17134>   CMP.w #"%",D0
0002DD48 <AmiBlitz3.ab3@17135>    BEQ.w fetchbin
0002DD4C <AmiBlitz3.ab3@17136>   CMP.w #-$7FD1,D0    ; was #$8000+47,
0002DD50 <AmiBlitz3.ab3@17137>    BEQ.w fetchsize
0002DD54 <AmiBlitz3.ab3@17138>   CMP.w #-$7F46,D0    ; was #$8007+tnum,
0002DD58 <AmiBlitz3.ab3@17139>    BEQ.w fetchpi
0002DD5C <AmiBlitz3.ab3@17140>   CMP.w #-$7F3B,D0    ; was #$8000+tnum+18,
0002DD60 <AmiBlitz3.ab3@17141>    BEQ.w fetchon
0002DD64 <AmiBlitz3.ab3@17142>   CMP.w #-$7F3A,D0    ; was #$8000+tnum+19,
0002DD68 <AmiBlitz3.ab3@17143>    BEQ.w fetchoff
0002DD6E <AmiBlitz3.ab3@17145>   MOVE.w constmode,D1
0002DD72 <AmiBlitz3.ab3@17146>    BEQ.w 'noasm
0002DD94 <AmiBlitz3.ab3@17148>    !compare1                                               ;bsr.w tstalpha
0002DD98 <AmiBlitz3.ab3@17150>    BEQ.w fetchasm
0002DD9C <AmiBlitz3.ab3@17151>   CMP.w #$5F,D0     ;'_'
0002DDA0 <AmiBlitz3.ab3@17152>    BEQ.w fetchasm
0002DDA4 <AmiBlitz3.ab3@17153>   CMP.w #$22,D0     ;'"'
0002DDA8 <AmiBlitz3.ab3@17154>    BEQ.w fetchqasm
0002DDAC <AmiBlitz3.ab3@17156>  BRA.w syntaxerr
0002DDB2 <AmiBlitz3.ab3@17159>   MOVE.w cfetchmode,D1
0002DDB6 <AmiBlitz3.ab3@17160>   BEQ.w 'asmok
0002DDBA <AmiBlitz3.ab3@17161>  BRA.w badconerr       ;we're trying to get a const here! 
0002DDBC <AmiBlitz3.ab3@17164>   NOT.w -(A1)    ;set forth stack type to non-const
0002DDDE <AmiBlitz3.ab3@17169>   !compare1                                                ;bsr.w tstalpha
0002DDE2 <AmiBlitz3.ab3@17171>    BEQ.w variable
0002DDE6 <AmiBlitz3.ab3@17172>   CMP.w #$2A,D0     ;'*'
0002DDEA <AmiBlitz3.ab3@17173>    BEQ.w variable
0002DDEE <AmiBlitz3.ab3@17174>   CMP.w #$5C,D0     ;'\'
0002DDF2 <AmiBlitz3.ab3@17175>    BEQ.w variable
0002DDF6 <AmiBlitz3.ab3@17176>   CMP.w #$22,D0     ;'"'
0002DDFA <AmiBlitz3.ab3@17177>    BEQ.w litstring
0002DDFE <AmiBlitz3.ab3@17178>   BTST #$F,D0
0002DE02 <AmiBlitz3.ab3@17179>    BNE.w f_unction
0002DE06 <AmiBlitz3.ab3@17180>   CMP.w #"&",D0
0002DE0A <AmiBlitz3.ab3@17181>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002DE0E <AmiBlitz3.ab3@17182>   CMP.w #"?",D0
0002DE12 <AmiBlitz3.ab3@17183>    BEQ.w qmark
0002DE16 <AmiBlitz3.ab3@17187>   CMP.b #"@",d0
0002DE1A <AmiBlitz3.ab3@17188>    BNE syntaxerr
0002DE20 <AmiBlitz3.ab3@17189>   TST.b newsyntax
0002DE24 <AmiBlitz3.ab3@17190>    BEQ JUMP_syntaxerropt4
0002DE2A <AmiBlitz3.ab3@17191>   MOVE.w regnum,D1
0002DE2C <AmiBlitz3.ab3@17192>   LSL.w #8,D1
0002DE2E <AmiBlitz3.ab3@17193>   LSL.w #1,D1
0002DE32 <AmiBlitz3.ab3@17194>   ORI.w #$203C,D1
0002DE36 <AmiBlitz3.ab3@17195>   BSR.w writeword
0002DE3A <AmiBlitz3.ab3@17196>   CMP.b #$22,(a5)
0002DE3E <AmiBlitz3.ab3@17197>    BNE syntaxerr
0002DE40 <AmiBlitz3.ab3@17198>   ADDQ #1,a5
0002DE42 <AmiBlitz3.ab3@17199>   MOVEQ #0,d0
0002DE46 <AmiBlitz3.ab3@17200>   CMP.b #1,d2
0002DE4A <AmiBlitz3.ab3@17201>    BEQ 'l3b
0002DE4E <AmiBlitz3.ab3@17202>   CMP.b #2,d2
0002DE52 <AmiBlitz3.ab3@17203>    BEQ 'l2b
0002DE56 <AmiBlitz3.ab3@17204>   CMP.b #4,d2
0002DE5A <AmiBlitz3.ab3@17205>    BEQ error_convert_types
0002DE5C <AmiBlitz3.ab3@17206>   MOVE.b (a5)+,d0
0002DE60 <AmiBlitz3.ab3@17207>   BEQ syntaxerr
0002DE64 <AmiBlitz3.ab3@17208>   CMP.b #$22,d0
0002DE68 <AmiBlitz3.ab3@17209>   BNE 'l1
0002DE6C <AmiBlitz3.ab3@17210>     MOVE.b #0,d0
0002DE70 <AmiBlitz3.ab3@17211>  BRA 'do
0002DE72 <AmiBlitz3.ab3@17214>   ASL.l #8,d0
0002DE74 <AmiBlitz3.ab3@17215>   MOVE.b (a5)+,d0
0002DE78 <AmiBlitz3.ab3@17216>   BEQ syntaxerr
0002DE7C <AmiBlitz3.ab3@17217>   CMP.b #$22,d0
0002DE80 <AmiBlitz3.ab3@17218>   BNE 'l2
0002DE84 <AmiBlitz3.ab3@17219>     MOVE.b #0,d0
0002DE86 <AmiBlitz3.ab3@17220>     ASR.l #8,d0
0002DE8A <AmiBlitz3.ab3@17221>  BRA 'do
0002DE8C <AmiBlitz3.ab3@17224>   ASL.l #8,d0
0002DE8E <AmiBlitz3.ab3@17227>   MOVE.b (a5)+,d0
0002DE92 <AmiBlitz3.ab3@17228>    BEQ syntaxerr
0002DE96 <AmiBlitz3.ab3@17229>    CMP.b #$22,d0
0002DE9A <AmiBlitz3.ab3@17230>    BNE 'l3
0002DE9E <AmiBlitz3.ab3@17231>    MOVE.b #0,d0
0002DEA0 <AmiBlitz3.ab3@17232>    ASR.l #8,d0
0002DEA4 <AmiBlitz3.ab3@17233>  BRA 'do
0002DEA6 <AmiBlitz3.ab3@17236>   ASL.l #8,d0
0002DEA8 <AmiBlitz3.ab3@17239>   MOVE.b (a5)+,d0
0002DEAC <AmiBlitz3.ab3@17240>    BEQ syntaxerr
0002DEB0 <AmiBlitz3.ab3@17241>    CMP.b #$22,d0
0002DEB4 <AmiBlitz3.ab3@17242>    BNE 'l4
0002DEB8 <AmiBlitz3.ab3@17243>    MOVE.b #0,d0
0002DEBA <AmiBlitz3.ab3@17244>    ASR.l #8,d0
0002DEBE <AmiBlitz3.ab3@17245>  BRA 'do
0002DEC2 <AmiBlitz3.ab3@17248>    CMP.b #$22,(a5)+
0002DEC6 <AmiBlitz3.ab3@17249>    BNE error4char
0002DEC8 <AmiBlitz3.ab3@17252>   MOVE.l d0,d1
0002DECC <AmiBlitz3.ab3@17253>     BSR writelong
0002DED0 <AmiBlitz3.ab3@17254>     BSR get1bytemain
0002DED2 <AmiBlitz3.ab3@17255> RTS
0002DED6 <AmiBlitz3.ab3@17260>   BSR.w get1bytemain
0002DEDA <AmiBlitz3.ab3@17261>   CMP.w #$2E,D0     ; '.'
0002DEDE <AmiBlitz3.ab3@17262>    BEQ.b sizeobj
0002DEE8 <AmiBlitz3.ab3@17268>   MOVE.w oldqflag,instringon
0002DEEE <AmiBlitz3.ab3@17269>   MOVEA.l lastsourcepos,A5
0002DEF0 <AmiBlitz3.ab3@17271>   MOVE.w D2,-(A7)
0002DEF4 <AmiBlitz3.ab3@17272>    BSR.w getparameter2
0002DEF8 <AmiBlitz3.ab3@17273>    BEQ.w syntaxerr
0002DEFE <AmiBlitz3.ab3@17274>   LEA varbase,A2
0002DF02 <AmiBlitz3.ab3@17275>    BSR.w findvariable
0002DF06 <AmiBlitz3.ab3@17276>    BNE.w notypeerr         ;!
0002DF0A <AmiBlitz3.ab3@17279>   MOVE.w $4(A2),D3
0002DF0C <AmiBlitz3.ab3@17280>   EXT.l D3
0002DF0E <AmiBlitz3.ab3@17281>   MOVE.w (A7)+,D2
0002DF12 <AmiBlitz3.ab3@17282> BRA.w fetchnum2
0002DF14 <AmiBlitz3.ab3@17286>   MOVE.w D2,-(A7)
0002DF18 <AmiBlitz3.ab3@17287>    BSR.w getparameter2
0002DF1C <AmiBlitz3.ab3@17288>    BEQ.w syntaxerr
0002DF22 <AmiBlitz3.ab3@17289>   LEA newtypebase,A2
0002DF26 <AmiBlitz3.ab3@17290>    BSR.w findtype
0002DF2A <AmiBlitz3.ab3@17291>    BNE.w notypeerr
0002DF2C <AmiBlitz3.ab3@17292>   MOVEQ.l #$00,D3
0002DF30 <AmiBlitz3.ab3@17293>   CMP.w #$5C,D0     ;'\'
0002DF34 <AmiBlitz3.ab3@17294>    BNE.w 'jty
0002DF38 <AmiBlitz3.ab3@17295>    BSR.w getparameter2
0002DF3C <AmiBlitz3.ab3@17296>    BEQ.w syntaxerr
0002DF40 <AmiBlitz3.ab3@17297>   LEA $4(A2),A2
0002DF44 <AmiBlitz3.ab3@17298>    BSR.w findvariable2
0002DF48 <AmiBlitz3.ab3@17299>    BNE.w noofferr
0002DF4C <AmiBlitz3.ab3@17300>   MOVE.w $4(A2),D3
0002DF50 <AmiBlitz3.ab3@17301>  BRA.w 'jty2
0002DF54 <AmiBlitz3.ab3@17304>   MOVE.w $8(A2),D3
0002DF56 <AmiBlitz3.ab3@17307>   MOVE.w (A7)+,D2
0002DF5A <AmiBlitz3.ab3@17308> BRA.w fetchnum2
0002DF5C <AmiBlitz3.ab3@17312>   MOVEQ.l #-$01,D3
0002DF60 <AmiBlitz3.ab3@17313>    BSR.w get1bytemain
0002DF64 <AmiBlitz3.ab3@17314> BRA.w fetchnum2
0002DF66 <AmiBlitz3.ab3@17318>   MOVEQ.l #$00,D3
0002DF6A <AmiBlitz3.ab3@17319>    BSR.w get1bytemain
0002DF6E <AmiBlitz3.ab3@17320> BRA.w fetchnum2
0002DF72 <AmiBlitz3.ab3@17326>   CMP.w #$30,D0     ;'0'
0002DF76 <AmiBlitz3.ab3@17327>    BCS.w 'no
0002DF7A <AmiBlitz3.ab3@17328>   CMP.w #$39,D0     ;'9'
0002DF7E <AmiBlitz3.ab3@17329>    BLS.w 'yes
0002DF82 <AmiBlitz3.ab3@17330>   ANDI.w #$FFDF,D0
0002DF86 <AmiBlitz3.ab3@17331>   CMP.w #$46,D0     ;'F'
0002DF8A <AmiBlitz3.ab3@17332>    BHI.w 'no
0002DF8E <AmiBlitz3.ab3@17333>   CMP.w #$41,D0     ;'A'
0002DF92 <AmiBlitz3.ab3@17334>    BCS.w 'no
0002DF94 <AmiBlitz3.ab3@17337>    CMP.w D0,D0
0002DF96 <AmiBlitz3.ab3@17340> RTS
0002DF9A <AmiBlitz3.ab3@17344>   CMP.w #$31,D0    ;'1'
0002DF9E <AmiBlitz3.ab3@17345>    BEQ.w 'ok
0002DFA2 <AmiBlitz3.ab3@17346>   CMP.w #$30,D0    ;'0'
0002DFA4 <AmiBlitz3.ab3@17349> RTS
0002DFA6 <AmiBlitz3.ab3@17354>    MOVEQ #0,d0
0002DFA8 <AmiBlitz3.ab3@17355>    MOVE.b (a5)+,d0
0002DFAA <AmiBlitz3.ab3@17356>    MOVE.b (a5)+,d0
0002DFAE <AmiBlitz3.ab3@17357>    BSR ishex
0002DFB2 <AmiBlitz3.ab3@17358>    BNE syntaxerr
0002DFB6 <AmiBlitz3.ab3@17359>    SUBI.w #$30,D0
0002DFBA <AmiBlitz3.ab3@17360>    CMP.w #$9,D0
0002DFBE <AmiBlitz3.ab3@17361>    BLS.w 'l1
0002DFC0 <AmiBlitz3.ab3@17362>    SUBQ.w #7,D0
0002DFC2 <AmiBlitz3.ab3@17365>    MOVE.l d0,d1
0002DFC4 <AmiBlitz3.ab3@17366>    MOVE.b (a5)+,d0
0002DFC8 <AmiBlitz3.ab3@17367>      BSR ishex
0002DFCC <AmiBlitz3.ab3@17368>     BNE syntaxerr
0002DFCE <AmiBlitz3.ab3@17369>     LSL.l #4,d1
0002DFD2 <AmiBlitz3.ab3@17370>     SUBI.w #$30,D0
0002DFD6 <AmiBlitz3.ab3@17371>    CMP.w #$9,D0
0002DFDA <AmiBlitz3.ab3@17372>    BLS.w 'l2
0002DFDC <AmiBlitz3.ab3@17373>    SUBQ.w #7,D0
0002DFDE <AmiBlitz3.ab3@17376>   ADD.l d1,d0
0002DFE0 <AmiBlitz3.ab3@17377> RTS
0002DFE4 <AmiBlitz3.ab3@17381>    BSR.w get1bytemain
0002DFE8 <AmiBlitz3.ab3@17382>    BSR.w ishex
0002DFEC <AmiBlitz3.ab3@17383>    BNE.w syntaxerr
0002DFEE <AmiBlitz3.ab3@17384>   MOVEQ.l #$00,D3
0002DFF2 <AmiBlitz3.ab3@17386>   CMP.w #5,d2
0002DFF6 <AmiBlitz3.ab3@17387>   BNE 'loop
0002DFFC <AmiBlitz3.ab3@17388>   CMP.l #newtype_double,a2
0002E000 <AmiBlitz3.ab3@17389>   BEQ 'doit
0002E006 <AmiBlitz3.ab3@17390>   CMP.l #newtype_float,a2
0002E00A <AmiBlitz3.ab3@17391>   BNE 'loop
0002E012 <AmiBlitz3.ab3@17394>    fmove.s #0,fp0
0002E018 <AmiBlitz3.ab3@17397>   TST.b fpu
0002E01C <AmiBlitz3.ab3@17398>   BEQ 'loop
0002E022 <AmiBlitz3.ab3@17399>   fmove.w #16,fp1
0002E026 <AmiBlitz3.ab3@17400>   fmul.x fp1,fp0
0002E02A <AmiBlitz3.ab3@17401>   SUBI.w #$30,D0
0002E02E <AmiBlitz3.ab3@17402>   CMP.w #$9,D0
0002E032 <AmiBlitz3.ab3@17403>    BLS.w 'skipa
0002E034 <AmiBlitz3.ab3@17404>   SUBQ.w #7,D0
0002E038 <AmiBlitz3.ab3@17407>    fmove.w d0,fp1
0002E03C <AmiBlitz3.ab3@17408>    fadd.x fp1,fp0
0002E040 <AmiBlitz3.ab3@17409>    BSR.w get1bytemain
0002E044 <AmiBlitz3.ab3@17410>    BSR.w ishex
0002E048 <AmiBlitz3.ab3@17411>    BEQ.w 'loopa
0002E04C <AmiBlitz3.ab3@17412>  BRA.w nofpregload
0002E052 <AmiBlitz3.ab3@17416>   CMP.l #$10000000,D3
0002E056 <AmiBlitz3.ab3@17417>    BCC.w overerr
0002E058 <AmiBlitz3.ab3@17418>   LSL.l #4,D3
0002E05C <AmiBlitz3.ab3@17419>   SUBI.w #$30,D0
0002E060 <AmiBlitz3.ab3@17420>   CMP.w #$9,D0
0002E064 <AmiBlitz3.ab3@17421>    BLS.w 'skip
0002E066 <AmiBlitz3.ab3@17422>   SUBQ.w #7,D0
0002E068 <AmiBlitz3.ab3@17425>   OR.w D0,D3
0002E06C <AmiBlitz3.ab3@17426>    BSR.w get1bytemain
0002E070 <AmiBlitz3.ab3@17427>    BSR.w ishex
0002E074 <AmiBlitz3.ab3@17428>    BEQ.w 'loop
0002E078 <AmiBlitz3.ab3@17429> BRA.w fetchnum2
0002E07C <AmiBlitz3.ab3@17433>    BSR.w get1bytemain
0002E080 <AmiBlitz3.ab3@17434>    BSR.w checkbin
0002E084 <AmiBlitz3.ab3@17435>    BNE.w syntaxerr
0002E086 <AmiBlitz3.ab3@17436>    MOVEQ.l #$00,D3
0002E088 <AmiBlitz3.ab3@17439>    LSL.l #1,D3
0002E08C <AmiBlitz3.ab3@17440>    BCS.w overerr
0002E090 <AmiBlitz3.ab3@17441>   SUBI.w #$30,D0
0002E092 <AmiBlitz3.ab3@17442>   OR.w D0,D3
0002E096 <AmiBlitz3.ab3@17443>    BSR.w get1bytemain
0002E09A <AmiBlitz3.ab3@17444>    BSR.w checkbin
0002E09E <AmiBlitz3.ab3@17445>    BEQ.w 'loop
0002E0A2 <AmiBlitz3.ab3@17446> BRA.w fetchnum2
0002E0A4 <AmiBlitz3.ab3@17450>    MOVE.w d2,-(A7)
0002E0AC <AmiBlitz3.ab3@17452>    MOVE.b #0,automode
0002E0B0 <AmiBlitz3.ab3@17453>    CMP.b #"@",(a5)
0002E0B4 <AmiBlitz3.ab3@17454>    BNE 'l1
0002E0B6 <AmiBlitz3.ab3@17455>    ADDQ.l #1,a5
0002E0BE <AmiBlitz3.ab3@17456>    MOVE.b #1,automode
0002E0C2 <AmiBlitz3.ab3@17457>    BSR getparameter2
0002E0C6 <AmiBlitz3.ab3@17458>    BSR findlabel2
0002E0CA <AmiBlitz3.ab3@17459>    BNE 'addit
0002E0CE <AmiBlitz3.ab3@17460>  BRA errormsg_autocount
0002E0D2 <AmiBlitz3.ab3@17463>   BSR.w addlabelhash
0002E0DA <AmiBlitz3.ab3@17464>   MOVE.l #$1,$4(A2)
0002E0DE <AmiBlitz3.ab3@17465>   MOVEM.l a2/a5,-(a7)
0002E0E4 <AmiBlitz3.ab3@17466>   MOVE.w lastchar,-(a7)
0002E0EA <AmiBlitz3.ab3@17467>   LEA autostorename,a5
0002E0EE <AmiBlitz3.ab3@17468>   BSR getparameter2
0002E0F2 <AmiBlitz3.ab3@17469>   BSR findlabel2
0002E0F6 <AmiBlitz3.ab3@17470>   BEQ 'found
0002E0FA <AmiBlitz3.ab3@17471>   BSR.w addlabelhash
0002E102 <AmiBlitz3.ab3@17472>   MOVE.l #$1,$4(A2)
0002E10A <AmiBlitz3.ab3@17473>   MOVE.l #0,8(a2)
0002E10C <AmiBlitz3.ab3@17476>    MOVE.w (a7)+,d0
0002E112 <AmiBlitz3.ab3@17477>    MOVE.w d0,lastchar
0002E116 <AmiBlitz3.ab3@17478>   MOVE.l 8(a2),d3
0002E11E <AmiBlitz3.ab3@17479>   ADD.l #1,8(a2)
0002E122 <AmiBlitz3.ab3@17480>   MOVEM.l (a7)+,a2/a5
0002E126 <AmiBlitz3.ab3@17481>   MOVE.l d3,8(a2)
0002E12A <AmiBlitz3.ab3@17482>   MOVE.l $8(A2),D3
0002E12E <AmiBlitz3.ab3@17483>  BRA.l 'l3
0002E132 <AmiBlitz3.ab3@17487>   BSR.w getparameter2
0002E138 <AmiBlitz3.ab3@17489>     TST.b incnif
0002E13C <AmiBlitz3.ab3@17490>     BEQ 'lc1
0002E140 <AmiBlitz3.ab3@17491>     BSR.w findlabel2
0002E144 <AmiBlitz3.ab3@17492>     BNE 'l5
0002E146 <AmiBlitz3.ab3@17493>     MOVEQ #1,d3
0002E148 <AmiBlitz3.ab3@17494>     MOVE.w (A7)+,D2
0002E14C <AmiBlitz3.ab3@17495>  BRA fetchnum2
0002E14E <AmiBlitz3.ab3@17498>   MOVEQ #0,d3
0002E150 <AmiBlitz3.ab3@17499>     MOVE.w (A7)+,D2
0002E154 <AmiBlitz3.ab3@17500>  BRA fetchnum2
0002E158 <AmiBlitz3.ab3@17504>    BSR.w findlabel2
0002E15C <AmiBlitz3.ab3@17505>    BNE.w cnferr
0002E164 <AmiBlitz3.ab3@17508>    CMPI.l #$1,$4(A2)
0002E168 <AmiBlitz3.ab3@17509>    BNE.w cnferr
0002E16C <AmiBlitz3.ab3@17512>    MOVE.l $8(A2),D3
0002E16E <AmiBlitz3.ab3@17513>    MOVE.w (A7)+,D2
0002E172 <AmiBlitz3.ab3@17514> BRA.w fetchnum2     ;to right type.
0002E178 <AmiBlitz3.ab3@17519>   CLR.w vartype
0002E180 <AmiBlitz3.ab3@17520>   MOVE.b #3,peekaddrsize
0002E184 <AmiBlitz3.ab3@17522>   BSR.w ampersand2
0002E18A <AmiBlitz3.ab3@17524>   MOVE.l a2,rightsidetype
0002E194 <AmiBlitz3.ab3@17525>   MOVE.w flagmask,rightsideflagmask
0002E196 <AmiBlitz3.ab3@17527>   MOVEQ.l #$03,D2
0002E198 <AmiBlitz3.ab3@17528> RTS
0002E19C <AmiBlitz3.ab3@17532>    BSR.w get1bytemain
0002E1AE <AmiBlitz3.ab3@17534>    !compare2
0002E1B2 <AmiBlitz3.ab3@17535>    BEQ andop2
0002E1B6 <AmiBlitz3.ab3@17537>    BSR.w getparameter
0002E1BA <AmiBlitz3.ab3@17538>    BSR.w fetchvars
0002E1BE <AmiBlitz3.ab3@17539>    BSR.w calcvar
0002E1C2 <AmiBlitz3.ab3@17541>   CMP.b #$7,D2
0002E1C6 <AmiBlitz3.ab3@17542>    BNE.w 'notst
0002E1CA <AmiBlitz3.ab3@17543>   BTST #$F,D2
0002E1CE <AmiBlitz3.ab3@17544>    BNE.w 'algot2
0002E1D4 <AmiBlitz3.ab3@17545>   MOVE.w D3,stamp2+2
0002E1DA <AmiBlitz3.ab3@17546>   MOVE.l stamp2,D1
0002E1DE <AmiBlitz3.ab3@17547>    BSR.w pokela5s
0002E1E2 <AmiBlitz3.ab3@17548>  BRA.w 'algot
0002E1E8 <AmiBlitz3.ab3@17551>   MOVE.w regnum,D1
0002E1EA <AmiBlitz3.ab3@17552>   LSL.w #8,D1
0002E1EC <AmiBlitz3.ab3@17553>   LSL.w #1,D1
0002E1F2 <AmiBlitz3.ab3@17554>   OR.w stamp,D1
0002E1F6 <AmiBlitz3.ab3@17555>    BSR.w writeword
0002E1F8 <AmiBlitz3.ab3@17556>  RTS
0002E1FC <AmiBlitz3.ab3@17559>   BTST #$F,D2
0002E200 <AmiBlitz3.ab3@17560>    BNE.w 'algot
0002E206 <AmiBlitz3.ab3@17561>   MOVE.w D3,leaamp+2
0002E20C <AmiBlitz3.ab3@17562>   MOVE.l leaamp,D1
0002E210 <AmiBlitz3.ab3@17563>    BSR.w pokela5s
0002E216 <AmiBlitz3.ab3@17566>   MOVE.w regnum,D1
0002E218 <AmiBlitz3.ab3@17567>   LSL.w #8,D1
0002E21A <AmiBlitz3.ab3@17568>   LSL.w #1,D1
0002E220 <AmiBlitz3.ab3@17569>   OR.w leaamp2,D1
0002E224 <AmiBlitz3.ab3@17570> BRA.w writeword
0002E228 <AmiBlitz3.ab3@17575>   MOVE.w #$D200,D1     ; was #ern,
0002E22C <AmiBlitz3.ab3@17576>    BSR.w Atokejsr
0002E22E <AmiBlitz3.ab3@17577>   MOVEQ.l #$03,D2
0002E230 <AmiBlitz3.ab3@17578> RTS
0002E234 <AmiBlitz3.ab3@17582> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002E236 <AmiBlitz3.ab3@17583>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002E238 <AmiBlitz3.ab3@17584>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002E23C <AmiBlitz3.ab3@17590>    BSR.w get1bytemain
0002E23E <AmiBlitz3.ab3@17592>   MOVE.w D0,D1
0002E242 <AmiBlitz3.ab3@17593>    BPL.w syntaxerr
0002E244 <AmiBlitz3.ab3@17594>   MOVE.w D2,-(A7)
0002E248 <AmiBlitz3.ab3@17595>   BCLR #$F,D1
0002E24C <AmiBlitz3.ab3@17596>    BSR.w searchinstr
0002E250 <AmiBlitz3.ab3@17597>   MOVE.l $12(A2),D0
0002E254 <AmiBlitz3.ab3@17598>   TST.w -$2(A2,D0.L)
0002E258 <AmiBlitz3.ab3@17599>    BEQ.w freeerr
0002E25A <AmiBlitz3.ab3@17600>   MOVE.w (A7)+,D2
0002E25C <AmiBlitz3.ab3@17601> RTS
0002E260 <AmiBlitz3.ab3@17605>   MOVE.l $0(A5),D0
0002E264 <AmiBlitz3.ab3@17606>    BNE.b ucodeskip
0002E266 <AmiBlitz3.ab3@17607>   MOVEQ.l #-$01,D0
0002E26A <AmiBlitz3.ab3@17608> BRA.b usedcodef
0002E26E <AmiBlitz3.ab3@17611>   SUB.l $0(A5),D0
0002E270 <AmiBlitz3.ab3@17614>   LSR.w #8,D0
0002E274 <AmiBlitz3.ab3@17619>    MOVE.l $0(A5),D0
0002E278 <AmiBlitz3.ab3@17620>    BNE.b ucodeskip2
0002E27A <AmiBlitz3.ab3@17621>   MOVEQ.l #-$01,D0
0002E27E <AmiBlitz3.ab3@17622> BRA.b usedcode2f
0002E282 <AmiBlitz3.ab3@17625>   SUB.l $0(A5),D0                                          ;usedcode2
0002E284 <AmiBlitz3.ab3@17626>   LSR.w #8,D0
0002E286 <AmiBlitz3.ab3@17629>   LSR.w #8,D0
0002E288 <AmiBlitz3.ab3@17634>   MOVE.l D0,-(A7)
0002E28A <AmiBlitz3.ab3@17637>   MOVE.l (A7)+,D0
0002E28C <AmiBlitz3.ab3@17640>   MOVE.l D0,D0
0002E290 <AmiBlitz3.ab3@17646>   BSR.w fetchit
0002E294 <AmiBlitz3.ab3@17648>   MOVE.w -$2(A2,D0.L),D3
0002E298 <AmiBlitz3.ab3@17649>   CMP.w #$9,D3
0002E29C <AmiBlitz3.ab3@17650>    BCC.w 'skip
0002E2A0 <AmiBlitz3.ab3@17654>   LEA usedcode(PC),A0
0002E2A4 <AmiBlitz3.ab3@17655>   LEA usedcodef(PC),A1
0002E2AA <AmiBlitz3.ab3@17657>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002E2AE <AmiBlitz3.ab3@17658>   ANDI.w #$7,D3
0002E2B0 <AmiBlitz3.ab3@17659>   LSL.w #8,D3
0002E2B2 <AmiBlitz3.ab3@17660>   LSL.w #1,D3
0002E2B6 <AmiBlitz3.ab3@17661>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002E2BA <AmiBlitz3.ab3@17662>  BRA.w 'skip2
0002E2BE <AmiBlitz3.ab3@17667>   LEA usedcode2(PC),A0
0002E2C2 <AmiBlitz3.ab3@17668>   LEA usedcode2f(PC),A1
0002E2C8 <AmiBlitz3.ab3@17670>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002E2CA <AmiBlitz3.ab3@17671>   SUBQ.w #8,D3
0002E2CC <AmiBlitz3.ab3@17672>   LSL.w #8,D3
0002E2CE <AmiBlitz3.ab3@17673>   LSL.w #1,D3
0002E2D2 <AmiBlitz3.ab3@17674>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002E2D6 <AmiBlitz3.ab3@17677>   MOVE.w -$6(A2,D0.L),D3
0002E2DA <AmiBlitz3.ab3@17678>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002E2DC <AmiBlitz3.ab3@17679>   ADDQ.w #4,D3
0002E2E0 <AmiBlitz3.ab3@17680>   MOVE.w D3,$2(A0)
0002E2E6 <AmiBlitz3.ab3@17681>   MOVE.w regnum,D1
0002E2EA <AmiBlitz3.ab3@17682>    BEQ.w 'skip3
0002E2EE <AmiBlitz3.ab3@17683>   MOVE.w usedprep(PC),D1
0002E2F2 <AmiBlitz3.ab3@17684>    BSR.w writeword
0002E2F6 <AmiBlitz3.ab3@17687>   BSR.w pokecode
0002E2FC <AmiBlitz3.ab3@17688>   MOVE.w regnum,D1
0002E300 <AmiBlitz3.ab3@17689>    BEQ.w 'skip4
0002E302 <AmiBlitz3.ab3@17690>   LSL.w #8,D1
0002E304 <AmiBlitz3.ab3@17691>   LSL.w #1,D1
0002E308 <AmiBlitz3.ab3@17692>   OR.w usedfix(PC),D1
0002E30C <AmiBlitz3.ab3@17693>    BSR.w writeword
0002E310 <AmiBlitz3.ab3@17694>   MOVE.w useddone(PC),D1
0002E314 <AmiBlitz3.ab3@17695>    BSR.w writeword
0002E316 <AmiBlitz3.ab3@17698>    MOVEQ.l #$02,D2
0002E31A <AmiBlitz3.ab3@17699> BRA.w get1bytemain
0002E31E <AmiBlitz3.ab3@17707>    BSR.w fetchit
0002E320 <AmiBlitz3.ab3@17709>   MOVEQ.l #$00,D3
0002E324 <AmiBlitz3.ab3@17710>   MOVE.w -$4(A2,D0.L),D3
0002E328 <AmiBlitz3.ab3@17711>    BSR.w get1bytemain
0002E32C <AmiBlitz3.ab3@17712> BRA.w fetchnum2
0002E330 <AmiBlitz3.ab3@17719>    BSR.w get1bytemain    ;get the token
0002E332 <AmiBlitz3.ab3@17720>   MOVE.w D0,-(A7)
0002E336 <AmiBlitz3.ab3@17721>    BSR.w get1bytemain    ;and the bracket?
0002E33A <AmiBlitz3.ab3@17722>   CMP.w #$28,D0          ;'('
0002E33E <AmiBlitz3.ab3@17723>    BNE.w syntaxerr
0002E340 <AmiBlitz3.ab3@17724>   MOVE.w (A7)+,D0
0002E344 <AmiBlitz3.ab3@17725>    BSR.w getmaxel
0002E348 <AmiBlitz3.ab3@17726>    BSR.w reget
0002E34C <AmiBlitz3.ab3@17727>   CMP.w #$29,D0          ;')'
0002E350 <AmiBlitz3.ab3@17728>    BNE.w syntaxerr
0002E354 <AmiBlitz3.ab3@17732>   LEA addrcode(PC),A0
0002E358 <AmiBlitz3.ab3@17733>   LEA addrcodef(PC),A1
0002E35E <AmiBlitz3.ab3@17734>   MOVE.w -$6(A2),$2(A0) ;x(a5)
0002E362 <AmiBlitz3.ab3@17735>   MOVE.w $4(A0),D1
0002E366 <AmiBlitz3.ab3@17736>   ANDI.w #$FFF8,D1
0002E36C <AmiBlitz3.ab3@17737>   OR.w regnum,D1
0002E370 <AmiBlitz3.ab3@17738>   MOVE.w D1,$4(A0)      ;add Dregat,a0
0002E374 <AmiBlitz3.ab3@17739>   MOVE.w $6(A0),D1
0002E378 <AmiBlitz3.ab3@17740>   ANDI.w #$F1FF,D1
0002E37E <AmiBlitz3.ab3@17741>   MOVE.w regnum,D0
0002E380 <AmiBlitz3.ab3@17742>   LSL.w #8,D0
0002E382 <AmiBlitz3.ab3@17743>   LSL.w #1,D0
0002E384 <AmiBlitz3.ab3@17744>   OR.w D0,D1
0002E388 <AmiBlitz3.ab3@17745>   MOVE.w D1,$6(A0)      ;move.l a0,Dregat
0002E38C <AmiBlitz3.ab3@17746>    BSR.w pokecode
0002E38E <AmiBlitz3.ab3@17747>   MOVEQ.l #$03,D2       ;now a long
0002E392 <AmiBlitz3.ab3@17748> BRA.w get1bytemain
0002E396 <AmiBlitz3.ab3@17754>   CMP.w #-$7F4D,D0     ; was #$8000+tnum,
0002E39A <AmiBlitz3.ab3@17755>    BHI.w 'overasm
0002E39E <AmiBlitz3.ab3@17756>  BRA.w syntaxerr
0002E3A2 <AmiBlitz3.ab3@17761>   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002E3A6 <AmiBlitz3.ab3@17762>    BNE 'nonull
0002E3AC <AmiBlitz3.ab3@17763>    MOVE.l d0,lastinstruction
0002E3B0 <AmiBlitz3.ab3@17764>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002E3B6 <AmiBlitz3.ab3@17765>    MOVE.w regnum,d0
0002E3B8 <AmiBlitz3.ab3@17766>    ASL.l #7,d0
0002E3BA <AmiBlitz3.ab3@17767>    ASL.l #2,d0
0002E3BC <AmiBlitz3.ab3@17768>    OR.l d0,d1
0002E3C0 <AmiBlitz3.ab3@17769>    BSR writeword
0002E3C6 <AmiBlitz3.ab3@17770>    JSR get1bytemain
0002E3C8 <AmiBlitz3.ab3@17771>   RTS
0002E3CC <AmiBlitz3.ab3@17774>   CMP.w #$c982,d0
0002E3D0 <AmiBlitz3.ab3@17775>    BNE nonew_
0002E3D2 <AmiBlitz3.ab3@17778>   MOVE.l a5,-(a7)
0002E3D8 <AmiBlitz3.ab3@17779>   MOVE.w lastchar,-(a7)
0002E3DE <AmiBlitz3.ab3@17780>   JSR get1bytemain
0002E3E2 <AmiBlitz3.ab3@17781>   CMP.w #"(",d0                                             ; use oldcode
0002E3E6 <AmiBlitz3.ab3@17782>   BNE 'newcode
0002E3EC <AmiBlitz3.ab3@17783>   JSR get1bytemain
0002E3F0 <AmiBlitz3.ab3@17784>   CMP.w #")",d0
0002E3F4 <AmiBlitz3.ab3@17785>   BEQ 'newcode
0002E3FA <AmiBlitz3.ab3@17786>   MOVE.w (a7)+,lastchar
0002E3FC <AmiBlitz3.ab3@17787>   MOVE.l (a7)+,a5
0002E402 <AmiBlitz3.ab3@17788>   MOVE.w lastchar,d0
0002E406 <AmiBlitz3.ab3@17789>   BRA nonew_
0002E408 <AmiBlitz3.ab3@17792>   MOVE.l a0,-(a7)
0002E40E <AmiBlitz3.ab3@17793>   TST.b blitzparloop
0002E412 <AmiBlitz3.ab3@17794>   BNE 'err
0002E418 <AmiBlitz3.ab3@17795>   TST.b funcparloop
0002E41C <AmiBlitz3.ab3@17796>   BNE 'err
0002E420 <AmiBlitz3.ab3@17797>   BRA 'ok
0002E426 <AmiBlitz3.ab3@17800>   JMP errornewnotincalls
0002E42C <AmiBlitz3.ab3@17803>   MOVE.l #$203c0000,d1
0002E430 <AmiBlitz3.ab3@17804>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002E432 <AmiBlitz3.ab3@17805>   MOVEQ #0,d1
0002E436 <AmiBlitz3.ab3@17806>   MOVE.w 8(a0),d1
0002E43A <AmiBlitz3.ab3@17807>   BSR writeword
0002E43E <AmiBlitz3.ab3@17808>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002E442 <AmiBlitz3.ab3@17809>   BSR writeword
0002E446 <AmiBlitz3.ab3@17810>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002E44A <AmiBlitz3.ab3@17811>   BSR.w tokejsr2
0002E44C <AmiBlitz3.ab3@17812>   MOVE.l (a7)+,a0
0002E44E <AmiBlitz3.ab3@17813>   ADDQ.l #6,a7                      ; a5 need not restore
0002E452 <AmiBlitz3.ab3@17814>   CMP.w #")",d0
0002E456 <AmiBlitz3.ab3@17815>   BNE 'nobracket
0002E45C <AmiBlitz3.ab3@17816>   JSR get1bytemain
0002E45E <AmiBlitz3.ab3@17819> RTS
0002E462 <AmiBlitz3.ab3@17823>   CMP.w #-$7F4A,D0      ; was #$8003+tnum,
0002E466 <AmiBlitz3.ab3@17824>    BEQ.w doern
0002E46A <AmiBlitz3.ab3@17825>   CMP.w #-$7F48,D0      ; was #$8005+tnum,
0002E46E <AmiBlitz3.ab3@17826>    BEQ.w doaddr
0002E472 <AmiBlitz3.ab3@17827>   CMP.w #-$7F3C,D0      ; was #$8011+tnum,
0002E476 <AmiBlitz3.ab3@17828>    BEQ.w domaximum
0002E47A <AmiBlitz3.ab3@17829>   CMP.w #-$7F2F,D0      ; was #$801e+tnum,
0002E47E <AmiBlitz3.ab3@17830>    BEQ.w doused
0002E480 <AmiBlitz3.ab3@17832>   MOVE.w D2,-(A7)       ;remember old type!
0002E482 <AmiBlitz3.ab3@17833>   MOVE.w D0,D1
0002E486 <AmiBlitz3.ab3@17834>   BCLR #$F,D1
0002E48A <AmiBlitz3.ab3@17838>    BSR.w searchinstr
0002E48C <AmiBlitz3.ab3@17839>   MOVE.w (A3),D1
0002E490 <AmiBlitz3.ab3@17840>   BTST #$1,D1
0002E494 <AmiBlitz3.ab3@17841>    BEQ.w noreturn_                                         ;syntax error noreturn
0002E498 <AmiBlitz3.ab3@17842>   BTST #$2,D1
0002E49C <AmiBlitz3.ab3@17843>    BNE.w amigalib
0002E49E <AmiBlitz3.ab3@17849>   LSR.w #8,D1
0002E4A4 <AmiBlitz3.ab3@17850>   BTST #$3,$1(A3)
0002E4A8 <AmiBlitz3.ab3@17851>    BEQ.w 'no0
0002E4AE <AmiBlitz3.ab3@17853>    JSR sizespec2
0002E4B4 <AmiBlitz3.ab3@17857>    CLR.l rightsidetype
0002E4BA <AmiBlitz3.ab3@17858>    CLR.w rightsideflagmask
0002E4BC <AmiBlitz3.ab3@17860>    MOVE.w D1,-(A7)                                         ;is library instruction
0002E4C0 <AmiBlitz3.ab3@17861>   CMP.w #$7,D1
0002E4C4 <AmiBlitz3.ab3@17862>    BNE.w 'notst0
0002E4C6 <AmiBlitz3.ab3@17863>   MOVE.l A2,-(A7)
0002E4CA <AmiBlitz3.ab3@17864>    BSR.w makesbase
0002E4CC <AmiBlitz3.ab3@17865>   MOVEA.l (A7)+,A2
0002E4D0 <AmiBlitz3.ab3@17868>     BSR.w savem
0002E4D2 <AmiBlitz3.ab3@17869>   MOVE.w D3,-(A7)        ;the movem regs
0002E4D6 <AmiBlitz3.ab3@17871>    BSR.w get1bytemain
0002E4D8 <AmiBlitz3.ab3@17872>   MOVEQ.l #$00,D1
0002E4DC <AmiBlitz3.ab3@17873>   CMP.w #$28,D0          ;'('
0002E4E0 <AmiBlitz3.ab3@17874>    BNE.w 'nopars
0002E4E6 <AmiBlitz3.ab3@17875>    JSR countpees
0002E4E8 <AmiBlitz3.ab3@17876>   TST.w D1
0002E4EC <AmiBlitz3.ab3@17877>    BEQ.w syntaxerr
0002E4F0 <AmiBlitz3.ab3@17878>  BRA.w 'skip0
0002E4FA <AmiBlitz3.ab3@17883>   MOVE.w oldqflag,instringon
0002E500 <AmiBlitz3.ab3@17884>   MOVEA.l lastsourcepos,A5
0002E506 <AmiBlitz3.ab3@17888>    MOVE.w regnum,-(A7)
0002E510 <AmiBlitz3.ab3@17890>    MOVE.w regnum,regnumstore
0002E516 <AmiBlitz3.ab3@17891>    TST.b fpu
0002E51A <AmiBlitz3.ab3@17892>             BEQ 'nofloat
0002E520 <AmiBlitz3.ab3@17893>             CMP.w #$ffff,28(a3)
0002E524 <AmiBlitz3.ab3@17894>             BNE 'nofloat
0002E52A <AmiBlitz3.ab3@17895>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002E52E <AmiBlitz3.ab3@17896>             BEQ 'nofloat
0002E534 <AmiBlitz3.ab3@17897>             CMP.w #$3c02,34(a3)                            ;int skip
0002E538 <AmiBlitz3.ab3@17898>             BEQ 'quick1
0002E53C <AmiBlitz3.ab3@17899>             CMP.b #5,(a3)
0002E540 <AmiBlitz3.ab3@17900>             BNE 'nofloat
0002E546 <AmiBlitz3.ab3@17903>             CLR.l load_var_addr
0002E54A <AmiBlitz3.ab3@17904>  BRA 'isfpu
0002E550 <AmiBlitz3.ab3@17908>    CLR.w regnum
0002E552 <AmiBlitz3.ab3@17911>    MOVE.w D1,-(A7)
0002E558 <AmiBlitz3.ab3@17912>   BTST #$3,$1(A3)
0002E55C <AmiBlitz3.ab3@17913>    BEQ.w 'no2
0002E560 <AmiBlitz3.ab3@17934>   MOVE.w $6(A7),D1
0002E566 <AmiBlitz3.ab3@17936>   MOVE.w d1,peeksize
0002E56A <AmiBlitz3.ab3@17947>   ORI.w #$7000,D1
0002E56E <AmiBlitz3.ab3@17948>   BSR.w writeword                                          ;write peekmode
0002E574 <AmiBlitz3.ab3@17951>   ADDQ.w #1,regnum
0002E576 <AmiBlitz3.ab3@17952>   MOVE.w (A7),D1
0002E57E <AmiBlitz3.ab3@17956>   MOVE.w 2(a7),tempregnum
0002E584 <AmiBlitz3.ab3@17957>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E58A <AmiBlitz3.ab3@17958>   CLR.w parnum                                              ;7.2014
0002E590 <AmiBlitz3.ab3@17960>   JSR dolibtoke                                             ;write code of blitzfunc
0002E596 <AmiBlitz3.ab3@17962>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E598 <AmiBlitz3.ab3@17964>   TST.w (A7)+
0002E59C <AmiBlitz3.ab3@17965>   BEQ.w 'skip
0002E5A0 <AmiBlitz3.ab3@17966>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E5A4 <AmiBlitz3.ab3@17967>   BNE.w errorbracketmiss                                    ; was syntax error
0002E5AA <AmiBlitz3.ab3@17969>   CLR.l lasttoken
0002E5AE <AmiBlitz3.ab3@17971>   BSR.w get1bytemain
0002E5B0 <AmiBlitz3.ab3@17974>    MOVE.w (A7)+,D1
0002E5B6 <AmiBlitz3.ab3@17975>    MOVE.w D1,regnum
0002E5BA <AmiBlitz3.ab3@17976>    BEQ.w 'skip2
0002E5C0 <AmiBlitz3.ab3@17978>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E5C4 <AmiBlitz3.ab3@17979>    BNE 'noval
0002E5CA <AmiBlitz3.ab3@17980>    TST.b fpu
0002E5CE <AmiBlitz3.ab3@17981>    BEQ 'noval
0002E5D4 <AmiBlitz3.ab3@17982>    CLR.l load_var_addr
0002E5D6 <AmiBlitz3.ab3@17983>    MOVEQ #0,d1
0002E5DC <AmiBlitz3.ab3@17984>    MOVE.w regnum,d1
0002E5DE <AmiBlitz3.ab3@17985>    LSL.l #7,d1
0002E5E4 <AmiBlitz3.ab3@17986>    OR.l #$f2000000,d1
0002E5E8 <AmiBlitz3.ab3@17987>    BSR writelong
0002E5EC <AmiBlitz3.ab3@17988>  BRA 'skip2
0002E5F2 <AmiBlitz3.ab3@17991>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E5F6 <AmiBlitz3.ab3@17992>    BEQ 'quick
0002E5FA <AmiBlitz3.ab3@17993>    CMP.b #5,d2
0002E5FE <AmiBlitz3.ab3@17994>    BNE 'nofpu2
0002E604 <AmiBlitz3.ab3@17995>    TST.b fpu
0002E608 <AmiBlitz3.ab3@17996>    BEQ 'nofpu2
0002E60E <AmiBlitz3.ab3@18001>    CLR.l load_var_addr
0002E612 <AmiBlitz3.ab3@18002>  BRA 'skip2
0002E614 <AmiBlitz3.ab3@18006>   LSL.w #8,D1
0002E616 <AmiBlitz3.ab3@18007>   LSL.w #1,D1
0002E61A <AmiBlitz3.ab3@18008>   ORI.w #$2000,D1
0002E61E <AmiBlitz3.ab3@18009>   BSR.w writeword      ;move.l d0,regat                                    ;write move.l d0,dx
0002E624 <AmiBlitz3.ab3@18011>   TST.b fpu
0002E628 <AmiBlitz3.ab3@18012>   BEQ 'skip2
0002E62A <AmiBlitz3.ab3@18013>   MOVEQ #0,d1
0002E630 <AmiBlitz3.ab3@18014>   MOVE.w regnum,d1
0002E632 <AmiBlitz3.ab3@18015>   LSL.l #7,d1
0002E638 <AmiBlitz3.ab3@18016>   OR.l #$f2000000,d1
0002E63A <AmiBlitz3.ab3@18021>        MOVE.w (A7)+,D3
0002E63E <AmiBlitz3.ab3@18022>        BEQ.w 'nomovem
0002E644 <AmiBlitz3.ab3@18024>        TST.b fpu
0002E648 <AmiBlitz3.ab3@18025>        BEQ 'nofpu3
0002E64A <AmiBlitz3.ab3@18026>       MOVE.l d0,-(a7)
0002E64C <AmiBlitz3.ab3@18027>        MOVE.l a0,-(a7)
0002E652 <AmiBlitz3.ab3@18028>        MOVE.l stacktrack,d1
0002E658 <AmiBlitz3.ab3@18029>        LEA fpustackbase,a0
0002E660 <AmiBlitz3.ab3@18030>        MOVE.w 0(a0,d1),regmask
0002E662 <AmiBlitz3.ab3@18031>        MOVE.l (a7)+,a0
0002E666 <AmiBlitz3.ab3@18032>       MOVE.w #8,d0
0002E66A <AmiBlitz3.ab3@18035>       BEQ 'ready
0002E670 <AmiBlitz3.ab3@18036>       BTST d0,regmask
0002E674 <AmiBlitz3.ab3@18037>       BEQ 'noa7
0002E676 <AmiBlitz3.ab3@18038>       MOVEQ #0,d1
0002E678 <AmiBlitz3.ab3@18039>       MOVE.w d0,d1
0002E67A <AmiBlitz3.ab3@18040>       SUBQ.w #1,d1
0002E67C <AmiBlitz3.ab3@18041>       ASL #7,d1
0002E682 <AmiBlitz3.ab3@18043>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E686 <AmiBlitz3.ab3@18044>       BSR writelong
0002E68C <AmiBlitz3.ab3@18045>       SUBQ.l #2,stacktrack
0002E68E <AmiBlitz3.ab3@18048>       SUBQ.w #1,d0
0002E692 <AmiBlitz3.ab3@18049>       BNE 'loop
0002E694 <AmiBlitz3.ab3@18052>       MOVE.l (a7)+,d0
0002E69A <AmiBlitz3.ab3@18053>       SUBQ.l #2,stacktrack                                 ;int track
0002E69E <AmiBlitz3.ab3@18057>    MOVE.w #$4CDF,D1
0002E6A2 <AmiBlitz3.ab3@18058>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E6A4 <AmiBlitz3.ab3@18059>   MOVEQ.l #$00,D1
0002E6A6 <AmiBlitz3.ab3@18060>   MOVEQ.l #$0F,D4
0002E6A8 <AmiBlitz3.ab3@18063>     LSL.w #1,D3
0002E6AA <AmiBlitz3.ab3@18064>     ROXR.w #1,D1
0002E6AE <AmiBlitz3.ab3@18065>   DBF D4,'loopsw
0002E6B2 <AmiBlitz3.ab3@18066>    BSR.w writeword      ;poke movem (a7)+...
0002E6B8 <AmiBlitz3.ab3@18068>    TST.b fast
0002E6BC <AmiBlitz3.ab3@18069>    BEQ 'nomovem
0002E6C2 <AmiBlitz3.ab3@18070>    TST.w regnum
0002E6C6 <AmiBlitz3.ab3@18071>    BEQ 'nomovem
0002E6CC <AmiBlitz3.ab3@18072>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E6D0 <AmiBlitz3.ab3@18073>    BNE 'l1b
0002E6D6 <AmiBlitz3.ab3@18074>    MOVE.w regnum,d1
0002E6D8 <AmiBlitz3.ab3@18075>    ASL.l #8,d1
0002E6DA <AmiBlitz3.ab3@18076>    ASL.l #1,d1
0002E6DE <AmiBlitz3.ab3@18077>    OR.w #$70ff,d1
0002E6E8 <AmiBlitz3.ab3@18078>    SUB.l #12,destpointer
0002E6EC <AmiBlitz3.ab3@18079>    BSR writeword
0002E6F2 <AmiBlitz3.ab3@18082>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E6F6 <AmiBlitz3.ab3@18083>    BNE 'l2b
0002E6FC <AmiBlitz3.ab3@18084>     MOVE.w regnum,d1
0002E6FE <AmiBlitz3.ab3@18085>     ASL.l #8,d1
0002E700 <AmiBlitz3.ab3@18086>     ASL.l #1,d1
0002E704 <AmiBlitz3.ab3@18087>     OR.w #$7000,d1
0002E70E <AmiBlitz3.ab3@18088>     SUB.l #12,destpointer
0002E712 <AmiBlitz3.ab3@18089>     BSR writeword
0002E714 <AmiBlitz3.ab3@18094>    MOVE.w (A7)+,D2
0002E718 <AmiBlitz3.ab3@18095>   CMP.w #$7,D2                                             ;destination var type
0002E71C <AmiBlitz3.ab3@18096>    BNE.w 'notst
0002E722 <AmiBlitz3.ab3@18097>   MOVE.w putstlen,D1
0002E728 <AmiBlitz3.ab3@18098>   OR.w regnum,D1
0002E72C <AmiBlitz3.ab3@18099>    BSR.w writeword
0002E730 <AmiBlitz3.ab3@18102> BRA.w varcont
0002E734 <AmiBlitz3.ab3@18107>   MOVE.w $6(A3),D1
0002E738 <AmiBlitz3.ab3@18108>    BSR.w uselib           ;get lib for base address
0002E73C <AmiBlitz3.ab3@18109>    BSR.w savereg
0002E73E <AmiBlitz3.ab3@18110>   MOVE.l D4,D1
0002E740 <AmiBlitz3.ab3@18111>   MOVE.l D5,-(A7)
0002E744 <AmiBlitz3.ab3@18112>    BSR.w pokemovem
0002E748 <AmiBlitz3.ab3@18113>   MOVE.w $A(A1),-(A7)     ;libbase reg
0002E74A <AmiBlitz3.ab3@18114>   ADDQ.w #8,A3
0002E74C <AmiBlitz3.ab3@18115>   MOVE.w (A3)+,-(A7)      ;get offset for lib
0002E74E <AmiBlitz3.ab3@18116>   MOVE.l A3,-(A7)
0002E752 <AmiBlitz3.ab3@18117>    BSR.w get1bytemain
0002E754 <AmiBlitz3.ab3@18118>   MOVE.w D0,-(A7)         ;remember first bracket....
0002E756 <AmiBlitz3.ab3@18122>   MOVEQ.l #$00,D3
0002E75C <AmiBlitz3.ab3@18124>   JSR checka4a5
0002E75E <AmiBlitz3.ab3@18128>   MOVE.b (A3)+,D1
0002E762 <AmiBlitz3.ab3@18129>    BMI.w 'done
0002E764 <AmiBlitz3.ab3@18130>   MOVEQ.l #$03,D2
0002E766 <AmiBlitz3.ab3@18131>   ADDQ.w #1,D3
0002E76A <AmiBlitz3.ab3@18132>   MOVEM.l D3/A3,-(A7)
0002E770 <AmiBlitz3.ab3@18134>   MOVE.b funcparloop,-(a7)
0002E776 <AmiBlitz3.ab3@18135>   CLR.b funcparloop
0002E77C <AmiBlitz3.ab3@18136>   MOVE.b blitzparloop,-(a7)
0002E784 <AmiBlitz3.ab3@18137>   MOVE.b #1,blitzparloop
0002E78A <AmiBlitz3.ab3@18138>   MOVE.l lasttoken,-(a7)
0002E790 <AmiBlitz3.ab3@18139>   MOVE.l leftsidetype,-(a7)
0002E796 <AmiBlitz3.ab3@18140>   MOVE.l rightsidetype,-(a7)
0002E79A <AmiBlitz3.ab3@18142>   BSR.w peval
0002E7A0 <AmiBlitz3.ab3@18144>   MOVE.l (a7)+,rightsidetype
0002E7A6 <AmiBlitz3.ab3@18145>   MOVE.l (a7)+,leftsidetype
0002E7AC <AmiBlitz3.ab3@18146>   MOVE.l (a7)+,lasttoken
0002E7B2 <AmiBlitz3.ab3@18147>   MOVE.b (a7)+,blitzparloop
0002E7B8 <AmiBlitz3.ab3@18148>   MOVE.b (a7)+,funcparloop
0002E7BE <AmiBlitz3.ab3@18150>   SUBQ.w #4,a2offset              ;readjust stack! it's coming off later!
0002E7C2 <AmiBlitz3.ab3@18151>   MOVEM.l (A7)+,D3/A3
0002E7C6 <AmiBlitz3.ab3@18152>   CMP.w #$2C,D0                   ;','
0002E7CA <AmiBlitz3.ab3@18153>    BEQ.w 'loop
0002E7CC <AmiBlitz3.ab3@18154>   TST.b (A3)
0002E7D0 <AmiBlitz3.ab3@18155>    BPL.w syntaxerr
0002E7D2 <AmiBlitz3.ab3@18158>   MOVE.w (A7)+,D1
0002E7D6 <AmiBlitz3.ab3@18159>    BSR.w tstbras
0002E7D8 <AmiBlitz3.ab3@18160>   MOVEA.l (A7)+,A3
0002E7DA <AmiBlitz3.ab3@18161>   SUBQ.w #1,D3
0002E7DE <AmiBlitz3.ab3@18162>    BMI.w 'nopars
0002E7E0 <AmiBlitz3.ab3@18165>   TST.b (A3)+                     ;go to end of params
0002E7E4 <AmiBlitz3.ab3@18166>    BPL.w 'toend
0002E7E6 <AmiBlitz3.ab3@18167>   SUBQ.w #1,A3
0002E7E8 <AmiBlitz3.ab3@18170>     MOVEQ.l #$00,D1
0002E7EA <AmiBlitz3.ab3@18171>     MOVE.b -(A3),D1
0002E7EE <AmiBlitz3.ab3@18172>     BTST #$4,D1
0002E7F2 <AmiBlitz3.ab3@18173>      BNE.w 'addreg
0002E7F8 <AmiBlitz3.ab3@18174>     CMP.w regnum,D1
0002E7FC <AmiBlitz3.ab3@18175>      BCC.w 'nomovem
0002E7FE <AmiBlitz3.ab3@18176>     BSET D1,D5
0002E800 <AmiBlitz3.ab3@18177>     MOVEQ.l #$0F,D0
0002E802 <AmiBlitz3.ab3@18178>     SUB.w D1,D0
0002E804 <AmiBlitz3.ab3@18179>     BSET D0,D4
0002E806 <AmiBlitz3.ab3@18182>     LSL.w #8,D1
0002E808 <AmiBlitz3.ab3@18183>     LSL.w #1,D1
0002E80C <AmiBlitz3.ab3@18184>     ORI.w #$201F,D1
0002E810 <AmiBlitz3.ab3@18185>    BRA.w 'gotit
0002E814 <AmiBlitz3.ab3@18188>     ANDI.w #$7,D1
0002E816 <AmiBlitz3.ab3@18189>     LSL.w #8,D1
0002E818 <AmiBlitz3.ab3@18190>     LSL.w #1,D1
0002E81C <AmiBlitz3.ab3@18191>     ORI.w #$205F,D1
0002E820 <AmiBlitz3.ab3@18194>      BSR.w writeword
0002E824 <AmiBlitz3.ab3@18195>   DBF D3,'loop2
0002E82A <AmiBlitz3.ab3@18198>   MOVE.w (A7)+,libjsr+2
0002E830 <AmiBlitz3.ab3@18199>   MOVE.w (A7)+,libbase+2
0002E836 <AmiBlitz3.ab3@18200>   MOVE.l libbase,D1
0002E83A <AmiBlitz3.ab3@18201>    BSR.w writelong
0002E840 <AmiBlitz3.ab3@18202>   MOVE.l libjsr,D1
0002E844 <AmiBlitz3.ab3@18203>    BSR.w writelong
0002E84A <AmiBlitz3.ab3@18204>   MOVE.w regnum,D1
0002E84E <AmiBlitz3.ab3@18205>    BEQ.w 'nofin
0002E850 <AmiBlitz3.ab3@18206>   LSL.w #8,D1
0002E852 <AmiBlitz3.ab3@18207>   LSL.w #1,D1
0002E856 <AmiBlitz3.ab3@18208>   ORI.w #$2000,D1
0002E85A <AmiBlitz3.ab3@18209>    BSR.w writeword
0002E85C <AmiBlitz3.ab3@18212>   MOVE.l (A7)+,D1
0002E860 <AmiBlitz3.ab3@18213>    BSR.w pokemovem
0002E866 <AmiBlitz3.ab3@18215>    JSR restorea4a5
0002E868 <AmiBlitz3.ab3@18217>   MOVEQ.l #$03,D2
0002E86C <AmiBlitz3.ab3@18218>    BSR.w reget
0002E870 <AmiBlitz3.ab3@18219> BRA.w varcont
0002E872 <AmiBlitz3.ab3@18228>   TST.w D3
0002E876 <AmiBlitz3.ab3@18229>    BEQ.w 'nopars
0002E87A <AmiBlitz3.ab3@18230>   CMP.w #$28,D1      ;'('
0002E87E <AmiBlitz3.ab3@18231>    BNE.w syntaxerr
0002E882 <AmiBlitz3.ab3@18232>   CMP.w #$29,D0      ;')'
0002E886 <AmiBlitz3.ab3@18233>    BNE.w syntaxerr
0002E88A <AmiBlitz3.ab3@18234>  BRA.w get1bytemain
0002E88E <AmiBlitz3.ab3@18237>   CMP.w #$28,D1       ;'('
0002E892 <AmiBlitz3.ab3@18238>    BNE.w 'skip
0002E896 <AmiBlitz3.ab3@18239>    BSR.w get1bytemain
0002E89A <AmiBlitz3.ab3@18240>   CMP.w #$29,D0       ;')'
0002E89E <AmiBlitz3.ab3@18241>    BNE.w syntaxerr
0002E8A2 <AmiBlitz3.ab3@18242>  BRA.w get1bytemain
0002E8A4 <AmiBlitz3.ab3@18245> RTS
0002E8A6 <AmiBlitz3.ab3@18249>   TST.w D1
0002E8AA <AmiBlitz3.ab3@18250>    BNE.w writelong
0002E8AC <AmiBlitz3.ab3@18251> RTS
0002E8B0 <AmiBlitz3.ab3@18256>   MOVE.w #$48E7,D4
0002E8B2 <AmiBlitz3.ab3@18257>   SWAP D4
0002E8B4 <AmiBlitz3.ab3@18258>   CLR.w D4
0002E8B8 <AmiBlitz3.ab3@18259>   MOVE.w #$4CDF,D5
0002E8BA <AmiBlitz3.ab3@18260>   SWAP D5
0002E8BC <AmiBlitz3.ab3@18261>   CLR.w D5
0002E8C2 <AmiBlitz3.ab3@18262>   MOVE.w regnum,D1
0002E8C6 <AmiBlitz3.ab3@18263>    BEQ.w 'skip
0002E8CA <AmiBlitz3.ab3@18264>   BSET #$F,D4
0002E8CE <AmiBlitz3.ab3@18265>   BSET #$0,D5
0002E8D2 <AmiBlitz3.ab3@18266>   CMP.w #$2,D1
0002E8D6 <AmiBlitz3.ab3@18267>    BCS.w 'skip2
0002E8DA <AmiBlitz3.ab3@18270>   BSET #$E,D4
0002E8DE <AmiBlitz3.ab3@18271>   BSET #$1,D5
0002E8E0 <AmiBlitz3.ab3@18274>  RTS
0002E8E6 <AmiBlitz3.ab3@18277>   TST.w fuckpos
0002E8EA <AmiBlitz3.ab3@18278>   BNE.w 'skip3
0002E8EC <AmiBlitz3.ab3@18279> RTS
0002E8EE <AmiBlitz3.ab3@18282> fuckpos:  Ds.w 1
0002E8F4 <AmiBlitz3.ab3@18286>   MOVE.w sbasegot,D1
0002E8F8 <AmiBlitz3.ab3@18287>    BEQ.w 'skip
0002E8FC <AmiBlitz3.ab3@18291>   MOVE.w sbgot(PC),D1
0002E900 <AmiBlitz3.ab3@18292>    BNE.w 'skip2
0002E908 <AmiBlitz3.ab3@18296>   MOVE.w #$0002,sbgot
0002E90E <AmiBlitz3.ab3@18297>   MOVE.w movea3a7,D1
0002E912 <AmiBlitz3.ab3@18298>  BRA.w writeword
0002E914 <AmiBlitz3.ab3@18301>  RTS
0002E91C <AmiBlitz3.ab3@18306>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E922 <AmiBlitz3.ab3@18308>   MOVE.l #$C601,D1                  ; was #workstart,
0002E92A <AmiBlitz3.ab3@18309>   MOVE.w #-1,sbasegot               
0002E930 <AmiBlitz3.ab3@18311>   MOVE.l d1,lastinstruction
0002E934 <AmiBlitz3.ab3@18313>   BSR.w Atokejsr
0002E936 <AmiBlitz3.ab3@18314> RTS
0002E940 <AmiBlitz3.ab3@18319>   MOVE.l data1,litdata1
0002E946 <AmiBlitz3.ab3@18321>   TST.b fast
0002E94A <AmiBlitz3.ab3@18322>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E94E <AmiBlitz3.ab3@18326>  BRA 'l50                                                  ;to deactivate
0002E954 <AmiBlitz3.ab3@18332>   TST.b optistring
0002E958 <AmiBlitz3.ab3@18333>   BNE.s 'l21
0002E95E <AmiBlitz3.ab3@18334>   CLR.b string1
0002E966 <AmiBlitz3.ab3@18335>   MOVE.b #1,optistring
0002E96C <AmiBlitz3.ab3@18336>   TST.b nostringopt
0002E970 <AmiBlitz3.ab3@18337>   BNE 'l21
0002E972 <AmiBlitz3.ab3@18338>   MOVE.l a5,a4
0002E974 <AmiBlitz3.ab3@18339>   SUBQ.l #1,a4
0002E976 <AmiBlitz3.ab3@18342>     TST.b (a4)
0002E97A <AmiBlitz3.ab3@18343>     BMI 'l19a
0002E97E <AmiBlitz3.ab3@18344>     BEQ.s 'l20
0002E982 <AmiBlitz3.ab3@18345>     CMP.b #$22,(a4)
0002E986 <AmiBlitz3.ab3@18346>     BEQ.s 'l19
0002E98C <AmiBlitz3.ab3@18349>     TST.w string1
0002E990 <AmiBlitz3.ab3@18350>     BNE 'l11
0002E994 <AmiBlitz3.ab3@18351>     CMP.b #":",(a4)
0002E998 <AmiBlitz3.ab3@18352>     BEQ.s 'l20
0002E99C <AmiBlitz3.ab3@18353>     CMP.b #";",(a4)
0002E9A0 <AmiBlitz3.ab3@18354>     BEQ.s 'l20
0002E9A4 <AmiBlitz3.ab3@18355>     CMP.b #"+",(a4)
0002E9A8 <AmiBlitz3.ab3@18356>     BEQ.s 'l21
0002E9AC <AmiBlitz3.ab3@18357>     CMP.b #",",(a4)
0002E9B0 <AmiBlitz3.ab3@18358>     BEQ.s 'l20                                             ;was l21
0002E9B4 <AmiBlitz3.ab3@18359>     CMP.b #")",(a4)
0002E9B8 <AmiBlitz3.ab3@18360>     BEQ.s 'l20                                             ;was l21
0002E9BA <AmiBlitz3.ab3@18363>     ADDQ.l #1,a4
0002E9BE <AmiBlitz3.ab3@18364>  BRA.s 'l10
0002E9C6 <AmiBlitz3.ab3@18367>   BCHG #0,string1
0002E9CA <AmiBlitz3.ab3@18368>  BRA 'l18
0002E9CC <AmiBlitz3.ab3@18371>   ADDQ.l #1,a4
0002E9CE <AmiBlitz3.ab3@18372>   TST.b (a4)
0002E9D2 <AmiBlitz3.ab3@18373>   BEQ 'l21
0002E9D6 <AmiBlitz3.ab3@18374>  BRA 'l11
0002E9D8 <AmiBlitz3.ab3@18377>   MOVE.l a5,a4
0002E9DA <AmiBlitz3.ab3@18378>   SUBQ.l #1,a4
0002E9DE <AmiBlitz3.ab3@18381>   CMP.b #$20,-(a4)
0002E9E2 <AmiBlitz3.ab3@18382>   BEQ 'll1
0002E9E6 <AmiBlitz3.ab3@18383>   CMP.b #"+",(a4)
0002E9EA <AmiBlitz3.ab3@18384>   BEQ 'l21
0002E9F2 <AmiBlitz3.ab3@18399>   MOVE.b #2,optistring
0002E9FA <AmiBlitz3.ab3@18402>   CMP.b #2,optistring
0002E9FE <AmiBlitz3.ab3@18403>   BEQ.s 'l100
0002EA02 <AmiBlitz3.ab3@18406>   BSR.w makesbase
0002EA06 <AmiBlitz3.ab3@18408>   BSR.w pokedata1                                          ;writestringsizespace
0002EA0A <AmiBlitz3.ab3@18409>   BSR.w pokedata1
0002EA0C <AmiBlitz3.ab3@18412>   MOVEQ.l #$00,D2
0002EA12 <AmiBlitz3.ab3@18416>     MOVE.l a5,lastsourcepos
0002EA14 <AmiBlitz3.ab3@18417>     MOVEQ #0,d0
0002EA16 <AmiBlitz3.ab3@18418>     MOVE.b (a5)+,d0
0002EA18 <AmiBlitz3.ab3@18420>     TST.w D0
0002EA1C <AmiBlitz3.ab3@18421>      BEQ.w notqerr
0002EA20 <AmiBlitz3.ab3@18422>     CMP.w #$22,D0     ; '"'                                     ; --- " ---
0002EA24 <AmiBlitz3.ab3@18423>      BEQ.w 'done
0002EA28 <AmiBlitz3.ab3@18425>     CMP.b #"\",d0
0002EA2C <AmiBlitz3.ab3@18426>      BNE 'l1
0002EA30 <AmiBlitz3.ab3@18427>     CMP.b #"\",(a5)
0002EA34 <AmiBlitz3.ab3@18428>      BNE 'l1
0002EA3A <AmiBlitz3.ab3@18429>     TST.b newsyntax
0002EA3E <AmiBlitz3.ab3@18430>      BEQ 'l1
0002EA44 <AmiBlitz3.ab3@18431>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002EA48 <AmiBlitz3.ab3@18432>     BNE 'l2
0002EA4A <AmiBlitz3.ab3@18433>     ADDQ #2,a5
0002EA4C <AmiBlitz3.ab3@18436>     ADDQ.w #1,D2
0002EA4E <AmiBlitz3.ab3@18437>     MOVE.w D0,D1
0002EA52 <AmiBlitz3.ab3@18438>     BSR.w pokedata1b                                        ;writestring
0002EA56 <AmiBlitz3.ab3@18439>  BRA.w 'writestring
0002EA5C <AmiBlitz3.ab3@18442>     JSR check_newconstants
0002EA60 <AmiBlitz3.ab3@18443>  BRA 'writestring
0002EA66 <AmiBlitz3.ab3@18448>   NOT instringon
0002EA6C <AmiBlitz3.ab3@18450>   MOVE.w dontwrite_nomemleft,D1
0002EA70 <AmiBlitz3.ab3@18451>   BNE.w 'skip
0002EA78 <AmiBlitz3.ab3@18453>   CMP.b #2,optistring
0002EA7C <AmiBlitz3.ab3@18454>   BEQ 'skip
0002EA82 <AmiBlitz3.ab3@18456>     MOVEA.l litdata1,A0
0002EA84 <AmiBlitz3.ab3@18457>     CLR.w (A0)+                                            ;writesize
0002EA86 <AmiBlitz3.ab3@18458>     MOVE.w D2,(A0)
0002EA8A <AmiBlitz3.ab3@18461>   BSR.w makelit                                          ;writestringconstantcode
0002EA90 <AmiBlitz3.ab3@18462>   ADDQ.l #1,data1
0002EA98 <AmiBlitz3.ab3@18463>   BCLR #$0,data1+3
0002EA9A <AmiBlitz3.ab3@18464>   MOVEQ.l #$07,D2
0002EA9E <AmiBlitz3.ab3@18465> BRA.w get1bytemain
0002EAA2 <AmiBlitz3.ab3@18470>   BSR.w makename2
0002EAA6 <AmiBlitz3.ab3@18472>   BSR.w findlabel2
0002EAAA <AmiBlitz3.ab3@18473>   BEQ.w 'found
0002EAAE <AmiBlitz3.ab3@18475>   BSR.w addlabelhash
0002EAB2 <AmiBlitz3.ab3@18476>   CLR.l $4(A2)           ;no refs
0002EAB6 <AmiBlitz3.ab3@18477>   CLR.l $8(A2)           ;not created yet (no PC)
0002EABE <AmiBlitz3.ab3@18479>   MOVE.w linenumat+2,$10(A2)  ; was linenumat,    ;context
0002EAC4 <AmiBlitz3.ab3@18481>   MOVE.w linenumat,d0
0002EAC6 <AmiBlitz3.ab3@18482>   MOVEQ #0,d1
0002EACA <AmiBlitz3.ab3@18483>   MOVE.b -1(a2,d7),d1
0002EACE <AmiBlitz3.ab3@18484>   MOVE.w d0,0(a2,d1)
0002EAD2 <AmiBlitz3.ab3@18486>  BRA.w 'makeit
0002EAD6 <AmiBlitz3.ab3@18489>   TST.l $8(A2)
0002EADA <AmiBlitz3.ab3@18490>   BNE.w 'gotit    ;already made
0002EAE0 <AmiBlitz3.ab3@18496>   MOVEA.l _execbase,A6
0002EAE2 <AmiBlitz3.ab3@18497>   MOVEQ.l #$0C+2,D0      ; was 12
0002EAE4 <AmiBlitz3.ab3@18498>   MOVEQ.l #$01,D1
0002EAEA <AmiBlitz3.ab3@18500>   MOVE.l mempool,a0
0002EAEE <AmiBlitz3.ab3@18501>   JSR _AllocPooled(a6)
0002EAF0 <AmiBlitz3.ab3@18504>   MOVEA.l D0,A0
0002EAF4 <AmiBlitz3.ab3@18505>   MOVE.l $4(A2),(A0)
0002EAF8 <AmiBlitz3.ab3@18506>   MOVE.l A0,$4(A2)
0002EB00 <AmiBlitz3.ab3@18507>   MOVE.l destpointer,$4(A0)
0002EB04 <AmiBlitz3.ab3@18508>   ADDQ.l #2,$4(A0)
0002EB0C <AmiBlitz3.ab3@18509>   MOVE.w procnum,$8(A0)
0002EB14 <AmiBlitz3.ab3@18510>   MOVE.w linenumat+2,$A(A0)   ; was linenumat,
0002EB1C <AmiBlitz3.ab3@18512>   MOVE.w linenumat,$c(a0)
0002EB1E <AmiBlitz3.ab3@18514>  RTS
0002EB22 <AmiBlitz3.ab3@18517>   MOVE.l $4(A2),D1
0002EB26 <AmiBlitz3.ab3@18518>   BTST #$0,D1
0002EB2A <AmiBlitz3.ab3@18519>    BNE.w illlaberr
0002EB30 <AmiBlitz3.ab3@18520>   MOVE.w procnum,D1
0002EB34 <AmiBlitz3.ab3@18521>   CMP.w $10(A2),D1
0002EB38 <AmiBlitz3.ab3@18522>    BNE.w referr
0002EB3A <AmiBlitz3.ab3@18525> RTS
0002EB3C <AmiBlitz3.ab3@18531>   MOVE.w D0,-(A7)
0002EB44 <AmiBlitz3.ab3@18533>   CMP.b #2,optistring
0002EB48 <AmiBlitz3.ab3@18534>   BEQ 'l10
0002EB4E <AmiBlitz3.ab3@18538>   MOVE.w numtoa0,D1
0002EB52 <AmiBlitz3.ab3@18539>    BSR.w writeword
0002EB56 <AmiBlitz3.ab3@18540>    BSR.w addoff
0002EB5C <AmiBlitz3.ab3@18541>   MOVE.l litdata1,D1
0002EB60 <AmiBlitz3.ab3@18542>    BSR.w writelong
0002EB66 <AmiBlitz3.ab3@18543>   MOVE.w pushlen,D1
0002EB6A <AmiBlitz3.ab3@18544>    BSR.w writeword
0002EB6E <AmiBlitz3.ab3@18545>   MOVE.w #$C600,D1        ; was #copstring
0002EB72 <AmiBlitz3.ab3@18546>    BSR.w Atokejsr
0002EB74 <AmiBlitz3.ab3@18547>   MOVE.w (A7)+,D0
0002EB76 <AmiBlitz3.ab3@18548>  RTS
0002EB78 <AmiBlitz3.ab3@18552>   MOVEQ #0,d1
0002EB7C <AmiBlitz3.ab3@18553>   BSR.w pokedata1b
0002EB82 <AmiBlitz3.ab3@18554>   MOVE.l destpointer,a4
0002EB86 <AmiBlitz3.ab3@18555>   MOVE.w #$203c,d1
0002EB8C <AmiBlitz3.ab3@18556>   TST.w mode
0002EB90 <AmiBlitz3.ab3@18557>   BNE 'lm10
0002EB96 <AmiBlitz3.ab3@18558>    ADDQ.w #4,a2offset
0002EB9A <AmiBlitz3.ab3@18559>   MOVE.w #$2f3c,d1
0002EBA0 <AmiBlitz3.ab3@18562>   TST.w mode
0002EBA4 <AmiBlitz3.ab3@18563>   BEQ 'lm3
0002EBAA <AmiBlitz3.ab3@18564>   MOVE.w regnum,D0
0002EBAC <AmiBlitz3.ab3@18565>   LSL.w #8,D0
0002EBAE <AmiBlitz3.ab3@18566>   LSL.w #1,D0
0002EBB0 <AmiBlitz3.ab3@18567>   OR.w d0,d1
0002EBB4 <AmiBlitz3.ab3@18568>   BSR writeword
0002EBB8 <AmiBlitz3.ab3@18569>   BSR.w addoff
0002EBBE <AmiBlitz3.ab3@18570>   MOVE.l litdata1,D1
0002EBC2 <AmiBlitz3.ab3@18571>   BSR.w writelong
0002EBCA <AmiBlitz3.ab3@18572>   CMP.w #3,mode
0002EBCE <AmiBlitz3.ab3@18573>   BEQ 'l30
0002EBD4 <AmiBlitz3.ab3@18574>    ADDQ.w #4,a2offset
0002EBD8 <AmiBlitz3.ab3@18575>   MOVE.w #$4878,D1
0002EBDC <AmiBlitz3.ab3@18576>   BSR.w writeword
0002EBDE <AmiBlitz3.ab3@18577>   MOVE.l d2,d1
0002EBE2 <AmiBlitz3.ab3@18578>   BSR writeword
0002EBE4 <AmiBlitz3.ab3@18581>   MOVE.w (A7)+,D0
0002EBE6 <AmiBlitz3.ab3@18582>  RTS
0002EBEC <AmiBlitz3.ab3@18585>   MOVE.l #$3f3c0007,d1
0002EBF0 <AmiBlitz3.ab3@18586>   BSR writelong
0002EBF6 <AmiBlitz3.ab3@18587>   MOVE.w regnum,D1
0002EBF8 <AmiBlitz3.ab3@18588>   LSL.w #8,D1
0002EBFA <AmiBlitz3.ab3@18589>   LSL.w #1,D1
0002EBFE <AmiBlitz3.ab3@18590>   ORI.w #$2f3c,d1
0002EC02 <AmiBlitz3.ab3@18591>   BSR writeword
0002EC08 <AmiBlitz3.ab3@18592>    ADDQ.w #4,a2offset
0002EC0A <AmiBlitz3.ab3@18593>   MOVE.l d2,d1
0002EC0E <AmiBlitz3.ab3@18594>   BSR writelong
0002EC12 <AmiBlitz3.ab3@18595>   MOVE.w #$2f3c,d1
0002EC16 <AmiBlitz3.ab3@18596>   BSR writeword
0002EC1A <AmiBlitz3.ab3@18597>   BSR.w addoff
0002EC20 <AmiBlitz3.ab3@18598>   MOVE.l litdata1,D1
0002EC24 <AmiBlitz3.ab3@18599>   BSR.w writelong
0002EC26 <AmiBlitz3.ab3@18600>   MOVE.w (A7)+,D0
0002EC28 <AmiBlitz3.ab3@18601> RTS
0002EC2C <AmiBlitz3.ab3@18606>   BSR.w get1bytemain
0002EC30 <AmiBlitz3.ab3@18607>    BSR.w makealab2
0002EC36 <AmiBlitz3.ab3@18609>   MOVE.w regnum,D1
0002EC38 <AmiBlitz3.ab3@18610>   LSL.w #8,D1
0002EC3A <AmiBlitz3.ab3@18611>   LSL.w #1,D1
0002EC3E <AmiBlitz3.ab3@18612>   ORI.w #$203C,D1
0002EC42 <AmiBlitz3.ab3@18613>    BSR.w writeword        ;create move.l #loc,dn
0002EC46 <AmiBlitz3.ab3@18614>    BSR.w addoff
0002EC4A <AmiBlitz3.ab3@18615>   MOVE.l $8(A2),D1
0002EC4E <AmiBlitz3.ab3@18616>    BSR.w writelong
0002EC50 <AmiBlitz3.ab3@18617>   MOVEQ.l #$03,D2
0002EC56 <AmiBlitz3.ab3@18619>   CLR.b peekaddrsize
0002EC5A <AmiBlitz3.ab3@18621> BRA.w reget
0002EC5C <AmiBlitz3.ab3@18625>   MOVEQ.l #$00,D3
0002EC60 <AmiBlitz3.ab3@18628>   BSR.w get1bytemain
0002EC64 <AmiBlitz3.ab3@18629>    BEQ.w syntaxerr
0002EC68 <AmiBlitz3.ab3@18630>   CMP.w #$22,D0         ;'"'
0002EC6C <AmiBlitz3.ab3@18631>    BEQ.w 'done
0002EC6E <AmiBlitz3.ab3@18632>   LSL.l #8,D3
0002EC70 <AmiBlitz3.ab3@18633>   MOVE.b D0,D3
0002EC74 <AmiBlitz3.ab3@18634>  BRA.w 'loop
0002EC78 <AmiBlitz3.ab3@18637>   BSR.w get1bytemain
0002EC7C <AmiBlitz3.ab3@18638> BRA.w fetchnum2
0002EC7E <AmiBlitz3.ab3@18642>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002EC82 <AmiBlitz3.ab3@18643>    BSR.w makename2              ;get the things name
0002EC86 <AmiBlitz3.ab3@18644>    BSR.w findlabel2
0002EC8A <AmiBlitz3.ab3@18646>    BEQ.w 'l10
0002EC90 <AmiBlitz3.ab3@18647>    LEA ptr_parameterstore,a0
0002EC96 <AmiBlitz3.ab3@18648>    CMP.b #"@",-1(a0,d2.w)
0002EC9A <AmiBlitz3.ab3@18650>    BNE cnferr
0002EC9E <AmiBlitz3.ab3@18652>    CLR.b -1(a0,d2.w)
0002ECA0 <AmiBlitz3.ab3@18653>    SUBQ.l #1,d2
0002ECA6 <AmiBlitz3.ab3@18654>    LEA varbase,a2
0002ECAA <AmiBlitz3.ab3@18655>    BSR findvariable
0002ECAE <AmiBlitz3.ab3@18656>    BNE cnferr
0002ECB2 <AmiBlitz3.ab3@18657>    CMP.b #"\",d0
0002ECB6 <AmiBlitz3.ab3@18658>    BNE 'l6
0002ECBC <AmiBlitz3.ab3@18659>    ADDQ #1,lastsourcepos
0002ECC0 <AmiBlitz3.ab3@18660>    MOVE.l $a(a2),a2
0002ECC2 <AmiBlitz3.ab3@18661>    ADDQ.l #4,a2
0002ECC6 <AmiBlitz3.ab3@18662>    BSR.w makename2
0002ECCA <AmiBlitz3.ab3@18663>    BSR findvariable2
0002ECCE <AmiBlitz3.ab3@18664>    BNE cnferr
0002ECD2 <AmiBlitz3.ab3@18665>  BRA.s 'l6                                                  ;???
0002ECD6 <AmiBlitz3.ab3@18668>    MOVE.w $4(a2),d3
0002ECD8 <AmiBlitz3.ab3@18669>    EXT.l d3
0002ECDC <AmiBlitz3.ab3@18670>  BRA 'npc
0002ECE0 <AmiBlitz3.ab3@18674>   MOVE.l $8(A2),D3          ;val.
0002ECE8 <AmiBlitz3.ab3@18675>   CMPI.l #$1,$4(A2)
0002ECEC <AmiBlitz3.ab3@18676>    BEQ.w 'npc
0002ECF2 <AmiBlitz3.ab3@18677>   NOT.w asmtype
0002ECF4 <AmiBlitz3.ab3@18680>   MOVE.w (A7)+,D2
0002ECF8 <AmiBlitz3.ab3@18681> BRA.w fetchnum2
0002ECFA <AmiBlitz3.ab3@18685>   MOVE.w D2,-(A7)           ;remember old type
0002ECFE <AmiBlitz3.ab3@18686>    BSR.w getparameter
0002ED02 <AmiBlitz3.ab3@18687>   CMP.w #"{",D0                                          ;test if var = function{}
0002ED06 <AmiBlitz3.ab3@18688>    BEQ.w isfunction
0002ED0A <AmiBlitz3.ab3@18689>    BSR.w fetchvars
0002ED0E <AmiBlitz3.ab3@18691>    BSR.w calcvar                                         ;getvaroffset+type
0002ED12 <AmiBlitz3.ab3@18692>    BSR.w variable2
0002ED18 <AmiBlitz3.ab3@18694>    MOVE.l a2,rightsidetype
0002ED22 <AmiBlitz3.ab3@18695>    MOVE.w flagmask, rightsideflagmask
0002ED28 <AmiBlitz3.ab3@18707>    TST.b typecheck
0002ED2C <AmiBlitz3.ab3@18708>    BEQ varcont
0002ED36 <AmiBlitz3.ab3@18709>    CMP.l #$da01,lasttoken                                  ;poke
0002ED3A <AmiBlitz3.ab3@18710>    BEQ 'l1
0002ED44 <AmiBlitz3.ab3@18711>    CMP.l #$da02,lasttoken                                  ;peek
0002ED48 <AmiBlitz3.ab3@18712>    BNE 'l2
0002ED50 <AmiBlitz3.ab3@18715>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002ED54 <AmiBlitz3.ab3@18716>    BNE varcont
0002ED5A <AmiBlitz3.ab3@18717>    MOVE.b d2,peekaddrsize
0002ED5E <AmiBlitz3.ab3@18718>    BRA varcont
0002ED64 <AmiBlitz3.ab3@18721>   CLR.b peekaddrsize
0002ED68 <AmiBlitz3.ab3@18725>   CMP.w #$1,D2
0002ED6C <AmiBlitz3.ab3@18726>    BNE.w 'notabyte
0002ED72 <AmiBlitz3.ab3@18730>   MOVE.w regnum,D1
0002ED76 <AmiBlitz3.ab3@18731>   ORI.w #$4880,D1      ;ext.w Dn
0002ED7A <AmiBlitz3.ab3@18732>    BSR.w writeword
0002ED7C <AmiBlitz3.ab3@18735>   MOVE.w (A7)+,D3      ;old type
0002ED80 <AmiBlitz3.ab3@18736>    BEQ.w 'done         ;type not set yet...
0002ED86 <AmiBlitz3.ab3@18739>    MOVE.l lastinstructionaddr,a0
0002ED8A <AmiBlitz3.ab3@18741>   CMP.w #$3,D3
0002ED8E <AmiBlitz3.ab3@18742>    BNE.w 'nob
0002ED92 <AmiBlitz3.ab3@18743>   CMP.w #$4,D2
0002ED96 <AmiBlitz3.ab3@18744>    BEQ.w 'conv2
0002ED98 <AmiBlitz3.ab3@18747>   CMP.w D2,D3
0002ED9C <AmiBlitz3.ab3@18748>    BLS.w 'done
0002ED9E <AmiBlitz3.ab3@18751>   EXG.l D2,D3
0002EDA0 <AmiBlitz3.ab3@18753>   MOVE.l a0,-(a7)
0002EDA6 <AmiBlitz3.ab3@18754>   TST.b typecheck
0002EDAA <AmiBlitz3.ab3@18755>   BEQ 'ok
0002EDB0 <AmiBlitz3.ab3@18756>   TST.b notypecheck
0002EDB4 <AmiBlitz3.ab3@18757>   BNE 'ok
0002EDBA <AmiBlitz3.ab3@18758>   MOVE.l leftsidetype,a0
0002EDC4 <AmiBlitz3.ab3@18759>   CMP.l #0,leftsidetype
0002EDC8 <AmiBlitz3.ab3@18760>   BEQ 'ok
0002EDD0 <AmiBlitz3.ab3@18761>   CMP.w #1,leftsideflagmask
0002EDD4 <AmiBlitz3.ab3@18762>   BEQ 'isptr
0002EDDC <AmiBlitz3.ab3@18763>   CMP.l #$100,4(a0)
0002EDE0 <AmiBlitz3.ab3@18764>   BLE 'ok
0002EDE4 <AmiBlitz3.ab3@18767>   CMP.b #3,d3
0002EDE8 <AmiBlitz3.ab3@18768>   BEQ 'ok
0002EDEC <AmiBlitz3.ab3@18769>   CMP.b #7,d3
0002EDF0 <AmiBlitz3.ab3@18770>   BEQ 'ok
0002EDF6 <AmiBlitz3.ab3@18771>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002EDF8 <AmiBlitz3.ab3@18774>   MOVE.l (a7)+,a0
0002EDFC <AmiBlitz3.ab3@18776>   BSR.w writeconvertcode         ;called from var assign      ;bump up new type to old...
0002EE00 <AmiBlitz3.ab3@18779> BRA.w reget
0002EE02 <AmiBlitz3.ab3@18783>   MOVEQ.l #$00,D3
0002EE08 <AmiBlitz3.ab3@18784>   MOVE.w regnum,D1
0002EE0C <AmiBlitz3.ab3@18785>    BEQ.w savem_skip
0002EE0E <AmiBlitz3.ab3@18786>   SUBQ.w #1,D1
0002EE10 <AmiBlitz3.ab3@18789>      LSR.l #1,D3
0002EE14 <AmiBlitz3.ab3@18790>      BSET #$F,D3
0002EE18 <AmiBlitz3.ab3@18791>   DBF D1,'loop
0002EE1E <AmiBlitz3.ab3@18793>    TST.b fpu
0002EE22 <AmiBlitz3.ab3@18794>    BEQ 'l1
0002EE28 <AmiBlitz3.ab3@18795>    ADDQ.l #2,stacktrack                                    ;intern command
0002EE2A <AmiBlitz3.ab3@18796>     MOVE.l a0,-(a7)
0002EE30 <AmiBlitz3.ab3@18797>     MOVE.l stacktrack,d1
0002EE36 <AmiBlitz3.ab3@18798>     LEA fpustackbase,a0
0002EE3A <AmiBlitz3.ab3@18799>     CLR.w 0(a0,d1)
0002EE40 <AmiBlitz3.ab3@18800>     CLR.w regmask
0002EE42 <AmiBlitz3.ab3@18801>     MOVE.l (a7)+,a0
0002EE46 <AmiBlitz3.ab3@18805>   MOVE.w #$48E7,D1
0002EE4A <AmiBlitz3.ab3@18806>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002EE4C <AmiBlitz3.ab3@18807>   MOVE.w D3,D1
0002EE50 <AmiBlitz3.ab3@18808> BRA.w writeword
0002EE52 <AmiBlitz3.ab3@18813>   MOVEQ.l #$00,D3
0002EE58 <AmiBlitz3.ab3@18814>   MOVE.w regnum,D1
0002EE5C <AmiBlitz3.ab3@18815>    BEQ.w savem_skip
0002EE5E <AmiBlitz3.ab3@18816>   SUBQ.w #1,D1
0002EE60 <AmiBlitz3.ab3@18819>     LSR.l #1,D3
0002EE64 <AmiBlitz3.ab3@18820>     BSET #$F,D3
0002EE68 <AmiBlitz3.ab3@18821>   DBF D1,'loop
0002EE6E <AmiBlitz3.ab3@18823>    TST.b fpu
0002EE72 <AmiBlitz3.ab3@18824>    BEQ 'l1
0002EE78 <AmiBlitz3.ab3@18825>    ADDQ.l #2,stacktrack                                    ;intern command
0002EE7A <AmiBlitz3.ab3@18826>     MOVE.l a0,-(a7)
0002EE80 <AmiBlitz3.ab3@18827>     MOVE.l stacktrack,d1
0002EE86 <AmiBlitz3.ab3@18828>     LEA fpustackbase,a0
0002EE8A <AmiBlitz3.ab3@18829>     CLR.w 0(a0,d1)
0002EE8E <AmiBlitz3.ab3@18830>    CMP.b #5,(a3)                                           ;result float ?
0002EE92 <AmiBlitz3.ab3@18831>     BNE 'nofpu
0002EE9C <AmiBlitz3.ab3@18833>     MOVE.w regnum,regnumfunc
0002EEA2 <AmiBlitz3.ab3@18836>   CLR.w regmask
0002EEA4 <AmiBlitz3.ab3@18837>     MOVE.l (a7)+,a0
0002EEA8 <AmiBlitz3.ab3@18841>   MOVE.w #$48E7,D1
0002EEAC <AmiBlitz3.ab3@18842>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002EEAE <AmiBlitz3.ab3@18843>   MOVE.w D3,D1
0002EEB2 <AmiBlitz3.ab3@18844>  BRA.w writeword
0002EEB4 <AmiBlitz3.ab3@18847> RTS
0002EEB6 <AmiBlitz3.ab3@18851>   MOVE.l D1,-(A7)
0002EEBA <AmiBlitz3.ab3@18852>   MOVE.w #$4EB9,D1
0002EEBE <AmiBlitz3.ab3@18853>    BSR.w writeword
0002EEC2 <AmiBlitz3.ab3@18854>    BSR.w addoff
0002EEC4 <AmiBlitz3.ab3@18855>   MOVE.l (A7)+,D1
0002EEC8 <AmiBlitz3.ab3@18856> BRA.w writelong
0002EECC <AmiBlitz3.ab3@18863>    BSR.w findproc                                          ;write function call
0002EED0 <AmiBlitz3.ab3@18865>    BEQ 'l1a
0002EED6 <AmiBlitz3.ab3@18866>    TST.l unusedfunc
0002EEDA <AmiBlitz3.ab3@18868>    BEQ noprocerr
0002EEE0 <AmiBlitz3.ab3@18871>    JSR gotoendsource
0002EEE8 <AmiBlitz3.ab3@18874>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002EEEE <AmiBlitz3.ab3@18875>   TST.l typetocast
0002EEF2 <AmiBlitz3.ab3@18876>   BEQ 'nocast
0002EEFC <AmiBlitz3.ab3@18877>   MOVE.l typetocast,rightsidetype
0002EF02 <AmiBlitz3.ab3@18878>   CLR.l typetocast
0002EF04 <AmiBlitz3.ab3@18879>   MOVE.l a1,-(a7)
0002EF0A <AmiBlitz3.ab3@18880>   MOVE.l rightsidetype,a1
0002EF10 <AmiBlitz3.ab3@18881>   CMP.l leftsidetype,a1
0002EF14 <AmiBlitz3.ab3@18882>   BEQ 'ok
0002EF1A <AmiBlitz3.ab3@18883>   JMP errorconvertreturntype2
0002EF1C <AmiBlitz3.ab3@18886>   MOVE.l (a7)+,a1
0002EF1E <AmiBlitz3.ab3@18890>   MOVEQ.l #$00,D1
0002EF22 <AmiBlitz3.ab3@18891>   MOVE.b $5(A2),D1
0002EF28 <AmiBlitz3.ab3@18893>   MOVE.b d1,retmode
0002EF2C <AmiBlitz3.ab3@18895>    BMI.w illprocerr
0002EF32 <AmiBlitz3.ab3@18897>    MOVE.b #1,isfunc(a2)
0002EF34 <AmiBlitz3.ab3@18899>   MOVE.w D1,-(A7)
0002EF36 <AmiBlitz3.ab3@18900>   MOVEQ.l #$00,D1
0002EF3A <AmiBlitz3.ab3@18901>   MOVE.b $4(A2),D1
0002EF3C <AmiBlitz3.ab3@18902>   LSR.w #4,D1
0002EF40 <AmiBlitz3.ab3@18903>    BEQ.w 'skip
0002EF42 <AmiBlitz3.ab3@18904>   LSL.w #2,D1
0002EF48 <AmiBlitz3.ab3@18905>   SUB.w D1,a2offset
0002EF4C <AmiBlitz3.ab3@18908>   CMPI.w #$7,(A7)       ;function type!
0002EF50 <AmiBlitz3.ab3@18909>    BNE.b 'sss
0002EF52 <AmiBlitz3.ab3@18910>   MOVE.l A2,-(A7)
0002EF56 <AmiBlitz3.ab3@18911>    BSR.w makesbase
0002EF58 <AmiBlitz3.ab3@18912>   MOVEA.l (A7)+,A2
0002EF5E <AmiBlitz3.ab3@18915>   MOVE.w sbasegot,-(A7)
0002EF62 <AmiBlitz3.ab3@18916>    BEQ.b 'sssz
0002EF66 <AmiBlitz3.ab3@18917>    BSR.w dopusha3
0002EF6A <AmiBlitz3.ab3@18920>   BSR.w savemfunc
0002EF6C <AmiBlitz3.ab3@18921>   MOVE.w D3,-(A7)             ;the movem regs
0002EF70 <AmiBlitz3.ab3@18923>   MOVE.l $E(A2),D1            ;pc of function call
0002EF74 <AmiBlitz3.ab3@18925>   TST.b $20(a2)                                            ;increase if morepar
0002EF78 <AmiBlitz3.ab3@18926>   BNE 'no0par
0002EF7A <AmiBlitz3.ab3@18927>   MOVE.l a5,a4
0002EF7E <AmiBlitz3.ab3@18930>   CMP.b #$20,(a4)+
0002EF82 <AmiBlitz3.ab3@18931>   BEQ 'l1
0002EF88 <AmiBlitz3.ab3@18932>   CMP.b #"}",-1(a4)
0002EF8C <AmiBlitz3.ab3@18933>   BNE  'no0par
0002EF8E <AmiBlitz3.ab3@18934>   MOVEQ #0,d0
0002EF92 <AmiBlitz3.ab3@18937>   LEA $16(A2),A1
0002EF94 <AmiBlitz3.ab3@18940>   MOVE.l d1,-(a7)
0002EF96 <AmiBlitz3.ab3@18941>   MOVE.b (a1),d2
0002EF98 <AmiBlitz3.ab3@18942>   MOVE.l d0,d1
0002EF9C <AmiBlitz3.ab3@18943>   CMP.w #4,d2
0002EFA0 <AmiBlitz3.ab3@18944>   BNE 'l1b
0002EFA6 <AmiBlitz3.ab3@18945>   ADD.l #$203c,d1
0002EFAA <AmiBlitz3.ab3@18946>   BSR writeword
0002EFB0 <AmiBlitz3.ab3@18947>   MOVE.l #$ffff0000,d1
0002EFB4 <AmiBlitz3.ab3@18948>   BSR writelong
0002EFB8 <AmiBlitz3.ab3@18949>  BRA 'l2b
0002EFBE <AmiBlitz3.ab3@18952>    TST.b fpu
0002EFC2 <AmiBlitz3.ab3@18953>    BNE 'l1c
0002EFC6 <AmiBlitz3.ab3@18954>    CMP.w #5,d2
0002EFCA <AmiBlitz3.ab3@18955>    BNE 'l1c
0002EFD0 <AmiBlitz3.ab3@18956>    ADD.l #$203c,d1
0002EFD4 <AmiBlitz3.ab3@18957>    BSR writeword
0002EFDA <AmiBlitz3.ab3@18958>    MOVE.l #$800000c1,d1
0002EFDE <AmiBlitz3.ab3@18959>    BSR writelong
0002EFE2 <AmiBlitz3.ab3@18960>  BRA 'l2b
0002EFE8 <AmiBlitz3.ab3@18963>   ADD.l #$70ff,d1
0002EFEC <AmiBlitz3.ab3@18964>   BSR writeword
0002EFF0 <AmiBlitz3.ab3@18965>   CMP.w #7,d2
0002EFF4 <AmiBlitz3.ab3@18966>   BNE 'l1d
0002EFFA <AmiBlitz3.ab3@18967>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EFFE <AmiBlitz3.ab3@18968>   BSR writelong
0002F000 <AmiBlitz3.ab3@18969>   MOVEQ #0,d1
0002F004 <AmiBlitz3.ab3@18970>   BSR writeword
0002F00A <AmiBlitz3.ab3@18971>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002F00E <AmiBlitz3.ab3@18972>   BSR writelong
0002F010 <AmiBlitz3.ab3@18973>   MOVEQ #0,d1
0002F014 <AmiBlitz3.ab3@18974>   BSR writeword
0002F01A <AmiBlitz3.ab3@18977>   MOVE.l #$f23c5000,d1
0002F01C <AmiBlitz3.ab3@18978>   MOVE.l d0,d2
0002F01E <AmiBlitz3.ab3@18979>   ASR.l #2,d2
0002F020 <AmiBlitz3.ab3@18980>   ADD.l d2,d1
0002F024 <AmiBlitz3.ab3@18981>   BSR writelong
0002F028 <AmiBlitz3.ab3@18982>   MOVE.w #$ffff,d1
0002F02C <AmiBlitz3.ab3@18983>   BSR writeword
0002F02E <AmiBlitz3.ab3@18987>   MOVE.l (a7)+,d1
0002F030 <AmiBlitz3.ab3@18988>      ADDQ.l #1,a1
0002F036 <AmiBlitz3.ab3@18989>      ADD.l #$0200,d0
0002F03C <AmiBlitz3.ab3@18990>      CMP.l #$0e00,d0
0002F040 <AmiBlitz3.ab3@18991>      BEQ syntaxerr
0002F042 <AmiBlitz3.ab3@18992>      TST.b (a1)
0002F046 <AmiBlitz3.ab3@18993>      BNE 'again
0002F04A <AmiBlitz3.ab3@18994>  BRA 'p1
0002F04E <AmiBlitz3.ab3@18998>   TST.b $4(A2)
0002F052 <AmiBlitz3.ab3@18999>    BNE.w 'somepars
0002F056 <AmiBlitz3.ab3@19004>   BSR.w makefjsr
0002F05A <AmiBlitz3.ab3@19005>    BSR.w get1bytemain
0002F05E <AmiBlitz3.ab3@19006>  BRA.w 'nopars
0002F064 <AmiBlitz3.ab3@19011>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002F06A <AmiBlitz3.ab3@19013>   MOVE.w regnum,-(A7)         ;old regat
0002F074 <AmiBlitz3.ab3@19015>   MOVE.w regnum,regnumfunc
0002F076 <AmiBlitz3.ab3@19019>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002F07E <AmiBlitz3.ab3@19021>   MOVE.b #1,funccall
0002F080 <AmiBlitz3.ab3@19023>   MOVEQ.l #$00,D0
0002F084 <AmiBlitz3.ab3@19024>   MOVE.b $4(A2),D0
0002F08E <AmiBlitz3.ab3@19026>   MOVE.w a2offset,a2offset2
0002F096 <AmiBlitz3.ab3@19027>   MOVE.b 5(a2),retmode
0002F09C <AmiBlitz3.ab3@19028>   MOVE.l a2,currentfunccall
0002F0A0 <AmiBlitz3.ab3@19030>   LEA $16(A2),A2              ;pointer to var desc
0002F0A6 <AmiBlitz3.ab3@19031>   CLR.w regnum
0002F0AC <AmiBlitz3.ab3@19033>   CLR.w regmask
0002F0B2 <AmiBlitz3.ab3@19034>   MOVE.b isconstantvalue,-(a7)
0002F0B8 <AmiBlitz3.ab3@19035>   MOVE.b funcparloop,-(a7)
0002F0C0 <AmiBlitz3.ab3@19036>   MOVE.b #1,funcparloop
0002F0C6 <AmiBlitz3.ab3@19037>   MOVE.l rightsidetype,-(a7)
0002F0CC <AmiBlitz3.ab3@19038>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002F0D2 <AmiBlitz3.ab3@19039>   MOVE.b blitzparloop,-(a7)
0002F0D8 <AmiBlitz3.ab3@19040>   CLR.b blitzparloop
0002F0DE <AmiBlitz3.ab3@19042>   JSR fetchpees2
0002F0E4 <AmiBlitz3.ab3@19045>   MOVE.b (a7)+,blitzparloop
0002F0EA <AmiBlitz3.ab3@19046>   MOVE.l (a7)+,leftsidetype
0002F0F0 <AmiBlitz3.ab3@19047>   MOVE.l (a7)+,rightsidetype
0002F0F6 <AmiBlitz3.ab3@19048>   MOVE.b (a7)+,funcparloop
0002F0FC <AmiBlitz3.ab3@19049>   MOVE.b (a7)+,isconstantvalue
0002F102 <AmiBlitz3.ab3@19051>   JSR chkstak
0002F104 <AmiBlitz3.ab3@19052>   MOVE.l (A7)+,D1
0002F108 <AmiBlitz3.ab3@19069>    BTST #0,d1
0002F10C <AmiBlitz3.ab3@19070>    BNE intern1
0002F110 <AmiBlitz3.ab3@19072>    BSR.w makefjsr
0002F116 <AmiBlitz3.ab3@19096>   MOVE.w (A7)+,regnum
0002F11C <AmiBlitz3.ab3@19098>   MOVE.w (a7)+,parnum                                     ;07.2014
0002F120 <AmiBlitz3.ab3@19102>   CMP.w #"}",D0
0002F124 <AmiBlitz3.ab3@19103>    BNE.w errorbracketmiss2
0002F126 <AmiBlitz3.ab3@19106>    MOVEQ #0,d1                                            ; end of function call pars
0002F12C <AmiBlitz3.ab3@19108>   MOVE.w regnum,D1
0002F130 <AmiBlitz3.ab3@19109>    BEQ.w 'nopars3
0002F136 <AmiBlitz3.ab3@19111>    TST.b fpu
0002F13A <AmiBlitz3.ab3@19112>    BEQ 'old
0002F142 <AmiBlitz3.ab3@19113>    CMP.b #5,retmode
0002F146 <AmiBlitz3.ab3@19114>    BNE 'old
0002F148 <AmiBlitz3.ab3@19115>    ASL.l #7,d1
0002F14E <AmiBlitz3.ab3@19116>    OR.l #$f2000000,d1
0002F152 <AmiBlitz3.ab3@19117>    BSR writelong
0002F156 <AmiBlitz3.ab3@19118>  BRA 'nopars3
0002F158 <AmiBlitz3.ab3@19122>   LSL.w #8,D1
0002F15A <AmiBlitz3.ab3@19123>   LSL.w #1,D1
0002F15E <AmiBlitz3.ab3@19124>   ORI.w #$2000,D1
0002F162 <AmiBlitz3.ab3@19125>    BSR.w writeword         ;move.l d0,regat
0002F164 <AmiBlitz3.ab3@19128>    MOVE.w (A7)+,D3
0002F168 <AmiBlitz3.ab3@19129>    BEQ.w 'nomovem
0002F16E <AmiBlitz3.ab3@19131>    TST.b fpu
0002F172 <AmiBlitz3.ab3@19132>    BEQ 'old2
0002F174 <AmiBlitz3.ab3@19133>    MOVE.l d0,-(a7)
0002F178 <AmiBlitz3.ab3@19134>    MOVE.w #8,d0
0002F17A <AmiBlitz3.ab3@19135>    MOVE.l a0,-(a7)
0002F180 <AmiBlitz3.ab3@19136>    MOVE.l stacktrack,d1
0002F186 <AmiBlitz3.ab3@19137>    LEA fpustackbase,a0
0002F18E <AmiBlitz3.ab3@19138>    MOVE.w 0(a0,d1),regmask
0002F190 <AmiBlitz3.ab3@19139>    MOVE.l (a7)+,a0
0002F194 <AmiBlitz3.ab3@19142>   BEQ 'ready
0002F19A <AmiBlitz3.ab3@19143>    BTST d0,regmask
0002F19E <AmiBlitz3.ab3@19144>    BEQ 'noa7
0002F1A0 <AmiBlitz3.ab3@19145>    MOVEQ #0,d1
0002F1A2 <AmiBlitz3.ab3@19146>    MOVE.w d0,d1
0002F1A4 <AmiBlitz3.ab3@19147>    SUBQ.w #1,d1
0002F1A6 <AmiBlitz3.ab3@19148>    ASL #7,d1
0002F1AC <AmiBlitz3.ab3@19150>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002F1B0 <AmiBlitz3.ab3@19151>    BSR writelong
0002F1B6 <AmiBlitz3.ab3@19152>    SUBQ.l #2,stacktrack
0002F1B8 <AmiBlitz3.ab3@19155>    SUBQ.w #1,d0
0002F1BC <AmiBlitz3.ab3@19156>    BNE 'loop
0002F1C2 <AmiBlitz3.ab3@19159>   SUBQ.l #2,stacktrack                                     ;integer sub
0002F1C4 <AmiBlitz3.ab3@19160>   MOVE.l (a7)+,d0
0002F1C8 <AmiBlitz3.ab3@19164>   MOVE.w #$4CDF,D1
0002F1CC <AmiBlitz3.ab3@19165>    BSR.w writeword
0002F1CE <AmiBlitz3.ab3@19166>   MOVEQ.l #$00,D1
0002F1D0 <AmiBlitz3.ab3@19167>   MOVEQ.l #$0F,D4
0002F1D2 <AmiBlitz3.ab3@19170>     LSL.w #1,D3
0002F1D4 <AmiBlitz3.ab3@19171>     ROXR.w #1,D1
0002F1D8 <AmiBlitz3.ab3@19172>   DBF D4,'loopsw                                         ;movem.l (a7)+,dx
0002F1DC <AmiBlitz3.ab3@19174>     BSR.w writeword        ;poke movem (a7)+...
0002F1E2 <AmiBlitz3.ab3@19176>    CLR.w regnumfunc
0002F1E4 <AmiBlitz3.ab3@19180>   MOVE.w (A7)+,D1
0002F1E8 <AmiBlitz3.ab3@19181>    BEQ.b 'nores
0002F1EC <AmiBlitz3.ab3@19182>   CMPI.w #$7,(A7)
0002F1F0 <AmiBlitz3.ab3@19183>    BEQ.b 'issb
0002F1F6 <AmiBlitz3.ab3@19185>   LEA geta3,A0
0002F1FC <AmiBlitz3.ab3@19186>   LEA geta3f,A1
0002F200 <AmiBlitz3.ab3@19187>    BSR.w pokecode
0002F204 <AmiBlitz3.ab3@19188>  BRA.b 'nosb
0002F20A <AmiBlitz3.ab3@19192>   MOVE.w deca3,D1
0002F20E <AmiBlitz3.ab3@19193>    BSR.w writeword
0002F212 <AmiBlitz3.ab3@19196>   BSR.w dopulla3          ;fix up string base
0002F214 <AmiBlitz3.ab3@19199>   MOVE.w (A7)+,D2         ;what it returns!
0002F218 <AmiBlitz3.ab3@19200>   CMP.w #$7,D2
0002F21C <AmiBlitz3.ab3@19201>    BNE.w 'notst
0002F222 <AmiBlitz3.ab3@19202>   MOVE.w putstlen,D1
0002F228 <AmiBlitz3.ab3@19203>   OR.w regnum,D1
0002F22C <AmiBlitz3.ab3@19204>    BSR.w writeword
0002F230 <AmiBlitz3.ab3@19207>   BSR.w get1bytemain
0002F234 <AmiBlitz3.ab3@19208> BRA.w varcont
0002F236 <AmiBlitz3.ab3@19212> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002F23E <AmiBlitz3.ab3@19220>   CMP.b #2,optistring
0002F242 <AmiBlitz3.ab3@19221>   BEQ 'fs2
0002F246 <AmiBlitz3.ab3@19223>   BSR.w makesbase                                          ;writestringvariable
0002F24A <AmiBlitz3.ab3@19224>   BTST #$F,D2
0002F24E <AmiBlitz3.ab3@19225>    BNE.w 'already
0002F254 <AmiBlitz3.ab3@19226>   MOVE.w D3,leaa5d3a2+2
0002F25A <AmiBlitz3.ab3@19227>   MOVE.l leaa5d3a2,D1
0002F25E <AmiBlitz3.ab3@19228>    BSR.w pokela5s
0002F264 <AmiBlitz3.ab3@19231>   MOVE.w regnum,D1
0002F266 <AmiBlitz3.ab3@19232>   LSL.w #8,D1
0002F268 <AmiBlitz3.ab3@19233>   LSL.w #1,D1
0002F26C <AmiBlitz3.ab3@19234>   ORI.w #$7000,D1
0002F272 <AmiBlitz3.ab3@19235>   LEA stvarget2,A0
0002F274 <AmiBlitz3.ab3@19236>   MOVE.w D1,(A0)
0002F27A <AmiBlitz3.ab3@19237>   MOVE.w regnum,D1
0002F280 <AmiBlitz3.ab3@19238>   ANDI.w #$FFF8,$2(A0)
0002F284 <AmiBlitz3.ab3@19239>   OR.w D1,$2(A0)
0002F28A <AmiBlitz3.ab3@19240>   LEA stvarget2f,A1
0002F28E <AmiBlitz3.ab3@19241>    BSR.w pokecode
0002F292 <AmiBlitz3.ab3@19242>   MOVE.w #$C600,D1     ; was #copstring,
0002F296 <AmiBlitz3.ab3@19243>    BSR.w Atokejsr
0002F298 <AmiBlitz3.ab3@19244>   MOVEQ.l #$07,D2
0002F29C <AmiBlitz3.ab3@19245>  BRA.w reget
0002F2A2 <AmiBlitz3.ab3@19249>      TST.w stackpar
0002F2A6 <AmiBlitz3.ab3@19250>      BMI 'l10
0002F2AC <AmiBlitz3.ab3@19251>      MOVE.l #$3f3c0007,d1
0002F2B2 <AmiBlitz3.ab3@19252>      ADDQ.w #2,a2offset
0002F2B6 <AmiBlitz3.ab3@19253>      BSR writelong
0002F2BA <AmiBlitz3.ab3@19256>   MOVE.w #$4878,d1
0002F2C0 <AmiBlitz3.ab3@19257>      CLR.w stackpar
0002F2C4 <AmiBlitz3.ab3@19258>      BSR writeword
0002F2C8 <AmiBlitz3.ab3@19259>      MOVE.w #$0,d1
0002F2CC <AmiBlitz3.ab3@19260>      BSR writeword
0002F2D0 <AmiBlitz3.ab3@19261>      MOVE.w #$246d,d1
0002F2D4 <AmiBlitz3.ab3@19262>      BSR writeword
0002F2D6 <AmiBlitz3.ab3@19263>      MOVE.w d3,d1
0002F2DA <AmiBlitz3.ab3@19264>      BSR writeword
0002F2E0 <AmiBlitz3.ab3@19265>      MOVE.l #$4a926704,d1
0002F2E4 <AmiBlitz3.ab3@19266>      BSR writelong
0002F2EA <AmiBlitz3.ab3@19267>      MOVE.l #$2eaafffc,d1
0002F2EE <AmiBlitz3.ab3@19268>      BSR writelong
0002F2F2 <AmiBlitz3.ab3@19269>      MOVE.w #$2f0a,d1
0002F2F8 <AmiBlitz3.ab3@19270>      ADDQ.w #8,a2offset
0002F2FC <AmiBlitz3.ab3@19271>      BSR writeword
0002F300 <AmiBlitz3.ab3@19272> BRA.w reget
0002F304 <AmiBlitz3.ab3@19277>   CMP.b #$7,D2                                             ;load basic var
0002F308 <AmiBlitz3.ab3@19278>    BEQ.w stvar
0002F30E <AmiBlitz3.ab3@19280>    TST.b iee
0002F312 <AmiBlitz3.ab3@19281>    BEQ 'noiee
0002F316 <AmiBlitz3.ab3@19282>    CMP.b #5,d2
0002F31A <AmiBlitz3.ab3@19283>    BNE 'noiee
0002F31C <AmiBlitz3.ab3@19284>    MOVE.l d0,-(a7)                                         ;fpu load var
0002F320 <AmiBlitz3.ab3@19285>    BTST #15,d2
0002F324 <AmiBlitz3.ab3@19286>    BEQ 'var
0002F32A <AmiBlitz3.ab3@19287>    CMP.l #$7fff,d3
0002F32E <AmiBlitz3.ab3@19288>    BGT 'longoffset
0002F334 <AmiBlitz3.ab3@19289>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002F336 <AmiBlitz3.ab3@19290>    TST.w d3                                                ;offset =0
0002F33A <AmiBlitz3.ab3@19291>    BNE 'offset
0002F340 <AmiBlitz3.ab3@19294>   MOVE.l #$f2124400,d1
0002F342 <AmiBlitz3.ab3@19295>    MOVEQ #0,d3
0002F346 <AmiBlitz3.ab3@19296>  BRA 'glob
0002F34C <AmiBlitz3.ab3@19299>   SUBQ.l #4,destpointer
0002F350 <AmiBlitz3.ab3@19300>  BRA 'glob
0002F356 <AmiBlitz3.ab3@19303>   TST.b fast
0002F35A <AmiBlitz3.ab3@19304>    BEQ 'nofastload
0002F360 <AmiBlitz3.ab3@19305>    TST.w regnum
0002F364 <AmiBlitz3.ab3@19306>    BNE 'nofastload
0002F36A <AmiBlitz3.ab3@19307>    CMP.l fp0addr,a4
0002F36E <AmiBlitz3.ab3@19308>    BNE 'nofastload
0002F374 <AmiBlitz3.ab3@19309>    MOVE.l fp0iff,d1
0002F37A <AmiBlitz3.ab3@19310>    CMP.l firstiff,d1
0002F37E <AmiBlitz3.ab3@19311>    BNE 'nofastload
0002F384 <AmiBlitz3.ab3@19312>    MOVE.w varmode,d1
0002F38A <AmiBlitz3.ab3@19313>    CMP.w fp0mode,d1
0002F38E <AmiBlitz3.ab3@19314>    BNE 'nofastload
0002F394 <AmiBlitz3.ab3@19315>    CMP.w fp0var,d3
0002F398 <AmiBlitz3.ab3@19316>    BNE 'nofastload
0002F39C <AmiBlitz3.ab3@19317>    BCLR #16,d2
0002F39E <AmiBlitz3.ab3@19318>    MOVE.l (a7)+,d0
0002F3A0 <AmiBlitz3.ab3@19319>  RTS
0002F3A2 <AmiBlitz3.ab3@19322>    MOVEQ #0,d0
0002F3A8 <AmiBlitz3.ab3@19323>    MOVE.w regnum,d0
0002F3AE <AmiBlitz3.ab3@19324>    CMP.l maxregs,d0
0002F3B2 <AmiBlitz3.ab3@19325>    BLE 'ok
0002F3B8 <AmiBlitz3.ab3@19326>    LEA cmplxerr,a0
0002F3BA <AmiBlitz3.ab3@19327>   MOVE.l a0,-(a7)
0002F3C0 <AmiBlitz3.ab3@19328>  JMP handle_compileerror
0002F3C6 <AmiBlitz3.ab3@19331>    LEA regtable,a4
0002F3C8 <AmiBlitz3.ab3@19332>    TST.l (a4)
0002F3CC <AmiBlitz3.ab3@19333>    BEQ 'noreg
0002F3D0 <AmiBlitz3.ab3@19334>    CMP.w 0+4(a4),d3
0002F3D4 <AmiBlitz3.ab3@19335>    BNE 'doreg1
0002F3DA <AmiBlitz3.ab3@19336>    MOVE.l #$f2001c00,d1
0002F3E0 <AmiBlitz3.ab3@19337>    MOVE.w regnum,d0
0002F3E2 <AmiBlitz3.ab3@19338>    ASL.w #7,d0
0002F3E4 <AmiBlitz3.ab3@19339>    OR.w d0,d1
0002F3E8 <AmiBlitz3.ab3@19340>    BSR writelong
0002F3EA <AmiBlitz3.ab3@19341>    MOVE.l (a7)+,d0
0002F3EC <AmiBlitz3.ab3@19342>  RTS
0002F3F0 <AmiBlitz3.ab3@19345>   CMP.w 8+4(a4),d3
0002F3F4 <AmiBlitz3.ab3@19346>    BNE 'doreg2
0002F3FA <AmiBlitz3.ab3@19347>    MOVE.l #$f2001800,d1
0002F400 <AmiBlitz3.ab3@19348>    MOVE.w regnum,d0
0002F402 <AmiBlitz3.ab3@19349>    ASL.w #7,d0
0002F404 <AmiBlitz3.ab3@19350>    OR.w d0,d1
0002F408 <AmiBlitz3.ab3@19351>    BSR writelong
0002F40A <AmiBlitz3.ab3@19352>    MOVE.l (a7)+,d0
0002F40C <AmiBlitz3.ab3@19353>  RTS
0002F410 <AmiBlitz3.ab3@19356>   CMP.w 16+4(a4),d3
0002F414 <AmiBlitz3.ab3@19357>    BNE 'doreg3
0002F41A <AmiBlitz3.ab3@19358>    MOVE.l #$f2001400,d1
0002F420 <AmiBlitz3.ab3@19359>    MOVE.w regnum,d0
0002F422 <AmiBlitz3.ab3@19360>    ASL.w #7,d0
0002F424 <AmiBlitz3.ab3@19361>    OR.w d0,d1
0002F428 <AmiBlitz3.ab3@19362>    BSR  writelong
0002F42A <AmiBlitz3.ab3@19363>    MOVE.l (a7)+,d0
0002F42C <AmiBlitz3.ab3@19364>  RTS
0002F430 <AmiBlitz3.ab3@19367>   CMP.w 24+4(a4),d3
0002F434 <AmiBlitz3.ab3@19368>    BNE 'doreg4
0002F43A <AmiBlitz3.ab3@19369>    MOVE.l #$f2001000,d1
0002F440 <AmiBlitz3.ab3@19370>    MOVE.w regnum,d0
0002F442 <AmiBlitz3.ab3@19371>    ASL.w #7,d0
0002F444 <AmiBlitz3.ab3@19372>    OR.w d0,d1
0002F448 <AmiBlitz3.ab3@19373>    BSR writelong
0002F44A <AmiBlitz3.ab3@19374>    MOVE.l (a7)+,d0
0002F44C <AmiBlitz3.ab3@19375>  RTS
0002F450 <AmiBlitz3.ab3@19378>    CMP.w 32+4(a4),d3
0002F454 <AmiBlitz3.ab3@19379>    BNE 'noreg
0002F45A <AmiBlitz3.ab3@19380>    MOVE.l #$f2000c00,d1
0002F460 <AmiBlitz3.ab3@19381>    MOVE.w regnum,d0
0002F462 <AmiBlitz3.ab3@19382>    ASL.w #7,d0
0002F464 <AmiBlitz3.ab3@19383>    OR.w d0,d1
0002F468 <AmiBlitz3.ab3@19384>    BSR writelong
0002F46A <AmiBlitz3.ab3@19385>    MOVE.l (a7)+,d0
0002F46C <AmiBlitz3.ab3@19386>  RTS
0002F472 <AmiBlitz3.ab3@19389>    MOVE.l #$f22d4400,d1                                    ;var
0002F478 <AmiBlitz3.ab3@19390>    TST.w varmode
0002F47C <AmiBlitz3.ab3@19391>   BEQ 'glob
0002F480 <AmiBlitz3.ab3@19392>   BCLR #16,d1                                              ;local
0002F482 <AmiBlitz3.ab3@19395>    MOVEQ #0,d0
0002F488 <AmiBlitz3.ab3@19396>    MOVE.w regnum,d0
0002F48C <AmiBlitz3.ab3@19397>    CMP.w #7,d0
0002F490 <AmiBlitz3.ab3@19398>    BLE 'ok2
0002F496 <AmiBlitz3.ab3@19399>    LEA cmplxerr,a0
0002F498 <AmiBlitz3.ab3@19400>   MOVE.l a0,-(a7)
0002F49E <AmiBlitz3.ab3@19401>  JMP handle_compileerror
0002F4A0 <AmiBlitz3.ab3@19404>      ASL.w #7,d0
0002F4A2 <AmiBlitz3.ab3@19405>    OR.l d0,d1
0002F4AA <AmiBlitz3.ab3@19406>    CMP.l #doublecheck,8(a2)
0002F4AE <AmiBlitz3.ab3@19407>    BNE 'dbl
0002F4B4 <AmiBlitz3.ab3@19408>    OR.l #$00001000,d1
0002F4B8 <AmiBlitz3.ab3@19411>   BSR writelong
0002F4BA <AmiBlitz3.ab3@19412>    MOVE.l (a7)+,d0
0002F4BE <AmiBlitz3.ab3@19413>    AND.w #$ff,d2
0002F4C0 <AmiBlitz3.ab3@19414>    MOVE.w d3,d1
0002F4C4 <AmiBlitz3.ab3@19415>    BEQ 'nooffs
0002F4C8 <AmiBlitz3.ab3@19416>  BRA writeword
0002F4CA <AmiBlitz3.ab3@19421>  RTS
0002F4D0 <AmiBlitz3.ab3@19424>   MOVE.w regnum,D1
0002F4D6 <AmiBlitz3.ab3@19426>   MOVE.w d1,load_var_reg
0002F4D8 <AmiBlitz3.ab3@19428>   LSL.w #8,D1
0002F4E2 <AmiBlitz3.ab3@19430>   MOVE.l destpointer,load_var_addr
0002F4E8 <AmiBlitz3.ab3@19431>   MOVE.w d2,load_var_size
0002F4EA <AmiBlitz3.ab3@19433>   LSL.w #1,D1
0002F4EE <AmiBlitz3.ab3@19434>   BTST #$E,D2
0002F4F2 <AmiBlitz3.ab3@19435>    BNE.w 'pointer
0002F4F4 <AmiBlitz3.ab3@19436>   TST.b D2
0002F4F8 <AmiBlitz3.ab3@19437>    BNE.w 'skip2
0002F4FA <AmiBlitz3.ab3@19438>   MOVEQ.l #$03,D2
0002F4FE <AmiBlitz3.ab3@19439>   ORI.w #$200A,D1
0002F502 <AmiBlitz3.ab3@19440>  BRA.w writeword
0002F506 <AmiBlitz3.ab3@19443>   MOVE.b #$3,D2
0002F50A <AmiBlitz3.ab3@19446>   BTST #$F,D2
0002F50E <AmiBlitz3.ab3@19447>    BEQ.w 'simpvar                                         ;loadarray
0002F514 <AmiBlitz3.ab3@19449>    TST.b fast                                              ;lea->move xx(a2)
0002F518 <AmiBlitz3.ab3@19450>    BEQ 'la10
0002F51E <AmiBlitz3.ab3@19455>    CLR.l load_var_addr
0002F522 <AmiBlitz3.ab3@19456>  BRA 'la10
0002F52A <AmiBlitz3.ab3@19458>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002F52E <AmiBlitz3.ab3@19459>    BNE 'la10
0002F534 <AmiBlitz3.ab3@19460>    TST.b optiarray
0002F538 <AmiBlitz3.ab3@19461>    BNE 'la10
0002F53E <AmiBlitz3.ab3@19462>    MOVE.l destpointer,a4
0002F544 <AmiBlitz3.ab3@19463>    SUB.l loada,a4
0002F548 <AmiBlitz3.ab3@19464>    CMP.w #4,a4
0002F54C <AmiBlitz3.ab3@19465>    BEQ 'la100
0002F550 <AmiBlitz3.ab3@19466>    CMP.w #2,a4
0002F554 <AmiBlitz3.ab3@19467>    BNE 'la10
0002F55A <AmiBlitz3.ab3@19468>    MOVE.l destpointer,a4
0002F55E <AmiBlitz3.ab3@19469>    CMP.b #3,d2
0002F562 <AmiBlitz3.ab3@19470>    BCS 'la110
0002F568 <AmiBlitz3.ab3@19471>    MOVE.w #$202a,-2(a4)
0002F56C <AmiBlitz3.ab3@19472>    OR.w d1,-2(a4)
0002F572 <AmiBlitz3.ab3@19473>    MOVE.w arrayoffset,d1
0002F576 <AmiBlitz3.ab3@19474>    BSR writeword
0002F57A <AmiBlitz3.ab3@19475>  BRA 'more
0002F57E <AmiBlitz3.ab3@19478>    CMP.b #2,d2
0002F582 <AmiBlitz3.ab3@19479>    BNE 'la120
0002F588 <AmiBlitz3.ab3@19480>     MOVE.w #$302a,-2(a4)
0002F58C <AmiBlitz3.ab3@19481>    OR.w d1,-2(a4)
0002F592 <AmiBlitz3.ab3@19483>    MOVE.w arrayoffset,d1
0002F596 <AmiBlitz3.ab3@19484>    BSR writeword
0002F59A <AmiBlitz3.ab3@19485>  BRA 'more
0002F59E <AmiBlitz3.ab3@19488>   CMP.b #1,d2
0002F5A2 <AmiBlitz3.ab3@19489>    BNE.s 'la10
0002F5A8 <AmiBlitz3.ab3@19490>     MOVE.w #$102a,-2(a4)
0002F5AC <AmiBlitz3.ab3@19491>    OR.w d1,-2(a4)
0002F5B2 <AmiBlitz3.ab3@19492>    MOVE.w arrayoffset,d1
0002F5B6 <AmiBlitz3.ab3@19493>    BSR writeword
0002F5BA <AmiBlitz3.ab3@19494>  BRA 'more
0002F5C0 <AmiBlitz3.ab3@19497>   MOVE.l destpointer,a4
0002F5C6 <AmiBlitz3.ab3@19498>    CMP.w #$45ea,-2(a4)
0002F5CA <AmiBlitz3.ab3@19499>    BNE 'la10
0002F5CE <AmiBlitz3.ab3@19500>    CMP.b #3,d2
0002F5D2 <AmiBlitz3.ab3@19501>    BCS 'la11
0002F5D8 <AmiBlitz3.ab3@19502>    MOVE.w #$202a,-4(a4)
0002F5DC <AmiBlitz3.ab3@19503>    OR.w d1,-4(a4)
0002F5E0 <AmiBlitz3.ab3@19504>  BRA 'more
0002F5E4 <AmiBlitz3.ab3@19507>    CMP.b #2,d2
0002F5E8 <AmiBlitz3.ab3@19508>    BNE 'la12
0002F5EE <AmiBlitz3.ab3@19509>     MOVE.w #$302a,-4(a4)
0002F5F2 <AmiBlitz3.ab3@19510>    OR.w d1,-4(a4)
0002F5F6 <AmiBlitz3.ab3@19511>  BRA 'more
0002F5FA <AmiBlitz3.ab3@19514>   CMP.b #1,d2
0002F5FE <AmiBlitz3.ab3@19515>    BNE.s 'la10
0002F604 <AmiBlitz3.ab3@19516>     MOVE.w #$102a,-4(a4)
0002F608 <AmiBlitz3.ab3@19517>    OR.w d1,-4(a4)
0002F60C <AmiBlitz3.ab3@19518>  BRA 'more
0002F612 <AmiBlitz3.ab3@19522>    OR.w movea2dn,D1
0002F616 <AmiBlitz3.ab3@19523>    BSR.w 'size
0002F61A <AmiBlitz3.ab3@19524>    BSR.w writeword
0002F61E <AmiBlitz3.ab3@19527>   ANDI.w #$FF,D2
0002F620 <AmiBlitz3.ab3@19528>  RTS
0002F626 <AmiBlitz3.ab3@19532>    MOVE.l destpointer,a4              ; "
0002F62E <AmiBlitz3.ab3@19533>    MOVE.l #$f22a4400,-4(a4)           ; "
0002F634 <AmiBlitz3.ab3@19534>    MOVE.w arrayoffset,d1              ; "
0002F638 <AmiBlitz3.ab3@19535>  BRA writeword
0002F63E <AmiBlitz3.ab3@19539>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F642 <AmiBlitz3.ab3@19540>    BSR.w 'size
0002F646 <AmiBlitz3.ab3@19541>    BSR.w pokewda5s
0002F648 <AmiBlitz3.ab3@19542>   MOVE.w D3,D1
0002F64C <AmiBlitz3.ab3@19543>    BSR.w writeword
0002F650 <AmiBlitz3.ab3@19544>  BRA.w 'more
0002F654 <AmiBlitz3.ab3@19549>   BTST #$E,D2
0002F658 <AmiBlitz3.ab3@19550>    BNE.w 'long
0002F65C <AmiBlitz3.ab3@19551>   CMP.b #$1,D2
0002F660 <AmiBlitz3.ab3@19552>    BEQ.w 'byte
0002F664 <AmiBlitz3.ab3@19553>   CMP.b #$2,D2
0002F668 <AmiBlitz3.ab3@19554>    BEQ.w 'word
0002F66A <AmiBlitz3.ab3@19557>  RTS
0002F66E <AmiBlitz3.ab3@19560>   EORI.w #$3000,D1
0002F670 <AmiBlitz3.ab3@19561>  RTS
0002F674 <AmiBlitz3.ab3@19564>   ORI.w #$1000,D1
0002F676 <AmiBlitz3.ab3@19565> RTS
0002F67E <AmiBlitz3.ab3@19571>   MOVE.w #$FFFF,dfetch    ; was -1
0002F682 <AmiBlitz3.ab3@19572>   BSR.w get1bytemain
0002F686 <AmiBlitz3.ab3@19573>   CMP.w #$2D,D0           ;'-'
0002F68A <AmiBlitz3.ab3@19574>    BNE.w 'datado
0002F68E <AmiBlitz3.ab3@19575>   BSR.w get1bytemain
0002F692 <AmiBlitz3.ab3@19576>   BSR.w 'datado
0002F696 <AmiBlitz3.ab3@19578>   CMP.w #$5,D2
0002F69A <AmiBlitz3.ab3@19579>    BCC.w 'nfp
0002F69C <AmiBlitz3.ab3@19580>   NEG.l D0
0002F69E <AmiBlitz3.ab3@19581>  RTS
0002F6A4 <AmiBlitz3.ab3@19585>   TST.b fpu
0002F6A8 <AmiBlitz3.ab3@19586>   BEQ 'noneg
0002F6AC <AmiBlitz3.ab3@19587>   fneg.x fp0
0002F6AE <AmiBlitz3.ab3@19588>  RTS
0002F6B2 <AmiBlitz3.ab3@19593>   BCHG #$7,D0
0002F6B4 <AmiBlitz3.ab3@19594>  RTS
0002F6B8 <AmiBlitz3.ab3@19598>   CMP.w #$24,D0          ;'$'
0002F6BC <AmiBlitz3.ab3@19599>    BEQ.w get_hexconstant
0002F6C0 <AmiBlitz3.ab3@19600>   CMP.w #$25,D0          ;'%'
0002F6C4 <AmiBlitz3.ab3@19601>    BEQ.w fetchbin
0002F6C8 <AmiBlitz3.ab3@19604>   CMP.w #$2E,D0          ;'.'
0002F6CC <AmiBlitz3.ab3@19605>    BNE.w fetchnum
0002F6CE <AmiBlitz3.ab3@19609>   MOVEQ.l #$00,D3
0002F6D2 <AmiBlitz3.ab3@19610> BRA.w fetchpoint2
0002F6D4 <AmiBlitz3.ab3@19614>   MOVEQ.l #$00,D3                                          ;number
0002F6D8 <AmiBlitz3.ab3@19616>    BSR.w atoi
0002F6DC <AmiBlitz3.ab3@19618>   CMP.w #$2E,D0             ;'.'
0002F6E0 <AmiBlitz3.ab3@19619>    BEQ.w fetchpoint
0002F6E4 <AmiBlitz3.ab3@19620>   ORI.w #$20,D0
0002F6E8 <AmiBlitz3.ab3@19621>   CMP.w #$65,D0             ;'e'
0002F6EC <AmiBlitz3.ab3@19622>    BNE.w fetchnum2
0002F6F2 <AmiBlitz3.ab3@19623>   CMP.l #$800000,D3
0002F6F6 <AmiBlitz3.ab3@19624>    BCC.w overerr
0002F6F8 <AmiBlitz3.ab3@19625>   MOVEQ.l #-$01,D6
0002F6FC <AmiBlitz3.ab3@19627>   fmove.l d3,fp0
0002F6FE <AmiBlitz3.ab3@19629>   MOVE.l D3,D0
0002F704 <AmiBlitz3.ab3@19630>   MOVEA.l _mathffpbase,A6
0002F708 <AmiBlitz3.ab3@19631>    JSR -$24(A6)             ;int to ffp
0002F70A <AmiBlitz3.ab3@19632>   MOVE.l D0,D3
0002F70E <AmiBlitz3.ab3@19633>    BSR.w dothee
0002F712 <AmiBlitz3.ab3@19634>    BSR.w reget
0002F716 <AmiBlitz3.ab3@19635>    BSR.w consttype2
0002F71A <AmiBlitz3.ab3@19636> BRA.w fetchnum3
0002F71E <AmiBlitz3.ab3@19641>   CMP.b #4,d2
0002F722 <AmiBlitz3.ab3@19642>   BEQ 'l4
0002F726 <AmiBlitz3.ab3@19643>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F72C <AmiBlitz3.ab3@19646>    TST.b fpu
0002F730 <AmiBlitz3.ab3@19647>    BNE 'l1
0002F736 <AmiBlitz3.ab3@19649>    CMP.l #$800000,D3
0002F73A <AmiBlitz3.ab3@19650>    BCC.w overerr
0002F73E <AmiBlitz3.ab3@19652>  BRA fetchpoint2
0002F744 <AmiBlitz3.ab3@19655>   CMP.l #$7fffffff,d3
0002F748 <AmiBlitz3.ab3@19656>     BCC.w overerr
0002F74A <AmiBlitz3.ab3@19661>   MOVEQ.l #-$01,D6         ;now a float.
0002F74C <AmiBlitz3.ab3@19662>   MOVE.l D3,D0
0002F750 <AmiBlitz3.ab3@19664>   fmove.l d3,fp0
0002F756 <AmiBlitz3.ab3@19666>   MOVEA.l _mathffpbase,A6
0002F75A <AmiBlitz3.ab3@19667>    JSR -$24(A6)            ;int to ffp                                       ;integer to ffp
0002F75C <AmiBlitz3.ab3@19668>   MOVE.l D0,-(A7)          ;save whole number
0002F760 <AmiBlitz3.ab3@19669>    BSR.w get1bytemain
0002F764 <AmiBlitz3.ab3@19670>    BSR.w tstnum
0002F768 <AmiBlitz3.ab3@19671>    BNE.w syntaxerr
0002F76A <AmiBlitz3.ab3@19672>   MOVEQ.l #$00,D3
0002F76E <AmiBlitz3.ab3@19673>    BSR.w atoi              ;get int frac
0002F770 <AmiBlitz3.ab3@19674>   TST.l D3
0002F774 <AmiBlitz3.ab3@19675>    BEQ.w 'pskip
0002F77A <AmiBlitz3.ab3@19677>   TST.b fpu
0002F77E <AmiBlitz3.ab3@19678>   BNE 'l1
0002F784 <AmiBlitz3.ab3@19680>   CMP.l #$800000,D3
0002F788 <AmiBlitz3.ab3@19681>    BCC.w overerr
0002F78C <AmiBlitz3.ab3@19683>  BRA 'l2
0002F792 <AmiBlitz3.ab3@19686>   CMP.l #$7fffffff,d3
0002F796 <AmiBlitz3.ab3@19687>   BCC overerr
0002F79A <AmiBlitz3.ab3@19690>   fmove.l d5,fp1
0002F79C <AmiBlitz3.ab3@19692>   MOVE.l D5,D0
0002F7A0 <AmiBlitz3.ab3@19693>    JSR -$24(A6)        ;divisor to ffp
0002F7A2 <AmiBlitz3.ab3@19694>   MOVE.l D0,D5
0002F7A6 <AmiBlitz3.ab3@19696>   fmove.l d3,fp2
0002F7A8 <AmiBlitz3.ab3@19698>   MOVE.l D3,D0
0002F7AC <AmiBlitz3.ab3@19699>    JSR -$24(A6)        ;to ffp
0002F7B0 <AmiBlitz3.ab3@19701>   fdiv.x fp1,fp2
0002F7B2 <AmiBlitz3.ab3@19703>   MOVE.l D5,D1
0002F7B6 <AmiBlitz3.ab3@19704>    JSR -$54(A6)       ;num/divisor (eg .25=25/100)
0002F7BA <AmiBlitz3.ab3@19706>   fadd.x fp2,fp0
0002F7BC <AmiBlitz3.ab3@19708>   MOVE.l (A7)+,D1
0002F7C0 <AmiBlitz3.ab3@19709>    JSR -$42(A6)       ;add 'em
0002F7C2 <AmiBlitz3.ab3@19710>   MOVE.l D0,D3
0002F7C6 <AmiBlitz3.ab3@19711>    BSR.w reget
0002F7CA <AmiBlitz3.ab3@19712>   ORI.w #$20,D0
0002F7CE <AmiBlitz3.ab3@19713>   CMP.w #$65,D0       ;'e'
0002F7D2 <AmiBlitz3.ab3@19714>    BNE.w 'pskip2
0002F7D6 <AmiBlitz3.ab3@19717>    BSR.w dothee
0002F7DA <AmiBlitz3.ab3@19720>    BSR.w reget
0002F7DE <AmiBlitz3.ab3@19721>    BSR.w consttype2
0002F7E2 <AmiBlitz3.ab3@19722> BRA.w fetchnum3
0002F7E4 <AmiBlitz3.ab3@19725>   MOVE.l (A7)+,D3
0002F7E8 <AmiBlitz3.ab3@19726> BRA.w 'pskip2
0002F7EC <AmiBlitz3.ab3@19731>   BSR.w get1bytemain
0002F7F0 <AmiBlitz3.ab3@19732>   CMP.w #$2B,D0       ;'+'
0002F7F4 <AmiBlitz3.ab3@19733>    BEQ.w 'pos
0002F7F8 <AmiBlitz3.ab3@19734>   CMP.w #$2D,D0       ;'-'
0002F7FC <AmiBlitz3.ab3@19735>    BNE.w 'pos2
0002F800 <AmiBlitz3.ab3@19737>    BSR.w get1bytemain
0002F804 <AmiBlitz3.ab3@19738>    BSR.w getsign
0002F806 <AmiBlitz3.ab3@19742>   MOVE.l D3,D0
0002F80A <AmiBlitz3.ab3@19744>   fdiv.x fp1,fp0
0002F80C <AmiBlitz3.ab3@19746>   MOVE.l D4,D1
0002F810 <AmiBlitz3.ab3@19747>    JSR -$54(A6)
0002F812 <AmiBlitz3.ab3@19748>   MOVE.l D0,D3
0002F814 <AmiBlitz3.ab3@19749> RTS
0002F818 <AmiBlitz3.ab3@19752>   BSR.w get1bytemain
0002F81C <AmiBlitz3.ab3@19755>   BSR.w getsign
0002F820 <AmiBlitz3.ab3@19759>   fmul.x fp1,fp0
0002F822 <AmiBlitz3.ab3@19760>   MOVE.l D3,D0
0002F824 <AmiBlitz3.ab3@19761>   MOVE.l D4,D1
0002F828 <AmiBlitz3.ab3@19762>    JSR -$4E(A6)
0002F82A <AmiBlitz3.ab3@19763>   MOVE.l D0,D3
0002F82C <AmiBlitz3.ab3@19764> RTS
0002F830 <AmiBlitz3.ab3@19768>   BSR.w tstnum
0002F834 <AmiBlitz3.ab3@19769>    BNE.w syntaxerr
0002F836 <AmiBlitz3.ab3@19770>   MOVE.w D0,D4
0002F83A <AmiBlitz3.ab3@19771>   SUBI.w #$30,D4
0002F83E <AmiBlitz3.ab3@19772>    BSR.w get1bytemain
0002F842 <AmiBlitz3.ab3@19773>    BSR.w tstnum
0002F846 <AmiBlitz3.ab3@19774>    BNE.w 'skip
0002F84A <AmiBlitz3.ab3@19775>   MULU #$A,D4
0002F84E <AmiBlitz3.ab3@19776>   SUBI.w #$30,D0
0002F850 <AmiBlitz3.ab3@19777>   ADD.w D0,D4
0002F854 <AmiBlitz3.ab3@19778>    BSR.w get1bytemain
0002F858 <AmiBlitz3.ab3@19782>   CMP.w #$12,D4
0002F85C <AmiBlitz3.ab3@19783>    BHI.w overerr
0002F85E <AmiBlitz3.ab3@19785>   LSL.w #3,D4
0002F864 <AmiBlitz3.ab3@19786>   LEA fputab,a0
0002F866 <AmiBlitz3.ab3@19787>   ADD.l d4,a0
0002F86C <AmiBlitz3.ab3@19788>   fmove.d 0(a0),fp1
0002F86E <AmiBlitz3.ab3@19790>   LSR.w #1,d4               ; was #2
0002F872 <AmiBlitz3.ab3@19791>   MOVE.l facts(PC,D4.W),D4
0002F874 <AmiBlitz3.ab3@19792> RTS
0002F8BC <AmiBlitz3.ab3@19796>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F8C0 <AmiBlitz3.ab3@19801>   Dc.l $80000041
0002F8C4 <AmiBlitz3.ab3@19802>   Dc.l $A0000044
0002F8C8 <AmiBlitz3.ab3@19803>   Dc.l $C8000047
0002F8CC <AmiBlitz3.ab3@19804>   Dc.l $FA00004A
0002F8D0 <AmiBlitz3.ab3@19805>   Dc.l $9C40004E
0002F8D4 <AmiBlitz3.ab3@19806>   Dc.l $C3500051
0002F8D8 <AmiBlitz3.ab3@19807>   Dc.l $F4240054
0002F8DC <AmiBlitz3.ab3@19808>   Dc.l $98968058
0002F8E0 <AmiBlitz3.ab3@19809>   Dc.l $BEBC205B
0002F8E4 <AmiBlitz3.ab3@19810>   Dc.l $EE6B285E
0002F8E8 <AmiBlitz3.ab3@19811>   Dc.l $9502F962
0002F8EC <AmiBlitz3.ab3@19812>   Dc.l $BA43B765
0002F8F0 <AmiBlitz3.ab3@19813>   Dc.l $E8D4A568
0002F8F4 <AmiBlitz3.ab3@19814>   Dc.l $9184E76C
0002F8F8 <AmiBlitz3.ab3@19815>   Dc.l $B5E6A96F
0002F8FC <AmiBlitz3.ab3@19816>   Dc.l $E35F2972
0002F900 <AmiBlitz3.ab3@19817>   Dc.l $8E1BCA76
0002F904 <AmiBlitz3.ab3@19818>   Dc.l $B1A2BD79
0002F908 <AmiBlitz3.ab3@19819>   Dc.l $DE0B6C7C
0002F90A <AmiBlitz3.ab3@19823>   MOVEQ.l #$01,D5
0002F90C <AmiBlitz3.ab3@19826>   LSL.l #1,D5
0002F90E <AmiBlitz3.ab3@19827>   MOVE.l D5,D1
0002F910 <AmiBlitz3.ab3@19828>   LSL.l #2,D5
0002F912 <AmiBlitz3.ab3@19829>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F914 <AmiBlitz3.ab3@19831>   LSL.l #1,D3
0002F918 <AmiBlitz3.ab3@19832>    BCS.w overerr
0002F91A <AmiBlitz3.ab3@19833>   MOVE.l D3,D1
0002F91C <AmiBlitz3.ab3@19834>   LSL.l #1,D3
0002F920 <AmiBlitz3.ab3@19835>    BCS.w overerr
0002F922 <AmiBlitz3.ab3@19836>   LSL.l #1,D3
0002F926 <AmiBlitz3.ab3@19837>    BCS.w overerr
0002F928 <AmiBlitz3.ab3@19838>   ADD.l D1,D3
0002F92C <AmiBlitz3.ab3@19839>   SUBI.w #$30,D0
0002F92E <AmiBlitz3.ab3@19840>   ADD.l D0,D3
0002F95A <AmiBlitz3.ab3@19842>    !fget                                                   ;bsr.w get1bytemain
0002F95E <AmiBlitz3.ab3@19843>    CMP.b #1,d0
0002F962 <AmiBlitz3.ab3@19844>    BNE 'cm1
0002F964 <AmiBlitz3.ab3@19845>    SUBQ.l #1,a5
0002F968 <AmiBlitz3.ab3@19846>    BSR get1bytemain                                        ;??wy not !fget
0002F96C <AmiBlitz3.ab3@19849>   CMP.b #$7e,d0
0002F970 <AmiBlitz3.ab3@19850>    BNE 'cm2
0002F972 <AmiBlitz3.ab3@19851>    SUBQ.l #1,a5
0002F976 <AmiBlitz3.ab3@19852>    BSR get1bytemain
0002F978 <AmiBlitz3.ab3@19855>   TST.b d0
0002F97C <AmiBlitz3.ab3@19856>    BPL 'l10
0002F97E <AmiBlitz3.ab3@19857>    LSL.w #8,d0
0002F980 <AmiBlitz3.ab3@19858>    MOVE.b (a5)+,d0
0002F986 <AmiBlitz3.ab3@19859>    MOVE.w d0,lastchar
0002F998 <AmiBlitz3.ab3@19862>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F99C <AmiBlitz3.ab3@19864>    BEQ.w 'loop
0002F99E <AmiBlitz3.ab3@19865> RTS
0002F9A0 <AmiBlitz3.ab3@19868> dfetch:  Ds.w 1                                            ;fetching data?
0002F9A4 <AmiBlitz3.ab3@19872>   MOVE.w dfetch(PC),D1
0002F9A8 <AmiBlitz3.ab3@19873>    BEQ.w 'doit
0002F9AE <AmiBlitz3.ab3@19874>   CLR.w dfetch
0002F9B0 <AmiBlitz3.ab3@19875>  RTS
0002F9B6 <AmiBlitz3.ab3@19879>   MOVE.b d2,isconstantvalue
0002F9BC <AmiBlitz3.ab3@19880>   MOVE.l d0,lastconstantvalue
0002F9C2 <AmiBlitz3.ab3@19881>   MOVE.w d2,imm_size
0002F9CC <AmiBlitz3.ab3@19882>   MOVE.w regnum,imm_reg
0002F9D6 <AmiBlitz3.ab3@19883>   MOVE.l destpointer,imm_addr                           ; long
0002F9DA <AmiBlitz3.ab3@19885>   CMP.w #$3,D2          ; order of cmp/beq in org soure is different
0002F9DE <AmiBlitz3.ab3@19886>   BEQ.w 'long
0002F9E2 <AmiBlitz3.ab3@19887>   CMP.w #$5,D2                                          ;float
0002F9E6 <AmiBlitz3.ab3@19888>   BEQ.w 'long
0002F9EA <AmiBlitz3.ab3@19889>   CMP.w #$1,D2
0002F9EE <AmiBlitz3.ab3@19890>   BEQ.w 'word
0002F9F2 <AmiBlitz3.ab3@19891>   CMP.w #$2,D2
0002F9F6 <AmiBlitz3.ab3@19892>   BEQ.w 'word
0002F9FA <AmiBlitz3.ab3@19893>   CMP.w #$4,D2
0002F9FE <AmiBlitz3.ab3@19894>   BEQ.w 'long
0002FA02 <AmiBlitz3.ab3@19895>  BRA.w mismatcherr
0002FA08 <AmiBlitz3.ab3@19898>   MOVE.w regnum,D1
0002FA0A <AmiBlitz3.ab3@19899>   LSL.w #8,D1
0002FA0C <AmiBlitz3.ab3@19900>   LSL.w #1,D1
0002FA10 <AmiBlitz3.ab3@19901>   ORI.w #$303C,D1
0002FA14 <AmiBlitz3.ab3@19902>    BSR.w writeword
0002FA16 <AmiBlitz3.ab3@19903>   MOVE.w D0,D1
0002FA1A <AmiBlitz3.ab3@19904>    BSR.w writeword
0002FA1E <AmiBlitz3.ab3@19905>  BRA.w reget
0002FA20 <AmiBlitz3.ab3@19909>   MOVEQ #0,d1
0002FA26 <AmiBlitz3.ab3@19911>   MOVE.w regnum,D1
0002FA2C <AmiBlitz3.ab3@19913>   TST.b fpu
0002FA30 <AmiBlitz3.ab3@19914>   BEQ 'f1
0002FA34 <AmiBlitz3.ab3@19915>   CMP.w #5,d2
0002FA38 <AmiBlitz3.ab3@19916>   BEQ 'l10
0002FA3C <AmiBlitz3.ab3@19917>  BRA 'f2
0002FA42 <AmiBlitz3.ab3@19920>   TST.b iee
0002FA46 <AmiBlitz3.ab3@19921>   BNE 'l10
0002FA48 <AmiBlitz3.ab3@19925>   LSL.w #8,D1
0002FA4A <AmiBlitz3.ab3@19926>   LSL.w #1,D1
0002FA4E <AmiBlitz3.ab3@19927>   ORI.w #$203C,D1
0002FA52 <AmiBlitz3.ab3@19928>    BSR.w writeword
0002FA54 <AmiBlitz3.ab3@19929>   MOVE.l D0,D1
0002FA58 <AmiBlitz3.ab3@19930>    BSR.w writelong
0002FA5C <AmiBlitz3.ab3@19931>  BRA.w reget
0002FA5E <AmiBlitz3.ab3@19935>   MOVEQ #5,d2
0002FA60 <AmiBlitz3.ab3@19936>   ASL.l #7,d1
0002FA62 <AmiBlitz3.ab3@19937>   SUBQ.l #8,a7
0002FA68 <AmiBlitz3.ab3@19942>       OR.l #$f23c4400,d1                                   ;fmove.s
0002FA6E <AmiBlitz3.ab3@19943>        fmove.s fp0,0(a7)
0002FA72 <AmiBlitz3.ab3@19945>   BSR writelong
0002FA74 <AmiBlitz3.ab3@19946>   MOVE.l (a7)+,d1
0002FA78 <AmiBlitz3.ab3@19947>   BSR writelong
0002FA7A <AmiBlitz3.ab3@19948>   MOVE.l (a7)+,d1
0002FA7E <AmiBlitz3.ab3@19952> BRA.w reget
0002FA80 <AmiBlitz3.ab3@19959>  MOVE.l D3,D0
0002FA82 <AmiBlitz3.ab3@19960>   TST.w D6
0002FA86 <AmiBlitz3.ab3@19961>    BEQ.w 'skip            ;already integer
0002FA8C <AmiBlitz3.ab3@19962>   MOVEA.l _mathffpbase,A6
0002FA90 <AmiBlitz3.ab3@19963>    JSR -$1E(A6)
0002FA94 <AmiBlitz3.ab3@19964>    BVC.w 'skip
0002FA96 <AmiBlitz3.ab3@19965>   ADDQ.w #4,A7
0002FA9A <AmiBlitz3.ab3@19966>  BRA.w numdofloat
0002FA9C <AmiBlitz3.ab3@19969> RTS
0002FA9E <AmiBlitz3.ab3@19973>   MOVEQ.l #$00,D6          ;no frac
0002FAA2 <AmiBlitz3.ab3@19975>    fmove.l d3,fp0
0002FAA6 <AmiBlitz3.ab3@19979>   BSR.w consttype2
0002FAAA <AmiBlitz3.ab3@19980> BRA.w fetchnum3
0002FAAC <AmiBlitz3.ab3@19988>   MOVE.w D2,-(A7)                       ;
0002FAB0 <AmiBlitz3.ab3@19989>    BSR.w evalconst                      ;  "
0002FAB2 <AmiBlitz3.ab3@19990>   MOVE.w (A7)+,D2
0002FAB4 <AmiBlitz3.ab3@19993>   TST.w D2
0002FAB8 <AmiBlitz3.ab3@19994>    BNE.w 'something
0002FABA <AmiBlitz3.ab3@19998>   TST.w D6
0002FABE <AmiBlitz3.ab3@19999>    BEQ.w 'nofrac
0002FAC0 <AmiBlitz3.ab3@20000>   MOVEQ.l #$04,D2
0002FAC4 <AmiBlitz3.ab3@20001>  BRA.w 'quick2
0002FAC6 <AmiBlitz3.ab3@20004>   MOVEQ.l #$02,D2
0002FACA <AmiBlitz3.ab3@20005>  BRA.w 'byte
0002FACE <AmiBlitz3.ab3@20008>   CMP.w #$1,D2
0002FAD2 <AmiBlitz3.ab3@20009>    BEQ.w 'byte
0002FAD6 <AmiBlitz3.ab3@20010>   CMP.w #$2,D2
0002FADA <AmiBlitz3.ab3@20011>    BEQ.w 'word
0002FADE <AmiBlitz3.ab3@20012>   CMP.w #$3,D2
0002FAE2 <AmiBlitz3.ab3@20013>    BEQ.w 'long
0002FAE6 <AmiBlitz3.ab3@20014>   CMP.w #$4,D2
0002FAEA <AmiBlitz3.ab3@20015>    BEQ.w 'quick
0002FAEE <AmiBlitz3.ab3@20016>   CMP.w #$5,D2
0002FAF2 <AmiBlitz3.ab3@20017>    BEQ.w 'float
0002FAF6 <AmiBlitz3.ab3@20018>  BRA.w mismatcherr
0002FAFA <AmiBlitz3.ab3@20021>   BSR.w makeint                                          ;bugfix if a.b=$90 bug fix
0002FB00 <AmiBlitz3.ab3@20022>   CMP.l #$7f,D0             ;127
0002FB04 <AmiBlitz3.ab3@20023>    BGT.w 'over1
0002FB0A <AmiBlitz3.ab3@20024>   CMP.l #$FFFFFF80,D0       ;-128
0002FB0E <AmiBlitz3.ab3@20025>    BGE.w 'dobword
0002FB10 <AmiBlitz3.ab3@20028>   MOVEQ.l #$02,D2                                          ;was 2 before
0002FB16 <AmiBlitz3.ab3@20029>   CMP.l #$7fff,D0           ;32767
0002FB1A <AmiBlitz3.ab3@20030>    BGT.w 'byte2
0002FB20 <AmiBlitz3.ab3@20031>   CMP.l #$FFFF8000,D0       ;32768
0002FB24 <AmiBlitz3.ab3@20032>    BGE.w 'dobword
0002FB26 <AmiBlitz3.ab3@20035>   MOVEQ.l #$03,D2
0002FB2A <AmiBlitz3.ab3@20036>  BRA.w 'dobword
0002FB2C <AmiBlitz3.ab3@20063>   TST.w D6
0002FB30 <AmiBlitz3.ab3@20064>    BNE.w 'quick2
0002FB34 <AmiBlitz3.ab3@20065>    BSR.w makeint
0002FB38 <AmiBlitz3.ab3@20066>  BRA.w 'over1
0002FB3C <AmiBlitz3.ab3@20069>   BSR.w makeint
0002FB3E <AmiBlitz3.ab3@20070>   TST.w D6
0002FB42 <AmiBlitz3.ab3@20071>   BEQ.w 'qint
0002FB48 <AmiBlitz3.ab3@20074>   CMP.l #MaxWordSgnd,D0   ;32767
0002FB4C <AmiBlitz3.ab3@20075>    BGT.w numdofloat
0002FB52 <AmiBlitz3.ab3@20076>   CMP.l #$FFFF8000,D0     ;-32768
0002FB56 <AmiBlitz3.ab3@20077>    BLT.w numdofloat
0002FB58 <AmiBlitz3.ab3@20079>   MOVE.w D0,-(A7)         ;save whole part
0002FB5C <AmiBlitz3.ab3@20080>    JSR -$24(A6)           ;back to ffp
0002FB5E <AmiBlitz3.ab3@20081>   MOVE.l D0,D1
0002FB60 <AmiBlitz3.ab3@20082>   MOVE.l D3,D0
0002FB64 <AmiBlitz3.ab3@20083>    JSR -$48(A6)           ;subtract - d0=fraction!
0002FB6A <AmiBlitz3.ab3@20084>   MOVE.l #$80000051,D1    ;65536
0002FB6E <AmiBlitz3.ab3@20085>    JSR -$4E(A6)           ;*65536
0002FB72 <AmiBlitz3.ab3@20086>    JSR -$1E(A6)           ;back to int
0002FB76 <AmiBlitz3.ab3@20088>    BEQ.w 'knob            ;numdofloat
0002FB7C <AmiBlitz3.ab3@20089>   CMP.l #$10000,D0        ;65536
0002FB80 <AmiBlitz3.ab3@20090>    BCC.w 'knob            ;numdofloat
0002FB82 <AmiBlitz3.ab3@20091>   MOVE.w D0,D1
0002FB84 <AmiBlitz3.ab3@20092>   MOVE.w (A7)+,D0
0002FB86 <AmiBlitz3.ab3@20093>   SWAP D0
0002FB88 <AmiBlitz3.ab3@20094>   MOVE.w D1,D0
0002FB8C <AmiBlitz3.ab3@20095>  BRA.w 'dolong
0002FB8E <AmiBlitz3.ab3@20098>   ADDQ.w #2,A7
0002FB92 <AmiBlitz3.ab3@20099>  BRA.w numdofloat
0002FB98 <AmiBlitz3.ab3@20102>   CMP.l #MaxWordSgnd,D0   ;#32767
0002FB9C <AmiBlitz3.ab3@20103>    BGT.w 'byte2
0002FBA2 <AmiBlitz3.ab3@20104>   CMP.l #$FFFF8000,D0     ;#32768
0002FBA6 <AmiBlitz3.ab3@20105>    BLT.w 'byte2
0002FBA8 <AmiBlitz3.ab3@20106>   SWAP D0
0002FBAC <AmiBlitz3.ab3@20107>  BRA.w 'dolong
0002FBAE <AmiBlitz3.ab3@20110>   TST.w D6
0002FBB2 <AmiBlitz3.ab3@20111>   BNE.w numdofloat
0002FBB4 <AmiBlitz3.ab3@20112>   MOVE.l D3,D0
0002FBB8 <AmiBlitz3.ab3@20113>  BRA.w 'dolong
0002FBBA <AmiBlitz3.ab3@20116>   TST.w D6
0002FBBE <AmiBlitz3.ab3@20117>   BNE.w numdofloat
0002FBC0 <AmiBlitz3.ab3@20118>   MOVE.l D3,D0
0002FBC6 <AmiBlitz3.ab3@20119>   MOVEA.l _mathffpbase,A6
0002FBCA <AmiBlitz3.ab3@20120>   JSR -$24(A6)           ;int to float
0002FBCC <AmiBlitz3.ab3@20121>   MOVE.l D0,D3
0002FBD0 <AmiBlitz3.ab3@20122>  BRA.w numdofloat
0002FBD2 <AmiBlitz3.ab3@20126> RTS
0002FBD4 <AmiBlitz3.ab3@20130>   MOVEQ.l #$05,D2
0002FBD6 <AmiBlitz3.ab3@20131>   MOVE.l D3,D0
0002FBD8 <AmiBlitz3.ab3@20132> RTS
0002FBDC <AmiBlitz3.ab3@20136>             Ds.l 1                                         ;??Looks like unused data??
0002FBE0 <AmiBlitz3.ab3@20137> pushpc:     Ds.l 1
0002FBE4 <AmiBlitz3.ab3@20138> pushoff:    Ds.l 1
0002FBE8 <AmiBlitz3.ab3@20139> pushdooff:  Ds.l 1
0002FBEA <AmiBlitz3.ab3@20140> pushclen:   Ds.w 1
0002FBEE <AmiBlitz3.ab3@20141> pushat:     Ds.l 1
0002FBF8 <AmiBlitz3.ab3@20147>   MOVE.l destpointer,pushpc
0002FC02 <AmiBlitz3.ab3@20148>   MOVE.l hunkoffsetbase,pushoff
0002FC04 <AmiBlitz3.ab3@20149>  RTS
0002FC08 <AmiBlitz3.ab3@20155>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FC0E <AmiBlitz3.ab3@20157>   MOVE.l destpointer,D0
0002FC12 <AmiBlitz3.ab3@20158>   MOVE.l pushpc(PC),D1
0002FC18 <AmiBlitz3.ab3@20159>   MOVE.l D1,destpointer    ;New PC
0002FC1A <AmiBlitz3.ab3@20160>   SUB.l D1,D0              ;len
0002FC20 <AmiBlitz3.ab3@20161>   MOVE.w D0,pushclen
0002FC24 <AmiBlitz3.ab3@20162>    BEQ.w 'skip
0002FC2A <AmiBlitz3.ab3@20163>   MOVE.w dontwrite_nomemleft,D1
0002FC2E <AmiBlitz3.ab3@20164>    BNE.w 'skip
0002FC36 <AmiBlitz3.ab3@20167>    CMP.w #1000,pushclen
0002FC3A <AmiBlitz3.ab3@20168>    BGE conmemerr
0002FC40 <AmiBlitz3.ab3@20169>    MOVE.l pushat,d0
0002FC44 <AmiBlitz3.ab3@20170>    BNE 'nomem
0002FC4A <AmiBlitz3.ab3@20171>    MOVE.l #1024,d0
0002FC4C <AmiBlitz3.ab3@20173>   MOVEQ.l #$01,D1
0002FC52 <AmiBlitz3.ab3@20174>   MOVEA.l _execbase,A6
0002FC58 <AmiBlitz3.ab3@20176>   MOVE.l mempool,a0
0002FC5C <AmiBlitz3.ab3@20177>   JSR _AllocPooled(a6)
0002FC62 <AmiBlitz3.ab3@20180>   MOVE.l D0,pushat
0002FC64 <AmiBlitz3.ab3@20185>   MOVEA.l D0,A0          ;destination
0002FC6A <AmiBlitz3.ab3@20186>   MOVEA.l pushpc,A1      ;source
0002FC70 <AmiBlitz3.ab3@20187>   MOVE.l A1,destpointer
0002FC76 <AmiBlitz3.ab3@20188>   MOVE.w pushclen,D0
0002FC78 <AmiBlitz3.ab3@20189>   LSR.w #1,D0
0002FC7A <AmiBlitz3.ab3@20190>   SUBQ.w #1,D0           ;to word dbf
0002FC7C <AmiBlitz3.ab3@20193>     MOVE.w (A1)+,(A0)+
0002FC80 <AmiBlitz3.ab3@20194>   DBF D0,'loop
0002FC8A <AmiBlitz3.ab3@20196>    MOVE.l hunkoffsetbase,pushdooff
0002FC8E <AmiBlitz3.ab3@20199>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FC90 <AmiBlitz3.ab3@20200> RTS
0002FC94 <AmiBlitz3.ab3@20206>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FC96 <AmiBlitz3.ab3@20207>   MOVEQ.l #$00,D0
0002FC9C <AmiBlitz3.ab3@20208>   MOVE.w pushclen,D0
0002FCA0 <AmiBlitz3.ab3@20209>    BEQ.w 'skip
0002FCA6 <AmiBlitz3.ab3@20210>   MOVE.l destpointer,D1     ;pc before put
0002FCAC <AmiBlitz3.ab3@20211>   ADD.l D0,destpointer
0002FCB2 <AmiBlitz3.ab3@20212>   TST.w dontwrite_nomemleft
0002FCB6 <AmiBlitz3.ab3@20213>    BNE.w 'skip
0002FCB8 <AmiBlitz3.ab3@20215>   LSR.w #1,D0
0002FCBA <AmiBlitz3.ab3@20216>   SUBQ.w #1,D0
0002FCBC <AmiBlitz3.ab3@20218>   MOVEA.l D1,A1
0002FCC2 <AmiBlitz3.ab3@20219>   MOVEA.l pushat,A0
0002FCC8 <AmiBlitz3.ab3@20222>     CMPA.l destbufferend,A1
0002FCCC <AmiBlitz3.ab3@20223>     BCS.w 'ok
0002FCD4 <AmiBlitz3.ab3@20225>     MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
0002FCD8 <AmiBlitz3.ab3@20226>   BRA.w 'skip
0002FCDA <AmiBlitz3.ab3@20229>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002FCDE <AmiBlitz3.ab3@20230>   DBF D0,'loop
0002FCE4 <AmiBlitz3.ab3@20235>   SUB.l pushpc,D1
0002FCE8 <AmiBlitz3.ab3@20236>   BEQ.w 'skip2
0002FCEE <AmiBlitz3.ab3@20237>   MOVEA.l pushdooff,A0
0002FCF4 <AmiBlitz3.ab3@20240>   CMPA.l pushoff,A0
0002FCF8 <AmiBlitz3.ab3@20241>   BEQ.w 'done
0002FCFC <AmiBlitz3.ab3@20242>   MOVEA.l $4(A0),A1          ;address in prog.
0002FD02 <AmiBlitz3.ab3@20243>   ADDA.l destbufferstart,A1
0002FD08 <AmiBlitz3.ab3@20244>   CMPA.l destbufferend,A1
0002FD0C <AmiBlitz3.ab3@20245>   BCC.w 'next                ;leave offs >= lib
0002FD10 <AmiBlitz3.ab3@20246>   ADD.l D1,$4(A0)
0002FD12 <AmiBlitz3.ab3@20249>   MOVEA.l (A0),A0
0002FD16 <AmiBlitz3.ab3@20250>  BRA.w 'loop2
0002FD1C <AmiBlitz3.ab3@20254>   MOVEA.l pushat,A1
0002FD1E <AmiBlitz3.ab3@20255>   MOVEQ.l #$00,D0
0002FD24 <AmiBlitz3.ab3@20256>   MOVE.w pushclen,D0
0002FD2A <AmiBlitz3.ab3@20257>   MOVEA.l _execbase,A6
0002FD30 <AmiBlitz3.ab3@20258>   MOVE.l mempool,a0
0002FD34 <AmiBlitz3.ab3@20262>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FD36 <AmiBlitz3.ab3@20263> RTS
0002FD38 <AmiBlitz3.ab3@20269>   MOVE.l D1,-(A7)                                          ;array mul
0002FD3A <AmiBlitz3.ab3@20270>   MOVEQ.l #$00,D2
0002FD3C <AmiBlitz3.ab3@20271>   MOVEQ.l #$0F,D3
0002FD3E <AmiBlitz3.ab3@20274>     LSL.w #1,D1
0002FD42 <AmiBlitz3.ab3@20275>     BCC.w 'shskip
0002FD44 <AmiBlitz3.ab3@20276>     ADDQ.w #1,D2
0002FD46 <AmiBlitz3.ab3@20277>     MOVE.w D3,D4
0002FD4A <AmiBlitz3.ab3@20280>   DBF D3,'shloop
0002FD4C <AmiBlitz3.ab3@20282>   SUBQ.w #1,D2
0002FD50 <AmiBlitz3.ab3@20283>    BNE.w 'domul
0002FD52 <AmiBlitz3.ab3@20284>   ADDQ.w #4,A7           ; was 2
0002FD54 <AmiBlitz3.ab3@20285>   MOVE.w D4,D1
0002FD58 <AmiBlitz3.ab3@20286>    BEQ.w 'done
0002FD5C <AmiBlitz3.ab3@20287>   CMP.w #$8,D1
0002FD60 <AmiBlitz3.ab3@20288>    BCS.w 'once
0002FD64 <AmiBlitz3.ab3@20289>   SUBI.w #$8,D1
0002FD68 <AmiBlitz3.ab3@20290>    BSR.w 'once
0002FD6A <AmiBlitz3.ab3@20291>   MOVEQ.l #$00,D1
0002FD6C <AmiBlitz3.ab3@20294>   LSL.w #8,D1
0002FD6E <AmiBlitz3.ab3@20295>   LSL.w #1,D1
0002FD72 <AmiBlitz3.ab3@20296>   ORI.w #$E188,D1
0002FD78 <AmiBlitz3.ab3@20297>   OR.w regnum,D1
0002FD7C <AmiBlitz3.ab3@20298>  BRA.w writeword
0002FD7E <AmiBlitz3.ab3@20301>  RTS
0002FD80 <AmiBlitz3.ab3@20305>   MOVEQ #0,d1
0002FD86 <AmiBlitz3.ab3@20306>   MOVE.w regnum,D1
0002FD88 <AmiBlitz3.ab3@20308>   LSL.l #8,D1
0002FD8A <AmiBlitz3.ab3@20311>   LSL.l #4,d1
0002FD90 <AmiBlitz3.ab3@20315>   OR.l #$4c3c0000,d1
0002FD96 <AmiBlitz3.ab3@20316>   OR.w regnum,d1
0002FD9A <AmiBlitz3.ab3@20317>   BSR.w writelong          ; was writeword
0002FD9C <AmiBlitz3.ab3@20319>   MOVE.l (A7)+,D1
0002FDA0 <AmiBlitz3.ab3@20322> BRA writelong
0002FDA6 <AmiBlitz3.ab3@20329>   MOVE.l destpointer,-(A7)
0002FDA8 <AmiBlitz3.ab3@20330>   MOVEQ.l #-$01,D7
0002FDAC <AmiBlitz3.ab3@20333>     BSR.w findhilib
0002FDB0 <AmiBlitz3.ab3@20334>      BEQ.w 'done
0002FDB4 <AmiBlitz3.ab3@20335>     TST.w $C(A2)
0002FDB8 <AmiBlitz3.ab3@20336>      BPL.w 'loop
0002FDBC <AmiBlitz3.ab3@20337>     MOVE.l $16(A2),D1
0002FDC0 <AmiBlitz3.ab3@20338>     BEQ.w 'loop
0002FDC4 <AmiBlitz3.ab3@20340>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002FDC8 <AmiBlitz3.ab3@20341>     CMP.w #-$2,D1          ; was #allocvars
0002FDCC <AmiBlitz3.ab3@20342>      BNE.w 'notvar
0002FDD0 <AmiBlitz3.ab3@20343>     BSR.w makevsize
0002FDD4 <AmiBlitz3.ab3@20344>  BRA.w 'more
0002FDD8 <AmiBlitz3.ab3@20347>     CMP.w #-$5C4,D1       ; was #debuglib
0002FDDC <AmiBlitz3.ab3@20348>      BNE.w 'notdebuglib
0002FDE0 <AmiBlitz3.ab3@20352>     MOVE.w #$7000,D1      ;moveq #0,d0
0002FDE8 <AmiBlitz3.ab3@20353>     BTST #$7,autorun
0002FDEA <AmiBlitz3.ab3@20354>     SNE D1
0002FDEE <AmiBlitz3.ab3@20355>     BSR.w writeword
0002FDF2 <AmiBlitz3.ab3@20356>  BRA.w 'more
0002FDF6 <AmiBlitz3.ab3@20359>     CMP.w #-$12D,D1       ; was 65235
0002FDFA <AmiBlitz3.ab3@20360>      BNE.w 'notstring1
0002FDFE <AmiBlitz3.ab3@20361>     BSR.w makessize
0002FE02 <AmiBlitz3.ab3@20362>  BRA.w 'more
0002FE06 <AmiBlitz3.ab3@20365>     CMP.w #-$1F5,D1       ; was 65035
0002FE0A <AmiBlitz3.ab3@20366>      BNE.w 'notexit
0002FE0E <AmiBlitz3.ab3@20368>     MOVE.w #$203C,D1
0002FE12 <AmiBlitz3.ab3@20369>     BSR.w writeword
0002FE16 <AmiBlitz3.ab3@20370>     BSR.w addoff
0002FE1C <AmiBlitz3.ab3@20371>     MOVE.l endop,D1
0002FE20 <AmiBlitz3.ab3@20372>     BSR.w writelong
0002FE24 <AmiBlitz3.ab3@20373>  BRA.w 'more
0002FE28 <AmiBlitz3.ab3@20376>     CMP.w #-$3E9,D1       ; was 64535
0002FE2C <AmiBlitz3.ab3@20377>      BNE.w 'notdatalib
0002FE30 <AmiBlitz3.ab3@20378>     MOVE.w #$203C,D1
0002FE34 <AmiBlitz3.ab3@20379>     BSR.w writeword
0002FE38 <AmiBlitz3.ab3@20380>     BSR.w addoff
0002FE3E <AmiBlitz3.ab3@20381>     MOVE.l data2at,D1
0002FE42 <AmiBlitz3.ab3@20382>     BSR.w writelong
0002FE46 <AmiBlitz3.ab3@20383>  BRA.w 'more
0002FE4A <AmiBlitz3.ab3@20386>     CMP.w #$1,D1          ; was #dhandlerlib
0002FE4E <AmiBlitz3.ab3@20387>      BNE.w 'notdhandler
0002FE52 <AmiBlitz3.ab3@20388>     MOVE.w #$203C,D1
0002FE56 <AmiBlitz3.ab3@20389>     BSR.w writeword
0002FE5C <AmiBlitz3.ab3@20390>     MOVE.l ptr_seg_debugger,D1
0002FE60 <AmiBlitz3.ab3@20391>     BSR.w writelong
0002FE64 <AmiBlitz3.ab3@20395>     MOVE.l $16(A2),D1
0002FE6C <AmiBlitz3.ab3@20396>     MOVE.w #$FFFF,lasta6     ; was -1
0002FE70 <AmiBlitz3.ab3@20397>     BSR.w Amakelibsub
0002FE76 <AmiBlitz3.ab3@20398>     CMPI.w #$FFFE,$4(A2)     ; was #allocvars
0002FE7A <AmiBlitz3.ab3@20399>      BNE.w 'notvar2
0002FE80 <AmiBlitz3.ab3@20401>     MOVE.l intdata1,D1
0002FE84 <AmiBlitz3.ab3@20402>      BEQ.w 'notvar2
0002FE8A <AmiBlitz3.ab3@20403>     MOVE.w putidata1,D1
0002FE8E <AmiBlitz3.ab3@20404>     BSR.w writeword
0002FE92 <AmiBlitz3.ab3@20405>     BSR.w addoff
0002FE98 <AmiBlitz3.ab3@20406>     MOVE.l intdata1,D1
0002FE9C <AmiBlitz3.ab3@20407>     BSR.w writelong
0002FEA0 <AmiBlitz3.ab3@20410>     MOVE.w #$2B40,D1
0002FEA4 <AmiBlitz3.ab3@20411>     TST.w $1A(A2)
0002FEA8 <AmiBlitz3.ab3@20412>      BEQ.w 'loop
0002FEAC <AmiBlitz3.ab3@20413>      BPL.w 'long
0002FEB0 <AmiBlitz3.ab3@20414>     MOVE.w #$3B40,D1
0002FEB4 <AmiBlitz3.ab3@20417>     BSR.w writeword
0002FEB8 <AmiBlitz3.ab3@20418>     MOVE.w $A(A2),D1
0002FEBC <AmiBlitz3.ab3@20419>      BSR.w writeword
0002FEC2 <AmiBlitz3.ab3@20420>     CMPI.w #$FFFA,$4(A2)   ; was #65530
0002FEC6 <AmiBlitz3.ab3@20421>      BNE.w 'loop
0002FEC8 <AmiBlitz3.ab3@20423>     MOVE.w D7,-(A7)
0002FECE <AmiBlitz3.ab3@20424>     MOVE.w numstatic,D4
0002FED2 <AmiBlitz3.ab3@20425>      BEQ.w 'nostats
0002FED8 <AmiBlitz3.ab3@20426>     MOVE.l staticdata,D3
0002FEDE <AmiBlitz3.ab3@20427>      JSR datastart
0002FEE2 <AmiBlitz3.ab3@20428>     MOVE.w #$C500,D1       ; was #alstat
0002FEE6 <AmiBlitz3.ab3@20429>      BSR.w tokejsr2
0002FEEC <AmiBlitz3.ab3@20432>     MOVE.w maxsused,D4
0002FEF0 <AmiBlitz3.ab3@20433>      BEQ.w 'nomaxs
0002FEF6 <AmiBlitz3.ab3@20434>     MOVE.l maxsat,D3
0002FEFC <AmiBlitz3.ab3@20435>      JSR datastart
0002FF00 <AmiBlitz3.ab3@20436>     MOVE.w #$CF00,D1      ; was #setmaxs
0002FF04 <AmiBlitz3.ab3@20437>      BSR.w tokejsr2
0002FF06 <AmiBlitz3.ab3@20440>     MOVE.w (A7)+,D7
0002FF0A <AmiBlitz3.ab3@20442>  BRA.w 'loop
0002FF10 <AmiBlitz3.ab3@20448>   MOVE.l destpointer,D1
0002FF12 <AmiBlitz3.ab3@20449>   CMP.l (A7),D1
0002FF16 <AmiBlitz3.ab3@20450>    BNE.w 'yi
0002FF1E <AmiBlitz3.ab3@20451>   MOVE.w #$0008,noinits+2
0002FF22 <AmiBlitz3.ab3@20452>  BRA.w 'yi3
0002FF28 <AmiBlitz3.ab3@20455>   CLR.w noinits+2
0002FF2E <AmiBlitz3.ab3@20456>   MOVE.w dontwrite_nomemleft,D1
0002FF32 <AmiBlitz3.ab3@20457>    BNE.w 'yi2
0002FF38 <AmiBlitz3.ab3@20459>   TST.l newinitaddr
0002FF3C <AmiBlitz3.ab3@20460>    BEQ 'l10
0002FF42 <AmiBlitz3.ab3@20461>   MOVE.l newinitaddr,D2
0002FF48 <AmiBlitz3.ab3@20462>   SUB.l destbufferstart,D2
0002FF4A <AmiBlitz3.ab3@20463>   ADDQ.l #2,d2
0002FF50 <AmiBlitz3.ab3@20465>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002FF54 <AmiBlitz3.ab3@20469>   MOVE.w #$4EB9,(A0)+
0002FF56 <AmiBlitz3.ab3@20470>   MOVE.l (A7),(A0)+
0002FF5A <AmiBlitz3.ab3@20473>  BRA 'l20
0002FF60 <AmiBlitz3.ab3@20476>   MOVEA.l destbufferstart,A0                               ;write initcode
0002FF66 <AmiBlitz3.ab3@20477>   TST.b saved0
0002FF6A <AmiBlitz3.ab3@20478>   BEQ 'l1
0002FF6E <AmiBlitz3.ab3@20479>   MOVE.w #$23c0,(a0)+
0002FF70 <AmiBlitz3.ab3@20480>   MOVE.l a0,a1
0002FF72 <AmiBlitz3.ab3@20481>   ADDQ.l #6,a1
0002FF74 <AmiBlitz3.ab3@20482>   MOVE.l a1,(a0)+
0002FF76 <AmiBlitz3.ab3@20484>   MOVEQ.l #$02,D2
0002FF7A <AmiBlitz3.ab3@20485>   BSR.w addhunkoffset
0002FF7E <AmiBlitz3.ab3@20487>   MOVE.w #$6004,(a0)+
0002FF84 <AmiBlitz3.ab3@20488>   MOVE.l #$4e714e71,(a0)+
0002FF88 <AmiBlitz3.ab3@20491>   MOVE.w #$4EB9,(A0)+
0002FF8A <AmiBlitz3.ab3@20492>   MOVE.l (A7),(A0)+
0002FF8C <AmiBlitz3.ab3@20493>   MOVEQ #2,d2
0002FF92 <AmiBlitz3.ab3@20494>   TST.b saved0
0002FF96 <AmiBlitz3.ab3@20495>   BEQ 'l20
0002FF98 <AmiBlitz3.ab3@20496>   MOVEQ.l #14,D2
0002FF9C <AmiBlitz3.ab3@20499>   BSR.w addhunkoffset
0002FFA0 <AmiBlitz3.ab3@20500>   MOVE.w #$2039,(a0)+
0002FFA2 <AmiBlitz3.ab3@20501>   MOVE.l a1,(a0)+
0002FFA4 <AmiBlitz3.ab3@20502>   MOVEQ.l #20,d2
0002FFA8 <AmiBlitz3.ab3@20505>   BSR.w addhunkoffset
0002FFAC <AmiBlitz3.ab3@20509>   MOVE.w #$4E75,D1
0002FFB0 <AmiBlitz3.ab3@20510>   BSR.w writeword
0002FFB2 <AmiBlitz3.ab3@20513>   ADDQ.w #4,A7
0002FFB4 <AmiBlitz3.ab3@20514> RTS
0002FFB8 <AmiBlitz3.ab3@20519>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002FFBE <AmiBlitz3.ab3@20521>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FFC4 <AmiBlitz3.ab3@20523>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FFCA <AmiBlitz3.ab3@20528>   MOVE.l stringbuffer,D1
0002FFCE <AmiBlitz3.ab3@20529> BRA.w makesize
0002FFD0 <AmiBlitz3.ab3@20534>   MOVEQ.l #$00,D1
0002FFD6 <AmiBlitz3.ab3@20535>   MOVE.w globalvarpointer,D1
0002FFDA <AmiBlitz3.ab3@20536>   SUBI.w #$8000,D1
0002FFDE <AmiBlitz3.ab3@20537>   BNE.w makesize
0002FFE0 <AmiBlitz3.ab3@20538>     MOVEQ.l #$08,D1
0002FFE2 <AmiBlitz3.ab3@20543>   MOVE.l D1,-(A7)
0002FFE6 <AmiBlitz3.ab3@20544>   MOVE.w #$203C,D1
0002FFEA <AmiBlitz3.ab3@20545>   BSR.w writeword
0002FFEC <AmiBlitz3.ab3@20546>   MOVE.l (A7)+,D1
0002FFF0 <AmiBlitz3.ab3@20547> BRA.w writelong
0002FFF2 <AmiBlitz3.ab3@20555>   MOVEQ.l #$00,D1
0002FFF8 <AmiBlitz3.ab3@20556>   MOVEA.l libpointer,A1
0002FFFC <AmiBlitz3.ab3@20559>     CMPA.w #$0,A1
00030000 <AmiBlitz3.ab3@20560>     BEQ.w 'done
00030004 <AmiBlitz3.ab3@20561>       CMP.w $4(A1),D7
00030008 <AmiBlitz3.ab3@20562>       BLS.w 'next
0003000C <AmiBlitz3.ab3@20563>         CMP.w $4(A1),D1
00030010 <AmiBlitz3.ab3@20564>         BCC.w 'next
00030014 <AmiBlitz3.ab3@20565>           MOVE.w $4(A1),D1
00030016 <AmiBlitz3.ab3@20566>           MOVEA.l A1,A2
00030018 <AmiBlitz3.ab3@20569>     MOVEA.l (A1),A1
0003001C <AmiBlitz3.ab3@20570>  BRA.w 'loop
0003001E <AmiBlitz3.ab3@20573>   MOVE.w D1,D7
00030020 <AmiBlitz3.ab3@20574> RTS
00030022 <AmiBlitz3.ab3@20582>   MOVEQ.l #-$01,D1
00030028 <AmiBlitz3.ab3@20583>   MOVEA.l libpointer,A1
0003002C <AmiBlitz3.ab3@20586>     CMPA.w #$0,A1
00030030 <AmiBlitz3.ab3@20587>      BEQ.w 'done
00030034 <AmiBlitz3.ab3@20588>     CMP.w $4(A1),D7
00030038 <AmiBlitz3.ab3@20589>      BCC.w 'next
0003003C <AmiBlitz3.ab3@20590>     CMP.w $4(A1),D1
00030040 <AmiBlitz3.ab3@20591>      BLS.w 'next
00030044 <AmiBlitz3.ab3@20592>     MOVE.w $4(A1),D1
00030046 <AmiBlitz3.ab3@20593>     MOVEA.l A1,A2
00030048 <AmiBlitz3.ab3@20596>     MOVEA.l (A1),A1
0003004C <AmiBlitz3.ab3@20597> BRA.w 'loop
0003004E <AmiBlitz3.ab3@20600>   MOVE.w D1,D7
00030052 <AmiBlitz3.ab3@20601>   CMP.w #-$1,D1
00030054 <AmiBlitz3.ab3@20602> RTS
0003005A <AmiBlitz3.ab3@20610>   ADDQ.w #1,globalvarpointer
00030062 <AmiBlitz3.ab3@20611>   BCLR #$0,globalvarpointer+1
00030064 <AmiBlitz3.ab3@20612>   MOVEQ.l #$00,D7
00030068 <AmiBlitz3.ab3@20615>     BSR.w findlolib
0003006C <AmiBlitz3.ab3@20616>     BEQ.w 'azdone
00030070 <AmiBlitz3.ab3@20617>     TST.w $C(A2)
00030074 <AmiBlitz3.ab3@20618>     BPL.w 'loop
00030076 <AmiBlitz3.ab3@20621>     MOVEA.l A2,A1
0003007A <AmiBlitz3.ab3@20622>     ADDA.l $12(A1),A1
0003007E <AmiBlitz3.ab3@20623>     TST.w -$2(A1)
00030082 <AmiBlitz3.ab3@20624>     BEQ.w 'nomax
00030086 <AmiBlitz3.ab3@20628>     MOVE.l -$A(A1),D1
0003008A <AmiBlitz3.ab3@20629>     LEA $6(A2,D1.L),A3
0003008C <AmiBlitz3.ab3@20632>       TST.w (A3)+
00030090 <AmiBlitz3.ab3@20633>       BEQ.w 'plopf
00030092 <AmiBlitz3.ab3@20634>         ADDQ.w #2,A3
00030096 <AmiBlitz3.ab3@20635>  BRA.w 'plop
0003009A <AmiBlitz3.ab3@20638>     TST.l $4(A3)
0003009E <AmiBlitz3.ab3@20639>     BEQ.w 'nomax
000300A2 <AmiBlitz3.ab3@20643>       MOVE.w freemax(PC),D1    ;move.w #x,-(a7)
000300A6 <AmiBlitz3.ab3@20644>       BSR.w writeword
000300AA <AmiBlitz3.ab3@20645>       MOVE.w -$4(A1),D1
000300AE <AmiBlitz3.ab3@20646>       BSR.w writeword          ;x (max)
000300B4 <AmiBlitz3.ab3@20647>       MOVE.l free,D1
000300B8 <AmiBlitz3.ab3@20648>       MOVE.w -$6(A1),D1
000300BC <AmiBlitz3.ab3@20649>       BSR.w writelong          ;move.l x(a5),a3
000300C2 <AmiBlitz3.ab3@20651>       MOVE.l destpointer,-(A7)
000300C4 <AmiBlitz3.ab3@20652>       MOVEQ.l #$01,D1
000300C8 <AmiBlitz3.ab3@20653>       MOVE.w -$2(A1),D2
000300CA <AmiBlitz3.ab3@20654>       LSL.w D2,D1
000300CC <AmiBlitz3.ab3@20655>       MOVE.w D1,-(A7)
000300D0 <AmiBlitz3.ab3@20656>       MOVE.l -$A(A1),D1
000300D4 <AmiBlitz3.ab3@20657>       BSR.w Amakelibsub
000300D8 <AmiBlitz3.ab3@20658>       MOVE.w freemax3(PC),D1
000300DC <AmiBlitz3.ab3@20659>       BSR.w writeword          ;lea x(a3),a3
000300DE <AmiBlitz3.ab3@20660>       MOVE.w (A7)+,D1
000300E2 <AmiBlitz3.ab3@20661>       BSR.w writeword
000300E6 <AmiBlitz3.ab3@20662>       MOVE.l freemax2(PC),D1
000300EA <AmiBlitz3.ab3@20663>       BSR.w writelong
000300EC <AmiBlitz3.ab3@20664>       MOVE.l (A7)+,D1
000300F2 <AmiBlitz3.ab3@20665>       SUB.l destpointer,D1
000300F6 <AmiBlitz3.ab3@20666>       BSR.w writeword
000300FA <AmiBlitz3.ab3@20667>       MOVE.w freemax4(PC),D1
000300FE <AmiBlitz3.ab3@20668>       BSR.w writeword
00030102 <AmiBlitz3.ab3@20671>     MOVE.l $1C(A2),D1
00030106 <AmiBlitz3.ab3@20672>     BEQ.w 'loop
0003010A <AmiBlitz3.ab3@20676>     MOVE.w $4(A2),D1
0003010E <AmiBlitz3.ab3@20677>     CMP.w #-$2,D1              ; was #allocvars
00030112 <AmiBlitz3.ab3@20678>     BNE.w 'notvfin
00030116 <AmiBlitz3.ab3@20679>       BSR.w makevsize
0003011A <AmiBlitz3.ab3@20680>  BRA.w 'more
0003011E <AmiBlitz3.ab3@20683>     CMP.w #-$12D,D1            ; was #65235
00030122 <AmiBlitz3.ab3@20684>     BNE.w 'more
00030126 <AmiBlitz3.ab3@20685>       BSR.w makessize
0003012A <AmiBlitz3.ab3@20686>  BRA.w 'more
0003012E <AmiBlitz3.ab3@20690>     MOVE.l $1C(A2),D1
00030136 <AmiBlitz3.ab3@20691>     MOVE.w #$FFFF,lasta6       ; was -1
0003013A <AmiBlitz3.ab3@20692>     BSR.w Amakelibsub
0003013E <AmiBlitz3.ab3@20693>  BRA.w 'loop
00030140 <AmiBlitz3.ab3@20696> RTS
00030144 <AmiBlitz3.ab3@20700> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
00030146 <AmiBlitz3.ab3@20702> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0003014A <AmiBlitz3.ab3@20703>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0003014C <AmiBlitz3.ab3@20704> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
00030150 <AmiBlitz3.ab3@20705> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
00030156 <AmiBlitz3.ab3@20710>   TST.b debugmode
0003015A <AmiBlitz3.ab3@20711>    BEQ.b 'skip
00030160 <AmiBlitz3.ab3@20712>   TST.w debugversion
00030164 <AmiBlitz3.ab3@20713>    BNE.b 'skip
00030168 <AmiBlitz3.ab3@20714>   MOVE.w #$C308,D1
0003016C <AmiBlitz3.ab3@20715>  BRA.w Atokejsr
0003016E <AmiBlitz3.ab3@20718> RTS
00030176 <AmiBlitz3.ab3@20722>   MOVE.w #$FFFF,lasta6
0003017A <AmiBlitz3.ab3@20727>   MOVEM.l D0-d7/A0-a6,-(A7)
00030182 <AmiBlitz3.ab3@20728>   MOVE.b #1,nostringopt
00030188 <AmiBlitz3.ab3@20729>   JSR searchinstr
0003018A <AmiBlitz3.ab3@20730>   MOVE.l A3,D1
0003018C <AmiBlitz3.ab3@20731>   SUB.l A2,D1
00030190 <AmiBlitz3.ab3@20732>   BSR.w Amakelibsub
00030194 <AmiBlitz3.ab3@20733>   MOVEM.l (A7)+,d0-d7/a0-a6
00030196 <AmiBlitz3.ab3@20734> RTS
0003019C <AmiBlitz3.ab3@20741>   MOVE.l libisat,-(A7)                                   ;library write
000301A2 <AmiBlitz3.ab3@20742>   MOVE.l A2,libisat
000301A4 <AmiBlitz3.ab3@20744>   MOVEA.l A1,A2
000301A6 <AmiBlitz3.ab3@20745>   MOVE.w (A2)+,D1
000301AC <AmiBlitz3.ab3@20746>   MOVE.l a2,lastinstructionaddr
000301B0 <AmiBlitz3.ab3@20747>   ANDI.w #$FF,D1
000301B2 <AmiBlitz3.ab3@20748>   ADDA.w D1,A2
000301B4 <AmiBlitz3.ab3@20749>   EXG.l D0,A2
000301B6 <AmiBlitz3.ab3@20750>   ADDQ.l #1,D0
000301BA <AmiBlitz3.ab3@20751>   BCLR #$0,D0
000301BC <AmiBlitz3.ab3@20752>   EXG.l D0,A2
000301C0 <AmiBlitz3.ab3@20753> BRA.w makelsub2
000301C6 <AmiBlitz3.ab3@20757>   MOVE.l libisat,-(A7)
000301CC <AmiBlitz3.ab3@20758>   MOVE.l A2,libisat
000301CE <AmiBlitz3.ab3@20759>   MOVEA.l A3,A2
000301D2 <AmiBlitz3.ab3@20760> BRA.w makelsub2
000301D4 <AmiBlitz3.ab3@20764>   MOVE.l a1,-(a7)
000301D6 <AmiBlitz3.ab3@20767>   MOVE.l d0,a0
000301DA <AmiBlitz3.ab3@20768>   MOVE.l $a(a0),d0
000301DC <AmiBlitz3.ab3@20769>   MOVE.l d0,a1
000301E4 <AmiBlitz3.ab3@20770>   CMP.l #8,4(a1)
000301E8 <AmiBlitz3.ab3@20771>   BLE 'norec
000301EA <AmiBlitz3.ab3@20772>   MOVE.l a0,-(a7)
000301F0 <AmiBlitz3.ab3@20773>   MOVE.l typebase,-(a7)
000301F2 <AmiBlitz3.ab3@20774>   MOVEQ #0,d0
000301F6 <AmiBlitz3.ab3@20775>   MOVE.w 4(a0),d0
000301FC <AmiBlitz3.ab3@20776>   ADD.l d0,typebase
00030200 <AmiBlitz3.ab3@20777>   MOVE.l $4(a1),d0
00030204 <AmiBlitz3.ab3@20778>   BSR scantype
0003020A <AmiBlitz3.ab3@20779>   MOVE.l (a7)+,typebase
0003020C <AmiBlitz3.ab3@20780>   MOVE.l (a7)+,a0
00030212 <AmiBlitz3.ab3@20783>   CMP.l #newtype_string,d0
00030216 <AmiBlitz3.ab3@20784>   BNE 'nostring
0003021C <AmiBlitz3.ab3@20785>   ADDQ #2,a2offset
00030222 <AmiBlitz3.ab3@20786>   MOVE.l #$3f3c0000,d1
00030224 <AmiBlitz3.ab3@20787>   MOVEQ #0,d0
00030228 <AmiBlitz3.ab3@20788>   MOVE.w 4(a0),d0
0003022E <AmiBlitz3.ab3@20789>   ADD.l typebase,d0
00030230 <AmiBlitz3.ab3@20790>   MOVE.w d0,d1
00030234 <AmiBlitz3.ab3@20791>   BSR writelong
0003023A <AmiBlitz3.ab3@20792>   TST.b debugmode
0003023E <AmiBlitz3.ab3@20793>   BEQ 'l1a
00030240 <AmiBlitz3.ab3@20794>   MOVE.l d1,-(a7)
00030246 <AmiBlitz3.ab3@20795>   MOVE.l #$c308,d1
0003024C <AmiBlitz3.ab3@20796>   JSR Atokejsr
0003024E <AmiBlitz3.ab3@20797>   MOVE.l (a7)+,d1
00030252 <AmiBlitz3.ab3@20800>   TST.w 8(a0)
00030256 <AmiBlitz3.ab3@20801>   BEQ 'nostring
0003025A <AmiBlitz3.ab3@20802>   MOVEM.l d2/d3,-(a7)
0003025C <AmiBlitz3.ab3@20803>   MOVE.l d1,d2
0003025E <AmiBlitz3.ab3@20804>   MOVEQ #0,d3
00030262 <AmiBlitz3.ab3@20805>   MOVE.w 8(a0),d3
00030264 <AmiBlitz3.ab3@20806>   SUBQ.l #1,d3
00030268 <AmiBlitz3.ab3@20807>   BEQ 'nostring2
0003026A <AmiBlitz3.ab3@20810>   ADDQ.l #4,d2
0003026C <AmiBlitz3.ab3@20811>   MOVE.l d2,d1
00030270 <AmiBlitz3.ab3@20812>   BSR writelong
00030276 <AmiBlitz3.ab3@20813>   TST.b debugmode
0003027A <AmiBlitz3.ab3@20814>   BEQ 'l1
00030280 <AmiBlitz3.ab3@20815>   MOVE.l #$c308,d1
00030286 <AmiBlitz3.ab3@20816>   JSR Atokejsr
0003028C <AmiBlitz3.ab3@20819>   ADDQ #2,a2offset
0003028E <AmiBlitz3.ab3@20820>   SUBQ.l #1,d3
00030292 <AmiBlitz3.ab3@20821>   BNE 'loop
00030296 <AmiBlitz3.ab3@20824>   MOVEM.l (a7)+,d2/d3
00030298 <AmiBlitz3.ab3@20827>   MOVE.l (a0),d0
0003029C <AmiBlitz3.ab3@20828>   BNE 'more
0003029E <AmiBlitz3.ab3@20829>   MOVE.l (a7)+,a1
000302A0 <AmiBlitz3.ab3@20830> RTS
000302A4 <AmiBlitz3.ab3@20833> libisat:   Ds.l 1
000302AA <AmiBlitz3.ab3@20839>   MOVE.l libisat,-(A7)                                   
000302B0 <AmiBlitz3.ab3@20840>   MOVE.l A2,libisat
000302B4 <AmiBlitz3.ab3@20841>   LEA $6(A2,D1.L),A2
000302BC <AmiBlitz3.ab3@20846>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
000302C0 <AmiBlitz3.ab3@20847>   BEQ 'dowritevar
000302C8 <AmiBlitz3.ab3@20848>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
000302CC <AmiBlitz3.ab3@20849>   BEQ 'dowritevar
000302D4 <AmiBlitz3.ab3@20850>   CMP.l #$3e175265,$1c(a2)
000302D8 <AmiBlitz3.ab3@20851>   BEQ 'dowritevar
000302E0 <AmiBlitz3.ab3@20852>   CMP.l #$3e165772,$1c(a2)
000302E4 <AmiBlitz3.ab3@20853>   BNE 'nowritef
000302E8 <AmiBlitz3.ab3@20856>   MOVEM.l a0-a2/d2,-(a7)
000302EA <AmiBlitz3.ab3@20857>   MOVEQ #0,d1
000302F4 <AmiBlitz3.ab3@20858>   MOVE.l #0,typebase
000302F8 <AmiBlitz3.ab3@20859>   MOVE.l $a(a3),a0
000302FC <AmiBlitz3.ab3@20860>   MOVE.l $4(a0),d0
00030302 <AmiBlitz3.ab3@20861>   CMP.l #8,d0
00030306 <AmiBlitz3.ab3@20862>   BLE 'notype
0003030A <AmiBlitz3.ab3@20863>   BSR scantype
00030310 <AmiBlitz3.ab3@20866>   MOVE.l #$3f3c0000,d1
00030316 <AmiBlitz3.ab3@20867>   MOVE.w a2offset,d1
0003031A <AmiBlitz3.ab3@20868>   BSR writelong
00030320 <AmiBlitz3.ab3@20869>   MOVE.l #$3f3c0000,d1
00030324 <AmiBlitz3.ab3@20870>   MOVE.l $a(a3),a0
00030328 <AmiBlitz3.ab3@20871>   MOVE.w 8(a0),d1
0003032C <AmiBlitz3.ab3@20872>   BSR writelong
00030332 <AmiBlitz3.ab3@20873>   MOVE.l #$3f3cab12,d1
00030336 <AmiBlitz3.ab3@20874>   BSR writelong
0003033C <AmiBlitz3.ab3@20875>   ADDQ.w #6,a2offset
00030340 <AmiBlitz3.ab3@20876>   MOVEM.l (a7)+,a0-a2/d2
00030346 <AmiBlitz3.ab3@20879>   TST.b fpu
0003034A <AmiBlitz3.ab3@20880>   BEQ 'nofpu2
00030352 <AmiBlitz3.ab3@20881>   CMP.l #$496e7400,$1a(a2)
00030356 <AmiBlitz3.ab3@20882>   BNE 'noint
00030358 <AmiBlitz3.ab3@20883>   MOVEQ #0,d1
0003035E <AmiBlitz3.ab3@20884>   SUBQ.l #8,destpointer                                    ;fpu int
00030364 <AmiBlitz3.ab3@20885>   CLR.w a2offset
00030368 <AmiBlitz3.ab3@20886>   CMP.b #2,d2
0003036C <AmiBlitz3.ab3@20887>   BGT 'noword
00030370 <AmiBlitz3.ab3@20888>   MOVE.w #$48c0,d1
00030376 <AmiBlitz3.ab3@20889>   OR.w regnumstore,d1
0003037A <AmiBlitz3.ab3@20890>   BSR writeword
0003037E <AmiBlitz3.ab3@20891>  BRA 'exit2
00030382 <AmiBlitz3.ab3@20894>    CMP.b #3,d2
00030386 <AmiBlitz3.ab3@20895>         BNE 'nolong
0003038A <AmiBlitz3.ab3@20896>  BRA 'exit2
0003038E <AmiBlitz3.ab3@20899>    CMP.b #4,d2
00030392 <AmiBlitz3.ab3@20900>         BNE 'noquick
00030396 <AmiBlitz3.ab3@20901>         MOVE.w #$e080,d1
0003039C <AmiBlitz3.ab3@20902>         OR.w regnumstore,d1
000303A0 <AmiBlitz3.ab3@20903>         BSR writeword
000303A4 <AmiBlitz3.ab3@20904>         MOVE.w #$e080,d1
000303AA <AmiBlitz3.ab3@20905>         OR.w regnumstore,d1
000303AE <AmiBlitz3.ab3@20906>         BSR writeword
000303B2 <AmiBlitz3.ab3@20907>  BRA 'exit2
000303B4 <AmiBlitz3.ab3@20910>         MOVEQ #0,d0
000303B6 <AmiBlitz3.ab3@20911>         MOVEQ #0,d1
000303BC <AmiBlitz3.ab3@20912>         MOVE.w regnumstore,d0
000303BE <AmiBlitz3.ab3@20913>         ASL.l #7,d0
000303C4 <AmiBlitz3.ab3@20914>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
000303C6 <AmiBlitz3.ab3@20915>         OR.l d0,d1
000303CC <AmiBlitz3.ab3@20917>         MOVE.l #$3f000000,d1
000303CE <AmiBlitz3.ab3@20919>         MOVEQ #0,d0
000303D0 <AmiBlitz3.ab3@20920>         MOVEQ #0,d1
000303D6 <AmiBlitz3.ab3@20921>         MOVE.w regnumstore,d0
000303D8 <AmiBlitz3.ab3@20922>         ASL.l #7,d0
000303DA <AmiBlitz3.ab3@20923>         MOVE.l d0,d1
000303E0 <AmiBlitz3.ab3@20924>         OR.l #$f2000003,d1                                 ;fintrz fpx
000303E2 <AmiBlitz3.ab3@20925>         ASL.l #3,d0
000303E4 <AmiBlitz3.ab3@20926>         OR.l d0,d1
000303E8 <AmiBlitz3.ab3@20927>         BSR writelong
000303EA <AmiBlitz3.ab3@20928>         MOVEQ #0,d0
000303F0 <AmiBlitz3.ab3@20929>         MOVE.w regnumstore,d0
000303F2 <AmiBlitz3.ab3@20930>         ASL.l #7,d0
000303F8 <AmiBlitz3.ab3@20931>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
000303FA <AmiBlitz3.ab3@20932>         OR.l d0,d1
000303FC <AmiBlitz3.ab3@20933>         ASL.l #1,d0
000303FE <AmiBlitz3.ab3@20934>         ASL.l #8,d0
00030400 <AmiBlitz3.ab3@20935>         OR.l d0,d1
00030404 <AmiBlitz3.ab3@20936>  BRA 'exit
0003040A <AmiBlitz3.ab3@20939>   CMP.w #$3c01,24(a2)
0003040E <AmiBlitz3.ab3@20940>   BNE 'noval
00030410 <AmiBlitz3.ab3@20941>   MOVE.l a2,-(a7)
00030414 <AmiBlitz3.ab3@20942>   BSR.w makelsub3
00030416 <AmiBlitz3.ab3@20943>   MOVE.l (a7)+,a2
0003041A <AmiBlitz3.ab3@20944>  BRA 'exit2
00030422 <AmiBlitz3.ab3@20961>   CMP.l #$41627300,$1a(a2)
00030426 <AmiBlitz3.ab3@20962>   BNE 'noabs
00030428 <AmiBlitz3.ab3@20963>   MOVEQ #0,d1
0003042E <AmiBlitz3.ab3@20964>   MOVE.w regnumstore,d1
00030430 <AmiBlitz3.ab3@20965>   MOVE.w d1,d0
00030432 <AmiBlitz3.ab3@20966>   ASL.w #7,d1
00030434 <AmiBlitz3.ab3@20967>   ASL.w #8,d0
00030436 <AmiBlitz3.ab3@20968>   ASL.w #2,d0
00030438 <AmiBlitz3.ab3@20969>   OR.w d0,d1
0003043E <AmiBlitz3.ab3@20970>   SUBQ.l #8,destpointer                                    ;fpu abs
00030442 <AmiBlitz3.ab3@20971>   MOVEM.l d3/d1,-(a7)
00030446 <AmiBlitz3.ab3@20972>   MOVE.w #5,d3
00030448 <AmiBlitz3.ab3@20973>   EXG d2,d3
0003044E <AmiBlitz3.ab3@20974>   MOVE.w regnum,-(a7)
00030458 <AmiBlitz3.ab3@20975>   MOVE.w regnumstore,regnum
0003045C <AmiBlitz3.ab3@20976>   BSR writeconvertcode
00030462 <AmiBlitz3.ab3@20977>   MOVE.w (a7)+,regnum
00030464 <AmiBlitz3.ab3@20978>   EXG d2,d3
00030468 <AmiBlitz3.ab3@20979>   MOVEM.l (a7)+,d3/d1
0003046E <AmiBlitz3.ab3@20980>   OR.l #$f2000018,d1
00030474 <AmiBlitz3.ab3@20981>   CLR.w a2offset
00030478 <AmiBlitz3.ab3@20982>  BRA 'exit
0003047C <AmiBlitz3.ab3@20985>   CMP.b #5,d2
00030480 <AmiBlitz3.ab3@20986>   BNE 'nofpu2
00030484 <AmiBlitz3.ab3@20987>   MOVE.b 24(a2),d0
00030488 <AmiBlitz3.ab3@20988>   CMP.b #$60,d0                                            ;nolib $edxx
0003048C <AmiBlitz3.ab3@20989>   BNE 'nofpu
0003048E <AmiBlitz3.ab3@20990>   MOVEQ #0,d1
00030494 <AmiBlitz3.ab3@20991>   MOVE.w regnumstore,d1
00030496 <AmiBlitz3.ab3@20992>   MOVE.w d1,d0
00030498 <AmiBlitz3.ab3@20993>   ASL.w #7,d1
0003049A <AmiBlitz3.ab3@20994>   ASL.w #8,d0
0003049C <AmiBlitz3.ab3@20995>   ASL.w #2,d0
0003049E <AmiBlitz3.ab3@20996>   OR.w d0,d1
000304A2 <AmiBlitz3.ab3@20997>   MOVE.b 25(a2),d0
000304A6 <AmiBlitz3.ab3@20998>   CMP.b #5,d0
000304AA <AmiBlitz3.ab3@20999>   BNE 'nocos
000304B0 <AmiBlitz3.ab3@21000>   OR.l #$f200001d,d1                                       ;fpu cos
000304B4 <AmiBlitz3.ab3@21001>  BRA 'exit
000304B8 <AmiBlitz3.ab3@21004>   CMP.b #$c,d0
000304BC <AmiBlitz3.ab3@21005>   BNE 'nosqr
000304C2 <AmiBlitz3.ab3@21006>   OR.l #$f2000004,d1                                       ;fpu sqr
000304C6 <AmiBlitz3.ab3@21007>  BRA 'exit
000304CA <AmiBlitz3.ab3@21010>   CMP.b #$d,d0
000304CE <AmiBlitz3.ab3@21011>   BNE 'notan
000304D4 <AmiBlitz3.ab3@21012>   OR.l #$f200000f,d1                                       ;fpu tan
000304D8 <AmiBlitz3.ab3@21013>  BRA 'exit
000304DC <AmiBlitz3.ab3@21016>   CMP.b #$a,d0
000304E0 <AmiBlitz3.ab3@21017>   BNE 'nosin
000304E6 <AmiBlitz3.ab3@21018>   OR.l #$f200000e,d1                                       ;fpu sin
000304EA <AmiBlitz3.ab3@21019>  BRA 'exit
000304EE <AmiBlitz3.ab3@21022>   CMP.b #$3,d0
000304F2 <AmiBlitz3.ab3@21023>   BNE 'noasin
000304F8 <AmiBlitz3.ab3@21024>   OR.l #$f200000c,d1                                       ;fpu asin
000304FC <AmiBlitz3.ab3@21025>  BRA 'exit
00030500 <AmiBlitz3.ab3@21028>   CMP.b #$2,d0
00030504 <AmiBlitz3.ab3@21029>   BNE 'noacos
0003050A <AmiBlitz3.ab3@21030>   OR.l #$f200001c,d1                                       ;fpu acos
0003050E <AmiBlitz3.ab3@21031>  BRA 'exit
00030512 <AmiBlitz3.ab3@21034>   CMP.b #$4,d0
00030516 <AmiBlitz3.ab3@21035>   BNE 'noatan
0003051C <AmiBlitz3.ab3@21036>   OR.l #$f200000a,d1                                       ;fpu atan
00030520 <AmiBlitz3.ab3@21037>  BRA 'exit
00030524 <AmiBlitz3.ab3@21040>   CMP.b #$e,d0
00030528 <AmiBlitz3.ab3@21041>   BNE 'nohtan
0003052E <AmiBlitz3.ab3@21042>   OR.l #$f2000009,d1                                       ;fpu htan
00030532 <AmiBlitz3.ab3@21043>  BRA 'exit
00030536 <AmiBlitz3.ab3@21046>   CMP.b #$6,d0
0003053A <AmiBlitz3.ab3@21047>   BNE 'nohcos
00030540 <AmiBlitz3.ab3@21048>   OR.l #$f2000019,d1                                       ;fpu hcos
00030544 <AmiBlitz3.ab3@21049>  BRA 'exit
00030548 <AmiBlitz3.ab3@21052>   CMP.b #$b,d0
0003054C <AmiBlitz3.ab3@21053>   BNE 'nohsin
00030552 <AmiBlitz3.ab3@21054>   OR.l #$f2000002,d1                                       ;fpu hsin
00030556 <AmiBlitz3.ab3@21055>  BRA 'exit
0003055A <AmiBlitz3.ab3@21058>   CMP.b #$9,d0
0003055E <AmiBlitz3.ab3@21059>   BNE 'nolog
00030564 <AmiBlitz3.ab3@21060>   OR.l #$f2000014,d1                                       ;fpu log
00030568 <AmiBlitz3.ab3@21061>  BRA 'exit
0003056C <AmiBlitz3.ab3@21064>   CMP.b #$8,d0
00030570 <AmiBlitz3.ab3@21065>   BNE 'nolog10
00030576 <AmiBlitz3.ab3@21066>   OR.l #$f2000015,d1                                       ;fpu log10
0003057A <AmiBlitz3.ab3@21067>  BRA 'exit
0003057E <AmiBlitz3.ab3@21070>   CMP.b #$7,d0
00030582 <AmiBlitz3.ab3@21071>   BNE 'noexp
00030588 <AmiBlitz3.ab3@21072>   OR.l #$f2000010,d1                                       ;fpu exp
0003058C <AmiBlitz3.ab3@21073>  BRA 'exit
00030592 <AmiBlitz3.ab3@21076>   LEA fpuerr,a0
00030594 <AmiBlitz3.ab3@21077>   MOVE.l a0,-(a7)
0003059A <AmiBlitz3.ab3@21078>  JMP handle_compileerror
0003059E <AmiBlitz3.ab3@21082>   CMP.b #$3c,d0
000305A2 <AmiBlitz3.ab3@21083>   BNE 'nofpu2
000305A4 <AmiBlitz3.ab3@21084>   MOVEQ #0,d1
000305AA <AmiBlitz3.ab3@21085>       MOVE.w regnumstore,d1
000305AC <AmiBlitz3.ab3@21086>       MOVE.w d1,d0
000305AE <AmiBlitz3.ab3@21087>       ASL.w #7,d1
000305B0 <AmiBlitz3.ab3@21088>       ASL.w #8,d0
000305B2 <AmiBlitz3.ab3@21089>       ASL.w #2,d0
000305B4 <AmiBlitz3.ab3@21090>       OR.w d0,d1
000305BA <AmiBlitz3.ab3@21091>       CMP.b #$03,25(a2)
000305BE <AmiBlitz3.ab3@21092>       BNE 'nosgn
000305C4 <AmiBlitz3.ab3@21095>       SUBQ.l #8,destpointer                                ;fpu sgn
000305CA <AmiBlitz3.ab3@21096>         OR.l #$f200003a,d1
000305CE <AmiBlitz3.ab3@21097>         BSR writelong
000305D4 <AmiBlitz3.ab3@21098>         CLR.w a2offset
000305DA <AmiBlitz3.ab3@21099>          MOVE.l #$F28E0006,d1
000305DE <AmiBlitz3.ab3@21100>          BSR writelong
000305E4 <AmiBlitz3.ab3@21101>   MOVE.l #$7000600a,d1
000305E8 <AmiBlitz3.ab3@21102>   BSR writelong
000305EE <AmiBlitz3.ab3@21103>   MOVE.l #$70014840,d1
000305F2 <AmiBlitz3.ab3@21104>   BSR writelong
000305F8 <AmiBlitz3.ab3@21105>   MOVE.l #$F292,d1
000305FC <AmiBlitz3.ab3@21106>   BSR writeword
00030602 <AmiBlitz3.ab3@21107>   MOVE.l #$000470FF,d1
00030606 <AmiBlitz3.ab3@21108>  BRA 'exit
0003060E <AmiBlitz3.ab3@21111>   CMP.l #"Frac",$1a(a2)
00030612 <AmiBlitz3.ab3@21112>   BNE 'nofrac
00030618 <AmiBlitz3.ab3@21113>  JMP notwork
0003061C <AmiBlitz3.ab3@21154>  BRA 'exit
00030620 <AmiBlitz3.ab3@21159>   BSR.w makelsub3                                          ;write lib code
00030626 <AmiBlitz3.ab3@21160>   MOVE.l (A7)+,libisat
00030628 <AmiBlitz3.ab3@21161>  RTS
0003062C <AmiBlitz3.ab3@21165>   BSR writelong
00030632 <AmiBlitz3.ab3@21168>   MOVE.l (A7)+,libisat
00030634 <AmiBlitz3.ab3@21169> RTS
00030638 <AmiBlitz3.ab3@21173>   BSR.w fetchregs
0003063E <AmiBlitz3.ab3@21175>   TST.b debugmode
00030642 <AmiBlitz3.ab3@21176>    BEQ.w 'norerr
00030644 <AmiBlitz3.ab3@21178>   MOVE.l (A2),D1
00030648 <AmiBlitz3.ab3@21179>   OR.l $8(A2),D1
0003064C <AmiBlitz3.ab3@21180>   BCLR #$0,D1
0003064E <AmiBlitz3.ab3@21181>   TST.l D1
00030652 <AmiBlitz3.ab3@21182>    BEQ.w 'norerr
00030654 <AmiBlitz3.ab3@21184>   MOVE.l (A2)+,D1
00030658 <AmiBlitz3.ab3@21185>   BTST #$0,D1
0003065C <AmiBlitz3.ab3@21186>    BEQ.w 'skiptt
00030662 <AmiBlitz3.ab3@21187>   TST.w blitzmode
00030666 <AmiBlitz3.ab3@21188>    BPL.w blitzerr
0003066C <AmiBlitz3.ab3@21189>   TST.b debugmode
00030670 <AmiBlitz3.ab3@21190>    BEQ.w 'skiptt2
00030672 <AmiBlitz3.ab3@21191>   MOVE.l D1,-(A7)
00030676 <AmiBlitz3.ab3@21192>   MOVE.w #$C311,D1   ; was #inblitz,
0003067A <AmiBlitz3.ab3@21193>    BSR.w makebtst
0003067C <AmiBlitz3.ab3@21194>   MOVE.l (A7)+,D1
00030680 <AmiBlitz3.ab3@21197>   BCLR #$0,D1
00030682 <AmiBlitz3.ab3@21200>   TST.l D1
00030686 <AmiBlitz3.ab3@21202>    BSR.w doajsr
00030688 <AmiBlitz3.ab3@21203>   MOVE.l (A2)+,D1
0003068C <AmiBlitz3.ab3@21204>    BSR.w doajsrrout
0003068E <AmiBlitz3.ab3@21205>   MOVE.l (A2)+,D1
00030692 <AmiBlitz3.ab3@21206>    BSR.w doajsr
00030696 <AmiBlitz3.ab3@21207>  BRA.w 'more
0003069C <AmiBlitz3.ab3@21210>   BTST #$0,$3(A2)
000306A0 <AmiBlitz3.ab3@21211>    BEQ.w 'penis
000306A4 <AmiBlitz3.ab3@21215>   MOVE.w blitzmode(PC),D1
000306A8 <AmiBlitz3.ab3@21216>    BPL.w blitzerr
000306AC <AmiBlitz3.ab3@21219>   MOVE.l $4(A2),D1
000306B0 <AmiBlitz3.ab3@21220>    BSR.w doajsrrout
000306B6 <AmiBlitz3.ab3@21223>   MOVEA.l libisat,A2
000306B8 <AmiBlitz3.ab3@21224> RTS
000306BC <AmiBlitz3.ab3@21231>   BTST #$0,D1
000306C0 <AmiBlitz3.ab3@21232>    BEQ.w 'doajsr
000306C6 <AmiBlitz3.ab3@21233>   TST.w blitzmode
000306CA <AmiBlitz3.ab3@21234>    BMI.w amigaerr
000306D0 <AmiBlitz3.ab3@21235>   TST.b debugmode
000306D4 <AmiBlitz3.ab3@21236>    BEQ.w 'doajsr2      
000306D6 <AmiBlitz3.ab3@21237>   MOVE.l D1,-(A7)
000306DA <AmiBlitz3.ab3@21238>   MOVE.w #$C312,D1     ; #inamiga,
000306DE <AmiBlitz3.ab3@21239>    BSR.w makebtst
000306E0 <AmiBlitz3.ab3@21240>   MOVE.l (A7)+,D1
000306E4 <AmiBlitz3.ab3@21243>   BCLR #$0,D1
000306E6 <AmiBlitz3.ab3@21246>   TST.l D1
000306EA <AmiBlitz3.ab3@21249>    BEQ.w 'skip
000306EC <AmiBlitz3.ab3@21250>   MOVE.l A1,-(A7)
000306F0 <AmiBlitz3.ab3@21251>    BSR.w doajsr2
000306F2 <AmiBlitz3.ab3@21252>   MOVEA.l (A7)+,A1
000306F4 <AmiBlitz3.ab3@21255> RTS
000306FA <AmiBlitz3.ab3@21259>   MOVEA.l libisat,A0
00030700 <AmiBlitz3.ab3@21260>   TST.w cfetchmode
00030704 <AmiBlitz3.ab3@21261>    BEQ.w 'nfetch
00030706 <AmiBlitz3.ab3@21262>   ADD.l A0,D1
00030708 <AmiBlitz3.ab3@21263>   MOVE.l D1,-(A7)
0003070C <AmiBlitz3.ab3@21264>   MOVE.w #$4EB9,D1
00030710 <AmiBlitz3.ab3@21265>    BSR.w writeword
00030712 <AmiBlitz3.ab3@21266>   MOVE.l (A7)+,D1
00030716 <AmiBlitz3.ab3@21267>  BRA.w writelong
0003071A <AmiBlitz3.ab3@21274>   LEA $0(A0,D1.L),A1
00030720 <AmiBlitz3.ab3@21275>   CLR.w inline
00030724 <AmiBlitz3.ab3@21278>   CMPI.b #$A0,(A1)+
00030728 <AmiBlitz3.ab3@21279>    BNE.w 'ugly
0003072A <AmiBlitz3.ab3@21280>   TST.b (A1)+
0003072E <AmiBlitz3.ab3@21281>    BEQ.w 'iszero
00030734 <AmiBlitz3.ab3@21282>   CMPI.b #$1,-$1(A1)
00030738 <AmiBlitz3.ab3@21283>    BEQ.w 'isone
0003073E <AmiBlitz3.ab3@21287>   MOVE.w (A1)+,inline
00030740 <AmiBlitz3.ab3@21288>   ADDQ.l #4,D1
00030744 <AmiBlitz3.ab3@21289>  BRA.w 'cute
0003074A <AmiBlitz3.ab3@21294>   TST.w blitzmode
0003074E <AmiBlitz3.ab3@21295>    BPL.w 'inamiga
00030754 <AmiBlitz3.ab3@21297>   TST.b debugmode
00030758 <AmiBlitz3.ab3@21298>    BEQ.w 'nobrerr
0003075C <AmiBlitz3.ab3@21299>   MOVE.w #$C311,D1       ; was #inblitz,
00030760 <AmiBlitz3.ab3@21300>    BSR.w makebtst
00030762 <AmiBlitz3.ab3@21303>   MOVE.l (A1)+,D1
00030766 <AmiBlitz3.ab3@21304>   LEA $0(A0,D1.L),A1
0003076A <AmiBlitz3.ab3@21305>  BRA.w 'cute
00030770 <AmiBlitz3.ab3@21308>   TST.b debugmode
00030774 <AmiBlitz3.ab3@21309>    BEQ.w 'noarerr        
00030776 <AmiBlitz3.ab3@21310>   MOVE.l D1,-(A7)
0003077A <AmiBlitz3.ab3@21311>   MOVE.w #$C312,D1       ; was #inamiga,
0003077E <AmiBlitz3.ab3@21312>    BSR.w makebtst
00030780 <AmiBlitz3.ab3@21313>   MOVE.l (A7)+,D1
00030782 <AmiBlitz3.ab3@21316>   ADDQ.w #4,A1
00030784 <AmiBlitz3.ab3@21317>   ADDQ.l #6,D1
00030788 <AmiBlitz3.ab3@21318>  BRA.w 'cute
0003078E <AmiBlitz3.ab3@21321>   TST.w inline
00030792 <AmiBlitz3.ab3@21322>    BEQ.w 'notin
00030794 <AmiBlitz3.ab3@21324>   SUBQ.w #1,A1
00030796 <AmiBlitz3.ab3@21325>   MOVEA.l A1,A0
0003079A <AmiBlitz3.ab3@21326>   ADDA.w inline(PC),A1
0003079E <AmiBlitz3.ab3@21327>  BRA.w pokecode2
000307A2 <AmiBlitz3.ab3@21330>   MOVEM.l a0/D1,-(A7)          ; was  d1,-(a7)
000307A8 <AmiBlitz3.ab3@21332>   TST.w debugversion
000307AC <AmiBlitz3.ab3@21333>   BEQ 'l11
000307B4 <AmiBlitz3.ab3@21334>   BTST #$7,link_debuginfo
000307B8 <AmiBlitz3.ab3@21335>   BEQ.w 'l11
000307BE <AmiBlitz3.ab3@21336>   MOVE.l lastinstruction,d1
000307C2 <AmiBlitz3.ab3@21337>   BEQ 'l11
000307C8 <AmiBlitz3.ab3@21338>   CLR.l lastinstruction
000307CE <AmiBlitz3.ab3@21339>   CMP.l #$e000,d1
000307D2 <AmiBlitz3.ab3@21340>   BGE 'ln99
000307D8 <AmiBlitz3.ab3@21341>   LEA notf,a0
000307DE <AmiBlitz3.ab3@21342>   CMP.l #$c601,d1
000307E2 <AmiBlitz3.ab3@21343>   BNE 'ln1
000307E8 <AmiBlitz3.ab3@21344>   LEA strcpy,a0
000307EC <AmiBlitz3.ab3@21345>  BRA 'ln3
000307F2 <AmiBlitz3.ab3@21348>   CMP.l #$c700,d1
000307F6 <AmiBlitz3.ab3@21349>   BNE 'ln2
000307FC <AmiBlitz3.ab3@21350>   LEA strvar,a0
00030800 <AmiBlitz3.ab3@21351>  BRA 'ln3
00030806 <AmiBlitz3.ab3@21354>   CMP.l #$ce00,d1
0003080A <AmiBlitz3.ab3@21355>   BNE 'ln4
00030810 <AmiBlitz3.ab3@21356>   LEA strcmp,a0
00030814 <AmiBlitz3.ab3@21357>  BRA 'ln3
0003081A <AmiBlitz3.ab3@21360>   CMP.l #$ca00,d1
0003081E <AmiBlitz3.ab3@21361>   BNE 'ln5
00030824 <AmiBlitz3.ab3@21362>   LEA qmul,a0
00030828 <AmiBlitz3.ab3@21363>  BRA 'ln3
0003082E <AmiBlitz3.ab3@21366>   CMP.l #$d000,d1
00030832 <AmiBlitz3.ab3@21367>      BNE 'ln6
00030838 <AmiBlitz3.ab3@21368>      LEA _MaxLen,a0
0003083C <AmiBlitz3.ab3@21369>  BRA 'ln3
00030842 <AmiBlitz3.ab3@21372>   CMP.l #$cb00,d1
00030846 <AmiBlitz3.ab3@21373>   BNE 'ln3
0003084C <AmiBlitz3.ab3@21374>   LEA qdiv,a0
00030850 <AmiBlitz3.ab3@21375>  BRA 'ln3
00030852 <AmiBlitz3.ab3@21378>   MOVE.l d1,a0
00030856 <AmiBlitz3.ab3@21379>   LEA $8(a0),a0
0003085A <AmiBlitz3.ab3@21382>   CMP.w #$ffff,(a0)+
0003085E <AmiBlitz3.ab3@21383>   BNE 'l1
00030862 <AmiBlitz3.ab3@21384>   LEA 6(a0),a0
00030866 <AmiBlitz3.ab3@21387>   MOVEM.l a1/a2/d7/d2,-(a7)
00030868 <AmiBlitz3.ab3@21388>   MOVEQ #0,d2
0003086E <AmiBlitz3.ab3@21389>   LEA ptr_parameterstore,a1
00030870 <AmiBlitz3.ab3@21392>   ADDQ.l #1,d2
00030872 <AmiBlitz3.ab3@21393>   MOVE.b (a0)+,d0
00030876 <AmiBlitz3.ab3@21394> 
0003087A <AmiBlitz3.ab3@21395>   BNE 'nodollar
0003087E <AmiBlitz3.ab3@21396>   MOVE.b #"S",d0
00030882 <AmiBlitz3.ab3@21399>   CMP.b #"?",d0
00030886 <AmiBlitz3.ab3@21400>   BEQ 'nolabelwrite
00030888 <AmiBlitz3.ab3@21401>   MOVE.b d0,(a1)+
0003088C <AmiBlitz3.ab3@21402>   BNE 'l2
00030892 <AmiBlitz3.ab3@21403>   MOVE.w #"__",-1(a1)
00030894 <AmiBlitz3.ab3@21404>   ADDQ.l #2,d2
00030898 <AmiBlitz3.ab3@21405>   CLR.b 1(a1)
0003089E <AmiBlitz3.ab3@21406>   JSR findlabel2
000308A2 <AmiBlitz3.ab3@21407>   BEQ 'l3
000308A8 <AmiBlitz3.ab3@21408>   JSR addlabelhash
000308AC <AmiBlitz3.ab3@21411>   CLR.l 4(a2)
000308B0 <AmiBlitz3.ab3@21412>   MOVE.l $14(a7),a0
000308B4 <AmiBlitz3.ab3@21413>   MOVE.l $10(a7),d1
000308B8 <AmiBlitz3.ab3@21414>   SUB.l $12(a0),d1
000308BC <AmiBlitz3.ab3@21415>   ADD.l $28(a0),d1
000308C0 <AmiBlitz3.ab3@21416>   MOVE.l d1,8(a2)
000308C4 <AmiBlitz3.ab3@21419>   MOVEM.l (a7)+,a1/a2/d7/d2
000308CA <AmiBlitz3.ab3@21422>   TST.b typecheck
000308CE <AmiBlitz3.ab3@21423>   BEQ 'p1
000308D4 <AmiBlitz3.ab3@21424>   MOVE.l lasttoken,d1
000308DA <AmiBlitz3.ab3@21425>   CMP.l #$da01,d1                                          ;poke
000308DE <AmiBlitz3.ab3@21426>   BEQ 'lp1
000308E4 <AmiBlitz3.ab3@21427>   CMP.l #$da02,d1                                          ;peek
000308E8 <AmiBlitz3.ab3@21428>   BNE 'p1
000308EE <AmiBlitz3.ab3@21431>   TST.b peekaddrsize
000308F2 <AmiBlitz3.ab3@21432>   BEQ 'p1
000308FA <AmiBlitz3.ab3@21433>   CMP.b #3,peekaddrsize
000308FE <AmiBlitz3.ab3@21434>   BNE errormsg_onlylong
00030904 <AmiBlitz3.ab3@21435>   CLR.b peekaddrsize
0003090A <AmiBlitz3.ab3@21443>    TST.b fpu
0003090E <AmiBlitz3.ab3@21444>   BNE 'optf
00030914 <AmiBlitz3.ab3@21445>   TST.b fast
00030918 <AmiBlitz3.ab3@21446>   BEQ 'l10
00030920 <AmiBlitz3.ab3@21452>   CMP.l #"Poke",20(a2)                                     ;poke
00030924 <AmiBlitz3.ab3@21453>   BNE 'peekopt
00030928 <AmiBlitz3.ab3@21454>   TST.b 24(a2)
0003092C <AmiBlitz3.ab3@21455>   BNE 'peekopt
00030930 <AmiBlitz3.ab3@21456>   CMP.b #3,d2
00030934 <AmiBlitz3.ab3@21457>   BNE 'lw1
0003093A <AmiBlitz3.ab3@21460>   MOVE.l #$21821990,d1
0003093E <AmiBlitz3.ab3@21461>  BRA.s 'exitjsr
00030942 <AmiBlitz3.ab3@21464>   CMP.b #2,d2
00030946 <AmiBlitz3.ab3@21465>   BNE 'lb1
0003094C <AmiBlitz3.ab3@21466>   MOVE.l #$31821990,d1
00030950 <AmiBlitz3.ab3@21467>  BRA.s 'exitjsr
00030954 <AmiBlitz3.ab3@21470>   CMP.b #1,d2
00030958 <AmiBlitz3.ab3@21471>   BNE 'lp3
0003095E <AmiBlitz3.ab3@21472>   MOVE.l #$11821990,d1
00030962 <AmiBlitz3.ab3@21473>  BRA.s 'exitjsr
00030966 <AmiBlitz3.ab3@21476>   CMP.b #5,d2
0003096A <AmiBlitz3.ab3@21477>     BNE 'l10
00030970 <AmiBlitz3.ab3@21478>     TST.b fpu
00030974 <AmiBlitz3.ab3@21479>     BEQ 'll1
0003097A <AmiBlitz3.ab3@21480>      MOVE.l destpointer,a4
00030982 <AmiBlitz3.ab3@21481>     CMP.l #$f22d4500,-6(a4)
00030986 <AmiBlitz3.ab3@21482>     BNE 'noglob
0003098C <AmiBlitz3.ab3@21483>     TST.b doublepeek
00030990 <AmiBlitz3.ab3@21484>     BNE 'noglob
00030996 <AmiBlitz3.ab3@21485>     MOVE.w -2(a4),-4(a4)
0003099C <AmiBlitz3.ab3@21486>     MOVE.w #$21ad,-6(a4)
000309A2 <AmiBlitz3.ab3@21487>     MOVE.w #$1990,-2(a4)
000309AA <AmiBlitz3.ab3@21488>     MOVE.w #9,peeksize
000309AC <AmiBlitz3.ab3@21489>     ADDQ #8,a7
000309AE <AmiBlitz3.ab3@21490>  RTS
000309B6 <AmiBlitz3.ab3@21493>     CMP.l #$f22c4500,-6(a4)
000309BA <AmiBlitz3.ab3@21494>     BNE 'nolocal
000309C0 <AmiBlitz3.ab3@21495>     MOVE.w -2(a4),-4(a4)
000309C6 <AmiBlitz3.ab3@21496>     TST.b doublepeek                                       ;dont move longfix on double floats
000309CA <AmiBlitz3.ab3@21497>     BNE 'nolocal
000309D0 <AmiBlitz3.ab3@21498>     MOVE.w #$21ac,-6(a4)
000309D6 <AmiBlitz3.ab3@21499>     MOVE.w #$1990,-2(a4)
000309DE <AmiBlitz3.ab3@21500>     MOVE.w #9,peeksize
000309E0 <AmiBlitz3.ab3@21501>     ADDQ #8,a7
000309E2 <AmiBlitz3.ab3@21502>  RTS
000309E6 <AmiBlitz3.ab3@21505>     MOVE.w #$f230,d1
000309EA <AmiBlitz3.ab3@21506>     BSR writeword
000309F0 <AmiBlitz3.ab3@21507>   MOVE.l #$65001990,d1
000309F6 <AmiBlitz3.ab3@21508>   TST.b doublepeek
000309FA <AmiBlitz3.ab3@21509>   BEQ 'exitjsr
00030A00 <AmiBlitz3.ab3@21510>   OR.l   #$10000000,d1
00030A02 <AmiBlitz3.ab3@21513>   ADDQ #8,a7
00030A0A <AmiBlitz3.ab3@21514>   MOVE.w #9,peeksize
00030A0E <AmiBlitz3.ab3@21515>  BRA writelong
00030A16 <AmiBlitz3.ab3@21518>   CMP.l #"Peek",20(a2)
00030A1A <AmiBlitz3.ab3@21519>   BNE 'l10
00030A1E <AmiBlitz3.ab3@21520>   TST.b 24(a2)
00030A22 <AmiBlitz3.ab3@21521>   BNE 'l10
00030A2A <AmiBlitz3.ab3@21522>   CMP.w #7,peeksize
00030A2E <AmiBlitz3.ab3@21523>   BEQ 'l10
00030A36 <AmiBlitz3.ab3@21524>    CMP.w #3,peeksize
00030A3A <AmiBlitz3.ab3@21525>    BNE.s 'lw1a
00030A40 <AmiBlitz3.ab3@21528>   MOVE.l #$20301990,d1
00030A44 <AmiBlitz3.ab3@21529>  BRA 'exitjsr
00030A4C <AmiBlitz3.ab3@21532>   CMP.w #2,peeksize
00030A50 <AmiBlitz3.ab3@21533>    BNE.s 'lb1a
00030A56 <AmiBlitz3.ab3@21534>    MOVE.l #$30301990,d1
00030A5A <AmiBlitz3.ab3@21535>  BRA 'exitjsr
00030A62 <AmiBlitz3.ab3@21538>   CMP.w #1,peeksize
00030A66 <AmiBlitz3.ab3@21539>    BNE.s 'lf1
00030A6C <AmiBlitz3.ab3@21540>    MOVE.l #$10301990,d1
00030A70 <AmiBlitz3.ab3@21541>  BRA 'exitjsr
00030A78 <AmiBlitz3.ab3@21544>   CMP.w #5,peeksize
00030A7C <AmiBlitz3.ab3@21545>    BNE 'l10
00030A82 <AmiBlitz3.ab3@21546>    TST.b fpu
00030A86 <AmiBlitz3.ab3@21547>    BEQ 'll1a
00030A8A <AmiBlitz3.ab3@21548>    MOVE.w #$f230,d1
00030A8E <AmiBlitz3.ab3@21549>    BSR writeword
00030A90 <AmiBlitz3.ab3@21550>    MOVEQ #0,d1
00030A96 <AmiBlitz3.ab3@21551>    MOVE.w tempregnum,d1
00030A98 <AmiBlitz3.ab3@21552>    ASL.l #7,d1
00030A9A <AmiBlitz3.ab3@21553>    ASL.l #8,d1
00030A9C <AmiBlitz3.ab3@21554>    ASL.l #8,d1
00030AA2 <AmiBlitz3.ab3@21555>    ADD.l #$44001990,d1
00030AA8 <AmiBlitz3.ab3@21556>     TST.b doublepeek
00030AAC <AmiBlitz3.ab3@21557>     BEQ 'exitjsr2
00030AB2 <AmiBlitz3.ab3@21558>     OR.l   #$10000000,d1
00030AB6 <AmiBlitz3.ab3@21561>  BRA 'exitjsr
00030ABA <AmiBlitz3.ab3@21565>   MOVE.w #$4EB9,D1
00030ABE <AmiBlitz3.ab3@21566>    BSR.w writeword                                         ;writesysjsr
00030AC2 <AmiBlitz3.ab3@21567>   MOVEM.l (A7)+,a0/D1        ; was  (a7)+,d1
00030AC8 <AmiBlitz3.ab3@21568>    JSR addoff
00030ACC <AmiBlitz3.ab3@21569>   SUB.l $12(A0),D1
00030AD0 <AmiBlitz3.ab3@21570>   ADD.l $28(A0),D1
00030AD4 <AmiBlitz3.ab3@21571> BRA.w writelong
00030AD6 <AmiBlitz3.ab3@21576>   MOVE.w D1,-(A7)
00030ADA <AmiBlitz3.ab3@21577>   MOVE.w tstmode(PC),D1
00030ADE <AmiBlitz3.ab3@21578>    BSR.w writeword
00030AE2 <AmiBlitz3.ab3@21579>    BSR.w getbbase
00030AE6 <AmiBlitz3.ab3@21580>    BSR.w writeword
00030AE8 <AmiBlitz3.ab3@21581>   MOVE.w (A7)+,D1
00030AEC <AmiBlitz3.ab3@21582>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
00030AF0 <AmiBlitz3.ab3@21583>    BSR.w Atokejsr
00030AF4 <AmiBlitz3.ab3@21584>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030AF6 <AmiBlitz3.ab3@21585> RTS
00030AFA <AmiBlitz3.ab3@21593>   MOVE.w blitzoff(PC),D1
00030AFE <AmiBlitz3.ab3@21594>   CMP.w #-$1,D1
00030B02 <AmiBlitz3.ab3@21595>    BNE.w 'done
00030B08 <AmiBlitz3.ab3@21596>   ADDQ.w #1,globalvarpointer
00030B10 <AmiBlitz3.ab3@21597>   BCLR #$0,globalvarpointer+1
00030B16 <AmiBlitz3.ab3@21598>   MOVE.w globalvarpointer,D1
00030B1C <AmiBlitz3.ab3@21599>   MOVE.w D1,blitzoff
00030B22 <AmiBlitz3.ab3@21600>   ADDQ.w #2,globalvarpointer
00030B24 <AmiBlitz3.ab3@21603> RTS
00030B28 <AmiBlitz3.ab3@21607> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
00030B2A <AmiBlitz3.ab3@21610> inline:     Ds.w 1
00030B2C <AmiBlitz3.ab3@21611> blitzoff:   Dc.w $FFFF                                   ;-1 org source
00030B2E <AmiBlitz3.ab3@21612> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00030B30 <AmiBlitz3.ab3@21616>   MOVE.w (A2)+,D1
00030B34 <AmiBlitz3.ab3@21617>    BEQ.w 'done
00030B36 <AmiBlitz3.ab3@21618>   MOVE.w (A2)+,D2
00030B3A <AmiBlitz3.ab3@21619>    BSR.w toreg
00030B3E <AmiBlitz3.ab3@21620>  BRA.w fetchregs
00030B40 <AmiBlitz3.ab3@21623> RTS
00030B44 <AmiBlitz3.ab3@21629>   CMP.w #-$100,D2
00030B48 <AmiBlitz3.ab3@21630>    BCC.w 'yeah
00030B4C <AmiBlitz3.ab3@21632>   BCLR #$F,D2
00030B50 <AmiBlitz3.ab3@21633>    BEQ.w 'nobm
00030B56 <AmiBlitz3.ab3@21635>   TST.w blitzmode
00030B5A <AmiBlitz3.ab3@21636>    BMI.w 'yeah
00030B5C <AmiBlitz3.ab3@21637>  RTS
00030B60 <AmiBlitz3.ab3@21640>   BCLR #$E,D2
00030B64 <AmiBlitz3.ab3@21641>    BEQ.w 'yeah
00030B6A <AmiBlitz3.ab3@21643>   TST.w blitzmode
00030B6E <AmiBlitz3.ab3@21644>    BPL.w 'yeah
00030B70 <AmiBlitz3.ab3@21645>  RTS
00030B76 <AmiBlitz3.ab3@21648>   JSR uselib
00030B78 <AmiBlitz3.ab3@21649>   TST.b D2
00030B7C <AmiBlitz3.ab3@21650>    BEQ.w 'norm
00030B80 <AmiBlitz3.ab3@21651>   CMP.b #$4,D2
00030B84 <AmiBlitz3.ab3@21652>    BNE.w 'suv
00030B88 <AmiBlitz3.ab3@21653>   MOVE.w #$0004,-(A7)
00030B8E <AmiBlitz3.ab3@21654>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00030B92 <AmiBlitz3.ab3@21655>  BRA.w 'sendmd
00030B96 <AmiBlitz3.ab3@21658>   CMP.b #$3,D2
00030B9A <AmiBlitz3.ab3@21659>    BNE.w 'notnmax
00030B9C <AmiBlitz3.ab3@21660>   CLR.w -(A7)
00030BA2 <AmiBlitz3.ab3@21661>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00030BA4 <AmiBlitz3.ab3@21667>   LSR.w #8,D2
00030BA8 <AmiBlitz3.ab3@21668>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00030BAC <AmiBlitz3.ab3@21669>   BTST #$7,D2
00030BB0 <AmiBlitz3.ab3@21670>    BEQ.w 'skipad
00030BB4 <AmiBlitz3.ab3@21671>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030BB8 <AmiBlitz3.ab3@21672>   CMP.w #$16,D2
00030BBC <AmiBlitz3.ab3@21673>    BNE.w 'skipad
00030BC4 <AmiBlitz3.ab3@21674>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030BC8 <AmiBlitz3.ab3@21677>   ANDI.w #$7,D2
00030BCA <AmiBlitz3.ab3@21678>   LSL.w #8,D2
00030BCC <AmiBlitz3.ab3@21679>   LSL.w #1,D2
00030BCE <AmiBlitz3.ab3@21680>   OR.w D2,D1
00030BD2 <AmiBlitz3.ab3@21681>    BSR.w writeword
00030BD6 <AmiBlitz3.ab3@21682>   MOVE.l $12(A1),D1
00030BD8 <AmiBlitz3.ab3@21683>   ADD.l (A7)+,D1
00030BDC <AmiBlitz3.ab3@21684>   MOVE.w $0(A1,D1.L),D1
00030BDE <AmiBlitz3.ab3@21685>   ADD.w (A7)+,D1
00030BE2 <AmiBlitz3.ab3@21686>  BRA.w writeword
00030BE4 <AmiBlitz3.ab3@21689>   MOVE.w D2,-(A7)
00030BE6 <AmiBlitz3.ab3@21690>   LSR.w #8,D2
00030BEA <AmiBlitz3.ab3@21691>   CMP.w #$16,D2
00030BEE <AmiBlitz3.ab3@21692>    BNE.w 'isnta6
00030BF6 <AmiBlitz3.ab3@21693>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030BFA <AmiBlitz3.ab3@21696>   MOVE.l $12(A1),D1                                        ;objectspace
00030BFE <AmiBlitz3.ab3@21697>   MOVE.w -$6(A1,D1.L),-(A7)
00030C02 <AmiBlitz3.ab3@21698>    BSR.w makeregop
00030C06 <AmiBlitz3.ab3@21699>    BSR.w writeword
00030C08 <AmiBlitz3.ab3@21700>   MOVE.w (A7)+,D1
00030C0A <AmiBlitz3.ab3@21701>   MOVE.w (A7)+,D2
00030C0C <AmiBlitz3.ab3@21702>   TST.b D2
00030C10 <AmiBlitz3.ab3@21703>    BPL.w 'skippy1
00030C14 <AmiBlitz3.ab3@21708>    BSR.w writeword                                         ;move.l x(a5),dn
00030C16 <AmiBlitz3.ab3@21709>   MOVE.w D2,-(A7)                                          ;store reg used
00030C1A <AmiBlitz3.ab3@21711>   ADDA.l $12(A1),A1
00030C1C <AmiBlitz3.ab3@21712>   MOVE.b D2,D1
00030C20 <AmiBlitz3.ab3@21713>   ANDI.w #$7,D1
00030C26 <AmiBlitz3.ab3@21715>   TST.b debugmode
00030C2A <AmiBlitz3.ab3@21716>    BEQ.w 'norerr
00030C2C <AmiBlitz3.ab3@21718>   MOVE.w D1,-(A7)
00030C2E <AmiBlitz3.ab3@21719>   LSL.w #8,D1
00030C30 <AmiBlitz3.ab3@21720>   LSL.w #1,D1
00030C34 <AmiBlitz3.ab3@21721>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00030C38 <AmiBlitz3.ab3@21722>    BSR.w writeword
00030C3C <AmiBlitz3.ab3@21723>   MOVE.w -$4(A1),D1
00030C40 <AmiBlitz3.ab3@21724>    BSR.w writeword
00030C44 <AmiBlitz3.ab3@21725>   MOVE.l maxchk(PC),D1                                  ;bcs
00030C48 <AmiBlitz3.ab3@21726>    BSR.w writelong
00030C4A <AmiBlitz3.ab3@21727>   MOVE.l A2,-(A7)
00030C4E <AmiBlitz3.ab3@21728>   MOVE.w #$C30A,D1
00030C52 <AmiBlitz3.ab3@21729>    BSR.w Atokejsr
00030C54 <AmiBlitz3.ab3@21730>   MOVEA.l (A7)+,A2
00030C56 <AmiBlitz3.ab3@21731>   MOVE.w (A7)+,D1
00030C5A <AmiBlitz3.ab3@21734>   MOVE.w -$2(A1),D2                                        ;shift amount
00030C5E <AmiBlitz3.ab3@21737>   CMP.w #$9,D2
00030C62 <AmiBlitz3.ab3@21738>    BCS.w 'simp
00030C66 <AmiBlitz3.ab3@21739>   MOVEM.w D1-D2,-(A7)
00030C68 <AmiBlitz3.ab3@21741>   MOVEQ.l #$00,D2                                          ;!!!!!
00030C6A <AmiBlitz3.ab3@21743>   LSL.w #8,D2
00030C6C <AmiBlitz3.ab3@21744>   LSL.w #1,D2
00030C6E <AmiBlitz3.ab3@21745>   OR.w D2,D1
00030C72 <AmiBlitz3.ab3@21746>   OR.w lsldn(PC),D1
00030C76 <AmiBlitz3.ab3@21747>    BSR.w writeword
00030C7A <AmiBlitz3.ab3@21748>   MOVEM.w (A7)+,D1-D2
00030C7C <AmiBlitz3.ab3@21749>   SUBQ.w #8,D2
00030C80 <AmiBlitz3.ab3@21750>  BRA.w 'shloop
00030C82 <AmiBlitz3.ab3@21753>   MOVE.w D1,-(A7)
00030C86 <AmiBlitz3.ab3@21754>   OR.w #$48c0,d1
00030C8A <AmiBlitz3.ab3@21755>   BSR writeword
00030C8C <AmiBlitz3.ab3@21756>   MOVE.w (a7),d1
00030C8E <AmiBlitz3.ab3@21757>   TST.w D2
00030C92 <AmiBlitz3.ab3@21758>   BEQ.w 'simp2
00030C96 <AmiBlitz3.ab3@21760>   ANDI.w #$7,D2                                            ;?????
00030C98 <AmiBlitz3.ab3@21762>   LSL.w #8,D2
00030C9A <AmiBlitz3.ab3@21763>   LSL.w #1,D2
00030C9C <AmiBlitz3.ab3@21764>   OR.w D2,D1
00030CA0 <AmiBlitz3.ab3@21765>   OR.w lsldn(PC),D1
00030CA4 <AmiBlitz3.ab3@21766>    BSR.w writeword
00030CA6 <AmiBlitz3.ab3@21772>   MOVE.w (A7)+,D1
00030CAA <AmiBlitz3.ab3@21773>   ANDI.w #$7,D1
00030CAE <AmiBlitz3.ab3@21774>   OR.w maxdo(PC),D1
00030CB0 <AmiBlitz3.ab3@21775>   MOVE.w (A7)+,D2
00030CB2 <AmiBlitz3.ab3@21776>   LSL.w #1,D2
00030CB6 <AmiBlitz3.ab3@21777>   ANDI.w #$E00,D2
00030CB8 <AmiBlitz3.ab3@21778>   OR.w D2,D1
00030CBC <AmiBlitz3.ab3@21779>  BRA.w writeword
00030CC0 <AmiBlitz3.ab3@21782>   CMP.b #$1,D2
00030CC4 <AmiBlitz3.ab3@21783>    BEQ.w 'skippy
00030CC6 <AmiBlitz3.ab3@21787>   ADDQ.w #4,D1
00030CCC <AmiBlitz3.ab3@21789>   TST.b debugmode
00030CD0 <AmiBlitz3.ab3@21790>    BEQ.w 'skippy
00030CD4 <AmiBlitz3.ab3@21792>    BSR.w writeword
00030CD6 <AmiBlitz3.ab3@21793>   SWAP D1
00030CDA <AmiBlitz3.ab3@21794>   MOVE.w 'theretest(PC),D1
00030CDC <AmiBlitz3.ab3@21795>   SWAP D1
00030CE0 <AmiBlitz3.ab3@21796>    BSR.w writelong
00030CE4 <AmiBlitz3.ab3@21797>   MOVE.l 'theretest+4(PC),D1
00030CE8 <AmiBlitz3.ab3@21798>    BSR.w writelong
00030CEC <AmiBlitz3.ab3@21799>   MOVE.l 'theretest+8(PC),D1
00030CF0 <AmiBlitz3.ab3@21800>  BRA.w writelong
00030CF4 <AmiBlitz3.ab3@21803>  BRA.w writeword
00030CF8 <AmiBlitz3.ab3@21808>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030CFC <AmiBlitz3.ab3@21809>             Dc.b $66,$00,$00,$06                           ;BNE.W  'ttskip
00030CFE <AmiBlitz3.ab3@21810>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030D00 <AmiBlitz3.ab3@21811>             Dc.b $4E,$40                                   ;TRAP   #00
00030D02 <AmiBlitz3.ab3@21816>   LSR.w #8,D2
00030D06 <AmiBlitz3.ab3@21817>   CMP.b #$16,D2
00030D0A <AmiBlitz3.ab3@21818>    BNE.w 'nota6
00030D0E <AmiBlitz3.ab3@21819>   MOVE.w $A(A1),D1
00030D14 <AmiBlitz3.ab3@21820>   CMP.w lasta6,D1
00030D18 <AmiBlitz3.ab3@21821>    BEQ.w 'sk
00030D1E <AmiBlitz3.ab3@21822>   MOVE.w D1,lasta6
00030D22 <AmiBlitz3.ab3@21825>    BSR.w makeregop
00030D26 <AmiBlitz3.ab3@21826>   TST.w $1A(A1)
00030D2A <AmiBlitz3.ab3@21827>    BPL.w 'long
00030D2E <AmiBlitz3.ab3@21828>   CMP.w stackop(PC),D1
00030D32 <AmiBlitz3.ab3@21829>    BNE.w 'notst
00030D38 <AmiBlitz3.ab3@21830>   SUBQ.w #2,a2offset
00030D3C <AmiBlitz3.ab3@21833>    ORI.w #$1000,D1
00030D40 <AmiBlitz3.ab3@21836>    BSR.w writeword
00030D44 <AmiBlitz3.ab3@21837>   MOVE.w $A(A1),D1
00030D48 <AmiBlitz3.ab3@21838>    BSR.w writeword
00030D4A <AmiBlitz3.ab3@21841> RTS
00030D4C <AmiBlitz3.ab3@21845> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030D50 <AmiBlitz3.ab3@21846> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk_ok
00030D56 <AmiBlitz3.ab3@21847>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00030D58 <AmiBlitz3.ab3@21850> 
00030D5A <AmiBlitz3.ab3@21853>             Dc.b $00,$00
00030D5E <AmiBlitz3.ab3@21854> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030D62 <AmiBlitz3.ab3@21861>   CMP.b #$FF,D2
00030D66 <AmiBlitz3.ab3@21862>    BNE.w 'notst
00030D6A <AmiBlitz3.ab3@21863>   MOVE.w stackop(PC),D1
00030D70 <AmiBlitz3.ab3@21864>   ADDQ.w #4,a2offset
00030D72 <AmiBlitz3.ab3@21865>  RTS
00030D74 <AmiBlitz3.ab3@21868>   MOVE.l A3,-(A7)
00030D7A <AmiBlitz3.ab3@21869>   LEA regtransd,A3
00030D7E <AmiBlitz3.ab3@21870>   BTST #$4,D2
00030D82 <AmiBlitz3.ab3@21871>    BEQ.w 'skip
00030D88 <AmiBlitz3.ab3@21872>   LEA regtransa,A3
00030D8C <AmiBlitz3.ab3@21875>   ANDI.w #$7,D2
00030D8E <AmiBlitz3.ab3@21876>   MOVE.w D2,D1
00030D90 <AmiBlitz3.ab3@21877>   LSL.w #8,D1
00030D92 <AmiBlitz3.ab3@21878>   LSL.w #1,D1
00030D94 <AmiBlitz3.ab3@21879>   OR.w (A3),D1
00030D96 <AmiBlitz3.ab3@21880>   MOVEA.l (A7)+,A3
00030D98 <AmiBlitz3.ab3@21881> RTS
00030D9C <AmiBlitz3.ab3@21887>   CMP.w #$3C,D0
00030DA0 <AmiBlitz3.ab3@21888>    BCS.w 'no
00030DA4 <AmiBlitz3.ab3@21889>   CMP.w #$3E,D0
00030DA8 <AmiBlitz3.ab3@21890>    BHI.w 'no
00030DAC <AmiBlitz3.ab3@21891>   SUBI.w #$3C,D0
00030DAE <AmiBlitz3.ab3@21892>   CMP.w D0,D0
00030DB0 <AmiBlitz3.ab3@21895> RTS
00030DBA <AmiBlitz3.ab3@21908>   MOVE.w oldqflag,instringon
00030DC0 <AmiBlitz3.ab3@21909>   MOVEA.l lastsourcepos,A5
00030DC6 <AmiBlitz3.ab3@21918>   MOVE.w regnum,-(A7)
00030DCC <AmiBlitz3.ab3@21919>   CLR.w regnum
00030DD2 <AmiBlitz3.ab3@21920>   MOVE.l destpointer,-(A7)
00030DD8 <AmiBlitz3.ab3@21921>   MOVE.l destbufferend,-(A7)
00030DDE <AmiBlitz3.ab3@21922>   MOVE.w dontwrite_nomemleft,-(A7)
00030DE4 <AmiBlitz3.ab3@21923>   MOVE.w lasta6,-(A7)
00030DEA <AmiBlitz3.ab3@21924>   MOVE.w cfetchmode,-(A7)
00030DEE <AmiBlitz3.ab3@21925>    BNE.w 'something
00030DF8 <AmiBlitz3.ab3@21926>   MOVE.l destbufferend,oldlibat
00030DFE <AmiBlitz3.ab3@21927>   MOVEA.l constpcat,A0
00030E04 <AmiBlitz3.ab3@21928>   MOVE.l A0,destpointer
00030E08 <AmiBlitz3.ab3@21929>  BRA.w 'some2
00030E0E <AmiBlitz3.ab3@21934>   MOVEA.l destpointer,A0     ;continue in cmode buff
00030E10 <AmiBlitz3.ab3@21937>   MOVE.l A0,-(A7)
00030E1A <AmiBlitz3.ab3@21938>   MOVE.l constlibat,destbufferend      ;for overflow
00030E20 <AmiBlitz3.ab3@21939>   CLR.w dontwrite_nomemleft
00030E28 <AmiBlitz3.ab3@21941>   MOVE.w #$FFFF,lasta6                 ; was -1
00030E30 <AmiBlitz3.ab3@21942>   MOVE.w #$FFFF,cfetchmode             ; was -1
00030E34 <AmiBlitz3.ab3@21946>     BSR.w arreval                      ;!
00030E36 <AmiBlitz3.ab3@21948>    MOVE.l (a7),a0
00030F72 <AmiBlitz3.ab3@21950>  !newcalc
00030F76 <AmiBlitz3.ab3@21951>    BEQ 'l10
00030F78 <AmiBlitz3.ab3@21952>    MOVE.l d0,d3
00030F7A <AmiBlitz3.ab3@21953>    MOVEA.l (A7)+,A0
00030F7E <AmiBlitz3.ab3@21954>  BRA 'bc1
00030F82 <AmiBlitz3.ab3@21958>    MOVE.w #$2600,D1              ;move.l d0,d3
00030F88 <AmiBlitz3.ab3@21959>   OR.w regnum,D1
00030F8C <AmiBlitz3.ab3@21960>    BSR.w writeword
00030F90 <AmiBlitz3.ab3@21961>   MOVE.w #$4E75,D1               ;rts!
00030F94 <AmiBlitz3.ab3@21962>    BSR.w writeword
00030F9A <AmiBlitz3.ab3@21964>   MOVE.w dontwrite_nomemleft,D1
00030F9E <AmiBlitz3.ab3@21965>    BNE.w conmemerr
00030FA0 <AmiBlitz3.ab3@21967>   MOVEA.l (A7)+,A0
00030FA2 <AmiBlitz3.ab3@21969>   NOP
00030FA8 <AmiBlitz3.ab3@21971>    JSR Aclearcache                                         ;simple expression
00030FAA <AmiBlitz3.ab3@21973>    JSR (A0)                                                ;writeresult
00030FB0 <AmiBlitz3.ab3@21976>   MOVE.w (A7)+,cfetchmode
00030FB6 <AmiBlitz3.ab3@21977>   MOVE.w (A7)+,lasta6
00030FBC <AmiBlitz3.ab3@21978>   MOVE.w (A7)+,dontwrite_nomemleft
00030FC2 <AmiBlitz3.ab3@21979>   MOVE.l (A7)+,destbufferend
00030FC8 <AmiBlitz3.ab3@21980>   MOVE.l (A7)+,destpointer
00030FCE <AmiBlitz3.ab3@21981>   MOVE.w (A7)+,regnum
00030FD4 <AmiBlitz3.ab3@21986> JMP reget
00030FD8 <AmiBlitz3.ab3@21989> oldlibat:   Ds.l 1
00030FDE <AmiBlitz3.ab3@21993>   LEA incdir,A0
00030FE2 <AmiBlitz3.ab3@21996>   CMP.w #$22,D0     ;'"'
00030FE6 <AmiBlitz3.ab3@21997>    BEQ.w 'skip
00030FE8 <AmiBlitz3.ab3@21998>   MOVE.b D0,(A0)+
00030FEA <AmiBlitz3.ab3@21999>   TST.w D0
00030FEE <AmiBlitz3.ab3@22000>    BEQ.w 'done
00030FF2 <AmiBlitz3.ab3@22001>    BMI.w syntaxerr
00030FF8 <AmiBlitz3.ab3@22004>   JSR get1bytemain                                         ;_long
00030FFC <AmiBlitz3.ab3@22005>  BRA.w 'loop
00030FFE <AmiBlitz3.ab3@22008> RTS
00031004 <AmiBlitz3.ab3@22015>   LEA ptr_parameterstore,A1                                ;getparameter
0003100A <AmiBlitz3.ab3@22016>   LEA incdir,A0
0003100C <AmiBlitz3.ab3@22017>   MOVEQ.l #-$01,D2
0003100E <AmiBlitz3.ab3@22020>     ADDQ.w #1,D2
00031010 <AmiBlitz3.ab3@22021>     MOVE.b (A0)+,(A1)+
00031014 <AmiBlitz3.ab3@22022>   BNE.w 'loop0
00031016 <AmiBlitz3.ab3@22023>   SUBQ.w #1,A1
00031020 <AmiBlitz3.ab3@22026>   MOVE.w oldqflag,instringon
00031026 <AmiBlitz3.ab3@22027>   MOVEA.l lastsourcepos,A5
0003102C <AmiBlitz3.ab3@22031>   JSR get1bytemain
0003102E <AmiBlitz3.ab3@22032>   TST.w D0
00031032 <AmiBlitz3.ab3@22033>    BMI.w syntaxerr
00031036 <AmiBlitz3.ab3@22034>   CMP.b #$22,D0         ;'"'
0003103A <AmiBlitz3.ab3@22035>    BEQ.w 'loop
0003103C <AmiBlitz3.ab3@22036>   MOVE.b D0,(A1)+
00031040 <AmiBlitz3.ab3@22037>    BEQ.w 'done
00031042 <AmiBlitz3.ab3@22038>   ADDQ.w #1,D2
00031046 <AmiBlitz3.ab3@22039>  BRA.w 'loop
00031048 <AmiBlitz3.ab3@22042>   TST.w D2
0003104C <AmiBlitz3.ab3@22043>    BEQ.w syntaxerr
0003104E <AmiBlitz3.ab3@22044> RTS
00031054 <AmiBlitz3.ab3@22051>   MOVEA.l constantbase,A2
00031058 <AmiBlitz3.ab3@22053>   MOVEA.l $E(A2),A5
0003105E <AmiBlitz3.ab3@22055>   MOVE.l a5,includesourceline
00031064 <AmiBlitz3.ab3@22056>   LEA inctab,a0
0003106A <AmiBlitz3.ab3@22057>   MOVE.w ininclude,d0
0003106E <AmiBlitz3.ab3@22058>   MOVE.l $0(a0,d0*4),d0
00031072 <AmiBlitz3.ab3@22060>   MOVEA.l $4(A2),A0
00031076 <AmiBlitz3.ab3@22062>   LEA $0(A0,D0.l),A0   ;end of buffer!
00031078 <AmiBlitz3.ab3@22063>   MOVEA.l A5,A1
0003107A <AmiBlitz3.ab3@22066>     CMPA.l A0,A1
0003107E <AmiBlitz3.ab3@22067>      BCC.w readpend
00031080 <AmiBlitz3.ab3@22068>   TST.b (A1)+
00031084 <AmiBlitz3.ab3@22069>   BNE.w 'loop
00031088 <AmiBlitz3.ab3@22070> BRA.w imakeend
0003108C <AmiBlitz3.ab3@22075>   MOVEA.l $4(A2),A1
0003108E <AmiBlitz3.ab3@22078>   CMPA.l A0,A5
00031092 <AmiBlitz3.ab3@22079>   BCC.w 'skip
00031094 <AmiBlitz3.ab3@22080>   MOVE.b (A5)+,(A1)+
00031098 <AmiBlitz3.ab3@22081>  BRA.w 'loop
0003109A <AmiBlitz3.ab3@22084>   MOVE.l A1,D0
0003109E <AmiBlitz3.ab3@22085>   SUB.l $4(A2),D0
000310A4 <AmiBlitz3.ab3@22087>   LEA inctab,a0
000310A6 <AmiBlitz3.ab3@22088>   MOVEQ #0,d1
000310AC <AmiBlitz3.ab3@22089>   MOVE.w ininclude,d1
000310B0 <AmiBlitz3.ab3@22090>   MOVE.l d0,0(a0,d1*4)
000310B6 <AmiBlitz3.ab3@22093>   MOVEA.l _dosbase,A6
000310BA <AmiBlitz3.ab3@22094>   MOVE.l $8(A2),D1
000310BC <AmiBlitz3.ab3@22095>   MOVE.l A1,D2
000310C2 <AmiBlitz3.ab3@22097>   MOVE.l D2,include_base
000310C8 <AmiBlitz3.ab3@22098>   MOVE.l #$10000000,d3                                     ;load whole file
000310CA <AmiBlitz3.ab3@22101>   SUB.l D0,D3
000310CE <AmiBlitz3.ab3@22103>    JSR _Read(A6)
000310D0 <AmiBlitz3.ab3@22105>   TST.l D0
000310D4 <AmiBlitz3.ab3@22106>    BMI.w error_reading_file
000310D8 <AmiBlitz3.ab3@22108>    BEQ.w closeinc
000310DE <AmiBlitz3.ab3@22109>    MOVE.l D0,include_length
00031120 <AmiBlitz3.ab3@22110>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003114A <AmiBlitz3.ab3@22111>    !basic
0003115A <AmiBlitz3.ab3@22112>    ilen.l  = Peek.l(?include_length)
0003116A <AmiBlitz3.ab3@22113>    ibase.l = Peek.l(?include_base)
0003117A <AmiBlitz3.ab3@22114>    ido.l   = Peek.l(?include_process)
0003118A <AmiBlitz3.ab3@22115>    *tn.preprocessor = Peek.l(?include_preprocessor)
00031194 <AmiBlitz3.ab3@22116>    If ido
000311A6 <AmiBlitz3.ab3@22117>      ioffset.l = SkipXtraHeader{ibase,ilen}
000311CC <AmiBlitz3.ab3@22118>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
000311DE <AmiBlitz3.ab3@22119>      If nilen>0
000311EE <AmiBlitz3.ab3@22123>        Poke.l ?include_length,nilen
0003120C <AmiBlitz3.ab3@22126>    !asm
00031216 <AmiBlitz3.ab3@22127>    MOVE.l #0,include_process
0003121C <AmiBlitz3.ab3@22128>    MOVE.l include_length,D0
00031222 <AmiBlitz3.ab3@22129>    LEA inctab,a0
00031224 <AmiBlitz3.ab3@22130>    MOVEQ #0,d1
0003122A <AmiBlitz3.ab3@22131>    MOVE.w ininclude,d1
0003122E <AmiBlitz3.ab3@22132>    ADD.l d0,0(a0,d1*4)
00031232 <AmiBlitz3.ab3@22136>   MOVEA.l $4(A2),A5
00031236 <AmiBlitz3.ab3@22139>    MOVE.l 0(a0,d1*4),d0
0003123A <AmiBlitz3.ab3@22141>   CLR.b $0(A5,D0.l)
0003123C <AmiBlitz3.ab3@22144>   MOVEA.l A5,A0
0003123E <AmiBlitz3.ab3@22147>     TST.b (A0)+
00031242 <AmiBlitz3.ab3@22148>   BNE.w 'loop2
00031246 <AmiBlitz3.ab3@22149>   MOVE.l A0,$E(A2)
00031248 <AmiBlitz3.ab3@22150> RTS
0003124C <AmiBlitz3.ab3@22153> include_length:        Dc.l 0                              ; for tokenizer!
00031250 <AmiBlitz3.ab3@22154> include_base:          Dc.l 0
00031254 <AmiBlitz3.ab3@22155> include_process:       Dc.l 0
00031258 <AmiBlitz3.ab3@22156> include_preprocessor:  Dc.l 0
0003125C <AmiBlitz3.ab3@22160>   MOVE.l $8(A2),D1
00031262 <AmiBlitz3.ab3@22161>   MOVEA.l _dosbase,A6
00031266 <AmiBlitz3.ab3@22162>   JSR _Close(a6)
0003126C <AmiBlitz3.ab3@22163>   MOVEA.l _execbase,A6
00031270 <AmiBlitz3.ab3@22164>   MOVEA.l $4(A2),A1
00031276 <AmiBlitz3.ab3@22165>   MOVE.l #$400*8,D0         ; #inclen                               ;exit include
0003127A <AmiBlitz3.ab3@22170>   JSR _FreeVec(a6)
00031280 <AmiBlitz3.ab3@22173>   MOVE.l (A2),constantbase
00031282 <AmiBlitz3.ab3@22174>   MOVEA.l A2,A1
00031284 <AmiBlitz3.ab3@22175>   MOVEQ.l #$00,D0
00031288 <AmiBlitz3.ab3@22176>   MOVE.b $12(A2),D0
0003128E <AmiBlitz3.ab3@22177>   MOVEA.l _execbase,A6
00031294 <AmiBlitz3.ab3@22180>   MOVE.l mempool2,a0
00031298 <AmiBlitz3.ab3@22181>   JSR _FreePooled(A6)
0003129E <AmiBlitz3.ab3@22182>   JSR zero_includename
000312A4 <AmiBlitz3.ab3@22184>   SUBQ.w #1,ininclude
000312A8 <AmiBlitz3.ab3@22185>   BNE.w readinc
000312AE <AmiBlitz3.ab3@22189>   LEA _include,a0
000312B2 <AmiBlitz3.ab3@22190>   MOVEM.l a0-a6/d0-d7,-(a7)
000312B8 <AmiBlitz3.ab3@22191>   LEA ptr_parameterstore,a1
000312BA <AmiBlitz3.ab3@22194>     MOVE.b (a0)+,(a1)+
000312BE <AmiBlitz3.ab3@22195>   BNE 'l1b
000312C0 <AmiBlitz3.ab3@22196>   MOVEQ #9,d2
000312C6 <AmiBlitz3.ab3@22197>   JSR findlabel2
000312CA <AmiBlitz3.ab3@22198>   BNE 'd
000312CE <AmiBlitz3.ab3@22199>   CLR.l 8(a2)
000312D2 <AmiBlitz3.ab3@22202>   MOVEM.l (a7)+,a0-a6/d0-d7
000312D4 <AmiBlitz3.ab3@22204> RTS
000312DA <AmiBlitz3.ab3@22209>   MOVE.l unusedfunc,d0
000312DE <AmiBlitz3.ab3@22210>   BEQ 'noclear
000312E2 <AmiBlitz3.ab3@22211>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
000312E4 <AmiBlitz3.ab3@22214>     MOVE.l d0,a1
000312E8 <AmiBlitz3.ab3@22215>     MOVE.l 4(a1),d0
000312EA <AmiBlitz3.ab3@22216>     MOVE.l (a1),d2
000312F0 <AmiBlitz3.ab3@22217>     MOVE.l _execbase,a6
000312F4 <AmiBlitz3.ab3@22218>     JSR _FreeMem(a6)
000312F6 <AmiBlitz3.ab3@22219>     MOVE.l d2,d0
000312FA <AmiBlitz3.ab3@22220>   BNE 'f1
00031300 <AmiBlitz3.ab3@22221>   CLR.l unusedfunc
00031304 <AmiBlitz3.ab3@22222>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00031306 <AmiBlitz3.ab3@22225> RTS
0003130C <AmiBlitz3.ab3@22230>   MOVEA.l xinclude_base,A2
00031312 <AmiBlitz3.ab3@22231>   CLR.l xinclude_base
00031316 <AmiBlitz3.ab3@22234>     CMPA.w #$0,A2
0003131A <AmiBlitz3.ab3@22235>      BEQ.w 'done
0003131C <AmiBlitz3.ab3@22236>     MOVEQ.l #$00,D0
00031320 <AmiBlitz3.ab3@22237>     MOVE.b 4+8(A2),D0           ; was 4 org
00031322 <AmiBlitz3.ab3@22238>     MOVEA.l A2,A1
00031324 <AmiBlitz3.ab3@22239>     MOVEA.l (A2),A2
0003132A <AmiBlitz3.ab3@22240>     MOVEA.l _execbase,A6
00031330 <AmiBlitz3.ab3@22243>     MOVE.l mempool2,a0
00031334 <AmiBlitz3.ab3@22244>     JSR _FreePooled(A6)
00031338 <AmiBlitz3.ab3@22246>  BRA.w 'loop
0003133A <AmiBlitz3.ab3@22249> RTS
00031340 <AmiBlitz3.ab3@22253>   MOVEA.l constantbase,A2
00031346 <AmiBlitz3.ab3@22254>   CLR.l constantbase
0003134A <AmiBlitz3.ab3@22257>     CMPA.w #$0,A2
0003134E <AmiBlitz3.ab3@22258>      BEQ.w 'done
00031352 <AmiBlitz3.ab3@22259>     MOVE.l $8(A2),D1
00031356 <AmiBlitz3.ab3@22260>      BEQ.w 'noclose
0003135C <AmiBlitz3.ab3@22261>     MOVEA.l _dosbase,A6
00031360 <AmiBlitz3.ab3@22262>      JSR _Close(A6)
00031364 <AmiBlitz3.ab3@22265>     MOVE.l $4(A2),D0
00031368 <AmiBlitz3.ab3@22266>      BEQ.w 'skip
0003136A <AmiBlitz3.ab3@22267>     MOVEA.l D0,A1
00031370 <AmiBlitz3.ab3@22268>     MOVE.l #$400*8,D0          ; was #inclen
00031376 <AmiBlitz3.ab3@22269>     MOVEA.l _execbase,A6
0003137C <AmiBlitz3.ab3@22272>     MOVE.l mempool,a0
00031380 <AmiBlitz3.ab3@22273>     JSR _FreeVec(a6)
00031382 <AmiBlitz3.ab3@22277>     MOVEQ.l #$00,D0
00031386 <AmiBlitz3.ab3@22278>     MOVE.b $12(A2),D0
00031388 <AmiBlitz3.ab3@22279>     MOVEA.l A2,A1
0003138A <AmiBlitz3.ab3@22280>     MOVEA.l (A2),A2
00031390 <AmiBlitz3.ab3@22281>     MOVEA.l _execbase,A6
00031396 <AmiBlitz3.ab3@22284>     MOVE.l mempool2,a0
0003139A <AmiBlitz3.ab3@22285>     JSR _FreePooled(A6)
0003139E <AmiBlitz3.ab3@22287>  BRA.w 'loop
000313A0 <AmiBlitz3.ab3@22290> RTS
000313A2 <AmiBlitz3.ab3@22297>   SWAP D0
000313A6 <AmiBlitz3.ab3@22298>    BSR.w pokedata2
000313A8 <AmiBlitz3.ab3@22299>   SWAP D0
000313AE <AmiBlitz3.ab3@22304>   MOVEA.l data2,A4
000313B4 <AmiBlitz3.ab3@22305>   CMPA.l allat,A4
000313B8 <AmiBlitz3.ab3@22306>    BCC.w 'over
000313BA <AmiBlitz3.ab3@22307>   MOVE.w D0,(A4)+
000313C0 <AmiBlitz3.ab3@22308>   MOVE.l A4,data2
000313C2 <AmiBlitz3.ab3@22309>  RTS
000313CA <AmiBlitz3.ab3@22312>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
000313D0 <AmiBlitz3.ab3@22313>   ADDQ.l #2,data2
000313D2 <AmiBlitz3.ab3@22314> RTS
000313D8 <AmiBlitz3.ab3@22318>   MOVEA.l data2,A4
000313DE <AmiBlitz3.ab3@22319>   CMPA.l allat,A4
000313E2 <AmiBlitz3.ab3@22320>    BCC.w 'over
000313E4 <AmiBlitz3.ab3@22321>   MOVE.b D0,(A4)+
000313EA <AmiBlitz3.ab3@22322>   MOVE.l A4,data2
000313EC <AmiBlitz3.ab3@22323>  RTS
000313F4 <AmiBlitz3.ab3@22326>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
000313FA <AmiBlitz3.ab3@22327>   ADDQ.l #1,data2
000313FC <AmiBlitz3.ab3@22328> RTS
00031400 <AmiBlitz3.ab3@22334>   CMP.w #$22,D0          ;'"'
00031404 <AmiBlitz3.ab3@22335>    BNE.w syntaxerr
0003140A <AmiBlitz3.ab3@22338>   JSR get1bytemain
0003140E <AmiBlitz3.ab3@22339>   CMP.b #$22,D0
00031412 <AmiBlitz3.ab3@22340>    BEQ.w 'done
00031414 <AmiBlitz3.ab3@22341>   TST.w D0
00031418 <AmiBlitz3.ab3@22342>    BEQ.w syntaxerr
0003141A <AmiBlitz3.ab3@22343>   MOVE.b D0,(A0)+
0003141E <AmiBlitz3.ab3@22344>  BRA.w 'getsp2
00031420 <AmiBlitz3.ab3@22347>   CLR.b (A0)
00031422 <AmiBlitz3.ab3@22348> RTS
00031424 <AmiBlitz3.ab3@22352>   TST.l D3
00031426 <AmiBlitz3.ab3@22353> RTS
0003142C <AmiBlitz3.ab3@22359>   LEA ptr_parameterstore,A0
00031432 <AmiBlitz3.ab3@22360>   LEA namebuff2,A1
00031434 <AmiBlitz3.ab3@22363>     MOVE.b (A0)+,D0
00031438 <AmiBlitz3.ab3@22364>     BEQ.w 'short
0003143A <AmiBlitz3.ab3@22365>   CMP.b (A1)+,D0
0003143E <AmiBlitz3.ab3@22366>   BEQ.w 'loop
00031440 <AmiBlitz3.ab3@22367>  RTS
00031442 <AmiBlitz3.ab3@22370>   TST.b (A1)
00031446 <AmiBlitz3.ab3@22371>   BNE.w 'lt
00031448 <AmiBlitz3.ab3@22372>  RTS
0003144C <AmiBlitz3.ab3@22375>   CMP.w #$1,D0
0003144E <AmiBlitz3.ab3@22376> RTS
00031452 <AmiBlitz3.ab3@22383>   CMP.w #$2E,D0                ;"."                            ;dodeftype
00031456 <AmiBlitz3.ab3@22384>    BNE.w syntaxerr
0003145A <AmiBlitz3.ab3@22385>   BSR.w getparameter2
00031460 <AmiBlitz3.ab3@22386>   LEA newtypebase,A2
00031464 <AmiBlitz3.ab3@22387>   BSR.w findtype
00031468 <AmiBlitz3.ab3@22388>    BNE.w notypeerr
0003146E <AmiBlitz3.ab3@22390>   TST.b declare
00031472 <AmiBlitz3.ab3@22391>    BNE 'l1
00031478 <AmiBlitz3.ab3@22392>   TST.b declare2
0003147C <AmiBlitz3.ab3@22393>    BEQ 'l2
00031484 <AmiBlitz3.ab3@22396>   MOVE.b #2,nowdeclare
0003148A <AmiBlitz3.ab3@22400>   JSR reget
0003148E <AmiBlitz3.ab3@22401>    BNE.w 'more
00031494 <AmiBlitz3.ab3@22402>   MOVE.l A2,defaulttype
00031496 <AmiBlitz3.ab3@22403>  RTS
0003149C <AmiBlitz3.ab3@22409>   MOVE.l defaulttype,-(A7)
000314A2 <AmiBlitz3.ab3@22410>   MOVE.l A2,defaulttype
000314A6 <AmiBlitz3.ab3@22413>   BSR.w getparameter
000314AA <AmiBlitz3.ab3@22414>    BSR.w fetchvars
000314AE <AmiBlitz3.ab3@22415>   CMP.w #$2C,D0            ;","
000314B2 <AmiBlitz3.ab3@22416>    BNE.w 'done
000314B8 <AmiBlitz3.ab3@22417>    JSR get1bytemain                                        ; was BSR.w
000314BC <AmiBlitz3.ab3@22418>  BRA.w 'loopz
000314C2 <AmiBlitz3.ab3@22421>   MOVE.l (A7)+,defaulttype
000314C4 <AmiBlitz3.ab3@22422> RTS
000314C8 <AmiBlitz3.ab3@22426>   LEA $4(A5),A2                                            ;fehler function
000314CA <AmiBlitz3.ab3@22429>   MOVE.l A2,D0
000314CE <AmiBlitz3.ab3@22434>   BSR.w getparameter
000314D2 <AmiBlitz3.ab3@22435>   BSR.w fetchvars
000314D6 <AmiBlitz3.ab3@22436>   BSR.w calcvar
000314DA <AmiBlitz3.ab3@22438>   CMP.b #$7,D2
000314DE <AmiBlitz3.ab3@22439>    BNE.w mismatcherr
000314E2 <AmiBlitz3.ab3@22440>   MOVE.w varmode(PC),-(A7)
000314E6 <AmiBlitz3.ab3@22441>   CMP.w #$3D,D0            ;"="
000314EA <AmiBlitz3.ab3@22442>    BNE.w syntaxerr
000314EE <AmiBlitz3.ab3@22443>   BTST #$F,D2
000314F2 <AmiBlitz3.ab3@22444>    BNE.w 'already
000314F6 <AmiBlitz3.ab3@22445>   MOVE.w maxprep1(PC),D1
000314FA <AmiBlitz3.ab3@22446>   BSR.w pokewda5s
000314FC <AmiBlitz3.ab3@22447>   MOVE.w D3,D1
00031500 <AmiBlitz3.ab3@22448>   BSR.w writeword
00031504 <AmiBlitz3.ab3@22451>   MOVE.w maxprep2(PC),D1
00031508 <AmiBlitz3.ab3@22452>   BSR.w writeword
0003150E <AmiBlitz3.ab3@22453>   ADDQ.w #1,regnum
00031510 <AmiBlitz3.ab3@22454>   MOVEQ.l #$03,D2
00031514 <AmiBlitz3.ab3@22455>   BSR.w eval
0003151A <AmiBlitz3.ab3@22456>   MOVE.l #$D000,D1              ; was #maxlen
00031520 <AmiBlitz3.ab3@22458>   MOVE.l d1,lastinstruction
00031522 <AmiBlitz3.ab3@22460>   TST.w (A7)+
00031526 <AmiBlitz3.ab3@22461>    BEQ.w Atokejsr
00031528 <AmiBlitz3.ab3@22462>   ADDQ.w #1,D1
0003152C <AmiBlitz3.ab3@22463> BRA.w Atokejsr
0003152E <AmiBlitz3.ab3@22467>   MOVE.w D0,D1
00031532 <AmiBlitz3.ab3@22468>    BPL.w syntaxerr
00031536 <AmiBlitz3.ab3@22469>   BCLR #$F,D1
0003153C <AmiBlitz3.ab3@22470>    JSR searchinstr
00031540 <AmiBlitz3.ab3@22471>   MOVE.l $12(A2),D0
00031544 <AmiBlitz3.ab3@22472>   TST.w -$2(A2,D0.L)
00031548 <AmiBlitz3.ab3@22473>    BEQ.w freeerr
0003154A <AmiBlitz3.ab3@22474>   MOVEQ.l #$02,D2
0003154C <AmiBlitz3.ab3@22475>   MOVE.l A2,-(A7)
00031550 <AmiBlitz3.ab3@22477>    BSR.w eval
00031552 <AmiBlitz3.ab3@22479>   MOVEA.l (A7)+,A2
00031558 <AmiBlitz3.ab3@22480>   MOVE.l A2,mymaxlib
0003155C <AmiBlitz3.ab3@22482>   ADDA.l $12(A2),A2
00031562 <AmiBlitz3.ab3@22483>   TST.b debugmode
00031566 <AmiBlitz3.ab3@22484>    BEQ.w 'pen
0003156C <AmiBlitz3.ab3@22488>   MOVE.w regnum,D1
0003156E <AmiBlitz3.ab3@22489>   LSL.w #8,D1
00031570 <AmiBlitz3.ab3@22490>   LSL.w #1,D1
00031574 <AmiBlitz3.ab3@22491>   ORI.w #$B07C,D1       ;cmp #x,dn
00031578 <AmiBlitz3.ab3@22492>    BSR.w writeword
0003157C <AmiBlitz3.ab3@22493>   MOVE.w -$4(A2),D1
00031580 <AmiBlitz3.ab3@22494>    BSR.w writeword
00031586 <AmiBlitz3.ab3@22495>   MOVE.l maxchk,D1      ;bcs
0003158A <AmiBlitz3.ab3@22496>    BSR.w writelong
0003158C <AmiBlitz3.ab3@22497>   MOVE.l A2,-(A7)
00031590 <AmiBlitz3.ab3@22498>   MOVE.w #$C30A,D1      ; was #maxerr,
00031594 <AmiBlitz3.ab3@22499>    BSR.w Atokejsr
00031596 <AmiBlitz3.ab3@22500>   MOVEA.l (A7)+,A2
0003159A <AmiBlitz3.ab3@22503>   MOVE.w -$2(A2),D2     ;# shifts
000315A0 <AmiBlitz3.ab3@22506>   MOVE.w regnum,D1
000315A6 <AmiBlitz3.ab3@22507>   OR.w lslimm,D1
000315AA <AmiBlitz3.ab3@22508>   CMP.w #$8,D2
000315AE <AmiBlitz3.ab3@22509>    BCS.w 'under
000315B2 <AmiBlitz3.ab3@22510>    BSR.w writeword
000315B4 <AmiBlitz3.ab3@22511>   SUBQ.w #8,D2
000315B8 <AmiBlitz3.ab3@22512>    BNE.w 'loop
000315BC <AmiBlitz3.ab3@22513>  BRA.w 'shdone
000315BE <AmiBlitz3.ab3@22516>   MOVE.w D2,D0
000315C0 <AmiBlitz3.ab3@22517>   LSL.w #8,D0
000315C2 <AmiBlitz3.ab3@22518>   LSL.w #1,D0
000315C4 <AmiBlitz3.ab3@22519>   OR.w D0,D1
000315C8 <AmiBlitz3.ab3@22520>   BSR.w writeword
000315CA <AmiBlitz3.ab3@22523> RTS
000315CE <AmiBlitz3.ab3@22528>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
000315D0 <AmiBlitz3.ab3@22529>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
000315D4 <AmiBlitz3.ab3@22533> mymaxlib:  Ds.l 1
000315D8 <AmiBlitz3.ab3@22537>   BSR.w getmaxel
000315DC <AmiBlitz3.ab3@22539>   LEA free(PC),A0
000315E0 <AmiBlitz3.ab3@22540>   LEA freef(PC),A1
000315E6 <AmiBlitz3.ab3@22541>   MOVE.w -$6(A2),$2(A0)
000315EA <AmiBlitz3.ab3@22542>   BSR.w pokecode
000315EE <AmiBlitz3.ab3@22544>   MOVE.l -$A(A2),D1
000315F2 <AmiBlitz3.ab3@22547>   BEQ.w nosuperr
000315F6 <AmiBlitz3.ab3@22548>   MOVEA.l mymaxlib(PC),A2
000315FA <AmiBlitz3.ab3@22549> BRA.w Amakelibsub
000315FE <AmiBlitz3.ab3@22553>   BSR.w getmaxel
00031604 <AmiBlitz3.ab3@22555>   LEA use,A0
0003160A <AmiBlitz3.ab3@22556>   LEA usef,A1
00031610 <AmiBlitz3.ab3@22557>   MOVE.w -$6(A2),$2(A0)
00031616 <AmiBlitz3.ab3@22558>   MOVE.w -$6(A2),-$2(A1)
0003161A <AmiBlitz3.ab3@22559>   ADDQ.w #4,-$2(A1)
0003161E <AmiBlitz3.ab3@22560>   BSR.w pokecode
00031622 <AmiBlitz3.ab3@22562>   MOVE.l -$E(A2),D1
00031626 <AmiBlitz3.ab3@22564> BRA.w maxjsr
0003162C <AmiBlitz3.ab3@22569>   JSR get1bytemain
00031632 <AmiBlitz3.ab3@22572>   MOVE.l firstiff,D0
00031636 <AmiBlitz3.ab3@22573>    BEQ.w noiferr
00031638 <AmiBlitz3.ab3@22574>   MOVEA.l D0,A0
0003163E <AmiBlitz3.ab3@22575>   CMPI.b #$1,$D(A0)
00031642 <AmiBlitz3.ab3@22576>    BEQ.w illelseerr
00031646 <AmiBlitz3.ab3@22577>   MOVE.w #$6000,D1
0003164C <AmiBlitz3.ab3@22580>     TST.b fast
00031650 <AmiBlitz3.ab3@22581>     BEQ 'l1
00031656 <AmiBlitz3.ab3@22582>     OR.l #$ff,d1
0003165A <AmiBlitz3.ab3@22583>     BSR writeword
0003165C <AmiBlitz3.ab3@22588>   SWAP D1
00031660 <AmiBlitz3.ab3@22589>   BSR.w writelong
00031662 <AmiBlitz3.ab3@22590>   MOVEQ.l #$00,D1
00031666 <AmiBlitz3.ab3@22591>   BSR.w doendif2
0003166E <AmiBlitz3.ab3@22592>   MOVE.l destpointer,$8(A0)
00031672 <AmiBlitz3.ab3@22593> BRA.w do_then
00031678 <AmiBlitz3.ab3@22597>   LEA ptr_parameterstore,A0
0003167A <AmiBlitz3.ab3@22598>   MOVE.l A0,-(A7)
0003167E <AmiBlitz3.ab3@22599>   BSR.w getsp
00031682 <AmiBlitz3.ab3@22600> BRA.w handle_compileerror
00031686 <AmiBlitz3.ab3@22604>   BSR.w evalconst
00031688 <AmiBlitz3.ab3@22605>   MOVEQ.l #$05,D1       ;beq
00031692 <AmiBlitz3.ab3@22608>   MOVE.w oldqflag,instringon
00031698 <AmiBlitz3.ab3@22609>   MOVEA.l lastsourcepos,A5
0003169E <AmiBlitz3.ab3@22611>   LEA numcom,A0
000316A2 <AmiBlitz3.ab3@22612> BRA.w compare
000316A8 <AmiBlitz3.ab3@22616>   LEA ptr_parameterstore,A0
000316AC <AmiBlitz3.ab3@22617>   BSR.w getsp
000316B2 <AmiBlitz3.ab3@22618>   JSR get1bytemain
000316B6 <AmiBlitz3.ab3@22619>   BSR.w collif
000316BC <AmiBlitz3.ab3@22620>   LEA namebuff2,A0
000316C0 <AmiBlitz3.ab3@22621>   BSR.w getsp
000316C6 <AmiBlitz3.ab3@22622>   LEA strcom,A0
000316C8 <AmiBlitz3.ab3@22630>   LSL.w #2,D1
000316CE <AmiBlitz3.ab3@22631>   LEA CIF_branches,A1
000316D2 <AmiBlitz3.ab3@22632>   MOVE.l $0(A1,D1.W),-(A7)
000316D4 <AmiBlitz3.ab3@22633>   MOVEQ.l #-$01,D1           ;comp flag
000316D6 <AmiBlitz3.ab3@22635>   JSR (A0)
000316D8 <AmiBlitz3.ab3@22637>   MOVEA.l (A7)+,A1
000316DA <AmiBlitz3.ab3@22638> JMP (A1)
000316DE <AmiBlitz3.ab3@22642>   BEQ.w cifdo
000316E2 <AmiBlitz3.ab3@22643> BRA.w cifdont
000316E6 <AmiBlitz3.ab3@22646>   BNE.w cifdo
000316EA <AmiBlitz3.ab3@22647> BRA.w cifdont
000316EE <AmiBlitz3.ab3@22650>   BLT.w cifdo
000316F2 <AmiBlitz3.ab3@22651> BRA.w cifdont
000316F6 <AmiBlitz3.ab3@22654>   BLE.w cifdo
000316FA <AmiBlitz3.ab3@22655> BRA.w cifdont
000316FE <AmiBlitz3.ab3@22658>   BGT.w cifdo
00031702 <AmiBlitz3.ab3@22659> BRA.w cifdont
00031706 <AmiBlitz3.ab3@22662>   BGE.w cifdo
00031708 <AmiBlitz3.ab3@22665>   MOVEQ.l #$00,D1
0003170E <AmiBlitz3.ab3@22668>   MOVEA.l concomsp,A0
00031714 <AmiBlitz3.ab3@22669>   MOVE.w skipcode,(A0)+
0003171A <AmiBlitz3.ab3@22670>   MOVE.l A0,concomsp
00031720 <AmiBlitz3.ab3@22671>   MOVE.w D1,skipcode
00031726 <AmiBlitz3.ab3@22672>   JSR get1bytemain
0003172A <AmiBlitz3.ab3@22673>    BNE.w syntaxerr
00031730 <AmiBlitz3.ab3@22674> JMP bakup
00031738 <AmiBlitz3.ab3@22678> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0003173C <AmiBlitz3.ab3@22679> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00031740 <AmiBlitz3.ab3@22686>   MOVE.w #$FC17,D1
00031746 <AmiBlitz3.ab3@22687>   JSR uselib
0003174C <AmiBlitz3.ab3@22689>   JSR reget
00031750 <AmiBlitz3.ab3@22690>    BEQ.w 'resbeg
00031754 <AmiBlitz3.ab3@22691>   BSR.w makealab2                                          ;get label name!
00031758 <AmiBlitz3.ab3@22692>   MOVE.w rescode(PC),D1
0003175C <AmiBlitz3.ab3@22693>   BSR.w writeword
00031762 <AmiBlitz3.ab3@22694>   JSR addoff                                               ;add offset
00031766 <AmiBlitz3.ab3@22695>   MOVE.l $C(A2),D1
0003176A <AmiBlitz3.ab3@22696>   BSR.w writelong
0003176E <AmiBlitz3.ab3@22697>   MOVE.w rescode+6(PC),D1
00031772 <AmiBlitz3.ab3@22698>   BSR.w writeword
00031776 <AmiBlitz3.ab3@22699>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0003177A <AmiBlitz3.ab3@22700>   BEQ.w 'no
0003177C <AmiBlitz3.ab3@22702>   MOVEA.l D1,A1
00031780 <AmiBlitz3.ab3@22703>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00031782 <AmiBlitz3.ab3@22704>  RTS
00031784 <AmiBlitz3.ab3@22709>  RTS
00031788 <AmiBlitz3.ab3@22712>   MOVE.w #$CD00,D1
0003178E <AmiBlitz3.ab3@22713>   JSR Atokejsr
00031792 <AmiBlitz3.ab3@22714>   MOVE.l rescode2(PC),D1
00031798 <AmiBlitz3.ab3@22715> JMP writelong
0003179C <AmiBlitz3.ab3@22719>   MOVE.w #$FC17,D1
000317A2 <AmiBlitz3.ab3@22720>   JSR uselib
000317A8 <AmiBlitz3.ab3@22723>   MOVE.l dataget,D1
000317AC <AmiBlitz3.ab3@22724>   BSR.w writelong
000317B0 <AmiBlitz3.ab3@22725>   BSR.w getparameter
000317B4 <AmiBlitz3.ab3@22726>   BSR.w fetchvars
000317B8 <AmiBlitz3.ab3@22727>   BSR.w calcvar
000317BC <AmiBlitz3.ab3@22728>   BTST #$E,D2
000317C0 <AmiBlitz3.ab3@22729>    BEQ.w 'notap
000317C4 <AmiBlitz3.ab3@22731>   MOVE.b #$6,D2      ;pointer becomes an address!
000317C6 <AmiBlitz3.ab3@22734>   TST.b D2
000317CA <AmiBlitz3.ab3@22735>    BEQ.w noleterr   ;read in a whole struct....later!
000317D0 <AmiBlitz3.ab3@22736>   TST.b debugmode
000317D4 <AmiBlitz3.ab3@22737>    BEQ.w 'norerr
000317D8 <AmiBlitz3.ab3@22739>   MOVE.w #$7000,D1
000317DA <AmiBlitz3.ab3@22740>   MOVE.b D2,D1
000317DE <AmiBlitz3.ab3@22741>   ANDI.b #$F,D1
000317E2 <AmiBlitz3.ab3@22742>   BSR.w writeword
000317E6 <AmiBlitz3.ab3@22743>   MOVE.w #$C310,D1     ; was  #datachk
000317E8 <AmiBlitz3.ab3@22744>   MOVE.w D2,-(A7)
000317EC <AmiBlitz3.ab3@22745>   BSR.w Atokejsr
000317EE <AmiBlitz3.ab3@22746>   MOVE.w (A7)+,D2
000317F2 <AmiBlitz3.ab3@22749>   CMP.b #$7,D2
000317F6 <AmiBlitz3.ab3@22750>    BEQ.w 'string
000317FA <AmiBlitz3.ab3@22751>   CMP.b #$1,D2
000317FE <AmiBlitz3.ab3@22752>    BNE.w 'notbyte
00031804 <AmiBlitz3.ab3@22754>   LEA dataletb2,A0
0003180A <AmiBlitz3.ab3@22755>   LEA dataletb2f,A1
0003180E <AmiBlitz3.ab3@22756>   BTST #$F,D2
00031812 <AmiBlitz3.ab3@22757>    BEQ.w 'bimm
00031816 <AmiBlitz3.ab3@22758>   BSR.w pokecode
0003181A <AmiBlitz3.ab3@22759>  BRA.w 'next
00031820 <AmiBlitz3.ab3@22762>   LEA dataletb,A0
00031826 <AmiBlitz3.ab3@22763>   LEA dataletbf,A1
0003182C <AmiBlitz3.ab3@22765>   TST.w varmode
00031830 <AmiBlitz3.ab3@22766>    BEQ.w 'byteglobal
00031836 <AmiBlitz3.ab3@22767>   LEA dataletbl,A0
0003183C <AmiBlitz3.ab3@22768>   LEA dataletblf,A1
00031840 <AmiBlitz3.ab3@22771>   MOVE.w D3,$4(A0)
00031844 <AmiBlitz3.ab3@22772>   BSR.w pokecode
00031848 <AmiBlitz3.ab3@22773>  BRA.w 'next
0003184E <AmiBlitz3.ab3@22776>   LEA dataletw,A0
00031852 <AmiBlitz3.ab3@22777>   CMP.b #$3,D2
00031856 <AmiBlitz3.ab3@22778>    BCS.w 'word
0003185C <AmiBlitz3.ab3@22779>   LEA dataletl,A0
00031860 <AmiBlitz3.ab3@22782>   BTST #$F,D2
00031864 <AmiBlitz3.ab3@22783>    BEQ.w 'imm
00031868 <AmiBlitz3.ab3@22784>   MOVE.w $4(A0),D1
0003186C <AmiBlitz3.ab3@22785>    BSR.w writeword
00031870 <AmiBlitz3.ab3@22786>  BRA.w 'next
00031876 <AmiBlitz3.ab3@22789>   TST.w varmode
0003187A <AmiBlitz3.ab3@22790>    BEQ.w 'wlglobal
0003187C <AmiBlitz3.ab3@22791>   ADDQ.w #6,A0
00031880 <AmiBlitz3.ab3@22794>   MOVE.w D3,$2(A0)
00031882 <AmiBlitz3.ab3@22795>   MOVE.l (A0),D1
00031886 <AmiBlitz3.ab3@22796>   BSR.w writelong
0003188C <AmiBlitz3.ab3@22799>   MOVE.l dataput,D1
00031890 <AmiBlitz3.ab3@22800>    BSR.w writelong
00031894 <AmiBlitz3.ab3@22801>   CMP.w #$2C,D0        ;','
00031898 <AmiBlitz3.ab3@22802>    BEQ.w 'more
0003189A <AmiBlitz3.ab3@22803>  RTS
000318A0 <AmiBlitz3.ab3@22806>   JSR get1bytemain
000318A4 <AmiBlitz3.ab3@22807>  BRA.w 'loop
000318AA <AmiBlitz3.ab3@22810>   MOVE.w stlenget,D1
000318AE <AmiBlitz3.ab3@22811>    BSR.w writeword     ;move.l (a3)+,-(a7)
000318B2 <AmiBlitz3.ab3@22812>   BTST #$F,D2
000318B6 <AmiBlitz3.ab3@22813>    BNE.w 'ok
000318BC <AmiBlitz3.ab3@22815>   TST.w varmode
000318C0 <AmiBlitz3.ab3@22816>    BEQ.w 'sglobal
000318C6 <AmiBlitz3.ab3@22817>   MOVE.w D3,leaampl+2
000318CC <AmiBlitz3.ab3@22818>   MOVE.l leaampl,D1
000318D0 <AmiBlitz3.ab3@22819>  BRA.w 'sskip
000318D6 <AmiBlitz3.ab3@22822>   MOVE.w D3,leaamp+2
000318DC <AmiBlitz3.ab3@22823>   MOVE.l leaamp,D1
000318E0 <AmiBlitz3.ab3@22826>   BSR.w writelong
000318E4 <AmiBlitz3.ab3@22829>   MOVE.w #$C701,D1     ;was  #astring
000318EA <AmiBlitz3.ab3@22830>   MOVE.w varmode,D2
000318EE <AmiBlitz3.ab3@22831>    BEQ.w 'global
000318F0 <AmiBlitz3.ab3@22832>   SUBQ.w #1,D1
000318F4 <AmiBlitz3.ab3@22835>   BSR.w Atokejsr
000318FC <AmiBlitz3.ab3@22836>   MOVE.w #$FFFF,lasta6    ; was -1
00031902 <AmiBlitz3.ab3@22837>   LEA stalign,A0
00031908 <AmiBlitz3.ab3@22838>   LEA stalignf,A1
0003190C <AmiBlitz3.ab3@22839>   BSR.w pokecode
00031910 <AmiBlitz3.ab3@22840> BRA.w 'next
00031914 <AmiBlitz3.ab3@22844>   CMP.w #$2E,D0        ;'.'                                    ;definecode 'lb 'lw 'll
00031918 <AmiBlitz3.ab3@22845>    BNE.w 'word
0003191E <AmiBlitz3.ab3@22846>   JSR get1bytemain
00031922 <AmiBlitz3.ab3@22847>   CMP.w #$77,D0        ;'w'
00031926 <AmiBlitz3.ab3@22848>    BEQ.w 'word2
0003192A <AmiBlitz3.ab3@22849>   CMP.w #$62,D0        ;'b'
0003192E <AmiBlitz3.ab3@22850>    BEQ.w 'byte
00031932 <AmiBlitz3.ab3@22852>   CMP.w #"s",d0        ;'s'
00031936 <AmiBlitz3.ab3@22853>   BEQ 'single3         
0003193A <AmiBlitz3.ab3@22854>   CMP.w #"d",d0        ;'d'
0003193E <AmiBlitz3.ab3@22855>   BEQ 'double3
00031942 <AmiBlitz3.ab3@22857>   CMP.w #$6C,D0        ;'l'
00031946 <AmiBlitz3.ab3@22858>    BNE.w syntaxerr
00031948 <AmiBlitz3.ab3@22859>   MOVEQ.l #$02,D1
0003194A <AmiBlitz3.ab3@22860>  RTS
00031952 <AmiBlitz3.ab3@22864>   MOVE.b #1,iee
00031954 <AmiBlitz3.ab3@22865>   MOVEQ.l #$3,d1
00031956 <AmiBlitz3.ab3@22866>  RTS
0003195E <AmiBlitz3.ab3@22869>   MOVE.b #1,iee
00031960 <AmiBlitz3.ab3@22870>   MOVEQ.l #$4,d1
00031962 <AmiBlitz3.ab3@22871>  RTS
00031964 <AmiBlitz3.ab3@22875>   MOVEQ.l #$00,D1
00031966 <AmiBlitz3.ab3@22876>  RTS
00031968 <AmiBlitz3.ab3@22879>   MOVEQ.l #$01,D1
0003196A <AmiBlitz3.ab3@22880>  RTS
0003196C <AmiBlitz3.ab3@22883>   MOVEQ.l #$01,D1
00031972 <AmiBlitz3.ab3@22884> JMP bakup
00031976 <AmiBlitz3.ab3@22888>   BSR.w getsize2
00031978 <AmiBlitz3.ab3@22890>   MOVE.w D1,-(A7)
0003197C <AmiBlitz3.ab3@22891>    BSR.w evalconst2
00031980 <AmiBlitz3.ab3@22892>   CMP.w #$2C,D0        ;','
00031984 <AmiBlitz3.ab3@22893>    BNE.w syntaxerr
00031986 <AmiBlitz3.ab3@22894>   MOVE.l D3,-(A7)
0003198A <AmiBlitz3.ab3@22895>    BSR.w evalconst2
0003198C <AmiBlitz3.ab3@22896>   MOVE.l D3,D1        ;to put in memory
0003198E <AmiBlitz3.ab3@22897>   MOVE.l (A7)+,D3     ;number of times
00031990 <AmiBlitz3.ab3@22898>   MOVE.w (A7)+,D2
00031994 <AmiBlitz3.ab3@22899>    BEQ.w 'byte
00031998 <AmiBlitz3.ab3@22905>   CMP.w #$1,D2
0003199C <AmiBlitz3.ab3@22906>    BEQ.w 'word
0003199E <AmiBlitz3.ab3@22909>   SWAP D1
000319A2 <AmiBlitz3.ab3@22910>    BSR.w writeword
000319A4 <AmiBlitz3.ab3@22911>   SWAP D1
000319A8 <AmiBlitz3.ab3@22912>    BSR.w writeword
000319AA <AmiBlitz3.ab3@22913>   SUBQ.l #1,D3
000319AE <AmiBlitz3.ab3@22914>    BNE.w 'long
000319B0 <AmiBlitz3.ab3@22915>  RTS
000319B4 <AmiBlitz3.ab3@22918>    BSR.w writeword
000319B6 <AmiBlitz3.ab3@22919>   SUBQ.l #1,D3
000319BA <AmiBlitz3.ab3@22920>    BNE.w 'word
000319BC <AmiBlitz3.ab3@22921>  RTS
000319C0 <AmiBlitz3.ab3@22924>    BSR.w writebyte
000319C2 <AmiBlitz3.ab3@22925>   SUBQ.l #1,D3
000319C6 <AmiBlitz3.ab3@22926>    BNE.w 'byte
000319C8 <AmiBlitz3.ab3@22927> RTS
000319CC <AmiBlitz3.ab3@22931>   BSR.w getsize2                                          ;definestorage
000319CE <AmiBlitz3.ab3@22932>   MOVE.w D1,-(A7)
000319D2 <AmiBlitz3.ab3@22933>   BSR.w evalconst3
000319D4 <AmiBlitz3.ab3@22934>   MOVE.w (A7)+,D1
000319D6 <AmiBlitz3.ab3@22935>   LSL.l D1,D3
000319D8 <AmiBlitz3.ab3@22937>   MOVE.l d3,d0
000319DC <AmiBlitz3.ab3@22938>   BEQ 'll5
000319DE <AmiBlitz3.ab3@22939>   MOVEQ #0,d1
000319E4 <AmiBlitz3.ab3@22942>     JSR writebyte
000319E6 <AmiBlitz3.ab3@22943>     SUBQ.l #1,d3
000319EA <AmiBlitz3.ab3@22944>   BNE.s 'll10
000319EC <AmiBlitz3.ab3@22949> RTS
000319EE <AmiBlitz3.ab3@22953>   MOVE.w D0,-(A7)
000319F4 <AmiBlitz3.ab3@22954>   LEA dummyasm,A0
000319FA <AmiBlitz3.ab3@22955>   MOVEA.l destpointer,A1
00031A04 <AmiBlitz3.ab3@22956>   MOVE.w asmlen2,asmlen
00031A0A <AmiBlitz3.ab3@22957>   JSR insasm
00031A0C <AmiBlitz3.ab3@22958>   MOVE.w (A7)+,D0
00031A0E <AmiBlitz3.ab3@22959> RTS
00031A12 <AmiBlitz3.ab3@22963>   BSR.w getsize2
00031A1C <AmiBlitz3.ab3@22965>   MOVE.l #ptr_parameterstore,asmbuff
00031A1E <AmiBlitz3.ab3@22966>   TST.w D1
00031A22 <AmiBlitz3.ab3@22967>    BEQ.w 'byte
00031A26 <AmiBlitz3.ab3@22968>   CMP.w #$1,D1
00031A2A <AmiBlitz3.ab3@22969>    BEQ.w 'word
00031A2E <AmiBlitz3.ab3@22971>   CMP.w #$2,d1
00031A32 <AmiBlitz3.ab3@22972>    BEQ 'long
00031A36 <AmiBlitz3.ab3@22973>   CMP.w #$3,d1
00031A3A <AmiBlitz3.ab3@22974>    BEQ 'single
00031A3C <AmiBlitz3.ab3@22979>    MOVEQ.l #$0d,D3
00031A42 <AmiBlitz3.ab3@22987>    JSR asmconst
00031A46 <AmiBlitz3.ab3@22988>    BSR.w insasm2
00031A4A <AmiBlitz3.ab3@22989>    BSR.w writelong
00031A4E <AmiBlitz3.ab3@22991>    BSR   writelong
00031A52 <AmiBlitz3.ab3@22993>   CMP.w #$2C,D0    ; ','
00031A56 <AmiBlitz3.ab3@22994>    BEQ.w 'lloop
00031A58 <AmiBlitz3.ab3@22995>  RTS
00031A5A <AmiBlitz3.ab3@22999>   MOVEQ.l #$0B,D3
00031A62 <AmiBlitz3.ab3@23003>   MOVE.b #1,_dcb
00031A68 <AmiBlitz3.ab3@23006>   JSR asmconst
00031A6E <AmiBlitz3.ab3@23007>   CLR.b _dcb
00031A72 <AmiBlitz3.ab3@23008>   BSR.w insasm2
00031A76 <AmiBlitz3.ab3@23009>   BSR writebyte
00031A7A <AmiBlitz3.ab3@23010>   BSR writebyte
00031A7E <AmiBlitz3.ab3@23011>   BSR writebyte                                            ;long
00031A82 <AmiBlitz3.ab3@23012>   BSR writebyte
00031A86 <AmiBlitz3.ab3@23013>   CMP.w #$2C,D0
00031A8A <AmiBlitz3.ab3@23014>    BEQ.w 'lloopb
00031A8C <AmiBlitz3.ab3@23015>  RTS
00031A8E <AmiBlitz3.ab3@23018>   MOVEQ.l #$0c,D3
00031A96 <AmiBlitz3.ab3@23022>   MOVE.b #1,_dcb
00031A9C <AmiBlitz3.ab3@23025>   JSR asmconst
00031AA2 <AmiBlitz3.ab3@23026>   CLR.b _dcb
00031AA6 <AmiBlitz3.ab3@23027>   BSR.w insasm2
00031AAA <AmiBlitz3.ab3@23028>   BSR.w writebyte
00031AAE <AmiBlitz3.ab3@23029>   BSR.w writebyte
00031AB2 <AmiBlitz3.ab3@23030>   BSR.w writebyte
00031AB6 <AmiBlitz3.ab3@23031>   BSR.w writebyte
00031ABA <AmiBlitz3.ab3@23032>   CMP.w #$2C,D0
00031ABE <AmiBlitz3.ab3@23033>    BEQ.w 'lloopa
00031AC0 <AmiBlitz3.ab3@23034>  RTS
00031AC2 <AmiBlitz3.ab3@23040>   MOVEQ.l #$11,D3
00031AC8 <AmiBlitz3.ab3@23043>   JSR get1bytemain
00031ACC <AmiBlitz3.ab3@23044>   CMP.w #$22,D0     ;'"'
00031AD0 <AmiBlitz3.ab3@23045>    BNE.w 'notq
00031AD2 <AmiBlitz3.ab3@23050>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00031AD6 <AmiBlitz3.ab3@23052>    BEQ.w syntaxerr
00031ADA <AmiBlitz3.ab3@23053>   CMP.w #$22,D0   ;'"'
00031ADE <AmiBlitz3.ab3@23054>    BEQ.w 'qdone
00031AE2 <AmiBlitz3.ab3@23056>   CMP.b #"\",d0
00031AE6 <AmiBlitz3.ab3@23057>    BNE 'n1
00031AEA <AmiBlitz3.ab3@23058>   CMP.b #"\",(a5)
00031AEE <AmiBlitz3.ab3@23059>    BEQ 'do1
00031AF0 <AmiBlitz3.ab3@23063>   MOVE.w D0,D1
00031AF4 <AmiBlitz3.ab3@23064>   BSR.w writebyte
00031AF8 <AmiBlitz3.ab3@23065>  BRA.w 'qloop
00031B00 <AmiBlitz3.ab3@23069>   CMP.l #"__DA",1(a5)
00031B04 <AmiBlitz3.ab3@23070>    BNE 'nodate1
00031B0C <AmiBlitz3.ab3@23071>   CMP.l #"TE__",5(a5)
00031B10 <AmiBlitz3.ab3@23072>    BEQ 'c1
00031B18 <AmiBlitz3.ab3@23073>   CMP.l #"TE_G",5(a5)
00031B1C <AmiBlitz3.ab3@23074>    BNE 'nodate1
00031B24 <AmiBlitz3.ab3@23075>   CMP.l #"ER__",9(a5)
00031B28 <AmiBlitz3.ab3@23076>    BNE 'nodate1
00031B2E <AmiBlitz3.ab3@23077>   JSR compiledatedc_ger
00031B32 <AmiBlitz3.ab3@23078>  BRA 'n1
00031B38 <AmiBlitz3.ab3@23081>   JSR compiledatedc
00031B3C <AmiBlitz3.ab3@23082>  BRA 'n1
00031B44 <AmiBlitz3.ab3@23085>   CMP.l #"__VE",1(a5)
00031B48 <AmiBlitz3.ab3@23086>    BNE 'n1
00031B4E <AmiBlitz3.ab3@23087>   CMP.w #"R_",5(a5)
00031B52 <AmiBlitz3.ab3@23088>    BNE 'n1
00031B58 <AmiBlitz3.ab3@23089>   JSR version_string_dc
00031B5C <AmiBlitz3.ab3@23090>  BRA.w 'qloop
00031B62 <AmiBlitz3.ab3@23094>   CLR.w instringon
00031B68 <AmiBlitz3.ab3@23096>   JSR get1bytemain
00031B6C <AmiBlitz3.ab3@23097>  BRA.w 'bdone
00031B76 <AmiBlitz3.ab3@23102>    MOVE.w oldqflag,instringon
00031B7C <AmiBlitz3.ab3@23103>   MOVEA.l lastsourcepos,A5
00031B82 <AmiBlitz3.ab3@23105>    JSR asmconst
00031B88 <AmiBlitz3.ab3@23106>   SUBQ.l #1,destpointer
00031B8C <AmiBlitz3.ab3@23107>    BSR.w insasm2
00031B92 <AmiBlitz3.ab3@23108>   ADDQ.l #1,destpointer
00031B96 <AmiBlitz3.ab3@23109>    BSR.w writebyte
00031B9A <AmiBlitz3.ab3@23112>   CMP.w #$2C,D0   ;','
00031B9E <AmiBlitz3.ab3@23113>    BEQ.w 'bloop
00031BA0 <AmiBlitz3.ab3@23114>  RTS
00031BA2 <AmiBlitz3.ab3@23117>   MOVEQ.l #$10,D3
00031BAA <AmiBlitz3.ab3@23126>   MOVE.b #1,_dcb
00031BB0 <AmiBlitz3.ab3@23128>   JSR asmconst
00031BB6 <AmiBlitz3.ab3@23130>   CLR.b _dcb
00031BBA <AmiBlitz3.ab3@23132>   BSR.w insasm2
00031BBE <AmiBlitz3.ab3@23135>   BSR.w writebyte
00031BC2 <AmiBlitz3.ab3@23136>   BSR.w writebyte
00031BC6 <AmiBlitz3.ab3@23138>   CMP.w #$2C,D0      ;','
00031BCA <AmiBlitz3.ab3@23139>    BEQ.w 'wloop
00031BCC <AmiBlitz3.ab3@23140> RTS
00031BD2 <AmiBlitz3.ab3@23144>   ADDQ.l #3,destpointer
00031BDA <AmiBlitz3.ab3@23145>   ANDI.w #$FFFC,destpointer+2
00031BDC <AmiBlitz3.ab3@23146> RTS
00031BE2 <AmiBlitz3.ab3@23150>   ADDQ.l #7,destpointer
00031BEA <AmiBlitz3.ab3@23151>   ANDI.w #$FFF8,destpointer+2
00031BEC <AmiBlitz3.ab3@23152> RTS
00031BF2 <AmiBlitz3.ab3@23156>   ADDQ.l #1,destpointer                                    ;even
00031BFA <AmiBlitz3.ab3@23157>   BCLR #$0,destpointer+3
00031BFC <AmiBlitz3.ab3@23158> RTS
00031BFE <AmiBlitz3.ab3@23161> datasize: Ds.w 1
00031C04 <AmiBlitz3.ab3@23171>   TST.b debugmode
00031C08 <AmiBlitz3.ab3@23172>   BEQ.w 'skip
00031C0C <AmiBlitz3.ab3@23173>   MOVE.w #$4420,D0                                         ;'D '
00031C10 <AmiBlitz3.ab3@23174>   MOVE.b datasize+1(PC),D0
00031C14 <AmiBlitz3.ab3@23175>  BRA.w pokedata2
00031C16 <AmiBlitz3.ab3@23178> RTS
00031C1A <AmiBlitz3.ab3@23182>   MOVE.w #$FC17,D1           ;#64535
00031C20 <AmiBlitz3.ab3@23183>    JSR uselib
00031C2A <AmiBlitz3.ab3@23186>    MOVE.w oldqflag,instringon
00031C30 <AmiBlitz3.ab3@23187>   MOVEA.l lastsourcepos,A5
00031C36 <AmiBlitz3.ab3@23189>    JSR sizespec2        ;get size of it into d1
00031C3C <AmiBlitz3.ab3@23190>   MOVE.w D1,datasize
00031C40 <AmiBlitz3.ab3@23194>   CMP.w #$7,D1
00031C44 <AmiBlitz3.ab3@23195>    BEQ.w 'string
00031C46 <AmiBlitz3.ab3@23197>   MOVE.w D1,-(A7)
00031C4A <AmiBlitz3.ab3@23200>   BSR.w pdt
00031C4C <AmiBlitz3.ab3@23201>   MOVE.w (A7),D2
00031C50 <AmiBlitz3.ab3@23202>    BSR.w fetchdata
00031C52 <AmiBlitz3.ab3@23203>   CMP.w (A7),D2                                            ;datamode
00031C56 <AmiBlitz3.ab3@23204>    BEQ.w 'dataok
00031C58 <AmiBlitz3.ab3@23206>   MOVE.w D2,D1
00031C5A <AmiBlitz3.ab3@23207>   MOVE.w (A7),D2
00031C5E <AmiBlitz3.ab3@23208>   CMP.w #$2,D2
00031C62 <AmiBlitz3.ab3@23209>    BNE.w 'notw
00031C66 <AmiBlitz3.ab3@23210>   CMP.w #$3,D1
00031C6A <AmiBlitz3.ab3@23211>    BNE.w baddaterr
00031C70 <AmiBlitz3.ab3@23212>   CMP.l #$10000,D3        ; was  #65536
00031C74 <AmiBlitz3.ab3@23213>    BCC.w baddaterr
00031C78 <AmiBlitz3.ab3@23214>  BRA.w 'dataok
00031C7C <AmiBlitz3.ab3@23217>   CMP.w #$1,D2
00031C80 <AmiBlitz3.ab3@23218>    BNE.w 'notb
00031C84 <AmiBlitz3.ab3@23219>   CMP.w #$2,D1
00031C88 <AmiBlitz3.ab3@23220>    BNE.w baddaterr
00031C8E <AmiBlitz3.ab3@23221>   CMP.l #$100,D3
00031C92 <AmiBlitz3.ab3@23222>    BCC.w baddaterr
00031C96 <AmiBlitz3.ab3@23223>  BRA.w 'dataok
00031C9A <AmiBlitz3.ab3@23226>  BRA.w baddaterr
00031C9E <AmiBlitz3.ab3@23229>   CMP.w #$3,D2
00031CA2 <AmiBlitz3.ab3@23230>   BCC.w 'notword
00031CA6 <AmiBlitz3.ab3@23231>   BSR.w pokedata2
00031CAA <AmiBlitz3.ab3@23232>  BRA.w 'next
00031CB0 <AmiBlitz3.ab3@23236>   TST.b iee
00031CB4 <AmiBlitz3.ab3@23237>   BEQ 'old
00031CB8 <AmiBlitz3.ab3@23238>   CMP.b #5,d2
00031CBC <AmiBlitz3.ab3@23239>   BNE 'old
00031CC0 <AmiBlitz3.ab3@23240>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031CC4 <AmiBlitz3.ab3@23245>   BSR.w pokedata2l                                          ;write data >3
00031CCA <AmiBlitz3.ab3@23248>   JSR reget
00031CCE <AmiBlitz3.ab3@23249>   CMP.w #$2C,D0     ;','
00031CD2 <AmiBlitz3.ab3@23250>    BEQ.w 'more
00031CD4 <AmiBlitz3.ab3@23251>   ADDQ.w #2,A7
00031CD6 <AmiBlitz3.ab3@23252>  RTS
00031CDA <AmiBlitz3.ab3@23255>    BSR.w pdt
00031CE0 <AmiBlitz3.ab3@23256>   MOVE.l data2,-(A7)
00031CE4 <AmiBlitz3.ab3@23257>    BSR.w pokedata2l
00031CE6 <AmiBlitz3.ab3@23258>   MOVEQ.l #$00,D1
00031CEC <AmiBlitz3.ab3@23260>    JSR get1bytemain
00031CF0 <AmiBlitz3.ab3@23261>    BEQ.w 'done
00031CF4 <AmiBlitz3.ab3@23262>   CMP.w #$22,D0       ;'"'
00031CF8 <AmiBlitz3.ab3@23263>    BEQ.w 'quoted
00031CFC <AmiBlitz3.ab3@23264>   CMP.w #$2C,D0       ;','
00031D00 <AmiBlitz3.ab3@23265>    BEQ.w 'done
00031D04 <AmiBlitz3.ab3@23268>    BSR.w pokedata2b
00031D06 <AmiBlitz3.ab3@23269>   ADDQ.w #1,D1
00031D0C <AmiBlitz3.ab3@23270>    JSR getchar
00031D0E <AmiBlitz3.ab3@23271>   TST.w D0
00031D12 <AmiBlitz3.ab3@23272>    BEQ.w 'done
00031D16 <AmiBlitz3.ab3@23273>   CMP.w #$2C,D0
00031D1A <AmiBlitz3.ab3@23274>    BEQ.w 'done       ;','
00031D1E <AmiBlitz3.ab3@23275>  BRA.w 'loop2
00031D20 <AmiBlitz3.ab3@23280>    MOVEQ #0,d0
00031D22 <AmiBlitz3.ab3@23281>    MOVE.b (a5)+,d0
00031D26 <AmiBlitz3.ab3@23283>    BEQ.w notqerr2
00031D2A <AmiBlitz3.ab3@23284>   CMP.w #$22,D0       ;'"'
00031D2E <AmiBlitz3.ab3@23285>    BEQ.w 'done2
00031D32 <AmiBlitz3.ab3@23286>    BSR.w pokedata2b
00031D34 <AmiBlitz3.ab3@23287>   ADDQ.w #1,D1
00031D38 <AmiBlitz3.ab3@23288>  BRA.w 'quoted
00031D3E <AmiBlitz3.ab3@23292>   CLR.w instringon
00031D44 <AmiBlitz3.ab3@23294>   JSR get1bytemain
00031D46 <AmiBlitz3.ab3@23297>   MOVEA.l (A7)+,A0
00031D4C <AmiBlitz3.ab3@23298>   MOVE.w dontwrite_nomemleft,D2
00031D50 <AmiBlitz3.ab3@23299>    BNE.w 'nopoke
00031D52 <AmiBlitz3.ab3@23300>   MOVE.l D1,(A0)
00031D58 <AmiBlitz3.ab3@23303>   ADDQ.l #1,data2
00031D60 <AmiBlitz3.ab3@23304>   BCLR #$0,data2+3
00031D64 <AmiBlitz3.ab3@23305>   CMP.w #$2C,D0      ;','
00031D68 <AmiBlitz3.ab3@23306>    BEQ.w 'string
00031D6A <AmiBlitz3.ab3@23307> RTS
00031D70 <AmiBlitz3.ab3@23311> notqerr2           JMP notqerr
00031D76 <AmiBlitz3.ab3@23312> JUMP_vardeclareerr JMP vardeclareerr
00031D7C <AmiBlitz3.ab3@23320>   MOVE.w proceduremode,D1                                  ;doshared
00031D80 <AmiBlitz3.ab3@23323>   BNE.w 'l1
00031D82 <AmiBlitz3.ab3@23324>   MOVE.w D1,-(A7)
00031D88 <AmiBlitz3.ab3@23325>   CLR.w proceduremode
00031D8E <AmiBlitz3.ab3@23328>   LEA varbase,a2
00031D92 <AmiBlitz3.ab3@23329>   BSR.w getparameter
00031D94 <AmiBlitz3.ab3@23330>   MOVE.w d2,-(a7)
00031D9A <AmiBlitz3.ab3@23331>    JSR findvariable
00031D9E <AmiBlitz3.ab3@23332>    BEQ 'checkdim
00031DA4 <AmiBlitz3.ab3@23333>    LEA sharebase,a2
00031DA6 <AmiBlitz3.ab3@23334>    MOVEQ #$f+4,d7
00031DAA <AmiBlitz3.ab3@23335>    BSR.w findlab                                         ;find var
00031DAE <AmiBlitz3.ab3@23336>    BEQ.b dupsherr
00031DB2 <AmiBlitz3.ab3@23337>    BSR addlabel
00031DB6 <AmiBlitz3.ab3@23338>    CMP.b #".",d0
00031DBA <AmiBlitz3.ab3@23339>    BNE JUMP_vardeclareerr
00031DBC <AmiBlitz3.ab3@23340>    MOVE.l a2,a3
00031DC2 <AmiBlitz3.ab3@23341>    JSR claptonb       ; jump to a copy of fvaradd 'clapton
00031DC4 <AmiBlitz3.ab3@23372>   MOVE.w (a7)+,d2
00031DC8 <AmiBlitz3.ab3@23373>    CMP.b #",",d0
00031DCC <AmiBlitz3.ab3@23374>    BNE 'ret
00031DD2 <AmiBlitz3.ab3@23375>    JSR get1bytemain
00031DD6 <AmiBlitz3.ab3@23376>  BRA 'again2
00031DDC <AmiBlitz3.ab3@23379>   MOVE.w (A7)+,proceduremode
00031DDE <AmiBlitz3.ab3@23380>  RTS
00031DE4 <AmiBlitz3.ab3@23383>    CMP.w #2,6(a2)
00031DE8 <AmiBlitz3.ab3@23384>    BEQ 'do
00031DEE <AmiBlitz3.ab3@23385>    CMP.w #$102,6(a2)
00031DF2 <AmiBlitz3.ab3@23386>    BEQ 'do
00031DF8 <AmiBlitz3.ab3@23387>  JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031DFE <AmiBlitz3.ab3@23390>   LEA varbase,a0
00031E00 <AmiBlitz3.ab3@23393>   MOVE.l (A0),D0                                           ;find label
00031E04 <AmiBlitz3.ab3@23394>    BEQ.b 'z1
00031E06 <AmiBlitz3.ab3@23395>    CMP.l d0,a2
00031E0A <AmiBlitz3.ab3@23396>    BEQ 'z1
00031E0C <AmiBlitz3.ab3@23397>    MOVE.l d0,a0
00031E10 <AmiBlitz3.ab3@23398>  BRA 'm1
00031E12 <AmiBlitz3.ab3@23401>   MOVE.l (a2),d1
00031E14 <AmiBlitz3.ab3@23402>     MOVE.l d1,(a0)
00031E16 <AmiBlitz3.ab3@23403>     CLR.l (a2)
00031E1C <AmiBlitz3.ab3@23404>     LEA sharebase,a0
00031E1E <AmiBlitz3.ab3@23405>     MOVE.l (a0),(a2)
00031E20 <AmiBlitz3.ab3@23406>     MOVE.l a2,(a0)
00031E26 <AmiBlitz3.ab3@23407>     JSR get1bytemain
00031E2C <AmiBlitz3.ab3@23408>     JSR get1bytemain
00031E30 <AmiBlitz3.ab3@23409>  BRA 'domore
00031E38 <AmiBlitz3.ab3@23412>   MOVE.b #1,nowdeclare
00031E3A <AmiBlitz3.ab3@23414>   MOVE.w D1,-(A7)
00031E40 <AmiBlitz3.ab3@23415>   CLR.w proceduremode
00031E44 <AmiBlitz3.ab3@23418>    BSR.w getparameter
00031E46 <AmiBlitz3.ab3@23419>   MOVE.w D2,-(A7)
00031E4C <AmiBlitz3.ab3@23421>   LEA firstglob,A2
00031E50 <AmiBlitz3.ab3@23422>    BSR.w findvariable2
00031E54 <AmiBlitz3.ab3@23423>    BNE.b 'notfound
00031E5A <AmiBlitz3.ab3@23426>   MOVE.b flagmask+1,D1
00031E5E <AmiBlitz3.ab3@23427>   MOVE.b $7(A2),D3
00031E60 <AmiBlitz3.ab3@23428>   EOR.b D3,D1
00031E64 <AmiBlitz3.ab3@23429>    BEQ.w dupsherr
00031E68 <AmiBlitz3.ab3@23430>    BSR.w findlab
00031E6C <AmiBlitz3.ab3@23431>    BEQ.b 'try2
00031E70 <AmiBlitz3.ab3@23434>    BSR.w addlabel
00031E72 <AmiBlitz3.ab3@23435>   MOVE.w (A7)+,D2
00031E74 <AmiBlitz3.ab3@23436>   MOVE.l A2,-(A7)   ;new glob
00031E78 <AmiBlitz3.ab3@23437>    BSR.w fetchvars     
00031E7A <AmiBlitz3.ab3@23438>   MOVEA.l (A7)+,A2
00031E7C <AmiBlitz3.ab3@23439>   MOVEQ.l #$04,D1
00031E7E <AmiBlitz3.ab3@23440>   ADDQ.w #4,A2
00031E80 <AmiBlitz3.ab3@23441>   ADDQ.w #4,A3
00031E82 <AmiBlitz3.ab3@23444>     MOVE.w (A3)+,(A2)+
00031E86 <AmiBlitz3.ab3@23445>   DBF D1,'loop
00031E8E <AmiBlitz3.ab3@23447>   BTST #$1,flagmask+1
00031E92 <AmiBlitz3.ab3@23448>    BEQ.w 'done
00031E98 <AmiBlitz3.ab3@23449>    JSR get1bytemain
00031E9C <AmiBlitz3.ab3@23450>   CMP.w #$29,D0         ;')'
00031EA0 <AmiBlitz3.ab3@23451>    BNE.w JUMP_syntaxerr
00031EA6 <AmiBlitz3.ab3@23452>    JSR get1bytemain
00031EAA <AmiBlitz3.ab3@23455>    CMP.w #$2C,D0         ;','
00031EAE <AmiBlitz3.ab3@23456>    BNE.w 'done2
00031EB4 <AmiBlitz3.ab3@23457>    JSR get1bytemain
00031EB8 <AmiBlitz3.ab3@23458>  BRA.w 'loop2
00031EBE <AmiBlitz3.ab3@23461>   MOVE.w (A7)+,proceduremode
00031EC0 <AmiBlitz3.ab3@23462> RTS
00031EC4 <AmiBlitz3.ab3@23469>    BSR.w makeiname
00031ECA <AmiBlitz3.ab3@23470>    JSR check_incdir                                        ; ergebnis in d2
00031ED0 <AmiBlitz3.ab3@23472>    LEA ptr_parameterstore,a1
00031ED2 <AmiBlitz3.ab3@23473>    MOVE.l d2,-(a7)
00031ED8 <AmiBlitz3.ab3@23474>    LEA includetemp,a0                                      ; filename in includetemp packen
00031EDA <AmiBlitz3.ab3@23477>      MOVE.b (a1)+,(a0)+
00031EDE <AmiBlitz3.ab3@23478>    BNE 'l4
00031EE4 <AmiBlitz3.ab3@23480>    LEA ptr_parameterstore,a1
00031EE6 <AmiBlitz3.ab3@23481>    MOVE.l a1,a0
00031EE8 <AmiBlitz3.ab3@23484>     TST.b (a0)+
00031EEC <AmiBlitz3.ab3@23485>    BNE 'l1
00031EEE <AmiBlitz3.ab3@23488>      MOVE.b -(a0),d0
00031EF2 <AmiBlitz3.ab3@23489>      CMP.b #":",d0
00031EF6 <AmiBlitz3.ab3@23490>       BEQ 'out
00031EFA <AmiBlitz3.ab3@23491>      CMP.b #"/",d0
00031EFE <AmiBlitz3.ab3@23492>       BEQ 'out
00031F00 <AmiBlitz3.ab3@23493>      CMP.l a1,a0
00031F04 <AmiBlitz3.ab3@23494>       BEQ 'out2
00031F08 <AmiBlitz3.ab3@23495>  BRA 'l2
00031F0A <AmiBlitz3.ab3@23498>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031F0C <AmiBlitz3.ab3@23501>    MOVEQ.l #-$01,D2
00031F0E <AmiBlitz3.ab3@23504>      ADDQ.w #1,D2
00031F10 <AmiBlitz3.ab3@23505>      MOVE.b (a0)+,(a1)+
00031F14 <AmiBlitz3.ab3@23506>    BNE 'l3
00031F16 <AmiBlitz3.ab3@23507>    CLR.b (a1)+
00031F1C <AmiBlitz3.ab3@23509>    LEA ptr_parameterstore,a1
00031F20 <AmiBlitz3.ab3@23510>    BSR.w findxinc                                         ;find include
00031F24 <AmiBlitz3.ab3@23511>     BEQ.w 'outb
00031F26 <AmiBlitz3.ab3@23513>    MOVE.w D2,-(A7)
00031F2A <AmiBlitz3.ab3@23514>    BSR.w addlabel
00031F2C <AmiBlitz3.ab3@23515>    MOVE.w (A7)+,D2
00031F32 <AmiBlitz3.ab3@23517>    LEA ptr_parameterstore,a1
00031F38 <AmiBlitz3.ab3@23518>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031F3A <AmiBlitz3.ab3@23521>     MOVE.b (a0)+,(a1)+
00031F3E <AmiBlitz3.ab3@23522>    BNE 'l4b
00031F40 <AmiBlitz3.ab3@23524>    MOVE.l (a7)+,d2
00031F46 <AmiBlitz3.ab3@23525>    LEA ptr_parameterstore,a1
00031F4A <AmiBlitz3.ab3@23527>  BRA.w doinc2
00031F50 <AmiBlitz3.ab3@23531>    LEA ptr_parameterstore,a1
00031F56 <AmiBlitz3.ab3@23532>    LEA includetemp,a0
00031F58 <AmiBlitz3.ab3@23535>     MOVE.b (a0)+,(a1)+
00031F5C <AmiBlitz3.ab3@23536>    BNE 'l4b2
00031F5E <AmiBlitz3.ab3@23538>    MOVE.l (a7)+,d2
00031F64 <AmiBlitz3.ab3@23539>    LEA ptr_parameterstore,a1
00031F66 <AmiBlitz3.ab3@23541> RTS
00031F6A <AmiBlitz3.ab3@23545>   BSR.w makeiname                                              ; test and get the parameter (includestring)
00031F70 <AmiBlitz3.ab3@23549>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00031F76 <AmiBlitz3.ab3@23551>   MOVEA.l _dosbase,A6
00031F78 <AmiBlitz3.ab3@23553>   MOVE.l D0,D7                                                 ; store Lockpointer
00031F7C <AmiBlitz3.ab3@23554>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00031F7E <AmiBlitz3.ab3@23555>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031F84 <AmiBlitz3.ab3@23556>   MOVE.l ptr_macrobuffer_begin,D2
00031F88 <AmiBlitz3.ab3@23557>    JSR _Examine(A6)
00031F8E <AmiBlitz3.ab3@23558>   MOVEA.l ptr_macrobuffer_begin,A0
00031F92 <AmiBlitz3.ab3@23559>   MOVE.l $4(A0),D0
00031F96 <AmiBlitz3.ab3@23560>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031F9A <AmiBlitz3.ab3@23561>   MOVE.l $7C(A0),D3      ;length                                       ; store the size of the file to include
00031F9C <AmiBlitz3.ab3@23562>   MOVE.l D7,D1                                                 ; begin unlock the file
00031FA0 <AmiBlitz3.ab3@23563>    JSR _UnLock(A6)
00031FA6 <AmiBlitz3.ab3@23565>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031FAC <AmiBlitz3.ab3@23566>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031FB0 <AmiBlitz3.ab3@23567>    JSR _Open(A6)
00031FB2 <AmiBlitz3.ab3@23568>   MOVE.l D0,D7
00031FB6 <AmiBlitz3.ab3@23569>    BEQ.w error_cant_open_include
00031FBC <AmiBlitz3.ab3@23570>   MOVE.l destpointer,D0
00031FBE <AmiBlitz3.ab3@23571>   ADD.l D3,D0
00031FC4 <AmiBlitz3.ab3@23572>   CMP.l destbufferend,D0
00031FC8 <AmiBlitz3.ab3@23573>    BHI.w 'over
00031FCE <AmiBlitz3.ab3@23574>   MOVE.l destpointer,D2
00031FD0 <AmiBlitz3.ab3@23575>   MOVE.l D7,D1
00031FD4 <AmiBlitz3.ab3@23576>    JSR _Read(A6)
00031FDA <AmiBlitz3.ab3@23577>   CMP.l #$FFFFFFFF,D0              ; was -1
00031FDE <AmiBlitz3.ab3@23578>    BEQ.w error_reading_file
00031FE4 <AmiBlitz3.ab3@23579>   ADD.l D0,destpointer
00031FE8 <AmiBlitz3.ab3@23580>  BRA.w 'close
00031FF0 <AmiBlitz3.ab3@23583>   MOVE.w #$FFFF,dontwrite_nomemleft          ; was -1
00031FF6 <AmiBlitz3.ab3@23584>   MOVE.l D0,destpointer
00031FF8 <AmiBlitz3.ab3@23587>   MOVE.l D7,D1
00031FFC <AmiBlitz3.ab3@23588> JMP _Close(A6)
00032002 <AmiBlitz3.ab3@23591> JUMP_illdirerr JMP illdirerr
00032008 <AmiBlitz3.ab3@23597>   TST.w dirmode                                            ;include  open
0003200C <AmiBlitz3.ab3@23598>    BNE.w JUMP_illdirerr
00032010 <AmiBlitz3.ab3@23600>   BSR.w makeiname
00032016 <AmiBlitz3.ab3@23602>   JSR check_incdir
0003201A <AmiBlitz3.ab3@23606>   BSR.w findconstant
0003201E <AmiBlitz3.ab3@23607>    BEQ.w alincerr
00032024 <AmiBlitz3.ab3@23609>   LEA constantbase,A2
00032028 <AmiBlitz3.ab3@23610>   BSR.w addhere2
0003202C <AmiBlitz3.ab3@23612>   CLR.w $C(A2)
00032030 <AmiBlitz3.ab3@23613>   CLR.l $4(A2)
00032036 <AmiBlitz3.ab3@23615>   MOVE.l #ptr_parameterstore,D1
00032038 <AmiBlitz3.ab3@23616>   MOVE.l d1,a0
0003203E <AmiBlitz3.ab3@23617>   LEA includetemp2,a1
00032040 <AmiBlitz3.ab3@23620>     MOVE.b (a0)+,(a1)+
00032044 <AmiBlitz3.ab3@23621>   BNE 'l1
0003204A <AmiBlitz3.ab3@23622>   JSR save_includename
00032054 <AmiBlitz3.ab3@23623>   MOVE.l #0,include_process
0003205C <AmiBlitz3.ab3@23625>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00032060 <AmiBlitz3.ab3@23626>   BEQ 'ok
00032068 <AmiBlitz3.ab3@23627>   CMP.l #$61623300,-4(a0)                                  ;.ab3
0003206C <AmiBlitz3.ab3@23628>   BEQ 'ok_tokenize
00032074 <AmiBlitz3.ab3@23629>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00032078 <AmiBlitz3.ab3@23630>   BEQ 'ok_tokenize
00032080 <AmiBlitz3.ab3@23631>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00032084 <AmiBlitz3.ab3@23632>   BEQ 'ok
0003208A <AmiBlitz3.ab3@23633>  JMP errortoken                                             ;can only include
00032094 <AmiBlitz3.ab3@23636>    MOVE.l #-1,include_process                              ; must tokenize the include
0003209A <AmiBlitz3.ab3@23639>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000320A0 <AmiBlitz3.ab3@23640>   MOVEA.l _dosbase,A6
000320A4 <AmiBlitz3.ab3@23641>   JSR _Open(A6)
000320A8 <AmiBlitz3.ab3@23642>   MOVE.l D0,$8(A2)
000320AC <AmiBlitz3.ab3@23643>   BEQ.w error_cant_open_include
000320B2 <AmiBlitz3.ab3@23644>   CLR.l includeline
000320B6 <AmiBlitz3.ab3@23645>   MOVE.l 8(a2),d1
000320B8 <AmiBlitz3.ab3@23646>   MOVE.l d3,-(a7)
000320BA <AmiBlitz3.ab3@23647>   MOVEQ #0,d2
000320BC <AmiBlitz3.ab3@23648>   MOVEQ #1,d3
000320C0 <AmiBlitz3.ab3@23649>   JSR _Seek(a6)                                            ; -66
000320C4 <AmiBlitz3.ab3@23650>   MOVE.l 8(a2),d1
000320C6 <AmiBlitz3.ab3@23651>   MOVEQ #0,d2
000320C8 <AmiBlitz3.ab3@23652>   MOVEQ #-1,d3
000320CC <AmiBlitz3.ab3@23653>   JSR _Seek(a6)                                            ; -66
000320CE <AmiBlitz3.ab3@23654>   MOVE.l (a7)+,d3
000320D0 <AmiBlitz3.ab3@23655>   ADDQ.l #4,d0
000320D6 <AmiBlitz3.ab3@23659>   MOVE.l #$10000,D1
000320DC <AmiBlitz3.ab3@23661>   MOVEA.l _execbase,A6
000320E0 <AmiBlitz3.ab3@23665>   JSR _AllocVec(a6)
000320E4 <AmiBlitz3.ab3@23669>   MOVE.l D0,$4(A2)
000320E8 <AmiBlitz3.ab3@23670>   MOVE.l D0,$E(A2)
000320EA <AmiBlitz3.ab3@23671>   MOVEA.l D0,A5
000320F0 <AmiBlitz3.ab3@23679>   ADDQ.w #1,ininclude                                      ;enter include
000320F6 <AmiBlitz3.ab3@23683>   LEA _include,a0
000320FA <AmiBlitz3.ab3@23684>   MOVEM.l a0-a6/d0-d7,-(a7)
00032100 <AmiBlitz3.ab3@23685>   LEA ptr_parameterstore,a1
00032102 <AmiBlitz3.ab3@23688>     MOVE.b (a0)+,(a1)+
00032106 <AmiBlitz3.ab3@23689>   BNE 'l1b
00032108 <AmiBlitz3.ab3@23691>   MOVEQ #9,d2
0003210E <AmiBlitz3.ab3@23692>   JSR findlabel2
00032112 <AmiBlitz3.ab3@23693>   BNE 'd
0003211A <AmiBlitz3.ab3@23694>   MOVE.l #1,8(a2)
0003211E <AmiBlitz3.ab3@23695>   MOVEM.l (a7)+,a0-a6/d0-d7
00032122 <AmiBlitz3.ab3@23696>  BRA 'd2
00032128 <AmiBlitz3.ab3@23699>   JSR addlabelhash
00032130 <AmiBlitz3.ab3@23700>   MOVE.l #$1,$4(A2)
00032138 <AmiBlitz3.ab3@23701>   MOVE.l #1,8(a2)
0003213C <AmiBlitz3.ab3@23702>   MOVEM.l (a7)+,a0-a6/d0-d7
00032142 <AmiBlitz3.ab3@23705>   LEA inctab,a0
00032144 <AmiBlitz3.ab3@23706>   MOVEQ #0,d1
0003214A <AmiBlitz3.ab3@23707>   MOVE.w ininclude,d1
0003214E <AmiBlitz3.ab3@23708>   CLR.l $0(a0,d1*4)
00032154 <AmiBlitz3.ab3@23710>   MOVEA.l passstack,A7
0003215A <AmiBlitz3.ab3@23711> JMP passnxt
00032160 <AmiBlitz3.ab3@23714> JUMP_dupmacerr  JMP dupmacerr
00032166 <AmiBlitz3.ab3@23715> JUMP_macenderr  JMP macenderr
0003216C <AmiBlitz3.ab3@23716> JUMP_macnesterr JMP macnesterr
0003216E <AmiBlitz3.ab3@23719> coolnest:   Ds.w 1
00032172 <AmiBlitz3.ab3@23720> macline:    Ds.l 1
0003217C <AmiBlitz3.ab3@23726>   MOVE.l linenumat,macline
00032180 <AmiBlitz3.ab3@23728>    BSR.w makename2
00032184 <AmiBlitz3.ab3@23729>    BEQ.w JUMP_syntaxerr
0003218A <AmiBlitz3.ab3@23731>    CLR.b thenmode
00032194 <AmiBlitz3.ab3@23735>    MOVE.w oldqflag,instringon
0003219A <AmiBlitz3.ab3@23736>   MOVEA.l lastsourcepos,A5
0003219E <AmiBlitz3.ab3@23738>    BSR.w findmac
000321A2 <AmiBlitz3.ab3@23739>    BEQ.w JUMP_dupmacerr
000321A6 <AmiBlitz3.ab3@23740>    BSR.w addlabel
000321AA <AmiBlitz3.ab3@23741>   CLR.w $A(A2)
000321B0 <AmiBlitz3.ab3@23742>   MOVEA.l ptr_macrobuffer_begin,A0
000321B2 <AmiBlitz3.ab3@23743>   MOVEQ.l #$00,D2     ;flag for nothing got yet!
000321B8 <AmiBlitz3.ab3@23744>   CLR.w coolnest
000321BA <AmiBlitz3.ab3@23748>   MOVE.b (a5),d0
000321BE <AmiBlitz3.ab3@23749>      BEQ 'l3
000321C2 <AmiBlitz3.ab3@23750>      CMP.b #" ",d0
000321C6 <AmiBlitz3.ab3@23751>       BNE 'l2                                              ;space macro
000321C8 <AmiBlitz3.ab3@23752>       ADDQ.l #1,a5
000321CC <AmiBlitz3.ab3@23753>  BRA 'l1
000321D0 <AmiBlitz3.ab3@23756>    CMP.b #";",d0
000321D4 <AmiBlitz3.ab3@23757>       BNE 'l3
000321D6 <AmiBlitz3.ab3@23760>    MOVE.b (a5),d0
000321DA <AmiBlitz3.ab3@23761>       BEQ 'l5
000321DE <AmiBlitz3.ab3@23762>       BSR.w macputb                                      ;add comment
000321E0 <AmiBlitz3.ab3@23763>       ADDQ.l #1,a5
000321E4 <AmiBlitz3.ab3@23764>  BRA 'l4
000321E8 <AmiBlitz3.ab3@23767>    MOVE.b #":",d0
000321EC <AmiBlitz3.ab3@23768>       BSR.w macputb
000321F0 <AmiBlitz3.ab3@23769>       MOVE.b #"@",d0
000321F4 <AmiBlitz3.ab3@23770>       BSR.w macputb
000321FC <AmiBlitz3.ab3@23773>    MOVE.b #0,temp
00032204 <AmiBlitz3.ab3@23774>       MOVE.b #0,thenmode
0003220A <AmiBlitz3.ab3@23777>   JSR getcharb   ;get next character
0003220C <AmiBlitz3.ab3@23779>   TST.w D0
00032210 <AmiBlitz3.ab3@23780>    BNE.w 'skip
00032214 <AmiBlitz3.ab3@23781>   MOVEM.l D2/A0/A2,-(A7)
0003221A <AmiBlitz3.ab3@23783>   CMP.w #"@@",-3(a5)
0003221E <AmiBlitz3.ab3@23784>   BNE 'l2a
00032224 <AmiBlitz3.ab3@23785>   JSR nextline
00032228 <AmiBlitz3.ab3@23786>   BEQ.w JUMP_macenderr
0003222C <AmiBlitz3.ab3@23787>   MOVEM.l (A7)+,D2/A0/A2
00032230 <AmiBlitz3.ab3@23788>  BRA.w 'gather
00032236 <AmiBlitz3.ab3@23792>    JSR nextline
0003223A <AmiBlitz3.ab3@23793>    BEQ.w JUMP_macenderr
0003223E <AmiBlitz3.ab3@23794>   MOVEM.l (A7)+,D2/A0/A2
00032240 <AmiBlitz3.ab3@23795>   TST.w D2
00032244 <AmiBlitz3.ab3@23796>    BEQ.w 'gather
00032246 <AmiBlitz3.ab3@23800>   MOVE.b (a5),d0
0003224A <AmiBlitz3.ab3@23801>       CMP.b #" ",d0
0003224E <AmiBlitz3.ab3@23802>       BNE 'l1a
00032250 <AmiBlitz3.ab3@23803>       ADDQ.w #1,a5
00032254 <AmiBlitz3.ab3@23804>  BRA 'l2b
0003225A <AmiBlitz3.ab3@23807>   TST.b thenmode
0003225E <AmiBlitz3.ab3@23808>      BEQ 'l3a
00032260 <AmiBlitz3.ab3@23809>      MOVEQ #":",d0
00032264 <AmiBlitz3.ab3@23810>      BSR.w macputb
00032268 <AmiBlitz3.ab3@23811>      MOVE.w #-$7FFE,D0                                     ;write end if
0003226C <AmiBlitz3.ab3@23812>      BSR macputw
00032270 <AmiBlitz3.ab3@23813>      MOVE.w #$800b,d0
00032274 <AmiBlitz3.ab3@23814>      BSR.w macputw
0003227A <AmiBlitz3.ab3@23815>      CLR.b thenmode
0003227C <AmiBlitz3.ab3@23819>    MOVEQ.l #$3A,D0
00032284 <AmiBlitz3.ab3@23821>      MOVE.b #1,temp
00032288 <AmiBlitz3.ab3@23824>  BRA.w 'notend2
0003228C <AmiBlitz3.ab3@23827>   BPL.w 'notend2
00032290 <AmiBlitz3.ab3@23828>   CMP.w #-$7FF3,D0         ; was #$800d                                ;macro ?
00032294 <AmiBlitz3.ab3@23829>    BNE.w 'notamac
0003229A <AmiBlitz3.ab3@23830>   ADDQ.w #1,coolnest
0003229E <AmiBlitz3.ab3@23831>  BRA.w 'notend
000322A2 <AmiBlitz3.ab3@23835>   CMP.w #$80d7,d0                                          ;object ?
000322A6 <AmiBlitz3.ab3@23836>     BNE 'l1x
000322AC <AmiBlitz3.ab3@23837>     TST.b objectcount
000322B0 <AmiBlitz3.ab3@23838>     BNE JUMP_macnesterr
000322B4 <AmiBlitz3.ab3@23841>   CMP.w #$8021,d0
000322B8 <AmiBlitz3.ab3@23842>     BNE 'nothen
000322C0 <AmiBlitz3.ab3@23843>     MOVE.b #1,thenmode
000322C6 <AmiBlitz3.ab3@23846>   TST.b thenmode
000322CA <AmiBlitz3.ab3@23847>         BEQ 'l1c
000322CE <AmiBlitz3.ab3@23848>    CMP.w #$8002,d0                                         ;end if
000322D2 <AmiBlitz3.ab3@23849>    BNE 'l1c
000322D6 <AmiBlitz3.ab3@23850>    MOVEM.l d0/a5,-(a7)
000322DC <AmiBlitz3.ab3@23851>    JSR get1bytemain
000322DE <AmiBlitz3.ab3@23852>    MOVE.w d0,d1
000322E2 <AmiBlitz3.ab3@23853>    MOVEM.l (a7)+,a5/d0
000322E6 <AmiBlitz3.ab3@23854>    CMP.w #$800b,d1
000322EA <AmiBlitz3.ab3@23855>    BNE 'l1c
000322F0 <AmiBlitz3.ab3@23856>    CLR.b thenmode
000322F4 <AmiBlitz3.ab3@23860>    CMP.w #-$7FFE,D0   ; was #$8002                                     ;end ?
000322F8 <AmiBlitz3.ab3@23861>    BNE.w 'notend
000322FA <AmiBlitz3.ab3@23863>    MOVE.l a5,-(a7)
00032300 <AmiBlitz3.ab3@23864>    JSR get1bytemain
00032302 <AmiBlitz3.ab3@23865>    MOVE.l (a7)+,a5
00032304 <AmiBlitz3.ab3@23866>    TST.w d0
00032308 <AmiBlitz3.ab3@23867>    BEQ 'doend
0003230C <AmiBlitz3.ab3@23868>    CMP.w #":",d0
00032310 <AmiBlitz3.ab3@23869>    BEQ 'doend
00032314 <AmiBlitz3.ab3@23870>    CMP.w #";",d0
00032318 <AmiBlitz3.ab3@23871>    BEQ 'doend
0003231A <AmiBlitz3.ab3@23872>    MOVE.l a5,-(a7)
00032320 <AmiBlitz3.ab3@23873>    JSR get1bytemain
00032324 <AmiBlitz3.ab3@23874>    MOVE.l -1(a5),d0
00032326 <AmiBlitz3.ab3@23875>    MOVE.l (a7)+,a5
0003232C <AmiBlitz3.ab3@23876>    CMP.l #"noa7",d0
00032330 <AmiBlitz3.ab3@23877>    BEQ 'doend
00032334 <AmiBlitz3.ab3@23878>  BRA 'morechar
00032338 <AmiBlitz3.ab3@23881>   MOVE.w #$8002,D0
0003233C <AmiBlitz3.ab3@23882>    BSR.w macputw
00032340 <AmiBlitz3.ab3@23883>  BRA 'gather
00032346 <AmiBlitz3.ab3@23887>   JSR get1bytemain
0003234A <AmiBlitz3.ab3@23888>    CMP.w #-$7FF3,D0        ;was #$800d,                                ;end macro
0003234E <AmiBlitz3.ab3@23890>    BEQ.w 'lo1
00032352 <AmiBlitz3.ab3@23891>   CMP.w #$80d7,d0                                          ;end object
00032356 <AmiBlitz3.ab3@23893>   BNE 'notem
0003235C <AmiBlitz3.ab3@23895>   SUBQ.b #1,objectcount
00032362 <AmiBlitz3.ab3@23896>   TST.b developobject
00032366 <AmiBlitz3.ab3@23897>   BEQ 'lo1
0003236A <AmiBlitz3.ab3@23898>   BSR skiprest
0003236C <AmiBlitz3.ab3@23899>  RTS
00032372 <AmiBlitz3.ab3@23903>   SUBQ.w #1,coolnest
00032376 <AmiBlitz3.ab3@23904>    BMI.w 'macdone
00032378 <AmiBlitz3.ab3@23907>   MOVE.w D0,-(A7)
0003237C <AmiBlitz3.ab3@23908>   MOVE.w #$8002,D0
00032380 <AmiBlitz3.ab3@23909>    BSR.w macputw
00032382 <AmiBlitz3.ab3@23910>   MOVE.w (A7)+,D0
00032386 <AmiBlitz3.ab3@23911>  BRA.w 'notend
0003238A <AmiBlitz3.ab3@23914>   BSR.w macputw
0003238E <AmiBlitz3.ab3@23915>  BRA.w 'gather
00032394 <AmiBlitz3.ab3@23919>     CMP.w #"@@",-1(a5)                                     ;merge lines
00032398 <AmiBlitz3.ab3@23920>     BNE 'no
0003239C <AmiBlitz3.ab3@23921>      MOVEM.l D2/A0/A2,-(A7)
000323A2 <AmiBlitz3.ab3@23922>    JSR nextline
000323A6 <AmiBlitz3.ab3@23923>    BEQ.w JUMP_macenderr
000323AA <AmiBlitz3.ab3@23924>   MOVEM.l (A7)+,D2/A0/A2
000323AC <AmiBlitz3.ab3@23925>     TST.w D2
000323B0 <AmiBlitz3.ab3@23926>    BEQ.w 'gather
000323B4 <AmiBlitz3.ab3@23927>  BRA 'gather
000323B8 <AmiBlitz3.ab3@23931>   BSR.w macputb
000323BC <AmiBlitz3.ab3@23932>  BRA.w 'gather
000323BE <AmiBlitz3.ab3@23935>   ADDQ.w #4,A7
000323C0 <AmiBlitz3.ab3@23936>   MOVE.l A0,D0
000323C6 <AmiBlitz3.ab3@23937>   SUB.l ptr_macrobuffer_begin,D0
000323CA <AmiBlitz3.ab3@23943>    BEQ.w 'cdone
000323CE <AmiBlitz3.ab3@23944>   CMPI.b #":",-(A0)
000323D2 <AmiBlitz3.ab3@23945>    BNE.w 'cdone
000323D6 <AmiBlitz3.ab3@23946>   CMP.w #$1,D0
000323DA <AmiBlitz3.ab3@23947>    BEQ.w 'cdo
000323DE <AmiBlitz3.ab3@23948>   TST.b -$1(A0)
000323E2 <AmiBlitz3.ab3@23949>    BMI.w 'cdone
000323E4 <AmiBlitz3.ab3@23952>   SUBQ.w #1,D0
000323E8 <AmiBlitz3.ab3@23953>  BRA.w 'mclean
000323EC <AmiBlitz3.ab3@23956>   MOVE.w D0,$8(A2)
000323F0 <AmiBlitz3.ab3@23957>    BEQ.w 'skip2
000323F2 <AmiBlitz3.ab3@23958>   MOVEQ.l #$01,D1
000323F8 <AmiBlitz3.ab3@23959>   MOVEA.l _execbase,A6
000323FE <AmiBlitz3.ab3@23961>   MOVE.l mempool,a0
00032402 <AmiBlitz3.ab3@23962>   JSR _AllocPooled(a6)
00032404 <AmiBlitz3.ab3@23965>   MOVEA.l D0,A0
00032408 <AmiBlitz3.ab3@23966>   MOVE.l A0,$4(A2)
0003240C <AmiBlitz3.ab3@23967>   MOVE.w $8(A2),D1
00032410 <AmiBlitz3.ab3@23968>    BEQ.w 'skip2
00032412 <AmiBlitz3.ab3@23969>   SUBQ.w #1,D1
00032418 <AmiBlitz3.ab3@23970>   MOVEA.l ptr_macrobuffer_begin,A1
0003241A <AmiBlitz3.ab3@23973>     MOVE.b (A1)+,(A0)+
0003241E <AmiBlitz3.ab3@23974>   DBF D1,'lll
00032424 <AmiBlitz3.ab3@23977> JMP get1bytemain
00032426 <AmiBlitz3.ab3@23981>   MOVE.w D0,D1
00032428 <AmiBlitz3.ab3@23982>   LSR.w #8,D1
0003242A <AmiBlitz3.ab3@23983>   MOVE.b D1,(A0)+
0003242C <AmiBlitz3.ab3@23986>   MOVEQ.l #-$01,D2
0003242E <AmiBlitz3.ab3@23987>   MOVE.b D0,(A0)+
00032434 <AmiBlitz3.ab3@23988>   CMPA.l ptr_macrobuffer_end,A0
00032438 <AmiBlitz3.ab3@23989>    BCC.w macbigerr2
0003243A <AmiBlitz3.ab3@23990> RTS
00032440 <AmiBlitz3.ab3@23993> macbigerr2 JMP macbigerr
00032442 <AmiBlitz3.ab3@23997>   MOVE.l d0,-(a7)
00032444 <AmiBlitz3.ab3@23998>   MOVEQ #0,d0
0003244A <AmiBlitz3.ab3@23999>   CLR.b skiptoggle
0003244C <AmiBlitz3.ab3@24002>     MOVE.b (a5),d0
00032450 <AmiBlitz3.ab3@24003>     BEQ 'l3
00032454 <AmiBlitz3.ab3@24004>     CMP.b #";",d0
00032458 <AmiBlitz3.ab3@24005>     BNE 'l2
00032460 <AmiBlitz3.ab3@24006>     MOVE.b #1,skiptoggle
00032466 <AmiBlitz3.ab3@24009>     TST.b skiptoggle
0003246A <AmiBlitz3.ab3@24010>     BNE 'l4
0003246E <AmiBlitz3.ab3@24011>     CMP.b #":",d0
00032472 <AmiBlitz3.ab3@24012>     BEQ 'l3
00032474 <AmiBlitz3.ab3@24015>     ADDQ #1,a5
00032478 <AmiBlitz3.ab3@24016>  BRA 'loop
0003247E <AmiBlitz3.ab3@24019>   MOVE.w d0,lastchar
00032480 <AmiBlitz3.ab3@24020>   MOVE.l (a7)+,d0
00032482 <AmiBlitz3.ab3@24021> RTS
00032486 <AmiBlitz3.ab3@24028>   BSR.w ifchar
0003248A <AmiBlitz3.ab3@24029>    BNE.w JUMP_syntaxerr
0003248C <AmiBlitz3.ab3@24030>   MOVE.w D0,D1
00032492 <AmiBlitz3.ab3@24031>   JSR get1bytemain
00032496 <AmiBlitz3.ab3@24032>   BSR.w ifchar
0003249A <AmiBlitz3.ab3@24033>    BNE.w 'skip
0003249C <AmiBlitz3.ab3@24034>   ADDQ.w #1,D0
0003249E <AmiBlitz3.ab3@24035>   MOVE.w D0,D2
000324A0 <AmiBlitz3.ab3@24036>   ADD.w D0,D0
000324A2 <AmiBlitz3.ab3@24037>   ADD.w D2,D0
000324A4 <AmiBlitz3.ab3@24038>   ADD.w D0,D1
000324A6 <AmiBlitz3.ab3@24039>   MOVE.w D1,D0
000324AA <AmiBlitz3.ab3@24040>   ANDI.w #$3,D0
000324AE <AmiBlitz3.ab3@24041>   CMP.w #$3,D0
000324B2 <AmiBlitz3.ab3@24042>    BEQ.w JUMP_syntaxerr
000324B8 <AmiBlitz3.ab3@24044>   JSR get1bytemain
000324BA <AmiBlitz3.ab3@24047> RTS
000324BC <AmiBlitz3.ab3@24050> thetst1:  TST.b D0
000324BE <AmiBlitz3.ab3@24051> thetst2:  TST.w D0
000324C0 <AmiBlitz3.ab3@24052> thetst3:  TST.l D0
000324C2 <AmiBlitz3.ab3@24053> thetst4:  TST.l (A7)+                                      ;Any Length?
000324C6 <AmiBlitz3.ab3@24054> thetst5:  JSR _Reschedule(A6)
000324CA <AmiBlitz3.ab3@24056> posbr:    BEQ.w posbr
000324CE <AmiBlitz3.ab3@24057> negbr:    BNE.w negbr
000324D0 <AmiBlitz3.ab3@24061>   MOVEQ.l #-$01,D2
000324D4 <AmiBlitz3.ab3@24062> BRA.w doifm
000324DA <AmiBlitz3.ab3@24066>   CLR.l fp0addr
000324DC <AmiBlitz3.ab3@24067>   MOVEQ.l #$01,D1                                          ;while flag
000324DE <AmiBlitz3.ab3@24068>   MOVEQ.l #$00,D2                                          ;negate flag
000324E2 <AmiBlitz3.ab3@24069> BRA.w doif2
000324E8 <AmiBlitz3.ab3@24073>   LEA firstrep,A2
000324EA <AmiBlitz3.ab3@24074>   MOVEQ.l #$08,D2
000324EE <AmiBlitz3.ab3@24075> BRA.w freeslist
000324F2 <AmiBlitz3.ab3@24079>   LEA firstsel(PC),A2
000324F4 <AmiBlitz3.ab3@24080>   MOVEQ.l #$0E,D2
000324F6 <AmiBlitz3.ab3@24085>   MOVEQ.l #$00,D3
000324F8 <AmiBlitz3.ab3@24093>   MOVE.l (A2),D0
000324FA <AmiBlitz3.ab3@24094>   CLR.l (A2)
000324FC <AmiBlitz3.ab3@24095>   MOVEA.l D0,A2
00032502 <AmiBlitz3.ab3@24096>   MOVEA.l _execbase,A6
00032506 <AmiBlitz3.ab3@24099>     CMPA.w #$0,A2
0003250A <AmiBlitz3.ab3@24100>      BEQ.w 'done
0003250C <AmiBlitz3.ab3@24101>     TST.w D3
00032510 <AmiBlitz3.ab3@24102>      BEQ.w 'skip
00032514 <AmiBlitz3.ab3@24103>     MOVEM.l D2-D3/A2,-(A7)
00032516 <AmiBlitz3.ab3@24104>     ADDA.w D3,A2
00032518 <AmiBlitz3.ab3@24105>     MOVE.l D4,D2
0003251C <AmiBlitz3.ab3@24106>     BSR.w freeslist
00032520 <AmiBlitz3.ab3@24107>     MOVEM.l (A7)+,D2-D3/A2
00032522 <AmiBlitz3.ab3@24110>     MOVEA.l A2,A1
00032524 <AmiBlitz3.ab3@24111>     MOVE.l D2,D0
00032526 <AmiBlitz3.ab3@24112>     MOVEA.l (A2),A2
0003252C <AmiBlitz3.ab3@24113>     MOVE.l mempool,a0
00032530 <AmiBlitz3.ab3@24114>     JSR _FreePooled(A6)
00032534 <AmiBlitz3.ab3@24115>  BRA.w 'loop
00032536 <AmiBlitz3.ab3@24118> RTS
0003253C <AmiBlitz3.ab3@24120> JUMP_eselerr JMP eselerr
00032540 <AmiBlitz3.ab3@24123> firstsel:  Ds.l 1
00032544 <AmiBlitz3.ab3@24126> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00032546 <AmiBlitz3.ab3@24129> selpushw:   MOVE.w D0,-(A7)
00032548 <AmiBlitz3.ab3@24131> selpushl:   MOVE.l D0,-(A7)
0003254C <AmiBlitz3.ab3@24133> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00032550 <AmiBlitz3.ab3@24136> selcomb:    ANDI.w #$FF,D0
00032552 <AmiBlitz3.ab3@24137> selcomw:    CMP.w (A7),D0
00032554 <AmiBlitz3.ab3@24139> selcoml:    CMP.l (A7),D0
00032558 <AmiBlitz3.ab3@24141> selbne:     BNE.w selbne
0003255A <AmiBlitz3.ab3@24143> endsel:     ADDQ.w #8,A7
0003255E <AmiBlitz3.ab3@24149>   MOVE.l firstsel(PC),D0                                  
00032562 <AmiBlitz3.ab3@24150>    BEQ.w JUMP_eselerr
00032564 <AmiBlitz3.ab3@24151>   MOVEA.l D0,A2
00032568 <AmiBlitz3.ab3@24152>    BSR.w fillbne
0003256E <AmiBlitz3.ab3@24155>   MOVEA.l _execbase,A6
00032572 <AmiBlitz3.ab3@24158>   MOVE.l $4(A2),D0
00032576 <AmiBlitz3.ab3@24159>    BEQ.w 'done
00032578 <AmiBlitz3.ab3@24160>   MOVEA.l D0,A3
0003257C <AmiBlitz3.ab3@24161>   MOVEA.l $4(A3),A0
00032582 <AmiBlitz3.ab3@24162>   MOVE.l destpointer,D1
00032584 <AmiBlitz3.ab3@24163>   SUB.l A0,D1
0003258A <AmiBlitz3.ab3@24165>     TST.b fast
0003258E <AmiBlitz3.ab3@24166>     BEQ 'loop_l1
00032594 <AmiBlitz3.ab3@24167>     MOVE.w dontwrite_nomemleft,D0
00032598 <AmiBlitz3.ab3@24168>     BNE.w 'skip
0003259A <AmiBlitz3.ab3@24169>     ADDQ.l #2,d1
0003259E <AmiBlitz3.ab3@24170>     MOVE.l d1,-2(a0)
000325A2 <AmiBlitz3.ab3@24171>   BRA 'skip
000325A8 <AmiBlitz3.ab3@24175>   TST.w dontwrite_nomemleft
000325AC <AmiBlitz3.ab3@24176>      BNE.w 'skip
000325B2 <AmiBlitz3.ab3@24177>   CMP.l #MaxWordSgnd,D1
000325B6 <AmiBlitz3.ab3@24178>    BHI.w JUMP_cbraerr
000325B8 <AmiBlitz3.ab3@24179>   MOVE.w D1,(A0)
000325BC <AmiBlitz3.ab3@24182>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
000325BE <AmiBlitz3.ab3@24183>   MOVEA.l A3,A1
000325C0 <AmiBlitz3.ab3@24184>   MOVEQ.l #$08,D0
000325C6 <AmiBlitz3.ab3@24185>   MOVE.l mempool,a0
000325CA <AmiBlitz3.ab3@24186>    JSR _FreePooled(A6)
000325CE <AmiBlitz3.ab3@24187>  BRA.w 'loop
000325D4 <AmiBlitz3.ab3@24190>   JSR popselect                                            ;fix stack on select
000325D8 <AmiBlitz3.ab3@24191>   MOVEA.l firstsel(PC),A1
000325DE <AmiBlitz3.ab3@24192>   MOVE.l (A1),firstsel
000325E0 <AmiBlitz3.ab3@24193>   MOVEQ.l #$0E,D0
000325E6 <AmiBlitz3.ab3@24194>   MOVEA.l _execbase,A6
000325EC <AmiBlitz3.ab3@24195>   MOVE.l mempool,a0
000325F0 <AmiBlitz3.ab3@24196>   JSR _FreePooled(A6)
000325F6 <AmiBlitz3.ab3@24197> JMP get1bytemain
000325F8 <AmiBlitz3.ab3@24201>   MOVEA.l (A7)+,A1
000325FA <AmiBlitz3.ab3@24202>   SUBQ.w #8,A1
000325FC <AmiBlitz3.ab3@24203>   MOVEQ.l #$09,D0
000325FE <AmiBlitz3.ab3@24204>   ADD.l (A1),D0
00032600 <AmiBlitz3.ab3@24207>   ADDQ.w #2,A7                                             ;for runtime errs!
00032604 <AmiBlitz3.ab3@24212>   MOVE.l firstsel(PC),D0
00032608 <AmiBlitz3.ab3@24213>    BEQ.w JUMP_defaerr
0003260A <AmiBlitz3.ab3@24214>   MOVEA.l D0,A2
0003260E <AmiBlitz3.ab3@24215>   BSR.w fillbra
00032612 <AmiBlitz3.ab3@24216>   BSR.w fillbne
00032616 <AmiBlitz3.ab3@24217>   CLR.l $8(A2)
0003261A <AmiBlitz3.ab3@24218>   MOVE.w $C(A2),D2
0003261E <AmiBlitz3.ab3@24219> BRA.w casechk
00032624 <AmiBlitz3.ab3@24221> JUMP_defaerr JMP defaerr
00032628 <AmiBlitz3.ab3@24226>   MOVE.l $8(A2),D0
0003262C <AmiBlitz3.ab3@24227>    BEQ.w 'skip   ;none to do!
0003262E <AmiBlitz3.ab3@24228>   MOVEA.l D0,A0
00032634 <AmiBlitz3.ab3@24229>   MOVE.l destpointer,D1
00032636 <AmiBlitz3.ab3@24230>   SUB.l A0,D1
0003263C <AmiBlitz3.ab3@24233>     TST.b fast
00032640 <AmiBlitz3.ab3@24234>     BEQ 'l1
00032646 <AmiBlitz3.ab3@24235>     TST.w dontwrite_nomemleft
0003264A <AmiBlitz3.ab3@24236>     BNE.w 'skip
0003264C <AmiBlitz3.ab3@24237>     ADDQ.l #2,d1
00032650 <AmiBlitz3.ab3@24238>     MOVE.l D1,-2(A0)
00032654 <AmiBlitz3.ab3@24239>   BRA 'skip
0003265A <AmiBlitz3.ab3@24243>   TST.w dontwrite_nomemleft
0003265E <AmiBlitz3.ab3@24244>      BNE.w 'skip
00032664 <AmiBlitz3.ab3@24246>    CMP.l #MaxWordSgnd,D1
00032668 <AmiBlitz3.ab3@24247>    BHI.w JUMP_cbraerr
0003266A <AmiBlitz3.ab3@24248>   MOVE.w D1,(A0)
0003266C <AmiBlitz3.ab3@24251> RTS
00032672 <AmiBlitz3.ab3@24253> JUMP_cbraerr JMP cbraerr
00032676 <AmiBlitz3.ab3@24259>   MOVE.l $8(A2),D0
0003267A <AmiBlitz3.ab3@24260>    BEQ.w 'skip
0003267C <AmiBlitz3.ab3@24264>   MOVEA.l D0,A3
00032680 <AmiBlitz3.ab3@24265>   MOVE.w #$6000,D1
00032686 <AmiBlitz3.ab3@24268>    TST.b fast
0003268A <AmiBlitz3.ab3@24269>    BEQ 'l1
00032690 <AmiBlitz3.ab3@24270>    OR.l #$ff,d1
00032694 <AmiBlitz3.ab3@24271>    BSR writeword
00032698 <AmiBlitz3.ab3@24276>   BSR.w writeword
0003269A <AmiBlitz3.ab3@24277>   MOVEQ.l #$08,D0
0003269C <AmiBlitz3.ab3@24278>   MOVEQ.l #$01,D1
000326A2 <AmiBlitz3.ab3@24279>   MOVEA.l _execbase,A6
000326A8 <AmiBlitz3.ab3@24281>   MOVE.l mempool,a0
000326AC <AmiBlitz3.ab3@24282>   JSR _AllocPooled(a6)
000326AE <AmiBlitz3.ab3@24285>   MOVEA.l D0,A0
000326B2 <AmiBlitz3.ab3@24286>   MOVE.l $4(A2),(A0)
000326B6 <AmiBlitz3.ab3@24287>   MOVE.l A0,$4(A2)
000326BE <AmiBlitz3.ab3@24288>   MOVE.l destpointer,$4(A0)
000326C2 <AmiBlitz3.ab3@24289>  BRA.w writeword
000326C4 <AmiBlitz3.ab3@24292> RTS
000326CA <AmiBlitz3.ab3@24296>   TST.b debugmode
000326CE <AmiBlitz3.ab3@24297>    BEQ.w 'norerr
000326D2 <AmiBlitz3.ab3@24298>   MOVE.w #$C313,D1
000326D6 <AmiBlitz3.ab3@24299>   CMP.w #$3,D2
000326DA <AmiBlitz3.ab3@24300>    BCS.w 'dochk
000326DC <AmiBlitz3.ab3@24301>   ADDQ.w #1,D1
000326E0 <AmiBlitz3.ab3@24304>  BRA.w Atokejsr
000326E2 <AmiBlitz3.ab3@24307> RTS
000326E8 <AmiBlitz3.ab3@24310> JUMP_caseerr JMP caseerr
000326EC <AmiBlitz3.ab3@24317>   MOVE.l firstsel(PC),D0
000326F0 <AmiBlitz3.ab3@24318>    BEQ.w JUMP_caseerr
000326F2 <AmiBlitz3.ab3@24319>   MOVEA.l D0,A2
000326F6 <AmiBlitz3.ab3@24320>    BSR.w fillbra
000326FA <AmiBlitz3.ab3@24321>    BSR.w fillbne
000326FE <AmiBlitz3.ab3@24323>   MOVE.w $C(A2),D2    ;type to get!
00032700 <AmiBlitz3.ab3@24324>   MOVE.w D2,-(A7)
00032704 <AmiBlitz3.ab3@24325>    BSR.w casechk
00032706 <AmiBlitz3.ab3@24326>   MOVE.w (A7),D2
0003270A <AmiBlitz3.ab3@24329>    BSR.w bakeval
0003270C <AmiBlitz3.ab3@24330>   MOVE.w (A7)+,D2    ;types to compare
00032710 <AmiBlitz3.ab3@24331>   LEA selcomb(PC),A0
00032714 <AmiBlitz3.ab3@24332>   LEA selcombf(PC),A1
00032718 <AmiBlitz3.ab3@24333>   CMP.w #$1,D2
0003271C <AmiBlitz3.ab3@24334>    BEQ.w 'doit
00032720 <AmiBlitz3.ab3@24335>   LEA selcomw(PC),A0
00032724 <AmiBlitz3.ab3@24336>   CMP.w #$2,D2
00032728 <AmiBlitz3.ab3@24337>    BEQ.w 'doit
0003272C <AmiBlitz3.ab3@24338>   LEA selcoml(PC),A0
00032730 <AmiBlitz3.ab3@24339>   LEA selcomlf(PC),A1
00032734 <AmiBlitz3.ab3@24340>   CMP.w #$7,D2
00032738 <AmiBlitz3.ab3@24341>    BCS.w 'doit
0003273C <AmiBlitz3.ab3@24343>   MOVE.w #$CE01,D1     ; was #casestrcomp
00032740 <AmiBlitz3.ab3@24344>    BSR.w Atokejsr
00032744 <AmiBlitz3.ab3@24345>  BRA.w 'doneit
00032748 <AmiBlitz3.ab3@24348>   BSR.w pokecode
0003274C <AmiBlitz3.ab3@24351>   MOVE.w selbne(PC),D1
00032752 <AmiBlitz3.ab3@24354>     TST.b fast
00032756 <AmiBlitz3.ab3@24355>     BEQ 'l1
0003275C <AmiBlitz3.ab3@24356>     ORI.l #$ff,d1
00032760 <AmiBlitz3.ab3@24357>     BSR writeword
00032764 <AmiBlitz3.ab3@24362>   BSR.w writeword
00032768 <AmiBlitz3.ab3@24363>   MOVEA.l firstsel(PC),A0
00032770 <AmiBlitz3.ab3@24364>   MOVE.l destpointer,$8(A0)
00032774 <AmiBlitz3.ab3@24365> BRA.w writeword
00032778 <AmiBlitz3.ab3@24369> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
0003277A <AmiBlitz3.ab3@24370> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
0003277E <AmiBlitz3.ab3@24373> sellineat:  Ds.l 1
00032784 <AmiBlitz3.ab3@24379>   TST.b debugmode
00032788 <AmiBlitz3.ab3@24380>    BEQ.w 'norerr
0003278C <AmiBlitz3.ab3@24381>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00032790 <AmiBlitz3.ab3@24382>    BSR.w writelong
0003279A <AmiBlitz3.ab3@24385>   MOVE.l linenumat,sellineat
000327A4 <AmiBlitz3.ab3@24388>    MOVE.l destpointer,pushpc
000327AE <AmiBlitz3.ab3@24389>   MOVE.l hunkoffsetbase,pushoff
000327B0 <AmiBlitz3.ab3@24391>   MOVEQ.l #$00,D2
000327B4 <AmiBlitz3.ab3@24392>    BSR.w bakevalu                                          ;Evaluate
000327B8 <AmiBlitz3.ab3@24393>    BSR.w pushdo
000327BC <AmiBlitz3.ab3@24394>   CMP.w #$7,D2
000327C0 <AmiBlitz3.ab3@24395>    BNE.w 'nos
000327C4 <AmiBlitz3.ab3@24396>   MOVE.w clrst(PC),D1
000327C8 <AmiBlitz3.ab3@24397>    BSR.w writeword
000327CC <AmiBlitz3.ab3@24400>    BSR.w pushput
000327D0 <AmiBlitz3.ab3@24401>   LEA selpushb(PC),A0
000327D4 <AmiBlitz3.ab3@24402>   LEA selpushbf(PC),A1
000327D8 <AmiBlitz3.ab3@24403>   CMP.w #$1,D2
000327DC <AmiBlitz3.ab3@24404>    BEQ.w 'doit
000327E0 <AmiBlitz3.ab3@24405>   LEA selpushw(PC),A0
000327E4 <AmiBlitz3.ab3@24406>   CMP.w #$2,D2
000327E8 <AmiBlitz3.ab3@24407>    BEQ.w 'doit
000327EC <AmiBlitz3.ab3@24408>   LEA selpushl(PC),A0
000327F0 <AmiBlitz3.ab3@24409>   LEA selpushlf(PC),A1
000327F4 <AmiBlitz3.ab3@24410>   CMP.w #$7,D2
000327F8 <AmiBlitz3.ab3@24411>    BCS.w 'doit
000327FE <AmiBlitz3.ab3@24413>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00032802 <AmiBlitz3.ab3@24414>    BSR.w writeword
00032806 <AmiBlitz3.ab3@24415>   LEA selpushs(PC),A0
0003280A <AmiBlitz3.ab3@24416>   LEA selpushsf(PC),A1
0003280E <AmiBlitz3.ab3@24417>    BSR.w pokecode
00032812 <AmiBlitz3.ab3@24418>   MOVE.w #$C701,D1     ; was #astring
00032816 <AmiBlitz3.ab3@24419>    BSR.w Atokejsr
0003281A <AmiBlitz3.ab3@24420>  BRA.w 'doneit
0003281E <AmiBlitz3.ab3@24423>   BSR.w pokecode
00032820 <AmiBlitz3.ab3@24426>   MOVEQ.l #$0E,D0
00032822 <AmiBlitz3.ab3@24427>   MOVEQ.l #$01,D1
00032828 <AmiBlitz3.ab3@24428>   MOVEA.l _execbase,A6
0003282E <AmiBlitz3.ab3@24431>   MOVE.l mempool,a0
00032832 <AmiBlitz3.ab3@24432>   JSR _AllocPooled(a6)
00032834 <AmiBlitz3.ab3@24434>   MOVEA.l D0,A0
00032838 <AmiBlitz3.ab3@24435>   MOVE.l firstsel(PC),(A0)
0003283E <AmiBlitz3.ab3@24436>   MOVE.l A0,firstsel
00032842 <AmiBlitz3.ab3@24437>   CLR.l $4(A0)
00032846 <AmiBlitz3.ab3@24438>   CLR.l $8(A0)        ;default mode!
0003284A <AmiBlitz3.ab3@24439>   MOVE.w D2,$C(A0)
0003284C <AmiBlitz3.ab3@24440> RTS
00032852 <AmiBlitz3.ab3@24444>   MOVE.l firstrep,D0
00032856 <AmiBlitz3.ab3@24445>    BEQ.w JUMP_unterr1
0003285A <AmiBlitz3.ab3@24446>   MOVE.w #$6000,D1      ;BRA
0003285E <AmiBlitz3.ab3@24447>   BSR.w writeword
00032860 <AmiBlitz3.ab3@24448>   MOVEA.l D0,A0
00032864 <AmiBlitz3.ab3@24449>   MOVE.l $4(A0),D1      ;dest pc
0003286A <AmiBlitz3.ab3@24450>   SUB.l destpointer,D1
0003286C <AmiBlitz3.ab3@24451>   TST.w D1
00032870 <AmiBlitz3.ab3@24452>    BPL.w JUMP_unterr2
00032874 <AmiBlitz3.ab3@24453>   BSR.w writeword
0003287A <AmiBlitz3.ab3@24454>   MOVEA.l _execbase,A6
0003287E <AmiBlitz3.ab3@24455> BRA.w unlinkrep
00032884 <AmiBlitz3.ab3@24457> JUMP_unterr2 JMP unterr2
0003288A <AmiBlitz3.ab3@24458> JUMP_unterr1 JMP unterr1
00032890 <AmiBlitz3.ab3@24462>   MOVE.l firstrep,D0
00032894 <AmiBlitz3.ab3@24463>    BEQ.w JUMP_unterr1    ;no repeat!
00032898 <AmiBlitz3.ab3@24464>   BSR.w do_if            ;do the until
0003289E <AmiBlitz3.ab3@24466>   JSR reget
000328A2 <AmiBlitz3.ab3@24467>    BNE.w JUMP_syntaxerr
000328A8 <AmiBlitz3.ab3@24469>   MOVE.w dontwrite_nomemleft,D1
000328AC <AmiBlitz3.ab3@24470>    BNE.w 'skip
000328B2 <AmiBlitz3.ab3@24471>   MOVEA.l firstrep,A0
000328B8 <AmiBlitz3.ab3@24472>   MOVEA.l destpointer,A1
000328BE <AmiBlitz3.ab3@24475>     TST.b fast
000328C2 <AmiBlitz3.ab3@24476>     BEQ 'l1
000328C4 <AmiBlitz3.ab3@24477>     SUBQ.w #4,a1
000328C8 <AmiBlitz3.ab3@24478>     MOVE.l $4(A0),D2
000328CA <AmiBlitz3.ab3@24479>     SUB.l A1,D2
000328CC <AmiBlitz3.ab3@24480>     MOVE.l d2,(a1)
000328D0 <AmiBlitz3.ab3@24481>   BRA 'skip
000328D2 <AmiBlitz3.ab3@24486>   SUBQ.w #2,A1
000328D6 <AmiBlitz3.ab3@24487>   MOVE.l $4(A0),D2    ;dest pc.
000328D8 <AmiBlitz3.ab3@24488>   SUB.l A1,D2
000328DA <AmiBlitz3.ab3@24489>   TST.w D2
000328DE <AmiBlitz3.ab3@24490>    BPL.w JUMP_unterr2
000328E0 <AmiBlitz3.ab3@24491>   MOVE.w D2,(A1)      ;put in pra dest.
000328E6 <AmiBlitz3.ab3@24494>   MOVEA.l firstiff,A1
000328EC <AmiBlitz3.ab3@24495>   MOVE.l (A1),firstiff
000328EE <AmiBlitz3.ab3@24496>   MOVEQ.l #$0E,D0
000328F4 <AmiBlitz3.ab3@24497>   MOVEA.l _execbase,A6
000328FA <AmiBlitz3.ab3@24500>   MOVE.l mempool,a0
000328FE <AmiBlitz3.ab3@24501>   JSR _FreePooled(A6)
00032904 <AmiBlitz3.ab3@24505>   MOVEA.l firstrep,A1
0003290A <AmiBlitz3.ab3@24506>   MOVE.l (A1),firstrep
0003290C <AmiBlitz3.ab3@24507>   MOVEQ.l #$08,D0
00032912 <AmiBlitz3.ab3@24510>   MOVE.l mempool,a0
00032916 <AmiBlitz3.ab3@24511> JMP _FreePooled(A6)
0003291A <AmiBlitz3.ab3@24514> iflineat:   Ds.l 1
0003291C <AmiBlitz3.ab3@24518>   MOVEQ.l #$00,D2   ;negate flag
00032922 <AmiBlitz3.ab3@24520>   TST.b fast
00032926 <AmiBlitz3.ab3@24521>   BEQ 'l1
0003292E <AmiBlitz3.ab3@24522>   MOVE.b #1,nostringopt
00032936 <AmiBlitz3.ab3@24523>   MOVE.b #1,iniffcommand
00032938 <AmiBlitz3.ab3@24528>   MOVEQ.l #$00,D1  ;if flag
0003293A <AmiBlitz3.ab3@24534>   MOVE.w D1,-(A7)
00032940 <AmiBlitz3.ab3@24535>   MOVE.l destpointer,-(A7)
00032942 <AmiBlitz3.ab3@24536>   MOVE.w D2,-(A7)
0003294C <AmiBlitz3.ab3@24537>   MOVE.l linenumat,iflineat
0003294E <AmiBlitz3.ab3@24539>   MOVEQ.l #$00,D2
00032958 <AmiBlitz3.ab3@24541>   MOVE.b optistring,optistring2
00032960 <AmiBlitz3.ab3@24542>   MOVE.b #1,optistring
00032964 <AmiBlitz3.ab3@24544>   BSR.w bakevalu       ;Get True/False Expression!
0003296E <AmiBlitz3.ab3@24546>   MOVE.b optistring2,optistring
00032972 <AmiBlitz3.ab3@24548>   CMP.w #$5,D2
00032976 <AmiBlitz3.ab3@24549>    BEQ.w 'float
0003297A <AmiBlitz3.ab3@24550>   MOVE.w thetst1(PC),D1
0003297E <AmiBlitz3.ab3@24551>   CMP.w #$1,D2
00032982 <AmiBlitz3.ab3@24552>    BEQ.w 'writebranchcode
00032986 <AmiBlitz3.ab3@24553>   MOVE.w thetst2(PC),D1
0003298A <AmiBlitz3.ab3@24554>   CMP.w #$2,D2
0003298E <AmiBlitz3.ab3@24555>    BEQ.w 'writebranchcode
00032992 <AmiBlitz3.ab3@24556>   MOVE.w thetst4(PC),D1
00032996 <AmiBlitz3.ab3@24557>   CMP.w #$7,D2
0003299A <AmiBlitz3.ab3@24558>    BEQ.w 'writebranchcode
0003299E <AmiBlitz3.ab3@24559>   MOVE.w thetst3(PC),D1
000329A2 <AmiBlitz3.ab3@24560>  BRA.w 'writebranchcode
000329A8 <AmiBlitz3.ab3@24564>   TST.b fpu
000329AC <AmiBlitz3.ab3@24565>   BEQ 'dofpu
000329B2 <AmiBlitz3.ab3@24566>   MOVE.l #$f200003a,d1
000329B6 <AmiBlitz3.ab3@24567>   BSR writelong
000329BA <AmiBlitz3.ab3@24568>   MOVE.w #$f2c1,d1       
000329BE <AmiBlitz3.ab3@24569>   BSR writeword
000329C2 <AmiBlitz3.ab3@24570>   BSR writelong
000329C4 <AmiBlitz3.ab3@24571>   ADDQ.l #2,a7
000329C8 <AmiBlitz3.ab3@24572>  BRA.w 'br2
000329CC <AmiBlitz3.ab3@24576>    MOVE.w #$C900,D1     ;was #getffpbase
000329D0 <AmiBlitz3.ab3@24577>    BSR.w Atokejsr
000329D4 <AmiBlitz3.ab3@24578>   MOVE.l thetst5(PC),D1
000329D8 <AmiBlitz3.ab3@24579>    BSR.w writelong
000329DC <AmiBlitz3.ab3@24580>  BRA.w 'gotst2
000329E2 <AmiBlitz3.ab3@24584>          CLR.b iniffcommand
000329E8 <AmiBlitz3.ab3@24585>          TST.b fast                                        ;branchcode
000329EC <AmiBlitz3.ab3@24586>          BEQ 'b6
000329F2 <AmiBlitz3.ab3@24587>          TST.b fpu
000329F6 <AmiBlitz3.ab3@24588>          BEQ 'nofpu
000329FC <AmiBlitz3.ab3@24592>           MOVE.l destpointer,a0
00032A02 <AmiBlitz3.ab3@24593>          SUB.l load_var_addr,a0
00032A08 <AmiBlitz3.ab3@24594>          CMP.l #4,a0
00032A0C <AmiBlitz3.ab3@24595>          BEQ 'nofpu
00032A14 <AmiBlitz3.ab3@24596>          CMP.l #$f2400014,-4(a4)                           ;<
00032A18 <AmiBlitz3.ab3@24597>          BNE 'nolt
00032A1E <AmiBlitz3.ab3@24598>          SUBQ.l #2,destpointer
00032A24 <AmiBlitz3.ab3@24599>          MOVE.w #$f293,-4(a4)                              ;
00032A28 <AmiBlitz3.ab3@24600>  BRA 'brf
00032A30 <AmiBlitz3.ab3@24603>   CMP.l #$f2400015,-4(a4)                                  ;<=
00032A34 <AmiBlitz3.ab3@24604>          BNE 'nole
00032A3A <AmiBlitz3.ab3@24605>          SUBQ.l #2,destpointer
00032A40 <AmiBlitz3.ab3@24606>          MOVE.w #$f292,-4(a4)
00032A44 <AmiBlitz3.ab3@24607>  BRA 'brf
00032A4C <AmiBlitz3.ab3@24610>   CMP.l #$f2400013,-4(a4)                                  ;=>
00032A50 <AmiBlitz3.ab3@24611>          BNE 'noge
00032A56 <AmiBlitz3.ab3@24612>          SUBQ.l #2,destpointer
00032A5C <AmiBlitz3.ab3@24613>          MOVE.w #$f294,-4(a4)
00032A60 <AmiBlitz3.ab3@24614>  BRA 'brf
00032A68 <AmiBlitz3.ab3@24617>   CMP.l #$f2400012,-4(a4)                                  ;>
00032A6C <AmiBlitz3.ab3@24618>          BNE 'nogt
00032A72 <AmiBlitz3.ab3@24619>          SUBQ.l #2,destpointer
00032A78 <AmiBlitz3.ab3@24620>          MOVE.w #$f295,-4(a4)
00032A7C <AmiBlitz3.ab3@24621>  BRA 'brf
00032A84 <AmiBlitz3.ab3@24624>   CMP.l #$f2400001,-4(a4)                                  ;=
00032A88 <AmiBlitz3.ab3@24625>          BNE 'noeq
00032A8E <AmiBlitz3.ab3@24626>          SUBQ.l #2,destpointer
00032A94 <AmiBlitz3.ab3@24627>          MOVE.w #$f28e,-4(a4)
00032A98 <AmiBlitz3.ab3@24628>  BRA 'brf
00032AA0 <AmiBlitz3.ab3@24631>   CMP.l #$f240000e,-4(a4)                                  ;<>
00032AA4 <AmiBlitz3.ab3@24632>          BNE 'none
00032AAA <AmiBlitz3.ab3@24633>          SUBQ.l #2,destpointer
00032AB0 <AmiBlitz3.ab3@24634>          MOVE.w #$f281,-4(a4)
00032AB2 <AmiBlitz3.ab3@24637>   ADDQ.l #2,a7
00032AB8 <AmiBlitz3.ab3@24639>     TST.b fast
00032ABC <AmiBlitz3.ab3@24640>     BEQ 'l1
00032AC2 <AmiBlitz3.ab3@24641>     OR.b #$40,-3(a4)
00032AC6 <AmiBlitz3.ab3@24642>     BSR writeword
00032ACA <AmiBlitz3.ab3@24646>   BSR writeword
00032ACE <AmiBlitz3.ab3@24647>  BRA.s 'br2
00032AD4 <AmiBlitz3.ab3@24651>   MOVE.l destpointer,a0
00032ADA <AmiBlitz3.ab3@24652>          SUB.l load_var_addr,a0
00032AE0 <AmiBlitz3.ab3@24653>          CMP.l #4,a0
00032AE4 <AmiBlitz3.ab3@24654>          BEQ 'gotst2
00032AEA <AmiBlitz3.ab3@24655>          CMP.w #$4eb9,-6(a4)
00032AEE <AmiBlitz3.ab3@24656>          BEQ 'b6
00032AF4 <AmiBlitz3.ab3@24657>          CMP.w #$5ec0,-2(a4)                               ;>
00032AF8 <AmiBlitz3.ab3@24658>      BNE.s 'lb1
00032AFE <AmiBlitz3.ab3@24659>          MOVE.w #$6f00,-2(a4)                              ;ble
00032B02 <AmiBlitz3.ab3@24660>  BRA.s 'br
00032B08 <AmiBlitz3.ab3@24663>   CMP.w #$5dc0,-2(a4)                                       ;<
00032B0C <AmiBlitz3.ab3@24664>   BNE.s 'lb2
00032B12 <AmiBlitz3.ab3@24665>          MOVE.w #$6c00,-2(a4)                              ;bge
00032B16 <AmiBlitz3.ab3@24666>  BRA.s 'br
00032B1C <AmiBlitz3.ab3@24669>   CMP.w #$57c0,-2(a4)                                      ;=
00032B20 <AmiBlitz3.ab3@24670>   BNE.s 'lb3
00032B26 <AmiBlitz3.ab3@24671>          MOVE.w #$6600,-2(a4)                              ;bne
00032B2A <AmiBlitz3.ab3@24672>  BRA.s 'br
00032B30 <AmiBlitz3.ab3@24675>   CMP.w #$56c0,-2(a4)                                      ;<>
00032B34 <AmiBlitz3.ab3@24676>   BNE.s 'lb4
00032B3A <AmiBlitz3.ab3@24677>          MOVE.w #$6700,-2(a4)                              ;beq
00032B3E <AmiBlitz3.ab3@24678>  BRA.s 'br
00032B44 <AmiBlitz3.ab3@24681>   CMP.w #$5cc0,-2(a4)                                      ;>=
00032B48 <AmiBlitz3.ab3@24682>   BNE.s 'lb5
00032B4E <AmiBlitz3.ab3@24683>          MOVE.w #$6d00,-2(a4)                              ;blt
00032B52 <AmiBlitz3.ab3@24684>  BRA.s 'br
00032B58 <AmiBlitz3.ab3@24687>   CMP.w #$5fc0,-2(a4)                                      ;<=
00032B5C <AmiBlitz3.ab3@24688>         BNE.s 'b6
00032B62 <AmiBlitz3.ab3@24689>          MOVE.w #$6e00,-2(a4)                              ;bgt
00032B64 <AmiBlitz3.ab3@24692>   TST.w (a7)+
00032B6A <AmiBlitz3.ab3@24694>         TST.b fast
00032B6E <AmiBlitz3.ab3@24695>         BEQ 'l1a
00032B74 <AmiBlitz3.ab3@24696>         OR.b #$ff,-1(a4)                                   ;long branches
00032B78 <AmiBlitz3.ab3@24697>         BSR writeword
00032B7C <AmiBlitz3.ab3@24701>         BSR writeword
00032B80 <AmiBlitz3.ab3@24702>  BRA.s 'br2
00032B84 <AmiBlitz3.ab3@24706>   BSR.w writeword
00032B88 <AmiBlitz3.ab3@24709>   MOVE.l posbr(PC),D1
00032B8A <AmiBlitz3.ab3@24710>   TST.w (A7)+
00032B8E <AmiBlitz3.ab3@24711>    BEQ.w 'skip
00032B92 <AmiBlitz3.ab3@24712>   MOVE.l negbr(PC),D1
00032B98 <AmiBlitz3.ab3@24716>   TST.b fast
00032B9C <AmiBlitz3.ab3@24717>            BEQ 'l1b
00032BA2 <AmiBlitz3.ab3@24718>            OR.l #$00ff0000,d1
00032BA6 <AmiBlitz3.ab3@24719>            BSR writelong
00032BAA <AmiBlitz3.ab3@24720>            BSR writeword
00032BAE <AmiBlitz3.ab3@24721>  BRA 'br2
00032BB2 <AmiBlitz3.ab3@24724>   BSR.w writelong
00032BB4 <AmiBlitz3.ab3@24728>   MOVEQ.l #$0E,D0
00032BB6 <AmiBlitz3.ab3@24729>   MOVEQ.l #$01,D1
00032BBC <AmiBlitz3.ab3@24730>   MOVEA.l _execbase,A6
00032BC2 <AmiBlitz3.ab3@24733>   MOVE.l mempool,a0
00032BC6 <AmiBlitz3.ab3@24734>   JSR _AllocPooled(a6)
00032BC8 <AmiBlitz3.ab3@24737>   MOVEA.l D0,A0
00032BCE <AmiBlitz3.ab3@24738>   MOVE.l firstiff,(A0)
00032BD4 <AmiBlitz3.ab3@24739>   MOVE.l A0,firstiff
00032BD8 <AmiBlitz3.ab3@24740>   MOVE.l (A7)+,$4(A0)
00032BE0 <AmiBlitz3.ab3@24741>   MOVE.l destpointer,$8(A0)
00032BE4 <AmiBlitz3.ab3@24742>   MOVE.w (A7)+,$C(A0)
00032BEA <AmiBlitz3.ab3@24743>    JSR reget
00032BEE <AmiBlitz3.ab3@24744>    BEQ.w ifdone
00032BF4 <AmiBlitz3.ab3@24745>   BSET #$7,$C(A0)    ;one liner
00032BFE <AmiBlitz3.ab3@24751>   MOVE.w oldqflag,instringon
00032C04 <AmiBlitz3.ab3@24752>   MOVEA.l lastsourcepos,A5
00032C0C <AmiBlitz3.ab3@24754>   MOVE.w #$003A,lastchar      ; ':'
00032C0E <AmiBlitz3.ab3@24757> RTS
00032C12 <AmiBlitz3.ab3@24761>   CMP.w #$1,D0     ;4
00032C16 <AmiBlitz3.ab3@24762>    BLT.w gc1skip   ;4
00032C1A <AmiBlitz3.ab3@24763>   CMP.w #$0,D0     ;2
00032C1E <AmiBlitz3.ab3@24764>    BGT.w gc1skip
00032C20 <AmiBlitz3.ab3@24765>   ADD.w D0,D0
00032C22 <AmiBlitz3.ab3@24766>   ADD.w D0,D0
00032C26 <AmiBlitz3.ab3@24767>   MOVEA.l gc1labs-4(PC,D0.W),A0
00032C28 <AmiBlitz3.ab3@24768>  JMP (A0)
00032C2C <AmiBlitz3.ab3@24771>  BRA.w gc1skip
00032C30 <AmiBlitz3.ab3@24777>   CMP.w #$1,D0     ;4
00032C34 <AmiBlitz3.ab3@24778>    BLT.w gc2skip   ;4
00032C38 <AmiBlitz3.ab3@24779>   CMP.w #$0,D0     ;2
00032C3C <AmiBlitz3.ab3@24780>    BGT.w gc2skip
00032C3E <AmiBlitz3.ab3@24781>   ADD.w D0,D0
00032C40 <AmiBlitz3.ab3@24782>   ADD.w D0,D0
00032C44 <AmiBlitz3.ab3@24783>   MOVEA.l gc2labs-4(PC,D0.W),A0
00032C46 <AmiBlitz3.ab3@24784>   JSR (A0)
00032C4A <AmiBlitz3.ab3@24787>  BRA.w gc2skip
00032C4E <AmiBlitz3.ab3@24793>   CMP.w #$1,D0    ;4
00032C52 <AmiBlitz3.ab3@24794>    BLT.w gc3skip  ;4
00032C56 <AmiBlitz3.ab3@24795>   CMP.w #$0,D0    ;2
00032C5A <AmiBlitz3.ab3@24796>    BGT.w gc3skip
00032C5C <AmiBlitz3.ab3@24797>   ADD.w D0,D0
00032C5E <AmiBlitz3.ab3@24798>   ADD.w D0,D0
00032C62 <AmiBlitz3.ab3@24799>   MOVEA.l gc3labs-4(PC,D0.W),A0
00032C66 <AmiBlitz3.ab3@24802>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00032C68 <AmiBlitz3.ab3@24803>    JSR (A0)
00032C6C <AmiBlitz3.ab3@24806>  BRA.w gc3skip
00032C6E <AmiBlitz3.ab3@24811> labcnt:   Ds.w 1
00032C70 <AmiBlitz3.ab3@24818>   MOVEQ.l #$02,D2
00032C74 <AmiBlitz3.ab3@24819>    BSR.w bakeval
00032C78 <AmiBlitz3.ab3@24821>   LEA ongotocode(PC),A0
00032C7C <AmiBlitz3.ab3@24822>   LEA ongotocodef(PC),A1
00032C80 <AmiBlitz3.ab3@24823>   MOVE.w #gc1skip-ongotocode,D1      ; is #$001A
00032C84 <AmiBlitz3.ab3@24824>   CMP.w #-$7FFB,D0                   ; was #$8005
00032C88 <AmiBlitz3.ab3@24825>    BEQ.w 'isok
00032C8C <AmiBlitz3.ab3@24826>   CMP.w #-$7FFA,D0                   ; was #$8006
00032C90 <AmiBlitz3.ab3@24827>    BNE.w JUMP_syntaxerr
00032C94 <AmiBlitz3.ab3@24828>   LEA ongosubcode(PC),A0
00032C98 <AmiBlitz3.ab3@24829>   LEA ongosubcodef(PC),A1
00032C9C <AmiBlitz3.ab3@24830>   MOVE.w #gc2skip-ongosubcode,D1     ; is #$001A
00032CA2 <AmiBlitz3.ab3@24832>   TST.b debugmode
00032CA6 <AmiBlitz3.ab3@24833>    BEQ.b 'isok
00032CAC <AmiBlitz3.ab3@24835>    JSR chkstak
00032CB0 <AmiBlitz3.ab3@24836>   LEA ongcode(PC),A0
00032CB4 <AmiBlitz3.ab3@24837>   LEA ongcodef(PC),A1
00032CB8 <AmiBlitz3.ab3@24838>   MOVE.w #gc3skip-ongcode,D1         ; is #$001E
00032CBA <AmiBlitz3.ab3@24841>   MOVE.w D1,-(A7)
00032CC0 <AmiBlitz3.ab3@24842>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032CC4 <AmiBlitz3.ab3@24843>    BSR.w pokecode
00032CCA <AmiBlitz3.ab3@24844>   CLR.w labcnt
00032CD0 <AmiBlitz3.ab3@24850>    JSR get1bytemain
00032CD6 <AmiBlitz3.ab3@24851>   SUBQ.l #2,destpointer                                    ;for makealab!
00032CDA <AmiBlitz3.ab3@24852>    BSR.w makealab2
00032CE0 <AmiBlitz3.ab3@24853>   ADDQ.l #2,destpointer
00032CE6 <AmiBlitz3.ab3@24854>    JSR addoff
00032CEA <AmiBlitz3.ab3@24855>   MOVE.l $8(A2),D1
00032CEE <AmiBlitz3.ab3@24856>    BSR.w writelong
00032CF4 <AmiBlitz3.ab3@24857>   ADDQ.w #1,labcnt
00032CFA <AmiBlitz3.ab3@24858>    JSR reget
00032CFE <AmiBlitz3.ab3@24859>   CMP.w #$2C,D0 ; ','
00032D02 <AmiBlitz3.ab3@24860>    BEQ.w 'loop
00032D04 <AmiBlitz3.ab3@24862>   MOVEA.l (A7)+,A0
00032D06 <AmiBlitz3.ab3@24863>   MOVE.w (A7)+,D2
00032D0C <AmiBlitz3.ab3@24864>   MOVE.w dontwrite_nomemleft,D1
00032D10 <AmiBlitz3.ab3@24865>    BNE.w 'done
00032D14 <AmiBlitz3.ab3@24867>   MOVE.w labcnt(PC),D1
00032D18 <AmiBlitz3.ab3@24868>   MOVE.w D1,$A(A0)       ;for cmp#
00032D1A <AmiBlitz3.ab3@24869>   ADD.w D1,D1
00032D1C <AmiBlitz3.ab3@24870>   ADD.w D1,D1
00032D1E <AmiBlitz3.ab3@24871>   ADDQ.w #2,D1
00032D22 <AmiBlitz3.ab3@24872>   MOVE.w D1,$2(A0,D2.W)  ;for bra!
00032D24 <AmiBlitz3.ab3@24875> RTS
00032D2A <AmiBlitz3.ab3@24879>   TST.b debugmode
00032D2E <AmiBlitz3.ab3@24880>    BEQ.w 'noerr
00032D34 <AmiBlitz3.ab3@24882>    JSR chkstak
00032D3A <AmiBlitz3.ab3@24883>   MOVE.l goset,D1
00032D3E <AmiBlitz3.ab3@24884>    BSR.w writelong
00032D44 <AmiBlitz3.ab3@24887>   MOVE.w gosubcode,D1
00032D48 <AmiBlitz3.ab3@24888> BRA.w dogoto2
00032D4E <AmiBlitz3.ab3@24892>   MOVE.w gotocode,D1
00032D50 <AmiBlitz3.ab3@24895>   MOVE.w D1,-(A7)
00032D54 <AmiBlitz3.ab3@24896>    BSR.w makealab2
00032D56 <AmiBlitz3.ab3@24897>   MOVE.w (A7)+,D1
00032D5A <AmiBlitz3.ab3@24898>    BSR.w writeword
00032D60 <AmiBlitz3.ab3@24899>    JSR addoff
00032D64 <AmiBlitz3.ab3@24900>   MOVE.l $8(A2),D1
00032D68 <AmiBlitz3.ab3@24901> BRA.w writelong
00032D6E <AmiBlitz3.ab3@24905>   MOVE.w proceduremode,D1
00032D72 <AmiBlitz3.ab3@24906>    BEQ.w JUMP_badpenderr
00032D76 <AmiBlitz3.ab3@24908>   MOVE.w #$4EF9,D1
00032D7A <AmiBlitz3.ab3@24909>    BSR.w writeword
00032D80 <AmiBlitz3.ab3@24910>    JSR addoff
00032D86 <AmiBlitz3.ab3@24912>   MOVEA.l _execbase,A6
00032D88 <AmiBlitz3.ab3@24913>   MOVEQ.l #$08,D0
00032D8A <AmiBlitz3.ab3@24914>   MOVEQ.l #$01,D1
00032D90 <AmiBlitz3.ab3@24917>   MOVE.l mempool,a0
00032D94 <AmiBlitz3.ab3@24918>   JSR _AllocPooled(a6)
00032D96 <AmiBlitz3.ab3@24920>   MOVEA.l D0,A0
00032D9C <AmiBlitz3.ab3@24921>   MOVE.l firstpend,(A0)
00032DA2 <AmiBlitz3.ab3@24922>   MOVE.l A0,firstpend
00032DAA <AmiBlitz3.ab3@24923>   MOVE.l destpointer,$4(A0)
00032DAE <AmiBlitz3.ab3@24925> BRA.w writelong
00032DB2 <AmiBlitz3.ab3@24929>   BSR.w do_AsmExit
00032DB8 <AmiBlitz3.ab3@24930> JMP get1bytemain
00032DC0 <AmiBlitz3.ab3@24935>   MOVE.b #1,nostringopt
00032DC4 <AmiBlitz3.ab3@24936>   MOVEM.l a0/a1/d1,-(a7)
00032DCA <AmiBlitz3.ab3@24938>   MOVEA.l currentfunction,A0
00032DD0 <AmiBlitz3.ab3@24940>     CMP.l #0,a0
00032DD4 <AmiBlitz3.ab3@24941>     BNE 'l1
00032DDA <AmiBlitz3.ab3@24942>     JMP errorasmexit
00032DDC <AmiBlitz3.ab3@24945>   MOVEQ.l #$00,D2
00032DE0 <AmiBlitz3.ab3@24947>   MOVE.b $5(A0),D2      ;type returning!
00032DE4 <AmiBlitz3.ab3@24948>   BSR.w eval            ;put return val in d0.
00032DEA <AmiBlitz3.ab3@24951>   MOVEA.l currentfunction,A0
00032DEE <AmiBlitz3.ab3@24952>   MOVE.l funcstruct_returntype(a0),a0
00032DF4 <AmiBlitz3.ab3@24953>   CMP.l #0,a0
00032DF8 <AmiBlitz3.ab3@24954>   BEQ 'isstatement
00032E00 <AmiBlitz3.ab3@24955>   CMP.l #$100,4(a0)
00032E04 <AmiBlitz3.ab3@24956>   BLT.w 'isvar
00032E06 <AmiBlitz3.ab3@24957>   MOVE.l a2,a1
00032E0C <AmiBlitz3.ab3@24958>   TST.l typetocast
00032E10 <AmiBlitz3.ab3@24959>   BEQ 'nocast
00032E16 <AmiBlitz3.ab3@24960>   MOVE.l typetocast,a1
00032E18 <AmiBlitz3.ab3@24963>   CMP.l a0,a1
00032E1C <AmiBlitz3.ab3@24964>   BEQ 'ok
00032E22 <AmiBlitz3.ab3@24965>   CLR.l typetocast
00032E28 <AmiBlitz3.ab3@24966>   MOVE.l lasttoken,d1
00032E2C <AmiBlitz3.ab3@24967>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00032E30 <AmiBlitz3.ab3@24968>   BEQ 'isnull
00032E36 <AmiBlitz3.ab3@24971>   JMP errorconvertreturntype
00032E3A <AmiBlitz3.ab3@24980>   MOVEM.l (a7)+,a0/a1/d1
00032E3E <AmiBlitz3.ab3@24983> BRA.w do_AsmExit
00032E44 <AmiBlitz3.ab3@24985> error_convert_types2 JMP error_convert_types
00032E4A <AmiBlitz3.ab3@25001>   TST.b debugmode
00032E4E <AmiBlitz3.ab3@25002>    BEQ.w normret
00032E52 <AmiBlitz3.ab3@25003>   MOVE.w #$C305,D1        ; was #chkret,
00032E56 <AmiBlitz3.ab3@25004> BRA.w Atokejsr
00032E5A <AmiBlitz3.ab3@25011>   MOVE.w #$4E75,D1
00032E5E <AmiBlitz3.ab3@25012> BRA.w writeword
00032E62 <AmiBlitz3.ab3@25015> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00032E66 <AmiBlitz3.ab3@25016> proclocals:  Ds.l 1                                        ;for debugga!
00032E68 <AmiBlitz3.ab3@25017> procnum:     Ds.w 1
00032E6A <AmiBlitz3.ab3@25018> procnum2:    Ds.w 1
00032E6E <AmiBlitz3.ab3@25019> prolineat:   Ds.l 1
00032E74 <AmiBlitz3.ab3@25024>    TST.w proceduremode
00032E78 <AmiBlitz3.ab3@25025>    BGT JUMP_sreterr
00032E7C <AmiBlitz3.ab3@25027>    CMP.w #-$7FF9,D0     ;was #$8007
00032E80 <AmiBlitz3.ab3@25028>    BEQ.w stateret
00032E82 <AmiBlitz3.ab3@25029>    MOVEQ.l #-$01,D1  ;statement flag
00032E86 <AmiBlitz3.ab3@25030> BRA.w do_function2
00032E8C <AmiBlitz3.ab3@25032> JUMP_sreterr JMP sreterr
00032E92 <AmiBlitz3.ab3@25036>   CLR.b skipfunc
00032E98 <AmiBlitz3.ab3@25037>   TST.l unusedfunc
00032E9C <AmiBlitz3.ab3@25038>   BEQ 'ex
00032EA0 <AmiBlitz3.ab3@25039>   MOVEM.l d0-d7/a0-a6,-(a7)
00032EA6 <AmiBlitz3.ab3@25040>   MOVE.l unusedfunc,d1
00032EAC <AmiBlitz3.ab3@25041>   LEA ptr_parameterstore,a5
00032EAE <AmiBlitz3.ab3@25044>   MOVE.l d1,a0
00032EB2 <AmiBlitz3.ab3@25045>   LEA 12(a0),a2
00032EB4 <AmiBlitz3.ab3@25046>   MOVE.l a5,a1
00032EB6 <AmiBlitz3.ab3@25048>   CMPM.b (a1)+,(a2)+
00032EBA <AmiBlitz3.ab3@25049>   BNE 'neq
00032EBC <AmiBlitz3.ab3@25050>   TST.b (a2)
00032EC0 <AmiBlitz3.ab3@25051>   BNE 'ch
00032EC2 <AmiBlitz3.ab3@25052>   TST.b (a1)
00032EC6 <AmiBlitz3.ab3@25053>   BNE 'neq
00032ECE <AmiBlitz3.ab3@25054>   MOVE.b #1,skipfunc
00032ED2 <AmiBlitz3.ab3@25055>  BRA 'out
00032ED4 <AmiBlitz3.ab3@25058>   MOVE.l (a0),d1
00032ED8 <AmiBlitz3.ab3@25059>   BNE 'ag
00032EDC <AmiBlitz3.ab3@25062>   MOVEM.l (a7)+,d0-d7/a0-a6
00032EDE <AmiBlitz3.ab3@25065> RTS
00032EE4 <AmiBlitz3.ab3@25068> JUMP_dupprocerr  JMP dupprocerr
00032EEA <AmiBlitz3.ab3@25069> JUMP_illprocperr JMP illprocperr
00032EF0 <AmiBlitz3.ab3@25070> JUMP_toovarerr   JMP toovarerr
00032EF6 <AmiBlitz3.ab3@25071> JUMP_more6pard   JMP more6pard
00032EFE <AmiBlitz3.ab3@25075>   CMP.w #-1,proceduremode                                  
00032F02 <AmiBlitz3.ab3@25076>    BEQ JUMP_sreterr
00032F06 <AmiBlitz3.ab3@25077>   CMP.w #-$7FF9,D0      ; was #$8007
00032F0A <AmiBlitz3.ab3@25078>    BEQ.w do_function_return
00032F14 <AmiBlitz3.ab3@25082>   MOVE.w oldqflag,instringon
00032F1A <AmiBlitz3.ab3@25083>   MOVEA.l lastsourcepos,A5
00032F20 <AmiBlitz3.ab3@25085>   JSR getfunctionreturntype
00032F26 <AmiBlitz3.ab3@25086>   JSR get1bytemain
00032F2C <AmiBlitz3.ab3@25092>   TST.b declare
00032F30 <AmiBlitz3.ab3@25093>   BEQ 'l3
00032F38 <AmiBlitz3.ab3@25094>   MOVE.b #1,nowdeclare
00032F3E <AmiBlitz3.ab3@25098>   JSR errchx                                           ;writejumpoverfunction
00032F44 <AmiBlitz3.ab3@25102>   CLR.b fastfunc
00032F4E <AmiBlitz3.ab3@25103>   MOVE.l firstiff,firstiffstore
00032F56 <AmiBlitz3.ab3@25104>   CMP.l #"FAST",-1(a5)
00032F5A <AmiBlitz3.ab3@25105>   BNE 'nofast
00032F60 <AmiBlitz3.ab3@25106>   CMP.b #" ",3(a5)
00032F64 <AmiBlitz3.ab3@25107>   BNE 'nofast
00032F66 <AmiBlitz3.ab3@25108>   ADDQ.l #3,a5
00032F6A <AmiBlitz3.ab3@25111>     CMP.b #" ",(a5)
00032F6E <AmiBlitz3.ab3@25112>      BNE 'x1
00032F70 <AmiBlitz3.ab3@25113>     ADDQ #1,a5
00032F74 <AmiBlitz3.ab3@25114>  BRA 'x2
00032F7A <AmiBlitz3.ab3@25117>   MOVE.l a5,lastsourcepos
00032F82 <AmiBlitz3.ab3@25118>   MOVE.b #1,fastfunc
00032F8A <AmiBlitz3.ab3@25121>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032F8E <AmiBlitz3.ab3@25122>  BRA 'noopt
00032F94 <AmiBlitz3.ab3@25124>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032F98 <AmiBlitz3.ab3@25125>   BNE 'noopt                                               ;          "
00032F9A <AmiBlitz3.ab3@25126>   ADDQ.l #4,a5                                             ;          "
00032F9E <AmiBlitz3.ab3@25129>     CMP.b #" ",(a5)                                        ;          "
00032FA2 <AmiBlitz3.ab3@25130>      BNE 'x1b                                              ;          "
00032FA4 <AmiBlitz3.ab3@25131>     ADDQ #1,a5                                             ;          "
00032FA8 <AmiBlitz3.ab3@25132>  BRA 'x2b
00032FAE <AmiBlitz3.ab3@25135>   MOVE.l a5,lastsourcepos                                  ;          "
00032FB4 <AmiBlitz3.ab3@25136>   JSR makename2                                            ;          "
00032FB8 <AmiBlitz3.ab3@25137>  BRA 'l1                                                   ;          "
00032FBE <AmiBlitz3.ab3@25140>   JSR makename2
00032FC4 <AmiBlitz3.ab3@25141>   JSR checkused
00032FCA <AmiBlitz3.ab3@25142>   TST.b skipfunc
00032FCE <AmiBlitz3.ab3@25143>    BEQ 'l1
00032FD4 <AmiBlitz3.ab3@25144>   JSR skipme
00032FDA <AmiBlitz3.ab3@25145>   CLR.b fastfunc
00032FDC <AmiBlitz3.ab3@25146>  RTS
00032FE6 <AmiBlitz3.ab3@25150>   MOVE.l linenumat,prolineat
00032FEC <AmiBlitz3.ab3@25152>   ADDQ.w #1,procnum2
00032FF4 <AmiBlitz3.ab3@25153>   MOVE.w procnum2(PC),procnum
00032FFA <AmiBlitz3.ab3@25154>   MOVE.w D1,proceduremode
00033000 <AmiBlitz3.ab3@25155>   CLR.w locvaroff
00033004 <AmiBlitz3.ab3@25157>   CMP.w #$7B,D0   ;'{'
00033008 <AmiBlitz3.ab3@25158>    BNE.w JUMP_syntaxerr
00033010 <AmiBlitz3.ab3@25160>    MOVE.b #1,infunctioncode
00033016 <AmiBlitz3.ab3@25162>   MOVEA.l tempvm,A0
0003301E <AmiBlitz3.ab3@25163>   MOVE.w $C(A0),memlibstat
00033024 <AmiBlitz3.ab3@25164>   BCLR #$7,$C(A0)                                          ;Bit out of range
00033028 <AmiBlitz3.ab3@25165>   MOVE.w #$4EF9,D1  ;make a jump around the proc
0003302C <AmiBlitz3.ab3@25166>    BSR.w writeword
00033032 <AmiBlitz3.ab3@25167>    JSR addoff
00033036 <AmiBlitz3.ab3@25168>    BSR.w writelong
0003303C <AmiBlitz3.ab3@25170>    JSR findproc                                          ;findproc function
00033040 <AmiBlitz3.ab3@25171>    BEQ.w JUMP_dupprocerr
00033046 <AmiBlitz3.ab3@25172>    JSR addlabel
0003304C <AmiBlitz3.ab3@25174>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00033052 <AmiBlitz3.ab3@25175>    MOVE.b #0,isfunc(a2)
0003305A <AmiBlitz3.ab3@25176>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00033062 <AmiBlitz3.ab3@25178>   MOVE.l destpointer,$E(A2)    ;new!
00033068 <AmiBlitz3.ab3@25179>   MOVE.l A2,currentfunction
0003306E <AmiBlitz3.ab3@25181>   LEA nops8,A0
00033074 <AmiBlitz3.ab3@25182>   LEA nopsf,A1
00033078 <AmiBlitz3.ab3@25183>    BSR.w pokecode2
0003307E <AmiBlitz3.ab3@25185>   TST.b debugmode
00033082 <AmiBlitz3.ab3@25186>    BEQ.b 'nodebug
00033084 <AmiBlitz3.ab3@25188>   MOVEQ.l #$04,D1
0003308A <AmiBlitz3.ab3@25189>    JSR writetrap
00033094 <AmiBlitz3.ab3@25190>   MOVE.l destpointer,proclocals
00033098 <AmiBlitz3.ab3@25191>    BSR.w writelong
0003309C <AmiBlitz3.ab3@25192>    BSR.w writelong
000330A0 <AmiBlitz3.ab3@25195>    LEA $16(A2),A4
000330A8 <AmiBlitz3.ab3@25196>   MOVE.b proceduremode+1,$5(A2)
000330AA <AmiBlitz3.ab3@25197>   MOVEQ.l #$00,D6
000330AC <AmiBlitz3.ab3@25198>   MOVEQ.l #$00,D5
000330B2 <AmiBlitz3.ab3@25199>    JSR get1bytemain
000330B6 <AmiBlitz3.ab3@25200>   CMP.w #$7D,D0        ; '}'
000330BA <AmiBlitz3.ab3@25201>    BEQ.w 'done
000330BE <AmiBlitz3.ab3@25205>    CMP.b #"@",d0
000330C2 <AmiBlitz3.ab3@25206>    BNE 'l2
000330C4 <AmiBlitz3.ab3@25207>    MOVE.l a0,-(a7)
000330CA <AmiBlitz3.ab3@25208>    MOVE.l currentfunction,a0
000330D0 <AmiBlitz3.ab3@25209>    CMP.b #31,$20(a0)                                       ;increase if morepars
000330D4 <AmiBlitz3.ab3@25210>    BNE 'l4
000330D8 <AmiBlitz3.ab3@25211>    MOVE.b d6,$20(a0)                                       ;increase if morepar
000330DE <AmiBlitz3.ab3@25214>    JSR get1bytemain
000330E0 <AmiBlitz3.ab3@25215>    MOVE.l (a7)+,a0
000330E4 <AmiBlitz3.ab3@25219>    BSR.w getparameter
000330E8 <AmiBlitz3.ab3@25220>    BSR.w fetchvars
000330F0 <AmiBlitz3.ab3@25221>   CMPI.l #$7,$4(A2)
000330F4 <AmiBlitz3.ab3@25222>    BNE.w 'notst
000330FA <AmiBlitz3.ab3@25223>   LEA stbuff,A0
000330FC <AmiBlitz3.ab3@25224>   MOVE.w D5,D1
000330FE <AmiBlitz3.ab3@25225>   LSL.w #2,D1
00033102 <AmiBlitz3.ab3@25226>   MOVE.w D6,$0(A0,D1.W)
00033108 <AmiBlitz3.ab3@25227>   MOVE.w $4(A3),$2(A0,D1.W)
0003310A <AmiBlitz3.ab3@25228>   ADDQ.w #1,D5
0003310C <AmiBlitz3.ab3@25229>   MOVEQ.l #$07,D2
00033110 <AmiBlitz3.ab3@25230>  BRA.w 'pgot
00033114 <AmiBlitz3.ab3@25233>   MOVE.w #$2940,D1
00033116 <AmiBlitz3.ab3@25234>   MOVEQ.l #$03,D2
0003311E <AmiBlitz3.ab3@25235>   BTST #$0,flagmask+1
00033122 <AmiBlitz3.ab3@25236>    BNE.w 'sgot
0003312A <AmiBlitz3.ab3@25237>   CMPI.l #$100,$4(A2)
0003312E <AmiBlitz3.ab3@25238>    BCC.w JUMP_illprocperr
00033132 <AmiBlitz3.ab3@25239>   MOVE.w $6(A2),D2
00033136 <AmiBlitz3.ab3@25240>   CMP.w #$2,D2
0003313A <AmiBlitz3.ab3@25241>    BHI.w 'sgot
0003313E <AmiBlitz3.ab3@25242>    BEQ.w 'wgot
00033142 <AmiBlitz3.ab3@25243>   EORI.w #$3000,D1
00033146 <AmiBlitz3.ab3@25244>  BRA.w 'sgot
0003314A <AmiBlitz3.ab3@25247>   ORI.w #$1000,D1
0003314C <AmiBlitz3.ab3@25250>   OR.w D6,D1
00033152 <AmiBlitz3.ab3@25252>   TST.b fpu
00033156 <AmiBlitz3.ab3@25253>   BEQ 'nofpu
0003315A <AmiBlitz3.ab3@25254>   CMP.b #5,d2
0003315E <AmiBlitz3.ab3@25255>   BNE 'nofpu
00033162 <AmiBlitz3.ab3@25256>   CMP.w #6,d6
00033166 <AmiBlitz3.ab3@25257>   BLT 'l10a
0003316C <AmiBlitz3.ab3@25258>   CMP.l #newtype_double,a2
00033170 <AmiBlitz3.ab3@25259>   BEQ JUMP_more6pard
00033174 <AmiBlitz3.ab3@25260>  BRA 'nofpu
0003317A <AmiBlitz3.ab3@25263>   MOVE.l #$f22c6400,d1
0003317E <AmiBlitz3.ab3@25264>   MOVEM.l d0/a4,-(a7)
00033180 <AmiBlitz3.ab3@25265>   MOVE.l d6,d0
00033182 <AmiBlitz3.ab3@25266>   ASL.l #7,d0
00033184 <AmiBlitz3.ab3@25267>   OR.w d0,d1
0003318A <AmiBlitz3.ab3@25268>   CMP.l #newtype_double,a2
0003318E <AmiBlitz3.ab3@25269>   BNE 'l5
00033194 <AmiBlitz3.ab3@25270>   OR.l #$1000,d1
00033198 <AmiBlitz3.ab3@25273>   BSR writelong
0003319C <AmiBlitz3.ab3@25274>   MOVE.w 4(a3),d1
000331A0 <AmiBlitz3.ab3@25275>   BSR writeword
000331A4 <AmiBlitz3.ab3@25276>   MOVEM.l (a7)+,a4/d0
000331A8 <AmiBlitz3.ab3@25277>  BRA 'pgot
000331AA <AmiBlitz3.ab3@25281>   MOVE.l A4,-(A7)
000331AE <AmiBlitz3.ab3@25283>    CMP.w #6,d6
000331B2 <AmiBlitz3.ab3@25284>    BLT 'l10
000331B6 <AmiBlitz3.ab3@25285>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
000331B8 <AmiBlitz3.ab3@25286>    ADD.w d6,d1
000331BE <AmiBlitz3.ab3@25287>    JSR Atokejsr
000331C4 <AmiBlitz3.ab3@25288>    TST.w dontwrite_nomemleft
000331C8 <AmiBlitz3.ab3@25289>    BNE 'l10
000331CE <AmiBlitz3.ab3@25290>    MOVE.l data1start,d1
000331D4 <AmiBlitz3.ab3@25291>    MOVE.l destpointer,a4
000331D8 <AmiBlitz3.ab3@25292>    ADD.l d1,-6(a4)
000331DE <AmiBlitz3.ab3@25293>    MOVE.l destpointer,d1
000331E0 <AmiBlitz3.ab3@25294>    SUBQ.l #6,d1
000331E6 <AmiBlitz3.ab3@25295>    SUB.l destbufferstart,d1
000331E8 <AmiBlitz3.ab3@25297>    MOVE.l d2,-(a7)
000331EA <AmiBlitz3.ab3@25298>    MOVE.l d1,d2
000331F0 <AmiBlitz3.ab3@25299>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000331F2 <AmiBlitz3.ab3@25300>    MOVE.l (a7)+,d2
000331F8 <AmiBlitz3.ab3@25301>    MOVE.l destpointer,a4
000331FC <AmiBlitz3.ab3@25302>    CMP.w #2,d2
00033200 <AmiBlitz3.ab3@25303>    BNE 'nw1
00033206 <AmiBlitz3.ab3@25305>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
0003320E <AmiBlitz3.ab3@25306>    ADD.l #2,-6(a4)
00033212 <AmiBlitz3.ab3@25309>    CMP.w #1,d2
00033216 <AmiBlitz3.ab3@25310>    BNE 'nb
0003321C <AmiBlitz3.ab3@25311>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00033224 <AmiBlitz3.ab3@25312>    ADD.l #3,-6(a4)
0003322A <AmiBlitz3.ab3@25315>    MOVE.w $4(a3),-2(a4)
0003322E <AmiBlitz3.ab3@25316>  BRA 'ne1
00033232 <AmiBlitz3.ab3@25320>   BSR.w writeword                                          ;write storeparameter
00033236 <AmiBlitz3.ab3@25323>   MOVE.w $4(A3),D1
0003323A <AmiBlitz3.ab3@25324>    BSR.w writeword
0003323C <AmiBlitz3.ab3@25327>   MOVEA.l (A7)+,A4
00033242 <AmiBlitz3.ab3@25331>   CLR.l functionreturntype
00033244 <AmiBlitz3.ab3@25333>   ADDQ.w #1,D6
00033248 <AmiBlitz3.ab3@25334>   CMP.w #11,D6          ; was #7                            ;max function parameters
0003324C <AmiBlitz3.ab3@25335>    BCC.w JUMP_toovarerr
00033252 <AmiBlitz3.ab3@25337>   MOVE.l currentfunction,a0
00033256 <AmiBlitz3.ab3@25338>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)             ;-4 because d6 is increment before
00033258 <AmiBlitz3.ab3@25340>   MOVE.b D2,(A4)+
0003325C <AmiBlitz3.ab3@25341>   CMP.w #$2C,D0      ;','
00033260 <AmiBlitz3.ab3@25342>    BNE.w 'nomore
00033266 <AmiBlitz3.ab3@25343>    JSR get1bytemain
0003326A <AmiBlitz3.ab3@25357>  BRA.w 'more
0003326E <AmiBlitz3.ab3@25360>   CMP.w #$7D,D0
00033272 <AmiBlitz3.ab3@25361>    BNE.w JUMP_syntaxerr
00033278 <AmiBlitz3.ab3@25364>   MOVEA.l currentfunction,A2
0003327A <AmiBlitz3.ab3@25365>   LSL.w #4,D5
0003327C <AmiBlitz3.ab3@25366>   OR.w D5,D6
00033280 <AmiBlitz3.ab3@25367>   MOVE.b D6,$4(A2)
00033282 <AmiBlitz3.ab3@25368>   LSR.w #4,D6
00033286 <AmiBlitz3.ab3@25369>    BEQ.w 'nostrings
0003328C <AmiBlitz3.ab3@25370>   LEA stbuff,A0
0003328E <AmiBlitz3.ab3@25371>   SUBQ.w #1,D6
00033290 <AmiBlitz3.ab3@25377>     MOVE.w D6,D1                                           ;function stringpars
00033292 <AmiBlitz3.ab3@25378>     LSL.w #2,D1                                            ;stringsize was 2
00033294 <AmiBlitz3.ab3@25381>       LSL.w #1,d1
00033296 <AmiBlitz3.ab3@25382>       ADDQ.w #4,d1
00033298 <AmiBlitz3.ab3@25385>     ADDQ.w #8,D1
0003329E <AmiBlitz3.ab3@25386>     MOVE.w D1,funcst+2
000332A4 <AmiBlitz3.ab3@25387>     MOVE.l funcst,D1
000332A8 <AmiBlitz3.ab3@25388>     BSR.w writelong
000332AA <AmiBlitz3.ab3@25389>     MOVE.w (A0)+,D1
000332AE <AmiBlitz3.ab3@25391>     CMP.b #5,d1
000332B2 <AmiBlitz3.ab3@25392>     BLE 's1
000332B6 <AmiBlitz3.ab3@25393>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
000332BA <AmiBlitz3.ab3@25394>     BSR writeword    ; was writeinstruction  tomsmart1
000332BC <AmiBlitz3.ab3@25395>     MOVE.w D6,D1                                           ;function stringpars
000332BE <AmiBlitz3.ab3@25396>     LSL.w #2,D1                                            ;stringsize was 2
000332C0 <AmiBlitz3.ab3@25398>       LSL.w #1,d1
000332C2 <AmiBlitz3.ab3@25400>     ADDQ.w #8,D1
000332C6 <AmiBlitz3.ab3@25401>     BSR writeword
000332CA <AmiBlitz3.ab3@25402>   BRA 's2
000332D0 <AmiBlitz3.ab3@25406>     OR.w movedna3,D1
000332D4 <AmiBlitz3.ab3@25407>      BSR.w writeword
000332DA <AmiBlitz3.ab3@25410>     MOVE.w (A0)+,least+2
000332E0 <AmiBlitz3.ab3@25411>     MOVE.l least,D1
000332E4 <AmiBlitz3.ab3@25412>      BSR.w writelong
000332E6 <AmiBlitz3.ab3@25413>     MOVE.l A0,-(A7)
000332EA <AmiBlitz3.ab3@25414>     MOVE.w #$C700,D1
000332EE <AmiBlitz3.ab3@25415>      BSR.w Atokejsr
000332F0 <AmiBlitz3.ab3@25416>     MOVEA.l (A7)+,A0
000332F4 <AmiBlitz3.ab3@25417>   DBF D6,'stloop
000332FA <AmiBlitz3.ab3@25420> JMP get1bytemain
00033300 <AmiBlitz3.ab3@25424>   MOVE.w dontwrite_nomemleft,D1
00033304 <AmiBlitz3.ab3@25425>    BNE.w 'skip
0003330A <AmiBlitz3.ab3@25426>   MOVE.l destpointer,-(A7)
00033310 <AmiBlitz3.ab3@25428>   MOVE.l A0,destpointer
00033316 <AmiBlitz3.ab3@25429>   MOVE.l linksize,D1
0003331A <AmiBlitz3.ab3@25430>    BSR.w writelong                                         ;writefunctions jumppos
00033320 <AmiBlitz3.ab3@25432>    TST.b fastfunc
00033324 <AmiBlitz3.ab3@25433>    BNE 'skip1
00033328 <AmiBlitz3.ab3@25435>   MOVE.w #$CC00,D1      ; was #clrloc
0003332C <AmiBlitz3.ab3@25436>    BSR.w tokejsr2                                          ;write clearvars
00033332 <AmiBlitz3.ab3@25439>   MOVE.l (A7)+,destpointer
00033334 <AmiBlitz3.ab3@25442> RTS
0003333A <AmiBlitz3.ab3@25445> JUMP_errormsg_nofast  JMP errormsg_nofast
00033340 <AmiBlitz3.ab3@25450>   MOVEA.l currentfunction,A2
00033344 <AmiBlitz3.ab3@25451>   MOVEA.l $E(A2),A0          ;pc of proc
00033348 <AmiBlitz3.ab3@25452>   MOVE.w $6(A2),D1
0003334C <AmiBlitz3.ab3@25453>    BEQ.w 'skiplink
00033352 <AmiBlitz3.ab3@25454>   MOVE.w D1,linksize+2
00033356 <AmiBlitz3.ab3@25455>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
0003335A <AmiBlitz3.ab3@25456>    BNE.w 'howdy
0003335C <AmiBlitz3.ab3@25460>   ADDQ.w #6,A0
00033360 <AmiBlitz3.ab3@25461>   MOVE.l A0,$E(A2)
00033364 <AmiBlitz3.ab3@25462>  BRA.w linkput
00033366 <AmiBlitz3.ab3@25467>   MOVE.l A0,-(A7)
0003336A <AmiBlitz3.ab3@25468>    BSR.w linkput
0003336C <AmiBlitz3.ab3@25469>   MOVEA.l (A7)+,A0
00033370 <AmiBlitz3.ab3@25470>   LEA $A(A0),A0
00033376 <AmiBlitz3.ab3@25471>   MOVEA.l currentfunction,A2
0003337A <AmiBlitz3.ab3@25472>  BRA.w 'cont
0003337E <AmiBlitz3.ab3@25475>   MOVE.w $8(A2),D1
00033382 <AmiBlitz3.ab3@25476>    BNE.w 'cont
00033386 <AmiBlitz3.ab3@25477>   LEA $10(A0),A0
0003338A <AmiBlitz3.ab3@25478>   MOVE.l A0,$E(A2)
0003338C <AmiBlitz3.ab3@25479>  RTS
00033392 <AmiBlitz3.ab3@25482>    MOVE.w dontwrite_nomemleft,D1                                     ;writeallocmem for functions (after releasemem called)
00033396 <AmiBlitz3.ab3@25483>    BNE.w 'contskip
0003339C <AmiBlitz3.ab3@25486>    TST.b fastfunc
000333A0 <AmiBlitz3.ab3@25487>    BNE JUMP_errormsg_nofast
000333A6 <AmiBlitz3.ab3@25489>   MOVE.l destpointer,-(A7)
000333AC <AmiBlitz3.ab3@25490>   MOVE.l A0,destpointer
000333B0 <AmiBlitz3.ab3@25491>   MOVE.w #$4EB9,D1      ;jsr
000333B4 <AmiBlitz3.ab3@25492>    BSR.w writeword
000333BA <AmiBlitz3.ab3@25493>    JSR addoff
000333BE <AmiBlitz3.ab3@25494>    BSR.w writelong
000333C0 <AmiBlitz3.ab3@25496>   MOVEA.l (A7)+,A0
000333C6 <AmiBlitz3.ab3@25497>   MOVEA.l destpointer,A1
000333C8 <AmiBlitz3.ab3@25498>   MOVE.l A0,-(A1)
000333CE <AmiBlitz3.ab3@25499>   MOVE.l A0,destpointer
000333D2 <AmiBlitz3.ab3@25502>   MOVE.w $8(A2),D4
000333D6 <AmiBlitz3.ab3@25503>    BPL.w 'linky
000333DA <AmiBlitz3.ab3@25504>   MOVE.w #$C004,D1   ; was  #newmem
000333DE <AmiBlitz3.ab3@25505>    BSR.w tokejsr2
000333E4 <AmiBlitz3.ab3@25506>   MOVEA.l currentfunction,A2
000333E8 <AmiBlitz3.ab3@25507>   MOVE.w $8(A2),D4
000333EC <AmiBlitz3.ab3@25508>   ANDI.w #$7FFF,D4        ;#32767,
000333F0 <AmiBlitz3.ab3@25511>    BEQ.w 'skipstat
000333F4 <AmiBlitz3.ab3@25515>   MOVE.b $4(A2),D1
000333F8 <AmiBlitz3.ab3@25516>   ANDI.w #$F,D1
000333FA <AmiBlitz3.ab3@25517>   MOVE.w D1,-(A7)
000333FE <AmiBlitz3.ab3@25518>   CMP.w #$5,D1
00033402 <AmiBlitz3.ab3@25519>    BCS.w 'npush
00033406 <AmiBlitz3.ab3@25520>   MOVE.w #$2F04,D1
0003340A <AmiBlitz3.ab3@25521>    BSR.w writeword
00033410 <AmiBlitz3.ab3@25524>   MOVE.l locdatast,D3
00033416 <AmiBlitz3.ab3@25525>    JSR datastart
0003341A <AmiBlitz3.ab3@25526>   MOVE.w #$C501,D1    ; was #localstat
0003341E <AmiBlitz3.ab3@25527>    BSR.w tokejsr2
00033420 <AmiBlitz3.ab3@25529>   MOVE.w (A7)+,D1
00033424 <AmiBlitz3.ab3@25530>   CMP.w #$5,D1
00033428 <AmiBlitz3.ab3@25531>    BCS.w 'skipstat
0003342C <AmiBlitz3.ab3@25532>   MOVE.w #$281F,D1
00033430 <AmiBlitz3.ab3@25533>    BSR.w writeword
00033434 <AmiBlitz3.ab3@25536>   MOVE.w #$4E75,D1
00033438 <AmiBlitz3.ab3@25537> BRA.w writeword
0003343E <AmiBlitz3.ab3@25541>   LEA mwait,A0
00033444 <AmiBlitz3.ab3@25542>   LEA mwaitf,A1
00033448 <AmiBlitz3.ab3@25543> BRA.w pokecode
0003344E <AmiBlitz3.ab3@25546> JUMP_laberr    JMP laberr
00033454 <AmiBlitz3.ab3@25547> JUMP_typeerr   JMP typeerr
0003345A <AmiBlitz3.ab3@25548> JUMP_dupofferr JMP dupofferr
0003345E <AmiBlitz3.ab3@25551>   CMP.w #$2E,D0           ;'.'
00033462 <AmiBlitz3.ab3@25552>   BNE.w JUMP_syntaxerr
00033468 <AmiBlitz3.ab3@25553>   JSR getparameter2
0003346C <AmiBlitz3.ab3@25554>   BEQ.w JUMP_laberr
00033472 <AmiBlitz3.ab3@25555>   LEA newtypebase,A2
00033478 <AmiBlitz3.ab3@25556>   JSR findtype
0003347C <AmiBlitz3.ab3@25557>   BNE.w 'ok1
00033484 <AmiBlitz3.ab3@25558>   CMPI.l #MaxByte,$4(A2)    ; was #$FF
00033488 <AmiBlitz3.ab3@25559>   BNE.w JUMP_typeerr
0003348C <AmiBlitz3.ab3@25560>  BRA.w 'ok2
00033492 <AmiBlitz3.ab3@25563>   JSR addlabel
00033496 <AmiBlitz3.ab3@25566>   CLR.l $4(A2)
0003349C <AmiBlitz3.ab3@25567>   MOVE.l A2,thistype
000334A2 <AmiBlitz3.ab3@25568>   CLR.l prevtype
000334A8 <AmiBlitz3.ab3@25569>   CLR.w typelen
000334AE <AmiBlitz3.ab3@25570>   CLR.w linemode
000334B4 <AmiBlitz3.ab3@25571>   JSR reget
000334B8 <AmiBlitz3.ab3@25572>   BNE.w typemode
000334BA <AmiBlitz3.ab3@25573> RTS
000334BE <AmiBlitz3.ab3@25577>   CMP.w #-$7FFE,D0      ; was #$8002
000334C2 <AmiBlitz3.ab3@25578>   BEQ.w doend2
000334CC <AmiBlitz3.ab3@25581>   MOVE.w oldqflag,instringon
000334D2 <AmiBlitz3.ab3@25582>   MOVEA.l lastsourcepos,A5
000334D4 <AmiBlitz3.ab3@25584>   MOVEQ.l #$00,D6      ;not pointer
000334D8 <AmiBlitz3.ab3@25585>   CMP.w #$2A,D0        ;'*'
000334DC <AmiBlitz3.ab3@25586>   BNE.w 'skip
000334DE <AmiBlitz3.ab3@25587>   MOVEQ.l #$01,D6
000334E4 <AmiBlitz3.ab3@25588>   JSR get1bytemain
000334E8 <AmiBlitz3.ab3@25589>  BRA.w 'skipv
000334EC <AmiBlitz3.ab3@25592>   CMP.w #$40,D0         ;'@'
000334F0 <AmiBlitz3.ab3@25593>   BNE.w 'skipv
000334F2 <AmiBlitz3.ab3@25594>   MOVEQ.l #$05,D6
000334F8 <AmiBlitz3.ab3@25595>   JSR get1bytemain
000334FE <AmiBlitz3.ab3@25598>   MOVE.w D6,flagmask
00033504 <AmiBlitz3.ab3@25599>   JSR getparameter2
00033508 <AmiBlitz3.ab3@25600>   BEQ.w JUMP_syntaxerr
0003350E <AmiBlitz3.ab3@25601>   MOVEA.l thistype,A2
00033510 <AmiBlitz3.ab3@25602>   ADDQ.w #4,A2
00033516 <AmiBlitz3.ab3@25603>   JSR findvariable2
0003351A <AmiBlitz3.ab3@25604>   BEQ.w JUMP_dupofferr     ;beq    .skip2
00033520 <AmiBlitz3.ab3@25606>   JSR addlabel
00033522 <AmiBlitz3.ab3@25609>   MOVE.l A2,-(A7)
00033526 <AmiBlitz3.ab3@25610>   CMP.w #$2E,D0           ;'.'
0003352A <AmiBlitz3.ab3@25611>    BEQ.w 'skip3
0003352E <AmiBlitz3.ab3@25612>   CMP.w #$24,D0           ;'$'
00033532 <AmiBlitz3.ab3@25613>    BNE.w 'notstring
00033538 <AmiBlitz3.ab3@25614>   MOVE.l #newtype_string,D2
0003353E <AmiBlitz3.ab3@25615>    JSR get1bytemain
00033542 <AmiBlitz3.ab3@25616>  BRA.w 'skip4a
00033548 <AmiBlitz3.ab3@25619>   MOVE.l prevtype,D2
0003354C <AmiBlitz3.ab3@25620>   BEQ.w JUMP_notypeerr2
00033550 <AmiBlitz3.ab3@25621>  BRA.w 'skip4
00033556 <AmiBlitz3.ab3@25624>   JSR getparameter2
0003355A <AmiBlitz3.ab3@25625>    BEQ.w JUMP_syntaxerr
00033560 <AmiBlitz3.ab3@25626>   LEA newtypebase,A2
00033566 <AmiBlitz3.ab3@25627>    JSR findtype
0003356A <AmiBlitz3.ab3@25628>    BEQ.w 'gotit
00033572 <AmiBlitz3.ab3@25629>   BTST #$0,flagmask+1
00033576 <AmiBlitz3.ab3@25630>    BEQ.w JUMP_notypeerr2
0003357C <AmiBlitz3.ab3@25634>   JSR addlabel
00033584 <AmiBlitz3.ab3@25639>   MOVE.w linenumat+2,$8(A2)
0003358C <AmiBlitz3.ab3@25640>   MOVE.l #MaxByte,$4(A2)       ; was $FF  ;set to pointer crap
0003358E <AmiBlitz3.ab3@25643>   MOVE.l A2,D2
00033594 <AmiBlitz3.ab3@25646>   CMP.l #newtype_byte,D2
00033598 <AmiBlitz3.ab3@25647>    BEQ.w 'byte
0003359E <AmiBlitz3.ab3@25650>   ADDQ.w #1,typelen
000335A6 <AmiBlitz3.ab3@25651>   BCLR #$0,typelen+1
000335A8 <AmiBlitz3.ab3@25654>   MOVEQ.l #$00,D3
000335AA <AmiBlitz3.ab3@25655>   MOVEA.l D2,A2
000335B0 <AmiBlitz3.ab3@25656>   MOVE.l A2,prevtype
000335B4 <AmiBlitz3.ab3@25657>   MOVE.w $8(A2),D3
000335B6 <AmiBlitz3.ab3@25658>   MOVEA.l (A7)+,A2
000335BA <AmiBlitz3.ab3@25659>   MOVE.l D2,$A(A2)
000335BC <AmiBlitz3.ab3@25660>   MOVEQ.l #$00,D4
000335C2 <AmiBlitz3.ab3@25661>   MOVE.w typelen,D4
000335C6 <AmiBlitz3.ab3@25662>   MOVE.w D4,$4(A2)
000335CE <AmiBlitz3.ab3@25663>   BTST #$0,flagmask+1
000335D2 <AmiBlitz3.ab3@25664>    BEQ.w 'skipz
000335D4 <AmiBlitz3.ab3@25665>   MOVEQ.l #$04,D3
000335D8 <AmiBlitz3.ab3@25668>   CMP.w #$5B,D0            ;'['
000335DC <AmiBlitz3.ab3@25669>    BNE.w 'skipzz
000335E0 <AmiBlitz3.ab3@25673>   MOVEM.l D3-D4/A2,-(A7)
000335E4 <AmiBlitz3.ab3@25674>    BSR.w evalconst3
000335E8 <AmiBlitz3.ab3@25675>   CMP.w #$5D,D0            ;']'
000335EC <AmiBlitz3.ab3@25676>    BNE.w JUMP_syntaxerr
000335EE <AmiBlitz3.ab3@25677>   TST.w D6
000335F2 <AmiBlitz3.ab3@25678>    BNE.w JUMP_fpconerr
000335F4 <AmiBlitz3.ab3@25679>   MOVE.l D3,D1
000335F8 <AmiBlitz3.ab3@25680>   MOVEM.l (A7)+,D3-D4/A2
000335FE <AmiBlitz3.ab3@25681>    JSR get1bytemain
00033602 <AmiBlitz3.ab3@25682>   MOVE.w D1,$8(A2)
00033606 <AmiBlitz3.ab3@25683>   MULU.l d1,d3                                             ;>32k fix was mulu.w
0003360E <AmiBlitz3.ab3@25684>   ORI.w #$2,flagmask
00033610 <AmiBlitz3.ab3@25687>   ADD.l D3,D4
00033616 <AmiBlitz3.ab3@25690>     CMP.l #65532,d4
0003361A <AmiBlitz3.ab3@25696>   BCC JUMP_toolongerr
00033622 <AmiBlitz3.ab3@25697>   MOVE.w flagmask,$6(A2)
00033628 <AmiBlitz3.ab3@25698>   MOVE.w D4,typelen
0003362A <AmiBlitz3.ab3@25699> RTS
00033630 <AmiBlitz3.ab3@25702> JUMP_badenderr  JMP badenderr
00033636 <AmiBlitz3.ab3@25703> JUMP_noiferr    JMP noiferr
0003363C <AmiBlitz3.ab3@25704> JUMP_toolongerr JMP toolongerr
00033642 <AmiBlitz3.ab3@25705> JUMP_fpconerr   JMP fpconerr
00033648 <AmiBlitz3.ab3@25709>   MOVE.l firstiff,D0
0003364C <AmiBlitz3.ab3@25710>    BEQ.w JUMP_noiferr
0003364E <AmiBlitz3.ab3@25711>   MOVEA.l D0,A0
00033652 <AmiBlitz3.ab3@25712>   MOVE.w $C(A0),D0
00033656 <AmiBlitz3.ab3@25713>   ANDI.w #$FF,D0
00033658 <AmiBlitz3.ab3@25714>   CMP.w D0,D1
0003365C <AmiBlitz3.ab3@25715>    BNE.w JUMP_badenderr
00033660 <AmiBlitz3.ab3@25718>   CMP.w #$1,D1
00033664 <AmiBlitz3.ab3@25719>   BNE.w 'calcbra
00033668 <AmiBlitz3.ab3@25721>   MOVE.w #$6000,D1
0003366E <AmiBlitz3.ab3@25724>     TST.b fast
00033672 <AmiBlitz3.ab3@25725>     BEQ 'l1
00033678 <AmiBlitz3.ab3@25726>     OR.l #$ff,d1
0003367C <AmiBlitz3.ab3@25731>   BSR.w writeword
00033682 <AmiBlitz3.ab3@25732>   MOVEA.l destpointer,A1
00033686 <AmiBlitz3.ab3@25733>   MOVE.l $4(A0),D1
00033688 <AmiBlitz3.ab3@25734>   SUB.l A1,D1
0003368E <AmiBlitz3.ab3@25737>     TST.b fast
00033692 <AmiBlitz3.ab3@25738>     BEQ 'l2
00033696 <AmiBlitz3.ab3@25739>     BSR writelong
0003369A <AmiBlitz3.ab3@25740>   BRA 'calcbra
0003369E <AmiBlitz3.ab3@25745>   BSR.w writeword
000336A2 <AmiBlitz3.ab3@25748>   MOVEA.l $8(A0),A1                                        ;write if branch destination
000336A8 <AmiBlitz3.ab3@25749>   MOVE.l destpointer,D1
000336AA <AmiBlitz3.ab3@25750>   SUB.l A1,D1
000336B0 <AmiBlitz3.ab3@25753>     TST.b fast
000336B4 <AmiBlitz3.ab3@25754>     BEQ 'l3
000336B6 <AmiBlitz3.ab3@25755>     ADDQ.l #4,D1
000336BC <AmiBlitz3.ab3@25756>     MOVE.w dontwrite_nomemleft,D0
000336C0 <AmiBlitz3.ab3@25757>     BNE.w 'skip
000336C4 <AmiBlitz3.ab3@25758>     MOVE.l d1,-$4(a1)
000336C8 <AmiBlitz3.ab3@25759>   BRA 'skip
000336CA <AmiBlitz3.ab3@25764>   ADDQ.l #2,d1
000336D0 <AmiBlitz3.ab3@25766>   TST.w dontwrite_nomemleft
000336D4 <AmiBlitz3.ab3@25768>   BNE 'skip
000336DA <AmiBlitz3.ab3@25770>   CMP.l #MinWordSgnd,D1
000336DE <AmiBlitz3.ab3@25771>   BCC.w JUMP_bigiferr
000336E2 <AmiBlitz3.ab3@25773>   MOVE.w D1,-$2(A1)
000336E4 <AmiBlitz3.ab3@25776> RTS
000336EA <AmiBlitz3.ab3@25778> JUMP_bigiferr JMP bigiferr
000336F4 <AmiBlitz3.ab3@25783>   MOVE.w oldqflag,instringon
000336FA <AmiBlitz3.ab3@25784>   MOVEA.l lastsourcepos,A5
000336FC <AmiBlitz3.ab3@25787>   MOVEQ.l #$01,D1
00033700 <AmiBlitz3.ab3@25788> BRA.w doendif
0003370A <AmiBlitz3.ab3@25792>   MOVE.w oldqflag,instringon
00033710 <AmiBlitz3.ab3@25793>   MOVEA.l lastsourcepos,A5
00033712 <AmiBlitz3.ab3@25796>   MOVEQ.l #$00,D1
00033716 <AmiBlitz3.ab3@25799>   BSR.w doendif3
0003371A <AmiBlitz3.ab3@25800>   BSR.w freetheifz
00033720 <AmiBlitz3.ab3@25801> JMP get1bytemain
00033726 <AmiBlitz3.ab3@25805>   MOVE.l (A0),firstiff
00033728 <AmiBlitz3.ab3@25806>   MOVEA.l A0,A1
0003372A <AmiBlitz3.ab3@25807>   MOVEQ.l #$0E,D0
00033730 <AmiBlitz3.ab3@25808>   MOVEA.l _execbase,A6
00033736 <AmiBlitz3.ab3@25811>   MOVE.l mempool,a0
0003373A <AmiBlitz3.ab3@25812> JMP _FreePooled(A6)
00033740 <AmiBlitz3.ab3@25816> JUMP_modeerr JMP modeerr
00033746 <AmiBlitz3.ab3@25817> JUMP_interr3 JMP interr3
0003374C <AmiBlitz3.ab3@25818> JUMP_interr JMP interr
00033752 <AmiBlitz3.ab3@25822>   JSR get1bytemain
00033756 <AmiBlitz3.ab3@25825>   BEQ.w 'done
0003375E <AmiBlitz3.ab3@25827>   CMP.l #"noa7",-1(a5)
00033762 <AmiBlitz3.ab3@25828>   BNE 'l1
00033768 <AmiBlitz3.ab3@25829>   JSR get1bytemain
0003376E <AmiBlitz3.ab3@25830>   JSR get1bytemain
00033774 <AmiBlitz3.ab3@25831>   JSR get1bytemain
0003377C <AmiBlitz3.ab3@25832>   MOVE.w #$3a,lastchar
00033780 <AmiBlitz3.ab3@25833>  BRA 'done
00033786 <AmiBlitz3.ab3@25836>   CMP.w #"d0",-1(a5)
0003378A <AmiBlitz3.ab3@25837>   BNE 'l2
00033792 <AmiBlitz3.ab3@25838>   MOVE.b #1,returncode
00033798 <AmiBlitz3.ab3@25839>   CLR.w lastchar
0003379C <AmiBlitz3.ab3@25840>  BRA 'done
000337A0 <AmiBlitz3.ab3@25843>   CMP.w #$80d7,d0
000337A4 <AmiBlitz3.ab3@25844>   BNE 'loop
000337AA <AmiBlitz3.ab3@25845>   JSR skiprest
000337AC <AmiBlitz3.ab3@25846>  RTS
000337B0 <AmiBlitz3.ab3@25850>   BSR.w 'doend3
000337B6 <AmiBlitz3.ab3@25851>   JSR reget
000337BA <AmiBlitz3.ab3@25852>   BNE.w 'loop
000337BC <AmiBlitz3.ab3@25853>  RTS
000337C0 <AmiBlitz3.ab3@25856>   CMP.w #-$7FFF,D0        ; was #$8001
000337C4 <AmiBlitz3.ab3@25857>    BNE.w 'nottype
000337CA <AmiBlitz3.ab3@25858>   MOVE.w linemode,D1
000337CE <AmiBlitz3.ab3@25859>    BNE.w JUMP_modeerr
000337D4 <AmiBlitz3.ab3@25860>   ADDQ.w #1,typelen
000337DC <AmiBlitz3.ab3@25861>   BCLR #$0,typelen+1
000337E2 <AmiBlitz3.ab3@25862>   MOVEA.l thistype,A0
000337EA <AmiBlitz3.ab3@25863>   MOVE.w typelen,$8(A0)
000337F2 <AmiBlitz3.ab3@25864>   MOVE.w #$FFFF,linemode        ; was -1
000337F8 <AmiBlitz3.ab3@25865>  JMP get1bytemain
000337FC <AmiBlitz3.ab3@25868>   CMP.w #-$7FF5,D0    ; was #$800b
00033800 <AmiBlitz3.ab3@25869>    BEQ.w mydoendif
00033804 <AmiBlitz3.ab3@25872>   CMP.w #-$7FF4,D0    ; was #$800c
00033808 <AmiBlitz3.ab3@25873>    BEQ.w dowend2
0003380C <AmiBlitz3.ab3@25876>   CMP.w #-$7FF8,D0    ; was #$8008
00033810 <AmiBlitz3.ab3@25877>    BNE.w 'notstate
00033814 <AmiBlitz3.ab3@25882>  BRA.w endstate
00033818 <AmiBlitz3.ab3@25885>   CMP.w #-$7FF7,D0        ; was #$8009
0003381C <AmiBlitz3.ab3@25886>    BNE.w 'notfunc
00033822 <AmiBlitz3.ab3@25888>    TST.b fpu
00033826 <AmiBlitz3.ab3@25889>    BEQ 'nof
0003382C <AmiBlitz3.ab3@25890>    MOVEA.l currentfunction,A0
00033832 <AmiBlitz3.ab3@25891>    CMP.l #0,a0
00033836 <AmiBlitz3.ab3@25892>    BEQ 'nof
0003383C <AmiBlitz3.ab3@25893>    CMP.b #5,$5(a0)
00033840 <AmiBlitz3.ab3@25894>     BNE 'nof
00033846 <AmiBlitz3.ab3@25895>    MOVE.l #$f23c5000,d1
0003384A <AmiBlitz3.ab3@25896>    BSR writelong
0003384E <AmiBlitz3.ab3@25897>    MOVE.w #0,d1
00033852 <AmiBlitz3.ab3@25898>    BSR writeword
00033856 <AmiBlitz3.ab3@25902>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
0003385A <AmiBlitz3.ab3@25903>    BSR.w writeword
00033860 <AmiBlitz3.ab3@25904>   MOVEA.l currentfunction,A0
00033866 <AmiBlitz3.ab3@25906>   CMP.l #0,a0
0003386A <AmiBlitz3.ab3@25907>   BEQ 'state
00033870 <AmiBlitz3.ab3@25908>   MOVE.l destpointer,d1
00033874 <AmiBlitz3.ab3@25909>   SUB.l $e(a0),d1
00033878 <AmiBlitz3.ab3@25910>   MOVE.l d1,isfunc+1(a0)
0003387E <AmiBlitz3.ab3@25912>   CMPI.b #$7,$5(A0)
00033882 <AmiBlitz3.ab3@25913>    BNE.w 'state
00033888 <AmiBlitz3.ab3@25914>   MOVE.w putstlen,D1
0003388C <AmiBlitz3.ab3@25915>    BSR.w writeword
00033890 <AmiBlitz3.ab3@25916>  BRA.w 'state
00033894 <AmiBlitz3.ab3@25919>   CMP.w #-$7FD0,D0         ; was #$8000+48
00033898 <AmiBlitz3.ab3@25920>    BNE.w 'notsetint
0003389E <AmiBlitz3.ab3@25922>   MOVE.w proceduremode,D1
000338A2 <AmiBlitz3.ab3@25923>    BNE.w JUMP_interr3
000338A8 <AmiBlitz3.ab3@25925>   TST.b debugmode
000338AC <AmiBlitz3.ab3@25926>    BEQ.w 'norerrf1
000338AE <AmiBlitz3.ab3@25928>   MOVEQ.l #$03,D1
000338B4 <AmiBlitz3.ab3@25929>    JSR writetrap
000338BA <AmiBlitz3.ab3@25931>   MOVE.w dontwrite_nomemleft,D1
000338BE <AmiBlitz3.ab3@25932>    BNE.w 'norerrf1
000338C4 <AmiBlitz3.ab3@25934>   MOVEA.l intcleanat,A0
000338CA <AmiBlitz3.ab3@25935>   MOVE.l destpointer,(A0)
000338CE <AmiBlitz3.ab3@25937>   MOVE.w #$C30C,D1       ; was #gouse
000338D2 <AmiBlitz3.ab3@25938>    BSR.w Atokejsr        ;for runerrlib stack chex
000338D8 <AmiBlitz3.ab3@25941>   MOVE.w intstring,D1
000338DC <AmiBlitz3.ab3@25942>    BEQ.w JUMP_interr
000338E0 <AmiBlitz3.ab3@25943>    BPL.w 'nosp
000338E6 <AmiBlitz3.ab3@25945>   MOVE.w intlevel,D1
000338EA <AmiBlitz3.ab3@25946>   ORI.w #$7200,D1
000338EE <AmiBlitz3.ab3@25947>    BSR.w writeword       ;moveq #level,d1
000338F2 <AmiBlitz3.ab3@25948>   MOVE.w #$C103,D1       ; was #oldint,
000338F6 <AmiBlitz3.ab3@25949>    BSR.w Atokejsr
000338FC <AmiBlitz3.ab3@25950>   CLR.w intlevel
00033902 <AmiBlitz3.ab3@25953>   CLR.w intstring
00033908 <AmiBlitz3.ab3@25955>   MOVE.l intfin,D1
0003390C <AmiBlitz3.ab3@25956>    BSR.w writelong
00033912 <AmiBlitz3.ab3@25958>   MOVE.l #$70004E75,D1
00033916 <AmiBlitz3.ab3@25959>    BSR.w writelong
0003391C <AmiBlitz3.ab3@25961>   MOVE.w dontwrite_nomemleft,D1
00033920 <AmiBlitz3.ab3@25962>    BNE.w 'sintdone
00033926 <AmiBlitz3.ab3@25963>   MOVEA.l intjmpat,A0
0003392A <AmiBlitz3.ab3@25964>   MOVE.l destpointer(PC),(A0)
00033930 <AmiBlitz3.ab3@25967>  JMP get1bytemain
00033934 <AmiBlitz3.ab3@25970>   CMP.w #-$7FF2,D0   ; was #$800e     ;end select?
00033938 <AmiBlitz3.ab3@25971>    BEQ.w doendsel
0003393C <AmiBlitz3.ab3@25972>   CMP.w #-$7F4C,D0  ; was #$8001+tnum
00033940 <AmiBlitz3.ab3@25973>    BNE.w 'notseterr
00033946 <AmiBlitz3.ab3@25974>  JMP doendseterr
0003394C <AmiBlitz3.ab3@25978>  JMP syntaxerr
00033952 <AmiBlitz3.ab3@25981>   TST.w dirmode
00033956 <AmiBlitz3.ab3@25982>   BNE.w JUMP_baddirerr
0003395A <AmiBlitz3.ab3@25983>   MOVE.w #$C800,D1      ; #endjmp
00033960 <AmiBlitz3.ab3@25984>   JSR Atokejsr          ; was bra org source                                  ;end
00033968 <AmiBlitz3.ab3@25986>   CMP.l #"noa7",-4(a5)
0003396C <AmiBlitz3.ab3@25987>   BNE 'l10
00033972 <AmiBlitz3.ab3@25988>   TST.w dontwrite_nomemleft
00033976 <AmiBlitz3.ab3@25989>   BNE 'l10
0003397C <AmiBlitz3.ab3@25990>   MOVE.l destpointer,d1
0003397E <AmiBlitz3.ab3@25991>   SUBQ.l #4,d1
00033980 <AmiBlitz3.ab3@25992>   MOVE.l a0,-(a7)
00033982 <AmiBlitz3.ab3@25993>   MOVE.l d1,a0
00033984 <AmiBlitz3.ab3@25994>   MOVE.l (a0),a0
0003398A <AmiBlitz3.ab3@25995>   MOVE.l #$60000002,(a0)+
0003398E <AmiBlitz3.ab3@25996>   MOVE.w #$588f,(a0)
00033990 <AmiBlitz3.ab3@25997>   MOVE.l (a7)+,a0
00033992 <AmiBlitz3.ab3@26000> RTS
00033998 <AmiBlitz3.ab3@26005>   TST.w dirmode                                            ;stop
0003399C <AmiBlitz3.ab3@26006>   BNE.w JUMP_baddirerr
0003399E <AmiBlitz3.ab3@26008>   MOVE.w d0,d1
000339A2 <AmiBlitz3.ab3@26009>   BEQ 'l10
000339A6 <AmiBlitz3.ab3@26010>   CMP.b #$3a,d0
000339AA <AmiBlitz3.ab3@26011>   BEQ 'l10
000339B0 <AmiBlitz3.ab3@26012>   JSR get1bytemain
000339B6 <AmiBlitz3.ab3@26016>   TST.b debugmode
000339BA <AmiBlitz3.ab3@26017>   BEQ.w newstop
000339BE <AmiBlitz3.ab3@26018>   MOVE.w #$D501,D1
000339C2 <AmiBlitz3.ab3@26019> BRA.w Atokejsr
000339C4 <AmiBlitz3.ab3@26025>     RTS
000339C6 <AmiBlitz3.ab3@26027>   MOVE.w d1,d0
000339CA <AmiBlitz3.ab3@26028>   BEQ 'l10
000339CE <AmiBlitz3.ab3@26029>   CMP.b #$3a,d0
000339D2 <AmiBlitz3.ab3@26030>   BEQ 'l10
000339D6 <AmiBlitz3.ab3@26031>   SUB.b #$30,d0
000339DA <AmiBlitz3.ab3@26032>   MOVE.w #$4e40,d1
000339DE <AmiBlitz3.ab3@26033>  BRA 'l11
000339E2 <AmiBlitz3.ab3@26036>   MOVE.w #$4e4a,d1
000339E6 <AmiBlitz3.ab3@26037>  BRA writeword
000339E8 <AmiBlitz3.ab3@26040>   ADD.b d0,d1
000339EC <AmiBlitz3.ab3@26041> BRA writeword
000339F2 <AmiBlitz3.ab3@26045> JMP badconterr        ;cont not currently supported!
000339F6 <AmiBlitz3.ab3@26048>   MOVE.w #$4E71,D1
000339FA <AmiBlitz3.ab3@26049> BRA.w writeword
00033A00 <AmiBlitz3.ab3@26054>   MOVEA.l firstfor,A2
00033A06 <AmiBlitz3.ab3@26055>   CLR.l firstfor
00033A0C <AmiBlitz3.ab3@26056>   MOVEA.l _execbase,A6
00033A10 <AmiBlitz3.ab3@26059>   CMPA.w #$0,A2
00033A14 <AmiBlitz3.ab3@26060>   BEQ.w 'done
00033A16 <AmiBlitz3.ab3@26061>   MOVEA.l A2,A1
00033A18 <AmiBlitz3.ab3@26062>   MOVEA.l (A1),A2
00033A1A <AmiBlitz3.ab3@26063>   MOVEQ.l #$00,D0
00033A1E <AmiBlitz3.ab3@26064>   MOVE.b $10(A1),D0
00033A24 <AmiBlitz3.ab3@26067>   MOVE.l mempool2,a0  
00033A28 <AmiBlitz3.ab3@26068>   JSR _FreePooled(A6)                                      ;freememfor_error
00033A2C <AmiBlitz3.ab3@26070>  BRA.w 'loop
00033A2E <AmiBlitz3.ab3@26073> RTS
00033A34 <AmiBlitz3.ab3@26076> JUMP_badpenderr JMP badpenderr
00033A3A <AmiBlitz3.ab3@26077> JUMP_noenderr   JMP noenderr
00033A40 <AmiBlitz3.ab3@26083>   MOVE.w proceduremode,D1
00033A44 <AmiBlitz3.ab3@26084>    BEQ.w JUMP_badpenderr
00033A4A <AmiBlitz3.ab3@26086>   MOVE.w dontwrite_nomemleft,D1
00033A4E <AmiBlitz3.ab3@26087>    BNE.w 'ship
00033A54 <AmiBlitz3.ab3@26088>   MOVEA.l firstpend,A2
00033A58 <AmiBlitz3.ab3@26091>   CMPA.w #$0,A2
00033A5C <AmiBlitz3.ab3@26092>    BEQ.w 'ship
00033A60 <AmiBlitz3.ab3@26093>   MOVEA.l $4(A2),A0
00033A66 <AmiBlitz3.ab3@26094>   MOVE.l destpointer,(A0)
00033A68 <AmiBlitz3.ab3@26095>   MOVEA.l (A2),A2
00033A6C <AmiBlitz3.ab3@26096>  BRA.w 'loop0
00033A72 <AmiBlitz3.ab3@26099>   TST.b debugmode
00033A76 <AmiBlitz3.ab3@26100>    BEQ.b 'ship2
00033A78 <AmiBlitz3.ab3@26102>   MOVEQ.l #$05,D1
00033A7E <AmiBlitz3.ab3@26103>   JSR writetrap
00033A84 <AmiBlitz3.ab3@26106>   MOVEA.l firstlocal,A2                                    ;firstlocal
00033A8A <AmiBlitz3.ab3@26107>   JSR calcstatic2b                                           ;calcstatic
00033A90 <AmiBlitz3.ab3@26108>   MOVEA.l currentfunction,A0
00033A96 <AmiBlitz3.ab3@26110>   MOVE.l destpointer,d1
00033A9A <AmiBlitz3.ab3@26111>   SUB.l $e(a0),d1
00033A9E <AmiBlitz3.ab3@26112>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00033AA2 <AmiBlitz3.ab3@26114>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00033AA8 <AmiBlitz3.ab3@26115>   MOVE.l D3,locdatast
00033AAE <AmiBlitz3.ab3@26116>   MOVEA.l tempvm,A1
00033AB4 <AmiBlitz3.ab3@26118>   CLR.b infunctioncode
00033ABA <AmiBlitz3.ab3@26119>   MOVE.l firstiffstore,d1
00033AC0 <AmiBlitz3.ab3@26120>   CMP.l firstiff,d1
00033AC4 <AmiBlitz3.ab3@26121>   BNE JUMP_noenderr
00033AC8 <AmiBlitz3.ab3@26123>   TST.w $C(A1)                                             ;dim
00033ACC <AmiBlitz3.ab3@26124>    BPL.w 'nolskip
00033AD2 <AmiBlitz3.ab3@26125>  BSET #$7,$8(A0)
00033AD6 <AmiBlitz3.ab3@26126>   MOVE.w #$C005,D1      ;#freelast,
00033ADA <AmiBlitz3.ab3@26127>    BSR.w tokejsr2                                          ;writefreememstatement
00033ADE <AmiBlitz3.ab3@26128>  BRA.w 'lskip2
00033AE6 <AmiBlitz3.ab3@26131>   MOVE.w memlibstat,$C(A1)
00033AEC <AmiBlitz3.ab3@26134>   MOVEA.l currentfunction,A0
00033AF0 <AmiBlitz3.ab3@26135>   MOVE.l $E(A0),-(A7)
00033AF8 <AmiBlitz3.ab3@26136>   MOVE.w locvaroff,$6(A0)
00033AFE <AmiBlitz3.ab3@26137>   BCLR #$1,$7(A0)
00033B04 <AmiBlitz3.ab3@26138>   BCLR #$0,$7(A0)
00033B0A <AmiBlitz3.ab3@26139>   CMPI.b #$7,$5(A0)
00033B0E <AmiBlitz3.ab3@26140>    BNE.w 'penis
00033B14 <AmiBlitz3.ab3@26141>   MOVE.w getstlen,D1
00033B18 <AmiBlitz3.ab3@26142>    BSR.w writeword
00033B1C <AmiBlitz3.ab3@26145>   TST.w $6(A0)
00033B20 <AmiBlitz3.ab3@26146>    BEQ.w 'nolink
00033B24 <AmiBlitz3.ab3@26147>   MOVE.w #$FC7B,D1   ;#64635
00033B2A <AmiBlitz3.ab3@26148>    JSR uselib
00033B30 <AmiBlitz3.ab3@26149>   MOVE.w unlinka4,D1
00033B36 <AmiBlitz3.ab3@26150>    JSR writeword
00033B3C <AmiBlitz3.ab3@26156>   MOVEA.l currentfunction,A0
00033B3E <AmiBlitz3.ab3@26157>   MOVEQ.l #$00,D1
00033B42 <AmiBlitz3.ab3@26158>   MOVE.b $4(A0),D1
00033B44 <AmiBlitz3.ab3@26159>   LSR.w #4,D1
00033B48 <AmiBlitz3.ab3@26160>    BEQ.w 'nofix
00033B4A <AmiBlitz3.ab3@26163>      LSL.w #1,d1
00033B4E <AmiBlitz3.ab3@26166>   CMP.w #$1,D1
00033B52 <AmiBlitz3.ab3@26167>    BNE.w 'not1
00033B58 <AmiBlitz3.ab3@26168>   MOVE.w fix1,D1
00033B5E <AmiBlitz3.ab3@26169>    JSR writeword
00033B62 <AmiBlitz3.ab3@26170>  BRA.w 'nofix
00033B64 <AmiBlitz3.ab3@26173>   LSL.w #2,D1
00033B66 <AmiBlitz3.ab3@26174>   MOVE.w D1,-(A7)
00033B6C <AmiBlitz3.ab3@26175>   MOVE.w D1,moverts+2
00033B72 <AmiBlitz3.ab3@26176>   MOVE.l moverts,D1
00033B78 <AmiBlitz3.ab3@26177>    JSR writelong
00033B7A <AmiBlitz3.ab3@26178>   MOVE.w (A7)+,D1
00033B7E <AmiBlitz3.ab3@26179>   CMP.w #$8,D1
00033B82 <AmiBlitz3.ab3@26180>    BHI.w 'fix
00033B86 <AmiBlitz3.ab3@26181>   ANDI.w #$7,D1
00033B88 <AmiBlitz3.ab3@26182>   LSL.w #8,D1
00033B8A <AmiBlitz3.ab3@26183>   LSL.w #1,D1
00033B90 <AmiBlitz3.ab3@26184>   OR.w fixq,D1
00033B96 <AmiBlitz3.ab3@26185>    JSR writeword
00033B9A <AmiBlitz3.ab3@26186>  BRA.w 'nofix
00033BA0 <AmiBlitz3.ab3@26189>    MOVE.w D1,fixstack+2
00033BA6 <AmiBlitz3.ab3@26190>   MOVE.l fixstack,D1
00033BAC <AmiBlitz3.ab3@26191>    JSR writelong
00033BB0 <AmiBlitz3.ab3@26194>    BSR.w normret
00033BB4 <AmiBlitz3.ab3@26198>    BSR.w procfixer
00033BB6 <AmiBlitz3.ab3@26200>   MOVEA.l (A7)+,A0
00033BBC <AmiBlitz3.ab3@26201>   MOVE.w dontwrite_nomemleft,D1
00033BC0 <AmiBlitz3.ab3@26202>    BNE.w 'skipjp
00033BC6 <AmiBlitz3.ab3@26203>   MOVE.l destpointer,-(A0)
00033BCC <AmiBlitz3.ab3@26206>   CLR.w proceduremode
00033BD2 <AmiBlitz3.ab3@26207>   CLR.l currentfunction
00033BD8 <AmiBlitz3.ab3@26208>   CLR.w procnum
00033BDC <AmiBlitz3.ab3@26209>    BSR.w droplocals
00033BE2 <AmiBlitz3.ab3@26210>    JSR freepends
00033BE8 <AmiBlitz3.ab3@26211> JMP get1bytemain
00033BEA <AmiBlitz3.ab3@26215>   MOVEQ.l #$0C,D0
00033BEC <AmiBlitz3.ab3@26216>   MOVEQ.l #$01,D1
00033BF2 <AmiBlitz3.ab3@26217>   MOVEA.l _execbase,A6
00033BF8 <AmiBlitz3.ab3@26220>   MOVE.l mempool,a0
00033BFC <AmiBlitz3.ab3@26221>   JSR _AllocPooled(a6)
00033BFE <AmiBlitz3.ab3@26223>   MOVEA.l D0,A0
00033C04 <AmiBlitz3.ab3@26224>   MOVE.l alllocals,(A0)
00033C0A <AmiBlitz3.ab3@26225>   MOVE.l A0,alllocals
00033C10 <AmiBlitz3.ab3@26227>   MOVE.l firstlocal,D0
00033C16 <AmiBlitz3.ab3@26228>   CLR.l firstlocal
00033C1A <AmiBlitz3.ab3@26229>   MOVE.l D0,$4(A0)
00033C20 <AmiBlitz3.ab3@26230>   MOVE.l firstglob,D1
00033C26 <AmiBlitz3.ab3@26231>   CLR.l firstglob
00033C2A <AmiBlitz3.ab3@26232>   MOVE.l D1,$8(A0)
00033C30 <AmiBlitz3.ab3@26234>   TST.b debugmode
00033C34 <AmiBlitz3.ab3@26235>    BEQ.b 'skip
00033C3A <AmiBlitz3.ab3@26236>   TST.w dontwrite_nomemleft
00033C3E <AmiBlitz3.ab3@26237>    BNE.b 'skip
00033C42 <AmiBlitz3.ab3@26239>   MOVEA.l proclocals(PC),A0
00033C44 <AmiBlitz3.ab3@26240>   MOVE.l D0,(A0)+
00033C46 <AmiBlitz3.ab3@26241>   MOVE.l D1,(A0)
00033C48 <AmiBlitz3.ab3@26244> RTS
00033C4E <AmiBlitz3.ab3@26247> JUMP_baddirerr JMP baddirerr
00033C54 <AmiBlitz3.ab3@26248> JUMP_noforerr  JMP noforerr
00033C5A <AmiBlitz3.ab3@26252>   TST.w dirmode
00033C5E <AmiBlitz3.ab3@26253>    BNE.w JUMP_baddirerr
00033C64 <AmiBlitz3.ab3@26254>   MOVE.l firstfor,D1
00033C68 <AmiBlitz3.ab3@26255>    BEQ.w JUMP_noforerr
00033C6E <AmiBlitz3.ab3@26256>   JSR reget
00033C72 <AmiBlitz3.ab3@26257>    BEQ.w 'unknown
00033C76 <AmiBlitz3.ab3@26263>   BSR.w getparameter
00033C7A <AmiBlitz3.ab3@26264>   MOVEA.l firstfor(PC),A2
00033C7C <AmiBlitz3.ab3@26265>   MOVEQ.l #$00,D1
00033C80 <AmiBlitz3.ab3@26266>   MOVE.b $10(A2),D1
00033C84 <AmiBlitz3.ab3@26267>   SUBI.w #$12,D1
00033C86 <AmiBlitz3.ab3@26268>   CMP.w D1,D2
00033C8A <AmiBlitz3.ab3@26269>    BNE.w JUMP_noforerr
00033C8E <AmiBlitz3.ab3@26270>   LEA ptr_parameterstore(PC),A0
00033C92 <AmiBlitz3.ab3@26271>   LEA $11(A2),A1
00033C94 <AmiBlitz3.ab3@26272>   SUBQ.w #1,D2
00033C96 <AmiBlitz3.ab3@26275>     CMPM.b (A0)+,(A1)+
00033C9A <AmiBlitz3.ab3@26276>     BNE.w JUMP_noforerr
00033C9E <AmiBlitz3.ab3@26277>   DBF D2,'chkname
00033CA2 <AmiBlitz3.ab3@26279>    BSR.w 'unknown2
00033CA8 <AmiBlitz3.ab3@26280>    JSR reget
00033CAC <AmiBlitz3.ab3@26281>    BEQ.w 'byebye
00033CB0 <AmiBlitz3.ab3@26282>   CMP.w #$2C,D0           ; ','
00033CB4 <AmiBlitz3.ab3@26283>    BNE.w JUMP_syntaxerr
00033CBA <AmiBlitz3.ab3@26284>    JSR get1bytemain
00033CBE <AmiBlitz3.ab3@26285>  BRA.w 'nextnext
00033CC0 <AmiBlitz3.ab3@26288>  RTS
00033CC4 <AmiBlitz3.ab3@26292>   MOVE.l 8(a7),a2
00033CC8 <AmiBlitz3.ab3@26293>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033CCC <AmiBlitz3.ab3@26294>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033CD0 <AmiBlitz3.ab3@26295>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00033CD2 <AmiBlitz3.ab3@26300>   MOVEA.l D1,A2
00033CD8 <AmiBlitz3.ab3@26303>   JSR popnext                                           ;error checking for next.
00033CDC <AmiBlitz3.ab3@26304>   MOVE.w $C(A2),D0
00033CE2 <AmiBlitz3.ab3@26306>   LEA nextb,A0
00033CE8 <AmiBlitz3.ab3@26307>   LEA nextbf,A1
00033CEC <AmiBlitz3.ab3@26308>   CMP.w #$1,D0
00033CF0 <AmiBlitz3.ab3@26309>    BEQ.w 'donext
00033CF6 <AmiBlitz3.ab3@26310>   LEA nextw,A0
00033CFC <AmiBlitz3.ab3@26311>   LEA nextwf,A1
00033D00 <AmiBlitz3.ab3@26312>   CMP.w #$2,D0
00033D04 <AmiBlitz3.ab3@26313>    BEQ.w 'donext
00033D0A <AmiBlitz3.ab3@26314>   LEA nextl,A0
00033D10 <AmiBlitz3.ab3@26315>   LEA nextlf,A1
00033D14 <AmiBlitz3.ab3@26316>   CMP.w #$5,D0
00033D18 <AmiBlitz3.ab3@26317>    BNE.w 'donext
00033D1E <AmiBlitz3.ab3@26319>    TST.b fpu
00033D22 <AmiBlitz3.ab3@26320>    BEQ 'old
00033D28 <AmiBlitz3.ab3@26321>    LEA 'fpu2dats,a0                                         ;fpu next code
00033D2E <AmiBlitz3.ab3@26322>    LEA 'fpu2date,a1
00033D32 <AmiBlitz3.ab3@26323>  BRA 'donext
00033D36 <AmiBlitz3.ab3@26327>   MOVE.w #$C900,D1     ; #getffpbase
00033D3A <AmiBlitz3.ab3@26328>    BSR.w Atokejsr
00033D40 <AmiBlitz3.ab3@26329>   LEA nextf,A0
00033D46 <AmiBlitz3.ab3@26330>   LEA nextff,A1
00033D4C <AmiBlitz3.ab3@26333>   JSR pokecode
00033D52 <AmiBlitz3.ab3@26335>    TST.b fast                                             ;fast for next deactivate
00033D56 <AmiBlitz3.ab3@26336>  BRA 'l1
00033D5C <AmiBlitz3.ab3@26338>     TST.b onestep
00033D60 <AmiBlitz3.ab3@26339>     BEQ 'l1
00033D66 <AmiBlitz3.ab3@26340>     CLR.b onestep
00033D6C <AmiBlitz3.ab3@26341>     SUBQ.l #4,destpointer
00033D70 <AmiBlitz3.ab3@26342>     MOVE.w #$5292,d1
00033D76 <AmiBlitz3.ab3@26343>     JSR writeword
00033D7A <AmiBlitz3.ab3@26347>   MOVE.l thebra(PC),D1
00033D80 <AmiBlitz3.ab3@26348>    JSR writelong
00033D86 <AmiBlitz3.ab3@26350>   MOVEA.l firstfor,A2
00033D8C <AmiBlitz3.ab3@26351>   MOVE.l (A2),firstfor
00033D90 <AmiBlitz3.ab3@26355>   MOVEA.l $8(A2),A0
00033D96 <AmiBlitz3.ab3@26356>   MOVEA.l destpointer,A1
00033D98 <AmiBlitz3.ab3@26357>   MOVE.l A1,D1
00033D9A <AmiBlitz3.ab3@26358>   SUB.l A0,D1            ;d1=positive bra
00033D9C <AmiBlitz3.ab3@26359>   ADDQ.l #2,D1
00033DA2 <AmiBlitz3.ab3@26360>   CMP.l #MinWordSgnd,D1  ; #32768,
00033DA6 <AmiBlitz3.ab3@26361>    BCC.w JUMP_bigforerr
00033DAC <AmiBlitz3.ab3@26362>   TST.w dontwrite_nomemleft
00033DB0 <AmiBlitz3.ab3@26363>    BNE.w 'nopoke1
00033DB4 <AmiBlitz3.ab3@26364>   MOVE.w D1,-$2(A0)
00033DB6 <AmiBlitz3.ab3@26367>   MOVE.l A1,D1
00033DBA <AmiBlitz3.ab3@26368>   SUB.l $4(A2),D1
00033DBC <AmiBlitz3.ab3@26369>   SUBQ.l #6,D1
00033DC2 <AmiBlitz3.ab3@26370>   CMP.l #MinWordSgnd,D1 ;#32768,
00033DC6 <AmiBlitz3.ab3@26371>    BCC.w JUMP_bigforerr
00033DCC <AmiBlitz3.ab3@26372>   TST.w dontwrite_nomemleft
00033DD0 <AmiBlitz3.ab3@26373>    BNE.w 'skip
00033DD2 <AmiBlitz3.ab3@26374>   NEG.w D1
00033DD6 <AmiBlitz3.ab3@26375>   MOVE.w D1,-$2(A1)
00033DDC <AmiBlitz3.ab3@26378>   JSR popnext3                ;fix stack
00033DE2 <AmiBlitz3.ab3@26380>   MOVEA.l _execbase,A6
00033DE4 <AmiBlitz3.ab3@26381>   MOVEA.l A2,A1
00033DE6 <AmiBlitz3.ab3@26382>   MOVEQ.l #$00,D0
00033DEA <AmiBlitz3.ab3@26383>   MOVE.b $10(A1),D0
00033DF0 <AmiBlitz3.ab3@26386>   MOVE.l mempool2,a0
00033DF4 <AmiBlitz3.ab3@26387>   JSR _FreePooled(A6)
00033DFA <AmiBlitz3.ab3@26389> JMP reget
00033E00 <AmiBlitz3.ab3@26392> JUMP_notallowd JMP notallowd
00033E06 <AmiBlitz3.ab3@26393> JUMP_bigforerr JMP bigforerr
00033E0A <AmiBlitz3.ab3@26397>   MOVE.w #$664F,-(A7)          ;#'fO',
00033E0E <AmiBlitz3.ab3@26400>  BRA.w thebra
00033E14 <AmiBlitz3.ab3@26403> JUMP_error_dublicate_for JMP error_dublicate_for
00033E1A <AmiBlitz3.ab3@26404> JUMP_badforerr           JMP badforerr
00033E1E <AmiBlitz3.ab3@26407> forlineat:   Ds.l 1
00033E20 <AmiBlitz3.ab3@26408> fortemp:     Ds.w 1
00033E26 <AmiBlitz3.ab3@26416>   CLR.l fp0addr
00033E2C <AmiBlitz3.ab3@26418>   TST.w dirmode
00033E30 <AmiBlitz3.ab3@26419>    BNE.w JUMP_baddirerr
00033E3A <AmiBlitz3.ab3@26420>   MOVE.l linenumat,forlineat
00033E40 <AmiBlitz3.ab3@26424>   MOVE.l A5,letstart
00033E44 <AmiBlitz3.ab3@26425>   BSR.w getparameter
00033E4A <AmiBlitz3.ab3@26426>   MOVE.w D2,fortemp
00033E50 <AmiBlitz3.ab3@26428>   JSR findfor
00033E54 <AmiBlitz3.ab3@26429>    BEQ.w JUMP_error_dublicate_for
00033E5A <AmiBlitz3.ab3@26430>   LEA firstfor,A2
00033E60 <AmiBlitz3.ab3@26431>   JSR addhere2
00033E62 <AmiBlitz3.ab3@26432>   MOVE.l A2,-(A7)
00033E68 <AmiBlitz3.ab3@26434>   TST.b debugmode
00033E6C <AmiBlitz3.ab3@26435>    BEQ.b 'noerr
00033E72 <AmiBlitz3.ab3@26437>   JSR chkstak
00033E78 <AmiBlitz3.ab3@26438>   MOVE.l forset,D1
00033E7E <AmiBlitz3.ab3@26439>   JSR  writelong
00033E82 <AmiBlitz3.ab3@26442>   MOVE.w fortemp(PC),D2
00033E8A <AmiBlitz3.ab3@26444>   MOVE.b #1,formode
00033E8E <AmiBlitz3.ab3@26446>   BSR.w dolet2                                         ;for get 1. value
00033E94 <AmiBlitz3.ab3@26447>   CLR.b formode
00033E98 <AmiBlitz3.ab3@26448>   CMP.w #-$7FE8,D0       ; was #$8018,
00033E9C <AmiBlitz3.ab3@26449>    BNE.w JUMP_syntaxerr
00033EA2 <AmiBlitz3.ab3@26450>   MOVE.w commode,D1
00033EA6 <AmiBlitz3.ab3@26451>    BNE.w JUMP_syntaxerr
00033EAA <AmiBlitz3.ab3@26452>   CMP.b #$6,D2
00033EAE <AmiBlitz3.ab3@26453>    BCC.w JUMP_badforerr
00033EB2 <AmiBlitz3.ab3@26454>   BTST #$F,D2
00033EB6 <AmiBlitz3.ab3@26455>    BNE.w 'skip
00033EBC <AmiBlitz3.ab3@26456>   MOVE.w leaamp,D1
00033EC2 <AmiBlitz3.ab3@26457>   JSR pokewda5s
00033EC4 <AmiBlitz3.ab3@26458>   MOVE.w D3,D1
00033ECA <AmiBlitz3.ab3@26459>   JSR  writeword
00033ED0 <AmiBlitz3.ab3@26462>   MOVE.w pushindex,D1
00033ED6 <AmiBlitz3.ab3@26463>   JSR  writeword         ;index lea on stack
00033EDA <AmiBlitz3.ab3@26464>   ANDI.w #$FF,D2
00033EDC <AmiBlitz3.ab3@26466>   MOVEA.l (A7),A1
00033EE0 <AmiBlitz3.ab3@26467>   MOVE.w D2,$C(A1)
00033EE2 <AmiBlitz3.ab3@26469>   MOVE.w D2,-(A7)
00033EE6 <AmiBlitz3.ab3@26470>    BSR.w eval             ;get fin
00033EEC <AmiBlitz3.ab3@26472>    CLR.b onestep
00033EF0 <AmiBlitz3.ab3@26473>    CMP.w #$8019,d0
00033EF4 <AmiBlitz3.ab3@26474>    BEQ 'l1
00033EFC <AmiBlitz3.ab3@26475>    MOVE.b #1,onestep
00033EFE <AmiBlitz3.ab3@26479>   MOVE.w (A7),D2
00033F04 <AmiBlitz3.ab3@26481>   MOVE.w pushd0l,D1
00033F08 <AmiBlitz3.ab3@26482>   CMP.w #$3,D2
00033F0C <AmiBlitz3.ab3@26483>    BCC.w 'skip1
00033F12 <AmiBlitz3.ab3@26484>   MOVE.w pushd0wd,D1
00033F14 <AmiBlitz3.ab3@26487>    MOVE.w D1,-(A7)
00033F1A <AmiBlitz3.ab3@26489>    TST.b fpu
00033F1E <AmiBlitz3.ab3@26490>    BEQ 'old
00033F22 <AmiBlitz3.ab3@26491>    CMP.b #5,d2
00033F26 <AmiBlitz3.ab3@26492>    BNE 'old
00033F2C <AmiBlitz3.ab3@26493>    MOVE.l #$f2276400,d1
00033F32 <AmiBlitz3.ab3@26495>    JSR writelong
00033F36 <AmiBlitz3.ab3@26496>  BRA 'weit
00033F3C <AmiBlitz3.ab3@26500>    JSR  writeword        ;push fin on stack                                   ;fpu for end value
00033F40 <AmiBlitz3.ab3@26503>   CMP.w #-$7FE7,D0      ; was #$8019,
00033F44 <AmiBlitz3.ab3@26504>    BNE.w 'defstep
00033F48 <AmiBlitz3.ab3@26506>    BSR.w eval           ;get step
00033F4E <AmiBlitz3.ab3@26508>    TST.b fpu
00033F52 <AmiBlitz3.ab3@26509>    BEQ 'pushstep
00033F56 <AmiBlitz3.ab3@26510>    CMP.b #5,d2
00033F5A <AmiBlitz3.ab3@26511>    BNE 'pushstep
00033F60 <AmiBlitz3.ab3@26512>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00033F66 <AmiBlitz3.ab3@26514>   JSR writelong
00033F68 <AmiBlitz3.ab3@26519>    MOVE.w (a7)+,d1
00033F6C <AmiBlitz3.ab3@26520>  BRA 'fpur
00033F70 <AmiBlitz3.ab3@26524>   CMP.w #$4,D2
00033F74 <AmiBlitz3.ab3@26525>    BCC.w 'qup
00033F78 <AmiBlitz3.ab3@26526>   MOVE.w #$7001,D1
00033F7E <AmiBlitz3.ab3@26527>   JSR writeword
00033F82 <AmiBlitz3.ab3@26528>  BRA.w 'pushstep
00033F86 <AmiBlitz3.ab3@26531>   BNE.w 'notq
00033F8A <AmiBlitz3.ab3@26532>   MOVE.w #$7001,D1
00033F90 <AmiBlitz3.ab3@26533>   JSR writeword
00033F96 <AmiBlitz3.ab3@26534>   MOVE.w swapd0,D1
00033F9C <AmiBlitz3.ab3@26535>   JSR writeword
00033FA0 <AmiBlitz3.ab3@26536>  BRA.w 'pushstep
00033FA6 <AmiBlitz3.ab3@26540>   TST.b fpu
00033FAA <AmiBlitz3.ab3@26541>    BEQ 'old2
00033FAE <AmiBlitz3.ab3@26542>   CMP.b #5,d2
00033FB2 <AmiBlitz3.ab3@26543>    BNE 'old2
00033FB8 <AmiBlitz3.ab3@26544>   MOVE.l #$f23c5000,d1
00033FBE <AmiBlitz3.ab3@26545>   JSR writelong
00033FC2 <AmiBlitz3.ab3@26546>   MOVE.w #$1,d1
00033FC8 <AmiBlitz3.ab3@26547>   JSR writeword
00033FCE <AmiBlitz3.ab3@26548>   MOVE.l #$f2276400,d1
00033FD4 <AmiBlitz3.ab3@26549>   JSR writelong
00033FD6 <AmiBlitz3.ab3@26550>   MOVE.w (a7)+,d1
00033FDA <AmiBlitz3.ab3@26551>  BRA 'fpur
00033FDE <AmiBlitz3.ab3@26555>   MOVE.w #$203C,D1                                         ;write step 1
00033FE4 <AmiBlitz3.ab3@26556>   JSR writeword
00033FEA <AmiBlitz3.ab3@26557>   MOVE.l #$80000041,D1     ;ffp '1'                                ;ffp '1'
00033FF0 <AmiBlitz3.ab3@26558>   JSR writelong
00033FF2 <AmiBlitz3.ab3@26561>   MOVE.w (A7)+,D1
00033FF8 <AmiBlitz3.ab3@26562>   JSR writeword           ;push step on stack                                 ;push step on stack
00033FFA <AmiBlitz3.ab3@26567>   MOVE.w (A7)+,D2
00033FFC <AmiBlitz3.ab3@26568>   MOVEA.l (A7),A1
00034004 <AmiBlitz3.ab3@26569>   MOVE.l destpointer,$4(A1)
0003400A <AmiBlitz3.ab3@26570>   LEA forcompb,A0
00034010 <AmiBlitz3.ab3@26571>   LEA forcompbf,A1
00034014 <AmiBlitz3.ab3@26572>   CMP.w #$1,D2
00034018 <AmiBlitz3.ab3@26573>    BEQ.w 'docomp
0003401E <AmiBlitz3.ab3@26574>   LEA forcompw,A0
00034024 <AmiBlitz3.ab3@26575>   LEA forcompwf,A1
00034028 <AmiBlitz3.ab3@26576>   CMP.w #$2,D2
0003402C <AmiBlitz3.ab3@26577>    BEQ.w 'docomp
00034032 <AmiBlitz3.ab3@26578>   LEA forcompl,A0
00034038 <AmiBlitz3.ab3@26579>   LEA forcomplf,A1
0003403C <AmiBlitz3.ab3@26580>   CMP.w #$5,D2
00034040 <AmiBlitz3.ab3@26581>    BNE.w 'docomp
00034046 <AmiBlitz3.ab3@26583>   TST.b fpu
0003404A <AmiBlitz3.ab3@26584>    BEQ 'old3
00034050 <AmiBlitz3.ab3@26585>   LEA fpu_start,a0
00034056 <AmiBlitz3.ab3@26586>   LEA fpu_end,a1
0003405C <AmiBlitz3.ab3@26587>   JSR pokecode
00034060 <AmiBlitz3.ab3@26588>  BRA 'fpu3
00034066 <AmiBlitz3.ab3@26592>   LEA forcompf,A0                                         ;
0003406C <AmiBlitz3.ab3@26593>   LEA forcompff,A1
00034072 <AmiBlitz3.ab3@26594>   JSR pokecode
00034076 <AmiBlitz3.ab3@26595>   MOVE.w #$C900,D1       ; #getffpbase,
0003407A <AmiBlitz3.ab3@26596>   BSR.w Atokejsr
00034080 <AmiBlitz3.ab3@26597>   LEA forcompf2,A0
00034086 <AmiBlitz3.ab3@26598>   LEA forcompf2f,A1
0003408C <AmiBlitz3.ab3@26601>   JSR pokecode
00034092 <AmiBlitz3.ab3@26603>   TST.b fast                                               ;fast for next
00034096 <AmiBlitz3.ab3@26604>    BEQ 's1
0003409A <AmiBlitz3.ab3@26605>   CMP.w #3,d2
0003409E <AmiBlitz3.ab3@26606>    BNE 's1
000340A4 <AmiBlitz3.ab3@26607>   TST.b onestep
000340A8 <AmiBlitz3.ab3@26608>    BEQ 's1
000340B2 <AmiBlitz3.ab3@26609>   SUB.l #10,destpointer
000340B6 <AmiBlitz3.ab3@26610>   MOVE.w #$b081,d1
000340BC <AmiBlitz3.ab3@26611>   JSR writeword
000340C0 <AmiBlitz3.ab3@26616>   MOVE.l thebgt(PC),D1
000340C6 <AmiBlitz3.ab3@26617>   JSR writelong
000340C8 <AmiBlitz3.ab3@26622>   MOVEA.l (A7)+,A1
000340D0 <AmiBlitz3.ab3@26623>   MOVE.l destpointer,$8(A1)
000340D6 <AmiBlitz3.ab3@26624> JMP reget
000340DA <AmiBlitz3.ab3@26629>   MOVEA.l 8(a7),a2
000340DE <AmiBlitz3.ab3@26630>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
000340E4 <AmiBlitz3.ab3@26631>   fmove.s 4(a7),fp1
000340E8 <AmiBlitz3.ab3@26632>   BTST.b #7,(a7)
000340EC <AmiBlitz3.ab3@26633>   BNE 'negi
000340F0 <AmiBlitz3.ab3@26634>   fcmp.x fp1,fp0
000340F4 <AmiBlitz3.ab3@26635>  BRA 'negi2
000340F8 <AmiBlitz3.ab3@26638>   fcmp.x fp0,fp1
000340FC <AmiBlitz3.ab3@26641>   Dc.l $f2920000                                           ;fbgt.w
00034100 <AmiBlitz3.ab3@26647>   BGT.w thebgt
00034106 <AmiBlitz3.ab3@26650> JUMP_error4char          JMP error4char
0003410C <AmiBlitz3.ab3@26651> JUMP_error_convert_types JMP error_convert_types
00034112 <AmiBlitz3.ab3@26652> JUMP_noleterr            JMP noleterr
00034118 <AmiBlitz3.ab3@26653> JUMP_nocomerr            JMP nocomerr
0003411E <AmiBlitz3.ab3@26654> JUMP_comerr              JMP comerr
00034124 <AmiBlitz3.ab3@26658>   MOVE.l A5,letstart
0003412A <AmiBlitz3.ab3@26659>   JSR getparameter
00034134 <AmiBlitz3.ab3@26666>   MOVE.l destpointer,pushpc
0003413E <AmiBlitz3.ab3@26667>   MOVE.l hunkoffsetbase,pushoff
00034144 <AmiBlitz3.ab3@26668>   CLR.l rightsidetype
0003414A <AmiBlitz3.ab3@26669>   CLR.w rightsideflagmask
00034152 <AmiBlitz3.ab3@26671>   MOVE.w #$0001,regnum            ;don't disturb this reg!
00034158 <AmiBlitz3.ab3@26672>   JSR fetchvars                   ;var in a3, type in a2
0003415E <AmiBlitz3.ab3@26673>   JSR calcvar                     ;get offset stuff
00034164 <AmiBlitz3.ab3@26675>   TST.b formode
00034168 <AmiBlitz3.ab3@26676>   BEQ 'lf1
0003416E <AmiBlitz3.ab3@26677>   CMP.l #newtype_double,A2
00034172 <AmiBlitz3.ab3@26678>   BEQ JUMP_notallowd
00034178 <AmiBlitz3.ab3@26679>   MOVE.l a2,currtype
0003417E <AmiBlitz3.ab3@26682>   CLR.w startoffsetmore
00034182 <AmiBlitz3.ab3@26683>   CMP.w #$3d,d0
00034186 <AmiBlitz3.ab3@26684>   BNE 'l1a
0003418A <AmiBlitz3.ab3@26685>   BTST #15,d2
0003418E <AmiBlitz3.ab3@26686>   BEQ 'l1a
00034192 <AmiBlitz3.ab3@26687>   CMP.b #1,d2
00034196 <AmiBlitz3.ab3@26688>   BNE 'l1a
000341A0 <AmiBlitz3.ab3@26689>   MOVE.w leaa0a0+2,startoffsetmore
000341A6 <AmiBlitz3.ab3@26693>   CLR.w regnum                     ;don't disturb this reg
000341AA <AmiBlitz3.ab3@26694>   BSR.w pushdo
000341B0 <AmiBlitz3.ab3@26695>   CLR.w commode
000341B6 <AmiBlitz3.ab3@26697>   CLR.w stackcorrect
000341BC <AmiBlitz3.ab3@26699>   CLR.w pcodd
000341C2 <AmiBlitz3.ab3@26701>   MOVE.w startoffsetmore,d1
000341C6 <AmiBlitz3.ab3@26702>   BTST #0,d1
000341CA <AmiBlitz3.ab3@26703>   BEQ 'l2a
000341D2 <AmiBlitz3.ab3@26704>   MOVE.w #1,pcodd
000341D6 <AmiBlitz3.ab3@26709>   CMP.w #$3D,D0              ;'='                              ;=
000341DA <AmiBlitz3.ab3@26710>   BEQ.w 'nextcom
000341DC <AmiBlitz3.ab3@26714>   MOVE.b (a5)+,d1
000341E0 <AmiBlitz3.ab3@26715>   BEQ 'l10
000341E4 <AmiBlitz3.ab3@26716>   CMP.b #":",d1
000341E8 <AmiBlitz3.ab3@26717>   BEQ 'l10
000341EC <AmiBlitz3.ab3@26718>   CMP.b #";",d1
000341F0 <AmiBlitz3.ab3@26719>   BEQ 'l10
000341F4 <AmiBlitz3.ab3@26720>   CMP.b #"0",d1
000341F8 <AmiBlitz3.ab3@26721>   BLT 'l11
000341FC <AmiBlitz3.ab3@26722>   CMP.b #"9",d1
00034200 <AmiBlitz3.ab3@26723>   BGT 'l11
00034204 <AmiBlitz3.ab3@26724>  BRA.s 'l1
0003420C <AmiBlitz3.ab3@26727>   MOVE.b #1,quickadd
00034212 <AmiBlitz3.ab3@26734>   MOVEA.l letstart,A5
00034214 <AmiBlitz3.ab3@26735>   SUBQ.w #1,A5
00034218 <AmiBlitz3.ab3@26738>   CMP.b #$7,D2
0003421C <AmiBlitz3.ab3@26739>    BNE.w 'notstring
00034220 <AmiBlitz3.ab3@26750>   MOVEM.w D2-D3,-(A7)
00034226 <AmiBlitz3.ab3@26751>   MOVE.l lastoffset_org,-(A7)
0003422C <AmiBlitz3.ab3@26752>   MOVE.w varmode,-(A7)
00034236 <AmiBlitz3.ab3@26755>     MOVE.l #forthstack,forthsp
00034240 <AmiBlitz3.ab3@26756>    MOVE.l #precstack,precsp
00034246 <AmiBlitz3.ab3@26757>    CLR.w regnum
0003424C <AmiBlitz3.ab3@26758>    CLR.w nonew
00034252 <AmiBlitz3.ab3@26759>    CLR.w sbasegot
0003425C <AmiBlitz3.ab3@26760>    MOVE.w varcodelen,oldvcodelen
00034262 <AmiBlitz3.ab3@26761>    CLR.w varcodelen
0003426A <AmiBlitz3.ab3@26762>    MOVE.w #$FFFF,lasta6
0003426C <AmiBlitz3.ab3@26766>   MOVEQ.l #$07,D2
00034270 <AmiBlitz3.ab3@26767>    BSR.w eval
00034276 <AmiBlitz3.ab3@26768>   MOVE.w (A7)+,varmode
0003427C <AmiBlitz3.ab3@26769>   MOVE.l (A7)+,lastoffset_org
00034282 <AmiBlitz3.ab3@26770>   MOVE.w moved0a3,D1
00034288 <AmiBlitz3.ab3@26771>    JSR writeword
0003428E <AmiBlitz3.ab3@26772>   MOVE.w commode,D1
00034292 <AmiBlitz3.ab3@26773>    BEQ.w 'stconti
00034298 <AmiBlitz3.ab3@26774>   LEA pulla2st,A0
0003429E <AmiBlitz3.ab3@26775>   LEA pulla2stf,A1
000342A4 <AmiBlitz3.ab3@26776>    JSR pokecode
000342A8 <AmiBlitz3.ab3@26777>  BRA.w 'stconti2
000342AC <AmiBlitz3.ab3@26780>   BSR.w pushput
000342B0 <AmiBlitz3.ab3@26783>   MOVEM.w (A7)+,D2-D3
000342B4 <AmiBlitz3.ab3@26784>   BTST #$F,D2
000342B8 <AmiBlitz3.ab3@26785>   BNE.w 'already
000342BE <AmiBlitz3.ab3@26786>     MOVE.w D3,leaa5d3a2+2
000342C4 <AmiBlitz3.ab3@26787>     MOVE.l leaa5d3a2,D1
000342CA <AmiBlitz3.ab3@26788>     JSR pokela5s
000342CE <AmiBlitz3.ab3@26791>   MOVE.w #$FE6F,D1         ; was #65135,
000342D4 <AmiBlitz3.ab3@26792>   JSR uselib
000342DA <AmiBlitz3.ab3@26793>   MOVE.l #$C700,D1         ; was #lastring,
000342E0 <AmiBlitz3.ab3@26794>   MOVE.l d1,lastinstruction
000342E6 <AmiBlitz3.ab3@26795>   MOVE.w varmode,D2
000342EA <AmiBlitz3.ab3@26796>   BNE.w 'local
000342EC <AmiBlitz3.ab3@26797>     ADDQ.w #1,D1           ;use global allocmem
000342F0 <AmiBlitz3.ab3@26800>   BSR.w Atokejsr
000342F4 <AmiBlitz3.ab3@26801>   CMP.w #$2C,D0           ;','
000342F8 <AmiBlitz3.ab3@26802>   BNE.w 'done
000342FE <AmiBlitz3.ab3@26804>   MOVE.w addq4a2,D1
00034304 <AmiBlitz3.ab3@26805>   JSR writeword
00034308 <AmiBlitz3.ab3@26806>  BRA.w 'nextstr
0003430C <AmiBlitz3.ab3@26809>    BTST #$E,D2             ;pointer, ignore!
00034310 <AmiBlitz3.ab3@26810>    BNE.w 'skip
00034312 <AmiBlitz3.ab3@26811>   TST.b D2
00034316 <AmiBlitz3.ab3@26812>    BEQ.w JUMP_noleterr     ;tried to assign a struct - later!
0003431C <AmiBlitz3.ab3@26814>    TST.b newsyntax
00034320 <AmiBlitz3.ab3@26815>    BEQ 'skip2
00034324 <AmiBlitz3.ab3@26818>    CMP.w #$4022,(a5)
00034328 <AmiBlitz3.ab3@26819>    BNE 'skip2
0003432E <AmiBlitz3.ab3@26820>    CMP.l #3,d2
00034332 <AmiBlitz3.ab3@26821>    BNE  JUMP_error_convert_types
00034334 <AmiBlitz3.ab3@26822>    ADDQ #2,a5
00034336 <AmiBlitz3.ab3@26823>    MOVEQ #0,d0
00034338 <AmiBlitz3.ab3@26824>    MOVE.b (a5)+,d0
0003433C <AmiBlitz3.ab3@26825>    BEQ 'skip2
00034340 <AmiBlitz3.ab3@26826>    CMP.b #$22,d0
00034344 <AmiBlitz3.ab3@26827>    BNE 'l5
00034348 <AmiBlitz3.ab3@26828>    MOVE.b #0,d0
0003434C <AmiBlitz3.ab3@26829>  BRA 'do
0003434E <AmiBlitz3.ab3@26832>   ASL.l #8,d0
00034350 <AmiBlitz3.ab3@26833>    MOVE.b (a5)+,d0
00034354 <AmiBlitz3.ab3@26834>    BEQ 'skip2
00034358 <AmiBlitz3.ab3@26835>    CMP.b #$22,d0
0003435C <AmiBlitz3.ab3@26836>    BNE 'l2
00034360 <AmiBlitz3.ab3@26837>    MOVE.b #0,d0
00034362 <AmiBlitz3.ab3@26838>    ASR.l #8,d0
00034366 <AmiBlitz3.ab3@26839>  BRA 'do
00034368 <AmiBlitz3.ab3@26842>   ASL.l #8,d0
0003436A <AmiBlitz3.ab3@26843>     MOVE.b (a5)+,d0
0003436E <AmiBlitz3.ab3@26844>    BEQ 'skip2
00034372 <AmiBlitz3.ab3@26845>    CMP.b #$22,d0
00034376 <AmiBlitz3.ab3@26846>    BNE 'l3
0003437A <AmiBlitz3.ab3@26847>    MOVE.b #0,d0
0003437C <AmiBlitz3.ab3@26848>    ASR.l #8,d0
00034380 <AmiBlitz3.ab3@26849>  BRA 'do
00034382 <AmiBlitz3.ab3@26852>   ASL.l #8,d0
00034384 <AmiBlitz3.ab3@26853>     MOVE.b (a5)+,d0
00034388 <AmiBlitz3.ab3@26854>    BEQ 'skip2
0003438C <AmiBlitz3.ab3@26855>    CMP.b #$22,d0
00034390 <AmiBlitz3.ab3@26856>    BNE 'l4
00034394 <AmiBlitz3.ab3@26857>    MOVE.b #0,d0
00034396 <AmiBlitz3.ab3@26858>    ASR.l #8,d0
0003439A <AmiBlitz3.ab3@26859>  BRA 'do
0003439E <AmiBlitz3.ab3@26862>    CMP.b #$22,(a5)+
000343A2 <AmiBlitz3.ab3@26863>    BNE JUMP_error4char
000343A6 <AmiBlitz3.ab3@26866>   MOVE.w #$2b7c,d1
000343AC <AmiBlitz3.ab3@26867>    TST.w varmode
000343B0 <AmiBlitz3.ab3@26868>    BEQ 'g3
000343B4 <AmiBlitz3.ab3@26869>    BCLR #9,d1
000343BA <AmiBlitz3.ab3@26872>     JSR writeword
000343BC <AmiBlitz3.ab3@26873>     MOVE.l d0,d1
000343C2 <AmiBlitz3.ab3@26874>     JSR writelong
000343C4 <AmiBlitz3.ab3@26875>     MOVE.w d3,d1
000343CA <AmiBlitz3.ab3@26876>     JSR writeword
000343D0 <AmiBlitz3.ab3@26877>     JSR get1bytemain
000343D2 <AmiBlitz3.ab3@26878>  RTS
000343D8 <AmiBlitz3.ab3@26885>   MOVE.w d2,vartype
000343DC <AmiBlitz3.ab3@26887>   MOVE.b #$3,D2
000343E0 <AmiBlitz3.ab3@26894>   CMP.b #5,d2
000343E4 <AmiBlitz3.ab3@26895>   BNE 'l1aa
000343EA <AmiBlitz3.ab3@26896>   MOVE.l a2,currtype
000343EE <AmiBlitz3.ab3@26901>   MOVEM.w D2-D3,-(A7)
000343F4 <AmiBlitz3.ab3@26902>   MOVE.w varmode,-(A7)
000343FA <AmiBlitz3.ab3@26904>   MOVE.l a2,leftsidetype
00034404 <AmiBlitz3.ab3@26905>   MOVE.w flagmask,leftsideflagmask
00034408 <AmiBlitz3.ab3@26906>   BTST #$f,d2
0003440C <AmiBlitz3.ab3@26907>   BEQ 'nomultiassign
00034412 <AmiBlitz3.ab3@26908>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00034418 <AmiBlitz3.ab3@26909>   CLR.w leftsideflagmask
0003441C <AmiBlitz3.ab3@26913>   ANDI.w #$FF,D2
00034422 <AmiBlitz3.ab3@26914>   MOVE.l lastoffset_org,-(A7)
00034428 <AmiBlitz3.ab3@26915>   JSR eval                                ; calc right side of var assign
0003442C <AmiBlitz3.ab3@26917>   MOVEM.l a0/a1,-(a7)
00034432 <AmiBlitz3.ab3@26918>   MOVE.l leftsidetype,a0
00034438 <AmiBlitz3.ab3@26919>   CMP.l #0,a0
0003443C <AmiBlitz3.ab3@26920>   BEQ 'nocheck
00034444 <AmiBlitz3.ab3@26921>   CMP.w #1,leftsideflagmask
00034448 <AmiBlitz3.ab3@26922>   BEQ 'isptr
00034450 <AmiBlitz3.ab3@26923>   CMP.l #$100,4(a0)
00034454 <AmiBlitz3.ab3@26924>   BLE 'nocheck
0003445A <AmiBlitz3.ab3@26927>   TST.l typetocast
0003445E <AmiBlitz3.ab3@26928>   BEQ 'nocast
00034464 <AmiBlitz3.ab3@26929>   MOVE.l typetocast,a1
00034468 <AmiBlitz3.ab3@26930>   BRA 'typecheck
0003446E <AmiBlitz3.ab3@26933>   TST.l rightsidetype
00034472 <AmiBlitz3.ab3@26934>   BEQ 'nocheck
00034478 <AmiBlitz3.ab3@26935>   MOVE.l rightsidetype,a1
00034480 <AmiBlitz3.ab3@26936>   CMP.w #1,rightsideflagmask
00034484 <AmiBlitz3.ab3@26937>   BEQ 'ok
0003448C <AmiBlitz3.ab3@26938>   CMP.l #$100,4(a1)
00034490 <AmiBlitz3.ab3@26939>   BGE 'typecheck
00034498 <AmiBlitz3.ab3@26940>   CMP.l #$3,4(a1)
0003449C <AmiBlitz3.ab3@26941>   BEQ 'ok                              ;long assign is allow with this codelines
000344A0 <AmiBlitz3.ab3@26942>   BRA 'error
000344A6 <AmiBlitz3.ab3@26945>   TST.b typecheck
000344AA <AmiBlitz3.ab3@26946>   BEQ 'nocheck
000344B0 <AmiBlitz3.ab3@26947>   TST.b notypecheck
000344B4 <AmiBlitz3.ab3@26948>   BNE 'ok
000344B6 <AmiBlitz3.ab3@26949>   CMP.l a0,a1
000344BA <AmiBlitz3.ab3@26950>   BEQ 'ok
000344BE <AmiBlitz3.ab3@26952>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
000344C2 <AmiBlitz3.ab3@26953>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000344C6 <AmiBlitz3.ab3@26954>   BEQ 'ok
000344CC <AmiBlitz3.ab3@26957>  JMP   error_convert_types     ;for syntax 4  = typecheck
000344D2 <AmiBlitz3.ab3@26961>    CLR.l typetocast
000344D6 <AmiBlitz3.ab3@26962>    MOVEM.l (a7)+, a0/a1
000344DC <AmiBlitz3.ab3@26964>   MOVE.l (A7)+,lastoffset_org
000344E2 <AmiBlitz3.ab3@26965>   MOVE.w commode,D1
000344E6 <AmiBlitz3.ab3@26966>    BNE.w 'conti
000344EA <AmiBlitz3.ab3@26967>    BSR.w pushput
000344F0 <AmiBlitz3.ab3@26970>   MOVE.w (A7)+,varmode
000344F4 <AmiBlitz3.ab3@26971>   MOVEM.w (A7)+,D2-D3
000344F8 <AmiBlitz3.ab3@26976>   MOVE.w #$2B40,D1
000344FE <AmiBlitz3.ab3@26977>   MOVE.w varmode,D4
00034502 <AmiBlitz3.ab3@26978>    BEQ.w 'skip1
00034506 <AmiBlitz3.ab3@26979>   BCLR #$9,D1
0003450A <AmiBlitz3.ab3@26982>   BTST #$F,D2
0003450E <AmiBlitz3.ab3@26983>    BEQ.w 'code
00034514 <AmiBlitz3.ab3@26986>    TST.b stackcorrect
00034518 <AmiBlitz3.ab3@26987>    BNE 'st1
0003451E <AmiBlitz3.ab3@26989>   MOVE.w commode,D1
00034522 <AmiBlitz3.ab3@26990>    BEQ.w 'skipc1
00034528 <AmiBlitz3.ab3@26995>   MOVE.w pulla2,D1
0003452E <AmiBlitz3.ab3@26996>    JSR writeword
00034532 <AmiBlitz3.ab3@26999>   MOVE.w #$2480,D1               ;move.l d0,(a2)
00034536 <AmiBlitz3.ab3@27002>    MOVEM.l a0/d0,-(a7)
0003453C <AmiBlitz3.ab3@27003>    MOVEA.l lastoffset_org,A0
0003453E <AmiBlitz3.ab3@27004>    MOVE.l A0,D0
00034542 <AmiBlitz3.ab3@27005>    BEQ.w 'skipa
00034544 <AmiBlitz3.ab3@27006>    MOVEA.l D0,A0
0003454C <AmiBlitz3.ab3@27007>    MOVE.l $A(A0),currtype
00034550 <AmiBlitz3.ab3@27010>   MOVEM.l (a7)+,a0/d0
00034554 <AmiBlitz3.ab3@27012>   CMP.w #$2C,D0                ; ','
00034558 <AmiBlitz3.ab3@27013>    BNE.w 'code
0003455C <AmiBlitz3.ab3@27015>     MOVE.w #$24C0,D1           ;move.l d0,(a2)+
00034560 <AmiBlitz3.ab3@27016>    BSR.w 'code                                         ;write store
00034566 <AmiBlitz3.ab3@27019>    MOVE.l lastoffset_org,D0
0003456E <AmiBlitz3.ab3@27025>   MOVE.w #$FFFF,commode    ; -1
00034574 <AmiBlitz3.ab3@27026>   CLR.w varcodelen
0003457C <AmiBlitz3.ab3@27028>   MOVE.b #1,optiarray
00034582 <AmiBlitz3.ab3@27030>   MOVE.w pusha2,D1
00034588 <AmiBlitz3.ab3@27031>    JSR writeword
0003458E <AmiBlitz3.ab3@27033>   TST.l lastoffset_org
00034592 <AmiBlitz3.ab3@27034>   BEQ 'dimmore
00034598 <AmiBlitz3.ab3@27035>   MOVEA.l lastoffset_org,A0
0003459A <AmiBlitz3.ab3@27037>   MOVE.l (A0),D0
0003459E <AmiBlitz3.ab3@27038>    BEQ.w JUMP_comerr          ;comma past end of struct
000345A0 <AmiBlitz3.ab3@27039>   MOVEA.l D0,A0
000345A6 <AmiBlitz3.ab3@27040>   MOVE.l A0,lastoffset_org
000345AC <AmiBlitz3.ab3@27041>   BTST #$1,$7(A0)
000345B0 <AmiBlitz3.ab3@27042>    BNE.w JUMP_nocomerr        ;can't use comma on multiple entries
000345B4 <AmiBlitz3.ab3@27043>   MOVEA.l $A(A0),A1
000345B8 <AmiBlitz3.ab3@27044>   MOVE.l $4(A1),D2
000345BE <AmiBlitz3.ab3@27048>   BTST #$0,$7(A0)
000345C2 <AmiBlitz3.ab3@27049>    BNE.w 'nextpnt             ;pointer
000345C8 <AmiBlitz3.ab3@27050>   CMP.l #$100,D2
000345CC <AmiBlitz3.ab3@27051>    BCC.l JUMP_nocomerr        ;or on structs
000345D0 <AmiBlitz3.ab3@27052>  BRA.w 'docom                                     ; do do type\x= 10,20,30....
000345D6 <AmiBlitz3.ab3@27056>         CLR.b optiarray
000345DA <AmiBlitz3.ab3@27057>         CMP.w #"@@",(a5)
000345DE <AmiBlitz3.ab3@27058>         BEQ 'n1
000345E2 <AmiBlitz3.ab3@27059>  BRA 'd1
000345E8 <AmiBlitz3.ab3@27062>   JSR nextline
000345EA <AmiBlitz3.ab3@27063>         MOVE.l a5,-(a7)
000345EC <AmiBlitz3.ab3@27066>   MOVE.b (a5)+,d0
000345F0 <AmiBlitz3.ab3@27067>         CMP.b #$20,d0
000345F4 <AmiBlitz3.ab3@27068>         BEQ 'l6
000345F6 <AmiBlitz3.ab3@27069>         MOVE.l (a7)+,a5
000345FA <AmiBlitz3.ab3@27070>         CMP.b #";",d0
000345FE <AmiBlitz3.ab3@27071>         BEQ 'n1
00034604 <AmiBlitz3.ab3@27074>         TST.w debugmode
00034608 <AmiBlitz3.ab3@27075>         BEQ 'nextcom
0003460A <AmiBlitz3.ab3@27076>         MOVE.l a0,-(a7)
00034610 <AmiBlitz3.ab3@27077>         MOVE.l pushat,a0
00034616 <AmiBlitz3.ab3@27078>         CMP.l #0,a0
0003461A <AmiBlitz3.ab3@27079>         BNE 'o1
0003461E <AmiBlitz3.ab3@27080>  BRA 'skipb
00034626 <AmiBlitz3.ab3@27083>         ADD.l #1,2(a0)
0003462C <AmiBlitz3.ab3@27086>   CLR.w commode
00034634 <AmiBlitz3.ab3@27087>         MOVE.b #1,stackcorrect
00034636 <AmiBlitz3.ab3@27088>         MOVE.l (a7)+,a0
0003463C <AmiBlitz3.ab3@27089>  JMP 'nextcom
00034642 <AmiBlitz3.ab3@27093>   CMP.l #$100,D2
00034646 <AmiBlitz3.ab3@27094>    BCS.w 'nextpnt2
00034648 <AmiBlitz3.ab3@27095>   MOVEQ.l #$00,D2
0003464C <AmiBlitz3.ab3@27098>   BSET #$E,D2
00034650 <AmiBlitz3.ab3@27101>   BSET #$F,D2
00034654 <AmiBlitz3.ab3@27102>  BRA.w 'nextcom
0003465A <AmiBlitz3.ab3@27106>    MOVE.l destpointer,a4                   ;
00034662 <AmiBlitz3.ab3@27107>    MOVE.l #$f22a6400,-4(a4)                ;
00034668 <AmiBlitz3.ab3@27108>    MOVE.w arrayoffset,d1                   ;
0003466E <AmiBlitz3.ab3@27109>  JMP writeword                             ;
00034674 <AmiBlitz3.ab3@27114>    TST.b fpu
00034678 <AmiBlitz3.ab3@27115>    BEQ 'nofloat
0003467C <AmiBlitz3.ab3@27116>    CMP.b #5,d2
00034680 <AmiBlitz3.ab3@27117>    BNE 'nofloat
00034686 <AmiBlitz3.ab3@27118>    CLR.w fp0var
0003468C <AmiBlitz3.ab3@27119>    LEA regtable,a4
0003468E <AmiBlitz3.ab3@27120>    TST.l (a4)
00034692 <AmiBlitz3.ab3@27121>    BEQ 'noreg
00034696 <AmiBlitz3.ab3@27122>    BTST #15,d2                                             ;regvars
0003469A <AmiBlitz3.ab3@27123>    BNE 'noreg
0003469E <AmiBlitz3.ab3@27124>    CMP.w 0+4(a4),d3
000346A2 <AmiBlitz3.ab3@27125>    BNE 'doreg1
000346A8 <AmiBlitz3.ab3@27126>    MOVE.l #$f2000380,d1
000346AE <AmiBlitz3.ab3@27127>    MOVE.w regnum,d0
000346B2 <AmiBlitz3.ab3@27128>    BNE 'noopt
000346B8 <AmiBlitz3.ab3@27134>    MOVE.l destpointer,a4
000346C0 <AmiBlitz3.ab3@27135>    CMP.l #$f2001c80,-8(a4)
000346C4 <AmiBlitz3.ab3@27136>    BNE 'noopt
000346CC <AmiBlitz3.ab3@27137>    CMP.l #$f2000422,-4(a4)
000346D0 <AmiBlitz3.ab3@27138>    BNE 'noopt
000346D6 <AmiBlitz3.ab3@27139>    MOVE.l #$f20003a2,d1
000346E0 <AmiBlitz3.ab3@27140>    SUB.l #8,destpointer
000346E2 <AmiBlitz3.ab3@27143>    ASL.w #7,d0
000346E4 <AmiBlitz3.ab3@27144>    OR.w d0,d1
000346EA <AmiBlitz3.ab3@27145>    JSR writelong
000346EC <AmiBlitz3.ab3@27146>  RTS
000346F0 <AmiBlitz3.ab3@27149>   CMP.w 8+4(a4),d3
000346F4 <AmiBlitz3.ab3@27150>    BNE 'doreg2
000346FA <AmiBlitz3.ab3@27151>    MOVE.l #$f2000300,d1
00034700 <AmiBlitz3.ab3@27152>    MOVE.w regnum,d0
00034702 <AmiBlitz3.ab3@27153>    ASL.w #7,d0
00034704 <AmiBlitz3.ab3@27154>    OR.w d0,d1
0003470A <AmiBlitz3.ab3@27155>    JSR writelong
0003470C <AmiBlitz3.ab3@27156>  RTS
00034710 <AmiBlitz3.ab3@27159>   CMP.w 16+4(a4),d3
00034714 <AmiBlitz3.ab3@27160>    BNE 'doreg3
0003471A <AmiBlitz3.ab3@27161>    MOVE.l #$f2000280,d1
00034720 <AmiBlitz3.ab3@27162>    MOVE.w regnum,d0
00034722 <AmiBlitz3.ab3@27163>    ASL.w #7,d0
00034724 <AmiBlitz3.ab3@27164>    OR.w d0,d1
0003472A <AmiBlitz3.ab3@27165>    JSR  writelong
0003472C <AmiBlitz3.ab3@27166>  RTS
00034730 <AmiBlitz3.ab3@27169>   CMP.w 24+4(a4),d3
00034734 <AmiBlitz3.ab3@27170>    BNE 'doreg4
0003473A <AmiBlitz3.ab3@27171>    MOVE.l #$f2000200,d1
00034740 <AmiBlitz3.ab3@27172>    MOVE.w regnum,d0
00034742 <AmiBlitz3.ab3@27173>    ASL.w #7,d0
00034744 <AmiBlitz3.ab3@27174>    OR.w d0,d1
0003474A <AmiBlitz3.ab3@27175>    JSR writelong
0003474C <AmiBlitz3.ab3@27176>  RTS
00034750 <AmiBlitz3.ab3@27179>   CMP.w 32+4(a4),d3
00034754 <AmiBlitz3.ab3@27180>    BNE 'noreg
0003475A <AmiBlitz3.ab3@27181>    MOVE.l #$f2000180,d1
00034760 <AmiBlitz3.ab3@27182>    MOVE.w regnum,d0
00034762 <AmiBlitz3.ab3@27183>    ASL.w #7,d0
00034764 <AmiBlitz3.ab3@27184>    OR.w d0,d1
0003476A <AmiBlitz3.ab3@27185>    JSR writelong
0003476C <AmiBlitz3.ab3@27186>  RTS
00034772 <AmiBlitz3.ab3@27189>    TST.w regnum
00034776 <AmiBlitz3.ab3@27190>    BNE 'nofp0
0003477C <AmiBlitz3.ab3@27191>    MOVE.l destpointer ,a4
00034784 <AmiBlitz3.ab3@27192>    CMP.l #$f2304400,-6(a4)
00034788 <AmiBlitz3.ab3@27193>    BNE 'do5
0003478E <AmiBlitz3.ab3@27194>    CMP.w #$1990,-2(a4)
00034792 <AmiBlitz3.ab3@27195>    BNE 'do5
00034796 <AmiBlitz3.ab3@27196>    BTST #15,d2                                             ;types ?
0003479A <AmiBlitz3.ab3@27197>    BNE 'do5
000347A0 <AmiBlitz3.ab3@27198>   MOVE.l #$2b701990,d1                                     ;var
000347A6 <AmiBlitz3.ab3@27199>   TST.w varmode
000347AA <AmiBlitz3.ab3@27200>   BEQ 'glob1
000347AE <AmiBlitz3.ab3@27201>   BCLR #25,d1
000347B2 <AmiBlitz3.ab3@27204>   MOVE.l d1,-6(a4)
000347B6 <AmiBlitz3.ab3@27205>   MOVE.w d3,-2(a4)
000347BC <AmiBlitz3.ab3@27206>   CLR.w fp0var
000347C4 <AmiBlitz3.ab3@27207>   MOVE.w #$ffff,fp0mode
000347C6 <AmiBlitz3.ab3@27208>  RTS
000347CE <AmiBlitz3.ab3@27211>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
000347D2 <AmiBlitz3.ab3@27212>    BNE 'do3
000347DC <AmiBlitz3.ab3@27213>    CMP.l #newtype_double,currtype
000347E0 <AmiBlitz3.ab3@27214>    BEQ 'do4
000347E4 <AmiBlitz3.ab3@27217>   MOVE.w #$2b6d,d1
000347EA <AmiBlitz3.ab3@27218>    TST.w varmode
000347EE <AmiBlitz3.ab3@27219>    BEQ 'g2
000347F2 <AmiBlitz3.ab3@27220>     BCLR #9,d1
000347F6 <AmiBlitz3.ab3@27223>     CMP.w #$2b6d,d1
000347FA <AmiBlitz3.ab3@27224>     BNE 'd1a
000347FE <AmiBlitz3.ab3@27225>     CMP.w -2(a4),d3
00034802 <AmiBlitz3.ab3@27226>     BNE 'd1a
00034808 <AmiBlitz3.ab3@27227>     SUBQ.l #6,destpointer
0003480C <AmiBlitz3.ab3@27228>  BRA 'd12
00034810 <AmiBlitz3.ab3@27231>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00034816 <AmiBlitz3.ab3@27232>     MOVE.w -2(a4),-4(a4)
0003481A <AmiBlitz3.ab3@27233>     MOVE.w d3,-2(a4)
00034820 <AmiBlitz3.ab3@27236>   CLR.w fp0var
00034828 <AmiBlitz3.ab3@27237>     MOVE.w #$ffff,fp0mode
0003482A <AmiBlitz3.ab3@27238>  RTS
00034832 <AmiBlitz3.ab3@27241>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00034836 <AmiBlitz3.ab3@27242>    BNE 'do4
0003483A <AmiBlitz3.ab3@27243>    MOVE.w #$2b6c,d1
00034840 <AmiBlitz3.ab3@27244>       TST.w varmode
00034844 <AmiBlitz3.ab3@27245>    BEQ 'g3a
00034848 <AmiBlitz3.ab3@27246>    BCLR #9,d1
0003484C <AmiBlitz3.ab3@27249>   MOVE.w d1,-6(a4)
00034852 <AmiBlitz3.ab3@27250>     MOVE.w -2(a4),-4(a4)
00034856 <AmiBlitz3.ab3@27251>     MOVE.w d3,-2(a4)
0003485C <AmiBlitz3.ab3@27252>     CLR.w fp0var
00034864 <AmiBlitz3.ab3@27253>     MOVE.w #$ffff,fp0mode
00034866 <AmiBlitz3.ab3@27254>  RTS
0003486C <AmiBlitz3.ab3@27257>   MOVE.w d3,fp0var
00034876 <AmiBlitz3.ab3@27258>    MOVE.w varmode,fp0mode
00034878 <AmiBlitz3.ab3@27259>    ADDQ.l #6,a4
0003487E <AmiBlitz3.ab3@27260>    MOVE.l a4,fp0addr
00034888 <AmiBlitz3.ab3@27261>    MOVE.l firstiff,fp0iff
0003488C <AmiBlitz3.ab3@27264>   MOVEM.l d0/d4,-(a7)
0003488E <AmiBlitz3.ab3@27265>    MOVEQ #0,d0
00034894 <AmiBlitz3.ab3@27266>     MOVE.w regnum,d0
00034896 <AmiBlitz3.ab3@27267>    ASL.w #7,d0                                             ;fpu store var
0003489A <AmiBlitz3.ab3@27268>   BTST #15,d2
0003489E <AmiBlitz3.ab3@27269>    BEQ 'var
000348A0 <AmiBlitz3.ab3@27270>    MOVE.w d1,d4
000348A4 <AmiBlitz3.ab3@27271>    CMP.w #$24c0,d4
000348A8 <AmiBlitz3.ab3@27272>    BNE 'nopl
000348AE <AmiBlitz3.ab3@27273>    MOVE.l #$f21a6400,d1
000348B0 <AmiBlitz3.ab3@27274>    MOVEQ #0,d3
000348B4 <AmiBlitz3.ab3@27275>  BRA 'glob
000348BA <AmiBlitz3.ab3@27279>   MOVE.l #$f2126400,d1
000348BC <AmiBlitz3.ab3@27280>    TST.w d3                                                ;offset =0
000348C0 <AmiBlitz3.ab3@27281>    BNE 'offset
000348C6 <AmiBlitz3.ab3@27282>    MOVE.l #$f2126400,d1
000348C8 <AmiBlitz3.ab3@27290>    MOVEQ #0,d3
000348CC <AmiBlitz3.ab3@27291>  BRA 'glob
000348D2 <AmiBlitz3.ab3@27294>   MOVE.l #$f22d6400,d1                                     ;var
000348D8 <AmiBlitz3.ab3@27295>   TST.w varmode
000348DC <AmiBlitz3.ab3@27296>   BEQ 'glob
000348E0 <AmiBlitz3.ab3@27297>   BCLR #16,d1
000348E2 <AmiBlitz3.ab3@27298>  'glob OR.l d0,d1
000348EC <AmiBlitz3.ab3@27301>   CMP.l #newtype_double,currtype
000348F0 <AmiBlitz3.ab3@27302>   BNE 'dbl1
000348F6 <AmiBlitz3.ab3@27303>   OR.l #$00001000,d1
000348FC <AmiBlitz3.ab3@27306>   JSR writelong
00034902 <AmiBlitz3.ab3@27307>   CLR.l currtype
00034906 <AmiBlitz3.ab3@27308>   MOVEM.l (a7)+,d0/d4
00034908 <AmiBlitz3.ab3@27309>   MOVE.l d3,d1
0003490C <AmiBlitz3.ab3@27310>   BEQ 'nooffs
00034912 <AmiBlitz3.ab3@27311>  JMP writeword
00034914 <AmiBlitz3.ab3@27314>  RTS
0003491A <AmiBlitz3.ab3@27328>     TST.b fast                                             ;write lea->xx(a2)
0003491E <AmiBlitz3.ab3@27329>    BEQ 'la10
00034924 <AmiBlitz3.ab3@27333>    TST.b quickadd
0003492A <AmiBlitz3.ab3@27335>      CLR.b quickadd
0003492E <AmiBlitz3.ab3@27336>    CMP.w #$2480,d1
00034932 <AmiBlitz3.ab3@27337>    BNE 'la10
00034938 <AmiBlitz3.ab3@27338>    TST.b optiarray
0003493C <AmiBlitz3.ab3@27339>    BNE 'la10
00034942 <AmiBlitz3.ab3@27340>    MOVE.l destpointer,a4
00034948 <AmiBlitz3.ab3@27341>    CMP.w #$45ea,-4(a4)
0003494C <AmiBlitz3.ab3@27342>    BNE 'la10
00034954 <AmiBlitz3.ab3@27343>    CMP.w #8,pushclen
00034958 <AmiBlitz3.ab3@27344>    BEQ 'la100
00034960 <AmiBlitz3.ab3@27345>    CMP.w #6,pushclen
00034964 <AmiBlitz3.ab3@27346>    BNE 'la10
00034968 <AmiBlitz3.ab3@27347>    CMP.b #3,d2
0003496C <AmiBlitz3.ab3@27348>    BCS 'la110
00034972 <AmiBlitz3.ab3@27350>    MOVE.w #$2540,-2(a4)
00034978 <AmiBlitz3.ab3@27351>    MOVE.w arrayoffset,d1
0003497E <AmiBlitz3.ab3@27352>  JMP writeword
00034984 <AmiBlitz3.ab3@27355>    CLR.b quickadd
00034986 <AmiBlitz3.ab3@27356>  RTS
0003498A <AmiBlitz3.ab3@27359>    CMP.b #2,d2
0003498E <AmiBlitz3.ab3@27360>    BNE 'la120
00034994 <AmiBlitz3.ab3@27361>     MOVE.w #$3540,-2(a4)
0003499A <AmiBlitz3.ab3@27362>    MOVE.w arrayoffset,d1
000349A0 <AmiBlitz3.ab3@27363>  JMP writeword
000349A4 <AmiBlitz3.ab3@27366>   CMP.b #1,d2
000349A8 <AmiBlitz3.ab3@27367>    BNE.s 'la10
000349AE <AmiBlitz3.ab3@27368>     MOVE.w #$1540,-2(a4)
000349B4 <AmiBlitz3.ab3@27369>    MOVE.w arrayoffset,d1
000349BA <AmiBlitz3.ab3@27370>  JMP writeword
000349BE <AmiBlitz3.ab3@27373>    CMP.b #3,d2
000349C2 <AmiBlitz3.ab3@27374>    BCS 'la11
000349C8 <AmiBlitz3.ab3@27375>    MOVE.w #$2540,-4(a4)
000349CA <AmiBlitz3.ab3@27376>  RTS
000349CE <AmiBlitz3.ab3@27379>    CMP.b #2,d2
000349D2 <AmiBlitz3.ab3@27380>    BNE 'la12
000349D8 <AmiBlitz3.ab3@27381>     MOVE.w #$3540,-4(a4)
000349DA <AmiBlitz3.ab3@27382>  RTS
000349DE <AmiBlitz3.ab3@27385>    CMP.b #1,d2
000349E2 <AmiBlitz3.ab3@27386>    BNE.s 'la10
000349E8 <AmiBlitz3.ab3@27387>     MOVE.w #$1540,-4(a4)
000349EA <AmiBlitz3.ab3@27388>  RTS
000349F0 <AmiBlitz3.ab3@27391>   CLR.b optiarray
000349F4 <AmiBlitz3.ab3@27393>    CMP.b #$1,D2
000349F8 <AmiBlitz3.ab3@27394>    BEQ.w 'byte
000349FC <AmiBlitz3.ab3@27395>    BSR.w varalign
00034A00 <AmiBlitz3.ab3@27396>    CMP.b #$3,D2
00034A04 <AmiBlitz3.ab3@27397>    BCC.w 'writevarlong
00034A0A <AmiBlitz3.ab3@27399>    TST.b fast                                              ;optiimmi
00034A0E <AmiBlitz3.ab3@27400>    BEQ 'l10bc
00034A14 <AmiBlitz3.ab3@27405>    MOVE.l destpointer,a0
00034A1A <AmiBlitz3.ab3@27406>    SUB.l imm_addr,a0
00034A20 <AmiBlitz3.ab3@27407>    CMP.l #4,a0
00034A24 <AmiBlitz3.ab3@27408>    BNE 'l10c
00034A2A <AmiBlitz3.ab3@27409>    CLR.l imm_addr
00034A30 <AmiBlitz3.ab3@27410>    MOVE.l destpointer,a4
00034A34 <AmiBlitz3.ab3@27411>    OR.w #$107c,d1
00034A38 <AmiBlitz3.ab3@27412>    MOVE.w d1,-4(a4)
00034A3A <AmiBlitz3.ab3@27413>     MOVE.w D3,D1
00034A40 <AmiBlitz3.ab3@27414>  JMP writeword
00034A46 <AmiBlitz3.ab3@27417>   MOVE.l destpointer,a0
00034A4C <AmiBlitz3.ab3@27418>   SUB.l load_var_addr,a0
00034A52 <AmiBlitz3.ab3@27419>   CMP.l #4,a0
00034A56 <AmiBlitz3.ab3@27420>   BNE 'l10bc
00034A5C <AmiBlitz3.ab3@27421>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00034A60 <AmiBlitz3.ab3@27422>   BNE 'l10bc
00034A66 <AmiBlitz3.ab3@27424>   CLR.l load_var_addr
00034A6C <AmiBlitz3.ab3@27425>   MOVE.l destpointer,a4
00034A70 <AmiBlitz3.ab3@27426>   OR.w #$102d,d1
00034A74 <AmiBlitz3.ab3@27427>   MOVE.w d1,-4(a4)
00034A76 <AmiBlitz3.ab3@27428>   MOVE.w d3,d1
00034A7C <AmiBlitz3.ab3@27429>  JMP writeword
00034A80 <AmiBlitz3.ab3@27433>   ORI.w #$1000,D1                                          ;word
00034A84 <AmiBlitz3.ab3@27434>  BRA.w 'writestorevar
00034A8A <AmiBlitz3.ab3@27439>    TST.b fast                                              ;optiimmi
00034A8E <AmiBlitz3.ab3@27440>    BEQ 'l10bb
00034A94 <AmiBlitz3.ab3@27445>    MOVE.l destpointer,a0
00034A9A <AmiBlitz3.ab3@27446>    SUB.l imm_addr,a0
00034AA0 <AmiBlitz3.ab3@27447>    CMP.l #4,a0
00034AA4 <AmiBlitz3.ab3@27448>    BNE 'l10d
00034AAA <AmiBlitz3.ab3@27449>    CLR.l imm_addr
00034AB0 <AmiBlitz3.ab3@27450>    MOVE.l destpointer,a4
00034AB4 <AmiBlitz3.ab3@27451>    OR.w #$7c,d1
00034AB8 <AmiBlitz3.ab3@27452>    EORI #$3000,d1
00034ABC <AmiBlitz3.ab3@27453>    MOVE.w d1,-4(a4)
00034ABE <AmiBlitz3.ab3@27454>       MOVE.w D3,D1
00034AC4 <AmiBlitz3.ab3@27455>  JMP writeword
00034ACA <AmiBlitz3.ab3@27458>   MOVE.l destpointer,a0
00034AD0 <AmiBlitz3.ab3@27459>   SUB.l load_var_addr,a0
00034AD6 <AmiBlitz3.ab3@27460>   CMP.l #4,a0
00034ADA <AmiBlitz3.ab3@27461>   BNE 'l10bb
00034AE0 <AmiBlitz3.ab3@27462>   CLR.l load_var_addr
00034AE6 <AmiBlitz3.ab3@27463>   MOVE.l destpointer,a4
00034AEC <AmiBlitz3.ab3@27464>    CMP.w #$1b6d,-4(a4)
00034AF0 <AmiBlitz3.ab3@27465>    BNE 'l10bb
00034AF4 <AmiBlitz3.ab3@27466>    OR.w #$2d,d1
00034AF8 <AmiBlitz3.ab3@27467>    EORI #$3000,d1
00034AFC <AmiBlitz3.ab3@27468>    MOVE.w d1,-4(a4)
00034AFE <AmiBlitz3.ab3@27469>   MOVE.w d3,d1
00034B04 <AmiBlitz3.ab3@27470>  JMP writeword
00034B0A <AmiBlitz3.ab3@27474>   ADDQ.w #1,pcodd                                          ;byte
00034B0E <AmiBlitz3.ab3@27475>   EORI.w #$3000,D1
00034B14 <AmiBlitz3.ab3@27478>   JSR writeword
00034B18 <AmiBlitz3.ab3@27479>   BTST #$7,D1
00034B1C <AmiBlitz3.ab3@27480>    BNE 'done
00034B1E <AmiBlitz3.ab3@27481>   MOVE.w D3,D1
00034B24 <AmiBlitz3.ab3@27482>  JMP writeword
00034B2A <AmiBlitz3.ab3@27485>    TST.b fast                                              ;optiimmi
00034B2E <AmiBlitz3.ab3@27486>    BEQ 'l10ba
00034B34 <AmiBlitz3.ab3@27490>    MOVE.l destpointer,a0
00034B3A <AmiBlitz3.ab3@27491>    SUB.l imm_addr,a0
00034B40 <AmiBlitz3.ab3@27492>    CMP.l #6,a0
00034B44 <AmiBlitz3.ab3@27493>    BNE 'l10e
00034B4A <AmiBlitz3.ab3@27494>    CLR.l imm_addr
00034B50 <AmiBlitz3.ab3@27495>    MOVE.l destpointer,a4
00034B54 <AmiBlitz3.ab3@27496>    OR.w #$7c,d1
00034B58 <AmiBlitz3.ab3@27497>    MOVE.w d1,-6(a4)
00034B5A <AmiBlitz3.ab3@27498>     MOVE.w D3,D1
00034B60 <AmiBlitz3.ab3@27499>  JMP writeword
00034B66 <AmiBlitz3.ab3@27502>   MOVE.l destpointer,a0
00034B6C <AmiBlitz3.ab3@27503>   SUB.l load_var_addr,a0
00034B72 <AmiBlitz3.ab3@27504>   CMP.l #4,a0
00034B76 <AmiBlitz3.ab3@27505>   BNE 'l10ba
00034B7C <AmiBlitz3.ab3@27506>   CLR.l load_var_addr
00034B82 <AmiBlitz3.ab3@27507>   MOVE.l destpointer,a4
00034B88 <AmiBlitz3.ab3@27508>   CMP.w #$245f,-2(a4)
00034B8C <AmiBlitz3.ab3@27509>   BEQ 'l10ba
00034B90 <AmiBlitz3.ab3@27510>   OR.w #$28,d1
00034B94 <AmiBlitz3.ab3@27511>   OR.w d1,-4(a4)
00034B9A <AmiBlitz3.ab3@27512>   CMP.w #$2b6d,-4(a4)
00034B9E <AmiBlitz3.ab3@27513>   BNE 'd1aa
00034BA2 <AmiBlitz3.ab3@27514>   CMP.w -2(a4),d3
00034BA6 <AmiBlitz3.ab3@27515>   BNE 'd1aa
00034BAC <AmiBlitz3.ab3@27516>   SUBQ.l #4,destpointer
00034BAE <AmiBlitz3.ab3@27517>  RTS
00034BB0 <AmiBlitz3.ab3@27520>   MOVE.w d3,d1
00034BB6 <AmiBlitz3.ab3@27521>  JMP writeword
00034BBC <AmiBlitz3.ab3@27525>   JSR writeword
00034BC0 <AmiBlitz3.ab3@27526>   BTST #$7,D1
00034BC4 <AmiBlitz3.ab3@27527>    BNE.b 'done
00034BC6 <AmiBlitz3.ab3@27528>   MOVE.w D3,D1
00034BCC <AmiBlitz3.ab3@27529>  JMP writeword
00034BCE <AmiBlitz3.ab3@27532> RTS
00034BD0 <AmiBlitz3.ab3@27536>   MOVE.w D1,-(A7)
00034BD4 <AmiBlitz3.ab3@27537>   MOVE.w pcodd(PC),D1
00034BD6 <AmiBlitz3.ab3@27538>   LSR.w #1,D1
00034BDA <AmiBlitz3.ab3@27539>    BCC.b 'done
00034BE0 <AmiBlitz3.ab3@27540>   CLR.w pcodd
00034BE6 <AmiBlitz3.ab3@27541>   MOVE.w add1a2,D1
00034BEC <AmiBlitz3.ab3@27542>    JSR writeword
00034BEE <AmiBlitz3.ab3@27545>   MOVE.w (A7)+,D1
00034BF0 <AmiBlitz3.ab3@27546> RTS
00034BF2 <AmiBlitz3.ab3@27550> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00034BF4 <AmiBlitz3.ab3@27553> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034BF6 <AmiBlitz3.ab3@27554> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00034BF8 <AmiBlitz3.ab3@27555> listsize:  Ds.w 1
00034BFE <AmiBlitz3.ab3@27561>   ADDQ.w #1,regnum               ;get things into d1
00034C06 <AmiBlitz3.ab3@27563>   MOVE.b #1,nowdeclare
00034C0C <AmiBlitz3.ab3@27564>   CLR.b dimkeep
00034C14 <AmiBlitz3.ab3@27565>    CMP.l #"KEEP",-1(a5)
00034C18 <AmiBlitz3.ab3@27566>   BNE 'nokeep
00034C1E <AmiBlitz3.ab3@27567>   CMP.b #" ",3(a5)
00034C22 <AmiBlitz3.ab3@27568>   BNE 'nokeep
00034C24 <AmiBlitz3.ab3@27569>   ADDQ.l #3,a5
00034C28 <AmiBlitz3.ab3@27572>     CMP.b #" ",(a5)
00034C2C <AmiBlitz3.ab3@27573>     BNE '1
00034C2E <AmiBlitz3.ab3@27574>    ADDQ #1,a5
00034C32 <AmiBlitz3.ab3@27575>  BRA '2
00034C38 <AmiBlitz3.ab3@27578>   MOVE.l a5,lastsourcepos
00034C40 <AmiBlitz3.ab3@27579>   MOVE.b #1,dimkeep
00034C44 <AmiBlitz3.ab3@27588>   MOVE.w #$FF9A,D1           ; is #65434,
00034C4A <AmiBlitz3.ab3@27589>   JSR uselib                 ;arrays lib!
00034C50 <AmiBlitz3.ab3@27592>   CLR.w listadd
00034C54 <AmiBlitz3.ab3@27593>   CMP.w #-$7F4D,D0           ; was #$8000+tnum,d0
00034C58 <AmiBlitz3.ab3@27594>    BNE.w 'notlist
00034C60 <AmiBlitz3.ab3@27595>   MOVE.w #$0008,listadd      ;it's a list
00034C64 <AmiBlitz3.ab3@27596>   MOVE.w #$FFFA,D1           ; is #65530
00034C6A <AmiBlitz3.ab3@27597>    JSR uselib                ;use memlib
00034C70 <AmiBlitz3.ab3@27598>    JSR get1bytemain
00034C76 <AmiBlitz3.ab3@27601>   CLR.w nonew
00034C7C <AmiBlitz3.ab3@27602>    JSR getparameter
00034C82 <AmiBlitz3.ab3@27604>   JSR checkdoubledeclare
00034C8A <AmiBlitz3.ab3@27606>   BTST #$1,flagmask+1
00034C8E <AmiBlitz3.ab3@27607>    BEQ.w JUMP_syntaxerr
00034C94 <AmiBlitz3.ab3@27608>    JSR fetchvars
00034C9A <AmiBlitz3.ab3@27609>   MOVE.w notshared,D1      ; added,
00034C9E <AmiBlitz3.ab3@27610>    BNE.w 'added
00034CA6 <AmiBlitz3.ab3@27614>   MOVE.w $8(A3),temp1
00034CAC <AmiBlitz3.ab3@27615>   MOVE.w proceduremode,D2
00034CB0 <AmiBlitz3.ab3@27616>    BNE.w 'reloc
00034CB6 <AmiBlitz3.ab3@27618>   MOVE.w globalvarpointer,-(A7)
00034CBE <AmiBlitz3.ab3@27619>   MOVE.w $4(A3),globalvarpointer
00034CC4 <AmiBlitz3.ab3@27620>   ADDQ.w #4,globalvarpointer
00034CC8 <AmiBlitz3.ab3@27621>    BSR.w write_dim_code
00034CCE <AmiBlitz3.ab3@27622>   MOVE.w (A7)+,globalvarpointer
00034CD2 <AmiBlitz3.ab3@27623>  BRA.w 'next
00034CD8 <AmiBlitz3.ab3@27638>   MOVE.w globalvarpointer,-(A7)
00034CDE <AmiBlitz3.ab3@27639>             MOVE.w proceduremode,-(a7)
00034CE4 <AmiBlitz3.ab3@27640>             CLR.w proceduremode
00034CEC <AmiBlitz3.ab3@27641>   MOVE.w $4(A3),globalvarpointer
00034CF2 <AmiBlitz3.ab3@27642>   ADDQ.w #4,globalvarpointer
00034CF6 <AmiBlitz3.ab3@27643>    BSR.w write_dim_code
00034CFC <AmiBlitz3.ab3@27644>    MOVE.w (a7)+,proceduremode
00034D02 <AmiBlitz3.ab3@27645>   MOVE.w (A7)+,globalvarpointer
00034D06 <AmiBlitz3.ab3@27647>  BRA.w 'next
00034D0E <AmiBlitz3.ab3@27652>   MOVE.w #$FFFF,temp1                ; was -1  ;no care on # dims
00034D12 <AmiBlitz3.ab3@27653>   MOVE.w listadd(PC),D1
00034D16 <AmiBlitz3.ab3@27654>    BEQ.w 'isok
00034D1E <AmiBlitz3.ab3@27655>   MOVE.w #$4000,temp1                ;yes, we do care - must be 1
00034D24 <AmiBlitz3.ab3@27657>   BSET #$0,$6(A3)                    ;set to list type of array
00034D2A <AmiBlitz3.ab3@27661>         TST.w proceduremode
00034D2E <AmiBlitz3.ab3@27662>        BNE 'l1
00034D34 <AmiBlitz3.ab3@27663>        MOVE.w locvaroff,-(a7)
00034D38 <AmiBlitz3.ab3@27667>   BSR.w write_dim_code
00034D3E <AmiBlitz3.ab3@27669>         TST.w proceduremode
00034D42 <AmiBlitz3.ab3@27670>         BNE 'next
00034D48 <AmiBlitz3.ab3@27671>        MOVE.w (A7)+,locvaroff
00034D4E <AmiBlitz3.ab3@27675>   JSR get1bytemain
00034D52 <AmiBlitz3.ab3@27676>   CMP.w #$2C,D0                ; ","
00034D56 <AmiBlitz3.ab3@27677>    BNE.w 'done
00034D5C <AmiBlitz3.ab3@27678>    JSR get1bytemain
00034D60 <AmiBlitz3.ab3@27679>  BRA.w dodim2
00034D62 <AmiBlitz3.ab3@27682> RTS
00034D68 <AmiBlitz3.ab3@27685> JUMP_syntaxerr JMP syntaxerr
00034D6E <AmiBlitz3.ab3@27686> JUMP_redimerr JMP redimerr
00034D76 <AmiBlitz3.ab3@27690>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00034D7C <AmiBlitz3.ab3@27691>   MOVE.w beginarr,D1
00034D82 <AmiBlitz3.ab3@27692>    JSR writeword
00034D84 <AmiBlitz3.ab3@27693>   MOVEQ.l #$00,D1
00034D8A <AmiBlitz3.ab3@27694>    JSR writeword
00034D8C <AmiBlitz3.ab3@27695>   MOVEQ.l #$04,D1
00034D94 <AmiBlitz3.ab3@27696>   BTST #$0,flagmask+1
00034D98 <AmiBlitz3.ab3@27697>    BNE.w 'pointer
00034D9C <AmiBlitz3.ab3@27698>   MOVE.w $8(A2),D1
00034DA0 <AmiBlitz3.ab3@27701>   ADD.w listadd(PC),D1                                     ;size of one element.
00034DA6 <AmiBlitz3.ab3@27702>   MOVE.w D1,listsize
00034DAC <AmiBlitz3.ab3@27703>    JSR writeword
00034DB2 <AmiBlitz3.ab3@27704>   CLR.w temp2                                              ;# dim's got
00034DB4 <AmiBlitz3.ab3@27705>   MOVE.l A3,-(A7)
00034DBA <AmiBlitz3.ab3@27708>   ADDQ.w #1,temp2
00034DBC <AmiBlitz3.ab3@27709>   MOVEQ.l #$03,D2                                          ;get word
00034DC2 <AmiBlitz3.ab3@27710>   MOVE.w notshared,-(a7)
00034DC8 <AmiBlitz3.ab3@27711>    JSR eval
00034DCE <AmiBlitz3.ab3@27712>   MOVE.w (a7)+,notshared
00034DD4 <AmiBlitz3.ab3@27713>   TST.b debugmode
00034DD8 <AmiBlitz3.ab3@27714>    BEQ.w 'norerr0
00034DDC <AmiBlitz3.ab3@27715>   MOVE.w #$C30F,D1
00034DE0 <AmiBlitz3.ab3@27721>       MOVE.w #$5281,d1
00034DE6 <AmiBlitz3.ab3@27722>       JSR writeword
00034DEC <AmiBlitz3.ab3@27723>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034DF2 <AmiBlitz3.ab3@27724>       JSR writelong
00034DF8 <AmiBlitz3.ab3@27725>   MOVE.w proceduremode,D2
00034DFC <AmiBlitz3.ab3@27726>    BEQ.w 'global
00034E02 <AmiBlitz3.ab3@27727>   SUBQ.w #4,locvaroff
00034E0C <AmiBlitz3.ab3@27728>   MOVE.w locvaroff,putarr+2
00034E10 <AmiBlitz3.ab3@27729>  BRA.w 'doit
00034E1A <AmiBlitz3.ab3@27732>   MOVE.w globalvarpointer,putarr+2
00034E20 <AmiBlitz3.ab3@27733>   ADDQ.w #4,globalvarpointer
00034E26 <AmiBlitz3.ab3@27736>   TST.b dimkeep
00034E2A <AmiBlitz3.ab3@27737>            BEQ 'doit_l1
00034E2C <AmiBlitz3.ab3@27738>       MOVEQ #0,d1
00034E32 <AmiBlitz3.ab3@27739>       MOVE.w putarr+2,d1
00034E38 <AmiBlitz3.ab3@27740>       OR.l  #$222d0000,d1
00034E3E <AmiBlitz3.ab3@27741>       MOVE.w proceduremode,D2
00034E42 <AmiBlitz3.ab3@27742>       BEQ 'doit_l2
00034E48 <AmiBlitz3.ab3@27743>       TST.w notshared
00034E4C <AmiBlitz3.ab3@27744>       BEQ 'doit_l2
00034E52 <AmiBlitz3.ab3@27745>       SUB.l #$00010000,d1
00034E58 <AmiBlitz3.ab3@27748>   JSR writelong
00034E5E <AmiBlitz3.ab3@27751>   MOVE.l putarr,D1
00034E64 <AmiBlitz3.ab3@27752>       TST.w notshared
00034E68 <AmiBlitz3.ab3@27753>       BNE 'doit_l1a
00034E6E <AmiBlitz3.ab3@27754>       JSR writelong
00034E72 <AmiBlitz3.ab3@27755>  BRA 'doit_l4
00034E78 <AmiBlitz3.ab3@27758>   JSR pokela5d
00034E7C <AmiBlitz3.ab3@27761>   CMP.w #$2C,D0
00034E80 <AmiBlitz3.ab3@27762>    BEQ.w 'loop
00034E84 <AmiBlitz3.ab3@27763>   CMP.w #$29,D0
00034E88 <AmiBlitz3.ab3@27764>    BNE.w JUMP_syntaxerr
00034E8A <AmiBlitz3.ab3@27765>   MOVEA.l (A7)+,A3
00034E90 <AmiBlitz3.ab3@27766>   MOVE.w temp1,D1
00034E94 <AmiBlitz3.ab3@27767>    BMI.w 'nocare
00034E98 <AmiBlitz3.ab3@27771>   BTST #$E,D1
00034E9C <AmiBlitz3.ab3@27772>    BEQ.w 'notl
00034EA4 <AmiBlitz3.ab3@27773>   CMPI.w #$1,temp2
00034EA8 <AmiBlitz3.ab3@27774>    BNE.w JUMP_redimerr
00034EAC <AmiBlitz3.ab3@27775>  BRA.w 'nocare
00034EB2 <AmiBlitz3.ab3@27778>   CMP.w temp2,D1
00034EB6 <AmiBlitz3.ab3@27779>    BNE.w JUMP_redimerr                                     ;range too long
00034EBC <AmiBlitz3.ab3@27782>   LEA globalvarpointer,A0
00034EC2 <AmiBlitz3.ab3@27783>   MOVE.w proceduremode,D1
00034EC6 <AmiBlitz3.ab3@27784>   BEQ.w 'gskip
00034ECC <AmiBlitz3.ab3@27785>   LEA locvaroff,A0
00034ED2 <AmiBlitz3.ab3@27788>   MOVE.W  extraword,(A0)
00034ED6 <AmiBlitz3.ab3@27789>   BRA.W   'care
00034EDE <AmiBlitz3.ab3@27792>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034EE4 <AmiBlitz3.ab3@27795>   LEA doarr,A0
00034EEA <AmiBlitz3.ab3@27796>   MOVE.w $4(A3),$2(A0)
00034EF2 <AmiBlitz3.ab3@27797>   MOVE.w putarr+2,$6(A0)
00034EF4 <AmiBlitz3.ab3@27798>   MOVE.l (A0)+,D1
00034EFA <AmiBlitz3.ab3@27799>    JSR writelong
00034EFC <AmiBlitz3.ab3@27800>   MOVE.l (A0),D1
00034F02 <AmiBlitz3.ab3@27801>    JSR writelong
00034F08 <AmiBlitz3.ab3@27802>    TST.b dimkeep
00034F0C <AmiBlitz3.ab3@27803>   BNE 'care_l3
00034F10 <AmiBlitz3.ab3@27806>   MOVE.w #$C400,D1
00034F14 <AmiBlitz3.ab3@27807>  BRA 'care_l2
00034F18 <AmiBlitz3.ab3@27810>   MOVE.w #$C405,d1
00034F1E <AmiBlitz3.ab3@27813>   MOVE.w proceduremode,D2
00034F22 <AmiBlitz3.ab3@27814>    BEQ.w 'isg
00034F28 <AmiBlitz3.ab3@27815>    TST.w notshared
00034F2C <AmiBlitz3.ab3@27816>    BEQ 'isg
00034F2E <AmiBlitz3.ab3@27817>   ADDQ.w #1,D1
00034F32 <AmiBlitz3.ab3@27820>   MOVE.w listadd(PC),D2
00034F36 <AmiBlitz3.ab3@27821>    BEQ.w 'isrg
00034F38 <AmiBlitz3.ab3@27822>   MOVE.w D1,-(A7)
00034F3C <AmiBlitz3.ab3@27823>   MOVE.w setles(PC),D1
00034F42 <AmiBlitz3.ab3@27824>    JSR writeword
00034F46 <AmiBlitz3.ab3@27825>   MOVE.w listsize(PC),D1
00034F4C <AmiBlitz3.ab3@27826>    JSR writeword
00034F4E <AmiBlitz3.ab3@27827>   MOVE.w (A7)+,D1
00034F50 <AmiBlitz3.ab3@27828>   ADDQ.w #3,D1
00034F54 <AmiBlitz3.ab3@27831> BRA.w Atokejsr
00034F58 <AmiBlitz3.ab3@27834> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00034F5E <AmiBlitz3.ab3@27843>     MOVE.l #$f23c4400,d1
00034F64 <AmiBlitz3.ab3@27845>   MOVE.w regnum,d0
00034F66 <AmiBlitz3.ab3@27846>   ASL.w #7,d0
00034F68 <AmiBlitz3.ab3@27847>   OR.w d0,d1
00034F6E <AmiBlitz3.ab3@27848>   JSR writelong
00034F74 <AmiBlitz3.ab3@27854>     MOVE.l #$40490fd9,d1
00034F7A <AmiBlitz3.ab3@27856>   JSR writelong
00034F80 <AmiBlitz3.ab3@27857> JMP get1bytemain
00034F84 <AmiBlitz3.ab3@27864> vbr:                Ds.l 1
00034F86 <AmiBlitz3.ab3@27865> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034F8C <AmiBlitz3.ab3@27867> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034F90 <AmiBlitz3.ab3@27871> constpcat:          Ds.l 1
00034F94 <AmiBlitz3.ab3@27872> constlibat:         Ds.l 1
00034F98 <AmiBlitz3.ab3@27873> constmaxpc:         Dc.l $400
00034F9C <AmiBlitz3.ab3@27875> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034FA0 <AmiBlitz3.ab3@27876> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00034FA4 <AmiBlitz3.ab3@27877> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034FA8 <AmiBlitz3.ab3@27878> lastrestype:        Dc.l newtype_string
00034FAA <AmiBlitz3.ab3@27879> rescnt:             Ds.w 1                               ;# resident
00034FAC <AmiBlitz3.ab3@27880> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034FB0 <AmiBlitz3.ab3@27881> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034FB2 <AmiBlitz3.ab3@27882> linedone:           Ds.w 1
00034FC8 <AmiBlitz3.ab3@27883> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034FCC <AmiBlitz3.ab3@27892>   Dc.l 0                                        ; bytetobyte
00034FD0 <AmiBlitz3.ab3@27893>   Dc.l convert_byte_to_word                     ; bytetoword
00034FD4 <AmiBlitz3.ab3@27894>   Dc.l convert_byte_to_long                     ; bytetolong
00034FD8 <AmiBlitz3.ab3@27895>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034FDC <AmiBlitz3.ab3@27896>   Dc.l convert_byte_to_float                    ; bytetofloat
00034FE0 <AmiBlitz3.ab3@27897>   Dc.l convert_byte_to_long                     ; bytetolong
00034FE4 <AmiBlitz3.ab3@27898>   Dc.l error_convert_types                      ; noconerr
00034FE8 <AmiBlitz3.ab3@27901>   Dc.l convert_word_to_byte                     ; wordtobyte
00034FEC <AmiBlitz3.ab3@27902>   Dc.l 0                                        ; wordtoword
00034FF0 <AmiBlitz3.ab3@27903>   Dc.l convert_word_to_long                     ; wordtolong
00034FF4 <AmiBlitz3.ab3@27904>   Dc.l convert_word_to_quick                    ; wordtoquick
00034FF8 <AmiBlitz3.ab3@27905>   Dc.l convert_word_to_float                    ; wordtofloat
00034FFC <AmiBlitz3.ab3@27906>   Dc.l convert_word_to_long                     ; wordtolong
00035000 <AmiBlitz3.ab3@27907>   Dc.l error_convert_types                      ; noconerr
00035004 <AmiBlitz3.ab3@27910>   Dc.l convert_long_to_byte                     ; longtobyte
00035008 <AmiBlitz3.ab3@27911>   Dc.l convert_long_to_word                     ; longtoword
0003500C <AmiBlitz3.ab3@27912>   Dc.l 0                                        ; longtolong
00035010 <AmiBlitz3.ab3@27913>   Dc.l convert_long_to_quick                    ; longtoquick
00035014 <AmiBlitz3.ab3@27914>   Dc.l convert_long_to_float                    ; longtofloat
00035018 <AmiBlitz3.ab3@27915>   Dc.l 0                                        ; longtolong
0003501C <AmiBlitz3.ab3@27916>   Dc.l error_convert_types                      ; noconerr
00035020 <AmiBlitz3.ab3@27919>   Dc.l convert_quick_to_byte                    ; quicktobyte
00035024 <AmiBlitz3.ab3@27920>   Dc.l convert_quick_to_word                    ; quicktoword
00035028 <AmiBlitz3.ab3@27921>   Dc.l convert_quick_to_long                    ; quicktolong
0003502C <AmiBlitz3.ab3@27922>   Dc.l 0                                        ; quicktoquick
00035030 <AmiBlitz3.ab3@27923>   Dc.l convert_quick_to_float                   ; quicktofloat
00035034 <AmiBlitz3.ab3@27924>   Dc.l convert_quick_to_long                    ; quicktolong
00035038 <AmiBlitz3.ab3@27925>   Dc.l error_convert_types                      ; noconerr
0003503C <AmiBlitz3.ab3@27928>   Dc.l convert_float_to_byte                    ; floattobyte
00035040 <AmiBlitz3.ab3@27929>   Dc.l convert_float_to_word                    ; floattoword
00035044 <AmiBlitz3.ab3@27930>   Dc.l convert_float_to_long                    ; floattolong
00035048 <AmiBlitz3.ab3@27931>   Dc.l convert_float_to_quick                   ; floattoquick
0003504C <AmiBlitz3.ab3@27932>   Dc.l 0                                        ; floattofloat
00035050 <AmiBlitz3.ab3@27933>   Dc.l convert_float_to_long                    ; floattolong
00035054 <AmiBlitz3.ab3@27934>   Dc.l error_convert_types                      ; noconerr
00035058 <AmiBlitz3.ab3@27937>   Dc.l convert_long_to_byte                     ; longtobyte
0003505C <AmiBlitz3.ab3@27938>   Dc.l convert_long_to_word                     ; longtoword
00035060 <AmiBlitz3.ab3@27939>   Dc.l 0                                        ; longtolong
00035064 <AmiBlitz3.ab3@27940>   Dc.l convert_long_to_quick                    ; longtoquick
00035068 <AmiBlitz3.ab3@27941>   Dc.l convert_long_to_float                    ; longtofloat
0003506C <AmiBlitz3.ab3@27942>   Dc.l 0                                        ; longtolong
00035070 <AmiBlitz3.ab3@27943>   Dc.l error_convert_types                      ; noconerr
00035074 <AmiBlitz3.ab3@27946>   Dc.l error_convert_types                      ; noconerr
00035078 <AmiBlitz3.ab3@27947>   Dc.l error_convert_types                      ; noconerr
0003507C <AmiBlitz3.ab3@27948>   Dc.l string_to_long                           ; stringtolong
00035080 <AmiBlitz3.ab3@27949>   Dc.l error_convert_types                      ; noconerr
00035084 <AmiBlitz3.ab3@27950>   Dc.l error_convert_types                      ; noconerr
00035088 <AmiBlitz3.ab3@27951>   Dc.l string_to_long                           ; stringtolong
0003508C <AmiBlitz3.ab3@27952>   Ds.l 1
0003508E <AmiBlitz3.ab3@27958>   Dc.b $00,$2B                                  ;+ ; add
00035092 <AmiBlitz3.ab3@27959>   Dc.l do_plus_byte                             ;doplusb
00035096 <AmiBlitz3.ab3@27960>   Dc.l do_plus_word                             ;doplusw
0003509A <AmiBlitz3.ab3@27961>   Dc.l do_plus_long                             ;doplusl
0003509E <AmiBlitz3.ab3@27962>   Dc.l do_plus_long                             ;doplusl
000350A2 <AmiBlitz3.ab3@27963>   Dc.l do_plus_float                            ;doplusf
000350A6 <AmiBlitz3.ab3@27964>   Ds.l 1
000350AA <AmiBlitz3.ab3@27965>   Dc.l add_strings                              ;addstrings
000350AC <AmiBlitz3.ab3@27966>   Dc.b $0B,$B8
000350AE <AmiBlitz3.ab3@27968>   Dc.b $00,$2D                                  ;- ; sub
000350B2 <AmiBlitz3.ab3@27969>   Dc.l do_minus_byte                            ;dominusb
000350B6 <AmiBlitz3.ab3@27970>   Dc.l do_minus_word                            ;dominusw
000350BA <AmiBlitz3.ab3@27971>   Dc.l do_minus_long                            ;dominusl
000350BE <AmiBlitz3.ab3@27972>   Dc.l do_minus_long                            ;dominusl
000350C2 <AmiBlitz3.ab3@27973>   Dc.l do_minus_float                           ;dominusf
000350CA <AmiBlitz3.ab3@27974>   Ds.l 2
000350CC <AmiBlitz3.ab3@27975>   Dc.b $0B,$B8
000350CE <AmiBlitz3.ab3@27977>   Dc.b $00,$2A                                  ;* ; mul
000350D2 <AmiBlitz3.ab3@27978>   Dc.l do_times_byte                            ;dotimesb
000350D6 <AmiBlitz3.ab3@27979>   Dc.l do_times_word                            ;dotimesw
000350DA <AmiBlitz3.ab3@27980>   Dc.l do_times_long                            ;dotimesl
000350DE <AmiBlitz3.ab3@27981>   Dc.l do_times_quick                           ;dotimesq
000350E2 <AmiBlitz3.ab3@27982>   Dc.l do_times_float                           ;dotimesf
000350EA <AmiBlitz3.ab3@27983>   Ds.l 2
000350EC <AmiBlitz3.ab3@27984>   Dc.b $0F,$A0
000350EE <AmiBlitz3.ab3@27986>   Dc.b $00,$2F                                  ;/ ; div
000350F2 <AmiBlitz3.ab3@27987>   Dc.l do_Div_byte                              ;dodivb
000350F6 <AmiBlitz3.ab3@27988>   Dc.l do_Div_word                              ;dodivb
000350FA <AmiBlitz3.ab3@27989>   Dc.l do_Div_long                              ;dodivl
000350FE <AmiBlitz3.ab3@27990>   Dc.l do_Div_quick                             ;dodivq
00035102 <AmiBlitz3.ab3@27991>   Dc.l do_Div_float                             ;dodivf
0003510A <AmiBlitz3.ab3@27992>   Ds.l 2
0003510C <AmiBlitz3.ab3@27993>   Dc.b $0F,$A0
0003510E <AmiBlitz3.ab3@27995>   Dc.b $00,$26                                  ;& ; & int
00035112 <AmiBlitz3.ab3@27996>   Dc.l do_AND_byte                              ;doandb
00035116 <AmiBlitz3.ab3@27997>   Dc.l do_AND_word                              ;doandw
0003511A <AmiBlitz3.ab3@27998>   Dc.l do_AND_long                              ;doandl
0003511E <AmiBlitz3.ab3@27999>   Dc.l do_AND_long                              ;doandl
0003512A <AmiBlitz3.ab3@28000>   Ds.l 3
0003512C <AmiBlitz3.ab3@28001>   Dc.b $13,$88
0003512E <AmiBlitz3.ab3@28003>   Dc.b $00,$7C                                  ;| ;or int ;
00035132 <AmiBlitz3.ab3@28004>   Dc.l do_OR_byte                               ;doorb
00035136 <AmiBlitz3.ab3@28005>   Dc.l do_OR_word                               ;doorw
0003513A <AmiBlitz3.ab3@28006>   Dc.l do_OR_long                               ;doorl
0003513E <AmiBlitz3.ab3@28007>   Dc.l do_OR_long                               ;doorl
0003514A <AmiBlitz3.ab3@28008>   Ds.l 3
0003514C <AmiBlitz3.ab3@28009>   Dc.b $13,$88
0003514E <AmiBlitz3.ab3@28011>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00035152 <AmiBlitz3.ab3@28012>   Dc.l do_AND_byte                              ;doandb
00035156 <AmiBlitz3.ab3@28013>   Dc.l do_AND_word                              ;doandw
0003515A <AmiBlitz3.ab3@28014>   Dc.l do_AND_long                              ;doandl
0003515E <AmiBlitz3.ab3@28015>   Dc.l do_AND_long                              ;doandl
0003516A <AmiBlitz3.ab3@28016>   Ds.l 3
0003516C <AmiBlitz3.ab3@28017>   Dc.b $03,$E8
0003516E <AmiBlitz3.ab3@28019>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00035172 <AmiBlitz3.ab3@28020>   Dc.l do_OR_byte                               ;doorb
00035176 <AmiBlitz3.ab3@28021>   Dc.l do_OR_word                               ;doorw
0003517A <AmiBlitz3.ab3@28022>   Dc.l do_OR_long                               ;doorl
0003517E <AmiBlitz3.ab3@28023>   Dc.l do_OR_long                               ;doorl
0003518A <AmiBlitz3.ab3@28024>   Ds.l 3
0003518C <AmiBlitz3.ab3@28025>   Dc.b $03,$E8
0003518E <AmiBlitz3.ab3@28027>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00035192 <AmiBlitz3.ab3@28028>   Dc.l do_EOR_byte                              ;doeorb
00035196 <AmiBlitz3.ab3@28029>   Dc.l do_EOR_word                              ;doeorw
0003519A <AmiBlitz3.ab3@28030>   Dc.l do_EOR_long                              ;doeorl
0003519E <AmiBlitz3.ab3@28031>   Dc.l do_EOR_long                              ;doeorl
000351AA <AmiBlitz3.ab3@28032>   Ds.l 3
000351AC <AmiBlitz3.ab3@28033>   Dc.b $03,$E8
000351AE <AmiBlitz3.ab3@28035>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
000351B2 <AmiBlitz3.ab3@28036>   Dc.l do_LSL                                   ;dolslb
000351B6 <AmiBlitz3.ab3@28037>   Dc.l do_LSL                                   ;dolslw
000351BA <AmiBlitz3.ab3@28038>   Dc.l do_LSL                                   ;dolsll
000351BE <AmiBlitz3.ab3@28039>   Dc.l do_LSL                                   ;dolsll
000351CA <AmiBlitz3.ab3@28040>   Ds.l 3
000351CC <AmiBlitz3.ab3@28041>   Dc.b $17,$70
000351CE <AmiBlitz3.ab3@28043>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
000351D2 <AmiBlitz3.ab3@28044>   Dc.l do_LSL                                   ;dolslb
000351D6 <AmiBlitz3.ab3@28045>   Dc.l do_LSL                                   ;dolslw
000351DA <AmiBlitz3.ab3@28046>   Dc.l do_LSL                                   ;dolsll
000351DE <AmiBlitz3.ab3@28047>   Dc.l do_LSL                                   ;dolsll
000351EA <AmiBlitz3.ab3@28048>   Ds.l 3
000351EC <AmiBlitz3.ab3@28049>   Dc.b $17,$70
000351EE <AmiBlitz3.ab3@28051>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000351F2 <AmiBlitz3.ab3@28052>   Dc.l do_LSR                                   ;dolsrb
000351F6 <AmiBlitz3.ab3@28053>   Dc.l do_LSR                                   ;dolsrw
000351FA <AmiBlitz3.ab3@28054>   Dc.l do_LSR                                   ;dolsrl
000351FE <AmiBlitz3.ab3@28055>   Dc.l do_LSR                                   ;dolsrl
0003520A <AmiBlitz3.ab3@28056>   Ds.l 3
0003520C <AmiBlitz3.ab3@28057>   Dc.b $17,$70
0003520E <AmiBlitz3.ab3@28059>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00035212 <AmiBlitz3.ab3@28060>   Dc.l do_ASR                                   ;doasrb
00035216 <AmiBlitz3.ab3@28061>   Dc.l do_ASR                                   ;doasrw
0003521A <AmiBlitz3.ab3@28062>   Dc.l do_ASR                                   ;doasrl
0003521E <AmiBlitz3.ab3@28063>   Dc.l do_ASR                                   ;doasrl
0003522A <AmiBlitz3.ab3@28064>   Ds.l 3
0003522C <AmiBlitz3.ab3@28065>   Dc.b $17,$70
0003522E <AmiBlitz3.ab3@28067>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00035232 <AmiBlitz3.ab3@28068>   Dc.l do_mod_byte                              ;domodb
00035236 <AmiBlitz3.ab3@28069>   Dc.l do_mod_word                              ;domodw
0003523A <AmiBlitz3.ab3@28070>   Dc.l do_mod_long                              ;domodl
0003523E <AmiBlitz3.ab3@28071>   Dc.l do_mod_quick                             ;domodq
00035242 <AmiBlitz3.ab3@28072>   Dc.l do_mod_float                             ;domodf
0003524A <AmiBlitz3.ab3@28073>   Ds.l 2
0003524C <AmiBlitz3.ab3@28074>   Dc.b $13,$88
0003524E <AmiBlitz3.ab3@28077>   Dc.b $00,$5E                                  ;^
00035252 <AmiBlitz3.ab3@28078>   Dc.l do_pow                                   ;dopow
00035256 <AmiBlitz3.ab3@28079>   Dc.l do_pow                                   ;dopow
0003525A <AmiBlitz3.ab3@28080>   Dc.l do_pow                                   ;dopow
0003525E <AmiBlitz3.ab3@28081>   Dc.l do_pow                                   ;dopow
00035262 <AmiBlitz3.ab3@28082>   Dc.l do_pow                                   ;dopow
0003526A <AmiBlitz3.ab3@28083>   Ds.l 2
0003526C <AmiBlitz3.ab3@28084>   Dc.b $1B,$58                                  ;7000
0003526E <AmiBlitz3.ab3@28087>   Dc.b $00,$3D                                  ;=
00035272 <AmiBlitz3.ab3@28088>   Dc.l do_equal_byte                            ;doeqb
00035276 <AmiBlitz3.ab3@28089>   Dc.l do_equal_word                            ;doeqw
0003527A <AmiBlitz3.ab3@28090>   Dc.l do_equal_long                            ;doeql
0003527E <AmiBlitz3.ab3@28091>   Dc.l do_equal_long                            ;doeql
00035282 <AmiBlitz3.ab3@28092>   Dc.l do_equal_float                           ;doeqf
00035286 <AmiBlitz3.ab3@28093>   Dc.l do_equal_long                            ;doeql
0003528A <AmiBlitz3.ab3@28094>   Dc.l do_equal_string                          ;doeqs
0003528C <AmiBlitz3.ab3@28095>   Dc.b $07,$D0                                  ;2000
0003528E <AmiBlitz3.ab3@28098>   Dc.b $3C,$3E                                  ;<>
00035292 <AmiBlitz3.ab3@28099>   Dc.l do_not_equal_byte                        ;doneb
00035296 <AmiBlitz3.ab3@28100>   Dc.l do_not_equal_word                        ;donew
0003529A <AmiBlitz3.ab3@28101>   Dc.l do_not_equal_long                        ;donel
0003529E <AmiBlitz3.ab3@28102>   Dc.l do_not_equal_long                        ;donel
000352A2 <AmiBlitz3.ab3@28103>   Dc.l do_not_equal_float                       ;donef
000352A6 <AmiBlitz3.ab3@28104>   Dc.l do_not_equal_long                        ;donel
000352AA <AmiBlitz3.ab3@28105>   Dc.l do_not_equal_string                      ;dones
000352AC <AmiBlitz3.ab3@28106>   Dc.b $07,$D0                                  ;2000
000352AE <AmiBlitz3.ab3@28109>   Dc.b $00,$3C                                  ;<
000352B2 <AmiBlitz3.ab3@28110>   Dc.l do_littler_byte                          ;doltb
000352B6 <AmiBlitz3.ab3@28111>   Dc.l do_littler_word                          ;doltw
000352BA <AmiBlitz3.ab3@28112>   Dc.l do_littler_long                          ;doltl
000352BE <AmiBlitz3.ab3@28113>   Dc.l do_littler_long                          ;doltl
000352C2 <AmiBlitz3.ab3@28114>   Dc.l do_littler_float                         ;doltf
000352C6 <AmiBlitz3.ab3@28115>   Dc.l do_littler_long                          ;doltl
000352CA <AmiBlitz3.ab3@28116>   Dc.l do_littler_string                        ;dolts
000352CC <AmiBlitz3.ab3@28117>   Dc.b $07,$D0                                  ;2000
000352CE <AmiBlitz3.ab3@28120>   Dc.b $3C,$3D                                  ;<=
000352D2 <AmiBlitz3.ab3@28121>   Dc.l do_littler_equal_byte                    ;doleb
000352D6 <AmiBlitz3.ab3@28122>   Dc.l do_littler_equal_word                    ;doleb
000352DA <AmiBlitz3.ab3@28123>   Dc.l do_littler_equal_long                    ;dolel
000352DE <AmiBlitz3.ab3@28124>   Dc.l do_littler_equal_long                    ;dolel
000352E2 <AmiBlitz3.ab3@28125>   Dc.l do_littler_equal_float                   ;dolef
000352E6 <AmiBlitz3.ab3@28126>   Dc.l do_littler_equal_long                    ;dolel
000352EA <AmiBlitz3.ab3@28127>   Dc.l do_littler_equal_string                  ;doles
000352EC <AmiBlitz3.ab3@28128>   Dc.b $07,$D0                                  ;2000
000352EE <AmiBlitz3.ab3@28131>   Dc.b $00,$3E                                  ;>
000352F2 <AmiBlitz3.ab3@28132>   Dc.l do_greater_byte                          ;dogtb
000352F6 <AmiBlitz3.ab3@28133>   Dc.l do_greater_word                          ;dogtw
000352FA <AmiBlitz3.ab3@28134>   Dc.l do_greater_long                          ;dogtl
000352FE <AmiBlitz3.ab3@28135>   Dc.l do_greater_long                          ;dogtl
00035302 <AmiBlitz3.ab3@28136>   Dc.l do_greater_float                         ;dogtf
00035306 <AmiBlitz3.ab3@28137>   Dc.l do_greater_long                          ;dogtl
0003530A <AmiBlitz3.ab3@28138>   Dc.l do_greater_string                        ;dogts
0003530C <AmiBlitz3.ab3@28139>   Dc.b $07,$D0                                  ;2000
0003530E <AmiBlitz3.ab3@28142>   Dc.b $3E,$3D                                  ;>=
00035312 <AmiBlitz3.ab3@28143>   Dc.l do_greater_equal_byte                    ;dogeb
00035316 <AmiBlitz3.ab3@28144>   Dc.l do_greater_equal_word                    ;dogew
0003531A <AmiBlitz3.ab3@28145>   Dc.l do_greater_equal_long                    ;dogel
0003531E <AmiBlitz3.ab3@28146>   Dc.l do_greater_equal_long                    ;dogel
00035322 <AmiBlitz3.ab3@28147>   Dc.l do_greater_equal_float                   ;dogef
00035326 <AmiBlitz3.ab3@28148>   Dc.l do_greater_equal_long                    ;dogel
0003532A <AmiBlitz3.ab3@28149>   Dc.l do_greater_equal_string                  ;doges
0003532C <AmiBlitz3.ab3@28150>   Dc.b $07,$D0                                  ;2000
0003532E <AmiBlitz3.ab3@28152>   Dc.b $80,$CD                                  ;$8000+26+tnum
00035332 <AmiBlitz3.ab3@28153>   Dc.l _BitTst
00035336 <AmiBlitz3.ab3@28154>   Dc.l _BitTst
0003533A <AmiBlitz3.ab3@28155>   Dc.l _BitTst
0003533E <AmiBlitz3.ab3@28156>   Dc.l _BitTst
0003534A <AmiBlitz3.ab3@28157>   Ds.l 3
0003534C <AmiBlitz3.ab3@28158>   Dc.b $1F,$40                                  ;8000
0003534E <AmiBlitz3.ab3@28160>   Dc.b $80,$CE                                  ;$8000+27+tnum
00035352 <AmiBlitz3.ab3@28161>   Dc.l _BitSet
00035356 <AmiBlitz3.ab3@28162>   Dc.l _BitSet
0003535A <AmiBlitz3.ab3@28163>   Dc.l _BitSet
0003535E <AmiBlitz3.ab3@28164>   Dc.l _BitSet
0003536A <AmiBlitz3.ab3@28165>   Ds.l 3
0003536C <AmiBlitz3.ab3@28166>   Dc.b $1F,$40                                  ;8000
0003536E <AmiBlitz3.ab3@28168>   Dc.b $80,$CF                                  ;$8000+28+tnum
00035372 <AmiBlitz3.ab3@28169>   Dc.l _BitClr
00035376 <AmiBlitz3.ab3@28170>   Dc.l _BitClr
0003537A <AmiBlitz3.ab3@28171>   Dc.l _BitClr
0003537E <AmiBlitz3.ab3@28172>   Dc.l _BitClr
0003538A <AmiBlitz3.ab3@28173>   Ds.l 3
0003538C <AmiBlitz3.ab3@28174>   Dc.b $1F,$40                                  ;8000
0003538E <AmiBlitz3.ab3@28176>   Dc.b $80,$D0                                  ;$8000+29+tnum
00035392 <AmiBlitz3.ab3@28177>   Dc.l _BitChg
00035396 <AmiBlitz3.ab3@28178>   Dc.l _BitChg
0003539A <AmiBlitz3.ab3@28179>   Dc.l _BitChg
0003539E <AmiBlitz3.ab3@28180>   Dc.l _BitChg
000353AA <AmiBlitz3.ab3@28181>   Ds.l 3
000353AC <AmiBlitz3.ab3@28182>   Dc.b $1F,$40                                  ;8000
000353AE <AmiBlitz3.ab3@28184>   Dc.b $00,$00
000353B2 <AmiBlitz3.ab3@28189> modetable:   Dc.l typemode
000353B6 <AmiBlitz3.ab3@28192> newtypebase: Dc.l newtype_byte
000353BE <AmiBlitz3.ab3@28195>   Dc.l newtype_word,$01                                    
000353C0 <AmiBlitz3.ab3@28196>   Dc.w $0001
000353C4 <AmiBlitz3.ab3@28197>   Dc.b 13,"b",0,0
000353CC <AmiBlitz3.ab3@28200>   Dc.l newtype_long,$02
000353CE <AmiBlitz3.ab3@28201>   Dc.w $0002
000353D2 <AmiBlitz3.ab3@28202>   Dc.b 13,"w",0,0
000353DA <AmiBlitz3.ab3@28205>   Dc.l newtype_quick,$03                                   
000353DC <AmiBlitz3.ab3@28206>   Dc.w $0004
000353E0 <AmiBlitz3.ab3@28207>   Dc.b 13,"l",0,0
000353E8 <AmiBlitz3.ab3@28210>   Dc.l newtype_float,$04                                   
000353EA <AmiBlitz3.ab3@28211>   Dc.w $0004
000353EE <AmiBlitz3.ab3@28212>   Dc.b 13,"q",0,0
000353F6 <AmiBlitz3.ab3@28216>   Dc.l newtype_double,$05                                  ;make problems on old residents
000353F8 <AmiBlitz3.ab3@28217>   Dc.w $0004
000353FC <AmiBlitz3.ab3@28218>   Dc.b 13,"f",0,0
00035404 <AmiBlitz3.ab3@28221>   Dc.l newtype_double,$06
00035406 <AmiBlitz3.ab3@28222>   Dc.w $0004
0003540A <AmiBlitz3.ab3@28223>   Dc.b 13,"a",0,0
00035412 <AmiBlitz3.ab3@28226>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00035414 <AmiBlitz3.ab3@28227>   Dc.w $0008
00035418 <AmiBlitz3.ab3@28228>   Dc.b 13,"d",0,0
00035420 <AmiBlitz3.ab3@28232>   Dc.l $0000000,$07                                        ;stringtype
00035422 <AmiBlitz3.ab3@28233>   Dc.w $0004
00035426 <AmiBlitz3.ab3@28234>   Dc.b 13,"s",0,0
0003542E <AmiBlitz3.ab3@28237>   Dc.l $00,$00
00035430 <AmiBlitz3.ab3@28238>   Dc.w $0000
00035434 <AmiBlitz3.ab3@28239>   Dc.b $01,$00,$00,$00
00035494 <AmiBlitz3.ab3@28242> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00035496 <AmiBlitz3.ab3@28246> dirmode:              Ds.w 1                               ;shows if directmode is on
0003549A <AmiBlitz3.ab3@28248>                       Ds.l 1                               ;int org source ;intuition!
0003549C <AmiBlitz3.ab3@28249> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
000354A0 <AmiBlitz3.ab3@28250> maxsat:               Ds.l 1                               ;data1 info pos
000354A2 <AmiBlitz3.ab3@28251> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
000354A4 <AmiBlitz3.ab3@28253> maxsused:             Ds.w 1                               ;maximums used in prog
000354A6 <AmiBlitz3.ab3@28257> dark:                 Ds.w 1                               ;dark compile?
000354A8 <AmiBlitz3.ab3@28258> qlab:                 Ds.w 1                               ;quick lab allocate
000354AC <AmiBlitz3.ab3@28259> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
000354AE <AmiBlitz3.ab3@28264> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
000354B0 <AmiBlitz3.ab3@28265> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
000354B4 <AmiBlitz3.ab3@28266> noinits:              Ds.l 1                               ;flag for if we have any init routines!
000354B8 <AmiBlitz3.ab3@28268> letstart:             Ds.l 1
000354BA <AmiBlitz3.ab3@28269> dontwrite_nomemleft:  Ds.w 1                               ;nomemleft org source
0003553A <AmiBlitz3.ab3@28270> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
0003553E <AmiBlitz3.ab3@28272> locdatast:            Ds.l 1
00035542 <AmiBlitz3.ab3@28273> firstpend:            Ds.l 1
00035546 <AmiBlitz3.ab3@28277> data2at:              Ds.l 1
0003554A <AmiBlitz3.ab3@28278> data2:                Ds.l 1
0003554E <AmiBlitz3.ab3@28279> data1start:           Ds.l 1                               ;data1at org source
00035552 <AmiBlitz3.ab3@28280> data1:                Ds.l 1                               ;pc for initialized data!
00035556 <AmiBlitz3.ab3@28281> destbufferstart:      Ds.l 1                               ;pcat org source
0003555A <AmiBlitz3.ab3@28285> destbufferend:        Ds.l 1                               ;libat org source
0003555E <AmiBlitz3.ab3@28286> libend:               Ds.l 1                               ;lib org source
00035562 <AmiBlitz3.ab3@28287> allat:                Ds.l 1                               ;highest allocmemd location for code
0003556C <AmiBlitz3.ab3@28288> dummyasm:             Dc.w 0,0,0,0,0
00035570 <AmiBlitz3.ab3@28289>                       Dc.l 0
00035572 <AmiBlitz3.ab3@28290>                       Dc.w 0
00035576 <AmiBlitz3.ab3@28294> buff1:                Ds.l 1                               ;buffer for text get
0003557A <AmiBlitz3.ab3@28295> buff2:                Ds.l 1                               ;ditto for dest
0003557C <AmiBlitz3.ab3@28296> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
0003557E <AmiBlitz3.ab3@28297> asmtype:              Ds.w 1                               ;0=contains no prog reference
00035580 <AmiBlitz3.ab3@28298> extraword:            Ds.w 1                               ;the extension word for assembler
00035582 <AmiBlitz3.ab3@28299> extraword2:           Ds.w 1                               ;ditto
00035584 <AmiBlitz3.ab3@28300> asmsize:              Ds.w 1
00035588 <AmiBlitz3.ab3@28301> asmbuff:              Ds.l 1
0003558A <AmiBlitz3.ab3@28302> asmlen:               Ds.w 1                               ;first (src) text len
0003558C <AmiBlitz3.ab3@28303> asmlen2:              Ds.w 1                               ;second (dest)
00035590 <AmiBlitz3.ab3@28304> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00035592 <AmiBlitz3.ab3@28307> macnum:               Ds.w 1
00035596 <AmiBlitz3.ab3@28309>                       Dc.l 0                               ;address of next 0 in include fil
0003559A <AmiBlitz3.ab3@28310> titleat:              Ds.l 1                               ;5 longs for compile streaks
000355A4 <AmiBlitz3.ab3@28311> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
000355A6 <AmiBlitz3.ab3@28312> connest:              Ds.w 1                               ;conditional nest level
000355AA <AmiBlitz3.ab3@28313> firstconst:           Ds.l 1                               ;first constant (#a)
000355AC <AmiBlitz3.ab3@28314> numarg:               Ds.w 1                               ;number of macro arguements
000355B0 <AmiBlitz3.ab3@28315> myoline:              Ds.l 1                               ;macro done yet?
000355B4 <AmiBlitz3.ab3@28316> myline:               Ds.l 1                               ;pointer to some memory to create
000355B8 <AmiBlitz3.ab3@28319>                       Ds.l 1
000355F8 <AmiBlitz3.ab3@28320> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000355FC <AmiBlitz3.ab3@28321> concomsp:             Dc.l concomstack                     ;stack pointer
000355FE <AmiBlitz3.ab3@28322> oldqflag:             Ds.w 1
00035602 <AmiBlitz3.ab3@28325>                       Ds.l 1
00035604 <AmiBlitz3.ab3@28327>                       Ds.w 1
00035608 <AmiBlitz3.ab3@28328> firstfor:             Ds.l 1                               ;first for
0003560A <AmiBlitz3.ab3@28329> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
0003560C <AmiBlitz3.ab3@28330> sbgot:                Ds.w 1                               ;flag for string got 2
0003560E <AmiBlitz3.ab3@28331> convsize:             Ds.w 1                               ;usertype org source
00035610 <AmiBlitz3.ab3@28332> userp:                Ds.w 1
00035614 <AmiBlitz3.ab3@28337> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00035616 <AmiBlitz3.ab3@28338> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00035618 <AmiBlitz3.ab3@28339> numreps:              Ds.w 1                               ;number of repeats in a repeatable
0003561C <AmiBlitz3.ab3@28341> locloc:               Ds.l 1
0003561E <AmiBlitz3.ab3@28342> locchar:              Ds.w 1
0003569E <AmiBlitz3.ab3@28343> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
000356A0 <AmiBlitz3.ab3@28344> commode:              Ds.w 1                               ;in comma mode...
000356A4 <AmiBlitz3.ab3@28345> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
000356A8 <AmiBlitz3.ab3@28346> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
000356AC <AmiBlitz3.ab3@28347> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
000356AE <AmiBlitz3.ab3@28349>                       Ds.w 1                               ;opt reset offset
000357AE <AmiBlitz3.ab3@28351>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
000358AE <AmiBlitz3.ab3@28353>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
000358B0 <AmiBlitz3.ab3@28354> varcodelen:           Ds.w 1                               ;and length
000358B2 <AmiBlitz3.ab3@28356>                       Ds.w 1
000358B8 <AmiBlitz3.ab3@28357> oldvcodelen:          Ds.w 3                               ;old varcodelen
000358BC <AmiBlitz3.ab3@28361> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
000358BE <AmiBlitz3.ab3@28362> memlibstat:           Ds.w 1                               ;status of memory library during
000358C0 <AmiBlitz3.ab3@28365>                       Dc.w 0
000358C2 <AmiBlitz3.ab3@28367>                       Dc.w 0
000358C4 <AmiBlitz3.ab3@28369> varmode:              Ds.w 1                               ;0 a5 pointer to global
000358C8 <AmiBlitz3.ab3@28371> currentfunction:      Ds.l 1                               ;thisproc org source
000358CC <AmiBlitz3.ab3@28372> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
000358CE <AmiBlitz3.ab3@28373> 
000358D0 <AmiBlitz3.ab3@28375> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
000358D4 <AmiBlitz3.ab3@28376> passstack:            Ds.l 1
000358D8 <AmiBlitz3.ab3@28377> zero:                 Ds.l 1                               ;ZERO!
000358DA <AmiBlitz3.ab3@28378> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
000358DE <AmiBlitz3.ab3@28380> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
000358E2 <AmiBlitz3.ab3@28381> constantbase:         Ds.l 1                               ;firstinc org source ;first include
000358E4 <AmiBlitz3.ab3@28382> lasta6:               Dc.w $FFFF                           ;-1 org source
000358E6 <AmiBlitz3.ab3@28383> instringon:           Ds.w 1                               ;quoteflag org source
000358EA <AmiBlitz3.ab3@28384> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
000358EE <AmiBlitz3.ab3@28385> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
000358F2 <AmiBlitz3.ab3@28386> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
000358F6 <AmiBlitz3.ab3@28387> endop:                Ds.l 1                               ;end of program pc - before finishups!
000358FA <AmiBlitz3.ab3@28388> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000358FE <AmiBlitz3.ab3@28389> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00035900 <AmiBlitz3.ab3@28390> numstatic:            Ds.w 1                               ;number of static structs
00035904 <AmiBlitz3.ab3@28391> staticdata:           Ds.l 1                               ;data1 val for statics
00035908 <AmiBlitz3.ab3@28392> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
0003590A <AmiBlitz3.ab3@28393> sbasegot:             Ds.w 1                               ;string base got?
0003590E <AmiBlitz3.ab3@28394> litdata1:             Ds.l 1
00035912 <AmiBlitz3.ab3@28398> objlen:               Ds.l 1
00035916 <AmiBlitz3.ab3@28399> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
0003591A <AmiBlitz3.ab3@28400> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
0003591C <AmiBlitz3.ab3@28402> flagmask:             Ds.w 1                               ;mask for flag of variable when
0003591E <AmiBlitz3.ab3@28404> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00035920 <AmiBlitz3.ab3@28405> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00035924 <AmiBlitz3.ab3@28406> temp1:                Ds.l 1
00035928 <AmiBlitz3.ab3@28407> temp2:                Ds.l 1
0003592C <AmiBlitz3.ab3@28409> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00035930 <AmiBlitz3.ab3@28410> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
000359A4 <AmiBlitz3.ab3@28411> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
000359A8 <AmiBlitz3.ab3@28412> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00035A28 <AmiBlitz3.ab3@28414> namebuff2:            Ds.b 128
00035A30 <AmiBlitz3.ab3@28415>                       Ds.b 8                               ;for fileinfoblock
00035A70 <AmiBlitz3.ab3@28418> optstuff:             Ds.b 64                              ;temp opt make buffer
00035A72 <AmiBlitz3.ab3@28435>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00035A76 <AmiBlitz3.ab3@28436>   Dc.l xtra_versionnumber                                  ; vers org source
00035A7A <AmiBlitz3.ab3@28437>   Dc.l create_iconfile                                     ; create icon for executable
00035A7E <AmiBlitz3.ab3@28438>   Ds.l 1
00035A80 <AmiBlitz3.ab3@28440>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00035A84 <AmiBlitz3.ab3@28443>   Dc.l set_use_debugger
00035A88 <AmiBlitz3.ab3@28444>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00035A8C <AmiBlitz3.ab3@28445>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00035A90 <AmiBlitz3.ab3@28446>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00035A94 <AmiBlitz3.ab3@28447>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00035A98 <AmiBlitz3.ab3@28448>   Dc.l set_make_smallestcode
00035A9C <AmiBlitz3.ab3@28449>   Dc.l set_link_debuginfo
00035AA0 <AmiBlitz3.ab3@28450>   Dc.l set_autorun
00035AA4 <AmiBlitz3.ab3@28451>   Dc.l set_interruptcheck
00035AA8 <AmiBlitz3.ab3@28452>   Dc.l set_assemblercheck
00035AAC <AmiBlitz3.ab3@28454>   Dc.l set_overflowcheck
00035AB0 <AmiBlitz3.ab3@28455>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00035AB4 <AmiBlitz3.ab3@28456>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00035AB8 <AmiBlitz3.ab3@28457>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035ABC <AmiBlitz3.ab3@28460>   Ds.l 1
00035ABE <AmiBlitz3.ab3@28462>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00035AC2 <AmiBlitz3.ab3@28469>   Dc.l objectbuffer
00035AC6 <AmiBlitz3.ab3@28470>   Dc.l libsbuffer
00035ACA <AmiBlitz3.ab3@28471>   Dc.l systembuffer
00035ACE <AmiBlitz3.ab3@28472>   Dc.l databuffer
00035AD2 <AmiBlitz3.ab3@28473>   Dc.l macrobuffer_size
00035AD6 <AmiBlitz3.ab3@28474>   Dc.l stringbuffer
00035ADA <AmiBlitz3.ab3@28477>   Ds.l 1
00035ADC <AmiBlitz3.ab3@28481>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035AE4 <AmiBlitz3.ab3@28482>   Dc.l residents_table,0
00035AE6 <AmiBlitz3.ab3@28486>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00035AEE <AmiBlitz3.ab3@28487>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00035AF0 <AmiBlitz3.ab3@28488>   Ds.w 1
00035BEC <AmiBlitz3.ab3@28492>   Ds.l 63
00035CE8 <AmiBlitz3.ab3@28493>   Ds.l 63
00035DE4 <AmiBlitz3.ab3@28494>   Ds.l 63
00035EC6 <AmiBlitz3.ab3@28495>   Ds.w 113
00035EC8 <AmiBlitz3.ab3@28498> comsettings_message:  Ds.w 1                               ;allchg org source
00035ECA <AmiBlitz3.ab3@28499> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035ED0 <AmiBlitz3.ab3@28503>   CLR.b exefilename
00035ED2 <AmiBlitz3.ab3@28504>   TST.l d0
00035ED6 <AmiBlitz3.ab3@28505>   BNE 'l10
00035ED8 <AmiBlitz3.ab3@28506>  RTS
00035EDE <AmiBlitz3.ab3@28509>   JSR free_residents                                       ;jsr freeres2 org source
00035EE4 <AmiBlitz3.ab3@28510> 
00035EEA <AmiBlitz3.ab3@28511> 
00035EF0 <AmiBlitz3.ab3@28512>   LEA ptr_xtradata,A2
00035EF2 <AmiBlitz3.ab3@28513>   MOVEQ.l #$00,D4
00035EF4 <AmiBlitz3.ab3@28516>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035EF8 <AmiBlitz3.ab3@28517>     BEQ.b 'done
00035EFA <AmiBlitz3.ab3@28520>     MOVE.l (A2)+,D2
00035EFE <AmiBlitz3.ab3@28521>   BEQ.b 'loop
00035F00 <AmiBlitz3.ab3@28523>   MOVE.l D4,D3
00035F02 <AmiBlitz3.ab3@28524>   MOVE.l D7,D1
00035F06 <AmiBlitz3.ab3@28525>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035F08 <AmiBlitz3.ab3@28526>   TST.l D0
00035F0C <AmiBlitz3.ab3@28527>   BNE.b 'loop2
00035F10 <AmiBlitz3.ab3@28528>  BRA.w 'done2
00035F16 <AmiBlitz3.ab3@28531>   TST.b xtra_versionnumber
00035F1A <AmiBlitz3.ab3@28532>    BNE.b 'nover0
00035F22 <AmiBlitz3.ab3@28533>   MOVE.w #$0080,set_autorun                                ;auto run on
00035F2C <AmiBlitz3.ab3@28534>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035F32 <AmiBlitz3.ab3@28535>   CLR.w set_assemblercheck                                 ;assembler checking off
00035F3C <AmiBlitz3.ab3@28536>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035F40 <AmiBlitz3.ab3@28537>  BRA.b 'ver0
00035F42 <AmiBlitz3.ab3@28540>   MOVE.l D7,D1                                             ;load cli arg!
00035F48 <AmiBlitz3.ab3@28541>   MOVE.l #str_cliarguments,D2
00035F4E <AmiBlitz3.ab3@28542>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035F52 <AmiBlitz3.ab3@28543>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035F58 <AmiBlitz3.ab3@28544>   MOVE.l #str_cliarguments,A0
00035F5E <AmiBlitz3.ab3@28545>   ADDA.l #115,A0
00035F64 <AmiBlitz3.ab3@28546>   MOVE.l #0,(a0) ; terminate it!
00035F66 <AmiBlitz3.ab3@28548>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00035F6C <AmiBlitz3.ab3@28549>   MOVE.l #stacksize,D2
00035F72 <AmiBlitz3.ab3@28550>   MOVE.l #4,D3
00035F76 <AmiBlitz3.ab3@28551>   JSR _Read(A6)
00035F80 <AmiBlitz3.ab3@28552>   CMP.l ##MIN_STACKSIZE,stacksize
00035F84 <AmiBlitz3.ab3@28553>   BGE 'stackok
00035F8E <AmiBlitz3.ab3@28554>   MOVE.l ##MIN_STACKSIZE,stacksize
00035F90 <AmiBlitz3.ab3@28557>   MOVE.l D7,D1
00035F96 <AmiBlitz3.ab3@28558>   MOVE.l #versioninformation,D2
00035F9C <AmiBlitz3.ab3@28559>   MOVE.l #4,D3
00035FA0 <AmiBlitz3.ab3@28560>   JSR _Read(A6)
00035FA2 <AmiBlitz3.ab3@28562>   MOVE.l D7,D1
00035FA8 <AmiBlitz3.ab3@28563>   MOVE.l #number_of_builds,D2
00035FAE <AmiBlitz3.ab3@28564>   MOVE.l #4,D3
00035FB2 <AmiBlitz3.ab3@28565>   JSR _Read(A6)
00035FB8 <AmiBlitz3.ab3@28571> 
00035FBE <AmiBlitz3.ab3@28572>   MOVE.l A7,errstack
00035FC8 <AmiBlitz3.ab3@28573>   MOVE.l #'done2,errcont
00035FD0 <AmiBlitz3.ab3@28574>   MOVE.w #$FFFF,ezerr
00035FD6 <AmiBlitz3.ab3@28577>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035FD8 <AmiBlitz3.ab3@28578>     MOVEQ.l #$04,D3
00035FDA <AmiBlitz3.ab3@28579>     MOVE.l D7,D1
00035FDE <AmiBlitz3.ab3@28580>     JSR _Read(A6)
00035FE0 <AmiBlitz3.ab3@28581>     TST.l D0
00035FE4 <AmiBlitz3.ab3@28582>     BEQ.b 'done2
00035FEA <AmiBlitz3.ab3@28583>     MOVE.w temp1,D1
00035FEC <AmiBlitz3.ab3@28584>     TST.w d1                                               ;new
00035FF0 <AmiBlitz3.ab3@28585>     BEQ 'done2                                         ;new
00035FF6 <AmiBlitz3.ab3@28586>      JSR findlibnoerr
00035FFC <AmiBlitz3.ab3@28588>     CMP.l #0,a1
00036000 <AmiBlitz3.ab3@28589>     BEQ 'dloop
00036004 <AmiBlitz3.ab3@28590>     MOVE.l $12(A1),D0
0003600C <AmiBlitz3.ab3@28591>     MOVE.w temp1+2,-$4(A1,D0.L)
00036010 <AmiBlitz3.ab3@28592>  BRA.b 'dloop
00036014 <AmiBlitz3.ab3@28598>   LEA residents_table(PC),A0
00036016 <AmiBlitz3.ab3@28599>   MOVEQ.l #$07,D0
0003601A <AmiBlitz3.ab3@28602>     CLR.l $40(A0)
0003601E <AmiBlitz3.ab3@28603>     LEA ResidentEntryStep(A0),A0   ; $44
00036022 <AmiBlitz3.ab3@28604>   DBF D0,'loop3
00036026 <AmiBlitz3.ab3@28606>   MOVEM.l D7/A6,-(A7)
0003602C <AmiBlitz3.ab3@28607>   JSR init_buffers
00036032 <AmiBlitz3.ab3@28608>   JSR reloadresident
00036036 <AmiBlitz3.ab3@28609>   MOVEM.l (A7)+,D7/A6
00036038 <AmiBlitz3.ab3@28610> RTS
00036040 <AmiBlitz3.ab3@28614>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00036046 <AmiBlitz3.ab3@28623>   LEA ptr_xtradata,A2
00036048 <AmiBlitz3.ab3@28624>   MOVEQ.l #$00,D4
0003604A <AmiBlitz3.ab3@28628>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
0003604E <AmiBlitz3.ab3@28629>   BEQ.b 'done
00036050 <AmiBlitz3.ab3@28632>    MOVE.l (A2)+,D2
00036054 <AmiBlitz3.ab3@28633>    BEQ.b 'loop
00036056 <AmiBlitz3.ab3@28635>    MOVE.l D4,D3
00036058 <AmiBlitz3.ab3@28636>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
0003605C <AmiBlitz3.ab3@28637>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00036060 <AmiBlitz3.ab3@28638>  BRA.b 'loop2
00036062 <AmiBlitz3.ab3@28641>   MOVE.l D7,D1
00036068 <AmiBlitz3.ab3@28642>   MOVE.l #str_cliarguments,D2
0003606E <AmiBlitz3.ab3@28643>   MOVE.l #116,D3
00036072 <AmiBlitz3.ab3@28644>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00036074 <AmiBlitz3.ab3@28646>   MOVE.l D7,D1
0003607A <AmiBlitz3.ab3@28647>   MOVE.l #stacksize,D2
00036080 <AmiBlitz3.ab3@28648>   MOVE.l #4,D3
00036084 <AmiBlitz3.ab3@28649>   JSR _Write(A6)
00036086 <AmiBlitz3.ab3@28651>   MOVE.l D7,D1
0003608C <AmiBlitz3.ab3@28652>   MOVE.l #versioninformation,D2
00036092 <AmiBlitz3.ab3@28653>   MOVE.l #4,D3
00036096 <AmiBlitz3.ab3@28654>   JSR _Write(A6)
00036098 <AmiBlitz3.ab3@28656>   MOVE.l D7,D1
0003609E <AmiBlitz3.ab3@28657>   MOVE.l #number_of_builds,D2
000360A4 <AmiBlitz3.ab3@28658>   MOVE.l #4,D3
000360A8 <AmiBlitz3.ab3@28659>   JSR _Write(A6)
000360AE <AmiBlitz3.ab3@28665>   LEA libpointer,A2
000360B0 <AmiBlitz3.ab3@28668>     MOVE.l (A2),D0
000360B4 <AmiBlitz3.ab3@28669>     BEQ.w 'done2
000360B6 <AmiBlitz3.ab3@28670>     MOVEA.l D0,A2
000360BA <AmiBlitz3.ab3@28671>     MOVE.l $12(A2),D4
000360BE <AmiBlitz3.ab3@28672>     TST.w -$2(A2,D4.L)
000360C2 <AmiBlitz3.ab3@28673>     BEQ.w 'loop3
000360C6 <AmiBlitz3.ab3@28675>     LEA $4(A2),A0
000360C8 <AmiBlitz3.ab3@28676>     MOVE.l A0,D2
000360CA <AmiBlitz3.ab3@28677>     MOVEQ.l #$02,D3
000360CC <AmiBlitz3.ab3@28678>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
000360D0 <AmiBlitz3.ab3@28679>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000360D4 <AmiBlitz3.ab3@28681>     LEA -$4(A2,D4.L),A0
000360D6 <AmiBlitz3.ab3@28682>     MOVE.l A0,D2
000360D8 <AmiBlitz3.ab3@28683>     MOVEQ.l #$02,D3
000360DA <AmiBlitz3.ab3@28684>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
000360DE <AmiBlitz3.ab3@28685>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000360E2 <AmiBlitz3.ab3@28686>  BRA.w 'loop3
000360E8 <AmiBlitz3.ab3@28691>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
000360EA <AmiBlitz3.ab3@28692>   MOVE.l A2,D2           ; move the address to d2
000360F0 <AmiBlitz3.ab3@28693>   MOVE.l #4,D3           ; we only need 4 bytes to save
000360F2 <AmiBlitz3.ab3@28694>   MOVE.l D7,D1           ; we set the file handle
000360F6 <AmiBlitz3.ab3@28695>   JSR _Write(A6)         ; and we write it.
000360F8 <AmiBlitz3.ab3@28697> RTS
000360FE <AmiBlitz3.ab3@28702>   LEA optssave,A0                      ; backup address
00036104 <AmiBlitz3.ab3@28703>   LEA ptr_xtradata,A1                  ; source address
00036106 <AmiBlitz3.ab3@28706>   MOVE.w (A1)+,D0                                          ;length of data move
0003610A <AmiBlitz3.ab3@28707>   BEQ.b 'backupdone
0003610C <AmiBlitz3.ab3@28708>   SUBQ.w #1,D0
0003610E <AmiBlitz3.ab3@28711>     MOVE.l (A1)+,D1
00036112 <AmiBlitz3.ab3@28712>     BEQ.b 'backuploop
00036114 <AmiBlitz3.ab3@28713>     MOVEA.l D1,A2
00036116 <AmiBlitz3.ab3@28714>     MOVE.w D0,D1
00036118 <AmiBlitz3.ab3@28717>       MOVE.b (A2)+,(A0)+
0003611C <AmiBlitz3.ab3@28718>   DBF D1,'backuploop3
00036120 <AmiBlitz3.ab3@28720>  BRA.w 'backuploop2
00036126 <AmiBlitz3.ab3@28724>   LEA bufferlist,A1
00036128 <AmiBlitz3.ab3@28727>     MOVE.l (A1)+,D2
0003612C <AmiBlitz3.ab3@28728>     BEQ.b 'loop4done
0003612E <AmiBlitz3.ab3@28730>     MOVEA.l D2,A0
00036130 <AmiBlitz3.ab3@28731>     MOVE.l (A0),D2
00036132 <AmiBlitz3.ab3@28732>     ADDQ.w #8,A0
00036138 <AmiBlitz3.ab3@28733>     JSR makelong
0003613C <AmiBlitz3.ab3@28734>  BRA.b 'loop4
00036142 <AmiBlitz3.ab3@28737>   CLR.w state_of_residents                                 ;resident change
00036148 <AmiBlitz3.ab3@28738>   CLR.w comsettings_message                                ;alloc change
0003614E <AmiBlitz3.ab3@28739>   CLR.w maxobject_pos
00036150 <AmiBlitz3.ab3@28740> RTS   ; new tomsmart1
00036156 <AmiBlitz3.ab3@28744>   LEA optssave,A0
0003615C <AmiBlitz3.ab3@28745>   LEA ptr_xtradata,A1
0003615E <AmiBlitz3.ab3@28748>   MOVE.w (A1)+,D0
00036162 <AmiBlitz3.ab3@28749>   BEQ.b 'restoredone
00036164 <AmiBlitz3.ab3@28750>   SUBQ.w #1,D0
00036166 <AmiBlitz3.ab3@28753>     MOVE.l (A1)+,D1
0003616A <AmiBlitz3.ab3@28754>     BEQ.b 'restoreloop1
0003616C <AmiBlitz3.ab3@28755>     MOVEA.l D1,A2
0003616E <AmiBlitz3.ab3@28756>     MOVE.w D0,D1
00036170 <AmiBlitz3.ab3@28759>       MOVE.b (A0)+,(A2)+
00036174 <AmiBlitz3.ab3@28760>   DBF D1,'restoreloop3
00036178 <AmiBlitz3.ab3@28762>  BRA.b 'restoreloop2
0003617A <AmiBlitz3.ab3@28765> RTS
00036180 <AmiBlitz3.ab3@28769>   JSR free_residents                    ; first free the allready loaded residents
00036186 <AmiBlitz3.ab3@28770>   JSR Clear_Residents_table             ; second clear the complete resident table
00036188 <AmiBlitz3.ab3@28771> RTS
0003618E <AmiBlitz3.ab3@28775>   JSR clear_lastcompileerrordatas       ; added to fix problems if a residents load error happend  tomsmart1 2016 02 02
00036196 <AmiBlitz3.ab3@28776>   MOVE.w #$FFFF,state_of_residents
0003619C <AmiBlitz3.ab3@28777>   MOVE.w state_of_residents,D0
000361A2 <AmiBlitz3.ab3@28778>   JSR reloadresident
000361A4 <AmiBlitz3.ab3@28779> RTS
000361A6 <AmiBlitz3.ab3@28785>   MOVE.l d0,a1
000361AC <AmiBlitz3.ab3@28787>   MOVEA.l libpointer,A2
000361B0 <AmiBlitz3.ab3@28790>     MOVE.l $12(A2),D0
000361B4 <AmiBlitz3.ab3@28791>     TST.w -$2(A2,D0.L)
000361B8 <AmiBlitz3.ab3@28792>      BEQ.w 'next
000361BA <AmiBlitz3.ab3@28793>     SUBQ.w #1,D1
000361BE <AmiBlitz3.ab3@28794>      BPL.w 'next
000361C2 <AmiBlitz3.ab3@28796>     MOVEA.l -$1A(A2,D0.L),A3    ;token offset
000361C4 <AmiBlitz3.ab3@28797>     ADDA.l A2,A3
000361C6 <AmiBlitz3.ab3@28800>       MOVE.b (A3)+,(A1)+
000361CA <AmiBlitz3.ab3@28801>     BNE.w 'tt1
000361CC <AmiBlitz3.ab3@28803>     CLR.b -(A1)
000361D0 <AmiBlitz3.ab3@28805>     MOVE.w -$4(A2,D0.L),D0
000361D6 <AmiBlitz3.ab3@28807>     AND.l #$ffff,d0
000361D8 <AmiBlitz3.ab3@28808>  RTS
000361DA <AmiBlitz3.ab3@28812>     MOVEA.l (A2),A2
000361DE <AmiBlitz3.ab3@28813> BRA.w 'loop
000361EE <AmiBlitz3.ab3@28818> str_maxobjects_name:   Dc.b "              ",0 : Even
000361FE <AmiBlitz3.ab3@28819> str_maxobjects_name2:  Dc.b "              ",0 : Even
00036202 <AmiBlitz3.ab3@28820> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
00036206 <AmiBlitz3.ab3@28821>                        Dc.l $00000000
00036212 <AmiBlitz3.ab3@28822> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00036216 <AmiBlitz3.ab3@28824> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
0003621A <AmiBlitz3.ab3@28825>                        Dc.l $00000000
00036226 <AmiBlitz3.ab3@28826> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
0003622A <AmiBlitz3.ab3@28828> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
0003622E <AmiBlitz3.ab3@28829>                        Dc.l $00000000
0003623A <AmiBlitz3.ab3@28830> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003623E <AmiBlitz3.ab3@28832> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00036242 <AmiBlitz3.ab3@28833>                        Dc.l $00000000
0003624E <AmiBlitz3.ab3@28834> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00036252 <AmiBlitz3.ab3@28836> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00036256 <AmiBlitz3.ab3@28837>                        Dc.l $00000000
00036262 <AmiBlitz3.ab3@28838> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00036266 <AmiBlitz3.ab3@28840> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
0003626A <AmiBlitz3.ab3@28841>                        Dc.l $00000000
00036276 <AmiBlitz3.ab3@28842> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00036278 <AmiBlitz3.ab3@28844> maxobjects_value:      Dc.w $0064
0003627C <AmiBlitz3.ab3@28845>                        Dc.l $00000000
00036288 <AmiBlitz3.ab3@28846> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
0003628A <AmiBlitz3.ab3@28848> maxobjects_value2:     Dc.w $0014
0003628C <AmiBlitz3.ab3@28849>                        Dc.w $0000
00036298 <AmiBlitz3.ab3@28851> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00036299 <AmiBlitz3.ab3@28855> set_create_iconfile:   Dc.b $00
0003629C <AmiBlitz3.ab3@28856> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0003629E <AmiBlitz3.ab3@28857>                        Dc.b $00,$01
0003629F <AmiBlitz3.ab3@28859> set_use_debugger:      Dc.b $00                            ; Flags.w
000362A2 <AmiBlitz3.ab3@28860> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
000362A4 <AmiBlitz3.ab3@28861>                        Dc.b $00,$01                        ; GadgetType.w
000362A8 <AmiBlitz3.ab3@28862> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
000362AC <AmiBlitz3.ab3@28863> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
000362B0 <AmiBlitz3.ab3@28864> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
000362B2 <AmiBlitz3.ab3@28865> AL_0_11094:            Ds.w 1
000362B3 <AmiBlitz3.ab3@28867> set_make_smallestcode: Ds.b 1
000362B6 <AmiBlitz3.ab3@28868> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
000362B8 <AmiBlitz3.ab3@28869>                        Dc.b $00,$01
000362B9 <AmiBlitz3.ab3@28870> set_link_debuginfo:    Ds.b 1
000362BC <AmiBlitz3.ab3@28871> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
000362BE <AmiBlitz3.ab3@28872>                        Dc.b $00,$01
000364DE <AmiBlitz3.ab3@28877>   Ds.l 136         ;resident files STEP $44 piece 8
0003655E <AmiBlitz3.ab3@28882> str_calcexpression:        Ds.l 32
00036562 <AmiBlitz3.ab3@28883> destbufferend_backup_calc: Ds.l 1             ; was calclibat
0003656C <AmiBlitz3.ab3@28891>   MOVE.l destbufferend,destbufferend_backup_calc
00036572 <AmiBlitz3.ab3@28893> 
00036578 <AmiBlitz3.ab3@28895>   MOVE.l A7,errstack
00036582 <AmiBlitz3.ab3@28896>   MOVE.l #Calc_Error_Exit,errcont
000365AC <AmiBlitz3.ab3@28904>   !basic         ; get the flage for the conversion form the editor
000365F0 <AmiBlitz3.ab3@28905>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00036634 <AmiBlitz3.ab3@28906>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00036652 <AmiBlitz3.ab3@28907>   !asm
00036658 <AmiBlitz3.ab3@28910>   LEA str_calcexpression,A0
0003665E <AmiBlitz3.ab3@28918>   JSR setcvars
00036664 <AmiBlitz3.ab3@28919>   JSR setsvars
0003666A <AmiBlitz3.ab3@28921>   CLR.w connest             ;no idea...
00036670 <AmiBlitz3.ab3@28922>   LEA str_calcexpression,A5
00036676 <AmiBlitz3.ab3@28923>   JSR evalconst3            ;evaluate constant
0003667C <AmiBlitz3.ab3@28925>   LEA str_calcexpression,A0
0003667E <AmiBlitz3.ab3@28926>   TST.l D3
00036682 <AmiBlitz3.ab3@28927>    BPL.w 'ispos
00036686 <AmiBlitz3.ab3@28928>   MOVE.b #$2D,(A0)+         ;'-'
00036688 <AmiBlitz3.ab3@28929>   NEG.l D3
00036690 <AmiBlitz3.ab3@28932>   CMPI.w #$80,CalculatorButtonDecFlag
00036694 <AmiBlitz3.ab3@28933>    BEQ.w 'dec
00036696 <AmiBlitz3.ab3@28934>   MOVEQ.l #$00,D1
0003669E <AmiBlitz3.ab3@28935>   CMPI.w #$80,CalculatorButtonBinFlag
000366A2 <AmiBlitz3.ab3@28936>    BNE.w 'hex
000366A4 <AmiBlitz3.ab3@28939>   MOVEQ.l #$1F,D0
000366A8 <AmiBlitz3.ab3@28940>   MOVE.b #$25,(A0)+      ;'%'
000366AA <AmiBlitz3.ab3@28943>       LSL.l #1,D3
000366AE <AmiBlitz3.ab3@28944>        BCC.w 'bzero
000366B2 <AmiBlitz3.ab3@28945>       MOVE.b #"1",(A0)+
000366B4 <AmiBlitz3.ab3@28946>       MOVEQ.l #-$01,D1
000366B8 <AmiBlitz3.ab3@28947>   BRA.w 'bnext
000366BA <AmiBlitz3.ab3@28950>       TST.w D1
000366BE <AmiBlitz3.ab3@28951>       BEQ.w 'bnext
000366C2 <AmiBlitz3.ab3@28952>       MOVE.b #"0",(A0)+
000366C6 <AmiBlitz3.ab3@28955>  DBF D0,'bloop
000366C8 <AmiBlitz3.ab3@28958>   TST.w D1
000366CC <AmiBlitz3.ab3@28959>   BNE.w 'pc1
000366D0 <AmiBlitz3.ab3@28960>   MOVE.b #"0",(A0)+
000366D2 <AmiBlitz3.ab3@28963>   CLR.b (A0)
000366D6 <AmiBlitz3.ab3@28964>  BRA.w 'pc
000366D8 <AmiBlitz3.ab3@28967>   MOVEQ.l #$07,D0
000366DC <AmiBlitz3.ab3@28968>   MOVE.b #$24,(A0)+  ;'$'
000366DE <AmiBlitz3.ab3@28971>     MOVE.l D3,D2
000366E0 <AmiBlitz3.ab3@28972>     SWAP D2
000366E2 <AmiBlitz3.ab3@28973>     LSR.w #8,D2
000366E4 <AmiBlitz3.ab3@28974>     LSR.w #4,D2
000366E8 <AmiBlitz3.ab3@28975>     ADDI.w #$30,D2
000366EC <AmiBlitz3.ab3@28976>     CMP.w #$3A,D2
000366F0 <AmiBlitz3.ab3@28977>      BCS.w 'hok
000366F2 <AmiBlitz3.ab3@28978>     ADDQ.w #7,D2
000366F6 <AmiBlitz3.ab3@28981>     CMP.w #$30,D2
000366FA <AmiBlitz3.ab3@28982>     BEQ.w 'hzero
000366FC <AmiBlitz3.ab3@28983>     MOVE.b D2,(A0)+
000366FE <AmiBlitz3.ab3@28984>     MOVEQ.l #-$01,D1
00036702 <AmiBlitz3.ab3@28985>   BRA.w 'hnext
00036704 <AmiBlitz3.ab3@28988>     TST.w D1
00036708 <AmiBlitz3.ab3@28989>      BEQ.w 'hnext
0003670A <AmiBlitz3.ab3@28990>     MOVE.b D2,(A0)+
0003670C <AmiBlitz3.ab3@28993>     LSL.l #4,D3
00036710 <AmiBlitz3.ab3@28994>  DBF D0,'hloop
00036714 <AmiBlitz3.ab3@28996>  BRA.w 'bdone
00036716 <AmiBlitz3.ab3@28999>   MOVE.l D3,D2
0003671C <AmiBlitz3.ab3@29000>   JSR makelong          ;to long...
00036726 <AmiBlitz3.ab3@29007>   MOVE.l destbufferend_backup_calc,destbufferend
00036728 <AmiBlitz3.ab3@29009> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00036827 <AmiBlitz3.ab3@29013> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00036828 <AmiBlitz3.ab3@29015> Even
0003682A <AmiBlitz3.ab3@29033>     MOVE.b (a5)+,d0
0003682E <AmiBlitz3.ab3@29034>     BEQ 'l2
00036832 <AmiBlitz3.ab3@29035>     CMP.b #$80,d0
00036836 <AmiBlitz3.ab3@29036>     BNE 'l1
00036838 <AmiBlitz3.ab3@29037>     MOVE.b (a5)+,d0
0003683C <AmiBlitz3.ab3@29038>     BEQ 'l2
00036840 <AmiBlitz3.ab3@29039>     CMP.b #$02,d0
00036844 <AmiBlitz3.ab3@29040>   BNE 'l1
00036848 <AmiBlitz3.ab3@29043>     CMP.b #$20,(a5)+
0003684C <AmiBlitz3.ab3@29044>   BEQ 'l3
0003684E <AmiBlitz3.ab3@29045>   SUBQ.l #1,a5
00036850 <AmiBlitz3.ab3@29046>   TST.b (a5)
00036854 <AmiBlitz3.ab3@29047>   BEQ 'l2
00036858 <AmiBlitz3.ab3@29048>   CMP.w #$8008,(a5)
0003685C <AmiBlitz3.ab3@29049>   BEQ 'l4
00036860 <AmiBlitz3.ab3@29050>   CMP.w #$8009,(a5)
00036864 <AmiBlitz3.ab3@29051>   BEQ 'l4
00036868 <AmiBlitz3.ab3@29052>  BRA 'l1
0003686A <AmiBlitz3.ab3@29055>   ADDQ.l #2,a5
00036870 <AmiBlitz3.ab3@29056>   JSR skiprest
00036872 <AmiBlitz3.ab3@29057> RTS
00036878 <AmiBlitz3.ab3@29060>   JSR nextline
0003687C <AmiBlitz3.ab3@29061>   BNE 'l1
0003687E <AmiBlitz3.ab3@29062> RTS
000368A8 <AmiBlitz3.ab3@29066>   !basic
000368B2 <AmiBlitz3.ab3@29067>   DateFormat 1
000368C0 <AmiBlitz3.ab3@29068>   i.l=SystemDate
000368E6 <AmiBlitz3.ab3@29069>   a$=Date$ (i)
00036964 <AmiBlitz3.ab3@29070>   a$=Replace$(a$,"/",".")
0003696A <AmiBlitz3.ab3@29071>   GetD0 &a$
0003696C <AmiBlitz3.ab3@29072>   MOVEQ #8,d2
0003696E <AmiBlitz3.ab3@29073>   MOVE.l d0,a0
00036970 <AmiBlitz3.ab3@29076>     MOVE.b (a0)+,d1
00036976 <AmiBlitz3.ab3@29077>     JSR pokedata1b
0003697A <AmiBlitz3.ab3@29078>  DBF d2,'l1
0003697C <AmiBlitz3.ab3@29080>   MOVEQ #0,d0
0003697E <AmiBlitz3.ab3@29081>   MOVE.b (a0)+,d0
0003699C <AmiBlitz3.ab3@29082>   !asm
000369A2 <AmiBlitz3.ab3@29083>   ADD.l #9,d2
000369A8 <AmiBlitz3.ab3@29084>   ADD.l #9,a5
000369AA <AmiBlitz3.ab3@29085> RTS
000369D4 <AmiBlitz3.ab3@29089>   !basic
000369DE <AmiBlitz3.ab3@29090>   DateFormat 0
000369EC <AmiBlitz3.ab3@29091>   i.l=SystemDate
00036A12 <AmiBlitz3.ab3@29092>   a$=Date$ (i)
00036A90 <AmiBlitz3.ab3@29093>   a$=Replace$(a$,"/",".")
00036A96 <AmiBlitz3.ab3@29094>   GetD0 &a$
00036A98 <AmiBlitz3.ab3@29095>   MOVEQ #8,d2
00036A9A <AmiBlitz3.ab3@29096>   MOVE.l d0,a0
00036A9C <AmiBlitz3.ab3@29099>     MOVE.b (a0)+,d1
00036AA2 <AmiBlitz3.ab3@29100>     JSR pokedata1b
00036AA6 <AmiBlitz3.ab3@29101>  DBF d2,'l1
00036AA8 <AmiBlitz3.ab3@29103>   MOVEQ #0,d0
00036AAA <AmiBlitz3.ab3@29104>   MOVE.b (a0)+,d0
00036AC8 <AmiBlitz3.ab3@29105>   !asm
00036ACE <AmiBlitz3.ab3@29106>   ADD.l #9,d2
00036AD4 <AmiBlitz3.ab3@29107>   ADD.l #13,a5
00036AD6 <AmiBlitz3.ab3@29108> RTS
00036B00 <AmiBlitz3.ab3@29112>   !basic
00036B0A <AmiBlitz3.ab3@29113>   DateFormat 1
00036B18 <AmiBlitz3.ab3@29114>   i.l = SystemDate
00036B3E <AmiBlitz3.ab3@29115>   a$ = Date$ (i)
00036BBC <AmiBlitz3.ab3@29116>   a$ = Replace$(a$,"/",".")
00036BC2 <AmiBlitz3.ab3@29117>   GetD0 &a$
00036BC4 <AmiBlitz3.ab3@29118>   MOVEQ #8,d2
00036BC6 <AmiBlitz3.ab3@29119>   MOVE.l d0,a0
00036BC8 <AmiBlitz3.ab3@29122>     MOVE.b (a0)+,d1
00036BCE <AmiBlitz3.ab3@29123>     JSR writebyte
00036BD2 <AmiBlitz3.ab3@29124>  DBF d2,'l1
00036BD4 <AmiBlitz3.ab3@29126>   MOVEQ #0,d0
00036BD6 <AmiBlitz3.ab3@29127>   MOVE.b (a0)+,d0
00036BF4 <AmiBlitz3.ab3@29128>   !asm
00036BFA <AmiBlitz3.ab3@29129>   ADD.l #9,a5
00036BFC <AmiBlitz3.ab3@29130> RTS
00036C26 <AmiBlitz3.ab3@29134>   !basic
00036C30 <AmiBlitz3.ab3@29135>   DateFormat 0
00036C3E <AmiBlitz3.ab3@29136>   i.l=SystemDate
00036C64 <AmiBlitz3.ab3@29137>   a$=Date$ (i)
00036CE2 <AmiBlitz3.ab3@29138>   a$=Replace$(a$,"/",".")
00036CE8 <AmiBlitz3.ab3@29139>   GetD0 &a$
00036CEA <AmiBlitz3.ab3@29140>   MOVEQ #8,d2
00036CEC <AmiBlitz3.ab3@29141>   MOVE.l d0,a0
00036CEE <AmiBlitz3.ab3@29144>     MOVE.b (a0)+,d1
00036CF4 <AmiBlitz3.ab3@29145>     JSR writebyte
00036CF8 <AmiBlitz3.ab3@29146>  DBF d2,'l1
00036CFA <AmiBlitz3.ab3@29148>   MOVEQ #0,d0
00036CFC <AmiBlitz3.ab3@29149>   MOVE.b (a0)+,d0
00036D1A <AmiBlitz3.ab3@29150>   !asm
00036D20 <AmiBlitz3.ab3@29151>   ADD.l #13,a5
00036D22 <AmiBlitz3.ab3@29152> RTS
00036D24 <AmiBlitz3.ab3@29156>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036D26 <AmiBlitz3.ab3@29157>   MOVE.l a5,d0
00036D50 <AmiBlitz3.ab3@29158>   !basic
00036D54 <AmiBlitz3.ab3@29159>   _myD0.l = PutD0
00036D5E <AmiBlitz3.ab3@29160>   If _myD0
00036DA4 <AmiBlitz3.ab3@29161>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036DF6 <AmiBlitz3.ab3@29162>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036DFC <AmiBlitz3.ab3@29163>   Else
00036E36 <AmiBlitz3.ab3@29164>     error{"INTERNAL: Invalid pointer in version_string!"}
00036E46 <AmiBlitz3.ab3@29169>   actual_version.l = Peek.l(?versioninformation)
00036E56 <AmiBlitz3.ab3@29170>   actual_build.l   = Peek.l(?number_of_builds)
00036E7A <AmiBlitz3.ab3@29172>   Format "00"
00036EB0 <AmiBlitz3.ab3@29173>   Select verstring$
00036ED4 <AmiBlitz3.ab3@29175>     Case "VER_MAJOR"
00036F10 <AmiBlitz3.ab3@29176>      put_versionstr$ = Str$(actual_version LSR 24)
00036F3A <AmiBlitz3.ab3@29178>     Case "VER_MINOR"
00036F7E <AmiBlitz3.ab3@29179>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036FA8 <AmiBlitz3.ab3@29181>     Case "VER_PATCH"
00036FEC <AmiBlitz3.ab3@29182>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00037016 <AmiBlitz3.ab3@29184>     Case "VER_BUILD"
0003703A <AmiBlitz3.ab3@29185>      Format ""
0003706E <AmiBlitz3.ab3@29186>      put_versionstr$ = Str$(actual_build)
00037074 <AmiBlitz3.ab3@29188>     Default
0003709C <AmiBlitz3.ab3@29189>      put_versionstr$ = "{unknown compilerconstant}"
000370AA <AmiBlitz3.ab3@29192>   End Select
000370CE <AmiBlitz3.ab3@29193>   Format ""
000370DE <AmiBlitz3.ab3@29195>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
000370E0 <AmiBlitz3.ab3@29196>   MOVE.l d0,d2
000370E2 <AmiBlitz3.ab3@29197>   MOVE.l d2,-(a7)
000370E6 <AmiBlitz3.ab3@29198>   SUB #1,d2
000370EC <AmiBlitz3.ab3@29200>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000370EE <AmiBlitz3.ab3@29201>   MOVE.l d0,a0
000370F0 <AmiBlitz3.ab3@29204>     MOVE.b (a0)+,d1
000370F6 <AmiBlitz3.ab3@29205>     JSR pokedata1b
000370FA <AmiBlitz3.ab3@29206>  DBF d2,'l1
000370FC <AmiBlitz3.ab3@29208>   MOVEQ #0,d0
0003711A <AmiBlitz3.ab3@29209>   !asm
0003711C <AmiBlitz3.ab3@29210>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003711E <AmiBlitz3.ab3@29211>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00037120 <AmiBlitz3.ab3@29212>   ADD.l d0,d2
00037126 <AmiBlitz3.ab3@29213>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00037128 <AmiBlitz3.ab3@29214>   MOVEQ #0,d0
0003712A <AmiBlitz3.ab3@29215> RTS
0003712C <AmiBlitz3.ab3@29219>   MOVE.l a5,d0
00037156 <AmiBlitz3.ab3@29220>   !basic
0003715A <AmiBlitz3.ab3@29221>   _myD0.l = PutD0
00037164 <AmiBlitz3.ab3@29222>   If _myD0
000371AA <AmiBlitz3.ab3@29223>     verstring$ = Left$(Peek.s(_myD0),9+3)
000371FC <AmiBlitz3.ab3@29224>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00037202 <AmiBlitz3.ab3@29225>   Else
0003723C <AmiBlitz3.ab3@29226>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
0003724C <AmiBlitz3.ab3@29231>   actual_version.l = Peek.l(?versioninformation)
0003725C <AmiBlitz3.ab3@29232>   actual_build.l   = Peek.l(?number_of_builds)
00037280 <AmiBlitz3.ab3@29234>   Format ""
000372B6 <AmiBlitz3.ab3@29235>   Select verstring$
000372DA <AmiBlitz3.ab3@29237>     Case "VER_MAJOR"
00037316 <AmiBlitz3.ab3@29238>      put_versionstr$ = Str$(actual_version LSR 24)
00037340 <AmiBlitz3.ab3@29240>     Case "VER_MINOR"
00037384 <AmiBlitz3.ab3@29241>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000373AE <AmiBlitz3.ab3@29243>     Case "VER_PATCH"
000373F2 <AmiBlitz3.ab3@29244>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003741C <AmiBlitz3.ab3@29246>     Case "VER_BUILD"
00037440 <AmiBlitz3.ab3@29247>      Format ""
00037474 <AmiBlitz3.ab3@29248>      put_versionstr$ = Str$(actual_build)
0003747A <AmiBlitz3.ab3@29250>     Default
000374A2 <AmiBlitz3.ab3@29251>      put_versionstr$ = "{unknown compilerconstant}"
000374B0 <AmiBlitz3.ab3@29253>   End Select
000374D4 <AmiBlitz3.ab3@29254>   Format ""
000374EA <AmiBlitz3.ab3@29256>   GetD0 FLen(put_versionstr$)-1
000374EC <AmiBlitz3.ab3@29257>   MOVE.l d0,d2
000374F2 <AmiBlitz3.ab3@29259>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000374F4 <AmiBlitz3.ab3@29260>   MOVE.l d0,a0
000374F6 <AmiBlitz3.ab3@29263>     MOVE.b (a0)+,d1
000374FC <AmiBlitz3.ab3@29264>     JSR writebyte
00037500 <AmiBlitz3.ab3@29265>  DBF d2,'l1
00037502 <AmiBlitz3.ab3@29267>   MOVEQ #0,d0
00037504 <AmiBlitz3.ab3@29268>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00037522 <AmiBlitz3.ab3@29269>   !asm
00037528 <AmiBlitz3.ab3@29270>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003752A <AmiBlitz3.ab3@29271> RTS
0003752C <AmiBlitz3.ab3@29373>   MOVE.l a5,-(a7)
00037558 <AmiBlitz3.ab3@29374>   !fget
0003755C <AmiBlitz3.ab3@29375>   CMP.w #".",d0
00037560 <AmiBlitz3.ab3@29376>   BNE 'skip
00037564 <AmiBlitz3.ab3@29377>   MOVEM.l a2/d2,-(a7)
0003756A <AmiBlitz3.ab3@29378>   LEA newtypebase,a2
00037570 <AmiBlitz3.ab3@29379>   JSR getparameter2
00037574 <AmiBlitz3.ab3@29380>   BEQ.w JUMP_syntaxerr
0003757A <AmiBlitz3.ab3@29381>   JSR findtype
0003757E <AmiBlitz3.ab3@29382>   BNE.w JUMP_notypeerr2
00037584 <AmiBlitz3.ab3@29383>   MOVE.l a2,typetocast
00037588 <AmiBlitz3.ab3@29384>   MOVEM.l (a7)+,a2/d2
0003758C <AmiBlitz3.ab3@29385>   CMP.w #")",d0
00037590 <AmiBlitz3.ab3@29386>   BNE JUMP_errorbracketmiss
00037592 <AmiBlitz3.ab3@29387>   ADDQ.l #4,a7
000375BE <AmiBlitz3.ab3@29388>   !fget
000375C4 <AmiBlitz3.ab3@29389>   JMP nocast
000375C6 <AmiBlitz3.ab3@29392>   MOVE.l (a7)+,a5
000375CC <AmiBlitz3.ab3@29393> JMP bracket
000375D2 <AmiBlitz3.ab3@29396> JUMP_errorbracketmiss JMP errorbracketmiss
000375FC <AmiBlitz3.ab3@29399> Function.l ab3_GetIncludeLock{filename.s}
0003761C <AmiBlitz3.ab3@29400>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00037674 <AmiBlitz3.ab3@29401>   ex.s       = dos_GetExt{filename}
00037688 <AmiBlitz3.ab3@29403>   If incLock = False
000376FC <AmiBlitz3.ab3@29404>     filename = dos_SetExt{filename,"ab3"}
0003771C <AmiBlitz3.ab3@29405>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00037730 <AmiBlitz3.ab3@29408>   If incLock = False
000377A4 <AmiBlitz3.ab3@29409>     filename = dos_SetExt{filename,"ab2"}
000377C4 <AmiBlitz3.ab3@29410>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000377D8 <AmiBlitz3.ab3@29413>   If incLock = False
0003784C <AmiBlitz3.ab3@29414>     filename = dos_SetExt{filename,"bb2"}
0003786C <AmiBlitz3.ab3@29415>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00037880 <AmiBlitz3.ab3@29418>   If incLock = False
00037912 <AmiBlitz3.ab3@29419>     filename = dos_SetExt{filename,ex+".ab3"}
00037932 <AmiBlitz3.ab3@29420>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00037946 <AmiBlitz3.ab3@29423>   If incLock = False
000379BA <AmiBlitz3.ab3@29424>     filename = dos_SetExt{filename,"ab2"}
000379DA <AmiBlitz3.ab3@29425>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
000379EE <AmiBlitz3.ab3@29428>   If incLock = False
00037A62 <AmiBlitz3.ab3@29429>     filename = dos_SetExt{filename,"bb2"}
00037A82 <AmiBlitz3.ab3@29430>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00037A8C <AmiBlitz3.ab3@29433>  Function Return incLock
00037AA6 <AmiBlitz3.ab3@29434> End Function
00037AD0 <AmiBlitz3.ab3@29438>   !basic
00037AFA <AmiBlitz3.ab3@29439>   incString.s = Peek$(?ptr_parameterstore)
00037B28 <AmiBlitz3.ab3@29441>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037B2C <AmiBlitz3.ab3@29442>   incDirP.l   = PutD0                                       ;    "
00037B54 <AmiBlitz3.ab3@29443>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037BD4 <AmiBlitz3.ab3@29444>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037C06 <AmiBlitz3.ab3@29445>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00037C1A <AmiBlitz3.ab3@29447>   If incLock = False ; not found => check default Include Directory
00037C2A <AmiBlitz3.ab3@29448>     incDirP.l = Peek.l(?incd)
00037C34 <AmiBlitz3.ab3@29449>     If incDirP
00037C5C <AmiBlitz3.ab3@29450>       incDir_.s = Peek.s(incDirP)
00037C62 <AmiBlitz3.ab3@29451>     Else
00037CCC <AmiBlitz3.ab3@29452>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037D4C <AmiBlitz3.ab3@29454>     incFile.s = dos_AddPart{incDir_,incString}
00037D7E <AmiBlitz3.ab3@29455>     incLock.l = ab3_GetIncludeLock{incFile}
00037D92 <AmiBlitz3.ab3@29458>   If incLock = False ; not found => check relative to current source
00037DAA <AmiBlitz3.ab3@29459>     incDepth.l = Peek.w(?ininclude)-1
00037DD0 <AmiBlitz3.ab3@29460>     If incDepth >= 0 AND incDepth < #maxincludes
00037E30 <AmiBlitz3.ab3@29461>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037EB0 <AmiBlitz3.ab3@29462>       incFile.s = dos_AddPart{incDir_,incString}
00037EE2 <AmiBlitz3.ab3@29463>       incLock.l = ab3_GetIncludeLock{incFile}
00037EF6 <AmiBlitz3.ab3@29467>   If incLock = False ; still not found => check default Include Directory and name only
00037F06 <AmiBlitz3.ab3@29468>     incDirP.l = Peek.l(?incd)
00037F10 <AmiBlitz3.ab3@29469>     If incDirP
00037F38 <AmiBlitz3.ab3@29470>       incDir_.s = Peek.s(incDirP)
00037F3E <AmiBlitz3.ab3@29471>     Else
00037FA8 <AmiBlitz3.ab3@29472>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00038056 <AmiBlitz3.ab3@29474>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00038088 <AmiBlitz3.ab3@29475>     incLock.l = ab3_GetIncludeLock{incFile}
00038092 <AmiBlitz3.ab3@29478>   If incLock
000380A8 <AmiBlitz3.ab3@29479>     MaxLen incFile = 1024
000380CC <AmiBlitz3.ab3@29480>     NameFromLock_ incLock,&incFile,1024
000380F6 <AmiBlitz3.ab3@29481>     incFile = Peek.s(&incFile)
0003812E <AmiBlitz3.ab3@29482>     Poke$ ?ptr_parameterstore,incFile
00038142 <AmiBlitz3.ab3@29483>     i = FLen(incFile)
0003814E <AmiBlitz3.ab3@29484>     GetReg d0,i
00038154 <AmiBlitz3.ab3@29485>     MOVE.l d0,tempstore
00038164 <AmiBlitz3.ab3@29486>     UnLock_ incLock
00038182 <AmiBlitz3.ab3@29489>   !asm
00038188 <AmiBlitz3.ab3@29490>   TST.l tempstore
0003818C <AmiBlitz3.ab3@29491>    BEQ 'l1
00038192 <AmiBlitz3.ab3@29492>   MOVE.l tempstore,d2
00038194 <AmiBlitz3.ab3@29495> RTS
000381BE <AmiBlitz3.ab3@29499>   !basic
000381E8 <AmiBlitz3.ab3@29500>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00038216 <AmiBlitz3.ab3@29501>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003821A <AmiBlitz3.ab3@29502>   incDirP.l   = PutD0                                       ;    "
00038242 <AmiBlitz3.ab3@29503>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000382C2 <AmiBlitz3.ab3@29504>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000382E2 <AmiBlitz3.ab3@29505>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000382F6 <AmiBlitz3.ab3@29507>   If incLock = False                                        ; not found => try orignal string only to find
00038316 <AmiBlitz3.ab3@29508>     incLock.l = Lock_(&incString,#ACCESS_READ)
00038320 <AmiBlitz3.ab3@29511>   If incLock                                                ; found => store full path
00038336 <AmiBlitz3.ab3@29512>     MaxLen incFile = 1024
0003835A <AmiBlitz3.ab3@29513>     NameFromLock_ incLock,&incFile,1024
00038384 <AmiBlitz3.ab3@29514>     incFile = Peek.s(&incFile)
000383BC <AmiBlitz3.ab3@29515>     Poke$ ?ptr_parameterstore,incFile
000383C8 <AmiBlitz3.ab3@29518> 
000383E6 <AmiBlitz3.ab3@29519>   !asm
000383E8 <AmiBlitz3.ab3@29520> RTS
000383EE <AmiBlitz3.ab3@29531>   JSR Aclearallvars
000383F4 <AmiBlitz3.ab3@29532>   JSR free_unusedfunctions
000383FE <AmiBlitz3.ab3@29547>   MOVE.l #"NORE",reqmode
00038404 <AmiBlitz3.ab3@29548> JSR handle_compileerror
00038406 <AmiBlitz3.ab3@29551>   MOVE.l d0,-(a7)
00038408 <AmiBlitz3.ab3@29552>   MOVE.l a5,d0
00038412 <AmiBlitz3.ab3@29553>   !basica7
00038416 <AmiBlitz3.ab3@29554>   i.l = PutD0
00038420 <AmiBlitz3.ab3@29555>   If i
00038448 <AmiBlitz3.ab3@29556>     a$ = Peek$(i)
0003847A <AmiBlitz3.ab3@29557>     b$ = Peeks$(i-7,7)
000385B2 <AmiBlitz3.ab3@29559> 
000385B8 <AmiBlitz3.ab3@29560>     MOVE.l d0,result
000385BC <AmiBlitz3.ab3@29562>   !asma7
000385BE <AmiBlitz3.ab3@29563>   MOVE.l (a7)+,d0
000385C0 <AmiBlitz3.ab3@29564> RTS
000385EA <AmiBlitz3.ab3@29568>   !basic
00038618 <AmiBlitz3.ab3@29569>   !ComData_LEA{comStr_CurrentDir,D0}
0003861C <AmiBlitz3.ab3@29570>   currentDirP.l = PutD0
0003864A <AmiBlitz3.ab3@29572>   !ComData_LEA{comStr_SourceName,D0}
0003864E <AmiBlitz3.ab3@29573>   fileNameP.l = PutD0
00038676 <AmiBlitz3.ab3@29575>   check_dirname$  = Peek$(currentDirP)
0003869E <AmiBlitz3.ab3@29576>   check_filename$ = Peek$(fileNameP)
00038724 <AmiBlitz3.ab3@29577>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
0003872A <AmiBlitz3.ab3@29578>     JSR free_unusedfunctions
00038774 <AmiBlitz3.ab3@29580>   olddirname$ = Peek$(check_dirname$)
000387BE <AmiBlitz3.ab3@29581>   oldfilename$ = Peek$(check_filename$)
000387E8 <AmiBlitz3.ab3@29582>   For i = 0 To #maxincludes-1
000387FC <AmiBlitz3.ab3@29583>     incline(i) = 0
0003880C <AmiBlitz3.ab3@29584>   Next
0003882A <AmiBlitz3.ab3@29585>   !asm
0003882C <AmiBlitz3.ab3@29586> RTS
0003882E <AmiBlitz3.ab3@29590>   MOVEQ #0,d1
00038830 <AmiBlitz3.ab3@29593>   MOVE.b (a5)+,d0
00038834 <AmiBlitz3.ab3@29594>   BEQ 'er1
00038838 <AmiBlitz3.ab3@29595>   CMP.b #$20,d0
0003883C <AmiBlitz3.ab3@29596>   BEQ 'l1
0003883E <AmiBlitz3.ab3@29597>   ADDQ #1,d1
00038842 <AmiBlitz3.ab3@29598>   CMP.b #$22,d0
00038846 <AmiBlitz3.ab3@29599>   BNE 'l1
00038848 <AmiBlitz3.ab3@29600>  RTS
0003884E <AmiBlitz3.ab3@29603> JMP syntaxerr
00038872 <AmiBlitz3.ab3@29607> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00038890 <AmiBlitz3.ab3@29608> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00038896 <AmiBlitz3.ab3@29613>   TST.b exdebug
0003889A <AmiBlitz3.ab3@29614>   BNE 'l10
000388A0 <AmiBlitz3.ab3@29615>   MOVE.l #$4e71,d1
000388A6 <AmiBlitz3.ab3@29616>   JSR writeword
000388AC <AmiBlitz3.ab3@29617>   MOVE.l destpointer,d0
000388AE <AmiBlitz3.ab3@29618>   MOVE.l d0,d1
000388B0 <AmiBlitz3.ab3@29619>   ADDQ.l #3,d1
000388B6 <AmiBlitz3.ab3@29620>   AND.l #$fffffffc,d1
000388BC <AmiBlitz3.ab3@29621>   MOVE.l d1,destpointer
000388C2 <AmiBlitz3.ab3@29622>   SUB.l destpointer,d0
000388C6 <AmiBlitz3.ab3@29623>   BEQ 'lnf1
000388D0 <AmiBlitz3.ab3@29624>   CMP.l #-1,bssstart
000388D4 <AmiBlitz3.ab3@29625>   BNE 'lnf1
000388DE <AmiBlitz3.ab3@29626>   CMP.l #-1,chipstart
000388E2 <AmiBlitz3.ab3@29627>   BNE 'lnf1
000388E8 <AmiBlitz3.ab3@29628>   MOVE.l destpointer,a4
000388EE <AmiBlitz3.ab3@29629>   TST.w dontwrite_nomemleft
000388F2 <AmiBlitz3.ab3@29630>   BNE 'lnf1
000388F8 <AmiBlitz3.ab3@29631>   MOVE.w #$4e71,-2(a4)
00038902 <AmiBlitz3.ab3@29634>   CMP.l #-1,bssstart
00038906 <AmiBlitz3.ab3@29635>   BEQ 'l11
0003890C <AmiBlitz3.ab3@29636>   MOVE.l #erro1t,-(a7)
00038912 <AmiBlitz3.ab3@29637>  JMP handle_compileerror
0003891C <AmiBlitz3.ab3@29640>   MOVE.l destpointer,bssstart
00038924 <AmiBlitz3.ab3@29641>   MOVE.b #1,bssmode
0003892A <AmiBlitz3.ab3@29644>   TST.b chipmode
0003892E <AmiBlitz3.ab3@29645>   BEQ 'l10
00038938 <AmiBlitz3.ab3@29646>   MOVE.l destpointer,chipend
0003893E <AmiBlitz3.ab3@29647>   CLR.b chipmode
00038944 <AmiBlitz3.ab3@29650>   JSR get1bytemain
00038946 <AmiBlitz3.ab3@29651> RTS
0003894C <AmiBlitz3.ab3@29655>    TST.b exdebug
00038950 <AmiBlitz3.ab3@29656>   BNE 'x1
00038956 <AmiBlitz3.ab3@29657>   MOVE.l destpointer,d0
0003895C <AmiBlitz3.ab3@29658>   MOVE.l d0,realbssend
00038962 <AmiBlitz3.ab3@29659>   MOVE.l #$4e71,d1
00038968 <AmiBlitz3.ab3@29660>   JSR writeword
0003896E <AmiBlitz3.ab3@29661>   MOVE.l destpointer,d0
00038970 <AmiBlitz3.ab3@29662>   MOVE.l d0,d1
00038972 <AmiBlitz3.ab3@29663>   ADDQ.l #3,d1
00038978 <AmiBlitz3.ab3@29664>   AND.l #$fffffffc,d1
0003897E <AmiBlitz3.ab3@29665>   MOVE.l d1,destpointer
00038984 <AmiBlitz3.ab3@29666>   SUB.l destpointer,d0
00038988 <AmiBlitz3.ab3@29667>   BEQ 'lnf1
0003898E <AmiBlitz3.ab3@29668>   MOVE.l destpointer,a4
00038998 <AmiBlitz3.ab3@29669>   CMP.l #-1,bssstart
0003899C <AmiBlitz3.ab3@29670>   BNE 'lnf1
000389A6 <AmiBlitz3.ab3@29671>   CMP.l #-1,chipstart
000389AA <AmiBlitz3.ab3@29672>   BNE 'lnf1
000389B0 <AmiBlitz3.ab3@29673>   TST.w dontwrite_nomemleft
000389B4 <AmiBlitz3.ab3@29674>   BNE 'lnf1
000389BA <AmiBlitz3.ab3@29675>   MOVE.w #$4e71,-2(a4)
000389C0 <AmiBlitz3.ab3@29678>   TST.b bssmode
000389C4 <AmiBlitz3.ab3@29679>   BEQ 'l10
000389CE <AmiBlitz3.ab3@29680>   MOVE.l destpointer,bssend
000389D4 <AmiBlitz3.ab3@29681>   CLR.b bssmode
000389DE <AmiBlitz3.ab3@29686>   CMP.l #-1,chipstart
000389E2 <AmiBlitz3.ab3@29687>   BEQ 'l11
000389E8 <AmiBlitz3.ab3@29688>   MOVE.l #erro1t,-(a7)
000389EE <AmiBlitz3.ab3@29689>  JMP handle_compileerror
000389F8 <AmiBlitz3.ab3@29692>   MOVE.l destpointer,chipstart
00038A00 <AmiBlitz3.ab3@29693>   MOVE.b #1,chipmode
00038A06 <AmiBlitz3.ab3@29696>   JSR get1bytemain
00038A08 <AmiBlitz3.ab3@29697> RTS
00038A32 <AmiBlitz3.ab3@29701>   !basic
00038A44 <AmiBlitz3.ab3@29711>   i.l = Peek.w(?ininclude)
00038A6A <AmiBlitz3.ab3@29712>   If i>=0 AND i<#maxincludes
00038A9C <AmiBlitz3.ab3@29713>     incdim (i) = Peek.s(?includetemp2)
00038AB6 <AmiBlitz3.ab3@29714>     incline(i) = Peek.l(?includeline)
00038AC0 <AmiBlitz3.ab3@29716>     If CLIMode
00038B6E <AmiBlitz3.ab3@29717>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00038B8C <AmiBlitz3.ab3@29721>   !asm
00038B8E <AmiBlitz3.ab3@29722> RTS
00038BB8 <AmiBlitz3.ab3@29726>   !basic
00038BCA <AmiBlitz3.ab3@29727>   i.l = Peek.w(?ininclude)
00038BF0 <AmiBlitz3.ab3@29728>   If i>=0 AND i<#maxincludes
00038C20 <AmiBlitz3.ab3@29729>     incdim (i) = ""
00038C34 <AmiBlitz3.ab3@29730>     incline(i) = 0
00038C6C <AmiBlitz3.ab3@29731>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00038C8A <AmiBlitz3.ab3@29733>   !asm
00038C8C <AmiBlitz3.ab3@29734> RTS
00038C92 <AmiBlitz3.ab3@29738>   LEA replacedat,a0
00038C96 <AmiBlitz3.ab3@29739>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038C98 <AmiBlitz3.ab3@29740> RTS
00038C9E <AmiBlitz3.ab3@29744>   TST.b fpu
00038CA2 <AmiBlitz3.ab3@29745>   BEQ 'l1
00038CAC <AmiBlitz3.ab3@29748>   MOVE.l destpointer,newinitaddr
00038CB2 <AmiBlitz3.ab3@29749>   JSR writeword
00038CB8 <AmiBlitz3.ab3@29750>   JSR writelong
00038CBA <AmiBlitz3.ab3@29751> RTS
00038CBC <AmiBlitz3.ab3@29756>   TST.b (a5)
00038CC0 <AmiBlitz3.ab3@29757>    BEQ.s 'll20
00038CC4 <AmiBlitz3.ab3@29758>   CMP.b #$20,(a5)
00038CC8 <AmiBlitz3.ab3@29759>    BNE.s 'll10
00038CCA <AmiBlitz3.ab3@29760>   ADDQ.l #1,a5
00038CCE <AmiBlitz3.ab3@29761>  BRA.s 'll21
00038CD2 <AmiBlitz3.ab3@29764>   CMP.b #";",(a5)
00038CD6 <AmiBlitz3.ab3@29765>   BNE.s 'll20
00038CD8 <AmiBlitz3.ab3@29768>   TST.b (a5)+
00038CDC <AmiBlitz3.ab3@29769>   BEQ.s 'll23
00038CE0 <AmiBlitz3.ab3@29770>  BRA.s 'll25
00038CE2 <AmiBlitz3.ab3@29773>   SUBQ.l #1,a5
00038CE4 <AmiBlitz3.ab3@29776> RTS
00038CE8 <AmiBlitz3.ab3@29780>   MOVEM.l a2/d2,-(a7)
00038CEA <AmiBlitz3.ab3@29781>   MOVEQ #0,d2
00038CF0 <AmiBlitz3.ab3@29782>   LEA ptr_parameterstore,a0
00038CF6 <AmiBlitz3.ab3@29783>   LEA chartab,a2
00038CF8 <AmiBlitz3.ab3@29786>   MOVE.b (a5),d0
00038CFC <AmiBlitz3.ab3@29787>   TST.b 0(a2,d0)
00038D00 <AmiBlitz3.ab3@29788>   BNE 'l10
00038D02 <AmiBlitz3.ab3@29789>   ADDQ.l #1,a5
00038D04 <AmiBlitz3.ab3@29790>   MOVE.b d0,(a0)+
00038D06 <AmiBlitz3.ab3@29791>   ADDQ.l #1,d2
00038D0A <AmiBlitz3.ab3@29792>  BRA fc2
00038D0C <AmiBlitz3.ab3@29795>   CLR.b (a0)+
00038D12 <AmiBlitz3.ab3@29796>   JSR findlabel2
00038D14 <AmiBlitz3.ab3@29797>   MOVE.l a2,a0
00038D18 <AmiBlitz3.ab3@29798>   MOVEM.l (a7)+,a2/d2
00038D1A <AmiBlitz3.ab3@29799> RTS
00038D1C <AmiBlitz3.ab3@29803>   TST.l d0
00038D20 <AmiBlitz3.ab3@29804>   BNE 'l10
00038D26 <AmiBlitz3.ab3@29805>     MOVE.l #syntax_,-(a7)
00038D2C <AmiBlitz3.ab3@29806>  JMP handle_compileerror
00038D32 <AmiBlitz3.ab3@29809>   CMP.l #1,d0
00038D36 <AmiBlitz3.ab3@29810>   BNE 'l20
00038D3C <AmiBlitz3.ab3@29811>     MOVE.l #overflow,-(a7)
00038D42 <AmiBlitz3.ab3@29812>  JMP handle_compileerror
00038D44 <AmiBlitz3.ab3@29815>   ADD.l a2,d0
00038D46 <AmiBlitz3.ab3@29816>   MOVE.l d0,-(a7)
00038D4C <AmiBlitz3.ab3@29817> JMP handle_compileerror
00038D52 <AmiBlitz3.ab3@29821>   JMP _return
00038D58 <AmiBlitz3.ab3@29822>   JMP _return
00038D5E <AmiBlitz3.ab3@29823>   JMP _return
00038D64 <AmiBlitz3.ab3@29824>   JMP _return
00038D6A <AmiBlitz3.ab3@29825>   JMP _return
00038D70 <AmiBlitz3.ab3@29826>   JMP _return
00038D76 <AmiBlitz3.ab3@29827>   JMP _return
00038D7C <AmiBlitz3.ab3@29828>   JMP _return
00038D82 <AmiBlitz3.ab3@29829>   JMP _return
00038D88 <AmiBlitz3.ab3@29830>   JMP _return
00038D8E <AmiBlitz3.ab3@29831>   JMP Atokejsr
00038D94 <AmiBlitz3.ab3@29832>   JMP writeinit
00038D9A <AmiBlitz3.ab3@29833>   JMP macroexecute
00038DA0 <AmiBlitz3.ab3@29834>   JMP findnext
00038DA6 <AmiBlitz3.ab3@29835>   JMP replacelib
00038DAC <AmiBlitz3.ab3@29836>   JMP findconstant2
00038DB2 <AmiBlitz3.ab3@29837>   JMP findchar                                             ;char in d1
00038DB8 <AmiBlitz3.ab3@29838>   JMP stripspaces
00038DBE <AmiBlitz3.ab3@29839>   JMP calc                                                 ;d0 varmode
00038DC4 <AmiBlitz3.ab3@29840>   JMP error
00038DCA <AmiBlitz3.ab3@29841>   JMP writelong                                            ;d1 value
00038DD0 <AmiBlitz3.ab3@29842>   JMP writeword                                            ;d1 value
00038DD6 <AmiBlitz3.ab3@29843>   JMP writebyte                                            ;d1 value
00038DDC <AmiBlitz3.ab3@29844> JMP exit
00038DE0 <AmiBlitz3.ab3@29848>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00038DE2 <AmiBlitz3.ab3@29851>   fast            Dc.w 0
00038DE4 <AmiBlitz3.ab3@29852>   fpu             Dc.w 0
00038DE6 <AmiBlitz3.ab3@29853>   newsyntax       Dc.w 0
00038DE7 <AmiBlitz3.ab3@29855>   optistring      Dc.b 0
00038DE8 <AmiBlitz3.ab3@29856>   optistring2     Dc.b 0
00038DE9 <AmiBlitz3.ab3@29857>   optiarray       Dc.b 0
00038DEA <AmiBlitz3.ab3@29858>   quickadd        Dc.b 0
00038DEC <AmiBlitz3.ab3@29859>   newmode         Dc.w 0
00038DEE <AmiBlitz3.ab3@29860>   mode            Dc.w 0
00038DF0 <AmiBlitz3.ab3@29861>   string1         Dc.w 0
00038DF2 <AmiBlitz3.ab3@29862>   load_var_size   Dc.w 0
00038DF4 <AmiBlitz3.ab3@29863>   load_var_reg    Dc.w 0
00038DF8 <AmiBlitz3.ab3@29864>   load_var_addr   Dc.l 0
00038DFA <AmiBlitz3.ab3@29865>   imm_size        Dc.w 0
00038DFC <AmiBlitz3.ab3@29866>   imm_reg         Dc.w 0
00038E00 <AmiBlitz3.ab3@29867>   imm_addr        Dc.l 0
00038E01 <AmiBlitz3.ab3@29868>   iee             Dc.b 0
00038E02 <AmiBlitz3.ab3@29869>   _dcb            Dc.b 0
00038E06 <AmiBlitz3.ab3@29870>   nohunkoffset    Dc.l 0
00038E0A <AmiBlitz3.ab3@29873> teddata:        Dc.l tokens
00038E0E <AmiBlitz3.ab3@29874>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038E12 <AmiBlitz3.ab3@29875>                 Dc.l read_xtrafile
00038E16 <AmiBlitz3.ab3@29876>                 Dc.l write_xtrafile
00038E1A <AmiBlitz3.ab3@29877>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038E1E <AmiBlitz3.ab3@29878>                 Dc.l 0
00038E22 <AmiBlitz3.ab3@29879>                 Dc.b ":",34,".;"
00038E26 <AmiBlitz3.ab3@29880>                 Dc.l "NEW1"
00038E2A <AmiBlitz3.ab3@29881>                 Dc.l newtypebase
00038E2E <AmiBlitz3.ab3@29882> realconstbase:  Dc.l labelbase
00038E32 <AmiBlitz3.ab3@29883> deflib          Dc.l 0
00038E36 <AmiBlitz3.ab3@29884> incd            Dc.l 0
00038E3A <AmiBlitz3.ab3@29885>                 Dc.l 0
00038E3E <AmiBlitz3.ab3@29886>                 Dc.l 0
00038E42 <AmiBlitz3.ab3@29887>                 Dc.l 0
00038E44 <AmiBlitz3.ab3@29888> _return         RTS
00038E45 <AmiBlitz3.ab3@29889>                 Dc.b 0
00039245 <AmiBlitz3.ab3@29890> chartab2        Ds.l 256
00039249 <AmiBlitz3.ab3@29891> codeend         Dc.l 0
0003924D <AmiBlitz3.ab3@29892> hunkoffsetnum   Dc.l 0
00039251 <AmiBlitz3.ab3@29893> chipsize        Dc.l 0
00039255 <AmiBlitz3.ab3@29894> bsssize         Dc.l 0
00039259 <AmiBlitz3.ab3@29895> bssstart        Dc.l -1
0003925D <AmiBlitz3.ab3@29896> bssend          Dc.l -1
00039261 <AmiBlitz3.ab3@29897> chipstart       Dc.l -1
00039265 <AmiBlitz3.ab3@29898> chipend         Dc.l -1
00039266 <AmiBlitz3.ab3@29899> bssmode         Dc.b 0
00039267 <AmiBlitz3.ab3@29900> chipmode        Dc.b 0
00039268 <AmiBlitz3.ab3@29901> newhunk         Dc.b 0
0003926C <AmiBlitz3.ab3@29902> bssnum          Dc.l 0
00039270 <AmiBlitz3.ab3@29903> chipnum         Dc.l 0
00039274 <AmiBlitz3.ab3@29904> lastinstruction Dc.l 0
00039278 <AmiBlitz3.ab3@29905> lastinstructionaddr Dc.l 0
0003928C <AmiBlitz3.ab3@29906> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00039290 <AmiBlitz3.ab3@29907> tstsize1b:      Ds.l 1
00039294 <AmiBlitz3.ab3@29908> bsssize2        Dc.l 1
00039298 <AmiBlitz3.ab3@29909>                 Dc.l $03E9
0003929C <AmiBlitz3.ab3@29910> tstsize2b:      Dc.l $100
000392B0 <AmiBlitz3.ab3@29911> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
000392B4 <AmiBlitz3.ab3@29912> tstsize1c:      Ds.l 1
000392B8 <AmiBlitz3.ab3@29913> bsssize3        Dc.l 1
000392BC <AmiBlitz3.ab3@29914> chipsize2       Dc.l 1
000392C0 <AmiBlitz3.ab3@29915>                 Dc.l $3e9
000392C4 <AmiBlitz3.ab3@29916> tstsize2c       Dc.l 0
000392D4 <AmiBlitz3.ab3@29917> hunkend         Dc.l $3f2,$3eb,0,$3f2
000392E4 <AmiBlitz3.ab3@29918> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000392EB <AmiBlitz3.ab3@29919> strcpy          Dc.b "strcpy",0
000392F2 <AmiBlitz3.ab3@29920> strcmp          Dc.b "strcmp",0
000392F9 <AmiBlitz3.ab3@29921> strvar          Dc.b "strvar",0
000392FE <AmiBlitz3.ab3@29922> qmul            Dc.b "qmul",0
00039303 <AmiBlitz3.ab3@29923> qdiv            Dc.b "qdiv",0
0003930A <AmiBlitz3.ab3@29924> _MaxLen         Dc.b "maxlen",0
0003930F <AmiBlitz3.ab3@29925> notf            Dc.b "????",0
00039332 <AmiBlitz3.ab3@29927> errtext         Dc.b "only reg addressing Mode supported",0
0003935C <AmiBlitz3.ab3@29928> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0003939E <AmiBlitz3.ab3@29929> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
000393A0 <AmiBlitz3.ab3@29930> peeksize        Dc.w 0
000393A4 <AmiBlitz3.ab3@29932> mainstart       Dc.l 0
000393A5 <AmiBlitz3.ab3@29934> infunctioncode  Dc.b 0
000393A7 <AmiBlitz3.ab3@29935> regnumstore     Dc.w 0
000393D4 <AmiBlitz3.ab3@29936>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000393DC <AmiBlitz3.ab3@29937> testcode        Dc.b "print i",0
00039440 <AmiBlitz3.ab3@29938>                 Ds.b 100
0003944E <AmiBlitz3.ab3@29939> devo            Dc.b "developobject",0 : Even
00039460 <AmiBlitz3.ab3@29940> autostorename   Dc.b "__autoconstantnum",0
0003946A <AmiBlitz3.ab3@29941> _include        Dc.b "__include",0
00039472 <AmiBlitz3.ab3@29942> _debug          Dc.b "__debug",0
00039476 <AmiBlitz3.ab3@29943> unusedfunc      Dc.l 0
00039478 <AmiBlitz3.ab3@29947>   MOVE.l a0,d0
000394A2 <AmiBlitz3.ab3@29948>   !basic
000394A6 <AmiBlitz3.ab3@29949>   *olderror.l= PutD0
00039500 <AmiBlitz3.ab3@29950> 
00039534 <AmiBlitz3.ab3@29951>   error_type$ = error$    ; needed for stdout_error
000395D0 <AmiBlitz3.ab3@29952> 
000395E4 <AmiBlitz3.ab3@29953>   If Peek.l (?beforeparameterfetch)
000395FA <AmiBlitz3.ab3@29954>     MaxLen detokenline.s = #MAX_Columns+1        ; was 65536  changed it to the max size of a sourceline  tomsmart1
0003963C <AmiBlitz3.ab3@29955>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003964C <AmiBlitz3.ab3@29956>    *tn.preprocessor = Peek.l(?include_preprocessor)
00039676 <AmiBlitz3.ab3@29957>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0003969E <AmiBlitz3.ab3@29958>     If written>0 Then Poke.b &detokenline+written,0
000396E2 <AmiBlitz3.ab3@29959>     If written>40 Then Poke.s &detokenline+36,"..."   ; added to limit the wide of the error requester  tomsmart1
0003970C <AmiBlitz3.ab3@29960>     sourceLineText.s = Peek.s(&detokenline)
00039712 <AmiBlitz3.ab3@29961>   Else
0003973A <AmiBlitz3.ab3@29962>     sourceLineText = "NULL"
0003976E <AmiBlitz3.ab3@29964>   error_source$ = sourceLineText  ; needed for stdout_error
000397C0 <AmiBlitz3.ab3@29965>   error$ + sourceLineText
000397C6 <AmiBlitz3.ab3@29966>   GetD0 &error$
000397E4 <AmiBlitz3.ab3@29967>   !asm
000397E6 <AmiBlitz3.ab3@29968>   MOVE.l d0,a0
000397E8 <AmiBlitz3.ab3@29969> RTS
000397EA <AmiBlitz3.ab3@29973>   MOVE.l a0,-(a7)
000397EC <AmiBlitz3.ab3@29974>   MOVE.l a0,d0
000397EE <AmiBlitz3.ab3@29975>   MOVE.l a5,a0                                             ;macro title
00039818 <AmiBlitz3.ab3@29976>   !basic
0003981C <AmiBlitz3.ab3@29977>   i = PutD0
0003981E <AmiBlitz3.ab3@29978>   MOVEQ #20,d0
00039820 <AmiBlitz3.ab3@29981>     MOVE.b -(a0),d1
00039824 <AmiBlitz3.ab3@29982>     BEQ 'l1
00039828 <AmiBlitz3.ab3@29983>     CMP.b #":",d1
0003982C <AmiBlitz3.ab3@29984>     BEQ 'l1
0003982E <AmiBlitz3.ab3@29985>     SUBQ.l #1,d0
00039832 <AmiBlitz3.ab3@29986>     BNE 'l2
00039834 <AmiBlitz3.ab3@29989>   ADDQ #1,a0
00039836 <AmiBlitz3.ab3@29990>   MOVE.l a0,d0
0003983A <AmiBlitz3.ab3@29991>   i2.l = PutD0
00039856 <AmiBlitz3.ab3@29992>   If Peek.w (?ininclude)>0
000398B0 <AmiBlitz3.ab3@29993>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000398C0 <AmiBlitz3.ab3@29994>     errorline.l = Peek.l(?includeline);-1
000398E8 <AmiBlitz3.ab3@29995>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039912 <AmiBlitz3.ab3@29996>     errorfile.s = Peek.s(?includetemp2)
00039918 <AmiBlitz3.ab3@29997>   Else
00039950 <AmiBlitz3.ab3@29998>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00039966 <AmiBlitz3.ab3@29999>     errorline.l = Peek.l(?compilelinecounter) + 1
0003999A <AmiBlitz3.ab3@30000>     errorfile.s = cli_sourcefile
000399A4 <AmiBlitz3.ab3@30003>   If i
00039A48 <AmiBlitz3.ab3@30004>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00039AC6 <AmiBlitz3.ab3@30005>     errortext.s = Replace$(errortext,"\n","\\0a")
00039ACC <AmiBlitz3.ab3@30006>   Else
00039AF4 <AmiBlitz3.ab3@30007>     errortext.s = "???"
00039C6C <AmiBlitz3.ab3@30010>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039D34 <AmiBlitz3.ab3@30011>   NPrint "  ",error_type$,"\\n  ",error_source$
00039D52 <AmiBlitz3.ab3@30015>   !asm
00039D54 <AmiBlitz3.ab3@30016>   MOVE.l (a7)+,a0
00039D56 <AmiBlitz3.ab3@30017> RTS
00039D58 <AmiBlitz3.ab3@30021>   MOVE.l a0,-(a7)
00039D5A <AmiBlitz3.ab3@30022>   MOVE.l a0,d0
00039D5C <AmiBlitz3.ab3@30023>   MOVE.l a5,a0                                             ;macro title
00039D86 <AmiBlitz3.ab3@30024>   !basic
00039D8A <AmiBlitz3.ab3@30025>   i = PutD0
00039D8C <AmiBlitz3.ab3@30026>   MOVEQ #20,d0
00039D8E <AmiBlitz3.ab3@30029>     MOVE.b -(a0),d1
00039D92 <AmiBlitz3.ab3@30030>     BEQ 'l1
00039D96 <AmiBlitz3.ab3@30031>     CMP.b #":",d1
00039D9A <AmiBlitz3.ab3@30032>     BEQ 'l1
00039D9C <AmiBlitz3.ab3@30033>     SUBQ.l #1,d0
00039DA0 <AmiBlitz3.ab3@30034>     BNE 'l2
00039DA2 <AmiBlitz3.ab3@30037>   ADDQ #1,a0
00039DA4 <AmiBlitz3.ab3@30038>   MOVE.l a0,d0
00039DA8 <AmiBlitz3.ab3@30039>   i2.l = PutD0
00039E2C <AmiBlitz3.ab3@30040>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039E40 <AmiBlitz3.ab3@30041>   If fid <> -1
00039E5C <AmiBlitz3.ab3@30042>     If Peek.w (?ininclude)>0
00039EB6 <AmiBlitz3.ab3@30043>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00039EBC <AmiBlitz3.ab3@30044>     Else
00039EE8 <AmiBlitz3.ab3@30045>       Poke$(?includetemp2),""
00039F12 <AmiBlitz3.ab3@30047>     a$ = Peek$(?includetemp2)
00039F84 <AmiBlitz3.ab3@30048>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039FB6 <AmiBlitz3.ab3@30049>     file_WriteLine{fid,x$}
0003A000 <AmiBlitz3.ab3@30050>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
0003A02C <AmiBlitz3.ab3@30051>     If a$
0003A05E <AmiBlitz3.ab3@30052>       file_WriteLine{fid,a$}
0003A0A8 <AmiBlitz3.ab3@30053>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
0003A0D0 <AmiBlitz3.ab3@30054>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003A0D6 <AmiBlitz3.ab3@30055>     Else
0003A0FC <AmiBlitz3.ab3@30056>       file_WriteLine{fid,"none"}
0003A12C <AmiBlitz3.ab3@30058>     file_WriteLine{fid,Peek$(i2)}
0003A182 <AmiBlitz3.ab3@30059>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0003A1CC <AmiBlitz3.ab3@30060>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0003A1D6 <AmiBlitz3.ab3@30061>     file_Close{fid}
0003A1F4 <AmiBlitz3.ab3@30063>   !asm
0003A1F6 <AmiBlitz3.ab3@30064>   MOVE.l (a7)+,a0
0003A1F8 <AmiBlitz3.ab3@30065> RTS
0003A222 <AmiBlitz3.ab3@30069>   !basic
0003A226 <AmiBlitz3.ab3@30070>   progress.l     = PutD0
0003A238 <AmiBlitz3.ab3@30071>   total.l        = Peek.w(?progressbar_width)
0003A256 <AmiBlitz3.ab3@30072>   calcpro        = (progress * 100) / total +1
0003A26E <AmiBlitz3.ab3@30073>   pass.l         = Peek.w(?pass) + 1           ; added +1 so the shown status info begin with 1 instead of 0  tomsmart1
0003A280 <AmiBlitz3.ab3@30074>   typ.l          = Peek.w(?compiler_job)
0003A29E <AmiBlitz3.ab3@30077>   If (pass><pass_old) OR (typ><typ_old)
0003A2AC <AmiBlitz3.ab3@30079>     If pass_old><pass
0003A348 <AmiBlitz3.ab3@30080>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
0003A39E <AmiBlitz3.ab3@30081>       If cli_verbose>=1 Then NPrint passtatusstr        ; changed form 2 to get compilepass number in verbose mode 1  tomsmart1
0003A3A4 <AmiBlitz3.ab3@30084>     pass_old = pass
0003A3AA <AmiBlitz3.ab3@30085>     typ_old  = typ
0003A3B0 <AmiBlitz3.ab3@30086>     update_comstatus_gui = True
0003A3C2 <AmiBlitz3.ab3@30087>     If typ=0
0003A4A2 <AmiBlitz3.ab3@30088>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003A4AA <AmiBlitz3.ab3@30089>       calcpro = 0  ; set gauge to 0
0003A4BC <AmiBlitz3.ab3@30091>     If typ=1
0003A59C <AmiBlitz3.ab3@30092>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003A5A4 <AmiBlitz3.ab3@30093>       calcpro = 0  ; set gauge to 0
0003A5FA <AmiBlitz3.ab3@30096>     If cli_verbose>=3 Then NPrint comstatusstr
0003A608 <AmiBlitz3.ab3@30099>   If (calcpro >< calcpro_old)
0003A65C <AmiBlitz3.ab3@30100>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A662 <AmiBlitz3.ab3@30101>     calcpro_old = calcpro
0003A668 <AmiBlitz3.ab3@30102>     update_comstatus_gui = True
0003A682 <AmiBlitz3.ab3@30105>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A6A0 <AmiBlitz3.ab3@30106>     !asm
0003A6D2 <AmiBlitz3.ab3@30107> 
0003A6FC <AmiBlitz3.ab3@30108>     !basic
0003A702 <AmiBlitz3.ab3@30109>     update_comstatus_gui  = False ; because we update the gui
0003A720 <AmiBlitz3.ab3@30111>   !asm
0003A722 <AmiBlitz3.ab3@30112> RTS
0003A728 <AmiBlitz3.ab3@30117>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A72E <AmiBlitz3.ab3@30118>   LEA maxobjects_value,A3                                  ;current value
0003A734 <AmiBlitz3.ab3@30119>   MOVEA.l libpointer,A2
0003A738 <AmiBlitz3.ab3@30122>   CMPA.w #$0,A2
0003A73C <AmiBlitz3.ab3@30123>   BEQ.w 'igot
0003A73E <AmiBlitz3.ab3@30124>   MOVEA.l A2,A1
0003A742 <AmiBlitz3.ab3@30125>   ADDA.l $12(A1),A1
0003A746 <AmiBlitz3.ab3@30126>   TST.w -$2(A1)
0003A74A <AmiBlitz3.ab3@30127>   BEQ.w 'ugwl2
0003A74C <AmiBlitz3.ab3@30128>   SUBQ.w #1,D5
0003A750 <AmiBlitz3.ab3@30129>   BMI.w 'ugw2
0003A752 <AmiBlitz3.ab3@30132>   MOVEA.l (A2),A2
0003A756 <AmiBlitz3.ab3@30133>  BRA.w 'ugwl
0003A75A <AmiBlitz3.ab3@30136>   MOVE.w (A3),-$4(A1)
0003A75C <AmiBlitz3.ab3@30139> RTS
0003A762 <AmiBlitz3.ab3@30143>   MOVE.w debugnest,d0
0003A768 <AmiBlitz3.ab3@30144>   LEA storedebugmode, a0
0003A770 <AmiBlitz3.ab3@30145>   MOVE.b 0(a0,d0.w),debugmode
0003A776 <AmiBlitz3.ab3@30146>   TST.w debugnest
0003A77A <AmiBlitz3.ab3@30147>   BEQ JUMP_unpairrunerrs
0003A780 <AmiBlitz3.ab3@30148>   SUBQ.w #1,debugnest
0003A782 <AmiBlitz3.ab3@30149> RTS
0003A788 <AmiBlitz3.ab3@30151> JUMP_runerrsoverflow JMP runerrsoverflow
0003A78E <AmiBlitz3.ab3@30152> JUMP_unpairrunerrs   JMP unpairrunerrs
0003A796 <AmiBlitz3.ab3@30156>   BCHG #$7,use_debugger
0003A79E <AmiBlitz3.ab3@30158>   BTST #$7,use_debugger
0003A7A2 <AmiBlitz3.ab3@30159>   BNE 'debugon
0003A7A8 <AmiBlitz3.ab3@30160>   CLR.w debugmode
0003A7AC <AmiBlitz3.ab3@30161>  BRA.b 'debugoff
0003A7B2 <AmiBlitz3.ab3@30164>   SNE debugmode
0003A7B4 <AmiBlitz3.ab3@30167>   MOVE.l a0,-(a7)
0003A7EC <AmiBlitz3.ab3@30170>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A7EE <AmiBlitz3.ab3@30175>   MOVE.l (a7)+,a0
0003A7F0 <AmiBlitz3.ab3@30176> RTS
0003A7F8 <AmiBlitz3.ab3@30181>   BTST #$7,use_debugger
0003A7FC <AmiBlitz3.ab3@30183>   BNE 'debugon
0003A802 <AmiBlitz3.ab3@30184>   CLR.w debugmode
0003A806 <AmiBlitz3.ab3@30185>  BRA.b 'debugoff
0003A80C <AmiBlitz3.ab3@30189>   SNE debugmode
0003A80E <AmiBlitz3.ab3@30192> RTS
0003A814 <AmiBlitz3.ab3@30197>   ADDQ.w #1,debugnest
0003A81A <AmiBlitz3.ab3@30198>   MOVE.w debugnest,d0
0003A81E <AmiBlitz3.ab3@30199>   CMP.w #18,d0
0003A822 <AmiBlitz3.ab3@30200>    BGE JUMP_runerrsoverflow
0003A828 <AmiBlitz3.ab3@30201>   LEA storedebugmode, a0
0003A830 <AmiBlitz3.ab3@30202>   MOVE.b debugmode,0( a0,d0.w)
0003A836 <AmiBlitz3.ab3@30206>   SF debugmode
0003A838 <AmiBlitz3.ab3@30207> RTS
0003A8B8 <AmiBlitz3.ab3@30210> usedpath:  Ds.l 32
0003A8BC <AmiBlitz3.ab3@30214>   BEQ.w JUMP_syntaxerr
0003A8C2 <AmiBlitz3.ab3@30215>   LEA lastpath,A0
0003A8C6 <AmiBlitz3.ab3@30217>   MOVEM.l a0-a1/d0,-(a7)
0003A8CC <AmiBlitz3.ab3@30218>   LEA lastpath2,a1
0003A8CE <AmiBlitz3.ab3@30221>     MOVE.b (a0)+,(a1)+
0003A8D2 <AmiBlitz3.ab3@30222>   BNE 'l2
0003A8D6 <AmiBlitz3.ab3@30223>   MOVEM.l (a7)+,a0-a1/d0
0003A8DA <AmiBlitz3.ab3@30224>   LEA usedpath(PC),A0
0003A8DE <AmiBlitz3.ab3@30225>   MOVEM.l a0-a1/d0,-(a7)
0003A8E4 <AmiBlitz3.ab3@30226>   LEA lastpath,a1
0003A8E6 <AmiBlitz3.ab3@30229>     MOVE.b (a0)+,(a1)+
0003A8EA <AmiBlitz3.ab3@30230>   BNE 'l1
0003A8EE <AmiBlitz3.ab3@30231>   MOVEM.l (a7)+,a0-a1/d0
0003A8F0 <AmiBlitz3.ab3@30235>   TST.w D0
0003A8F4 <AmiBlitz3.ab3@30236>    BMI.w JUMP_syntaxerr
0003A8F6 <AmiBlitz3.ab3@30237>   MOVE.b D0,(A0)+
0003A8FA <AmiBlitz3.ab3@30238>   BSR.w JUMP_get1bytemain
0003A8FE <AmiBlitz3.ab3@30239>    BNE.w 'loop
0003A902 <AmiBlitz3.ab3@30242>   MOVE.b #$2,(A0)
0003A904 <AmiBlitz3.ab3@30243> RTS
0003A908 <AmiBlitz3.ab3@30247>   BEQ.w JUMP_syntaxerr
0003A90E <AmiBlitz3.ab3@30248>   LEA path2,A0
0003A910 <AmiBlitz3.ab3@30260>   TST.w D0
0003A914 <AmiBlitz3.ab3@30261>    BMI.w JUMP_syntaxerr
0003A916 <AmiBlitz3.ab3@30262>   MOVE.b D0,(A0)+
0003A91A <AmiBlitz3.ab3@30263>   BSR.w JUMP_get1bytemain
0003A91E <AmiBlitz3.ab3@30264>    BNE.w 'loop
0003A922 <AmiBlitz3.ab3@30267>   MOVE.b #$2,(A0)
0003A924 <AmiBlitz3.ab3@30268> RTS
0003A92A <AmiBlitz3.ab3@30271> JUMP_errormsg_reg JMP errormsg_reg
0003A934 <AmiBlitz3.ab3@30275>   MOVE.l #$f22d6780,fpucodeglobal
0003A93E <AmiBlitz3.ab3@30276>   MOVE.l #$f22c6780,fpucodelocal
0003A944 <AmiBlitz3.ab3@30277>   LEA regtable,a0
0003A94E <AmiBlitz3.ab3@30278>   MOVE.l #7,maxregs
0003A950 <AmiBlitz3.ab3@30281>   MOVE.l (a0),d0
0003A954 <AmiBlitz3.ab3@30282>   BEQ 'e1
0003A956 <AmiBlitz3.ab3@30283>   CLR.l (a0)
0003A95A <AmiBlitz3.ab3@30284>   MOVE.w 4(a0),d0
0003A964 <AmiBlitz3.ab3@30285>   MOVE.l fpucodeglobal,fpucode
0003A968 <AmiBlitz3.ab3@30286>   TST.w 6(a0)
0003A96C <AmiBlitz3.ab3@30287>   BEQ 'glob
0003A976 <AmiBlitz3.ab3@30288>   MOVE.l fpucodelocal,fpucode
0003A97C <AmiBlitz3.ab3@30291>   MOVE.l fpucode,d1
0003A982 <AmiBlitz3.ab3@30292>   JSR writelong
0003A98C <AmiBlitz3.ab3@30293>   SUB.l #$80,fpucodelocal
0003A996 <AmiBlitz3.ab3@30294>   SUB.l #$80,fpucodeglobal
0003A998 <AmiBlitz3.ab3@30295>   MOVE.w d0,d1
0003A99E <AmiBlitz3.ab3@30296>   JSR writeword
0003A9A0 <AmiBlitz3.ab3@30297>   ADDQ #8,a0
0003A9A4 <AmiBlitz3.ab3@30298>  BRA 'again
0003A9A6 <AmiBlitz3.ab3@30301> RTS
0003A9AC <AmiBlitz3.ab3@30304> JUMP_notypeerr2 JMP notypeerr
0003A9B2 <AmiBlitz3.ab3@30305> JUMP_illtypeerr JMP illtypeerr
0003A9BC <AmiBlitz3.ab3@30308>   MOVE.l #$f22d4780,fpucodeglobal
0003A9C6 <AmiBlitz3.ab3@30309>   MOVE.l #$f22c4780,fpucodelocal
0003A9CC <AmiBlitz3.ab3@30310>   LEA regtable,a0
0003A9CE <AmiBlitz3.ab3@30311>   TST.l (a0)
0003A9D2 <AmiBlitz3.ab3@30312>    BNE JUMP_errormsg_reg
0003A9D4 <AmiBlitz3.ab3@30313>   MOVE.l d7,-(a7)
0003A9D6 <AmiBlitz3.ab3@30314>   SUBQ.l #1,a5
0003A9DC <AmiBlitz3.ab3@30317>   JSR getparameter2
0003A9E0 <AmiBlitz3.ab3@30318>   BEQ.w 'nopar
0003A9E6 <AmiBlitz3.ab3@30319>   MOVE.w d0,lastchar
0003A9EC <AmiBlitz3.ab3@30320>   JSR findvariable
0003A9F0 <AmiBlitz3.ab3@30321>   BNE 'islocal
0003A9FA <AmiBlitz3.ab3@30322>   MOVE.l fpucodeglobal,fpucode
0003AA04 <AmiBlitz3.ab3@30323>   MOVE.l #3,maxregs
0003AA06 <AmiBlitz3.ab3@30324>   MOVEQ #0,d7
0003AA0E <AmiBlitz3.ab3@30327>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003AA12 <AmiBlitz3.ab3@30328>    BEQ 'doit
0003AA1A <AmiBlitz3.ab3@30329>   CMP.l #newtype_double,$a(a2)
0003AA1E <AmiBlitz3.ab3@30330>    BNE JUMP_illtypeerr
0003AA24 <AmiBlitz3.ab3@30333>   LEA regtable,a0
0003AA26 <AmiBlitz3.ab3@30334>   MOVEQ #0,d0
0003AA28 <AmiBlitz3.ab3@30337>   TST.l (a0)
0003AA2C <AmiBlitz3.ab3@30338>    BEQ 'store
0003AA2E <AmiBlitz3.ab3@30339>   ADDQ.l #4,d0
0003AA30 <AmiBlitz3.ab3@30340>   ADDQ.l #8,a0
0003AA36 <AmiBlitz3.ab3@30341>   CMP.l #16,d0
0003AA3A <AmiBlitz3.ab3@30342>    BCS 'loop
0003AA44 <AmiBlitz3.ab3@30343>   MOVE.l #2,maxregs
0003AA4A <AmiBlitz3.ab3@30344>   CMP.l #20,d0
0003AA4E <AmiBlitz3.ab3@30345>    BCS 'loop
0003AA58 <AmiBlitz3.ab3@30346>   MOVE.l #1,maxregs
0003AA5E <AmiBlitz3.ab3@30347>   CMP.l #24,d0
0003AA62 <AmiBlitz3.ab3@30348>    BCS 'loop
0003AA68 <AmiBlitz3.ab3@30349>  JMP toovarerr
0003AA6E <AmiBlitz3.ab3@30352>   TST.b fpu
0003AA72 <AmiBlitz3.ab3@30353>    BEQ 'nofpu
0003AA74 <AmiBlitz3.ab3@30354>   MOVE.l a2,(a0)
0003AA7A <AmiBlitz3.ab3@30355>   MOVE.w 4(a2),4(a0)
0003AA7E <AmiBlitz3.ab3@30356>   MOVE.w d7,6(a0)
0003AA84 <AmiBlitz3.ab3@30357>   MOVE.l fpucode,d1
0003AA8E <AmiBlitz3.ab3@30358>   SUB.l #$80,fpucodeglobal
0003AA98 <AmiBlitz3.ab3@30359>   SUB.l #$80,fpucodelocal
0003AA9E <AmiBlitz3.ab3@30360>   JSR writelong
0003AAA2 <AmiBlitz3.ab3@30361>   MOVE.w 4(a2),d1
0003AAA8 <AmiBlitz3.ab3@30362>   JSR writeword
0003AAAE <AmiBlitz3.ab3@30365>   MOVE.w lastchar,d0
0003AAB2 <AmiBlitz3.ab3@30366>   CMP.w #":",d0
0003AAB6 <AmiBlitz3.ab3@30367>    BEQ 'nopar
0003AAB8 <AmiBlitz3.ab3@30368>   TST.w d0
0003AABC <AmiBlitz3.ab3@30369>    BEQ 'nopar
0003AAC0 <AmiBlitz3.ab3@30370>   CMP.w #",",d0
0003AAC4 <AmiBlitz3.ab3@30371>   BNE JUMP_syntaxerr
0003AAC8 <AmiBlitz3.ab3@30372>  BRA 'l2
0003AACA <AmiBlitz3.ab3@30375>    MOVE.l (a7)+,d7
0003AACC <AmiBlitz3.ab3@30376>  RTS
0003AACE <AmiBlitz3.ab3@30379>   MOVEQ #1,d7
0003AAD6 <AmiBlitz3.ab3@30380>   MOVE.b #1,newvariable
0003AADC <AmiBlitz3.ab3@30381>   LEA firstlocal,a2
0003AAE2 <AmiBlitz3.ab3@30382>   JSR findvariable
0003AAE8 <AmiBlitz3.ab3@30383>   CLR.b newvariable
0003AAEE <AmiBlitz3.ab3@30384>   CMP.l #-1,d0
0003AAF2 <AmiBlitz3.ab3@30385>   BEQ.w JUMP_notypeerr2
0003AAFC <AmiBlitz3.ab3@30386>   MOVE.l fpucodelocal,fpucode
0003AB00 <AmiBlitz3.ab3@30387>  BRA 'go
0003AB04 <AmiBlitz3.ab3@30390>   CMP.b #".",d0
0003AB08 <AmiBlitz3.ab3@30391>    BNE 'l1
0003AB0C <AmiBlitz3.ab3@30392>   BSR JUMP_get1bytemain
0003AB10 <AmiBlitz3.ab3@30393>   BSR JUMP_get1bytemain
0003AB14 <AmiBlitz3.ab3@30396>   ORI .b #$20,d0
0003AB18 <AmiBlitz3.ab3@30397>   CMP.b #"d",d0
0003AB1C <AmiBlitz3.ab3@30398>    BNE JUMP_illeaerr
0003AB20 <AmiBlitz3.ab3@30399>   BSR JUMP_get1bytemain
0003AB24 <AmiBlitz3.ab3@30400>   SUB.b #$30,d0
0003AB28 <AmiBlitz3.ab3@30401>   CMP.b #$7,d0
0003AB2C <AmiBlitz3.ab3@30402>    BGT JUMP_syntaxerr
0003AB30 <AmiBlitz3.ab3@30403>   MOVE.w #$49c0,d1
0003AB32 <AmiBlitz3.ab3@30404>   ADD.b d0,d1
0003AB38 <AmiBlitz3.ab3@30405>   JSR writeword
0003AB3C <AmiBlitz3.ab3@30406>   BSR JUMP_get1bytemain
0003AB3E <AmiBlitz3.ab3@30407> RTS
0003AB44 <AmiBlitz3.ab3@30411>   LEA lastpath,a0
0003AB48 <AmiBlitz3.ab3@30412>   LEA usedpath(PC),A1
0003AB4A <AmiBlitz3.ab3@30415>     MOVE.b (a0)+,(a1)+
0003AB4E <AmiBlitz3.ab3@30416>   BNE 'l1
0003AB54 <AmiBlitz3.ab3@30418>   LEA lastpath2,a0
0003AB5A <AmiBlitz3.ab3@30419>   LEA lastpath,A1
0003AB5C <AmiBlitz3.ab3@30422>     MOVE.b (a0)+,(a1)+
0003AB60 <AmiBlitz3.ab3@30423>   BNE 'l2
0003AB62 <AmiBlitz3.ab3@30424> RTS
0003AB68 <AmiBlitz3.ab3@30428>   TST.b objectcount
0003AB6C <AmiBlitz3.ab3@30429>   BEQ 'l2a
0003AB72 <AmiBlitz3.ab3@30430>  JMP macnesterr
0003AB78 <AmiBlitz3.ab3@30433>   LEA devo,a0
0003AB7E <AmiBlitz3.ab3@30434>   ADDQ.b #1,objectcount
0003AB82 <AmiBlitz3.ab3@30435>   MOVEM.l a1/d2,-(a7)
0003AB88 <AmiBlitz3.ab3@30436>   LEA ptr_parameterstore,a1
0003AB8A <AmiBlitz3.ab3@30439>     MOVE.b (a0)+,(a1)+
0003AB8E <AmiBlitz3.ab3@30440>   BNE 'l1
0003AB90 <AmiBlitz3.ab3@30442>   MOVEQ #13,d2
0003AB96 <AmiBlitz3.ab3@30443>   JSR findlabel2
0003AB9A <AmiBlitz3.ab3@30444>   BNE 'd
0003AB9E <AmiBlitz3.ab3@30445>   TST.l 8(a2)
0003ABA2 <AmiBlitz3.ab3@30446>   BEQ 'd
0003ABA8 <AmiBlitz3.ab3@30447>   SUBQ.b #1,objectcount
0003ABAC <AmiBlitz3.ab3@30448>   MOVEM.l (a7)+,a1/d2
0003ABB2 <AmiBlitz3.ab3@30449>   JSR skiprest
0003ABBA <AmiBlitz3.ab3@30450>   MOVE.b #1,developobject
0003ABBC <AmiBlitz3.ab3@30451>  RTS
0003ABC0 <AmiBlitz3.ab3@30454>   MOVEM.l (a7)+,a1/d2
0003ABC8 <AmiBlitz3.ab3@30455>   MOVE.b #1,resdisable
0003ABCE <AmiBlitz3.ab3@30458>   CLR.b developobject
0003ABD4 <AmiBlitz3.ab3@30459> JMP do_Macro
0003ABDA <AmiBlitz3.ab3@30462> JUMP_illeaerr JMP illeaerr
0003ABE0 <AmiBlitz3.ab3@30466>   CLR.b typecheck
0003ABE6 <AmiBlitz3.ab3@30467>   CLR.b declare
0003ABEC <AmiBlitz3.ab3@30468>   CLR.b declare2
0003ABF0 <AmiBlitz3.ab3@30469>   SUB.b #$30,d0
0003ABF4 <AmiBlitz3.ab3@30470>   BTST #0,d0
0003ABF8 <AmiBlitz3.ab3@30471>   BEQ 'l1
0003AC00 <AmiBlitz3.ab3@30472>   MOVE.b #1,declare
0003AC04 <AmiBlitz3.ab3@30475>   BTST #1,d0
0003AC08 <AmiBlitz3.ab3@30476>   BEQ 'l2
0003AC10 <AmiBlitz3.ab3@30477>   MOVE.b #1,declare2
0003AC14 <AmiBlitz3.ab3@30480>   BTST #2,d0
0003AC18 <AmiBlitz3.ab3@30481>   BEQ 'l3
0003AC20 <AmiBlitz3.ab3@30482>   MOVE.b #1,typecheck
0003AC24 <AmiBlitz3.ab3@30485>   BSR.w JUMP_get1bytemain
0003AC26 <AmiBlitz3.ab3@30486> RTS
0003AC2C <AmiBlitz3.ab3@30488> JUMP_get1bytemain JMP get1bytemain
0003AC56 <AmiBlitz3.ab3@30492>   !basic
0003AC76 <AmiBlitz3.ab3@30494>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003AC94 <AmiBlitz3.ab3@30495>   !asm
0003AC96 <AmiBlitz3.ab3@30496> Return
0003AC98 <AmiBlitz3.ab3@30501>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003AC9A <AmiBlitz3.ab3@30502>   ADDQ #1,a5
0003AC9C <AmiBlitz3.ab3@30503>   MOVE.l a5,-(a7)
0003ACC6 <AmiBlitz3.ab3@30504>   !basic
0003ACCC <AmiBlitz3.ab3@30505>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003ACD6 <AmiBlitz3.ab3@30506>   If _myD0
0003AD16 <AmiBlitz3.ab3@30507>     newconst$ = UCase$(Peek.s(_myD0))
0003AD1C <AmiBlitz3.ab3@30508>   Else
0003AD56 <AmiBlitz3.ab3@30509>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003AD7E <AmiBlitz3.ab3@30510>     nwconst$="xxx"
0003ADA6 <AmiBlitz3.ab3@30512>   condata$ =""
0003ADB6 <AmiBlitz3.ab3@30513>   Poke.b ?skip_bytes,0
0003AE12 <AmiBlitz3.ab3@30514>   If Left$(newconst$,2) = "__"
0003AE6C <AmiBlitz3.ab3@30515>     Select Mid$(newconst$,3,4)
0003AE90 <AmiBlitz3.ab3@30517>      Case "DATE"
0003AEEA <AmiBlitz3.ab3@30518>       Select Mid$(newconst$,3,6)
0003AF28 <AmiBlitz3.ab3@30519>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003AF6C <AmiBlitz3.ab3@30520>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003AF7A <AmiBlitz3.ab3@30521>       End Select
0003AF88 <AmiBlitz3.ab3@30522>       i.l=SystemDate
0003AFAE <AmiBlitz3.ab3@30523>       condata$ = Date$ (i)
0003B02C <AmiBlitz3.ab3@30524>       condata$ = Replace$(condata$,"/",".")
0003B056 <AmiBlitz3.ab3@30526>      Case "VER_"
0003B066 <AmiBlitz3.ab3@30529>       actual_version.l = Peek.l(?versioninformation)
0003B076 <AmiBlitz3.ab3@30530>       actual_build.l   = Peek.l(?number_of_builds)
0003B09A <AmiBlitz3.ab3@30532>       Format ""
0003B0F4 <AmiBlitz3.ab3@30533>       Select Mid$(newconst$,3,9)
0003B118 <AmiBlitz3.ab3@30535>        Case "VER_MAJOR"
0003B154 <AmiBlitz3.ab3@30536>         condata$ = Str$(actual_version LSR 24)
0003B17E <AmiBlitz3.ab3@30538>        Case "VER_MINOR"
0003B1C2 <AmiBlitz3.ab3@30539>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003B1EC <AmiBlitz3.ab3@30541>        Case "VER_PATCH"
0003B230 <AmiBlitz3.ab3@30542>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003B25A <AmiBlitz3.ab3@30544>        Case "VER_BUILD"
0003B27E <AmiBlitz3.ab3@30545>         Format ""
0003B2B2 <AmiBlitz3.ab3@30546>         condata$ = Str$(actual_build)
0003B2B8 <AmiBlitz3.ab3@30548>        Default
0003B2E0 <AmiBlitz3.ab3@30549>         condata$ = "{unknown compiler constant}"
0003B2EE <AmiBlitz3.ab3@30551>       End Select
0003B312 <AmiBlitz3.ab3@30552>       Format ""
0003B322 <AmiBlitz3.ab3@30553>       Poke.b ?skip_bytes,11
0003B34C <AmiBlitz3.ab3@30555>      Case "THIS"
0003B3A6 <AmiBlitz3.ab3@30556>       Select Mid$(newconst$,3,9)
0003B3CA <AmiBlitz3.ab3@30558>        Case "THIS_FUNC"
0003B3DA <AmiBlitz3.ab3@30559>         Poke.b ?skip_bytes,15
0003B3FA <AmiBlitz3.ab3@30560>         If Peek.l(?currentfunction)<>0
0003B446 <AmiBlitz3.ab3@30561>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003B44C <AmiBlitz3.ab3@30562>         Else
0003B474 <AmiBlitz3.ab3@30563>           condata$ = "GLOBAL"
0003B49E <AmiBlitz3.ab3@30566>        Case "THIS_INCL"
0003B4AE <AmiBlitz3.ab3@30567>         Poke.b ?skip_bytes,14
0003B4CE <AmiBlitz3.ab3@30568>         If Peek.l(?includetemp2)<>0
0003B51C <AmiBlitz3.ab3@30569>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003B546 <AmiBlitz3.ab3@30572>        Case "THIS_POIN"
0003B556 <AmiBlitz3.ab3@30573>         Poke.b ?skip_bytes,14
0003B576 <AmiBlitz3.ab3@30574>         If Peek.l(?currentfunction)<>0
0003B5A4 <AmiBlitz3.ab3@30575>           condata$ = Hex$(Peek.l(?currentfunction))
0003B5B2 <AmiBlitz3.ab3@30578>       End Select
0003B5DC <AmiBlitz3.ab3@30580>      Case "CODE"
0003B5EC <AmiBlitz3.ab3@30581>       Poke.b ?skip_bytes,10
0003B64E <AmiBlitz3.ab3@30582>       If Mid$(newconst$,3,8) = "CODELINE"
0003B68A <AmiBlitz3.ab3@30583>         condata$ = Str$(Peek.l(?globallinecount))
0003B698 <AmiBlitz3.ab3@30586>     End Select
0003B69E <AmiBlitz3.ab3@30588>   Else
0003B6F2 <AmiBlitz3.ab3@30589>     Select Left$(newconst$,1)
0003B716 <AmiBlitz3.ab3@30591>      Case "R"
0003B726 <AmiBlitz3.ab3@30592>       Poke.b ?skip_bytes,3
0003B79E <AmiBlitz3.ab3@30593>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B81E <AmiBlitz3.ab3@30594>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B82E <AmiBlitz3.ab3@30595>       Next
0003B858 <AmiBlitz3.ab3@30597>      Case "N"
0003B868 <AmiBlitz3.ab3@30598>       Poke.b ?skip_bytes,1
0003B88C <AmiBlitz3.ab3@30599>       condata$ = Chr$(10)
0003B892 <AmiBlitz3.ab3@30601>      Default
0003B8A4 <AmiBlitz3.ab3@30602>       char1.b = Peek.b(&newconst$)
0003B8BC <AmiBlitz3.ab3@30603>       char2.b = Peek.b(&newconst$+1)
0003B8C8 <AmiBlitz3.ab3@30604>       nibble1.l = -1
0003B8D4 <AmiBlitz3.ab3@30605>       nibble2.l = -1
0003B912 <AmiBlitz3.ab3@30607>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B950 <AmiBlitz3.ab3@30608>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B994 <AmiBlitz3.ab3@30610>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B9D8 <AmiBlitz3.ab3@30611>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003BA1C <AmiBlitz3.ab3@30613>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003BA60 <AmiBlitz3.ab3@30614>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003BA86 <AmiBlitz3.ab3@30616>       If nibble1>=0 AND nibble2>=0
0003BA9C <AmiBlitz3.ab3@30617>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003BAC0 <AmiBlitz3.ab3@30618>         condata$ = Chr$(newchar)
0003BAD0 <AmiBlitz3.ab3@30619>         Poke.b ?skip_bytes,2
0003BADE <AmiBlitz3.ab3@30622>     End Select
0003BB3E <AmiBlitz3.ab3@30624>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003BC64 <AmiBlitz3.ab3@30625>     !cout{"detected unknown const: " + newconst$}
0003BC98 <AmiBlitz3.ab3@30626>     condata$ = newconst$
0003BCAE <AmiBlitz3.ab3@30629>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003BCB0 <AmiBlitz3.ab3@30630>   MOVE.l d0,d2
0003BCB2 <AmiBlitz3.ab3@30631>   MOVE.l d2,-(a7)
0003BCB8 <AmiBlitz3.ab3@30633>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003BCBA <AmiBlitz3.ab3@30634>   MOVE.l d0,a0
0003BCBC <AmiBlitz3.ab3@30637>     MOVE.b (a0)+,d1
0003BCC2 <AmiBlitz3.ab3@30638>     JSR pokedata1b
0003BCC6 <AmiBlitz3.ab3@30639>  DBF d2,'l1
0003BCE4 <AmiBlitz3.ab3@30641>   !asm
0003BCE6 <AmiBlitz3.ab3@30642>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003BCE8 <AmiBlitz3.ab3@30643>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003BCEA <AmiBlitz3.ab3@30644>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003BCF0 <AmiBlitz3.ab3@30645>   ADD.l #1,d2
0003BCF6 <AmiBlitz3.ab3@30647>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003BCFC <AmiBlitz3.ab3@30648>   MOVE.b skip_bytes,D0
0003BCFE <AmiBlitz3.ab3@30649>   ADD.l D0,a5
0003BD00 <AmiBlitz3.ab3@30650> RTS
0003BD04 <AmiBlitz3.ab3@30726>   MOVEM.l d0-d2/a0-a5,-(a7)
0003BD0A <AmiBlitz3.ab3@30727>   TST.w proceduremode                                     ;1 in function
0003BD0E <AmiBlitz3.ab3@30728>   BEQ 'global
0003BD14 <AmiBlitz3.ab3@30729>   LEA firstglob,a2
0003BD1A <AmiBlitz3.ab3@30730>   JSR findvariable2
0003BD1E <AmiBlitz3.ab3@30731>   BEQ 'isused
0003BD26 <AmiBlitz3.ab3@30732>   MOVE.b #1,newvariable
0003BD2C <AmiBlitz3.ab3@30733>   LEA firstlocal,a2
0003BD32 <AmiBlitz3.ab3@30734>   JSR findvariable
0003BD36 <AmiBlitz3.ab3@30735>   BEQ 'isused
0003BD3C <AmiBlitz3.ab3@30736>   CLR.b newvariable
0003BD40 <AmiBlitz3.ab3@30737>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BD42 <AmiBlitz3.ab3@30738>   RTS
0003BD48 <AmiBlitz3.ab3@30741>   JSR findvariable
0003BD4C <AmiBlitz3.ab3@30742>   BNE 'isunused
0003BD52 <AmiBlitz3.ab3@30745>    MOVE.w lastchar,-(a7)                                  ;get the typename from source
0003BD58 <AmiBlitz3.ab3@30746>    JSR getparameter2
0003BD5E <AmiBlitz3.ab3@30747>    MOVE.w (a7)+,lastchar
0003BD62 <AmiBlitz3.ab3@30748>    MOVE.l $a(a2),a0                                       ; get the name of the type
0003BD66 <AmiBlitz3.ab3@30749>    LEA $b(a0),a0
0003BD6C <AmiBlitz3.ab3@30750>    LEA ptr_parameterstore,a1
0003BD6E <AmiBlitz3.ab3@30753>    CMPM.b (a0)+,(a1)+                                     ; compare name
0003BD72 <AmiBlitz3.ab3@30754>    BNE'error
0003BD74 <AmiBlitz3.ab3@30755>    TST.b (a1)
0003BD78 <AmiBlitz3.ab3@30756> 
0003BD7A <AmiBlitz3.ab3@30757>    TST.b (a0)
0003BD7E <AmiBlitz3.ab3@30758>    BNE 'error
0003BD82 <AmiBlitz3.ab3@30761>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BD84 <AmiBlitz3.ab3@30762>  RTS
0003BD8A <AmiBlitz3.ab3@30765> JMP errormsg_declaredtwice
0003BD8E <AmiBlitz3.ab3@30769>   MOVEM.l a3/d1,-(a7)
0003BD94 <AmiBlitz3.ab3@30771>   CLR.b a4a5store
0003BD96 <AmiBlitz3.ab3@30774>   MOVE.b (a3)+,d1
0003BD9A <AmiBlitz3.ab3@30775>   CMP.b #$15,d1
0003BD9E <AmiBlitz3.ab3@30776>   BEQ 'find
0003BDA2 <AmiBlitz3.ab3@30777>   CMP.b #$14,d1
0003BDA6 <AmiBlitz3.ab3@30778>   BEQ 'find
0003BDAA <AmiBlitz3.ab3@30779>   CMP.b #$ff,d1
0003BDAE <AmiBlitz3.ab3@30780>   BNE 'continue
0003BDB2 <AmiBlitz3.ab3@30781>   BRA 'notfind
0003BDB8 <AmiBlitz3.ab3@30784>   MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003BDBE <AmiBlitz3.ab3@30785>   JSR writelong
0003BDC6 <AmiBlitz3.ab3@30786>   MOVE.b #1,a4a5store
0003BDCA <AmiBlitz3.ab3@30789>   MOVEM.l (a7)+,a3/d1
0003BDCC <AmiBlitz3.ab3@30790> RTS
0003BDD2 <AmiBlitz3.ab3@30794>   TST.b a4a5store
0003BDD6 <AmiBlitz3.ab3@30795>   BEQ 'no
0003BDDC <AmiBlitz3.ab3@30796>   MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003BDE2 <AmiBlitz3.ab3@30797>   JSR writelong
0003BDE8 <AmiBlitz3.ab3@30798>   CLR.b a4a5store
0003BDEA <AmiBlitz3.ab3@30801> RTS
0003BDEA <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003BDEE <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003BDF0 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003BDF8 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003BE04 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003BE08 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003BE0A <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003BE0E <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003BE57 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003BE58 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003BE5C <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003BE5E <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003BE62 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003BE7E <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003BE82 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003BE84 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003BE88 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003BEE5 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003BEE6 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003BEEA <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003BEEC <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003BEF1 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003BF01 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003BF06 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003BF22 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003BF2B <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003BF3C <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003BF6F <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003BF76 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003BF7F <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003BFBA <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003BFCA <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003BFCB <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003BFCC <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003BFD2 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003BFD5 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003BFEC <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003C005 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003C00A <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003C012 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003C01E <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003C02B <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003C03C <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003C043 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003C056 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003C05E <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003C05F <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003C066 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003C06E <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003C06F <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003C074 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003C07F <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003C08A <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003C090 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003C0A3 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003C0AA <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003C0B1 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003C113 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003C11A <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003C121 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003C170 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003C17B <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003C193 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003C1B4 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003C1BF <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003C1CB <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003C1CC <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003C1D0 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003C1D2 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003C1D7 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003C1EE <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003C1F9 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003C20E <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003C213 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003C232 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003C23D <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003C262 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003C269 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003C26A <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003C275 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003C281 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003C299 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003C2AC <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003C2B3 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003C2C6 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003C2C8 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003C2EB <internal_commands.ab3@257> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@258> INCLUDE "internal_commands.ab3"
0003C2F0 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003C2F2 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003C2F8 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003C315 <internal_commands.ab3@264> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@265> INCLUDE "internal_commands.ab3"
0003C31A <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003C31C <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003C31F <internal_commands.ab3@270> INCLUDE "internal_commands.ab3"
0003C336 <internal_commands.ab3@271> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003C33F <internal_commands.ab3@277> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@278> INCLUDE "internal_commands.ab3"
0003C352 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003C359 <internal_commands.ab3@284> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@285> INCLUDE "internal_commands.ab3"
0003C35E <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003C360 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003C379 <internal_commands.ab3@292> INCLUDE "internal_commands.ab3"
0003C37A <internal_commands.ab3@293> INCLUDE "internal_commands.ab3"
0003C37E <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003C387 <internal_commands.ab3@298> INCLUDE "internal_commands.ab3"
0003C3A0 <internal_commands.ab3@299> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003C3A6 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003C3AD <internal_commands.ab3@305> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@306> INCLUDE "internal_commands.ab3"
0003C3BC <internal_commands.ab3@312> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@313> INCLUDE "internal_commands.ab3"
0003C3C3 <internal_commands.ab3@314> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003C3DE <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003C3E0 <internal_commands.ab3@320> INCLUDE "internal_commands.ab3"
0003C3E4 <internal_commands.ab3@321> INCLUDE "internal_commands.ab3"
0003C3FB <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003C3FC <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003C400 <internal_commands.ab3@326> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@327> INCLUDE "internal_commands.ab3"
0003C407 <internal_commands.ab3@328> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@334> INCLUDE "internal_commands.ab3"
0003C413 <internal_commands.ab3@335> INCLUDE "internal_commands.ab3"
0003C417 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003C418 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@341> INCLUDE "internal_commands.ab3"
0003C425 <internal_commands.ab3@342> INCLUDE "internal_commands.ab3"
0003C43D <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@347> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@348> INCLUDE "internal_commands.ab3"
0003C44B <internal_commands.ab3@349> INCLUDE "internal_commands.ab3"
0003C450 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003C454 <internal_commands.ab3@354> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@355> INCLUDE "internal_commands.ab3"
0003C45D <internal_commands.ab3@356> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@361> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@362> INCLUDE "internal_commands.ab3"
0003C46F <internal_commands.ab3@363> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@369> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@370> INCLUDE "internal_commands.ab3"
0003C4B1 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003C4B8 <internal_commands.ab3@376> INCLUDE "internal_commands.ab3"
0003C4BE <internal_commands.ab3@377> INCLUDE "internal_commands.ab3"
0003C4BF <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003C4C6 <internal_commands.ab3@383> INCLUDE "internal_commands.ab3"
0003C4CC <internal_commands.ab3@384> INCLUDE "internal_commands.ab3"
0003C4CD <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@389> INCLUDE "internal_commands.ab3"
0003C4D4 <internal_commands.ab3@390> INCLUDE "internal_commands.ab3"
0003C4DB <internal_commands.ab3@391> INCLUDE "internal_commands.ab3"
0003C4DC <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@397> INCLUDE "internal_commands.ab3"
0003C4E8 <internal_commands.ab3@398> INCLUDE "internal_commands.ab3"
0003C4F1 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003C4F6 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@404> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@405> INCLUDE "internal_commands.ab3"
0003C50D <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003C512 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@411> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@412> INCLUDE "internal_commands.ab3"
0003C529 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003C52E <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@418> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@419> INCLUDE "internal_commands.ab3"
0003C545 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@424> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@425> INCLUDE "internal_commands.ab3"
0003C551 <internal_commands.ab3@426> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@427> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@517> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003C55D <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@524> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@525> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@526> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@532> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003C579 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@539> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@540> INCLUDE "internal_commands.ab3"
0003C584 <internal_commands.ab3@541> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@547> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003C595 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@554> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@555> INCLUDE "internal_commands.ab3"
0003C5A0 <internal_commands.ab3@556> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@562> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003C5B1 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@569> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@570> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@571> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@577> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003C5CD <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@584> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@585> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@586> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@592> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003C5E9 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@599> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@600> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@601> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@607> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C605 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@614> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@615> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@616> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@622> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C621 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@629> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@630> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@631> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@637> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C63C <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C63D <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@644> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@645> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@646> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C652 <internal_commands.ab3@652> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C659 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C65A <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@659> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@660> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@661> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@667> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C675 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C676 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@674> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@675> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@676> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@682> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C691 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@689> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@690> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@691> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@697> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C6AD <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C6AE <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C6B0 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@704> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@705> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@706> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@712> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C6C9 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C6CC <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@719> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@720> INCLUDE "internal_commands.ab3"
0003C6D4 <internal_commands.ab3@721> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@727> INCLUDE "internal_commands.ab3"
0003C6E0 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C6E5 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C6E8 <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@734> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@735> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@736> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C6F6 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@742> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C701 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C704 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@749> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@750> INCLUDE "internal_commands.ab3"
0003C70C <internal_commands.ab3@751> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C712 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@757> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C71D <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C720 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@764> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@765> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@766> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C72E <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C732 <internal_commands.ab3@772> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C739 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C73C <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@779> INCLUDE "internal_commands.ab3"
0003C742 <internal_commands.ab3@780> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@781> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@787> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C755 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C756 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@794> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@795> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@796> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@802> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C771 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C772 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@809> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@810> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@811> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C782 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@817> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C78D <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C78E <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@824> INCLUDE "internal_commands.ab3"
0003C796 <internal_commands.ab3@825> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@826> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C79E <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C7A2 <internal_commands.ab3@832> INCLUDE "internal_commands.ab3"
0003C7A4 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C7A9 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@839> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@840> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@841> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@847> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C7C5 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C7C8 <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@854> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@855> INCLUDE "internal_commands.ab3"
0003C7D0 <internal_commands.ab3@856> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@862> INCLUDE "internal_commands.ab3"
0003C7DC <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C7E1 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C7E4 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@869> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@870> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@871> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@877> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C7FD <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C800 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@884> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@885> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@886> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C80E <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@892> INCLUDE "internal_commands.ab3"
0003C814 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C819 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C81C <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@899> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@900> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@901> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C82A <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@907> INCLUDE "internal_commands.ab3"
0003C830 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C835 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@914> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@915> INCLUDE "internal_commands.ab3"
0003C840 <internal_commands.ab3@916> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@922> INCLUDE "internal_commands.ab3"
0003C84C <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C851 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C854 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@929> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@930> INCLUDE "internal_commands.ab3"
0003C85C <internal_commands.ab3@931> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@937> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C86D <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C870 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@944> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@945> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@946> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C87E <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@952> INCLUDE "internal_commands.ab3"
0003C884 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C889 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C88C <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@959> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@960> INCLUDE "internal_commands.ab3"
0003C894 <internal_commands.ab3@961> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@967> INCLUDE "internal_commands.ab3"
0003C8A0 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C8A5 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C8A8 <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@974> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@975> INCLUDE "internal_commands.ab3"
0003C8B0 <internal_commands.ab3@976> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@982> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C8C1 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C8C4 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@989> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@990> INCLUDE "internal_commands.ab3"
0003C8CC <internal_commands.ab3@991> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@997> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C8DD <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C8E0 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@1004> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@1005> INCLUDE "internal_commands.ab3"
0003C8E8 <internal_commands.ab3@1006> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@1012> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C8F9 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C8FC <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@1019> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@1020> INCLUDE "internal_commands.ab3"
0003C904 <internal_commands.ab3@1021> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@1027> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C915 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C918 <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C91C <internal_commands.ab3@1034> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@1035> INCLUDE "internal_commands.ab3"
0003C920 <internal_commands.ab3@1036> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C92A <internal_commands.ab3@1042> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C931 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C934 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@1049> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@1050> INCLUDE "internal_commands.ab3"
0003C93C <internal_commands.ab3@1051> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@1057> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C94D <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C950 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@1064> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@1065> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@1066> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C962 <internal_commands.ab3@1072> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C969 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C96C <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C970 <internal_commands.ab3@1079> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@1080> INCLUDE "internal_commands.ab3"
0003C974 <internal_commands.ab3@1081> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@1087> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C985 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C988 <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@1094> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@1095> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@1096> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C99A <internal_commands.ab3@1102> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C9A1 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C9A4 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C9A8 <internal_commands.ab3@1109> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@1110> INCLUDE "internal_commands.ab3"
0003C9AC <internal_commands.ab3@1111> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@1117> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C9BD <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C9C0 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C9C4 <internal_commands.ab3@1124> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@1125> INCLUDE "internal_commands.ab3"
0003C9C8 <internal_commands.ab3@1126> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C9CE <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@1132> INCLUDE "internal_commands.ab3"
0003C9D4 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C9D9 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C9DC <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@1139> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@1140> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@1141> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C9EA <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C9EE <internal_commands.ab3@1147> INCLUDE "internal_commands.ab3"
0003C9F0 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C9F5 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C9F6 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C9F8 <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C9FC <internal_commands.ab3@1154> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@1155> INCLUDE "internal_commands.ab3"
0003CA00 <internal_commands.ab3@1156> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@1162> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003CA11 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003CA14 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@1169> INCLUDE "internal_commands.ab3"
0003CA1A <internal_commands.ab3@1170> INCLUDE "internal_commands.ab3"
0003CA1C <internal_commands.ab3@1171> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003CA22 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003CA26 <internal_commands.ab3@1177> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003CA2D <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@1184> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@1185> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003CA3E <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003CA42 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003CA49 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003CA4C <internal_commands.ab3@1198> INCLUDE "internal_commands.ab3"
0003CA50 <internal_commands.ab3@1199> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@1200> INCLUDE "internal_commands.ab3"
0003CA54 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003CA5E <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003CA65 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@1213> INCLUDE "internal_commands.ab3"
0003CA6C <internal_commands.ab3@1214> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@1215> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003CA76 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003CA7A <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003CA7C <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003CA81 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003CA82 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@1228> INCLUDE "internal_commands.ab3"
0003CA88 <internal_commands.ab3@1229> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@1230> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003CA96 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003CA9D <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003CA9E <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@1243> INCLUDE "internal_commands.ab3"
0003CAA4 <internal_commands.ab3@1244> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@1245> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003CAAC <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003CAB2 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003CAB9 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003CABA <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@1258> INCLUDE "internal_commands.ab3"
0003CAC0 <internal_commands.ab3@1259> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@1260> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003CAC8 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003CACE <internal_commands.ab3@1266> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003CAD4 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003CAD5 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003CAD6 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003CADC <internal_commands.ab3@1273> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@1274> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@1275> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003CAEA <internal_commands.ab3@1281> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003CAF1 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003CAF2 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003CAF8 <internal_commands.ab3@1288> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@1289> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@1290> INCLUDE "internal_commands.ab3"
0003CB00 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003CB06 <internal_commands.ab3@1296> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003CB0C <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003CB0D <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003CB0E <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003CB14 <internal_commands.ab3@1303> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@1304> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@1305> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003CB22 <internal_commands.ab3@1311> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003CB29 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003CB2A <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003CB30 <internal_commands.ab3@1318> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@1319> INCLUDE "internal_commands.ab3"
0003CB34 <internal_commands.ab3@1320> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003CB3E <internal_commands.ab3@1326> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003CB45 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003CB46 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003CB4C <internal_commands.ab3@1333> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@1334> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@1335> INCLUDE "internal_commands.ab3"
0003CB54 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003CB5A <internal_commands.ab3@1341> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003CB60 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003CB61 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003CB62 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003CB68 <internal_commands.ab3@1348> INCLUDE "internal_commands.ab3"
0003CB6A <internal_commands.ab3@1349> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@1350> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003CB72 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003CB76 <internal_commands.ab3@1356> INCLUDE "internal_commands.ab3"
0003CB78 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003CB7D <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003CB7E <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003CB84 <internal_commands.ab3@1363> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@1364> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@1365> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003CB8E <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003CB92 <internal_commands.ab3@1371> INCLUDE "internal_commands.ab3"
0003CB94 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003CB99 <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003CB9A <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@1378> INCLUDE "internal_commands.ab3"
0003CBA2 <internal_commands.ab3@1379> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@1380> INCLUDE "internal_commands.ab3"
0003CBA8 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003CBAA <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@1386> INCLUDE "internal_commands.ab3"
0003CBB0 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003CBB5 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003CBB6 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003CBB8 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@1393> INCLUDE "internal_commands.ab3"
0003CBBE <internal_commands.ab3@1394> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@1395> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003CBC6 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@1401> INCLUDE "internal_commands.ab3"
0003CBCC <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003CBD4 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003CBD5 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003CBDC <internal_commands.ab3@1408> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@1409> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@1410> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003CBE6 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@1416> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003CBF1 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003CBF2 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@1423> INCLUDE "internal_commands.ab3"
0003CBFA <internal_commands.ab3@1424> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@1425> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003CC02 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003CC06 <internal_commands.ab3@1431> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003CC0D <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003CC0E <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003CC14 <internal_commands.ab3@1438> INCLUDE "internal_commands.ab3"
0003CC16 <internal_commands.ab3@1439> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@1440> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003CC1E <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003CC22 <internal_commands.ab3@1446> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003CC29 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003CC2A <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003CC30 <internal_commands.ab3@1453> INCLUDE "internal_commands.ab3"
0003CC32 <internal_commands.ab3@1454> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@1455> INCLUDE "internal_commands.ab3"
0003CC38 <internal_commands.ab3@1456> INCLUDE "internal_commands.ab3"
0003CC3A <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003CC3E <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@1462> INCLUDE "internal_commands.ab3"
0003CC45 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003CC46 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003CC4C <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003CC4E <internal_commands.ab3@1469> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@1470> INCLUDE "internal_commands.ab3"
0003CC54 <internal_commands.ab3@1471> INCLUDE "internal_commands.ab3"
0003CC56 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003CC5A <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003CC5C <internal_commands.ab3@1477> INCLUDE "internal_commands.ab3"
0003CC60 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003CC61 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003CC6A <internal_commands.ab3@1484> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@1485> INCLUDE "internal_commands.ab3"
0003CC70 <internal_commands.ab3@1486> INCLUDE "internal_commands.ab3"
0003CC72 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003CC76 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@1492> INCLUDE "internal_commands.ab3"
0003CC7C <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003CC7D <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003CC7E <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003CC84 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003CC86 <internal_commands.ab3@1499> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@1500> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@1501> INCLUDE "internal_commands.ab3"
0003CC8E <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003CC92 <internal_commands.ab3@1506> INCLUDE "internal_commands.ab3"
0003CC94 <internal_commands.ab3@1507> INCLUDE "internal_commands.ab3"
0003CC99 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003CC9A <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003CC9C <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003CCA0 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003CCA2 <internal_commands.ab3@1514> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@1515> INCLUDE "internal_commands.ab3"
0003CCA8 <internal_commands.ab3@1516> INCLUDE "internal_commands.ab3"
0003CCAA <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003CCAE <internal_commands.ab3@1521> INCLUDE "internal_commands.ab3"
0003CCB0 <internal_commands.ab3@1522> INCLUDE "internal_commands.ab3"
0003CCB5 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003CCB6 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003CCB8 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003CCBC <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003CCBE <internal_commands.ab3@1529> INCLUDE "internal_commands.ab3"
0003CCC0 <internal_commands.ab3@1530> INCLUDE "internal_commands.ab3"
0003CCC4 <internal_commands.ab3@1531> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003CCCA <internal_commands.ab3@1537> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003CCD2 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003CCD3 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003CCD4 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003CCD6 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003CCDA <internal_commands.ab3@1544> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@1545> INCLUDE "internal_commands.ab3"
0003CCDE <internal_commands.ab3@1546> INCLUDE "internal_commands.ab3"
0003CCE2 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003CCE4 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003CCE8 <internal_commands.ab3@1552> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003CCF0 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003CCF1 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003CCF4 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003CCF8 <internal_commands.ab3@1559> INCLUDE "internal_commands.ab3"
0003CCFA <internal_commands.ab3@1560> INCLUDE "internal_commands.ab3"
0003CCFC <internal_commands.ab3@1561> INCLUDE "internal_commands.ab3"
0003CD00 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003CD02 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@1567> INCLUDE "internal_commands.ab3"
0003CD08 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003CD0E <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003CD0F <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003CD10 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003CD16 <internal_commands.ab3@1574> INCLUDE "internal_commands.ab3"
0003CD18 <internal_commands.ab3@1575> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@1576> INCLUDE "internal_commands.ab3"
0003CD1E <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003CD20 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003CD24 <internal_commands.ab3@1582> INCLUDE "internal_commands.ab3"
0003CD26 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003CD2B <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003CD2C <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003CD2E <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003CD32 <internal_commands.ab3@1589> INCLUDE "internal_commands.ab3"
0003CD34 <internal_commands.ab3@1590> INCLUDE "internal_commands.ab3"
0003CD36 <internal_commands.ab3@1591> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003CD3C <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003CD40 <internal_commands.ab3@1597> INCLUDE "internal_commands.ab3"
0003CD42 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003CD47 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003CD48 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003CD4A <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003CD4E <internal_commands.ab3@1604> INCLUDE "internal_commands.ab3"
0003CD50 <internal_commands.ab3@1605> INCLUDE "internal_commands.ab3"
0003CD52 <internal_commands.ab3@1606> INCLUDE "internal_commands.ab3"
0003CD56 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003CD58 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003CD5C <internal_commands.ab3@1612> INCLUDE "internal_commands.ab3"
0003CD5E <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003CD63 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003CD64 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003CD66 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003CD6A <internal_commands.ab3@1619> INCLUDE "internal_commands.ab3"
0003CD6C <internal_commands.ab3@1620> INCLUDE "internal_commands.ab3"
0003CD6E <internal_commands.ab3@1621> INCLUDE "internal_commands.ab3"
0003CD72 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003CD74 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003CD78 <internal_commands.ab3@1627> INCLUDE "internal_commands.ab3"
0003CD7A <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003CD7E <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003CD7F <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003CD80 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003CD82 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003CD86 <internal_commands.ab3@1634> INCLUDE "internal_commands.ab3"
0003CD88 <internal_commands.ab3@1635> INCLUDE "internal_commands.ab3"
0003CD8A <internal_commands.ab3@1636> INCLUDE "internal_commands.ab3"
0003CD8E <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003CD90 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003CD94 <internal_commands.ab3@1642> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003CD9B <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003CD9C <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003CD9E <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003CDA2 <internal_commands.ab3@1649> INCLUDE "internal_commands.ab3"
0003CDA4 <internal_commands.ab3@1650> INCLUDE "internal_commands.ab3"
0003CDA6 <internal_commands.ab3@1651> INCLUDE "internal_commands.ab3"
0003CDAA <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003CDAC <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003CDB0 <internal_commands.ab3@1657> INCLUDE "internal_commands.ab3"
0003CDB2 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003CDB6 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003CDB7 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003CDB8 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003CDBA <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003CDBE <internal_commands.ab3@1664> INCLUDE "internal_commands.ab3"
0003CDC0 <internal_commands.ab3@1665> INCLUDE "internal_commands.ab3"
0003CDC2 <internal_commands.ab3@1666> INCLUDE "internal_commands.ab3"
0003CDC6 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003CDC8 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003CDCC <internal_commands.ab3@1672> INCLUDE "internal_commands.ab3"
0003CDCE <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003CDD2 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003CDD3 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003CDD4 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@1679> INCLUDE "internal_commands.ab3"
0003CDDC <internal_commands.ab3@1680> INCLUDE "internal_commands.ab3"
0003CDDE <internal_commands.ab3@1681> INCLUDE "internal_commands.ab3"
0003CDE2 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003CDE4 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003CDE8 <internal_commands.ab3@1687> INCLUDE "internal_commands.ab3"
0003CDEA <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003CDED <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003CDF0 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@1694> INCLUDE "internal_commands.ab3"
0003CDF6 <internal_commands.ab3@1695> INCLUDE "internal_commands.ab3"
0003CDF8 <internal_commands.ab3@1696> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003CDFE <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003CE02 <internal_commands.ab3@1702> INCLUDE "internal_commands.ab3"
0003CE04 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003CE08 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003CE09 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003CE0A <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003CE0C <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@1709> INCLUDE "internal_commands.ab3"
0003CE12 <internal_commands.ab3@1710> INCLUDE "internal_commands.ab3"
0003CE14 <internal_commands.ab3@1711> INCLUDE "internal_commands.ab3"
0003CE18 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003CE1A <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003CE1E <internal_commands.ab3@1717> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003CE24 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003CE25 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003CE26 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003CE28 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003CE2C <internal_commands.ab3@1724> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@1725> INCLUDE "internal_commands.ab3"
0003CE30 <internal_commands.ab3@1726> INCLUDE "internal_commands.ab3"
0003CE34 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@1732> INCLUDE "internal_commands.ab3"
0003CE3C <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003CE43 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003CE44 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003CE46 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@1739> INCLUDE "internal_commands.ab3"
0003CE4C <internal_commands.ab3@1740> INCLUDE "internal_commands.ab3"
0003CE4E <internal_commands.ab3@1741> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003CE54 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003CE58 <internal_commands.ab3@1747> INCLUDE "internal_commands.ab3"
0003CE5A <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003CE5E <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003CE5F <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003CE60 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003CE62 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003CE66 <internal_commands.ab3@1754> INCLUDE "internal_commands.ab3"
0003CE68 <internal_commands.ab3@1755> INCLUDE "internal_commands.ab3"
0003CE6A <internal_commands.ab3@1756> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003CE70 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003CE74 <internal_commands.ab3@1762> INCLUDE "internal_commands.ab3"
0003CE76 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003CE7A <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003CE7B <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003CE7C <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003CE7E <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003CE82 <internal_commands.ab3@1769> INCLUDE "internal_commands.ab3"
0003CE84 <internal_commands.ab3@1770> INCLUDE "internal_commands.ab3"
0003CE86 <internal_commands.ab3@1771> INCLUDE "internal_commands.ab3"
0003CE8A <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003CE8C <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003CE90 <internal_commands.ab3@1777> INCLUDE "internal_commands.ab3"
0003CE92 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003CE97 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003CE98 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003CE9A <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003CE9E <internal_commands.ab3@1784> INCLUDE "internal_commands.ab3"
0003CEA0 <internal_commands.ab3@1785> INCLUDE "internal_commands.ab3"
0003CEA2 <internal_commands.ab3@1786> INCLUDE "internal_commands.ab3"
0003CEA6 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003CEA8 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003CEAC <internal_commands.ab3@1792> INCLUDE "internal_commands.ab3"
0003CEAE <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003CEB3 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003CEB4 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003CEB6 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@1799> INCLUDE "internal_commands.ab3"
0003CEBC <internal_commands.ab3@1800> INCLUDE "internal_commands.ab3"
0003CEBE <internal_commands.ab3@1801> INCLUDE "internal_commands.ab3"
0003CEC2 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003CEC4 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003CEC8 <internal_commands.ab3@1807> INCLUDE "internal_commands.ab3"
0003CECA <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003CECE <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003CECF <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003CED0 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003CED2 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003CED6 <internal_commands.ab3@1814> INCLUDE "internal_commands.ab3"
0003CED8 <internal_commands.ab3@1815> INCLUDE "internal_commands.ab3"
0003CEDA <internal_commands.ab3@1816> INCLUDE "internal_commands.ab3"
0003CEDE <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003CEE0 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003CEE4 <internal_commands.ab3@1822> INCLUDE "internal_commands.ab3"
0003CEE6 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003CEEA <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003CEEB <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003CEEC <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003CEEE <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003CEF2 <internal_commands.ab3@1829> INCLUDE "internal_commands.ab3"
0003CEF4 <internal_commands.ab3@1830> INCLUDE "internal_commands.ab3"
0003CEF6 <internal_commands.ab3@1831> INCLUDE "internal_commands.ab3"
0003CEFA <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003CEFC <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003CF00 <internal_commands.ab3@1837> INCLUDE "internal_commands.ab3"
0003CF02 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003CF06 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003CF07 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003CF08 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003CF0A <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003CF0E <internal_commands.ab3@1844> INCLUDE "internal_commands.ab3"
0003CF10 <internal_commands.ab3@1845> INCLUDE "internal_commands.ab3"
0003CF12 <internal_commands.ab3@1846> INCLUDE "internal_commands.ab3"
0003CF16 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003CF18 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003CF1C <internal_commands.ab3@1852> INCLUDE "internal_commands.ab3"
0003CF1E <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003CF23 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003CF24 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003CF26 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003CF2A <internal_commands.ab3@1859> INCLUDE "internal_commands.ab3"
0003CF2C <internal_commands.ab3@1860> INCLUDE "internal_commands.ab3"
0003CF2E <internal_commands.ab3@1861> INCLUDE "internal_commands.ab3"
0003CF32 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003CF34 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003CF38 <internal_commands.ab3@1867> INCLUDE "internal_commands.ab3"
0003CF3A <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003CF3E <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003CF3F <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003CF40 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003CF42 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003CF46 <internal_commands.ab3@1874> INCLUDE "internal_commands.ab3"
0003CF48 <internal_commands.ab3@1875> INCLUDE "internal_commands.ab3"
0003CF4A <internal_commands.ab3@1876> INCLUDE "internal_commands.ab3"
0003CF4E <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003CF50 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003CF54 <internal_commands.ab3@1882> INCLUDE "internal_commands.ab3"
0003CF56 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003CF5A <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003CF5B <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003CF5C <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003CF5E <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003CF62 <internal_commands.ab3@1889> INCLUDE "internal_commands.ab3"
0003CF64 <internal_commands.ab3@1890> INCLUDE "internal_commands.ab3"
0003CF66 <internal_commands.ab3@1891> INCLUDE "internal_commands.ab3"
0003CF6A <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003CF6C <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003CF70 <internal_commands.ab3@1897> INCLUDE "internal_commands.ab3"
0003CF72 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003CF76 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003CF77 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003CF78 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003CF7A <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003CF7E <internal_commands.ab3@1904> INCLUDE "internal_commands.ab3"
0003CF80 <internal_commands.ab3@1905> INCLUDE "internal_commands.ab3"
0003CF82 <internal_commands.ab3@1906> INCLUDE "internal_commands.ab3"
0003CF86 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003CF88 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003CF8C <internal_commands.ab3@1912> INCLUDE "internal_commands.ab3"
0003CF8E <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003CF92 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003CF93 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003CF94 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003CF96 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003CF9A <internal_commands.ab3@1919> INCLUDE "internal_commands.ab3"
0003CF9C <internal_commands.ab3@1920> INCLUDE "internal_commands.ab3"
0003CF9E <internal_commands.ab3@1921> INCLUDE "internal_commands.ab3"
0003CFA2 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003CFA4 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003CFA8 <internal_commands.ab3@1927> INCLUDE "internal_commands.ab3"
0003CFAA <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003CFAE <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003CFAF <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003CFB0 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003CFB2 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003CFB6 <internal_commands.ab3@1934> INCLUDE "internal_commands.ab3"
0003CFB8 <internal_commands.ab3@1935> INCLUDE "internal_commands.ab3"
0003CFBA <internal_commands.ab3@1936> INCLUDE "internal_commands.ab3"
0003CFBE <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003CFC0 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003CFC4 <internal_commands.ab3@1942> INCLUDE "internal_commands.ab3"
0003CFC6 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003CFCA <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003CFCB <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003CFCC <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003CFCE <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003CFD2 <internal_commands.ab3@1949> INCLUDE "internal_commands.ab3"
0003CFD4 <internal_commands.ab3@1950> INCLUDE "internal_commands.ab3"
0003CFD6 <internal_commands.ab3@1951> INCLUDE "internal_commands.ab3"
0003CFDA <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003CFDC <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003CFE0 <internal_commands.ab3@1957> INCLUDE "internal_commands.ab3"
0003CFE2 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003CFE6 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003CFE7 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003CFE8 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003CFEA <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003CFEE <internal_commands.ab3@1964> INCLUDE "internal_commands.ab3"
0003CFF0 <internal_commands.ab3@1965> INCLUDE "internal_commands.ab3"
0003CFF2 <internal_commands.ab3@1966> INCLUDE "internal_commands.ab3"
0003CFF6 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003CFF8 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003CFFC <internal_commands.ab3@1972> INCLUDE "internal_commands.ab3"
0003CFFE <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003D002 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003D003 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003D004 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003D006 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003D00A <internal_commands.ab3@1979> INCLUDE "internal_commands.ab3"
0003D00C <internal_commands.ab3@1980> INCLUDE "internal_commands.ab3"
0003D00E <internal_commands.ab3@1981> INCLUDE "internal_commands.ab3"
0003D012 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003D014 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003D018 <internal_commands.ab3@1987> INCLUDE "internal_commands.ab3"
0003D01A <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003D01E <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003D01F <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003D020 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003D022 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003D026 <internal_commands.ab3@1994> INCLUDE "internal_commands.ab3"
0003D028 <internal_commands.ab3@1995> INCLUDE "internal_commands.ab3"
0003D02A <internal_commands.ab3@1996> INCLUDE "internal_commands.ab3"
0003D02E <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003D030 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003D034 <internal_commands.ab3@2002> INCLUDE "internal_commands.ab3"
0003D036 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003D03A <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003D03B <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003D03C <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003D03E <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003D042 <internal_commands.ab3@2009> INCLUDE "internal_commands.ab3"
0003D044 <internal_commands.ab3@2010> INCLUDE "internal_commands.ab3"
0003D046 <internal_commands.ab3@2011> INCLUDE "internal_commands.ab3"
0003D04A <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003D050 <internal_commands.ab3@2017> INCLUDE "internal_commands.ab3"
0003D052 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003D056 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003D057 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003D058 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003D05A <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003D05E <internal_commands.ab3@2024> INCLUDE "internal_commands.ab3"
0003D060 <internal_commands.ab3@2025> INCLUDE "internal_commands.ab3"
0003D062 <internal_commands.ab3@2026> INCLUDE "internal_commands.ab3"
0003D066 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003D068 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003D06C <internal_commands.ab3@2032> INCLUDE "internal_commands.ab3"
0003D06E <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003D072 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003D073 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003D074 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003D076 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003D07A <internal_commands.ab3@2039> INCLUDE "internal_commands.ab3"
0003D07C <internal_commands.ab3@2040> INCLUDE "internal_commands.ab3"
0003D07E <internal_commands.ab3@2041> INCLUDE "internal_commands.ab3"
0003D082 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003D084 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003D088 <internal_commands.ab3@2047> INCLUDE "internal_commands.ab3"
0003D08A <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003D08E <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003D08F <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003D092 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@2054> INCLUDE "internal_commands.ab3"
0003D098 <internal_commands.ab3@2055> INCLUDE "internal_commands.ab3"
0003D09A <internal_commands.ab3@2056> INCLUDE "internal_commands.ab3"
0003D09E <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003D0A0 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003D0A4 <internal_commands.ab3@2062> INCLUDE "internal_commands.ab3"
0003D0A6 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003D0AA <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003D0AB <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003D0AE <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003D0B2 <internal_commands.ab3@2069> INCLUDE "internal_commands.ab3"
0003D0B4 <internal_commands.ab3@2070> INCLUDE "internal_commands.ab3"
0003D0B6 <internal_commands.ab3@2071> INCLUDE "internal_commands.ab3"
0003D0BA <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003D0BC <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003D0C0 <internal_commands.ab3@2077> INCLUDE "internal_commands.ab3"
0003D0C2 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003D0C5 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003D0C6 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003D0C8 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003D0CC <internal_commands.ab3@2084> INCLUDE "internal_commands.ab3"
0003D0CE <internal_commands.ab3@2085> INCLUDE "internal_commands.ab3"
0003D0D0 <internal_commands.ab3@2086> INCLUDE "internal_commands.ab3"
0003D0D4 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003D0D6 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003D0DA <internal_commands.ab3@2092> INCLUDE "internal_commands.ab3"
0003D0DC <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003D0DF <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003D0E0 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003D0E2 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003D0E6 <internal_commands.ab3@2099> INCLUDE "internal_commands.ab3"
0003D0E8 <internal_commands.ab3@2100> INCLUDE "internal_commands.ab3"
0003D0EA <internal_commands.ab3@2101> INCLUDE "internal_commands.ab3"
0003D0EE <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003D0F0 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003D0F4 <internal_commands.ab3@2107> INCLUDE "internal_commands.ab3"
0003D0F6 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003D0FB <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003D0FC <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003D0FE <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003D102 <internal_commands.ab3@2114> INCLUDE "internal_commands.ab3"
0003D104 <internal_commands.ab3@2115> INCLUDE "internal_commands.ab3"
0003D106 <internal_commands.ab3@2116> INCLUDE "internal_commands.ab3"
0003D10A <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003D10C <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003D110 <internal_commands.ab3@2122> INCLUDE "internal_commands.ab3"
0003D112 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003D116 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003D117 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003D118 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003D11A <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003D11E <internal_commands.ab3@2129> INCLUDE "internal_commands.ab3"
0003D120 <internal_commands.ab3@2130> INCLUDE "internal_commands.ab3"
0003D122 <internal_commands.ab3@2131> INCLUDE "internal_commands.ab3"
0003D126 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003D128 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003D12C <internal_commands.ab3@2137> INCLUDE "internal_commands.ab3"
0003D12E <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003D133 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003D134 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003D136 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003D13A <internal_commands.ab3@2144> INCLUDE "internal_commands.ab3"
0003D13C <internal_commands.ab3@2145> INCLUDE "internal_commands.ab3"
0003D13E <internal_commands.ab3@2146> INCLUDE "internal_commands.ab3"
0003D142 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003D144 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003D148 <internal_commands.ab3@2152> INCLUDE "internal_commands.ab3"
0003D14A <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003D14F <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003D150 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003D152 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003D156 <internal_commands.ab3@2159> INCLUDE "internal_commands.ab3"
0003D158 <internal_commands.ab3@2160> INCLUDE "internal_commands.ab3"
0003D15A <internal_commands.ab3@2161> INCLUDE "internal_commands.ab3"
0003D15E <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003D160 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003D164 <internal_commands.ab3@2167> INCLUDE "internal_commands.ab3"
0003D166 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003D16B <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003D16C <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003D16E <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003D172 <internal_commands.ab3@2174> INCLUDE "internal_commands.ab3"
0003D174 <internal_commands.ab3@2175> INCLUDE "internal_commands.ab3"
0003D176 <internal_commands.ab3@2176> INCLUDE "internal_commands.ab3"
0003D17A <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003D17C <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003D180 <internal_commands.ab3@2182> INCLUDE "internal_commands.ab3"
0003D182 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003D187 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003D188 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003D18A <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003D18E <internal_commands.ab3@2189> INCLUDE "internal_commands.ab3"
0003D190 <internal_commands.ab3@2190> INCLUDE "internal_commands.ab3"
0003D192 <internal_commands.ab3@2191> INCLUDE "internal_commands.ab3"
0003D196 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003D198 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003D19C <internal_commands.ab3@2197> INCLUDE "internal_commands.ab3"
0003D19E <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003D1A3 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003D1A4 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003D1A6 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003D1AA <internal_commands.ab3@2204> INCLUDE "internal_commands.ab3"
0003D1AC <internal_commands.ab3@2205> INCLUDE "internal_commands.ab3"
0003D1AE <internal_commands.ab3@2206> INCLUDE "internal_commands.ab3"
0003D1B2 <internal_commands.ab3@2207> INCLUDE "internal_commands.ab3"
0003D1B4 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003D1B8 <internal_commands.ab3@2212> INCLUDE "internal_commands.ab3"
0003D1BA <internal_commands.ab3@2213> INCLUDE "internal_commands.ab3"
0003D1BE <internal_commands.ab3@2214> INCLUDE "internal_commands.ab3"
0003D1BF <internal_commands.ab3@2215> INCLUDE "internal_commands.ab3"
0003D1C0 <internal_commands.ab3@2216> INCLUDE "internal_commands.ab3"
0003D1C2 <internal_commands.ab3@2218> INCLUDE "internal_commands.ab3"
0003D1C6 <internal_commands.ab3@2219> INCLUDE "internal_commands.ab3"
0003D1C8 <internal_commands.ab3@2220> INCLUDE "internal_commands.ab3"
0003D1CA <internal_commands.ab3@2221> INCLUDE "internal_commands.ab3"
0003D1CE <internal_commands.ab3@2222> INCLUDE "internal_commands.ab3"
0003D1D0 <internal_commands.ab3@2223> INCLUDE "internal_commands.ab3"
0003D1D4 <internal_commands.ab3@2227> INCLUDE "internal_commands.ab3"
0003D1D6 <internal_commands.ab3@2228> INCLUDE "internal_commands.ab3"
0003D1DB <internal_commands.ab3@2229> INCLUDE "internal_commands.ab3"
0003D1DC <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003D1DE <internal_commands.ab3@2233> INCLUDE "internal_commands.ab3"
0003D1E2 <internal_commands.ab3@2234> INCLUDE "internal_commands.ab3"
0003D1E4 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003D1E6 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003D1EA <internal_commands.ab3@2237> INCLUDE "internal_commands.ab3"
0003D1EC <internal_commands.ab3@2238> INCLUDE "internal_commands.ab3"
0003D1F0 <internal_commands.ab3@2242> INCLUDE "internal_commands.ab3"
0003D1F2 <internal_commands.ab3@2243> INCLUDE "internal_commands.ab3"
0003D1F8 <internal_commands.ab3@2244> INCLUDE "internal_commands.ab3"
0003D1F9 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003D1FA <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003D1FC <internal_commands.ab3@2248> INCLUDE "internal_commands.ab3"
0003D200 <internal_commands.ab3@2249> INCLUDE "internal_commands.ab3"
0003D202 <internal_commands.ab3@2250> INCLUDE "internal_commands.ab3"
0003D204 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003D208 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003D20A <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003D20E <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003D210 <internal_commands.ab3@2258> INCLUDE "internal_commands.ab3"
0003D214 <internal_commands.ab3@2259> INCLUDE "internal_commands.ab3"
0003D215 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003D216 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003D218 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003D21C <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003D21E <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003D220 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003D224 <internal_commands.ab3@2267> INCLUDE "internal_commands.ab3"
0003D226 <internal_commands.ab3@2268> INCLUDE "internal_commands.ab3"
0003D22A <internal_commands.ab3@2272> INCLUDE "internal_commands.ab3"
0003D22C <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003D231 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003D232 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003D234 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003D238 <internal_commands.ab3@2279> INCLUDE "internal_commands.ab3"
0003D23A <internal_commands.ab3@2280> INCLUDE "internal_commands.ab3"
0003D23C <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003D240 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003D242 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003D246 <internal_commands.ab3@2288> INCLUDE "internal_commands.ab3"
0003D248 <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003D24F <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003D250 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003D252 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003D254 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003D256 <internal_commands.ab3@2315> INCLUDE "internal_commands.ab3"
0003D258 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003D25A <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003D25C <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003D25E <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003D260 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003D262 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003D266 <internal_commands.ab3@2333> INCLUDE "internal_commands.ab3"
0003D268 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003D26A <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003D26C <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003D26E <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003D272 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003D278 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003D27C <internal_commands.ab3@2342> INCLUDE "internal_commands.ab3"
0003D27E <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003D280 <internal_commands.ab3@2344> INCLUDE "internal_commands.ab3"
0003D282 <internal_commands.ab3@2345> INCLUDE "internal_commands.ab3"
0003D284 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003D286 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003D288 <internal_commands.ab3@2354> INCLUDE "internal_commands.ab3"
0003D28C <internal_commands.ab3@2355> INCLUDE "internal_commands.ab3"
0003D290 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003D294 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003D298 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003D29C <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003D29E <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003D2A0 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003D2A4 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003D2A8 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003D2AC <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003D2B0 <internal_commands.ab3@2367> INCLUDE "internal_commands.ab3"
0003D2B2 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003D2B4 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003D2B8 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003D2BC <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003D2C0 <internal_commands.ab3@2374> INCLUDE "internal_commands.ab3"
0003D2C4 <internal_commands.ab3@2375> INCLUDE "internal_commands.ab3"
0003D2C6 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003D2C8 <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003D2CA <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003D2CE <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003D2D0 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003D2D4 <internal_commands.ab3@2384> INCLUDE "internal_commands.ab3"
0003D2D6 <internal_commands.ab3@2388> INCLUDE "internal_commands.ab3"
0003D2DA <internal_commands.ab3@2389> INCLUDE "internal_commands.ab3"
0003D2DC <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003D2E0 <internal_commands.ab3@2391> INCLUDE "internal_commands.ab3"
0003D2E4 <internal_commands.ab3@2392> INCLUDE "internal_commands.ab3"
0003D2E8 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003D2EC <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003D2F0 <internal_commands.ab3@2398> INCLUDE "internal_commands.ab3"
0003D2F4 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003D2F8 <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003D2FC <internal_commands.ab3@2402> INCLUDE "internal_commands.ab3"
0003D300 <internal_commands.ab3@2403> INCLUDE "internal_commands.ab3"
0003D304 <internal_commands.ab3@2404> INCLUDE "internal_commands.ab3"
0003D308 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003D30C <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003D310 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003D314 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003D318 <internal_commands.ab3@2412> INCLUDE "internal_commands.ab3"
0003D31C <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003D320 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003D324 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003D328 <internal_commands.ab3@2417> INCLUDE "internal_commands.ab3"
0003D32C <internal_commands.ab3@2418> INCLUDE "internal_commands.ab3"
0003D330 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003D334 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003D338 <internal_commands.ab3@2421> INCLUDE "internal_commands.ab3"
0003D33C <internal_commands.ab3@2422> INCLUDE "internal_commands.ab3"
0003D340 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003D344 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003D346 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003D34A <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003D34E <internal_commands.ab3@2430> INCLUDE "internal_commands.ab3"
0003D352 <internal_commands.ab3@2431> INCLUDE "internal_commands.ab3"
0003D356 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003D35A <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003D35E <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003D362 <internal_commands.ab3@2437> INCLUDE "internal_commands.ab3"
0003D366 <internal_commands.ab3@2438> INCLUDE "internal_commands.ab3"
0003D36A <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003D36C <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003D36E <internal_commands.ab3@2443> INCLUDE "internal_commands.ab3"
0003D370 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003D372 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003D374 <internal_commands.ab3@2446> INCLUDE "internal_commands.ab3"
0003D378 <internal_commands.ab3@2447> INCLUDE "internal_commands.ab3"
0003D37C <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003D380 <internal_commands.ab3@2451> INCLUDE "internal_commands.ab3"
0003D384 <internal_commands.ab3@2452> INCLUDE "internal_commands.ab3"
0003D386 <internal_commands.ab3@2453> INCLUDE "internal_commands.ab3"
0003D38A <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003D38E <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003D392 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003D396 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003D398 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003D39A <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003D39E <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003D3A2 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003D3A6 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003D3AA <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003D3AE <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003D3B2 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003D3B4 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003D3B6 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003D3BA <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003D3BE <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003D3C2 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003D3C4 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003D3C8 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003D3CC <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003D3CE <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003D3D2 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003D3D6 <internal_commands.ab3@2493> INCLUDE "internal_commands.ab3"
0003D3D8 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003D3DC <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003D3E0 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003D3E4 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003D3E8 <internal_commands.ab3@2502> INCLUDE "internal_commands.ab3"
0003D3EC <internal_commands.ab3@2503> INCLUDE "internal_commands.ab3"
0003D3EE <internal_commands.ab3@2507> INCLUDE "internal_commands.ab3"
0003D3F2 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003D3F4 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003D3F6 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003D3F8 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003D3FC <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003D400 <internal_commands.ab3@2515> INCLUDE "internal_commands.ab3"
0003D404 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003D408 <internal_commands.ab3@2517> INCLUDE "internal_commands.ab3"
0003D40C <internal_commands.ab3@2518> INCLUDE "internal_commands.ab3"
0003D410 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003D414 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003D418 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003D41C <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003D420 <internal_commands.ab3@2532> INCLUDE "internal_commands.ab3"
0003D424 <internal_commands.ab3@2533> INCLUDE "internal_commands.ab3"
0003D428 <internal_commands.ab3@2537> INCLUDE "internal_commands.ab3"
0003D42A <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003D42E <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003D432 <internal_commands.ab3@2542> INCLUDE "internal_commands.ab3"
0003D434 <internal_commands.ab3@2543> INCLUDE "internal_commands.ab3"
0003D436 <internal_commands.ab3@2544> INCLUDE "internal_commands.ab3"
0003D438 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003D43C <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003D440 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003D442 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003D446 <internal_commands.ab3@2549> INCLUDE "internal_commands.ab3"
0003D448 <internal_commands.ab3@2550> INCLUDE "internal_commands.ab3"
0003D44A <internal_commands.ab3@2551> INCLUDE "internal_commands.ab3"
0003D44C <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003D450 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003D454 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003D456 <internal_commands.ab3@2557> INCLUDE "internal_commands.ab3"
0003D458 <internal_commands.ab3@2558> INCLUDE "internal_commands.ab3"
0003D45C <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003D460 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003D464 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003D468 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003D46A <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003D46E <internal_commands.ab3@2564> INCLUDE "internal_commands.ab3"
0003D472 <internal_commands.ab3@2565> INCLUDE "internal_commands.ab3"
0003D476 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003D478 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003D47A <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003D47C <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003D47E <internal_commands.ab3@2572> INCLUDE "internal_commands.ab3"
0003D480 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003D482 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003D486 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003D48A <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003D48C <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003D490 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003D492 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003D496 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003D49A <internal_commands.ab3@2584> INCLUDE "internal_commands.ab3"
0003D49C <internal_commands.ab3@2585> INCLUDE "internal_commands.ab3"
0003D49E <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003D4A0 <internal_commands.ab3@2592> INCLUDE "internal_commands.ab3"
0003D4A4 <internal_commands.ab3@2593> INCLUDE "internal_commands.ab3"
0003D4A6 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003D4AA <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003D4AE <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003D4B2 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003D4B4 <internal_commands.ab3@2600> INCLUDE "internal_commands.ab3"
0003D4B8 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003D4BC <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003D4BE <internal_commands.ab3@2606> INCLUDE "internal_commands.ab3"
0003D4C2 <internal_commands.ab3@2607> INCLUDE "internal_commands.ab3"
0003D4C6 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003D4CA <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003D4CE <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003D4D2 <internal_commands.ab3@2613> INCLUDE "internal_commands.ab3"
0003D4D6 <internal_commands.ab3@2614> INCLUDE "internal_commands.ab3"
0003D4DA <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003D4DE <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003D4E0 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003D4E5 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003D4E6 <internal_commands.ab3@2627> INCLUDE "internal_commands.ab3"
0003D4EA <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003D4EC <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003D4F3 <internal_commands.ab3@2633> INCLUDE "internal_commands.ab3"
0003D4F4 <internal_commands.ab3@2634> INCLUDE "internal_commands.ab3"
0003D4F8 <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003D4FA <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003D501 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003D502 <internal_commands.ab3@2641> INCLUDE "internal_commands.ab3"
0003D506 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003D508 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003D510 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003D511 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003D512 <internal_commands.ab3@2655> INCLUDE "internal_commands.ab3"
0003D516 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003D518 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003D51D <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003D531 <internal_commands.ab3@2661> INCLUDE "internal_commands.ab3"
0003D532 <internal_commands.ab3@2662> INCLUDE "internal_commands.ab3"
0003D536 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003D538 <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003D53C <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D53D <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D53E <internal_commands.ab3@2669> INCLUDE "internal_commands.ab3"
0003D542 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D544 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D547 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D548 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D54C <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D54E <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D555 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D556 <internal_commands.ab3@2682> INCLUDE "internal_commands.ab3"
0003D55A <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D55C <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D562 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D56F <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D570 <internal_commands.ab3@2690> INCLUDE "internal_commands.ab3"
0003D574 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D576 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D57D <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D595 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D596 <internal_commands.ab3@2697> INCLUDE "internal_commands.ab3"
0003D59A <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D59C <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D5A0 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D5C3 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D5C4 <internal_commands.ab3@2704> INCLUDE "internal_commands.ab3"
0003D5C8 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D5CA <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D5D1 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D5DC <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D5E0 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D5E2 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D5E8 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D5E9 <internal_commands.ab3@2717> INCLUDE "internal_commands.ab3"
0003D5EA <internal_commands.ab3@2718> INCLUDE "internal_commands.ab3"
0003D5EE <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D5F0 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D5F5 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D5F6 <internal_commands.ab3@2724> INCLUDE "internal_commands.ab3"
0003D5FA <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D5FC <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D603 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D615 <internal_commands.ab3@2731> INCLUDE "internal_commands.ab3"
0003D616 <internal_commands.ab3@2732> INCLUDE "internal_commands.ab3"
0003D61A <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D61C <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D626 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D627 <internal_commands.ab3@2738> INCLUDE "internal_commands.ab3"
0003D628 <internal_commands.ab3@2739> INCLUDE "internal_commands.ab3"
0003D62C <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D62E <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D636 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D643 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D644 <internal_commands.ab3@2746> INCLUDE "internal_commands.ab3"
0003D648 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D64A <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D64D <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D688 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D68C <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D68E <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D692 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D693 <internal_commands.ab3@2759> INCLUDE "internal_commands.ab3"
0003D694 <internal_commands.ab3@2760> INCLUDE "internal_commands.ab3"
0003D698 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D69A <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D6A2 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D6A3 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D6A4 <internal_commands.ab3@2767> INCLUDE "internal_commands.ab3"
0003D6A8 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D6AA <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D6B2 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D6C2 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D6C6 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D6C8 <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D6D1 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D6D9 <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D6DA <internal_commands.ab3@2781> INCLUDE "internal_commands.ab3"
0003D6DE <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D6E0 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D6E8 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D6F1 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D6F2 <internal_commands.ab3@2788> INCLUDE "internal_commands.ab3"
0003D6F6 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D6F8 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D700 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D701 <internal_commands.ab3@2794> INCLUDE "internal_commands.ab3"
0003D702 <internal_commands.ab3@2795> INCLUDE "internal_commands.ab3"
0003D706 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D708 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D70E <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D70F <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D710 <internal_commands.ab3@2802> INCLUDE "internal_commands.ab3"
0003D714 <internal_commands.ab3@2805> INCLUDE "internal_commands.ab3"
0003D716 <internal_commands.ab3@2806> INCLUDE "internal_commands.ab3"
0003D71D <internal_commands.ab3@2807> INCLUDE "internal_commands.ab3"
0003D71E <internal_commands.ab3@2808> INCLUDE "internal_commands.ab3"
0003D722 <internal_commands.ab3@2812> INCLUDE "internal_commands.ab3"
0003D724 <internal_commands.ab3@2813> INCLUDE "internal_commands.ab3"
0003D72B <internal_commands.ab3@2814> INCLUDE "internal_commands.ab3"
0003D72C <internal_commands.ab3@2815> INCLUDE "internal_commands.ab3"
0003D730 <internal_commands.ab3@2819> INCLUDE "internal_commands.ab3"
0003D732 <internal_commands.ab3@2820> INCLUDE "internal_commands.ab3"
0003D739 <internal_commands.ab3@2821> INCLUDE "internal_commands.ab3"
0003D73A <internal_commands.ab3@2822> INCLUDE "internal_commands.ab3"
0003D73E <internal_commands.ab3@2826> INCLUDE "internal_commands.ab3"
0003D740 <internal_commands.ab3@2827> INCLUDE "internal_commands.ab3"
0003D747 <internal_commands.ab3@2828> INCLUDE "internal_commands.ab3"
0003D748 <internal_commands.ab3@2829> INCLUDE "internal_commands.ab3"
0003D74C <internal_commands.ab3@2833> INCLUDE "internal_commands.ab3"
0003D74E <internal_commands.ab3@2834> INCLUDE "internal_commands.ab3"
0003D753 <internal_commands.ab3@2835> INCLUDE "internal_commands.ab3"
0003D769 <internal_commands.ab3@2836> INCLUDE "internal_commands.ab3"
0003D76A <internal_commands.ab3@2837> INCLUDE "internal_commands.ab3"
0003D76E <internal_commands.ab3@2840> INCLUDE "internal_commands.ab3"
0003D770 <internal_commands.ab3@2841> INCLUDE "internal_commands.ab3"
0003D77A <internal_commands.ab3@2842> INCLUDE "internal_commands.ab3"
0003D77B <internal_commands.ab3@2843> INCLUDE "internal_commands.ab3"
0003D77C <internal_commands.ab3@2844> INCLUDE "internal_commands.ab3"
0003D780 <internal_commands.ab3@2847> INCLUDE "internal_commands.ab3"
0003D782 <internal_commands.ab3@2848> INCLUDE "internal_commands.ab3"
0003D78D <internal_commands.ab3@2849> INCLUDE "internal_commands.ab3"
0003D78E <internal_commands.ab3@2850> INCLUDE "internal_commands.ab3"
0003D792 <internal_commands.ab3@2854> INCLUDE "internal_commands.ab3"
0003D794 <internal_commands.ab3@2855> INCLUDE "internal_commands.ab3"
0003D7A0 <internal_commands.ab3@2856> INCLUDE "internal_commands.ab3"
0003D7CD <internal_commands.ab3@2857> INCLUDE "internal_commands.ab3"
0003D7CE <internal_commands.ab3@2858> INCLUDE "internal_commands.ab3"
0003D7D2 <internal_commands.ab3@2861> INCLUDE "internal_commands.ab3"
0003D7D4 <internal_commands.ab3@2862> INCLUDE "internal_commands.ab3"
0003D7DC <internal_commands.ab3@2863> INCLUDE "internal_commands.ab3"
0003D813 <internal_commands.ab3@2864> INCLUDE "internal_commands.ab3"
0003D814 <internal_commands.ab3@2865> INCLUDE "internal_commands.ab3"
0003D818 <internal_commands.ab3@2868> INCLUDE "internal_commands.ab3"
0003D81A <internal_commands.ab3@2869> INCLUDE "internal_commands.ab3"
0003D822 <internal_commands.ab3@2870> INCLUDE "internal_commands.ab3"
0003D841 <internal_commands.ab3@2871> INCLUDE "internal_commands.ab3"
0003D842 <internal_commands.ab3@2872> INCLUDE "internal_commands.ab3"
0003D846 <internal_commands.ab3@2875> INCLUDE "internal_commands.ab3"
0003D848 <internal_commands.ab3@2876> INCLUDE "internal_commands.ab3"
0003D84F <internal_commands.ab3@2877> INCLUDE "internal_commands.ab3"
0003D885 <internal_commands.ab3@2878> INCLUDE "internal_commands.ab3"
0003D886 <internal_commands.ab3@2879> INCLUDE "internal_commands.ab3"
0003D88A <internal_commands.ab3@2882> INCLUDE "internal_commands.ab3"
0003D88C <internal_commands.ab3@2883> INCLUDE "internal_commands.ab3"
0003D895 <internal_commands.ab3@2884> INCLUDE "internal_commands.ab3"
0003D8CA <internal_commands.ab3@2885> INCLUDE "internal_commands.ab3"
0003D8CE <internal_commands.ab3@2889> INCLUDE "internal_commands.ab3"
0003D8D0 <internal_commands.ab3@2890> INCLUDE "internal_commands.ab3"
0003D8E0 <internal_commands.ab3@2891> INCLUDE "internal_commands.ab3"
0003D917 <internal_commands.ab3@2892> INCLUDE "internal_commands.ab3"
0003D918 <internal_commands.ab3@2893> INCLUDE "internal_commands.ab3"
0003D918 <AmiBlitz3.ab3@30806> INCLUDE "internal_commands.ab3"
0003D91C <AmiBlitz3.ab3@30811>            Dc.l cif_lt                                     ;ciflt
0003D920 <AmiBlitz3.ab3@30812>            Dc.l cif_eq                                     ;cifeq
0003D924 <AmiBlitz3.ab3@30813>            Dc.l cif_gt                                     ;cifgt
0003D928 <AmiBlitz3.ab3@30814>            Ds.l 1                                          ;0
0003D92C <AmiBlitz3.ab3@30815>            Dc.l cif_le                                     ;cifle
0003D930 <AmiBlitz3.ab3@30816>            Dc.l cif_ne                                     ;cifne
0003D934 <AmiBlitz3.ab3@30817>            Dc.l cif_le                                     ;cifge
0003D938 <AmiBlitz3.ab3@30818>            Ds.l 1                                          ;0
0003D93C <AmiBlitz3.ab3@30819>            Dc.l cif_ge                                     ;cifge
0003D940 <AmiBlitz3.ab3@30820>            Dc.l cif_ne                                     ;cifne
0003D944 <AmiBlitz3.ab3@30821>            Dc.l cif_ge                                     ;cifge
0003D948 <AmiBlitz3.ab3@30822>            Ds.l 1                                          ;0
0003D94C <AmiBlitz3.ab3@30825>            Dc.l do_newtype                                 ;donewtype
0003D950 <AmiBlitz3.ab3@30826>            Dc.l do_end                                     ;doend
0003D954 <AmiBlitz3.ab3@30827>            Dc.l do_let                                     ;dolet
0003D958 <AmiBlitz3.ab3@30828>            Dc.l do_dim                                     ;dodim
0003D95C <AmiBlitz3.ab3@30829>            Dc.l do_goto                                    ;dogoto
0003D960 <AmiBlitz3.ab3@30830>            Dc.l do_gosub                                   ;dogosub
0003D964 <AmiBlitz3.ab3@30831>            Dc.l do_return                                  ;doreturn
0003D968 <AmiBlitz3.ab3@30832>            Dc.l do_statement                               ;dostate
0003D96C <AmiBlitz3.ab3@30833>            Dc.l do_function                                ;dofunc
0003D970 <AmiBlitz3.ab3@30834>            Dc.l do_mousewait                               ;domwait
0003D974 <AmiBlitz3.ab3@30835>            Dc.l do_if                                      ;doif
0003D978 <AmiBlitz3.ab3@30836>            Dc.l do_while                                   ;dowhile
0003D97C <AmiBlitz3.ab3@30837>            Dc.l do_Macro                                   ;domacro
0003D980 <AmiBlitz3.ab3@30838>            Dc.l do_select                                  ;doselect
0003D984 <AmiBlitz3.ab3@30839>            Dc.l do_case                                    ;docase
0003D988 <AmiBlitz3.ab3@30840>            Dc.l do_default                                 ;dodefault
0003D98C <AmiBlitz3.ab3@30841>            Dc.l do_AsmExit                                 ;doasmexit
0003D990 <AmiBlitz3.ab3@30842>            Dc.l do_xinclude                                ;doxinclude
0003D994 <AmiBlitz3.ab3@30843>            Dc.l do_INCLUDE                                 ;doinclude
0003D998 <AmiBlitz3.ab3@30844>            Dc.l do_syntax                                  ;syntaxerr
0003D99C <AmiBlitz3.ab3@30845>            Dc.l do_shared                                  ;doshared
0003D9A0 <AmiBlitz3.ab3@30846>            Dc.l do_for                                     ;dofor
0003D9A4 <AmiBlitz3.ab3@30847>            Dc.l do_next                                    ;donext
0003D9A8 <AmiBlitz3.ab3@30848>            Dc.l syntaxerr                                  ; To
0003D9AC <AmiBlitz3.ab3@30849>            Dc.l syntaxerr                                  ; Step
0003D9B0 <AmiBlitz3.ab3@30850>            Dc.l do_data                                    ;dodata
0003D9B4 <AmiBlitz3.ab3@30851>            Dc.l do_read                                    ;doread
0003D9B8 <AmiBlitz3.ab3@30855>            Dc.l syntaxerr                                  ; CNIF
0003D9BC <AmiBlitz3.ab3@30856>            Dc.l syntaxerr                                  ; CSIF
0003D9C0 <AmiBlitz3.ab3@30857>            Dc.l syntaxerr                                  ; CELSE
0003D9C4 <AmiBlitz3.ab3@30858>            Dc.l syntaxerr                                  ; CEND
0003D9C8 <AmiBlitz3.ab3@30859>            Dc.l do_cerr                                    ;docerr
0003D9CC <AmiBlitz3.ab3@30860>            Dc.l do_then                                    ;dothen
0003D9D0 <AmiBlitz3.ab3@30861>            Dc.l do_else                                    ;doelse
0003D9D4 <AmiBlitz3.ab3@30862>            Dc.l do_even4                                   ;doeven4
0003D9D8 <AmiBlitz3.ab3@30863>            Dc.l do_even8                                   ;doeven8
0003D9DC <AmiBlitz3.ab3@30865>            Dc.l do_dc                                      ;dodc
0003D9E0 <AmiBlitz3.ab3@30866>            Dc.l do_ds                                      ;dods
0003D9E4 <AmiBlitz3.ab3@30867>            Dc.l do_even                                    ;doeven
0003D9E8 <AmiBlitz3.ab3@30868>            Dc.l do_dcb                                     ;dodcb
0003D9EC <AmiBlitz3.ab3@30869>            Dc.l do_setreg                                  ;dosetreg
0003D9F0 <AmiBlitz3.ab3@30870>            Dc.l do_IncBin                                  ;doincbin
0003D9F4 <AmiBlitz3.ab3@30871>            Dc.l do_free                                    ;dofree
0003D9F8 <AmiBlitz3.ab3@30872>            Dc.l do_use                                     ;douse
0003D9FC <AmiBlitz3.ab3@30873>            Dc.l do_Stop                                    ;dostop
0003DA00 <AmiBlitz3.ab3@30874>            Dc.l do_Cont                                    ;docont
0003DA04 <AmiBlitz3.ab3@30875>            Dc.l syntaxerr                                  ;syntaxeer
0003DA08 <AmiBlitz3.ab3@30876>            Dc.l do_SetInt                                  ;dosetint
0003DA0C <AmiBlitz3.ab3@30877>            Dc.l do_ClrInt                                  ;doclrint
0003DA10 <AmiBlitz3.ab3@30878>            Dc.l do_MaxLen                                  ;domaxlen
0003DA14 <AmiBlitz3.ab3@30879>            Dc.l do_DEFTYPE                                 ;dodeftype
0003DA18 <AmiBlitz3.ab3@30880>            Dc.l do_BLITZ                                   ;doblitz
0003DA1C <AmiBlitz3.ab3@30881>            Dc.l do_AMIGA                                   ;doamiga
0003DA20 <AmiBlitz3.ab3@30882>            Dc.l do_QAMIGA                                  ;doqamiga
0003DA24 <AmiBlitz3.ab3@30883>            Dc.l do_VWait                                   ;dovwait
0003DA28 <AmiBlitz3.ab3@30884>            Dc.l do_LibJsr                                  ;dolibjsr
0003DA2C <AmiBlitz3.ab3@30885>            Dc.l do_TokeJsr                                 ;dotokejsr
0003DA30 <AmiBlitz3.ab3@30886>            Dc.l do_BLibJsr                                 ;doblibjsr
0003DA34 <AmiBlitz3.ab3@30887>            Dc.l _extb                                      ;syntaxerr
0003DA38 <AmiBlitz3.ab3@30891>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003DA3C <AmiBlitz3.ab3@30892>            Dc.l do_SetErr                                  ;doseterr
0003DA40 <AmiBlitz3.ab3@30893>            Dc.l do_ClrErr                                  ;doclrerr
0003DA44 <AmiBlitz3.ab3@30894>            Dc.l syntaxerr                                  ;syntaxerr
0003DA48 <AmiBlitz3.ab3@30895>            Dc.l do_ErrFail                                 ;doerrfail
0003DA4C <AmiBlitz3.ab3@30896>            Dc.l syntaxerr
0003DA50 <AmiBlitz3.ab3@30897>            Dc.l syntaxerr                                  ;mod
0003DA54 <AmiBlitz3.ab3@30898>            Dc.l syntaxerr                                  ;Pi
0003DA58 <AmiBlitz3.ab3@30899>            Dc.l do_Repeat                                  ;dorepeat
0003DA5C <AmiBlitz3.ab3@30900>            Dc.l do_Until                                   ;dountil
0003DA60 <AmiBlitz3.ab3@30901>            Dc.l do_PutReg                                  ;doputreg
0003DA64 <AmiBlitz3.ab3@30902>            Dc.l do_Pop                                     ;dopop
0003DA68 <AmiBlitz3.ab3@30903>            Dc.l do_INCDIR                                  ;doincdir
0003DA6C <AmiBlitz3.ab3@30904>            Dc.l mydo_Endif2                                ;mydoendif2
0003DA70 <AmiBlitz3.ab3@30905>            Dc.l do_Wend                                    ;dowend
0003DA74 <AmiBlitz3.ab3@30906>            Dc.l do_SysJsr                                  ;dosysjsr
0003DA78 <AmiBlitz3.ab3@30907>            Dc.l do_WBStartup                               ;dowbstartup
0003DA7C <AmiBlitz3.ab3@30908>            Dc.l syntaxerr
0003DA80 <AmiBlitz3.ab3@30909>            Dc.l do_Ongo                                    ;doongo
0003DA84 <AmiBlitz3.ab3@30910>            Dc.l syntaxerr
0003DA88 <AmiBlitz3.ab3@30911>            Dc.l do_Forever                                 ;doforever
0003DA8C <AmiBlitz3.ab3@30912>            Dc.l do_Restore                                 ;dorestore
0003DA90 <AmiBlitz3.ab3@30913>            Dc.l do_Exchange                                ;doexchange
0003DA94 <AmiBlitz3.ab3@30914>            Dc.l do_USEPATH                                 ;dousepath
0003DA98 <AmiBlitz3.ab3@30915>            Dc.l do_CloseEd                                 ;doclosed
0003DA9C <AmiBlitz3.ab3@30916>            Dc.l do_NoCli                                   ;donocli
0003DAA0 <AmiBlitz3.ab3@30917>            Dc.l syntaxerr                                  ;syntaxerr
0003DAA4 <AmiBlitz3.ab3@30918>            Dc.l syntaxerr                                  ;syntaxerr
0003DAA8 <AmiBlitz3.ab3@30919>            Dc.l syntaxerr                                  ;syntaxerr
0003DAAC <AmiBlitz3.ab3@30920>            Dc.l syntaxerr                                  ;syntaxerr
0003DAB0 <AmiBlitz3.ab3@30921>            Dc.l syntaxerr                                  ;syntaxerr
0003DAB4 <AmiBlitz3.ab3@30922>            Dc.l do_runerrson                               ;dorunerrson
0003DAB8 <AmiBlitz3.ab3@30923>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003DABC <AmiBlitz3.ab3@30924>            Dc.l do_uselastpath
0003DAC0 <AmiBlitz3.ab3@30925>            Dc.l do_regload
0003DAC4 <AmiBlitz3.ab3@30926>            Dc.l do_regsave
0003DAC8 <AmiBlitz3.ab3@30927>            Dc.l do_Object
0003DACC <AmiBlitz3.ab3@30928>            Dc.l do_usepath2
0003DAD0 <AmiBlitz3.ab3@30929>            Dc.l do_LastRunErrsMode
0003DAD4 <AmiBlitz3.ab3@30952> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003DAD8 <AmiBlitz3.ab3@30953>            Dc.l menu_run
0003DADC <AmiBlitz3.ab3@30954>            Dc.l menu_createexecutable
0003DAE0 <AmiBlitz3.ab3@30955>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003DAE4 <AmiBlitz3.ab3@30956>            Dc.l menu_createresidentfile
0003DAE8 <AmiBlitz3.ab3@30957> 
0003DAEC <AmiBlitz3.ab3@30958> 
0003DAF0 <AmiBlitz3.ab3@30959>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003DAF4 <AmiBlitz3.ab3@30960>            Dc.l menu_reloadlibs
0003DAF8 <AmiBlitz3.ab3@30961>            Dc.l menu_loaddebugmodule
0003DAFC <AmiBlitz3.ab3@30962>            Dc.l menu_dummyfunc
0003DB00 <AmiBlitz3.ab3@30963>            Dc.l menu_newcreate
0003DB04 <AmiBlitz3.ab3@30964>            Dc.l menu_dummyfunc
0003DB08 <AmiBlitz3.ab3@30965>            Dc.l menu_toggledebug
0003DB0C <AmiBlitz3.ab3@30966> 
0003DB10 <AmiBlitz3.ab3@30967>            Dc.l menu_dummyfunc
0003DB3A <AmiBlitz3.ab3@30972>   !basic
0003DB9C <AmiBlitz3.ab3@30973>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003DBBA <AmiBlitz3.ab3@30974>   !asm
0003DBBC <AmiBlitz3.ab3@30975> RTS
0003DBBD <AmiBlitz3.ab3@30981> set_autorun:               Dc.b $00
0003DBC2 <AmiBlitz3.ab3@30982> autorun:                   Dc.b $80,$01,$01,$00,$01
0003DBC3 <AmiBlitz3.ab3@30984> set_interruptcheck:        Dc.b $00
0003DBC8 <AmiBlitz3.ab3@30985> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003DBC9 <AmiBlitz3.ab3@30987> set_assemblercheck:        Ds.b 1
0003DBCE <AmiBlitz3.ab3@30988> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003DBCF <AmiBlitz3.ab3@30990> set_overflowcheck:         Ds.b 1
0003DBD4 <AmiBlitz3.ab3@30991> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003DBDA <AmiBlitz3.ab3@30993> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003DBE0 <AmiBlitz3.ab3@30994> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003DBE6 <AmiBlitz3.ab3@30995> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003DBE8 <AmiBlitz3.ab3@30996> Even4
0003DBF4 <AmiBlitz3.ab3@30999> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003DBFC <AmiBlitz3.ab3@31000>                            Dc.l $00000000,$00000000
0003DC04 <AmiBlitz3.ab3@31001> tstsize1:                  Dc.l $00000100,$000003E9
0003DC08 <AmiBlitz3.ab3@31002> tstsize2:                  Dc.l $00000100
0003DC0C <AmiBlitz3.ab3@31003> tstend:                    Dc.l $000003EC
0003DC14 <AmiBlitz3.ab3@31004> tstsize3:                  Ds.l 2
0003DC18 <AmiBlitz3.ab3@31005> tstdone:                   Dc.l $000003F2
0003DC1C <AmiBlitz3.ab3@31008> edstruct:                  Dc.l tokens                     ;data for ted
0003DC20 <AmiBlitz3.ab3@31012>                            Dc.l 0
0003DC24 <AmiBlitz3.ab3@31014>                            Dc.l read_xtrafile              ;load .xtra routine
0003DC28 <AmiBlitz3.ab3@31015>                            Dc.l write_xtrafile             ;save .xtra routine
0003DC2C <AmiBlitz3.ab3@31016>                            Dc.l call_menuentry             ;Menu Routine
0003DC30 <AmiBlitz3.ab3@31017>                            Ds.l 1                          ;cleanup (?)
0003DC34 <AmiBlitz3.ab3@31018>                            Dc.b ":",34,".;"
0003DD30 <AmiBlitz3.ab3@31021> 
0003DE10 <AmiBlitz3.ab3@31022>                            Ds.l 56
0003DE12 <AmiBlitz3.ab3@31027> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003DE16 <AmiBlitz3.ab3@31030> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003DE18 <AmiBlitz3.ab3@31031>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003DE1C <AmiBlitz3.ab3@31032>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DE22 <AmiBlitz3.ab3@31036> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003DE24 <AmiBlitz3.ab3@31040>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DE28 <AmiBlitz3.ab3@31043> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003DE2C <AmiBlitz3.ab3@31046> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DE30 <AmiBlitz3.ab3@31047>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DE32 <AmiBlitz3.ab3@31053>                            Dc.b $4A,$40                                             ;TST.W   D0
0003DE34 <AmiBlitz3.ab3@31057>                            Dc.b $4A,$80                                             ;TST.L   D0
0003DE36 <AmiBlitz3.ab3@31060> nops8:                     Dc.b $4E,$71                                             ;NOP
0003DE38 <AmiBlitz3.ab3@31061>                            Dc.b $4E,$71                                             ;NOP
0003DE3A <AmiBlitz3.ab3@31062>                            Dc.b $4E,$71                                             ;NOP
0003DE3C <AmiBlitz3.ab3@31063>                            Dc.b $4E,$71                                             ;NOP
0003DE3E <AmiBlitz3.ab3@31064> nops4:                     Dc.b $4E,$71                                             ;NOP
0003DE40 <AmiBlitz3.ab3@31066>                            Dc.b $4E,$71                                             ;NOP
0003DE42 <AmiBlitz3.ab3@31067>                            Dc.b $4E,$71                                             ;NOP
0003DE44 <AmiBlitz3.ab3@31068>                            Dc.b $4E,$71                                             ;NOP
0003DE48 <AmiBlitz3.ab3@31072> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DE4C <AmiBlitz3.ab3@31075> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DE4E <AmiBlitz3.ab3@31078> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003DE50 <AmiBlitz3.ab3@31081> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DE52 <AmiBlitz3.ab3@31082>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DE56 <AmiBlitz3.ab3@31083>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003DE58 <AmiBlitz3.ab3@31084>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DE5A <AmiBlitz3.ab3@31090> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DE5E <AmiBlitz3.ab3@31091>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003DE60 <AmiBlitz3.ab3@31096> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DE64 <AmiBlitz3.ab3@31097>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003DE66 <AmiBlitz3.ab3@31101> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DE68 <AmiBlitz3.ab3@31102>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003DE6C <AmiBlitz3.ab3@31108> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003DE6E <AmiBlitz3.ab3@31109>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003DE72 <AmiBlitz3.ab3@31110>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003DE76 <AmiBlitz3.ab3@31114> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003DE78 <AmiBlitz3.ab3@31115>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003DE7C <AmiBlitz3.ab3@31116>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003DE7E <AmiBlitz3.ab3@31119> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DE82 <AmiBlitz3.ab3@31122> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003DE86 <AmiBlitz3.ab3@31125> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003DE8A <AmiBlitz3.ab3@31128> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003DE8E <AmiBlitz3.ab3@31132>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DE90 <AmiBlitz3.ab3@31133>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DE92 <AmiBlitz3.ab3@31134>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003DE96 <AmiBlitz3.ab3@31139>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DE98 <AmiBlitz3.ab3@31140>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DE9A <AmiBlitz3.ab3@31141>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003DE9E <AmiBlitz3.ab3@31146>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DEA0 <AmiBlitz3.ab3@31147>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003DEA2 <AmiBlitz3.ab3@31148>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003DEA6 <AmiBlitz3.ab3@31153>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DEA8 <AmiBlitz3.ab3@31154>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DEAA <AmiBlitz3.ab3@31155>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003DEAE <AmiBlitz3.ab3@31156>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003DEB0 <AmiBlitz3.ab3@31157>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003DEB4 <AmiBlitz3.ab3@31162>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DEB6 <AmiBlitz3.ab3@31163>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003DEBA <AmiBlitz3.ab3@31164>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DEBC <AmiBlitz3.ab3@31165>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DEC0 <AmiBlitz3.ab3@31166>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003DEC2 <AmiBlitz3.ab3@31167>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DEC4 <AmiBlitz3.ab3@31170>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003DEC8 <AmiBlitz3.ab3@31175>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DECA <AmiBlitz3.ab3@31176>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003DECE <AmiBlitz3.ab3@31177>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DED0 <AmiBlitz3.ab3@31178>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DED4 <AmiBlitz3.ab3@31179>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003DED6 <AmiBlitz3.ab3@31180>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DED8 <AmiBlitz3.ab3@31183>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003DEDC <AmiBlitz3.ab3@31188>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DEDE <AmiBlitz3.ab3@31189>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DEE2 <AmiBlitz3.ab3@31190>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DEE4 <AmiBlitz3.ab3@31191>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DEE8 <AmiBlitz3.ab3@31192>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003DEEA <AmiBlitz3.ab3@31193>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DEEC <AmiBlitz3.ab3@31196>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003DEF0 <AmiBlitz3.ab3@31201>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DEF2 <AmiBlitz3.ab3@31202>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DEF6 <AmiBlitz3.ab3@31203>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DEFC <AmiBlitz3.ab3@31204>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003DF00 <AmiBlitz3.ab3@31205>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003DF02 <AmiBlitz3.ab3@31206>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DF06 <AmiBlitz3.ab3@31213>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003DF08 <AmiBlitz3.ab3@31217> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003DF0A <AmiBlitz3.ab3@31220> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DF0E <AmiBlitz3.ab3@31223> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DF10 <AmiBlitz3.ab3@31224> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003DF14 <AmiBlitz3.ab3@31227> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DF16 <AmiBlitz3.ab3@31230> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DF1A <AmiBlitz3.ab3@31233> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DF1C <AmiBlitz3.ab3@31237>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003DF1E <AmiBlitz3.ab3@31240> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003DF20 <AmiBlitz3.ab3@31243> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DF24 <AmiBlitz3.ab3@31246> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003DF28 <AmiBlitz3.ab3@31249> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003DF2C <AmiBlitz3.ab3@31252> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DF2E <AmiBlitz3.ab3@31255> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DF30 <AmiBlitz3.ab3@31258> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DF34 <AmiBlitz3.ab3@31261> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003DF3A <AmiBlitz3.ab3@31262>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003DF3C <AmiBlitz3.ab3@31263>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DF40 <AmiBlitz3.ab3@31267> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003DF42 <AmiBlitz3.ab3@31268>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DF44 <AmiBlitz3.ab3@31272> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DF48 <AmiBlitz3.ab3@31275> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003DF4A <AmiBlitz3.ab3@31279>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003DF4C <AmiBlitz3.ab3@31283>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DF4E <AmiBlitz3.ab3@31287>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DF52 <AmiBlitz3.ab3@31290> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003DF56 <AmiBlitz3.ab3@31293> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DF58 <AmiBlitz3.ab3@31296> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DF5A <AmiBlitz3.ab3@31299> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DF5C <AmiBlitz3.ab3@31302> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DF60 <AmiBlitz3.ab3@31305> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DF64 <AmiBlitz3.ab3@31308> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003DF66 <AmiBlitz3.ab3@31311> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003DF68 <AmiBlitz3.ab3@31315>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DF6C <AmiBlitz3.ab3@31318>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DF6E <AmiBlitz3.ab3@31324>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003DF72 <AmiBlitz3.ab3@31327>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DF74 <AmiBlitz3.ab3@31333>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003DF78 <AmiBlitz3.ab3@31337> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003DF7A <AmiBlitz3.ab3@31340> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003DF7C <AmiBlitz3.ab3@31344>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DF7E <AmiBlitz3.ab3@31348>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DF84 <AmiBlitz3.ab3@31351> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003DF8A <AmiBlitz3.ab3@31354> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DF92 <AmiBlitz3.ab3@31358> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003DF96 <AmiBlitz3.ab3@31359>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003DF98 <AmiBlitz3.ab3@31363> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003DF9C <AmiBlitz3.ab3@31366> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003DFA0 <AmiBlitz3.ab3@31369> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003DFA4 <AmiBlitz3.ab3@31372> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DFA8 <AmiBlitz3.ab3@31373> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003DFAC <AmiBlitz3.ab3@31377>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003DFB0 <AmiBlitz3.ab3@31379>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003DFB2 <AmiBlitz3.ab3@31382> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DFB6 <AmiBlitz3.ab3@31385> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DFB8 <AmiBlitz3.ab3@31388> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003DFBA <AmiBlitz3.ab3@31389>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DFBC <AmiBlitz3.ab3@31390>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003DFC0 <AmiBlitz3.ab3@31391> 
0003DFC2 <AmiBlitz3.ab3@31392>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003DFC4 <AmiBlitz3.ab3@31393>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003DFC6 <AmiBlitz3.ab3@31394>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003DFCC <AmiBlitz3.ab3@31396>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DFCE <AmiBlitz3.ab3@31401> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DFD0 <AmiBlitz3.ab3@31402>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003DFD2 <AmiBlitz3.ab3@31406> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003DFD6 <AmiBlitz3.ab3@31409> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DFD8 <AmiBlitz3.ab3@31412> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DFDA <AmiBlitz3.ab3@31416>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003DFDC <AmiBlitz3.ab3@31419> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DFE0 <AmiBlitz3.ab3@31422> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DFE2 <AmiBlitz3.ab3@31423>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DFE6 <AmiBlitz3.ab3@31427> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003DFEA <AmiBlitz3.ab3@31428> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DFEE <AmiBlitz3.ab3@31432> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003DFF2 <AmiBlitz3.ab3@31436> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DFF8 <AmiBlitz3.ab3@31440> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003DFFE <AmiBlitz3.ab3@31443> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003E002 <AmiBlitz3.ab3@31447> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003E006 <AmiBlitz3.ab3@31451>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003E00A <AmiBlitz3.ab3@31452>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003E010 <AmiBlitz3.ab3@31457>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003E014 <AmiBlitz3.ab3@31462>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003E016 <AmiBlitz3.ab3@31467>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003E01A <AmiBlitz3.ab3@31471>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003E01C <AmiBlitz3.ab3@31475> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003E01E <AmiBlitz3.ab3@31478> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003E020 <AmiBlitz3.ab3@31479>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003E024 <AmiBlitz3.ab3@31483>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003E028 <AmiBlitz3.ab3@31487> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003E02C <AmiBlitz3.ab3@31490> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003E02E <AmiBlitz3.ab3@31493> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003E032 <AmiBlitz3.ab3@31496> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003E034 <AmiBlitz3.ab3@31499> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003E03D <AmiBlitz3.ab3@31503>                            Dc.b "ram:test",0
0003E03E <AmiBlitz3.ab3@31504> Even
0003E042 <AmiBlitz3.ab3@31508>                            Dc.l  0                          ;was  Ds.w 3 org source
0003E044 <AmiBlitz3.ab3@31510>                            Dc.w  0
0003E048 <AmiBlitz3.ab3@31513> _mathffpbase:              Ds.l 1                           ;maths org source
0003E04A <AmiBlitz3.ab3@31514> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003E04C <AmiBlitz3.ab3@31515> typelen:                   Ds.w 1
0003E050 <AmiBlitz3.ab3@31516> prevtype:                  Ds.l 1
0003E054 <AmiBlitz3.ab3@31517> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003E056 <AmiBlitz3.ab3@31518> lastchar:                  Ds.w 1
0003E05A <AmiBlitz3.ab3@31519> thistype:                  Ds.l 1
0003E05E <AmiBlitz3.ab3@31520> errstack:                  Ds.l 1
0003E062 <AmiBlitz3.ab3@31521> errcont:                   Ds.l 1
0003E064 <AmiBlitz3.ab3@31522> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003E066 <AmiBlitz3.ab3@31523> linesleft:                 Ds.w 1
0003E06A <AmiBlitz3.ab3@31524> sourceline:                Ds.l 1                          ;thisitem org source
0003E06E <AmiBlitz3.ab3@31525> varbase:                   Ds.l 1                          ;firstvar org source
0003E072 <AmiBlitz3.ab3@31526> alllocals:                 Ds.l 1
0003E076 <AmiBlitz3.ab3@31527> firstlocal:                Ds.l 1
0003E07A <AmiBlitz3.ab3@31528> firstglob:                 Ds.l 1
0003E07C <AmiBlitz3.ab3@31529> globalvarpointer:          Ds.w 1                          ;varoff org source
0003E07E <AmiBlitz3.ab3@31530> locvaroff:                 Ds.w 1
0003E082 <AmiBlitz3.ab3@31531> firstitem_:                 Ds.l 1
0003E084 <AmiBlitz3.ab3@31532> numlines_org:              Ds.w 1                          ;numlines org source
0003E086 <AmiBlitz3.ab3@31533> returncode_org:            Ds.w 1                          ;returncode org source
0003E08A <AmiBlitz3.ab3@31534> firstiff:                  Ds.l 1                          ;firstif org source
0003E08E <AmiBlitz3.ab3@31535> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003E28E <AmiBlitz3.ab3@31536> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003E29E <AmiBlitz3.ab3@31537> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003E49E <AmiBlitz3.ab3@31538> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E69E <AmiBlitz3.ab3@31539> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E89E <AmiBlitz3.ab3@31540> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E8A2 <AmiBlitz3.ab3@31542> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003EAA2 <AmiBlitz3.ab3@31543> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003ECA2 <AmiBlitz3.ab3@31545> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003ECA6 <AmiBlitz3.ab3@31546> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003EEA6 <AmiBlitz3.ab3@31547> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003EEAA <AmiBlitz3.ab3@31548> size_deflibs:              Ds.l 1                          ;deflibs org source
0003F0AA <AmiBlitz3.ab3@31549> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003F2AA <AmiBlitz3.ab3@31551> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003F2AE <AmiBlitz3.ab3@31552> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003F4AE <AmiBlitz3.ab3@31554> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003F4B2 <AmiBlitz3.ab3@31560>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003F4B6 <AmiBlitz3.ab3@31561>   Dc.b $00,$00,$00,$00
0003F4BA <AmiBlitz3.ab3@31562>   Dc.b $00,$19,$00,$11
0003F4BE <AmiBlitz3.ab3@31563>   Dc.b $00,$2E,$00,$18
0003F4C2 <AmiBlitz3.ab3@31564>   Dc.b $00,$04,$00,$03
0003F4C6 <AmiBlitz3.ab3@31565>   Dc.b $00,$01,$00,$22
0003F4CA <AmiBlitz3.ab3@31566>   Dc.b $73,$68,$00,$00
0003F4CE <AmiBlitz3.ab3@31567>   Dc.b $00,$00,$00,$00
0003F4D2 <AmiBlitz3.ab3@31568>   Dc.b $00,$00,$00,$00
0003F4D6 <AmiBlitz3.ab3@31569>   Dc.b $00,$00,$00,$00
0003F4DA <AmiBlitz3.ab3@31570>   Dc.b $00,$00,$00,$00
0003F4DE <AmiBlitz3.ab3@31571>   Dc.b $00,$00,$00,$00
0003F4E2 <AmiBlitz3.ab3@31572>   Dc.b $03,$22,$00,$21
0003F4E6 <AmiBlitz3.ab3@31573>   Dc.b $3C,$28,$00,$22
0003F4EA <AmiBlitz3.ab3@31574>   Dc.b $6E,$C0,$00,$00
0003F4EE <AmiBlitz3.ab3@31575>   Dc.b $00,$12,$00,$00
0003F4F2 <AmiBlitz3.ab3@31576>   Dc.b $00,$0E,$00,$00
0003F4F6 <AmiBlitz3.ab3@31577>   Dc.b $00,$00,$00,$00
0003F4FA <AmiBlitz3.ab3@31578>   Dc.b $00,$00,$00,$00
0003F4FE <AmiBlitz3.ab3@31579>   Dc.b $00,$00,$00,$00
0003F502 <AmiBlitz3.ab3@31580>   Dc.b $00,$00,$00,$2E
0003F506 <AmiBlitz3.ab3@31581>   Dc.b $00,$17,$00,$02
0003F50A <AmiBlitz3.ab3@31582>   Dc.b $00,$01,$8E,$80
0003F50E <AmiBlitz3.ab3@31583>   Dc.b $03,$00,$00,$00
0003F512 <AmiBlitz3.ab3@31584>   Dc.b $00,$00,$FF,$FF
0003F516 <AmiBlitz3.ab3@31585>   Dc.b $FF,$FF,$FF,$FC
0003F51A <AmiBlitz3.ab3@31586>   Dc.b $80,$00,$00,$00
0003F51E <AmiBlitz3.ab3@31587>   Dc.b $00,$00,$80,$00
0003F522 <AmiBlitz3.ab3@31588>   Dc.b $00,$3F,$BB,$40
0003F526 <AmiBlitz3.ab3@31589>   Dc.b $80,$1F,$C0,$00
0003F52A <AmiBlitz3.ab3@31590>   Dc.b $00,$00,$80,$3F
0003F52E <AmiBlitz3.ab3@31591>   Dc.b $C0,$0F,$BB,$40
0003F532 <AmiBlitz3.ab3@31592>   Dc.b $80,$1F,$C0,$00
0003F536 <AmiBlitz3.ab3@31593>   Dc.b $00,$00,$8E,$00
0003F53A <AmiBlitz3.ab3@31594>   Dc.b $F8,$00,$00,$00
0003F53E <AmiBlitz3.ab3@31595>   Dc.b $8F,$01,$FF,$00
0003F542 <AmiBlitz3.ab3@31596>   Dc.b $3B,$40,$81,$E3
0003F546 <AmiBlitz3.ab3@31597>   Dc.b $F7,$C0,$00,$00
0003F54A <AmiBlitz3.ab3@31598>   Dc.b $80,$7F,$F8,$70
0003F54E <AmiBlitz3.ab3@31599>   Dc.b $3B,$40,$80,$0F
0003F552 <AmiBlitz3.ab3@31600>   Dc.b $7C,$E0,$00,$00
0003F556 <AmiBlitz3.ab3@31601>   Dc.b $80,$00,$FD,$80
0003F55A <AmiBlitz3.ab3@31602>   Dc.b $00,$00,$80,$01
0003F55E <AmiBlitz3.ab3@31603>   Dc.b $F6,$00,$FB,$40
0003F562 <AmiBlitz3.ab3@31604>   Dc.b $80,$03,$EF,$00
0003F566 <AmiBlitz3.ab3@31605>   Dc.b $00,$00,$80,$07
0003F56A <AmiBlitz3.ab3@31606>   Dc.b $87,$80,$3B,$40
0003F56E <AmiBlitz3.ab3@31607>   Dc.b $80,$0F,$01,$C0
0003F572 <AmiBlitz3.ab3@31608>   Dc.b $00,$00,$80,$03
0003F576 <AmiBlitz3.ab3@31609>   Dc.b $F0,$70,$1D,$40
0003F57A <AmiBlitz3.ab3@31610>   Dc.b $80,$00,$18,$1C
0003F57E <AmiBlitz3.ab3@31611>   Dc.b $00,$00,$80,$00
0003F582 <AmiBlitz3.ab3@31612>   Dc.b $10,$06,$03,$40
0003F586 <AmiBlitz3.ab3@31613>   Dc.b $80,$00,$20,$1F
0003F58A <AmiBlitz3.ab3@31614>   Dc.b $00,$00,$80,$00
0003F58E <AmiBlitz3.ab3@31615>   Dc.b $00,$00,$01,$40
0003F592 <AmiBlitz3.ab3@31616>   Dc.b $80,$00,$00,$00
0003F596 <AmiBlitz3.ab3@31617>   Dc.b $00,$00,$80,$00
0003F59A <AmiBlitz3.ab3@31618>   Dc.b $00,$00,$00,$00
0003F59E <AmiBlitz3.ab3@31619>   Dc.b $00,$00,$00,$00
0003F5A2 <AmiBlitz3.ab3@31620>   Dc.b $00,$00,$00,$00
0003F5A6 <AmiBlitz3.ab3@31621>   Dc.b $00,$00,$00,$04
0003F5AA <AmiBlitz3.ab3@31622>   Dc.b $00,$3F,$FC,$01
0003F5AE <AmiBlitz3.ab3@31623>   Dc.b $BB,$44,$00,$60
0003F5B2 <AmiBlitz3.ab3@31624>   Dc.b $FE,$00,$00,$04
0003F5B6 <AmiBlitz3.ab3@31625>   Dc.b $00,$CF,$FF,$01
0003F5BA <AmiBlitz3.ab3@31626>   Dc.b $BB,$44,$1F,$EF
0003F5BE <AmiBlitz3.ab3@31627>   Dc.b $FF,$00,$00,$04
0003F5C2 <AmiBlitz3.ab3@31628>   Dc.b $33,$FF,$FF,$E0
0003F5C6 <AmiBlitz3.ab3@31629>   Dc.b $00,$04,$37,$FE
0003F5CA <AmiBlitz3.ab3@31630>   Dc.b $7F,$FC,$1B,$44
0003F5CE <AmiBlitz3.ab3@31631>   Dc.b $0F,$9C,$FF,$FF
0003F5D2 <AmiBlitz3.ab3@31632>   Dc.b $00,$04,$03,$E3
0003F5D6 <AmiBlitz3.ab3@31633>   Dc.b $FF,$FF,$DB,$44
0003F5DA <AmiBlitz3.ab3@31634>   Dc.b $00,$7F,$BF,$FF
0003F5DE <AmiBlitz3.ab3@31635>   Dc.b $80,$04,$00,$0F
0003F5E2 <AmiBlitz3.ab3@31636>   Dc.b $3F,$FE,$00,$04
0003F5E6 <AmiBlitz3.ab3@31637>   Dc.b $00,$06,$7F,$F8
0003F5EA <AmiBlitz3.ab3@31638>   Dc.b $1B,$44,$00,$0C
0003F5EE <AmiBlitz3.ab3@31639>   Dc.b $F7,$FC,$00,$04
0003F5F2 <AmiBlitz3.ab3@31640>   Dc.b $00,$19,$F9,$FE
0003F5F6 <AmiBlitz3.ab3@31641>   Dc.b $1B,$44,$00,$33
0003F5FA <AmiBlitz3.ab3@31642>   Dc.b $FE,$7F,$00,$04
0003F5FE <AmiBlitz3.ab3@31643>   Dc.b $00,$0F,$FF,$BF
0003F602 <AmiBlitz3.ab3@31644>   Dc.b $CD,$44,$00,$03
0003F606 <AmiBlitz3.ab3@31645>   Dc.b $EF,$EF,$F0,$04
0003F60A <AmiBlitz3.ab3@31646>   Dc.b $00,$00,$7F,$DF
0003F60E <AmiBlitz3.ab3@31647>   Dc.b $FB,$44,$00,$00
0003F612 <AmiBlitz3.ab3@31648>   Dc.b $FF,$A7,$FC,$04
0003F616 <AmiBlitz3.ab3@31649>   Dc.b $00,$00,$7E,$3F
0003F61A <AmiBlitz3.ab3@31650>   Dc.b $FD,$44,$00,$00
0003F61E <AmiBlitz3.ab3@31651>   Dc.b $00,$00,$00,$04
0003F622 <AmiBlitz3.ab3@31652>   Dc.b $7F,$FF,$FF,$FF
0003F626 <AmiBlitz3.ab3@31653>   Dc.b $FF,$FC,$00,$00
0003F62A <AmiBlitz3.ab3@31654>   Dc.b $00,$01,$00,$00
0003F62D <AmiBlitz3.ab3@31655>   Dc.b $00,$00,$04
0003F633 <AmiBlitz3.ab3@31658> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003F68B <AmiBlitz3.ab3@31659> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003F68C <AmiBlitz3.ab3@31660> Even
0003F690 <AmiBlitz3.ab3@31662> sysdebug:            Dc.l $3F0
0003F6BA <AmiBlitz3.ab3@31667>  !basic
0003F6CE <AmiBlitz3.ab3@31668>  If OnePassCompiling = True
0003F6EC <AmiBlitz3.ab3@31669>    maxmem.l = (AvailMem_ (#MEMF_PUBLIC) LSR 2)  ; 1/4 of the available free mem
0003F6FC <AmiBlitz3.ab3@31670>    objectlength.l = Peek.l(?objlen)
0003F71A <AmiBlitz3.ab3@31671>    If Peek.b(?use_debugger) = 0
0003F740 <AmiBlitz3.ab3@31672>      If (objectlength < 3670056) AND (maxmem > 3670056)
0003F746 <AmiBlitz3.ab3@31673>        MOVE.l #3145727,d2     ; objectbuffersize
0003F74C <AmiBlitz3.ab3@31674>        MOVE.l  #262143,d3     ; libsbuffersize
0003F752 <AmiBlitz3.ab3@31675>        MOVE.l  #131071,d4     ; systembuffersize
0003F758 <AmiBlitz3.ab3@31676>        MOVE.l  #131071,d5     ; databuffersize
0003F75E <AmiBlitz3.ab3@31677>        JSR makeallox  ; added 40 buffer more
0003F788 <AmiBlitz3.ab3@31678>        !basic
0003F78E <AmiBlitz3.ab3@31679>      Else
0003F7B4 <AmiBlitz3.ab3@31680>        If (objectlength < 1572904) AND (maxmem > 1572904)
0003F7D2 <AmiBlitz3.ab3@31681>          !asm
0003F7D8 <AmiBlitz3.ab3@31682>          MOVE.l #1310719,d2     ; objectbuffersize
0003F7DE <AmiBlitz3.ab3@31683>          MOVE.l  #131071,d3     ; libsbuffersize
0003F7E4 <AmiBlitz3.ab3@31684>          MOVE.l   #65535,d4     ; systembuffersize
0003F7EA <AmiBlitz3.ab3@31685>          MOVE.l   #65535,d5     ; databuffersize
0003F7F0 <AmiBlitz3.ab3@31686>          JSR makeallox ; added 40 buffer more
0003F81A <AmiBlitz3.ab3@31687>          !basic
0003F820 <AmiBlitz3.ab3@31690>    Else
0003F830 <AmiBlitz3.ab3@31691>      maxmem LSL 1 ; for debug test for 1/2 of the available mem
0003F856 <AmiBlitz3.ab3@31692>      If (objectlength < 12058664) AND (maxmem > 12058664)
0003F85C <AmiBlitz3.ab3@31693>        MOVE.l #5242879,d2     ; objectbuffersize
0003F862 <AmiBlitz3.ab3@31694>        MOVE.l  #262143,d3     ; libsbuffersize
0003F868 <AmiBlitz3.ab3@31695>        MOVE.l #6291455,d4     ; systembuffersize
0003F86E <AmiBlitz3.ab3@31696>        MOVE.l  #262143,d5     ; databuffersize
0003F874 <AmiBlitz3.ab3@31697>        JSR makeallox ; added 40 buffer more
0003F89E <AmiBlitz3.ab3@31698>        !basic
0003F8A4 <AmiBlitz3.ab3@31699>      Else
0003F8CA <AmiBlitz3.ab3@31700>        If (objectlength < 6094888) AND (maxmem > 6094888)
0003F8E8 <AmiBlitz3.ab3@31701>          !asm
0003F8EE <AmiBlitz3.ab3@31702>          MOVE.l #2621439,d2     ; objectbuffersize
0003F8F4 <AmiBlitz3.ab3@31703>          MOVE.l  #262143,d3     ; libsbuffersize
0003F8FA <AmiBlitz3.ab3@31704>          MOVE.l #3145727,d4     ; systembuffersize
0003F900 <AmiBlitz3.ab3@31705>          MOVE.l   #65535,d5     ; databuffersize
0003F906 <AmiBlitz3.ab3@31706>          JSR makeallox ; added 40 buffer more
0003F930 <AmiBlitz3.ab3@31707>          !basic
0003F94E <AmiBlitz3.ab3@31712>  !asm
0003F950 <AmiBlitz3.ab3@31713> RTS
0003F97A <AmiBlitz3.ab3@31716>  !basic
0003F980 <AmiBlitz3.ab3@31717>    releaseexe = True                                  ; set release modus to on
0003F9BE <AmiBlitz3.ab3@31718>    !ComData_GetW{comWord_CreateDebugFile,D0}          ; get the status for creating .dbg file
0003F9C2 <AmiBlitz3.ab3@31719>    releasedbg_save = PutD0                            ; save the status
0003F9F8 <AmiBlitz3.ab3@31720>    !ComData_SetW{comWord_CreateDebugFile,#0}          ; set it of so it will not create with every needed compile run
0003FA0A <AmiBlitz3.ab3@31721>    releasemakesmall_save = Peek.b(?make_smallestcode) ; save the status of make smallest code
0003FA1C <AmiBlitz3.ab3@31722> 
0003FA5A <AmiBlitz3.ab3@31723>    !ComData_GetB{comByte_FuncOptimize,D0}             ; get the status of function optimizer
0003FA5E <AmiBlitz3.ab3@31724>    releasefuncoptimize_save = PutD0                   ; save it
0003FA94 <AmiBlitz3.ab3@31725>    !ComData_SetB{comByte_FuncOptimize,#1}             ; set it on
0003FAA6 <AmiBlitz3.ab3@31726>    releasedebugger_save = Peek.b(?use_debugger)       ; save the status of the use of the debugger
0003FAB6 <AmiBlitz3.ab3@31727>    Poke.b ?use_debugger,0                             ; set if off because we create a release verion and need no debugging code
0003FAD4 <AmiBlitz3.ab3@31728>  !asm
0003FADA <AmiBlitz3.ab3@31729>  JSR menu_newcreate                                   ; jump to start the compiling
0003FADE <AmiBlitz3.ab3@31730>  !regs2stack                                          ; save the registers
0003FB08 <AmiBlitz3.ab3@31731>  !basic
0003FB0E <AmiBlitz3.ab3@31732>    releaseexe = False                                 ; set creat release exe off
0003FB14 <AmiBlitz3.ab3@31733>    GetD0 releasedbg_save                              ; set the old status of create .dbg file back
0003FB48 <AmiBlitz3.ab3@31734>    !ComData_SetW{comWord_CreateDebugFile,D0}          ;                      "
0003FB5A <AmiBlitz3.ab3@31735>    Poke.b ?use_debugger,releasedebugger_save          ; set the old status of use Debugger back
0003FB62 <AmiBlitz3.ab3@31736>    GetD0 releasefuncoptimize_save                     ; set the old status of function optimizer back
0003FB96 <AmiBlitz3.ab3@31737>    !ComData_SetB{comByte_FuncOptimize,D0}             ;                       "
0003FBA8 <AmiBlitz3.ab3@31738>    Poke.b ?make_smallestcode,releasemakesmall_save    ; set the old status of make smallest code back
0003FBC6 <AmiBlitz3.ab3@31739>  !asm
0003FBCA <AmiBlitz3.ab3@31740>  !stack2regs                                          ; set registers back
0003FBCC <AmiBlitz3.ab3@31741> RTS
0003FBD6 <AmiBlitz3.ab3@31745>   MOVE.l #0,beforeparameterfetch ; reset so no code will detoken , fix the hit
0003FBDE <AmiBlitz3.ab3@31746>   MOVE.w #0,ininclude            ; reset we have no include code , fix the endless loop
0003FBE8 <AmiBlitz3.ab3@31747>   MOVE.l #-1,compilelinecounter  ; reset the line we have compiled
0003FBF2 <AmiBlitz3.ab3@31748>   MOVE.l #0,globallinecount      ; reset the linecounter
0003FBF4 <AmiBlitz3.ab3@31749> RTS
0003FBF8 <AmiBlitz3.ab3@31754> exelock              Ds.l 1
0003FBFC <AmiBlitz3.ab3@31758> includesourceline    Dc.l 0
0003FC00 <AmiBlitz3.ab3@31759> linenum              Ds.l 1
0003FC04 <AmiBlitz3.ab3@31760> globallinecount      Ds.l 1
0003FC22 <AmiBlitz3.ab3@31761> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003FC26 <AmiBlitz3.ab3@31762> calc_option          Dc.l 1
0003FC2A <AmiBlitz3.ab3@31763> versioninformation   Dc.l $00
0003FC2E <AmiBlitz3.ab3@31764> number_of_builds     Dc.l $00
0003FC30 <AmiBlitz3.ab3@31765> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003FC32 <AmiBlitz3.ab3@31766> rightsideflagmask    Ds.w 1
0003FC34 <AmiBlitz3.ab3@31768> BSS
0003FC36 <AmiBlitz3.ab3@31769> debugnest            Ds.w 1
0003FC3A <AmiBlitz3.ab3@31770> instringf            Ds.l 1
0003FC3E <AmiBlitz3.ab3@31771> funcscanon           Ds.l 1
0003FC52 <AmiBlitz3.ab3@31772> storedebugmode       Ds.b 20
0003FC56 <AmiBlitz3.ab3@31773> firsttimepref        Ds.l 1
0003FC57 <AmiBlitz3.ab3@31774> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003FC58 <AmiBlitz3.ab3@31775> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003FC5A <AmiBlitz3.ab3@31776> nostringopt          Ds.w 1
0003FCDA <AmiBlitz3.ab3@31777> path2:               Ds.l 32
0003FCDE <AmiBlitz3.ab3@31778> typebase             Dc.l 0
0003FCE0 <AmiBlitz3.ab3@31779> doublepeek           Dc.w 0
0003FCE4 <AmiBlitz3.ab3@31780> lastoffset           Dc.l 0
0003FCE6 <AmiBlitz3.ab3@31781> firsttime            Dc.w 0
0003FCEA <AmiBlitz3.ab3@31782> lastdestpointer      Dc.l 0
0003FCEE <AmiBlitz3.ab3@31783> prevwritedat         Dc.l 0
0003FCF2 <AmiBlitz3.ab3@31784> lastsourceline       Dc.l 0
0003FCF6 <AmiBlitz3.ab3@31785> lastwritedat         Dc.l 0
0003FCF8 <AmiBlitz3.ab3@31786> makeexec             Dc.w 0
0003FCFA <AmiBlitz3.ab3@31787> makeexec_remember    Dc.w 0
0003FCFE <AmiBlitz3.ab3@31788> sharebase            Ds.l 1
0003FD02 <AmiBlitz3.ab3@31789> tempa7               Ds.l 1
0003FD04 <AmiBlitz3.ab3@31790> incnif               Ds.w 1
0003FD08 <AmiBlitz3.ab3@31791> tempstore            Ds.l 1
0003FD0C <AmiBlitz3.ab3@31792> result               Ds.l 1
0003FD0E <AmiBlitz3.ab3@31793> automode             Ds.w 1
0003FD10 <AmiBlitz3.ab3@31794> stackcorrect         Ds.w 1
0003FD12 <AmiBlitz3.ab3@31795> formode              Ds.w 1
0003FD16 <AmiBlitz3.ab3@31796> limitregs            Ds.l 1
0003FD18 <AmiBlitz3.ab3@31797> onestep              Ds.w 1
0003FD1C <AmiBlitz3.ab3@31798> reqmode              Ds.l 1
0003FDBC <AmiBlitz3.ab3@31799> inctab               Ds.l 40
0003FDBE <AmiBlitz3.ab3@31800> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003FDC2 <AmiBlitz3.ab3@31801> includeline          Ds.l 1
0003FDC6 <AmiBlitz3.ab3@31802> morememadd           Ds.l 1
0003FDC8 <AmiBlitz3.ab3@31803> objectcount          Ds.w 1
0003FDCC <AmiBlitz3.ab3@31804> savefuncspace        Ds.l 1
0003FDD0 <AmiBlitz3.ab3@31805> lasttrap1            Ds.l 1
0003FDD4 <AmiBlitz3.ab3@31806> currentfunccall      Ds.l 1
0003FDD5 <AmiBlitz3.ab3@31807> skipfunc             Ds.b 1
0003FDD6 <AmiBlitz3.ab3@31808> resdisable           Ds.b 1
0003FDD7 <AmiBlitz3.ab3@31809> skiptoggle           Ds.b 1
0003FDD8 <AmiBlitz3.ab3@31810> developobject        Ds.b 1
0003FDDA <AmiBlitz3.ab3@31811> iniffcommand         Ds.w 1
0003FDDC <AmiBlitz3.ab3@31812> startoffsetmore      Ds.w 1
0003FDDE <AmiBlitz3.ab3@31813> olddebugmode         Ds.w 1
0003FDE2 <AmiBlitz3.ab3@31814> fpucodeglobal        Ds.l 1
0003FDE6 <AmiBlitz3.ab3@31815> fpucodelocal         Ds.l 1
0003FDEA <AmiBlitz3.ab3@31816> maxregs              Ds.l 1
0003FDEE <AmiBlitz3.ab3@31817> fpucode              Ds.l 1
0003FDF0 <AmiBlitz3.ab3@31818> firstmline           Ds.w 1
0003FE30 <AmiBlitz3.ab3@31819> regtable             Ds.l 16
0003FE32 <AmiBlitz3.ab3@31820> exdebug              Ds.w 1
0003FE34 <AmiBlitz3.ab3@31821> a2offset2            Ds.w 1
0003FE38 <AmiBlitz3.ab3@31822> parnumtemp           Ds.l 1
0003FE39 <AmiBlitz3.ab3@31823> doimmediate          Ds.b 1
0003FE3A <AmiBlitz3.ab3@31824> notypecheck          Ds.b 1
0003FE3C <AmiBlitz3.ab3@31825> vartype              Ds.w 1
0003FE3D <AmiBlitz3.ab3@31826> peekaddrsize         Ds.b 1
0003FE3E <AmiBlitz3.ab3@31827> declare2             Ds.b 1
0003FE40 <AmiBlitz3.ab3@31828> parameternum         Ds.w 1
0003FE44 <AmiBlitz3.ab3@31829> lasttoken            Ds.l 1
0003FE46 <AmiBlitz3.ab3@31830> newvariable          Ds.w 1
0003FE47 <AmiBlitz3.ab3@31831> declare              Ds.b 1
0003FE48 <AmiBlitz3.ab3@31832> typecheck            Ds.b 1
0003FE49 <AmiBlitz3.ab3@31833> nowdeclare           Ds.b 1
0003FE4A <AmiBlitz3.ab3@31834> dimkeep              Ds.b 1
0003FE4B <AmiBlitz3.ab3@31835> a4a5store            Ds.b 1
0003FE4C <AmiBlitz3.ab3@31836> ___freetouse         Ds.b 1
0003FE50 <AmiBlitz3.ab3@31837> firstiffstore        Ds.l 1
0003FE54 <AmiBlitz3.ab3@31838> destpointer2         Ds.l 1
0003FE58 <AmiBlitz3.ab3@31839> stackaddr            Ds.l 1
0003FF5C <AmiBlitz3.ab3@31840> allowtab             Ds.b 260
0004005C <AmiBlitz3.ab3@31841> templine             Ds.b 256
0004005E <AmiBlitz3.ab3@31842> thenmode             Ds.w 1
00040060 <AmiBlitz3.ab3@31843> temp                 Ds.w 1
00040062 <AmiBlitz3.ab3@31844> tempregnum           Ds.w 1
00040066 <AmiBlitz3.ab3@31846> numlines2            Ds.l 1
0004006A <AmiBlitz3.ab3@31847> numlines             Ds.l 1
0004006C <AmiBlitz3.ab3@31848> exmac                Ds.w 1
0004006E <AmiBlitz3.ab3@31849> returncode           Ds.w 1
00040072 <AmiBlitz3.ab3@31850> fp0iff               Ds.l 1
00040076 <AmiBlitz3.ab3@31851> fp0addr              Ds.l 1
00040078 <AmiBlitz3.ab3@31852> fp0mode              Ds.w 1
0004007A <AmiBlitz3.ab3@31853> fp0var               Ds.w 1
0004007C <AmiBlitz3.ab3@31854> fastfunc             Ds.w 1
0004007E <AmiBlitz3.ab3@31855> retmode              Ds.w 1
00040080 <AmiBlitz3.ab3@31856> parnum               Ds.w 1
00040082 <AmiBlitz3.ab3@31857> regmask              Ds.w 1
00040084 <AmiBlitz3.ab3@31858> regnumfunc           Ds.w 1
00040086 <AmiBlitz3.ab3@31859> libmode              Ds.w 1
0004008A <AmiBlitz3.ab3@31860> oldline              Ds.l 1
0004008E <AmiBlitz3.ab3@31861> sourceline3          Ds.l 1
00040156 <AmiBlitz3.ab3@31862> debugstore           Ds.b 200
0004015A <AmiBlitz3.ab3@31863> deststore            Ds.l 1
0004015E <AmiBlitz3.ab3@31865> loada                Ds.l 1
00040162 <AmiBlitz3.ab3@31867> currtype             Ds.l 1
00040166 <AmiBlitz3.ab3@31868> arrayoffset          Ds.l 1
0004016A <AmiBlitz3.ab3@31869> lastlabel            Ds.l 1
0004016E <AmiBlitz3.ab3@31870> curtemplabel         Ds.l 1
00040172 <AmiBlitz3.ab3@31871> sourceline2          Ds.l 1
00040272 <AmiBlitz3.ab3@31872> chartab              Ds.b 256
000403F2 <AmiBlitz3.ab3@31873> 
000C0402 <AmiBlitz3.ab3@31874> instrtab             Ds.l 65538*2
000C8402 <AmiBlitz3.ab3@31876> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E8406 <AmiBlitz3.ab3@31877> replacedat           Ds.w 65538
000F0406 <AmiBlitz3.ab3@31878> variablehash         Ds.l 8192
000F040A <AmiBlitz3.ab3@31879> newinitaddr          Ds.l 1
000F040E <AmiBlitz3.ab3@31880> realbssend           Ds.l 1
000F0410 <AmiBlitz3.ab3@31881> saved0               Ds.w 1
000F0490 <AmiBlitz3.ab3@31882> lastpath             Ds.b 128
000F0510 <AmiBlitz3.ab3@31883> lastpath2            Ds.b 128
000F05D8 <AmiBlitz3.ab3@31884> fpustackbase         Ds.w 100
000F05DC <AmiBlitz3.ab3@31885> 
000F05DE <AmiBlitz3.ab3@31886> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000F05E2 <AmiBlitz3.ab3@31887> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000F05E6 <AmiBlitz3.ab3@31888> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000F05EA <AmiBlitz3.ab3@31889> rightsidetype        Dc.l 0  ; same as above but right side
000F05EE <AmiBlitz3.ab3@31892> trap15temp           Ds.l 1
000F05F2 <AmiBlitz3.ab3@31893> trap15temp2          Ds.l 1
000F05F6 <AmiBlitz3.ab3@31894> templibend           Ds.l 1
000F05FA <AmiBlitz3.ab3@31895> tempdata1start       Ds.l 1
000F05FE <AmiBlitz3.ab3@31896> stacktrack           Ds.l 1
000F0602 <AmiBlitz3.ab3@31897> pad                  Ds.l 1
000F0702 <AmiBlitz3.ab3@31898> includetemp          Ds.b 256
000F1102 <AmiBlitz3.ab3@31899> includetemp2         Ds.b 256*10
000F1104 <AmiBlitz3.ab3@31900> funccall             Ds.w 1
000F1108 <AmiBlitz3.ab3@31903> ptr_resfile          Ds.l 1
000F110A <AmiBlitz3.ab3@31904> CalculatorButtonBinFlag:    Ds.w 1
000F110C <AmiBlitz3.ab3@31905> CalculatorButtonDecFlag:    Ds.w 1
000F1110 <AmiBlitz3.ab3@31906> ped_startup_addr:    Ds.l 1
000F1111 <AmiBlitz3.ab3@31907> start_without_libs:  Ds.b 1
000F1112 <AmiBlitz3.ab3@31908> skip_bytes:          Ds.b 1
000F1116 <AmiBlitz3.ab3@31909> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F111A <AmiBlitz3.ab3@31910> beforeparameterfetch Ds.l 1
000F111E <AmiBlitz3.ab3@31911> typetocast           Ds.l 1
000F1122 <AmiBlitz3.ab3@31912> errorcounter         Ds.l 1
000F1123 <AmiBlitz3.ab3@31913> iserror              Ds.b 1
000F1124 <AmiBlitz3.ab3@31914> MorphOS:             Ds.b 1 ; added to be able to select the cacheclear function 0=AOS, 1=MorphOS  tomsmart1
000F1128 <AmiBlitz3.ab3@31917> CLIMode:             Dc.l 0
000F112C <AmiBlitz3.ab3@31918> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F1130 <AmiBlitz3.ab3@31919> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
