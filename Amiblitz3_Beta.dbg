00000008 <AmiBlitz3.ab2@0> 
00000014 <AmiBlitz3.ab2@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab2@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab2@65> !basic
000000AC <AmiBlitz3.ab2@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab2@71> CLIMode     = False
000000C8 <AmiBlitz3.ab2@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab2@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab2@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab2@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.bb2@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002E6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000036A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
00000384 <error.include.bb2@128> XINCLUDE "dos.include.bb2"
000003BC <error.include.bb2@129> XINCLUDE "dos.include.bb2"
0000041C <error.include.bb2@130> XINCLUDE "dos.include.bb2"
0000042A <error.include.bb2@132> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
00000446 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
00000454 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
0000047C <error.include.bb2@136> XINCLUDE "dos.include.bb2"
0000048A <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000492 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
000004C4 <error.include.bb2@140> XINCLUDE "dos.include.bb2"
000004DE <error.include.bb2@145> XINCLUDE "dos.include.bb2"
00000516 <error.include.bb2@146> XINCLUDE "dos.include.bb2"
0000051C <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000560 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005A8 <error.include.bb2@149> XINCLUDE "dos.include.bb2"
000005B2 <error.include.bb2@153> XINCLUDE "dos.include.bb2"
000005CA <error.include.bb2@155> XINCLUDE "dos.include.bb2"
00000604 <error.include.bb2@194> XINCLUDE "dos.include.bb2"
0000060C <error.include.bb2@196> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@198> XINCLUDE "dos.include.bb2"
0000068E <error.include.bb2@199> XINCLUDE "dos.include.bb2"
0000069C <error.include.bb2@201> XINCLUDE "dos.include.bb2"
000006AA <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000006B8 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000006C6 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
00000726 <error.include.bb2@205> XINCLUDE "dos.include.bb2"
00000734 <error.include.bb2@206> XINCLUDE "dos.include.bb2"
0000076A <error.include.bb2@209> XINCLUDE "dos.include.bb2"
00000774 <error.include.bb2@213> XINCLUDE "dos.include.bb2"
00000790 <error.include.bb2@214> XINCLUDE "dos.include.bb2"
00000790 <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
00000790 <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
00000790 <useful.include.bb2@1> XINCLUDE "dos.include.bb2"
000007BE <useful.include.bb2@220> XINCLUDE "dos.include.bb2"
000007C8 <useful.include.bb2@221> XINCLUDE "dos.include.bb2"
000007DC <useful.include.bb2@222> XINCLUDE "dos.include.bb2"
000007E4 <useful.include.bb2@223> XINCLUDE "dos.include.bb2"
0000080C <useful.include.bb2@224> XINCLUDE "dos.include.bb2"
00000832 <useful.include.bb2@225> XINCLUDE "dos.include.bb2"
00000852 <useful.include.bb2@228> XINCLUDE "dos.include.bb2"
00000860 <useful.include.bb2@229> XINCLUDE "dos.include.bb2"
00000886 <useful.include.bb2@230> XINCLUDE "dos.include.bb2"
0000088E <useful.include.bb2@233> XINCLUDE "dos.include.bb2"
00000896 <useful.include.bb2@234> XINCLUDE "dos.include.bb2"
0000089C <useful.include.bb2@235> XINCLUDE "dos.include.bb2"
000008B8 <useful.include.bb2@236> XINCLUDE "dos.include.bb2"
000008DC <useful.include.bb2@237> XINCLUDE "dos.include.bb2"
000008F0 <useful.include.bb2@238> XINCLUDE "dos.include.bb2"
000008F6 <useful.include.bb2@239> XINCLUDE "dos.include.bb2"
00000940 <useful.include.bb2@240> XINCLUDE "dos.include.bb2"
00000942 <useful.include.bb2@241> XINCLUDE "dos.include.bb2"
00000950 <useful.include.bb2@243> XINCLUDE "dos.include.bb2"
00000970 <useful.include.bb2@245> XINCLUDE "dos.include.bb2"
000009CE <useful.include.bb2@246> XINCLUDE "dos.include.bb2"
000009D4 <useful.include.bb2@247> XINCLUDE "dos.include.bb2"
000009E2 <useful.include.bb2@248> XINCLUDE "dos.include.bb2"
000009F6 <useful.include.bb2@249> XINCLUDE "dos.include.bb2"
00000A08 <useful.include.bb2@250> XINCLUDE "dos.include.bb2"
00000A16 <useful.include.bb2@251> XINCLUDE "dos.include.bb2"
00000A1C <useful.include.bb2@252> XINCLUDE "dos.include.bb2"
00000A28 <useful.include.bb2@253> XINCLUDE "dos.include.bb2"
00000A3C <useful.include.bb2@256> XINCLUDE "dos.include.bb2"
00000A50 <useful.include.bb2@257> XINCLUDE "dos.include.bb2"
00000A62 <useful.include.bb2@258> XINCLUDE "dos.include.bb2"
00000A70 <useful.include.bb2@259> XINCLUDE "dos.include.bb2"
00000A8E <useful.include.bb2@260> XINCLUDE "dos.include.bb2"
00000A94 <useful.include.bb2@261> XINCLUDE "dos.include.bb2"
00000AA8 <useful.include.bb2@265> XINCLUDE "dos.include.bb2"
00000AB2 <useful.include.bb2@266> XINCLUDE "dos.include.bb2"
00000ABA <useful.include.bb2@267> XINCLUDE "dos.include.bb2"
00000AD8 <useful.include.bb2@268> XINCLUDE "dos.include.bb2"
00000ADE <useful.include.bb2@269> XINCLUDE "dos.include.bb2"
00000B0A <useful.include.bb2@270> XINCLUDE "dos.include.bb2"
00000B10 <useful.include.bb2@272> XINCLUDE "dos.include.bb2"
00000B22 <useful.include.bb2@273> XINCLUDE "dos.include.bb2"
00000B3A <useful.include.bb2@274> XINCLUDE "dos.include.bb2"
00000B52 <useful.include.bb2@275> XINCLUDE "dos.include.bb2"
00000B70 <useful.include.bb2@276> XINCLUDE "dos.include.bb2"
00000B72 <useful.include.bb2@278> XINCLUDE "dos.include.bb2"
00000B80 <useful.include.bb2@279> XINCLUDE "dos.include.bb2"
00000BA6 <useful.include.bb2@280> XINCLUDE "dos.include.bb2"
00000C3A <useful.include.bb2@281> XINCLUDE "dos.include.bb2"
00000C48 <useful.include.bb2@283> XINCLUDE "dos.include.bb2"
00000C4E <useful.include.bb2@284> XINCLUDE "dos.include.bb2"
00000C78 <useful.include.bb2@285> XINCLUDE "dos.include.bb2"
00000C96 <useful.include.bb2@286> XINCLUDE "dos.include.bb2"
00000C96 <strptr.include.bb2@31> XINCLUDE "dos.include.bb2"
00000CC0 <strptr.include.bb2@33> XINCLUDE "dos.include.bb2"
00000CDA <strptr.include.bb2@84> XINCLUDE "dos.include.bb2"
00000CE4 <strptr.include.bb2@85> XINCLUDE "dos.include.bb2"
00000D34 <strptr.include.bb2@86> XINCLUDE "dos.include.bb2"
00000D38 <strptr.include.bb2@88> XINCLUDE "dos.include.bb2"
00000D66 <strptr.include.bb2@137> XINCLUDE "dos.include.bb2"
00000D70 <strptr.include.bb2@138> XINCLUDE "dos.include.bb2"
00000DC0 <strptr.include.bb2@139> XINCLUDE "dos.include.bb2"
00000DD4 <strptr.include.bb2@140> XINCLUDE "dos.include.bb2"
00000DE6 <strptr.include.bb2@141> XINCLUDE "dos.include.bb2"
00000E0E <strptr.include.bb2@142> XINCLUDE "dos.include.bb2"
00000E18 <strptr.include.bb2@143> XINCLUDE "dos.include.bb2"
00000E26 <strptr.include.bb2@144> XINCLUDE "dos.include.bb2"
00000E30 <strptr.include.bb2@145> XINCLUDE "dos.include.bb2"
00000E58 <strptr.include.bb2@146> XINCLUDE "dos.include.bb2"
00000E72 <strptr.include.bb2@147> XINCLUDE "dos.include.bb2"
00000E8A <strptr.include.bb2@151> XINCLUDE "dos.include.bb2"
00000EA4 <strptr.include.bb2@213> XINCLUDE "dos.include.bb2"
00000EAE <strptr.include.bb2@214> XINCLUDE "dos.include.bb2"
00000EBC <strptr.include.bb2@215> XINCLUDE "dos.include.bb2"
00000EEE <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00000F0C <strptr.include.bb2@218> XINCLUDE "dos.include.bb2"
00000F16 <strptr.include.bb2@219> XINCLUDE "dos.include.bb2"
00000F2C <strptr.include.bb2@221> XINCLUDE "dos.include.bb2"
00000F36 <strptr.include.bb2@222> XINCLUDE "dos.include.bb2"
00000F46 <strptr.include.bb2@223> XINCLUDE "dos.include.bb2"
00000F4E <strptr.include.bb2@224> XINCLUDE "dos.include.bb2"
00000F50 <strptr.include.bb2@226> XINCLUDE "dos.include.bb2"
00000F7E <strptr.include.bb2@227> XINCLUDE "dos.include.bb2"
00000F7E <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
00000F94 <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
00000FAE <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
00000FB8 <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
00000FDA <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
00000FFE <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
00001010 <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
00001028 <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
0000103C <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
0000104E <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
0000105E <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
00001064 <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
00001074 <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
00001084 <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
0000109E <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
000010A2 <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
000010BC <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
000010EC <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
000010F6 <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
00001100 <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
00001122 <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
00001146 <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
00001158 <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
00001170 <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
00001184 <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
00001196 <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
000011A6 <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
000011AC <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
000011BC <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
000011CC <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
000011E6 <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
000011EC <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
000011F2 <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
000011F6 <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
00001210 <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
00001218 <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
00001222 <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
00001238 <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
0000124C <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
00001270 <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
0000127E <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
00001288 <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
0000128E <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
00001298 <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
0000129E <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
000012BC <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
000012C4 <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
000012CE <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
000012EC <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
00001302 <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
00001316 <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
0000134A <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
00001358 <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
00001362 <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
00001368 <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
00001372 <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
00001376 <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
0000137C <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
00001396 <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
000013A0 <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
000013AA <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
000013C0 <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
000013D0 <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
000013DA <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
000013E0 <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
000013E4 <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
00001406 <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
0000140E <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
00001428 <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
00001432 <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
00001448 <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
0000145C <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
000014B2 <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
000014EC <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
000014FE <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
00001520 <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
00001526 <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
0000157C <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
000015B6 <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
000015BC <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
000015F6 <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
00001630 <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
00001642 <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
0000164C <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
00001652 <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
0000165C <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
00001670 <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
000016B6 <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
000016BE <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
000016DC <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
00001708 <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
00001726 <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
00001740 <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
0000175A <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
000017DC <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
000017F0 <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
00001808 <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
0000180E <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
00001826 <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
0000183C <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
00001856 <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
0000186A <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
00001878 <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
000018CE <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
00001904 <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
00001934 <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
000019BC <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
000019C2 <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
000019D0 <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
00001A26 <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
00001A5C <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
00001A8C <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
00001A92 <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
00001AAC <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00001ABA <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
00001AF4 <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
00001B2A <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
00001B5A <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
00001B68 <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
00001B72 <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
00001B78 <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
00001B82 <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00001B96 <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
00001B96 <dos.include.bb2@57> XINCLUDE "dos.include.bb2"
00001BAC <dos.include.bb2@60> XINCLUDE "dos.include.bb2"
00001BB4 <dos.include.bb2@78> XINCLUDE "dos.include.bb2"
00001BBC <dos.include.bb2@79> XINCLUDE "dos.include.bb2"
00001BE4 <dos.include.bb2@80> XINCLUDE "dos.include.bb2"
00001BEC <dos.include.bb2@81> XINCLUDE "dos.include.bb2"
00001C14 <dos.include.bb2@82> XINCLUDE "dos.include.bb2"
00001C3C <dos.include.bb2@83> XINCLUDE "dos.include.bb2"
00001C64 <dos.include.bb2@84> XINCLUDE "dos.include.bb2"
00001C6C <dos.include.bb2@85> XINCLUDE "dos.include.bb2"
00001C74 <dos.include.bb2@86> XINCLUDE "dos.include.bb2"
00001C7C <dos.include.bb2@87> XINCLUDE "dos.include.bb2"
00001C84 <dos.include.bb2@88> XINCLUDE "dos.include.bb2"
00001C8C <dos.include.bb2@89> XINCLUDE "dos.include.bb2"
00001C94 <dos.include.bb2@90> XINCLUDE "dos.include.bb2"
00001C9C <dos.include.bb2@91> XINCLUDE "dos.include.bb2"
00001CA4 <dos.include.bb2@92> XINCLUDE "dos.include.bb2"
00001CAC <dos.include.bb2@93> XINCLUDE "dos.include.bb2"
00001CCC <dos.include.bb2@94> XINCLUDE "dos.include.bb2"
00001CD4 <dos.include.bb2@95> XINCLUDE "dos.include.bb2"
00001CDC <dos.include.bb2@96> XINCLUDE "dos.include.bb2"
00001D04 <dos.include.bb2@98> XINCLUDE "dos.include.bb2"
00001D1A <dos.include.bb2@129> XINCLUDE "dos.include.bb2"
00001D26 <dos.include.bb2@130> XINCLUDE "dos.include.bb2"
00001D2A <dos.include.bb2@131> XINCLUDE "dos.include.bb2"
00001D40 <dos.include.bb2@144> XINCLUDE "dos.include.bb2"
00001D5A <dos.include.bb2@145> XINCLUDE "dos.include.bb2"
00001D70 <dos.include.bb2@146> XINCLUDE "dos.include.bb2"
00001D9A <dos.include.bb2@147> XINCLUDE "dos.include.bb2"
00001DA4 <dos.include.bb2@148> XINCLUDE "dos.include.bb2"
00001DAA <dos.include.bb2@149> XINCLUDE "dos.include.bb2"
00001DC0 <dos.include.bb2@162> XINCLUDE "dos.include.bb2"
00001DDA <dos.include.bb2@163> XINCLUDE "dos.include.bb2"
00001DF0 <dos.include.bb2@164> XINCLUDE "dos.include.bb2"
00001E1A <dos.include.bb2@165> XINCLUDE "dos.include.bb2"
00001E24 <dos.include.bb2@166> XINCLUDE "dos.include.bb2"
00001E2A <dos.include.bb2@167> XINCLUDE "dos.include.bb2"
00001E54 <dos.include.bb2@183> XINCLUDE "dos.include.bb2"
00001E60 <dos.include.bb2@184> XINCLUDE "dos.include.bb2"
00001E80 <dos.include.bb2@185> XINCLUDE "dos.include.bb2"
00001E8A <dos.include.bb2@186> XINCLUDE "dos.include.bb2"
00001E9A <dos.include.bb2@187> XINCLUDE "dos.include.bb2"
00001EAA <dos.include.bb2@188> XINCLUDE "dos.include.bb2"
00001EB4 <dos.include.bb2@190> XINCLUDE "dos.include.bb2"
00001ECE <dos.include.bb2@191> XINCLUDE "dos.include.bb2"
00001EE4 <dos.include.bb2@429> XINCLUDE "dos.include.bb2"
00001EF6 <dos.include.bb2@431> XINCLUDE "dos.include.bb2"
00001F70 <dos.include.bb2@432> XINCLUDE "dos.include.bb2"
00001F9A <dos.include.bb2@433> XINCLUDE "dos.include.bb2"
00001FB2 <dos.include.bb2@434> XINCLUDE "dos.include.bb2"
00001FC8 <dos.include.bb2@460> XINCLUDE "dos.include.bb2"
00001FDA <dos.include.bb2@461> XINCLUDE "dos.include.bb2"
00001FDE <dos.include.bb2@462> XINCLUDE "dos.include.bb2"
00001FF4 <dos.include.bb2@478> XINCLUDE "dos.include.bb2"
00001FF6 <dos.include.bb2@479> XINCLUDE "dos.include.bb2"
00002030 <dos.include.bb2@540> XINCLUDE "dos.include.bb2"
00002064 <dos.include.bb2@542> XINCLUDE "dos.include.bb2"
0000208A <dos.include.bb2@543> XINCLUDE "dos.include.bb2"
000020AA <dos.include.bb2@544> XINCLUDE "dos.include.bb2"
000020CA <dos.include.bb2@545> XINCLUDE "dos.include.bb2"
000020F4 <dos.include.bb2@660> XINCLUDE "dos.include.bb2"
0000210A <dos.include.bb2@661> XINCLUDE "dos.include.bb2"
00002114 <dos.include.bb2@662> XINCLUDE "dos.include.bb2"
0000213C <dos.include.bb2@663> XINCLUDE "dos.include.bb2"
00002142 <dos.include.bb2@664> XINCLUDE "dos.include.bb2"
0000216A <dos.include.bb2@665> XINCLUDE "dos.include.bb2"
00002194 <dos.include.bb2@667> XINCLUDE "dos.include.bb2"
000021B2 <dos.include.bb2@668> XINCLUDE "dos.include.bb2"
000021DC <dos.include.bb2@691> XINCLUDE "dos.include.bb2"
0000224C <dos.include.bb2@692> XINCLUDE "dos.include.bb2"
00002276 <dos.include.bb2@693> XINCLUDE "dos.include.bb2"
00002294 <dos.include.bb2@694> XINCLUDE "dos.include.bb2"
000022BE <dos.include.bb2@729> XINCLUDE "dos.include.bb2"
000022DE <dos.include.bb2@730> XINCLUDE "dos.include.bb2"
0000230A <dos.include.bb2@731> XINCLUDE "dos.include.bb2"
00002314 <dos.include.bb2@732> XINCLUDE "dos.include.bb2"
0000232E <dos.include.bb2@733> XINCLUDE "dos.include.bb2"
00002358 <dos.include.bb2@880> XINCLUDE "dos.include.bb2"
00002406 <dos.include.bb2@881> XINCLUDE "dos.include.bb2"
0000241C <dos.include.bb2@882> XINCLUDE "dos.include.bb2"
00002426 <dos.include.bb2@883> XINCLUDE "dos.include.bb2"
0000244E <dos.include.bb2@884> XINCLUDE "dos.include.bb2"
00002458 <dos.include.bb2@885> XINCLUDE "dos.include.bb2"
0000245E <dos.include.bb2@886> XINCLUDE "dos.include.bb2"
00002464 <dos.include.bb2@887> XINCLUDE "dos.include.bb2"
0000246A <dos.include.bb2@888> XINCLUDE "dos.include.bb2"
0000247C <dos.include.bb2@890> XINCLUDE "dos.include.bb2"
00002486 <dos.include.bb2@892> XINCLUDE "dos.include.bb2"
000024A0 <dos.include.bb2@893> XINCLUDE "dos.include.bb2"
000024DE <dos.include.bb2@914> XINCLUDE "dos.include.bb2"
000024E6 <dos.include.bb2@915> XINCLUDE "dos.include.bb2"
00002594 <dos.include.bb2@916> XINCLUDE "dos.include.bb2"
000025A8 <dos.include.bb2@917> XINCLUDE "dos.include.bb2"
000025EA <dos.include.bb2@918> XINCLUDE "dos.include.bb2"
0000260A <dos.include.bb2@920> XINCLUDE "dos.include.bb2"
00002614 <dos.include.bb2@921> XINCLUDE "dos.include.bb2"
00002630 <dos.include.bb2@922> XINCLUDE "dos.include.bb2"
0000266A <dos.include.bb2@974> XINCLUDE "dos.include.bb2"
00002672 <dos.include.bb2@975> XINCLUDE "dos.include.bb2"
00002720 <dos.include.bb2@976> XINCLUDE "dos.include.bb2"
00002756 <dos.include.bb2@977> XINCLUDE "dos.include.bb2"
00002776 <dos.include.bb2@978> XINCLUDE "dos.include.bb2"
00002794 <dos.include.bb2@979> XINCLUDE "dos.include.bb2"
000027B8 <dos.include.bb2@980> XINCLUDE "dos.include.bb2"
000027C2 <dos.include.bb2@982> XINCLUDE "dos.include.bb2"
000027DE <dos.include.bb2@983> XINCLUDE "dos.include.bb2"
00002818 <dos.include.bb2@1000> XINCLUDE "dos.include.bb2"
000028C6 <dos.include.bb2@1001> XINCLUDE "dos.include.bb2"
000028FE <dos.include.bb2@1002> XINCLUDE "dos.include.bb2"
0000291E <dos.include.bb2@1003> XINCLUDE "dos.include.bb2"
00002924 <dos.include.bb2@1004> XINCLUDE "dos.include.bb2"
00002944 <dos.include.bb2@1005> XINCLUDE "dos.include.bb2"
0000294E <dos.include.bb2@1006> XINCLUDE "dos.include.bb2"
00002968 <dos.include.bb2@1007> XINCLUDE "dos.include.bb2"
00002980 <dos.include.bb2@1008> XINCLUDE "dos.include.bb2"
0000298A <dos.include.bb2@1011> XINCLUDE "dos.include.bb2"
000029A6 <dos.include.bb2@1012> XINCLUDE "dos.include.bb2"
000029D0 <dos.include.bb2@1147> XINCLUDE "dos.include.bb2"
000029DE <dos.include.bb2@1149> XINCLUDE "dos.include.bb2"
00002AA4 <dos.include.bb2@1150> XINCLUDE "dos.include.bb2"
00002ACE <dos.include.bb2@1151> XINCLUDE "dos.include.bb2"
00002AF6 <dos.include.bb2@1153> XINCLUDE "dos.include.bb2"
00002B20 <dos.include.bb2@1154> XINCLUDE "dos.include.bb2"
00002B4A <dos.include.bb2@1156> XINCLUDE "dos.include.bb2"
00002B68 <dos.include.bb2@1157> XINCLUDE "dos.include.bb2"
00002B92 <dos.include.bb2@1175> XINCLUDE "dos.include.bb2"
00002BFE <dos.include.bb2@1177> XINCLUDE "dos.include.bb2"
00002C26 <dos.include.bb2@1178> XINCLUDE "dos.include.bb2"
00002C34 <dos.include.bb2@1179> XINCLUDE "dos.include.bb2"
00002C68 <dos.include.bb2@1180> XINCLUDE "dos.include.bb2"
00002C76 <dos.include.bb2@1183> XINCLUDE "dos.include.bb2"
00002C98 <dos.include.bb2@1189> XINCLUDE "dos.include.bb2"
00002CA6 <dos.include.bb2@1193> XINCLUDE "dos.include.bb2"
00002CCA <dos.include.bb2@1194> XINCLUDE "dos.include.bb2"
00002CF4 <dos.include.bb2@1195> XINCLUDE "dos.include.bb2"
00002D1E <dos.include.bb2@1198> XINCLUDE "dos.include.bb2"
00002D3C <dos.include.bb2@1199> XINCLUDE "dos.include.bb2"
00002D66 <dos.include.bb2@1260> XINCLUDE "dos.include.bb2"
00002DBE <dos.include.bb2@1261> XINCLUDE "dos.include.bb2"
00002DE8 <dos.include.bb2@1262> XINCLUDE "dos.include.bb2"
00002E06 <dos.include.bb2@1263> XINCLUDE "dos.include.bb2"
00002E1C <dos.include.bb2@1337> XINCLUDE "dos.include.bb2"
00002E22 <dos.include.bb2@1339> XINCLUDE "dos.include.bb2"
00002E2C <dos.include.bb2@1340> XINCLUDE "dos.include.bb2"
00002E36 <dos.include.bb2@1341> XINCLUDE "dos.include.bb2"
00002E54 <dos.include.bb2@1344> XINCLUDE "dos.include.bb2"
00002E5A <dos.include.bb2@1345> XINCLUDE "dos.include.bb2"
00002E60 <dos.include.bb2@1346> XINCLUDE "dos.include.bb2"
00002E70 <dos.include.bb2@1348> XINCLUDE "dos.include.bb2"
00002E76 <dos.include.bb2@1349> XINCLUDE "dos.include.bb2"
00002E7E <dos.include.bb2@1350> XINCLUDE "dos.include.bb2"
00002EA6 <dos.include.bb2@1351> XINCLUDE "dos.include.bb2"
00002EB0 <dos.include.bb2@1352> XINCLUDE "dos.include.bb2"
00002EBA <dos.include.bb2@1354> XINCLUDE "dos.include.bb2"
00002ECE <dos.include.bb2@1355> XINCLUDE "dos.include.bb2"
00002EE4 <dos.include.bb2@1460> XINCLUDE "dos.include.bb2"
00002EEA <dos.include.bb2@1466> XINCLUDE "dos.include.bb2"
00002F0E <dos.include.bb2@1467> XINCLUDE "dos.include.bb2"
00002F32 <dos.include.bb2@1468> XINCLUDE "dos.include.bb2"
00002F56 <dos.include.bb2@1469> XINCLUDE "dos.include.bb2"
00002F5C <dos.include.bb2@1470> XINCLUDE "dos.include.bb2"
00002F88 <dos.include.bb2@1471> XINCLUDE "dos.include.bb2"
00002F8A <dos.include.bb2@1472> XINCLUDE "dos.include.bb2"
00002FB8 <dos.include.bb2@1473> XINCLUDE "dos.include.bb2"
00002FE2 <dos.include.bb2@1489> XINCLUDE "dos.include.bb2"
00003066 <dos.include.bb2@1492> XINCLUDE "dos.include.bb2"
0000312E <dos.include.bb2@1493> XINCLUDE "dos.include.bb2"
00003138 <dos.include.bb2@1495> XINCLUDE "dos.include.bb2"
00003182 <dos.include.bb2@1496> XINCLUDE "dos.include.bb2"
000031CE <dos.include.bb2@1498> XINCLUDE "dos.include.bb2"
00003206 <dos.include.bb2@1499> XINCLUDE "dos.include.bb2"
00003218 <dos.include.bb2@1500> XINCLUDE "dos.include.bb2"
0000322E <dos.include.bb2@1501> XINCLUDE "dos.include.bb2"
00003234 <dos.include.bb2@1502> XINCLUDE "dos.include.bb2"
0000324A <dos.include.bb2@1503> XINCLUDE "dos.include.bb2"
0000327E <dos.include.bb2@1505> XINCLUDE "dos.include.bb2"
00003284 <dos.include.bb2@1506> XINCLUDE "dos.include.bb2"
0000328E <dos.include.bb2@1508> XINCLUDE "dos.include.bb2"
000032A8 <dos.include.bb2@1509> XINCLUDE "dos.include.bb2"
000032F2 <dos.include.bb2@1539> XINCLUDE "dos.include.bb2"
00003328 <dos.include.bb2@1541> XINCLUDE "dos.include.bb2"
0000334C <dos.include.bb2@1542> XINCLUDE "dos.include.bb2"
00003356 <dos.include.bb2@1543> XINCLUDE "dos.include.bb2"
0000337E <dos.include.bb2@1544> XINCLUDE "dos.include.bb2"
000033C6 <dos.include.bb2@1547> XINCLUDE "dos.include.bb2"
0000349C <dos.include.bb2@1549> XINCLUDE "dos.include.bb2"
000034C6 <dos.include.bb2@1550> XINCLUDE "dos.include.bb2"
000034E6 <dos.include.bb2@1551> XINCLUDE "dos.include.bb2"
00003520 <dos.include.bb2@1570> XINCLUDE "dos.include.bb2"
00003526 <dos.include.bb2@1572> XINCLUDE "dos.include.bb2"
0000352C <dos.include.bb2@1573> XINCLUDE "dos.include.bb2"
00003534 <dos.include.bb2@1574> XINCLUDE "dos.include.bb2"
0000356A <dos.include.bb2@1575> XINCLUDE "dos.include.bb2"
00003578 <dos.include.bb2@1576> XINCLUDE "dos.include.bb2"
00003582 <dos.include.bb2@1577> XINCLUDE "dos.include.bb2"
000035AE <dos.include.bb2@1578> XINCLUDE "dos.include.bb2"
000035BC <dos.include.bb2@1579> XINCLUDE "dos.include.bb2"
000035C6 <dos.include.bb2@1580> XINCLUDE "dos.include.bb2"
000035F4 <dos.include.bb2@1582> XINCLUDE "dos.include.bb2"
00003672 <dos.include.bb2@1585> XINCLUDE "dos.include.bb2"
000036C4 <dos.include.bb2@1588> XINCLUDE "dos.include.bb2"
000036D6 <dos.include.bb2@1589> XINCLUDE "dos.include.bb2"
00003744 <dos.include.bb2@1590> XINCLUDE "dos.include.bb2"
0000374A <dos.include.bb2@1591> XINCLUDE "dos.include.bb2"
00003796 <dos.include.bb2@1592> XINCLUDE "dos.include.bb2"
00003864 <dos.include.bb2@1596> XINCLUDE "dos.include.bb2"
00003944 <dos.include.bb2@1597> XINCLUDE "dos.include.bb2"
000039B0 <dos.include.bb2@1599> XINCLUDE "dos.include.bb2"
000039B6 <dos.include.bb2@1600> XINCLUDE "dos.include.bb2"
000039D2 <dos.include.bb2@1601> XINCLUDE "dos.include.bb2"
000039E0 <dos.include.bb2@1604> XINCLUDE "dos.include.bb2"
000039E6 <dos.include.bb2@1605> XINCLUDE "dos.include.bb2"
000039F8 <dos.include.bb2@1608> XINCLUDE "dos.include.bb2"
00003A0E <dos.include.bb2@1609> XINCLUDE "dos.include.bb2"
00003A18 <dos.include.bb2@1610> XINCLUDE "dos.include.bb2"
00003A34 <dos.include.bb2@1611> XINCLUDE "dos.include.bb2"
00003A5E <dos.include.bb2@2187> XINCLUDE "dos.include.bb2"
00003A72 <dos.include.bb2@2188> XINCLUDE "dos.include.bb2"
00003AB0 <dos.include.bb2@2189> XINCLUDE "dos.include.bb2"
00003B96 <dos.include.bb2@2190> XINCLUDE "dos.include.bb2"
00003B9C <dos.include.bb2@2191> XINCLUDE "dos.include.bb2"
00003BEC <dos.include.bb2@2192> XINCLUDE "dos.include.bb2"
00003C16 <dos.include.bb2@2193> XINCLUDE "dos.include.bb2"
00003C34 <dos.include.bb2@2194> XINCLUDE "dos.include.bb2"
00003C5E <dos.include.bb2@2218> XINCLUDE "dos.include.bb2"
00003C72 <dos.include.bb2@2219> XINCLUDE "dos.include.bb2"
00003CB0 <dos.include.bb2@2220> XINCLUDE "dos.include.bb2"
00003D96 <dos.include.bb2@2221> XINCLUDE "dos.include.bb2"
00003D9C <dos.include.bb2@2222> XINCLUDE "dos.include.bb2"
00003E0E <dos.include.bb2@2223> XINCLUDE "dos.include.bb2"
00003E38 <dos.include.bb2@2224> XINCLUDE "dos.include.bb2"
00003E56 <dos.include.bb2@2225> XINCLUDE "dos.include.bb2"
00003E90 <dos.include.bb2@2251> XINCLUDE "dos.include.bb2"
00003EC8 <dos.include.bb2@2252> XINCLUDE "dos.include.bb2"
00003F20 <dos.include.bb2@2253> XINCLUDE "dos.include.bb2"
00003F84 <dos.include.bb2@2254> XINCLUDE "dos.include.bb2"
00003FAE <dos.include.bb2@2256> XINCLUDE "dos.include.bb2"
00003FCE <dos.include.bb2@2257> XINCLUDE "dos.include.bb2"
00003FF8 <dos.include.bb2@2274> XINCLUDE "dos.include.bb2"
00003FFE <dos.include.bb2@2275> XINCLUDE "dos.include.bb2"
00004014 <dos.include.bb2@2276> XINCLUDE "dos.include.bb2"
0000401E <dos.include.bb2@2277> XINCLUDE "dos.include.bb2"
00004024 <dos.include.bb2@2278> XINCLUDE "dos.include.bb2"
00004034 <dos.include.bb2@2279> XINCLUDE "dos.include.bb2"
0000403E <dos.include.bb2@2281> XINCLUDE "dos.include.bb2"
00004058 <dos.include.bb2@2282> XINCLUDE "dos.include.bb2"
00004086 <dos.include.bb2@2302> XINCLUDE "dos.include.bb2"
000040A0 <dos.include.bb2@2303> XINCLUDE "dos.include.bb2"
000040BE <dos.include.bb2@2304> XINCLUDE "dos.include.bb2"
000040C8 <dos.include.bb2@2305> XINCLUDE "dos.include.bb2"
000040D8 <dos.include.bb2@2306> XINCLUDE "dos.include.bb2"
000040E0 <dos.include.bb2@2307> XINCLUDE "dos.include.bb2"
000040E8 <dos.include.bb2@2309> XINCLUDE "dos.include.bb2"
00004102 <dos.include.bb2@2310> XINCLUDE "dos.include.bb2"
00004130 <dos.include.bb2@2516> XINCLUDE "dos.include.bb2"
00004152 <dos.include.bb2@2517> XINCLUDE "dos.include.bb2"
0000415A <dos.include.bb2@2518> XINCLUDE "dos.include.bb2"
00004168 <dos.include.bb2@2519> XINCLUDE "dos.include.bb2"
00004182 <dos.include.bb2@2521> XINCLUDE "dos.include.bb2"
000041B0 <dos.include.bb2@2540> XINCLUDE "dos.include.bb2"
000041C4 <dos.include.bb2@2541> XINCLUDE "dos.include.bb2"
000041F8 <dos.include.bb2@2542> XINCLUDE "dos.include.bb2"
00004212 <dos.include.bb2@2544> XINCLUDE "dos.include.bb2"
0000421A <dos.include.bb2@2545> XINCLUDE "dos.include.bb2"
00004228 <dos.include.bb2@2546> XINCLUDE "dos.include.bb2"
00004242 <dos.include.bb2@2548> XINCLUDE "dos.include.bb2"
0000426C <dos.include.bb2@2684> XINCLUDE "dos.include.bb2"
00004278 <dos.include.bb2@2686> XINCLUDE "dos.include.bb2"
00004298 <dos.include.bb2@2687> XINCLUDE "dos.include.bb2"
000042BE <dos.include.bb2@2688> XINCLUDE "dos.include.bb2"
000042EA <dos.include.bb2@2689> XINCLUDE "dos.include.bb2"
00004302 <dos.include.bb2@2690> XINCLUDE "dos.include.bb2"
00004310 <dos.include.bb2@2692> XINCLUDE "dos.include.bb2"
00004316 <dos.include.bb2@2693> XINCLUDE "dos.include.bb2"
00004322 <dos.include.bb2@2694> XINCLUDE "dos.include.bb2"
00004328 <dos.include.bb2@2696> XINCLUDE "dos.include.bb2"
00004334 <dos.include.bb2@2697> XINCLUDE "dos.include.bb2"
00004344 <dos.include.bb2@2699> XINCLUDE "dos.include.bb2"
0000434A <dos.include.bb2@2700> XINCLUDE "dos.include.bb2"
00004356 <dos.include.bb2@2701> XINCLUDE "dos.include.bb2"
00004360 <dos.include.bb2@2703> XINCLUDE "dos.include.bb2"
0000437A <dos.include.bb2@2704> XINCLUDE "dos.include.bb2"
0000437A <AmiBlitz3.ab2@79> XINCLUDE "dos.include.bb2"
00004388 <AmiBlitz3.ab2@81> If dos_FromCLI{}
0000438E <AmiBlitz3.ab2@82>   CLIMode.l=True
0000439A <AmiBlitz3.ab2@83>   error_SetFlags{#error_stdout}
0000439A <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000043C2 <common.ab3@38> XINCLUDE "/Shared/common.ab3"
000043C8 <common.ab3@250> XINCLUDE "/Shared/common.ab3"
000043CA <common.ab3@251> XINCLUDE "/Shared/common.ab3"
0000455A <common.ab3@252> XINCLUDE "/Shared/common.ab3"
0000455E <common.ab3@253> XINCLUDE "/Shared/common.ab3"
00004562 <common.ab3@255> XINCLUDE "/Shared/common.ab3"
00004566 <common.ab3@256> XINCLUDE "/Shared/common.ab3"
0000456A <common.ab3@258> XINCLUDE "/Shared/common.ab3"
0000456E <common.ab3@259> XINCLUDE "/Shared/common.ab3"
00004572 <common.ab3@260> XINCLUDE "/Shared/common.ab3"
00004576 <common.ab3@261> XINCLUDE "/Shared/common.ab3"
0000457A <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000457E <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004582 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004586 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
0000458A <common.ab3@266> XINCLUDE "/Shared/common.ab3"
0000458E <common.ab3@268> XINCLUDE "/Shared/common.ab3"
00004592 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
00004596 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
0000459A <common.ab3@272> XINCLUDE "/Shared/common.ab3"
0000459E <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000045A2 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000045A6 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000045AA <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000045AE <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000045B2 <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000045B6 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000045BE <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000045C2 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000045C4 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000045C8 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000045CA <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000045CE <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000045D2 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000045D6 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000045DA <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000045DE <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000045E6 <common.ab3@292> XINCLUDE "/Shared/common.ab3"
000045EE <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000045F2 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000045F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000045FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000045FC <common.ab3@298> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
0000470A <common.ab3@303> XINCLUDE "/Shared/common.ab3"
0000470E <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004712 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004714 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
00004716 <common.ab3@308> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@310> XINCLUDE "/Shared/common.ab3"
0000471A <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000471B <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000471C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000471E <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004722 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@321> XINCLUDE "/Shared/common.ab3"
00004726 <common.ab3@323> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@325> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004730 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004732 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004736 <common.ab3@334> XINCLUDE "/Shared/common.ab3"
00004738 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
0000473A <common.ab3@336> XINCLUDE "/Shared/common.ab3"
0000473E <common.ab3@339> XINCLUDE "/Shared/common.ab3"
00004740 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
00004742 <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004744 <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004746 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004748 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
0000474C <common.ab3@347> XINCLUDE "/Shared/common.ab3"
0000474E <common.ab3@348> XINCLUDE "/Shared/common.ab3"
00004750 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
00004752 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004754 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004758 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
0000475A <common.ab3@361> XINCLUDE "/Shared/common.ab3"
0000475C <common.ab3@363> XINCLUDE "/Shared/common.ab3"
0000475E <common.ab3@365> XINCLUDE "/Shared/common.ab3"
00004760 <common.ab3@366> XINCLUDE "/Shared/common.ab3"
00004762 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004766 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004768 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000476A <common.ab3@370> XINCLUDE "/Shared/common.ab3"
0000476C <common.ab3@371> XINCLUDE "/Shared/common.ab3"
0000476E <common.ab3@372> XINCLUDE "/Shared/common.ab3"
00004770 <common.ab3@374> XINCLUDE "/Shared/common.ab3"
00004772 <common.ab3@376> XINCLUDE "/Shared/common.ab3"
00004774 <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
0000477A <common.ab3@380> XINCLUDE "/Shared/common.ab3"
000047A8 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
000047B2 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
000047B6 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
000047B8 <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000047BA <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000047BE <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000047C2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000047CB <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000047CE <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000047FB <common.ab3@391> XINCLUDE "/Shared/common.ab3"
0000483B <common.ab3@392> XINCLUDE "/Shared/common.ab3"
00004847 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
00004897 <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048A3 <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048F3 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000049EF <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000049F1 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
00004AB1 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
00004AF1 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004AF3 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004AF4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004AF8 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004AFC <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004B00 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
00004B04 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004B08 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B0C <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004B10 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004B14 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004B18 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004B1C <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004B20 <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004B24 <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004B28 <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004B2C <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004B30 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004B34 <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004B38 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004B3C <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004B46 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004B4A <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004B4E <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004B50 <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004B52 <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004B70 <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004B74 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004B76 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004B7A <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004BAE <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004BB2 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004BC0 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004BD2 <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004BD4 <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004BE8 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004BFE <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C14 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004C40 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004C44 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004C48 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004C4C <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004C50 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004C54 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004C58 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004C5C <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004C60 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004C64 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004C68 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004C6C <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004C86 <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004C8A <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004C8C <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004C90 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004C92 <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004C96 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004C9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004CAA <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004CAE <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004CB6 <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004CBA <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004CC6 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004CC8 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004CCC <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004CCE <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004CD2 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004CDA <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004CEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004D02 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004D16 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004D18 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004D1C <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004D20 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004D24 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004D28 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004D2C <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004D34 <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004D35 <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004D37 <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004D4A <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004D4E <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004D52 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004D53 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004D54 <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004D56 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004D5A <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004D5E <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004D62 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004D6A <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004D6E <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004D90 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004D91 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004D95 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004D99 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004D9D <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004DA1 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004DA2 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004DA2 <AmiBlitz3.ab2@86> XINCLUDE "/Shared/common.ab3"
00004DA2 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DA2 <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DC0 <hashmap.include.bb2@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DC8 <hashmap.include.bb2@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DF6 <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E26 <hashmap.include.bb2@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E36 <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E40 <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E46 <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E68 <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E86 <hashmap.include.bb2@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E98 <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EC0 <hashmap.include.bb2@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EC6 <hashmap.include.bb2@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EE0 <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EF8 <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F0A <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F18 <hashmap.include.bb2@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F4C <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F5A <hashmap.include.bb2@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.bb2@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F76 <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FB0 <hashmap.include.bb2@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FC0 <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FC6 <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD6 <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE6 <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FF4 <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005004 <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00005028 <hashmap.include.bb2@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00005034 <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005042 <hashmap.include.bb2@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005050 <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
0000505E <hashmap.include.bb2@73> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506C <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A2 <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B0 <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C0 <hashmap.include.bb2@77> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C8 <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000050CC <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000050E6 <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005100 <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511A <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
0000513A <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005144 <hashmap.include.bb2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00005150 <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00005164 <hashmap.include.bb2@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00005196 <hashmap.include.bb2@90> XINCLUDE "/Shared/preprocessor.include.ab3"
000051AE <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
000051BA <hashmap.include.bb2@92> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D6 <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E4 <hashmap.include.bb2@95> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F2 <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
0000521C <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00005226 <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000522C <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525A <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00005272 <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005290 <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A4 <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000052BC <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E4 <hashmap.include.bb2@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FC <hashmap.include.bb2@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000530A <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00005318 <hashmap.include.bb2@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005326 <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
0000533A <hashmap.include.bb2@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000538E <hashmap.include.bb2@114> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B8 <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000053FC <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000541C <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
0000542E <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005452 <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005460 <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B8 <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000054FE <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00005504 <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000550C <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00005534 <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00005546 <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005558 <hashmap.include.bb2@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00005592 <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A2 <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A8 <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000055BE <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C4 <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055DC <hashmap.include.bb2@139> XINCLUDE "/Shared/preprocessor.include.ab3"
0000561A <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005638 <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
0000566A <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000567E <hashmap.include.bb2@145> XINCLUDE "/Shared/preprocessor.include.ab3"
00005692 <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000056AA <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D2 <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000056DC <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EA <hashmap.include.bb2@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005702 <hashmap.include.bb2@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00005708 <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005710 <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005730 <hashmap.include.bb2@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00005756 <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005760 <hashmap.include.bb2@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576E <hashmap.include.bb2@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00005778 <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000057A4 <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B8 <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000057BE <hashmap.include.bb2@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000057CC <hashmap.include.bb2@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00005802 <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00005850 <hashmap.include.bb2@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00005878 <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00005892 <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A4 <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000058AE <hashmap.include.bb2@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058CA <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F0 <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000590E <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00005932 <hashmap.include.bb2@188> XINCLUDE "/Shared/preprocessor.include.ab3"
0000594C <hashmap.include.bb2@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005974 <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00005992 <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000059AE <hashmap.include.bb2@192> XINCLUDE "/Shared/preprocessor.include.ab3"
000059BC <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000059D0 <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000059F2 <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A14 <hashmap.include.bb2@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A22 <hashmap.include.bb2@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3C <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A6C <hashmap.include.bb2@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A72 <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA0 <hashmap.include.bb2@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AE2 <hashmap.include.bb2@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF2 <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AFC <hashmap.include.bb2@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B0C <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B12 <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B1E <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B24 <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B52 <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B82 <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB8 <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BCC <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE4 <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C0C <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3C <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C58 <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C66 <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C7A <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCE <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF8 <hashmap.include.bb2@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D3C <hashmap.include.bb2@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D62 <hashmap.include.bb2@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D68 <hashmap.include.bb2@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D86 <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DA4 <hashmap.include.bb2@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DC2 <hashmap.include.bb2@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DC8 <hashmap.include.bb2@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DEE <hashmap.include.bb2@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E1C <hashmap.include.bb2@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E44 <hashmap.include.bb2@271> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E68 <hashmap.include.bb2@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EBE <hashmap.include.bb2@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F10 <hashmap.include.bb2@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F66 <hashmap.include.bb2@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F76 <hashmap.include.bb2@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FC8 <hashmap.include.bb2@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FF0 <hashmap.include.bb2@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00006016 <hashmap.include.bb2@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00006030 <hashmap.include.bb2@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00006038 <hashmap.include.bb2@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00006060 <hashmap.include.bb2@286> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608E <hashmap.include.bb2@289> XINCLUDE "/Shared/preprocessor.include.ab3"
000060B6 <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
000060BE <hashmap.include.bb2@291> XINCLUDE "/Shared/preprocessor.include.ab3"
000060E2 <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00006116 <hashmap.include.bb2@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00006132 <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
0000613C <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00006150 <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00006170 <hashmap.include.bb2@298> XINCLUDE "/Shared/preprocessor.include.ab3"
0000618C <hashmap.include.bb2@299> XINCLUDE "/Shared/preprocessor.include.ab3"
0000619A <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
000061A8 <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AE <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
000061C6 <hashmap.include.bb2@303> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D6 <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00006204 <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00006260 <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000062D8 <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006334 <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000633A <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006344 <hashmap.include.bb2@312> XINCLUDE "/Shared/preprocessor.include.ab3"
0000634A <hashmap.include.bb2@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00006378 <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637E <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639E <hashmap.include.bb2@318> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A8 <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000063BA <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000063CA <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D4 <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
000063EE <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
00006408 <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006410 <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006416 <hashmap.include.bb2@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00006420 <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00006428 <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006450 <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00006456 <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646A <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000064A6 <hashmap.include.bb2@336> XINCLUDE "/Shared/preprocessor.include.ab3"
000064CC <hashmap.include.bb2@337> XINCLUDE "/Shared/preprocessor.include.ab3"
000064DA <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006516 <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652A <hashmap.include.bb2@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00006566 <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
0000657C <hashmap.include.bb2@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006590 <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659A <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BE <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F6 <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000065FC <hashmap.include.bb2@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00006608 <hashmap.include.bb2@351> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661C <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
00006626 <hashmap.include.bb2@355> XINCLUDE "/Shared/preprocessor.include.ab3"
0000664E <hashmap.include.bb2@356> XINCLUDE "/Shared/preprocessor.include.ab3"
00006676 <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00006688 <hashmap.include.bb2@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000066B4 <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E8 <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006714 <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006760 <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006770 <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00006776 <hashmap.include.bb2@366> XINCLUDE "/Shared/preprocessor.include.ab3"
00006782 <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000067B0 <hashmap.include.bb2@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000067B2 <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000067B8 <hashmap.include.bb2@373> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C2 <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EC <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000067F6 <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000067FC <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006826 <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
0000682E <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0000684E <hashmap.include.bb2@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00006858 <hashmap.include.bb2@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00006866 <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00006876 <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006880 <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000689A <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
0000689A <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B4 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
000068CE <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F0 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006922 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006926 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006940 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695A <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006964 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697A <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697E <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006998 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
000069CC <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F0 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F6 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A20 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A4A <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A54 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A62 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A84 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB8 <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD4 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ADE <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFA <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B08 <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1C <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3E <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B60 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7E <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAC <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB2 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BC2 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BC6 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDC <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BFC <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C06 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C30 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C46 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C56 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C72 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C8E <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CAA <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC6 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CE2 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CFE <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D1A <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D36 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D52 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6E <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8A <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA6 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC2 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDE <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DFA <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E16 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E32 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4E <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6A <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E86 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA2 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EBE <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDA <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF6 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F12 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F2E <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4A <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F66 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F82 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9E <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBA <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD6 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF2 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700E <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702A <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007046 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007062 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707E <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709A <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B6 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D2 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EE <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710A <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007126 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007142 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715E <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717A <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007196 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B2 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CE <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EA <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00007206 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007222 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723E <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725A <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007276 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007292 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AE <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CA <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E6 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007302 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731E <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733A <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007356 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007372 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738E <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AA <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C6 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E2 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FE <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741A <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007436 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007452 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746E <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748A <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A6 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C2 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DE <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FA <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00007516 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007532 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754E <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756A <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007586 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A2 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BE <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DA <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F6 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007612 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762E <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764A <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007666 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007682 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769E <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BA <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D6 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F2 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770E <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772A <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007746 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007762 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777E <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779A <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B6 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D2 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EE <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780A <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007826 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007842 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785E <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787A <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007896 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B2 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CE <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EA <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007906 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007922 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793E <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795A <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007976 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007992 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AE <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CA <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E6 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A02 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1E <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3A <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A56 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A5E <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A68 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A72 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A78 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA6 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC2 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AF4 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFE <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B2A <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B34 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3E <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B58 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B86 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA2 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB0 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BEA <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF2 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C0C <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C32 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C54 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C78 <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C7E <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C8C <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C92 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C9A <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CA0 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CA8 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CBC <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE2 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D0A <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D14 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D28 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3C <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D4C <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D66 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D8E <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA2 <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DC4 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCA <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD2 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD8 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DFA <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E04 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E12 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E30 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3E <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E46 <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4C <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E60 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E78 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E92 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E98 <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA0 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA6 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EBA <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC4 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECC <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE0 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF4 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F08 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F26 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F34 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F44 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6C <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8E <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA2 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC0 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FCE <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FF4 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000801C <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803E <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806E <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
0000809C <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000080CE <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DC <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000080E2 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F2 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F8 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000811E <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008140 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00008168 <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00008188 <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
000081AA <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B0 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000081BE <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000081CC <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000081D2 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000081DA <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F8 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000820C <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000821C <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008232 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000824A <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
00008266 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008270 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
0000828C <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
0000829E <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00008308 <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00008318 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000831E <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00008324 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833C <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000834C <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000083D2 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000840C <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008442 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008452 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008460 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00008466 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008476 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A0 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A6 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000084D2 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E2 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F2 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008510 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
0000851E <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008554 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00008578 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
0000858C <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
0000859C <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000085BA <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C8 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000085EC <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008610 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000861E <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
0000862C <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864C <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865A <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008660 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00008666 <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008674 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008682 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
000086A2 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B0 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B6 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D0 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0000870A <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
0000872C <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008754 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000875A <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
00008768 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
0000876E <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008782 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008792 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A8 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C0 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DC <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E6 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
00008802 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008830 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
0000886C <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
0000887C <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
0000888A <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008890 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A0 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000088CA <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D0 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000088FC <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
0000890C <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
0000891C <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
0000893A <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008948 <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
0000897E <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A2 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B6 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
000089C6 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E4 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F2 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A16 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A3A <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A40 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A50 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A56 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A78 <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A80 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AB6 <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AD2 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AD8 <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0E <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2A <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B52 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B70 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B8E <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBC <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C1E <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C38 <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C52 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C5C <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C9A <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C9E <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CA8 <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD6 <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CF6 <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0E <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6C <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D98 <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DAA <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DBA <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DD2 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DD8 <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E12 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E1C <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E22 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2C <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E3E <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E3E <AmiBlitz3.ab2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E3E <wizard_Table.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
00008E4A <wizard_Table.include.bb2@73> XINCLUDE "PE/wizard_Table.include.bb2"
00008E6C <wizard_Table.include.bb2@78> XINCLUDE "PE/wizard_Table.include.bb2"
00008EC8 <wizard_Table.include.bb2@79> XINCLUDE "PE/wizard_Table.include.bb2"
00008ECE <wizard_Table.include.bb2@80> XINCLUDE "PE/wizard_Table.include.bb2"
00008ECE <wizard_Tools.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
00008ECE <screen.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
00008ECE <asl.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
00008EF2 <asl.include.bb2@93> XINCLUDE "PE/wizard_Table.include.bb2"
00008F1A <asl.include.bb2@94> XINCLUDE "PE/wizard_Table.include.bb2"
00008F3E <asl.include.bb2@95> XINCLUDE "PE/wizard_Table.include.bb2"
00008F6C <asl.include.bb2@294> XINCLUDE "PE/wizard_Table.include.bb2"
0000918A <asl.include.bb2@296> XINCLUDE "PE/wizard_Table.include.bb2"
000091B8 <asl.include.bb2@298> XINCLUDE "PE/wizard_Table.include.bb2"
000091E4 <asl.include.bb2@300> XINCLUDE "PE/wizard_Table.include.bb2"
00009220 <asl.include.bb2@301> XINCLUDE "PE/wizard_Table.include.bb2"
0000924C <asl.include.bb2@302> XINCLUDE "PE/wizard_Table.include.bb2"
00009278 <asl.include.bb2@303> XINCLUDE "PE/wizard_Table.include.bb2"
000092A4 <asl.include.bb2@304> XINCLUDE "PE/wizard_Table.include.bb2"
000092D0 <asl.include.bb2@305> XINCLUDE "PE/wizard_Table.include.bb2"
000092FC <asl.include.bb2@306> XINCLUDE "PE/wizard_Table.include.bb2"
00009328 <asl.include.bb2@307> XINCLUDE "PE/wizard_Table.include.bb2"
00009354 <asl.include.bb2@308> XINCLUDE "PE/wizard_Table.include.bb2"
00009380 <asl.include.bb2@309> XINCLUDE "PE/wizard_Table.include.bb2"
0000940A <asl.include.bb2@311> XINCLUDE "PE/wizard_Table.include.bb2"
00009494 <asl.include.bb2@312> XINCLUDE "PE/wizard_Table.include.bb2"
00009532 <asl.include.bb2@313> XINCLUDE "PE/wizard_Table.include.bb2"
0000957C <asl.include.bb2@314> XINCLUDE "PE/wizard_Table.include.bb2"
000095BC <asl.include.bb2@315> XINCLUDE "PE/wizard_Table.include.bb2"
000095C2 <asl.include.bb2@316> XINCLUDE "PE/wizard_Table.include.bb2"
0000960C <asl.include.bb2@319> XINCLUDE "PE/wizard_Table.include.bb2"
0000964C <asl.include.bb2@320> XINCLUDE "PE/wizard_Table.include.bb2"
00009676 <asl.include.bb2@321> XINCLUDE "PE/wizard_Table.include.bb2"
0000967C <asl.include.bb2@322> XINCLUDE "PE/wizard_Table.include.bb2"
000096A6 <asl.include.bb2@323> XINCLUDE "PE/wizard_Table.include.bb2"
000096D0 <asl.include.bb2@325> XINCLUDE "PE/wizard_Table.include.bb2"
000096FA <asl.include.bb2@327> XINCLUDE "PE/wizard_Table.include.bb2"
00009704 <asl.include.bb2@328> XINCLUDE "PE/wizard_Table.include.bb2"
00009722 <asl.include.bb2@329> XINCLUDE "PE/wizard_Table.include.bb2"
00009744 <asl.include.bb2@330> XINCLUDE "PE/wizard_Table.include.bb2"
00009772 <asl.include.bb2@331> XINCLUDE "PE/wizard_Table.include.bb2"
000097A0 <asl.include.bb2@332> XINCLUDE "PE/wizard_Table.include.bb2"
000097CE <asl.include.bb2@333> XINCLUDE "PE/wizard_Table.include.bb2"
00009814 <asl.include.bb2@336> XINCLUDE "PE/wizard_Table.include.bb2"
0000985A <asl.include.bb2@337> XINCLUDE "PE/wizard_Table.include.bb2"
000098A0 <asl.include.bb2@338> XINCLUDE "PE/wizard_Table.include.bb2"
000098D8 <asl.include.bb2@340> XINCLUDE "PE/wizard_Table.include.bb2"
000099D6 <asl.include.bb2@341> XINCLUDE "PE/wizard_Table.include.bb2"
000099F4 <asl.include.bb2@343> XINCLUDE "PE/wizard_Table.include.bb2"
000099FE <asl.include.bb2@345> XINCLUDE "PE/wizard_Table.include.bb2"
00009A24 <asl.include.bb2@346> XINCLUDE "PE/wizard_Table.include.bb2"
00009A36 <asl.include.bb2@348> XINCLUDE "PE/wizard_Table.include.bb2"
00009A64 <asl.include.bb2@349> XINCLUDE "PE/wizard_Table.include.bb2"
00009A8C <asl.include.bb2@350> XINCLUDE "PE/wizard_Table.include.bb2"
00009A9E <asl.include.bb2@351> XINCLUDE "PE/wizard_Table.include.bb2"
00009AF4 <asl.include.bb2@352> XINCLUDE "PE/wizard_Table.include.bb2"
00009B2A <asl.include.bb2@353> XINCLUDE "PE/wizard_Table.include.bb2"
00009B3A <asl.include.bb2@355> XINCLUDE "PE/wizard_Table.include.bb2"
00009B40 <asl.include.bb2@356> XINCLUDE "PE/wizard_Table.include.bb2"
00009B52 <asl.include.bb2@357> XINCLUDE "PE/wizard_Table.include.bb2"
00009B5C <asl.include.bb2@358> XINCLUDE "PE/wizard_Table.include.bb2"
00009B96 <asl.include.bb2@359> XINCLUDE "PE/wizard_Table.include.bb2"
00009B9C <asl.include.bb2@360> XINCLUDE "PE/wizard_Table.include.bb2"
00009BF4 <asl.include.bb2@361> XINCLUDE "PE/wizard_Table.include.bb2"
00009C12 <asl.include.bb2@363> XINCLUDE "PE/wizard_Table.include.bb2"
00009C18 <asl.include.bb2@366> XINCLUDE "PE/wizard_Table.include.bb2"
00009C28 <asl.include.bb2@369> XINCLUDE "PE/wizard_Table.include.bb2"
00009C38 <asl.include.bb2@370> XINCLUDE "PE/wizard_Table.include.bb2"
00009C48 <asl.include.bb2@371> XINCLUDE "PE/wizard_Table.include.bb2"
00009C58 <asl.include.bb2@372> XINCLUDE "PE/wizard_Table.include.bb2"
00009C68 <asl.include.bb2@374> XINCLUDE "PE/wizard_Table.include.bb2"
00009C72 <asl.include.bb2@376> XINCLUDE "PE/wizard_Table.include.bb2"
00009C86 <asl.include.bb2@377> XINCLUDE "PE/wizard_Table.include.bb2"
00009C9C <asl.include.bb2@393> XINCLUDE "PE/wizard_Table.include.bb2"
00009CC4 <asl.include.bb2@395> XINCLUDE "PE/wizard_Table.include.bb2"
00009CCE <asl.include.bb2@396> XINCLUDE "PE/wizard_Table.include.bb2"
00009CE0 <asl.include.bb2@397> XINCLUDE "PE/wizard_Table.include.bb2"
00009D1A <asl.include.bb2@398> XINCLUDE "PE/wizard_Table.include.bb2"
00009D24 <asl.include.bb2@399> XINCLUDE "PE/wizard_Table.include.bb2"
00009D4E <asl.include.bb2@401> XINCLUDE "PE/wizard_Table.include.bb2"
00009D66 <asl.include.bb2@402> XINCLUDE "PE/wizard_Table.include.bb2"
00009DB8 <asl.include.bb2@438> XINCLUDE "PE/wizard_Table.include.bb2"
00009DE6 <asl.include.bb2@440> XINCLUDE "PE/wizard_Table.include.bb2"
00009E78 <asl.include.bb2@441> XINCLUDE "PE/wizard_Table.include.bb2"
00009EBE <asl.include.bb2@442> XINCLUDE "PE/wizard_Table.include.bb2"
00009F50 <asl.include.bb2@443> XINCLUDE "PE/wizard_Table.include.bb2"
00009F6A <asl.include.bb2@444> XINCLUDE "PE/wizard_Table.include.bb2"
00009F6A <screen.include.bb2@38> XINCLUDE "PE/wizard_Table.include.bb2"
00009F8E <screen.include.bb2@89> XINCLUDE "PE/wizard_Table.include.bb2"
00009F9E <screen.include.bb2@92> XINCLUDE "PE/wizard_Table.include.bb2"
00009FAC <screen.include.bb2@93> XINCLUDE "PE/wizard_Table.include.bb2"
00009FB6 <screen.include.bb2@94> XINCLUDE "PE/wizard_Table.include.bb2"
00009FC4 <screen.include.bb2@95> XINCLUDE "PE/wizard_Table.include.bb2"
00009FDE <screen.include.bb2@282> XINCLUDE "PE/wizard_Table.include.bb2"
00009FF0 <screen.include.bb2@283> XINCLUDE "PE/wizard_Table.include.bb2"
0000A002 <screen.include.bb2@284> XINCLUDE "PE/wizard_Table.include.bb2"
0000A010 <screen.include.bb2@285> XINCLUDE "PE/wizard_Table.include.bb2"
0000A02C <screen.include.bb2@286> XINCLUDE "PE/wizard_Table.include.bb2"
0000A044 <screen.include.bb2@287> XINCLUDE "PE/wizard_Table.include.bb2"
0000A06C <screen.include.bb2@288> XINCLUDE "PE/wizard_Table.include.bb2"
0000A070 <screen.include.bb2@291> XINCLUDE "PE/wizard_Table.include.bb2"
0000A086 <screen.include.bb2@593> XINCLUDE "PE/wizard_Table.include.bb2"
0000A098 <screen.include.bb2@594> XINCLUDE "PE/wizard_Table.include.bb2"
0000A0C2 <screen.include.bb2@595> XINCLUDE "PE/wizard_Table.include.bb2"
0000A0F4 <screen.include.bb2@596> XINCLUDE "PE/wizard_Table.include.bb2"
0000A10A <screen.include.bb2@597> XINCLUDE "PE/wizard_Table.include.bb2"
0000A11A <screen.include.bb2@598> XINCLUDE "PE/wizard_Table.include.bb2"
0000A11E <screen.include.bb2@600> XINCLUDE "PE/wizard_Table.include.bb2"
0000A134 <screen.include.bb2@614> XINCLUDE "PE/wizard_Table.include.bb2"
0000A146 <screen.include.bb2@615> XINCLUDE "PE/wizard_Table.include.bb2"
0000A14C <screen.include.bb2@616> XINCLUDE "PE/wizard_Table.include.bb2"
0000A158 <screen.include.bb2@618> XINCLUDE "PE/wizard_Table.include.bb2"
0000A166 <screen.include.bb2@620> XINCLUDE "PE/wizard_Table.include.bb2"
0000A194 <screen.include.bb2@621> XINCLUDE "PE/wizard_Table.include.bb2"
0000A1A8 <screen.include.bb2@623> XINCLUDE "PE/wizard_Table.include.bb2"
0000A1BC <screen.include.bb2@626> XINCLUDE "PE/wizard_Table.include.bb2"
0000A1DC <screen.include.bb2@628> XINCLUDE "PE/wizard_Table.include.bb2"
0000A1F6 <screen.include.bb2@629> XINCLUDE "PE/wizard_Table.include.bb2"
0000A20A <screen.include.bb2@631> XINCLUDE "PE/wizard_Table.include.bb2"
0000A210 <screen.include.bb2@634> XINCLUDE "PE/wizard_Table.include.bb2"
0000A222 <screen.include.bb2@635> XINCLUDE "PE/wizard_Table.include.bb2"
0000A22C <screen.include.bb2@637> XINCLUDE "PE/wizard_Table.include.bb2"
0000A28A <screen.include.bb2@638> XINCLUDE "PE/wizard_Table.include.bb2"
0000A29C <screen.include.bb2@639> XINCLUDE "PE/wizard_Table.include.bb2"
0000A2DE <screen.include.bb2@640> XINCLUDE "PE/wizard_Table.include.bb2"
0000A2E4 <screen.include.bb2@641> XINCLUDE "PE/wizard_Table.include.bb2"
0000A2EA <screen.include.bb2@642> XINCLUDE "PE/wizard_Table.include.bb2"
0000A2FE <screen.include.bb2@644> XINCLUDE "PE/wizard_Table.include.bb2"
0000A318 <screen.include.bb2@646> XINCLUDE "PE/wizard_Table.include.bb2"
0000A31A <screen.include.bb2@648> XINCLUDE "PE/wizard_Table.include.bb2"
0000A324 <screen.include.bb2@649> XINCLUDE "PE/wizard_Table.include.bb2"
0000A332 <screen.include.bb2@650> XINCLUDE "PE/wizard_Table.include.bb2"
0000A340 <screen.include.bb2@651> XINCLUDE "PE/wizard_Table.include.bb2"
0000A352 <screen.include.bb2@653> XINCLUDE "PE/wizard_Table.include.bb2"
0000A368 <screen.include.bb2@654> XINCLUDE "PE/wizard_Table.include.bb2"
0000A376 <screen.include.bb2@655> XINCLUDE "PE/wizard_Table.include.bb2"
0000A37A <screen.include.bb2@659> XINCLUDE "PE/wizard_Table.include.bb2"
0000A3A8 <screen.include.bb2@660> XINCLUDE "PE/wizard_Table.include.bb2"
0000A3BE <screen.include.bb2@964> XINCLUDE "PE/wizard_Table.include.bb2"
0000A3CA <screen.include.bb2@965> XINCLUDE "PE/wizard_Table.include.bb2"
0000A3CE <screen.include.bb2@966> XINCLUDE "PE/wizard_Table.include.bb2"
0000A3E4 <screen.include.bb2@982> XINCLUDE "PE/wizard_Table.include.bb2"
0000A3F4 <screen.include.bb2@983> XINCLUDE "PE/wizard_Table.include.bb2"
0000A3F8 <screen.include.bb2@984> XINCLUDE "PE/wizard_Table.include.bb2"
0000A3F8 <PE_Tools.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
0000A41C <PE_Tools.include.bb2@67> XINCLUDE "PE/wizard_Table.include.bb2"
0000A424 <PE_Tools.include.bb2@76> XINCLUDE "PE/wizard_Table.include.bb2"
0000A452 <PE_Tools.include.bb2@77> XINCLUDE "PE/wizard_Table.include.bb2"
0000A480 <PE_Tools.include.bb2@78> XINCLUDE "PE/wizard_Table.include.bb2"
0000A4F0 <PE_Tools.include.bb2@79> XINCLUDE "PE/wizard_Table.include.bb2"
0000A4FE <PE_Tools.include.bb2@80> XINCLUDE "PE/wizard_Table.include.bb2"
0000A54E <PE_Tools.include.bb2@81> XINCLUDE "PE/wizard_Table.include.bb2"
0000A54E <wizard_Tools.include.bb2@23> XINCLUDE "PE/wizard_Table.include.bb2"
0000A576 <wizard_Tools.include.bb2@47> XINCLUDE "PE/wizard_Table.include.bb2"
0000A5A4 <wizard_Tools.include.bb2@114> XINCLUDE "PE/wizard_Table.include.bb2"
0000A5F6 <wizard_Tools.include.bb2@115> XINCLUDE "PE/wizard_Table.include.bb2"
0000A608 <wizard_Tools.include.bb2@116> XINCLUDE "PE/wizard_Table.include.bb2"
0000A64E <wizard_Tools.include.bb2@117> XINCLUDE "PE/wizard_Table.include.bb2"
0000A65C <wizard_Tools.include.bb2@118> XINCLUDE "PE/wizard_Table.include.bb2"
0000A66E <wizard_Tools.include.bb2@119> XINCLUDE "PE/wizard_Table.include.bb2"
0000A6A4 <wizard_Tools.include.bb2@121> XINCLUDE "PE/wizard_Table.include.bb2"
0000A6B2 <wizard_Tools.include.bb2@122> XINCLUDE "PE/wizard_Table.include.bb2"
0000A6B8 <wizard_Tools.include.bb2@125> XINCLUDE "PE/wizard_Table.include.bb2"
0000A6D0 <wizard_Tools.include.bb2@126> XINCLUDE "PE/wizard_Table.include.bb2"
0000A6FE <wizard_Tools.include.bb2@127> XINCLUDE "PE/wizard_Table.include.bb2"
0000A710 <wizard_Tools.include.bb2@128> XINCLUDE "PE/wizard_Table.include.bb2"
0000A75E <wizard_Tools.include.bb2@131> XINCLUDE "PE/wizard_Table.include.bb2"
0000A7AC <wizard_Tools.include.bb2@132> XINCLUDE "PE/wizard_Table.include.bb2"
0000A7C6 <wizard_Tools.include.bb2@133> XINCLUDE "PE/wizard_Table.include.bb2"
0000A7EA <wizard_Tools.include.bb2@134> XINCLUDE "PE/wizard_Table.include.bb2"
0000A802 <wizard_Tools.include.bb2@137> XINCLUDE "PE/wizard_Table.include.bb2"
0000A828 <wizard_Tools.include.bb2@251> XINCLUDE "PE/wizard_Table.include.bb2"
0000A838 <wizard_Tools.include.bb2@252> XINCLUDE "PE/wizard_Table.include.bb2"
0000A840 <wizard_Tools.include.bb2@253> XINCLUDE "PE/wizard_Table.include.bb2"
0000A84E <wizard_Tools.include.bb2@254> XINCLUDE "PE/wizard_Table.include.bb2"
0000A878 <wizard_Tools.include.bb2@255> XINCLUDE "PE/wizard_Table.include.bb2"
0000A8B2 <wizard_Tools.include.bb2@256> XINCLUDE "PE/wizard_Table.include.bb2"
0000A918 <wizard_Tools.include.bb2@257> XINCLUDE "PE/wizard_Table.include.bb2"
0000A928 <wizard_Tools.include.bb2@258> XINCLUDE "PE/wizard_Table.include.bb2"
0000A94E <wizard_Tools.include.bb2@259> XINCLUDE "PE/wizard_Table.include.bb2"
0000A96E <wizard_Tools.include.bb2@261> XINCLUDE "PE/wizard_Table.include.bb2"
0000A994 <wizard_Tools.include.bb2@262> XINCLUDE "PE/wizard_Table.include.bb2"
0000A99C <wizard_Tools.include.bb2@263> XINCLUDE "PE/wizard_Table.include.bb2"
0000A9B0 <wizard_Tools.include.bb2@265> XINCLUDE "PE/wizard_Table.include.bb2"
0000A9E6 <wizard_Tools.include.bb2@266> XINCLUDE "PE/wizard_Table.include.bb2"
0000AA1C <wizard_Tools.include.bb2@267> XINCLUDE "PE/wizard_Table.include.bb2"
0000AA30 <wizard_Tools.include.bb2@268> XINCLUDE "PE/wizard_Table.include.bb2"
0000AA44 <wizard_Tools.include.bb2@269> XINCLUDE "PE/wizard_Table.include.bb2"
0000AA56 <wizard_Tools.include.bb2@270> XINCLUDE "PE/wizard_Table.include.bb2"
0000AA5C <wizard_Tools.include.bb2@271> XINCLUDE "PE/wizard_Table.include.bb2"
0000AA62 <wizard_Tools.include.bb2@272> XINCLUDE "PE/wizard_Table.include.bb2"
0000AA68 <wizard_Tools.include.bb2@273> XINCLUDE "PE/wizard_Table.include.bb2"
0000AA82 <wizard_Tools.include.bb2@276> XINCLUDE "PE/wizard_Table.include.bb2"
0000AB26 <wizard_Tools.include.bb2@278> XINCLUDE "PE/wizard_Table.include.bb2"
0000AB60 <wizard_Tools.include.bb2@279> XINCLUDE "PE/wizard_Table.include.bb2"
0000ABD2 <wizard_Tools.include.bb2@280> XINCLUDE "PE/wizard_Table.include.bb2"
0000ABEC <wizard_Tools.include.bb2@281> XINCLUDE "PE/wizard_Table.include.bb2"
0000ABF6 <wizard_Tools.include.bb2@283> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC3E <wizard_Tools.include.bb2@284> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC44 <wizard_Tools.include.bb2@285> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC52 <wizard_Tools.include.bb2@286> XINCLUDE "PE/wizard_Table.include.bb2"
0000ACAC <wizard_Tools.include.bb2@287> XINCLUDE "PE/wizard_Table.include.bb2"
0000ACBC <wizard_Tools.include.bb2@288> XINCLUDE "PE/wizard_Table.include.bb2"
0000ACC2 <wizard_Tools.include.bb2@289> XINCLUDE "PE/wizard_Table.include.bb2"
0000ACD6 <wizard_Tools.include.bb2@291> XINCLUDE "PE/wizard_Table.include.bb2"
0000ACE0 <wizard_Tools.include.bb2@292> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD02 <wizard_Tools.include.bb2@293> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD08 <wizard_Tools.include.bb2@294> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD0E <wizard_Tools.include.bb2@295> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD10 <wizard_Tools.include.bb2@297> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD16 <wizard_Tools.include.bb2@298> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD1C <wizard_Tools.include.bb2@299> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD26 <wizard_Tools.include.bb2@301> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD5E <wizard_Tools.include.bb2@302> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD88 <wizard_Tools.include.bb2@303> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD94 <wizard_Tools.include.bb2@305> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD9E <wizard_Tools.include.bb2@306> XINCLUDE "PE/wizard_Table.include.bb2"
0000ADB2 <wizard_Tools.include.bb2@308> XINCLUDE "PE/wizard_Table.include.bb2"
0000ADB2 <wizard_Table.include.bb2@84> XINCLUDE "PE/wizard_Table.include.bb2"
0000ADDA <wizard_Table.include.bb2@158> XINCLUDE "PE/wizard_Table.include.bb2"
0000AE02 <wizard_Table.include.bb2@159> XINCLUDE "PE/wizard_Table.include.bb2"
0000AE44 <wizard_Table.include.bb2@335> XINCLUDE "PE/wizard_Table.include.bb2"
0000AE5E <wizard_Table.include.bb2@359> XINCLUDE "PE/wizard_Table.include.bb2"
0000AE88 <wizard_Table.include.bb2@361> XINCLUDE "PE/wizard_Table.include.bb2"
0000AEA0 <wizard_Table.include.bb2@370> XINCLUDE "PE/wizard_Table.include.bb2"
0000AECA <wizard_Table.include.bb2@390> XINCLUDE "PE/wizard_Table.include.bb2"
0000AEE4 <wizard_Table.include.bb2@398> XINCLUDE "PE/wizard_Table.include.bb2"
0000AF0E <wizard_Table.include.bb2@400> XINCLUDE "PE/wizard_Table.include.bb2"
0000AF28 <wizard_Table.include.bb2@408> XINCLUDE "PE/wizard_Table.include.bb2"
0000AF52 <wizard_Table.include.bb2@442> XINCLUDE "PE/wizard_Table.include.bb2"
0000AF7A <wizard_Table.include.bb2@444> XINCLUDE "PE/wizard_Table.include.bb2"
0000AFC6 <wizard_Table.include.bb2@445> XINCLUDE "PE/wizard_Table.include.bb2"
0000AFD0 <wizard_Table.include.bb2@446> XINCLUDE "PE/wizard_Table.include.bb2"
0000B03C <wizard_Table.include.bb2@448> XINCLUDE "PE/wizard_Table.include.bb2"
0000B0B6 <wizard_Table.include.bb2@449> XINCLUDE "PE/wizard_Table.include.bb2"
0000B114 <wizard_Table.include.bb2@450> XINCLUDE "PE/wizard_Table.include.bb2"
0000B12C <wizard_Table.include.bb2@451> XINCLUDE "PE/wizard_Table.include.bb2"
0000B1A6 <wizard_Table.include.bb2@453> XINCLUDE "PE/wizard_Table.include.bb2"
0000B1C2 <wizard_Table.include.bb2@454> XINCLUDE "PE/wizard_Table.include.bb2"
0000B1E6 <wizard_Table.include.bb2@455> XINCLUDE "PE/wizard_Table.include.bb2"
0000B1F8 <wizard_Table.include.bb2@456> XINCLUDE "PE/wizard_Table.include.bb2"
0000B254 <wizard_Table.include.bb2@457> XINCLUDE "PE/wizard_Table.include.bb2"
0000B25A <wizard_Table.include.bb2@459> XINCLUDE "PE/wizard_Table.include.bb2"
0000B272 <wizard_Table.include.bb2@460> XINCLUDE "PE/wizard_Table.include.bb2"
0000B28A <wizard_Table.include.bb2@464> XINCLUDE "PE/wizard_Table.include.bb2"
0000B2B4 <wizard_Table.include.bb2@467> XINCLUDE "PE/wizard_Table.include.bb2"
0000B2DC <wizard_Table.include.bb2@469> XINCLUDE "PE/wizard_Table.include.bb2"
0000B33E <wizard_Table.include.bb2@470> XINCLUDE "PE/wizard_Table.include.bb2"
0000B3A0 <wizard_Table.include.bb2@471> XINCLUDE "PE/wizard_Table.include.bb2"
0000B41A <wizard_Table.include.bb2@473> XINCLUDE "PE/wizard_Table.include.bb2"
0000B424 <wizard_Table.include.bb2@474> XINCLUDE "PE/wizard_Table.include.bb2"
0000B482 <wizard_Table.include.bb2@475> XINCLUDE "PE/wizard_Table.include.bb2"
0000B49A <wizard_Table.include.bb2@476> XINCLUDE "PE/wizard_Table.include.bb2"
0000B514 <wizard_Table.include.bb2@478> XINCLUDE "PE/wizard_Table.include.bb2"
0000B51E <wizard_Table.include.bb2@479> XINCLUDE "PE/wizard_Table.include.bb2"
0000B530 <wizard_Table.include.bb2@480> XINCLUDE "PE/wizard_Table.include.bb2"
0000B58C <wizard_Table.include.bb2@481> XINCLUDE "PE/wizard_Table.include.bb2"
0000B592 <wizard_Table.include.bb2@482> XINCLUDE "PE/wizard_Table.include.bb2"
0000B5AA <wizard_Table.include.bb2@483> XINCLUDE "PE/wizard_Table.include.bb2"
0000B5B0 <wizard_Table.include.bb2@487> XINCLUDE "PE/wizard_Table.include.bb2"
0000B5FC <wizard_Table.include.bb2@488> XINCLUDE "PE/wizard_Table.include.bb2"
0000B606 <wizard_Table.include.bb2@489> XINCLUDE "PE/wizard_Table.include.bb2"
0000B61E <wizard_Table.include.bb2@490> XINCLUDE "PE/wizard_Table.include.bb2"
0000B648 <wizard_Table.include.bb2@494> XINCLUDE "PE/wizard_Table.include.bb2"
0000B690 <wizard_Table.include.bb2@497> XINCLUDE "PE/wizard_Table.include.bb2"
0000B6CC <wizard_Table.include.bb2@498> XINCLUDE "PE/wizard_Table.include.bb2"
0000B6EC <wizard_Table.include.bb2@499> XINCLUDE "PE/wizard_Table.include.bb2"
0000B720 <wizard_Table.include.bb2@500> XINCLUDE "PE/wizard_Table.include.bb2"
0000B732 <wizard_Table.include.bb2@501> XINCLUDE "PE/wizard_Table.include.bb2"
0000B742 <wizard_Table.include.bb2@502> XINCLUDE "PE/wizard_Table.include.bb2"
0000B774 <wizard_Table.include.bb2@503> XINCLUDE "PE/wizard_Table.include.bb2"
0000B798 <wizard_Table.include.bb2@504> XINCLUDE "PE/wizard_Table.include.bb2"
0000B7A8 <wizard_Table.include.bb2@505> XINCLUDE "PE/wizard_Table.include.bb2"
0000B7E2 <wizard_Table.include.bb2@506> XINCLUDE "PE/wizard_Table.include.bb2"
0000B7EC <wizard_Table.include.bb2@512> XINCLUDE "PE/wizard_Table.include.bb2"
0000B7FE <wizard_Table.include.bb2@513> XINCLUDE "PE/wizard_Table.include.bb2"
0000B81E <wizard_Table.include.bb2@514> XINCLUDE "PE/wizard_Table.include.bb2"
0000B874 <wizard_Table.include.bb2@515> XINCLUDE "PE/wizard_Table.include.bb2"
0000B8BA <wizard_Table.include.bb2@516> XINCLUDE "PE/wizard_Table.include.bb2"
0000B8CC <wizard_Table.include.bb2@517> XINCLUDE "PE/wizard_Table.include.bb2"
0000B8D6 <wizard_Table.include.bb2@518> XINCLUDE "PE/wizard_Table.include.bb2"
0000B8DC <wizard_Table.include.bb2@521> XINCLUDE "PE/wizard_Table.include.bb2"
0000B8E6 <wizard_Table.include.bb2@522> XINCLUDE "PE/wizard_Table.include.bb2"
0000B904 <wizard_Table.include.bb2@523> XINCLUDE "PE/wizard_Table.include.bb2"
0000B91C <wizard_Table.include.bb2@524> XINCLUDE "PE/wizard_Table.include.bb2"
0000B922 <wizard_Table.include.bb2@526> XINCLUDE "PE/wizard_Table.include.bb2"
0000B9AE <wizard_Table.include.bb2@527> XINCLUDE "PE/wizard_Table.include.bb2"
0000BA00 <wizard_Table.include.bb2@530> XINCLUDE "PE/wizard_Table.include.bb2"
0000BA2E <wizard_Table.include.bb2@532> XINCLUDE "PE/wizard_Table.include.bb2"
0000BA4C <wizard_Table.include.bb2@534> XINCLUDE "PE/wizard_Table.include.bb2"
0000BA64 <wizard_Table.include.bb2@535> XINCLUDE "PE/wizard_Table.include.bb2"
0000BB26 <wizard_Table.include.bb2@549> XINCLUDE "PE/wizard_Table.include.bb2"
0000BB54 <wizard_Table.include.bb2@552> XINCLUDE "PE/wizard_Table.include.bb2"
0000BB66 <wizard_Table.include.bb2@554> XINCLUDE "PE/wizard_Table.include.bb2"
0000BB84 <wizard_Table.include.bb2@555> XINCLUDE "PE/wizard_Table.include.bb2"
0000BBA8 <wizard_Table.include.bb2@556> XINCLUDE "PE/wizard_Table.include.bb2"
0000BBAA <wizard_Table.include.bb2@557> XINCLUDE "PE/wizard_Table.include.bb2"
0000BBBE <wizard_Table.include.bb2@559> XINCLUDE "PE/wizard_Table.include.bb2"
0000BC0A <wizard_Table.include.bb2@560> XINCLUDE "PE/wizard_Table.include.bb2"
0000BC56 <wizard_Table.include.bb2@561> XINCLUDE "PE/wizard_Table.include.bb2"
0000BCA2 <wizard_Table.include.bb2@562> XINCLUDE "PE/wizard_Table.include.bb2"
0000BCEE <wizard_Table.include.bb2@563> XINCLUDE "PE/wizard_Table.include.bb2"
0000BD3A <wizard_Table.include.bb2@564> XINCLUDE "PE/wizard_Table.include.bb2"
0000BD86 <wizard_Table.include.bb2@565> XINCLUDE "PE/wizard_Table.include.bb2"
0000BDD2 <wizard_Table.include.bb2@566> XINCLUDE "PE/wizard_Table.include.bb2"
0000BE1E <wizard_Table.include.bb2@567> XINCLUDE "PE/wizard_Table.include.bb2"
0000BE6A <wizard_Table.include.bb2@568> XINCLUDE "PE/wizard_Table.include.bb2"
0000BE94 <wizard_Table.include.bb2@570> XINCLUDE "PE/wizard_Table.include.bb2"
0000BEB6 <wizard_Table.include.bb2@571> XINCLUDE "PE/wizard_Table.include.bb2"
0000BED8 <wizard_Table.include.bb2@572> XINCLUDE "PE/wizard_Table.include.bb2"
0000BEE8 <wizard_Table.include.bb2@573> XINCLUDE "PE/wizard_Table.include.bb2"
0000BF00 <wizard_Table.include.bb2@574> XINCLUDE "PE/wizard_Table.include.bb2"
0000BF0A <wizard_Table.include.bb2@575> XINCLUDE "PE/wizard_Table.include.bb2"
0000BF24 <wizard_Table.include.bb2@578> XINCLUDE "PE/wizard_Table.include.bb2"
0000BF66 <wizard_Table.include.bb2@620> XINCLUDE "PE/wizard_Table.include.bb2"
0000BFBC <wizard_Table.include.bb2@629> XINCLUDE "PE/wizard_Table.include.bb2"
0000C012 <wizard_Table.include.bb2@630> XINCLUDE "PE/wizard_Table.include.bb2"
0000C040 <wizard_Table.include.bb2@631> XINCLUDE "PE/wizard_Table.include.bb2"
0000C07C <wizard_Table.include.bb2@633> XINCLUDE "PE/wizard_Table.include.bb2"
0000C0B8 <wizard_Table.include.bb2@634> XINCLUDE "PE/wizard_Table.include.bb2"
0000C0F0 <wizard_Table.include.bb2@635> XINCLUDE "PE/wizard_Table.include.bb2"
0000C0FA <wizard_Table.include.bb2@636> XINCLUDE "PE/wizard_Table.include.bb2"
0000C104 <wizard_Table.include.bb2@637> XINCLUDE "PE/wizard_Table.include.bb2"
0000C10E <wizard_Table.include.bb2@638> XINCLUDE "PE/wizard_Table.include.bb2"
0000C118 <wizard_Table.include.bb2@639> XINCLUDE "PE/wizard_Table.include.bb2"
0000C126 <wizard_Table.include.bb2@641> XINCLUDE "PE/wizard_Table.include.bb2"
0000C132 <wizard_Table.include.bb2@643> XINCLUDE "PE/wizard_Table.include.bb2"
0000C13E <wizard_Table.include.bb2@644> XINCLUDE "PE/wizard_Table.include.bb2"
0000C14C <wizard_Table.include.bb2@646> XINCLUDE "PE/wizard_Table.include.bb2"
0000C15A <wizard_Table.include.bb2@647> XINCLUDE "PE/wizard_Table.include.bb2"
0000C168 <wizard_Table.include.bb2@648> XINCLUDE "PE/wizard_Table.include.bb2"
0000C176 <wizard_Table.include.bb2@649> XINCLUDE "PE/wizard_Table.include.bb2"
0000C184 <wizard_Table.include.bb2@650> XINCLUDE "PE/wizard_Table.include.bb2"
0000C19C <wizard_Table.include.bb2@652> XINCLUDE "PE/wizard_Table.include.bb2"
0000C1A8 <wizard_Table.include.bb2@653> XINCLUDE "PE/wizard_Table.include.bb2"
0000C1B2 <wizard_Table.include.bb2@655> XINCLUDE "PE/wizard_Table.include.bb2"
0000C1E0 <wizard_Table.include.bb2@656> XINCLUDE "PE/wizard_Table.include.bb2"
0000C1FE <wizard_Table.include.bb2@657> XINCLUDE "PE/wizard_Table.include.bb2"
0000C218 <wizard_Table.include.bb2@658> XINCLUDE "PE/wizard_Table.include.bb2"
0000C252 <wizard_Table.include.bb2@659> XINCLUDE "PE/wizard_Table.include.bb2"
0000C270 <wizard_Table.include.bb2@660> XINCLUDE "PE/wizard_Table.include.bb2"
0000C27E <wizard_Table.include.bb2@661> XINCLUDE "PE/wizard_Table.include.bb2"
0000C298 <wizard_Table.include.bb2@662> XINCLUDE "PE/wizard_Table.include.bb2"
0000C2C2 <wizard_Table.include.bb2@664> XINCLUDE "PE/wizard_Table.include.bb2"
0000C2F0 <wizard_Table.include.bb2@667> XINCLUDE "PE/wizard_Table.include.bb2"
0000C346 <wizard_Table.include.bb2@668> XINCLUDE "PE/wizard_Table.include.bb2"
0000C39C <wizard_Table.include.bb2@669> XINCLUDE "PE/wizard_Table.include.bb2"
0000C3CA <wizard_Table.include.bb2@670> XINCLUDE "PE/wizard_Table.include.bb2"
0000C416 <wizard_Table.include.bb2@671> XINCLUDE "PE/wizard_Table.include.bb2"
0000C420 <wizard_Table.include.bb2@672> XINCLUDE "PE/wizard_Table.include.bb2"
0000C438 <wizard_Table.include.bb2@673> XINCLUDE "PE/wizard_Table.include.bb2"
0000C476 <wizard_Table.include.bb2@682> XINCLUDE "PE/wizard_Table.include.bb2"
0000C4A4 <wizard_Table.include.bb2@684> XINCLUDE "PE/wizard_Table.include.bb2"
0000C4B0 <wizard_Table.include.bb2@685> XINCLUDE "PE/wizard_Table.include.bb2"
0000C4BC <wizard_Table.include.bb2@686> XINCLUDE "PE/wizard_Table.include.bb2"
0000C4DC <wizard_Table.include.bb2@687> XINCLUDE "PE/wizard_Table.include.bb2"
0000C4FC <wizard_Table.include.bb2@688> XINCLUDE "PE/wizard_Table.include.bb2"
0000C51C <wizard_Table.include.bb2@689> XINCLUDE "PE/wizard_Table.include.bb2"
0000C526 <wizard_Table.include.bb2@690> XINCLUDE "PE/wizard_Table.include.bb2"
0000C53E <wizard_Table.include.bb2@691> XINCLUDE "PE/wizard_Table.include.bb2"
0000C600 <wizard_Table.include.bb2@725> XINCLUDE "PE/wizard_Table.include.bb2"
0000C62E <wizard_Table.include.bb2@728> XINCLUDE "PE/wizard_Table.include.bb2"
0000C674 <wizard_Table.include.bb2@729> XINCLUDE "PE/wizard_Table.include.bb2"
0000C6BA <wizard_Table.include.bb2@730> XINCLUDE "PE/wizard_Table.include.bb2"
0000C700 <wizard_Table.include.bb2@731> XINCLUDE "PE/wizard_Table.include.bb2"
0000C746 <wizard_Table.include.bb2@732> XINCLUDE "PE/wizard_Table.include.bb2"
0000C78C <wizard_Table.include.bb2@733> XINCLUDE "PE/wizard_Table.include.bb2"
0000C7D2 <wizard_Table.include.bb2@734> XINCLUDE "PE/wizard_Table.include.bb2"
0000C818 <wizard_Table.include.bb2@735> XINCLUDE "PE/wizard_Table.include.bb2"
0000C85E <wizard_Table.include.bb2@736> XINCLUDE "PE/wizard_Table.include.bb2"
0000C878 <wizard_Table.include.bb2@737> XINCLUDE "PE/wizard_Table.include.bb2"
0000C8A6 <wizard_Table.include.bb2@746> XINCLUDE "PE/wizard_Table.include.bb2"
0000C8D4 <wizard_Table.include.bb2@748> XINCLUDE "PE/wizard_Table.include.bb2"
0000C8E2 <wizard_Table.include.bb2@749> XINCLUDE "PE/wizard_Table.include.bb2"
0000C8FA <wizard_Table.include.bb2@750> XINCLUDE "PE/wizard_Table.include.bb2"
0000C958 <wizard_Table.include.bb2@752> XINCLUDE "PE/wizard_Table.include.bb2"
0000C986 <wizard_Table.include.bb2@755> XINCLUDE "PE/wizard_Table.include.bb2"
0000C9B6 <wizard_Table.include.bb2@757> XINCLUDE "PE/wizard_Table.include.bb2"
0000C9E6 <wizard_Table.include.bb2@758> XINCLUDE "PE/wizard_Table.include.bb2"
0000CA16 <wizard_Table.include.bb2@759> XINCLUDE "PE/wizard_Table.include.bb2"
0000CA46 <wizard_Table.include.bb2@760> XINCLUDE "PE/wizard_Table.include.bb2"
0000CA76 <wizard_Table.include.bb2@761> XINCLUDE "PE/wizard_Table.include.bb2"
0000CAA6 <wizard_Table.include.bb2@762> XINCLUDE "PE/wizard_Table.include.bb2"
0000CAD6 <wizard_Table.include.bb2@763> XINCLUDE "PE/wizard_Table.include.bb2"
0000CB06 <wizard_Table.include.bb2@764> XINCLUDE "PE/wizard_Table.include.bb2"
0000CB36 <wizard_Table.include.bb2@765> XINCLUDE "PE/wizard_Table.include.bb2"
0000CB4E <wizard_Table.include.bb2@767> XINCLUDE "PE/wizard_Table.include.bb2"
0000CBAC <wizard_Table.include.bb2@769> XINCLUDE "PE/wizard_Table.include.bb2"
0000CBDA <wizard_Table.include.bb2@771> XINCLUDE "PE/wizard_Table.include.bb2"
0000CBF8 <wizard_Table.include.bb2@773> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC16 <wizard_Table.include.bb2@774> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC34 <wizard_Table.include.bb2@775> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC52 <wizard_Table.include.bb2@776> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC70 <wizard_Table.include.bb2@777> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC8E <wizard_Table.include.bb2@778> XINCLUDE "PE/wizard_Table.include.bb2"
0000CCAC <wizard_Table.include.bb2@779> XINCLUDE "PE/wizard_Table.include.bb2"
0000CCCA <wizard_Table.include.bb2@780> XINCLUDE "PE/wizard_Table.include.bb2"
0000CCE8 <wizard_Table.include.bb2@781> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD00 <wizard_Table.include.bb2@783> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD32 <wizard_Table.include.bb2@793> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD58 <wizard_Table.include.bb2@796> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD86 <wizard_Table.include.bb2@797> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD90 <wizard_Table.include.bb2@798> XINCLUDE "PE/wizard_Table.include.bb2"
0000CDA2 <wizard_Table.include.bb2@799> XINCLUDE "PE/wizard_Table.include.bb2"
0000CDC2 <wizard_Table.include.bb2@800> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE08 <wizard_Table.include.bb2@801> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE32 <wizard_Table.include.bb2@802> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE38 <wizard_Table.include.bb2@804> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE56 <wizard_Table.include.bb2@806> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE98 <wizard_Table.include.bb2@809> XINCLUDE "PE/wizard_Table.include.bb2"
0000CEC6 <wizard_Table.include.bb2@812> XINCLUDE "PE/wizard_Table.include.bb2"
0000CED0 <wizard_Table.include.bb2@813> XINCLUDE "PE/wizard_Table.include.bb2"
0000CEE2 <wizard_Table.include.bb2@814> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF02 <wizard_Table.include.bb2@815> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF58 <wizard_Table.include.bb2@816> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF9E <wizard_Table.include.bb2@817> XINCLUDE "PE/wizard_Table.include.bb2"
0000CFB0 <wizard_Table.include.bb2@818> XINCLUDE "PE/wizard_Table.include.bb2"
0000CFBA <wizard_Table.include.bb2@819> XINCLUDE "PE/wizard_Table.include.bb2"
0000CFC2 <wizard_Table.include.bb2@820> XINCLUDE "PE/wizard_Table.include.bb2"
0000CFC8 <wizard_Table.include.bb2@823> XINCLUDE "PE/wizard_Table.include.bb2"
0000CFE4 <wizard_Table.include.bb2@824> XINCLUDE "PE/wizard_Table.include.bb2"
0000D00E <wizard_Table.include.bb2@828> XINCLUDE "PE/wizard_Table.include.bb2"
0000D03C <wizard_Table.include.bb2@831> XINCLUDE "PE/wizard_Table.include.bb2"
0000D05C <wizard_Table.include.bb2@832> XINCLUDE "PE/wizard_Table.include.bb2"
0000D090 <wizard_Table.include.bb2@833> XINCLUDE "PE/wizard_Table.include.bb2"
0000D09E <wizard_Table.include.bb2@834> XINCLUDE "PE/wizard_Table.include.bb2"
0000D0B0 <wizard_Table.include.bb2@835> XINCLUDE "PE/wizard_Table.include.bb2"
0000D0C0 <wizard_Table.include.bb2@836> XINCLUDE "PE/wizard_Table.include.bb2"
0000D0CE <wizard_Table.include.bb2@837> XINCLUDE "PE/wizard_Table.include.bb2"
0000D0DC <wizard_Table.include.bb2@838> XINCLUDE "PE/wizard_Table.include.bb2"
0000D116 <wizard_Table.include.bb2@839> XINCLUDE "PE/wizard_Table.include.bb2"
0000D17E <wizard_Table.include.bb2@845> XINCLUDE "PE/wizard_Table.include.bb2"
0000D188 <wizard_Table.include.bb2@846> XINCLUDE "PE/wizard_Table.include.bb2"
0000D1A6 <wizard_Table.include.bb2@847> XINCLUDE "PE/wizard_Table.include.bb2"
0000D1BE <wizard_Table.include.bb2@848> XINCLUDE "PE/wizard_Table.include.bb2"
0000D1D6 <wizard_Table.include.bb2@851> XINCLUDE "PE/wizard_Table.include.bb2"
0000D204 <wizard_Table.include.bb2@854> XINCLUDE "PE/wizard_Table.include.bb2"
0000D232 <wizard_Table.include.bb2@856> XINCLUDE "PE/wizard_Table.include.bb2"
0000D23E <wizard_Table.include.bb2@866> XINCLUDE "PE/wizard_Table.include.bb2"
0000D256 <wizard_Table.include.bb2@867> XINCLUDE "PE/wizard_Table.include.bb2"
0000D284 <wizard_Table.include.bb2@869> XINCLUDE "PE/wizard_Table.include.bb2"
0000D2B2 <wizard_Table.include.bb2@871> XINCLUDE "PE/wizard_Table.include.bb2"
0000D2BE <wizard_Table.include.bb2@873> XINCLUDE "PE/wizard_Table.include.bb2"
0000D2D6 <wizard_Table.include.bb2@874> XINCLUDE "PE/wizard_Table.include.bb2"
0000D308 <wizard_Table.include.bb2@926> XINCLUDE "PE/wizard_Table.include.bb2"
0000D336 <wizard_Table.include.bb2@929> XINCLUDE "PE/wizard_Table.include.bb2"
0000D36A <wizard_Table.include.bb2@930> XINCLUDE "PE/wizard_Table.include.bb2"
0000D37C <wizard_Table.include.bb2@931> XINCLUDE "PE/wizard_Table.include.bb2"
0000D386 <wizard_Table.include.bb2@932> XINCLUDE "PE/wizard_Table.include.bb2"
0000D394 <wizard_Table.include.bb2@933> XINCLUDE "PE/wizard_Table.include.bb2"
0000D3A2 <wizard_Table.include.bb2@934> XINCLUDE "PE/wizard_Table.include.bb2"
0000D3B0 <wizard_Table.include.bb2@935> XINCLUDE "PE/wizard_Table.include.bb2"
0000D3FE <wizard_Table.include.bb2@936> XINCLUDE "PE/wizard_Table.include.bb2"
0000D40C <wizard_Table.include.bb2@937> XINCLUDE "PE/wizard_Table.include.bb2"
0000D43C <wizard_Table.include.bb2@938> XINCLUDE "PE/wizard_Table.include.bb2"
0000D442 <wizard_Table.include.bb2@939> XINCLUDE "PE/wizard_Table.include.bb2"
0000D448 <wizard_Table.include.bb2@940> XINCLUDE "PE/wizard_Table.include.bb2"
0000D4BE <wizard_Table.include.bb2@941> XINCLUDE "PE/wizard_Table.include.bb2"
0000D4C8 <wizard_Table.include.bb2@943> XINCLUDE "PE/wizard_Table.include.bb2"
0000D4CE <wizard_Table.include.bb2@944> XINCLUDE "PE/wizard_Table.include.bb2"
0000D4D8 <wizard_Table.include.bb2@945> XINCLUDE "PE/wizard_Table.include.bb2"
0000D4DE <wizard_Table.include.bb2@947> XINCLUDE "PE/wizard_Table.include.bb2"
0000D4E8 <wizard_Table.include.bb2@948> XINCLUDE "PE/wizard_Table.include.bb2"
0000D502 <wizard_Table.include.bb2@950> XINCLUDE "PE/wizard_Table.include.bb2"
0000D534 <wizard_Table.include.bb2@952> XINCLUDE "PE/wizard_Table.include.bb2"
0000D562 <wizard_Table.include.bb2@955> XINCLUDE "PE/wizard_Table.include.bb2"
0000D596 <wizard_Table.include.bb2@956> XINCLUDE "PE/wizard_Table.include.bb2"
0000D5A8 <wizard_Table.include.bb2@957> XINCLUDE "PE/wizard_Table.include.bb2"
0000D5B2 <wizard_Table.include.bb2@958> XINCLUDE "PE/wizard_Table.include.bb2"
0000D5C0 <wizard_Table.include.bb2@959> XINCLUDE "PE/wizard_Table.include.bb2"
0000D5CE <wizard_Table.include.bb2@960> XINCLUDE "PE/wizard_Table.include.bb2"
0000D5DC <wizard_Table.include.bb2@961> XINCLUDE "PE/wizard_Table.include.bb2"
0000D5E2 <wizard_Table.include.bb2@962> XINCLUDE "PE/wizard_Table.include.bb2"
0000D634 <wizard_Table.include.bb2@963> XINCLUDE "PE/wizard_Table.include.bb2"
0000D668 <wizard_Table.include.bb2@964> XINCLUDE "PE/wizard_Table.include.bb2"
0000D68C <wizard_Table.include.bb2@965> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6A8 <wizard_Table.include.bb2@966> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6B6 <wizard_Table.include.bb2@967> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6BC <wizard_Table.include.bb2@968> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6C6 <wizard_Table.include.bb2@969> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6CC <wizard_Table.include.bb2@971> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6D6 <wizard_Table.include.bb2@972> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6F0 <wizard_Table.include.bb2@974> XINCLUDE "PE/wizard_Table.include.bb2"
0000D71A <wizard_Table.include.bb2@993> XINCLUDE "PE/wizard_Table.include.bb2"
0000D748 <wizard_Table.include.bb2@996> XINCLUDE "PE/wizard_Table.include.bb2"
0000D75A <wizard_Table.include.bb2@998> XINCLUDE "PE/wizard_Table.include.bb2"
0000D7A4 <wizard_Table.include.bb2@1000> XINCLUDE "PE/wizard_Table.include.bb2"
0000D7E4 <wizard_Table.include.bb2@1001> XINCLUDE "PE/wizard_Table.include.bb2"
0000D7F8 <wizard_Table.include.bb2@1003> XINCLUDE "PE/wizard_Table.include.bb2"
0000D816 <wizard_Table.include.bb2@1005> XINCLUDE "PE/wizard_Table.include.bb2"
0000D864 <wizard_Table.include.bb2@1006> XINCLUDE "PE/wizard_Table.include.bb2"
0000D86A <wizard_Table.include.bb2@1007> XINCLUDE "PE/wizard_Table.include.bb2"
0000D884 <wizard_Table.include.bb2@1008> XINCLUDE "PE/wizard_Table.include.bb2"
0000D8A2 <wizard_Table.include.bb2@1011> XINCLUDE "PE/wizard_Table.include.bb2"
0000D8D6 <wizard_Table.include.bb2@1012> XINCLUDE "PE/wizard_Table.include.bb2"
0000D8E8 <wizard_Table.include.bb2@1013> XINCLUDE "PE/wizard_Table.include.bb2"
0000D900 <wizard_Table.include.bb2@1014> XINCLUDE "PE/wizard_Table.include.bb2"
0000D91A <wizard_Table.include.bb2@1015> XINCLUDE "PE/wizard_Table.include.bb2"
0000D934 <wizard_Table.include.bb2@1016> XINCLUDE "PE/wizard_Table.include.bb2"
0000D94E <wizard_Table.include.bb2@1017> XINCLUDE "PE/wizard_Table.include.bb2"
0000D962 <wizard_Table.include.bb2@1018> XINCLUDE "PE/wizard_Table.include.bb2"
0000D988 <wizard_Table.include.bb2@1019> XINCLUDE "PE/wizard_Table.include.bb2"
0000D998 <wizard_Table.include.bb2@1020> XINCLUDE "PE/wizard_Table.include.bb2"
0000D9AA <wizard_Table.include.bb2@1021> XINCLUDE "PE/wizard_Table.include.bb2"
0000D9BE <wizard_Table.include.bb2@1022> XINCLUDE "PE/wizard_Table.include.bb2"
0000D9EC <wizard_Table.include.bb2@1023> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA1A <wizard_Table.include.bb2@1026> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA32 <wizard_Table.include.bb2@1028> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA58 <wizard_Table.include.bb2@1029> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA5E <wizard_Table.include.bb2@1030> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA8C <wizard_Table.include.bb2@1031> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA92 <wizard_Table.include.bb2@1032> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA9A <wizard_Table.include.bb2@1037> XINCLUDE "PE/wizard_Table.include.bb2"
0000DACE <wizard_Table.include.bb2@1038> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB16 <wizard_Table.include.bb2@1039> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB24 <wizard_Table.include.bb2@1040> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB58 <wizard_Table.include.bb2@1042> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB7E <wizard_Table.include.bb2@1043> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB90 <wizard_Table.include.bb2@1044> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB98 <wizard_Table.include.bb2@1045> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBC8 <wizard_Table.include.bb2@1047> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBDC <wizard_Table.include.bb2@1048> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBEA <wizard_Table.include.bb2@1050> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC06 <wizard_Table.include.bb2@1051> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC14 <wizard_Table.include.bb2@1054> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC28 <wizard_Table.include.bb2@1056> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC3A <wizard_Table.include.bb2@1057> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC6E <wizard_Table.include.bb2@1058> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC94 <wizard_Table.include.bb2@1059> XINCLUDE "PE/wizard_Table.include.bb2"
0000DCC2 <wizard_Table.include.bb2@1060> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD00 <wizard_Table.include.bb2@1061> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD0E <wizard_Table.include.bb2@1063> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD60 <wizard_Table.include.bb2@1066> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDA6 <wizard_Table.include.bb2@1067> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDFE <wizard_Table.include.bb2@1068> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE08 <wizard_Table.include.bb2@1069> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE12 <wizard_Table.include.bb2@1070> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE18 <wizard_Table.include.bb2@1071> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE4C <wizard_Table.include.bb2@1073> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE6E <wizard_Table.include.bb2@1074> XINCLUDE "PE/wizard_Table.include.bb2"
0000DEB4 <wizard_Table.include.bb2@1075> XINCLUDE "PE/wizard_Table.include.bb2"
0000DED0 <wizard_Table.include.bb2@1076> XINCLUDE "PE/wizard_Table.include.bb2"
0000DEE0 <wizard_Table.include.bb2@1079> XINCLUDE "PE/wizard_Table.include.bb2"
0000DEF4 <wizard_Table.include.bb2@1080> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF1A <wizard_Table.include.bb2@1081> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF20 <wizard_Table.include.bb2@1082> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF40 <wizard_Table.include.bb2@1083> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF46 <wizard_Table.include.bb2@1084> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF4C <wizard_Table.include.bb2@1085> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF64 <wizard_Table.include.bb2@1086> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF8A <wizard_Table.include.bb2@1088> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF98 <wizard_Table.include.bb2@1089> XINCLUDE "PE/wizard_Table.include.bb2"
0000DFCA <wizard_Table.include.bb2@1090> XINCLUDE "PE/wizard_Table.include.bb2"
0000E036 <wizard_Table.include.bb2@1091> XINCLUDE "PE/wizard_Table.include.bb2"
0000E094 <wizard_Table.include.bb2@1092> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1A4 <wizard_Table.include.bb2@1096> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1D6 <wizard_Table.include.bb2@1097> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1F0 <wizard_Table.include.bb2@1098> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1FE <wizard_Table.include.bb2@1099> XINCLUDE "PE/wizard_Table.include.bb2"
0000E26A <wizard_Table.include.bb2@1100> XINCLUDE "PE/wizard_Table.include.bb2"
0000E27A <wizard_Table.include.bb2@1101> XINCLUDE "PE/wizard_Table.include.bb2"
0000E28E <wizard_Table.include.bb2@1102> XINCLUDE "PE/wizard_Table.include.bb2"
0000E2DE <wizard_Table.include.bb2@1103> XINCLUDE "PE/wizard_Table.include.bb2"
0000E34A <wizard_Table.include.bb2@1104> XINCLUDE "PE/wizard_Table.include.bb2"
0000E35E <wizard_Table.include.bb2@1105> XINCLUDE "PE/wizard_Table.include.bb2"
0000E3B4 <wizard_Table.include.bb2@1106> XINCLUDE "PE/wizard_Table.include.bb2"
0000E420 <wizard_Table.include.bb2@1107> XINCLUDE "PE/wizard_Table.include.bb2"
0000E430 <wizard_Table.include.bb2@1108> XINCLUDE "PE/wizard_Table.include.bb2"
0000E432 <wizard_Table.include.bb2@1109> XINCLUDE "PE/wizard_Table.include.bb2"
0000E44A <wizard_Table.include.bb2@1111> XINCLUDE "PE/wizard_Table.include.bb2"
0000E4A0 <wizard_Table.include.bb2@1112> XINCLUDE "PE/wizard_Table.include.bb2"
0000E502 <wizard_Table.include.bb2@1113> XINCLUDE "PE/wizard_Table.include.bb2"
0000E510 <wizard_Table.include.bb2@1116> XINCLUDE "PE/wizard_Table.include.bb2"
0000E542 <wizard_Table.include.bb2@1117> XINCLUDE "PE/wizard_Table.include.bb2"
0000E54C <wizard_Table.include.bb2@1118> XINCLUDE "PE/wizard_Table.include.bb2"
0000E58E <wizard_Table.include.bb2@1119> XINCLUDE "PE/wizard_Table.include.bb2"
0000E5AA <wizard_Table.include.bb2@1120> XINCLUDE "PE/wizard_Table.include.bb2"
0000E5DE <wizard_Table.include.bb2@1121> XINCLUDE "PE/wizard_Table.include.bb2"
0000E600 <wizard_Table.include.bb2@1122> XINCLUDE "PE/wizard_Table.include.bb2"
0000E61C <wizard_Table.include.bb2@1123> XINCLUDE "PE/wizard_Table.include.bb2"
0000E662 <wizard_Table.include.bb2@1124> XINCLUDE "PE/wizard_Table.include.bb2"
0000E6C4 <wizard_Table.include.bb2@1125> XINCLUDE "PE/wizard_Table.include.bb2"
0000E70C <wizard_Table.include.bb2@1126> XINCLUDE "PE/wizard_Table.include.bb2"
0000E71C <wizard_Table.include.bb2@1127> XINCLUDE "PE/wizard_Table.include.bb2"
0000E72A <wizard_Table.include.bb2@1129> XINCLUDE "PE/wizard_Table.include.bb2"
0000E734 <wizard_Table.include.bb2@1131> XINCLUDE "PE/wizard_Table.include.bb2"
0000E74C <wizard_Table.include.bb2@1133> XINCLUDE "PE/wizard_Table.include.bb2"
0000E77A <wizard_Table.include.bb2@1139> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7AE <wizard_Table.include.bb2@1142> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7C0 <wizard_Table.include.bb2@1143> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7DE <wizard_Table.include.bb2@1144> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7E8 <wizard_Table.include.bb2@1145> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7F6 <wizard_Table.include.bb2@1146> XINCLUDE "PE/wizard_Table.include.bb2"
0000E804 <wizard_Table.include.bb2@1147> XINCLUDE "PE/wizard_Table.include.bb2"
0000E812 <wizard_Table.include.bb2@1148> XINCLUDE "PE/wizard_Table.include.bb2"
0000E820 <wizard_Table.include.bb2@1149> XINCLUDE "PE/wizard_Table.include.bb2"
0000E82E <wizard_Table.include.bb2@1151> XINCLUDE "PE/wizard_Table.include.bb2"
0000E846 <wizard_Table.include.bb2@1152> XINCLUDE "PE/wizard_Table.include.bb2"
0000E85E <wizard_Table.include.bb2@1154> XINCLUDE "PE/wizard_Table.include.bb2"
0000E8AE <wizard_Table.include.bb2@1155> XINCLUDE "PE/wizard_Table.include.bb2"
0000E8EC <wizard_Table.include.bb2@1156> XINCLUDE "PE/wizard_Table.include.bb2"
0000E94A <wizard_Table.include.bb2@1158> XINCLUDE "PE/wizard_Table.include.bb2"
0000E96A <wizard_Table.include.bb2@1160> XINCLUDE "PE/wizard_Table.include.bb2"
0000E986 <wizard_Table.include.bb2@1161> XINCLUDE "PE/wizard_Table.include.bb2"
0000E9BA <wizard_Table.include.bb2@1162> XINCLUDE "PE/wizard_Table.include.bb2"
0000E9DC <wizard_Table.include.bb2@1163> XINCLUDE "PE/wizard_Table.include.bb2"
0000E9F8 <wizard_Table.include.bb2@1164> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA3E <wizard_Table.include.bb2@1165> XINCLUDE "PE/wizard_Table.include.bb2"
0000EAA4 <wizard_Table.include.bb2@1166> XINCLUDE "PE/wizard_Table.include.bb2"
0000EAEC <wizard_Table.include.bb2@1168> XINCLUDE "PE/wizard_Table.include.bb2"
0000EAFC <wizard_Table.include.bb2@1169> XINCLUDE "PE/wizard_Table.include.bb2"
0000EB0A <wizard_Table.include.bb2@1171> XINCLUDE "PE/wizard_Table.include.bb2"
0000EB30 <wizard_Table.include.bb2@1174> XINCLUDE "PE/wizard_Table.include.bb2"
0000EB3A <wizard_Table.include.bb2@1175> XINCLUDE "PE/wizard_Table.include.bb2"
0000EB4C <wizard_Table.include.bb2@1176> XINCLUDE "PE/wizard_Table.include.bb2"
0000EB78 <wizard_Table.include.bb2@1177> XINCLUDE "PE/wizard_Table.include.bb2"
0000F722 <wizard_Table.include.bb2@1178> XINCLUDE "PE/wizard_Table.include.bb2"
0000F728 <wizard_Table.include.bb2@1179> XINCLUDE "PE/wizard_Table.include.bb2"
0000F72E <wizard_Table.include.bb2@1181> XINCLUDE "PE/wizard_Table.include.bb2"
0000F746 <wizard_Table.include.bb2@1185> XINCLUDE "PE/wizard_Table.include.bb2"
0000F770 <wizard_Table.include.bb2@1190> XINCLUDE "PE/wizard_Table.include.bb2"
0000F7BC <wizard_Table.include.bb2@1193> XINCLUDE "PE/wizard_Table.include.bb2"
0000F7F0 <wizard_Table.include.bb2@1195> XINCLUDE "PE/wizard_Table.include.bb2"
0000F802 <wizard_Table.include.bb2@1196> XINCLUDE "PE/wizard_Table.include.bb2"
0000F828 <wizard_Table.include.bb2@1197> XINCLUDE "PE/wizard_Table.include.bb2"
0000F898 <wizard_Table.include.bb2@1199> XINCLUDE "PE/wizard_Table.include.bb2"
0000F8AC <wizard_Table.include.bb2@1200> XINCLUDE "PE/wizard_Table.include.bb2"
0000F93A <wizard_Table.include.bb2@1201> XINCLUDE "PE/wizard_Table.include.bb2"
0000F940 <wizard_Table.include.bb2@1202> XINCLUDE "PE/wizard_Table.include.bb2"
0000F9D4 <wizard_Table.include.bb2@1203> XINCLUDE "PE/wizard_Table.include.bb2"
0000FA4A <wizard_Table.include.bb2@1206> XINCLUDE "PE/wizard_Table.include.bb2"
0000FA52 <wizard_Table.include.bb2@1208> XINCLUDE "PE/wizard_Table.include.bb2"
0000FA72 <wizard_Table.include.bb2@1209> XINCLUDE "PE/wizard_Table.include.bb2"
0000FAA6 <wizard_Table.include.bb2@1210> XINCLUDE "PE/wizard_Table.include.bb2"
0000FAEC <wizard_Table.include.bb2@1211> XINCLUDE "PE/wizard_Table.include.bb2"
0000FB94 <wizard_Table.include.bb2@1212> XINCLUDE "PE/wizard_Table.include.bb2"
0000FBDC <wizard_Table.include.bb2@1213> XINCLUDE "PE/wizard_Table.include.bb2"
0000FBEA <wizard_Table.include.bb2@1214> XINCLUDE "PE/wizard_Table.include.bb2"
0000FC0A <wizard_Table.include.bb2@1216> XINCLUDE "PE/wizard_Table.include.bb2"
0000FC26 <wizard_Table.include.bb2@1217> XINCLUDE "PE/wizard_Table.include.bb2"
0000FC5A <wizard_Table.include.bb2@1218> XINCLUDE "PE/wizard_Table.include.bb2"
0000FC7C <wizard_Table.include.bb2@1219> XINCLUDE "PE/wizard_Table.include.bb2"
0000FC98 <wizard_Table.include.bb2@1220> XINCLUDE "PE/wizard_Table.include.bb2"
0000FCDE <wizard_Table.include.bb2@1221> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD40 <wizard_Table.include.bb2@1222> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD88 <wizard_Table.include.bb2@1224> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD98 <wizard_Table.include.bb2@1225> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDA6 <wizard_Table.include.bb2@1227> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDB0 <wizard_Table.include.bb2@1231> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDBE <wizard_Table.include.bb2@1233> XINCLUDE "PE/wizard_Table.include.bb2"
0000FDFC <wizard_Table.include.bb2@1234> XINCLUDE "PE/wizard_Table.include.bb2"
0000FE02 <wizard_Table.include.bb2@1237> XINCLUDE "PE/wizard_Table.include.bb2"
0000FE08 <wizard_Table.include.bb2@1239> XINCLUDE "PE/wizard_Table.include.bb2"
00010946 <wizard_Table.include.bb2@1240> XINCLUDE "PE/wizard_Table.include.bb2"
00010972 <wizard_Table.include.bb2@1241> XINCLUDE "PE/wizard_Table.include.bb2"
0001097C <wizard_Table.include.bb2@1242> XINCLUDE "PE/wizard_Table.include.bb2"
000109C2 <wizard_Table.include.bb2@1243> XINCLUDE "PE/wizard_Table.include.bb2"
000109CC <wizard_Table.include.bb2@1244> XINCLUDE "PE/wizard_Table.include.bb2"
000109DA <wizard_Table.include.bb2@1246> XINCLUDE "PE/wizard_Table.include.bb2"
000109E8 <wizard_Table.include.bb2@1247> XINCLUDE "PE/wizard_Table.include.bb2"
00010A18 <wizard_Table.include.bb2@1248> XINCLUDE "PE/wizard_Table.include.bb2"
00010A30 <wizard_Table.include.bb2@1251> XINCLUDE "PE/wizard_Table.include.bb2"
00010A62 <wizard_Table.include.bb2@1259> XINCLUDE "PE/wizard_Table.include.bb2"
00010AA0 <wizard_Table.include.bb2@1262> XINCLUDE "PE/wizard_Table.include.bb2"
00010AD4 <wizard_Table.include.bb2@1263> XINCLUDE "PE/wizard_Table.include.bb2"
00010AE6 <wizard_Table.include.bb2@1264> XINCLUDE "PE/wizard_Table.include.bb2"
00010B04 <wizard_Table.include.bb2@1265> XINCLUDE "PE/wizard_Table.include.bb2"
00010B2E <wizard_Table.include.bb2@1266> XINCLUDE "PE/wizard_Table.include.bb2"
00010B38 <wizard_Table.include.bb2@1267> XINCLUDE "PE/wizard_Table.include.bb2"
00010B46 <wizard_Table.include.bb2@1268> XINCLUDE "PE/wizard_Table.include.bb2"
00010B54 <wizard_Table.include.bb2@1269> XINCLUDE "PE/wizard_Table.include.bb2"
00010B62 <wizard_Table.include.bb2@1270> XINCLUDE "PE/wizard_Table.include.bb2"
00010B70 <wizard_Table.include.bb2@1271> XINCLUDE "PE/wizard_Table.include.bb2"
00010B7E <wizard_Table.include.bb2@1272> XINCLUDE "PE/wizard_Table.include.bb2"
00010B90 <wizard_Table.include.bb2@1274> XINCLUDE "PE/wizard_Table.include.bb2"
00010BBE <wizard_Table.include.bb2@1275> XINCLUDE "PE/wizard_Table.include.bb2"
00010BDC <wizard_Table.include.bb2@1276> XINCLUDE "PE/wizard_Table.include.bb2"
00010BEC <wizard_Table.include.bb2@1277> XINCLUDE "PE/wizard_Table.include.bb2"
00010C4C <wizard_Table.include.bb2@1278> XINCLUDE "PE/wizard_Table.include.bb2"
00010C62 <wizard_Table.include.bb2@1279> XINCLUDE "PE/wizard_Table.include.bb2"
00010C9E <wizard_Table.include.bb2@1280> XINCLUDE "PE/wizard_Table.include.bb2"
00010CAA <wizard_Table.include.bb2@1281> XINCLUDE "PE/wizard_Table.include.bb2"
00010D62 <wizard_Table.include.bb2@1282> XINCLUDE "PE/wizard_Table.include.bb2"
00010D74 <wizard_Table.include.bb2@1283> XINCLUDE "PE/wizard_Table.include.bb2"
00010D7E <wizard_Table.include.bb2@1284> XINCLUDE "PE/wizard_Table.include.bb2"
00010DB2 <wizard_Table.include.bb2@1285> XINCLUDE "PE/wizard_Table.include.bb2"
00010DCC <wizard_Table.include.bb2@1287> XINCLUDE "PE/wizard_Table.include.bb2"
00010E30 <wizard_Table.include.bb2@1288> XINCLUDE "PE/wizard_Table.include.bb2"
00010E52 <wizard_Table.include.bb2@1290> XINCLUDE "PE/wizard_Table.include.bb2"
00010E5C <wizard_Table.include.bb2@1291> XINCLUDE "PE/wizard_Table.include.bb2"
00010E68 <wizard_Table.include.bb2@1292> XINCLUDE "PE/wizard_Table.include.bb2"
00010E74 <wizard_Table.include.bb2@1293> XINCLUDE "PE/wizard_Table.include.bb2"
00010E8C <wizard_Table.include.bb2@1298> XINCLUDE "PE/wizard_Table.include.bb2"
00010EBA <wizard_Table.include.bb2@1301> XINCLUDE "PE/wizard_Table.include.bb2"
00010EE8 <wizard_Table.include.bb2@1303> XINCLUDE "PE/wizard_Table.include.bb2"
00010F08 <wizard_Table.include.bb2@1305> XINCLUDE "PE/wizard_Table.include.bb2"
00010F20 <wizard_Table.include.bb2@1312> XINCLUDE "PE/wizard_Table.include.bb2"
00010F3E <wizard_Table.include.bb2@1316> XINCLUDE "PE/wizard_Table.include.bb2"
00010F5E <wizard_Table.include.bb2@1319> XINCLUDE "PE/wizard_Table.include.bb2"
00010F7C <wizard_Table.include.bb2@1320> XINCLUDE "PE/wizard_Table.include.bb2"
00010F92 <wizard_Table.include.bb2@1321> XINCLUDE "PE/wizard_Table.include.bb2"
00010F98 <wizard_Table.include.bb2@1324> XINCLUDE "PE/wizard_Table.include.bb2"
00010FCC <wizard_Table.include.bb2@1325> XINCLUDE "PE/wizard_Table.include.bb2"
00010FF6 <wizard_Table.include.bb2@1326> XINCLUDE "PE/wizard_Table.include.bb2"
0001101E <wizard_Table.include.bb2@1327> XINCLUDE "PE/wizard_Table.include.bb2"
00011040 <wizard_Table.include.bb2@1328> XINCLUDE "PE/wizard_Table.include.bb2"
0001109C <wizard_Table.include.bb2@1329> XINCLUDE "PE/wizard_Table.include.bb2"
0001111A <wizard_Table.include.bb2@1330> XINCLUDE "PE/wizard_Table.include.bb2"
00011148 <wizard_Table.include.bb2@1331> XINCLUDE "PE/wizard_Table.include.bb2"
00011170 <wizard_Table.include.bb2@1332> XINCLUDE "PE/wizard_Table.include.bb2"
00011176 <wizard_Table.include.bb2@1334> XINCLUDE "PE/wizard_Table.include.bb2"
0001117C <wizard_Table.include.bb2@1335> XINCLUDE "PE/wizard_Table.include.bb2"
00011182 <wizard_Table.include.bb2@1336> XINCLUDE "PE/wizard_Table.include.bb2"
000111BA <wizard_Table.include.bb2@1337> XINCLUDE "PE/wizard_Table.include.bb2"
000111E2 <wizard_Table.include.bb2@1346> XINCLUDE "PE/wizard_Table.include.bb2"
000111EE <wizard_Table.include.bb2@1347> XINCLUDE "PE/wizard_Table.include.bb2"
000111F4 <wizard_Table.include.bb2@1348> XINCLUDE "PE/wizard_Table.include.bb2"
00011202 <wizard_Table.include.bb2@1349> XINCLUDE "PE/wizard_Table.include.bb2"
00011234 <wizard_Table.include.bb2@1350> XINCLUDE "PE/wizard_Table.include.bb2"
00011266 <wizard_Table.include.bb2@1351> XINCLUDE "PE/wizard_Table.include.bb2"
00011270 <wizard_Table.include.bb2@1355> XINCLUDE "PE/wizard_Table.include.bb2"
00011284 <wizard_Table.include.bb2@1356> XINCLUDE "PE/wizard_Table.include.bb2"
00011292 <wizard_Table.include.bb2@1357> XINCLUDE "PE/wizard_Table.include.bb2"
000112A4 <wizard_Table.include.bb2@1358> XINCLUDE "PE/wizard_Table.include.bb2"
000112C0 <wizard_Table.include.bb2@1359> XINCLUDE "PE/wizard_Table.include.bb2"
000112E4 <wizard_Table.include.bb2@1360> XINCLUDE "PE/wizard_Table.include.bb2"
000112F2 <wizard_Table.include.bb2@1363> XINCLUDE "PE/wizard_Table.include.bb2"
00011300 <wizard_Table.include.bb2@1364> XINCLUDE "PE/wizard_Table.include.bb2"
0001130E <wizard_Table.include.bb2@1365> XINCLUDE "PE/wizard_Table.include.bb2"
00011314 <wizard_Table.include.bb2@1366> XINCLUDE "PE/wizard_Table.include.bb2"
00011320 <wizard_Table.include.bb2@1367> XINCLUDE "PE/wizard_Table.include.bb2"
0001132E <wizard_Table.include.bb2@1368> XINCLUDE "PE/wizard_Table.include.bb2"
00011344 <wizard_Table.include.bb2@1369> XINCLUDE "PE/wizard_Table.include.bb2"
00011350 <wizard_Table.include.bb2@1370> XINCLUDE "PE/wizard_Table.include.bb2"
00011356 <wizard_Table.include.bb2@1371> XINCLUDE "PE/wizard_Table.include.bb2"
0001136A <wizard_Table.include.bb2@1372> XINCLUDE "PE/wizard_Table.include.bb2"
00011380 <wizard_Table.include.bb2@1373> XINCLUDE "PE/wizard_Table.include.bb2"
0001138C <wizard_Table.include.bb2@1374> XINCLUDE "PE/wizard_Table.include.bb2"
00011392 <wizard_Table.include.bb2@1377> XINCLUDE "PE/wizard_Table.include.bb2"
0001139E <wizard_Table.include.bb2@1378> XINCLUDE "PE/wizard_Table.include.bb2"
000113A4 <wizard_Table.include.bb2@1379> XINCLUDE "PE/wizard_Table.include.bb2"
000113B6 <wizard_Table.include.bb2@1386> XINCLUDE "PE/wizard_Table.include.bb2"
000113C4 <wizard_Table.include.bb2@1387> XINCLUDE "PE/wizard_Table.include.bb2"
00011530 <wizard_Table.include.bb2@1388> XINCLUDE "PE/wizard_Table.include.bb2"
00011536 <wizard_Table.include.bb2@1389> XINCLUDE "PE/wizard_Table.include.bb2"
0001155A <wizard_Table.include.bb2@1390> XINCLUDE "PE/wizard_Table.include.bb2"
00011568 <wizard_Table.include.bb2@1391> XINCLUDE "PE/wizard_Table.include.bb2"
0001156A <wizard_Table.include.bb2@1393> XINCLUDE "PE/wizard_Table.include.bb2"
000115A6 <wizard_Table.include.bb2@1394> XINCLUDE "PE/wizard_Table.include.bb2"
000115DA <wizard_Table.include.bb2@1395> XINCLUDE "PE/wizard_Table.include.bb2"
0001160E <wizard_Table.include.bb2@1396> XINCLUDE "PE/wizard_Table.include.bb2"
0001163C <wizard_Table.include.bb2@1397> XINCLUDE "PE/wizard_Table.include.bb2"
00011648 <wizard_Table.include.bb2@1398> XINCLUDE "PE/wizard_Table.include.bb2"
0001165C <wizard_Table.include.bb2@1401> XINCLUDE "PE/wizard_Table.include.bb2"
0001166A <wizard_Table.include.bb2@1402> XINCLUDE "PE/wizard_Table.include.bb2"
00011678 <wizard_Table.include.bb2@1403> XINCLUDE "PE/wizard_Table.include.bb2"
00011686 <wizard_Table.include.bb2@1404> XINCLUDE "PE/wizard_Table.include.bb2"
000116AC <wizard_Table.include.bb2@1406> XINCLUDE "PE/wizard_Table.include.bb2"
000116B6 <wizard_Table.include.bb2@1407> XINCLUDE "PE/wizard_Table.include.bb2"
000116F6 <wizard_Table.include.bb2@1408> XINCLUDE "PE/wizard_Table.include.bb2"
000116FC <wizard_Table.include.bb2@1409> XINCLUDE "PE/wizard_Table.include.bb2"
0001170E <wizard_Table.include.bb2@1410> XINCLUDE "PE/wizard_Table.include.bb2"
0001175A <wizard_Table.include.bb2@1411> XINCLUDE "PE/wizard_Table.include.bb2"
000117C2 <wizard_Table.include.bb2@1412> XINCLUDE "PE/wizard_Table.include.bb2"
000117D6 <wizard_Table.include.bb2@1413> XINCLUDE "PE/wizard_Table.include.bb2"
000117F8 <wizard_Table.include.bb2@1414> XINCLUDE "PE/wizard_Table.include.bb2"
00011816 <wizard_Table.include.bb2@1415> XINCLUDE "PE/wizard_Table.include.bb2"
0001181C <wizard_Table.include.bb2@1417> XINCLUDE "PE/wizard_Table.include.bb2"
00011822 <wizard_Table.include.bb2@1419> XINCLUDE "PE/wizard_Table.include.bb2"
0001185E <wizard_Table.include.bb2@1421> XINCLUDE "PE/wizard_Table.include.bb2"
00011892 <wizard_Table.include.bb2@1422> XINCLUDE "PE/wizard_Table.include.bb2"
000118C6 <wizard_Table.include.bb2@1423> XINCLUDE "PE/wizard_Table.include.bb2"
000118F4 <wizard_Table.include.bb2@1424> XINCLUDE "PE/wizard_Table.include.bb2"
00011900 <wizard_Table.include.bb2@1425> XINCLUDE "PE/wizard_Table.include.bb2"
00011914 <wizard_Table.include.bb2@1430> XINCLUDE "PE/wizard_Table.include.bb2"
0001195A <wizard_Table.include.bb2@1431> XINCLUDE "PE/wizard_Table.include.bb2"
000119A8 <wizard_Table.include.bb2@1432> XINCLUDE "PE/wizard_Table.include.bb2"
000119D6 <wizard_Table.include.bb2@1433> XINCLUDE "PE/wizard_Table.include.bb2"
000119EC <wizard_Table.include.bb2@1435> XINCLUDE "PE/wizard_Table.include.bb2"
00011A16 <wizard_Table.include.bb2@1436> XINCLUDE "PE/wizard_Table.include.bb2"
00011A1C <wizard_Table.include.bb2@1437> XINCLUDE "PE/wizard_Table.include.bb2"
00011A3C <wizard_Table.include.bb2@1440> XINCLUDE "PE/wizard_Table.include.bb2"
00011A76 <wizard_Table.include.bb2@1441> XINCLUDE "PE/wizard_Table.include.bb2"
00011AB0 <wizard_Table.include.bb2@1442> XINCLUDE "PE/wizard_Table.include.bb2"
00011ADE <wizard_Table.include.bb2@1443> XINCLUDE "PE/wizard_Table.include.bb2"
00011AEA <wizard_Table.include.bb2@1445> XINCLUDE "PE/wizard_Table.include.bb2"
00011AF0 <wizard_Table.include.bb2@1447> XINCLUDE "PE/wizard_Table.include.bb2"
00011B10 <wizard_Table.include.bb2@1449> XINCLUDE "PE/wizard_Table.include.bb2"
00011B3E <wizard_Table.include.bb2@1450> XINCLUDE "PE/wizard_Table.include.bb2"
00011B5A <wizard_Table.include.bb2@1451> XINCLUDE "PE/wizard_Table.include.bb2"
00011B6A <wizard_Table.include.bb2@1452> XINCLUDE "PE/wizard_Table.include.bb2"
00011B7C <wizard_Table.include.bb2@1453> XINCLUDE "PE/wizard_Table.include.bb2"
00011BAA <wizard_Table.include.bb2@1454> XINCLUDE "PE/wizard_Table.include.bb2"
00011BD8 <wizard_Table.include.bb2@1455> XINCLUDE "PE/wizard_Table.include.bb2"
00011BE4 <wizard_Table.include.bb2@1457> XINCLUDE "PE/wizard_Table.include.bb2"
00011BF8 <wizard_Table.include.bb2@1462> XINCLUDE "PE/wizard_Table.include.bb2"
00011C20 <wizard_Table.include.bb2@1463> XINCLUDE "PE/wizard_Table.include.bb2"
00011C4E <wizard_Table.include.bb2@1464> XINCLUDE "PE/wizard_Table.include.bb2"
00011C5C <wizard_Table.include.bb2@1465> XINCLUDE "PE/wizard_Table.include.bb2"
00011C6E <wizard_Table.include.bb2@1466> XINCLUDE "PE/wizard_Table.include.bb2"
00011C80 <wizard_Table.include.bb2@1467> XINCLUDE "PE/wizard_Table.include.bb2"
00011C8E <wizard_Table.include.bb2@1468> XINCLUDE "PE/wizard_Table.include.bb2"
00011C9C <wizard_Table.include.bb2@1469> XINCLUDE "PE/wizard_Table.include.bb2"
00011CA2 <wizard_Table.include.bb2@1471> XINCLUDE "PE/wizard_Table.include.bb2"
00011CAE <wizard_Table.include.bb2@1472> XINCLUDE "PE/wizard_Table.include.bb2"
00011CB4 <wizard_Table.include.bb2@1473> XINCLUDE "PE/wizard_Table.include.bb2"
00011CC2 <wizard_Table.include.bb2@1476> XINCLUDE "PE/wizard_Table.include.bb2"
00011D02 <wizard_Table.include.bb2@1477> XINCLUDE "PE/wizard_Table.include.bb2"
00011D42 <wizard_Table.include.bb2@1479> XINCLUDE "PE/wizard_Table.include.bb2"
00011D5A <wizard_Table.include.bb2@1480> XINCLUDE "PE/wizard_Table.include.bb2"
00011D70 <wizard_Table.include.bb2@1481> XINCLUDE "PE/wizard_Table.include.bb2"
00011D86 <wizard_Table.include.bb2@1482> XINCLUDE "PE/wizard_Table.include.bb2"
00011D8C <wizard_Table.include.bb2@1483> XINCLUDE "PE/wizard_Table.include.bb2"
00011D92 <wizard_Table.include.bb2@1484> XINCLUDE "PE/wizard_Table.include.bb2"
00011D9E <wizard_Table.include.bb2@1485> XINCLUDE "PE/wizard_Table.include.bb2"
00011DA4 <wizard_Table.include.bb2@1486> XINCLUDE "PE/wizard_Table.include.bb2"
00011DAA <wizard_Table.include.bb2@1487> XINCLUDE "PE/wizard_Table.include.bb2"
00011DC2 <wizard_Table.include.bb2@1488> XINCLUDE "PE/wizard_Table.include.bb2"
00011DC8 <wizard_Table.include.bb2@1490> XINCLUDE "PE/wizard_Table.include.bb2"
00011DDE <wizard_Table.include.bb2@1491> XINCLUDE "PE/wizard_Table.include.bb2"
00011DE4 <wizard_Table.include.bb2@1492> XINCLUDE "PE/wizard_Table.include.bb2"
00011DEA <wizard_Table.include.bb2@1493> XINCLUDE "PE/wizard_Table.include.bb2"
00011DF6 <wizard_Table.include.bb2@1494> XINCLUDE "PE/wizard_Table.include.bb2"
00011DFC <wizard_Table.include.bb2@1495> XINCLUDE "PE/wizard_Table.include.bb2"
00011E0A <wizard_Table.include.bb2@1496> XINCLUDE "PE/wizard_Table.include.bb2"
00011E10 <wizard_Table.include.bb2@1497> XINCLUDE "PE/wizard_Table.include.bb2"
00011E16 <wizard_Table.include.bb2@1501> XINCLUDE "PE/wizard_Table.include.bb2"
00011E1C <wizard_Table.include.bb2@1502> XINCLUDE "PE/wizard_Table.include.bb2"
00011E30 <wizard_Table.include.bb2@1504> XINCLUDE "PE/wizard_Table.include.bb2"
00011E5E <wizard_Table.include.bb2@1506> XINCLUDE "PE/wizard_Table.include.bb2"
00011E6A <wizard_Table.include.bb2@1507> XINCLUDE "PE/wizard_Table.include.bb2"
00011E76 <wizard_Table.include.bb2@1508> XINCLUDE "PE/wizard_Table.include.bb2"
00011E7C <wizard_Table.include.bb2@1511> XINCLUDE "PE/wizard_Table.include.bb2"
00011EAA <wizard_Table.include.bb2@1512> XINCLUDE "PE/wizard_Table.include.bb2"
00011EB6 <wizard_Table.include.bb2@1513> XINCLUDE "PE/wizard_Table.include.bb2"
00011EC2 <wizard_Table.include.bb2@1514> XINCLUDE "PE/wizard_Table.include.bb2"
00011EC4 <wizard_Table.include.bb2@1515> XINCLUDE "PE/wizard_Table.include.bb2"
00011ED0 <wizard_Table.include.bb2@1516> XINCLUDE "PE/wizard_Table.include.bb2"
00011EE4 <wizard_Table.include.bb2@1519> XINCLUDE "PE/wizard_Table.include.bb2"
00011F04 <wizard_Table.include.bb2@1521> XINCLUDE "PE/wizard_Table.include.bb2"
00011F3E <wizard_Table.include.bb2@1522> XINCLUDE "PE/wizard_Table.include.bb2"
00011F7A <wizard_Table.include.bb2@1523> XINCLUDE "PE/wizard_Table.include.bb2"
00011FB0 <wizard_Table.include.bb2@1524> XINCLUDE "PE/wizard_Table.include.bb2"
00011FD0 <wizard_Table.include.bb2@1526> XINCLUDE "PE/wizard_Table.include.bb2"
00011FDA <wizard_Table.include.bb2@1528> XINCLUDE "PE/wizard_Table.include.bb2"
00011FF8 <wizard_Table.include.bb2@1529> XINCLUDE "PE/wizard_Table.include.bb2"
00012010 <wizard_Table.include.bb2@1530> XINCLUDE "PE/wizard_Table.include.bb2"
0001203E <wizard_Table.include.bb2@1532> XINCLUDE "PE/wizard_Table.include.bb2"
00012072 <wizard_Table.include.bb2@1533> XINCLUDE "PE/wizard_Table.include.bb2"
000120A4 <wizard_Table.include.bb2@1534> XINCLUDE "PE/wizard_Table.include.bb2"
000120D2 <wizard_Table.include.bb2@1535> XINCLUDE "PE/wizard_Table.include.bb2"
000120F4 <wizard_Table.include.bb2@1538> XINCLUDE "PE/wizard_Table.include.bb2"
0001212C <wizard_Table.include.bb2@1539> XINCLUDE "PE/wizard_Table.include.bb2"
00012132 <wizard_Table.include.bb2@1541> XINCLUDE "PE/wizard_Table.include.bb2"
00012138 <wizard_Table.include.bb2@1543> XINCLUDE "PE/wizard_Table.include.bb2"
0001213E <wizard_Table.include.bb2@1545> XINCLUDE "PE/wizard_Table.include.bb2"
0001214C <wizard_Table.include.bb2@1546> XINCLUDE "PE/wizard_Table.include.bb2"
00012168 <wizard_Table.include.bb2@1547> XINCLUDE "PE/wizard_Table.include.bb2"
0001217E <wizard_Table.include.bb2@1548> XINCLUDE "PE/wizard_Table.include.bb2"
000121AC <wizard_Table.include.bb2@1549> XINCLUDE "PE/wizard_Table.include.bb2"
000121E8 <wizard_Table.include.bb2@1550> XINCLUDE "PE/wizard_Table.include.bb2"
000121F8 <wizard_Table.include.bb2@1551> XINCLUDE "PE/wizard_Table.include.bb2"
00012206 <wizard_Table.include.bb2@1552> XINCLUDE "PE/wizard_Table.include.bb2"
0001220E <wizard_Table.include.bb2@1553> XINCLUDE "PE/wizard_Table.include.bb2"
00012214 <wizard_Table.include.bb2@1554> XINCLUDE "PE/wizard_Table.include.bb2"
00012224 <wizard_Table.include.bb2@1555> XINCLUDE "PE/wizard_Table.include.bb2"
00012230 <wizard_Table.include.bb2@1556> XINCLUDE "PE/wizard_Table.include.bb2"
00012236 <wizard_Table.include.bb2@1558> XINCLUDE "PE/wizard_Table.include.bb2"
0001223E <wizard_Table.include.bb2@1559> XINCLUDE "PE/wizard_Table.include.bb2"
00012244 <wizard_Table.include.bb2@1562> XINCLUDE "PE/wizard_Table.include.bb2"
0001228C <wizard_Table.include.bb2@1563> XINCLUDE "PE/wizard_Table.include.bb2"
0001228E <wizard_Table.include.bb2@1564> XINCLUDE "PE/wizard_Table.include.bb2"
0001229C <wizard_Table.include.bb2@1567> XINCLUDE "PE/wizard_Table.include.bb2"
000122AE <wizard_Table.include.bb2@1568> XINCLUDE "PE/wizard_Table.include.bb2"
000122BA <wizard_Table.include.bb2@1569> XINCLUDE "PE/wizard_Table.include.bb2"
000122C0 <wizard_Table.include.bb2@1571> XINCLUDE "PE/wizard_Table.include.bb2"
000122D8 <wizard_Table.include.bb2@1572> XINCLUDE "PE/wizard_Table.include.bb2"
000122E4 <wizard_Table.include.bb2@1573> XINCLUDE "PE/wizard_Table.include.bb2"
000122EA <wizard_Table.include.bb2@1576> XINCLUDE "PE/wizard_Table.include.bb2"
00012318 <wizard_Table.include.bb2@1577> XINCLUDE "PE/wizard_Table.include.bb2"
00012324 <wizard_Table.include.bb2@1578> XINCLUDE "PE/wizard_Table.include.bb2"
00012356 <wizard_Table.include.bb2@1579> XINCLUDE "PE/wizard_Table.include.bb2"
00012384 <wizard_Table.include.bb2@1580> XINCLUDE "PE/wizard_Table.include.bb2"
000123B2 <wizard_Table.include.bb2@1581> XINCLUDE "PE/wizard_Table.include.bb2"
000123B4 <wizard_Table.include.bb2@1584> XINCLUDE "PE/wizard_Table.include.bb2"
000123BC <wizard_Table.include.bb2@1586> XINCLUDE "PE/wizard_Table.include.bb2"
000123CE <wizard_Table.include.bb2@1587> XINCLUDE "PE/wizard_Table.include.bb2"
000123CE <AmiBlitz3.ab2@88> XINCLUDE "PE/wizard_Table.include.bb2"
000123DA <AmiBlitz3.ab2@89> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
000123DA <logging.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
000123E6 <logging.include.bb2@4> XINCLUDE "PE/logging.include.bb2"
000123E6 <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
000123FC <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
00012412 <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
00012428 <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
0001243E <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
0001244A <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
00012456 <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
00012462 <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
0001246E <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
00012496 <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
000124BE <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
000124E6 <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
0001250A <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
0001252E <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
00012548 <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
00012558 <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
0001255A <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
0001255C <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
0001255E <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
00012560 <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
00012562 <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
00012566 <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
0001256A <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
0001256E <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
00012570 <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
00012572 <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
00012574 <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
00012576 <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
00012578 <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
0001257A <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
0001257C <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
00012586 <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
0001258C <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
000125A6 <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
000125C4 <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
000125CA <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
000125E4 <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
000125FE <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
00012628 <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
00012648 <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
00012652 <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
0001267E <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
000126A0 <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
000126BA <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
000126BE <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
000126EC <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
0001270A <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
00012710 <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
0001272E <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
00012734 <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
0001275C <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
0001277A <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
000127B4 <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
000127D0 <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
000127D4 <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
000127DA <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
000127DE <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
000127E4 <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
000127FE <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
00012848 <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
0001284E <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
0001287C <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
00012886 <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
000128A2 <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
000128A6 <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
000128D4 <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
000128DE <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
000128E4 <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
00012902 <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
00012930 <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
00012936 <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0001294C <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
00012956 <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
000129C4 <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
000129D4 <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
000129D8 <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
00012A12 <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
00012A1C <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
00012A22 <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
00012A3C <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
00012A52 <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
00012AAE <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
00012AE8 <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
00012B22 <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
00012B40 <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
00012B5E <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
00012B74 <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
00012B90 <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
00012BAA <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
00012C26 <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
00012C38 <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
00012C4E <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
00012C82 <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
00012C8C <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
00012C9C <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
00012CA0 <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
00012CCE <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
00012CE8 <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
00012CFE <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
00012D1C <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
00012D32 <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
00012D6A <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
00012D94 <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
00012DBE <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
00012DD6 <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
00012DEC <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
00012E38 <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
00012E58 <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
00012E60 <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
00012E9E <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
00012EAA <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
00012EB4 <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
00012ECA <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
00012ED0 <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
00012EDC <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
00012F04 <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
00012F14 <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
00012F3C <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
00012F4C <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
00012F74 <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
00012F84 <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
00012FAC <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
00012FAE <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
00012FD4 <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
00013010 <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
0001309A <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
000130D4 <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
00013104 <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
00013140 <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
00013198 <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
000131F0 <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
00013270 <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
000132A4 <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
000132D8 <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
000132DE <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
000132EA <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
0001331E <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
0001334E <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
0001340A <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
0001348A <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
000134BE <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
000134DC <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
000134E4 <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
000134E8 <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
000135AC <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
000135BC <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
00013678 <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
000136F8 <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
000137D8 <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
000137E2 <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
00013816 <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
00013834 <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
0001383C <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
00013840 <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
00013904 <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
00013914 <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
00013948 <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
00013978 <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
00013A34 <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
00013AB4 <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
00013AE8 <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
00013B06 <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
00013B0E <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
00013B12 <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
00013BD6 <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
00013BE6 <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
00013CA2 <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
00013D22 <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
00013D56 <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
00013D74 <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
00013D7C <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
00013D80 <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
00013E44 <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
00013E48 <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
00013E76 <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
00013E78 <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
00013E7C <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
00013F08 <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
00013F1E <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
00013F34 <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
00013F9E <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
00014008 <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
00014028 <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
00014044 <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
00014062 <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
0001407C <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
00014086 <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
000140A2 <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
000140C4 <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
000140CA <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
000140F2 <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
0001410C <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
00014122 <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
0001417E <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
000141B6 <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
000141BA <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
00014206 <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
00014220 <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
00014234 <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
0001423A <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
0001423E <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
00014254 <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
00014334 <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
00014338 <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
0001437E <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
0001438A <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
000143F8 <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
00014432 <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
0001447E <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
000144EA <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
000144EE <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
0001451C <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
00014520 <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
00014576 <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
00014580 <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
00014594 <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
000145AE <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
000145B4 <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
000145DC <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
000145F6 <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
00014652 <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
00014656 <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
00014678 <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
0001467E <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
00014698 <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
000146B6 <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
000146F8 <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
00014746 <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
0001477C <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
00014782 <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
00014786 <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
000147B6 <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
000147BC <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
000147C0 <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
000147D6 <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
00014832 <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
0001486A <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
0001486E <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
000148BA <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
000148D4 <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
000148E8 <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
000148EE <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
000148F2 <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
00014908 <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
0001490E <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
00014912 <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
00014964 <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
000149B0 <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
000149BA <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
000149C0 <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
000149DA <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
000149E0 <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
00014A2C <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
00014A6E <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
00014A78 <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
00014A7E <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
00014AA4 <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
00014AAA <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
00014AD2 <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
00014B36 <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
00014B50 <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
00014B5A <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
00014B74 <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
00014B7E <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
00014B96 <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
00014BC6 <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
00014BE2 <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
00014BF2 <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
00014BF6 <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
00014C24 <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
00014C2E <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
00014C34 <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
00014C52 <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
00014C58 <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
00014C6E <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
00014C7E <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
00014CA2 <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
00014CD8 <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
00014CEE <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
00014D3C <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
00014E1A <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
00014E38 <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
00014E62 <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
00014E7E <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
00014EAC <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
00014EB6 <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
00014EE2 <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
00014EFC <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
00014F18 <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
00014F1C <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
00014F4A <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
00014F4E <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
00014F54 <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
00014F58 <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
00014FEC <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
00014FF0 <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
00015086 <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
0001508A <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
000150B8 <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
000150C2 <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
000150C8 <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
000150E2 <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
00015100 <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
00015106 <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
00015120 <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
0001513E <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
000151FC <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
00015204 <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
00015208 <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
00015238 <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
00015244 <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
0001524A <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
00015264 <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
0001526E <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
00015278 <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
0001528E <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
000152A4 <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
000152B4 <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
000152C0 <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
000152C4 <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
000152CE <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
00015310 <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
00015326 <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
0001534A <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
00015360 <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
0001536C <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
00015370 <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
00015380 <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
000153A2 <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
000153B8 <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
00015404 <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
00015408 <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
00015432 <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
0001544A <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
00015478 <file.include.bb2@1706> XINCLUDE "PE/logging.include.bb2"
0001548C <file.include.bb2@1707> XINCLUDE "PE/logging.include.bb2"
000154A4 <file.include.bb2@1708> XINCLUDE "PE/logging.include.bb2"
000154C6 <file.include.bb2@1709> XINCLUDE "PE/logging.include.bb2"
000154DE <file.include.bb2@1710> XINCLUDE "PE/logging.include.bb2"
000154E8 <file.include.bb2@1711> XINCLUDE "PE/logging.include.bb2"
00015502 <file.include.bb2@1712> XINCLUDE "PE/logging.include.bb2"
00015524 <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
0001553C <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0001555E <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
00015564 <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
00015596 <file.include.bb2@1811> XINCLUDE "PE/logging.include.bb2"
000155AA <file.include.bb2@1813> XINCLUDE "PE/logging.include.bb2"
000155C2 <file.include.bb2@1814> XINCLUDE "PE/logging.include.bb2"
000155DA <file.include.bb2@1815> XINCLUDE "PE/logging.include.bb2"
000155FA <file.include.bb2@1816> XINCLUDE "PE/logging.include.bb2"
0001562C <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
0001565E <file.include.bb2@1818> XINCLUDE "PE/logging.include.bb2"
00015674 <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
0001567E <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
000156A8 <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
000156B2 <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
000156CC <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
000156E6 <file.include.bb2@1841> XINCLUDE "PE/logging.include.bb2"
00015704 <file.include.bb2@1843> XINCLUDE "PE/logging.include.bb2"
00015728 <file.include.bb2@1844> XINCLUDE "PE/logging.include.bb2"
00015772 <file.include.bb2@1845> XINCLUDE "PE/logging.include.bb2"
0001578C <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0001579E <file.include.bb2@1847> XINCLUDE "PE/logging.include.bb2"
000157D6 <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
000157EC <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
000157F6 <file.include.bb2@1850> XINCLUDE "PE/logging.include.bb2"
0001581E <file.include.bb2@1851> XINCLUDE "PE/logging.include.bb2"
00015822 <file.include.bb2@1853> XINCLUDE "PE/logging.include.bb2"
0001584A <file.include.bb2@1854> XINCLUDE "PE/logging.include.bb2"
0001585A <file.include.bb2@1856> XINCLUDE "PE/logging.include.bb2"
0001586E <file.include.bb2@1857> XINCLUDE "PE/logging.include.bb2"
00015884 <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
00015894 <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
00015898 <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
000158AE <file.include.bb2@1894> XINCLUDE "PE/logging.include.bb2"
000158D8 <file.include.bb2@1896> XINCLUDE "PE/logging.include.bb2"
000158E0 <file.include.bb2@1897> XINCLUDE "PE/logging.include.bb2"
000158E0 <logging.include.bb2@8> XINCLUDE "PE/logging.include.bb2"
0001597E <logging.include.bb2@30> XINCLUDE "PE/logging.include.bb2"
00015986 <logging.include.bb2@31> XINCLUDE "PE/logging.include.bb2"
0001598E <logging.include.bb2@32> XINCLUDE "PE/logging.include.bb2"
00015996 <logging.include.bb2@33> XINCLUDE "PE/logging.include.bb2"
000159D0 <logging.include.bb2@124> XINCLUDE "PE/logging.include.bb2"
00015A02 <logging.include.bb2@126> XINCLUDE "PE/logging.include.bb2"
00015A16 <logging.include.bb2@127> XINCLUDE "PE/logging.include.bb2"
00015A48 <logging.include.bb2@128> XINCLUDE "PE/logging.include.bb2"
00015DCA <logging.include.bb2@129> XINCLUDE "PE/logging.include.bb2"
00015DD8 <logging.include.bb2@130> XINCLUDE "PE/logging.include.bb2"
00015DDC <logging.include.bb2@131> XINCLUDE "PE/logging.include.bb2"
0001607E <logging.include.bb2@132> XINCLUDE "PE/logging.include.bb2"
00016098 <logging.include.bb2@134> XINCLUDE "PE/logging.include.bb2"
000160D2 <logging.include.bb2@137> XINCLUDE "PE/logging.include.bb2"
00016124 <logging.include.bb2@138> XINCLUDE "PE/logging.include.bb2"
00016138 <logging.include.bb2@139> XINCLUDE "PE/logging.include.bb2"
0001618E <logging.include.bb2@140> XINCLUDE "PE/logging.include.bb2"
00016192 <logging.include.bb2@141> XINCLUDE "PE/logging.include.bb2"
0001620E <logging.include.bb2@142> XINCLUDE "PE/logging.include.bb2"
00016282 <logging.include.bb2@143> XINCLUDE "PE/logging.include.bb2"
0001629C <logging.include.bb2@145> XINCLUDE "PE/logging.include.bb2"
0001629C <AmiBlitz3.ab2@92> XINCLUDE "PE/logging.include.bb2"
000162A8 <AmiBlitz3.ab2@93> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
000162A8 <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
000162A8 <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
000162A8 <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
000162A8 <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
000162D0 <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
000162EA <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
000162F4 <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
00016306 <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
0001632A <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
00016338 <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
00016344 <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
00016348 <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
00016366 <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
00016380 <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
000163A0 <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
000163AA <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
000163B8 <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
000163C4 <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
000163D2 <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
000163DE <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
000163EA <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
000163FC <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
0001640C <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
00016416 <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
0001641C <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
00016436 <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
00016440 <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
0001644A <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
0001645A <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
00016464 <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
00016476 <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
0001648C <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
00016496 <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
0001649C <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
000164A0 <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
000164B6 <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
000164BC <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
000164C6 <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
000164FC <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
00016506 <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
0001650A <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
00016538 <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
00016538 <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
00016552 <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
0001655C <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
00016584 <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
000165A6 <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
000165C2 <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
000165D2 <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
000165D6 <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
000165F0 <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
00016610 <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
0001661A <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
00016634 <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
00016642 <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
00016650 <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
0001665E <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
0001666C <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
00016678 <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
00016686 <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
00016694 <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
000166A2 <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
000166B0 <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
000166CA <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
000166D8 <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
000166E8 <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
000166F8 <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
00016708 <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
00016716 <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
00016720 <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
00016726 <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
00016744 <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
0001674A <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
00016754 <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
00016774 <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
000167A2 <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
000167C0 <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
000167CA <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
000167DC <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
00016808 <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
0001681E <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
0001682A <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
00016836 <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
0001683C <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
00016842 <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
00016848 <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
0001684E <prefixtree.include.bb2@179> XINCLUDE "translation.include.bb2"
00016854 <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
0001685E <prefixtree.include.bb2@183> XINCLUDE "translation.include.bb2"
00016864 <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
00016896 <prefixtree.include.bb2@204> XINCLUDE "translation.include.bb2"
000168B0 <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
000168C8 <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
000168DC <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
0001692C <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
0001694C <prefixtree.include.bb2@210> XINCLUDE "translation.include.bb2"
00016960 <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
0001696E <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
0001697A <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
00016982 <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
0001698A <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
00016992 <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
0001699A <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
000169A0 <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
000169AE <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
000169D0 <prefixtree.include.bb2@221> XINCLUDE "translation.include.bb2"
000169FC <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
00016A0E <prefixtree.include.bb2@224> XINCLUDE "translation.include.bb2"
00016A14 <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
00016A3C <prefixtree.include.bb2@227> XINCLUDE "translation.include.bb2"
00016A60 <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
00016A88 <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
00016ABC <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
00016ACC <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
00016AD6 <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
00016AE4 <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
00016AF8 <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
00016AFE <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
00016B1E <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
00016B24 <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
00016B2C <prefixtree.include.bb2@239> XINCLUDE "translation.include.bb2"
00016B66 <prefixtree.include.bb2@241> XINCLUDE "translation.include.bb2"
00016B8C <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
00016BA4 <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
00016BD8 <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
00016BE0 <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
00016BEE <prefixtree.include.bb2@247> XINCLUDE "translation.include.bb2"
00016BF4 <prefixtree.include.bb2@249> XINCLUDE "translation.include.bb2"
00016C0C <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
00016C12 <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
00016C18 <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
00016C32 <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
00016C38 <prefixtree.include.bb2@256> XINCLUDE "translation.include.bb2"
00016C3E <prefixtree.include.bb2@258> XINCLUDE "translation.include.bb2"
00016C44 <prefixtree.include.bb2@260> XINCLUDE "translation.include.bb2"
00016C52 <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
00016C60 <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
00016C9A <prefixtree.include.bb2@264> XINCLUDE "translation.include.bb2"
00016CC0 <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
00016CD8 <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
00016CE4 <prefixtree.include.bb2@269> XINCLUDE "translation.include.bb2"
00016CF0 <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
00016CFC <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
00016D08 <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
00016D14 <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
00016D1E <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
00016D26 <prefixtree.include.bb2@276> XINCLUDE "translation.include.bb2"
00016D40 <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
00016D7E <prefixtree.include.bb2@324> XINCLUDE "translation.include.bb2"
00016D84 <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
00016DC4 <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
00016E1A <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
00016E8C <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
00016E98 <prefixtree.include.bb2@330> XINCLUDE "translation.include.bb2"
00016EA6 <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
00016EEC <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
00016F36 <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
00016F6E <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
00016FC2 <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
00016FC8 <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
00016FCE <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
00016FDC <prefixtree.include.bb2@339> XINCLUDE "translation.include.bb2"
00016FE4 <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
0001701E <prefixtree.include.bb2@342> XINCLUDE "translation.include.bb2"
00017044 <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
0001705C <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
00017092 <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
000170A8 <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
000170B6 <prefixtree.include.bb2@348> XINCLUDE "translation.include.bb2"
000170CE <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
00017106 <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
0001712C <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
00017174 <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
0001717A <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
00017194 <prefixtree.include.bb2@355> XINCLUDE "translation.include.bb2"
000171A0 <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
000171A6 <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
000171D2 <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
000171E6 <prefixtree.include.bb2@363> XINCLUDE "translation.include.bb2"
000171F4 <prefixtree.include.bb2@365> XINCLUDE "translation.include.bb2"
000171FC <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
00017236 <prefixtree.include.bb2@368> XINCLUDE "translation.include.bb2"
0001725C <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
00017274 <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
000172AE <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
000172D8 <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
000172F0 <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
00017320 <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
0001734C <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
00017368 <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
00017376 <prefixtree.include.bb2@378> XINCLUDE "translation.include.bb2"
00017384 <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
000173C2 <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
000173FE <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
0001746A <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
00017498 <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
000174C6 <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
0001750E <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
00017528 <prefixtree.include.bb2@388> XINCLUDE "translation.include.bb2"
00017570 <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
0001758E <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
000175AC <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
000175C6 <prefixtree.include.bb2@394> XINCLUDE "translation.include.bb2"
000175D2 <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
000175D8 <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
00017604 <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
0001761C <prefixtree.include.bb2@399> XINCLUDE "translation.include.bb2"
00017622 <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
00017636 <prefixtree.include.bb2@403> XINCLUDE "translation.include.bb2"
00017644 <prefixtree.include.bb2@405> XINCLUDE "translation.include.bb2"
00017652 <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
00017660 <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
00017668 <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
0001768C <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
000176B4 <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
000176DC <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
00017748 <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
00017758 <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
00017784 <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
000177DA <prefixtree.include.bb2@416> XINCLUDE "translation.include.bb2"
000177E8 <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
000177F6 <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
000177FC <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
00017844 <prefixtree.include.bb2@421> XINCLUDE "translation.include.bb2"
00017888 <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
000178D8 <prefixtree.include.bb2@425> XINCLUDE "translation.include.bb2"
0001792E <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
0001799A <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
000179A2 <prefixtree.include.bb2@431> XINCLUDE "translation.include.bb2"
000179DC <prefixtree.include.bb2@433> XINCLUDE "translation.include.bb2"
00017A02 <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
00017A1A <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
00017A54 <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
00017A7E <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
00017A96 <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
00017ABA <prefixtree.include.bb2@440> XINCLUDE "translation.include.bb2"
00017B0E <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
00017B16 <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
00017B1C <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
00017B7E <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
00017BAA <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
00017BC6 <prefixtree.include.bb2@448> XINCLUDE "translation.include.bb2"
00017BD4 <prefixtree.include.bb2@450> XINCLUDE "translation.include.bb2"
00017BE2 <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
00017BF0 <prefixtree.include.bb2@453> XINCLUDE "translation.include.bb2"
00017BFE <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
00017C42 <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
00017CAE <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
00017CDC <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
00017CF0 <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
00017D22 <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
00017D6C <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
00017D7C <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
00017DB0 <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
00017DD2 <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
00017DE2 <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
00017DEA <prefixtree.include.bb2@467> XINCLUDE "translation.include.bb2"
00017E2E <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
00017E9A <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
00017EC8 <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
00017EEC <prefixtree.include.bb2@472> XINCLUDE "translation.include.bb2"
00017F30 <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
00017F9C <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
00017FCA <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
00017FF8 <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
00018000 <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
0001802E <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
000180A0 <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
000180A6 <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
000180D4 <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
00018146 <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
00018164 <prefixtree.include.bb2@485> XINCLUDE "translation.include.bb2"
00018188 <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
000181A0 <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
000181A6 <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
000181AC <prefixtree.include.bb2@491> XINCLUDE "translation.include.bb2"
000181AE <prefixtree.include.bb2@493> XINCLUDE "translation.include.bb2"
000181B8 <prefixtree.include.bb2@496> XINCLUDE "translation.include.bb2"
000181E4 <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
00018206 <prefixtree.include.bb2@515> XINCLUDE "translation.include.bb2"
0001820E <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
00018214 <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
00018222 <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
0001825C <prefixtree.include.bb2@520> XINCLUDE "translation.include.bb2"
00018282 <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
0001829A <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
000182D4 <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
000182FE <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
00018316 <prefixtree.include.bb2@526> XINCLUDE "translation.include.bb2"
0001832E <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
00018366 <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
0001836E <prefixtree.include.bb2@530> XINCLUDE "translation.include.bb2"
000183A8 <prefixtree.include.bb2@532> XINCLUDE "translation.include.bb2"
000183BA <prefixtree.include.bb2@534> XINCLUDE "translation.include.bb2"
000183E0 <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
000183F6 <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
0001841C <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
00018430 <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
00018448 <prefixtree.include.bb2@540> XINCLUDE "translation.include.bb2"
0001845A <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
00018464 <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
00018478 <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
00018492 <prefixtree.include.bb2@560> XINCLUDE "translation.include.bb2"
000184B0 <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
000184C2 <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
000184E0 <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
00018502 <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
0001851E <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
0001853E <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
00018548 <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
0001854E <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
00018558 <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
00018564 <prefixtree.include.bb2@571> XINCLUDE "translation.include.bb2"
0001856A <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
00018598 <prefixtree.include.bb2@591> XINCLUDE "translation.include.bb2"
000185C0 <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
00018600 <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
00018618 <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
0001865E <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
00018688 <prefixtree.include.bb2@598> XINCLUDE "translation.include.bb2"
000186B6 <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
000186D0 <prefixtree.include.bb2@815> XINCLUDE "translation.include.bb2"
000186D8 <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
000186F0 <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
000186FA <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
0001870C <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
00018744 <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
00018752 <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
0001875E <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
0001877A <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
0001879C <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
000187BE <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
000187E0 <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
00018802 <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
0001881E <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
0001883C <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
00018850 <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
00018856 <prefixtree.include.bb2@832> XINCLUDE "translation.include.bb2"
00018858 <prefixtree.include.bb2@834> XINCLUDE "translation.include.bb2"
0001885E <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
00018868 <prefixtree.include.bb2@837> XINCLUDE "translation.include.bb2"
0001886E <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
0001888C <prefixtree.include.bb2@856> XINCLUDE "translation.include.bb2"
00018892 <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
000188B6 <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
000188D4 <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
00018902 <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
00018930 <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
0001895E <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
0001898C <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
000189C0 <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
000189D0 <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
000189DA <prefixtree.include.bb2@867> XINCLUDE "translation.include.bb2"
000189E0 <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
000189E0 <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
00018A2A <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
00018A4A <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
00018A54 <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
00018A68 <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
00018AAE <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
00018AF4 <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
00018B3A <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
00018B44 <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
00018B60 <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
00018B8A <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
00018C08 <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
00018C86 <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
00018D04 <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
00018D82 <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
00018E00 <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
00018E7E <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
00018EFC <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
00018F7A <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
00018FF8 <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
00019076 <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
000190FA <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
0001912A <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
00019186 <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
000191B2 <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
0001927C <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
0001928A <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
000192C8 <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
0001934C <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
00019376 <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
00019394 <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
000193AE <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
000193B8 <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
000193C4 <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
000193D4 <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
000193E4 <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
000193F4 <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
00019404 <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
00019408 <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
00019446 <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
0001949E <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
000194FA <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
00019584 <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
00019602 <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
0001961C <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
0001964A <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
00019686 <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
00019754 <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
00019822 <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
0001986E <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
000198EC <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
0001996A <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
000199C8 <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
00019A5E <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
00019A96 <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
00019AF4 <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
00019B7C <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
00019B84 <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
00019BEE <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
00019C5A <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
00019C98 <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
00019D20 <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00019D4C <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00019DA8 <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00019E70 <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00019ED4 <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00019EDA <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00019F0E <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00019FDC <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
0001A0AA <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
0001A0D4 <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
0001A0F2 <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
0001A120 <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
0001A15C <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
0001A1CC <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
0001A1D4 <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
0001A226 <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
0001A24E <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
0001A266 <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
0001A31A <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
0001A328 <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
0001A37E <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
0001A3DC <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
0001A3E2 <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
0001A466 <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
0001A4EA <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
0001A56E <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
0001A5EC <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
0001A66A <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
0001A6E8 <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
0001A766 <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
0001A7E4 <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
0001A862 <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
0001A8E0 <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
0001A90A <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
0001A928 <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
0001A956 <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
0001A99A <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
0001A9A0 <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
0001A9BA <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
0001A9D6 <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
0001AA0A <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
0001AA2E <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
0001AA56 <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
0001AAC2 <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
0001AB20 <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
0001AB7E <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
0001ABCA <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
0001AC24 <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
0001AC2A <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
0001AC30 <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
0001AC3A <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
0001AC44 <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
0001AC5E <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
0001AC8C <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
0001AC92 <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
0001ACD6 <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
0001ACF0 <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
0001AD00 <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
0001AD0A <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
0001AD16 <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
0001AD20 <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
0001AD44 <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
0001AD8C <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
0001ADD4 <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
0001AE1C <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
0001AE32 <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
0001AE46 <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
0001AE50 <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
0001AE5A <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
0001AE74 <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
0001AE9E <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
0001AEE2 <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
0001AEFC <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
0001AF5A <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
0001AF74 <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
0001AF8C <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
0001AF96 <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
0001AFB2 <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
0001AFC0 <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
0001AFCC <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
0001B018 <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
0001B06A <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
0001B0BC <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
0001B0D0 <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
0001B0E0 <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
0001B0E6 <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
0001B0E8 <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
0001B0EE <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
0001B0F8 <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
0001B102 <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
0001B11C <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
0001B146 <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
0001B15C <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
0001B166 <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
0001B1DE <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
0001B21A <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
0001B22A <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
0001B24A <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
0001B26A <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
0001B28A <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
0001B2C0 <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
0001B2E8 <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
0001B320 <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
0001B384 <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
0001B3A4 <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
0001B420 <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
0001B458 <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
0001B4CE <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
0001B4EE <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
0001B56A <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
0001B5A2 <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
0001B618 <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
0001B638 <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
0001B6B4 <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
0001B6E0 <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
0001B6E8 <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
0001B72E <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
0001B74E <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
0001B758 <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
0001B770 <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
0001B780 <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
0001B7B8 <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
0001B7EA <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
0001B7FC <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
0001B87E <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
0001B888 <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
0001B8BA <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
0001B8EC <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
0001B918 <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
0001B944 <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
0001B966 <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
0001B970 <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
0001B98A <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
0001B98A <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
0001B9A0 <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
0001B9BC <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
0001B9BE <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
0001B9EC <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
0001B9EC <AmiBlitz3.ab2@96> XINCLUDE "translation.include.bb2"
0001B9EC <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
0001BA06 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
0001BA10 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
0001BA32 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
0001BA4A <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
0001BA64 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
0001BA96 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
0001BAA0 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
0001BAA6 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
0001BAB8 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
0001BB20 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
0001BB26 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
0001BB54 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
0001BB5E <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
0001BB64 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
0001BB7A <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
0001BB84 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
0001BB9C <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
0001BB9E <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
0001BBCC <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
0001BBE6 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
0001BBFC <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
0001BC30 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
0001BC34 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
0001BC4E <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
0001BC64 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
0001BC98 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
0001BC9C <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
0001BCB6 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
0001BCCC <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
0001BD00 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
0001BD04 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
0001BD1E <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
0001BD34 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
0001BD68 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
0001BD6C <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
0001BD86 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
0001BD9C <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
0001BDD0 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
0001BDD4 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
0001BDD4 <AmiBlitz3.ab2@97> XINCLUDE "/Shared/ted.include.ab3"
0001BDD4 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
0001BDEA <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
0001BE00 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
0001BE0E <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
0001BE1C <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
0001BE26 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
0001BE38 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
0001BE4A <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
0001BE50 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
0001BE7E <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
0001BE82 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
0001BE98 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
0001BEAE <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
0001BEBA <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
0001BEC6 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
0001BECE <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
0001BED6 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
0001BEDA <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
0001BF04 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
0001BF30 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
0001BF42 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
0001BF5A <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
0001BF70 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
0001BF76 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
0001BFAC <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
0001BFE4 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
0001C01C <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
0001C054 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
0001C08C <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
0001C0C4 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
0001C0FC <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001C134 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
0001C16C <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
0001C1A4 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
0001C1DC <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001C214 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
0001C24C <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
0001C256 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001C260 <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
0001C26A <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001C27E <CLIModeSupport.ab3@79> XINCLUDE "CLIModeSupport.ab3"
0001C2BA <CLIModeSupport.ab3@80> XINCLUDE "CLIModeSupport.ab3"
0001C2F6 <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
0001C332 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
0001C36E <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
0001C3AA <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
0001C3B0 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
0001C3DE <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
0001C408 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
0001C412 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
0001C416 <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
0001C44A <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001C450 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001C47E <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
0001C484 <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
0001C49A <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
0001C4A4 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
0001C4AA <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
0001C4C0 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
0001C4C6 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
0001C504 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
0001C508 <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
0001C512 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
0001C514 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
0001C548 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
0001C558 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001C55E <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
0001C568 <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
0001C56E <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
0001C584 <CLIModeSupport.ab3@123> XINCLUDE "CLIModeSupport.ab3"
0001C5C2 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
0001C5C6 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
0001C5CE <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
0001C60C <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
0001C60E <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001C612 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
0001C650 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
0001C654 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
0001C692 <CLIModeSupport.ab3@134> XINCLUDE "CLIModeSupport.ab3"
0001C696 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
0001C6C0 <CLIModeSupport.ab3@137> XINCLUDE "CLIModeSupport.ab3"
0001C6CA <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
0001C6DE <CLIModeSupport.ab3@139> XINCLUDE "CLIModeSupport.ab3"
0001C704 <CLIModeSupport.ab3@140> XINCLUDE "CLIModeSupport.ab3"
0001C70A <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
0001C718 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
0001C71E <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
0001C756 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
0001C75A <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
0001C784 <CLIModeSupport.ab3@151> XINCLUDE "CLIModeSupport.ab3"
0001C78A <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
0001C7AA <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
0001C7B4 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
0001C7B8 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
0001C7BA <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
0001C7D8 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
0001C7DA <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
0001C7E0 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
0001C7E6 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001C810 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001C812 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
0001C840 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
0001C844 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
0001C872 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
0001C876 <CLIModeSupport.ab3@167> XINCLUDE "CLIModeSupport.ab3"
0001C89C <CLIModeSupport.ab3@169> XINCLUDE "CLIModeSupport.ab3"
0001C8AC <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
0001C8B2 <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
0001C8B8 <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
0001C8E6 <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
0001C8F0 <CLIModeSupport.ab3@175> XINCLUDE "CLIModeSupport.ab3"
0001C90A <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
0001C928 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
0001C930 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
0001C936 <CLIModeSupport.ab3@190> XINCLUDE "CLIModeSupport.ab3"
0001C93C <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
0001C95E <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001C976 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
0001C99C <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
0001C9C6 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0001C9D4 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
0001C9DA <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
0001C9EE <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001CA06 <CLIModeSupport.ab3@201> XINCLUDE "CLIModeSupport.ab3"
0001CA14 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
0001CA28 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0001CA5E <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
0001CA6C <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
0001CA9C <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001CAAA <CLIModeSupport.ab3@207> XINCLUDE "CLIModeSupport.ab3"
0001CAB0 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
0001CABE <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001CAC4 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0001CACA <CLIModeSupport.ab3@212> XINCLUDE "CLIModeSupport.ab3"
0001CAD8 <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
0001CADA <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
0001CAE0 <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
0001CAF6 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
0001CB00 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0001CB06 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
0001CB30 <CLIModeSupport.ab3@224> XINCLUDE "CLIModeSupport.ab3"
0001CB6E <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
0001CB72 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
0001CBB0 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
0001CBB4 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
0001CBF2 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
0001CBF6 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
0001CBFE <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
0001CC06 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
0001CC4A <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
0001CC5C <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
0001CC6A <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
0001CC9E <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
0001CCC2 <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
0001CCCC <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
0001CCE6 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
0001CCFA <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
0001CD52 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
0001CDF2 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
0001CDFA <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
0001CE32 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
0001CE38 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
0001CE48 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
0001CE70 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
0001CE98 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
0001CEA0 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
0001CEA6 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
0001CEAE <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
0001CED6 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
0001CEDE <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
0001CEE6 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
0001CEEC <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
0001CEF2 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
0001CEF8 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
0001CEFE <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
0001CF04 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
0001CF0A <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
0001CF10 <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
0001CF16 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
0001CF1E <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
0001CF26 <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
0001CF4E <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
0001CF54 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
0001CF5A <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
0001CF62 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
0001CF82 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
0001CF92 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
0001CFA2 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
0001CFB2 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
0001CFC2 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
0001CFD2 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
0001CFE2 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
0001CFF2 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
0001D002 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
0001D012 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
0001D022 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
0001D032 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
0001D042 <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
0001D052 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
0001D062 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
0001D072 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
0001D082 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
0001D094 <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
0001D0A6 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
0001D0B8 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
0001D0CA <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
0001D0DC <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
0001D0EE <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
0001D100 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
0001D112 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
0001D146 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
0001D15E <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
0001D1AA <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
0001D1BC <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
0001D212 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
0001D284 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
0001D28A <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
0001D2BE <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
0001D2E6 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
0001D30E <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
0001D348 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
0001D360 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
0001D3E4 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
0001D3FE <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0001D44C <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
0001D45C <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
0001D464 <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
0001D478 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
0001D4BE <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
0001D4C4 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
0001D50E <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001D578 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0001D5DE <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
0001D612 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
0001D63E <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
0001D68C <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
0001D6B0 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
0001D6B6 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
0001D6C4 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001D722 <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
0001D780 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001D7AA <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
0001D7B4 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
0001D7BC <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001D7FA <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
0001D846 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001D858 <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
0001D8AE <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
0001D926 <CLIModeSupport.ab3@352> XINCLUDE "CLIModeSupport.ab3"
0001D92C <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
0001D960 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
0001D988 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
0001D9BE <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
0001D9CC <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
0001D9DA <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
0001DA42 <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
0001DA48 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
0001DA92 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
0001DADC <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
0001DB0C <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
0001DB36 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
0001DB88 <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
0001DBDE <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
0001DC2E <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
0001DC94 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
0001DD00 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
0001DD2C <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
0001DD5C <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
0001DDD8 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
0001DE08 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
0001DE38 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
0001DE68 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
0001DE98 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
0001DEC8 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
0001DEF8 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
0001DF28 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
0001DF58 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
0001DF88 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
0001DFB8 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
0001E034 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
0001E066 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
0001E098 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
0001E0C8 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
0001E0CE <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
0001E142 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
0001E1AE <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0001E1C0 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
0001E1EE <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
0001E216 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
0001E22A <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
0001E254 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
0001E298 <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
0001E2A8 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
0001E2B8 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
0001E2BE <CLIModeSupport.ab3@400> XINCLUDE "CLIModeSupport.ab3"
0001E2CE <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
0001E2DC <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
0001E2E6 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
0001E31E <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
0001E356 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001E38E <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001E39E <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
0001E406 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001E43E <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
0001E44E <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001E45E <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
0001E4C6 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
0001E52E <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
0001E596 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0001E5FE <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
0001E666 <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
0001E6CE <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
0001E736 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0001E79E <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
0001E7AE <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
0001E7E6 <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
0001E820 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001E85A <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
0001E892 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
0001E8B8 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
0001E8C0 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
0001E8C8 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
0001E8D0 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0001E8D8 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
0001E8EC <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001E91A <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
0001E934 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
0001E942 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001E9AE <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
0001E9D4 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
0001E9F0 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
0001E9FA <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
0001EA04 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
0001EA10 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
0001EA1E <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
0001EA2A <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
0001EA66 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
0001EA80 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
0001EA8E <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
0001EAAE <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
0001EABC <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
0001EACA <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
0001EAD0 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
0001EAE0 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
0001EAE4 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
0001EB18 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
0001EB4C <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
0001EB50 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
0001EB84 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
0001EB88 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
0001EBBC <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
0001EBC2 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
0001EBF8 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
0001EC2E <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
0001EC64 <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
0001EC9C <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
0001ECD4 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
0001ED74 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
0001EDB4 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
0001EDEC <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
0001EE0A <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
0001EE0E <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
0001EE14 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
0001EE1A <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
0001EE1E <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
0001EE48 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
0001EE5C <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
0001EE9A <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
0001EECE <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
0001EF04 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
0001EF5C <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
0001EF8A <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
0001EF8E <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
0001EFC4 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
0001EFF2 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
0001F020 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
0001F024 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
0001F05A <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
0001F088 <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
0001F08C <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
0001F0F0 <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
0001F0F6 <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
0001F124 <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
0001F12E <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
0001F138 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
0001F152 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
0001F17C <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
0001F182 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
0001F1A2 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
0001F1AC <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
0001F1B0 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
0001F1B2 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
0001F1D0 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
0001F1D2 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
0001F1D8 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
0001F1DE <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
0001F208 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
0001F20A <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
0001F238 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
0001F23C <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
0001F26A <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001F26E <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001F294 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
0001F2A4 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
0001F2AA <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
0001F2B0 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
0001F2DE <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
0001F2E8 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
0001F302 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
0001F318 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
0001F342 <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
0001F370 <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
0001F384 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0001F3C0 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
0001F3FC <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
0001F438 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
0001F474 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
0001F4B0 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
0001F4B6 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0001F4E4 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
0001F4E6 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
0001F504 <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
0001F50A <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
0001F534 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
0001F536 <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
0001F548 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
0001F57A <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
0001F584 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
0001F5EE <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
0001F658 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
0001F6C2 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
0001F72C <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
0001F796 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
0001F800 <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
0001F806 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
0001F870 <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
0001F8DA <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0001F8E4 <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
0001F94E <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
0001F956 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
0001F984 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
0001F988 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
0001F9B0 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
0001F9B6 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
0001F9BC <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
0001F9C2 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
0001F9C8 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
0001F9CE <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
0001F9D8 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001F9E2 <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
0001FA10 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
0001FA3C <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
0001FA44 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
0001FA78 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001FA8A <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0001FAF0 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001FB56 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001FB5C <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001FB64 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
0001FB66 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
0001FB84 <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
0001FBC2 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
0001FC00 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
0001FC06 <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
0001FC0C <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
0001FC12 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
0001FC1C <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
0001FC22 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
0001FC28 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
0001FC2E <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
0001FC38 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
0001FC3C <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
0001FC66 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
0001FC68 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
0001FC6E <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
0001FC72 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
0001FC78 <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
0001FC7C <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
0001FCD6 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
0001FCE8 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
0001FD14 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
0001FDBA <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
0001FDD8 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
0001FDDE <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
0001FE08 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
0001FE12 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
0001FE44 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
0001FE5E <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
0001FE72 <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
0001FE7C <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
0001FE96 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
0001FEC0 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
0001FEE4 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
0001FF22 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
0001FF26 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
0001FF64 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
0001FF68 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
0001FFA6 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
0001FFE4 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
0001FFE6 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
0002001A <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
00020020 <CLIModeSupport.ab3@691> XINCLUDE "CLIModeSupport.ab3"
00020064 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00020076 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
0002007E <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00020084 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
0002008E <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
0002009C <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
000200A2 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
000200CA <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
000200E4 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
000200EE <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
000200F4 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00020112 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
0002011C <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00020122 <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00020128 <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00020132 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00020140 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00020146 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00020156 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00020182 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00020198 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
000201A2 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
000201A8 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00020200 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0002026E <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
00020286 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
0002028C <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
000202C4 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
000202F2 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
0002031C <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00020326 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
0002034E <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00020378 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
0002041A <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00020428 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00020478 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00020488 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00020550 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00020584 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
000205B8 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
000205EC <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00020620 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00020654 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00020688 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
000206BC <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000206F0 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000206F2 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00020730 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00020734 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
00020772 <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
000207B0 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
000207B2 <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
000207B8 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
000207BC <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
000207BE <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
000207FC <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
0002083A <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
0002083C <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
0002083E <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00020840 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
00020846 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
0002084A <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0002085A <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
00020872 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
0002088A <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
000208A2 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000208CC <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000208F6 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00020924 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00020928 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00020950 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00020952 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
00020990 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00020994 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
000209D2 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
000209D6 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00020A14 <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
00020A18 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00020A3E <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00020A64 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
00020A8A <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
00020AB0 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00020AD6 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00020B2C <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00020B82 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00020BD0 <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00020C26 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00020C4C <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00020C72 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00020C98 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00020CEE <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00020D3C <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00020DF6 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00020E4C <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00020E72 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00020E98 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00020EBE <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00020F14 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00020F6A <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00020FB8 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00021006 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00021054 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
000210A2 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
000210F0 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
0002113E <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
0002118C <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
000211B2 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
000211D8 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
000211FE <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
0002124C <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
0002129A <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
000212F0 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
0002133E <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
0002138C <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
000213DA <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00021400 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00021426 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
0002144C <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00021484 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
000214AC <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
000214C0 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00021534 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
0002157A <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00021628 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00021694 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
000216A4 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
000216CA <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
000216D4 <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
000216FE <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00021704 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00021714 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
000217B4 <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
000217F4 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
000217FA <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00021850 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
0002185A <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
00021864 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
0002187E <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
000218A0 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
000218C2 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
0002191C <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0002193E <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00021998 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
000219DA <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
000219E0 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
000219EE <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
000219F4 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
00021A08 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
00021A12 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
00021A8C <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00021A96 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00021A9C <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00021AB0 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00021ABA <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00021B3A <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00021B44 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00021B4A <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00021B5E <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00021B68 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00021BB0 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00021BBA <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00021BC0 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00021BD4 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00021BDE <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00021C26 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00021C30 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00021C36 <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00021C4A <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
00021C70 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
00021C84 <CLIModeSupport.ab3@953> XINCLUDE "CLIModeSupport.ab3"
00021CAA <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
00021CBE <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
00021CE4 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00021CF8 <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00021D02 <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
00021D30 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
00021D80 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
00021DA0 <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
00021DB8 <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00021E9C <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00021EA6 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00021EAC <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00021EAE <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00021EC2 <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00021EF4 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00021EFA <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00021F3E <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00021F50 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00021F62 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00021F6C <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00021F72 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00021F7C <CLIModeSupport.ab3@983> XINCLUDE "CLIModeSupport.ab3"
00021F96 <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00021F96 <AmiBlitz3.ab2@98> XINCLUDE "CLIModeSupport.ab3"
00022016 <AmiBlitz3.ab2@103> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0002204E <AmiBlitz3.ab2@104> If dynassign <> ""
00022064 <AmiBlitz3.ab2@105>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0002206E <AmiBlitz3.ab2@106>     If *AssignSema
0002207E <AmiBlitz3.ab2@107>       ObtainSemaphoreShared_ *AssignSema
00022084 <AmiBlitz3.ab2@108>     Else                                                        ; no, create one...
000220A4 <AmiBlitz3.ab2@109>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
000220AE <AmiBlitz3.ab2@110>       If *AssignSema
000220BE <AmiBlitz3.ab2@111>         InitSemaphore_ *AssignSema
000220F2 <AmiBlitz3.ab2@113>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
00022104 <AmiBlitz3.ab2@114>         If *AssignSema\ss_Link\ln_Name
00022140 <AmiBlitz3.ab2@115>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0002214C <AmiBlitz3.ab2@117>         *AssignSema\ss_Link\ln_Pri  = 1
00022158 <AmiBlitz3.ab2@118>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
00022168 <AmiBlitz3.ab2@120>         AddSemaphore_ *AssignSema
00022178 <AmiBlitz3.ab2@121>         ObtainSemaphoreShared_ *AssignSema
000221C4 <AmiBlitz3.ab2@127>   mydir.s = dos_GetProgDir{"Sys:"}
00022224 <AmiBlitz3.ab2@128>   If dos_SetAssign{dynassign,mydir,False}
000222B8 <AmiBlitz3.ab2@129>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
000222F0 <AmiBlitz3.ab2@132>   Poke$ ?str_blitz3assign,dynassign
00022372 <AmiBlitz3.ab2@133>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
000223F4 <AmiBlitz3.ab2@136>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
00022476 <AmiBlitz3.ab2@137>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
000224F8 <AmiBlitz3.ab2@138>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0002257A <AmiBlitz3.ab2@139>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
000225EE <AmiBlitz3.ab2@140>   my_systemdir$    = dos_AddPart{dynassign, "System"}
00022662 <AmiBlitz3.ab2@141>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
000226D6 <AmiBlitz3.ab2@142>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
00022704 <AmiBlitz3.ab2@143>   dos_CreateDir{my_blitzlibsdir$}
00022728 <AmiBlitz3.ab2@144>   dos_CreateDir{Peek$(?str_path_userlibs)}
00022756 <AmiBlitz3.ab2@145>   dos_CreateDir{my_residentsdir$}
00022784 <AmiBlitz3.ab2@146>   dos_CreateDir{my_systemdir$}
0002284E <AmiBlitz3.ab2@152> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
00022886 <AmiBlitz3.ab2@153> Poke.s ?str_pedfile,pedfile$
000228C4 <AmiBlitz3.ab2@155> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
000228D4 <AmiBlitz3.ab2@156>   Poke.b ?start_without_libs,1
000228DA <AmiBlitz3.ab2@157> Else
000228EA <AmiBlitz3.ab2@158>   Poke.b ?start_without_libs,0
00022910 <AmiBlitz3.ab2@161> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
00022938 <AmiBlitz3.ab2@164> errorout.s = ""                                            ; for the error text
0002293E <AmiBlitz3.ab2@165> ende.b     =  False                                        ; abort indicater
00022976 <AmiBlitz3.ab2@167> If dos_CheckLib{"wizard.library",42} = False               ; needed for Compiler, PED and REDDebugger
000229BC <AmiBlitz3.ab2@168>   errorout + "Missing wizard.library:\\nThis library is required in version 42 by this IDE.\\n\\n"
000229C2 <AmiBlitz3.ab2@169>   ende = True
000229FA <AmiBlitz3.ab2@172> If dos_CheckLib{"reqtools.library",38} = False             ; needed for PED and REDDebugger
00022A40 <AmiBlitz3.ab2@173>   errorout + "Missing reqtools.library:\\nThis library is required in version 38 by the IDE.\\n\\n"
00022A46 <AmiBlitz3.ab2@174>   ende = True
00022A7E <AmiBlitz3.ab2@177> If dos_CheckLib{"ted.library",1} = False                   ; needed for PED and REDDebugger
00022AC4 <AmiBlitz3.ab2@178>   errorout + "Missing ted.library:\\nThis library is required in version 1 by the IDE.\\n\\n"
00022ACA <AmiBlitz3.ab2@179>   ende = True
00022B02 <AmiBlitz3.ab2@182> If dos_CheckLib{"disassembler.library",40} = False         ; only needed for REDDebugger
00022B48 <AmiBlitz3.ab2@183> 
00022B80 <AmiBlitz3.ab2@186> If errorout <> ""                                          ; check if something to show
00022BC6 <AmiBlitz3.ab2@187>    errorout = "Please reinstall AmiBlitz3 or install the librarys in LIBS:\\n\\n"+errorout
00022BD4 <AmiBlitz3.ab2@188>    If ende
00022C1A <AmiBlitz3.ab2@189>      errorout + "...that the IDE can Start!"               ; for abort
00022C20 <AmiBlitz3.ab2@190>    Else
00022C66 <AmiBlitz3.ab2@191>      errorout + "...for a full working IDE!"               ; for limited start
00022CC8 <AmiBlitz3.ab2@193>    error{!TRANS{errorout}}
00022CD4 <AmiBlitz3.ab2@196> dbg_fid.l = -1 ; no debug file id yet!
00022CE8 <AmiBlitz3.ab2@200> If ende Then Goto abnormal_exit                            ; remove Assigns
00022CF2 <AmiBlitz3.ab2@203> If CLIMode
00022CF8 <AmiBlitz3.ab2@206>   err.l      = False                                       ; indicate that an error has occured
00022CFE <AmiBlitz3.ab2@207>   showhelp.l = False                                       ; show the CLI tool's help
00022D56 <AmiBlitz3.ab2@210>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
00022D7E <AmiBlitz3.ab2@211>   cli_sourcefile.s   = ""
00022DA6 <AmiBlitz3.ab2@212>   cli_exefile.s      = ""
00022DCE <AmiBlitz3.ab2@213>   cli_savefile.s     = ""
00022DF6 <AmiBlitz3.ab2@214>   cli_dumpfile.s     = ""
00022E1E <AmiBlitz3.ab2@215>   cli_includepath.s  = ""
00022E46 <AmiBlitz3.ab2@216>   cli_blitzlibpath.s = ""
00022E4C <AmiBlitz3.ab2@217>   cli_debuginfo.l    = False
00022E52 <AmiBlitz3.ab2@218>   cli_run.l          = False
00022E5A <AmiBlitz3.ab2@219>   cli_dumpflags.l    = $FFFFFFFF
00022E82 <AmiBlitz3.ab2@220>   cli_info.s         = ""
00022E88 <AmiBlitz3.ab2@221>   cli_release.l      = False
00022E92 <AmiBlitz3.ab2@222>   cli_numargs.l      = dos_GetNumArgs{}
00022E98 <AmiBlitz3.ab2@223>   cli_gui.l          = False
00022EA0 <AmiBlitz3.ab2@224>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
00022EA8 <AmiBlitz3.ab2@225>   cli_verbose.l      = 1
00022EC0 <AmiBlitz3.ab2@226>   If cli_numargs=0 Then showhelp=True
00022EF0 <AmiBlitz3.ab2@230>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
00022F3C <AmiBlitz3.ab2@231>     larg.s = LCase$(arg)                                   ; lower case the option string
00023004 <AmiBlitz3.ab2@232>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0002303A <AmiBlitz3.ab2@233>     Select larg
00023086 <AmiBlitz3.ab2@234>       Case "s" : larg="source"
000230D8 <AmiBlitz3.ab2@235>       Case "e" : larg="exe"
0002312A <AmiBlitz3.ab2@236>       Case "d" : larg="debug"
0002317C <AmiBlitz3.ab2@237>       Case "r" : larg="release"
000231CE <AmiBlitz3.ab2@238>       Case "h" : larg="help"
00023220 <AmiBlitz3.ab2@239>       Case "v" : larg="verbose"
0002322E <AmiBlitz3.ab2@240>     End Select
00023264 <AmiBlitz3.ab2@242>     Select larg
000232B8 <AmiBlitz3.ab2@243>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
00023312 <AmiBlitz3.ab2@244>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0002336C <AmiBlitz3.ab2@245>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0002339C <AmiBlitz3.ab2@246>       Case "debug"    : cli_debuginfo   = True
000233CC <AmiBlitz3.ab2@247>       Case "run"      : cli_run         = True
000233FC <AmiBlitz3.ab2@248>       Case "release"  : cli_release     = True
0002342C <AmiBlitz3.ab2@249>       Case "ped"      : cli_gui         = True
00023486 <AmiBlitz3.ab2@250>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
000234F8 <AmiBlitz3.ab2@251>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
00023528 <AmiBlitz3.ab2@252>                         cli_dumpfile    = dos_GetNextArg{}
00023530 <AmiBlitz3.ab2@253>                         cli_dumpflags   = $0
00023590 <AmiBlitz3.ab2@254>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
000235F0 <AmiBlitz3.ab2@255>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
00023650 <AmiBlitz3.ab2@256>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
000236B0 <AmiBlitz3.ab2@257>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
00023710 <AmiBlitz3.ab2@258>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
00023770 <AmiBlitz3.ab2@259>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
000237D0 <AmiBlitz3.ab2@260>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
00023830 <AmiBlitz3.ab2@261>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
00023890 <AmiBlitz3.ab2@262>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
000238A2 <AmiBlitz3.ab2@263>                         If cli_dumpflags = $0
000238A8 <AmiBlitz3.ab2@264>                          err=True
0002393C <AmiBlitz3.ab2@265>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
00023996 <AmiBlitz3.ab2@267>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
000239C6 <AmiBlitz3.ab2@268>       Case "h"        : showhelp        = True             ; show the help and quit
000239CC <AmiBlitz3.ab2@269>       Default
00023A04 <AmiBlitz3.ab2@270>         If arg><""
00023A98 <AmiBlitz3.ab2@271>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
00023A9E <AmiBlitz3.ab2@272>           err = True
00023AAC <AmiBlitz3.ab2@274>     End Select
00023AF8 <AmiBlitz3.ab2@275>   Until arg = "" OR err=True          ; until we processed all arguments
00023B1A <AmiBlitz3.ab2@278>   If err><False OR showhelp = True
00023B24 <AmiBlitz3.ab2@279>     If showhelp
00023B86 <AmiBlitz3.ab2@280>     NPrint "AmiBlitz ",Peek.s(?myversion)
00023BBE <AmiBlitz3.ab2@281>     NPrint "\\nSyntax: AmiBlitz3 [options]"
00023BF6 <AmiBlitz3.ab2@282>     NPrint "\\nOptions:"
00023C2E <AmiBlitz3.ab2@283>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
00023C66 <AmiBlitz3.ab2@284>     NPrint "  -(e)xe <file>       : output executable filename"
00023C9E <AmiBlitz3.ab2@285>     NPrint "  -(d)ebug            : compile with debug info"
00023CD6 <AmiBlitz3.ab2@286>     NPrint "  -(r)elease          : create release executable (size optimized)"
00023D0E <AmiBlitz3.ab2@287>     NPrint "  -run                : run compiled program"
00023D46 <AmiBlitz3.ab2@288>     NPrint "  -dump <info> <file> : dump compiler internals to file"
00023D7E <AmiBlitz3.ab2@289>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
00023DB6 <AmiBlitz3.ab2@290>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
00023DEE <AmiBlitz3.ab2@291>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
00023E26 <AmiBlitz3.ab2@292>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
00023E5E <AmiBlitz3.ab2@293>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
00023E96 <AmiBlitz3.ab2@294>     NPrint "  -(h)elp             : show this help"
00023ECE <AmiBlitz3.ab2@295>     NPrint "\\nExample:"
00023F06 <AmiBlitz3.ab2@296>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
00023F3E <AmiBlitz3.ab2@297>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
00023F44 <AmiBlitz3.ab2@300>     Goto abnormal_exit
00023F60 <AmiBlitz3.ab2@303>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
00023FC4 <AmiBlitz3.ab2@304>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
00023FD4 <AmiBlitz3.ab2@307> Poke.l ?CLIMode,CLIMode
00023FF8 <AmiBlitz3.ab2@337>   Dim incdim.s (#maxincludes)
0002401C <AmiBlitz3.ab2@338>   Dim incline.l(#maxincludes)
00024046 <AmiBlitz3.ab2@604> Statement activategadget{ag$}                              ;ag$ = gadget
0002409A <AmiBlitz3.ab2@605>   ActivateGadget_ WZGadAddr (ag$),WZWindowAddr,0
000240B2 <AmiBlitz3.ab2@606> End Statement
000240CC <AmiBlitz3.ab2@608> Function.s Get_Libinfo{addr_libnum.l}
000240D8 <AmiBlitz3.ab2@610>   lib_ab2.b = False : lib_os.b = False
000240DE <AmiBlitz3.ab2@611>   addr_counter.l = addr_libnum
000240E6 <AmiBlitz3.ab2@612>   skip.l = 0
000240F8 <AmiBlitz3.ab2@613>   If addr_counter=0
00024126 <AmiBlitz3.ab2@614>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
00024144 <AmiBlitz3.ab2@615>     Function Return ""
00024152 <AmiBlitz3.ab2@620>     mem.l = Peek.l(addr_counter)
00024160 <AmiBlitz3.ab2@625>     addr_counter + 2
00024180 <AmiBlitz3.ab2@626>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0002419A <AmiBlitz3.ab2@627>     If (mem LSR 16) = $ffe2
000241A0 <AmiBlitz3.ab2@629>       lib_os = True
000241A8 <AmiBlitz3.ab2@630>       skip = 10
000241EE <AmiBlitz3.ab2@631>       If Peek$(addr_counter+skip) = "" Then skip + 4
00024232 <AmiBlitz3.ab2@633>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
00024248 <AmiBlitz3.ab2@635>   If (addr_counter>addr_libnum + $400)
00024266 <AmiBlitz3.ab2@637>     Function Return ""
0002426C <AmiBlitz3.ab2@638>   Else
00024290 <AmiBlitz3.ab2@639>     Function Return Peek$(addr_counter + skip)
0002429A <AmiBlitz3.ab2@641> End Function
000242B8 <AmiBlitz3.ab2@681>   !asm
000242BE <AmiBlitz3.ab2@682>   MOVEA.l _execbase,A6
000242C2 <AmiBlitz3.ab2@683>   MOVEM.l d0/a0,-(a7)
000242C4 <AmiBlitz3.ab2@685>   MOVEQ #127,d0
000242CA <AmiBlitz3.ab2@686>   LEA chartab,a0
000242D0 <AmiBlitz3.ab2@689>     MOVE.b #1,128(a0)
000242D2 <AmiBlitz3.ab2@690>     CLR.b (a0)+
000242D6 <AmiBlitz3.ab2@691>   DBF d0,'l12
000242DC <AmiBlitz3.ab2@693>   LEA chartab,a0
000242E0 <AmiBlitz3.ab2@694>   MOVE.b #1,(a0)
000242E6 <AmiBlitz3.ab2@695>   MOVE.b #1,","(a0)
000242EC <AmiBlitz3.ab2@696>   MOVE.b #1,";"(a0)
000242F2 <AmiBlitz3.ab2@697>   MOVE.b #1,":"(a0)
000242F8 <AmiBlitz3.ab2@698>   MOVE.b #1,"("(a0)
000242FE <AmiBlitz3.ab2@699>   MOVE.b #1,")"(a0)
00024304 <AmiBlitz3.ab2@700>   MOVE.b #1,"="(a0)
0002430A <AmiBlitz3.ab2@701>   MOVE.b #1,"+"(a0)
00024310 <AmiBlitz3.ab2@702>   MOVE.b #1,"-"(a0)
00024316 <AmiBlitz3.ab2@703>   MOVE.b #1,"*"(a0)
0002431C <AmiBlitz3.ab2@704>   MOVE.b #1,"/"(a0)
00024322 <AmiBlitz3.ab2@705>   MOVE.b #1,"$"(a0)
00024328 <AmiBlitz3.ab2@706>   MOVE.b #1,"%"(a0)
0002432E <AmiBlitz3.ab2@707>   MOVE.b #1,"."(a0)
00024334 <AmiBlitz3.ab2@708>   MOVE.b #1,"["(a0)
0002433A <AmiBlitz3.ab2@709>   MOVE.b #1,"]"(a0)
00024340 <AmiBlitz3.ab2@710>   MOVE.b #1,"{"(a0)
00024346 <AmiBlitz3.ab2@711>   MOVE.b #1,"}"(a0)
0002434C <AmiBlitz3.ab2@712>   MOVE.b #1,"\"(a0)
00024352 <AmiBlitz3.ab2@713>   MOVE.b #1,">"(a0)
00024358 <AmiBlitz3.ab2@714>   MOVE.b #1,"<"(a0)
0002435E <AmiBlitz3.ab2@715>   MOVE.b #1,"&"(a0)
00024364 <AmiBlitz3.ab2@716>   MOVE.b #1,"|"(a0)
0002436A <AmiBlitz3.ab2@717>   MOVE.b #1,"^"(a0)
00024370 <AmiBlitz3.ab2@718>   MOVE.b #1,$7e(a0)
00024376 <AmiBlitz3.ab2@719>   MOVE.w #$0101,1(a0)
0002437C <AmiBlitz3.ab2@721>   LEA instrtab,a0
00024382 <AmiBlitz3.ab2@722>   MOVE.l #labelhash-instrtab,d0
00024384 <AmiBlitz3.ab2@723>   ASR.l #2,d0
00024386 <AmiBlitz3.ab2@724>   SUBQ.l #1,d0
00024388 <AmiBlitz3.ab2@727>    CLR.l (a0)+
0002438A <AmiBlitz3.ab2@728>    SUBQ.l #1,d0
0002438E <AmiBlitz3.ab2@729>   BNE 'l10
00024394 <AmiBlitz3.ab2@731>   LEA allowtab,a0
0002439A <AmiBlitz3.ab2@732>   MOVE.l #255,d0
0002439C <AmiBlitz3.ab2@735>     CLR.b (a0)+
000243A0 <AmiBlitz3.ab2@736>   DBF d0,'la1
000243A6 <AmiBlitz3.ab2@738>   LEA allowtab,a0
000243AC <AmiBlitz3.ab2@739>   MOVE.b #1,$7d(a0)
000243B2 <AmiBlitz3.ab2@740>   MOVE.b #1,$7c(a0)
000243B8 <AmiBlitz3.ab2@741>   MOVE.b #1,$44(a0)
000243BE <AmiBlitz3.ab2@742>   MOVE.b #1,$45(a0)
000243C4 <AmiBlitz3.ab2@743>   MOVE.b #1,$b9(a0)
000243CA <AmiBlitz3.ab2@744>   MOVE.b #1,$89(a0)
000243D0 <AmiBlitz3.ab2@745>   MOVE.b #1,$ce(a0)
000243D6 <AmiBlitz3.ab2@746>   MOVE.b #1,$cf(a0)
000243DC <AmiBlitz3.ab2@747>   MOVE.b #1,$d0(a0)
000243E2 <AmiBlitz3.ab2@748>   MOVE.b #1,$cd(a0)
000243E4 <AmiBlitz3.ab2@749>   MOVEQ #0,d0
000243EA <AmiBlitz3.ab2@751>   MOVEA.l _execbase,a6
000243F0 <AmiBlitz3.ab2@756>   MOVE.l #$10000,d0
000243F6 <AmiBlitz3.ab2@757>   MOVE.l #80000,d1
000243F8 <AmiBlitz3.ab2@758>   MOVE.l d1,d2
000243FC <AmiBlitz3.ab2@759>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
00024402 <AmiBlitz3.ab2@760>   MOVE.l d0,mempool
00024406 <AmiBlitz3.ab2@761>   MOVEM.l (a7)+,d0/a0
0002440C <AmiBlitz3.ab2@762>   TST.l mempool
00024410 <AmiBlitz3.ab2@763>   BEQ shutdown_compiler
00024414 <AmiBlitz3.ab2@765>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0002441A <AmiBlitz3.ab2@766>   MOVE.l A4,ptr_ThisTask
0002441E <AmiBlitz3.ab2@768>   BSR.w open_doslibrary
00024422 <AmiBlitz3.ab2@769>   BEQ.w shutdown_compiler
00024428 <AmiBlitz3.ab2@771>   MOVE.l D2,stacksize
0002442A <AmiBlitz3.ab2@775>   MOVEQ.l #$00,D0
00024430 <AmiBlitz3.ab2@776>   LEA tokens,A0
00024432 <AmiBlitz3.ab2@779>     ADDQ.w #1,D0
00024434 <AmiBlitz3.ab2@780>     MOVE.l (A0),D1
00024438 <AmiBlitz3.ab2@781>     BEQ.w JL_0_2D1C
0002443A <AmiBlitz3.ab2@782>     MOVEA.l D1,A0
0002443E <AmiBlitz3.ab2@783> BRA.w JL_0_2D0E
00024444 <AmiBlitz3.ab2@786>   MOVE.l A0,end_of_tokenlist
00024448 <AmiBlitz3.ab2@788>   BSR.w makeasmtable
00024450 <AmiBlitz3.ab2@789>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
00024454 <AmiBlitz3.ab2@791>   BSR.w open_mathlibrary
00024458 <AmiBlitz3.ab2@792>   BEQ.w freemem_and_quit4
0002445E <AmiBlitz3.ab2@794>   MOVE.l constmaxpc,D0
00024460 <AmiBlitz3.ab2@795>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
00024466 <AmiBlitz3.ab2@796>   MOVEA.l _execbase,A6
0002446A <AmiBlitz3.ab2@797>   JSR _AllocMem(A6)                                        ;mem for branch routine
00024470 <AmiBlitz3.ab2@798>   MOVE.l D0,constpcat
00024474 <AmiBlitz3.ab2@799>   BEQ.w freemem_and_quit3
0002447A <AmiBlitz3.ab2@800>   ADD.l constmaxpc,D0
00024480 <AmiBlitz3.ab2@801>   MOVE.l D0,constlibat
00024486 <AmiBlitz3.ab2@803>   MOVE.l macrobuffer_size,D0
0002448C <AmiBlitz3.ab2@804>   CMP.l #40000,d0
00024490 <AmiBlitz3.ab2@805>   BGE 'ok
00024496 <AmiBlitz3.ab2@806>     MOVE.l #40000,d0
0002449C <AmiBlitz3.ab2@807>     MOVE.l d0,macrobuffer_size
0002449E <AmiBlitz3.ab2@810>   ADDQ.l #4,d0
000244A0 <AmiBlitz3.ab2@811>   MOVEQ.l #$01,D1
000244A6 <AmiBlitz3.ab2@812>   MOVEA.l _execbase,A6
000244AA <AmiBlitz3.ab2@813>   JSR _AllocMem(A6)                                        ;macro mem
000244AC <AmiBlitz3.ab2@814>   MOVE.l d0,a0
000244B2 <AmiBlitz3.ab2@815>   MOVE.l macrobuffer_size,(a0)+
000244B4 <AmiBlitz3.ab2@816>   MOVE.l a0,d0
000244BA <AmiBlitz3.ab2@817>   MOVE.l D0,ptr_macrobuffer_begin
000244BE <AmiBlitz3.ab2@818>   BEQ.w freemem_and_quit2
000244C4 <AmiBlitz3.ab2@819>   ADD.l macrobuffer_size,D0
000244CA <AmiBlitz3.ab2@820>   MOVE.l D0,ptr_macrobuffer_end
000244D0 <AmiBlitz3.ab2@822>   TST.l CLIMode
000244D4 <AmiBlitz3.ab2@823>   BEQ load_ped
000244FE <AmiBlitz3.ab2@826>   !basic
00024508 <AmiBlitz3.ab2@827>   succ.l = InitEmulatedPED{}
0002450C <AmiBlitz3.ab2@828>   GetD0 succ
0002452A <AmiBlitz3.ab2@829>   !asm
0002452C <AmiBlitz3.ab2@830>   TST.l d0
00024530 <AmiBlitz3.ab2@831>   BEQ freemem_and_quit
00024536 <AmiBlitz3.ab2@832> JMP skip_ped
0002453C <AmiBlitz3.ab2@837>   MOVE.l #str_pedfile,D1                                   ; Load PED
00024542 <AmiBlitz3.ab2@838>   MOVEA.l _dosbase,A6
00024546 <AmiBlitz3.ab2@839>   JSR _LoadSeg(A6)
0002454C <AmiBlitz3.ab2@840>   MOVE.l D0,ptr_seg_ped
00024550 <AmiBlitz3.ab2@841>   BEQ.w freemem_and_quit
00024552 <AmiBlitz3.ab2@845>   MOVEA.l D0,A2
00024554 <AmiBlitz3.ab2@846>   ADDA.l A2,A2
00024556 <AmiBlitz3.ab2@847>   ADDA.l A2,A2
0002455C <AmiBlitz3.ab2@849>   LEA teddata,a1                                           ;lea edstruct,A1
00024562 <AmiBlitz3.ab2@850>   MOVE.l #"TEDY",d1
00024566 <AmiBlitz3.ab2@851>   JSR 4(A2)                                                ; Run PED
0002456C <AmiBlitz3.ab2@853>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
00024572 <AmiBlitz3.ab2@854>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
000245B0 <AmiBlitz3.ab2@856>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
000245B4 <AmiBlitz3.ab2@857>   BEQ.w unload_ped
000245F2 <AmiBlitz3.ab2@861>   !ComData_GetL{comData_Magic,D0}
000245F8 <AmiBlitz3.ab2@862>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
000245FC <AmiBlitz3.ab2@863>   BNE unload_ped
00024634 <AmiBlitz3.ab2@866>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0002466C <AmiBlitz3.ab2@867>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
000246A4 <AmiBlitz3.ab2@868>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
000246DC <AmiBlitz3.ab2@869>   !ComData_SetL{comPtr_VarBase           ,#varbase }
00024714 <AmiBlitz3.ab2@870>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0002474C <AmiBlitz3.ab2@871>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
00024784 <AmiBlitz3.ab2@872>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
000247BC <AmiBlitz3.ab2@873>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
000247F4 <AmiBlitz3.ab2@874>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0002482C <AmiBlitz3.ab2@875>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
00024864 <AmiBlitz3.ab2@876>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0002489C <AmiBlitz3.ab2@877>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
000248A2 <AmiBlitz3.ab2@879>   CLR.w returncode_org
000248CC <AmiBlitz3.ab2@881>   !basic
000248D6 <AmiBlitz3.ab2@882>   If CLIMode
00024948 <AmiBlitz3.ab2@883>     If cli_verbose>=2 Then NPrint !TRANS{"Loading BlitzLibs."}
00024966 <AmiBlitz3.ab2@885>   !asm
0002496C <AmiBlitz3.ab2@889>   TST.b start_without_libs
00024970 <AmiBlitz3.ab2@890>   BNE skip_loading_libs
00024974 <AmiBlitz3.ab2@891>     BSR.w call_setpointerbusy
0002497E <AmiBlitz3.ab2@892>     MOVE.l #$FFFFffff,linenumat
00024982 <AmiBlitz3.ab2@893>     BSR.w get_libraries
00024988 <AmiBlitz3.ab2@894>     JSR init_libraries
0002498C <AmiBlitz3.ab2@895>     BSR.w init_buffers
00024990 <AmiBlitz3.ab2@896>     BSR.w call_setpointernormal
00024992 <AmiBlitz3.ab2@901>   MOVEQ.l #-$01,D0
00024998 <AmiBlitz3.ab2@902>   MOVEA.l _execbase,A6
0002499C <AmiBlitz3.ab2@903>   JSR _AllocSignal(A6)
000249A2 <AmiBlitz3.ab2@904>   MOVE.l D0,signalNum
000249A4 <AmiBlitz3.ab2@905>   MOVEQ.l #$00,D1
000249A6 <AmiBlitz3.ab2@906>   BSET D0,D1
000249AC <AmiBlitz3.ab2@907>   MOVE.l D1,signals
000249B2 <AmiBlitz3.ab2@911>   MOVE.l #str_defaultdbug,D1
000249B6 <AmiBlitz3.ab2@912>   MOVEA.l _dosbase(PC),A6
000249BA <AmiBlitz3.ab2@913>   JSR _LoadSeg(A6)
000249C0 <AmiBlitz3.ab2@914>   MOVE.l D0,ptr_seg_debugger
000249C2 <AmiBlitz3.ab2@915>   TST.l d0
000249C6 <AmiBlitz3.ab2@916>   BNE ok_12
000249F0 <AmiBlitz3.ab2@917>     !basic
00024A46 <AmiBlitz3.ab2@918>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
00024A64 <AmiBlitz3.ab2@919>     !asm
00024A6A <AmiBlitz3.ab2@922>   TST.l CLIMode
00024A6E <AmiBlitz3.ab2@923>   BEQ run_ped
00024A98 <AmiBlitz3.ab2@929>   !basic
00024A9E <AmiBlitz3.ab2@930>   err.l = False
00024ACA <AmiBlitz3.ab2@938>   If cli_sourcefile
00024AEA <AmiBlitz3.ab2@939>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
00024AF4 <AmiBlitz3.ab2@940>     If lock
00024B18 <AmiBlitz3.ab2@941>       NameFromLock_ lock,&cli_tempstr,1024
00024B42 <AmiBlitz3.ab2@942>       cli_sourcefile.s = Peek.s(&cli_tempstr)
00024B52 <AmiBlitz3.ab2@943>       UnLock_ lock
00024B7E <AmiBlitz3.ab2@946>     If cli_exefile
00024BD0 <AmiBlitz3.ab2@947>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
00024C28 <AmiBlitz3.ab2@948>       path.s = dos_PathPart{cli_exefile}
00024C48 <AmiBlitz3.ab2@949>       lock.l = Lock_(&path,#ACCESS_READ)
00024C52 <AmiBlitz3.ab2@950>       If lock
00024C76 <AmiBlitz3.ab2@951>         NameFromLock_ lock,&cli_tempstr,1024
00024CA0 <AmiBlitz3.ab2@952>         path.s = Peek.s(&cli_tempstr)
00024D4E <AmiBlitz3.ab2@953>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
00024D5E <AmiBlitz3.ab2@954>         UnLock_ lock
00024DA8 <AmiBlitz3.ab2@965>   If cli_verbose>=2 Then NPrint "Initializing token hashmap."
00024E1C <AmiBlitz3.ab2@966>   TokenHashMapFile.s = dos_AddPart{my_systemdir$,"TokenList.hashmap"}           ; replaced hardcode path  tomsmart1 2012 03 09
00024E26 <AmiBlitz3.ab2@967>   *PreProcessor.preprocessor = preproc_Create{}
00024E36 <AmiBlitz3.ab2@968>   Poke.l ?comPtr_PreProcessor,*PreProcessor
00024E68 <AmiBlitz3.ab2@969>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
00024E7C <AmiBlitz3.ab2@970>   If *PreProcessor\tokens=#NULL
00024EF6 <AmiBlitz3.ab2@971>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
00024F00 <AmiBlitz3.ab2@972>     preproc_QueryTokens{*PreProcessor}
00024F32 <AmiBlitz3.ab2@973>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
00024F7E <AmiBlitz3.ab2@981>   If cli_sourcefile><"" AND err=False
00025024 <AmiBlitz3.ab2@982>     If cli_verbose>=2 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22."
00025056 <AmiBlitz3.ab2@983>     succ=LoadSource{cli_sourcefile}
00025060 <AmiBlitz3.ab2@984>     If succ
00025098 <AmiBlitz3.ab2@985> 
00025112 <AmiBlitz3.ab2@986>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0002514C <AmiBlitz3.ab2@987>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
00025156 <AmiBlitz3.ab2@989>         If comerr
0002515C <AmiBlitz3.ab2@991>         Else
00025162 <AmiBlitz3.ab2@995>     Else
000251B2 <AmiBlitz3.ab2@996>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
000251FE <AmiBlitz3.ab2@1000>   If cli_savefile><"" AND err=False
00025266 <AmiBlitz3.ab2@1001>     If cli_verbose>=2 Then NPrint "Saving Sourcefiles as "+cli_savefile
00025294 <AmiBlitz3.ab2@1002>     SaveSource{cli_savefile}
000252E0 <AmiBlitz3.ab2@1005>   If cli_dumpfile><"" AND err=False
0002532A <AmiBlitz3.ab2@1006>     If cli_verbose>=2 Then NPrint "Saving dumpfile."
00025360 <AmiBlitz3.ab2@1007>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0002536A <AmiBlitz3.ab2@1010>   If cli_run
0002537E <AmiBlitz3.ab2@1011>     If comerr=False
000253AA <AmiBlitz3.ab2@1012>       If cli_exefile
00025424 <AmiBlitz3.ab2@1013>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
00025452 <AmiBlitz3.ab2@1014>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0002549C <AmiBlitz3.ab2@1016>       If cli_verbose>=1 Then NPrint "Running program..."
000254A2 <AmiBlitz3.ab2@1017>       RunSource{}
000254A4 <AmiBlitz3.ab2@1019>         CLR.l d0
000254E2 <AmiBlitz3.ab2@1020>         !ComData_GetB{comByte_RunningFlag,D0}
000254E6 <AmiBlitz3.ab2@1021>         running.l = PutD0
00025502 <AmiBlitz3.ab2@1022>         If running Then Delay_ 50
00025516 <AmiBlitz3.ab2@1024>       Until running=False
0002552A <AmiBlitz3.ab2@1025>       If Peek.l(?_runerror)
0002557A <AmiBlitz3.ab2@1026>         If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0002558C <AmiBlitz3.ab2@1037>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
000255D6 <AmiBlitz3.ab2@1038>   If cli_verbose>=2 Then NPrint "Exit AmiBlitz3."
000255DC <AmiBlitz3.ab2@1039>   DeinitEmulatedPED{}
000255FA <AmiBlitz3.ab2@1041>   !asm
00025600 <AmiBlitz3.ab2@1042> JMP terminate_ab3
0002562A <AmiBlitz3.ab2@1047>   !basic
00025668 <AmiBlitz3.ab2@1048>     *MyCatalog.l=OpenCatalogA_(0,"Compiler.catalog",0)
00025672 <AmiBlitz3.ab2@1050>     If *MyCatalog
000256B2 <AmiBlitz3.ab2@1051>        WZTags #SFH_Catalog,*MyCatalog,#TAG_DONE,0,#TAG_END,0
000256C8 <AmiBlitz3.ab2@1054>     WZLoadGUI ?wzgui
000256E6 <AmiBlitz3.ab2@1055>   !asm
000256EC <AmiBlitz3.ab2@1058>   MOVEA.l ped_startup_addr,A1
000256F2 <AmiBlitz3.ab2@1059>   LEA str_tempfilename,A0
000256F4 <AmiBlitz3.ab2@1060>   JSR (A1)
0002571E <AmiBlitz3.ab2@1066>   !basic
00025738 <AmiBlitz3.ab2@1067>     If *MyCatalog Then CloseCatalog_ *MyCatalog
00025756 <AmiBlitz3.ab2@1068>   !asm
0002575C <AmiBlitz3.ab2@1071>   MOVE.l signalNum,D0
00025762 <AmiBlitz3.ab2@1072>   MOVEA.l _execbase,A6
00025766 <AmiBlitz3.ab2@1073>   JSR _FreeSignal(A6)
0002576C <AmiBlitz3.ab2@1075>   MOVE.l ptr_seg_debugger,D1
00025770 <AmiBlitz3.ab2@1076>   BEQ.b skip_unload_debugger
00025774 <AmiBlitz3.ab2@1077>     MOVEA.l _dosbase(PC),A6
00025778 <AmiBlitz3.ab2@1078>     JSR _UnLoadSeg(A6)
0002577C <AmiBlitz3.ab2@1081>   BSR.w Aclearallvars
00025780 <AmiBlitz3.ab2@1082>   BSR.w free_residents
00025786 <AmiBlitz3.ab2@1083>   JSR free_blitzlibs
0002578C <AmiBlitz3.ab2@1086>   MOVE.l ptr_seg_ped,D1
00025790 <AmiBlitz3.ab2@1087>   BEQ freemem_and_quit
00025794 <AmiBlitz3.ab2@1088>   MOVEA.l _dosbase(PC),A6
00025798 <AmiBlitz3.ab2@1089>   JSR _UnLoadSeg(A6)
0002579C <AmiBlitz3.ab2@1092>   BSR.w freeallox
000257A2 <AmiBlitz3.ab2@1093>   MOVEA.l ptr_macrobuffer_begin,A1
000257A4 <AmiBlitz3.ab2@1094>   MOVE.l -(a1),D0
000257A6 <AmiBlitz3.ab2@1095>   ADDQ.l #4,d0
000257AC <AmiBlitz3.ab2@1096>   MOVEA.l _execbase,A6
000257B0 <AmiBlitz3.ab2@1097>   JSR _FreeMem(A6)
000257B6 <AmiBlitz3.ab2@1100>   MOVEA.l _dosbase,A1
000257BC <AmiBlitz3.ab2@1101>   MOVEA.l _execbase,A6
000257C0 <AmiBlitz3.ab2@1102>   JSR _CloseLibrary(A6)
000257C6 <AmiBlitz3.ab2@1104>   MOVEA.l constpcat,A1
000257CC <AmiBlitz3.ab2@1105>   MOVE.l constmaxpc,D0
000257D2 <AmiBlitz3.ab2@1106>   MOVEA.l _execbase,A6
000257D6 <AmiBlitz3.ab2@1107>   JSR _FreeMem(A6)
000257DC <AmiBlitz3.ab2@1110>   MOVEA.l _mathffpbase,A1
000257E2 <AmiBlitz3.ab2@1111>   MOVEA.l _execbase,A6
000257E6 <AmiBlitz3.ab2@1112>   JSR _CloseLibrary(A6)
000257EC <AmiBlitz3.ab2@1122>     MOVEA.l _execbase,A6
000257F2 <AmiBlitz3.ab2@1123>     MOVE.l mempool,a0
000257F6 <AmiBlitz3.ab2@1124>     JSR _DeletePool(a6)
000257FC <AmiBlitz3.ab2@1125>     CLR.l pushat
00025802 <AmiBlitz3.ab2@1132>   JSR free_unusedfunctions
00025804 <AmiBlitz3.ab2@1133>   MOVEQ #0,d0
00025812 <AmiBlitz3.ab2@1136>   !exitasm
0002584A <AmiBlitz3.ab2@1137>   If dynassign<>""
00025854 <AmiBlitz3.ab2@1138>     If *AssignSema
00025864 <AmiBlitz3.ab2@1139>       ReleaseSemaphore_ *AssignSema
0002587C <AmiBlitz3.ab2@1140>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
00025910 <AmiBlitz3.ab2@1141>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0002594A <AmiBlitz3.ab2@1142>         dos_RemAssign{dynassign}
0002595A <AmiBlitz3.ab2@1143>         RemSemaphore_ *AssignSema
0002596A <AmiBlitz3.ab2@1144>         ReleaseSemaphore_ *AssignSema
000259A0 <AmiBlitz3.ab2@1145>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
000259B0 <AmiBlitz3.ab2@1146>         FreeVec_ *AssignSema
000259B8 <AmiBlitz3.ab2@1147>         *AssignSema = #NULL
000259E6 <AmiBlitz3.ab2@1151>   SetCurrentDir{cli_path}
00025A08 <AmiBlitz3.ab2@1152>   !coutclose
00025A0E <AmiBlitz3.ab2@1153> End
00025A1A <AmiBlitz3.ab2@1158> str_doslibrary:     Dc.b "dos.library",0 : Even
00025A1E <AmiBlitz3.ab2@1159> _dosbase:           Ds.l 1
00025A24 <AmiBlitz3.ab2@1163>   MOVEA.l _execbase,A6
00025A2A <AmiBlitz3.ab2@1164>   LEA str_doslibrary,A1
00025A2E <AmiBlitz3.ab2@1165>   JSR _OldOpenLibrary(A6)
00025A34 <AmiBlitz3.ab2@1166>   MOVE.l D0,_dosbase
00025A36 <AmiBlitz3.ab2@1167> RTS
00025A3C <AmiBlitz3.ab2@1171>   MOVEA.l #str_mathffpname,A1
00025A42 <AmiBlitz3.ab2@1172>   MOVEA.l _execbase,A6
00025A46 <AmiBlitz3.ab2@1173>   JSR _OldOpenLibrary(A6)
00025A4C <AmiBlitz3.ab2@1174>   MOVE.l D0,_mathffpbase
00025A4E <AmiBlitz3.ab2@1175> RTS
00025A80 <AmiBlitz3.ab2@1181>   !ComData_JMP{comFunc_SetNormalPointer}
00025AB2 <AmiBlitz3.ab2@1189>   !ComData_JMP{comFunc_SetBusyPointer}
00025ADC <AmiBlitz3.ab2@1194>   !basic
00025AE0 <AmiBlitz3.ab2@1195>   ab3save_filenameP.l = PutD0
00025AEA <AmiBlitz3.ab2@1196>   If ab3save_filenameP
00025B12 <AmiBlitz3.ab2@1197>     ab3save_filename.s = Peek.s(ab3save_filenameP)
00025B40 <AmiBlitz3.ab2@1199>     SaveSource{ab3save_filename}
00025B46 <AmiBlitz3.ab2@1200>   Else
00025B74 <AmiBlitz3.ab2@1201>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
00025B92 <AmiBlitz3.ab2@1203>   !asm
00025B94 <AmiBlitz3.ab2@1204>   RTS
00025BBE <AmiBlitz3.ab2@1207>   !basic
00025BC2 <AmiBlitz3.ab2@1208>   ab3save_filenameP.l = PutD0
00025BCC <AmiBlitz3.ab2@1209>   If ab3save_filenameP
00025BF4 <AmiBlitz3.ab2@1210>     ab3save_filename.s = Peek.s(ab3save_filenameP)
00025C22 <AmiBlitz3.ab2@1211>     LoadSource{ab3save_filename}
00025C28 <AmiBlitz3.ab2@1212>   Else
00025C56 <AmiBlitz3.ab2@1213>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
00025C74 <AmiBlitz3.ab2@1215>   !asm
00025C76 <AmiBlitz3.ab2@1216>   RTS
00025CA0 <AmiBlitz3.ab2@1219>   !basic
00025CA6 <AmiBlitz3.ab2@1220>   ClearSource{}
00025CC4 <AmiBlitz3.ab2@1221>   !asm
00025CC6 <AmiBlitz3.ab2@1222>   RTS
00025CF0 <AmiBlitz3.ab2@1225>   !basic
00025CF6 <AmiBlitz3.ab2@1226>   OpenConsoleFake{}
00025D14 <AmiBlitz3.ab2@1227>   !asm
00025D16 <AmiBlitz3.ab2@1228>   RTS
00025D40 <AmiBlitz3.ab2@1232>   !basic
00025D46 <AmiBlitz3.ab2@1233>   CloseConsoleFake{}
00025D64 <AmiBlitz3.ab2@1234>   !asm
00025D66 <AmiBlitz3.ab2@1235>   RTS
00025D6C <AmiBlitz3.ab2@1239>   MOVE.w d6,menuitemdebug
00025D96 <AmiBlitz3.ab2@1240>   !basic
00025DA8 <AmiBlitz3.ab2@1241>   menuitemx.l = Peek.w(?menuitemdebug)
00025DCE <AmiBlitz3.ab2@1242>   If menuitemx>16 OR  menuitemx<0
00025E36 <AmiBlitz3.ab2@1243>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
00025E3E <AmiBlitz3.ab2@1244>     menuitemx=0
00025E4E <AmiBlitz3.ab2@1246>   Poke.w ?menuitemdebug,menuitemx
00025E6C <AmiBlitz3.ab2@1247>   !asm
00025E72 <AmiBlitz3.ab2@1248>   MOVE.w menuitemdebug,d6
00025E78 <AmiBlitz3.ab2@1251>   MOVE.l A5,firstitem_
00025E7E <AmiBlitz3.ab2@1252>   MOVE.w D7,numlines_org
00025E84 <AmiBlitz3.ab2@1253>   MOVE.l d7,numlines
00025E86 <AmiBlitz3.ab2@1254>   LSL.w #2,D6
00025E8C <AmiBlitz3.ab2@1255>   LEA menu_items,A0
00025E90 <AmiBlitz3.ab2@1256>   MOVEA.l $0(A0,D6.W),A0
00025E9A <AmiBlitz3.ab2@1257>   MOVE.l #$FFFFffff,linenumat
00025EA4 <AmiBlitz3.ab2@1258>   MOVE.l #$FFFFffff,compilelinecounter
00025EA6 <AmiBlitz3.ab2@1262>   JSR (A0)
00025EAC <AmiBlitz3.ab2@1263>   MOVE.l compilelinecounter,D0
00025EAE <AmiBlitz3.ab2@1264> RTS
00025EB2 <AmiBlitz3.ab2@1266> menuitemdebug: Dc.l 0
00025EB6 <AmiBlitz3.ab2@1268> mempool                Dc.l 0
00025ECC <AmiBlitz3.ab2@1269> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
00025ED2 <AmiBlitz3.ab2@1270> dloaderr:             JSR handle_compileerror
00025EEE <AmiBlitz3.ab2@1271>                        Dc.b "Can't LoadSeg debug module!",0 : Even
00025F2C <AmiBlitz3.ab2@1279>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00025F32 <AmiBlitz3.ab2@1280>   LEA str_loaddebugmessage,A2
00025F38 <AmiBlitz3.ab2@1281>   LEA str_blitz3assign,A0
00025F3E <AmiBlitz3.ab2@1282>   LEA str_temp_debugmodulename,A1
00025F40 <AmiBlitz3.ab2@1285>   JSR (A3)
00025F44 <AmiBlitz3.ab2@1287>   BEQ.w menu_loaddebugmodule_noload
00025F4A <AmiBlitz3.ab2@1288>   MOVE.l D0,ptr_temp_debugmodule
00025F4E <AmiBlitz3.ab2@1289>   BSR.w call_setpointerbusy
00025F54 <AmiBlitz3.ab2@1290>   MOVE.l A7,errstack
00025F5E <AmiBlitz3.ab2@1291>   MOVE.l #menu_loaddebugmodule_noload,errcont
00025F64 <AmiBlitz3.ab2@1292>   MOVE.l ptr_temp_debugmodule,D1
00025F68 <AmiBlitz3.ab2@1294>   MOVEA.l _dosbase(PC),A6
00025F6C <AmiBlitz3.ab2@1295>   JSR _LoadSeg(A6)
00025F6E <AmiBlitz3.ab2@1296>   MOVE.l D0,D7
00025F72 <AmiBlitz3.ab2@1297>   BEQ.w dloaderr
00025F78 <AmiBlitz3.ab2@1298>   MOVE.l ptr_seg_debugger,D1
00025F7C <AmiBlitz3.ab2@1299>   BEQ.b menu_loaddebugmodule_ndseg
00025F80 <AmiBlitz3.ab2@1300>   MOVEA.l _dosbase(PC),A6
00025F84 <AmiBlitz3.ab2@1301>   JSR _UnLoadSeg(A6)
00025F88 <AmiBlitz3.ab2@1302>   BSR.w call_setpointernormal
00025F8E <AmiBlitz3.ab2@1305>   MOVE.l D7,ptr_seg_debugger
00025F90 <AmiBlitz3.ab2@1308> RTS
00025FAE <AmiBlitz3.ab2@1311> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0002606E <AmiBlitz3.ab2@1312> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0002612E <AmiBlitz3.ab2@1313> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
00026132 <AmiBlitz3.ab2@1314> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0002615C <AmiBlitz3.ab2@1318>   !basic
00026186 <AmiBlitz3.ab2@1319>   exepath.s = Peek.s(?exepath)
000261B0 <AmiBlitz3.ab2@1320>   exefile.s = Peek.s(?exefilename)
00026230 <AmiBlitz3.ab2@1321>   exefile.s = dos_AddPart{exepath,exefile}
00026268 <AmiBlitz3.ab2@1322>   Poke.s ?tempspace,exefile
00026286 <AmiBlitz3.ab2@1323>   !asm
0002628C <AmiBlitz3.ab2@1344>   LEA tempspace,a0
0002628E <AmiBlitz3.ab2@1345>   MOVE.l a0,d0
00026292 <AmiBlitz3.ab2@1346> BRA newcreate2
000262BC <AmiBlitz3.ab2@1352>   !basic
000262E6 <AmiBlitz3.ab2@1353>   request_exename.s = Peek.s(?str_request_exename )
00026342 <AmiBlitz3.ab2@1354>   request_exename   = !TRANS{request_exename}
00026348 <AmiBlitz3.ab2@1355>   GetD0 &request_exename
00026366 <AmiBlitz3.ab2@1356>   !asm
00026368 <AmiBlitz3.ab2@1357>   MOVE.l D0,A2
000263A6 <AmiBlitz3.ab2@1360>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000263AC <AmiBlitz3.ab2@1362>   LEA exepath,A0
000263B2 <AmiBlitz3.ab2@1363>   LEA exefilename,A1
000263B4 <AmiBlitz3.ab2@1366>   JSR (A3)                                                 ;open ped filerequest
000263B8 <AmiBlitz3.ab2@1367>   BEQ.w cancel_createexe
000263C2 <AmiBlitz3.ab2@1370>   ADD.l #1,number_of_builds
000263C8 <AmiBlitz3.ab2@1373>   MOVE.l D0,ptr_newexefilename
000263D0 <AmiBlitz3.ab2@1374>   MOVE.w #-1,debugversion
000263D6 <AmiBlitz3.ab2@1375>   MOVE.w set_make_smallestcode,-(A7)
000263DE <AmiBlitz3.ab2@1379>     MOVE.w #1,makeexec
000263E4 <AmiBlitz3.ab2@1380>     JSR ab3_OpenDebugFile
000263E8 <AmiBlitz3.ab2@1381>     BSR.w startcompile
000263EE <AmiBlitz3.ab2@1382>     JSR ab3_CloseDebugFile
000263F8 <AmiBlitz3.ab2@1383>     CMP.l #"NORE",reqmode
000263FC <AmiBlitz3.ab2@1384>   BEQ 'l1
00026402 <AmiBlitz3.ab2@1386>   TST.w anyerrs
00026406 <AmiBlitz3.ab2@1387>   BNE.b menu_createexecutable__skip
0002640A <AmiBlitz3.ab2@1388>   BSR.w savefile
00026410 <AmiBlitz3.ab2@1391>   MOVE.w (A7)+,set_make_smallestcode
00026412 <AmiBlitz3.ab2@1394> RTS
0002641A <AmiBlitz3.ab2@1398>   MOVE.w #-1,flag_noPED
0002641C <AmiBlitz3.ab2@1399> RTS
00026424 <AmiBlitz3.ab2@1403>   MOVE.w #-1,flag_noCLI
00026426 <AmiBlitz3.ab2@1404> RTS
00026450 <AmiBlitz3.ab2@1407>   !basic
00026478 <AmiBlitz3.ab2@1408>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
00026488 <AmiBlitz3.ab2@1409>     Poke.w ?word_WriteDebugFileNow,0
000264A6 <AmiBlitz3.ab2@1410>   !asm
000264A8 <AmiBlitz3.ab2@1411> RTS
000264D2 <AmiBlitz3.ab2@1414>   !basic
000264E2 <AmiBlitz3.ab2@1415>   Poke.w ?word_WriteDebugFileNow,0
000264F4 <AmiBlitz3.ab2@1416>   If dbg_fid>=0
0002650A <AmiBlitz3.ab2@1417>     file_Close{dbg_fid} : dbg_fid = -1
0002651C <AmiBlitz3.ab2@1419>   If dbg_fid.l<0
0002651E <AmiBlitz3.ab2@1420>     CLR.l d0
0002655C <AmiBlitz3.ab2@1421>     !ComData_GetW{comWord_CreateDebugFile,D0}
00026560 <AmiBlitz3.ab2@1422>     dbg_Create.l = PutD0
0002656A <AmiBlitz3.ab2@1423>     If (dbg_Create) ; only when set!
0002657A <AmiBlitz3.ab2@1424>       exefileP.l = Peek.l (?ptr_newexefilename)
000265A2 <AmiBlitz3.ab2@1425>       exefile.s = ""
000265D4 <AmiBlitz3.ab2@1426>       If exefileP Then exefile.s = Peek.s(exefileP)
0002660C <AmiBlitz3.ab2@1427>       If exefile><""
00026662 <AmiBlitz3.ab2@1428>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
00026674 <AmiBlitz3.ab2@1429>         If dbg_fid>=0
00026686 <AmiBlitz3.ab2@1430>           Poke.w ?word_WriteDebugFileNow,-1
00026692 <AmiBlitz3.ab2@1433>       oldhunkoffset.l = -1
000266BA <AmiBlitz3.ab2@1434>       oldfile.s       = ""
000266D8 <AmiBlitz3.ab2@1437>   !asm
000266DA <AmiBlitz3.ab2@1438> RTS
000266E0 <AmiBlitz3.ab2@1441> TST.w word_WriteDebugFileNow
000266E4 <AmiBlitz3.ab2@1442> BEQ 'skipdebugfile
0002670E <AmiBlitz3.ab2@1443> !basic
00026720 <AmiBlitz3.ab2@1444>   If dbg_fid>=0
00026732 <AmiBlitz3.ab2@1445>     pass.l          = Peek.w(?pass)
00026744 <AmiBlitz3.ab2@1446>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
00026768 <AmiBlitz3.ab2@1447> 
0002676E <AmiBlitz3.ab2@1448>       oldhunkoffset.l = hunkoffset.l
000267A2 <AmiBlitz3.ab2@1449>       oldfile.s       = codefile.s
000267BE <AmiBlitz3.ab2@1450>       If Peek.w (?ininclude)>0
000267CE <AmiBlitz3.ab2@1451>         codeline.l = Peek.l(?includeline);-1
0002683E <AmiBlitz3.ab2@1452>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
00026844 <AmiBlitz3.ab2@1453>       Else
00026872 <AmiBlitz3.ab2@1454>         !ComData_LEA{comStr_SourceName,A0}
00026874 <AmiBlitz3.ab2@1455>         MOVE.l A0,D0
00026878 <AmiBlitz3.ab2@1456>         sourceP.l = PutD0
000268A0 <AmiBlitz3.ab2@1457>         codefile.s = Peek.s(sourceP)
000268B0 <AmiBlitz3.ab2@1458>         codeline.l = Peek.l(?linenumat)
000268D8 <AmiBlitz3.ab2@1460>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0002692C <AmiBlitz3.ab2@1461>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0002693C <AmiBlitz3.ab2@1468>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
00026946 <AmiBlitz3.ab2@1469>         If *sourceLine
0002695C <AmiBlitz3.ab2@1470>           MaxLen detokenline.s = 65536
0002699E <AmiBlitz3.ab2@1471>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000269AE <AmiBlitz3.ab2@1472>          *tn.preprocessor = Peek.l(?include_preprocessor)
000269DA <AmiBlitz3.ab2@1473>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
00026A08 <AmiBlitz3.ab2@1474>           If written>0 Then Poke.b &detokenline+written-1,0
00026A32 <AmiBlitz3.ab2@1475>           sourceLineText.s = Peek.s(&detokenline)
00026A38 <AmiBlitz3.ab2@1476>         Else
00026A60 <AmiBlitz3.ab2@1477>           sourceLineText = "NULL"
00026B28 <AmiBlitz3.ab2@1480>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
00026B46 <AmiBlitz3.ab2@1486> !asm
00026B48 <AmiBlitz3.ab2@1488> RTS
00026B4A <AmiBlitz3.ab2@1490> word_WriteDebugFileNow: Dc.w 0
00026B4C <AmiBlitz3.ab2@1492> flag_noPED:  Ds.w 1                                        ;closeed org source
00026B4E <AmiBlitz3.ab2@1493> flag_noCLI:  Ds.w 1                                        ;nocli org source
00026B52 <AmiBlitz3.ab2@1497>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00026B58 <AmiBlitz3.ab2@1498>   MOVEA.l _execbase,A6
00026B5C <AmiBlitz3.ab2@1499>   JSR _CacheClearU(A6)
00026B60 <AmiBlitz3.ab2@1500>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00026B62 <AmiBlitz3.ab2@1501> RTS
00026B66 <AmiBlitz3.ab2@1504>   MOVEM.l A2-A3,-(A7)
00026B6C <AmiBlitz3.ab2@1505>   CLR.b doublepeek
00026B72 <AmiBlitz3.ab2@1506>   MOVE.l A5,lastsourcepos
00026B78 <AmiBlitz3.ab2@1507>    JSR getchar
00026B7C <AmiBlitz3.ab2@1508>   CMP.w #$2E,D0
00026B80 <AmiBlitz3.ab2@1509>    BEQ.w JL_0_49B4b
00026B86 <AmiBlitz3.ab2@1510>   MOVEA.l defaulttype,A2
00026B8A <AmiBlitz3.ab2@1511>   CMP.w #$24,D0
00026B8E <AmiBlitz3.ab2@1512>    BNE.w JL_0_49CAb
00026B90 <AmiBlitz3.ab2@1513>   MOVEQ.l #$07,D1
00026B94 <AmiBlitz3.ab2@1514> BRA.w JL_0_49DEb
00026B9A <AmiBlitz3.ab2@1517>   JSR getparameter2
00026B9E <AmiBlitz3.ab2@1518>   BEQ.w syntaxerrb
00026BA4 <AmiBlitz3.ab2@1519>   LEA newtypebase,A2
00026BAA <AmiBlitz3.ab2@1520>   JSR findtype
00026BAE <AmiBlitz3.ab2@1521>   BNE.w notypeerrb
00026BB8 <AmiBlitz3.ab2@1526>   MOVE.w oldqflag,instringon
00026BBE <AmiBlitz3.ab2@1527>   MOVEA.l lastsourcepos,A5
00026BC4 <AmiBlitz3.ab2@1529>   MOVE.l a2,functionreturntype
00026BCC <AmiBlitz3.ab2@1530>   CMPI.l #$100,$4(A2)
00026BD0 <AmiBlitz3.ab2@1531>   BLE.w 'isvar
00026BD2 <AmiBlitz3.ab2@1535>   MOVEQ #3,d1
00026BD6 <AmiBlitz3.ab2@1536>   BRA JL_0_49DEb
00026BDA <AmiBlitz3.ab2@1543>   MOVE.w $6(A2),D1
00026BE0 <AmiBlitz3.ab2@1544>   CMP.w #8,8(a2)
00026BE4 <AmiBlitz3.ab2@1545>   BNE 'l1
00026BEC <AmiBlitz3.ab2@1546>   MOVE.b #1,doublepeek
00026BF2 <AmiBlitz3.ab2@1549>   MOVE.w D1,convsize
00026BF6 <AmiBlitz3.ab2@1550>   MOVEM.l (A7)+,A2-A3
00026BF8 <AmiBlitz3.ab2@1551> RTS
00026BFE <AmiBlitz3.ab2@1553> notypeerrb JMP notypeerr
00026C04 <AmiBlitz3.ab2@1554> illtypeerrb JMP illtypeerr
00026C0A <AmiBlitz3.ab2@1555> syntaxerrb JMP syntaxerr
00026C14 <AmiBlitz3.ab2@1600>   ADD.l #1,number_of_builds
00026C1A <AmiBlitz3.ab2@1602>   CLR.w debugversion
00026C20 <AmiBlitz3.ab2@1603>   CLR.w flag_noPED
00026C26 <AmiBlitz3.ab2@1604>   CLR.w flag_noCLI
00026C2E <AmiBlitz3.ab2@1607>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00026C32 <AmiBlitz3.ab2@1608>     BSR.w startcompile
00026C3C <AmiBlitz3.ab2@1609>     CMP.l #"NORE",reqmode
00026C40 <AmiBlitz3.ab2@1610>   BEQ 'l1
00026C46 <AmiBlitz3.ab2@1613>   TST.w anyerrs
00026C4A <AmiBlitz3.ab2@1614>    BNE.w JL_0_3482
00026C4E <AmiBlitz3.ab2@1616>   MOVE.w flag_noPED(PC),D1
00026C52 <AmiBlitz3.ab2@1617>    BEQ.w skip_closingGUI
00026C84 <AmiBlitz3.ab2@1622>   !ComData_JSR{comFunc_CloseGUI}
00026C88 <AmiBlitz3.ab2@1623> BRA.b runprogram
00026C8C <AmiBlitz3.ab2@1627>   BSR.w compilerequester
00026C92 <AmiBlitz3.ab2@1630>   MOVEA.l _dosbase,A6
00026C98 <AmiBlitz3.ab2@1631>   LEA exepath,a0
00026C9A <AmiBlitz3.ab2@1632>   MOVE.l a0,d1
00026C9C <AmiBlitz3.ab2@1633>   MOVEQ #-2,d2
00026CA0 <AmiBlitz3.ab2@1634>   JSR _Lock(a6)                                            ;lock
00026CA6 <AmiBlitz3.ab2@1635>   MOVE.l d0,exelock
00026CAC <AmiBlitz3.ab2@1636>   MOVE.l #0,d1
00026CB0 <AmiBlitz3.ab2@1637>   JSR _CurrentDir(A6)
00026CB6 <AmiBlitz3.ab2@1638>   MOVE.l D0,lock_currentdir
00026CB8 <AmiBlitz3.ab2@1639>   MOVE.l D0,D1
00026CBC <AmiBlitz3.ab2@1640>   JSR _CurrentDir(A6)
00026CC2 <AmiBlitz3.ab2@1641>   CLR.l ptr_exetask
00026CC8 <AmiBlitz3.ab2@1650>   MOVE.l #str_process_name,D1
00026CCA <AmiBlitz3.ab2@1651>   MOVEQ.l #$00,D2
00026CD0 <AmiBlitz3.ab2@1652>   MOVE.l #proc_seglist,D3
00026CD2 <AmiBlitz3.ab2@1653>   LSR.l #2,D3
00026CD8 <AmiBlitz3.ab2@1654>   MOVE.l stacksize,D4
00026CDE <AmiBlitz3.ab2@1655>   MOVEA.l _dosbase,A6
00026CE2 <AmiBlitz3.ab2@1656>   JSR _CreateProc(A6)                                      ;runtask
00026CE4 <AmiBlitz3.ab2@1657>   TST.l D0
00026CE8 <AmiBlitz3.ab2@1658>    BEQ ErrorRunningProg
00026D1E <AmiBlitz3.ab2@1660>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00026D24 <AmiBlitz3.ab2@1662>   TST.w flag_noPED
00026D28 <AmiBlitz3.ab2@1663>    BNE.b JL_0_344E
00026D2C <AmiBlitz3.ab2@1664>   BSR.w close_compilewin
00026D32 <AmiBlitz3.ab2@1667>   CLR.l firstlocal
00026D38 <AmiBlitz3.ab2@1668>   CLR.l firstglob
00026D3C <AmiBlitz3.ab2@1669>   MOVE.w flag_noPED(PC),D1
00026D40 <AmiBlitz3.ab2@1670>   BEQ.w skip_openGUI
00026D72 <AmiBlitz3.ab2@1674>   !ComData_JSR{comFunc_CreateGUI}
00026D74 <AmiBlitz3.ab2@1683> RTS
00026D7E <AmiBlitz3.ab2@1686> MOVE.l #1,_runerror
00026D82 <AmiBlitz3.ab2@1687> BRA JL_0_344E
00026D86 <AmiBlitz3.ab2@1689> _runerror: Dc.l 0
00026D8A <AmiBlitz3.ab2@1690> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00026D8E <AmiBlitz3.ab2@1691> ptr_exetask:        Ds.l 1                                          ;panictask org source
00026D92 <AmiBlitz3.ab2@1692> signalNum:          Ds.l 1                                          ;panicbit org source
00026D96 <AmiBlitz3.ab2@1693> signals:            Ds.l 1                                          ;panicmask org source
00026DAC <AmiBlitz3.ab2@1695> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
00026DB1 <AmiBlitz3.ab2@1696>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00026DB4 <AmiBlitz3.ab2@1697> Even4
00026DB8 <AmiBlitz3.ab2@1699> ptr_ThisTask:       Ds.l 1                                          ;length
00026DBC <AmiBlitz3.ab2@1700> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00026DC2 <AmiBlitz3.ab2@1704>   MOVEA.l $4,A0
00026DCA <AmiBlitz3.ab2@1705>   MOVE.l  $114(A0),ptr_exetask
00026DD0 <AmiBlitz3.ab2@1707>   MOVEA.l _dosbase,A6
00026DD6 <AmiBlitz3.ab2@1708>   MOVE.l exelock,D1
00026DDA <AmiBlitz3.ab2@1709>   JSR _CurrentDir(A6)
00026E10 <AmiBlitz3.ab2@1714>   !ComData_SetB{comByte_RunningFlag,#1}
00026E14 <AmiBlitz3.ab2@1720>   MOVE.w flag_noCLI(PC),D1
00026E18 <AmiBlitz3.ab2@1721>    BNE.b skip_openconsole
00026E4A <AmiBlitz3.ab2@1725>   !ComData_JSR{comFunc_OpenConsole}
00026E4E <AmiBlitz3.ab2@1728>   BSR.w calcvbr
00026E54 <AmiBlitz3.ab2@1729>   MOVEA.l vbr,A0
00026E5A <AmiBlitz3.ab2@1734>   CLR.w dirmode
00026E60 <AmiBlitz3.ab2@1735>   CLR.l firstglob
00026E66 <AmiBlitz3.ab2@1736>   CLR.l firstlocal
00026E6C <AmiBlitz3.ab2@1738>   MOVE.l stacksize,D2
00026E72 <AmiBlitz3.ab2@1739>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00026E78 <AmiBlitz3.ab2@1740>   LEA str_cliarguments,A0                                   ;cli arguement
00026E7E <AmiBlitz3.ab2@1741>   MOVEA.l destbufferstart,A1
00026E82 <AmiBlitz3.ab2@1742>   BSR.w Aclearcache
00026E84 <AmiBlitz3.ab2@1745>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00026E8A <AmiBlitz3.ab2@1747>   MOVEA.l vbr,A0
00026E90 <AmiBlitz3.ab2@1749>   CLR.l firstglob
00026E96 <AmiBlitz3.ab2@1750>   CLR.l firstlocal
00026E9C <AmiBlitz3.ab2@1751>   MOVEA.l _dosbase,A6
00026EA2 <AmiBlitz3.ab2@1752>   MOVE.l exelock,d1
00026EA6 <AmiBlitz3.ab2@1753>   BEQ 'nolock
00026EAA <AmiBlitz3.ab2@1754>   JSR _UnLock(a6)
00026EE0 <AmiBlitz3.ab2@1759>   !ComData_SetB{comByte_RunningFlag,#0}
00026EE4 <AmiBlitz3.ab2@1762>   MOVE.w flag_noCLI(PC),D1
00026EE8 <AmiBlitz3.ab2@1763>    BNE.b skip_closeconsole
00026F1A <AmiBlitz3.ab2@1767>   !ComData_JSR{comFunc_CloseConsole}
00026F22 <AmiBlitz3.ab2@1770>   MOVE.w #$0001,stopit
00026F26 <AmiBlitz3.ab2@1771>   MOVE.l signals(PC),D0
00026F2C <AmiBlitz3.ab2@1772>   MOVEA.l ptr_ThisTask,A1
00026F32 <AmiBlitz3.ab2@1773>   MOVEA.l _execbase,A6
00026F36 <AmiBlitz3.ab2@1774>   JSR _Signal(A6)
00026F38 <AmiBlitz3.ab2@1775> RTS
00026F3E <AmiBlitz3.ab2@1779>   MOVEA.l _execbase,A6
00026F42 <AmiBlitz3.ab2@1780>   MOVE.w $128(A6),D0
00026F44 <AmiBlitz3.ab2@1781>   MOVEQ.l #$00,D1
00026F48 <AmiBlitz3.ab2@1782>   ANDI.w #$F,D0
00026F4C <AmiBlitz3.ab2@1785>     BEQ.b calcvbr__skip
00026F4E <AmiBlitz3.ab2@1786>     ADDQ.w #1,D1
00026F50 <AmiBlitz3.ab2@1787>     LSR.w #1,D0
00026F54 <AmiBlitz3.ab2@1788> BRA.b calcvbr_loop
00026F56 <AmiBlitz3.ab2@1791>   MOVEQ.l #$00,D2
00026F5A <AmiBlitz3.ab2@1792>   CMP.w #$2,D1
00026F5E <AmiBlitz3.ab2@1793>    BCS.b calcvbr__skip2
00026F64 <AmiBlitz3.ab2@1794>   MOVEA.l _execbase,A6
00026F68 <AmiBlitz3.ab2@1795>   JSR _SuperState(A6)
00026F6C <AmiBlitz3.ab2@1796>   Dc.l $4E7A2801                                           ;movec vbr,D2
00026F70 <AmiBlitz3.ab2@1797>   JSR _UserState(A6)
00026F76 <AmiBlitz3.ab2@1800>   MOVE.l D2,vbr
00026F78 <AmiBlitz3.ab2@1801> RTS
00026F7E <AmiBlitz3.ab2@1805>   LEA instrtab,a0
00026F84 <AmiBlitz3.ab2@1806>   MOVE.l #labelhash-instrtab,d0
00026F86 <AmiBlitz3.ab2@1807>   ASR.l #2,d0
00026F88 <AmiBlitz3.ab2@1808>   SUBQ.l #1,d0
00026F8A <AmiBlitz3.ab2@1811>   CLR.l (a0)+
00026F8C <AmiBlitz3.ab2@1812>   SUBQ.l #1,d0
00026F90 <AmiBlitz3.ab2@1813>   BNE 'l10
00026F94 <AmiBlitz3.ab2@1814>   BSR.w call_setpointerbusy
00026F98 <AmiBlitz3.ab2@1815>   BSR.w free_userlibs
00026F9C <AmiBlitz3.ab2@1816>   BSR.w scan_for_userlibs
00026FA0 <AmiBlitz3.ab2@1817>   BSR.w JL_0_7082
00026FA4 <AmiBlitz3.ab2@1818> BRA.w call_setpointernormal
00026FCE <AmiBlitz3.ab2@1824>   !basic
00027008 <AmiBlitz3.ab2@1825>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00027018 <AmiBlitz3.ab2@1827>   deflibNameP.l = Peek.l(?deflib)
00027022 <AmiBlitz3.ab2@1828>   If deflibNameP
00027054 <AmiBlitz3.ab2@1829>     If Peek.s(deflibNameP)<>""
0002709E <AmiBlitz3.ab2@1830>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
000270A4 <AmiBlitz3.ab2@1831>     Else
000270DE <AmiBlitz3.ab2@1832>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
000270E4 <AmiBlitz3.ab2@1834>   Else
0002711E <AmiBlitz3.ab2@1835>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0002714C <AmiBlitz3.ab2@1836>     error{"INTERNAL: Invalid deflib name pointer!"}
0002716A <AmiBlitz3.ab2@1838>   !asm
00027170 <AmiBlitz3.ab2@1843>   MOVE.l #str_path_userlibs,D1
00027172 <AmiBlitz3.ab2@1844>   MOVEQ.l #-$02,D2
00027178 <AmiBlitz3.ab2@1845>   MOVEA.l _dosbase,A6
0002717C <AmiBlitz3.ab2@1846>   JSR _Lock(A6)
0002717E <AmiBlitz3.ab2@1847>   MOVE.l D0,D7
00027182 <AmiBlitz3.ab2@1848>    BEQ.w exit_get_libraries
00027184 <AmiBlitz3.ab2@1849>   MOVE.l D7,D1
0002718A <AmiBlitz3.ab2@1850>   MOVE.l #ptr_parameterstore,D2
0002718E <AmiBlitz3.ab2@1851>   JSR _Examine(A6)
00027190 <AmiBlitz3.ab2@1852>   TST.l D0
00027194 <AmiBlitz3.ab2@1853>   BEQ.w unlock_and_exit_get_libraries
0002719A <AmiBlitz3.ab2@1854>   MOVE.l fib_DirEntryType,D0
0002719E <AmiBlitz3.ab2@1855>   BMI.w unlock_and_exit_get_libraries
000271A0 <AmiBlitz3.ab2@1860>     MOVE.l D7,D1
000271A6 <AmiBlitz3.ab2@1861>     MOVE.l #ptr_parameterstore,D2
000271AC <AmiBlitz3.ab2@1862>     MOVEA.l _dosbase,A6
000271B0 <AmiBlitz3.ab2@1863>     JSR _ExNext(A6)
000271B2 <AmiBlitz3.ab2@1864>     TST.l D0
000271B6 <AmiBlitz3.ab2@1865>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
000271BC <AmiBlitz3.ab2@1867>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
000271C0 <AmiBlitz3.ab2@1868>     BPL.w scan_libsdrawer                                  ; skip directories
000271C6 <AmiBlitz3.ab2@1870>     LEA fib_FileName,A0                                    ; pruefen ob infofile
000271CA <AmiBlitz3.ab2@1871>     BSR.w check_for_infoextention
000271CE <AmiBlitz3.ab2@1872>     BEQ.w scan_libsdrawer
000271D4 <AmiBlitz3.ab2@1874>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
000271D6 <AmiBlitz3.ab2@1875>     MOVEQ.l #$26,D0
000271D8 <AmiBlitz3.ab2@1876>     MOVEQ.l #$01,D1
000271DE <AmiBlitz3.ab2@1877>     MOVE.l mempool,a0
000271E2 <AmiBlitz3.ab2@1878>     JSR _AllocPooled(a6)
000271E8 <AmiBlitz3.ab2@1880>     MOVEA.l _dosbase,A6
000271EA <AmiBlitz3.ab2@1881>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
000271F0 <AmiBlitz3.ab2@1884>     LEA ptr_userlibs_list,A0                               ; pruefe liste
000271F2 <AmiBlitz3.ab2@1887>     MOVE.l (A0),D5
000271F6 <AmiBlitz3.ab2@1888>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
000271F8 <AmiBlitz3.ab2@1889>     MOVEA.l D5,A2
000271FA <AmiBlitz3.ab2@1890>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
00027200 <AmiBlitz3.ab2@1893>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
00027202 <AmiBlitz3.ab2@1896>       MOVEQ.l #$00,D0
00027204 <AmiBlitz3.ab2@1897>       MOVE.b (A1)+,D0
00027208 <AmiBlitz3.ab2@1898>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0002720A <AmiBlitz3.ab2@1899>       MOVEQ.l #$00,D1
0002720C <AmiBlitz3.ab2@1900>       MOVE.b (A2)+,D1
00027210 <AmiBlitz3.ab2@1901>        BEQ.w JL_0_371C
00027232 <AmiBlitz3.ab2@1902>       !compare1                                            ;bsr.w tstalpha
00027236 <AmiBlitz3.ab2@1903>       BNE.w JL_0_3702
0002723A <AmiBlitz3.ab2@1904>       ANDI.w #$DF,D0
0002723C <AmiBlitz3.ab2@1907>       EXG.l D0,D1
0002725E <AmiBlitz3.ab2@1908>       !compare1                                            ;bsr.w tstalpha
00027262 <AmiBlitz3.ab2@1909>       BNE.w JL_0_3710
00027266 <AmiBlitz3.ab2@1910>       ANDI.w #$DF,D0
00027268 <AmiBlitz3.ab2@1913>       EXG.l D0,D1
0002726A <AmiBlitz3.ab2@1914>       CMP.b D1,D0
0002726E <AmiBlitz3.ab2@1915>     BEQ.w JL_0_36E6
00027272 <AmiBlitz3.ab2@1916>     BCS.w JL_0_3722
00027274 <AmiBlitz3.ab2@1919>     MOVEA.l D5,A0
00027278 <AmiBlitz3.ab2@1920> BRA.w JL_0_36D6
0002727A <AmiBlitz3.ab2@1923>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
0002727C <AmiBlitz3.ab2@1924>     MOVE.l (A0),(A1)
0002727E <AmiBlitz3.ab2@1925>     MOVE.l A1,(A0)
00027280 <AmiBlitz3.ab2@1926>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00027284 <AmiBlitz3.ab2@1927>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0002728A <AmiBlitz3.ab2@1928>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
0002728C <AmiBlitz3.ab2@1931>       MOVE.b (A0)+,(A1)+
00027290 <AmiBlitz3.ab2@1932>     BNE.w JL_0_3734
00027294 <AmiBlitz3.ab2@1933> BRA.w scan_libsdrawer
00027296 <AmiBlitz3.ab2@1936>   MOVE.l D7,D1
0002729C <AmiBlitz3.ab2@1937>   MOVEA.l _dosbase,A6
000272A0 <AmiBlitz3.ab2@1938>   JSR _UnLock(A6)
000272A2 <AmiBlitz3.ab2@1939>   MOVEQ.l #-$01,D0
000272A4 <AmiBlitz3.ab2@1942> RTS
000272A6 <AmiBlitz3.ab2@1945>   MOVE.l D7,D1
000272AC <AmiBlitz3.ab2@1946>   MOVEA.l _dosbase,A6
000272B0 <AmiBlitz3.ab2@1947>   JSR _UnLock(A6)
000272B2 <AmiBlitz3.ab2@1948>   MOVEQ.l #$00,D0
000272B4 <AmiBlitz3.ab2@1949> RTS
000272BA <AmiBlitz3.ab2@1953>   MOVEA.l _execbase,A6
000272C0 <AmiBlitz3.ab2@1954>   MOVEA.l ptr_userlibs_list,A2
000272C6 <AmiBlitz3.ab2@1955>   CLR.l ptr_userlibs_list
000272CA <AmiBlitz3.ab2@1958>     CMPA.w #$0,A2
000272CE <AmiBlitz3.ab2@1959>     BEQ.w exit_free_userlib
000272D0 <AmiBlitz3.ab2@1960>       MOVEA.l A2,A1
000272D2 <AmiBlitz3.ab2@1961>       MOVEQ.l #$26,D0
000272D4 <AmiBlitz3.ab2@1962>       MOVEA.l (A2),A2
000272DA <AmiBlitz3.ab2@1963>       MOVE.l mempool,a0
000272E0 <AmiBlitz3.ab2@1964>       MOVEA.l _execbase,A6
000272E4 <AmiBlitz3.ab2@1965>       JSR _FreePooled(A6)
000272E8 <AmiBlitz3.ab2@1966> BRA.w loop_free_userlib
000272EA <AmiBlitz3.ab2@1969> RTS
000272EC <AmiBlitz3.ab2@1972> pass:  Dc.w 0                                             ; smallpass org source
000272EE <AmiBlitz3.ab2@1973> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
000272F4 <AmiBlitz3.ab2@1977>   MOVE.l A7,errstack                                      ;startcompile
000272FA <AmiBlitz3.ab2@1986>   CLR.l reqmode
00027304 <AmiBlitz3.ab2@1988>   MOVE.l #Aclearallvars,errcont
0002730E <AmiBlitz3.ab2@1989>   MOVE.l #concomstack,concomsp
00027312 <AmiBlitz3.ab2@1996>   MOVE.w #1450,D0
00027314 <AmiBlitz3.ab2@1997>   LSR.w #3,D0
00027316 <AmiBlitz3.ab2@1998>   SUBQ.w #7,D0                                             ; 173
0002731C <AmiBlitz3.ab2@1999>   MOVE.w D0,progressbar_width
0002731E <AmiBlitz3.ab2@2000>   SWAP D0
00027320 <AmiBlitz3.ab2@2001>   CLR.w D0
00027326 <AmiBlitz3.ab2@2002>   MOVE.l numlines,d1
0002732A <AmiBlitz3.ab2@2003>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0002732C <AmiBlitz3.ab2@2005>   TST.w D0
00027330 <AmiBlitz3.ab2@2006>   BNE.w JL_0_37C0
00027332 <AmiBlitz3.ab2@2007>   MOVEQ.l #-$01,D0
00027338 <AmiBlitz3.ab2@2010>   MOVE.w D0,progress_per_line
00027340 <AmiBlitz3.ab2@2018>   BTST #$7,use_debugger
00027344 <AmiBlitz3.ab2@2020>   BNE 'debugon
0002734A <AmiBlitz3.ab2@2021>   CLR.w debugmode
0002734E <AmiBlitz3.ab2@2022> BRA.b 'debugoff
00027354 <AmiBlitz3.ab2@2025>   SNE debugmode
0002738C <AmiBlitz3.ab2@2033>   !ComData_SetB{comByte_DebugMode,debugmode}
00027392 <AmiBlitz3.ab2@2036>   CLR.w dirmode                                            ;direct mode flag
00027398 <AmiBlitz3.ab2@2037>   CLR.w ezerr                                              ;quiet error
0002739E <AmiBlitz3.ab2@2038>   CLR.l currentfunction
000273A4 <AmiBlitz3.ab2@2039>   CLR.w connest
000273AA <AmiBlitz3.ab2@2040>   CLR.w varmode
000273B0 <AmiBlitz3.ab2@2041>   CLR.w proceduremode
000273B6 <AmiBlitz3.ab2@2042>   CLR.w ininclude
000273BC <AmiBlitz3.ab2@2043>   CLR.w intstring
000273C2 <AmiBlitz3.ab2@2044>   CLR.w pass
000273CA <AmiBlitz3.ab2@2045>   MOVE.w #0,compiler_job
000273D0 <AmiBlitz3.ab2@2046>   CLR.l funcscanon
000273D6 <AmiBlitz3.ab2@2054>   CLR.l funcscanon
000273DA <AmiBlitz3.ab2@2055>   BSR.w compileall
000273E0 <AmiBlitz3.ab2@2057>   MOVE.w dontwrite,d0
000273E4 <AmiBlitz3.ab2@2058>   CMP.w #1,d0
000273E8 <AmiBlitz3.ab2@2059>   BNE 'l3
000273EE <AmiBlitz3.ab2@2060>   CLR.w dontwrite
000273F2 <AmiBlitz3.ab2@2061>   BSR compileall                                           ;if a function is not found
000273F8 <AmiBlitz3.ab2@2065>   TST.b funcoptimize
000273FE <AmiBlitz3.ab2@2067>   LEA firstproc,a0
00027404 <AmiBlitz3.ab2@2068>   CLR.l savefuncspace
00027406 <AmiBlitz3.ab2@2069>   MOVE.l (a0),d0
00027408 <AmiBlitz3.ab2@2073>     MOVE.l d0,a0
0002740C <AmiBlitz3.ab2@2074>     BEQ 'out
00027410 <AmiBlitz3.ab2@2075>     TST.b isfunc(a0)
00027414 <AmiBlitz3.ab2@2076>     BNE 'nex
00027418 <AmiBlitz3.ab2@2077>     MOVEM.l d2/a6/a0,-(a7)
0002741A <AmiBlitz3.ab2@2079>     MOVEQ #0,d0
0002741E <AmiBlitz3.ab2@2080>     MOVE.b $21+#funcentry_extend-1(a0),d0
00027422 <AmiBlitz3.ab2@2081>     SUB.w #$21+#funcentry_extend,d0
00027426 <AmiBlitz3.ab2@2082>     ADD.w #16,d0
0002742C <AmiBlitz3.ab2@2083>     MOVE.l #$10000,d1
0002742E <AmiBlitz3.ab2@2084>     MOVE.l d0,d2
00027434 <AmiBlitz3.ab2@2085>     MOVEA.l _execbase,A6
00027438 <AmiBlitz3.ab2@2086>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0002743A <AmiBlitz3.ab2@2087>     MOVE.l d0,a1
0002743E <AmiBlitz3.ab2@2088>     MOVE.l d2,4(a1)
00027444 <AmiBlitz3.ab2@2089>     MOVE.l unusedfunc,(a1)
0002744A <AmiBlitz3.ab2@2090>     MOVE.l d0,unusedfunc
0002744E <AmiBlitz3.ab2@2091>     MOVEM.l (a7)+,a6/a0/d2
00027452 <AmiBlitz3.ab2@2092>     MOVE.l isfunc+1(a0),d0
00027454 <AmiBlitz3.ab2@2093>     ADDQ.l #6,d0
0002745A <AmiBlitz3.ab2@2094>     ADD.l d0,savefuncspace
0002745E <AmiBlitz3.ab2@2097>     MOVE.l d0,8(a1)
00027462 <AmiBlitz3.ab2@2098>     LEA 12(a1),a1
00027464 <AmiBlitz3.ab2@2099>     MOVE.l a0,-(a7)
00027468 <AmiBlitz3.ab2@2100>     LEA $21+#funcentry_extend(a0),a0
0002746A <AmiBlitz3.ab2@2103>       MOVE.b (a0)+,(a1)+
0002746E <AmiBlitz3.ab2@2104>     BNE 'l1
00027470 <AmiBlitz3.ab2@2105>     MOVE.l (a7)+,a0
00027472 <AmiBlitz3.ab2@2108>     MOVE.l (a0),d0
00027476 <AmiBlitz3.ab2@2109> BRA 'lr1
0002747E <AmiBlitz3.ab2@2112>   BTST #$7,make_smallestcode
00027482 <AmiBlitz3.ab2@2113>   BEQ.b JL_0_3844                                           ;optimize for executable
00027488 <AmiBlitz3.ab2@2114>   CLR.l morememadd
0002748C <AmiBlitz3.ab2@2116>   BSR.w alloxadj
00027490 <AmiBlitz3.ab2@2117>   BEQ.w JL_0_388A
00027496 <AmiBlitz3.ab2@2118>   ADDQ.w #1,pass
0002749A <AmiBlitz3.ab2@2119>   BSR.w compileall
000274A0 <AmiBlitz3.ab2@2122>   MOVE.w dontwrite,D1
000274A4 <AmiBlitz3.ab2@2123>   BEQ.w JL_0_38A2
000274A8 <AmiBlitz3.ab2@2142> BRA.w JL_0_3896
000274B0 <AmiBlitz3.ab2@2153>   MOVE.w #$FFFF,anyerrs
000274B4 <AmiBlitz3.ab2@2154> BRA.w JL_0_38A2
000274B8 <AmiBlitz3.ab2@2157>   BSR.w alloxinc                                          ;increase all by 50%
000274BC <AmiBlitz3.ab2@2158>   BEQ.w Aclearallvars
000274C0 <AmiBlitz3.ab2@2159> BRA.w JL_0_3824
000274C4 <AmiBlitz3.ab2@2171> BRA.w JL_0_38A6                                            ;???????
000274CA <AmiBlitz3.ab2@2175>   JSR freereps
000274D0 <AmiBlitz3.ab2@2176>   JSR freesels
000274D6 <AmiBlitz3.ab2@2177>   JSR AJL_0_6DF2
000274DC <AmiBlitz3.ab2@2178>   JSR freepends
000274E2 <AmiBlitz3.ab2@2179>   JSR freeifs
000274E8 <AmiBlitz3.ab2@2180>   JSR AJL_0_C188
000274EE <AmiBlitz3.ab2@2181>   JSR AJL_0_C15C
000274F4 <AmiBlitz3.ab2@2182>   JSR AJL_0_D9BC
000274FA <AmiBlitz3.ab2@2185> JMP cleartemplabel
000274FE <AmiBlitz3.ab2@2188> mempool2:  Dc.l 0
00027504 <AmiBlitz3.ab2@2192>   JSR Aclearcache
0002750C <AmiBlitz3.ab2@2194>   BTST #$7,use_debugger
00027510 <AmiBlitz3.ab2@2196>   BNE 'debugon
00027516 <AmiBlitz3.ab2@2197>   CLR.w debugmode
0002751A <AmiBlitz3.ab2@2198> BRA.b 'debugoff
00027520 <AmiBlitz3.ab2@2201>   SNE debugmode
00027558 <AmiBlitz3.ab2@2206>   !ComData_SetB{comByte_DebugMode,debugmode}
0002755E <AmiBlitz3.ab2@2208>   LEA regtable,a0
00027560 <AmiBlitz3.ab2@2209>   MOVEQ #10,d0
00027562 <AmiBlitz3.ab2@2212>     CLR.l (a0)+
00027566 <AmiBlitz3.ab2@2213>   DBF d0,'l1
0002756C <AmiBlitz3.ab2@2215>   LEA includetemp2,a0
0002756E <AmiBlitz3.ab2@2216>   CLR.b (a0)
00027578 <AmiBlitz3.ab2@2217>   MOVE.l #7,maxregs
0002757E <AmiBlitz3.ab2@2218>   CLR.w debugnest
00027584 <AmiBlitz3.ab2@2219>   CLR.b funcparloop
0002758A <AmiBlitz3.ab2@2220>   CLR.b nostringopt
00027590 <AmiBlitz3.ab2@2221>   CLR.b firsttime
00027596 <AmiBlitz3.ab2@2222>   CLR.l lastdestpointer
0002759C <AmiBlitz3.ab2@2223>   CLR.l lastwritedat
000275A2 <AmiBlitz3.ab2@2224>   CLR.l prevwritedat
000275A8 <AmiBlitz3.ab2@2225>   CLR.l includeline
000275AE <AmiBlitz3.ab2@2226>   CLR.b incnif
000275B4 <AmiBlitz3.ab2@2227>   CLR.b formode
000275BA <AmiBlitz3.ab2@2228>   CLR.b funccall
000275C0 <AmiBlitz3.ab2@2229>   CLR.w objectcount
000275C6 <AmiBlitz3.ab2@2230>   CLR.b resdisable
000275CC <AmiBlitz3.ab2@2231>   CLR.b developobject
000275D2 <AmiBlitz3.ab2@2232>   CLR.b optistring
000275D8 <AmiBlitz3.ab2@2233>   CLR.b optistring2
000275DE <AmiBlitz3.ab2@2234>   CLR.b optiarray
000275E4 <AmiBlitz3.ab2@2235>   CLR.b quickadd
000275EA <AmiBlitz3.ab2@2236>   CLR.w newmode
000275F0 <AmiBlitz3.ab2@2237>   CLR.w mode
000275F6 <AmiBlitz3.ab2@2238>   CLR.w string1
000275FC <AmiBlitz3.ab2@2239>   CLR.b fastfunc
00027602 <AmiBlitz3.ab2@2240>   CLR.w load_var_size
00027608 <AmiBlitz3.ab2@2241>   CLR.w load_var_reg
0002760E <AmiBlitz3.ab2@2242>   CLR.l load_var_addr
00027614 <AmiBlitz3.ab2@2243>   CLR.w imm_size
0002761A <AmiBlitz3.ab2@2244>   CLR.w imm_reg
00027620 <AmiBlitz3.ab2@2245>   CLR.l imm_addr
00027626 <AmiBlitz3.ab2@2246>   CLR.b _dcb
0002762C <AmiBlitz3.ab2@2247>   CLR.l nohunkoffset
00027632 <AmiBlitz3.ab2@2248>   CLR.b peekaddrsize
00027638 <AmiBlitz3.ab2@2249>   CLR.b typecheck
0002763E <AmiBlitz3.ab2@2250>   CLR.b declare2
00027644 <AmiBlitz3.ab2@2251>   CLR.b declare
0002764A <AmiBlitz3.ab2@2252>   CLR.l myoline                                          ;check
00027650 <AmiBlitz3.ab2@2253>   CLR.l myline                                          ;check
00027656 <AmiBlitz3.ab2@2254>   CLR.b newvariable
0002765C <AmiBlitz3.ab2@2255>   CLR.b saved0
00027662 <AmiBlitz3.ab2@2256>   CLR.l bsssize
00027668 <AmiBlitz3.ab2@2257>   CLR.l chipsize
0002766E <AmiBlitz3.ab2@2258>   CLR.b infunctioncode
00027678 <AmiBlitz3.ab2@2259>   MOVE.l #-1,bssstart
00027682 <AmiBlitz3.ab2@2260>   MOVE.l #-1,bssend
0002768C <AmiBlitz3.ab2@2261>   MOVE.l #-1,chipstart
00027696 <AmiBlitz3.ab2@2262>   MOVE.l #-1,chipend
0002769E <AmiBlitz3.ab2@2263>   MOVE.w #0,bssmode
000276A4 <AmiBlitz3.ab2@2264>   CLR.w a2offset
000276AA <AmiBlitz3.ab2@2265>   CLR.w fast
000276B0 <AmiBlitz3.ab2@2266>   CLR.w fpu
000276B6 <AmiBlitz3.ab2@2267>   CLR.b iee
000276BC <AmiBlitz3.ab2@2268>   CLR.w newsyntax
000276C0 <AmiBlitz3.ab2@2269>   BSR.w JL_0_38A6
000276C6 <AmiBlitz3.ab2@2270>   JSR AJL_0_7962
000276CC <AmiBlitz3.ab2@2271>   JSR frallvars
000276D2 <AmiBlitz3.ab2@2272>   JSR fralltypes
000276D8 <AmiBlitz3.ab2@2273>   JSR freemacs
000276DE <AmiBlitz3.ab2@2274>   JSR clearfunctionlist
000276E4 <AmiBlitz3.ab2@2275>   TST.w pass
000276EA <AmiBlitz3.ab2@2277>   JSR clearlabels
000276F0 <AmiBlitz3.ab2@2278>   JSR clearhash
000276F6 <AmiBlitz3.ab2@2281>   LEA devo,a0
000276FA <AmiBlitz3.ab2@2282>   MOVEM.l a0-a6/d0-d7,-(a7)
00027700 <AmiBlitz3.ab2@2283>   LEA ptr_parameterstore,a1
00027702 <AmiBlitz3.ab2@2286>     MOVE.b (a0)+,(a1)+
00027706 <AmiBlitz3.ab2@2287>   BNE 'l1b
00027708 <AmiBlitz3.ab2@2288>   MOVEQ #13,d2
0002770E <AmiBlitz3.ab2@2289>   JSR findlabel2
00027712 <AmiBlitz3.ab2@2290>   BNE 'd
00027716 <AmiBlitz3.ab2@2291>   CLR.l 8(a2)
0002771A <AmiBlitz3.ab2@2294>   MOVEM.l (a7)+,a0-a6/d0-d7
00027744 <AmiBlitz3.ab2@2295>   !basic
000277B8 <AmiBlitz3.ab2@2296>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
000277D6 <AmiBlitz3.ab2@2297>   !asm
000277DC <AmiBlitz3.ab2@2298>   CLR.b returncode
000277E2 <AmiBlitz3.ab2@2299> JMP freeprocvs
000277E8 <AmiBlitz3.ab2@2303>   MOVE.l #bssstore-labelhash,d0
000277EA <AmiBlitz3.ab2@2304>   ASR.l #2,d0
000277F0 <AmiBlitz3.ab2@2305>   LEA labelhash,a0
000277F2 <AmiBlitz3.ab2@2308>     CLR.l (a0)+
000277F4 <AmiBlitz3.ab2@2309>     SUBQ.l #1,d0
000277F8 <AmiBlitz3.ab2@2310>   BNE.s 'l10
000277FE <AmiBlitz3.ab2@2312>   LEA labelbase,a1
00027800 <AmiBlitz3.ab2@2313>   MOVE.l (a1),d0
00027804 <AmiBlitz3.ab2@2314>   BEQ 'l11
00027806 <AmiBlitz3.ab2@2317>     MOVE.l d0,a1
0002780A <AmiBlitz3.ab2@2318>     TST.l 4(a1)
0002780E <AmiBlitz3.ab2@2319>     BEQ 'l29
00027812 <AmiBlitz3.ab2@2320>     LEA $13(a1),a0
00027814 <AmiBlitz3.ab2@2321>     MOVEQ #0,d0
00027816 <AmiBlitz3.ab2@2322>     MOVEQ #0,d1
00027818 <AmiBlitz3.ab2@2325>       MOVE.b (a0)+,d1
0002781C <AmiBlitz3.ab2@2326>       BEQ 'l12
00027822 <AmiBlitz3.ab2@2327>       !hashalgo
00027826 <AmiBlitz3.ab2@2328> BRA 'l13
0002782C <AmiBlitz3.ab2@2331>     LEA labelhash,a0
00027832 <AmiBlitz3.ab2@2332>     AND.l #hashsize,d0
00027834 <AmiBlitz3.ab2@2333>      ASL.l #2,d0
00027838 <AmiBlitz3.ab2@2334>     MOVE.l 0(a0,d0),d1                                     ;*4
0002783C <AmiBlitz3.ab2@2335>     MOVE.l d1,$c(a1)
00027840 <AmiBlitz3.ab2@2336>     MOVE.l a1,0(a0,d0)
00027842 <AmiBlitz3.ab2@2339>     MOVE.l (a1),d0
00027846 <AmiBlitz3.ab2@2340>   BNE 'l21
00027848 <AmiBlitz3.ab2@2343> RTS
0002784E <AmiBlitz3.ab2@2347>   MOVEA.l lastrestype,A0
00027850 <AmiBlitz3.ab2@2348>   MOVEA.l (A0),A2
00027852 <AmiBlitz3.ab2@2349>   CLR.l (A0)
00027858 <AmiBlitz3.ab2@2350> JMP freetypes
0002785E <AmiBlitz3.ab2@2354>   MOVEA.l varbase,A3
00027864 <AmiBlitz3.ab2@2355>   CLR.l varbase
00027868 <AmiBlitz3.ab2@2358>   CMPA.w #$0,A3
0002786C <AmiBlitz3.ab2@2359>   BEQ.w 'l20
0002786E <AmiBlitz3.ab2@2360>   MOVEA.l A3,A1
00027870 <AmiBlitz3.ab2@2361>   MOVEA.l (A3),A3
00027872 <AmiBlitz3.ab2@2362>   MOVEQ.l #$00,D0
00027876 <AmiBlitz3.ab2@2363>   MOVE.b $E+4(A1),D0
0002787C <AmiBlitz3.ab2@2364>   MOVEA.l _execbase,A6
00027882 <AmiBlitz3.ab2@2365>   MOVE.l mempool2,a0
00027886 <AmiBlitz3.ab2@2366>   JSR _FreePooled(A6)
0002788A <AmiBlitz3.ab2@2367> BRA.w 'l10
0002788C <AmiBlitz3.ab2@2370> RTS
00027892 <AmiBlitz3.ab2@2375>   LEA firstiff,A2
00027894 <AmiBlitz3.ab2@2376>   MOVEQ.l #$0E,D2
0002789A <AmiBlitz3.ab2@2377> JMP freeslist
0002789C <AmiBlitz3.ab2@2383> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0002789E <AmiBlitz3.ab2@2384> inmacro:             Ds.w 1                                ;macmask org source ;macro found
000278A4 <AmiBlitz3.ab2@2388>   CLR.w inmacro
000278AA <AmiBlitz3.ab2@2389>   ADDQ.l #1,globallinecount
000278B0 <AmiBlitz3.ab2@2390>   CLR.b nostringopt
000278B4 <AmiBlitz3.ab2@2391>   BSR.w JL_0_3CA4
000278BA <AmiBlitz3.ab2@2392>   CLR.w instringon
000278C0 <AmiBlitz3.ab2@2395>   TST.w ininclude
000278C4 <AmiBlitz3.ab2@2396>   BEQ.w JL_0_39B0
000278CA <AmiBlitz3.ab2@2397>   ADDQ.l #1,includeline
000278D0 <AmiBlitz3.ab2@2398>     JSR ab3_WriteDebugFile
000278D6 <AmiBlitz3.ab2@2399>   JSR AJL_0_C09E
000278DA <AmiBlitz3.ab2@2400>   BEQ.w JL_0_39B0
000278E0 <AmiBlitz3.ab2@2401>   MOVE.w ininclude,D0
000278E4 <AmiBlitz3.ab2@2402>   CMP.w #$4,D0
000278E8 <AmiBlitz3.ab2@2403>   BCC.w JL_0_39AC
000278EA <AmiBlitz3.ab2@2404>   ADD.w D0,D0
000278F0 <AmiBlitz3.ab2@2405>   LEA progress_per_line,A0
000278F4 <AmiBlitz3.ab2@2406>   MOVE.w $0(A0,D0.W),D2
000278F8 <AmiBlitz3.ab2@2407>   CMP.w progressbar_width(PC),D2
000278FC <AmiBlitz3.ab2@2408>   BCC.w JL_0_39AC
00027900 <AmiBlitz3.ab2@2409>   ADDQ.w #1,$0(A0,D0.W)
00027902 <AmiBlitz3.ab2@2410>   LSR.w #1,D0
00027904 <AmiBlitz3.ab2@2411>   MOVE.l d0,d1
00027906 <AmiBlitz3.ab2@2412>   EXT.l d1
00027908 <AmiBlitz3.ab2@2413>   MOVE.l d2,d0
0002790A <AmiBlitz3.ab2@2414>   EXT.l d0                                                 ;d0=x,d1=y
00027910 <AmiBlitz3.ab2@2416>   JSR update_progressbar
00027912 <AmiBlitz3.ab2@2419>   MOVEQ.l #-$01,D0
00027914 <AmiBlitz3.ab2@2420> RTS
0002791A <AmiBlitz3.ab2@2424>   MOVE.l titleat,D0
0002791C <AmiBlitz3.ab2@2425>   MOVEQ.l #$00,D1
00027922 <AmiBlitz3.ab2@2426>   MOVE.w progress_per_line,D1
00027924 <AmiBlitz3.ab2@2427>   ADD.l D1,D0
00027926 <AmiBlitz3.ab2@2428>   MOVE.l D0,D1
00027928 <AmiBlitz3.ab2@2429>   SWAP D0
0002792E <AmiBlitz3.ab2@2430>   CMP.w titleat,D0
00027932 <AmiBlitz3.ab2@2431>    BEQ.w JL_0_39E4
00027934 <AmiBlitz3.ab2@2434>   EXT.l d0
00027936 <AmiBlitz3.ab2@2435>   MOVE.l d1,-(a7)
0002793E <AmiBlitz3.ab2@2438>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00027944 <AmiBlitz3.ab2@2439>   JSR update_progressbar
0002794C <AmiBlitz3.ab2@2440>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0002794E <AmiBlitz3.ab2@2444>   MOVE.l (a7)+,d1
00027954 <AmiBlitz3.ab2@2447>   MOVE.l D1,titleat
0002795A <AmiBlitz3.ab2@2448>   ADDQ.l #1,linenumat
00027960 <AmiBlitz3.ab2@2449>   CLR.w linedone
00027966 <AmiBlitz3.ab2@2450>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0002796C <AmiBlitz3.ab2@2452>   SUBQ.l #1,numlines2
00027970 <AmiBlitz3.ab2@2453>    BEQ.w JL_0_3A12
00027976 <AmiBlitz3.ab2@2454>   MOVEA.l sourceline,A0
00027978 <AmiBlitz3.ab2@2455>   MOVEA.l (A0),A0
0002797E <AmiBlitz3.ab2@2456>   MOVE.l A0,sourceline
00027982 <AmiBlitz3.ab2@2457>   LEA $9(A0),A5
00027984 <AmiBlitz3.ab2@2460> RTS
00027986 <AmiBlitz3.ab2@2464>   MOVE.w D0,-(A7)
00027988 <AmiBlitz3.ab2@2465>   MOVEQ.l #$03,D0
0002798A <AmiBlitz3.ab2@2468>     MOVE.w D1,D2
0002798E <AmiBlitz3.ab2@2469>     ANDI.w #$F,D2
00027992 <AmiBlitz3.ab2@2470>     ADDI.w #$30,D2
00027996 <AmiBlitz3.ab2@2471>     CMP.w #$3A,D2
0002799A <AmiBlitz3.ab2@2472>      BCS.w JL_0_3A2C
0002799C <AmiBlitz3.ab2@2473>     ADDQ.w #7,D2
000279A0 <AmiBlitz3.ab2@2476>     MOVE.b D2,$0(A0,D0.W)
000279A2 <AmiBlitz3.ab2@2477>     LSR.w #4,D1
000279A6 <AmiBlitz3.ab2@2478>   DBF D0,JL_0_3A18
000279A8 <AmiBlitz3.ab2@2480>   MOVE.w (A7)+,D0
000279AA <AmiBlitz3.ab2@2481> RTS
000279B0 <AmiBlitz3.ab2@2491>   MOVE.w skipcode,D1
000279B4 <AmiBlitz3.ab2@2492>   BNE.w JL_0_3A46
000279B6 <AmiBlitz3.ab2@2493> RTS
000279B8 <AmiBlitz3.ab2@2496>   MOVE.l A5,-(A7)
000279BA <AmiBlitz3.ab2@2497>   MOVEQ.l #$3A,D1                                          ;':'
000279BC <AmiBlitz3.ab2@2498>   MOVEQ.l #$21,D2                                          ;'!'
000279BE <AmiBlitz3.ab2@2499>   MOVEQ.l #$3B,D3                                          ;';'
000279C0 <AmiBlitz3.ab2@2500>   MOVEQ.l #$22,D4                                          ;'"'
000279C2 <AmiBlitz3.ab2@2503>   MOVE.b (A5)+,D0
000279C6 <AmiBlitz3.ab2@2504>    BEQ.w JL_0_3CA0
000279CA <AmiBlitz3.ab2@2505>    BPL.w JL_0_3A60
000279CC <AmiBlitz3.ab2@2506>   MOVE.b (A5)+,D0
000279D0 <AmiBlitz3.ab2@2507> BRA.w JL_0_3A50
000279D2 <AmiBlitz3.ab2@2510>   CMP.b D4,D0
000279D6 <AmiBlitz3.ab2@2511>    BNE.w JL_0_3A82
000279D8 <AmiBlitz3.ab2@2514>   MOVE.b (A5)+,D0
000279DC <AmiBlitz3.ab2@2515>    BEQ.w notqerr
000279E0 <AmiBlitz3.ab2@2521>   CMP.b #$22,D0
000279E4 <AmiBlitz3.ab2@2522>    BNE.w JL_0_3A66
000279E8 <AmiBlitz3.ab2@2523> BRA.w JL_0_3A50
000279EA <AmiBlitz3.ab2@2526>   CMP.b D1,D0
000279EE <AmiBlitz3.ab2@2527>    BEQ.w JL_0_3CA0
000279F0 <AmiBlitz3.ab2@2528>   CMP.b D3,D0
000279F4 <AmiBlitz3.ab2@2529>    BEQ.w JL_0_3CA0
000279F6 <AmiBlitz3.ab2@2532>   CMP.b D2,D0
000279FA <AmiBlitz3.ab2@2533>    BNE.w JL_0_3A50
00027A02 <AmiBlitz3.ab2@2534>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
00027A04 <AmiBlitz3.ab2@2535>   MOVEA.l A5,A3
00027A0A <AmiBlitz3.ab2@2536>    JSR getparameter2
00027A0E <AmiBlitz3.ab2@2537>    BNE.w JL_0_3AAC
00027A14 <AmiBlitz3.ab2@2538> JMP syntaxerr
00027A1E <AmiBlitz3.ab2@2543>    MOVE.w oldqflag,instringon
00027A24 <AmiBlitz3.ab2@2544>   MOVEA.l lastsourcepos,A5
00027A2A <AmiBlitz3.ab2@2545>    JSR findmac                                             ;find macro
00027A2E <AmiBlitz3.ab2@2546>    BEQ.w JL_0_3ABE
00027A34 <AmiBlitz3.ab2@2547> JMP nomacerr
00027A3A <AmiBlitz3.ab2@2550>   TST.b debugmode
00027A3E <AmiBlitz3.ab2@2551>   BEQ 'sk1
00027A42 <AmiBlitz3.ab2@2552>   MOVE.w #$4e71,d1
00027A48 <AmiBlitz3.ab2@2553>   JSR writeword
00027A4A <AmiBlitz3.ab2@2554>   MOVE.l a5,-(a7)
00027A4C <AmiBlitz3.ab2@2555>   MOVE.l a3,a5
00027A4E <AmiBlitz3.ab2@2556>   SUBQ.l #1,a5
00027A56 <AmiBlitz3.ab2@2557>   MOVE.w #$0,inmacro
00027A5A <AmiBlitz3.ab2@2558>   BSR debugstuffa
00027A62 <AmiBlitz3.ab2@2559>   MOVE.w #$FFFF,inmacro
00027A64 <AmiBlitz3.ab2@2560>   MOVE.l (a7)+,a5
00027A68 <AmiBlitz3.ab2@2561>   MOVE.w #$4e71,d1
00027A6E <AmiBlitz3.ab2@2562>   JSR writeword
00027A70 <AmiBlitz3.ab2@2565>   MOVEA.l A5,A4
00027A74 <AmiBlitz3.ab2@2568>    CMP.b #" ",(a4)+
00027A78 <AmiBlitz3.ab2@2569>     BEQ 'l5a
00027A7A <AmiBlitz3.ab2@2570>      SUBQ.l#1,a4
00027A7E <AmiBlitz3.ab2@2571>      CMP.b #",",(a4)
00027A82 <AmiBlitz3.ab2@2572>     BEQ JL_0_3AEA
00027A84 <AmiBlitz3.ab2@2575>   MOVEQ.l #$00,D4
00027A8A <AmiBlitz3.ab2@2576>   TST.b newsyntax
00027A8E <AmiBlitz3.ab2@2577>   BEQ 'l10b
00027A92 <AmiBlitz3.ab2@2578>   MOVEM.l a0/d0,-(a7)
00027A96 <AmiBlitz3.ab2@2579>   MOVE.l 4(a2),a0
00027A9A <AmiBlitz3.ab2@2580>   MOVE.w 8(a2),d0
00027A9E <AmiBlitz3.ab2@2583>   CMP.b #"`",(a0)+
00027AA2 <AmiBlitz3.ab2@2584>   BEQ 'x1
00027AA4 <AmiBlitz3.ab2@2585>   SUBQ.w #1,d0
00027AA8 <AmiBlitz3.ab2@2586>   BNE 'x2
00027AAC <AmiBlitz3.ab2@2587> BRA 'x3
00027AB0 <AmiBlitz3.ab2@2590>   MOVEM.l (a7)+,a0/d0
00027AB4 <AmiBlitz3.ab2@2591> BRA 'l10
00027AB8 <AmiBlitz3.ab2@2594>   MOVEM.l (a7)+,a0/d0
00027ABC <AmiBlitz3.ab2@2595> BRA JL_0_3AEA
00027AC0 <AmiBlitz3.ab2@2598>   CMPI.b #"{",(A4)
00027AC4 <AmiBlitz3.ab2@2599>    BNE.w JL_0_3AEA
00027AC6 <AmiBlitz3.ab2@2603>   ADDQ.l #1,a4
00027ACA <AmiBlitz3.ab2@2606>     CMP.b #" ",(a4)
00027ACE <AmiBlitz3.ab2@2607>     BEQ 'l5
00027AD2 <AmiBlitz3.ab2@2608>     MOVEM.l a0/d0,-(a7)
00027AD8 <AmiBlitz3.ab2@2609>     CLR.b exmac
00027ADE <AmiBlitz3.ab2@2610>     LEA chartab,a0
00027AE0 <AmiBlitz3.ab2@2611>     MOVEQ #0,d0
00027AE2 <AmiBlitz3.ab2@2612>     MOVE.b (a4),d0
00027AE6 <AmiBlitz3.ab2@2613>     BMI 'm1
00027AEA <AmiBlitz3.ab2@2614>     TST.b 0(a0,d0)
00027AEE <AmiBlitz3.ab2@2615>     BEQ 'm1
00027AF4 <AmiBlitz3.ab2@2616>     TST.b newsyntax
00027AF8 <AmiBlitz3.ab2@2617>     BEQ 'ns1
00027AFC <AmiBlitz3.ab2@2618>     CMP.b #"#",d0
00027B00 <AmiBlitz3.ab2@2619>     BEQ 'm1
00027B04 <AmiBlitz3.ab2@2620>     CMP.b #"$",d0
00027B08 <AmiBlitz3.ab2@2621>     BEQ 'm1
00027B0C <AmiBlitz3.ab2@2622>     CMP.b #"-",d0
00027B10 <AmiBlitz3.ab2@2623>     BEQ 'm1
00027B14 <AmiBlitz3.ab2@2626>   CMP.b #",",d0
00027B18 <AmiBlitz3.ab2@2627>     BEQ 'm1
00027B1C <AmiBlitz3.ab2@2628>     CMP.b #"{",d0
00027B20 <AmiBlitz3.ab2@2629>     BNE 'm1b
00027B22 <AmiBlitz3.ab2@2630>     ADDQ.l #1,a4
00027B26 <AmiBlitz3.ab2@2631> BRA 'm1
00027B2C <AmiBlitz3.ab2@2634>   TST.b newsyntax
00027B30 <AmiBlitz3.ab2@2635>     BEQ 'm1
00027B38 <AmiBlitz3.ab2@2636>     MOVE.b #1,exmac
00027B3C <AmiBlitz3.ab2@2639>   MOVEM.l (a7)+,a0/d0
00027B42 <AmiBlitz3.ab2@2640>     TST.b exmac
00027B46 <AmiBlitz3.ab2@2641>     BNE JL_0_3AEA
00027B48 <AmiBlitz3.ab2@2648>   TST.b (a4)
00027B4C <AmiBlitz3.ab2@2649>   BEQ JL_0_3AEA
00027B52 <AmiBlitz3.ab2@2652>   MOVEA.l ptr_macrobuffer_begin,A0
00027B54 <AmiBlitz3.ab2@2655>   ADDQ.w #1,D4
00027B56 <AmiBlitz3.ab2@2656>   MOVE.l A4,(A0)
00027B5A <AmiBlitz3.ab2@2657>   CLR.w 4(a0)
00027B5E <AmiBlitz3.ab2@2658>    BSR.w JL_0_3CC6
00027B60 <AmiBlitz3.ab2@2660>   ADDQ.l #4,a0
00027B62 <AmiBlitz3.ab2@2664>   SUBQ.w #1,(a0)+
00027B66 <AmiBlitz3.ab2@2665>   CMP.b #$7D,D0
00027B6A <AmiBlitz3.ab2@2666>   BEQ 'l10
00027B6C <AmiBlitz3.ab2@2667>   TST.b d0
00027B70 <AmiBlitz3.ab2@2668>   BEQ 'l10
00027B74 <AmiBlitz3.ab2@2669> BRA JL_0_3AD0
00027B7A <AmiBlitz3.ab2@2673>   CLR.l sourceline3
00027B7C <AmiBlitz3.ab2@2674>   MOVEA.l A4,A5
00027B82 <AmiBlitz3.ab2@2677>   MOVE.w D4,numarg
00027B88 <AmiBlitz3.ab2@2684>   MOVE.l #$01,D1
00027B8E <AmiBlitz3.ab2@2685>   MOVEA.l _execbase,A6
00027B94 <AmiBlitz3.ab2@2686>   MOVE.l mempool,a0
00027B9A <AmiBlitz3.ab2@2687>   MOVE.l macrobuffer_size,D0
00027BA0 <AmiBlitz3.ab2@2688>   CMP.l #40000,d0
00027BA4 <AmiBlitz3.ab2@2689>   BGE 'l1m
00027BAA <AmiBlitz3.ab2@2690>   MOVE.l #40000,d0
00027BB0 <AmiBlitz3.ab2@2691>   MOVE.l d0,macrobuffer_size
00027BB4 <AmiBlitz3.ab2@2694>   JSR _AllocPooled(a6)
00027BBE <AmiBlitz3.ab2@2696>   MOVE.l myline,myoline
00027BC0 <AmiBlitz3.ab2@2699>   ADDQ.l #1,d0
00027BC6 <AmiBlitz3.ab2@2700>   MOVE.l D0,myline
00027BC8 <AmiBlitz3.ab2@2701>   MOVEA.l D0,A1
00027BCE <AmiBlitz3.ab2@2702>   MOVE.b #":",-1(a1)
00027BD0 <AmiBlitz3.ab2@2703>   MOVEA.l A1,A6
00027BD6 <AmiBlitz3.ab2@2704>   ADDA.l macrobuffer_size,A6
00027BD8 <AmiBlitz3.ab2@2705>   MOVEA.l (A7)+,A0
00027BDA <AmiBlitz3.ab2@2708>   CMPA.l A6,A1
00027BDE <AmiBlitz3.ab2@2709>    BCC.w mbovererr
00027BE0 <AmiBlitz3.ab2@2710>   MOVE.b (A0)+,(a1)+
00027BE2 <AmiBlitz3.ab2@2711>   CMPA.l A3,A0
00027BE6 <AmiBlitz3.ab2@2712>    BCS.w JL_0_3B1E
00027BE8 <AmiBlitz3.ab2@2713>   SUBQ.w #1,A1
00027BEC <AmiBlitz3.ab2@2714>   MOVE.w $8(A2),D1
00027BF0 <AmiBlitz3.ab2@2715>    BEQ.w JL_0_3C70
00027BF8 <AmiBlitz3.ab2@2716>   MOVE.w $A(A2),macnum
00027BFC <AmiBlitz3.ab2@2717>   ADDQ.w #1,$A(A2)
00027C00 <AmiBlitz3.ab2@2718>   MOVEA.l $4(A2),A2
00027C02 <AmiBlitz3.ab2@2719>   SUBQ.w #1,D1
00027C08 <AmiBlitz3.ab2@2720>   CLR.b firstmline
00027C0A <AmiBlitz3.ab2@2723>     MOVEQ.l #$00,D0
00027C0C <AmiBlitz3.ab2@2724>     MOVE.b (A2)+,D0
00027C12 <AmiBlitz3.ab2@2725>     TST.b firstmline
00027C16 <AmiBlitz3.ab2@2726>     BNE 'c1
00027C1A <AmiBlitz3.ab2@2727>     CMP.b #$22,d0
00027C1E <AmiBlitz3.ab2@2728>     BNE 's1
00027C26 <AmiBlitz3.ab2@2729>     MOVE.b #1,firstmline
00027C2A <AmiBlitz3.ab2@2732>     CMP.b #":",d0
00027C2E <AmiBlitz3.ab2@2733>     BNE 'm1
00027C36 <AmiBlitz3.ab2@2734>     MOVE.b #1,firstmline
00027C3A <AmiBlitz3.ab2@2737>     CMP.b #";",d0
00027C3E <AmiBlitz3.ab2@2738>     BNE 'c1
00027C40 <AmiBlitz3.ab2@2741>     SUBQ.w #1,d1                                           ;filter out comment
00027C42 <AmiBlitz3.ab2@2742>     MOVE.b (a2)+,d0
00027C48 <AmiBlitz3.ab2@2743>     CMP.w #":@",-1(a2)
00027C4C <AmiBlitz3.ab2@2744>     BEQ 'c2
00027C4E <AmiBlitz3.ab2@2745>     TST.w d1
00027C52 <AmiBlitz3.ab2@2746>     BNE 'l1
00027C56 <AmiBlitz3.ab2@2747>   BRA JL_0_3C6C
00027C5C <AmiBlitz3.ab2@2750>     CMP.b #":",1(a2)
00027C60 <AmiBlitz3.ab2@2751>       BNE 'l1
00027C62 <AmiBlitz3.ab2@2752>       ADDQ #2,a2
00027C64 <AmiBlitz3.ab2@2753>       SUBQ #3,d1
00027C66 <AmiBlitz3.ab2@2754>       MOVE.b (a2)+,d0
00027C6E <AmiBlitz3.ab2@2755>       MOVE.b #1,firstmline
00027C72 <AmiBlitz3.ab2@2758>     CMP.b #"`",D0
00027C76 <AmiBlitz3.ab2@2759>      BNE.w JL_0_3C56
00027C78 <AmiBlitz3.ab2@2760>     SUBQ.w #1,D1
00027C7A <AmiBlitz3.ab2@2761>     MOVE.b (A2)+,D0
00027C7E <AmiBlitz3.ab2@2762>     CMP.w #$7B,D0
00027C82 <AmiBlitz3.ab2@2763>      BEQ.w JL_0_3BB6
00027C86 <AmiBlitz3.ab2@2764>     CMP.w #$40,D0
00027C8A <AmiBlitz3.ab2@2765>      BNE.w JL_0_3B82
00027C8C <AmiBlitz3.ab2@2766>     MOVEQ.l #$00,D2
00027C92 <AmiBlitz3.ab2@2767>     MOVE.w macnum,D2
00027C94 <AmiBlitz3.ab2@2768>     MOVEA.l A1,A0
00027C96 <AmiBlitz3.ab2@2769>     MOVE.w D1,-(A7)
00027C9C <AmiBlitz3.ab2@2770>      JSR makelong
00027C9E <AmiBlitz3.ab2@2771>     MOVEA.l A0,A1
00027CA0 <AmiBlitz3.ab2@2772>     MOVE.w (A7)+,D1
00027CA4 <AmiBlitz3.ab2@2773>   BRA.w JL_0_3C6C
00027CA8 <AmiBlitz3.ab2@2776>     ORI.w #$20,D0
00027CAC <AmiBlitz3.ab2@2777>     CMP.w #$7A,D0
00027CB0 <AmiBlitz3.ab2@2778>      BCS.w JL_0_3B94
00027CB6 <AmiBlitz3.ab2@2779>   JMP ilconsterr
00027CBA <AmiBlitz3.ab2@2782>     SUBI.w #$30,D0
00027CBE <AmiBlitz3.ab2@2783>     CMP.w #$A,D0
00027CC2 <AmiBlitz3.ab2@2784>      BCS.w JL_0_3BF2
00027CC6 <AmiBlitz3.ab2@2785>     SUBI.w #$27,D0
00027CCA <AmiBlitz3.ab2@2786>     CMP.w #$A,D0
00027CCE <AmiBlitz3.ab2@2787>      BCC.w JL_0_3BB2
00027CD4 <AmiBlitz3.ab2@2788>   JMP ilconsterr
00027CD8 <AmiBlitz3.ab2@2791>   BRA.w JL_0_3BF2
00027CDA <AmiBlitz3.ab2@2794>     MOVE.l A5,-(A7)
00027CDE <AmiBlitz3.ab2@2795>     MOVEM.l D1/A1-A2/A6,-(A7)
00027CE0 <AmiBlitz3.ab2@2796>     MOVEA.l A2,A5
00027CE6 <AmiBlitz3.ab2@2797>      JSR AJL_0_BF6E
00027CEA <AmiBlitz3.ab2@2798>     CMP.w #$7D,D0
00027CEE <AmiBlitz3.ab2@2799>      BEQ.w JL_0_3BD2
00027CF4 <AmiBlitz3.ab2@2800>   JMP syntaxerr
00027CF8 <AmiBlitz3.ab2@2803>     MOVEM.l (A7)+,D1/A1-A2/A6
00027CFA <AmiBlitz3.ab2@2804>     MOVE.l A5,D2
00027CFC <AmiBlitz3.ab2@2805>     SUB.l A2,D2
00027CFE <AmiBlitz3.ab2@2806>     SUB.w D2,D1
00027D00 <AmiBlitz3.ab2@2807>     MOVEA.l A5,A2
00027D06 <AmiBlitz3.ab2@2808>     CLR.w instringon
00027D08 <AmiBlitz3.ab2@2809>     MOVEA.l (A7)+,A5
00027D0A <AmiBlitz3.ab2@2810>     MOVE.l D3,D0
00027D0E <AmiBlitz3.ab2@2811>     BPL.w JL_0_3BF2
00027D14 <AmiBlitz3.ab2@2812>   JMP ilconsterr
00027D16 <AmiBlitz3.ab2@2815>     SUBQ.w #1,D0
00027D1A <AmiBlitz3.ab2@2816>      BPL.w JL_0_3C20
00027D20 <AmiBlitz3.ab2@2820>     MOVE.w numarg,D0
00027D24 <AmiBlitz3.ab2@2821>     DIVU #$A,D0
00027D28 <AmiBlitz3.ab2@2822>     ADDI.w #$30,D0
00027D2A <AmiBlitz3.ab2@2823>     CMPA.l A6,A1
00027D2E <AmiBlitz3.ab2@2824>      BCC.w mbovererr
00027D30 <AmiBlitz3.ab2@2825>     MOVE.b D0,(A1)+
00027D32 <AmiBlitz3.ab2@2826>     SWAP D0
00027D36 <AmiBlitz3.ab2@2827>     ADDI.w #$30,D0
00027D38 <AmiBlitz3.ab2@2828>     CMPA.l A6,A1
00027D3C <AmiBlitz3.ab2@2829>      BCC.w mbovererr
00027D3E <AmiBlitz3.ab2@2830>     MOVE.b D0,(A1)+
00027D42 <AmiBlitz3.ab2@2831>   BRA.w JL_0_3C6C
00027D48 <AmiBlitz3.ab2@2837>     CMP.w numarg,D0
00027D4C <AmiBlitz3.ab2@2838>      BCC.w JL_0_3C6C
00027D4E <AmiBlitz3.ab2@2839>     LSL.w #1,D0
00027D50 <AmiBlitz3.ab2@2840>     MOVE.w D0,D4
00027D52 <AmiBlitz3.ab2@2841>     LSL.w #1,D0
00027D54 <AmiBlitz3.ab2@2842>     ADD.w D4,D0
00027D5A <AmiBlitz3.ab2@2843>     MOVEA.l ptr_macrobuffer_begin,A0
00027D5C <AmiBlitz3.ab2@2844>     ADDA.w D0,A0
00027D60 <AmiBlitz3.ab2@2845>     MOVE.w $4(A0),D4
00027D64 <AmiBlitz3.ab2@2846>      BEQ.w JL_0_3C6C
00027D66 <AmiBlitz3.ab2@2847>     MOVEA.l (A0),A0
00027D68 <AmiBlitz3.ab2@2848>     SUBQ.w #1,D4
00027D6A <AmiBlitz3.ab2@2851>       CMPA.l A6,A1
00027D6E <AmiBlitz3.ab2@2852>        BCC.w mbovererr
00027D72 <AmiBlitz3.ab2@2853>       CMP.w #"@@",(a0)
00027D76 <AmiBlitz3.ab2@2854>        BNE 'l10
00027D7C <AmiBlitz3.ab2@2855>       TST.w ininclude
00027D80 <AmiBlitz3.ab2@2856>        BNE errorjoin
00027D86 <AmiBlitz3.ab2@2859>       MOVE.l sourceline,a0
00027D88 <AmiBlitz3.ab2@2860>       MOVE.l (a0),a0
00027D8E <AmiBlitz3.ab2@2861>       CMP.l #0,a0
00027D92 <AmiBlitz3.ab2@2862>       BNE 'l11
00027D94 <AmiBlitz3.ab2@2863>       MOVEQ #0,d0
00027D9A <AmiBlitz3.ab2@2864>       JSR error
00027DA0 <AmiBlitz3.ab2@2867>       MOVE.l a0,sourceline
00027DA6 <AmiBlitz3.ab2@2868>       ADDQ.l #1,linenumat
00027DAA <AmiBlitz3.ab2@2869>       LEA 9(a0),a0
00027DAC <AmiBlitz3.ab2@2870>       MOVE.l a0,-(a7)
00027DB0 <AmiBlitz3.ab2@2873>       CMP.b #" ",(a0)+
00027DB4 <AmiBlitz3.ab2@2874>        BEQ 'l110
00027DBA <AmiBlitz3.ab2@2875>       CMP.b #";",-1(a0)
00027DBC <AmiBlitz3.ab2@2876>       MOVE.l (a7)+,a0
00027DC0 <AmiBlitz3.ab2@2877>        BEQ 'l111
00027DC2 <AmiBlitz3.ab2@2878>       SUBQ.l #1,d4
00027DC4 <AmiBlitz3.ab2@2881>       MOVE.b (A0)+,(A1)+
00027DC8 <AmiBlitz3.ab2@2882>     DBF D4,JL_0_3C46
00027DCC <AmiBlitz3.ab2@2884>   BRA.w JL_0_3C6C
00027DCE <AmiBlitz3.ab2@2887>     CMPA.l A6,A1
00027DD2 <AmiBlitz3.ab2@2888>      BCC.w mbovererr
00027DD4 <AmiBlitz3.ab2@2889>     MOVE.b D0,(A1)+
00027DD8 <AmiBlitz3.ab2@2890>      BPL.w JL_0_3C6C
00027DDA <AmiBlitz3.ab2@2891>     CMPA.l A6,A1
00027DDE <AmiBlitz3.ab2@2892>      BCC.w mbovererr
00027DE0 <AmiBlitz3.ab2@2893>     MOVE.b (A2)+,(A1)+
00027DE2 <AmiBlitz3.ab2@2894>     SUBQ.w #1,D1
00027DE6 <AmiBlitz3.ab2@2897>   DBF D1,JL_0_3B48
00027DE8 <AmiBlitz3.ab2@2907>   CMPA.l A6,A1
00027DEC <AmiBlitz3.ab2@2908>    BCC.w mbovererr
00027DEE <AmiBlitz3.ab2@2909>   MOVE.b (A5)+,(A1)+
00027DF2 <AmiBlitz3.ab2@2910>    BNE.w JL_0_3C70
00027DF8 <AmiBlitz3.ab2@2911>   MOVEA.l myline,A5
00027DFE <AmiBlitz3.ab2@2912>   MOVE.l myoline,D0
00027E02 <AmiBlitz3.ab2@2913>    BEQ.w JL_0_3C9C
00027E04 <AmiBlitz3.ab2@2914>   SUBQ.l #1,d0
00027E06 <AmiBlitz3.ab2@2915>   MOVEA.l D0,A1
00027E0C <AmiBlitz3.ab2@2916>   MOVE.l macrobuffer_size,D0
00027E12 <AmiBlitz3.ab2@2917>   MOVEA.l _execbase,A6
00027E18 <AmiBlitz3.ab2@2918>   MOVE.l mempool,a0
00027E1C <AmiBlitz3.ab2@2919>   JSR _FreePooled(A6)
00027E20 <AmiBlitz3.ab2@2922> BRA.w JL_0_3A46
00027E22 <AmiBlitz3.ab2@2925>   MOVEA.l (A7)+,A5
00027E24 <AmiBlitz3.ab2@2926> RTS
00027E2A <AmiBlitz3.ab2@2930>   MOVE.l myline,D0
00027E2E <AmiBlitz3.ab2@2931>   BEQ.w JL_0_3CC4
00027E30 <AmiBlitz3.ab2@2932>   SUBQ.l #1,d0
00027E36 <AmiBlitz3.ab2@2933>   CLR.l myline
00027E38 <AmiBlitz3.ab2@2934>   MOVEA.l D0,A1
00027E3E <AmiBlitz3.ab2@2935>   MOVE.l macrobuffer_size,D0
00027E44 <AmiBlitz3.ab2@2936>   MOVEA.l _execbase,A6
00027E4A <AmiBlitz3.ab2@2937>   MOVE.l mempool,a0
00027E4E <AmiBlitz3.ab2@2938> JMP _FreePooled(A6)
00027E50 <AmiBlitz3.ab2@2941> RTS
00027E52 <AmiBlitz3.ab2@2945>   MOVEQ.l #$00,D2
00027E56 <AmiBlitz3.ab2@2948>   ADDQ.w #1,4(a0)
00027E58 <AmiBlitz3.ab2@2949>    MOVE.b (A4)+,D0
00027E5C <AmiBlitz3.ab2@2951>    BEQ exit1
00027E60 <AmiBlitz3.ab2@2952>    BPL.w JL_0_3CD8
00027E64 <AmiBlitz3.ab2@2953>   ADDQ.w #1,4(a0)
00027E66 <AmiBlitz3.ab2@2954>   ADDQ.w #1,A4
00027E6A <AmiBlitz3.ab2@2955> BRA.w JL_0_3CC8
00027E70 <AmiBlitz3.ab2@2958>    TST.w instringon
00027E74 <AmiBlitz3.ab2@2959>    BNE 'lnom
00027E78 <AmiBlitz3.ab2@2960>    CMP.b #";",d0
00027E7C <AmiBlitz3.ab2@2961>    BEQ exit2
00027E80 <AmiBlitz3.ab2@2962>    CMP.b #":",d0
00027E84 <AmiBlitz3.ab2@2963>    BEQ exit2
00027E88 <AmiBlitz3.ab2@2966>   CMP.b #$22,D0
00027E8C <AmiBlitz3.ab2@2967>    BNE.w JL_0_3CEA
00027E92 <AmiBlitz3.ab2@2968>   NOT.w instringon
00027E96 <AmiBlitz3.ab2@2969> BRA.w JL_0_3CC8
00027E9C <AmiBlitz3.ab2@2973>   TST.w instringon
00027EA0 <AmiBlitz3.ab2@2974>    BNE.w JL_0_3CC8
00027EA4 <AmiBlitz3.ab2@2975>    CMP.b #"@",d0
00027EA8 <AmiBlitz3.ab2@2976>    BNE 'l10
00027EAC <AmiBlitz3.ab2@2977>    CMP.b #"@",(a4)
00027EB0 <AmiBlitz3.ab2@2978>    BNE 'l10
00027EB6 <AmiBlitz3.ab2@2979>    TST.w ininclude
00027EBA <AmiBlitz3.ab2@2980>    BNE errorjoin
00027EC0 <AmiBlitz3.ab2@2981>    MOVE.l sourceline3,a4
00027EC6 <AmiBlitz3.ab2@2982>    CMP.l #0,a4
00027ECA <AmiBlitz3.ab2@2983>    BNE 'l11
00027ED0 <AmiBlitz3.ab2@2984>    MOVE.l sourceline,a4
00027ED2 <AmiBlitz3.ab2@2987>   MOVE.l (a4),a4
00027ED8 <AmiBlitz3.ab2@2988>       CMP.l #0,a4
00027EDC <AmiBlitz3.ab2@2989>       BNE 'l12
00027EDE <AmiBlitz3.ab2@2990>       MOVEQ #0,d0
00027EE4 <AmiBlitz3.ab2@2991>       JSR error
00027EEA <AmiBlitz3.ab2@2994>    MOVE.l a4,sourceline3
00027EEE <AmiBlitz3.ab2@2995>    LEA 9(a4),a4
00027EF0 <AmiBlitz3.ab2@2996>    MOVEQ #",",d0
00027EF4 <AmiBlitz3.ab2@2999>   CMP.b #$2C,D0
00027EF8 <AmiBlitz3.ab2@3000>    BNE.w JL_0_3D06
00027EFA <AmiBlitz3.ab2@3001>   TST.w D2
00027EFE <AmiBlitz3.ab2@3002>    BEQ.w JL_0_3D30
00027F02 <AmiBlitz3.ab2@3003> BRA.w JL_0_3CC8
00027F06 <AmiBlitz3.ab2@3007>    CMP.b #$7B,D0                                           ;"{"
00027F0A <AmiBlitz3.ab2@3008>    BEQ.w 'l10
00027F0E <AmiBlitz3.ab2@3009>   CMP.b #$28,D0                                            ;"("
00027F12 <AmiBlitz3.ab2@3012>    BNE.w JL_0_3D14
00027F14 <AmiBlitz3.ab2@3013>   ADDQ.w #1,D2
00027F18 <AmiBlitz3.ab2@3014> BRA.w JL_0_3CC8
00027F1C <AmiBlitz3.ab2@3017>   CMP.b #$7D,D0                                           ;"}"
00027F20 <AmiBlitz3.ab2@3018>    BNE.w JL_0_3D22
00027F22 <AmiBlitz3.ab2@3019>  TST.w D2
00027F26 <AmiBlitz3.ab2@3020>    BEQ.w JL_0_3D30
00027F2A <AmiBlitz3.ab2@3024>    CMP.b #$7D,D0                                           ;"}"
00027F2E <AmiBlitz3.ab2@3025>    BEQ.w 'l10
00027F32 <AmiBlitz3.ab2@3026>   CMP.b #$29,D0                                            ;")"
00027F36 <AmiBlitz3.ab2@3029>    BNE.w JL_0_3CC8
00027F38 <AmiBlitz3.ab2@3030>   SUBQ.w #1,D2
00027F3C <AmiBlitz3.ab2@3031> BRA.w JL_0_3CC8
00027F3E <AmiBlitz3.ab2@3034> RTS
00027F40 <AmiBlitz3.ab2@3038>       SUBQ.l #1,a4
00027F46 <AmiBlitz3.ab2@3039>       CLR.l sourceline3
00027F48 <AmiBlitz3.ab2@3040> RTS
00027F4A <AmiBlitz3.ab2@3044>       MOVEQ #0,d0
00027F4C <AmiBlitz3.ab2@3045>       SUBQ.l #1,a4
00027F52 <AmiBlitz3.ab2@3046>       CLR.l sourceline3
00027F54 <AmiBlitz3.ab2@3047> RTS
00027F58 <AmiBlitz3.ab2@3051>   CMP.b #$7B,D0                                            ;"{"
00027F5C <AmiBlitz3.ab2@3052>   BEQ.w JL_0_3D3E
00027F60 <AmiBlitz3.ab2@3053>   CMP.b #$28,D0                                            ;"("
00027F62 <AmiBlitz3.ab2@3056> RTS
00027F66 <AmiBlitz3.ab2@3060>   CMP.b #$7D,D0                                            ;"}"
00027F6A <AmiBlitz3.ab2@3061>   BEQ.w JL_0_3D4C
00027F6E <AmiBlitz3.ab2@3062>   CMP.b #$29,D0                                            ;")"
00027F70 <AmiBlitz3.ab2@3065> RTS
00027F72 <AmiBlitz3.ab2@3069> stopit:     Ds.w 1
00027F74 <AmiBlitz3.ab2@3070> clrreq:     Ds.w 1
00027F78 <AmiBlitz3.ab2@3091>   MOVE.w clrreq(PC),D0
00027F7C <AmiBlitz3.ab2@3092>    BEQ.w close_compilewin__skip
00027FA6 <AmiBlitz3.ab2@3094>   !basic
00027FE2 <AmiBlitz3.ab2@3095>   If Peek.l(Addr Window(4))<>0 Then WZCloseWindow 4        ;turn off the requester
00028000 <AmiBlitz3.ab2@3096>   !asm
00028006 <AmiBlitz3.ab2@3097>   LEA clrreq,a0
00028008 <AmiBlitz3.ab2@3098>   NOT.w (a0)                                               ;reass
0002800E <AmiBlitz3.ab2@3099>   MOVEA.l ptr_ThisTask,A0
00028012 <AmiBlitz3.ab2@3100>   CLR.l $1E(A0)
00028016 <AmiBlitz3.ab2@3101>   CLR.l $2A(A0)
00028018 <AmiBlitz3.ab2@3104> RTS
0002801A <AmiBlitz3.ab2@3107> intsused:  Ds.w 1
00028022 <AmiBlitz3.ab2@3111>   MOVE.w #-1,blitzoff
00028028 <AmiBlitz3.ab2@3112>   CLR.w intsused
0002802E <AmiBlitz3.ab2@3113>   CLR.w anyerrs
00028034 <AmiBlitz3.ab2@3114>   CLR.w blitzmode
0002803A <AmiBlitz3.ab2@3115>   CLR.w dontwrite                                              ;nomemleft
00028040 <AmiBlitz3.ab2@3116>   CLR.w constmode
00028046 <AmiBlitz3.ab2@3117>   CLR.w cmake
0002804C <AmiBlitz3.ab2@3118>   CLR.w cfetchmode
00028052 <AmiBlitz3.ab2@3119>   CLR.l intdata1
00028058 <AmiBlitz3.ab2@3120>   CLR.w fuckpos
0002805E <AmiBlitz3.ab2@3121>   CLR.w procnum
00028064 <AmiBlitz3.ab2@3122>   CLR.w procnum2
0002806A <AmiBlitz3.ab2@3123>   CLR.w dfetch
00028070 <AmiBlitz3.ab2@3124>   CLR.l titleat
00028076 <AmiBlitz3.ab2@3125>   CLR.b usedpath
0002807C <AmiBlitz3.ab2@3126>   CLR.b path2
00028082 <AmiBlitz3.ab2@3127>   CLR.w inerr
00028088 <AmiBlitz3.ab2@3128>   CLR.w intlevel
0002808E <AmiBlitz3.ab2@3129>   CLR.l cont_pc
00028094 <AmiBlitz3.ab2@3130>   CLR.l cont_pc2
0002809A <AmiBlitz3.ab2@3131>   CLR.l lastcontlink
000280A4 <AmiBlitz3.ab2@3132>   MOVE.l destbufferstart,destpointer
000280AE <AmiBlitz3.ab2@3133>   MOVE.l destbufferstart,bigpc
000280B8 <AmiBlitz3.ab2@3134>   MOVE.l destbufferend,libend
000280C2 <AmiBlitz3.ab2@3135>   MOVE.l data1start,data1
000280CC <AmiBlitz3.ab2@3136>   MOVE.l data2at,data2
000280D4 <AmiBlitz3.ab2@3137>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
000280DC <AmiBlitz3.ab2@3138>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
000280E2 <AmiBlitz3.ab2@3139>   CLR.w oldvcodelen
000280E8 <AmiBlitz3.ab2@3140>   CLR.b lastgloballabel                                    ;lastbiglab org source
000280EA <AmiBlitz3.ab2@3141> RTS
000280EC <AmiBlitz3.ab2@3144> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
000280F2 <AmiBlitz3.ab2@3148>   LEA  clrreq,a1
000280F6 <AmiBlitz3.ab2@3149>   MOVE.w #2000,(a1)
00028120 <AmiBlitz3.ab2@3150>   !basic
00028134 <AmiBlitz3.ab2@3151>   If CLIMode=False
00028150 <AmiBlitz3.ab2@3152>     FindScreen 0
000281AE <AmiBlitz3.ab2@3153>     WZWindow 4,?wzgui,64,-2,-2,-2,-2,4
000281B6 <AmiBlitz3.ab2@3157>   calcpro_old.l = 0
000281C2 <AmiBlitz3.ab2@3158>   typ_old.l     = -1
000281CE <AmiBlitz3.ab2@3159>   pass_old.l    = -1
000281EC <AmiBlitz3.ab2@3160>   !asm
000281F2 <AmiBlitz3.ab2@3161>   CLR.w stopit
000281F4 <AmiBlitz3.ab2@3162> RTS
000281FA <AmiBlitz3.ab2@3166>   CLR.w storedebugmode
00028200 <AmiBlitz3.ab2@3167>   CLR.b iserror
00028204 <AmiBlitz3.ab2@3168>   BSR.w compilerequester
0002820E <AmiBlitz3.ab2@3170>   MOVE.l #0,globallinecount
00028214 <AmiBlitz3.ab2@3171>   JSR check_of_same_source
00028218 <AmiBlitz3.ab2@3172>   BSR.w call_setpointerbusy
0002821C <AmiBlitz3.ab2@3173>   BSR.w setcvars
00028224 <AmiBlitz3.ab2@3174>   MOVE.w #$8000,globalvarpointer
0002822E <AmiBlitz3.ab2@3175>   MOVE.l #newtype_quick,defaulttype
00028234 <AmiBlitz3.ab2@3176>   MOVE.l A7,passstack
0002823E <AmiBlitz3.ab2@3177>   MOVE.l #firstitem_,sourceline
00028248 <AmiBlitz3.ab2@3178>   MOVE.w numlines_org,linesleft
00028252 <AmiBlitz3.ab2@3179>   MOVE.l numlines,numlines2
00028258 <AmiBlitz3.ab2@3180>   ADDQ.w #1,linesleft
0002825E <AmiBlitz3.ab2@3181>   ADDQ.l #1,numlines2
00028268 <AmiBlitz3.ab2@3182>   MOVE.l #-1,linenumat
0002826C <AmiBlitz3.ab2@3183>   BSR.w resetlibs
00028270 <AmiBlitz3.ab2@3184>   BSR.w Aclearallvars
00028276 <AmiBlitz3.ab2@3185>   LEA progress_per_line+2,A0
00028278 <AmiBlitz3.ab2@3186>   MOVEQ.l #$03,D0
0002827A <AmiBlitz3.ab2@3189>     CLR.w (A0)+
0002827E <AmiBlitz3.ab2@3190>   DBF D0,JL_0_40EC
00028284 <AmiBlitz3.ab2@3193>   LEA _include,a0
00028288 <AmiBlitz3.ab2@3194>   MOVEM.l a0-a6/d0-d7,-(a7)
0002828E <AmiBlitz3.ab2@3195>   LEA ptr_parameterstore,a1
00028290 <AmiBlitz3.ab2@3198>     MOVE.b (a0)+,(a1)+
00028294 <AmiBlitz3.ab2@3199>   BNE 'l1b
00028296 <AmiBlitz3.ab2@3201>   MOVEQ #9,d2
0002829C <AmiBlitz3.ab2@3202>   JSR findlabel2
000282A0 <AmiBlitz3.ab2@3203>   BNE 'd
000282A8 <AmiBlitz3.ab2@3204>   MOVE.l #0,8(a2)
000282AC <AmiBlitz3.ab2@3205>   MOVEM.l (a7)+,a0-a6/d0-d7
000282B0 <AmiBlitz3.ab2@3206> BRA 'd2
000282B6 <AmiBlitz3.ab2@3209>   JSR addlabelhash
000282BE <AmiBlitz3.ab2@3210>   MOVE.l #$1,$4(A2)
000282C6 <AmiBlitz3.ab2@3211>   MOVE.l #0,8(a2)
000282CA <AmiBlitz3.ab2@3212>   MOVEM.l (a7)+,a0-a6/d0-d7
000282D0 <AmiBlitz3.ab2@3215>   LEA _debug,a0
000282D4 <AmiBlitz3.ab2@3216>   MOVEM.l a0-a6/d0-d7,-(a7)
000282DA <AmiBlitz3.ab2@3217>   LEA ptr_parameterstore,a1
000282DC <AmiBlitz3.ab2@3220>     MOVE.b (a0)+,(a1)+
000282E0 <AmiBlitz3.ab2@3221>   BNE 'l9b
000282E2 <AmiBlitz3.ab2@3223>   MOVEQ #7,d2
000282E8 <AmiBlitz3.ab2@3224>   JSR findlabel2
000282EC <AmiBlitz3.ab2@3225>   BNE 'd9
000282F0 <AmiBlitz3.ab2@3226>   MOVE.b debugmode(PC),D0
000282F2 <AmiBlitz3.ab2@3227>   EXT.w d0
000282F4 <AmiBlitz3.ab2@3228>   EXT.l d0
000282F8 <AmiBlitz3.ab2@3229>   MOVE.l d0,8(a2)
000282FC <AmiBlitz3.ab2@3230>   MOVEM.l (a7)+,a0-a6/d0-d7
00028300 <AmiBlitz3.ab2@3231> BRA 'd9b
00028306 <AmiBlitz3.ab2@3234>   JSR addlabelhash
0002830E <AmiBlitz3.ab2@3235>   MOVE.l #$1,$4(A2)
00028312 <AmiBlitz3.ab2@3236>   MOVE.b debugmode(PC),D0
00028314 <AmiBlitz3.ab2@3237>   EXT.w d0
00028316 <AmiBlitz3.ab2@3238>   EXT.l d0
0002831A <AmiBlitz3.ab2@3239>   MOVE.l d0,8(a2)
0002831E <AmiBlitz3.ab2@3240>   MOVEM.l (a7)+,a0-a6/d0-d7
00028324 <AmiBlitz3.ab2@3243>   MOVE.l #firstitem_,a0
00028326 <AmiBlitz3.ab2@3244>   MOVE.l (a0),a0
0002832A <AmiBlitz3.ab2@3245>   LEA 9(a0),a0
00028332 <AmiBlitz3.ab2@3246>   MOVE.w #0,exdebug
00028338 <AmiBlitz3.ab2@3247>   TST.b debugmode
0002833C <AmiBlitz3.ab2@3248>    BEQ 'l10
0002833E <AmiBlitz3.ab2@3251>   MOVE.b (a0)+,d0
00028342 <AmiBlitz3.ab2@3252>    BEQ 'l10
00028346 <AmiBlitz3.ab2@3253>   CMP.b #$20,d0
0002834A <AmiBlitz3.ab2@3254>    BEQ 'l2
0002834C <AmiBlitz3.ab2@3255>   SUBQ.l #1,a0
00028352 <AmiBlitz3.ab2@3256>   CMP.l #"DEBU",(a0)
00028356 <AmiBlitz3.ab2@3257>    BNE 'l10
0002835C <AmiBlitz3.ab2@3258>   CMP.b #"G",4(a0)
00028360 <AmiBlitz3.ab2@3259>    BNE 'l10
00028368 <AmiBlitz3.ab2@3260>   MOVE.w #$0,debugversion
00028370 <AmiBlitz3.ab2@3261>   MOVE.b #1,exdebug
00028376 <AmiBlitz3.ab2@3264>   LEA nops4,A0
0002837C <AmiBlitz3.ab2@3265>   LEA dataget,A1
00028382 <AmiBlitz3.ab2@3266>   JSR pokecode2                                            ;write intro nops
00028388 <AmiBlitz3.ab2@3267>   MOVE.l #$01010101,d1
0002838E <AmiBlitz3.ab2@3268>   JSR writedatalong                                        ;for the 4 tempregs
00028394 <AmiBlitz3.ab2@3269>   JSR writedatalong
0002839A <AmiBlitz3.ab2@3270>   JSR writedatalong
000283A0 <AmiBlitz3.ab2@3271>   JSR writedatalong
000283A6 <AmiBlitz3.ab2@3272>   TST.b saved0
000283AA <AmiBlitz3.ab2@3273>    BEQ 'l1
000283B0 <AmiBlitz3.ab2@3274>   MOVE.l #$4e714e71,d1
000283B6 <AmiBlitz3.ab2@3275>   JSR writelong                                            ;add 2 nops
000283BC <AmiBlitz3.ab2@3276>   MOVE.l #$4e714e71,d1
000283C2 <AmiBlitz3.ab2@3277>   JSR writelong                                            ;add 2 nops
000283C8 <AmiBlitz3.ab2@3278>   MOVE.l #$4e714e71,d1
000283CE <AmiBlitz3.ab2@3279>   JSR writelong                                            ;add 2 nops
000283D4 <AmiBlitz3.ab2@3280>    MOVE.l #$4e714e71,d1
000283DA <AmiBlitz3.ab2@3281>   JSR writelong                                            ;add 2 nops
000283DE <AmiBlitz3.ab2@3284>   MOVE.b debugmode(PC),D1
000283E2 <AmiBlitz3.ab2@3285>    BEQ.b JL_0_4132
000283EC <AmiBlitz3.ab2@3286>   MOVE.b debugmode,storedebugmode
000283F0 <AmiBlitz3.ab2@3287>   MOVE.w #$FFDC,D1
000283F4 <AmiBlitz3.ab2@3288>    BSR.w uselib
000283FA <AmiBlitz3.ab2@3289>   TST.w debugversion                                       ;make a version for debugger
000283FE <AmiBlitz3.ab2@3290>    BNE.b JL_0_412A
00028402 <AmiBlitz3.ab2@3294>   MOVE.w #$FA3C,D1
00028406 <AmiBlitz3.ab2@3295>    BSR.w uselib
0002840A <AmiBlitz3.ab2@3296>   MOVE.w #$0001,D1
0002840E <AmiBlitz3.ab2@3297>    BSR.w uselib
00028412 <AmiBlitz3.ab2@3298> BRA.b JL_0_4132
00028416 <AmiBlitz3.ab2@3301>   MOVE.w #$FA32,D1
0002841A <AmiBlitz3.ab2@3302>   BSR.w uselib
0002841E <AmiBlitz3.ab2@3305>   BSR.w nextline
00028424 <AmiBlitz3.ab2@3306>   CLR.l linenum
0002842A <AmiBlitz3.ab2@3307>   CLR.l stacktrack
00028430 <AmiBlitz3.ab2@3310>   ADDQ.l #1,linenum
0002843A <AmiBlitz3.ab2@3311>   MOVE.l destpointer,destpointer2
00028440 <AmiBlitz3.ab2@3312>   MOVE.l a5,sourceline2
00028444 <AmiBlitz3.ab2@3313>   BSR.w compile_line                                        ;compile pass
00028448 <AmiBlitz3.ab2@3316>   BSR.w nextline
0002844C <AmiBlitz3.ab2@3317>    BNE.w JL_0_4136
00028450 <AmiBlitz3.ab2@3318>   BSR.w JUMP_do_runerrson
00028454 <AmiBlitz3.ab2@3319>   BSR.w pointchk
0002845A <AmiBlitz3.ab2@3320>   TST.b objectcount
0002845E <AmiBlitz3.ab2@3321>    BNE macenderr
00028464 <AmiBlitz3.ab2@3322>   CLR.l linenumat
00028468 <AmiBlitz3.ab2@3323>   BSR.w errchx2
00028472 <AmiBlitz3.ab2@3324>   CMP.l #-1,bssend
00028476 <AmiBlitz3.ab2@3325>    BNE 'l30
00028480 <AmiBlitz3.ab2@3326>   MOVE.l destpointer,bssend                                ;compile end
00028486 <AmiBlitz3.ab2@3329>   MOVE.l destpointer,d0
00028490 <AmiBlitz3.ab2@3330>   CMP.l #-1,bssstart
00028494 <AmiBlitz3.ab2@3331>   BNE 'lnf6
0002849E <AmiBlitz3.ab2@3332>   CMP.l #-1,chipstart
000284A2 <AmiBlitz3.ab2@3333>   BNE 'lnf6
000284A6 <AmiBlitz3.ab2@3334> BRA 'leven4
000284AC <AmiBlitz3.ab2@3337>   MOVE.l destpointer,d1
000284AE <AmiBlitz3.ab2@3338>   ADDQ.l #3,d1
000284B4 <AmiBlitz3.ab2@3339>   AND.l #$fffffffc,d1                                      ;bug ?
000284BA <AmiBlitz3.ab2@3340>   MOVE.l d1,destpointer
000284C4 <AmiBlitz3.ab2@3343>   MOVE.l destpointer,codeend
000284CE <AmiBlitz3.ab2@3344>   CMP.l #-1,chipend
000284D2 <AmiBlitz3.ab2@3345>   BNE 'l31
000284DC <AmiBlitz3.ab2@3346>   MOVE.l destpointer,chipend
000284E2 <AmiBlitz3.ab2@3349>   MOVE.l destpointer,d1
000284E4 <AmiBlitz3.ab2@3350>   ADDQ.l #1,d1
000284EA <AmiBlitz3.ab2@3351>   AND.l #$fffffffe,d1                                     ;new evenexit
000284F0 <AmiBlitz3.ab2@3352>   MOVE.l d1,destpointer
000284F4 <AmiBlitz3.ab2@3353>   MOVE.b debugmode(PC),D1
000284F8 <AmiBlitz3.ab2@3354>    BEQ.b JL_0_4180
000284FC <AmiBlitz3.ab2@3355>    BSR.w debugstuff
00028500 <AmiBlitz3.ab2@3356>   MOVE.w #$C300,D1
00028506 <AmiBlitz3.ab2@3357>    JSR Atokejsr
0002850A <AmiBlitz3.ab2@3358>    BSR.w debugstuff
0002850E <AmiBlitz3.ab2@3359>   MOVE.l eopcode(PC),D1
00028514 <AmiBlitz3.ab2@3360>    JSR writelong
00028518 <AmiBlitz3.ab2@3361>   MOVE.l lastcontlink(PC),D1
0002851C <AmiBlitz3.ab2@3362>    BEQ.b JL_0_4180
0002851E <AmiBlitz3.ab2@3363>   MOVEA.l D1,A0
00028522 <AmiBlitz3.ab2@3364>   CLR.w $6(A0)
0002852C <AmiBlitz3.ab2@3370>   MOVE.l destpointer,endop                                ;where end goes...
00028532 <AmiBlitz3.ab2@3372>   TST.w blitzmode
00028536 <AmiBlitz3.ab2@3373>   BEQ.w JL_0_4198
0002853A <AmiBlitz3.ab2@3374>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00028540 <AmiBlitz3.ab2@3377>   TST.w intsused
00028544 <AmiBlitz3.ab2@3378>   BEQ.b JL_0_41AA
00028548 <AmiBlitz3.ab2@3379>   MOVE.w #$C105,D1                                        ;interupts off!
0002854E <AmiBlitz3.ab2@3380>   JSR tokejsr2
00028552 <AmiBlitz3.ab2@3383>   BSR.w calcstatic
00028558 <AmiBlitz3.ab2@3384>   MOVE.w D4,numstatic
0002855E <AmiBlitz3.ab2@3385>   MOVE.l D3,staticdata
00028562 <AmiBlitz3.ab2@3386>    BSR.w calcmaxs
00028568 <AmiBlitz3.ab2@3388>   TST.l tokeslist
0002856C <AmiBlitz3.ab2@3389>    BEQ.b JL_0_41F8
00028572 <AmiBlitz3.ab2@3390>   MOVE.w gotocode,D1                                       ;jmp!
00028578 <AmiBlitz3.ab2@3391>    JSR writeword
00028582 <AmiBlitz3.ab2@3392>   MOVE.l destpointer,endjmpat
00028586 <AmiBlitz3.ab2@3393>    BSR.w addoff
0002858C <AmiBlitz3.ab2@3394>    JSR writelong                                           
00028590 <AmiBlitz3.ab2@3396>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00028596 <AmiBlitz3.ab2@3400>   TST.w dontwrite
0002859A <AmiBlitz3.ab2@3401>    BNE.b JL_0_41F8
0002859E <AmiBlitz3.ab2@3402>   MOVEA.l endjmpat(PC),A4
000285A4 <AmiBlitz3.ab2@3403>   MOVE.l destpointer,(A4)
000285AA <AmiBlitz3.ab2@3406>   TST.b returncode
000285AE <AmiBlitz3.ab2@3407>   BEQ 'l2
000285B2 <AmiBlitz3.ab2@3408>   MOVE.w #$2e80,d1
000285B8 <AmiBlitz3.ab2@3409>   JSR writeword
000285BE <AmiBlitz3.ab2@3412>   JSR JL_0_B98A
000285C4 <AmiBlitz3.ab2@3413>   TST.b returncode
000285C8 <AmiBlitz3.ab2@3414>   BEQ 'l3
000285CC <AmiBlitz3.ab2@3415>   MOVE.w #$4e75,d1
000285D2 <AmiBlitz3.ab2@3416>   JSR writeword
000285D6 <AmiBlitz3.ab2@3417> BRA 'l1
000285DC <AmiBlitz3.ab2@3420>   MOVE.l #$70004E75,D1
000285E2 <AmiBlitz3.ab2@3421>   JSR writelong                                            ;write moveq #0,d0:rts
000285E8 <AmiBlitz3.ab2@3424>   JSR JL_0_B73E
000285EC <AmiBlitz3.ab2@3425>   BSR.w asmfixer
000285F0 <AmiBlitz3.ab2@3426>   BSR.w close_compilewin
000285F4 <AmiBlitz3.ab2@3427> BRA.w call_setpointernormal
000285FA <AmiBlitz3.ab2@3431> JMP do_runerrson
000285FC <AmiBlitz3.ab2@3435> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
000285FE <AmiBlitz3.ab2@3436>             Dc.b $4E,$40                                   ;TRAP  #00
00028602 <AmiBlitz3.ab2@3438> endjmpat:   Ds.l 1
00028608 <AmiBlitz3.ab2@3442>   MOVEA.l newtype_string,A2
0002860E <AmiBlitz3.ab2@3443>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00028612 <AmiBlitz3.ab2@3446>     CMPA.w #$0,A2
00028616 <AmiBlitz3.ab2@3447>      BEQ.w pointchk_done
0002861A <AmiBlitz3.ab2@3448>     CMP.l $4(A2),D0
0002861E <AmiBlitz3.ab2@3449>      BNE.w pointchk_next
00028626 <AmiBlitz3.ab2@3450>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
0002862A <AmiBlitz3.ab2@3451> BRA.w notypeerr
0002862C <AmiBlitz3.ab2@3454>     MOVEA.l (A2),A2
00028630 <AmiBlitz3.ab2@3455> BRA.w pointchk_loop
00028632 <AmiBlitz3.ab2@3458> RTS
00028638 <AmiBlitz3.ab2@3462>   LEA labelbase,A2
0002863A <AmiBlitz3.ab2@3466>   MOVE.l (A2),D0                                           ;testlabels
0002863E <AmiBlitz3.ab2@3467>    BEQ.w errchx2_done
00028640 <AmiBlitz3.ab2@3468>   MOVEA.l D0,A2
00028644 <AmiBlitz3.ab2@3469>   MOVE.l $4(A2),D0
00028648 <AmiBlitz3.ab2@3470>   BTST #$0,D0
0002864C <AmiBlitz3.ab2@3471>    BNE.w errchx2_loop
00028650 <AmiBlitz3.ab2@3472>   MOVE.l $8(A2),D0
00028654 <AmiBlitz3.ab2@3473>    BNE.w errchx2_loop
0002865C <AmiBlitz3.ab2@3474>   MOVE.w $10(A2),linenumat+2
0002865E <AmiBlitz3.ab2@3475>   MOVEQ #0,d0
00028662 <AmiBlitz3.ab2@3476>   MOVE.b $12(a2),d0
0002866A <AmiBlitz3.ab2@3477>   MOVE.w 0(a2,d0),linenumat
00028670 <AmiBlitz3.ab2@3478> JMP nolaberr                                               ;label not found
00028676 <AmiBlitz3.ab2@3481>   MOVE.l concomsp,D0
0002867C <AmiBlitz3.ab2@3482>   CMP.l #concomstack,D0
00028680 <AmiBlitz3.ab2@3483>    BNE.w chxerr4
00028686 <AmiBlitz3.ab2@3484>   MOVE.w connest,D1
0002868A <AmiBlitz3.ab2@3485>    BNE.w chxerr4
0002868C <AmiBlitz3.ab2@3488>   MOVE.l D1,-(A7)
00028692 <AmiBlitz3.ab2@3489>   MOVE.l firstsel,D1
00028696 <AmiBlitz3.ab2@3490>    BNE.w errchx_err1
0002869C <AmiBlitz3.ab2@3491>   MOVE.l firstrep,D1
000286A0 <AmiBlitz3.ab2@3492>    BNE.w errchx_err2
000286A6 <AmiBlitz3.ab2@3493>   MOVE.w intstring,D1
000286AA <AmiBlitz3.ab2@3494>    BNE.w errchx_err3
000286AE <AmiBlitz3.ab2@3495>   MOVE.l 4(a7),d1
000286B4 <AmiBlitz3.ab2@3496>   MOVE.w proceduremode,D1
000286B8 <AmiBlitz3.ab2@3497>    BNE.w errchx_err6
000286BE <AmiBlitz3.ab2@3498>   MOVE.l firstiff,d1
000286C2 <AmiBlitz3.ab2@3499>    BNE errchx_err5
000286C8 <AmiBlitz3.ab2@3500>   MOVE.l firstfor,D1
000286CC <AmiBlitz3.ab2@3501>    BNE.w errchx_err7
000286CE <AmiBlitz3.ab2@3502>   MOVE.l (A7)+,D1
000286D0 <AmiBlitz3.ab2@3503> RTS
000286DA <AmiBlitz3.ab2@3507>   MOVE.l sellineat,linenumat
000286E0 <AmiBlitz3.ab2@3508> JMP selerrz
000286EA <AmiBlitz3.ab2@3511>   MOVE.l replineat,linenumat
000286F0 <AmiBlitz3.ab2@3512> JMP unterr3
000286FA <AmiBlitz3.ab2@3515>   MOVE.l intlineat,linenumat
00028700 <AmiBlitz3.ab2@3516> JMP interr2
0002870A <AmiBlitz3.ab2@3519>   MOVE.l iflineat,linenumat
00028710 <AmiBlitz3.ab2@3520> JMP noenderr
0002871A <AmiBlitz3.ab2@3523>   MOVE.l prolineat,linenumat
00028720 <AmiBlitz3.ab2@3524> JMP nopenderr
0002872A <AmiBlitz3.ab2@3527>   MOVE.l forlineat,linenumat
00028730 <AmiBlitz3.ab2@3528> JMP nonexterr
0002873A <AmiBlitz3.ab2@3531>   MOVE.l ciflineat,linenumat
00028740 <AmiBlitz3.ab2@3532> JMP nocenderr
0002874A <AmiBlitz3.ab2@3536>   MOVE.l data1,maxsat
0002874C <AmiBlitz3.ab2@3537>   MOVEQ.l #$00,D4
00028752 <AmiBlitz3.ab2@3538>   MOVEA.l libpointer,A2
00028756 <AmiBlitz3.ab2@3541>     CMPA.w #$0,A2
0002875A <AmiBlitz3.ab2@3542>      BEQ.w calcmaxs_done
0002875E <AmiBlitz3.ab2@3543>     TST.w $C(A2)
00028762 <AmiBlitz3.ab2@3544>      BPL.w calcmaxs_next
00028766 <AmiBlitz3.ab2@3545>     MOVE.l $12(A2),D0
0002876A <AmiBlitz3.ab2@3546>     TST.w -$2(A2,D0.L)
0002876E <AmiBlitz3.ab2@3547>      BEQ.w calcmaxs_next
00028770 <AmiBlitz3.ab2@3548>     ADDQ.w #1,D4
00028774 <AmiBlitz3.ab2@3549>     MOVE.w -$6(A2,D0.L),D1
00028778 <AmiBlitz3.ab2@3550>     BSR.w pokedata1
0002877A <AmiBlitz3.ab2@3551>     MOVEQ.l #$01,D1
0002877E <AmiBlitz3.ab2@3552>     MOVE.w -$2(A2,D0.L),D2
00028780 <AmiBlitz3.ab2@3553>     LSL.w D2,D1
00028784 <AmiBlitz3.ab2@3554>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00028788 <AmiBlitz3.ab2@3555>     BSR.w writedatalong
0002878A <AmiBlitz3.ab2@3558>     MOVEA.l (A2),A2
0002878E <AmiBlitz3.ab2@3559> BRA.w calcmaxs_loop
00028794 <AmiBlitz3.ab2@3562>   MOVE.w D4,maxsused
00028798 <AmiBlitz3.ab2@3563>    BEQ.w calcmaxs_done2
0002879C <AmiBlitz3.ab2@3564>   MOVE.w #$FFFA,D1                                         ;;use memlib
000287A0 <AmiBlitz3.ab2@3565> BRA.w uselib
000287A2 <AmiBlitz3.ab2@3568> RTS
000287A8 <AmiBlitz3.ab2@3572>    MOVE.l a7,stackaddr
000287AC <AmiBlitz3.ab2@3573>    BSR.w compile_term
000287B0 <AmiBlitz3.ab2@3574>    BSR.w reget
000287B4 <AmiBlitz3.ab2@3575>    BNE.w illeolerr
000287BA <AmiBlitz3.ab2@3576>    TST.w dontwrite
000287BE <AmiBlitz3.ab2@3577>    BNE 'l1
000287C4 <AmiBlitz3.ab2@3578>    TST.l stacktrack
000287C8 <AmiBlitz3.ab2@3579>    BNE errormsg_stack
000287CC <AmiBlitz3.ab2@3582>    CMP.w #-$7FDE,D0
000287D0 <AmiBlitz3.ab2@3583>    BNE.w compile_line_notelse
000287D6 <AmiBlitz3.ab2@3584>    JSR do_else2
000287DA <AmiBlitz3.ab2@3585> BRA.w compile_line
000287DC <AmiBlitz3.ab2@3588>   TST.w D0
000287E0 <AmiBlitz3.ab2@3589>   BNE.w compile_line
000287E6 <AmiBlitz3.ab2@3594>   MOVE.l firstiff,D0
000287EA <AmiBlitz3.ab2@3595>    BEQ.w compile_line_done
000287EC <AmiBlitz3.ab2@3596>   MOVEA.l D0,A0
000287F0 <AmiBlitz3.ab2@3597>   MOVE.w $C(A0),D1
000287F4 <AmiBlitz3.ab2@3598>    BPL.w compile_line_done
000287F8 <AmiBlitz3.ab2@3602>   BCLR #$F,D1
000287FE <AmiBlitz3.ab2@3603>    JSR AJL_0_D7B8
00028804 <AmiBlitz3.ab2@3604>    JSR AJL_0_D81C
00028808 <AmiBlitz3.ab2@3605> BRA.w compile_line_unthen
0002880A <AmiBlitz3.ab2@3608> RTS
00028810 <AmiBlitz3.ab2@3612>   LEA lastgloballabel,A0
00028812 <AmiBlitz3.ab2@3613>   TST.b (A0)
00028816 <AmiBlitz3.ab2@3614>    BEQ.w nolocerr
0002881C <AmiBlitz3.ab2@3615>   LEA ptr_parameterstore,A1
0002881E <AmiBlitz3.ab2@3616>   MOVEQ.l #$00,D2
00028820 <AmiBlitz3.ab2@3619>   ADDQ.w #1,D2
00028822 <AmiBlitz3.ab2@3620>   MOVE.b (A0)+,(A1)+
00028826 <AmiBlitz3.ab2@3621>    BNE.w createlab_loop
0002882C <AmiBlitz3.ab2@3622>   MOVE.b #$27,-$1(A1)
0002882E <AmiBlitz3.ab2@3623>   MOVE.w D2,-(A7)
00028834 <AmiBlitz3.ab2@3624>    JSR makename4
00028836 <AmiBlitz3.ab2@3625>   CMP.w (A7)+,D2
0002883A <AmiBlitz3.ab2@3626>    BEQ.w syntaxerr
0002883C <AmiBlitz3.ab2@3627>    TST.w d0
00028840 <AmiBlitz3.ab2@3628>    BPL createlab_done
00028848 <AmiBlitz3.ab2@3629>    MOVE.w #$3a,lastchar
0002884A <AmiBlitz3.ab2@3630>    SUBQ.l #2,a5
0002884C <AmiBlitz3.ab2@3633> RTS
00028856 <AmiBlitz3.ab2@3637>   MOVE.l #forthstack,forthsp
00028860 <AmiBlitz3.ab2@3638>   MOVE.l #precstack,precsp
00028862 <AmiBlitz3.ab2@3639> RTS
00028864 <AmiBlitz3.ab2@3646>   MOVEQ.l #$00,D4
0002888E <AmiBlitz3.ab2@3649>   !basic
000288AA <AmiBlitz3.ab2@3650>   If Peek.l(Addr Window(4))
000288C0 <AmiBlitz3.ab2@3651>     Use Window 4
000288D0 <AmiBlitz3.ab2@3652>     ev.l = Event : c_abort.b = False
000288DA <AmiBlitz3.ab2@3653>     While ev
000288EC <AmiBlitz3.ab2@3654>       If ev = #IDCMP_IDCMPUPDATE
00028922 <AmiBlitz3.ab2@3655>         If WZGadName = "COMPILE_ABORT" Then c_abort = True
0002893C <AmiBlitz3.ab2@3657>       If (c_abort = True)
0002893E <AmiBlitz3.ab2@3659>         MOVEQ.l #-$01,d4
00028944 <AmiBlitz3.ab2@3660>         MOVE.w D4,stopit
00028962 <AmiBlitz3.ab2@3661>         !asm
00028966 <AmiBlitz3.ab2@3662>     BRA chkrealstop__skip
00028970 <AmiBlitz3.ab2@3664>       ev = Event
00028976 <AmiBlitz3.ab2@3665>     Wend
00028994 <AmiBlitz3.ab2@3667>   !asm
00028996 <AmiBlitz3.ab2@3668>   MOVEQ.l #$00,D6
00028998 <AmiBlitz3.ab2@3669>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
0002899A <AmiBlitz3.ab2@3673> RTS
0002899E <AmiBlitz3.ab2@3677>   MOVE.w stopit(PC),D0
000289A2 <AmiBlitz3.ab2@3678>   BEQ chkstop__chk
000289A8 <AmiBlitz3.ab2@3679>   SUBQ.w #1,stopit
000289AA <AmiBlitz3.ab2@3683> RTS
000289B2 <AmiBlitz3.ab2@3686>   MOVE.w #2000,stopit
000289B6 <AmiBlitz3.ab2@3687>   BSR.w chkrealstop
000289BA <AmiBlitz3.ab2@3688>   BEQ.b chkstop__rts
000289BE <AmiBlitz3.ab2@3690>   BSR.w close_compilewin
000289C2 <AmiBlitz3.ab2@3691>   BSR.w call_setpointernormal
000289C8 <AmiBlitz3.ab2@3693>   MOVEA.l errstack,A7
000289CE <AmiBlitz3.ab2@3694>   MOVEA.l errcont,A0
000289D6 <AmiBlitz3.ab2@3695>   MOVE.w #-1,anyerrs
000289D8 <AmiBlitz3.ab2@3696> JMP (A0)
000289DC <AmiBlitz3.ab2@3699> d_pc:           Ds.l 1
000289E0 <AmiBlitz3.ab2@3700> d_bigpc:        Ds.l 1
000289E2 <AmiBlitz3.ab2@3701> d_nomemleft:    Ds.w 1
000289E6 <AmiBlitz3.ab2@3702> cont_pc:        Ds.l 1
000289EA <AmiBlitz3.ab2@3703> cont_pc2:       Ds.l 1
000289EE <AmiBlitz3.ab2@3704> lastcontlink:   Ds.l 1
000289F2 <AmiBlitz3.ab2@3708>   ORI.w #$4E40,D1
000289F6 <AmiBlitz3.ab2@3709> BRA.w JUMP_writeword
000289FC <AmiBlitz3.ab2@3713>   TST.b debugmode
00028A00 <AmiBlitz3.ab2@3714>   BEQ.w debugstuff__rts
00028A06 <AmiBlitz3.ab2@3721>   TST.w dirmode                                            ;or while in direct mode...
00028A0A <AmiBlitz3.ab2@3722>    BNE debugstuff__rts
00028A14 <AmiBlitz3.ab2@3723>   MOVE.l destpointer,d_pc
00028A1E <AmiBlitz3.ab2@3724>   MOVE.l bigpc,d_bigpc
00028A28 <AmiBlitz3.ab2@3725>   MOVE.w dontwrite,d_nomemleft
00028A2C <AmiBlitz3.ab2@3726>   MOVEM.l D0-D1,-(A7)
00028A2E <AmiBlitz3.ab2@3727>   MOVEQ.l #$01,D1
00028A32 <AmiBlitz3.ab2@3728>    BSR.w writetrap                                         ;write the adress to sourceline
00028A38 <AmiBlitz3.ab2@3732>    MOVE.l destpointer,D0
00028A3E <AmiBlitz3.ab2@3733>   MOVE.l cont_pc,D1
00028A44 <AmiBlitz3.ab2@3734>   MOVE.l D0,cont_pc
00028A4A <AmiBlitz3.ab2@3735>   MOVE.l D1,cont_pc2
00028A4E <AmiBlitz3.ab2@3736>    BEQ.b debugstuff__skip
00028A54 <AmiBlitz3.ab2@3737>   TST.w dontwrite
00028A58 <AmiBlitz3.ab2@3738>    BNE.b debugstuff__skip
00028A5A <AmiBlitz3.ab2@3739>   MOVEA.l D1,A4
00028A5C <AmiBlitz3.ab2@3740>   SUB.l A4,D0
00028A60 <AmiBlitz3.ab2@3741>   MOVE.w D0,$6(A4)
00028A66 <AmiBlitz3.ab2@3742>   MOVE.l A4,lastcontlink
00028A6C <AmiBlitz3.ab2@3745>   TST.w ininclude
00028A72 <AmiBlitz3.ab2@3747>   TST.w makeexec
00028A76 <AmiBlitz3.ab2@3748>   BEQ 'l1
00028A7C <AmiBlitz3.ab2@3749>   TST.w exdebug
00028A80 <AmiBlitz3.ab2@3750>   BEQ 'noinc
00028A84 <AmiBlitz3.ab2@3753>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00028A8A <AmiBlitz3.ab2@3754>   MOVE.l data1,d1
00028A90 <AmiBlitz3.ab2@3755>   TST.b firsttime
00028A94 <AmiBlitz3.ab2@3756>   BNE 'nofirst
00028A9C <AmiBlitz3.ab2@3757>   MOVE.b #1,firsttime
00028AA2 <AmiBlitz3.ab2@3758>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00028AA8 <AmiBlitz3.ab2@3759>   JSR writedatalong
00028AAE <AmiBlitz3.ab2@3760>   MOVE.l #"AmiB",d1
00028AB4 <AmiBlitz3.ab2@3761>   JSR writedatalong
00028ABA <AmiBlitz3.ab2@3762>   MOVE.l destbufferstart,d1
00028AC0 <AmiBlitz3.ab2@3763>   JSR writedatalong
00028AC6 <AmiBlitz3.ab2@3764>   TST.w dontwrite
00028ACA <AmiBlitz3.ab2@3765>   BNE 'nohunk
00028AD0 <AmiBlitz3.ab2@3766>   MOVE.l data1,d1
00028AD2 <AmiBlitz3.ab2@3767>   SUBQ.l #4,d1
00028AD8 <AmiBlitz3.ab2@3768>   SUB.l destbufferstart,d1
00028ADA <AmiBlitz3.ab2@3769>   MOVE.l d1,d2
00028AE0 <AmiBlitz3.ab2@3770>   JSR addhunkoffset
00028AE6 <AmiBlitz3.ab2@3773>   MOVE.l destpointer,d2
00028AEC <AmiBlitz3.ab2@3774>   MOVE.l data1,d1
00028AF2 <AmiBlitz3.ab2@3777>   MOVE.l destpointer,d2
00028AF4 <AmiBlitz3.ab2@3778>   MOVE.l d1,d3
00028AFA <AmiBlitz3.ab2@3779>   SUB.l destbufferstart,d1
00028B00 <AmiBlitz3.ab2@3780>   OR.l #$80000000,d1
00028B06 <AmiBlitz3.ab2@3781>   JSR writelong
00028B0C <AmiBlitz3.ab2@3782>   TST.w inmacro
00028B10 <AmiBlitz3.ab2@3783>   BEQ 'sc1
00028B16 <AmiBlitz3.ab2@3784>   MOVE.l myline,a0
00028B1A <AmiBlitz3.ab2@3786> BRA 'inc2
00028B20 <AmiBlitz3.ab2@3788>  'sc1  TST.w ininclude
00028B24 <AmiBlitz3.ab2@3789>   BEQ 'inc
00028B2A <AmiBlitz3.ab2@3790>   MOVE.l includesourceline,a0
00028B2E <AmiBlitz3.ab2@3791> BRA 'inc2
00028B34 <AmiBlitz3.ab2@3794>   MOVE.l sourceline,a0
00028B38 <AmiBlitz3.ab2@3795>   LEA 9(a0),a0
00028B3A <AmiBlitz3.ab2@3798>   MOVE.l d1,d2
00028B3C <AmiBlitz3.ab2@3799>   MOVE.l A5,D1
00028B3E <AmiBlitz3.ab2@3800>   SUB.l a0,D1
00028B44 <AmiBlitz3.ab2@3801>   ADD.l #9,d1
00028B48 <AmiBlitz3.ab2@3802>   BSR.w JUMP_writeword
00028B4E <AmiBlitz3.ab2@3803>   CMP.l #9,d1
00028B52 <AmiBlitz3.ab2@3804>   BEQ 'pos1
00028B58 <AmiBlitz3.ab2@3805>   TST.w dontwrite
00028B5C <AmiBlitz3.ab2@3806>   BNE 'nopad
00028B62 <AmiBlitz3.ab2@3807>   MOVE.l lastsourceline,d1
00028B66 <AmiBlitz3.ab2@3808>   MOVE.l d1,-6(a4)
00028B6A <AmiBlitz3.ab2@3809> BRA 'nopad
00028B70 <AmiBlitz3.ab2@3812>   MOVE.l d2,lastsourceline
00028B7A <AmiBlitz3.ab2@3813>    MOVE.l destpointer,lastdestpointer
00028B7C <AmiBlitz3.ab2@3814>    MOVEQ #0,d1
00028B82 <AmiBlitz3.ab2@3815>   MOVE.l data1,d2
00028B88 <AmiBlitz3.ab2@3816>   SUB.l destbufferstart,d2
00028B8E <AmiBlitz3.ab2@3817>   JSR writedatalong
00028B94 <AmiBlitz3.ab2@3818>   TST.w dontwrite
00028B98 <AmiBlitz3.ab2@3819>   BNE 'no2
00028B9E <AmiBlitz3.ab2@3820>   JSR addhunkoffset
00028BA4 <AmiBlitz3.ab2@3823>   MOVE.l data1,d2
00028BAA <AmiBlitz3.ab2@3824>   SUB.l destbufferstart,d2
00028BB0 <AmiBlitz3.ab2@3825>   JSR writedatalong
00028BB6 <AmiBlitz3.ab2@3826>   TST.w dontwrite
00028BBA <AmiBlitz3.ab2@3827>   BNE 'no
00028BC0 <AmiBlitz3.ab2@3828>   JSR addhunkoffset
00028BC6 <AmiBlitz3.ab2@3829>   MOVE.l lastwritedat,a1
00028BCC <AmiBlitz3.ab2@3830>   CMP.l #0,a1
00028BD0 <AmiBlitz3.ab2@3831>   BEQ 'no
00028BD2 <AmiBlitz3.ab2@3832>   MOVE.l d3,(a1)
00028BDA <AmiBlitz3.ab2@3833>   MOVE.l prevwritedat,4(a1)
00028BE4 <AmiBlitz3.ab2@3834>   MOVE.l lastwritedat,prevwritedat
00028BEA <AmiBlitz3.ab2@3837>   MOVE.l d3,lastwritedat
00028BEC <AmiBlitz3.ab2@3838>   MOVEQ #4,d1
00028BF0 <AmiBlitz3.ab2@3839>   BSR pokedata1b
00028BF2 <AmiBlitz3.ab2@3842>   MOVE.b (a0)+,d1
00028BF6 <AmiBlitz3.ab2@3843>   BEQ 'done
00028BFA <AmiBlitz3.ab2@3844>   BSR pokedata1b
00028BFE <AmiBlitz3.ab2@3845> BRA 'loop
00028C00 <AmiBlitz3.ab2@3848>   MOVEQ #0,d1
00028C04 <AmiBlitz3.ab2@3849>   BSR pokedata1b
00028C0A <AmiBlitz3.ab2@3850>   MOVE.l data1,d1
00028C0E <AmiBlitz3.ab2@3851>   BTST #0,d1
00028C12 <AmiBlitz3.ab2@3852>   BEQ 'nopad
00028C14 <AmiBlitz3.ab2@3853>   MOVEQ #0,d1
00028C18 <AmiBlitz3.ab2@3854>   BSR pokedata1b
00028C1C <AmiBlitz3.ab2@3857>   MOVEM.l (a7)+,a0-a1/d2/d3
00028C20 <AmiBlitz3.ab2@3858> BRA 'noinc2
00028C26 <AmiBlitz3.ab2@3861>   MOVE.l sourceline,D1
00028C2C <AmiBlitz3.ab2@3863>   JSR writelong
00028C2E <AmiBlitz3.ab2@3864>   MOVE.l A5,D1
00028C34 <AmiBlitz3.ab2@3865>   SUB.l sourceline,D1
00028C3A <AmiBlitz3.ab2@3867>   JSR writeword
00028C3C <AmiBlitz3.ab2@3870>   MOVEQ.l #$00,D1
00028C42 <AmiBlitz3.ab2@3871>   JSR writeword                                            ; was: BSR.w writeword
00028C46 <AmiBlitz3.ab2@3872>   MOVEM.l (A7)+,D0-D1
00028C48 <AmiBlitz3.ab2@3875> RTS
00028C4E <AmiBlitz3.ab2@3879>   TST.b debugmode                                          ;extern debug
00028C52 <AmiBlitz3.ab2@3880>    BEQ.b undodebug__rts
00028C58 <AmiBlitz3.ab2@3881>   TST.b dirmode
00028C5C <AmiBlitz3.ab2@3882>   BNE undodebug__rts
00028C66 <AmiBlitz3.ab2@3887>   MOVE.w d_nomemleft,dontwrite
00028C70 <AmiBlitz3.ab2@3888>   MOVE.l d_bigpc,bigpc
00028C7A <AmiBlitz3.ab2@3889>   MOVE.l d_pc,destpointer
00028C84 <AmiBlitz3.ab2@3890>   MOVE.l cont_pc2,cont_pc
00028C86 <AmiBlitz3.ab2@3893> RTS
00028C90 <AmiBlitz3.ab2@3897>   MOVE.l #forthstack,forthsp
00028C9A <AmiBlitz3.ab2@3898>   MOVE.l #precstack,precsp
00028CA0 <AmiBlitz3.ab2@3899>   CLR.w regnum
00028CA6 <AmiBlitz3.ab2@3900>   CLR.w nonew
00028CAC <AmiBlitz3.ab2@3901>   CLR.w sbasegot
00028CB6 <AmiBlitz3.ab2@3902>   MOVE.w varcodelen,oldvcodelen
00028CBC <AmiBlitz3.ab2@3903>   CLR.w varcodelen
00028CC4 <AmiBlitz3.ab2@3904>   MOVE.w #-1,lasta6
00028CC6 <AmiBlitz3.ab2@3905> RTS
00028CCC <AmiBlitz3.ab2@3909>   TST.w linemode
00028CD0 <AmiBlitz3.ab2@3910>   BMI.b smode__skip
00028CD4 <AmiBlitz3.ab2@3911>   BSR.w undodebug
00028CDA <AmiBlitz3.ab2@3912>   MOVE.w linemode,D1
00028CDC <AmiBlitz3.ab2@3913>   ADDQ.w #4,A7
00028CDE <AmiBlitz3.ab2@3914>   LSL.w #2,D1
00028CE4 <AmiBlitz3.ab2@3915>   LEA modetable,A0
00028CE8 <AmiBlitz3.ab2@3916>   MOVEA.l $0(A0,D1.W),A0
00028CEC <AmiBlitz3.ab2@3917>   BSR.w reget
00028CEE <AmiBlitz3.ab2@3920> JMP (A0)                                                   ;jumptokenroutine
00028CF0 <AmiBlitz3.ab2@3923> RTS
00028CF8 <AmiBlitz3.ab2@3928>   MOVE.w #0,leaa0a0+2
00028CFE <AmiBlitz3.ab2@3929>   CLR.b nowdeclare
00028D04 <AmiBlitz3.ab2@3930>   CLR.b notypecheck
00028D0A <AmiBlitz3.ab2@3931>   CLR.l lasttoken
00028D10 <AmiBlitz3.ab2@3932>   CLR.b doimmediate
00028D16 <AmiBlitz3.ab2@3933>   CLR.w vartype
00028D1C <AmiBlitz3.ab2@3934>   CLR.w regnumfunc
00028D22 <AmiBlitz3.ab2@3935>   CLR.b optistring
00028D28 <AmiBlitz3.ab2@3936>   CLR.b iniffcommand
00028D2E <AmiBlitz3.ab2@3937>   CLR.w instringon  ; new
00028D34 <AmiBlitz3.ab2@3938>   CLR.b funccall
00028D3A <AmiBlitz3.ab2@3939>   CLR.l currentfunccall
00028D40 <AmiBlitz3.ab2@3940>   CLR.l leftsidetype
00028D46 <AmiBlitz3.ab2@3941>   CLR.l rightsidetype
00028D4C <AmiBlitz3.ab2@3942>   CLR.b peekaddrsize
00028D52 <AmiBlitz3.ab2@3943>   CLR.b blitzparloop
00028D58 <AmiBlitz3.ab2@3944>   CLR.b funcparloop
00028D5E <AmiBlitz3.ab2@3945>   TST.b debugmode
00028D62 <AmiBlitz3.ab2@3946>    BEQ 'fpu
00028D6C <AmiBlitz3.ab2@3952>   MOVE.b fpu,iee
00028D70 <AmiBlitz3.ab2@3953>   MOVE.w stopit(PC),D0
00028D74 <AmiBlitz3.ab2@3954>   BNE chkstop_chkb
00028D78 <AmiBlitz3.ab2@3955>   BSR.w chkstop                                          ; message here
00028D7E <AmiBlitz3.ab2@3958>   SUBQ.w #1,stopit
00028D82 <AmiBlitz3.ab2@3961>   BSR.w findmacro                                          ;macro
00028D88 <AmiBlitz3.ab2@4015>   TST.b debugmode
00028D8C <AmiBlitz3.ab2@4016>    BEQ.s 'l10
00028D92 <AmiBlitz3.ab2@4017>   TST.b exdebug
00028D96 <AmiBlitz3.ab2@4018>   BEQ 'l10a
00028D98 <AmiBlitz3.ab2@4019>   MOVE.w (a5),d0
00028D9C <AmiBlitz3.ab2@4020>   CMP.w #$8025,d0
00028DA0 <AmiBlitz3.ab2@4021>    BEQ 'l10
00028DA4 <AmiBlitz3.ab2@4024>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00028DA8 <AmiBlitz3.ab2@4028>   BSR.w get1bytemain                                       ;gettokenmain
00028DAC <AmiBlitz3.ab2@4029>    BEQ.w undodebug
00028DB0 <AmiBlitz3.ab2@4030>   CMP.w #$002b,d0                                            ;check for + cast sign
00028DB4 <AmiBlitz3.ab2@4031>     BNE 'lb2
00028DB8 <AmiBlitz3.ab2@4032>     BSR.w get1bytemain
00028DC0 <AmiBlitz3.ab2@4033>     MOVE.b #1,notypecheck
00028DCA <AmiBlitz3.ab2@4041>   MOVE.l #forthstack,forthsp
00028DD4 <AmiBlitz3.ab2@4042>   MOVE.l #precstack,precsp
00028DDA <AmiBlitz3.ab2@4043>   CLR.w regnum
00028DE0 <AmiBlitz3.ab2@4044>   CLR.w nonew
00028DE6 <AmiBlitz3.ab2@4045>   CLR.w sbasegot
00028DF0 <AmiBlitz3.ab2@4046>   MOVE.w varcodelen,oldvcodelen
00028DF6 <AmiBlitz3.ab2@4048>   CLR.w varcodelen
00028DFE <AmiBlitz3.ab2@4049>   MOVE.w #$FFFF,lasta6
00028E02 <AmiBlitz3.ab2@4051>   BSR.w smode
00028E04 <AmiBlitz3.ab2@4052>   TST.w D0
00028E08 <AmiBlitz3.ab2@4053>   BMI.w get_tokencode
00028E0C <AmiBlitz3.ab2@4054>   CMP.w #$2E,D0
00028E10 <AmiBlitz3.ab2@4055>    BEQ.w JL_0_4644                                         ;shortlist
00028E14 <AmiBlitz3.ab2@4056>   CMP.w #"#",D0
00028E18 <AmiBlitz3.ab2@4057>    BEQ.w JL_0_4718                                         ;constant found
00028E1C <AmiBlitz3.ab2@4058>   CMP.w #$27,D0
00028E20 <AmiBlitz3.ab2@4059>    BEQ.w JL_0_4638                                         ;local label
00028E26 <AmiBlitz3.ab2@4060>   MOVE.l A5,letstart
00028E2C <AmiBlitz3.ab2@4061>   JSR getparameter
00028E30 <AmiBlitz3.ab2@4062>   BSR.w reget
00028E34 <AmiBlitz3.ab2@4063>    BEQ.w JL_0_4658                                         ;label found
00028E38 <AmiBlitz3.ab2@4064>   CMP.w #$7B,D0
00028E3C <AmiBlitz3.ab2@4065>    BEQ.w JL_0_475C
00028E3E <AmiBlitz3.ab2@4066>   TST.w d0
00028E42 <AmiBlitz3.ab2@4067>    BPL 'll1
00028E48 <AmiBlitz3.ab2@4068>   TST.b newsyntax
00028E4C <AmiBlitz3.ab2@4069>    BEQ 'll1
00028E52 <AmiBlitz3.ab2@4070>   LEA allowtab,a0
00028E54 <AmiBlitz3.ab2@4071>   MOVEQ #0,d1
00028E56 <AmiBlitz3.ab2@4072>   MOVE.b d0,d1
00028E5A <AmiBlitz3.ab2@4073>   TST.b 0(a0,d1.w)
00028E5E <AmiBlitz3.ab2@4074>    BNE 'll1
00028E60 <AmiBlitz3.ab2@4075>   SUBQ.l #2,a5
00028E68 <AmiBlitz3.ab2@4076>   MOVE.w #":",lastchar                                     ;no doublepoint
00028E6C <AmiBlitz3.ab2@4077> BRA JL_0_4658
00028E74 <AmiBlitz3.ab2@4080>   CMP.l #"equ ",-1(a5)
00028E78 <AmiBlitz3.ab2@4081>    BEQ 'll4
00028E80 <AmiBlitz3.ab2@4082>   CMP.l #"EQU ",-1(a5)
00028E84 <AmiBlitz3.ab2@4083>    BNE 'll2
00028E86 <AmiBlitz3.ab2@4086>   ADDQ.l #2,a5
00028E8A <AmiBlitz3.ab2@4087>   BSR.w findlabel2
00028E8E <AmiBlitz3.ab2@4088>   BEQ.w 'lf1
00028E92 <AmiBlitz3.ab2@4089>   BSR.w addlabelhash
00028E9A <AmiBlitz3.ab2@4090>   MOVE.l #$1,$4(A2)
00028EA2 <AmiBlitz3.ab2@4093>   CMPI.l #$1,$4(A2)
00028EA6 <AmiBlitz3.ab2@4094>    BNE.w illconerr
00028EAA <AmiBlitz3.ab2@4095>   BSR get1bytemain
00028EAC <AmiBlitz3.ab2@4096>   MOVE.l A2,-(A7)
00028EAE <AmiBlitz3.ab2@4107>   SUBQ.l #1,a5
00028EB0 <AmiBlitz3.ab2@4110>   SUBQ.l #1,a5
00028EB6 <AmiBlitz3.ab2@4111>   JSR AJL_0_BF6E
00028EB8 <AmiBlitz3.ab2@4112>   MOVEA.l (A7)+,A2
00028EBC <AmiBlitz3.ab2@4113>   MOVE.l D3,$8(A2)
00028EBE <AmiBlitz3.ab2@4114>   RTS
00028EC2 <AmiBlitz3.ab2@4115>   BSR get1bytemain
00028ECA <AmiBlitz3.ab2@4118>   CMP.l #"SET ",-1(a5)
00028ECE <AmiBlitz3.ab2@4119>   BNE 'll3
00028ED2 <AmiBlitz3.ab2@4120> BRA 'll4
00028ED8 <AmiBlitz3.ab2@4123> JMP AJL_0_DEA6
00028EDC <AmiBlitz3.ab2@4126>   CMP.w #-$7FDE,D0
00028EE0 <AmiBlitz3.ab2@4127>   BEQ.w get_tokencode
00028EE4 <AmiBlitz3.ab2@4128> BRA.w undodebug
00028EE8 <AmiBlitz3.ab2@4131>   BSR.w undodebug
00028EEC <AmiBlitz3.ab2@4132>   BSR.w createlab
00028EF0 <AmiBlitz3.ab2@4133> BRA.w JL_0_466E
00028EF4 <AmiBlitz3.ab2@4136>   BSR.w get1bytemain
00028EF8 <AmiBlitz3.ab2@4137>    BEQ.w JL_0_462C
00028EFC <AmiBlitz3.ab2@4138>   CMP.w #"'",D0
00028F00 <AmiBlitz3.ab2@4139>    BEQ.w JL_0_4638
00028F04 <AmiBlitz3.ab2@4140>    BSR.w makename2
00028F06 <AmiBlitz3.ab2@4141>    TST.w d0
00028F0A <AmiBlitz3.ab2@4142>    BPL 'll1
00028F0C <AmiBlitz3.ab2@4143>    SUBQ.l #2,a5
00028F14 <AmiBlitz3.ab2@4144>    MOVE.w #":",lastchar
00028F18 <AmiBlitz3.ab2@4145> BRA JL_0_4658                                              ;????
00028F1C <AmiBlitz3.ab2@4149>   BSR.w undodebug
00028F22 <AmiBlitz3.ab2@4150>   LEA ptr_parameterstore,A0
00028F28 <AmiBlitz3.ab2@4151>   LEA lastgloballabel,A1
00028F2A <AmiBlitz3.ab2@4154>   MOVE.b (A0)+,(A1)+
00028F2E <AmiBlitz3.ab2@4155>    BNE.w JL_0_4668
00028F32 <AmiBlitz3.ab2@4158>   BSR.w findlabel2
00028F36 <AmiBlitz3.ab2@4159>    BEQ.w JL_0_4698
00028F3A <AmiBlitz3.ab2@4160>    BSR.w addlabelhash
00028F3E <AmiBlitz3.ab2@4163>   CLR.l $4(A2)
00028F46 <AmiBlitz3.ab2@4164>   MOVE.l destpointer,$8(A2)
00028F4E <AmiBlitz3.ab2@4167>   MOVE.w procnum,$10(A2)
00028F50 <AmiBlitz3.ab2@4168> RTS
00028F54 <AmiBlitz3.ab2@4172>   MOVE.l $4(A2),D0
00028F58 <AmiBlitz3.ab2@4173>   BTST #$0,D0
00028F5C <AmiBlitz3.ab2@4174>    BNE.w illlaberr
00028F62 <AmiBlitz3.ab2@4175>   TST.w pass
00028F66 <AmiBlitz3.ab2@4177>   MOVE.l $8(A2),D0
00028F6A <AmiBlitz3.ab2@4178>    BNE.w duplaberr
00028F72 <AmiBlitz3.ab2@4179>   MOVE.w procnum,$10(A2)
00028F76 <AmiBlitz3.ab2@4180>   MOVEA.l $4(A2),A3
00028F7C <AmiBlitz3.ab2@4181>   MOVEA.l _execbase,A6
00028F80 <AmiBlitz3.ab2@4184>   CMPA.w #$0,A3
00028F84 <AmiBlitz3.ab2@4185>    BEQ.w JL_0_467A
00028F88 <AmiBlitz3.ab2@4186>     MOVE.l $4(A2),D1
00028F8C <AmiBlitz3.ab2@4187>     BTST #$0,D1
00028F90 <AmiBlitz3.ab2@4188>     BNE.w illlaberr
00028F94 <AmiBlitz3.ab2@4189>   MOVE.w $8(A3),D1
00028F98 <AmiBlitz3.ab2@4190>   CMP.w $10(A2),D1
00028F9C <AmiBlitz3.ab2@4191>    BEQ.w JL_0_46DC
00028FA2 <AmiBlitz3.ab2@4192>    TST.b newsyntax
00028FA6 <AmiBlitz3.ab2@4193>    BEQ 'l1
00028FAA <AmiBlitz3.ab2@4194> BRA.w JL_0_46DC                                            ;label context out of range fix
00028FB2 <AmiBlitz3.ab2@4199>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00028FB6 <AmiBlitz3.ab2@4200> BRA.w referr
00028FBC <AmiBlitz3.ab2@4203>   MOVE.w dontwrite,D1
00028FC0 <AmiBlitz3.ab2@4204>    BNE.w JL_0_4706
00028FC4 <AmiBlitz3.ab2@4205>   MOVEA.l $4(A3),A1
00028FCA <AmiBlitz3.ab2@4206>   BTST #$0,$7(A3)
00028FCE <AmiBlitz3.ab2@4207>    BEQ.w JL_0_4700
00028FD0 <AmiBlitz3.ab2@4208>   SUBQ.w #1,A1
00028FD6 <AmiBlitz3.ab2@4209>   MOVE.l data2,(A1)
00028FDA <AmiBlitz3.ab2@4210> BRA.w JL_0_4706
00028FE0 <AmiBlitz3.ab2@4213>   MOVE.l destpointer,(A1)
00028FE2 <AmiBlitz3.ab2@4216>   MOVEA.l A3,A1
00028FE4 <AmiBlitz3.ab2@4217>   MOVEA.l (A3),A3
00028FE8 <AmiBlitz3.ab2@4218>   MOVE.l A3,$4(A2)
00028FEA <AmiBlitz3.ab2@4219>   MOVEQ.l #$0C+2,D0
00028FF0 <AmiBlitz3.ab2@4220>   MOVE.l mempool,a0
00028FF6 <AmiBlitz3.ab2@4221>   MOVEA.l _execbase,A6
00028FFA <AmiBlitz3.ab2@4222>   JSR _FreePooled(A6)
00028FFE <AmiBlitz3.ab2@4223> BRA.w JL_0_46BC
00029008 <AmiBlitz3.ab2@4228>    MOVE.l #forthstack,forthsp
00029012 <AmiBlitz3.ab2@4229>   MOVE.l #precstack,precsp
00029016 <AmiBlitz3.ab2@4230>    BSR.w getparameter2
0002901A <AmiBlitz3.ab2@4233>   BSR.w findlabel2
0002901E <AmiBlitz3.ab2@4234>    BEQ.w JL_0_4738
00029022 <AmiBlitz3.ab2@4235>    BSR.w addlabelhash
0002902A <AmiBlitz3.ab2@4236>   MOVE.l #$1,$4(A2)
0002902E <AmiBlitz3.ab2@4237> BRA.w JL_0_4744
00029036 <AmiBlitz3.ab2@4240>   CMPI.l #$1,$4(A2)
0002903A <AmiBlitz3.ab2@4241>    BNE.w illconerr
0002903E <AmiBlitz3.ab2@4250>   CMP.w #$3D,D0
00029042 <AmiBlitz3.ab2@4251>   BEQ.w JL_0_474E
00029044 <AmiBlitz3.ab2@4252> RTS
00029046 <AmiBlitz3.ab2@4256>   MOVE.l A2,-(A7)
0002904C <AmiBlitz3.ab2@4257>   JSR AJL_0_BF6E
0002904E <AmiBlitz3.ab2@4258>   MOVEA.l (A7)+,A2
00029052 <AmiBlitz3.ab2@4259>   MOVE.l D3,$8(A2)                                         ;store constant
0002905A <AmiBlitz3.ab2@4260>   CMP.w #$0a,lastchar
0002905E <AmiBlitz3.ab2@4261>   BNE 'l1
00029066 <AmiBlitz3.ab2@4262>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00029068 <AmiBlitz3.ab2@4265> RTS
0002906C <AmiBlitz3.ab2@4268>   BSR.w findproc                                           ;write statement call
00029070 <AmiBlitz3.ab2@4269>   BEQ _state
00029076 <AmiBlitz3.ab2@4270>   TST.l unusedfunc
0002907A <AmiBlitz3.ab2@4271>   BEQ noprocerr
00029080 <AmiBlitz3.ab2@4273>   JSR gotoendsource
00029084 <AmiBlitz3.ab2@4276>   TST.b $5(A2)
0002908A <AmiBlitz3.ab2@4278>   MOVE.l a2,currentfunccall
00029092 <AmiBlitz3.ab2@4279>   MOVE.b #1,funccall
00029098 <AmiBlitz3.ab2@4280>   MOVE.b #1,isfunc(a2)
0002909C <AmiBlitz3.ab2@4281>   MOVE.l $E(A2),-(A7)
0002909E <AmiBlitz3.ab2@4282>   MOVEQ.l #$00,D0
000290A2 <AmiBlitz3.ab2@4283>   MOVE.b $4(A2),D0
000290A8 <AmiBlitz3.ab2@4284>   MOVE.l d0,parnumtemp
000290AC <AmiBlitz3.ab2@4285>   BEQ.w JL_0_4786
000290B0 <AmiBlitz3.ab2@4286>   TST.b $20(a2)                                            ;increase if morepar
000290B4 <AmiBlitz3.ab2@4287>   BNE 'no0par
000290B6 <AmiBlitz3.ab2@4288>   MOVE.l a5,a4
000290BA <AmiBlitz3.ab2@4291>   CMP.b #$20,(a4)+
000290BE <AmiBlitz3.ab2@4292>   BEQ 'l1
000290C4 <AmiBlitz3.ab2@4293>   CMP.b #"}",-1(a4)
000290C8 <AmiBlitz3.ab2@4294>   BNE  'no0par                                             ;statementcall pars
000290CA <AmiBlitz3.ab2@4295>   MOVEQ #0,d0
000290CE <AmiBlitz3.ab2@4298>   LEA $16(A2),A1
000290D0 <AmiBlitz3.ab2@4301>   MOVE.l d1,-(a7)
000290D2 <AmiBlitz3.ab2@4302>   MOVE.b (a1),d2
000290D4 <AmiBlitz3.ab2@4303>   MOVE.l d0,d1
000290D8 <AmiBlitz3.ab2@4304>   CMP.w #4,d2
000290DC <AmiBlitz3.ab2@4305>   BNE 'l1b
000290E2 <AmiBlitz3.ab2@4306>   ADD.l #$203c,d1
000290E8 <AmiBlitz3.ab2@4308>   JSR writeword
000290EE <AmiBlitz3.ab2@4309>   MOVE.l #$ffff0000,d1
000290F4 <AmiBlitz3.ab2@4311>   JSR writelong
000290F8 <AmiBlitz3.ab2@4312> BRA 'l2b
000290FE <AmiBlitz3.ab2@4315>   TST.b fpu
00029102 <AmiBlitz3.ab2@4316>   BNE 'l1c
00029106 <AmiBlitz3.ab2@4317>   CMP.w #5,d2
0002910A <AmiBlitz3.ab2@4318>   BNE 'l1c
00029110 <AmiBlitz3.ab2@4319>   ADD.l #$203c,d1
00029116 <AmiBlitz3.ab2@4321>   JSR writeword
0002911C <AmiBlitz3.ab2@4322>   MOVE.l #$800000c1,d1
00029122 <AmiBlitz3.ab2@4324>   JSR writelong
00029126 <AmiBlitz3.ab2@4325> BRA 'l2b
0002912C <AmiBlitz3.ab2@4328>   ADD.l #$70ff,d1
00029132 <AmiBlitz3.ab2@4330>   JSR writeword
00029138 <AmiBlitz3.ab2@4331>   MOVE.l #$f23c5000,d1
0002913A <AmiBlitz3.ab2@4332>   MOVE.l d0,d2
0002913C <AmiBlitz3.ab2@4333>   ASR.l #2,d2
0002913E <AmiBlitz3.ab2@4334>   ADD.l d2,d1
00029144 <AmiBlitz3.ab2@4336>   JSR writelong
00029148 <AmiBlitz3.ab2@4337>   MOVE.w #$ffff,d1
0002914E <AmiBlitz3.ab2@4339>   JSR writeword
00029150 <AmiBlitz3.ab2@4342>   MOVE.l (a7)+,d1
00029152 <AmiBlitz3.ab2@4343>   ADDQ.l #1,a1
00029158 <AmiBlitz3.ab2@4344>   ADD.l #$0200,d0
0002915E <AmiBlitz3.ab2@4345>   CMP.l #$0e00,d0
00029162 <AmiBlitz3.ab2@4346>    BEQ syntaxerr
00029164 <AmiBlitz3.ab2@4347>   TST.b (a1)
00029168 <AmiBlitz3.ab2@4348>    BNE 'again
0002916C <AmiBlitz3.ab2@4349> BRA JL_0_4786
00029176 <AmiBlitz3.ab2@4352>   MOVE.w a2offset,a2offset2
0002917A <AmiBlitz3.ab2@4353>   LEA $16(A2),A2
00029180 <AmiBlitz3.ab2@4354>   MOVE.b funcparloop,-(a7)
00029188 <AmiBlitz3.ab2@4355>   MOVE.b #1,funcparloop
0002918E <AmiBlitz3.ab2@4356>   MOVE.b blitzparloop,-(a7)
00029194 <AmiBlitz3.ab2@4357>   CLR.b blitzparloop
00029198 <AmiBlitz3.ab2@4358>   BSR.w fetchpees2
0002919E <AmiBlitz3.ab2@4359>   MOVE.b (a7)+,blitzparloop
000291A4 <AmiBlitz3.ab2@4360>   MOVE.b (a7)+,funcparloop
000291A8 <AmiBlitz3.ab2@4361> BRA.w JL_0_478A
000291AC <AmiBlitz3.ab2@4364>   BSR.w get1bytemain
000291B0 <AmiBlitz3.ab2@4367>   CMP.w #$7D,D0
000291B4 <AmiBlitz3.ab2@4368>    BNE.w morepar_                                          ;syntax error morepar
000291BA <AmiBlitz3.ab2@4369>    JSR chkstak
000291BC <AmiBlitz3.ab2@4370>   MOVE.l (A7)+,D1
000291C2 <AmiBlitz3.ab2@4386>    JSR JL_0_AFCA
000291C8 <AmiBlitz3.ab2@4408>   CLR.b funccall
000291CC <AmiBlitz3.ab2@4409> BRA.w get1bytemain
000291D2 <AmiBlitz3.ab2@4413>   MOVE.l d0,lasttoken
000291D6 <AmiBlitz3.ab2@4414>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
000291DA <AmiBlitz3.ab2@4415>   BNE 'l2
000291DE <AmiBlitz3.ab2@4416>    MOVE.w #$dd05,d0
000291E2 <AmiBlitz3.ab2@4419>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
000291E6 <AmiBlitz3.ab2@4420>   BNE 'l3
000291EA <AmiBlitz3.ab2@4421>    MOVE.w #$dd06,d0
000291EE <AmiBlitz3.ab2@4424>   CMP.w #-$7FC4,D0
000291F2 <AmiBlitz3.ab2@4425>   BCS.w JL_0_47C4
000291F6 <AmiBlitz3.ab2@4426>     CMP.w #-$7F4D,D0
000291FA <AmiBlitz3.ab2@4427>     BCC.w JL_0_47C4
00029202 <AmiBlitz3.ab2@4428>       BTST #$7,assemblercheck                              ;inline Assembler checking
00029206 <AmiBlitz3.ab2@4429>       BNE.b JL_0_47C0
0002920C <AmiBlitz3.ab2@4430>         TST.b debugmode
00029210 <AmiBlitz3.ab2@4431>         BEQ.b 'l10
0002921A <AmiBlitz3.ab2@4436>           MOVE.w d_nomemleft,dontwrite
00029224 <AmiBlitz3.ab2@4437>           MOVE.l d_bigpc,bigpc
0002922E <AmiBlitz3.ab2@4438>           MOVE.l d_pc,destpointer
00029238 <AmiBlitz3.ab2@4439>           MOVE.l cont_pc2,cont_pc
0002923C <AmiBlitz3.ab2@4445> BRA.w JL_0_612C
00029240 <AmiBlitz3.ab2@4448>   BCLR #$F,D0
00029242 <AmiBlitz3.ab2@4449>   MOVE.w D0,D1
00029246 <AmiBlitz3.ab2@4450>   ANDI.w #$7F00,D1
0002924A <AmiBlitz3.ab2@4451>   BNE.w JL_0_4856
0002924E <AmiBlitz3.ab2@4452>     CMP.w #$B3,D0                                          ;intern Instructions
00029252 <AmiBlitz3.ab2@4453>     BCS.w JL_0_47F2
00029256 <AmiBlitz3.ab2@4454>       SUBI.w #$77,D0
0002925A <AmiBlitz3.ab2@4455>       CMP.w #$4B,D0
0002925E <AmiBlitz3.ab2@4456>       BEQ.w JL_0_4830
00029262 <AmiBlitz3.ab2@4457>         CMP.w #$46,D0
00029266 <AmiBlitz3.ab2@4458>         BEQ.w JL_0_4830
0002926A <AmiBlitz3.ab2@4459> BRA.w JL_0_4834                                            ; change tokennum
0002926E <AmiBlitz3.ab2@4462>     CMP.w #$38,D0
00029272 <AmiBlitz3.ab2@4463>      BEQ.w JL_0_4830
00029276 <AmiBlitz3.ab2@4464>     CMP.w #$39,D0
0002927A <AmiBlitz3.ab2@4465>      BEQ.w JL_0_4830
0002927E <AmiBlitz3.ab2@4466>     CMP.w #$D,D0
00029282 <AmiBlitz3.ab2@4467>      BEQ.w JL_0_4830
00029286 <AmiBlitz3.ab2@4468>     CMP.w #$12,D0
0002928A <AmiBlitz3.ab2@4469>      BEQ.w JL_0_4830
0002928E <AmiBlitz3.ab2@4470>     CMP.w #$13,D0
00029292 <AmiBlitz3.ab2@4471>      BEQ.w JL_0_4830
00029296 <AmiBlitz3.ab2@4472>     CMP.w #$1A,D0
0002929A <AmiBlitz3.ab2@4473>      BEQ.w JL_0_4830
0002929E <AmiBlitz3.ab2@4474>     CMP.w #$2A,D0
000292A2 <AmiBlitz3.ab2@4475>      BHI.w JL_0_4834
000292A6 <AmiBlitz3.ab2@4476>     CMP.w #$23,D0
000292AA <AmiBlitz3.ab2@4477>      BCS.b JL_0_4834
000292AE <AmiBlitz3.ab2@4480>   BSR.w undodebug
000292B0 <AmiBlitz3.ab2@4483>   SUBQ.w #1,D0
000292B2 <AmiBlitz3.ab2@4484>   LSL.w #2,D0
000292B8 <AmiBlitz3.ab2@4491>   LEA instructionbase,A0
000292BC <AmiBlitz3.ab2@4492>   MOVEA.l $0(A0,D0.W),A0
000292BE <AmiBlitz3.ab2@4493>   MOVE.l A0,-(A7)
000292C2 <AmiBlitz3.ab2@4494> BRA.w get1bytemain
000292C4 <AmiBlitz3.ab2@4500>   MOVE.w D0,D1
000292C8 <AmiBlitz3.ab2@4501>    BSR.w searchinstr
000292CE <AmiBlitz3.ab2@4502>    TST.b newmode
000292D2 <AmiBlitz3.ab2@4503>    BNE compile_term
000292D8 <AmiBlitz3.ab2@4504>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
000292DC <AmiBlitz3.ab2@4505>    BNE.w stamigalib
000292E2 <AmiBlitz3.ab2@4506>   BTST #$0,$1(A3)
000292E6 <AmiBlitz3.ab2@4507>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
000292EA <AmiBlitz3.ab2@4508>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
000292EE <AmiBlitz3.ab2@4509>    BSR.w JL_0_66F6
000292F4 <AmiBlitz3.ab2@4515>   MOVE.w numreps,-(A7)
000292FA <AmiBlitz3.ab2@4516>   MOVE.w userp,-(A7)
00029300 <AmiBlitz3.ab2@4517>   MOVE.w a2offset,-(A7)
00029302 <AmiBlitz3.ab2@4518>   MOVE.l A2,-(A7)                                          ;recurs.
0002930C <AmiBlitz3.ab2@4519>   MOVE.w convsize,userp
00029310 <AmiBlitz3.ab2@4520>   LEA $6(A3),A1
00029312 <AmiBlitz3.ab2@4524>    MOVE.w (A1),D2
00029316 <AmiBlitz3.ab2@4525>    BMI.w SERR                                              ;statement syntax error
0002931A <AmiBlitz3.ab2@4526>   ANDI.w #$FF,D2
0002931C <AmiBlitz3.ab2@4527>   CMP.w D2,D1
00029320 <AmiBlitz3.ab2@4528>    BEQ.w JL_0_48E0
00029324 <AmiBlitz3.ab2@4529>    BCS.w JL_0_48CC
00029326 <AmiBlitz3.ab2@4530>   MOVE.b (A1),D3
0002932A <AmiBlitz3.ab2@4531>   ANDI.w #$7,D3
0002932E <AmiBlitz3.ab2@4532>    BEQ.w JL_0_48CC
00029330 <AmiBlitz3.ab2@4533>   MOVE.w D2,D4
00029332 <AmiBlitz3.ab2@4534>   SUB.w D3,D4
00029334 <AmiBlitz3.ab2@4535>   MOVEQ.l #$00,D5
00029336 <AmiBlitz3.ab2@4536>   MOVE.w D1,D5
00029338 <AmiBlitz3.ab2@4537>   SUB.w D4,D5
0002933A <AmiBlitz3.ab2@4538>   DIVU D3,D5
0002933C <AmiBlitz3.ab2@4539>   SWAP D5
0002933E <AmiBlitz3.ab2@4540>   TST.w D5
00029342 <AmiBlitz3.ab2@4541>    BEQ.w JL_0_48E0
00029344 <AmiBlitz3.ab2@4544>   ADDQ.w #2,A1
00029346 <AmiBlitz3.ab2@4545>   ADDA.w D2,A1
0002934A <AmiBlitz3.ab2@4546>    BSR.w aligna1
0002934E <AmiBlitz3.ab2@4547>    BSR.w skiplibreg
00029352 <AmiBlitz3.ab2@4548>   LEA $C(A1),A1
00029356 <AmiBlitz3.ab2@4549> BRA.w JL_0_489A
00029358 <AmiBlitz3.ab2@4552>   MOVE.w (a3),d2
0002935C <AmiBlitz3.ab2@4553>   BTST #1,d2
00029360 <AmiBlitz3.ab2@4554>   BEQ statement_
00029364 <AmiBlitz3.ab2@4555>   CMP.w #1,d1
00029368 <AmiBlitz3.ab2@4556>   BEQ statement_
0002936C <AmiBlitz3.ab2@4559>   CMP.b #$20,(a5)+
00029370 <AmiBlitz3.ab2@4560>   BEQ 'l2
00029376 <AmiBlitz3.ab2@4561>   CMP.b #"(",-2(a5)
0002937A <AmiBlitz3.ab2@4562>   BNE 'l1
0002937E <AmiBlitz3.ab2@4563> BRA parameter_
00029382 <AmiBlitz3.ab2@4566> BRA inbrackets_
00029384 <AmiBlitz3.ab2@4569>   MOVE.b (A1),D2
00029386 <AmiBlitz3.ab2@4570>   LSL.w #8,D2
00029388 <AmiBlitz3.ab2@4571>   OR.w D2,D1
0002938A <AmiBlitz3.ab2@4572>   MOVE.l A1,-(A7)
00029390 <AmiBlitz3.ab2@4573>   CLR.w a2offset
00029392 <AmiBlitz3.ab2@4574>   TST.w D1
00029396 <AmiBlitz3.ab2@4575>    BEQ.w JL_0_4900
0002939A <AmiBlitz3.ab2@4576>   LEA $2(A1),A2
000293A0 <AmiBlitz3.ab2@4578>   MOVE.l lasttoken,-(a7)
000293A6 <AmiBlitz3.ab2@4579>   CLR.l lasttoken
000293AA <AmiBlitz3.ab2@4580>   BSR.w fetchlibps
000293B0 <AmiBlitz3.ab2@4581>   MOVE.l (a7)+,lasttoken
000293B4 <AmiBlitz3.ab2@4582> BRA.w JL_0_4904
000293B8 <AmiBlitz3.ab2@4585>   BSR.w get1bytemain
000293BA <AmiBlitz3.ab2@4588>   MOVEA.l (A7)+,A1
000293BC <AmiBlitz3.ab2@4589>   MOVEA.l (A7)+,A2
000293C2 <AmiBlitz3.ab2@4590>   MOVE.w a2offset,D1
000293C6 <AmiBlitz3.ab2@4591>    BEQ.w JL_0_493A
000293CC <AmiBlitz3.ab2@4592>   MOVE.w D1,preplibst+2
000293D2 <AmiBlitz3.ab2@4593>   MOVE.l preplibst,D1
000293D8 <AmiBlitz3.ab2@4594>    JSR writelong                                           ;write array offset stack correct
000293E2 <AmiBlitz3.ab2@4595>   MOVE.w numreps,movenumrep+2
000293E6 <AmiBlitz3.ab2@4596>    BEQ.w JL_0_493A
000293EC <AmiBlitz3.ab2@4597>   MOVE.l movenumrep,D1
000293F2 <AmiBlitz3.ab2@4598>    JSR writelong
000293F8 <AmiBlitz3.ab2@4602>   JSR userjsr
000293FE <AmiBlitz3.ab2@4605>   MOVE.w a2offset,D1
00029402 <AmiBlitz3.ab2@4606>    BEQ.w JL_0_4974
00029406 <AmiBlitz3.ab2@4607>   CMP.w #$8,D1
0002940A <AmiBlitz3.ab2@4608>    BHI.w JL_0_4964
0002940E <AmiBlitz3.ab2@4609>   ANDI.w #$7,D1
00029410 <AmiBlitz3.ab2@4610>   LSL.w #8,D1
00029412 <AmiBlitz3.ab2@4611>   LSL.w #1,D1
00029416 <AmiBlitz3.ab2@4612>   ORI.w #$504F,D1
0002941C <AmiBlitz3.ab2@4614>   JSR writeword
00029420 <AmiBlitz3.ab2@4615> BRA.w JL_0_4974
00029426 <AmiBlitz3.ab2@4618>   MOVE.w D1,fixlibst+2
0002942C <AmiBlitz3.ab2@4619>   MOVE.l fixlibst,D1
00029432 <AmiBlitz3.ab2@4620>   JSR writelong
00029438 <AmiBlitz3.ab2@4623>   MOVE.w (A7)+,a2offset
0002943E <AmiBlitz3.ab2@4624>   MOVE.w (A7)+,userp
00029444 <AmiBlitz3.ab2@4625>   MOVE.w (A7)+,numreps
00029448 <AmiBlitz3.ab2@4626> BRA.w reget
0002944C <AmiBlitz3.ab2@4630>   MOVEM.l A2-A3,-(A7)
00029452 <AmiBlitz3.ab2@4631>   CLR.b doublepeek
00029458 <AmiBlitz3.ab2@4632>   MOVE.l A5,lastsourcepos
0002945C <AmiBlitz3.ab2@4633>    BSR.w getchar
00029460 <AmiBlitz3.ab2@4634>   CMP.w #$2E,D0
00029464 <AmiBlitz3.ab2@4635>    BEQ.w JL_0_49B4
0002946A <AmiBlitz3.ab2@4636>   MOVEA.l defaulttype,A2
0002946E <AmiBlitz3.ab2@4637>   CMP.w #$24,D0
00029472 <AmiBlitz3.ab2@4638>    BNE.w JL_0_49CA
00029474 <AmiBlitz3.ab2@4639>   MOVEQ.l #$07,D1
00029478 <AmiBlitz3.ab2@4640> BRA.w JL_0_49DE
0002947C <AmiBlitz3.ab2@4643>   BSR.w getparameter2
00029480 <AmiBlitz3.ab2@4644>   BEQ.w syntaxerr
00029486 <AmiBlitz3.ab2@4645>   LEA newtypebase,A2
0002948A <AmiBlitz3.ab2@4646>   BSR.w findtype
0002948E <AmiBlitz3.ab2@4647>   BNE.w notypeerr
00029498 <AmiBlitz3.ab2@4651>   MOVE.w oldqflag,instringon
0002949E <AmiBlitz3.ab2@4652>   MOVEA.l lastsourcepos,A5
000294A2 <AmiBlitz3.ab2@4657>   MOVE.w $6(A2),D1
000294A8 <AmiBlitz3.ab2@4658>   CMP.w #8,8(a2)
000294AC <AmiBlitz3.ab2@4659>   BNE 'l1
000294B4 <AmiBlitz3.ab2@4660>   MOVE.b #1,doublepeek
000294BA <AmiBlitz3.ab2@4664>   MOVE.w D1,convsize
000294BE <AmiBlitz3.ab2@4665>   MOVEM.l (A7)+,A2-A3
000294C0 <AmiBlitz3.ab2@4666> RTS
000294C6 <AmiBlitz3.ab2@4671>   BTST #$3,$1(A3)
000294CA <AmiBlitz3.ab2@4672>   BEQ.w JL_0_4A06
000294CE <AmiBlitz3.ab2@4673>   BSR.w AJL_0_498A                                         ;read peek/poke size
000294D2 <AmiBlitz3.ab2@4675>   ORI.w #$7000,D1
000294D8 <AmiBlitz3.ab2@4676>   JSR writeword
000294DE <AmiBlitz3.ab2@4677>   ADDQ.w #1,regnum
000294E0 <AmiBlitz3.ab2@4680> RTS
000294E2 <AmiBlitz3.ab2@4686>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
000294E4 <AmiBlitz3.ab2@4687>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
000294E6 <AmiBlitz3.ab2@4688>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
000294E8 <AmiBlitz3.ab2@4692> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
000294EA <AmiBlitz3.ab2@4693>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
000294EC <AmiBlitz3.ab2@4694>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
000294EE <AmiBlitz3.ab2@4698> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
000294F0 <AmiBlitz3.ab2@4699>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
000294F2 <AmiBlitz3.ab2@4700>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
000294F4 <AmiBlitz3.ab2@4704> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
000294F6 <AmiBlitz3.ab2@4707> srctype:    Ds.w 1
000294FA <AmiBlitz3.ab2@4712>   BSR.w excget
000294FE <AmiBlitz3.ab2@4713>   CMP.w #$2C,D0
00029502 <AmiBlitz3.ab2@4714>    BNE.w syntaxerr
00029508 <AmiBlitz3.ab2@4715>   MOVE.b D2,srctype
0002950E <AmiBlitz3.ab2@4716>   MOVE.w pusha2,D1
00029514 <AmiBlitz3.ab2@4717>   JSR writeword
00029518 <AmiBlitz3.ab2@4718>   BSR.w get1bytemain
0002951C <AmiBlitz3.ab2@4719>   BSR.w excget
00029522 <AmiBlitz3.ab2@4720>   CMP.b srctype,D2
00029526 <AmiBlitz3.ab2@4721>    BNE.w excerr2
0002952C <AmiBlitz3.ab2@4722>   MOVE.w pulla1,D1
00029532 <AmiBlitz3.ab2@4723>    JSR writeword
00029536 <AmiBlitz3.ab2@4724>   CMP.b #$2,D2
0002953A <AmiBlitz3.ab2@4725>    BCS.w JL_0_4B2A
0002953E <AmiBlitz3.ab2@4726>    BEQ.w JL_0_4B1E
00029542 <AmiBlitz3.ab2@4727>   LEA swapl(PC),A0
00029546 <AmiBlitz3.ab2@4728>   LEA swaplf(PC),A1
0002954C <AmiBlitz3.ab2@4729> JMP pokecode
00029550 <AmiBlitz3.ab2@4732>   LEA swapw(PC),A0
00029554 <AmiBlitz3.ab2@4733>   LEA swapwf(PC),A1
0002955A <AmiBlitz3.ab2@4734> JMP pokecode
0002955E <AmiBlitz3.ab2@4737>   LEA swapb(PC),A0
00029562 <AmiBlitz3.ab2@4738>   LEA swapbf(PC),A1
00029568 <AmiBlitz3.ab2@4739> JMP pokecode
0002956E <AmiBlitz3.ab2@4743>   JSR getparameter
00029572 <AmiBlitz3.ab2@4744>   BSR.w JL_0_8E3C
00029576 <AmiBlitz3.ab2@4745>   BSR.w calcvar
0002957A <AmiBlitz3.ab2@4746>   BTST #$E,D2
0002957E <AmiBlitz3.ab2@4747>    BEQ.w JL_0_4B4E
00029582 <AmiBlitz3.ab2@4748>   MOVE.b #$4,D2
00029584 <AmiBlitz3.ab2@4751>   TST.b D2
00029588 <AmiBlitz3.ab2@4752>    BEQ.w excerr
0002958C <AmiBlitz3.ab2@4753>   BTST #$F,D2
00029590 <AmiBlitz3.ab2@4754>    BNE.w JL_0_4B6A
00029596 <AmiBlitz3.ab2@4755>   MOVE.w leaamp,D1
0002959C <AmiBlitz3.ab2@4756>    JSR pokewda5s
0002959E <AmiBlitz3.ab2@4757>   MOVE.w D3,D1
000295A4 <AmiBlitz3.ab2@4758> JMP writeword
000295A6 <AmiBlitz3.ab2@4761> RTS
000295AC <AmiBlitz3.ab2@4767>   MOVE.l mempool,a0
000295B2 <AmiBlitz3.ab2@4768>   MOVEA.l _execbase,A6
000295B6 <AmiBlitz3.ab2@4769> JMP _AllocPooled(a6)
000295BA <AmiBlitz3.ab2@4776>   MOVE.w #$BF00,D1
000295C0 <AmiBlitz3.ab2@4777> JMP Atokejsr
000295C4 <AmiBlitz3.ab2@4781>   CMP.w #-$7FFA,D0
000295C8 <AmiBlitz3.ab2@4782>    BEQ.w popreturn
000295CC <AmiBlitz3.ab2@4783>   CMP.w #-$7FEA,D0
000295D0 <AmiBlitz3.ab2@4784>    BEQ.w popnext2
000295D4 <AmiBlitz3.ab2@4785>   CMP.w #-$7FF2,D0
000295D8 <AmiBlitz3.ab2@4786>    BEQ.w popselect2
000295DC <AmiBlitz3.ab2@4787>   CMP.w #-$7FF5,D0
000295E0 <AmiBlitz3.ab2@4788>    BEQ.w get1bytemain
000295E4 <AmiBlitz3.ab2@4789>   CMP.w #-$7FF4,D0
000295E8 <AmiBlitz3.ab2@4790>    BEQ.w get1bytemain
000295EC <AmiBlitz3.ab2@4791>   CMP.w #-$7FEC,D0
000295F0 <AmiBlitz3.ab2@4792>    BEQ.w get1bytemain
000295F4 <AmiBlitz3.ab2@4793>   CMP.w #-$7F45,D0
000295F8 <AmiBlitz3.ab2@4794>    BEQ.w get1bytemain
000295FC <AmiBlitz3.ab2@4795> BRA.w syntaxerr
00029602 <AmiBlitz3.ab2@4798>   TST.b debugmode
00029606 <AmiBlitz3.ab2@4799>    BEQ.w popreturn__norerr
0002960A <AmiBlitz3.ab2@4800>   LEA popreturn__rfix(PC),A0
0002960E <AmiBlitz3.ab2@4801>   LEA popreturn__rfixf(PC),A1
00029614 <AmiBlitz3.ab2@4802>    JSR pokecode
00029618 <AmiBlitz3.ab2@4803>   MOVE.w #$C305,D1
0002961E <AmiBlitz3.ab2@4804>    JSR Atokejsr
00029622 <AmiBlitz3.ab2@4805>   MOVE.w popreturn__rfix2(PC),D1
00029628 <AmiBlitz3.ab2@4807>    JSR writeword
0002962C <AmiBlitz3.ab2@4808> BRA.w get1bytemain
00029632 <AmiBlitz3.ab2@4812>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00029636 <AmiBlitz3.ab2@4813>   BEQ.w popreturn__rfix2
0002963C <AmiBlitz3.ab2@4816>   JSR $20000                                               ;reass
0002963E <AmiBlitz3.ab2@4819>   ADDQ.w #6,A7
00029642 <AmiBlitz3.ab2@4823>   MOVE.w popreturn__sfix(PC),D1
00029648 <AmiBlitz3.ab2@4824>   JSR writeword
0002964C <AmiBlitz3.ab2@4825> BRA.w get1bytemain
0002964E <AmiBlitz3.ab2@4830>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00029654 <AmiBlitz3.ab2@4835>   MOVE.l firstfor,D0
00029658 <AmiBlitz3.ab2@4836>    BEQ.w noforerr
0002965A <AmiBlitz3.ab2@4837>   MOVEA.l D0,A2
0002965E <AmiBlitz3.ab2@4838>    BSR.w get1bytemain
00029662 <AmiBlitz3.ab2@4839>   BSR.w popnext
00029668 <AmiBlitz3.ab2@4842>   TST.b debugmode
0002966C <AmiBlitz3.ab2@4843>    BEQ.w popnext3__ner
00029672 <AmiBlitz3.ab2@4844>   MOVE.l nextfixw2,D1
00029678 <AmiBlitz3.ab2@4845>   CMPI.w #$3,$C(A2)
0002967C <AmiBlitz3.ab2@4846>    BCS.w writelong2
00029682 <AmiBlitz3.ab2@4847>   MOVE.l nextfixl2,D1
00029688 <AmiBlitz3.ab2@4848> writelong2 JMP  writelong
0002968E <AmiBlitz3.ab2@4851>   CMPI.w #$3,$C(A2)
00029692 <AmiBlitz3.ab2@4852>    BCS.w popnext3__skip2
00029698 <AmiBlitz3.ab2@4853>   MOVE.l nextfixl,D1
0002969E <AmiBlitz3.ab2@4854>   JMP writelong
000296A4 <AmiBlitz3.ab2@4857>   MOVE.w nextfixw,D1
000296AA <AmiBlitz3.ab2@4858> JMP writeword
000296AE <AmiBlitz3.ab2@4862>   MOVE.w $C(A2),D0
000296B4 <AmiBlitz3.ab2@4863>   TST.b debugmode
000296B8 <AmiBlitz3.ab2@4864>    BEQ.w popnext__norunerr
000296BC <AmiBlitz3.ab2@4865>   MOVE.w #$C306,D1
000296C0 <AmiBlitz3.ab2@4866>   CMP.w #$3,D0
000296C4 <AmiBlitz3.ab2@4867>    BCS.w popnext__oktc
000296C6 <AmiBlitz3.ab2@4868>   ADDQ.w #1,D1
000296C8 <AmiBlitz3.ab2@4871>   MOVE.l A2,-(A7)
000296CE <AmiBlitz3.ab2@4872>   JSR Atokejsr
000296D0 <AmiBlitz3.ab2@4873>   MOVEA.l (A7)+,A2
000296D2 <AmiBlitz3.ab2@4876> RTS
000296D8 <AmiBlitz3.ab2@4880>   MOVE.l firstsel,D0
000296DC <AmiBlitz3.ab2@4881>    BEQ.w eselerr
000296DE <AmiBlitz3.ab2@4882>   MOVEA.l D0,A2
000296E2 <AmiBlitz3.ab2@4883>    BSR.w get1bytemain
000296E6 <AmiBlitz3.ab2@4886>   MOVE.w $C(A2),D2
000296EC <AmiBlitz3.ab2@4887>   TST.b debugmode
000296F0 <AmiBlitz3.ab2@4888>    BEQ.w popselect__norerr
000296F4 <AmiBlitz3.ab2@4889>   MOVE.w #$C313,D1
000296F8 <AmiBlitz3.ab2@4890>   CMP.w #$3,D2
000296FC <AmiBlitz3.ab2@4891>    BCS.w popselect__chkit
000296FE <AmiBlitz3.ab2@4892>   ADDQ.w #1,D1
00029704 <AmiBlitz3.ab2@4895>   JSR Atokejsr                                             ;make sure next thing on stack
00029706 <AmiBlitz3.ab2@4899>   MOVEQ.l #$02,D1
0002970A <AmiBlitz3.ab2@4900>   CMP.w #$3,D2
0002970E <AmiBlitz3.ab2@4901>    BCS.w popselect__doit
00029710 <AmiBlitz3.ab2@4902>   MOVEQ.l #$04,D1
00029714 <AmiBlitz3.ab2@4903>   CMP.w #$7,D2
00029718 <AmiBlitz3.ab2@4904>    BCS.w popselect__doit
0002971E <AmiBlitz3.ab2@4905>   LEA endselstr,A0
00029724 <AmiBlitz3.ab2@4906>   LEA endselstrf,A1
0002972A <AmiBlitz3.ab2@4907>   TST.b debugmode
0002972E <AmiBlitz3.ab2@4908>    BEQ.w popselect__norerr3
00029734 <AmiBlitz3.ab2@4909>   LEA endselstrf2,A1
0002973A <AmiBlitz3.ab2@4912>   JSR pokecode
0002973E <AmiBlitz3.ab2@4913>   MOVE.w #$C003,D1                                         ;global freemem
00029744 <AmiBlitz3.ab2@4914> JMP Atokejsr
0002974A <AmiBlitz3.ab2@4917>   TST.b debugmode
0002974E <AmiBlitz3.ab2@4918>    BEQ.w popselect__norerr2
00029750 <AmiBlitz3.ab2@4919>   ADDQ.w #2,D1                                             ;for the "sE"
00029752 <AmiBlitz3.ab2@4922>   LSL.w #8,D1
00029754 <AmiBlitz3.ab2@4923>   LSL.w #1,D1
0002975A <AmiBlitz3.ab2@4924>   OR.w endsel,D1
00029760 <AmiBlitz3.ab2@4925> JMP writeword
00029764 <AmiBlitz3.ab2@4928> firstrep:    Ds.l 1
00029768 <AmiBlitz3.ab2@4929> replineat:   Ds.l 1
0002976E <AmiBlitz3.ab2@4938>   CLR.l fp0addr
00029778 <AmiBlitz3.ab2@4939>   MOVE.l linenumat,replineat
0002977A <AmiBlitz3.ab2@4940>   MOVEQ.l #$08,D0
00029780 <AmiBlitz3.ab2@4941>   MOVEA.l _execbase,A6
00029786 <AmiBlitz3.ab2@4942>   MOVE.l mempool,a0
0002978A <AmiBlitz3.ab2@4943>   JSR _AllocPooled(a6)
0002978C <AmiBlitz3.ab2@4945>   MOVEA.l D0,A0
00029790 <AmiBlitz3.ab2@4946>   MOVE.l firstrep(PC),(A0)
00029796 <AmiBlitz3.ab2@4947>   MOVE.l A0,firstrep
0002979E <AmiBlitz3.ab2@4948>   MOVE.l destpointer,$4(A0)
000297A0 <AmiBlitz3.ab2@4949> RTS
000297A6 <AmiBlitz3.ab2@4952> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
000297AA <AmiBlitz3.ab2@4955>   LEA str_temp(PC),A1
000297AC <AmiBlitz3.ab2@4956>   CLR.w (A1)
000297B0 <AmiBlitz3.ab2@4957>   CLR.l $2(A1)
000297B2 <AmiBlitz3.ab2@4960>   MOVEQ.l #$04,D0
000297B6 <AmiBlitz3.ab2@4963>     MOVE.b $1(A1),(A1)+
000297BA <AmiBlitz3.ab2@4964>   DBF D0,check_for_infoextention__loop
000297BE <AmiBlitz3.ab2@4969>   LEA str_temp(PC),A1
000297C0 <AmiBlitz3.ab2@4970>   MOVE.b (A0),D0
000297C4 <AmiBlitz3.ab2@4971>   ORI.b #$20,D0
000297C8 <AmiBlitz3.ab2@4972>   MOVE.b D0,$5(A1)
000297CA <AmiBlitz3.ab2@4973>   TST.b (A0)+
000297CE <AmiBlitz3.ab2@4974>    BNE.w check_for_infoextention__loop2
000297D2 <AmiBlitz3.ab2@4975>   CMPI.w #$2E69,(A1)+                                      ;".i"
000297D6 <AmiBlitz3.ab2@4976>    BNE.w check_for_infoextention__no
000297DC <AmiBlitz3.ab2@4977>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
000297DE <AmiBlitz3.ab2@4980> RTS
000297E2 <AmiBlitz3.ab2@4984>   BPL.w gettokeps__evaltoke
000297E4 <AmiBlitz3.ab2@4985>   MOVE.w D0,D1
000297E8 <AmiBlitz3.ab2@4986>   ANDI.w #$7F80,D1
000297EC <AmiBlitz3.ab2@4987>    BEQ.w tokeerr
000297F0 <AmiBlitz3.ab2@4988>   BCLR #$F,D0
000297F2 <AmiBlitz3.ab2@4989>   MOVE.w D0,D4                                             ;got toke number
000297F6 <AmiBlitz3.ab2@4990>   BSR.w get1bytemain
000297FA <AmiBlitz3.ab2@4991> BRA.w gettokeps__gotnum
00029800 <AmiBlitz3.ab2@4994>   JSR JL_0_BF6A
00029806 <AmiBlitz3.ab2@4995>   CMP.l #MaxWord,D3
0002980A <AmiBlitz3.ab2@4996>    BHI.w tokeerr
0002980C <AmiBlitz3.ab2@4997>   TST.w D6
00029810 <AmiBlitz3.ab2@4998>    BNE.w tokeerr
00029812 <AmiBlitz3.ab2@4999>   MOVE.w D3,D4
00029814 <AmiBlitz3.ab2@5002>   MOVEQ.l #$00,D5
00029818 <AmiBlitz3.ab2@5003>   CMP.w #$2C,D0
0002981C <AmiBlitz3.ab2@5004>    BNE.w gettokeps__gotfrom
0002981E <AmiBlitz3.ab2@5005>   MOVE.w D4,-(A7)
00029824 <AmiBlitz3.ab2@5006>    JSR AJL_0_BF6E
0002982A <AmiBlitz3.ab2@5007>   CMP.l #MaxWord,D3
0002982E <AmiBlitz3.ab2@5008>    BHI.w tokeerr
00029830 <AmiBlitz3.ab2@5009>   TST.w D6
00029834 <AmiBlitz3.ab2@5010>    BNE.w tokeerr
00029836 <AmiBlitz3.ab2@5011>   MOVE.w D3,D5
00029838 <AmiBlitz3.ab2@5012>   MOVE.w (A7)+,D4
0002983A <AmiBlitz3.ab2@5015> RTS                                                        ;d4=toke, d5=form
0002983C <AmiBlitz3.ab2@5019>   TST.w D0
00029840 <AmiBlitz3.ab2@5020>    BSR.w gettokeps
00029844 <AmiBlitz3.ab2@5021>   MOVE.w #$4EB9,D1
0002984A <AmiBlitz3.ab2@5022>   JSR writeword
0002984E <AmiBlitz3.ab2@5023>   BSR.w addoff
00029850 <AmiBlitz3.ab2@5024>   MOVE.w D5,D1
00029854 <AmiBlitz3.ab2@5025>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00029856 <AmiBlitz3.ab2@5026>   SWAP D1
00029858 <AmiBlitz3.ab2@5027>   MOVE.w D4,D1
0002985E <AmiBlitz3.ab2@5028> JMP writelong
00029860 <AmiBlitz3.ab2@5032>   TST.w D0
00029864 <AmiBlitz3.ab2@5033>    BSR.w gettokeps
00029868 <AmiBlitz3.ab2@5034>   MOVE.w #$4EB9,D1
0002986E <AmiBlitz3.ab2@5035>   JSR writeword
00029872 <AmiBlitz3.ab2@5036>   BSR.w addoff
00029874 <AmiBlitz3.ab2@5037>   MOVE.w D5,D1
00029878 <AmiBlitz3.ab2@5038>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
0002987A <AmiBlitz3.ab2@5039>   SWAP D1
0002987C <AmiBlitz3.ab2@5040>   MOVE.w D4,D1
00029882 <AmiBlitz3.ab2@5041>   JMP writelong
00029888 <AmiBlitz3.ab2@5045>   JSR JL_0_BF6A
0002988E <AmiBlitz3.ab2@5046>   CMP.l #$10000,D3
00029892 <AmiBlitz3.ab2@5047>    BCC.w tokeerr
00029894 <AmiBlitz3.ab2@5048>   MOVE.w D3,D1
0002989A <AmiBlitz3.ab2@5049> JMP Atokejsr
0002989E <AmiBlitz3.ab2@5053>   BSR.w gettokeps
000298A2 <AmiBlitz3.ab2@5054>   MOVE.w #$4EB9,D1
000298A8 <AmiBlitz3.ab2@5055>   JSR writeword
000298AE <AmiBlitz3.ab2@5056>   MOVE.l destpointer,D3
000298B6 <AmiBlitz3.ab2@5057>   BTST #$7,blitzmode
000298BA <AmiBlitz3.ab2@5058>    BEQ.w do_TokeJsr__inamiga
000298BE <AmiBlitz3.ab2@5059>   BSET #$E,D5
000298C2 <AmiBlitz3.ab2@5062>   BSR.w JL_0_6E86
000298C6 <AmiBlitz3.ab2@5063>   BSR.w addoff
000298CC <AmiBlitz3.ab2@5064>   JMP writelong
000298D0 <AmiBlitz3.ab2@5068>   BEQ.w do_VWait__zero
000298D2 <AmiBlitz3.ab2@5069>   MOVEQ.l #$02,D2                                          ;get a word
000298D8 <AmiBlitz3.ab2@5071>   JSR bakeval
000298DC <AmiBlitz3.ab2@5072>   MOVE.w fvwait(PC),D1
000298E0 <AmiBlitz3.ab2@5073> BRA.w do_VWait__vcont
000298E4 <AmiBlitz3.ab2@5076>   MOVE.w #$7000,D1                                         ;moveq #0,d0
000298EA <AmiBlitz3.ab2@5079>   JSR writeword
000298EE <AmiBlitz3.ab2@5080>   MOVE.w #$C104,D1
000298F4 <AmiBlitz3.ab2@5081> JMP Atokejsr
000298F6 <AmiBlitz3.ab2@5085>   SUBQ.w #1,D0
000298FC <AmiBlitz3.ab2@5088>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00029900 <AmiBlitz3.ab2@5091>   Dc.l $426d0001                                           ;clr.w $0(A5)
00029904 <AmiBlitz3.ab2@5095>   MOVE.b debugmode(PC),D1
00029908 <AmiBlitz3.ab2@5096>   BEQ.b debugmode_codelabel__skip
0002990C <AmiBlitz3.ab2@5097>   MOVE.w #$D500,D1
00029912 <AmiBlitz3.ab2@5098> JMP Atokejsr
00029914 <AmiBlitz3.ab2@5101> RTS
0002991C <AmiBlitz3.ab2@5105>   BSET #$0,blitzmode
00029924 <AmiBlitz3.ab2@5106>   BSET #$7,blitzmode
00029928 <AmiBlitz3.ab2@5107>   MOVE.w #$C200,D1
0002992E <AmiBlitz3.ab2@5108>   JSR Atokejsr
00029934 <AmiBlitz3.ab2@5109>   TST.b debugmode
00029938 <AmiBlitz3.ab2@5110>    BEQ.w do_BLITZ__done
0002993C <AmiBlitz3.ab2@5111>   MOVE.w cgoblitz(PC),D1
00029942 <AmiBlitz3.ab2@5112>   JSR writeword
00029944 <AmiBlitz3.ab2@5113>   MOVEQ.l #-$01,D1
0002994A <AmiBlitz3.ab2@5114>   JSR writeword
00029950 <AmiBlitz3.ab2@5115>   JSR getbbase
00029956 <AmiBlitz3.ab2@5116>   JSR writeword
0002995A <AmiBlitz3.ab2@5119> BRA.w debugmode_codelabel
0002995E <AmiBlitz3.ab2@5123>   MOVE.w #$C201,D1
00029962 <AmiBlitz3.ab2@5124> BRA.w do_AMIGA__toamode
00029966 <AmiBlitz3.ab2@5128>   MOVE.W  #$C202,D1
0002996E <AmiBlitz3.ab2@5131>   BSET #$0,blitzmode
00029976 <AmiBlitz3.ab2@5132>   BCLR #$7,blitzmode
0002997C <AmiBlitz3.ab2@5133>   JSR Atokejsr
00029982 <AmiBlitz3.ab2@5134>   TST.b debugmode
00029986 <AmiBlitz3.ab2@5135>    BEQ.w do_AMIGA__done
0002998A <AmiBlitz3.ab2@5136>   MOVE.w cgoamiga(PC),D1
00029990 <AmiBlitz3.ab2@5137>   JSR writeword
00029996 <AmiBlitz3.ab2@5138>   JSR getbbase
0002999C <AmiBlitz3.ab2@5139>   JSR writeword
000299A0 <AmiBlitz3.ab2@5142> BRA.w debugmode_codelabel
000299A4 <AmiBlitz3.ab2@5146>   MOVEM.l D2-D7/A2-A4,-(A7)
000299A8 <AmiBlitz3.ab2@5149>   MOVEM.l (A7)+,D2-D7/A2-A4
000299AE <AmiBlitz3.ab2@5153>   JSR JL_0_BF6A
000299B4 <AmiBlitz3.ab2@5154>   CMP.l #$E,D3
000299B8 <AmiBlitz3.ab2@5155>    BCC.w interr4
000299BC <AmiBlitz3.ab2@5156>   MOVE.w #$7000,D1
000299BE <AmiBlitz3.ab2@5157>   OR.w D3,D1
000299C4 <AmiBlitz3.ab2@5158>   JSR writeword
000299C8 <AmiBlitz3.ab2@5159>   MOVE.w #$C101,D1
000299CE <AmiBlitz3.ab2@5160> JMP Atokejsr                                               ;clear the interupt
000299D0 <AmiBlitz3.ab2@5163> inerr:       Ds.w 1                                        ;flag - in error trap mode
000299D4 <AmiBlitz3.ab2@5164> errjmp:      Ds.l 1                                        ;where err jump is
000299D8 <AmiBlitz3.ab2@5165> errcode:     Ds.l 1
000299DC <AmiBlitz3.ab2@5169>   MOVE.W  #$D202,D1
000299E2 <AmiBlitz3.ab2@5170> JMP Atokejsr                                               ;BRA.W Atokejsr
000299E6 <AmiBlitz3.ab2@5174>   MOVE.w inerr(PC),D1
000299EA <AmiBlitz3.ab2@5175>    BEQ.w errerr3
000299F0 <AmiBlitz3.ab2@5176>   CLR.w inerr
000299F6 <AmiBlitz3.ab2@5177>   MOVE.w dontwrite,D1
000299FA <AmiBlitz3.ab2@5178>    BNE.w doendseterr__skip
000299FE <AmiBlitz3.ab2@5179>   MOVEA.l errjmp(PC),A0
00029A04 <AmiBlitz3.ab2@5180>   MOVE.l destpointer,(A0)
00029A08 <AmiBlitz3.ab2@5183> BRA.w get1bytemain
00029A0C <AmiBlitz3.ab2@5187>   MOVE.w #$D205,D1
00029A12 <AmiBlitz3.ab2@5188> JMP Atokejsr
00029A18 <AmiBlitz3.ab2@5192>   MOVE.w proceduremode,D1
00029A1C <AmiBlitz3.ab2@5193>    BNE.w errerr1
00029A20 <AmiBlitz3.ab2@5194>   MOVE.w inerr(PC),D1
00029A24 <AmiBlitz3.ab2@5195>    BNE.w errerr2
00029A2A <AmiBlitz3.ab2@5196>   LEA inerr,a0
00029A2C <AmiBlitz3.ab2@5197>   NOT.w (a0)                                               ;reass
00029A30 <AmiBlitz3.ab2@5198>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00029A36 <AmiBlitz3.ab2@5199>   JSR writeword
00029A40 <AmiBlitz3.ab2@5200>   MOVE.l destpointer,errcode
00029A44 <AmiBlitz3.ab2@5201>   BSR.w addoff
00029A48 <AmiBlitz3.ab2@5202>   BSR.w writelong
00029A4C <AmiBlitz3.ab2@5203>   MOVE.w #$D201,D1
00029A52 <AmiBlitz3.ab2@5204>   JSR Atokejsr
00029A56 <AmiBlitz3.ab2@5205>   MOVE.w #$4EF9,D1                                         ;JMP
00029A5A <AmiBlitz3.ab2@5206>   BSR.w writeword
00029A64 <AmiBlitz3.ab2@5207>   MOVE.l destpointer,errjmp
00029A68 <AmiBlitz3.ab2@5208>   BSR.w addoff
00029A6C <AmiBlitz3.ab2@5209>   BSR.w writelong
00029A72 <AmiBlitz3.ab2@5210>   MOVE.w dontwrite,D1
00029A76 <AmiBlitz3.ab2@5211>    BNE.w do_SetErr__skip
00029A7A <AmiBlitz3.ab2@5212>   MOVEA.l errcode(PC),A0
00029A80 <AmiBlitz3.ab2@5213>   MOVE.l destpointer,(A0)
00029A82 <AmiBlitz3.ab2@5216> RTS
00029A86 <AmiBlitz3.ab2@5219> intlineat:  Ds.l 1
00029A88 <AmiBlitz3.ab2@5223>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00029A8C <AmiBlitz3.ab2@5224>   BSR.w errchx
00029A92 <AmiBlitz3.ab2@5225>   MOVE.w D1,intstring
00029A9C <AmiBlitz3.ab2@5226>   MOVE.l linenumat,intlineat
00029AA2 <AmiBlitz3.ab2@5227>   JSR JL_0_BF6A                                           ;get constant - int level
00029AA8 <AmiBlitz3.ab2@5228>   CMP.l #$E,D3
00029AAC <AmiBlitz3.ab2@5229>    BCC.w interr4
00029AB2 <AmiBlitz3.ab2@5230>   ST intsused
00029AB8 <AmiBlitz3.ab2@5231>   MOVE.w D3,intlevel
00029ABC <AmiBlitz3.ab2@5232>   MOVE.w #$7000,D1
00029ABE <AmiBlitz3.ab2@5233>   OR.w D3,D1                                              
00029AC2 <AmiBlitz3.ab2@5234>   BSR.w writeword                                         ;moveq #x,d0
00029AC6 <AmiBlitz3.ab2@5235>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00029ACA <AmiBlitz3.ab2@5236>   BSR.w writeword
00029ACE <AmiBlitz3.ab2@5237>   BSR.w addoff
00029AD4 <AmiBlitz3.ab2@5238>   MOVE.l destpointer,-(A7)
00029AD8 <AmiBlitz3.ab2@5239>   BSR.w writelong
00029ADC <AmiBlitz3.ab2@5240>   MOVE.w #$C100,D1
00029AE2 <AmiBlitz3.ab2@5241>   JSR Atokejsr
00029AE6 <AmiBlitz3.ab2@5242>   MOVE.w #$4EF9,D1                                        ;jmp
00029AEA <AmiBlitz3.ab2@5243>   BSR.w writeword
00029AEE <AmiBlitz3.ab2@5244>   BSR.w addoff
00029AF8 <AmiBlitz3.ab2@5245>   MOVE.l destpointer,intjmpat
00029AFC <AmiBlitz3.ab2@5246>   BSR.w writelong
00029AFE <AmiBlitz3.ab2@5247>   MOVEA.l (A7)+,A0
00029B04 <AmiBlitz3.ab2@5248>   MOVE.w dontwrite,D1
00029B08 <AmiBlitz3.ab2@5249>   BNE.w do_SetInt__dontpoke
00029B0E <AmiBlitz3.ab2@5250>   MOVE.l destpointer,(A0)
00029B12 <AmiBlitz3.ab2@5253>   MOVE.l intstart0(PC),D1
00029B16 <AmiBlitz3.ab2@5254>   BSR.w writelong
00029B1C <AmiBlitz3.ab2@5255>   TST.b debugmode
00029B20 <AmiBlitz3.ab2@5256>    BEQ.w do_SetInt__norerr
00029B22 <AmiBlitz3.ab2@5260>   MOVEQ.l #$02,D1
00029B26 <AmiBlitz3.ab2@5261>   BSR.w writetrap
00029B2A <AmiBlitz3.ab2@5262>   BSR.w addoff
00029B34 <AmiBlitz3.ab2@5263>   MOVE.l destpointer,intcleanat
00029B38 <AmiBlitz3.ab2@5264>   BSR.w writelong
00029B3E <AmiBlitz3.ab2@5265>   MOVE.w intlevel,D1
00029B42 <AmiBlitz3.ab2@5266>   BSR.w writeword
00029B46 <AmiBlitz3.ab2@5267>   MOVE.w #$C30B,D1                                         ;disable stack checks
00029B4C <AmiBlitz3.ab2@5268>   JSR Atokejsr
00029B50 <AmiBlitz3.ab2@5271>   MOVE.w #$FED3,D1
00029B54 <AmiBlitz3.ab2@5272>   BSR.w uselib
00029B58 <AmiBlitz3.ab2@5273>   MOVE.w #$C102,D1
00029B5E <AmiBlitz3.ab2@5274>   JSR Atokejsr
00029B66 <AmiBlitz3.ab2@5275>   MOVE.w #-1,lasta6
00029B70 <AmiBlitz3.ab2@5276>   MOVE.l linenumat,intline
00029B72 <AmiBlitz3.ab2@5277> RTS
00029B74 <AmiBlitz3.ab2@5281>             Ds.w 1                                         ;??looks like obsolved data??
00029B78 <AmiBlitz3.ab2@5283> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00029B7C <AmiBlitz3.ab2@5285> intjmpat:   Ds.l 1
00029B80 <AmiBlitz3.ab2@5286> intline:    Ds.l 1
00029B82 <AmiBlitz3.ab2@5287> intstring:  Ds.w 1                                         ;flag 0 = no setint
00029B84 <AmiBlitz3.ab2@5290> intlevel:   Ds.w 1
00029B88 <AmiBlitz3.ab2@5291> intcleanat: Ds.l 1
00029B8C <AmiBlitz3.ab2@5292> ret15add:   Ds.l 1
00029B8E <AmiBlitz3.ab2@5293> ret15cc:    Ds.w 1
00029B96 <AmiBlitz3.ab2@5297>   ADDI.l #$12,$2(A7)
00029B9E <AmiBlitz3.ab2@5298>   MOVE.l $2(A7),ret15add
00029BA4 <AmiBlitz3.ab2@5299>   MOVE.w (A7),ret15cc
00029BAC <AmiBlitz3.ab2@5300>   MOVE.l #directdo,$2(A7)
00029BAE <AmiBlitz3.ab2@5301> RTE
00029BB2 <AmiBlitz3.ab2@5310>   MOVE.l ret15add(PC),-(A7)
00029BB6 <AmiBlitz3.ab2@5311>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00029BBA <AmiBlitz3.ab2@5312>   MOVEM.l D0-D7/A0-A6,-(A7)
00029BC4 <AmiBlitz3.ab2@5313>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00029BCE <AmiBlitz3.ab2@5314>   MOVE.l destbufferstart,trap15temp2
00029BD8 <AmiBlitz3.ab2@5315>   MOVE.l libend,templibend
00029BE2 <AmiBlitz3.ab2@5316>   MOVE.l data1start,tempdata1start
00029BE8 <AmiBlitz3.ab2@5317>   CLR.l hunkoffsetcounter
00029BEE <AmiBlitz3.ab2@5319>   MOVE.l directbuffer,a0
00029BF4 <AmiBlitz3.ab2@5323>   MOVE.l a0,destbufferstart
00029BFA <AmiBlitz3.ab2@5324>   ADD.l #3900,a0
00029C00 <AmiBlitz3.ab2@5325>   MOVE.l a0,destbufferend
00029C06 <AmiBlitz3.ab2@5326>   TST.b exdebug
00029C0A <AmiBlitz3.ab2@5327>   BEQ 'l1
00029C10 <AmiBlitz3.ab2@5328>   MOVE.l a0,libend
00029C16 <AmiBlitz3.ab2@5329>   ADD.l #4000,a0
00029C1C <AmiBlitz3.ab2@5330>   MOVE.l a0,data1start
00029C26 <AmiBlitz3.ab2@5333>   MOVE.l #dircont,errcont
00029C2C <AmiBlitz3.ab2@5334>   MOVE.l A7,errstack
00029C34 <AmiBlitz3.ab2@5335>   MOVE.w #$FFFF,dirmode
00029C38 <AmiBlitz3.ab2@5337>     MOVEA.l ret15add(PC),A1
00029C3E <AmiBlitz3.ab2@5338>     MOVE.w -(A1),blitzmode
00029C40 <AmiBlitz3.ab2@5339>     CLR.l -(A1)
00029C46 <AmiBlitz3.ab2@5340>     MOVE.l -(A1),firstglob
00029C4C <AmiBlitz3.ab2@5341>     MOVE.l -(A1),firstlocal
00029C52 <AmiBlitz3.ab2@5343>   CLR.w proceduremode
00029C58 <AmiBlitz3.ab2@5344>   MOVE.l firstglob,D0
00029C5E <AmiBlitz3.ab2@5345>   OR.l firstlocal,D0
00029C62 <AmiBlitz3.ab2@5346>   BEQ.b directdo__skip
00029C68 <AmiBlitz3.ab2@5347>   NOT.w proceduremode
00029C6A <AmiBlitz3.ab2@5350>   MOVEA.l -(A1),A0                                         ;address of string
00029C6C <AmiBlitz3.ab2@5354>   MOVE.l A0,-(A7)
00029CAA <AmiBlitz3.ab2@5357>   !ComData_GetL{comFunc_DebugTrap,A1}
00029CAC <AmiBlitz3.ab2@5360>   JSR (A1)                                                 ;tokenise line.....
00029CAE <AmiBlitz3.ab2@5361>   MOVEA.l (A7)+,A5
00029CB8 <AmiBlitz3.ab2@5362>   MOVE.l directbuffer,destpointer
00029CBE <AmiBlitz3.ab2@5363>   TST.b exdebug
00029CC2 <AmiBlitz3.ab2@5364>   BEQ 'noexdebug
00029CC4 <AmiBlitz3.ab2@5365>   MOVE.l a5,a0
00029CCA <AmiBlitz3.ab2@5366>   MOVE.l #200,d0
00029CD0 <AmiBlitz3.ab2@5369>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00029CD4 <AmiBlitz3.ab2@5370>   DBF d0,'l1
00029CDA <AmiBlitz3.ab2@5375>   MOVE.l destpointer,a0
00029CDE <AmiBlitz3.ab2@5376>   MOVE.w #$207c,(a0)+
00029CE0 <AmiBlitz3.ab2@5377>   MOVE.l a5,d0
00029CE6 <AmiBlitz3.ab2@5378>   ADD.l #$206,d0                                           ;constant from debuglib
00029CE8 <AmiBlitz3.ab2@5379>   MOVE.l d0,(a0)+
00029CEE <AmiBlitz3.ab2@5380>   MOVE.l a0,destpointer
00029CF0 <AmiBlitz3.ab2@5381>   MOVE.l a5,a0
00029CF4 <AmiBlitz3.ab2@5382>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00029CFA <AmiBlitz3.ab2@5383>   MOVE.l #"$520",(a0)+
00029CFE <AmiBlitz3.ab2@5384>   MOVE.w #"4:",(a0)+
00029D04 <AmiBlitz3.ab2@5387>   CLR.w dontwrite
00029D0C <AmiBlitz3.ab2@5388>   MOVE.w #$FFFF,lasta6
00029D10 <AmiBlitz3.ab2@5389>   BSR.w compile_line                                        ;.....compile it
00029D16 <AmiBlitz3.ab2@5390>   TST.b exdebug
00029D1A <AmiBlitz3.ab2@5391>   BEQ 'noexdebug2
00029D20 <AmiBlitz3.ab2@5392>   JSR JL_0_6C76
00029D26 <AmiBlitz3.ab2@5395>   CLR.w proceduremode
00029D2A <AmiBlitz3.ab2@5396>   BSR.w errchx
00029D2E <AmiBlitz3.ab2@5397>   MOVE.w #$4EF9,D1
00029D32 <AmiBlitz3.ab2@5398>   BSR.w writeword                                          ;JMP
00029D36 <AmiBlitz3.ab2@5399>   MOVE.l ret15add(PC),D1
00029D3A <AmiBlitz3.ab2@5400>   BSR.w writelong                                          ;jmp to done
00029D40 <AmiBlitz3.ab2@5401>   MOVE.w dontwrite,D0
00029D44 <AmiBlitz3.ab2@5402>    BNE.w nodirmem
00029D4C <AmiBlitz3.ab2@5403>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00029D52 <AmiBlitz3.ab2@5406>   CLR.w dirmode
00029D58 <AmiBlitz3.ab2@5407>   MOVE.w ret15cc(PC),$3C(A7)
00029D62 <AmiBlitz3.ab2@5408>   MOVE.l trap15temp,destbufferend
00029D6C <AmiBlitz3.ab2@5409>   MOVE.l trap15temp2,destbufferstart
00029D76 <AmiBlitz3.ab2@5410>   MOVE.l tempdata1start,data1start
00029D80 <AmiBlitz3.ab2@5411>   MOVE.l templibend,libend
00029D84 <AmiBlitz3.ab2@5412>   MOVEM.l (A7)+,D0-D7/A0-A6
00029D88 <AmiBlitz3.ab2@5413>   BSR.w Aclearcache                                        ;selden used
00029D8A <AmiBlitz3.ab2@5414> RTR
00029D8E <AmiBlitz3.ab2@5417>   MOVEA.l ret15add(PC),A0
00029D90 <AmiBlitz3.ab2@5418>   SUBQ.w #2,A0
00029D92 <AmiBlitz3.ab2@5419>   MOVE.l D0,-(A0)
00029D96 <AmiBlitz3.ab2@5420> BRA.w direxit
00029D9A <AmiBlitz3.ab2@5424>   MOVE.w $6(A3),D1
00029D9E <AmiBlitz3.ab2@5425>   BSR.w uselib                                             ;get lib for base address
00029DA2 <AmiBlitz3.ab2@5426>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00029DA4 <AmiBlitz3.ab2@5427>   ADDQ.w #8,A3
00029DA6 <AmiBlitz3.ab2@5428>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00029DA8 <AmiBlitz3.ab2@5429>   MOVE.l A3,-(A7)
00029DAA <AmiBlitz3.ab2@5433>   MOVEQ.l #$00,D3
00029DB0 <AmiBlitz3.ab2@5434>   JSR checka4a5
00029DB2 <AmiBlitz3.ab2@5436>   MOVE.b (A3)+,D1
00029DB6 <AmiBlitz3.ab2@5437>    BMI.w stamigalib__done
00029DB8 <AmiBlitz3.ab2@5438>   MOVEQ.l #$03,D2
00029DBA <AmiBlitz3.ab2@5439>   ADDQ.w #1,D3
00029DBE <AmiBlitz3.ab2@5440>   MOVEM.l D3/A3,-(A7)
00029DC4 <AmiBlitz3.ab2@5441>   MOVE.b funcparloop,-(a7)
00029DCC <AmiBlitz3.ab2@5442>   MOVE.b #0,funcparloop
00029DD2 <AmiBlitz3.ab2@5443>   MOVE.l leftsidetype,-(a7)
00029DD8 <AmiBlitz3.ab2@5444>   MOVE.l rightsidetype,-(a7)
00029DDE <AmiBlitz3.ab2@5445>   CLR.l leftsidetype
00029DE4 <AmiBlitz3.ab2@5446>   CLR.l rightsidetype
00029DEA <AmiBlitz3.ab2@5447>   MOVE.b blitzparloop,-(a7)
00029DF2 <AmiBlitz3.ab2@5448>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00029DF8 <AmiBlitz3.ab2@5449>   JSR peval
00029DFE <AmiBlitz3.ab2@5450>   MOVE.b (a7)+,blitzparloop
00029E04 <AmiBlitz3.ab2@5451>   MOVE.l (a7)+,rightsidetype
00029E0A <AmiBlitz3.ab2@5452>   MOVE.l (a7)+,leftsidetype
00029E10 <AmiBlitz3.ab2@5453>   MOVE.b (a7)+,funcparloop
00029E14 <AmiBlitz3.ab2@5454>   MOVEM.l (A7)+,D3/A3
00029E18 <AmiBlitz3.ab2@5455>   CMP.w #$2C,D0
00029E1C <AmiBlitz3.ab2@5456>    BEQ.w stamigalib__loop
00029E1E <AmiBlitz3.ab2@5457>   TST.b (A3)
00029E22 <AmiBlitz3.ab2@5458>    BPL.w syntaxerr
00029E24 <AmiBlitz3.ab2@5461>   MOVEA.l (A7)+,A3
00029E26 <AmiBlitz3.ab2@5462>   SUBQ.w #1,D3
00029E2A <AmiBlitz3.ab2@5463>    BPL.w stamigalib__toend
00029E2E <AmiBlitz3.ab2@5464>    BSR.w get1bytemain                                      ;no pars - get :
00029E32 <AmiBlitz3.ab2@5465> BRA.w stamigalib__nopars
00029E34 <AmiBlitz3.ab2@5468>   TST.b (A3)+                                              ;go to end of params
00029E38 <AmiBlitz3.ab2@5469>    BPL.w stamigalib__toend
00029E3A <AmiBlitz3.ab2@5470>   SUBQ.w #1,A3
00029E3C <AmiBlitz3.ab2@5473>    MOVEQ.l #$00,D1
00029E3E <AmiBlitz3.ab2@5474>    MOVE.b -(A3),D1
00029E42 <AmiBlitz3.ab2@5475>    BTST #$4,D1
00029E46 <AmiBlitz3.ab2@5476>     BNE.w stamigalib__addreg
00029E48 <AmiBlitz3.ab2@5477>    LSL.w #8,D1
00029E4A <AmiBlitz3.ab2@5478>    LSL.w #1,D1
00029E4E <AmiBlitz3.ab2@5479>    ORI.w #$201F,D1
00029E52 <AmiBlitz3.ab2@5480>  BRA.w stamigalib__gotit
00029E56 <AmiBlitz3.ab2@5483>    ANDI.w #$7,D1
00029E58 <AmiBlitz3.ab2@5484>    LSL.w #8,D1
00029E5A <AmiBlitz3.ab2@5485>    LSL.w #1,D1
00029E5E <AmiBlitz3.ab2@5486>    ORI.w #$205F,D1
00029E62 <AmiBlitz3.ab2@5489>     BSR.w writeword
00029E66 <AmiBlitz3.ab2@5490>   DBF D3,stamigalib__loop2
00029E6C <AmiBlitz3.ab2@5493>   MOVE.w (A7)+,libjsr+2
00029E72 <AmiBlitz3.ab2@5494>   MOVE.w (A7)+,libbase+2
00029E78 <AmiBlitz3.ab2@5495>   MOVE.l libbase,D1
00029E7C <AmiBlitz3.ab2@5496>    BSR.w writelong
00029E82 <AmiBlitz3.ab2@5497>   MOVE.l libjsr,D1
00029E88 <AmiBlitz3.ab2@5498>   JSR writelong
00029E8E <AmiBlitz3.ab2@5499>   JSR restorea4a5
00029E90 <AmiBlitz3.ab2@5500>   RTS
00029E96 <AmiBlitz3.ab2@5503>   MOVE.l data1,D4
00029E9C <AmiBlitz3.ab2@5504>   SUB.l data1start,D4
00029EA2 <AmiBlitz3.ab2@5505>   ADD.l #10000,d4
00029EA8 <AmiBlitz3.ab2@5506>   MOVE.l libend,D3
00029EAE <AmiBlitz3.ab2@5507>   SUB.l destbufferend,D3
00029EB4 <AmiBlitz3.ab2@5508>   ADD.l #40000,d3
00029EBA <AmiBlitz3.ab2@5509>   MOVE.l bigpc,D2
00029EC0 <AmiBlitz3.ab2@5510>   SUB.l destbufferstart,D2
00029EC6 <AmiBlitz3.ab2@5511>   ADD.l #20000,d2
00029ECC <AmiBlitz3.ab2@5512>   MOVE.l databuffer,D5
00029ED2 <AmiBlitz3.ab2@5513>   ADD.l #10000,D5
00029ED6 <AmiBlitz3.ab2@5514> BRA newallox
00029EDC <AmiBlitz3.ab2@5518>   MOVE.l objectbuffer,D2
00029EDE <AmiBlitz3.ab2@5519>   LSR.l #1,D2
00029EE4 <AmiBlitz3.ab2@5520>   ADD.l objectbuffer,D2
00029EEA <AmiBlitz3.ab2@5521>   MOVE.l libsbuffer,D3
00029EEC <AmiBlitz3.ab2@5522>   LSR.l #1,D3
00029EF2 <AmiBlitz3.ab2@5523>   ADD.l libsbuffer,D3
00029EF8 <AmiBlitz3.ab2@5524>   MOVE.l systembuffer,D4
00029EFA <AmiBlitz3.ab2@5525>   LSR.l #1,D4
00029F00 <AmiBlitz3.ab2@5526>   ADD.l systembuffer,D4
00029F06 <AmiBlitz3.ab2@5527>   MOVE.l databuffer,D5
00029F08 <AmiBlitz3.ab2@5528>   LSR.l #1,D5
00029F0E <AmiBlitz3.ab2@5529>   ADD.l databuffer,D5
00029F12 <AmiBlitz3.ab2@5530> BRA.w newallox
00029F18 <AmiBlitz3.ab2@5534>   MOVE.l bigpc,D2
00029F1E <AmiBlitz3.ab2@5535>   SUB.l destbufferstart,D2                                     ;size of object buffer
00029F24 <AmiBlitz3.ab2@5536>   SUB.l savefuncspace,d2
00029F2A <AmiBlitz3.ab2@5538>   TST.w debugversion
00029F2E <AmiBlitz3.ab2@5539>    BNE.b alloxadj__skip
00029F34 <AmiBlitz3.ab2@5540>   ADDI.l #$800,D2
00029F3A <AmiBlitz3.ab2@5543>   MOVE.l libend,D3
00029F40 <AmiBlitz3.ab2@5544>   SUB.l destbufferend,D3
00029F46 <AmiBlitz3.ab2@5546>   MOVE.l data1,D4
00029F4C <AmiBlitz3.ab2@5547>   SUB.l data1start,D4
00029F52 <AmiBlitz3.ab2@5549>   MOVE.l data2,D5
00029F58 <AmiBlitz3.ab2@5550>   SUB.l data2at,D5
00029F5E <AmiBlitz3.ab2@5552>   CLR.l morememadd
00029F62 <AmiBlitz3.ab2@5555>   BSR.w makeallox
00029F66 <AmiBlitz3.ab2@5556>   BNE.w newallox__done
00029F6A <AmiBlitz3.ab2@5557> BRA.w init_buffers
00029F6C <AmiBlitz3.ab2@5560> RTS
00029F72 <AmiBlitz3.ab2@5564>   MOVEA.l _execbase,A6
00029F78 <AmiBlitz3.ab2@5565>   MOVE.l objlen,D0
00029F7C <AmiBlitz3.ab2@5566>   BEQ.w freeallox__skip
00029F82 <AmiBlitz3.ab2@5567>   CLR.l objlen
00029F88 <AmiBlitz3.ab2@5568>   MOVEA.l destbufferstart,A1
00029F8E <AmiBlitz3.ab2@5569>   MOVE.l mempool,a0
00029F92 <AmiBlitz3.ab2@5570> JMP _FreeVec(A6)
00029F94 <AmiBlitz3.ab2@5573> RTS
00029F9A <AmiBlitz3.ab2@5577>   MOVE.l objectbuffer,D2
00029FA0 <AmiBlitz3.ab2@5578>   MOVE.l libsbuffer,D3
00029FA6 <AmiBlitz3.ab2@5579>   MOVE.l systembuffer,D4
00029FAC <AmiBlitz3.ab2@5580>   MOVE.l databuffer,D5
00029FB4 <AmiBlitz3.ab2@5583>   MOVE.w #$FFFF,anyerrs
00029FB8 <AmiBlitz3.ab2@5584>   BSR.w freeallox
00029FBA <AmiBlitz3.ab2@5588>   ADDQ.l #1,D2
00029FBE <AmiBlitz3.ab2@5589>   BCLR #$0,D2
00029FC0 <AmiBlitz3.ab2@5590>   ADDQ.l #1,D3
00029FC4 <AmiBlitz3.ab2@5591>   BCLR #$0,D3
00029FC6 <AmiBlitz3.ab2@5592>   ADDQ.l #1,D4
00029FCA <AmiBlitz3.ab2@5593>   BCLR #$0,D4
00029FCC <AmiBlitz3.ab2@5594>   TST.l d5
00029FD0 <AmiBlitz3.ab2@5595>   BNE 'l1
00029FD2 <AmiBlitz3.ab2@5598>   ADDQ.l #1,D5
00029FD6 <AmiBlitz3.ab2@5599>   BCLR #$0,D5
00029FD8 <AmiBlitz3.ab2@5600>   MOVE.l D2,D0
00029FDA <AmiBlitz3.ab2@5601>   ADD.l D3,D0
00029FDC <AmiBlitz3.ab2@5602>   ADD.l D4,D0
00029FDE <AmiBlitz3.ab2@5603>   ADD.l D5,D0
00029FE4 <AmiBlitz3.ab2@5604>   ADD.l #moremem,d0
00029FE6 <AmiBlitz3.ab2@5605>   MOVE.l D0,D6
00029FEC <AmiBlitz3.ab2@5606>   MOVE.l #MemfPublic_MemfClear,D1
00029FF2 <AmiBlitz3.ab2@5607>   MOVE.l mempool,a0
00029FF8 <AmiBlitz3.ab2@5608>   MOVEA.l _execbase,A6
00029FFC <AmiBlitz3.ab2@5609>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00029FFE <AmiBlitz3.ab2@5611>   TST.l D0
0002A002 <AmiBlitz3.ab2@5612>   BEQ.w exit_initbuffers
0002A008 <AmiBlitz3.ab2@5613>   MOVE.l D6,objlen
0002A00E <AmiBlitz3.ab2@5614>   MOVE.l D2,objectbuffer
0002A014 <AmiBlitz3.ab2@5615>   MOVE.l D3,libsbuffer
0002A01A <AmiBlitz3.ab2@5616>   MOVE.l D4,systembuffer
0002A020 <AmiBlitz3.ab2@5617>   MOVE.l D5,databuffer
0002A026 <AmiBlitz3.ab2@5618>   MOVE.l D0,destbufferstart
0002A05A <AmiBlitz3.ab2@5621>   !ComData_SetL{comPtr_DestBufferStart,D0}
0002A05C <AmiBlitz3.ab2@5622>   ADD.l D2,D0
0002A062 <AmiBlitz3.ab2@5623>   MOVE.l D0,destbufferend
0002A064 <AmiBlitz3.ab2@5624>   ADD.l D3,D0
0002A06A <AmiBlitz3.ab2@5625>   MOVE.l D0,data1start
0002A06C <AmiBlitz3.ab2@5626>   ADD.l D4,D0
0002A072 <AmiBlitz3.ab2@5627>   MOVE.l D0,data2at
0002A074 <AmiBlitz3.ab2@5628>   ADD.l D5,D0
0002A07A <AmiBlitz3.ab2@5629>   MOVE.l D0,allat
0002A07C <AmiBlitz3.ab2@5632> RTS
0002A080 <AmiBlitz3.ab2@5636>   Dc.b $00,$00,$00,$01                                     ;         1
0002A084 <AmiBlitz3.ab2@5637>   Dc.b $00,$00,$00,$0A                                     ;        10
0002A088 <AmiBlitz3.ab2@5638>   Dc.b $00,$00,$00,$64                                     ;       100
0002A08C <AmiBlitz3.ab2@5639>   Dc.b $00,$00,$03,$E8                                     ;      1000
0002A090 <AmiBlitz3.ab2@5640>   Dc.b $00,$00,$27,$10                                     ;     10000
0002A094 <AmiBlitz3.ab2@5641>   Dc.b $00,$01,$86,$A0                                     ;    100000
0002A098 <AmiBlitz3.ab2@5642>   Dc.b $00,$0F,$42,$40                                     ;   1000000
0002A09C <AmiBlitz3.ab2@5643>   Dc.b $00,$98,$96,$80                                     ;  10000000
0002A0A0 <AmiBlitz3.ab2@5644>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
0002A0A4 <AmiBlitz3.ab2@5645>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
0002A0A6 <AmiBlitz3.ab2@5649>   MOVEQ.l #$00,D1                                          ;no zero printed
0002A0A8 <AmiBlitz3.ab2@5650>   MOVEQ.l #$24,D3                                          ; "$"
0002A0AA <AmiBlitz3.ab2@5653>   MOVEQ.l #$30,D4                                          ; "0"
0002A0AE <AmiBlitz3.ab2@5656>     CMP.l divisors(PC,D3.W),D2
0002A0B2 <AmiBlitz3.ab2@5657>     BCS.w makelong__skip
0002A0B6 <AmiBlitz3.ab2@5658>     SUB.l divisors(PC,D3.W),D2
0002A0B8 <AmiBlitz3.ab2@5659>     ADDQ.w #1,D4
0002A0BC <AmiBlitz3.ab2@5660> BRA.w makelong__loop2
0002A0C0 <AmiBlitz3.ab2@5663>   CMP.b #"0",D4
0002A0C4 <AmiBlitz3.ab2@5664>   BNE.w makelong__doit
0002A0C6 <AmiBlitz3.ab2@5665>   TST.w D1
0002A0CA <AmiBlitz3.ab2@5666>   BEQ.w makelong__skip2
0002A0CC <AmiBlitz3.ab2@5669>   MOVE.b D4,(A0)+
0002A0CE <AmiBlitz3.ab2@5670>   MOVEQ.l #$01,D1
0002A0D0 <AmiBlitz3.ab2@5673>   SUBQ.w #4,D3
0002A0D4 <AmiBlitz3.ab2@5674>   BPL.w makelong__loop
0002A0D6 <AmiBlitz3.ab2@5675>   TST.w D1
0002A0DA <AmiBlitz3.ab2@5676>   BNE.w makelong__skip3
0002A0DE <AmiBlitz3.ab2@5677>   MOVE.b #"0",(A0)+
0002A0E0 <AmiBlitz3.ab2@5680>   CLR.b (A0)
0002A0E2 <AmiBlitz3.ab2@5681> RTS
0002A102 <AmiBlitz3.ab2@5684> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
0002A1C2 <AmiBlitz3.ab2@5685> str_residentpath:       Ds.l 48                                                ;respath org source
0002A282 <AmiBlitz3.ab2@5686> str_residentname:       Ds.l 48                                                ;resname org source
0002A288 <AmiBlitz3.ab2@5690>   MOVE.l macrobase,D0
0002A28C <AmiBlitz3.ab2@5691>    BNE.w create_residentfile
0002A292 <AmiBlitz3.ab2@5692>   MOVE.l newtype_string,D0
0002A296 <AmiBlitz3.ab2@5693>    BNE.w create_residentfile
0002A29C <AmiBlitz3.ab2@5694>   MOVEA.l labelbase,A2
0002A2A0 <AmiBlitz3.ab2@5697>     CMPA.w #$0,A2
0002A2A4 <AmiBlitz3.ab2@5698>      BEQ.w menu_createresidentfile__err
0002A2AC <AmiBlitz3.ab2@5699>     CMPI.l #$1,$4(A2)
0002A2B0 <AmiBlitz3.ab2@5700>      BEQ.w create_residentfile
0002A2B2 <AmiBlitz3.ab2@5701>     MOVEA.l (A2),A2
0002A2B6 <AmiBlitz3.ab2@5702> BRA.w menu_createresidentfile__loop
0002A2E0 <AmiBlitz3.ab2@5705>   !basic
0002A336 <AmiBlitz3.ab2@5706> 
0002A354 <AmiBlitz3.ab2@5707>   !asm
0002A356 <AmiBlitz3.ab2@5708> RTS
0002A394 <AmiBlitz3.ab2@5714>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0002A39A <AmiBlitz3.ab2@5715>   LEA str_residentrequester,A2
0002A3A0 <AmiBlitz3.ab2@5716>   LEA str_residentpath,A0
0002A3A6 <AmiBlitz3.ab2@5717>   LEA str_residentname,A1
0002A3D0 <AmiBlitz3.ab2@5718>   !basic
0002A408 <AmiBlitz3.ab2@5719>     Poke$ ?str_residentpath,my_residentsdir$
0002A434 <AmiBlitz3.ab2@5720>     Poke$ ?str_residentname,".res"
0002A452 <AmiBlitz3.ab2@5721>   !asm
0002A454 <AmiBlitz3.ab2@5724>   JSR (A3)
0002A458 <AmiBlitz3.ab2@5726>   BEQ.w menu_createresidentfile__err
0002A45A <AmiBlitz3.ab2@5729>   MOVE.l D0,D1
0002A460 <AmiBlitz3.ab2@5730>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002A464 <AmiBlitz3.ab2@5731>   MOVEA.l _dosbase(PC),A6
0002A468 <AmiBlitz3.ab2@5732>   JSR _Open(A6)
0002A46A <AmiBlitz3.ab2@5733>   MOVE.l D0,D7                                             ;handle
0002A46E <AmiBlitz3.ab2@5734>   BEQ.w menu_createresidentfile__err
0002A472 <AmiBlitz3.ab2@5735>   MOVEM.l d2-d7/a0-a6,-(a7)
0002A478 <AmiBlitz3.ab2@5736>   LEA devo,a0
0002A47E <AmiBlitz3.ab2@5737>   LEA ptr_parameterstore,a1
0002A480 <AmiBlitz3.ab2@5740>     MOVE.b (a0)+,(a1)+
0002A484 <AmiBlitz3.ab2@5741>   BNE 'l1
0002A486 <AmiBlitz3.ab2@5742>   MOVEQ #13,d2
0002A48C <AmiBlitz3.ab2@5743>   JSR findlabel2
0002A490 <AmiBlitz3.ab2@5744>   BNE 'd
0002A494 <AmiBlitz3.ab2@5745>   TST.l 8(a2)
0002A498 <AmiBlitz3.ab2@5746>   BEQ 'd2
0002A4C2 <AmiBlitz3.ab2@5747>   !basic
0002A518 <AmiBlitz3.ab2@5748>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
0002A536 <AmiBlitz3.ab2@5749>   !asm
0002A53A <AmiBlitz3.ab2@5750>   MOVEM.l (a7)+,d2-d7/a0-a6
0002A53E <AmiBlitz3.ab2@5751>   MOVEA.l _dosbase(PC),A6
0002A540 <AmiBlitz3.ab2@5752>   MOVE.l d7,d1
0002A544 <AmiBlitz3.ab2@5753>   JSR _Close(a6)
0002A548 <AmiBlitz3.ab2@5754> BRA menu_createresidentfile__err
0002A54C <AmiBlitz3.ab2@5758>   MOVEM.l (a7)+,d2-d7/a0-a6
0002A550 <AmiBlitz3.ab2@5759>   BSR.w call_setpointerbusy
0002A554 <AmiBlitz3.ab2@5761>   BSR.w AJL_0_7962
0002A556 <AmiBlitz3.ab2@5762>   MOVE.l D7,D1
0002A55C <AmiBlitz3.ab2@5763>   MOVE.l #tsthead,D2                                       ;header
0002A55E <AmiBlitz3.ab2@5764>   MOVEQ.l #$20,D3
0002A562 <AmiBlitz3.ab2@5765>   MOVEA.l _dosbase(PC),A6
0002A566 <AmiBlitz3.ab2@5766>   JSR _Write(A6)
0002A568 <AmiBlitz3.ab2@5767>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0002A56C <AmiBlitz3.ab2@5768>   BSR.w restypes
0002A570 <AmiBlitz3.ab2@5769>   BSR.w resmacs
0002A574 <AmiBlitz3.ab2@5770>   BSR.w resconsts
0002A576 <AmiBlitz3.ab2@5771>   MOVE.l D6,D3
0002A578 <AmiBlitz3.ab2@5772>   ADDQ.l #3,D3
0002A57E <AmiBlitz3.ab2@5773>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
0002A580 <AmiBlitz3.ab2@5774>   MOVE.l D3,-(A7)
0002A582 <AmiBlitz3.ab2@5775>   SUB.l D6,D3
0002A586 <AmiBlitz3.ab2@5776>   BEQ.w menu_createresidentfile__noalign
0002A58C <AmiBlitz3.ab2@5777>   MOVE.l #writelist,D2
0002A58E <AmiBlitz3.ab2@5778>   MOVE.l D7,D1
0002A594 <AmiBlitz3.ab2@5779>   MOVEA.l _dosbase,A6
0002A598 <AmiBlitz3.ab2@5780>   JSR _Write(A6)
0002A5A2 <AmiBlitz3.ab2@5783>    MOVE.l hunkoffsetcounter,tstsize3
0002A5A6 <AmiBlitz3.ab2@5784>    BEQ.w menu_createresidentfile__skip2a
0002A5A8 <AmiBlitz3.ab2@5785>   MOVE.l D7,D1
0002A5AE <AmiBlitz3.ab2@5786>   MOVE.l #tstend,D2
0002A5B0 <AmiBlitz3.ab2@5787>   MOVEQ.l #$0C,D3
0002A5B6 <AmiBlitz3.ab2@5788>   MOVEA.l _dosbase,A6
0002A5BA <AmiBlitz3.ab2@5789>    JSR _Write(A6)
0002A5C0 <AmiBlitz3.ab2@5793>   MOVEA.l hunkoffsetbase,A2
0002A5C4 <AmiBlitz3.ab2@5796>   CMPA.w #$0,A2
0002A5C8 <AmiBlitz3.ab2@5797>    BEQ.w menu_createresidentfile__skip2
0002A5CC <AmiBlitz3.ab2@5798>   LEA $4(A2),A1
0002A5CE <AmiBlitz3.ab2@5799>   MOVE.l D7,D1
0002A5D0 <AmiBlitz3.ab2@5800>   MOVE.l A1,D2
0002A5D2 <AmiBlitz3.ab2@5801>   MOVEQ.l #$04,D3
0002A5D8 <AmiBlitz3.ab2@5802>   MOVEA.l _dosbase,A6
0002A5DC <AmiBlitz3.ab2@5803>    JSR _Write(A6)
0002A5DE <AmiBlitz3.ab2@5804>   MOVEA.l (A2),A2
0002A5E2 <AmiBlitz3.ab2@5805> BRA.w menu_createresidentfile__oloop
0002A5E4 <AmiBlitz3.ab2@5808>   MOVE.l D7,D1
0002A5EA <AmiBlitz3.ab2@5809>   MOVE.l #zero,D2
0002A5EC <AmiBlitz3.ab2@5810>   MOVEQ.l #$04,D3
0002A5F2 <AmiBlitz3.ab2@5811>   MOVEA.l _dosbase,A6
0002A5F6 <AmiBlitz3.ab2@5812>   JSR _Write(A6)
0002A5F8 <AmiBlitz3.ab2@5815>   MOVE.l D7,D1
0002A5FE <AmiBlitz3.ab2@5816>   MOVE.l #tstdone,D2
0002A600 <AmiBlitz3.ab2@5817>   MOVEQ.l #$04,D3
0002A606 <AmiBlitz3.ab2@5818>   MOVEA.l _dosbase,A6
0002A60A <AmiBlitz3.ab2@5819>    JSR _Write(A6)
0002A60C <AmiBlitz3.ab2@5820>   MOVE.l (A7)+,D0
0002A60E <AmiBlitz3.ab2@5821>   LSR.l #2,D0
0002A614 <AmiBlitz3.ab2@5822>   MOVE.l D0,temp1
0002A616 <AmiBlitz3.ab2@5823>   MOVE.l D7,D1
0002A618 <AmiBlitz3.ab2@5824>   MOVEQ.l #$14,D2
0002A61A <AmiBlitz3.ab2@5825>   MOVEQ.l #-$01,D3
0002A61E <AmiBlitz3.ab2@5826>   JSR _Seek(A6)
0002A620 <AmiBlitz3.ab2@5827>   MOVE.l D7,D1
0002A626 <AmiBlitz3.ab2@5828>   MOVE.l #temp1,D2
0002A628 <AmiBlitz3.ab2@5829>   MOVEQ.l #$04,D3
0002A62C <AmiBlitz3.ab2@5830>    JSR _Write(A6)
0002A62E <AmiBlitz3.ab2@5831>   MOVE.l D7,D1
0002A630 <AmiBlitz3.ab2@5832>   MOVEQ.l #$1C,D2
0002A632 <AmiBlitz3.ab2@5833>   MOVEQ.l #-$01,D3
0002A636 <AmiBlitz3.ab2@5834>    JSR _Seek(A6)
0002A638 <AmiBlitz3.ab2@5835>   MOVE.l D7,D1
0002A63E <AmiBlitz3.ab2@5836>   MOVE.l #temp1,D2
0002A640 <AmiBlitz3.ab2@5837>   MOVEQ.l #$04,D3
0002A644 <AmiBlitz3.ab2@5838>    JSR _Write(A6)
0002A646 <AmiBlitz3.ab2@5839>   MOVE.l D7,D1
0002A64A <AmiBlitz3.ab2@5840>    JSR _Close(A6)
0002A64E <AmiBlitz3.ab2@5841> BRA.w call_setpointernormal
0002A650 <AmiBlitz3.ab2@5845>   ADDQ.w #5,D1
0002A652 <AmiBlitz3.ab2@5846>   ADDQ.b #8,D0
0002A656 <AmiBlitz3.ab2@5849>     CMPA.w #$0,A2
0002A65A <AmiBlitz3.ab2@5850>     BEQ.w writelist__done
0002A65E <AmiBlitz3.ab2@5851>      BSR.w writeitem
0002A660 <AmiBlitz3.ab2@5852>     MOVEA.l (A2),A2
0002A664 <AmiBlitz3.ab2@5853> BRA.w writelist__loop
0002A666 <AmiBlitz3.ab2@5856> RTS
0002A668 <AmiBlitz3.ab2@5859>   MOVEQ.l #$00,D3
0002A66C <AmiBlitz3.ab2@5860>   MOVE.b $0(A2,D5.W),D3
0002A66E <AmiBlitz3.ab2@5861>   ADDQ.w #1,D3
0002A672 <AmiBlitz3.ab2@5862>   BCLR #$0,D3                                              ;word align
0002A674 <AmiBlitz3.ab2@5863>   MOVE.l (A2),-(A7)
0002A678 <AmiBlitz3.ab2@5864>    BEQ.w writeitem__skip
0002A67C <AmiBlitz3.ab2@5865>    BSR.w resoff
0002A67E <AmiBlitz3.ab2@5866>   ADD.l D3,D6
0002A680 <AmiBlitz3.ab2@5867>   MOVE.l D6,(A2)
0002A682 <AmiBlitz3.ab2@5868>   SUB.l D3,D6
0002A684 <AmiBlitz3.ab2@5871>    ADD.l D3,D6
0002A686 <AmiBlitz3.ab2@5872>   MOVE.l A2,D2
0002A688 <AmiBlitz3.ab2@5873>   MOVE.l D7,D1
0002A68E <AmiBlitz3.ab2@5874>   MOVEA.l _dosbase,A6
0002A692 <AmiBlitz3.ab2@5875>    JSR _Write(A6)
0002A694 <AmiBlitz3.ab2@5876>   MOVE.l (A7)+,(A2)
0002A696 <AmiBlitz3.ab2@5877> RTS
0002A698 <AmiBlitz3.ab2@5880>   MOVE.l D6,D2
0002A69C <AmiBlitz3.ab2@5881> BRA.w addhunkoffset
0002A6A0 <AmiBlitz3.ab2@5885>     CMPA.w #$0,A2
0002A6A4 <AmiBlitz3.ab2@5886>      BEQ.w writeoffs__done
0002A6AA <AmiBlitz3.ab2@5887>     MOVEA.l newtypebase,A1
0002A6AC <AmiBlitz3.ab2@5888>     MOVEQ.l #$00,D1
0002A6B0 <AmiBlitz3.ab2@5891>       CMPA.w #$0,A1
0002A6B4 <AmiBlitz3.ab2@5892>       BEQ.w writeoffs__found
0002A6B8 <AmiBlitz3.ab2@5893>       CMPA.l $A(A2),A1
0002A6BC <AmiBlitz3.ab2@5894>        BEQ.w writeoffs__found
0002A6BE <AmiBlitz3.ab2@5895>       ADDQ.w #1,D1
0002A6C0 <AmiBlitz3.ab2@5896>       MOVEA.l (A1),A1
0002A6C4 <AmiBlitz3.ab2@5897> BRA.w writeoffs__loop2
0002A6C8 <AmiBlitz3.ab2@5900>     MOVE.w $A(A2),-(A7)
0002A6CC <AmiBlitz3.ab2@5901>     MOVE.w D1,$A(A2)
0002A6D0 <AmiBlitz3.ab2@5902>      BSR.w writeitem
0002A6D4 <AmiBlitz3.ab2@5903>     MOVE.w (A7)+,$A(A2)
0002A6D6 <AmiBlitz3.ab2@5904>     MOVEA.l (A2),A2
0002A6DA <AmiBlitz3.ab2@5905> BRA.w writeoffs
0002A6DC <AmiBlitz3.ab2@5908> RTS
0002A6DE <AmiBlitz3.ab2@5912>   MOVEQ.l #$00,D0
0002A6E2 <AmiBlitz3.ab2@5915>   CMPA.w #$0,A2
0002A6E6 <AmiBlitz3.ab2@5916>    BEQ.w countem__done
0002A6E8 <AmiBlitz3.ab2@5917>   ADDQ.w #1,D0
0002A6EA <AmiBlitz3.ab2@5918>   MOVEA.l (A2),A2
0002A6EE <AmiBlitz3.ab2@5919> BRA.w countem__loop
0002A6F4 <AmiBlitz3.ab2@5922>   MOVE.w D0,temp1
0002A6F6 <AmiBlitz3.ab2@5923>   MOVE.l D7,D1
0002A6FC <AmiBlitz3.ab2@5924>   MOVE.l #temp1,D2
0002A6FE <AmiBlitz3.ab2@5925>   MOVEQ.l #$02,D3
0002A700 <AmiBlitz3.ab2@5926>   ADDQ.l #2,D6
0002A706 <AmiBlitz3.ab2@5927>   MOVEA.l _dosbase,A6
0002A70A <AmiBlitz3.ab2@5928> JMP _Write(A6)
0002A710 <AmiBlitz3.ab2@5932>    TST.b resdisable
0002A714 <AmiBlitz3.ab2@5933>    BEQ resmacs__l1
0002A71A <AmiBlitz3.ab2@5934>    MOVE.l currentmacroaddr,a3
0002A720 <AmiBlitz3.ab2@5935>    CMP.l #0,a3
0002A724 <AmiBlitz3.ab2@5936>    BEQ resmacs__l1
0002A726 <AmiBlitz3.ab2@5937>    MOVE.l (a3),a3
0002A72A <AmiBlitz3.ab2@5938> BRA resmacs__l2
0002A730 <AmiBlitz3.ab2@5941>   MOVEA.l macrobase,A3                                     ;??begin org code??
0002A732 <AmiBlitz3.ab2@5944>   MOVEA.l A3,A2
0002A736 <AmiBlitz3.ab2@5945>   BSR.w countem
0002A73A <AmiBlitz3.ab2@5948>    CMPA.w #$0,A3
0002A73E <AmiBlitz3.ab2@5949>    BEQ.w resmacs__done
0002A740 <AmiBlitz3.ab2@5950>   MOVE.l D6,D5
0002A742 <AmiBlitz3.ab2@5951>   MOVE.l (A3),-(A7)
0002A746 <AmiBlitz3.ab2@5952>   MOVE.l $4(A3),-(A7)
0002A748 <AmiBlitz3.ab2@5953>   MOVEQ.l #$00,D3
0002A74C <AmiBlitz3.ab2@5954>   MOVE.b $C(A3),D3
0002A74E <AmiBlitz3.ab2@5955>   ADDQ.w #1,D3
0002A752 <AmiBlitz3.ab2@5956>   BCLR #$0,D3
0002A754 <AmiBlitz3.ab2@5957>   ADD.l D3,D6                                              ;add len of struct
0002A758 <AmiBlitz3.ab2@5958>   TST.w $8(A3)
0002A75C <AmiBlitz3.ab2@5959>    BEQ.w resmacs__notext
0002A760 <AmiBlitz3.ab2@5960>   MOVE.l D6,$4(A3)
0002A762 <AmiBlitz3.ab2@5961>   MOVE.l D5,D2
0002A764 <AmiBlitz3.ab2@5962>   ADDQ.l #4,D2
0002A768 <AmiBlitz3.ab2@5963>    BSR.w addhunkoffset
0002A76A <AmiBlitz3.ab2@5966>   MOVEQ.l #$00,D4
0002A76E <AmiBlitz3.ab2@5967>   MOVE.w $8(A3),D4
0002A770 <AmiBlitz3.ab2@5968>   ADDQ.w #1,D4
0002A774 <AmiBlitz3.ab2@5969>   BCLR #$0,D4
0002A776 <AmiBlitz3.ab2@5970>   ADD.l D4,D6
0002A778 <AmiBlitz3.ab2@5971>   TST.l (A3)
0002A77C <AmiBlitz3.ab2@5972>    BEQ.w resmacs__nomore
0002A77E <AmiBlitz3.ab2@5973>   MOVE.l D6,(A3)
0002A780 <AmiBlitz3.ab2@5974>   MOVE.l D5,D2
0002A784 <AmiBlitz3.ab2@5975>    BSR.w addhunkoffset
0002A786 <AmiBlitz3.ab2@5978>   MOVE.l A3,D2
0002A788 <AmiBlitz3.ab2@5979>   MOVE.l D7,D1
0002A78E <AmiBlitz3.ab2@5981>    MOVEA.l _dosbase,A6
0002A792 <AmiBlitz3.ab2@5982>    JSR _Write(a6)
0002A794 <AmiBlitz3.ab2@5983>   TST.l D4
0002A798 <AmiBlitz3.ab2@5984>    BEQ.w resmacs__skip
0002A79A <AmiBlitz3.ab2@5985>   MOVE.l (A7),D2
0002A79C <AmiBlitz3.ab2@5986>   MOVE.l D4,D3
0002A79E <AmiBlitz3.ab2@5987>   MOVE.l D7,D1
0002A7A4 <AmiBlitz3.ab2@5989>     MOVEA.l _dosbase,A6
0002A7A8 <AmiBlitz3.ab2@5990>    JSR _Write(A6)
0002A7AC <AmiBlitz3.ab2@5993>   MOVE.l (A7)+,$4(A3)
0002A7AE <AmiBlitz3.ab2@5994>   MOVE.l (A7)+,(A3)
0002A7B0 <AmiBlitz3.ab2@5995>   MOVEA.l (A3),A3
0002A7B4 <AmiBlitz3.ab2@5996> BRA.w resmacs__loop
0002A7B6 <AmiBlitz3.ab2@5999> RTS
0002A7BC <AmiBlitz3.ab2@6003>   TST.b resdisable
0002A7C0 <AmiBlitz3.ab2@6004>   BEQ restypes__l1
0002A7C6 <AmiBlitz3.ab2@6005>   MOVE.l lastrestype,a3
0002A7CC <AmiBlitz3.ab2@6006>   CMP.l #0,a3
0002A7D0 <AmiBlitz3.ab2@6007>   BEQ restypes__l1
0002A7D2 <AmiBlitz3.ab2@6008>   MOVE.l (a3),a3
0002A7D6 <AmiBlitz3.ab2@6009> BRA restypes__l2
0002A7DC <AmiBlitz3.ab2@6012>   MOVEA.l newtype_string,A3
0002A7DE <AmiBlitz3.ab2@6015>   MOVEA.l A3,A2
0002A7E2 <AmiBlitz3.ab2@6016>    BSR.w countem
0002A7E6 <AmiBlitz3.ab2@6019>    CMPA.w #$0,A3
0002A7EA <AmiBlitz3.ab2@6020>    BEQ.w restypes__done
0002A7EC <AmiBlitz3.ab2@6021>   MOVE.l D6,-(A7)
0002A7F0 <AmiBlitz3.ab2@6022>   MOVEA.l $4(A3),A2
0002A7F2 <AmiBlitz3.ab2@6023>   MOVEQ.l #$0E,D5
0002A7F6 <AmiBlitz3.ab2@6024>    BSR.w writeoffs
0002A7F8 <AmiBlitz3.ab2@6025>   MOVE.l (A7)+,D0
0002A7FC <AmiBlitz3.ab2@6026>   MOVE.l $4(A3),-(A7)
0002A800 <AmiBlitz3.ab2@6027>   MOVE.l D0,$4(A3)
0002A802 <AmiBlitz3.ab2@6028>   MOVE.l D6,D2
0002A804 <AmiBlitz3.ab2@6029>   ADDQ.l #4,D2
0002A808 <AmiBlitz3.ab2@6030>    BSR.w addhunkoffset
0002A80A <AmiBlitz3.ab2@6031>   MOVEQ.l #$00,D3
0002A80E <AmiBlitz3.ab2@6032>   MOVE.b $A(A3),D3
0002A810 <AmiBlitz3.ab2@6033>   ADDQ.w #1,D3
0002A814 <AmiBlitz3.ab2@6034>   BCLR #$0,D3
0002A816 <AmiBlitz3.ab2@6035>   ADD.l D3,D6
0002A818 <AmiBlitz3.ab2@6036>   MOVE.l A3,D2
0002A81A <AmiBlitz3.ab2@6037>   MOVE.l D7,D1
0002A820 <AmiBlitz3.ab2@6039>     MOVEA.l _dosbase,A6
0002A824 <AmiBlitz3.ab2@6040>     JSR _Write(A6)
0002A828 <AmiBlitz3.ab2@6041>   MOVE.l (A7)+,$4(A3)
0002A82A <AmiBlitz3.ab2@6042>   MOVEA.l (A3),A3
0002A82E <AmiBlitz3.ab2@6043> BRA.w restypes__loop
0002A830 <AmiBlitz3.ab2@6046> RTS
0002A836 <AmiBlitz3.ab2@6050>    TST.b resdisable
0002A83A <AmiBlitz3.ab2@6051>    BEQ resconsts__l1
0002A840 <AmiBlitz3.ab2@6052>    MOVE.l currentlabeladdr,a2
0002A846 <AmiBlitz3.ab2@6053>    CMP.l #0,a2
0002A84A <AmiBlitz3.ab2@6054>    BEQ resconsts__l1
0002A84C <AmiBlitz3.ab2@6055>    MOVE.l (a2),a2
0002A850 <AmiBlitz3.ab2@6056> BRA resconsts__l2
0002A856 <AmiBlitz3.ab2@6059>    MOVEA.l labelbase,A2
0002A858 <AmiBlitz3.ab2@6062>    MOVEQ.l #$00,D0
0002A85C <AmiBlitz3.ab2@6065>    CMPA.w #$0,A2
0002A860 <AmiBlitz3.ab2@6066>    BEQ.w resconsts__done
0002A868 <AmiBlitz3.ab2@6067>   CMPI.l #$1,$4(A2)
0002A86C <AmiBlitz3.ab2@6068>    BNE.w resconsts__next
0002A86E <AmiBlitz3.ab2@6069>   ADDQ.w #1,D0
0002A870 <AmiBlitz3.ab2@6072>   MOVEA.l (A2),A2
0002A874 <AmiBlitz3.ab2@6073> BRA.w resconsts__loop
0002A87A <AmiBlitz3.ab2@6076>   MOVE.w D0,temp1
0002A87C <AmiBlitz3.ab2@6077>   MOVE.l D7,D1
0002A882 <AmiBlitz3.ab2@6078>   MOVE.l #temp1,D2
0002A884 <AmiBlitz3.ab2@6079>   MOVEQ.l #$02,D3
0002A886 <AmiBlitz3.ab2@6080>   ADDQ.l #2,D6
0002A88C <AmiBlitz3.ab2@6082>     MOVEA.l _dosbase,A6
0002A890 <AmiBlitz3.ab2@6083>     JSR _Write(A6)
0002A896 <AmiBlitz3.ab2@6084>    TST.b resdisable
0002A89A <AmiBlitz3.ab2@6085>    BEQ resconsts__done_l1
0002A8A0 <AmiBlitz3.ab2@6086>    MOVE.l currentlabeladdr,a2
0002A8A6 <AmiBlitz3.ab2@6087>    CMP.l #0,a2
0002A8AA <AmiBlitz3.ab2@6088>    BEQ resconsts__done_l1
0002A8AC <AmiBlitz3.ab2@6089>    MOVE.l (a2),a2
0002A8B0 <AmiBlitz3.ab2@6090> BRA resconsts__loop2
0002A8B6 <AmiBlitz3.ab2@6093>    MOVEA.l labelbase,A2                                    ;write resident labels
0002A8BA <AmiBlitz3.ab2@6096>    CMPA.w #$0,A2
0002A8BE <AmiBlitz3.ab2@6097>    BEQ.w resconsts__done2
0002A8C6 <AmiBlitz3.ab2@6098>   CMPI.l #$1,$4(A2)
0002A8CA <AmiBlitz3.ab2@6099>    BNE.w resconsts__next2
0002A8CC <AmiBlitz3.ab2@6100>    MOVEQ.l #$00,D3
0002A8D0 <AmiBlitz3.ab2@6101>   MOVE.b $12(A2),D3                                        ;length
0002A8D2 <AmiBlitz3.ab2@6102>   ADDQ.w #1,D3
0002A8D6 <AmiBlitz3.ab2@6103>   BCLR #$0,D3
0002A8D8 <AmiBlitz3.ab2@6104>   MOVE.l D6,D2
0002A8DA <AmiBlitz3.ab2@6105>   ADD.l D3,D6
0002A8DC <AmiBlitz3.ab2@6108>   MOVE.l (A2),-(A7)
0002A8DE <AmiBlitz3.ab2@6109>   TST.l (A2)
0002A8E2 <AmiBlitz3.ab2@6110>    BEQ.w resconsts__nonext
0002A8E4 <AmiBlitz3.ab2@6111>   MOVE.l D6,(A2)
0002A8E8 <AmiBlitz3.ab2@6112>    BSR.w addhunkoffset
0002A8EA <AmiBlitz3.ab2@6115>   MOVE.l A2,D2
0002A8EC <AmiBlitz3.ab2@6116>   MOVE.l D7,D1
0002A8F2 <AmiBlitz3.ab2@6118>     MOVEA.l _dosbase,A6
0002A8F6 <AmiBlitz3.ab2@6119>     JSR _Write(A6)
0002A8F8 <AmiBlitz3.ab2@6120>   MOVE.l (A7)+,(A2)
0002A8FA <AmiBlitz3.ab2@6123>   MOVEA.l (A2),A2
0002A8FE <AmiBlitz3.ab2@6124> BRA.w resconsts__loop2
0002A900 <AmiBlitz3.ab2@6127> RTS
0002A92A <AmiBlitz3.ab2@6131>    !basic
0002A930 <AmiBlitz3.ab2@6132>     MOVE.l ptr_resfile,d0
0002A940 <AmiBlitz3.ab2@6133>     resfileP.l = Peek.l(?ptr_resfile)
0002A94A <AmiBlitz3.ab2@6134>     If resfileP
0002A972 <AmiBlitz3.ab2@6135>       resfile$ = Peek.s(resfileP)
0002A9BE <AmiBlitz3.ab2@6136>       tests.b = Instr(resfile$,"/")
0002AA0A <AmiBlitz3.ab2@6137>       testc.b = Instr(resfile$,":")
0002AA2C <AmiBlitz3.ab2@6138>       If tests=0 AND testc=0
0002AAAC <AmiBlitz3.ab2@6139>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
0002AABE <AmiBlitz3.ab2@6140>         Poke.l ?ptr_resfile,&resfile$
0002AAC4 <AmiBlitz3.ab2@6142>     Else
0002AAF2 <AmiBlitz3.ab2@6143>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
0002AB10 <AmiBlitz3.ab2@6145>    !asm
0002AB12 <AmiBlitz3.ab2@6146> RTS
0002AB18 <AmiBlitz3.ab2@6150>   MOVE.l A7,errstack
0002AB22 <AmiBlitz3.ab2@6152>   MOVE.l #next_resentry,errcont
0002AB2A <AmiBlitz3.ab2@6153>   MOVE.w #$FFFF,ezerr
0002AB2E <AmiBlitz3.ab2@6154>   BSR.w Aclearallvars
0002AB32 <AmiBlitz3.ab2@6155>   BSR.w free_residents
0002AB38 <AmiBlitz3.ab2@6157>   LEA residents_table,A5
0002AB3A <AmiBlitz3.ab2@6158>   MOVEQ.l #$07,D6
0002AB3C <AmiBlitz3.ab2@6161>     TST.b (A5)
0002AB40 <AmiBlitz3.ab2@6162>     BEQ.w next_resentry
0002AB46 <AmiBlitz3.ab2@6163>     MOVE.l A5,ptr_resfile
0002AB4A <AmiBlitz3.ab2@6164>     BSR check_residentpath
0002AB50 <AmiBlitz3.ab2@6165>     MOVE.l ptr_resfile,d1
0002AB56 <AmiBlitz3.ab2@6166>     MOVEA.l _dosbase,A6
0002AB5A <AmiBlitz3.ab2@6167>     JSR _LoadSeg(A6)
0002AB5E <AmiBlitz3.ab2@6168>     MOVE.l D0,$40(A5)
0002AB62 <AmiBlitz3.ab2@6169>     BNE.w reloadresident__yeah
0002AB66 <AmiBlitz3.ab2@6170>     BSR.w reserr
0002AB68 <AmiBlitz3.ab2@6173>     MOVEA.l D0,A3
0002AB6A <AmiBlitz3.ab2@6174>     ADDA.l A3,A3
0002AB6C <AmiBlitz3.ab2@6175>     ADDA.l A3,A3
0002AB6E <AmiBlitz3.ab2@6176>     ADDQ.w #4,A3                                           ;start of res
0002AB72 <AmiBlitz3.ab2@6177>     BSR.w JL_0_5A9E
0002AB76 <AmiBlitz3.ab2@6178>     BSR.w JL_0_5A62                                        ;add macros to list
0002AB7A <AmiBlitz3.ab2@6179>     BSR.w JL_0_5A32                                        ;read labels
0002AB7E <AmiBlitz3.ab2@6182>     LEA ResidentEntryStep(A5),A5       ;$44
0002AB82 <AmiBlitz3.ab2@6183>   DBF D6,reloadresident__loop
0002AB8C <AmiBlitz3.ab2@6188>   MOVE.l #free_residents,errcont
0002AB92 <AmiBlitz3.ab2@6190>   MOVEA.l newtype_string,A3
0002AB94 <AmiBlitz3.ab2@6191>   MOVEQ.l #$0B,D7
0002AB98 <AmiBlitz3.ab2@6192>   BSR.w checkclash
0002AB9E <AmiBlitz3.ab2@6194>   MOVEA.l macrobase,A3
0002ABA0 <AmiBlitz3.ab2@6195>   MOVEQ.l #$d,D7
0002ABA4 <AmiBlitz3.ab2@6196>   BSR.w checkclash
0002ABAA <AmiBlitz3.ab2@6198>   MOVEA.l firstconst,A3
0002ABAC <AmiBlitz3.ab2@6199>   MOVEQ.l #$19,D7
0002ABB0 <AmiBlitz3.ab2@6200>   BSR.w checkclash
0002ABB2 <AmiBlitz3.ab2@6203> RTS
0002ABB4 <AmiBlitz3.ab2@6207>   MOVEA.l A3,A4
0002ABB8 <AmiBlitz3.ab2@6210>     CMPA.w #$0,A4
0002ABBC <AmiBlitz3.ab2@6211>     BEQ.w checkclash__done
0002ABC2 <AmiBlitz3.ab2@6213>     LEA ptr_parameterstore,A0
0002ABC6 <AmiBlitz3.ab2@6214>     LEA $0(A4,D7.W),A1
0002ABC8 <AmiBlitz3.ab2@6215>     MOVEQ.l #-$01,D2
0002ABCA <AmiBlitz3.ab2@6218>       ADDQ.w #1,D2
0002ABCC <AmiBlitz3.ab2@6219>       MOVE.b (A1)+,(A0)+
0002ABD0 <AmiBlitz3.ab2@6220>     BNE.w checkclash__loop2
0002ABD2 <AmiBlitz3.ab2@6221>     MOVEA.l A3,A2
0002ABD6 <AmiBlitz3.ab2@6224>     BSR.w findlab
0002ABDA <AmiBlitz3.ab2@6225>     BNE.w checkclash__next                                  ;not found
0002ABDC <AmiBlitz3.ab2@6226>     CMPA.l A2,A4
0002ABE0 <AmiBlitz3.ab2@6227>     BEQ.w checkclash__l1
0002ABE2 <AmiBlitz3.ab2@6228>     MOVE.l a1,a5
0002ABE6 <AmiBlitz3.ab2@6229> BRA clasherr
0002ABEA <AmiBlitz3.ab2@6232> BRA.w checkclash__more
0002ABEC <AmiBlitz3.ab2@6235>     MOVEA.l (A4),A4
0002ABF0 <AmiBlitz3.ab2@6236> BRA.w checkclash__loop
0002ABF2 <AmiBlitz3.ab2@6239> RTS
0002ABF8 <AmiBlitz3.ab2@6243>   MOVEA.l _dosbase,A6
0002ABFE <AmiBlitz3.ab2@6245>   LEA newtype_string,A0
0002AC04 <AmiBlitz3.ab2@6246>   MOVE.l A0,lastrestype
0002AC06 <AmiBlitz3.ab2@6247>   CLR.l (A0)
0002AC0C <AmiBlitz3.ab2@6249>   LEA macrobase,A0
0002AC12 <AmiBlitz3.ab2@6250>   MOVE.l A0,currentmacroaddr
0002AC14 <AmiBlitz3.ab2@6251>   CLR.l (A0)
0002AC1A <AmiBlitz3.ab2@6253>   LEA labelbase,A0
0002AC20 <AmiBlitz3.ab2@6254>   MOVE.l A0,currentlabeladdr
0002AC22 <AmiBlitz3.ab2@6255>   CLR.l (A0)
0002AC28 <AmiBlitz3.ab2@6256>   CLR.w rescnt
0002AC60 <AmiBlitz3.ab2@6260>   !ComData_SetB{comByte_DebugMode,debugmode}
0002AC66 <AmiBlitz3.ab2@6263>   LEA residents_table,A2
0002AC68 <AmiBlitz3.ab2@6264>   MOVEQ.l #$07,D2
0002AC6C <AmiBlitz3.ab2@6267>      MOVE.l $40(A2),D1
0002AC70 <AmiBlitz3.ab2@6268>      BEQ.w free_residents__next
0002AC74 <AmiBlitz3.ab2@6269>       CLR.l $40(A2)
0002AC7A <AmiBlitz3.ab2@6270>       MOVEA.l _dosbase,A6
0002AC7E <AmiBlitz3.ab2@6271>       JSR _UnLoadSeg(A6)
0002AC82 <AmiBlitz3.ab2@6274>      LEA ResidentEntryStep(A2),A2   ; $44
0002AC86 <AmiBlitz3.ab2@6275>    DBF D2,free_residents__loop
0002AC88 <AmiBlitz3.ab2@6277> RTS
0002AC8A <AmiBlitz3.ab2@6281>   MOVE.w (A3)+,D1
0002AC8E <AmiBlitz3.ab2@6282>   BEQ.w JL_0_5A60
0002AC94 <AmiBlitz3.ab2@6283>   MOVEA.l currentlabeladdr,A2
0002AC96 <AmiBlitz3.ab2@6284>   MOVE.l A3,(A2)
0002AC98 <AmiBlitz3.ab2@6285>   SUBQ.w #1,D1
0002AC9A <AmiBlitz3.ab2@6288>     MOVEA.l A3,A2
0002AC9C <AmiBlitz3.ab2@6289>     MOVEA.l (A3),A3
0002ACA0 <AmiBlitz3.ab2@6290>   DBF D1,JL_0_5A42
0002ACA2 <AmiBlitz3.ab2@6292>   CLR.l (a2)                                               ;bugfix for object
0002ACA8 <AmiBlitz3.ab2@6293>   MOVE.l A2,currentlabeladdr
0002ACAA <AmiBlitz3.ab2@6294>   MOVEA.l A2,A3
0002ACAC <AmiBlitz3.ab2@6295>   MOVEQ.l #$00,D0
0002ACB0 <AmiBlitz3.ab2@6296>   MOVE.b $12(A3),D0
0002ACB2 <AmiBlitz3.ab2@6297>   ADDQ.w #1,D0
0002ACB6 <AmiBlitz3.ab2@6298>   BCLR #$0,D0
0002ACB8 <AmiBlitz3.ab2@6299>   ADDA.w D0,A3
0002ACBA <AmiBlitz3.ab2@6302> RTS
0002ACBC <AmiBlitz3.ab2@6306>   MOVE.w (A3)+,D1
0002ACC0 <AmiBlitz3.ab2@6307>   BEQ.w JL_0_5A9C
0002ACC6 <AmiBlitz3.ab2@6309>   MOVEA.l currentmacroaddr,A2
0002ACC8 <AmiBlitz3.ab2@6310>   MOVE.l A3,(A2)
0002ACCA <AmiBlitz3.ab2@6311>   SUBQ.w #1,D1
0002ACCC <AmiBlitz3.ab2@6314>     MOVEA.l A3,A2
0002ACCE <AmiBlitz3.ab2@6315>     MOVEA.l (A3),A3
0002ACD2 <AmiBlitz3.ab2@6316>   DBF D1,JL_0_5A72
0002ACD8 <AmiBlitz3.ab2@6318>   MOVE.l A2,currentmacroaddr
0002ACDA <AmiBlitz3.ab2@6319>   MOVEA.l A2,A3
0002ACDC <AmiBlitz3.ab2@6320>   MOVEQ.l #$00,D0
0002ACE0 <AmiBlitz3.ab2@6321>   MOVE.b $C(A3),D0
0002ACE2 <AmiBlitz3.ab2@6322>   ADDQ.w #1,D0
0002ACE6 <AmiBlitz3.ab2@6323>   BCLR #$0,D0
0002ACEA <AmiBlitz3.ab2@6324>   MOVE.w $8(A3),D1
0002ACEC <AmiBlitz3.ab2@6325>   ADDQ.w #1,D1
0002ACF0 <AmiBlitz3.ab2@6326>   BCLR #$0,D1
0002ACF2 <AmiBlitz3.ab2@6327>   ADDA.w D0,A3
0002ACF4 <AmiBlitz3.ab2@6328>   ADDA.w D1,A3
0002ACF6 <AmiBlitz3.ab2@6331> RTS
0002ACF8 <AmiBlitz3.ab2@6335>   MOVE.w (A3)+,D1
0002ACFC <AmiBlitz3.ab2@6336>   BEQ.w JL_0_5B38
0002ACFE <AmiBlitz3.ab2@6337>   MOVE.w D1,-(A7)
0002AD00 <AmiBlitz3.ab2@6338>   SUBQ.w #1,D1
0002AD06 <AmiBlitz3.ab2@6339>   MOVEA.l lastrestype,A2
0002AD08 <AmiBlitz3.ab2@6340>   MOVE.l A2,-(A7)
0002AD0A <AmiBlitz3.ab2@6343>       MOVE.l (A3),D0
0002AD0E <AmiBlitz3.ab2@6344>       BEQ.w JL_0_5ABC
0002AD10 <AmiBlitz3.ab2@6345>       MOVEA.l D0,A3
0002AD14 <AmiBlitz3.ab2@6346> BRA.w JL_0_5AB0
0002AD18 <AmiBlitz3.ab2@6349>       MOVE.b $E(A3),D0
0002AD1A <AmiBlitz3.ab2@6350>       ADDQ.w #1,D0
0002AD1E <AmiBlitz3.ab2@6351>       BCLR #$0,D0
0002AD20 <AmiBlitz3.ab2@6352>       ADDA.w D0,A3
0002AD22 <AmiBlitz3.ab2@6353>       MOVE.l A3,(A2)
0002AD24 <AmiBlitz3.ab2@6354>       MOVEA.l A3,A2
0002AD26 <AmiBlitz3.ab2@6355>       MOVEQ.l #$00,D0
0002AD2A <AmiBlitz3.ab2@6356>       MOVE.b $A(A3),D0
0002AD2C <AmiBlitz3.ab2@6357>       ADDQ.w #1,D0
0002AD30 <AmiBlitz3.ab2@6358>       BCLR #$0,D0
0002AD32 <AmiBlitz3.ab2@6359>       ADDA.w D0,A3
0002AD36 <AmiBlitz3.ab2@6360>   DBF D1,JL_0_5AB0
0002AD38 <AmiBlitz3.ab2@6362>   MOVEA.l (A7)+,A0
0002AD3A <AmiBlitz3.ab2@6363>   MOVEA.l (A0),A0
0002AD3E <AmiBlitz3.ab2@6366>     CMPA.w #$0,A0
0002AD42 <AmiBlitz3.ab2@6367>     BEQ.w JL_0_5B2A
0002AD46 <AmiBlitz3.ab2@6368>     MOVEA.l $4(A0),A1
0002AD4A <AmiBlitz3.ab2@6371>     CMPA.w #$0,A1
0002AD4E <AmiBlitz3.ab2@6372>     BEQ.w JL_0_5B24
0002AD52 <AmiBlitz3.ab2@6373>     MOVE.w $A(A1),D0
0002AD58 <AmiBlitz3.ab2@6374>     MOVEA.l newtypebase,A4
0002AD5C <AmiBlitz3.ab2@6375>     CMP.w #$7,D0
0002AD60 <AmiBlitz3.ab2@6376>     BCS.w JL_0_5B0E
0002AD66 <AmiBlitz3.ab2@6377>     SUB.w rescnt,D0
0002AD68 <AmiBlitz3.ab2@6380>     SUBQ.w #1,D0
0002AD6C <AmiBlitz3.ab2@6381>     BMI.w JL_0_5B1A
0002AD6E <AmiBlitz3.ab2@6384>        MOVEA.l (A4),A4
0002AD72 <AmiBlitz3.ab2@6385>   DBF D0,JL_0_5B14
0002AD76 <AmiBlitz3.ab2@6388>     MOVE.l A4,$A(A1)
0002AD78 <AmiBlitz3.ab2@6389>     MOVEA.l (A1),A1
0002AD7C <AmiBlitz3.ab2@6390> BRA.w JL_0_5AEE
0002AD7E <AmiBlitz3.ab2@6393>     MOVEA.l (A0),A0
0002AD82 <AmiBlitz3.ab2@6394> BRA.w JL_0_5AE2
0002AD84 <AmiBlitz3.ab2@6397>   MOVE.w (A7)+,D0
0002AD8A <AmiBlitz3.ab2@6398>   ADD.w D0,rescnt
0002AD90 <AmiBlitz3.ab2@6399>   MOVE.l A2,lastrestype
0002AD92 <AmiBlitz3.ab2@6402> RTS
0002AD98 <AmiBlitz3.ab2@6406>   LEA tokens,A0
0002AD9C <AmiBlitz3.ab2@6407>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
0002AD9E <AmiBlitz3.ab2@6410>     MOVEA.l (A0),A0
0002ADA2 <AmiBlitz3.ab2@6411>   DBF D0,JL_0_5BD0
0002ADA8 <AmiBlitz3.ab2@6413>   MOVEA.l #asmpnts,A1                                      ;create tokentab
0002ADAC <AmiBlitz3.ab2@6414>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
0002ADB0 <AmiBlitz3.ab2@6417>       LEA $6(A0),A2
0002ADB2 <AmiBlitz3.ab2@6420>         TST.b (A2)+
0002ADB6 <AmiBlitz3.ab2@6421>       BNE.w JL_0_5BE4
0002ADB8 <AmiBlitz3.ab2@6424>         TST.b (A2)+
0002ADBC <AmiBlitz3.ab2@6425>       BNE.w JL_0_5BEA
0002ADBE <AmiBlitz3.ab2@6427>       ADDQ.w #1,A2
0002ADC0 <AmiBlitz3.ab2@6428>       EXG.l D1,A2
0002ADC4 <AmiBlitz3.ab2@6429>       BCLR #$0,D1
0002ADC6 <AmiBlitz3.ab2@6430>       EXG.l D1,A2
0002ADC8 <AmiBlitz3.ab2@6431>       MOVE.l A2,(A1)+
0002ADCA <AmiBlitz3.ab2@6432>       MOVEA.l (A0),A0
0002ADCE <AmiBlitz3.ab2@6433>   DBF D0,JL_0_5BE0
0002ADD0 <AmiBlitz3.ab2@6434> RTS
0002ADD4 <AmiBlitz3.ab2@6438>   BSR.w asmconst
0002ADD6 <AmiBlitz3.ab2@6439>   MOVEQ.l #$0B,D5
0002ADD8 <AmiBlitz3.ab2@6440> RTS
0002ADDA <AmiBlitz3.ab2@6443> unmove:  Ds.w 1
0002ADDE <AmiBlitz3.ab2@6447>   MOVE.w #$48E7,D1
0002ADE2 <AmiBlitz3.ab2@6448>   BSR.w writeword                                          ;movem.l -(a7)
0002ADE6 <AmiBlitz3.ab2@6449>   MOVE.w #$000F,D2
0002ADE8 <AmiBlitz3.ab2@6450>   SUB.w D4,D2
0002ADEA <AmiBlitz3.ab2@6451>   MOVEQ.l #-$01,D1
0002ADEC <AmiBlitz3.ab2@6452>   BCLR D2,D1
0002ADF0 <AmiBlitz3.ab2@6453>   BSR.w writeword
0002ADF2 <AmiBlitz3.ab2@6454>   MOVEQ.l #-$01,D1
0002ADF4 <AmiBlitz3.ab2@6455>   BCLR D4,D1
0002ADFA <AmiBlitz3.ab2@6456>   MOVE.w D1,unmove
0002ADFC <AmiBlitz3.ab2@6457> RTS
0002AE00 <AmiBlitz3.ab2@6461>   MOVE.w #$4CDF,D1
0002AE04 <AmiBlitz3.ab2@6462>   BSR.w writeword
0002AE08 <AmiBlitz3.ab2@6463>   MOVE.w unmove(PC),D1
0002AE0C <AmiBlitz3.ab2@6464> BRA.w writeword
0002AE10 <AmiBlitz3.ab2@6477>   BSR.w JL_0_5D22
0002AE14 <AmiBlitz3.ab2@6478>   CMP.w #$2C,D0                                            ;#','
0002AE18 <AmiBlitz3.ab2@6479>    BNE.w syntaxerr
0002AE1E <AmiBlitz3.ab2@6480>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
0002AE22 <AmiBlitz3.ab2@6481>    BSR.w writelong
0002AE24 <AmiBlitz3.ab2@6482>   MOVE.w D4,D1
0002AE28 <AmiBlitz3.ab2@6483>   ORI.w #$2F00,D1
0002AE2C <AmiBlitz3.ab2@6484>    BSR.w writeword
0002AE30 <AmiBlitz3.ab2@6485>    BSR.w get1bytemain
0002AE34 <AmiBlitz3.ab2@6486>    BSR.w getparameter
0002AE38 <AmiBlitz3.ab2@6487>    BSR.w JL_0_8E3C
0002AE3C <AmiBlitz3.ab2@6488>    BSR.w calcvar
0002AE40 <AmiBlitz3.ab2@6489>    BTST #$E,D2
0002AE44 <AmiBlitz3.ab2@6490>    BEQ.w JL_0_5C80
0002AE48 <AmiBlitz3.ab2@6493>    MOVE.b #$3,D2
0002AE4C <AmiBlitz3.ab2@6494> BRA.w JL_0_5C8E
0002AE4E <AmiBlitz3.ab2@6497>   TST.b D2
0002AE52 <AmiBlitz3.ab2@6498>    BEQ.w JL_0_5C78
0002AE56 <AmiBlitz3.ab2@6499>   CMP.b #$7,D2
0002AE5A <AmiBlitz3.ab2@6500>    BEQ.w JL_0_5C78
0002AE5E <AmiBlitz3.ab2@6503>   BTST #$F,D2
0002AE62 <AmiBlitz3.ab2@6504>    BNE.w JL_0_5CA4
0002AE66 <AmiBlitz3.ab2@6505>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
0002AE6A <AmiBlitz3.ab2@6506>    BSR.w writeword
0002AE6C <AmiBlitz3.ab2@6507>   MOVE.w D3,D1
0002AE70 <AmiBlitz3.ab2@6508>    BSR.w writeword
0002AE74 <AmiBlitz3.ab2@6511>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002AE78 <AmiBlitz3.ab2@6512>    BSR.w writeword
0002AE7C <AmiBlitz3.ab2@6513>   MOVE.w #$1480,D1
0002AE80 <AmiBlitz3.ab2@6514>   CMP.b #$1,D2
0002AE84 <AmiBlitz3.ab2@6515>    BEQ.w JL_0_5CC8
0002AE88 <AmiBlitz3.ab2@6516>   EORI.w #$3000,D1
0002AE8C <AmiBlitz3.ab2@6517>   CMP.b #$2,D2
0002AE90 <AmiBlitz3.ab2@6518>    BNE.w JL_0_5CC8
0002AE94 <AmiBlitz3.ab2@6519>   ORI.w #$1000,D1
0002AE98 <AmiBlitz3.ab2@6522>   BSR.w writeword
0002AE9E <AmiBlitz3.ab2@6523>   MOVE.l #$4CDF7FFF,D1
0002AEA2 <AmiBlitz3.ab2@6524> BRA.w writelong
0002AEA6 <AmiBlitz3.ab2@6528>   BSR.w JL_0_5D22
0002AEAA <AmiBlitz3.ab2@6529>   CMP.w #$2C,D0
0002AEAE <AmiBlitz3.ab2@6530>    BNE.w syntaxerr
0002AEB2 <AmiBlitz3.ab2@6531>    BSR.w regmovems
0002AEB4 <AmiBlitz3.ab2@6532>   MOVE.w D4,-(A7)
0002AEB6 <AmiBlitz3.ab2@6533>   MOVEQ.l #$03,D2
0002AEBA <AmiBlitz3.ab2@6534>    BSR.w eval
0002AEBC <AmiBlitz3.ab2@6535>   MOVE.w (A7)+,D1
0002AEC0 <AmiBlitz3.ab2@6536>    BEQ.w JL_0_5D1A
0002AEC4 <AmiBlitz3.ab2@6537>   CMP.w #$8,D1
0002AEC8 <AmiBlitz3.ab2@6538>    BCC.w JL_0_5D0C
0002AECA <AmiBlitz3.ab2@6539>   LSL.w #8,D1
0002AECC <AmiBlitz3.ab2@6540>   LSL.w #1,D1
0002AED0 <AmiBlitz3.ab2@6541>   ORI.w #$2000,D1
0002AED4 <AmiBlitz3.ab2@6542>    BSR.w writeword
0002AED8 <AmiBlitz3.ab2@6543> BRA.w JL_0_5D1A
0002AEDA <AmiBlitz3.ab2@6546>   SUBQ.w #8,D1
0002AEDC <AmiBlitz3.ab2@6547>   LSL.w #8,D1
0002AEDE <AmiBlitz3.ab2@6548>   LSL.w #1,D1
0002AEE2 <AmiBlitz3.ab2@6549>   ORI.w #$2040,D1
0002AEE6 <AmiBlitz3.ab2@6550>   BSR.w writeword
0002AEEA <AmiBlitz3.ab2@6553> BRA.w dounmove
0002AEEE <AmiBlitz3.ab2@6557>   BSR.w get1bytemain
0002AEF2 <AmiBlitz3.ab2@6560>   ORI.w #$20,D0
0002AEF6 <AmiBlitz3.ab2@6561>   CMP.w #$64,D0
0002AEFA <AmiBlitz3.ab2@6562>    BEQ.w JL_0_5D4E
0002AEFE <AmiBlitz3.ab2@6563>   CMP.w #$61,D0
0002AF02 <AmiBlitz3.ab2@6564>    BNE.w syntaxerr
0002AF06 <AmiBlitz3.ab2@6565>    BSR.w JL_0_5D4E
0002AF08 <AmiBlitz3.ab2@6566>   ADDQ.w #8,D4
0002AF0A <AmiBlitz3.ab2@6567> RTS
0002AF36 <AmiBlitz3.ab2@6571>   !fget                                                   ;bsr.w get1bytemain
0002AF3A <AmiBlitz3.ab2@6573>   ORI.w #$20,D0
0002AF3E <AmiBlitz3.ab2@6576>   CMP.w #$61,D0
0002AF42 <AmiBlitz3.ab2@6577>   BNE.w syntaxerr
0002AF6E <AmiBlitz3.ab2@6580>   !fget                                                    ;bsr.w get1bytemain
0002AF72 <AmiBlitz3.ab2@6581>   SUBI.w #$30,D0
0002AF76 <AmiBlitz3.ab2@6582>    BMI.w syntaxerr
0002AF7A <AmiBlitz3.ab2@6583>   CMP.w #$7,D0
0002AF7E <AmiBlitz3.ab2@6584>    BHI.w syntaxerr
0002AF80 <AmiBlitz3.ab2@6585>   MOVE.w D0,D4
0002AFAC <AmiBlitz3.ab2@6586>   !fget
0002AFAE <AmiBlitz3.ab2@6587> RTS                                                        ;bra.w get1bytemain
0002AFB0 <AmiBlitz3.ab2@6591>   ADDQ.w #8,D4
0002AFB2 <AmiBlitz3.ab2@6594>   MOVEQ.l #$00,D5
0002AFB6 <AmiBlitz3.ab2@6595>   SUBI.w #$30,D4
0002AFBA <AmiBlitz3.ab2@6598>   CMP.w #$2D,D0
0002AFBE <AmiBlitz3.ab2@6599>    BEQ.w JL_0_5D9E
0002AFC2 <AmiBlitz3.ab2@6600>   CMP.w #$2F,D0
0002AFC6 <AmiBlitz3.ab2@6601>    BEQ.w JL_0_5D8C
0002AFCA <AmiBlitz3.ab2@6602> BRA.w syntaxerr
0002AFCC <AmiBlitz3.ab2@6605>   BSET D4,D5
0002AFCE <AmiBlitz3.ab2@6608>   MOVE.w D5,D4
0002AFD0 <AmiBlitz3.ab2@6609>   MOVEQ.l #$0F,D5
0002AFD2 <AmiBlitz3.ab2@6610> RTS
0002AFD4 <AmiBlitz3.ab2@6613>   BSET D4,D5
0002AFD8 <AmiBlitz3.ab2@6614>   BSR.w JL_0_5D1E
0002AFEA <AmiBlitz3.ab2@6615>   !compare3                                                ;bsr.w JL_0_5FC0
0002AFEE <AmiBlitz3.ab2@6616>   BNE.w JL_0_5D70
0002AFF2 <AmiBlitz3.ab2@6617> BRA.w JL_0_5D84
0002AFF4 <AmiBlitz3.ab2@6620>   MOVE.w D4,D1
0002AFF8 <AmiBlitz3.ab2@6621>    BSR.w JL_0_5D1E
0002AFFA <AmiBlitz3.ab2@6622>   CMP.w D4,D1
0002AFFE <AmiBlitz3.ab2@6623>    BLS.w JL_0_5DAC
0002B000 <AmiBlitz3.ab2@6624>   EXG.l D4,D1
0002B002 <AmiBlitz3.ab2@6627>   BSET D1,D5
0002B004 <AmiBlitz3.ab2@6628>   ADDQ.w #1,D1
0002B006 <AmiBlitz3.ab2@6629>   CMP.w D4,D1
0002B00A <AmiBlitz3.ab2@6630>    BLS.w JL_0_5DAC
0002B01C <AmiBlitz3.ab2@6631>   !compare3                                                ;bsr.w JL_0_5FC0
0002B020 <AmiBlitz3.ab2@6632>   BNE.w JL_0_5D70
0002B024 <AmiBlitz3.ab2@6633> BRA.w JL_0_5D86
0002B026 <AmiBlitz3.ab2@6636>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
0002B052 <AmiBlitz3.ab2@6637>    !fget
0002B056 <AmiBlitz3.ab2@6638>   CMP.w #$23,D0
0002B05A <AmiBlitz3.ab2@6639>    BEQ.w getimm
0002B05E <AmiBlitz3.ab2@6640>   CMP.w #$28,D0
0002B062 <AmiBlitz3.ab2@6641>    BEQ.w JL_0_5DFE
0002B066 <AmiBlitz3.ab2@6642>   CMP.w #$2D,D0
0002B06A <AmiBlitz3.ab2@6643>    BNE.w JL_0_5E20
0002B096 <AmiBlitz3.ab2@6644>    !fget                                                   ;bsr.w get1bytemain       -(
0002B09A <AmiBlitz3.ab2@6645>   CMP.w #$28,D0
0002B09E <AmiBlitz3.ab2@6646>    BNE.w JL_0_5F4E
0002B0A2 <AmiBlitz3.ab2@6647>    BSR.w JL_0_5D3E
0002B0A6 <AmiBlitz3.ab2@6648>   CMP.w #$29,D0
0002B0AA <AmiBlitz3.ab2@6649>    BNE.w syntaxerr
0002B0AC <AmiBlitz3.ab2@6650>   MOVEQ.l #$04,D5
0002B0D8 <AmiBlitz3.ab2@6651>   !fget                                                    ;bsr.w get1bytemain
0002B0DA <AmiBlitz3.ab2@6652> RTS
0002B0DE <AmiBlitz3.ab2@6656>   BSR.w JL_0_5D3E
0002B0E2 <AmiBlitz3.ab2@6657>   CMP.w #$29,D0
0002B0E6 <AmiBlitz3.ab2@6658>    BNE.w syntaxerr
0002B112 <AmiBlitz3.ab2@6659>   !fget                                                    ;bsr.w get1bytemain
0002B116 <AmiBlitz3.ab2@6660>   CMP.w #$2B,D0
0002B11A <AmiBlitz3.ab2@6661>    BEQ.w JL_0_5E1A
0002B11C <AmiBlitz3.ab2@6662>   MOVEQ.l #$02,D5
0002B11E <AmiBlitz3.ab2@6663> RTS
0002B120 <AmiBlitz3.ab2@6667>   MOVEQ.l #$03,D5
0002B14C <AmiBlitz3.ab2@6668>   !fget                                                    ;bra.w get1bytemain
0002B14E <AmiBlitz3.ab2@6669> RTS
0002B152 <AmiBlitz3.ab2@6673>   ORI.w #$20,D0
0002B154 <AmiBlitz3.ab2@6674>   MOVE.w D0,D1                                            
0002B180 <AmiBlitz3.ab2@6675>    !fget                                                   ;bsr.w get1bytemain
0002B184 <AmiBlitz3.ab2@6676>   CMP.w #$64,D1
0002B188 <AmiBlitz3.ab2@6677>    BNE.w JL_0_5E6C
0002B18C <AmiBlitz3.ab2@6678>   CMP.w #$30,D0
0002B190 <AmiBlitz3.ab2@6679>    BCS.w JL_0_5EAE
0002B194 <AmiBlitz3.ab2@6680>   CMP.w #$37,D0
0002B198 <AmiBlitz3.ab2@6681>    BHI.w JL_0_5EAE
0002B19A <AmiBlitz3.ab2@6682>   MOVE.w D0,D4
0002B1C6 <AmiBlitz3.ab2@6683>    !fget                                                   ;bsr.w get1bytemain
0002B1D8 <AmiBlitz3.ab2@6684>    !compare3                                               ;bsr.w JL_0_5FC0
0002B1DC <AmiBlitz3.ab2@6685>    BEQ.w JL_0_5E64
0002B1E0 <AmiBlitz3.ab2@6686>   CMP.w #$2D,D0
0002B1E4 <AmiBlitz3.ab2@6687>    BEQ.w JL_0_5D6A
0002B1E8 <AmiBlitz3.ab2@6688>   CMP.w #$2F,D0
0002B1EC <AmiBlitz3.ab2@6689>    BEQ.w JL_0_5D6A
0002B1F0 <AmiBlitz3.ab2@6690> BRA.w JL_0_5EB8
0002B1F2 <AmiBlitz3.ab2@6693>   MOVEQ.l #$00,D5
0002B1F6 <AmiBlitz3.ab2@6694>   SUBI.w #$30,D4
0002B1F8 <AmiBlitz3.ab2@6695> RTS
0002B1FC <AmiBlitz3.ab2@6698>    CMP.w #$61,D1
0002B200 <AmiBlitz3.ab2@6699>    BNE.w JL_0_5EAE
0002B204 <AmiBlitz3.ab2@6700>   CMP.w #$30,D0
0002B208 <AmiBlitz3.ab2@6701>    BCS.w JL_0_5EAE
0002B20C <AmiBlitz3.ab2@6702>   CMP.w #$37,D0
0002B210 <AmiBlitz3.ab2@6703>    BHI.w JL_0_5EAE
0002B212 <AmiBlitz3.ab2@6704>   MOVE.w D0,D4
0002B23E <AmiBlitz3.ab2@6705>    !fget                                                   ;bsr.w get1bytemain
0002B250 <AmiBlitz3.ab2@6706>    !compare3                                               ;bsr.w JL_0_5FC0
0002B254 <AmiBlitz3.ab2@6707>    BEQ.w JL_0_5EA6
0002B258 <AmiBlitz3.ab2@6708>   CMP.w #$2D,D0
0002B25C <AmiBlitz3.ab2@6709>    BEQ.w JL_0_5D68                                         ;movem
0002B260 <AmiBlitz3.ab2@6710>   CMP.w #$2F,D0
0002B264 <AmiBlitz3.ab2@6711>    BEQ.w JL_0_5D68
0002B268 <AmiBlitz3.ab2@6712> BRA.w JL_0_5EB8
0002B26A <AmiBlitz3.ab2@6715>   MOVEQ.l #1,d5
0002B26E <AmiBlitz3.ab2@6716>   SUBI.w #$30,D4
0002B272 <AmiBlitz3.ab2@6718> BRA 'l10
0002B274 <AmiBlitz3.ab2@6719>   ADDQ.w #8,d4
0002B276 <AmiBlitz3.ab2@6720>   MOVEQ #0,d5
0002B278 <AmiBlitz3.ab2@6721>   BSET d4,d5
0002B27A <AmiBlitz3.ab2@6722>   MOVE.w d5,d4
0002B27C <AmiBlitz3.ab2@6723>   MOVEQ.l #$0f,D5                                          ;01
0002B27E <AmiBlitz3.ab2@6726> RTS
0002B282 <AmiBlitz3.ab2@6730>   ORI.w #$20,D0
0002B284 <AmiBlitz3.ab2@6731>   MOVE.w D0,D4
0002B2B0 <AmiBlitz3.ab2@6732>    !fget                                                   ;bsr.w get1bytemain
0002B2C2 <AmiBlitz3.ab2@6735>   !compare3                                                ;bsr.w JL_0_5FC0
0002B2C6 <AmiBlitz3.ab2@6736>    BNE.w JL_0_5EF2
0002B2CA <AmiBlitz3.ab2@6737>   CMP.w #$73,D1
0002B2CE <AmiBlitz3.ab2@6738>    BNE.w JL_0_5EF2
0002B2D2 <AmiBlitz3.ab2@6739>   CMP.w #$70,D4
0002B2D6 <AmiBlitz3.ab2@6740>    BNE.w JL_0_5EDE
0002B2E8 <AmiBlitz3.ab2@6741>    !compare3                                               ;bsr.w JL_0_5FC0
0002B2EC <AmiBlitz3.ab2@6742>    BNE.w JL_0_5F4E
0002B2EE <AmiBlitz3.ab2@6743>   MOVEQ.l #$07,D4
0002B2F0 <AmiBlitz3.ab2@6744>   MOVEQ.l #$01,D5
0002B2F2 <AmiBlitz3.ab2@6745> RTS
0002B2F6 <AmiBlitz3.ab2@6749>   CMP.w #$72,D4
0002B2FA <AmiBlitz3.ab2@6750>    BNE.w JL_0_5F4E
0002B30C <AmiBlitz3.ab2@6751>    !compare3                                               ;bsr.w JL_0_5FC0
0002B310 <AmiBlitz3.ab2@6752>    BNE.w JL_0_5F4E
0002B312 <AmiBlitz3.ab2@6753>   MOVEQ.l #$0D,D5
0002B314 <AmiBlitz3.ab2@6754> RTS
0002B318 <AmiBlitz3.ab2@6758>   ORI.w #$20,D0
0002B31C <AmiBlitz3.ab2@6759>   CMP.w #$63,D1
0002B320 <AmiBlitz3.ab2@6760>    BNE.w JL_0_5F22
0002B324 <AmiBlitz3.ab2@6761>   CMP.w #$63,D4
0002B328 <AmiBlitz3.ab2@6762>    BNE.w JL_0_5F4E
0002B32C <AmiBlitz3.ab2@6763>   CMP.w #$72,D0
0002B330 <AmiBlitz3.ab2@6764>    BNE.w JL_0_5F4E
0002B334 <AmiBlitz3.ab2@6765>    BSR.w get1bytemain                                      ;??wy not !fget
0002B338 <AmiBlitz3.ab2@6766>    BEQ.w JL_0_5F1E
0002B33C <AmiBlitz3.ab2@6767>   CMP.w #$2C,D0
0002B340 <AmiBlitz3.ab2@6768>    BNE.w JL_0_5F4E
0002B342 <AmiBlitz3.ab2@6771>   MOVEQ.l #$0C,D5
0002B344 <AmiBlitz3.ab2@6772> RTS
0002B348 <AmiBlitz3.ab2@6776>   CMP.w #$75,D1
0002B34C <AmiBlitz3.ab2@6777>    BNE.w JL_0_5F4E
0002B350 <AmiBlitz3.ab2@6778>   CMP.w #$73,D4
0002B354 <AmiBlitz3.ab2@6779>    BNE.w JL_0_5F4E
0002B358 <AmiBlitz3.ab2@6780>   CMP.w #$70,D0
0002B35C <AmiBlitz3.ab2@6781>    BNE.w JL_0_5F4E
0002B360 <AmiBlitz3.ab2@6782>    BSR.w get1bytemain                                      ;??wy not !fget
0002B364 <AmiBlitz3.ab2@6783>    BEQ.w JL_0_5F4A
0002B368 <AmiBlitz3.ab2@6784>   CMP.w #$2C,D0
0002B36C <AmiBlitz3.ab2@6785>    BNE.w JL_0_5F4E
0002B36E <AmiBlitz3.ab2@6788>   MOVEQ.l #$0E,D5
0002B370 <AmiBlitz3.ab2@6789> RTS
0002B372 <AmiBlitz3.ab2@6793>   MOVEA.l A4,A5
0002B376 <AmiBlitz3.ab2@6794>    BSR.w asmconst
0002B388 <AmiBlitz3.ab2@6795>    !compare3                                               ;bsr.w JL_0_5FC0
0002B38C <AmiBlitz3.ab2@6796>    BEQ.w JL_0_5FB8
0002B390 <AmiBlitz3.ab2@6797>   CMP.w #$2E,D0
0002B394 <AmiBlitz3.ab2@6798>    BEQ.w JL_0_5FA0
0002B398 <AmiBlitz3.ab2@6799>   CMP.w #$28,D0
0002B39C <AmiBlitz3.ab2@6800>    BNE.w syntaxerr
0002B3A0 <AmiBlitz3.ab2@6801>    BSR.w get1bytemain                                      ;??wy not !fget
0002B3A4 <AmiBlitz3.ab2@6802>   ORI.w #$20,D0
0002B3A8 <AmiBlitz3.ab2@6803>   CMP.w #$70,D0
0002B3AC <AmiBlitz3.ab2@6804>    BNE.w JL_0_5F98
0002B3B0 <AmiBlitz3.ab2@6805>    BSR.w get1bytemain                                      ;??wy not !fget
0002B3B4 <AmiBlitz3.ab2@6806>   ORI.w #$20,D0
0002B3B8 <AmiBlitz3.ab2@6807>   CMP.w #$63,D0
0002B3BC <AmiBlitz3.ab2@6808>    BNE.w syntaxerr
0002B3C0 <AmiBlitz3.ab2@6809>    BSR.w get1bytemain                                      ;??wy not !fget
0002B3C4 <AmiBlitz3.ab2@6810>    BSR.w JL_0_5FD4
0002B3C6 <AmiBlitz3.ab2@6811>   ADDQ.w #4,D5
0002B3C8 <AmiBlitz3.ab2@6812> RTS
0002B3CC <AmiBlitz3.ab2@6816>   BSR.w JL_0_5D46
0002B3D0 <AmiBlitz3.ab2@6817> BRA.w JL_0_5FD4
0002B3D4 <AmiBlitz3.ab2@6821>    BSR.w get1bytemain                                     ;??wy not !fget
0002B3D8 <AmiBlitz3.ab2@6822>   ORI.w #$20,D0
0002B3DC <AmiBlitz3.ab2@6823>   CMP.w #$77,D0
0002B3E0 <AmiBlitz3.ab2@6824>    BEQ.w JL_0_5FBC
0002B3E4 <AmiBlitz3.ab2@6825>   CMP.w #$6C,D0
0002B3E8 <AmiBlitz3.ab2@6826>    BNE.w syntaxerr
0002B3EA <AmiBlitz3.ab2@6829>   MOVEQ.l #$08,D5
0002B3EC <AmiBlitz3.ab2@6830> RTS
0002B3EE <AmiBlitz3.ab2@6834>   MOVEQ.l #$07,D5
0002B3F0 <AmiBlitz3.ab2@6835> RTS
0002B3F2 <AmiBlitz3.ab2@6839>   TST.w D0
0002B3F6 <AmiBlitz3.ab2@6840>    BEQ.w JL_0_5FD2
0002B3FA <AmiBlitz3.ab2@6841>   CMP.w #$3A,D0
0002B3FE <AmiBlitz3.ab2@6842>    BEQ.w JL_0_5FD2
0002B402 <AmiBlitz3.ab2@6843>   CMP.w #$2C,D0
0002B404 <AmiBlitz3.ab2@6846> RTS
0002B408 <AmiBlitz3.ab2@6850>   CMP.w #$2C,D0
0002B40C <AmiBlitz3.ab2@6851>    BNE.w JL_0_6054
0002B410 <AmiBlitz3.ab2@6852>    BSR.w get1bytemain                                      ;??wy not !fget
0002B414 <AmiBlitz3.ab2@6853>   ORI.w #$20,D0
0002B416 <AmiBlitz3.ab2@6854>   MOVEQ.l #$00,D1
0002B41A <AmiBlitz3.ab2@6855>   CMP.w #$64,D0
0002B41E <AmiBlitz3.ab2@6856>    BEQ.w JL_0_5FFA
0002B422 <AmiBlitz3.ab2@6857>   CMP.w #$61,D0
0002B426 <AmiBlitz3.ab2@6858>    BNE.w syntaxerr
0002B42A <AmiBlitz3.ab2@6859>   BSET #$F,D1
0002B42E <AmiBlitz3.ab2@6862>    BSR.w get1bytemain                                      ;??wy not !fget
0002B432 <AmiBlitz3.ab2@6863>   SUBI.w #$30,D0
0002B436 <AmiBlitz3.ab2@6864>    BMI.w syntaxerr
0002B43A <AmiBlitz3.ab2@6865>   CMP.w #$7,D0
0002B43E <AmiBlitz3.ab2@6866>    BHI.w syntaxerr
0002B440 <AmiBlitz3.ab2@6867>   LSL.w #8,D0
0002B442 <AmiBlitz3.ab2@6868>   LSL.w #4,D0
0002B444 <AmiBlitz3.ab2@6869>   OR.w D0,D1
0002B448 <AmiBlitz3.ab2@6870>    BSR.w get1bytemain                                      ;??wy not !fget
0002B44C <AmiBlitz3.ab2@6871>   CMP.w #$2E,D0
0002B450 <AmiBlitz3.ab2@6872>    BNE.w JL_0_6040
0002B454 <AmiBlitz3.ab2@6873>    BSR.w get1bytemain                                      ;??wy not !fget
0002B458 <AmiBlitz3.ab2@6874>   ORI.w #$20,D0
0002B45C <AmiBlitz3.ab2@6875>   CMP.w #$77,D0
0002B460 <AmiBlitz3.ab2@6876>    BEQ.w JL_0_603C
0002B464 <AmiBlitz3.ab2@6877>   CMP.w #$6C,D0
0002B468 <AmiBlitz3.ab2@6878>    BNE.w syntaxerr
0002B46C <AmiBlitz3.ab2@6879>   BSET #$B,D1
0002B470 <AmiBlitz3.ab2@6882>    BSR.w get1bytemain                                      ;??wy not !fget
0002B474 <AmiBlitz3.ab2@6885>    CMP.b #"*",d0                                           ;020 * Mode
0002B478 <AmiBlitz3.ab2@6886>             BNE 'l1
0002B47C <AmiBlitz3.ab2@6887>             BSR.w get1bytemain                             ;??wy not !fget
0002B480 <AmiBlitz3.ab2@6888>             CMP.b #"2",d0
0002B484 <AmiBlitz3.ab2@6889>             BNE 'l2
0002B488 <AmiBlitz3.ab2@6890>             OR.w #$200,d1
0002B48C <AmiBlitz3.ab2@6891> BRA 'l1b
0002B490 <AmiBlitz3.ab2@6894>             CMP.b #"4",d0
0002B494 <AmiBlitz3.ab2@6895>             BNE 'l3
0002B498 <AmiBlitz3.ab2@6896>             OR.w #$400,d1
0002B49C <AmiBlitz3.ab2@6897> BRA 'l1b
0002B4A0 <AmiBlitz3.ab2@6900>             CMP.b #"8",d0
0002B4A4 <AmiBlitz3.ab2@6901>             BNE syntaxerr
0002B4A8 <AmiBlitz3.ab2@6902>             OR.w #$600,d1
0002B4AC <AmiBlitz3.ab2@6905>         BSR.w get1bytemain                                 ;??wy not !fget
0002B4B0 <AmiBlitz3.ab2@6908>   CMP.w #$29,D0
0002B4B4 <AmiBlitz3.ab2@6909>    BNE.w syntaxerr
0002B4BA <AmiBlitz3.ab2@6910>   MOVE.w D1,extraword
0002B4BC <AmiBlitz3.ab2@6911>   MOVEQ.l #$06,D5
0002B4C0 <AmiBlitz3.ab2@6912> BRA.w get1bytemain                                         ;??wy not !fget
0002B4C4 <AmiBlitz3.ab2@6916>   CMP.w #")",D0                                            ;")"
0002B4C8 <AmiBlitz3.ab2@6917>    BNE.w errorbracketmiss                                  ; was syntax error
0002B4CA <AmiBlitz3.ab2@6918>   MOVEQ.l #$05,D5
0002B4CE <AmiBlitz3.ab2@6919> BRA.w get1bytemain                                         ;??wy not !fget
0002B4D4 <AmiBlitz3.ab2@6926>   MOVEA.l asmbuff,A0
0002B4DA <AmiBlitz3.ab2@6927>   MOVE.w ininclude,D1
0002B4E0 <AmiBlitz3.ab2@6928>   OR.w inmacro,D1
0002B4E2 <AmiBlitz3.ab2@6929>   MOVE.w D1,(A0)+                                          ;flag!
0002B4E6 <AmiBlitz3.ab2@6930>    BNE.w copyconst
0002B4E8 <AmiBlitz3.ab2@6931>   MOVE.l A5,-(A7)
0002B4EC <AmiBlitz3.ab2@6932>    BSR.w copyconst
0002B4F2 <AmiBlitz3.ab2@6933>   MOVEA.l asmbuff,A0
0002B4F6 <AmiBlitz3.ab2@6934>   CMP.w #$4,D1
0002B4FA <AmiBlitz3.ab2@6935>    BLS.w asmconst__leave
0002B500 <AmiBlitz3.ab2@6936>   TST.w lc
0002B504 <AmiBlitz3.ab2@6937>    BNE.w asmconst__leave
0002B506 <AmiBlitz3.ab2@6938>   ADDQ.w #2,A0
0002B508 <AmiBlitz3.ab2@6939>   MOVE.l (A7)+,(A0)+
0002B50A <AmiBlitz3.ab2@6940>   CLR.b (A0)
0002B512 <AmiBlitz3.ab2@6941>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
0002B514 <AmiBlitz3.ab2@6942> RTS
0002B516 <AmiBlitz3.ab2@6946>   NOT.w (A0)
0002B518 <AmiBlitz3.ab2@6947>   ADDQ.w #4,A7
0002B51A <AmiBlitz3.ab2@6948> RTS
0002B51C <AmiBlitz3.ab2@6951> lc:  Ds.w 1
0002B522 <AmiBlitz3.ab2@6955>   CLR.w lc
0002B524 <AmiBlitz3.ab2@6956>   MOVEQ.l #$00,D1
0002B526 <AmiBlitz3.ab2@6959>    ADDQ.w #1,D1                                            ;label name
0002B552 <AmiBlitz3.ab2@6960>    !fget                                                   ;bsr.w get1bytemain
0002B556 <AmiBlitz3.ab2@6961>    BEQ.w copyconst__done
0002B55A <AmiBlitz3.ab2@6962>    CMP.w #$22,d0
0002B55E <AmiBlitz3.ab2@6963>    BNE.s copyconst__loop_l10
0002B564 <AmiBlitz3.ab2@6964>    NOT.w instringon
0002B568 <AmiBlitz3.ab2@6967>    CMP.w #":",d0
0002B56C <AmiBlitz3.ab2@6968>    BNE.s copyconst__loop_l11
0002B572 <AmiBlitz3.ab2@6969>    TST.w instringon
0002B576 <AmiBlitz3.ab2@6970>    BEQ copyconst__done
0002B578 <AmiBlitz3.ab2@6973>   TST.w D0
0002B57C <AmiBlitz3.ab2@6974>   BPL.w copyconst__notmi
0002B57E <AmiBlitz3.ab2@6975>   MOVE.w D0,-(A7)
0002B580 <AmiBlitz3.ab2@6976>   LSR.w #8,D0
0002B582 <AmiBlitz3.ab2@6977>   MOVE.b D0,(A0)+
0002B584 <AmiBlitz3.ab2@6978>   MOVE.w (A7)+,D0
0002B586 <AmiBlitz3.ab2@6979>   MOVE.b D0,(A0)+
0002B588 <AmiBlitz3.ab2@6980>   ADDQ.w #1,D1
0002B58C <AmiBlitz3.ab2@6981> BRA.s copyconst__loop
0002B592 <AmiBlitz3.ab2@6984>    TST.w instringon
0002B596 <AmiBlitz3.ab2@6985>    BNE.w copyconst__putbyte
0002B59C <AmiBlitz3.ab2@6986>    TST.b _dcb
0002B5A0 <AmiBlitz3.ab2@6987>    BNE copyconst__notmi_l10
0002B5A4 <AmiBlitz3.ab2@6988>    CMP.w #$28,D0
0002B5A8 <AmiBlitz3.ab2@6989>    BEQ.w copyconst__done
0002B5AC <AmiBlitz3.ab2@6992>    CMP.w #$2C,D0
0002B5B0 <AmiBlitz3.ab2@6993>    BEQ.w copyconst__done
0002B5B4 <AmiBlitz3.ab2@6994>    CMP.b #"'",D0
0002B5B8 <AmiBlitz3.ab2@6995>    BNE.w copyconst__putbyte
0002B5BE <AmiBlitz3.ab2@6996>    MOVE.w D0,lc                                     ;locallabels
0002B5C0 <AmiBlitz3.ab2@6997>    MOVE.l A1,-(A7)
0002B5C6 <AmiBlitz3.ab2@6998>    LEA lastgloballabel,A1
0002B5C8 <AmiBlitz3.ab2@6999>    TST.b (A1)
0002B5CC <AmiBlitz3.ab2@7000>    BEQ.w nolocerr
0002B5CE <AmiBlitz3.ab2@7003>   ADDQ.w #1,D1
0002B5D0 <AmiBlitz3.ab2@7004>   MOVE.b (A1)+,(A0)+
0002B5D4 <AmiBlitz3.ab2@7005>    BNE.w copyconst__cloop
0002B5D6 <AmiBlitz3.ab2@7006>   SUBQ.w #1,D1
0002B5D8 <AmiBlitz3.ab2@7007>   SUBQ.w #1,A0
0002B5DA <AmiBlitz3.ab2@7008>   MOVEA.l (A7)+,A1
0002B5DC <AmiBlitz3.ab2@7011>   MOVE.b D0,(A0)+
0002B5E0 <AmiBlitz3.ab2@7012> BRA.w copyconst__loop
0002B5E2 <AmiBlitz3.ab2@7015>   CLR.b (A0)
0002B5E8 <AmiBlitz3.ab2@7016>   MOVE.w D1,asmlen2
0002B5EA <AmiBlitz3.ab2@7017> RTS
0002B5F0 <AmiBlitz3.ab2@7022>   CMP.l #$80ad,d0
0002B5F4 <AmiBlitz3.ab2@7023>   BNE.s 'l12
0002B5FA <AmiBlitz3.ab2@7024> JMP bssseg
0002B600 <AmiBlitz3.ab2@7027>   CMP.l #$807f,d0
0002B604 <AmiBlitz3.ab2@7028>     BNE.s 'l13
0002B60A <AmiBlitz3.ab2@7029> JMP chipseg
0002B610 <AmiBlitz3.ab2@7032>   ADDQ.l #1,destpointer                                    ;even
0002B618 <AmiBlitz3.ab2@7033>   BCLR #$0,destpointer+3
0002B61C <AmiBlitz3.ab2@7034>   SUBI.w #$803C,D0
0002B61E <AmiBlitz3.ab2@7035>   LSL.w #2,D0
0002B624 <AmiBlitz3.ab2@7036>   MOVEA.l #asmpnts,A0
0002B628 <AmiBlitz3.ab2@7037>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
0002B62E <AmiBlitz3.ab2@7038>   MOVE.w D0,temp1
0002B630 <AmiBlitz3.ab2@7039>   MOVE.l A0,-(A7)
0002B632 <AmiBlitz3.ab2@7040>   MOVEQ.l #$01,D1
0002B65E <AmiBlitz3.ab2@7041>    !fget                                                   ;bsr.w get1bytemain
0002B662 <AmiBlitz3.ab2@7042>   CMP.w #$2E,D0
0002B666 <AmiBlitz3.ab2@7043>    BNE.w JL_0_6184
0002B692 <AmiBlitz3.ab2@7044>   !fget                                                    ;bsr.w get1bytemain
0002B696 <AmiBlitz3.ab2@7045>   ORI.w #$20,D0
0002B69A <AmiBlitz3.ab2@7046>   CMP.w #$77,D0                                            ;long
0002B69E <AmiBlitz3.ab2@7047>    BEQ.w JL_0_618A
0002B6A2 <AmiBlitz3.ab2@7048>   CMP.w #$62,D0                                            ;byte
0002B6A6 <AmiBlitz3.ab2@7049>    BEQ.w JL_0_617A
0002B6AA <AmiBlitz3.ab2@7050>   CMP.w #$6C,D0                                            ;word
0002B6AE <AmiBlitz3.ab2@7051>    BEQ.w JL_0_6196
0002B6B2 <AmiBlitz3.ab2@7052>   CMP.w #"s",d0
0002B6B6 <AmiBlitz3.ab2@7053>   BNE syntaxerr
0002B6BA <AmiBlitz3.ab2@7054> BRA.w JL_0_617A
0002B6BC <AmiBlitz3.ab2@7057>   MOVEQ.l #$00,D1
0002B6C0 <AmiBlitz3.ab2@7058>   MOVE.w $8(A0),D0
0002B6C4 <AmiBlitz3.ab2@7059> BRA.w JL_0_619E
0002B6C6 <AmiBlitz3.ab2@7062>   MOVEQ.l #$04,D1
0002B6CA <AmiBlitz3.ab2@7063> BRA.w JL_0_61AE
0002B6CC <AmiBlitz3.ab2@7066>   MOVEQ.l #$04,D1
0002B6D0 <AmiBlitz3.ab2@7067>   MOVE.w $8(A0),D0
0002B6D2 <AmiBlitz3.ab2@7068>   LSR.w #4,D0
0002B6D6 <AmiBlitz3.ab2@7069> BRA.w JL_0_619E
0002B6D8 <AmiBlitz3.ab2@7072>   MOVEQ.l #$08,D1
0002B6DC <AmiBlitz3.ab2@7073>   MOVE.w $8(A0),D0
0002B6DE <AmiBlitz3.ab2@7074>   LSR.w #8,D0
0002B6E2 <AmiBlitz3.ab2@7077>    ANDI.w #$F,D0
0002B6E6 <AmiBlitz3.ab2@7078>   CMP.w #$F,D0
0002B6EA <AmiBlitz3.ab2@7079>    BNE.w 'cl60
0002B6F2 <AmiBlitz3.ab2@7082>    CMP.l #"MULS",-6(a0)
0002B6F6 <AmiBlitz3.ab2@7083>    BNE 'c20
0002B6FC <AmiBlitz3.ab2@7084>    MOVE.l #$4c000800,d1
0002B702 <AmiBlitz3.ab2@7085> JMP do32
0002B70A <AmiBlitz3.ab2@7088>    CMP.l #"MULU",-6(a0)
0002B70E <AmiBlitz3.ab2@7089>    BNE 'c30
0002B714 <AmiBlitz3.ab2@7090>    MOVE.l #$4c000000,d1
0002B71A <AmiBlitz3.ab2@7091> JMP do32
0002B722 <AmiBlitz3.ab2@7094>    CMP.l #"DIVS",-6(a0)
0002B726 <AmiBlitz3.ab2@7095>    BNE 'c40
0002B72C <AmiBlitz3.ab2@7096>    MOVE.l #$4c400800,d1
0002B732 <AmiBlitz3.ab2@7097> JMP do32
0002B73A <AmiBlitz3.ab2@7100>    CMP.l #"DIVU",-6(a0)
0002B73E <AmiBlitz3.ab2@7101>    BNE 'c50
0002B744 <AmiBlitz3.ab2@7102>    MOVE.l #$4c400000,d1
0002B74A <AmiBlitz3.ab2@7103> JMP do32
0002B74E <AmiBlitz3.ab2@7106> BRA illsizeerr
0002B77A <AmiBlitz3.ab2@7109>   !fget                                                    ;bsr.w get1bytemain
0002B780 <AmiBlitz3.ab2@7112>   MOVE.w D1,asmsize
0002B782 <AmiBlitz3.ab2@7113>   MOVEQ.l #-$01,D3
0002B786 <AmiBlitz3.ab2@7114>    BSR.w reget
0002B78A <AmiBlitz3.ab2@7115>    BEQ.w JL_0_6200
0002B794 <AmiBlitz3.ab2@7116>   MOVE.l #ptr_parameterstore,asmbuff
0002B79E <AmiBlitz3.ab2@7118>    MOVE.w oldqflag,instringon
0002B7A4 <AmiBlitz3.ab2@7119>   MOVEA.l lastsourcepos,A5
0002B7A8 <AmiBlitz3.ab2@7120>    BSR.w JL_0_5DC2
0002B7AA <AmiBlitz3.ab2@7121>   MOVE.l D4,D2                                             ;to src
0002B7AC <AmiBlitz3.ab2@7122>   MOVE.l D5,D3
0002B7B6 <AmiBlitz3.ab2@7123>   MOVE.w asmlen2,asmlen
0002B7B8 <AmiBlitz3.ab2@7124>   MOVEQ.l #-$01,D5
0002B7C2 <AmiBlitz3.ab2@7125>   MOVE.w extraword,extraword2
0002B7C6 <AmiBlitz3.ab2@7126>   CMP.w #$2C,D0                                            ;','
0002B7CA <AmiBlitz3.ab2@7127>    BNE.w JL_0_6200
0002B7D4 <AmiBlitz3.ab2@7128>   MOVE.l #namebuff2,asmbuff
0002B7D8 <AmiBlitz3.ab2@7129>    BSR.w JL_0_5DC2                                         ;dest
0002B7DA <AmiBlitz3.ab2@7132>   MOVEA.l (A7)+,A0
0002B7E0 <AmiBlitz3.ab2@7133>   MOVEA.l destpointer,A1
0002B7E2 <AmiBlitz3.ab2@7134>   MOVEA.l A1,A4
0002B7E4 <AmiBlitz3.ab2@7135>   ADDQ.w #2,A1
0002B7E6 <AmiBlitz3.ab2@7136>   MOVE.w (A0),D1
0002B7E8 <AmiBlitz3.ab2@7137>   TST.w D3
0002B7EC <AmiBlitz3.ab2@7138>    BMI.w JL_0_639E
0002B7F0 <AmiBlitz3.ab2@7139>   MOVE.w $E(A0),D0
0002B7F4 <AmiBlitz3.ab2@7140>    BPL.w JL_0_6264
0002B7F8 <AmiBlitz3.ab2@7141>   BTST #$0,D0
0002B7FC <AmiBlitz3.ab2@7142>    BEQ.w JL_0_6240
0002B800 <AmiBlitz3.ab2@7143>   CMP.w #$1,D5
0002B804 <AmiBlitz3.ab2@7144>    BNE.w JL_0_6240
0002B808 <AmiBlitz3.ab2@7145>   CMP.w #$E,D3
0002B80C <AmiBlitz3.ab2@7146>    BEQ.w JL_0_6264
0002B812 <AmiBlitz3.ab2@7147>   MOVE.w temp1,D0
0002B814 <AmiBlitz3.ab2@7148>   ADDQ.w #4,D0
0002B818 <AmiBlitz3.ab2@7149> BRA.w JL_0_6256
0002B81C <AmiBlitz3.ab2@7152>   BTST #$1,D0
0002B820 <AmiBlitz3.ab2@7153>    BEQ.w JL_0_6264
0002B824 <AmiBlitz3.ab2@7154>   CMP.w #$B,D3
0002B828 <AmiBlitz3.ab2@7155>    BNE.w JL_0_6264
0002B82E <AmiBlitz3.ab2@7156>   MOVE.w temp1,D0
0002B830 <AmiBlitz3.ab2@7159>   ADDQ.w #4,D0
0002B836 <AmiBlitz3.ab2@7160>   MOVEA.l #asmpnts,A0
0002B83A <AmiBlitz3.ab2@7161>   MOVEA.l $0(A0,D0.W),A0
0002B83C <AmiBlitz3.ab2@7162>   MOVE.w (A0),D1
0002B846 <AmiBlitz3.ab2@7165>   MOVE.l #ptr_parameterstore,buff1
0002B850 <AmiBlitz3.ab2@7166>   MOVE.l #namebuff2,buff2
0002B854 <AmiBlitz3.ab2@7167>   MOVE.l $A(A0),D0
0002B858 <AmiBlitz3.ab2@7168>    BEQ.w JL_0_62DC
0002B85A <AmiBlitz3.ab2@7169>   MOVEA.l D0,A3
0002B860 <AmiBlitz3.ab2@7170>   MOVE.w asmsize,D6
0002B862 <AmiBlitz3.ab2@7173>    JSR (A3)
0002B866 <AmiBlitz3.ab2@7174>    BPL.w JL_0_629A
0002B86A <AmiBlitz3.ab2@7175>   CMP.w #-$2,D0
0002B86E <AmiBlitz3.ab2@7176>    BEQ.w illsizeerr
0002B872 <AmiBlitz3.ab2@7177> BRA.w illeaerr
0002B876 <AmiBlitz3.ab2@7180>   BEQ.w JL_0_62DC
0002B878 <AmiBlitz3.ab2@7181>   EXG.l D2,D4
0002B87A <AmiBlitz3.ab2@7182>   EXG.l D3,D5
0002B880 <AmiBlitz3.ab2@7183>   MOVE.l extraword,D6
0002B882 <AmiBlitz3.ab2@7184>   SWAP D6
0002B888 <AmiBlitz3.ab2@7185>   MOVE.l D6,extraword
0002B892 <AmiBlitz3.ab2@7186>   MOVE.l #namebuff2,buff1
0002B89C <AmiBlitz3.ab2@7187>   MOVE.l #ptr_parameterstore,buff2
0002B8A2 <AmiBlitz3.ab2@7188>   MOVE.w asmlen,D6
0002B8A8 <AmiBlitz3.ab2@7189>   MOVE.w asmlen2,D7
0002B8AE <AmiBlitz3.ab2@7190>   MOVE.w D6,asmlen2
0002B8B4 <AmiBlitz3.ab2@7191>   MOVE.w D7,asmlen
0002B8BE <AmiBlitz3.ab2@7194>   MOVE.l buff1,asmbuff
0002B8C2 <AmiBlitz3.ab2@7195>   MOVE.w $E(A0),D0
0002B8C6 <AmiBlitz3.ab2@7196>    BEQ.w JL_0_6348
0002B8CA <AmiBlitz3.ab2@7197>    BMI.w JL_0_6348
0002B8CE <AmiBlitz3.ab2@7198>    CMP.w #$7000,d1
0002B8D2 <AmiBlitz3.ab2@7199>    BNE 'skip
0002B8D6 <AmiBlitz3.ab2@7200>    CMP.w #$b,d3
0002B8DA <AmiBlitz3.ab2@7201>    BNE illeaerr
0002B8DE <AmiBlitz3.ab2@7204>    CMP.w #$1,D0
0002B8E2 <AmiBlitz3.ab2@7205>    BNE.w JL_0_630E
0002B8E6 <AmiBlitz3.ab2@7206>    CMP.w #$B,D3
0002B8EA <AmiBlitz3.ab2@7207>    BNE.w JL_0_6348
0002B8EE <AmiBlitz3.ab2@7210>    BSR.w insasm
0002B8F0 <AmiBlitz3.ab2@7211>   MOVE.w D4,D2
0002B8F2 <AmiBlitz3.ab2@7212>   MOVE.w D5,D3
0002B8F6 <AmiBlitz3.ab2@7213> BRA.w JL_0_6364
0002B8FA <AmiBlitz3.ab2@7216>    CMP.w #$2,D0
0002B8FE <AmiBlitz3.ab2@7217>    BNE.w JL_0_6324
0002B902 <AmiBlitz3.ab2@7218>   CMP.w #$8,D3
0002B906 <AmiBlitz3.ab2@7219>    BNE.w illeaerr
0002B908 <AmiBlitz3.ab2@7220>   MOVEQ.l #$09,D3
0002B90C <AmiBlitz3.ab2@7221> BRA.w JL_0_6348
0002B910 <AmiBlitz3.ab2@7224>    CMP.w #$3,D0
0002B914 <AmiBlitz3.ab2@7225>    BEQ.w JL_0_6302
0002B918 <AmiBlitz3.ab2@7226>   CMP.w #$4,D0
0002B91C <AmiBlitz3.ab2@7227>    BEQ.w JL_0_6302
0002B920 <AmiBlitz3.ab2@7228>   CMP.w #$5,D0
0002B924 <AmiBlitz3.ab2@7229>    BNE.w JL_0_6348
0002B928 <AmiBlitz3.ab2@7230>   CMP.w #$8,D5
0002B92C <AmiBlitz3.ab2@7231>    BNE.w illeaerr
0002B92E <AmiBlitz3.ab2@7232>   OR.w D2,D1
0002B930 <AmiBlitz3.ab2@7233>   MOVEQ.l #$09,D5
0002B934 <AmiBlitz3.ab2@7236>   MOVE.w $2(A0),D6
0002B938 <AmiBlitz3.ab2@7237>   MOVE.b $6(A0),D7
0002B93C <AmiBlitz3.ab2@7238>   MOVEM.l D4-D5,-(A7)
0002B942 <AmiBlitz3.ab2@7239>   MOVE.w extraword2,D4
0002B946 <AmiBlitz3.ab2@7240>    BSR.w doea
0002B94A <AmiBlitz3.ab2@7241>   MOVEM.l (A7)+,D2-D3
0002B94C <AmiBlitz3.ab2@7242>   TST.w D3
0002B950 <AmiBlitz3.ab2@7245>     BMI.w JL_0_6392
0002B956 <AmiBlitz3.ab2@7246>   MOVE.w extraword,D4
0002B95A <AmiBlitz3.ab2@7247>   MOVE.w $4(A0),D6
0002B95E <AmiBlitz3.ab2@7248>   MOVE.b $7(A0),D7
0002B968 <AmiBlitz3.ab2@7249>   MOVE.l buff2,asmbuff
0002B972 <AmiBlitz3.ab2@7250>   MOVE.w asmlen2,asmlen
0002B976 <AmiBlitz3.ab2@7251>    BSR.w doea
0002B97A <AmiBlitz3.ab2@7252> BRA.w JL_0_63AA
0002B97E <AmiBlitz3.ab2@7255>   MOVE.w $4(A0),D0
0002B982 <AmiBlitz3.ab2@7256>    BNE.w illeaerr
0002B986 <AmiBlitz3.ab2@7257> BRA.w JL_0_63AA
0002B98A <AmiBlitz3.ab2@7261>   MOVE.w $2(A0),D0
0002B98E <AmiBlitz3.ab2@7262>   OR.w $4(A0),D0
0002B992 <AmiBlitz3.ab2@7263>    BNE.w illeaerr
0002B996 <AmiBlitz3.ab2@7266>   MOVE.w $8(A0),D0
0002B99A <AmiBlitz3.ab2@7267>   ANDI.w #$F000,D0
0002B99E <AmiBlitz3.ab2@7268>   CMP.w #-$1000,D0
0002B9A2 <AmiBlitz3.ab2@7269>    BEQ.w JL_0_63D2
0002B9A4 <AmiBlitz3.ab2@7270>   LSR.w #8,D0
0002B9A6 <AmiBlitz3.ab2@7271>   LSR.w #4,D0
0002B9AA <AmiBlitz3.ab2@7272>   MOVE.w $8(A0),D2
0002B9B0 <AmiBlitz3.ab2@7273>   MOVE.w asmsize,D3
0002B9B2 <AmiBlitz3.ab2@7274>   LSR.w D3,D2
0002B9B6 <AmiBlitz3.ab2@7275>   ANDI.w #$F,D2
0002B9B8 <AmiBlitz3.ab2@7276>   LSL.w D0,D2
0002B9BA <AmiBlitz3.ab2@7277>   OR.w D2,D1
0002B9C0 <AmiBlitz3.ab2@7280>   CMPA.l destbufferend,A4
0002B9C4 <AmiBlitz3.ab2@7281>    BCS.w JL_0_63E8
0002B9CC <AmiBlitz3.ab2@7283>   MOVE.w #$FFFF,dontwrite
0002B9D0 <AmiBlitz3.ab2@7284> BRA.w JL_0_63EA
0002B9D2 <AmiBlitz3.ab2@7287>   MOVE.w D1,(A4)
0002B9D8 <AmiBlitz3.ab2@7290>   MOVE.l A1,destpointer
0002B9DA <AmiBlitz3.ab2@7291> RTS
0002B9E0 <AmiBlitz3.ab2@7295>   MOVE.l destpointer,-(A7)
0002B9E6 <AmiBlitz3.ab2@7296>   MOVE.l A1,destpointer
0002B9EA <AmiBlitz3.ab2@7297>    BSR.w addoff
0002B9F0 <AmiBlitz3.ab2@7298>   MOVEA.l destpointer,A1
0002B9F6 <AmiBlitz3.ab2@7299>   MOVE.l (A7)+,destpointer
0002B9F8 <AmiBlitz3.ab2@7300> RTS
0002B9FC <AmiBlitz3.ab2@7304>   MOVEM.l d2-d6,-(a7)
0002BA02 <AmiBlitz3.ab2@7305>   JSR stripspaces
0002BA06 <AmiBlitz3.ab2@7306>   CMP.b #"d",(a5)+
0002BA0A <AmiBlitz3.ab2@7307>   BNE noreg
0002BA0C <AmiBlitz3.ab2@7308>   MOVE.b (a5)+,d0
0002BA10 <AmiBlitz3.ab2@7309>   CMP.b #$30,d0
0002BA14 <AmiBlitz3.ab2@7310>   BLT noreg
0002BA18 <AmiBlitz3.ab2@7311>   CMP.b #$37,d0
0002BA1C <AmiBlitz3.ab2@7312>   BGT noreg
0002BA20 <AmiBlitz3.ab2@7313>   SUB.b #$30,d0
0002BA22 <AmiBlitz3.ab2@7314>   MOVEQ #0,d3
0002BA24 <AmiBlitz3.ab2@7315>   MOVE.b d0,d3                                             ;reg1
0002BA26 <AmiBlitz3.ab2@7316>   ASL.l #8,d3
0002BA28 <AmiBlitz3.ab2@7317>   ASL.l #8,d3
0002BA2E <AmiBlitz3.ab2@7318>   JSR stripspaces
0002BA32 <AmiBlitz3.ab2@7319>   CMP.b #",",(a5)+
0002BA36 <AmiBlitz3.ab2@7320>   BNE noreg
0002BA3C <AmiBlitz3.ab2@7321>   JSR stripspaces
0002BA40 <AmiBlitz3.ab2@7322>   CMP.b #"d",(a5)+
0002BA44 <AmiBlitz3.ab2@7323>   BNE noreg
0002BA46 <AmiBlitz3.ab2@7324>   MOVE.b (a5)+,d0
0002BA4A <AmiBlitz3.ab2@7325>   CMP.b #$30,d0
0002BA4E <AmiBlitz3.ab2@7326>   BLT noreg
0002BA52 <AmiBlitz3.ab2@7327>   CMP.b #$37,d0
0002BA56 <AmiBlitz3.ab2@7328>   BGT noreg
0002BA5A <AmiBlitz3.ab2@7329>   SUB.b #$30,d0
0002BA5C <AmiBlitz3.ab2@7330>   MOVEQ #0,d4
0002BA5E <AmiBlitz3.ab2@7331>   MOVE.b d0,d4                                             ;reg2
0002BA60 <AmiBlitz3.ab2@7332>   ASL.l #8,d4
0002BA62 <AmiBlitz3.ab2@7333>   ASL.l #4,d4
0002BA64 <AmiBlitz3.ab2@7334>   OR.b d0,d1
0002BA66 <AmiBlitz3.ab2@7335>   OR.l d3,d1
0002BA68 <AmiBlitz3.ab2@7336>   OR.l d4,d1
0002BA6E <AmiBlitz3.ab2@7337>   JSR writelong
0002BA72 <AmiBlitz3.ab2@7338>   MOVEM.l (a7)+,d2-d6
0002BA76 <AmiBlitz3.ab2@7339>   MOVEM.l d1/a1-a3,-(a7)
0002BA7A <AmiBlitz3.ab2@7340> BRA exit
0002BA7E <AmiBlitz3.ab2@7344>   MOVEM.l (a7)+,d2-d6
0002BA84 <AmiBlitz3.ab2@7345>   LEA errtext,a0
0002BA86 <AmiBlitz3.ab2@7346>   MOVE.l a0,-(a7)
0002BA8C <AmiBlitz3.ab2@7347> JMP handle_compileerror
0002BA92 <AmiBlitz3.ab2@7356>   MOVE.w dontwrite,D1
0002BA96 <AmiBlitz3.ab2@7357>    BNE.w asmfixer__done
0002BA9E <AmiBlitz3.ab2@7358>   BTST #$7,make_smallestcode
0002BAA2 <AmiBlitz3.ab2@7359>    BEQ.w asmfixer__go
0002BAA6 <AmiBlitz3.ab2@7360>   MOVE.w pass(PC),D1
0002BAAA <AmiBlitz3.ab2@7361>    BEQ.w asmfixer__done
0002BAB0 <AmiBlitz3.ab2@7364>   MOVEA.l templabel,A2                                     ;insert labels in Code
0002BAB8 <AmiBlitz3.ab2@7365>   MOVE.b #1,curtemplabel
0002BAC0 <AmiBlitz3.ab2@7366>   MOVE.w #$FFFF,constmode
0002BAC6 <AmiBlitz3.ab2@7367>   CLR.w regnum
0002BAD0 <AmiBlitz3.ab2@7368>           MOVE.l #forthstack,forthsp
0002BADA <AmiBlitz3.ab2@7369>           MOVE.l #precstack,precsp
0002BADE <AmiBlitz3.ab2@7370>    BSR.w prepstack
0002BAE0 <AmiBlitz3.ab2@7373>   MOVE.l A2,-(A7)
0002BAE4 <AmiBlitz3.ab2@7374>    BSR.w chkstop
0002BAE6 <AmiBlitz3.ab2@7375>   MOVEA.l (A7)+,A2
0002BAEA <AmiBlitz3.ab2@7376>   CMPA.w #$0,A2
0002BAEE <AmiBlitz3.ab2@7377>    BEQ.w asmfixer__done2
0002BAF4 <AmiBlitz3.ab2@7378>    CLR.b iee
0002BAFA <AmiBlitz3.ab2@7379>   MOVE.l A2,asmbuff
0002BAFE <AmiBlitz3.ab2@7380>   LEA $10(A2),A5
0002BB02 <AmiBlitz3.ab2@7381>   TST.b $F(A2)
0002BB06 <AmiBlitz3.ab2@7382>    BNE.w asmfixer__skipo
0002BB08 <AmiBlitz3.ab2@7383>   MOVEA.l (A5),A5                                          ;pointer to real text
0002BB0E <AmiBlitz3.ab2@7386>    CLR.w asmtype
0002BB12 <AmiBlitz3.ab2@7387>    CMP.b #".",(a5)
0002BB16 <AmiBlitz3.ab2@7388>    BNE.s asmfixer__skipo_l10
0002BB18 <AmiBlitz3.ab2@7389>    MOVE.l a2,-(a7)
0002BB1A <AmiBlitz3.ab2@7390>    ADDQ.l #1,a5
0002BB20 <AmiBlitz3.ab2@7391>    LEA newtypebase,a2
0002BB24 <AmiBlitz3.ab2@7392>    BSR getparameter2
0002BB28 <AmiBlitz3.ab2@7393>    BEQ.w syntaxerr
0002BB2C <AmiBlitz3.ab2@7394>    BSR findtype
0002BB30 <AmiBlitz3.ab2@7395>    BNE.w notypeerr
0002BB34 <AmiBlitz3.ab2@7396>    LEA $4(a2),a2
0002BB38 <AmiBlitz3.ab2@7397>    BSR getparameter2
0002BB3C <AmiBlitz3.ab2@7398>    BEQ.w syntaxerr
0002BB40 <AmiBlitz3.ab2@7399>    BSR.w findvariable2
0002BB44 <AmiBlitz3.ab2@7400>    BNE.w notypeerr
0002BB48 <AmiBlitz3.ab2@7401>    MOVE.w $4(a2),d3
0002BB4A <AmiBlitz3.ab2@7402>    EXT.l d3
0002BB4E <AmiBlitz3.ab2@7403> BRA asmfixer__skipo_l30b
0002BB52 <AmiBlitz3.ab2@7406>   CMP.b #"\",(a5)
0002BB56 <AmiBlitz3.ab2@7407>     BNE asmfixer__skipo_l20
0002BB58 <AmiBlitz3.ab2@7408>     ADDQ.l #1,a5
0002BB5A <AmiBlitz3.ab2@7409>    MOVE.l a2,-(a7)
0002BB5C <AmiBlitz3.ab2@7410>    MOVE.l a5,a4
0002BB62 <AmiBlitz3.ab2@7411>    LEA usedpath,a5
0002BB66 <AmiBlitz3.ab2@7412>    CMP.b #"*",(a5)
0002BB6A <AmiBlitz3.ab2@7413>    BNE asmfixer__skipo_lm1
0002BB6C <AmiBlitz3.ab2@7414>    ADDQ.l #1,a5
0002BB70 <AmiBlitz3.ab2@7417>    BSR.w getparameter2
0002BB74 <AmiBlitz3.ab2@7418>    BEQ.w syntaxerr
0002BB7A <AmiBlitz3.ab2@7419>    LEA varbase,A2
0002BB82 <AmiBlitz3.ab2@7420>    MOVE.b #1,newvariable
0002BB86 <AmiBlitz3.ab2@7421>    BSR.w findvariable
0002BB8C <AmiBlitz3.ab2@7422>    CLR.b newvariable
0002BB92 <AmiBlitz3.ab2@7423>    CMP.l #-1,d0
0002BB96 <AmiBlitz3.ab2@7424>    BEQ.w notypeerr
0002BB98 <AmiBlitz3.ab2@7425>    MOVE.l a4,a5
0002BB9C <AmiBlitz3.ab2@7426>    MOVE.l $a(a2),a2
0002BBA0 <AmiBlitz3.ab2@7427>    LEA $4(a2),a2
0002BBA4 <AmiBlitz3.ab2@7428>    BSR getparameter2
0002BBA8 <AmiBlitz3.ab2@7429>    BEQ.w syntaxerr
0002BBAC <AmiBlitz3.ab2@7430>    BSR.w findvariable2
0002BBB0 <AmiBlitz3.ab2@7431>    BNE.w notypeerr
0002BBB4 <AmiBlitz3.ab2@7432>   MOVE.w $4(A2),D3
0002BBB6 <AmiBlitz3.ab2@7433>   EXT.l D3
0002BBBC <AmiBlitz3.ab2@7436>    CMP.b #"[",-1(a5)
0002BBC0 <AmiBlitz3.ab2@7437>    BNE asmfixer__skipo_l30c
0002BBC2 <AmiBlitz3.ab2@7438>    MOVEQ #0,d0
0002BBC4 <AmiBlitz3.ab2@7439>    MOVE.b (a5)+,d0
0002BBC6 <AmiBlitz3.ab2@7440>    MOVE.l d3,-(a7)
0002BBC8 <AmiBlitz3.ab2@7441>    MOVEQ #0,d3
0002BBCE <AmiBlitz3.ab2@7442>    JSR atoi
0002BBD0 <AmiBlitz3.ab2@7443>    MOVE.l (a7)+,d1
0002BBD4 <AmiBlitz3.ab2@7444>    MOVE.l $a(a2),a2
0002BBD8 <AmiBlitz3.ab2@7445>    MOVE.w 8(a2),d0
0002BBDA <AmiBlitz3.ab2@7446>    MULS d0,d3
0002BBDC <AmiBlitz3.ab2@7447>    ADD.l d1,d3
0002BBDE <AmiBlitz3.ab2@7450>   MOVE.l (a7)+,a2
0002BBE2 <AmiBlitz3.ab2@7451> BRA asmfixer__oko
0002BBE8 <AmiBlitz3.ab2@7454>   CMP.w #$c,$8(a2)
0002BBEC <AmiBlitz3.ab2@7455>      BEQ asmfixer__skipo_lf1
0002BBF2 <AmiBlitz3.ab2@7456>      CMP.w #$d,$8(a2)
0002BBF6 <AmiBlitz3.ab2@7457>      BEQ asmfixer__skipo_lf1
0002BBFC <AmiBlitz3.ab2@7460>   JSR AJL_0_BF6E
0002BC02 <AmiBlitz3.ab2@7463>   MOVEA.l asmbuff,A2
0002BC06 <AmiBlitz3.ab2@7464>    BEQ.w asmfixer__oko
0002BC0A <AmiBlitz3.ab2@7465>   CMP.w #$28,D0
0002BC0E <AmiBlitz3.ab2@7466>    BEQ.w asmfixer__oko
0002BC12 <AmiBlitz3.ab2@7467>   CMP.w #$2C,D0
0002BC16 <AmiBlitz3.ab2@7468>    BEQ.w asmfixer__oko
0002BC1A <AmiBlitz3.ab2@7469> BRA.w syntaxerr
0002BC22 <AmiBlitz3.ab2@7472>   MOVE.b #1,iee
0002BC26 <AmiBlitz3.ab2@7473> BRA asmfixer__skipo_lf2
0002BC2A <AmiBlitz3.ab2@7476>   MOVEA.l $4(A2),A1
0002BC2E <AmiBlitz3.ab2@7478>   MOVE.w $8(A2),D1                                         ;labelmode
0002BC32 <AmiBlitz3.ab2@7479>   CMP.w #$5,D1
0002BC36 <AmiBlitz3.ab2@7480>    BNE.w asmfixer__notdan
0002BC3A <AmiBlitz3.ab2@7483>    BSR.w chkword                                         ;word
0002BC3C <AmiBlitz3.ab2@7486>   MOVE.w D3,(A1)
0002BC40 <AmiBlitz3.ab2@7487> BRA.w asmfixer__next
0002BC44 <AmiBlitz3.ab2@7490>   CMP.w #$6,D1
0002BC48 <AmiBlitz3.ab2@7491>    BNE.w asmfixer__notdanxi
0002BC4C <AmiBlitz3.ab2@7494>    BSR.w chkbyte                                         ;byte
0002BC50 <AmiBlitz3.ab2@7497>   MOVE.b D3,$1(A1)
0002BC54 <AmiBlitz3.ab2@7498> BRA.w asmfixer__next
0002BC58 <AmiBlitz3.ab2@7501>    CMP.w #$11,D1                                           ;byte
0002BC5C <AmiBlitz3.ab2@7502>    BEQ.w asmfixer__isbyte2
0002BC60 <AmiBlitz3.ab2@7503>    CMP.w #$c,d1
0002BC64 <AmiBlitz3.ab2@7504>    BEQ asmfixer__single1
0002BC68 <AmiBlitz3.ab2@7505>    CMP.w #$d,d1
0002BC6C <AmiBlitz3.ab2@7506>    BEQ asmfixer__double1
0002BC70 <AmiBlitz3.ab2@7507>   CMP.w #$7,D1
0002BC74 <AmiBlitz3.ab2@7508>    BEQ.w asmfixer__word                                    ;word
0002BC78 <AmiBlitz3.ab2@7509>   CMP.w #$8,D1
0002BC7C <AmiBlitz3.ab2@7510>    BNE.w asmfixer__notabsl
0002BC82 <AmiBlitz3.ab2@7513>   MOVE.w asmtype,D1                                        ;long
0002BC86 <AmiBlitz3.ab2@7514>    BEQ.w asmfixer__notpcrel
0002BC8A <AmiBlitz3.ab2@7515>      BSR.w asmoff
0002BC8C <AmiBlitz3.ab2@7518>   MOVE.l D3,(A1)
0002BC90 <AmiBlitz3.ab2@7519> BRA.w asmfixer__next
0002BC96 <AmiBlitz3.ab2@7523>   fmove.s fp0,0(a1)
0002BC9A <AmiBlitz3.ab2@7524> BRA.w asmfixer__next
0002BCA0 <AmiBlitz3.ab2@7528>   fmove.d fp0,0(a1)
0002BCA4 <AmiBlitz3.ab2@7529> BRA.w asmfixer__next
0002BCA8 <AmiBlitz3.ab2@7533>   CMP.w #$9,D1
0002BCAC <AmiBlitz3.ab2@7534>    BNE.w asmfixer__notdpc
0002BCAE <AmiBlitz3.ab2@7535>   SUB.l A1,D3                                              ;branchword
0002BCB2 <AmiBlitz3.ab2@7536>    BSR.w chkword
0002BCB4 <AmiBlitz3.ab2@7537>   MOVE.w D3,(A1)
0002BCB8 <AmiBlitz3.ab2@7538> BRA.w asmfixer__next
0002BCBC <AmiBlitz3.ab2@7542>   CMP.w #$A,D1
0002BCC0 <AmiBlitz3.ab2@7543>    BNE.w asmfixer__imm
0002BCC2 <AmiBlitz3.ab2@7544>   SUB.l A1,D3                                              ;branchbyte
0002BCC6 <AmiBlitz3.ab2@7545> BRA.w asmfixer__isbyte
0002BCCA <AmiBlitz3.ab2@7549>   CMP.w #$11,d1
0002BCCE <AmiBlitz3.ab2@7550>   BLE asmfixer__imm_org
0002BCD0 <AmiBlitz3.ab2@7551>   MOVE.l a3,-(a7)
0002BCD6 <AmiBlitz3.ab2@7552>   LEA pluginbase,a3
0002BCDA <AmiBlitz3.ab2@7553>   MOVE.l 8(a2),a0
0002BCDC <AmiBlitz3.ab2@7554>   JSR (a0)                                                 ;hook
0002BCDE <AmiBlitz3.ab2@7555>   MOVE.l (a7)+,a3
0002BCE2 <AmiBlitz3.ab2@7556> BRA asmfixer__next
0002BCE6 <AmiBlitz3.ab2@7559>   MOVE.w $A(A2),D0
0002BCEA <AmiBlitz3.ab2@7560>    BEQ.w asmfixer__noflag
0002BCEE <AmiBlitz3.ab2@7561>   CMP.w #$1,D0
0002BCF2 <AmiBlitz3.ab2@7562>    BEQ.w asmfixer__tocount
0002BCF6 <AmiBlitz3.ab2@7563>   CMP.w #$3,D0
0002BCFA <AmiBlitz3.ab2@7564>    BEQ.w asmfixer__tomoveq
0002BCFE <AmiBlitz3.ab2@7565>   CMP.w #$4,D0
0002BD02 <AmiBlitz3.ab2@7566>    BEQ.w asmfixer__totrap
0002BD06 <AmiBlitz3.ab2@7569>   CMP.w #$B,D1                                             ;long
0002BD0A <AmiBlitz3.ab2@7570>    BEQ.w asmfixer__isabsl
0002BD0E <AmiBlitz3.ab2@7571> BRA asmfixer__word2                                              ;word
0002BD14 <AmiBlitz3.ab2@7574>   CMP.l #$F,D3
0002BD18 <AmiBlitz3.ab2@7575>    BHI.w illtraperr
0002BD1A <AmiBlitz3.ab2@7576>   OR.b D3,-(A1)
0002BD1E <AmiBlitz3.ab2@7577> BRA.w asmfixer__next
0002BD24 <AmiBlitz3.ab2@7580>   CMP.l #$8,D3
0002BD28 <AmiBlitz3.ab2@7581>    BHI.w illimmerr
0002BD2A <AmiBlitz3.ab2@7582>   TST.l D3
0002BD2E <AmiBlitz3.ab2@7583>    BEQ.w illimmerr
0002BD32 <AmiBlitz3.ab2@7584>   ANDI.w #$7,D3
0002BD34 <AmiBlitz3.ab2@7585>   LSL.w #8,D3
0002BD36 <AmiBlitz3.ab2@7586>   LSL.w #1,D3
0002BD38 <AmiBlitz3.ab2@7587>   OR.w D3,-(A1)
0002BD3C <AmiBlitz3.ab2@7588> BRA.w asmfixer__next
0002BD40 <AmiBlitz3.ab2@7591>    BSR.w chkbyte
0002BD42 <AmiBlitz3.ab2@7592>   MOVE.b D3,-(A1)
0002BD44 <AmiBlitz3.ab2@7595>   MOVEA.l (A2),A2
0002BD48 <AmiBlitz3.ab2@7596> BRA.w asmfixer__loop
0002BD4E <AmiBlitz3.ab2@7599>   CLR.w constmode
0002BD54 <AmiBlitz3.ab2@7602>   CLR.b curtemplabel
0002BD56 <AmiBlitz3.ab2@7603> RTS
0002BD58 <AmiBlitz3.ab2@7612>   BTST D3,D6
0002BD5C <AmiBlitz3.ab2@7613>    BEQ.w illeaerr
0002BD60 <AmiBlitz3.ab2@7614>    BSR.w makemode
0002BD64 <AmiBlitz3.ab2@7615>   CMP.w #$7,D3
0002BD68 <AmiBlitz3.ab2@7616>    BCS.w doea__skip
0002BD6A <AmiBlitz3.ab2@7617>   MOVE.w D3,D2
0002BD6C <AmiBlitz3.ab2@7618>   SUBQ.w #7,D2
0002BD70 <AmiBlitz3.ab2@7619>   CMP.w #$5,D2
0002BD74 <AmiBlitz3.ab2@7620>    BCS.w doea__skip0
0002BD76 <AmiBlitz3.ab2@7621>   MOVEQ.l #$04,D2
0002BD78 <AmiBlitz3.ab2@7624>   MOVEQ.l #$07,D3
0002BD7A <AmiBlitz3.ab2@7627>   MOVE.b D7,D0
0002BD7E <AmiBlitz3.ab2@7628>   ANDI.w #$F,D0
0002BD82 <AmiBlitz3.ab2@7629>   CMP.w #$F,D0
0002BD86 <AmiBlitz3.ab2@7630>    BEQ.w doea__skip2
0002BD88 <AmiBlitz3.ab2@7631>   LSL.w D0,D3
0002BD8A <AmiBlitz3.ab2@7632>   OR.w D3,D1
0002BD8C <AmiBlitz3.ab2@7635>   LSR.w #4,D7
0002BD90 <AmiBlitz3.ab2@7636>   ANDI.w #$F,D7
0002BD94 <AmiBlitz3.ab2@7637>   CMP.w #$F,D7
0002BD98 <AmiBlitz3.ab2@7638>    BEQ.w doea__skip3
0002BD9A <AmiBlitz3.ab2@7639>   LSL.w D7,D2
0002BD9C <AmiBlitz3.ab2@7640>   OR.w D2,D1
0002BD9E <AmiBlitz3.ab2@7643> RTS
0002BDA4 <AmiBlitz3.ab2@7647>   CMP.l #$7F,D3
0002BDA8 <AmiBlitz3.ab2@7648>    BGT.w illdiserr
0002BDAE <AmiBlitz3.ab2@7649>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
0002BDB2 <AmiBlitz3.ab2@7650>    BLT.w illdiserr
0002BDB4 <AmiBlitz3.ab2@7651> RTS
0002BDBA <AmiBlitz3.ab2@7655>   CMP.l #$7fff,D3
0002BDBE <AmiBlitz3.ab2@7656>    BGT.w illdiserr
0002BDC4 <AmiBlitz3.ab2@7657>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
0002BDC8 <AmiBlitz3.ab2@7658>    BLT.w illdiserr
0002BDCA <AmiBlitz3.ab2@7659> RTS
0002BDCC <AmiBlitz3.ab2@7664>   MOVE.b (a5)+,d0
0002BDCE <AmiBlitz3.ab2@7665>   CMP.b d1,d0
0002BDD2 <AmiBlitz3.ab2@7666>   BEQ 'll10
0002BDD4 <AmiBlitz3.ab2@7667>   TST.b d0
0002BDD8 <AmiBlitz3.ab2@7668>   BNE 'll20
0002BDDA <AmiBlitz3.ab2@7671>   SUBQ #1,a5
0002BDDC <AmiBlitz3.ab2@7672> RTS
0002BDDE <AmiBlitz3.ab2@7677>   MOVE.b (a5)+,d0
0002BDE2 <AmiBlitz3.ab2@7678>   CMP.b #",",d0
0002BDE6 <AmiBlitz3.ab2@7679>   BEQ 'll10
0002BDEA <AmiBlitz3.ab2@7680>   CMP.b #";",d0
0002BDEE <AmiBlitz3.ab2@7681>   BEQ 'll10
0002BDF2 <AmiBlitz3.ab2@7682>  CMP.b #":",d0
0002BDF6 <AmiBlitz3.ab2@7683>   BEQ 'll10
0002BDF8 <AmiBlitz3.ab2@7686>   TST.b d0
0002BDFC <AmiBlitz3.ab2@7687>   BNE 'll20
0002BDFE <AmiBlitz3.ab2@7690>   SUBQ #1,a5
0002BE00 <AmiBlitz3.ab2@7691> RTS
0002BE02 <AmiBlitz3.ab2@7695>   ADD.l a2,d1
0002BE08 <AmiBlitz3.ab2@7696>   LEA tempspace,a1
0002BE0A <AmiBlitz3.ab2@7697>   MOVE.l d1,a0
0002BE0C <AmiBlitz3.ab2@7700>   MOVE.b (a0)+,(a1)+
0002BE10 <AmiBlitz3.ab2@7701>   BNE.s 'l10
0002BE12 <AmiBlitz3.ab2@7702>   SUBQ.l #1,a0
0002BE14 <AmiBlitz3.ab2@7703>   SUBQ.l #1,a1
0002BE16 <AmiBlitz3.ab2@7706>   MOVE.b (a5)+,(a1)+
0002BE1A <AmiBlitz3.ab2@7707>   BNE.s 'l20
0002BE1C <AmiBlitz3.ab2@7708>   CLR.b (a1)
0002BE22 <AmiBlitz3.ab2@7709>   LEA tempspace,a5
0002BE24 <AmiBlitz3.ab2@7710> RTS
0002BE28 <AmiBlitz3.ab2@7714>   MOVEM.l D1-D2/A0,-(A7)
0002BE2A <AmiBlitz3.ab2@7715>   MOVE.l d0,d2
0002BE2C <AmiBlitz3.ab2@7716>   MOVEQ #0,d1
0002BE2E <AmiBlitz3.ab2@7717>   MOVE.l a5,a4
0002BE30 <AmiBlitz3.ab2@7720>   ADDQ.l #1,d1
0002BE32 <AmiBlitz3.ab2@7721>   MOVE.b (a5)+,d0
0002BE36 <AmiBlitz3.ab2@7722>   CMP.b #",",d0
0002BE3A <AmiBlitz3.ab2@7723>   BEQ 'll10
0002BE3E <AmiBlitz3.ab2@7724>   CMP.b #";",d0
0002BE42 <AmiBlitz3.ab2@7725>   BEQ 'll10
0002BE46 <AmiBlitz3.ab2@7726>   CMP.b #":",d0
0002BE4A <AmiBlitz3.ab2@7727>   BEQ 'll10
0002BE4E <AmiBlitz3.ab2@7728>   CMP.b #"(",d0
0002BE52 <AmiBlitz3.ab2@7729>   BEQ 'll10
0002BE54 <AmiBlitz3.ab2@7730>   TST.b d0
0002BE58 <AmiBlitz3.ab2@7731>   BNE 'll20
0002BE5A <AmiBlitz3.ab2@7734>   SUBQ #1,a5
0002BE5E <AmiBlitz3.ab2@7735>   CMP.b #"'",(a4)
0002BE62 <AmiBlitz3.ab2@7736>   BEQ 'llocal
0002BE68 <AmiBlitz3.ab2@7737>   TST.w inmacro
0002BE6C <AmiBlitz3.ab2@7738>   BNE 'lmacro
0002BE6E <AmiBlitz3.ab2@7739>   MOVEQ.l #$14+4,D0
0002BE70 <AmiBlitz3.ab2@7740>   ADD.l d1,d0
0002BE72 <AmiBlitz3.ab2@7741>   MOVE.l d1,-(a7)
0002BE74 <AmiBlitz3.ab2@7742>   MOVEQ.l #$01,D1
0002BE7A <AmiBlitz3.ab2@7743>   MOVEA.l _execbase,A6
0002BE80 <AmiBlitz3.ab2@7744>   MOVE.l mempool2,a0
0002BE84 <AmiBlitz3.ab2@7745>   JSR _AllocPooled(a6)
0002BE86 <AmiBlitz3.ab2@7747>   MOVE.l (a7)+,d1
0002BE88 <AmiBlitz3.ab2@7748>   TST.l d0
0002BE8C <AmiBlitz3.ab2@7749>   BEQ nomemory
0002BE8E <AmiBlitz3.ab2@7750>   MOVEA.l D0,A0
0002BE96 <AmiBlitz3.ab2@7752>   MOVE.w linenumat+2,$A(A0)
0002BE9C <AmiBlitz3.ab2@7754>   MOVE.l templabel,(A0)
0002BEA2 <AmiBlitz3.ab2@7755>   MOVE.l A0,templabel
0002BEAA <AmiBlitz3.ab2@7756>   MOVE.l destpointer,$4(A0)
0002BEAE <AmiBlitz3.ab2@7757>   MOVE.l d2,$8(A0)
0002BEB2 <AmiBlitz3.ab2@7758>   LEA $E(A0),A0
0002BEB6 <AmiBlitz3.ab2@7759>   MOVE.b #$14,(A0)+
0002BEB8 <AmiBlitz3.ab2@7760>   CLR.b (a0)+
0002BEBA <AmiBlitz3.ab2@7762>   MOVE.l a0,d2
0002BEBC <AmiBlitz3.ab2@7763>   ADDQ.l #4,d2
0002BEBE <AmiBlitz3.ab2@7764>   MOVE.l d2,(a0)+
0002BEC0 <AmiBlitz3.ab2@7767>   MOVE.b (a4)+,(a0)+
0002BEC2 <AmiBlitz3.ab2@7768>   SUBQ.l #1,d1
0002BEC6 <AmiBlitz3.ab2@7769>   BNE 'lc1
0002BEC8 <AmiBlitz3.ab2@7770>   CLR.b (a0)+
0002BECE <AmiBlitz3.ab2@7771>   MOVE.w linenumat,(a0)
0002BED2 <AmiBlitz3.ab2@7772>   MOVEM.l (A7)+,D1-D2/A0
0002BED4 <AmiBlitz3.ab2@7773> RTS
0002BED6 <AmiBlitz3.ab2@7776>   MOVEQ.l #$10+2,D0
0002BED8 <AmiBlitz3.ab2@7777>   ADD.l d1,d0
0002BEDC <AmiBlitz3.ab2@7778>   MOVEM.l a4/d3,-(a7)
0002BEDE <AmiBlitz3.ab2@7779>   MOVE.l d1,d3
0002BEE0 <AmiBlitz3.ab2@7780>   MOVEQ.l #$01,D1
0002BEE6 <AmiBlitz3.ab2@7781>   MOVEA.l _execbase,A6
0002BEEC <AmiBlitz3.ab2@7782>   MOVE.l mempool2,a0
0002BEF0 <AmiBlitz3.ab2@7783>   JSR _AllocPooled(a6)
0002BEF2 <AmiBlitz3.ab2@7785>   TST.l d0
0002BEF6 <AmiBlitz3.ab2@7786>   BEQ nomemory
0002BEF8 <AmiBlitz3.ab2@7787>   MOVEA.l D0,A0
0002BF00 <AmiBlitz3.ab2@7790>   MOVE.w linenumat+2,$C(A0)
0002BF06 <AmiBlitz3.ab2@7791>   MOVE.l templabel,(A0)
0002BF0C <AmiBlitz3.ab2@7792>   MOVE.l A0,templabel
0002BF14 <AmiBlitz3.ab2@7793>   MOVE.l destpointer,$4(A0)
0002BF18 <AmiBlitz3.ab2@7794>   MOVE.l d2,$8(A0)
0002BF1C <AmiBlitz3.ab2@7795>   LEA $E(A0),A0
0002BF1E <AmiBlitz3.ab2@7796>   MOVE.b d3,(A0)+
0002BF24 <AmiBlitz3.ab2@7797>   ADD.b #$10,-1(a0)
0002BF28 <AmiBlitz3.ab2@7798>   MOVE.b #$1,(a0)+
0002BF2A <AmiBlitz3.ab2@7799>   SUBQ.w #1,d3
0002BF2C <AmiBlitz3.ab2@7802>   MOVE.b (a4)+,(a0)+
0002BF2E <AmiBlitz3.ab2@7803>   SUBQ.l #1,d3
0002BF32 <AmiBlitz3.ab2@7804>   BNE.s 'lm2
0002BF34 <AmiBlitz3.ab2@7805>   CLR.b (a0)+
0002BF3A <AmiBlitz3.ab2@7806>   MOVE.w linenumat,(a0)
0002BF3E <AmiBlitz3.ab2@7807>   MOVEM.l (a7)+,d3/a4
0002BF42 <AmiBlitz3.ab2@7808>   MOVEM.l (A7)+,D1-D2/A0
0002BF44 <AmiBlitz3.ab2@7809> RTS
0002BF4A <AmiBlitz3.ab2@7812>   LEA lastgloballabel,a1
0002BF4C <AmiBlitz3.ab2@7815>   ADDQ.l #1,d1
0002BF4E <AmiBlitz3.ab2@7816>   TST.b (a1)+
0002BF52 <AmiBlitz3.ab2@7817>   BNE.s 'll11
0002BF54 <AmiBlitz3.ab2@7818>   MOVEQ.l #$10+2,D0
0002BF56 <AmiBlitz3.ab2@7819>   ADD.l d1,d0
0002BF5A <AmiBlitz3.ab2@7820>   MOVEM.l a4/d3,-(a7)
0002BF5C <AmiBlitz3.ab2@7821>   MOVE.l d1,d3
0002BF5E <AmiBlitz3.ab2@7822>   MOVEQ.l #$01,D1
0002BF64 <AmiBlitz3.ab2@7823>   MOVEA.l _execbase,A6
0002BF6A <AmiBlitz3.ab2@7824>   MOVE.l mempool2,a0
0002BF6E <AmiBlitz3.ab2@7825>   JSR _AllocPooled(a6)
0002BF70 <AmiBlitz3.ab2@7827>   TST.l d0
0002BF74 <AmiBlitz3.ab2@7828>   BEQ nomemory
0002BF76 <AmiBlitz3.ab2@7829>   MOVEA.l D0,A0
0002BF7E <AmiBlitz3.ab2@7832>   MOVE.w linenumat+2,$C(A0)
0002BF84 <AmiBlitz3.ab2@7833>   MOVE.l templabel,(A0)
0002BF8A <AmiBlitz3.ab2@7834>   MOVE.l A0,templabel
0002BF92 <AmiBlitz3.ab2@7835>   MOVE.l destpointer,$4(A0)
0002BF96 <AmiBlitz3.ab2@7836>   MOVE.l d2,$8(A0)
0002BF9A <AmiBlitz3.ab2@7837>   LEA $E(A0),A0
0002BF9C <AmiBlitz3.ab2@7838>   MOVE.b d3,(A0)+
0002BFA2 <AmiBlitz3.ab2@7839>   ADD.b #$10,-1(a0)
0002BFA6 <AmiBlitz3.ab2@7840>   MOVE.b #$1,(a0)+
0002BFA8 <AmiBlitz3.ab2@7841>   SUBQ.w #1,d3
0002BFAE <AmiBlitz3.ab2@7842>   LEA lastgloballabel,a1
0002BFB0 <AmiBlitz3.ab2@7845>   SUBQ.l #1,d3
0002BFB2 <AmiBlitz3.ab2@7846>   MOVE.b (a1)+,(a0)+
0002BFB6 <AmiBlitz3.ab2@7847>   BNE.s 'lm3
0002BFB8 <AmiBlitz3.ab2@7848>   SUBQ.l #1,a0
0002BFBA <AmiBlitz3.ab2@7851>   MOVE.b (a4)+,(a0)+
0002BFBC <AmiBlitz3.ab2@7852>   SUBQ.l #1,d3
0002BFC0 <AmiBlitz3.ab2@7853>   BNE.s 'lm1
0002BFC2 <AmiBlitz3.ab2@7854>   CLR.b (a0)+
0002BFC8 <AmiBlitz3.ab2@7855>   MOVE.w linenumat,(a0)
0002BFCC <AmiBlitz3.ab2@7856>   MOVEM.l (a7)+,d3/a4
0002BFD0 <AmiBlitz3.ab2@7857>   MOVEM.l (A7)+,D1-D2/A0
0002BFD2 <AmiBlitz3.ab2@7858> RTS
0002BFFC <AmiBlitz3.ab2@7862>   !basic
0002C052 <AmiBlitz3.ab2@7863>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
0002C064 <AmiBlitz3.ab2@7864>   loop Delay_ 1
0002C06A <AmiBlitz3.ab2@7865> Goto loop
0002C06E <AmiBlitz3.ab2@7869>   MOVEM.l D0-D2/A0,-(A7)
0002C072 <AmiBlitz3.ab2@7870>   MOVE.w $E(A0),-(A7)
0002C076 <AmiBlitz3.ab2@7871>    BPL.w insasm__ok
0002C078 <AmiBlitz3.ab2@7872>   CLR.w (A7)
0002C07A <AmiBlitz3.ab2@7875>   MOVE.l A1,-(A7)
0002C07C <AmiBlitz3.ab2@7876>   MOVEQ.l #$10+2,D0
0002C082 <AmiBlitz3.ab2@7877>   ADD.w asmlen,D0
0002C084 <AmiBlitz3.ab2@7878>   MOVE.w D0,D2
0002C086 <AmiBlitz3.ab2@7879>   MOVEQ.l #$01,D1
0002C08C <AmiBlitz3.ab2@7880>   MOVEA.l _execbase,A6
0002C092 <AmiBlitz3.ab2@7881>   MOVE.l mempool2,a0
0002C096 <AmiBlitz3.ab2@7882>   JSR _AllocPooled(a6)
0002C098 <AmiBlitz3.ab2@7884>   MOVEA.l D0,A0
0002C0A0 <AmiBlitz3.ab2@7887>   MOVE.w linenumat+2,$C(A0)
0002C0A6 <AmiBlitz3.ab2@7888>   MOVE.l templabel,(A0)
0002C0AC <AmiBlitz3.ab2@7889>   MOVE.l A0,templabel
0002C0B0 <AmiBlitz3.ab2@7890>   MOVE.l (A7),$4(A0)
0002C0B4 <AmiBlitz3.ab2@7891>   MOVE.w d3,$8(A0)
0002C0BA <AmiBlitz3.ab2@7892>   MOVE.w $4(A7),$A(A0)
0002C0BE <AmiBlitz3.ab2@7893>   LEA $E(A0),A0
0002C0C0 <AmiBlitz3.ab2@7894>   MOVE.b D2,(A0)+                                           ;length
0002C0C6 <AmiBlitz3.ab2@7895>   MOVEA.l asmbuff,A1
0002C0C8 <AmiBlitz3.ab2@7896>   ADDQ.w #1,A1
0002C0CA <AmiBlitz3.ab2@7897>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
0002C0CE <AmiBlitz3.ab2@7898>    BNE.w insasm__loop
0002C0D0 <AmiBlitz3.ab2@7899>   MOVE.l (A1)+,(A0)+
0002C0D6 <AmiBlitz3.ab2@7900>   MOVE.w linenumat,(a0)
0002C0DA <AmiBlitz3.ab2@7901> BRA.w insasm__loopdone
0002C0DC <AmiBlitz3.ab2@7904>    MOVE.b (A1)+,(A0)+
0002C0E0 <AmiBlitz3.ab2@7905>    BNE.w insasm__loop
0002C0E6 <AmiBlitz3.ab2@7906>    MOVE.w linenumat,(a0)
0002C0E8 <AmiBlitz3.ab2@7909>   MOVEA.l (A7)+,A1
0002C0EA <AmiBlitz3.ab2@7910>   ADDQ.w #2,A7
0002C0EE <AmiBlitz3.ab2@7911>   MOVEM.l (A7)+,D0-D2/A0
0002C0F0 <AmiBlitz3.ab2@7912> RTS
0002C0F4 <AmiBlitz3.ab2@7916>   CMP.w #$5,D3
0002C0F8 <AmiBlitz3.ab2@7917>    BCS.w makemode__done
0002C0FC <AmiBlitz3.ab2@7918>   CMP.w #$B,D3
0002C100 <AmiBlitz3.ab2@7919>    BHI.w makemode__done2
0002C104 <AmiBlitz3.ab2@7920>    BEQ.w makemode__imm
0002C108 <AmiBlitz3.ab2@7921>    BSR.w insasm
0002C10C <AmiBlitz3.ab2@7922>   CMP.w #$5,D3
0002C110 <AmiBlitz3.ab2@7923>    BEQ.w makemode__word
0002C114 <AmiBlitz3.ab2@7924>   CMP.w #$6,D3
0002C118 <AmiBlitz3.ab2@7925>    BEQ.w makemode__dxi
0002C11C <AmiBlitz3.ab2@7926>   CMP.w #$7,D3
0002C120 <AmiBlitz3.ab2@7927>    BEQ.w makemode__word
0002C124 <AmiBlitz3.ab2@7928>   CMP.w #$8,D3
0002C128 <AmiBlitz3.ab2@7929>    BEQ.w makemode__long
0002C12C <AmiBlitz3.ab2@7930>   CMP.w #$9,D3
0002C130 <AmiBlitz3.ab2@7931>    BEQ.w makemode__word
0002C136 <AmiBlitz3.ab2@7935>   CMPA.l destbufferend,A1
0002C13A <AmiBlitz3.ab2@7936>    BCS.w makemode__ok7
0002C13C <AmiBlitz3.ab2@7937>   ADDQ.w #2,A1
0002C13E <AmiBlitz3.ab2@7938> RTS
0002C140 <AmiBlitz3.ab2@7941>   MOVE.w D4,(A1)+
0002C142 <AmiBlitz3.ab2@7942> RTS
0002C14A <AmiBlitz3.ab2@7945>   CMPI.w #$8,asmsize
0002C14E <AmiBlitz3.ab2@7946>    BCC.w makemode__immlong
0002C150 <AmiBlitz3.ab2@7947>   MOVEQ.l #$10,D3
0002C154 <AmiBlitz3.ab2@7948>    BSR.w insasm
0002C156 <AmiBlitz3.ab2@7949>   MOVEQ.l #$0B,D3
0002C15A <AmiBlitz3.ab2@7950> BRA.w makemode__word
0002C15E <AmiBlitz3.ab2@7953>   BSR.w insasm
0002C160 <AmiBlitz3.ab2@7956>   ADDQ.w #2,A1
0002C162 <AmiBlitz3.ab2@7959>   ADDQ.w #2,A1
0002C164 <AmiBlitz3.ab2@7960> RTS
0002C168 <AmiBlitz3.ab2@7963>   CMP.w #$F,D3
0002C16C <AmiBlitz3.ab2@7964>    BNE.w makemode__done
0002C172 <AmiBlitz3.ab2@7965>   CMPA.l destbufferend,A1
0002C176 <AmiBlitz3.ab2@7966>    BCS.w makemode__ok3
0002C178 <AmiBlitz3.ab2@7967>   ADDQ.w #2,A1
0002C17A <AmiBlitz3.ab2@7968>   ADDQ.w #4,A7
0002C17C <AmiBlitz3.ab2@7969> RTS
0002C17E <AmiBlitz3.ab2@7972>   MOVE.w D2,(A1)+
0002C180 <AmiBlitz3.ab2@7973>   ADDQ.w #4,A7
0002C182 <AmiBlitz3.ab2@7976> RTS
0002C186 <AmiBlitz3.ab2@7980>   BSR.w storeloc
0002C190 <AmiBlitz3.ab2@7981>   MOVE.l linenumat,oldline
0002C192 <AmiBlitz3.ab2@7982>   MOVEQ.l #$00,D1
0002C196 <AmiBlitz3.ab2@7983>    BSR.w get1bytemain
0002C19A <AmiBlitz3.ab2@7984>    BEQ.w JL_0_676E
0002C19C <AmiBlitz3.ab2@7985>   MOVEQ.l #$00,D3
0002C1A0 <AmiBlitz3.ab2@7986> BRA.w JL_0_6726
0002C1A4 <AmiBlitz3.ab2@7989>    BSR.w get1bytemain
0002C1A8 <AmiBlitz3.ab2@7990>    BNE.w JL_0_671C
0002C1AA <AmiBlitz3.ab2@7993>   TST.w D3
0002C1AE <AmiBlitz3.ab2@7994>    BNE.w brackets_                                         ;syntax error brackets
0002C1B2 <AmiBlitz3.ab2@7995> BRA.w JL_0_676C
0002C1B8 <AmiBlitz3.ab2@7998>    MOVE.w instringon,D4
0002C1BC <AmiBlitz3.ab2@8000>      BEQ JL_0_6726
0002C1BE <AmiBlitz3.ab2@8003>     MOVEQ #0,d0
0002C1C0 <AmiBlitz3.ab2@8004>      MOVE.b (a5)+,d0                                       ;fix "ue"
0002C1C6 <AmiBlitz3.ab2@8005>      MOVE.w d0,lastchar
0002C1CA <AmiBlitz3.ab2@8006>      BEQ ready
0002C1CE <AmiBlitz3.ab2@8007>      CMP.b #$22,d0
0002C1D2 <AmiBlitz3.ab2@8008>      BNE 'l1
0002C1D8 <AmiBlitz3.ab2@8009>      NOT.w instringon
0002C1DC <AmiBlitz3.ab2@8010> BRA JL_0_670A
0002C1E0 <AmiBlitz3.ab2@8013>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
0002C1E4 <AmiBlitz3.ab2@8014>            BNE 'l10
0002C1E8 <AmiBlitz3.ab2@8015>            CMP.b #"@",(a5)
0002C1EC <AmiBlitz3.ab2@8016>            BNE 'l10
0002C1F2 <AmiBlitz3.ab2@8019>            TST.w ininclude
0002C1F6 <AmiBlitz3.ab2@8020>            BNE 'inc
0002C1FC <AmiBlitz3.ab2@8021>            MOVE.l sourceline3,a5
0002C202 <AmiBlitz3.ab2@8022>            CMP.l #0,a5
0002C206 <AmiBlitz3.ab2@8023>            BNE 'l11t
0002C20C <AmiBlitz3.ab2@8024>            MOVEA.l sourceline,A5
0002C20E <AmiBlitz3.ab2@8027>            MOVEA.l (A5),A5
0002C214 <AmiBlitz3.ab2@8028>            CMP.l #0,a5
0002C218 <AmiBlitz3.ab2@8029>            BEQ JL_0_676C
0002C21E <AmiBlitz3.ab2@8030>            MOVE.l a5,sourceline3
0002C222 <AmiBlitz3.ab2@8031>            LEA $9(A5),A5
0002C226 <AmiBlitz3.ab2@8032> BRA 'l11
0002C228 <AmiBlitz3.ab2@8035>            ADDQ.l #1,a5
0002C22A <AmiBlitz3.ab2@8036>            TST.b (a5)
0002C22E <AmiBlitz3.ab2@8037>            BNE 'inc
0002C230 <AmiBlitz3.ab2@8041>            ADDQ.l #1,a5
0002C232 <AmiBlitz3.ab2@8042>            TST.b (a5)
0002C236 <AmiBlitz3.ab2@8043>            BEQ illeolerr
0002C238 <AmiBlitz3.ab2@8044>            MOVE.l a5,-(a7)
0002C23C <AmiBlitz3.ab2@8047>       CMP.b #" ",(a5)+
0002C240 <AmiBlitz3.ab2@8048>       BEQ 'l110
0002C246 <AmiBlitz3.ab2@8049>        CMP.b #";",-1(a5)
0002C248 <AmiBlitz3.ab2@8050>        MOVE.l (a7)+,a5
0002C24C <AmiBlitz3.ab2@8051>        BEQ 'l111
0002C250 <AmiBlitz3.ab2@8052> BRA JL_0_670A
0002C254 <AmiBlitz3.ab2@8055>    CMP.w #$29,D0
0002C258 <AmiBlitz3.ab2@8056>    BNE.w JL_0_673A
0002C25A <AmiBlitz3.ab2@8057>   TST.w D3
0002C25E <AmiBlitz3.ab2@8058>    BEQ.w JL_0_676C
0002C260 <AmiBlitz3.ab2@8061>   SUBQ.w #1,D3
0002C264 <AmiBlitz3.ab2@8062> BRA.w JL_0_670A
0002C268 <AmiBlitz3.ab2@8065>    CMP.w #$7D,D0
0002C26C <AmiBlitz3.ab2@8066>    BEQ.w JL_0_6734
0002C270 <AmiBlitz3.ab2@8067>   CMP.w #$28,D0
0002C274 <AmiBlitz3.ab2@8068>    BNE.w JL_0_6750
0002C276 <AmiBlitz3.ab2@8071>    ADDQ.w #1,D3
0002C27A <AmiBlitz3.ab2@8072> BRA.w JL_0_670A
0002C27E <AmiBlitz3.ab2@8075>   CMP.w #$7B,D0
0002C282 <AmiBlitz3.ab2@8076>    BEQ.w JL_0_674A
0002C286 <AmiBlitz3.ab2@8077>   CMP.w #$2C,D0
0002C28A <AmiBlitz3.ab2@8078>    BNE.w JL_0_670A
0002C28C <AmiBlitz3.ab2@8079>   TST.w D3
0002C290 <AmiBlitz3.ab2@8080>    BNE.w JL_0_670A
0002C292 <AmiBlitz3.ab2@8081>   ADDQ.w #1,D1
0002C296 <AmiBlitz3.ab2@8082> BRA.w JL_0_670A
0002C298 <AmiBlitz3.ab2@8085>   ADDQ.w #1,D1
0002C29E <AmiBlitz3.ab2@8088>   CLR.l sourceline3
0002C2A8 <AmiBlitz3.ab2@8089>   MOVE.l oldline,linenumat
0002C2AC <AmiBlitz3.ab2@8090> BRA.w resloc
0002C2B2 <AmiBlitz3.ab2@8094>    CLR.w numreps
0002C2B4 <AmiBlitz3.ab2@8095>   MOVE.w D1,D0
0002C2B8 <AmiBlitz3.ab2@8096>   ANDI.w #$FF00,D0
0002C2BC <AmiBlitz3.ab2@8097>    BEQ.w fetchlibps__noreps
0002C2BE <AmiBlitz3.ab2@8098>   LSR.w #8,D0
0002C2C0 <AmiBlitz3.ab2@8099>   LSR.w #4,D0
0002C2C4 <AmiBlitz3.ab2@8100>    BEQ.w fetchlibps__skip
0002C2C6 <AmiBlitz3.ab2@8101>   SUB.b D0,D1
0002C2D0 <AmiBlitz3.ab2@8102>    MOVE.w regnum,regnumfunc
0002C2D6 <AmiBlitz3.ab2@8103>    MOVE.b funcparloop,-(a7)
0002C2DE <AmiBlitz3.ab2@8104>    MOVE.b #0,funcparloop
0002C2E4 <AmiBlitz3.ab2@8105>    MOVE.l leftsidetype,-(a7)
0002C2EA <AmiBlitz3.ab2@8106>    MOVE.l rightsidetype,-(a7)
0002C2F0 <AmiBlitz3.ab2@8107>    CLR.l leftsidetype
0002C2F6 <AmiBlitz3.ab2@8108>    CLR.l rightsidetype
0002C2FC <AmiBlitz3.ab2@8109>    MOVE.b blitzparloop,-(a7)
0002C304 <AmiBlitz3.ab2@8110>    MOVE.b #1,blitzparloop
0002C308 <AmiBlitz3.ab2@8111>    BSR.w fetchpees2
0002C30E <AmiBlitz3.ab2@8112>    MOVE.b (a7)+,blitzparloop
0002C314 <AmiBlitz3.ab2@8113>    MOVE.l (a7)+,rightsidetype
0002C31A <AmiBlitz3.ab2@8114>    MOVE.l (a7)+,leftsidetype
0002C320 <AmiBlitz3.ab2@8115>    MOVE.b (a7)+,funcparloop
0002C324 <AmiBlitz3.ab2@8116>   CMP.w #$2C,D0
0002C328 <AmiBlitz3.ab2@8117>    BNE.w syntaxerr
0002C32A <AmiBlitz3.ab2@8120>   MOVE.w D1,D2
0002C32C <AmiBlitz3.ab2@8121>   LSR.w #8,D2
0002C330 <AmiBlitz3.ab2@8122>   ANDI.w #$7,D2
0002C332 <AmiBlitz3.ab2@8125>    CMP.b D2,D1
0002C336 <AmiBlitz3.ab2@8126>    BCS.w fetchlibps__repsdone
0002C338 <AmiBlitz3.ab2@8127>   SUB.b D2,D1
0002C33C <AmiBlitz3.ab2@8128>   MOVEM.l D2/A2,-(A7)
0002C33E <AmiBlitz3.ab2@8129>   MOVE.w D2,D0
0002C344 <AmiBlitz3.ab2@8130>   MOVE.b funcparloop,-(a7)
0002C34C <AmiBlitz3.ab2@8131>   MOVE.b #0,funcparloop
0002C352 <AmiBlitz3.ab2@8132>   MOVE.l leftsidetype,-(a7)
0002C358 <AmiBlitz3.ab2@8133>   MOVE.l rightsidetype,-(a7)
0002C35E <AmiBlitz3.ab2@8134>   CLR.l leftsidetype
0002C364 <AmiBlitz3.ab2@8135>   CLR.l rightsidetype
0002C36A <AmiBlitz3.ab2@8136>   MOVE.b blitzparloop,-(a7)
0002C372 <AmiBlitz3.ab2@8137>   MOVE.b #1,blitzparloop
0002C376 <AmiBlitz3.ab2@8138>   BSR.w fetchpees4
0002C37C <AmiBlitz3.ab2@8139>   MOVE.b (a7)+,blitzparloop
0002C382 <AmiBlitz3.ab2@8140>   MOVE.l (a7)+,rightsidetype
0002C388 <AmiBlitz3.ab2@8141>   MOVE.l (a7)+,leftsidetype
0002C38E <AmiBlitz3.ab2@8142>   MOVE.b (a7)+,funcparloop
0002C392 <AmiBlitz3.ab2@8143>   MOVEM.l (A7)+,D2/A2
0002C398 <AmiBlitz3.ab2@8144>   ADDQ.w #1,numreps
0002C39C <AmiBlitz3.ab2@8145> BRA.w fetchlibps__rloop
0002C3A2 <AmiBlitz3.ab2@8148>    MOVE.w numreps,D3
0002C3A6 <AmiBlitz3.ab2@8149>    BEQ.w syntaxerr
0002C3A8 <AmiBlitz3.ab2@8150>   ADDA.w D2,A2
0002C3AC <AmiBlitz3.ab2@8151>   ANDI.w #$FF,D1
0002C3B0 <AmiBlitz3.ab2@8152>    BEQ.w fetchlibps__done
0002C3B4 <AmiBlitz3.ab2@8153>   CMP.w #$2C,D0
0002C3B8 <AmiBlitz3.ab2@8154>    BNE.w syntaxerr
0002C3BA <AmiBlitz3.ab2@8157>    MOVE.w D1,D0
0002C3BE <AmiBlitz3.ab2@8158>    BNE.w fetchpees2b
0002C3C0 <AmiBlitz3.ab2@8161> RTS
0002C3C6 <AmiBlitz3.ab2@8164>   MOVE.b funcparloop,-(a7)
0002C3CC <AmiBlitz3.ab2@8165>   MOVE.l leftsidetype,-(a7)
0002C3D2 <AmiBlitz3.ab2@8166>   MOVE.l rightsidetype,-(a7)
0002C3D8 <AmiBlitz3.ab2@8167>   CLR.l leftsidetype
0002C3DE <AmiBlitz3.ab2@8168>   CLR.l rightsidetype
0002C3E6 <AmiBlitz3.ab2@8169>   MOVE.b #0,funcparloop
0002C3EC <AmiBlitz3.ab2@8170>   MOVE.b blitzparloop,-(a7)
0002C3F4 <AmiBlitz3.ab2@8171>   MOVE.b #1,blitzparloop
0002C3F8 <AmiBlitz3.ab2@8172>   BSR.w fetchpees2
0002C3FE <AmiBlitz3.ab2@8173>   MOVE.b (a7)+,blitzparloop
0002C404 <AmiBlitz3.ab2@8174>   MOVE.l (a7)+,rightsidetype
0002C40A <AmiBlitz3.ab2@8175>   MOVE.l (a7)+,leftsidetype
0002C410 <AmiBlitz3.ab2@8176>   MOVE.b (a7)+,funcparloop
0002C412 <AmiBlitz3.ab2@8177> RTS
0002C416 <AmiBlitz3.ab2@8181> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
0002C418 <AmiBlitz3.ab2@8184> partostack:  Ds.w 1                                        ;pmode org source
0002C41A <AmiBlitz3.ab2@8188>   MOVEQ.l #$01,D2
0002C41E <AmiBlitz3.ab2@8189> BRA.w fetchpees3
0002C420 <AmiBlitz3.ab2@8192>   MOVEQ.l #$00,D2
0002C424 <AmiBlitz3.ab2@8195>   ANDI.w #$F,D0
0002C42A <AmiBlitz3.ab2@8203>   CLR.w parnum
0002C42C <AmiBlitz3.ab2@8204>   MOVE.w D1,-(A7)
0002C430 <AmiBlitz3.ab2@8205>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
0002C436 <AmiBlitz3.ab2@8206>   MOVE.w D2,partostack
0002C438 <AmiBlitz3.ab2@8207>   MOVE.w D0,-(A7)
0002C43C <AmiBlitz3.ab2@8208>   CMP.w #"@@",(a5)                                         ;was l15
0002C440 <AmiBlitz3.ab2@8209>   BNE fetchpees__loop
0002C446 <AmiBlitz3.ab2@8210>   TST.w ininclude                                          ;merge macrolines
0002C44A <AmiBlitz3.ab2@8211>   BNE errorjoin
0002C450 <AmiBlitz3.ab2@8212>        MOVEA.l sourceline,A5
0002C452 <AmiBlitz3.ab2@8215>            MOVEA.l (A5),A5
0002C458 <AmiBlitz3.ab2@8216>            MOVE.l a5,sourceline
0002C45C <AmiBlitz3.ab2@8217>            LEA $9(A5),A5
0002C462 <AmiBlitz3.ab2@8218>            ADDQ.l #1,linenumat
0002C464 <AmiBlitz3.ab2@8222>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
0002C468 <AmiBlitz3.ab2@8223>    BNE.w fetchpees__skip0
0002C46E <AmiBlitz3.ab2@8224>   MOVE.w userp,D2                                          ;user selected type
0002C470 <AmiBlitz3.ab2@8226>    MOVE.l A2,-(A7)
0002C476 <AmiBlitz3.ab2@8227>    ADDQ.w #1,parnum
0002C47C <AmiBlitz3.ab2@8228>    TST.b funccall
0002C480 <AmiBlitz3.ab2@8229>    BEQ fetchpees__skip0_l1
0002C488 <AmiBlitz3.ab2@8230>    CMP.w #6,parnum
0002C48C <AmiBlitz3.ab2@8231>    BLE fetchpees__skip0_l1
0002C490 <AmiBlitz3.ab2@8232>    CMP.w #7,d2
0002C496 <AmiBlitz3.ab2@8238>    TST.b fpu
0002C49A <AmiBlitz3.ab2@8239>    BEQ fetchpees__skip0_old
0002C4A0 <AmiBlitz3.ab2@8240>    TST.w regnumfunc
0002C4A4 <AmiBlitz3.ab2@8241>    BEQ fetchpees__skip0_old
0002C4AA <AmiBlitz3.ab2@8242>    CMP.w #$48e7,-4(a4)
0002C4AE <AmiBlitz3.ab2@8243>    BNE fetchpees__skip0_old
0002C4B0 <AmiBlitz3.ab2@8244>    MOVEQ #0,d1
0002C4B6 <AmiBlitz3.ab2@8245>    MOVE.w regnum,d1
0002C4BC <AmiBlitz3.ab2@8246>    CMP regnumfunc,d1                                       ;fpu reg function save
0002C4C0 <AmiBlitz3.ab2@8247>    BGE fetchpees__skip0_old
0002C4C2 <AmiBlitz3.ab2@8248>    ASL.w #7,d1
0002C4C4 <AmiBlitz3.ab2@8249>    MOVE.l d0,-(a7)
0002C4CA <AmiBlitz3.ab2@8250>    MOVE.w regnumfunc,d0
0002C4D0 <AmiBlitz3.ab2@8251>    CLR.w regmask
0002C4D6 <AmiBlitz3.ab2@8253>    BSET d0,regmask
0002C4D8 <AmiBlitz3.ab2@8254>    SUBQ #1,d0
0002C4DC <AmiBlitz3.ab2@8255>    BNE fetchpees__skip0_loop
0002C4DE <AmiBlitz3.ab2@8256>     MOVEQ #0,d0
0002C4E4 <AmiBlitz3.ab2@8259>       BTST d0,regmask
0002C4E8 <AmiBlitz3.ab2@8260>       BEQ fetchpees__skip0_noa7
0002C4EA <AmiBlitz3.ab2@8261>       MOVEQ #0,d1
0002C4EC <AmiBlitz3.ab2@8262>       MOVE.w d0,d1
0002C4EE <AmiBlitz3.ab2@8263>       SUBQ.w #1,d1
0002C4F0 <AmiBlitz3.ab2@8264>       ASL #7,d1
0002C4F6 <AmiBlitz3.ab2@8265>       OR.l #$f2277400,d1                                   ;fmove.d
0002C4FA <AmiBlitz3.ab2@8267>       BSR writelong
0002C500 <AmiBlitz3.ab2@8269>       ADDQ.l #2,stacktrack
0002C506 <AmiBlitz3.ab2@8270>       MOVE.l stacktrack,d1
0002C50C <AmiBlitz3.ab2@8271>       CMP.l #180,d1
0002C510 <AmiBlitz3.ab2@8272>       BGT conmemerr                                        ;formel too complex
0002C512 <AmiBlitz3.ab2@8273>       MOVE.l a0,-(a7)
0002C518 <AmiBlitz3.ab2@8274>       LEA fpustackbase,a0
0002C520 <AmiBlitz3.ab2@8275>       MOVE.w regmask,0(a0,d1)
0002C522 <AmiBlitz3.ab2@8276>       MOVE.l (a7)+,a0
0002C524 <AmiBlitz3.ab2@8279>       ADDQ.w #1,d0
0002C52A <AmiBlitz3.ab2@8280>       CMP.w regnumfunc,d0
0002C52E <AmiBlitz3.ab2@8281>       BLE fetchpees__skip0_loop2
0002C530 <AmiBlitz3.ab2@8284>       MOVE.l (a7)+,d0
0002C536 <AmiBlitz3.ab2@8287>      MOVE.l currentfunccall,-(a7)
0002C53C <AmiBlitz3.ab2@8288>      MOVE.w parnum,-(a7)
0002C542 <AmiBlitz3.ab2@8289>      TST.l rightsidetype
0002C546 <AmiBlitz3.ab2@8290>      BSR.w JL_0_6836
0002C54C <AmiBlitz3.ab2@8291>      MOVE.w (a7)+,parnum
0002C552 <AmiBlitz3.ab2@8293>    MOVE.l (a7)+,currentfunccall
0002C558 <AmiBlitz3.ab2@8295>    TST.b typecheck                            ;typecheck for function call
0002C55C <AmiBlitz3.ab2@8296>    BEQ 'notypecheck
0002C562 <AmiBlitz3.ab2@8297>    TST.b notypecheck
0002C566 <AmiBlitz3.ab2@8298>    BNE 'notypecheck
0002C56C <AmiBlitz3.ab2@8299>    TST.b blitzparloop
0002C570 <AmiBlitz3.ab2@8300>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0002C57A <AmiBlitz3.ab2@8301>    CMP.l #0,currentfunccall
0002C57E <AmiBlitz3.ab2@8302>    BEQ 'isblitzlibcall
0002C582 <AmiBlitz3.ab2@8303>    MOVEM.l a0/a1,-(a7)
0002C588 <AmiBlitz3.ab2@8304>    MOVE.l currentfunccall,a0
0002C58E <AmiBlitz3.ab2@8305>    MOVE.w parnum,d1
0002C594 <AmiBlitz3.ab2@8306>    TST.b isconstantvalue
0002C598 <AmiBlitz3.ab2@8307>    BEQ 'noconstant
0002C5A2 <AmiBlitz3.ab2@8308>    CMP.l #0,lastconstantvalue
0002C5A6 <AmiBlitz3.ab2@8309>    BEQ 'isnull
0002C5AA <AmiBlitz3.ab2@8311>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
0002C5B0 <AmiBlitz3.ab2@8312>    CMP.l #0,a0
0002C5B4 <AmiBlitz3.ab2@8313>    BEQ 'notype
0002C5BC <AmiBlitz3.ab2@8314>    CMP.l #$100,4(a0)
0002C5C0 <AmiBlitz3.ab2@8315>    BLE 'notype
0002C5C6 <AmiBlitz3.ab2@8316>    MOVE.l lasttoken,d1
0002C5CA <AmiBlitz3.ab2@8317>    CMP.w #$b581,d1                   ; ok, when token for null
0002C5CE <AmiBlitz3.ab2@8318>    BEQ 'isnull
0002C5D4 <AmiBlitz3.ab2@8319>    TST.l typetocast
0002C5D8 <AmiBlitz3.ab2@8320>    BEQ 'nocast
0002C5DE <AmiBlitz3.ab2@8321>    MOVE.l typetocast,a1
0002C5E2 <AmiBlitz3.ab2@8322>    BRA 'typecheck
0002C5E8 <AmiBlitz3.ab2@8324>    MOVE.l rightsidetype,a1
0002C5EE <AmiBlitz3.ab2@8325>    CMP.l #0,a1
0002C5F2 <AmiBlitz3.ab2@8326>    BEQ 'notype
0002C5FA <AmiBlitz3.ab2@8327> 'typecheck   CMP.l #$100,4(a1)
0002C5FC <AmiBlitz3.ab2@8329>    CMP.l a0,a1
0002C600 <AmiBlitz3.ab2@8330>    BEQ 'ok
0002C608 <AmiBlitz3.ab2@8332>    CMP.l #$100,4(a1)                 ; is a type here
0002C60C <AmiBlitz3.ab2@8333>    BLE 'error
0002C610 <AmiBlitz3.ab2@8334>    MOVE.l 4(a1),a1                   ; load the address of type.
0002C614 <AmiBlitz3.ab2@8335>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0002C618 <AmiBlitz3.ab2@8336>    BEQ 'ok
0002C61E <AmiBlitz3.ab2@8337> 'error: JMP   error_convert_types    ; for syntax 4
0002C624 <AmiBlitz3.ab2@8341>    CLR.l typetocast
0002C628 <AmiBlitz3.ab2@8342>    MOVEM.l (a7)+,a0/a1
0002C62E <AmiBlitz3.ab2@8346>    CLR.l lastfunction
0002C634 <AmiBlitz3.ab2@8347>    TST.b fpu
0002C638 <AmiBlitz3.ab2@8348>    BEQ fetchpees__skip0_noprint
0002C63A <AmiBlitz3.ab2@8349>   MOVE.l (a7),a2
0002C63C <AmiBlitz3.ab2@8350>   ADDQ.l #1,a2
0002C640 <AmiBlitz3.ab2@8351>    CMP.b #5,d2
0002C644 <AmiBlitz3.ab2@8352>   BNE fetchpees__skip0_noprint
0002C64A <AmiBlitz3.ab2@8353>   CMP.b #$5d,24(a2)
0002C64E <AmiBlitz3.ab2@8354>   BNE fetchpees__skip0_noprint
0002C654 <AmiBlitz3.ab2@8355>   CMP.b #$81,25(a2)
0002C658 <AmiBlitz3.ab2@8356>   BLT fetchpees__skip0_noprint
0002C65E <AmiBlitz3.ab2@8357>   CMP.b #$86,25(a2)
0002C662 <AmiBlitz3.ab2@8358>   BEQ fetchpees__skip0_ok
0002C668 <AmiBlitz3.ab2@8359>   CMP.b #$87,25(a2)
0002C66C <AmiBlitz3.ab2@8360>   BEQ fetchpees__skip0_ok
0002C672 <AmiBlitz3.ab2@8361>   CMP.b #$88,25(a2)
0002C676 <AmiBlitz3.ab2@8362>   BEQ fetchpees__skip0_ok
0002C67C <AmiBlitz3.ab2@8363>   CMP.b #$83,25(a2)
0002C680 <AmiBlitz3.ab2@8364>   BGT fetchpees__skip0_noprint
0002C686 <AmiBlitz3.ab2@8367>   MOVE.l destpointer,a4
0002C68C <AmiBlitz3.ab2@8368>   CMP.w #$2f00,-2(a4)
0002C690 <AmiBlitz3.ab2@8369>   BNE fetchpees__skip0_noprint
0002C696 <AmiBlitz3.ab2@8370>   SUBQ.l #2,destpointer
0002C69C <AmiBlitz3.ab2@8372>   MOVE.l #$f2277400,d1
0002C6A0 <AmiBlitz3.ab2@8373>   BSR writelong                                            ;fmove.d fp0,-(a7)
0002C6A6 <AmiBlitz3.ab2@8374>   ADDQ #4,a2offset
0002C6AC <AmiBlitz3.ab2@8392>   CLR.b optistring
0002C6AE <AmiBlitz3.ab2@8393>   MOVEA.l (A7)+,A2
0002C6B2 <AmiBlitz3.ab2@8394>    CMP.w #"@",d0
0002C6B6 <AmiBlitz3.ab2@8395>   BNE fetchpees__skip0_l10
0002C6BA <AmiBlitz3.ab2@8396>    CMP.b #"@",(a5)
0002C6BE <AmiBlitz3.ab2@8397>   BNE fetchpees__skip0_l10
0002C6C4 <AmiBlitz3.ab2@8398>   TST.w ininclude
0002C6C8 <AmiBlitz3.ab2@8399>   BNE errorjoin
0002C6CE <AmiBlitz3.ab2@8400>   MOVEA.l sourceline,A5
0002C6D0 <AmiBlitz3.ab2@8401>            MOVEA.l (A5),A5
0002C6D6 <AmiBlitz3.ab2@8402>            MOVE.l a5,sourceline
0002C6DC <AmiBlitz3.ab2@8403>            ADDQ.l #1,linenumat
0002C6E0 <AmiBlitz3.ab2@8404>            LEA $9(A5),A5
0002C6E2 <AmiBlitz3.ab2@8405>            MOVEQ #0,d0
0002C6E6 <AmiBlitz3.ab2@8406>            BSR get1bytemain
0002C6EA <AmiBlitz3.ab2@8409>    CMP.b #32,(a5)+ ;for space after a ,
0002C6EE <AmiBlitz3.ab2@8410>    BEQ fetchpees__skip0_l10:
0002C6F0 <AmiBlitz3.ab2@8411>    SUBQ.l #1,a5
0002C6F4 <AmiBlitz3.ab2@8413>    CMP.w #"@@",(a5)                                        ;if merge
0002C6F8 <AmiBlitz3.ab2@8414>    BNE fetchpees__skip0_l15
0002C6FC <AmiBlitz3.ab2@8415>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
0002C702 <AmiBlitz3.ab2@8416>    JSR mergeline
0002C706 <AmiBlitz3.ab2@8417>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
0002C708 <AmiBlitz3.ab2@8437>       SUBQ.w #1,(A7)
0002C70C <AmiBlitz3.ab2@8438>    BEQ.w fetchpees__done
0002C710 <AmiBlitz3.ab2@8440>     CMP.w #$2C,D0
0002C714 <AmiBlitz3.ab2@8442>    BNE overloadfunc
0002C718 <AmiBlitz3.ab2@8443> BRA.w fetchpees__loop
0002C71A <AmiBlitz3.ab2@8446>   ADDQ.w #2,A7
0002C720 <AmiBlitz3.ab2@8447>   MOVE.w (A7)+,partostack
0002C722 <AmiBlitz3.ab2@8448>   MOVE.w (A7)+,D1
0002C728 <AmiBlitz3.ab2@8449>   CLR.b isconstantvalue
0002C732 <AmiBlitz3.ab2@8450>   MOVE.l currentfunccall,lastfunction
0002C738 <AmiBlitz3.ab2@8451>   CLR.b funccall
0002C73E <AmiBlitz3.ab2@8452>   CLR.l currentfunccall
0002C740 <AmiBlitz3.ab2@8453> RTS
0002C746 <AmiBlitz3.ab2@8457>   CLR.b funccall
0002C74C <AmiBlitz3.ab2@8458>   MOVE.w regnum,d1
0002C752 <AmiBlitz3.ab2@8459>   MOVE.l currentfunccall,a4
0002C756 <AmiBlitz3.ab2@8460>   CMP.b $20(a4),d1                                         ;increase if more pars
0002C75A <AmiBlitz3.ab2@8461>   BLT notparerr
0002C75C <AmiBlitz3.ab2@8464>   MOVE.b (a2)+,d2
0002C764 <AmiBlitz3.ab2@8465>   ADD.w #1,parnum
0002C76A <AmiBlitz3.ab2@8466>   TST.b fpu
0002C76E <AmiBlitz3.ab2@8467>   BEQ 'nofpu
0002C772 <AmiBlitz3.ab2@8468>   CMP.b #5,d2
0002C776 <AmiBlitz3.ab2@8469>   BNE 'nofpu
0002C778 <AmiBlitz3.ab2@8470>   MOVEQ #0,d1
0002C77E <AmiBlitz3.ab2@8471>   MOVE.w regnum,d1
0002C786 <AmiBlitz3.ab2@8472>   CMP.w #6,regnum
0002C78A <AmiBlitz3.ab2@8473>   BLT 'nostack2
0002C78E <AmiBlitz3.ab2@8478>   MOVE.w #$2c3c,d1
0002C792 <AmiBlitz3.ab2@8479>   BSR writeword
0002C798 <AmiBlitz3.ab2@8480>   MOVE.l #$bf800000,d1
0002C79C <AmiBlitz3.ab2@8481>   BSR writelong
0002C7A0 <AmiBlitz3.ab2@8482>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C7A6 <AmiBlitz3.ab2@8483>   ADD.w parnum,d1
0002C7AC <AmiBlitz3.ab2@8484>   JSR Atokejsr
0002C7B2 <AmiBlitz3.ab2@8485>   TST.w dontwrite
0002C7B6 <AmiBlitz3.ab2@8486>   BNE 'l1
0002C7BC <AmiBlitz3.ab2@8487>   MOVE.l data1start,d1
0002C7C2 <AmiBlitz3.ab2@8488>   MOVE.l destpointer,a4
0002C7C6 <AmiBlitz3.ab2@8489>   ADD.l d1,-4(a4)
0002C7CC <AmiBlitz3.ab2@8490>   MOVE.l destpointer,d1
0002C7CE <AmiBlitz3.ab2@8491>   SUBQ.l #4,d1
0002C7D4 <AmiBlitz3.ab2@8492>   SUB.l destbufferstart,d1
0002C7D6 <AmiBlitz3.ab2@8493>   MOVE.l d2,-(a7)
0002C7D8 <AmiBlitz3.ab2@8494>   MOVE.l d1,d2
0002C7DE <AmiBlitz3.ab2@8495>   JSR addhunkoffset
0002C7E0 <AmiBlitz3.ab2@8496>   MOVE.l (a7)+,d2
0002C7E4 <AmiBlitz3.ab2@8497> BRA 'l1
0002C7E6 <AmiBlitz3.ab2@8500>   ASL.l #7,d1
0002C7EC <AmiBlitz3.ab2@8501>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
0002C7F0 <AmiBlitz3.ab2@8502>   BSR writelong
0002C7F2 <AmiBlitz3.ab2@8503>   MOVEQ #-1,d1                                             ;-1
0002C7F6 <AmiBlitz3.ab2@8504>   BSR writeword
0002C7FA <AmiBlitz3.ab2@8505> BRA 'l1
0002C800 <AmiBlitz3.ab2@8508>   MOVE.w regnum,d1
0002C808 <AmiBlitz3.ab2@8509>   CMP.w #6,regnum
0002C80C <AmiBlitz3.ab2@8510>   BLT 'nostack
0002C810 <AmiBlitz3.ab2@8515>   CMP.b #2,d2
0002C814 <AmiBlitz3.ab2@8516>   BGT 'nw
0002C818 <AmiBlitz3.ab2@8517> BRA 'nos
0002C81C <AmiBlitz3.ab2@8526>   CMP.w #7,d2
0002C820 <AmiBlitz3.ab2@8527>   BNE 'nos
0002C826 <AmiBlitz3.ab2@8528>   ADDQ #4,a2offset
0002C82C <AmiBlitz3.ab2@8530>     MOVE.l #$48780000,d1
0002C830 <AmiBlitz3.ab2@8531>     BSR writelong
0002C836 <AmiBlitz3.ab2@8532>     ADDQ.w #4,a2offset
0002C83A <AmiBlitz3.ab2@8533>     MOVE.w #$2f3c,d1
0002C83E <AmiBlitz3.ab2@8534>     BSR writeword
0002C844 <AmiBlitz3.ab2@8535>     MOVE.l #-1,d1
0002C848 <AmiBlitz3.ab2@8536>     BSR writelong
0002C84C <AmiBlitz3.ab2@8537>   BRA 'l1
0002C850 <AmiBlitz3.ab2@8541>   CMP.b #4,d2
0002C854 <AmiBlitz3.ab2@8542>       BNE 'noq
0002C858 <AmiBlitz3.ab2@8543>       MOVE.w #$2c3c,d1
0002C85C <AmiBlitz3.ab2@8544>       BSR writeword
0002C862 <AmiBlitz3.ab2@8545>       MOVE.l #$ffff0000,d1
0002C866 <AmiBlitz3.ab2@8546>       BSR writelong
0002C86A <AmiBlitz3.ab2@8547> BRA 'noq2
0002C86E <AmiBlitz3.ab2@8550>      CMP.b #5,d2
0002C872 <AmiBlitz3.ab2@8551>      BNE 'nof
0002C876 <AmiBlitz3.ab2@8552>       MOVE.w #$2c3c,d1
0002C87A <AmiBlitz3.ab2@8553>       BSR writeword
0002C880 <AmiBlitz3.ab2@8554>       MOVE.l #$800000c1,d1
0002C884 <AmiBlitz3.ab2@8555>       BSR writelong
0002C888 <AmiBlitz3.ab2@8556> BRA 'noq2
0002C88C <AmiBlitz3.ab2@8559>   MOVE.w #$7cff,d1
0002C890 <AmiBlitz3.ab2@8560>   BSR writeword
0002C894 <AmiBlitz3.ab2@8563>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C89A <AmiBlitz3.ab2@8564>   ADD.w parnum,d1
0002C8A0 <AmiBlitz3.ab2@8565>   JSR Atokejsr
0002C8A6 <AmiBlitz3.ab2@8566>    TST.w dontwrite
0002C8AA <AmiBlitz3.ab2@8567>    BNE 'l1
0002C8B0 <AmiBlitz3.ab2@8568>    MOVE.l data1start,d1
0002C8B6 <AmiBlitz3.ab2@8569>    MOVE.l destpointer,a4
0002C8BA <AmiBlitz3.ab2@8570>    ADD.l d1,-4(a4)
0002C8C0 <AmiBlitz3.ab2@8571>    MOVE.l destpointer,d1
0002C8C2 <AmiBlitz3.ab2@8572>    SUBQ.l #4,d1
0002C8C8 <AmiBlitz3.ab2@8573>    SUB.l destbufferstart,d1
0002C8CA <AmiBlitz3.ab2@8574>    MOVE.l d2,-(a7)
0002C8CC <AmiBlitz3.ab2@8575>    MOVE.l d1,d2
0002C8D2 <AmiBlitz3.ab2@8576>    JSR addhunkoffset
0002C8D4 <AmiBlitz3.ab2@8577>    MOVE.l (a7)+,d2
0002C8D8 <AmiBlitz3.ab2@8578> BRA 'l1
0002C8DA <AmiBlitz3.ab2@8581>   ASL.l #8,d1
0002C8DC <AmiBlitz3.ab2@8582>   ASL.l #1,d1
0002C8E2 <AmiBlitz3.ab2@8583>   OR.l #$203c,d1                                           ;-1
0002C8E6 <AmiBlitz3.ab2@8584>   BSR writeword
0002C8EC <AmiBlitz3.ab2@8585>   MOVE.l #-1,d1
0002C8F0 <AmiBlitz3.ab2@8586>   CMP.b #4,d2
0002C8F4 <AmiBlitz3.ab2@8587>   BNE 'nq1
0002C8FA <AmiBlitz3.ab2@8588>   MOVE.l #$ffff0000,d1
0002C8FE <AmiBlitz3.ab2@8591>   CMP.b #5,d2
0002C902 <AmiBlitz3.ab2@8592>   BNE 'nof2
0002C908 <AmiBlitz3.ab2@8593>   TST.b fpu
0002C90C <AmiBlitz3.ab2@8594>   BNE 'nof2
0002C912 <AmiBlitz3.ab2@8595>   MOVE.l #$800000c1,d1
0002C916 <AmiBlitz3.ab2@8598>    BSR writelong
0002C91A <AmiBlitz3.ab2@8599>    CMP.b #7,d2
0002C91E <AmiBlitz3.ab2@8600>    BNE 'l1
0002C924 <AmiBlitz3.ab2@8602>      MOVE.l #$48780000,d1
0002C928 <AmiBlitz3.ab2@8603>      BSR writelong
0002C92E <AmiBlitz3.ab2@8605>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
0002C934 <AmiBlitz3.ab2@8606>    MOVE.l #$594f,d1                                        ; subq #4,a7
0002C938 <AmiBlitz3.ab2@8607>    BSR writeword
0002C93A <AmiBlitz3.ab2@8610>    SUBQ.w #1,(A7)
0002C93E <AmiBlitz3.ab2@8611>    BEQ.w fetchpees__done
0002C944 <AmiBlitz3.ab2@8612>    ADDQ.w #1,regnum
0002C948 <AmiBlitz3.ab2@8613> BRA 'ol2
0002C94A <AmiBlitz3.ab2@8616>    MOVE.w D2,D1
0002C94E <AmiBlitz3.ab2@8617>    ANDI.w #$40,D1
0002C954 <AmiBlitz3.ab2@8618>    MOVE.b D1,partostack
0002C956 <AmiBlitz3.ab2@8619>    TST.b D2
0002C95A <AmiBlitz3.ab2@8620>     BMI.w handlevara
0002C95E <AmiBlitz3.ab2@8621>    BTST #$5,D2
0002C962 <AmiBlitz3.ab2@8622>     BNE.w handlearr
0002C968 <AmiBlitz3.ab2@8623>     MOVE.w regnumstore,-(a7)
0002C96E <AmiBlitz3.ab2@8624>     MOVE.w tempregnum,-(a7)
0002C974 <AmiBlitz3.ab2@8625>     MOVE.w parnum,-(a7)
0002C978 <AmiBlitz3.ab2@8626>     BSR.w getap                                        ;recursive entry
0002C97E <AmiBlitz3.ab2@8627>     MOVE.w (a7)+,parnum
0002C984 <AmiBlitz3.ab2@8628>     MOVE.w (a7)+,tempregnum
0002C98A <AmiBlitz3.ab2@8629>     MOVE.w (a7)+,regnumstore
0002C98E <AmiBlitz3.ab2@8632>     MOVE.w partostack(PC),D1
0002C992 <AmiBlitz3.ab2@8633>     BEQ.w JL_0_6886
0002C998 <AmiBlitz3.ab2@8636>    ADDQ.w #4,a2offset
0002C99E <AmiBlitz3.ab2@8639>    MOVE.w pushdn,D1
0002C9A4 <AmiBlitz3.ab2@8640>    OR.w regnum,D1
0002C9A8 <AmiBlitz3.ab2@8641>    CMP.w #$3,D2
0002C9AC <AmiBlitz3.ab2@8642>     BCC.w JL_0_6880
0002C9B2 <AmiBlitz3.ab2@8643>    SUBQ.w #2,a2offset
0002C9B6 <AmiBlitz3.ab2@8644>    ORI.w #$1000,D1
0002C9BA <AmiBlitz3.ab2@8645>    BSR.w writeword
0002C9BC <AmiBlitz3.ab2@8646> RTS
0002C9C0 <AmiBlitz3.ab2@8649>   CMP.b #7,d2
0002C9C4 <AmiBlitz3.ab2@8650>    BNE 'l10
0002C9CC <AmiBlitz3.ab2@8651>    CMP.b #2,optistring
0002C9D2 <AmiBlitz3.ab2@8655>   TST.b iee
0002C9D6 <AmiBlitz3.ab2@8656>   BEQ 'old
0002C9DA <AmiBlitz3.ab2@8657>   CMP.b #5,d2
0002C9DE <AmiBlitz3.ab2@8658>   BNE 'old
0002C9E2 <AmiBlitz3.ab2@8661>   BSR.w writeword                                          ;write val to stack
0002C9E4 <AmiBlitz3.ab2@8662> RTS
0002C9EA <AmiBlitz3.ab2@8665>   SUBQ.w #4,a2offset
0002C9EC <AmiBlitz3.ab2@8666> RTS
0002C9F2 <AmiBlitz3.ab2@8669>   ADDQ.w #1,regnum
0002C9F4 <AmiBlitz3.ab2@8670> RTS
0002C9F6 <AmiBlitz3.ab2@8674>   MOVEQ.l #$03,D2
0002C9FA <AmiBlitz3.ab2@8675> BRA.w JL_0_6854
0002C9FE <AmiBlitz3.ab2@8679>   ANDI.w #$7,D2
0002CA00 <AmiBlitz3.ab2@8680>   MOVE.w D2,-(A7)
0002CA04 <AmiBlitz3.ab2@8681>    BSR.w JL_0_A916
0002CA08 <AmiBlitz3.ab2@8682>   CMP.b #$7,D2                                             ;ignore pnt to $
0002CA0C <AmiBlitz3.ab2@8683>    BEQ.w JL_0_68C0
0002CA10 <AmiBlitz3.ab2@8684>   BTST #$E,D2
0002CA14 <AmiBlitz3.ab2@8685>    BEQ.w JL_0_68B6
0002CA18 <AmiBlitz3.ab2@8686>   MOVE.b #$3,D2                                            ;pointer to long
0002CA1C <AmiBlitz3.ab2@8687> BRA.w JL_0_68C0
0002CA1E <AmiBlitz3.ab2@8690>    TST.b D2
0002CA22 <AmiBlitz3.ab2@8691>    BNE.w JL_0_68C0
0002CA26 <AmiBlitz3.ab2@8692>   MOVE.b #$3,D2
0002CA28 <AmiBlitz3.ab2@8695>   MOVE.w (A7)+,D3
0002CA2A <AmiBlitz3.ab2@8696>   TST.b D3
0002CA2E <AmiBlitz3.ab2@8697>    BEQ.w JL_0_68D2
0002CA30 <AmiBlitz3.ab2@8698>   CMP.b D2,D3
0002CA34 <AmiBlitz3.ab2@8699>    BEQ.w putalp
0002CA38 <AmiBlitz3.ab2@8700> BRA.w mismatcherr
0002CA3E <AmiBlitz3.ab2@8703>   ADDQ.w #2,a2offset
0002CA42 <AmiBlitz3.ab2@8704>   MOVE.w ptype(PC),D1
0002CA46 <AmiBlitz3.ab2@8705>    BSR.w writeword
0002CA48 <AmiBlitz3.ab2@8706>   MOVEQ.l #$00,D1
0002CA4A <AmiBlitz3.ab2@8707>   MOVE.b D2,D1
0002CA4E <AmiBlitz3.ab2@8708>    BSR.w writeword
0002CA52 <AmiBlitz3.ab2@8709> BRA.w putalp
0002CA54 <AmiBlitz3.ab2@8712>    MOVE.w D2,-(A7)
0002CA58 <AmiBlitz3.ab2@8713>    BSR.w JL_0_694E
0002CA5E <AmiBlitz3.ab2@8714>   BTST #$4,$1(A7)
0002CA62 <AmiBlitz3.ab2@8715>    BEQ.w JL_0_6900
0002CA66 <AmiBlitz3.ab2@8716>    BSR.w JL_0_699A
0002CA6C <AmiBlitz3.ab2@8719>    BTST #$3,$1(A7)
0002CA70 <AmiBlitz3.ab2@8720>    BEQ.w JL_0_690E
0002CA74 <AmiBlitz3.ab2@8721>    BSR.w sendtype
0002CA76 <AmiBlitz3.ab2@8724>    MOVE.w (A7)+,D2
0002CA7A <AmiBlitz3.ab2@8725> BRA.w get1bytemain
0002CA80 <AmiBlitz3.ab2@8728>   MOVE.w regnum,D1
0002CA82 <AmiBlitz3.ab2@8729>   LSL.w #8,D1
0002CA84 <AmiBlitz3.ab2@8730>   LSL.w #1,D1
0002CA88 <AmiBlitz3.ab2@8731>   ORI.w #$7000,D1
0002CA8E <AmiBlitz3.ab2@8732>   BTST #$0,$7(A3)
0002CA92 <AmiBlitz3.ab2@8733>    BNE.w JL_0_6946                                         ;A Pointer
0002CA9A <AmiBlitz3.ab2@8734>   CMPI.l #$100,$4(A2)
0002CA9E <AmiBlitz3.ab2@8735>    BCC.w arrerr1                                           ;illegal type to send
0002CAA2 <AmiBlitz3.ab2@8736>   MOVE.b $7(A2),D1
0002CAA6 <AmiBlitz3.ab2@8739>   BSR.w writeword                                          ;moveq #type,d regat
0002CAA8 <AmiBlitz3.ab2@8740>   MOVEQ.l #$02,D2                                          ;just a word.
0002CAAC <AmiBlitz3.ab2@8741> BRA.w JL_0_685C
0002CAB0 <AmiBlitz3.ab2@8744>   MOVE.b #$3,D1
0002CAB4 <AmiBlitz3.ab2@8745> BRA.w JL_0_693C
0002CAB8 <AmiBlitz3.ab2@8749>    BSR.w get1bytemain                                      ;write array paramter code
0002CABC <AmiBlitz3.ab2@8750>    BSR.w getparameter
0002CAC4 <AmiBlitz3.ab2@8751>   BTST #$1,flagmask+1
0002CAC8 <AmiBlitz3.ab2@8752>    BEQ.w syntaxerr
0002CACC <AmiBlitz3.ab2@8753>    BSR.w JL_0_8E3C
0002CAD0 <AmiBlitz3.ab2@8754>    BSR.w get1bytemain
0002CAD4 <AmiBlitz3.ab2@8755>   CMP.w #$29,D0                                            ;we just want a() or whatever
0002CAD8 <AmiBlitz3.ab2@8756>    BNE.w syntaxerr
0002CADE <AmiBlitz3.ab2@8757>   MOVE.w notshared,D1
0002CAE2 <AmiBlitz3.ab2@8758>    BNE.w noarrayerr
0002CAE8 <AmiBlitz3.ab2@8759>   MOVE.w regnum,D1
0002CAEA <AmiBlitz3.ab2@8760>   LSL.w #8,D1
0002CAEC <AmiBlitz3.ab2@8761>   LSL.w #1,D1
0002CAF0 <AmiBlitz3.ab2@8762>   OR.w fbase(PC),D1
0002CAF6 <AmiBlitz3.ab2@8763>    TST.b varmode
0002CAFA <AmiBlitz3.ab2@8764>    BEQ 'l1
0002CAFE <AmiBlitz3.ab2@8765>    BCLR #0,d1
0002CB02 <AmiBlitz3.ab2@8768>    BSR.w writeword
0002CB06 <AmiBlitz3.ab2@8769>   MOVE.w $4(A3),D1
0002CB0A <AmiBlitz3.ab2@8770>    BSR.w writeword
0002CB0E <AmiBlitz3.ab2@8771> BRA.w putalp
0002CB14 <AmiBlitz3.ab2@8775>   MOVE.w regnum,D1
0002CB16 <AmiBlitz3.ab2@8776>   LSL.w #8,D1
0002CB18 <AmiBlitz3.ab2@8777>   LSL.w #1,D1
0002CB1C <AmiBlitz3.ab2@8778>   OR.w fbase(PC),D1
0002CB22 <AmiBlitz3.ab2@8779>    TST.b varmode
0002CB26 <AmiBlitz3.ab2@8780>    BEQ 'l1
0002CB2A <AmiBlitz3.ab2@8781>    BCLR #0,d1
0002CB2E <AmiBlitz3.ab2@8784>    BSR.w writeword
0002CB32 <AmiBlitz3.ab2@8785>   MOVE.w $8(A3),D1
0002CB34 <AmiBlitz3.ab2@8786>   LSL.w #2,D1
0002CB3A <AmiBlitz3.ab2@8787>   MOVE.w varmode,D2
0002CB3E <AmiBlitz3.ab2@8788>    BEQ.w JL_0_69BE
0002CB40 <AmiBlitz3.ab2@8789>   NEG.w D1
0002CB44 <AmiBlitz3.ab2@8792>    ADD.w $4(A3),D1
0002CB48 <AmiBlitz3.ab2@8793>    BSR.w writeword
0002CB4E <AmiBlitz3.ab2@8794>   MOVE.w regnum,D1
0002CB50 <AmiBlitz3.ab2@8795>   LSL.w #8,D1
0002CB52 <AmiBlitz3.ab2@8796>   LSL.w #1,D1
0002CB56 <AmiBlitz3.ab2@8797>   MOVE.w partostack(PC),D2
0002CB5A <AmiBlitz3.ab2@8798>    BNE.w JL_0_69F4
0002CB62 <AmiBlitz3.ab2@8799>   CMPI.w #$7,regnum
0002CB66 <AmiBlitz3.ab2@8800>    BCC.w JL_0_69F4
0002CB6A <AmiBlitz3.ab2@8801>   OR.w pushlast(PC),D1
0002CB70 <AmiBlitz3.ab2@8802>   MOVE.w regnum,D2
0002CB72 <AmiBlitz3.ab2@8803>   SUBQ.w #1,D2
0002CB74 <AmiBlitz3.ab2@8804>   OR.w D2,D1
0002CB78 <AmiBlitz3.ab2@8805> BRA.w JL_0_69F8
0002CB7C <AmiBlitz3.ab2@8808>   OR.w pushadd(PC),D1
0002CB80 <AmiBlitz3.ab2@8811>   BSR.w writeword
0002CB88 <AmiBlitz3.ab2@8812>   MOVE.b #$1,partostack
0002CB8C <AmiBlitz3.ab2@8813> BRA.w putalp
0002CB90 <AmiBlitz3.ab2@8817> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
0002CB92 <AmiBlitz3.ab2@8818> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
0002CB94 <AmiBlitz3.ab2@8819> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
0002CB98 <AmiBlitz3.ab2@8824>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
0002CB9C <AmiBlitz3.ab2@8825>    BEQ.w evalu2
0002CBA0 <AmiBlitz3.ab2@8826> BRA.w eval
0002CBA6 <AmiBlitz3.ab2@8830>   MOVEA.l libpointer,A1
0002CBAA <AmiBlitz3.ab2@8833>    CMPA.w #$0,A1
0002CBAE <AmiBlitz3.ab2@8834>    BEQ.w resetlibs__done
0002CBB4 <AmiBlitz3.ab2@8835>   MOVE.w #-1,$A(A1)
0002CBBA <AmiBlitz3.ab2@8836>   BCLR #$7,$C(A1)
0002CBBC <AmiBlitz3.ab2@8837>   MOVEA.l (A1),A1
0002CBC0 <AmiBlitz3.ab2@8838> BRA.w resetlibs__loop
0002CBC2 <AmiBlitz3.ab2@8841> RTS
0002CBC6 <AmiBlitz3.ab2@8845>   MOVE.w #$FFFE,D1
0002CBCA <AmiBlitz3.ab2@8848>    BSR.w JL_0_6F38
0002CBD0 <AmiBlitz3.ab2@8851>   TST.w cfetchmode
0002CBD4 <AmiBlitz3.ab2@8852>    BEQ.w uselib3__noconst
0002CBDA <AmiBlitz3.ab2@8853>   BTST #$6,$C(A1)
0002CBDE <AmiBlitz3.ab2@8854>    BNE.w uselib3__constok
0002CBE2 <AmiBlitz3.ab2@8855> BRA.w badconerr                                            ;Can't use this Library!
0002CBE4 <AmiBlitz3.ab2@8858> RTS
0002CBEA <AmiBlitz3.ab2@8861>    BSET #$7,$C(A1)
0002CBEE <AmiBlitz3.ab2@8862>    BNE.w JL_0_6C74                                         ;already done....
0002CBF4 <AmiBlitz3.ab2@8863>    CMPI.w #-1,$A(A1)
0002CBF8 <AmiBlitz3.ab2@8864>    BNE.w JL_0_6C74                                         ;something already here
0002CBFE <AmiBlitz3.ab2@8868>    TST.w dirmode
0002CC02 <AmiBlitz3.ab2@8869>    BEQ.b JL_0_6A86
0002CC08 <AmiBlitz3.ab2@8870>    TST.b exdebug
0002CC0C <AmiBlitz3.ab2@8871>    BEQ 'l1
0002CC10 <AmiBlitz3.ab2@8872> BRA.b JL_0_6A86
0002CC16 <AmiBlitz3.ab2@8875>   BCLR #$7,$C(A1)
0002CC1A <AmiBlitz3.ab2@8876> BRA.w dirliberr
0002CC20 <AmiBlitz3.ab2@8879>   MOVE.b debugmode,-(a7)
0002CC24 <AmiBlitz3.ab2@8880>   MOVEM.l D1/A0/A2,-(A7)
0002CC2C <AmiBlitz3.ab2@8886>   BTST #$7,use_debugger
0002CC30 <AmiBlitz3.ab2@8887>   BNE 'debugon
0002CC32 <AmiBlitz3.ab2@8888>   CLR.w D1
0002CC36 <AmiBlitz3.ab2@8889> BRA.b 'debugoff
0002CC38 <AmiBlitz3.ab2@8892>   SNE D1
0002CC3E <AmiBlitz3.ab2@8895>   MOVE.b d1,debugmode
0002CC40 <AmiBlitz3.ab2@8899>   MOVEA.l A1,A0
0002CC44 <AmiBlitz3.ab2@8900>   ADDA.l $12(A1),A0
0002CC48 <AmiBlitz3.ab2@8901>   TST.w -$2(A0)
0002CC4C <AmiBlitz3.ab2@8902>    BEQ.w JL_0_6AD2
0002CC50 <AmiBlitz3.ab2@8903>   MOVEM.l A0-A1,-(A7)
0002CC54 <AmiBlitz3.ab2@8904>   MOVE.w #$FB4F,D1
0002CC58 <AmiBlitz3.ab2@8905>    BSR.w uselib
0002CC5C <AmiBlitz3.ab2@8906>   MOVEM.l (A7)+,A0-A1
0002CC62 <AmiBlitz3.ab2@8907>   ADDQ.w #1,globalvarpointer
0002CC6A <AmiBlitz3.ab2@8908>   BCLR #$0,globalvarpointer+1
0002CC72 <AmiBlitz3.ab2@8909>   MOVE.w globalvarpointer,-$6(A0)
0002CC78 <AmiBlitz3.ab2@8910>   ADDQ.w #4,globalvarpointer
0002CC7C <AmiBlitz3.ab2@8911>   TST.l -$E(A0)
0002CC80 <AmiBlitz3.ab2@8912>    BEQ.w JL_0_6AD2
0002CC86 <AmiBlitz3.ab2@8913>   ADDQ.w #4,globalvarpointer
0002CC8E <AmiBlitz3.ab2@8916>   MOVE.l libend,$28(A1)
0002CC90 <AmiBlitz3.ab2@8917>   MOVEA.l A1,A0
0002CC94 <AmiBlitz3.ab2@8918>   ADDA.l $12(A1),A0
0002CC96 <AmiBlitz3.ab2@8919>   MOVE.l A1,D1
0002CC9A <AmiBlitz3.ab2@8920>   ADD.l $6(A1),D1
0002CC9E <AmiBlitz3.ab2@8921>   TST.l $2C(A1)
0002CCA2 <AmiBlitz3.ab2@8922>    BEQ.w JL_0_6AFE
0002CCA8 <AmiBlitz3.ab2@8924>   TST.b debugmode
0002CCAC <AmiBlitz3.ab2@8925>    BNE.w JL_0_6AFE
0002CCAE <AmiBlitz3.ab2@8926>   MOVE.l A1,D1
0002CCB2 <AmiBlitz3.ab2@8927>   ADD.l $2C(A1),D1
0002CCB8 <AmiBlitz3.ab2@8930>   MOVEA.l libend,A2
0002CCBE <AmiBlitz3.ab2@8933>   CMPA.l data1start,A2
0002CCC2 <AmiBlitz3.ab2@8934>    BCS.w JL_0_6B24
0002CCCA <AmiBlitz3.ab2@8935>   MOVE.w #$FFFF,dontwrite
0002CCCC <AmiBlitz3.ab2@8938>   ADDQ.w #2,A0
0002CCCE <AmiBlitz3.ab2@8939>   ADDQ.w #2,A2
0002CCD0 <AmiBlitz3.ab2@8940>   CMPA.l D1,A0
0002CCD4 <AmiBlitz3.ab2@8941>    BCS.w JL_0_6B16
0002CCD8 <AmiBlitz3.ab2@8942> BRA.w JL_0_6B2C
0002CCDA <AmiBlitz3.ab2@8945>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
0002CCDC <AmiBlitz3.ab2@8946>   CMPA.l D1,A0
0002CCE0 <AmiBlitz3.ab2@8947>    BCS.w JL_0_6B04
0002CCE6 <AmiBlitz3.ab2@8950>   MOVE.l A2,libend
0002CCEA <AmiBlitz3.ab2@8951>   MOVE.l $20(A1),D1
0002CCEE <AmiBlitz3.ab2@8952>    BEQ.w JL_0_6BB8
0002CCF2 <AmiBlitz3.ab2@8953>   MOVEM.l D0/D2-D3,-(A7)
0002CCF6 <AmiBlitz3.ab2@8954>   MOVEA.l $24(A1),A0
0002CCF8 <AmiBlitz3.ab2@8955>   MOVEQ.l #$00,D3
0002CCFA <AmiBlitz3.ab2@8958>   MOVE.l (A0)+,D2
0002CCFE <AmiBlitz3.ab2@8959>   TST.l $2C(A1)
0002CD02 <AmiBlitz3.ab2@8960>    BEQ.w JL_0_6B60
0002CD08 <AmiBlitz3.ab2@8961>   TST.b debugmode
0002CD0C <AmiBlitz3.ab2@8962>    BNE.w JL_0_6B60
0002CD10 <AmiBlitz3.ab2@8963>   CMP.l $2C(A1),D2
0002CD14 <AmiBlitz3.ab2@8964>    BCC.w JL_0_6BA0
0002CD18 <AmiBlitz3.ab2@8967>   TST.w $0(A1,D2.L)
0002CD1C <AmiBlitz3.ab2@8968>    BPL.w JL_0_6B72
0002CD1E <AmiBlitz3.ab2@8969>   TST.l D3
0002CD22 <AmiBlitz3.ab2@8970>    BNE.w JL_0_6B72
0002CD24 <AmiBlitz3.ab2@8971>   MOVE.l A0,D0
0002CD26 <AmiBlitz3.ab2@8972>   MOVE.l D1,D3
0002CD2A <AmiBlitz3.ab2@8975>   SUB.l $12(A1),D2
0002CD2E <AmiBlitz3.ab2@8976>    BMI.w JL_0_6BA0
0002CD32 <AmiBlitz3.ab2@8977>   ADD.l $28(A1),D2
0002CD34 <AmiBlitz3.ab2@8978>   MOVE.l D2,-(A7)
0002CD3A <AmiBlitz3.ab2@8979>   SUB.l destbufferstart,D2
0002CD3E <AmiBlitz3.ab2@8980>    BSR.w addhunkoffset
0002CD40 <AmiBlitz3.ab2@8981>   MOVEA.l (A7)+,A2
0002CD46 <AmiBlitz3.ab2@8982>   TST.w dontwrite
0002CD4A <AmiBlitz3.ab2@8983>    BNE.w JL_0_6BA0
0002CD4E <AmiBlitz3.ab2@8984>   MOVE.l $28(A1),D2
0002CD52 <AmiBlitz3.ab2@8985>   SUB.l $12(A1),D2
0002CD54 <AmiBlitz3.ab2@8986>   ADD.l D2,(A2)
0002CD56 <AmiBlitz3.ab2@8989>    SUBQ.l #1,D1
0002CD5A <AmiBlitz3.ab2@8990>    BNE.w JL_0_6B44
0002CD5C <AmiBlitz3.ab2@8991>   MOVE.l D3,D2
0002CD60 <AmiBlitz3.ab2@8992>    BEQ.w JL_0_6BB4
0002CD62 <AmiBlitz3.ab2@8993>   MOVEA.l D0,A2
0002CD64 <AmiBlitz3.ab2@8994>   SUBQ.w #4,A2
0002CD68 <AmiBlitz3.ab2@8995>    BSR.w JL_0_6E34
0002CD6C <AmiBlitz3.ab2@8998>    MOVEM.l (A7)+,D0/D2-D3
0002CD70 <AmiBlitz3.ab2@9001>    MOVEM.l (A7)+,D1/A0/A2
0002CD74 <AmiBlitz3.ab2@9002>   MOVEM.l D1-D2,-(A7)
0002CD78 <AmiBlitz3.ab2@9003>   TST.w $1A(A1)
0002CD7C <AmiBlitz3.ab2@9004>    BNE.w JL_0_6BD0
0002CD80 <AmiBlitz3.ab2@9005>   CLR.w $A(A1)
0002CD84 <AmiBlitz3.ab2@9006> BRA.w JL_0_6C5E
0002CD8A <AmiBlitz3.ab2@9009>   ADDQ.w #1,globalvarpointer
0002CD92 <AmiBlitz3.ab2@9010>   BCLR #$0,globalvarpointer+1
0002CD9A <AmiBlitz3.ab2@9011>   MOVE.w globalvarpointer,$A(A1)
0002CD9E <AmiBlitz3.ab2@9012>   CMP.w #-$12D,D1
0002CDA2 <AmiBlitz3.ab2@9013>    BNE.w JL_0_6C16
0002CDAA <AmiBlitz3.ab2@9014>   MOVE.w $A(A1),movestdn+2
0002CDB2 <AmiBlitz3.ab2@9015>   MOVE.w $A(A1),pusha3+2
0002CDBA <AmiBlitz3.ab2@9016>   MOVE.w $A(A1),pusha32+2
0002CDC2 <AmiBlitz3.ab2@9017>   MOVE.w $A(A1),pulla3+2
0002CDCA <AmiBlitz3.ab2@9018>   MOVE.w $A(A1),geta3+2
0002CDCE <AmiBlitz3.ab2@9021>    CMP.w #-$3E9,D1
0002CDD2 <AmiBlitz3.ab2@9022>    BNE.w JL_0_6C3E
0002CDDA <AmiBlitz3.ab2@9023>   MOVE.w $A(A1),dataget+2
0002CDE2 <AmiBlitz3.ab2@9024>   MOVE.w $A(A1),dataput+2
0002CDEA <AmiBlitz3.ab2@9025>   MOVE.w $A(A1),rescode+6
0002CDF2 <AmiBlitz3.ab2@9026>   MOVE.w $A(A1),rescode2+2
0002CDF8 <AmiBlitz3.ab2@9029>   ADDQ.w #2,globalvarpointer
0002CDFC <AmiBlitz3.ab2@9030>   TST.w $1A(A1)
0002CE00 <AmiBlitz3.ab2@9031>    BMI.w JL_0_6C52
0002CE06 <AmiBlitz3.ab2@9032>   ADDQ.w #2,globalvarpointer
0002CE0A <AmiBlitz3.ab2@9035>   MOVEM.l D1/A1,-(A7)
0002CE0E <AmiBlitz3.ab2@9036>   BSR.w uselib2
0002CE12 <AmiBlitz3.ab2@9037>   MOVEM.l (A7)+,D1/A1
0002CE14 <AmiBlitz3.ab2@9040>   MOVE.w D1,D2
0002CE18 <AmiBlitz3.ab2@9041>   MOVE.l $16(A1),D1
0002CE1C <AmiBlitz3.ab2@9042>    BSR.w uselib2_org
0002CE20 <AmiBlitz3.ab2@9043>   MOVE.l $1C(A1),D1
0002CE24 <AmiBlitz3.ab2@9044>    BSR.w uselib2_org
0002CE28 <AmiBlitz3.ab2@9045>   MOVEM.l (A7)+,D1-D2
0002CE2E <AmiBlitz3.ab2@9047>   MOVE.b (a7)+,debugmode
0002CE30 <AmiBlitz3.ab2@9050> RTS
0002CE32 <AmiBlitz3.ab2@9054>   MOVEQ.l #$00,D2
0002CE38 <AmiBlitz3.ab2@9057>   MOVEA.l tokeslist,A2
0002CE3A <AmiBlitz3.ab2@9058>   CMPA.l D2,A2
0002CE3E <AmiBlitz3.ab2@9059>    BEQ.w JL_0_6CE0
0002CE40 <AmiBlitz3.ab2@9060>   MOVE.l A2,-(A7)
0002CE42 <AmiBlitz3.ab2@9063>   MOVEQ.l #$00,D3
0002CE46 <AmiBlitz3.ab2@9066>   MOVEA.l $8(A2),A3
0002CE48 <AmiBlitz3.ab2@9067>   CMPA.l D3,A3
0002CE4C <AmiBlitz3.ab2@9068>    BEQ.w JL_0_6CD2
0002CE4E <AmiBlitz3.ab2@9069>   MOVE.l A3,-(A7)
0002CE52 <AmiBlitz3.ab2@9070>   MOVEM.l D2-D3/A2-A3,-(A7)
0002CE56 <AmiBlitz3.ab2@9071>   MOVE.w $4(A2),D1
0002CE5A <AmiBlitz3.ab2@9072>   MOVE.w $6(A2),D2
0002CE5E <AmiBlitz3.ab2@9073>    BSR.w JL_0_6CE2
0002CE62 <AmiBlitz3.ab2@9074>   MOVEM.l (A7)+,D2-D3/A2-A3
0002CE68 <AmiBlitz3.ab2@9075>   MOVE.w dontwrite,D0
0002CE6C <AmiBlitz3.ab2@9076>    BEQ.w JL_0_6CBE
0002CE6E <AmiBlitz3.ab2@9079>   MOVEA.l (A3),A3
0002CE70 <AmiBlitz3.ab2@9080>   CMPA.l D3,A3
0002CE74 <AmiBlitz3.ab2@9081>    BNE.w JL_0_6CB2
0002CE78 <AmiBlitz3.ab2@9082> BRA.w JL_0_6CCC
0002CE7C <AmiBlitz3.ab2@9085>   MOVEA.l $4(A3),A0
0002CE7E <AmiBlitz3.ab2@9086>   MOVE.l D7,(A0)
0002CE80 <AmiBlitz3.ab2@9087>   MOVEA.l (A3),A3
0002CE82 <AmiBlitz3.ab2@9088>   CMPA.l D3,A3
0002CE86 <AmiBlitz3.ab2@9089>    BNE.w JL_0_6CBE
0002CE88 <AmiBlitz3.ab2@9092>   MOVE.l (A7)+,D3
0002CE8C <AmiBlitz3.ab2@9093> BRA.w JL_0_6C88
0002CE8E <AmiBlitz3.ab2@9096>    MOVEA.l (A2),A2
0002CE90 <AmiBlitz3.ab2@9097>   CMPA.l D2,A2
0002CE94 <AmiBlitz3.ab2@9098>    BNE.w JL_0_6C86
0002CE96 <AmiBlitz3.ab2@9099>   MOVE.l (A7)+,D2
0002CE9A <AmiBlitz3.ab2@9100> BRA.w JL_0_6C78
0002CE9C <AmiBlitz3.ab2@9103> RTS
0002CE9E <AmiBlitz3.ab2@9107>   MOVE.w D2,-(A7)
0002CEA2 <AmiBlitz3.ab2@9108>    BSR.w searchinstr
0002CEA4 <AmiBlitz3.ab2@9109>   MOVE.w (A7)+,D2
0002CEAC <AmiBlitz3.ab2@9110>   BCLR #$7,blitzmode
0002CEB0 <AmiBlitz3.ab2@9111>   BCLR #$E,D2
0002CEB4 <AmiBlitz3.ab2@9112>    BEQ.w JL_0_6D02
0002CEBC <AmiBlitz3.ab2@9113>   BSET #$7,blitzmode
0002CEBE <AmiBlitz3.ab2@9116>   TST.w (A3)
0002CEC2 <AmiBlitz3.ab2@9117>    BEQ.w JL_0_6DAC
0002CEC8 <AmiBlitz3.ab2@9118>   BTST #$2,$1(A3)
0002CECC <AmiBlitz3.ab2@9119>    BNE.w tokeerr
0002CED2 <AmiBlitz3.ab2@9120>   BTST #$3,$1(A3)
0002CED6 <AmiBlitz3.ab2@9121>    BNE.w tokeerr
0002CEDA <AmiBlitz3.ab2@9122>   LEA $6(A3),A3
0002CEDC <AmiBlitz3.ab2@9125>   MOVE.w (A3)+,D0
0002CEE0 <AmiBlitz3.ab2@9126>    BMI.w tokeerr
0002CEE4 <AmiBlitz3.ab2@9127>   ANDI.w #$FF,D0
0002CEE6 <AmiBlitz3.ab2@9128>   ADDA.w D0,A3
0002CEE8 <AmiBlitz3.ab2@9129>   ADDQ.w #1,A3
0002CEEA <AmiBlitz3.ab2@9130>   EXG.l D0,A3
0002CEEE <AmiBlitz3.ab2@9131>   BCLR #$0,D0
0002CEF0 <AmiBlitz3.ab2@9132>   EXG.l D0,A3
0002CEF2 <AmiBlitz3.ab2@9133>   SUBQ.w #1,D2
0002CEF6 <AmiBlitz3.ab2@9134>    BPL.w JL_0_6D98
0002CEF8 <AmiBlitz3.ab2@9135>   TST.w (A3)
0002CEFC <AmiBlitz3.ab2@9136>    BNE.w JL_0_6D76
0002CF00 <AmiBlitz3.ab2@9137>   MOVE.l $2(A3),D0
0002CF04 <AmiBlitz3.ab2@9138>   OR.l $A(A3),D0
0002CF08 <AmiBlitz3.ab2@9139>    BNE.w JL_0_6D76
0002CF0E <AmiBlitz3.ab2@9140>   BTST #$0,$9(A3)
0002CF12 <AmiBlitz3.ab2@9141>    BNE.w JL_0_6D76
0002CF16 <AmiBlitz3.ab2@9142>   MOVE.l $6(A3),D7
0002CF1A <AmiBlitz3.ab2@9143>   MOVE.w $0(A2,D7.L),D0
0002CF1E <AmiBlitz3.ab2@9144>   ANDI.w #$F000,D0
0002CF22 <AmiBlitz3.ab2@9145>   CMP.w #-$6000,D0
0002CF26 <AmiBlitz3.ab2@9146>    BEQ.w JL_0_6D76
0002CF2A <AmiBlitz3.ab2@9149>   SUB.l $12(A2),D7
0002CF2E <AmiBlitz3.ab2@9150>   ADD.l $28(A2),D7
0002CF30 <AmiBlitz3.ab2@9151> RTS
0002CF36 <AmiBlitz3.ab2@9155>   LEA cutejsr,A0
0002CF3C <AmiBlitz3.ab2@9158>   MOVE.l destpointer,-(A7)
0002CF44 <AmiBlitz3.ab2@9159>   MOVE.w #$FFFF,lasta6
0002CF46 <AmiBlitz3.ab2@9162>    JSR (A0)
0002CF4A <AmiBlitz3.ab2@9163>   MOVE.w #$4E75,D1
0002CF4E <AmiBlitz3.ab2@9164>    BSR.w writeword
0002CF50 <AmiBlitz3.ab2@9165>   MOVE.l (A7)+,D7
0002CF52 <AmiBlitz3.ab2@9166> RTS
0002CF54 <AmiBlitz3.ab2@9170>   TST.w (A3)+
0002CF58 <AmiBlitz3.ab2@9171>    BEQ.w JL_0_6DA4
0002CF5A <AmiBlitz3.ab2@9172>   ADDQ.w #2,A3
0002CF5E <AmiBlitz3.ab2@9173> BRA.w JL_0_6D98
0002CF62 <AmiBlitz3.ab2@9176>   LEA $C(A3),A3
0002CF66 <AmiBlitz3.ab2@9177> BRA.w JL_0_6D20
0002CF68 <AmiBlitz3.ab2@9181>   TST.w D2
0002CF6C <AmiBlitz3.ab2@9182>    BNE.w tokeerr
0002CF70 <AmiBlitz3.ab2@9183>   TST.w $6(A3)
0002CF74 <AmiBlitz3.ab2@9184>    BNE.w JL_0_6DE4
0002CF78 <AmiBlitz3.ab2@9185>   MOVE.l $8(A3),D0
0002CF7C <AmiBlitz3.ab2@9186>   OR.l $10(A3),D0
0002CF80 <AmiBlitz3.ab2@9187>    BNE.w JL_0_6DE4
0002CF86 <AmiBlitz3.ab2@9188>   BTST #$0,$F(A3)
0002CF8A <AmiBlitz3.ab2@9189>    BNE.w JL_0_6DE4
0002CF8E <AmiBlitz3.ab2@9190>   MOVE.l $C(A3),D7
0002CF92 <AmiBlitz3.ab2@9191>   MOVE.w $0(A2,D7.L),D0
0002CF96 <AmiBlitz3.ab2@9192>   ANDI.w #$F000,D0
0002CF9A <AmiBlitz3.ab2@9193>   CMP.w #-$6000,D0
0002CF9E <AmiBlitz3.ab2@9194>    BNE.w JL_0_6D6C
0002CFA0 <AmiBlitz3.ab2@9197>   MOVE.l A3,D1
0002CFA2 <AmiBlitz3.ab2@9198>   SUB.l A2,D1
0002CFA8 <AmiBlitz3.ab2@9199>   LEA Amakelibsub,A0
0002CFAC <AmiBlitz3.ab2@9200> BRA.w JL_0_6D7C
0002CFB2 <AmiBlitz3.ab2@9204>   MOVEA.l _execbase,A6
0002CFB8 <AmiBlitz3.ab2@9205>   MOVEA.l tokeslist,A2
0002CFBE <AmiBlitz3.ab2@9206>   CLR.l tokeslist
0002CFC2 <AmiBlitz3.ab2@9209>     CMPA.w #$0,A2
0002CFC6 <AmiBlitz3.ab2@9210>      BEQ.w JL_0_6E32
0002CFCA <AmiBlitz3.ab2@9211>     MOVEA.l $8(A2),A3
0002CFCE <AmiBlitz3.ab2@9214>       CMPA.w #$0,A3
0002CFD2 <AmiBlitz3.ab2@9215>        BEQ.w JL_0_6E24
0002CFD4 <AmiBlitz3.ab2@9216>       MOVEA.l A3,A1
0002CFD6 <AmiBlitz3.ab2@9217>       MOVEA.l (A3),A3
0002CFD8 <AmiBlitz3.ab2@9218>       MOVEQ.l #$08,D0
0002CFDE <AmiBlitz3.ab2@9219>       MOVE.l mempool,a0
0002CFE4 <AmiBlitz3.ab2@9220>       MOVEA.l _execbase,A6
0002CFE8 <AmiBlitz3.ab2@9221>       JSR _FreePooled(A6)
0002CFEC <AmiBlitz3.ab2@9222> BRA.w JL_0_6E0E
0002CFEE <AmiBlitz3.ab2@9225>     MOVEA.l A2,A1
0002CFF0 <AmiBlitz3.ab2@9226>     MOVEA.l (A2),A2
0002CFF2 <AmiBlitz3.ab2@9227>     MOVEQ.l #$0C,D0
0002CFF8 <AmiBlitz3.ab2@9228>     MOVE.l mempool,a0
0002CFFE <AmiBlitz3.ab2@9229>     MOVEA.l _execbase,A6
0002D002 <AmiBlitz3.ab2@9230>     JSR _FreePooled(A6)
0002D006 <AmiBlitz3.ab2@9231> BRA.w JL_0_6E02
0002D008 <AmiBlitz3.ab2@9234> RTS
0002D00C <AmiBlitz3.ab2@9238>   MOVEM.l D3-D5/A1-A6,-(A7)
0002D00E <AmiBlitz3.ab2@9239>   MOVEA.l A1,A4
0002D010 <AmiBlitz3.ab2@9242>   MOVE.l (A2)+,D3
0002D014 <AmiBlitz3.ab2@9243>   MOVE.w $0(A4,D3.L),D5
0002D018 <AmiBlitz3.ab2@9244>    BPL.w JL_0_6E7A
0002D01C <AmiBlitz3.ab2@9245>   TST.l $2C(A4)
0002D020 <AmiBlitz3.ab2@9246>    BEQ.w JL_0_6E5E
0002D026 <AmiBlitz3.ab2@9247>   TST.b debugmode
0002D02A <AmiBlitz3.ab2@9248>    BNE.w JL_0_6E5E
0002D02E <AmiBlitz3.ab2@9249>   CMP.l $2C(A4),D3
0002D032 <AmiBlitz3.ab2@9250>    BCC.w JL_0_6E7A
0002D036 <AmiBlitz3.ab2@9253>   BCLR #$F,D5
0002D03A <AmiBlitz3.ab2@9254>   MOVE.w $2(A4,D3.L),D4
0002D03E <AmiBlitz3.ab2@9255>   SUB.l $12(A4),D3
0002D042 <AmiBlitz3.ab2@9256>   ADD.l $28(A4),D3
0002D046 <AmiBlitz3.ab2@9257>   MOVEM.l D2/A2/A4,-(A7)
0002D04A <AmiBlitz3.ab2@9258>    BSR.w JL_0_6E86
0002D04E <AmiBlitz3.ab2@9259>   MOVEM.l (A7)+,D2/A2/A4
0002D050 <AmiBlitz3.ab2@9262>   SUBQ.l #1,D2
0002D054 <AmiBlitz3.ab2@9263>    BNE.w JL_0_6E3A
0002D058 <AmiBlitz3.ab2@9264>   MOVEM.l (A7)+,D3-D5/A1-A6
0002D05A <AmiBlitz3.ab2@9265> RTS
0002D060 <AmiBlitz3.ab2@9269>   LEA tokeslist,A3
0002D066 <AmiBlitz3.ab2@9270>   MOVEA.l _execbase,A6
0002D068 <AmiBlitz3.ab2@9273>   MOVE.l (A3),D0
0002D06C <AmiBlitz3.ab2@9274>    BEQ.w JL_0_6EAC
0002D06E <AmiBlitz3.ab2@9275>   MOVEA.l D0,A3
0002D072 <AmiBlitz3.ab2@9276>   CMP.w $4(A3),D4
0002D076 <AmiBlitz3.ab2@9277>    BNE.w JL_0_6E90
0002D07A <AmiBlitz3.ab2@9278>   CMP.w $6(A3),D5
0002D07E <AmiBlitz3.ab2@9279>    BNE.w JL_0_6E90
0002D082 <AmiBlitz3.ab2@9280> BRA.w JL_0_6ED0
0002D084 <AmiBlitz3.ab2@9283>   MOVEQ.l #$0C,D0
0002D086 <AmiBlitz3.ab2@9284>   MOVEQ.l #$01,D1
0002D08C <AmiBlitz3.ab2@9285>   MOVE.l mempool,a0
0002D090 <AmiBlitz3.ab2@9286>   JSR _AllocPooled(a6)
0002D092 <AmiBlitz3.ab2@9288>   MOVEA.l D0,A3
0002D098 <AmiBlitz3.ab2@9289>   MOVE.l tokeslist,(A3)
0002D09E <AmiBlitz3.ab2@9290>   MOVE.l A3,tokeslist
0002D0A2 <AmiBlitz3.ab2@9291>   MOVE.w D4,$4(A3)
0002D0A6 <AmiBlitz3.ab2@9292>   MOVE.w D5,$6(A3)
0002D0AA <AmiBlitz3.ab2@9293>   CLR.l $8(A3)
0002D0AC <AmiBlitz3.ab2@9296>   MOVEQ.l #$08,D0
0002D0AE <AmiBlitz3.ab2@9297>   MOVEQ.l #$01,D1
0002D0B4 <AmiBlitz3.ab2@9298>   MOVE.l mempool,a0
0002D0B8 <AmiBlitz3.ab2@9299>   JSR _AllocPooled(a6)
0002D0BA <AmiBlitz3.ab2@9301>   MOVEA.l D0,A0
0002D0BE <AmiBlitz3.ab2@9302>   MOVE.l D3,$4(A0)
0002D0C2 <AmiBlitz3.ab2@9303>   MOVE.l $8(A3),(A0)
0002D0C6 <AmiBlitz3.ab2@9304>   MOVE.l A0,$8(A3)
0002D0C8 <AmiBlitz3.ab2@9305>   MOVE.w D4,D1
0002D0CC <AmiBlitz3.ab2@9306> BRA.w searchinstr
0002D0D0 <AmiBlitz3.ab2@9309> tokeslist: Ds.l 1
0002D0D4 <AmiBlitz3.ab2@9322>   BEQ.w uselib2_org__skip
0002D0D6 <AmiBlitz3.ab2@9323>   MOVE.l A1,-(A7)
0002D0D8 <AmiBlitz3.ab2@9324>   ADDA.l D1,A1
0002D0DA <AmiBlitz3.ab2@9325>   ADDQ.w #6,A1
0002D0DC <AmiBlitz3.ab2@9328>     MOVE.w (A1)+,D1
0002D0E0 <AmiBlitz3.ab2@9329>     BEQ.w uselib2_org__done
0002D0E2 <AmiBlitz3.ab2@9330>     CMP.w D2,D1
0002D0E6 <AmiBlitz3.ab2@9331>     BEQ.w uselib2_org__skip2
0002D0E8 <AmiBlitz3.ab2@9332>     MOVE.l A1,-(A7)
0002D0EC <AmiBlitz3.ab2@9333>     BSR.w uselib
0002D0EE <AmiBlitz3.ab2@9334>     MOVEA.l (A7)+,A1
0002D0F0 <AmiBlitz3.ab2@9337>     ADDQ.w #2,A1
0002D0F4 <AmiBlitz3.ab2@9338> BRA.w uselib2_org__loop
0002D0F6 <AmiBlitz3.ab2@9341>   MOVEA.l (A7)+,A1
0002D0F8 <AmiBlitz3.ab2@9344> RTS
0002D0FE <AmiBlitz3.ab2@9348>   MOVEA.l libpointer,A1
0002D102 <AmiBlitz3.ab2@9351>   CMPA.w #$0,A1
0002D106 <AmiBlitz3.ab2@9352>    BEQ.b JL_0_6F36
0002D10A <AmiBlitz3.ab2@9353>   CMP.w $4(A1),D1
0002D10E <AmiBlitz3.ab2@9354>    BEQ.w JL_0_6F34
0002D110 <AmiBlitz3.ab2@9355>   MOVEA.l (A1),A1
0002D114 <AmiBlitz3.ab2@9356> BRA.w JL_0_6F20
0002D116 <AmiBlitz3.ab2@9359>   MOVEQ.l #-$01,D1
0002D118 <AmiBlitz3.ab2@9362> RTS
0002D11C <AmiBlitz3.ab2@9366>   MOVEM.l d0/a2,-(a7)
0002D11E <AmiBlitz3.ab2@9367>   MOVEQ #0,d0
0002D124 <AmiBlitz3.ab2@9368>   LEA instrtab+4,a2
0002D126 <AmiBlitz3.ab2@9369>   MOVE.w d1,d0
0002D128 <AmiBlitz3.ab2@9370>   ASL.l #3,d0
0002D12C <AmiBlitz3.ab2@9371>   MOVE.l 0(a2,d0.l),a1                                     ;*8
0002D132 <AmiBlitz3.ab2@9372>   CMP.l #0,a1
0002D136 <AmiBlitz3.ab2@9373>   BNE JL_0_6F54b
0002D13C <AmiBlitz3.ab2@9375>   MOVEA.l libpointer,A1
0002D140 <AmiBlitz3.ab2@9378>     CMPA.w #$0,A1
0002D144 <AmiBlitz3.ab2@9379>     BEQ.w noliberr
0002D148 <AmiBlitz3.ab2@9380>     CMP.w $4(A1),D1
0002D14C <AmiBlitz3.ab2@9381>     BEQ.w JL_0_6F54
0002D14E <AmiBlitz3.ab2@9382>    MOVEA.l (A1),A1
0002D152 <AmiBlitz3.ab2@9383> BRA.w JL_0_6F3E
0002D156 <AmiBlitz3.ab2@9386>   MOVE.l a1,0(a2,d0.l)
0002D15A <AmiBlitz3.ab2@9389>   MOVEM.l (a7)+,d0/a2
0002D15C <AmiBlitz3.ab2@9390> RTS
0002D160 <AmiBlitz3.ab2@9393>   MOVEM.l d0-d1/a1,-(a7)
0002D162 <AmiBlitz3.ab2@9394>   MOVEQ #0,d0
0002D168 <AmiBlitz3.ab2@9395>   LEA instrtab,a1
0002D16A <AmiBlitz3.ab2@9396>   MOVE.w d1,d0
0002D16C <AmiBlitz3.ab2@9397>   ASL.l #3,d0
0002D170 <AmiBlitz3.ab2@9398>   MOVE.l 0(a1,d0.l),a3
0002D174 <AmiBlitz3.ab2@9399>   MOVE.l 4(a1,d0.l),a2
0002D17A <AmiBlitz3.ab2@9400>   CMP.l #0,a3
0002D17E <AmiBlitz3.ab2@9401>   BNE JL_0_6F92b
0002D184 <AmiBlitz3.ab2@9403>   MOVEA.l libpointer,A2
0002D188 <AmiBlitz3.ab2@9406>   CMPA.w #$0,A2
0002D18C <AmiBlitz3.ab2@9407>   BEQ.w notokerr
0002D190 <AmiBlitz3.ab2@9408>   CMP.w $E(A2),D1
0002D194 <AmiBlitz3.ab2@9409>   BCS.w JL_0_6FB8
0002D198 <AmiBlitz3.ab2@9410>   CMP.w $10(A2),D1
0002D19C <AmiBlitz3.ab2@9411>   BCC.w JL_0_6FB8
0002D1A0 <AmiBlitz3.ab2@9412>   LEA $30(A2),A3
0002D1A4 <AmiBlitz3.ab2@9413>   TST.w $4(A2)
0002D1A8 <AmiBlitz3.ab2@9414>   BPL.w JL_0_6FA6
0002D1AC <AmiBlitz3.ab2@9417>     CMP.w $E(A2),D1
0002D1B0 <AmiBlitz3.ab2@9418>     BEQ.w JL_0_6F92
0002D1B2 <AmiBlitz3.ab2@9419>     SUBQ.w #1,D1
0002D1B6 <AmiBlitz3.ab2@9420>     MOVEA.l $2(A3),A3
0002D1BA <AmiBlitz3.ab2@9421> BRA.w JL_0_6F80
0002D1BE <AmiBlitz3.ab2@9424>   MOVE.l a3,0(a1,d0.l)
0002D1C2 <AmiBlitz3.ab2@9425>   MOVE.l a2,4(a1,d0.l)
0002D1C6 <AmiBlitz3.ab2@9428>   MOVEM.l (a7)+,d0-d1/a1
0002D1CA <AmiBlitz3.ab2@9429>   MOVEM.l D1/A1-a3,-(A7)
0002D1CE <AmiBlitz3.ab2@9430>   CMP.w #1,(a3)
0002D1D2 <AmiBlitz3.ab2@9431>   BNE.s ex10
0002D1DA <AmiBlitz3.ab2@9432>   CMP.l #$12345678,$e(a3)
0002D1DE <AmiBlitz3.ab2@9433>   BNE.s ex10
0002D1E4 <AmiBlitz3.ab2@9434>   CMP.w #$ffff,$16(a3)
0002D1E8 <AmiBlitz3.ab2@9435>   BNE.s ex10
0002D1EC <AmiBlitz3.ab2@9436>   MOVE.l $12(a3),d1
0002D1F0 <AmiBlitz3.ab2@9437>   BEQ.s ex10
0002D1F6 <AmiBlitz3.ab2@9438>   LEA pluginbase,a3
0002D1FA <AmiBlitz3.ab2@9440> JMP 0(a2,d1.l)                                             ;plugin
0002D1FE <AmiBlitz3.ab2@9443>   MOVEM.l (A7)+,D1/A1-a3
0002D204 <AmiBlitz3.ab2@9444>   JSR stripspaces
0002D206 <AmiBlitz3.ab2@9445>   MOVEQ #0,d0
0002D208 <AmiBlitz3.ab2@9446>   MOVE.b (a5)+,d0
0002D20E <AmiBlitz3.ab2@9447>   MOVE.w d0,lastchar
0002D210 <AmiBlitz3.ab2@9448>   ADDQ.l #4,a7
0002D212 <AmiBlitz3.ab2@9449> RTS
0002D214 <AmiBlitz3.ab2@9453>   MOVEA.l A2,A1
0002D21A <AmiBlitz3.ab2@9454>   CLR.b newmode
0002D21E <AmiBlitz3.ab2@9455>   MOVE.w $4(A1),D1
0002D222 <AmiBlitz3.ab2@9458>   BSR.w uselib3
0002D226 <AmiBlitz3.ab2@9459>   MOVEM.l (A7)+,D1/A1-a3
0002D228 <AmiBlitz3.ab2@9460> RTS
0002D22E <AmiBlitz3.ab2@9463>   MOVE.w globalvarpointer,-(a7)
0002D236 <AmiBlitz3.ab2@9464>   MOVE.w #$8004,globalvarpointer
0002D23A <AmiBlitz3.ab2@9465>   BSR.w uselib3
0002D240 <AmiBlitz3.ab2@9466>   MOVE.w (a7)+,globalvarpointer
0002D244 <AmiBlitz3.ab2@9467>   MOVEM.l (A7)+,D1/A1-a3
0002D246 <AmiBlitz3.ab2@9468> RTS
0002D24A <AmiBlitz3.ab2@9471>     CMP.w $E(A2),D1
0002D24E <AmiBlitz3.ab2@9472>     BEQ.w JL_0_6F92
0002D250 <AmiBlitz3.ab2@9473>     SUBQ.w #1,D1
0002D254 <AmiBlitz3.ab2@9474>     MOVEA.l $2(A3),A3
0002D258 <AmiBlitz3.ab2@9475> BRA.w JL_0_6FA6
0002D25A <AmiBlitz3.ab2@9478>   MOVEA.l (A2),A2
0002D25E <AmiBlitz3.ab2@9479> BRA.w JL_0_6F5C
0002D264 <AmiBlitz3.ab2@9482> JMP writeword
0002D268 <AmiBlitz3.ab2@9485> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0002D26C <AmiBlitz3.ab2@9486> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
0002D270 <AmiBlitz3.ab2@9487> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
0002D272 <AmiBlitz3.ab2@9493>   TST.l D0
0002D276 <AmiBlitz3.ab2@9494>   BEQ.w exit_loadlibsfile
0002D278 <AmiBlitz3.ab2@9495>     MOVE.l D0,D6                                           ;d6=len
0002D27E <AmiBlitz3.ab2@9496>     MOVEA.l _dosbase,A6
0002D284 <AmiBlitz3.ab2@9497>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002D288 <AmiBlitz3.ab2@9498>     JSR _Open(A6)
0002D28A <AmiBlitz3.ab2@9499>     MOVE.l D0,D7
0002D28E <AmiBlitz3.ab2@9500>     BEQ.w exit_loadlibsfile
0002D290 <AmiBlitz3.ab2@9501>       MOVE.l D6,D0
0002D292 <AmiBlitz3.ab2@9502>       MOVEQ.l #$01,D1
0002D298 <AmiBlitz3.ab2@9503>       MOVEA.l _execbase,A6
0002D29E <AmiBlitz3.ab2@9504>       MOVE.l mempool,a0
0002D2A2 <AmiBlitz3.ab2@9505>       JSR _AllocPooled(a6)
0002D2A4 <AmiBlitz3.ab2@9506>       MOVE.l D0,D5                                         ;start address
0002D2A6 <AmiBlitz3.ab2@9508>       MOVE.l D7,D1                                         ; handle
0002D2A8 <AmiBlitz3.ab2@9509>       MOVE.l D5,D2                                         ; buffer addr
0002D2AA <AmiBlitz3.ab2@9510>       MOVE.l D6,D3                                         ; size
0002D2B0 <AmiBlitz3.ab2@9511>       MOVEA.l _dosbase,A6
0002D2B4 <AmiBlitz3.ab2@9512>       JSR _Read(A6)
0002D2B6 <AmiBlitz3.ab2@9513>       MOVE.l D7,D1
0002D2BA <AmiBlitz3.ab2@9514>       JSR _Close(A6)
0002D2BC <AmiBlitz3.ab2@9516>       MOVEA.l D5,A0                                        ; buffer addr
0002D2BE <AmiBlitz3.ab2@9522>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
0002D2C2 <AmiBlitz3.ab2@9523>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
0002D2C6 <AmiBlitz3.ab2@9524>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
0002D2C8 <AmiBlitz3.ab2@9525>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0002D2CA <AmiBlitz3.ab2@9526>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
0002D2CC <AmiBlitz3.ab2@9527>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
0002D2D0 <AmiBlitz3.ab2@9528>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
0002D2D2 <AmiBlitz3.ab2@9529>           ADD.l D0,D0                                      ;   verdoppele D0
0002D2D4 <AmiBlitz3.ab2@9530>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
0002D2D8 <AmiBlitz3.ab2@9531>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
0002D2DC <AmiBlitz3.ab2@9532>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
0002D2E0 <AmiBlitz3.ab2@9533>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
0002D2E2 <AmiBlitz3.ab2@9534>           CMPA.l A0,A2
0002D2E6 <AmiBlitz3.ab2@9535>           BCC.b JL_0_7010                                  ; wenn A0=>A2
0002D2EC <AmiBlitz3.ab2@9536>             MOVE.l -$8(A2),$20(A1)                         ;
0002D2F0 <AmiBlitz3.ab2@9537>             MOVE.l A2,$24(A1)                              ;
0002D2F4 <AmiBlitz3.ab2@9538> BRA.w JL_0_7010
0002D2F6 <AmiBlitz3.ab2@9541>       MOVE.l D5,D0
0002D2F8 <AmiBlitz3.ab2@9544> RTS
0002D322 <AmiBlitz3.ab2@9548>   !basic
0002D396 <AmiBlitz3.ab2@9549>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
0002D3CA <AmiBlitz3.ab2@9550>    dos_Delete{tempmapping$}
0002D40E <AmiBlitz3.ab2@9551>    fid.l = file_Open{tempmapping$,#file_forcewrite}
0002D42C <AmiBlitz3.ab2@9552>   !asm
0002D432 <AmiBlitz3.ab2@9554>   LEA libpointer,A3
0002D438 <AmiBlitz3.ab2@9558>   MOVE.l size_deflibs,D0
0002D43E <AmiBlitz3.ab2@9559>   MOVE.l deflib,d1
0002D442 <AmiBlitz3.ab2@9560>   BEQ 'l1
0002D446 <AmiBlitz3.ab2@9561> BRA 'l2
0002D44C <AmiBlitz3.ab2@9564>   MOVE.l #str_path_deflibs,D1
0002D450 <AmiBlitz3.ab2@9567>   BSR.w load_libsfile
0002D456 <AmiBlitz3.ab2@9568>   MOVE.l D0,ptr_deflibs
0002D45C <AmiBlitz3.ab2@9571>   MOVE.l size_acidlibs,D0
0002D462 <AmiBlitz3.ab2@9572>   MOVE.l #str_path_acidlibs,D1
0002D466 <AmiBlitz3.ab2@9573>   BSR.w load_libsfile
0002D46C <AmiBlitz3.ab2@9574>   MOVE.l D0,ptr_acidlibs
0002D46E <AmiBlitz3.ab2@9578>   CLR.l (A3)
0002D474 <AmiBlitz3.ab2@9579>   MOVE.l A3,ptr_userlibs
0002D47A <AmiBlitz3.ab2@9584>   LEA str_libfilename,A0
0002D480 <AmiBlitz3.ab2@9585>   LEA str_path_userlibs,A1
0002D482 <AmiBlitz3.ab2@9588>     MOVE.b (A1)+,(A0)+
0002D486 <AmiBlitz3.ab2@9589>   BNE.b JL_0_708E
0002D488 <AmiBlitz3.ab2@9591>   SUBQ.w #1,A0
0002D48C <AmiBlitz3.ab2@9592>   MOVE.b #$2F,(A0)+
0002D48E <AmiBlitz3.ab2@9595>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
0002D494 <AmiBlitz3.ab2@9597>   LEA ptr_userlibs_list,A2
0002D49A <AmiBlitz3.ab2@9598>   MOVEA.l ptr_userlibs,A3
0002D4A0 <AmiBlitz3.ab2@9599>   MOVEA.l _dosbase,A6
0002D4A2 <AmiBlitz3.ab2@9604>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
0002D4A6 <AmiBlitz3.ab2@9605>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
0002D4A8 <AmiBlitz3.ab2@9607>       CLR.l (A3)
0002D4AA <AmiBlitz3.ab2@9608>       ADDQ.w #4,A7
0002D4D4 <AmiBlitz3.ab2@9609>       !basic
0002D4E8 <AmiBlitz3.ab2@9610>       If fid<>-1
0002D4F2 <AmiBlitz3.ab2@9611>         file_Close{fid}
0002D4FE <AmiBlitz3.ab2@9612>         fid = -1
0002D51C <AmiBlitz3.ab2@9614>       !asm
0002D520 <AmiBlitz3.ab2@9615> BRA.w process_libraries
0002D522 <AmiBlitz3.ab2@9618>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
0002D526 <AmiBlitz3.ab2@9619>       TST.w $4(A2)                                         ; naechste addresse pruefen
0002D52A <AmiBlitz3.ab2@9620>     BEQ.b JL_0_70BA
0002D52E <AmiBlitz3.ab2@9622>     LEA $6(A2),A1
0002D530 <AmiBlitz3.ab2@9623>     MOVEA.l (A7),A0
0002D532 <AmiBlitz3.ab2@9626>       MOVE.b (A1)+,(A0)+
0002D536 <AmiBlitz3.ab2@9627>     BNE.w JL_0_70D4
0002D538 <AmiBlitz3.ab2@9631>     MOVE.l A0,-(A7)
0002D53E <AmiBlitz3.ab2@9632>     MOVE.l #str_libfilename,D1
0002D540 <AmiBlitz3.ab2@9633>     MOVEQ.l #-$02,D2
0002D546 <AmiBlitz3.ab2@9634>     MOVEA.l _dosbase,A6
0002D54A <AmiBlitz3.ab2@9635>      JSR _Lock(A6)
0002D54C <AmiBlitz3.ab2@9636>     MOVE.l D0,D1
0002D550 <AmiBlitz3.ab2@9637>      BEQ.w JL_0_7156
0002D552 <AmiBlitz3.ab2@9638>     MOVEA.l (A7),A0
0002D558 <AmiBlitz3.ab2@9639>     MOVE.b #$2F,-$1(A0)
0002D55A <AmiBlitz3.ab2@9642>     MOVE.l D1,-(A7)
0002D560 <AmiBlitz3.ab2@9643>     MOVE.l #ptr_parameterstore,D2
0002D566 <AmiBlitz3.ab2@9644>     MOVEA.l _dosbase,A6
0002D56A <AmiBlitz3.ab2@9645>     JSR _Examine(A6)
0002D56C <AmiBlitz3.ab2@9646>     TST.l D0
0002D570 <AmiBlitz3.ab2@9647>      BEQ.w JL_0_7150
0002D576 <AmiBlitz3.ab2@9650>     LEA fib_FileName,A0
0002D57A <AmiBlitz3.ab2@9651>     BSR.w check_for_infoextention
0002D57E <AmiBlitz3.ab2@9652>     BEQ.w JL_0_7150
0002D5A8 <AmiBlitz3.ab2@9655>     !basic
0002D62C <AmiBlitz3.ab2@9656>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002D64A <AmiBlitz3.ab2@9657>     !asm
0002D650 <AmiBlitz3.ab2@9658>     MOVE.l #str_libfilename,D1
0002D654 <AmiBlitz3.ab2@9659>     BSR.w open_userlibfile
0002D656 <AmiBlitz3.ab2@9662>     MOVE.l (A7)+,D1
0002D65C <AmiBlitz3.ab2@9663>     MOVEA.l _dosbase,A6
0002D660 <AmiBlitz3.ab2@9664>     JSR _UnLock(A6)
0002D662 <AmiBlitz3.ab2@9667>     ADDQ.w #4,A7
0002D666 <AmiBlitz3.ab2@9668> BRA.w JL_0_70BA
0002D66C <AmiBlitz3.ab2@9671>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002D672 <AmiBlitz3.ab2@9672>   MOVEA.l _dosbase,A6
0002D676 <AmiBlitz3.ab2@9673>    JSR _Open(A6)
0002D678 <AmiBlitz3.ab2@9674>   MOVE.l D0,D7
0002D67C <AmiBlitz3.ab2@9675>    BEQ.w exit_userlibfile
0002D67E <AmiBlitz3.ab2@9678>   MOVE.l D7,D1                                             ; filehandle
0002D684 <AmiBlitz3.ab2@9679>   MOVE.l #optstuff,D2                                     ; buffer
0002D68A <AmiBlitz3.ab2@9680>   MOVEA.l _dosbase,A6
0002D68C <AmiBlitz3.ab2@9681>   MOVEQ.l #$20,D3                                          ; size
0002D690 <AmiBlitz3.ab2@9682>   JSR _Read(A6)
0002D696 <AmiBlitz3.ab2@9685>   MOVE.l optstuff+28,D6
0002D698 <AmiBlitz3.ab2@9686>   LSL.l #2,D6
0002D69A <AmiBlitz3.ab2@9687>   MOVE.l D6,D0
0002D69C <AmiBlitz3.ab2@9688>   MOVEQ.l #$01,D1
0002D6A2 <AmiBlitz3.ab2@9689>   MOVEA.l _execbase,A6
0002D6A8 <AmiBlitz3.ab2@9690>   MOVE.l mempool,a0
0002D6AC <AmiBlitz3.ab2@9691>   JSR _AllocPooled(a6)
0002D6AE <AmiBlitz3.ab2@9692>   MOVEA.l D0,A5
0002D6B4 <AmiBlitz3.ab2@9695>   MOVEA.l _dosbase,A6
0002D6B6 <AmiBlitz3.ab2@9696>   MOVE.l D7,D1                                             ; filehandle
0002D6B8 <AmiBlitz3.ab2@9697>   MOVE.l A5,D2                                             ; buffer
0002D6BA <AmiBlitz3.ab2@9698>   MOVE.l D6,D3                                             ; size
0002D6BE <AmiBlitz3.ab2@9699>    JSR _Read(A6)
0002D6C0 <AmiBlitz3.ab2@9700>   MOVE.l A5,(A3)
0002D6C2 <AmiBlitz3.ab2@9702>   MOVE.l A5,d0
0002D6C4 <AmiBlitz3.ab2@9704>   MOVEA.l A5,A3
0002D6C8 <AmiBlitz3.ab2@9705>   MOVE.l D6,$6(A5)
0002D6CC <AmiBlitz3.ab2@9706>   CLR.l $20(A5)
0002D6F6 <AmiBlitz3.ab2@9708>   !basic
0002D700 <AmiBlitz3.ab2@9710>   addr_libnum.l = PutD0 + 4
0002D714 <AmiBlitz3.ab2@9711>   If fid<>-1
0002D7B4 <AmiBlitz3.ab2@9712>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
0002D7E6 <AmiBlitz3.ab2@9713>     file_WriteLine{fid,currentlib$}
0002D804 <AmiBlitz3.ab2@9715>   !asm
0002D806 <AmiBlitz3.ab2@9718>   MOVE.l D7,D1                                             ; filehandle
0002D80C <AmiBlitz3.ab2@9719>   MOVE.l #optstuff,D2                                     ; buffer
0002D80E <AmiBlitz3.ab2@9720>   MOVEQ.l #$0C,D3                                          ; size
0002D814 <AmiBlitz3.ab2@9721>   MOVEA.l _dosbase,A6
0002D818 <AmiBlitz3.ab2@9722>    JSR _Read(A6)
0002D81E <AmiBlitz3.ab2@9724>   CMP.l #$C,D0
0002D822 <AmiBlitz3.ab2@9725>    BCS.w close_and_exit_userlibfile
0002D828 <AmiBlitz3.ab2@9728>   MOVE.l optstuff+4,D0
0002D82C <AmiBlitz3.ab2@9729>   MOVE.l D0,$20(A5)
0002D82E <AmiBlitz3.ab2@9730>   LSL.l #2,D0
0002D830 <AmiBlitz3.ab2@9731>   MOVE.l D0,D5
0002D832 <AmiBlitz3.ab2@9732>   MOVEQ.l #$01,D1
0002D838 <AmiBlitz3.ab2@9733>   MOVEA.l _execbase,A6
0002D83E <AmiBlitz3.ab2@9734>   MOVE.l mempool,a0
0002D842 <AmiBlitz3.ab2@9735>   JSR _AllocPooled(a6)
0002D848 <AmiBlitz3.ab2@9737>   MOVEA.l _dosbase,A6
0002D84C <AmiBlitz3.ab2@9738>   MOVE.l D0,$24(A5)
0002D84E <AmiBlitz3.ab2@9739>   MOVE.l D7,D1
0002D850 <AmiBlitz3.ab2@9740>   MOVE.l D0,D2
0002D852 <AmiBlitz3.ab2@9741>   MOVE.l D5,D3
0002D856 <AmiBlitz3.ab2@9742>   JSR _Read(A6)
0002D858 <AmiBlitz3.ab2@9745>   MOVE.l D7,D1
0002D85E <AmiBlitz3.ab2@9746>   MOVEA.l _dosbase,A6
0002D862 <AmiBlitz3.ab2@9747> JMP _Close(A6)
0002D864 <AmiBlitz3.ab2@9750> RTS
0002D86A <AmiBlitz3.ab2@9756>   CLR.w number_of_objects
0002D870 <AmiBlitz3.ab2@9757>   MOVEA.l end_of_tokenlist,A3
0002D876 <AmiBlitz3.ab2@9758>   MOVEA.l libpointer,A2
0002D87A <AmiBlitz3.ab2@9761>     CMPA.w #$0,A2
0002D87E <AmiBlitz3.ab2@9762>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
0002D882 <AmiBlitz3.ab2@9764>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
0002D886 <AmiBlitz3.ab2@9765>     BMI.w JL_0_7226
0002D888 <AmiBlitz3.ab2@9766>       LSL.w #7,D7
0002D88A <AmiBlitz3.ab2@9767>       ADDQ.w #1,D7
0002D88E <AmiBlitz3.ab2@9768>       MOVE.w D7,$E(A2)
0002D892 <AmiBlitz3.ab2@9771>     LEA $30(A2),A1
0002D898 <AmiBlitz3.ab2@9772>     LEA temp1,A4
0002D89A <AmiBlitz3.ab2@9775>       MOVE.w (A1),D0
0002D89E <AmiBlitz3.ab2@9776>       BMI.w JL_0_72AE
0002D8A0 <AmiBlitz3.ab2@9777>       MOVE.l A1,(A4)
0002D8A2 <AmiBlitz3.ab2@9778>       MOVEA.l A1,A4
0002D8A4 <AmiBlitz3.ab2@9779>       ADDQ.w #2,A4
0002D8A6 <AmiBlitz3.ab2@9780>       ADDQ.w #6,A1
0002D8AA <AmiBlitz3.ab2@9781>       CMP.w #$8,D0
0002D8AE <AmiBlitz3.ab2@9782>       BEQ.w JL_0_7290
0002D8B2 <AmiBlitz3.ab2@9783>         ANDI.w #$F,D0
0002D8B6 <AmiBlitz3.ab2@9784>         BNE.w JL_0_725C
0002D8BA <AmiBlitz3.ab2@9785>           BSR.w skiplibreg
0002D8BE <AmiBlitz3.ab2@9786>           LEA $C(A1),A1
0002D8C0 <AmiBlitz3.ab2@9787>           ADDQ.w #1,D7
0002D8C4 <AmiBlitz3.ab2@9788> BRA.w JL_0_7230
0002D8C8 <AmiBlitz3.ab2@9791>     BTST #$2,D0
0002D8CC <AmiBlitz3.ab2@9792>     BEQ.w JL_0_7274
0002D8CE <AmiBlitz3.ab2@9793>       ADDQ.w #4,A1
0002D8D0 <AmiBlitz3.ab2@9796>         TST.b (A1)+
0002D8D4 <AmiBlitz3.ab2@9797>       BPL.w JL_0_7266
0002D8D8 <AmiBlitz3.ab2@9798>       BSR.w aligna1
0002D8DC <AmiBlitz3.ab2@9799> BRA.w JL_0_7290
0002D8DE <AmiBlitz3.ab2@9802>       MOVE.w (A1)+,D0
0002D8E2 <AmiBlitz3.ab2@9803>       BMI.w JL_0_7290
0002D8E6 <AmiBlitz3.ab2@9804>       ANDI.w #$FF,D0
0002D8E8 <AmiBlitz3.ab2@9805>       ADDA.w D0,A1
0002D8EC <AmiBlitz3.ab2@9806>       BSR.w aligna1
0002D8F0 <AmiBlitz3.ab2@9807>       BSR.w skiplibreg
0002D8F4 <AmiBlitz3.ab2@9808>       LEA $C(A1),A1
0002D8F8 <AmiBlitz3.ab2@9809> BRA.w JL_0_7274
0002D8FA <AmiBlitz3.ab2@9812>     MOVE.l A1,(A3)
0002D8FC <AmiBlitz3.ab2@9813>     MOVEA.l A1,A3
0002D8FE <AmiBlitz3.ab2@9814>     ADDQ.w #4,A1
0002D900 <AmiBlitz3.ab2@9815>     MOVE.w D7,(A1)+
0002D902 <AmiBlitz3.ab2@9818>       TST.b (A1)+
0002D906 <AmiBlitz3.ab2@9819>     BNE.w JL_0_7298
0002D908 <AmiBlitz3.ab2@9822>       TST.b (A1)+
0002D90C <AmiBlitz3.ab2@9823>     BNE.w JL_0_729E
0002D910 <AmiBlitz3.ab2@9825>     BSR.w aligna1
0002D912 <AmiBlitz3.ab2@9826>     ADDQ.w #1,D7
0002D916 <AmiBlitz3.ab2@9827> BRA.w JL_0_7230
0002D91A <AmiBlitz3.ab2@9830>     TST.w $4(A2)
0002D91E <AmiBlitz3.ab2@9831>      BMI.w JL_0_72BA
0002D922 <AmiBlitz3.ab2@9832>     MOVE.w D7,$10(A2)
0002D924 <AmiBlitz3.ab2@9835>     ADDQ.w #2,A1
0002D926 <AmiBlitz3.ab2@9836>     TST.l (A1)+
0002D92A <AmiBlitz3.ab2@9837>      BEQ.w JL_0_72CC
0002D930 <AmiBlitz3.ab2@9838>     ADDQ.w #1,number_of_objects
0002D934 <AmiBlitz3.ab2@9839>     LEA $16(A1),A1
0002D936 <AmiBlitz3.ab2@9842>     SUBA.l A2,A1
0002D93A <AmiBlitz3.ab2@9843>     MOVE.l A1,$12(A2)
0002D93C <AmiBlitz3.ab2@9844>     MOVEA.l (A2),A2
0002D940 <AmiBlitz3.ab2@9845> BRA.w JL_0_720E
0002D942 <AmiBlitz3.ab2@9848>   CLR.l (A3)
0002D948 <AmiBlitz3.ab2@9849>   MOVE.l A7,errstack
0002D952 <AmiBlitz3.ab2@9850>   MOVE.l #AL_0_730E,errcont
0002D95A <AmiBlitz3.ab2@9851>   MOVE.w #$FFFF,ezerr
0002D95E <AmiBlitz3.ab2@9852>   MOVE.w #$FFFA,D1
0002D962 <AmiBlitz3.ab2@9853>    BSR.w JL_0_6F38
0002D968 <AmiBlitz3.ab2@9854>   MOVE.l A1,tempvm
0002D96C <AmiBlitz3.ab2@9855>   MOVE.w #$FDA7,D1
0002D970 <AmiBlitz3.ab2@9856>    BSR.w JL_0_6F38
0002D976 <AmiBlitz3.ab2@9857>   MOVE.l A1,ffplib
0002D978 <AmiBlitz3.ab2@9860> RTS
0002D97C <AmiBlitz3.ab2@9863> ffplib:  Ds.l 1
0002D97E <AmiBlitz3.ab2@9867>     TST.w (A1)+
0002D982 <AmiBlitz3.ab2@9868>     BEQ.w JL_0_7320
0002D984 <AmiBlitz3.ab2@9869>     ADDQ.w #2,A1
0002D988 <AmiBlitz3.ab2@9870> BRA.w skiplibreg
0002D98A <AmiBlitz3.ab2@9873> RTS
0002D98C <AmiBlitz3.ab2@9877>   EXG.l A1,A0
0002D990 <AmiBlitz3.ab2@9878>   BSR.w aligna1
0002D992 <AmiBlitz3.ab2@9879>   EXG.l A1,A0
0002D994 <AmiBlitz3.ab2@9880> RTS
0002D996 <AmiBlitz3.ab2@9883>   EXG.l D0,A1
0002D998 <AmiBlitz3.ab2@9884>   ADDQ.l #1,D0
0002D99C <AmiBlitz3.ab2@9885>   BCLR #$0,D0
0002D99E <AmiBlitz3.ab2@9886>   EXG.l D0,A1
0002D9A0 <AmiBlitz3.ab2@9887> RTS
0002D9A6 <AmiBlitz3.ab2@9891>   MOVEA.l _execbase,A6
0002D9AC <AmiBlitz3.ab2@9892>   MOVEA.l ptr_userlibs,A2
0002D9AE <AmiBlitz3.ab2@9893>   MOVE.l (A2),D0
0002D9B0 <AmiBlitz3.ab2@9894>   CLR.l (A2)
0002D9B2 <AmiBlitz3.ab2@9895>   MOVEA.l D0,A2
0002D9B6 <AmiBlitz3.ab2@9898>     CMPA.w #$0,A2
0002D9BA <AmiBlitz3.ab2@9899>     BEQ.w free_userlib
0002D9BE <AmiBlitz3.ab2@9901>     MOVE.l $20(A2),D0
0002D9C2 <AmiBlitz3.ab2@9902>     BEQ.b JL_0_7360
0002D9C4 <AmiBlitz3.ab2@9903>       LSL.l #2,D0
0002D9CA <AmiBlitz3.ab2@9904>       MOVE.l mempool,a0
0002D9CE <AmiBlitz3.ab2@9905>       MOVEA.l $24(A2),A1
0002D9D2 <AmiBlitz3.ab2@9906>       JSR _FreePooled(A6)
0002D9D4 <AmiBlitz3.ab2@9909>     MOVEA.l A2,A1
0002D9D8 <AmiBlitz3.ab2@9910>     MOVE.l $6(A1),D0
0002D9DE <AmiBlitz3.ab2@9911>     MOVE.l mempool,a0
0002D9E0 <AmiBlitz3.ab2@9912>     MOVEA.l (A2),A2
0002D9E6 <AmiBlitz3.ab2@9913>     MOVEA.l _execbase,A6
0002D9EA <AmiBlitz3.ab2@9914>     JSR _FreePooled(A6)
0002D9EE <AmiBlitz3.ab2@9915> BRA.w JL_0_7348
0002D9F2 <AmiBlitz3.ab2@9919>   BSR.w free_userlibs
0002D9F8 <AmiBlitz3.ab2@9920>   MOVEA.l _execbase,A6
0002D9FE <AmiBlitz3.ab2@9921>   CLR.l libpointer
0002DA04 <AmiBlitz3.ab2@9922>   MOVEA.l end_of_tokenlist,A0
0002DA06 <AmiBlitz3.ab2@9923>   CLR.l (A0)
0002DA0C <AmiBlitz3.ab2@9925>   MOVE.l size_acidlibs,D0
0002DA10 <AmiBlitz3.ab2@9926>   BEQ.b JL_0_73A2
0002DA16 <AmiBlitz3.ab2@9927>     MOVE.l ptr_acidlibs,D1
0002DA1A <AmiBlitz3.ab2@9928>     BEQ.b JL_0_73A2
0002DA20 <AmiBlitz3.ab2@9929>       CLR.l ptr_acidlibs
0002DA22 <AmiBlitz3.ab2@9930>       MOVEA.l D1,A1
0002DA28 <AmiBlitz3.ab2@9931>       MOVE.l mempool,a0
0002DA2E <AmiBlitz3.ab2@9932>       MOVEA.l _execbase,A6
0002DA32 <AmiBlitz3.ab2@9933>       JSR _FreePooled(A6)                                 ; free acidlibs
0002DA38 <AmiBlitz3.ab2@9936>   MOVE.l size_deflibs,D0
0002DA3C <AmiBlitz3.ab2@9937>   BEQ.b JL_0_73BE
0002DA42 <AmiBlitz3.ab2@9938>     MOVE.l ptr_deflibs,D1
0002DA46 <AmiBlitz3.ab2@9939>     BEQ.b JL_0_73BE
0002DA4C <AmiBlitz3.ab2@9940>       CLR.l ptr_deflibs                                    ; d0: memorySize
0002DA4E <AmiBlitz3.ab2@9941>       MOVEA.l D1,A1                                        ; a1: memory
0002DA54 <AmiBlitz3.ab2@9942>       MOVE.l mempool,a0                                    ; a0: poolHeader
0002DA5A <AmiBlitz3.ab2@9943>       MOVEA.l _execbase,A6
0002DA5E <AmiBlitz3.ab2@9944>       JSR _FreePooled(A6)                                  ; free deflibs
0002DA60 <AmiBlitz3.ab2@9947> RTS
0002DA66 <AmiBlitz3.ab2@9951>   MOVEA.l currentmacroaddr,A0
0002DA68 <AmiBlitz3.ab2@9952>   MOVEA.l (A0),A2
0002DA6A <AmiBlitz3.ab2@9953>   CLR.l (A0)
0002DA70 <AmiBlitz3.ab2@9954>   MOVEA.l _execbase,A6
0002DA74 <AmiBlitz3.ab2@9957>     CMPA.w #$0,A2
0002DA78 <AmiBlitz3.ab2@9958>     BEQ.w JL_0_73FA
0002DA7A <AmiBlitz3.ab2@9959>     MOVEQ.l #$00,D0
0002DA7E <AmiBlitz3.ab2@9960>     MOVE.w $8(A2),D0
0002DA82 <AmiBlitz3.ab2@9961>     BEQ.w JL_0_73E8
0002DA86 <AmiBlitz3.ab2@9962>     MOVEA.l $4(A2),A1
0002DA8C <AmiBlitz3.ab2@9963>     MOVE.l mempool,a0
0002DA90 <AmiBlitz3.ab2@9964>     JSR _FreePooled(A6)
0002DA92 <AmiBlitz3.ab2@9967>     MOVEA.l A2,A1
0002DA94 <AmiBlitz3.ab2@9968>     MOVEA.l (A2),A2
0002DA96 <AmiBlitz3.ab2@9969>     MOVEQ.l #$00,D0
0002DA9A <AmiBlitz3.ab2@9970>     MOVE.b $C(A1),D0
0002DAA0 <AmiBlitz3.ab2@9971>     MOVE.l mempool2,a0
0002DAA4 <AmiBlitz3.ab2@9972>     JSR _FreePooled(A6)
0002DAA8 <AmiBlitz3.ab2@9973> BRA.w JL_0_73CE
0002DAAA <AmiBlitz3.ab2@9976> RTS
0002DAB0 <AmiBlitz3.ab2@9980>   MOVEA.l templabel,A2
0002DAB6 <AmiBlitz3.ab2@9981>   CLR.l templabel
0002DAB8 <AmiBlitz3.ab2@9982> RTS
0002DABE <AmiBlitz3.ab2@9985>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
0002DAC2 <AmiBlitz3.ab2@9988>     CMPA.w #$0,A2
0002DAC6 <AmiBlitz3.ab2@9989>     BEQ.w JL_0_7426
0002DAC8 <AmiBlitz3.ab2@9990>     MOVEQ.l #$00,D0
0002DACC <AmiBlitz3.ab2@9991>     MOVE.b $E(A2),D0                                       ;labeltemp
0002DACE <AmiBlitz3.ab2@9992>     MOVEA.l A2,A1
0002DAD0 <AmiBlitz3.ab2@9993>     MOVEA.l (A2),A2
0002DAD6 <AmiBlitz3.ab2@9994>     MOVE.l mempool2,a0
0002DADA <AmiBlitz3.ab2@9996> BRA.w JL_0_740C
0002DADC <AmiBlitz3.ab2@9999> RTS
0002DAE2 <AmiBlitz3.ab2@10003>   MOVEA.l data1,A4
0002DAE8 <AmiBlitz3.ab2@10004>   CMPA.l data2at,A4
0002DAEC <AmiBlitz3.ab2@10005>   BCC.w JL_0_7442
0002DAEE <AmiBlitz3.ab2@10006>     MOVE.b D1,(A4)+
0002DAF4 <AmiBlitz3.ab2@10007>     MOVE.l A4,data1
0002DAF6 <AmiBlitz3.ab2@10008> RTS
0002DAFE <AmiBlitz3.ab2@10011>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
0002DB04 <AmiBlitz3.ab2@10012>   ADDQ.l #1,data1
0002DB06 <AmiBlitz3.ab2@10013> RTS
0002DB08 <AmiBlitz3.ab2@10017>   SWAP D1
0002DB0C <AmiBlitz3.ab2@10018>   BSR.w pokedata1
0002DB0E <AmiBlitz3.ab2@10019>   SWAP D1
0002DB14 <AmiBlitz3.ab2@10022>   MOVEA.l data1,A4
0002DB1A <AmiBlitz3.ab2@10023>   CMPA.l data2at,A4
0002DB1E <AmiBlitz3.ab2@10024>    BCC.w JL_0_7474
0002DB20 <AmiBlitz3.ab2@10025>   MOVE.w D1,(A4)+
0002DB26 <AmiBlitz3.ab2@10026>   MOVE.l A4,data1
0002DB28 <AmiBlitz3.ab2@10027> RTS
0002DB30 <AmiBlitz3.ab2@10030>   MOVE.w #$FFFF,dontwrite
0002DB36 <AmiBlitz3.ab2@10031>   ADDQ.l #2,data1
0002DB38 <AmiBlitz3.ab2@10032> RTS
0002DB3E <AmiBlitz3.ab2@10036>   MOVE.l data1,D3                                      ;write local string/type allocs
0002DB40 <AmiBlitz3.ab2@10037>   MOVEQ.l #$00,D4
0002DB44 <AmiBlitz3.ab2@10040>   CMPA.w #$0,A2
0002DB48 <AmiBlitz3.ab2@10041>    BEQ.w JL_0_74CAc
0002DB4C <AmiBlitz3.ab2@10042>   TST.w $6(A2)
0002DB50 <AmiBlitz3.ab2@10043>    BNE.w JL_0_74C4c
0002DB54 <AmiBlitz3.ab2@10044>   MOVEA.l $A(A2),A3
0002DB5C <AmiBlitz3.ab2@10045>   CMPI.l #$100,$4(A3)
0002DB60 <AmiBlitz3.ab2@10046>    BCS.w JL_0_74C4c
0002DB64 <AmiBlitz3.ab2@10047>   MOVE.w $4(A2),D1
0002DB68 <AmiBlitz3.ab2@10048>    BSR.w pokedata1
0002DB6C <AmiBlitz3.ab2@10049>   MOVE.w $8(A3),D1
0002DB70 <AmiBlitz3.ab2@10050>    BSR.w pokedata1
0002DB72 <AmiBlitz3.ab2@10051>   ADDQ.w #1,D4
0002DB74 <AmiBlitz3.ab2@10054>    MOVEA.l (A2),A2
0002DB78 <AmiBlitz3.ab2@10055> BRA.w JL_0_7492c
0002DB7A <AmiBlitz3.ab2@10058>    TST.w D4
0002DB7E <AmiBlitz3.ab2@10059>    BEQ.w JL_0_74E0
0002DB82 <AmiBlitz3.ab2@10060>   MOVE.w #$FF37,D1
0002DB86 <AmiBlitz3.ab2@10061>    BSR.w uselib
0002DB8A <AmiBlitz3.ab2@10062>   MOVE.w #$FFFA,D1
0002DB8E <AmiBlitz3.ab2@10063> BRA.w uselib
0002DB94 <AmiBlitz3.ab2@10071>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
0002DB9A <AmiBlitz3.ab2@10074>   MOVE.l data1,D3
0002DB9C <AmiBlitz3.ab2@10075>   MOVEQ.l #$00,D4
0002DBA2 <AmiBlitz3.ab2@10076>   TST.b iserror
0002DBA6 <AmiBlitz3.ab2@10077>   BEQ JL_0_7492
0002DBA8 <AmiBlitz3.ab2@10078>   RTS
0002DBAC <AmiBlitz3.ab2@10080>    CMPA.w #$0,A2
0002DBB0 <AmiBlitz3.ab2@10081>    BEQ.w JL_0_74CA
0002DBB4 <AmiBlitz3.ab2@10082>   TST.w $6(A2)
0002DBB8 <AmiBlitz3.ab2@10083>    BNE.w JL_0_74C4
0002DBBC <AmiBlitz3.ab2@10084>   MOVEA.l $A(A2),A3
0002DBC4 <AmiBlitz3.ab2@10085>   CMPI.l #$100,$4(A3)
0002DBC8 <AmiBlitz3.ab2@10086>    BCS.w JL_0_74C4
0002DBCC <AmiBlitz3.ab2@10087>   MOVE.w $4(A2),D1
0002DBD0 <AmiBlitz3.ab2@10088>    BSR.w pokedata1
0002DBD4 <AmiBlitz3.ab2@10089>   MOVE.w $8(A3),D1
0002DBD8 <AmiBlitz3.ab2@10090>    BSR.w pokedata1
0002DBDA <AmiBlitz3.ab2@10091>   ADDQ.w #1,D4
0002DBDC <AmiBlitz3.ab2@10094>   MOVEA.l (A2),A2
0002DBE0 <AmiBlitz3.ab2@10095> BRA.w JL_0_7492
0002DBE6 <AmiBlitz3.ab2@10099>   MOVEA.l sharebase,A2
0002DBEA <AmiBlitz3.ab2@10102>   CMPA.w #$0,A2
0002DBEE <AmiBlitz3.ab2@10103>    BEQ.w JL_0_74CAb
0002DBF2 <AmiBlitz3.ab2@10105>   TST.w $6(A2)
0002DBF6 <AmiBlitz3.ab2@10106>    BNE.w JL_0_74C4b
0002DBFA <AmiBlitz3.ab2@10107>   MOVEA.l $A(A2),A3
0002DC02 <AmiBlitz3.ab2@10108>   CMPI.l #$100,$4(A3)
0002DC06 <AmiBlitz3.ab2@10109>    BCS.w JL_0_74C4b
0002DC0A <AmiBlitz3.ab2@10110>   MOVE.w $4(A2),D1
0002DC0E <AmiBlitz3.ab2@10111>    BSR.w pokedata1
0002DC12 <AmiBlitz3.ab2@10112>   MOVE.w $8(A3),D1
0002DC16 <AmiBlitz3.ab2@10113>    BSR.w pokedata1
0002DC18 <AmiBlitz3.ab2@10114>   ADDQ.w #1,D4
0002DC1A <AmiBlitz3.ab2@10117>   MOVEA.l (A2),A2
0002DC1E <AmiBlitz3.ab2@10118> BRA.w JL_0_7492b
0002DC20 <AmiBlitz3.ab2@10121>    TST.w D4
0002DC24 <AmiBlitz3.ab2@10122>    BEQ.w JL_0_74E0
0002DC28 <AmiBlitz3.ab2@10123>   MOVE.w #$FF37,D1
0002DC2C <AmiBlitz3.ab2@10124>    BSR.w uselib                                            ;use statics lib
0002DC30 <AmiBlitz3.ab2@10125>   MOVE.w #$FFFA,D1                                         ;use memlib
0002DC34 <AmiBlitz3.ab2@10126> BRA.w uselib
0002DC36 <AmiBlitz3.ab2@10129> RTS
0002DC3C <AmiBlitz3.ab2@10133>   MOVE.w numtoa2,D1
0002DC40 <AmiBlitz3.ab2@10134>    BSR.w writeword
0002DC44 <AmiBlitz3.ab2@10135>    BSR.w addoff
0002DC46 <AmiBlitz3.ab2@10136>   MOVE.l D3,D1
0002DC4A <AmiBlitz3.ab2@10137>    BSR.w writelong
0002DC4C <AmiBlitz3.ab2@10138>   SUBQ.w #1,D4
0002DC52 <AmiBlitz3.ab2@10139>   MOVE.w D4,endarray+2
0002DC58 <AmiBlitz3.ab2@10140>   MOVE.l endarray,D1
0002DC5C <AmiBlitz3.ab2@10141> BRA.w writelong
0002DC5E <AmiBlitz3.ab2@10145>   MOVE.l D3,-(A7)
0002DC64 <AmiBlitz3.ab2@10148>   MOVEA.l _dosbase,A6
0002DC68 <AmiBlitz3.ab2@10149>   JSR _Write(a6)
0002DC6A <AmiBlitz3.ab2@10151>   CMP.l (A7)+,D0
0002DC6E <AmiBlitz3.ab2@10152>    BNE.w JL_0_7516
0002DC70 <AmiBlitz3.ab2@10153> RTS
0002DC72 <AmiBlitz3.ab2@10156>   MOVE.l D7,D1
0002DC78 <AmiBlitz3.ab2@10158>   MOVEA.l _dosbase,A6
0002DC7C <AmiBlitz3.ab2@10159>   JSR _Close(a6)
0002DC82 <AmiBlitz3.ab2@10162> JMP error_create_exe
0002DC88 <AmiBlitz3.ab2@10171>   MOVE.l A7,errstack
0002DC8C <AmiBlitz3.ab2@10172>   MOVEM.l d2-d7/a2-a6,-(a7)
0002DC96 <AmiBlitz3.ab2@10173>   MOVE.l #AL_0_7790,errcont
0002DC9C <AmiBlitz3.ab2@10174>    JSR call_setpointerbusy
0002DCA4 <AmiBlitz3.ab2@10175>   MOVE.w #$FFFF,anyerrs
0002DCAE <AmiBlitz3.ab2@10176>   CMP.l #-1,chipstart
0002DCB2 <AmiBlitz3.ab2@10177>   BEQ 'l01
0002DCB8 <AmiBlitz3.ab2@10178>   MOVE.l chipend,d1
0002DCBA <AmiBlitz3.ab2@10179>   ADDQ.l #3,d1
0002DCC0 <AmiBlitz3.ab2@10180>   AND.l #$fffffffc,d1                                      ;bug
0002DCC6 <AmiBlitz3.ab2@10181>   MOVE.l d1,chipend
0002DCC8 <AmiBlitz3.ab2@10182>   MOVE.l d1,a1
0002DCCE <AmiBlitz3.ab2@10183>   MOVE.l chipstart,a0
0002DCD0 <AmiBlitz3.ab2@10184>   MOVE.l a1,d1
0002DCD2 <AmiBlitz3.ab2@10185>   SUB.l a0,d1
0002DCD8 <AmiBlitz3.ab2@10186>   MOVE.l d1,chipsize
0002DCE2 <AmiBlitz3.ab2@10189>   CMP.l #-1,bssstart
0002DCE6 <AmiBlitz3.ab2@10190>   BEQ 'l11
0002DCEC <AmiBlitz3.ab2@10191>   MOVE.l realbssend,a1
0002DCF2 <AmiBlitz3.ab2@10192>   MOVE.l bssstart,a0
0002DCF4 <AmiBlitz3.ab2@10193>   MOVE.l a1,d1
0002DCF6 <AmiBlitz3.ab2@10194>   SUB.l a0,d1
0002DCFC <AmiBlitz3.ab2@10195>   MOVE.l d1,bsssize
0002DD00 <AmiBlitz3.ab2@10196>   BEQ 'l11
0002DD02 <AmiBlitz3.ab2@10199>   TST.b (a0)+
0002DD06 <AmiBlitz3.ab2@10200>   BEQ 'l31
0002DD0C <AmiBlitz3.ab2@10201>   TST.b debugmode
0002DD10 <AmiBlitz3.ab2@10202>   BEQ 'l1
0002DD16 <AmiBlitz3.ab2@10203>   TST.b exdebug
0002DD1A <AmiBlitz3.ab2@10204>   BNE 'l31
0002DD20 <AmiBlitz3.ab2@10207>   MOVE.l #nodata,-(a7)
0002DD26 <AmiBlitz3.ab2@10208> JMP handle_compileerror
0002DD28 <AmiBlitz3.ab2@10211>   CMP.l a0,a1
0002DD2C <AmiBlitz3.ab2@10212>   BGT 'l32
0002DD32 <AmiBlitz3.ab2@10213>   MOVE.l bssend,d1
0002DD34 <AmiBlitz3.ab2@10214>   ADDQ.l #3,d1
0002DD3A <AmiBlitz3.ab2@10215>   AND.l #$fffffffc,d1                                      ;bug
0002DD40 <AmiBlitz3.ab2@10216>   MOVE.l d1,bssend
0002DD42 <AmiBlitz3.ab2@10217>   MOVE.l d1,a1
0002DD48 <AmiBlitz3.ab2@10218>   MOVE.l bssstart,a0
0002DD4A <AmiBlitz3.ab2@10219>   MOVE.l a1,d1
0002DD4C <AmiBlitz3.ab2@10220>   SUB.l a0,d1
0002DD52 <AmiBlitz3.ab2@10221>   MOVE.l d1,bsssize
0002DD56 <AmiBlitz3.ab2@10224>   MOVEM.l d5-d7/d3,-(a7)
0002DD5C <AmiBlitz3.ab2@10225>   MOVE.w dontwrite,D1
0002DD60 <AmiBlitz3.ab2@10226>   BNE.w JL_0_757C
0002DD66 <AmiBlitz3.ab2@10227>   MOVE.l chipsize,d5
0002DD6C <AmiBlitz3.ab2@10228>   MOVE.l bsssize,d3
0002DD72 <AmiBlitz3.ab2@10229>   MOVE.l chipstart,d7
0002DD78 <AmiBlitz3.ab2@10230>   MOVE.l bssstart,d6
0002DD7E <AmiBlitz3.ab2@10231>   MOVEA.l hunkoffsetbase,A2
0002DD84 <AmiBlitz3.ab2@10232>   MOVEA.l destbufferstart,A1
0002DD86 <AmiBlitz3.ab2@10233>   MOVE.l A1,D2
0002DD8C <AmiBlitz3.ab2@10234>   ADD.l noinits,D2
0002DD92 <AmiBlitz3.ab2@10235>   CLR.l hunkoffsetnum
0002DD96 <AmiBlitz3.ab2@10238>   CMPA.w #$0,A2
0002DD9A <AmiBlitz3.ab2@10239>    BEQ.w JL_0_757C
0002DD9E <AmiBlitz3.ab2@10240>   MOVE.l $4(A2),D0
0002DDA2 <AmiBlitz3.ab2@10241>    LEA $0(a1,d0.l),a0
0002DDA4 <AmiBlitz3.ab2@10242>    MOVE.l (a0),d1
0002DDA6 <AmiBlitz3.ab2@10243>   TST.l d1
0002DDAA <AmiBlitz3.ab2@10244>    BMI.w 'lm1
0002DDB2 <AmiBlitz3.ab2@10245>   MOVE.b #0,newhunk
0002DDBC <AmiBlitz3.ab2@10246>   CMP.l #-1,chipstart
0002DDC0 <AmiBlitz3.ab2@10247>   BEQ 'l10
0002DDC6 <AmiBlitz3.ab2@10248>   CMP.l chipstart,d1
0002DDCA <AmiBlitz3.ab2@10249>   BLT 'l10
0002DDD2 <AmiBlitz3.ab2@10250>   MOVE.b #1,newhunk
0002DDD8 <AmiBlitz3.ab2@10251>   CMP.l chipend,d1
0002DDDC <AmiBlitz3.ab2@10252>   BGE 'l110
0002DDDE <AmiBlitz3.ab2@10253>   SUB.l d7,(a0)
0002DDE6 <AmiBlitz3.ab2@10254>   ADD.l #$80000000,4(a2)
0002DDEA <AmiBlitz3.ab2@10255> BRA JL_0_7576
0002DDEE <AmiBlitz3.ab2@10258>   SUB.l d5,0(a0)
0002DDF8 <AmiBlitz3.ab2@10261>   CMP.l #-1,bssstart
0002DDFC <AmiBlitz3.ab2@10262>     BEQ 'l11
0002DE02 <AmiBlitz3.ab2@10263>   CMP.l bssstart,d1
0002DE06 <AmiBlitz3.ab2@10264>   BLT 'l11
0002DE0C <AmiBlitz3.ab2@10265>   CMP.l bssend,d1
0002DE10 <AmiBlitz3.ab2@10266>   BGE 'l111
0002DE16 <AmiBlitz3.ab2@10267>   TST.b newhunk
0002DE1A <AmiBlitz3.ab2@10268>   BEQ 'ln1
0002DE1C <AmiBlitz3.ab2@10269>   ADD.l d5,(a0)
0002DE1E <AmiBlitz3.ab2@10272>   SUB.l d6,(a0)
0002DE26 <AmiBlitz3.ab2@10273>   ADD.l #$40000000,4(a2)
0002DE2A <AmiBlitz3.ab2@10274> BRA JL_0_7576
0002DE2E <AmiBlitz3.ab2@10277>   SUB.l d3,0(a0)
0002DE30 <AmiBlitz3.ab2@10280>   SUB.l D2,(A0)
0002DE36 <AmiBlitz3.ab2@10283>   ADDQ.l #1,hunkoffsetnum
0002DE38 <AmiBlitz3.ab2@10286>    MOVEA.l (A2),A2
0002DE3C <AmiBlitz3.ab2@10287> BRA.w JL_0_755E
0002DE40 <AmiBlitz3.ab2@10291>   MOVEM.l (a7)+,d5-d7/d3
0002DE46 <AmiBlitz3.ab2@10292>   MOVE.l ptr_newexefilename,D1
0002DE4C <AmiBlitz3.ab2@10293>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002DE52 <AmiBlitz3.ab2@10294>   MOVEA.l _dosbase,A6
0002DE56 <AmiBlitz3.ab2@10295>    JSR _Open(A6)
0002DE58 <AmiBlitz3.ab2@10296>   MOVE.l D0,D7
0002DE5C <AmiBlitz3.ab2@10297>    BEQ.w execerr
0002DE62 <AmiBlitz3.ab2@10298>   MOVE.l objlen,D0
0002DE68 <AmiBlitz3.ab2@10299>   SUB.l #moremem,d0
0002DE6E <AmiBlitz3.ab2@10300>   SUB.l noinits,D0
0002DE78 <AmiBlitz3.ab2@10301>   CMP.l #-1,bssstart
0002DE7C <AmiBlitz3.ab2@10302>   BEQ 'l60
0002DE82 <AmiBlitz3.ab2@10303>   SUB.l bsssize,d0
0002DE88 <AmiBlitz3.ab2@10304>   SUB.l chipsize,d0
0002DE8C <AmiBlitz3.ab2@10305> BRA.s 'l61
0002DE96 <AmiBlitz3.ab2@10308>   CMP.l #-1,chipstart
0002DE9A <AmiBlitz3.ab2@10309>   BEQ 'l61
0002DEA0 <AmiBlitz3.ab2@10310>   SUB.l bsssize,d0
0002DEA6 <AmiBlitz3.ab2@10311>   SUB.l chipsize,d0
0002DEA8 <AmiBlitz3.ab2@10314>   ADDQ.l #3,D0
0002DEAA <AmiBlitz3.ab2@10315>   LSR.l #2,D0
0002DEB0 <AmiBlitz3.ab2@10316>   MOVE.l D0,tstsize1
0002DEB6 <AmiBlitz3.ab2@10317>   MOVE.l D0,tstsize2
0002DEB8 <AmiBlitz3.ab2@10318>   MOVE.l D7,D1
0002DEBE <AmiBlitz3.ab2@10319>   MOVE.l #tsthead,D2                                      ;hunkbegin
0002DEC0 <AmiBlitz3.ab2@10320>   MOVEQ.l #$20,D3
0002DECA <AmiBlitz3.ab2@10321>   CMP.l #-1,bssstart
0002DECE <AmiBlitz3.ab2@10322>   BEQ 'lb1
0002DED8 <AmiBlitz3.ab2@10323>   CMP.l #-1,chipstart
0002DEDC <AmiBlitz3.ab2@10324>   BEQ 'lb1
0002DEE6 <AmiBlitz3.ab2@10325>   MOVE.l #1,bssnum
0002DEF0 <AmiBlitz3.ab2@10326>   MOVE.l #2,chipnum
0002DEF2 <AmiBlitz3.ab2@10327>   MOVEQ.l #$28,D3
0002DEF8 <AmiBlitz3.ab2@10328>   MOVE.l bsssize,d2
0002DEFA <AmiBlitz3.ab2@10329>   ADDQ.l #3,d2
0002DEFC <AmiBlitz3.ab2@10330>   ASR.l #2,d2
0002DF02 <AmiBlitz3.ab2@10331>   MOVE.l d2,hunkend+8
0002DF08 <AmiBlitz3.ab2@10332>   MOVE.l d2,bsssize3
0002DF0E <AmiBlitz3.ab2@10333>   MOVE.l chipsize,d2
0002DF10 <AmiBlitz3.ab2@10334>   ADDQ.l #3,d2
0002DF12 <AmiBlitz3.ab2@10335>   ASR.l #2,d2
0002DF18 <AmiBlitz3.ab2@10336>   MOVE.l d2,chipsize2
0002DF22 <AmiBlitz3.ab2@10337>   ADD.l #$40000000,chipsize2
0002DF28 <AmiBlitz3.ab2@10338>   MOVE.l d2,hunkend2+8
0002DF2E <AmiBlitz3.ab2@10339>   MOVE.l D0,tstsize1c
0002DF34 <AmiBlitz3.ab2@10340>   MOVE.l D0,tstsize2c
0002DF3A <AmiBlitz3.ab2@10341>   MOVE.l #hunkbegin2,d2
0002DF3E <AmiBlitz3.ab2@10342> BRA 'l100
0002DF48 <AmiBlitz3.ab2@10345>   CMP.l #-1,bssstart
0002DF4C <AmiBlitz3.ab2@10346>   BEQ 'l10
0002DF56 <AmiBlitz3.ab2@10347>   MOVE.l #1,bssnum
0002DF58 <AmiBlitz3.ab2@10348>   MOVEQ.l #$24,D3
0002DF5E <AmiBlitz3.ab2@10349>   MOVE.l bsssize,d2
0002DF60 <AmiBlitz3.ab2@10350>   ADDQ.l #3,d2
0002DF62 <AmiBlitz3.ab2@10351>   ASR.l #2,d2
0002DF68 <AmiBlitz3.ab2@10352>   MOVE.l d2,hunkend+8
0002DF6E <AmiBlitz3.ab2@10353>   MOVE.l d2,bsssize2
0002DF74 <AmiBlitz3.ab2@10354>   MOVE.l D0,tstsize1b
0002DF7A <AmiBlitz3.ab2@10355>   MOVE.l D0,tstsize2b
0002DF80 <AmiBlitz3.ab2@10356>   MOVE.l #hunkbegin,d2
0002DF8A <AmiBlitz3.ab2@10359>   CMP.l #-1,chipstart
0002DF8E <AmiBlitz3.ab2@10360>   BEQ 'l100
0002DF98 <AmiBlitz3.ab2@10361>   MOVE.l #1,chipnum
0002DF9A <AmiBlitz3.ab2@10362>   MOVEQ.l #$24,D3
0002DFA0 <AmiBlitz3.ab2@10363>   MOVE.l chipsize,d2
0002DFA2 <AmiBlitz3.ab2@10364>   ADDQ.l #3,d2
0002DFA4 <AmiBlitz3.ab2@10365>   ASR.l #2,d2
0002DFAA <AmiBlitz3.ab2@10366>   MOVE.l d2,hunkend2+8
0002DFB0 <AmiBlitz3.ab2@10367>   MOVE.l d2,bsssize2
0002DFBA <AmiBlitz3.ab2@10368>   ADD.l #$40000000,bsssize2
0002DFC0 <AmiBlitz3.ab2@10369>   MOVE.l D0,tstsize1b
0002DFC6 <AmiBlitz3.ab2@10370>   MOVE.l D0,tstsize2b
0002DFCC <AmiBlitz3.ab2@10371>   MOVE.l #hunkbegin,d2
0002DFD0 <AmiBlitz3.ab2@10374>    BSR.w mywrite
0002DFD6 <AmiBlitz3.ab2@10375>   MOVE.l destbufferstart,D2
0002DFDC <AmiBlitz3.ab2@10376>   ADD.l noinits,D2
0002DFE2 <AmiBlitz3.ab2@10377>   MOVE.l objlen,D3
0002DFE8 <AmiBlitz3.ab2@10378>   SUB.l #moremem,d3
0002DFEE <AmiBlitz3.ab2@10379>   SUB.l noinits,D3
0002DFF8 <AmiBlitz3.ab2@10380>   CMP.l #-1,bssstart
0002DFFC <AmiBlitz3.ab2@10381>   BNE 'l40
0002E006 <AmiBlitz3.ab2@10382>   CMP.l #-1,chipstart
0002E00A <AmiBlitz3.ab2@10383>   BNE 'l40
0002E00E <AmiBlitz3.ab2@10384> BRA 'l41
0002E014 <AmiBlitz3.ab2@10387>   MOVE.l codeend,d1
0002E016 <AmiBlitz3.ab2@10388>     SUB.l d2,d1
0002E018 <AmiBlitz3.ab2@10389>     MOVE.l d1,d3
0002E01E <AmiBlitz3.ab2@10390>   SUB.l bsssize,d3
0002E024 <AmiBlitz3.ab2@10391>   SUB.l chipsize,d3
0002E026 <AmiBlitz3.ab2@10392>   MOVE.l D7,D1
0002E02A <AmiBlitz3.ab2@10393>   BSR.w mywrite
0002E030 <AmiBlitz3.ab2@10394>   MOVE.l objlen,D3
0002E036 <AmiBlitz3.ab2@10395>   SUB.l #moremem,d3
0002E03C <AmiBlitz3.ab2@10396>   SUB.l noinits,D3
0002E03E <AmiBlitz3.ab2@10397>   MOVE.l d3,d1
0002E044 <AmiBlitz3.ab2@10398>   MOVE.l destbufferstart,D2
0002E04A <AmiBlitz3.ab2@10399>   ADD.l noinits,D2
0002E04C <AmiBlitz3.ab2@10400>   ADD.l d2,d1
0002E052 <AmiBlitz3.ab2@10401>   SUB.l codeend,d1
0002E054 <AmiBlitz3.ab2@10402>   MOVE.l d1,d3
0002E05A <AmiBlitz3.ab2@10403>   MOVE.l codeend,d2
0002E05C <AmiBlitz3.ab2@10406>   MOVE.l d2,d1
0002E05E <AmiBlitz3.ab2@10407>   ADD.l d3,d1
0002E060 <AmiBlitz3.ab2@10408>   ADDQ.l #3,D1
0002E066 <AmiBlitz3.ab2@10409>   ANDI.l #$FFFFFFFC,D1
0002E068 <AmiBlitz3.ab2@10410>   SUB.l d2,d1
0002E06A <AmiBlitz3.ab2@10411>   MOVE.l d1,d3
0002E06C <AmiBlitz3.ab2@10412>   MOVE.l D7,D1
0002E070 <AmiBlitz3.ab2@10413>    BSR.w mywrite
0002E07A <AmiBlitz3.ab2@10414>   MOVE.l hunkoffsetcounter,tstsize3
0002E07E <AmiBlitz3.ab2@10415>    BEQ.w JL_0_7646
0002E080 <AmiBlitz3.ab2@10416>   MOVE.l D7,D1
0002E086 <AmiBlitz3.ab2@10417>   MOVE.l #tstend,D2
0002E088 <AmiBlitz3.ab2@10418>   MOVEQ.l #$04,D3
0002E08C <AmiBlitz3.ab2@10419>    BSR.w mywrite
0002E092 <AmiBlitz3.ab2@10420>    MOVEA.l _execbase,A6
0002E098 <AmiBlitz3.ab2@10421>    MOVE.l hunkoffsetcounter,d0
0002E09A <AmiBlitz3.ab2@10422>    ASL.l #2,d0
0002E0A0 <AmiBlitz3.ab2@10423>    ADD.l #12,d0
0002E0A2 <AmiBlitz3.ab2@10424>    MOVEQ #0,d1
0002E0A6 <AmiBlitz3.ab2@10425>    JSR _AllocMem(a6)
0002E0A8 <AmiBlitz3.ab2@10426>    TST.l d0
0002E0AC <AmiBlitz3.ab2@10427>    BEQ nomem
0002E0B2 <AmiBlitz3.ab2@10428>    MOVE.l noinits,D4
0002E0B4 <AmiBlitz3.ab2@10429>    MOVE.l d5,-(a7)
0002E0B6 <AmiBlitz3.ab2@10430>    MOVE.l d0,d5
0002E0B8 <AmiBlitz3.ab2@10431>    MOVE.l d0,a1
0002E0BE <AmiBlitz3.ab2@10432>    MOVEA.l hunkoffsetbase,A2
0002E0C6 <AmiBlitz3.ab2@10433>    MOVE.b #0,newhunk
0002E0CA <AmiBlitz3.ab2@10436>   CMPA.w #$0,A2
0002E0CE <AmiBlitz3.ab2@10437>    BEQ.w savehunk
0002E0D4 <AmiBlitz3.ab2@10438>   MOVE.l destbufferstart,D2
0002E0DA <AmiBlitz3.ab2@10439>   ADD.l noinits,D2
0002E0DE <AmiBlitz3.ab2@10440>   MOVE.l  $4(A2),d1
0002E0E2 <AmiBlitz3.ab2@10441>   BTST #31,d1
0002E0E6 <AmiBlitz3.ab2@10442>   BEQ 'lh1
0002E0EE <AmiBlitz3.ab2@10443>   MOVE.b #1,newhunk
0002E0F2 <AmiBlitz3.ab2@10444> BRA 'lh3
0002E0F6 <AmiBlitz3.ab2@10447>   BTST #30,d1
0002E0FA <AmiBlitz3.ab2@10448>   BEQ 'lh2
0002E102 <AmiBlitz3.ab2@10449>   MOVE.b #1,newhunk
0002E106 <AmiBlitz3.ab2@10450> BRA 'lh3
0002E108 <AmiBlitz3.ab2@10453>   ADD.l d1,d2
0002E10E <AmiBlitz3.ab2@10454>   CMP.l chipend,d2
0002E112 <AmiBlitz3.ab2@10455>   BLT 'l100
0002E118 <AmiBlitz3.ab2@10456>   SUB.l chipsize,d1
0002E11E <AmiBlitz3.ab2@10459>   CMP.l bssend,d2
0002E122 <AmiBlitz3.ab2@10460>   BLT 'l101
0002E128 <AmiBlitz3.ab2@10461>   SUB.l bsssize,d1
0002E12A <AmiBlitz3.ab2@10464>   MOVE.l d1,(a1)
0002E12C <AmiBlitz3.ab2@10465>   SUB.l D4,(A1)+
0002E12E <AmiBlitz3.ab2@10468>   MOVEA.l (A2),A2
0002E132 <AmiBlitz3.ab2@10469> BRA.w menu_createresidentfile__oloopb
0002E134 <AmiBlitz3.ab2@10473>   MOVE.l D7,D1
0002E13A <AmiBlitz3.ab2@10474>   MOVEA.l _dosbase,A6
0002E144 <AmiBlitz3.ab2@10475>   MOVE.l hunkoffsetnum,tstsize3
0002E148 <AmiBlitz3.ab2@10476>   BEQ 'ln1
0002E14E <AmiBlitz3.ab2@10477>   MOVE.l #tstend+4,d2
0002E150 <AmiBlitz3.ab2@10478>     MOVEQ #8,d3
0002E154 <AmiBlitz3.ab2@10479>    JSR _Write(A6)
0002E156 <AmiBlitz3.ab2@10480>   MOVE.l d7,d1
0002E15C <AmiBlitz3.ab2@10481>   MOVE.l hunkoffsetnum,d3
0002E15E <AmiBlitz3.ab2@10482>   ASL.l #2,d3
0002E160 <AmiBlitz3.ab2@10483>   MOVE.l d5,D2
0002E164 <AmiBlitz3.ab2@10484>   JSR _Write(a6)
0002E16A <AmiBlitz3.ab2@10487>   TST.b newhunk
0002E16E <AmiBlitz3.ab2@10488>   BEQ 'l10
0002E174 <AmiBlitz3.ab2@10489>   MOVEA.l hunkoffsetbase,A2
0002E176 <AmiBlitz3.ab2@10490>   MOVE.l d5,a0
0002E178 <AmiBlitz3.ab2@10491>   ADDQ #8,a0
0002E180 <AmiBlitz3.ab2@10492>   MOVE.l bssnum,-4(a0)
0002E182 <AmiBlitz3.ab2@10493>   MOVEQ #0,d6
0002E186 <AmiBlitz3.ab2@10496>   CMPA.w #$0,A2
0002E18A <AmiBlitz3.ab2@10497>    BEQ.w 'lh3
0002E190 <AmiBlitz3.ab2@10498>   MOVE.l destbufferstart,D2
0002E196 <AmiBlitz3.ab2@10499>   ADD.l noinits,D2
0002E19A <AmiBlitz3.ab2@10500>   MOVE.l  $4(A2),d1
0002E19E <AmiBlitz3.ab2@10501>   BTST #30,d1
0002E1A2 <AmiBlitz3.ab2@10502>   BEQ 'lh1
0002E1A6 <AmiBlitz3.ab2@10503>   BCLR #30,d1
0002E1A8 <AmiBlitz3.ab2@10504>   MOVE.l d1,(a0)
0002E1AA <AmiBlitz3.ab2@10505>   SUB.l D4,(A0)+
0002E1AC <AmiBlitz3.ab2@10506>   ADDQ.l #1,d6
0002E1AE <AmiBlitz3.ab2@10509>   MOVE.l (a2),a2
0002E1B2 <AmiBlitz3.ab2@10510> BRA 'lh2
0002E1B4 <AmiBlitz3.ab2@10513>   TST.l d6
0002E1B8 <AmiBlitz3.ab2@10514>     BEQ 'lh10
0002E1BA <AmiBlitz3.ab2@10515>     MOVE.l d5,a0
0002E1BC <AmiBlitz3.ab2@10516>     MOVE.l d6,(a0)
0002E1BE <AmiBlitz3.ab2@10517>     MOVE.l d7,d1
0002E1C0 <AmiBlitz3.ab2@10518>     MOVE.l d5,d2
0002E1C2 <AmiBlitz3.ab2@10519>     MOVE.l d6,d3
0002E1C4 <AmiBlitz3.ab2@10520>     ASL.l #2,d3
0002E1C6 <AmiBlitz3.ab2@10521>     ADDQ.l #8,d3
0002E1CA <AmiBlitz3.ab2@10522>     BSR.w mywrite
0002E1D0 <AmiBlitz3.ab2@10525>   MOVEA.l hunkoffsetbase,A2
0002E1D2 <AmiBlitz3.ab2@10526>   MOVE.l d5,a0
0002E1D4 <AmiBlitz3.ab2@10527>   ADDQ #8,a0
0002E1DC <AmiBlitz3.ab2@10528>   MOVE.l chipnum,-4(a0)
0002E1DE <AmiBlitz3.ab2@10529>   MOVEQ #0,d6
0002E1E2 <AmiBlitz3.ab2@10532>   CMPA.w #$0,A2
0002E1E6 <AmiBlitz3.ab2@10533>    BEQ.w 'lh30
0002E1EC <AmiBlitz3.ab2@10534>   MOVE.l destbufferstart,D2
0002E1F2 <AmiBlitz3.ab2@10535>   ADD.l noinits,D2
0002E1F6 <AmiBlitz3.ab2@10536>   MOVE.l  $4(A2),d1
0002E1FA <AmiBlitz3.ab2@10537>   BTST #31,d1
0002E1FE <AmiBlitz3.ab2@10538>   BEQ 'lh11
0002E202 <AmiBlitz3.ab2@10539>   BCLR #31,d1
0002E204 <AmiBlitz3.ab2@10540>   MOVE.l d1,(a0)
0002E206 <AmiBlitz3.ab2@10541>   SUB.l D4,(A0)+
0002E208 <AmiBlitz3.ab2@10542>   ADDQ.l #1,d6
0002E20A <AmiBlitz3.ab2@10545>   MOVE.l (a2),a2
0002E20E <AmiBlitz3.ab2@10546> BRA 'lh20
0002E210 <AmiBlitz3.ab2@10549>   TST.l d6
0002E214 <AmiBlitz3.ab2@10550>     BEQ 'l10
0002E216 <AmiBlitz3.ab2@10551>     MOVE.l d5,a0
0002E218 <AmiBlitz3.ab2@10552>     MOVE.l d6,(a0)
0002E21A <AmiBlitz3.ab2@10553>     MOVE.l d7,d1
0002E21C <AmiBlitz3.ab2@10554>     MOVE.l d5,d2
0002E21E <AmiBlitz3.ab2@10555>     MOVE.l d6,d3
0002E220 <AmiBlitz3.ab2@10556>     ASL.l #2,d3
0002E222 <AmiBlitz3.ab2@10557>     ADDQ.l #8,d3
0002E226 <AmiBlitz3.ab2@10558>     BSR.w mywrite
0002E22C <AmiBlitz3.ab2@10562>    MOVEA.l _execbase,A6
0002E232 <AmiBlitz3.ab2@10563>    MOVE.l hunkoffsetcounter,d0
0002E234 <AmiBlitz3.ab2@10564>    ASL.l #2,d0
0002E23A <AmiBlitz3.ab2@10565>    ADD.l #12,d0
0002E23C <AmiBlitz3.ab2@10566>    MOVE.l d5,a1
0002E240 <AmiBlitz3.ab2@10567>    JSR _FreeMem(a6)
0002E246 <AmiBlitz3.ab2@10568>    MOVEA.l _dosbase,A6
0002E248 <AmiBlitz3.ab2@10569>    MOVE.l (a7)+,d5
0002E24C <AmiBlitz3.ab2@10570> BRA JL_0_7632
0002E252 <AmiBlitz3.ab2@10574>   MOVEA.l hunkoffsetbase,A2
0002E258 <AmiBlitz3.ab2@10575>   MOVE.l noinits,D4
0002E25C <AmiBlitz3.ab2@10578>   CMPA.w #$0,A2                                            ;write hunkoffsets
0002E260 <AmiBlitz3.ab2@10579>   BEQ.w JL_0_7632
0002E264 <AmiBlitz3.ab2@10580>   LEA $4(A2),A1
0002E266 <AmiBlitz3.ab2@10581>   SUB.l D4,(A1)
0002E268 <AmiBlitz3.ab2@10582>   MOVE.l D7,D1
0002E26A <AmiBlitz3.ab2@10583>   MOVE.l A1,D2
0002E26C <AmiBlitz3.ab2@10584>   MOVEQ.l #$04,D3
0002E270 <AmiBlitz3.ab2@10585>   BSR.w mywrite
0002E274 <AmiBlitz3.ab2@10586>   ADD.l D4,$4(A2)
0002E276 <AmiBlitz3.ab2@10587>   MOVEA.l (A2),A2
0002E27A <AmiBlitz3.ab2@10588> BRA.w JL_0_7610
0002E280 <AmiBlitz3.ab2@10591>   CLR.l tstsize3
0002E282 <AmiBlitz3.ab2@10592>   MOVE.l D7,D1
0002E288 <AmiBlitz3.ab2@10593>   MOVE.l #tstsize3,D2
0002E28A <AmiBlitz3.ab2@10594>   MOVEQ.l #$04,D3
0002E28E <AmiBlitz3.ab2@10595>    BSR.w mywrite
0002E296 <AmiBlitz3.ab2@10598>   BTST #$7,link_debuginfo
0002E29A <AmiBlitz3.ab2@10599>    BEQ.w JL_0_7706
0002E2A0 <AmiBlitz3.ab2@10600>   MOVE.l #sysdebug,D2                                      ;debughunks
0002E2A2 <AmiBlitz3.ab2@10601>   MOVEQ.l #$04,D3
0002E2A4 <AmiBlitz3.ab2@10602>   MOVE.l D7,D1
0002E2A8 <AmiBlitz3.ab2@10603>    BSR.w mywrite
0002E2AE <AmiBlitz3.ab2@10604>   MOVEA.l labelbase,A2
0002E2B2 <AmiBlitz3.ab2@10607>   CMPA.w #$0,A2
0002E2B6 <AmiBlitz3.ab2@10608>    BEQ.w JL_0_76F8
0002E2BC <AmiBlitz3.ab2@10609>   BTST #$0,$7(A2)
0002E2C0 <AmiBlitz3.ab2@10610>    BEQ.w JL_0_7682
0002E2C8 <AmiBlitz3.ab2@10611>   CMPI.l #$1,$4(A2)
0002E2CC <AmiBlitz3.ab2@10613>   BRA.w JL_0_76F2                                            ;only addr labels
0002E2CE <AmiBlitz3.ab2@10615>   MOVEQ.l #$00,D4
0002E2D2 <AmiBlitz3.ab2@10616>   MOVE.b $12(A2),D4
0002E2D6 <AmiBlitz3.ab2@10617>   SUBI.w #$13,D4
0002E2D8 <AmiBlitz3.ab2@10618>   ADDQ.w #2,D4
0002E2DC <AmiBlitz3.ab2@10619>   ANDI.w #$FFFC,D4
0002E2DE <AmiBlitz3.ab2@10620>   MOVE.l D4,D5
0002E2E0 <AmiBlitz3.ab2@10621>   LSR.w #2,D5
0002E2E6 <AmiBlitz3.ab2@10622>   MOVE.l D5,temp1
0002E2E8 <AmiBlitz3.ab2@10623>   LSL.w #2,D5
0002E2EE <AmiBlitz3.ab2@10624>   MOVE.l #temp1,a1
0002E2F4 <AmiBlitz3.ab2@10626>   LEA debugstore,a0
0002E2F6 <AmiBlitz3.ab2@10627>   MOVE.l (a1),(a0)+
0002E2F8 <AmiBlitz3.ab2@10628>   MOVEQ.l #$04,D3
0002E2FC <AmiBlitz3.ab2@10631>   LEA $13(A2),A1
0002E2FE <AmiBlitz3.ab2@10632>   MOVE.l d4,d1
0002E300 <AmiBlitz3.ab2@10633>   SUBQ.l #1,d1
0002E302 <AmiBlitz3.ab2@10636>     MOVE.b (a1)+,d0
0002E306 <AmiBlitz3.ab2@10637>     BEQ 'l21
0002E30A <AmiBlitz3.ab2@10638>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
0002E30E <AmiBlitz3.ab2@10639>     BNE 'ok
0002E312 <AmiBlitz3.ab2@10640>     MOVE.b #"_",d0
0002E314 <AmiBlitz3.ab2@10641> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
0002E318 <AmiBlitz3.ab2@10642>   DBF d1,'l10
0002E31C <AmiBlitz3.ab2@10644> BRA 'l22
0002E31E <AmiBlitz3.ab2@10647>       CLR.b (a0)+
0002E322 <AmiBlitz3.ab2@10648>   DBF d1,'l21
0002E324 <AmiBlitz3.ab2@10651>   ADD.l d4,d3
0002E326 <AmiBlitz3.ab2@10656>   SUB.l D4,D5
0002E32A <AmiBlitz3.ab2@10657>    BEQ.w JL_0_76CE
0002E330 <AmiBlitz3.ab2@10658>   MOVE.l #zero,a1
0002E332 <AmiBlitz3.ab2@10660>   MOVE.l (a1),(a0)+
0002E334 <AmiBlitz3.ab2@10662>   ADD.l d5,d3
0002E338 <AmiBlitz3.ab2@10667>   MOVE.l $8(A2),D2
0002E33E <AmiBlitz3.ab2@10668>   SUB.l destbufferstart,D2
0002E344 <AmiBlitz3.ab2@10669>   SUB.l noinits,D2
0002E34A <AmiBlitz3.ab2@10670>   MOVE.l D2,temp1
0002E350 <AmiBlitz3.ab2@10671>   MOVE.l #temp1,a1
0002E352 <AmiBlitz3.ab2@10673>   MOVE.l (a1),(a0)+
0002E358 <AmiBlitz3.ab2@10674>   ADD.l #4,d3
0002E35E <AmiBlitz3.ab2@10675>   LEA debugstore,a0
0002E360 <AmiBlitz3.ab2@10676>   MOVE.l a0,d2
0002E362 <AmiBlitz3.ab2@10678>   MOVE.l D7,D1
0002E366 <AmiBlitz3.ab2@10679>   BSR.w mywrite
0002E368 <AmiBlitz3.ab2@10682>   MOVEA.l (A2),A2
0002E36C <AmiBlitz3.ab2@10683> BRA.w JL_0_7664
0002E372 <AmiBlitz3.ab2@10687>   MOVE.l #zero,D2
0002E374 <AmiBlitz3.ab2@10688>   MOVEQ.l #$04,D3
0002E376 <AmiBlitz3.ab2@10689>   MOVE.l D7,D1
0002E37A <AmiBlitz3.ab2@10690>   BSR.w mywrite
0002E37C <AmiBlitz3.ab2@10693>   MOVE.l D7,D1
0002E382 <AmiBlitz3.ab2@10694>   MOVE.l #tstdone,D2                                      ;hunkend
0002E384 <AmiBlitz3.ab2@10695>   MOVEQ.l #$04,D3
0002E38E <AmiBlitz3.ab2@10696>   CMPI.l #-1,bssstart
0002E392 <AmiBlitz3.ab2@10697>   BEQ 'l10
0002E394 <AmiBlitz3.ab2@10698>   MOVEQ #16,d3
0002E39A <AmiBlitz3.ab2@10699>   MOVE.l #hunkend,d2
0002E3A4 <AmiBlitz3.ab2@10700>   CMPI.l #-1,chipstart
0002E3A8 <AmiBlitz3.ab2@10701>   BEQ 'l10
0002E3AA <AmiBlitz3.ab2@10702>   MOVE.l d7,d1
0002E3AC <AmiBlitz3.ab2@10703>   MOVEQ #12,d3
0002E3B0 <AmiBlitz3.ab2@10704>   BSR.w mywrite
0002E3BA <AmiBlitz3.ab2@10707>   CMPI.l #-1,chipstart
0002E3BE <AmiBlitz3.ab2@10708>   BEQ 'l11
0002E3C0 <AmiBlitz3.ab2@10709>   MOVEQ #12,d3
0002E3C6 <AmiBlitz3.ab2@10710>   MOVE.l #hunkend2,d2
0002E3C8 <AmiBlitz3.ab2@10711>   MOVE.l d7,d1
0002E3CC <AmiBlitz3.ab2@10712>   BSR.w mywrite
0002E3CE <AmiBlitz3.ab2@10713>   MOVE.l d7,d1
0002E3D4 <AmiBlitz3.ab2@10714>   MOVE.l chipstart,d2
0002E3DA <AmiBlitz3.ab2@10715>   MOVE.l chipsize,d3
0002E3DE <AmiBlitz3.ab2@10716>   BSR.w mywrite
0002E3E0 <AmiBlitz3.ab2@10717>   MOVEQ #4,d3
0002E3E6 <AmiBlitz3.ab2@10718>   MOVE.l #hunkend,d2
0002E3E8 <AmiBlitz3.ab2@10719>   MOVE.l d7,d1
0002E3EC <AmiBlitz3.ab2@10722>   BSR.w mywrite
0002E3EE <AmiBlitz3.ab2@10723>   MOVE.l D7,D1
0002E3F4 <AmiBlitz3.ab2@10724>   MOVEA.l _dosbase,A6
0002E3F8 <AmiBlitz3.ab2@10725>   JSR _Close(A6)
0002E400 <AmiBlitz3.ab2@10730>   BTST #$7,create_iconfile
0002E404 <AmiBlitz3.ab2@10731>    BEQ.w skip_createicon
0002E40A <AmiBlitz3.ab2@10733>   MOVEA.l ptr_newexefilename,A0
0002E40C <AmiBlitz3.ab2@10736>     TST.b (A0)+
0002E410 <AmiBlitz3.ab2@10737>   BNE.w JL_0_772C
0002E412 <AmiBlitz3.ab2@10738>   SUBQ.w #1,A0
0002E414 <AmiBlitz3.ab2@10739>   MOVE.l A0,-(A7)
0002E41A <AmiBlitz3.ab2@10740>   LEA str_infoextention2,A1
0002E41C <AmiBlitz3.ab2@10743>     MOVE.b (A1)+,(A0)+
0002E420 <AmiBlitz3.ab2@10744>   BNE.w JL_0_773A
0002E426 <AmiBlitz3.ab2@10746>   MOVE.l ptr_newexefilename,D1
0002E428 <AmiBlitz3.ab2@10747>   MOVEQ.l #-$02,D2
0002E42E <AmiBlitz3.ab2@10748>   MOVEA.l _dosbase,A6
0002E432 <AmiBlitz3.ab2@10749>   JSR _Lock(A6)
0002E434 <AmiBlitz3.ab2@10750>   MOVE.l D0,D1
0002E438 <AmiBlitz3.ab2@10751>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
0002E43C <AmiBlitz3.ab2@10752>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
0002E440 <AmiBlitz3.ab2@10753> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
0002E446 <AmiBlitz3.ab2@10756>   MOVE.l ptr_newexefilename,D1
0002E44C <AmiBlitz3.ab2@10757>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002E452 <AmiBlitz3.ab2@10758>   MOVEA.l _dosbase,A6
0002E456 <AmiBlitz3.ab2@10759>    JSR _Open(A6)
0002E458 <AmiBlitz3.ab2@10760>   MOVE.l D0,D7
0002E45C <AmiBlitz3.ab2@10761>    BEQ.w JL_0_7788
0002E462 <AmiBlitz3.ab2@10762>   MOVE.l #icongfx_data,D2                                  ; icon graphics
0002E468 <AmiBlitz3.ab2@10763>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
0002E46A <AmiBlitz3.ab2@10764>   MOVE.l D7,D1
0002E470 <AmiBlitz3.ab2@10765>   MOVEA.l _dosbase,A6
0002E474 <AmiBlitz3.ab2@10766>   JSR _Write(A6)
0002E476 <AmiBlitz3.ab2@10767>   MOVE.l D7,D1
0002E47A <AmiBlitz3.ab2@10768>   JSR _Close(A6)
0002E47C <AmiBlitz3.ab2@10771>   MOVEA.l (A7)+,A0
0002E47E <AmiBlitz3.ab2@10772>   CLR.b (A0)
0002E484 <AmiBlitz3.ab2@10777>   TST.b exdebug
0002E488 <AmiBlitz3.ab2@10778>    BEQ JL_0_757Cb
0002E48E <AmiBlitz3.ab2@10779>   MOVE.w dontwrite,D1
0002E492 <AmiBlitz3.ab2@10780>   BNE.w JL_0_757Cb
0002E498 <AmiBlitz3.ab2@10781>   MOVE.l chipsize,d5
0002E49E <AmiBlitz3.ab2@10782>   MOVE.l bsssize,d3
0002E4A4 <AmiBlitz3.ab2@10783>   MOVE.l chipstart,d7
0002E4AA <AmiBlitz3.ab2@10784>   MOVE.l bssstart,d6
0002E4B0 <AmiBlitz3.ab2@10785>   MOVEA.l hunkoffsetbase,A2
0002E4B6 <AmiBlitz3.ab2@10786>   MOVEA.l destbufferstart,A1
0002E4B8 <AmiBlitz3.ab2@10787>   MOVE.l A1,D2
0002E4BE <AmiBlitz3.ab2@10788>   ADD.l noinits,D2
0002E4C4 <AmiBlitz3.ab2@10789>   CLR.l hunkoffsetnum
0002E4C8 <AmiBlitz3.ab2@10792>   CMPA.w #$0,A2
0002E4CC <AmiBlitz3.ab2@10793>    BEQ.w JL_0_757Cb
0002E4D0 <AmiBlitz3.ab2@10794>   MOVE.l $4(A2),D0
0002E4D4 <AmiBlitz3.ab2@10795>    LEA $0(a1,d0.l),a0
0002E4D6 <AmiBlitz3.ab2@10796>    MOVE.l (a0),d1
0002E4D8 <AmiBlitz3.ab2@10797>   TST.l d1
0002E4DC <AmiBlitz3.ab2@10798>    BMI.w 'lm1
0002E4E4 <AmiBlitz3.ab2@10799>   MOVE.b #0,newhunk
0002E4EE <AmiBlitz3.ab2@10800>   CMP.l #-1,chipstart
0002E4F2 <AmiBlitz3.ab2@10801>   BEQ 'l10
0002E4F8 <AmiBlitz3.ab2@10802>   CMP.l chipstart,d1
0002E4FC <AmiBlitz3.ab2@10803>   BLT 'l10
0002E504 <AmiBlitz3.ab2@10804>   MOVE.b #1,newhunk
0002E50A <AmiBlitz3.ab2@10805>   CMP.l chipend,d1
0002E50E <AmiBlitz3.ab2@10806>   BGE 'l110
0002E510 <AmiBlitz3.ab2@10807>   ADD.l d7,(a0)
0002E518 <AmiBlitz3.ab2@10808>   ADD.l #$80000000,4(a2)
0002E51C <AmiBlitz3.ab2@10809> BRA JL_0_7576b
0002E520 <AmiBlitz3.ab2@10812>   ADD.l d5,0(a0)
0002E52A <AmiBlitz3.ab2@10815>   CMP.l #-1,bssstart
0002E52E <AmiBlitz3.ab2@10816>     BEQ 'l11
0002E534 <AmiBlitz3.ab2@10817>   CMP.l bssstart,d1
0002E538 <AmiBlitz3.ab2@10818>   BLT 'l11
0002E53E <AmiBlitz3.ab2@10819>   CMP.l bssend,d1
0002E542 <AmiBlitz3.ab2@10820>   BGE 'l111
0002E548 <AmiBlitz3.ab2@10821>   TST.b newhunk
0002E54C <AmiBlitz3.ab2@10822>   BEQ 'ln1
0002E54E <AmiBlitz3.ab2@10823>   ADD.l d5,(a0)
0002E550 <AmiBlitz3.ab2@10826>   ADD.l d6,(a0)
0002E558 <AmiBlitz3.ab2@10827>   ADD.l #$40000000,4(a2)
0002E55C <AmiBlitz3.ab2@10828> BRA JL_0_7576b
0002E560 <AmiBlitz3.ab2@10831>   ADD.l d3,0(a0)
0002E562 <AmiBlitz3.ab2@10834>   ADD.l D2,(A0)                                            ;only normal code offsets restore
0002E568 <AmiBlitz3.ab2@10837>   ADDQ.l #1,hunkoffsetnum
0002E56A <AmiBlitz3.ab2@10840>   MOVEA.l (A2),A2
0002E56E <AmiBlitz3.ab2@10841> BRA.w JL_0_755Eb
0002E574 <AmiBlitz3.ab2@10844>   JSR call_setpointernormal
0002E578 <AmiBlitz3.ab2@10845>   MOVEM.l (a7)+,d2-d7/a2-a6
0002E57A <AmiBlitz3.ab2@10847> RTS
0002E57C <AmiBlitz3.ab2@10851>   MOVE.l D2,-(A7)
0002E582 <AmiBlitz3.ab2@10852>   MOVE.l destpointer,D2
0002E588 <AmiBlitz3.ab2@10853>   SUB.l destbufferstart,D2
0002E58C <AmiBlitz3.ab2@10854>   BSR.w addhunkoffset
0002E58E <AmiBlitz3.ab2@10855>   MOVE.l (A7)+,D2
0002E590 <AmiBlitz3.ab2@10856> RTS
0002E594 <AmiBlitz3.ab2@10860>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002E59A <AmiBlitz3.ab2@10861>   TST.b nohunkoffset
0002E59E <AmiBlitz3.ab2@10862>   BNE 'l10
0002E5A0 <AmiBlitz3.ab2@10863>   MOVEQ.l #$8,D0
0002E5A2 <AmiBlitz3.ab2@10864>   MOVEQ.l #$01,D1
0002E5A8 <AmiBlitz3.ab2@10865>   MOVEA.l _execbase,A6
0002E5AE <AmiBlitz3.ab2@10866>   MOVE.l mempool2,a0
0002E5B2 <AmiBlitz3.ab2@10867>   JSR _AllocPooled(a6)
0002E5B8 <AmiBlitz3.ab2@10869>   ADDQ.l #1,hunkoffsetcounter
0002E5BA <AmiBlitz3.ab2@10870>   MOVEA.l D0,A0
0002E5C0 <AmiBlitz3.ab2@10871>   MOVE.l hunkoffsetbase,(A0)
0002E5C6 <AmiBlitz3.ab2@10872>   MOVE.l A0,hunkoffsetbase
0002E5CA <AmiBlitz3.ab2@10873>   MOVE.l D2,$4(A0)
0002E5CE <AmiBlitz3.ab2@10876>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002E5D0 <AmiBlitz3.ab2@10877> RTS
0002E5D6 <AmiBlitz3.ab2@10881>   CLR.l hunkoffsetbase
0002E5DC <AmiBlitz3.ab2@10882>   MOVEA.l _execbase,A6
0002E5E2 <AmiBlitz3.ab2@10883>   MOVEA.l hunkoffsetbase,A2
0002E5E6 <AmiBlitz3.ab2@10886>     CMPA.w #$0,A2
0002E5EA <AmiBlitz3.ab2@10887>      BEQ.w JL_0_7988
0002E5EC <AmiBlitz3.ab2@10888>     MOVEA.l A2,A1
0002E5EE <AmiBlitz3.ab2@10889>     MOVEQ.l #$08,D0
0002E5F0 <AmiBlitz3.ab2@10890>     MOVEA.l (A2),A2
0002E5F6 <AmiBlitz3.ab2@10891>     MOVE.l mempool2,a0
0002E5FA <AmiBlitz3.ab2@10892>     JSR _FreePooled(A6)
0002E5FE <AmiBlitz3.ab2@10893> BRA.w JL_0_7972
0002E604 <AmiBlitz3.ab2@10896>   CLR.l hunkoffsetcounter
0002E606 <AmiBlitz3.ab2@10897> RTS
0002E61E <AmiBlitz3.ab2@10900> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
0002E622 <AmiBlitz3.ab2@10901> cmakea5:    Ds.l 1
0002E624 <AmiBlitz3.ab2@10902> cmake:      Ds.w 1
0002E6A4 <AmiBlitz3.ab2@10903> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
0002E6AA <AmiBlitz3.ab2@10907>   MOVE.l A5,lastsourcepos
0002E6B4 <AmiBlitz3.ab2@10908>   MOVE.w instringon,oldqflag
0002E6B6 <AmiBlitz3.ab2@10912>   MOVEQ.l #$00,D0
0002E6B8 <AmiBlitz3.ab2@10913>   MOVE.b (A5)+,D0
0002E6BC <AmiBlitz3.ab2@10914>    BEQ getcharb__donea
0002E6C0 <AmiBlitz3.ab2@10915>   BPL getcharb__stuffa
0002E6C2 <AmiBlitz3.ab2@10916>   LSL.l #8,D0
0002E6C4 <AmiBlitz3.ab2@10917>   MOVE.b (A5)+,D0
0002E6C6 <AmiBlitz3.ab2@10918>   MOVE.l a1,-(a7)
0002E6CC <AmiBlitz3.ab2@10919>   LEA replacedat,a1
0002E6D0 <AmiBlitz3.ab2@10920>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
0002E6D4 <AmiBlitz3.ab2@10921>   BEQ getchar__l10
0002E6D8 <AmiBlitz3.ab2@10922>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
0002E6DA <AmiBlitz3.ab2@10926>   MOVE.l (a7)+,a1
0002E6DE <AmiBlitz3.ab2@10927> BRA getchar__weiter
0002E6E2 <AmiBlitz3.ab2@10930>   CMP.w #$22,D0
0002E6E6 <AmiBlitz3.ab2@10931>    BEQ.b swapquotea
0002E6EA <AmiBlitz3.ab2@10932>   CMP.w #$3B,D0
0002E6EE <AmiBlitz3.ab2@10933>    BNE.b getcharb__donea
0002E6F4 <AmiBlitz3.ab2@10934>   TST.w instringon
0002E6F8 <AmiBlitz3.ab2@10935>    BNE.b getcharb__donea
0002E6FA <AmiBlitz3.ab2@10938>   MOVE.b (A5)+,D0
0002E6FE <AmiBlitz3.ab2@10939>              BEQ getchar__l1
0002E702 <AmiBlitz3.ab2@10940>              CMP.b #":",d0
0002E706 <AmiBlitz3.ab2@10941>              BNE getcharb__loopa                                ;:@
0002E70A <AmiBlitz3.ab2@10942>              CMP.b #"@",(a5)
0002E70E <AmiBlitz3.ab2@10943>              BNE getcharb__loopa
0002E710 <AmiBlitz3.ab2@10944>              ADDQ #1,a5
0002E716 <AmiBlitz3.ab2@10947>   MOVE.w D0,lastchar
0002E71A <AmiBlitz3.ab2@10950> BRA.s getchar__weiter
0002E720 <AmiBlitz3.ab2@10953>   NOT.w instringon
0002E726 <AmiBlitz3.ab2@10956>    MOVE.w D0,lastchar
0002E72A <AmiBlitz3.ab2@10957>    BEQ.w getchar__done
0002E72E <AmiBlitz3.ab2@10958>    BPL.w getchar__done2
0002E732 <AmiBlitz3.ab2@10959>   CMP.w #-$7FE4,D0                                         ;cnif
0002E736 <AmiBlitz3.ab2@10960>    BEQ.w getchar__cnif
0002E73A <AmiBlitz3.ab2@10961>   CMP.w #-$7FE3,D0                                         ;csif
0002E73E <AmiBlitz3.ab2@10962>    BEQ.w getchar__csif
0002E742 <AmiBlitz3.ab2@10963>   CMP.w #-$7FE2,D0                                         ;celse
0002E746 <AmiBlitz3.ab2@10964>    BEQ.w getchar__celse
0002E74A <AmiBlitz3.ab2@10965>   CMP.w #-$7FE1,D0                                         ;cend
0002E74E <AmiBlitz3.ab2@10966>    BEQ.w getchar__cend
0002E754 <AmiBlitz3.ab2@10969>   TST.w skipcode
0002E758 <AmiBlitz3.ab2@10970>    BEQ.w getchar
0002E75C <AmiBlitz3.ab2@10971>   CMP.w #$7E,D0
0002E760 <AmiBlitz3.ab2@10972>    BEQ.w getchar__cmake                                         ;tilde
0002E764 <AmiBlitz3.ab2@10973>   CMP.w #$2,D0
0002E768 <AmiBlitz3.ab2@10974>    BNE.w getchar__notunpath
0002E76E <AmiBlitz3.ab2@10975>   MOVEA.l usedfrom,A5
0002E774 <AmiBlitz3.ab2@10976>   CLR.l usedfrom
0002E778 <AmiBlitz3.ab2@10977> BRA.w getchar
0002E77C <AmiBlitz3.ab2@10980>   CMP.w #$1,D0
0002E780 <AmiBlitz3.ab2@10981>    BNE.w getchar__done
0002E784 <AmiBlitz3.ab2@10985>   MOVEA.l cmakea5(PC),A5
0002E788 <AmiBlitz3.ab2@10986> BRA.w getchar
0002E78E <AmiBlitz3.ab2@10989>   TST.w cmake
0002E792 <AmiBlitz3.ab2@10990>    BNE.w getchar__done
0002E796 <AmiBlitz3.ab2@10992>   MOVEM.l D0-D7/A0-A6,-(A7)
0002E79C <AmiBlitz3.ab2@10993>   LEA cmake,a0                                         ;reass
0002E79E <AmiBlitz3.ab2@10994>   NOT.w (a0)
0002E7A2 <AmiBlitz3.ab2@10995>   LEA cmakebak(PC),A0
0002E7A8 <AmiBlitz3.ab2@10996>   LEA ptr_parameterstore,A1
0002E7AA <AmiBlitz3.ab2@10997>   MOVEQ.l #$1F,D0
0002E7AC <AmiBlitz3.ab2@11000>     MOVE.l (A1)+,(A0)+
0002E7B0 <AmiBlitz3.ab2@11001>   DBF D0,getchar__cmloop
0002E7B6 <AmiBlitz3.ab2@11004>    JSR AJL_0_BF6E
0002E7BA <AmiBlitz3.ab2@11005>   CMP.w #$7E,D0
0002E7BE <AmiBlitz3.ab2@11006>    BNE.w syntaxerr
0002E7C4 <AmiBlitz3.ab2@11007>   MOVE.l A5,cmakea5                                      ;tilde
0002E7C8 <AmiBlitz3.ab2@11008>   LEA cmakebuff(PC),A0
0002E7CA <AmiBlitz3.ab2@11009>   MOVE.l D3,D2
0002E7CE <AmiBlitz3.ab2@11010>   BSR.w makelong
0002E7D0 <AmiBlitz3.ab2@11011>   ADDQ.b #1,(A0)
0002E7D6 <AmiBlitz3.ab2@11012>   LEA cmake,a0
0002E7D8 <AmiBlitz3.ab2@11013>   NOT.w (a0)                                               ;reass
0002E7DC <AmiBlitz3.ab2@11014>   LEA cmakebak(PC),A0
0002E7E2 <AmiBlitz3.ab2@11015>   LEA ptr_parameterstore,A1
0002E7E4 <AmiBlitz3.ab2@11016>   MOVEQ.l #$1F,D0
0002E7E6 <AmiBlitz3.ab2@11019>     MOVE.l (A0)+,(A1)+
0002E7EA <AmiBlitz3.ab2@11020>   DBF D0,getchar__cmloop2
0002E7EE <AmiBlitz3.ab2@11022>   MOVEM.l (A7)+,D0-D7/A0-A6
0002E7F2 <AmiBlitz3.ab2@11023>   LEA cmakebuff(PC),A5
0002E7F6 <AmiBlitz3.ab2@11024> BRA.w getchar
0002E7F8 <AmiBlitz3.ab2@11027> RTS
0002E802 <AmiBlitz3.ab2@11031>   MOVE.l linenumat,ciflineat                               ;csif
0002E808 <AmiBlitz3.ab2@11032>   TST.w skipcode
0002E80C <AmiBlitz3.ab2@11033>    BEQ.w getchar__incnest
0002E810 <AmiBlitz3.ab2@11034>    BSR.w get1bytemain
0002E812 <AmiBlitz3.ab2@11035>    MOVE.l a1,-(a7)
0002E818 <AmiBlitz3.ab2@11036>    JSR JL_0_C492
0002E81A <AmiBlitz3.ab2@11037>    MOVE.l (a7)+,a1
0002E81E <AmiBlitz3.ab2@11038> BRA.w getchar
0002E828 <AmiBlitz3.ab2@11041>   MOVE.l linenumat,ciflineat                               ;cnif
0002E82E <AmiBlitz3.ab2@11042>   TST.w skipcode
0002E832 <AmiBlitz3.ab2@11043>    BEQ.w getchar__incnest
0002E836 <AmiBlitz3.ab2@11044>    BSR.w get1bytemain
0002E83A <AmiBlitz3.ab2@11045>    CMP.b #"@",d0
0002E83E <AmiBlitz3.ab2@11046>    BNE getchar__cnif_ok2
0002E842 <AmiBlitz3.ab2@11047>    BSR.w get1bytemain
0002E84A <AmiBlitz3.ab2@11048>    MOVE.b #1,incnif
0002E850 <AmiBlitz3.ab2@11049>    JSR findconstant2
0002E854 <AmiBlitz3.ab2@11050>    BEQ getchar__cnif_ok2
0002E85A <AmiBlitz3.ab2@11053>    MOVE.w fast,-(a7)
0002E860 <AmiBlitz3.ab2@11054>    CLR.b fast
0002E862 <AmiBlitz3.ab2@11055>    MOVE.l a1,-(a7)
0002E868 <AmiBlitz3.ab2@11056>    JSR JL_0_C47E
0002E86E <AmiBlitz3.ab2@11057>    CLR.b incnif
0002E870 <AmiBlitz3.ab2@11058>    MOVE.l (a7)+,a1
0002E876 <AmiBlitz3.ab2@11059>    MOVE.w (a7)+,fast
0002E87A <AmiBlitz3.ab2@11060> BRA.w getchar
0002E880 <AmiBlitz3.ab2@11063>   ADDQ.w #1,connest
0002E884 <AmiBlitz3.ab2@11064> BRA.w getchar
0002E88A <AmiBlitz3.ab2@11067>   MOVE.w connest,D0                                      ;celse
0002E88E <AmiBlitz3.ab2@11068>    BNE.w getchar
0002E894 <AmiBlitz3.ab2@11069>   NOT.w skipcode
0002E898 <AmiBlitz3.ab2@11070> BRA.w getchar
0002E89E <AmiBlitz3.ab2@11073>   SUBQ.w #1,connest                                      ;cend
0002E8A2 <AmiBlitz3.ab2@11074>    BPL.w getchar
0002E8A8 <AmiBlitz3.ab2@11075>   ADDQ.w #1,connest
0002E8AE <AmiBlitz3.ab2@11076>   MOVEA.l concomsp,A0
0002E8B4 <AmiBlitz3.ab2@11077>   CMPA.l #concomstack,A0
0002E8B8 <AmiBlitz3.ab2@11078>    BEQ.w nociferr
0002E8BA <AmiBlitz3.ab2@11079>   SUBQ.w #2,A0
0002E8C0 <AmiBlitz3.ab2@11080>   MOVE.l A0,concomsp
0002E8C6 <AmiBlitz3.ab2@11081>   MOVE.w (A0),skipcode
0002E8CA <AmiBlitz3.ab2@11082> BRA.w getchar
0002E8CE <AmiBlitz3.ab2@11085> ciflineat:   Ds.l 1
0002E8D0 <AmiBlitz3.ab2@11093>   MOVEQ.l #$00,D0
0002E8D2 <AmiBlitz3.ab2@11094>   MOVE.b (A5)+,D0
0002E8D6 <AmiBlitz3.ab2@11095>    BEQ.b getcharb__done
0002E8DA <AmiBlitz3.ab2@11096>    BPL.b getcharb__stuff
0002E8DC <AmiBlitz3.ab2@11097>   LSL.w #8,D0
0002E8DE <AmiBlitz3.ab2@11098>   MOVE.b (A5)+,D0
0002E8E0 <AmiBlitz3.ab2@11099> RTS
0002E8E4 <AmiBlitz3.ab2@11102>   CMP.w #$22,D0
0002E8E8 <AmiBlitz3.ab2@11103>    BEQ.b swapquote
0002E8EC <AmiBlitz3.ab2@11104>   CMP.w #$3B,D0
0002E8F0 <AmiBlitz3.ab2@11105>    BNE.b getcharb__done
0002E8F6 <AmiBlitz3.ab2@11106>   TST.w instringon
0002E8FA <AmiBlitz3.ab2@11107>    BNE.b getcharb__done
0002E8FC <AmiBlitz3.ab2@11110>   MOVE.b (A5)+,D0
0002E900 <AmiBlitz3.ab2@11111>             BEQ getcharb__loop_l1
0002E904 <AmiBlitz3.ab2@11112>             CMP.b #":",d0
0002E908 <AmiBlitz3.ab2@11113>             BNE getcharb__loop
0002E90C <AmiBlitz3.ab2@11114>             CMP.b #"@",(a5)
0002E910 <AmiBlitz3.ab2@11115>             BNE getcharb__loop
0002E916 <AmiBlitz3.ab2@11118>   MOVE.w D0,lastchar
0002E918 <AmiBlitz3.ab2@11121> RTS
0002E91E <AmiBlitz3.ab2@11124>   NOT.w instringon
0002E920 <AmiBlitz3.ab2@11125> RTS
0002E924 <AmiBlitz3.ab2@11129>   BSR.w getchar
0002E92A <AmiBlitz3.ab2@11130>   TST.w instringon
0002E92E <AmiBlitz3.ab2@11131>    BNE.w get1byte__skip
0002E932 <AmiBlitz3.ab2@11132>   CMP.w #$20,D0
0002E936 <AmiBlitz3.ab2@11133>    BEQ.w get1byte_
0002E938 <AmiBlitz3.ab2@11136> RTS
0002E952 <AmiBlitz3.ab2@11139> gs:        Ds.w 13                                         ;ds.b 26  org source
0002E956 <AmiBlitz3.ab2@11140>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
0002E958 <AmiBlitz3.ab2@11141>            Dc.b $C4,$DC
0002E95C <AmiBlitz3.ab2@11147>   BSR.w getchar
0002E962 <AmiBlitz3.ab2@11148>   TST.w instringon
0002E966 <AmiBlitz3.ab2@11149>    BNE.w gchar2
0002E96A <AmiBlitz3.ab2@11150>   CMP.w #$20,D0
0002E96E <AmiBlitz3.ab2@11151>    BEQ.w get1bytemain
0002E970 <AmiBlitz3.ab2@11153>   TST.w D0
0002E974 <AmiBlitz3.ab2@11156>   BEQ.b get1bytemain__zero
0002E97A <AmiBlitz3.ab2@11157>   TST.w instringon
0002E97E <AmiBlitz3.ab2@11158>    BEQ.b get1bytemain__noqoute
0002E982 <AmiBlitz3.ab2@11159>   CMP.b #$20,D0
0002E986 <AmiBlitz3.ab2@11160>    BCC.b get1bytemain__skip
0002E98A <AmiBlitz3.ab2@11161>   MOVE.b gs(PC,D0.W),D0
0002E98C <AmiBlitz3.ab2@11162> RTS
0002E990 <AmiBlitz3.ab2@11165>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
0002E994 <AmiBlitz3.ab2@11166>    BEQ.b get1bytemain__zero
0002E998 <AmiBlitz3.ab2@11167>   CMP.w #$3A,D0
0002E99C <AmiBlitz3.ab2@11168>    BEQ.b get1bytemain__zero
0002E99E <AmiBlitz3.ab2@11171>   TST.w D0
0002E9A0 <AmiBlitz3.ab2@11174> RTS
0002E9A6 <AmiBlitz3.ab2@11178>   MOVE.w lastchar,D0
0002E9AA <AmiBlitz3.ab2@11179> BRA.w gchar2
0002E9B4 <AmiBlitz3.ab2@11183>   MOVE.w oldqflag,instringon
0002E9BA <AmiBlitz3.ab2@11184>   MOVEA.l lastsourcepos,A5
0002E9BC <AmiBlitz3.ab2@11185> RTS
0002E9C2 <AmiBlitz3.ab2@11189>   MOVE.w D0,locchar
0002E9C8 <AmiBlitz3.ab2@11190>   MOVE.l A5,locloc
0002E9CA <AmiBlitz3.ab2@11191> RTS
0002E9D0 <AmiBlitz3.ab2@11195>   MOVEA.l locloc,A5
0002E9D6 <AmiBlitz3.ab2@11196>   MOVE.w locchar,D0
0002E9DC <AmiBlitz3.ab2@11197>   MOVE.w D0,lastchar
0002E9DE <AmiBlitz3.ab2@11198> RTS
0002E9DE <internal_errormsg.ab2@1> XINCLUDE "internal_errormsg.ab2"
0002EA26 <internal_errormsg.ab2@9> XINCLUDE "internal_errormsg.ab2"
0002EA78 <internal_errormsg.ab2@10> XINCLUDE "internal_errormsg.ab2"
0002EAB6 <internal_errormsg.ab2@11> XINCLUDE "internal_errormsg.ab2"
0002EAF4 <internal_errormsg.ab2@12> XINCLUDE "internal_errormsg.ab2"
0002EB1E <internal_errormsg.ab2@13> XINCLUDE "internal_errormsg.ab2"
0002EB4E <internal_errormsg.ab2@14> XINCLUDE "internal_errormsg.ab2"
0002EB98 <internal_errormsg.ab2@15> XINCLUDE "internal_errormsg.ab2"
0002EC1E <internal_errormsg.ab2@16> XINCLUDE "internal_errormsg.ab2"
0002EC80 <internal_errormsg.ab2@17> XINCLUDE "internal_errormsg.ab2"
0002ECC8 <internal_errormsg.ab2@18> XINCLUDE "internal_errormsg.ab2"
0002ED1A <internal_errormsg.ab2@19> XINCLUDE "internal_errormsg.ab2"
0002ED64 <internal_errormsg.ab2@20> XINCLUDE "internal_errormsg.ab2"
0002EDB2 <internal_errormsg.ab2@21> XINCLUDE "internal_errormsg.ab2"
0002EDE8 <internal_errormsg.ab2@22> XINCLUDE "internal_errormsg.ab2"
0002EE16 <internal_errormsg.ab2@23> XINCLUDE "internal_errormsg.ab2"
0002EE30 <internal_errormsg.ab2@24> XINCLUDE "internal_errormsg.ab2"
0002EE4E <internal_errormsg.ab2@25> XINCLUDE "internal_errormsg.ab2"
0002EECC <internal_errormsg.ab2@26> XINCLUDE "internal_errormsg.ab2"
0002EEF6 <internal_errormsg.ab2@27> XINCLUDE "internal_errormsg.ab2"
0002EF1C <internal_errormsg.ab2@28> XINCLUDE "internal_errormsg.ab2"
0002EF3C <internal_errormsg.ab2@29> XINCLUDE "internal_errormsg.ab2"
0002EF5A <internal_errormsg.ab2@30> XINCLUDE "internal_errormsg.ab2"
0002EF7A <internal_errormsg.ab2@31> XINCLUDE "internal_errormsg.ab2"
0002EFA2 <internal_errormsg.ab2@32> XINCLUDE "internal_errormsg.ab2"
0002EFCC <internal_errormsg.ab2@33> XINCLUDE "internal_errormsg.ab2"
0002EFCE <internal_errormsg.ab2@36> XINCLUDE "internal_errormsg.ab2"
0002EFEA <internal_errormsg.ab2@39> XINCLUDE "internal_errormsg.ab2"
0002F010 <internal_errormsg.ab2@40> XINCLUDE "internal_errormsg.ab2"
0002F028 <internal_errormsg.ab2@41> XINCLUDE "internal_errormsg.ab2"
0002F086 <internal_errormsg.ab2@42> XINCLUDE "internal_errormsg.ab2"
0002F0A8 <internal_errormsg.ab2@43> XINCLUDE "internal_errormsg.ab2"
0002F0CE <internal_errormsg.ab2@44> XINCLUDE "internal_errormsg.ab2"
0002F0F6 <internal_errormsg.ab2@45> XINCLUDE "internal_errormsg.ab2"
0002F116 <internal_errormsg.ab2@46> XINCLUDE "internal_errormsg.ab2"
0002F13A <internal_errormsg.ab2@47> XINCLUDE "internal_errormsg.ab2"
0002F180 <internal_errormsg.ab2@48> XINCLUDE "internal_errormsg.ab2"
0002F1A4 <internal_errormsg.ab2@49> XINCLUDE "internal_errormsg.ab2"
0002F1C8 <internal_errormsg.ab2@50> XINCLUDE "internal_errormsg.ab2"
0002F1E8 <internal_errormsg.ab2@51> XINCLUDE "internal_errormsg.ab2"
0002F20C <internal_errormsg.ab2@52> XINCLUDE "internal_errormsg.ab2"
0002F22E <internal_errormsg.ab2@53> XINCLUDE "internal_errormsg.ab2"
0002F25A <internal_errormsg.ab2@54> XINCLUDE "internal_errormsg.ab2"
0002F280 <internal_errormsg.ab2@55> XINCLUDE "internal_errormsg.ab2"
0002F28A <internal_errormsg.ab2@58> XINCLUDE "internal_errormsg.ab2"
0002F2B0 <internal_errormsg.ab2@59> XINCLUDE "internal_errormsg.ab2"
0002F302 <internal_errormsg.ab2@61> XINCLUDE "internal_errormsg.ab2"
0002F36C <internal_errormsg.ab2@62> XINCLUDE "internal_errormsg.ab2"
0002F3CA <internal_errormsg.ab2@63> XINCLUDE "internal_errormsg.ab2"
0002F438 <internal_errormsg.ab2@64> XINCLUDE "internal_errormsg.ab2"
0002F474 <internal_errormsg.ab2@65> XINCLUDE "internal_errormsg.ab2"
0002F492 <internal_errormsg.ab2@66> XINCLUDE "internal_errormsg.ab2"
0002F4B8 <internal_errormsg.ab2@67> XINCLUDE "internal_errormsg.ab2"
0002F4E8 <internal_errormsg.ab2@68> XINCLUDE "internal_errormsg.ab2"
0002F50C <internal_errormsg.ab2@69> XINCLUDE "internal_errormsg.ab2"
0002F53A <internal_errormsg.ab2@70> XINCLUDE "internal_errormsg.ab2"
0002F55E <internal_errormsg.ab2@71> XINCLUDE "internal_errormsg.ab2"
0002F574 <internal_errormsg.ab2@72> XINCLUDE "internal_errormsg.ab2"
0002F58A <internal_errormsg.ab2@73> XINCLUDE "internal_errormsg.ab2"
0002F590 <internal_errormsg.ab2@76> XINCLUDE "internal_errormsg.ab2"
0002F598 <internal_errormsg.ab2@78> XINCLUDE "internal_errormsg.ab2"
0002F59A <internal_errormsg.ab2@79> XINCLUDE "internal_errormsg.ab2"
0002F59E <internal_errormsg.ab2@80> XINCLUDE "internal_errormsg.ab2"
0002F5A6 <internal_errormsg.ab2@81> XINCLUDE "internal_errormsg.ab2"
0002F5A8 <internal_errormsg.ab2@82> XINCLUDE "internal_errormsg.ab2"
0002F5E2 <internal_errormsg.ab2@84> XINCLUDE "internal_errormsg.ab2"
0002F60E <internal_errormsg.ab2@85> XINCLUDE "internal_errormsg.ab2"
0002F63E <internal_errormsg.ab2@86> XINCLUDE "internal_errormsg.ab2"
0002F676 <internal_errormsg.ab2@87> XINCLUDE "internal_errormsg.ab2"
0002F6D0 <internal_errormsg.ab2@88> XINCLUDE "internal_errormsg.ab2"
0002F6D2 <internal_errormsg.ab2@92> XINCLUDE "internal_errormsg.ab2"
0002F6D6 <internal_errormsg.ab2@93> XINCLUDE "internal_errormsg.ab2"
0002F6DA <internal_errormsg.ab2@94> XINCLUDE "internal_errormsg.ab2"
0002F6DE <internal_errormsg.ab2@95> XINCLUDE "internal_errormsg.ab2"
0002F6E2 <internal_errormsg.ab2@96> XINCLUDE "internal_errormsg.ab2"
0002F6E6 <internal_errormsg.ab2@97> XINCLUDE "internal_errormsg.ab2"
0002F6EA <internal_errormsg.ab2@98> XINCLUDE "internal_errormsg.ab2"
0002F6EE <internal_errormsg.ab2@99> XINCLUDE "internal_errormsg.ab2"
0002F6F2 <internal_errormsg.ab2@100> XINCLUDE "internal_errormsg.ab2"
0002F6F6 <internal_errormsg.ab2@101> XINCLUDE "internal_errormsg.ab2"
0002F6FA <internal_errormsg.ab2@102> XINCLUDE "internal_errormsg.ab2"
0002F738 <internal_errormsg.ab2@103> XINCLUDE "internal_errormsg.ab2"
0002F76A <internal_errormsg.ab2@105> XINCLUDE "internal_errormsg.ab2"
0002F788 <internal_errormsg.ab2@106> XINCLUDE "internal_errormsg.ab2"
0002F7B2 <internal_errormsg.ab2@107> XINCLUDE "internal_errormsg.ab2"
0002F7CE <internal_errormsg.ab2@108> XINCLUDE "internal_errormsg.ab2"
0002F7E8 <internal_errormsg.ab2@109> XINCLUDE "internal_errormsg.ab2"
0002F806 <internal_errormsg.ab2@110> XINCLUDE "internal_errormsg.ab2"
0002F82A <internal_errormsg.ab2@111> XINCLUDE "internal_errormsg.ab2"
0002F82C <internal_errormsg.ab2@114> XINCLUDE "internal_errormsg.ab2"
0002F87E <internal_errormsg.ab2@115> XINCLUDE "internal_errormsg.ab2"
0002F8A6 <internal_errormsg.ab2@117> XINCLUDE "internal_errormsg.ab2"
0002F8CE <internal_errormsg.ab2@118> XINCLUDE "internal_errormsg.ab2"
0002F8EA <internal_errormsg.ab2@122> XINCLUDE "internal_errormsg.ab2"
0002F90A <internal_errormsg.ab2@123> XINCLUDE "internal_errormsg.ab2"
0002F922 <internal_errormsg.ab2@124> XINCLUDE "internal_errormsg.ab2"
0002F966 <internal_errormsg.ab2@125> XINCLUDE "internal_errormsg.ab2"
0002F9AE <internal_errormsg.ab2@126> XINCLUDE "internal_errormsg.ab2"
0002F9D8 <internal_errormsg.ab2@127> XINCLUDE "internal_errormsg.ab2"
0002FA02 <internal_errormsg.ab2@128> XINCLUDE "internal_errormsg.ab2"
0002FA1C <internal_errormsg.ab2@132> XINCLUDE "internal_errormsg.ab2"
0002FA46 <internal_errormsg.ab2@133> XINCLUDE "internal_errormsg.ab2"
0002FA9A <internal_errormsg.ab2@134> XINCLUDE "internal_errormsg.ab2"
0002FAE6 <internal_errormsg.ab2@135> XINCLUDE "internal_errormsg.ab2"
0002FB1E <internal_errormsg.ab2@136> XINCLUDE "internal_errormsg.ab2"
0002FB24 <internal_errormsg.ab2@139> XINCLUDE "internal_errormsg.ab2"
0002FB32 <internal_errormsg.ab2@141> XINCLUDE "internal_errormsg.ab2"
0002FB62 <internal_errormsg.ab2@144> XINCLUDE "internal_errormsg.ab2"
0002FB96 <internal_errormsg.ab2@145> XINCLUDE "internal_errormsg.ab2"
0002FBFC <internal_errormsg.ab2@146> XINCLUDE "internal_errormsg.ab2"
0002FC1A <internal_errormsg.ab2@147> XINCLUDE "internal_errormsg.ab2"
0002FC94 <internal_errormsg.ab2@148> XINCLUDE "internal_errormsg.ab2"
0002FCBC <internal_errormsg.ab2@149> XINCLUDE "internal_errormsg.ab2"
0002FCD2 <internal_errormsg.ab2@150> XINCLUDE "internal_errormsg.ab2"
0002FCE6 <internal_errormsg.ab2@151> XINCLUDE "internal_errormsg.ab2"
0002FCE8 <internal_errormsg.ab2@154> XINCLUDE "internal_errormsg.ab2"
0002FCE9 <internal_errormsg.ab2@155> XINCLUDE "internal_errormsg.ab2"
0002FCEA <internal_errormsg.ab2@156> XINCLUDE "internal_errormsg.ab2"
0002FD0A <internal_errormsg.ab2@158> XINCLUDE "internal_errormsg.ab2"
0002FD10 <internal_errormsg.ab2@161> XINCLUDE "internal_errormsg.ab2"
0002FD22 <internal_errormsg.ab2@163> XINCLUDE "internal_errormsg.ab2"
0002FD56 <internal_errormsg.ab2@166> XINCLUDE "internal_errormsg.ab2"
0002FD6E <internal_errormsg.ab2@167> XINCLUDE "internal_errormsg.ab2"
0002FD8A <internal_errormsg.ab2@168> XINCLUDE "internal_errormsg.ab2"
0002FDA2 <internal_errormsg.ab2@169> XINCLUDE "internal_errormsg.ab2"
0002FDC2 <internal_errormsg.ab2@170> XINCLUDE "internal_errormsg.ab2"
0002FDE2 <internal_errormsg.ab2@171> XINCLUDE "internal_errormsg.ab2"
0002FE08 <internal_errormsg.ab2@172> XINCLUDE "internal_errormsg.ab2"
0002FE1E <internal_errormsg.ab2@173> XINCLUDE "internal_errormsg.ab2"
0002FE3A <internal_errormsg.ab2@174> XINCLUDE "internal_errormsg.ab2"
0002FE64 <internal_errormsg.ab2@175> XINCLUDE "internal_errormsg.ab2"
0002FE7C <internal_errormsg.ab2@176> XINCLUDE "internal_errormsg.ab2"
0002FE98 <internal_errormsg.ab2@177> XINCLUDE "internal_errormsg.ab2"
0002FEB8 <internal_errormsg.ab2@178> XINCLUDE "internal_errormsg.ab2"
0002FED0 <internal_errormsg.ab2@179> XINCLUDE "internal_errormsg.ab2"
0002FED4 <internal_errormsg.ab2@182> XINCLUDE "internal_errormsg.ab2"
0002FEDA <internal_errormsg.ab2@183> XINCLUDE "internal_errormsg.ab2"
0002FEE0 <internal_errormsg.ab2@184> XINCLUDE "internal_errormsg.ab2"
0002FEF5 <internal_errormsg.ab2@185> XINCLUDE "internal_errormsg.ab2"
0002FEFB <internal_errormsg.ab2@187> XINCLUDE "internal_errormsg.ab2"
0002FEFC <internal_errormsg.ab2@188> XINCLUDE "internal_errormsg.ab2"
0002FF00 <internal_errormsg.ab2@191> XINCLUDE "internal_errormsg.ab2"
0002FF06 <internal_errormsg.ab2@192> XINCLUDE "internal_errormsg.ab2"
0002FF0C <internal_errormsg.ab2@193> XINCLUDE "internal_errormsg.ab2"
0002FF1F <internal_errormsg.ab2@194> XINCLUDE "internal_errormsg.ab2"
0002FF25 <internal_errormsg.ab2@196> XINCLUDE "internal_errormsg.ab2"
0002FF26 <internal_errormsg.ab2@197> XINCLUDE "internal_errormsg.ab2"
0002FF44 <internal_errormsg.ab2@199> XINCLUDE "internal_errormsg.ab2"
0002FF5C <internal_errormsg.ab2@200> XINCLUDE "internal_errormsg.ab2"
0002FF78 <internal_errormsg.ab2@201> XINCLUDE "internal_errormsg.ab2"
0002FFA2 <internal_errormsg.ab2@202> XINCLUDE "internal_errormsg.ab2"
0002FFBC <internal_errormsg.ab2@203> XINCLUDE "internal_errormsg.ab2"
0002FFDC <internal_errormsg.ab2@204> XINCLUDE "internal_errormsg.ab2"
0002FFFA <internal_errormsg.ab2@205> XINCLUDE "internal_errormsg.ab2"
00030028 <internal_errormsg.ab2@206> XINCLUDE "internal_errormsg.ab2"
00030032 <internal_errormsg.ab2@209> XINCLUDE "internal_errormsg.ab2"
00030064 <internal_errormsg.ab2@210> XINCLUDE "internal_errormsg.ab2"
00030082 <internal_errormsg.ab2@212> XINCLUDE "internal_errormsg.ab2"
000300A0 <internal_errormsg.ab2@213> XINCLUDE "internal_errormsg.ab2"
000300C0 <internal_errormsg.ab2@214> XINCLUDE "internal_errormsg.ab2"
000300E6 <internal_errormsg.ab2@215> XINCLUDE "internal_errormsg.ab2"
0003010C <internal_errormsg.ab2@216> XINCLUDE "internal_errormsg.ab2"
00030134 <internal_errormsg.ab2@217> XINCLUDE "internal_errormsg.ab2"
00030152 <internal_errormsg.ab2@218> XINCLUDE "internal_errormsg.ab2"
00030172 <internal_errormsg.ab2@219> XINCLUDE "internal_errormsg.ab2"
0003018C <internal_errormsg.ab2@220> XINCLUDE "internal_errormsg.ab2"
000301AE <internal_errormsg.ab2@221> XINCLUDE "internal_errormsg.ab2"
000301CC <internal_errormsg.ab2@222> XINCLUDE "internal_errormsg.ab2"
000301EE <internal_errormsg.ab2@223> XINCLUDE "internal_errormsg.ab2"
00030212 <internal_errormsg.ab2@224> XINCLUDE "internal_errormsg.ab2"
00030218 <internal_errormsg.ab2@227> XINCLUDE "internal_errormsg.ab2"
00030234 <internal_errormsg.ab2@228> XINCLUDE "internal_errormsg.ab2"
00030250 <internal_errormsg.ab2@230> XINCLUDE "internal_errormsg.ab2"
0003026E <internal_errormsg.ab2@231> XINCLUDE "internal_errormsg.ab2"
0003028C <internal_errormsg.ab2@232> XINCLUDE "internal_errormsg.ab2"
000302DA <internal_errormsg.ab2@233> XINCLUDE "internal_errormsg.ab2"
000302F8 <internal_errormsg.ab2@234> XINCLUDE "internal_errormsg.ab2"
00030316 <internal_errormsg.ab2@235> XINCLUDE "internal_errormsg.ab2"
00030330 <internal_errormsg.ab2@236> XINCLUDE "internal_errormsg.ab2"
0003037C <internal_errormsg.ab2@237> XINCLUDE "internal_errormsg.ab2"
000303A2 <internal_errormsg.ab2@238> XINCLUDE "internal_errormsg.ab2"
000303C2 <internal_errormsg.ab2@239> XINCLUDE "internal_errormsg.ab2"
000303E4 <internal_errormsg.ab2@240> XINCLUDE "internal_errormsg.ab2"
00030400 <internal_errormsg.ab2@241> XINCLUDE "internal_errormsg.ab2"
00030426 <internal_errormsg.ab2@242> XINCLUDE "internal_errormsg.ab2"
00030442 <internal_errormsg.ab2@243> XINCLUDE "internal_errormsg.ab2"
00030460 <internal_errormsg.ab2@244> XINCLUDE "internal_errormsg.ab2"
00030488 <internal_errormsg.ab2@245> XINCLUDE "internal_errormsg.ab2"
000304A4 <internal_errormsg.ab2@246> XINCLUDE "internal_errormsg.ab2"
000304B4 <internal_errormsg.ab2@247> XINCLUDE "internal_errormsg.ab2"
000304D6 <internal_errormsg.ab2@248> XINCLUDE "internal_errormsg.ab2"
000304DA <internal_errormsg.ab2@251> XINCLUDE "internal_errormsg.ab2"
000304DC <internal_errormsg.ab2@254> XINCLUDE "internal_errormsg.ab2"
000304F6 <internal_errormsg.ab2@255> XINCLUDE "internal_errormsg.ab2"
0003051A <internal_errormsg.ab2@257> XINCLUDE "internal_errormsg.ab2"
0003053A <internal_errormsg.ab2@258> XINCLUDE "internal_errormsg.ab2"
0003056C <internal_errormsg.ab2@259> XINCLUDE "internal_errormsg.ab2"
000305CA <internal_errormsg.ab2@260> XINCLUDE "internal_errormsg.ab2"
00030602 <internal_errormsg.ab2@261> XINCLUDE "internal_errormsg.ab2"
00030640 <internal_errormsg.ab2@262> XINCLUDE "internal_errormsg.ab2"
00030676 <internal_errormsg.ab2@263> XINCLUDE "internal_errormsg.ab2"
000306A8 <internal_errormsg.ab2@264> XINCLUDE "internal_errormsg.ab2"
000306CC <internal_errormsg.ab2@265> XINCLUDE "internal_errormsg.ab2"
000306F0 <internal_errormsg.ab2@266> XINCLUDE "internal_errormsg.ab2"
0003073A <internal_errormsg.ab2@267> XINCLUDE "internal_errormsg.ab2"
00030762 <internal_errormsg.ab2@268> XINCLUDE "internal_errormsg.ab2"
000307AC <internal_errormsg.ab2@269> XINCLUDE "internal_errormsg.ab2"
000307EC <internal_errormsg.ab2@270> XINCLUDE "internal_errormsg.ab2"
000307EC <AmiBlitz3.ab2@11202> XINCLUDE "internal_errormsg.ab2"
000307EE <AmiBlitz3.ab2@11206> ezerr:   Ds.w 1                                            ;for simple errors
000307F4 <AmiBlitz3.ab2@11212>    MOVE.l myline,d0
000307F8 <AmiBlitz3.ab2@11213>   BNE handle_compileerror__l2
000307FE <AmiBlitz3.ab2@11215>     MOVE.l a5,lastsourcepos
00030800 <AmiBlitz3.ab2@11217>     SUBA.l a5,a5
00030806 <AmiBlitz3.ab2@11219>   TST.l usedfrom
0003080A <AmiBlitz3.ab2@11220>   BEQ handle_compileerror__org
00030810 <AmiBlitz3.ab2@11221>     MOVEA.l usedfrom,a5
00030816 <AmiBlitz3.ab2@11224>   TST.w dirmode
0003081A <AmiBlitz3.ab2@11225>   BNE.b handle_compileerror__quiet
00030820 <AmiBlitz3.ab2@11226>     JSR call_setpointernormal
00030824 <AmiBlitz3.ab2@11227>     MOVE.w ezerr(PC),D0
00030828 <AmiBlitz3.ab2@11228>     BNE.w handle_compileerror__skip
0003082E <AmiBlitz3.ab2@11229>       MOVE.w cfetchmode,D0
00030832 <AmiBlitz3.ab2@11230>       BEQ.w handle_compileerror__skip2
0003083C <AmiBlitz3.ab2@11231>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00030842 <AmiBlitz3.ab2@11234>   MOVE.w constmode,D0
00030846 <AmiBlitz3.ab2@11235>   BEQ.b handle_compileerror__skip3
0003084A <AmiBlitz3.ab2@11236>     BSR.w asmerr2
00030850 <AmiBlitz3.ab2@11239>   MOVE.l firstlocal,D1
00030856 <AmiBlitz3.ab2@11240>   OR.l firstglob,D1
0003085A <AmiBlitz3.ab2@11241>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00030860 <AmiBlitz3.ab2@11242>     JSR JL_0_DB5C
00030868 <AmiBlitz3.ab2@11245>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00030872 <AmiBlitz3.ab2@11246>   CMP.l #"NORE",reqmode                                    ;for used functions
00030876 <AmiBlitz3.ab2@11247>   BEQ handle_compileerror__notproc_l1
00030880 <AmiBlitz3.ab2@11248>     MOVE.l linenumat,compilelinecounter
00030886 <AmiBlitz3.ab2@11251>   JSR close_compilewin
00030888 <AmiBlitz3.ab2@11254>   MOVEA.l (A7)+,A0
0003088E <AmiBlitz3.ab2@11255>   JSR errorstringparse
00030898 <AmiBlitz3.ab2@11256>   CMP.l #"NORE",reqmode                                    ;for used functions
0003089C <AmiBlitz3.ab2@11257>   BEQ handle_compileerror__skip_Lxx2
000308A2 <AmiBlitz3.ab2@11258>   TST.l CLIMode
000308A6 <AmiBlitz3.ab2@11259>   BNE 'climode_output
000308AC <AmiBlitz3.ab2@11261>     JSR save_errorfile
000308B0 <AmiBlitz3.ab2@11262>     BRA 'end_output
000308B6 <AmiBlitz3.ab2@11264>     JSR stdout_error
000308BC <AmiBlitz3.ab2@11266>     MOVE.l lastsourcepos,a5
000308BE <AmiBlitz3.ab2@11267> 'loop TST.b (a5)
000308C2 <AmiBlitz3.ab2@11268>       BEQ 'ok2
000308C4 <AmiBlitz3.ab2@11269>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
000308C8 <AmiBlitz3.ab2@11270>     BEQ 'ok
000308CC <AmiBlitz3.ab2@11271>     CMP.b #":",d0
000308D0 <AmiBlitz3.ab2@11272>     BEQ 'ok
000308D4 <AmiBlitz3.ab2@11273>     BRA 'loop
000308D6 <AmiBlitz3.ab2@11274> 'ok SUBQ.l #1,a5
000308DE <AmiBlitz3.ab2@11275> 'ok2 MOVE.w #0,lastchar
000308E6 <AmiBlitz3.ab2@11276>     MOVE.b #1,iserror
000308EC <AmiBlitz3.ab2@11277>     MOVE.l stackaddr,a7
000308EE <AmiBlitz3.ab2@11278>     RTS
000308F0 <AmiBlitz3.ab2@11284>   MOVE.l A0,-(a7)
0003092E <AmiBlitz3.ab2@11285>   !ComData_GetL{comFunc_ErrorRequest,A1}
00030930 <AmiBlitz3.ab2@11286>   MOVE.l (a7)+,A0
00030934 <AmiBlitz3.ab2@11288>   MOVEM.l d6/D7/A6,-(A7)
0003093A <AmiBlitz3.ab2@11289>   MOVE.l includeline,d7
00030940 <AmiBlitz3.ab2@11290>   MOVE.l #"INLN",a6
0003094A <AmiBlitz3.ab2@11291>   MOVE.l errstack,tempa7
0003094C <AmiBlitz3.ab2@11292>   JSR (A1)
00030976 <AmiBlitz3.ab2@11293>   !basic
000309B2 <AmiBlitz3.ab2@11294>    If Peek.l(Addr Window(3))<>0 Then WZCloseWindow 3
000309D0 <AmiBlitz3.ab2@11295>   !asm
000309D4 <AmiBlitz3.ab2@11296>   MOVEM.l (A7)+,D7/d6/A6
000309DA <AmiBlitz3.ab2@11299>   MOVE.l tempa7,a7
000309E0 <AmiBlitz3.ab2@11300>   MOVEA.l errcont,A0
000309E2 <AmiBlitz3.ab2@11302> RTS
000309E8 <AmiBlitz3.ab2@11305>   MOVEA.l errstack,A7
000309EE <AmiBlitz3.ab2@11306>   MOVEA.l errcont,A0
000309F0 <AmiBlitz3.ab2@11308> RTS
000309F2 <AmiBlitz3.ab2@11311>   MOVE.l (A7),D0
000309F8 <AmiBlitz3.ab2@11312>   MOVEA.l errstack,A7
000309FE <AmiBlitz3.ab2@11313>   MOVEA.l errcont,A0
00030A00 <AmiBlitz3.ab2@11314> JMP (A0)
00030A04 <AmiBlitz3.ab2@11320>   CMP.w #$7A,D0                                            ;'z'
00030A08 <AmiBlitz3.ab2@11321>    BHI.w tstalpha__no
00030A0C <AmiBlitz3.ab2@11322>   CMP.w #$41,D0                                            ;'A'
00030A10 <AmiBlitz3.ab2@11323>    BCS.w tstalpha__no
00030A14 <AmiBlitz3.ab2@11324>   CMP.w #$61,D0                                            ;'a'
00030A18 <AmiBlitz3.ab2@11325>    BCC.w tstalpha__yes
00030A1C <AmiBlitz3.ab2@11326>   CMP.w #$5A,D0                                            ;'Z'
00030A20 <AmiBlitz3.ab2@11327>    BHI.w tstalpha__no
00030A22 <AmiBlitz3.ab2@11330>   CMP.w D0,D0
00030A24 <AmiBlitz3.ab2@11333> RTS
00030A28 <AmiBlitz3.ab2@11341>   CMP.w #$30,D0                                            ;'0'
00030A2C <AmiBlitz3.ab2@11342>    BCS.w tstnum__skip
00030A30 <AmiBlitz3.ab2@11343>   CMP.w #$39,D0                                            ;'9'
00030A34 <AmiBlitz3.ab2@11344>    BHI.w tstnum__skip                                     
00030A36 <AmiBlitz3.ab2@11345>   CMP.w D0,D0
00030A38 <AmiBlitz3.ab2@11348> RTS
00030A5A <AmiBlitz3.ab2@11354>   !compare1                                                ;bsr.w tstalpha
00030A5E <AmiBlitz3.ab2@11355>    BEQ.w tstlab__skip
00030A70 <AmiBlitz3.ab2@11356>   !compare2                                                ;bsr.w tstnum2
00030A74 <AmiBlitz3.ab2@11357>    BEQ.w tstlab__skip
00030A78 <AmiBlitz3.ab2@11358>   CMP.w #$5F,D0                                            ;'_'
00030A7C <AmiBlitz3.ab2@11359>    BEQ.w tstlab__skip
00030A80 <AmiBlitz3.ab2@11360>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00030A82 <AmiBlitz3.ab2@11363> RTS
00030A8C <AmiBlitz3.ab2@11368>   MOVE.w oldqflag,instringon
00030A92 <AmiBlitz3.ab2@11369>   MOVEA.l lastsourcepos,A5
00030A98 <AmiBlitz3.ab2@11372>   MOVE.l a5,beforeparameterfetch
00030A9E <AmiBlitz3.ab2@11373>   LEA ptr_parameterstore,A1
00030AA0 <AmiBlitz3.ab2@11376>   MOVEQ.l #$00,D2
00030AA6 <AmiBlitz3.ab2@11379>   LEA chartab,a0
00030AA8 <AmiBlitz3.ab2@11380>   MOVEQ #0,d0
00030AAE <AmiBlitz3.ab2@11381>   MOVE.l A5,lastsourcepos
00030AB8 <AmiBlitz3.ab2@11382>   MOVE.w instringon,oldqflag
00030ABA <AmiBlitz3.ab2@11385>     MOVE.b (a5)+,d0
00030ABE <AmiBlitz3.ab2@11386>   CMP.b #$20,d0                                            ;space deftype
00030AC2 <AmiBlitz3.ab2@11387>   BEQ makename4__retry
00030AC8 <AmiBlitz3.ab2@11389>   MOVE.w d0,lastchar
00030ACC <AmiBlitz3.ab2@11390>   TST.b 0(a0,d0.w)
00030AD0 <AmiBlitz3.ab2@11391>   BNE makename__done
00030AD2 <AmiBlitz3.ab2@11400>   MOVE.b D0,(A1)+
00030AD4 <AmiBlitz3.ab2@11401>   ADDQ.l #1,D2
00030ADA <AmiBlitz3.ab2@11402>   MOVE.l A5,lastsourcepos
00030ADC <AmiBlitz3.ab2@11405>   MOVE.b (a5)+,d0
00030AE2 <AmiBlitz3.ab2@11406>   MOVE.b d0,lastchar+1
00030AE6 <AmiBlitz3.ab2@11407>   CMP.b #$20,d0
00030AEA <AmiBlitz3.ab2@11408>   BEQ makename__loop_l20
00030AEE <AmiBlitz3.ab2@11410>   TST.b 0(a0,d0)
00030AF2 <AmiBlitz3.ab2@11411>   BEQ makename__loop
00030AF6 <AmiBlitz3.ab2@11412>   CMP.b #2,d0
00030AFA <AmiBlitz3.ab2@11413>   BNE makename__loop_lf1
00030B00 <AmiBlitz3.ab2@11414>   MOVEA.l usedfrom,A5
00030B06 <AmiBlitz3.ab2@11415>   CLR.l usedfrom
00030B0A <AmiBlitz3.ab2@11416> BRA makename__loop_ln1
00030B0E <AmiBlitz3.ab2@11419>   CMP.b #1,d0
00030B12 <AmiBlitz3.ab2@11420>   BNE makename__loop_l20
00030B16 <AmiBlitz3.ab2@11421>   MOVEA.l cmakea5(PC),A5
00030B1A <AmiBlitz3.ab2@11422> BRA makename__loop_ln1
00030B1E <AmiBlitz3.ab2@11425>   CMP.b #$7e,d0
00030B22 <AmiBlitz3.ab2@11426>             BNE makename__loop_lt
00030B28 <AmiBlitz3.ab2@11427>             TST.w cmake
00030B2C <AmiBlitz3.ab2@11428>             BNE.w makename__loop_a1
00030B2E <AmiBlitz3.ab2@11429>             SUBQ.l #1,a5
00030B32 <AmiBlitz3.ab2@11430>             BSR.w get1bytemain
00030B36 <AmiBlitz3.ab2@11431> BRA makename__loop
00030B3A <AmiBlitz3.ab2@11435> BRA makename__loop_gpex
00030B3E <AmiBlitz3.ab2@11439>   BSR.w getchar
00030B60 <AmiBlitz3.ab2@11440>    !compare1                                               ;bsr.w tstalpha
00030B64 <AmiBlitz3.ab2@11441>    BEQ.w makename__loop_getp1
00030B76 <AmiBlitz3.ab2@11442>    !compare2                                               ;bsr.w tstnum
00030B7A <AmiBlitz3.ab2@11443>    BEQ.w makename__loop_getp1
00030B7E <AmiBlitz3.ab2@11444>   CMP.w #$5F,D0                                            ;'_'
00030B82 <AmiBlitz3.ab2@11445>    BEQ.w makename__loop_getp1
00030B86 <AmiBlitz3.ab2@11446>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00030B8A <AmiBlitz3.ab2@11450>       BNE makename__loop_gpex
00030B8E <AmiBlitz3.ab2@11451>       CMP.b #$20,d0
00030B92 <AmiBlitz3.ab2@11452>       BNE.w makename__loop
00030B94 <AmiBlitz3.ab2@11455>      TST.b d0
00030B98 <AmiBlitz3.ab2@11456>      BPL makename__loop_l10
00030B9A <AmiBlitz3.ab2@11457>      SUBQ.l #1,a5
00030B9E <AmiBlitz3.ab2@11458>      BSR get1byte_
00030BA2 <AmiBlitz3.ab2@11461>    CMP.w #$20,D0
00030BA6 <AmiBlitz3.ab2@11462>    BNE.w makename__done
00030BA8 <AmiBlitz3.ab2@11463>    MOVEQ #0,d0
00030BAE <AmiBlitz3.ab2@11464>   MOVE.l a5,lastsourcepos
00030BB0 <AmiBlitz3.ab2@11467>   MOVE.b (a5)+,d0                                          ;neuneu
00030BB4 <AmiBlitz3.ab2@11468>   BPL makename__loop_l101:
00030BB6 <AmiBlitz3.ab2@11469>   ASL.w #8,d0
00030BB8 <AmiBlitz3.ab2@11470>   MOVE.b (a5)+,d0
00030BBE <AmiBlitz3.ab2@11473>   TST.w instringon
00030BC2 <AmiBlitz3.ab2@11474>   BNE makename__loop_l102
00030BC6 <AmiBlitz3.ab2@11475>   CMP.b #$20,d0
00030BCA <AmiBlitz3.ab2@11476>   BEQ makename__loop_l103
00030BCE <AmiBlitz3.ab2@11477>   CMP.b #";",d0
00030BD2 <AmiBlitz3.ab2@11478>   BNE makename__loop_l102
00030BD4 <AmiBlitz3.ab2@11481>   MOVE.b (A5)+,D0
00030BD8 <AmiBlitz3.ab2@11482>              BEQ makename__loop_l1
00030BDC <AmiBlitz3.ab2@11483>              CMP.b #":",d0
00030BE0 <AmiBlitz3.ab2@11484>              BNE makename__loop_lr                         ;:@
00030BE4 <AmiBlitz3.ab2@11485>              CMP.b #"@",(a5)
00030BE8 <AmiBlitz3.ab2@11486>              BNE makename__loop_lr
00030BEA <AmiBlitz3.ab2@11487>              ADDQ #1,a5
00030BF0 <AmiBlitz3.ab2@11491>   MOVE.w d0,lastchar
00030BF4 <AmiBlitz3.ab2@11495>   CMP.b #";",d0
00030BF8 <AmiBlitz3.ab2@11496>   BEQ makename__done_l11
00030BFA <AmiBlitz3.ab2@11497>   CLR.b (A1)
00030BFC <AmiBlitz3.ab2@11499>   TST.w D2
00030BFE <AmiBlitz3.ab2@11500> RTS
00030C00 <AmiBlitz3.ab2@11503>   CLR.b (a1)
00030C02 <AmiBlitz3.ab2@11504>   MOVEQ #0,d0
00030C08 <AmiBlitz3.ab2@11505>   MOVE.w d0,lastchar
00030C0A <AmiBlitz3.ab2@11507>   TST.w D2
00030C0C <AmiBlitz3.ab2@11508> RTS
00030C0E <AmiBlitz3.ab2@11514>   MOVE.l (A2),D0
00030C12 <AmiBlitz3.ab2@11517>   BEQ.w findlast__here
00030C14 <AmiBlitz3.ab2@11518>   MOVEA.l D0,A2
00030C18 <AmiBlitz3.ab2@11519> BRA.w findlast__loop
00030C1C <AmiBlitz3.ab2@11522> BRA.w reget
00030C1E <AmiBlitz3.ab2@11528>   MOVE.l (A2),-(A7)
00030C22 <AmiBlitz3.ab2@11529>   BSR.w addlabel
00030C24 <AmiBlitz3.ab2@11530>   MOVE.l (A7)+,(A2)
00030C26 <AmiBlitz3.ab2@11531> RTS
00030C2C <AmiBlitz3.ab2@11536>   CLR.l fp0addr
00030C32 <AmiBlitz3.ab2@11537>   TST.w dirmode
00030C36 <AmiBlitz3.ab2@11538>    BNE.w illdirerr
00030C38 <AmiBlitz3.ab2@11539>   MOVEQ.l #$00,D0
00030C3A <AmiBlitz3.ab2@11540>   MOVE.w D7,D0
00030C3C <AmiBlitz3.ab2@11541>   ADD.w D2,D0
00030C3E <AmiBlitz3.ab2@11542>   ADDQ.w #1,D0
00030C40 <AmiBlitz3.ab2@11543>   MOVE.w D0,D2
00030C42 <AmiBlitz3.ab2@11544>   ADDQ.l #2,d0
00030C44 <AmiBlitz3.ab2@11545>   MOVEQ.l #$01,D1
00030C4A <AmiBlitz3.ab2@11546>   MOVEA.l _execbase,A6
00030C50 <AmiBlitz3.ab2@11547>   MOVE.l mempool2,a0
00030C54 <AmiBlitz3.ab2@11548>   JSR _AllocPooled(a6)
00030C5A <AmiBlitz3.ab2@11550>   MOVE.l lastlabel,a2
00030C5C <AmiBlitz3.ab2@11551>   MOVE.l D0,(A2)
00030C5E <AmiBlitz3.ab2@11552>   MOVE.l d0,a0
00030C60 <AmiBlitz3.ab2@11553>   CLR.l (a0)
00030C66 <AmiBlitz3.ab2@11554>   MOVE.l a0,lastlabel
00030C68 <AmiBlitz3.ab2@11555>   MOVE.l d0,A2
00030C6C <AmiBlitz3.ab2@11556>   LEA -$1(A0,D7.W),A0
00030C6E <AmiBlitz3.ab2@11557>   MOVE.b D2,(A0)+
00030C74 <AmiBlitz3.ab2@11558>   LEA ptr_parameterstore,A1
00030C76 <AmiBlitz3.ab2@11559>   MOVEQ #0,d0
00030C78 <AmiBlitz3.ab2@11560>   MOVEQ #0,d1
00030C7A <AmiBlitz3.ab2@11563>   MOVE.b (A1)+,d1
00030C7E <AmiBlitz3.ab2@11564>    BEQ 'l1
00030C84 <AmiBlitz3.ab2@11565>    !hashalgo
00030C86 <AmiBlitz3.ab2@11566>    MOVE.b d1,(A0)+
00030C8A <AmiBlitz3.ab2@11567> BRA addlabel_loop2a
00030C8C <AmiBlitz3.ab2@11570>    CLR.b (a0)+
00030C92 <AmiBlitz3.ab2@11571>    LEA labelhash,a0
00030C98 <AmiBlitz3.ab2@11572>    AND.l #hashsize,d0
00030C9A <AmiBlitz3.ab2@11573>    ASL.l #2,d0
00030C9E <AmiBlitz3.ab2@11574>    MOVE.l 0(a0,d0),d1
00030CA2 <AmiBlitz3.ab2@11575>    MOVE.l d1,$c(a2)
00030CA6 <AmiBlitz3.ab2@11576>    MOVE.l a2,0(a0,d0)
00030CA8 <AmiBlitz3.ab2@11577>    MOVEQ #0,d0
00030CAC <AmiBlitz3.ab2@11578> BRA.w reget
00030CB2 <AmiBlitz3.ab2@11582>    TST.b newvariable
00030CB6 <AmiBlitz3.ab2@11583>    BNE addlabel
00030CBC <AmiBlitz3.ab2@11586>   TST.w dirmode
00030CC0 <AmiBlitz3.ab2@11587>    BNE.w illdirerr
00030CC2 <AmiBlitz3.ab2@11588>   MOVEQ.l #$00,D0
00030CC4 <AmiBlitz3.ab2@11589>   MOVE.w D7,D0
00030CC6 <AmiBlitz3.ab2@11590>   ADD.w D2,D0
00030CC8 <AmiBlitz3.ab2@11591>   ADDQ.w #1,D0
00030CCA <AmiBlitz3.ab2@11592>   MOVE.w D0,D2
00030CCC <AmiBlitz3.ab2@11593>   MOVEQ.l #$01,D1
00030CD2 <AmiBlitz3.ab2@11594>   MOVEA.l _execbase,A6
00030CD8 <AmiBlitz3.ab2@11595>   MOVE.l mempool2,a0
00030CDC <AmiBlitz3.ab2@11596>   JSR _AllocPooled(a6)
00030CDE <AmiBlitz3.ab2@11597>   MOVEA.l D0,A0
00030CE4 <AmiBlitz3.ab2@11599>   LEA varbase,a2
00030CE6 <AmiBlitz3.ab2@11600>   MOVE.l (a2),(a0)
00030CE8 <AmiBlitz3.ab2@11601>   MOVE.l A0,(A2)
00030CEA <AmiBlitz3.ab2@11602>   MOVEA.l A0,A2
00030CEE <AmiBlitz3.ab2@11603>   LEA -$1(A0,D7.W),A0
00030CF0 <AmiBlitz3.ab2@11604>   MOVE.b D2,(A0)+
00030CF6 <AmiBlitz3.ab2@11605>   LEA ptr_parameterstore,A1
00030CF8 <AmiBlitz3.ab2@11606>   MOVEQ #0,d0
00030CFA <AmiBlitz3.ab2@11607>   MOVEQ #0,d1
00030CFC <AmiBlitz3.ab2@11610>   MOVE.b (A1)+,d1
00030D00 <AmiBlitz3.ab2@11611>    BEQ 'l12
00030D06 <AmiBlitz3.ab2@11612>    !hashalgo
00030D08 <AmiBlitz3.ab2@11613>    MOVE.b d1,(A0)+
00030D0C <AmiBlitz3.ab2@11614> BRA 'l11
00030D0E <AmiBlitz3.ab2@11617>   CLR.b (a0)+
00030D14 <AmiBlitz3.ab2@11618>   LEA variablehash,a0
00030D1A <AmiBlitz3.ab2@11619>    AND.l #hashsize,d0
00030D1C <AmiBlitz3.ab2@11620>    ASL.l #2,d0
00030D20 <AmiBlitz3.ab2@11621>    MOVE.l 0(a0,d0),d1
00030D24 <AmiBlitz3.ab2@11622>    MOVE.l d1,$e(a2)
00030D28 <AmiBlitz3.ab2@11623>    MOVE.l a2,0(a0,d0)
00030D2A <AmiBlitz3.ab2@11624>    MOVEQ #0,d0
00030D2E <AmiBlitz3.ab2@11625> BRA.w reget
00030D34 <AmiBlitz3.ab2@11629>   TST.w dirmode
00030D38 <AmiBlitz3.ab2@11630>    BNE.w illdirerr
00030D3A <AmiBlitz3.ab2@11637>   MOVEQ.l #$00,D0
00030D3C <AmiBlitz3.ab2@11638>   MOVE.w D7,D0
00030D3E <AmiBlitz3.ab2@11639>   ADD.w D2,D0
00030D40 <AmiBlitz3.ab2@11640>   ADDQ.w #1,D0
00030D42 <AmiBlitz3.ab2@11641>   MOVE.w D0,D2
00030D44 <AmiBlitz3.ab2@11642>   MOVEQ.l #$01,D1
00030D4A <AmiBlitz3.ab2@11643>   MOVEA.l _execbase,A6
00030D50 <AmiBlitz3.ab2@11644>   MOVE.l mempool2,a0
00030D54 <AmiBlitz3.ab2@11645>   JSR _AllocPooled(a6)
00030D56 <AmiBlitz3.ab2@11647>   MOVEA.l D0,A0
00030D58 <AmiBlitz3.ab2@11648>   MOVE.l A0,(A2)
00030D5A <AmiBlitz3.ab2@11649>   CLR.l (a0)
00030D5E <AmiBlitz3.ab2@11650>   CLR.l 8(a0)                                              ;clear next
00030D60 <AmiBlitz3.ab2@11651>   MOVEA.l A0,A2
00030D64 <AmiBlitz3.ab2@11652>   LEA -$1(A0,D7.W),A0
00030D66 <AmiBlitz3.ab2@11653>   MOVE.b D2,(A0)+                                          ;put in struct length
00030D6C <AmiBlitz3.ab2@11654>   LEA ptr_parameterstore,A1
00030D6E <AmiBlitz3.ab2@11655>   MOVEQ #0,d0
00030D70 <AmiBlitz3.ab2@11656>   MOVEQ #0,d1
00030D72 <AmiBlitz3.ab2@11659>   MOVE.b (A1)+,d1
00030D74 <AmiBlitz3.ab2@11662>   MOVE.b d1,(A0)+
00030D78 <AmiBlitz3.ab2@11663>   BNE.w addlabel_loop2
00030D7C <AmiBlitz3.ab2@11664> BRA.w reget
00030D7E <AmiBlitz3.ab2@11668>   MOVEQ.l #$13,D7
00030D84 <AmiBlitz3.ab2@11669>   LEA constantbase,A2
00030D88 <AmiBlitz3.ab2@11670> BRA.w findlab
00030D8A <AmiBlitz3.ab2@11674>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
00030D90 <AmiBlitz3.ab2@11675>   LEA xinclude_base,A2
00030D94 <AmiBlitz3.ab2@11676> BRA.w findlab
00030D96 <AmiBlitz3.ab2@11680>   MOVEQ.l #$09,D7
00030D9C <AmiBlitz3.ab2@11681>   LEA firstconst,A2
00030DA0 <AmiBlitz3.ab2@11682> BRA.w findlab
00030DA2 <AmiBlitz3.ab2@11686>   MOVEQ.l #$0d,D7                                          ;find macro
00030DA8 <AmiBlitz3.ab2@11687>   LEA macrobase,A2
00030DAC <AmiBlitz3.ab2@11688> BRA.w findlab
00030DB2 <AmiBlitz3.ab2@11692>   LEA labelhash,A2
00030DB4 <AmiBlitz3.ab2@11693>   MOVEQ.l #$13,D7
00030DB6 <AmiBlitz3.ab2@11694>   EXT.l d2
00030DBC <AmiBlitz3.ab2@11695>   LEA ptr_parameterstore,A0
00030DBE <AmiBlitz3.ab2@11696>   MOVEQ #0,d0
00030DC0 <AmiBlitz3.ab2@11697>   MOVEQ #0,d1
00030DC2 <AmiBlitz3.ab2@11700>     MOVE.b (a0)+,d1
00030DC6 <AmiBlitz3.ab2@11701>     BEQ 'l15
00030DCC <AmiBlitz3.ab2@11702>     !hashalgo
00030DD0 <AmiBlitz3.ab2@11703> BRA 'l20
00030DD6 <AmiBlitz3.ab2@11706>   AND.l #hashsize,d0
00030DD8 <AmiBlitz3.ab2@11707>   ASL.l #2,d0
00030DDC <AmiBlitz3.ab2@11708>   MOVE.l 0(a2,d0),d0
00030DE0 <AmiBlitz3.ab2@11709> BRA 'l11
00030DE4 <AmiBlitz3.ab2@11712>   MOVE.l $c(A2),D0                                         ;find label
00030DE8 <AmiBlitz3.ab2@11715>   BEQ findlab__no
00030DEA <AmiBlitz3.ab2@11716>   MOVEA.l D0,A2
00030DEC <AmiBlitz3.ab2@11717>   MOVEQ.l #$00,D0
00030DF0 <AmiBlitz3.ab2@11718>   MOVE.b -$1(A2,D7.l),D0
00030DF6 <AmiBlitz3.ab2@11719>   LEA ptr_parameterstore,A0
00030DF8 <AmiBlitz3.ab2@11720>   SUB.l D7,D0
00030DFA <AmiBlitz3.ab2@11721>   SUBQ.l #1,D0
00030DFC <AmiBlitz3.ab2@11722>   CMP.l D0,D2
00030E00 <AmiBlitz3.ab2@11723>    BNE.b 'l10
00030E04 <AmiBlitz3.ab2@11724>   LEA $0(A2,D7.W),A1
00030E06 <AmiBlitz3.ab2@11725>   SUBQ.l #1,D0
00030E08 <AmiBlitz3.ab2@11728>     MOVE.b (a1)+,d1
00030E0A <AmiBlitz3.ab2@11729>     CMP.b (a0)+,d1
00030E0E <AmiBlitz3.ab2@11731>     BNE.b 'l10
00030E12 <AmiBlitz3.ab2@11732>   DBF D0,'l201
00030E16 <AmiBlitz3.ab2@11734>   BSR.w reget
00030E18 <AmiBlitz3.ab2@11735>   CMP.w D0,D0
00030E1A <AmiBlitz3.ab2@11736> RTS
00030E1C <AmiBlitz3.ab2@11740>   MOVEQ.l #$0B,D7
00030E20 <AmiBlitz3.ab2@11741> BRA.w findlab
00030E26 <AmiBlitz3.ab2@11745>   LEA firstproc,A2
00030E2C <AmiBlitz3.ab2@11746>   MOVE.l #$21+#funcentry_extend,D7
00030E30 <AmiBlitz3.ab2@11747> BRA findlab
00030E36 <AmiBlitz3.ab2@11751>   LEA firstfor,A2
00030E38 <AmiBlitz3.ab2@11752>   MOVEQ.l #$11,D7
00030E3C <AmiBlitz3.ab2@11753> BRA.w findlab
00030E3E <AmiBlitz3.ab2@11757>   MOVEQ.l #$0F,D7
00030E42 <AmiBlitz3.ab2@11758> BRA.w findlab
00030E44 <AmiBlitz3.ab2@11762>   MOVEQ.l #$0F+4,D7
00030E4A <AmiBlitz3.ab2@11763>   TST.b newvariable
00030E4E <AmiBlitz3.ab2@11764>    BNE.w findlab
00030E54 <AmiBlitz3.ab2@11765>   LEA variablehash,A2
00030E5A <AmiBlitz3.ab2@11766>   LEA ptr_parameterstore,A0
00030E5C <AmiBlitz3.ab2@11767>   MOVEQ #0,d0
00030E5E <AmiBlitz3.ab2@11768>   MOVEQ #0,d1
00030E60 <AmiBlitz3.ab2@11771>     MOVE.b (a0)+,d1
00030E64 <AmiBlitz3.ab2@11772>     BEQ 'l15
00030E6A <AmiBlitz3.ab2@11773>     !hashalgo
00030E6E <AmiBlitz3.ab2@11774> BRA 'l20
00030E74 <AmiBlitz3.ab2@11777>   AND.l #hashsize,d0
00030E76 <AmiBlitz3.ab2@11778>   ASL.l #2,d0
00030E7A <AmiBlitz3.ab2@11779>   MOVE.l 0(a2,d0),d0
00030E7E <AmiBlitz3.ab2@11780> BRA 'l11
00030E82 <AmiBlitz3.ab2@11783>   MOVE.l $e(A2),D0                                         ;find label
00030E86 <AmiBlitz3.ab2@11786>   BEQ findlab__no
00030E88 <AmiBlitz3.ab2@11787>   MOVEA.l D0,A2
00030E8A <AmiBlitz3.ab2@11788>   MOVEQ.l #$00,D0
00030E8E <AmiBlitz3.ab2@11789>   MOVE.b -$1(A2,D7.W),D0
00030E94 <AmiBlitz3.ab2@11790>   LEA ptr_parameterstore,A0
00030E96 <AmiBlitz3.ab2@11791>   SUB.w D7,D0
00030E98 <AmiBlitz3.ab2@11792>   SUBQ.l #1,D0
00030E9A <AmiBlitz3.ab2@11793>   CMP.w D0,D2
00030E9E <AmiBlitz3.ab2@11794>    BNE.b 'l10
00030EA2 <AmiBlitz3.ab2@11795>   LEA $0(A2,D7.W),A1
00030EA4 <AmiBlitz3.ab2@11796>   SUBQ.l #1,D0
00030EA6 <AmiBlitz3.ab2@11799>     MOVE.b (a1)+,d1
00030EA8 <AmiBlitz3.ab2@11800>     CMP.b (a0)+,d1
00030EAC <AmiBlitz3.ab2@11802>     BNE.b 'l10
00030EB0 <AmiBlitz3.ab2@11803>   DBF D0,'l201
00030EB4 <AmiBlitz3.ab2@11805>   BSR.w reget
00030EB6 <AmiBlitz3.ab2@11806>   CMP.w D0,D0
00030EB8 <AmiBlitz3.ab2@11807> RTS
00030EBA <AmiBlitz3.ab2@11820>     MOVE.l (A2),D0                                         ;find label
00030EBE <AmiBlitz3.ab2@11821>      BEQ.b findlab__no
00030EC0 <AmiBlitz3.ab2@11822>     MOVEA.l D0,A2
00030EC2 <AmiBlitz3.ab2@11823>     MOVEQ.l #$00,D0
00030EC6 <AmiBlitz3.ab2@11824>     MOVE.b -$1(A2,D7.W),D0
00030EC8 <AmiBlitz3.ab2@11825>     SUB.l D7,D0
00030ECA <AmiBlitz3.ab2@11826>     SUBQ.l #1,D0
00030ECC <AmiBlitz3.ab2@11827>   CMP.w D0,D2
00030ED0 <AmiBlitz3.ab2@11828>   BNE.b findlab__loop
00030ED4 <AmiBlitz3.ab2@11830>   LEA $0(A2,D7.W),A1
00030EDA <AmiBlitz3.ab2@11831>   LEA ptr_parameterstore,A0
00030EDC <AmiBlitz3.ab2@11832>   SUBQ.l #1,D0
00030EDE <AmiBlitz3.ab2@11835>     MOVE.b (a1)+,d1
00030EE0 <AmiBlitz3.ab2@11836>     CMP.b (a0)+,d1
00030EE4 <AmiBlitz3.ab2@11838>     BNE.b findlab__loop
00030EE8 <AmiBlitz3.ab2@11839>   DBF D0,findlab__loop2
00030EEC <AmiBlitz3.ab2@11841>   BSR.w reget
00030EEE <AmiBlitz3.ab2@11842>   CMP.w D0,D0
00030EF0 <AmiBlitz3.ab2@11843> RTS
00030EF4 <AmiBlitz3.ab2@11846>   BSR.w reget
00030EF6 <AmiBlitz3.ab2@11847>   MOVEQ.l #-$01,D1
00030EF8 <AmiBlitz3.ab2@11848> RTS
00030EFE <AmiBlitz3.ab2@11852>   MOVEA.l alllocals,A4
00030F04 <AmiBlitz3.ab2@11853>   CLR.l alllocals
00030F08 <AmiBlitz3.ab2@11857>     CMPA.w #$0,A4
00030F0C <AmiBlitz3.ab2@11858>      BEQ.b freeprocvs__done
00030F10 <AmiBlitz3.ab2@11859>     MOVEA.l $4(A4),A3
00030F14 <AmiBlitz3.ab2@11861>     MOVEA.l $8(A4),A3
00030F16 <AmiBlitz3.ab2@11863>     MOVEA.l A4,A1
00030F18 <AmiBlitz3.ab2@11864>     MOVEA.l (A4),A4
00030F1A <AmiBlitz3.ab2@11865>     MOVEQ.l #$0C,D0
00030F20 <AmiBlitz3.ab2@11866>     MOVEA.l _execbase,A6
00030F26 <AmiBlitz3.ab2@11867>     MOVE.l mempool,a0
00030F2A <AmiBlitz3.ab2@11868>     JSR _FreePooled(A6)
00030F2E <AmiBlitz3.ab2@11869> BRA.b freeprocvs__loop
00030F34 <AmiBlitz3.ab2@11872>   CLR.l firstglob                                          ;fix 2*aclearallvar called
00030F3A <AmiBlitz3.ab2@11873>   CLR.l firstlocal
00030F40 <AmiBlitz3.ab2@11874>   CLR.l sharebase
00030F46 <AmiBlitz3.ab2@11875>   TST.l mempool2
00030F4A <AmiBlitz3.ab2@11876>   BEQ freeprocvs__done_l10
00030F50 <AmiBlitz3.ab2@11878>   MOVEA.l _execbase,A6
00030F56 <AmiBlitz3.ab2@11879>   MOVE.l mempool2,a0
00030F5C <AmiBlitz3.ab2@11880>   CLR.l mempool2
00030F60 <AmiBlitz3.ab2@11881>   JSR _DeletePool(a6)
00030F66 <AmiBlitz3.ab2@11884>   MOVE.l _execbase,a6
00030F6C <AmiBlitz3.ab2@11885>   MOVE.l #$10000,d0
00030F72 <AmiBlitz3.ab2@11886>   MOVE.l #80000,d1
00030F74 <AmiBlitz3.ab2@11887>   MOVE.l d1,d2
00030F78 <AmiBlitz3.ab2@11888>   JSR _CreatePool(a6)
00030F7E <AmiBlitz3.ab2@11889>   MOVE.l d0,mempool2
00030F80 <AmiBlitz3.ab2@11890> RTS
00030F84 <AmiBlitz3.ab2@11894>   CMPA.w #$0,A3
00030F88 <AmiBlitz3.ab2@11895>    BEQ.w freevars__done
00030F8A <AmiBlitz3.ab2@11896>   MOVEA.l A3,A1
00030F8C <AmiBlitz3.ab2@11897>   MOVEA.l (A3),A3
00030F8E <AmiBlitz3.ab2@11898>   MOVEQ.l #$00,D0
00030F92 <AmiBlitz3.ab2@11899>   MOVE.b $E(A1),D0
00030F98 <AmiBlitz3.ab2@11900>   MOVEA.l _execbase,A6
00030F9E <AmiBlitz3.ab2@11901>   MOVE.l mempool2,a0
00030FA2 <AmiBlitz3.ab2@11902>   JSR _FreePooled(A6)
00030FA6 <AmiBlitz3.ab2@11903> BRA.w freevars
00030FAA <AmiBlitz3.ab2@11906>     CMPA.w #$0,A3
00030FAE <AmiBlitz3.ab2@11907>      BEQ.w freevars__done
00030FB0 <AmiBlitz3.ab2@11908>     MOVEA.l A3,A1
00030FB2 <AmiBlitz3.ab2@11909>     MOVEA.l (A3),A3
00030FB4 <AmiBlitz3.ab2@11910>     MOVEQ.l #$00,D0
00030FB8 <AmiBlitz3.ab2@11911>     MOVE.b $E+4(A1),D0
00030FBE <AmiBlitz3.ab2@11912>     MOVEA.l _execbase,A6
00030FC4 <AmiBlitz3.ab2@11913>     MOVE.l mempool2,a0
00030FC8 <AmiBlitz3.ab2@11914>     JSR _FreePooled(A6)
00030FCC <AmiBlitz3.ab2@11915> BRA.w freevarsb
00030FCE <AmiBlitz3.ab2@11918> RTS
00030FD4 <AmiBlitz3.ab2@11922>   MOVEA.l currentlabeladdr,A0
00030FDA <AmiBlitz3.ab2@11923>   MOVE.l a0,lastlabel
00030FDC <AmiBlitz3.ab2@11924>   MOVEA.l (A0),A2
00030FDE <AmiBlitz3.ab2@11925>   CLR.l (A0)
00030FE4 <AmiBlitz3.ab2@11926>   MOVEA.l _execbase,A6
00030FE8 <AmiBlitz3.ab2@11929>   CMPA.w #$0,A2
00030FEC <AmiBlitz3.ab2@11930>    BEQ.w clearlabels__done
00030FF0 <AmiBlitz3.ab2@11931>   MOVE.l $4(A2),D0
00030FF4 <AmiBlitz3.ab2@11932>   BTST #$0,D0
00030FF8 <AmiBlitz3.ab2@11933>    BNE.w clearlabels__skip
00030FFA <AmiBlitz3.ab2@11934>   MOVEA.l D0,A3
00030FFE <AmiBlitz3.ab2@11937>     CMPA.w #$0,A3
00031002 <AmiBlitz3.ab2@11938>      BEQ.w clearlabels__skip
00031004 <AmiBlitz3.ab2@11939>     MOVEA.l A3,A1
00031006 <AmiBlitz3.ab2@11940>     MOVEA.l (A3),A3
00031008 <AmiBlitz3.ab2@11941>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0003100E <AmiBlitz3.ab2@11942>     MOVE.l mempool,a0
00031012 <AmiBlitz3.ab2@11943>     JSR _FreePooled(A6)
00031016 <AmiBlitz3.ab2@11944> BRA.w clearlabels__loop2
00031018 <AmiBlitz3.ab2@11947>   MOVEQ.l #$00,D0
0003101C <AmiBlitz3.ab2@11948>   MOVE.b $12(A2),D0
0003101E <AmiBlitz3.ab2@11949>   MOVEA.l A2,A1
00031020 <AmiBlitz3.ab2@11950>   MOVEA.l (A2),A2
00031026 <AmiBlitz3.ab2@11951>   MOVE.l mempool2,a0
0003102A <AmiBlitz3.ab2@11953> BRA.w clearlabels__loop
0003102C <AmiBlitz3.ab2@11956> RTS
00031032 <AmiBlitz3.ab2@11960>   MOVEA.l firstpend,A3
00031038 <AmiBlitz3.ab2@11961>   CLR.l firstpend
0003103E <AmiBlitz3.ab2@11962>   MOVEA.l _execbase,A6
00031042 <AmiBlitz3.ab2@11965>     CMPA.w #$0,A3
00031046 <AmiBlitz3.ab2@11966>      BEQ.w freepends__done
00031048 <AmiBlitz3.ab2@11967>     MOVEA.l A3,A1
0003104A <AmiBlitz3.ab2@11968>     MOVEQ.l #$08,D0
0003104C <AmiBlitz3.ab2@11969>     MOVEA.l (A3),A3
00031052 <AmiBlitz3.ab2@11970>     MOVE.l mempool,a0
00031056 <AmiBlitz3.ab2@11971>     JSR _FreePooled(A6)
0003105A <AmiBlitz3.ab2@11972> BRA.w fpnd2
0003105C <AmiBlitz3.ab2@11975> RTS
00031062 <AmiBlitz3.ab2@11979>   MOVEA.l firstproc,A2
00031068 <AmiBlitz3.ab2@11980>   CLR.l firstproc
0003106E <AmiBlitz3.ab2@11981>   MOVEA.l _execbase,A6
00031072 <AmiBlitz3.ab2@11984>     CMPA.w #$0,A2
00031076 <AmiBlitz3.ab2@11985>      BEQ.w clearfunctionlist__done
00031078 <AmiBlitz3.ab2@11986>     MOVEA.l A2,A1
0003107A <AmiBlitz3.ab2@11987>     MOVEA.l (A2),A2
0003107C <AmiBlitz3.ab2@11988>     MOVEQ.l #$00,D0
00031080 <AmiBlitz3.ab2@11989>     MOVE.b $20+#funcentry_extend(A1),D0
00031086 <AmiBlitz3.ab2@11990>     MOVE.l mempool2,a0
0003108A <AmiBlitz3.ab2@11991>     JSR _FreePooled(A6)
0003108E <AmiBlitz3.ab2@11992> BRA.w clearfunctionlist__loop
00031090 <AmiBlitz3.ab2@11995> RTS
00031094 <AmiBlitz3.ab2@11999>   CMPA.w #$0,A2
00031098 <AmiBlitz3.ab2@12000>    BEQ.w freetypes__done
0003109C <AmiBlitz3.ab2@12001>   MOVEA.l $4(A2),A3
000310A0 <AmiBlitz3.ab2@12002>   CMPA.w #$FF,A3
000310A4 <AmiBlitz3.ab2@12003>    BEQ.w freetypes__noway
000310A8 <AmiBlitz3.ab2@12007>    BSR.w freevars
000310AA <AmiBlitz3.ab2@12010>     MOVEA.l A2,A1
000310AC <AmiBlitz3.ab2@12011>     MOVEA.l (A2),A2
000310AE <AmiBlitz3.ab2@12012>     MOVEQ.l #$00,D0
000310B2 <AmiBlitz3.ab2@12013>     MOVE.b $A(A1),D0
000310B8 <AmiBlitz3.ab2@12014>     MOVEA.l _execbase,A6
000310BE <AmiBlitz3.ab2@12015>     MOVE.l mempool2,a0
000310C2 <AmiBlitz3.ab2@12016>     JSR _FreePooled(A6)
000310C6 <AmiBlitz3.ab2@12017> BRA.w freetypes
000310C8 <AmiBlitz3.ab2@12020> RTS
000310CE <AmiBlitz3.ab2@12024>   JSR uselib2
000310D4 <AmiBlitz3.ab2@12026>   CLR.w notshared
000310DA <AmiBlitz3.ab2@12027>   CLR.w varmode
000310E0 <AmiBlitz3.ab2@12028>   MOVE.w proceduremode,D1
000310E4 <AmiBlitz3.ab2@12029>    BNE.w JL_0_8F4E
000310EA <AmiBlitz3.ab2@12030>   LEA varbase,A2
000310F0 <AmiBlitz3.ab2@12031>   LEA ptr_parameterstore,a0
000310F4 <AmiBlitz3.ab2@12032>   CMP.b #$22,(a0)
000310F8 <AmiBlitz3.ab2@12033>   BNE JL_0_8E5E
000310FA <AmiBlitz3.ab2@12034>   MOVEQ #0,d0
00031100 <AmiBlitz3.ab2@12035> JMP error
00031104 <AmiBlitz3.ab2@12038>   BSR.w findvariable
00031108 <AmiBlitz3.ab2@12041>   BNE.w JL_0_8E7E
0003110E <AmiBlitz3.ab2@12044>   MOVE.b flagmask+1,D1
00031112 <AmiBlitz3.ab2@12045>   MOVE.b $7(A2),D3
00031114 <AmiBlitz3.ab2@12046>   EOR.b D3,D1
00031118 <AmiBlitz3.ab2@12047>   BNE 'l2
00031120 <AmiBlitz3.ab2@12048>   CMP.b #2,nowdeclare
00031124 <AmiBlitz3.ab2@12049>   BEQ errormsg_declaredtwice
00031128 <AmiBlitz3.ab2@12050> BRA.w JL_0_8FA8
0003112C <AmiBlitz3.ab2@12053>   BSR.w findlab
00031130 <AmiBlitz3.ab2@12054>   BNE 'l1
00031138 <AmiBlitz3.ab2@12055>   CMP.b #2,nowdeclare
0003113C <AmiBlitz3.ab2@12056>   BEQ errormsg_declaredtwice
0003113E <AmiBlitz3.ab2@12057>   CMP.w d0,d0
00031142 <AmiBlitz3.ab2@12060> BRA.w JL_0_8E62
00031144 <AmiBlitz3.ab2@12063>    MOVE.l a2,-(a7)
0003114A <AmiBlitz3.ab2@12064>    LEA sharebase,a2
0003114C <AmiBlitz3.ab2@12065>    MOVEQ #$f+4,d7
00031150 <AmiBlitz3.ab2@12066>    BSR.w findlab
00031154 <AmiBlitz3.ab2@12067>    BEQ 'l2x
00031156 <AmiBlitz3.ab2@12068>    MOVE.l (a7)+,a2
0003115A <AmiBlitz3.ab2@12069> BRA 'cont
0003115C <AmiBlitz3.ab2@12072>   ADDQ.l #4,a7
00031162 <AmiBlitz3.ab2@12073>   CLR.w varmode
00031168 <AmiBlitz3.ab2@12074>   MOVE.b flagmask+1,D1
0003116C <AmiBlitz3.ab2@12075>   MOVE.b $7(A2),D3
0003116E <AmiBlitz3.ab2@12076>   EOR.b D3,D1
00031172 <AmiBlitz3.ab2@12077>   BNE vardeclareerr
00031176 <AmiBlitz3.ab2@12078> BRA JL_0_8FA8
0003117C <AmiBlitz3.ab2@12081>    MOVE.w nonew,D1
00031180 <AmiBlitz3.ab2@12082>    BNE.w nonewerr
00031186 <AmiBlitz3.ab2@12083>    TST.b nowdeclare
0003118A <AmiBlitz3.ab2@12084>    BNE 'l2
00031190 <AmiBlitz3.ab2@12085>    TST.b declare2
00031194 <AmiBlitz3.ab2@12086>    BEQ 'l1
00031198 <AmiBlitz3.ab2@12087>    CMP.b #$2e,d0
0003119C <AmiBlitz3.ab2@12088>    BEQ 'l2
000311A0 <AmiBlitz3.ab2@12089>    CMP.b #"$",d0
000311A4 <AmiBlitz3.ab2@12090>    BEQ 'l2
000311A8 <AmiBlitz3.ab2@12091> BRA vardeclareerr
000311AE <AmiBlitz3.ab2@12094>   TST.b declare
000311B2 <AmiBlitz3.ab2@12095>    BNE vardeclareerr
000311B6 <AmiBlitz3.ab2@12098>   BSR.w addvariable
000311BC <AmiBlitz3.ab2@12099>   NOT.w notshared
000311BE <AmiBlitz3.ab2@12100>   MOVEA.l A2,A3
000311C4 <AmiBlitz3.ab2@12101>   MOVEA.l defaulttype,A2
000311C8 <AmiBlitz3.ab2@12102>   CMP.w #$2E,D0
000311CC <AmiBlitz3.ab2@12103>    BEQ.w JL_0_8EB8
000311D0 <AmiBlitz3.ab2@12104>   CMP.w #$24,D0
000311D4 <AmiBlitz3.ab2@12105>    BNE.w JL_0_8ECA
000311DA <AmiBlitz3.ab2@12106>   LEA newtype_string,A2
000311DE <AmiBlitz3.ab2@12107>    BSR.w get1bytemain
000311E2 <AmiBlitz3.ab2@12108> BRA.w JL_0_8ECA
000311E8 <AmiBlitz3.ab2@12111> JMP JUMP_notypeerr
000311EC <AmiBlitz3.ab2@12114>    BSR.w getparameter2
000311F2 <AmiBlitz3.ab2@12115>   LEA newtypebase,A2
000311F6 <AmiBlitz3.ab2@12116>    BSR.w findtype
000311FA <AmiBlitz3.ab2@12117>    BNE.w notypeerr3
00031200 <AmiBlitz3.ab2@12120>   CMPA.l #newtype_byte,A2
00031204 <AmiBlitz3.ab2@12121>    BEQ.w JL_0_8EECb
0003120A <AmiBlitz3.ab2@12122>   MOVE.w varmode,D1
0003120E <AmiBlitz3.ab2@12123>    BNE.w JL_0_8EE4b
00031214 <AmiBlitz3.ab2@12124>   ADDQ.w #1,globalvarpointer
0003121C <AmiBlitz3.ab2@12127>   BCLR #$0,globalvarpointer+1
00031220 <AmiBlitz3.ab2@12130>   MOVE.l A2,$A(A3)
00031228 <AmiBlitz3.ab2@12131>   MOVE.w flagmask,$6(A3)                                  ;??????????
0003122A <AmiBlitz3.ab2@12133>   MOVEQ.l #$04,D1
00031232 <AmiBlitz3.ab2@12134>   BTST #$0,flagmask+1
00031236 <AmiBlitz3.ab2@12135>    BNE.w JL_0_8F22b
0003123E <AmiBlitz3.ab2@12136>   BTST #$1,flagmask+1
00031242 <AmiBlitz3.ab2@12137>    BNE.w JL_0_8F22b
0003124A <AmiBlitz3.ab2@12138>   CMPI.l #$100,$4(A2)
0003124E <AmiBlitz3.ab2@12139>    BCC.w JL_0_8F22b
00031252 <AmiBlitz3.ab2@12140>   MOVE.w $8(A2),D1
00031258 <AmiBlitz3.ab2@12143>   TST.w varmode
0003125C <AmiBlitz3.ab2@12144> BRA.w JL_0_8F3E
00031260 <AmiBlitz3.ab2@12153>   BSR.w getparameter2
00031266 <AmiBlitz3.ab2@12154>   LEA newtypebase,A2
0003126A <AmiBlitz3.ab2@12155>    BSR.w findtype
0003126E <AmiBlitz3.ab2@12156>    BNE.w notypeerr
00031274 <AmiBlitz3.ab2@12159>   CMPA.l #newtype_byte,A2
00031278 <AmiBlitz3.ab2@12160>    BEQ.w JL_0_8EEC
0003127E <AmiBlitz3.ab2@12161>   MOVE.w varmode,D1
00031282 <AmiBlitz3.ab2@12162>    BNE.w JL_0_8EE4
00031288 <AmiBlitz3.ab2@12163>   ADDQ.w #1,globalvarpointer
00031290 <AmiBlitz3.ab2@12166>   BCLR #$0,globalvarpointer+1
00031294 <AmiBlitz3.ab2@12169>   MOVE.l A2,$A(A3)
0003129C <AmiBlitz3.ab2@12170>   MOVE.w flagmask,$6(A3)                                  ;??????????
0003129E <AmiBlitz3.ab2@12171>   MOVEQ.l #$04,D1
000312A6 <AmiBlitz3.ab2@12172>   BTST #$0,flagmask+1
000312AA <AmiBlitz3.ab2@12173>    BNE.w JL_0_8F22
000312B2 <AmiBlitz3.ab2@12174>   BTST #$1,flagmask+1
000312B6 <AmiBlitz3.ab2@12175>    BNE.w JL_0_8F22
000312BE <AmiBlitz3.ab2@12176>   CMPI.l #$100,$4(A2)
000312C2 <AmiBlitz3.ab2@12177>    BCC.w JL_0_8F22
000312C6 <AmiBlitz3.ab2@12178>   MOVE.w $8(A2),D1
000312CC <AmiBlitz3.ab2@12181>   TST.w varmode
000312D0 <AmiBlitz3.ab2@12182>    BEQ.w JL_0_8F3E
000312D2 <AmiBlitz3.ab2@12183>   NEG.w D1
000312D8 <AmiBlitz3.ab2@12184>   ADD.w D1,globalvarpointer
000312E0 <AmiBlitz3.ab2@12185>   MOVE.w globalvarpointer,$4(A3)
000312E2 <AmiBlitz3.ab2@12186> RTS
000312EA <AmiBlitz3.ab2@12189>   MOVE.w globalvarpointer,$4(A3)
000312F0 <AmiBlitz3.ab2@12190>   ADD.w D1,globalvarpointer
000312F2 <AmiBlitz3.ab2@12191> RTS
000312F8 <AmiBlitz3.ab2@12195>   LEA firstglob,A2
000312FC <AmiBlitz3.ab2@12196>    BSR.w findvariable2
00031300 <AmiBlitz3.ab2@12199>   BNE.w JL_0_8F74
00031306 <AmiBlitz3.ab2@12200>   MOVE.b flagmask+1,D1
0003130A <AmiBlitz3.ab2@12201>   MOVE.b $7(A2),D3
0003130C <AmiBlitz3.ab2@12202>   EOR.b D3,D1
00031310 <AmiBlitz3.ab2@12203>    BEQ.w JL_0_8FA8
00031314 <AmiBlitz3.ab2@12204>    BSR.w findlab
00031318 <AmiBlitz3.ab2@12205> BRA.w JL_0_8F58
00031320 <AmiBlitz3.ab2@12208>   MOVE.w #$FFFF,varmode
00031326 <AmiBlitz3.ab2@12209>   MOVE.w globalvarpointer,-(A7)
00031330 <AmiBlitz3.ab2@12210>   MOVE.w locvaroff,globalvarpointer
00031336 <AmiBlitz3.ab2@12211>   LEA firstlocal,A2
0003133E <AmiBlitz3.ab2@12212>   MOVE.b #1,newvariable
00031342 <AmiBlitz3.ab2@12213>    BSR.w JL_0_8E5E
00031348 <AmiBlitz3.ab2@12214>   CLR.b newvariable
00031352 <AmiBlitz3.ab2@12215>   MOVE.w globalvarpointer,locvaroff
00031358 <AmiBlitz3.ab2@12216>   MOVE.w (A7)+,globalvarpointer
0003135A <AmiBlitz3.ab2@12217> RTS
0003135C <AmiBlitz3.ab2@12220>   MOVEA.l A2,A3
00031360 <AmiBlitz3.ab2@12221>   CMP.w #$2E,D0
00031364 <AmiBlitz3.ab2@12222>    BEQ.w JL_0_8FCE
00031368 <AmiBlitz3.ab2@12223>   CMP.w #$24,D0
0003136C <AmiBlitz3.ab2@12224>    BNE.w JL_0_8FE8
00031374 <AmiBlitz3.ab2@12225>   CMPI.l #newtype_string,$A(A3)
00031378 <AmiBlitz3.ab2@12226>    BNE.w rongtypeerr
0003137C <AmiBlitz3.ab2@12227>    BSR.w get1bytemain
00031380 <AmiBlitz3.ab2@12228> BRA.w JL_0_8FE8
00031384 <AmiBlitz3.ab2@12231>    BSR.w getparameter2
0003138A <AmiBlitz3.ab2@12232>   LEA newtypebase,A2
0003138E <AmiBlitz3.ab2@12233>    BSR.w findtype
00031392 <AmiBlitz3.ab2@12234>    BNE.w notypeerr
00031396 <AmiBlitz3.ab2@12235>   CMPA.l $A(A3),A2
0003139A <AmiBlitz3.ab2@12236>    BNE.w rongtypeerr
000313A2 <AmiBlitz3.ab2@12238>   BTST #$0,flagmask+1
000313A6 <AmiBlitz3.ab2@12239>    BEQ.w JL_0_8FFE
000313AC <AmiBlitz3.ab2@12240>   BTST #$0,$7(A3)
000313B0 <AmiBlitz3.ab2@12241>    BEQ.w pointerr
000313B4 <AmiBlitz3.ab2@12244>   MOVEA.l $A(A3),A2
000313B6 <AmiBlitz3.ab2@12245> RTS
000313B8 <AmiBlitz3.ab2@12249>    TST.l D3                                                ;newtype >32kb  .w to .l
000313BC <AmiBlitz3.ab2@12250>    BEQ.w JL_0_9042
000313C6 <AmiBlitz3.ab2@12251>    MOVE.l destpointer,loada
000313CA <AmiBlitz3.ab2@12254> BRA JL_0_9032
000313CE <AmiBlitz3.ab2@12256>   CMP.w #$9,D3                                             ;_addq_arrays
000313D2 <AmiBlitz3.ab2@12257>    BCC.w JL_0_9032
000313D8 <AmiBlitz3.ab2@12258>   MOVE.w d3,arrayoffset
000313DC <AmiBlitz3.ab2@12259>   ANDI.w #$7,D3
000313DE <AmiBlitz3.ab2@12260>   LSL.w #8,D3
000313E0 <AmiBlitz3.ab2@12261>   LSL.w #1,D3
000313E8 <AmiBlitz3.ab2@12262>   ANDI.w #$F1FF,addqa0
000313EE <AmiBlitz3.ab2@12263>   OR.w D3,addqa0
000313F4 <AmiBlitz3.ab2@12264>   MOVE.w addqa0,D1
000313F8 <AmiBlitz3.ab2@12265> BRA.w writeword
000313FE <AmiBlitz3.ab2@12268>   CMP.l #$7fff,d3                                          ;>32kb newtypes
00031402 <AmiBlitz3.ab2@12269>   BGT longoffset
00031408 <AmiBlitz3.ab2@12270>   MOVE.w D3,leaa0a0+2
0003140E <AmiBlitz3.ab2@12271>   MOVE.w d3,arrayoffset
00031414 <AmiBlitz3.ab2@12272>   MOVE.l leaa0a0,D1
00031418 <AmiBlitz3.ab2@12273>   BSR.w writelong
0003141A <AmiBlitz3.ab2@12276> RTS
0003141E <AmiBlitz3.ab2@12279>    MOVE.w #$d5fc,d1
00031422 <AmiBlitz3.ab2@12280>    BSR writeword
00031424 <AmiBlitz3.ab2@12281>    MOVE.l d3,d1
00031428 <AmiBlitz3.ab2@12282>    BSR.w writelong
0003142A <AmiBlitz3.ab2@12283> RTS
0003142E <AmiBlitz3.ab2@12287>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
00031432 <AmiBlitz3.ab2@12290>    BCS.w arrchk3                                           
00031438 <AmiBlitz3.ab2@12291>    JSR $20000                                              ;jsr 0
0003143E <AmiBlitz3.ab2@12297>   TST.b fast
00031442 <AmiBlitz3.ab2@12298>   BEQ 'l1
00031444 <AmiBlitz3.ab2@12299>    MOVEQ #0,d1                                             ;faster arrays
0003144A <AmiBlitz3.ab2@12300>    MOVE.w regnum,d2
0003144C <AmiBlitz3.ab2@12301>    MOVE.w d2,d1
0003144E <AmiBlitz3.ab2@12302>    LSL.w #8,d1
00031450 <AmiBlitz3.ab2@12303>    LSL.w #4,d1
00031452 <AmiBlitz3.ab2@12304>    ADD.w d2,d1
00031458 <AmiBlitz3.ab2@12305>    OR.l #$4c2d0000,d1
0003145E <AmiBlitz3.ab2@12306>    TST.w varmode
00031462 <AmiBlitz3.ab2@12307>    BEQ 'l1a
00031466 <AmiBlitz3.ab2@12308>    BCLR #16,d1
0003146A <AmiBlitz3.ab2@12311>    BSR writelong
0003146E <AmiBlitz3.ab2@12312>    MOVE.w $4(A7),D1
00031472 <AmiBlitz3.ab2@12313>    BSR.w writeword
00031478 <AmiBlitz3.ab2@12314>    MOVE.w regnum,D1
0003147A <AmiBlitz3.ab2@12315>   SUBQ.w #1,D1
0003147C <AmiBlitz3.ab2@12316>   LSL.w #8,D1
0003147E <AmiBlitz3.ab2@12317>   LSL.w #1,D1
00031482 <AmiBlitz3.ab2@12318>   ORI.w #$D080,D1
00031488 <AmiBlitz3.ab2@12319>   OR.w regnum,D1
0003148C <AmiBlitz3.ab2@12320>    BSR.w writeword
0003148E <AmiBlitz3.ab2@12321> RTS
00031494 <AmiBlitz3.ab2@12324>   MOVE.w regnum,D2
00031498 <AmiBlitz3.ab2@12325>   MOVE.w arrmul1(PC),D1
0003149A <AmiBlitz3.ab2@12326>   OR.w D2,D1
0003149C <AmiBlitz3.ab2@12327>   SUBQ.w #1,D1
000314A0 <AmiBlitz3.ab2@12328>    BSR.w writeword
000314A4 <AmiBlitz3.ab2@12329>   MOVE.w arrmul2(PC),D1
000314A6 <AmiBlitz3.ab2@12330>   OR.w D2,D1
000314A8 <AmiBlitz3.ab2@12331>   MOVE.w D2,D3
000314AA <AmiBlitz3.ab2@12332>   SUBQ.w #1,D3
000314AC <AmiBlitz3.ab2@12333>   LSL.w #8,D3
000314AE <AmiBlitz3.ab2@12334>   LSL.w #1,D3
000314B0 <AmiBlitz3.ab2@12335>   OR.w D3,D1
000314B4 <AmiBlitz3.ab2@12336>    BSR.w writeword
000314B8 <AmiBlitz3.ab2@12337>   MOVE.w arrmul3(PC),D1
000314BA <AmiBlitz3.ab2@12338>   MOVE.w D2,D3
000314BC <AmiBlitz3.ab2@12339>   LSL.w #8,D3
000314BE <AmiBlitz3.ab2@12340>   LSL.w #1,D3
000314C0 <AmiBlitz3.ab2@12341>   OR.w D3,D1
000314C4 <AmiBlitz3.ab2@12342>    BSR.w pokewda5s
000314C8 <AmiBlitz3.ab2@12343>   MOVE.w $4(A7),D1
000314CA <AmiBlitz3.ab2@12344>   ADDQ.w #2,D1
000314CE <AmiBlitz3.ab2@12345>    BSR.w writeword
000314D2 <AmiBlitz3.ab2@12346>   MOVE.w arrmul4(PC),D1
000314D4 <AmiBlitz3.ab2@12347>   MOVE.w D2,D3
000314D6 <AmiBlitz3.ab2@12348>   SUBQ.w #1,D3
000314D8 <AmiBlitz3.ab2@12349>   LSL.w #8,D3
000314DA <AmiBlitz3.ab2@12350>   LSL.w #1,D3
000314DC <AmiBlitz3.ab2@12351>   OR.w D3,D1
000314E0 <AmiBlitz3.ab2@12352>    BSR.w pokewda5s
000314E4 <AmiBlitz3.ab2@12353>   MOVE.w $4(A7),D1
000314E8 <AmiBlitz3.ab2@12354>    BSR.w writeword
000314EC <AmiBlitz3.ab2@12355>   MOVE.w arrmul5(PC),D1
000314EE <AmiBlitz3.ab2@12356>   OR.w D2,D1
000314F0 <AmiBlitz3.ab2@12357>   SUBQ.w #1,D1
000314F4 <AmiBlitz3.ab2@12358>    BSR.w writeword
000314F8 <AmiBlitz3.ab2@12359>   MOVE.w arrmul6(PC),D1
000314FA <AmiBlitz3.ab2@12360>   OR.w D2,D1
000314FC <AmiBlitz3.ab2@12361>   SUBQ.w #1,D1
00031500 <AmiBlitz3.ab2@12362>    BSR.w writeword
00031504 <AmiBlitz3.ab2@12363>   MOVE.w arrmul7(PC),D1
00031506 <AmiBlitz3.ab2@12364>   OR.w D2,D1
00031508 <AmiBlitz3.ab2@12365>   SUBQ.w #1,D1
0003150A <AmiBlitz3.ab2@12366>   MOVE.w D2,D3
0003150C <AmiBlitz3.ab2@12367>   LSL.w #8,D3
0003150E <AmiBlitz3.ab2@12368>   LSL.w #1,D3
00031510 <AmiBlitz3.ab2@12369>   OR.w D3,D1
00031514 <AmiBlitz3.ab2@12370>    BSR.w writeword
00031518 <AmiBlitz3.ab2@12371>   MOVE.w arrmul8(PC),D1
0003151A <AmiBlitz3.ab2@12372>   MOVE.w D2,D3
0003151C <AmiBlitz3.ab2@12373>   SUBQ.w #1,D3
0003151E <AmiBlitz3.ab2@12374>   LSL.w #8,D3
00031520 <AmiBlitz3.ab2@12375>   LSL.w #1,D3
00031522 <AmiBlitz3.ab2@12376>   OR.w D3,D1
00031526 <AmiBlitz3.ab2@12377>    BSR.w writeword
0003152C <AmiBlitz3.ab2@12378>   MOVE.w regnum,D1
0003152E <AmiBlitz3.ab2@12379>   SUBQ.w #1,D1
00031530 <AmiBlitz3.ab2@12380>   LSL.w #8,D1
00031532 <AmiBlitz3.ab2@12381>   LSL.w #1,D1
00031536 <AmiBlitz3.ab2@12382>   ORI.w #$D080,D1
0003153C <AmiBlitz3.ab2@12383>   OR.w regnum,D1
00031540 <AmiBlitz3.ab2@12384> BRA.w writeword
00031542 <AmiBlitz3.ab2@12392> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
00031544 <AmiBlitz3.ab2@12393> arrmul2:   MOVE  d0,d0
00031548 <AmiBlitz3.ab2@12394> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0003154C <AmiBlitz3.ab2@12395> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0003154E <AmiBlitz3.ab2@12397> arrmul5:   SWAP d0
00031550 <AmiBlitz3.ab2@12398> arrmul6:   CLR d0
00031552 <AmiBlitz3.ab2@12399> arrmul7:   ADD.l d0,d0
00031554 <AmiBlitz3.ab2@12400> arrmul8:   MOVE.l (a7)+,d0
00031558 <AmiBlitz3.ab2@12405> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0003155C <AmiBlitz3.ab2@12406> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0003155E <AmiBlitz3.ab2@12407> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
00031564 <AmiBlitz3.ab2@12425>   CLR.l lastoffset_org
0003156A <AmiBlitz3.ab2@12426>   BTST #$1,$7(A3)
0003156E <AmiBlitz3.ab2@12427>    BEQ.w calcvar__notarr
00031574 <AmiBlitz3.ab2@12428>   MOVE.w notshared,D1
00031578 <AmiBlitz3.ab2@12429>    BNE.w noarrerr
0003157C <AmiBlitz3.ab2@12430>    BSR.w get1bytemain
00031580 <AmiBlitz3.ab2@12431>   CMP.w #$29,D0
00031584 <AmiBlitz3.ab2@12432>    BNE.w calcvar__notalist
0003158A <AmiBlitz3.ab2@12433>   BTST #$0,$6(A3)
0003158E <AmiBlitz3.ab2@12434>    BEQ.w nolisterr
00031596 <AmiBlitz3.ab2@12435>   MOVE.w $4(A3),listcode1+2
0003159A <AmiBlitz3.ab2@12436>   MOVE.l listcode1(PC),D1
0003159E <AmiBlitz3.ab2@12437>    BSR.w pokela5s
000315A2 <AmiBlitz3.ab2@12438>   MOVE.l listcode2(PC),D1
000315A6 <AmiBlitz3.ab2@12439>    BSR.w writelong
000315AC <AmiBlitz3.ab2@12440>   TST.b debugmode
000315B0 <AmiBlitz3.ab2@12441>    BEQ.w calcvar__nolrerr
000315B2 <AmiBlitz3.ab2@12445>   MOVE.l A2,-(A7)
000315B6 <AmiBlitz3.ab2@12446>   MOVE.w #$C315,D1
000315BA <AmiBlitz3.ab2@12447>    BSR.w Atokejsr
000315BC <AmiBlitz3.ab2@12448>   MOVEA.l (A7)+,A2
000315C0 <AmiBlitz3.ab2@12451>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
000315C4 <AmiBlitz3.ab2@12453>    BSR.w writeword
000315C8 <AmiBlitz3.ab2@12454> BRA.w calcvar__normalar
000315CA <AmiBlitz3.ab2@12457> calcvar__listoff:   Ds.w 1
000315D0 <AmiBlitz3.ab2@12461>   CLR.w calcvar__listoff
000315D6 <AmiBlitz3.ab2@12462>   BTST #$0,$6(A3)
000315DA <AmiBlitz3.ab2@12463>    BEQ.w calcvar__knop
000315E2 <AmiBlitz3.ab2@12464>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
000315E6 <AmiBlitz3.ab2@12467>   MOVEM.l A2-A3,-(A7)
000315EC <AmiBlitz3.ab2@12468>   MOVE.w varmode,-(A7)
000315F0 <AmiBlitz3.ab2@12469>   MOVE.w $8(A3),-(A7)                                       ;number of dims
000315F4 <AmiBlitz3.ab2@12470>   MOVE.w $4(A3),-(A7)                                       ;varoff
000315F6 <AmiBlitz3.ab2@12471>   MOVE.l A2,-(A7)
000315FC <AmiBlitz3.ab2@12472>   MOVE.w flagmask,-(A7)
00031606 <AmiBlitz3.ab2@12474>   MOVE.w oldqflag,instringon
0003160C <AmiBlitz3.ab2@12475>   MOVEA.l lastsourcepos,A5
00031610 <AmiBlitz3.ab2@12476>    BSR.w arreval
00031616 <AmiBlitz3.ab2@12477>   MOVE.w (A7)+,flagmask
0003161E <AmiBlitz3.ab2@12478>   MOVE.w $8(A7),varmode
00031624 <AmiBlitz3.ab2@12479>   TST.b debugmode
00031628 <AmiBlitz3.ab2@12480>    BEQ.w calcvar__noszchk
0003162A <AmiBlitz3.ab2@12484>   MOVEA.l (A7)+,A2
0003162C <AmiBlitz3.ab2@12485>   MOVEQ.l #$04,D1
00031634 <AmiBlitz3.ab2@12486>   BTST #$0,flagmask+1                                      ;pointer?
00031638 <AmiBlitz3.ab2@12487>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0003163C <AmiBlitz3.ab2@12488>   MOVE.w $8(A2),D1
00031640 <AmiBlitz3.ab2@12491>   ADD.w calcvar__listoff(PC),D1
00031644 <AmiBlitz3.ab2@12492>   BSR.w JL_0_B6DE
0003164A <AmiBlitz3.ab2@12493>   ADDQ.w #1,regnum
0003164C <AmiBlitz3.ab2@12496>   ADDQ.w #4,(A7)
00031650 <AmiBlitz3.ab2@12497>   TST.w $4(A7)
00031654 <AmiBlitz3.ab2@12498>    BEQ.w calcvar__isglob
00031656 <AmiBlitz3.ab2@12499>   SUBQ.w #8,(A7)                                           ;range check local array
0003165C <AmiBlitz3.ab2@12502>   TST.b debugmode
00031660 <AmiBlitz3.ab2@12503>    BEQ.w calcvar__noer1
00031666 <AmiBlitz3.ab2@12504>   MOVE.w regnum,D1
00031668 <AmiBlitz3.ab2@12505>   SUBQ.w #1,D1
0003166A <AmiBlitz3.ab2@12506>   LSL.w #8,D1
0003166C <AmiBlitz3.ab2@12507>   LSL.w #1,D1
00031670 <AmiBlitz3.ab2@12508>   OR.w zarrchk(PC),D1
00031674 <AmiBlitz3.ab2@12509>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
00031676 <AmiBlitz3.ab2@12510>   MOVE.w (A7),D1
0003167A <AmiBlitz3.ab2@12511>    BSR.w writeword
0003167E <AmiBlitz3.ab2@12512>   MOVE.l arrchk2(PC),D1
00031682 <AmiBlitz3.ab2@12513>    BSR.w writelong
00031686 <AmiBlitz3.ab2@12514>   MOVE.w #$C309,D1
0003168A <AmiBlitz3.ab2@12515>    BSR.w Atokejsr
0003168E <AmiBlitz3.ab2@12518>   SUBQ.w #1,$2(A7)
00031692 <AmiBlitz3.ab2@12519>    BEQ.w calcvar__ardone
00031696 <AmiBlitz3.ab2@12520>   CMP.w #$2C,D0
0003169A <AmiBlitz3.ab2@12521>    BNE.w syntaxerr
000316A0 <AmiBlitz3.ab2@12522>    TST.b fast
000316A4 <AmiBlitz3.ab2@12523>    BNE 'l1
000316A8 <AmiBlitz3.ab2@12524>    BSR.w arrevalchk
000316AC <AmiBlitz3.ab2@12525> BRA 'l2
000316B0 <AmiBlitz3.ab2@12528>   BSR arreval
000316B8 <AmiBlitz3.ab2@12531>   MOVE.w $4(A7),varmode
000316BC <AmiBlitz3.ab2@12532>   BSR.w JL_0_9052
000316C0 <AmiBlitz3.ab2@12533> BRA.w calcvar__arloop
000316C4 <AmiBlitz3.ab2@12537>   CMP.w #$29,D0
000316C8 <AmiBlitz3.ab2@12538>    BNE.w syntaxerr
000316CE <AmiBlitz3.ab2@12539>   SUBQ.w #1,regnum
000316D0 <AmiBlitz3.ab2@12540>   ADDQ.w #6,A7
000316D4 <AmiBlitz3.ab2@12541>   MOVEM.l (A7)+,A2-A3
000316DC <AmiBlitz3.ab2@12542>   MOVE.w $4(A3),movea5a0+2
000316E2 <AmiBlitz3.ab2@12543>   MOVE.l movea5a0,D1
000316E6 <AmiBlitz3.ab2@12544>    BSR.w pokela5s
000316EC <AmiBlitz3.ab2@12545>   MOVE.w regnum,D1
000316F0 <AmiBlitz3.ab2@12546>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
000316F4 <AmiBlitz3.ab2@12547>    BSR.w writeword
000316FA <AmiBlitz3.ab2@12548>   BTST #$0,$6(A3)
000316FE <AmiBlitz3.ab2@12549>    BEQ.w calcvar__normalar
00031702 <AmiBlitz3.ab2@12553>   MOVE.w listarfix(PC),D1
00031706 <AmiBlitz3.ab2@12554>    BSR.w writeword
0003170A <AmiBlitz3.ab2@12557>   BSR.w get1bytemain
00031710 <AmiBlitz3.ab2@12561>   BTST #$0,$7(A3)
00031714 <AmiBlitz3.ab2@12562>    BEQ.w calcvar__noppnt
00031718 <AmiBlitz3.ab2@12563>   CMP.w #$5C,D0
0003171C <AmiBlitz3.ab2@12564>    BNE.w calcvar__pmskip
00031720 <AmiBlitz3.ab2@12565>   MOVE.w calcvar__pfix(PC),D1
00031724 <AmiBlitz3.ab2@12566>    BSR.w writeword
00031728 <AmiBlitz3.ab2@12569>   MOVE.w #$8000,D2
0003172C <AmiBlitz3.ab2@12570> BRA.w calcvar__loopml
00031730 <AmiBlitz3.ab2@12573>   MOVE.w #$C000,D2
00031734 <AmiBlitz3.ab2@12574> BRA.w calcvar__loopml
00031736 <AmiBlitz3.ab2@12578> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0003173A <AmiBlitz3.ab2@12583>   CMP.w #$28,D0
0003173E <AmiBlitz3.ab2@12584>    BEQ.w noarrerr
00031746 <AmiBlitz3.ab2@12585>   CMPI.l #$100,$4(A2)
0003174A <AmiBlitz3.ab2@12586>    BCS.w calcvar__simpvar
00031750 <AmiBlitz3.ab2@12587>   BTST #$0,$7(A3)
00031754 <AmiBlitz3.ab2@12588>    BEQ.w calcvar__notap
00031758 <AmiBlitz3.ab2@12592>   CMP.w #$5C,D0
0003175C <AmiBlitz3.ab2@12593>    BEQ.w calcvar__notap
0003175E <AmiBlitz3.ab2@12594>   MOVEQ.l #$00,D2
00031762 <AmiBlitz3.ab2@12595> BRA.w calcvar__simpvar2
00031766 <AmiBlitz3.ab2@12598>   MOVE.w #$8000,D2
0003176E <AmiBlitz3.ab2@12599>   MOVE.w $4(A3),movea5a0+2
00031774 <AmiBlitz3.ab2@12600>   MOVE.l movea5a0,D1
00031778 <AmiBlitz3.ab2@12601>    BSR.w pokela5s                                         ;move.l x(a5),a2
0003177E <AmiBlitz3.ab2@12603>    TST.b debugmode
00031782 <AmiBlitz3.ab2@12604>    BEQ.w 'skip
00031786 <AmiBlitz3.ab2@12605>    MOVE.w #$c320,D1
0003178C <AmiBlitz3.ab2@12606>    JSR Atokejsr
0003178E <AmiBlitz3.ab2@12610>   MOVEQ.l #$00,D3
00031792 <AmiBlitz3.ab2@12613>   CMP.w #$5C,D0
00031796 <AmiBlitz3.ab2@12614>    BNE.w calcvar__done
0003179E <AmiBlitz3.ab2@12615>   CMPI.l #$100,$4(A2)
000317A2 <AmiBlitz3.ab2@12616>    BCS.w rongtypeerr
000317A4 <AmiBlitz3.ab2@12617>   MOVE.w D2,-(A7)
000317A8 <AmiBlitz3.ab2@12618>    BSR.w getparameter2
000317AC <AmiBlitz3.ab2@12619>    BEQ.w syntaxerr
000317AE <AmiBlitz3.ab2@12620>   ADDQ.w #4,A2
000317B2 <AmiBlitz3.ab2@12621>    BSR.w findvariable2
000317B6 <AmiBlitz3.ab2@12622>    BNE.w noofferr
000317B8 <AmiBlitz3.ab2@12623>   MOVE.w (A7)+,D2
000317BA <AmiBlitz3.ab2@12624>   MOVEA.l A2,A3                                             ;pointer to offset
000317BE <AmiBlitz3.ab2@12625>   MOVEA.l $A(A3),A2                                         ;pointer to type
000317C0 <AmiBlitz3.ab2@12626>   MOVEQ #0,d1
000317C4 <AmiBlitz3.ab2@12627>   MOVE.w 4(a3),d1
000317C6 <AmiBlitz3.ab2@12628>   ADD.l d1,d3
000317CC <AmiBlitz3.ab2@12630>   MOVE.l A3,lastoffset_org
000317D0 <AmiBlitz3.ab2@12631>   CMP.w #$5B,D0
000317D4 <AmiBlitz3.ab2@12632>    BNE.w calcvar__realdone
000317DA <AmiBlitz3.ab2@12633>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
000317DE <AmiBlitz3.ab2@12634>    BEQ.w rongtypeerr
000317E2 <AmiBlitz3.ab2@12635>    BSR.w JL_0_9004
000317E6 <AmiBlitz3.ab2@12636>   MOVEM.l A2-A3,-(A7)
000317EC <AmiBlitz3.ab2@12637>   MOVE.w varmode,-(A7)
000317F2 <AmiBlitz3.ab2@12638>   MOVE.l lastoffset_org,-(A7)
000317F8 <AmiBlitz3.ab2@12639>   MOVE.w pusha2,D1
000317FC <AmiBlitz3.ab2@12640>    BSR.w writeword
000317FE <AmiBlitz3.ab2@12641>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
00031808 <AmiBlitz3.ab2@12642>   MOVE.l destpointer,deststore
0003180E <AmiBlitz3.ab2@12643>    MOVE.l rightsidetype,-(a7)
00031814 <AmiBlitz3.ab2@12644>    MOVE.l leftsidetype,-(a7)
0003181A <AmiBlitz3.ab2@12645>    CLR.l rightsidetype
00031820 <AmiBlitz3.ab2@12646>    CLR.l leftsidetype
00031824 <AmiBlitz3.ab2@12647>    BSR.w eval
0003182A <AmiBlitz3.ab2@12648>    MOVE.l (a7)+,rightsidetype
00031830 <AmiBlitz3.ab2@12649>    MOVE.l (a7)+,leftsidetype
00031834 <AmiBlitz3.ab2@12650>   CMP.w #$5D,D0
00031838 <AmiBlitz3.ab2@12651>    BNE.w syntaxerr
0003183E <AmiBlitz3.ab2@12652>   TST.b fast                                               ;a2,-(a7) array
00031842 <AmiBlitz3.ab2@12653>   BEQ calcvar__loop0_l10
00031848 <AmiBlitz3.ab2@12657>   MOVE.l destpointer,d1
0003184E <AmiBlitz3.ab2@12658>   SUB.l deststore,d1
00031854 <AmiBlitz3.ab2@12659>   CMP.l #4,d1
00031858 <AmiBlitz3.ab2@12660>   BNE calcvar__loop0_l10
0003185E <AmiBlitz3.ab2@12661>   MOVE.l destpointer,a4
00031864 <AmiBlitz3.ab2@12662>   MOVE.l -4(a4),-6(a4)
0003186A <AmiBlitz3.ab2@12663>   SUBQ.l #2,destpointer
00031870 <AmiBlitz3.ab2@12664>   CLR.l imm_addr
00031876 <AmiBlitz3.ab2@12665>   CLR.l load_var_addr
0003187A <AmiBlitz3.ab2@12666> BRA calcvar__loop0_l20
00031880 <AmiBlitz3.ab2@12669>   MOVE.w pulla2,D1
00031884 <AmiBlitz3.ab2@12670>    BSR.w writeword
0003188A <AmiBlitz3.ab2@12673>   MOVE.l (A7)+,lastoffset_org
00031890 <AmiBlitz3.ab2@12674>   MOVE.w (A7)+,varmode
00031894 <AmiBlitz3.ab2@12675>   MOVEM.l (A7)+,A2-A3
0003189A <AmiBlitz3.ab2@12681>   TST.w debugmode
0003189E <AmiBlitz3.ab2@12682>    BEQ.b calcvar__nobchk
000318A2 <AmiBlitz3.ab2@12683>   MOVE.w $8(A3),D1
000318A6 <AmiBlitz3.ab2@12684>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
000318AC <AmiBlitz3.ab2@12688>   MOVE.w D1,brchkcode+2
000318B2 <AmiBlitz3.ab2@12689>   MOVE.w regnum,D1
000318B4 <AmiBlitz3.ab2@12690>   LSL.w #8,D1
000318B6 <AmiBlitz3.ab2@12691>   LSL.w #1,D1
000318BA <AmiBlitz3.ab2@12692>   OR.w brchkcode0(PC),D1
000318C0 <AmiBlitz3.ab2@12693>   MOVE.w D1,brchkcode
000318C4 <AmiBlitz3.ab2@12694>   MOVE.l brchkcode(PC),D1
000318C8 <AmiBlitz3.ab2@12695>    BSR.w writelong
000318CC <AmiBlitz3.ab2@12696>   MOVE.l brchkcode+4(PC),D1
000318D0 <AmiBlitz3.ab2@12697>    BSR.w writelong
000318D4 <AmiBlitz3.ab2@12698>   MOVE.w brchkcode+8(PC),D1
000318D8 <AmiBlitz3.ab2@12699>    BSR.w writeword
000318DA <AmiBlitz3.ab2@12702>   MOVEQ.l #$04,D1
000318E0 <AmiBlitz3.ab2@12703>   BTST #$0,$7(A3)
000318E4 <AmiBlitz3.ab2@12704>    BNE.w calcvar__dothemul
000318E8 <AmiBlitz3.ab2@12705>   MOVE.w $8(A2),D1
000318EC <AmiBlitz3.ab2@12708>   BSR.w JL_0_B6DE
000318F2 <AmiBlitz3.ab2@12709>   MOVE.w addrega2,D1
000318F8 <AmiBlitz3.ab2@12710>   OR.w regnum,D1
000318FC <AmiBlitz3.ab2@12711>    OR.w #$100,d1                                           ;>32kb types
00031900 <AmiBlitz3.ab2@12712>    BSR.w writeword
00031904 <AmiBlitz3.ab2@12713>    BSR.w get1bytemain
00031906 <AmiBlitz3.ab2@12714>   MOVEQ.l #$00,D3
0003190A <AmiBlitz3.ab2@12715>   MOVE.w #$8000,D2
00031910 <AmiBlitz3.ab2@12718>   BTST #$0,$7(A3)
00031914 <AmiBlitz3.ab2@12719>    BNE.w calcvar__pointer
00031918 <AmiBlitz3.ab2@12720> BRA.w calcvar__loop0
0003191C <AmiBlitz3.ab2@12724>  CMP.w #$5C,D0
00031920 <AmiBlitz3.ab2@12725>    BNE.w calcvar__done3
00031922 <AmiBlitz3.ab2@12726>   TST.w D3
00031926 <AmiBlitz3.ab2@12727>    BNE.w calcvar__pskip
0003192C <AmiBlitz3.ab2@12728>   MOVE.w movea0,D1
00031930 <AmiBlitz3.ab2@12729>    BSR.w writeword
00031934 <AmiBlitz3.ab2@12730> BRA.w calcvar__pmore
0003193A <AmiBlitz3.ab2@12733>   MOVE.w D3,movea0a0+2
00031940 <AmiBlitz3.ab2@12734>   MOVE.l movea0a0,D1
00031944 <AmiBlitz3.ab2@12735>    BSR.w writelong
0003194A <AmiBlitz3.ab2@12738>   BTST #$2,$7(A3)
0003194E <AmiBlitz3.ab2@12739>    BEQ.w calcvar__loopml
00031954 <AmiBlitz3.ab2@12740>   MOVE.l adda0a0,D1
00031958 <AmiBlitz3.ab2@12741>    BSR.w writelong
0003195C <AmiBlitz3.ab2@12742> BRA.w calcvar__loopml
00031960 <AmiBlitz3.ab2@12745>   BSET #$E,D2
00031966 <AmiBlitz3.ab2@12746>   BTST #$2,$7(A3)
0003196A <AmiBlitz3.ab2@12747>    BNE.w calcvar__done
0003196E <AmiBlitz3.ab2@12748>   BSET #$D,D2
00031976 <AmiBlitz3.ab2@12751>   CMPI.l #$100,$4(A2)
0003197A <AmiBlitz3.ab2@12752>    BCC.w calcvar__done2
0003197E <AmiBlitz3.ab2@12753>   MOVE.b $7(A2),D2
00031982 <AmiBlitz3.ab2@12756> BRA.w JL_0_9004
00031986 <AmiBlitz3.ab2@12759>   MOVE.w $6(A2),D2
0003198A <AmiBlitz3.ab2@12762>   MOVE.w $4(A3),D3
00031990 <AmiBlitz3.ab2@12763>   BTST #$0,$7(A3)
00031994 <AmiBlitz3.ab2@12764>    BEQ.w calcvar__nopoint
00031998 <AmiBlitz3.ab2@12765>   BSET #$E,D2
0003199A <AmiBlitz3.ab2@12768> RTS
0003199E <AmiBlitz3.ab2@12772> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
000319A2 <AmiBlitz3.ab2@12773> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
000319A4 <AmiBlitz3.ab2@12774>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
000319A6 <AmiBlitz3.ab2@12775>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
000319A8 <AmiBlitz3.ab2@12776>              Dc.b $4E,$40                                  ;TRAP    #00
000319AE <AmiBlitz3.ab2@12784>   TST.w varmode
000319B2 <AmiBlitz3.ab2@12785>    BEQ.w writeword
000319B6 <AmiBlitz3.ab2@12786>   BCLR #$0,D1
000319BA <AmiBlitz3.ab2@12787> BRA.w writeword
000319C0 <AmiBlitz3.ab2@12790>   TST.w varmode
000319C4 <AmiBlitz3.ab2@12791>    BEQ.w writeword
000319C8 <AmiBlitz3.ab2@12792>   BCLR #$9,D1
000319CC <AmiBlitz3.ab2@12793> BRA.w writeword
000319D2 <AmiBlitz3.ab2@12796>   TST.w proceduremode
000319D6 <AmiBlitz3.ab2@12797>    BEQ.w writelong
000319DA <AmiBlitz3.ab2@12798>   BCLR #$19,D1
000319DE <AmiBlitz3.ab2@12799> BRA.w writelong
000319E4 <AmiBlitz3.ab2@12802>   TST.w varmode
000319E8 <AmiBlitz3.ab2@12803>   BEQ.w writelong
000319EC <AmiBlitz3.ab2@12804>   BCLR #$10,D1
000319F2 <AmiBlitz3.ab2@12807>   ADDQ.l #1,destpointer
000319FA <AmiBlitz3.ab2@12808>   BCLR #$0,destpointer+3
00031A00 <AmiBlitz3.ab2@12809>   MOVEA.l destpointer,A4
00031A06 <AmiBlitz3.ab2@12810>   CMPA.l destbufferend,A4
00031A0A <AmiBlitz3.ab2@12811>    BCC.w writeword__overa
00031A0C <AmiBlitz3.ab2@12812>   MOVE.l D1,(A4)+
00031A12 <AmiBlitz3.ab2@12815>   MOVE.l A4,destpointer
00031A16 <AmiBlitz3.ab2@12816>   CMPA.l bigpc(PC),A4
00031A1A <AmiBlitz3.ab2@12817>    BHI.w writeword__nbp
00031A1C <AmiBlitz3.ab2@12818> RTS
00031A24 <AmiBlitz3.ab2@12821>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00031A2A <AmiBlitz3.ab2@12822>   CLR.b fast
00031A30 <AmiBlitz3.ab2@12823>   CLR.b fpu
00031A36 <AmiBlitz3.ab2@12824>   CLR.b iee
00031A38 <AmiBlitz3.ab2@12825>   ADDQ.w #4,A4
00031A3C <AmiBlitz3.ab2@12826> BRA.w writeword__msa
00031A42 <AmiBlitz3.ab2@12832>   ADDQ.l #1,destpointer
00031A4A <AmiBlitz3.ab2@12833>   BCLR #$0,destpointer+3
00031A50 <AmiBlitz3.ab2@12834>   MOVEA.l destpointer,A4
00031A56 <AmiBlitz3.ab2@12835>   CMPA.l destbufferend,A4
00031A5A <AmiBlitz3.ab2@12836>    BCC.w writeword__over
00031A5C <AmiBlitz3.ab2@12837>   MOVE.w D1,(A4)+
00031A62 <AmiBlitz3.ab2@12840>   MOVE.l A4,destpointer
00031A66 <AmiBlitz3.ab2@12841>   CMPA.l bigpc(PC),A4
00031A6A <AmiBlitz3.ab2@12842>    BHI.w writeword__nbp
00031A6C <AmiBlitz3.ab2@12843> RTS
00031A72 <AmiBlitz3.ab2@12846>   ADDQ.l #1,destpointer
00031A7A <AmiBlitz3.ab2@12847>   BCLR #$0,destpointer+3
00031A80 <AmiBlitz3.ab2@12848>   MOVEA.l destpointer,A4
00031A86 <AmiBlitz3.ab2@12849>   CMPA.l destbufferend,A4
00031A8A <AmiBlitz3.ab2@12850>    BCC.w writeword__over
00031A8C <AmiBlitz3.ab2@12851>   MOVE.w D1,(A4)+
00031A92 <AmiBlitz3.ab2@12852>   MOVE.l A4,destpointer
00031A96 <AmiBlitz3.ab2@12853>   CMPA.l bigpc(PC),A4
00031A9A <AmiBlitz3.ab2@12854>    BHI.w writeword__nbp
00031A9C <AmiBlitz3.ab2@12855> RTS
00031AA2 <AmiBlitz3.ab2@12858>   TST.w cfetchmode
00031AA6 <AmiBlitz3.ab2@12859>   BNE.w writeword__nbp2
00031AAC <AmiBlitz3.ab2@12860>   MOVE.l A4,bigpc
00031AAE <AmiBlitz3.ab2@12863> RTS
00031AB6 <AmiBlitz3.ab2@12866>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00031AB8 <AmiBlitz3.ab2@12867>   ADDQ.w #2,A4
00031ABE <AmiBlitz3.ab2@12868>   CLR.b fast
00031AC4 <AmiBlitz3.ab2@12869>   CLR.b fpu
00031ACA <AmiBlitz3.ab2@12870>   CLR.b iee
00031ACE <AmiBlitz3.ab2@12871> BRA.w writeword__ms
00031AD4 <AmiBlitz3.ab2@12875>   MOVEA.l destpointer,A4
00031ADA <AmiBlitz3.ab2@12876>   CMPA.l destbufferend,A4
00031ADE <AmiBlitz3.ab2@12877>    BCC.w writebyte__over
00031AE0 <AmiBlitz3.ab2@12878>   MOVE.b D1,(A4)+
00031AE6 <AmiBlitz3.ab2@12881>   MOVE.l A4,destpointer
00031AEA <AmiBlitz3.ab2@12882>   CMPA.l bigpc(PC),A4
00031AEE <AmiBlitz3.ab2@12883>    BHI.w writebyte__nbp
00031AF0 <AmiBlitz3.ab2@12884> RTS
00031AF6 <AmiBlitz3.ab2@12887>   TST.w cfetchmode
00031AFA <AmiBlitz3.ab2@12888>    BNE.w writebyte__nbp2
00031B00 <AmiBlitz3.ab2@12889>   MOVE.l A4,bigpc
00031B02 <AmiBlitz3.ab2@12892> RTS
00031B0A <AmiBlitz3.ab2@12895>   MOVE.w #-1,dontwrite
00031B0C <AmiBlitz3.ab2@12896>   ADDQ.w #1,A4
00031B12 <AmiBlitz3.ab2@12897>   CLR.b fast
00031B18 <AmiBlitz3.ab2@12898>   CLR.b fpu
00031B1E <AmiBlitz3.ab2@12899>   CLR.b iee
00031B22 <AmiBlitz3.ab2@12900> BRA.w writebyte__ms
00031B26 <AmiBlitz3.ab2@12903> bigpc:   Ds.l 1
00031B28 <AmiBlitz3.ab2@12907>   MOVE.w (A0)+,D1
00031B2C <AmiBlitz3.ab2@12908>   BSR.w writeword
00031B2E <AmiBlitz3.ab2@12911>     CMPA.l A1,A0
00031B32 <AmiBlitz3.ab2@12912>     BCC.w pokecode__done
00031B34 <AmiBlitz3.ab2@12913>       MOVE.w (A0)+,D1
00031B38 <AmiBlitz3.ab2@12914>       BSR.w writeword
00031B3C <AmiBlitz3.ab2@12915> BRA.w pokecode__loop
00031B3E <AmiBlitz3.ab2@12918> RTS
00031B40 <AmiBlitz3.ab2@12921>   MOVE.w (A0)+,D1
00031B44 <AmiBlitz3.ab2@12922>   BSR.w writeword
00031B46 <AmiBlitz3.ab2@12923>   CMPA.l A1,A0
00031B4A <AmiBlitz3.ab2@12924>   BCS.w pokecode2
00031B4C <AmiBlitz3.ab2@12925> RTS
00031B52 <AmiBlitz3.ab2@12931>   TST.b iniffcommand
00031B56 <AmiBlitz3.ab2@12932>   BEQ 'l1
00031B5A <AmiBlitz3.ab2@12933>     MOVE.w #$4880,D1
00031B60 <AmiBlitz3.ab2@12934>     OR.w regnum,D1
00031B64 <AmiBlitz3.ab2@12935>     BSR writeword
00031B66 <AmiBlitz3.ab2@12938> RTS
00031B6A <AmiBlitz3.ab2@12941>   BSR.w convert_byte_to_word
00031B70 <AmiBlitz3.ab2@12944>   TST.b iee
00031B74 <AmiBlitz3.ab2@12945>   BEQ 'old
00031B78 <AmiBlitz3.ab2@12946>   CMP.b #5,d2
00031B7C <AmiBlitz3.ab2@12947>   BEQ wtof
00031B80 <AmiBlitz3.ab2@12950>   MOVE.w #$48C0,D1
00031B86 <AmiBlitz3.ab2@12951>   OR.w regnum,D1
00031B8A <AmiBlitz3.ab2@12952> BRA.w writeword
00031B8C <AmiBlitz3.ab2@12955>   MOVEQ #0,d0
00031B92 <AmiBlitz3.ab2@12956>   MOVE.w regnum,d0
00031B94 <AmiBlitz3.ab2@12957>   ASL.l #7,d0
00031B9A <AmiBlitz3.ab2@12958>   MOVE.l #$f2005000,d1
00031B9C <AmiBlitz3.ab2@12959>   OR.l d0,d1
00031B9E <AmiBlitz3.ab2@12960>   ASL.l #1,d0
00031BA0 <AmiBlitz3.ab2@12961>   ASL.l #8,d0
00031BA2 <AmiBlitz3.ab2@12962>   OR.l d0,d1
00031BA6 <AmiBlitz3.ab2@12963> BRA writelong
00031BAA <AmiBlitz3.ab2@12967>   BSR.w convert_byte_to_word
00031BAE <AmiBlitz3.ab2@12970>   MOVE.w #$4840,D1
00031BB4 <AmiBlitz3.ab2@12971>   OR.w regnum,D1
00031BB8 <AmiBlitz3.ab2@12972>    BSR.w writeword
00031BBC <AmiBlitz3.ab2@12973>   MOVE.w #$4240,D1
00031BC2 <AmiBlitz3.ab2@12974>   OR.w regnum,D1
00031BC6 <AmiBlitz3.ab2@12975> BRA.w writeword
00031BCA <AmiBlitz3.ab2@12979>   CMP.w #$ffdc,d1
00031BCE <AmiBlitz3.ab2@12980>   BNE 'negfpu
00031BD0 <AmiBlitz3.ab2@12981>   MOVEQ #0,d0
00031BD6 <AmiBlitz3.ab2@12982>   MOVE.w regnum,d0
00031BD8 <AmiBlitz3.ab2@12983>   ASL.l #7,d0
00031BDE <AmiBlitz3.ab2@12984>   MOVE.l #$f2004000,d1
00031BE0 <AmiBlitz3.ab2@12985>   OR.l d0,d1
00031BE2 <AmiBlitz3.ab2@12986>   ASL.l #1,d0
00031BE4 <AmiBlitz3.ab2@12987>   ASL.l #8,d0
00031BE6 <AmiBlitz3.ab2@12988>   OR.l d0,d1
00031BEA <AmiBlitz3.ab2@12989> BRA writelong
00031BEC <AmiBlitz3.ab2@12993>   MOVEQ #0,d1
00031BF2 <AmiBlitz3.ab2@12994>   MOVE.w regnum,d1                                         ;fpu neg
00031BF4 <AmiBlitz3.ab2@12995>   ASL.l #7,d1
00031BFA <AmiBlitz3.ab2@12996>   OR.l #$f200001a,d1
00031BFC <AmiBlitz3.ab2@12997>   MOVE.l d0,-(a7)
00031BFE <AmiBlitz3.ab2@12998>   MOVEQ #0,d0
00031C04 <AmiBlitz3.ab2@12999>   MOVE.w regnum,d0
00031C06 <AmiBlitz3.ab2@13000>   ASL.l #8,d0
00031C08 <AmiBlitz3.ab2@13001>   ASL.l #2,d0
00031C0A <AmiBlitz3.ab2@13002>   OR.l d0,d1
00031C0C <AmiBlitz3.ab2@13003>   MOVE.l (a7)+,d0
00031C10 <AmiBlitz3.ab2@13004> BRA writelong
00031C16 <AmiBlitz3.ab2@13007>    TST.b iee
00031C1A <AmiBlitz3.ab2@13008>    BNE wtof
00031C1E <AmiBlitz3.ab2@13009>    BSR.w convert_byte_to_long
00031C22 <AmiBlitz3.ab2@13012>    MOVE.w #$FFDC,D1
00031C28 <AmiBlitz3.ab2@13015>    TST.b iee
00031C2C <AmiBlitz3.ab2@13016>    BNE ltof
00031C32 <AmiBlitz3.ab2@13017>    MOVE.w D1,libjsr+2
00031C36 <AmiBlitz3.ab2@13018>    BSR.w JL_0_AD40
00031C38 <AmiBlitz3.ab2@13019>   MOVE.l D4,D1
00031C3C <AmiBlitz3.ab2@13020>    BSR.w JL_0_AD38
00031C40 <AmiBlitz3.ab2@13021>   MOVE.w #$C900,D1
00031C44 <AmiBlitz3.ab2@13022>    BSR.w Atokejsr
00031C48 <AmiBlitz3.ab2@13023>    BSR.w JL_0_A352
00031C4E <AmiBlitz3.ab2@13024>   MOVE.l libjsr,D1
00031C52 <AmiBlitz3.ab2@13025>    BSR.w writelong
00031C56 <AmiBlitz3.ab2@13026>    BSR.w JL_0_A36E
00031C58 <AmiBlitz3.ab2@13027>   MOVE.l D5,D1
00031C5C <AmiBlitz3.ab2@13028> BRA.w JL_0_AD38
00031C5E <AmiBlitz3.ab2@13031> RTS
00031C62 <AmiBlitz3.ab2@13034>   MOVE.w #$C317,D1
00031C68 <AmiBlitz3.ab2@13035>   TST.b typecheck
00031C6C <AmiBlitz3.ab2@13036>   BEQ 'l1
00031C72 <AmiBlitz3.ab2@13037>    TST.b notypecheck
00031C76 <AmiBlitz3.ab2@13038>    BNE 'l1
00031C7C <AmiBlitz3.ab2@13039>    TST.l lasttoken
00031C82 <AmiBlitz3.ab2@13046>   TST.b debugmode
00031C86 <AmiBlitz3.ab2@13047>    BEQ.w JL_0_9696
00031C8E <AmiBlitz3.ab2@13048>   BTST #$7,overflowcheck
00031C92 <AmiBlitz3.ab2@13049>    BEQ.w JL_0_9696
00031C98 <AmiBlitz3.ab2@13050>   TST.w cfetchmode
00031C9C <AmiBlitz3.ab2@13051>    BNE.w JL_0_9696
00031CA2 <AmiBlitz3.ab2@13052>   TST.w regnum
00031CA6 <AmiBlitz3.ab2@13053>    BEQ.w JL_0_968A
00031CA8 <AmiBlitz3.ab2@13054>   MOVE.w D1,-(A7)
00031CAC <AmiBlitz3.ab2@13055>   MOVE.w JL_0_9698(PC),D1
00031CB0 <AmiBlitz3.ab2@13056>    BSR.w writeword
00031CB6 <AmiBlitz3.ab2@13057>   MOVE.w regnum,D1
00031CBA <AmiBlitz3.ab2@13058>   OR.w L_0_969C(PC),D1
00031CBE <AmiBlitz3.ab2@13059>    BSR.w writeword
00031CC0 <AmiBlitz3.ab2@13060>   MOVE.w (A7)+,D1
00031CC4 <AmiBlitz3.ab2@13061>    BSR.w JL_0_968A
00031CC8 <AmiBlitz3.ab2@13062>   MOVE.w L_0_969A(PC),D1
00031CCC <AmiBlitz3.ab2@13063> BRA.w writeword
00031CD0 <AmiBlitz3.ab2@13067>   MOVEM.l D0-D7/A0-A6,-(A7)
00031CD4 <AmiBlitz3.ab2@13068>    BSR.w Atokejsr
00031CD8 <AmiBlitz3.ab2@13069>   MOVEM.l (A7)+,D0-D7/A0-A6
00031CDA <AmiBlitz3.ab2@13072> RTS
00031CDC <AmiBlitz3.ab2@13075>   MOVE.l D0,-(A7)
00031CDE <AmiBlitz3.ab2@13078>   MOVE.l (A7)+,D0
00031CE0 <AmiBlitz3.ab2@13081>   MOVE.l D0,D0
00031CE4 <AmiBlitz3.ab2@13084>   BSR.w convert_word_to_long
00031CEA <AmiBlitz3.ab2@13085>   TST.b iee
00031CEE <AmiBlitz3.ab2@13086>   BEQ 'old
00031CF2 <AmiBlitz3.ab2@13087>   CMP.b #5,d2
00031CF6 <AmiBlitz3.ab2@13088>   BNE 'old
00031CF8 <AmiBlitz3.ab2@13089> RTS
00031CFC <AmiBlitz3.ab2@13092> BRA.w JL_0_9600
00031D00 <AmiBlitz3.ab2@13096>   MOVE.w #$C316,D1
00031D06 <AmiBlitz3.ab2@13097>   TST.b typecheck
00031D0A <AmiBlitz3.ab2@13098>   BEQ 'l1
00031D10 <AmiBlitz3.ab2@13099>   TST.b peekaddrsize
00031D14 <AmiBlitz3.ab2@13100>   BNE 'l1
00031D1A <AmiBlitz3.ab2@13101>   TST.b notypecheck
00031D1E <AmiBlitz3.ab2@13102>   BNE 'l1
00031D24 <AmiBlitz3.ab2@13103>   TST.l lasttoken
00031D28 <AmiBlitz3.ab2@13109> BRA.w JL_0_963A
00031D2C <AmiBlitz3.ab2@13113>   MOVE.w #$C318,D1
00031D32 <AmiBlitz3.ab2@13114>   TST.b typecheck
00031D36 <AmiBlitz3.ab2@13115>   BEQ 'l1
00031D3C <AmiBlitz3.ab2@13116>   TST.b peekaddrsize
00031D40 <AmiBlitz3.ab2@13117>   BNE 'l1
00031D46 <AmiBlitz3.ab2@13118>   TST.b notypecheck
00031D4A <AmiBlitz3.ab2@13119>   BNE 'l1
00031D50 <AmiBlitz3.ab2@13120>   TST.l lasttoken
00031D54 <AmiBlitz3.ab2@13126> BRA.w JL_0_963A
00031D58 <AmiBlitz3.ab2@13130>   MOVE.w #$C318,D1
00031D5E <AmiBlitz3.ab2@13131>   TST.b typecheck
00031D62 <AmiBlitz3.ab2@13132>   BEQ 'l1
00031D68 <AmiBlitz3.ab2@13133>   TST.b notypecheck
00031D6C <AmiBlitz3.ab2@13134>   BNE 'l1
00031D72 <AmiBlitz3.ab2@13135>   TST.l lasttoken
00031D76 <AmiBlitz3.ab2@13141>   BSR.w JL_0_963A
00031D7A <AmiBlitz3.ab2@13142> BRA.w convert_word_to_quick
00031D7E <AmiBlitz3.ab2@13146> BRA.w JL_0_9600
00031D80 <AmiBlitz3.ab2@13150> RTS
00031D84 <AmiBlitz3.ab2@13154>   MOVE.w #$C319,D1
00031D8A <AmiBlitz3.ab2@13155>   TST.b typecheck
00031D8E <AmiBlitz3.ab2@13156>   BEQ 'l1
00031D94 <AmiBlitz3.ab2@13157>   TST.b notypecheck
00031D98 <AmiBlitz3.ab2@13158>   BNE 'l1
00031D9E <AmiBlitz3.ab2@13159>   TST.l lasttoken
00031DA2 <AmiBlitz3.ab2@13166>   BSR.w JL_0_963A
00031DA6 <AmiBlitz3.ab2@13169>   MOVE.w #$4240,D1
00031DAC <AmiBlitz3.ab2@13170>   OR.w regnum,D1
00031DB0 <AmiBlitz3.ab2@13171>   BSR.w writeword
00031DB4 <AmiBlitz3.ab2@13172>   MOVE.w #$4840,D1
00031DBA <AmiBlitz3.ab2@13173>   OR.w regnum,D1
00031DBE <AmiBlitz3.ab2@13174> BRA.w writeword
00031DC2 <AmiBlitz3.ab2@13178> BRA.w JL_0_96D0
00031DC6 <AmiBlitz3.ab2@13182>   BSR.w JL_0_96D0
00031DCA <AmiBlitz3.ab2@13183> BRA.w convert_word_to_long
00031DCC <AmiBlitz3.ab2@13188>   MOVEQ #0,d0
00031DD2 <AmiBlitz3.ab2@13189>   MOVE.w regnum,d0
00031DD4 <AmiBlitz3.ab2@13190>   ASL.l #7,d0
00031DDA <AmiBlitz3.ab2@13191>   MOVE.l #$f2004000,d1
00031DDC <AmiBlitz3.ab2@13192>   OR.l d0,d1
00031DDE <AmiBlitz3.ab2@13193>   ASL.l #1,d0
00031DE0 <AmiBlitz3.ab2@13194>   ASL.l #8,d0
00031DE2 <AmiBlitz3.ab2@13195>   OR.l d0,d1
00031DE6 <AmiBlitz3.ab2@13196>   BSR writelong
00031DEC <AmiBlitz3.ab2@13197>   MOVE.w regnum,d0
00031DEE <AmiBlitz3.ab2@13198>   ASL.l #7,d0
00031DF4 <AmiBlitz3.ab2@13199>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
00031DF6 <AmiBlitz3.ab2@13200>   OR.w d0,d1
00031DFA <AmiBlitz3.ab2@13201>   BSR writelong
00031E00 <AmiBlitz3.ab2@13202>   MOVE.l #$37800000,d1
00031E04 <AmiBlitz3.ab2@13203>   BSR writelong
00031E06 <AmiBlitz3.ab2@13204> RTS
00031E0C <AmiBlitz3.ab2@13208>   TST.b iee
00031E10 <AmiBlitz3.ab2@13209>   BNE qtof
00031E14 <AmiBlitz3.ab2@13210>   MOVE.w #$D300,D1
00031E16 <AmiBlitz3.ab2@13213>   MOVE.w D1,-(A7)
00031E1A <AmiBlitz3.ab2@13214>    BSR.w JL_0_AD40
00031E1C <AmiBlitz3.ab2@13215>   MOVE.l D4,D1
00031E20 <AmiBlitz3.ab2@13216>    BSR.w JL_0_AD38
00031E24 <AmiBlitz3.ab2@13217>    BSR.w JL_0_A352
00031E26 <AmiBlitz3.ab2@13218>   MOVE.w (A7)+,D1
00031E2A <AmiBlitz3.ab2@13219>    BSR.w Atokejsr
00031E2E <AmiBlitz3.ab2@13220>    BSR.w JL_0_A36E
00031E30 <AmiBlitz3.ab2@13221>   MOVE.l D5,D1
00031E34 <AmiBlitz3.ab2@13222> BRA.w JL_0_AD38
00031E36 <AmiBlitz3.ab2@13226> RTS
00031E3C <AmiBlitz3.ab2@13229>   TST.b typecheck
00031E40 <AmiBlitz3.ab2@13230>   BEQ 'l1
00031E46 <AmiBlitz3.ab2@13231>   TST.b notypecheck
00031E4A <AmiBlitz3.ab2@13232>   BNE 'l1
00031E50 <AmiBlitz3.ab2@13233>   TST.l lasttoken
00031E56 <AmiBlitz3.ab2@13238>   TST.b iee
00031E5A <AmiBlitz3.ab2@13239>   BNE ftol
00031E5E <AmiBlitz3.ab2@13240>   MOVE.w #$C31A,D1
00031E62 <AmiBlitz3.ab2@13241>   BSR.w JL_0_963A
00031E66 <AmiBlitz3.ab2@13242>   BSR.w JL_0_974A
00031E6A <AmiBlitz3.ab2@13243> BRA.w convert_long_to_byte
00031E6C <AmiBlitz3.ab2@13247> RTS
00031E72 <AmiBlitz3.ab2@13250>   TST.b typecheck
00031E76 <AmiBlitz3.ab2@13251>   BEQ 'l1
00031E7C <AmiBlitz3.ab2@13252>   TST.b notypecheck
00031E80 <AmiBlitz3.ab2@13253>   BNE 'l1
00031E86 <AmiBlitz3.ab2@13254>   TST.l lasttoken
00031E8C <AmiBlitz3.ab2@13259>   TST.b iee
00031E90 <AmiBlitz3.ab2@13260>   BNE ftol
00031E94 <AmiBlitz3.ab2@13261>   MOVE.w #$C31B,D1
00031E98 <AmiBlitz3.ab2@13262>   BSR.w JL_0_963A
00031E9C <AmiBlitz3.ab2@13263>   BSR.w JL_0_974A
00031EA0 <AmiBlitz3.ab2@13264> BRA.w convert_long_to_word
00031EA2 <AmiBlitz3.ab2@13268> RTS
00031EA8 <AmiBlitz3.ab2@13271>   TST.b iee
00031EAC <AmiBlitz3.ab2@13272>   BNE ftol
00031EB0 <AmiBlitz3.ab2@13273>   MOVE.w #$C31C,D1
00031EB4 <AmiBlitz3.ab2@13274>   BSR.w JL_0_963A
00031EB8 <AmiBlitz3.ab2@13277>   MOVE.w #$FFE2,D1
00031EBC <AmiBlitz3.ab2@13278> BRA.w JL_0_9604
00031EBE <AmiBlitz3.ab2@13281>   MOVE.l d0,-(a7)
00031EC0 <AmiBlitz3.ab2@13282>   MOVEQ #0,d0
00031EC6 <AmiBlitz3.ab2@13283>   MOVE.w regnum,d0
00031EC8 <AmiBlitz3.ab2@13284>   ASL.l #7,d0
00031ECE <AmiBlitz3.ab2@13285>   MOVE.l #$f2006000,d1
00031ED0 <AmiBlitz3.ab2@13286>   OR.l d0,d1
00031ED2 <AmiBlitz3.ab2@13287>   ASL.l #1,d0
00031ED4 <AmiBlitz3.ab2@13288>   ASL.l #8,d0
00031ED6 <AmiBlitz3.ab2@13289>   OR.l d0,d1
00031ED8 <AmiBlitz3.ab2@13290>   MOVE.l (a7)+,d0
00031EDC <AmiBlitz3.ab2@13291> BRA writelong
00031EDE <AmiBlitz3.ab2@13295>   MOVE.l d0,-(a7)
00031EE0 <AmiBlitz3.ab2@13296>   MOVEQ #0,d0
00031EE6 <AmiBlitz3.ab2@13297>   MOVE.l #$f23c4023,d1
00031EEC <AmiBlitz3.ab2@13298>   MOVE.w regnum,d0
00031EEE <AmiBlitz3.ab2@13299>   ASL.l #7,d0
00031EF0 <AmiBlitz3.ab2@13300>   OR.l d0,d1
00031EF4 <AmiBlitz3.ab2@13301>   BSR writelong
00031EFA <AmiBlitz3.ab2@13302>   MOVE.l #$00010000,d1
00031EFE <AmiBlitz3.ab2@13303>   BSR writelong
00031F04 <AmiBlitz3.ab2@13304>   MOVE.w regnum,d0
00031F06 <AmiBlitz3.ab2@13305>   ASL.l #7,d0
00031F0C <AmiBlitz3.ab2@13306>   MOVE.l #$f2006000,d1
00031F0E <AmiBlitz3.ab2@13307>   OR.l d0,d1
00031F10 <AmiBlitz3.ab2@13308>   ASL.l #1,d0
00031F12 <AmiBlitz3.ab2@13309>   ASL.l #8,d0
00031F14 <AmiBlitz3.ab2@13310>   OR.l d0,d1
00031F18 <AmiBlitz3.ab2@13311>   BSR writelong
00031F1A <AmiBlitz3.ab2@13312>   MOVE.l (a7)+,d0
00031F1C <AmiBlitz3.ab2@13313> RTS
00031F1E <AmiBlitz3.ab2@13317> RTS
00031F24 <AmiBlitz3.ab2@13321>   TST.b iee
00031F28 <AmiBlitz3.ab2@13322>   BNE ftoq
00031F2C <AmiBlitz3.ab2@13323>   MOVE.w #$C31B,D1
00031F30 <AmiBlitz3.ab2@13324>   BSR.w JL_0_963A
00031F34 <AmiBlitz3.ab2@13325>   MOVE.w #$D301,D1
00031F38 <AmiBlitz3.ab2@13326> BRA.w JL_0_96FC
00031F3E <AmiBlitz3.ab2@13332>    TST.b blitzparloop
00031F42 <AmiBlitz3.ab2@13333>    BNE 'l1
00031F48 <AmiBlitz3.ab2@13334>    TST.b funcparloop
00031F4C <AmiBlitz3.ab2@13335>    BNE 'l1
00031F50 <AmiBlitz3.ab2@13336>    BRA error_convert_types
00031F58 <AmiBlitz3.ab2@13339>   CMP.b #2,optistring
00031F5C <AmiBlitz3.ab2@13340>   BEQ JLrts
00031F62 <AmiBlitz3.ab2@13341>   MOVE.w stol,D1
00031F66 <AmiBlitz3.ab2@13342>   BSR.w writeword
00031F6E <AmiBlitz3.ab2@13343>   CMPI.w #$2,sbgot
00031F72 <AmiBlitz3.ab2@13344>   BCS.w sbtolong
00031F76 <AmiBlitz3.ab2@13345>   MOVE.w ceos(PC),D1
00031F7A <AmiBlitz3.ab2@13346>   BSR.w writeword
00031F80 <AmiBlitz3.ab2@13349>   MOVE.w regnum,D1
00031F82 <AmiBlitz3.ab2@13350>   LSL.w #8,D1
00031F84 <AmiBlitz3.ab2@13351>   LSL.w #1,D1
00031F8C <AmiBlitz3.ab2@13352>   CMPI.w #$2,sbgot
00031F90 <AmiBlitz3.ab2@13353>   BCS.w JL_0_98E8
00031F96 <AmiBlitz3.ab2@13354>   MOVE.w a2offset,D3
00031F9C <AmiBlitz3.ab2@13355>   SUB.w thisstuse,D3
00031FA0 <AmiBlitz3.ab2@13356>   CMP.w #$6,D3
00031FA4 <AmiBlitz3.ab2@13357>   BNE.w JL_0_98D4b
00031FAA <AmiBlitz3.ab2@13358>   OR.w movestst2,D1
00031FAE <AmiBlitz3.ab2@13359>   BSR.w writeword
00031FB4 <AmiBlitz3.ab2@13360>   LEA movestst2+2,A0
00031FBA <AmiBlitz3.ab2@13361>   LEA movestst2f,A1
00031FBE <AmiBlitz3.ab2@13362> BRA.w pokecode2
00031FC4 <AmiBlitz3.ab2@13366>   OR.w movea7dn,D1
00031FC8 <AmiBlitz3.ab2@13367>   BSR.w writeword
00031FCE <AmiBlitz3.ab2@13368>   MOVE.l #0,D1
00031FD2 <AmiBlitz3.ab2@13369> BRA.w writeword
00031FD8 <AmiBlitz3.ab2@13373>   ADDQ.w #1,fuckpos
00031FDC <AmiBlitz3.ab2@13374>   BSR.w writeconvertcode
00031FE2 <AmiBlitz3.ab2@13375>   SUBQ.w #1,fuckpos
00031FE4 <AmiBlitz3.ab2@13377> RTS
00031FE6 <AmiBlitz3.ab2@13381>   MOVE.w D3,D1
00031FEA <AmiBlitz3.ab2@13382>   CMP.w #7,d1
00031FEE <AmiBlitz3.ab2@13383>   BLE 'ok
00031FF4 <AmiBlitz3.ab2@13384>   JMP errorinternalconvert
00031FF6 <AmiBlitz3.ab2@13385> 'ok  SUBQ.w #1,D1
00031FFA <AmiBlitz3.ab2@13386>   MULU #$7,D1
00031FFC <AmiBlitz3.ab2@13387>   ADD.w D2,D1
00031FFE <AmiBlitz3.ab2@13388>   SUBQ.w #1,D1
00032000 <AmiBlitz3.ab2@13389>   LSL.w #2,D1
00032006 <AmiBlitz3.ab2@13390>   LEA convtable,A0
0003200A <AmiBlitz3.ab2@13391>   MOVE.l $0(A0,D1.W),D1
0003200E <AmiBlitz3.ab2@13392>   BEQ.w JL_0_97A2
00032010 <AmiBlitz3.ab2@13393>     MOVEA.l D1,A0
00032014 <AmiBlitz3.ab2@13394>     CMP.b #$ff,d3
00032018 <AmiBlitz3.ab2@13395>     BEQ JL_0_97A2
0003201A <AmiBlitz3.ab2@13396> JMP (A0)
0003201C <AmiBlitz3.ab2@13399> RTS
00032020 <AmiBlitz3.ab2@13402> usedfrom:  Ds.l 1
00032024 <AmiBlitz3.ab2@13409>   CMP.w #"\",D0
00032028 <AmiBlitz3.ab2@13410>   BNE.w JL_0_97C2
0003202C <AmiBlitz3.ab2@13411>     CMP.b #"\",(a5)
00032030 <AmiBlitz3.ab2@13412>     BNE 'first
00032036 <AmiBlitz3.ab2@13413>       MOVE.l A5,usedfrom
0003203C <AmiBlitz3.ab2@13414>       LEA path2,A5
00032040 <AmiBlitz3.ab2@13415> BRA 'g1
00032042 <AmiBlitz3.ab2@13418>     SUBQ.w #1,A5
00032048 <AmiBlitz3.ab2@13419>   MOVE.l A5,usedfrom
0003204E <AmiBlitz3.ab2@13420>   LEA usedpath,A5                                          ;read path
00032052 <AmiBlitz3.ab2@13423>   BSR.w get1bytemain
00032058 <AmiBlitz3.ab2@13426>   CLR.w flagmask
0003205C <AmiBlitz3.ab2@13427>   CMP.w #$2A,D0
00032060 <AmiBlitz3.ab2@13428>    BNE.w JL_0_983A
00032068 <AmiBlitz3.ab2@13429>   MOVE.w #$0001,flagmask
0003206C <AmiBlitz3.ab2@13431>    BSR.w getparameter2
00032070 <AmiBlitz3.ab2@13434>    BEQ.w syntaxerr
00032074 <AmiBlitz3.ab2@13435>   CMP.w #$28,D0
00032078 <AmiBlitz3.ab2@13436>    BEQ.w JL_0_9830
0003207C <AmiBlitz3.ab2@13437>   CMP.w #$2E,D0
00032080 <AmiBlitz3.ab2@13438>    BEQ.w JL_0_980C
00032084 <AmiBlitz3.ab2@13439>   CMP.w #$24,D0
00032088 <AmiBlitz3.ab2@13440>    BNE.w JL_0_9838
00032090 <AmiBlitz3.ab2@13441>   ORI.w #$8,flagmask
00032094 <AmiBlitz3.ab2@13442>    BSR.w storeloc
00032098 <AmiBlitz3.ab2@13443>    BSR.w get1bytemain
0003209C <AmiBlitz3.ab2@13444> BRA.w JL_0_9822
000320A0 <AmiBlitz3.ab2@13448>   BSR.w storeloc
000320A2 <AmiBlitz3.ab2@13449>   MOVE.w D2,-(A7)
000320A8 <AmiBlitz3.ab2@13450>   LEA namebuff2,A1
000320AC <AmiBlitz3.ab2@13451>    BSR.w makename3
000320B0 <AmiBlitz3.ab2@13452>    BEQ.w syntaxerr
000320B2 <AmiBlitz3.ab2@13453>   MOVE.w (A7)+,D2
000320B4 <AmiBlitz3.ab2@13456>    MOVE.w D0,D1
000320B8 <AmiBlitz3.ab2@13457>    BSR.w resloc
000320BC <AmiBlitz3.ab2@13458>    CMP.w #$28,D1
000320C0 <AmiBlitz3.ab2@13459>    BNE.w JL_0_9838
000320C8 <AmiBlitz3.ab2@13462>   ORI.w #$2,flagmask
000320CA <AmiBlitz3.ab2@13465> RTS
000320CE <AmiBlitz3.ab2@13469>   CMP.w #$40,D0
000320D2 <AmiBlitz3.ab2@13470>    BNE.w JL_0_984E
000320DA <AmiBlitz3.ab2@13471>   MOVE.w #$0005,flagmask
000320DE <AmiBlitz3.ab2@13472> BRA.w JL_0_97D8
000320E2 <AmiBlitz3.ab2@13476>   BSR.w makename2
000320E6 <AmiBlitz3.ab2@13477> BRA.w JL_0_97DC
000320EA <AmiBlitz3.ab2@13481>   MOVE.w #$FED3,D1
000320EE <AmiBlitz3.ab2@13482>    BSR.w uselib
000320F4 <AmiBlitz3.ab2@13483>   LEA pusha3,A0
000320FA <AmiBlitz3.ab2@13484>   LEA pusha3f,A1
000320FE <AmiBlitz3.ab2@13485> BRA.w pokecode
00032102 <AmiBlitz3.ab2@13489>   MOVE.w #$FED3,D1
00032106 <AmiBlitz3.ab2@13490>    BSR.w uselib
0003210C <AmiBlitz3.ab2@13491>   LEA pulla3,A0
00032112 <AmiBlitz3.ab2@13492>   LEA pulla3f,A1
00032116 <AmiBlitz3.ab2@13493> BRA.w pokecode
00032118 <AmiBlitz3.ab2@13497> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
00032120 <AmiBlitz3.ab2@13502>     CMP.b #2,optistring
00032124 <AmiBlitz3.ab2@13503>    BEQ 'l10
00032128 <AmiBlitz3.ab2@13504>    MOVE.w ceos(PC),D1
0003212C <AmiBlitz3.ab2@13505>    BSR.w writeword                                         ;clr.b (a3)
00032132 <AmiBlitz3.ab2@13508>   MOVE.w regnum,D1
00032134 <AmiBlitz3.ab2@13509>   LSL.w #8,D1
00032136 <AmiBlitz3.ab2@13510>   LSL.w #1,D1
0003213E <AmiBlitz3.ab2@13511>   CMPI.w #$2,sbgot
00032142 <AmiBlitz3.ab2@13512>    BCS.w JL_0_98E8
00032148 <AmiBlitz3.ab2@13513>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0003214E <AmiBlitz3.ab2@13514>   SUB.w thisstuse,D3
00032152 <AmiBlitz3.ab2@13515>   CMP.w #$6,D3
00032156 <AmiBlitz3.ab2@13516>    BNE.w JL_0_98D4
0003215C <AmiBlitz3.ab2@13517>   OR.w movestst2,D1
00032160 <AmiBlitz3.ab2@13518>    BSR.w writeword
00032166 <AmiBlitz3.ab2@13519>   LEA movestst2+2,A0
0003216C <AmiBlitz3.ab2@13520>   LEA movestst2f,A1
00032170 <AmiBlitz3.ab2@13521> BRA.w pokecode2
00032176 <AmiBlitz3.ab2@13525>    OR.w movea7dn,D1
0003217A <AmiBlitz3.ab2@13526>    BSR.w writeword
00032180 <AmiBlitz3.ab2@13527>   MOVE.l movea7dn+2,D1
00032184 <AmiBlitz3.ab2@13539>   BSR writelong
0003218C <AmiBlitz3.ab2@13542>    CMP.w #6,regnum
00032190 <AmiBlitz3.ab2@13543>    BEQ 'l1
00032196 <AmiBlitz3.ab2@13544>    TST.w stackpar
0003219A <AmiBlitz3.ab2@13545>    BNE 'l1
000321A0 <AmiBlitz3.ab2@13546>    TST.b funcparloop
000321A4 <AmiBlitz3.ab2@13547>    BEQ 'l1
000321AA <AmiBlitz3.ab2@13548>    MOVE.l #$48780000,d1
000321AE <AmiBlitz3.ab2@13549>    BSR writelong
000321B0 <AmiBlitz3.ab2@13553> RTS
000321B2 <AmiBlitz3.ab2@13558>      MOVE.l d1,-(a7)
000321BA <AmiBlitz3.ab2@13559>      CMP.w #6,regnum
000321BE <AmiBlitz3.ab2@13560>      BEQ 'l1
000321C4 <AmiBlitz3.ab2@13561>      TST.w stackpar
000321C8 <AmiBlitz3.ab2@13562>      BNE 'l1
000321CE <AmiBlitz3.ab2@13563>      TST.b funcparloop
000321D2 <AmiBlitz3.ab2@13564>      BEQ 'l1
000321D8 <AmiBlitz3.ab2@13565>      MOVE.l #$48780000,d1
000321DC <AmiBlitz3.ab2@13566>      BSR writelong
000321DE <AmiBlitz3.ab2@13569>      MOVE.l (a7)+,d1
000321E4 <AmiBlitz3.ab2@13571>    OR.w movestdn,D1
000321E8 <AmiBlitz3.ab2@13572>    BSR.w writeword
000321EC <AmiBlitz3.ab2@13573>   MOVE.w #$FED3,D1
000321F0 <AmiBlitz3.ab2@13574>    BSR.w uselib
000321F4 <AmiBlitz3.ab2@13575>   MOVE.w $A(A1),D1
000321F8 <AmiBlitz3.ab2@13576> BRA.w writeword
000321FA <AmiBlitz3.ab2@13579> unknown:    Ds.w 1
00032200 <AmiBlitz3.ab2@13582> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
00032204 <AmiBlitz3.ab2@13583> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0003220A <AmiBlitz3.ab2@13584>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
00032210 <AmiBlitz3.ab2@13590>   TST.b debugmode
00032214 <AmiBlitz3.ab2@13591>   BEQ.w sharreval
00032218 <AmiBlitz3.ab2@13592>  BSR.w arreval
0003221C <AmiBlitz3.ab2@13595>   MOVE.w somecode(PC),D1
00032222 <AmiBlitz3.ab2@13596>   OR.w regnum,D1
00032226 <AmiBlitz3.ab2@13597>    BSR.w writeword
00032228 <AmiBlitz3.ab2@13598>   MOVEQ.l #$01,D1
0003222A <AmiBlitz3.ab2@13599>   SWAP D1
0003222E <AmiBlitz3.ab2@13600>    BSR.w writelong
00032232 <AmiBlitz3.ab2@13601>   MOVE.l somecode2(PC),D1
00032236 <AmiBlitz3.ab2@13602>    BSR.w writelong
0003223A <AmiBlitz3.ab2@13603>   MOVE.w #$C309,D1
0003223E <AmiBlitz3.ab2@13604> BRA.w Atokejsr
00032240 <AmiBlitz3.ab2@13608>   MOVEQ.l #$02,D2
00032242 <AmiBlitz3.ab2@13609>   MOVEQ.l #$00,D1
00032244 <AmiBlitz3.ab2@13610>   MOVEQ.l #$00,D3
00032248 <AmiBlitz3.ab2@13611> BRA.w maineval2
0003224A <AmiBlitz3.ab2@13615>   MOVEQ.l #$03,D2
0003224C <AmiBlitz3.ab2@13616>   MOVEQ.l #$00,D1
0003224E <AmiBlitz3.ab2@13617>   MOVEQ.l #$00,D3
00032254 <AmiBlitz3.ab2@13618>   MOVE.b notypecheck,-(a7)
0003225C <AmiBlitz3.ab2@13619>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
00032262 <AmiBlitz3.ab2@13620>   JSR maineval2
00032268 <AmiBlitz3.ab2@13621>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0003226A <AmiBlitz3.ab2@13622>   RTS
00032274 <AmiBlitz3.ab2@13626>   MOVE.w oldqflag,instringon
0003227A <AmiBlitz3.ab2@13627>   MOVEA.l lastsourcepos,A5
0003227C <AmiBlitz3.ab2@13628>   MOVEQ.l #-$01,D1
0003227E <AmiBlitz3.ab2@13629>   MOVEQ.l #-$01,D3
00032282 <AmiBlitz3.ab2@13630> BRA.w peval
0003228C <AmiBlitz3.ab2@13635>   MOVE.w oldqflag,instringon
00032292 <AmiBlitz3.ab2@13636>   MOVEA.l lastsourcepos,A5
00032294 <AmiBlitz3.ab2@13639>   MOVEQ.l #-$01,D1
00032296 <AmiBlitz3.ab2@13640>   MOVEQ.l #$00,D3
0003229C <AmiBlitz3.ab2@13641>   MOVE.l leftsidetype,-(a7)
000322A2 <AmiBlitz3.ab2@13642>   MOVE.l rightsidetype,-(a7)
000322A8 <AmiBlitz3.ab2@13643>   CLR.l leftsidetype
000322AE <AmiBlitz3.ab2@13644>   CLR.l rightsidetype
000322B4 <AmiBlitz3.ab2@13645>   JSR maineval
000322BA <AmiBlitz3.ab2@13646>   MOVE.l (a7)+,rightsidetype
000322C0 <AmiBlitz3.ab2@13647>   MOVE.l (a7)+,leftsidetype
000322C2 <AmiBlitz3.ab2@13648>   RTS
000322CC <AmiBlitz3.ab2@13652>   MOVE.w oldqflag,instringon
000322D2 <AmiBlitz3.ab2@13653>   MOVEA.l lastsourcepos,A5
000322D4 <AmiBlitz3.ab2@13654>   MOVEQ.l #$00,D1
000322D6 <AmiBlitz3.ab2@13655>   MOVEQ.l #-$01,D3
000322DA <AmiBlitz3.ab2@13656> BRA.w maineval
000322DC <AmiBlitz3.ab2@13660>   MOVEQ.l #$01,D1
000322DE <AmiBlitz3.ab2@13661>   MOVEQ.l #-$01,D3
000322E2 <AmiBlitz3.ab2@13662> BRA.w maineval
000322EC <AmiBlitz3.ab2@13667>   MOVE.w oldqflag,instringon
000322F2 <AmiBlitz3.ab2@13668>   MOVEA.l lastsourcepos,A5
000322F4 <AmiBlitz3.ab2@13671>   MOVEQ.l #$00,D1                                        ;no push
000322F6 <AmiBlitz3.ab2@13672>   MOVEQ.l #$00,D3
000322FE <AmiBlitz3.ab2@13693>    CMPI.w #$6,regnum
00032302 <AmiBlitz3.ab2@13694>    BCS.w maineval2
00032304 <AmiBlitz3.ab2@13695>    MOVEQ #0,d1
0003230A <AmiBlitz3.ab2@13696>    MOVE.l destpointer,a4
00032310 <AmiBlitz3.ab2@13698>    CMPA.l destbufferend,A4
00032314 <AmiBlitz3.ab2@13699>    BCC.w maineval__l2
0003231A <AmiBlitz3.ab2@13701>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0003231E <AmiBlitz3.ab2@13703>    BNE maineval__l2
00032322 <AmiBlitz3.ab2@13707> BRA maineval__l1
00032324 <AmiBlitz3.ab2@13710>   MOVEQ.l #-$01,D1
0003232C <AmiBlitz3.ab2@13713>   MOVE.w #$0006,regnum                                     ;write a func par To stack
00032332 <AmiBlitz3.ab2@13716>   MOVE.w thisstuse,-(A7)
0003233C <AmiBlitz3.ab2@13717>   MOVE.w a2offset,thisstuse
00032342 <AmiBlitz3.ab2@13718>   MOVE.w stackpar,-(A7)
00032348 <AmiBlitz3.ab2@13719>   MOVE.w D1,stackpar
0003234E <AmiBlitz3.ab2@13720>   MOVE.w sbgot,-(A7)
00032354 <AmiBlitz3.ab2@13721>   CLR.w sbgot
00032358 <AmiBlitz3.ab2@13722>   MOVE.w unknown(PC),-(A7)
0003235E <AmiBlitz3.ab2@13723>   MOVE.w D3,unknown
00032360 <AmiBlitz3.ab2@13724>   MOVE.w D2,-(a7)
00032366 <AmiBlitz3.ab2@13725>   MOVE.w d2,mode
0003236A <AmiBlitz3.ab2@13726>    BSR.w eval3
0003236C <AmiBlitz3.ab2@13727>   MOVE.w (a7)+,d3
00032370 <AmiBlitz3.ab2@13728>    BEQ.w maineval__noconv
00032374 <AmiBlitz3.ab2@13729>   MOVE.w unknown(PC),D1
00032378 <AmiBlitz3.ab2@13730>    BNE.w maineval__noconv
0003237A <AmiBlitz3.ab2@13731>   EXG.l D2,D3
0003237C <AmiBlitz3.ab2@13732>    MOVE.l a2,-(a7)
00032382 <AmiBlitz3.ab2@13733>    TST.b curtemplabel
00032386 <AmiBlitz3.ab2@13734>    BEQ maineval2__l10
0003238C <AmiBlitz3.ab2@13735>    MOVE.l asmbuff,a2
00032392 <AmiBlitz3.ab2@13736>    CMP.w #$c,$8(a2)
00032396 <AmiBlitz3.ab2@13737>    BEQ maineval2__l20
0003239C <AmiBlitz3.ab2@13738>    CMP.w #$d,$8(a2)
000323A0 <AmiBlitz3.ab2@13739>    BEQ maineval2__l20
000323A2 <AmiBlitz3.ab2@13742>   CMP.w d2,d3
000323A6 <AmiBlitz3.ab2@13743>   BEQ maineval2__l20
000323AA <AmiBlitz3.ab2@13744>   BSR.w writeconvertcode
000323B0 <AmiBlitz3.ab2@13745>   CLR.b doimmediate
000323B2 <AmiBlitz3.ab2@13748>   MOVE.l (a7)+,a2
000323B8 <AmiBlitz3.ab2@13751>   MOVE.w (A7)+,unknown
000323BE <AmiBlitz3.ab2@13752>   MOVE.w stackpar,D1
000323C2 <AmiBlitz3.ab2@13753>    BEQ.w maineval__skipme
000323C6 <AmiBlitz3.ab2@13754>    BMI.w maineval__skipme
000323CC <AmiBlitz3.ab2@13758>   MOVE.w regnum,D1
000323CE <AmiBlitz3.ab2@13759>   LSL.w #8,D1
000323D0 <AmiBlitz3.ab2@13760>   LSL.w #1,D1
000323D4 <AmiBlitz3.ab2@13761>   CMP.w #$7,D2
000323D8 <AmiBlitz3.ab2@13762>    BNE.w maineval__hi1
000323E0 <AmiBlitz3.ab2@13763>    CMP.b #2,optistring
000323E4 <AmiBlitz3.ab2@13764>    BEQ maineval__hi1a
000323E6 <AmiBlitz3.ab2@13765>   MOVE.w D1,-(A7)
000323EC <AmiBlitz3.ab2@13766>   OR.w getstlen,D1
000323F0 <AmiBlitz3.ab2@13767>    BSR.w writeword
000323F2 <AmiBlitz3.ab2@13768>   MOVE.w (A7)+,D1
000323F8 <AmiBlitz3.ab2@13771>   ADDQ.w #2,a2offset                                        ;lib mode to stack
000323FC <AmiBlitz3.ab2@13775>   MOVE.w #$3f3c,d1
00032400 <AmiBlitz3.ab2@13776>    BSR.w writeword
00032402 <AmiBlitz3.ab2@13780>   MOVE.w d2,d1
00032408 <AmiBlitz3.ab2@13781>   MOVE.w d1,libmode
0003240C <AmiBlitz3.ab2@13782>    BSR.w writeword
00032410 <AmiBlitz3.ab2@13783>   CMP.w #$7,D2
00032414 <AmiBlitz3.ab2@13784>    BNE.w maineval__skipme
0003241A <AmiBlitz3.ab2@13785>   MOVE.w putstlen,D1
00032420 <AmiBlitz3.ab2@13786>   OR.w regnum,D1
00032424 <AmiBlitz3.ab2@13787>    BSR.w writeword
00032428 <AmiBlitz3.ab2@13790>    CMP.w #$7,D2
0003242C <AmiBlitz3.ab2@13791>    BNE.w maineval__notst
00032434 <AmiBlitz3.ab2@13802>    CMP.b #2,optistring
00032438 <AmiBlitz3.ab2@13803>    BEQ maineval__skipme_l10
0003243E <AmiBlitz3.ab2@13804>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
00032442 <AmiBlitz3.ab2@13805>    BSR.w sbtolong
00032446 <AmiBlitz3.ab2@13806> BRA.w maineval__notst2
0003244E <AmiBlitz3.ab2@13810>     CMP.w #6,regnum
00032452 <AmiBlitz3.ab2@13811>     BEQ maineval__skipme_l10_l1
00032458 <AmiBlitz3.ab2@13812>     TST.b funcparloop
0003245C <AmiBlitz3.ab2@13813>     BEQ maineval__skipme_l10_l1
00032462 <AmiBlitz3.ab2@13814>     MOVE.l #$48780000,d1
00032466 <AmiBlitz3.ab2@13815>     BSR writelong
0003246A <AmiBlitz3.ab2@13818> BRA.w maineval__notst2
00032470 <AmiBlitz3.ab2@13821>   ADDQ.w #2,a2offset
00032474 <AmiBlitz3.ab2@13822> BRA maineval__skipme
0003247C <AmiBlitz3.ab2@13825>   CMPI.w #$2,sbgot
00032480 <AmiBlitz3.ab2@13826>    BCS.w maineval__notst2                                         ;correct stack
00032484 <AmiBlitz3.ab2@13827>   MOVE.w ststfix(PC),D1
00032488 <AmiBlitz3.ab2@13828>    BSR.w writeword
0003248E <AmiBlitz3.ab2@13831>   MOVE.w (A7)+,sbgot
00032494 <AmiBlitz3.ab2@13832>   MOVE.w stackpar,D1
00032498 <AmiBlitz3.ab2@13833>    BPL.w maineval__skip
0003249C <AmiBlitz3.ab2@13834>    CMP.b #7,d2
000324A0 <AmiBlitz3.ab2@13835>    BEQ maineval__notst2_l1
000324A6 <AmiBlitz3.ab2@13836>   TST.b funcparloop
000324AA <AmiBlitz3.ab2@13837>   BEQ maineval__notst2_l1
000324AE <AmiBlitz3.ab2@13838>   CMP.b #5,d2
000324B2 <AmiBlitz3.ab2@13839>   BNE maineval__notst2_skip
000324B8 <AmiBlitz3.ab2@13840>   TST.b fpu
000324BC <AmiBlitz3.ab2@13841>   BEQ maineval__notst2_skip
000324C2 <AmiBlitz3.ab2@13842>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
000324C8 <AmiBlitz3.ab2@13843>   JSR writelong
000324CC <AmiBlitz3.ab2@13846>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000324D2 <AmiBlitz3.ab2@13847>   ADD.w parnum,d1
000324D8 <AmiBlitz3.ab2@13848>   JSR Atokejsr
000324DE <AmiBlitz3.ab2@13849>    TST.w dontwrite
000324E2 <AmiBlitz3.ab2@13850>    BNE maineval__notst2_l1
000324E8 <AmiBlitz3.ab2@13851>    MOVE.l data1start,d1
000324EE <AmiBlitz3.ab2@13852>    MOVE.l destpointer,a4
000324F2 <AmiBlitz3.ab2@13853>    ADD.l d1,-4(a4)
000324F8 <AmiBlitz3.ab2@13854>    MOVE.l destpointer,d1
000324FA <AmiBlitz3.ab2@13855>    SUBQ.l #4,d1
00032500 <AmiBlitz3.ab2@13856>    SUB.l destbufferstart,d1
00032502 <AmiBlitz3.ab2@13857>    MOVE.l d2,-(a7)
00032504 <AmiBlitz3.ab2@13858>    MOVE.l d1,d2
0003250A <AmiBlitz3.ab2@13859>    JSR addhunkoffset
0003250C <AmiBlitz3.ab2@13860>    MOVE.l (a7)+,d2
00032510 <AmiBlitz3.ab2@13861> BRA maineval__skip
00032516 <AmiBlitz3.ab2@13864>   ADDQ.w #2,a2offset
0003251C <AmiBlitz3.ab2@13865>   MOVE.w pushd0wd,D1
00032520 <AmiBlitz3.ab2@13866>   CMP.w #$3,D2                                             ;write parameter to stack
00032524 <AmiBlitz3.ab2@13867>    BCS.w maineval__ok
0003252A <AmiBlitz3.ab2@13868>   ADDQ.w #2,a2offset
00032530 <AmiBlitz3.ab2@13869>   TST.b fpu
00032534 <AmiBlitz3.ab2@13870>   BEQ maineval__notst2_nofpu
00032538 <AmiBlitz3.ab2@13871>   CMP.w #5,d2
0003253C <AmiBlitz3.ab2@13872>   BNE maineval__notst2_nofpu
0003253E <AmiBlitz3.ab2@13873>   MOVEQ #0,d1
00032544 <AmiBlitz3.ab2@13874>   MOVE.w regnum,d1
00032546 <AmiBlitz3.ab2@13875>   ASL.l #7,d1
0003254C <AmiBlitz3.ab2@13876>   OR.l #$f2276400,d1
00032550 <AmiBlitz3.ab2@13877>   BSR writelong
00032554 <AmiBlitz3.ab2@13878> BRA maineval__skip
0003255A <AmiBlitz3.ab2@13881>   MOVE.w pushd0l,D1
00032560 <AmiBlitz3.ab2@13884>    OR.w regnum,D1
00032564 <AmiBlitz3.ab2@13885>    BSR.w writeword                                         ;nat
0003256A <AmiBlitz3.ab2@13888>   MOVE.w (A7)+,stackpar
00032570 <AmiBlitz3.ab2@13889>   MOVE.w (A7)+,thisstuse
00032572 <AmiBlitz3.ab2@13890> RTS
00032574 <AmiBlitz3.ab2@13893> thisstuse: Ds.w 1
00032576 <AmiBlitz3.ab2@13896> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
00032578 <AmiBlitz3.ab2@13897> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0003257C <AmiBlitz3.ab2@13902>   BSR.w eval4
00032586 <AmiBlitz3.ab2@13903>   SUBI.l #$12,forthsp
00032588 <AmiBlitz3.ab2@13904> RTS
0003258A <AmiBlitz3.ab2@13908>   MOVEQ.l #$01,D1
0003258E <AmiBlitz3.ab2@13910>       MOVEA.l precsp(PC),A1
00032590 <AmiBlitz3.ab2@13911>       MOVE.l A0,(A1)+
00032592 <AmiBlitz3.ab2@13912>       MOVE.w D1,(A1)+
00032598 <AmiBlitz3.ab2@13913>       MOVE.l A1,precsp
0003259C <AmiBlitz3.ab2@13914>    BSR.w calcloop
0003259E <AmiBlitz3.ab2@13915>   TST.w D1
000325A2 <AmiBlitz3.ab2@13916>    BNE.w syntaxerr
000325A8 <AmiBlitz3.ab2@13917>   SUBQ.l #6,precsp                                      ;pop the prec set up
000325AA <AmiBlitz3.ab2@13918> RTS
000325AE <AmiBlitz3.ab2@13923>   BSR.w JL_0_9C24
000325B2 <AmiBlitz3.ab2@13926>   MOVEA.l precsp(PC),A1
000325B4 <AmiBlitz3.ab2@13927>   CMP.w -(A1),D1
000325B8 <AmiBlitz3.ab2@13928>    BHI.w JL_0_9B0A
000325BA <AmiBlitz3.ab2@13929> RTS
000325BE <AmiBlitz3.ab2@13934>   MOVEA.l precsp(PC),A1
000325C0 <AmiBlitz3.ab2@13935>   MOVE.l A0,(A1)+
000325C2 <AmiBlitz3.ab2@13936>   MOVE.w D1,(A1)+
000325C8 <AmiBlitz3.ab2@13937>   MOVE.l A1,precsp
000325CA <AmiBlitz3.ab2@13938>   MOVE.w D2,-(A7)
000325D0 <AmiBlitz3.ab2@13939>   ADDQ.w #1,regnum
000325D4 <AmiBlitz3.ab2@13940>    BSR.w calcloop               ;constant optimizer
000325DA <AmiBlitz3.ab2@13941>   SUBQ.w #1,regnum
000325DC <AmiBlitz3.ab2@13942>   MOVE.w (A7)+,D3
000325E0 <AmiBlitz3.ab2@13943>   MOVEM.l D1/A0,-(A7)
000325E4 <AmiBlitz3.ab2@13944>    BEQ.w JL_0_9B2E
000325E8 <AmiBlitz3.ab2@13945>    BSR.w JL_0_9770
000325EC <AmiBlitz3.ab2@13948>   BSR.w popprec
000325F0 <AmiBlitz3.ab2@13949>   BSR.w writecode
000325F4 <AmiBlitz3.ab2@13950>   MOVEA.l forthsp(PC),A0
000325F8 <AmiBlitz3.ab2@13951>   MOVE.w -$2(A0),D1
000325FC <AmiBlitz3.ab2@13952>   OR.w -$14(A0),D1
00032600 <AmiBlitz3.ab2@13953>   MOVE.w D1,-$14(A0)
00032604 <AmiBlitz3.ab2@13954>    BNE.w JL_0_9C0E
0003260A <AmiBlitz3.ab2@13955>   MOVE.w dontwrite,D1
0003260E <AmiBlitz3.ab2@13956>    BNE.w JL_0_9C0E
00032612 <AmiBlitz3.ab2@13957>    MOVEA.l -$24(A0),A0
0003274E <AmiBlitz3.ab2@13959>  !newcalc
00032752 <AmiBlitz3.ab2@13960>    BEQ 'l10
00032756 <AmiBlitz3.ab2@13961>    MOVEA.l forthsp(PC),A0
0003275E <AmiBlitz3.ab2@13962>    MOVE.w -$18(A0),lasta6
00032766 <AmiBlitz3.ab2@13963>    MOVE.l -$1C(A0),lasta6
0003276A <AmiBlitz3.ab2@13964>    MOVEA.l -$24(A0),A0
00032770 <AmiBlitz3.ab2@13965>    MOVE.l A0,destpointer
00032776 <AmiBlitz3.ab2@13966>    MOVEA.l _mathffpbase,A6
0003277C <AmiBlitz3.ab2@13967>    MOVEA.l ffplib,A1
00032780 <AmiBlitz3.ab2@13968> BRA cont1
00032784 <AmiBlitz3.ab2@13971>   MOVE.w #$2000,D1
0003278A <AmiBlitz3.ab2@13972>   OR.w regnum,D1
0003278E <AmiBlitz3.ab2@13973>    BSR.w writeword
00032790 <AmiBlitz3.ab2@13974>     MOVEQ #0,d1
00032796 <AmiBlitz3.ab2@13975>     MOVE.w regnum,D1
00032798 <AmiBlitz3.ab2@13976>     ASL.l #8,d1
0003279A <AmiBlitz3.ab2@13977>     ASL.l #2,d1
000327A0 <AmiBlitz3.ab2@13978>     OR.l #$f2000000,d1
000327A4 <AmiBlitz3.ab2@13979>     BSR writelong
000327A8 <AmiBlitz3.ab2@13980>   MOVE.w #$4E75,D1
000327AC <AmiBlitz3.ab2@13981>    BSR.w writeword
000327B4 <AmiBlitz3.ab2@13982>   MOVE.w -$18(A0),lasta6
000327BC <AmiBlitz3.ab2@13983>   MOVE.l -$1C(A0),lasta6
000327C0 <AmiBlitz3.ab2@13984>   MOVEA.l -$24(A0),A0
000327C6 <AmiBlitz3.ab2@13985>   MOVE.l A0,destpointer
000327CA <AmiBlitz3.ab2@13986>   MOVEM.l D2/A5,-(A7)
000327D0 <AmiBlitz3.ab2@13987>   MOVEA.l _mathffpbase,A6
000327D6 <AmiBlitz3.ab2@13988>   MOVEA.l ffplib,A1
000327DA <AmiBlitz3.ab2@13989>   MOVE.w $A(A1),D0
000327E0 <AmiBlitz3.ab2@13990>   LEA _mathffpbase,A5
000327E2 <AmiBlitz3.ab2@13991>   SUBA.w D0,A5
000327E8 <AmiBlitz3.ab2@13992>   JSR Aclearcache                                          ;neg +
000327EE <AmiBlitz3.ab2@13993>   CLR.l load_var_addr
000327F4 <AmiBlitz3.ab2@13994>   CLR.l imm_addr
000327FA <AmiBlitz3.ab2@13995>   TST.w dontwrite
000327FE <AmiBlitz3.ab2@13996>   BNE '1
00032800 <AmiBlitz3.ab2@13997>   JSR (A0)                                                 ;calc constant inline expression
00032804 <AmiBlitz3.ab2@14000>   MOVEM.l (A7)+,D2/A5
0003280A <AmiBlitz3.ab2@14003>   MOVE.b d2,isconstantvalue
00032810 <AmiBlitz3.ab2@14004>   MOVE.l d0,lastconstantvalue
00032816 <AmiBlitz3.ab2@14005>   MOVE.w regnum,D1
00032818 <AmiBlitz3.ab2@14006>   LSL.w #8,D1
0003281A <AmiBlitz3.ab2@14007>   LSL.w #1,D1
0003281E <AmiBlitz3.ab2@14008>   ORI.w #$203C,D1
00032822 <AmiBlitz3.ab2@14009>   CMP.w #$3,D2
00032826 <AmiBlitz3.ab2@14010>    BCC.w JL_0_9BCE
0003282A <AmiBlitz3.ab2@14011>   ORI.w #$1000,D1
0003282E <AmiBlitz3.ab2@14012>    BSR.w writeword
00032830 <AmiBlitz3.ab2@14013>   MOVE.w D0,D1
00032834 <AmiBlitz3.ab2@14014>    BSR.w writeword
00032838 <AmiBlitz3.ab2@14015> BRA.w JL_0_9BD8
0003283E <AmiBlitz3.ab2@14019>   TST.b iee                                                ;fpu constant
00032842 <AmiBlitz3.ab2@14020>   BEQ 'l10
00032846 <AmiBlitz3.ab2@14021>   CMP.b #5,d2
0003284A <AmiBlitz3.ab2@14022>   BNE 'l10
0003284C <AmiBlitz3.ab2@14023>   MOVEQ #0,d1
00032852 <AmiBlitz3.ab2@14024>   MOVE.w regnum,D1
00032854 <AmiBlitz3.ab2@14025>   ASL.l #7,d1
0003285A <AmiBlitz3.ab2@14026>   OR.l #$f23c5400,d1
0003285E <AmiBlitz3.ab2@14027>   BSR writelong
00032860 <AmiBlitz3.ab2@14028>   SUBQ.l #8,a7
00032866 <AmiBlitz3.ab2@14029>   fmove.d fp0,0(a7)
00032868 <AmiBlitz3.ab2@14030>   MOVE.l (a7)+,d1
0003286C <AmiBlitz3.ab2@14031>   BSR writelong
0003286E <AmiBlitz3.ab2@14032>   MOVE.l (a7)+,d1
00032872 <AmiBlitz3.ab2@14033>   BSR writelong
00032876 <AmiBlitz3.ab2@14034> BRA JL_0_9BD8
0003287A <AmiBlitz3.ab2@14037>   BSR.w writeword
0003287C <AmiBlitz3.ab2@14038>   MOVE.l D0,D1
00032880 <AmiBlitz3.ab2@14039>   BSR.w writelong
00032884 <AmiBlitz3.ab2@14042>   MOVEA.l forthsp(PC),A0
00032888 <AmiBlitz3.ab2@14043>   MOVEA.l -$20(A0),A3
0003288E <AmiBlitz3.ab2@14044>   MOVEA.l hunkoffsetbase,A2
00032894 <AmiBlitz3.ab2@14045>   MOVE.l A3,hunkoffsetbase
0003289A <AmiBlitz3.ab2@14046>   MOVEA.l _execbase,A6
0003289C <AmiBlitz3.ab2@14049>   CMPA.l A3,A2
000328A0 <AmiBlitz3.ab2@14050>   BEQ.w JL_0_9C0A
000328A6 <AmiBlitz3.ab2@14051>   SUBQ.l #1,hunkoffsetcounter
000328A8 <AmiBlitz3.ab2@14052>   MOVEA.l A2,A1
000328AA <AmiBlitz3.ab2@14053>   MOVEA.l (A2),A2
000328AC <AmiBlitz3.ab2@14054>   MOVEQ.l #$8,D0
000328B2 <AmiBlitz3.ab2@14055>   MOVE.l mempool2,a0
000328B6 <AmiBlitz3.ab2@14056>    JSR _FreePooled(A6)
000328BA <AmiBlitz3.ab2@14057> BRA.w JL_0_9BF0
000328BE <AmiBlitz3.ab2@14061>   MOVEA.l forthsp(PC),A0
000328C2 <AmiBlitz3.ab2@14064>   LEA -$12(A0),A0
000328C8 <AmiBlitz3.ab2@14065>   MOVE.l A0,forthsp
000328CC <AmiBlitz3.ab2@14066>   MOVEM.l (A7)+,D1/A0
000328D0 <AmiBlitz3.ab2@14067>   BSR.w reget
000328D4 <AmiBlitz3.ab2@14068> BRA.w JL_0_9AFE
000328D8 <AmiBlitz3.ab2@14072>   BSR.w JL_0_A386
000328DA <AmiBlitz3.ab2@14073>   TST.w d0
000328DE <AmiBlitz3.ab2@14074>   BEQ JL_0_9C42
000328E2 <AmiBlitz3.ab2@14075>   CMP.b #",",d0
000328E6 <AmiBlitz3.ab2@14076>   BEQ JL_0_9C42
000328EA <AmiBlitz3.ab2@14077>   CMP.b #"@",d0                                            ;expandline @@
000328EE <AmiBlitz3.ab2@14078>   BEQ JL_0_9C42
000328F4 <AmiBlitz3.ab2@14079>   LEA operators,A0
000328F6 <AmiBlitz3.ab2@14082>    TST.w (A0)
000328FA <AmiBlitz3.ab2@14083>    BEQ.w JL_0_9C42
000328FC <AmiBlitz3.ab2@14084>   CMP.w (A0),D0
00032900 <AmiBlitz3.ab2@14085>    BEQ.w JL_0_9C46a
00032904 <AmiBlitz3.ab2@14086>   LEA $20(A0),A0
00032908 <AmiBlitz3.ab2@14087> BRA.w JL_0_9C2E
0003290A <AmiBlitz3.ab2@14091>   MOVEQ.l #$00,D1
0003290C <AmiBlitz3.ab2@14092> RTS
00032910 <AmiBlitz3.ab2@14096>   CMP.w #$3C,D0
00032914 <AmiBlitz3.ab2@14097>    BNE.w JL_0_9C70
00032918 <AmiBlitz3.ab2@14098>    BSR.w get1bytemain
0003291C <AmiBlitz3.ab2@14099>   CMP.w #$3D,D0
00032920 <AmiBlitz3.ab2@14100>    BNE.w JL_0_9C64
00032926 <AmiBlitz3.ab2@14101>   LEA ople,A0
0003292A <AmiBlitz3.ab2@14102> BRA.w JL_0_9CCA
0003292E <AmiBlitz3.ab2@14106>   CMP.w #$3E,D0
00032932 <AmiBlitz3.ab2@14107>    BNE.w JL_0_9C96
00032936 <AmiBlitz3.ab2@14108> BRA.w JL_0_9CC4
0003293A <AmiBlitz3.ab2@14112>   CMP.w #$3E,D0
0003293E <AmiBlitz3.ab2@14113>    BNE.w JL_0_9C9E
00032942 <AmiBlitz3.ab2@14114>    BSR.w get1bytemain
00032946 <AmiBlitz3.ab2@14115>   CMP.w #$3D,D0
0003294A <AmiBlitz3.ab2@14116>    BNE.w JL_0_9C8E
00032950 <AmiBlitz3.ab2@14117>   LEA opge,A0
00032954 <AmiBlitz3.ab2@14118> BRA.w JL_0_9CCA
00032958 <AmiBlitz3.ab2@14122>   CMP.w #$3C,D0
0003295C <AmiBlitz3.ab2@14123>    BEQ.w JL_0_9CC4
00032966 <AmiBlitz3.ab2@14127>     MOVE.w oldqflag,instringon
0003296C <AmiBlitz3.ab2@14128>     MOVEA.l lastsourcepos,A5
00032970 <AmiBlitz3.ab2@14129> BRA.w JL_0_9CCA
00032974 <AmiBlitz3.ab2@14133>   CMP.w #$3D,D0
00032978 <AmiBlitz3.ab2@14134>    BNE.w JL_0_9CCA
0003297C <AmiBlitz3.ab2@14135>    BSR.w get1bytemain
00032980 <AmiBlitz3.ab2@14136>   CMP.w #$3E,D0
00032984 <AmiBlitz3.ab2@14137>    BNE.w JL_0_9CBC
0003298A <AmiBlitz3.ab2@14138>   LEA opge,A0
0003298E <AmiBlitz3.ab2@14139> BRA.w JL_0_9CCA
00032992 <AmiBlitz3.ab2@14143>   CMP.w #$3C,D0
00032996 <AmiBlitz3.ab2@14144>   BNE.w JL_0_9C96
0003299C <AmiBlitz3.ab2@14147>   LEA opne,A0
000329A0 <AmiBlitz3.ab2@14150>   MOVE.w $1E(A0),D1
000329A2 <AmiBlitz3.ab2@14151> RTS
000329A4 <AmiBlitz3.ab2@14158>   MOVE.w d2,d1
000329A6 <AmiBlitz3.ab2@14159>   SUBQ.w #1,D1
000329AA <AmiBlitz3.ab2@14160>    BMI.w illoperr
000329AC <AmiBlitz3.ab2@14161>   LSL.w #2,D1
000329B0 <AmiBlitz3.ab2@14162>   MOVE.l $2(A0,D1.W),D1
000329B4 <AmiBlitz3.ab2@14163>    BEQ.w illoperr
000329B6 <AmiBlitz3.ab2@14164>   MOVEA.l D1,A0
000329B8 <AmiBlitz3.ab2@14167> JMP (A0)
000329BC <AmiBlitz3.ab2@14183>   MOVEA.l precsp(PC),A1
000329C2 <AmiBlitz3.ab2@14184>   CMPA.l #precstackf,A1
000329C6 <AmiBlitz3.ab2@14185>    BCC.w pserr
000329C8 <AmiBlitz3.ab2@14186>   MOVE.w -(A1),D1
000329CA <AmiBlitz3.ab2@14187>   MOVEA.l -(A1),A0
000329D0 <AmiBlitz3.ab2@14188>   MOVE.l A1,precsp
000329D2 <AmiBlitz3.ab2@14189> RTS
000329D6 <AmiBlitz3.ab2@14192> precsp:      Dc.l precstack
00032AD2 <AmiBlitz3.ab2@14193> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
00032B56 <AmiBlitz3.ab2@14194>              Ds.l 33
00032B58 <AmiBlitz3.ab2@14200> mseq:  SEQ D0
00032B5A <AmiBlitz3.ab2@14201> msne:    SNE D0
00032B5C <AmiBlitz3.ab2@14202> mslt:    SLT D0
00032B5E <AmiBlitz3.ab2@14203> msle:    SLE D0
00032B60 <AmiBlitz3.ab2@14204> msgt:    SGT D0
00032B62 <AmiBlitz3.ab2@14205> msge:    SGE D0
00032B64 <AmiBlitz3.ab2@14207> cmp0:    CMP.b D0,D0
00032B66 <AmiBlitz3.ab2@14208> cmp1:    CMP.w D0,D0
00032B68 <AmiBlitz3.ab2@14209> cmp2:    CMP.l D0,D0
00032B6C <AmiBlitz3.ab2@14213>   MOVE.w cmp0(PC),D1
00032B70 <AmiBlitz3.ab2@14214> BRA.w doeqcmp2                                            ;writecompare
00032B74 <AmiBlitz3.ab2@14218>   MOVE.w cmp0(PC),D1
00032B78 <AmiBlitz3.ab2@14219> BRA.w donecmp2
00032B7C <AmiBlitz3.ab2@14223>   MOVE.w cmp0(PC),D1
00032B80 <AmiBlitz3.ab2@14224> BRA.w doltcmp2
00032B84 <AmiBlitz3.ab2@14228>   MOVE.w cmp0(PC),D1
00032B88 <AmiBlitz3.ab2@14229> BRA.w dolecmp2
00032B8C <AmiBlitz3.ab2@14233>   MOVE.w cmp0(PC),D1
00032B90 <AmiBlitz3.ab2@14234> BRA.w dogtcmp2
00032B94 <AmiBlitz3.ab2@14239>   MOVE.w cmp0(PC),D1
00032B98 <AmiBlitz3.ab2@14240> BRA.w dogecmp2
00032B9C <AmiBlitz3.ab2@14244>   MOVE.w cmp1(PC),D1
00032BA0 <AmiBlitz3.ab2@14245> BRA.w doeqcmp2
00032BA4 <AmiBlitz3.ab2@14249>   MOVE.w cmp1(PC),D1
00032BA8 <AmiBlitz3.ab2@14250> BRA.w donecmp2
00032BAC <AmiBlitz3.ab2@14254>   MOVE.w cmp1(PC),D1
00032BB0 <AmiBlitz3.ab2@14255> BRA.w doltcmp2
00032BB4 <AmiBlitz3.ab2@14259>   MOVE.w cmp1(PC),D1
00032BB8 <AmiBlitz3.ab2@14260> BRA.w dolecmp2
00032BBC <AmiBlitz3.ab2@14264>   MOVE.w cmp1(PC),D1
00032BC0 <AmiBlitz3.ab2@14265> BRA.w dogtcmp2
00032BC4 <AmiBlitz3.ab2@14270>   MOVE.w cmp1(PC),D1
00032BC8 <AmiBlitz3.ab2@14271> BRA.w dogecmp2
00032BCC <AmiBlitz3.ab2@14275>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
00032BD0 <AmiBlitz3.ab2@14276> BRA doeqcmp2
00032BD4 <AmiBlitz3.ab2@14279>   MOVE.w cmp2(PC),D1
00032BD8 <AmiBlitz3.ab2@14280> BRA donecmp2
00032BDC <AmiBlitz3.ab2@14284>   MOVE.w cmp2(PC),D1
00032BE0 <AmiBlitz3.ab2@14285> BRA.w doltcmp2
00032BE4 <AmiBlitz3.ab2@14289>   MOVE.w cmp2(PC),D1
00032BE8 <AmiBlitz3.ab2@14290> BRA.w dolecmp2
00032BEC <AmiBlitz3.ab2@14294>   MOVE.w cmp2(PC),D1
00032BF0 <AmiBlitz3.ab2@14295> BRA.w dogtcmp2
00032BF4 <AmiBlitz3.ab2@14299>   MOVE.w cmp2(PC),D1
00032BF8 <AmiBlitz3.ab2@14300> BRA.w dogecmp2
00032BFA <AmiBlitz3.ab2@14303> cfregat:  Ds.w 1
00032C00 <AmiBlitz3.ab2@14307>   MOVE.w D1,libjsr+2
00032C04 <AmiBlitz3.ab2@14308>    BSR.w JL_0_AD40
00032C06 <AmiBlitz3.ab2@14309>   MOVE.l D4,D1
00032C0A <AmiBlitz3.ab2@14310>    BSR.w JL_0_AD38
00032C0E <AmiBlitz3.ab2@14311>   MOVE.w #$C900,D1
00032C12 <AmiBlitz3.ab2@14312>    BSR.w Atokejsr
00032C16 <AmiBlitz3.ab2@14313>    BSR.w JL_0_A352
00032C1C <AmiBlitz3.ab2@14314>   MOVE.l libjsr,D1
00032C20 <AmiBlitz3.ab2@14315>    BSR.w writelong
00032C2A <AmiBlitz3.ab2@14316>   MOVE.w regnum,cfregat
00032C30 <AmiBlitz3.ab2@14317>   CLR.w regnum
00032C32 <AmiBlitz3.ab2@14318> RTS
00032C3C <AmiBlitz3.ab2@14322>   MOVE.w cfregat,regnum
00032C40 <AmiBlitz3.ab2@14323>    BSR.w JL_0_A36E
00032C42 <AmiBlitz3.ab2@14324>   MOVE.l D5,D1
00032C46 <AmiBlitz3.ab2@14325> BRA.w JL_0_AD38
00032C48 <AmiBlitz3.ab2@14329>    MOVEQ.l #-$2A,D1
00032C4E <AmiBlitz3.ab2@14330>    TST.b fpu
00032C52 <AmiBlitz3.ab2@14331>    BEQ do_equal_float__nofpu
00032C54 <AmiBlitz3.ab2@14332>    MOVEQ #0,d1
00032C5A <AmiBlitz3.ab2@14333>    MOVE.w regnum,d1
00032C5C <AmiBlitz3.ab2@14334>    MOVE.l d1,d2
00032C5E <AmiBlitz3.ab2@14335>    ASL.l #7,d1
00032C60 <AmiBlitz3.ab2@14336>    ADDQ  #1,d2
00032C62 <AmiBlitz3.ab2@14337>    ASL.l #8,d2
00032C64 <AmiBlitz3.ab2@14338>    ASL.l #2,d2
00032C66 <AmiBlitz3.ab2@14339>    OR.l d2,d1
00032C6C <AmiBlitz3.ab2@14340>    OR.l #$f2000038,d1
00032C72 <AmiBlitz3.ab2@14341>    JSR writelong
00032C76 <AmiBlitz3.ab2@14342>    MOVE.w #$f240,d1
00032C7C <AmiBlitz3.ab2@14343>    OR.w regnum,d1
00032C80 <AmiBlitz3.ab2@14344>    BSR writeword
00032C82 <AmiBlitz3.ab2@14345>    MOVEQ.l #1,d2
00032C86 <AmiBlitz3.ab2@14346>    MOVE.w #1,d1                                            ;fpu comp fseq
00032C8A <AmiBlitz3.ab2@14347>    BSR writeword
00032C8C <AmiBlitz3.ab2@14348> RTS
00032C90 <AmiBlitz3.ab2@14351>    BSR.w docflib
00032C94 <AmiBlitz3.ab2@14352>    BSR.w doeqcmp
00032C98 <AmiBlitz3.ab2@14353> BRA.w docflib2
00032C9A <AmiBlitz3.ab2@14357>   MOVEQ.l #-$2A,D1
00032CA0 <AmiBlitz3.ab2@14358>   TST.b fpu
00032CA4 <AmiBlitz3.ab2@14359>    BEQ do_not_equal_float__nofpu
00032CA6 <AmiBlitz3.ab2@14360>    MOVEQ #0,d1
00032CAC <AmiBlitz3.ab2@14361>    MOVE.w regnum,d1
00032CAE <AmiBlitz3.ab2@14362>    MOVE.l d1,d2
00032CB0 <AmiBlitz3.ab2@14363>    ASL.l #7,d1
00032CB2 <AmiBlitz3.ab2@14364>    ADDQ  #1,d2
00032CB4 <AmiBlitz3.ab2@14365>    ASL.l #8,d2
00032CB6 <AmiBlitz3.ab2@14366>    ASL.l #2,d2
00032CB8 <AmiBlitz3.ab2@14367>    OR.l d2,d1
00032CBE <AmiBlitz3.ab2@14368>    OR.l #$f2000038,d1
00032CC4 <AmiBlitz3.ab2@14369>    JSR writelong
00032CC8 <AmiBlitz3.ab2@14370>    MOVE.w #$f240,d1
00032CCE <AmiBlitz3.ab2@14371>    OR.w regnum,d1
00032CD2 <AmiBlitz3.ab2@14372>    BSR writeword
00032CD8 <AmiBlitz3.ab2@14373>    MOVE.l #1,d2
00032CDC <AmiBlitz3.ab2@14374>    MOVE.w #$e,d1                                           ;fpu comp fsne
00032CE0 <AmiBlitz3.ab2@14375>    BSR writeword
00032CE2 <AmiBlitz3.ab2@14376> RTS
00032CE6 <AmiBlitz3.ab2@14379>    BSR.w docflib
00032CEA <AmiBlitz3.ab2@14380>    BSR.w donecmp
00032CEE <AmiBlitz3.ab2@14381> BRA.w docflib2
00032CF0 <AmiBlitz3.ab2@14385>   MOVEQ.l #-$2A,D1
00032CF6 <AmiBlitz3.ab2@14386>     TST.b fpu
00032CFA <AmiBlitz3.ab2@14387>    BEQ do_littler_float__nofpu
00032CFC <AmiBlitz3.ab2@14388>    MOVEQ #0,d1
00032D02 <AmiBlitz3.ab2@14389>    MOVE.w regnum,d1
00032D04 <AmiBlitz3.ab2@14390>    MOVE.l d1,d2
00032D06 <AmiBlitz3.ab2@14391>    ASL.l #7,d1
00032D08 <AmiBlitz3.ab2@14392>    ADDQ  #1,d2
00032D0A <AmiBlitz3.ab2@14393>    ASL.l #8,d2
00032D0C <AmiBlitz3.ab2@14394>    ASL.l #2,d2
00032D0E <AmiBlitz3.ab2@14395>    OR.l d2,d1
00032D14 <AmiBlitz3.ab2@14396>    OR.l #$f2000038,d1
00032D1A <AmiBlitz3.ab2@14397>    JSR writelong
00032D1E <AmiBlitz3.ab2@14398>    MOVE.w #$f240,d1
00032D24 <AmiBlitz3.ab2@14399>    OR.w regnum,d1
00032D28 <AmiBlitz3.ab2@14400>    BSR writeword
00032D2E <AmiBlitz3.ab2@14401>    MOVE.l #$1,d2
00032D32 <AmiBlitz3.ab2@14402>    MOVE.w #$14,d1                                          ;fpu comp fslt
00032D36 <AmiBlitz3.ab2@14403>    BSR writeword
00032D38 <AmiBlitz3.ab2@14404> RTS
00032D3C <AmiBlitz3.ab2@14407>    BSR.w docflib
00032D40 <AmiBlitz3.ab2@14408>    BSR.w doltcmp
00032D44 <AmiBlitz3.ab2@14409> BRA.w docflib2
00032D46 <AmiBlitz3.ab2@14413>   MOVEQ.l #-$2A,D1
00032D4C <AmiBlitz3.ab2@14414>   TST.b fpu
00032D50 <AmiBlitz3.ab2@14415>    BEQ do_littler_equal_float__nofpu
00032D52 <AmiBlitz3.ab2@14416>    MOVEQ #0,d1
00032D58 <AmiBlitz3.ab2@14417>    MOVE.w regnum,d1
00032D5A <AmiBlitz3.ab2@14418>    MOVE.l d1,d2
00032D5C <AmiBlitz3.ab2@14419>    ASL.l #7,d1
00032D5E <AmiBlitz3.ab2@14420>    ADDQ  #1,d2
00032D60 <AmiBlitz3.ab2@14421>    ASL.l #8,d2
00032D62 <AmiBlitz3.ab2@14422>    ASL.l #2,d2
00032D64 <AmiBlitz3.ab2@14423>    OR.l d2,d1
00032D6A <AmiBlitz3.ab2@14424>    OR.l #$f2000038,d1
00032D70 <AmiBlitz3.ab2@14425>    JSR writelong
00032D74 <AmiBlitz3.ab2@14426>    MOVE.w #$f240,d1
00032D7A <AmiBlitz3.ab2@14427>    OR.w regnum,d1
00032D7E <AmiBlitz3.ab2@14428>    BSR writeword
00032D84 <AmiBlitz3.ab2@14429>    MOVE.l #1,d2
00032D88 <AmiBlitz3.ab2@14430>    MOVE.w #$15,d1                                          ;fpu comp fsle
00032D8C <AmiBlitz3.ab2@14431>    BSR writeword
00032D8E <AmiBlitz3.ab2@14432> RTS
00032D92 <AmiBlitz3.ab2@14435>    BSR.w docflib
00032D96 <AmiBlitz3.ab2@14436>    BSR.w dolecmp
00032D9A <AmiBlitz3.ab2@14437> BRA.w docflib2
00032D9C <AmiBlitz3.ab2@14441>   MOVEQ.l #-$2A,D1
00032DA2 <AmiBlitz3.ab2@14442>    TST.b fpu
00032DA6 <AmiBlitz3.ab2@14443>    BEQ do_greater_float__nofpu
00032DA8 <AmiBlitz3.ab2@14444>     MOVEQ #0,d1
00032DAE <AmiBlitz3.ab2@14445>    MOVE.w regnum,d1
00032DB0 <AmiBlitz3.ab2@14446>    MOVE.l d1,d2
00032DB2 <AmiBlitz3.ab2@14447>    ASL.l #7,d1
00032DB4 <AmiBlitz3.ab2@14448>    ADDQ  #1,d2
00032DB6 <AmiBlitz3.ab2@14449>    ASL.l #8,d2
00032DB8 <AmiBlitz3.ab2@14450>    ASL.l #2,d2
00032DBA <AmiBlitz3.ab2@14451>    OR.l d2,d1
00032DC0 <AmiBlitz3.ab2@14452>    OR.l #$f2000038,d1
00032DC6 <AmiBlitz3.ab2@14453>    JSR writelong
00032DCA <AmiBlitz3.ab2@14454>    MOVE.w #$f240,d1
00032DD0 <AmiBlitz3.ab2@14455>    OR.w regnum,d1
00032DD4 <AmiBlitz3.ab2@14456>    BSR writeword
00032DDA <AmiBlitz3.ab2@14457>    MOVE.l #1,d2
00032DDE <AmiBlitz3.ab2@14458>    MOVE.w #$12,d1                                          ;fpu comp fsgt
00032DE2 <AmiBlitz3.ab2@14459>    BSR writeword
00032DE4 <AmiBlitz3.ab2@14460> RTS
00032DE8 <AmiBlitz3.ab2@14463>    BSR.w docflib
00032DEC <AmiBlitz3.ab2@14464>    BSR.w dogtcmp
00032DF0 <AmiBlitz3.ab2@14465> BRA.w docflib2
00032DF2 <AmiBlitz3.ab2@14469>   MOVEQ.l #-$2A,D1
00032DF8 <AmiBlitz3.ab2@14470>  TST.b fpu
00032DFC <AmiBlitz3.ab2@14471>    BEQ do_greater_equal_float__nofpu
00032DFE <AmiBlitz3.ab2@14472>    MOVEQ #0,d1
00032E04 <AmiBlitz3.ab2@14473>    MOVE.w regnum,d1
00032E06 <AmiBlitz3.ab2@14474>    MOVE.l d1,d2
00032E08 <AmiBlitz3.ab2@14475>    ASL.l #7,d1
00032E0A <AmiBlitz3.ab2@14476>    ADDQ  #1,d2
00032E0C <AmiBlitz3.ab2@14477>    ASL.l #8,d2
00032E0E <AmiBlitz3.ab2@14478>    ASL.l #2,d2
00032E10 <AmiBlitz3.ab2@14479>    OR.l d2,d1
00032E16 <AmiBlitz3.ab2@14480>    OR.l #$f2000038,d1
00032E1C <AmiBlitz3.ab2@14481>    JSR writelong
00032E20 <AmiBlitz3.ab2@14482>    MOVE.w #$f240,d1
00032E26 <AmiBlitz3.ab2@14483>    OR.w regnum,d1
00032E2A <AmiBlitz3.ab2@14484>    BSR writeword
00032E30 <AmiBlitz3.ab2@14485>    MOVE.l #1,d2
00032E34 <AmiBlitz3.ab2@14486>    MOVE.w #$13,d1                                          ;fpu comp fsge
00032E38 <AmiBlitz3.ab2@14487>    BSR writeword
00032E3A <AmiBlitz3.ab2@14488> RTS
00032E3E <AmiBlitz3.ab2@14491>    BSR.w docflib
00032E42 <AmiBlitz3.ab2@14492>    BSR.w dogecmp
00032E46 <AmiBlitz3.ab2@14493> BRA.w docflib2
00032E4C <AmiBlitz3.ab2@14498>   MOVE.l #$CE00,D1
00032E52 <AmiBlitz3.ab2@14499>    MOVE.l d1,lastinstruction
00032E56 <AmiBlitz3.ab2@14500>    BSR.w Atokejsr
00032E5A <AmiBlitz3.ab2@14501> BRA.w doeqcmp
00032E60 <AmiBlitz3.ab2@14505>   MOVE.l #$CE00,D1
00032E66 <AmiBlitz3.ab2@14506>    MOVE.l d1,lastinstruction
00032E6A <AmiBlitz3.ab2@14507>    BSR.w Atokejsr
00032E6E <AmiBlitz3.ab2@14508> BRA.w donecmp
00032E74 <AmiBlitz3.ab2@14512>   MOVE.l #$CE00,D1
00032E7A <AmiBlitz3.ab2@14513>    MOVE.l d1,lastinstruction
00032E7E <AmiBlitz3.ab2@14514>    BSR.w Atokejsr
00032E82 <AmiBlitz3.ab2@14515> BRA.w doltcmp
00032E88 <AmiBlitz3.ab2@14519>   MOVE.l #$CE00,D1
00032E8E <AmiBlitz3.ab2@14520>    MOVE.l d1,lastinstruction
00032E92 <AmiBlitz3.ab2@14521>    BSR.w Atokejsr
00032E96 <AmiBlitz3.ab2@14522> BRA.w dolecmp
00032E9C <AmiBlitz3.ab2@14526>   MOVE.l #$CE00,D1
00032EA2 <AmiBlitz3.ab2@14527>    MOVE.l d1,lastinstruction
00032EA6 <AmiBlitz3.ab2@14528>    BSR.w Atokejsr
00032EAA <AmiBlitz3.ab2@14529> BRA.w dogtcmp
00032EB0 <AmiBlitz3.ab2@14533>   MOVE.l #$CE00,D1
00032EB6 <AmiBlitz3.ab2@14534>    MOVE.l d1,lastinstruction
00032EBA <AmiBlitz3.ab2@14535>    BSR.w Atokejsr
00032EBE <AmiBlitz3.ab2@14536> BRA.w dogecmp
00032EC4 <AmiBlitz3.ab2@14541>   TST.b fast                                               ;compare
00032EC8 <AmiBlitz3.ab2@14542>   BEQ cmpit__org
00032ECE <AmiBlitz3.ab2@14546>   MOVE.l destpointer,a0
00032ED4 <AmiBlitz3.ab2@14547>   SUB.l imm_addr,a0
00032EDA <AmiBlitz3.ab2@14548>   CMP.l #6,a0
00032EDE <AmiBlitz3.ab2@14549>   BNE cmpit__l11
00032EE4 <AmiBlitz3.ab2@14550>   MOVE.l imm_addr,a0
00032EEC <AmiBlitz3.ab2@14551>   CMP.w #$223c,imm_addr
00032EF0 <AmiBlitz3.ab2@14552>   BNE cmpit__org
00032EF6 <AmiBlitz3.ab2@14553>   ADD.w #$8e80,-6(a4)
00032EFC <AmiBlitz3.ab2@14556>   CLR.l imm_addr
00032EFE <AmiBlitz3.ab2@14557> RTS
00032F04 <AmiBlitz3.ab2@14560>   CMP.l #4,a0
00032F08 <AmiBlitz3.ab2@14561>   BNE cmpit__l10
00032F0C <AmiBlitz3.ab2@14562>   CMP.b #2,d3
00032F10 <AmiBlitz3.ab2@14563>   BNE cmpit__l11b
00032F16 <AmiBlitz3.ab2@14564>   ADD.w #$7e40,-4(a4)
00032F18 <AmiBlitz3.ab2@14565> RTS
00032F1E <AmiBlitz3.ab2@14568>  ADD.w #$7e00,-4(a4)
00032F20 <AmiBlitz3.ab2@14569> RTS
00032F26 <AmiBlitz3.ab2@14572>    MOVE.l destpointer,a0
00032F2C <AmiBlitz3.ab2@14573>    SUB.l load_var_addr,a0
00032F30 <AmiBlitz3.ab2@14574>    CMP.w #4,a0
00032F34 <AmiBlitz3.ab2@14575>    BNE cmpit__org
00032F38 <AmiBlitz3.ab2@14576>    CMP.b #3,d3
00032F3C <AmiBlitz3.ab2@14577>    BCS cmpit__lv1
00032F42 <AmiBlitz3.ab2@14578>    CLR.l load_var_addr
00032F48 <AmiBlitz3.ab2@14579>    ADD.w #$9080-$200,-4(a4)
00032F4A <AmiBlitz3.ab2@14580> RTS
00032F4E <AmiBlitz3.ab2@14583>   CMP.b #2,d3
00032F52 <AmiBlitz3.ab2@14584>    BNE cmpit__org
00032F58 <AmiBlitz3.ab2@14585>    CLR.l load_var_addr
00032F5E <AmiBlitz3.ab2@14586>    ADD.w #$8040-$200,-4(a4)
00032F60 <AmiBlitz3.ab2@14587> RTS
00032F66 <AmiBlitz3.ab2@14590>   MOVE.w regnum,D3
00032F68 <AmiBlitz3.ab2@14591>   OR.w D3,D1
00032F6A <AmiBlitz3.ab2@14592>   LSL.w #8,D3
00032F6C <AmiBlitz3.ab2@14593>   LSL.w #1,D3
00032F6E <AmiBlitz3.ab2@14594>   OR.w D3,D1
00032F70 <AmiBlitz3.ab2@14595>   ADDQ.w #1,D1
00032F74 <AmiBlitz3.ab2@14596> BRA.w writeword
00032F78 <AmiBlitz3.ab2@14600>    BSR.w cmpit
00032F7C <AmiBlitz3.ab2@14603>    MOVE.w mseq(PC),D1
00032F80 <AmiBlitz3.ab2@14604> BRA.w cpoke
00032F84 <AmiBlitz3.ab2@14608>   BSR.w cmpit
00032F88 <AmiBlitz3.ab2@14611>   MOVE.w msne(PC),D1
00032F8C <AmiBlitz3.ab2@14612> BRA.w cpoke
00032F90 <AmiBlitz3.ab2@14616>   BSR.w cmpit
00032F94 <AmiBlitz3.ab2@14619>    MOVE.w mslt(PC),D1
00032F98 <AmiBlitz3.ab2@14620> BRA.w cpoke
00032F9C <AmiBlitz3.ab2@14624>    BSR.w cmpit
00032FA0 <AmiBlitz3.ab2@14627>    MOVE.w msle(PC),D1
00032FA4 <AmiBlitz3.ab2@14628> BRA.w cpoke
00032FA8 <AmiBlitz3.ab2@14632>    BSR.w cmpit
00032FAC <AmiBlitz3.ab2@14635>    MOVE.w msgt(PC),D1
00032FB0 <AmiBlitz3.ab2@14636> BRA.w cpoke
00032FB4 <AmiBlitz3.ab2@14640>   BSR.w cmpit
00032FB8 <AmiBlitz3.ab2@14643>    MOVE.w msge(PC),D1
00032FBE <AmiBlitz3.ab2@14646>    OR.w regnum,D1
00032FC2 <AmiBlitz3.ab2@14647>    CMP.w #5,d2
00032FC6 <AmiBlitz3.ab2@14648>    BNE cpoke__nod0
00032FCA <AmiBlitz3.ab2@14649>    CMP.w #5,d3
00032FCE <AmiBlitz3.ab2@14650>    BNE cpoke__nod0
00032FD0 <AmiBlitz3.ab2@14651>    MOVE.l d1,-(a7)
00032FD6 <AmiBlitz3.ab2@14652>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
00032FDA <AmiBlitz3.ab2@14653>    BSR writelong
00032FDC <AmiBlitz3.ab2@14654>    MOVE.l (a7)+,d1
00032FE0 <AmiBlitz3.ab2@14657>    BSR.w writeword                                         ;writeseq
00032FE2 <AmiBlitz3.ab2@14658>    MOVEQ.l #1,d2
00032FE8 <AmiBlitz3.ab2@14659>    MOVE.l lasttoken,d1
00032FEE <AmiBlitz3.ab2@14660>     TST.b fast
00032FF2 <AmiBlitz3.ab2@14661>     BEQ.s cpoke__l11
00032FF8 <AmiBlitz3.ab2@14662>    CMP.l #$800b,d1
00032FFC <AmiBlitz3.ab2@14663>    BEQ cpoke__l10
00033000 <AmiBlitz3.ab2@14666>   MOVE.w #$4880,D1                                         ;ext.w D regat
00033006 <AmiBlitz3.ab2@14667>   OR.w regnum,D1
0003300A <AmiBlitz3.ab2@14668>    BSR.w writeword                                         ;writeext.w
0003300C <AmiBlitz3.ab2@14669>   MOVEQ.l #$02,D2                                          ;type now WORD!
0003300E <AmiBlitz3.ab2@14672> RTS
00033012 <AmiBlitz3.ab2@14677>   MOVE.w #$D040,D1
00033014 <AmiBlitz3.ab2@14678>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
00033018 <AmiBlitz3.ab2@14679> BRA.w doplus2
0003301C <AmiBlitz3.ab2@14683>   MOVE.w #$D040,D1
0003301E <AmiBlitz3.ab2@14684>   MOVEQ.l #$03,D2                                          ;now a long
00033022 <AmiBlitz3.ab2@14685>    BSR.w doplus2
00033026 <AmiBlitz3.ab2@14686> BRA.w convert_word_to_long
0003302A <AmiBlitz3.ab2@14690>   MOVE.w #$D080,D1                                         ;writeaddlong
0003302C <AmiBlitz3.ab2@14693>   MOVE.w d1,a1
00033032 <AmiBlitz3.ab2@14694>   TST.b fast
00033036 <AmiBlitz3.ab2@14695>   BEQ doplus2__l10
00033038 <AmiBlitz3.ab2@14699>   ASR.w #8,d1
0003303C <AmiBlitz3.ab2@14700>   CMP.b #$90,d1
00033040 <AmiBlitz3.ab2@14701>   BEQ doplus2__sub1
00033044 <AmiBlitz3.ab2@14702>   CMP.b #$d0,d1
00033048 <AmiBlitz3.ab2@14703>   BNE doplus2__l10
0003304C <AmiBlitz3.ab2@14704>   CMP.b #3,d3
00033050 <AmiBlitz3.ab2@14705>   BCS doplus2__lq10
00033056 <AmiBlitz3.ab2@14706>   TST.b quickadd
0003305C <AmiBlitz3.ab2@14710>    MOVE.l destpointer,a0
00033062 <AmiBlitz3.ab2@14711>    CLR.b quickadd
00033068 <AmiBlitz3.ab2@14712>    CLR.l load_var_addr
0003306E <AmiBlitz3.ab2@14713>    SUB.l imm_addr,a0
00033072 <AmiBlitz3.ab2@14714>    CMP.w #6,a0
00033076 <AmiBlitz3.ab2@14715>    BEQ doplus2__li10
0003307A <AmiBlitz3.ab2@14716>    CMP.w #4,a0
0003307E <AmiBlitz3.ab2@14717>    BNE.s doplus2__li1
00033084 <AmiBlitz3.ab2@14718>    CLR.l imm_addr
0003308A <AmiBlitz3.ab2@14719>    ADD.w #$a040-$200,-4(a4)
0003308C <AmiBlitz3.ab2@14720> RTS
0003308E <AmiBlitz3.ab2@14723>    MOVE.l a4,a0
00033094 <AmiBlitz3.ab2@14724>    SUB.l load_var_addr,a0
0003309A <AmiBlitz3.ab2@14725>    CMP.l #$a,a0
0003309E <AmiBlitz3.ab2@14726>    BNE doplus2__l10e
000330A4 <AmiBlitz3.ab2@14727>    CLR.l load_var_addr
000330A8 <AmiBlitz3.ab2@14728>    MOVE.w -$8(a4),d1
000330AE <AmiBlitz3.ab2@14729>    MOVE.l -$4(a4),-$8(a4)
000330B2 <AmiBlitz3.ab2@14730>    MOVE.w d1,-$4(a4)
000330B8 <AmiBlitz3.ab2@14731>    SUB.w #$1980,-$a(a4)
000330BE <AmiBlitz3.ab2@14732>    SUBQ.l #2,destpointer
000330C0 <AmiBlitz3.ab2@14733> RTS
000330C6 <AmiBlitz3.ab2@14736>   CLR.b quickadd
000330CA <AmiBlitz3.ab2@14737> BRA doplus2__l10
000330D0 <AmiBlitz3.ab2@14740>    CLR.l imm_addr
000330D4 <AmiBlitz3.ab2@14741>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
000330D8 <AmiBlitz3.ab2@14742>    BNE doplus2__doit
000330DE <AmiBlitz3.ab2@14743>    SUBQ.l #6,destpointer
000330E0 <AmiBlitz3.ab2@14744> RTS
000330E6 <AmiBlitz3.ab2@14747>    ADD.w #$b080-$200,-6(a4)
000330E8 <AmiBlitz3.ab2@14748> RTS
000330EE <AmiBlitz3.ab2@14751>    MOVE.l destpointer,a0
000330F4 <AmiBlitz3.ab2@14752>    SUB.l load_var_addr,a0
000330F8 <AmiBlitz3.ab2@14753>    CMP.w #4,a0
000330FC <AmiBlitz3.ab2@14754>    BNE doplus2__l10
00033100 <AmiBlitz3.ab2@14755>    CMP.b #3,d3
00033104 <AmiBlitz3.ab2@14756>    BNE doplus2__lv1
0003310A <AmiBlitz3.ab2@14757>    CLR.l load_var_addr
00033110 <AmiBlitz3.ab2@14758>    ADD.w #$b080-$200,-4(a4)
00033112 <AmiBlitz3.ab2@14759> RTS
00033116 <AmiBlitz3.ab2@14762>   CMP.b #2,d3
0003311A <AmiBlitz3.ab2@14763>   BNE doplus2__l10
00033120 <AmiBlitz3.ab2@14764>   CLR.l load_var_addr
00033126 <AmiBlitz3.ab2@14765>   ADD.w #$a040-$200,-4(a4)
00033128 <AmiBlitz3.ab2@14766> RTS
0003312E <AmiBlitz3.ab2@14769>   MOVE.w regnum,D3
00033130 <AmiBlitz3.ab2@14770>   MOVE.w a1,d1
00033132 <AmiBlitz3.ab2@14771>   OR.w D3,D1
00033134 <AmiBlitz3.ab2@14772>   ADDQ.w #1,D1
00033136 <AmiBlitz3.ab2@14773>   LSL.w #8,D3
00033138 <AmiBlitz3.ab2@14774>   LSL.w #1,D3
0003313A <AmiBlitz3.ab2@14775>   OR.w D3,D1
0003313E <AmiBlitz3.ab2@14776> BRA.w writeword
00033142 <AmiBlitz3.ab2@14779>    CMP.b #3,d3
00033146 <AmiBlitz3.ab2@14780>    BCS doplus2__sub1_lq10
0003314C <AmiBlitz3.ab2@14781>    TST.b quickadd
00033152 <AmiBlitz3.ab2@14785>    MOVE.l destpointer,a0
00033158 <AmiBlitz3.ab2@14786>    CLR.b quickadd
0003315E <AmiBlitz3.ab2@14787>    CLR.l load_var_addr
00033164 <AmiBlitz3.ab2@14788>    SUB.l imm_addr,a0
00033168 <AmiBlitz3.ab2@14789>    CMP.w #6,a0
0003316C <AmiBlitz3.ab2@14790>    BEQ doplus2__sub1_li10
00033170 <AmiBlitz3.ab2@14791>    CMP.w #4,a0
00033174 <AmiBlitz3.ab2@14792>    BNE.s doplus2__sub1_li1
0003317A <AmiBlitz3.ab2@14793>    CLR.l imm_addr
00033180 <AmiBlitz3.ab2@14794>    ADD.w #$6040-$200,-4(a4)
00033182 <AmiBlitz3.ab2@14795> RTS
00033184 <AmiBlitz3.ab2@14798>    MOVE.l a4,a0
0003318A <AmiBlitz3.ab2@14799>     SUB.l load_var_addr,a0
00033190 <AmiBlitz3.ab2@14800>     CMP.l #$a,a0
00033194 <AmiBlitz3.ab2@14801>     BNE doplus2__sub1_l10e
0003319A <AmiBlitz3.ab2@14802>    CLR.l load_var_addr
0003319E <AmiBlitz3.ab2@14803>    MOVE.w -$8(a4),d1
000331A4 <AmiBlitz3.ab2@14804>    MOVE.l -$4(a4),-$8(a4)
000331A8 <AmiBlitz3.ab2@14805>    MOVE.w d1,-$4(a4)
000331AE <AmiBlitz3.ab2@14806>    SUB.w #$1b80,-$a(a4)
000331B4 <AmiBlitz3.ab2@14807>    SUBQ.l #2,destpointer
000331B6 <AmiBlitz3.ab2@14808> RTS
000331BC <AmiBlitz3.ab2@14811>   CLR.b quickadd
000331C0 <AmiBlitz3.ab2@14812> BRA doplus2__sub1_l10
000331C6 <AmiBlitz3.ab2@14815>    CLR.l imm_addr
000331CC <AmiBlitz3.ab2@14816>    ADD.w #$7080-$200,-6(a4)
000331CE <AmiBlitz3.ab2@14817> RTS
000331D4 <AmiBlitz3.ab2@14820>    MOVE.l destpointer,a0
000331DA <AmiBlitz3.ab2@14821>    SUB.l load_var_addr,a0
000331DE <AmiBlitz3.ab2@14822>    CMP.w #4,a0
000331E2 <AmiBlitz3.ab2@14823>    BNE doplus2__sub1_l10
000331E6 <AmiBlitz3.ab2@14824>    CMP.b #3,d3
000331EA <AmiBlitz3.ab2@14825>    BNE doplus2__sub1_lv1
000331F0 <AmiBlitz3.ab2@14826>    CLR.l load_var_addr
000331F6 <AmiBlitz3.ab2@14827>    ADD.w #$7080-$200,-4(a4)
000331F8 <AmiBlitz3.ab2@14828> RTS
000331FC <AmiBlitz3.ab2@14831>    CMP.b #2,d3
00033200 <AmiBlitz3.ab2@14832>    BNE doplus2__sub1_l10
00033206 <AmiBlitz3.ab2@14833>    CLR.l load_var_addr
0003320C <AmiBlitz3.ab2@14834>    ADD.w #$6040-$200,-4(a4)
0003320E <AmiBlitz3.ab2@14835> RTS
00033214 <AmiBlitz3.ab2@14838>   MOVE.w regnum,D3
00033216 <AmiBlitz3.ab2@14839>   MOVE.w a1,d1
00033218 <AmiBlitz3.ab2@14840>   OR.w D3,D1
0003321A <AmiBlitz3.ab2@14841>   ADDQ.w #1,D1
0003321C <AmiBlitz3.ab2@14842>   LSL.w #8,D3
0003321E <AmiBlitz3.ab2@14843>   LSL.w #1,D3
00033220 <AmiBlitz3.ab2@14844>   OR.w D3,D1
00033224 <AmiBlitz3.ab2@14845> BRA.w writeword
00033226 <AmiBlitz3.ab2@14849>   MOVEQ #0,d0
0003322C <AmiBlitz3.ab2@14850>   MOVE.w regnum,d0
0003322E <AmiBlitz3.ab2@14851>   ADDQ #1,d0
00033230 <AmiBlitz3.ab2@14852>   ASL.w #8,d0
00033232 <AmiBlitz3.ab2@14853>   ASL.w #2,d0
00033238 <AmiBlitz3.ab2@14854>   MOVE.l #$f2000022,d1                                     ;fpu add
0003323A <AmiBlitz3.ab2@14855>   OR.l d0,d1
00033240 <AmiBlitz3.ab2@14856>   MOVE.w regnum,d0
00033242 <AmiBlitz3.ab2@14857>   ASL.w #7,d0
00033244 <AmiBlitz3.ab2@14858>   OR.l d0,d1
00033248 <AmiBlitz3.ab2@14859> BRA.w writelong
0003324E <AmiBlitz3.ab2@14865>   TST.b iee
00033252 <AmiBlitz3.ab2@14866>   BNE do_plus_float__fadd1
00033256 <AmiBlitz3.ab2@14867>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0003325C <AmiBlitz3.ab2@14870>    MOVE.w D1,libjsr+2
00033260 <AmiBlitz3.ab2@14871>    BSR.w JL_0_AD40
00033262 <AmiBlitz3.ab2@14872>   MOVE.l D4,D1
00033266 <AmiBlitz3.ab2@14873>    BSR.w JL_0_AD38
0003326A <AmiBlitz3.ab2@14874>   MOVE.w #$C900,D1
0003326E <AmiBlitz3.ab2@14875>    BSR.w Atokejsr
00033272 <AmiBlitz3.ab2@14876>    BSR.w JL_0_A352
00033278 <AmiBlitz3.ab2@14877>   MOVE.l libjsr,D1
0003327C <AmiBlitz3.ab2@14878>    BSR.w writelong
00033280 <AmiBlitz3.ab2@14879>    BSR.w JL_0_A36E
00033282 <AmiBlitz3.ab2@14880>   MOVE.l D5,D1
00033286 <AmiBlitz3.ab2@14881> BRA.w JL_0_AD38
0003328C <AmiBlitz3.ab2@14885>   MOVE.w regnum,D1
0003328E <AmiBlitz3.ab2@14886>   LSL.w #8,D1
00033290 <AmiBlitz3.ab2@14887>   LSL.w #1,D1
00033292 <AmiBlitz3.ab2@14888>   MOVE.w D1,-(A7)
00033296 <AmiBlitz3.ab2@14889>   CMP.w #3072,d1
0003329A <AmiBlitz3.ab2@14890>   BEQ 'l1
000332A0 <AmiBlitz3.ab2@14891>   OR.w addcode,D1                                          ;move.l (a7)+,d0
000332A4 <AmiBlitz3.ab2@14892> BRA 'l2
000332A8 <AmiBlitz3.ab2@14895>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
000332AC <AmiBlitz3.ab2@14898>    BSR.w writeword
000332AE <AmiBlitz3.ab2@14899>   MOVE.w (A7)+,D1
000332B4 <AmiBlitz3.ab2@14900>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
000332B8 <AmiBlitz3.ab2@14901> BRA.w writeword
000332BC <AmiBlitz3.ab2@14907>   MOVE.w #$9040,D1
000332C0 <AmiBlitz3.ab2@14908> BRA.w doplus2
000332C4 <AmiBlitz3.ab2@14912>   MOVE.w #$9040,D1
000332C8 <AmiBlitz3.ab2@14913> BRA.w doplus2
000332CC <AmiBlitz3.ab2@14917>   MOVE.w #$9080,D1
000332D0 <AmiBlitz3.ab2@14918> BRA.w doplus2
000332D6 <AmiBlitz3.ab2@14922>    TST.b iee
000332DA <AmiBlitz3.ab2@14923>     BNE do_minus_float__fs1
000332DE <AmiBlitz3.ab2@14924>   MOVE.w #$FFB8,D1                                         ;floatsub
000332E2 <AmiBlitz3.ab2@14925> BRA.w doflib
000332E4 <AmiBlitz3.ab2@14928>   MOVEQ #0,d0
000332EA <AmiBlitz3.ab2@14929>   MOVE.w regnum,d0
000332EC <AmiBlitz3.ab2@14930>   ADDQ #1,d0
000332EE <AmiBlitz3.ab2@14931>   ASL.w #8,d0
000332F0 <AmiBlitz3.ab2@14932>   ASL.w #2,d0
000332F6 <AmiBlitz3.ab2@14933>   MOVE.l #$f2000028,d1
000332F8 <AmiBlitz3.ab2@14934>   OR.l d0,d1
000332FE <AmiBlitz3.ab2@14935>   MOVE.w regnum,d0
00033300 <AmiBlitz3.ab2@14936>   ASL.w #7,d0
00033302 <AmiBlitz3.ab2@14937>   OR.l d0,d1
00033306 <AmiBlitz3.ab2@14938> BRA.w writelong
0003330A <AmiBlitz3.ab2@14944>   MOVE.w #$C1C0,D1
0003330C <AmiBlitz3.ab2@14945>   MOVEQ.l #$02,D2                                          ;now a word
00033310 <AmiBlitz3.ab2@14946> BRA.w doplus2
00033314 <AmiBlitz3.ab2@14950>   MOVE.w #$C1C0,D1
00033316 <AmiBlitz3.ab2@14951>   MOVEQ.l #$03,D2                                          ;now a long.
0003331A <AmiBlitz3.ab2@14952> BRA.w doplus2
0003331E <AmiBlitz3.ab2@14956>   MOVE.w #$CA00,D1                                         ;quickmul
00033322 <AmiBlitz3.ab2@14957> BRA.w domylib
00033328 <AmiBlitz3.ab2@14961>   TST.b fast
0003332C <AmiBlitz3.ab2@14962>   BNE.s 'l10
00033330 <AmiBlitz3.ab2@14963>   MOVE.w #$CA01,D1                                         ;writelongmul
00033334 <AmiBlitz3.ab2@14964> BRA.w domylib
0003333A <AmiBlitz3.ab2@14973>    MOVE.l destpointer,a0
00033340 <AmiBlitz3.ab2@14974>    SUB.l imm_addr,a0
00033344 <AmiBlitz3.ab2@14975>    CMP.w #6,a0
00033348 <AmiBlitz3.ab2@14976>    BNE 'li1
0003334A <AmiBlitz3.ab2@14977>    MOVEQ.l #2,d1
0003334C <AmiBlitz3.ab2@14978>    MOVEQ #1,d3
00033350 <AmiBlitz3.ab2@14981>   CMP.l -4(a4),d1
00033354 <AmiBlitz3.ab2@14982>    BEQ 'oklsl
00033356 <AmiBlitz3.ab2@14983>     LSL.l #1,d1
0003335C <AmiBlitz3.ab2@14984>     ADD.l #1,d3
00033362 <AmiBlitz3.ab2@14985>     CMP.l #9,d3
00033366 <AmiBlitz3.ab2@14986>     BNE 'ag
0003336A <AmiBlitz3.ab2@14987>    MOVE.w -2(a4),d1
0003336E <AmiBlitz3.ab2@14988>    BSR writeword
00033374 <AmiBlitz3.ab2@14989>    MOVE.w -6(a4),-4(a4)
0003337C <AmiBlitz3.ab2@14990>    MOVE.l #$4c3c0800,-8(a4)
00033382 <AmiBlitz3.ab2@14991>    MOVE.w regnum,D3
00033386 <AmiBlitz3.ab2@14992>    MULS #$1000,D3
0003338A <AmiBlitz3.ab2@14993>    OR.w D3,-6(a4)
00033390 <AmiBlitz3.ab2@14994>    CLR.l load_var_addr
00033396 <AmiBlitz3.ab2@14995>    CLR.l imm_addr
0003339A <AmiBlitz3.ab2@14996> BRA 'li3
0003339E <AmiBlitz3.ab2@14999>    CMP.w #8,d3
000333A2 <AmiBlitz3.ab2@15000>    BEQ 'ok
000333A4 <AmiBlitz3.ab2@15001>    ASL.l #1,d3
000333A6 <AmiBlitz3.ab2@15002>    ASL.l #8,d3
000333AA <AmiBlitz3.ab2@15003>    MOVE.w #$e188,d1
000333AC <AmiBlitz3.ab2@15004>    OR.w d3,d1
000333B0 <AmiBlitz3.ab2@15005>    MOVE.w d1,-6(a4)
000333B4 <AmiBlitz3.ab2@15006> BRA 'okls
000333BA <AmiBlitz3.ab2@15009>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
000333C0 <AmiBlitz3.ab2@15012>   MOVE.w regnum,d3
000333C4 <AmiBlitz3.ab2@15013>    OR.b d3,-5(a4)
000333CA <AmiBlitz3.ab2@15014>    SUBQ.l #4,destpointer
000333D0 <AmiBlitz3.ab2@15015>    CLR.l load_var_addr
000333D6 <AmiBlitz3.ab2@15016>    CLR.l imm_addr
000333DA <AmiBlitz3.ab2@15017> BRA 'li3
000333E0 <AmiBlitz3.ab2@15020>    MOVE.l destpointer,a0
000333E6 <AmiBlitz3.ab2@15021>    SUB.l load_var_addr,a0
000333EA <AmiBlitz3.ab2@15022>    CMP.w #4,a0
000333EE <AmiBlitz3.ab2@15023>    BNE 'li2
000333F2 <AmiBlitz3.ab2@15024>    MOVE.w -2(a4),d1
000333F6 <AmiBlitz3.ab2@15025>    BSR writeword
000333FC <AmiBlitz3.ab2@15026>    MOVE.b #$4c,-6(a4)
00033402 <AmiBlitz3.ab2@15027>    MOVE.w #$0800,-4(a4)
00033408 <AmiBlitz3.ab2@15028>    MOVE.w regnum,D3
0003340C <AmiBlitz3.ab2@15029>    MULS #$1000,d3
00033410 <AmiBlitz3.ab2@15030>    OR.w D3,-4(a4)
00033414 <AmiBlitz3.ab2@15031> BRA 'li3
0003341A <AmiBlitz3.ab2@15034>    MOVE.l #$4c010800,d1
00033420 <AmiBlitz3.ab2@15035>    MOVE.w regnum,D3
00033422 <AmiBlitz3.ab2@15036>    EXT.l d3
00033426 <AmiBlitz3.ab2@15037>    MULS #$1000,d3
00033428 <AmiBlitz3.ab2@15038>    OR.w D3,d1
0003342C <AmiBlitz3.ab2@15039>    MULS #$10,d3
0003342E <AmiBlitz3.ab2@15040>    ADD.l d3,d1
00033432 <AmiBlitz3.ab2@15041>    BSR writelong
00033434 <AmiBlitz3.ab2@15046> RTS
00033436 <AmiBlitz3.ab2@15050>   MOVE.w D1,-(A7)
0003343A <AmiBlitz3.ab2@15051>    BSR.w JL_0_AD40
0003343C <AmiBlitz3.ab2@15052>   MOVE.l D4,D1
00033440 <AmiBlitz3.ab2@15053>    BSR.w JL_0_AD38
00033444 <AmiBlitz3.ab2@15054>    BSR.w JL_0_A352
00033446 <AmiBlitz3.ab2@15055>   MOVEQ #0,d1
00033448 <AmiBlitz3.ab2@15056>   MOVE.w (A7)+,D1
0003344E <AmiBlitz3.ab2@15057>   MOVE.l d1,lastinstruction
00033452 <AmiBlitz3.ab2@15058>    BSR.w Atokejsr
00033456 <AmiBlitz3.ab2@15059>    BSR.w JL_0_A36E
00033458 <AmiBlitz3.ab2@15060>   MOVE.l D5,D1
0003345C <AmiBlitz3.ab2@15061> BRA.w JL_0_AD38
00033462 <AmiBlitz3.ab2@15065>    TST.b iee
00033466 <AmiBlitz3.ab2@15066>     BNE fm1
0003346A <AmiBlitz3.ab2@15067>  MOVE.w #$FFB2,D1                                          ;floatmul
0003346E <AmiBlitz3.ab2@15068> BRA.w doflib
00033470 <AmiBlitz3.ab2@15071>   MOVEQ #0,d0
00033476 <AmiBlitz3.ab2@15072>  MOVE.w regnum,d0
00033478 <AmiBlitz3.ab2@15073>  ADDQ #1,d0
0003347A <AmiBlitz3.ab2@15074>  ASL.w #8,d0
0003347C <AmiBlitz3.ab2@15075>  ASL.w #2,d0
00033482 <AmiBlitz3.ab2@15076>  MOVE.l #$f2000023,d1
00033484 <AmiBlitz3.ab2@15077>  OR.l d0,d1
0003348A <AmiBlitz3.ab2@15078>  MOVE.w regnum,d0
0003348C <AmiBlitz3.ab2@15079>  ASL.w #7,d0
0003348E <AmiBlitz3.ab2@15080>  OR.l d0,d1
00033492 <AmiBlitz3.ab2@15081> BRA.w writelong
00033494 <AmiBlitz3.ab2@15085>   MOVE.w D2,-(A7)                                          ;dopow
00033496 <AmiBlitz3.ab2@15086>   MOVE.w D2,D3
00033498 <AmiBlitz3.ab2@15087>   MOVEQ.l #$05,D2
0003349C <AmiBlitz3.ab2@15088>    BSR.w JL_0_9770
000334A2 <AmiBlitz3.ab2@15089>   ADDQ.w #1,regnum
000334A4 <AmiBlitz3.ab2@15090>   MOVE.w (A7)+,D3
000334A6 <AmiBlitz3.ab2@15091>   MOVEQ.l #$05,D2
000334AA <AmiBlitz3.ab2@15092>    BSR.w writeconvertcode
000334B0 <AmiBlitz3.ab2@15093>   SUBQ.w #1,regnum
000334B4 <AmiBlitz3.ab2@15094>    BSR.w nocando
000334BA <AmiBlitz3.ab2@15095>    TST.b fpu
000334BE <AmiBlitz3.ab2@15096>    BEQ 'old
000334C0 <AmiBlitz3.ab2@15097>    MOVEQ #0,d1
000334C6 <AmiBlitz3.ab2@15098>    MOVE.w regnum,d1
000334C8 <AmiBlitz3.ab2@15099>   MOVE.l d1,d0
000334CA <AmiBlitz3.ab2@15100>   ASL.w #7,d1
000334CC <AmiBlitz3.ab2@15101>   ASL.w #8,d0
000334CE <AmiBlitz3.ab2@15102>   ASL.w #2,d0
000334D0 <AmiBlitz3.ab2@15103>   OR.w d0,d1
000334D2 <AmiBlitz3.ab2@15104>   MOVE.l d1,-(a7)
000334D8 <AmiBlitz3.ab2@15106>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
000334DC <AmiBlitz3.ab2@15107>    BSR writelong
000334E2 <AmiBlitz3.ab2@15108>    MOVE.w regnum,d0
000334E4 <AmiBlitz3.ab2@15109>  ADDQ #1,d0
000334E6 <AmiBlitz3.ab2@15110>  ASL.w #8,d0
000334E8 <AmiBlitz3.ab2@15111>  ASL.w #2,d0
000334EE <AmiBlitz3.ab2@15112>  MOVE.l #$f2000023,d1
000334F0 <AmiBlitz3.ab2@15113>  OR.l d0,d1
000334F6 <AmiBlitz3.ab2@15114>  MOVE.w regnum,d0
000334F8 <AmiBlitz3.ab2@15115>  ASL.w #7,d0
000334FA <AmiBlitz3.ab2@15116>  OR.l d0,d1
00033500 <AmiBlitz3.ab2@15117>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
00033504 <AmiBlitz3.ab2@15118>    BSR writelong
00033506 <AmiBlitz3.ab2@15119>    MOVE.l (a7)+,d1
0003350C <AmiBlitz3.ab2@15121>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
00033510 <AmiBlitz3.ab2@15122>    BSR writelong
00033512 <AmiBlitz3.ab2@15123> RTS
00033516 <AmiBlitz3.ab2@15126>   MOVE.w #$6001,D1
0003351A <AmiBlitz3.ab2@15127> BRA.w domylib
0003351E <AmiBlitz3.ab2@15133>   MOVEA.l forthsp(PC),A0
00033522 <AmiBlitz3.ab2@15134>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
00033524 <AmiBlitz3.ab2@15135> RTS
00033528 <AmiBlitz3.ab2@15141>   MOVE.w #$D400,D1
0003352C <AmiBlitz3.ab2@15142> BRA.w domylib
00033530 <AmiBlitz3.ab2@15146>   MOVE.w #$D401,D1
00033534 <AmiBlitz3.ab2@15147> BRA.w domylib
00033538 <AmiBlitz3.ab2@15151>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0003353C <AmiBlitz3.ab2@15152>   MOVE.w #$D402,D1
00033540 <AmiBlitz3.ab2@15153> BRA.w domylib
00033544 <AmiBlitz3.ab2@15157>   MOVE.w #$D403,D1
00033546 <AmiBlitz3.ab2@15158>   MOVEQ.l #$02,D2                                          ;now a word.
0003354A <AmiBlitz3.ab2@15159> BRA.w domylib
0003354E <AmiBlitz3.ab2@15163>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
00033554 <AmiBlitz3.ab2@15164>   TST.b fpu
00033558 <AmiBlitz3.ab2@15165>   BEQ 'old
0003355A <AmiBlitz3.ab2@15166>   MOVEQ #0,d1
00033560 <AmiBlitz3.ab2@15167>   MOVE.w regnum,d1                                         ;fpu mod
00033562 <AmiBlitz3.ab2@15168>   MOVE.l d1,d0
00033564 <AmiBlitz3.ab2@15169>   ADDQ.l #1,d1
00033566 <AmiBlitz3.ab2@15170>   ASL.l #7,d0
00033568 <AmiBlitz3.ab2@15171>   ASL.l #8,d1
0003356A <AmiBlitz3.ab2@15172>   ASL.l #2,d1
0003356C <AmiBlitz3.ab2@15173>   OR.l d0,d1
0003356E <AmiBlitz3.ab2@15174>   MOVE.l d0,-(a7)
00033574 <AmiBlitz3.ab2@15175>   OR.l #$f2000021,d1
00033578 <AmiBlitz3.ab2@15176>   BSR writelong
0003357A <AmiBlitz3.ab2@15177>   MOVE.l (a7)+,d0
0003357C <AmiBlitz3.ab2@15178>  RTS
00033580 <AmiBlitz3.ab2@15181>   MOVE.w #$D404,D1
00033582 <AmiBlitz3.ab2@15182>   MOVEQ.l #$03,D2                                          ;now a long
00033586 <AmiBlitz3.ab2@15183> BRA.w domylib
0003358A <AmiBlitz3.ab2@15191>   MOVE.w #$48C0,D1
00033590 <AmiBlitz3.ab2@15192>   OR.w regnum,D1
00033594 <AmiBlitz3.ab2@15193>    BSR.w writeword
00033596 <AmiBlitz3.ab2@15194>   ADDQ.w #1,D1
0003359A <AmiBlitz3.ab2@15195>    BSR.w writeword
0003359E <AmiBlitz3.ab2@15198>    MOVE.w #$48C0,D1
000335A4 <AmiBlitz3.ab2@15199>   OR.w regnum,D1
000335A8 <AmiBlitz3.ab2@15200>    BSR.w writeword
000335AC <AmiBlitz3.ab2@15201>   MOVE.w #$81C0,D1
000335B0 <AmiBlitz3.ab2@15202> BRA.w doplus2
000335B6 <AmiBlitz3.ab2@15206>   TST.b fast
000335BA <AmiBlitz3.ab2@15207>   BNE.s 'l10
000335BE <AmiBlitz3.ab2@15208>   MOVE.w #$CB01,D1
000335C2 <AmiBlitz3.ab2@15209> BRA.w domylib
000335C6 <AmiBlitz3.ab2@15215>   BSR.w JL_0_AD40
000335C8 <AmiBlitz3.ab2@15216>   MOVE.l D4,D1
000335CC <AmiBlitz3.ab2@15217>    BSR.w JL_0_AD38
000335D0 <AmiBlitz3.ab2@15218>    BSR.w JL_0_A352
000335D6 <AmiBlitz3.ab2@15232>    MOVE.l #$4c410800,d1
000335DA <AmiBlitz3.ab2@15233>    BSR writelong
000335DE <AmiBlitz3.ab2@15236>   MOVE.w #$4e71,d1
000335E2 <AmiBlitz3.ab2@15238>    BSR.w JL_0_A36E
000335E4 <AmiBlitz3.ab2@15239>   MOVE.l D5,D1
000335E8 <AmiBlitz3.ab2@15240> BRA.w JL_0_AD38
000335EC <AmiBlitz3.ab2@15243>     CMP.w #8,d3
000335F0 <AmiBlitz3.ab2@15244>     BEQ 'ok
000335F2 <AmiBlitz3.ab2@15245>     ASL.l #1,d3
000335F4 <AmiBlitz3.ab2@15246>     ASL.l #8,d3
000335F8 <AmiBlitz3.ab2@15247>     MOVE.w #$e080,d1
000335FA <AmiBlitz3.ab2@15248>     OR.w d3,d1
000335FE <AmiBlitz3.ab2@15249> BRA 'oklsr2
00033602 <AmiBlitz3.ab2@15252>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
00033608 <AmiBlitz3.ab2@15255>      SUBQ.l #6,destpointer
0003360C <AmiBlitz3.ab2@15256>      BSR writeword
0003360E <AmiBlitz3.ab2@15257>      MOVE.l (a7)+,d3
00033610 <AmiBlitz3.ab2@15258>      MOVEQ #0,d1
00033616 <AmiBlitz3.ab2@15259>      CLR.l load_var_addr
0003361C <AmiBlitz3.ab2@15260>      CLR.l imm_addr
00033620 <AmiBlitz3.ab2@15261> BRA JL_0_AD38
00033624 <AmiBlitz3.ab2@15265>   MOVE.w #$CB00,D1                                         ;quickdiv
00033628 <AmiBlitz3.ab2@15266> BRA.w domylib
0003362E <AmiBlitz3.ab2@15270>    TST.b iee
00033632 <AmiBlitz3.ab2@15271>    BNE fdiv1
00033636 <AmiBlitz3.ab2@15272>    MOVE.w #$FFAC,D1                                        ;floatdiv
0003363A <AmiBlitz3.ab2@15273> BRA.w doflib
0003363C <AmiBlitz3.ab2@15277>   MOVEQ #0,d0
00033642 <AmiBlitz3.ab2@15278>   MOVE.w regnum,d0
00033644 <AmiBlitz3.ab2@15279>   ADDQ #1,d0
00033646 <AmiBlitz3.ab2@15280>   ASL.w #8,d0
00033648 <AmiBlitz3.ab2@15281>   ASL.w #2,d0
0003364E <AmiBlitz3.ab2@15282>   MOVE.l #$f2000020,d1                                     ;fpu div
00033650 <AmiBlitz3.ab2@15283>   OR.l d0,d1
00033656 <AmiBlitz3.ab2@15284>   MOVE.w regnum,d0
00033658 <AmiBlitz3.ab2@15285>   ASL.w #7,d0
0003365A <AmiBlitz3.ab2@15286>   OR.l d0,d1
0003365E <AmiBlitz3.ab2@15287> BRA.w writelong
00033662 <AmiBlitz3.ab2@15291>   MOVE.w #$C000,D1
00033666 <AmiBlitz3.ab2@15292> BRA.w doplus2
0003366A <AmiBlitz3.ab2@15296>   MOVE.w #$C040,D1
0003366E <AmiBlitz3.ab2@15297> BRA.w doplus2
00033672 <AmiBlitz3.ab2@15301>   MOVE.w #$C080,D1
00033676 <AmiBlitz3.ab2@15302> BRA.w doplus2
0003367A <AmiBlitz3.ab2@15306>   MOVE.w #$8000,D1
0003367E <AmiBlitz3.ab2@15307> BRA.w doplus2
00033682 <AmiBlitz3.ab2@15311>   MOVE.w #$8040,D1
00033686 <AmiBlitz3.ab2@15312> BRA.w doplus2
0003368A <AmiBlitz3.ab2@15316>   MOVE.w #$8080,D1
0003368E <AmiBlitz3.ab2@15317> BRA.w doplus2
00033692 <AmiBlitz3.ab2@15321>   MOVE.w #$B100,D1
00033698 <AmiBlitz3.ab2@15324>    MOVE.w regnum,D3
0003369A <AmiBlitz3.ab2@15325>   OR.w D3,D1
0003369C <AmiBlitz3.ab2@15326>   ADDQ.w #1,D3
0003369E <AmiBlitz3.ab2@15327>   LSL.w #8,D3
000336A0 <AmiBlitz3.ab2@15328>   LSL.w #1,D3
000336A2 <AmiBlitz3.ab2@15329>   OR.w D3,D1
000336A6 <AmiBlitz3.ab2@15330> BRA.w writeword
000336AA <AmiBlitz3.ab2@15334>   MOVE.w #$B140,D1
000336AE <AmiBlitz3.ab2@15335> BRA.w JL_0_A25C
000336B2 <AmiBlitz3.ab2@15339>   MOVE.w #$B180,D1
000336B6 <AmiBlitz3.ab2@15340> BRA.w JL_0_A25C
000336BA <AmiBlitz3.ab2@15344>   MOVE.w #$E1A8,D1
000336BE <AmiBlitz3.ab2@15345> BRA.w JL_0_A298
000336C2 <AmiBlitz3.ab2@15349>   MOVE.w #$E0A8,D1
000336C6 <AmiBlitz3.ab2@15350> BRA.w JL_0_A298
000336CA <AmiBlitz3.ab2@15354>   MOVE.w #$E0A0,D1
000336CE <AmiBlitz3.ab2@15355> BRA.w JL_0_A298
000336D0 <AmiBlitz3.ab2@15359>   MOVE.w D1,-(A7)
000336D6 <AmiBlitz3.ab2@15360>   ADDQ.w #1,regnum
000336D8 <AmiBlitz3.ab2@15361>   MOVE.w D2,-(A7)
000336DA <AmiBlitz3.ab2@15362>   MOVE.w D2,D3
000336DC <AmiBlitz3.ab2@15363>   MOVEQ.l #$02,D2
000336E0 <AmiBlitz3.ab2@15368>    BSR.w writeconvertcode
000336E2 <AmiBlitz3.ab2@15370>   MOVE.w (A7)+,D2
000336E8 <AmiBlitz3.ab2@15371>   SUBQ.w #1,regnum
000336EC <AmiBlitz3.ab2@15372>   CMP.w #$4,D2
000336F0 <AmiBlitz3.ab2@15373>    BEQ.w JL_0_A2C2
000336F2 <AmiBlitz3.ab2@15374>   MOVE.w D2,D3
000336F4 <AmiBlitz3.ab2@15375>   MOVEQ.l #$03,D2
000336F8 <AmiBlitz3.ab2@15376>    BSR.w JL_0_9770
000336FA <AmiBlitz3.ab2@15379>    MOVE.w (A7)+,D1
00033700 <AmiBlitz3.ab2@15380>   MOVE.w regnum,D3
00033702 <AmiBlitz3.ab2@15381>   OR.w D3,D1
00033704 <AmiBlitz3.ab2@15382>   ADDQ.w #1,D3
00033706 <AmiBlitz3.ab2@15383>   LSL.w #8,D3
00033708 <AmiBlitz3.ab2@15384>   LSL.w #1,D3
0003370A <AmiBlitz3.ab2@15385>   OR.w D3,D1
0003370E <AmiBlitz3.ab2@15386> BRA.w writeword
00033712 <AmiBlitz3.ab2@15390>   MOVE.w #$0100,D1
00033716 <AmiBlitz3.ab2@15391>    BSR.w JL_0_A31C
0003371C <AmiBlitz3.ab2@15392>   MOVE.w regnum,D1
00033720 <AmiBlitz3.ab2@15393>   ORI.w #$56C0,D1
00033724 <AmiBlitz3.ab2@15394>    BSR.w writeword
0003372A <AmiBlitz3.ab2@15395>   MOVE.w regnum,D1
0003372E <AmiBlitz3.ab2@15396>   ORI.w #$4880,D1
00033732 <AmiBlitz3.ab2@15397>    BSR.w writeword
00033734 <AmiBlitz3.ab2@15398>   MOVEQ.l #$02,D2
00033736 <AmiBlitz3.ab2@15399> RTS
0003373A <AmiBlitz3.ab2@15403>   MOVE.w #$01C0,D1
0003373E <AmiBlitz3.ab2@15406>    BSR.w JL_0_A31C
00033740 <AmiBlitz3.ab2@15407>   MOVEQ.l #$03,D2
00033742 <AmiBlitz3.ab2@15408> RTS
00033746 <AmiBlitz3.ab2@15412>   MOVE.w #$0180,D1
0003374A <AmiBlitz3.ab2@15413> BRA.w JL_0_A304
0003374E <AmiBlitz3.ab2@15417>   MOVE.w #$0140,D1
00033752 <AmiBlitz3.ab2@15418> BRA.w JL_0_A304
00033754 <AmiBlitz3.ab2@15422>   MOVE.w D1,-(A7)
00033756 <AmiBlitz3.ab2@15423>   MOVE.w D2,-(A7)
00033758 <AmiBlitz3.ab2@15424>   MOVE.w D2,D3
0003375A <AmiBlitz3.ab2@15425>   MOVEQ.l #$03,D2
0003375E <AmiBlitz3.ab2@15426>    BSR.w JL_0_9770
00033760 <AmiBlitz3.ab2@15427>   MOVE.w (A7)+,D3
00033762 <AmiBlitz3.ab2@15428>   MOVEQ.l #$01,D2
00033768 <AmiBlitz3.ab2@15429>   ADDQ.w #1,regnum
0003376C <AmiBlitz3.ab2@15430>    BSR.w writeconvertcode
00033772 <AmiBlitz3.ab2@15431>   SUBQ.w #1,regnum
00033778 <AmiBlitz3.ab2@15432>   MOVE.w regnum,D1
0003377A <AmiBlitz3.ab2@15433>   MOVE.w D1,D2
0003377C <AmiBlitz3.ab2@15434>   ADDQ.w #1,D2
0003377E <AmiBlitz3.ab2@15435>   LSL.w #8,D2
00033780 <AmiBlitz3.ab2@15436>   LSL.w #1,D2
00033782 <AmiBlitz3.ab2@15437>   OR.w (A7)+,D1
00033784 <AmiBlitz3.ab2@15438>   OR.w D2,D1
00033788 <AmiBlitz3.ab2@15439> BRA.w writeword
0003378E <AmiBlitz3.ab2@15443>   MOVE.w regnum,D1
00033792 <AmiBlitz3.ab2@15444>    BEQ.w JL_0_A36C
00033796 <AmiBlitz3.ab2@15445>   ORI.w #$2000,D1
0003379A <AmiBlitz3.ab2@15446>    BSR.w writeword
0003379E <AmiBlitz3.ab2@15447>   ADDI.w #$201,D1
000337A2 <AmiBlitz3.ab2@15448>    BSR.w writeword
000337A4 <AmiBlitz3.ab2@15451> RTS
000337AA <AmiBlitz3.ab2@15455>   MOVE.w regnum,D1
000337AE <AmiBlitz3.ab2@15456>    BEQ.w JL_0_A384
000337B0 <AmiBlitz3.ab2@15457>   LSL.w #8,D1
000337B2 <AmiBlitz3.ab2@15458>   LSL.w #1,D1
000337B6 <AmiBlitz3.ab2@15459>   ORI.w #$2000,D1
000337BA <AmiBlitz3.ab2@15460>    BSR.w writeword
000337BC <AmiBlitz3.ab2@15463> RTS
000337C2 <AmiBlitz3.ab2@15467>    CLR.b isconstantvalue
000337C8 <AmiBlitz3.ab2@15468>    CLR.l lastconstantvalue
000337D0 <AmiBlitz3.ab2@15469>    CMPI.w #$7,regnum
000337D4 <AmiBlitz3.ab2@15470>    BCS.w JL_0_A6B4
000337DA <AmiBlitz3.ab2@15471>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
000337DE <AmiBlitz3.ab2@15472>   BSR writelong
000337E2 <AmiBlitz3.ab2@15473>   MOVE.w #$2F06,D1                                         ;d6 to stack
000337E6 <AmiBlitz3.ab2@15475>   CMP.w #$3,D2
000337EA <AmiBlitz3.ab2@15476>    BCS.w JL_0_A3A2
000337EE <AmiBlitz3.ab2@15477>   MOVE.w #$2F06,D1
000337F2 <AmiBlitz3.ab2@15480>   BSR.w writeword
000337F4 <AmiBlitz3.ab2@15481>   MOVE.w D1,-(A7)
000337FA <AmiBlitz3.ab2@15482>   SUBQ.w #1,regnum
000337FE <AmiBlitz3.ab2@15483>    BSR.w JL_0_A6B4
00033804 <AmiBlitz3.ab2@15484>   ADDQ.w #1,regnum
0003380A <AmiBlitz3.ab2@15485>   MOVE.l #$f2001b80,d1
0003380E <AmiBlitz3.ab2@15486>   BSR writelong
00033812 <AmiBlitz3.ab2@15487>   MOVE.w #$3E06,D1
00033816 <AmiBlitz3.ab2@15488>   CMP.w #$3,D2
0003381A <AmiBlitz3.ab2@15489>    BCS.w JL_0_A3C8
0003381E <AmiBlitz3.ab2@15490>   MOVE.w #$2E06,D1
00033822 <AmiBlitz3.ab2@15493>   BSR.w writeword
00033824 <AmiBlitz3.ab2@15494>   MOVE.w (A7)+,D1
00033828 <AmiBlitz3.ab2@15495>   ANDI.w #$F000,D1
0003382C <AmiBlitz3.ab2@15496>   ORI.w #$C1F,D1
00033832 <AmiBlitz3.ab2@15497>   JSR writeword
00033838 <AmiBlitz3.ab2@15498>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0003383C <AmiBlitz3.ab2@15499> BRA writelong
00033840 <AmiBlitz3.ab2@15503>   BSR.w JL_0_A6B4
00033844 <AmiBlitz3.ab2@15504>   MOVE.w #$4440,D1
00033848 <AmiBlitz3.ab2@15505>   CMP.w #$3,D2
0003384C <AmiBlitz3.ab2@15506>    BCS.w JL_0_A406
00033850 <AmiBlitz3.ab2@15507>   MOVE.w #$4480,D1
00033854 <AmiBlitz3.ab2@15508>   CMP.w #$5,D2
00033858 <AmiBlitz3.ab2@15509>    BCS.w JL_0_A406
0003385C <AmiBlitz3.ab2@15510>   CMP.w #$6,D2
00033860 <AmiBlitz3.ab2@15511>    BCC.w illoperr
00033864 <AmiBlitz3.ab2@15512>   MOVE.w #$FFC4,D1
00033868 <AmiBlitz3.ab2@15513> BRA.w JL_0_9604
0003386E <AmiBlitz3.ab2@15516>   OR.w regnum,D1                                           ;negate
00033874 <AmiBlitz3.ab2@15517>   CLR.l imm_addr
00033878 <AmiBlitz3.ab2@15518> BRA.w writeword
0003387C <AmiBlitz3.ab2@15522>    BSR.w eval4
00033880 <AmiBlitz3.ab2@15523>   CMP.w #")",D0
00033884 <AmiBlitz3.ab2@15524>    BEQ.w JL_0_A424
00033888 <AmiBlitz3.ab2@15525>   CMP.w #"}",D0
0003388C <AmiBlitz3.ab2@15526>    BNE.w brackets_                                         ;syntax error brackets
00033890 <AmiBlitz3.ab2@15529> BRA.w get1bytemain
00033894 <AmiBlitz3.ab2@15533>    BSR.w eval4
00033898 <AmiBlitz3.ab2@15534>   CMP.w #$5,D2
0003389C <AmiBlitz3.ab2@15535>    BCC.w illoperr
000338A2 <AmiBlitz3.ab2@15536>   MOVE.w regnum,D1
000338A6 <AmiBlitz3.ab2@15537>   ORI.w #$4640,D1
000338AA <AmiBlitz3.ab2@15538>   CMP.w #$3,D2
000338AE <AmiBlitz3.ab2@15539>    BCS.w writeword
000338B2 <AmiBlitz3.ab2@15540>   EORI.w #$C0,D1
000338B6 <AmiBlitz3.ab2@15541> BRA.w writeword
000338B8 <AmiBlitz3.ab2@15545>   MOVEQ.l #$05,D2                                          ;fpu pi
000338BE <AmiBlitz3.ab2@15546>    TST.b fpu
000338C2 <AmiBlitz3.ab2@15547>   BEQ 'old
000338C8 <AmiBlitz3.ab2@15548> JMP fpupi
000338CE <AmiBlitz3.ab2@15551>   MOVE.w regnum,D1
000338D0 <AmiBlitz3.ab2@15552>   LSL.w #8,D1
000338D2 <AmiBlitz3.ab2@15553>   LSL.w #1,D1
000338D6 <AmiBlitz3.ab2@15554>   ORI.w #$203C,D1
000338DA <AmiBlitz3.ab2@15555>    BSR.w writeword
000338E0 <AmiBlitz3.ab2@15556>   MOVE.l #$C90FDA42,D1
000338E4 <AmiBlitz3.ab2@15557>    BSR.w writelong
000338E8 <AmiBlitz3.ab2@15558> BRA.w get1bytemain
000339E4 <AmiBlitz3.ab2@15566> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
00033AE0 <AmiBlitz3.ab2@15567>              Ds.l 63
00033B28 <AmiBlitz3.ab2@15568>              Ds.l 18
00033B2C <AmiBlitz3.ab2@15569> forthsp:     Dc.l forthstack
00033B58 <AmiBlitz3.ab2@15574>    !fget
00033B5C <AmiBlitz3.ab2@15575>    CMP.b #$7e,d0
00033B60 <AmiBlitz3.ab2@15576>    BNE 'noc
00033B62 <AmiBlitz3.ab2@15577>    SUBQ.l #1,a5
00033B66 <AmiBlitz3.ab2@15578>    BSR get1bytemain
00033B6A <AmiBlitz3.ab2@15581>    CMP.b #"#",d0
00033B6E <AmiBlitz3.ab2@15582>    BNE 'ld1
00033B72 <AmiBlitz3.ab2@15583>    CMP.b #$22,(a5)
00033B76 <AmiBlitz3.ab2@15584>    BNE 'ld1
00033B7C <AmiBlitz3.ab2@15585>    JSR addimmi
00033B80 <AmiBlitz3.ab2@15588>    CMP.b #$22,d0
00033B84 <AmiBlitz3.ab2@15589>    BNE 'l11
00033B8A <AmiBlitz3.ab2@15599>    NOT.w instringon
00033B8C <AmiBlitz3.ab2@15602>    TST.b d0
00033B90 <AmiBlitz3.ab2@15603>    BPL 'l10
00033B92 <AmiBlitz3.ab2@15604>    LSL.w #8,d0
00033B94 <AmiBlitz3.ab2@15605>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
00033B9A <AmiBlitz3.ab2@15606>    MOVE.l d0,lasttoken
00033BA0 <AmiBlitz3.ab2@15607>    MOVE.w d0,lastchar
00033BA6 <AmiBlitz3.ab2@15608>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
00033BAA <AmiBlitz3.ab2@15610>   CMP.w #"(",D0
00033BAE <AmiBlitz3.ab2@15611>    BEQ.w checkcast2
00033BB2 <AmiBlitz3.ab2@15612> nocast CMP.w #"{",D0
00033BB6 <AmiBlitz3.ab2@15613>    BEQ.w JL_0_A410
00033BBA <AmiBlitz3.ab2@15614>   CMP.w #$2D,D0
00033BBE <AmiBlitz3.ab2@15615>    BEQ.w JL_0_A3DA
00033BC2 <AmiBlitz3.ab2@15616>   CMP.w #-$7F77,D0
00033BC6 <AmiBlitz3.ab2@15617>    BEQ.w JL_0_A428
00033BCA <AmiBlitz3.ab2@15618>   MOVEA.l forthsp(PC),A1
00033BD0 <AmiBlitz3.ab2@15619>   CMPA.l #forthsp,A1
00033BD4 <AmiBlitz3.ab2@15620>    BCC.w conmemerr
00033BDA <AmiBlitz3.ab2@15621>   MOVE.l destpointer,(A1)+
00033BE0 <AmiBlitz3.ab2@15622>   MOVE.l hunkoffsetbase,(A1)+
00033BE6 <AmiBlitz3.ab2@15623>   MOVE.l lasta6,(A1)+
00033BEC <AmiBlitz3.ab2@15624>   MOVE.w lasta6,(A1)+
00033BEE <AmiBlitz3.ab2@15625>   CLR.w (A1)+
00033BF0 <AmiBlitz3.ab2@15626>   CLR.w (A1)+
00033BF6 <AmiBlitz3.ab2@15627>   MOVE.l A1,forthsp
00033C08 <AmiBlitz3.ab2@15629>    !compare2
00033C0C <AmiBlitz3.ab2@15630>    BEQ.w JL_0_B224
00033C10 <AmiBlitz3.ab2@15631>   CMP.w #".",D0
00033C14 <AmiBlitz3.ab2@15632>    BEQ.w JL_0_B21E
00033C18 <AmiBlitz3.ab2@15633>   CMP.w #"#",D0
00033C1C <AmiBlitz3.ab2@15634>    BEQ.w get_constant
00033C20 <AmiBlitz3.ab2@15635>   CMP.w #"$",D0
00033C24 <AmiBlitz3.ab2@15636>    BEQ.w get_hexconstant
00033C28 <AmiBlitz3.ab2@15637>   CMP.w #"%",D0
00033C2C <AmiBlitz3.ab2@15638>    BEQ.w JL_0_A8C0
00033C30 <AmiBlitz3.ab2@15639>   CMP.w #-$7FD1,D0
00033C34 <AmiBlitz3.ab2@15640>    BEQ.w _SizeOf
00033C38 <AmiBlitz3.ab2@15641>   CMP.w #-$7F46,D0
00033C3C <AmiBlitz3.ab2@15642>    BEQ.w JL_0_A44E
00033C40 <AmiBlitz3.ab2@15643>   CMP.w #-$7F3B,D0
00033C44 <AmiBlitz3.ab2@15644>    BEQ.w JL_0_A83C
00033C48 <AmiBlitz3.ab2@15645>   CMP.w #-$7F3A,D0
00033C4C <AmiBlitz3.ab2@15646>    BEQ.w JL_0_A846
00033C52 <AmiBlitz3.ab2@15647>   MOVE.w constmode,D1
00033C56 <AmiBlitz3.ab2@15648>    BEQ.w JL_0_A776
00033C78 <AmiBlitz3.ab2@15649>    !compare1                                               ;bsr.w tstalpha
00033C7C <AmiBlitz3.ab2@15650>    BEQ.w JL_0_AF22
00033C80 <AmiBlitz3.ab2@15651>   CMP.w #$5F,D0
00033C84 <AmiBlitz3.ab2@15652>    BEQ.w JL_0_AF22
00033C88 <AmiBlitz3.ab2@15653>   CMP.w #$22,D0
00033C8C <AmiBlitz3.ab2@15654>    BEQ.w JL_0_AF00
00033C90 <AmiBlitz3.ab2@15655> BRA.w syntaxerr
00033C96 <AmiBlitz3.ab2@15657> checkcast2 JMP checkcast
00033C9C <AmiBlitz3.ab2@15660>   MOVE.w cfetchmode,D1
00033CA0 <AmiBlitz3.ab2@15661>   BEQ.w JL_0_A784
00033CA4 <AmiBlitz3.ab2@15662> BRA.w badconerr
00033CAA <AmiBlitz3.ab2@15665> JMP syntaxerropt4
00033CAC <AmiBlitz3.ab2@15669>   NOT.w -(A1)
00033CCE <AmiBlitz3.ab2@15670>   !compare1                                                ;bsr.w tstalpha
00033CD2 <AmiBlitz3.ab2@15671>    BEQ.w JL_0_AF4C
00033CD6 <AmiBlitz3.ab2@15672>   CMP.w #$2A,D0
00033CDA <AmiBlitz3.ab2@15673>    BEQ.w JL_0_AF4C
00033CDE <AmiBlitz3.ab2@15674>   CMP.w #$5C,D0
00033CE2 <AmiBlitz3.ab2@15675>    BEQ.w JL_0_AF4C
00033CE6 <AmiBlitz3.ab2@15676>   CMP.w #$22,D0
00033CEA <AmiBlitz3.ab2@15677>    BEQ.w JL_0_ADC0
00033CEE <AmiBlitz3.ab2@15678>   BTST #$F,D0
00033CF2 <AmiBlitz3.ab2@15679>    BNE.w JL_0_AAF2
00033CF6 <AmiBlitz3.ab2@15680>   CMP.w #"&",D0
00033CFA <AmiBlitz3.ab2@15681>    BEQ.w getvaraddr                                          ;jump to & address of var code
00033CFE <AmiBlitz3.ab2@15682>   CMP.w #"?",D0
00033D02 <AmiBlitz3.ab2@15683>    BEQ.w JL_0_AED4
00033D06 <AmiBlitz3.ab2@15686>   CMP.b #"@",d0
00033D0A <AmiBlitz3.ab2@15687>    BNE syntaxerr
00033D10 <AmiBlitz3.ab2@15688>   TST.b newsyntax
00033D14 <AmiBlitz3.ab2@15689>    BEQ JUMP_syntaxerropt4
00033D1A <AmiBlitz3.ab2@15690>   MOVE.w regnum,D1
00033D1C <AmiBlitz3.ab2@15691>   LSL.w #8,D1
00033D1E <AmiBlitz3.ab2@15692>   LSL.w #1,D1
00033D22 <AmiBlitz3.ab2@15693>   ORI.w #$203C,D1
00033D26 <AmiBlitz3.ab2@15694>   BSR.w writeword
00033D2A <AmiBlitz3.ab2@15695>   CMP.b #$22,(a5)
00033D2E <AmiBlitz3.ab2@15696>    BNE syntaxerr
00033D30 <AmiBlitz3.ab2@15697>   ADDQ #1,a5
00033D32 <AmiBlitz3.ab2@15698>   MOVEQ #0,d0
00033D36 <AmiBlitz3.ab2@15699>   CMP.b #1,d2
00033D3A <AmiBlitz3.ab2@15700>    BEQ 'l3b
00033D3E <AmiBlitz3.ab2@15701>   CMP.b #2,d2
00033D42 <AmiBlitz3.ab2@15702>    BEQ 'l2b
00033D46 <AmiBlitz3.ab2@15703>   CMP.b #4,d2
00033D4A <AmiBlitz3.ab2@15704>    BEQ error_convert_types
00033D4C <AmiBlitz3.ab2@15705>   MOVE.b (a5)+,d0
00033D50 <AmiBlitz3.ab2@15706>   BEQ syntaxerr
00033D54 <AmiBlitz3.ab2@15707>   CMP.b #$22,d0
00033D58 <AmiBlitz3.ab2@15708>   BNE 'l1
00033D5C <AmiBlitz3.ab2@15709>     MOVE.b #0,d0
00033D60 <AmiBlitz3.ab2@15710> BRA 'do
00033D62 <AmiBlitz3.ab2@15713>   ASL.l #8,d0
00033D64 <AmiBlitz3.ab2@15714>   MOVE.b (a5)+,d0
00033D68 <AmiBlitz3.ab2@15715>   BEQ syntaxerr
00033D6C <AmiBlitz3.ab2@15716>   CMP.b #$22,d0
00033D70 <AmiBlitz3.ab2@15717>   BNE 'l2
00033D74 <AmiBlitz3.ab2@15718>     MOVE.b #0,d0
00033D76 <AmiBlitz3.ab2@15719>     ASR.l #8,d0
00033D7A <AmiBlitz3.ab2@15720> BRA 'do
00033D7C <AmiBlitz3.ab2@15723>   ASL.l #8,d0
00033D7E <AmiBlitz3.ab2@15726>   MOVE.b (a5)+,d0
00033D82 <AmiBlitz3.ab2@15727>    BEQ syntaxerr
00033D86 <AmiBlitz3.ab2@15728>    CMP.b #$22,d0
00033D8A <AmiBlitz3.ab2@15729>    BNE 'l3
00033D8E <AmiBlitz3.ab2@15730>    MOVE.b #0,d0
00033D90 <AmiBlitz3.ab2@15731>    ASR.l #8,d0
00033D94 <AmiBlitz3.ab2@15732> BRA 'do
00033D96 <AmiBlitz3.ab2@15735>   ASL.l #8,d0
00033D98 <AmiBlitz3.ab2@15738>   MOVE.b (a5)+,d0
00033D9C <AmiBlitz3.ab2@15739>    BEQ syntaxerr
00033DA0 <AmiBlitz3.ab2@15740>    CMP.b #$22,d0
00033DA4 <AmiBlitz3.ab2@15741>    BNE 'l4
00033DA8 <AmiBlitz3.ab2@15742>    MOVE.b #0,d0
00033DAA <AmiBlitz3.ab2@15743>    ASR.l #8,d0
00033DAE <AmiBlitz3.ab2@15744> BRA 'do
00033DB2 <AmiBlitz3.ab2@15747>    CMP.b #$22,(a5)+
00033DB6 <AmiBlitz3.ab2@15748>    BNE JUMP_error4char
00033DB8 <AmiBlitz3.ab2@15751>   MOVE.l d0,d1
00033DBC <AmiBlitz3.ab2@15752>     BSR writelong
00033DC0 <AmiBlitz3.ab2@15753>     BSR get1bytemain
00033DC2 <AmiBlitz3.ab2@15754> RTS
00033DC6 <AmiBlitz3.ab2@15758>   BSR.w get1bytemain
00033DCA <AmiBlitz3.ab2@15759>   CMP.w #$2E,D0
00033DCE <AmiBlitz3.ab2@15760>    BEQ.b JL_0_A7F4
00033DD8 <AmiBlitz3.ab2@15762>   MOVE.w oldqflag,instringon
00033DDE <AmiBlitz3.ab2@15763>   MOVEA.l lastsourcepos,A5
00033DE0 <AmiBlitz3.ab2@15764>   MOVE.w D2,-(A7)
00033DE4 <AmiBlitz3.ab2@15765>    BSR.w getparameter2
00033DE8 <AmiBlitz3.ab2@15766>    BEQ.w syntaxerr
00033DEE <AmiBlitz3.ab2@15767>   LEA varbase,A2
00033DF2 <AmiBlitz3.ab2@15768>    BSR.w findvariable
00033DF6 <AmiBlitz3.ab2@15769>    BNE.w notypeerr
00033DFA <AmiBlitz3.ab2@15770>   MOVE.w $4(A2),D3
00033DFC <AmiBlitz3.ab2@15771>   EXT.l D3
00033DFE <AmiBlitz3.ab2@15772>   MOVE.w (A7)+,D2
00033E02 <AmiBlitz3.ab2@15773> BRA.w JL_0_B46E
00033E04 <AmiBlitz3.ab2@15777>   MOVE.w D2,-(A7)
00033E08 <AmiBlitz3.ab2@15778>    BSR.w getparameter2
00033E0C <AmiBlitz3.ab2@15779>    BEQ.w syntaxerr
00033E12 <AmiBlitz3.ab2@15780>   LEA newtypebase,A2
00033E16 <AmiBlitz3.ab2@15781>    BSR.w findtype
00033E1A <AmiBlitz3.ab2@15782>    BNE.w notypeerr
00033E1C <AmiBlitz3.ab2@15783>   MOVEQ.l #$00,D3
00033E20 <AmiBlitz3.ab2@15784>   CMP.w #$5C,D0
00033E24 <AmiBlitz3.ab2@15785>    BNE.w JL_0_A832
00033E28 <AmiBlitz3.ab2@15786>    BSR.w getparameter2
00033E2C <AmiBlitz3.ab2@15787>    BEQ.w syntaxerr
00033E30 <AmiBlitz3.ab2@15788>   LEA $4(A2),A2
00033E34 <AmiBlitz3.ab2@15789>    BSR.w findvariable2
00033E38 <AmiBlitz3.ab2@15790>    BNE.w noofferr
00033E3C <AmiBlitz3.ab2@15791>   MOVE.w $4(A2),D3
00033E40 <AmiBlitz3.ab2@15792> BRA.w JL_0_A836
00033E44 <AmiBlitz3.ab2@15796>   MOVE.w $8(A2),D3
00033E46 <AmiBlitz3.ab2@15799>   MOVE.w (A7)+,D2
00033E4A <AmiBlitz3.ab2@15800> BRA.w JL_0_B46E
00033E4C <AmiBlitz3.ab2@15804>   MOVEQ.l #-$01,D3
00033E50 <AmiBlitz3.ab2@15805>    BSR.w get1bytemain
00033E54 <AmiBlitz3.ab2@15806> BRA.w JL_0_B46E
00033E56 <AmiBlitz3.ab2@15810>   MOVEQ.l #$00,D3
00033E5A <AmiBlitz3.ab2@15811>    BSR.w get1bytemain
00033E5E <AmiBlitz3.ab2@15812> BRA.w JL_0_B46E
00033E62 <AmiBlitz3.ab2@15816>   CMP.w #$30,D0
00033E66 <AmiBlitz3.ab2@15817>    BCS.w JL_0_A876
00033E6A <AmiBlitz3.ab2@15818>   CMP.w #$39,D0
00033E6E <AmiBlitz3.ab2@15819>    BLS.w JL_0_A874
00033E72 <AmiBlitz3.ab2@15820>   ANDI.w #$FFDF,D0
00033E76 <AmiBlitz3.ab2@15821>   CMP.w #$46,D0
00033E7A <AmiBlitz3.ab2@15822>    BHI.w JL_0_A876
00033E7E <AmiBlitz3.ab2@15823>   CMP.w #$41,D0
00033E82 <AmiBlitz3.ab2@15824>    BCS.w JL_0_A876
00033E84 <AmiBlitz3.ab2@15827>    CMP.w D0,D0
00033E86 <AmiBlitz3.ab2@15830> RTS
00033E8A <AmiBlitz3.ab2@15834>   CMP.w #$31,D0
00033E8E <AmiBlitz3.ab2@15835>    BEQ.w JL_0_A884
00033E92 <AmiBlitz3.ab2@15836>   CMP.w #$30,D0
00033E94 <AmiBlitz3.ab2@15839> RTS
00033E96 <AmiBlitz3.ab2@15843>    MOVEQ #0,d0
00033E98 <AmiBlitz3.ab2@15844>    MOVE.b (a5)+,d0
00033E9A <AmiBlitz3.ab2@15845>    MOVE.b (a5)+,d0
00033E9E <AmiBlitz3.ab2@15846>    BSR ishex
00033EA2 <AmiBlitz3.ab2@15847>    BNE syntaxerr
00033EA6 <AmiBlitz3.ab2@15848>    SUBI.w #$30,D0
00033EAA <AmiBlitz3.ab2@15849>    CMP.w #$9,D0
00033EAE <AmiBlitz3.ab2@15850>    BLS.w 'l1
00033EB0 <AmiBlitz3.ab2@15851>    SUBQ.w #7,D0
00033EB2 <AmiBlitz3.ab2@15854>    MOVE.l d0,d1
00033EB4 <AmiBlitz3.ab2@15855>    MOVE.b (a5)+,d0
00033EB8 <AmiBlitz3.ab2@15856>      BSR ishex
00033EBC <AmiBlitz3.ab2@15857>     BNE syntaxerr
00033EBE <AmiBlitz3.ab2@15858>     LSL.l #4,d1
00033EC2 <AmiBlitz3.ab2@15859>     SUBI.w #$30,D0
00033EC6 <AmiBlitz3.ab2@15860>    CMP.w #$9,D0
00033ECA <AmiBlitz3.ab2@15861>    BLS.w 'l2
00033ECC <AmiBlitz3.ab2@15862>    SUBQ.w #7,D0
00033ECE <AmiBlitz3.ab2@15865>   ADD.l d1,d0
00033ED0 <AmiBlitz3.ab2@15866> RTS
00033ED4 <AmiBlitz3.ab2@15870>    BSR.w get1bytemain
00033ED8 <AmiBlitz3.ab2@15871>    BSR.w ishex
00033EDC <AmiBlitz3.ab2@15872>    BNE.w syntaxerr
00033EDE <AmiBlitz3.ab2@15873>   MOVEQ.l #$00,D3
00033EE2 <AmiBlitz3.ab2@15874>   CMP.w #5,d2
00033EE6 <AmiBlitz3.ab2@15875>   BNE JL_0_A894
00033EEC <AmiBlitz3.ab2@15876>   CMP.l #newtype_double,a2
00033EF0 <AmiBlitz3.ab2@15877>   BEQ 'doit
00033EF6 <AmiBlitz3.ab2@15878>   CMP.l #newtype_float,a2
00033EFA <AmiBlitz3.ab2@15879>   BNE JL_0_A894
00033F02 <AmiBlitz3.ab2@15882>    fmove.s #0,fp0
00033F08 <AmiBlitz3.ab2@15884>   TST.b fpu
00033F0C <AmiBlitz3.ab2@15885>   BEQ JL_0_A894
00033F12 <AmiBlitz3.ab2@15886>   fmove.w #16,fp1
00033F16 <AmiBlitz3.ab2@15887>   fmul.x fp1,fp0
00033F1A <AmiBlitz3.ab2@15888>   SUBI.w #$30,D0
00033F1E <AmiBlitz3.ab2@15889>   CMP.w #$9,D0
00033F22 <AmiBlitz3.ab2@15890>    BLS.w JL_0_A8AEa
00033F24 <AmiBlitz3.ab2@15891>   SUBQ.w #7,D0
00033F28 <AmiBlitz3.ab2@15894>    fmove.w d0,fp1
00033F2C <AmiBlitz3.ab2@15895>    fadd.x fp1,fp0
00033F30 <AmiBlitz3.ab2@15896>    BSR.w get1bytemain
00033F34 <AmiBlitz3.ab2@15897>    BSR.w ishex
00033F38 <AmiBlitz3.ab2@15898>    BEQ.w JL_0_A894a
00033F3C <AmiBlitz3.ab2@15899> BRA.w nofpregload
00033F42 <AmiBlitz3.ab2@15903>   CMP.l #$10000000,D3
00033F46 <AmiBlitz3.ab2@15904>    BCC.w overerr
00033F48 <AmiBlitz3.ab2@15905>   LSL.l #4,D3
00033F4C <AmiBlitz3.ab2@15906>   SUBI.w #$30,D0
00033F50 <AmiBlitz3.ab2@15907>   CMP.w #$9,D0
00033F54 <AmiBlitz3.ab2@15908>    BLS.w JL_0_A8AE
00033F56 <AmiBlitz3.ab2@15909>   SUBQ.w #7,D0
00033F58 <AmiBlitz3.ab2@15912>   OR.w D0,D3
00033F5C <AmiBlitz3.ab2@15913>    BSR.w get1bytemain
00033F60 <AmiBlitz3.ab2@15914>    BSR.w ishex
00033F64 <AmiBlitz3.ab2@15915>    BEQ.w JL_0_A894
00033F68 <AmiBlitz3.ab2@15916> BRA.w JL_0_B46E
00033F6C <AmiBlitz3.ab2@15920>    BSR.w get1bytemain
00033F70 <AmiBlitz3.ab2@15921>    BSR.w JL_0_A878
00033F74 <AmiBlitz3.ab2@15922>    BNE.w syntaxerr
00033F76 <AmiBlitz3.ab2@15923>    MOVEQ.l #$00,D3
00033F78 <AmiBlitz3.ab2@15926>    LSL.l #1,D3
00033F7C <AmiBlitz3.ab2@15927>    BCS.w overerr
00033F80 <AmiBlitz3.ab2@15928>   SUBI.w #$30,D0
00033F82 <AmiBlitz3.ab2@15929>   OR.w D0,D3
00033F86 <AmiBlitz3.ab2@15930>    BSR.w get1bytemain
00033F8A <AmiBlitz3.ab2@15931>    BSR.w JL_0_A878
00033F8E <AmiBlitz3.ab2@15932>    BEQ.w JL_0_A8CE
00033F92 <AmiBlitz3.ab2@15933> BRA.w JL_0_B46E
00033F94 <AmiBlitz3.ab2@15937>    MOVE.w d2,-(A7)
00033F9C <AmiBlitz3.ab2@15938>    MOVE.b #0,automode
00033FA0 <AmiBlitz3.ab2@15939>    CMP.b #"@",(a5)
00033FA4 <AmiBlitz3.ab2@15940>    BNE 'l1
00033FA6 <AmiBlitz3.ab2@15941>    ADDQ.l #1,a5
00033FAE <AmiBlitz3.ab2@15942>    MOVE.b #1,automode
00033FB2 <AmiBlitz3.ab2@15943>    BSR getparameter2
00033FB6 <AmiBlitz3.ab2@15944>    BSR findlabel2
00033FBA <AmiBlitz3.ab2@15945>    BNE 'addit
00033FBE <AmiBlitz3.ab2@15946> BRA errormsg_autocount
00033FC2 <AmiBlitz3.ab2@15949>   BSR.w addlabelhash
00033FCA <AmiBlitz3.ab2@15950>   MOVE.l #$1,$4(A2)
00033FCE <AmiBlitz3.ab2@15951>   MOVEM.l a2/a5,-(a7)
00033FD4 <AmiBlitz3.ab2@15952>   MOVE.w lastchar,-(a7)
00033FDA <AmiBlitz3.ab2@15953>   LEA autostorename,a5
00033FDE <AmiBlitz3.ab2@15954>   BSR getparameter2
00033FE2 <AmiBlitz3.ab2@15955>   BSR findlabel2
00033FE6 <AmiBlitz3.ab2@15956>   BEQ 'found
00033FEA <AmiBlitz3.ab2@15957>   BSR.w addlabelhash
00033FF2 <AmiBlitz3.ab2@15958>   MOVE.l #$1,$4(A2)
00033FFA <AmiBlitz3.ab2@15959>   MOVE.l #0,8(a2)
00033FFC <AmiBlitz3.ab2@15962>    MOVE.w (a7)+,d0
00034002 <AmiBlitz3.ab2@15963>    MOVE.w d0,lastchar
00034006 <AmiBlitz3.ab2@15964>   MOVE.l 8(a2),d3
0003400E <AmiBlitz3.ab2@15965>   ADD.l #1,8(a2)
00034012 <AmiBlitz3.ab2@15966>   MOVEM.l (a7)+,a2/a5
00034016 <AmiBlitz3.ab2@15967>   MOVE.l d3,8(a2)
0003401A <AmiBlitz3.ab2@15968>   MOVE.l $8(A2),D3
0003401E <AmiBlitz3.ab2@15969> BRA.l 'l3
00034022 <AmiBlitz3.ab2@15972>   BSR.w getparameter2
00034028 <AmiBlitz3.ab2@15973>     TST.b incnif
0003402C <AmiBlitz3.ab2@15974>     BEQ 'lc1
00034030 <AmiBlitz3.ab2@15975>     BSR.w findlabel2
00034034 <AmiBlitz3.ab2@15976>     BNE 'l5
00034036 <AmiBlitz3.ab2@15977>     MOVEQ #1,d3
00034038 <AmiBlitz3.ab2@15978>     MOVE.w (A7)+,D2
0003403C <AmiBlitz3.ab2@15979> BRA JL_0_B46E
0003403E <AmiBlitz3.ab2@15982>   MOVEQ #0,d3
00034040 <AmiBlitz3.ab2@15983>     MOVE.w (A7)+,D2
00034044 <AmiBlitz3.ab2@15984> BRA JL_0_B46E
00034048 <AmiBlitz3.ab2@15987>    BSR.w findlabel2
0003404C <AmiBlitz3.ab2@15988>    BNE.w cnferr
00034054 <AmiBlitz3.ab2@15991>    CMPI.l #$1,$4(A2)
00034058 <AmiBlitz3.ab2@15992>    BNE.w cnferr
0003405C <AmiBlitz3.ab2@15994>    MOVE.l $8(A2),D3
0003405E <AmiBlitz3.ab2@15995>    MOVE.w (A7)+,D2
00034062 <AmiBlitz3.ab2@15996> BRA.w JL_0_B46E
00034068 <AmiBlitz3.ab2@16000>   CLR.w vartype
00034070 <AmiBlitz3.ab2@16001>   MOVE.b #3,peekaddrsize
00034074 <AmiBlitz3.ab2@16002>   BSR.w JL_0_A916
0003407A <AmiBlitz3.ab2@16003>   MOVE.l a2,rightsidetype
0003407C <AmiBlitz3.ab2@16004>   MOVEQ.l #$03,D2
0003407E <AmiBlitz3.ab2@16005> RTS
00034082 <AmiBlitz3.ab2@16009>    BSR.w get1bytemain
00034094 <AmiBlitz3.ab2@16010>    !compare2
00034098 <AmiBlitz3.ab2@16011>    BEQ andop2
0003409C <AmiBlitz3.ab2@16012>    BSR.w getparameter
000340A0 <AmiBlitz3.ab2@16013>    BSR.w JL_0_8E3C
000340A4 <AmiBlitz3.ab2@16014>    BSR.w calcvar
000340A8 <AmiBlitz3.ab2@16015>   CMP.b #$7,D2
000340AC <AmiBlitz3.ab2@16016>    BNE.w JL_0_A960
000340B0 <AmiBlitz3.ab2@16017>   BTST #$F,D2
000340B4 <AmiBlitz3.ab2@16018>    BNE.w JL_0_A94A
000340BA <AmiBlitz3.ab2@16019>   MOVE.w D3,stamp2+2
000340C0 <AmiBlitz3.ab2@16020>   MOVE.l stamp2,D1
000340C4 <AmiBlitz3.ab2@16021>    BSR.w pokela5s
000340C8 <AmiBlitz3.ab2@16022> BRA.w JL_0_A978
000340CE <AmiBlitz3.ab2@16026>   MOVE.w regnum,D1
000340D0 <AmiBlitz3.ab2@16027>   LSL.w #8,D1
000340D2 <AmiBlitz3.ab2@16028>   LSL.w #1,D1
000340D8 <AmiBlitz3.ab2@16029>   OR.w stamp,D1
000340DC <AmiBlitz3.ab2@16030>    BSR.w writeword
000340DE <AmiBlitz3.ab2@16031> RTS
000340E2 <AmiBlitz3.ab2@16035>   BTST #$F,D2
000340E6 <AmiBlitz3.ab2@16036>    BNE.w JL_0_A978
000340EC <AmiBlitz3.ab2@16037>   MOVE.w D3,leaamp+2
000340F2 <AmiBlitz3.ab2@16038>   MOVE.l leaamp,D1
000340F6 <AmiBlitz3.ab2@16039>    BSR.w pokela5s
000340FC <AmiBlitz3.ab2@16042>   MOVE.w regnum,D1
000340FE <AmiBlitz3.ab2@16043>   LSL.w #8,D1
00034100 <AmiBlitz3.ab2@16044>   LSL.w #1,D1
00034106 <AmiBlitz3.ab2@16045>   OR.w leaamp2,D1
0003410A <AmiBlitz3.ab2@16046> BRA.w writeword
0003410E <AmiBlitz3.ab2@16050>   MOVE.w #$D200,D1
00034112 <AmiBlitz3.ab2@16051>    BSR.w Atokejsr
00034114 <AmiBlitz3.ab2@16052>   MOVEQ.l #$03,D2
00034116 <AmiBlitz3.ab2@16053> RTS
0003411A <AmiBlitz3.ab2@16057> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0003411C <AmiBlitz3.ab2@16058>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0003411E <AmiBlitz3.ab2@16059>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
00034122 <AmiBlitz3.ab2@16065>    BSR.w get1bytemain
00034124 <AmiBlitz3.ab2@16066>   MOVE.w D0,D1
00034128 <AmiBlitz3.ab2@16067>    BPL.w syntaxerr
0003412A <AmiBlitz3.ab2@16068>   MOVE.w D2,-(A7)
0003412E <AmiBlitz3.ab2@16069>   BCLR #$F,D1
00034132 <AmiBlitz3.ab2@16070>    BSR.w searchinstr
00034136 <AmiBlitz3.ab2@16071>   MOVE.l $12(A2),D0
0003413A <AmiBlitz3.ab2@16072>   TST.w -$2(A2,D0.L)
0003413E <AmiBlitz3.ab2@16073>    BEQ.w freeerr
00034140 <AmiBlitz3.ab2@16074>   MOVE.w (A7)+,D2
00034142 <AmiBlitz3.ab2@16075> RTS
00034146 <AmiBlitz3.ab2@16079>   MOVE.l $0(A5),D0
0003414A <AmiBlitz3.ab2@16080>    BNE.b ucodeskip
0003414C <AmiBlitz3.ab2@16081>   MOVEQ.l #-$01,D0
00034150 <AmiBlitz3.ab2@16082> BRA.b usedcodef
00034154 <AmiBlitz3.ab2@16085>   SUB.l $0(A5),D0
00034156 <AmiBlitz3.ab2@16088>   LSR.w #8,D0
0003415A <AmiBlitz3.ab2@16093>    MOVE.l $0(A5),D0
0003415E <AmiBlitz3.ab2@16094>    BNE.b ucodeskip2
00034160 <AmiBlitz3.ab2@16095>   MOVEQ.l #-$01,D0
00034164 <AmiBlitz3.ab2@16096> BRA.b usedcode2f
00034168 <AmiBlitz3.ab2@16099>   SUB.l $0(A5),D0                                          ;usedcode2
0003416A <AmiBlitz3.ab2@16100>   LSR.w #8,D0
0003416C <AmiBlitz3.ab2@16103>   LSR.w #8,D0
0003416E <AmiBlitz3.ab2@16108>   MOVE.l D0,-(A7)
00034170 <AmiBlitz3.ab2@16111>   MOVE.l (A7)+,D0
00034172 <AmiBlitz3.ab2@16114>   MOVE.l D0,D0
00034176 <AmiBlitz3.ab2@16120>   BSR.w JL_0_A9A0
0003417A <AmiBlitz3.ab2@16122>   MOVE.w -$2(A2,D0.L),D3
0003417E <AmiBlitz3.ab2@16123>   CMP.w #$9,D3
00034182 <AmiBlitz3.ab2@16124>    BCC.w doused__skip
00034186 <AmiBlitz3.ab2@16128>   LEA usedcode(PC),A0
0003418A <AmiBlitz3.ab2@16129>   LEA usedcodef(PC),A1
00034190 <AmiBlitz3.ab2@16131>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
00034194 <AmiBlitz3.ab2@16132>   ANDI.w #$7,D3
00034196 <AmiBlitz3.ab2@16133>   LSL.w #8,D3
00034198 <AmiBlitz3.ab2@16134>   LSL.w #1,D3
0003419C <AmiBlitz3.ab2@16135>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
000341A0 <AmiBlitz3.ab2@16136> BRA.w doused__skip2
000341A4 <AmiBlitz3.ab2@16141>   LEA usedcode2(PC),A0
000341A8 <AmiBlitz3.ab2@16142>   LEA usedcode2f(PC),A1
000341AE <AmiBlitz3.ab2@16144>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
000341B0 <AmiBlitz3.ab2@16145>   SUBQ.w #8,D3
000341B2 <AmiBlitz3.ab2@16146>   LSL.w #8,D3
000341B4 <AmiBlitz3.ab2@16147>   LSL.w #1,D3
000341B8 <AmiBlitz3.ab2@16148>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
000341BC <AmiBlitz3.ab2@16151>   MOVE.w -$6(A2,D0.L),D3
000341C0 <AmiBlitz3.ab2@16152>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
000341C2 <AmiBlitz3.ab2@16153>   ADDQ.w #4,D3
000341C6 <AmiBlitz3.ab2@16154>   MOVE.w D3,$2(A0)
000341CC <AmiBlitz3.ab2@16155>   MOVE.w regnum,D1
000341D0 <AmiBlitz3.ab2@16156>    BEQ.w doused__skip3
000341D4 <AmiBlitz3.ab2@16157>   MOVE.w usedprep(PC),D1
000341D8 <AmiBlitz3.ab2@16158>    BSR.w writeword
000341DC <AmiBlitz3.ab2@16161>   BSR.w pokecode
000341E2 <AmiBlitz3.ab2@16162>   MOVE.w regnum,D1
000341E6 <AmiBlitz3.ab2@16163>    BEQ.w doused__skip4
000341E8 <AmiBlitz3.ab2@16164>   LSL.w #8,D1
000341EA <AmiBlitz3.ab2@16165>   LSL.w #1,D1
000341EE <AmiBlitz3.ab2@16166>   OR.w usedfix(PC),D1
000341F2 <AmiBlitz3.ab2@16167>    BSR.w writeword
000341F6 <AmiBlitz3.ab2@16168>   MOVE.w useddone(PC),D1
000341FA <AmiBlitz3.ab2@16169>    BSR.w writeword
000341FC <AmiBlitz3.ab2@16172>    MOVEQ.l #$02,D2
00034200 <AmiBlitz3.ab2@16173> BRA.w get1bytemain
00034204 <AmiBlitz3.ab2@16181>    BSR.w JL_0_A9A0
00034206 <AmiBlitz3.ab2@16183>   MOVEQ.l #$00,D3
0003420A <AmiBlitz3.ab2@16184>   MOVE.w -$4(A2,D0.L),D3
0003420E <AmiBlitz3.ab2@16185>    BSR.w get1bytemain
00034212 <AmiBlitz3.ab2@16186> BRA.w JL_0_B46E
00034216 <AmiBlitz3.ab2@16193>    BSR.w get1bytemain
00034218 <AmiBlitz3.ab2@16194>   MOVE.w D0,-(A7)
0003421C <AmiBlitz3.ab2@16195>    BSR.w get1bytemain
00034220 <AmiBlitz3.ab2@16196>   CMP.w #$28,D0
00034224 <AmiBlitz3.ab2@16197>    BNE.w syntaxerr
00034226 <AmiBlitz3.ab2@16198>   MOVE.w (A7)+,D0
0003422A <AmiBlitz3.ab2@16199>    BSR.w JL_0_C340
0003422E <AmiBlitz3.ab2@16200>    BSR.w reget
00034232 <AmiBlitz3.ab2@16201>   CMP.w #$29,D0
00034236 <AmiBlitz3.ab2@16202>    BNE.w syntaxerr
0003423A <AmiBlitz3.ab2@16206>   LEA addrcode(PC),A0
0003423E <AmiBlitz3.ab2@16207>   LEA addrcodef(PC),A1
00034244 <AmiBlitz3.ab2@16208>   MOVE.w -$6(A2),$2(A0)
00034248 <AmiBlitz3.ab2@16209>   MOVE.w $4(A0),D1
0003424C <AmiBlitz3.ab2@16210>   ANDI.w #$FFF8,D1
00034252 <AmiBlitz3.ab2@16211>   OR.w regnum,D1
00034256 <AmiBlitz3.ab2@16212>   MOVE.w D1,$4(A0)
0003425A <AmiBlitz3.ab2@16213>   MOVE.w $6(A0),D1
0003425E <AmiBlitz3.ab2@16214>   ANDI.w #$F1FF,D1
00034264 <AmiBlitz3.ab2@16215>   MOVE.w regnum,D0
00034266 <AmiBlitz3.ab2@16216>   LSL.w #8,D0
00034268 <AmiBlitz3.ab2@16217>   LSL.w #1,D0
0003426A <AmiBlitz3.ab2@16218>   OR.w D0,D1
0003426E <AmiBlitz3.ab2@16219>   MOVE.w D1,$6(A0)
00034272 <AmiBlitz3.ab2@16220>    BSR.w pokecode
00034274 <AmiBlitz3.ab2@16221>   MOVEQ.l #$03,D2
00034278 <AmiBlitz3.ab2@16222> BRA.w get1bytemain
0003427C <AmiBlitz3.ab2@16226>   CMP.w #-$7F4D,D0
00034280 <AmiBlitz3.ab2@16227>    BHI.w JL_0_AAFE
00034284 <AmiBlitz3.ab2@16228> BRA.w syntaxerr
00034288 <AmiBlitz3.ab2@16235> .do_null   CMP.w #$b581,d0
0003428C <AmiBlitz3.ab2@16236>    BNE 'nonull
00034292 <AmiBlitz3.ab2@16237>    MOVE.l d0,lastinstruction
00034296 <AmiBlitz3.ab2@16238>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0003429C <AmiBlitz3.ab2@16239>    MOVE.w regnum,d0
0003429E <AmiBlitz3.ab2@16240>    ASL.l #7,d0
000342A0 <AmiBlitz3.ab2@16241>    ASL.l #2,d0
000342A2 <AmiBlitz3.ab2@16242>    OR.l d0,d1
000342A6 <AmiBlitz3.ab2@16243>    BSR writeword
000342AC <AmiBlitz3.ab2@16244>    JSR get1bytemain
000342AE <AmiBlitz3.ab2@16245>    RTS
000342B2 <AmiBlitz3.ab2@16247> 'nonull CMP.w #$c982,d0
000342B6 <AmiBlitz3.ab2@16248>        BNE nonew_
000342B8 <AmiBlitz3.ab2@16250>   MOVE.l a5,-(a7)
000342BE <AmiBlitz3.ab2@16251>   MOVE.w lastchar,-(a7)
000342C4 <AmiBlitz3.ab2@16252>   JSR get1bytemain
000342C8 <AmiBlitz3.ab2@16253>   CMP.w #"(",d0                                             ; use oldcode
000342CC <AmiBlitz3.ab2@16254>   BNE 'newcode
000342D2 <AmiBlitz3.ab2@16255>   JSR get1bytemain
000342D6 <AmiBlitz3.ab2@16256>   CMP.w #")",d0
000342DA <AmiBlitz3.ab2@16257>   BEQ 'newcode
000342E0 <AmiBlitz3.ab2@16258>   MOVE.w (a7)+,lastchar
000342E2 <AmiBlitz3.ab2@16259>   MOVE.l (a7)+,a5
000342E8 <AmiBlitz3.ab2@16260>   MOVE.w lastchar,d0
000342EC <AmiBlitz3.ab2@16261>   BRA nonew_
000342EE <AmiBlitz3.ab2@16262> 'newcode  MOVE.l a0,-(a7)
000342F4 <AmiBlitz3.ab2@16263>   TST.b blitzparloop
000342F8 <AmiBlitz3.ab2@16264>   BNE 'err
000342FE <AmiBlitz3.ab2@16265>   TST.b funcparloop
00034302 <AmiBlitz3.ab2@16266>   BNE 'err
00034306 <AmiBlitz3.ab2@16267>   BRA 'ok
0003430C <AmiBlitz3.ab2@16268> 'err JMP errornewnotincalls
00034312 <AmiBlitz3.ab2@16269> 'ok  MOVE.l #$203c0000,d1
00034316 <AmiBlitz3.ab2@16270>   BSR writelong                                            ; 68k asm move.l #$xx,d0
00034318 <AmiBlitz3.ab2@16271>   MOVEQ #0,d1
0003431C <AmiBlitz3.ab2@16272>   MOVE.w 8(a0),d1
00034320 <AmiBlitz3.ab2@16273>   BSR writeword
00034324 <AmiBlitz3.ab2@16274>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
00034328 <AmiBlitz3.ab2@16275>   BSR writeword
0003432C <AmiBlitz3.ab2@16276>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
00034330 <AmiBlitz3.ab2@16277>   BSR.w tokejsr2
00034332 <AmiBlitz3.ab2@16278>   MOVE.l (a7)+,a0
00034334 <AmiBlitz3.ab2@16279>   ADDQ.l #6,a7                      ; a5 need not restore
00034338 <AmiBlitz3.ab2@16280>   CMP.w #")",d0
0003433C <AmiBlitz3.ab2@16281>   BNE 'nobracket
00034342 <AmiBlitz3.ab2@16282>   JSR get1bytemain
00034344 <AmiBlitz3.ab2@16283> 'nobracket  RTS
00034348 <AmiBlitz3.ab2@16285> nonew_  CMP.w #-$7F4A,D0
0003434C <AmiBlitz3.ab2@16286>    BEQ.w JL_0_A98C
00034350 <AmiBlitz3.ab2@16287>   CMP.w #-$7F48,D0
00034354 <AmiBlitz3.ab2@16288>    BEQ.w doaddr
00034358 <AmiBlitz3.ab2@16289>   CMP.w #-$7F3C,D0
0003435C <AmiBlitz3.ab2@16290>    BEQ.w domaximum
00034360 <AmiBlitz3.ab2@16291>   CMP.w #-$7F2F,D0
00034364 <AmiBlitz3.ab2@16292>    BEQ.w doused
00034366 <AmiBlitz3.ab2@16293>   MOVE.w D2,-(A7)
00034368 <AmiBlitz3.ab2@16294>   MOVE.w D0,D1
0003436C <AmiBlitz3.ab2@16295>   BCLR #$F,D1
00034370 <AmiBlitz3.ab2@16297>    BSR.w searchinstr
00034372 <AmiBlitz3.ab2@16298>   MOVE.w (A3),D1
00034376 <AmiBlitz3.ab2@16299>   BTST #$1,D1
0003437A <AmiBlitz3.ab2@16300>    BEQ.w noreturn_                                         ;syntax error noreturn
0003437E <AmiBlitz3.ab2@16301>   BTST #$2,D1
00034382 <AmiBlitz3.ab2@16302>    BNE.w JL_0_AC1A
00034384 <AmiBlitz3.ab2@16303>   LSR.w #8,D1
0003438A <AmiBlitz3.ab2@16304>   BTST #$3,$1(A3)
0003438E <AmiBlitz3.ab2@16305>    BEQ.w JL_0_AB4C
00034394 <AmiBlitz3.ab2@16306>    JSR AJL_0_498A
0003439A <AmiBlitz3.ab2@16309>    CLR.l rightsidetype
0003439C <AmiBlitz3.ab2@16310>    MOVE.w D1,-(A7)                                         ;is library instruction
000343A0 <AmiBlitz3.ab2@16311>   CMP.w #$7,D1
000343A4 <AmiBlitz3.ab2@16312>    BNE.w JL_0_AB5E
000343A6 <AmiBlitz3.ab2@16313>   MOVE.l A2,-(A7)
000343AA <AmiBlitz3.ab2@16314>    BSR.w makesbase
000343AC <AmiBlitz3.ab2@16315>   MOVEA.l (A7)+,A2
000343B0 <AmiBlitz3.ab2@16318>     BSR.w JL_0_AFA2
000343B2 <AmiBlitz3.ab2@16319>   MOVE.w D3,-(A7)
000343B6 <AmiBlitz3.ab2@16320>    BSR.w get1bytemain
000343B8 <AmiBlitz3.ab2@16321>   MOVEQ.l #$00,D1
000343BC <AmiBlitz3.ab2@16322>   CMP.w #$28,D0
000343C0 <AmiBlitz3.ab2@16323>    BNE.w JL_0_AB80
000343C6 <AmiBlitz3.ab2@16324>    JSR JL_0_66F6
000343C8 <AmiBlitz3.ab2@16325>   TST.w D1
000343CC <AmiBlitz3.ab2@16326>    BEQ.w syntaxerr
000343D0 <AmiBlitz3.ab2@16327> BRA.w JL_0_AB84
000343DA <AmiBlitz3.ab2@16332>   MOVE.w oldqflag,instringon
000343E0 <AmiBlitz3.ab2@16333>   MOVEA.l lastsourcepos,A5
000343E6 <AmiBlitz3.ab2@16336>    MOVE.w regnum,-(A7)
000343F0 <AmiBlitz3.ab2@16337>    MOVE.w regnum,regnumstore
000343F6 <AmiBlitz3.ab2@16338>    TST.b fpu
000343FA <AmiBlitz3.ab2@16339>             BEQ 'nofloat
00034400 <AmiBlitz3.ab2@16340>             CMP.w #$ffff,28(a3)
00034404 <AmiBlitz3.ab2@16341>             BNE 'nofloat
0003440A <AmiBlitz3.ab2@16342>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0003440E <AmiBlitz3.ab2@16343>             BEQ 'nofloat
00034414 <AmiBlitz3.ab2@16344>             CMP.w #$3c02,34(a3)                            ;int skip
00034418 <AmiBlitz3.ab2@16345>             BEQ 'quick
0003441C <AmiBlitz3.ab2@16346>             CMP.b #5,(a3)
00034420 <AmiBlitz3.ab2@16347>             BNE 'nofloat
00034426 <AmiBlitz3.ab2@16350>             CLR.l load_var_addr
0003442A <AmiBlitz3.ab2@16351> BRA 'isfpu
00034430 <AmiBlitz3.ab2@16354>    CLR.w regnum
00034432 <AmiBlitz3.ab2@16357>    MOVE.w D1,-(A7)
00034438 <AmiBlitz3.ab2@16358>   BTST #$3,$1(A3)
0003443C <AmiBlitz3.ab2@16359>    BEQ.w JL_0_ABB0
00034440 <AmiBlitz3.ab2@16378>   MOVE.w $6(A7),D1
00034446 <AmiBlitz3.ab2@16379>   MOVE.w d1,peeksize
0003444A <AmiBlitz3.ab2@16389>   ORI.w #$7000,D1
0003444E <AmiBlitz3.ab2@16390>   BSR.w writeword                                          ;write peekmode
00034454 <AmiBlitz3.ab2@16393>   ADDQ.w #1,regnum
00034456 <AmiBlitz3.ab2@16394>   MOVE.w (A7),D1
0003445E <AmiBlitz3.ab2@16397>   MOVE.w 2(a7),tempregnum
00034464 <AmiBlitz3.ab2@16398>   JSR JL_0_4878
00034466 <AmiBlitz3.ab2@16399>   TST.w (A7)+
0003446A <AmiBlitz3.ab2@16400>   BEQ.w JL_0_ABC6
0003446E <AmiBlitz3.ab2@16401>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
00034472 <AmiBlitz3.ab2@16402>   BNE.w errorbracketmiss                                    ; was syntax error
00034478 <AmiBlitz3.ab2@16403>   CLR.l lasttoken
0003447C <AmiBlitz3.ab2@16404>   BSR.w get1bytemain
0003447E <AmiBlitz3.ab2@16407>    MOVE.w (A7)+,D1
00034484 <AmiBlitz3.ab2@16408>   MOVE.w D1,regnum
00034488 <AmiBlitz3.ab2@16409>    BEQ.w JL_0_ABDE
0003448E <AmiBlitz3.ab2@16410>    CMP.w #$3c01,24(a2)                                     ;val skipped
00034492 <AmiBlitz3.ab2@16411>    BNE 'noval
00034498 <AmiBlitz3.ab2@16412>    TST.b fpu
0003449C <AmiBlitz3.ab2@16413>    BEQ 'noval
000344A2 <AmiBlitz3.ab2@16414>    CLR.l load_var_addr
000344A4 <AmiBlitz3.ab2@16415>    MOVEQ #0,d1
000344AA <AmiBlitz3.ab2@16416>    MOVE.w regnum,d1
000344AC <AmiBlitz3.ab2@16417>    LSL.l #7,d1
000344B2 <AmiBlitz3.ab2@16418>    OR.l #$f2000000,d1
000344B6 <AmiBlitz3.ab2@16419>    BSR writelong
000344BA <AmiBlitz3.ab2@16420> BRA JL_0_ABDE
000344C0 <AmiBlitz3.ab2@16424>    CMP.w #$3c02,24(a2)                                     ;int skipped
000344C4 <AmiBlitz3.ab2@16425>    BEQ 'quick
000344C8 <AmiBlitz3.ab2@16426>    CMP.b #5,d2
000344CC <AmiBlitz3.ab2@16427>    BNE 'nofpu
000344D2 <AmiBlitz3.ab2@16428>    TST.b fpu
000344D6 <AmiBlitz3.ab2@16429>    BEQ 'nofpu
000344DC <AmiBlitz3.ab2@16434>    CLR.l load_var_addr
000344E0 <AmiBlitz3.ab2@16435> BRA JL_0_ABDE
000344E2 <AmiBlitz3.ab2@16438>   LSL.w #8,D1
000344E4 <AmiBlitz3.ab2@16439>   LSL.w #1,D1
000344E8 <AmiBlitz3.ab2@16440>   ORI.w #$2000,D1
000344EC <AmiBlitz3.ab2@16441>   BSR.w writeword                                          ;write move.l d0,dx
000344F2 <AmiBlitz3.ab2@16442>   TST.b fpu
000344F6 <AmiBlitz3.ab2@16443>   BEQ JL_0_ABDE
000344F8 <AmiBlitz3.ab2@16444>   MOVEQ #0,d1
000344FE <AmiBlitz3.ab2@16445>   MOVE.w regnum,d1
00034500 <AmiBlitz3.ab2@16446>   LSL.l #7,d1
00034506 <AmiBlitz3.ab2@16447>   OR.l #$f2000000,d1
00034508 <AmiBlitz3.ab2@16451>        MOVE.w (A7)+,D3
0003450C <AmiBlitz3.ab2@16452>        BEQ.w JL_0_ABFC
00034512 <AmiBlitz3.ab2@16453>        TST.b fpu
00034516 <AmiBlitz3.ab2@16454>        BEQ 'nofpu
00034518 <AmiBlitz3.ab2@16455>       MOVE.l d0,-(a7)
0003451A <AmiBlitz3.ab2@16456>        MOVE.l a0,-(a7)
00034520 <AmiBlitz3.ab2@16457>        MOVE.l stacktrack,d1
00034526 <AmiBlitz3.ab2@16458>        LEA fpustackbase,a0
0003452E <AmiBlitz3.ab2@16459>        MOVE.w 0(a0,d1),regmask
00034530 <AmiBlitz3.ab2@16460>        MOVE.l (a7)+,a0
00034534 <AmiBlitz3.ab2@16461>       MOVE.w #8,d0
00034538 <AmiBlitz3.ab2@16464>       BEQ 'ready
0003453E <AmiBlitz3.ab2@16465>       BTST d0,regmask
00034542 <AmiBlitz3.ab2@16466>       BEQ 'noa7
00034544 <AmiBlitz3.ab2@16467>       MOVEQ #0,d1
00034546 <AmiBlitz3.ab2@16468>       MOVE.w d0,d1
00034548 <AmiBlitz3.ab2@16469>       SUBQ.w #1,d1
0003454A <AmiBlitz3.ab2@16470>       ASL #7,d1
00034550 <AmiBlitz3.ab2@16472>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
00034554 <AmiBlitz3.ab2@16473>       BSR writelong
0003455A <AmiBlitz3.ab2@16474>       SUBQ.l #2,stacktrack
0003455C <AmiBlitz3.ab2@16477>       SUBQ.w #1,d0
00034560 <AmiBlitz3.ab2@16478>       BNE 'loop
00034562 <AmiBlitz3.ab2@16481>       MOVE.l (a7)+,d0
00034568 <AmiBlitz3.ab2@16482>       SUBQ.l #2,stacktrack                                 ;int track
0003456C <AmiBlitz3.ab2@16485>    MOVE.w #$4CDF,D1
00034570 <AmiBlitz3.ab2@16486>    BSR.w writeword                                         ;write movem.l (a7)+,
00034572 <AmiBlitz3.ab2@16487>   MOVEQ.l #$00,D1
00034574 <AmiBlitz3.ab2@16488>   MOVEQ.l #$0F,D4
00034576 <AmiBlitz3.ab2@16491>     LSL.w #1,D3
00034578 <AmiBlitz3.ab2@16492>     ROXR.w #1,D1
0003457C <AmiBlitz3.ab2@16493>   DBF D4,JL_0_ABF0
00034580 <AmiBlitz3.ab2@16495>    BSR.w writeword
00034586 <AmiBlitz3.ab2@16496>    TST.b fast
0003458A <AmiBlitz3.ab2@16497>    BEQ JL_0_ABFC
00034590 <AmiBlitz3.ab2@16498>    TST.w regnum
00034594 <AmiBlitz3.ab2@16499>    BEQ JL_0_ABFC
0003459A <AmiBlitz3.ab2@16500>    CMP.w #$3c0e,$1c(a3)                                    ;true
0003459E <AmiBlitz3.ab2@16501>    BNE 'l1
000345A4 <AmiBlitz3.ab2@16502>    MOVE.w regnum,d1
000345A6 <AmiBlitz3.ab2@16503>    ASL.l #8,d1
000345A8 <AmiBlitz3.ab2@16504>    ASL.l #1,d1
000345AC <AmiBlitz3.ab2@16505>    OR.w #$70ff,d1
000345B6 <AmiBlitz3.ab2@16506>    SUB.l #12,destpointer
000345BA <AmiBlitz3.ab2@16507>    BSR writeword
000345C0 <AmiBlitz3.ab2@16510>   CMP.w #$3c0f,$1c(a3)                                     ;false
000345C4 <AmiBlitz3.ab2@16511>    BNE 'l2
000345CA <AmiBlitz3.ab2@16512>     MOVE.w regnum,d1
000345CC <AmiBlitz3.ab2@16513>     ASL.l #8,d1
000345CE <AmiBlitz3.ab2@16514>     ASL.l #1,d1
000345D2 <AmiBlitz3.ab2@16515>     OR.w #$7000,d1
000345DC <AmiBlitz3.ab2@16516>     SUB.l #12,destpointer
000345E0 <AmiBlitz3.ab2@16517>     BSR writeword
000345E2 <AmiBlitz3.ab2@16521>    MOVE.w (A7)+,D2
000345E6 <AmiBlitz3.ab2@16522>   CMP.w #$7,D2                                             ;destination var type
000345EA <AmiBlitz3.ab2@16523>    BNE.w JL_0_AC16
000345F0 <AmiBlitz3.ab2@16524>   MOVE.w putstlen,D1
000345F6 <AmiBlitz3.ab2@16525>   OR.w regnum,D1
000345FA <AmiBlitz3.ab2@16526>    BSR.w writeword
000345FE <AmiBlitz3.ab2@16529> BRA.w JL_0_AF66
00034602 <AmiBlitz3.ab2@16534>   MOVE.w $6(A3),D1
00034606 <AmiBlitz3.ab2@16535>    BSR.w uselib
0003460A <AmiBlitz3.ab2@16536>    BSR.w JL_0_AD40
0003460C <AmiBlitz3.ab2@16537>   MOVE.l D4,D1
0003460E <AmiBlitz3.ab2@16538>   MOVE.l D5,-(A7)
00034612 <AmiBlitz3.ab2@16539>    BSR.w JL_0_AD38
00034616 <AmiBlitz3.ab2@16540>   MOVE.w $A(A1),-(A7)
00034618 <AmiBlitz3.ab2@16541>   ADDQ.w #8,A3
0003461A <AmiBlitz3.ab2@16542>   MOVE.w (A3)+,-(A7)
0003461C <AmiBlitz3.ab2@16543>   MOVE.l A3,-(A7)
00034620 <AmiBlitz3.ab2@16544>    BSR.w get1bytemain
00034622 <AmiBlitz3.ab2@16545>   MOVE.w D0,-(A7)
00034624 <AmiBlitz3.ab2@16546>   MOVEQ.l #$00,D3
0003462A <AmiBlitz3.ab2@16547>   JSR checka4a5
0003462C <AmiBlitz3.ab2@16549>   MOVE.b (A3)+,D1
00034630 <AmiBlitz3.ab2@16550>    BMI.w JL_0_AC6A
00034632 <AmiBlitz3.ab2@16551>   MOVEQ.l #$03,D2
00034634 <AmiBlitz3.ab2@16552>   ADDQ.w #1,D3
00034638 <AmiBlitz3.ab2@16553>   MOVEM.l D3/A3,-(A7)
0003463E <AmiBlitz3.ab2@16554>   MOVE.b funcparloop,-(a7)
00034644 <AmiBlitz3.ab2@16555>   CLR.b funcparloop
0003464A <AmiBlitz3.ab2@16556>   MOVE.b blitzparloop,-(a7)
00034652 <AmiBlitz3.ab2@16557>   MOVE.b #1,blitzparloop
00034658 <AmiBlitz3.ab2@16558>   MOVE.l lasttoken,-(a7)
0003465E <AmiBlitz3.ab2@16559>   MOVE.l leftsidetype,-(a7)
00034664 <AmiBlitz3.ab2@16560>   MOVE.l rightsidetype,-(a7)
00034668 <AmiBlitz3.ab2@16561>   BSR.w peval
0003466E <AmiBlitz3.ab2@16562>   MOVE.l (a7)+,rightsidetype
00034674 <AmiBlitz3.ab2@16563>   MOVE.l (a7)+,leftsidetype
0003467A <AmiBlitz3.ab2@16564>   MOVE.l (a7)+,lasttoken
00034680 <AmiBlitz3.ab2@16565>   MOVE.b (a7)+,blitzparloop
00034686 <AmiBlitz3.ab2@16566>   MOVE.b (a7)+,funcparloop
0003468C <AmiBlitz3.ab2@16567>   SUBQ.w #4,a2offset
00034690 <AmiBlitz3.ab2@16568>   MOVEM.l (A7)+,D3/A3
00034694 <AmiBlitz3.ab2@16569>   CMP.w #$2C,D0
00034698 <AmiBlitz3.ab2@16570>    BEQ.w JL_0_AC40
0003469A <AmiBlitz3.ab2@16571>   TST.b (A3)
0003469E <AmiBlitz3.ab2@16572>    BPL.w syntaxerr
000346A0 <AmiBlitz3.ab2@16575>   MOVE.w (A7)+,D1
000346A4 <AmiBlitz3.ab2@16576>    BSR.w JL_0_AD04
000346A6 <AmiBlitz3.ab2@16577>   MOVEA.l (A7)+,A3
000346A8 <AmiBlitz3.ab2@16578>   SUBQ.w #1,D3
000346AC <AmiBlitz3.ab2@16579>    BMI.w JL_0_ACBE
000346AE <AmiBlitz3.ab2@16582>   TST.b (A3)+
000346B2 <AmiBlitz3.ab2@16583>    BPL.w JL_0_AC78
000346B4 <AmiBlitz3.ab2@16584>   SUBQ.w #1,A3
000346B6 <AmiBlitz3.ab2@16587>     MOVEQ.l #$00,D1
000346B8 <AmiBlitz3.ab2@16588>     MOVE.b -(A3),D1
000346BC <AmiBlitz3.ab2@16589>     BTST #$4,D1
000346C0 <AmiBlitz3.ab2@16590>      BNE.w JL_0_ACAA
000346C6 <AmiBlitz3.ab2@16591>     CMP.w regnum,D1
000346CA <AmiBlitz3.ab2@16592>      BCC.w JL_0_AC9E
000346CC <AmiBlitz3.ab2@16593>     BSET D1,D5
000346CE <AmiBlitz3.ab2@16594>     MOVEQ.l #$0F,D0
000346D0 <AmiBlitz3.ab2@16595>     SUB.w D1,D0
000346D2 <AmiBlitz3.ab2@16596>     BSET D0,D4
000346D4 <AmiBlitz3.ab2@16599>     LSL.w #8,D1
000346D6 <AmiBlitz3.ab2@16600>     LSL.w #1,D1
000346DA <AmiBlitz3.ab2@16601>     ORI.w #$201F,D1
000346DE <AmiBlitz3.ab2@16602>   BRA.w JL_0_ACB6
000346E2 <AmiBlitz3.ab2@16605>     ANDI.w #$7,D1
000346E4 <AmiBlitz3.ab2@16606>     LSL.w #8,D1
000346E6 <AmiBlitz3.ab2@16607>     LSL.w #1,D1
000346EA <AmiBlitz3.ab2@16608>     ORI.w #$205F,D1
000346EE <AmiBlitz3.ab2@16611>      BSR.w writeword
000346F2 <AmiBlitz3.ab2@16612>   DBF D3,JL_0_AC80
000346F8 <AmiBlitz3.ab2@16615>   MOVE.w (A7)+,libjsr+2
000346FE <AmiBlitz3.ab2@16616>   MOVE.w (A7)+,libbase+2
00034704 <AmiBlitz3.ab2@16617>   MOVE.l libbase,D1
00034708 <AmiBlitz3.ab2@16618>    BSR.w writelong
0003470E <AmiBlitz3.ab2@16619>   MOVE.l libjsr,D1
00034712 <AmiBlitz3.ab2@16620>    BSR.w writelong
00034718 <AmiBlitz3.ab2@16621>   MOVE.w regnum,D1
0003471C <AmiBlitz3.ab2@16622>    BEQ.w JL_0_ACF4
0003471E <AmiBlitz3.ab2@16623>   LSL.w #8,D1
00034720 <AmiBlitz3.ab2@16624>   LSL.w #1,D1
00034724 <AmiBlitz3.ab2@16625>   ORI.w #$2000,D1
00034728 <AmiBlitz3.ab2@16626>    BSR.w writeword
0003472A <AmiBlitz3.ab2@16629>   MOVE.l (A7)+,D1
0003472E <AmiBlitz3.ab2@16630>    BSR.w JL_0_AD38
00034734 <AmiBlitz3.ab2@16631>    JSR restorea4a5
00034736 <AmiBlitz3.ab2@16632>   MOVEQ.l #$03,D2
0003473A <AmiBlitz3.ab2@16633>    BSR.w reget
0003473E <AmiBlitz3.ab2@16634> BRA.w JL_0_AF66
00034740 <AmiBlitz3.ab2@16637>   TST.w D3
00034744 <AmiBlitz3.ab2@16638>    BEQ.w JL_0_AD1E
00034748 <AmiBlitz3.ab2@16639>   CMP.w #$28,D1
0003474C <AmiBlitz3.ab2@16640>    BNE.w syntaxerr
00034750 <AmiBlitz3.ab2@16641>   CMP.w #$29,D0
00034754 <AmiBlitz3.ab2@16642>    BNE.w syntaxerr
00034758 <AmiBlitz3.ab2@16643> BRA.w get1bytemain
0003475C <AmiBlitz3.ab2@16646>   CMP.w #$28,D1
00034760 <AmiBlitz3.ab2@16647>    BNE.w JL_0_AD36
00034764 <AmiBlitz3.ab2@16648>    BSR.w get1bytemain
00034768 <AmiBlitz3.ab2@16649>   CMP.w #$29,D0
0003476C <AmiBlitz3.ab2@16650>    BNE.w syntaxerr
00034770 <AmiBlitz3.ab2@16651> BRA.w get1bytemain
00034772 <AmiBlitz3.ab2@16654> RTS
00034774 <AmiBlitz3.ab2@16657>   TST.w D1
00034778 <AmiBlitz3.ab2@16658>    BNE.w writelong
0003477A <AmiBlitz3.ab2@16659> RTS
0003477E <AmiBlitz3.ab2@16663>   MOVE.w #$48E7,D4
00034780 <AmiBlitz3.ab2@16664>   SWAP D4
00034782 <AmiBlitz3.ab2@16665>   CLR.w D4
00034786 <AmiBlitz3.ab2@16666>   MOVE.w #$4CDF,D5
00034788 <AmiBlitz3.ab2@16667>   SWAP D5
0003478A <AmiBlitz3.ab2@16668>   CLR.w D5
00034790 <AmiBlitz3.ab2@16669>   MOVE.w regnum,D1
00034794 <AmiBlitz3.ab2@16670>    BEQ.w JL_0_AD74
00034798 <AmiBlitz3.ab2@16671>   BSET #$F,D4
0003479C <AmiBlitz3.ab2@16672>   BSET #$0,D5
000347A0 <AmiBlitz3.ab2@16673>   CMP.w #$2,D1
000347A4 <AmiBlitz3.ab2@16674>    BCS.w JL_0_AD72
000347A8 <AmiBlitz3.ab2@16677>   BSET #$E,D4
000347AC <AmiBlitz3.ab2@16678>   BSET #$1,D5
000347AE <AmiBlitz3.ab2@16681> RTS
000347B4 <AmiBlitz3.ab2@16684>   TST.w fuckpos
000347B8 <AmiBlitz3.ab2@16685>   BNE.w JL_0_AD6A
000347BA <AmiBlitz3.ab2@16686> RTS
000347BC <AmiBlitz3.ab2@16689> fuckpos:  Ds.w 1
000347C2 <AmiBlitz3.ab2@16693>   MOVE.w sbasegot,D1
000347C6 <AmiBlitz3.ab2@16694>    BEQ.w makesbase__skip
000347CA <AmiBlitz3.ab2@16698>   MOVE.w sbgot(PC),D1
000347CE <AmiBlitz3.ab2@16699>    BNE.w makesbase__skip2
000347D6 <AmiBlitz3.ab2@16703>   MOVE.w #$0002,sbgot
000347DC <AmiBlitz3.ab2@16704>   MOVE.w movea3a7,D1
000347E0 <AmiBlitz3.ab2@16705> BRA.w writeword
000347E2 <AmiBlitz3.ab2@16708> RTS
000347EA <AmiBlitz3.ab2@16713>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
000347F0 <AmiBlitz3.ab2@16716>   MOVE.l #$C601,D1
000347F8 <AmiBlitz3.ab2@16717>   MOVE.w #-1,sbasegot
000347FE <AmiBlitz3.ab2@16718>   MOVE.l d1,lastinstruction
00034802 <AmiBlitz3.ab2@16719>   BSR.w Atokejsr
00034804 <AmiBlitz3.ab2@16720> RTS
0003480E <AmiBlitz3.ab2@16725>   MOVE.l data1,litdata1
00034814 <AmiBlitz3.ab2@16726>   TST.b fast
00034818 <AmiBlitz3.ab2@16727>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0003481C <AmiBlitz3.ab2@16731> BRA 'l50                                                   ;to deactivate
00034822 <AmiBlitz3.ab2@16737>   TST.b optistring
00034826 <AmiBlitz3.ab2@16738>   BNE.s 'l21
0003482C <AmiBlitz3.ab2@16739>   CLR.b string1
00034834 <AmiBlitz3.ab2@16740>   MOVE.b #1,optistring
0003483A <AmiBlitz3.ab2@16741>   TST.b nostringopt
0003483E <AmiBlitz3.ab2@16742>   BNE 'l21
00034840 <AmiBlitz3.ab2@16743>   MOVE.l a5,a4
00034842 <AmiBlitz3.ab2@16744>   SUBQ.l #1,a4
00034844 <AmiBlitz3.ab2@16747>     TST.b (a4)
00034848 <AmiBlitz3.ab2@16748>     BMI 'l19a
0003484C <AmiBlitz3.ab2@16749>     BEQ.s 'l20
00034850 <AmiBlitz3.ab2@16750>     CMP.b #$22,(a4)
00034854 <AmiBlitz3.ab2@16751>     BEQ.s 'l19
0003485A <AmiBlitz3.ab2@16754>     TST.w string1
0003485E <AmiBlitz3.ab2@16755>     BNE 'l11
00034862 <AmiBlitz3.ab2@16756>     CMP.b #":",(a4)
00034866 <AmiBlitz3.ab2@16757>     BEQ.s 'l20
0003486A <AmiBlitz3.ab2@16758>     CMP.b #";",(a4)
0003486E <AmiBlitz3.ab2@16759>     BEQ.s 'l20
00034872 <AmiBlitz3.ab2@16760>     CMP.b #"+",(a4)
00034876 <AmiBlitz3.ab2@16761>     BEQ.s 'l21
0003487A <AmiBlitz3.ab2@16762>     CMP.b #",",(a4)
0003487E <AmiBlitz3.ab2@16763>     BEQ.s 'l20                                             ;was l21
00034882 <AmiBlitz3.ab2@16764>     CMP.b #")",(a4)
00034886 <AmiBlitz3.ab2@16765>     BEQ.s 'l20                                             ;was l21
00034888 <AmiBlitz3.ab2@16768>     ADDQ.l #1,a4
0003488C <AmiBlitz3.ab2@16769> BRA.s 'l10
00034894 <AmiBlitz3.ab2@16772>   BCHG #0,string1
00034898 <AmiBlitz3.ab2@16773> BRA 'l18
0003489A <AmiBlitz3.ab2@16776>   ADDQ.l #1,a4
0003489C <AmiBlitz3.ab2@16777>   TST.b (a4)
000348A0 <AmiBlitz3.ab2@16778>   BEQ 'l21
000348A4 <AmiBlitz3.ab2@16779> BRA 'l11
000348A6 <AmiBlitz3.ab2@16782>   MOVE.l a5,a4
000348A8 <AmiBlitz3.ab2@16783>   SUBQ.l #1,a4
000348AC <AmiBlitz3.ab2@16786>   CMP.b #$20,-(a4)
000348B0 <AmiBlitz3.ab2@16787>   BEQ 'll1
000348B4 <AmiBlitz3.ab2@16788>   CMP.b #"+",(a4)
000348B8 <AmiBlitz3.ab2@16789>   BEQ 'l21
000348C0 <AmiBlitz3.ab2@16804>   MOVE.b #2,optistring
000348C8 <AmiBlitz3.ab2@16807>   CMP.b #2,optistring
000348CC <AmiBlitz3.ab2@16808>   BEQ.s 'l100
000348D0 <AmiBlitz3.ab2@16811>   BSR.w makesbase
000348D4 <AmiBlitz3.ab2@16812>   BSR.w pokedata1                                          ;writestringsizespace
000348D8 <AmiBlitz3.ab2@16813>   BSR.w pokedata1
000348DA <AmiBlitz3.ab2@16816>   MOVEQ.l #$00,D2
000348E0 <AmiBlitz3.ab2@16819>     MOVE.l a5,lastsourcepos
000348E2 <AmiBlitz3.ab2@16820>     MOVEQ #0,d0
000348E4 <AmiBlitz3.ab2@16821>     MOVE.b (a5)+,d0
000348E6 <AmiBlitz3.ab2@16822>     TST.w D0
000348EA <AmiBlitz3.ab2@16823>      BEQ.w notqerr
000348EE <AmiBlitz3.ab2@16824>     CMP.w #$22,D0                                          ; --- " ---
000348F2 <AmiBlitz3.ab2@16825>      BEQ.w JL_0_ADF6
000348F6 <AmiBlitz3.ab2@16826>     CMP.b #"\",d0
000348FA <AmiBlitz3.ab2@16827>      BNE 'l1
000348FE <AmiBlitz3.ab2@16828>     CMP.b #"\",(a5)
00034902 <AmiBlitz3.ab2@16829>      BNE 'l1
00034908 <AmiBlitz3.ab2@16830>     TST.b newsyntax
0003490C <AmiBlitz3.ab2@16831>      BEQ 'l1
00034912 <AmiBlitz3.ab2@16832>     CMP.w #"\\",1(a5)                                      ; new compiler constants
00034916 <AmiBlitz3.ab2@16833>     BNE 'l2
00034918 <AmiBlitz3.ab2@16834>     ADDQ #2,a5
0003491A <AmiBlitz3.ab2@16837>     ADDQ.w #1,D2
0003491C <AmiBlitz3.ab2@16838>     MOVE.w D0,D1
00034920 <AmiBlitz3.ab2@16839>     BSR.w pokedata1b                                        ;writestring
00034924 <AmiBlitz3.ab2@16840> BRA.w writestring
0003492A <AmiBlitz3.ab2@16843>     JSR check_newconstants
0003492E <AmiBlitz3.ab2@16844> BRA writestring
00034934 <AmiBlitz3.ab2@16847>   NOT instringon
0003493A <AmiBlitz3.ab2@16848>   MOVE.w dontwrite,D1
0003493E <AmiBlitz3.ab2@16849>   BNE.w JL_0_AE0A
00034946 <AmiBlitz3.ab2@16850>   CMP.b #2,optistring
0003494A <AmiBlitz3.ab2@16851>   BEQ 'l10
00034950 <AmiBlitz3.ab2@16852>     MOVEA.l litdata1,A0
00034952 <AmiBlitz3.ab2@16853>     CLR.w (A0)+                                            ;writesize
00034954 <AmiBlitz3.ab2@16854>     MOVE.w D2,(A0)
00034958 <AmiBlitz3.ab2@16858>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0003495E <AmiBlitz3.ab2@16859>   ADDQ.l #1,data1
00034966 <AmiBlitz3.ab2@16860>   BCLR #$0,data1+3
00034968 <AmiBlitz3.ab2@16861>   MOVEQ.l #$07,D2
0003496C <AmiBlitz3.ab2@16862> BRA.w get1bytemain
00034970 <AmiBlitz3.ab2@16866>   BSR.w makename2
00034974 <AmiBlitz3.ab2@16867>   BSR.w findlabel2
00034978 <AmiBlitz3.ab2@16868>   BEQ.w JL_0_AE4A
0003497C <AmiBlitz3.ab2@16869>   BSR.w addlabelhash
00034980 <AmiBlitz3.ab2@16870>   CLR.l $4(A2)
00034984 <AmiBlitz3.ab2@16871>   CLR.l $8(A2)
0003498C <AmiBlitz3.ab2@16873>   MOVE.w linenumat+2,$10(A2)
00034992 <AmiBlitz3.ab2@16874>   MOVE.w linenumat,d0
00034994 <AmiBlitz3.ab2@16875>   MOVEQ #0,d1
00034998 <AmiBlitz3.ab2@16876>   MOVE.b -1(a2,d7),d1
0003499C <AmiBlitz3.ab2@16877>   MOVE.w d0,0(a2,d1)
000349A0 <AmiBlitz3.ab2@16878> BRA.w JL_0_AE52
000349A4 <AmiBlitz3.ab2@16881>   TST.l $8(A2)
000349A8 <AmiBlitz3.ab2@16882>   BNE.w JL_0_AE88
000349AE <AmiBlitz3.ab2@16885>   MOVEA.l _execbase,A6
000349B0 <AmiBlitz3.ab2@16886>   MOVEQ.l #$0C+2,D0
000349B2 <AmiBlitz3.ab2@16887>   MOVEQ.l #$01,D1
000349B8 <AmiBlitz3.ab2@16888>   MOVE.l mempool,a0
000349BC <AmiBlitz3.ab2@16889>   JSR _AllocPooled(a6)
000349BE <AmiBlitz3.ab2@16891>   MOVEA.l D0,A0
000349C2 <AmiBlitz3.ab2@16892>   MOVE.l $4(A2),(A0)
000349C6 <AmiBlitz3.ab2@16893>   MOVE.l A0,$4(A2)
000349CE <AmiBlitz3.ab2@16894>   MOVE.l destpointer,$4(A0)
000349D2 <AmiBlitz3.ab2@16895>   ADDQ.l #2,$4(A0)
000349DA <AmiBlitz3.ab2@16896>   MOVE.w procnum,$8(A0)
000349E2 <AmiBlitz3.ab2@16897>   MOVE.w linenumat+2,$A(A0)
000349EA <AmiBlitz3.ab2@16898>   MOVE.w linenumat,$c(a0)
000349EC <AmiBlitz3.ab2@16899> RTS
000349F0 <AmiBlitz3.ab2@16902>   MOVE.l $4(A2),D1
000349F4 <AmiBlitz3.ab2@16903>   BTST #$0,D1
000349F8 <AmiBlitz3.ab2@16904>    BNE.w illlaberr
000349FE <AmiBlitz3.ab2@16905>   MOVE.w procnum,D1
00034A02 <AmiBlitz3.ab2@16906>   CMP.w $10(A2),D1
00034A06 <AmiBlitz3.ab2@16907>    BNE.w referr
00034A08 <AmiBlitz3.ab2@16908> RTS
00034A0A <AmiBlitz3.ab2@16912>   MOVE.w D0,-(A7)
00034A12 <AmiBlitz3.ab2@16913>   CMP.b #2,optistring
00034A16 <AmiBlitz3.ab2@16914>   BEQ 'l10
00034A1C <AmiBlitz3.ab2@16917>   MOVE.w numtoa0,D1
00034A20 <AmiBlitz3.ab2@16918>    BSR.w writeword
00034A24 <AmiBlitz3.ab2@16919>    BSR.w addoff
00034A2A <AmiBlitz3.ab2@16920>   MOVE.l litdata1,D1
00034A2E <AmiBlitz3.ab2@16921>    BSR.w writelong
00034A34 <AmiBlitz3.ab2@16922>   MOVE.w pushlen,D1
00034A38 <AmiBlitz3.ab2@16923>    BSR.w writeword
00034A3C <AmiBlitz3.ab2@16924>   MOVE.w #$C600,D1
00034A40 <AmiBlitz3.ab2@16925>    BSR.w Atokejsr
00034A42 <AmiBlitz3.ab2@16926>   MOVE.w (A7)+,D0
00034A44 <AmiBlitz3.ab2@16927> RTS
00034A46 <AmiBlitz3.ab2@16930>   MOVEQ #0,d1
00034A4A <AmiBlitz3.ab2@16931>   BSR.w pokedata1b
00034A50 <AmiBlitz3.ab2@16932>   MOVE.l destpointer,a4
00034A54 <AmiBlitz3.ab2@16933>   MOVE.w #$203c,d1
00034A5A <AmiBlitz3.ab2@16934>   TST.w mode
00034A5E <AmiBlitz3.ab2@16935>   BNE 'lm10
00034A64 <AmiBlitz3.ab2@16936>    ADDQ.w #4,a2offset
00034A68 <AmiBlitz3.ab2@16937>   MOVE.w #$2f3c,d1
00034A6E <AmiBlitz3.ab2@16940>   TST.w mode
00034A72 <AmiBlitz3.ab2@16941>   BEQ 'lm3
00034A78 <AmiBlitz3.ab2@16942>   MOVE.w regnum,D0
00034A7A <AmiBlitz3.ab2@16943>   LSL.w #8,D0
00034A7C <AmiBlitz3.ab2@16944>   LSL.w #1,D0
00034A7E <AmiBlitz3.ab2@16945>   OR.w d0,d1
00034A82 <AmiBlitz3.ab2@16946>   BSR writeword
00034A86 <AmiBlitz3.ab2@16947>   BSR.w addoff
00034A8C <AmiBlitz3.ab2@16948>   MOVE.l litdata1,D1
00034A90 <AmiBlitz3.ab2@16949>   BSR.w writelong
00034A98 <AmiBlitz3.ab2@16950>   CMP.w #3,mode
00034A9C <AmiBlitz3.ab2@16951>   BEQ 'l30
00034AA2 <AmiBlitz3.ab2@16952>    ADDQ.w #4,a2offset
00034AA6 <AmiBlitz3.ab2@16953>   MOVE.w #$4878,D1
00034AAA <AmiBlitz3.ab2@16954>   BSR.w writeword
00034AAC <AmiBlitz3.ab2@16955>   MOVE.l d2,d1
00034AB0 <AmiBlitz3.ab2@16956>   BSR writeword
00034AB2 <AmiBlitz3.ab2@16959>   MOVE.w (A7)+,D0
00034AB4 <AmiBlitz3.ab2@16960> RTS
00034ABA <AmiBlitz3.ab2@16963>   MOVE.l #$3f3c0007,d1
00034ABE <AmiBlitz3.ab2@16964>   BSR writelong
00034AC4 <AmiBlitz3.ab2@16965>   MOVE.w regnum,D1
00034AC6 <AmiBlitz3.ab2@16966>   LSL.w #8,D1
00034AC8 <AmiBlitz3.ab2@16967>   LSL.w #1,D1
00034ACC <AmiBlitz3.ab2@16968>   ORI.w #$2f3c,d1
00034AD0 <AmiBlitz3.ab2@16969>   BSR writeword
00034AD6 <AmiBlitz3.ab2@16970>    ADDQ.w #4,a2offset
00034AD8 <AmiBlitz3.ab2@16971>   MOVE.l d2,d1
00034ADC <AmiBlitz3.ab2@16972>   BSR writelong
00034AE0 <AmiBlitz3.ab2@16973>   MOVE.w #$2f3c,d1
00034AE4 <AmiBlitz3.ab2@16974>   BSR writeword
00034AE8 <AmiBlitz3.ab2@16975>   BSR.w addoff
00034AEE <AmiBlitz3.ab2@16976>   MOVE.l litdata1,D1
00034AF2 <AmiBlitz3.ab2@16977>   BSR.w writelong
00034AF4 <AmiBlitz3.ab2@16978>   MOVE.w (A7)+,D0
00034AF6 <AmiBlitz3.ab2@16979> RTS
00034AFA <AmiBlitz3.ab2@16983>   BSR.w get1bytemain
00034AFE <AmiBlitz3.ab2@16984>    BSR.w JL_0_AE22
00034B04 <AmiBlitz3.ab2@16985>   MOVE.w regnum,D1
00034B06 <AmiBlitz3.ab2@16986>   LSL.w #8,D1
00034B08 <AmiBlitz3.ab2@16987>   LSL.w #1,D1
00034B0C <AmiBlitz3.ab2@16988>   ORI.w #$203C,D1
00034B10 <AmiBlitz3.ab2@16989>    BSR.w writeword
00034B14 <AmiBlitz3.ab2@16990>    BSR.w addoff
00034B18 <AmiBlitz3.ab2@16991>   MOVE.l $8(A2),D1
00034B1C <AmiBlitz3.ab2@16992>    BSR.w writelong
00034B1E <AmiBlitz3.ab2@16993>   MOVEQ.l #$03,D2
00034B24 <AmiBlitz3.ab2@16994>   CLR.b peekaddrsize
00034B28 <AmiBlitz3.ab2@16995> BRA.w reget
00034B2A <AmiBlitz3.ab2@16998>   MOVEQ.l #$00,D3
00034B2E <AmiBlitz3.ab2@17001>   BSR.w get1bytemain
00034B32 <AmiBlitz3.ab2@17002>    BEQ.w syntaxerr
00034B36 <AmiBlitz3.ab2@17003>   CMP.w #$22,D0
00034B3A <AmiBlitz3.ab2@17004>    BEQ.w JL_0_AF1A
00034B3C <AmiBlitz3.ab2@17005>   LSL.l #8,D3
00034B3E <AmiBlitz3.ab2@17006>   MOVE.b D0,D3
00034B42 <AmiBlitz3.ab2@17007> BRA.w JL_0_AF02
00034B46 <AmiBlitz3.ab2@17010>   BSR.w get1bytemain
00034B4A <AmiBlitz3.ab2@17011> BRA.w JL_0_B46E
00034B4C <AmiBlitz3.ab2@17014>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
00034B50 <AmiBlitz3.ab2@17015>    BSR.w makename2
00034B54 <AmiBlitz3.ab2@17016>    BSR.w findlabel2
00034B58 <AmiBlitz3.ab2@17017>    BEQ.w 'l10
00034B5E <AmiBlitz3.ab2@17018>    LEA ptr_parameterstore,a0
00034B64 <AmiBlitz3.ab2@17019>    CMP.b #"@",-1(a0,d2.w)
00034B68 <AmiBlitz3.ab2@17020>    BNE cnferr
00034B6C <AmiBlitz3.ab2@17021>    CLR.b -1(a0,d2.w)
00034B6E <AmiBlitz3.ab2@17022>    SUBQ.l #1,d2
00034B74 <AmiBlitz3.ab2@17023>    LEA varbase,a2
00034B78 <AmiBlitz3.ab2@17024>    BSR findvariable
00034B7C <AmiBlitz3.ab2@17025>    BNE cnferr
00034B80 <AmiBlitz3.ab2@17026>    CMP.b #"\",d0
00034B84 <AmiBlitz3.ab2@17027>    BNE 'l6
00034B8A <AmiBlitz3.ab2@17028>    ADDQ #1,lastsourcepos
00034B8E <AmiBlitz3.ab2@17029>    MOVE.l $a(a2),a2
00034B90 <AmiBlitz3.ab2@17030>    ADDQ.l #4,a2
00034B94 <AmiBlitz3.ab2@17031>    BSR.w makename2
00034B98 <AmiBlitz3.ab2@17032>    BSR findvariable2
00034B9C <AmiBlitz3.ab2@17033>    BNE cnferr
00034BA0 <AmiBlitz3.ab2@17034> BRA.s 'l6                                                  ;???
00034BA4 <AmiBlitz3.ab2@17037>    MOVE.w $4(a2),d3
00034BA6 <AmiBlitz3.ab2@17038>    EXT.l d3
00034BAA <AmiBlitz3.ab2@17039> BRA JL_0_AF46
00034BAE <AmiBlitz3.ab2@17042>   MOVE.l $8(A2),D3
00034BB6 <AmiBlitz3.ab2@17043>   CMPI.l #$1,$4(A2)
00034BBA <AmiBlitz3.ab2@17044>    BEQ.w JL_0_AF46
00034BC0 <AmiBlitz3.ab2@17045>   NOT.w asmtype
00034BC2 <AmiBlitz3.ab2@17048>   MOVE.w (A7)+,D2
00034BC6 <AmiBlitz3.ab2@17049> BRA.w JL_0_B46E
00034BC8 <AmiBlitz3.ab2@17053>   MOVE.w D2,-(A7)
00034BCC <AmiBlitz3.ab2@17054>    BSR.w getparameter
00034BD0 <AmiBlitz3.ab2@17055>   CMP.w #"{",D0                                          ;test if var = function{}
00034BD4 <AmiBlitz3.ab2@17056>    BEQ.w isfunction
00034BD8 <AmiBlitz3.ab2@17057>    BSR.w JL_0_8E3C
00034BDC <AmiBlitz3.ab2@17059>    BSR.w calcvar                                         ;getvaroffset+type
00034BE0 <AmiBlitz3.ab2@17060>    BSR.w JL_0_B150
00034BE6 <AmiBlitz3.ab2@17061>    MOVE.l a2,rightsidetype
00034BEC <AmiBlitz3.ab2@17072>    TST.b typecheck
00034BF0 <AmiBlitz3.ab2@17073>    BEQ JL_0_AF66
00034BFA <AmiBlitz3.ab2@17074>    CMP.l #$da01,lasttoken                                  ;poke
00034BFE <AmiBlitz3.ab2@17075>    BEQ 'l1
00034C08 <AmiBlitz3.ab2@17076>    CMP.l #$da02,lasttoken                                  ;peek
00034C0C <AmiBlitz3.ab2@17077>    BNE 'l2
00034C14 <AmiBlitz3.ab2@17080>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
00034C18 <AmiBlitz3.ab2@17081>    BNE JL_0_AF66
00034C1E <AmiBlitz3.ab2@17082>    MOVE.b d2,peekaddrsize
00034C22 <AmiBlitz3.ab2@17083>    BRA JL_0_AF66
00034C28 <AmiBlitz3.ab2@17086>   CLR.b peekaddrsize
00034C2C <AmiBlitz3.ab2@17089>   CMP.w #$1,D2
00034C30 <AmiBlitz3.ab2@17090>    BNE.w JL_0_AF7C
00034C36 <AmiBlitz3.ab2@17091>   MOVE.w regnum,D1
00034C3A <AmiBlitz3.ab2@17092>   ORI.w #$4880,D1
00034C3E <AmiBlitz3.ab2@17093>    BSR.w writeword
00034C40 <AmiBlitz3.ab2@17096>   MOVE.w (A7)+,D3
00034C44 <AmiBlitz3.ab2@17097>    BEQ.w JL_0_AF9E
00034C4A <AmiBlitz3.ab2@17098>    MOVE.l lastinstructionaddr,a0
00034C4E <AmiBlitz3.ab2@17099>   CMP.w #$3,D3
00034C52 <AmiBlitz3.ab2@17100>    BNE.w JL_0_AF92
00034C56 <AmiBlitz3.ab2@17101>   CMP.w #$4,D2
00034C5A <AmiBlitz3.ab2@17102>    BEQ.w JL_0_AF98
00034C5C <AmiBlitz3.ab2@17105>   CMP.w D2,D3
00034C60 <AmiBlitz3.ab2@17106>    BLS.w JL_0_AF9E
00034C62 <AmiBlitz3.ab2@17109>   EXG.l D2,D3
00034C64 <AmiBlitz3.ab2@17110>   MOVE.l a0,-(a7)
00034C6A <AmiBlitz3.ab2@17111>   TST.b typecheck
00034C6E <AmiBlitz3.ab2@17112>   BEQ 'ok
00034C74 <AmiBlitz3.ab2@17113>   TST.b notypecheck
00034C78 <AmiBlitz3.ab2@17114>   BNE 'ok
00034C7E <AmiBlitz3.ab2@17115>   MOVE.l leftsidetype,a0
00034C88 <AmiBlitz3.ab2@17116>   CMP.l #0,leftsidetype
00034C8C <AmiBlitz3.ab2@17117>   BEQ 'ok
00034C94 <AmiBlitz3.ab2@17118>   CMP.l #$100,4(a0)
00034C98 <AmiBlitz3.ab2@17119>   BLE 'ok
00034C9C <AmiBlitz3.ab2@17120>   CMP.b #3,d3
00034CA0 <AmiBlitz3.ab2@17121>   BEQ 'ok
00034CA4 <AmiBlitz3.ab2@17122>   CMP.b #7,d3
00034CA8 <AmiBlitz3.ab2@17123>   BEQ 'ok
00034CAE <AmiBlitz3.ab2@17124>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
00034CB0 <AmiBlitz3.ab2@17126>   MOVE.l (a7)+,a0
00034CB4 <AmiBlitz3.ab2@17127>   BSR.w writeconvertcode         ;called from var assign
00034CB8 <AmiBlitz3.ab2@17130> BRA.w reget
00034CBA <AmiBlitz3.ab2@17133>   MOVEQ.l #$00,D3
00034CC0 <AmiBlitz3.ab2@17134>   MOVE.w regnum,D1
00034CC4 <AmiBlitz3.ab2@17135>    BEQ.w JL_0_AFC8
00034CC6 <AmiBlitz3.ab2@17136>   SUBQ.w #1,D1
00034CC8 <AmiBlitz3.ab2@17139>      LSR.l #1,D3
00034CCC <AmiBlitz3.ab2@17140>      BSET #$F,D3
00034CD0 <AmiBlitz3.ab2@17141>   DBF D1,JL_0_AFB0b
00034CD6 <AmiBlitz3.ab2@17143>    TST.b fpu
00034CDA <AmiBlitz3.ab2@17144>    BEQ 'l1
00034CE0 <AmiBlitz3.ab2@17145>    ADDQ.l #2,stacktrack                                    ;intern command
00034CE2 <AmiBlitz3.ab2@17146>     MOVE.l a0,-(a7)
00034CE8 <AmiBlitz3.ab2@17147>     MOVE.l stacktrack,d1
00034CEE <AmiBlitz3.ab2@17148>     LEA fpustackbase,a0
00034CF2 <AmiBlitz3.ab2@17149>     CLR.w 0(a0,d1)
00034CF8 <AmiBlitz3.ab2@17150>     CLR.w regmask
00034CFA <AmiBlitz3.ab2@17151>     MOVE.l (a7)+,a0
00034CFE <AmiBlitz3.ab2@17154>   MOVE.w #$48E7,D1
00034D02 <AmiBlitz3.ab2@17155>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
00034D04 <AmiBlitz3.ab2@17156>   MOVE.w D3,D1
00034D08 <AmiBlitz3.ab2@17157> BRA.w writeword
00034D0A <AmiBlitz3.ab2@17162>   MOVEQ.l #$00,D3
00034D10 <AmiBlitz3.ab2@17163>   MOVE.w regnum,D1
00034D14 <AmiBlitz3.ab2@17164>    BEQ.w JL_0_AFC8
00034D16 <AmiBlitz3.ab2@17165>   SUBQ.w #1,D1
00034D18 <AmiBlitz3.ab2@17168>     LSR.l #1,D3
00034D1C <AmiBlitz3.ab2@17169>     BSET #$F,D3
00034D20 <AmiBlitz3.ab2@17170>   DBF D1,JL_0_AFB0
00034D26 <AmiBlitz3.ab2@17172>    TST.b fpu
00034D2A <AmiBlitz3.ab2@17173>    BEQ 'l1
00034D30 <AmiBlitz3.ab2@17174>    ADDQ.l #2,stacktrack                                    ;intern command
00034D32 <AmiBlitz3.ab2@17175>     MOVE.l a0,-(a7)
00034D38 <AmiBlitz3.ab2@17176>     MOVE.l stacktrack,d1
00034D3E <AmiBlitz3.ab2@17177>     LEA fpustackbase,a0
00034D42 <AmiBlitz3.ab2@17178>     CLR.w 0(a0,d1)
00034D46 <AmiBlitz3.ab2@17179>    CMP.b #5,(a3)                                           ;result float ?
00034D4A <AmiBlitz3.ab2@17180>     BNE 'nofpu
00034D54 <AmiBlitz3.ab2@17182>     MOVE.w regnum,regnumfunc
00034D5A <AmiBlitz3.ab2@17185>   CLR.w regmask
00034D5C <AmiBlitz3.ab2@17186>     MOVE.l (a7)+,a0
00034D60 <AmiBlitz3.ab2@17189>   MOVE.w #$48E7,D1
00034D64 <AmiBlitz3.ab2@17190>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
00034D66 <AmiBlitz3.ab2@17191>   MOVE.w D3,D1
00034D6A <AmiBlitz3.ab2@17192> BRA.w writeword
00034D6C <AmiBlitz3.ab2@17195> RTS
00034D6E <AmiBlitz3.ab2@17199>   MOVE.l D1,-(A7)
00034D72 <AmiBlitz3.ab2@17200>   MOVE.w #$4EB9,D1
00034D76 <AmiBlitz3.ab2@17201>    BSR.w writeword
00034D7A <AmiBlitz3.ab2@17202>    BSR.w addoff
00034D7C <AmiBlitz3.ab2@17203>   MOVE.l (A7)+,D1
00034D80 <AmiBlitz3.ab2@17204> BRA.w writelong
00034D84 <AmiBlitz3.ab2@17208>    BSR.w findproc                                          ;write function call
00034D88 <AmiBlitz3.ab2@17209>    BEQ 'l1
00034D8E <AmiBlitz3.ab2@17210>    TST.l unusedfunc
00034D92 <AmiBlitz3.ab2@17211>    BEQ noprocerr
00034D98 <AmiBlitz3.ab2@17213>    JSR gotoendsource
00034DA0 <AmiBlitz3.ab2@17216>   MOVE.l funcstruct_returntype(a2),rightsidetype
00034DA6 <AmiBlitz3.ab2@17217>   TST.l typetocast
00034DAA <AmiBlitz3.ab2@17218>   BEQ 'nocast
00034DB4 <AmiBlitz3.ab2@17219>   MOVE.l typetocast,rightsidetype
00034DBA <AmiBlitz3.ab2@17220>   CLR.l typetocast
00034DBC <AmiBlitz3.ab2@17221>   MOVE.l a1,-(a7)
00034DC2 <AmiBlitz3.ab2@17222>   MOVE.l rightsidetype,a1
00034DC8 <AmiBlitz3.ab2@17223>   CMP.l leftsidetype,a1
00034DCC <AmiBlitz3.ab2@17224>   BEQ 'ok
00034DD2 <AmiBlitz3.ab2@17225>   JMP errorconvertreturntype2
00034DD4 <AmiBlitz3.ab2@17226> 'ok  MOVE.l (a7)+,a1
00034DD6 <AmiBlitz3.ab2@17228>   MOVEQ.l #$00,D1
00034DDA <AmiBlitz3.ab2@17229>   MOVE.b $5(A2),D1
00034DE0 <AmiBlitz3.ab2@17230>   MOVE.b d1,retmode
00034DE4 <AmiBlitz3.ab2@17231>    BMI.w illprocerr
00034DEA <AmiBlitz3.ab2@17232>    MOVE.b #1,isfunc(a2)
00034DEC <AmiBlitz3.ab2@17233>   MOVE.w D1,-(A7)
00034DEE <AmiBlitz3.ab2@17234>   MOVEQ.l #$00,D1
00034DF2 <AmiBlitz3.ab2@17235>   MOVE.b $4(A2),D1
00034DF4 <AmiBlitz3.ab2@17236>   LSR.w #4,D1
00034DF8 <AmiBlitz3.ab2@17237>    BEQ.w JL_0_B006
00034DFA <AmiBlitz3.ab2@17238>   LSL.w #2,D1
00034E00 <AmiBlitz3.ab2@17239>   SUB.w D1,a2offset
00034E04 <AmiBlitz3.ab2@17242>   CMPI.w #$7,(A7)
00034E08 <AmiBlitz3.ab2@17243>    BNE.b JL_0_B014
00034E0A <AmiBlitz3.ab2@17244>   MOVE.l A2,-(A7)
00034E0E <AmiBlitz3.ab2@17245>    BSR.w makesbase
00034E10 <AmiBlitz3.ab2@17246>   MOVEA.l (A7)+,A2
00034E16 <AmiBlitz3.ab2@17249>   MOVE.w sbasegot,-(A7)
00034E1A <AmiBlitz3.ab2@17250>    BEQ.b JL_0_B020
00034E1E <AmiBlitz3.ab2@17251>    BSR.w dopusha3
00034E22 <AmiBlitz3.ab2@17254>   BSR.w JL_0_AFA2func
00034E24 <AmiBlitz3.ab2@17255>   MOVE.w D3,-(A7)
00034E28 <AmiBlitz3.ab2@17256>   MOVE.l $E(A2),D1
00034E2C <AmiBlitz3.ab2@17257>   TST.b $20(a2)                                            ;increase if morepar
00034E30 <AmiBlitz3.ab2@17258>   BNE 'no0par
00034E32 <AmiBlitz3.ab2@17259>   MOVE.l a5,a4
00034E36 <AmiBlitz3.ab2@17262>   CMP.b #$20,(a4)+
00034E3A <AmiBlitz3.ab2@17263>   BEQ 'l1
00034E40 <AmiBlitz3.ab2@17264>   CMP.b #"}",-1(a4)
00034E44 <AmiBlitz3.ab2@17265>   BNE  'no0par
00034E46 <AmiBlitz3.ab2@17266>   MOVEQ #0,d0
00034E4A <AmiBlitz3.ab2@17269>   LEA $16(A2),A1
00034E4C <AmiBlitz3.ab2@17272>   MOVE.l d1,-(a7)
00034E4E <AmiBlitz3.ab2@17273>   MOVE.b (a1),d2
00034E50 <AmiBlitz3.ab2@17274>   MOVE.l d0,d1
00034E54 <AmiBlitz3.ab2@17275>   CMP.w #4,d2
00034E58 <AmiBlitz3.ab2@17276>   BNE 'l1b
00034E5E <AmiBlitz3.ab2@17277>   ADD.l #$203c,d1
00034E62 <AmiBlitz3.ab2@17278>   BSR writeword
00034E68 <AmiBlitz3.ab2@17279>   MOVE.l #$ffff0000,d1
00034E6C <AmiBlitz3.ab2@17280>   BSR writelong
00034E70 <AmiBlitz3.ab2@17281> BRA 'l2b
00034E76 <AmiBlitz3.ab2@17284>    TST.b fpu
00034E7A <AmiBlitz3.ab2@17285>    BNE 'l1c
00034E7E <AmiBlitz3.ab2@17286>    CMP.w #5,d2
00034E82 <AmiBlitz3.ab2@17287>    BNE 'l1c
00034E88 <AmiBlitz3.ab2@17288>    ADD.l #$203c,d1
00034E8C <AmiBlitz3.ab2@17289>    BSR writeword
00034E92 <AmiBlitz3.ab2@17290>    MOVE.l #$800000c1,d1
00034E96 <AmiBlitz3.ab2@17291>    BSR writelong
00034E9A <AmiBlitz3.ab2@17292> BRA 'l2b
00034EA0 <AmiBlitz3.ab2@17295>   ADD.l #$70ff,d1
00034EA4 <AmiBlitz3.ab2@17296>   BSR writeword
00034EA8 <AmiBlitz3.ab2@17297>   CMP.w #7,d2
00034EAC <AmiBlitz3.ab2@17298>   BNE 'l1d
00034EB2 <AmiBlitz3.ab2@17299>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
00034EB6 <AmiBlitz3.ab2@17300>   BSR writelong
00034EB8 <AmiBlitz3.ab2@17301>   MOVEQ #0,d1
00034EBC <AmiBlitz3.ab2@17302>   BSR writeword
00034EC2 <AmiBlitz3.ab2@17303>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
00034EC6 <AmiBlitz3.ab2@17304>   BSR writelong
00034EC8 <AmiBlitz3.ab2@17305>   MOVEQ #0,d1
00034ECC <AmiBlitz3.ab2@17306>   BSR writeword
00034ED2 <AmiBlitz3.ab2@17308> 'l1d  MOVE.l #$f23c5000,d1
00034ED4 <AmiBlitz3.ab2@17309>   MOVE.l d0,d2
00034ED6 <AmiBlitz3.ab2@17310>   ASR.l #2,d2
00034ED8 <AmiBlitz3.ab2@17311>   ADD.l d2,d1
00034EDC <AmiBlitz3.ab2@17312>   BSR writelong
00034EE0 <AmiBlitz3.ab2@17313>   MOVE.w #$ffff,d1
00034EE4 <AmiBlitz3.ab2@17314>   BSR writeword
00034EE6 <AmiBlitz3.ab2@17318>   MOVE.l (a7)+,d1
00034EE8 <AmiBlitz3.ab2@17319>      ADDQ.l #1,a1
00034EEE <AmiBlitz3.ab2@17320>      ADD.l #$0200,d0
00034EF4 <AmiBlitz3.ab2@17321>      CMP.l #$0e00,d0
00034EF8 <AmiBlitz3.ab2@17322>      BEQ syntaxerr
00034EFA <AmiBlitz3.ab2@17323>      TST.b (a1)
00034EFE <AmiBlitz3.ab2@17324>      BNE 'again
00034F02 <AmiBlitz3.ab2@17325> BRA 'p1
00034F06 <AmiBlitz3.ab2@17328>   TST.b $4(A2)
00034F0A <AmiBlitz3.ab2@17329>    BNE.w JL_0_B03E
00034F0E <AmiBlitz3.ab2@17332>   BSR.w JL_0_AFCA
00034F12 <AmiBlitz3.ab2@17333>    BSR.w get1bytemain
00034F16 <AmiBlitz3.ab2@17334> BRA.w JL_0_B06C
00034F1C <AmiBlitz3.ab2@17338>   MOVE.w regnum,-(A7)
00034F26 <AmiBlitz3.ab2@17339>   MOVE.w regnum,regnumfunc
00034F28 <AmiBlitz3.ab2@17342>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
00034F30 <AmiBlitz3.ab2@17343>   MOVE.b #1,funccall
00034F32 <AmiBlitz3.ab2@17344>   MOVEQ.l #$00,D0
00034F36 <AmiBlitz3.ab2@17345>   MOVE.b $4(A2),D0
00034F40 <AmiBlitz3.ab2@17346>   MOVE.w a2offset,a2offset2
00034F48 <AmiBlitz3.ab2@17347>   MOVE.b 5(a2),retmode
00034F4E <AmiBlitz3.ab2@17348>   MOVE.l a2,currentfunccall
00034F52 <AmiBlitz3.ab2@17349>   LEA $16(A2),A2
00034F58 <AmiBlitz3.ab2@17350>   CLR.w regnum
00034F5E <AmiBlitz3.ab2@17351>   CLR.w regmask
00034F64 <AmiBlitz3.ab2@17352>   MOVE.b isconstantvalue,-(a7)
00034F6A <AmiBlitz3.ab2@17353>   MOVE.b funcparloop,-(a7)
00034F72 <AmiBlitz3.ab2@17354>   MOVE.b #1,funcparloop
00034F78 <AmiBlitz3.ab2@17355>   MOVE.l rightsidetype,-(a7)
00034F7E <AmiBlitz3.ab2@17356>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
00034F84 <AmiBlitz3.ab2@17357>   MOVE.b blitzparloop,-(a7)
00034F8A <AmiBlitz3.ab2@17358>   CLR.b blitzparloop
00034F90 <AmiBlitz3.ab2@17359>   JSR fetchpees2
00034F96 <AmiBlitz3.ab2@17360>   MOVE.b (a7)+,blitzparloop
00034F9C <AmiBlitz3.ab2@17361>   MOVE.l (a7)+,leftsidetype
00034FA2 <AmiBlitz3.ab2@17362>   MOVE.l (a7)+,rightsidetype
00034FA8 <AmiBlitz3.ab2@17363>   MOVE.b (a7)+,funcparloop
00034FAE <AmiBlitz3.ab2@17364>   MOVE.b (a7)+,isconstantvalue
00034FB4 <AmiBlitz3.ab2@17365>   JSR chkstak
00034FB6 <AmiBlitz3.ab2@17366>   MOVE.l (A7)+,D1
00034FBA <AmiBlitz3.ab2@17382>    BTST #0,d1
00034FBE <AmiBlitz3.ab2@17383>    BNE intern1
00034FC2 <AmiBlitz3.ab2@17384>    BSR.w JL_0_AFCA
00034FC8 <AmiBlitz3.ab2@17406>   MOVE.w (A7)+,regnum
00034FCC <AmiBlitz3.ab2@17409>   CMP.w #"}",D0
00034FD0 <AmiBlitz3.ab2@17410>    BNE.w errorbracketmiss2
00034FD2 <AmiBlitz3.ab2@17411>    MOVEQ #0,d1                                            ; end of function call pars
00034FD8 <AmiBlitz3.ab2@17412>   MOVE.w regnum,D1
00034FDC <AmiBlitz3.ab2@17413>    BEQ.w JL_0_B08A
00034FE2 <AmiBlitz3.ab2@17414>    TST.b fpu
00034FE6 <AmiBlitz3.ab2@17415>    BEQ 'old
00034FEE <AmiBlitz3.ab2@17416>    CMP.b #5,retmode
00034FF2 <AmiBlitz3.ab2@17417>    BNE 'old
00034FF4 <AmiBlitz3.ab2@17418>    ASL.l #7,d1
00034FFA <AmiBlitz3.ab2@17419>    OR.l #$f2000000,d1
00034FFE <AmiBlitz3.ab2@17420>    BSR writelong
00035002 <AmiBlitz3.ab2@17421> BRA JL_0_B08A
00035004 <AmiBlitz3.ab2@17423>  'old  LSL.w #8,D1
00035006 <AmiBlitz3.ab2@17424>   LSL.w #1,D1
0003500A <AmiBlitz3.ab2@17425>   ORI.w #$2000,D1
0003500E <AmiBlitz3.ab2@17426>    BSR.w writeword
00035010 <AmiBlitz3.ab2@17429>    MOVE.w (A7)+,D3
00035014 <AmiBlitz3.ab2@17430>    BEQ.w JL_0_B0A8
0003501A <AmiBlitz3.ab2@17431>    TST.b fpu
0003501E <AmiBlitz3.ab2@17432>    BEQ 'old
00035020 <AmiBlitz3.ab2@17433>    MOVE.l d0,-(a7)
00035024 <AmiBlitz3.ab2@17434>    MOVE.w #8,d0
00035026 <AmiBlitz3.ab2@17435>    MOVE.l a0,-(a7)
0003502C <AmiBlitz3.ab2@17436>    MOVE.l stacktrack,d1
00035032 <AmiBlitz3.ab2@17437>    LEA fpustackbase,a0
0003503A <AmiBlitz3.ab2@17438>    MOVE.w 0(a0,d1),regmask
0003503C <AmiBlitz3.ab2@17439>    MOVE.l (a7)+,a0
00035040 <AmiBlitz3.ab2@17442>   BEQ 'ready
00035046 <AmiBlitz3.ab2@17443>    BTST d0,regmask
0003504A <AmiBlitz3.ab2@17444>    BEQ 'noa7
0003504C <AmiBlitz3.ab2@17445>    MOVEQ #0,d1
0003504E <AmiBlitz3.ab2@17446>    MOVE.w d0,d1
00035050 <AmiBlitz3.ab2@17447>    SUBQ.w #1,d1
00035052 <AmiBlitz3.ab2@17448>    ASL #7,d1
00035058 <AmiBlitz3.ab2@17450>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0003505C <AmiBlitz3.ab2@17451>    BSR writelong
00035062 <AmiBlitz3.ab2@17452>    SUBQ.l #2,stacktrack
00035064 <AmiBlitz3.ab2@17455>    SUBQ.w #1,d0
00035068 <AmiBlitz3.ab2@17456>    BNE 'loop
0003506E <AmiBlitz3.ab2@17459>   SUBQ.l #2,stacktrack                                     ;integer sub
00035070 <AmiBlitz3.ab2@17460>   MOVE.l (a7)+,d0
00035074 <AmiBlitz3.ab2@17463>   MOVE.w #$4CDF,D1
00035078 <AmiBlitz3.ab2@17464>    BSR.w writeword
0003507A <AmiBlitz3.ab2@17465>   MOVEQ.l #$00,D1
0003507C <AmiBlitz3.ab2@17466>   MOVEQ.l #$0F,D4
0003507E <AmiBlitz3.ab2@17469>     LSL.w #1,D3
00035080 <AmiBlitz3.ab2@17470>     ROXR.w #1,D1
00035084 <AmiBlitz3.ab2@17471>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
00035088 <AmiBlitz3.ab2@17473>     BSR.w writeword
0003508E <AmiBlitz3.ab2@17474>    CLR.w regnumfunc
00035090 <AmiBlitz3.ab2@17477>   MOVE.w (A7)+,D1
00035094 <AmiBlitz3.ab2@17478>    BEQ.b JL_0_B0D2
00035098 <AmiBlitz3.ab2@17479>   CMPI.w #$7,(A7)
0003509C <AmiBlitz3.ab2@17480>    BEQ.b JL_0_B0C4
000350A2 <AmiBlitz3.ab2@17481>   LEA geta3,A0
000350A8 <AmiBlitz3.ab2@17482>   LEA numtoa0,A1
000350AC <AmiBlitz3.ab2@17483>    BSR.w pokecode
000350B0 <AmiBlitz3.ab2@17484> BRA.b JL_0_B0CE
000350B6 <AmiBlitz3.ab2@17487>   MOVE.w deca3,D1
000350BA <AmiBlitz3.ab2@17488>    BSR.w writeword
000350BE <AmiBlitz3.ab2@17491>   BSR.w dopulla3                                           ;fix up string base
000350C0 <AmiBlitz3.ab2@17494>   MOVE.w (A7)+,D2                                          ;what it returns!
000350C4 <AmiBlitz3.ab2@17495>   CMP.w #$7,D2
000350C8 <AmiBlitz3.ab2@17496>    BNE.w JL_0_B0EC
000350CE <AmiBlitz3.ab2@17497>   MOVE.w putstlen,D1
000350D4 <AmiBlitz3.ab2@17498>   OR.w regnum,D1
000350D8 <AmiBlitz3.ab2@17499>    BSR.w writeword
000350DC <AmiBlitz3.ab2@17502>   BSR.w get1bytemain
000350E0 <AmiBlitz3.ab2@17503> BRA.w JL_0_AF66
000350E2 <AmiBlitz3.ab2@17507> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
000350EA <AmiBlitz3.ab2@17512>   CMP.b #2,optistring
000350EE <AmiBlitz3.ab2@17513>   BEQ fs2
000350F2 <AmiBlitz3.ab2@17514>   BSR.w makesbase                                          ;writestringvariable
000350F6 <AmiBlitz3.ab2@17515>   BTST #$F,D2
000350FA <AmiBlitz3.ab2@17516>    BNE.w JL_0_B112
00035100 <AmiBlitz3.ab2@17517>   MOVE.w D3,leaa5d3a2+2
00035106 <AmiBlitz3.ab2@17518>   MOVE.l leaa5d3a2,D1
0003510A <AmiBlitz3.ab2@17519>    BSR.w pokela5s
00035110 <AmiBlitz3.ab2@17522>   MOVE.w regnum,D1
00035112 <AmiBlitz3.ab2@17523>   LSL.w #8,D1
00035114 <AmiBlitz3.ab2@17524>   LSL.w #1,D1
00035118 <AmiBlitz3.ab2@17525>   ORI.w #$7000,D1
0003511E <AmiBlitz3.ab2@17526>   LEA stvarget2,A0
00035120 <AmiBlitz3.ab2@17527>   MOVE.w D1,(A0)
00035126 <AmiBlitz3.ab2@17528>   MOVE.w regnum,D1
0003512C <AmiBlitz3.ab2@17529>   ANDI.w #$FFF8,$2(A0)
00035130 <AmiBlitz3.ab2@17530>   OR.w D1,$2(A0)
00035136 <AmiBlitz3.ab2@17531>   LEA stvarget2f,A1
0003513A <AmiBlitz3.ab2@17532>    BSR.w pokecode
0003513E <AmiBlitz3.ab2@17533>   MOVE.w #$C600,D1
00035142 <AmiBlitz3.ab2@17534>    BSR.w Atokejsr
00035144 <AmiBlitz3.ab2@17535>   MOVEQ.l #$07,D2
00035148 <AmiBlitz3.ab2@17536> BRA.w reget
0003514E <AmiBlitz3.ab2@17539>      TST.w stackpar
00035152 <AmiBlitz3.ab2@17540>      BMI 'l10
00035158 <AmiBlitz3.ab2@17541>      MOVE.l #$3f3c0007,d1
0003515E <AmiBlitz3.ab2@17542>      ADDQ.w #2,a2offset
00035162 <AmiBlitz3.ab2@17543>      BSR writelong
00035166 <AmiBlitz3.ab2@17546>   MOVE.w #$4878,d1
0003516C <AmiBlitz3.ab2@17547>      CLR.w stackpar
00035170 <AmiBlitz3.ab2@17548>      BSR writeword
00035174 <AmiBlitz3.ab2@17549>      MOVE.w #$0,d1
00035178 <AmiBlitz3.ab2@17550>      BSR writeword
0003517C <AmiBlitz3.ab2@17551>      MOVE.w #$246d,d1
00035180 <AmiBlitz3.ab2@17552>      BSR writeword
00035182 <AmiBlitz3.ab2@17553>      MOVE.w d3,d1
00035186 <AmiBlitz3.ab2@17554>      BSR writeword
0003518C <AmiBlitz3.ab2@17555>      MOVE.l #$4a926704,d1
00035190 <AmiBlitz3.ab2@17556>      BSR writelong
00035196 <AmiBlitz3.ab2@17557>      MOVE.l #$2eaafffc,d1
0003519A <AmiBlitz3.ab2@17558>      BSR writelong
0003519E <AmiBlitz3.ab2@17559>      MOVE.w #$2f0a,d1
000351A4 <AmiBlitz3.ab2@17560>      ADDQ.w #8,a2offset
000351A8 <AmiBlitz3.ab2@17561>      BSR writeword
000351AC <AmiBlitz3.ab2@17562> BRA.w reget
000351B0 <AmiBlitz3.ab2@17565>   CMP.b #$7,D2                                             ;load basic var
000351B4 <AmiBlitz3.ab2@17566>    BEQ.w JL_0_B0F6
000351BA <AmiBlitz3.ab2@17568>    TST.b iee
000351BE <AmiBlitz3.ab2@17569>    BEQ 'noiee
000351C2 <AmiBlitz3.ab2@17570>    CMP.b #5,d2
000351C6 <AmiBlitz3.ab2@17571>    BNE 'noiee
000351C8 <AmiBlitz3.ab2@17572>    MOVE.l d0,-(a7)                                         ;fpu load var
000351CC <AmiBlitz3.ab2@17573>    BTST #15,d2
000351D0 <AmiBlitz3.ab2@17574>    BEQ 'var
000351D6 <AmiBlitz3.ab2@17575>    CMP.l #$7fff,d3
000351DA <AmiBlitz3.ab2@17576>    BGT 'longoffset
000351E0 <AmiBlitz3.ab2@17577>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
000351E2 <AmiBlitz3.ab2@17578>    TST.w d3                                                ;offset =0
000351E6 <AmiBlitz3.ab2@17579>    BNE 'offset
000351EC <AmiBlitz3.ab2@17582>   MOVE.l #$f2124400,d1
000351EE <AmiBlitz3.ab2@17583>    MOVEQ #0,d3
000351F2 <AmiBlitz3.ab2@17584> BRA 'glob
000351F8 <AmiBlitz3.ab2@17587>   SUBQ.l #4,destpointer
000351FC <AmiBlitz3.ab2@17588> BRA 'glob
00035202 <AmiBlitz3.ab2@17591>   TST.b fast
00035206 <AmiBlitz3.ab2@17592>    BEQ 'nofastload
0003520C <AmiBlitz3.ab2@17593>    TST.w regnum
00035210 <AmiBlitz3.ab2@17594>    BNE 'nofastload
00035216 <AmiBlitz3.ab2@17595>    CMP.l fp0addr,a4
0003521A <AmiBlitz3.ab2@17596>    BNE 'nofastload
00035220 <AmiBlitz3.ab2@17597>    MOVE.l fp0iff,d1
00035226 <AmiBlitz3.ab2@17598>    CMP.l firstiff,d1
0003522A <AmiBlitz3.ab2@17599>    BNE 'nofastload
00035230 <AmiBlitz3.ab2@17600>    MOVE.w varmode,d1
00035236 <AmiBlitz3.ab2@17601>    CMP.w fp0mode,d1
0003523A <AmiBlitz3.ab2@17602>    BNE 'nofastload
00035240 <AmiBlitz3.ab2@17603>    CMP.w fp0var,d3
00035244 <AmiBlitz3.ab2@17604>    BNE 'nofastload
00035248 <AmiBlitz3.ab2@17605>    BCLR #16,d2
0003524A <AmiBlitz3.ab2@17606>    MOVE.l (a7)+,d0
0003524C <AmiBlitz3.ab2@17607> RTS
0003524E <AmiBlitz3.ab2@17610>    MOVEQ #0,d0
00035254 <AmiBlitz3.ab2@17611>    MOVE.w regnum,d0
0003525A <AmiBlitz3.ab2@17612>    CMP.l maxregs,d0
0003525E <AmiBlitz3.ab2@17613>    BLE 'ok
00035264 <AmiBlitz3.ab2@17614>    LEA cmplxerr,a0
00035266 <AmiBlitz3.ab2@17615>   MOVE.l a0,-(a7)
0003526C <AmiBlitz3.ab2@17616> JMP handle_compileerror
00035272 <AmiBlitz3.ab2@17619>    LEA regtable,a4
00035274 <AmiBlitz3.ab2@17620>    TST.l (a4)
00035278 <AmiBlitz3.ab2@17621>    BEQ 'noreg
0003527C <AmiBlitz3.ab2@17622>    CMP.w 0+4(a4),d3
00035280 <AmiBlitz3.ab2@17623>    BNE 'doreg1
00035286 <AmiBlitz3.ab2@17624>    MOVE.l #$f2001c00,d1
0003528C <AmiBlitz3.ab2@17625>    MOVE.w regnum,d0
0003528E <AmiBlitz3.ab2@17626>    ASL.w #7,d0
00035290 <AmiBlitz3.ab2@17627>    OR.w d0,d1
00035294 <AmiBlitz3.ab2@17628>    BSR writelong
00035296 <AmiBlitz3.ab2@17629>    MOVE.l (a7)+,d0
00035298 <AmiBlitz3.ab2@17630> RTS
0003529C <AmiBlitz3.ab2@17633>   CMP.w 8+4(a4),d3
000352A0 <AmiBlitz3.ab2@17634>    BNE 'doreg2
000352A6 <AmiBlitz3.ab2@17635>    MOVE.l #$f2001800,d1
000352AC <AmiBlitz3.ab2@17636>    MOVE.w regnum,d0
000352AE <AmiBlitz3.ab2@17637>    ASL.w #7,d0
000352B0 <AmiBlitz3.ab2@17638>    OR.w d0,d1
000352B4 <AmiBlitz3.ab2@17639>    BSR writelong
000352B6 <AmiBlitz3.ab2@17640>    MOVE.l (a7)+,d0
000352B8 <AmiBlitz3.ab2@17641> RTS
000352BC <AmiBlitz3.ab2@17644>   CMP.w 16+4(a4),d3
000352C0 <AmiBlitz3.ab2@17645>    BNE 'doreg3
000352C6 <AmiBlitz3.ab2@17646>    MOVE.l #$f2001400,d1
000352CC <AmiBlitz3.ab2@17647>    MOVE.w regnum,d0
000352CE <AmiBlitz3.ab2@17648>    ASL.w #7,d0
000352D0 <AmiBlitz3.ab2@17649>    OR.w d0,d1
000352D4 <AmiBlitz3.ab2@17650>    BSR  writelong
000352D6 <AmiBlitz3.ab2@17651>    MOVE.l (a7)+,d0
000352D8 <AmiBlitz3.ab2@17652> RTS
000352DC <AmiBlitz3.ab2@17655>   CMP.w 24+4(a4),d3
000352E0 <AmiBlitz3.ab2@17656>    BNE 'doreg4
000352E6 <AmiBlitz3.ab2@17657>    MOVE.l #$f2001000,d1
000352EC <AmiBlitz3.ab2@17658>    MOVE.w regnum,d0
000352EE <AmiBlitz3.ab2@17659>    ASL.w #7,d0
000352F0 <AmiBlitz3.ab2@17660>    OR.w d0,d1
000352F4 <AmiBlitz3.ab2@17661>    BSR writelong
000352F6 <AmiBlitz3.ab2@17662>    MOVE.l (a7)+,d0
000352F8 <AmiBlitz3.ab2@17663> RTS
000352FC <AmiBlitz3.ab2@17666>    CMP.w 32+4(a4),d3
00035300 <AmiBlitz3.ab2@17667>    BNE 'noreg
00035306 <AmiBlitz3.ab2@17668>    MOVE.l #$f2000c00,d1
0003530C <AmiBlitz3.ab2@17669>    MOVE.w regnum,d0
0003530E <AmiBlitz3.ab2@17670>    ASL.w #7,d0
00035310 <AmiBlitz3.ab2@17671>    OR.w d0,d1
00035314 <AmiBlitz3.ab2@17672>    BSR writelong
00035316 <AmiBlitz3.ab2@17673>    MOVE.l (a7)+,d0
00035318 <AmiBlitz3.ab2@17674> RTS
0003531E <AmiBlitz3.ab2@17677>    MOVE.l #$f22d4400,d1                                    ;var
00035324 <AmiBlitz3.ab2@17678>    TST.w varmode
00035328 <AmiBlitz3.ab2@17679>   BEQ 'glob
0003532C <AmiBlitz3.ab2@17680>   BCLR #16,d1                                              ;local
0003532E <AmiBlitz3.ab2@17683>    MOVEQ #0,d0
00035334 <AmiBlitz3.ab2@17684>    MOVE.w regnum,d0
00035338 <AmiBlitz3.ab2@17685>    CMP.w #7,d0
0003533C <AmiBlitz3.ab2@17686>    BLE 'ok2
00035342 <AmiBlitz3.ab2@17687>    LEA cmplxerr,a0
00035344 <AmiBlitz3.ab2@17688>   MOVE.l a0,-(a7)
0003534A <AmiBlitz3.ab2@17689> JMP handle_compileerror
0003534C <AmiBlitz3.ab2@17692>      ASL.w #7,d0
0003534E <AmiBlitz3.ab2@17693>    OR.l d0,d1
00035356 <AmiBlitz3.ab2@17694>    CMP.l #doublecheck,8(a2)
0003535A <AmiBlitz3.ab2@17695>    BNE 'dbl
00035360 <AmiBlitz3.ab2@17696>    OR.l #$00001000,d1
00035364 <AmiBlitz3.ab2@17699>   BSR writelong
00035366 <AmiBlitz3.ab2@17700>    MOVE.l (a7)+,d0
0003536A <AmiBlitz3.ab2@17701>    AND.w #$ff,d2
0003536C <AmiBlitz3.ab2@17702>    MOVE.w d3,d1
00035370 <AmiBlitz3.ab2@17703>    BEQ 'nooffs
00035374 <AmiBlitz3.ab2@17704> BRA writeword
00035376 <AmiBlitz3.ab2@17709> RTS
0003537C <AmiBlitz3.ab2@17712>   MOVE.w regnum,D1
00035382 <AmiBlitz3.ab2@17713>   MOVE.w d1,load_var_reg
00035384 <AmiBlitz3.ab2@17714>   LSL.w #8,D1
0003538E <AmiBlitz3.ab2@17715>   MOVE.l destpointer,load_var_addr
00035394 <AmiBlitz3.ab2@17716>   MOVE.w d2,load_var_size
00035396 <AmiBlitz3.ab2@17717>   LSL.w #1,D1
0003539A <AmiBlitz3.ab2@17718>   BTST #$E,D2
0003539E <AmiBlitz3.ab2@17719>    BNE.w JL_0_B17A
000353A0 <AmiBlitz3.ab2@17720>   TST.b D2
000353A4 <AmiBlitz3.ab2@17721>    BNE.w JL_0_B17E
000353A6 <AmiBlitz3.ab2@17722>   MOVEQ.l #$03,D2
000353AA <AmiBlitz3.ab2@17723>   ORI.w #$200A,D1
000353AE <AmiBlitz3.ab2@17724> BRA.w writeword
000353B2 <AmiBlitz3.ab2@17727>   MOVE.b #$3,D2
000353B6 <AmiBlitz3.ab2@17730>   BTST #$F,D2
000353BA <AmiBlitz3.ab2@17731>    BEQ.w JL_0_B19A                                         ;loadarray
000353C0 <AmiBlitz3.ab2@17732>    TST.b fast                                              ;lea->move xx(a2)
000353C4 <AmiBlitz3.ab2@17733>    BEQ 'la10
000353CA <AmiBlitz3.ab2@17738>    CLR.l load_var_addr
000353CE <AmiBlitz3.ab2@17739> BRA 'la10
000353D6 <AmiBlitz3.ab2@17741>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
000353DA <AmiBlitz3.ab2@17742>    BNE 'la10
000353E0 <AmiBlitz3.ab2@17743>    TST.b optiarray
000353E4 <AmiBlitz3.ab2@17744>    BNE 'la10
000353EA <AmiBlitz3.ab2@17745>    MOVE.l destpointer,a4
000353F0 <AmiBlitz3.ab2@17746>    SUB.l loada,a4
000353F4 <AmiBlitz3.ab2@17747>    CMP.w #4,a4
000353F8 <AmiBlitz3.ab2@17748>    BEQ 'la100
000353FC <AmiBlitz3.ab2@17749>    CMP.w #2,a4
00035400 <AmiBlitz3.ab2@17750>    BNE 'la10
00035406 <AmiBlitz3.ab2@17751>    MOVE.l destpointer,a4
0003540A <AmiBlitz3.ab2@17752>    CMP.b #3,d2
0003540E <AmiBlitz3.ab2@17753>    BCS 'la110
00035414 <AmiBlitz3.ab2@17754>    MOVE.w #$202a,-2(a4)
00035418 <AmiBlitz3.ab2@17755>    OR.w d1,-2(a4)
0003541E <AmiBlitz3.ab2@17756>    MOVE.w arrayoffset,d1
00035422 <AmiBlitz3.ab2@17757>    BSR writeword
00035426 <AmiBlitz3.ab2@17758> BRA JL_0_B194
0003542A <AmiBlitz3.ab2@17761>    CMP.b #2,d2
0003542E <AmiBlitz3.ab2@17762>    BNE 'la120
00035434 <AmiBlitz3.ab2@17763>     MOVE.w #$302a,-2(a4)
00035438 <AmiBlitz3.ab2@17764>    OR.w d1,-2(a4)
0003543E <AmiBlitz3.ab2@17766>    MOVE.w arrayoffset,d1
00035442 <AmiBlitz3.ab2@17767>    BSR writeword
00035446 <AmiBlitz3.ab2@17768> BRA JL_0_B194
0003544A <AmiBlitz3.ab2@17771>   CMP.b #1,d2
0003544E <AmiBlitz3.ab2@17772>    BNE.s 'la10
00035454 <AmiBlitz3.ab2@17773>     MOVE.w #$102a,-2(a4)
00035458 <AmiBlitz3.ab2@17774>    OR.w d1,-2(a4)
0003545E <AmiBlitz3.ab2@17775>    MOVE.w arrayoffset,d1
00035462 <AmiBlitz3.ab2@17776>    BSR writeword
00035466 <AmiBlitz3.ab2@17777> BRA JL_0_B194
0003546C <AmiBlitz3.ab2@17780>   MOVE.l destpointer,a4
00035472 <AmiBlitz3.ab2@17781>    CMP.w #$45ea,-2(a4)
00035476 <AmiBlitz3.ab2@17782>    BNE 'la10
0003547A <AmiBlitz3.ab2@17783>    CMP.b #3,d2
0003547E <AmiBlitz3.ab2@17784>    BCS 'la11
00035484 <AmiBlitz3.ab2@17785>    MOVE.w #$202a,-4(a4)
00035488 <AmiBlitz3.ab2@17786>    OR.w d1,-4(a4)
0003548C <AmiBlitz3.ab2@17787> BRA JL_0_B194
00035490 <AmiBlitz3.ab2@17790>    CMP.b #2,d2
00035494 <AmiBlitz3.ab2@17791>    BNE 'la12
0003549A <AmiBlitz3.ab2@17792>     MOVE.w #$302a,-4(a4)
0003549E <AmiBlitz3.ab2@17793>    OR.w d1,-4(a4)
000354A2 <AmiBlitz3.ab2@17794> BRA JL_0_B194
000354A6 <AmiBlitz3.ab2@17797>   CMP.b #1,d2
000354AA <AmiBlitz3.ab2@17798>    BNE.s 'la10
000354B0 <AmiBlitz3.ab2@17799>     MOVE.w #$102a,-4(a4)
000354B4 <AmiBlitz3.ab2@17800>    OR.w d1,-4(a4)
000354B8 <AmiBlitz3.ab2@17801> BRA JL_0_B194
000354BE <AmiBlitz3.ab2@17804>    OR.w movea2dn,D1
000354C2 <AmiBlitz3.ab2@17805>    BSR.w JL_0_B1B2
000354C6 <AmiBlitz3.ab2@17806>    BSR.w writeword
000354CA <AmiBlitz3.ab2@17809>   ANDI.w #$FF,D2
000354CC <AmiBlitz3.ab2@17810> RTS
000354D2 <AmiBlitz3.ab2@17814>    MOVE.l destpointer,a4
000354DA <AmiBlitz3.ab2@17815>    MOVE.l #$f22a4400,-4(a4)
000354E0 <AmiBlitz3.ab2@17816>    MOVE.w arrayoffset,d1
000354E4 <AmiBlitz3.ab2@17817> BRA writeword
000354EA <AmiBlitz3.ab2@17821>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
000354EE <AmiBlitz3.ab2@17822>    BSR.w JL_0_B1B2
000354F2 <AmiBlitz3.ab2@17823>    BSR.w pokewda5s
000354F4 <AmiBlitz3.ab2@17824>   MOVE.w D3,D1
000354F8 <AmiBlitz3.ab2@17825>    BSR.w writeword
000354FC <AmiBlitz3.ab2@17826> BRA.w JL_0_B194
00035500 <AmiBlitz3.ab2@17829>   BTST #$E,D2
00035504 <AmiBlitz3.ab2@17830>    BNE.w JL_0_B1CA
00035508 <AmiBlitz3.ab2@17831>   CMP.b #$1,D2
0003550C <AmiBlitz3.ab2@17832>    BEQ.w JL_0_B1CC
00035510 <AmiBlitz3.ab2@17833>   CMP.b #$2,D2
00035514 <AmiBlitz3.ab2@17834>    BEQ.w JL_0_B1D2
00035516 <AmiBlitz3.ab2@17837> RTS
0003551A <AmiBlitz3.ab2@17840>   EORI.w #$3000,D1
0003551C <AmiBlitz3.ab2@17841> RTS
00035520 <AmiBlitz3.ab2@17844>   ORI.w #$1000,D1
00035522 <AmiBlitz3.ab2@17845> RTS
0003552A <AmiBlitz3.ab2@17849>   MOVE.w #$FFFF,dfetch
0003552E <AmiBlitz3.ab2@17850>   BSR.w get1bytemain
00035532 <AmiBlitz3.ab2@17851>   CMP.w #$2D,D0
00035536 <AmiBlitz3.ab2@17852>    BNE.w JL_0_B206
0003553A <AmiBlitz3.ab2@17853>   BSR.w get1bytemain
0003553E <AmiBlitz3.ab2@17854>   BSR.w JL_0_B206
00035542 <AmiBlitz3.ab2@17855>   CMP.w #$5,D2
00035546 <AmiBlitz3.ab2@17856>    BCC.w JL_0_B200
00035548 <AmiBlitz3.ab2@17857>   NEG.l D0
0003554A <AmiBlitz3.ab2@17858> RTS
00035550 <AmiBlitz3.ab2@17861>   TST.b fpu
00035554 <AmiBlitz3.ab2@17862>   BEQ 'noneg
00035558 <AmiBlitz3.ab2@17863>   fneg.x fp0
0003555A <AmiBlitz3.ab2@17864> RTS
0003555E <AmiBlitz3.ab2@17867>   BCHG #$7,D0
00035560 <AmiBlitz3.ab2@17868> RTS
00035564 <AmiBlitz3.ab2@17871>   CMP.w #$24,D0
00035568 <AmiBlitz3.ab2@17872>    BEQ.w get_hexconstant
0003556C <AmiBlitz3.ab2@17873>   CMP.w #$25,D0
00035570 <AmiBlitz3.ab2@17874>    BEQ.w JL_0_A8C0
00035574 <AmiBlitz3.ab2@17875>   CMP.w #$2E,D0
00035578 <AmiBlitz3.ab2@17876>    BNE.w JL_0_B224
0003557A <AmiBlitz3.ab2@17879>   MOVEQ.l #$00,D3
0003557E <AmiBlitz3.ab2@17880> BRA.w JL_0_B272
00035580 <AmiBlitz3.ab2@17883>   MOVEQ.l #$00,D3                                          ;number
00035584 <AmiBlitz3.ab2@17884>    BSR.w atoi
00035588 <AmiBlitz3.ab2@17885>   CMP.w #$2E,D0
0003558C <AmiBlitz3.ab2@17886>    BEQ.w JL_0_B268
00035590 <AmiBlitz3.ab2@17887>   ORI.w #$20,D0
00035594 <AmiBlitz3.ab2@17888>   CMP.w #$65,D0
00035598 <AmiBlitz3.ab2@17889>    BNE.w JL_0_B46E
0003559E <AmiBlitz3.ab2@17890>   CMP.l #$800000,D3
000355A2 <AmiBlitz3.ab2@17891>    BCC.w overerr
000355A4 <AmiBlitz3.ab2@17892>   MOVEQ.l #-$01,D6
000355A8 <AmiBlitz3.ab2@17893>   fmove.l d3,fp0
000355AA <AmiBlitz3.ab2@17894>   MOVE.l D3,D0
000355B0 <AmiBlitz3.ab2@17895>   MOVEA.l _mathffpbase,A6
000355B4 <AmiBlitz3.ab2@17896>    JSR -$24(A6)
000355B6 <AmiBlitz3.ab2@17897>   MOVE.l D0,D3
000355BA <AmiBlitz3.ab2@17898>    BSR.w JL_0_B2E6
000355BE <AmiBlitz3.ab2@17899>    BSR.w reget
000355C2 <AmiBlitz3.ab2@17900>    BSR.w JL_0_B480
000355C6 <AmiBlitz3.ab2@17901> BRA.w JL_0_B3DC
000355CA <AmiBlitz3.ab2@17904>   CMP.b #4,d2
000355CE <AmiBlitz3.ab2@17905>   BEQ 'l4
000355D2 <AmiBlitz3.ab2@17906>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
000355D8 <AmiBlitz3.ab2@17909>    TST.b fpu
000355DC <AmiBlitz3.ab2@17910>    BNE 'l1
000355E2 <AmiBlitz3.ab2@17911>    CMP.l #$800000,D3
000355E6 <AmiBlitz3.ab2@17912>    BCC.w overerr
000355EA <AmiBlitz3.ab2@17913> BRA JL_0_B272
000355F0 <AmiBlitz3.ab2@17916>   CMP.l #$7fffffff,d3
000355F4 <AmiBlitz3.ab2@17917>     BCC.w overerr
000355F6 <AmiBlitz3.ab2@17920>   MOVEQ.l #-$01,D6
000355F8 <AmiBlitz3.ab2@17921>   MOVE.l D3,D0
000355FC <AmiBlitz3.ab2@17922>   fmove.l d3,fp0
00035602 <AmiBlitz3.ab2@17923>   MOVEA.l _mathffpbase,A6
00035606 <AmiBlitz3.ab2@17924>    JSR -$24(A6)                                            ;integer to ffp
00035608 <AmiBlitz3.ab2@17925>   MOVE.l D0,-(A7)
0003560C <AmiBlitz3.ab2@17926>    BSR.w get1bytemain
00035610 <AmiBlitz3.ab2@17927>    BSR.w tstnum
00035614 <AmiBlitz3.ab2@17928>    BNE.w syntaxerr
00035616 <AmiBlitz3.ab2@17929>   MOVEQ.l #$00,D3
0003561A <AmiBlitz3.ab2@17930>    BSR.w atoi
0003561C <AmiBlitz3.ab2@17931>   TST.l D3
00035620 <AmiBlitz3.ab2@17932>    BEQ.w JL_0_B2E0
00035626 <AmiBlitz3.ab2@17933>   TST.b fpu
0003562A <AmiBlitz3.ab2@17934>   BNE 'l1
00035630 <AmiBlitz3.ab2@17935>   CMP.l #$800000,D3
00035634 <AmiBlitz3.ab2@17936>    BCC.w overerr
00035638 <AmiBlitz3.ab2@17937> BRA 'l2
0003563E <AmiBlitz3.ab2@17940>   CMP.l #$7fffffff,d3
00035642 <AmiBlitz3.ab2@17941>   BCC overerr
00035646 <AmiBlitz3.ab2@17944>   fmove.l d5,fp1
00035648 <AmiBlitz3.ab2@17945>   MOVE.l D5,D0
0003564C <AmiBlitz3.ab2@17946>    JSR -$24(A6)
0003564E <AmiBlitz3.ab2@17947>   MOVE.l D0,D5
00035652 <AmiBlitz3.ab2@17948>   fmove.l d3,fp2
00035654 <AmiBlitz3.ab2@17949>   MOVE.l D3,D0
00035658 <AmiBlitz3.ab2@17950>    JSR -$24(A6)
0003565C <AmiBlitz3.ab2@17951>   fdiv.x fp1,fp2
0003565E <AmiBlitz3.ab2@17952>   MOVE.l D5,D1
00035662 <AmiBlitz3.ab2@17953>    JSR -$54(A6)
00035666 <AmiBlitz3.ab2@17954>   fadd.x fp2,fp0
00035668 <AmiBlitz3.ab2@17955>   MOVE.l (A7)+,D1
0003566C <AmiBlitz3.ab2@17956>    JSR -$42(A6)
0003566E <AmiBlitz3.ab2@17957>   MOVE.l D0,D3
00035672 <AmiBlitz3.ab2@17958>    BSR.w reget
00035676 <AmiBlitz3.ab2@17959>   ORI.w #$20,D0
0003567A <AmiBlitz3.ab2@17960>   CMP.w #$65,D0
0003567E <AmiBlitz3.ab2@17961>    BNE.w JL_0_B2D4
00035682 <AmiBlitz3.ab2@17962>    BSR.w JL_0_B2E6
00035686 <AmiBlitz3.ab2@17965>    BSR.w reget
0003568A <AmiBlitz3.ab2@17966>    BSR.w JL_0_B480
0003568E <AmiBlitz3.ab2@17967> BRA.w JL_0_B3DC
00035690 <AmiBlitz3.ab2@17970>   MOVE.l (A7)+,D3
00035694 <AmiBlitz3.ab2@17971> BRA.w JL_0_B2D4
00035698 <AmiBlitz3.ab2@17974>   BSR.w get1bytemain
0003569C <AmiBlitz3.ab2@17975>   CMP.w #$2B,D0
000356A0 <AmiBlitz3.ab2@17976>    BEQ.w JL_0_B30E
000356A4 <AmiBlitz3.ab2@17977>   CMP.w #$2D,D0
000356A8 <AmiBlitz3.ab2@17978>    BNE.w JL_0_B312
000356AC <AmiBlitz3.ab2@17979>    BSR.w get1bytemain
000356B0 <AmiBlitz3.ab2@17980>    BSR.w getsign
000356B2 <AmiBlitz3.ab2@17981>   MOVE.l D3,D0
000356B6 <AmiBlitz3.ab2@17982>   fdiv.x fp1,fp0
000356B8 <AmiBlitz3.ab2@17983>   MOVE.l D4,D1
000356BC <AmiBlitz3.ab2@17984>    JSR -$54(A6)
000356BE <AmiBlitz3.ab2@17985>   MOVE.l D0,D3
000356C0 <AmiBlitz3.ab2@17986> RTS
000356C4 <AmiBlitz3.ab2@17989>   BSR.w get1bytemain
000356C8 <AmiBlitz3.ab2@17992>   BSR.w getsign
000356CC <AmiBlitz3.ab2@17993>   fmul.x fp1,fp0
000356CE <AmiBlitz3.ab2@17994>   MOVE.l D3,D0
000356D0 <AmiBlitz3.ab2@17995>   MOVE.l D4,D1
000356D4 <AmiBlitz3.ab2@17996>    JSR -$4E(A6)
000356D6 <AmiBlitz3.ab2@17997>   MOVE.l D0,D3
000356D8 <AmiBlitz3.ab2@17998> RTS
000356DC <AmiBlitz3.ab2@18001>   BSR.w tstnum
000356E0 <AmiBlitz3.ab2@18002>    BNE.w syntaxerr
000356E2 <AmiBlitz3.ab2@18003>   MOVE.w D0,D4
000356E6 <AmiBlitz3.ab2@18004>   SUBI.w #$30,D4
000356EA <AmiBlitz3.ab2@18005>    BSR.w get1bytemain
000356EE <AmiBlitz3.ab2@18006>    BSR.w tstnum
000356F2 <AmiBlitz3.ab2@18007>    BNE.w getsign__skip
000356F6 <AmiBlitz3.ab2@18008>   MULU #$A,D4
000356FA <AmiBlitz3.ab2@18009>   SUBI.w #$30,D0
000356FC <AmiBlitz3.ab2@18010>   ADD.w D0,D4
00035700 <AmiBlitz3.ab2@18011>    BSR.w get1bytemain
00035704 <AmiBlitz3.ab2@18014>   CMP.w #$12,D4
00035708 <AmiBlitz3.ab2@18015>    BHI.w overerr
0003570A <AmiBlitz3.ab2@18016>   LSL.w #3,D4
00035710 <AmiBlitz3.ab2@18017>   LEA fputab,a0
00035712 <AmiBlitz3.ab2@18018>   ADD.l d4,a0
00035718 <AmiBlitz3.ab2@18019>   fmove.d 0(a0),fp1
0003571A <AmiBlitz3.ab2@18020>   LSR.w #1,d4
0003571E <AmiBlitz3.ab2@18021>   MOVE.l facts(PC,D4.W),D4
00035720 <AmiBlitz3.ab2@18022> RTS
00035768 <AmiBlitz3.ab2@18026>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0003576C <AmiBlitz3.ab2@18031>   Dc.l $80000041
00035770 <AmiBlitz3.ab2@18032>   Dc.l $A0000044
00035774 <AmiBlitz3.ab2@18033>   Dc.l $C8000047
00035778 <AmiBlitz3.ab2@18034>   Dc.l $FA00004A
0003577C <AmiBlitz3.ab2@18035>   Dc.l $9C40004E
00035780 <AmiBlitz3.ab2@18036>   Dc.l $C3500051
00035784 <AmiBlitz3.ab2@18037>   Dc.l $F4240054
00035788 <AmiBlitz3.ab2@18038>   Dc.l $98968058
0003578C <AmiBlitz3.ab2@18039>   Dc.l $BEBC205B
00035790 <AmiBlitz3.ab2@18040>   Dc.l $EE6B285E
00035794 <AmiBlitz3.ab2@18041>   Dc.l $9502F962
00035798 <AmiBlitz3.ab2@18042>   Dc.l $BA43B765
0003579C <AmiBlitz3.ab2@18043>   Dc.l $E8D4A568
000357A0 <AmiBlitz3.ab2@18044>   Dc.l $9184E76C
000357A4 <AmiBlitz3.ab2@18045>   Dc.l $B5E6A96F
000357A8 <AmiBlitz3.ab2@18046>   Dc.l $E35F2972
000357AC <AmiBlitz3.ab2@18047>   Dc.l $8E1BCA76
000357B0 <AmiBlitz3.ab2@18048>   Dc.l $B1A2BD79
000357B4 <AmiBlitz3.ab2@18049>   Dc.l $DE0B6C7C
000357B6 <AmiBlitz3.ab2@18053>   MOVEQ.l #$01,D5
000357B8 <AmiBlitz3.ab2@18056>   LSL.l #1,D5
000357BA <AmiBlitz3.ab2@18057>   MOVE.l D5,D1
000357BC <AmiBlitz3.ab2@18058>   LSL.l #2,D5
000357BE <AmiBlitz3.ab2@18059>   ADD.l D1,D5                                              ;divisor for frac convert!
000357C0 <AmiBlitz3.ab2@18060>   LSL.l #1,D3
000357C4 <AmiBlitz3.ab2@18061>    BCS.w overerr
000357C6 <AmiBlitz3.ab2@18062>   MOVE.l D3,D1
000357C8 <AmiBlitz3.ab2@18063>   LSL.l #1,D3
000357CC <AmiBlitz3.ab2@18064>    BCS.w overerr
000357CE <AmiBlitz3.ab2@18065>   LSL.l #1,D3
000357D2 <AmiBlitz3.ab2@18066>    BCS.w overerr
000357D4 <AmiBlitz3.ab2@18067>   ADD.l D1,D3
000357D8 <AmiBlitz3.ab2@18068>   SUBI.w #$30,D0
000357DA <AmiBlitz3.ab2@18069>   ADD.l D0,D3
00035806 <AmiBlitz3.ab2@18070>    !fget                                                   ;bsr.w get1bytemain
0003580A <AmiBlitz3.ab2@18071>    CMP.b #1,d0
0003580E <AmiBlitz3.ab2@18072>    BNE 'cm1
00035810 <AmiBlitz3.ab2@18073>    SUBQ.l #1,a5
00035814 <AmiBlitz3.ab2@18074>    BSR get1bytemain                                        ;??wy not !fget
00035818 <AmiBlitz3.ab2@18077>   CMP.b #$7e,d0
0003581C <AmiBlitz3.ab2@18078>    BNE 'cm2
0003581E <AmiBlitz3.ab2@18079>    SUBQ.l #1,a5
00035822 <AmiBlitz3.ab2@18080>    BSR get1bytemain
00035824 <AmiBlitz3.ab2@18083>   TST.b d0
00035828 <AmiBlitz3.ab2@18084>    BPL 'l10
0003582A <AmiBlitz3.ab2@18085>    LSL.w #8,d0
0003582C <AmiBlitz3.ab2@18086>    MOVE.b (a5)+,d0
00035832 <AmiBlitz3.ab2@18087>    MOVE.w d0,lastchar
00035844 <AmiBlitz3.ab2@18090>   !compare2                                                ;bsr.w tstnum ;cmake bug
00035848 <AmiBlitz3.ab2@18091>    BEQ.w atoi__loop
0003584A <AmiBlitz3.ab2@18092> RTS
0003584C <AmiBlitz3.ab2@18095> dfetch:  Ds.w 1                                            ;fetching data?
00035850 <AmiBlitz3.ab2@18099>   MOVE.w dfetch(PC),D1
00035854 <AmiBlitz3.ab2@18100>    BEQ.w JL_0_B3EC
0003585A <AmiBlitz3.ab2@18101>   CLR.w dfetch
0003585C <AmiBlitz3.ab2@18102> RTS
00035862 <AmiBlitz3.ab2@18105>   MOVE.b d2,isconstantvalue
00035868 <AmiBlitz3.ab2@18106>   MOVE.l d0,lastconstantvalue
0003586E <AmiBlitz3.ab2@18107>   MOVE.w d2,imm_size
00035878 <AmiBlitz3.ab2@18108>   MOVE.w regnum,imm_reg
00035882 <AmiBlitz3.ab2@18109>   MOVE.l destpointer,imm_addr                           ; long
00035886 <AmiBlitz3.ab2@18110>   CMP.w #$3,D2
0003588A <AmiBlitz3.ab2@18111>   BEQ.w JL_0_B434
0003588E <AmiBlitz3.ab2@18112>   CMP.w #$5,D2                                          ;float
00035892 <AmiBlitz3.ab2@18113>   BEQ.w JL_0_B434
00035896 <AmiBlitz3.ab2@18114>   CMP.w #$1,D2
0003589A <AmiBlitz3.ab2@18115>   BEQ.w JL_0_B418
0003589E <AmiBlitz3.ab2@18116>   CMP.w #$2,D2
000358A2 <AmiBlitz3.ab2@18117>   BEQ.w JL_0_B418
000358A6 <AmiBlitz3.ab2@18118>   CMP.w #$4,D2
000358AA <AmiBlitz3.ab2@18119>   BEQ.w JL_0_B434
000358AE <AmiBlitz3.ab2@18121> BRA.w mismatcherr
000358B4 <AmiBlitz3.ab2@18124>   MOVE.w regnum,D1
000358B6 <AmiBlitz3.ab2@18125>   LSL.w #8,D1
000358B8 <AmiBlitz3.ab2@18126>   LSL.w #1,D1
000358BC <AmiBlitz3.ab2@18127>   ORI.w #$303C,D1
000358C0 <AmiBlitz3.ab2@18128>    BSR.w writeword
000358C2 <AmiBlitz3.ab2@18129>   MOVE.w D0,D1
000358C6 <AmiBlitz3.ab2@18130>    BSR.w writeword
000358CA <AmiBlitz3.ab2@18131> BRA.w reget
000358CC <AmiBlitz3.ab2@18134>   MOVEQ #0,d1
000358D2 <AmiBlitz3.ab2@18135>   MOVE.w regnum,D1
000358D8 <AmiBlitz3.ab2@18136>   TST.b fpu
000358DC <AmiBlitz3.ab2@18137>   BEQ 'f1
000358E0 <AmiBlitz3.ab2@18138>   CMP.w #5,d2
000358E4 <AmiBlitz3.ab2@18139>   BEQ 'l10
000358E8 <AmiBlitz3.ab2@18140> BRA 'f2
000358EE <AmiBlitz3.ab2@18143>   TST.b iee
000358F2 <AmiBlitz3.ab2@18144>   BNE 'l10
000358F4 <AmiBlitz3.ab2@18147>   LSL.w #8,D1
000358F6 <AmiBlitz3.ab2@18148>   LSL.w #1,D1
000358FA <AmiBlitz3.ab2@18149>   ORI.w #$203C,D1
000358FE <AmiBlitz3.ab2@18150>    BSR.w writeword
00035900 <AmiBlitz3.ab2@18151>   MOVE.l D0,D1
00035904 <AmiBlitz3.ab2@18152>    BSR.w writelong
00035908 <AmiBlitz3.ab2@18153> BRA.w reget
0003590A <AmiBlitz3.ab2@18156>   MOVEQ #5,d2
0003590C <AmiBlitz3.ab2@18157>   ASL.l #7,d1
0003590E <AmiBlitz3.ab2@18158>   SUBQ.l #8,a7
00035914 <AmiBlitz3.ab2@18163>       OR.l #$f23c4400,d1                                   ;fmove.s
0003591A <AmiBlitz3.ab2@18164>        fmove.s fp0,0(a7)
0003591E <AmiBlitz3.ab2@18166>   BSR writelong
00035920 <AmiBlitz3.ab2@18167>   MOVE.l (a7)+,d1
00035924 <AmiBlitz3.ab2@18168>   BSR writelong
00035926 <AmiBlitz3.ab2@18169>   MOVE.l (a7)+,d1
0003592A <AmiBlitz3.ab2@18173> BRA.w reget
0003592C <AmiBlitz3.ab2@18179>  MOVE.l D3,D0
0003592E <AmiBlitz3.ab2@18180>   TST.w D6
00035932 <AmiBlitz3.ab2@18181>    BEQ.w JL_0_B46C
00035938 <AmiBlitz3.ab2@18182>   MOVEA.l _mathffpbase,A6
0003593C <AmiBlitz3.ab2@18183>    JSR -$1E(A6)
00035940 <AmiBlitz3.ab2@18184>    BVC.w JL_0_B46C
00035942 <AmiBlitz3.ab2@18185>   ADDQ.w #4,A7
00035946 <AmiBlitz3.ab2@18186> BRA.w JL_0_B5A0
00035948 <AmiBlitz3.ab2@18189> RTS
0003594A <AmiBlitz3.ab2@18193>   MOVEQ.l #$00,D6
0003594E <AmiBlitz3.ab2@18194>    fmove.l d3,fp0
00035952 <AmiBlitz3.ab2@18197>   BSR.w JL_0_B480
00035956 <AmiBlitz3.ab2@18198> BRA.w JL_0_B3DC
00035958 <AmiBlitz3.ab2@18201>   MOVE.w D2,-(A7)
0003595C <AmiBlitz3.ab2@18202>    BSR.w JL_0_BF6A
0003595E <AmiBlitz3.ab2@18203>   MOVE.w (A7)+,D2
00035960 <AmiBlitz3.ab2@18206>   TST.w D2
00035964 <AmiBlitz3.ab2@18207>    BNE.w JL_0_B498
00035966 <AmiBlitz3.ab2@18208>   TST.w D6
0003596A <AmiBlitz3.ab2@18209>    BEQ.w JL_0_B492
0003596C <AmiBlitz3.ab2@18210>   MOVEQ.l #$04,D2
00035970 <AmiBlitz3.ab2@18211> BRA.w JL_0_B510
00035972 <AmiBlitz3.ab2@18214>   MOVEQ.l #$02,D2
00035976 <AmiBlitz3.ab2@18215> BRA.w JL_0_B4C4
0003597A <AmiBlitz3.ab2@18218>   CMP.w #$1,D2
0003597E <AmiBlitz3.ab2@18219>    BEQ.w JL_0_B4C4
00035982 <AmiBlitz3.ab2@18220>   CMP.w #$2,D2
00035986 <AmiBlitz3.ab2@18221>    BEQ.w JL_0_B4F8
0003598A <AmiBlitz3.ab2@18222>   CMP.w #$3,D2
0003598E <AmiBlitz3.ab2@18223>    BEQ.w JL_0_B57A
00035992 <AmiBlitz3.ab2@18224>   CMP.w #$4,D2
00035996 <AmiBlitz3.ab2@18225>    BEQ.w JL_0_B506
0003599A <AmiBlitz3.ab2@18226>   CMP.w #$5,D2
0003599E <AmiBlitz3.ab2@18227>    BEQ.w JL_0_B586
000359A2 <AmiBlitz3.ab2@18228> BRA.w mismatcherr
000359A6 <AmiBlitz3.ab2@18231>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
000359AC <AmiBlitz3.ab2@18232>   CMP.l #$7f,D0
000359B0 <AmiBlitz3.ab2@18233>    BGT.w JL_0_B4DC
000359B6 <AmiBlitz3.ab2@18234>   CMP.l #$FFFFFF80,D0
000359BA <AmiBlitz3.ab2@18235>    BGE.w JL_0_B59E
000359BC <AmiBlitz3.ab2@18238>   MOVEQ.l #$02,D2                                          ;was 2 before
000359C2 <AmiBlitz3.ab2@18239>   CMP.l #$7fff,D0
000359C6 <AmiBlitz3.ab2@18240>    BGT.w JL_0_B4F2
000359CC <AmiBlitz3.ab2@18241>   CMP.l #$FFFF8000,D0
000359D0 <AmiBlitz3.ab2@18242>    BGE.w JL_0_B59E
000359D2 <AmiBlitz3.ab2@18245>   MOVEQ.l #$03,D2
000359D6 <AmiBlitz3.ab2@18246> BRA.w JL_0_B59E
000359D8 <AmiBlitz3.ab2@18272>   TST.w D6
000359DC <AmiBlitz3.ab2@18273>    BNE.w JL_0_B510
000359E0 <AmiBlitz3.ab2@18274>    BSR.w JL_0_B450
000359E4 <AmiBlitz3.ab2@18275> BRA.w JL_0_B4DC
000359E8 <AmiBlitz3.ab2@18278>   BSR.w JL_0_B450
000359EA <AmiBlitz3.ab2@18279>   TST.w D6
000359EE <AmiBlitz3.ab2@18280>   BEQ.w JL_0_B560
000359F4 <AmiBlitz3.ab2@18283>   CMP.l #MaxWordSgnd,D0
000359F8 <AmiBlitz3.ab2@18284>    BGT.w JL_0_B5A0
000359FE <AmiBlitz3.ab2@18285>   CMP.l #$FFFF8000,D0
00035A02 <AmiBlitz3.ab2@18286>    BLT.w JL_0_B5A0
00035A04 <AmiBlitz3.ab2@18287>   MOVE.w D0,-(A7)
00035A08 <AmiBlitz3.ab2@18288>    JSR -$24(A6)
00035A0A <AmiBlitz3.ab2@18289>   MOVE.l D0,D1
00035A0C <AmiBlitz3.ab2@18290>   MOVE.l D3,D0
00035A10 <AmiBlitz3.ab2@18291>    JSR -$48(A6)
00035A16 <AmiBlitz3.ab2@18292>   MOVE.l #$80000051,D1
00035A1A <AmiBlitz3.ab2@18293>    JSR -$4E(A6)
00035A1E <AmiBlitz3.ab2@18294>    JSR -$1E(A6)
00035A22 <AmiBlitz3.ab2@18295>    BEQ.w JL_0_B55A
00035A28 <AmiBlitz3.ab2@18296>   CMP.l #$10000,D0
00035A2C <AmiBlitz3.ab2@18297>    BCC.w JL_0_B55A
00035A2E <AmiBlitz3.ab2@18298>   MOVE.w D0,D1
00035A30 <AmiBlitz3.ab2@18299>   MOVE.w (A7)+,D0
00035A32 <AmiBlitz3.ab2@18300>   SWAP D0
00035A34 <AmiBlitz3.ab2@18301>   MOVE.w D1,D0
00035A38 <AmiBlitz3.ab2@18302> BRA.w JL_0_B59E
00035A3A <AmiBlitz3.ab2@18305>   ADDQ.w #2,A7
00035A3E <AmiBlitz3.ab2@18306> BRA.w JL_0_B5A0
00035A44 <AmiBlitz3.ab2@18309>   CMP.l #MaxWordSgnd,D0
00035A48 <AmiBlitz3.ab2@18310>    BGT.w JL_0_B4F2
00035A4E <AmiBlitz3.ab2@18311>   CMP.l #$FFFF8000,D0
00035A52 <AmiBlitz3.ab2@18312>    BLT.w JL_0_B4F2
00035A54 <AmiBlitz3.ab2@18313>   SWAP D0
00035A58 <AmiBlitz3.ab2@18314> BRA.w JL_0_B59E
00035A5A <AmiBlitz3.ab2@18317>   TST.w D6
00035A5E <AmiBlitz3.ab2@18318>   BNE.w JL_0_B5A0
00035A60 <AmiBlitz3.ab2@18319>   MOVE.l D3,D0
00035A64 <AmiBlitz3.ab2@18320> BRA.w JL_0_B59E
00035A66 <AmiBlitz3.ab2@18323>   TST.w D6
00035A6A <AmiBlitz3.ab2@18324>   BNE.w JL_0_B5A0
00035A6C <AmiBlitz3.ab2@18325>   MOVE.l D3,D0
00035A72 <AmiBlitz3.ab2@18326>   MOVEA.l _mathffpbase,A6
00035A76 <AmiBlitz3.ab2@18327>   JSR -$24(A6)
00035A78 <AmiBlitz3.ab2@18328>   MOVE.l D0,D3
00035A7C <AmiBlitz3.ab2@18329> BRA.w JL_0_B5A0
00035A7E <AmiBlitz3.ab2@18332> RTS
00035A80 <AmiBlitz3.ab2@18335>   MOVEQ.l #$05,D2
00035A82 <AmiBlitz3.ab2@18336>   MOVE.l D3,D0
00035A84 <AmiBlitz3.ab2@18337> RTS
00035A88 <AmiBlitz3.ab2@18341>             Ds.l 1                                         ;??Looks like unused data??
00035A8C <AmiBlitz3.ab2@18342> pushpc:     Ds.l 1
00035A90 <AmiBlitz3.ab2@18343> pushoff:    Ds.l 1
00035A94 <AmiBlitz3.ab2@18344> pushdooff:  Ds.l 1
00035A96 <AmiBlitz3.ab2@18345> pushclen:   Ds.w 1
00035A9A <AmiBlitz3.ab2@18346> pushat:     Ds.l 1
00035AA4 <AmiBlitz3.ab2@18350>   MOVE.l destpointer,pushpc
00035AAE <AmiBlitz3.ab2@18351>   MOVE.l hunkoffsetbase,pushoff
00035AB0 <AmiBlitz3.ab2@18352> RTS
00035AB4 <AmiBlitz3.ab2@18356>   MOVEM.l D0-D1/A0-A1,-(A7)
00035ABA <AmiBlitz3.ab2@18357>   MOVE.l destpointer,D0
00035ABE <AmiBlitz3.ab2@18358>   MOVE.l pushpc(PC),D1
00035AC4 <AmiBlitz3.ab2@18359>   MOVE.l D1,destpointer
00035AC6 <AmiBlitz3.ab2@18360>   SUB.l D1,D0
00035ACC <AmiBlitz3.ab2@18361>   MOVE.w D0,pushclen
00035AD0 <AmiBlitz3.ab2@18362>    BEQ.w JL_0_B636
00035AD6 <AmiBlitz3.ab2@18363>   MOVE.w dontwrite,D1
00035ADA <AmiBlitz3.ab2@18364>    BNE.w JL_0_B636
00035AE2 <AmiBlitz3.ab2@18365>    CMP.w #1000,pushclen
00035AE6 <AmiBlitz3.ab2@18366>    BGE conmemerr
00035AEC <AmiBlitz3.ab2@18367>    MOVE.l pushat,d0
00035AF0 <AmiBlitz3.ab2@18368>    BNE 'nomem
00035AF6 <AmiBlitz3.ab2@18369>    MOVE.l #1024,d0
00035AF8 <AmiBlitz3.ab2@18370>   MOVEQ.l #$01,D1
00035AFE <AmiBlitz3.ab2@18371>   MOVEA.l _execbase,A6
00035B04 <AmiBlitz3.ab2@18372>   MOVE.l mempool,a0
00035B08 <AmiBlitz3.ab2@18373>   JSR _AllocPooled(a6)
00035B0E <AmiBlitz3.ab2@18375>   MOVE.l D0,pushat
00035B10 <AmiBlitz3.ab2@18378>   MOVEA.l D0,A0
00035B16 <AmiBlitz3.ab2@18379>   MOVEA.l pushpc,A1
00035B1C <AmiBlitz3.ab2@18380>   MOVE.l A1,destpointer
00035B22 <AmiBlitz3.ab2@18381>   MOVE.w pushclen,D0
00035B24 <AmiBlitz3.ab2@18382>   LSR.w #1,D0
00035B26 <AmiBlitz3.ab2@18383>   SUBQ.w #1,D0
00035B28 <AmiBlitz3.ab2@18386>     MOVE.w (A1)+,(A0)+
00035B2C <AmiBlitz3.ab2@18387>   DBF D0,JL_0_B626
00035B36 <AmiBlitz3.ab2@18389>    MOVE.l hunkoffsetbase,pushdooff
00035B3A <AmiBlitz3.ab2@18392>   MOVEM.l (A7)+,D0-D1/A0-A1
00035B3C <AmiBlitz3.ab2@18393> RTS
00035B40 <AmiBlitz3.ab2@18397>   MOVEM.l D0-D1/A0-A1,-(A7)
00035B42 <AmiBlitz3.ab2@18398>   MOVEQ.l #$00,D0
00035B48 <AmiBlitz3.ab2@18399>   MOVE.w pushclen,D0
00035B4C <AmiBlitz3.ab2@18400>    BEQ.w JL_0_B6D8
00035B52 <AmiBlitz3.ab2@18401>   MOVE.l destpointer,D1
00035B58 <AmiBlitz3.ab2@18402>   ADD.l D0,destpointer
00035B5E <AmiBlitz3.ab2@18403>   TST.w dontwrite
00035B62 <AmiBlitz3.ab2@18404>    BNE.w JL_0_B6D8
00035B64 <AmiBlitz3.ab2@18405>   LSR.w #1,D0
00035B66 <AmiBlitz3.ab2@18406>   SUBQ.w #1,D0
00035B68 <AmiBlitz3.ab2@18407>   MOVEA.l D1,A1
00035B6E <AmiBlitz3.ab2@18408>   MOVEA.l pushat,A0
00035B74 <AmiBlitz3.ab2@18411>     CMPA.l destbufferend,A1
00035B78 <AmiBlitz3.ab2@18412>     BCS.w JL_0_B684
00035B80 <AmiBlitz3.ab2@18414>     MOVE.w #$FFFF,dontwrite
00035B84 <AmiBlitz3.ab2@18415>   BRA.w JL_0_B6D8
00035B86 <AmiBlitz3.ab2@18418>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
00035B8A <AmiBlitz3.ab2@18419>   DBF D0,JL_0_B66E
00035B90 <AmiBlitz3.ab2@18421>   SUB.l pushpc,D1
00035B94 <AmiBlitz3.ab2@18422>   BEQ.w JL_0_B6C2
00035B9A <AmiBlitz3.ab2@18423>   MOVEA.l pushdooff,A0
00035BA0 <AmiBlitz3.ab2@18426>   CMPA.l pushoff,A0
00035BA4 <AmiBlitz3.ab2@18427>   BEQ.w JL_0_B6C2
00035BA8 <AmiBlitz3.ab2@18428>   MOVEA.l $4(A0),A1
00035BAE <AmiBlitz3.ab2@18429>   ADDA.l destbufferstart,A1
00035BB4 <AmiBlitz3.ab2@18430>   CMPA.l destbufferend,A1
00035BB8 <AmiBlitz3.ab2@18431>   BCC.w JL_0_B6BC
00035BBC <AmiBlitz3.ab2@18432>   ADD.l D1,$4(A0)
00035BBE <AmiBlitz3.ab2@18435>   MOVEA.l (A0),A0
00035BC2 <AmiBlitz3.ab2@18436> BRA.w JL_0_B69A
00035BC8 <AmiBlitz3.ab2@18439>   MOVEA.l pushat,A1
00035BCA <AmiBlitz3.ab2@18440>   MOVEQ.l #$00,D0
00035BD0 <AmiBlitz3.ab2@18441>   MOVE.w pushclen,D0
00035BD6 <AmiBlitz3.ab2@18442>   MOVEA.l _execbase,A6
00035BDC <AmiBlitz3.ab2@18443>   MOVE.l mempool,a0
00035BE0 <AmiBlitz3.ab2@18447>   MOVEM.l (A7)+,D0-D1/A0-A1
00035BE2 <AmiBlitz3.ab2@18448> RTS
00035BE4 <AmiBlitz3.ab2@18451>   MOVE.l D1,-(A7)                                          ;array mul
00035BE6 <AmiBlitz3.ab2@18452>   MOVEQ.l #$00,D2
00035BE8 <AmiBlitz3.ab2@18453>   MOVEQ.l #$0F,D3
00035BEA <AmiBlitz3.ab2@18456>     LSL.w #1,D1
00035BEE <AmiBlitz3.ab2@18457>     BCC.w JL_0_B6EE
00035BF0 <AmiBlitz3.ab2@18458>     ADDQ.w #1,D2
00035BF2 <AmiBlitz3.ab2@18459>     MOVE.w D3,D4
00035BF6 <AmiBlitz3.ab2@18462>   DBF D3,JL_0_B6E4
00035BF8 <AmiBlitz3.ab2@18464>   SUBQ.w #1,D2
00035BFC <AmiBlitz3.ab2@18465>    BNE.w JL_0_B726
00035BFE <AmiBlitz3.ab2@18466>   ADDQ.w #4,A7
00035C00 <AmiBlitz3.ab2@18467>   MOVE.w D4,D1
00035C04 <AmiBlitz3.ab2@18468>    BEQ.w JL_0_B724
00035C08 <AmiBlitz3.ab2@18469>   CMP.w #$8,D1
00035C0C <AmiBlitz3.ab2@18470>    BCS.w JL_0_B712
00035C10 <AmiBlitz3.ab2@18471>   SUBI.w #$8,D1
00035C14 <AmiBlitz3.ab2@18472>    BSR.w JL_0_B712
00035C16 <AmiBlitz3.ab2@18473>   MOVEQ.l #$00,D1
00035C18 <AmiBlitz3.ab2@18476>   LSL.w #8,D1
00035C1A <AmiBlitz3.ab2@18477>   LSL.w #1,D1
00035C1E <AmiBlitz3.ab2@18478>   ORI.w #$E188,D1
00035C24 <AmiBlitz3.ab2@18479>   OR.w regnum,D1
00035C28 <AmiBlitz3.ab2@18480> BRA.w writeword
00035C2A <AmiBlitz3.ab2@18483> RTS
00035C2C <AmiBlitz3.ab2@18486>   MOVEQ #0,d1
00035C32 <AmiBlitz3.ab2@18487>   MOVE.w regnum,D1
00035C34 <AmiBlitz3.ab2@18488>   LSL.l #8,D1
00035C36 <AmiBlitz3.ab2@18490>   LSL.l #4,d1
00035C3C <AmiBlitz3.ab2@18492>   OR.l #$4c3c0000,d1
00035C42 <AmiBlitz3.ab2@18493>   OR.w regnum,d1
00035C46 <AmiBlitz3.ab2@18494>   BSR.w writelong
00035C48 <AmiBlitz3.ab2@18495>   MOVE.l (A7)+,D1
00035C4C <AmiBlitz3.ab2@18497> BRA writelong
00035C52 <AmiBlitz3.ab2@18500>   MOVE.l destpointer,-(A7)
00035C54 <AmiBlitz3.ab2@18501>   MOVEQ.l #-$01,D7
00035C58 <AmiBlitz3.ab2@18504>     BSR.w findhilib
00035C5C <AmiBlitz3.ab2@18505>      BEQ.w JL_0_B8A4
00035C60 <AmiBlitz3.ab2@18506>     TST.w $C(A2)
00035C64 <AmiBlitz3.ab2@18507>      BPL.w JL_0_B746
00035C68 <AmiBlitz3.ab2@18509>     MOVE.l $16(A2),D1
00035C6C <AmiBlitz3.ab2@18510>     BEQ.w JL_0_B746
00035C70 <AmiBlitz3.ab2@18512>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
00035C74 <AmiBlitz3.ab2@18513>     CMP.w #-$2,D1
00035C78 <AmiBlitz3.ab2@18514>      BNE.w JL_0_B772
00035C7C <AmiBlitz3.ab2@18515>     BSR.w makevsize
00035C80 <AmiBlitz3.ab2@18516> BRA.w JL_0_B7FE
00035C84 <AmiBlitz3.ab2@18519>     CMP.w #-$5C4,D1
00035C88 <AmiBlitz3.ab2@18520>      BNE.w JL_0_B790
00035C8C <AmiBlitz3.ab2@18521>     MOVE.w #$7000,D1
00035C94 <AmiBlitz3.ab2@18522>     BTST #$7,autorun
00035C96 <AmiBlitz3.ab2@18523>     SNE D1
00035C9A <AmiBlitz3.ab2@18524>     BSR.w writeword
00035C9E <AmiBlitz3.ab2@18525> BRA.w JL_0_B7FE
00035CA2 <AmiBlitz3.ab2@18528>     CMP.w #-$12D,D1
00035CA6 <AmiBlitz3.ab2@18529>      BNE.w JL_0_B7A0
00035CAA <AmiBlitz3.ab2@18530>     BSR.w makessize
00035CAE <AmiBlitz3.ab2@18531> BRA.w JL_0_B7FE
00035CB2 <AmiBlitz3.ab2@18534>     CMP.w #-$1F5,D1
00035CB6 <AmiBlitz3.ab2@18535>      BNE.w JL_0_B7C2
00035CBA <AmiBlitz3.ab2@18536>     MOVE.w #$203C,D1
00035CBE <AmiBlitz3.ab2@18537>     BSR.w writeword
00035CC2 <AmiBlitz3.ab2@18538>     BSR.w addoff
00035CC8 <AmiBlitz3.ab2@18539>     MOVE.l endop,D1
00035CCC <AmiBlitz3.ab2@18540>     BSR.w writelong
00035CD0 <AmiBlitz3.ab2@18541> BRA.w JL_0_B7FE
00035CD4 <AmiBlitz3.ab2@18544>     CMP.w #-$3E9,D1
00035CD8 <AmiBlitz3.ab2@18545>      BNE.w JL_0_B7E4
00035CDC <AmiBlitz3.ab2@18546>     MOVE.w #$203C,D1
00035CE0 <AmiBlitz3.ab2@18547>     BSR.w writeword
00035CE4 <AmiBlitz3.ab2@18548>     BSR.w addoff
00035CEA <AmiBlitz3.ab2@18549>     MOVE.l data2at,D1
00035CEE <AmiBlitz3.ab2@18550>     BSR.w writelong
00035CF2 <AmiBlitz3.ab2@18551> BRA.w JL_0_B7FE
00035CF6 <AmiBlitz3.ab2@18554>     CMP.w #$1,D1
00035CFA <AmiBlitz3.ab2@18555>      BNE.w JL_0_B7FE
00035CFE <AmiBlitz3.ab2@18556>     MOVE.w #$203C,D1
00035D02 <AmiBlitz3.ab2@18557>     BSR.w writeword
00035D08 <AmiBlitz3.ab2@18558>     MOVE.l ptr_seg_debugger,D1
00035D0C <AmiBlitz3.ab2@18559>     BSR.w writelong
00035D10 <AmiBlitz3.ab2@18562>     MOVE.l $16(A2),D1
00035D18 <AmiBlitz3.ab2@18563>     MOVE.w #$FFFF,lasta6
00035D1C <AmiBlitz3.ab2@18564>     BSR.w Amakelibsub
00035D22 <AmiBlitz3.ab2@18565>     CMPI.w #$FFFE,$4(A2)
00035D26 <AmiBlitz3.ab2@18566>      BNE.w JL_0_B83A
00035D2C <AmiBlitz3.ab2@18567>     MOVE.l intdata1,D1
00035D30 <AmiBlitz3.ab2@18568>      BEQ.w JL_0_B83A
00035D36 <AmiBlitz3.ab2@18569>     MOVE.w putidata1,D1
00035D3A <AmiBlitz3.ab2@18570>     BSR.w writeword
00035D3E <AmiBlitz3.ab2@18571>     BSR.w addoff
00035D44 <AmiBlitz3.ab2@18572>     MOVE.l intdata1,D1
00035D48 <AmiBlitz3.ab2@18573>     BSR.w writelong
00035D4C <AmiBlitz3.ab2@18576>     MOVE.w #$2B40,D1
00035D50 <AmiBlitz3.ab2@18577>     TST.w $1A(A2)
00035D54 <AmiBlitz3.ab2@18578>      BEQ.w JL_0_B746
00035D58 <AmiBlitz3.ab2@18579>      BPL.w JL_0_B84E
00035D5C <AmiBlitz3.ab2@18580>     MOVE.w #$3B40,D1
00035D60 <AmiBlitz3.ab2@18583>     BSR.w writeword
00035D64 <AmiBlitz3.ab2@18584>     MOVE.w $A(A2),D1
00035D68 <AmiBlitz3.ab2@18585>      BSR.w writeword
00035D6E <AmiBlitz3.ab2@18586>     CMPI.w #$FFFA,$4(A2)
00035D72 <AmiBlitz3.ab2@18587>      BNE.w JL_0_B746
00035D74 <AmiBlitz3.ab2@18588>     MOVE.w D7,-(A7)
00035D7A <AmiBlitz3.ab2@18589>     MOVE.w numstatic,D4
00035D7E <AmiBlitz3.ab2@18590>      BEQ.w JL_0_B882
00035D84 <AmiBlitz3.ab2@18591>     MOVE.l staticdata,D3
00035D8A <AmiBlitz3.ab2@18592>      JSR datastart
00035D8E <AmiBlitz3.ab2@18593>     MOVE.w #$C500,D1
00035D92 <AmiBlitz3.ab2@18594>      BSR.w tokejsr2
00035D98 <AmiBlitz3.ab2@18597>     MOVE.w maxsused,D4
00035D9C <AmiBlitz3.ab2@18598>      BEQ.w JL_0_B89E
00035DA2 <AmiBlitz3.ab2@18599>     MOVE.l maxsat,D3
00035DA8 <AmiBlitz3.ab2@18600>      JSR datastart
00035DAC <AmiBlitz3.ab2@18601>     MOVE.w #$CF00,D1
00035DB0 <AmiBlitz3.ab2@18602>      BSR.w tokejsr2
00035DB2 <AmiBlitz3.ab2@18605>     MOVE.w (A7)+,D7
00035DB6 <AmiBlitz3.ab2@18606> BRA.w JL_0_B746
00035DBC <AmiBlitz3.ab2@18609>   MOVE.l destpointer,D1
00035DBE <AmiBlitz3.ab2@18610>   CMP.l (A7),D1
00035DC2 <AmiBlitz3.ab2@18611>    BNE.w JL_0_B8BC
00035DCA <AmiBlitz3.ab2@18612>   MOVE.w #$0008,noinits+2
00035DCE <AmiBlitz3.ab2@18613> BRA.w JL_0_B8E6
00035DD4 <AmiBlitz3.ab2@18616>   CLR.w noinits+2
00035DDA <AmiBlitz3.ab2@18617>   MOVE.w dontwrite,D1
00035DDE <AmiBlitz3.ab2@18618>    BNE.w JL_0_B8DE
00035DE4 <AmiBlitz3.ab2@18619>   TST.l newinitaddr
00035DE8 <AmiBlitz3.ab2@18620>    BEQ 'l10
00035DEE <AmiBlitz3.ab2@18621>   MOVE.l newinitaddr,D2
00035DF4 <AmiBlitz3.ab2@18622>   SUB.l destbufferstart,D2
00035DF6 <AmiBlitz3.ab2@18623>   ADDQ.l #2,d2
00035DFC <AmiBlitz3.ab2@18624>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
00035E00 <AmiBlitz3.ab2@18626>   MOVE.w #$4EB9,(A0)+
00035E02 <AmiBlitz3.ab2@18627>   MOVE.l (A7),(A0)+
00035E06 <AmiBlitz3.ab2@18629> BRA 'l20
00035E0C <AmiBlitz3.ab2@18632>   MOVEA.l destbufferstart,A0                               ;write initcode
00035E12 <AmiBlitz3.ab2@18633>   TST.b saved0
00035E16 <AmiBlitz3.ab2@18634>   BEQ 'l1
00035E1A <AmiBlitz3.ab2@18635>   MOVE.w #$23c0,(a0)+
00035E1C <AmiBlitz3.ab2@18636>   MOVE.l a0,a1
00035E1E <AmiBlitz3.ab2@18637>   ADDQ.l #6,a1
00035E20 <AmiBlitz3.ab2@18638>   MOVE.l a1,(a0)+
00035E22 <AmiBlitz3.ab2@18639>   MOVEQ.l #$02,D2
00035E26 <AmiBlitz3.ab2@18640>   BSR.w addhunkoffset
00035E2A <AmiBlitz3.ab2@18641>   MOVE.w #$6004,(a0)+
00035E30 <AmiBlitz3.ab2@18642>   MOVE.l #$4e714e71,(a0)+
00035E34 <AmiBlitz3.ab2@18645>   MOVE.w #$4EB9,(A0)+
00035E36 <AmiBlitz3.ab2@18646>   MOVE.l (A7),(A0)+
00035E38 <AmiBlitz3.ab2@18647>   MOVEQ #2,d2
00035E3E <AmiBlitz3.ab2@18648>   TST.b saved0
00035E42 <AmiBlitz3.ab2@18649>   BEQ 'l20
00035E44 <AmiBlitz3.ab2@18650>   MOVEQ.l #14,D2
00035E48 <AmiBlitz3.ab2@18653>   BSR.w addhunkoffset
00035E4C <AmiBlitz3.ab2@18654>   MOVE.w #$2039,(a0)+
00035E4E <AmiBlitz3.ab2@18655>   MOVE.l a1,(a0)+
00035E50 <AmiBlitz3.ab2@18656>   MOVEQ.l #20,d2
00035E54 <AmiBlitz3.ab2@18659>   BSR.w addhunkoffset
00035E58 <AmiBlitz3.ab2@18662>   MOVE.w #$4E75,D1
00035E5C <AmiBlitz3.ab2@18663>   BSR.w writeword
00035E5E <AmiBlitz3.ab2@18666>   ADDQ.w #4,A7
00035E60 <AmiBlitz3.ab2@18667> RTS
00035E64 <AmiBlitz3.ab2@18672>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
00035E6A <AmiBlitz3.ab2@18674>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
00035E70 <AmiBlitz3.ab2@18676>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
00035E76 <AmiBlitz3.ab2@18681>   MOVE.l stringbuffer,D1
00035E7A <AmiBlitz3.ab2@18682> BRA.w makesize
00035E7C <AmiBlitz3.ab2@18685>   MOVEQ.l #$00,D1
00035E82 <AmiBlitz3.ab2@18686>   MOVE.w globalvarpointer,D1
00035E86 <AmiBlitz3.ab2@18687>   SUBI.w #$8000,D1
00035E8A <AmiBlitz3.ab2@18688>   BNE.w makesize
00035E8C <AmiBlitz3.ab2@18689>     MOVEQ.l #$08,D1
00035E8E <AmiBlitz3.ab2@18692>   MOVE.l D1,-(A7)
00035E92 <AmiBlitz3.ab2@18693>   MOVE.w #$203C,D1
00035E96 <AmiBlitz3.ab2@18694>   BSR.w writeword
00035E98 <AmiBlitz3.ab2@18695>   MOVE.l (A7)+,D1
00035E9C <AmiBlitz3.ab2@18696> BRA.w writelong
00035E9E <AmiBlitz3.ab2@18704>   MOVEQ.l #$00,D1
00035EA4 <AmiBlitz3.ab2@18705>   MOVEA.l libpointer,A1
00035EA8 <AmiBlitz3.ab2@18708>     CMPA.w #$0,A1
00035EAC <AmiBlitz3.ab2@18709>     BEQ.w findhilib__done
00035EB0 <AmiBlitz3.ab2@18710>       CMP.w $4(A1),D7
00035EB4 <AmiBlitz3.ab2@18711>       BLS.w findhilib__next
00035EB8 <AmiBlitz3.ab2@18712>         CMP.w $4(A1),D1
00035EBC <AmiBlitz3.ab2@18713>         BCC.w findhilib__next
00035EC0 <AmiBlitz3.ab2@18714>           MOVE.w $4(A1),D1
00035EC2 <AmiBlitz3.ab2@18715>           MOVEA.l A1,A2
00035EC4 <AmiBlitz3.ab2@18718>     MOVEA.l (A1),A1
00035EC8 <AmiBlitz3.ab2@18719> BRA.w findhilib__loop
00035ECA <AmiBlitz3.ab2@18722>   MOVE.w D1,D7
00035ECC <AmiBlitz3.ab2@18723> RTS
00035ECE <AmiBlitz3.ab2@18731>   MOVEQ.l #-$01,D1
00035ED4 <AmiBlitz3.ab2@18732>   MOVEA.l libpointer,A1
00035ED8 <AmiBlitz3.ab2@18735>     CMPA.w #$0,A1
00035EDC <AmiBlitz3.ab2@18736>      BEQ.w findlolib__done
00035EE0 <AmiBlitz3.ab2@18737>     CMP.w $4(A1),D7
00035EE4 <AmiBlitz3.ab2@18738>      BCC.w findlolib__next
00035EE8 <AmiBlitz3.ab2@18739>     CMP.w $4(A1),D1
00035EEC <AmiBlitz3.ab2@18740>      BLS.w findlolib__next
00035EF0 <AmiBlitz3.ab2@18741>     MOVE.w $4(A1),D1
00035EF2 <AmiBlitz3.ab2@18742>     MOVEA.l A1,A2
00035EF4 <AmiBlitz3.ab2@18745>     MOVEA.l (A1),A1
00035EF8 <AmiBlitz3.ab2@18746> BRA.w findlolib__loop
00035EFA <AmiBlitz3.ab2@18749>   MOVE.w D1,D7
00035EFE <AmiBlitz3.ab2@18750>   CMP.w #-$1,D1
00035F00 <AmiBlitz3.ab2@18751> RTS
00035F06 <AmiBlitz3.ab2@18755>   ADDQ.w #1,globalvarpointer
00035F0E <AmiBlitz3.ab2@18756>   BCLR #$0,globalvarpointer+1
00035F10 <AmiBlitz3.ab2@18757>   MOVEQ.l #$00,D7
00035F14 <AmiBlitz3.ab2@18760>     BSR.w findlolib
00035F18 <AmiBlitz3.ab2@18761>     BEQ.w JL_0_BA74
00035F1C <AmiBlitz3.ab2@18762>     TST.w $C(A2)
00035F20 <AmiBlitz3.ab2@18763>     BPL.w JL_0_B99A
00035F22 <AmiBlitz3.ab2@18764>     MOVEA.l A2,A1
00035F26 <AmiBlitz3.ab2@18765>     ADDA.l $12(A1),A1
00035F2A <AmiBlitz3.ab2@18766>     TST.w -$2(A1)
00035F2E <AmiBlitz3.ab2@18767>     BEQ.w JL_0_BA34
00035F32 <AmiBlitz3.ab2@18768>     MOVE.l -$A(A1),D1
00035F36 <AmiBlitz3.ab2@18769>     LEA $6(A2,D1.L),A3
00035F38 <AmiBlitz3.ab2@18772>       TST.w (A3)+
00035F3C <AmiBlitz3.ab2@18773>       BEQ.w JL_0_B9CC
00035F3E <AmiBlitz3.ab2@18774>         ADDQ.w #2,A3
00035F42 <AmiBlitz3.ab2@18775> BRA.w JL_0_B9C0
00035F46 <AmiBlitz3.ab2@18778>     TST.l $4(A3)
00035F4A <AmiBlitz3.ab2@18779>     BEQ.w JL_0_BA34
00035F4E <AmiBlitz3.ab2@18780>       MOVE.w freemax(PC),D1
00035F52 <AmiBlitz3.ab2@18781>       BSR.w writeword
00035F56 <AmiBlitz3.ab2@18782>       MOVE.w -$4(A1),D1
00035F5A <AmiBlitz3.ab2@18783>       BSR.w writeword
00035F60 <AmiBlitz3.ab2@18784>       MOVE.l free,D1
00035F64 <AmiBlitz3.ab2@18785>       MOVE.w -$6(A1),D1
00035F68 <AmiBlitz3.ab2@18786>       BSR.w writelong
00035F6E <AmiBlitz3.ab2@18787>       MOVE.l destpointer,-(A7)
00035F70 <AmiBlitz3.ab2@18788>       MOVEQ.l #$01,D1
00035F74 <AmiBlitz3.ab2@18789>       MOVE.w -$2(A1),D2
00035F76 <AmiBlitz3.ab2@18790>       LSL.w D2,D1
00035F78 <AmiBlitz3.ab2@18791>       MOVE.w D1,-(A7)
00035F7C <AmiBlitz3.ab2@18792>       MOVE.l -$A(A1),D1
00035F80 <AmiBlitz3.ab2@18793>       BSR.w Amakelibsub
00035F84 <AmiBlitz3.ab2@18794>       MOVE.w freemax3(PC),D1
00035F88 <AmiBlitz3.ab2@18795>       BSR.w writeword
00035F8A <AmiBlitz3.ab2@18796>       MOVE.w (A7)+,D1
00035F8E <AmiBlitz3.ab2@18797>       BSR.w writeword
00035F92 <AmiBlitz3.ab2@18798>       MOVE.l freemax2(PC),D1
00035F96 <AmiBlitz3.ab2@18799>       BSR.w writelong
00035F98 <AmiBlitz3.ab2@18800>       MOVE.l (A7)+,D1
00035F9E <AmiBlitz3.ab2@18801>       SUB.l destpointer,D1
00035FA2 <AmiBlitz3.ab2@18802>       BSR.w writeword
00035FA6 <AmiBlitz3.ab2@18803>       MOVE.w freemax4(PC),D1
00035FAA <AmiBlitz3.ab2@18804>       BSR.w writeword
00035FAE <AmiBlitz3.ab2@18807>     MOVE.l $1C(A2),D1
00035FB2 <AmiBlitz3.ab2@18808>     BEQ.w JL_0_B99A
00035FB6 <AmiBlitz3.ab2@18810>     MOVE.w $4(A2),D1
00035FBA <AmiBlitz3.ab2@18811>     CMP.w #-$2,D1
00035FBE <AmiBlitz3.ab2@18812>     BNE.w JL_0_BA50
00035FC2 <AmiBlitz3.ab2@18813>       BSR.w makevsize
00035FC6 <AmiBlitz3.ab2@18814> BRA.w JL_0_BA60
00035FCA <AmiBlitz3.ab2@18817>     CMP.w #-$12D,D1
00035FCE <AmiBlitz3.ab2@18818>     BNE.w JL_0_BA60
00035FD2 <AmiBlitz3.ab2@18819>       BSR.w makessize
00035FD6 <AmiBlitz3.ab2@18820> BRA.w JL_0_BA60
00035FDA <AmiBlitz3.ab2@18823>     MOVE.l $1C(A2),D1
00035FE2 <AmiBlitz3.ab2@18824>     MOVE.w #$FFFF,lasta6
00035FE6 <AmiBlitz3.ab2@18825>     BSR.w Amakelibsub
00035FEA <AmiBlitz3.ab2@18826> BRA.w JL_0_B99A
00035FEC <AmiBlitz3.ab2@18829> RTS
00035FF0 <AmiBlitz3.ab2@18833> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
00035FF2 <AmiBlitz3.ab2@18835> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
00035FF6 <AmiBlitz3.ab2@18836>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
00035FF8 <AmiBlitz3.ab2@18837> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
00035FFC <AmiBlitz3.ab2@18838> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
00036002 <AmiBlitz3.ab2@18843>   TST.b debugmode
00036006 <AmiBlitz3.ab2@18844>    BEQ.b chkstak__skip
0003600C <AmiBlitz3.ab2@18845>   TST.w debugversion
00036010 <AmiBlitz3.ab2@18846>    BNE.b chkstak__skip
00036014 <AmiBlitz3.ab2@18847>   MOVE.w #$C308,D1
00036018 <AmiBlitz3.ab2@18848> BRA.w Atokejsr
0003601A <AmiBlitz3.ab2@18851> RTS
00036022 <AmiBlitz3.ab2@18855>   MOVE.w #$FFFF,lasta6
00036026 <AmiBlitz3.ab2@18860>   MOVEM.l D0-d7/A0-a6,-(A7)
0003602E <AmiBlitz3.ab2@18861>   MOVE.b #1,nostringopt
00036034 <AmiBlitz3.ab2@18862>   JSR searchinstr
00036036 <AmiBlitz3.ab2@18863>   MOVE.l A3,D1
00036038 <AmiBlitz3.ab2@18864>   SUB.l A2,D1
0003603C <AmiBlitz3.ab2@18865>   BSR.w Amakelibsub
00036040 <AmiBlitz3.ab2@18866>   MOVEM.l (A7)+,d0-d7/a0-a6
00036042 <AmiBlitz3.ab2@18867> RTS
00036048 <AmiBlitz3.ab2@18874>   MOVE.l libisat,-(A7)                                   ;library write
0003604E <AmiBlitz3.ab2@18875>   MOVE.l A2,libisat
00036050 <AmiBlitz3.ab2@18877>   MOVEA.l A1,A2
00036052 <AmiBlitz3.ab2@18878>   MOVE.w (A2)+,D1
00036058 <AmiBlitz3.ab2@18879>   MOVE.l a2,lastinstructionaddr
0003605C <AmiBlitz3.ab2@18880>   ANDI.w #$FF,D1
0003605E <AmiBlitz3.ab2@18881>   ADDA.w D1,A2
00036060 <AmiBlitz3.ab2@18882>   EXG.l D0,A2
00036062 <AmiBlitz3.ab2@18883>   ADDQ.l #1,D0
00036066 <AmiBlitz3.ab2@18884>   BCLR #$0,D0
00036068 <AmiBlitz3.ab2@18885>   EXG.l D0,A2
0003606C <AmiBlitz3.ab2@18886> BRA.w JL_0_BB08
00036072 <AmiBlitz3.ab2@18890>   MOVE.l libisat,-(A7)
00036078 <AmiBlitz3.ab2@18891>   MOVE.l A2,libisat
0003607A <AmiBlitz3.ab2@18892>   MOVEA.l A3,A2
0003607E <AmiBlitz3.ab2@18893> BRA.w JL_0_BB08
00036080 <AmiBlitz3.ab2@18897>   MOVE.l a1,-(a7)
00036082 <AmiBlitz3.ab2@18900>   MOVE.l d0,a0
00036086 <AmiBlitz3.ab2@18901>   MOVE.l $a(a0),d0
00036088 <AmiBlitz3.ab2@18902>   MOVE.l d0,a1
00036090 <AmiBlitz3.ab2@18903>   CMP.l #8,4(a1)
00036094 <AmiBlitz3.ab2@18904>   BLE 'norec
00036096 <AmiBlitz3.ab2@18905>   MOVE.l a0,-(a7)
0003609C <AmiBlitz3.ab2@18906>   MOVE.l typebase,-(a7)
0003609E <AmiBlitz3.ab2@18907>   MOVEQ #0,d0
000360A2 <AmiBlitz3.ab2@18908>   MOVE.w 4(a0),d0
000360A8 <AmiBlitz3.ab2@18909>   ADD.l d0,typebase
000360AC <AmiBlitz3.ab2@18910>   MOVE.l $4(a1),d0
000360B0 <AmiBlitz3.ab2@18911>   BSR scantype
000360B6 <AmiBlitz3.ab2@18912>   MOVE.l (a7)+,typebase
000360B8 <AmiBlitz3.ab2@18913>   MOVE.l (a7)+,a0
000360BE <AmiBlitz3.ab2@18916>   CMP.l #newtype_string,d0
000360C2 <AmiBlitz3.ab2@18917>   BNE 'nostring
000360C8 <AmiBlitz3.ab2@18918>   ADDQ #2,a2offset
000360CE <AmiBlitz3.ab2@18919>   MOVE.l #$3f3c0000,d1
000360D0 <AmiBlitz3.ab2@18920>   MOVEQ #0,d0
000360D4 <AmiBlitz3.ab2@18921>   MOVE.w 4(a0),d0
000360DA <AmiBlitz3.ab2@18922>   ADD.l typebase,d0
000360DC <AmiBlitz3.ab2@18923>   MOVE.w d0,d1
000360E0 <AmiBlitz3.ab2@18924>   BSR writelong
000360E6 <AmiBlitz3.ab2@18925>   TST.b debugmode
000360EA <AmiBlitz3.ab2@18926>   BEQ 'l1a
000360EC <AmiBlitz3.ab2@18927>   MOVE.l d1,-(a7)
000360F2 <AmiBlitz3.ab2@18928>   MOVE.l #$c308,d1
000360F8 <AmiBlitz3.ab2@18929>   JSR Atokejsr
000360FA <AmiBlitz3.ab2@18930>   MOVE.l (a7)+,d1
000360FE <AmiBlitz3.ab2@18933>   TST.w 8(a0)
00036102 <AmiBlitz3.ab2@18934>   BEQ 'nostring
00036106 <AmiBlitz3.ab2@18935>   MOVEM.l d2/d3,-(a7)
00036108 <AmiBlitz3.ab2@18936>   MOVE.l d1,d2
0003610A <AmiBlitz3.ab2@18937>   MOVEQ #0,d3
0003610E <AmiBlitz3.ab2@18938>   MOVE.w 8(a0),d3
00036110 <AmiBlitz3.ab2@18939>   SUBQ.l #1,d3
00036114 <AmiBlitz3.ab2@18940>   BEQ 'nostring2
00036116 <AmiBlitz3.ab2@18943>   ADDQ.l #4,d2
00036118 <AmiBlitz3.ab2@18944>   MOVE.l d2,d1
0003611C <AmiBlitz3.ab2@18945>   BSR writelong
00036122 <AmiBlitz3.ab2@18946>   TST.b debugmode
00036126 <AmiBlitz3.ab2@18947>   BEQ 'l1
0003612C <AmiBlitz3.ab2@18948>   MOVE.l #$c308,d1
00036132 <AmiBlitz3.ab2@18949>   JSR Atokejsr
00036138 <AmiBlitz3.ab2@18952>   ADDQ #2,a2offset
0003613A <AmiBlitz3.ab2@18953>   SUBQ.l #1,d3
0003613E <AmiBlitz3.ab2@18954>   BNE 'loop
00036142 <AmiBlitz3.ab2@18957>   MOVEM.l (a7)+,d2/d3
00036144 <AmiBlitz3.ab2@18960>   MOVE.l (a0),d0
00036148 <AmiBlitz3.ab2@18961>   BNE 'more
0003614A <AmiBlitz3.ab2@18962>   MOVE.l (a7)+,a1
0003614C <AmiBlitz3.ab2@18963> RTS
00036150 <AmiBlitz3.ab2@18966> libisat:   Ds.l 1
00036156 <AmiBlitz3.ab2@18972>   MOVE.l libisat,-(A7)                                   
0003615C <AmiBlitz3.ab2@18973>   MOVE.l A2,libisat
00036160 <AmiBlitz3.ab2@18974>   LEA $6(A2,D1.L),A2
00036168 <AmiBlitz3.ab2@18978>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0003616C <AmiBlitz3.ab2@18979>   BEQ 'dowritevar
00036174 <AmiBlitz3.ab2@18980>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
00036178 <AmiBlitz3.ab2@18981>   BEQ 'dowritevar
00036180 <AmiBlitz3.ab2@18982>   CMP.l #$3e175265,$1c(a2)
00036184 <AmiBlitz3.ab2@18983>   BEQ 'dowritevar
0003618C <AmiBlitz3.ab2@18984>   CMP.l #$3e165772,$1c(a2)
00036190 <AmiBlitz3.ab2@18985>   BNE 'nowritef
00036194 <AmiBlitz3.ab2@18988>   MOVEM.l a0-a2/d2,-(a7)
00036196 <AmiBlitz3.ab2@18989>   MOVEQ #0,d1
000361A0 <AmiBlitz3.ab2@18990>   MOVE.l #0,typebase
000361A4 <AmiBlitz3.ab2@18991>   MOVE.l $a(a3),a0
000361A8 <AmiBlitz3.ab2@18992>   MOVE.l $4(a0),d0
000361AE <AmiBlitz3.ab2@18993>   CMP.l #8,d0
000361B2 <AmiBlitz3.ab2@18994>   BLE 'notype
000361B6 <AmiBlitz3.ab2@18995>   BSR scantype
000361BC <AmiBlitz3.ab2@18998>   MOVE.l #$3f3c0000,d1
000361C2 <AmiBlitz3.ab2@18999>   MOVE.w a2offset,d1
000361C6 <AmiBlitz3.ab2@19000>   BSR writelong
000361CC <AmiBlitz3.ab2@19001>   MOVE.l #$3f3c0000,d1
000361D0 <AmiBlitz3.ab2@19002>   MOVE.l $a(a3),a0
000361D4 <AmiBlitz3.ab2@19003>   MOVE.w 8(a0),d1
000361D8 <AmiBlitz3.ab2@19004>   BSR writelong
000361DE <AmiBlitz3.ab2@19005>   MOVE.l #$3f3cab12,d1
000361E2 <AmiBlitz3.ab2@19006>   BSR writelong
000361E8 <AmiBlitz3.ab2@19007>   ADDQ.w #6,a2offset
000361EC <AmiBlitz3.ab2@19008>   MOVEM.l (a7)+,a0-a2/d2
000361F2 <AmiBlitz3.ab2@19011>   TST.b fpu
000361F6 <AmiBlitz3.ab2@19012>   BEQ 'nofpu2
000361FE <AmiBlitz3.ab2@19013>   CMP.l #$496e7400,$1a(a2)
00036202 <AmiBlitz3.ab2@19014>   BNE 'noint
00036204 <AmiBlitz3.ab2@19015>   MOVEQ #0,d1
0003620A <AmiBlitz3.ab2@19016>   SUBQ.l #8,destpointer                                    ;fpu int
00036210 <AmiBlitz3.ab2@19017>   CLR.w a2offset
00036214 <AmiBlitz3.ab2@19018>   CMP.b #2,d2
00036218 <AmiBlitz3.ab2@19019>   BGT 'noword
0003621C <AmiBlitz3.ab2@19020>   MOVE.w #$48c0,d1
00036222 <AmiBlitz3.ab2@19021>   OR.w regnumstore,d1
00036226 <AmiBlitz3.ab2@19022>   BSR writeword
0003622A <AmiBlitz3.ab2@19023> BRA 'exit2
0003622E <AmiBlitz3.ab2@19026>    CMP.b #3,d2
00036232 <AmiBlitz3.ab2@19027>         BNE 'nolong
00036236 <AmiBlitz3.ab2@19028> BRA 'exit2
0003623A <AmiBlitz3.ab2@19031>    CMP.b #4,d2
0003623E <AmiBlitz3.ab2@19032>         BNE 'noquick
00036242 <AmiBlitz3.ab2@19033>         MOVE.w #$e080,d1
00036248 <AmiBlitz3.ab2@19034>         OR.w regnumstore,d1
0003624C <AmiBlitz3.ab2@19035>         BSR writeword
00036250 <AmiBlitz3.ab2@19036>         MOVE.w #$e080,d1
00036256 <AmiBlitz3.ab2@19037>         OR.w regnumstore,d1
0003625A <AmiBlitz3.ab2@19038>         BSR writeword
0003625E <AmiBlitz3.ab2@19039> BRA 'exit2
00036260 <AmiBlitz3.ab2@19042>         MOVEQ #0,d0
00036262 <AmiBlitz3.ab2@19043>         MOVEQ #0,d1
00036268 <AmiBlitz3.ab2@19044>         MOVE.w regnumstore,d0
0003626A <AmiBlitz3.ab2@19045>         ASL.l #7,d0
00036270 <AmiBlitz3.ab2@19046>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
00036272 <AmiBlitz3.ab2@19047>         OR.l d0,d1
00036278 <AmiBlitz3.ab2@19049>         MOVE.l #$3f000000,d1
0003627A <AmiBlitz3.ab2@19051>         MOVEQ #0,d0
0003627C <AmiBlitz3.ab2@19052>         MOVEQ #0,d1
00036282 <AmiBlitz3.ab2@19053>         MOVE.w regnumstore,d0
00036284 <AmiBlitz3.ab2@19054>         ASL.l #7,d0
00036286 <AmiBlitz3.ab2@19055>         MOVE.l d0,d1
0003628C <AmiBlitz3.ab2@19056>         OR.l #$f2000003,d1                                 ;fintrz fpx
0003628E <AmiBlitz3.ab2@19057>         ASL.l #3,d0
00036290 <AmiBlitz3.ab2@19058>         OR.l d0,d1
00036294 <AmiBlitz3.ab2@19059>         BSR writelong
00036296 <AmiBlitz3.ab2@19060>         MOVEQ #0,d0
0003629C <AmiBlitz3.ab2@19061>         MOVE.w regnumstore,d0
0003629E <AmiBlitz3.ab2@19062>         ASL.l #7,d0
000362A4 <AmiBlitz3.ab2@19063>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
000362A6 <AmiBlitz3.ab2@19064>         OR.l d0,d1
000362A8 <AmiBlitz3.ab2@19065>         ASL.l #1,d0
000362AA <AmiBlitz3.ab2@19066>         ASL.l #8,d0
000362AC <AmiBlitz3.ab2@19067>         OR.l d0,d1
000362B0 <AmiBlitz3.ab2@19068> BRA 'exit
000362B6 <AmiBlitz3.ab2@19071>   CMP.w #$3c01,24(a2)
000362BA <AmiBlitz3.ab2@19072>   BNE 'noval
000362BC <AmiBlitz3.ab2@19073>   MOVE.l a2,-(a7)
000362C0 <AmiBlitz3.ab2@19074>   BSR.w JL_0_BB14
000362C2 <AmiBlitz3.ab2@19075>   MOVE.l (a7)+,a2
000362C6 <AmiBlitz3.ab2@19076> BRA 'exit2
000362CE <AmiBlitz3.ab2@19093>   CMP.l #$41627300,$1a(a2)
000362D2 <AmiBlitz3.ab2@19094>   BNE 'noabs
000362D4 <AmiBlitz3.ab2@19095>   MOVEQ #0,d1
000362DA <AmiBlitz3.ab2@19096>   MOVE.w regnumstore,d1
000362DC <AmiBlitz3.ab2@19097>   MOVE.w d1,d0
000362DE <AmiBlitz3.ab2@19098>   ASL.w #7,d1
000362E0 <AmiBlitz3.ab2@19099>   ASL.w #8,d0
000362E2 <AmiBlitz3.ab2@19100>   ASL.w #2,d0
000362E4 <AmiBlitz3.ab2@19101>   OR.w d0,d1
000362EA <AmiBlitz3.ab2@19102>   SUBQ.l #8,destpointer                                    ;fpu abs
000362EE <AmiBlitz3.ab2@19103>   MOVEM.l d3/d1,-(a7)
000362F2 <AmiBlitz3.ab2@19104>   MOVE.w #5,d3
000362F4 <AmiBlitz3.ab2@19105>   EXG d2,d3
000362FA <AmiBlitz3.ab2@19106>   MOVE.w regnum,-(a7)
00036304 <AmiBlitz3.ab2@19107>   MOVE.w regnumstore,regnum
00036308 <AmiBlitz3.ab2@19108>   BSR writeconvertcode
0003630E <AmiBlitz3.ab2@19109>   MOVE.w (a7)+,regnum
00036310 <AmiBlitz3.ab2@19110>   EXG d2,d3
00036314 <AmiBlitz3.ab2@19111>   MOVEM.l (a7)+,d3/d1
0003631A <AmiBlitz3.ab2@19112>   OR.l #$f2000018,d1
00036320 <AmiBlitz3.ab2@19113>   CLR.w a2offset
00036324 <AmiBlitz3.ab2@19114> BRA 'exit
00036328 <AmiBlitz3.ab2@19117>   CMP.b #5,d2
0003632C <AmiBlitz3.ab2@19118>   BNE 'nofpu2
00036330 <AmiBlitz3.ab2@19119>   MOVE.b 24(a2),d0
00036334 <AmiBlitz3.ab2@19120>   CMP.b #$60,d0                                            ;nolib $edxx
00036338 <AmiBlitz3.ab2@19121>   BNE 'nofpu
0003633A <AmiBlitz3.ab2@19122>   MOVEQ #0,d1
00036340 <AmiBlitz3.ab2@19123>   MOVE.w regnumstore,d1
00036342 <AmiBlitz3.ab2@19124>   MOVE.w d1,d0
00036344 <AmiBlitz3.ab2@19125>   ASL.w #7,d1
00036346 <AmiBlitz3.ab2@19126>   ASL.w #8,d0
00036348 <AmiBlitz3.ab2@19127>   ASL.w #2,d0
0003634A <AmiBlitz3.ab2@19128>   OR.w d0,d1
0003634E <AmiBlitz3.ab2@19129>   MOVE.b 25(a2),d0
00036352 <AmiBlitz3.ab2@19130>   CMP.b #5,d0
00036356 <AmiBlitz3.ab2@19131>   BNE 'nocos
0003635C <AmiBlitz3.ab2@19132>   OR.l #$f200001d,d1                                       ;fpu cos
00036360 <AmiBlitz3.ab2@19133> BRA 'exit
00036364 <AmiBlitz3.ab2@19136>   CMP.b #$c,d0
00036368 <AmiBlitz3.ab2@19137>   BNE 'nosqr
0003636E <AmiBlitz3.ab2@19138>   OR.l #$f2000004,d1                                       ;fpu sqr
00036372 <AmiBlitz3.ab2@19139> BRA 'exit
00036376 <AmiBlitz3.ab2@19142>   CMP.b #$d,d0
0003637A <AmiBlitz3.ab2@19143>   BNE 'notan
00036380 <AmiBlitz3.ab2@19144>   OR.l #$f200000f,d1                                       ;fpu tan
00036384 <AmiBlitz3.ab2@19145> BRA 'exit
00036388 <AmiBlitz3.ab2@19148>   CMP.b #$a,d0
0003638C <AmiBlitz3.ab2@19149>   BNE 'nosin
00036392 <AmiBlitz3.ab2@19150>   OR.l #$f200000e,d1                                       ;fpu sin
00036396 <AmiBlitz3.ab2@19151> BRA 'exit
0003639A <AmiBlitz3.ab2@19154>   CMP.b #$3,d0
0003639E <AmiBlitz3.ab2@19155>   BNE 'noasin
000363A4 <AmiBlitz3.ab2@19156>   OR.l #$f200000c,d1                                       ;fpu asin
000363A8 <AmiBlitz3.ab2@19157> BRA 'exit
000363AC <AmiBlitz3.ab2@19160>   CMP.b #$2,d0
000363B0 <AmiBlitz3.ab2@19161>   BNE 'noacos
000363B6 <AmiBlitz3.ab2@19162>   OR.l #$f200001c,d1                                       ;fpu acos
000363BA <AmiBlitz3.ab2@19163> BRA 'exit
000363BE <AmiBlitz3.ab2@19166>   CMP.b #$4,d0
000363C2 <AmiBlitz3.ab2@19167>   BNE 'noatan
000363C8 <AmiBlitz3.ab2@19168>   OR.l #$f200000a,d1                                       ;fpu atan
000363CC <AmiBlitz3.ab2@19169> BRA 'exit
000363D0 <AmiBlitz3.ab2@19172>   CMP.b #$e,d0
000363D4 <AmiBlitz3.ab2@19173>   BNE 'nohtan
000363DA <AmiBlitz3.ab2@19174>   OR.l #$f2000009,d1                                       ;fpu htan
000363DE <AmiBlitz3.ab2@19175> BRA 'exit
000363E2 <AmiBlitz3.ab2@19178>   CMP.b #$6,d0
000363E6 <AmiBlitz3.ab2@19179>   BNE 'nohcos
000363EC <AmiBlitz3.ab2@19180>   OR.l #$f2000019,d1                                       ;fpu hcos
000363F0 <AmiBlitz3.ab2@19181> BRA 'exit
000363F4 <AmiBlitz3.ab2@19184>   CMP.b #$b,d0
000363F8 <AmiBlitz3.ab2@19185>   BNE 'nohsin
000363FE <AmiBlitz3.ab2@19186>   OR.l #$f2000002,d1                                       ;fpu hsin
00036402 <AmiBlitz3.ab2@19187> BRA 'exit
00036406 <AmiBlitz3.ab2@19190>   CMP.b #$9,d0
0003640A <AmiBlitz3.ab2@19191>   BNE 'nolog
00036410 <AmiBlitz3.ab2@19192>   OR.l #$f2000014,d1                                       ;fpu log
00036414 <AmiBlitz3.ab2@19193> BRA 'exit
00036418 <AmiBlitz3.ab2@19196>   CMP.b #$8,d0
0003641C <AmiBlitz3.ab2@19197>   BNE 'nolog10
00036422 <AmiBlitz3.ab2@19198>   OR.l #$f2000015,d1                                       ;fpu log10
00036426 <AmiBlitz3.ab2@19199> BRA 'exit
0003642A <AmiBlitz3.ab2@19202>   CMP.b #$7,d0
0003642E <AmiBlitz3.ab2@19203>   BNE 'noexp
00036434 <AmiBlitz3.ab2@19204>   OR.l #$f2000010,d1                                       ;fpu exp
00036438 <AmiBlitz3.ab2@19205> BRA 'exit
0003643E <AmiBlitz3.ab2@19208>   LEA fpuerr,a0
00036440 <AmiBlitz3.ab2@19209>   MOVE.l a0,-(a7)
00036446 <AmiBlitz3.ab2@19210> JMP handle_compileerror
0003644A <AmiBlitz3.ab2@19214>   CMP.b #$3c,d0
0003644E <AmiBlitz3.ab2@19215>   BNE 'nofpu2
00036450 <AmiBlitz3.ab2@19216>   MOVEQ #0,d1
00036456 <AmiBlitz3.ab2@19217>       MOVE.w regnumstore,d1
00036458 <AmiBlitz3.ab2@19218>       MOVE.w d1,d0
0003645A <AmiBlitz3.ab2@19219>       ASL.w #7,d1
0003645C <AmiBlitz3.ab2@19220>       ASL.w #8,d0
0003645E <AmiBlitz3.ab2@19221>       ASL.w #2,d0
00036460 <AmiBlitz3.ab2@19222>       OR.w d0,d1
00036466 <AmiBlitz3.ab2@19223>       CMP.b #$03,25(a2)
0003646A <AmiBlitz3.ab2@19224>       BNE 'nosgn
00036470 <AmiBlitz3.ab2@19227>       SUBQ.l #8,destpointer                                ;fpu sgn
00036476 <AmiBlitz3.ab2@19228>         OR.l #$f200003a,d1
0003647A <AmiBlitz3.ab2@19229>         BSR writelong
00036480 <AmiBlitz3.ab2@19230>         CLR.w a2offset
00036486 <AmiBlitz3.ab2@19231>          MOVE.l #$F28E0006,d1
0003648A <AmiBlitz3.ab2@19232>          BSR writelong
00036490 <AmiBlitz3.ab2@19233>   MOVE.l #$7000600a,d1
00036494 <AmiBlitz3.ab2@19234>   BSR writelong
0003649A <AmiBlitz3.ab2@19235>   MOVE.l #$70014840,d1
0003649E <AmiBlitz3.ab2@19236>   BSR writelong
000364A4 <AmiBlitz3.ab2@19237>   MOVE.l #$F292,d1
000364A8 <AmiBlitz3.ab2@19238>   BSR writeword
000364AE <AmiBlitz3.ab2@19239>   MOVE.l #$000470FF,d1
000364B2 <AmiBlitz3.ab2@19240> BRA 'exit
000364BA <AmiBlitz3.ab2@19243>   CMP.l #"Frac",$1a(a2)
000364BE <AmiBlitz3.ab2@19244>   BNE 'nofrac
000364C4 <AmiBlitz3.ab2@19245> JMP notwork
000364C8 <AmiBlitz3.ab2@19286> BRA 'exit
000364CC <AmiBlitz3.ab2@19290>   BSR.w JL_0_BB14                                          ;write lib code
000364D2 <AmiBlitz3.ab2@19291>   MOVE.l (A7)+,libisat
000364D4 <AmiBlitz3.ab2@19292> RTS
000364D8 <AmiBlitz3.ab2@19295>   BSR writelong
000364DE <AmiBlitz3.ab2@19298>   MOVE.l (A7)+,libisat
000364E0 <AmiBlitz3.ab2@19299> RTS
000364E4 <AmiBlitz3.ab2@19303>   BSR.w fetchregs
000364EA <AmiBlitz3.ab2@19304>   TST.b debugmode
000364EE <AmiBlitz3.ab2@19305>    BEQ.w JL_0_BB76
000364F0 <AmiBlitz3.ab2@19306>   MOVE.l (A2),D1
000364F4 <AmiBlitz3.ab2@19307>   OR.l $8(A2),D1
000364F8 <AmiBlitz3.ab2@19308>   BCLR #$0,D1
000364FA <AmiBlitz3.ab2@19309>   TST.l D1
000364FE <AmiBlitz3.ab2@19310>    BEQ.w JL_0_BB76
00036500 <AmiBlitz3.ab2@19311>   MOVE.l (A2)+,D1
00036504 <AmiBlitz3.ab2@19312>   BTST #$0,D1
00036508 <AmiBlitz3.ab2@19313>    BEQ.w JL_0_BB60
0003650E <AmiBlitz3.ab2@19314>   TST.w blitzmode
00036512 <AmiBlitz3.ab2@19315>    BPL.w blitzerr
00036518 <AmiBlitz3.ab2@19316>   TST.b debugmode
0003651C <AmiBlitz3.ab2@19317>    BEQ.w JL_0_BB5C
0003651E <AmiBlitz3.ab2@19318>   MOVE.l D1,-(A7)
00036522 <AmiBlitz3.ab2@19319>   MOVE.w #$C311,D1
00036526 <AmiBlitz3.ab2@19320>    BSR.w makebtst
00036528 <AmiBlitz3.ab2@19321>   MOVE.l (A7)+,D1
0003652C <AmiBlitz3.ab2@19324>   BCLR #$0,D1
0003652E <AmiBlitz3.ab2@19327>   TST.l D1
00036532 <AmiBlitz3.ab2@19328>    BSR.w JL_0_BBC6
00036534 <AmiBlitz3.ab2@19329>   MOVE.l (A2)+,D1
00036538 <AmiBlitz3.ab2@19330>    BSR.w JL_0_BB98
0003653A <AmiBlitz3.ab2@19331>   MOVE.l (A2)+,D1
0003653E <AmiBlitz3.ab2@19332>    BSR.w JL_0_BBC6
00036542 <AmiBlitz3.ab2@19333> BRA.w JL_0_BB90
00036548 <AmiBlitz3.ab2@19336>   BTST #$0,$3(A2)
0003654C <AmiBlitz3.ab2@19337>    BEQ.w JL_0_BB88
00036550 <AmiBlitz3.ab2@19338>   MOVE.w blitzmode(PC),D1
00036554 <AmiBlitz3.ab2@19339>    BPL.w blitzerr
00036558 <AmiBlitz3.ab2@19342>   MOVE.l $4(A2),D1
0003655C <AmiBlitz3.ab2@19343>    BSR.w JL_0_BB98
00036562 <AmiBlitz3.ab2@19346>   MOVEA.l libisat,A2
00036564 <AmiBlitz3.ab2@19347> RTS
00036568 <AmiBlitz3.ab2@19350>   BTST #$0,D1
0003656C <AmiBlitz3.ab2@19351>    BEQ.w JL_0_BBC4
00036572 <AmiBlitz3.ab2@19352>   TST.w blitzmode
00036576 <AmiBlitz3.ab2@19353>    BMI.w amigaerr
0003657C <AmiBlitz3.ab2@19354>   TST.b debugmode
00036580 <AmiBlitz3.ab2@19355>    BEQ.w JL_0_BBC0
00036582 <AmiBlitz3.ab2@19356>   MOVE.l D1,-(A7)
00036586 <AmiBlitz3.ab2@19357>   MOVE.w #$C312,D1
0003658A <AmiBlitz3.ab2@19358>    BSR.w makebtst
0003658C <AmiBlitz3.ab2@19359>   MOVE.l (A7)+,D1
00036590 <AmiBlitz3.ab2@19362>   BCLR #$0,D1
00036592 <AmiBlitz3.ab2@19365>   TST.l D1
00036596 <AmiBlitz3.ab2@19368>    BEQ.w JL_0_BBD2
00036598 <AmiBlitz3.ab2@19369>   MOVE.l A1,-(A7)
0003659C <AmiBlitz3.ab2@19370>    BSR.w JL_0_BBD4
0003659E <AmiBlitz3.ab2@19371>   MOVEA.l (A7)+,A1
000365A0 <AmiBlitz3.ab2@19374> RTS
000365A6 <AmiBlitz3.ab2@19377>   MOVEA.l libisat,A0
000365AC <AmiBlitz3.ab2@19378>   TST.w cfetchmode
000365B0 <AmiBlitz3.ab2@19379>    BEQ.w JL_0_BBF6
000365B2 <AmiBlitz3.ab2@19380>   ADD.l A0,D1
000365B4 <AmiBlitz3.ab2@19381>   MOVE.l D1,-(A7)
000365B8 <AmiBlitz3.ab2@19382>   MOVE.w #$4EB9,D1
000365BC <AmiBlitz3.ab2@19383>    BSR.w writeword
000365BE <AmiBlitz3.ab2@19384>   MOVE.l (A7)+,D1
000365C2 <AmiBlitz3.ab2@19385> BRA.w writelong
000365C6 <AmiBlitz3.ab2@19388>   LEA $0(A0,D1.L),A1
000365CC <AmiBlitz3.ab2@19389>   CLR.w inline
000365D0 <AmiBlitz3.ab2@19392>   CMPI.b #$A0,(A1)+
000365D4 <AmiBlitz3.ab2@19393>    BNE.w JL_0_BC68
000365D6 <AmiBlitz3.ab2@19394>   TST.b (A1)+
000365DA <AmiBlitz3.ab2@19395>    BEQ.w JL_0_BC18
000365E0 <AmiBlitz3.ab2@19396>   CMPI.b #$1,-$1(A1)
000365E4 <AmiBlitz3.ab2@19397>    BEQ.w JL_0_BC24
000365EA <AmiBlitz3.ab2@19400>   MOVE.w (A1)+,inline
000365EC <AmiBlitz3.ab2@19401>   ADDQ.l #4,D1
000365F0 <AmiBlitz3.ab2@19402> BRA.w JL_0_BC00
000365F6 <AmiBlitz3.ab2@19405>   TST.w blitzmode
000365FA <AmiBlitz3.ab2@19406>    BPL.w JL_0_BC4A
00036600 <AmiBlitz3.ab2@19407>   TST.b debugmode
00036604 <AmiBlitz3.ab2@19408>    BEQ.w JL_0_BC40
00036608 <AmiBlitz3.ab2@19409>   MOVE.w #$C311,D1
0003660C <AmiBlitz3.ab2@19410>    BSR.w makebtst
0003660E <AmiBlitz3.ab2@19413>   MOVE.l (A1)+,D1
00036612 <AmiBlitz3.ab2@19414>   LEA $0(A0,D1.L),A1
00036616 <AmiBlitz3.ab2@19415> BRA.w JL_0_BC00
0003661C <AmiBlitz3.ab2@19418>   TST.b debugmode
00036620 <AmiBlitz3.ab2@19419>    BEQ.w JL_0_BC60
00036622 <AmiBlitz3.ab2@19420>   MOVE.l D1,-(A7)
00036626 <AmiBlitz3.ab2@19421>   MOVE.w #$C312,D1
0003662A <AmiBlitz3.ab2@19422>    BSR.w makebtst
0003662C <AmiBlitz3.ab2@19423>   MOVE.l (A7)+,D1
0003662E <AmiBlitz3.ab2@19426>   ADDQ.w #4,A1
00036630 <AmiBlitz3.ab2@19427>   ADDQ.l #6,D1
00036634 <AmiBlitz3.ab2@19428> BRA.w JL_0_BC00
0003663A <AmiBlitz3.ab2@19431>   TST.w inline
0003663E <AmiBlitz3.ab2@19432>    BEQ.w JL_0_BC7E
00036640 <AmiBlitz3.ab2@19433>   SUBQ.w #1,A1
00036642 <AmiBlitz3.ab2@19434>   MOVEA.l A1,A0
00036646 <AmiBlitz3.ab2@19435>   ADDA.w inline(PC),A1
0003664A <AmiBlitz3.ab2@19436> BRA.w pokecode2
0003664E <AmiBlitz3.ab2@19439>   MOVEM.l a0/D1,-(A7)
00036654 <AmiBlitz3.ab2@19440>   TST.w debugversion
00036658 <AmiBlitz3.ab2@19441>   BEQ 'l11
00036660 <AmiBlitz3.ab2@19442>   BTST #$7,link_debuginfo
00036664 <AmiBlitz3.ab2@19443>   BEQ.w 'l11
0003666A <AmiBlitz3.ab2@19444>   MOVE.l lastinstruction,d1
0003666E <AmiBlitz3.ab2@19445>   BEQ 'l11
00036674 <AmiBlitz3.ab2@19446>   CLR.l lastinstruction
0003667A <AmiBlitz3.ab2@19447>   CMP.l #$e000,d1
0003667E <AmiBlitz3.ab2@19448>   BGE 'ln99
00036684 <AmiBlitz3.ab2@19449>   LEA notf,a0
0003668A <AmiBlitz3.ab2@19450>   CMP.l #$c601,d1
0003668E <AmiBlitz3.ab2@19451>   BNE 'ln1
00036694 <AmiBlitz3.ab2@19452>   LEA strcpy,a0
00036698 <AmiBlitz3.ab2@19453> BRA 'ln3
0003669E <AmiBlitz3.ab2@19456>   CMP.l #$c700,d1
000366A2 <AmiBlitz3.ab2@19457>   BNE 'ln2
000366A8 <AmiBlitz3.ab2@19458>   LEA strvar,a0
000366AC <AmiBlitz3.ab2@19459> BRA 'ln3
000366B2 <AmiBlitz3.ab2@19462>   CMP.l #$ce00,d1
000366B6 <AmiBlitz3.ab2@19463>   BNE 'ln4
000366BC <AmiBlitz3.ab2@19464>   LEA strcmp,a0
000366C0 <AmiBlitz3.ab2@19465> BRA 'ln3
000366C6 <AmiBlitz3.ab2@19468>   CMP.l #$ca00,d1
000366CA <AmiBlitz3.ab2@19469>   BNE 'ln5
000366D0 <AmiBlitz3.ab2@19470>   LEA qmul,a0
000366D4 <AmiBlitz3.ab2@19471> BRA 'ln3
000366DA <AmiBlitz3.ab2@19474>   CMP.l #$d000,d1
000366DE <AmiBlitz3.ab2@19475>      BNE 'ln6
000366E4 <AmiBlitz3.ab2@19476>      LEA _MaxLen,a0
000366E8 <AmiBlitz3.ab2@19477> BRA 'ln3
000366EE <AmiBlitz3.ab2@19480>   CMP.l #$cb00,d1
000366F2 <AmiBlitz3.ab2@19481>   BNE 'ln3
000366F8 <AmiBlitz3.ab2@19482>   LEA qdiv,a0
000366FC <AmiBlitz3.ab2@19483> BRA 'ln3
000366FE <AmiBlitz3.ab2@19486>   MOVE.l d1,a0
00036702 <AmiBlitz3.ab2@19487>   LEA $8(a0),a0
00036706 <AmiBlitz3.ab2@19490>   CMP.w #$ffff,(a0)+
0003670A <AmiBlitz3.ab2@19491>   BNE 'l1
0003670E <AmiBlitz3.ab2@19492>   LEA 6(a0),a0
00036712 <AmiBlitz3.ab2@19495>   MOVEM.l a1/a2/d7/d2,-(a7)
00036714 <AmiBlitz3.ab2@19496>   MOVEQ #0,d2
0003671A <AmiBlitz3.ab2@19497>   LEA ptr_parameterstore,a1
0003671C <AmiBlitz3.ab2@19500>   ADDQ.l #1,d2
0003671E <AmiBlitz3.ab2@19501>   MOVE.b (a0)+,d0
00036722 <AmiBlitz3.ab2@19502> 
00036726 <AmiBlitz3.ab2@19503>   BNE 'nodollar
0003672A <AmiBlitz3.ab2@19504>   MOVE.b #"S",d0
0003672E <AmiBlitz3.ab2@19506>   CMP.b #"?",d0
00036732 <AmiBlitz3.ab2@19507>   BEQ 'nolabelwrite
00036734 <AmiBlitz3.ab2@19508>   MOVE.b d0,(a1)+
00036738 <AmiBlitz3.ab2@19509>   BNE 'l2
0003673E <AmiBlitz3.ab2@19510>   MOVE.w #"__",-1(a1)
00036740 <AmiBlitz3.ab2@19511>   ADDQ.l #2,d2
00036744 <AmiBlitz3.ab2@19512>   CLR.b 1(a1)
0003674A <AmiBlitz3.ab2@19513>   JSR findlabel2
0003674E <AmiBlitz3.ab2@19514>   BEQ 'l3
00036754 <AmiBlitz3.ab2@19515>   JSR addlabelhash
00036758 <AmiBlitz3.ab2@19518>   CLR.l 4(a2)
0003675C <AmiBlitz3.ab2@19519>   MOVE.l $14(a7),a0
00036760 <AmiBlitz3.ab2@19520>   MOVE.l $10(a7),d1
00036764 <AmiBlitz3.ab2@19521>   SUB.l $12(a0),d1
00036768 <AmiBlitz3.ab2@19522>   ADD.l $28(a0),d1
0003676C <AmiBlitz3.ab2@19523>   MOVE.l d1,8(a2)
00036770 <AmiBlitz3.ab2@19524> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
00036776 <AmiBlitz3.ab2@19527>   TST.b typecheck
0003677A <AmiBlitz3.ab2@19528>   BEQ 'p1
00036780 <AmiBlitz3.ab2@19529>   MOVE.l lasttoken,d1
00036786 <AmiBlitz3.ab2@19530>   CMP.l #$da01,d1                                          ;poke
0003678A <AmiBlitz3.ab2@19531>   BEQ 'lp1
00036790 <AmiBlitz3.ab2@19532>   CMP.l #$da02,d1                                          ;peek
00036794 <AmiBlitz3.ab2@19533>   BNE 'p1
0003679A <AmiBlitz3.ab2@19536>   TST.b peekaddrsize
0003679E <AmiBlitz3.ab2@19537>   BEQ 'p1
000367A6 <AmiBlitz3.ab2@19538>   CMP.b #3,peekaddrsize
000367AA <AmiBlitz3.ab2@19539>   BNE errormsg_onlylong
000367B0 <AmiBlitz3.ab2@19540>   CLR.b peekaddrsize
000367B6 <AmiBlitz3.ab2@19548>    TST.b fpu
000367BA <AmiBlitz3.ab2@19549>   BNE 'optf
000367C0 <AmiBlitz3.ab2@19550>   TST.b fast
000367C4 <AmiBlitz3.ab2@19551>   BEQ JL11a2
000367CC <AmiBlitz3.ab2@19558>   CMP.l #"Poke",20(a2)                                     ;poke
000367D0 <AmiBlitz3.ab2@19559>   BNE peekopt
000367D4 <AmiBlitz3.ab2@19560>   TST.b 24(a2)
000367D8 <AmiBlitz3.ab2@19561>   BNE peekopt
000367DC <AmiBlitz3.ab2@19562>   CMP.b #3,d2
000367E0 <AmiBlitz3.ab2@19563>   BNE 'lw1
000367E6 <AmiBlitz3.ab2@19566>   MOVE.l #$21821990,d1
000367EA <AmiBlitz3.ab2@19567> BRA.s 'lpx
000367EE <AmiBlitz3.ab2@19570>   CMP.b #2,d2
000367F2 <AmiBlitz3.ab2@19571>   BNE 'lb1
000367F8 <AmiBlitz3.ab2@19572>   MOVE.l #$31821990,d1
000367FC <AmiBlitz3.ab2@19573> BRA.s 'lpx
00036800 <AmiBlitz3.ab2@19576>   CMP.b #1,d2
00036804 <AmiBlitz3.ab2@19577>   BNE 'lp3
0003680A <AmiBlitz3.ab2@19578>   MOVE.l #$11821990,d1
0003680E <AmiBlitz3.ab2@19579> BRA.s 'lpx
00036812 <AmiBlitz3.ab2@19582>   CMP.b #5,d2
00036816 <AmiBlitz3.ab2@19583>     BNE JL11a2
0003681C <AmiBlitz3.ab2@19584>     TST.b fpu
00036820 <AmiBlitz3.ab2@19585>     BEQ 'll1
00036826 <AmiBlitz3.ab2@19586>      MOVE.l destpointer,a4
0003682E <AmiBlitz3.ab2@19587>     CMP.l #$f22d4500,-6(a4)
00036832 <AmiBlitz3.ab2@19588>     BNE 'noglob
00036838 <AmiBlitz3.ab2@19589>     TST.b doublepeek
0003683C <AmiBlitz3.ab2@19590>     BNE 'noglob
00036842 <AmiBlitz3.ab2@19591>     MOVE.w -2(a4),-4(a4)
00036848 <AmiBlitz3.ab2@19592>     MOVE.w #$21ad,-6(a4)
0003684E <AmiBlitz3.ab2@19593>     MOVE.w #$1990,-2(a4)
00036856 <AmiBlitz3.ab2@19594>     MOVE.w #9,peeksize
00036858 <AmiBlitz3.ab2@19595>     ADDQ #8,a7
0003685A <AmiBlitz3.ab2@19596> RTS
00036862 <AmiBlitz3.ab2@19599>     CMP.l #$f22c4500,-6(a4)
00036866 <AmiBlitz3.ab2@19600>     BNE 'nolocal
0003686C <AmiBlitz3.ab2@19601>     MOVE.w -2(a4),-4(a4)
00036872 <AmiBlitz3.ab2@19602>     TST.b doublepeek                                       ;dont move longfix on double floats
00036876 <AmiBlitz3.ab2@19603>     BNE 'nolocal
0003687C <AmiBlitz3.ab2@19604>     MOVE.w #$21ac,-6(a4)
00036882 <AmiBlitz3.ab2@19605>     MOVE.w #$1990,-2(a4)
0003688A <AmiBlitz3.ab2@19606>     MOVE.w #9,peeksize
0003688C <AmiBlitz3.ab2@19607>     ADDQ #8,a7
0003688E <AmiBlitz3.ab2@19608> RTS
00036892 <AmiBlitz3.ab2@19611>     MOVE.w #$f230,d1
00036896 <AmiBlitz3.ab2@19612>     BSR writeword
0003689C <AmiBlitz3.ab2@19613>   MOVE.l #$65001990,d1
000368A2 <AmiBlitz3.ab2@19614>   TST.b doublepeek
000368A6 <AmiBlitz3.ab2@19615>   BEQ 'lpx
000368AC <AmiBlitz3.ab2@19616>   OR.l   #$10000000,d1
000368AE <AmiBlitz3.ab2@19620>   ADDQ #8,a7
000368B6 <AmiBlitz3.ab2@19621>   MOVE.w #9,peeksize
000368BA <AmiBlitz3.ab2@19622> BRA writelong
000368C2 <AmiBlitz3.ab2@19625>   CMP.l #"Peek",20(a2)
000368C6 <AmiBlitz3.ab2@19626>   BNE 'l10
000368CA <AmiBlitz3.ab2@19627>   TST.b 24(a2)
000368CE <AmiBlitz3.ab2@19628>   BNE 'l10
000368D6 <AmiBlitz3.ab2@19629>   CMP.w #7,peeksize
000368DA <AmiBlitz3.ab2@19630>   BEQ 'l10
000368E2 <AmiBlitz3.ab2@19631>    CMP.w #3,peeksize
000368E6 <AmiBlitz3.ab2@19632>    BNE.s 'lw1
000368EC <AmiBlitz3.ab2@19635>   MOVE.l #$20301990,d1
000368F0 <AmiBlitz3.ab2@19636> BRA exitjsr
000368F8 <AmiBlitz3.ab2@19639>   CMP.w #2,peeksize
000368FC <AmiBlitz3.ab2@19640>    BNE.s 'lb1
00036902 <AmiBlitz3.ab2@19641>    MOVE.l #$30301990,d1
00036906 <AmiBlitz3.ab2@19642> BRA exitjsr
0003690E <AmiBlitz3.ab2@19645>   CMP.w #1,peeksize
00036912 <AmiBlitz3.ab2@19646>    BNE.s 'lf1
00036918 <AmiBlitz3.ab2@19647>    MOVE.l #$10301990,d1
0003691C <AmiBlitz3.ab2@19648> BRA exitjsr
00036924 <AmiBlitz3.ab2@19651>   CMP.w #5,peeksize
00036928 <AmiBlitz3.ab2@19652>    BNE 'l10
0003692E <AmiBlitz3.ab2@19653>    TST.b fpu
00036932 <AmiBlitz3.ab2@19654>    BEQ 'll1
00036936 <AmiBlitz3.ab2@19655>    MOVE.w #$f230,d1
0003693A <AmiBlitz3.ab2@19656>    BSR writeword
0003693C <AmiBlitz3.ab2@19657>    MOVEQ #0,d1
00036942 <AmiBlitz3.ab2@19658>    MOVE.w tempregnum,d1
00036944 <AmiBlitz3.ab2@19659>    ASL.l #7,d1
00036946 <AmiBlitz3.ab2@19660>    ASL.l #8,d1
00036948 <AmiBlitz3.ab2@19661>    ASL.l #8,d1
0003694E <AmiBlitz3.ab2@19662>    ADD.l #$44001990,d1
00036954 <AmiBlitz3.ab2@19663>     TST.b doublepeek
00036958 <AmiBlitz3.ab2@19664>     BEQ 'lpx2
0003695E <AmiBlitz3.ab2@19665>     OR.l   #$10000000,d1
00036962 <AmiBlitz3.ab2@19667> BRA exitjsr
00036966 <AmiBlitz3.ab2@19671>   MOVE.w #$4EB9,D1
0003696A <AmiBlitz3.ab2@19672>    BSR.w writeword                                         ;writesysjsr
0003696E <AmiBlitz3.ab2@19673>   MOVEM.l (A7)+,a0/D1
00036974 <AmiBlitz3.ab2@19674>    JSR addoff
00036978 <AmiBlitz3.ab2@19675>   SUB.l $12(A0),D1
0003697C <AmiBlitz3.ab2@19676>   ADD.l $28(A0),D1
00036980 <AmiBlitz3.ab2@19677> BRA.w writelong
00036982 <AmiBlitz3.ab2@19682>   MOVE.w D1,-(A7)
00036986 <AmiBlitz3.ab2@19683>   MOVE.w tstmode(PC),D1
0003698A <AmiBlitz3.ab2@19684>    BSR.w writeword
0003698E <AmiBlitz3.ab2@19685>    BSR.w getbbase
00036992 <AmiBlitz3.ab2@19686>    BSR.w writeword
00036994 <AmiBlitz3.ab2@19687>   MOVE.w (A7)+,D1
00036998 <AmiBlitz3.ab2@19688>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0003699C <AmiBlitz3.ab2@19689>    BSR.w Atokejsr
000369A0 <AmiBlitz3.ab2@19690>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
000369A2 <AmiBlitz3.ab2@19691> RTS
000369A6 <AmiBlitz3.ab2@19699>   MOVE.w blitzoff(PC),D1
000369AA <AmiBlitz3.ab2@19700>   CMP.w #-$1,D1
000369AE <AmiBlitz3.ab2@19701>    BNE.w getbbase__done
000369B4 <AmiBlitz3.ab2@19702>   ADDQ.w #1,globalvarpointer
000369BC <AmiBlitz3.ab2@19703>   BCLR #$0,globalvarpointer+1
000369C2 <AmiBlitz3.ab2@19704>   MOVE.w globalvarpointer,D1
000369C8 <AmiBlitz3.ab2@19705>   MOVE.w D1,blitzoff
000369CE <AmiBlitz3.ab2@19706>   ADDQ.w #2,globalvarpointer
000369D0 <AmiBlitz3.ab2@19709> RTS
000369D4 <AmiBlitz3.ab2@19713> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
000369D6 <AmiBlitz3.ab2@19716> inline:     Ds.w 1
000369D8 <AmiBlitz3.ab2@19717> blitzoff:   Dc.w $FFFF                                   ;-1 org source
000369DA <AmiBlitz3.ab2@19718> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
000369DC <AmiBlitz3.ab2@19722>   MOVE.w (A2)+,D1
000369E0 <AmiBlitz3.ab2@19723>    BEQ.w fetchregs__done
000369E2 <AmiBlitz3.ab2@19724>   MOVE.w (A2)+,D2
000369E6 <AmiBlitz3.ab2@19725>    BSR.w toreg
000369EA <AmiBlitz3.ab2@19726> BRA.w fetchregs
000369EC <AmiBlitz3.ab2@19729> RTS
000369F0 <AmiBlitz3.ab2@19734>   CMP.w #-$100,D2
000369F4 <AmiBlitz3.ab2@19735>    BCC.w toreg__yeah
000369F8 <AmiBlitz3.ab2@19737>   BCLR #$F,D2
000369FC <AmiBlitz3.ab2@19738>    BEQ.w toreg__nobm
00036A02 <AmiBlitz3.ab2@19740>   TST.w blitzmode
00036A06 <AmiBlitz3.ab2@19741>    BMI.w toreg__yeah
00036A08 <AmiBlitz3.ab2@19742> RTS
00036A0C <AmiBlitz3.ab2@19745>   BCLR #$E,D2
00036A10 <AmiBlitz3.ab2@19746>    BEQ.w toreg__yeah
00036A16 <AmiBlitz3.ab2@19748>   TST.w blitzmode
00036A1A <AmiBlitz3.ab2@19749>    BPL.w toreg__yeah
00036A1C <AmiBlitz3.ab2@19750> RTS
00036A22 <AmiBlitz3.ab2@19753>   JSR uselib
00036A24 <AmiBlitz3.ab2@19754>   TST.b D2
00036A28 <AmiBlitz3.ab2@19755>    BEQ.w toreg__norm
00036A2C <AmiBlitz3.ab2@19756>   CMP.b #$4,D2
00036A30 <AmiBlitz3.ab2@19757>    BNE.w toreg__suv
00036A34 <AmiBlitz3.ab2@19758>   MOVE.w #$0004,-(A7)
00036A3A <AmiBlitz3.ab2@19759>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00036A3E <AmiBlitz3.ab2@19760> BRA.w toreg__sendmd
00036A42 <AmiBlitz3.ab2@19763>   CMP.b #$3,D2
00036A46 <AmiBlitz3.ab2@19764>    BNE.w toreg__notnmax
00036A48 <AmiBlitz3.ab2@19765>   CLR.w -(A7)
00036A4E <AmiBlitz3.ab2@19766>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00036A50 <AmiBlitz3.ab2@19772>   LSR.w #8,D2
00036A54 <AmiBlitz3.ab2@19773>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00036A58 <AmiBlitz3.ab2@19774>   BTST #$7,D2
00036A5C <AmiBlitz3.ab2@19775>    BEQ.w toreg__skipad
00036A60 <AmiBlitz3.ab2@19776>   MOVE.w #$307C,D1                                         ;move.w #x,an
00036A64 <AmiBlitz3.ab2@19777>   CMP.w #$16,D2
00036A68 <AmiBlitz3.ab2@19778>    BNE.w toreg__skipad
00036A70 <AmiBlitz3.ab2@19779>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00036A74 <AmiBlitz3.ab2@19782>   ANDI.w #$7,D2
00036A76 <AmiBlitz3.ab2@19783>   LSL.w #8,D2
00036A78 <AmiBlitz3.ab2@19784>   LSL.w #1,D2
00036A7A <AmiBlitz3.ab2@19785>   OR.w D2,D1
00036A7E <AmiBlitz3.ab2@19786>    BSR.w writeword
00036A82 <AmiBlitz3.ab2@19787>   MOVE.l $12(A1),D1
00036A84 <AmiBlitz3.ab2@19788>   ADD.l (A7)+,D1
00036A88 <AmiBlitz3.ab2@19789>   MOVE.w $0(A1,D1.L),D1
00036A8A <AmiBlitz3.ab2@19790>   ADD.w (A7)+,D1
00036A8E <AmiBlitz3.ab2@19791> BRA.w writeword
00036A90 <AmiBlitz3.ab2@19794>   MOVE.w D2,-(A7)
00036A92 <AmiBlitz3.ab2@19795>   LSR.w #8,D2
00036A96 <AmiBlitz3.ab2@19796>   CMP.w #$16,D2
00036A9A <AmiBlitz3.ab2@19797>    BNE.w toreg__isnta6
00036AA2 <AmiBlitz3.ab2@19798>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00036AA6 <AmiBlitz3.ab2@19801>   MOVE.l $12(A1),D1                                        ;objectspace
00036AAA <AmiBlitz3.ab2@19802>   MOVE.w -$6(A1,D1.L),-(A7)
00036AAE <AmiBlitz3.ab2@19803>    BSR.w makeregop
00036AB2 <AmiBlitz3.ab2@19804>    BSR.w writeword
00036AB4 <AmiBlitz3.ab2@19805>   MOVE.w (A7)+,D1
00036AB6 <AmiBlitz3.ab2@19806>   MOVE.w (A7)+,D2
00036AB8 <AmiBlitz3.ab2@19807>   TST.b D2
00036ABC <AmiBlitz3.ab2@19808>    BPL.w toreg__skippy1
00036AC0 <AmiBlitz3.ab2@19813>    BSR.w writeword                                         ;move.l x(a5),dn
00036AC2 <AmiBlitz3.ab2@19814>   MOVE.w D2,-(A7)                                          ;store reg used
00036AC6 <AmiBlitz3.ab2@19816>   ADDA.l $12(A1),A1
00036AC8 <AmiBlitz3.ab2@19817>   MOVE.b D2,D1
00036ACC <AmiBlitz3.ab2@19818>   ANDI.w #$7,D1
00036AD2 <AmiBlitz3.ab2@19820>   TST.b debugmode
00036AD6 <AmiBlitz3.ab2@19821>    BEQ.w toreg__norerr
00036AD8 <AmiBlitz3.ab2@19823>   MOVE.w D1,-(A7)
00036ADA <AmiBlitz3.ab2@19824>   LSL.w #8,D1
00036ADC <AmiBlitz3.ab2@19825>   LSL.w #1,D1
00036AE0 <AmiBlitz3.ab2@19826>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00036AE4 <AmiBlitz3.ab2@19827>    BSR.w writeword
00036AE8 <AmiBlitz3.ab2@19828>   MOVE.w -$4(A1),D1
00036AEC <AmiBlitz3.ab2@19829>    BSR.w writeword
00036AF0 <AmiBlitz3.ab2@19830>   MOVE.l maxchk(PC),D1                                  ;bcs
00036AF4 <AmiBlitz3.ab2@19831>    BSR.w writelong
00036AF6 <AmiBlitz3.ab2@19832>   MOVE.l A2,-(A7)
00036AFA <AmiBlitz3.ab2@19833>   MOVE.w #$C30A,D1
00036AFE <AmiBlitz3.ab2@19834>    BSR.w Atokejsr
00036B00 <AmiBlitz3.ab2@19835>   MOVEA.l (A7)+,A2
00036B02 <AmiBlitz3.ab2@19836>   MOVE.w (A7)+,D1
00036B06 <AmiBlitz3.ab2@19839>   MOVE.w -$2(A1),D2                                        ;shift amount
00036B0A <AmiBlitz3.ab2@19842>   CMP.w #$9,D2
00036B0E <AmiBlitz3.ab2@19843>    BCS.w toreg__simp
00036B12 <AmiBlitz3.ab2@19844>   MOVEM.w D1-D2,-(A7)
00036B14 <AmiBlitz3.ab2@19846>   MOVEQ.l #$00,D2                                          ;!!!!!
00036B16 <AmiBlitz3.ab2@19848>   LSL.w #8,D2
00036B18 <AmiBlitz3.ab2@19849>   LSL.w #1,D2
00036B1A <AmiBlitz3.ab2@19850>   OR.w D2,D1
00036B1E <AmiBlitz3.ab2@19851>   OR.w lsldn(PC),D1
00036B22 <AmiBlitz3.ab2@19852>    BSR.w writeword
00036B26 <AmiBlitz3.ab2@19853>   MOVEM.w (A7)+,D1-D2
00036B28 <AmiBlitz3.ab2@19854>   SUBQ.w #8,D2
00036B2C <AmiBlitz3.ab2@19855> BRA.w toreg__shloop
00036B2E <AmiBlitz3.ab2@19858>   MOVE.w D1,-(A7)
00036B32 <AmiBlitz3.ab2@19859>   OR.w #$48c0,d1
00036B36 <AmiBlitz3.ab2@19860>   BSR writeword
00036B38 <AmiBlitz3.ab2@19861>   MOVE.w (a7),d1
00036B3A <AmiBlitz3.ab2@19862>   TST.w D2
00036B3E <AmiBlitz3.ab2@19863>   BEQ.w toreg__simp2
00036B42 <AmiBlitz3.ab2@19865>   ANDI.w #$7,D2                                            ;?????
00036B44 <AmiBlitz3.ab2@19867>   LSL.w #8,D2
00036B46 <AmiBlitz3.ab2@19868>   LSL.w #1,D2
00036B48 <AmiBlitz3.ab2@19869>   OR.w D2,D1
00036B4C <AmiBlitz3.ab2@19870>   OR.w lsldn(PC),D1
00036B50 <AmiBlitz3.ab2@19871>    BSR.w writeword
00036B52 <AmiBlitz3.ab2@19877>   MOVE.w (A7)+,D1
00036B56 <AmiBlitz3.ab2@19878>   ANDI.w #$7,D1
00036B5A <AmiBlitz3.ab2@19879>   OR.w maxdo(PC),D1
00036B5C <AmiBlitz3.ab2@19880>   MOVE.w (A7)+,D2
00036B5E <AmiBlitz3.ab2@19881>   LSL.w #1,D2
00036B62 <AmiBlitz3.ab2@19882>   ANDI.w #$E00,D2
00036B64 <AmiBlitz3.ab2@19883>   OR.w D2,D1
00036B68 <AmiBlitz3.ab2@19884> BRA.w writeword
00036B6C <AmiBlitz3.ab2@19887>   CMP.b #$1,D2
00036B70 <AmiBlitz3.ab2@19888>    BEQ.w toreg__skippy
00036B72 <AmiBlitz3.ab2@19892>   ADDQ.w #4,D1
00036B78 <AmiBlitz3.ab2@19894>   TST.b debugmode
00036B7C <AmiBlitz3.ab2@19895>    BEQ.w toreg__skippy
00036B80 <AmiBlitz3.ab2@19897>    BSR.w writeword
00036B82 <AmiBlitz3.ab2@19898>   SWAP D1
00036B86 <AmiBlitz3.ab2@19899>   MOVE.w toreg__theretest(PC),D1
00036B88 <AmiBlitz3.ab2@19900>   SWAP D1
00036B8C <AmiBlitz3.ab2@19901>    BSR.w writelong
00036B90 <AmiBlitz3.ab2@19902>   MOVE.l toreg__theretest+4(PC),D1
00036B94 <AmiBlitz3.ab2@19903>    BSR.w writelong
00036B98 <AmiBlitz3.ab2@19904>   MOVE.l toreg__theretest+8(PC),D1
00036B9C <AmiBlitz3.ab2@19905> BRA.w writelong
00036BA0 <AmiBlitz3.ab2@19908> BRA.w writeword
00036BA4 <AmiBlitz3.ab2@19913>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00036BA8 <AmiBlitz3.ab2@19914>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
00036BAA <AmiBlitz3.ab2@19915>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00036BAC <AmiBlitz3.ab2@19916>             Dc.b $4E,$40                                   ;TRAP   #00
00036BAE <AmiBlitz3.ab2@19921>   LSR.w #8,D2
00036BB2 <AmiBlitz3.ab2@19922>   CMP.b #$16,D2
00036BB6 <AmiBlitz3.ab2@19923>    BNE.w toreg__nota6
00036BBA <AmiBlitz3.ab2@19924>   MOVE.w $A(A1),D1
00036BC0 <AmiBlitz3.ab2@19925>   CMP.w lasta6,D1
00036BC4 <AmiBlitz3.ab2@19926>    BEQ.w toreg__sk
00036BCA <AmiBlitz3.ab2@19927>   MOVE.w D1,lasta6
00036BCE <AmiBlitz3.ab2@19930>    BSR.w makeregop
00036BD2 <AmiBlitz3.ab2@19931>   TST.w $1A(A1)
00036BD6 <AmiBlitz3.ab2@19932>    BPL.w toreg__long
00036BDA <AmiBlitz3.ab2@19933>   CMP.w stackop(PC),D1
00036BDE <AmiBlitz3.ab2@19934>    BNE.w toreg__notst
00036BE4 <AmiBlitz3.ab2@19935>   SUBQ.w #2,a2offset
00036BE8 <AmiBlitz3.ab2@19938>    ORI.w #$1000,D1
00036BEC <AmiBlitz3.ab2@19941>    BSR.w writeword
00036BF0 <AmiBlitz3.ab2@19942>   MOVE.w $A(A1),D1
00036BF4 <AmiBlitz3.ab2@19943>    BSR.w writeword
00036BF6 <AmiBlitz3.ab2@19946> RTS
00036BF8 <AmiBlitz3.ab2@19950> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00036BFC <AmiBlitz3.ab2@19951> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
00036C02 <AmiBlitz3.ab2@19952>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00036C04 <AmiBlitz3.ab2@19955> 
00036C06 <AmiBlitz3.ab2@19958>             Dc.b $00,$00
00036C0A <AmiBlitz3.ab2@19959> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00036C0E <AmiBlitz3.ab2@19966>   CMP.b #$FF,D2
00036C12 <AmiBlitz3.ab2@19967>    BNE.w makeregop__notst
00036C16 <AmiBlitz3.ab2@19968>   MOVE.w stackop(PC),D1
00036C1C <AmiBlitz3.ab2@19969>   ADDQ.w #4,a2offset
00036C1E <AmiBlitz3.ab2@19970> RTS
00036C20 <AmiBlitz3.ab2@19973>   MOVE.l A3,-(A7)
00036C26 <AmiBlitz3.ab2@19974>   LEA regtransd,A3
00036C2A <AmiBlitz3.ab2@19975>   BTST #$4,D2
00036C2E <AmiBlitz3.ab2@19976>    BEQ.w makeregop__skip
00036C34 <AmiBlitz3.ab2@19977>   LEA regtransa,A3
00036C38 <AmiBlitz3.ab2@19980>   ANDI.w #$7,D2
00036C3A <AmiBlitz3.ab2@19981>   MOVE.w D2,D1
00036C3C <AmiBlitz3.ab2@19982>   LSL.w #8,D1
00036C3E <AmiBlitz3.ab2@19983>   LSL.w #1,D1
00036C40 <AmiBlitz3.ab2@19984>   OR.w (A3),D1
00036C42 <AmiBlitz3.ab2@19985>   MOVEA.l (A7)+,A3
00036C44 <AmiBlitz3.ab2@19986> RTS
00036C48 <AmiBlitz3.ab2@19992>   CMP.w #$3C,D0
00036C4C <AmiBlitz3.ab2@19993>    BCS.w ifchar__no
00036C50 <AmiBlitz3.ab2@19994>   CMP.w #$3E,D0
00036C54 <AmiBlitz3.ab2@19995>    BHI.w ifchar__no
00036C58 <AmiBlitz3.ab2@19996>   SUBI.w #$3C,D0
00036C5A <AmiBlitz3.ab2@19997>   CMP.w D0,D0
00036C5C <AmiBlitz3.ab2@20000> RTS
00036C66 <AmiBlitz3.ab2@20005>   MOVE.w oldqflag,instringon
00036C6C <AmiBlitz3.ab2@20006>   MOVEA.l lastsourcepos,A5
00036C72 <AmiBlitz3.ab2@20011>   MOVE.w regnum,-(A7)
00036C78 <AmiBlitz3.ab2@20012>   CLR.w regnum
00036C7E <AmiBlitz3.ab2@20013>   MOVE.l destpointer,-(A7)
00036C84 <AmiBlitz3.ab2@20014>   MOVE.l destbufferend,-(A7)
00036C8A <AmiBlitz3.ab2@20015>   MOVE.w dontwrite,-(A7)
00036C90 <AmiBlitz3.ab2@20016>   MOVE.w lasta6,-(A7)
00036C96 <AmiBlitz3.ab2@20017>   MOVE.w cfetchmode,-(A7)
00036C9A <AmiBlitz3.ab2@20018>    BNE.w JL_0_BFB6
00036CA4 <AmiBlitz3.ab2@20019>   MOVE.l destbufferend,oldlibat
00036CAA <AmiBlitz3.ab2@20020>   MOVEA.l constpcat,A0
00036CB0 <AmiBlitz3.ab2@20021>   MOVE.l A0,destpointer
00036CB4 <AmiBlitz3.ab2@20022> BRA.w JL_0_BFBC
00036CBA <AmiBlitz3.ab2@20025>   MOVEA.l destpointer,A0
00036CBC <AmiBlitz3.ab2@20028>   MOVE.l A0,-(A7)
00036CC6 <AmiBlitz3.ab2@20029>   MOVE.l constlibat,destbufferend
00036CCC <AmiBlitz3.ab2@20030>   CLR.w dontwrite
00036CD4 <AmiBlitz3.ab2@20032>   MOVE.w #$FFFF,lasta6
00036CDC <AmiBlitz3.ab2@20033>   MOVE.w #$FFFF,cfetchmode
00036CE0 <AmiBlitz3.ab2@20035>     BSR.w arreval
00036CE2 <AmiBlitz3.ab2@20036>    MOVE.l (a7),a0
00036E1E <AmiBlitz3.ab2@20038>  !newcalc
00036E22 <AmiBlitz3.ab2@20039>    BEQ 'l10
00036E24 <AmiBlitz3.ab2@20040>    MOVE.l d0,d3
00036E26 <AmiBlitz3.ab2@20041>    MOVEA.l (A7)+,A0
00036E2A <AmiBlitz3.ab2@20042> BRA bc1
00036E2E <AmiBlitz3.ab2@20045>    MOVE.w #$2600,D1
00036E34 <AmiBlitz3.ab2@20046>   OR.w regnum,D1
00036E38 <AmiBlitz3.ab2@20047>    BSR.w writeword
00036E3C <AmiBlitz3.ab2@20048>   MOVE.w #$4E75,D1
00036E40 <AmiBlitz3.ab2@20049>    BSR.w writeword
00036E46 <AmiBlitz3.ab2@20050>   MOVE.w dontwrite,D1
00036E4A <AmiBlitz3.ab2@20051>    BNE.w conmemerr
00036E4C <AmiBlitz3.ab2@20052>   MOVEA.l (A7)+,A0
00036E4E <AmiBlitz3.ab2@20053>   NOP
00036E54 <AmiBlitz3.ab2@20054>    JSR Aclearcache                                         ;simple expression
00036E56 <AmiBlitz3.ab2@20057>    JSR (A0)                                                ;writeresult
00036E5C <AmiBlitz3.ab2@20060>   MOVE.w (A7)+,cfetchmode
00036E62 <AmiBlitz3.ab2@20061>   MOVE.w (A7)+,lasta6
00036E68 <AmiBlitz3.ab2@20062>   MOVE.w (A7)+,dontwrite
00036E6E <AmiBlitz3.ab2@20063>   MOVE.l (A7)+,destbufferend
00036E74 <AmiBlitz3.ab2@20064>   MOVE.l (A7)+,destpointer
00036E7A <AmiBlitz3.ab2@20065>   MOVE.w (A7)+,regnum
00036E80 <AmiBlitz3.ab2@20068> JMP reget
00036E84 <AmiBlitz3.ab2@20071> oldlibat:   Ds.l 1
00036E8A <AmiBlitz3.ab2@20075>   LEA incdir,A0
00036E8E <AmiBlitz3.ab2@20078>   CMP.w #$22,D0
00036E92 <AmiBlitz3.ab2@20079>    BEQ.w JL_0_C052
00036E94 <AmiBlitz3.ab2@20080>   MOVE.b D0,(A0)+
00036E96 <AmiBlitz3.ab2@20081>   TST.w D0
00036E9A <AmiBlitz3.ab2@20082>    BEQ.w JL_0_C05A
00036E9E <AmiBlitz3.ab2@20083>    BMI.w syntaxerr
00036EA4 <AmiBlitz3.ab2@20086>   JSR get1bytemain                                         ;_long
00036EA8 <AmiBlitz3.ab2@20087> BRA.w JL_0_C03E
00036EAA <AmiBlitz3.ab2@20090> RTS
00036EB0 <AmiBlitz3.ab2@20094>   LEA ptr_parameterstore,A1                                ;getparameter
00036EB6 <AmiBlitz3.ab2@20095>   LEA incdir,A0
00036EB8 <AmiBlitz3.ab2@20096>   MOVEQ.l #-$01,D2
00036EBA <AmiBlitz3.ab2@20099>     ADDQ.w #1,D2
00036EBC <AmiBlitz3.ab2@20100>     MOVE.b (A0)+,(A1)+
00036EC0 <AmiBlitz3.ab2@20101>   BNE.w JL_0_C06A
00036EC2 <AmiBlitz3.ab2@20102>   SUBQ.w #1,A1
00036ECC <AmiBlitz3.ab2@20104>   MOVE.w oldqflag,instringon
00036ED2 <AmiBlitz3.ab2@20105>   MOVEA.l lastsourcepos,A5
00036ED8 <AmiBlitz3.ab2@20109>   JSR get1bytemain
00036EDA <AmiBlitz3.ab2@20110>   TST.w D0
00036EDE <AmiBlitz3.ab2@20111>    BMI.w syntaxerr
00036EE2 <AmiBlitz3.ab2@20112>   CMP.b #$22,D0
00036EE6 <AmiBlitz3.ab2@20113>    BEQ.w JL_0_C078
00036EE8 <AmiBlitz3.ab2@20114>   MOVE.b D0,(A1)+
00036EEC <AmiBlitz3.ab2@20115>    BEQ.w JL_0_C096
00036EEE <AmiBlitz3.ab2@20116>   ADDQ.w #1,D2
00036EF2 <AmiBlitz3.ab2@20117> BRA.w JL_0_C078
00036EF4 <AmiBlitz3.ab2@20120>   TST.w D2
00036EF8 <AmiBlitz3.ab2@20121>    BEQ.w syntaxerr
00036EFA <AmiBlitz3.ab2@20122> RTS
00036F00 <AmiBlitz3.ab2@20126>   MOVEA.l constantbase,A2
00036F04 <AmiBlitz3.ab2@20127>   MOVEA.l $E(A2),A5
00036F0A <AmiBlitz3.ab2@20128>   MOVE.l a5,includesourceline
00036F10 <AmiBlitz3.ab2@20129>   LEA inctab,a0
00036F16 <AmiBlitz3.ab2@20130>   MOVE.w ininclude,d0
00036F1A <AmiBlitz3.ab2@20131>   MOVE.l $0(a0,d0*4),d0
00036F1E <AmiBlitz3.ab2@20132>   MOVEA.l $4(A2),A0
00036F22 <AmiBlitz3.ab2@20134>   LEA $0(A0,D0.l),A0
00036F24 <AmiBlitz3.ab2@20135>   MOVEA.l A5,A1
00036F26 <AmiBlitz3.ab2@20138>     CMPA.l A0,A1
00036F2A <AmiBlitz3.ab2@20139>      BCC.w JL_0_C0C6
00036F2C <AmiBlitz3.ab2@20140>   TST.b (A1)+
00036F30 <AmiBlitz3.ab2@20141>   BNE.w JL_0_C0B6
00036F34 <AmiBlitz3.ab2@20142> BRA.w JL_0_C112
00036F38 <AmiBlitz3.ab2@20145>   MOVEA.l $4(A2),A1
00036F3A <AmiBlitz3.ab2@20148>   CMPA.l A0,A5
00036F3E <AmiBlitz3.ab2@20149>   BCC.w JL_0_C0D6
00036F40 <AmiBlitz3.ab2@20150>   MOVE.b (A5)+,(A1)+
00036F44 <AmiBlitz3.ab2@20151> BRA.w JL_0_C0CA
00036F46 <AmiBlitz3.ab2@20154>   MOVE.l A1,D0
00036F4A <AmiBlitz3.ab2@20155>   SUB.l $4(A2),D0
00036F50 <AmiBlitz3.ab2@20156>   LEA inctab,a0
00036F52 <AmiBlitz3.ab2@20157>   MOVEQ #0,d1
00036F58 <AmiBlitz3.ab2@20158>   MOVE.w ininclude,d1
00036F5C <AmiBlitz3.ab2@20159>   MOVE.l d0,0(a0,d1*4)
00036F62 <AmiBlitz3.ab2@20161>   MOVEA.l _dosbase,A6
00036F66 <AmiBlitz3.ab2@20162>   MOVE.l $8(A2),D1
00036F68 <AmiBlitz3.ab2@20163>   MOVE.l A1,D2
00036F6E <AmiBlitz3.ab2@20164>   MOVE.l D2,include_base
00036F74 <AmiBlitz3.ab2@20166>   MOVE.l #$10000000,d3                                     ;load whole file
00036F76 <AmiBlitz3.ab2@20167>   SUB.l D0,D3
00036F7A <AmiBlitz3.ab2@20168>    JSR _Read(A6)
00036F7C <AmiBlitz3.ab2@20169>   TST.l D0
00036F80 <AmiBlitz3.ab2@20170>    BMI.w error_reading_file
00036F84 <AmiBlitz3.ab2@20171>    BEQ.w JL_0_C120
00036F8A <AmiBlitz3.ab2@20172>    MOVE.l D0,include_length
00036FCC <AmiBlitz3.ab2@20173>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00036FF6 <AmiBlitz3.ab2@20174>    !basic
00037006 <AmiBlitz3.ab2@20175>    ilen.l  = Peek.l(?include_length)
00037016 <AmiBlitz3.ab2@20176>    ibase.l = Peek.l(?include_base)
00037026 <AmiBlitz3.ab2@20177>    ido.l   = Peek.l(?include_process)
00037036 <AmiBlitz3.ab2@20178>    *tn.preprocessor = Peek.l(?include_preprocessor)
00037040 <AmiBlitz3.ab2@20179>    If ido
00037052 <AmiBlitz3.ab2@20180>      ioffset.l = SkipXtraHeader{ibase,ilen}
00037078 <AmiBlitz3.ab2@20181>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0003708A <AmiBlitz3.ab2@20182>      If nilen>0
0003709A <AmiBlitz3.ab2@20186>        Poke.l ?include_length,nilen
000370B8 <AmiBlitz3.ab2@20189>    !asm
000370C2 <AmiBlitz3.ab2@20190>    MOVE.l #0,include_process
000370C8 <AmiBlitz3.ab2@20191>    MOVE.l include_length,D0
000370CE <AmiBlitz3.ab2@20192>    LEA inctab,a0
000370D0 <AmiBlitz3.ab2@20193>    MOVEQ #0,d1
000370D6 <AmiBlitz3.ab2@20194>    MOVE.w ininclude,d1
000370DA <AmiBlitz3.ab2@20195>    ADD.l d0,0(a0,d1*4)
000370DE <AmiBlitz3.ab2@20197>   MOVEA.l $4(A2),A5
000370E2 <AmiBlitz3.ab2@20199>    MOVE.l 0(a0,d1*4),d0
000370E6 <AmiBlitz3.ab2@20200>   CLR.b $0(A5,D0.l)
000370E8 <AmiBlitz3.ab2@20203>   MOVEA.l A5,A0
000370EA <AmiBlitz3.ab2@20206>     TST.b (A0)+
000370EE <AmiBlitz3.ab2@20207>   BNE.w JL_0_C114
000370F2 <AmiBlitz3.ab2@20208>   MOVE.l A0,$E(A2)
000370F4 <AmiBlitz3.ab2@20209> RTS
000370F8 <AmiBlitz3.ab2@20212> include_length:        Dc.l 0                              ; for tokenizer!
000370FC <AmiBlitz3.ab2@20213> include_base:          Dc.l 0
00037100 <AmiBlitz3.ab2@20214> include_process:       Dc.l 0
00037104 <AmiBlitz3.ab2@20215> include_preprocessor:  Dc.l 0
00037108 <AmiBlitz3.ab2@20219>   MOVE.l $8(A2),D1
0003710E <AmiBlitz3.ab2@20221>   MOVEA.l _dosbase,A6
00037112 <AmiBlitz3.ab2@20222>   JSR _Close(a6)
00037118 <AmiBlitz3.ab2@20223>   MOVEA.l _execbase,A6
0003711C <AmiBlitz3.ab2@20224>   MOVEA.l $4(A2),A1
00037122 <AmiBlitz3.ab2@20225>   MOVE.l #$400*8,D0                                        ;exit include
00037126 <AmiBlitz3.ab2@20227>   JSR _FreeVec(a6)
0003712C <AmiBlitz3.ab2@20230>   MOVE.l (A2),constantbase
0003712E <AmiBlitz3.ab2@20231>   MOVEA.l A2,A1
00037130 <AmiBlitz3.ab2@20232>   MOVEQ.l #$00,D0
00037134 <AmiBlitz3.ab2@20233>   MOVE.b $12(A2),D0
0003713A <AmiBlitz3.ab2@20234>   MOVEA.l _execbase,A6
00037140 <AmiBlitz3.ab2@20235>   MOVE.l mempool2,a0
00037144 <AmiBlitz3.ab2@20236>   JSR _FreePooled(A6)
0003714A <AmiBlitz3.ab2@20237>   JSR zero_includename
00037150 <AmiBlitz3.ab2@20238>   SUBQ.w #1,ininclude
00037154 <AmiBlitz3.ab2@20239>   BNE.w AJL_0_C09E
0003715A <AmiBlitz3.ab2@20242>   LEA _include,a0
0003715E <AmiBlitz3.ab2@20243>   MOVEM.l a0-a6/d0-d7,-(a7)
00037164 <AmiBlitz3.ab2@20244>   LEA ptr_parameterstore,a1
00037166 <AmiBlitz3.ab2@20247>     MOVE.b (a0)+,(a1)+
0003716A <AmiBlitz3.ab2@20248>   BNE 'l1b
0003716C <AmiBlitz3.ab2@20249>   MOVEQ #9,d2
00037172 <AmiBlitz3.ab2@20250>   JSR findlabel2
00037176 <AmiBlitz3.ab2@20251>   BNE 'd
0003717A <AmiBlitz3.ab2@20252>   CLR.l 8(a2)
0003717E <AmiBlitz3.ab2@20255>   MOVEM.l (a7)+,a0-a6/d0-d7
00037180 <AmiBlitz3.ab2@20256> RTS
00037186 <AmiBlitz3.ab2@20260>   MOVE.l unusedfunc,d0
0003718A <AmiBlitz3.ab2@20261>   BEQ 'noclear
0003718E <AmiBlitz3.ab2@20262>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00037190 <AmiBlitz3.ab2@20265>     MOVE.l d0,a1
00037194 <AmiBlitz3.ab2@20266>     MOVE.l 4(a1),d0
00037196 <AmiBlitz3.ab2@20267>     MOVE.l (a1),d2
0003719C <AmiBlitz3.ab2@20268>     MOVE.l _execbase,a6
000371A0 <AmiBlitz3.ab2@20269>     JSR _FreeMem(a6)
000371A2 <AmiBlitz3.ab2@20270>     MOVE.l d2,d0
000371A6 <AmiBlitz3.ab2@20271>   BNE 'f1
000371AC <AmiBlitz3.ab2@20272>   CLR.l unusedfunc
000371B0 <AmiBlitz3.ab2@20273>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
000371B2 <AmiBlitz3.ab2@20276> RTS
000371B8 <AmiBlitz3.ab2@20280>   MOVEA.l xinclude_base,A2
000371BE <AmiBlitz3.ab2@20281>   CLR.l xinclude_base
000371C2 <AmiBlitz3.ab2@20284>     CMPA.w #$0,A2
000371C6 <AmiBlitz3.ab2@20285>      BEQ.w JL_0_C186
000371C8 <AmiBlitz3.ab2@20286>     MOVEQ.l #$00,D0
000371CC <AmiBlitz3.ab2@20287>     MOVE.b 4+8(A2),D0
000371CE <AmiBlitz3.ab2@20288>     MOVEA.l A2,A1
000371D0 <AmiBlitz3.ab2@20289>     MOVEA.l (A2),A2
000371D6 <AmiBlitz3.ab2@20290>     MOVEA.l _execbase,A6
000371DC <AmiBlitz3.ab2@20291>     MOVE.l mempool2,a0
000371E0 <AmiBlitz3.ab2@20292>     JSR _FreePooled(A6)
000371E4 <AmiBlitz3.ab2@20293> BRA.w JL_0_C168
000371E6 <AmiBlitz3.ab2@20296> RTS
000371EC <AmiBlitz3.ab2@20300>   MOVEA.l constantbase,A2
000371F2 <AmiBlitz3.ab2@20301>   CLR.l constantbase
000371F6 <AmiBlitz3.ab2@20304>     CMPA.w #$0,A2
000371FA <AmiBlitz3.ab2@20305>      BEQ.w JL_0_C1DC
000371FE <AmiBlitz3.ab2@20306>     MOVE.l $8(A2),D1
00037202 <AmiBlitz3.ab2@20307>      BEQ.w JL_0_C1AE
00037208 <AmiBlitz3.ab2@20308>     MOVEA.l _dosbase,A6
0003720C <AmiBlitz3.ab2@20309>      JSR _Close(A6)
00037210 <AmiBlitz3.ab2@20312>     MOVE.l $4(A2),D0
00037214 <AmiBlitz3.ab2@20313>      BEQ.w JL_0_C1C6
00037216 <AmiBlitz3.ab2@20314>     MOVEA.l D0,A1
0003721C <AmiBlitz3.ab2@20315>     MOVE.l #$400*8,D0
00037222 <AmiBlitz3.ab2@20316>     MOVEA.l _execbase,A6
00037228 <AmiBlitz3.ab2@20317>     MOVE.l mempool,a0
0003722C <AmiBlitz3.ab2@20318>     JSR _FreeVec(a6)
0003722E <AmiBlitz3.ab2@20321>     MOVEQ.l #$00,D0
00037232 <AmiBlitz3.ab2@20322>     MOVE.b $12(A2),D0
00037234 <AmiBlitz3.ab2@20323>     MOVEA.l A2,A1
00037236 <AmiBlitz3.ab2@20324>     MOVEA.l (A2),A2
0003723C <AmiBlitz3.ab2@20325>     MOVEA.l _execbase,A6
00037242 <AmiBlitz3.ab2@20326>     MOVE.l mempool2,a0
00037246 <AmiBlitz3.ab2@20327>     JSR _FreePooled(A6)
0003724A <AmiBlitz3.ab2@20328> BRA.w JL_0_C194
0003724C <AmiBlitz3.ab2@20331> RTS
0003724E <AmiBlitz3.ab2@20335>   SWAP D0
00037252 <AmiBlitz3.ab2@20336>    BSR.w JL_0_C1E6
00037254 <AmiBlitz3.ab2@20337>   SWAP D0
0003725A <AmiBlitz3.ab2@20340>   MOVEA.l data2,A4
00037260 <AmiBlitz3.ab2@20341>   CMPA.l allat,A4
00037264 <AmiBlitz3.ab2@20342>    BCC.w JL_0_C200
00037266 <AmiBlitz3.ab2@20343>   MOVE.w D0,(A4)+
0003726C <AmiBlitz3.ab2@20344>   MOVE.l A4,data2
0003726E <AmiBlitz3.ab2@20345> RTS
00037276 <AmiBlitz3.ab2@20348>   MOVE.w #$FFFF,dontwrite
0003727C <AmiBlitz3.ab2@20349>   ADDQ.l #2,data2
0003727E <AmiBlitz3.ab2@20350> RTS
00037284 <AmiBlitz3.ab2@20354>   MOVEA.l data2,A4
0003728A <AmiBlitz3.ab2@20355>   CMPA.l allat,A4
0003728E <AmiBlitz3.ab2@20356>    BCC.w JL_0_C22A
00037290 <AmiBlitz3.ab2@20357>   MOVE.b D0,(A4)+
00037296 <AmiBlitz3.ab2@20358>   MOVE.l A4,data2
00037298 <AmiBlitz3.ab2@20359> RTS
000372A0 <AmiBlitz3.ab2@20362>   MOVE.w #$FFFF,dontwrite
000372A6 <AmiBlitz3.ab2@20363>   ADDQ.l #1,data2
000372A8 <AmiBlitz3.ab2@20364> RTS
000372AC <AmiBlitz3.ab2@20368>   CMP.w #$22,D0
000372B0 <AmiBlitz3.ab2@20369>    BNE.w syntaxerr
000372B6 <AmiBlitz3.ab2@20373>   JSR get1bytemain
000372BA <AmiBlitz3.ab2@20374>   CMP.b #$22,D0
000372BE <AmiBlitz3.ab2@20375>    BEQ.w JL_0_C25A
000372C0 <AmiBlitz3.ab2@20376>   TST.w D0
000372C4 <AmiBlitz3.ab2@20377>    BEQ.w syntaxerr
000372C6 <AmiBlitz3.ab2@20378>   MOVE.b D0,(A0)+
000372CA <AmiBlitz3.ab2@20379> BRA.w JL_0_C242
000372CC <AmiBlitz3.ab2@20382>   CLR.b (A0)
000372CE <AmiBlitz3.ab2@20383> RTS
000372D0 <AmiBlitz3.ab2@20386>   TST.l D3
000372D2 <AmiBlitz3.ab2@20387> RTS
000372D8 <AmiBlitz3.ab2@20390>   LEA ptr_parameterstore,A0
000372DE <AmiBlitz3.ab2@20391>   LEA namebuff2,A1
000372E0 <AmiBlitz3.ab2@20394>     MOVE.b (A0)+,D0
000372E4 <AmiBlitz3.ab2@20395>     BEQ.w JL_0_C27C
000372E6 <AmiBlitz3.ab2@20396>   CMP.b (A1)+,D0
000372EA <AmiBlitz3.ab2@20397>   BEQ.w JL_0_C26E
000372EC <AmiBlitz3.ab2@20398> RTS
000372EE <AmiBlitz3.ab2@20401>   TST.b (A1)
000372F2 <AmiBlitz3.ab2@20402>   BNE.w JL_0_C284
000372F4 <AmiBlitz3.ab2@20403> RTS
000372F8 <AmiBlitz3.ab2@20406>   CMP.w #$1,D0
000372FA <AmiBlitz3.ab2@20407> RTS
000372FE <AmiBlitz3.ab2@20411>   CMP.w #$2E,D0                                            ;dodeftype
00037302 <AmiBlitz3.ab2@20412>    BNE.w syntaxerr
00037306 <AmiBlitz3.ab2@20413>   BSR.w getparameter2
0003730C <AmiBlitz3.ab2@20414>   LEA newtypebase,A2
00037310 <AmiBlitz3.ab2@20415>   BSR.w findtype
00037314 <AmiBlitz3.ab2@20416>    BNE.w notypeerr
0003731A <AmiBlitz3.ab2@20417>   TST.b declare
0003731E <AmiBlitz3.ab2@20418>    BNE 'l1
00037324 <AmiBlitz3.ab2@20419>   TST.b declare2
00037328 <AmiBlitz3.ab2@20420>    BEQ 'l2
00037330 <AmiBlitz3.ab2@20423>   MOVE.b #2,nowdeclare
00037336 <AmiBlitz3.ab2@20427>   JSR reget
0003733A <AmiBlitz3.ab2@20428>    BNE.w JL_0_C2B4
00037340 <AmiBlitz3.ab2@20429>   MOVE.l A2,defaulttype
00037342 <AmiBlitz3.ab2@20430> RTS
00037348 <AmiBlitz3.ab2@20433>   MOVE.l defaulttype,-(A7)
0003734E <AmiBlitz3.ab2@20434>   MOVE.l A2,defaulttype
00037352 <AmiBlitz3.ab2@20437>   BSR.w getparameter
00037356 <AmiBlitz3.ab2@20438>    BSR.w JL_0_8E3C
0003735A <AmiBlitz3.ab2@20439>   CMP.w #$2C,D0
0003735E <AmiBlitz3.ab2@20440>    BNE.w JL_0_C2D8
00037364 <AmiBlitz3.ab2@20441>    JSR get1bytemain                                        ; was BSR.w
00037368 <AmiBlitz3.ab2@20442> BRA.w JL_0_C2C0
0003736E <AmiBlitz3.ab2@20445>   MOVE.l (A7)+,defaulttype
00037370 <AmiBlitz3.ab2@20446> RTS
00037374 <AmiBlitz3.ab2@20450>   LEA $4(A5),A2                                            ;fehler function
00037376 <AmiBlitz3.ab2@20453>   MOVE.l A2,D0
0003737A <AmiBlitz3.ab2@20456>   BSR.w getparameter
0003737E <AmiBlitz3.ab2@20457>   BSR.w JL_0_8E3C
00037382 <AmiBlitz3.ab2@20458>   BSR.w calcvar
00037386 <AmiBlitz3.ab2@20459>   CMP.b #$7,D2
0003738A <AmiBlitz3.ab2@20460>    BNE.w mismatcherr
0003738E <AmiBlitz3.ab2@20461>   MOVE.w varmode(PC),-(A7)
00037392 <AmiBlitz3.ab2@20462>   CMP.w #$3D,D0
00037396 <AmiBlitz3.ab2@20463>    BNE.w syntaxerr
0003739A <AmiBlitz3.ab2@20464>   BTST #$F,D2
0003739E <AmiBlitz3.ab2@20465>    BNE.w JL_0_C31C
000373A2 <AmiBlitz3.ab2@20466>   MOVE.w JL_0_C2E0(PC),D1
000373A6 <AmiBlitz3.ab2@20467>   BSR.w pokewda5s
000373A8 <AmiBlitz3.ab2@20468>   MOVE.w D3,D1
000373AC <AmiBlitz3.ab2@20469>   BSR.w writeword
000373B0 <AmiBlitz3.ab2@20472>   MOVE.w L_0_C2E4(PC),D1
000373B4 <AmiBlitz3.ab2@20473>   BSR.w writeword
000373BA <AmiBlitz3.ab2@20474>   ADDQ.w #1,regnum
000373BC <AmiBlitz3.ab2@20475>   MOVEQ.l #$03,D2
000373C0 <AmiBlitz3.ab2@20476>   BSR.w eval
000373C6 <AmiBlitz3.ab2@20477>   MOVE.l #$D000,D1
000373CC <AmiBlitz3.ab2@20478>   MOVE.l d1,lastinstruction
000373CE <AmiBlitz3.ab2@20479>   TST.w (A7)+
000373D2 <AmiBlitz3.ab2@20480>    BEQ.w Atokejsr
000373D4 <AmiBlitz3.ab2@20481>   ADDQ.w #1,D1
000373D8 <AmiBlitz3.ab2@20482> BRA.w Atokejsr
000373DA <AmiBlitz3.ab2@20486>   MOVE.w D0,D1
000373DE <AmiBlitz3.ab2@20487>    BPL.w syntaxerr
000373E2 <AmiBlitz3.ab2@20488>   BCLR #$F,D1
000373E8 <AmiBlitz3.ab2@20489>    JSR searchinstr
000373EC <AmiBlitz3.ab2@20490>   MOVE.l $12(A2),D0
000373F0 <AmiBlitz3.ab2@20491>   TST.w -$2(A2,D0.L)
000373F4 <AmiBlitz3.ab2@20492>    BEQ.w freeerr
000373F6 <AmiBlitz3.ab2@20493>   MOVEQ.l #$02,D2
000373F8 <AmiBlitz3.ab2@20494>   MOVE.l A2,-(A7)
000373FC <AmiBlitz3.ab2@20495>    BSR.w eval
000373FE <AmiBlitz3.ab2@20496>   MOVEA.l (A7)+,A2
00037404 <AmiBlitz3.ab2@20497>   MOVE.l A2,mymaxlib
00037408 <AmiBlitz3.ab2@20498>   ADDA.l $12(A2),A2
0003740E <AmiBlitz3.ab2@20499>   TST.b debugmode
00037412 <AmiBlitz3.ab2@20500>    BEQ.w JL_0_C3A8
00037418 <AmiBlitz3.ab2@20501>   MOVE.w regnum,D1
0003741A <AmiBlitz3.ab2@20502>   LSL.w #8,D1
0003741C <AmiBlitz3.ab2@20503>   LSL.w #1,D1
00037420 <AmiBlitz3.ab2@20504>   ORI.w #$B07C,D1
00037424 <AmiBlitz3.ab2@20505>    BSR.w writeword
00037428 <AmiBlitz3.ab2@20506>   MOVE.w -$4(A2),D1
0003742C <AmiBlitz3.ab2@20507>    BSR.w writeword
00037432 <AmiBlitz3.ab2@20508>   MOVE.l maxchk,D1
00037436 <AmiBlitz3.ab2@20509>    BSR.w writelong
00037438 <AmiBlitz3.ab2@20510>   MOVE.l A2,-(A7)
0003743C <AmiBlitz3.ab2@20511>   MOVE.w #$C30A,D1
00037440 <AmiBlitz3.ab2@20512>    BSR.w Atokejsr
00037442 <AmiBlitz3.ab2@20513>   MOVEA.l (A7)+,A2
00037446 <AmiBlitz3.ab2@20516>   MOVE.w -$2(A2),D2
0003744C <AmiBlitz3.ab2@20519>   MOVE.w regnum,D1
00037452 <AmiBlitz3.ab2@20520>   OR.w lslimm,D1
00037456 <AmiBlitz3.ab2@20521>   CMP.w #$8,D2
0003745A <AmiBlitz3.ab2@20522>    BCS.w JL_0_C3CE
0003745E <AmiBlitz3.ab2@20523>    BSR.w writeword
00037460 <AmiBlitz3.ab2@20524>   SUBQ.w #8,D2
00037464 <AmiBlitz3.ab2@20525>    BNE.w JL_0_C3AC
00037468 <AmiBlitz3.ab2@20526> BRA.w JL_0_C3DA
0003746A <AmiBlitz3.ab2@20529>   MOVE.w D2,D0
0003746C <AmiBlitz3.ab2@20530>   LSL.w #8,D0
0003746E <AmiBlitz3.ab2@20531>   LSL.w #1,D0
00037470 <AmiBlitz3.ab2@20532>   OR.w D0,D1
00037474 <AmiBlitz3.ab2@20533>   BSR.w writeword
00037476 <AmiBlitz3.ab2@20536> RTS
0003747A <AmiBlitz3.ab2@20541>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003747C <AmiBlitz3.ab2@20542>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00037480 <AmiBlitz3.ab2@20546> mymaxlib:  Ds.l 1
00037484 <AmiBlitz3.ab2@20550>   BSR.w JL_0_C340
00037488 <AmiBlitz3.ab2@20551>   LEA free(PC),A0
0003748C <AmiBlitz3.ab2@20552>   LEA freef(PC),A1
00037492 <AmiBlitz3.ab2@20553>   MOVE.w -$6(A2),$2(A0)
00037496 <AmiBlitz3.ab2@20554>   BSR.w pokecode
0003749A <AmiBlitz3.ab2@20555>   MOVE.l -$A(A2),D1
0003749E <AmiBlitz3.ab2@20558>   BEQ.w nosuperr
000374A2 <AmiBlitz3.ab2@20559>   MOVEA.l mymaxlib(PC),A2
000374A6 <AmiBlitz3.ab2@20560> BRA.w Amakelibsub
000374AA <AmiBlitz3.ab2@20565>   BSR.w JL_0_C340
000374B0 <AmiBlitz3.ab2@20566>   LEA use,A0
000374B6 <AmiBlitz3.ab2@20567>   LEA usef,A1
000374BC <AmiBlitz3.ab2@20568>   MOVE.w -$6(A2),$2(A0)
000374C2 <AmiBlitz3.ab2@20569>   MOVE.w -$6(A2),-$2(A1)
000374C6 <AmiBlitz3.ab2@20570>   ADDQ.w #4,-$2(A1)
000374CA <AmiBlitz3.ab2@20571>   BSR.w pokecode
000374CE <AmiBlitz3.ab2@20572>   MOVE.l -$E(A2),D1
000374D2 <AmiBlitz3.ab2@20573> BRA.w maxjsr
000374D8 <AmiBlitz3.ab2@20577>   JSR get1bytemain
000374DE <AmiBlitz3.ab2@20581>   MOVE.l firstiff,D0
000374E2 <AmiBlitz3.ab2@20582>    BEQ.w noiferr
000374E4 <AmiBlitz3.ab2@20583>   MOVEA.l D0,A0
000374EA <AmiBlitz3.ab2@20584>   CMPI.b #$1,$D(A0)
000374EE <AmiBlitz3.ab2@20585>    BEQ.w illelseerr
000374F2 <AmiBlitz3.ab2@20586>   MOVE.w #$6000,D1
000374F8 <AmiBlitz3.ab2@20588>     TST.b fast
000374FC <AmiBlitz3.ab2@20589>     BEQ 'l1
00037502 <AmiBlitz3.ab2@20590>     OR.l #$ff,d1
00037506 <AmiBlitz3.ab2@20591>     BSR writeword
00037508 <AmiBlitz3.ab2@20595>   SWAP D1
0003750C <AmiBlitz3.ab2@20596>   BSR.w writelong
0003750E <AmiBlitz3.ab2@20597>   MOVEQ.l #$00,D1
00037512 <AmiBlitz3.ab2@20598>   BSR.w AJL_0_D7B8
0003751A <AmiBlitz3.ab2@20599>   MOVE.l destpointer,$8(A0)
0003751E <AmiBlitz3.ab2@20600> BRA.w do_then
00037524 <AmiBlitz3.ab2@20604>   LEA ptr_parameterstore,A0
00037526 <AmiBlitz3.ab2@20605>   MOVE.l A0,-(A7)
0003752A <AmiBlitz3.ab2@20606>   BSR.w JL_0_C23A
0003752E <AmiBlitz3.ab2@20607> BRA.w handle_compileerror
00037532 <AmiBlitz3.ab2@20611>   BSR.w JL_0_BF6A
00037534 <AmiBlitz3.ab2@20612>   MOVEQ.l #$05,D1
0003753E <AmiBlitz3.ab2@20614>   MOVE.w oldqflag,instringon
00037544 <AmiBlitz3.ab2@20615>   MOVEA.l lastsourcepos,A5
0003754A <AmiBlitz3.ab2@20616>   LEA AJL_0_C25E,A0
0003754E <AmiBlitz3.ab2@20617> BRA.w JL_0_C4B4
00037554 <AmiBlitz3.ab2@20621>   LEA ptr_parameterstore,A0
00037558 <AmiBlitz3.ab2@20622>   BSR.w JL_0_C23A
0003755E <AmiBlitz3.ab2@20623>   JSR get1bytemain
00037562 <AmiBlitz3.ab2@20624>   BSR.w JL_0_CCA8
00037568 <AmiBlitz3.ab2@20625>   LEA namebuff2,A0
0003756C <AmiBlitz3.ab2@20626>   BSR.w JL_0_C23A
00037572 <AmiBlitz3.ab2@20627>   LEA AJL_0_C262,A0
00037574 <AmiBlitz3.ab2@20630>   LSL.w #2,D1
0003757A <AmiBlitz3.ab2@20631>   LEA CIF_branches,A1
0003757E <AmiBlitz3.ab2@20632>   MOVE.l $0(A1,D1.W),-(A7)
00037580 <AmiBlitz3.ab2@20633>   MOVEQ.l #-$01,D1
00037582 <AmiBlitz3.ab2@20636>   JSR (A0)
00037584 <AmiBlitz3.ab2@20637>   MOVEA.l (A7)+,A1
00037586 <AmiBlitz3.ab2@20640> JMP (A1)
0003758A <AmiBlitz3.ab2@20644>   BEQ.w JL_0_C4F6
0003758E <AmiBlitz3.ab2@20645> BRA.w JL_0_C4F4
00037592 <AmiBlitz3.ab2@20649>   BNE.w JL_0_C4F6
00037596 <AmiBlitz3.ab2@20650> BRA.w JL_0_C4F4
0003759A <AmiBlitz3.ab2@20654>   BLT.w JL_0_C4F6
0003759E <AmiBlitz3.ab2@20655> BRA.w JL_0_C4F4
000375A2 <AmiBlitz3.ab2@20659>   BLE.w JL_0_C4F6
000375A6 <AmiBlitz3.ab2@20660> BRA.w JL_0_C4F4
000375AA <AmiBlitz3.ab2@20664>   BGT.w JL_0_C4F6
000375AE <AmiBlitz3.ab2@20665> BRA.w JL_0_C4F4
000375B2 <AmiBlitz3.ab2@20669>   BGE.w JL_0_C4F6
000375B4 <AmiBlitz3.ab2@20672>   MOVEQ.l #$00,D1
000375BA <AmiBlitz3.ab2@20675>   MOVEA.l concomsp,A0
000375C0 <AmiBlitz3.ab2@20676>   MOVE.w skipcode,(A0)+
000375C6 <AmiBlitz3.ab2@20677>   MOVE.l A0,concomsp
000375CC <AmiBlitz3.ab2@20678>   MOVE.w D1,skipcode
000375D2 <AmiBlitz3.ab2@20679>   JSR get1bytemain
000375D6 <AmiBlitz3.ab2@20680>    BNE.w syntaxerr
000375DC <AmiBlitz3.ab2@20681> JMP bakup
000375E4 <AmiBlitz3.ab2@20685> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
000375E8 <AmiBlitz3.ab2@20686> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
000375EC <AmiBlitz3.ab2@20693>   MOVE.w #$FC17,D1
000375F2 <AmiBlitz3.ab2@20694>   JSR uselib
000375F8 <AmiBlitz3.ab2@20696>   JSR reget
000375FC <AmiBlitz3.ab2@20697>    BEQ.w do_Restore__resbeg
00037600 <AmiBlitz3.ab2@20698>   BSR.w JL_0_AE22                                          ;get label name!
00037604 <AmiBlitz3.ab2@20699>   MOVE.w rescode(PC),D1
00037608 <AmiBlitz3.ab2@20700>   BSR.w writeword
0003760E <AmiBlitz3.ab2@20701>   JSR addoff                                               ;add offset
00037612 <AmiBlitz3.ab2@20702>   MOVE.l $C(A2),D1
00037616 <AmiBlitz3.ab2@20703>   BSR.w writelong
0003761A <AmiBlitz3.ab2@20704>   MOVE.w rescode+6(PC),D1
0003761E <AmiBlitz3.ab2@20705>   BSR.w writeword
00037622 <AmiBlitz3.ab2@20706>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00037626 <AmiBlitz3.ab2@20707>   BEQ.w do_Restore__no
00037628 <AmiBlitz3.ab2@20709>   MOVEA.l D1,A1
0003762C <AmiBlitz3.ab2@20710>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0003762E <AmiBlitz3.ab2@20711> RTS
00037630 <AmiBlitz3.ab2@20716> RTS
00037634 <AmiBlitz3.ab2@20719>   MOVE.w #$CD00,D1
0003763A <AmiBlitz3.ab2@20720>   JSR Atokejsr
0003763E <AmiBlitz3.ab2@20721>   MOVE.l rescode2(PC),D1
00037644 <AmiBlitz3.ab2@20722> JMP writelong
00037648 <AmiBlitz3.ab2@20726>   MOVE.w #$FC17,D1
0003764E <AmiBlitz3.ab2@20727>   JSR uselib
00037654 <AmiBlitz3.ab2@20730>   MOVE.l dataget,D1
00037658 <AmiBlitz3.ab2@20731>   BSR.w writelong
0003765C <AmiBlitz3.ab2@20732>   BSR.w getparameter
00037660 <AmiBlitz3.ab2@20733>   BSR.w JL_0_8E3C
00037664 <AmiBlitz3.ab2@20734>   BSR.w calcvar
00037668 <AmiBlitz3.ab2@20735>   BTST #$E,D2
0003766C <AmiBlitz3.ab2@20736>    BEQ.w JL_0_C5A6
00037670 <AmiBlitz3.ab2@20737>   MOVE.b #$6,D2
00037672 <AmiBlitz3.ab2@20740>   TST.b D2
00037676 <AmiBlitz3.ab2@20741>    BEQ.w noleterr
0003767C <AmiBlitz3.ab2@20742>   TST.b debugmode
00037680 <AmiBlitz3.ab2@20743>    BEQ.w JL_0_C5D0
00037684 <AmiBlitz3.ab2@20744>   MOVE.w #$7000,D1
00037686 <AmiBlitz3.ab2@20745>   MOVE.b D2,D1
0003768A <AmiBlitz3.ab2@20746>   ANDI.b #$F,D1
0003768E <AmiBlitz3.ab2@20747>   BSR.w writeword
00037692 <AmiBlitz3.ab2@20748>   MOVE.w #$C310,D1
00037694 <AmiBlitz3.ab2@20749>   MOVE.w D2,-(A7)
00037698 <AmiBlitz3.ab2@20750>   BSR.w Atokejsr
0003769A <AmiBlitz3.ab2@20751>   MOVE.w (A7)+,D2
0003769E <AmiBlitz3.ab2@20754>   CMP.b #$7,D2
000376A2 <AmiBlitz3.ab2@20755>    BEQ.w JL_0_C684
000376A6 <AmiBlitz3.ab2@20756>   CMP.b #$1,D2
000376AA <AmiBlitz3.ab2@20757>    BNE.w JL_0_C62A
000376B0 <AmiBlitz3.ab2@20758>   LEA dataletb2,A0
000376B6 <AmiBlitz3.ab2@20759>   LEA dataletb2f,A1
000376BA <AmiBlitz3.ab2@20760>   BTST #$F,D2
000376BE <AmiBlitz3.ab2@20761>    BEQ.w JL_0_C5FC
000376C2 <AmiBlitz3.ab2@20762>   BSR.w pokecode
000376C6 <AmiBlitz3.ab2@20763> BRA.w JL_0_C668
000376CC <AmiBlitz3.ab2@20766>   LEA dataletb,A0
000376D2 <AmiBlitz3.ab2@20767>   LEA dataletbf,A1
000376D8 <AmiBlitz3.ab2@20768>   TST.w varmode
000376DC <AmiBlitz3.ab2@20769>    BEQ.w JL_0_C61E
000376E2 <AmiBlitz3.ab2@20770>   LEA dataletbl,A0
000376E8 <AmiBlitz3.ab2@20771>   LEA dataletblf,A1
000376EC <AmiBlitz3.ab2@20774>   MOVE.w D3,$4(A0)
000376F0 <AmiBlitz3.ab2@20775>   BSR.w pokecode
000376F4 <AmiBlitz3.ab2@20776> BRA.w JL_0_C668
000376FA <AmiBlitz3.ab2@20779>   LEA dataletw,A0
000376FE <AmiBlitz3.ab2@20780>   CMP.b #$3,D2
00037702 <AmiBlitz3.ab2@20781>    BCS.w JL_0_C63E
00037708 <AmiBlitz3.ab2@20782>   LEA dataletl,A0
0003770C <AmiBlitz3.ab2@20785>   BTST #$F,D2
00037710 <AmiBlitz3.ab2@20786>    BEQ.w JL_0_C652
00037714 <AmiBlitz3.ab2@20787>   MOVE.w $4(A0),D1
00037718 <AmiBlitz3.ab2@20788>    BSR.w writeword
0003771C <AmiBlitz3.ab2@20789> BRA.w JL_0_C668
00037722 <AmiBlitz3.ab2@20792>   TST.w varmode
00037726 <AmiBlitz3.ab2@20793>    BEQ.w JL_0_C65E
00037728 <AmiBlitz3.ab2@20794>   ADDQ.w #6,A0
0003772C <AmiBlitz3.ab2@20797>   MOVE.w D3,$2(A0)
0003772E <AmiBlitz3.ab2@20798>   MOVE.l (A0),D1
00037732 <AmiBlitz3.ab2@20799>   BSR.w writelong
00037738 <AmiBlitz3.ab2@20802>   MOVE.l dataput,D1
0003773C <AmiBlitz3.ab2@20803>    BSR.w writelong
00037740 <AmiBlitz3.ab2@20804>   CMP.w #$2C,D0
00037744 <AmiBlitz3.ab2@20805>    BEQ.w JL_0_C67C
00037746 <AmiBlitz3.ab2@20806> RTS
0003774C <AmiBlitz3.ab2@20809>   JSR get1bytemain
00037750 <AmiBlitz3.ab2@20810> BRA.w JL_0_C584
00037756 <AmiBlitz3.ab2@20814>   MOVE.w stlenget,D1
0003775A <AmiBlitz3.ab2@20815>    BSR.w writeword
0003775E <AmiBlitz3.ab2@20816>   BTST #$F,D2
00037762 <AmiBlitz3.ab2@20817>    BNE.w JL_0_C6C0
00037768 <AmiBlitz3.ab2@20818>   TST.w varmode
0003776C <AmiBlitz3.ab2@20819>    BEQ.w JL_0_C6B0
00037772 <AmiBlitz3.ab2@20820>   MOVE.w D3,leaampl+2
00037778 <AmiBlitz3.ab2@20821>   MOVE.l leaampl,D1
0003777C <AmiBlitz3.ab2@20822> BRA.w JL_0_C6BC
00037782 <AmiBlitz3.ab2@20825>   MOVE.w D3,leaamp+2
00037788 <AmiBlitz3.ab2@20826>   MOVE.l leaamp,D1
0003778C <AmiBlitz3.ab2@20829>   BSR.w writelong
00037790 <AmiBlitz3.ab2@20832>   MOVE.w #$C701,D1
00037796 <AmiBlitz3.ab2@20833>   MOVE.w varmode,D2
0003779A <AmiBlitz3.ab2@20834>    BEQ.w JL_0_C6D0
0003779C <AmiBlitz3.ab2@20835>   SUBQ.w #1,D1
000377A0 <AmiBlitz3.ab2@20838>   BSR.w Atokejsr
000377A8 <AmiBlitz3.ab2@20839>   MOVE.w #$FFFF,lasta6
000377AE <AmiBlitz3.ab2@20840>   LEA stalign,A0
000377B4 <AmiBlitz3.ab2@20841>   LEA stalignf,A1
000377B8 <AmiBlitz3.ab2@20842>   BSR.w pokecode
000377BC <AmiBlitz3.ab2@20843> BRA.w JL_0_C668
000377C0 <AmiBlitz3.ab2@20847>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
000377C4 <AmiBlitz3.ab2@20848>    BNE.w JL_0_C720
000377CA <AmiBlitz3.ab2@20849>   JSR get1bytemain
000377CE <AmiBlitz3.ab2@20850>   CMP.w #$77,D0
000377D2 <AmiBlitz3.ab2@20851>    BEQ.w JL_0_C71C
000377D6 <AmiBlitz3.ab2@20852>   CMP.w #$62,D0
000377DA <AmiBlitz3.ab2@20853>    BEQ.w JL_0_C718
000377DE <AmiBlitz3.ab2@20854>   CMP.w #"s",d0
000377E2 <AmiBlitz3.ab2@20855>   BEQ single3
000377E6 <AmiBlitz3.ab2@20856>   CMP.w #"d",d0
000377EA <AmiBlitz3.ab2@20857>   BEQ double3
000377EE <AmiBlitz3.ab2@20858>   CMP.w #$6C,D0
000377F2 <AmiBlitz3.ab2@20859>    BNE.w syntaxerr
000377F4 <AmiBlitz3.ab2@20860>   MOVEQ.l #$02,D1
000377F6 <AmiBlitz3.ab2@20861> RTS
000377FE <AmiBlitz3.ab2@20865>   MOVE.b #1,iee
00037800 <AmiBlitz3.ab2@20866>   MOVEQ.l #$3,d1
00037802 <AmiBlitz3.ab2@20867> RTS
0003780A <AmiBlitz3.ab2@20871>   MOVE.b #1,iee
0003780C <AmiBlitz3.ab2@20872>   MOVEQ.l #$4,d1
0003780E <AmiBlitz3.ab2@20873> RTS
00037810 <AmiBlitz3.ab2@20877>   MOVEQ.l #$00,D1
00037812 <AmiBlitz3.ab2@20878> RTS
00037814 <AmiBlitz3.ab2@20882>   MOVEQ.l #$01,D1
00037816 <AmiBlitz3.ab2@20883> RTS
00037818 <AmiBlitz3.ab2@20887>   MOVEQ.l #$01,D1
0003781E <AmiBlitz3.ab2@20888> JMP bakup
00037822 <AmiBlitz3.ab2@20892>   BSR.w JL_0_C6F0
00037824 <AmiBlitz3.ab2@20894>   MOVE.w D1,-(A7)
00037828 <AmiBlitz3.ab2@20895>    BSR.w AJL_0_BF6E
0003782C <AmiBlitz3.ab2@20896>   CMP.w #$2C,D0
00037830 <AmiBlitz3.ab2@20897>    BNE.w syntaxerr
00037832 <AmiBlitz3.ab2@20898>   MOVE.l D3,-(A7)
00037836 <AmiBlitz3.ab2@20899>    BSR.w AJL_0_BF6E
00037838 <AmiBlitz3.ab2@20900>   MOVE.l D3,D1
0003783A <AmiBlitz3.ab2@20901>   MOVE.l (A7)+,D3
0003783C <AmiBlitz3.ab2@20902>   MOVE.w (A7)+,D2
00037840 <AmiBlitz3.ab2@20903>    BEQ.w JL_0_C774
00037844 <AmiBlitz3.ab2@20907>   CMP.w #$1,D2
00037848 <AmiBlitz3.ab2@20908>    BEQ.w JL_0_C768
0003784A <AmiBlitz3.ab2@20911>   SWAP D1
0003784E <AmiBlitz3.ab2@20912>    BSR.w writeword
00037850 <AmiBlitz3.ab2@20913>   SWAP D1
00037854 <AmiBlitz3.ab2@20914>    BSR.w writeword
00037856 <AmiBlitz3.ab2@20915>   SUBQ.l #1,D3
0003785A <AmiBlitz3.ab2@20916>    BNE.w JL_0_C754
0003785C <AmiBlitz3.ab2@20917> RTS
00037860 <AmiBlitz3.ab2@20920>    BSR.w writeword
00037862 <AmiBlitz3.ab2@20921>   SUBQ.l #1,D3
00037866 <AmiBlitz3.ab2@20922>    BNE.w JL_0_C768
00037868 <AmiBlitz3.ab2@20923> RTS
0003786C <AmiBlitz3.ab2@20926>    BSR.w writebyte
0003786E <AmiBlitz3.ab2@20927>   SUBQ.l #1,D3
00037872 <AmiBlitz3.ab2@20928>    BNE.w JL_0_C774
00037874 <AmiBlitz3.ab2@20929> RTS
00037878 <AmiBlitz3.ab2@20933>   BSR.w JL_0_C6F0                                          ;definestorage
0003787A <AmiBlitz3.ab2@20934>   MOVE.w D1,-(A7)
0003787E <AmiBlitz3.ab2@20935>   BSR.w AJL_0_BF6E
00037880 <AmiBlitz3.ab2@20936>   MOVE.w (A7)+,D1
00037882 <AmiBlitz3.ab2@20937>   LSL.l D1,D3
00037884 <AmiBlitz3.ab2@20938>   MOVE.l d3,d0
00037888 <AmiBlitz3.ab2@20939>   BEQ 'll5
0003788A <AmiBlitz3.ab2@20940>   MOVEQ #0,d1
00037890 <AmiBlitz3.ab2@20943>     JSR writebyte
00037892 <AmiBlitz3.ab2@20944>     SUBQ.l #1,d3
00037896 <AmiBlitz3.ab2@20945>   BNE.s 'll10
00037898 <AmiBlitz3.ab2@20948> RTS
0003789A <AmiBlitz3.ab2@20952>   MOVE.w D0,-(A7)
000378A0 <AmiBlitz3.ab2@20953>   LEA dummyasm,A0
000378A6 <AmiBlitz3.ab2@20954>   MOVEA.l destpointer,A1
000378B0 <AmiBlitz3.ab2@20955>   MOVE.w asmlen2,asmlen
000378B6 <AmiBlitz3.ab2@20956>   JSR insasm
000378B8 <AmiBlitz3.ab2@20957>   MOVE.w (A7)+,D0
000378BA <AmiBlitz3.ab2@20958> RTS
000378BE <AmiBlitz3.ab2@20962>   BSR.w JL_0_C6F0
000378C8 <AmiBlitz3.ab2@20964>   MOVE.l #ptr_parameterstore,asmbuff
000378CA <AmiBlitz3.ab2@20965>   TST.w D1
000378CE <AmiBlitz3.ab2@20966>    BEQ.w JL_0_C7EE
000378D2 <AmiBlitz3.ab2@20967>   CMP.w #$1,D1
000378D6 <AmiBlitz3.ab2@20968>    BEQ.w JL_0_C844
000378DA <AmiBlitz3.ab2@20969>   CMP.w #$2,d1
000378DE <AmiBlitz3.ab2@20970>    BEQ long
000378E2 <AmiBlitz3.ab2@20971>   CMP.w #$3,d1
000378E6 <AmiBlitz3.ab2@20972>    BEQ single
000378E8 <AmiBlitz3.ab2@20973>    MOVEQ.l #$0d,D3
000378EE <AmiBlitz3.ab2@20979>    JSR asmconst
000378F2 <AmiBlitz3.ab2@20980>    BSR.w JL_0_C796
000378F6 <AmiBlitz3.ab2@20981>    BSR.w writelong
000378FA <AmiBlitz3.ab2@20982>    BSR   writelong
000378FE <AmiBlitz3.ab2@20983>   CMP.w #$2C,D0
00037902 <AmiBlitz3.ab2@20984>    BEQ.w JL_0_C7D8b
00037904 <AmiBlitz3.ab2@20985> RTS
00037906 <AmiBlitz3.ab2@20989>   MOVEQ.l #$0B,D3
0003790E <AmiBlitz3.ab2@20993>   MOVE.b #1,_dcb
00037914 <AmiBlitz3.ab2@20996>   JSR asmconst
0003791A <AmiBlitz3.ab2@20997>   CLR.b _dcb
0003791E <AmiBlitz3.ab2@20998>   BSR.w JL_0_C796
00037922 <AmiBlitz3.ab2@20999>   BSR writebyte
00037926 <AmiBlitz3.ab2@21000>   BSR writebyte
0003792A <AmiBlitz3.ab2@21001>   BSR writebyte                                            ;long
0003792E <AmiBlitz3.ab2@21002>   BSR writebyte
00037932 <AmiBlitz3.ab2@21003>   CMP.w #$2C,D0
00037936 <AmiBlitz3.ab2@21004>    BEQ.w JL_0_C7D8
00037938 <AmiBlitz3.ab2@21005> RTS
0003793A <AmiBlitz3.ab2@21009>   MOVEQ.l #$0c,D3
00037942 <AmiBlitz3.ab2@21013>   MOVE.b #1,_dcb
00037948 <AmiBlitz3.ab2@21016>   JSR asmconst
0003794E <AmiBlitz3.ab2@21017>   CLR.b _dcb
00037952 <AmiBlitz3.ab2@21018>   BSR.w JL_0_C796
00037956 <AmiBlitz3.ab2@21019>   BSR.w writebyte
0003795A <AmiBlitz3.ab2@21020>   BSR.w writebyte
0003795E <AmiBlitz3.ab2@21021>   BSR.w writebyte
00037962 <AmiBlitz3.ab2@21022>   BSR.w writebyte
00037966 <AmiBlitz3.ab2@21023>   CMP.w #$2C,D0
0003796A <AmiBlitz3.ab2@21024>    BEQ.w JL_0_C7D8a
0003796C <AmiBlitz3.ab2@21025> RTS
0003796E <AmiBlitz3.ab2@21030>   MOVEQ.l #$11,D3
00037974 <AmiBlitz3.ab2@21033>   JSR get1bytemain
00037978 <AmiBlitz3.ab2@21034>   CMP.w #$22,D0
0003797C <AmiBlitz3.ab2@21035>    BNE.w JL_0_C81E
0003797E <AmiBlitz3.ab2@21038>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00037982 <AmiBlitz3.ab2@21039>    BEQ.w syntaxerr
00037986 <AmiBlitz3.ab2@21040>   CMP.w #$22,D0
0003798A <AmiBlitz3.ab2@21041>    BEQ.w JL_0_C816
0003798E <AmiBlitz3.ab2@21042>   CMP.b #"\",d0
00037992 <AmiBlitz3.ab2@21043>    BNE 'n1
00037996 <AmiBlitz3.ab2@21044>   CMP.b #"\",(a5)
0003799A <AmiBlitz3.ab2@21045>    BEQ 'do1
0003799C <AmiBlitz3.ab2@21048>   MOVE.w D0,D1
000379A0 <AmiBlitz3.ab2@21049>   BSR.w writebyte
000379A4 <AmiBlitz3.ab2@21050> BRA.w JL_0_C7FC
000379AC <AmiBlitz3.ab2@21053>   CMP.l #"__DA",1(a5)
000379B0 <AmiBlitz3.ab2@21054>    BNE 'nodate1
000379B8 <AmiBlitz3.ab2@21055>   CMP.l #"TE__",5(a5)
000379BC <AmiBlitz3.ab2@21056>    BEQ 'c1
000379C4 <AmiBlitz3.ab2@21057>   CMP.l #"TE_G",5(a5)
000379C8 <AmiBlitz3.ab2@21058>    BNE 'nodate1
000379D0 <AmiBlitz3.ab2@21059>   CMP.l #"ER__",9(a5)
000379D4 <AmiBlitz3.ab2@21060>    BNE 'nodate1
000379DA <AmiBlitz3.ab2@21061>   JSR compiledatedc_ger
000379DE <AmiBlitz3.ab2@21062> BRA 'n1
000379E4 <AmiBlitz3.ab2@21065>   JSR compiledatedc
000379E8 <AmiBlitz3.ab2@21066> BRA 'n1
000379F0 <AmiBlitz3.ab2@21069>   CMP.l #"__VE",1(a5)
000379F4 <AmiBlitz3.ab2@21070>    BNE 'n1
000379FA <AmiBlitz3.ab2@21071>   CMP.w #"R_",5(a5)
000379FE <AmiBlitz3.ab2@21072>    BNE 'n1
00037A04 <AmiBlitz3.ab2@21073>   JSR version_string_dc
00037A08 <AmiBlitz3.ab2@21074> BRA.w JL_0_C7FC
00037A0E <AmiBlitz3.ab2@21078>   CLR.w instringon
00037A14 <AmiBlitz3.ab2@21079>   JSR get1bytemain
00037A18 <AmiBlitz3.ab2@21080> BRA.w JL_0_C83A
00037A22 <AmiBlitz3.ab2@21085>    MOVE.w oldqflag,instringon
00037A28 <AmiBlitz3.ab2@21086>   MOVEA.l lastsourcepos,A5
00037A2E <AmiBlitz3.ab2@21087>    JSR asmconst
00037A34 <AmiBlitz3.ab2@21088>   SUBQ.l #1,destpointer
00037A38 <AmiBlitz3.ab2@21089>    BSR.w JL_0_C796
00037A3E <AmiBlitz3.ab2@21090>   ADDQ.l #1,destpointer
00037A42 <AmiBlitz3.ab2@21091>    BSR.w writebyte
00037A46 <AmiBlitz3.ab2@21094>   CMP.w #$2C,D0
00037A4A <AmiBlitz3.ab2@21095>    BEQ.w JL_0_C7F0
00037A4C <AmiBlitz3.ab2@21096> RTS
00037A4E <AmiBlitz3.ab2@21100>   MOVEQ.l #$10,D3
00037A56 <AmiBlitz3.ab2@21106>   MOVE.b #1,_dcb
00037A5C <AmiBlitz3.ab2@21107>   JSR asmconst
00037A62 <AmiBlitz3.ab2@21108>   CLR.b _dcb
00037A66 <AmiBlitz3.ab2@21109>   BSR.w JL_0_C796
00037A6A <AmiBlitz3.ab2@21110>   BSR.w writebyte
00037A6E <AmiBlitz3.ab2@21111>   BSR.w writebyte
00037A72 <AmiBlitz3.ab2@21112>   CMP.w #$2C,D0
00037A76 <AmiBlitz3.ab2@21113>    BEQ.w JL_0_C84A
00037A78 <AmiBlitz3.ab2@21114> RTS
00037A7E <AmiBlitz3.ab2@21118>   ADDQ.l #3,destpointer
00037A86 <AmiBlitz3.ab2@21119>   ANDI.w #$FFFC,destpointer+2
00037A88 <AmiBlitz3.ab2@21120> RTS
00037A8E <AmiBlitz3.ab2@21124>   ADDQ.l #7,destpointer
00037A96 <AmiBlitz3.ab2@21125>   ANDI.w #$FFF8,destpointer+2
00037A98 <AmiBlitz3.ab2@21126> RTS
00037A9E <AmiBlitz3.ab2@21130>   ADDQ.l #1,destpointer                                    ;even
00037AA6 <AmiBlitz3.ab2@21131>   BCLR #$0,destpointer+3
00037AA8 <AmiBlitz3.ab2@21132> RTS
00037AAA <AmiBlitz3.ab2@21135> datasize: Ds.w 1
00037AB0 <AmiBlitz3.ab2@21145>   TST.b debugmode
00037AB4 <AmiBlitz3.ab2@21146>   BEQ.w pdt__skip
00037AB8 <AmiBlitz3.ab2@21147>   MOVE.w #$4420,D0                                         ;'D '
00037ABC <AmiBlitz3.ab2@21148>   MOVE.b datasize+1(PC),D0
00037AC0 <AmiBlitz3.ab2@21149> BRA.w JL_0_C1E6
00037AC2 <AmiBlitz3.ab2@21152> RTS
00037AC6 <AmiBlitz3.ab2@21156>   MOVE.w #$FC17,D1
00037ACC <AmiBlitz3.ab2@21157>    JSR uselib
00037AD6 <AmiBlitz3.ab2@21159>    MOVE.w oldqflag,instringon
00037ADC <AmiBlitz3.ab2@21160>   MOVEA.l lastsourcepos,A5
00037AE2 <AmiBlitz3.ab2@21161>    JSR AJL_0_498A
00037AE8 <AmiBlitz3.ab2@21162>   MOVE.w D1,datasize
00037AEC <AmiBlitz3.ab2@21163>   CMP.w #$7,D1
00037AF0 <AmiBlitz3.ab2@21164>    BEQ.w JL_0_C944
00037AF2 <AmiBlitz3.ab2@21165>   MOVE.w D1,-(A7)
00037AF6 <AmiBlitz3.ab2@21168>   BSR.w pdt
00037AF8 <AmiBlitz3.ab2@21169>   MOVE.w (A7),D2
00037AFC <AmiBlitz3.ab2@21170>    BSR.w JL_0_B1D8
00037AFE <AmiBlitz3.ab2@21171>   CMP.w (A7),D2                                            ;datamode
00037B02 <AmiBlitz3.ab2@21172>    BEQ.w JL_0_C920
00037B04 <AmiBlitz3.ab2@21173>   MOVE.w D2,D1
00037B06 <AmiBlitz3.ab2@21174>   MOVE.w (A7),D2
00037B0A <AmiBlitz3.ab2@21175>   CMP.w #$2,D2
00037B0E <AmiBlitz3.ab2@21176>    BNE.w JL_0_C8FE
00037B12 <AmiBlitz3.ab2@21177>   CMP.w #$3,D1
00037B16 <AmiBlitz3.ab2@21178>    BNE.w baddaterr
00037B1C <AmiBlitz3.ab2@21179>   CMP.l #$10000,D3
00037B20 <AmiBlitz3.ab2@21180>    BCC.w baddaterr
00037B24 <AmiBlitz3.ab2@21181> BRA.w JL_0_C920
00037B28 <AmiBlitz3.ab2@21184>   CMP.w #$1,D2
00037B2C <AmiBlitz3.ab2@21185>    BNE.w JL_0_C91C
00037B30 <AmiBlitz3.ab2@21186>   CMP.w #$2,D1
00037B34 <AmiBlitz3.ab2@21187>    BNE.w baddaterr
00037B3A <AmiBlitz3.ab2@21188>   CMP.l #$100,D3
00037B3E <AmiBlitz3.ab2@21189>    BCC.w baddaterr
00037B42 <AmiBlitz3.ab2@21190> BRA.w JL_0_C920
00037B46 <AmiBlitz3.ab2@21193> BRA.w baddaterr
00037B4A <AmiBlitz3.ab2@21196>   CMP.w #$3,D2
00037B4E <AmiBlitz3.ab2@21197>   BCC.w JL_0_C930
00037B52 <AmiBlitz3.ab2@21198>   BSR.w JL_0_C1E6
00037B56 <AmiBlitz3.ab2@21199> BRA.w JL_0_C934
00037B5C <AmiBlitz3.ab2@21202>   TST.b iee
00037B60 <AmiBlitz3.ab2@21203>   BEQ 'old
00037B64 <AmiBlitz3.ab2@21204>   CMP.b #5,d2
00037B68 <AmiBlitz3.ab2@21205>   BNE 'old
00037B6C <AmiBlitz3.ab2@21206>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00037B70 <AmiBlitz3.ab2@21210>   BSR.w JL_0_C1DE                                          ;write data >3
00037B76 <AmiBlitz3.ab2@21213>   JSR reget
00037B7A <AmiBlitz3.ab2@21214>   CMP.w #$2C,D0
00037B7E <AmiBlitz3.ab2@21215>    BEQ.w JL_0_C8CC
00037B80 <AmiBlitz3.ab2@21216>   ADDQ.w #2,A7
00037B82 <AmiBlitz3.ab2@21217> RTS
00037B86 <AmiBlitz3.ab2@21220>    BSR.w pdt
00037B8C <AmiBlitz3.ab2@21221>   MOVE.l data2,-(A7)
00037B90 <AmiBlitz3.ab2@21222>    BSR.w JL_0_C1DE
00037B92 <AmiBlitz3.ab2@21223>   MOVEQ.l #$00,D1
00037B98 <AmiBlitz3.ab2@21224>    JSR get1bytemain
00037B9C <AmiBlitz3.ab2@21225>    BEQ.w JL_0_C9A6
00037BA0 <AmiBlitz3.ab2@21226>   CMP.w #$22,D0
00037BA4 <AmiBlitz3.ab2@21227>    BEQ.w JL_0_C988
00037BA8 <AmiBlitz3.ab2@21228>   CMP.w #$2C,D0
00037BAC <AmiBlitz3.ab2@21229>    BEQ.w JL_0_C9A6
00037BB0 <AmiBlitz3.ab2@21232>    BSR.w JL_0_C210
00037BB2 <AmiBlitz3.ab2@21233>   ADDQ.w #1,D1
00037BB8 <AmiBlitz3.ab2@21234>    JSR getchar
00037BBA <AmiBlitz3.ab2@21235>   TST.w D0
00037BBE <AmiBlitz3.ab2@21236>    BEQ.w JL_0_C9A6
00037BC2 <AmiBlitz3.ab2@21237>   CMP.w #$2C,D0
00037BC6 <AmiBlitz3.ab2@21238>    BEQ.w JL_0_C9A6
00037BCA <AmiBlitz3.ab2@21239> BRA.w JL_0_C96C
00037BCC <AmiBlitz3.ab2@21243>    MOVEQ #0,d0
00037BCE <AmiBlitz3.ab2@21244>    MOVE.b (a5)+,d0
00037BD2 <AmiBlitz3.ab2@21245>    BEQ.w notqerr2
00037BD6 <AmiBlitz3.ab2@21246>   CMP.w #$22,D0
00037BDA <AmiBlitz3.ab2@21247>    BEQ.w JL_0_C9A2
00037BDE <AmiBlitz3.ab2@21248>    BSR.w JL_0_C210
00037BE0 <AmiBlitz3.ab2@21249>   ADDQ.w #1,D1
00037BE4 <AmiBlitz3.ab2@21250> BRA.w JL_0_C988
00037BEA <AmiBlitz3.ab2@21251> notqerr2 JMP notqerr
00037BF0 <AmiBlitz3.ab2@21253>   CLR.w instringon
00037BF6 <AmiBlitz3.ab2@21254>   JSR get1bytemain
00037BF8 <AmiBlitz3.ab2@21257>   MOVEA.l (A7)+,A0
00037BFE <AmiBlitz3.ab2@21258>   MOVE.w dontwrite,D2
00037C02 <AmiBlitz3.ab2@21259>    BNE.w JL_0_C9B4
00037C04 <AmiBlitz3.ab2@21260>   MOVE.l D1,(A0)
00037C0A <AmiBlitz3.ab2@21263>   ADDQ.l #1,data2
00037C12 <AmiBlitz3.ab2@21264>   BCLR #$0,data2+3
00037C16 <AmiBlitz3.ab2@21265>   CMP.w #$2C,D0
00037C1A <AmiBlitz3.ab2@21266>    BEQ.w JL_0_C944
00037C1C <AmiBlitz3.ab2@21267> RTS
00037C22 <AmiBlitz3.ab2@21271> JMP vardeclareerr
00037C28 <AmiBlitz3.ab2@21274>   MOVE.w proceduremode,D1                                  ;doshared
00037C2C <AmiBlitz3.ab2@21276>   BNE.w 'l1
00037C2E <AmiBlitz3.ab2@21277>   MOVE.w D1,-(A7)
00037C34 <AmiBlitz3.ab2@21278>   CLR.w proceduremode
00037C3A <AmiBlitz3.ab2@21281>   LEA varbase,a2
00037C3E <AmiBlitz3.ab2@21282>   BSR.w getparameter
00037C40 <AmiBlitz3.ab2@21283>   MOVE.w d2,-(a7)
00037C46 <AmiBlitz3.ab2@21284>    JSR findvariable
00037C4A <AmiBlitz3.ab2@21285>    BEQ 'checkdim
00037C50 <AmiBlitz3.ab2@21286>    LEA sharebase,a2
00037C52 <AmiBlitz3.ab2@21287>    MOVEQ #$f+4,d7
00037C56 <AmiBlitz3.ab2@21288>    BSR.w findlab                                         ;find var
00037C5A <AmiBlitz3.ab2@21289>    BEQ.b dupsherr
00037C5E <AmiBlitz3.ab2@21290>    BSR addlabel
00037C62 <AmiBlitz3.ab2@21291>    CMP.b #".",d0
00037C66 <AmiBlitz3.ab2@21292>    BNE JUMP_vardeclareerr
00037C68 <AmiBlitz3.ab2@21293>    MOVE.l a2,a3
00037C6E <AmiBlitz3.ab2@21294>    JSR JL_0_8EB8b
00037C70 <AmiBlitz3.ab2@21325>   MOVE.w (a7)+,d2
00037C74 <AmiBlitz3.ab2@21326>    CMP.b #",",d0
00037C78 <AmiBlitz3.ab2@21327>    BNE 'ret
00037C7E <AmiBlitz3.ab2@21328>    JSR get1bytemain
00037C82 <AmiBlitz3.ab2@21329> BRA 'again2
00037C88 <AmiBlitz3.ab2@21332>   MOVE.w (A7)+,proceduremode
00037C8A <AmiBlitz3.ab2@21333> RTS
00037C90 <AmiBlitz3.ab2@21340>    CMP.w #2,6(a2)
00037C94 <AmiBlitz3.ab2@21341>    BEQ 'do
00037C9A <AmiBlitz3.ab2@21342>    CMP.w #$102,6(a2)
00037C9E <AmiBlitz3.ab2@21343>    BEQ 'do
00037CA4 <AmiBlitz3.ab2@21344> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00037CAA <AmiBlitz3.ab2@21347>   LEA varbase,a0
00037CAC <AmiBlitz3.ab2@21350>   MOVE.l (A0),D0                                           ;find label
00037CB0 <AmiBlitz3.ab2@21351>    BEQ.b 'z1
00037CB2 <AmiBlitz3.ab2@21352>    CMP.l d0,a2
00037CB6 <AmiBlitz3.ab2@21353>    BEQ 'z1
00037CB8 <AmiBlitz3.ab2@21354>    MOVE.l d0,a0
00037CBC <AmiBlitz3.ab2@21355> BRA 'm1
00037CBE <AmiBlitz3.ab2@21358>   MOVE.l (a2),d1
00037CC0 <AmiBlitz3.ab2@21359>     MOVE.l d1,(a0)
00037CC2 <AmiBlitz3.ab2@21360>     CLR.l (a2)
00037CC8 <AmiBlitz3.ab2@21361>     LEA sharebase,a0
00037CCA <AmiBlitz3.ab2@21362>     MOVE.l (a0),(a2)
00037CCC <AmiBlitz3.ab2@21363>     MOVE.l a2,(a0)
00037CD2 <AmiBlitz3.ab2@21364>     JSR get1bytemain
00037CD8 <AmiBlitz3.ab2@21365>     JSR get1bytemain
00037CDC <AmiBlitz3.ab2@21366> BRA 'domore
00037CE4 <AmiBlitz3.ab2@21369>   MOVE.b #1,nowdeclare
00037CE6 <AmiBlitz3.ab2@21370>   MOVE.w D1,-(A7)
00037CEC <AmiBlitz3.ab2@21371>   CLR.w proceduremode
00037CF0 <AmiBlitz3.ab2@21374>    BSR.w getparameter
00037CF2 <AmiBlitz3.ab2@21375>   MOVE.w D2,-(A7)
00037CF8 <AmiBlitz3.ab2@21376>   LEA firstglob,A2
00037CFC <AmiBlitz3.ab2@21377>    BSR.w findvariable2
00037D00 <AmiBlitz3.ab2@21378>    BNE.b JL_0_CA06
00037D06 <AmiBlitz3.ab2@21381>   MOVE.b flagmask+1,D1
00037D0A <AmiBlitz3.ab2@21382>   MOVE.b $7(A2),D3
00037D0C <AmiBlitz3.ab2@21383>   EOR.b D3,D1
00037D10 <AmiBlitz3.ab2@21384>    BEQ.w dupsherr
00037D14 <AmiBlitz3.ab2@21385>    BSR.w findlab
00037D18 <AmiBlitz3.ab2@21386>    BEQ.b JL_0_C9F0
00037D1C <AmiBlitz3.ab2@21389>    BSR.w addlabel
00037D1E <AmiBlitz3.ab2@21390>   MOVE.w (A7)+,D2
00037D20 <AmiBlitz3.ab2@21391>   MOVE.l A2,-(A7)
00037D24 <AmiBlitz3.ab2@21392>    BSR.w JL_0_8E3C
00037D26 <AmiBlitz3.ab2@21393>   MOVEA.l (A7)+,A2
00037D28 <AmiBlitz3.ab2@21394>   MOVEQ.l #$04,D1
00037D2A <AmiBlitz3.ab2@21395>   ADDQ.w #4,A2
00037D2C <AmiBlitz3.ab2@21396>   ADDQ.w #4,A3
00037D2E <AmiBlitz3.ab2@21399>     MOVE.w (A3)+,(A2)+
00037D32 <AmiBlitz3.ab2@21400>   DBF D1,JL_0_CA1A
00037D3A <AmiBlitz3.ab2@21402>   BTST #$1,flagmask+1
00037D3E <AmiBlitz3.ab2@21403>    BEQ.w JL_0_CA3C
00037D44 <AmiBlitz3.ab2@21404>    JSR get1bytemain
00037D48 <AmiBlitz3.ab2@21405>   CMP.w #$29,D0
00037D4C <AmiBlitz3.ab2@21406>    BNE.w syntaxerrc
00037D52 <AmiBlitz3.ab2@21407>    JSR get1bytemain
00037D56 <AmiBlitz3.ab2@21410>    CMP.w #$2C,D0
00037D5A <AmiBlitz3.ab2@21411>    BNE.w JL_0_CA4C
00037D60 <AmiBlitz3.ab2@21412>    JSR get1bytemain
00037D64 <AmiBlitz3.ab2@21413> BRA.w JL_0_C9DE
00037D6A <AmiBlitz3.ab2@21416>   MOVE.w (A7)+,proceduremode
00037D6C <AmiBlitz3.ab2@21417> RTS
00037D72 <AmiBlitz3.ab2@21419> syntaxerrc JMP syntaxerr
00037D76 <AmiBlitz3.ab2@21422>    BSR.w JL_0_C05C
00037D7C <AmiBlitz3.ab2@21423>    JSR check_incdir                                        ; ergebnis in d2
00037D82 <AmiBlitz3.ab2@21425>    LEA ptr_parameterstore,a1
00037D84 <AmiBlitz3.ab2@21426>    MOVE.l d2,-(a7)
00037D8A <AmiBlitz3.ab2@21427>    LEA includetemp,a0                                      ; filename in includetemp packen
00037D8C <AmiBlitz3.ab2@21430>      MOVE.b (a1)+,(a0)+
00037D90 <AmiBlitz3.ab2@21431>    BNE 'l4
00037D96 <AmiBlitz3.ab2@21433>    LEA ptr_parameterstore,a1
00037D98 <AmiBlitz3.ab2@21434>    MOVE.l a1,a0
00037D9A <AmiBlitz3.ab2@21437>     TST.b (a0)+
00037D9E <AmiBlitz3.ab2@21438>    BNE 'l1
00037DA0 <AmiBlitz3.ab2@21441>      MOVE.b -(a0),d0
00037DA4 <AmiBlitz3.ab2@21442>      CMP.b #":",d0
00037DA8 <AmiBlitz3.ab2@21443>       BEQ 'out
00037DAC <AmiBlitz3.ab2@21444>      CMP.b #"/",d0
00037DB0 <AmiBlitz3.ab2@21445>       BEQ 'out
00037DB2 <AmiBlitz3.ab2@21446>      CMP.l a1,a0
00037DB6 <AmiBlitz3.ab2@21447>       BEQ 'out2
00037DBA <AmiBlitz3.ab2@21448> BRA 'l2
00037DBC <AmiBlitz3.ab2@21451>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00037DBE <AmiBlitz3.ab2@21454>    MOVEQ.l #-$01,D2
00037DC0 <AmiBlitz3.ab2@21457>      ADDQ.w #1,D2
00037DC2 <AmiBlitz3.ab2@21458>      MOVE.b (a0)+,(a1)+
00037DC6 <AmiBlitz3.ab2@21459>    BNE 'l3
00037DC8 <AmiBlitz3.ab2@21460>    CLR.b (a1)+
00037DCE <AmiBlitz3.ab2@21462>    LEA ptr_parameterstore,a1
00037DD2 <AmiBlitz3.ab2@21463>    BSR.w findxinc                                         ;find include
00037DD6 <AmiBlitz3.ab2@21464>     BEQ.w 'outb
00037DD8 <AmiBlitz3.ab2@21466>    MOVE.w D2,-(A7)
00037DDC <AmiBlitz3.ab2@21467>    BSR.w addlabel
00037DDE <AmiBlitz3.ab2@21468>    MOVE.w (A7)+,D2
00037DE4 <AmiBlitz3.ab2@21470>    LEA ptr_parameterstore,a1
00037DEA <AmiBlitz3.ab2@21471>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00037DEC <AmiBlitz3.ab2@21474>     MOVE.b (a0)+,(a1)+
00037DF0 <AmiBlitz3.ab2@21475>    BNE 'l4b
00037DF2 <AmiBlitz3.ab2@21477>    MOVE.l (a7)+,d2
00037DF8 <AmiBlitz3.ab2@21478>    LEA ptr_parameterstore,a1
00037DFC <AmiBlitz3.ab2@21479> BRA.w JL_0_CB18
00037E02 <AmiBlitz3.ab2@21482>    LEA ptr_parameterstore,a1
00037E08 <AmiBlitz3.ab2@21483>    LEA includetemp,a0
00037E0A <AmiBlitz3.ab2@21486>     MOVE.b (a0)+,(a1)+
00037E0E <AmiBlitz3.ab2@21487>    BNE 'l4b2
00037E10 <AmiBlitz3.ab2@21489>    MOVE.l (a7)+,d2
00037E16 <AmiBlitz3.ab2@21490>    LEA ptr_parameterstore,a1
00037E18 <AmiBlitz3.ab2@21493> RTS
00037E1C <AmiBlitz3.ab2@21497>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
00037E22 <AmiBlitz3.ab2@21499>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00037E28 <AmiBlitz3.ab2@21501>   MOVEA.l _dosbase,A6
00037E2A <AmiBlitz3.ab2@21502>   MOVE.l D0,D7                                                 ; store Lockpointer
00037E2E <AmiBlitz3.ab2@21503>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00037E30 <AmiBlitz3.ab2@21504>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00037E36 <AmiBlitz3.ab2@21505>   MOVE.l ptr_macrobuffer_begin,D2
00037E3A <AmiBlitz3.ab2@21506>    JSR _Examine(A6)
00037E40 <AmiBlitz3.ab2@21507>   MOVEA.l ptr_macrobuffer_begin,A0
00037E44 <AmiBlitz3.ab2@21508>   MOVE.l $4(A0),D0
00037E48 <AmiBlitz3.ab2@21509>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00037E4C <AmiBlitz3.ab2@21510>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
00037E4E <AmiBlitz3.ab2@21511>   MOVE.l D7,D1                                                 ; begin unlock the file
00037E52 <AmiBlitz3.ab2@21512>    JSR _UnLock(A6)
00037E58 <AmiBlitz3.ab2@21514>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00037E5E <AmiBlitz3.ab2@21515>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00037E62 <AmiBlitz3.ab2@21516>    JSR _Open(A6)
00037E64 <AmiBlitz3.ab2@21517>   MOVE.l D0,D7
00037E68 <AmiBlitz3.ab2@21518>    BEQ.w error_cant_open_include
00037E6E <AmiBlitz3.ab2@21519>   MOVE.l destpointer,D0
00037E70 <AmiBlitz3.ab2@21520>   ADD.l D3,D0
00037E76 <AmiBlitz3.ab2@21521>   CMP.l destbufferend,D0
00037E7A <AmiBlitz3.ab2@21522>    BHI.w JL_0_CAF6
00037E80 <AmiBlitz3.ab2@21523>   MOVE.l destpointer,D2
00037E82 <AmiBlitz3.ab2@21524>   MOVE.l D7,D1
00037E86 <AmiBlitz3.ab2@21525>    JSR _Read(A6)
00037E8C <AmiBlitz3.ab2@21526>   CMP.l #$FFFFFFFF,D0
00037E90 <AmiBlitz3.ab2@21527>    BEQ.w error_reading_file
00037E96 <AmiBlitz3.ab2@21528>   ADD.l D0,destpointer
00037E9A <AmiBlitz3.ab2@21529> BRA.w JL_0_CB04
00037EA2 <AmiBlitz3.ab2@21532>   MOVE.w #$FFFF,dontwrite
00037EA8 <AmiBlitz3.ab2@21533>   MOVE.l D0,destpointer
00037EAA <AmiBlitz3.ab2@21536>   MOVE.l D7,D1
00037EAE <AmiBlitz3.ab2@21537> JMP _Close(A6)
00037EB4 <AmiBlitz3.ab2@21541> JMP illdirerr
00037EBA <AmiBlitz3.ab2@21544>   TST.w dirmode                                            ;include  open
00037EBE <AmiBlitz3.ab2@21545>    BNE.w JUMP_illdirerr
00037EC2 <AmiBlitz3.ab2@21546>   BSR.w JL_0_C05C
00037EC8 <AmiBlitz3.ab2@21547>   JSR check_incdir
00037ECC <AmiBlitz3.ab2@21550>   BSR.w findconstant
00037ED0 <AmiBlitz3.ab2@21551>    BEQ.w alincerr
00037ED6 <AmiBlitz3.ab2@21553>   LEA constantbase,A2
00037EDA <AmiBlitz3.ab2@21554>   BSR.w addhere2
00037EDE <AmiBlitz3.ab2@21555>   CLR.w $C(A2)
00037EE2 <AmiBlitz3.ab2@21556>   CLR.l $4(A2)
00037EE8 <AmiBlitz3.ab2@21558>   MOVE.l #ptr_parameterstore,D1
00037EEA <AmiBlitz3.ab2@21559>   MOVE.l d1,a0
00037EF0 <AmiBlitz3.ab2@21560>   LEA includetemp2,a1
00037EF2 <AmiBlitz3.ab2@21563>     MOVE.b (a0)+,(a1)+
00037EF6 <AmiBlitz3.ab2@21564>   BNE 'l1
00037EFC <AmiBlitz3.ab2@21565>   JSR save_includename
00037F06 <AmiBlitz3.ab2@21566>   MOVE.l #0,include_process
00037F0E <AmiBlitz3.ab2@21568>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00037F12 <AmiBlitz3.ab2@21569>   BEQ 'ok
00037F1A <AmiBlitz3.ab2@21570>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00037F1E <AmiBlitz3.ab2@21571>   BEQ 'ok_tokenize
00037F26 <AmiBlitz3.ab2@21572>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00037F2A <AmiBlitz3.ab2@21573>   BEQ 'ok_tokenize
00037F32 <AmiBlitz3.ab2@21574>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00037F36 <AmiBlitz3.ab2@21575>   BEQ 'ok
00037F3C <AmiBlitz3.ab2@21576> JMP errortoken                                             ;can only include
00037F46 <AmiBlitz3.ab2@21579>    MOVE.l #-1,include_process                              ; must tokenize the include
00037F4C <AmiBlitz3.ab2@21582>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00037F52 <AmiBlitz3.ab2@21583>   MOVEA.l _dosbase,A6
00037F56 <AmiBlitz3.ab2@21584>   JSR _Open(A6)
00037F5A <AmiBlitz3.ab2@21585>   MOVE.l D0,$8(A2)
00037F5E <AmiBlitz3.ab2@21586>   BEQ.w error_cant_open_include
00037F64 <AmiBlitz3.ab2@21587>   CLR.l includeline
00037F68 <AmiBlitz3.ab2@21588>   MOVE.l 8(a2),d1
00037F6A <AmiBlitz3.ab2@21589>   MOVE.l d3,-(a7)
00037F6C <AmiBlitz3.ab2@21590>   MOVEQ #0,d2
00037F6E <AmiBlitz3.ab2@21591>   MOVEQ #1,d3
00037F72 <AmiBlitz3.ab2@21592>   JSR _Seek(a6)                                            ; -66
00037F76 <AmiBlitz3.ab2@21593>   MOVE.l 8(a2),d1
00037F78 <AmiBlitz3.ab2@21594>   MOVEQ #0,d2
00037F7A <AmiBlitz3.ab2@21595>   MOVEQ #-1,d3
00037F7E <AmiBlitz3.ab2@21596>   JSR _Seek(a6)                                            ; -66
00037F80 <AmiBlitz3.ab2@21597>   MOVE.l (a7)+,d3
00037F82 <AmiBlitz3.ab2@21598>   ADDQ.l #4,d0
00037F88 <AmiBlitz3.ab2@21600>   MOVE.l #$10000,D1
00037F8E <AmiBlitz3.ab2@21601>   MOVEA.l _execbase,A6
00037F92 <AmiBlitz3.ab2@21604>   JSR _AllocVec(a6)
00037F96 <AmiBlitz3.ab2@21606>   MOVE.l D0,$4(A2)
00037F9A <AmiBlitz3.ab2@21607>   MOVE.l D0,$E(A2)
00037F9C <AmiBlitz3.ab2@21608>   MOVEA.l D0,A5
00037FA2 <AmiBlitz3.ab2@21615>   ADDQ.w #1,ininclude                                      ;enter include
00037FA8 <AmiBlitz3.ab2@21618>   LEA _include,a0
00037FAC <AmiBlitz3.ab2@21619>   MOVEM.l a0-a6/d0-d7,-(a7)
00037FB2 <AmiBlitz3.ab2@21620>   LEA ptr_parameterstore,a1
00037FB4 <AmiBlitz3.ab2@21623>     MOVE.b (a0)+,(a1)+
00037FB8 <AmiBlitz3.ab2@21624>   BNE 'l1b
00037FBA <AmiBlitz3.ab2@21626>   MOVEQ #9,d2
00037FC0 <AmiBlitz3.ab2@21627>   JSR findlabel2
00037FC4 <AmiBlitz3.ab2@21628>   BNE 'd
00037FCC <AmiBlitz3.ab2@21629>   MOVE.l #1,8(a2)
00037FD0 <AmiBlitz3.ab2@21630>   MOVEM.l (a7)+,a0-a6/d0-d7
00037FD4 <AmiBlitz3.ab2@21631> BRA 'd2
00037FDA <AmiBlitz3.ab2@21634>   JSR addlabelhash
00037FE2 <AmiBlitz3.ab2@21635>   MOVE.l #$1,$4(A2)
00037FEA <AmiBlitz3.ab2@21636>   MOVE.l #1,8(a2)
00037FEE <AmiBlitz3.ab2@21637>   MOVEM.l (a7)+,a0-a6/d0-d7
00037FF4 <AmiBlitz3.ab2@21640>   LEA inctab,a0
00037FF6 <AmiBlitz3.ab2@21641>   MOVEQ #0,d1
00037FFC <AmiBlitz3.ab2@21642>   MOVE.w ininclude,d1
00038000 <AmiBlitz3.ab2@21643>   CLR.l $0(a0,d1*4)
00038006 <AmiBlitz3.ab2@21644>   MOVEA.l passstack,A7
0003800C <AmiBlitz3.ab2@21645> JMP AJL_0_413A
00038012 <AmiBlitz3.ab2@21647> JUMP_dupmacerr JMP dupmacerr
00038014 <AmiBlitz3.ab2@21649> coolnest:   Ds.w 1
00038018 <AmiBlitz3.ab2@21650> macline:    Ds.l 1
00038022 <AmiBlitz3.ab2@21654>   MOVE.l linenumat,macline
00038026 <AmiBlitz3.ab2@21655>    BSR.w makename2
0003802A <AmiBlitz3.ab2@21656>    BEQ.w JUMP_syntaxerr
00038030 <AmiBlitz3.ab2@21658>    CLR.b thenmode
0003803A <AmiBlitz3.ab2@21660>    MOVE.w oldqflag,instringon
00038040 <AmiBlitz3.ab2@21661>   MOVEA.l lastsourcepos,A5
00038044 <AmiBlitz3.ab2@21662>    BSR.w findmac
00038048 <AmiBlitz3.ab2@21663>    BEQ.w JUMP_dupmacerr
0003804C <AmiBlitz3.ab2@21664>    BSR.w addlabel
00038050 <AmiBlitz3.ab2@21665>   CLR.w $A(A2)
00038056 <AmiBlitz3.ab2@21666>   MOVEA.l ptr_macrobuffer_begin,A0
00038058 <AmiBlitz3.ab2@21667>   MOVEQ.l #$00,D2
0003805E <AmiBlitz3.ab2@21668>   CLR.w coolnest
00038060 <AmiBlitz3.ab2@21671>   MOVE.b (a5),d0
00038064 <AmiBlitz3.ab2@21672>      BEQ 'l3
00038068 <AmiBlitz3.ab2@21673>      CMP.b #" ",d0
0003806C <AmiBlitz3.ab2@21674>       BNE 'l2                                              ;space macro
0003806E <AmiBlitz3.ab2@21675>       ADDQ.l #1,a5
00038072 <AmiBlitz3.ab2@21676> BRA 'l1
00038076 <AmiBlitz3.ab2@21679>    CMP.b #";",d0
0003807A <AmiBlitz3.ab2@21680>       BNE 'l3
0003807C <AmiBlitz3.ab2@21683>    MOVE.b (a5),d0
00038080 <AmiBlitz3.ab2@21684>       BEQ 'l5
00038084 <AmiBlitz3.ab2@21685>       BSR.w JL_0_CC98                                      ;add comment
00038086 <AmiBlitz3.ab2@21686>       ADDQ.l #1,a5
0003808A <AmiBlitz3.ab2@21687> BRA 'l4
0003808E <AmiBlitz3.ab2@21690>    MOVE.b #":",d0
00038092 <AmiBlitz3.ab2@21691>       BSR.w JL_0_CC98
00038096 <AmiBlitz3.ab2@21692>       MOVE.b #"@",d0
0003809A <AmiBlitz3.ab2@21693>       BSR.w JL_0_CC98
000380A2 <AmiBlitz3.ab2@21696>    MOVE.b #0,temp
000380AA <AmiBlitz3.ab2@21697>       MOVE.b #0,thenmode
000380B0 <AmiBlitz3.ab2@21700>   JSR getcharb
000380B2 <AmiBlitz3.ab2@21701>   TST.w D0
000380B6 <AmiBlitz3.ab2@21702>    BNE.w JL_0_CBDE
000380BA <AmiBlitz3.ab2@21703>   MOVEM.l D2/A0/A2,-(A7)
000380C0 <AmiBlitz3.ab2@21704>   CMP.w #"@@",-3(a5)
000380C4 <AmiBlitz3.ab2@21705>   BNE 'l2a
000380CA <AmiBlitz3.ab2@21706>   JSR nextline
000380CE <AmiBlitz3.ab2@21707>   BEQ.w JUMP_macenderr
000380D2 <AmiBlitz3.ab2@21708>   MOVEM.l (A7)+,D2/A0/A2
000380D6 <AmiBlitz3.ab2@21709> BRA.w JL_0_CBB6
000380DC <AmiBlitz3.ab2@21712>    JSR nextline
000380E0 <AmiBlitz3.ab2@21713>    BEQ.w JUMP_macenderr
000380E4 <AmiBlitz3.ab2@21714>   MOVEM.l (A7)+,D2/A0/A2
000380E6 <AmiBlitz3.ab2@21715>   TST.w D2
000380EA <AmiBlitz3.ab2@21716>    BEQ.w JL_0_CBB6
000380EC <AmiBlitz3.ab2@21719>   MOVE.b (a5),d0
000380F0 <AmiBlitz3.ab2@21720>       CMP.b #" ",d0
000380F4 <AmiBlitz3.ab2@21721>       BNE 'l1
000380F6 <AmiBlitz3.ab2@21722>       ADDQ.w #1,a5
000380FA <AmiBlitz3.ab2@21723> BRA 'l2
00038100 <AmiBlitz3.ab2@21726>   TST.b thenmode
00038104 <AmiBlitz3.ab2@21727>      BEQ 'l3
00038106 <AmiBlitz3.ab2@21728>      MOVEQ #":",d0
0003810A <AmiBlitz3.ab2@21729>      BSR.w JL_0_CC98
0003810E <AmiBlitz3.ab2@21730>      MOVE.w #-$7FFE,D0                                     ;write end if
00038112 <AmiBlitz3.ab2@21731>      BSR macputw
00038116 <AmiBlitz3.ab2@21732>      MOVE.w #$800b,d0
0003811A <AmiBlitz3.ab2@21733>      BSR.w macputw
00038120 <AmiBlitz3.ab2@21734>      CLR.b thenmode
00038122 <AmiBlitz3.ab2@21737>    MOVEQ.l #$3A,D0
0003812A <AmiBlitz3.ab2@21738>      MOVE.b #1,temp
0003812E <AmiBlitz3.ab2@21740> BRA.w JL_0_CC2A
00038132 <AmiBlitz3.ab2@21744>   BPL.w JL_0_CC2A
00038136 <AmiBlitz3.ab2@21745>   CMP.w #-$7FF3,D0                                         ;macro ?
0003813A <AmiBlitz3.ab2@21746>    BNE.w JL_0_CBF4
00038140 <AmiBlitz3.ab2@21747>   ADDQ.w #1,coolnest
00038144 <AmiBlitz3.ab2@21748> BRA.w JL_0_CC22
0003814A <AmiBlitz3.ab2@21750> JUMP_macnesterr JMP macnesterr
0003814E <AmiBlitz3.ab2@21753>   CMP.w #$80d7,d0                                          ;object ?
00038152 <AmiBlitz3.ab2@21754>     BNE 'l1x
00038158 <AmiBlitz3.ab2@21755>     TST.b objectcount
0003815C <AmiBlitz3.ab2@21756>     BNE JUMP_macnesterr
00038160 <AmiBlitz3.ab2@21759>   CMP.w #$8021,d0
00038164 <AmiBlitz3.ab2@21760>     BNE 'nothen
0003816C <AmiBlitz3.ab2@21761>     MOVE.b #1,thenmode
00038172 <AmiBlitz3.ab2@21764>   TST.b thenmode
00038176 <AmiBlitz3.ab2@21765>         BEQ 'l1
0003817A <AmiBlitz3.ab2@21766>    CMP.w #$8002,d0                                         ;end if
0003817E <AmiBlitz3.ab2@21767>    BNE 'l1
00038182 <AmiBlitz3.ab2@21768>    MOVEM.l d0/a5,-(a7)
00038188 <AmiBlitz3.ab2@21769>    JSR get1bytemain
0003818A <AmiBlitz3.ab2@21770>    MOVE.w d0,d1
0003818E <AmiBlitz3.ab2@21771>    MOVEM.l (a7)+,a5/d0
00038192 <AmiBlitz3.ab2@21772>    CMP.w #$800b,d1
00038196 <AmiBlitz3.ab2@21773>    BNE 'l1
0003819C <AmiBlitz3.ab2@21774>    CLR.b thenmode
000381A0 <AmiBlitz3.ab2@21777>    CMP.w #-$7FFE,D0                                        ;end ?
000381A4 <AmiBlitz3.ab2@21778>    BNE.w JL_0_CC22
000381A6 <AmiBlitz3.ab2@21779>    MOVE.l a5,-(a7)
000381AC <AmiBlitz3.ab2@21780>    JSR get1bytemain
000381AE <AmiBlitz3.ab2@21781>    MOVE.l (a7)+,a5
000381B0 <AmiBlitz3.ab2@21782>    TST.w d0
000381B4 <AmiBlitz3.ab2@21783>    BEQ 'doend
000381B8 <AmiBlitz3.ab2@21784>    CMP.w #":",d0
000381BC <AmiBlitz3.ab2@21785>    BEQ 'doend
000381C0 <AmiBlitz3.ab2@21786>    CMP.w #";",d0
000381C4 <AmiBlitz3.ab2@21787>    BEQ 'doend
000381C6 <AmiBlitz3.ab2@21788>    MOVE.l a5,-(a7)
000381CC <AmiBlitz3.ab2@21789>    JSR get1bytemain
000381D0 <AmiBlitz3.ab2@21790>    MOVE.l -1(a5),d0
000381D2 <AmiBlitz3.ab2@21791>    MOVE.l (a7)+,a5
000381D8 <AmiBlitz3.ab2@21792>    CMP.l #"noa7",d0
000381DC <AmiBlitz3.ab2@21793>    BEQ 'doend
000381E0 <AmiBlitz3.ab2@21794> BRA 'morechar
000381E4 <AmiBlitz3.ab2@21797>   MOVE.w #$8002,D0
000381E8 <AmiBlitz3.ab2@21798>    BSR.w macputw
000381EC <AmiBlitz3.ab2@21799> BRA JL_0_CBB6
000381F2 <AmiBlitz3.ab2@21802>   JSR get1bytemain
000381F6 <AmiBlitz3.ab2@21803>    CMP.w #-$7FF3,D0                                        ;end macro
000381FA <AmiBlitz3.ab2@21804>    BEQ.w 'lo1
000381FE <AmiBlitz3.ab2@21805>   CMP.w #$80d7,d0                                          ;end object
00038202 <AmiBlitz3.ab2@21806>   BNE JL_0_CC12
00038208 <AmiBlitz3.ab2@21807>   SUBQ.b #1,objectcount
0003820E <AmiBlitz3.ab2@21808>   TST.b developobject
00038212 <AmiBlitz3.ab2@21809>   BEQ 'lo1
00038216 <AmiBlitz3.ab2@21810>   BSR skiprest
00038218 <AmiBlitz3.ab2@21811> RTS
0003821E <AmiBlitz3.ab2@21814>   SUBQ.w #1,coolnest
00038222 <AmiBlitz3.ab2@21815>    BMI.w JL_0_CC32
00038224 <AmiBlitz3.ab2@21818>   MOVE.w D0,-(A7)
00038228 <AmiBlitz3.ab2@21819>   MOVE.w #$8002,D0
0003822C <AmiBlitz3.ab2@21820>    BSR.w macputw
0003822E <AmiBlitz3.ab2@21821>   MOVE.w (A7)+,D0
00038232 <AmiBlitz3.ab2@21822> BRA.w JL_0_CC22
00038236 <AmiBlitz3.ab2@21825>   BSR.w macputw
0003823A <AmiBlitz3.ab2@21826> BRA.w JL_0_CBB6
00038240 <AmiBlitz3.ab2@21828> JUMP_macenderr JMP macenderr
00038246 <AmiBlitz3.ab2@21831>     CMP.w #"@@",-1(a5)                                     ;merge lines
0003824A <AmiBlitz3.ab2@21832>     BNE 'no
0003824E <AmiBlitz3.ab2@21833>      MOVEM.l D2/A0/A2,-(A7)
00038254 <AmiBlitz3.ab2@21834>    JSR nextline
00038258 <AmiBlitz3.ab2@21835>    BEQ.w JUMP_macenderr
0003825C <AmiBlitz3.ab2@21836>   MOVEM.l (A7)+,D2/A0/A2
0003825E <AmiBlitz3.ab2@21837>     TST.w D2
00038262 <AmiBlitz3.ab2@21838>    BEQ.w JL_0_CBB6
00038266 <AmiBlitz3.ab2@21839> BRA JL_0_CBB6
0003826A <AmiBlitz3.ab2@21843>   BSR.w JL_0_CC98
0003826E <AmiBlitz3.ab2@21844> BRA.w JL_0_CBB6
00038270 <AmiBlitz3.ab2@21847>   ADDQ.w #4,A7
00038272 <AmiBlitz3.ab2@21848>   MOVE.l A0,D0
00038278 <AmiBlitz3.ab2@21849>   SUB.l ptr_macrobuffer_begin,D0
0003827C <AmiBlitz3.ab2@21852>    BEQ.w JL_0_CC5E
00038280 <AmiBlitz3.ab2@21853>   CMPI.b #":",-(A0)
00038284 <AmiBlitz3.ab2@21854>    BNE.w JL_0_CC5E
00038288 <AmiBlitz3.ab2@21855>   CMP.w #$1,D0
0003828C <AmiBlitz3.ab2@21856>    BEQ.w JL_0_CC58
00038290 <AmiBlitz3.ab2@21857>   TST.b -$1(A0)
00038294 <AmiBlitz3.ab2@21858>    BMI.w JL_0_CC5E
00038296 <AmiBlitz3.ab2@21861>   SUBQ.w #1,D0
0003829A <AmiBlitz3.ab2@21862> BRA.w JL_0_CC3C
0003829E <AmiBlitz3.ab2@21865>   MOVE.w D0,$8(A2)
000382A2 <AmiBlitz3.ab2@21866>    BEQ.w JL_0_CC8E
000382A4 <AmiBlitz3.ab2@21867>   MOVEQ.l #$01,D1
000382AA <AmiBlitz3.ab2@21868>   MOVEA.l _execbase,A6
000382B0 <AmiBlitz3.ab2@21869>   MOVE.l mempool,a0
000382B4 <AmiBlitz3.ab2@21870>   JSR _AllocPooled(a6)
000382B6 <AmiBlitz3.ab2@21872>   MOVEA.l D0,A0
000382BA <AmiBlitz3.ab2@21873>   MOVE.l A0,$4(A2)
000382BE <AmiBlitz3.ab2@21874>   MOVE.w $8(A2),D1
000382C2 <AmiBlitz3.ab2@21875>    BEQ.w JL_0_CC8E
000382C4 <AmiBlitz3.ab2@21876>   SUBQ.w #1,D1
000382CA <AmiBlitz3.ab2@21877>   MOVEA.l ptr_macrobuffer_begin,A1
000382CC <AmiBlitz3.ab2@21880>     MOVE.b (A1)+,(A0)+
000382D0 <AmiBlitz3.ab2@21881>   DBF D1,JL_0_CC88
000382D6 <AmiBlitz3.ab2@21884> JMP get1bytemain
000382D8 <AmiBlitz3.ab2@21888>   MOVE.w D0,D1
000382DA <AmiBlitz3.ab2@21889>   LSR.w #8,D1
000382DC <AmiBlitz3.ab2@21890>   MOVE.b D1,(A0)+
000382DE <AmiBlitz3.ab2@21893>   MOVEQ.l #-$01,D2
000382E0 <AmiBlitz3.ab2@21894>   MOVE.b D0,(A0)+
000382E6 <AmiBlitz3.ab2@21895>   CMPA.l ptr_macrobuffer_end,A0
000382EA <AmiBlitz3.ab2@21896>    BCC.w macbigerr2
000382EC <AmiBlitz3.ab2@21897> RTS
000382F2 <AmiBlitz3.ab2@21898> macbigerr2 JMP macbigerr
000382F4 <AmiBlitz3.ab2@21901>   MOVE.l d0,-(a7)
000382F6 <AmiBlitz3.ab2@21902>   MOVEQ #0,d0
000382FC <AmiBlitz3.ab2@21903>   CLR.b skiptoggle
000382FE <AmiBlitz3.ab2@21906>     MOVE.b (a5),d0
00038302 <AmiBlitz3.ab2@21907>     BEQ 'l3
00038306 <AmiBlitz3.ab2@21908>     CMP.b #";",d0
0003830A <AmiBlitz3.ab2@21909>     BNE 'l2
00038312 <AmiBlitz3.ab2@21910>     MOVE.b #1,skiptoggle
00038318 <AmiBlitz3.ab2@21913>     TST.b skiptoggle
0003831C <AmiBlitz3.ab2@21914>     BNE 'l4
00038320 <AmiBlitz3.ab2@21915>     CMP.b #":",d0
00038324 <AmiBlitz3.ab2@21916>     BEQ 'l3
00038326 <AmiBlitz3.ab2@21919>     ADDQ #1,a5
0003832A <AmiBlitz3.ab2@21920> BRA 'loop
00038330 <AmiBlitz3.ab2@21923>   MOVE.w d0,lastchar
00038332 <AmiBlitz3.ab2@21924>   MOVE.l (a7)+,d0
00038334 <AmiBlitz3.ab2@21925> RTS
00038338 <AmiBlitz3.ab2@21929>   BSR.w ifchar
0003833C <AmiBlitz3.ab2@21930>    BNE.w JUMP_syntaxerr
0003833E <AmiBlitz3.ab2@21931>   MOVE.w D0,D1
00038344 <AmiBlitz3.ab2@21932>   JSR get1bytemain
00038348 <AmiBlitz3.ab2@21933>   BSR.w ifchar
0003834C <AmiBlitz3.ab2@21934>    BNE.w JL_0_CCDA
0003834E <AmiBlitz3.ab2@21935>   ADDQ.w #1,D0
00038350 <AmiBlitz3.ab2@21936>   MOVE.w D0,D2
00038352 <AmiBlitz3.ab2@21937>   ADD.w D0,D0
00038354 <AmiBlitz3.ab2@21938>   ADD.w D2,D0
00038356 <AmiBlitz3.ab2@21939>   ADD.w D0,D1
00038358 <AmiBlitz3.ab2@21940>   MOVE.w D1,D0
0003835C <AmiBlitz3.ab2@21941>   ANDI.w #$3,D0
00038360 <AmiBlitz3.ab2@21942>   CMP.w #$3,D0
00038364 <AmiBlitz3.ab2@21943>    BEQ.w JUMP_syntaxerr
0003836A <AmiBlitz3.ab2@21945>   JSR get1bytemain
0003836C <AmiBlitz3.ab2@21948> RTS
0003836E <AmiBlitz3.ab2@21954> thetst1:  TST.b D0
00038370 <AmiBlitz3.ab2@21955> thetst2:  TST.w D0
00038372 <AmiBlitz3.ab2@21956> thetst3:  TST.l D0
00038374 <AmiBlitz3.ab2@21957> thetst4:  TST.l (A7)+                                      ;Any Length?
00038378 <AmiBlitz3.ab2@21958> thetst5:  JSR _Reschedule(A6)
0003837C <AmiBlitz3.ab2@21960> posbr:    BEQ.w posbr
00038380 <AmiBlitz3.ab2@21961> negbr:    BNE.w negbr
00038382 <AmiBlitz3.ab2@21965>   MOVEQ.l #-$01,D2
00038386 <AmiBlitz3.ab2@21966> BRA.w JL_0_D04C
0003838C <AmiBlitz3.ab2@21970>   CLR.l fp0addr
0003838E <AmiBlitz3.ab2@21971>   MOVEQ.l #$01,D1                                          ;while flag
00038390 <AmiBlitz3.ab2@21972>   MOVEQ.l #$00,D2                                          ;negate flag
00038394 <AmiBlitz3.ab2@21973> BRA.w JL_0_D04E
0003839A <AmiBlitz3.ab2@21977>   LEA firstrep,A2
0003839C <AmiBlitz3.ab2@21978>   MOVEQ.l #$08,D2
000383A0 <AmiBlitz3.ab2@21979> BRA.w freeslist
000383A4 <AmiBlitz3.ab2@21983>   LEA firstsel(PC),A2
000383A6 <AmiBlitz3.ab2@21984>   MOVEQ.l #$0E,D2
000383A8 <AmiBlitz3.ab2@21989>   MOVEQ.l #$00,D3
000383AA <AmiBlitz3.ab2@21997>   MOVE.l (A2),D0
000383AC <AmiBlitz3.ab2@21998>   CLR.l (A2)
000383AE <AmiBlitz3.ab2@21999>   MOVEA.l D0,A2
000383B4 <AmiBlitz3.ab2@22000>   MOVEA.l _execbase,A6
000383B8 <AmiBlitz3.ab2@22003>     CMPA.w #$0,A2
000383BC <AmiBlitz3.ab2@22004>      BEQ.w freelist__done
000383BE <AmiBlitz3.ab2@22005>     TST.w D3
000383C2 <AmiBlitz3.ab2@22006>      BEQ.w freelist__skip
000383C6 <AmiBlitz3.ab2@22007>     MOVEM.l D2-D3/A2,-(A7)
000383C8 <AmiBlitz3.ab2@22008>     ADDA.w D3,A2
000383CA <AmiBlitz3.ab2@22009>     MOVE.l D4,D2
000383CE <AmiBlitz3.ab2@22010>     BSR.w freeslist
000383D2 <AmiBlitz3.ab2@22011>     MOVEM.l (A7)+,D2-D3/A2
000383D4 <AmiBlitz3.ab2@22014>     MOVEA.l A2,A1
000383D6 <AmiBlitz3.ab2@22015>     MOVE.l D2,D0
000383D8 <AmiBlitz3.ab2@22016>     MOVEA.l (A2),A2
000383DE <AmiBlitz3.ab2@22017>     MOVE.l mempool,a0
000383E2 <AmiBlitz3.ab2@22018>     JSR _FreePooled(A6)
000383E6 <AmiBlitz3.ab2@22019> BRA.w freelist__loop
000383E8 <AmiBlitz3.ab2@22022> RTS
000383EE <AmiBlitz3.ab2@22025> JMP eselerr
000383F2 <AmiBlitz3.ab2@22028> firstsel:  Ds.l 1
000383F6 <AmiBlitz3.ab2@22031> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
000383F8 <AmiBlitz3.ab2@22034> selpushw:   MOVE.w D0,-(A7)
000383FA <AmiBlitz3.ab2@22036> selpushl:   MOVE.l D0,-(A7)
000383FE <AmiBlitz3.ab2@22038> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00038402 <AmiBlitz3.ab2@22041> selcomb:    ANDI.w #$FF,D0
00038404 <AmiBlitz3.ab2@22042> selcomw:    CMP.w (A7),D0
00038406 <AmiBlitz3.ab2@22044> selcoml:    CMP.l (A7),D0
0003840A <AmiBlitz3.ab2@22046> selbne:     BNE.w selbne
0003840C <AmiBlitz3.ab2@22048> endsel:     ADDQ.w #8,A7
00038410 <AmiBlitz3.ab2@22054>   MOVE.l firstsel(PC),D0                                  
00038414 <AmiBlitz3.ab2@22055>    BEQ.w JUMP_eselerr
00038416 <AmiBlitz3.ab2@22056>   MOVEA.l D0,A2
0003841A <AmiBlitz3.ab2@22057>    BSR.w JL_0_CDFC
00038420 <AmiBlitz3.ab2@22060>   MOVEA.l _execbase,A6
00038424 <AmiBlitz3.ab2@22063>   MOVE.l $4(A2),D0
00038428 <AmiBlitz3.ab2@22064>    BEQ.w doendsel__done
0003842A <AmiBlitz3.ab2@22065>   MOVEA.l D0,A3
0003842E <AmiBlitz3.ab2@22066>   MOVEA.l $4(A3),A0
00038434 <AmiBlitz3.ab2@22067>   MOVE.l destpointer,D1
00038436 <AmiBlitz3.ab2@22068>   SUB.l A0,D1
0003843C <AmiBlitz3.ab2@22070>     TST.b fast
00038440 <AmiBlitz3.ab2@22071>     BEQ doendsel__loop_l1
00038446 <AmiBlitz3.ab2@22072>     MOVE.w dontwrite,D0
0003844A <AmiBlitz3.ab2@22073>     BNE.w doendsel__skip
0003844C <AmiBlitz3.ab2@22074>     ADDQ.l #2,d1
00038450 <AmiBlitz3.ab2@22075>     MOVE.l d1,-2(a0)
00038454 <AmiBlitz3.ab2@22076>   BRA doendsel__skip
0003845A <AmiBlitz3.ab2@22080>   TST.w dontwrite
0003845E <AmiBlitz3.ab2@22081>      BNE.w doendsel__skip
00038464 <AmiBlitz3.ab2@22082>   CMP.l #MaxWordSgnd,D1
00038468 <AmiBlitz3.ab2@22083>    BHI.w JUMP_cbraerr
0003846A <AmiBlitz3.ab2@22084>   MOVE.w D1,(A0)
0003846E <AmiBlitz3.ab2@22087>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00038470 <AmiBlitz3.ab2@22088>   MOVEA.l A3,A1
00038472 <AmiBlitz3.ab2@22089>   MOVEQ.l #$08,D0
00038478 <AmiBlitz3.ab2@22090>   MOVE.l mempool,a0
0003847C <AmiBlitz3.ab2@22091>    JSR _FreePooled(A6)
00038480 <AmiBlitz3.ab2@22092> BRA.w doendsel__loop
00038486 <AmiBlitz3.ab2@22095>   JSR popselect                                            ;fix stack on select
0003848A <AmiBlitz3.ab2@22096>   MOVEA.l firstsel(PC),A1
00038490 <AmiBlitz3.ab2@22097>   MOVE.l (A1),firstsel
00038492 <AmiBlitz3.ab2@22098>   MOVEQ.l #$0E,D0
00038498 <AmiBlitz3.ab2@22099>   MOVEA.l _execbase,A6
0003849E <AmiBlitz3.ab2@22100>   MOVE.l mempool,a0
000384A2 <AmiBlitz3.ab2@22101>   JSR _FreePooled(A6)
000384A8 <AmiBlitz3.ab2@22102> JMP get1bytemain
000384AA <AmiBlitz3.ab2@22106>   MOVEA.l (A7)+,A1
000384AC <AmiBlitz3.ab2@22107>   SUBQ.w #8,A1
000384AE <AmiBlitz3.ab2@22108>   MOVEQ.l #$09,D0
000384B0 <AmiBlitz3.ab2@22109>   ADD.l (A1),D0
000384B2 <AmiBlitz3.ab2@22112>   ADDQ.w #2,A7                                             ;for runtime errs!
000384B6 <AmiBlitz3.ab2@22117>   MOVE.l firstsel(PC),D0
000384BA <AmiBlitz3.ab2@22118>    BEQ.w JUMP_defaerr
000384BC <AmiBlitz3.ab2@22119>   MOVEA.l D0,A2
000384C0 <AmiBlitz3.ab2@22120>   BSR.w JL_0_CE26
000384C4 <AmiBlitz3.ab2@22121>   BSR.w JL_0_CDFC
000384C8 <AmiBlitz3.ab2@22122>   CLR.l $8(A2)
000384CC <AmiBlitz3.ab2@22123>   MOVE.w $C(A2),D2
000384D0 <AmiBlitz3.ab2@22124> BRA.w JL_0_CE5E
000384D6 <AmiBlitz3.ab2@22127> JMP defaerr
000384DA <AmiBlitz3.ab2@22130>   MOVE.l $8(A2),D0
000384DE <AmiBlitz3.ab2@22131>    BEQ.w JL_0_CE24
000384E0 <AmiBlitz3.ab2@22132>   MOVEA.l D0,A0
000384E6 <AmiBlitz3.ab2@22133>   MOVE.l destpointer,D1
000384E8 <AmiBlitz3.ab2@22134>   SUB.l A0,D1
000384EE <AmiBlitz3.ab2@22136>     TST.b fast
000384F2 <AmiBlitz3.ab2@22137>     BEQ 'l1
000384F8 <AmiBlitz3.ab2@22138>     TST.w dontwrite
000384FC <AmiBlitz3.ab2@22139>     BNE.w JL_0_CE24
000384FE <AmiBlitz3.ab2@22140>     ADDQ.l #2,d1
00038502 <AmiBlitz3.ab2@22141>     MOVE.l D1,-2(A0)
00038506 <AmiBlitz3.ab2@22142>   BRA JL_0_CE24
0003850C <AmiBlitz3.ab2@22146>   TST.w dontwrite
00038510 <AmiBlitz3.ab2@22147>      BNE.w JL_0_CE24
00038516 <AmiBlitz3.ab2@22148>    CMP.l #MaxWordSgnd,D1
0003851A <AmiBlitz3.ab2@22149>    BHI.w JUMP_cbraerr
0003851C <AmiBlitz3.ab2@22150>   MOVE.w D1,(A0)
0003851E <AmiBlitz3.ab2@22153> RTS
00038524 <AmiBlitz3.ab2@22156> JMP cbraerr
00038528 <AmiBlitz3.ab2@22160>   MOVE.l $8(A2),D0
0003852C <AmiBlitz3.ab2@22161>    BEQ.w JL_0_CE5C
0003852E <AmiBlitz3.ab2@22162>   MOVEA.l D0,A3
00038532 <AmiBlitz3.ab2@22163>   MOVE.w #$6000,D1
00038538 <AmiBlitz3.ab2@22165>    TST.b fast
0003853C <AmiBlitz3.ab2@22166>    BEQ 'l1
00038542 <AmiBlitz3.ab2@22167>    OR.l #$ff,d1
00038546 <AmiBlitz3.ab2@22168>    BSR writeword
0003854A <AmiBlitz3.ab2@22172>   BSR.w writeword
0003854C <AmiBlitz3.ab2@22173>   MOVEQ.l #$08,D0
0003854E <AmiBlitz3.ab2@22174>   MOVEQ.l #$01,D1
00038554 <AmiBlitz3.ab2@22175>   MOVEA.l _execbase,A6
0003855A <AmiBlitz3.ab2@22176>   MOVE.l mempool,a0
0003855E <AmiBlitz3.ab2@22177>   JSR _AllocPooled(a6)
00038560 <AmiBlitz3.ab2@22179>   MOVEA.l D0,A0
00038564 <AmiBlitz3.ab2@22180>   MOVE.l $4(A2),(A0)
00038568 <AmiBlitz3.ab2@22181>   MOVE.l A0,$4(A2)
00038570 <AmiBlitz3.ab2@22182>   MOVE.l destpointer,$4(A0)
00038574 <AmiBlitz3.ab2@22183> BRA.w writeword
00038576 <AmiBlitz3.ab2@22186> RTS
0003857C <AmiBlitz3.ab2@22190>   TST.b debugmode
00038580 <AmiBlitz3.ab2@22191>    BEQ.w JL_0_CE7A
00038584 <AmiBlitz3.ab2@22192>   MOVE.w #$C313,D1
00038588 <AmiBlitz3.ab2@22193>   CMP.w #$3,D2
0003858C <AmiBlitz3.ab2@22194>    BCS.w JL_0_CE76
0003858E <AmiBlitz3.ab2@22195>   ADDQ.w #1,D1
00038592 <AmiBlitz3.ab2@22198> BRA.w Atokejsr
00038594 <AmiBlitz3.ab2@22201> RTS
0003859A <AmiBlitz3.ab2@22205> JMP caseerr
0003859E <AmiBlitz3.ab2@22208>   MOVE.l firstsel(PC),D0
000385A2 <AmiBlitz3.ab2@22209>    BEQ.w JUMP_caseerr
000385A4 <AmiBlitz3.ab2@22210>   MOVEA.l D0,A2
000385A8 <AmiBlitz3.ab2@22211>    BSR.w JL_0_CE26
000385AC <AmiBlitz3.ab2@22212>    BSR.w JL_0_CDFC
000385B0 <AmiBlitz3.ab2@22213>   MOVE.w $C(A2),D2
000385B2 <AmiBlitz3.ab2@22214>   MOVE.w D2,-(A7)
000385B6 <AmiBlitz3.ab2@22215>    BSR.w JL_0_CE5E
000385B8 <AmiBlitz3.ab2@22216>   MOVE.w (A7),D2
000385BC <AmiBlitz3.ab2@22217>    BSR.w bakeval
000385BE <AmiBlitz3.ab2@22218>   MOVE.w (A7)+,D2
000385C2 <AmiBlitz3.ab2@22219>   LEA selcomb(PC),A0
000385C6 <AmiBlitz3.ab2@22220>   LEA selcombf(PC),A1
000385CA <AmiBlitz3.ab2@22221>   CMP.w #$1,D2
000385CE <AmiBlitz3.ab2@22222>    BEQ.w JL_0_CED8
000385D2 <AmiBlitz3.ab2@22223>   LEA selcomw(PC),A0
000385D6 <AmiBlitz3.ab2@22224>   CMP.w #$2,D2
000385DA <AmiBlitz3.ab2@22225>    BEQ.w JL_0_CED8
000385DE <AmiBlitz3.ab2@22226>   LEA selcoml(PC),A0
000385E2 <AmiBlitz3.ab2@22227>   LEA selcomlf(PC),A1
000385E6 <AmiBlitz3.ab2@22228>   CMP.w #$7,D2
000385EA <AmiBlitz3.ab2@22229>    BCS.w JL_0_CED8
000385EE <AmiBlitz3.ab2@22231>   MOVE.w #$CE01,D1
000385F2 <AmiBlitz3.ab2@22232>    BSR.w Atokejsr
000385F6 <AmiBlitz3.ab2@22233> BRA.w JL_0_CEDC
000385FA <AmiBlitz3.ab2@22236>   BSR.w pokecode
000385FE <AmiBlitz3.ab2@22239>   MOVE.w selbne(PC),D1
00038604 <AmiBlitz3.ab2@22241>     TST.b fast
00038608 <AmiBlitz3.ab2@22242>     BEQ 'l1
0003860E <AmiBlitz3.ab2@22243>     ORI.l #$ff,d1
00038612 <AmiBlitz3.ab2@22244>     BSR writeword
00038616 <AmiBlitz3.ab2@22247>   BSR.w writeword
0003861A <AmiBlitz3.ab2@22248>   MOVEA.l firstsel(PC),A0
00038622 <AmiBlitz3.ab2@22249>   MOVE.l destpointer,$8(A0)
00038626 <AmiBlitz3.ab2@22250> BRA.w writeword
0003862A <AmiBlitz3.ab2@22254> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
0003862C <AmiBlitz3.ab2@22255> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00038630 <AmiBlitz3.ab2@22258> sellineat:  Ds.l 1
00038636 <AmiBlitz3.ab2@22264>   TST.b debugmode
0003863A <AmiBlitz3.ab2@22265>    BEQ.w JL_0_CF0E
0003863E <AmiBlitz3.ab2@22266>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00038642 <AmiBlitz3.ab2@22267>    BSR.w writelong
0003864C <AmiBlitz3.ab2@22270>   MOVE.l linenumat,sellineat
00038656 <AmiBlitz3.ab2@22272>    MOVE.l destpointer,pushpc
00038660 <AmiBlitz3.ab2@22273>   MOVE.l hunkoffsetbase,pushoff
00038662 <AmiBlitz3.ab2@22274>   MOVEQ.l #$00,D2
00038666 <AmiBlitz3.ab2@22275>    BSR.w bakevalu                                          ;Evaluate
0003866A <AmiBlitz3.ab2@22276>    BSR.w JL_0_B5D2
0003866E <AmiBlitz3.ab2@22277>   CMP.w #$7,D2
00038672 <AmiBlitz3.ab2@22278>    BNE.w JL_0_CF36
00038676 <AmiBlitz3.ab2@22279>   MOVE.w clrst(PC),D1
0003867A <AmiBlitz3.ab2@22280>    BSR.w writeword
0003867E <AmiBlitz3.ab2@22283>    BSR.w JL_0_B63C
00038682 <AmiBlitz3.ab2@22284>   LEA selpushb(PC),A0
00038686 <AmiBlitz3.ab2@22285>   LEA selpushbf(PC),A1
0003868A <AmiBlitz3.ab2@22286>   CMP.w #$1,D2
0003868E <AmiBlitz3.ab2@22287>    BEQ.w JL_0_CF88
00038692 <AmiBlitz3.ab2@22288>   LEA selpushw(PC),A0
00038696 <AmiBlitz3.ab2@22289>   CMP.w #$2,D2
0003869A <AmiBlitz3.ab2@22290>    BEQ.w JL_0_CF88
0003869E <AmiBlitz3.ab2@22291>   LEA selpushl(PC),A0
000386A2 <AmiBlitz3.ab2@22292>   LEA selpushlf(PC),A1
000386A6 <AmiBlitz3.ab2@22293>   CMP.w #$7,D2
000386AA <AmiBlitz3.ab2@22294>    BCS.w JL_0_CF88
000386B0 <AmiBlitz3.ab2@22296>   MOVE.w moved0a3,D1                                       ;d0 to a3!
000386B4 <AmiBlitz3.ab2@22297>    BSR.w writeword
000386B8 <AmiBlitz3.ab2@22298>   LEA selpushs(PC),A0
000386BC <AmiBlitz3.ab2@22299>   LEA selpushsf(PC),A1
000386C0 <AmiBlitz3.ab2@22300>    BSR.w pokecode
000386C4 <AmiBlitz3.ab2@22301>   MOVE.w #$C701,D1
000386C8 <AmiBlitz3.ab2@22302>    BSR.w Atokejsr
000386CC <AmiBlitz3.ab2@22303> BRA.w JL_0_CF8C
000386D0 <AmiBlitz3.ab2@22306>   BSR.w pokecode
000386D2 <AmiBlitz3.ab2@22309>   MOVEQ.l #$0E,D0
000386D4 <AmiBlitz3.ab2@22310>   MOVEQ.l #$01,D1
000386DA <AmiBlitz3.ab2@22311>   MOVEA.l _execbase,A6
000386E0 <AmiBlitz3.ab2@22313>   MOVE.l mempool,a0
000386E4 <AmiBlitz3.ab2@22314>   JSR _AllocPooled(a6)
000386E6 <AmiBlitz3.ab2@22315>   MOVEA.l D0,A0
000386EA <AmiBlitz3.ab2@22316>   MOVE.l firstsel(PC),(A0)
000386F0 <AmiBlitz3.ab2@22317>   MOVE.l A0,firstsel
000386F4 <AmiBlitz3.ab2@22318>   CLR.l $4(A0)
000386F8 <AmiBlitz3.ab2@22319>   CLR.l $8(A0)
000386FC <AmiBlitz3.ab2@22320>   MOVE.w D2,$C(A0)
000386FE <AmiBlitz3.ab2@22321> RTS
00038704 <AmiBlitz3.ab2@22325>   MOVE.l firstrep,D0
00038708 <AmiBlitz3.ab2@22326>    BEQ.w JUMP_unterr1
0003870C <AmiBlitz3.ab2@22327>   MOVE.w #$6000,D1
00038710 <AmiBlitz3.ab2@22328>   BSR.w writeword
00038712 <AmiBlitz3.ab2@22329>   MOVEA.l D0,A0
00038716 <AmiBlitz3.ab2@22330>   MOVE.l $4(A0),D1
0003871C <AmiBlitz3.ab2@22331>   SUB.l destpointer,D1
0003871E <AmiBlitz3.ab2@22332>   TST.w D1
00038722 <AmiBlitz3.ab2@22333>    BPL.w JUMP_unterr2
00038726 <AmiBlitz3.ab2@22334>   BSR.w writeword
0003872C <AmiBlitz3.ab2@22335>   MOVEA.l _execbase,A6
00038730 <AmiBlitz3.ab2@22336> BRA.w JL_0_D036
00038736 <AmiBlitz3.ab2@22339> JMP unterr2
0003873C <AmiBlitz3.ab2@22342> JMP unterr1
00038742 <AmiBlitz3.ab2@22346>   MOVE.l firstrep,D0
00038746 <AmiBlitz3.ab2@22347>    BEQ.w JUMP_unterr1
0003874A <AmiBlitz3.ab2@22348>   BSR.w do_if
00038750 <AmiBlitz3.ab2@22349>   JSR reget
00038754 <AmiBlitz3.ab2@22350>    BNE.w JUMP_syntaxerr
0003875A <AmiBlitz3.ab2@22351>   MOVE.w dontwrite,D1
0003875E <AmiBlitz3.ab2@22352>    BNE.w JL_0_D020
00038764 <AmiBlitz3.ab2@22353>   MOVEA.l firstrep,A0
0003876A <AmiBlitz3.ab2@22354>   MOVEA.l destpointer,A1
00038770 <AmiBlitz3.ab2@22356>     TST.b fast
00038774 <AmiBlitz3.ab2@22357>     BEQ 'l1
00038776 <AmiBlitz3.ab2@22358>     SUBQ.w #4,a1
0003877A <AmiBlitz3.ab2@22359>     MOVE.l $4(A0),D2
0003877C <AmiBlitz3.ab2@22360>     SUB.l A1,D2
0003877E <AmiBlitz3.ab2@22361>     MOVE.l d2,(a1)
00038782 <AmiBlitz3.ab2@22362>   BRA JL_0_D020
00038784 <AmiBlitz3.ab2@22366>   SUBQ.w #2,A1
00038788 <AmiBlitz3.ab2@22367>   MOVE.l $4(A0),D2
0003878A <AmiBlitz3.ab2@22368>   SUB.l A1,D2
0003878C <AmiBlitz3.ab2@22369>   TST.w D2
00038790 <AmiBlitz3.ab2@22370>    BPL.w JUMP_unterr2
00038792 <AmiBlitz3.ab2@22371>   MOVE.w D2,(A1)
00038798 <AmiBlitz3.ab2@22374>   MOVEA.l firstiff,A1
0003879E <AmiBlitz3.ab2@22375>   MOVE.l (A1),firstiff
000387A0 <AmiBlitz3.ab2@22376>   MOVEQ.l #$0E,D0
000387A6 <AmiBlitz3.ab2@22377>   MOVEA.l _execbase,A6
000387AC <AmiBlitz3.ab2@22378>   MOVE.l mempool,a0
000387B0 <AmiBlitz3.ab2@22379>   JSR _FreePooled(A6)
000387B6 <AmiBlitz3.ab2@22382>   MOVEA.l firstrep,A1
000387BC <AmiBlitz3.ab2@22383>   MOVE.l (A1),firstrep
000387BE <AmiBlitz3.ab2@22384>   MOVEQ.l #$08,D0
000387C4 <AmiBlitz3.ab2@22385>   MOVE.l mempool,a0
000387C8 <AmiBlitz3.ab2@22386> JMP _FreePooled(A6)
000387CC <AmiBlitz3.ab2@22389> iflineat:   Ds.l 1
000387CE <AmiBlitz3.ab2@22393>   MOVEQ.l #$00,D2
000387D4 <AmiBlitz3.ab2@22394>   TST.b fast
000387D8 <AmiBlitz3.ab2@22395>   BEQ 'l1
000387E0 <AmiBlitz3.ab2@22396>   MOVE.b #1,nostringopt
000387E8 <AmiBlitz3.ab2@22397>   MOVE.b #1,iniffcommand
000387EA <AmiBlitz3.ab2@22401>   MOVEQ.l #$00,D1
000387EC <AmiBlitz3.ab2@22404>   MOVE.w D1,-(A7)
000387F2 <AmiBlitz3.ab2@22405>   MOVE.l destpointer,-(A7)
000387F4 <AmiBlitz3.ab2@22406>   MOVE.w D2,-(A7)
000387FE <AmiBlitz3.ab2@22407>   MOVE.l linenumat,iflineat
00038800 <AmiBlitz3.ab2@22408>   MOVEQ.l #$00,D2
0003880A <AmiBlitz3.ab2@22409>   MOVE.b optistring,optistring2
00038812 <AmiBlitz3.ab2@22410>   MOVE.b #1,optistring
00038816 <AmiBlitz3.ab2@22411>   BSR.w bakevalu
00038820 <AmiBlitz3.ab2@22412>   MOVE.b optistring2,optistring
00038824 <AmiBlitz3.ab2@22413>   CMP.w #$5,D2
00038828 <AmiBlitz3.ab2@22414>    BEQ.w JL_0_D09C
0003882C <AmiBlitz3.ab2@22415>   MOVE.w thetst1(PC),D1
00038830 <AmiBlitz3.ab2@22416>   CMP.w #$1,D2
00038834 <AmiBlitz3.ab2@22417>    BEQ.w writebranchcode
00038838 <AmiBlitz3.ab2@22418>   MOVE.w thetst2(PC),D1
0003883C <AmiBlitz3.ab2@22419>   CMP.w #$2,D2
00038840 <AmiBlitz3.ab2@22420>    BEQ.w writebranchcode
00038844 <AmiBlitz3.ab2@22421>   MOVE.w thetst4(PC),D1
00038848 <AmiBlitz3.ab2@22422>   CMP.w #$7,D2
0003884C <AmiBlitz3.ab2@22423>    BEQ.w writebranchcode
00038850 <AmiBlitz3.ab2@22424>   MOVE.w thetst3(PC),D1
00038854 <AmiBlitz3.ab2@22425> BRA.w writebranchcode
0003885A <AmiBlitz3.ab2@22428>   TST.b fpu
0003885E <AmiBlitz3.ab2@22429>   BEQ 'dofpu
00038864 <AmiBlitz3.ab2@22430>   MOVE.l #$f200003a,d1
00038868 <AmiBlitz3.ab2@22431>   BSR writelong
0003886C <AmiBlitz3.ab2@22432>   MOVE.w #$f2c1,d1
00038870 <AmiBlitz3.ab2@22433>   BSR writeword
00038874 <AmiBlitz3.ab2@22434>   BSR writelong
00038876 <AmiBlitz3.ab2@22435>   ADDQ.l #2,a7
0003887A <AmiBlitz3.ab2@22436> BRA.w br2
0003887E <AmiBlitz3.ab2@22439>    MOVE.w #$C900,D1
00038882 <AmiBlitz3.ab2@22440>    BSR.w Atokejsr
00038886 <AmiBlitz3.ab2@22441>   MOVE.l thetst5(PC),D1
0003888A <AmiBlitz3.ab2@22442>    BSR.w writelong
0003888E <AmiBlitz3.ab2@22443> BRA.w JL_0_D0B4
00038894 <AmiBlitz3.ab2@22447>          CLR.b iniffcommand
0003889A <AmiBlitz3.ab2@22448>          TST.b fast                                        ;branchcode
0003889E <AmiBlitz3.ab2@22449>          BEQ b6
000388A4 <AmiBlitz3.ab2@22450>          TST.b fpu
000388A8 <AmiBlitz3.ab2@22451>          BEQ 'nofpu
000388AE <AmiBlitz3.ab2@22455>           MOVE.l destpointer,a0
000388B4 <AmiBlitz3.ab2@22456>          SUB.l load_var_addr,a0
000388BA <AmiBlitz3.ab2@22457>          CMP.l #4,a0
000388BE <AmiBlitz3.ab2@22458>          BEQ 'nofpu
000388C6 <AmiBlitz3.ab2@22459>          CMP.l #$f2400014,-4(a4)                           ;<
000388CA <AmiBlitz3.ab2@22460>          BNE 'nolt
000388D0 <AmiBlitz3.ab2@22461>          SUBQ.l #2,destpointer
000388D6 <AmiBlitz3.ab2@22462>          MOVE.w #$f293,-4(a4)                              ;
000388DA <AmiBlitz3.ab2@22463> BRA 'brf
000388E2 <AmiBlitz3.ab2@22466>   CMP.l #$f2400015,-4(a4)                                  ;<=
000388E6 <AmiBlitz3.ab2@22467>          BNE 'nole
000388EC <AmiBlitz3.ab2@22468>          SUBQ.l #2,destpointer
000388F2 <AmiBlitz3.ab2@22469>          MOVE.w #$f292,-4(a4)
000388F6 <AmiBlitz3.ab2@22470> BRA 'brf
000388FE <AmiBlitz3.ab2@22473>   CMP.l #$f2400013,-4(a4)                                  ;=>
00038902 <AmiBlitz3.ab2@22474>          BNE 'noge
00038908 <AmiBlitz3.ab2@22475>          SUBQ.l #2,destpointer
0003890E <AmiBlitz3.ab2@22476>          MOVE.w #$f294,-4(a4)
00038912 <AmiBlitz3.ab2@22477> BRA 'brf
0003891A <AmiBlitz3.ab2@22480>   CMP.l #$f2400012,-4(a4)                                  ;>
0003891E <AmiBlitz3.ab2@22481>          BNE 'nogt
00038924 <AmiBlitz3.ab2@22482>          SUBQ.l #2,destpointer
0003892A <AmiBlitz3.ab2@22483>          MOVE.w #$f295,-4(a4)
0003892E <AmiBlitz3.ab2@22484> BRA 'brf
00038936 <AmiBlitz3.ab2@22487>   CMP.l #$f2400001,-4(a4)                                  ;=
0003893A <AmiBlitz3.ab2@22488>          BNE 'noeq
00038940 <AmiBlitz3.ab2@22489>          SUBQ.l #2,destpointer
00038946 <AmiBlitz3.ab2@22490>          MOVE.w #$f28e,-4(a4)
0003894A <AmiBlitz3.ab2@22491> BRA 'brf
00038952 <AmiBlitz3.ab2@22494>   CMP.l #$f240000e,-4(a4)                                  ;<>
00038956 <AmiBlitz3.ab2@22495>          BNE 'none
0003895C <AmiBlitz3.ab2@22496>          SUBQ.l #2,destpointer
00038962 <AmiBlitz3.ab2@22497>          MOVE.w #$f281,-4(a4)
00038964 <AmiBlitz3.ab2@22500>   ADDQ.l #2,a7
0003896A <AmiBlitz3.ab2@22502>     TST.b fast
0003896E <AmiBlitz3.ab2@22503>     BEQ 'l1
00038974 <AmiBlitz3.ab2@22504>     OR.b #$40,-3(a4)
00038978 <AmiBlitz3.ab2@22505>     BSR writeword
0003897C <AmiBlitz3.ab2@22509>  BSR writeword
00038980 <AmiBlitz3.ab2@22510> BRA.s br2
00038986 <AmiBlitz3.ab2@22514>   MOVE.l destpointer,a0
0003898C <AmiBlitz3.ab2@22515>          SUB.l load_var_addr,a0
00038992 <AmiBlitz3.ab2@22516>          CMP.l #4,a0
00038996 <AmiBlitz3.ab2@22517>          BEQ JL_0_D0B4
0003899C <AmiBlitz3.ab2@22518>          CMP.w #$4eb9,-6(a4)
000389A0 <AmiBlitz3.ab2@22519>          BEQ b6
000389A6 <AmiBlitz3.ab2@22520>          CMP.w #$5ec0,-2(a4)                               ;>
000389AA <AmiBlitz3.ab2@22521>      BNE.s 'lb1
000389B0 <AmiBlitz3.ab2@22522>          MOVE.w #$6f00,-2(a4)                              ;ble
000389B4 <AmiBlitz3.ab2@22523> BRA.s br
000389BA <AmiBlitz3.ab2@22526>  CMP.w #$5dc0,-2(a4)                                       ;<
000389BE <AmiBlitz3.ab2@22527>   BNE.s 'lb2
000389C4 <AmiBlitz3.ab2@22528>          MOVE.w #$6c00,-2(a4)                              ;bge
000389C8 <AmiBlitz3.ab2@22529> BRA.s br
000389CE <AmiBlitz3.ab2@22532>   CMP.w #$57c0,-2(a4)                                      ;=
000389D2 <AmiBlitz3.ab2@22533>   BNE.s 'lb3
000389D8 <AmiBlitz3.ab2@22534>          MOVE.w #$6600,-2(a4)                              ;bne
000389DC <AmiBlitz3.ab2@22535> BRA.s br
000389E2 <AmiBlitz3.ab2@22538>   CMP.w #$56c0,-2(a4)                                      ;<>
000389E6 <AmiBlitz3.ab2@22539>   BNE.s 'lb4
000389EC <AmiBlitz3.ab2@22540>          MOVE.w #$6700,-2(a4)                              ;beq
000389F0 <AmiBlitz3.ab2@22541> BRA.s br
000389F6 <AmiBlitz3.ab2@22544>   CMP.w #$5cc0,-2(a4)                                      ;>=
000389FA <AmiBlitz3.ab2@22545>   BNE.s 'lb5
00038A00 <AmiBlitz3.ab2@22546>          MOVE.w #$6d00,-2(a4)                              ;blt
00038A04 <AmiBlitz3.ab2@22547> BRA.s br
00038A0A <AmiBlitz3.ab2@22550>   CMP.w #$5fc0,-2(a4)                                      ;<=
00038A0E <AmiBlitz3.ab2@22551>         BNE.s b6
00038A14 <AmiBlitz3.ab2@22552>          MOVE.w #$6e00,-2(a4)                              ;bgt
00038A16 <AmiBlitz3.ab2@22555>   TST.w (a7)+
00038A1C <AmiBlitz3.ab2@22557>         TST.b fast
00038A20 <AmiBlitz3.ab2@22558>         BEQ 'l1
00038A26 <AmiBlitz3.ab2@22559>         OR.b #$ff,-1(a4)                                   ;long branches
00038A2A <AmiBlitz3.ab2@22560>         BSR writeword
00038A2E <AmiBlitz3.ab2@22564>         BSR writeword
00038A32 <AmiBlitz3.ab2@22565> BRA.s br2
00038A36 <AmiBlitz3.ab2@22568>   BSR.w writeword
00038A3A <AmiBlitz3.ab2@22571>   MOVE.l posbr(PC),D1
00038A3C <AmiBlitz3.ab2@22572>   TST.w (A7)+
00038A40 <AmiBlitz3.ab2@22573>    BEQ.w JL_0_D0C2
00038A44 <AmiBlitz3.ab2@22574>   MOVE.l negbr(PC),D1
00038A4A <AmiBlitz3.ab2@22577>   TST.b fast
00038A4E <AmiBlitz3.ab2@22578>            BEQ 'l1
00038A54 <AmiBlitz3.ab2@22579>            OR.l #$00ff0000,d1
00038A58 <AmiBlitz3.ab2@22580>            BSR writelong
00038A5C <AmiBlitz3.ab2@22581>            BSR writeword
00038A60 <AmiBlitz3.ab2@22582> BRA br2
00038A64 <AmiBlitz3.ab2@22585>   BSR.w writelong
00038A66 <AmiBlitz3.ab2@22588>  MOVEQ.l #$0E,D0
00038A68 <AmiBlitz3.ab2@22589>   MOVEQ.l #$01,D1
00038A6E <AmiBlitz3.ab2@22590>   MOVEA.l _execbase,A6
00038A74 <AmiBlitz3.ab2@22592>   MOVE.l mempool,a0
00038A78 <AmiBlitz3.ab2@22593>   JSR _AllocPooled(a6)
00038A7A <AmiBlitz3.ab2@22594>   MOVEA.l D0,A0
00038A80 <AmiBlitz3.ab2@22595>   MOVE.l firstiff,(A0)
00038A86 <AmiBlitz3.ab2@22596>   MOVE.l A0,firstiff
00038A8A <AmiBlitz3.ab2@22597>   MOVE.l (A7)+,$4(A0)
00038A92 <AmiBlitz3.ab2@22598>   MOVE.l destpointer,$8(A0)
00038A96 <AmiBlitz3.ab2@22599>   MOVE.w (A7)+,$C(A0)
00038A9C <AmiBlitz3.ab2@22600>    JSR reget
00038AA0 <AmiBlitz3.ab2@22601>    BEQ.w JL_0_D10C
00038AA6 <AmiBlitz3.ab2@22602>   BSET #$7,$C(A0)
00038AB0 <AmiBlitz3.ab2@22606>   MOVE.w oldqflag,instringon
00038AB6 <AmiBlitz3.ab2@22607>   MOVEA.l lastsourcepos,A5
00038ABE <AmiBlitz3.ab2@22608>   MOVE.w #$003A,lastchar
00038AC0 <AmiBlitz3.ab2@22611> RTS
00038AC4 <AmiBlitz3.ab2@22615>   CMP.w #$1,D0
00038AC8 <AmiBlitz3.ab2@22616>    BLT.w JL_0_D128
00038ACC <AmiBlitz3.ab2@22617>   CMP.w #$0,D0
00038AD0 <AmiBlitz3.ab2@22618>    BGT.w JL_0_D128
00038AD2 <AmiBlitz3.ab2@22619>   ADD.w D0,D0
00038AD4 <AmiBlitz3.ab2@22620>   ADD.w D0,D0
00038AD8 <AmiBlitz3.ab2@22621>   MOVEA.l JL_0_D128(PC,D0.W),A0
00038ADA <AmiBlitz3.ab2@22624> JMP (A0)
00038ADE <AmiBlitz3.ab2@22627> BRA.w JL_0_D128
00038AE2 <AmiBlitz3.ab2@22631>   CMP.w #$1,D0
00038AE6 <AmiBlitz3.ab2@22632>    BLT.w JL_0_D146
00038AEA <AmiBlitz3.ab2@22633>   CMP.w #$0,D0
00038AEE <AmiBlitz3.ab2@22634>    BGT.w JL_0_D146
00038AF0 <AmiBlitz3.ab2@22635>   ADD.w D0,D0
00038AF2 <AmiBlitz3.ab2@22636>   ADD.w D0,D0
00038AF6 <AmiBlitz3.ab2@22637>   MOVEA.l JL_0_D146(PC,D0.W),A0
00038AF8 <AmiBlitz3.ab2@22640>   JSR (A0)
00038AFC <AmiBlitz3.ab2@22643> BRA.w JL_0_D146
00038B00 <AmiBlitz3.ab2@22647>   CMP.w #$1,D0
00038B04 <AmiBlitz3.ab2@22648>    BLT.w JL_0_D168
00038B08 <AmiBlitz3.ab2@22649>   CMP.w #$0,D0
00038B0C <AmiBlitz3.ab2@22650>    BGT.w JL_0_D168
00038B0E <AmiBlitz3.ab2@22651>   ADD.w D0,D0
00038B10 <AmiBlitz3.ab2@22652>   ADD.w D0,D0
00038B14 <AmiBlitz3.ab2@22653>   MOVEA.l JL_0_D168(PC,D0.W),A0
00038B18 <AmiBlitz3.ab2@22656>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00038B1A <AmiBlitz3.ab2@22659>    JSR (A0)
00038B1E <AmiBlitz3.ab2@22662> BRA.w JL_0_D168
00038B20 <AmiBlitz3.ab2@22665> labcnt:   Ds.w 1
00038B22 <AmiBlitz3.ab2@22672>   MOVEQ.l #$02,D2
00038B26 <AmiBlitz3.ab2@22673>    BSR.w bakeval
00038B2A <AmiBlitz3.ab2@22674>   LEA JL_0_D10E(PC),A0
00038B2E <AmiBlitz3.ab2@22675>   LEA JL_0_D12C(PC),A1
00038B32 <AmiBlitz3.ab2@22676>   MOVE.w #$001A,D1
00038B36 <AmiBlitz3.ab2@22677>   CMP.w #-$7FFB,D0
00038B3A <AmiBlitz3.ab2@22678>    BEQ.w JL_0_D1B6
00038B3E <AmiBlitz3.ab2@22679>   CMP.w #-$7FFA,D0
00038B42 <AmiBlitz3.ab2@22680>    BNE.w JUMP_syntaxerr
00038B46 <AmiBlitz3.ab2@22681>   LEA JL_0_D12C(PC),A0
00038B4A <AmiBlitz3.ab2@22682>   LEA JL_0_D14A(PC),A1
00038B4E <AmiBlitz3.ab2@22683>   MOVE.w #$001A,D1
00038B54 <AmiBlitz3.ab2@22684>   TST.b debugmode
00038B58 <AmiBlitz3.ab2@22685>    BEQ.b JL_0_D1B6
00038B5E <AmiBlitz3.ab2@22686>    JSR chkstak
00038B62 <AmiBlitz3.ab2@22687>   LEA JL_0_D14A(PC),A0
00038B66 <AmiBlitz3.ab2@22688>   LEA labcnt(PC),A1
00038B6A <AmiBlitz3.ab2@22689>   MOVE.w #$001E,D1
00038B6C <AmiBlitz3.ab2@22692>   MOVE.w D1,-(A7)
00038B72 <AmiBlitz3.ab2@22693>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00038B76 <AmiBlitz3.ab2@22694>    BSR.w pokecode
00038B7C <AmiBlitz3.ab2@22695>   CLR.w labcnt
00038B82 <AmiBlitz3.ab2@22700>    JSR get1bytemain
00038B88 <AmiBlitz3.ab2@22701>   SUBQ.l #2,destpointer                                    ;for makealab!
00038B8C <AmiBlitz3.ab2@22702>    BSR.w JL_0_AE22
00038B92 <AmiBlitz3.ab2@22703>   ADDQ.l #2,destpointer
00038B98 <AmiBlitz3.ab2@22704>    JSR addoff
00038B9C <AmiBlitz3.ab2@22705>   MOVE.l $8(A2),D1
00038BA0 <AmiBlitz3.ab2@22706>    BSR.w writelong
00038BA6 <AmiBlitz3.ab2@22707>   ADDQ.w #1,labcnt
00038BAC <AmiBlitz3.ab2@22708>    JSR reget
00038BB0 <AmiBlitz3.ab2@22709>   CMP.w #$2C,D0
00038BB4 <AmiBlitz3.ab2@22710>    BEQ.w JL_0_D1C8
00038BB6 <AmiBlitz3.ab2@22711>   MOVEA.l (A7)+,A0
00038BB8 <AmiBlitz3.ab2@22712>   MOVE.w (A7)+,D2
00038BBE <AmiBlitz3.ab2@22713>   MOVE.w dontwrite,D1
00038BC2 <AmiBlitz3.ab2@22714>    BNE.w JL_0_D21A
00038BC6 <AmiBlitz3.ab2@22715>   MOVE.w labcnt(PC),D1
00038BCA <AmiBlitz3.ab2@22716>   MOVE.w D1,$A(A0)
00038BCC <AmiBlitz3.ab2@22717>   ADD.w D1,D1
00038BCE <AmiBlitz3.ab2@22718>   ADD.w D1,D1
00038BD0 <AmiBlitz3.ab2@22719>   ADDQ.w #2,D1
00038BD4 <AmiBlitz3.ab2@22720>   MOVE.w D1,$2(A0,D2.W)
00038BD6 <AmiBlitz3.ab2@22723> RTS
00038BDC <AmiBlitz3.ab2@22727>   TST.b debugmode
00038BE0 <AmiBlitz3.ab2@22728>    BEQ.w JL_0_D236
00038BE6 <AmiBlitz3.ab2@22729>    JSR chkstak
00038BEC <AmiBlitz3.ab2@22730>   MOVE.l AL_0_D162,D1
00038BF0 <AmiBlitz3.ab2@22731>    BSR.w writelong
00038BF6 <AmiBlitz3.ab2@22733>   MOVE.w gosubcode,D1
00038BFA <AmiBlitz3.ab2@22734> BRA.w JL_0_D246
00038C00 <AmiBlitz3.ab2@22738>   MOVE.w gotocode,D1
00038C02 <AmiBlitz3.ab2@22741>   MOVE.w D1,-(A7)
00038C06 <AmiBlitz3.ab2@22742>    BSR.w JL_0_AE22
00038C08 <AmiBlitz3.ab2@22743>   MOVE.w (A7)+,D1
00038C0C <AmiBlitz3.ab2@22744>    BSR.w writeword
00038C12 <AmiBlitz3.ab2@22745>    JSR addoff
00038C16 <AmiBlitz3.ab2@22746>   MOVE.l $8(A2),D1
00038C1A <AmiBlitz3.ab2@22747> BRA.w writelong
00038C20 <AmiBlitz3.ab2@22751>   MOVE.w proceduremode,D1
00038C24 <AmiBlitz3.ab2@22752>    BEQ.w JUMP_badpenderr
00038C28 <AmiBlitz3.ab2@22753>   MOVE.w #$4EF9,D1
00038C2C <AmiBlitz3.ab2@22754>    BSR.w writeword
00038C32 <AmiBlitz3.ab2@22755>    JSR addoff
00038C38 <AmiBlitz3.ab2@22756>   MOVEA.l _execbase,A6
00038C3A <AmiBlitz3.ab2@22757>   MOVEQ.l #$08,D0
00038C3C <AmiBlitz3.ab2@22758>   MOVEQ.l #$01,D1
00038C42 <AmiBlitz3.ab2@22760>   MOVE.l mempool,a0
00038C46 <AmiBlitz3.ab2@22761>   JSR _AllocPooled(a6)
00038C48 <AmiBlitz3.ab2@22762>   MOVEA.l D0,A0
00038C4E <AmiBlitz3.ab2@22763>   MOVE.l firstpend,(A0)
00038C54 <AmiBlitz3.ab2@22764>   MOVE.l A0,firstpend
00038C5C <AmiBlitz3.ab2@22765>   MOVE.l destpointer,$4(A0)
00038C60 <AmiBlitz3.ab2@22766> BRA.w writelong
00038C64 <AmiBlitz3.ab2@22770>   BSR.w do_AsmExit
00038C6A <AmiBlitz3.ab2@22771> JMP get1bytemain
00038C72 <AmiBlitz3.ab2@22775>   MOVE.b #1,nostringopt
00038C76 <AmiBlitz3.ab2@22776>   MOVEM.l a0/a1/d1,-(a7)
00038C7C <AmiBlitz3.ab2@22777>   MOVEA.l currentfunction,A0
00038C82 <AmiBlitz3.ab2@22778>     CMP.l #0,a0
00038C86 <AmiBlitz3.ab2@22779>     BNE 'l1
00038C8C <AmiBlitz3.ab2@22780>     JMP errorasmexit
00038C8E <AmiBlitz3.ab2@22781> 'l1 MOVEQ.l #$00,D2
00038C92 <AmiBlitz3.ab2@22782>   MOVE.b $5(A0),D2
00038C96 <AmiBlitz3.ab2@22783>   BSR.w eval
00038C9C <AmiBlitz3.ab2@22785>   MOVEA.l currentfunction,A0
00038CA0 <AmiBlitz3.ab2@22786>   MOVE.l funcstruct_returntype(a0),a0
00038CA6 <AmiBlitz3.ab2@22787>   CMP.l #0,a0
00038CAA <AmiBlitz3.ab2@22788>   BEQ 'isstatement
00038CB2 <AmiBlitz3.ab2@22789>   CMP.l #$100,4(a0)
00038CB6 <AmiBlitz3.ab2@22790>   BLT.w 'isvar
00038CB8 <AmiBlitz3.ab2@22791>   MOVE.l a2,a1
00038CBE <AmiBlitz3.ab2@22792>   TST.l typetocast
00038CC2 <AmiBlitz3.ab2@22793>   BEQ 'nocast
00038CC8 <AmiBlitz3.ab2@22794>   MOVE.l typetocast,a1
00038CCA <AmiBlitz3.ab2@22795> 'nocast  CMP.l a0,a1
00038CCE <AmiBlitz3.ab2@22796>   BEQ 'ok
00038CD4 <AmiBlitz3.ab2@22797>   CLR.l typetocast
00038CDA <AmiBlitz3.ab2@22798>   MOVE.l lasttoken,d1
00038CDE <AmiBlitz3.ab2@22799>   CMP.w #$b581,d1                   ; ok, when token for null
00038CE2 <AmiBlitz3.ab2@22800>   BEQ 'isnull
00038CE8 <AmiBlitz3.ab2@22801> 'error  JMP errorconvertreturntype
00038CEC <AmiBlitz3.ab2@22808>   MOVEM.l (a7)+,a0/a1/d1
00038CF0 <AmiBlitz3.ab2@22809> BRA.w do_AsmExit
00038CF6 <AmiBlitz3.ab2@22811> error_convert_types2 JMP error_convert_types
00038CFC <AmiBlitz3.ab2@22824>   TST.b debugmode
00038D00 <AmiBlitz3.ab2@22825>    BEQ.w JL_0_D2CA
00038D04 <AmiBlitz3.ab2@22826>   MOVE.w #$C305,D1
00038D08 <AmiBlitz3.ab2@22827> BRA.w Atokejsr
00038D0C <AmiBlitz3.ab2@22830>   MOVE.w #$4E75,D1
00038D10 <AmiBlitz3.ab2@22831> BRA.w writeword
00038D14 <AmiBlitz3.ab2@22834> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00038D18 <AmiBlitz3.ab2@22835> proclocals:  Ds.l 1                                        ;for debugga!
00038D1A <AmiBlitz3.ab2@22836> procnum:     Ds.w 1
00038D1C <AmiBlitz3.ab2@22837> procnum2:    Ds.w 1
00038D20 <AmiBlitz3.ab2@22838> prolineat:   Ds.l 1
00038D26 <AmiBlitz3.ab2@22842>    TST.w proceduremode
00038D2A <AmiBlitz3.ab2@22843>    BGT JUMP_sreterr
00038D2E <AmiBlitz3.ab2@22844>    CMP.w #-$7FF9,D0
00038D32 <AmiBlitz3.ab2@22845>    BEQ.w JL_0_D29C
00038D34 <AmiBlitz3.ab2@22846>    MOVEQ.l #-$01,D1
00038D38 <AmiBlitz3.ab2@22847> BRA.w do_function2
00038D3E <AmiBlitz3.ab2@22850> JMP sreterr
00038D44 <AmiBlitz3.ab2@22854>   CLR.b skipfunc
00038D4A <AmiBlitz3.ab2@22855>   TST.l unusedfunc
00038D4E <AmiBlitz3.ab2@22856>   BEQ 'ex
00038D52 <AmiBlitz3.ab2@22857>   MOVEM.l d0-d7/a0-a6,-(a7)
00038D58 <AmiBlitz3.ab2@22858>   MOVE.l unusedfunc,d1
00038D5E <AmiBlitz3.ab2@22859>   LEA ptr_parameterstore,a5
00038D60 <AmiBlitz3.ab2@22862>   MOVE.l d1,a0
00038D64 <AmiBlitz3.ab2@22863>   LEA 12(a0),a2
00038D66 <AmiBlitz3.ab2@22864>   MOVE.l a5,a1
00038D68 <AmiBlitz3.ab2@22866>   CMPM.b (a1)+,(a2)+
00038D6C <AmiBlitz3.ab2@22867>   BNE 'neq
00038D6E <AmiBlitz3.ab2@22868>   TST.b (a2)
00038D72 <AmiBlitz3.ab2@22869>   BNE 'ch
00038D74 <AmiBlitz3.ab2@22870>   TST.b (a1)
00038D78 <AmiBlitz3.ab2@22871>   BNE 'neq
00038D80 <AmiBlitz3.ab2@22872>   MOVE.b #1,skipfunc
00038D84 <AmiBlitz3.ab2@22873> BRA 'out
00038D86 <AmiBlitz3.ab2@22876>   MOVE.l (a0),d1
00038D8A <AmiBlitz3.ab2@22877>   BNE 'ag
00038D8E <AmiBlitz3.ab2@22880>   MOVEM.l (a7)+,d0-d7/a0-a6
00038D90 <AmiBlitz3.ab2@22883> RTS
00038D96 <AmiBlitz3.ab2@22887> JMP dupprocerr
00038D9C <AmiBlitz3.ab2@22890> JMP illprocperr
00038DA4 <AmiBlitz3.ab2@22897>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00038DA8 <AmiBlitz3.ab2@22898>    BEQ JUMP_sreterr
00038DAC <AmiBlitz3.ab2@22899>   CMP.w #-$7FF9,D0
00038DB0 <AmiBlitz3.ab2@22900>    BEQ.w do_function_return
00038DBA <AmiBlitz3.ab2@22903>   MOVE.w oldqflag,instringon
00038DC0 <AmiBlitz3.ab2@22904>   MOVEA.l lastsourcepos,A5
00038DC6 <AmiBlitz3.ab2@22905>   JSR getfunctionreturntype
00038DCC <AmiBlitz3.ab2@22906>   JSR get1bytemain
00038DD2 <AmiBlitz3.ab2@22909>   TST.b declare
00038DD6 <AmiBlitz3.ab2@22910>   BEQ 'l1
00038DDE <AmiBlitz3.ab2@22911>   MOVE.b #1,nowdeclare
00038DE4 <AmiBlitz3.ab2@22914>   JSR errchx                                           ;writejumpoverfunction
00038DEA <AmiBlitz3.ab2@22917>   CLR.b fastfunc
00038DF4 <AmiBlitz3.ab2@22918>   MOVE.l firstiff,firstiffstore
00038DFC <AmiBlitz3.ab2@22919>   CMP.l #"FAST",-1(a5)
00038E00 <AmiBlitz3.ab2@22920>   BNE 'nofast
00038E06 <AmiBlitz3.ab2@22921>   CMP.b #" ",3(a5)
00038E0A <AmiBlitz3.ab2@22922>   BNE 'nofast
00038E0C <AmiBlitz3.ab2@22923>   ADDQ.l #3,a5
00038E10 <AmiBlitz3.ab2@22926>     CMP.b #" ",(a5)
00038E14 <AmiBlitz3.ab2@22927>      BNE 'x1
00038E16 <AmiBlitz3.ab2@22928>     ADDQ #1,a5
00038E1A <AmiBlitz3.ab2@22929> BRA 'x2
00038E20 <AmiBlitz3.ab2@22932>   MOVE.l a5,lastsourcepos
00038E28 <AmiBlitz3.ab2@22933>   MOVE.b #1,fastfunc
00038E30 <AmiBlitz3.ab2@22936>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00038E34 <AmiBlitz3.ab2@22937> BRA 'noopt
00038E3A <AmiBlitz3.ab2@22939>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00038E3E <AmiBlitz3.ab2@22940>   BNE 'noopt
00038E40 <AmiBlitz3.ab2@22941>   ADDQ.l #4,a5
00038E44 <AmiBlitz3.ab2@22944>     CMP.b #" ",(a5)
00038E48 <AmiBlitz3.ab2@22945>      BNE 'x1b
00038E4A <AmiBlitz3.ab2@22946>     ADDQ #1,a5
00038E4E <AmiBlitz3.ab2@22947> BRA 'x2b
00038E54 <AmiBlitz3.ab2@22950>   MOVE.l a5,lastsourcepos
00038E5A <AmiBlitz3.ab2@22952>   JSR makename2
00038E5E <AmiBlitz3.ab2@22953> BRA 'l1
00038E64 <AmiBlitz3.ab2@22957>   JSR makename2
00038E6A <AmiBlitz3.ab2@22958>   JSR checkused
00038E70 <AmiBlitz3.ab2@22959>   TST.b skipfunc
00038E74 <AmiBlitz3.ab2@22960>    BEQ 'l1
00038E7A <AmiBlitz3.ab2@22961>   JSR skipme
00038E80 <AmiBlitz3.ab2@22962>   CLR.b fastfunc
00038E82 <AmiBlitz3.ab2@22963> RTS
00038E8C <AmiBlitz3.ab2@22966>   MOVE.l linenumat,prolineat
00038E92 <AmiBlitz3.ab2@22967>   ADDQ.w #1,procnum2
00038E9A <AmiBlitz3.ab2@22968>   MOVE.w procnum2(PC),procnum
00038EA0 <AmiBlitz3.ab2@22969>   MOVE.w D1,proceduremode
00038EA6 <AmiBlitz3.ab2@22970>   CLR.w locvaroff
00038EAA <AmiBlitz3.ab2@22971>   CMP.w #$7B,D0
00038EAE <AmiBlitz3.ab2@22972>    BNE.w JUMP_syntaxerr
00038EB6 <AmiBlitz3.ab2@22973>    MOVE.b #1,infunctioncode
00038EBC <AmiBlitz3.ab2@22974>   MOVEA.l tempvm,A0
00038EC4 <AmiBlitz3.ab2@22975>   MOVE.w $C(A0),memlibstat
00038ECA <AmiBlitz3.ab2@22976>   BCLR #$7,$C(A0)                                          ;Bit out of range
00038ECE <AmiBlitz3.ab2@22977>   MOVE.w #$4EF9,D1
00038ED2 <AmiBlitz3.ab2@22978>    BSR.w writeword
00038ED8 <AmiBlitz3.ab2@22979>    JSR addoff
00038EDC <AmiBlitz3.ab2@22980>    BSR.w writelong
00038EE2 <AmiBlitz3.ab2@22981>    JSR findproc                                          ;findproc function
00038EE6 <AmiBlitz3.ab2@22982>    BEQ.w JUMP_dupprocerr
00038EEC <AmiBlitz3.ab2@22983>    JSR addlabel
00038EF2 <AmiBlitz3.ab2@22984>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00038EF8 <AmiBlitz3.ab2@22985>    MOVE.b #0,isfunc(a2)
00038F00 <AmiBlitz3.ab2@22986>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00038F08 <AmiBlitz3.ab2@22987>   MOVE.l destpointer,$E(A2)
00038F0E <AmiBlitz3.ab2@22988>   MOVE.l A2,currentfunction
00038F14 <AmiBlitz3.ab2@22989>   LEA nops8,A0
00038F1A <AmiBlitz3.ab2@22990>   LEA dataget,A1
00038F1E <AmiBlitz3.ab2@22991>    BSR.w pokecode2
00038F24 <AmiBlitz3.ab2@22992>   TST.b debugmode
00038F28 <AmiBlitz3.ab2@22993>    BEQ.b JL_0_D3AA
00038F2A <AmiBlitz3.ab2@22994>   MOVEQ.l #$04,D1
00038F30 <AmiBlitz3.ab2@22995>    JSR writetrap
00038F3A <AmiBlitz3.ab2@22996>   MOVE.l destpointer,proclocals
00038F3E <AmiBlitz3.ab2@22997>    BSR.w writelong
00038F42 <AmiBlitz3.ab2@22998>    BSR.w writelong
00038F46 <AmiBlitz3.ab2@23001>    LEA $16(A2),A4
00038F4E <AmiBlitz3.ab2@23002>   MOVE.b proceduremode+1,$5(A2)
00038F50 <AmiBlitz3.ab2@23003>   MOVEQ.l #$00,D6
00038F52 <AmiBlitz3.ab2@23004>   MOVEQ.l #$00,D5
00038F58 <AmiBlitz3.ab2@23005>    JSR get1bytemain
00038F5C <AmiBlitz3.ab2@23006>   CMP.w #$7D,D0
00038F60 <AmiBlitz3.ab2@23007>    BEQ.w JL_0_D466
00038F64 <AmiBlitz3.ab2@23010>    CMP.b #"@",d0
00038F68 <AmiBlitz3.ab2@23011>    BNE 'l2
00038F6A <AmiBlitz3.ab2@23012>    MOVE.l a0,-(a7)
00038F70 <AmiBlitz3.ab2@23013>    MOVE.l currentfunction,a0
00038F76 <AmiBlitz3.ab2@23014>    CMP.b #31,$20(a0)                                       ;increase if morepars
00038F7A <AmiBlitz3.ab2@23015>    BNE 'l1
00038F7E <AmiBlitz3.ab2@23016>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00038F84 <AmiBlitz3.ab2@23019>    JSR get1bytemain
00038F86 <AmiBlitz3.ab2@23020>    MOVE.l (a7)+,a0
00038F8A <AmiBlitz3.ab2@23023>    BSR.w getparameter
00038F8E <AmiBlitz3.ab2@23024>    BSR.w JL_0_8E3C
00038F96 <AmiBlitz3.ab2@23025>   CMPI.l #$7,$4(A2)
00038F9A <AmiBlitz3.ab2@23026>    BNE.w JL_0_D3F6
00038FA0 <AmiBlitz3.ab2@23027>   LEA stbuff,A0
00038FA2 <AmiBlitz3.ab2@23028>   MOVE.w D5,D1
00038FA4 <AmiBlitz3.ab2@23029>   LSL.w #2,D1
00038FA8 <AmiBlitz3.ab2@23030>   MOVE.w D6,$0(A0,D1.W)
00038FAE <AmiBlitz3.ab2@23031>   MOVE.w $4(A3),$2(A0,D1.W)
00038FB0 <AmiBlitz3.ab2@23032>   ADDQ.w #1,D5
00038FB2 <AmiBlitz3.ab2@23033>   MOVEQ.l #$07,D2
00038FB6 <AmiBlitz3.ab2@23034> BRA.w JL_0_D442
00038FBC <AmiBlitz3.ab2@23037> JMP toovarerr
00038FC0 <AmiBlitz3.ab2@23040>   MOVE.w #$2940,D1
00038FC2 <AmiBlitz3.ab2@23041>   MOVEQ.l #$03,D2
00038FCA <AmiBlitz3.ab2@23042>   BTST #$0,flagmask+1
00038FCE <AmiBlitz3.ab2@23043>    BNE.w JL_0_D430
00038FD6 <AmiBlitz3.ab2@23044>   CMPI.l #$100,$4(A2)
00038FDA <AmiBlitz3.ab2@23045>    BCC.w JUMP_illprocperr
00038FDE <AmiBlitz3.ab2@23046>   MOVE.w $6(A2),D2
00038FE2 <AmiBlitz3.ab2@23047>   CMP.w #$2,D2
00038FE6 <AmiBlitz3.ab2@23048>    BHI.w JL_0_D430
00038FEA <AmiBlitz3.ab2@23049>    BEQ.w JL_0_D42C
00038FEE <AmiBlitz3.ab2@23050>   EORI.w #$3000,D1
00038FF2 <AmiBlitz3.ab2@23051> BRA.w JL_0_D430
00038FF8 <AmiBlitz3.ab2@23054> JMP more6pard
00038FFC <AmiBlitz3.ab2@23057>   ORI.w #$1000,D1
00038FFE <AmiBlitz3.ab2@23060>   OR.w D6,D1
00039004 <AmiBlitz3.ab2@23061>   TST.b fpu
00039008 <AmiBlitz3.ab2@23062>   BEQ 'nofpu
0003900C <AmiBlitz3.ab2@23063>   CMP.b #5,d2
00039010 <AmiBlitz3.ab2@23064>   BNE 'nofpu
00039014 <AmiBlitz3.ab2@23065>   CMP.w #6,d6
00039018 <AmiBlitz3.ab2@23066>   BLT 'l10a
0003901E <AmiBlitz3.ab2@23067>   CMP.l #newtype_double,a2
00039022 <AmiBlitz3.ab2@23068>   BEQ JUMP_more6pard
00039026 <AmiBlitz3.ab2@23069> BRA 'nofpu
0003902C <AmiBlitz3.ab2@23072>   MOVE.l #$f22c6400,d1
00039030 <AmiBlitz3.ab2@23073>   MOVEM.l d0/a4,-(a7)
00039032 <AmiBlitz3.ab2@23074>   MOVE.l d6,d0
00039034 <AmiBlitz3.ab2@23075>   ASL.l #7,d0
00039036 <AmiBlitz3.ab2@23076>   OR.w d0,d1
0003903C <AmiBlitz3.ab2@23077>   CMP.l #newtype_double,a2
00039040 <AmiBlitz3.ab2@23078>   BNE 'l1
00039046 <AmiBlitz3.ab2@23079>   OR.l #$1000,d1
0003904A <AmiBlitz3.ab2@23082>   BSR writelong
0003904E <AmiBlitz3.ab2@23083>   MOVE.w 4(a3),d1
00039052 <AmiBlitz3.ab2@23084>   BSR writeword
00039056 <AmiBlitz3.ab2@23085>   MOVEM.l (a7)+,a4/d0
0003905A <AmiBlitz3.ab2@23086> BRA JL_0_D442
0003905C <AmiBlitz3.ab2@23089>   MOVE.l A4,-(A7)
00039060 <AmiBlitz3.ab2@23090>    CMP.w #6,d6
00039064 <AmiBlitz3.ab2@23091>    BLT 'l10
00039068 <AmiBlitz3.ab2@23092>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
0003906A <AmiBlitz3.ab2@23093>    ADD.w d6,d1
00039070 <AmiBlitz3.ab2@23094>    JSR Atokejsr
00039076 <AmiBlitz3.ab2@23095>    TST.w dontwrite
0003907A <AmiBlitz3.ab2@23096>    BNE 'l10
00039080 <AmiBlitz3.ab2@23097>    MOVE.l data1start,d1
00039086 <AmiBlitz3.ab2@23098>    MOVE.l destpointer,a4
0003908A <AmiBlitz3.ab2@23099>    ADD.l d1,-6(a4)
00039090 <AmiBlitz3.ab2@23100>    MOVE.l destpointer,d1
00039092 <AmiBlitz3.ab2@23101>    SUBQ.l #6,d1
00039098 <AmiBlitz3.ab2@23102>    SUB.l destbufferstart,d1
0003909A <AmiBlitz3.ab2@23104>    MOVE.l d2,-(a7)
0003909C <AmiBlitz3.ab2@23105>    MOVE.l d1,d2
000390A2 <AmiBlitz3.ab2@23106>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000390A4 <AmiBlitz3.ab2@23107>    MOVE.l (a7)+,d2
000390AA <AmiBlitz3.ab2@23108>    MOVE.l destpointer,a4
000390AE <AmiBlitz3.ab2@23109>    CMP.w #2,d2
000390B2 <AmiBlitz3.ab2@23110>    BNE 'nw1
000390B8 <AmiBlitz3.ab2@23112>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
000390C0 <AmiBlitz3.ab2@23113>    ADD.l #2,-6(a4)
000390C4 <AmiBlitz3.ab2@23116>    CMP.w #1,d2
000390C8 <AmiBlitz3.ab2@23117>    BNE 'nb
000390CE <AmiBlitz3.ab2@23118>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000390D6 <AmiBlitz3.ab2@23119>    ADD.l #3,-6(a4)
000390DC <AmiBlitz3.ab2@23122>    MOVE.w $4(a3),-2(a4)
000390E0 <AmiBlitz3.ab2@23123> BRA 'ne1
000390E4 <AmiBlitz3.ab2@23126>   BSR.w writeword                                          ;write storeparameter
000390E8 <AmiBlitz3.ab2@23129>   MOVE.w $4(A3),D1
000390EC <AmiBlitz3.ab2@23130>    BSR.w writeword
000390EE <AmiBlitz3.ab2@23133>   MOVEA.l (A7)+,A4
000390F4 <AmiBlitz3.ab2@23136>   CLR.l functionreturntype
000390F6 <AmiBlitz3.ab2@23137>   ADDQ.w #1,D6
000390FA <AmiBlitz3.ab2@23138>   CMP.w #11,D6                                             ;max function parameters
000390FE <AmiBlitz3.ab2@23139>    BCC.w JUMP_toovarerr
00039104 <AmiBlitz3.ab2@23140>   MOVE.l currentfunction,a0
00039108 <AmiBlitz3.ab2@23141>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
0003910A <AmiBlitz3.ab2@23142>   MOVE.b D2,(A4)+
0003910E <AmiBlitz3.ab2@23143>   CMP.w #$2C,D0
00039112 <AmiBlitz3.ab2@23144>    BNE.w JL_0_D45E
00039118 <AmiBlitz3.ab2@23145>    JSR get1bytemain
0003911C <AmiBlitz3.ab2@23157> BRA.w JL_0_D3C6
00039120 <AmiBlitz3.ab2@23160>   CMP.w #$7D,D0
00039124 <AmiBlitz3.ab2@23161>    BNE.w JUMP_syntaxerr
0003912A <AmiBlitz3.ab2@23164>   MOVEA.l currentfunction,A2
0003912C <AmiBlitz3.ab2@23165>   LSL.w #4,D5
0003912E <AmiBlitz3.ab2@23166>   OR.w D5,D6
00039132 <AmiBlitz3.ab2@23167>   MOVE.b D6,$4(A2)
00039134 <AmiBlitz3.ab2@23168>   LSR.w #4,D6
00039138 <AmiBlitz3.ab2@23169>    BEQ.w JL_0_D4C4
0003913E <AmiBlitz3.ab2@23170>   LEA stbuff,A0
00039140 <AmiBlitz3.ab2@23171>   SUBQ.w #1,D6
00039142 <AmiBlitz3.ab2@23174>     MOVE.w D6,D1                                           ;function stringpars
00039144 <AmiBlitz3.ab2@23175>     LSL.w #2,D1                                            ;stringsize was 2
00039146 <AmiBlitz3.ab2@23177>       LSL.w #1,d1
00039148 <AmiBlitz3.ab2@23178>       ADDQ.w #4,d1
0003914A <AmiBlitz3.ab2@23180>     ADDQ.w #8,D1
00039150 <AmiBlitz3.ab2@23181>     MOVE.w D1,funcst+2
00039156 <AmiBlitz3.ab2@23182>     MOVE.l funcst,D1
0003915A <AmiBlitz3.ab2@23183>     BSR.w writelong
0003915C <AmiBlitz3.ab2@23184>     MOVE.w (A0)+,D1
00039160 <AmiBlitz3.ab2@23185>     CMP.b #5,d1
00039164 <AmiBlitz3.ab2@23186>     BLE 's1
00039168 <AmiBlitz3.ab2@23187>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
0003916C <AmiBlitz3.ab2@23188>     BSR writeinstruction
0003916E <AmiBlitz3.ab2@23189>     MOVE.w D6,D1                                           ;function stringpars
00039170 <AmiBlitz3.ab2@23190>     LSL.w #2,D1                                            ;stringsize was 2
00039172 <AmiBlitz3.ab2@23192>       LSL.w #1,d1
00039174 <AmiBlitz3.ab2@23194>     ADDQ.w #8,D1
00039178 <AmiBlitz3.ab2@23195>     BSR writeword
0003917C <AmiBlitz3.ab2@23196>   BRA 's2
00039182 <AmiBlitz3.ab2@23199>     OR.w movedna3,D1
00039186 <AmiBlitz3.ab2@23200>      BSR.w writeword
0003918C <AmiBlitz3.ab2@23203>     MOVE.w (A0)+,least+2
00039192 <AmiBlitz3.ab2@23204>     MOVE.l least,D1
00039196 <AmiBlitz3.ab2@23205>      BSR.w writelong
00039198 <AmiBlitz3.ab2@23206>     MOVE.l A0,-(A7)
0003919C <AmiBlitz3.ab2@23207>     MOVE.w #$C700,D1
000391A0 <AmiBlitz3.ab2@23208>      BSR.w Atokejsr
000391A2 <AmiBlitz3.ab2@23209>     MOVEA.l (A7)+,A0
000391A6 <AmiBlitz3.ab2@23210>   DBF D6,JL_0_D482
000391AC <AmiBlitz3.ab2@23213> JMP get1bytemain
000391B2 <AmiBlitz3.ab2@23217>   MOVE.w dontwrite,D1
000391B6 <AmiBlitz3.ab2@23218>    BNE.w JL_0_D4F6
000391BC <AmiBlitz3.ab2@23219>   MOVE.l destpointer,-(A7)
000391C2 <AmiBlitz3.ab2@23220>   MOVE.l A0,destpointer
000391C8 <AmiBlitz3.ab2@23221>   MOVE.l linksize,D1
000391CC <AmiBlitz3.ab2@23222>    BSR.w writelong                                         ;writefunctions jumppos
000391D2 <AmiBlitz3.ab2@23223>    TST.b fastfunc
000391D6 <AmiBlitz3.ab2@23224>    BNE 'skip
000391DA <AmiBlitz3.ab2@23225>   MOVE.w #$CC00,D1
000391DE <AmiBlitz3.ab2@23226>    BSR.w tokejsr2                                          ;write clearvars
000391E4 <AmiBlitz3.ab2@23229>   MOVE.l (A7)+,destpointer
000391E6 <AmiBlitz3.ab2@23232> RTS
000391EC <AmiBlitz3.ab2@23236>   MOVEA.l currentfunction,A2
000391F0 <AmiBlitz3.ab2@23237>   MOVEA.l $E(A2),A0
000391F4 <AmiBlitz3.ab2@23238>   MOVE.w $6(A2),D1
000391F8 <AmiBlitz3.ab2@23239>    BEQ.w JL_0_D538
000391FE <AmiBlitz3.ab2@23240>   MOVE.w D1,linksize+2
00039202 <AmiBlitz3.ab2@23241>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00039206 <AmiBlitz3.ab2@23242>    BNE.w JL_0_D522
00039208 <AmiBlitz3.ab2@23243>   ADDQ.w #6,A0
0003920C <AmiBlitz3.ab2@23244>   MOVE.l A0,$E(A2)
00039210 <AmiBlitz3.ab2@23245> BRA.w JL_0_D4C8
00039212 <AmiBlitz3.ab2@23248>   MOVE.l A0,-(A7)
00039216 <AmiBlitz3.ab2@23249>    BSR.w JL_0_D4C8
00039218 <AmiBlitz3.ab2@23250>   MOVEA.l (A7)+,A0
0003921C <AmiBlitz3.ab2@23251>   LEA $A(A0),A0
00039222 <AmiBlitz3.ab2@23252>   MOVEA.l currentfunction,A2
00039226 <AmiBlitz3.ab2@23253> BRA.w JL_0_D54A
0003922A <AmiBlitz3.ab2@23256>   MOVE.w $8(A2),D1
0003922E <AmiBlitz3.ab2@23257>    BNE.w JL_0_D54A
00039232 <AmiBlitz3.ab2@23258>   LEA $10(A0),A0
00039236 <AmiBlitz3.ab2@23259>   MOVE.l A0,$E(A2)
00039238 <AmiBlitz3.ab2@23260> RTS
0003923E <AmiBlitz3.ab2@23264> JMP errormsg_nofast
00039244 <AmiBlitz3.ab2@23267>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00039248 <AmiBlitz3.ab2@23268>    BNE.w JL_0_D580
0003924E <AmiBlitz3.ab2@23269>    TST.b fastfunc
00039252 <AmiBlitz3.ab2@23270>    BNE JUMP_errormsg_nofast
00039258 <AmiBlitz3.ab2@23271>   MOVE.l destpointer,-(A7)
0003925E <AmiBlitz3.ab2@23272>   MOVE.l A0,destpointer
00039262 <AmiBlitz3.ab2@23273>   MOVE.w #$4EB9,D1
00039266 <AmiBlitz3.ab2@23274>    BSR.w writeword
0003926C <AmiBlitz3.ab2@23275>    JSR addoff
00039270 <AmiBlitz3.ab2@23276>    BSR.w writelong
00039272 <AmiBlitz3.ab2@23277>   MOVEA.l (A7)+,A0
00039278 <AmiBlitz3.ab2@23278>   MOVEA.l destpointer,A1
0003927A <AmiBlitz3.ab2@23279>   MOVE.l A0,-(A1)
00039280 <AmiBlitz3.ab2@23280>   MOVE.l A0,destpointer
00039284 <AmiBlitz3.ab2@23283>   MOVE.w $8(A2),D4
00039288 <AmiBlitz3.ab2@23284>    BPL.w JL_0_D59E
0003928C <AmiBlitz3.ab2@23285>   MOVE.w #$C004,D1
00039290 <AmiBlitz3.ab2@23286>    BSR.w tokejsr2
00039296 <AmiBlitz3.ab2@23287>   MOVEA.l currentfunction,A2
0003929A <AmiBlitz3.ab2@23288>   MOVE.w $8(A2),D4
0003929E <AmiBlitz3.ab2@23289>   ANDI.w #$7FFF,D4
000392A2 <AmiBlitz3.ab2@23292>    BEQ.w JL_0_D5E0
000392A6 <AmiBlitz3.ab2@23293>   MOVE.b $4(A2),D1
000392AA <AmiBlitz3.ab2@23294>   ANDI.w #$F,D1
000392AC <AmiBlitz3.ab2@23295>   MOVE.w D1,-(A7)
000392B0 <AmiBlitz3.ab2@23296>   CMP.w #$5,D1
000392B4 <AmiBlitz3.ab2@23297>    BCS.w JL_0_D5BC
000392B8 <AmiBlitz3.ab2@23298>   MOVE.w #$2F04,D1
000392BC <AmiBlitz3.ab2@23299>    BSR.w writeword
000392C2 <AmiBlitz3.ab2@23302>   MOVE.l locdatast,D3
000392C8 <AmiBlitz3.ab2@23303>    JSR datastart
000392CC <AmiBlitz3.ab2@23304>   MOVE.w #$C501,D1
000392D0 <AmiBlitz3.ab2@23305>    BSR.w tokejsr2
000392D2 <AmiBlitz3.ab2@23306>   MOVE.w (A7)+,D1
000392D6 <AmiBlitz3.ab2@23307>   CMP.w #$5,D1
000392DA <AmiBlitz3.ab2@23308>    BCS.w JL_0_D5E0
000392DE <AmiBlitz3.ab2@23309>   MOVE.w #$281F,D1
000392E2 <AmiBlitz3.ab2@23310>    BSR.w writeword
000392E6 <AmiBlitz3.ab2@23312>   MOVE.w #$4E75,D1
000392EA <AmiBlitz3.ab2@23313> BRA.w writeword
000392F0 <AmiBlitz3.ab2@23317>   LEA mwait,A0
000392F6 <AmiBlitz3.ab2@23318>   LEA mwaitf,A1
000392FA <AmiBlitz3.ab2@23319> BRA.w pokecode
00039300 <AmiBlitz3.ab2@23323> JMP laberr
00039304 <AmiBlitz3.ab2@23326>   CMP.w #$2E,D0
00039308 <AmiBlitz3.ab2@23327>   BNE.w JUMP_syntaxerr
0003930E <AmiBlitz3.ab2@23328>   JSR getparameter2
00039312 <AmiBlitz3.ab2@23329>   BEQ.w JUMP_laberr
00039318 <AmiBlitz3.ab2@23330>   LEA newtypebase,A2
0003931E <AmiBlitz3.ab2@23331>   JSR findtype
00039322 <AmiBlitz3.ab2@23332>   BNE.w JL_0_D626
0003932A <AmiBlitz3.ab2@23333>   CMPI.l #MaxByte,$4(A2)
0003932E <AmiBlitz3.ab2@23334>   BNE.w JUMP_typeerr
00039332 <AmiBlitz3.ab2@23335> BRA.w JL_0_D62A
00039338 <AmiBlitz3.ab2@23338> JMP typeerr
0003933E <AmiBlitz3.ab2@23341>   JSR addlabel
00039342 <AmiBlitz3.ab2@23344>   CLR.l $4(A2)
00039348 <AmiBlitz3.ab2@23345>   MOVE.l A2,thistype
0003934E <AmiBlitz3.ab2@23346>   CLR.l prevtype
00039354 <AmiBlitz3.ab2@23347>   CLR.w typelen
0003935A <AmiBlitz3.ab2@23348>   CLR.w linemode
00039360 <AmiBlitz3.ab2@23349>   JSR reget
00039364 <AmiBlitz3.ab2@23350>   BNE.w typemode
00039366 <AmiBlitz3.ab2@23351> RTS
0003936A <AmiBlitz3.ab2@23354>   CMP.w #-$7FFE,D0
0003936E <AmiBlitz3.ab2@23355>   BEQ.w JL_0_D82E
00039378 <AmiBlitz3.ab2@23357>   MOVE.w oldqflag,instringon
0003937E <AmiBlitz3.ab2@23358>   MOVEA.l lastsourcepos,A5
00039380 <AmiBlitz3.ab2@23359>   MOVEQ.l #$00,D6
00039384 <AmiBlitz3.ab2@23360>   CMP.w #$2A,D0
00039388 <AmiBlitz3.ab2@23361>   BNE.w JL_0_D670
0003938A <AmiBlitz3.ab2@23362>   MOVEQ.l #$01,D6
00039390 <AmiBlitz3.ab2@23363>   JSR get1bytemain
00039394 <AmiBlitz3.ab2@23364> BRA.w JL_0_D67E
00039398 <AmiBlitz3.ab2@23367>   CMP.w #$40,D0
0003939C <AmiBlitz3.ab2@23368>   BNE.w JL_0_D67E
0003939E <AmiBlitz3.ab2@23369>   MOVEQ.l #$05,D6
000393A4 <AmiBlitz3.ab2@23370>   JSR get1bytemain
000393AA <AmiBlitz3.ab2@23373>   MOVE.w D6,flagmask
000393B0 <AmiBlitz3.ab2@23374>   JSR getparameter2
000393B4 <AmiBlitz3.ab2@23375>   BEQ.w JUMP_syntaxerr
000393BA <AmiBlitz3.ab2@23376>   MOVEA.l thistype,A2
000393BC <AmiBlitz3.ab2@23377>   ADDQ.w #4,A2
000393C2 <AmiBlitz3.ab2@23378>   JSR findvariable2
000393C6 <AmiBlitz3.ab2@23379>   BEQ.w JUMP_dupofferr
000393CC <AmiBlitz3.ab2@23380>   JSR addlabel
000393CE <AmiBlitz3.ab2@23381>   MOVE.l A2,-(A7)
000393D2 <AmiBlitz3.ab2@23382>   CMP.w #$2E,D0
000393D6 <AmiBlitz3.ab2@23383>    BEQ.w JL_0_D6CE
000393DA <AmiBlitz3.ab2@23384>   CMP.w #$24,D0
000393DE <AmiBlitz3.ab2@23385>    BNE.w JL_0_D6C0
000393E4 <AmiBlitz3.ab2@23386>   MOVE.l #newtype_string,D2
000393EA <AmiBlitz3.ab2@23387>    JSR get1bytemain
000393EE <AmiBlitz3.ab2@23388> BRA.w JL_0_D710
000393F4 <AmiBlitz3.ab2@23391> JMP dupofferr
000393FA <AmiBlitz3.ab2@23394>   MOVE.l prevtype,D2
000393FE <AmiBlitz3.ab2@23395>   BEQ.w JUMP_notypeerr
00039402 <AmiBlitz3.ab2@23396> BRA.w JL_0_D706
00039408 <AmiBlitz3.ab2@23399> JMP notypeerr
0003940E <AmiBlitz3.ab2@23402>   JSR getparameter2
00039412 <AmiBlitz3.ab2@23403>    BEQ.w JUMP_syntaxerr
00039418 <AmiBlitz3.ab2@23404>   LEA newtypebase,A2
0003941E <AmiBlitz3.ab2@23405>    JSR findtype
00039422 <AmiBlitz3.ab2@23406>    BEQ.w JL_0_D704
0003942A <AmiBlitz3.ab2@23407>   BTST #$0,flagmask+1
0003942E <AmiBlitz3.ab2@23408>    BEQ.w JUMP_notypeerr
00039434 <AmiBlitz3.ab2@23409>   JSR addlabel
0003943C <AmiBlitz3.ab2@23412>   MOVE.w linenumat+2,$8(A2)
00039444 <AmiBlitz3.ab2@23413>   MOVE.l #MaxByte,$4(A2)
00039446 <AmiBlitz3.ab2@23416>   MOVE.l A2,D2
0003944C <AmiBlitz3.ab2@23419>   CMP.l #newtype_byte,D2
00039450 <AmiBlitz3.ab2@23420>    BEQ.w JL_0_D71E
00039456 <AmiBlitz3.ab2@23423>   ADDQ.w #1,typelen
0003945E <AmiBlitz3.ab2@23424>   BCLR #$0,typelen+1
00039460 <AmiBlitz3.ab2@23427>   MOVEQ.l #$00,D3
00039462 <AmiBlitz3.ab2@23428>   MOVEA.l D2,A2
00039468 <AmiBlitz3.ab2@23429>   MOVE.l A2,prevtype
0003946C <AmiBlitz3.ab2@23430>   MOVE.w $8(A2),D3
0003946E <AmiBlitz3.ab2@23431>   MOVEA.l (A7)+,A2
00039472 <AmiBlitz3.ab2@23432>   MOVE.l D2,$A(A2)
00039474 <AmiBlitz3.ab2@23433>   MOVEQ.l #$00,D4
0003947A <AmiBlitz3.ab2@23434>   MOVE.w typelen,D4
0003947E <AmiBlitz3.ab2@23435>   MOVE.w D4,$4(A2)
00039486 <AmiBlitz3.ab2@23436>   BTST #$0,flagmask+1
0003948A <AmiBlitz3.ab2@23437>    BEQ.w JL_0_D74C
0003948C <AmiBlitz3.ab2@23438>   MOVEQ.l #$04,D3
00039490 <AmiBlitz3.ab2@23441>   CMP.w #$5B,D0
00039494 <AmiBlitz3.ab2@23442>    BNE.w JL_0_D782
00039498 <AmiBlitz3.ab2@23443>   MOVEM.l D3-D4/A2,-(A7)
0003949C <AmiBlitz3.ab2@23444>    BSR.w AJL_0_BF6E
000394A0 <AmiBlitz3.ab2@23445>   CMP.w #$5D,D0
000394A4 <AmiBlitz3.ab2@23446>    BNE.w JUMP_syntaxerr
000394A6 <AmiBlitz3.ab2@23447>   TST.w D6
000394AA <AmiBlitz3.ab2@23448>    BNE.w JUMP_fpconerr
000394AC <AmiBlitz3.ab2@23449>   MOVE.l D3,D1
000394B0 <AmiBlitz3.ab2@23450>   MOVEM.l (A7)+,D3-D4/A2
000394B6 <AmiBlitz3.ab2@23451>    JSR get1bytemain
000394BA <AmiBlitz3.ab2@23452>   MOVE.w D1,$8(A2)
000394BE <AmiBlitz3.ab2@23453>   MULU.l d1,d3                                             ;>32k fix was mulu.w
000394C6 <AmiBlitz3.ab2@23454>   ORI.w #$2,flagmask
000394C8 <AmiBlitz3.ab2@23457>   ADD.l D3,D4
000394CE <AmiBlitz3.ab2@23460>     CMP.l #65532,d4
000394D2 <AmiBlitz3.ab2@23465>   BCC JUMP_toolongerr
000394DA <AmiBlitz3.ab2@23466>   MOVE.w flagmask,$6(A2)
000394E0 <AmiBlitz3.ab2@23467>   MOVE.w D4,typelen
000394E2 <AmiBlitz3.ab2@23468> RTS
000394E8 <AmiBlitz3.ab2@23471> JMP badenderr
000394EE <AmiBlitz3.ab2@23474> JMP noiferr
000394F4 <AmiBlitz3.ab2@23477> JMP toolongerr
000394FA <AmiBlitz3.ab2@23480> JMP fpconerr
00039500 <AmiBlitz3.ab2@23483>   MOVE.l firstiff,D0
00039504 <AmiBlitz3.ab2@23484>    BEQ.w JUMP_noiferr
00039506 <AmiBlitz3.ab2@23485>   MOVEA.l D0,A0
0003950A <AmiBlitz3.ab2@23486>   MOVE.w $C(A0),D0
0003950E <AmiBlitz3.ab2@23487>   ANDI.w #$FF,D0
00039510 <AmiBlitz3.ab2@23488>   CMP.w D0,D1
00039514 <AmiBlitz3.ab2@23489>    BNE.w JUMP_badenderr
00039518 <AmiBlitz3.ab2@23492>   CMP.w #$1,D1
0003951C <AmiBlitz3.ab2@23493>   BNE.w JL_0_D7D8
00039520 <AmiBlitz3.ab2@23494>   MOVE.w #$6000,D1
00039526 <AmiBlitz3.ab2@23497>     TST.b fast
0003952A <AmiBlitz3.ab2@23498>     BEQ 'l1
00039530 <AmiBlitz3.ab2@23499>     OR.l #$ff,d1
00039534 <AmiBlitz3.ab2@23503>   BSR.w writeword
0003953A <AmiBlitz3.ab2@23504>   MOVEA.l destpointer,A1
0003953E <AmiBlitz3.ab2@23505>   MOVE.l $4(A0),D1
00039540 <AmiBlitz3.ab2@23506>   SUB.l A1,D1
00039546 <AmiBlitz3.ab2@23509>     TST.b fast
0003954A <AmiBlitz3.ab2@23510>     BEQ 'l2
0003954E <AmiBlitz3.ab2@23511>     BSR writelong
00039552 <AmiBlitz3.ab2@23512>   BRA JL_0_D7D8
00039556 <AmiBlitz3.ab2@23516>   BSR.w writeword
0003955A <AmiBlitz3.ab2@23519>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00039560 <AmiBlitz3.ab2@23520>   MOVE.l destpointer,D1
00039562 <AmiBlitz3.ab2@23521>   SUB.l A1,D1
00039568 <AmiBlitz3.ab2@23524>     TST.b fast
0003956C <AmiBlitz3.ab2@23525>     BEQ 'l1
0003956E <AmiBlitz3.ab2@23526>     ADDQ.l #4,D1
00039574 <AmiBlitz3.ab2@23527>     MOVE.w dontwrite,D0
00039578 <AmiBlitz3.ab2@23528>     BNE.w JL_0_D7FE
0003957C <AmiBlitz3.ab2@23529>     MOVE.l d1,-$4(a1)
00039580 <AmiBlitz3.ab2@23530>   BRA JL_0_D7FE
00039582 <AmiBlitz3.ab2@23534>   ADDQ.l #2,d1
00039588 <AmiBlitz3.ab2@23535>   TST.w dontwrite
0003958C <AmiBlitz3.ab2@23536>   BNE JL_0_D7FE
00039592 <AmiBlitz3.ab2@23537>   CMP.l #MinWordSgnd,D1
00039596 <AmiBlitz3.ab2@23538>   BCC.w JUMP_bigiferr
0003959A <AmiBlitz3.ab2@23539>   MOVE.w D1,-$2(A1)
0003959C <AmiBlitz3.ab2@23542> RTS
000395A2 <AmiBlitz3.ab2@23545> JMP bigiferr
000395AC <AmiBlitz3.ab2@23550>   MOVE.w oldqflag,instringon
000395B2 <AmiBlitz3.ab2@23551>   MOVEA.l lastsourcepos,A5
000395B4 <AmiBlitz3.ab2@23554>   MOVEQ.l #$01,D1
000395B8 <AmiBlitz3.ab2@23555> BRA.w JL_0_D810
000395C2 <AmiBlitz3.ab2@23559>   MOVE.w oldqflag,instringon
000395C8 <AmiBlitz3.ab2@23560>   MOVEA.l lastsourcepos,A5
000395CA <AmiBlitz3.ab2@23563>   MOVEQ.l #$00,D1
000395CE <AmiBlitz3.ab2@23566>   BSR.w JL_0_D79E
000395D2 <AmiBlitz3.ab2@23567>   BSR.w AJL_0_D81C
000395D8 <AmiBlitz3.ab2@23568> JMP get1bytemain
000395DE <AmiBlitz3.ab2@23571>   MOVE.l (A0),firstiff
000395E0 <AmiBlitz3.ab2@23572>   MOVEA.l A0,A1
000395E2 <AmiBlitz3.ab2@23573>   MOVEQ.l #$0E,D0
000395E8 <AmiBlitz3.ab2@23574>   MOVEA.l _execbase,A6
000395EE <AmiBlitz3.ab2@23575>   MOVE.l mempool,a0
000395F2 <AmiBlitz3.ab2@23576> JMP _FreePooled(A6)
000395F8 <AmiBlitz3.ab2@23580>   JSR get1bytemain
000395FC <AmiBlitz3.ab2@23583>   BEQ.w JL_0_D980
00039604 <AmiBlitz3.ab2@23584>   CMP.l #"noa7",-1(a5)
00039608 <AmiBlitz3.ab2@23585>   BNE 'l1
0003960E <AmiBlitz3.ab2@23586>   JSR get1bytemain
00039614 <AmiBlitz3.ab2@23587>   JSR get1bytemain
0003961A <AmiBlitz3.ab2@23588>   JSR get1bytemain
00039622 <AmiBlitz3.ab2@23589>   MOVE.w #$3a,lastchar
00039626 <AmiBlitz3.ab2@23590> BRA JL_0_D980
0003962C <AmiBlitz3.ab2@23593>   CMP.w #"d0",-1(a5)
00039630 <AmiBlitz3.ab2@23594>   BNE 'l2
00039638 <AmiBlitz3.ab2@23595>   MOVE.b #1,returncode
0003963E <AmiBlitz3.ab2@23596>   CLR.w lastchar
00039642 <AmiBlitz3.ab2@23597> BRA JL_0_D980
00039646 <AmiBlitz3.ab2@23600>   CMP.w #$80d7,d0
0003964A <AmiBlitz3.ab2@23601>   BNE JL_0_D836
00039650 <AmiBlitz3.ab2@23602>   JSR skiprest
00039652 <AmiBlitz3.ab2@23603> RTS
00039656 <AmiBlitz3.ab2@23606>   BSR.w JL_0_D844
0003965C <AmiBlitz3.ab2@23607>   JSR reget
00039660 <AmiBlitz3.ab2@23608>   BNE.w JL_0_D836
00039662 <AmiBlitz3.ab2@23609> RTS
00039666 <AmiBlitz3.ab2@23612>   CMP.w #-$7FFF,D0
0003966A <AmiBlitz3.ab2@23613>    BNE.w JL_0_D87E
00039670 <AmiBlitz3.ab2@23614>   MOVE.w linemode,D1
00039674 <AmiBlitz3.ab2@23615>    BNE.w JUMP_modeerr
0003967A <AmiBlitz3.ab2@23616>   ADDQ.w #1,typelen
00039682 <AmiBlitz3.ab2@23617>   BCLR #$0,typelen+1
00039688 <AmiBlitz3.ab2@23618>   MOVEA.l thistype,A0
00039690 <AmiBlitz3.ab2@23619>   MOVE.w typelen,$8(A0)
00039698 <AmiBlitz3.ab2@23620>   MOVE.w #$FFFF,linemode
0003969E <AmiBlitz3.ab2@23621> JMP get1bytemain
000396A4 <AmiBlitz3.ab2@23624> JMP modeerr
000396A8 <AmiBlitz3.ab2@23627>   CMP.w #-$7FF5,D0
000396AC <AmiBlitz3.ab2@23628>    BEQ.w JL_0_D80E
000396B0 <AmiBlitz3.ab2@23629>   CMP.w #-$7FF4,D0
000396B4 <AmiBlitz3.ab2@23630>    BEQ.w JL_0_D804
000396B8 <AmiBlitz3.ab2@23631>   CMP.w #-$7FF8,D0
000396BC <AmiBlitz3.ab2@23632>    BNE.w JL_0_D89A
000396C0 <AmiBlitz3.ab2@23635> BRA.w JL_0_D9E8
000396C6 <AmiBlitz3.ab2@23638> JMP interr3
000396CA <AmiBlitz3.ab2@23641>   CMP.w #-$7FF7,D0
000396CE <AmiBlitz3.ab2@23642>    BNE.w JL_0_D8C8
000396D4 <AmiBlitz3.ab2@23643>    TST.b fpu
000396D8 <AmiBlitz3.ab2@23644>    BEQ 'nof
000396DE <AmiBlitz3.ab2@23645>    MOVEA.l currentfunction,A0
000396E4 <AmiBlitz3.ab2@23646>    CMP.l #0,a0
000396E8 <AmiBlitz3.ab2@23647>    BEQ 'nof
000396EE <AmiBlitz3.ab2@23648>    CMP.b #5,$5(a0)
000396F2 <AmiBlitz3.ab2@23649>     BNE 'nof
000396F8 <AmiBlitz3.ab2@23650>    MOVE.l #$f23c5000,d1
000396FC <AmiBlitz3.ab2@23651>    BSR writelong
00039700 <AmiBlitz3.ab2@23652>    MOVE.w #0,d1
00039704 <AmiBlitz3.ab2@23653>    BSR writeword
00039708 <AmiBlitz3.ab2@23656>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
0003970C <AmiBlitz3.ab2@23657>    BSR.w writeword
00039712 <AmiBlitz3.ab2@23658>   MOVEA.l currentfunction,A0
00039718 <AmiBlitz3.ab2@23659>   CMP.l #0,a0
0003971C <AmiBlitz3.ab2@23660>   BEQ JL_0_D896
00039722 <AmiBlitz3.ab2@23661>   MOVE.l destpointer,d1
00039726 <AmiBlitz3.ab2@23662>   SUB.l $e(a0),d1
0003972A <AmiBlitz3.ab2@23663>   MOVE.l d1,isfunc+1(a0)
00039730 <AmiBlitz3.ab2@23664>   CMPI.b #$7,$5(A0)
00039734 <AmiBlitz3.ab2@23665>    BNE.w JL_0_D896
0003973A <AmiBlitz3.ab2@23666>   MOVE.w putstlen,D1
0003973E <AmiBlitz3.ab2@23667>    BSR.w writeword
00039742 <AmiBlitz3.ab2@23668> BRA.w JL_0_D896
00039748 <AmiBlitz3.ab2@23671> JMP interr
0003974C <AmiBlitz3.ab2@23674>  CMP.w #-$7FD0,D0
00039750 <AmiBlitz3.ab2@23675>    BNE.w JL_0_D966
00039756 <AmiBlitz3.ab2@23676>   MOVE.w proceduremode,D1
0003975A <AmiBlitz3.ab2@23677>    BNE.w JUMP_interr3
00039760 <AmiBlitz3.ab2@23678>   TST.b debugmode
00039764 <AmiBlitz3.ab2@23679>    BEQ.w JL_0_D90A
00039766 <AmiBlitz3.ab2@23680>   MOVEQ.l #$03,D1
0003976C <AmiBlitz3.ab2@23681>    JSR writetrap
00039772 <AmiBlitz3.ab2@23682>   MOVE.w dontwrite,D1
00039776 <AmiBlitz3.ab2@23683>    BNE.w JL_0_D90A
0003977C <AmiBlitz3.ab2@23684>   MOVEA.l intcleanat,A0
00039782 <AmiBlitz3.ab2@23685>   MOVE.l destpointer,(A0)
00039786 <AmiBlitz3.ab2@23686>   MOVE.w #$C30C,D1
0003978A <AmiBlitz3.ab2@23687>    BSR.w Atokejsr
00039790 <AmiBlitz3.ab2@23690>   MOVE.w intstring,D1
00039794 <AmiBlitz3.ab2@23691>    BEQ.w JUMP_interr
00039798 <AmiBlitz3.ab2@23692>    BPL.w JL_0_D934
0003979E <AmiBlitz3.ab2@23693>   MOVE.w intlevel,D1
000397A2 <AmiBlitz3.ab2@23694>   ORI.w #$7200,D1
000397A6 <AmiBlitz3.ab2@23695>    BSR.w writeword
000397AA <AmiBlitz3.ab2@23696>   MOVE.w #$C103,D1
000397AE <AmiBlitz3.ab2@23697>    BSR.w Atokejsr
000397B4 <AmiBlitz3.ab2@23698>   CLR.w intlevel
000397BA <AmiBlitz3.ab2@23701>  CLR.w intstring
000397C0 <AmiBlitz3.ab2@23702>   MOVE.l intfin,D1
000397C4 <AmiBlitz3.ab2@23703>    BSR.w writelong
000397CA <AmiBlitz3.ab2@23704>   MOVE.l #$70004E75,D1
000397CE <AmiBlitz3.ab2@23705>    BSR.w writelong
000397D4 <AmiBlitz3.ab2@23706>   MOVE.w dontwrite,D1
000397D8 <AmiBlitz3.ab2@23707>    BNE.w JL_0_D962
000397DE <AmiBlitz3.ab2@23708>   MOVEA.l intjmpat,A0
000397E2 <AmiBlitz3.ab2@23709>   MOVE.l destpointer(PC),(A0)
000397E8 <AmiBlitz3.ab2@23712> JMP get1bytemain
000397EC <AmiBlitz3.ab2@23716>   CMP.w #-$7FF2,D0
000397F0 <AmiBlitz3.ab2@23717>    BEQ.w doendsel
000397F4 <AmiBlitz3.ab2@23718>   CMP.w #-$7F4C,D0
000397F8 <AmiBlitz3.ab2@23719>    BNE.w JL_0_D97C
000397FE <AmiBlitz3.ab2@23720> JMP doendseterr
00039804 <AmiBlitz3.ab2@23724> JMP syntaxerr
0003980A <AmiBlitz3.ab2@23728>   TST.w dirmode
0003980E <AmiBlitz3.ab2@23729>   BNE.w JUMP_baddirerr
00039812 <AmiBlitz3.ab2@23730>   MOVE.w #$C800,D1
00039818 <AmiBlitz3.ab2@23731>   JSR Atokejsr                                            ;end
00039820 <AmiBlitz3.ab2@23732>   CMP.l #"noa7",-4(a5)
00039824 <AmiBlitz3.ab2@23733>   BNE 'l10
0003982A <AmiBlitz3.ab2@23734>   TST.w dontwrite
0003982E <AmiBlitz3.ab2@23735>   BNE 'l10
00039834 <AmiBlitz3.ab2@23736>   MOVE.l destpointer,d1
00039836 <AmiBlitz3.ab2@23737>   SUBQ.l #4,d1
00039838 <AmiBlitz3.ab2@23738>   MOVE.l a0,-(a7)
0003983A <AmiBlitz3.ab2@23739>   MOVE.l d1,a0
0003983C <AmiBlitz3.ab2@23740>   MOVE.l (a0),a0
00039842 <AmiBlitz3.ab2@23741>   MOVE.l #$60000002,(a0)+
00039846 <AmiBlitz3.ab2@23742>   MOVE.w #$588f,(a0)
00039848 <AmiBlitz3.ab2@23743>   MOVE.l (a7)+,a0
0003984A <AmiBlitz3.ab2@23746> RTS
00039850 <AmiBlitz3.ab2@23750>   TST.w dirmode                                            ;stop
00039854 <AmiBlitz3.ab2@23751>   BNE.w JUMP_baddirerr
00039856 <AmiBlitz3.ab2@23752>   MOVE.w d0,d1
0003985A <AmiBlitz3.ab2@23753>   BEQ 'l10
0003985E <AmiBlitz3.ab2@23754>   CMP.b #$3a,d0
00039862 <AmiBlitz3.ab2@23755>   BEQ 'l10
00039868 <AmiBlitz3.ab2@23756>   JSR get1bytemain
0003986E <AmiBlitz3.ab2@23759>   TST.b debugmode
00039872 <AmiBlitz3.ab2@23760>   BEQ.w newstop
00039876 <AmiBlitz3.ab2@23761>   MOVE.w #$D501,D1
0003987A <AmiBlitz3.ab2@23762> BRA.w Atokejsr
0003987C <AmiBlitz3.ab2@23766>     RTS
0003987E <AmiBlitz3.ab2@23768>   MOVE.w d1,d0
00039882 <AmiBlitz3.ab2@23769>   BEQ 'l10
00039886 <AmiBlitz3.ab2@23770>   CMP.b #$3a,d0
0003988A <AmiBlitz3.ab2@23771>   BEQ 'l10
0003988E <AmiBlitz3.ab2@23772>   SUB.b #$30,d0
00039892 <AmiBlitz3.ab2@23773>   MOVE.w #$4e40,d1
00039896 <AmiBlitz3.ab2@23774> BRA 'l11
0003989A <AmiBlitz3.ab2@23777>   MOVE.w #$4e4a,d1
0003989E <AmiBlitz3.ab2@23778> BRA writeword
000398A0 <AmiBlitz3.ab2@23781>   ADD.b d0,d1
000398A4 <AmiBlitz3.ab2@23782> BRA writeword
000398AA <AmiBlitz3.ab2@23786> JMP badconterr
000398AE <AmiBlitz3.ab2@23789>   MOVE.w #$4E71,D1
000398B2 <AmiBlitz3.ab2@23790> BRA.w writeword
000398B8 <AmiBlitz3.ab2@23793>   MOVEA.l firstfor,A2
000398BE <AmiBlitz3.ab2@23794>   CLR.l firstfor
000398C4 <AmiBlitz3.ab2@23795>   MOVEA.l _execbase,A6
000398C8 <AmiBlitz3.ab2@23798>   CMPA.w #$0,A2
000398CC <AmiBlitz3.ab2@23799>   BEQ.w JL_0_D9E6
000398CE <AmiBlitz3.ab2@23800>   MOVEA.l A2,A1
000398D0 <AmiBlitz3.ab2@23801>   MOVEA.l (A1),A2
000398D2 <AmiBlitz3.ab2@23802>   MOVEQ.l #$00,D0
000398D8 <AmiBlitz3.ab2@23803>   MOVE.l mempool2,a0
000398DC <AmiBlitz3.ab2@23804>   MOVE.b $10(A1),D0
000398E0 <AmiBlitz3.ab2@23805>   JSR _FreePooled(A6)                                      ;freememfor_error
000398E4 <AmiBlitz3.ab2@23806> BRA.w JL_0_D9CC
000398E6 <AmiBlitz3.ab2@23809> RTS
000398EC <AmiBlitz3.ab2@23813> JMP badpenderr
000398F2 <AmiBlitz3.ab2@23819>   MOVE.w proceduremode,D1
000398F6 <AmiBlitz3.ab2@23820>    BEQ.w JUMP_badpenderr
000398FC <AmiBlitz3.ab2@23822>   MOVE.w dontwrite,D1
00039900 <AmiBlitz3.ab2@23823>    BNE.w JL_0_DA1A
00039906 <AmiBlitz3.ab2@23824>   MOVEA.l firstpend,A2
0003990A <AmiBlitz3.ab2@23827>   CMPA.w #$0,A2
0003990E <AmiBlitz3.ab2@23828>    BEQ.w JL_0_DA1A
00039912 <AmiBlitz3.ab2@23829>   MOVEA.l $4(A2),A0
00039918 <AmiBlitz3.ab2@23830>   MOVE.l destpointer,(A0)
0003991A <AmiBlitz3.ab2@23831>   MOVEA.l (A2),A2
0003991E <AmiBlitz3.ab2@23832> BRA.w JL_0_DA02
00039924 <AmiBlitz3.ab2@23835>   TST.b debugmode
00039928 <AmiBlitz3.ab2@23836>    BEQ.b JL_0_DA2A
0003992A <AmiBlitz3.ab2@23837>   MOVEQ.l #$05,D1
00039930 <AmiBlitz3.ab2@23838>   JSR writetrap
00039936 <AmiBlitz3.ab2@23841>   MOVEA.l firstlocal,A2                                    ;firstlocal
0003993C <AmiBlitz3.ab2@23842>   JSR calcstatic2b                                           ;calcstatic
00039942 <AmiBlitz3.ab2@23843>   MOVEA.l currentfunction,A0
00039948 <AmiBlitz3.ab2@23844>   MOVE.l destpointer,d1
0003994C <AmiBlitz3.ab2@23845>   SUB.l $e(a0),d1
00039950 <AmiBlitz3.ab2@23846>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00039954 <AmiBlitz3.ab2@23847>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
0003995A <AmiBlitz3.ab2@23848>   MOVE.l D3,locdatast
00039960 <AmiBlitz3.ab2@23849>   MOVEA.l tempvm,A1
00039966 <AmiBlitz3.ab2@23850>  CLR.b infunctioncode
0003996C <AmiBlitz3.ab2@23851>   MOVE.l firstiffstore,d1
00039972 <AmiBlitz3.ab2@23852>   CMP.l firstiff,d1
00039976 <AmiBlitz3.ab2@23853>   BNE JUMP_noenderr
0003997A <AmiBlitz3.ab2@23854>   TST.w $C(A1)                                             ;dim
0003997E <AmiBlitz3.ab2@23855>    BPL.w JL_0_DA64
00039984 <AmiBlitz3.ab2@23856>  BSET #$7,$8(A0)
00039988 <AmiBlitz3.ab2@23857>   MOVE.w #$C005,D1
0003998C <AmiBlitz3.ab2@23858>    BSR.w tokejsr2                                          ;writefreememstatement
00039990 <AmiBlitz3.ab2@23859> BRA.w JL_0_DA6C
00039996 <AmiBlitz3.ab2@23862> JMP noenderr
0003999E <AmiBlitz3.ab2@23865>   MOVE.w memlibstat,$C(A1)
000399A4 <AmiBlitz3.ab2@23868>   MOVEA.l currentfunction,A0
000399A8 <AmiBlitz3.ab2@23869>   MOVE.l $E(A0),-(A7)
000399B0 <AmiBlitz3.ab2@23870>   MOVE.w locvaroff,$6(A0)
000399B6 <AmiBlitz3.ab2@23871>   BCLR #$1,$7(A0)
000399BC <AmiBlitz3.ab2@23872>   BCLR #$0,$7(A0)
000399C2 <AmiBlitz3.ab2@23873>   CMPI.b #$7,$5(A0)
000399C6 <AmiBlitz3.ab2@23874>    BNE.w JL_0_DA9E
000399CC <AmiBlitz3.ab2@23875>   MOVE.w getstlen,D1
000399D0 <AmiBlitz3.ab2@23876>    BSR.w writeword
000399D4 <AmiBlitz3.ab2@23879>   TST.w $6(A0)
000399D8 <AmiBlitz3.ab2@23880>    BEQ.w JL_0_DAB8
000399DC <AmiBlitz3.ab2@23881>   MOVE.w #$FC7B,D1
000399E2 <AmiBlitz3.ab2@23882>    JSR uselib
000399E8 <AmiBlitz3.ab2@23883>   MOVE.w unlinka4,D1
000399EC <AmiBlitz3.ab2@23884>    BSR.w writeword
000399F2 <AmiBlitz3.ab2@23887>   MOVEA.l currentfunction,A0
000399F4 <AmiBlitz3.ab2@23888>   MOVEQ.l #$00,D1
000399F8 <AmiBlitz3.ab2@23889>   MOVE.b $4(A0),D1
000399FA <AmiBlitz3.ab2@23890>   LSR.w #4,D1
000399FE <AmiBlitz3.ab2@23891>    BEQ.w JL_0_DB24
00039A00 <AmiBlitz3.ab2@23893>      LSL.w #1,d1
00039A04 <AmiBlitz3.ab2@23895>   CMP.w #$1,D1
00039A08 <AmiBlitz3.ab2@23896>    BNE.w JL_0_DAE0
00039A0E <AmiBlitz3.ab2@23897>   MOVE.w fix1,D1
00039A12 <AmiBlitz3.ab2@23898>    BSR.w writeword
00039A16 <AmiBlitz3.ab2@23899> BRA.w JL_0_DB24
00039A18 <AmiBlitz3.ab2@23902>   LSL.w #2,D1
00039A1A <AmiBlitz3.ab2@23903>   MOVE.w D1,-(A7)
00039A20 <AmiBlitz3.ab2@23904>   MOVE.w D1,moverts+2
00039A26 <AmiBlitz3.ab2@23905>   MOVE.l moverts,D1
00039A2C <AmiBlitz3.ab2@23906>    JSR writelong
00039A2E <AmiBlitz3.ab2@23907>   MOVE.w (A7)+,D1
00039A32 <AmiBlitz3.ab2@23908>   CMP.w #$8,D1
00039A36 <AmiBlitz3.ab2@23909>    BHI.w JL_0_DB14
00039A3A <AmiBlitz3.ab2@23910>   ANDI.w #$7,D1
00039A3C <AmiBlitz3.ab2@23911>   LSL.w #8,D1
00039A3E <AmiBlitz3.ab2@23912>   LSL.w #1,D1
00039A44 <AmiBlitz3.ab2@23913>   OR.w fixq,D1
00039A4A <AmiBlitz3.ab2@23914>    JSR writeword
00039A4E <AmiBlitz3.ab2@23915> BRA.w JL_0_DB24
00039A54 <AmiBlitz3.ab2@23919>    MOVE.w D1,fixstack+2
00039A5A <AmiBlitz3.ab2@23920>   MOVE.l fixstack,D1
00039A60 <AmiBlitz3.ab2@23921>    JSR writelong
00039A64 <AmiBlitz3.ab2@23924>    BSR.w JL_0_D2CA
00039A68 <AmiBlitz3.ab2@23925>    BSR.w JL_0_D4F8
00039A6A <AmiBlitz3.ab2@23926>   MOVEA.l (A7)+,A0
00039A70 <AmiBlitz3.ab2@23927>   MOVE.w dontwrite,D1
00039A74 <AmiBlitz3.ab2@23928>    BNE.w JL_0_DB3E
00039A7A <AmiBlitz3.ab2@23929>   MOVE.l destpointer,-(A0)
00039A80 <AmiBlitz3.ab2@23932>   CLR.w proceduremode
00039A86 <AmiBlitz3.ab2@23933>   CLR.l currentfunction
00039A8C <AmiBlitz3.ab2@23934>   CLR.w procnum
00039A90 <AmiBlitz3.ab2@23935>    BSR.w JL_0_DB5C
00039A96 <AmiBlitz3.ab2@23936>    JSR freepends
00039A9C <AmiBlitz3.ab2@23937> JMP get1bytemain
00039A9E <AmiBlitz3.ab2@23940>   MOVEQ.l #$0C,D0
00039AA0 <AmiBlitz3.ab2@23941>   MOVEQ.l #$01,D1
00039AA6 <AmiBlitz3.ab2@23942>   MOVEA.l _execbase,A6
00039AAC <AmiBlitz3.ab2@23944>   MOVE.l mempool,a0
00039AB0 <AmiBlitz3.ab2@23945>   JSR _AllocPooled(a6)
00039AB2 <AmiBlitz3.ab2@23946>   MOVEA.l D0,A0
00039AB8 <AmiBlitz3.ab2@23947>   MOVE.l alllocals,(A0)
00039ABE <AmiBlitz3.ab2@23948>   MOVE.l A0,alllocals
00039AC4 <AmiBlitz3.ab2@23949>   MOVE.l firstlocal,D0
00039ACA <AmiBlitz3.ab2@23950>   CLR.l firstlocal
00039ACE <AmiBlitz3.ab2@23951>   MOVE.l D0,$4(A0)
00039AD4 <AmiBlitz3.ab2@23952>   MOVE.l firstglob,D1
00039ADA <AmiBlitz3.ab2@23953>   CLR.l firstglob
00039ADE <AmiBlitz3.ab2@23954>   MOVE.l D1,$8(A0)
00039AE4 <AmiBlitz3.ab2@23955>   TST.b debugmode
00039AE8 <AmiBlitz3.ab2@23956>    BEQ.b JL_0_DBB0
00039AEE <AmiBlitz3.ab2@23957>   TST.w dontwrite
00039AF2 <AmiBlitz3.ab2@23958>    BNE.b JL_0_DBB0
00039AF6 <AmiBlitz3.ab2@23959>   MOVEA.l proclocals(PC),A0
00039AF8 <AmiBlitz3.ab2@23960>   MOVE.l D0,(A0)+
00039AFA <AmiBlitz3.ab2@23961>   MOVE.l D1,(A0)
00039AFC <AmiBlitz3.ab2@23964> RTS
00039B02 <AmiBlitz3.ab2@23967> JMP baddirerr
00039B08 <AmiBlitz3.ab2@23971>   TST.w dirmode
00039B0C <AmiBlitz3.ab2@23972>    BNE.w JUMP_baddirerr
00039B12 <AmiBlitz3.ab2@23973>   MOVE.l firstfor,D1
00039B16 <AmiBlitz3.ab2@23974>    BEQ.w JUMP_noforerr
00039B1C <AmiBlitz3.ab2@23975>   JSR reget
00039B20 <AmiBlitz3.ab2@23976>    BEQ.w JL_0_DC18
00039B24 <AmiBlitz3.ab2@23979>   BSR.w getparameter
00039B28 <AmiBlitz3.ab2@23980>   MOVEA.l firstfor(PC),A2
00039B2A <AmiBlitz3.ab2@23981>   MOVEQ.l #$00,D1
00039B2E <AmiBlitz3.ab2@23982>   MOVE.b $10(A2),D1
00039B32 <AmiBlitz3.ab2@23983>   SUBI.w #$12,D1
00039B34 <AmiBlitz3.ab2@23984>   CMP.w D1,D2
00039B38 <AmiBlitz3.ab2@23985>    BNE.w JUMP_noforerr
00039B3C <AmiBlitz3.ab2@23986>   LEA ptr_parameterstore(PC),A0
00039B40 <AmiBlitz3.ab2@23987>   LEA $11(A2),A1
00039B42 <AmiBlitz3.ab2@23988>   SUBQ.w #1,D2
00039B44 <AmiBlitz3.ab2@23991>     CMPM.b (A0)+,(A1)+
00039B48 <AmiBlitz3.ab2@23992>     BNE.w JUMP_noforerr
00039B4C <AmiBlitz3.ab2@23993>   DBF D2,JL_0_DBF0
00039B50 <AmiBlitz3.ab2@23995>    BSR.w JL_0_DC1A
00039B56 <AmiBlitz3.ab2@23996>    JSR reget
00039B5A <AmiBlitz3.ab2@23997>    BEQ.w JL_0_DC16
00039B5E <AmiBlitz3.ab2@23998>   CMP.w #$2C,D0
00039B62 <AmiBlitz3.ab2@23999>    BNE.w JUMP_syntaxerr
00039B68 <AmiBlitz3.ab2@24000>    JSR get1bytemain
00039B6C <AmiBlitz3.ab2@24001> BRA.w JL_0_DBCE
00039B72 <AmiBlitz3.ab2@24004> JMP noforerr
00039B74 <AmiBlitz3.ab2@24007> RTS
00039B78 <AmiBlitz3.ab2@24011>   MOVE.l 8(a7),a2
00039B7C <AmiBlitz3.ab2@24012>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00039B80 <AmiBlitz3.ab2@24013>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00039B84 <AmiBlitz3.ab2@24014>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00039B86 <AmiBlitz3.ab2@24018>   MOVEA.l D1,A2
00039B8C <AmiBlitz3.ab2@24021>   JSR popnext                                           ;error checking for next.
00039B90 <AmiBlitz3.ab2@24022>   MOVE.w $C(A2),D0
00039B96 <AmiBlitz3.ab2@24023>   LEA nextb,A0
00039B9C <AmiBlitz3.ab2@24024>   LEA nextbf,A1
00039BA0 <AmiBlitz3.ab2@24025>   CMP.w #$1,D0
00039BA4 <AmiBlitz3.ab2@24026>    BEQ.w JL_0_DC74
00039BAA <AmiBlitz3.ab2@24027>   LEA nextw,A0
00039BB0 <AmiBlitz3.ab2@24028>   LEA nextwf,A1
00039BB4 <AmiBlitz3.ab2@24029>   CMP.w #$2,D0
00039BB8 <AmiBlitz3.ab2@24030>    BEQ.w JL_0_DC74
00039BBE <AmiBlitz3.ab2@24031>   LEA nextl,A0
00039BC4 <AmiBlitz3.ab2@24032>   LEA nextlf,A1
00039BC8 <AmiBlitz3.ab2@24033>   CMP.w #$5,D0
00039BCC <AmiBlitz3.ab2@24034>    BNE.w JL_0_DC74
00039BD2 <AmiBlitz3.ab2@24035>    TST.b fpu
00039BD6 <AmiBlitz3.ab2@24036>    BEQ 'old
00039BDC <AmiBlitz3.ab2@24037>    LEA fpu2dats,a0                                         ;fpu next code
00039BE2 <AmiBlitz3.ab2@24038>    LEA fpu2date,a1
00039BE6 <AmiBlitz3.ab2@24039> BRA JL_0_DC74
00039BEA <AmiBlitz3.ab2@24042>   MOVE.w #$C900,D1
00039BEE <AmiBlitz3.ab2@24043>    BSR.w Atokejsr
00039BF4 <AmiBlitz3.ab2@24044>   LEA nextf,A0
00039BFA <AmiBlitz3.ab2@24045>   LEA nextff,A1
00039C00 <AmiBlitz3.ab2@24048>   JSR pokecode
00039C06 <AmiBlitz3.ab2@24049>     TST.b fast                                             ;fast for next deactivate
00039C0A <AmiBlitz3.ab2@24050> BRA 'l1
00039C10 <AmiBlitz3.ab2@24052>     TST.b onestep
00039C14 <AmiBlitz3.ab2@24053>     BEQ 'l1
00039C1A <AmiBlitz3.ab2@24054>     CLR.b onestep
00039C20 <AmiBlitz3.ab2@24055>     SUBQ.l #4,destpointer
00039C24 <AmiBlitz3.ab2@24056>     MOVE.w #$5292,d1
00039C2A <AmiBlitz3.ab2@24057>     JSR writeword
00039C2E <AmiBlitz3.ab2@24060>   MOVE.l JL_0_DCF4(PC),D1
00039C34 <AmiBlitz3.ab2@24061>    JSR writelong
00039C3A <AmiBlitz3.ab2@24062>   MOVEA.l firstfor,A2
00039C40 <AmiBlitz3.ab2@24063>   MOVE.l (A2),firstfor
00039C44 <AmiBlitz3.ab2@24064>   MOVEA.l $8(A2),A0
00039C4A <AmiBlitz3.ab2@24065>   MOVEA.l destpointer,A1
00039C4C <AmiBlitz3.ab2@24066>   MOVE.l A1,D1
00039C4E <AmiBlitz3.ab2@24067>   SUB.l A0,D1
00039C50 <AmiBlitz3.ab2@24068>   ADDQ.l #2,D1
00039C56 <AmiBlitz3.ab2@24069>   CMP.l #MinWordSgnd,D1
00039C5A <AmiBlitz3.ab2@24070>    BCC.w JUMP_bigforerr
00039C60 <AmiBlitz3.ab2@24071>   TST.w dontwrite
00039C64 <AmiBlitz3.ab2@24072>    BNE.w JL_0_DCB4
00039C68 <AmiBlitz3.ab2@24073>   MOVE.w D1,-$2(A0)
00039C6A <AmiBlitz3.ab2@24076>   MOVE.l A1,D1
00039C6E <AmiBlitz3.ab2@24077>   SUB.l $4(A2),D1
00039C70 <AmiBlitz3.ab2@24078>   SUBQ.l #6,D1
00039C76 <AmiBlitz3.ab2@24079>   CMP.l #MinWordSgnd,D1
00039C7A <AmiBlitz3.ab2@24080>    BCC.w JUMP_bigforerr
00039C80 <AmiBlitz3.ab2@24081>   TST.w dontwrite
00039C84 <AmiBlitz3.ab2@24082>    BNE.w JL_0_DCD6
00039C86 <AmiBlitz3.ab2@24083>   NEG.w D1
00039C8A <AmiBlitz3.ab2@24084>   MOVE.w D1,-$2(A1)
00039C90 <AmiBlitz3.ab2@24087>   JSR popnext3
00039C96 <AmiBlitz3.ab2@24088>   MOVEA.l _execbase,A6
00039C98 <AmiBlitz3.ab2@24089>   MOVEA.l A2,A1
00039C9A <AmiBlitz3.ab2@24090>   MOVEQ.l #$00,D0
00039C9E <AmiBlitz3.ab2@24091>   MOVE.b $10(A1),D0
00039CA4 <AmiBlitz3.ab2@24092>   MOVE.l mempool2,a0
00039CA8 <AmiBlitz3.ab2@24093>   JSR _FreePooled(A6)
00039CAE <AmiBlitz3.ab2@24094> JMP reget
00039CB4 <AmiBlitz3.ab2@24097> JMP notallowd
00039CBA <AmiBlitz3.ab2@24100> JMP bigforerr
00039CBE <AmiBlitz3.ab2@24107>   MOVE.w #$664F,-(A7)
00039CC2 <AmiBlitz3.ab2@24110> BRA.w JL_0_DCF4
00039CC8 <AmiBlitz3.ab2@24113> JMP error_dublicate_for
00039CCC <AmiBlitz3.ab2@24116> forlineat:   Ds.l 1
00039CCE <AmiBlitz3.ab2@24117> fortemp:     Ds.w 1
00039CD4 <AmiBlitz3.ab2@24124>   CLR.l fp0addr
00039CDA <AmiBlitz3.ab2@24125>   TST.w dirmode
00039CDE <AmiBlitz3.ab2@24126>    BNE.w JUMP_baddirerr
00039CE8 <AmiBlitz3.ab2@24127>   MOVE.l linenumat,forlineat
00039CEE <AmiBlitz3.ab2@24131>   MOVE.l A5,letstart
00039CF2 <AmiBlitz3.ab2@24132>   BSR.w getparameter
00039CF8 <AmiBlitz3.ab2@24133>   MOVE.w D2,fortemp
00039CFE <AmiBlitz3.ab2@24134>   JSR findfor
00039D02 <AmiBlitz3.ab2@24135>    BEQ.w JUMP_error_dublicate_for
00039D08 <AmiBlitz3.ab2@24136>   LEA firstfor,A2
00039D0E <AmiBlitz3.ab2@24137>   JSR addhere2
00039D10 <AmiBlitz3.ab2@24138>   MOVE.l A2,-(A7)
00039D16 <AmiBlitz3.ab2@24139>   TST.b debugmode
00039D1A <AmiBlitz3.ab2@24140>    BEQ.b JL_0_DD4C
00039D20 <AmiBlitz3.ab2@24141>   JSR chkstak
00039D26 <AmiBlitz3.ab2@24142>   MOVE.l AJL_0_DCF0,D1
00039D2C <AmiBlitz3.ab2@24143>   JSR  writelong
00039D30 <AmiBlitz3.ab2@24146>   MOVE.w fortemp(PC),D2
00039D38 <AmiBlitz3.ab2@24147>   MOVE.b #1,formode
00039D3C <AmiBlitz3.ab2@24148>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00039D42 <AmiBlitz3.ab2@24149>   CLR.b formode
00039D46 <AmiBlitz3.ab2@24150>   CMP.w #-$7FE8,D0
00039D4A <AmiBlitz3.ab2@24151>    BNE.w JUMP_syntaxerr
00039D50 <AmiBlitz3.ab2@24152>   MOVE.w commode,D1
00039D54 <AmiBlitz3.ab2@24153>    BNE.w JUMP_syntaxerr
00039D58 <AmiBlitz3.ab2@24154>   CMP.b #$6,D2
00039D5C <AmiBlitz3.ab2@24155>    BCC.w JUMP_badforerr
00039D60 <AmiBlitz3.ab2@24156>   BTST #$F,D2
00039D64 <AmiBlitz3.ab2@24157>    BNE.w JL_0_DD86
00039D6A <AmiBlitz3.ab2@24158>   MOVE.w leaamp,D1
00039D70 <AmiBlitz3.ab2@24159>   JSR pokewda5s
00039D72 <AmiBlitz3.ab2@24160>   MOVE.w D3,D1
00039D78 <AmiBlitz3.ab2@24161>   JSR  writeword
00039D7E <AmiBlitz3.ab2@24164>   MOVE.w pushindex,D1
00039D84 <AmiBlitz3.ab2@24165>   JSR  writeword
00039D88 <AmiBlitz3.ab2@24166>   ANDI.w #$FF,D2
00039D8A <AmiBlitz3.ab2@24168>   MOVEA.l (A7),A1
00039D8E <AmiBlitz3.ab2@24169>   MOVE.w D2,$C(A1)
00039D90 <AmiBlitz3.ab2@24170>   MOVE.w D2,-(A7)
00039D94 <AmiBlitz3.ab2@24171>    BSR.w eval
00039D9A <AmiBlitz3.ab2@24172>    CLR.b onestep
00039D9E <AmiBlitz3.ab2@24173>    CMP.w #$8019,d0
00039DA2 <AmiBlitz3.ab2@24174>    BEQ 'l1
00039DAA <AmiBlitz3.ab2@24175>    MOVE.b #1,onestep
00039DAC <AmiBlitz3.ab2@24178>   MOVE.w (A7),D2
00039DB2 <AmiBlitz3.ab2@24179>   MOVE.w pushd0l,D1
00039DB6 <AmiBlitz3.ab2@24180>   CMP.w #$3,D2
00039DBA <AmiBlitz3.ab2@24181>    BCC.w JL_0_DDB6
00039DC0 <AmiBlitz3.ab2@24182>   MOVE.w pushd0wd,D1
00039DC2 <AmiBlitz3.ab2@24185>    MOVE.w D1,-(A7)
00039DC8 <AmiBlitz3.ab2@24186>    TST.b fpu
00039DCC <AmiBlitz3.ab2@24187>    BEQ 'old
00039DD0 <AmiBlitz3.ab2@24188>    CMP.b #5,d2
00039DD4 <AmiBlitz3.ab2@24189>    BNE 'old
00039DDA <AmiBlitz3.ab2@24190>    MOVE.l #$f2276400,d1
00039DE0 <AmiBlitz3.ab2@24192>    JSR writelong
00039DE4 <AmiBlitz3.ab2@24193> BRA 'weit
00039DEA <AmiBlitz3.ab2@24196>    JSR  writeword                                          ;fpu for end value
00039DEE <AmiBlitz3.ab2@24199>   CMP.w #-$7FE7,D0
00039DF2 <AmiBlitz3.ab2@24200>    BNE.w JL_0_DDCC
00039DF6 <AmiBlitz3.ab2@24201>    BSR.w eval
00039DFC <AmiBlitz3.ab2@24202>    TST.b fpu
00039E00 <AmiBlitz3.ab2@24203>    BEQ JL_0_DE0C
00039E04 <AmiBlitz3.ab2@24204>    CMP.b #5,d2
00039E08 <AmiBlitz3.ab2@24205>    BNE JL_0_DE0C
00039E0E <AmiBlitz3.ab2@24206>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00039E14 <AmiBlitz3.ab2@24208>   JSR writelong
00039E16 <AmiBlitz3.ab2@24211>    MOVE.w (a7)+,d1
00039E1A <AmiBlitz3.ab2@24212> BRA fpur
00039E1E <AmiBlitz3.ab2@24215>   CMP.w #$4,D2
00039E22 <AmiBlitz3.ab2@24216>    BCC.w JL_0_DDE0
00039E26 <AmiBlitz3.ab2@24217>   MOVE.w #$7001,D1
00039E2C <AmiBlitz3.ab2@24218>   JSR writeword
00039E30 <AmiBlitz3.ab2@24219> BRA.w JL_0_DE0C
00039E36 <AmiBlitz3.ab2@24222> JMP badforerr
00039E3A <AmiBlitz3.ab2@24225>   BNE.w JL_0_DDFA
00039E3E <AmiBlitz3.ab2@24226>   MOVE.w #$7001,D1
00039E44 <AmiBlitz3.ab2@24227>   JSR writeword
00039E4A <AmiBlitz3.ab2@24228>   MOVE.w swapd0,D1
00039E50 <AmiBlitz3.ab2@24229>   JSR writeword
00039E54 <AmiBlitz3.ab2@24230> BRA.w JL_0_DE0C
00039E5A <AmiBlitz3.ab2@24233>   TST.b fpu
00039E5E <AmiBlitz3.ab2@24234>    BEQ 'old
00039E62 <AmiBlitz3.ab2@24235>   CMP.b #5,d2
00039E66 <AmiBlitz3.ab2@24236>    BNE 'old
00039E6C <AmiBlitz3.ab2@24237>   MOVE.l #$f23c5000,d1
00039E72 <AmiBlitz3.ab2@24238>   JSR writelong
00039E76 <AmiBlitz3.ab2@24239>   MOVE.w #$1,d1
00039E7C <AmiBlitz3.ab2@24240>   JSR writeword
00039E82 <AmiBlitz3.ab2@24241>   MOVE.l #$f2276400,d1
00039E88 <AmiBlitz3.ab2@24242>   JSR writelong
00039E8A <AmiBlitz3.ab2@24243>   MOVE.w (a7)+,d1
00039E8E <AmiBlitz3.ab2@24244> BRA fpur
00039E92 <AmiBlitz3.ab2@24247>   MOVE.w #$203C,D1                                         ;write step 1
00039E98 <AmiBlitz3.ab2@24248>   JSR writeword
00039E9E <AmiBlitz3.ab2@24249>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
00039EA4 <AmiBlitz3.ab2@24250>   JSR writelong
00039EA6 <AmiBlitz3.ab2@24253>   MOVE.w (A7)+,D1
00039EAC <AmiBlitz3.ab2@24254>   JSR writeword                                            ;push step on stack
00039EAE <AmiBlitz3.ab2@24257>   MOVE.w (A7)+,D2
00039EB0 <AmiBlitz3.ab2@24258>   MOVEA.l (A7),A1
00039EB8 <AmiBlitz3.ab2@24259>   MOVE.l destpointer,$4(A1)
00039EBE <AmiBlitz3.ab2@24260>   LEA forcompb,A0
00039EC4 <AmiBlitz3.ab2@24261>   LEA forcompbf,A1
00039EC8 <AmiBlitz3.ab2@24262>   CMP.w #$1,D2
00039ECC <AmiBlitz3.ab2@24263>    BEQ.w JL_0_DE7E
00039ED2 <AmiBlitz3.ab2@24264>   LEA forcompw,A0
00039ED8 <AmiBlitz3.ab2@24265>   LEA forcompwf,A1
00039EDC <AmiBlitz3.ab2@24266>   CMP.w #$2,D2
00039EE0 <AmiBlitz3.ab2@24267>    BEQ.w JL_0_DE7E
00039EE6 <AmiBlitz3.ab2@24268>   LEA forcompl,A0
00039EEC <AmiBlitz3.ab2@24269>   LEA forcomplf,A1
00039EF0 <AmiBlitz3.ab2@24270>   CMP.w #$5,D2
00039EF4 <AmiBlitz3.ab2@24271>    BNE.w JL_0_DE7E
00039EFA <AmiBlitz3.ab2@24272>   TST.b fpu
00039EFE <AmiBlitz3.ab2@24273>    BEQ 'old
00039F04 <AmiBlitz3.ab2@24274>   LEA fpu_start,a0
00039F0A <AmiBlitz3.ab2@24275>   LEA fpu_end,a1
00039F10 <AmiBlitz3.ab2@24276>   JSR pokecode
00039F14 <AmiBlitz3.ab2@24277> BRA fpu3
00039F1A <AmiBlitz3.ab2@24280>   LEA forcompf,A0                                         ;
00039F20 <AmiBlitz3.ab2@24281>   LEA forcompff,A1
00039F26 <AmiBlitz3.ab2@24282>   JSR pokecode
00039F2A <AmiBlitz3.ab2@24283>   MOVE.w #$C900,D1
00039F2E <AmiBlitz3.ab2@24284>   BSR.w Atokejsr
00039F34 <AmiBlitz3.ab2@24285>   LEA forcompf2,A0
00039F3A <AmiBlitz3.ab2@24286>   LEA forcompf2f,A1
00039F40 <AmiBlitz3.ab2@24289>   JSR pokecode
00039F46 <AmiBlitz3.ab2@24290>   TST.b fast                                               ;fast for next
00039F4A <AmiBlitz3.ab2@24291>    BEQ 's1
00039F4E <AmiBlitz3.ab2@24292>   CMP.w #3,d2
00039F52 <AmiBlitz3.ab2@24293>    BNE 's1
00039F58 <AmiBlitz3.ab2@24294>   TST.b onestep
00039F5C <AmiBlitz3.ab2@24295>    BEQ 's1
00039F66 <AmiBlitz3.ab2@24296>   SUB.l #10,destpointer
00039F6A <AmiBlitz3.ab2@24297>   MOVE.w #$b081,d1
00039F70 <AmiBlitz3.ab2@24298>   JSR writeword
00039F74 <AmiBlitz3.ab2@24302>   MOVE.l thebgt(PC),D1
00039F7A <AmiBlitz3.ab2@24303>   JSR writelong
00039F7C <AmiBlitz3.ab2@24306>   MOVEA.l (A7)+,A1
00039F84 <AmiBlitz3.ab2@24307>   MOVE.l destpointer,$8(A1)
00039F8A <AmiBlitz3.ab2@24308> JMP reget
00039F8E <AmiBlitz3.ab2@24311>   MOVEA.l 8(a7),a2
00039F92 <AmiBlitz3.ab2@24312>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00039F98 <AmiBlitz3.ab2@24313>   fmove.s 4(a7),fp1
00039F9C <AmiBlitz3.ab2@24314>   BTST.b #7,(a7)
00039FA0 <AmiBlitz3.ab2@24315>   BNE 'negi
00039FA4 <AmiBlitz3.ab2@24316>   fcmp.x fp1,fp0
00039FA8 <AmiBlitz3.ab2@24317> BRA 'negi2
00039FAC <AmiBlitz3.ab2@24320>   fcmp.x fp0,fp1
00039FB0 <AmiBlitz3.ab2@24323>   Dc.l $f2920000                                           ;fbgt.w
00039FB4 <AmiBlitz3.ab2@24327>   BGT.w thebgt
00039FBA <AmiBlitz3.ab2@24330>   MOVE.l A5,letstart
00039FBE <AmiBlitz3.ab2@24331>   BSR.w getparameter
00039FC8 <AmiBlitz3.ab2@24337>   MOVE.l destpointer,pushpc
00039FD2 <AmiBlitz3.ab2@24338>   MOVE.l hunkoffsetbase,pushoff
00039FD8 <AmiBlitz3.ab2@24339>   CLR.l rightsidetype
00039FE0 <AmiBlitz3.ab2@24340>   MOVE.w #$0001,regnum
00039FE6 <AmiBlitz3.ab2@24341>   JSR JL_0_8E3C
00039FEC <AmiBlitz3.ab2@24342>   JSR calcvar
00039FF2 <AmiBlitz3.ab2@24343>   TST.b formode
00039FF6 <AmiBlitz3.ab2@24344>   BEQ 'lf1
00039FFC <AmiBlitz3.ab2@24345>   CMP.l #newtype_double,A2
0003A000 <AmiBlitz3.ab2@24346>   BEQ JUMP_notallowd
0003A006 <AmiBlitz3.ab2@24347>   MOVE.l a2,currtype
0003A00C <AmiBlitz3.ab2@24350>   CLR.w startoffsetmore
0003A010 <AmiBlitz3.ab2@24351>   CMP.w #$3d,d0
0003A014 <AmiBlitz3.ab2@24352>   BNE 'l1a
0003A018 <AmiBlitz3.ab2@24353>   BTST #15,d2
0003A01C <AmiBlitz3.ab2@24354>   BEQ 'l1a
0003A020 <AmiBlitz3.ab2@24355>   CMP.b #1,d2
0003A024 <AmiBlitz3.ab2@24356>   BNE 'l1a
0003A02E <AmiBlitz3.ab2@24357>   MOVE.w leaa0a0+2,startoffsetmore
0003A034 <AmiBlitz3.ab2@24360>   CLR.w regnum
0003A038 <AmiBlitz3.ab2@24361>   BSR.w JL_0_B5D2
0003A03E <AmiBlitz3.ab2@24362>   CLR.w commode
0003A044 <AmiBlitz3.ab2@24363>   CLR.w stackcorrect
0003A04A <AmiBlitz3.ab2@24364>   CLR.w pcodd
0003A050 <AmiBlitz3.ab2@24365>   MOVE.w startoffsetmore,d1
0003A054 <AmiBlitz3.ab2@24366>   BTST #0,d1
0003A058 <AmiBlitz3.ab2@24367>   BEQ 'l2a
0003A060 <AmiBlitz3.ab2@24368>   MOVE.w #1,pcodd
0003A064 <AmiBlitz3.ab2@24371>   CMP.w #$3D,D0                                            ;=
0003A068 <AmiBlitz3.ab2@24372>   BEQ.w JL_0_DEE0
0003A06A <AmiBlitz3.ab2@24375>   MOVE.b (a5)+,d1
0003A06E <AmiBlitz3.ab2@24376>   BEQ 'l10
0003A072 <AmiBlitz3.ab2@24377>   CMP.b #":",d1
0003A076 <AmiBlitz3.ab2@24378>   BEQ 'l10
0003A07A <AmiBlitz3.ab2@24379>   CMP.b #";",d1
0003A07E <AmiBlitz3.ab2@24380>   BEQ 'l10
0003A082 <AmiBlitz3.ab2@24381>   CMP.b #"0",d1
0003A086 <AmiBlitz3.ab2@24382>   BLT 'l11
0003A08A <AmiBlitz3.ab2@24383>   CMP.b #"9",d1
0003A08E <AmiBlitz3.ab2@24384>   BGT 'l11
0003A092 <AmiBlitz3.ab2@24385> BRA.s 'l1
0003A09A <AmiBlitz3.ab2@24388>   MOVE.b #1,quickadd
0003A0A0 <AmiBlitz3.ab2@24391>   MOVEA.l letstart,A5
0003A0A2 <AmiBlitz3.ab2@24392>   SUBQ.w #1,A5
0003A0A6 <AmiBlitz3.ab2@24395>   CMP.b #$7,D2
0003A0AA <AmiBlitz3.ab2@24396>    BNE.w JL_0_DF8A
0003A0AE <AmiBlitz3.ab2@24402>   MOVEM.w D2-D3,-(A7)
0003A0B4 <AmiBlitz3.ab2@24403>   MOVE.l lastoffset_org,-(A7)
0003A0BA <AmiBlitz3.ab2@24404>   MOVE.w varmode,-(A7)
0003A0C4 <AmiBlitz3.ab2@24406>    MOVE.l #forthstack,forthsp
0003A0CE <AmiBlitz3.ab2@24407>    MOVE.l #precstack,precsp
0003A0D4 <AmiBlitz3.ab2@24408>    CLR.w regnum
0003A0DA <AmiBlitz3.ab2@24409>    CLR.w nonew
0003A0E0 <AmiBlitz3.ab2@24410>    CLR.w sbasegot
0003A0EA <AmiBlitz3.ab2@24411>    MOVE.w varcodelen,oldvcodelen
0003A0F0 <AmiBlitz3.ab2@24412>    CLR.w varcodelen
0003A0F8 <AmiBlitz3.ab2@24413>    MOVE.w #$FFFF,lasta6
0003A0FA <AmiBlitz3.ab2@24416>   MOVEQ.l #$07,D2
0003A0FE <AmiBlitz3.ab2@24417>    BSR.w eval
0003A104 <AmiBlitz3.ab2@24418>   MOVE.w (A7)+,varmode
0003A10A <AmiBlitz3.ab2@24419>   MOVE.l (A7)+,lastoffset_org
0003A110 <AmiBlitz3.ab2@24420>   MOVE.w moved0a3,D1
0003A116 <AmiBlitz3.ab2@24421>    JSR writeword
0003A11C <AmiBlitz3.ab2@24422>   MOVE.w commode,D1
0003A120 <AmiBlitz3.ab2@24423>    BEQ.w JL_0_DF38
0003A126 <AmiBlitz3.ab2@24424>   LEA pulla2st,A0
0003A12C <AmiBlitz3.ab2@24425>   LEA pulla2stf,A1
0003A132 <AmiBlitz3.ab2@24426>    JSR pokecode
0003A136 <AmiBlitz3.ab2@24427> BRA.w JL_0_DF3C
0003A13A <AmiBlitz3.ab2@24430>   BSR.w JL_0_B63C
0003A13E <AmiBlitz3.ab2@24433>   MOVEM.w (A7)+,D2-D3
0003A142 <AmiBlitz3.ab2@24434>   BTST #$F,D2
0003A146 <AmiBlitz3.ab2@24435>   BNE.w JL_0_DF58
0003A14C <AmiBlitz3.ab2@24436>     MOVE.w D3,leaa5d3a2+2
0003A152 <AmiBlitz3.ab2@24437>     MOVE.l leaa5d3a2,D1
0003A158 <AmiBlitz3.ab2@24438>     JSR pokela5s
0003A15C <AmiBlitz3.ab2@24441>   MOVE.w #$FE6F,D1
0003A162 <AmiBlitz3.ab2@24442>   JSR uselib
0003A168 <AmiBlitz3.ab2@24443>   MOVE.l #$C700,D1
0003A16E <AmiBlitz3.ab2@24444>   MOVE.l d1,lastinstruction
0003A174 <AmiBlitz3.ab2@24445>   MOVE.w varmode,D2
0003A178 <AmiBlitz3.ab2@24446>   BNE.w JL_0_DF70
0003A17A <AmiBlitz3.ab2@24447>     ADDQ.w #1,D1
0003A17E <AmiBlitz3.ab2@24450>   BSR.w Atokejsr
0003A182 <AmiBlitz3.ab2@24451>   CMP.w #$2C,D0
0003A186 <AmiBlitz3.ab2@24452>   BNE.w JL_0_E0C6
0003A18C <AmiBlitz3.ab2@24454>   MOVE.w addq4a2,D1
0003A192 <AmiBlitz3.ab2@24455>   JSR writeword
0003A196 <AmiBlitz3.ab2@24456> BRA.w JL_0_E018
0003A19C <AmiBlitz3.ab2@24459> JMP error4char
0003A1A2 <AmiBlitz3.ab2@24462> JMP error_convert_types
0003A1A6 <AmiBlitz3.ab2@24466>    BTST #$E,D2
0003A1AA <AmiBlitz3.ab2@24467>    BNE.w JL_0_DF9C
0003A1AC <AmiBlitz3.ab2@24468>   TST.b D2
0003A1B0 <AmiBlitz3.ab2@24469>    BEQ.w JUMP_noleterr
0003A1B6 <AmiBlitz3.ab2@24470>    TST.b newsyntax
0003A1BA <AmiBlitz3.ab2@24471>    BEQ JL_0_DFA0
0003A1BE <AmiBlitz3.ab2@24474>    CMP.w #$4022,(a5)
0003A1C2 <AmiBlitz3.ab2@24475>    BNE JL_0_DFA0
0003A1C8 <AmiBlitz3.ab2@24476>    CMP.l #3,d2
0003A1CC <AmiBlitz3.ab2@24477>    BNE  JUMP_error_convert_types
0003A1CE <AmiBlitz3.ab2@24478>    ADDQ #2,a5
0003A1D0 <AmiBlitz3.ab2@24479>    MOVEQ #0,d0
0003A1D2 <AmiBlitz3.ab2@24480>    MOVE.b (a5)+,d0
0003A1D6 <AmiBlitz3.ab2@24481>    BEQ JL_0_DFA0
0003A1DA <AmiBlitz3.ab2@24482>    CMP.b #$22,d0
0003A1DE <AmiBlitz3.ab2@24483>    BNE 'l1
0003A1E2 <AmiBlitz3.ab2@24484>    MOVE.b #0,d0
0003A1E6 <AmiBlitz3.ab2@24485> BRA 'do
0003A1E8 <AmiBlitz3.ab2@24488>   ASL.l #8,d0
0003A1EA <AmiBlitz3.ab2@24489>    MOVE.b (a5)+,d0
0003A1EE <AmiBlitz3.ab2@24490>    BEQ JL_0_DFA0
0003A1F2 <AmiBlitz3.ab2@24491>    CMP.b #$22,d0
0003A1F6 <AmiBlitz3.ab2@24492>    BNE 'l2
0003A1FA <AmiBlitz3.ab2@24493>    MOVE.b #0,d0
0003A1FC <AmiBlitz3.ab2@24494>    ASR.l #8,d0
0003A200 <AmiBlitz3.ab2@24495> BRA 'do
0003A202 <AmiBlitz3.ab2@24498>   ASL.l #8,d0
0003A204 <AmiBlitz3.ab2@24499>     MOVE.b (a5)+,d0
0003A208 <AmiBlitz3.ab2@24500>    BEQ JL_0_DFA0
0003A20C <AmiBlitz3.ab2@24501>    CMP.b #$22,d0
0003A210 <AmiBlitz3.ab2@24502>    BNE 'l3
0003A214 <AmiBlitz3.ab2@24503>    MOVE.b #0,d0
0003A216 <AmiBlitz3.ab2@24504>    ASR.l #8,d0
0003A21A <AmiBlitz3.ab2@24505> BRA 'do
0003A21C <AmiBlitz3.ab2@24508>   ASL.l #8,d0
0003A21E <AmiBlitz3.ab2@24509>     MOVE.b (a5)+,d0
0003A222 <AmiBlitz3.ab2@24510>    BEQ JL_0_DFA0
0003A226 <AmiBlitz3.ab2@24511>    CMP.b #$22,d0
0003A22A <AmiBlitz3.ab2@24512>    BNE 'l4
0003A22E <AmiBlitz3.ab2@24513>    MOVE.b #0,d0
0003A230 <AmiBlitz3.ab2@24514>    ASR.l #8,d0
0003A234 <AmiBlitz3.ab2@24515> BRA 'do
0003A238 <AmiBlitz3.ab2@24518>    CMP.b #$22,(a5)+
0003A23C <AmiBlitz3.ab2@24519>    BNE JUMP_error4char
0003A240 <AmiBlitz3.ab2@24522>   MOVE.w #$2b7c,d1
0003A246 <AmiBlitz3.ab2@24523>    TST.w varmode
0003A24A <AmiBlitz3.ab2@24524>    BEQ 'g3
0003A24E <AmiBlitz3.ab2@24525>    BCLR #9,d1
0003A254 <AmiBlitz3.ab2@24528>     JSR writeword
0003A256 <AmiBlitz3.ab2@24529>     MOVE.l d0,d1
0003A25C <AmiBlitz3.ab2@24530>     JSR writelong
0003A25E <AmiBlitz3.ab2@24531>     MOVE.w d3,d1
0003A264 <AmiBlitz3.ab2@24532>     JSR writeword
0003A26A <AmiBlitz3.ab2@24533>     JSR get1bytemain
0003A26C <AmiBlitz3.ab2@24534> RTS
0003A272 <AmiBlitz3.ab2@24540> JMP noleterr
0003A278 <AmiBlitz3.ab2@24544>   MOVE.w d2,vartype
0003A27C <AmiBlitz3.ab2@24545>   MOVE.b #$3,D2
0003A280 <AmiBlitz3.ab2@24548>   CMP.b #5,d2
0003A284 <AmiBlitz3.ab2@24549>   BNE 'l1
0003A28A <AmiBlitz3.ab2@24550>   MOVE.l a2,currtype
0003A28E <AmiBlitz3.ab2@24554>   MOVEM.w D2-D3,-(A7)
0003A294 <AmiBlitz3.ab2@24555>   MOVE.w varmode,-(A7)
0003A29A <AmiBlitz3.ab2@24556>   MOVE.l a2,leftsidetype
0003A29E <AmiBlitz3.ab2@24557>   BTST #$f,d2
0003A2A2 <AmiBlitz3.ab2@24558>   BEQ 'nomultiassign
0003A2A8 <AmiBlitz3.ab2@24559>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
0003A2AC <AmiBlitz3.ab2@24560> 'nomultiassign  ANDI.w #$FF,D2
0003A2B2 <AmiBlitz3.ab2@24561>   MOVE.l lastoffset_org,-(A7)
0003A2B6 <AmiBlitz3.ab2@24562>   BSR.w eval                                ; calc right side of var assign
0003A2BA <AmiBlitz3.ab2@24564>   MOVEM.l a0/a1,-(a7)
0003A2C0 <AmiBlitz3.ab2@24565>   MOVE.l leftsidetype,a0
0003A2C6 <AmiBlitz3.ab2@24566>   CMP.l #0,a0
0003A2CA <AmiBlitz3.ab2@24567>   BEQ 'nocheck
0003A2D2 <AmiBlitz3.ab2@24568>   CMP.l #$100,4(a0)
0003A2D6 <AmiBlitz3.ab2@24569>   BLE 'nocheck
0003A2DC <AmiBlitz3.ab2@24570>   TST.l typetocast
0003A2E0 <AmiBlitz3.ab2@24571>   BEQ 'nocast
0003A2E6 <AmiBlitz3.ab2@24572>   MOVE.l typetocast,a1
0003A2EA <AmiBlitz3.ab2@24573>   BRA 'typecheck
0003A2F0 <AmiBlitz3.ab2@24574> 'nocast  TST.l rightsidetype
0003A2F4 <AmiBlitz3.ab2@24575>   BEQ 'nocheck
0003A2FA <AmiBlitz3.ab2@24576>   MOVE.l rightsidetype,a1
0003A302 <AmiBlitz3.ab2@24577>   CMP.l #$100,4(a1)
0003A306 <AmiBlitz3.ab2@24578>   BGE 'typecheck
0003A30E <AmiBlitz3.ab2@24579>   CMP.l #$3,4(a1)
0003A312 <AmiBlitz3.ab2@24580>   BEQ 'ok                              ;long assign is allow with this codelines
0003A316 <AmiBlitz3.ab2@24581>   BRA 'error
0003A31C <AmiBlitz3.ab2@24583>   TST.b typecheck
0003A320 <AmiBlitz3.ab2@24584>   BEQ 'nocheck
0003A326 <AmiBlitz3.ab2@24585>   TST.b notypecheck
0003A32A <AmiBlitz3.ab2@24586>   BNE 'ok
0003A32C <AmiBlitz3.ab2@24587>   CMP.l a0,a1
0003A330 <AmiBlitz3.ab2@24588>   BEQ 'ok
0003A334 <AmiBlitz3.ab2@24590>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
0003A338 <AmiBlitz3.ab2@24591>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0003A33C <AmiBlitz3.ab2@24592>   BEQ 'ok
0003A342 <AmiBlitz3.ab2@24594>  JMP   error_convert_types     ;for syntax 4  = typecheck
0003A348 <AmiBlitz3.ab2@24597>    CLR.l typetocast
0003A34C <AmiBlitz3.ab2@24598>    MOVEM.l (a7)+, a0/a1
0003A352 <AmiBlitz3.ab2@24599>   MOVE.l (A7)+,lastoffset_org
0003A358 <AmiBlitz3.ab2@24600>   MOVE.w commode,D1
0003A35C <AmiBlitz3.ab2@24601>    BNE.w JL_0_DFCC
0003A360 <AmiBlitz3.ab2@24602>    BSR.w JL_0_B63C
0003A366 <AmiBlitz3.ab2@24605>   MOVE.w (A7)+,varmode
0003A36A <AmiBlitz3.ab2@24606>   MOVEM.w (A7)+,D2-D3
0003A36E <AmiBlitz3.ab2@24608>   MOVE.w #$2B40,D1
0003A374 <AmiBlitz3.ab2@24609>   MOVE.w varmode,D4
0003A378 <AmiBlitz3.ab2@24610>    BEQ.w JL_0_DFE8
0003A37C <AmiBlitz3.ab2@24611>   BCLR #$9,D1
0003A380 <AmiBlitz3.ab2@24614>   BTST #$F,D2
0003A384 <AmiBlitz3.ab2@24615>    BEQ.w JL_0_E090
0003A38A <AmiBlitz3.ab2@24616>    TST.b stackcorrect
0003A38E <AmiBlitz3.ab2@24617>    BNE 'st1
0003A394 <AmiBlitz3.ab2@24618>   MOVE.w commode,D1
0003A398 <AmiBlitz3.ab2@24619>    BEQ.w JL_0_E004
0003A39E <AmiBlitz3.ab2@24622>   MOVE.w pulla2,D1
0003A3A4 <AmiBlitz3.ab2@24623>    JSR writeword
0003A3A8 <AmiBlitz3.ab2@24626>   MOVE.w #$2480,D1
0003A3AC <AmiBlitz3.ab2@24627>    MOVEM.l a0/d0,-(a7)
0003A3B2 <AmiBlitz3.ab2@24628>    MOVEA.l lastoffset_org,A0
0003A3B4 <AmiBlitz3.ab2@24629>    MOVE.l A0,D0
0003A3B8 <AmiBlitz3.ab2@24630>    BEQ.w 'skip
0003A3BA <AmiBlitz3.ab2@24631>    MOVEA.l D0,A0
0003A3C2 <AmiBlitz3.ab2@24632>    MOVE.l $A(A0),currtype
0003A3C6 <AmiBlitz3.ab2@24635>   MOVEM.l (a7)+,a0/d0
0003A3CA <AmiBlitz3.ab2@24636>   CMP.w #$2C,D0
0003A3CE <AmiBlitz3.ab2@24637>    BNE.w JL_0_E090
0003A3D2 <AmiBlitz3.ab2@24638>     MOVE.w #$24C0,D1
0003A3D6 <AmiBlitz3.ab2@24639>    BSR.w JL_0_E090                                         ;write store
0003A3DC <AmiBlitz3.ab2@24642>    MOVE.l lastoffset_org,D0
0003A3E4 <AmiBlitz3.ab2@24646>   MOVE.w #$FFFF,commode
0003A3EA <AmiBlitz3.ab2@24647>   CLR.w varcodelen
0003A3F2 <AmiBlitz3.ab2@24648>   MOVE.b #1,optiarray
0003A3F8 <AmiBlitz3.ab2@24649>   MOVE.w pusha2,D1
0003A3FE <AmiBlitz3.ab2@24650>    JSR writeword
0003A404 <AmiBlitz3.ab2@24651>   TST.l lastoffset_org
0003A408 <AmiBlitz3.ab2@24652>   BEQ dimmore
0003A40E <AmiBlitz3.ab2@24653>   MOVEA.l lastoffset_org,A0
0003A410 <AmiBlitz3.ab2@24654>   MOVE.l (A0),D0
0003A414 <AmiBlitz3.ab2@24655>    BEQ.w JUMP_comerr
0003A416 <AmiBlitz3.ab2@24656>   MOVEA.l D0,A0
0003A41C <AmiBlitz3.ab2@24657>   MOVE.l A0,lastoffset_org
0003A422 <AmiBlitz3.ab2@24658>   BTST #$1,$7(A0)
0003A426 <AmiBlitz3.ab2@24659>    BNE.w JUMP_nocomerr
0003A42A <AmiBlitz3.ab2@24660>   MOVEA.l $A(A0),A1
0003A42E <AmiBlitz3.ab2@24661>   MOVE.l $4(A1),D2
0003A434 <AmiBlitz3.ab2@24664>   BTST #$0,$7(A0)
0003A438 <AmiBlitz3.ab2@24665>    BNE.w JL_0_E078
0003A43E <AmiBlitz3.ab2@24666>   CMP.l #$100,D2
0003A442 <AmiBlitz3.ab2@24667>    BCC.l JUMP_nocomerr
0003A446 <AmiBlitz3.ab2@24668> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
0003A44C <AmiBlitz3.ab2@24671>         CLR.b optiarray
0003A450 <AmiBlitz3.ab2@24672>         CMP.w #"@@",(a5)
0003A454 <AmiBlitz3.ab2@24673>         BEQ 'n1
0003A458 <AmiBlitz3.ab2@24674> BRA 'd1
0003A45E <AmiBlitz3.ab2@24677>   JSR nextline
0003A460 <AmiBlitz3.ab2@24678>         MOVE.l a5,-(a7)
0003A462 <AmiBlitz3.ab2@24681>   MOVE.b (a5)+,d0
0003A466 <AmiBlitz3.ab2@24682>         CMP.b #$20,d0
0003A46A <AmiBlitz3.ab2@24683>         BEQ 'l2
0003A46C <AmiBlitz3.ab2@24684>         MOVE.l (a7)+,a5
0003A470 <AmiBlitz3.ab2@24685>         CMP.b #";",d0
0003A474 <AmiBlitz3.ab2@24686>         BEQ 'n1
0003A47A <AmiBlitz3.ab2@24689>         TST.w debugmode
0003A47E <AmiBlitz3.ab2@24690>         BEQ JL_0_DEE0
0003A480 <AmiBlitz3.ab2@24691>         MOVE.l a0,-(a7)
0003A486 <AmiBlitz3.ab2@24692>         MOVE.l pushat,a0
0003A48C <AmiBlitz3.ab2@24693>         CMP.l #0,a0
0003A490 <AmiBlitz3.ab2@24694>         BNE 'o1
0003A494 <AmiBlitz3.ab2@24695> BRA 'skip
0003A49C <AmiBlitz3.ab2@24698>         ADD.l #1,2(a0)
0003A4A2 <AmiBlitz3.ab2@24701>   CLR.w commode
0003A4AA <AmiBlitz3.ab2@24702>         MOVE.b #1,stackcorrect
0003A4AC <AmiBlitz3.ab2@24703>         MOVE.l (a7)+,a0
0003A4B2 <AmiBlitz3.ab2@24704> JMP JL_0_DEE0
0003A4B8 <AmiBlitz3.ab2@24707> JMP nocomerr
0003A4BE <AmiBlitz3.ab2@24710>   CMP.l #$100,D2
0003A4C2 <AmiBlitz3.ab2@24711>    BCS.w JL_0_E084
0003A4C4 <AmiBlitz3.ab2@24712>   MOVEQ.l #$00,D2
0003A4C8 <AmiBlitz3.ab2@24715>   BSET #$E,D2
0003A4CC <AmiBlitz3.ab2@24718>   BSET #$F,D2
0003A4D0 <AmiBlitz3.ab2@24719> BRA.w JL_0_DEE0
0003A4D6 <AmiBlitz3.ab2@24722>    MOVE.l destpointer,a4
0003A4DE <AmiBlitz3.ab2@24723>    MOVE.l #$f22a6400,-4(a4)
0003A4E4 <AmiBlitz3.ab2@24724>    MOVE.w arrayoffset,d1
0003A4EA <AmiBlitz3.ab2@24725> JMP writeword
0003A4F0 <AmiBlitz3.ab2@24728> JMP comerr
0003A4F6 <AmiBlitz3.ab2@24731>    TST.b fpu
0003A4FA <AmiBlitz3.ab2@24732>    BEQ 'nofloat
0003A4FE <AmiBlitz3.ab2@24733>    CMP.b #5,d2
0003A502 <AmiBlitz3.ab2@24734>    BNE 'nofloat
0003A508 <AmiBlitz3.ab2@24735>    CLR.w fp0var
0003A50E <AmiBlitz3.ab2@24736>    LEA regtable,a4
0003A510 <AmiBlitz3.ab2@24737>    TST.l (a4)
0003A514 <AmiBlitz3.ab2@24738>    BEQ 'noreg
0003A518 <AmiBlitz3.ab2@24739>    BTST #15,d2                                             ;regvars
0003A51C <AmiBlitz3.ab2@24740>    BNE 'noreg
0003A520 <AmiBlitz3.ab2@24741>    CMP.w 0+4(a4),d3
0003A524 <AmiBlitz3.ab2@24742>    BNE 'doreg1
0003A52A <AmiBlitz3.ab2@24743>    MOVE.l #$f2000380,d1
0003A530 <AmiBlitz3.ab2@24744>    MOVE.w regnum,d0
0003A534 <AmiBlitz3.ab2@24745>    BNE 'noopt
0003A53A <AmiBlitz3.ab2@24751>    MOVE.l destpointer,a4
0003A542 <AmiBlitz3.ab2@24752>    CMP.l #$f2001c80,-8(a4)
0003A546 <AmiBlitz3.ab2@24753>    BNE 'noopt
0003A54E <AmiBlitz3.ab2@24754>    CMP.l #$f2000422,-4(a4)
0003A552 <AmiBlitz3.ab2@24755>    BNE 'noopt
0003A558 <AmiBlitz3.ab2@24756>    MOVE.l #$f20003a2,d1
0003A562 <AmiBlitz3.ab2@24757>    SUB.l #8,destpointer
0003A564 <AmiBlitz3.ab2@24760>    ASL.w #7,d0
0003A566 <AmiBlitz3.ab2@24761>    OR.w d0,d1
0003A56C <AmiBlitz3.ab2@24762>    JSR writelong
0003A56E <AmiBlitz3.ab2@24763> RTS
0003A572 <AmiBlitz3.ab2@24766>   CMP.w 8+4(a4),d3
0003A576 <AmiBlitz3.ab2@24767>    BNE 'doreg2
0003A57C <AmiBlitz3.ab2@24768>    MOVE.l #$f2000300,d1
0003A582 <AmiBlitz3.ab2@24769>    MOVE.w regnum,d0
0003A584 <AmiBlitz3.ab2@24770>    ASL.w #7,d0
0003A586 <AmiBlitz3.ab2@24771>    OR.w d0,d1
0003A58C <AmiBlitz3.ab2@24772>    JSR writelong
0003A58E <AmiBlitz3.ab2@24773> RTS
0003A592 <AmiBlitz3.ab2@24776>   CMP.w 16+4(a4),d3
0003A596 <AmiBlitz3.ab2@24777>    BNE 'doreg3
0003A59C <AmiBlitz3.ab2@24778>    MOVE.l #$f2000280,d1
0003A5A2 <AmiBlitz3.ab2@24779>    MOVE.w regnum,d0
0003A5A4 <AmiBlitz3.ab2@24780>    ASL.w #7,d0
0003A5A6 <AmiBlitz3.ab2@24781>    OR.w d0,d1
0003A5AC <AmiBlitz3.ab2@24782>    JSR  writelong
0003A5AE <AmiBlitz3.ab2@24783>  RTS
0003A5B2 <AmiBlitz3.ab2@24786>   CMP.w 24+4(a4),d3
0003A5B6 <AmiBlitz3.ab2@24787>    BNE 'doreg4
0003A5BC <AmiBlitz3.ab2@24788>    MOVE.l #$f2000200,d1
0003A5C2 <AmiBlitz3.ab2@24789>    MOVE.w regnum,d0
0003A5C4 <AmiBlitz3.ab2@24790>    ASL.w #7,d0
0003A5C6 <AmiBlitz3.ab2@24791>    OR.w d0,d1
0003A5CC <AmiBlitz3.ab2@24792>    JSR writelong
0003A5CE <AmiBlitz3.ab2@24793> RTS
0003A5D2 <AmiBlitz3.ab2@24796>   CMP.w 32+4(a4),d3
0003A5D6 <AmiBlitz3.ab2@24797>    BNE 'noreg
0003A5DC <AmiBlitz3.ab2@24798>    MOVE.l #$f2000180,d1
0003A5E2 <AmiBlitz3.ab2@24799>    MOVE.w regnum,d0
0003A5E4 <AmiBlitz3.ab2@24800>    ASL.w #7,d0
0003A5E6 <AmiBlitz3.ab2@24801>    OR.w d0,d1
0003A5EC <AmiBlitz3.ab2@24802>    JSR writelong
0003A5EE <AmiBlitz3.ab2@24803> RTS
0003A5F4 <AmiBlitz3.ab2@24806>    TST.w regnum
0003A5F8 <AmiBlitz3.ab2@24807>    BNE 'nofp0
0003A5FE <AmiBlitz3.ab2@24808>    MOVE.l destpointer ,a4
0003A606 <AmiBlitz3.ab2@24809>    CMP.l #$f2304400,-6(a4)
0003A60A <AmiBlitz3.ab2@24810>    BNE 'do
0003A610 <AmiBlitz3.ab2@24811>    CMP.w #$1990,-2(a4)
0003A614 <AmiBlitz3.ab2@24812>    BNE 'do
0003A618 <AmiBlitz3.ab2@24813>    BTST #15,d2                                             ;types ?
0003A61C <AmiBlitz3.ab2@24814>    BNE 'do
0003A622 <AmiBlitz3.ab2@24815>   MOVE.l #$2b701990,d1                                     ;var
0003A628 <AmiBlitz3.ab2@24816>   TST.w varmode
0003A62C <AmiBlitz3.ab2@24817>   BEQ 'glob1
0003A630 <AmiBlitz3.ab2@24818>   BCLR #25,d1
0003A634 <AmiBlitz3.ab2@24821>   MOVE.l d1,-6(a4)
0003A638 <AmiBlitz3.ab2@24822>   MOVE.w d3,-2(a4)
0003A63E <AmiBlitz3.ab2@24823>   CLR.w fp0var
0003A646 <AmiBlitz3.ab2@24824>   MOVE.w #$ffff,fp0mode
0003A648 <AmiBlitz3.ab2@24825> RTS
0003A650 <AmiBlitz3.ab2@24828>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003A654 <AmiBlitz3.ab2@24829>    BNE 'do3
0003A65E <AmiBlitz3.ab2@24830>    CMP.l #newtype_double,currtype
0003A662 <AmiBlitz3.ab2@24831>    BEQ 'do4
0003A666 <AmiBlitz3.ab2@24834>   MOVE.w #$2b6d,d1
0003A66C <AmiBlitz3.ab2@24835>    TST.w varmode
0003A670 <AmiBlitz3.ab2@24836>    BEQ 'g2
0003A674 <AmiBlitz3.ab2@24837>     BCLR #9,d1
0003A678 <AmiBlitz3.ab2@24840>     CMP.w #$2b6d,d1
0003A67C <AmiBlitz3.ab2@24841>     BNE 'd1
0003A680 <AmiBlitz3.ab2@24842>     CMP.w -2(a4),d3
0003A684 <AmiBlitz3.ab2@24843>     BNE 'd1
0003A68A <AmiBlitz3.ab2@24844>     SUBQ.l #6,destpointer
0003A68E <AmiBlitz3.ab2@24845> BRA 'd12
0003A692 <AmiBlitz3.ab2@24848>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
0003A698 <AmiBlitz3.ab2@24849>     MOVE.w -2(a4),-4(a4)
0003A69C <AmiBlitz3.ab2@24850>     MOVE.w d3,-2(a4)
0003A6A2 <AmiBlitz3.ab2@24853>   CLR.w fp0var
0003A6AA <AmiBlitz3.ab2@24854>     MOVE.w #$ffff,fp0mode
0003A6AC <AmiBlitz3.ab2@24855> RTS
0003A6B4 <AmiBlitz3.ab2@24858>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
0003A6B8 <AmiBlitz3.ab2@24859>    BNE 'do4
0003A6BC <AmiBlitz3.ab2@24860>    MOVE.w #$2b6c,d1
0003A6C2 <AmiBlitz3.ab2@24861>       TST.w varmode
0003A6C6 <AmiBlitz3.ab2@24862>    BEQ 'g3
0003A6CA <AmiBlitz3.ab2@24863>    BCLR #9,d1
0003A6CE <AmiBlitz3.ab2@24866>   MOVE.w d1,-6(a4)
0003A6D4 <AmiBlitz3.ab2@24867>     MOVE.w -2(a4),-4(a4)
0003A6D8 <AmiBlitz3.ab2@24868>     MOVE.w d3,-2(a4)
0003A6DE <AmiBlitz3.ab2@24869>     CLR.w fp0var
0003A6E6 <AmiBlitz3.ab2@24870>     MOVE.w #$ffff,fp0mode
0003A6E8 <AmiBlitz3.ab2@24871> RTS
0003A6EE <AmiBlitz3.ab2@24874>   MOVE.w d3,fp0var
0003A6F8 <AmiBlitz3.ab2@24875>    MOVE.w varmode,fp0mode
0003A6FA <AmiBlitz3.ab2@24876>    ADDQ.l #6,a4
0003A700 <AmiBlitz3.ab2@24877>    MOVE.l a4,fp0addr
0003A70A <AmiBlitz3.ab2@24878>    MOVE.l firstiff,fp0iff
0003A70E <AmiBlitz3.ab2@24881>   MOVEM.l d0/d4,-(a7)
0003A710 <AmiBlitz3.ab2@24882>    MOVEQ #0,d0
0003A716 <AmiBlitz3.ab2@24883>     MOVE.w regnum,d0
0003A718 <AmiBlitz3.ab2@24884>    ASL.w #7,d0                                             ;fpu store var
0003A71C <AmiBlitz3.ab2@24885>   BTST #15,d2
0003A720 <AmiBlitz3.ab2@24886>    BEQ 'var
0003A722 <AmiBlitz3.ab2@24887>    MOVE.w d1,d4
0003A726 <AmiBlitz3.ab2@24888>    CMP.w #$24c0,d4
0003A72A <AmiBlitz3.ab2@24889>    BNE 'nopl
0003A730 <AmiBlitz3.ab2@24890>    MOVE.l #$f21a6400,d1
0003A732 <AmiBlitz3.ab2@24891>    MOVEQ #0,d3
0003A736 <AmiBlitz3.ab2@24892> BRA 'glob
0003A73C <AmiBlitz3.ab2@24896>   MOVE.l #$f2126400,d1
0003A73E <AmiBlitz3.ab2@24897>    TST.w d3                                                ;offset =0
0003A742 <AmiBlitz3.ab2@24898>    BNE 'offset
0003A748 <AmiBlitz3.ab2@24899>    MOVE.l #$f2126400,d1
0003A74A <AmiBlitz3.ab2@24907>    MOVEQ #0,d3
0003A74E <AmiBlitz3.ab2@24908> BRA 'glob
0003A754 <AmiBlitz3.ab2@24911>   MOVE.l #$f22d6400,d1                                     ;var
0003A75A <AmiBlitz3.ab2@24912>   TST.w varmode
0003A75E <AmiBlitz3.ab2@24913>   BEQ 'glob
0003A762 <AmiBlitz3.ab2@24914>   BCLR #16,d1
0003A764 <AmiBlitz3.ab2@24915>  'glob OR.l d0,d1
0003A76E <AmiBlitz3.ab2@24918>   CMP.l #newtype_double,currtype
0003A772 <AmiBlitz3.ab2@24919>   BNE 'dbl1
0003A778 <AmiBlitz3.ab2@24920>   OR.l #$00001000,d1
0003A77E <AmiBlitz3.ab2@24923>   JSR writelong
0003A784 <AmiBlitz3.ab2@24924>   CLR.l currtype
0003A788 <AmiBlitz3.ab2@24925>   MOVEM.l (a7)+,d0/d4
0003A78A <AmiBlitz3.ab2@24926>   MOVE.l d3,d1
0003A78E <AmiBlitz3.ab2@24927>   BEQ 'nooffs
0003A794 <AmiBlitz3.ab2@24928> JMP writeword
0003A796 <AmiBlitz3.ab2@24931> RTS
0003A79C <AmiBlitz3.ab2@24945>     TST.b fast                                             ;write lea->xx(a2)
0003A7A0 <AmiBlitz3.ab2@24946>    BEQ 'la10
0003A7A6 <AmiBlitz3.ab2@24950>    TST.b quickadd
0003A7AC <AmiBlitz3.ab2@24952>      CLR.b quickadd
0003A7B0 <AmiBlitz3.ab2@24953>    CMP.w #$2480,d1
0003A7B4 <AmiBlitz3.ab2@24954>    BNE 'la10
0003A7BA <AmiBlitz3.ab2@24955>    TST.b optiarray
0003A7BE <AmiBlitz3.ab2@24956>    BNE 'la10
0003A7C4 <AmiBlitz3.ab2@24957>    MOVE.l destpointer,a4
0003A7CA <AmiBlitz3.ab2@24958>    CMP.w #$45ea,-4(a4)
0003A7CE <AmiBlitz3.ab2@24959>    BNE 'la10
0003A7D6 <AmiBlitz3.ab2@24960>    CMP.w #8,pushclen
0003A7DA <AmiBlitz3.ab2@24961>    BEQ 'la100
0003A7E2 <AmiBlitz3.ab2@24962>    CMP.w #6,pushclen
0003A7E6 <AmiBlitz3.ab2@24963>    BNE 'la10
0003A7EA <AmiBlitz3.ab2@24964>    CMP.b #3,d2
0003A7EE <AmiBlitz3.ab2@24965>    BCS 'la110
0003A7F4 <AmiBlitz3.ab2@24967>    MOVE.w #$2540,-2(a4)
0003A7FA <AmiBlitz3.ab2@24968>    MOVE.w arrayoffset,d1
0003A800 <AmiBlitz3.ab2@24969> JMP writeword
0003A806 <AmiBlitz3.ab2@24972>    CLR.b quickadd
0003A808 <AmiBlitz3.ab2@24973> RTS
0003A80C <AmiBlitz3.ab2@24976>    CMP.b #2,d2
0003A810 <AmiBlitz3.ab2@24977>    BNE 'la120
0003A816 <AmiBlitz3.ab2@24978>     MOVE.w #$3540,-2(a4)
0003A81C <AmiBlitz3.ab2@24979>    MOVE.w arrayoffset,d1
0003A822 <AmiBlitz3.ab2@24980> JMP writeword
0003A826 <AmiBlitz3.ab2@24983>   CMP.b #1,d2
0003A82A <AmiBlitz3.ab2@24984>    BNE.s 'la10
0003A830 <AmiBlitz3.ab2@24985>     MOVE.w #$1540,-2(a4)
0003A836 <AmiBlitz3.ab2@24986>    MOVE.w arrayoffset,d1
0003A83C <AmiBlitz3.ab2@24987> JMP writeword
0003A840 <AmiBlitz3.ab2@24990>    CMP.b #3,d2
0003A844 <AmiBlitz3.ab2@24991>    BCS 'la11
0003A84A <AmiBlitz3.ab2@24992>    MOVE.w #$2540,-4(a4)
0003A84C <AmiBlitz3.ab2@24993> RTS
0003A850 <AmiBlitz3.ab2@24996>    CMP.b #2,d2
0003A854 <AmiBlitz3.ab2@24997>    BNE 'la12
0003A85A <AmiBlitz3.ab2@24998>     MOVE.w #$3540,-4(a4)
0003A85C <AmiBlitz3.ab2@24999> RTS
0003A860 <AmiBlitz3.ab2@25001>  'la12 CMP.b #1,d2
0003A864 <AmiBlitz3.ab2@25002>    BNE.s 'la10
0003A86A <AmiBlitz3.ab2@25003>     MOVE.w #$1540,-4(a4)
0003A86C <AmiBlitz3.ab2@25004> RTS
0003A872 <AmiBlitz3.ab2@25007>   CLR.b optiarray
0003A876 <AmiBlitz3.ab2@25008>    CMP.b #$1,D2
0003A87A <AmiBlitz3.ab2@25009>    BEQ.w JL_0_E0AC
0003A87E <AmiBlitz3.ab2@25010>    BSR.w varalign
0003A882 <AmiBlitz3.ab2@25011>    CMP.b #$3,D2
0003A886 <AmiBlitz3.ab2@25012>    BCC.w writevarlong
0003A88C <AmiBlitz3.ab2@25013>    TST.b fast                                              ;optiimmi
0003A890 <AmiBlitz3.ab2@25014>    BEQ 'l10b
0003A896 <AmiBlitz3.ab2@25019>    MOVE.l destpointer,a0
0003A89C <AmiBlitz3.ab2@25020>    SUB.l imm_addr,a0
0003A8A2 <AmiBlitz3.ab2@25021>    CMP.l #4,a0
0003A8A6 <AmiBlitz3.ab2@25022>    BNE 'l10
0003A8AC <AmiBlitz3.ab2@25023>    CLR.l imm_addr
0003A8B2 <AmiBlitz3.ab2@25024>    MOVE.l destpointer,a4
0003A8B6 <AmiBlitz3.ab2@25025>    OR.w #$107c,d1
0003A8BA <AmiBlitz3.ab2@25026>    MOVE.w d1,-4(a4)
0003A8BC <AmiBlitz3.ab2@25027>     MOVE.w D3,D1
0003A8C2 <AmiBlitz3.ab2@25028> JMP writeword
0003A8C8 <AmiBlitz3.ab2@25031>   MOVE.l destpointer,a0
0003A8CE <AmiBlitz3.ab2@25032>   SUB.l load_var_addr,a0
0003A8D4 <AmiBlitz3.ab2@25033>   CMP.l #4,a0
0003A8D8 <AmiBlitz3.ab2@25034>   BNE 'l10b
0003A8DE <AmiBlitz3.ab2@25035>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
0003A8E2 <AmiBlitz3.ab2@25036>   BNE 'l10b
0003A8E8 <AmiBlitz3.ab2@25038>   CLR.l load_var_addr
0003A8EE <AmiBlitz3.ab2@25039>   MOVE.l destpointer,a4
0003A8F2 <AmiBlitz3.ab2@25040>   OR.w #$102d,d1
0003A8F6 <AmiBlitz3.ab2@25041>   MOVE.w d1,-4(a4)
0003A8F8 <AmiBlitz3.ab2@25042>   MOVE.w d3,d1
0003A8FE <AmiBlitz3.ab2@25043> JMP writeword
0003A902 <AmiBlitz3.ab2@25046>   ORI.w #$1000,D1                                          ;word
0003A906 <AmiBlitz3.ab2@25047> BRA.w writestorevar
0003A90C <AmiBlitz3.ab2@25051>    TST.b fast                                              ;optiimmi
0003A910 <AmiBlitz3.ab2@25052>    BEQ 'l10b
0003A916 <AmiBlitz3.ab2@25057>    MOVE.l destpointer,a0
0003A91C <AmiBlitz3.ab2@25058>    SUB.l imm_addr,a0
0003A922 <AmiBlitz3.ab2@25059>    CMP.l #4,a0
0003A926 <AmiBlitz3.ab2@25060>    BNE 'l10
0003A92C <AmiBlitz3.ab2@25061>    CLR.l imm_addr
0003A932 <AmiBlitz3.ab2@25062>    MOVE.l destpointer,a4
0003A936 <AmiBlitz3.ab2@25063>    OR.w #$7c,d1
0003A93A <AmiBlitz3.ab2@25064>    EORI #$3000,d1
0003A93E <AmiBlitz3.ab2@25065>    MOVE.w d1,-4(a4)
0003A940 <AmiBlitz3.ab2@25066>       MOVE.w D3,D1
0003A946 <AmiBlitz3.ab2@25067> JMP writeword
0003A94C <AmiBlitz3.ab2@25070>   MOVE.l destpointer,a0
0003A952 <AmiBlitz3.ab2@25071>   SUB.l load_var_addr,a0
0003A958 <AmiBlitz3.ab2@25072>   CMP.l #4,a0
0003A95C <AmiBlitz3.ab2@25073>   BNE 'l10b
0003A962 <AmiBlitz3.ab2@25074>   CLR.l load_var_addr
0003A968 <AmiBlitz3.ab2@25075>   MOVE.l destpointer,a4
0003A96E <AmiBlitz3.ab2@25076>    CMP.w #$1b6d,-4(a4)
0003A972 <AmiBlitz3.ab2@25077>    BNE 'l10b
0003A976 <AmiBlitz3.ab2@25078>    OR.w #$2d,d1
0003A97A <AmiBlitz3.ab2@25079>    EORI #$3000,d1
0003A97E <AmiBlitz3.ab2@25080>    MOVE.w d1,-4(a4)
0003A980 <AmiBlitz3.ab2@25081>   MOVE.w d3,d1
0003A986 <AmiBlitz3.ab2@25082> JMP writeword
0003A98C <AmiBlitz3.ab2@25085>   ADDQ.w #1,pcodd                                          ;byte
0003A990 <AmiBlitz3.ab2@25086>   EORI.w #$3000,D1
0003A996 <AmiBlitz3.ab2@25089>   JSR writeword
0003A99A <AmiBlitz3.ab2@25090>   BTST #$7,D1
0003A99E <AmiBlitz3.ab2@25091>    BNE JL_0_E0C6
0003A9A0 <AmiBlitz3.ab2@25092>   MOVE.w D3,D1
0003A9A6 <AmiBlitz3.ab2@25093> JMP writeword
0003A9AC <AmiBlitz3.ab2@25096>    TST.b fast                                              ;optiimmi
0003A9B0 <AmiBlitz3.ab2@25097>    BEQ 'l10b
0003A9B6 <AmiBlitz3.ab2@25101>    MOVE.l destpointer,a0
0003A9BC <AmiBlitz3.ab2@25102>    SUB.l imm_addr,a0
0003A9C2 <AmiBlitz3.ab2@25103>    CMP.l #6,a0
0003A9C6 <AmiBlitz3.ab2@25104>    BNE 'l10
0003A9CC <AmiBlitz3.ab2@25105>    CLR.l imm_addr
0003A9D2 <AmiBlitz3.ab2@25106>    MOVE.l destpointer,a4
0003A9D6 <AmiBlitz3.ab2@25107>    OR.w #$7c,d1
0003A9DA <AmiBlitz3.ab2@25108>    MOVE.w d1,-6(a4)
0003A9DC <AmiBlitz3.ab2@25109>     MOVE.w D3,D1
0003A9E2 <AmiBlitz3.ab2@25110> JMP writeword
0003A9E8 <AmiBlitz3.ab2@25113>   MOVE.l destpointer,a0
0003A9EE <AmiBlitz3.ab2@25114>   SUB.l load_var_addr,a0
0003A9F4 <AmiBlitz3.ab2@25115>   CMP.l #4,a0
0003A9F8 <AmiBlitz3.ab2@25116>   BNE 'l10b
0003A9FE <AmiBlitz3.ab2@25117>   CLR.l load_var_addr
0003AA04 <AmiBlitz3.ab2@25118>   MOVE.l destpointer,a4
0003AA0A <AmiBlitz3.ab2@25119>   CMP.w #$245f,-2(a4)
0003AA0E <AmiBlitz3.ab2@25120>   BEQ 'l10b
0003AA12 <AmiBlitz3.ab2@25121>   OR.w #$28,d1
0003AA16 <AmiBlitz3.ab2@25122>   OR.w d1,-4(a4)
0003AA1C <AmiBlitz3.ab2@25123>   CMP.w #$2b6d,-4(a4)
0003AA20 <AmiBlitz3.ab2@25124>   BNE 'd1
0003AA24 <AmiBlitz3.ab2@25125>   CMP.w -2(a4),d3
0003AA28 <AmiBlitz3.ab2@25126>   BNE 'd1
0003AA2E <AmiBlitz3.ab2@25127>   SUBQ.l #4,destpointer
0003AA30 <AmiBlitz3.ab2@25128> RTS
0003AA32 <AmiBlitz3.ab2@25131>   MOVE.w d3,d1
0003AA38 <AmiBlitz3.ab2@25132> JMP writeword
0003AA3E <AmiBlitz3.ab2@25135>   JSR writeword
0003AA42 <AmiBlitz3.ab2@25136>   BTST #$7,D1
0003AA46 <AmiBlitz3.ab2@25137>    BNE.b JL_0_E0C6
0003AA48 <AmiBlitz3.ab2@25138>   MOVE.w D3,D1
0003AA4E <AmiBlitz3.ab2@25139> JMP writeword
0003AA50 <AmiBlitz3.ab2@25142> RTS
0003AA52 <AmiBlitz3.ab2@25146>   MOVE.w D1,-(A7)
0003AA56 <AmiBlitz3.ab2@25147>   MOVE.w pcodd(PC),D1
0003AA58 <AmiBlitz3.ab2@25148>   LSR.w #1,D1
0003AA5C <AmiBlitz3.ab2@25149>    BCC.b JL_0_E0E2
0003AA62 <AmiBlitz3.ab2@25150>   CLR.w pcodd
0003AA68 <AmiBlitz3.ab2@25151>   MOVE.w add1a2,D1
0003AA6E <AmiBlitz3.ab2@25152>    JSR writeword
0003AA70 <AmiBlitz3.ab2@25155>   MOVE.w (A7)+,D1
0003AA72 <AmiBlitz3.ab2@25156> RTS
0003AA74 <AmiBlitz3.ab2@25160> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
0003AA76 <AmiBlitz3.ab2@25163> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
0003AA78 <AmiBlitz3.ab2@25164> listadd:   Ds.w 1                                          ;set to 8 if it's a list
0003AA7A <AmiBlitz3.ab2@25165> listsize:  Ds.w 1
0003AA80 <AmiBlitz3.ab2@25169>   ADDQ.w #1,regnum
0003AA88 <AmiBlitz3.ab2@25170>   MOVE.b #1,nowdeclare
0003AA8E <AmiBlitz3.ab2@25171>   CLR.b dimkeep
0003AA96 <AmiBlitz3.ab2@25172>    CMP.l #"KEEP",-1(a5)
0003AA9A <AmiBlitz3.ab2@25173>   BNE 'nokeep
0003AAA0 <AmiBlitz3.ab2@25174>   CMP.b #" ",3(a5)
0003AAA4 <AmiBlitz3.ab2@25175>   BNE 'nokeep
0003AAA6 <AmiBlitz3.ab2@25176>   ADDQ.l #3,a5
0003AAAA <AmiBlitz3.ab2@25179>     CMP.b #" ",(a5)
0003AAAE <AmiBlitz3.ab2@25180>     BNE '1
0003AAB0 <AmiBlitz3.ab2@25181>    ADDQ #1,a5
0003AAB4 <AmiBlitz3.ab2@25182> BRA '2
0003AABA <AmiBlitz3.ab2@25185>   MOVE.l a5,lastsourcepos
0003AAC2 <AmiBlitz3.ab2@25186>   MOVE.b #1,dimkeep
0003AAC6 <AmiBlitz3.ab2@25194>   MOVE.w #$FF9A,D1
0003AACC <AmiBlitz3.ab2@25195>   JSR uselib
0003AAD2 <AmiBlitz3.ab2@25198>   CLR.w listadd
0003AAD6 <AmiBlitz3.ab2@25199>   CMP.w #-$7F4D,D0
0003AADA <AmiBlitz3.ab2@25200>    BNE.w JL_0_E11E
0003AAE2 <AmiBlitz3.ab2@25201>   MOVE.w #$0008,listadd
0003AAE6 <AmiBlitz3.ab2@25202>   MOVE.w #$FFFA,D1
0003AAEC <AmiBlitz3.ab2@25203>    JSR uselib
0003AAF2 <AmiBlitz3.ab2@25204>    JSR get1bytemain
0003AAF8 <AmiBlitz3.ab2@25207>   CLR.w nonew
0003AAFE <AmiBlitz3.ab2@25208>    JSR getparameter
0003AB06 <AmiBlitz3.ab2@25209>   BTST #$1,flagmask+1
0003AB0A <AmiBlitz3.ab2@25210>    BEQ.w JUMP_syntaxerr
0003AB10 <AmiBlitz3.ab2@25211>    JSR JL_0_8E3C
0003AB16 <AmiBlitz3.ab2@25212>   MOVE.w notshared,D1
0003AB1A <AmiBlitz3.ab2@25213>    BNE.w JL_0_E198
0003AB22 <AmiBlitz3.ab2@25214>   MOVE.w $8(A3),temp1
0003AB28 <AmiBlitz3.ab2@25215>   MOVE.w proceduremode,D2
0003AB2C <AmiBlitz3.ab2@25216>    BNE.w JL_0_E176
0003AB32 <AmiBlitz3.ab2@25217>   MOVE.w globalvarpointer,-(A7)
0003AB3A <AmiBlitz3.ab2@25218>   MOVE.w $4(A3),globalvarpointer
0003AB40 <AmiBlitz3.ab2@25219>   ADDQ.w #4,globalvarpointer
0003AB44 <AmiBlitz3.ab2@25220>    BSR.w write_dim_code
0003AB4A <AmiBlitz3.ab2@25221>   MOVE.w (A7)+,globalvarpointer
0003AB4E <AmiBlitz3.ab2@25222> BRA.w JL_0_E1BA
0003AB54 <AmiBlitz3.ab2@25233>   MOVE.w globalvarpointer,-(A7)
0003AB5A <AmiBlitz3.ab2@25234>             MOVE.w proceduremode,-(a7)
0003AB60 <AmiBlitz3.ab2@25235>             CLR.w proceduremode
0003AB68 <AmiBlitz3.ab2@25236>   MOVE.w $4(A3),globalvarpointer
0003AB6E <AmiBlitz3.ab2@25237>   ADDQ.w #4,globalvarpointer
0003AB72 <AmiBlitz3.ab2@25238>    BSR.w write_dim_code
0003AB78 <AmiBlitz3.ab2@25239>    MOVE.w (a7)+,proceduremode
0003AB7E <AmiBlitz3.ab2@25240>   MOVE.w (A7)+,globalvarpointer
0003AB82 <AmiBlitz3.ab2@25241> BRA.w JL_0_E1BA
0003AB8A <AmiBlitz3.ab2@25244>   MOVE.w #$FFFF,temp1
0003AB8E <AmiBlitz3.ab2@25245>   MOVE.w listadd(PC),D1
0003AB92 <AmiBlitz3.ab2@25246>    BEQ.w JL_0_E1B6
0003AB9A <AmiBlitz3.ab2@25247>   MOVE.w #$4000,temp1
0003ABA0 <AmiBlitz3.ab2@25248>   BSET #$0,$6(A3)
0003ABA6 <AmiBlitz3.ab2@25251>         TST.w proceduremode
0003ABAA <AmiBlitz3.ab2@25252>        BNE 'l1
0003ABB0 <AmiBlitz3.ab2@25253>        MOVE.w locvaroff,-(a7)
0003ABB4 <AmiBlitz3.ab2@25256>   BSR.w write_dim_code
0003ABBA <AmiBlitz3.ab2@25257>         TST.w proceduremode
0003ABBE <AmiBlitz3.ab2@25258>         BNE JL_0_E1BA
0003ABC4 <AmiBlitz3.ab2@25259>        MOVE.w (A7)+,locvaroff
0003ABCA <AmiBlitz3.ab2@25262>   JSR get1bytemain
0003ABCE <AmiBlitz3.ab2@25263>   CMP.w #$2C,D0
0003ABD2 <AmiBlitz3.ab2@25264>    BNE.w JL_0_E1CE
0003ABD8 <AmiBlitz3.ab2@25265>    JSR get1bytemain
0003ABDC <AmiBlitz3.ab2@25266> BRA.w JL_0_E0FC
0003ABDE <AmiBlitz3.ab2@25269> RTS
0003ABE6 <AmiBlitz3.ab2@25272>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
0003ABEC <AmiBlitz3.ab2@25273>   MOVE.w beginarr,D1
0003ABF2 <AmiBlitz3.ab2@25274>    JSR writeword
0003ABF4 <AmiBlitz3.ab2@25275>   MOVEQ.l #$00,D1
0003ABFA <AmiBlitz3.ab2@25276>    JSR writeword
0003ABFC <AmiBlitz3.ab2@25277>   MOVEQ.l #$04,D1
0003AC04 <AmiBlitz3.ab2@25278>   BTST #$0,flagmask+1
0003AC08 <AmiBlitz3.ab2@25279>    BNE.w write_dim_code__pointer
0003AC0C <AmiBlitz3.ab2@25280>   MOVE.w $8(A2),D1
0003AC10 <AmiBlitz3.ab2@25283>   ADD.w listadd(PC),D1                                     ;size of one element.
0003AC16 <AmiBlitz3.ab2@25284>   MOVE.w D1,listsize
0003AC1C <AmiBlitz3.ab2@25285>    JSR writeword
0003AC22 <AmiBlitz3.ab2@25286>   CLR.w temp2                                              ;# dim's got
0003AC24 <AmiBlitz3.ab2@25287>   MOVE.l A3,-(A7)
0003AC2A <AmiBlitz3.ab2@25290>   ADDQ.w #1,temp2
0003AC2C <AmiBlitz3.ab2@25291>   MOVEQ.l #$03,D2                                          ;get word
0003AC32 <AmiBlitz3.ab2@25292>   MOVE.w notshared,-(a7)
0003AC38 <AmiBlitz3.ab2@25293>    JSR eval
0003AC3E <AmiBlitz3.ab2@25294>   MOVE.w (a7)+,notshared
0003AC44 <AmiBlitz3.ab2@25295>   TST.b debugmode
0003AC48 <AmiBlitz3.ab2@25296>    BEQ.w write_dim_code__norerr0
0003AC4C <AmiBlitz3.ab2@25297>   MOVE.w #$C30F,D1
0003AC50 <AmiBlitz3.ab2@25303>       MOVE.w #$5281,d1
0003AC56 <AmiBlitz3.ab2@25304>       JSR writeword
0003AC5C <AmiBlitz3.ab2@25305>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
0003AC62 <AmiBlitz3.ab2@25306>       JSR writelong
0003AC68 <AmiBlitz3.ab2@25307>   MOVE.w proceduremode,D2
0003AC6C <AmiBlitz3.ab2@25308>    BEQ.w write_dim_code__global
0003AC72 <AmiBlitz3.ab2@25309>   SUBQ.w #4,locvaroff
0003AC7C <AmiBlitz3.ab2@25310>   MOVE.w locvaroff,putarr+2
0003AC80 <AmiBlitz3.ab2@25311> BRA.w write_dim_code__doit
0003AC86 <AmiBlitz3.ab2@25314> JMP syntaxerr
0003AC90 <AmiBlitz3.ab2@25317>   MOVE.w globalvarpointer,putarr+2
0003AC96 <AmiBlitz3.ab2@25318>   ADDQ.w #4,globalvarpointer
0003AC9C <AmiBlitz3.ab2@25321>   TST.b dimkeep
0003ACA0 <AmiBlitz3.ab2@25322>            BEQ write_dim_code__doit_l1
0003ACA2 <AmiBlitz3.ab2@25323>       MOVEQ #0,d1
0003ACA8 <AmiBlitz3.ab2@25324>       MOVE.w putarr+2,d1
0003ACAE <AmiBlitz3.ab2@25325>       OR.l  #$222d0000,d1
0003ACB4 <AmiBlitz3.ab2@25326>       MOVE.w proceduremode,D2
0003ACB8 <AmiBlitz3.ab2@25327>       BEQ write_dim_code__doit_l2
0003ACBE <AmiBlitz3.ab2@25328>       TST.w notshared
0003ACC2 <AmiBlitz3.ab2@25329>       BEQ write_dim_code__doit_l2
0003ACC8 <AmiBlitz3.ab2@25330>       SUB.l #$00010000,d1
0003ACCE <AmiBlitz3.ab2@25333>   JSR writelong
0003ACD4 <AmiBlitz3.ab2@25336>   MOVE.l putarr,D1
0003ACDA <AmiBlitz3.ab2@25337>       TST.w notshared
0003ACDE <AmiBlitz3.ab2@25338>       BNE write_dim_code__doit_l1a
0003ACE4 <AmiBlitz3.ab2@25339>       JSR writelong
0003ACE8 <AmiBlitz3.ab2@25340> BRA write_dim_code__doit_l4
0003ACEE <AmiBlitz3.ab2@25343>   JSR pokela5d
0003ACF2 <AmiBlitz3.ab2@25346>   CMP.w #$2C,D0
0003ACF6 <AmiBlitz3.ab2@25347>    BEQ.w write_dim_code__loop
0003ACFA <AmiBlitz3.ab2@25348>   CMP.w #$29,D0
0003ACFE <AmiBlitz3.ab2@25349>    BNE.w JUMP_syntaxerr
0003AD00 <AmiBlitz3.ab2@25350>   MOVEA.l (A7)+,A3
0003AD06 <AmiBlitz3.ab2@25351>   MOVE.w temp1,D1
0003AD0A <AmiBlitz3.ab2@25352>    BMI.w write_dim_code__nocare
0003AD0E <AmiBlitz3.ab2@25356>   BTST #$E,D1
0003AD12 <AmiBlitz3.ab2@25357>    BEQ.w write_dim_code__notl
0003AD1A <AmiBlitz3.ab2@25358>   CMPI.w #$1,temp2
0003AD1E <AmiBlitz3.ab2@25359>    BNE.w JUMP_redimerr
0003AD22 <AmiBlitz3.ab2@25360> BRA.w write_dim_code__nocare
0003AD28 <AmiBlitz3.ab2@25363> JMP redimerr
0003AD2E <AmiBlitz3.ab2@25366>   CMP.w temp2,D1
0003AD32 <AmiBlitz3.ab2@25367>    BNE.w JUMP_redimerr                                      ;range too long
0003AD38 <AmiBlitz3.ab2@25370>   LEA globalvarpointer,A0
0003AD3E <AmiBlitz3.ab2@25371>   MOVE.w proceduremode,D1
0003AD42 <AmiBlitz3.ab2@25372>   BEQ.w write_dim_code__gskip
0003AD48 <AmiBlitz3.ab2@25373>   LEA locvaroff,A0
0003AD4E <AmiBlitz3.ab2@25376>   MOVE.W  extraword,(A0)
0003AD52 <AmiBlitz3.ab2@25377>   BRA.W   write_dim_code__care
0003AD5A <AmiBlitz3.ab2@25380>   MOVE.w temp2,$8(A3)                                      ;set # dim's
0003AD60 <AmiBlitz3.ab2@25383>   LEA doarr,A0
0003AD66 <AmiBlitz3.ab2@25384>   MOVE.w $4(A3),$2(A0)
0003AD6E <AmiBlitz3.ab2@25385>   MOVE.w putarr+2,$6(A0)
0003AD70 <AmiBlitz3.ab2@25386>   MOVE.l (A0)+,D1
0003AD76 <AmiBlitz3.ab2@25387>    JSR writelong
0003AD78 <AmiBlitz3.ab2@25388>   MOVE.l (A0),D1
0003AD7E <AmiBlitz3.ab2@25389>    JSR writelong
0003AD84 <AmiBlitz3.ab2@25390>    TST.b dimkeep
0003AD88 <AmiBlitz3.ab2@25391>   BNE write_dim_code__care_l3
0003AD8C <AmiBlitz3.ab2@25394>   MOVE.w #$C400,D1
0003AD90 <AmiBlitz3.ab2@25395> BRA write_dim_code__care_l2
0003AD94 <AmiBlitz3.ab2@25398>   MOVE.w #$C405,d1
0003AD9A <AmiBlitz3.ab2@25401>   MOVE.w proceduremode,D2
0003AD9E <AmiBlitz3.ab2@25402>    BEQ.w write_dim_code__isg
0003ADA4 <AmiBlitz3.ab2@25403>    TST.w notshared
0003ADA8 <AmiBlitz3.ab2@25404>    BEQ write_dim_code__isg
0003ADAA <AmiBlitz3.ab2@25405>   ADDQ.w #1,D1
0003ADAE <AmiBlitz3.ab2@25408>   MOVE.w listadd(PC),D2
0003ADB2 <AmiBlitz3.ab2@25409>    BEQ.w write_dim_code__isrg
0003ADB4 <AmiBlitz3.ab2@25410>   MOVE.w D1,-(A7)
0003ADB8 <AmiBlitz3.ab2@25411>   MOVE.w setles(PC),D1
0003ADBE <AmiBlitz3.ab2@25412>    JSR writeword
0003ADC2 <AmiBlitz3.ab2@25413>   MOVE.w listsize(PC),D1
0003ADC8 <AmiBlitz3.ab2@25414>    JSR writeword
0003ADCA <AmiBlitz3.ab2@25415>   MOVE.w (A7)+,D1
0003ADCC <AmiBlitz3.ab2@25416>   ADDQ.w #3,D1
0003ADD0 <AmiBlitz3.ab2@25419> BRA.w Atokejsr
0003ADD6 <AmiBlitz3.ab2@25426>     MOVE.l #$f23c4400,d1
0003ADDC <AmiBlitz3.ab2@25428>   MOVE.w regnum,d0
0003ADDE <AmiBlitz3.ab2@25429>   ASL.w #7,d0
0003ADE0 <AmiBlitz3.ab2@25430>   OR.w d0,d1
0003ADE6 <AmiBlitz3.ab2@25431>   JSR writelong
0003ADEC <AmiBlitz3.ab2@25437>     MOVE.l #$40490fd9,d1
0003ADF2 <AmiBlitz3.ab2@25439>   JSR writelong
0003ADF8 <AmiBlitz3.ab2@25440> JMP get1bytemain
0003ADFC <AmiBlitz3.ab2@25444> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
0003AE00 <AmiBlitz3.ab2@25451> vbr:                Ds.l 1
0003AE02 <AmiBlitz3.ab2@25452> cfetchmode:         Ds.w 1                               ;1=fetching a constant
0003AE08 <AmiBlitz3.ab2@25454> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
0003AE0C <AmiBlitz3.ab2@25458> constpcat:          Ds.l 1
0003AE10 <AmiBlitz3.ab2@25459> constlibat:         Ds.l 1
0003AE14 <AmiBlitz3.ab2@25460> constmaxpc:         Dc.l $400
0003AE18 <AmiBlitz3.ab2@25462> stacksize:          Dc.l 32768                           ;stackfuck org source
0003AE1C <AmiBlitz3.ab2@25463> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
0003AE20 <AmiBlitz3.ab2@25464> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
0003AE24 <AmiBlitz3.ab2@25465> lastrestype:        Dc.l newtype_string
0003AE26 <AmiBlitz3.ab2@25466> rescnt:             Ds.w 1                               ;# resident
0003AE28 <AmiBlitz3.ab2@25467> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
0003AE2C <AmiBlitz3.ab2@25468> resat:              Dc.l residents_table                 ;??looks like not used anymore??
0003AE2E <AmiBlitz3.ab2@25469> linedone:           Ds.w 1
0003AE44 <AmiBlitz3.ab2@25470> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
0003AE48 <AmiBlitz3.ab2@25479>   Dc.l 0                                        ; bytetobyte
0003AE4C <AmiBlitz3.ab2@25480>   Dc.l convert_byte_to_word                     ; bytetoword
0003AE50 <AmiBlitz3.ab2@25481>   Dc.l convert_byte_to_long                     ; bytetolong
0003AE54 <AmiBlitz3.ab2@25482>   Dc.l convert_byte_to_quick                    ; bytetoquick
0003AE58 <AmiBlitz3.ab2@25483>   Dc.l convert_byte_to_float                    ; bytetofloat
0003AE5C <AmiBlitz3.ab2@25484>   Dc.l convert_byte_to_long                     ; bytetolong
0003AE60 <AmiBlitz3.ab2@25485>   Dc.l error_convert_types                      ; noconerr
0003AE64 <AmiBlitz3.ab2@25488>   Dc.l convert_word_to_byte                     ; wordtobyte
0003AE68 <AmiBlitz3.ab2@25489>   Dc.l 0                                        ; wordtoword
0003AE6C <AmiBlitz3.ab2@25490>   Dc.l convert_word_to_long                     ; wordtolong
0003AE70 <AmiBlitz3.ab2@25491>   Dc.l convert_word_to_quick                    ; wordtoquick
0003AE74 <AmiBlitz3.ab2@25492>   Dc.l convert_word_to_float                    ; wordtofloat
0003AE78 <AmiBlitz3.ab2@25493>   Dc.l convert_word_to_long                     ; wordtolong
0003AE7C <AmiBlitz3.ab2@25494>   Dc.l error_convert_types                      ; noconerr
0003AE80 <AmiBlitz3.ab2@25497>   Dc.l convert_long_to_byte                     ; longtobyte
0003AE84 <AmiBlitz3.ab2@25498>   Dc.l convert_long_to_word                     ; longtoword
0003AE88 <AmiBlitz3.ab2@25499>   Dc.l 0                                        ; longtolong
0003AE8C <AmiBlitz3.ab2@25500>   Dc.l convert_long_to_quick                    ; longtoquick
0003AE90 <AmiBlitz3.ab2@25501>   Dc.l convert_long_to_float                    ; longtofloat
0003AE94 <AmiBlitz3.ab2@25502>   Dc.l 0                                        ; longtolong
0003AE98 <AmiBlitz3.ab2@25503>   Dc.l error_convert_types                      ; noconerr
0003AE9C <AmiBlitz3.ab2@25506>   Dc.l convert_quick_to_byte                    ; quicktobyte
0003AEA0 <AmiBlitz3.ab2@25507>   Dc.l convert_quick_to_word                    ; quicktoword
0003AEA4 <AmiBlitz3.ab2@25508>   Dc.l convert_quick_to_long                    ; quicktolong
0003AEA8 <AmiBlitz3.ab2@25509>   Dc.l 0                                        ; quicktoquick
0003AEAC <AmiBlitz3.ab2@25510>   Dc.l convert_quick_to_float                   ; quicktofloat
0003AEB0 <AmiBlitz3.ab2@25511>   Dc.l convert_quick_to_long                    ; quicktolong
0003AEB4 <AmiBlitz3.ab2@25512>   Dc.l error_convert_types                      ; noconerr
0003AEB8 <AmiBlitz3.ab2@25515>   Dc.l convert_float_to_byte                    ; floattobyte
0003AEBC <AmiBlitz3.ab2@25516>   Dc.l convert_float_to_word                    ; floattoword
0003AEC0 <AmiBlitz3.ab2@25517>   Dc.l convert_float_to_long                    ; floattolong
0003AEC4 <AmiBlitz3.ab2@25518>   Dc.l convert_float_to_quick                   ; floattoquick
0003AEC8 <AmiBlitz3.ab2@25519>   Dc.l 0                                        ; floattofloat
0003AECC <AmiBlitz3.ab2@25520>   Dc.l convert_float_to_long                    ; floattolong
0003AED0 <AmiBlitz3.ab2@25521>   Dc.l error_convert_types                      ; noconerr
0003AED4 <AmiBlitz3.ab2@25524>   Dc.l convert_long_to_byte                     ; longtobyte
0003AED8 <AmiBlitz3.ab2@25525>   Dc.l convert_long_to_word                     ; longtoword
0003AEDC <AmiBlitz3.ab2@25526>   Dc.l 0                                        ; longtolong
0003AEE0 <AmiBlitz3.ab2@25527>   Dc.l convert_long_to_quick                    ; longtoquick
0003AEE4 <AmiBlitz3.ab2@25528>   Dc.l convert_long_to_float                    ; longtofloat
0003AEE8 <AmiBlitz3.ab2@25529>   Dc.l 0                                        ; longtolong
0003AEEC <AmiBlitz3.ab2@25530>   Dc.l error_convert_types                      ; noconerr
0003AEF0 <AmiBlitz3.ab2@25533>   Dc.l error_convert_types                      ; noconerr
0003AEF4 <AmiBlitz3.ab2@25534>   Dc.l error_convert_types                      ; noconerr
0003AEF8 <AmiBlitz3.ab2@25535>   Dc.l string_to_long                           ; stringtolong
0003AEFC <AmiBlitz3.ab2@25536>   Dc.l error_convert_types                      ; noconerr
0003AF00 <AmiBlitz3.ab2@25537>   Dc.l error_convert_types                      ; noconerr
0003AF04 <AmiBlitz3.ab2@25538>   Dc.l string_to_long                           ; stringtolong
0003AF08 <AmiBlitz3.ab2@25539>   Ds.l 1
0003AF0A <AmiBlitz3.ab2@25545>   Dc.b $00,$2B                                  ;+ ; add
0003AF0E <AmiBlitz3.ab2@25546>   Dc.l do_plus_byte                             ;doplusb
0003AF12 <AmiBlitz3.ab2@25547>   Dc.l do_plus_word                             ;doplusw
0003AF16 <AmiBlitz3.ab2@25548>   Dc.l do_plus_long                             ;doplusl
0003AF1A <AmiBlitz3.ab2@25549>   Dc.l do_plus_long                             ;doplusl
0003AF1E <AmiBlitz3.ab2@25550>   Dc.l do_plus_float                            ;doplusf
0003AF22 <AmiBlitz3.ab2@25551>   Ds.l 1
0003AF26 <AmiBlitz3.ab2@25552>   Dc.l add_strings                              ;addstrings
0003AF28 <AmiBlitz3.ab2@25553>   Dc.b $0B,$B8
0003AF2A <AmiBlitz3.ab2@25555>   Dc.b $00,$2D                                  ;- ; sub
0003AF2E <AmiBlitz3.ab2@25556>   Dc.l do_minus_byte                            ;dominusb
0003AF32 <AmiBlitz3.ab2@25557>   Dc.l do_minus_word                            ;dominusw
0003AF36 <AmiBlitz3.ab2@25558>   Dc.l do_minus_long                            ;dominusl
0003AF3A <AmiBlitz3.ab2@25559>   Dc.l do_minus_long                            ;dominusl
0003AF3E <AmiBlitz3.ab2@25560>   Dc.l do_minus_float                           ;dominusf
0003AF46 <AmiBlitz3.ab2@25561>   Ds.l 2
0003AF48 <AmiBlitz3.ab2@25562>   Dc.b $0B,$B8
0003AF4A <AmiBlitz3.ab2@25564>   Dc.b $00,$2A                                  ;* ; mul
0003AF4E <AmiBlitz3.ab2@25565>   Dc.l do_times_byte                            ;dotimesb
0003AF52 <AmiBlitz3.ab2@25566>   Dc.l do_times_word                            ;dotimesw
0003AF56 <AmiBlitz3.ab2@25567>   Dc.l do_times_long                            ;dotimesl
0003AF5A <AmiBlitz3.ab2@25568>   Dc.l do_times_quick                           ;dotimesq
0003AF5E <AmiBlitz3.ab2@25569>   Dc.l do_times_float                           ;dotimesf
0003AF66 <AmiBlitz3.ab2@25570>   Ds.l 2
0003AF68 <AmiBlitz3.ab2@25571>   Dc.b $0F,$A0
0003AF6A <AmiBlitz3.ab2@25573>   Dc.b $00,$2F                                  ;/ ; div
0003AF6E <AmiBlitz3.ab2@25574>   Dc.l do_Div_byte                              ;dodivb
0003AF72 <AmiBlitz3.ab2@25575>   Dc.l do_Div_word                              ;dodivb
0003AF76 <AmiBlitz3.ab2@25576>   Dc.l do_Div_long                              ;dodivl
0003AF7A <AmiBlitz3.ab2@25577>   Dc.l do_Div_quick                             ;dodivq
0003AF7E <AmiBlitz3.ab2@25578>   Dc.l do_Div_float                             ;dodivf
0003AF86 <AmiBlitz3.ab2@25579>   Ds.l 2
0003AF88 <AmiBlitz3.ab2@25580>   Dc.b $0F,$A0
0003AF8A <AmiBlitz3.ab2@25582>   Dc.b $00,$26                                  ;& ; & int
0003AF8E <AmiBlitz3.ab2@25583>   Dc.l do_AND_byte                              ;doandb
0003AF92 <AmiBlitz3.ab2@25584>   Dc.l do_AND_word                              ;doandw
0003AF96 <AmiBlitz3.ab2@25585>   Dc.l do_AND_long                              ;doandl
0003AF9A <AmiBlitz3.ab2@25586>   Dc.l do_AND_long                              ;doandl
0003AFA6 <AmiBlitz3.ab2@25587>   Ds.l 3
0003AFA8 <AmiBlitz3.ab2@25588>   Dc.b $13,$88
0003AFAA <AmiBlitz3.ab2@25590>   Dc.b $00,$7C                                  ;| ;or int ;
0003AFAE <AmiBlitz3.ab2@25591>   Dc.l do_OR_byte                               ;doorb
0003AFB2 <AmiBlitz3.ab2@25592>   Dc.l do_OR_word                               ;doorw
0003AFB6 <AmiBlitz3.ab2@25593>   Dc.l do_OR_long                               ;doorl
0003AFBA <AmiBlitz3.ab2@25594>   Dc.l do_OR_long                               ;doorl
0003AFC6 <AmiBlitz3.ab2@25595>   Ds.l 3
0003AFC8 <AmiBlitz3.ab2@25596>   Dc.b $13,$88
0003AFCA <AmiBlitz3.ab2@25598>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
0003AFCE <AmiBlitz3.ab2@25599>   Dc.l do_AND_byte                              ;doandb
0003AFD2 <AmiBlitz3.ab2@25600>   Dc.l do_AND_word                              ;doandw
0003AFD6 <AmiBlitz3.ab2@25601>   Dc.l do_AND_long                              ;doandl
0003AFDA <AmiBlitz3.ab2@25602>   Dc.l do_AND_long                              ;doandl
0003AFE6 <AmiBlitz3.ab2@25603>   Ds.l 3
0003AFE8 <AmiBlitz3.ab2@25604>   Dc.b $03,$E8
0003AFEA <AmiBlitz3.ab2@25606>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
0003AFEE <AmiBlitz3.ab2@25607>   Dc.l do_OR_byte                               ;doorb
0003AFF2 <AmiBlitz3.ab2@25608>   Dc.l do_OR_word                               ;doorw
0003AFF6 <AmiBlitz3.ab2@25609>   Dc.l do_OR_long                               ;doorl
0003AFFA <AmiBlitz3.ab2@25610>   Dc.l do_OR_long                               ;doorl
0003B006 <AmiBlitz3.ab2@25611>   Ds.l 3
0003B008 <AmiBlitz3.ab2@25612>   Dc.b $03,$E8
0003B00A <AmiBlitz3.ab2@25614>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
0003B00E <AmiBlitz3.ab2@25615>   Dc.l do_EOR_byte                              ;doeorb
0003B012 <AmiBlitz3.ab2@25616>   Dc.l do_EOR_word                              ;doeorw
0003B016 <AmiBlitz3.ab2@25617>   Dc.l do_EOR_long                              ;doeorl
0003B01A <AmiBlitz3.ab2@25618>   Dc.l do_EOR_long                              ;doeorl
0003B026 <AmiBlitz3.ab2@25619>   Ds.l 3
0003B028 <AmiBlitz3.ab2@25620>   Dc.b $03,$E8
0003B02A <AmiBlitz3.ab2@25622>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
0003B02E <AmiBlitz3.ab2@25623>   Dc.l do_LSL                                   ;dolslb
0003B032 <AmiBlitz3.ab2@25624>   Dc.l do_LSL                                   ;dolslw
0003B036 <AmiBlitz3.ab2@25625>   Dc.l do_LSL                                   ;dolsll
0003B03A <AmiBlitz3.ab2@25626>   Dc.l do_LSL                                   ;dolsll
0003B046 <AmiBlitz3.ab2@25627>   Ds.l 3
0003B048 <AmiBlitz3.ab2@25628>   Dc.b $17,$70
0003B04A <AmiBlitz3.ab2@25630>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
0003B04E <AmiBlitz3.ab2@25631>   Dc.l do_LSL                                   ;dolslb
0003B052 <AmiBlitz3.ab2@25632>   Dc.l do_LSL                                   ;dolslw
0003B056 <AmiBlitz3.ab2@25633>   Dc.l do_LSL                                   ;dolsll
0003B05A <AmiBlitz3.ab2@25634>   Dc.l do_LSL                                   ;dolsll
0003B066 <AmiBlitz3.ab2@25635>   Ds.l 3
0003B068 <AmiBlitz3.ab2@25636>   Dc.b $17,$70
0003B06A <AmiBlitz3.ab2@25638>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
0003B06E <AmiBlitz3.ab2@25639>   Dc.l do_LSR                                   ;dolsrb
0003B072 <AmiBlitz3.ab2@25640>   Dc.l do_LSR                                   ;dolsrw
0003B076 <AmiBlitz3.ab2@25641>   Dc.l do_LSR                                   ;dolsrl
0003B07A <AmiBlitz3.ab2@25642>   Dc.l do_LSR                                   ;dolsrl
0003B086 <AmiBlitz3.ab2@25643>   Ds.l 3
0003B088 <AmiBlitz3.ab2@25644>   Dc.b $17,$70
0003B08A <AmiBlitz3.ab2@25646>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
0003B08E <AmiBlitz3.ab2@25647>   Dc.l do_ASR                                   ;doasrb
0003B092 <AmiBlitz3.ab2@25648>   Dc.l do_ASR                                   ;doasrw
0003B096 <AmiBlitz3.ab2@25649>   Dc.l do_ASR                                   ;doasrl
0003B09A <AmiBlitz3.ab2@25650>   Dc.l do_ASR                                   ;doasrl
0003B0A6 <AmiBlitz3.ab2@25651>   Ds.l 3
0003B0A8 <AmiBlitz3.ab2@25652>   Dc.b $17,$70
0003B0AA <AmiBlitz3.ab2@25654>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
0003B0AE <AmiBlitz3.ab2@25655>   Dc.l do_mod_byte                              ;domodb
0003B0B2 <AmiBlitz3.ab2@25656>   Dc.l do_mod_word                              ;domodw
0003B0B6 <AmiBlitz3.ab2@25657>   Dc.l do_mod_long                              ;domodl
0003B0BA <AmiBlitz3.ab2@25658>   Dc.l do_mod_quick                             ;domodq
0003B0BE <AmiBlitz3.ab2@25659>   Dc.l do_mod_float                             ;domodf
0003B0C6 <AmiBlitz3.ab2@25660>   Ds.l 2
0003B0C8 <AmiBlitz3.ab2@25661>   Dc.b $13,$88
0003B0CA <AmiBlitz3.ab2@25664>   Dc.b $00,$5E                                  ;^
0003B0CE <AmiBlitz3.ab2@25665>   Dc.l do_pow                                   ;dopow
0003B0D2 <AmiBlitz3.ab2@25666>   Dc.l do_pow                                   ;dopow
0003B0D6 <AmiBlitz3.ab2@25667>   Dc.l do_pow                                   ;dopow
0003B0DA <AmiBlitz3.ab2@25668>   Dc.l do_pow                                   ;dopow
0003B0DE <AmiBlitz3.ab2@25669>   Dc.l do_pow                                   ;dopow
0003B0E6 <AmiBlitz3.ab2@25670>   Ds.l 2
0003B0E8 <AmiBlitz3.ab2@25671>   Dc.b $1B,$58                                  ;7000
0003B0EA <AmiBlitz3.ab2@25674>   Dc.b $00,$3D                                  ;=
0003B0EE <AmiBlitz3.ab2@25675>   Dc.l do_equal_byte                            ;doeqb
0003B0F2 <AmiBlitz3.ab2@25676>   Dc.l do_equal_word                            ;doeqw
0003B0F6 <AmiBlitz3.ab2@25677>   Dc.l do_equal_long                            ;doeql
0003B0FA <AmiBlitz3.ab2@25678>   Dc.l do_equal_long                            ;doeql
0003B0FE <AmiBlitz3.ab2@25679>   Dc.l do_equal_float                           ;doeqf
0003B102 <AmiBlitz3.ab2@25680>   Dc.l do_equal_long                            ;doeql
0003B106 <AmiBlitz3.ab2@25681>   Dc.l do_equal_string                          ;doeqs
0003B108 <AmiBlitz3.ab2@25682>   Dc.b $07,$D0                                  ;2000
0003B10A <AmiBlitz3.ab2@25685>   Dc.b $3C,$3E                                  ;<>
0003B10E <AmiBlitz3.ab2@25686>   Dc.l do_not_equal_byte                        ;doneb
0003B112 <AmiBlitz3.ab2@25687>   Dc.l do_not_equal_word                        ;donew
0003B116 <AmiBlitz3.ab2@25688>   Dc.l do_not_equal_long                        ;donel
0003B11A <AmiBlitz3.ab2@25689>   Dc.l do_not_equal_long                        ;donel
0003B11E <AmiBlitz3.ab2@25690>   Dc.l do_not_equal_float                       ;donef
0003B122 <AmiBlitz3.ab2@25691>   Dc.l do_not_equal_long                        ;donel
0003B126 <AmiBlitz3.ab2@25692>   Dc.l do_not_equal_string                      ;dones
0003B128 <AmiBlitz3.ab2@25693>   Dc.b $07,$D0                                  ;2000
0003B12A <AmiBlitz3.ab2@25696>   Dc.b $00,$3C                                  ;<
0003B12E <AmiBlitz3.ab2@25697>   Dc.l do_littler_byte                          ;doltb
0003B132 <AmiBlitz3.ab2@25698>   Dc.l do_littler_word                          ;doltw
0003B136 <AmiBlitz3.ab2@25699>   Dc.l do_littler_long                          ;doltl
0003B13A <AmiBlitz3.ab2@25700>   Dc.l do_littler_long                          ;doltl
0003B13E <AmiBlitz3.ab2@25701>   Dc.l do_littler_float                         ;doltf
0003B142 <AmiBlitz3.ab2@25702>   Dc.l do_littler_long                          ;doltl
0003B146 <AmiBlitz3.ab2@25703>   Dc.l do_littler_string                        ;dolts
0003B148 <AmiBlitz3.ab2@25704>   Dc.b $07,$D0                                  ;2000
0003B14A <AmiBlitz3.ab2@25707>   Dc.b $3C,$3D                                  ;<=
0003B14E <AmiBlitz3.ab2@25708>   Dc.l do_littler_equal_byte                    ;doleb
0003B152 <AmiBlitz3.ab2@25709>   Dc.l do_littler_equal_word                    ;doleb
0003B156 <AmiBlitz3.ab2@25710>   Dc.l do_littler_equal_long                    ;dolel
0003B15A <AmiBlitz3.ab2@25711>   Dc.l do_littler_equal_long                    ;dolel
0003B15E <AmiBlitz3.ab2@25712>   Dc.l do_littler_equal_float                   ;dolef
0003B162 <AmiBlitz3.ab2@25713>   Dc.l do_littler_equal_long                    ;dolel
0003B166 <AmiBlitz3.ab2@25714>   Dc.l do_littler_equal_string                  ;doles
0003B168 <AmiBlitz3.ab2@25715>   Dc.b $07,$D0                                  ;2000
0003B16A <AmiBlitz3.ab2@25718>   Dc.b $00,$3E                                  ;>
0003B16E <AmiBlitz3.ab2@25719>   Dc.l do_greater_byte                          ;dogtb
0003B172 <AmiBlitz3.ab2@25720>   Dc.l do_greater_word                          ;dogtw
0003B176 <AmiBlitz3.ab2@25721>   Dc.l do_greater_long                          ;dogtl
0003B17A <AmiBlitz3.ab2@25722>   Dc.l do_greater_long                          ;dogtl
0003B17E <AmiBlitz3.ab2@25723>   Dc.l do_greater_float                         ;dogtf
0003B182 <AmiBlitz3.ab2@25724>   Dc.l do_greater_long                          ;dogtl
0003B186 <AmiBlitz3.ab2@25725>   Dc.l do_greater_string                        ;dogts
0003B188 <AmiBlitz3.ab2@25726>   Dc.b $07,$D0                                  ;2000
0003B18A <AmiBlitz3.ab2@25729>   Dc.b $3E,$3D                                  ;>=
0003B18E <AmiBlitz3.ab2@25730>   Dc.l do_greater_equal_byte                    ;dogeb
0003B192 <AmiBlitz3.ab2@25731>   Dc.l do_greater_equal_word                    ;dogew
0003B196 <AmiBlitz3.ab2@25732>   Dc.l do_greater_equal_long                    ;dogel
0003B19A <AmiBlitz3.ab2@25733>   Dc.l do_greater_equal_long                    ;dogel
0003B19E <AmiBlitz3.ab2@25734>   Dc.l do_greater_equal_float                   ;dogef
0003B1A2 <AmiBlitz3.ab2@25735>   Dc.l do_greater_equal_long                    ;dogel
0003B1A6 <AmiBlitz3.ab2@25736>   Dc.l do_greater_equal_string                  ;doges
0003B1A8 <AmiBlitz3.ab2@25737>   Dc.b $07,$D0                                  ;2000
0003B1AA <AmiBlitz3.ab2@25739>   Dc.b $80,$CD                                  ;$8000+26+tnum
0003B1AE <AmiBlitz3.ab2@25740>   Dc.l _BitTst
0003B1B2 <AmiBlitz3.ab2@25741>   Dc.l _BitTst
0003B1B6 <AmiBlitz3.ab2@25742>   Dc.l _BitTst
0003B1BA <AmiBlitz3.ab2@25743>   Dc.l _BitTst
0003B1C6 <AmiBlitz3.ab2@25744>   Ds.l 3
0003B1C8 <AmiBlitz3.ab2@25745>   Dc.b $1F,$40                                  ;8000
0003B1CA <AmiBlitz3.ab2@25747>   Dc.b $80,$CE                                  ;$8000+27+tnum
0003B1CE <AmiBlitz3.ab2@25748>   Dc.l _BitSet
0003B1D2 <AmiBlitz3.ab2@25749>   Dc.l _BitSet
0003B1D6 <AmiBlitz3.ab2@25750>   Dc.l _BitSet
0003B1DA <AmiBlitz3.ab2@25751>   Dc.l _BitSet
0003B1E6 <AmiBlitz3.ab2@25752>   Ds.l 3
0003B1E8 <AmiBlitz3.ab2@25753>   Dc.b $1F,$40                                  ;8000
0003B1EA <AmiBlitz3.ab2@25755>   Dc.b $80,$CF                                  ;$8000+28+tnum
0003B1EE <AmiBlitz3.ab2@25756>   Dc.l _BitClr
0003B1F2 <AmiBlitz3.ab2@25757>   Dc.l _BitClr
0003B1F6 <AmiBlitz3.ab2@25758>   Dc.l _BitClr
0003B1FA <AmiBlitz3.ab2@25759>   Dc.l _BitClr
0003B206 <AmiBlitz3.ab2@25760>   Ds.l 3
0003B208 <AmiBlitz3.ab2@25761>   Dc.b $1F,$40                                  ;8000
0003B20A <AmiBlitz3.ab2@25763>   Dc.b $80,$D0                                  ;$8000+29+tnum
0003B20E <AmiBlitz3.ab2@25764>   Dc.l _BitChg
0003B212 <AmiBlitz3.ab2@25765>   Dc.l _BitChg
0003B216 <AmiBlitz3.ab2@25766>   Dc.l _BitChg
0003B21A <AmiBlitz3.ab2@25767>   Dc.l _BitChg
0003B226 <AmiBlitz3.ab2@25768>   Ds.l 3
0003B228 <AmiBlitz3.ab2@25769>   Dc.b $1F,$40                                  ;8000
0003B22A <AmiBlitz3.ab2@25771>   Dc.b $00,$00
0003B22E <AmiBlitz3.ab2@25776> modetable:   Dc.l typemode
0003B232 <AmiBlitz3.ab2@25779> newtypebase: Dc.l newtype_byte
0003B23A <AmiBlitz3.ab2@25782>   Dc.l newtype_word,$01                                    
0003B23C <AmiBlitz3.ab2@25783>   Dc.w $0001
0003B240 <AmiBlitz3.ab2@25784>   Dc.b 13,"b",0,0
0003B248 <AmiBlitz3.ab2@25787>   Dc.l newtype_long,$02
0003B24A <AmiBlitz3.ab2@25788>   Dc.w $0002
0003B24E <AmiBlitz3.ab2@25789>   Dc.b 13,"w",0,0
0003B256 <AmiBlitz3.ab2@25792>   Dc.l newtype_quick,$03                                   
0003B258 <AmiBlitz3.ab2@25793>   Dc.w $0004
0003B25C <AmiBlitz3.ab2@25794>   Dc.b 13,"l",0,0
0003B264 <AmiBlitz3.ab2@25797>   Dc.l newtype_float,$04                                   
0003B266 <AmiBlitz3.ab2@25798>   Dc.w $0004
0003B26A <AmiBlitz3.ab2@25799>   Dc.b 13,"q",0,0
0003B272 <AmiBlitz3.ab2@25803>   Dc.l newtype_double,$05                                  ;make problems on old residents
0003B274 <AmiBlitz3.ab2@25804>   Dc.w $0004
0003B278 <AmiBlitz3.ab2@25805>   Dc.b 13,"f",0,0
0003B280 <AmiBlitz3.ab2@25808>   Dc.l newtype_double,$06
0003B282 <AmiBlitz3.ab2@25809>   Dc.w $0004
0003B286 <AmiBlitz3.ab2@25810>   Dc.b 13,"a",0,0
0003B28E <AmiBlitz3.ab2@25813>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
0003B290 <AmiBlitz3.ab2@25814>   Dc.w $0008
0003B294 <AmiBlitz3.ab2@25815>   Dc.b 13,"d",0,0
0003B29C <AmiBlitz3.ab2@25819>   Dc.l $0000000,$07                                        ;stringtype
0003B29E <AmiBlitz3.ab2@25820>   Dc.w $0004
0003B2A2 <AmiBlitz3.ab2@25821>   Dc.b 13,"s",0,0
0003B2AA <AmiBlitz3.ab2@25824>   Dc.l $00,$00
0003B2AC <AmiBlitz3.ab2@25825>   Dc.w $0000
0003B2B0 <AmiBlitz3.ab2@25826>   Dc.b $01,$00,$00,$00
0003B310 <AmiBlitz3.ab2@25829> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
0003B312 <AmiBlitz3.ab2@25833> dirmode:              Ds.w 1                               ;shows if directmode is on
0003B316 <AmiBlitz3.ab2@25835>                       Ds.l 1                               ;int org source ;intuition!
0003B318 <AmiBlitz3.ab2@25836> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
0003B31C <AmiBlitz3.ab2@25837> maxsat:               Ds.l 1                               ;data1 info pos
0003B31E <AmiBlitz3.ab2@25838> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
0003B320 <AmiBlitz3.ab2@25840> maxsused:             Ds.w 1                               ;maximums used in prog
0003B322 <AmiBlitz3.ab2@25844> dark:                 Ds.w 1                               ;dark compile?
0003B324 <AmiBlitz3.ab2@25845> qlab:                 Ds.w 1                               ;quick lab allocate
0003B328 <AmiBlitz3.ab2@25846> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
0003B32A <AmiBlitz3.ab2@25851> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
0003B32C <AmiBlitz3.ab2@25852> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
0003B330 <AmiBlitz3.ab2@25853> noinits:              Ds.l 1                               ;flag for if we have any init routines!
0003B334 <AmiBlitz3.ab2@25855> letstart:             Ds.l 1
0003B336 <AmiBlitz3.ab2@25856> dontwrite:            Ds.w 1                               ;nomemleft org source
0003B3B6 <AmiBlitz3.ab2@25857> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
0003B3BA <AmiBlitz3.ab2@25859> locdatast:            Ds.l 1
0003B3BE <AmiBlitz3.ab2@25860> firstpend:            Ds.l 1
0003B3C2 <AmiBlitz3.ab2@25864> data2at:              Ds.l 1
0003B3C6 <AmiBlitz3.ab2@25865> data2:                Ds.l 1
0003B3CA <AmiBlitz3.ab2@25866> data1start:           Ds.l 1                               ;data1at org source
0003B3CE <AmiBlitz3.ab2@25867> data1:                Ds.l 1                               ;pc for initialized data!
0003B3D2 <AmiBlitz3.ab2@25868> destbufferstart:      Ds.l 1                               ;pcat org source
0003B3D6 <AmiBlitz3.ab2@25872> destbufferend:        Ds.l 1                               ;libat org source
0003B3DA <AmiBlitz3.ab2@25873> libend:               Ds.l 1                               ;lib org source
0003B3DE <AmiBlitz3.ab2@25874> allat:                Ds.l 1                               ;highest allocmemd location for code
0003B3E8 <AmiBlitz3.ab2@25875> dummyasm:             Dc.w 0,0,0,0,0
0003B3EC <AmiBlitz3.ab2@25876>                       Dc.l 0
0003B3EE <AmiBlitz3.ab2@25877>                       Dc.w 0
0003B3F2 <AmiBlitz3.ab2@25881> buff1:                Ds.l 1                               ;buffer for text get
0003B3F6 <AmiBlitz3.ab2@25882> buff2:                Ds.l 1                               ;ditto for dest
0003B3F8 <AmiBlitz3.ab2@25883> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
0003B3FA <AmiBlitz3.ab2@25884> asmtype:              Ds.w 1                               ;0=contains no prog reference
0003B3FC <AmiBlitz3.ab2@25885> extraword:            Ds.w 1                               ;the extension word for assembler
0003B3FE <AmiBlitz3.ab2@25886> extraword2:           Ds.w 1                               ;ditto
0003B400 <AmiBlitz3.ab2@25887> asmsize:              Ds.w 1
0003B404 <AmiBlitz3.ab2@25888> asmbuff:              Ds.l 1
0003B406 <AmiBlitz3.ab2@25889> asmlen:               Ds.w 1                               ;first (src) text len
0003B408 <AmiBlitz3.ab2@25890> asmlen2:              Ds.w 1                               ;second (dest)
0003B40C <AmiBlitz3.ab2@25891> templabel:            Ds.l 1                               ;linked list of expressions to resolve
0003B40E <AmiBlitz3.ab2@25894> macnum:               Ds.w 1
0003B412 <AmiBlitz3.ab2@25896>                       Dc.l 0                               ;address of next 0 in include fil
0003B416 <AmiBlitz3.ab2@25897> titleat:              Ds.l 1                               ;5 longs for compile streaks
0003B420 <AmiBlitz3.ab2@25898> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
0003B422 <AmiBlitz3.ab2@25899> connest:              Ds.w 1                               ;conditional nest level
0003B426 <AmiBlitz3.ab2@25900> firstconst:           Ds.l 1                               ;first constant (#a)
0003B428 <AmiBlitz3.ab2@25901> numarg:               Ds.w 1                               ;number of macro arguements
0003B42C <AmiBlitz3.ab2@25902> myoline:              Ds.l 1                               ;macro done yet?
0003B430 <AmiBlitz3.ab2@25903> myline:               Ds.l 1                               ;pointer to some memory to create
0003B434 <AmiBlitz3.ab2@25906>                       Ds.l 1
0003B474 <AmiBlitz3.ab2@25907> concomstack:          Ds.l 16                              ;32 deep conditional compilation
0003B478 <AmiBlitz3.ab2@25908> concomsp:             Dc.l concomstack                     ;stack pointer
0003B47A <AmiBlitz3.ab2@25909> oldqflag:             Ds.w 1
0003B47E <AmiBlitz3.ab2@25912>                       Ds.l 1
0003B480 <AmiBlitz3.ab2@25914>                       Ds.w 1
0003B484 <AmiBlitz3.ab2@25915> firstfor:             Ds.l 1                               ;first for
0003B486 <AmiBlitz3.ab2@25916> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
0003B488 <AmiBlitz3.ab2@25917> sbgot:                Ds.w 1                               ;flag for string got 2
0003B48A <AmiBlitz3.ab2@25918> convsize:             Ds.w 1                               ;usertype org source
0003B48C <AmiBlitz3.ab2@25919> userp:                Ds.w 1
0003B490 <AmiBlitz3.ab2@25924> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
0003B492 <AmiBlitz3.ab2@25925> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
0003B494 <AmiBlitz3.ab2@25926> numreps:              Ds.w 1                               ;number of repeats in a repeatable
0003B498 <AmiBlitz3.ab2@25928> locloc:               Ds.l 1
0003B49A <AmiBlitz3.ab2@25929> locchar:              Ds.w 1
0003B51A <AmiBlitz3.ab2@25930> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
0003B51C <AmiBlitz3.ab2@25931> commode:              Ds.w 1                               ;in comma mode...
0003B520 <AmiBlitz3.ab2@25932> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
0003B524 <AmiBlitz3.ab2@25933> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
0003B528 <AmiBlitz3.ab2@25934> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
0003B52A <AmiBlitz3.ab2@25936>                       Ds.w 1                               ;opt reset offset
0003B62A <AmiBlitz3.ab2@25938>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
0003B72A <AmiBlitz3.ab2@25940>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
0003B72C <AmiBlitz3.ab2@25941> varcodelen:           Ds.w 1                               ;and length
0003B72E <AmiBlitz3.ab2@25943>                       Ds.w 1
0003B734 <AmiBlitz3.ab2@25944> oldvcodelen:          Ds.w 3                               ;old varcodelen
0003B738 <AmiBlitz3.ab2@25948> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
0003B73A <AmiBlitz3.ab2@25949> memlibstat:           Ds.w 1                               ;status of memory library during
0003B73C <AmiBlitz3.ab2@25952>                       Dc.w 0
0003B73E <AmiBlitz3.ab2@25954>                       Dc.w 0
0003B740 <AmiBlitz3.ab2@25956> varmode:              Ds.w 1                               ;0 a5 pointer to global
0003B744 <AmiBlitz3.ab2@25958> currentfunction:      Ds.l 1                               ;thisproc org source
0003B748 <AmiBlitz3.ab2@25959> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
0003B74A <AmiBlitz3.ab2@25960> 
0003B74C <AmiBlitz3.ab2@25962> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
0003B750 <AmiBlitz3.ab2@25963> passstack:            Ds.l 1
0003B754 <AmiBlitz3.ab2@25964> zero:                 Ds.l 1                               ;ZERO!
0003B756 <AmiBlitz3.ab2@25965> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
0003B75A <AmiBlitz3.ab2@25967> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
0003B75E <AmiBlitz3.ab2@25968> constantbase:         Ds.l 1                               ;firstinc org source ;first include
0003B760 <AmiBlitz3.ab2@25969> lasta6:               Dc.w $FFFF                           ;-1 org source
0003B762 <AmiBlitz3.ab2@25970> instringon:           Ds.w 1                               ;quoteflag org source
0003B766 <AmiBlitz3.ab2@25971> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
0003B76A <AmiBlitz3.ab2@25972> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
0003B76E <AmiBlitz3.ab2@25973> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
0003B772 <AmiBlitz3.ab2@25974> endop:                Ds.l 1                               ;end of program pc - before finishups!
0003B776 <AmiBlitz3.ab2@25975> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
0003B77A <AmiBlitz3.ab2@25976> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
0003B77C <AmiBlitz3.ab2@25977> numstatic:            Ds.w 1                               ;number of static structs
0003B780 <AmiBlitz3.ab2@25978> staticdata:           Ds.l 1                               ;data1 val for statics
0003B784 <AmiBlitz3.ab2@25979> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
0003B786 <AmiBlitz3.ab2@25980> sbasegot:             Ds.w 1                               ;string base got?
0003B78A <AmiBlitz3.ab2@25981> litdata1:             Ds.l 1
0003B78E <AmiBlitz3.ab2@25985> objlen:               Ds.l 1
0003B792 <AmiBlitz3.ab2@25986> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
0003B796 <AmiBlitz3.ab2@25987> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
0003B798 <AmiBlitz3.ab2@25989> flagmask:             Ds.w 1                               ;mask for flag of variable when
0003B79A <AmiBlitz3.ab2@25991> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
0003B79C <AmiBlitz3.ab2@25992> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
0003B7A0 <AmiBlitz3.ab2@25993> temp1:                Ds.l 1
0003B7A4 <AmiBlitz3.ab2@25994> temp2:                Ds.l 1
0003B7A8 <AmiBlitz3.ab2@25996> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
0003B7AC <AmiBlitz3.ab2@25997> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
0003B820 <AmiBlitz3.ab2@25998> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
0003B824 <AmiBlitz3.ab2@25999> fib_Size:             Ds.l 1                               ;namebuff+124 org source
0003B8A4 <AmiBlitz3.ab2@26001> namebuff2:            Ds.b 128
0003B8AC <AmiBlitz3.ab2@26002>                       Ds.b 8                               ;for fileinfoblock
0003B8EC <AmiBlitz3.ab2@26005> optstuff:             Ds.b 64                              ;temp opt make buffer
0003B92A <AmiBlitz3.ab2@26013>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
0003B930 <AmiBlitz3.ab2@26014>   MOVE.l #1000,D0
0003B932 <AmiBlitz3.ab2@26015>   JSR (A1)
0003B934 <AmiBlitz3.ab2@26016> RTS
0003B936 <AmiBlitz3.ab2@26022>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
0003B93A <AmiBlitz3.ab2@26023>   Dc.l xtra_versionnumber                                  ; vers org source
0003B93E <AmiBlitz3.ab2@26024>   Dc.l create_iconfile                                     ; create icon for executable
0003B942 <AmiBlitz3.ab2@26025>   Ds.l 1
0003B944 <AmiBlitz3.ab2@26027>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
0003B948 <AmiBlitz3.ab2@26030>   Dc.l set_use_debugger
0003B94C <AmiBlitz3.ab2@26031>   Dc.l AL_0_11010                                          ;+obsolet: debugger
0003B950 <AmiBlitz3.ab2@26032>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
0003B954 <AmiBlitz3.ab2@26033>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
0003B958 <AmiBlitz3.ab2@26034>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
0003B95C <AmiBlitz3.ab2@26035>   Dc.l set_make_smallestcode
0003B960 <AmiBlitz3.ab2@26036>   Dc.l set_link_debuginfo
0003B964 <AmiBlitz3.ab2@26037>   Dc.l set_autorun
0003B968 <AmiBlitz3.ab2@26038>   Dc.l set_interruptcheck
0003B96C <AmiBlitz3.ab2@26039>   Dc.l set_assemblercheck
0003B970 <AmiBlitz3.ab2@26041>   Dc.l set_overflowcheck
0003B974 <AmiBlitz3.ab2@26042>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
0003B978 <AmiBlitz3.ab2@26043>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
0003B97C <AmiBlitz3.ab2@26044>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
0003B980 <AmiBlitz3.ab2@26047>   Ds.l 1
0003B982 <AmiBlitz3.ab2@26049>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
0003B986 <AmiBlitz3.ab2@26056>   Dc.l objectbuffer
0003B98A <AmiBlitz3.ab2@26057>   Dc.l libsbuffer
0003B98E <AmiBlitz3.ab2@26058>   Dc.l systembuffer
0003B992 <AmiBlitz3.ab2@26059>   Dc.l databuffer
0003B996 <AmiBlitz3.ab2@26060>   Dc.l macrobuffer_size
0003B99A <AmiBlitz3.ab2@26061>   Dc.l stringbuffer
0003B99E <AmiBlitz3.ab2@26064>   Ds.l 1
0003B9A0 <AmiBlitz3.ab2@26068>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
0003B9A8 <AmiBlitz3.ab2@26069>   Dc.l residents_table,0
0003B9AA <AmiBlitz3.ab2@26073>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
0003B9B2 <AmiBlitz3.ab2@26074>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
0003B9B4 <AmiBlitz3.ab2@26075>   Ds.w 1
0003BAB0 <AmiBlitz3.ab2@26079>   Ds.l 63
0003BBAC <AmiBlitz3.ab2@26080>   Ds.l 63
0003BCA8 <AmiBlitz3.ab2@26081>   Ds.l 63
0003BD8A <AmiBlitz3.ab2@26082>   Ds.w 113
0003BD8C <AmiBlitz3.ab2@26085> comsettings_message:  Ds.w 1                               ;allchg org source
0003BD8E <AmiBlitz3.ab2@26086> xtra_versionnumber:   Ds.w 1                               ;vers org source
0003BD94 <AmiBlitz3.ab2@26090>   CLR.b exefilename
0003BD96 <AmiBlitz3.ab2@26091>   TST.l d0
0003BD9A <AmiBlitz3.ab2@26092>   BNE read_xtrafile__l10
0003BD9C <AmiBlitz3.ab2@26093> RTS
0003BDA2 <AmiBlitz3.ab2@26096>   JSR free_residents                                       ;jsr freeres2 org source
0003BDA8 <AmiBlitz3.ab2@26097>   LEA ptr_xtradata,A2
0003BDAA <AmiBlitz3.ab2@26098>   MOVEQ.l #$00,D4
0003BDAC <AmiBlitz3.ab2@26101>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
0003BDB0 <AmiBlitz3.ab2@26102>     BEQ.b read_xtrafile__done
0003BDB2 <AmiBlitz3.ab2@26105>     MOVE.l (A2)+,D2
0003BDB6 <AmiBlitz3.ab2@26106>   BEQ.b read_xtrafile__loop
0003BDB8 <AmiBlitz3.ab2@26108>   MOVE.l D4,D3
0003BDBA <AmiBlitz3.ab2@26109>   MOVE.l D7,D1
0003BDBE <AmiBlitz3.ab2@26110>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003BDC0 <AmiBlitz3.ab2@26111>   TST.l D0
0003BDC4 <AmiBlitz3.ab2@26112>   BNE.b read_xtrafile__loop2
0003BDC8 <AmiBlitz3.ab2@26113> BRA.w read_xtrafile__done2
0003BDCE <AmiBlitz3.ab2@26116>   TST.b xtra_versionnumber
0003BDD2 <AmiBlitz3.ab2@26117>    BNE.b read_xtrafile__nover0
0003BDDA <AmiBlitz3.ab2@26118>   MOVE.w #$0080,set_autorun                                ;auto run on
0003BDE4 <AmiBlitz3.ab2@26119>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
0003BDEA <AmiBlitz3.ab2@26120>   CLR.w set_assemblercheck                                 ;assembler checking off
0003BDF4 <AmiBlitz3.ab2@26121>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
0003BDF8 <AmiBlitz3.ab2@26122> BRA.b read_xtrafile__ver0
0003BDFA <AmiBlitz3.ab2@26125>   MOVE.l D7,D1                                             ;load cli arg!
0003BE00 <AmiBlitz3.ab2@26126>   MOVE.l #str_cliarguments,D2
0003BE06 <AmiBlitz3.ab2@26127>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
0003BE0A <AmiBlitz3.ab2@26128>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003BE10 <AmiBlitz3.ab2@26129>   MOVE.l #str_cliarguments,A0
0003BE16 <AmiBlitz3.ab2@26130>   ADDA.l #115,A0
0003BE1C <AmiBlitz3.ab2@26131>   MOVE.l #0,(a0) ; terminate it!
0003BE1E <AmiBlitz3.ab2@26133>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
0003BE24 <AmiBlitz3.ab2@26134>   MOVE.l #stacksize,D2
0003BE2A <AmiBlitz3.ab2@26135>   MOVE.l #4,D3
0003BE2E <AmiBlitz3.ab2@26136>   JSR _Read(A6)
0003BE38 <AmiBlitz3.ab2@26137>   CMP.l ##MIN_STACKSIZE,stacksize
0003BE3C <AmiBlitz3.ab2@26138>   BGE 'stackok
0003BE46 <AmiBlitz3.ab2@26139>   MOVE.l ##MIN_STACKSIZE,stacksize
0003BE48 <AmiBlitz3.ab2@26142>   MOVE.l D7,D1
0003BE4E <AmiBlitz3.ab2@26143>   MOVE.l #versioninformation,D2
0003BE54 <AmiBlitz3.ab2@26144>   MOVE.l #4,D3
0003BE58 <AmiBlitz3.ab2@26145>   JSR _Read(A6)
0003BE5A <AmiBlitz3.ab2@26147>   MOVE.l D7,D1
0003BE60 <AmiBlitz3.ab2@26148>   MOVE.l #number_of_builds,D2
0003BE66 <AmiBlitz3.ab2@26149>   MOVE.l #4,D3
0003BE6A <AmiBlitz3.ab2@26150>   JSR _Read(A6)
0003BE70 <AmiBlitz3.ab2@26156>   MOVE.l A7,errstack
0003BE7A <AmiBlitz3.ab2@26157>   MOVE.l #read_xtrafile__done2,errcont
0003BE82 <AmiBlitz3.ab2@26158>   MOVE.w #$FFFF,ezerr
0003BE88 <AmiBlitz3.ab2@26161>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
0003BE8A <AmiBlitz3.ab2@26162>     MOVEQ.l #$04,D3
0003BE8C <AmiBlitz3.ab2@26163>     MOVE.l D7,D1
0003BE90 <AmiBlitz3.ab2@26164>     JSR _Read(A6)
0003BE92 <AmiBlitz3.ab2@26165>     TST.l D0
0003BE96 <AmiBlitz3.ab2@26166>     BEQ.b read_xtrafile__done2
0003BE9C <AmiBlitz3.ab2@26167>     MOVE.w temp1,D1
0003BE9E <AmiBlitz3.ab2@26168>     TST.w d1                                               ;new
0003BEA2 <AmiBlitz3.ab2@26169>     BEQ read_xtrafile__done2                                         ;new
0003BEA8 <AmiBlitz3.ab2@26170>      JSR AJL_0_6F1A
0003BEAE <AmiBlitz3.ab2@26172>     CMP.l #0,a1
0003BEB2 <AmiBlitz3.ab2@26173>     BEQ read_xtrafile__dloop
0003BEB6 <AmiBlitz3.ab2@26174>     MOVE.l $12(A1),D0
0003BEBE <AmiBlitz3.ab2@26175>     MOVE.w temp1+2,-$4(A1,D0.L)
0003BEC2 <AmiBlitz3.ab2@26176> BRA.b read_xtrafile__dloop
0003BEC6 <AmiBlitz3.ab2@26182>   LEA residents_table(PC),A0
0003BEC8 <AmiBlitz3.ab2@26183>   MOVEQ.l #$07,D0
0003BECC <AmiBlitz3.ab2@26186>     CLR.l $40(A0)
0003BED0 <AmiBlitz3.ab2@26187>     LEA ResidentEntryStep(A0),A0   ; $44
0003BED4 <AmiBlitz3.ab2@26188>   DBF D0,read_xtrafile__loop3
0003BED8 <AmiBlitz3.ab2@26190>   MOVEM.l D7/A6,-(A7)
0003BEDE <AmiBlitz3.ab2@26191>   JSR init_buffers
0003BEE4 <AmiBlitz3.ab2@26192>   JSR reloadresident
0003BEE8 <AmiBlitz3.ab2@26193>   MOVEM.l (A7)+,D7/A6
0003BEEA <AmiBlitz3.ab2@26194> RTS
0003BEF2 <AmiBlitz3.ab2@26198>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
0003BEF8 <AmiBlitz3.ab2@26207>   LEA ptr_xtradata,A2
0003BEFA <AmiBlitz3.ab2@26208>   MOVEQ.l #$00,D4
0003BEFC <AmiBlitz3.ab2@26212>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
0003BF00 <AmiBlitz3.ab2@26213>   BEQ.b write_xtrafile__done
0003BF02 <AmiBlitz3.ab2@26216>    MOVE.l (A2)+,D2
0003BF06 <AmiBlitz3.ab2@26217>    BEQ.b write_xtrafile__loop
0003BF08 <AmiBlitz3.ab2@26219>    MOVE.l D4,D3
0003BF0A <AmiBlitz3.ab2@26220>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
0003BF0E <AmiBlitz3.ab2@26221>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
0003BF12 <AmiBlitz3.ab2@26222> BRA.b write_xtrafile__loop2
0003BF14 <AmiBlitz3.ab2@26225>   MOVE.l D7,D1
0003BF1A <AmiBlitz3.ab2@26226>   MOVE.l #str_cliarguments,D2
0003BF20 <AmiBlitz3.ab2@26227>   MOVE.l #116,D3
0003BF24 <AmiBlitz3.ab2@26228>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
0003BF26 <AmiBlitz3.ab2@26230>   MOVE.l D7,D1
0003BF2C <AmiBlitz3.ab2@26231>   MOVE.l #stacksize,D2
0003BF32 <AmiBlitz3.ab2@26232>   MOVE.l #4,D3
0003BF36 <AmiBlitz3.ab2@26233>   JSR _Write(A6)
0003BF38 <AmiBlitz3.ab2@26235>   MOVE.l D7,D1
0003BF3E <AmiBlitz3.ab2@26236>   MOVE.l #versioninformation,D2
0003BF44 <AmiBlitz3.ab2@26237>   MOVE.l #4,D3
0003BF48 <AmiBlitz3.ab2@26238>   JSR _Write(A6)
0003BF4A <AmiBlitz3.ab2@26240>   MOVE.l D7,D1
0003BF50 <AmiBlitz3.ab2@26241>   MOVE.l #number_of_builds,D2
0003BF56 <AmiBlitz3.ab2@26242>   MOVE.l #4,D3
0003BF5A <AmiBlitz3.ab2@26243>   JSR _Write(A6)
0003BF60 <AmiBlitz3.ab2@26249>   LEA libpointer,A2
0003BF62 <AmiBlitz3.ab2@26252>     MOVE.l (A2),D0
0003BF66 <AmiBlitz3.ab2@26253>     BEQ.w write_xtrafile__done2
0003BF68 <AmiBlitz3.ab2@26254>     MOVEA.l D0,A2
0003BF6C <AmiBlitz3.ab2@26255>     MOVE.l $12(A2),D4
0003BF70 <AmiBlitz3.ab2@26256>     TST.w -$2(A2,D4.L)
0003BF74 <AmiBlitz3.ab2@26257>     BEQ.w write_xtrafile__loop3
0003BF78 <AmiBlitz3.ab2@26259>     LEA $4(A2),A0
0003BF7A <AmiBlitz3.ab2@26260>     MOVE.l A0,D2
0003BF7C <AmiBlitz3.ab2@26261>     MOVEQ.l #$02,D3
0003BF7E <AmiBlitz3.ab2@26262>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
0003BF82 <AmiBlitz3.ab2@26263>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003BF86 <AmiBlitz3.ab2@26265>     LEA -$4(A2,D4.L),A0
0003BF88 <AmiBlitz3.ab2@26266>     MOVE.l A0,D2
0003BF8A <AmiBlitz3.ab2@26267>     MOVEQ.l #$02,D3
0003BF8C <AmiBlitz3.ab2@26268>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
0003BF90 <AmiBlitz3.ab2@26269>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003BF94 <AmiBlitz3.ab2@26270> BRA.w write_xtrafile__loop3
0003BF9A <AmiBlitz3.ab2@26275>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
0003BF9C <AmiBlitz3.ab2@26276>   MOVE.l A2,D2           ; move the address to d2
0003BFA2 <AmiBlitz3.ab2@26277>   MOVE.l #4,D3           ; we only need 4 bytes to save
0003BFA4 <AmiBlitz3.ab2@26278>   MOVE.l D7,D1           ; we set the file handle
0003BFA8 <AmiBlitz3.ab2@26279>   JSR _Write(A6)         ; and we write it.
0003BFAA <AmiBlitz3.ab2@26281> RTS
0003BFB0 <AmiBlitz3.ab2@26285>   LEA optssave,A0
0003BFB6 <AmiBlitz3.ab2@26286>   LEA ptr_xtradata,A1
0003BFB8 <AmiBlitz3.ab2@26289>   MOVE.w (A1)+,D0                                          ;length of data move
0003BFBC <AmiBlitz3.ab2@26290>   BEQ.b menu_compileroptions__done
0003BFBE <AmiBlitz3.ab2@26291>   SUBQ.w #1,D0
0003BFC0 <AmiBlitz3.ab2@26294>     MOVE.l (A1)+,D1
0003BFC4 <AmiBlitz3.ab2@26295>     BEQ.b menu_compileroptions__loop
0003BFC6 <AmiBlitz3.ab2@26296>     MOVEA.l D1,A2
0003BFC8 <AmiBlitz3.ab2@26297>     MOVE.w D0,D1
0003BFCA <AmiBlitz3.ab2@26300>       MOVE.b (A2)+,(A0)+
0003BFCE <AmiBlitz3.ab2@26301>   DBF D1,menu_compileroptions__loop3
0003BFD2 <AmiBlitz3.ab2@26303> BRA.w menu_compileroptions__loop2
0003BFD8 <AmiBlitz3.ab2@26307>   LEA bufferlist,A1
0003BFDA <AmiBlitz3.ab2@26310>     MOVE.l (A1)+,D2
0003BFDE <AmiBlitz3.ab2@26311>     BEQ.b menu4c
0003BFE0 <AmiBlitz3.ab2@26313>     MOVEA.l D2,A0
0003BFE2 <AmiBlitz3.ab2@26314>     MOVE.l (A0),D2
0003BFE4 <AmiBlitz3.ab2@26315>     ADDQ.w #8,A0
0003BFEA <AmiBlitz3.ab2@26316>     JSR makelong
0003BFEE <AmiBlitz3.ab2@26317> BRA.b menu_compileroptions__loop4
0003BFF4 <AmiBlitz3.ab2@26320>   CLR.w state_of_residents                                 ;resident change
0003BFFA <AmiBlitz3.ab2@26321>   CLR.w comsettings_message                                ;alloc change
0003C000 <AmiBlitz3.ab2@26322>   CLR.w maxobject_pos
0003C006 <AmiBlitz3.ab2@26325>     Gosub newoptionsfunc
0003C00A <AmiBlitz3.ab2@26337>     CMP.w #-$1,D7
0003C00E <AmiBlitz3.ab2@26338>      BNE.w settings_events
0003C012 <AmiBlitz3.ab2@26339>     CMP.w #$5,D6                                           ; vorher $6
0003C016 <AmiBlitz3.ab2@26340>      BHI.w menu4c__notmax2                                      ; 6, 9, F, 10, 11, 14
0003C01C <AmiBlitz3.ab2@26341>     MOVE.w D6,comsettings_message
0003C020 <AmiBlitz3.ab2@26342> BRA.w settings_events
0003C024 <AmiBlitz3.ab2@26345>   CMP.w #$A,D6
0003C028 <AmiBlitz3.ab2@26346>   BNE.w JL_0_10084                                         ; JL_0_1003C
0003C030 <AmiBlitz3.ab2@26348>   BTST #$7,use_debugger                                    ;runtime ERROR
0003C034 <AmiBlitz3.ab2@26349>   BNE 'debugon
0003C03A <AmiBlitz3.ab2@26350>   CLR.w debugmode
0003C03E <AmiBlitz3.ab2@26351> BRA.b 'debugoff
0003C044 <AmiBlitz3.ab2@26354>   SNE debugmode
0003C046 <AmiBlitz3.ab2@26357>   MOVE.l a0,-(a7)
0003C07E <AmiBlitz3.ab2@26360>   !ComData_SetB{comByte_DebugMode,debugmode}
0003C080 <AmiBlitz3.ab2@26361>   MOVE.l (a7)+,a0
0003C084 <AmiBlitz3.ab2@26363> BRA.w settings_events
0003C088 <AmiBlitz3.ab2@26367>   CMP.w #$11,D6
0003C08C <AmiBlitz3.ab2@26368>    BCS.w settings_events
0003C090 <AmiBlitz3.ab2@26369>   CMP.w #$14,D6
0003C094 <AmiBlitz3.ab2@26370>    BHI.w settings_events
0003C098 <AmiBlitz3.ab2@26371>   BEQ.w menu4canc
0003C09A <AmiBlitz3.ab2@26374>   MOVE.w D6,-(A7)
0003C0A0 <AmiBlitz3.ab2@26375>   MOVE.w comsettings_message,D0
0003C0A4 <AmiBlitz3.ab2@26376>    BEQ.w menu4c__skip
0003C0AA <AmiBlitz3.ab2@26377>   JSR init_buffers
0003C0B0 <AmiBlitz3.ab2@26380>   MOVE.w state_of_residents,D0
0003C0B4 <AmiBlitz3.ab2@26381>    BEQ.w menu4c__zdone
0003C0BA <AmiBlitz3.ab2@26382>   JSR reloadresident
0003C0BC <AmiBlitz3.ab2@26385>   MOVE.w (A7)+,D6
0003C0C0 <AmiBlitz3.ab2@26387>   CMP.w #$12,D6
0003C0C4 <AmiBlitz3.ab2@26388>    BEQ.w JUMP_menu_compile_run
0003C0C8 <AmiBlitz3.ab2@26389>   CMP.w #$13,D6
0003C0CC <AmiBlitz3.ab2@26390>    BEQ.w JUMP_menu_createexecutable
0003C0CE <AmiBlitz3.ab2@26391> RTS
0003C0D4 <AmiBlitz3.ab2@26394> JMP menu_compile_run
0003C0DA <AmiBlitz3.ab2@26397> JMP menu_createexecutable
0003C0E0 <AmiBlitz3.ab2@26401>   LEA optssave,A0
0003C0E6 <AmiBlitz3.ab2@26402>   LEA ptr_xtradata,A1
0003C0E8 <AmiBlitz3.ab2@26405>   MOVE.w (A1)+,D0
0003C0EC <AmiBlitz3.ab2@26406>   BEQ.b menu4canc__done
0003C0EE <AmiBlitz3.ab2@26407>   SUBQ.w #1,D0
0003C0F0 <AmiBlitz3.ab2@26410>     MOVE.l (A1)+,D1
0003C0F4 <AmiBlitz3.ab2@26411>     BEQ.b menu4canc__loop
0003C0F6 <AmiBlitz3.ab2@26412>     MOVEA.l D1,A2
0003C0F8 <AmiBlitz3.ab2@26413>     MOVE.w D0,D1
0003C0FA <AmiBlitz3.ab2@26416>       MOVE.b (A0)+,(A2)+
0003C0FE <AmiBlitz3.ab2@26417>   DBF D1,menu4canc__loop3
0003C102 <AmiBlitz3.ab2@26419> BRA.b menu4canc__loop2
0003C104 <AmiBlitz3.ab2@26422> RTS
0003C106 <AmiBlitz3.ab2@26426>   MOVE.l d0,a1
0003C10C <AmiBlitz3.ab2@26427>   MOVEA.l libpointer,A2
0003C110 <AmiBlitz3.ab2@26430>     MOVE.l $12(A2),D0
0003C114 <AmiBlitz3.ab2@26431>     TST.w -$2(A2,D0.L)
0003C118 <AmiBlitz3.ab2@26432>      BEQ.w JL_0_102AAa
0003C11A <AmiBlitz3.ab2@26433>     SUBQ.w #1,D1
0003C11E <AmiBlitz3.ab2@26434>      BPL.w JL_0_102AAa
0003C122 <AmiBlitz3.ab2@26435>     MOVEA.l -$1A(A2,D0.L),A3
0003C124 <AmiBlitz3.ab2@26436>     ADDA.l A2,A3
0003C126 <AmiBlitz3.ab2@26439>       MOVE.b (A3)+,(A1)+
0003C12A <AmiBlitz3.ab2@26440>     BNE.w JL_0_10294a
0003C12C <AmiBlitz3.ab2@26442>     CLR.b -(A1)
0003C130 <AmiBlitz3.ab2@26443>     MOVE.w -$4(A2,D0.L),D0
0003C136 <AmiBlitz3.ab2@26444>     AND.l #$ffff,d0
0003C138 <AmiBlitz3.ab2@26445> RTS
0003C13A <AmiBlitz3.ab2@26448>     MOVEA.l (A2),A2
0003C13E <AmiBlitz3.ab2@26449> BRA.w JL_0_1027Ca
0003C14E <AmiBlitz3.ab2@26454> str_maxobjects_name:   Dc.b "              ",0 : Even
0003C15E <AmiBlitz3.ab2@26455> str_maxobjects_name2:  Dc.b "              ",0 : Even
0003C162 <AmiBlitz3.ab2@26456> objectbuffer:          Dc.l $00004000
0003C166 <AmiBlitz3.ab2@26457>                        Dc.l $00000000
0003C172 <AmiBlitz3.ab2@26458> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
0003C176 <AmiBlitz3.ab2@26460> libsbuffer:            Dc.l $00008000
0003C17A <AmiBlitz3.ab2@26461>                        Dc.l $00000000
0003C186 <AmiBlitz3.ab2@26462> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
0003C18A <AmiBlitz3.ab2@26464> systembuffer:          Dc.l $00001000                      ; systen buffer
0003C18E <AmiBlitz3.ab2@26465>                        Dc.l $00000000
0003C19A <AmiBlitz3.ab2@26466> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003C19E <AmiBlitz3.ab2@26468> databuffer:            Dc.l $00001000                      ; data buffer
0003C1A2 <AmiBlitz3.ab2@26469>                        Dc.l $00000000
0003C1AE <AmiBlitz3.ab2@26470> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003C1B2 <AmiBlitz3.ab2@26472> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
0003C1B6 <AmiBlitz3.ab2@26473>                        Dc.l $00000000
0003C1C2 <AmiBlitz3.ab2@26474> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
0003C1C6 <AmiBlitz3.ab2@26476> stringbuffer:          Dc.l $00002800                      ; string buffer
0003C1CA <AmiBlitz3.ab2@26477>                        Dc.l $00000000
0003C1D6 <AmiBlitz3.ab2@26478> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
0003C1D8 <AmiBlitz3.ab2@26480> maxobjects_value:      Dc.w $0064
0003C1DC <AmiBlitz3.ab2@26481>                        Dc.l $00000000
0003C1E8 <AmiBlitz3.ab2@26482> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
0003C1EA <AmiBlitz3.ab2@26484> maxobjects_value2:     Dc.w $0014
0003C1EC <AmiBlitz3.ab2@26485>                        Dc.w $0000
0003C1F8 <AmiBlitz3.ab2@26487> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
0003C1F9 <AmiBlitz3.ab2@26491> set_create_iconfile:   Dc.b $00
0003C1FC <AmiBlitz3.ab2@26492> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0003C1FE <AmiBlitz3.ab2@26493>                        Dc.b $00,$01
0003C1FF <AmiBlitz3.ab2@26495> set_use_debugger:      Dc.b $00                            ; Flags.w
0003C202 <AmiBlitz3.ab2@26496> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
0003C204 <AmiBlitz3.ab2@26497>                        Dc.b $00,$01                        ; GadgetType.w
0003C208 <AmiBlitz3.ab2@26498> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
0003C20C <AmiBlitz3.ab2@26499> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
0003C210 <AmiBlitz3.ab2@26500> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
0003C212 <AmiBlitz3.ab2@26501> AL_0_11094:            Ds.w 1
0003C213 <AmiBlitz3.ab2@26503> set_make_smallestcode: Ds.b 1
0003C216 <AmiBlitz3.ab2@26504> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
0003C218 <AmiBlitz3.ab2@26505>                        Dc.b $00,$01
0003C219 <AmiBlitz3.ab2@26506> set_link_debuginfo:    Ds.b 1
0003C21C <AmiBlitz3.ab2@26507> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
0003C21E <AmiBlitz3.ab2@26508>                        Dc.b $00,$01
0003C262 <AmiBlitz3.ab2@26513>   Ds.l 17          ;resident files STEP $44 piece 8
0003C35E <AmiBlitz3.ab2@26515>   Ds.l 63
0003C3FA <AmiBlitz3.ab2@26516>   Ds.l 39
0003C43E <AmiBlitz3.ab2@26518>   Ds.l 17
0003C4BE <AmiBlitz3.ab2@26521> str_calcexpression:    Ds.l 32
0003C4C2 <AmiBlitz3.ab2@26522> AL_0_11A20:            Ds.l 1
0003C4CC <AmiBlitz3.ab2@26527>   MOVE.l destbufferend,AL_0_11A20
0003C4D2 <AmiBlitz3.ab2@26528>   MOVE.l A7,errstack
0003C4DC <AmiBlitz3.ab2@26529>   MOVE.l #AJL_0_11C00,errcont
0003C4E2 <AmiBlitz3.ab2@26530>   CLR.b str_calcexpression
0003C50C <AmiBlitz3.ab2@26531>   !basic
0003C534 <AmiBlitz3.ab2@26532>   If Peek.l(Addr Window(3))=0
0003C550 <AmiBlitz3.ab2@26533>     FindScreen 0
0003C5AE <AmiBlitz3.ab2@26534>     WZWindow 3,?wzgui,128,-2,-2,-2,-2,3
0003C5BE <AmiBlitz3.ab2@26535>     Poke.w ?button_bin_flags, $00
0003C5CE <AmiBlitz3.ab2@26536>     Poke.w ?button_dec_flags, $80
0003C5F0 <AmiBlitz3.ab2@26538>     activategadget{"CALC_EXPRESSION"}
0003C5F6 <AmiBlitz3.ab2@26539>     calc_exit.l = False
0003C600 <AmiBlitz3.ab2@26541>       ev.l = WaitEvent
0003C606 <AmiBlitz3.ab2@26542>       Select ev
0003C614 <AmiBlitz3.ab2@26544>         Case #IDCMP_IDCMPUPDATE
0003C63C <AmiBlitz3.ab2@26545>           Select WZGadName
0003C660 <AmiBlitz3.ab2@26547>             Case "CALC_EXPRESSION"
0003C6AE <AmiBlitz3.ab2@26548>               calc_expression$ = WZGetString("CALC_EXPRESSION")
0003C6E6 <AmiBlitz3.ab2@26549>               Poke$ ?str_calcexpression,calc_expression$
0003C710 <AmiBlitz3.ab2@26551>             Case "BIN"
0003C720 <AmiBlitz3.ab2@26552>               Poke.w ?button_bin_flags, $80
0003C730 <AmiBlitz3.ab2@26553>               Poke.w ?button_dec_flags, $00
0003C75A <AmiBlitz3.ab2@26555>             Case "HEX"
0003C76A <AmiBlitz3.ab2@26556>               Poke.w ?button_bin_flags, $00
0003C77A <AmiBlitz3.ab2@26557>               Poke.w ?button_dec_flags, $00
0003C7A4 <AmiBlitz3.ab2@26559>             Case "DEC"
0003C7B4 <AmiBlitz3.ab2@26560>               Poke.w ?button_bin_flags, $00
0003C7C4 <AmiBlitz3.ab2@26561>               Poke.w ?button_dec_flags, $80
0003C7EE <AmiBlitz3.ab2@26563>             Case "CALC_CLOSE"
0003C7F4 <AmiBlitz3.ab2@26564>               calc_exit = True
0003C802 <AmiBlitz3.ab2@26566>           End Select
0003C83A <AmiBlitz3.ab2@26567>           If calc_expression$<>""
0003C858 <AmiBlitz3.ab2@26568>             !asm
0003C85C <AmiBlitz3.ab2@26569>             BSR examine_expression
0003C886 <AmiBlitz3.ab2@26570>             !basic
0003C8B0 <AmiBlitz3.ab2@26571>             calc_expression$ = Peek$(?str_calcexpression)
0003C8EA <AmiBlitz3.ab2@26572>             WZPrint "CALC_EXPRESSION",&calc_expression$
0003C8FE <AmiBlitz3.ab2@26575>         Case #IDCMP_CLOSEWINDOW
0003C904 <AmiBlitz3.ab2@26576>           calc_exit = True
0003C906 <AmiBlitz3.ab2@26578>       End Select
0003C928 <AmiBlitz3.ab2@26579>       activategadget{"CALC_EXPRESSION"}
0003C932 <AmiBlitz3.ab2@26580>     Until calc_exit
0003C946 <AmiBlitz3.ab2@26581>     WZCloseWindow 3
0003C964 <AmiBlitz3.ab2@26582>     !asm
0003C966 <AmiBlitz3.ab2@26583>   RTS
0003C984 <AmiBlitz3.ab2@26585>   !asm
0003C98A <AmiBlitz3.ab2@26589>   LEA str_calcexpression,A0
0003C990 <AmiBlitz3.ab2@26597>   JSR setcvars
0003C996 <AmiBlitz3.ab2@26598>   JSR setsvars
0003C99C <AmiBlitz3.ab2@26599>   CLR.w connest
0003C9A2 <AmiBlitz3.ab2@26600>   LEA str_calcexpression,A5
0003C9A8 <AmiBlitz3.ab2@26601>   JSR AJL_0_BF6E
0003C9AE <AmiBlitz3.ab2@26602>   LEA str_calcexpression,A0
0003C9B0 <AmiBlitz3.ab2@26603>   TST.l D3
0003C9B4 <AmiBlitz3.ab2@26604>    BPL.w JL_0_11AE8
0003C9B8 <AmiBlitz3.ab2@26605>   MOVE.b #$2D,(A0)+
0003C9BA <AmiBlitz3.ab2@26606>   NEG.l D3
0003C9C2 <AmiBlitz3.ab2@26609>   CMPI.w #$80,button_dec_flags
0003C9C6 <AmiBlitz3.ab2@26610>    BEQ.w JL_0_11B74
0003C9C8 <AmiBlitz3.ab2@26611>   MOVEQ.l #$00,D1
0003C9D0 <AmiBlitz3.ab2@26612>   CMPI.w #$80,button_bin_flags
0003C9D4 <AmiBlitz3.ab2@26613>    BNE.w JL_0_11B36
0003C9D6 <AmiBlitz3.ab2@26614>   MOVEQ.l #$1F,D0
0003C9DA <AmiBlitz3.ab2@26615>   MOVE.b #$25,(A0)+
0003C9DC <AmiBlitz3.ab2@26618>       LSL.l #1,D3
0003C9E0 <AmiBlitz3.ab2@26619>        BCC.w JL_0_11B18
0003C9E4 <AmiBlitz3.ab2@26620>       MOVE.b #"1",(A0)+
0003C9E6 <AmiBlitz3.ab2@26621>       MOVEQ.l #-$01,D1
0003C9EA <AmiBlitz3.ab2@26622>   BRA.w JL_0_11B22
0003C9EC <AmiBlitz3.ab2@26625>       TST.w D1
0003C9F0 <AmiBlitz3.ab2@26626>       BEQ.w JL_0_11B22
0003C9F4 <AmiBlitz3.ab2@26627>       MOVE.b #"0",(A0)+
0003C9F8 <AmiBlitz3.ab2@26630>  DBF D0,JL_0_11B08
0003C9FA <AmiBlitz3.ab2@26633>   TST.w D1
0003C9FE <AmiBlitz3.ab2@26634>   BNE.w JL_0_11B30
0003CA02 <AmiBlitz3.ab2@26635>   MOVE.b #"0",(A0)+
0003CA04 <AmiBlitz3.ab2@26638>   CLR.b (A0)
0003CA08 <AmiBlitz3.ab2@26639> BRA.w JL_0_11B7C
0003CA0A <AmiBlitz3.ab2@26642>   MOVEQ.l #$07,D0
0003CA0E <AmiBlitz3.ab2@26643>   MOVE.b #$24,(A0)+
0003CA10 <AmiBlitz3.ab2@26646>     MOVE.l D3,D2
0003CA12 <AmiBlitz3.ab2@26647>     SWAP D2
0003CA14 <AmiBlitz3.ab2@26648>     LSR.w #8,D2
0003CA16 <AmiBlitz3.ab2@26649>     LSR.w #4,D2
0003CA1A <AmiBlitz3.ab2@26650>     ADDI.w #$30,D2
0003CA1E <AmiBlitz3.ab2@26651>     CMP.w #$3A,D2
0003CA22 <AmiBlitz3.ab2@26652>      BCS.w JL_0_11B52
0003CA24 <AmiBlitz3.ab2@26653>     ADDQ.w #7,D2
0003CA28 <AmiBlitz3.ab2@26656>     CMP.w #$30,D2
0003CA2C <AmiBlitz3.ab2@26657>     BEQ.w JL_0_11B62
0003CA2E <AmiBlitz3.ab2@26658>     MOVE.b D2,(A0)+
0003CA30 <AmiBlitz3.ab2@26659>     MOVEQ.l #-$01,D1
0003CA34 <AmiBlitz3.ab2@26660>   BRA.w JL_0_11B6A
0003CA36 <AmiBlitz3.ab2@26663>     TST.w D1
0003CA3A <AmiBlitz3.ab2@26664>      BEQ.w JL_0_11B6A
0003CA3C <AmiBlitz3.ab2@26665>     MOVE.b D2,(A0)+
0003CA3E <AmiBlitz3.ab2@26668>     LSL.l #4,D3
0003CA42 <AmiBlitz3.ab2@26669>  DBF D0,JL_0_11B3C
0003CA46 <AmiBlitz3.ab2@26671> BRA.w JL_0_11B26
0003CA48 <AmiBlitz3.ab2@26674>   MOVE.l D3,D2
0003CA4E <AmiBlitz3.ab2@26675>   JSR makelong
0003CA50 <AmiBlitz3.ab2@26678> RTS
0003CA5A <AmiBlitz3.ab2@26682>   MOVE.l AL_0_11A20,destbufferend
0003CA60 <AmiBlitz3.ab2@26683>   CLR.b str_calcexpression
0003CA64 <AmiBlitz3.ab2@26684> BRA.w JL_0_11B7C
0003CB63 <AmiBlitz3.ab2@26688> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
0003CB64 <AmiBlitz3.ab2@26690> Even
0003CBA2 <AmiBlitz3.ab2@26695>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
0003CBA8 <AmiBlitz3.ab2@26696>   MOVE.l #1001,D0
0003CBAE <AmiBlitz3.ab2@26697>   MOVE.l #str_cliarguments,D1
0003CBB0 <AmiBlitz3.ab2@26698>   JSR (A1)
0003CBB2 <AmiBlitz3.ab2@26699> RTS
0003CBB4 <AmiBlitz3.ab2@26704>     MOVE.b (a5)+,d0
0003CBB8 <AmiBlitz3.ab2@26705>     BEQ 'l2
0003CBBC <AmiBlitz3.ab2@26706>     CMP.b #$80,d0
0003CBC0 <AmiBlitz3.ab2@26707>     BNE 'l1
0003CBC2 <AmiBlitz3.ab2@26708>     MOVE.b (a5)+,d0
0003CBC6 <AmiBlitz3.ab2@26709>     BEQ 'l2
0003CBCA <AmiBlitz3.ab2@26710>     CMP.b #$02,d0
0003CBCE <AmiBlitz3.ab2@26711>   BNE 'l1
0003CBD2 <AmiBlitz3.ab2@26714>     CMP.b #$20,(a5)+
0003CBD6 <AmiBlitz3.ab2@26715>   BEQ 'l3
0003CBD8 <AmiBlitz3.ab2@26716>   SUBQ.l #1,a5
0003CBDA <AmiBlitz3.ab2@26717>   TST.b (a5)
0003CBDE <AmiBlitz3.ab2@26718>   BEQ 'l2
0003CBE2 <AmiBlitz3.ab2@26719>   CMP.w #$8008,(a5)
0003CBE6 <AmiBlitz3.ab2@26720>   BEQ 'l4
0003CBEA <AmiBlitz3.ab2@26721>   CMP.w #$8009,(a5)
0003CBEE <AmiBlitz3.ab2@26722>   BEQ 'l4
0003CBF2 <AmiBlitz3.ab2@26723> BRA 'l1
0003CBF4 <AmiBlitz3.ab2@26726>   ADDQ.l #2,a5
0003CBFA <AmiBlitz3.ab2@26727>   JSR skiprest
0003CBFC <AmiBlitz3.ab2@26728> RTS
0003CC02 <AmiBlitz3.ab2@26731>   JSR nextline
0003CC06 <AmiBlitz3.ab2@26732>   BNE 'l1
0003CC08 <AmiBlitz3.ab2@26733> RTS
0003CC32 <AmiBlitz3.ab2@26737>   !basic
0003CC3C <AmiBlitz3.ab2@26738>   DateFormat 1
0003CC4A <AmiBlitz3.ab2@26739>   i.l=SystemDate
0003CC70 <AmiBlitz3.ab2@26740>   a$=Date$ (i)
0003CCEE <AmiBlitz3.ab2@26741>   a$=Replace$(a$,"/",".")
0003CCF4 <AmiBlitz3.ab2@26742>   GetD0 &a$
0003CCF6 <AmiBlitz3.ab2@26743>   MOVEQ #8,d2
0003CCF8 <AmiBlitz3.ab2@26744>   MOVE.l d0,a0
0003CCFA <AmiBlitz3.ab2@26747>     MOVE.b (a0)+,d1
0003CD00 <AmiBlitz3.ab2@26748>     JSR pokedata1b
0003CD04 <AmiBlitz3.ab2@26749>  DBF d2,'l1
0003CD06 <AmiBlitz3.ab2@26751>   MOVEQ #0,d0
0003CD08 <AmiBlitz3.ab2@26752>   MOVE.b (a0)+,d0
0003CD26 <AmiBlitz3.ab2@26753>   !asm
0003CD2C <AmiBlitz3.ab2@26754>   ADD.l #9,d2
0003CD32 <AmiBlitz3.ab2@26755>   ADD.l #9,a5
0003CD34 <AmiBlitz3.ab2@26756> RTS
0003CD5E <AmiBlitz3.ab2@26760>   !basic
0003CD68 <AmiBlitz3.ab2@26761>   DateFormat 0
0003CD76 <AmiBlitz3.ab2@26762>   i.l=SystemDate
0003CD9C <AmiBlitz3.ab2@26763>   a$=Date$ (i)
0003CE1A <AmiBlitz3.ab2@26764>   a$=Replace$(a$,"/",".")
0003CE20 <AmiBlitz3.ab2@26765>   GetD0 &a$
0003CE22 <AmiBlitz3.ab2@26766>   MOVEQ #8,d2
0003CE24 <AmiBlitz3.ab2@26767>   MOVE.l d0,a0
0003CE26 <AmiBlitz3.ab2@26770>     MOVE.b (a0)+,d1
0003CE2C <AmiBlitz3.ab2@26771>     JSR pokedata1b
0003CE30 <AmiBlitz3.ab2@26772>  DBF d2,'l1
0003CE32 <AmiBlitz3.ab2@26774>   MOVEQ #0,d0
0003CE34 <AmiBlitz3.ab2@26775>   MOVE.b (a0)+,d0
0003CE52 <AmiBlitz3.ab2@26776>   !asm
0003CE58 <AmiBlitz3.ab2@26777>   ADD.l #9,d2
0003CE5E <AmiBlitz3.ab2@26778>   ADD.l #13,a5
0003CE60 <AmiBlitz3.ab2@26779> RTS
0003CE8A <AmiBlitz3.ab2@26783>   !basic
0003CE94 <AmiBlitz3.ab2@26784>   DateFormat 1
0003CEA2 <AmiBlitz3.ab2@26785>   i.l = SystemDate
0003CEC8 <AmiBlitz3.ab2@26786>   a$ = Date$ (i)
0003CF46 <AmiBlitz3.ab2@26787>   a$ = Replace$(a$,"/",".")
0003CF4C <AmiBlitz3.ab2@26788>   GetD0 &a$
0003CF4E <AmiBlitz3.ab2@26789>   MOVEQ #8,d2
0003CF50 <AmiBlitz3.ab2@26790>   MOVE.l d0,a0
0003CF52 <AmiBlitz3.ab2@26793>     MOVE.b (a0)+,d1
0003CF58 <AmiBlitz3.ab2@26794>     JSR writebyte
0003CF5C <AmiBlitz3.ab2@26795>  DBF d2,'l1
0003CF5E <AmiBlitz3.ab2@26797>   MOVEQ #0,d0
0003CF60 <AmiBlitz3.ab2@26798>   MOVE.b (a0)+,d0
0003CF7E <AmiBlitz3.ab2@26799>   !asm
0003CF84 <AmiBlitz3.ab2@26800>   ADD.l #9,a5
0003CF86 <AmiBlitz3.ab2@26801> RTS
0003CFB0 <AmiBlitz3.ab2@26805>   !basic
0003CFBA <AmiBlitz3.ab2@26806>   DateFormat 0
0003CFC8 <AmiBlitz3.ab2@26807>   i.l=SystemDate
0003CFEE <AmiBlitz3.ab2@26808>   a$=Date$ (i)
0003D06C <AmiBlitz3.ab2@26809>   a$=Replace$(a$,"/",".")
0003D072 <AmiBlitz3.ab2@26810>   GetD0 &a$
0003D074 <AmiBlitz3.ab2@26811>   MOVEQ #8,d2
0003D076 <AmiBlitz3.ab2@26812>   MOVE.l d0,a0
0003D078 <AmiBlitz3.ab2@26815>     MOVE.b (a0)+,d1
0003D07E <AmiBlitz3.ab2@26816>     JSR writebyte
0003D082 <AmiBlitz3.ab2@26817>  DBF d2,'l1
0003D084 <AmiBlitz3.ab2@26819>   MOVEQ #0,d0
0003D086 <AmiBlitz3.ab2@26820>   MOVE.b (a0)+,d0
0003D0A4 <AmiBlitz3.ab2@26821>   !asm
0003D0AA <AmiBlitz3.ab2@26822>   ADD.l #13,a5
0003D0AC <AmiBlitz3.ab2@26823> RTS
0003D0AE <AmiBlitz3.ab2@26827>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003D0B0 <AmiBlitz3.ab2@26828>   MOVE.l a5,d0
0003D0DA <AmiBlitz3.ab2@26829>   !basic
0003D0DE <AmiBlitz3.ab2@26830>   _myD0.l = PutD0
0003D0E8 <AmiBlitz3.ab2@26831>   If _myD0
0003D12E <AmiBlitz3.ab2@26832>     verstring$ = Left$(Peek.s(_myD0),9+3)
0003D180 <AmiBlitz3.ab2@26833>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003D186 <AmiBlitz3.ab2@26834>   Else
0003D1B4 <AmiBlitz3.ab2@26835>     error{"INTERNAL: Invalid pointer in version_string!"}
0003D1C4 <AmiBlitz3.ab2@26840>   actual_version.l = Peek.l(?versioninformation)
0003D1D4 <AmiBlitz3.ab2@26841>   actual_build.l   = Peek.l(?number_of_builds)
0003D1F8 <AmiBlitz3.ab2@26843>   Format "00"
0003D22E <AmiBlitz3.ab2@26844>   Select verstring$
0003D252 <AmiBlitz3.ab2@26846>     Case "VER_MAJOR"
0003D28E <AmiBlitz3.ab2@26847>      put_versionstr$ = Str$(actual_version LSR 24)
0003D2B8 <AmiBlitz3.ab2@26849>     Case "VER_MINOR"
0003D2FC <AmiBlitz3.ab2@26850>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003D326 <AmiBlitz3.ab2@26852>     Case "VER_PATCH"
0003D36A <AmiBlitz3.ab2@26853>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003D394 <AmiBlitz3.ab2@26855>     Case "VER_BUILD"
0003D3B8 <AmiBlitz3.ab2@26856>      Format ""
0003D3EC <AmiBlitz3.ab2@26857>      put_versionstr$ = Str$(actual_build)
0003D3F2 <AmiBlitz3.ab2@26859>     Default
0003D41A <AmiBlitz3.ab2@26860>      put_versionstr$ = "{unknown compilerconstant}"
0003D428 <AmiBlitz3.ab2@26863>   End Select
0003D44C <AmiBlitz3.ab2@26864>   Format ""
0003D45C <AmiBlitz3.ab2@26866>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
0003D45E <AmiBlitz3.ab2@26867>   MOVE.l d0,d2
0003D460 <AmiBlitz3.ab2@26868>   MOVE.l d2,-(a7)
0003D464 <AmiBlitz3.ab2@26869>   SUB #1,d2
0003D46A <AmiBlitz3.ab2@26871>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0003D46C <AmiBlitz3.ab2@26872>   MOVE.l d0,a0
0003D46E <AmiBlitz3.ab2@26875>     MOVE.b (a0)+,d1
0003D474 <AmiBlitz3.ab2@26876>     JSR pokedata1b
0003D478 <AmiBlitz3.ab2@26877>  DBF d2,'l1
0003D47A <AmiBlitz3.ab2@26879>   MOVEQ #0,d0
0003D498 <AmiBlitz3.ab2@26880>   !asm
0003D49A <AmiBlitz3.ab2@26881>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003D49C <AmiBlitz3.ab2@26882>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003D49E <AmiBlitz3.ab2@26883>   ADD.l d0,d2
0003D4A4 <AmiBlitz3.ab2@26884>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003D4A6 <AmiBlitz3.ab2@26885>   MOVEQ #0,d0
0003D4A8 <AmiBlitz3.ab2@26886> RTS
0003D4AA <AmiBlitz3.ab2@26890>   MOVE.l a5,d0
0003D4D4 <AmiBlitz3.ab2@26891>   !basic
0003D4D8 <AmiBlitz3.ab2@26892>   _myD0.l = PutD0
0003D4E2 <AmiBlitz3.ab2@26893>   If _myD0
0003D528 <AmiBlitz3.ab2@26894>     verstring$ = Left$(Peek.s(_myD0),9+3)
0003D57A <AmiBlitz3.ab2@26895>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003D580 <AmiBlitz3.ab2@26896>   Else
0003D5AE <AmiBlitz3.ab2@26897>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
0003D5BE <AmiBlitz3.ab2@26902>   actual_version.l = Peek.l(?versioninformation)
0003D5CE <AmiBlitz3.ab2@26903>   actual_build.l   = Peek.l(?number_of_builds)
0003D5F2 <AmiBlitz3.ab2@26905>   Format ""
0003D628 <AmiBlitz3.ab2@26906>   Select verstring$
0003D64C <AmiBlitz3.ab2@26908>     Case "VER_MAJOR"
0003D688 <AmiBlitz3.ab2@26909>      put_versionstr$ = Str$(actual_version LSR 24)
0003D6B2 <AmiBlitz3.ab2@26911>     Case "VER_MINOR"
0003D6F6 <AmiBlitz3.ab2@26912>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003D720 <AmiBlitz3.ab2@26914>     Case "VER_PATCH"
0003D764 <AmiBlitz3.ab2@26915>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003D78E <AmiBlitz3.ab2@26917>     Case "VER_BUILD"
0003D7B2 <AmiBlitz3.ab2@26918>      Format ""
0003D7E6 <AmiBlitz3.ab2@26919>      put_versionstr$ = Str$(actual_build)
0003D7EC <AmiBlitz3.ab2@26921>     Default
0003D814 <AmiBlitz3.ab2@26922>      put_versionstr$ = "{unknown compilerconstant}"
0003D822 <AmiBlitz3.ab2@26924>   End Select
0003D846 <AmiBlitz3.ab2@26925>   Format ""
0003D85C <AmiBlitz3.ab2@26927>   GetD0 FLen(put_versionstr$)-1
0003D85E <AmiBlitz3.ab2@26928>   MOVE.l d0,d2
0003D864 <AmiBlitz3.ab2@26930>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0003D866 <AmiBlitz3.ab2@26931>   MOVE.l d0,a0
0003D868 <AmiBlitz3.ab2@26934>     MOVE.b (a0)+,d1
0003D86E <AmiBlitz3.ab2@26935>     JSR writebyte
0003D872 <AmiBlitz3.ab2@26936>  DBF d2,'l1
0003D874 <AmiBlitz3.ab2@26938>   MOVEQ #0,d0
0003D876 <AmiBlitz3.ab2@26939>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
0003D894 <AmiBlitz3.ab2@26940>   !asm
0003D89A <AmiBlitz3.ab2@26941>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003D89C <AmiBlitz3.ab2@26942> RTS
0003D89E <AmiBlitz3.ab2@27044>  MOVE.l a5,-(a7)
0003D8CA <AmiBlitz3.ab2@27045>  !fget
0003D8CE <AmiBlitz3.ab2@27046>  CMP.w #".",d0
0003D8D2 <AmiBlitz3.ab2@27047>  BNE 'skip
0003D8D6 <AmiBlitz3.ab2@27048>  MOVEM.l a2/d2,-(a7)
0003D8DC <AmiBlitz3.ab2@27049>  LEA newtypebase,a2
0003D8E2 <AmiBlitz3.ab2@27050>  JSR getparameter2
0003D8E6 <AmiBlitz3.ab2@27051>  BEQ.w JUMP_syntaxerr
0003D8EC <AmiBlitz3.ab2@27052>  JSR findtype
0003D8F0 <AmiBlitz3.ab2@27053>  BNE.w JUMP_notypeerr
0003D8F6 <AmiBlitz3.ab2@27054>  MOVE.l a2,typetocast
0003D8FA <AmiBlitz3.ab2@27055>  MOVEM.l (a7)+,a2/d2
0003D8FE <AmiBlitz3.ab2@27056>  CMP.w #")",d0
0003D902 <AmiBlitz3.ab2@27057>  BNE JUMP_errorbracketmiss
0003D904 <AmiBlitz3.ab2@27058>  ADDQ.l #4,a7
0003D930 <AmiBlitz3.ab2@27059>  !fget
0003D936 <AmiBlitz3.ab2@27060>  JMP nocast
0003D938 <AmiBlitz3.ab2@27062> 'skip MOVE.l (a7)+,a5
0003D93E <AmiBlitz3.ab2@27063>  JMP JL_0_A410
0003D944 <AmiBlitz3.ab2@27065> JUMP_errorbracketmiss JMP errorbracketmiss
0003D96E <AmiBlitz3.ab2@27067> Function.l ab3_GetIncludeLock{filename.s}
0003D98E <AmiBlitz3.ab2@27068>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
0003D9E6 <AmiBlitz3.ab2@27069>   ex.s       = dos_GetExt{filename}
0003D9FA <AmiBlitz3.ab2@27071>   If incLock = False
0003DA6E <AmiBlitz3.ab2@27072>     filename = dos_SetExt{filename,"ab3"}
0003DA8E <AmiBlitz3.ab2@27073>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0003DAA2 <AmiBlitz3.ab2@27076>   If incLock = False
0003DB16 <AmiBlitz3.ab2@27077>     filename = dos_SetExt{filename,"ab2"}
0003DB36 <AmiBlitz3.ab2@27078>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
0003DB4A <AmiBlitz3.ab2@27081>   If incLock = False
0003DBBE <AmiBlitz3.ab2@27082>     filename = dos_SetExt{filename,"bb2"}
0003DBDE <AmiBlitz3.ab2@27083>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
0003DBF2 <AmiBlitz3.ab2@27086>   If incLock = False
0003DC84 <AmiBlitz3.ab2@27087>     filename = dos_SetExt{filename,ex+".ab3"}
0003DCA4 <AmiBlitz3.ab2@27088>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
0003DCB8 <AmiBlitz3.ab2@27091>   If incLock = False
0003DD2C <AmiBlitz3.ab2@27092>     filename = dos_SetExt{filename,"ab2"}
0003DD4C <AmiBlitz3.ab2@27093>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
0003DD60 <AmiBlitz3.ab2@27096>   If incLock = False
0003DDD4 <AmiBlitz3.ab2@27097>     filename = dos_SetExt{filename,"bb2"}
0003DDF4 <AmiBlitz3.ab2@27098>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
0003DDFE <AmiBlitz3.ab2@27101>  Function Return incLock
0003DE18 <AmiBlitz3.ab2@27102> End Function
0003DE42 <AmiBlitz3.ab2@27106>   !basic
0003DE6C <AmiBlitz3.ab2@27107>   incString.s = Peek$(?ptr_parameterstore)
0003DE9A <AmiBlitz3.ab2@27109>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003DE9E <AmiBlitz3.ab2@27110>   incDirP.l   = PutD0                                       ;    "
0003DEC6 <AmiBlitz3.ab2@27111>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003DF46 <AmiBlitz3.ab2@27112>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003DF78 <AmiBlitz3.ab2@27113>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
0003DF8C <AmiBlitz3.ab2@27115>   If incLock = False ; not found => check default Include Directory
0003DF9C <AmiBlitz3.ab2@27116>     incDirP.l = Peek.l(?incd)
0003DFA6 <AmiBlitz3.ab2@27117>     If incDirP
0003DFCE <AmiBlitz3.ab2@27118>       incDir_.s = Peek.s(incDirP)
0003DFD4 <AmiBlitz3.ab2@27119>     Else
0003E03E <AmiBlitz3.ab2@27120>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003E0BE <AmiBlitz3.ab2@27122>     incFile.s = dos_AddPart{incDir_,incString}
0003E0F0 <AmiBlitz3.ab2@27123>     incLock.l = ab3_GetIncludeLock{incFile}
0003E104 <AmiBlitz3.ab2@27126>   If incLock = False ; not found => check relative to current source
0003E11C <AmiBlitz3.ab2@27127>     incDepth.l = Peek.w(?ininclude)-1
0003E142 <AmiBlitz3.ab2@27128>     If incDepth >= 0 AND incDepth < #maxincludes
0003E1A2 <AmiBlitz3.ab2@27129>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
0003E222 <AmiBlitz3.ab2@27130>       incFile.s = dos_AddPart{incDir_,incString}
0003E254 <AmiBlitz3.ab2@27131>       incLock.l = ab3_GetIncludeLock{incFile}
0003E268 <AmiBlitz3.ab2@27135>   If incLock = False ; still not found => check default Include Directory and name only
0003E278 <AmiBlitz3.ab2@27136>     incDirP.l = Peek.l(?incd)
0003E282 <AmiBlitz3.ab2@27137>     If incDirP
0003E2AA <AmiBlitz3.ab2@27138>       incDir_.s = Peek.s(incDirP)
0003E2B0 <AmiBlitz3.ab2@27139>     Else
0003E31A <AmiBlitz3.ab2@27140>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003E3C8 <AmiBlitz3.ab2@27142>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
0003E3FA <AmiBlitz3.ab2@27143>     incLock.l = ab3_GetIncludeLock{incFile}
0003E404 <AmiBlitz3.ab2@27146>   If incLock
0003E41A <AmiBlitz3.ab2@27147>     MaxLen incFile = 1024
0003E43E <AmiBlitz3.ab2@27148>     NameFromLock_ incLock,&incFile,1024
0003E468 <AmiBlitz3.ab2@27149>     incFile = Peek.s(&incFile)
0003E4A0 <AmiBlitz3.ab2@27150>     Poke$ ?ptr_parameterstore,incFile
0003E4B4 <AmiBlitz3.ab2@27151>     i = FLen(incFile)
0003E4C0 <AmiBlitz3.ab2@27152>     GetReg d0,i
0003E4C6 <AmiBlitz3.ab2@27153>     MOVE.l d0,tempstore
0003E4D6 <AmiBlitz3.ab2@27154>     UnLock_ incLock
0003E4F4 <AmiBlitz3.ab2@27157>   !asm
0003E4FA <AmiBlitz3.ab2@27158>   TST.l tempstore
0003E4FE <AmiBlitz3.ab2@27159>    BEQ 'l1
0003E504 <AmiBlitz3.ab2@27160>   MOVE.l tempstore,d2
0003E506 <AmiBlitz3.ab2@27163> RTS
0003E530 <AmiBlitz3.ab2@27167>   !basic
0003E55A <AmiBlitz3.ab2@27168>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
0003E588 <AmiBlitz3.ab2@27169>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003E58C <AmiBlitz3.ab2@27170>   incDirP.l   = PutD0                                       ;    "
0003E5B4 <AmiBlitz3.ab2@27171>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003E634 <AmiBlitz3.ab2@27172>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003E654 <AmiBlitz3.ab2@27173>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
0003E668 <AmiBlitz3.ab2@27175>   If incLock = False                                        ; not found => try orignal string only to find
0003E688 <AmiBlitz3.ab2@27176>     incLock.l = Lock_(&incString,#ACCESS_READ)
0003E692 <AmiBlitz3.ab2@27179>   If incLock                                                ; found => store full path
0003E6A8 <AmiBlitz3.ab2@27180>     MaxLen incFile = 1024
0003E6CC <AmiBlitz3.ab2@27181>     NameFromLock_ incLock,&incFile,1024
0003E6F6 <AmiBlitz3.ab2@27182>     incFile = Peek.s(&incFile)
0003E72E <AmiBlitz3.ab2@27183>     Poke$ ?ptr_parameterstore,incFile
0003E73A <AmiBlitz3.ab2@27186> 
0003E758 <AmiBlitz3.ab2@27187>   !asm
0003E75A <AmiBlitz3.ab2@27188> RTS
0003E760 <AmiBlitz3.ab2@27199>   JSR Aclearallvars
0003E766 <AmiBlitz3.ab2@27200>   JSR free_unusedfunctions
0003E770 <AmiBlitz3.ab2@27215>   MOVE.l #"NORE",reqmode
0003E776 <AmiBlitz3.ab2@27216> JSR handle_compileerror
0003E778 <AmiBlitz3.ab2@27219>   MOVE.l d0,-(a7)
0003E77A <AmiBlitz3.ab2@27220>   MOVE.l a5,d0
0003E784 <AmiBlitz3.ab2@27221>   !basica7
0003E788 <AmiBlitz3.ab2@27222>   i.l = PutD0
0003E792 <AmiBlitz3.ab2@27223>   If i
0003E7BA <AmiBlitz3.ab2@27224>     a$ = Peek$(i)
0003E7EC <AmiBlitz3.ab2@27225>     b$ = Peeks$(i-7,7)
0003E8D2 <AmiBlitz3.ab2@27226>     i = Request(!TRANS{"Do workaround ?"},b$ + a$,!TRANS{"Yes|No"})
0003E8D8 <AmiBlitz3.ab2@27227>     MOVE.l d0,result
0003E8DC <AmiBlitz3.ab2@27229>   !asma7
0003E8DE <AmiBlitz3.ab2@27230>   MOVE.l (a7)+,d0
0003E8E0 <AmiBlitz3.ab2@27231> RTS
0003E90A <AmiBlitz3.ab2@27235>   !basic
0003E938 <AmiBlitz3.ab2@27236>   !ComData_LEA{comStr_CurrentDir,D0}
0003E93C <AmiBlitz3.ab2@27237>   currentDirP.l = PutD0
0003E96A <AmiBlitz3.ab2@27239>   !ComData_LEA{comStr_SourceName,D0}
0003E96E <AmiBlitz3.ab2@27240>   fileNameP.l = PutD0
0003E996 <AmiBlitz3.ab2@27242>   check_dirname$  = Peek$(currentDirP)
0003E9BE <AmiBlitz3.ab2@27243>   check_filename$ = Peek$(fileNameP)
0003EA44 <AmiBlitz3.ab2@27244>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
0003EA4A <AmiBlitz3.ab2@27245>     JSR free_unusedfunctions
0003EA94 <AmiBlitz3.ab2@27247>   olddirname$ = Peek$(check_dirname$)
0003EADE <AmiBlitz3.ab2@27248>   oldfilename$ = Peek$(check_filename$)
0003EB08 <AmiBlitz3.ab2@27249>   For i = 0 To #maxincludes-1
0003EB1C <AmiBlitz3.ab2@27250>     incline(i) = 0
0003EB2C <AmiBlitz3.ab2@27251>   Next
0003EB4A <AmiBlitz3.ab2@27252>   !asm
0003EB4C <AmiBlitz3.ab2@27253> RTS
0003EB4E <AmiBlitz3.ab2@27257>   MOVEQ #0,d1
0003EB50 <AmiBlitz3.ab2@27260>   MOVE.b (a5)+,d0
0003EB54 <AmiBlitz3.ab2@27261>   BEQ 'er1
0003EB58 <AmiBlitz3.ab2@27262>   CMP.b #$20,d0
0003EB5C <AmiBlitz3.ab2@27263>   BEQ 'l1
0003EB5E <AmiBlitz3.ab2@27264>   ADDQ #1,d1
0003EB62 <AmiBlitz3.ab2@27265>   CMP.b #$22,d0
0003EB66 <AmiBlitz3.ab2@27266>   BNE 'l1
0003EB68 <AmiBlitz3.ab2@27267> RTS
0003EB6E <AmiBlitz3.ab2@27270> JMP syntaxerr
0003EB92 <AmiBlitz3.ab2@27281> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
0003EBB0 <AmiBlitz3.ab2@27282> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0003EBB6 <AmiBlitz3.ab2@27287>   TST.b exdebug
0003EBBA <AmiBlitz3.ab2@27288>   BNE 'l10
0003EBC0 <AmiBlitz3.ab2@27289>   MOVE.l #$4e71,d1
0003EBC6 <AmiBlitz3.ab2@27290>   JSR writeword
0003EBCC <AmiBlitz3.ab2@27291>   MOVE.l destpointer,d0
0003EBCE <AmiBlitz3.ab2@27292>   MOVE.l d0,d1
0003EBD0 <AmiBlitz3.ab2@27293>   ADDQ.l #3,d1
0003EBD6 <AmiBlitz3.ab2@27294>   AND.l #$fffffffc,d1
0003EBDC <AmiBlitz3.ab2@27295>   MOVE.l d1,destpointer
0003EBE2 <AmiBlitz3.ab2@27296>   SUB.l destpointer,d0
0003EBE6 <AmiBlitz3.ab2@27297>   BEQ 'lnf1
0003EBF0 <AmiBlitz3.ab2@27298>   CMP.l #-1,bssstart
0003EBF4 <AmiBlitz3.ab2@27299>   BNE 'lnf1
0003EBFE <AmiBlitz3.ab2@27300>   CMP.l #-1,chipstart
0003EC02 <AmiBlitz3.ab2@27301>   BNE 'lnf1
0003EC08 <AmiBlitz3.ab2@27302>   MOVE.l destpointer,a4
0003EC0E <AmiBlitz3.ab2@27303>   TST.w dontwrite
0003EC12 <AmiBlitz3.ab2@27304>   BNE 'lnf1
0003EC18 <AmiBlitz3.ab2@27305>   MOVE.w #$4e71,-2(a4)
0003EC22 <AmiBlitz3.ab2@27308>   CMP.l #-1,bssstart
0003EC26 <AmiBlitz3.ab2@27309>   BEQ 'l11
0003EC2C <AmiBlitz3.ab2@27310>   MOVE.l #erro1t,-(a7)
0003EC32 <AmiBlitz3.ab2@27311> JMP handle_compileerror
0003EC3C <AmiBlitz3.ab2@27314>   MOVE.l destpointer,bssstart
0003EC44 <AmiBlitz3.ab2@27315>   MOVE.b #1,bssmode
0003EC4A <AmiBlitz3.ab2@27318>   TST.b chipmode
0003EC4E <AmiBlitz3.ab2@27319>   BEQ 'l10
0003EC58 <AmiBlitz3.ab2@27320>   MOVE.l destpointer,chipend
0003EC5E <AmiBlitz3.ab2@27321>   CLR.b chipmode
0003EC64 <AmiBlitz3.ab2@27324>   JSR get1bytemain
0003EC66 <AmiBlitz3.ab2@27325> RTS
0003EC6C <AmiBlitz3.ab2@27329>    TST.b exdebug
0003EC70 <AmiBlitz3.ab2@27330>   BNE 'x1
0003EC76 <AmiBlitz3.ab2@27331>   MOVE.l destpointer,d0
0003EC7C <AmiBlitz3.ab2@27332>   MOVE.l d0,realbssend
0003EC82 <AmiBlitz3.ab2@27333>   MOVE.l #$4e71,d1
0003EC88 <AmiBlitz3.ab2@27334>   JSR writeword
0003EC8E <AmiBlitz3.ab2@27335>   MOVE.l destpointer,d0
0003EC90 <AmiBlitz3.ab2@27336>   MOVE.l d0,d1
0003EC92 <AmiBlitz3.ab2@27337>   ADDQ.l #3,d1
0003EC98 <AmiBlitz3.ab2@27338>   AND.l #$fffffffc,d1
0003EC9E <AmiBlitz3.ab2@27339>   MOVE.l d1,destpointer
0003ECA4 <AmiBlitz3.ab2@27340>   SUB.l destpointer,d0
0003ECA8 <AmiBlitz3.ab2@27341>   BEQ 'lnf1
0003ECAE <AmiBlitz3.ab2@27342>   MOVE.l destpointer,a4
0003ECB8 <AmiBlitz3.ab2@27343>   CMP.l #-1,bssstart
0003ECBC <AmiBlitz3.ab2@27344>   BNE 'lnf1
0003ECC6 <AmiBlitz3.ab2@27345>   CMP.l #-1,chipstart
0003ECCA <AmiBlitz3.ab2@27346>   BNE 'lnf1
0003ECD0 <AmiBlitz3.ab2@27347>   TST.w dontwrite
0003ECD4 <AmiBlitz3.ab2@27348>   BNE 'lnf1
0003ECDA <AmiBlitz3.ab2@27349>   MOVE.w #$4e71,-2(a4)
0003ECE0 <AmiBlitz3.ab2@27352>   TST.b bssmode
0003ECE4 <AmiBlitz3.ab2@27353>   BEQ 'l10
0003ECEE <AmiBlitz3.ab2@27354>   MOVE.l destpointer,bssend
0003ECF4 <AmiBlitz3.ab2@27355>   CLR.b bssmode
0003ECFE <AmiBlitz3.ab2@27360>   CMP.l #-1,chipstart
0003ED02 <AmiBlitz3.ab2@27361>   BEQ 'l11
0003ED08 <AmiBlitz3.ab2@27362>   MOVE.l #erro1t,-(a7)
0003ED0E <AmiBlitz3.ab2@27363> JMP handle_compileerror
0003ED18 <AmiBlitz3.ab2@27366>   MOVE.l destpointer,chipstart
0003ED20 <AmiBlitz3.ab2@27367>   MOVE.b #1,chipmode
0003ED26 <AmiBlitz3.ab2@27370>   JSR get1bytemain
0003ED28 <AmiBlitz3.ab2@27371> RTS
0003ED52 <AmiBlitz3.ab2@27375>   !basic
0003ED64 <AmiBlitz3.ab2@27385>   i.l = Peek.w(?ininclude)
0003ED8A <AmiBlitz3.ab2@27386>   If i>=0 AND i<#maxincludes
0003EDBC <AmiBlitz3.ab2@27387>     incdim (i) = Peek.s(?includetemp2)
0003EDD6 <AmiBlitz3.ab2@27388>     incline(i) = Peek.l(?includeline)
0003EDE0 <AmiBlitz3.ab2@27390>     If CLIMode
0003EE8E <AmiBlitz3.ab2@27391>       If cli_verbose>=2 Then NPrint "  -> Compiling ",incdim(i),"..."
0003EEAC <AmiBlitz3.ab2@27395>   !asm
0003EEAE <AmiBlitz3.ab2@27396> RTS
0003EED8 <AmiBlitz3.ab2@27400>   !basic
0003EEEA <AmiBlitz3.ab2@27401>   i.l = Peek.w(?ininclude)
0003EF10 <AmiBlitz3.ab2@27402>   If i>=0 AND i<#maxincludes
0003EF40 <AmiBlitz3.ab2@27403>     incdim (i) = ""
0003EF54 <AmiBlitz3.ab2@27404>     incline(i) = 0
0003EF8C <AmiBlitz3.ab2@27405>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
0003EFAA <AmiBlitz3.ab2@27407>   !asm
0003EFAC <AmiBlitz3.ab2@27408> RTS
0003EFB2 <AmiBlitz3.ab2@27412>   LEA replacedat,a0
0003EFB6 <AmiBlitz3.ab2@27413>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
0003EFB8 <AmiBlitz3.ab2@27414> RTS
0003EFBE <AmiBlitz3.ab2@27418>   TST.b fpu
0003EFC2 <AmiBlitz3.ab2@27419>   BEQ 'l1
0003EFCC <AmiBlitz3.ab2@27422>   MOVE.l destpointer,newinitaddr
0003EFD2 <AmiBlitz3.ab2@27423>   JSR writeword
0003EFD8 <AmiBlitz3.ab2@27424>   JSR writelong
0003EFDA <AmiBlitz3.ab2@27425> RTS
0003EFDC <AmiBlitz3.ab2@27430>   TST.b (a5)
0003EFE0 <AmiBlitz3.ab2@27431>    BEQ.s 'll20
0003EFE4 <AmiBlitz3.ab2@27432>   CMP.b #$20,(a5)
0003EFE8 <AmiBlitz3.ab2@27433>    BNE.s 'll10
0003EFEA <AmiBlitz3.ab2@27434>   ADDQ.l #1,a5
0003EFEE <AmiBlitz3.ab2@27435> BRA.s 'll21
0003EFF2 <AmiBlitz3.ab2@27438>   CMP.b #";",(a5)
0003EFF6 <AmiBlitz3.ab2@27439>   BNE.s 'll20
0003EFF8 <AmiBlitz3.ab2@27442>   TST.b (a5)+
0003EFFC <AmiBlitz3.ab2@27443>   BEQ.s 'll23
0003F000 <AmiBlitz3.ab2@27444> BRA.s 'll25
0003F002 <AmiBlitz3.ab2@27447>   SUBQ.l #1,a5
0003F004 <AmiBlitz3.ab2@27450> RTS
0003F008 <AmiBlitz3.ab2@27454>   MOVEM.l a2/d2,-(a7)
0003F00A <AmiBlitz3.ab2@27455>   MOVEQ #0,d2
0003F010 <AmiBlitz3.ab2@27456>   LEA ptr_parameterstore,a0
0003F016 <AmiBlitz3.ab2@27457>   LEA chartab,a2
0003F018 <AmiBlitz3.ab2@27460>   MOVE.b (a5),d0
0003F01C <AmiBlitz3.ab2@27461>   TST.b 0(a2,d0)
0003F020 <AmiBlitz3.ab2@27462>   BNE 'l10
0003F022 <AmiBlitz3.ab2@27463>   ADDQ.l #1,a5
0003F024 <AmiBlitz3.ab2@27464>   MOVE.b d0,(a0)+
0003F026 <AmiBlitz3.ab2@27465>   ADDQ.l #1,d2
0003F02A <AmiBlitz3.ab2@27466> BRA fc2
0003F02C <AmiBlitz3.ab2@27469>   CLR.b (a0)+
0003F032 <AmiBlitz3.ab2@27470>   JSR findlabel2
0003F034 <AmiBlitz3.ab2@27471>   MOVE.l a2,a0
0003F038 <AmiBlitz3.ab2@27472>   MOVEM.l (a7)+,a2/d2
0003F03A <AmiBlitz3.ab2@27473> RTS
0003F03C <AmiBlitz3.ab2@27477>   TST.l d0
0003F040 <AmiBlitz3.ab2@27478>   BNE 'l10
0003F046 <AmiBlitz3.ab2@27479>     MOVE.l #syntax_,-(a7)
0003F04C <AmiBlitz3.ab2@27480> JMP handle_compileerror
0003F052 <AmiBlitz3.ab2@27483>   CMP.l #1,d0
0003F056 <AmiBlitz3.ab2@27484>   BNE 'l20
0003F05C <AmiBlitz3.ab2@27485>     MOVE.l #overflow,-(a7)
0003F062 <AmiBlitz3.ab2@27486> JMP handle_compileerror
0003F064 <AmiBlitz3.ab2@27489>   ADD.l a2,d0
0003F066 <AmiBlitz3.ab2@27490>   MOVE.l d0,-(a7)
0003F06C <AmiBlitz3.ab2@27491> JMP handle_compileerror
0003F072 <AmiBlitz3.ab2@27495>   JMP _return
0003F078 <AmiBlitz3.ab2@27496>   JMP _return
0003F07E <AmiBlitz3.ab2@27497>   JMP _return
0003F084 <AmiBlitz3.ab2@27498>   JMP _return
0003F08A <AmiBlitz3.ab2@27499>   JMP _return
0003F090 <AmiBlitz3.ab2@27500>   JMP _return
0003F096 <AmiBlitz3.ab2@27501>   JMP _return
0003F09C <AmiBlitz3.ab2@27502>   JMP _return
0003F0A2 <AmiBlitz3.ab2@27503>   JMP _return
0003F0A8 <AmiBlitz3.ab2@27504>   JMP _return
0003F0AE <AmiBlitz3.ab2@27505>   JMP Atokejsr
0003F0B4 <AmiBlitz3.ab2@27506>   JMP writeinit
0003F0BA <AmiBlitz3.ab2@27507>   JMP macroexecute
0003F0C0 <AmiBlitz3.ab2@27508>   JMP findnext
0003F0C6 <AmiBlitz3.ab2@27509>   JMP replacelib
0003F0CC <AmiBlitz3.ab2@27510>   JMP findconstant2
0003F0D2 <AmiBlitz3.ab2@27511>   JMP findchar                                             ;char in d1
0003F0D8 <AmiBlitz3.ab2@27512>   JMP stripspaces
0003F0DE <AmiBlitz3.ab2@27513>   JMP calc                                                 ;d0 varmode
0003F0E4 <AmiBlitz3.ab2@27514>   JMP error
0003F0EA <AmiBlitz3.ab2@27515>   JMP writelong                                            ;d1 value
0003F0F0 <AmiBlitz3.ab2@27516>   JMP writeword                                            ;d1 value
0003F0F6 <AmiBlitz3.ab2@27517>   JMP writebyte                                            ;d1 value
0003F0FC <AmiBlitz3.ab2@27518> JMP exit
0003F100 <AmiBlitz3.ab2@27522>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
0003F102 <AmiBlitz3.ab2@27525>   fast            Dc.w 0
0003F104 <AmiBlitz3.ab2@27526>   fpu             Dc.w 0
0003F106 <AmiBlitz3.ab2@27527>   newsyntax       Dc.w 0
0003F107 <AmiBlitz3.ab2@27529>   optistring      Dc.b 0
0003F108 <AmiBlitz3.ab2@27530>   optistring2     Dc.b 0
0003F109 <AmiBlitz3.ab2@27531>   optiarray       Dc.b 0
0003F10A <AmiBlitz3.ab2@27532>   quickadd        Dc.b 0
0003F10C <AmiBlitz3.ab2@27533>   newmode         Dc.w 0
0003F10E <AmiBlitz3.ab2@27534>   mode            Dc.w 0
0003F110 <AmiBlitz3.ab2@27535>   string1         Dc.w 0
0003F112 <AmiBlitz3.ab2@27536>   load_var_size   Dc.w 0
0003F114 <AmiBlitz3.ab2@27537>   load_var_reg    Dc.w 0
0003F118 <AmiBlitz3.ab2@27538>   load_var_addr   Dc.l 0
0003F11A <AmiBlitz3.ab2@27539>   imm_size        Dc.w 0
0003F11C <AmiBlitz3.ab2@27540>   imm_reg         Dc.w 0
0003F120 <AmiBlitz3.ab2@27541>   imm_addr        Dc.l 0
0003F121 <AmiBlitz3.ab2@27542>   iee             Dc.b 0
0003F122 <AmiBlitz3.ab2@27543>   _dcb            Dc.b 0
0003F126 <AmiBlitz3.ab2@27544>   nohunkoffset    Dc.l 0
0003F12A <AmiBlitz3.ab2@27547> teddata:        Dc.l tokens
0003F12E <AmiBlitz3.ab2@27548>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
0003F132 <AmiBlitz3.ab2@27549>                 Dc.l read_xtrafile
0003F136 <AmiBlitz3.ab2@27550>                 Dc.l write_xtrafile
0003F13A <AmiBlitz3.ab2@27551>                 Dc.l call_menuentry                        ; compile AND RUN ?
0003F13E <AmiBlitz3.ab2@27552>                 Dc.l 0
0003F142 <AmiBlitz3.ab2@27553>                 Dc.b ":",34,".;"
0003F146 <AmiBlitz3.ab2@27554>                 Dc.l "NEW1"
0003F14A <AmiBlitz3.ab2@27555>                 Dc.l newtypebase
0003F14E <AmiBlitz3.ab2@27556> realconstbase:  Dc.l labelbase
0003F152 <AmiBlitz3.ab2@27557> deflib          Dc.l 0
0003F156 <AmiBlitz3.ab2@27558> incd            Dc.l 0
0003F15A <AmiBlitz3.ab2@27559>                 Dc.l 0
0003F15E <AmiBlitz3.ab2@27560>                 Dc.l 0
0003F162 <AmiBlitz3.ab2@27561>                 Dc.l 0
0003F164 <AmiBlitz3.ab2@27562> _return         RTS
0003F165 <AmiBlitz3.ab2@27563>                 Dc.b 0
0003F565 <AmiBlitz3.ab2@27564> chartab2        Ds.l 256
0003F569 <AmiBlitz3.ab2@27565> codeend         Dc.l 0
0003F56D <AmiBlitz3.ab2@27566> hunkoffsetnum   Dc.l 0
0003F571 <AmiBlitz3.ab2@27567> chipsize        Dc.l 0
0003F575 <AmiBlitz3.ab2@27568> bsssize         Dc.l 0
0003F579 <AmiBlitz3.ab2@27569> bssstart        Dc.l -1
0003F57D <AmiBlitz3.ab2@27570> bssend          Dc.l -1
0003F581 <AmiBlitz3.ab2@27571> chipstart       Dc.l -1
0003F585 <AmiBlitz3.ab2@27572> chipend         Dc.l -1
0003F586 <AmiBlitz3.ab2@27573> bssmode         Dc.b 0
0003F587 <AmiBlitz3.ab2@27574> chipmode        Dc.b 0
0003F588 <AmiBlitz3.ab2@27575> newhunk         Dc.b 0
0003F58C <AmiBlitz3.ab2@27576> bssnum          Dc.l 0
0003F590 <AmiBlitz3.ab2@27577> chipnum         Dc.l 0
0003F594 <AmiBlitz3.ab2@27578> lastinstruction Dc.l 0
0003F598 <AmiBlitz3.ab2@27579> lastinstructionaddr Dc.l 0
0003F5AC <AmiBlitz3.ab2@27580> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
0003F5B0 <AmiBlitz3.ab2@27581> tstsize1b:      Ds.l 1
0003F5B4 <AmiBlitz3.ab2@27582> bsssize2        Dc.l 1
0003F5B8 <AmiBlitz3.ab2@27583>                 Dc.l $03E9
0003F5BC <AmiBlitz3.ab2@27584> tstsize2b:      Dc.l $100
0003F5D0 <AmiBlitz3.ab2@27585> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
0003F5D4 <AmiBlitz3.ab2@27586> tstsize1c:      Ds.l 1
0003F5D8 <AmiBlitz3.ab2@27587> bsssize3        Dc.l 1
0003F5DC <AmiBlitz3.ab2@27588> chipsize2       Dc.l 1
0003F5E0 <AmiBlitz3.ab2@27589>                 Dc.l $3e9
0003F5E4 <AmiBlitz3.ab2@27590> tstsize2c       Dc.l 0
0003F5F4 <AmiBlitz3.ab2@27591> hunkend         Dc.l $3f2,$3eb,0,$3f2
0003F604 <AmiBlitz3.ab2@27592> hunkend2        Dc.l $3f2,$3ea,0,$3f2
0003F60B <AmiBlitz3.ab2@27593> strcpy          Dc.b "strcpy",0
0003F612 <AmiBlitz3.ab2@27594> strcmp          Dc.b "strcmp",0
0003F619 <AmiBlitz3.ab2@27595> strvar          Dc.b "strvar",0
0003F61E <AmiBlitz3.ab2@27596> qmul            Dc.b "qmul",0
0003F623 <AmiBlitz3.ab2@27597> qdiv            Dc.b "qdiv",0
0003F62A <AmiBlitz3.ab2@27598> _MaxLen         Dc.b "maxlen",0
0003F62F <AmiBlitz3.ab2@27599> notf            Dc.b "????",0
0003F652 <AmiBlitz3.ab2@27601> errtext         Dc.b "only reg addressing Mode supported",0
0003F67C <AmiBlitz3.ab2@27602> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0003F6BE <AmiBlitz3.ab2@27603> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
0003F6C0 <AmiBlitz3.ab2@27604> peeksize        Dc.w 0
0003F6C4 <AmiBlitz3.ab2@27606> mainstart       Dc.l 0
0003F6C5 <AmiBlitz3.ab2@27608> infunctioncode  Dc.b 0
0003F6C7 <AmiBlitz3.ab2@27609> regnumstore     Dc.w 0
0003F6F4 <AmiBlitz3.ab2@27610>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003F6FC <AmiBlitz3.ab2@27611> testcode        Dc.b "print i",0
0003F760 <AmiBlitz3.ab2@27612>                 Ds.b 100
0003F76E <AmiBlitz3.ab2@27613> devo            Dc.b "developobject",0 : Even
0003F780 <AmiBlitz3.ab2@27614> autostorename   Dc.b "__autoconstantnum",0
0003F78A <AmiBlitz3.ab2@27615> _include        Dc.b "__include",0
0003F792 <AmiBlitz3.ab2@27616> _debug          Dc.b "__debug",0
0003F796 <AmiBlitz3.ab2@27617> unusedfunc      Dc.l 0
0003F798 <AmiBlitz3.ab2@27621> MOVE.l a0,d0
0003F7C2 <AmiBlitz3.ab2@27622> !basic
0003F7C6 <AmiBlitz3.ab2@27623> *olderror.l= PutD0
0003F7EE <AmiBlitz3.ab2@27624> error$=Peek.s(*olderror)
0003F834 <AmiBlitz3.ab2@27625> error$=error$+"\\nPossible wrong Code begin here: "
0003F848 <AmiBlitz3.ab2@27626>         If Peek.l (?beforeparameterfetch)
0003F85E <AmiBlitz3.ab2@27627>           MaxLen detokenline.s = 65536
0003F8A0 <AmiBlitz3.ab2@27628>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003F8B0 <AmiBlitz3.ab2@27629>          *tn.preprocessor = Peek.l(?include_preprocessor)
0003F8DA <AmiBlitz3.ab2@27630>           written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0003F902 <AmiBlitz3.ab2@27631>           If written>0 Then Poke.b &detokenline+written,0
0003F92C <AmiBlitz3.ab2@27632>           sourceLineText.s = Peek.s(&detokenline)
0003F932 <AmiBlitz3.ab2@27633>         Else
0003F95A <AmiBlitz3.ab2@27634>           sourceLineText = "NULL"
0003F9AC <AmiBlitz3.ab2@27636> error$=error$+sourceLineText
0003F9B2 <AmiBlitz3.ab2@27637> GetD0 &error$
0003F9D0 <AmiBlitz3.ab2@27638> !asm
0003F9D2 <AmiBlitz3.ab2@27639> MOVE.l d0,a0
0003F9D4 <AmiBlitz3.ab2@27640> RTS
0003F9D6 <AmiBlitz3.ab2@27644>   MOVE.l a0,-(a7)
0003F9D8 <AmiBlitz3.ab2@27645>   MOVE.l a0,d0
0003F9DA <AmiBlitz3.ab2@27646>   MOVE.l a5,a0                                             ;macro title
0003FA04 <AmiBlitz3.ab2@27647>   !basic
0003FA08 <AmiBlitz3.ab2@27648>   i = PutD0
0003FA0A <AmiBlitz3.ab2@27649>   MOVEQ #20,d0
0003FA0C <AmiBlitz3.ab2@27652>     MOVE.b -(a0),d1
0003FA10 <AmiBlitz3.ab2@27653>     BEQ 'l1
0003FA14 <AmiBlitz3.ab2@27654>     CMP.b #":",d1
0003FA18 <AmiBlitz3.ab2@27655>     BEQ 'l1
0003FA1A <AmiBlitz3.ab2@27656>     SUBQ.l #1,d0
0003FA1E <AmiBlitz3.ab2@27657>     BNE 'l2
0003FA20 <AmiBlitz3.ab2@27660>   ADDQ #1,a0
0003FA22 <AmiBlitz3.ab2@27661>   MOVE.l a0,d0
0003FA26 <AmiBlitz3.ab2@27662>   i2.l = PutD0
0003FA42 <AmiBlitz3.ab2@27663>   If Peek.w (?ininclude)>0
0003FA9C <AmiBlitz3.ab2@27664>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
0003FAAC <AmiBlitz3.ab2@27665>     errorline.l = Peek.l(?includeline);-1
0003FAD4 <AmiBlitz3.ab2@27666>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003FAFE <AmiBlitz3.ab2@27667>     errorfile.s = Peek.s(?includetemp2)
0003FB04 <AmiBlitz3.ab2@27668>   Else
0003FB3C <AmiBlitz3.ab2@27669>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
0003FB52 <AmiBlitz3.ab2@27670>     errorline.l = Peek.l(?compilelinecounter) + 1
0003FB86 <AmiBlitz3.ab2@27671>     errorfile.s = cli_sourcefile
0003FB90 <AmiBlitz3.ab2@27674>   If i
0003FC34 <AmiBlitz3.ab2@27675>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
0003FC3A <AmiBlitz3.ab2@27676>   Else
0003FC62 <AmiBlitz3.ab2@27677>     errortext.s = "???"
0003FDD4 <AmiBlitz3.ab2@27680>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," <",errorfile,"@",errorline,">\\1b[0m ",errortext
0003FDF2 <AmiBlitz3.ab2@27684>   !asm
0003FDF4 <AmiBlitz3.ab2@27685>   MOVE.l (a7)+,a0
0003FDF6 <AmiBlitz3.ab2@27686> RTS
0003FDF8 <AmiBlitz3.ab2@27690>   MOVE.l a0,-(a7)
0003FDFA <AmiBlitz3.ab2@27691>   MOVE.l a0,d0
0003FDFC <AmiBlitz3.ab2@27692>   MOVE.l a5,a0                                             ;macro title
0003FE26 <AmiBlitz3.ab2@27693>   !basic
0003FE2A <AmiBlitz3.ab2@27694>   i = PutD0
0003FE2C <AmiBlitz3.ab2@27695>   MOVEQ #20,d0
0003FE2E <AmiBlitz3.ab2@27698>     MOVE.b -(a0),d1
0003FE32 <AmiBlitz3.ab2@27699>     BEQ 'l1
0003FE36 <AmiBlitz3.ab2@27700>     CMP.b #":",d1
0003FE3A <AmiBlitz3.ab2@27701>     BEQ 'l1
0003FE3C <AmiBlitz3.ab2@27702>     SUBQ.l #1,d0
0003FE40 <AmiBlitz3.ab2@27703>     BNE 'l2
0003FE42 <AmiBlitz3.ab2@27706>   ADDQ #1,a0
0003FE44 <AmiBlitz3.ab2@27707>   MOVE.l a0,d0
0003FE48 <AmiBlitz3.ab2@27708>   i2.l = PutD0
0003FECC <AmiBlitz3.ab2@27709>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
0003FEE0 <AmiBlitz3.ab2@27710>   If fid <> -1
0003FEFC <AmiBlitz3.ab2@27711>     If Peek.w (?ininclude)>0
0003FF56 <AmiBlitz3.ab2@27712>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
0003FF5C <AmiBlitz3.ab2@27713>     Else
0003FF88 <AmiBlitz3.ab2@27714>       Poke$(?includetemp2),""
0003FFB2 <AmiBlitz3.ab2@27716>     a$ = Peek$(?includetemp2)
00040024 <AmiBlitz3.ab2@27717>     x$ = Replace$(Peek$(i),"\\0a","\n")
00040056 <AmiBlitz3.ab2@27718>     file_WriteLine{fid,x$}
000400A0 <AmiBlitz3.ab2@27719>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
000400CC <AmiBlitz3.ab2@27720>     If a$
000400FE <AmiBlitz3.ab2@27721>       file_WriteLine{fid,a$}
00040148 <AmiBlitz3.ab2@27722>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00040170 <AmiBlitz3.ab2@27723>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00040176 <AmiBlitz3.ab2@27724>     Else
0004019C <AmiBlitz3.ab2@27725>       file_WriteLine{fid,"none"}
000401CC <AmiBlitz3.ab2@27727>     file_WriteLine{fid,Peek$(i2)}
00040222 <AmiBlitz3.ab2@27728>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0004026C <AmiBlitz3.ab2@27729>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00040276 <AmiBlitz3.ab2@27730>     file_Close{fid}
00040294 <AmiBlitz3.ab2@27732>   !asm
00040296 <AmiBlitz3.ab2@27733>   MOVE.l (a7)+,a0
00040298 <AmiBlitz3.ab2@27734> RTS
000402C2 <AmiBlitz3.ab2@27738>   !basic
000402C6 <AmiBlitz3.ab2@27739>   progress.l     = PutD0
000402D8 <AmiBlitz3.ab2@27740>   total.l        = Peek.w(?progressbar_width)
000402F6 <AmiBlitz3.ab2@27741>   calcpro.l      = (progress * 100) / total +1
00040308 <AmiBlitz3.ab2@27742>   pass.l         = Peek.w(?pass)
0004031A <AmiBlitz3.ab2@27743>   typ.l          = Peek.w(?compiler_job)
00040338 <AmiBlitz3.ab2@27745>   If pass><pass_old.l OR typ><typ_old.l
0004033E <AmiBlitz3.ab2@27746>     pass_old = pass
00040344 <AmiBlitz3.ab2@27747>     typ_old  = typ
0004036C <AmiBlitz3.ab2@27748>     comstatus$ = "Initializing Compiler..."
0004037E <AmiBlitz3.ab2@27749>     If typ=0
0004045E <AmiBlitz3.ab2@27750>       comstatus$ = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00040470 <AmiBlitz3.ab2@27752>     If typ=1
00040550 <AmiBlitz3.ab2@27753>       comstatus$ = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00040578 <AmiBlitz3.ab2@27756>     If Peek.l(Addr Window(4))<>0
0004058E <AmiBlitz3.ab2@27757>       Use Window 4
000405C8 <AmiBlitz3.ab2@27758>       WZPrint "COMPILE_INFO",&comstatus$
000405CE <AmiBlitz3.ab2@27759>     Else
00040624 <AmiBlitz3.ab2@27760>       If cli_verbose>=2 Then NPrint comstatus$
00040632 <AmiBlitz3.ab2@27764>   If (calcpro >< calcpro_old)
0004065A <AmiBlitz3.ab2@27765>     If Peek.l(Addr Window(4))<>0
00040688 <AmiBlitz3.ab2@27766>       If (((calcpro & $7)=0) OR (calcpro=100))
000406CE <AmiBlitz3.ab2@27767>         testpr$ = Str$(calcpro)+"%%"
0004071E <AmiBlitz3.ab2@27768>         WZPrint "COMPILE_GAUGE",calcpro,100,&testpr$
00040724 <AmiBlitz3.ab2@27770>     Else
00040778 <AmiBlitz3.ab2@27774>       If cli_verbose>=3 Then NPrint calcpro,"% compiled..."
0004077E <AmiBlitz3.ab2@27776>     calcpro_old = calcpro
0004079C <AmiBlitz3.ab2@27778>   !asm
0004079E <AmiBlitz3.ab2@27779> RTS
000407C8 <AmiBlitz3.ab2@27783>   !basic
000407DE <AmiBlitz3.ab2@27784>   MaxLen a$ = 5000
000407E8 <AmiBlitz3.ab2@27785>   var.l = ?residents_table
000407FA <AmiBlitz3.ab2@27786>   If winon.l = 0
00040816 <AmiBlitz3.ab2@27787>     FindScreen 0
000408DA <AmiBlitz3.ab2@27788>     WZWindow 1,?wzgui,256,-2,ScreenHeight/6,-2,ScreenHeight/1.5,1
00040902 <AmiBlitz3.ab2@27789>     WZ_SetFont{"WIN_CPREFS"}
00040948 <AmiBlitz3.ab2@27790>     WZ_InitTable{"WIN_CPREFS","OBJECTS",2,0}
00040982 <AmiBlitz3.ab2@27791>     WZ_SetTableColors{"OBJECTS",1,0,2,3,3}
00040A28 <AmiBlitz3.ab2@27794>     WZ_SetTableTitle{"OBJECTS","Objects","Max"}
00040A84 <AmiBlitz3.ab2@27797>     WZ_SetPriority{"OBJECTS",3,1}
00040ADC <AmiBlitz3.ab2@27800>     WZ_SetEditable{"OBJECTS",False,True}
00040B02 <AmiBlitz3.ab2@27803>     WZ_SetSortable{"OBJECTS",Off}
00040B3A <AmiBlitz3.ab2@27806>     For i = 0 To Peek.w(?number_of_objects)-1
00040B62 <AmiBlitz3.ab2@27807>       a$ = ""
00040B76 <AmiBlitz3.ab2@27808>       GetD0 &a$,i:JSR getobjectentry : a.l = PutD0
00040C3E <AmiBlitz3.ab2@27809>       WZ_AddRow{"OBJECTS",Peek$(&a$),Str$(a)}
00040C4E <AmiBlitz3.ab2@27810>     Next
00040C70 <AmiBlitz3.ab2@27811>     WZ_DrawTable{"OBJECTS"}
00040C92 <AmiBlitz3.ab2@27813>     WZ_UpdateTable{"OBJECTS"}
00040C9A <AmiBlitz3.ab2@27814>     winon = 1
00040CA4 <AmiBlitz3.ab2@27815>     var.l = ?residents_table
00040CCC <AmiBlitz3.ab2@27816>     a$ = Peek$(var)
00040CF6 <AmiBlitz3.ab2@27817>     For i = 0 To 6
00040D3C <AmiBlitz3.ab2@27818>       a$ = a$ + "\\0a"
00040D4A <AmiBlitz3.ab2@27819>       var + #ResidentEntryStep    ; $44
00040D9A <AmiBlitz3.ab2@27820>       a$ = a$ + Peek$(var)
00040DAA <AmiBlitz3.ab2@27821>     Next
00040DE4 <AmiBlitz3.ab2@27822>     WZPrint "RESIDENTS",&a$
00040DF4 <AmiBlitz3.ab2@27824>     i = Peek.l(?stringbuffer)
00040E2C <AmiBlitz3.ab2@27825>     WZPrint "STRINGBUFFER",i
00040E3C <AmiBlitz3.ab2@27827>     i = Peek.l(?stacksize)                            ;get stacksize  tomsmart1
00040E74 <AmiBlitz3.ab2@27828>     WZPrint "STACKSIZE",i                             ;print it  tomsmart1
00040E7C <AmiBlitz3.ab2@27830>     var.l = 0
00040E84 <AmiBlitz3.ab2@27831>     BTST #7,create_iconfile
00040E88 <AmiBlitz3.ab2@27832>     BEQ 'noi
00040E90 <AmiBlitz3.ab2@27833>     var = 1
00040EC8 <AmiBlitz3.ab2@27836>     WZPrint "ICON",var
00040ED0 <AmiBlitz3.ab2@27837>     var = 0
00040ED8 <AmiBlitz3.ab2@27838>     BTST #7,make_smallestcode
00040EDC <AmiBlitz3.ab2@27839>     BEQ 'nos
00040EE4 <AmiBlitz3.ab2@27840>     var = 1
00040F1C <AmiBlitz3.ab2@27843>     WZPrint "SMALLEST",var
00040F24 <AmiBlitz3.ab2@27844>     var = 0
00040F2C <AmiBlitz3.ab2@27845>     BTST #7,link_debuginfo
00040F30 <AmiBlitz3.ab2@27846>     BEQ 'nodi
00040F38 <AmiBlitz3.ab2@27847>     var = 1
00040F70 <AmiBlitz3.ab2@27850>     WZPrint "DEBUGINFO",var
00040F78 <AmiBlitz3.ab2@27852>     var = 0
00040FB6 <AmiBlitz3.ab2@27854>     !ComData_GetW{comWord_CreateDebugFile,D0}            ; get status of Create.dbg file  tomsmart1
00040FBA <AmiBlitz3.ab2@27855>     var = PutD0                                          ; save status to var  tomsmart1
00040FF2 <AmiBlitz3.ab2@27856>     WZPrint "DBGFILE",var                                ; show status in the GUI tomsmart1
00040FFA <AmiBlitz3.ab2@27858>     var = 0                                              ; no runtime Debugging
0004101E <AmiBlitz3.ab2@27859>     WZDisable "AUTORUN"                                  ; disable all Debugger settings  tomsmart1
00041042 <AmiBlitz3.ab2@27860>     WZDisable "CHECK_INTERRUPT"                          ;                "
00041066 <AmiBlitz3.ab2@27861>     WZDisable "CHECK_ASSEMBLER"                          ;                "
0004108A <AmiBlitz3.ab2@27862>     WZDisable "CHECK_OVERFLOW"                           ;                "
00041092 <AmiBlitz3.ab2@27863>     BTST #7,use_debugger                                 ; check status
00041096 <AmiBlitz3.ab2@27864>     BEQ 'nod
0004109E <AmiBlitz3.ab2@27865>     var = 1                                              ; yes runtime Debugging
000410C2 <AmiBlitz3.ab2@27866>     WZEnable "AUTORUN"                                   ; enable all Debugger settings  tomsmart1
000410E6 <AmiBlitz3.ab2@27867>     WZEnable "CHECK_INTERRUPT"                           ;               "
0004110A <AmiBlitz3.ab2@27868>     WZEnable "CHECK_ASSEMBLER"                           ;               "
0004112E <AmiBlitz3.ab2@27869>     WZEnable "CHECK_OVERFLOW"                            ;               "
00041166 <AmiBlitz3.ab2@27872>     WZPrint "DEBUG",var
0004116E <AmiBlitz3.ab2@27873>     var = 0
00041176 <AmiBlitz3.ab2@27874>     BTST #7,autorun
0004117A <AmiBlitz3.ab2@27875>     BEQ 'nod4
00041182 <AmiBlitz3.ab2@27876>     var = 1
000411BA <AmiBlitz3.ab2@27879>     WZPrint "AUTORUN",var
000411C2 <AmiBlitz3.ab2@27880>     var.l = 0
000411CA <AmiBlitz3.ab2@27881>     BTST #7,interruptcheck
000411CE <AmiBlitz3.ab2@27882>     BEQ 'nod1
000411D6 <AmiBlitz3.ab2@27883>     var = 1
0004120E <AmiBlitz3.ab2@27886>     WZPrint "CHECK_INTERRUPT",var
00041216 <AmiBlitz3.ab2@27887>     var.l = 0
0004121E <AmiBlitz3.ab2@27888>     BTST #7,assemblercheck
00041222 <AmiBlitz3.ab2@27889>     BEQ 'nod2
0004122A <AmiBlitz3.ab2@27890>     var = 1
00041262 <AmiBlitz3.ab2@27893>     WZPrint "CHECK_ASSEMBLER",var
0004126A <AmiBlitz3.ab2@27894>     var.l = 0
00041272 <AmiBlitz3.ab2@27895>     BTST #7,overflowcheck
00041276 <AmiBlitz3.ab2@27896>     BEQ 'nod3
0004127E <AmiBlitz3.ab2@27897>     var = 1
000412B6 <AmiBlitz3.ab2@27900>     WZPrint "CHECK_OVERFLOW",var
000412BE <AmiBlitz3.ab2@27903>   exit.l = 0
000412C6 <AmiBlitz3.ab2@27904>   mess.l = 0
000412D0 <AmiBlitz3.ab2@27905>   ev.l = WaitEvent
000412E0 <AmiBlitz3.ab2@27906>   WZ_CheckTableEvent{ev}
000412E6 <AmiBlitz3.ab2@27907>   Select ev
000412F4 <AmiBlitz3.ab2@27909>    Case #IDCMP_IDCMPUPDATE
00041334 <AmiBlitz3.ab2@27910>     Select LCase$(WZGadName)
00041358 <AmiBlitz3.ab2@27912>      Case "autorun"
00041366 <AmiBlitz3.ab2@27913>        If WZInput
0004136E <AmiBlitz3.ab2@27914>          BSET #7,autorun
00041374 <AmiBlitz3.ab2@27915>        Else
0004137C <AmiBlitz3.ab2@27916>          BCLR #7,autorun
000413A6 <AmiBlitz3.ab2@27919>      Case "check_interrupt"
000413B4 <AmiBlitz3.ab2@27920>        If WZInput
000413BC <AmiBlitz3.ab2@27921>          BSET #7,interruptcheck
000413C2 <AmiBlitz3.ab2@27922>        Else
000413CA <AmiBlitz3.ab2@27923>          BCLR #7,interruptcheck
000413F4 <AmiBlitz3.ab2@27926>      Case "check_assembler"
00041402 <AmiBlitz3.ab2@27927>        If WZInput
0004140A <AmiBlitz3.ab2@27928>          BSET #7,assemblercheck
00041410 <AmiBlitz3.ab2@27929>        Else
00041418 <AmiBlitz3.ab2@27930>          BCLR #7,assemblercheck
00041442 <AmiBlitz3.ab2@27933>      Case "check_overflow"
00041450 <AmiBlitz3.ab2@27934>        If WZInput
00041458 <AmiBlitz3.ab2@27935>          BSET #7,overflowcheck
0004145E <AmiBlitz3.ab2@27936>        Else
00041466 <AmiBlitz3.ab2@27937>          BCLR #7,overflowcheck
00041490 <AmiBlitz3.ab2@27940>      Case "residents"
000414BA <AmiBlitz3.ab2@27942>      Case "stacksize"                                   ; stacksize changed  tomsmart1
000414C4 <AmiBlitz3.ab2@27943>        tempsize.l=WZInput                               ; save the valu to a temporay variable  tomsmart1
000414D6 <AmiBlitz3.ab2@27944>        If tempsize >= #MIN_STACKSIZE                    ; check size  tomsmart1
000414E6 <AmiBlitz3.ab2@27945>          Poke.l ?stacksize,tempsize                     ; save it.  tomsmart1
000414EC <AmiBlitz3.ab2@27946>        Else                                             ; its not big enough  tomsmart1
000414F4 <AmiBlitz3.ab2@27947>          tempsize = #MIN_STACKSIZE                      ; set it to the min size  tomsmart1
00041504 <AmiBlitz3.ab2@27948>          Poke.l ?stacksize,tempsize                     ; save it  tomsmart1
0004153C <AmiBlitz3.ab2@27949>          WZPrint "STACKSIZE",tempsize                   ; print it  tomsmart1
00041566 <AmiBlitz3.ab2@27952>      Case "stringbuffer"
00041582 <AmiBlitz3.ab2@27954>        Poke.l ?stringbuffer,WZInput
0004158A <AmiBlitz3.ab2@27955>        mess = $6
000415B4 <AmiBlitz3.ab2@27957>      Case "debug"
000415C2 <AmiBlitz3.ab2@27958>        If WZInput
000415CA <AmiBlitz3.ab2@27959>          BSET #7,use_debugger                           ; yes runtime Debugging
000415EE <AmiBlitz3.ab2@27960>          WZEnable "AUTORUN"                             ; enable all Debugger settings  tomsmart1
00041612 <AmiBlitz3.ab2@27961>          WZEnable "CHECK_INTERRUPT"                     ;               "
00041636 <AmiBlitz3.ab2@27962>          WZEnable "CHECK_ASSEMBLER"                     ;               "
0004165A <AmiBlitz3.ab2@27963>          WZEnable "CHECK_OVERFLOW"                      ;               "
00041660 <AmiBlitz3.ab2@27964>        Else
00041668 <AmiBlitz3.ab2@27965>          BCLR #7,use_debugger                           ; no runtime Debugging
0004168C <AmiBlitz3.ab2@27966>          WZDisable "AUTORUN"                            ; disable all Debugger settings  tomsmart1
000416B0 <AmiBlitz3.ab2@27967>          WZDisable "CHECK_INTERRUPT"                    ;                "
000416D4 <AmiBlitz3.ab2@27968>          WZDisable "CHECK_ASSEMBLER"                    ;                "
000416F8 <AmiBlitz3.ab2@27969>          WZDisable "CHECK_OVERFLOW"                     ;                "
00041700 <AmiBlitz3.ab2@27971>        mess = $a
0004172A <AmiBlitz3.ab2@27973>      Case "icon"
00041738 <AmiBlitz3.ab2@27974>        If WZInput
00041740 <AmiBlitz3.ab2@27975>          BSET #7,create_iconfile
00041746 <AmiBlitz3.ab2@27976>        Else
0004174E <AmiBlitz3.ab2@27977>          BCLR #7,create_iconfile
00041756 <AmiBlitz3.ab2@27979>        mess = $9
00041780 <AmiBlitz3.ab2@27981>      Case "smallest"
0004178E <AmiBlitz3.ab2@27982>        If WZInput
00041796 <AmiBlitz3.ab2@27983>          BSET #7,make_smallestcode
0004179C <AmiBlitz3.ab2@27984>        Else
000417A4 <AmiBlitz3.ab2@27985>          BCLR #7,make_smallestcode
000417AC <AmiBlitz3.ab2@27987>        mess = $f
000417D6 <AmiBlitz3.ab2@27989>      Case "debuginfo"                                      ; check "Create Debug info" (Symbols)
000417E4 <AmiBlitz3.ab2@27990>        If WZInput
000417EC <AmiBlitz3.ab2@27991>          BSET #7,link_debuginfo
000417F2 <AmiBlitz3.ab2@27992>        Else
000417FA <AmiBlitz3.ab2@27993>          BCLR #7,link_debuginfo
00041802 <AmiBlitz3.ab2@27995>        mess = $10
0004182C <AmiBlitz3.ab2@27997>      Case "dbgfile"                                        ; check "Create .dbg File"   tomsmart1
0004183A <AmiBlitz3.ab2@27998>        If WZInput
00041870 <AmiBlitz3.ab2@27999>          !ComData_SetW{comWord_CreateDebugFile,#1}         ; yes we create it  tomsmart1
00041876 <AmiBlitz3.ab2@28000>        Else
000418AC <AmiBlitz3.ab2@28001>          !ComData_SetW{comWord_CreateDebugFile,#0}         ; no we don't  tomsmart1
000418D6 <AmiBlitz3.ab2@28004>      Case "cr"                                             ; compile and run in compiler prefs
000418E6 <AmiBlitz3.ab2@28005>       mess = $12 : exit = 1
00041910 <AmiBlitz3.ab2@28007>      Case "ce"                                             ; compile und create exe in compile prefs
00041920 <AmiBlitz3.ab2@28008>       mess = $13 : exit = 1
0004194A <AmiBlitz3.ab2@28014>      Case "cancel"
0004195A <AmiBlitz3.ab2@28015>       mess.l = $14 : exit = 1
00041984 <AmiBlitz3.ab2@28017>      Case "ok"
00041994 <AmiBlitz3.ab2@28018>       mess = $11 : exit = 1
000419A2 <AmiBlitz3.ab2@28020>     End Select
000419A4 <AmiBlitz3.ab2@28022>   End Select
000419C6 <AmiBlitz3.ab2@28024>   If ev = $200 Then mess = $11:exit = 1
000419D8 <AmiBlitz3.ab2@28025>   If mess = $11
00041A0A <AmiBlitz3.ab2@28026>     For i = 1 To Peek.w(?number_of_objects)
00041A60 <AmiBlitz3.ab2@28027>       a$ = WZ_GetCell{"OBJECTS",i,2}
00041AB6 <AmiBlitz3.ab2@28028>       i2 = Val(a$):If i2 = 0 Then i2 = 1
00041AC6 <AmiBlitz3.ab2@28029>       Poke.w ?maxobjects_value,i2
00041ADC <AmiBlitz3.ab2@28030>       Poke.w ?maxobject_pos,i-1
00041AE2 <AmiBlitz3.ab2@28031>       Gosub storemaxobjects
00041AF2 <AmiBlitz3.ab2@28032>     Next
00041AF8 <AmiBlitz3.ab2@28033>     Gosub stringtores
00041B0A <AmiBlitz3.ab2@28036>   If exit = 1
00041B12 <AmiBlitz3.ab2@28037>     MOVE.w #$FFFF,state_of_residents                       ;load resident
00041B34 <AmiBlitz3.ab2@28038>     WZ_KillTable{"OBJECTS"}
00041B48 <AmiBlitz3.ab2@28039>     WZCloseWindow 1
00041B50 <AmiBlitz3.ab2@28040>     winon = 0
00041B54 <AmiBlitz3.ab2@28043>   GetD0 mess
00041B72 <AmiBlitz3.ab2@28044>   !asm
00041B74 <AmiBlitz3.ab2@28045>   MOVEQ #-1,d7
00041B76 <AmiBlitz3.ab2@28046>   MOVE.l d0,d6
00041B78 <AmiBlitz3.ab2@28047> Return
00041BA0 <AmiBlitz3.ab2@28051>   i.l = WZInput("RESIDENTS")
00041BC8 <AmiBlitz3.ab2@28052>   a$ = Peek$(i)
00041BF4 <AmiBlitz3.ab2@28053>   InitArgParse a$
00041BFE <AmiBlitz3.ab2@28054>   var.l = ?residents_table
00041C28 <AmiBlitz3.ab2@28055>   For i = 0 To 7
00041C4E <AmiBlitz3.ab2@28056>     p$ = NextArgChar$ ($a)
00041C84 <AmiBlitz3.ab2@28057>     Poke$ var,p$
00041C92 <AmiBlitz3.ab2@28058>     var + #ResidentEntryStep    ; $44
00041CA2 <AmiBlitz3.ab2@28059>   Next
00041CA4 <AmiBlitz3.ab2@28060> Return
00041CAA <AmiBlitz3.ab2@28064>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00041CB0 <AmiBlitz3.ab2@28065>   LEA maxobjects_value,A3                                  ;current value
00041CB6 <AmiBlitz3.ab2@28066>   MOVEA.l libpointer,A2
00041CBA <AmiBlitz3.ab2@28069>   CMPA.w #$0,A2
00041CBE <AmiBlitz3.ab2@28070>   BEQ.w menu4c__igotb
00041CC0 <AmiBlitz3.ab2@28071>   MOVEA.l A2,A1
00041CC4 <AmiBlitz3.ab2@28072>   ADDA.l $12(A1),A1
00041CC8 <AmiBlitz3.ab2@28073>   TST.w -$2(A1)
00041CCC <AmiBlitz3.ab2@28074>   BEQ.w JL_0_FFF6b
00041CCE <AmiBlitz3.ab2@28075>   SUBQ.w #1,D5
00041CD2 <AmiBlitz3.ab2@28076>   BMI.w JL_0_FFFCb
00041CD4 <AmiBlitz3.ab2@28079>   MOVEA.l (A2),A2
00041CD8 <AmiBlitz3.ab2@28080> BRA.w JL_0_FFDAb
00041CDC <AmiBlitz3.ab2@28083>   MOVE.w (A3),-$4(A1)
00041CDE <AmiBlitz3.ab2@28086> RTS
00041CE4 <AmiBlitz3.ab2@28090>   MOVE.w debugnest,d0
00041CEA <AmiBlitz3.ab2@28091>   LEA storedebugmode, a0
00041CF2 <AmiBlitz3.ab2@28092>   MOVE.b 0(a0,d0.w),debugmode
00041CF8 <AmiBlitz3.ab2@28093>   TST.w debugnest
00041CFC <AmiBlitz3.ab2@28094>   BEQ JUMP_unpairrunerrs
00041D02 <AmiBlitz3.ab2@28095>   SUBQ.w #1,debugnest
00041D04 <AmiBlitz3.ab2@28096> RTS
00041D0A <AmiBlitz3.ab2@28099> JMP runerrsoverflow
00041D10 <AmiBlitz3.ab2@28102> JMP unpairrunerrs
00041D18 <AmiBlitz3.ab2@28106>   BCHG #$7,use_debugger
00041D20 <AmiBlitz3.ab2@28108>   BTST #$7,use_debugger
00041D24 <AmiBlitz3.ab2@28109>   BNE 'debugon
00041D2A <AmiBlitz3.ab2@28110>   CLR.w debugmode
00041D2E <AmiBlitz3.ab2@28111> BRA.b 'debugoff
00041D34 <AmiBlitz3.ab2@28114>   SNE debugmode
00041D36 <AmiBlitz3.ab2@28117>   MOVE.l a0,-(a7)
00041D6E <AmiBlitz3.ab2@28120>   !ComData_SetB{comByte_DebugMode,debugmode}
00041D70 <AmiBlitz3.ab2@28125>   MOVE.l (a7)+,a0
00041D72 <AmiBlitz3.ab2@28126> RTS
00041D7A <AmiBlitz3.ab2@28131>   BTST #$7,use_debugger
00041D7E <AmiBlitz3.ab2@28132>   BNE 'debugon
00041D84 <AmiBlitz3.ab2@28133>   CLR.w debugmode
00041D88 <AmiBlitz3.ab2@28134> BRA.b 'debugoff
00041D8E <AmiBlitz3.ab2@28137>   SNE debugmode
00041D90 <AmiBlitz3.ab2@28140> RTS
00041D96 <AmiBlitz3.ab2@28144>   ADDQ.w #1,debugnest
00041D9C <AmiBlitz3.ab2@28145>   MOVE.w debugnest,d0
00041DA0 <AmiBlitz3.ab2@28146>   CMP.w #18,d0
00041DA4 <AmiBlitz3.ab2@28147>    BGE JUMP_runerrsoverflow
00041DAA <AmiBlitz3.ab2@28148>   LEA storedebugmode, a0
00041DB2 <AmiBlitz3.ab2@28149>   MOVE.b debugmode,0( a0,d0.w)
00041DB8 <AmiBlitz3.ab2@28152>   SF debugmode
00041DBA <AmiBlitz3.ab2@28153> RTS
00041E3A <AmiBlitz3.ab2@28156> usedpath:  Ds.l 32
00041E3E <AmiBlitz3.ab2@28160>   BEQ.w JUMP_syntaxerr
00041E44 <AmiBlitz3.ab2@28161>   LEA lastpath,A0
00041E48 <AmiBlitz3.ab2@28162>   MOVEM.l a0-a1/d0,-(a7)
00041E4E <AmiBlitz3.ab2@28163>   LEA lastpath2,a1
00041E50 <AmiBlitz3.ab2@28166>     MOVE.b (a0)+,(a1)+
00041E54 <AmiBlitz3.ab2@28167>   BNE 'l2
00041E58 <AmiBlitz3.ab2@28168>   MOVEM.l (a7)+,a0-a1/d0
00041E5C <AmiBlitz3.ab2@28169>   LEA usedpath(PC),A0
00041E60 <AmiBlitz3.ab2@28170>   MOVEM.l a0-a1/d0,-(a7)
00041E66 <AmiBlitz3.ab2@28171>   LEA lastpath,a1
00041E68 <AmiBlitz3.ab2@28174>     MOVE.b (a0)+,(a1)+
00041E6C <AmiBlitz3.ab2@28175>   BNE 'l1
00041E70 <AmiBlitz3.ab2@28176>   MOVEM.l (a7)+,a0-a1/d0
00041E72 <AmiBlitz3.ab2@28179>   TST.w D0
00041E76 <AmiBlitz3.ab2@28180>    BMI.w JUMP_syntaxerr
00041E78 <AmiBlitz3.ab2@28181>   MOVE.b D0,(A0)+
00041E7C <AmiBlitz3.ab2@28182>   BSR.w JUMP_get1bytemain
00041E80 <AmiBlitz3.ab2@28183>    BNE.w JL_0_4AA8
00041E84 <AmiBlitz3.ab2@28184>   MOVE.b #$2,(A0)
00041E86 <AmiBlitz3.ab2@28185> RTS
00041E8A <AmiBlitz3.ab2@28189>   BEQ.w JUMP_syntaxerr
00041E90 <AmiBlitz3.ab2@28190>   LEA path2,A0
00041E92 <AmiBlitz3.ab2@28200>   TST.w D0
00041E96 <AmiBlitz3.ab2@28201>    BMI.w JUMP_syntaxerr
00041E98 <AmiBlitz3.ab2@28202>   MOVE.b D0,(A0)+
00041E9C <AmiBlitz3.ab2@28203>   BSR.w JUMP_get1bytemain
00041EA0 <AmiBlitz3.ab2@28204>    BNE.w JL_0_4AA8b
00041EA4 <AmiBlitz3.ab2@28205>   MOVE.b #$2,(A0)
00041EA6 <AmiBlitz3.ab2@28206> RTS
00041EAC <AmiBlitz3.ab2@28215> JMP errormsg_reg
00041EB6 <AmiBlitz3.ab2@28219>   MOVE.l #$f22d6780,fpucodeglobal
00041EC0 <AmiBlitz3.ab2@28220>   MOVE.l #$f22c6780,fpucodelocal
00041EC6 <AmiBlitz3.ab2@28221>   LEA regtable,a0
00041ED0 <AmiBlitz3.ab2@28222>   MOVE.l #7,maxregs
00041ED2 <AmiBlitz3.ab2@28225>   MOVE.l (a0),d0
00041ED6 <AmiBlitz3.ab2@28226>   BEQ 'e1
00041ED8 <AmiBlitz3.ab2@28227>   CLR.l (a0)
00041EDC <AmiBlitz3.ab2@28228>   MOVE.w 4(a0),d0
00041EE6 <AmiBlitz3.ab2@28229>   MOVE.l fpucodeglobal,fpucode
00041EEA <AmiBlitz3.ab2@28230>   TST.w 6(a0)
00041EEE <AmiBlitz3.ab2@28231>   BEQ 'glob
00041EF8 <AmiBlitz3.ab2@28232>   MOVE.l fpucodelocal,fpucode
00041EFE <AmiBlitz3.ab2@28235>   MOVE.l fpucode,d1
00041F04 <AmiBlitz3.ab2@28236>   JSR writelong
00041F0E <AmiBlitz3.ab2@28237>   SUB.l #$80,fpucodelocal
00041F18 <AmiBlitz3.ab2@28238>   SUB.l #$80,fpucodeglobal
00041F1A <AmiBlitz3.ab2@28239>   MOVE.w d0,d1
00041F20 <AmiBlitz3.ab2@28240>   JSR writeword
00041F22 <AmiBlitz3.ab2@28241>   ADDQ #8,a0
00041F26 <AmiBlitz3.ab2@28242> BRA 'again
00041F28 <AmiBlitz3.ab2@28245> RTS
00041F2E <AmiBlitz3.ab2@28252> JMP notypeerr
00041F34 <AmiBlitz3.ab2@28255> JMP illtypeerr
00041F3E <AmiBlitz3.ab2@28258>   MOVE.l #$f22d4780,fpucodeglobal
00041F48 <AmiBlitz3.ab2@28259>   MOVE.l #$f22c4780,fpucodelocal
00041F4E <AmiBlitz3.ab2@28260>   LEA regtable,a0
00041F50 <AmiBlitz3.ab2@28261>   TST.l (a0)
00041F54 <AmiBlitz3.ab2@28262>    BNE JUMP_errormsg_reg
00041F56 <AmiBlitz3.ab2@28263>   MOVE.l d7,-(a7)
00041F58 <AmiBlitz3.ab2@28264>   SUBQ.l #1,a5
00041F5E <AmiBlitz3.ab2@28267>   JSR getparameter2
00041F62 <AmiBlitz3.ab2@28268>   BEQ.w 'nopar
00041F68 <AmiBlitz3.ab2@28269>   MOVE.w d0,lastchar
00041F6E <AmiBlitz3.ab2@28270>   JSR findvariable
00041F72 <AmiBlitz3.ab2@28271>   BNE 'islocal
00041F7C <AmiBlitz3.ab2@28272>   MOVE.l fpucodeglobal,fpucode
00041F86 <AmiBlitz3.ab2@28273>   MOVE.l #3,maxregs
00041F88 <AmiBlitz3.ab2@28274>   MOVEQ #0,d7
00041F90 <AmiBlitz3.ab2@28277>   CMP.l #newtype_float,$a(a2)                              ;is float type
00041F94 <AmiBlitz3.ab2@28278>    BEQ 'doit
00041F9C <AmiBlitz3.ab2@28279>   CMP.l #newtype_double,$a(a2)
00041FA0 <AmiBlitz3.ab2@28280>    BNE JUMP_illtypeerr
00041FA6 <AmiBlitz3.ab2@28283>   LEA regtable,a0
00041FA8 <AmiBlitz3.ab2@28284>   MOVEQ #0,d0
00041FAA <AmiBlitz3.ab2@28287>   TST.l (a0)
00041FAE <AmiBlitz3.ab2@28288>    BEQ 'store
00041FB0 <AmiBlitz3.ab2@28289>   ADDQ.l #4,d0
00041FB2 <AmiBlitz3.ab2@28290>   ADDQ.l #8,a0
00041FB8 <AmiBlitz3.ab2@28291>   CMP.l #16,d0
00041FBC <AmiBlitz3.ab2@28292>    BCS 'loop
00041FC6 <AmiBlitz3.ab2@28293>   MOVE.l #2,maxregs
00041FCC <AmiBlitz3.ab2@28294>   CMP.l #20,d0
00041FD0 <AmiBlitz3.ab2@28295>    BCS 'loop
00041FDA <AmiBlitz3.ab2@28296>   MOVE.l #1,maxregs
00041FE0 <AmiBlitz3.ab2@28297>   CMP.l #24,d0
00041FE4 <AmiBlitz3.ab2@28298>    BCS 'loop
00041FEA <AmiBlitz3.ab2@28299> JMP toovarerr
00041FF0 <AmiBlitz3.ab2@28302>   TST.b fpu
00041FF4 <AmiBlitz3.ab2@28303>    BEQ 'nofpu
00041FF6 <AmiBlitz3.ab2@28304>   MOVE.l a2,(a0)
00041FFC <AmiBlitz3.ab2@28305>   MOVE.w 4(a2),4(a0)
00042000 <AmiBlitz3.ab2@28306>   MOVE.w d7,6(a0)
00042006 <AmiBlitz3.ab2@28307>   MOVE.l fpucode,d1
00042010 <AmiBlitz3.ab2@28308>   SUB.l #$80,fpucodeglobal
0004201A <AmiBlitz3.ab2@28309>   SUB.l #$80,fpucodelocal
00042020 <AmiBlitz3.ab2@28310>   JSR writelong
00042024 <AmiBlitz3.ab2@28311>   MOVE.w 4(a2),d1
0004202A <AmiBlitz3.ab2@28312>   JSR writeword
00042030 <AmiBlitz3.ab2@28315>   MOVE.w lastchar,d0
00042034 <AmiBlitz3.ab2@28316>   CMP.w #":",d0
00042038 <AmiBlitz3.ab2@28317>    BEQ 'nopar
0004203A <AmiBlitz3.ab2@28318>   TST.w d0
0004203E <AmiBlitz3.ab2@28319>    BEQ 'nopar
00042042 <AmiBlitz3.ab2@28320>   CMP.w #",",d0
00042046 <AmiBlitz3.ab2@28321>   BNE JUMP_syntaxerr
0004204A <AmiBlitz3.ab2@28322> BRA 'l2
0004204C <AmiBlitz3.ab2@28325>    MOVE.l (a7)+,d7
0004204E <AmiBlitz3.ab2@28326> RTS
00042050 <AmiBlitz3.ab2@28329>   MOVEQ #1,d7
00042058 <AmiBlitz3.ab2@28330>   MOVE.b #1,newvariable
0004205E <AmiBlitz3.ab2@28331>   LEA firstlocal,a2
00042064 <AmiBlitz3.ab2@28332>   JSR findvariable
0004206A <AmiBlitz3.ab2@28333>   CLR.b newvariable
00042070 <AmiBlitz3.ab2@28334>   CMP.l #-1,d0
00042074 <AmiBlitz3.ab2@28335>   BEQ.w JUMP_notypeerr2
0004207E <AmiBlitz3.ab2@28336>   MOVE.l fpucodelocal,fpucode
00042082 <AmiBlitz3.ab2@28337> BRA 'go
00042086 <AmiBlitz3.ab2@28340>   CMP.b #".",d0
0004208A <AmiBlitz3.ab2@28341>    BNE 'l1
0004208E <AmiBlitz3.ab2@28342>   BSR JUMP_get1bytemain
00042092 <AmiBlitz3.ab2@28343>   BSR JUMP_get1bytemain
00042096 <AmiBlitz3.ab2@28346>   ORI .b #$20,d0
0004209A <AmiBlitz3.ab2@28347>   CMP.b #"d",d0
0004209E <AmiBlitz3.ab2@28348>    BNE JUMP_illeaerr
000420A2 <AmiBlitz3.ab2@28349>   BSR JUMP_get1bytemain
000420A6 <AmiBlitz3.ab2@28350>   SUB.b #$30,d0
000420AA <AmiBlitz3.ab2@28351>   CMP.b #$7,d0
000420AE <AmiBlitz3.ab2@28352>    BGT JUMP_syntaxerr
000420B2 <AmiBlitz3.ab2@28353>   MOVE.w #$49c0,d1
000420B4 <AmiBlitz3.ab2@28354>   ADD.b d0,d1
000420BA <AmiBlitz3.ab2@28355>   JSR writeword
000420BE <AmiBlitz3.ab2@28356>   BSR JUMP_get1bytemain
000420C0 <AmiBlitz3.ab2@28357> RTS
000420C6 <AmiBlitz3.ab2@28361>   LEA lastpath,a0
000420CA <AmiBlitz3.ab2@28362>   LEA usedpath(PC),A1
000420CC <AmiBlitz3.ab2@28365>     MOVE.b (a0)+,(a1)+
000420D0 <AmiBlitz3.ab2@28366>   BNE 'l1
000420D6 <AmiBlitz3.ab2@28368>   LEA lastpath2,a0
000420DC <AmiBlitz3.ab2@28369>   LEA lastpath,A1
000420DE <AmiBlitz3.ab2@28372>     MOVE.b (a0)+,(a1)+
000420E2 <AmiBlitz3.ab2@28373>   BNE 'l2
000420E4 <AmiBlitz3.ab2@28374> RTS
000420EA <AmiBlitz3.ab2@28378>   TST.b objectcount
000420EE <AmiBlitz3.ab2@28379>   BEQ 'l2a
000420F4 <AmiBlitz3.ab2@28380> JMP macnesterr
000420FA <AmiBlitz3.ab2@28383>   LEA devo,a0
00042100 <AmiBlitz3.ab2@28384>   ADDQ.b #1,objectcount
00042104 <AmiBlitz3.ab2@28385>   MOVEM.l a1/d2,-(a7)
0004210A <AmiBlitz3.ab2@28386>   LEA ptr_parameterstore,a1
0004210C <AmiBlitz3.ab2@28389>     MOVE.b (a0)+,(a1)+
00042110 <AmiBlitz3.ab2@28390>   BNE 'l1
00042112 <AmiBlitz3.ab2@28392>   MOVEQ #13,d2
00042118 <AmiBlitz3.ab2@28393>   JSR findlabel2
0004211C <AmiBlitz3.ab2@28394>   BNE 'd
00042120 <AmiBlitz3.ab2@28395>   TST.l 8(a2)
00042124 <AmiBlitz3.ab2@28396>   BEQ 'd
0004212A <AmiBlitz3.ab2@28397>   SUBQ.b #1,objectcount
0004212E <AmiBlitz3.ab2@28398>   MOVEM.l (a7)+,a1/d2
00042134 <AmiBlitz3.ab2@28399>   JSR skiprest
0004213C <AmiBlitz3.ab2@28400>   MOVE.b #1,developobject
0004213E <AmiBlitz3.ab2@28401> RTS
00042142 <AmiBlitz3.ab2@28404>   MOVEM.l (a7)+,a1/d2
0004214A <AmiBlitz3.ab2@28405>   MOVE.b #1,resdisable
00042150 <AmiBlitz3.ab2@28408>   CLR.b developobject
00042156 <AmiBlitz3.ab2@28409> JMP do_Macro
0004215C <AmiBlitz3.ab2@28413> JMP illeaerr
00042162 <AmiBlitz3.ab2@28417>   CLR.b typecheck
00042168 <AmiBlitz3.ab2@28418>   CLR.b declare
0004216E <AmiBlitz3.ab2@28419>   CLR.b declare2
00042172 <AmiBlitz3.ab2@28420>   SUB.b #$30,d0
00042176 <AmiBlitz3.ab2@28421>   BTST #0,d0
0004217A <AmiBlitz3.ab2@28422>   BEQ 'l1
00042182 <AmiBlitz3.ab2@28423>   MOVE.b #1,declare
00042186 <AmiBlitz3.ab2@28426>   BTST #1,d0
0004218A <AmiBlitz3.ab2@28427>   BEQ 'l2
00042192 <AmiBlitz3.ab2@28428>   MOVE.b #1,declare2
00042196 <AmiBlitz3.ab2@28431>   BTST #2,d0
0004219A <AmiBlitz3.ab2@28432>   BEQ 'l3
000421A2 <AmiBlitz3.ab2@28433>   MOVE.b #1,typecheck
000421A6 <AmiBlitz3.ab2@28435>   BSR.w JUMP_get1bytemain
000421A8 <AmiBlitz3.ab2@28436> RTS
000421AE <AmiBlitz3.ab2@28439> JMP get1bytemain
000421B0 <AmiBlitz3.ab2@28444>   MOVE.l d2,-(a7)                                          ; D2 -> stack
000421B2 <AmiBlitz3.ab2@28445>   ADDQ #1,a5
000421B4 <AmiBlitz3.ab2@28446>   MOVE.l a5,-(a7)
000421DE <AmiBlitz3.ab2@28447>   !basic
000421E4 <AmiBlitz3.ab2@28448>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
000421EE <AmiBlitz3.ab2@28449>   If _myD0
0004222E <AmiBlitz3.ab2@28450>     newconst$ = UCase$(Peek.s(_myD0))
00042234 <AmiBlitz3.ab2@28451>   Else
00042262 <AmiBlitz3.ab2@28452>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0004228A <AmiBlitz3.ab2@28453>     nwconst$="xxx"
000422B2 <AmiBlitz3.ab2@28455>   condata$ =""
000422C2 <AmiBlitz3.ab2@28456>   Poke.b ?skip_bytes,0
0004231E <AmiBlitz3.ab2@28457>   If Left$(newconst$,2) = "__"
00042378 <AmiBlitz3.ab2@28458>     Select Mid$(newconst$,3,4)
0004239C <AmiBlitz3.ab2@28460>      Case "DATE"
000423F6 <AmiBlitz3.ab2@28461>       Select Mid$(newconst$,3,6)
00042434 <AmiBlitz3.ab2@28462>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00042478 <AmiBlitz3.ab2@28463>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
00042486 <AmiBlitz3.ab2@28464>       End Select
00042494 <AmiBlitz3.ab2@28465>       i.l=SystemDate
000424BA <AmiBlitz3.ab2@28466>       condata$ = Date$ (i)
00042538 <AmiBlitz3.ab2@28467>       condata$ = Replace$(condata$,"/",".")
00042562 <AmiBlitz3.ab2@28469>      Case "VER_"
00042572 <AmiBlitz3.ab2@28472>       actual_version.l = Peek.l(?versioninformation)
00042582 <AmiBlitz3.ab2@28473>       actual_build.l   = Peek.l(?number_of_builds)
000425A6 <AmiBlitz3.ab2@28475>       Format ""
00042600 <AmiBlitz3.ab2@28476>       Select Mid$(newconst$,3,9)
00042624 <AmiBlitz3.ab2@28478>        Case "VER_MAJOR"
00042660 <AmiBlitz3.ab2@28479>         condata$ = Str$(actual_version LSR 24)
0004268A <AmiBlitz3.ab2@28481>        Case "VER_MINOR"
000426CE <AmiBlitz3.ab2@28482>         condata$ = Str$((actual_version LSL 8) LSR 24)
000426F8 <AmiBlitz3.ab2@28484>        Case "VER_PATCH"
0004273C <AmiBlitz3.ab2@28485>         condata$ = Str$((actual_version LSL 16) LSR 24 )
00042766 <AmiBlitz3.ab2@28487>        Case "VER_BUILD"
0004278A <AmiBlitz3.ab2@28488>         Format ""
000427BE <AmiBlitz3.ab2@28489>         condata$ = Str$(actual_build)
000427C4 <AmiBlitz3.ab2@28491>        Default
000427EC <AmiBlitz3.ab2@28492>         condata$ = "{unknown compiler constant}"
000427FA <AmiBlitz3.ab2@28494>       End Select
0004281E <AmiBlitz3.ab2@28495>       Format ""
0004282E <AmiBlitz3.ab2@28496>       Poke.b ?skip_bytes,11
00042858 <AmiBlitz3.ab2@28498>      Case "THIS"
000428B2 <AmiBlitz3.ab2@28499>       Select Mid$(newconst$,3,9)
000428D6 <AmiBlitz3.ab2@28501>        Case "THIS_FUNC"
000428E6 <AmiBlitz3.ab2@28502>         Poke.b ?skip_bytes,15
00042906 <AmiBlitz3.ab2@28503>         If Peek.l(?currentfunction)<>0
00042952 <AmiBlitz3.ab2@28504>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
00042958 <AmiBlitz3.ab2@28505>         Else
00042980 <AmiBlitz3.ab2@28506>           condata$ = "GLOBAL"
000429AA <AmiBlitz3.ab2@28509>        Case "THIS_INCL"
000429BA <AmiBlitz3.ab2@28510>         Poke.b ?skip_bytes,14
000429DA <AmiBlitz3.ab2@28511>         If Peek.l(?includetemp2)<>0
00042A28 <AmiBlitz3.ab2@28512>           condata$ = dos_FilePart{Peek$(?includetemp2)}
00042A52 <AmiBlitz3.ab2@28515>        Case "THIS_POIN"
00042A62 <AmiBlitz3.ab2@28516>         Poke.b ?skip_bytes,14
00042A82 <AmiBlitz3.ab2@28517>         If Peek.l(?currentfunction)<>0
00042AB0 <AmiBlitz3.ab2@28518>           condata$ = Hex$(Peek.l(?currentfunction))
00042ABE <AmiBlitz3.ab2@28521>       End Select
00042AE8 <AmiBlitz3.ab2@28523>      Case "CODE"
00042AF8 <AmiBlitz3.ab2@28524>       Poke.b ?skip_bytes,10
00042B5A <AmiBlitz3.ab2@28525>       If Mid$(newconst$,3,8) = "CODELINE"
00042B96 <AmiBlitz3.ab2@28526>         condata$ = Str$(Peek.l(?globallinecount))
00042BA4 <AmiBlitz3.ab2@28529>     End Select
00042BAA <AmiBlitz3.ab2@28531>   Else
00042BFE <AmiBlitz3.ab2@28532>     Select Left$(newconst$,1)
00042C22 <AmiBlitz3.ab2@28534>      Case "R"
00042C32 <AmiBlitz3.ab2@28535>       Poke.b ?skip_bytes,3
00042CAA <AmiBlitz3.ab2@28536>       For i = 1 To Vallong(Mid$(newconst$,2,2))
00042D2A <AmiBlitz3.ab2@28537>         condata$ = condata$ + Mid$(newconst$,4,1)
00042D3A <AmiBlitz3.ab2@28538>       Next
00042D64 <AmiBlitz3.ab2@28540>      Case "N"
00042D74 <AmiBlitz3.ab2@28541>       Poke.b ?skip_bytes,1
00042D98 <AmiBlitz3.ab2@28542>       condata$ = Chr$(10)
00042D9E <AmiBlitz3.ab2@28544>      Default
00042DB0 <AmiBlitz3.ab2@28545>       char1.b = Peek.b(&newconst$)
00042DC8 <AmiBlitz3.ab2@28546>       char2.b = Peek.b(&newconst$+1)
00042DD4 <AmiBlitz3.ab2@28547>       nibble1.l = -1
00042DE0 <AmiBlitz3.ab2@28548>       nibble2.l = -1
00042E1E <AmiBlitz3.ab2@28550>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
00042E5C <AmiBlitz3.ab2@28551>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
00042EA0 <AmiBlitz3.ab2@28553>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
00042EE4 <AmiBlitz3.ab2@28554>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
00042F28 <AmiBlitz3.ab2@28556>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
00042F6C <AmiBlitz3.ab2@28557>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
00042F92 <AmiBlitz3.ab2@28559>       If nibble1>=0 AND nibble2>=0
00042FA8 <AmiBlitz3.ab2@28560>         newchar.l = (nibble1 LSL 4) + (nibble2)
00042FCC <AmiBlitz3.ab2@28561>         condata$ = Chr$(newchar)
00042FDC <AmiBlitz3.ab2@28562>         Poke.b ?skip_bytes,2
00042FEA <AmiBlitz3.ab2@28565>     End Select
0004304A <AmiBlitz3.ab2@28567>   If condata$ = "" AND Peek.b(?skip_bytes)=0
00043170 <AmiBlitz3.ab2@28568>     !cout{"detected unknown const: " + newconst$}
000431A4 <AmiBlitz3.ab2@28569>     condata$ = newconst$
000431BA <AmiBlitz3.ab2@28572>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
000431BC <AmiBlitz3.ab2@28573>   MOVE.l d0,d2
000431BE <AmiBlitz3.ab2@28574>   MOVE.l d2,-(a7)
000431C4 <AmiBlitz3.ab2@28576>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
000431C6 <AmiBlitz3.ab2@28577>   MOVE.l d0,a0
000431C8 <AmiBlitz3.ab2@28580>     MOVE.b (a0)+,d1
000431CE <AmiBlitz3.ab2@28581>     JSR pokedata1b
000431D2 <AmiBlitz3.ab2@28582>  DBF d2,'l1
000431F0 <AmiBlitz3.ab2@28584>   !asm
000431F2 <AmiBlitz3.ab2@28585>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
000431F4 <AmiBlitz3.ab2@28586>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
000431F6 <AmiBlitz3.ab2@28587>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
000431FC <AmiBlitz3.ab2@28588>   ADD.l #1,d2
00043202 <AmiBlitz3.ab2@28590>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
00043208 <AmiBlitz3.ab2@28591>   MOVE.b skip_bytes,D0
0004320A <AmiBlitz3.ab2@28592>   ADD.l D0,a5
0004320C <AmiBlitz3.ab2@28593> RTS
00043210 <AmiBlitz3.ab2@28668> MOVEM.l a3/d1,-(a7)
00043216 <AmiBlitz3.ab2@28670> CLR.b a4a5store
00043218 <AmiBlitz3.ab2@28671> 'continue: MOVE.b (a3)+,d1
0004321C <AmiBlitz3.ab2@28672> CMP.b #$15,d1
00043220 <AmiBlitz3.ab2@28673> BEQ 'find
00043224 <AmiBlitz3.ab2@28674> CMP.b #$14,d1
00043228 <AmiBlitz3.ab2@28675> BEQ 'find
0004322C <AmiBlitz3.ab2@28676> CMP.b #$ff,d1
00043230 <AmiBlitz3.ab2@28677> BNE 'continue
00043234 <AmiBlitz3.ab2@28678> BRA 'notfind
0004323A <AmiBlitz3.ab2@28680> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
00043240 <AmiBlitz3.ab2@28681> JSR writelong
00043248 <AmiBlitz3.ab2@28682> MOVE.b #1,a4a5store
0004324C <AmiBlitz3.ab2@28683> 'notfind: MOVEM.l (a7)+,a3/d1
0004324E <AmiBlitz3.ab2@28684> RTS
00043254 <AmiBlitz3.ab2@28687> TST.b a4a5store
00043258 <AmiBlitz3.ab2@28688> BEQ 'no
0004325E <AmiBlitz3.ab2@28689> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
00043264 <AmiBlitz3.ab2@28690> JSR writelong
0004326A <AmiBlitz3.ab2@28691> CLR.b a4a5store
0004326C <AmiBlitz3.ab2@28692> 'no RTS
0004326C <internal_commands.ab2@1> INCLUDE "internal_commands.ab2"
00043270 <internal_commands.ab2@13> INCLUDE "internal_commands.ab2"
00043272 <internal_commands.ab2@15> INCLUDE "internal_commands.ab2"
0004327A <internal_commands.ab2@16> INCLUDE "internal_commands.ab2"
00043286 <internal_commands.ab2@17> INCLUDE "internal_commands.ab2"
0004328A <internal_commands.ab2@21> INCLUDE "internal_commands.ab2"
0004328C <internal_commands.ab2@22> INCLUDE "internal_commands.ab2"
00043290 <internal_commands.ab2@23> INCLUDE "internal_commands.ab2"
000432D9 <internal_commands.ab2@24> INCLUDE "internal_commands.ab2"
000432DA <internal_commands.ab2@25> INCLUDE "internal_commands.ab2"
000432DE <internal_commands.ab2@28> INCLUDE "internal_commands.ab2"
000432E0 <internal_commands.ab2@29> INCLUDE "internal_commands.ab2"
000432E4 <internal_commands.ab2@30> INCLUDE "internal_commands.ab2"
00043300 <internal_commands.ab2@31> INCLUDE "internal_commands.ab2"
00043304 <internal_commands.ab2@35> INCLUDE "internal_commands.ab2"
00043306 <internal_commands.ab2@36> INCLUDE "internal_commands.ab2"
0004330A <internal_commands.ab2@37> INCLUDE "internal_commands.ab2"
00043367 <internal_commands.ab2@38> INCLUDE "internal_commands.ab2"
00043368 <internal_commands.ab2@39> INCLUDE "internal_commands.ab2"
0004336C <internal_commands.ab2@42> INCLUDE "internal_commands.ab2"
0004336E <internal_commands.ab2@43> INCLUDE "internal_commands.ab2"
00043373 <internal_commands.ab2@44> INCLUDE "internal_commands.ab2"
00043383 <internal_commands.ab2@45> INCLUDE "internal_commands.ab2"
00043384 <internal_commands.ab2@46> INCLUDE "internal_commands.ab2"
00043388 <internal_commands.ab2@49> INCLUDE "internal_commands.ab2"
0004338A <internal_commands.ab2@50> INCLUDE "internal_commands.ab2"
00043390 <internal_commands.ab2@51> INCLUDE "internal_commands.ab2"
000433A0 <internal_commands.ab2@52> INCLUDE "internal_commands.ab2"
000433A4 <internal_commands.ab2@56> INCLUDE "internal_commands.ab2"
000433A6 <internal_commands.ab2@57> INCLUDE "internal_commands.ab2"
000433AD <internal_commands.ab2@58> INCLUDE "internal_commands.ab2"
000433AE <internal_commands.ab2@59> INCLUDE "internal_commands.ab2"
000433B2 <internal_commands.ab2@63> INCLUDE "internal_commands.ab2"
000433B4 <internal_commands.ab2@64> INCLUDE "internal_commands.ab2"
000433BE <internal_commands.ab2@65> INCLUDE "internal_commands.ab2"
000433F1 <internal_commands.ab2@66> INCLUDE "internal_commands.ab2"
000433F2 <internal_commands.ab2@67> INCLUDE "internal_commands.ab2"
000433F6 <internal_commands.ab2@70> INCLUDE "internal_commands.ab2"
000433F8 <internal_commands.ab2@71> INCLUDE "internal_commands.ab2"
00043401 <internal_commands.ab2@72> INCLUDE "internal_commands.ab2"
0004343C <internal_commands.ab2@73> INCLUDE "internal_commands.ab2"
00043440 <internal_commands.ab2@77> INCLUDE "internal_commands.ab2"
00043442 <internal_commands.ab2@78> INCLUDE "internal_commands.ab2"
0004344C <internal_commands.ab2@79> INCLUDE "internal_commands.ab2"
0004344D <internal_commands.ab2@80> INCLUDE "internal_commands.ab2"
0004344E <internal_commands.ab2@81> INCLUDE "internal_commands.ab2"
00043452 <internal_commands.ab2@84> INCLUDE "internal_commands.ab2"
00043454 <internal_commands.ab2@85> INCLUDE "internal_commands.ab2"
00043457 <internal_commands.ab2@86> INCLUDE "internal_commands.ab2"
0004346E <internal_commands.ab2@87> INCLUDE "internal_commands.ab2"
00043472 <internal_commands.ab2@91> INCLUDE "internal_commands.ab2"
00043474 <internal_commands.ab2@92> INCLUDE "internal_commands.ab2"
0004347A <internal_commands.ab2@93> INCLUDE "internal_commands.ab2"
00043487 <internal_commands.ab2@94> INCLUDE "internal_commands.ab2"
00043488 <internal_commands.ab2@95> INCLUDE "internal_commands.ab2"
0004348C <internal_commands.ab2@98> INCLUDE "internal_commands.ab2"
0004348E <internal_commands.ab2@99> INCLUDE "internal_commands.ab2"
00043494 <internal_commands.ab2@100> INCLUDE "internal_commands.ab2"
000434A0 <internal_commands.ab2@101> INCLUDE "internal_commands.ab2"
000434A4 <internal_commands.ab2@105> INCLUDE "internal_commands.ab2"
000434A6 <internal_commands.ab2@106> INCLUDE "internal_commands.ab2"
000434AD <internal_commands.ab2@107> INCLUDE "internal_commands.ab2"
000434BA <internal_commands.ab2@108> INCLUDE "internal_commands.ab2"
000434BE <internal_commands.ab2@112> INCLUDE "internal_commands.ab2"
000434C0 <internal_commands.ab2@113> INCLUDE "internal_commands.ab2"
000434C5 <internal_commands.ab2@114> INCLUDE "internal_commands.ab2"
000434D2 <internal_commands.ab2@115> INCLUDE "internal_commands.ab2"
000434D6 <internal_commands.ab2@119> INCLUDE "internal_commands.ab2"
000434D8 <internal_commands.ab2@120> INCLUDE "internal_commands.ab2"
000434E0 <internal_commands.ab2@121> INCLUDE "internal_commands.ab2"
000434E1 <internal_commands.ab2@122> INCLUDE "internal_commands.ab2"
000434E2 <internal_commands.ab2@123> INCLUDE "internal_commands.ab2"
000434E6 <internal_commands.ab2@126> INCLUDE "internal_commands.ab2"
000434E8 <internal_commands.ab2@127> INCLUDE "internal_commands.ab2"
000434F0 <internal_commands.ab2@128> INCLUDE "internal_commands.ab2"
000434F1 <internal_commands.ab2@129> INCLUDE "internal_commands.ab2"
000434F2 <internal_commands.ab2@130> INCLUDE "internal_commands.ab2"
000434F6 <internal_commands.ab2@133> INCLUDE "internal_commands.ab2"
000434F8 <internal_commands.ab2@134> INCLUDE "internal_commands.ab2"
00043501 <internal_commands.ab2@135> INCLUDE "internal_commands.ab2"
0004350C <internal_commands.ab2@136> INCLUDE "internal_commands.ab2"
00043510 <internal_commands.ab2@140> INCLUDE "internal_commands.ab2"
00043512 <internal_commands.ab2@141> INCLUDE "internal_commands.ab2"
0004351A <internal_commands.ab2@142> INCLUDE "internal_commands.ab2"
00043525 <internal_commands.ab2@143> INCLUDE "internal_commands.ab2"
00043526 <internal_commands.ab2@144> INCLUDE "internal_commands.ab2"
0004352A <internal_commands.ab2@147> INCLUDE "internal_commands.ab2"
0004352C <internal_commands.ab2@148> INCLUDE "internal_commands.ab2"
00043533 <internal_commands.ab2@149> INCLUDE "internal_commands.ab2"
00043595 <internal_commands.ab2@150> INCLUDE "internal_commands.ab2"
00043596 <internal_commands.ab2@151> INCLUDE "internal_commands.ab2"
0004359A <internal_commands.ab2@154> INCLUDE "internal_commands.ab2"
0004359C <internal_commands.ab2@155> INCLUDE "internal_commands.ab2"
000435A3 <internal_commands.ab2@156> INCLUDE "internal_commands.ab2"
000435B2 <internal_commands.ab2@157> INCLUDE "internal_commands.ab2"
000435B6 <internal_commands.ab2@161> INCLUDE "internal_commands.ab2"
000435B8 <internal_commands.ab2@162> INCLUDE "internal_commands.ab2"
000435BC <internal_commands.ab2@163> INCLUDE "internal_commands.ab2"
000435F2 <internal_commands.ab2@164> INCLUDE "internal_commands.ab2"
000435F6 <internal_commands.ab2@168> INCLUDE "internal_commands.ab2"
000435F8 <internal_commands.ab2@169> INCLUDE "internal_commands.ab2"
000435FD <internal_commands.ab2@170> INCLUDE "internal_commands.ab2"
0004360C <internal_commands.ab2@171> INCLUDE "internal_commands.ab2"
00043610 <internal_commands.ab2@175> INCLUDE "internal_commands.ab2"
00043612 <internal_commands.ab2@176> INCLUDE "internal_commands.ab2"
00043615 <internal_commands.ab2@177> INCLUDE "internal_commands.ab2"
00043636 <internal_commands.ab2@178> INCLUDE "internal_commands.ab2"
0004363A <internal_commands.ab2@182> INCLUDE "internal_commands.ab2"
0004363C <internal_commands.ab2@183> INCLUDE "internal_commands.ab2"
00043641 <internal_commands.ab2@184> INCLUDE "internal_commands.ab2"
0004364D <internal_commands.ab2@185> INCLUDE "internal_commands.ab2"
0004364E <internal_commands.ab2@186> INCLUDE "internal_commands.ab2"
00043652 <internal_commands.ab2@189> INCLUDE "internal_commands.ab2"
00043654 <internal_commands.ab2@190> INCLUDE "internal_commands.ab2"
00043659 <internal_commands.ab2@191> INCLUDE "internal_commands.ab2"
00043670 <internal_commands.ab2@192> INCLUDE "internal_commands.ab2"
00043674 <internal_commands.ab2@196> INCLUDE "internal_commands.ab2"
00043676 <internal_commands.ab2@197> INCLUDE "internal_commands.ab2"
0004367B <internal_commands.ab2@198> INCLUDE "internal_commands.ab2"
0004368A <internal_commands.ab2@199> INCLUDE "internal_commands.ab2"
0004368E <internal_commands.ab2@203> INCLUDE "internal_commands.ab2"
00043690 <internal_commands.ab2@204> INCLUDE "internal_commands.ab2"
00043695 <internal_commands.ab2@205> INCLUDE "internal_commands.ab2"
000436B4 <internal_commands.ab2@206> INCLUDE "internal_commands.ab2"
000436B8 <internal_commands.ab2@210> INCLUDE "internal_commands.ab2"
000436BA <internal_commands.ab2@211> INCLUDE "internal_commands.ab2"
000436BF <internal_commands.ab2@212> INCLUDE "internal_commands.ab2"
000436DE <internal_commands.ab2@213> INCLUDE "internal_commands.ab2"
000436E2 <internal_commands.ab2@217> INCLUDE "internal_commands.ab2"
000436E4 <internal_commands.ab2@218> INCLUDE "internal_commands.ab2"
000436EA <internal_commands.ab2@219> INCLUDE "internal_commands.ab2"
000436EB <internal_commands.ab2@220> INCLUDE "internal_commands.ab2"
000436EC <internal_commands.ab2@221> INCLUDE "internal_commands.ab2"
000436F0 <internal_commands.ab2@224> INCLUDE "internal_commands.ab2"
000436F2 <internal_commands.ab2@225> INCLUDE "internal_commands.ab2"
000436F7 <internal_commands.ab2@226> INCLUDE "internal_commands.ab2"
000436F8 <internal_commands.ab2@227> INCLUDE "internal_commands.ab2"
000436FC <internal_commands.ab2@231> INCLUDE "internal_commands.ab2"
000436FE <internal_commands.ab2@232> INCLUDE "internal_commands.ab2"
00043703 <internal_commands.ab2@233> INCLUDE "internal_commands.ab2"
00043710 <internal_commands.ab2@234> INCLUDE "internal_commands.ab2"
00043714 <internal_commands.ab2@238> INCLUDE "internal_commands.ab2"
00043716 <internal_commands.ab2@239> INCLUDE "internal_commands.ab2"
0004371B <internal_commands.ab2@240> INCLUDE "internal_commands.ab2"
0004372A <internal_commands.ab2@241> INCLUDE "internal_commands.ab2"
0004372E <internal_commands.ab2@245> INCLUDE "internal_commands.ab2"
00043730 <internal_commands.ab2@246> INCLUDE "internal_commands.ab2"
00043735 <internal_commands.ab2@247> INCLUDE "internal_commands.ab2"
00043744 <internal_commands.ab2@248> INCLUDE "internal_commands.ab2"
00043748 <internal_commands.ab2@252> INCLUDE "internal_commands.ab2"
0004374A <internal_commands.ab2@253> INCLUDE "internal_commands.ab2"
00043750 <internal_commands.ab2@254> INCLUDE "internal_commands.ab2"
0004376D <internal_commands.ab2@255> INCLUDE "internal_commands.ab2"
0004376E <internal_commands.ab2@256> INCLUDE "internal_commands.ab2"
00043772 <internal_commands.ab2@259> INCLUDE "internal_commands.ab2"
00043774 <internal_commands.ab2@260> INCLUDE "internal_commands.ab2"
0004377A <internal_commands.ab2@261> INCLUDE "internal_commands.ab2"
00043797 <internal_commands.ab2@262> INCLUDE "internal_commands.ab2"
00043798 <internal_commands.ab2@263> INCLUDE "internal_commands.ab2"
0004379C <internal_commands.ab2@266> INCLUDE "internal_commands.ab2"
0004379E <internal_commands.ab2@267> INCLUDE "internal_commands.ab2"
000437A1 <internal_commands.ab2@268> INCLUDE "internal_commands.ab2"
000437B8 <internal_commands.ab2@269> INCLUDE "internal_commands.ab2"
000437BC <internal_commands.ab2@273> INCLUDE "internal_commands.ab2"
000437BE <internal_commands.ab2@274> INCLUDE "internal_commands.ab2"
000437C1 <internal_commands.ab2@275> INCLUDE "internal_commands.ab2"
000437D0 <internal_commands.ab2@276> INCLUDE "internal_commands.ab2"
000437D4 <internal_commands.ab2@280> INCLUDE "internal_commands.ab2"
000437D6 <internal_commands.ab2@281> INCLUDE "internal_commands.ab2"
000437DB <internal_commands.ab2@282> INCLUDE "internal_commands.ab2"
000437DC <internal_commands.ab2@283> INCLUDE "internal_commands.ab2"
000437E0 <internal_commands.ab2@287> INCLUDE "internal_commands.ab2"
000437E2 <internal_commands.ab2@288> INCLUDE "internal_commands.ab2"
000437E6 <internal_commands.ab2@289> INCLUDE "internal_commands.ab2"
000437FB <internal_commands.ab2@290> INCLUDE "internal_commands.ab2"
000437FC <internal_commands.ab2@291> INCLUDE "internal_commands.ab2"
00043800 <internal_commands.ab2@294> INCLUDE "internal_commands.ab2"
00043802 <internal_commands.ab2@295> INCLUDE "internal_commands.ab2"
00043809 <internal_commands.ab2@296> INCLUDE "internal_commands.ab2"
00043822 <internal_commands.ab2@297> INCLUDE "internal_commands.ab2"
00043826 <internal_commands.ab2@301> INCLUDE "internal_commands.ab2"
00043828 <internal_commands.ab2@302> INCLUDE "internal_commands.ab2"
0004382F <internal_commands.ab2@303> INCLUDE "internal_commands.ab2"
0004383A <internal_commands.ab2@304> INCLUDE "internal_commands.ab2"
0004383E <internal_commands.ab2@308> INCLUDE "internal_commands.ab2"
00043840 <internal_commands.ab2@309> INCLUDE "internal_commands.ab2"
00043845 <internal_commands.ab2@310> INCLUDE "internal_commands.ab2"
0004385C <internal_commands.ab2@311> INCLUDE "internal_commands.ab2"
00043860 <internal_commands.ab2@315> INCLUDE "internal_commands.ab2"
00043862 <internal_commands.ab2@316> INCLUDE "internal_commands.ab2"
00043866 <internal_commands.ab2@317> INCLUDE "internal_commands.ab2"
0004387D <internal_commands.ab2@318> INCLUDE "internal_commands.ab2"
0004387E <internal_commands.ab2@319> INCLUDE "internal_commands.ab2"
00043882 <internal_commands.ab2@322> INCLUDE "internal_commands.ab2"
00043884 <internal_commands.ab2@323> INCLUDE "internal_commands.ab2"
00043889 <internal_commands.ab2@324> INCLUDE "internal_commands.ab2"
0004388A <internal_commands.ab2@325> INCLUDE "internal_commands.ab2"
0004388E <internal_commands.ab2@329> INCLUDE "internal_commands.ab2"
00043890 <internal_commands.ab2@330> INCLUDE "internal_commands.ab2"
00043895 <internal_commands.ab2@331> INCLUDE "internal_commands.ab2"
00043899 <internal_commands.ab2@332> INCLUDE "internal_commands.ab2"
0004389A <internal_commands.ab2@333> INCLUDE "internal_commands.ab2"
0004389E <internal_commands.ab2@336> INCLUDE "internal_commands.ab2"
000438A0 <internal_commands.ab2@337> INCLUDE "internal_commands.ab2"
000438A7 <internal_commands.ab2@338> INCLUDE "internal_commands.ab2"
000438BF <internal_commands.ab2@339> INCLUDE "internal_commands.ab2"
000438C0 <internal_commands.ab2@340> INCLUDE "internal_commands.ab2"
000438C4 <internal_commands.ab2@343> INCLUDE "internal_commands.ab2"
000438C6 <internal_commands.ab2@344> INCLUDE "internal_commands.ab2"
000438CD <internal_commands.ab2@345> INCLUDE "internal_commands.ab2"
000438D2 <internal_commands.ab2@346> INCLUDE "internal_commands.ab2"
000438D6 <internal_commands.ab2@350> INCLUDE "internal_commands.ab2"
000438D8 <internal_commands.ab2@351> INCLUDE "internal_commands.ab2"
000438DF <internal_commands.ab2@352> INCLUDE "internal_commands.ab2"
000438E4 <internal_commands.ab2@353> INCLUDE "internal_commands.ab2"
000438E8 <internal_commands.ab2@357> INCLUDE "internal_commands.ab2"
000438EA <internal_commands.ab2@358> INCLUDE "internal_commands.ab2"
000438F1 <internal_commands.ab2@359> INCLUDE "internal_commands.ab2"
0004390C <internal_commands.ab2@360> INCLUDE "internal_commands.ab2"
00043910 <internal_commands.ab2@364> INCLUDE "internal_commands.ab2"
00043912 <internal_commands.ab2@365> INCLUDE "internal_commands.ab2"
0004391A <internal_commands.ab2@366> INCLUDE "internal_commands.ab2"
00043933 <internal_commands.ab2@367> INCLUDE "internal_commands.ab2"
00043934 <internal_commands.ab2@368> INCLUDE "internal_commands.ab2"
00043938 <internal_commands.ab2@371> INCLUDE "internal_commands.ab2"
0004393A <internal_commands.ab2@372> INCLUDE "internal_commands.ab2"
00043940 <internal_commands.ab2@373> INCLUDE "internal_commands.ab2"
00043941 <internal_commands.ab2@374> INCLUDE "internal_commands.ab2"
00043942 <internal_commands.ab2@375> INCLUDE "internal_commands.ab2"
00043946 <internal_commands.ab2@378> INCLUDE "internal_commands.ab2"
00043948 <internal_commands.ab2@379> INCLUDE "internal_commands.ab2"
0004394E <internal_commands.ab2@380> INCLUDE "internal_commands.ab2"
0004394F <internal_commands.ab2@381> INCLUDE "internal_commands.ab2"
00043950 <internal_commands.ab2@382> INCLUDE "internal_commands.ab2"
00043954 <internal_commands.ab2@385> INCLUDE "internal_commands.ab2"
00043956 <internal_commands.ab2@386> INCLUDE "internal_commands.ab2"
0004395D <internal_commands.ab2@387> INCLUDE "internal_commands.ab2"
0004395E <internal_commands.ab2@388> INCLUDE "internal_commands.ab2"
00043962 <internal_commands.ab2@392> INCLUDE "internal_commands.ab2"
00043964 <internal_commands.ab2@393> INCLUDE "internal_commands.ab2"
0004396A <internal_commands.ab2@394> INCLUDE "internal_commands.ab2"
00043973 <internal_commands.ab2@395> INCLUDE "internal_commands.ab2"
00043974 <internal_commands.ab2@396> INCLUDE "internal_commands.ab2"
00043978 <internal_commands.ab2@399> INCLUDE "internal_commands.ab2"
0004397A <internal_commands.ab2@400> INCLUDE "internal_commands.ab2"
00043982 <internal_commands.ab2@401> INCLUDE "internal_commands.ab2"
0004398F <internal_commands.ab2@402> INCLUDE "internal_commands.ab2"
00043990 <internal_commands.ab2@403> INCLUDE "internal_commands.ab2"
00043994 <internal_commands.ab2@406> INCLUDE "internal_commands.ab2"
00043996 <internal_commands.ab2@407> INCLUDE "internal_commands.ab2"
0004399E <internal_commands.ab2@408> INCLUDE "internal_commands.ab2"
000439AB <internal_commands.ab2@409> INCLUDE "internal_commands.ab2"
000439AC <internal_commands.ab2@410> INCLUDE "internal_commands.ab2"
000439B0 <internal_commands.ab2@413> INCLUDE "internal_commands.ab2"
000439B2 <internal_commands.ab2@414> INCLUDE "internal_commands.ab2"
000439BA <internal_commands.ab2@415> INCLUDE "internal_commands.ab2"
000439C7 <internal_commands.ab2@416> INCLUDE "internal_commands.ab2"
000439C8 <internal_commands.ab2@417> INCLUDE "internal_commands.ab2"
000439CC <internal_commands.ab2@420> INCLUDE "internal_commands.ab2"
000439CE <internal_commands.ab2@421> INCLUDE "internal_commands.ab2"
000439D3 <internal_commands.ab2@422> INCLUDE "internal_commands.ab2"
000439D4 <internal_commands.ab2@423> INCLUDE "internal_commands.ab2"
000439D8 <internal_commands.ab2@437> INCLUDE "internal_commands.ab2"
000439DA <internal_commands.ab2@438> INCLUDE "internal_commands.ab2"
000439DF <internal_commands.ab2@439> INCLUDE "internal_commands.ab2"
000439E0 <internal_commands.ab2@440> INCLUDE "internal_commands.ab2"
000439E2 <internal_commands.ab2@443> INCLUDE "internal_commands.ab2"
000439E6 <internal_commands.ab2@444> INCLUDE "internal_commands.ab2"
000439E8 <internal_commands.ab2@445> INCLUDE "internal_commands.ab2"
000439EA <internal_commands.ab2@446> INCLUDE "internal_commands.ab2"
000439EE <internal_commands.ab2@447> INCLUDE "internal_commands.ab2"
000439F0 <internal_commands.ab2@448> INCLUDE "internal_commands.ab2"
000439F4 <internal_commands.ab2@452> INCLUDE "internal_commands.ab2"
000439F6 <internal_commands.ab2@453> INCLUDE "internal_commands.ab2"
000439FA <internal_commands.ab2@454> INCLUDE "internal_commands.ab2"
000439FB <internal_commands.ab2@455> INCLUDE "internal_commands.ab2"
000439FC <internal_commands.ab2@456> INCLUDE "internal_commands.ab2"
000439FE <internal_commands.ab2@458> INCLUDE "internal_commands.ab2"
00043A02 <internal_commands.ab2@459> INCLUDE "internal_commands.ab2"
00043A04 <internal_commands.ab2@460> INCLUDE "internal_commands.ab2"
00043A06 <internal_commands.ab2@461> INCLUDE "internal_commands.ab2"
00043A0A <internal_commands.ab2@462> INCLUDE "internal_commands.ab2"
00043A0C <internal_commands.ab2@463> INCLUDE "internal_commands.ab2"
00043A10 <internal_commands.ab2@467> INCLUDE "internal_commands.ab2"
00043A12 <internal_commands.ab2@468> INCLUDE "internal_commands.ab2"
00043A17 <internal_commands.ab2@469> INCLUDE "internal_commands.ab2"
00043A18 <internal_commands.ab2@470> INCLUDE "internal_commands.ab2"
00043A1A <internal_commands.ab2@473> INCLUDE "internal_commands.ab2"
00043A1E <internal_commands.ab2@474> INCLUDE "internal_commands.ab2"
00043A20 <internal_commands.ab2@475> INCLUDE "internal_commands.ab2"
00043A22 <internal_commands.ab2@476> INCLUDE "internal_commands.ab2"
00043A26 <internal_commands.ab2@477> INCLUDE "internal_commands.ab2"
00043A28 <internal_commands.ab2@478> INCLUDE "internal_commands.ab2"
00043A2C <internal_commands.ab2@482> INCLUDE "internal_commands.ab2"
00043A2E <internal_commands.ab2@483> INCLUDE "internal_commands.ab2"
00043A33 <internal_commands.ab2@484> INCLUDE "internal_commands.ab2"
00043A34 <internal_commands.ab2@485> INCLUDE "internal_commands.ab2"
00043A36 <internal_commands.ab2@488> INCLUDE "internal_commands.ab2"
00043A3A <internal_commands.ab2@489> INCLUDE "internal_commands.ab2"
00043A3C <internal_commands.ab2@490> INCLUDE "internal_commands.ab2"
00043A3E <internal_commands.ab2@491> INCLUDE "internal_commands.ab2"
00043A42 <internal_commands.ab2@492> INCLUDE "internal_commands.ab2"
00043A44 <internal_commands.ab2@493> INCLUDE "internal_commands.ab2"
00043A48 <internal_commands.ab2@497> INCLUDE "internal_commands.ab2"
00043A4A <internal_commands.ab2@498> INCLUDE "internal_commands.ab2"
00043A4F <internal_commands.ab2@499> INCLUDE "internal_commands.ab2"
00043A50 <internal_commands.ab2@500> INCLUDE "internal_commands.ab2"
00043A52 <internal_commands.ab2@503> INCLUDE "internal_commands.ab2"
00043A56 <internal_commands.ab2@504> INCLUDE "internal_commands.ab2"
00043A58 <internal_commands.ab2@505> INCLUDE "internal_commands.ab2"
00043A5A <internal_commands.ab2@506> INCLUDE "internal_commands.ab2"
00043A5E <internal_commands.ab2@507> INCLUDE "internal_commands.ab2"
00043A60 <internal_commands.ab2@508> INCLUDE "internal_commands.ab2"
00043A64 <internal_commands.ab2@512> INCLUDE "internal_commands.ab2"
00043A66 <internal_commands.ab2@513> INCLUDE "internal_commands.ab2"
00043A6B <internal_commands.ab2@514> INCLUDE "internal_commands.ab2"
00043A6C <internal_commands.ab2@515> INCLUDE "internal_commands.ab2"
00043A6E <internal_commands.ab2@518> INCLUDE "internal_commands.ab2"
00043A72 <internal_commands.ab2@519> INCLUDE "internal_commands.ab2"
00043A74 <internal_commands.ab2@520> INCLUDE "internal_commands.ab2"
00043A76 <internal_commands.ab2@521> INCLUDE "internal_commands.ab2"
00043A7A <internal_commands.ab2@522> INCLUDE "internal_commands.ab2"
00043A7C <internal_commands.ab2@523> INCLUDE "internal_commands.ab2"
00043A80 <internal_commands.ab2@527> INCLUDE "internal_commands.ab2"
00043A82 <internal_commands.ab2@528> INCLUDE "internal_commands.ab2"
00043A86 <internal_commands.ab2@529> INCLUDE "internal_commands.ab2"
00043A87 <internal_commands.ab2@530> INCLUDE "internal_commands.ab2"
00043A88 <internal_commands.ab2@531> INCLUDE "internal_commands.ab2"
00043A8A <internal_commands.ab2@533> INCLUDE "internal_commands.ab2"
00043A8E <internal_commands.ab2@534> INCLUDE "internal_commands.ab2"
00043A90 <internal_commands.ab2@535> INCLUDE "internal_commands.ab2"
00043A92 <internal_commands.ab2@536> INCLUDE "internal_commands.ab2"
00043A96 <internal_commands.ab2@537> INCLUDE "internal_commands.ab2"
00043A98 <internal_commands.ab2@538> INCLUDE "internal_commands.ab2"
00043A9C <internal_commands.ab2@542> INCLUDE "internal_commands.ab2"
00043A9E <internal_commands.ab2@543> INCLUDE "internal_commands.ab2"
00043AA3 <internal_commands.ab2@544> INCLUDE "internal_commands.ab2"
00043AA4 <internal_commands.ab2@545> INCLUDE "internal_commands.ab2"
00043AA6 <internal_commands.ab2@548> INCLUDE "internal_commands.ab2"
00043AAA <internal_commands.ab2@549> INCLUDE "internal_commands.ab2"
00043AAC <internal_commands.ab2@550> INCLUDE "internal_commands.ab2"
00043AAE <internal_commands.ab2@551> INCLUDE "internal_commands.ab2"
00043AB2 <internal_commands.ab2@552> INCLUDE "internal_commands.ab2"
00043AB4 <internal_commands.ab2@553> INCLUDE "internal_commands.ab2"
00043AB8 <internal_commands.ab2@557> INCLUDE "internal_commands.ab2"
00043ABA <internal_commands.ab2@558> INCLUDE "internal_commands.ab2"
00043ABE <internal_commands.ab2@559> INCLUDE "internal_commands.ab2"
00043ABF <internal_commands.ab2@560> INCLUDE "internal_commands.ab2"
00043AC0 <internal_commands.ab2@561> INCLUDE "internal_commands.ab2"
00043AC2 <internal_commands.ab2@563> INCLUDE "internal_commands.ab2"
00043AC6 <internal_commands.ab2@564> INCLUDE "internal_commands.ab2"
00043AC8 <internal_commands.ab2@565> INCLUDE "internal_commands.ab2"
00043ACA <internal_commands.ab2@566> INCLUDE "internal_commands.ab2"
00043ACE <internal_commands.ab2@567> INCLUDE "internal_commands.ab2"
00043AD0 <internal_commands.ab2@568> INCLUDE "internal_commands.ab2"
00043AD4 <internal_commands.ab2@572> INCLUDE "internal_commands.ab2"
00043AD6 <internal_commands.ab2@573> INCLUDE "internal_commands.ab2"
00043ADA <internal_commands.ab2@574> INCLUDE "internal_commands.ab2"
00043ADB <internal_commands.ab2@575> INCLUDE "internal_commands.ab2"
00043ADC <internal_commands.ab2@576> INCLUDE "internal_commands.ab2"
00043ADE <internal_commands.ab2@578> INCLUDE "internal_commands.ab2"
00043AE2 <internal_commands.ab2@579> INCLUDE "internal_commands.ab2"
00043AE4 <internal_commands.ab2@580> INCLUDE "internal_commands.ab2"
00043AE6 <internal_commands.ab2@581> INCLUDE "internal_commands.ab2"
00043AEA <internal_commands.ab2@582> INCLUDE "internal_commands.ab2"
00043AEC <internal_commands.ab2@583> INCLUDE "internal_commands.ab2"
00043AF0 <internal_commands.ab2@587> INCLUDE "internal_commands.ab2"
00043AF2 <internal_commands.ab2@588> INCLUDE "internal_commands.ab2"
00043AF6 <internal_commands.ab2@589> INCLUDE "internal_commands.ab2"
00043AF7 <internal_commands.ab2@590> INCLUDE "internal_commands.ab2"
00043AF8 <internal_commands.ab2@591> INCLUDE "internal_commands.ab2"
00043AFA <internal_commands.ab2@593> INCLUDE "internal_commands.ab2"
00043AFE <internal_commands.ab2@594> INCLUDE "internal_commands.ab2"
00043B00 <internal_commands.ab2@595> INCLUDE "internal_commands.ab2"
00043B02 <internal_commands.ab2@596> INCLUDE "internal_commands.ab2"
00043B06 <internal_commands.ab2@597> INCLUDE "internal_commands.ab2"
00043B08 <internal_commands.ab2@598> INCLUDE "internal_commands.ab2"
00043B0C <internal_commands.ab2@602> INCLUDE "internal_commands.ab2"
00043B0E <internal_commands.ab2@603> INCLUDE "internal_commands.ab2"
00043B12 <internal_commands.ab2@604> INCLUDE "internal_commands.ab2"
00043B13 <internal_commands.ab2@605> INCLUDE "internal_commands.ab2"
00043B14 <internal_commands.ab2@606> INCLUDE "internal_commands.ab2"
00043B16 <internal_commands.ab2@608> INCLUDE "internal_commands.ab2"
00043B1A <internal_commands.ab2@609> INCLUDE "internal_commands.ab2"
00043B1C <internal_commands.ab2@610> INCLUDE "internal_commands.ab2"
00043B1E <internal_commands.ab2@611> INCLUDE "internal_commands.ab2"
00043B22 <internal_commands.ab2@612> INCLUDE "internal_commands.ab2"
00043B24 <internal_commands.ab2@613> INCLUDE "internal_commands.ab2"
00043B28 <internal_commands.ab2@617> INCLUDE "internal_commands.ab2"
00043B2A <internal_commands.ab2@618> INCLUDE "internal_commands.ab2"
00043B2E <internal_commands.ab2@619> INCLUDE "internal_commands.ab2"
00043B2F <internal_commands.ab2@620> INCLUDE "internal_commands.ab2"
00043B30 <internal_commands.ab2@621> INCLUDE "internal_commands.ab2"
00043B32 <internal_commands.ab2@623> INCLUDE "internal_commands.ab2"
00043B36 <internal_commands.ab2@624> INCLUDE "internal_commands.ab2"
00043B38 <internal_commands.ab2@625> INCLUDE "internal_commands.ab2"
00043B3A <internal_commands.ab2@626> INCLUDE "internal_commands.ab2"
00043B3E <internal_commands.ab2@627> INCLUDE "internal_commands.ab2"
00043B40 <internal_commands.ab2@628> INCLUDE "internal_commands.ab2"
00043B44 <internal_commands.ab2@632> INCLUDE "internal_commands.ab2"
00043B46 <internal_commands.ab2@633> INCLUDE "internal_commands.ab2"
00043B4A <internal_commands.ab2@634> INCLUDE "internal_commands.ab2"
00043B4B <internal_commands.ab2@635> INCLUDE "internal_commands.ab2"
00043B4C <internal_commands.ab2@636> INCLUDE "internal_commands.ab2"
00043B4E <internal_commands.ab2@638> INCLUDE "internal_commands.ab2"
00043B52 <internal_commands.ab2@639> INCLUDE "internal_commands.ab2"
00043B54 <internal_commands.ab2@640> INCLUDE "internal_commands.ab2"
00043B56 <internal_commands.ab2@641> INCLUDE "internal_commands.ab2"
00043B5A <internal_commands.ab2@642> INCLUDE "internal_commands.ab2"
00043B5C <internal_commands.ab2@643> INCLUDE "internal_commands.ab2"
00043B60 <internal_commands.ab2@647> INCLUDE "internal_commands.ab2"
00043B62 <internal_commands.ab2@648> INCLUDE "internal_commands.ab2"
00043B66 <internal_commands.ab2@649> INCLUDE "internal_commands.ab2"
00043B67 <internal_commands.ab2@650> INCLUDE "internal_commands.ab2"
00043B68 <internal_commands.ab2@651> INCLUDE "internal_commands.ab2"
00043B6A <internal_commands.ab2@653> INCLUDE "internal_commands.ab2"
00043B6E <internal_commands.ab2@654> INCLUDE "internal_commands.ab2"
00043B70 <internal_commands.ab2@655> INCLUDE "internal_commands.ab2"
00043B72 <internal_commands.ab2@656> INCLUDE "internal_commands.ab2"
00043B76 <internal_commands.ab2@657> INCLUDE "internal_commands.ab2"
00043B78 <internal_commands.ab2@658> INCLUDE "internal_commands.ab2"
00043B7C <internal_commands.ab2@662> INCLUDE "internal_commands.ab2"
00043B7E <internal_commands.ab2@663> INCLUDE "internal_commands.ab2"
00043B82 <internal_commands.ab2@664> INCLUDE "internal_commands.ab2"
00043B83 <internal_commands.ab2@665> INCLUDE "internal_commands.ab2"
00043B84 <internal_commands.ab2@666> INCLUDE "internal_commands.ab2"
00043B86 <internal_commands.ab2@668> INCLUDE "internal_commands.ab2"
00043B8A <internal_commands.ab2@669> INCLUDE "internal_commands.ab2"
00043B8C <internal_commands.ab2@670> INCLUDE "internal_commands.ab2"
00043B8E <internal_commands.ab2@671> INCLUDE "internal_commands.ab2"
00043B92 <internal_commands.ab2@672> INCLUDE "internal_commands.ab2"
00043B94 <internal_commands.ab2@673> INCLUDE "internal_commands.ab2"
00043B98 <internal_commands.ab2@677> INCLUDE "internal_commands.ab2"
00043B9A <internal_commands.ab2@678> INCLUDE "internal_commands.ab2"
00043B9E <internal_commands.ab2@679> INCLUDE "internal_commands.ab2"
00043B9F <internal_commands.ab2@680> INCLUDE "internal_commands.ab2"
00043BA0 <internal_commands.ab2@681> INCLUDE "internal_commands.ab2"
00043BA2 <internal_commands.ab2@683> INCLUDE "internal_commands.ab2"
00043BA6 <internal_commands.ab2@684> INCLUDE "internal_commands.ab2"
00043BA8 <internal_commands.ab2@685> INCLUDE "internal_commands.ab2"
00043BAA <internal_commands.ab2@686> INCLUDE "internal_commands.ab2"
00043BAE <internal_commands.ab2@687> INCLUDE "internal_commands.ab2"
00043BB0 <internal_commands.ab2@688> INCLUDE "internal_commands.ab2"
00043BB4 <internal_commands.ab2@692> INCLUDE "internal_commands.ab2"
00043BB6 <internal_commands.ab2@693> INCLUDE "internal_commands.ab2"
00043BBA <internal_commands.ab2@694> INCLUDE "internal_commands.ab2"
00043BBB <internal_commands.ab2@695> INCLUDE "internal_commands.ab2"
00043BBC <internal_commands.ab2@696> INCLUDE "internal_commands.ab2"
00043BBE <internal_commands.ab2@698> INCLUDE "internal_commands.ab2"
00043BC2 <internal_commands.ab2@699> INCLUDE "internal_commands.ab2"
00043BC4 <internal_commands.ab2@700> INCLUDE "internal_commands.ab2"
00043BC6 <internal_commands.ab2@701> INCLUDE "internal_commands.ab2"
00043BCA <internal_commands.ab2@702> INCLUDE "internal_commands.ab2"
00043BCC <internal_commands.ab2@703> INCLUDE "internal_commands.ab2"
00043BD0 <internal_commands.ab2@707> INCLUDE "internal_commands.ab2"
00043BD2 <internal_commands.ab2@708> INCLUDE "internal_commands.ab2"
00043BD6 <internal_commands.ab2@709> INCLUDE "internal_commands.ab2"
00043BD7 <internal_commands.ab2@710> INCLUDE "internal_commands.ab2"
00043BD8 <internal_commands.ab2@711> INCLUDE "internal_commands.ab2"
00043BDA <internal_commands.ab2@713> INCLUDE "internal_commands.ab2"
00043BDE <internal_commands.ab2@714> INCLUDE "internal_commands.ab2"
00043BE0 <internal_commands.ab2@715> INCLUDE "internal_commands.ab2"
00043BE2 <internal_commands.ab2@716> INCLUDE "internal_commands.ab2"
00043BE6 <internal_commands.ab2@717> INCLUDE "internal_commands.ab2"
00043BE8 <internal_commands.ab2@718> INCLUDE "internal_commands.ab2"
00043BEC <internal_commands.ab2@722> INCLUDE "internal_commands.ab2"
00043BEE <internal_commands.ab2@723> INCLUDE "internal_commands.ab2"
00043BF2 <internal_commands.ab2@724> INCLUDE "internal_commands.ab2"
00043BF3 <internal_commands.ab2@725> INCLUDE "internal_commands.ab2"
00043BF4 <internal_commands.ab2@726> INCLUDE "internal_commands.ab2"
00043BF6 <internal_commands.ab2@728> INCLUDE "internal_commands.ab2"
00043BFA <internal_commands.ab2@729> INCLUDE "internal_commands.ab2"
00043BFC <internal_commands.ab2@730> INCLUDE "internal_commands.ab2"
00043BFE <internal_commands.ab2@731> INCLUDE "internal_commands.ab2"
00043C02 <internal_commands.ab2@732> INCLUDE "internal_commands.ab2"
00043C04 <internal_commands.ab2@733> INCLUDE "internal_commands.ab2"
00043C08 <internal_commands.ab2@737> INCLUDE "internal_commands.ab2"
00043C0A <internal_commands.ab2@738> INCLUDE "internal_commands.ab2"
00043C0E <internal_commands.ab2@739> INCLUDE "internal_commands.ab2"
00043C0F <internal_commands.ab2@740> INCLUDE "internal_commands.ab2"
00043C10 <internal_commands.ab2@741> INCLUDE "internal_commands.ab2"
00043C12 <internal_commands.ab2@743> INCLUDE "internal_commands.ab2"
00043C16 <internal_commands.ab2@744> INCLUDE "internal_commands.ab2"
00043C18 <internal_commands.ab2@745> INCLUDE "internal_commands.ab2"
00043C1A <internal_commands.ab2@746> INCLUDE "internal_commands.ab2"
00043C1E <internal_commands.ab2@747> INCLUDE "internal_commands.ab2"
00043C20 <internal_commands.ab2@748> INCLUDE "internal_commands.ab2"
00043C24 <internal_commands.ab2@752> INCLUDE "internal_commands.ab2"
00043C26 <internal_commands.ab2@753> INCLUDE "internal_commands.ab2"
00043C2A <internal_commands.ab2@754> INCLUDE "internal_commands.ab2"
00043C2B <internal_commands.ab2@755> INCLUDE "internal_commands.ab2"
00043C2C <internal_commands.ab2@756> INCLUDE "internal_commands.ab2"
00043C2E <internal_commands.ab2@758> INCLUDE "internal_commands.ab2"
00043C32 <internal_commands.ab2@759> INCLUDE "internal_commands.ab2"
00043C34 <internal_commands.ab2@760> INCLUDE "internal_commands.ab2"
00043C36 <internal_commands.ab2@761> INCLUDE "internal_commands.ab2"
00043C3A <internal_commands.ab2@762> INCLUDE "internal_commands.ab2"
00043C3C <internal_commands.ab2@763> INCLUDE "internal_commands.ab2"
00043C40 <internal_commands.ab2@767> INCLUDE "internal_commands.ab2"
00043C42 <internal_commands.ab2@768> INCLUDE "internal_commands.ab2"
00043C46 <internal_commands.ab2@769> INCLUDE "internal_commands.ab2"
00043C47 <internal_commands.ab2@770> INCLUDE "internal_commands.ab2"
00043C48 <internal_commands.ab2@771> INCLUDE "internal_commands.ab2"
00043C4A <internal_commands.ab2@773> INCLUDE "internal_commands.ab2"
00043C4E <internal_commands.ab2@774> INCLUDE "internal_commands.ab2"
00043C50 <internal_commands.ab2@775> INCLUDE "internal_commands.ab2"
00043C52 <internal_commands.ab2@776> INCLUDE "internal_commands.ab2"
00043C56 <internal_commands.ab2@777> INCLUDE "internal_commands.ab2"
00043C58 <internal_commands.ab2@778> INCLUDE "internal_commands.ab2"
00043C5C <internal_commands.ab2@782> INCLUDE "internal_commands.ab2"
00043C5E <internal_commands.ab2@783> INCLUDE "internal_commands.ab2"
00043C62 <internal_commands.ab2@784> INCLUDE "internal_commands.ab2"
00043C63 <internal_commands.ab2@785> INCLUDE "internal_commands.ab2"
00043C64 <internal_commands.ab2@786> INCLUDE "internal_commands.ab2"
00043C66 <internal_commands.ab2@788> INCLUDE "internal_commands.ab2"
00043C6A <internal_commands.ab2@789> INCLUDE "internal_commands.ab2"
00043C6C <internal_commands.ab2@790> INCLUDE "internal_commands.ab2"
00043C6E <internal_commands.ab2@791> INCLUDE "internal_commands.ab2"
00043C72 <internal_commands.ab2@792> INCLUDE "internal_commands.ab2"
00043C74 <internal_commands.ab2@793> INCLUDE "internal_commands.ab2"
00043C78 <internal_commands.ab2@797> INCLUDE "internal_commands.ab2"
00043C7A <internal_commands.ab2@798> INCLUDE "internal_commands.ab2"
00043C7F <internal_commands.ab2@799> INCLUDE "internal_commands.ab2"
00043C80 <internal_commands.ab2@800> INCLUDE "internal_commands.ab2"
00043C82 <internal_commands.ab2@803> INCLUDE "internal_commands.ab2"
00043C86 <internal_commands.ab2@804> INCLUDE "internal_commands.ab2"
00043C88 <internal_commands.ab2@805> INCLUDE "internal_commands.ab2"
00043C8A <internal_commands.ab2@806> INCLUDE "internal_commands.ab2"
00043C8E <internal_commands.ab2@807> INCLUDE "internal_commands.ab2"
00043C90 <internal_commands.ab2@808> INCLUDE "internal_commands.ab2"
00043C94 <internal_commands.ab2@812> INCLUDE "internal_commands.ab2"
00043C96 <internal_commands.ab2@813> INCLUDE "internal_commands.ab2"
00043C9B <internal_commands.ab2@814> INCLUDE "internal_commands.ab2"
00043C9C <internal_commands.ab2@815> INCLUDE "internal_commands.ab2"
00043C9E <internal_commands.ab2@818> INCLUDE "internal_commands.ab2"
00043CA2 <internal_commands.ab2@819> INCLUDE "internal_commands.ab2"
00043CA4 <internal_commands.ab2@820> INCLUDE "internal_commands.ab2"
00043CA6 <internal_commands.ab2@821> INCLUDE "internal_commands.ab2"
00043CAA <internal_commands.ab2@822> INCLUDE "internal_commands.ab2"
00043CAC <internal_commands.ab2@823> INCLUDE "internal_commands.ab2"
00043CB0 <internal_commands.ab2@827> INCLUDE "internal_commands.ab2"
00043CB2 <internal_commands.ab2@828> INCLUDE "internal_commands.ab2"
00043CB7 <internal_commands.ab2@829> INCLUDE "internal_commands.ab2"
00043CB8 <internal_commands.ab2@830> INCLUDE "internal_commands.ab2"
00043CBA <internal_commands.ab2@833> INCLUDE "internal_commands.ab2"
00043CBE <internal_commands.ab2@834> INCLUDE "internal_commands.ab2"
00043CC0 <internal_commands.ab2@835> INCLUDE "internal_commands.ab2"
00043CC2 <internal_commands.ab2@836> INCLUDE "internal_commands.ab2"
00043CC6 <internal_commands.ab2@837> INCLUDE "internal_commands.ab2"
00043CC8 <internal_commands.ab2@838> INCLUDE "internal_commands.ab2"
00043CCC <internal_commands.ab2@842> INCLUDE "internal_commands.ab2"
00043CCE <internal_commands.ab2@843> INCLUDE "internal_commands.ab2"
00043CD3 <internal_commands.ab2@844> INCLUDE "internal_commands.ab2"
00043CD4 <internal_commands.ab2@845> INCLUDE "internal_commands.ab2"
00043CD6 <internal_commands.ab2@848> INCLUDE "internal_commands.ab2"
00043CDA <internal_commands.ab2@849> INCLUDE "internal_commands.ab2"
00043CDC <internal_commands.ab2@850> INCLUDE "internal_commands.ab2"
00043CDE <internal_commands.ab2@851> INCLUDE "internal_commands.ab2"
00043CE2 <internal_commands.ab2@852> INCLUDE "internal_commands.ab2"
00043CE4 <internal_commands.ab2@853> INCLUDE "internal_commands.ab2"
00043CE8 <internal_commands.ab2@857> INCLUDE "internal_commands.ab2"
00043CEA <internal_commands.ab2@858> INCLUDE "internal_commands.ab2"
00043CEE <internal_commands.ab2@859> INCLUDE "internal_commands.ab2"
00043CEF <internal_commands.ab2@860> INCLUDE "internal_commands.ab2"
00043CF0 <internal_commands.ab2@861> INCLUDE "internal_commands.ab2"
00043CF2 <internal_commands.ab2@863> INCLUDE "internal_commands.ab2"
00043CF6 <internal_commands.ab2@864> INCLUDE "internal_commands.ab2"
00043CF8 <internal_commands.ab2@865> INCLUDE "internal_commands.ab2"
00043CFA <internal_commands.ab2@866> INCLUDE "internal_commands.ab2"
00043CFE <internal_commands.ab2@867> INCLUDE "internal_commands.ab2"
00043D00 <internal_commands.ab2@868> INCLUDE "internal_commands.ab2"
00043D04 <internal_commands.ab2@872> INCLUDE "internal_commands.ab2"
00043D06 <internal_commands.ab2@873> INCLUDE "internal_commands.ab2"
00043D0A <internal_commands.ab2@874> INCLUDE "internal_commands.ab2"
00043D0B <internal_commands.ab2@875> INCLUDE "internal_commands.ab2"
00043D0C <internal_commands.ab2@876> INCLUDE "internal_commands.ab2"
00043D0E <internal_commands.ab2@878> INCLUDE "internal_commands.ab2"
00043D12 <internal_commands.ab2@879> INCLUDE "internal_commands.ab2"
00043D14 <internal_commands.ab2@880> INCLUDE "internal_commands.ab2"
00043D16 <internal_commands.ab2@881> INCLUDE "internal_commands.ab2"
00043D1A <internal_commands.ab2@882> INCLUDE "internal_commands.ab2"
00043D1C <internal_commands.ab2@883> INCLUDE "internal_commands.ab2"
00043D20 <internal_commands.ab2@887> INCLUDE "internal_commands.ab2"
00043D22 <internal_commands.ab2@888> INCLUDE "internal_commands.ab2"
00043D26 <internal_commands.ab2@889> INCLUDE "internal_commands.ab2"
00043D27 <internal_commands.ab2@890> INCLUDE "internal_commands.ab2"
00043D28 <internal_commands.ab2@891> INCLUDE "internal_commands.ab2"
00043D2A <internal_commands.ab2@893> INCLUDE "internal_commands.ab2"
00043D2E <internal_commands.ab2@894> INCLUDE "internal_commands.ab2"
00043D30 <internal_commands.ab2@895> INCLUDE "internal_commands.ab2"
00043D32 <internal_commands.ab2@896> INCLUDE "internal_commands.ab2"
00043D36 <internal_commands.ab2@897> INCLUDE "internal_commands.ab2"
00043D38 <internal_commands.ab2@898> INCLUDE "internal_commands.ab2"
00043D3C <internal_commands.ab2@902> INCLUDE "internal_commands.ab2"
00043D3E <internal_commands.ab2@903> INCLUDE "internal_commands.ab2"
00043D42 <internal_commands.ab2@904> INCLUDE "internal_commands.ab2"
00043D43 <internal_commands.ab2@905> INCLUDE "internal_commands.ab2"
00043D44 <internal_commands.ab2@906> INCLUDE "internal_commands.ab2"
00043D46 <internal_commands.ab2@908> INCLUDE "internal_commands.ab2"
00043D4A <internal_commands.ab2@909> INCLUDE "internal_commands.ab2"
00043D4C <internal_commands.ab2@910> INCLUDE "internal_commands.ab2"
00043D4E <internal_commands.ab2@911> INCLUDE "internal_commands.ab2"
00043D52 <internal_commands.ab2@912> INCLUDE "internal_commands.ab2"
00043D54 <internal_commands.ab2@913> INCLUDE "internal_commands.ab2"
00043D58 <internal_commands.ab2@917> INCLUDE "internal_commands.ab2"
00043D5A <internal_commands.ab2@918> INCLUDE "internal_commands.ab2"
00043D5E <internal_commands.ab2@919> INCLUDE "internal_commands.ab2"
00043D5F <internal_commands.ab2@920> INCLUDE "internal_commands.ab2"
00043D60 <internal_commands.ab2@921> INCLUDE "internal_commands.ab2"
00043D62 <internal_commands.ab2@923> INCLUDE "internal_commands.ab2"
00043D66 <internal_commands.ab2@924> INCLUDE "internal_commands.ab2"
00043D68 <internal_commands.ab2@925> INCLUDE "internal_commands.ab2"
00043D6A <internal_commands.ab2@926> INCLUDE "internal_commands.ab2"
00043D6E <internal_commands.ab2@927> INCLUDE "internal_commands.ab2"
00043D70 <internal_commands.ab2@928> INCLUDE "internal_commands.ab2"
00043D74 <internal_commands.ab2@932> INCLUDE "internal_commands.ab2"
00043D76 <internal_commands.ab2@933> INCLUDE "internal_commands.ab2"
00043D7B <internal_commands.ab2@934> INCLUDE "internal_commands.ab2"
00043D7C <internal_commands.ab2@935> INCLUDE "internal_commands.ab2"
00043D7E <internal_commands.ab2@938> INCLUDE "internal_commands.ab2"
00043D82 <internal_commands.ab2@939> INCLUDE "internal_commands.ab2"
00043D84 <internal_commands.ab2@940> INCLUDE "internal_commands.ab2"
00043D86 <internal_commands.ab2@941> INCLUDE "internal_commands.ab2"
00043D8A <internal_commands.ab2@942> INCLUDE "internal_commands.ab2"
00043D8C <internal_commands.ab2@943> INCLUDE "internal_commands.ab2"
00043D90 <internal_commands.ab2@947> INCLUDE "internal_commands.ab2"
00043D92 <internal_commands.ab2@948> INCLUDE "internal_commands.ab2"
00043D97 <internal_commands.ab2@949> INCLUDE "internal_commands.ab2"
00043D98 <internal_commands.ab2@950> INCLUDE "internal_commands.ab2"
00043D9A <internal_commands.ab2@953> INCLUDE "internal_commands.ab2"
00043D9E <internal_commands.ab2@954> INCLUDE "internal_commands.ab2"
00043DA0 <internal_commands.ab2@955> INCLUDE "internal_commands.ab2"
00043DA2 <internal_commands.ab2@956> INCLUDE "internal_commands.ab2"
00043DA6 <internal_commands.ab2@957> INCLUDE "internal_commands.ab2"
00043DA8 <internal_commands.ab2@958> INCLUDE "internal_commands.ab2"
00043DAC <internal_commands.ab2@962> INCLUDE "internal_commands.ab2"
00043DAE <internal_commands.ab2@963> INCLUDE "internal_commands.ab2"
00043DB3 <internal_commands.ab2@964> INCLUDE "internal_commands.ab2"
00043DB4 <internal_commands.ab2@965> INCLUDE "internal_commands.ab2"
00043DB6 <internal_commands.ab2@968> INCLUDE "internal_commands.ab2"
00043DBA <internal_commands.ab2@969> INCLUDE "internal_commands.ab2"
00043DBC <internal_commands.ab2@970> INCLUDE "internal_commands.ab2"
00043DBE <internal_commands.ab2@971> INCLUDE "internal_commands.ab2"
00043DC2 <internal_commands.ab2@972> INCLUDE "internal_commands.ab2"
00043DC4 <internal_commands.ab2@973> INCLUDE "internal_commands.ab2"
00043DC8 <internal_commands.ab2@977> INCLUDE "internal_commands.ab2"
00043DCA <internal_commands.ab2@978> INCLUDE "internal_commands.ab2"
00043DCF <internal_commands.ab2@979> INCLUDE "internal_commands.ab2"
00043DD0 <internal_commands.ab2@980> INCLUDE "internal_commands.ab2"
00043DD2 <internal_commands.ab2@983> INCLUDE "internal_commands.ab2"
00043DD6 <internal_commands.ab2@984> INCLUDE "internal_commands.ab2"
00043DD8 <internal_commands.ab2@985> INCLUDE "internal_commands.ab2"
00043DDA <internal_commands.ab2@986> INCLUDE "internal_commands.ab2"
00043DDE <internal_commands.ab2@987> INCLUDE "internal_commands.ab2"
00043DE0 <internal_commands.ab2@988> INCLUDE "internal_commands.ab2"
00043DE4 <internal_commands.ab2@992> INCLUDE "internal_commands.ab2"
00043DE6 <internal_commands.ab2@993> INCLUDE "internal_commands.ab2"
00043DEB <internal_commands.ab2@994> INCLUDE "internal_commands.ab2"
00043DEC <internal_commands.ab2@995> INCLUDE "internal_commands.ab2"
00043DEE <internal_commands.ab2@998> INCLUDE "internal_commands.ab2"
00043DF2 <internal_commands.ab2@999> INCLUDE "internal_commands.ab2"
00043DF4 <internal_commands.ab2@1000> INCLUDE "internal_commands.ab2"
00043DF6 <internal_commands.ab2@1001> INCLUDE "internal_commands.ab2"
00043DFA <internal_commands.ab2@1002> INCLUDE "internal_commands.ab2"
00043DFC <internal_commands.ab2@1003> INCLUDE "internal_commands.ab2"
00043E00 <internal_commands.ab2@1007> INCLUDE "internal_commands.ab2"
00043E02 <internal_commands.ab2@1008> INCLUDE "internal_commands.ab2"
00043E07 <internal_commands.ab2@1009> INCLUDE "internal_commands.ab2"
00043E08 <internal_commands.ab2@1010> INCLUDE "internal_commands.ab2"
00043E0A <internal_commands.ab2@1013> INCLUDE "internal_commands.ab2"
00043E0E <internal_commands.ab2@1014> INCLUDE "internal_commands.ab2"
00043E10 <internal_commands.ab2@1015> INCLUDE "internal_commands.ab2"
00043E12 <internal_commands.ab2@1016> INCLUDE "internal_commands.ab2"
00043E16 <internal_commands.ab2@1017> INCLUDE "internal_commands.ab2"
00043E18 <internal_commands.ab2@1018> INCLUDE "internal_commands.ab2"
00043E1C <internal_commands.ab2@1022> INCLUDE "internal_commands.ab2"
00043E1E <internal_commands.ab2@1023> INCLUDE "internal_commands.ab2"
00043E23 <internal_commands.ab2@1024> INCLUDE "internal_commands.ab2"
00043E24 <internal_commands.ab2@1025> INCLUDE "internal_commands.ab2"
00043E26 <internal_commands.ab2@1028> INCLUDE "internal_commands.ab2"
00043E2A <internal_commands.ab2@1029> INCLUDE "internal_commands.ab2"
00043E2C <internal_commands.ab2@1030> INCLUDE "internal_commands.ab2"
00043E2E <internal_commands.ab2@1031> INCLUDE "internal_commands.ab2"
00043E32 <internal_commands.ab2@1032> INCLUDE "internal_commands.ab2"
00043E34 <internal_commands.ab2@1033> INCLUDE "internal_commands.ab2"
00043E38 <internal_commands.ab2@1037> INCLUDE "internal_commands.ab2"
00043E3A <internal_commands.ab2@1038> INCLUDE "internal_commands.ab2"
00043E3F <internal_commands.ab2@1039> INCLUDE "internal_commands.ab2"
00043E40 <internal_commands.ab2@1040> INCLUDE "internal_commands.ab2"
00043E42 <internal_commands.ab2@1043> INCLUDE "internal_commands.ab2"
00043E46 <internal_commands.ab2@1044> INCLUDE "internal_commands.ab2"
00043E48 <internal_commands.ab2@1045> INCLUDE "internal_commands.ab2"
00043E4A <internal_commands.ab2@1046> INCLUDE "internal_commands.ab2"
00043E4E <internal_commands.ab2@1047> INCLUDE "internal_commands.ab2"
00043E50 <internal_commands.ab2@1048> INCLUDE "internal_commands.ab2"
00043E54 <internal_commands.ab2@1052> INCLUDE "internal_commands.ab2"
00043E56 <internal_commands.ab2@1053> INCLUDE "internal_commands.ab2"
00043E5B <internal_commands.ab2@1054> INCLUDE "internal_commands.ab2"
00043E5C <internal_commands.ab2@1055> INCLUDE "internal_commands.ab2"
00043E5E <internal_commands.ab2@1058> INCLUDE "internal_commands.ab2"
00043E62 <internal_commands.ab2@1059> INCLUDE "internal_commands.ab2"
00043E64 <internal_commands.ab2@1060> INCLUDE "internal_commands.ab2"
00043E66 <internal_commands.ab2@1061> INCLUDE "internal_commands.ab2"
00043E6A <internal_commands.ab2@1062> INCLUDE "internal_commands.ab2"
00043E6C <internal_commands.ab2@1063> INCLUDE "internal_commands.ab2"
00043E70 <internal_commands.ab2@1067> INCLUDE "internal_commands.ab2"
00043E72 <internal_commands.ab2@1068> INCLUDE "internal_commands.ab2"
00043E77 <internal_commands.ab2@1069> INCLUDE "internal_commands.ab2"
00043E78 <internal_commands.ab2@1070> INCLUDE "internal_commands.ab2"
00043E7A <internal_commands.ab2@1073> INCLUDE "internal_commands.ab2"
00043E7E <internal_commands.ab2@1074> INCLUDE "internal_commands.ab2"
00043E80 <internal_commands.ab2@1075> INCLUDE "internal_commands.ab2"
00043E82 <internal_commands.ab2@1076> INCLUDE "internal_commands.ab2"
00043E86 <internal_commands.ab2@1077> INCLUDE "internal_commands.ab2"
00043E88 <internal_commands.ab2@1078> INCLUDE "internal_commands.ab2"
00043E8C <internal_commands.ab2@1082> INCLUDE "internal_commands.ab2"
00043E8E <internal_commands.ab2@1083> INCLUDE "internal_commands.ab2"
00043E93 <internal_commands.ab2@1084> INCLUDE "internal_commands.ab2"
00043E94 <internal_commands.ab2@1085> INCLUDE "internal_commands.ab2"
00043E96 <internal_commands.ab2@1088> INCLUDE "internal_commands.ab2"
00043E9A <internal_commands.ab2@1089> INCLUDE "internal_commands.ab2"
00043E9C <internal_commands.ab2@1090> INCLUDE "internal_commands.ab2"
00043E9E <internal_commands.ab2@1091> INCLUDE "internal_commands.ab2"
00043EA2 <internal_commands.ab2@1092> INCLUDE "internal_commands.ab2"
00043EA4 <internal_commands.ab2@1093> INCLUDE "internal_commands.ab2"
00043EA8 <internal_commands.ab2@1097> INCLUDE "internal_commands.ab2"
00043EAA <internal_commands.ab2@1098> INCLUDE "internal_commands.ab2"
00043EAF <internal_commands.ab2@1099> INCLUDE "internal_commands.ab2"
00043EB0 <internal_commands.ab2@1100> INCLUDE "internal_commands.ab2"
00043EB2 <internal_commands.ab2@1103> INCLUDE "internal_commands.ab2"
00043EB6 <internal_commands.ab2@1104> INCLUDE "internal_commands.ab2"
00043EB8 <internal_commands.ab2@1105> INCLUDE "internal_commands.ab2"
00043EBA <internal_commands.ab2@1106> INCLUDE "internal_commands.ab2"
00043EBE <internal_commands.ab2@1107> INCLUDE "internal_commands.ab2"
00043EC0 <internal_commands.ab2@1108> INCLUDE "internal_commands.ab2"
00043EC4 <internal_commands.ab2@1112> INCLUDE "internal_commands.ab2"
00043EC6 <internal_commands.ab2@1113> INCLUDE "internal_commands.ab2"
00043ECB <internal_commands.ab2@1114> INCLUDE "internal_commands.ab2"
00043ECC <internal_commands.ab2@1115> INCLUDE "internal_commands.ab2"
00043ECE <internal_commands.ab2@1118> INCLUDE "internal_commands.ab2"
00043ED2 <internal_commands.ab2@1119> INCLUDE "internal_commands.ab2"
00043ED4 <internal_commands.ab2@1120> INCLUDE "internal_commands.ab2"
00043ED6 <internal_commands.ab2@1121> INCLUDE "internal_commands.ab2"
00043EDA <internal_commands.ab2@1122> INCLUDE "internal_commands.ab2"
00043EDC <internal_commands.ab2@1123> INCLUDE "internal_commands.ab2"
00043EE0 <internal_commands.ab2@1127> INCLUDE "internal_commands.ab2"
00043EE2 <internal_commands.ab2@1128> INCLUDE "internal_commands.ab2"
00043EE7 <internal_commands.ab2@1129> INCLUDE "internal_commands.ab2"
00043EE8 <internal_commands.ab2@1130> INCLUDE "internal_commands.ab2"
00043EEA <internal_commands.ab2@1133> INCLUDE "internal_commands.ab2"
00043EEE <internal_commands.ab2@1134> INCLUDE "internal_commands.ab2"
00043EF0 <internal_commands.ab2@1135> INCLUDE "internal_commands.ab2"
00043EF2 <internal_commands.ab2@1136> INCLUDE "internal_commands.ab2"
00043EF6 <internal_commands.ab2@1137> INCLUDE "internal_commands.ab2"
00043EF8 <internal_commands.ab2@1138> INCLUDE "internal_commands.ab2"
00043EFC <internal_commands.ab2@1142> INCLUDE "internal_commands.ab2"
00043EFE <internal_commands.ab2@1143> INCLUDE "internal_commands.ab2"
00043F03 <internal_commands.ab2@1144> INCLUDE "internal_commands.ab2"
00043F04 <internal_commands.ab2@1145> INCLUDE "internal_commands.ab2"
00043F06 <internal_commands.ab2@1148> INCLUDE "internal_commands.ab2"
00043F0A <internal_commands.ab2@1149> INCLUDE "internal_commands.ab2"
00043F0C <internal_commands.ab2@1150> INCLUDE "internal_commands.ab2"
00043F0E <internal_commands.ab2@1151> INCLUDE "internal_commands.ab2"
00043F12 <internal_commands.ab2@1152> INCLUDE "internal_commands.ab2"
00043F14 <internal_commands.ab2@1153> INCLUDE "internal_commands.ab2"
00043F18 <internal_commands.ab2@1157> INCLUDE "internal_commands.ab2"
00043F1A <internal_commands.ab2@1158> INCLUDE "internal_commands.ab2"
00043F1F <internal_commands.ab2@1159> INCLUDE "internal_commands.ab2"
00043F20 <internal_commands.ab2@1160> INCLUDE "internal_commands.ab2"
00043F22 <internal_commands.ab2@1163> INCLUDE "internal_commands.ab2"
00043F26 <internal_commands.ab2@1164> INCLUDE "internal_commands.ab2"
00043F28 <internal_commands.ab2@1165> INCLUDE "internal_commands.ab2"
00043F2A <internal_commands.ab2@1166> INCLUDE "internal_commands.ab2"
00043F2E <internal_commands.ab2@1167> INCLUDE "internal_commands.ab2"
00043F30 <internal_commands.ab2@1168> INCLUDE "internal_commands.ab2"
00043F34 <internal_commands.ab2@1172> INCLUDE "internal_commands.ab2"
00043F36 <internal_commands.ab2@1173> INCLUDE "internal_commands.ab2"
00043F3B <internal_commands.ab2@1174> INCLUDE "internal_commands.ab2"
00043F3C <internal_commands.ab2@1175> INCLUDE "internal_commands.ab2"
00043F3E <internal_commands.ab2@1178> INCLUDE "internal_commands.ab2"
00043F42 <internal_commands.ab2@1179> INCLUDE "internal_commands.ab2"
00043F44 <internal_commands.ab2@1180> INCLUDE "internal_commands.ab2"
00043F46 <internal_commands.ab2@1181> INCLUDE "internal_commands.ab2"
00043F4A <internal_commands.ab2@1182> INCLUDE "internal_commands.ab2"
00043F4C <internal_commands.ab2@1183> INCLUDE "internal_commands.ab2"
00043F50 <internal_commands.ab2@1186> INCLUDE "internal_commands.ab2"
00043F52 <internal_commands.ab2@1187> INCLUDE "internal_commands.ab2"
00043F56 <internal_commands.ab2@1188> INCLUDE "internal_commands.ab2"
00043F57 <internal_commands.ab2@1189> INCLUDE "internal_commands.ab2"
00043F58 <internal_commands.ab2@1190> INCLUDE "internal_commands.ab2"
00043F5A <internal_commands.ab2@1192> INCLUDE "internal_commands.ab2"
00043F5E <internal_commands.ab2@1193> INCLUDE "internal_commands.ab2"
00043F60 <internal_commands.ab2@1194> INCLUDE "internal_commands.ab2"
00043F62 <internal_commands.ab2@1195> INCLUDE "internal_commands.ab2"
00043F66 <internal_commands.ab2@1196> INCLUDE "internal_commands.ab2"
00043F68 <internal_commands.ab2@1197> INCLUDE "internal_commands.ab2"
00043F6C <internal_commands.ab2@1201> INCLUDE "internal_commands.ab2"
00043F6E <internal_commands.ab2@1202> INCLUDE "internal_commands.ab2"
00043F73 <internal_commands.ab2@1203> INCLUDE "internal_commands.ab2"
00043F74 <internal_commands.ab2@1204> INCLUDE "internal_commands.ab2"
00043F76 <internal_commands.ab2@1207> INCLUDE "internal_commands.ab2"
00043F7A <internal_commands.ab2@1208> INCLUDE "internal_commands.ab2"
00043F7C <internal_commands.ab2@1209> INCLUDE "internal_commands.ab2"
00043F7E <internal_commands.ab2@1210> INCLUDE "internal_commands.ab2"
00043F82 <internal_commands.ab2@1211> INCLUDE "internal_commands.ab2"
00043F84 <internal_commands.ab2@1212> INCLUDE "internal_commands.ab2"
00043F88 <internal_commands.ab2@1216> INCLUDE "internal_commands.ab2"
00043F8A <internal_commands.ab2@1217> INCLUDE "internal_commands.ab2"
00043F8E <internal_commands.ab2@1218> INCLUDE "internal_commands.ab2"
00043F8F <internal_commands.ab2@1219> INCLUDE "internal_commands.ab2"
00043F90 <internal_commands.ab2@1220> INCLUDE "internal_commands.ab2"
00043F92 <internal_commands.ab2@1222> INCLUDE "internal_commands.ab2"
00043F96 <internal_commands.ab2@1223> INCLUDE "internal_commands.ab2"
00043F98 <internal_commands.ab2@1224> INCLUDE "internal_commands.ab2"
00043F9A <internal_commands.ab2@1225> INCLUDE "internal_commands.ab2"
00043F9E <internal_commands.ab2@1226> INCLUDE "internal_commands.ab2"
00043FA0 <internal_commands.ab2@1227> INCLUDE "internal_commands.ab2"
00043FA4 <internal_commands.ab2@1231> INCLUDE "internal_commands.ab2"
00043FA6 <internal_commands.ab2@1232> INCLUDE "internal_commands.ab2"
00043FAB <internal_commands.ab2@1233> INCLUDE "internal_commands.ab2"
00043FAC <internal_commands.ab2@1234> INCLUDE "internal_commands.ab2"
00043FAE <internal_commands.ab2@1237> INCLUDE "internal_commands.ab2"
00043FB2 <internal_commands.ab2@1238> INCLUDE "internal_commands.ab2"
00043FB4 <internal_commands.ab2@1239> INCLUDE "internal_commands.ab2"
00043FB6 <internal_commands.ab2@1240> INCLUDE "internal_commands.ab2"
00043FBA <internal_commands.ab2@1241> INCLUDE "internal_commands.ab2"
00043FBC <internal_commands.ab2@1242> INCLUDE "internal_commands.ab2"
00043FC0 <internal_commands.ab2@1246> INCLUDE "internal_commands.ab2"
00043FC2 <internal_commands.ab2@1247> INCLUDE "internal_commands.ab2"
00043FC7 <internal_commands.ab2@1248> INCLUDE "internal_commands.ab2"
00043FC8 <internal_commands.ab2@1249> INCLUDE "internal_commands.ab2"
00043FCA <internal_commands.ab2@1252> INCLUDE "internal_commands.ab2"
00043FCE <internal_commands.ab2@1253> INCLUDE "internal_commands.ab2"
00043FD0 <internal_commands.ab2@1254> INCLUDE "internal_commands.ab2"
00043FD2 <internal_commands.ab2@1255> INCLUDE "internal_commands.ab2"
00043FD6 <internal_commands.ab2@1256> INCLUDE "internal_commands.ab2"
00043FD8 <internal_commands.ab2@1257> INCLUDE "internal_commands.ab2"
00043FDC <internal_commands.ab2@1261> INCLUDE "internal_commands.ab2"
00043FDE <internal_commands.ab2@1262> INCLUDE "internal_commands.ab2"
00043FE2 <internal_commands.ab2@1263> INCLUDE "internal_commands.ab2"
00043FE3 <internal_commands.ab2@1264> INCLUDE "internal_commands.ab2"
00043FE4 <internal_commands.ab2@1265> INCLUDE "internal_commands.ab2"
00043FE6 <internal_commands.ab2@1267> INCLUDE "internal_commands.ab2"
00043FEA <internal_commands.ab2@1268> INCLUDE "internal_commands.ab2"
00043FEC <internal_commands.ab2@1269> INCLUDE "internal_commands.ab2"
00043FEE <internal_commands.ab2@1270> INCLUDE "internal_commands.ab2"
00043FF2 <internal_commands.ab2@1271> INCLUDE "internal_commands.ab2"
00043FF4 <internal_commands.ab2@1272> INCLUDE "internal_commands.ab2"
00043FF8 <internal_commands.ab2@1276> INCLUDE "internal_commands.ab2"
00043FFA <internal_commands.ab2@1277> INCLUDE "internal_commands.ab2"
00043FFF <internal_commands.ab2@1278> INCLUDE "internal_commands.ab2"
00044000 <internal_commands.ab2@1279> INCLUDE "internal_commands.ab2"
00044002 <internal_commands.ab2@1282> INCLUDE "internal_commands.ab2"
00044006 <internal_commands.ab2@1283> INCLUDE "internal_commands.ab2"
00044008 <internal_commands.ab2@1284> INCLUDE "internal_commands.ab2"
0004400A <internal_commands.ab2@1285> INCLUDE "internal_commands.ab2"
0004400E <internal_commands.ab2@1286> INCLUDE "internal_commands.ab2"
00044010 <internal_commands.ab2@1287> INCLUDE "internal_commands.ab2"
00044014 <internal_commands.ab2@1291> INCLUDE "internal_commands.ab2"
00044016 <internal_commands.ab2@1292> INCLUDE "internal_commands.ab2"
0004401A <internal_commands.ab2@1293> INCLUDE "internal_commands.ab2"
0004401B <internal_commands.ab2@1294> INCLUDE "internal_commands.ab2"
0004401C <internal_commands.ab2@1295> INCLUDE "internal_commands.ab2"
0004401E <internal_commands.ab2@1297> INCLUDE "internal_commands.ab2"
00044022 <internal_commands.ab2@1298> INCLUDE "internal_commands.ab2"
00044024 <internal_commands.ab2@1299> INCLUDE "internal_commands.ab2"
00044026 <internal_commands.ab2@1300> INCLUDE "internal_commands.ab2"
0004402A <internal_commands.ab2@1301> INCLUDE "internal_commands.ab2"
0004402C <internal_commands.ab2@1302> INCLUDE "internal_commands.ab2"
00044030 <internal_commands.ab2@1306> INCLUDE "internal_commands.ab2"
00044032 <internal_commands.ab2@1307> INCLUDE "internal_commands.ab2"
00044036 <internal_commands.ab2@1308> INCLUDE "internal_commands.ab2"
00044037 <internal_commands.ab2@1309> INCLUDE "internal_commands.ab2"
00044038 <internal_commands.ab2@1310> INCLUDE "internal_commands.ab2"
0004403A <internal_commands.ab2@1312> INCLUDE "internal_commands.ab2"
0004403E <internal_commands.ab2@1313> INCLUDE "internal_commands.ab2"
00044040 <internal_commands.ab2@1314> INCLUDE "internal_commands.ab2"
00044042 <internal_commands.ab2@1315> INCLUDE "internal_commands.ab2"
00044046 <internal_commands.ab2@1316> INCLUDE "internal_commands.ab2"
00044048 <internal_commands.ab2@1317> INCLUDE "internal_commands.ab2"
0004404C <internal_commands.ab2@1321> INCLUDE "internal_commands.ab2"
0004404E <internal_commands.ab2@1322> INCLUDE "internal_commands.ab2"
00044056 <internal_commands.ab2@1323> INCLUDE "internal_commands.ab2"
00044057 <internal_commands.ab2@1324> INCLUDE "internal_commands.ab2"
00044058 <internal_commands.ab2@1325> INCLUDE "internal_commands.ab2"
0004405A <internal_commands.ab2@1327> INCLUDE "internal_commands.ab2"
0004405E <internal_commands.ab2@1328> INCLUDE "internal_commands.ab2"
00044060 <internal_commands.ab2@1329> INCLUDE "internal_commands.ab2"
00044062 <internal_commands.ab2@1330> INCLUDE "internal_commands.ab2"
00044066 <internal_commands.ab2@1331> INCLUDE "internal_commands.ab2"
00044068 <internal_commands.ab2@1332> INCLUDE "internal_commands.ab2"
0004406C <internal_commands.ab2@1336> INCLUDE "internal_commands.ab2"
0004406E <internal_commands.ab2@1337> INCLUDE "internal_commands.ab2"
00044072 <internal_commands.ab2@1338> INCLUDE "internal_commands.ab2"
00044073 <internal_commands.ab2@1339> INCLUDE "internal_commands.ab2"
00044074 <internal_commands.ab2@1340> INCLUDE "internal_commands.ab2"
00044076 <internal_commands.ab2@1342> INCLUDE "internal_commands.ab2"
0004407A <internal_commands.ab2@1343> INCLUDE "internal_commands.ab2"
0004407C <internal_commands.ab2@1344> INCLUDE "internal_commands.ab2"
0004407E <internal_commands.ab2@1345> INCLUDE "internal_commands.ab2"
00044082 <internal_commands.ab2@1346> INCLUDE "internal_commands.ab2"
00044084 <internal_commands.ab2@1347> INCLUDE "internal_commands.ab2"
00044088 <internal_commands.ab2@1351> INCLUDE "internal_commands.ab2"
0004408A <internal_commands.ab2@1352> INCLUDE "internal_commands.ab2"
0004408E <internal_commands.ab2@1353> INCLUDE "internal_commands.ab2"
0004408F <internal_commands.ab2@1354> INCLUDE "internal_commands.ab2"
00044090 <internal_commands.ab2@1355> INCLUDE "internal_commands.ab2"
00044092 <internal_commands.ab2@1357> INCLUDE "internal_commands.ab2"
00044096 <internal_commands.ab2@1358> INCLUDE "internal_commands.ab2"
00044098 <internal_commands.ab2@1359> INCLUDE "internal_commands.ab2"
0004409A <internal_commands.ab2@1360> INCLUDE "internal_commands.ab2"
0004409E <internal_commands.ab2@1361> INCLUDE "internal_commands.ab2"
000440A0 <internal_commands.ab2@1362> INCLUDE "internal_commands.ab2"
000440A4 <internal_commands.ab2@1366> INCLUDE "internal_commands.ab2"
000440A6 <internal_commands.ab2@1367> INCLUDE "internal_commands.ab2"
000440AA <internal_commands.ab2@1368> INCLUDE "internal_commands.ab2"
000440AB <internal_commands.ab2@1369> INCLUDE "internal_commands.ab2"
000440AC <internal_commands.ab2@1370> INCLUDE "internal_commands.ab2"
000440AE <internal_commands.ab2@1372> INCLUDE "internal_commands.ab2"
000440B2 <internal_commands.ab2@1373> INCLUDE "internal_commands.ab2"
000440B4 <internal_commands.ab2@1374> INCLUDE "internal_commands.ab2"
000440B6 <internal_commands.ab2@1375> INCLUDE "internal_commands.ab2"
000440BA <internal_commands.ab2@1376> INCLUDE "internal_commands.ab2"
000440BC <internal_commands.ab2@1377> INCLUDE "internal_commands.ab2"
000440C0 <internal_commands.ab2@1381> INCLUDE "internal_commands.ab2"
000440C2 <internal_commands.ab2@1382> INCLUDE "internal_commands.ab2"
000440C7 <internal_commands.ab2@1383> INCLUDE "internal_commands.ab2"
000440C8 <internal_commands.ab2@1384> INCLUDE "internal_commands.ab2"
000440CA <internal_commands.ab2@1387> INCLUDE "internal_commands.ab2"
000440CE <internal_commands.ab2@1388> INCLUDE "internal_commands.ab2"
000440D0 <internal_commands.ab2@1389> INCLUDE "internal_commands.ab2"
000440D2 <internal_commands.ab2@1390> INCLUDE "internal_commands.ab2"
000440D6 <internal_commands.ab2@1391> INCLUDE "internal_commands.ab2"
000440D8 <internal_commands.ab2@1392> INCLUDE "internal_commands.ab2"
000440DC <internal_commands.ab2@1396> INCLUDE "internal_commands.ab2"
000440DE <internal_commands.ab2@1397> INCLUDE "internal_commands.ab2"
000440E2 <internal_commands.ab2@1398> INCLUDE "internal_commands.ab2"
000440E3 <internal_commands.ab2@1399> INCLUDE "internal_commands.ab2"
000440E4 <internal_commands.ab2@1400> INCLUDE "internal_commands.ab2"
000440E6 <internal_commands.ab2@1402> INCLUDE "internal_commands.ab2"
000440EA <internal_commands.ab2@1403> INCLUDE "internal_commands.ab2"
000440EC <internal_commands.ab2@1404> INCLUDE "internal_commands.ab2"
000440EE <internal_commands.ab2@1405> INCLUDE "internal_commands.ab2"
000440F2 <internal_commands.ab2@1406> INCLUDE "internal_commands.ab2"
000440F4 <internal_commands.ab2@1407> INCLUDE "internal_commands.ab2"
000440F8 <internal_commands.ab2@1411> INCLUDE "internal_commands.ab2"
000440FA <internal_commands.ab2@1412> INCLUDE "internal_commands.ab2"
000440FE <internal_commands.ab2@1413> INCLUDE "internal_commands.ab2"
000440FF <internal_commands.ab2@1414> INCLUDE "internal_commands.ab2"
00044100 <internal_commands.ab2@1415> INCLUDE "internal_commands.ab2"
00044102 <internal_commands.ab2@1417> INCLUDE "internal_commands.ab2"
00044106 <internal_commands.ab2@1418> INCLUDE "internal_commands.ab2"
00044108 <internal_commands.ab2@1419> INCLUDE "internal_commands.ab2"
0004410A <internal_commands.ab2@1420> INCLUDE "internal_commands.ab2"
0004410E <internal_commands.ab2@1421> INCLUDE "internal_commands.ab2"
00044110 <internal_commands.ab2@1422> INCLUDE "internal_commands.ab2"
00044114 <internal_commands.ab2@1426> INCLUDE "internal_commands.ab2"
00044116 <internal_commands.ab2@1427> INCLUDE "internal_commands.ab2"
0004411B <internal_commands.ab2@1428> INCLUDE "internal_commands.ab2"
0004411C <internal_commands.ab2@1429> INCLUDE "internal_commands.ab2"
0004411E <internal_commands.ab2@1432> INCLUDE "internal_commands.ab2"
00044122 <internal_commands.ab2@1433> INCLUDE "internal_commands.ab2"
00044124 <internal_commands.ab2@1434> INCLUDE "internal_commands.ab2"
00044126 <internal_commands.ab2@1435> INCLUDE "internal_commands.ab2"
0004412A <internal_commands.ab2@1436> INCLUDE "internal_commands.ab2"
0004412C <internal_commands.ab2@1437> INCLUDE "internal_commands.ab2"
00044130 <internal_commands.ab2@1441> INCLUDE "internal_commands.ab2"
00044132 <internal_commands.ab2@1442> INCLUDE "internal_commands.ab2"
00044137 <internal_commands.ab2@1443> INCLUDE "internal_commands.ab2"
00044138 <internal_commands.ab2@1444> INCLUDE "internal_commands.ab2"
0004413A <internal_commands.ab2@1447> INCLUDE "internal_commands.ab2"
0004413E <internal_commands.ab2@1448> INCLUDE "internal_commands.ab2"
00044140 <internal_commands.ab2@1449> INCLUDE "internal_commands.ab2"
00044142 <internal_commands.ab2@1450> INCLUDE "internal_commands.ab2"
00044146 <internal_commands.ab2@1451> INCLUDE "internal_commands.ab2"
00044148 <internal_commands.ab2@1452> INCLUDE "internal_commands.ab2"
0004414C <internal_commands.ab2@1457> INCLUDE "internal_commands.ab2"
0004414E <internal_commands.ab2@1458> INCLUDE "internal_commands.ab2"
00044154 <internal_commands.ab2@1459> INCLUDE "internal_commands.ab2"
00044155 <internal_commands.ab2@1460> INCLUDE "internal_commands.ab2"
00044156 <internal_commands.ab2@1461> INCLUDE "internal_commands.ab2"
00044158 <internal_commands.ab2@1463> INCLUDE "internal_commands.ab2"
0004415C <internal_commands.ab2@1464> INCLUDE "internal_commands.ab2"
0004415E <internal_commands.ab2@1465> INCLUDE "internal_commands.ab2"
00044160 <internal_commands.ab2@1466> INCLUDE "internal_commands.ab2"
00044164 <internal_commands.ab2@1467> INCLUDE "internal_commands.ab2"
00044166 <internal_commands.ab2@1468> INCLUDE "internal_commands.ab2"
0004416A <internal_commands.ab2@1472> INCLUDE "internal_commands.ab2"
0004416C <internal_commands.ab2@1473> INCLUDE "internal_commands.ab2"
00044172 <internal_commands.ab2@1474> INCLUDE "internal_commands.ab2"
00044173 <internal_commands.ab2@1475> INCLUDE "internal_commands.ab2"
00044174 <internal_commands.ab2@1476> INCLUDE "internal_commands.ab2"
00044176 <internal_commands.ab2@1478> INCLUDE "internal_commands.ab2"
0004417A <internal_commands.ab2@1479> INCLUDE "internal_commands.ab2"
0004417C <internal_commands.ab2@1480> INCLUDE "internal_commands.ab2"
0004417E <internal_commands.ab2@1481> INCLUDE "internal_commands.ab2"
00044182 <internal_commands.ab2@1482> INCLUDE "internal_commands.ab2"
00044184 <internal_commands.ab2@1483> INCLUDE "internal_commands.ab2"
00044188 <internal_commands.ab2@1487> INCLUDE "internal_commands.ab2"
0004418A <internal_commands.ab2@1488> INCLUDE "internal_commands.ab2"
00044190 <internal_commands.ab2@1489> INCLUDE "internal_commands.ab2"
00044191 <internal_commands.ab2@1490> INCLUDE "internal_commands.ab2"
00044192 <internal_commands.ab2@1491> INCLUDE "internal_commands.ab2"
00044194 <internal_commands.ab2@1493> INCLUDE "internal_commands.ab2"
00044198 <internal_commands.ab2@1494> INCLUDE "internal_commands.ab2"
0004419A <internal_commands.ab2@1495> INCLUDE "internal_commands.ab2"
0004419C <internal_commands.ab2@1496> INCLUDE "internal_commands.ab2"
000441A0 <internal_commands.ab2@1497> INCLUDE "internal_commands.ab2"
000441A2 <internal_commands.ab2@1498> INCLUDE "internal_commands.ab2"
000441A6 <internal_commands.ab2@1502> INCLUDE "internal_commands.ab2"
000441A8 <internal_commands.ab2@1503> INCLUDE "internal_commands.ab2"
000441AD <internal_commands.ab2@1504> INCLUDE "internal_commands.ab2"
000441AE <internal_commands.ab2@1505> INCLUDE "internal_commands.ab2"
000441B0 <internal_commands.ab2@1508> INCLUDE "internal_commands.ab2"
000441B4 <internal_commands.ab2@1509> INCLUDE "internal_commands.ab2"
000441B6 <internal_commands.ab2@1510> INCLUDE "internal_commands.ab2"
000441B8 <internal_commands.ab2@1511> INCLUDE "internal_commands.ab2"
000441BC <internal_commands.ab2@1512> INCLUDE "internal_commands.ab2"
000441BE <internal_commands.ab2@1513> INCLUDE "internal_commands.ab2"
000441C2 <internal_commands.ab2@1517> INCLUDE "internal_commands.ab2"
000441C4 <internal_commands.ab2@1518> INCLUDE "internal_commands.ab2"
000441C9 <internal_commands.ab2@1519> INCLUDE "internal_commands.ab2"
000441CA <internal_commands.ab2@1520> INCLUDE "internal_commands.ab2"
000441CC <internal_commands.ab2@1523> INCLUDE "internal_commands.ab2"
000441D0 <internal_commands.ab2@1524> INCLUDE "internal_commands.ab2"
000441D2 <internal_commands.ab2@1525> INCLUDE "internal_commands.ab2"
000441D4 <internal_commands.ab2@1526> INCLUDE "internal_commands.ab2"
000441D8 <internal_commands.ab2@1527> INCLUDE "internal_commands.ab2"
000441DA <internal_commands.ab2@1528> INCLUDE "internal_commands.ab2"
000441DE <internal_commands.ab2@1532> INCLUDE "internal_commands.ab2"
000441E0 <internal_commands.ab2@1533> INCLUDE "internal_commands.ab2"
000441E5 <internal_commands.ab2@1534> INCLUDE "internal_commands.ab2"
000441E6 <internal_commands.ab2@1535> INCLUDE "internal_commands.ab2"
000441E8 <internal_commands.ab2@1538> INCLUDE "internal_commands.ab2"
000441EC <internal_commands.ab2@1539> INCLUDE "internal_commands.ab2"
000441EE <internal_commands.ab2@1540> INCLUDE "internal_commands.ab2"
000441F0 <internal_commands.ab2@1541> INCLUDE "internal_commands.ab2"
000441F4 <internal_commands.ab2@1542> INCLUDE "internal_commands.ab2"
000441F6 <internal_commands.ab2@1543> INCLUDE "internal_commands.ab2"
000441FA <internal_commands.ab2@1547> INCLUDE "internal_commands.ab2"
000441FC <internal_commands.ab2@1548> INCLUDE "internal_commands.ab2"
00044200 <internal_commands.ab2@1549> INCLUDE "internal_commands.ab2"
00044201 <internal_commands.ab2@1550> INCLUDE "internal_commands.ab2"
00044202 <internal_commands.ab2@1551> INCLUDE "internal_commands.ab2"
00044204 <internal_commands.ab2@1553> INCLUDE "internal_commands.ab2"
00044208 <internal_commands.ab2@1554> INCLUDE "internal_commands.ab2"
0004420A <internal_commands.ab2@1555> INCLUDE "internal_commands.ab2"
0004420C <internal_commands.ab2@1556> INCLUDE "internal_commands.ab2"
00044210 <internal_commands.ab2@1557> INCLUDE "internal_commands.ab2"
00044212 <internal_commands.ab2@1558> INCLUDE "internal_commands.ab2"
00044216 <internal_commands.ab2@1562> INCLUDE "internal_commands.ab2"
00044218 <internal_commands.ab2@1563> INCLUDE "internal_commands.ab2"
0004421D <internal_commands.ab2@1564> INCLUDE "internal_commands.ab2"
0004421E <internal_commands.ab2@1565> INCLUDE "internal_commands.ab2"
00044220 <internal_commands.ab2@1568> INCLUDE "internal_commands.ab2"
00044224 <internal_commands.ab2@1569> INCLUDE "internal_commands.ab2"
00044226 <internal_commands.ab2@1570> INCLUDE "internal_commands.ab2"
00044228 <internal_commands.ab2@1571> INCLUDE "internal_commands.ab2"
0004422C <internal_commands.ab2@1572> INCLUDE "internal_commands.ab2"
0004422E <internal_commands.ab2@1573> INCLUDE "internal_commands.ab2"
00044232 <internal_commands.ab2@1577> INCLUDE "internal_commands.ab2"
00044234 <internal_commands.ab2@1578> INCLUDE "internal_commands.ab2"
00044238 <internal_commands.ab2@1579> INCLUDE "internal_commands.ab2"
00044239 <internal_commands.ab2@1580> INCLUDE "internal_commands.ab2"
0004423A <internal_commands.ab2@1581> INCLUDE "internal_commands.ab2"
0004423C <internal_commands.ab2@1583> INCLUDE "internal_commands.ab2"
00044240 <internal_commands.ab2@1584> INCLUDE "internal_commands.ab2"
00044242 <internal_commands.ab2@1585> INCLUDE "internal_commands.ab2"
00044244 <internal_commands.ab2@1586> INCLUDE "internal_commands.ab2"
00044248 <internal_commands.ab2@1587> INCLUDE "internal_commands.ab2"
0004424A <internal_commands.ab2@1588> INCLUDE "internal_commands.ab2"
0004424E <internal_commands.ab2@1592> INCLUDE "internal_commands.ab2"
00044250 <internal_commands.ab2@1593> INCLUDE "internal_commands.ab2"
00044254 <internal_commands.ab2@1594> INCLUDE "internal_commands.ab2"
00044255 <internal_commands.ab2@1595> INCLUDE "internal_commands.ab2"
00044256 <internal_commands.ab2@1596> INCLUDE "internal_commands.ab2"
00044258 <internal_commands.ab2@1598> INCLUDE "internal_commands.ab2"
0004425C <internal_commands.ab2@1599> INCLUDE "internal_commands.ab2"
0004425E <internal_commands.ab2@1600> INCLUDE "internal_commands.ab2"
00044260 <internal_commands.ab2@1601> INCLUDE "internal_commands.ab2"
00044264 <internal_commands.ab2@1602> INCLUDE "internal_commands.ab2"
00044266 <internal_commands.ab2@1603> INCLUDE "internal_commands.ab2"
0004426A <internal_commands.ab2@1607> INCLUDE "internal_commands.ab2"
0004426C <internal_commands.ab2@1608> INCLUDE "internal_commands.ab2"
0004426F <internal_commands.ab2@1609> INCLUDE "internal_commands.ab2"
00044270 <internal_commands.ab2@1610> INCLUDE "internal_commands.ab2"
00044272 <internal_commands.ab2@1613> INCLUDE "internal_commands.ab2"
00044276 <internal_commands.ab2@1614> INCLUDE "internal_commands.ab2"
00044278 <internal_commands.ab2@1615> INCLUDE "internal_commands.ab2"
0004427A <internal_commands.ab2@1616> INCLUDE "internal_commands.ab2"
0004427E <internal_commands.ab2@1617> INCLUDE "internal_commands.ab2"
00044280 <internal_commands.ab2@1618> INCLUDE "internal_commands.ab2"
00044284 <internal_commands.ab2@1622> INCLUDE "internal_commands.ab2"
00044286 <internal_commands.ab2@1623> INCLUDE "internal_commands.ab2"
0004428A <internal_commands.ab2@1624> INCLUDE "internal_commands.ab2"
0004428B <internal_commands.ab2@1625> INCLUDE "internal_commands.ab2"
0004428C <internal_commands.ab2@1626> INCLUDE "internal_commands.ab2"
0004428E <internal_commands.ab2@1628> INCLUDE "internal_commands.ab2"
00044292 <internal_commands.ab2@1629> INCLUDE "internal_commands.ab2"
00044294 <internal_commands.ab2@1630> INCLUDE "internal_commands.ab2"
00044296 <internal_commands.ab2@1631> INCLUDE "internal_commands.ab2"
0004429A <internal_commands.ab2@1632> INCLUDE "internal_commands.ab2"
0004429C <internal_commands.ab2@1633> INCLUDE "internal_commands.ab2"
000442A0 <internal_commands.ab2@1637> INCLUDE "internal_commands.ab2"
000442A2 <internal_commands.ab2@1638> INCLUDE "internal_commands.ab2"
000442A6 <internal_commands.ab2@1639> INCLUDE "internal_commands.ab2"
000442A7 <internal_commands.ab2@1640> INCLUDE "internal_commands.ab2"
000442A8 <internal_commands.ab2@1641> INCLUDE "internal_commands.ab2"
000442AA <internal_commands.ab2@1643> INCLUDE "internal_commands.ab2"
000442AE <internal_commands.ab2@1644> INCLUDE "internal_commands.ab2"
000442B0 <internal_commands.ab2@1645> INCLUDE "internal_commands.ab2"
000442B2 <internal_commands.ab2@1646> INCLUDE "internal_commands.ab2"
000442B6 <internal_commands.ab2@1647> INCLUDE "internal_commands.ab2"
000442B8 <internal_commands.ab2@1648> INCLUDE "internal_commands.ab2"
000442BC <internal_commands.ab2@1652> INCLUDE "internal_commands.ab2"
000442BE <internal_commands.ab2@1653> INCLUDE "internal_commands.ab2"
000442C4 <internal_commands.ab2@1654> INCLUDE "internal_commands.ab2"
000442C5 <internal_commands.ab2@1655> INCLUDE "internal_commands.ab2"
000442C6 <internal_commands.ab2@1656> INCLUDE "internal_commands.ab2"
000442C8 <internal_commands.ab2@1658> INCLUDE "internal_commands.ab2"
000442CC <internal_commands.ab2@1659> INCLUDE "internal_commands.ab2"
000442CE <internal_commands.ab2@1660> INCLUDE "internal_commands.ab2"
000442D0 <internal_commands.ab2@1661> INCLUDE "internal_commands.ab2"
000442D4 <internal_commands.ab2@1662> INCLUDE "internal_commands.ab2"
000442D6 <internal_commands.ab2@1663> INCLUDE "internal_commands.ab2"
000442DA <internal_commands.ab2@1667> INCLUDE "internal_commands.ab2"
000442DC <internal_commands.ab2@1668> INCLUDE "internal_commands.ab2"
000442E0 <internal_commands.ab2@1669> INCLUDE "internal_commands.ab2"
000442E1 <internal_commands.ab2@1670> INCLUDE "internal_commands.ab2"
000442E2 <internal_commands.ab2@1671> INCLUDE "internal_commands.ab2"
000442E4 <internal_commands.ab2@1673> INCLUDE "internal_commands.ab2"
000442E8 <internal_commands.ab2@1674> INCLUDE "internal_commands.ab2"
000442EA <internal_commands.ab2@1675> INCLUDE "internal_commands.ab2"
000442EC <internal_commands.ab2@1676> INCLUDE "internal_commands.ab2"
000442F0 <internal_commands.ab2@1677> INCLUDE "internal_commands.ab2"
000442F2 <internal_commands.ab2@1678> INCLUDE "internal_commands.ab2"
000442F6 <internal_commands.ab2@1682> INCLUDE "internal_commands.ab2"
000442F8 <internal_commands.ab2@1683> INCLUDE "internal_commands.ab2"
000442FC <internal_commands.ab2@1684> INCLUDE "internal_commands.ab2"
000442FD <internal_commands.ab2@1685> INCLUDE "internal_commands.ab2"
000442FE <internal_commands.ab2@1686> INCLUDE "internal_commands.ab2"
00044300 <internal_commands.ab2@1688> INCLUDE "internal_commands.ab2"
00044304 <internal_commands.ab2@1689> INCLUDE "internal_commands.ab2"
00044306 <internal_commands.ab2@1690> INCLUDE "internal_commands.ab2"
00044308 <internal_commands.ab2@1691> INCLUDE "internal_commands.ab2"
0004430C <internal_commands.ab2@1692> INCLUDE "internal_commands.ab2"
0004430E <internal_commands.ab2@1693> INCLUDE "internal_commands.ab2"
00044312 <internal_commands.ab2@1697> INCLUDE "internal_commands.ab2"
00044314 <internal_commands.ab2@1698> INCLUDE "internal_commands.ab2"
00044319 <internal_commands.ab2@1699> INCLUDE "internal_commands.ab2"
0004431A <internal_commands.ab2@1700> INCLUDE "internal_commands.ab2"
0004431C <internal_commands.ab2@1703> INCLUDE "internal_commands.ab2"
00044320 <internal_commands.ab2@1704> INCLUDE "internal_commands.ab2"
00044322 <internal_commands.ab2@1705> INCLUDE "internal_commands.ab2"
00044324 <internal_commands.ab2@1706> INCLUDE "internal_commands.ab2"
00044328 <internal_commands.ab2@1707> INCLUDE "internal_commands.ab2"
0004432A <internal_commands.ab2@1708> INCLUDE "internal_commands.ab2"
0004432E <internal_commands.ab2@1712> INCLUDE "internal_commands.ab2"
00044330 <internal_commands.ab2@1713> INCLUDE "internal_commands.ab2"
00044335 <internal_commands.ab2@1714> INCLUDE "internal_commands.ab2"
00044336 <internal_commands.ab2@1715> INCLUDE "internal_commands.ab2"
00044338 <internal_commands.ab2@1718> INCLUDE "internal_commands.ab2"
0004433C <internal_commands.ab2@1719> INCLUDE "internal_commands.ab2"
0004433E <internal_commands.ab2@1720> INCLUDE "internal_commands.ab2"
00044340 <internal_commands.ab2@1721> INCLUDE "internal_commands.ab2"
00044344 <internal_commands.ab2@1722> INCLUDE "internal_commands.ab2"
00044346 <internal_commands.ab2@1723> INCLUDE "internal_commands.ab2"
0004434A <internal_commands.ab2@1727> INCLUDE "internal_commands.ab2"
0004434C <internal_commands.ab2@1728> INCLUDE "internal_commands.ab2"
00044350 <internal_commands.ab2@1729> INCLUDE "internal_commands.ab2"
00044351 <internal_commands.ab2@1730> INCLUDE "internal_commands.ab2"
00044352 <internal_commands.ab2@1731> INCLUDE "internal_commands.ab2"
00044354 <internal_commands.ab2@1733> INCLUDE "internal_commands.ab2"
00044358 <internal_commands.ab2@1734> INCLUDE "internal_commands.ab2"
0004435A <internal_commands.ab2@1735> INCLUDE "internal_commands.ab2"
0004435C <internal_commands.ab2@1736> INCLUDE "internal_commands.ab2"
00044360 <internal_commands.ab2@1737> INCLUDE "internal_commands.ab2"
00044362 <internal_commands.ab2@1738> INCLUDE "internal_commands.ab2"
00044366 <internal_commands.ab2@1742> INCLUDE "internal_commands.ab2"
00044368 <internal_commands.ab2@1743> INCLUDE "internal_commands.ab2"
0004436C <internal_commands.ab2@1744> INCLUDE "internal_commands.ab2"
0004436D <internal_commands.ab2@1745> INCLUDE "internal_commands.ab2"
0004436E <internal_commands.ab2@1746> INCLUDE "internal_commands.ab2"
00044370 <internal_commands.ab2@1748> INCLUDE "internal_commands.ab2"
00044374 <internal_commands.ab2@1749> INCLUDE "internal_commands.ab2"
00044376 <internal_commands.ab2@1750> INCLUDE "internal_commands.ab2"
00044378 <internal_commands.ab2@1751> INCLUDE "internal_commands.ab2"
0004437C <internal_commands.ab2@1752> INCLUDE "internal_commands.ab2"
0004437E <internal_commands.ab2@1753> INCLUDE "internal_commands.ab2"
00044382 <internal_commands.ab2@1757> INCLUDE "internal_commands.ab2"
00044384 <internal_commands.ab2@1758> INCLUDE "internal_commands.ab2"
00044388 <internal_commands.ab2@1759> INCLUDE "internal_commands.ab2"
00044389 <internal_commands.ab2@1760> INCLUDE "internal_commands.ab2"
0004438A <internal_commands.ab2@1761> INCLUDE "internal_commands.ab2"
0004438C <internal_commands.ab2@1763> INCLUDE "internal_commands.ab2"
00044390 <internal_commands.ab2@1764> INCLUDE "internal_commands.ab2"
00044392 <internal_commands.ab2@1765> INCLUDE "internal_commands.ab2"
00044394 <internal_commands.ab2@1766> INCLUDE "internal_commands.ab2"
00044398 <internal_commands.ab2@1767> INCLUDE "internal_commands.ab2"
0004439A <internal_commands.ab2@1768> INCLUDE "internal_commands.ab2"
0004439E <internal_commands.ab2@1772> INCLUDE "internal_commands.ab2"
000443A0 <internal_commands.ab2@1773> INCLUDE "internal_commands.ab2"
000443A5 <internal_commands.ab2@1774> INCLUDE "internal_commands.ab2"
000443A6 <internal_commands.ab2@1775> INCLUDE "internal_commands.ab2"
000443A8 <internal_commands.ab2@1778> INCLUDE "internal_commands.ab2"
000443AC <internal_commands.ab2@1779> INCLUDE "internal_commands.ab2"
000443AE <internal_commands.ab2@1780> INCLUDE "internal_commands.ab2"
000443B0 <internal_commands.ab2@1781> INCLUDE "internal_commands.ab2"
000443B4 <internal_commands.ab2@1782> INCLUDE "internal_commands.ab2"
000443B6 <internal_commands.ab2@1783> INCLUDE "internal_commands.ab2"
000443BA <internal_commands.ab2@1787> INCLUDE "internal_commands.ab2"
000443BC <internal_commands.ab2@1788> INCLUDE "internal_commands.ab2"
000443C0 <internal_commands.ab2@1789> INCLUDE "internal_commands.ab2"
000443C1 <internal_commands.ab2@1790> INCLUDE "internal_commands.ab2"
000443C2 <internal_commands.ab2@1791> INCLUDE "internal_commands.ab2"
000443C4 <internal_commands.ab2@1793> INCLUDE "internal_commands.ab2"
000443C8 <internal_commands.ab2@1794> INCLUDE "internal_commands.ab2"
000443CA <internal_commands.ab2@1795> INCLUDE "internal_commands.ab2"
000443CC <internal_commands.ab2@1796> INCLUDE "internal_commands.ab2"
000443D0 <internal_commands.ab2@1797> INCLUDE "internal_commands.ab2"
000443D2 <internal_commands.ab2@1798> INCLUDE "internal_commands.ab2"
000443D6 <internal_commands.ab2@1802> INCLUDE "internal_commands.ab2"
000443D8 <internal_commands.ab2@1803> INCLUDE "internal_commands.ab2"
000443DC <internal_commands.ab2@1804> INCLUDE "internal_commands.ab2"
000443DD <internal_commands.ab2@1805> INCLUDE "internal_commands.ab2"
000443DE <internal_commands.ab2@1806> INCLUDE "internal_commands.ab2"
000443E0 <internal_commands.ab2@1808> INCLUDE "internal_commands.ab2"
000443E4 <internal_commands.ab2@1809> INCLUDE "internal_commands.ab2"
000443E6 <internal_commands.ab2@1810> INCLUDE "internal_commands.ab2"
000443E8 <internal_commands.ab2@1811> INCLUDE "internal_commands.ab2"
000443EC <internal_commands.ab2@1812> INCLUDE "internal_commands.ab2"
000443EE <internal_commands.ab2@1813> INCLUDE "internal_commands.ab2"
000443F2 <internal_commands.ab2@1817> INCLUDE "internal_commands.ab2"
000443F4 <internal_commands.ab2@1818> INCLUDE "internal_commands.ab2"
000443F8 <internal_commands.ab2@1819> INCLUDE "internal_commands.ab2"
000443F9 <internal_commands.ab2@1820> INCLUDE "internal_commands.ab2"
000443FA <internal_commands.ab2@1821> INCLUDE "internal_commands.ab2"
000443FC <internal_commands.ab2@1823> INCLUDE "internal_commands.ab2"
00044400 <internal_commands.ab2@1824> INCLUDE "internal_commands.ab2"
00044402 <internal_commands.ab2@1825> INCLUDE "internal_commands.ab2"
00044404 <internal_commands.ab2@1826> INCLUDE "internal_commands.ab2"
00044408 <internal_commands.ab2@1827> INCLUDE "internal_commands.ab2"
0004440A <internal_commands.ab2@1828> INCLUDE "internal_commands.ab2"
0004440E <internal_commands.ab2@1832> INCLUDE "internal_commands.ab2"
00044410 <internal_commands.ab2@1833> INCLUDE "internal_commands.ab2"
00044414 <internal_commands.ab2@1834> INCLUDE "internal_commands.ab2"
00044415 <internal_commands.ab2@1835> INCLUDE "internal_commands.ab2"
00044416 <internal_commands.ab2@1836> INCLUDE "internal_commands.ab2"
00044418 <internal_commands.ab2@1838> INCLUDE "internal_commands.ab2"
0004441C <internal_commands.ab2@1839> INCLUDE "internal_commands.ab2"
0004441E <internal_commands.ab2@1840> INCLUDE "internal_commands.ab2"
00044420 <internal_commands.ab2@1841> INCLUDE "internal_commands.ab2"
00044424 <internal_commands.ab2@1842> INCLUDE "internal_commands.ab2"
00044426 <internal_commands.ab2@1843> INCLUDE "internal_commands.ab2"
0004442A <internal_commands.ab2@1847> INCLUDE "internal_commands.ab2"
0004442C <internal_commands.ab2@1848> INCLUDE "internal_commands.ab2"
00044430 <internal_commands.ab2@1849> INCLUDE "internal_commands.ab2"
00044431 <internal_commands.ab2@1850> INCLUDE "internal_commands.ab2"
00044432 <internal_commands.ab2@1851> INCLUDE "internal_commands.ab2"
00044434 <internal_commands.ab2@1853> INCLUDE "internal_commands.ab2"
00044438 <internal_commands.ab2@1854> INCLUDE "internal_commands.ab2"
0004443A <internal_commands.ab2@1855> INCLUDE "internal_commands.ab2"
0004443C <internal_commands.ab2@1856> INCLUDE "internal_commands.ab2"
00044440 <internal_commands.ab2@1857> INCLUDE "internal_commands.ab2"
00044442 <internal_commands.ab2@1858> INCLUDE "internal_commands.ab2"
00044446 <internal_commands.ab2@1862> INCLUDE "internal_commands.ab2"
00044448 <internal_commands.ab2@1863> INCLUDE "internal_commands.ab2"
0004444C <internal_commands.ab2@1864> INCLUDE "internal_commands.ab2"
0004444D <internal_commands.ab2@1865> INCLUDE "internal_commands.ab2"
0004444E <internal_commands.ab2@1866> INCLUDE "internal_commands.ab2"
00044450 <internal_commands.ab2@1868> INCLUDE "internal_commands.ab2"
00044454 <internal_commands.ab2@1869> INCLUDE "internal_commands.ab2"
00044456 <internal_commands.ab2@1870> INCLUDE "internal_commands.ab2"
00044458 <internal_commands.ab2@1871> INCLUDE "internal_commands.ab2"
0004445C <internal_commands.ab2@1872> INCLUDE "internal_commands.ab2"
0004445E <internal_commands.ab2@1873> INCLUDE "internal_commands.ab2"
00044462 <internal_commands.ab2@1877> INCLUDE "internal_commands.ab2"
00044464 <internal_commands.ab2@1878> INCLUDE "internal_commands.ab2"
00044468 <internal_commands.ab2@1879> INCLUDE "internal_commands.ab2"
00044469 <internal_commands.ab2@1880> INCLUDE "internal_commands.ab2"
0004446A <internal_commands.ab2@1881> INCLUDE "internal_commands.ab2"
0004446C <internal_commands.ab2@1883> INCLUDE "internal_commands.ab2"
00044470 <internal_commands.ab2@1884> INCLUDE "internal_commands.ab2"
00044472 <internal_commands.ab2@1885> INCLUDE "internal_commands.ab2"
00044474 <internal_commands.ab2@1886> INCLUDE "internal_commands.ab2"
00044478 <internal_commands.ab2@1887> INCLUDE "internal_commands.ab2"
0004447A <internal_commands.ab2@1888> INCLUDE "internal_commands.ab2"
0004447E <internal_commands.ab2@1892> INCLUDE "internal_commands.ab2"
00044480 <internal_commands.ab2@1893> INCLUDE "internal_commands.ab2"
00044484 <internal_commands.ab2@1894> INCLUDE "internal_commands.ab2"
00044485 <internal_commands.ab2@1895> INCLUDE "internal_commands.ab2"
00044486 <internal_commands.ab2@1896> INCLUDE "internal_commands.ab2"
00044488 <internal_commands.ab2@1898> INCLUDE "internal_commands.ab2"
0004448C <internal_commands.ab2@1899> INCLUDE "internal_commands.ab2"
0004448E <internal_commands.ab2@1900> INCLUDE "internal_commands.ab2"
00044490 <internal_commands.ab2@1901> INCLUDE "internal_commands.ab2"
00044494 <internal_commands.ab2@1902> INCLUDE "internal_commands.ab2"
00044496 <internal_commands.ab2@1903> INCLUDE "internal_commands.ab2"
0004449A <internal_commands.ab2@1907> INCLUDE "internal_commands.ab2"
0004449C <internal_commands.ab2@1908> INCLUDE "internal_commands.ab2"
000444A0 <internal_commands.ab2@1909> INCLUDE "internal_commands.ab2"
000444A1 <internal_commands.ab2@1910> INCLUDE "internal_commands.ab2"
000444A2 <internal_commands.ab2@1911> INCLUDE "internal_commands.ab2"
000444A4 <internal_commands.ab2@1913> INCLUDE "internal_commands.ab2"
000444A8 <internal_commands.ab2@1914> INCLUDE "internal_commands.ab2"
000444AA <internal_commands.ab2@1915> INCLUDE "internal_commands.ab2"
000444AC <internal_commands.ab2@1916> INCLUDE "internal_commands.ab2"
000444B0 <internal_commands.ab2@1917> INCLUDE "internal_commands.ab2"
000444B2 <internal_commands.ab2@1918> INCLUDE "internal_commands.ab2"
000444B6 <internal_commands.ab2@1922> INCLUDE "internal_commands.ab2"
000444B8 <internal_commands.ab2@1923> INCLUDE "internal_commands.ab2"
000444BC <internal_commands.ab2@1924> INCLUDE "internal_commands.ab2"
000444BD <internal_commands.ab2@1925> INCLUDE "internal_commands.ab2"
000444BE <internal_commands.ab2@1926> INCLUDE "internal_commands.ab2"
000444C0 <internal_commands.ab2@1928> INCLUDE "internal_commands.ab2"
000444C4 <internal_commands.ab2@1929> INCLUDE "internal_commands.ab2"
000444C6 <internal_commands.ab2@1930> INCLUDE "internal_commands.ab2"
000444C8 <internal_commands.ab2@1931> INCLUDE "internal_commands.ab2"
000444CC <internal_commands.ab2@1932> INCLUDE "internal_commands.ab2"
000444CE <internal_commands.ab2@1933> INCLUDE "internal_commands.ab2"
000444D2 <internal_commands.ab2@1937> INCLUDE "internal_commands.ab2"
000444D4 <internal_commands.ab2@1938> INCLUDE "internal_commands.ab2"
000444D8 <internal_commands.ab2@1939> INCLUDE "internal_commands.ab2"
000444D9 <internal_commands.ab2@1940> INCLUDE "internal_commands.ab2"
000444DA <internal_commands.ab2@1941> INCLUDE "internal_commands.ab2"
000444DC <internal_commands.ab2@1943> INCLUDE "internal_commands.ab2"
000444E0 <internal_commands.ab2@1944> INCLUDE "internal_commands.ab2"
000444E2 <internal_commands.ab2@1945> INCLUDE "internal_commands.ab2"
000444E4 <internal_commands.ab2@1946> INCLUDE "internal_commands.ab2"
000444E8 <internal_commands.ab2@1947> INCLUDE "internal_commands.ab2"
000444EA <internal_commands.ab2@1948> INCLUDE "internal_commands.ab2"
000444EE <internal_commands.ab2@1952> INCLUDE "internal_commands.ab2"
000444F0 <internal_commands.ab2@1953> INCLUDE "internal_commands.ab2"
000444F4 <internal_commands.ab2@1954> INCLUDE "internal_commands.ab2"
000444F5 <internal_commands.ab2@1955> INCLUDE "internal_commands.ab2"
000444F6 <internal_commands.ab2@1956> INCLUDE "internal_commands.ab2"
000444F8 <internal_commands.ab2@1958> INCLUDE "internal_commands.ab2"
000444FC <internal_commands.ab2@1959> INCLUDE "internal_commands.ab2"
000444FE <internal_commands.ab2@1960> INCLUDE "internal_commands.ab2"
00044500 <internal_commands.ab2@1961> INCLUDE "internal_commands.ab2"
00044504 <internal_commands.ab2@1962> INCLUDE "internal_commands.ab2"
00044506 <internal_commands.ab2@1963> INCLUDE "internal_commands.ab2"
0004450A <internal_commands.ab2@1967> INCLUDE "internal_commands.ab2"
0004450C <internal_commands.ab2@1968> INCLUDE "internal_commands.ab2"
00044510 <internal_commands.ab2@1969> INCLUDE "internal_commands.ab2"
00044511 <internal_commands.ab2@1970> INCLUDE "internal_commands.ab2"
00044512 <internal_commands.ab2@1971> INCLUDE "internal_commands.ab2"
00044514 <internal_commands.ab2@1973> INCLUDE "internal_commands.ab2"
00044518 <internal_commands.ab2@1974> INCLUDE "internal_commands.ab2"
0004451A <internal_commands.ab2@1975> INCLUDE "internal_commands.ab2"
0004451C <internal_commands.ab2@1976> INCLUDE "internal_commands.ab2"
00044520 <internal_commands.ab2@1977> INCLUDE "internal_commands.ab2"
00044522 <internal_commands.ab2@1978> INCLUDE "internal_commands.ab2"
00044526 <internal_commands.ab2@1982> INCLUDE "internal_commands.ab2"
00044528 <internal_commands.ab2@1983> INCLUDE "internal_commands.ab2"
0004452C <internal_commands.ab2@1984> INCLUDE "internal_commands.ab2"
0004452D <internal_commands.ab2@1985> INCLUDE "internal_commands.ab2"
0004452E <internal_commands.ab2@1986> INCLUDE "internal_commands.ab2"
00044530 <internal_commands.ab2@1988> INCLUDE "internal_commands.ab2"
00044534 <internal_commands.ab2@1989> INCLUDE "internal_commands.ab2"
00044536 <internal_commands.ab2@1990> INCLUDE "internal_commands.ab2"
00044538 <internal_commands.ab2@1991> INCLUDE "internal_commands.ab2"
0004453C <internal_commands.ab2@1992> INCLUDE "internal_commands.ab2"
0004453E <internal_commands.ab2@1993> INCLUDE "internal_commands.ab2"
00044542 <internal_commands.ab2@1997> INCLUDE "internal_commands.ab2"
00044544 <internal_commands.ab2@1998> INCLUDE "internal_commands.ab2"
00044547 <internal_commands.ab2@1999> INCLUDE "internal_commands.ab2"
00044548 <internal_commands.ab2@2000> INCLUDE "internal_commands.ab2"
0004454A <internal_commands.ab2@2003> INCLUDE "internal_commands.ab2"
0004454E <internal_commands.ab2@2004> INCLUDE "internal_commands.ab2"
00044550 <internal_commands.ab2@2005> INCLUDE "internal_commands.ab2"
00044552 <internal_commands.ab2@2006> INCLUDE "internal_commands.ab2"
00044556 <internal_commands.ab2@2007> INCLUDE "internal_commands.ab2"
00044558 <internal_commands.ab2@2008> INCLUDE "internal_commands.ab2"
0004455C <internal_commands.ab2@2012> INCLUDE "internal_commands.ab2"
0004455E <internal_commands.ab2@2013> INCLUDE "internal_commands.ab2"
00044561 <internal_commands.ab2@2014> INCLUDE "internal_commands.ab2"
00044562 <internal_commands.ab2@2015> INCLUDE "internal_commands.ab2"
00044564 <internal_commands.ab2@2018> INCLUDE "internal_commands.ab2"
00044568 <internal_commands.ab2@2019> INCLUDE "internal_commands.ab2"
0004456A <internal_commands.ab2@2020> INCLUDE "internal_commands.ab2"
0004456C <internal_commands.ab2@2021> INCLUDE "internal_commands.ab2"
00044570 <internal_commands.ab2@2022> INCLUDE "internal_commands.ab2"
00044572 <internal_commands.ab2@2023> INCLUDE "internal_commands.ab2"
00044576 <internal_commands.ab2@2027> INCLUDE "internal_commands.ab2"
00044578 <internal_commands.ab2@2028> INCLUDE "internal_commands.ab2"
0004457D <internal_commands.ab2@2029> INCLUDE "internal_commands.ab2"
0004457E <internal_commands.ab2@2030> INCLUDE "internal_commands.ab2"
00044580 <internal_commands.ab2@2033> INCLUDE "internal_commands.ab2"
00044584 <internal_commands.ab2@2034> INCLUDE "internal_commands.ab2"
00044586 <internal_commands.ab2@2035> INCLUDE "internal_commands.ab2"
00044588 <internal_commands.ab2@2036> INCLUDE "internal_commands.ab2"
0004458C <internal_commands.ab2@2037> INCLUDE "internal_commands.ab2"
0004458E <internal_commands.ab2@2038> INCLUDE "internal_commands.ab2"
00044592 <internal_commands.ab2@2042> INCLUDE "internal_commands.ab2"
00044594 <internal_commands.ab2@2043> INCLUDE "internal_commands.ab2"
00044598 <internal_commands.ab2@2044> INCLUDE "internal_commands.ab2"
00044599 <internal_commands.ab2@2045> INCLUDE "internal_commands.ab2"
0004459A <internal_commands.ab2@2046> INCLUDE "internal_commands.ab2"
0004459C <internal_commands.ab2@2048> INCLUDE "internal_commands.ab2"
000445A0 <internal_commands.ab2@2049> INCLUDE "internal_commands.ab2"
000445A2 <internal_commands.ab2@2050> INCLUDE "internal_commands.ab2"
000445A4 <internal_commands.ab2@2051> INCLUDE "internal_commands.ab2"
000445A8 <internal_commands.ab2@2052> INCLUDE "internal_commands.ab2"
000445AA <internal_commands.ab2@2053> INCLUDE "internal_commands.ab2"
000445AE <internal_commands.ab2@2057> INCLUDE "internal_commands.ab2"
000445B0 <internal_commands.ab2@2058> INCLUDE "internal_commands.ab2"
000445B5 <internal_commands.ab2@2059> INCLUDE "internal_commands.ab2"
000445B6 <internal_commands.ab2@2060> INCLUDE "internal_commands.ab2"
000445B8 <internal_commands.ab2@2063> INCLUDE "internal_commands.ab2"
000445BC <internal_commands.ab2@2064> INCLUDE "internal_commands.ab2"
000445BE <internal_commands.ab2@2065> INCLUDE "internal_commands.ab2"
000445C0 <internal_commands.ab2@2066> INCLUDE "internal_commands.ab2"
000445C4 <internal_commands.ab2@2067> INCLUDE "internal_commands.ab2"
000445C6 <internal_commands.ab2@2068> INCLUDE "internal_commands.ab2"
000445CA <internal_commands.ab2@2072> INCLUDE "internal_commands.ab2"
000445CC <internal_commands.ab2@2073> INCLUDE "internal_commands.ab2"
000445D1 <internal_commands.ab2@2074> INCLUDE "internal_commands.ab2"
000445D2 <internal_commands.ab2@2075> INCLUDE "internal_commands.ab2"
000445D4 <internal_commands.ab2@2078> INCLUDE "internal_commands.ab2"
000445D8 <internal_commands.ab2@2079> INCLUDE "internal_commands.ab2"
000445DA <internal_commands.ab2@2080> INCLUDE "internal_commands.ab2"
000445DC <internal_commands.ab2@2081> INCLUDE "internal_commands.ab2"
000445E0 <internal_commands.ab2@2082> INCLUDE "internal_commands.ab2"
000445E2 <internal_commands.ab2@2083> INCLUDE "internal_commands.ab2"
000445E6 <internal_commands.ab2@2087> INCLUDE "internal_commands.ab2"
000445E8 <internal_commands.ab2@2088> INCLUDE "internal_commands.ab2"
000445ED <internal_commands.ab2@2089> INCLUDE "internal_commands.ab2"
000445EE <internal_commands.ab2@2090> INCLUDE "internal_commands.ab2"
000445F0 <internal_commands.ab2@2093> INCLUDE "internal_commands.ab2"
000445F4 <internal_commands.ab2@2094> INCLUDE "internal_commands.ab2"
000445F6 <internal_commands.ab2@2095> INCLUDE "internal_commands.ab2"
000445F8 <internal_commands.ab2@2096> INCLUDE "internal_commands.ab2"
000445FC <internal_commands.ab2@2097> INCLUDE "internal_commands.ab2"
000445FE <internal_commands.ab2@2098> INCLUDE "internal_commands.ab2"
00044602 <internal_commands.ab2@2102> INCLUDE "internal_commands.ab2"
00044604 <internal_commands.ab2@2103> INCLUDE "internal_commands.ab2"
00044609 <internal_commands.ab2@2104> INCLUDE "internal_commands.ab2"
0004460A <internal_commands.ab2@2105> INCLUDE "internal_commands.ab2"
0004460C <internal_commands.ab2@2108> INCLUDE "internal_commands.ab2"
00044610 <internal_commands.ab2@2109> INCLUDE "internal_commands.ab2"
00044612 <internal_commands.ab2@2110> INCLUDE "internal_commands.ab2"
00044614 <internal_commands.ab2@2111> INCLUDE "internal_commands.ab2"
00044618 <internal_commands.ab2@2112> INCLUDE "internal_commands.ab2"
0004461A <internal_commands.ab2@2113> INCLUDE "internal_commands.ab2"
0004461E <internal_commands.ab2@2117> INCLUDE "internal_commands.ab2"
00044620 <internal_commands.ab2@2118> INCLUDE "internal_commands.ab2"
00044625 <internal_commands.ab2@2119> INCLUDE "internal_commands.ab2"
00044626 <internal_commands.ab2@2120> INCLUDE "internal_commands.ab2"
00044628 <internal_commands.ab2@2123> INCLUDE "internal_commands.ab2"
0004462C <internal_commands.ab2@2124> INCLUDE "internal_commands.ab2"
0004462E <internal_commands.ab2@2125> INCLUDE "internal_commands.ab2"
00044630 <internal_commands.ab2@2126> INCLUDE "internal_commands.ab2"
00044634 <internal_commands.ab2@2127> INCLUDE "internal_commands.ab2"
00044636 <internal_commands.ab2@2128> INCLUDE "internal_commands.ab2"
0004463A <internal_commands.ab2@2132> INCLUDE "internal_commands.ab2"
0004463C <internal_commands.ab2@2133> INCLUDE "internal_commands.ab2"
00044640 <internal_commands.ab2@2134> INCLUDE "internal_commands.ab2"
00044641 <internal_commands.ab2@2135> INCLUDE "internal_commands.ab2"
00044642 <internal_commands.ab2@2136> INCLUDE "internal_commands.ab2"
00044644 <internal_commands.ab2@2138> INCLUDE "internal_commands.ab2"
00044648 <internal_commands.ab2@2139> INCLUDE "internal_commands.ab2"
0004464A <internal_commands.ab2@2140> INCLUDE "internal_commands.ab2"
0004464C <internal_commands.ab2@2141> INCLUDE "internal_commands.ab2"
00044650 <internal_commands.ab2@2142> INCLUDE "internal_commands.ab2"
00044652 <internal_commands.ab2@2143> INCLUDE "internal_commands.ab2"
00044656 <internal_commands.ab2@2147> INCLUDE "internal_commands.ab2"
00044658 <internal_commands.ab2@2148> INCLUDE "internal_commands.ab2"
0004465D <internal_commands.ab2@2149> INCLUDE "internal_commands.ab2"
0004465E <internal_commands.ab2@2150> INCLUDE "internal_commands.ab2"
00044660 <internal_commands.ab2@2153> INCLUDE "internal_commands.ab2"
00044664 <internal_commands.ab2@2154> INCLUDE "internal_commands.ab2"
00044666 <internal_commands.ab2@2155> INCLUDE "internal_commands.ab2"
00044668 <internal_commands.ab2@2156> INCLUDE "internal_commands.ab2"
0004466C <internal_commands.ab2@2157> INCLUDE "internal_commands.ab2"
0004466E <internal_commands.ab2@2158> INCLUDE "internal_commands.ab2"
00044672 <internal_commands.ab2@2162> INCLUDE "internal_commands.ab2"
00044674 <internal_commands.ab2@2163> INCLUDE "internal_commands.ab2"
0004467A <internal_commands.ab2@2164> INCLUDE "internal_commands.ab2"
0004467B <internal_commands.ab2@2165> INCLUDE "internal_commands.ab2"
0004467C <internal_commands.ab2@2166> INCLUDE "internal_commands.ab2"
0004467E <internal_commands.ab2@2168> INCLUDE "internal_commands.ab2"
00044682 <internal_commands.ab2@2169> INCLUDE "internal_commands.ab2"
00044684 <internal_commands.ab2@2170> INCLUDE "internal_commands.ab2"
00044686 <internal_commands.ab2@2171> INCLUDE "internal_commands.ab2"
0004468A <internal_commands.ab2@2172> INCLUDE "internal_commands.ab2"
0004468C <internal_commands.ab2@2173> INCLUDE "internal_commands.ab2"
00044690 <internal_commands.ab2@2177> INCLUDE "internal_commands.ab2"
00044692 <internal_commands.ab2@2178> INCLUDE "internal_commands.ab2"
00044696 <internal_commands.ab2@2179> INCLUDE "internal_commands.ab2"
00044697 <internal_commands.ab2@2180> INCLUDE "internal_commands.ab2"
00044698 <internal_commands.ab2@2181> INCLUDE "internal_commands.ab2"
0004469A <internal_commands.ab2@2183> INCLUDE "internal_commands.ab2"
0004469E <internal_commands.ab2@2184> INCLUDE "internal_commands.ab2"
000446A0 <internal_commands.ab2@2185> INCLUDE "internal_commands.ab2"
000446A2 <internal_commands.ab2@2186> INCLUDE "internal_commands.ab2"
000446A6 <internal_commands.ab2@2187> INCLUDE "internal_commands.ab2"
000446A8 <internal_commands.ab2@2188> INCLUDE "internal_commands.ab2"
000446AC <internal_commands.ab2@2192> INCLUDE "internal_commands.ab2"
000446AE <internal_commands.ab2@2193> INCLUDE "internal_commands.ab2"
000446B3 <internal_commands.ab2@2194> INCLUDE "internal_commands.ab2"
000446B4 <internal_commands.ab2@2195> INCLUDE "internal_commands.ab2"
000446B6 <internal_commands.ab2@2198> INCLUDE "internal_commands.ab2"
000446BA <internal_commands.ab2@2199> INCLUDE "internal_commands.ab2"
000446BC <internal_commands.ab2@2200> INCLUDE "internal_commands.ab2"
000446BE <internal_commands.ab2@2201> INCLUDE "internal_commands.ab2"
000446C2 <internal_commands.ab2@2202> INCLUDE "internal_commands.ab2"
000446C4 <internal_commands.ab2@2203> INCLUDE "internal_commands.ab2"
000446C8 <internal_commands.ab2@2208> INCLUDE "internal_commands.ab2"
000446CA <internal_commands.ab2@2209> INCLUDE "internal_commands.ab2"
000446D1 <internal_commands.ab2@2210> INCLUDE "internal_commands.ab2"
000446D2 <internal_commands.ab2@2211> INCLUDE "internal_commands.ab2"
000446D4 <internal_commands.ab2@2230> INCLUDE "internal_commands.ab2"
000446D6 <internal_commands.ab2@2231> INCLUDE "internal_commands.ab2"
000446D8 <internal_commands.ab2@2235> INCLUDE "internal_commands.ab2"
000446DA <internal_commands.ab2@2236> INCLUDE "internal_commands.ab2"
000446DC <internal_commands.ab2@2240> INCLUDE "internal_commands.ab2"
000446DE <internal_commands.ab2@2241> INCLUDE "internal_commands.ab2"
000446E0 <internal_commands.ab2@2245> INCLUDE "internal_commands.ab2"
000446E2 <internal_commands.ab2@2246> INCLUDE "internal_commands.ab2"
000446E4 <internal_commands.ab2@2251> INCLUDE "internal_commands.ab2"
000446E8 <internal_commands.ab2@2252> INCLUDE "internal_commands.ab2"
000446EA <internal_commands.ab2@2253> INCLUDE "internal_commands.ab2"
000446EC <internal_commands.ab2@2254> INCLUDE "internal_commands.ab2"
000446EE <internal_commands.ab2@2255> INCLUDE "internal_commands.ab2"
000446F0 <internal_commands.ab2@2256> INCLUDE "internal_commands.ab2"
000446F4 <internal_commands.ab2@2257> INCLUDE "internal_commands.ab2"
000446FA <internal_commands.ab2@2260> INCLUDE "internal_commands.ab2"
000446FE <internal_commands.ab2@2261> INCLUDE "internal_commands.ab2"
00044700 <internal_commands.ab2@2262> INCLUDE "internal_commands.ab2"
00044702 <internal_commands.ab2@2263> INCLUDE "internal_commands.ab2"
00044704 <internal_commands.ab2@2264> INCLUDE "internal_commands.ab2"
00044706 <internal_commands.ab2@2265> INCLUDE "internal_commands.ab2"
00044708 <internal_commands.ab2@2266> INCLUDE "internal_commands.ab2"
0004470A <internal_commands.ab2@2273> INCLUDE "internal_commands.ab2"
0004470E <internal_commands.ab2@2274> INCLUDE "internal_commands.ab2"
00044712 <internal_commands.ab2@2275> INCLUDE "internal_commands.ab2"
00044716 <internal_commands.ab2@2276> INCLUDE "internal_commands.ab2"
0004471A <internal_commands.ab2@2277> INCLUDE "internal_commands.ab2"
0004471E <internal_commands.ab2@2278> INCLUDE "internal_commands.ab2"
00044720 <internal_commands.ab2@2281> INCLUDE "internal_commands.ab2"
00044722 <internal_commands.ab2@2282> INCLUDE "internal_commands.ab2"
00044726 <internal_commands.ab2@2283> INCLUDE "internal_commands.ab2"
0004472A <internal_commands.ab2@2284> INCLUDE "internal_commands.ab2"
0004472E <internal_commands.ab2@2285> INCLUDE "internal_commands.ab2"
00044732 <internal_commands.ab2@2286> INCLUDE "internal_commands.ab2"
00044734 <internal_commands.ab2@2289> INCLUDE "internal_commands.ab2"
00044736 <internal_commands.ab2@2290> INCLUDE "internal_commands.ab2"
0004473A <internal_commands.ab2@2291> INCLUDE "internal_commands.ab2"
0004473E <internal_commands.ab2@2292> INCLUDE "internal_commands.ab2"
00044742 <internal_commands.ab2@2293> INCLUDE "internal_commands.ab2"
00044746 <internal_commands.ab2@2294> INCLUDE "internal_commands.ab2"
00044748 <internal_commands.ab2@2295> INCLUDE "internal_commands.ab2"
0004474A <internal_commands.ab2@2298> INCLUDE "internal_commands.ab2"
0004474C <internal_commands.ab2@2299> INCLUDE "internal_commands.ab2"
00044750 <internal_commands.ab2@2300> INCLUDE "internal_commands.ab2"
00044752 <internal_commands.ab2@2302> INCLUDE "internal_commands.ab2"
00044756 <internal_commands.ab2@2303> INCLUDE "internal_commands.ab2"
00044758 <internal_commands.ab2@2307> INCLUDE "internal_commands.ab2"
0004475C <internal_commands.ab2@2308> INCLUDE "internal_commands.ab2"
0004475E <internal_commands.ab2@2309> INCLUDE "internal_commands.ab2"
00044762 <internal_commands.ab2@2310> INCLUDE "internal_commands.ab2"
00044766 <internal_commands.ab2@2311> INCLUDE "internal_commands.ab2"
0004476A <internal_commands.ab2@2312> INCLUDE "internal_commands.ab2"
0004476E <internal_commands.ab2@2316> INCLUDE "internal_commands.ab2"
00044772 <internal_commands.ab2@2317> INCLUDE "internal_commands.ab2"
00044776 <internal_commands.ab2@2319> INCLUDE "internal_commands.ab2"
0004477A <internal_commands.ab2@2320> INCLUDE "internal_commands.ab2"
0004477E <internal_commands.ab2@2321> INCLUDE "internal_commands.ab2"
00044782 <internal_commands.ab2@2322> INCLUDE "internal_commands.ab2"
00044786 <internal_commands.ab2@2323> INCLUDE "internal_commands.ab2"
0004478A <internal_commands.ab2@2324> INCLUDE "internal_commands.ab2"
0004478E <internal_commands.ab2@2325> INCLUDE "internal_commands.ab2"
00044792 <internal_commands.ab2@2326> INCLUDE "internal_commands.ab2"
00044796 <internal_commands.ab2@2328> INCLUDE "internal_commands.ab2"
0004479A <internal_commands.ab2@2331> INCLUDE "internal_commands.ab2"
0004479E <internal_commands.ab2@2332> INCLUDE "internal_commands.ab2"
000447A2 <internal_commands.ab2@2334> INCLUDE "internal_commands.ab2"
000447A6 <internal_commands.ab2@2335> INCLUDE "internal_commands.ab2"
000447AA <internal_commands.ab2@2336> INCLUDE "internal_commands.ab2"
000447AE <internal_commands.ab2@2337> INCLUDE "internal_commands.ab2"
000447B2 <internal_commands.ab2@2338> INCLUDE "internal_commands.ab2"
000447B6 <internal_commands.ab2@2339> INCLUDE "internal_commands.ab2"
000447BA <internal_commands.ab2@2340> INCLUDE "internal_commands.ab2"
000447BE <internal_commands.ab2@2341> INCLUDE "internal_commands.ab2"
000447C2 <internal_commands.ab2@2343> INCLUDE "internal_commands.ab2"
000447C6 <internal_commands.ab2@2346> INCLUDE "internal_commands.ab2"
000447C8 <internal_commands.ab2@2347> INCLUDE "internal_commands.ab2"
000447CC <internal_commands.ab2@2348> INCLUDE "internal_commands.ab2"
000447D0 <internal_commands.ab2@2349> INCLUDE "internal_commands.ab2"
000447D4 <internal_commands.ab2@2350> INCLUDE "internal_commands.ab2"
000447D8 <internal_commands.ab2@2351> INCLUDE "internal_commands.ab2"
000447DC <internal_commands.ab2@2352> INCLUDE "internal_commands.ab2"
000447E0 <internal_commands.ab2@2353> INCLUDE "internal_commands.ab2"
000447E4 <internal_commands.ab2@2356> INCLUDE "internal_commands.ab2"
000447E8 <internal_commands.ab2@2357> INCLUDE "internal_commands.ab2"
000447EC <internal_commands.ab2@2358> INCLUDE "internal_commands.ab2"
000447EE <internal_commands.ab2@2359> INCLUDE "internal_commands.ab2"
000447F0 <internal_commands.ab2@2362> INCLUDE "internal_commands.ab2"
000447F2 <internal_commands.ab2@2363> INCLUDE "internal_commands.ab2"
000447F4 <internal_commands.ab2@2364> INCLUDE "internal_commands.ab2"
000447F6 <internal_commands.ab2@2365> INCLUDE "internal_commands.ab2"
000447FA <internal_commands.ab2@2366> INCLUDE "internal_commands.ab2"
000447FE <internal_commands.ab2@2369> INCLUDE "internal_commands.ab2"
00044802 <internal_commands.ab2@2370> INCLUDE "internal_commands.ab2"
00044806 <internal_commands.ab2@2371> INCLUDE "internal_commands.ab2"
00044808 <internal_commands.ab2@2372> INCLUDE "internal_commands.ab2"
0004480C <internal_commands.ab2@2373> INCLUDE "internal_commands.ab2"
00044810 <internal_commands.ab2@2376> INCLUDE "internal_commands.ab2"
00044814 <internal_commands.ab2@2379> INCLUDE "internal_commands.ab2"
00044818 <internal_commands.ab2@2380> INCLUDE "internal_commands.ab2"
0004481A <internal_commands.ab2@2381> INCLUDE "internal_commands.ab2"
0004481C <internal_commands.ab2@2382> INCLUDE "internal_commands.ab2"
00044820 <internal_commands.ab2@2383> INCLUDE "internal_commands.ab2"
00044824 <internal_commands.ab2@2386> INCLUDE "internal_commands.ab2"
00044828 <internal_commands.ab2@2387> INCLUDE "internal_commands.ab2"
0004482C <internal_commands.ab2@2390> INCLUDE "internal_commands.ab2"
00044830 <internal_commands.ab2@2393> INCLUDE "internal_commands.ab2"
00044834 <internal_commands.ab2@2394> INCLUDE "internal_commands.ab2"
00044836 <internal_commands.ab2@2395> INCLUDE "internal_commands.ab2"
00044838 <internal_commands.ab2@2396> INCLUDE "internal_commands.ab2"
0004483C <internal_commands.ab2@2397> INCLUDE "internal_commands.ab2"
00044840 <internal_commands.ab2@2400> INCLUDE "internal_commands.ab2"
00044844 <internal_commands.ab2@2401> INCLUDE "internal_commands.ab2"
00044846 <internal_commands.ab2@2405> INCLUDE "internal_commands.ab2"
0004484A <internal_commands.ab2@2406> INCLUDE "internal_commands.ab2"
0004484E <internal_commands.ab2@2407> INCLUDE "internal_commands.ab2"
00044850 <internal_commands.ab2@2408> INCLUDE "internal_commands.ab2"
00044854 <internal_commands.ab2@2409> INCLUDE "internal_commands.ab2"
00044858 <internal_commands.ab2@2410> INCLUDE "internal_commands.ab2"
0004485A <internal_commands.ab2@2413> INCLUDE "internal_commands.ab2"
0004485E <internal_commands.ab2@2414> INCLUDE "internal_commands.ab2"
00044862 <internal_commands.ab2@2415> INCLUDE "internal_commands.ab2"
00044866 <internal_commands.ab2@2416> INCLUDE "internal_commands.ab2"
0004486A <internal_commands.ab2@2419> INCLUDE "internal_commands.ab2"
0004486E <internal_commands.ab2@2420> INCLUDE "internal_commands.ab2"
00044870 <internal_commands.ab2@2424> INCLUDE "internal_commands.ab2"
00044874 <internal_commands.ab2@2425> INCLUDE "internal_commands.ab2"
00044876 <internal_commands.ab2@2426> INCLUDE "internal_commands.ab2"
00044878 <internal_commands.ab2@2427> INCLUDE "internal_commands.ab2"
0004487A <internal_commands.ab2@2428> INCLUDE "internal_commands.ab2"
0004487E <internal_commands.ab2@2429> INCLUDE "internal_commands.ab2"
00044882 <internal_commands.ab2@2432> INCLUDE "internal_commands.ab2"
00044886 <internal_commands.ab2@2433> INCLUDE "internal_commands.ab2"
0004488A <internal_commands.ab2@2434> INCLUDE "internal_commands.ab2"
0004488E <internal_commands.ab2@2435> INCLUDE "internal_commands.ab2"
00044892 <internal_commands.ab2@2439> INCLUDE "internal_commands.ab2"
00044896 <internal_commands.ab2@2440> INCLUDE "internal_commands.ab2"
0004489A <internal_commands.ab2@2444> INCLUDE "internal_commands.ab2"
0004489E <internal_commands.ab2@2445> INCLUDE "internal_commands.ab2"
000448A2 <internal_commands.ab2@2449> INCLUDE "internal_commands.ab2"
000448A6 <internal_commands.ab2@2450> INCLUDE "internal_commands.ab2"
000448AA <internal_commands.ab2@2454> INCLUDE "internal_commands.ab2"
000448AC <internal_commands.ab2@2456> INCLUDE "internal_commands.ab2"
000448B0 <internal_commands.ab2@2457> INCLUDE "internal_commands.ab2"
000448B4 <internal_commands.ab2@2458> INCLUDE "internal_commands.ab2"
000448B6 <internal_commands.ab2@2459> INCLUDE "internal_commands.ab2"
000448B8 <internal_commands.ab2@2460> INCLUDE "internal_commands.ab2"
000448BA <internal_commands.ab2@2461> INCLUDE "internal_commands.ab2"
000448BE <internal_commands.ab2@2462> INCLUDE "internal_commands.ab2"
000448C2 <internal_commands.ab2@2463> INCLUDE "internal_commands.ab2"
000448C4 <internal_commands.ab2@2464> INCLUDE "internal_commands.ab2"
000448C8 <internal_commands.ab2@2465> INCLUDE "internal_commands.ab2"
000448CA <internal_commands.ab2@2466> INCLUDE "internal_commands.ab2"
000448CC <internal_commands.ab2@2467> INCLUDE "internal_commands.ab2"
000448CE <internal_commands.ab2@2468> INCLUDE "internal_commands.ab2"
000448D2 <internal_commands.ab2@2469> INCLUDE "internal_commands.ab2"
000448D6 <internal_commands.ab2@2470> INCLUDE "internal_commands.ab2"
000448D8 <internal_commands.ab2@2473> INCLUDE "internal_commands.ab2"
000448DA <internal_commands.ab2@2474> INCLUDE "internal_commands.ab2"
000448DE <internal_commands.ab2@2475> INCLUDE "internal_commands.ab2"
000448E2 <internal_commands.ab2@2476> INCLUDE "internal_commands.ab2"
000448E6 <internal_commands.ab2@2477> INCLUDE "internal_commands.ab2"
000448EA <internal_commands.ab2@2478> INCLUDE "internal_commands.ab2"
000448EC <internal_commands.ab2@2479> INCLUDE "internal_commands.ab2"
000448F0 <internal_commands.ab2@2480> INCLUDE "internal_commands.ab2"
000448F4 <internal_commands.ab2@2481> INCLUDE "internal_commands.ab2"
000448F8 <internal_commands.ab2@2482> INCLUDE "internal_commands.ab2"
000448FA <internal_commands.ab2@2483> INCLUDE "internal_commands.ab2"
000448FC <internal_commands.ab2@2484> INCLUDE "internal_commands.ab2"
000448FE <internal_commands.ab2@2485> INCLUDE "internal_commands.ab2"
00044900 <internal_commands.ab2@2488> INCLUDE "internal_commands.ab2"
00044902 <internal_commands.ab2@2489> INCLUDE "internal_commands.ab2"
00044904 <internal_commands.ab2@2490> INCLUDE "internal_commands.ab2"
00044908 <internal_commands.ab2@2491> INCLUDE "internal_commands.ab2"
0004490C <internal_commands.ab2@2492> INCLUDE "internal_commands.ab2"
0004490E <internal_commands.ab2@2496> INCLUDE "internal_commands.ab2"
00044912 <internal_commands.ab2@2497> INCLUDE "internal_commands.ab2"
00044914 <internal_commands.ab2@2498> INCLUDE "internal_commands.ab2"
00044918 <internal_commands.ab2@2499> INCLUDE "internal_commands.ab2"
0004491C <internal_commands.ab2@2500> INCLUDE "internal_commands.ab2"
0004491E <internal_commands.ab2@2501> INCLUDE "internal_commands.ab2"
00044920 <internal_commands.ab2@2504> INCLUDE "internal_commands.ab2"
00044922 <internal_commands.ab2@2508> INCLUDE "internal_commands.ab2"
00044926 <internal_commands.ab2@2509> INCLUDE "internal_commands.ab2"
00044928 <internal_commands.ab2@2510> INCLUDE "internal_commands.ab2"
0004492C <internal_commands.ab2@2511> INCLUDE "internal_commands.ab2"
00044930 <internal_commands.ab2@2512> INCLUDE "internal_commands.ab2"
00044934 <internal_commands.ab2@2513> INCLUDE "internal_commands.ab2"
00044936 <internal_commands.ab2@2516> INCLUDE "internal_commands.ab2"
0004493A <internal_commands.ab2@2520> INCLUDE "internal_commands.ab2"
0004493E <internal_commands.ab2@2521> INCLUDE "internal_commands.ab2"
00044940 <internal_commands.ab2@2522> INCLUDE "internal_commands.ab2"
00044944 <internal_commands.ab2@2523> INCLUDE "internal_commands.ab2"
00044948 <internal_commands.ab2@2524> INCLUDE "internal_commands.ab2"
0004494C <internal_commands.ab2@2527> INCLUDE "internal_commands.ab2"
00044950 <internal_commands.ab2@2528> INCLUDE "internal_commands.ab2"
00044954 <internal_commands.ab2@2529> INCLUDE "internal_commands.ab2"
00044958 <internal_commands.ab2@2530> INCLUDE "internal_commands.ab2"
0004495C <internal_commands.ab2@2531> INCLUDE "internal_commands.ab2"
00044960 <internal_commands.ab2@2538> INCLUDE "internal_commands.ab2"
00044962 <internal_commands.ab2@2539> INCLUDE "internal_commands.ab2"
00044967 <internal_commands.ab2@2540> INCLUDE "internal_commands.ab2"
00044968 <internal_commands.ab2@2541> INCLUDE "internal_commands.ab2"
0004496C <internal_commands.ab2@2545> INCLUDE "internal_commands.ab2"
0004496E <internal_commands.ab2@2546> INCLUDE "internal_commands.ab2"
00044975 <internal_commands.ab2@2547> INCLUDE "internal_commands.ab2"
00044976 <internal_commands.ab2@2548> INCLUDE "internal_commands.ab2"
0004497A <internal_commands.ab2@2552> INCLUDE "internal_commands.ab2"
0004497C <internal_commands.ab2@2553> INCLUDE "internal_commands.ab2"
00044983 <internal_commands.ab2@2554> INCLUDE "internal_commands.ab2"
00044984 <internal_commands.ab2@2555> INCLUDE "internal_commands.ab2"
00044988 <internal_commands.ab2@2559> INCLUDE "internal_commands.ab2"
0004498A <internal_commands.ab2@2560> INCLUDE "internal_commands.ab2"
00044992 <internal_commands.ab2@2561> INCLUDE "internal_commands.ab2"
00044993 <internal_commands.ab2@2562> INCLUDE "internal_commands.ab2"
00044994 <internal_commands.ab2@2563> INCLUDE "internal_commands.ab2"
00044998 <internal_commands.ab2@2566> INCLUDE "internal_commands.ab2"
0004499A <internal_commands.ab2@2567> INCLUDE "internal_commands.ab2"
0004499F <internal_commands.ab2@2568> INCLUDE "internal_commands.ab2"
000449B3 <internal_commands.ab2@2569> INCLUDE "internal_commands.ab2"
000449B4 <internal_commands.ab2@2570> INCLUDE "internal_commands.ab2"
000449B8 <internal_commands.ab2@2573> INCLUDE "internal_commands.ab2"
000449BA <internal_commands.ab2@2574> INCLUDE "internal_commands.ab2"
000449BE <internal_commands.ab2@2575> INCLUDE "internal_commands.ab2"
000449BF <internal_commands.ab2@2576> INCLUDE "internal_commands.ab2"
000449C0 <internal_commands.ab2@2577> INCLUDE "internal_commands.ab2"
000449C4 <internal_commands.ab2@2580> INCLUDE "internal_commands.ab2"
000449C6 <internal_commands.ab2@2581> INCLUDE "internal_commands.ab2"
000449C9 <internal_commands.ab2@2582> INCLUDE "internal_commands.ab2"
000449CA <internal_commands.ab2@2583> INCLUDE "internal_commands.ab2"
000449CE <internal_commands.ab2@2587> INCLUDE "internal_commands.ab2"
000449D0 <internal_commands.ab2@2588> INCLUDE "internal_commands.ab2"
000449D7 <internal_commands.ab2@2589> INCLUDE "internal_commands.ab2"
000449D8 <internal_commands.ab2@2590> INCLUDE "internal_commands.ab2"
000449DC <internal_commands.ab2@2594> INCLUDE "internal_commands.ab2"
000449DE <internal_commands.ab2@2595> INCLUDE "internal_commands.ab2"
000449E4 <internal_commands.ab2@2596> INCLUDE "internal_commands.ab2"
000449F1 <internal_commands.ab2@2597> INCLUDE "internal_commands.ab2"
000449F2 <internal_commands.ab2@2598> INCLUDE "internal_commands.ab2"
000449F6 <internal_commands.ab2@2601> INCLUDE "internal_commands.ab2"
000449F8 <internal_commands.ab2@2602> INCLUDE "internal_commands.ab2"
000449FF <internal_commands.ab2@2603> INCLUDE "internal_commands.ab2"
00044A17 <internal_commands.ab2@2604> INCLUDE "internal_commands.ab2"
00044A18 <internal_commands.ab2@2605> INCLUDE "internal_commands.ab2"
00044A1C <internal_commands.ab2@2608> INCLUDE "internal_commands.ab2"
00044A1E <internal_commands.ab2@2609> INCLUDE "internal_commands.ab2"
00044A22 <internal_commands.ab2@2610> INCLUDE "internal_commands.ab2"
00044A45 <internal_commands.ab2@2611> INCLUDE "internal_commands.ab2"
00044A46 <internal_commands.ab2@2612> INCLUDE "internal_commands.ab2"
00044A4A <internal_commands.ab2@2615> INCLUDE "internal_commands.ab2"
00044A4C <internal_commands.ab2@2616> INCLUDE "internal_commands.ab2"
00044A53 <internal_commands.ab2@2617> INCLUDE "internal_commands.ab2"
00044A5E <internal_commands.ab2@2618> INCLUDE "internal_commands.ab2"
00044A62 <internal_commands.ab2@2622> INCLUDE "internal_commands.ab2"
00044A64 <internal_commands.ab2@2623> INCLUDE "internal_commands.ab2"
00044A6A <internal_commands.ab2@2624> INCLUDE "internal_commands.ab2"
00044A6B <internal_commands.ab2@2625> INCLUDE "internal_commands.ab2"
00044A6C <internal_commands.ab2@2626> INCLUDE "internal_commands.ab2"
00044A70 <internal_commands.ab2@2629> INCLUDE "internal_commands.ab2"
00044A72 <internal_commands.ab2@2630> INCLUDE "internal_commands.ab2"
00044A77 <internal_commands.ab2@2631> INCLUDE "internal_commands.ab2"
00044A78 <internal_commands.ab2@2632> INCLUDE "internal_commands.ab2"
00044A7C <internal_commands.ab2@2636> INCLUDE "internal_commands.ab2"
00044A7E <internal_commands.ab2@2637> INCLUDE "internal_commands.ab2"
00044A85 <internal_commands.ab2@2638> INCLUDE "internal_commands.ab2"
00044A97 <internal_commands.ab2@2639> INCLUDE "internal_commands.ab2"
00044A98 <internal_commands.ab2@2640> INCLUDE "internal_commands.ab2"
00044A9C <internal_commands.ab2@2643> INCLUDE "internal_commands.ab2"
00044A9E <internal_commands.ab2@2644> INCLUDE "internal_commands.ab2"
00044AA8 <internal_commands.ab2@2645> INCLUDE "internal_commands.ab2"
00044AA9 <internal_commands.ab2@2646> INCLUDE "internal_commands.ab2"
00044AAA <internal_commands.ab2@2647> INCLUDE "internal_commands.ab2"
00044AAE <internal_commands.ab2@2650> INCLUDE "internal_commands.ab2"
00044AB0 <internal_commands.ab2@2651> INCLUDE "internal_commands.ab2"
00044AB8 <internal_commands.ab2@2652> INCLUDE "internal_commands.ab2"
00044AC5 <internal_commands.ab2@2653> INCLUDE "internal_commands.ab2"
00044AC6 <internal_commands.ab2@2654> INCLUDE "internal_commands.ab2"
00044ACA <internal_commands.ab2@2657> INCLUDE "internal_commands.ab2"
00044ACC <internal_commands.ab2@2658> INCLUDE "internal_commands.ab2"
00044ACF <internal_commands.ab2@2659> INCLUDE "internal_commands.ab2"
00044B0A <internal_commands.ab2@2660> INCLUDE "internal_commands.ab2"
00044B0E <internal_commands.ab2@2664> INCLUDE "internal_commands.ab2"
00044B10 <internal_commands.ab2@2665> INCLUDE "internal_commands.ab2"
00044B14 <internal_commands.ab2@2666> INCLUDE "internal_commands.ab2"
00044B15 <internal_commands.ab2@2667> INCLUDE "internal_commands.ab2"
00044B16 <internal_commands.ab2@2668> INCLUDE "internal_commands.ab2"
00044B1A <internal_commands.ab2@2671> INCLUDE "internal_commands.ab2"
00044B1C <internal_commands.ab2@2672> INCLUDE "internal_commands.ab2"
00044B24 <internal_commands.ab2@2673> INCLUDE "internal_commands.ab2"
00044B25 <internal_commands.ab2@2674> INCLUDE "internal_commands.ab2"
00044B26 <internal_commands.ab2@2675> INCLUDE "internal_commands.ab2"
00044B2A <internal_commands.ab2@2678> INCLUDE "internal_commands.ab2"
00044B2C <internal_commands.ab2@2679> INCLUDE "internal_commands.ab2"
00044B34 <internal_commands.ab2@2680> INCLUDE "internal_commands.ab2"
00044B44 <internal_commands.ab2@2681> INCLUDE "internal_commands.ab2"
00044B48 <internal_commands.ab2@2685> INCLUDE "internal_commands.ab2"
00044B4A <internal_commands.ab2@2686> INCLUDE "internal_commands.ab2"
00044B53 <internal_commands.ab2@2687> INCLUDE "internal_commands.ab2"
00044B5B <internal_commands.ab2@2688> INCLUDE "internal_commands.ab2"
00044B5C <internal_commands.ab2@2689> INCLUDE "internal_commands.ab2"
00044B60 <internal_commands.ab2@2692> INCLUDE "internal_commands.ab2"
00044B62 <internal_commands.ab2@2693> INCLUDE "internal_commands.ab2"
00044B6A <internal_commands.ab2@2694> INCLUDE "internal_commands.ab2"
00044B73 <internal_commands.ab2@2695> INCLUDE "internal_commands.ab2"
00044B74 <internal_commands.ab2@2696> INCLUDE "internal_commands.ab2"
00044B78 <internal_commands.ab2@2699> INCLUDE "internal_commands.ab2"
00044B7A <internal_commands.ab2@2700> INCLUDE "internal_commands.ab2"
00044B82 <internal_commands.ab2@2701> INCLUDE "internal_commands.ab2"
00044B83 <internal_commands.ab2@2702> INCLUDE "internal_commands.ab2"
00044B84 <internal_commands.ab2@2703> INCLUDE "internal_commands.ab2"
00044B88 <internal_commands.ab2@2706> INCLUDE "internal_commands.ab2"
00044B8A <internal_commands.ab2@2707> INCLUDE "internal_commands.ab2"
00044B90 <internal_commands.ab2@2708> INCLUDE "internal_commands.ab2"
00044B91 <internal_commands.ab2@2709> INCLUDE "internal_commands.ab2"
00044B92 <internal_commands.ab2@2710> INCLUDE "internal_commands.ab2"
00044B96 <internal_commands.ab2@2713> INCLUDE "internal_commands.ab2"
00044B98 <internal_commands.ab2@2714> INCLUDE "internal_commands.ab2"
00044B9F <internal_commands.ab2@2715> INCLUDE "internal_commands.ab2"
00044BA0 <internal_commands.ab2@2716> INCLUDE "internal_commands.ab2"
00044BA4 <internal_commands.ab2@2720> INCLUDE "internal_commands.ab2"
00044BA6 <internal_commands.ab2@2721> INCLUDE "internal_commands.ab2"
00044BAD <internal_commands.ab2@2722> INCLUDE "internal_commands.ab2"
00044BAE <internal_commands.ab2@2723> INCLUDE "internal_commands.ab2"
00044BB2 <internal_commands.ab2@2727> INCLUDE "internal_commands.ab2"
00044BB4 <internal_commands.ab2@2728> INCLUDE "internal_commands.ab2"
00044BBB <internal_commands.ab2@2729> INCLUDE "internal_commands.ab2"
00044BBC <internal_commands.ab2@2730> INCLUDE "internal_commands.ab2"
00044BC0 <internal_commands.ab2@2734> INCLUDE "internal_commands.ab2"
00044BC2 <internal_commands.ab2@2735> INCLUDE "internal_commands.ab2"
00044BC9 <internal_commands.ab2@2736> INCLUDE "internal_commands.ab2"
00044BCA <internal_commands.ab2@2737> INCLUDE "internal_commands.ab2"
00044BCE <internal_commands.ab2@2741> INCLUDE "internal_commands.ab2"
00044BD0 <internal_commands.ab2@2742> INCLUDE "internal_commands.ab2"
00044BD5 <internal_commands.ab2@2743> INCLUDE "internal_commands.ab2"
00044BEB <internal_commands.ab2@2744> INCLUDE "internal_commands.ab2"
00044BEC <internal_commands.ab2@2745> INCLUDE "internal_commands.ab2"
00044BF0 <internal_commands.ab2@2748> INCLUDE "internal_commands.ab2"
00044BF2 <internal_commands.ab2@2749> INCLUDE "internal_commands.ab2"
00044BFC <internal_commands.ab2@2750> INCLUDE "internal_commands.ab2"
00044BFD <internal_commands.ab2@2751> INCLUDE "internal_commands.ab2"
00044BFE <internal_commands.ab2@2752> INCLUDE "internal_commands.ab2"
00044C02 <internal_commands.ab2@2755> INCLUDE "internal_commands.ab2"
00044C04 <internal_commands.ab2@2756> INCLUDE "internal_commands.ab2"
00044C0F <internal_commands.ab2@2757> INCLUDE "internal_commands.ab2"
00044C10 <internal_commands.ab2@2758> INCLUDE "internal_commands.ab2"
00044C14 <internal_commands.ab2@2762> INCLUDE "internal_commands.ab2"
00044C16 <internal_commands.ab2@2763> INCLUDE "internal_commands.ab2"
00044C22 <internal_commands.ab2@2764> INCLUDE "internal_commands.ab2"
00044C4F <internal_commands.ab2@2765> INCLUDE "internal_commands.ab2"
00044C50 <internal_commands.ab2@2766> INCLUDE "internal_commands.ab2"
00044C54 <internal_commands.ab2@2769> INCLUDE "internal_commands.ab2"
00044C56 <internal_commands.ab2@2770> INCLUDE "internal_commands.ab2"
00044C5E <internal_commands.ab2@2771> INCLUDE "internal_commands.ab2"
00044C95 <internal_commands.ab2@2772> INCLUDE "internal_commands.ab2"
00044C96 <internal_commands.ab2@2773> INCLUDE "internal_commands.ab2"
00044C9A <internal_commands.ab2@2776> INCLUDE "internal_commands.ab2"
00044C9C <internal_commands.ab2@2777> INCLUDE "internal_commands.ab2"
00044CA4 <internal_commands.ab2@2778> INCLUDE "internal_commands.ab2"
00044CC3 <internal_commands.ab2@2779> INCLUDE "internal_commands.ab2"
00044CC4 <internal_commands.ab2@2780> INCLUDE "internal_commands.ab2"
00044CC8 <internal_commands.ab2@2783> INCLUDE "internal_commands.ab2"
00044CCA <internal_commands.ab2@2784> INCLUDE "internal_commands.ab2"
00044CD1 <internal_commands.ab2@2785> INCLUDE "internal_commands.ab2"
00044D07 <internal_commands.ab2@2786> INCLUDE "internal_commands.ab2"
00044D08 <internal_commands.ab2@2787> INCLUDE "internal_commands.ab2"
00044D0C <internal_commands.ab2@2790> INCLUDE "internal_commands.ab2"
00044D0E <internal_commands.ab2@2791> INCLUDE "internal_commands.ab2"
00044D17 <internal_commands.ab2@2792> INCLUDE "internal_commands.ab2"
00044D4C <internal_commands.ab2@2793> INCLUDE "internal_commands.ab2"
00044D50 <internal_commands.ab2@2797> INCLUDE "internal_commands.ab2"
00044D52 <internal_commands.ab2@2798> INCLUDE "internal_commands.ab2"
00044D62 <internal_commands.ab2@2799> INCLUDE "internal_commands.ab2"
00044D99 <internal_commands.ab2@2800> INCLUDE "internal_commands.ab2"
00044D9A <internal_commands.ab2@2801> INCLUDE "internal_commands.ab2"
00044D9A <AmiBlitz3.ab2@28696> INCLUDE "internal_commands.ab2"
00044D9E <AmiBlitz3.ab2@28701>            Dc.l cif_lt                                     ;ciflt
00044DA2 <AmiBlitz3.ab2@28702>            Dc.l cif_eq                                     ;cifeq
00044DA6 <AmiBlitz3.ab2@28703>            Dc.l cif_gt                                     ;cifgt
00044DAA <AmiBlitz3.ab2@28704>            Ds.l 1                                          ;0
00044DAE <AmiBlitz3.ab2@28705>            Dc.l cif_le                                     ;cifle
00044DB2 <AmiBlitz3.ab2@28706>            Dc.l cif_ne                                     ;cifne
00044DB6 <AmiBlitz3.ab2@28707>            Dc.l cif_le                                     ;cifge
00044DBA <AmiBlitz3.ab2@28708>            Ds.l 1                                          ;0
00044DBE <AmiBlitz3.ab2@28709>            Dc.l cif_ge                                     ;cifge
00044DC2 <AmiBlitz3.ab2@28710>            Dc.l cif_ne                                     ;cifne
00044DC6 <AmiBlitz3.ab2@28711>            Dc.l cif_ge                                     ;cifge
00044DCA <AmiBlitz3.ab2@28712>            Ds.l 1                                          ;0
00044DCE <AmiBlitz3.ab2@28715>            Dc.l do_newtype                                 ;donewtype
00044DD2 <AmiBlitz3.ab2@28716>            Dc.l do_end                                     ;doend
00044DD6 <AmiBlitz3.ab2@28717>            Dc.l do_let                                     ;dolet
00044DDA <AmiBlitz3.ab2@28718>            Dc.l do_dim                                     ;dodim
00044DDE <AmiBlitz3.ab2@28719>            Dc.l do_goto                                    ;dogoto
00044DE2 <AmiBlitz3.ab2@28720>            Dc.l do_gosub                                   ;dogosub
00044DE6 <AmiBlitz3.ab2@28721>            Dc.l do_return                                  ;doreturn
00044DEA <AmiBlitz3.ab2@28722>            Dc.l do_statement                               ;dostatement
00044DEE <AmiBlitz3.ab2@28723>            Dc.l do_function                                ;dofunc
00044DF2 <AmiBlitz3.ab2@28724>            Dc.l do_mousewait                               ;domwait
00044DF6 <AmiBlitz3.ab2@28725>            Dc.l do_if                                      ;doif
00044DFA <AmiBlitz3.ab2@28726>            Dc.l do_while                                   ;dowhile
00044DFE <AmiBlitz3.ab2@28727>            Dc.l do_Macro                                   ;domacro
00044E02 <AmiBlitz3.ab2@28728>            Dc.l do_select                                  ;doselect
00044E06 <AmiBlitz3.ab2@28729>            Dc.l do_case                                    ;docase
00044E0A <AmiBlitz3.ab2@28730>            Dc.l do_default                                 ;dodefault
00044E0E <AmiBlitz3.ab2@28731>            Dc.l do_AsmExit                                 ;doasmexit
00044E12 <AmiBlitz3.ab2@28732>            Dc.l do_xinclude                                ;doxinclude
00044E16 <AmiBlitz3.ab2@28733>            Dc.l do_INCLUDE                                 ;doinclude
00044E1A <AmiBlitz3.ab2@28734>            Dc.l do_syntax                                  ;syntaxerr
00044E1E <AmiBlitz3.ab2@28735>            Dc.l do_shared                                  ;doshared
00044E22 <AmiBlitz3.ab2@28736>            Dc.l do_for                                     ;dofor
00044E26 <AmiBlitz3.ab2@28737>            Dc.l do_next                                    ;donext
00044E2A <AmiBlitz3.ab2@28738>            Dc.l syntaxerr                                  ; To
00044E2E <AmiBlitz3.ab2@28739>            Dc.l syntaxerr                                  ; Step
00044E32 <AmiBlitz3.ab2@28740>            Dc.l do_data                                    ;dodata
00044E36 <AmiBlitz3.ab2@28741>            Dc.l do_read                                    ;doread
00044E3A <AmiBlitz3.ab2@28745>            Dc.l syntaxerr                                  ; CNIF
00044E3E <AmiBlitz3.ab2@28746>            Dc.l syntaxerr                                  ; CSIF
00044E42 <AmiBlitz3.ab2@28747>            Dc.l syntaxerr                                  ; CELSE
00044E46 <AmiBlitz3.ab2@28748>            Dc.l syntaxerr                                  ; CEND
00044E4A <AmiBlitz3.ab2@28749>            Dc.l do_cerr                                    ;docerr
00044E4E <AmiBlitz3.ab2@28750>            Dc.l do_then                                    ;dothen
00044E52 <AmiBlitz3.ab2@28751>            Dc.l do_else                                    ;doelse
00044E56 <AmiBlitz3.ab2@28752>            Dc.l do_even4                                   ;doeven4
00044E5A <AmiBlitz3.ab2@28753>            Dc.l do_even8                                   ;doeven8
00044E5E <AmiBlitz3.ab2@28755>            Dc.l do_dc                                      ;dodc
00044E62 <AmiBlitz3.ab2@28756>            Dc.l do_ds                                      ;dods
00044E66 <AmiBlitz3.ab2@28757>            Dc.l do_even                                    ;doeven
00044E6A <AmiBlitz3.ab2@28758>            Dc.l do_dcb                                     ;dodcb
00044E6E <AmiBlitz3.ab2@28759>            Dc.l do_setreg                                  ;dosetreg
00044E72 <AmiBlitz3.ab2@28760>            Dc.l do_IncBin                                  ;doincbin
00044E76 <AmiBlitz3.ab2@28761>            Dc.l do_free                                    ;dofree
00044E7A <AmiBlitz3.ab2@28762>            Dc.l do_use                                     ;douse
00044E7E <AmiBlitz3.ab2@28763>            Dc.l do_Stop                                    ;dostop
00044E82 <AmiBlitz3.ab2@28764>            Dc.l do_Cont                                    ;docont
00044E86 <AmiBlitz3.ab2@28765>            Dc.l syntaxerr                                  ;syntaxeer
00044E8A <AmiBlitz3.ab2@28766>            Dc.l do_SetInt                                  ;dosetint
00044E8E <AmiBlitz3.ab2@28767>            Dc.l do_ClrInt                                  ;doclrint
00044E92 <AmiBlitz3.ab2@28768>            Dc.l do_MaxLen                                  ;domaxlen
00044E96 <AmiBlitz3.ab2@28769>            Dc.l do_DEFTYPE                                 ;dodeftype
00044E9A <AmiBlitz3.ab2@28770>            Dc.l do_BLITZ                                   ;doblitz
00044E9E <AmiBlitz3.ab2@28771>            Dc.l do_AMIGA                                   ;doamiga
00044EA2 <AmiBlitz3.ab2@28772>            Dc.l do_QAMIGA                                  ;doqamiga
00044EA6 <AmiBlitz3.ab2@28773>            Dc.l do_VWait                                   ;dovwait
00044EAA <AmiBlitz3.ab2@28774>            Dc.l do_LibJsr                                  ;dolibjsr
00044EAE <AmiBlitz3.ab2@28775>            Dc.l do_TokeJsr                                 ;dotokejsr
00044EB2 <AmiBlitz3.ab2@28776>            Dc.l do_BLibJsr                                 ;doblibjsr
00044EB6 <AmiBlitz3.ab2@28777>            Dc.l _extb                                      ;syntaxerr
00044EBA <AmiBlitz3.ab2@28781>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
00044EBE <AmiBlitz3.ab2@28782>            Dc.l do_SetErr                                  ;doseterr
00044EC2 <AmiBlitz3.ab2@28783>            Dc.l do_ClrErr                                  ;doclrerr
00044EC6 <AmiBlitz3.ab2@28784>            Dc.l syntaxerr                                  ;syntaxerr
00044ECA <AmiBlitz3.ab2@28785>            Dc.l do_ErrFail                                 ;doerrfail
00044ECE <AmiBlitz3.ab2@28786>            Dc.l syntaxerr
00044ED2 <AmiBlitz3.ab2@28787>            Dc.l syntaxerr                                  ;mod
00044ED6 <AmiBlitz3.ab2@28788>            Dc.l syntaxerr                                  ;Pi
00044EDA <AmiBlitz3.ab2@28789>            Dc.l do_Repeat                                  ;dorepeat
00044EDE <AmiBlitz3.ab2@28790>            Dc.l do_Until                                   ;dountil
00044EE2 <AmiBlitz3.ab2@28791>            Dc.l do_PutReg                                  ;doputreg
00044EE6 <AmiBlitz3.ab2@28792>            Dc.l do_Pop                                     ;dopop
00044EEA <AmiBlitz3.ab2@28793>            Dc.l do_INCDIR                                  ;doincdir
00044EEE <AmiBlitz3.ab2@28794>            Dc.l mydo_Endif2                                ;mydoendif2
00044EF2 <AmiBlitz3.ab2@28795>            Dc.l do_Wend                                    ;dowend
00044EF6 <AmiBlitz3.ab2@28796>            Dc.l do_SysJsr                                  ;dosysjsr
00044EFA <AmiBlitz3.ab2@28797>            Dc.l do_WBStartup                               ;dowbstartup
00044EFE <AmiBlitz3.ab2@28798>            Dc.l syntaxerr
00044F02 <AmiBlitz3.ab2@28799>            Dc.l do_Ongo                                    ;doongo
00044F06 <AmiBlitz3.ab2@28800>            Dc.l syntaxerr
00044F0A <AmiBlitz3.ab2@28801>            Dc.l do_Forever                                 ;doforever
00044F0E <AmiBlitz3.ab2@28802>            Dc.l do_Restore                                 ;dorestore
00044F12 <AmiBlitz3.ab2@28803>            Dc.l do_Exchange                                ;doexchange
00044F16 <AmiBlitz3.ab2@28804>            Dc.l do_USEPATH                                 ;dousepath
00044F1A <AmiBlitz3.ab2@28805>            Dc.l do_CloseEd                                 ;doclosed
00044F1E <AmiBlitz3.ab2@28806>            Dc.l do_NoCli                                   ;donocli
00044F22 <AmiBlitz3.ab2@28807>            Dc.l syntaxerr                                  ;syntaxerr
00044F26 <AmiBlitz3.ab2@28808>            Dc.l syntaxerr                                  ;syntaxerr
00044F2A <AmiBlitz3.ab2@28809>            Dc.l syntaxerr                                  ;syntaxerr
00044F2E <AmiBlitz3.ab2@28810>            Dc.l syntaxerr                                  ;syntaxerr
00044F32 <AmiBlitz3.ab2@28811>            Dc.l syntaxerr                                  ;syntaxerr
00044F36 <AmiBlitz3.ab2@28812>            Dc.l do_runerrson                               ;dorunerrson
00044F3A <AmiBlitz3.ab2@28813>            Dc.l do_runerrsoff                              ;dorunerrsoff
00044F3E <AmiBlitz3.ab2@28814>            Dc.l do_uselastpath
00044F42 <AmiBlitz3.ab2@28815>            Dc.l do_regload
00044F46 <AmiBlitz3.ab2@28816>            Dc.l do_regsave
00044F4A <AmiBlitz3.ab2@28817>            Dc.l do_Object
00044F4E <AmiBlitz3.ab2@28818>            Dc.l do_usepath2
00044F52 <AmiBlitz3.ab2@28819>            Dc.l do_LastRunErrsMode
00044F56 <AmiBlitz3.ab2@28842> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
00044F5A <AmiBlitz3.ab2@28843>            Dc.l menu_run
00044F5E <AmiBlitz3.ab2@28844>            Dc.l menu_createexecutable
00044F62 <AmiBlitz3.ab2@28845>            Dc.l menu_compileroptions
00044F66 <AmiBlitz3.ab2@28846>            Dc.l menu_createresidentfile
00044F6A <AmiBlitz3.ab2@28847>            Dc.l menu_viewnewtypes
00044F6E <AmiBlitz3.ab2@28848>            Dc.l menu_simcliarguments
00044F72 <AmiBlitz3.ab2@28849>            Dc.l menu_calculator
00044F76 <AmiBlitz3.ab2@28850>            Dc.l menu_reloadlibs
00044F7A <AmiBlitz3.ab2@28851>            Dc.l menu_loaddebugmodule
00044F7E <AmiBlitz3.ab2@28852>            Dc.l menu_dummyfunc
00044F82 <AmiBlitz3.ab2@28853>            Dc.l menu_newcreate
00044F86 <AmiBlitz3.ab2@28854>            Dc.l menu_dummyfunc
00044F8A <AmiBlitz3.ab2@28855>            Dc.l toggledebug
00044F8E <AmiBlitz3.ab2@28856>            Dc.l menu_dummyfunc
00044F92 <AmiBlitz3.ab2@28857>            Dc.l menu_dummyfunc
00044F94 <AmiBlitz3.ab2@28858> Even4
00044FBE <AmiBlitz3.ab2@28862> !basic
00044FEC <AmiBlitz3.ab2@28863> error{"Inavlid amiblitz3 menu item called!"}
0004500A <AmiBlitz3.ab2@28864> !asm
0004500C <AmiBlitz3.ab2@28865> RTS
0004500D <AmiBlitz3.ab2@28871> set_autorun:               Dc.b $00
00045012 <AmiBlitz3.ab2@28872> autorun:                   Dc.b $80,$01,$01,$00,$01
00045013 <AmiBlitz3.ab2@28874> set_interruptcheck:        Dc.b $00
00045018 <AmiBlitz3.ab2@28875> interruptcheck             Dc.b $80,$01,$01,$00,$01
00045019 <AmiBlitz3.ab2@28877> set_assemblercheck:        Ds.b 1
0004501E <AmiBlitz3.ab2@28878> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0004501F <AmiBlitz3.ab2@28880> set_overflowcheck:         Ds.b 1
00045024 <AmiBlitz3.ab2@28881> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0004502A <AmiBlitz3.ab2@28883> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
00045030 <AmiBlitz3.ab2@28884> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
00045036 <AmiBlitz3.ab2@28885> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
00045038 <AmiBlitz3.ab2@28886> Even4
00045044 <AmiBlitz3.ab2@28889> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0004504C <AmiBlitz3.ab2@28890>                            Dc.l $00000000,$00000000
00045054 <AmiBlitz3.ab2@28891> tstsize1:                  Dc.l $00000100,$000003E9
00045058 <AmiBlitz3.ab2@28892> tstsize2:                  Dc.l $00000100
0004505C <AmiBlitz3.ab2@28893> tstend:                    Dc.l $000003EC
00045064 <AmiBlitz3.ab2@28894> tstsize3:                  Ds.l 2
00045068 <AmiBlitz3.ab2@28895> tstdone:                   Dc.l $000003F2
0004506C <AmiBlitz3.ab2@28898> edstruct:                  Dc.l tokens                     ;data for ted
00045070 <AmiBlitz3.ab2@28902>                            Dc.l 0
00045074 <AmiBlitz3.ab2@28904>                            Dc.l read_xtrafile              ;load .xtra routine
00045078 <AmiBlitz3.ab2@28905>                            Dc.l write_xtrafile             ;save .xtra routine
0004507C <AmiBlitz3.ab2@28906>                            Dc.l call_menuentry             ;Menu Routine
00045080 <AmiBlitz3.ab2@28907>                            Ds.l 1                          ;cleanup (?)
00045084 <AmiBlitz3.ab2@28908>                            Dc.b ":",34,".;"
00045180 <AmiBlitz3.ab2@28911> 
00045260 <AmiBlitz3.ab2@28912>                            Ds.l 56
00045262 <AmiBlitz3.ab2@28917> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
00045266 <AmiBlitz3.ab2@28920> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00045268 <AmiBlitz3.ab2@28921>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0004526C <AmiBlitz3.ab2@28922>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
00045272 <AmiBlitz3.ab2@28926> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
00045274 <AmiBlitz3.ab2@28930>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
00045278 <AmiBlitz3.ab2@28933> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0004527C <AmiBlitz3.ab2@28936> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
00045280 <AmiBlitz3.ab2@28937>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
00045282 <AmiBlitz3.ab2@28943>                            Dc.b $4A,$40                                             ;TST.W   D0
00045284 <AmiBlitz3.ab2@28947>                            Dc.b $4A,$80                                             ;TST.L   D0
00045286 <AmiBlitz3.ab2@28950> nops8:                     Dc.b $4E,$71                                             ;NOP
00045288 <AmiBlitz3.ab2@28951>                            Dc.b $4E,$71                                             ;NOP
0004528A <AmiBlitz3.ab2@28952>                            Dc.b $4E,$71                                             ;NOP
0004528C <AmiBlitz3.ab2@28953>                            Dc.b $4E,$71                                             ;NOP
0004528E <AmiBlitz3.ab2@28954> nops4:                     Dc.b $4E,$71                                             ;NOP
00045290 <AmiBlitz3.ab2@28956>                            Dc.b $4E,$71                                             ;NOP
00045292 <AmiBlitz3.ab2@28957>                            Dc.b $4E,$71                                             ;NOP
00045294 <AmiBlitz3.ab2@28958>                            Dc.b $4E,$71                                             ;NOP
00045298 <AmiBlitz3.ab2@28962> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0004529C <AmiBlitz3.ab2@28965> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0004529E <AmiBlitz3.ab2@28968> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
000452A0 <AmiBlitz3.ab2@28971> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
000452A2 <AmiBlitz3.ab2@28972>                            Dc.b $C1,$8B                                             ;EXG D0,A3
000452A6 <AmiBlitz3.ab2@28973>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
000452A8 <AmiBlitz3.ab2@28974>                            Dc.b $C1,$8B                                             ;EXG D0,A3
000452AA <AmiBlitz3.ab2@28980> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
000452AE <AmiBlitz3.ab2@28981>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
000452B0 <AmiBlitz3.ab2@28986> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
000452B4 <AmiBlitz3.ab2@28987>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
000452B6 <AmiBlitz3.ab2@28991> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
000452B8 <AmiBlitz3.ab2@28992>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
000452BC <AmiBlitz3.ab2@28998> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
000452BE <AmiBlitz3.ab2@28999>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
000452C2 <AmiBlitz3.ab2@29000>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
000452C6 <AmiBlitz3.ab2@29004> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
000452C8 <AmiBlitz3.ab2@29005>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
000452CC <AmiBlitz3.ab2@29006>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
000452CE <AmiBlitz3.ab2@29009> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
000452D2 <AmiBlitz3.ab2@29012> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
000452D6 <AmiBlitz3.ab2@29015> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
000452DA <AmiBlitz3.ab2@29018> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
000452DE <AmiBlitz3.ab2@29022>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
000452E0 <AmiBlitz3.ab2@29023>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
000452E2 <AmiBlitz3.ab2@29024>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
000452E6 <AmiBlitz3.ab2@29029>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
000452E8 <AmiBlitz3.ab2@29030>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
000452EA <AmiBlitz3.ab2@29031>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
000452EE <AmiBlitz3.ab2@29036>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
000452F0 <AmiBlitz3.ab2@29037>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
000452F2 <AmiBlitz3.ab2@29038>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
000452F6 <AmiBlitz3.ab2@29043>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
000452F8 <AmiBlitz3.ab2@29044>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
000452FA <AmiBlitz3.ab2@29045>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
000452FE <AmiBlitz3.ab2@29046>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
00045300 <AmiBlitz3.ab2@29047>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
00045304 <AmiBlitz3.ab2@29052>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00045306 <AmiBlitz3.ab2@29053>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0004530A <AmiBlitz3.ab2@29054>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0004530C <AmiBlitz3.ab2@29055>                            Dc.b $4A,$57                                             ;TST.W   (A7)
00045310 <AmiBlitz3.ab2@29056>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
00045312 <AmiBlitz3.ab2@29057>                            Dc.b $C1,$41                                             ;EXG D0,D1
00045314 <AmiBlitz3.ab2@29060>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
00045318 <AmiBlitz3.ab2@29065>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0004531A <AmiBlitz3.ab2@29066>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0004531E <AmiBlitz3.ab2@29067>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
00045320 <AmiBlitz3.ab2@29068>                            Dc.b $4A,$57                                             ;TST.W   (A7)
00045324 <AmiBlitz3.ab2@29069>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
00045326 <AmiBlitz3.ab2@29070>                            Dc.b $C1,$41                                             ;EXG D0,D1
00045328 <AmiBlitz3.ab2@29073>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0004532C <AmiBlitz3.ab2@29078>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0004532E <AmiBlitz3.ab2@29079>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00045332 <AmiBlitz3.ab2@29080>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
00045334 <AmiBlitz3.ab2@29081>                            Dc.b $4A,$57                                             ;TST.W   (A7)
00045338 <AmiBlitz3.ab2@29082>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0004533A <AmiBlitz3.ab2@29083>                            Dc.b $C1,$41                                             ;EXG D0,D1
0004533C <AmiBlitz3.ab2@29086>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
00045340 <AmiBlitz3.ab2@29091>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
00045342 <AmiBlitz3.ab2@29092>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00045346 <AmiBlitz3.ab2@29093>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0004534C <AmiBlitz3.ab2@29094>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
00045350 <AmiBlitz3.ab2@29095>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
00045352 <AmiBlitz3.ab2@29096>                            Dc.b $C1,$41                                             ;EXG D0,D1
00045356 <AmiBlitz3.ab2@29103>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
00045358 <AmiBlitz3.ab2@29107> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0004535A <AmiBlitz3.ab2@29110> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0004535E <AmiBlitz3.ab2@29113> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
00045360 <AmiBlitz3.ab2@29114> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
00045364 <AmiBlitz3.ab2@29117> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
00045366 <AmiBlitz3.ab2@29120> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0004536A <AmiBlitz3.ab2@29123> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0004536C <AmiBlitz3.ab2@29127>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0004536E <AmiBlitz3.ab2@29130> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
00045370 <AmiBlitz3.ab2@29133> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
00045374 <AmiBlitz3.ab2@29136> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
00045378 <AmiBlitz3.ab2@29139> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0004537C <AmiBlitz3.ab2@29142> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0004537E <AmiBlitz3.ab2@29145> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
00045380 <AmiBlitz3.ab2@29148> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
00045384 <AmiBlitz3.ab2@29151> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0004538A <AmiBlitz3.ab2@29152>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0004538C <AmiBlitz3.ab2@29153>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
00045390 <AmiBlitz3.ab2@29157> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
00045392 <AmiBlitz3.ab2@29158>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
00045394 <AmiBlitz3.ab2@29162> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
00045398 <AmiBlitz3.ab2@29165> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0004539A <AmiBlitz3.ab2@29169>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0004539C <AmiBlitz3.ab2@29173>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0004539E <AmiBlitz3.ab2@29177>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
000453A2 <AmiBlitz3.ab2@29180> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
000453A6 <AmiBlitz3.ab2@29183> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
000453A8 <AmiBlitz3.ab2@29186> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
000453AA <AmiBlitz3.ab2@29189> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
000453AC <AmiBlitz3.ab2@29192> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
000453B0 <AmiBlitz3.ab2@29195> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
000453B4 <AmiBlitz3.ab2@29198> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
000453B6 <AmiBlitz3.ab2@29201> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
000453B8 <AmiBlitz3.ab2@29205>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
000453BC <AmiBlitz3.ab2@29208>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
000453BE <AmiBlitz3.ab2@29214>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
000453C2 <AmiBlitz3.ab2@29217>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
000453C4 <AmiBlitz3.ab2@29223>                            Dc.b $CB,$4C                                             ;EXG A5,A4
000453C8 <AmiBlitz3.ab2@29227> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
000453CA <AmiBlitz3.ab2@29230> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
000453CC <AmiBlitz3.ab2@29234>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
000453CE <AmiBlitz3.ab2@29238>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
000453D4 <AmiBlitz3.ab2@29241> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
000453DA <AmiBlitz3.ab2@29244> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
000453E2 <AmiBlitz3.ab2@29248> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
000453E6 <AmiBlitz3.ab2@29249>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
000453E8 <AmiBlitz3.ab2@29253> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
000453EC <AmiBlitz3.ab2@29256> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
000453F0 <AmiBlitz3.ab2@29259> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
000453F4 <AmiBlitz3.ab2@29262> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
000453F8 <AmiBlitz3.ab2@29263> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
000453FC <AmiBlitz3.ab2@29267>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
00045400 <AmiBlitz3.ab2@29269>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
00045402 <AmiBlitz3.ab2@29272> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00045406 <AmiBlitz3.ab2@29275> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
00045408 <AmiBlitz3.ab2@29278> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0004540A <AmiBlitz3.ab2@29279>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0004540C <AmiBlitz3.ab2@29280>                            Dc.b $4A,$92                                             ;TST.L   (A2)
00045410 <AmiBlitz3.ab2@29281> 
00045412 <AmiBlitz3.ab2@29282>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
00045414 <AmiBlitz3.ab2@29283>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
00045416 <AmiBlitz3.ab2@29284>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0004541C <AmiBlitz3.ab2@29286>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0004541E <AmiBlitz3.ab2@29291> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
00045420 <AmiBlitz3.ab2@29292>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
00045422 <AmiBlitz3.ab2@29296> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
00045426 <AmiBlitz3.ab2@29299> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
00045428 <AmiBlitz3.ab2@29302> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0004542A <AmiBlitz3.ab2@29306>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0004542C <AmiBlitz3.ab2@29309> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
00045430 <AmiBlitz3.ab2@29312> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00045432 <AmiBlitz3.ab2@29313>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
00045436 <AmiBlitz3.ab2@29317> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0004543A <AmiBlitz3.ab2@29318> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0004543E <AmiBlitz3.ab2@29322> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
00045442 <AmiBlitz3.ab2@29326> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
00045448 <AmiBlitz3.ab2@29330> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0004544E <AmiBlitz3.ab2@29333> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
00045452 <AmiBlitz3.ab2@29337> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
00045456 <AmiBlitz3.ab2@29341>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0004545A <AmiBlitz3.ab2@29342>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
00045460 <AmiBlitz3.ab2@29347>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
00045464 <AmiBlitz3.ab2@29352>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
00045466 <AmiBlitz3.ab2@29357>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0004546A <AmiBlitz3.ab2@29361>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0004546C <AmiBlitz3.ab2@29365> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0004546E <AmiBlitz3.ab2@29368> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
00045470 <AmiBlitz3.ab2@29369>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
00045474 <AmiBlitz3.ab2@29373>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
00045478 <AmiBlitz3.ab2@29377> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0004547C <AmiBlitz3.ab2@29380> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0004547E <AmiBlitz3.ab2@29383> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
00045482 <AmiBlitz3.ab2@29386> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
00045484 <AmiBlitz3.ab2@29389> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0004548D <AmiBlitz3.ab2@29393>                            Dc.b "ram:test",0
0004548E <AmiBlitz3.ab2@29394> Even
00045492 <AmiBlitz3.ab2@29398>                            Dc.l  0                          ;was  Ds.w 3 org source
00045494 <AmiBlitz3.ab2@29400>                            Dc.w  0
00045498 <AmiBlitz3.ab2@29403> _mathffpbase:              Ds.l 1                           ;maths org source
0004549A <AmiBlitz3.ab2@29404> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0004549C <AmiBlitz3.ab2@29405> typelen:                   Ds.w 1
000454A0 <AmiBlitz3.ab2@29406> prevtype:                  Ds.l 1
000454A4 <AmiBlitz3.ab2@29407> lastsourcepos:             Ds.l 1                           ;prevloc org source
000454A6 <AmiBlitz3.ab2@29408> lastchar:                  Ds.w 1
000454AA <AmiBlitz3.ab2@29409> thistype:                  Ds.l 1
000454AE <AmiBlitz3.ab2@29410> errstack:                  Ds.l 1
000454B2 <AmiBlitz3.ab2@29411> errcont:                   Ds.l 1
000454B4 <AmiBlitz3.ab2@29412> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
000454B6 <AmiBlitz3.ab2@29413> linesleft:                 Ds.w 1
000454BA <AmiBlitz3.ab2@29414> sourceline:                Ds.l 1                          ;thisitem org source
000454BE <AmiBlitz3.ab2@29415> varbase:                   Ds.l 1                          ;firstvar org source
000454C2 <AmiBlitz3.ab2@29416> alllocals:                 Ds.l 1
000454C6 <AmiBlitz3.ab2@29417> firstlocal:                Ds.l 1
000454CA <AmiBlitz3.ab2@29418> firstglob:                 Ds.l 1
000454CC <AmiBlitz3.ab2@29419> globalvarpointer:          Ds.w 1                          ;varoff org source
000454CE <AmiBlitz3.ab2@29420> locvaroff:                 Ds.w 1
000454D2 <AmiBlitz3.ab2@29421> firstitem_:                 Ds.l 1
000454D4 <AmiBlitz3.ab2@29422> numlines_org:              Ds.w 1                          ;numlines org source
000454D6 <AmiBlitz3.ab2@29423> returncode_org:            Ds.w 1                          ;returncode org source
000454DA <AmiBlitz3.ab2@29424> firstiff:                  Ds.l 1                          ;firstif org source
000454DE <AmiBlitz3.ab2@29425> ptr_seg_ped:               Ds.l 1                          ;segadd org source
000456DE <AmiBlitz3.ab2@29426> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
000456EE <AmiBlitz3.ab2@29427> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
000458EE <AmiBlitz3.ab2@29428> str_libfilename:           Ds.b #MAX_STRINGSIZE
00045AEE <AmiBlitz3.ab2@29429> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
00045CEE <AmiBlitz3.ab2@29430> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
00045CF2 <AmiBlitz3.ab2@29432> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
00045EF2 <AmiBlitz3.ab2@29433> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
000460F2 <AmiBlitz3.ab2@29435> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
000460F6 <AmiBlitz3.ab2@29436> size_acidlibs:             Ds.l 1                          ;acidlibs org source
000462F6 <AmiBlitz3.ab2@29437> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
000462FA <AmiBlitz3.ab2@29438> size_deflibs:              Ds.l 1                          ;deflibs org source
000464FA <AmiBlitz3.ab2@29439> str_tempfilename:          Ds.b #MAX_STRINGSIZE
000466FA <AmiBlitz3.ab2@29441> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
000466FE <AmiBlitz3.ab2@29442> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
000468FE <AmiBlitz3.ab2@29444> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
00046902 <AmiBlitz3.ab2@29450>   Dc.b $E3,$10,$00,$01                                     ;icondata  
00046906 <AmiBlitz3.ab2@29451>   Dc.b $00,$00,$00,$00
0004690A <AmiBlitz3.ab2@29452>   Dc.b $00,$19,$00,$11
0004690E <AmiBlitz3.ab2@29453>   Dc.b $00,$2E,$00,$18
00046912 <AmiBlitz3.ab2@29454>   Dc.b $00,$04,$00,$03
00046916 <AmiBlitz3.ab2@29455>   Dc.b $00,$01,$00,$22
0004691A <AmiBlitz3.ab2@29456>   Dc.b $73,$68,$00,$00
0004691E <AmiBlitz3.ab2@29457>   Dc.b $00,$00,$00,$00
00046922 <AmiBlitz3.ab2@29458>   Dc.b $00,$00,$00,$00
00046926 <AmiBlitz3.ab2@29459>   Dc.b $00,$00,$00,$00
0004692A <AmiBlitz3.ab2@29460>   Dc.b $00,$00,$00,$00
0004692E <AmiBlitz3.ab2@29461>   Dc.b $00,$00,$00,$00
00046932 <AmiBlitz3.ab2@29462>   Dc.b $03,$22,$00,$21
00046936 <AmiBlitz3.ab2@29463>   Dc.b $3C,$28,$00,$22
0004693A <AmiBlitz3.ab2@29464>   Dc.b $6E,$C0,$00,$00
0004693E <AmiBlitz3.ab2@29465>   Dc.b $00,$12,$00,$00
00046942 <AmiBlitz3.ab2@29466>   Dc.b $00,$0E,$00,$00
00046946 <AmiBlitz3.ab2@29467>   Dc.b $00,$00,$00,$00
0004694A <AmiBlitz3.ab2@29468>   Dc.b $00,$00,$00,$00
0004694E <AmiBlitz3.ab2@29469>   Dc.b $00,$00,$00,$00
00046952 <AmiBlitz3.ab2@29470>   Dc.b $00,$00,$00,$2E
00046956 <AmiBlitz3.ab2@29471>   Dc.b $00,$17,$00,$02
0004695A <AmiBlitz3.ab2@29472>   Dc.b $00,$01,$8E,$80
0004695E <AmiBlitz3.ab2@29473>   Dc.b $03,$00,$00,$00
00046962 <AmiBlitz3.ab2@29474>   Dc.b $00,$00,$FF,$FF
00046966 <AmiBlitz3.ab2@29475>   Dc.b $FF,$FF,$FF,$FC
0004696A <AmiBlitz3.ab2@29476>   Dc.b $80,$00,$00,$00
0004696E <AmiBlitz3.ab2@29477>   Dc.b $00,$00,$80,$00
00046972 <AmiBlitz3.ab2@29478>   Dc.b $00,$3F,$BB,$40
00046976 <AmiBlitz3.ab2@29479>   Dc.b $80,$1F,$C0,$00
0004697A <AmiBlitz3.ab2@29480>   Dc.b $00,$00,$80,$3F
0004697E <AmiBlitz3.ab2@29481>   Dc.b $C0,$0F,$BB,$40
00046982 <AmiBlitz3.ab2@29482>   Dc.b $80,$1F,$C0,$00
00046986 <AmiBlitz3.ab2@29483>   Dc.b $00,$00,$8E,$00
0004698A <AmiBlitz3.ab2@29484>   Dc.b $F8,$00,$00,$00
0004698E <AmiBlitz3.ab2@29485>   Dc.b $8F,$01,$FF,$00
00046992 <AmiBlitz3.ab2@29486>   Dc.b $3B,$40,$81,$E3
00046996 <AmiBlitz3.ab2@29487>   Dc.b $F7,$C0,$00,$00
0004699A <AmiBlitz3.ab2@29488>   Dc.b $80,$7F,$F8,$70
0004699E <AmiBlitz3.ab2@29489>   Dc.b $3B,$40,$80,$0F
000469A2 <AmiBlitz3.ab2@29490>   Dc.b $7C,$E0,$00,$00
000469A6 <AmiBlitz3.ab2@29491>   Dc.b $80,$00,$FD,$80
000469AA <AmiBlitz3.ab2@29492>   Dc.b $00,$00,$80,$01
000469AE <AmiBlitz3.ab2@29493>   Dc.b $F6,$00,$FB,$40
000469B2 <AmiBlitz3.ab2@29494>   Dc.b $80,$03,$EF,$00
000469B6 <AmiBlitz3.ab2@29495>   Dc.b $00,$00,$80,$07
000469BA <AmiBlitz3.ab2@29496>   Dc.b $87,$80,$3B,$40
000469BE <AmiBlitz3.ab2@29497>   Dc.b $80,$0F,$01,$C0
000469C2 <AmiBlitz3.ab2@29498>   Dc.b $00,$00,$80,$03
000469C6 <AmiBlitz3.ab2@29499>   Dc.b $F0,$70,$1D,$40
000469CA <AmiBlitz3.ab2@29500>   Dc.b $80,$00,$18,$1C
000469CE <AmiBlitz3.ab2@29501>   Dc.b $00,$00,$80,$00
000469D2 <AmiBlitz3.ab2@29502>   Dc.b $10,$06,$03,$40
000469D6 <AmiBlitz3.ab2@29503>   Dc.b $80,$00,$20,$1F
000469DA <AmiBlitz3.ab2@29504>   Dc.b $00,$00,$80,$00
000469DE <AmiBlitz3.ab2@29505>   Dc.b $00,$00,$01,$40
000469E2 <AmiBlitz3.ab2@29506>   Dc.b $80,$00,$00,$00
000469E6 <AmiBlitz3.ab2@29507>   Dc.b $00,$00,$80,$00
000469EA <AmiBlitz3.ab2@29508>   Dc.b $00,$00,$00,$00
000469EE <AmiBlitz3.ab2@29509>   Dc.b $00,$00,$00,$00
000469F2 <AmiBlitz3.ab2@29510>   Dc.b $00,$00,$00,$00
000469F6 <AmiBlitz3.ab2@29511>   Dc.b $00,$00,$00,$04
000469FA <AmiBlitz3.ab2@29512>   Dc.b $00,$3F,$FC,$01
000469FE <AmiBlitz3.ab2@29513>   Dc.b $BB,$44,$00,$60
00046A02 <AmiBlitz3.ab2@29514>   Dc.b $FE,$00,$00,$04
00046A06 <AmiBlitz3.ab2@29515>   Dc.b $00,$CF,$FF,$01
00046A0A <AmiBlitz3.ab2@29516>   Dc.b $BB,$44,$1F,$EF
00046A0E <AmiBlitz3.ab2@29517>   Dc.b $FF,$00,$00,$04
00046A12 <AmiBlitz3.ab2@29518>   Dc.b $33,$FF,$FF,$E0
00046A16 <AmiBlitz3.ab2@29519>   Dc.b $00,$04,$37,$FE
00046A1A <AmiBlitz3.ab2@29520>   Dc.b $7F,$FC,$1B,$44
00046A1E <AmiBlitz3.ab2@29521>   Dc.b $0F,$9C,$FF,$FF
00046A22 <AmiBlitz3.ab2@29522>   Dc.b $00,$04,$03,$E3
00046A26 <AmiBlitz3.ab2@29523>   Dc.b $FF,$FF,$DB,$44
00046A2A <AmiBlitz3.ab2@29524>   Dc.b $00,$7F,$BF,$FF
00046A2E <AmiBlitz3.ab2@29525>   Dc.b $80,$04,$00,$0F
00046A32 <AmiBlitz3.ab2@29526>   Dc.b $3F,$FE,$00,$04
00046A36 <AmiBlitz3.ab2@29527>   Dc.b $00,$06,$7F,$F8
00046A3A <AmiBlitz3.ab2@29528>   Dc.b $1B,$44,$00,$0C
00046A3E <AmiBlitz3.ab2@29529>   Dc.b $F7,$FC,$00,$04
00046A42 <AmiBlitz3.ab2@29530>   Dc.b $00,$19,$F9,$FE
00046A46 <AmiBlitz3.ab2@29531>   Dc.b $1B,$44,$00,$33
00046A4A <AmiBlitz3.ab2@29532>   Dc.b $FE,$7F,$00,$04
00046A4E <AmiBlitz3.ab2@29533>   Dc.b $00,$0F,$FF,$BF
00046A52 <AmiBlitz3.ab2@29534>   Dc.b $CD,$44,$00,$03
00046A56 <AmiBlitz3.ab2@29535>   Dc.b $EF,$EF,$F0,$04
00046A5A <AmiBlitz3.ab2@29536>   Dc.b $00,$00,$7F,$DF
00046A5E <AmiBlitz3.ab2@29537>   Dc.b $FB,$44,$00,$00
00046A62 <AmiBlitz3.ab2@29538>   Dc.b $FF,$A7,$FC,$04
00046A66 <AmiBlitz3.ab2@29539>   Dc.b $00,$00,$7E,$3F
00046A6A <AmiBlitz3.ab2@29540>   Dc.b $FD,$44,$00,$00
00046A6E <AmiBlitz3.ab2@29541>   Dc.b $00,$00,$00,$04
00046A72 <AmiBlitz3.ab2@29542>   Dc.b $7F,$FF,$FF,$FF
00046A76 <AmiBlitz3.ab2@29543>   Dc.b $FF,$FC,$00,$00
00046A7A <AmiBlitz3.ab2@29544>   Dc.b $00,$01,$00,$00
00046A7D <AmiBlitz3.ab2@29545>   Dc.b $00,$00,$04
00046A83 <AmiBlitz3.ab2@29548> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
00046A84 <AmiBlitz3.ab2@29549> Even
00046A88 <AmiBlitz3.ab2@29551> sysdebug:            Dc.l $3F0
00046A8C <AmiBlitz3.ab2@29555> exelock              Ds.l 1
00049CCC <AmiBlitz3.ab2@29557> wzgui                IncBin "compiler.wizard"
00049CD0 <AmiBlitz3.ab2@29559> includesourceline    Dc.l 0
00049CD4 <AmiBlitz3.ab2@29560> linenum              Ds.l 1
00049CD8 <AmiBlitz3.ab2@29561> globallinecount      Ds.l 1
00049CF6 <AmiBlitz3.ab2@29562> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00049CFA <AmiBlitz3.ab2@29563> calc_option          Dc.l 1
00049CFE <AmiBlitz3.ab2@29564> versioninformation   Dc.l $00
00049D02 <AmiBlitz3.ab2@29565> number_of_builds     Dc.l $00
00049D04 <AmiBlitz3.ab2@29568> BSS
00049D06 <AmiBlitz3.ab2@29569> debugnest            Ds.w 1
00049D0A <AmiBlitz3.ab2@29570> instringf            Ds.l 1
00049D0E <AmiBlitz3.ab2@29571> funcscanon           Ds.l 1
00049D22 <AmiBlitz3.ab2@29572> storedebugmode       Ds.b 20
00049D26 <AmiBlitz3.ab2@29573> firsttimepref        Ds.l 1
00049D27 <AmiBlitz3.ab2@29574> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
00049D28 <AmiBlitz3.ab2@29575> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
00049D2A <AmiBlitz3.ab2@29576> nostringopt          Ds.w 1
00049DAA <AmiBlitz3.ab2@29577> path2:               Ds.l 32
00049DAE <AmiBlitz3.ab2@29578> typebase             Dc.l 0
00049DB0 <AmiBlitz3.ab2@29579> doublepeek           Dc.w 0
00049DB4 <AmiBlitz3.ab2@29580> lastoffset           Dc.l 0
00049DB6 <AmiBlitz3.ab2@29581> firsttime            Dc.w 0
00049DBA <AmiBlitz3.ab2@29582> lastdestpointer      Dc.l 0
00049DBE <AmiBlitz3.ab2@29583> prevwritedat         Dc.l 0
00049DC2 <AmiBlitz3.ab2@29584> lastsourceline       Dc.l 0
00049DC6 <AmiBlitz3.ab2@29585> lastwritedat         Dc.l 0
00049DC8 <AmiBlitz3.ab2@29586> makeexec             Dc.w 0
00049DCA <AmiBlitz3.ab2@29587> makeexec_remember    Dc.w 0
00049DCE <AmiBlitz3.ab2@29588> sharebase            Ds.l 1
00049DD2 <AmiBlitz3.ab2@29589> tempa7               Ds.l 1
00049DD4 <AmiBlitz3.ab2@29590> incnif               Ds.w 1
00049DD8 <AmiBlitz3.ab2@29591> tempstore            Ds.l 1
00049DDC <AmiBlitz3.ab2@29592> result               Ds.l 1
00049DDE <AmiBlitz3.ab2@29593> automode             Ds.w 1
00049DE0 <AmiBlitz3.ab2@29594> stackcorrect         Ds.w 1
00049DE2 <AmiBlitz3.ab2@29595> formode              Ds.w 1
00049DE6 <AmiBlitz3.ab2@29596> limitregs            Ds.l 1
00049DE8 <AmiBlitz3.ab2@29597> onestep              Ds.w 1
00049DEC <AmiBlitz3.ab2@29598> reqmode              Ds.l 1
00049E8C <AmiBlitz3.ab2@29599> inctab               Ds.l 40
00049E8E <AmiBlitz3.ab2@29600> funcoptimize         Ds.w 1
00049E92 <AmiBlitz3.ab2@29601> includeline          Ds.l 1
00049E96 <AmiBlitz3.ab2@29602> morememadd           Ds.l 1
00049E98 <AmiBlitz3.ab2@29603> objectcount          Ds.w 1
00049E9C <AmiBlitz3.ab2@29604> savefuncspace        Ds.l 1
00049EA0 <AmiBlitz3.ab2@29605> lasttrap1            Ds.l 1
00049EA4 <AmiBlitz3.ab2@29606> currentfunccall      Ds.l 1
00049EA5 <AmiBlitz3.ab2@29607> skipfunc             Ds.b 1
00049EA6 <AmiBlitz3.ab2@29608> resdisable           Ds.b 1
00049EA7 <AmiBlitz3.ab2@29609> skiptoggle           Ds.b 1
00049EA8 <AmiBlitz3.ab2@29610> developobject        Ds.b 1
00049EAA <AmiBlitz3.ab2@29611> iniffcommand         Ds.w 1
00049EAC <AmiBlitz3.ab2@29612> startoffsetmore      Ds.w 1
00049EAE <AmiBlitz3.ab2@29613> olddebugmode         Ds.w 1
00049EB2 <AmiBlitz3.ab2@29614> fpucodeglobal        Ds.l 1
00049EB6 <AmiBlitz3.ab2@29615> fpucodelocal         Ds.l 1
00049EBA <AmiBlitz3.ab2@29616> maxregs              Ds.l 1
00049EBE <AmiBlitz3.ab2@29617> fpucode              Ds.l 1
00049EC0 <AmiBlitz3.ab2@29618> firstmline           Ds.w 1
00049F00 <AmiBlitz3.ab2@29619> regtable             Ds.l 16
00049F02 <AmiBlitz3.ab2@29620> exdebug              Ds.w 1
00049F04 <AmiBlitz3.ab2@29621> a2offset2            Ds.w 1
00049F08 <AmiBlitz3.ab2@29622> parnumtemp           Ds.l 1
00049F09 <AmiBlitz3.ab2@29623> doimmediate          Ds.b 1
00049F0A <AmiBlitz3.ab2@29624> notypecheck          Ds.b 1
00049F0C <AmiBlitz3.ab2@29625> vartype              Ds.w 1
00049F0D <AmiBlitz3.ab2@29626> peekaddrsize         Ds.b 1
00049F0E <AmiBlitz3.ab2@29627> declare2             Ds.b 1
00049F10 <AmiBlitz3.ab2@29628> parameternum         Ds.w 1
00049F14 <AmiBlitz3.ab2@29629> lasttoken            Ds.l 1
00049F16 <AmiBlitz3.ab2@29630> newvariable          Ds.w 1
00049F17 <AmiBlitz3.ab2@29631> declare              Ds.b 1
00049F18 <AmiBlitz3.ab2@29632> typecheck            Ds.b 1
00049F19 <AmiBlitz3.ab2@29633> nowdeclare           Ds.b 1
00049F1A <AmiBlitz3.ab2@29634> dimkeep              Ds.b 1
00049F1B <AmiBlitz3.ab2@29635> a4a5store            Ds.b 1
00049F1C <AmiBlitz3.ab2@29636> ___freetouse         Ds.b 1
00049F20 <AmiBlitz3.ab2@29637> firstiffstore        Ds.l 1
00049F24 <AmiBlitz3.ab2@29638> destpointer2         Ds.l 1
00049F28 <AmiBlitz3.ab2@29639> stackaddr            Ds.l 1
0004A02C <AmiBlitz3.ab2@29640> allowtab             Ds.b 260
0004A12C <AmiBlitz3.ab2@29641> templine             Ds.b 256
0004A12E <AmiBlitz3.ab2@29642> thenmode             Ds.w 1
0004A130 <AmiBlitz3.ab2@29643> temp                 Ds.w 1
0004A132 <AmiBlitz3.ab2@29644> tempregnum           Ds.w 1
0004A136 <AmiBlitz3.ab2@29646> numlines2            Ds.l 1
0004A13A <AmiBlitz3.ab2@29647> numlines             Ds.l 1
0004A13C <AmiBlitz3.ab2@29648> exmac                Ds.w 1
0004A13E <AmiBlitz3.ab2@29649> returncode           Ds.w 1
0004A142 <AmiBlitz3.ab2@29650> fp0iff               Ds.l 1
0004A146 <AmiBlitz3.ab2@29651> fp0addr              Ds.l 1
0004A148 <AmiBlitz3.ab2@29652> fp0mode              Ds.w 1
0004A14A <AmiBlitz3.ab2@29653> fp0var               Ds.w 1
0004A14C <AmiBlitz3.ab2@29654> fastfunc             Ds.w 1
0004A14E <AmiBlitz3.ab2@29655> retmode              Ds.w 1
0004A150 <AmiBlitz3.ab2@29656> parnum               Ds.w 1
0004A152 <AmiBlitz3.ab2@29657> regmask              Ds.w 1
0004A154 <AmiBlitz3.ab2@29658> regnumfunc           Ds.w 1
0004A156 <AmiBlitz3.ab2@29659> libmode              Ds.w 1
0004A15A <AmiBlitz3.ab2@29660> oldline              Ds.l 1
0004A15E <AmiBlitz3.ab2@29661> sourceline3          Ds.l 1
0004A226 <AmiBlitz3.ab2@29662> debugstore           Ds.b 200
0004A22A <AmiBlitz3.ab2@29663> deststore            Ds.l 1
0004A22E <AmiBlitz3.ab2@29665> loada                Ds.l 1
0004A232 <AmiBlitz3.ab2@29667> currtype             Ds.l 1
0004A236 <AmiBlitz3.ab2@29668> arrayoffset          Ds.l 1
0004A23A <AmiBlitz3.ab2@29669> lastlabel            Ds.l 1
0004A23E <AmiBlitz3.ab2@29670> curtemplabel         Ds.l 1
0004A242 <AmiBlitz3.ab2@29671> sourceline2          Ds.l 1
0004A342 <AmiBlitz3.ab2@29672> chartab              Ds.b 256
0004A3BA <AmiBlitz3.ab2@29673> tempspace            Ds.b 120
000CA3CA <AmiBlitz3.ab2@29674> instrtab             Ds.l 65538*2
000D23CA <AmiBlitz3.ab2@29676> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000F23CE <AmiBlitz3.ab2@29677> replacedat           Ds.w 65538
000FA3CE <AmiBlitz3.ab2@29678> variablehash         Ds.l 8192
000FA3D2 <AmiBlitz3.ab2@29679> newinitaddr          Ds.l 1
000FA3D6 <AmiBlitz3.ab2@29680> realbssend           Ds.l 1
000FA3D8 <AmiBlitz3.ab2@29681> saved0               Ds.w 1
000FA458 <AmiBlitz3.ab2@29682> lastpath             Ds.b 128
000FA4D8 <AmiBlitz3.ab2@29683> lastpath2            Ds.b 128
000FA5A0 <AmiBlitz3.ab2@29684> fpustackbase         Ds.w 100
000FA5A4 <AmiBlitz3.ab2@29685> 
000FA5A6 <AmiBlitz3.ab2@29686> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000FA5AA <AmiBlitz3.ab2@29687> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000FA5AE <AmiBlitz3.ab2@29688> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000FA5B2 <AmiBlitz3.ab2@29689> rightsidetype        Dc.l 0  ; same as above but right side
000FA5B6 <AmiBlitz3.ab2@29692> trap15temp           Ds.l 1
000FA5BA <AmiBlitz3.ab2@29693> trap15temp2          Ds.l 1
000FA5BE <AmiBlitz3.ab2@29694> templibend           Ds.l 1
000FA5C2 <AmiBlitz3.ab2@29695> tempdata1start       Ds.l 1
000FA5C6 <AmiBlitz3.ab2@29696> stacktrack           Ds.l 1
000FA5CA <AmiBlitz3.ab2@29697> pad                  Ds.l 1
000FA6CA <AmiBlitz3.ab2@29698> includetemp          Ds.b 256
000FB0CA <AmiBlitz3.ab2@29699> includetemp2         Ds.b 256*10
000FB0CC <AmiBlitz3.ab2@29700> funccall             Ds.w 1
000FB0D0 <AmiBlitz3.ab2@29703> ptr_resfile          Ds.l 1
000FB0D2 <AmiBlitz3.ab2@29704> button_bin_flags:    Ds.w 1
000FB0D4 <AmiBlitz3.ab2@29705> button_dec_flags:    Ds.w 1
000FB0D8 <AmiBlitz3.ab2@29706> ped_startup_addr:    Ds.l 1
000FB0D9 <AmiBlitz3.ab2@29707> start_without_libs:  Ds.b 1
000FB0DA <AmiBlitz3.ab2@29708> skip_bytes:          Ds.b 1
000FB0DE <AmiBlitz3.ab2@29709> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000FB0E2 <AmiBlitz3.ab2@29710> beforeparameterfetch Ds.l 1
000FB0E6 <AmiBlitz3.ab2@29711> typetocast           Ds.l 1
000FB0E7 <AmiBlitz3.ab2@29712> iserror              Ds.b 1
000FB0E8 <AmiBlitz3.ab2@29713> Even
000FB0EC <AmiBlitz3.ab2@29715> CLIMode:             Dc.l 0
000FB0F0 <AmiBlitz3.ab2@29716> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
